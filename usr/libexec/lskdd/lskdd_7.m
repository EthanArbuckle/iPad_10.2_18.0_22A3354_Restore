uint64_t sub_100B4B234()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v1 = sub_10009A6DC();
  v2 = STACK[0x4CF8];
  *(_DWORD *)v2 = 352798381;
  *(_DWORD *)(v2 + 4) = 492826167;
  *(_QWORD *)(v2 + 8) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 12482) | 0x1080u) + 4218))(v1);
}

uint64_t sub_100B4B280()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  STACK[0x1D350] = 0;
  STACK[0x1D360] = v3 ^ (2142736129
                       * ((v1 - 0x13E142B5D8A4EBDFLL - 2 * ((v1 - 240) & 0xEC1EBD4A275B1511)) ^ 0x9105B54644038118));
  LODWORD(STACK[0x1D358]) = (v0 + 427180620) ^ (2142736129
                                              * ((v1 + 660280353 - 2 * ((v1 - 240) & 0x275B1511)) ^ 0x44038118));
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (v0 ^ 0x313B ^ ((*(_DWORD *)STACK[0x4A78] > 0)
                                                                      * (1409 * (((v0 + 2175) | 0x24A) ^ 0x1B48) - 4120))))
                                          - 12))(v4);
}

uint64_t sub_100B4B350@<X0>(int a1@<W8>)
{
  int v1;
  BOOL v3;

  v3 = a1 != 1 || *(_QWORD *)STACK[0x49F0] == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * ((21294 * (((v1 + 110) ^ v3) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_100B4B38C()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  int32x2_t v21;
  int32x2_t v22;
  int32x2_t v23;
  __int16 v24;
  unint64_t v25;
  unsigned int v26;
  int32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int32x4_t v38;
  int8x16_t v39;
  _QWORD *v40;
  unsigned int v41;
  uint64_t i;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  __int16 v51;
  int8x16x4_t v53;

  v2 = 0;
  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198)) ^ 0x83C25199;
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v3 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  STACK[0xEE88] = 0;
  v12 = 16777619 * ((-2084417127 * v11 + 7) ^ (-2084417127 * v11)) % 7;
  v13 = 16777619 * ((-2084417127 * v11 + 6) ^ (-2084417127 * v11)) % 6;
  v14 = 16777619 * ((-2084417127 * v11 + 5) ^ (-2084417127 * v11)) % 5;
  v15 = 16777619 * ((-2084417127 * v11 + 3) ^ (-2084417127 * v11)) % 3;
  v16 = *(_BYTE *)((unint64_t)&STACK[0xEE88] | v12);
  *(_BYTE *)((unint64_t)&STACK[0xEE88] | v12) = STACK[0xEE8F];
  v17 = *(_BYTE *)((unint64_t)&STACK[0xEE88] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEE88] | v13) = STACK[0xEE8E];
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEE88] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEE88] | v14) = STACK[0xEE8D];
  v19 = STACK[0xEE88];
  LOBYTE(STACK[0xEE88]) = STACK[0xEE8C];
  v20 = *(_BYTE *)((unint64_t)&STACK[0xEE88] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEE88] | v15) = STACK[0xEE8B];
  STACK[0xEE90] = v0;
  v21 = vdup_n_s32(-2084417127 * v11);
  v22.i32[0] = v21.i32[0];
  v22.i32[1] = -2084417127 * v11 + 1;
  LOBYTE(STACK[0xEE8F]) = v16;
  LOBYTE(STACK[0xEE8E]) = v17;
  LOBYTE(STACK[0xEE8D]) = v18;
  v23 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v22, v21), (int8x8_t)v21);
  LOBYTE(STACK[0xEE8C]) = v19;
  LOBYTE(STACK[0xEE8B]) = v20;
  v24 = STACK[0xEE89];
  LOBYTE(STACK[0xEE8A]) = STACK[0xEE88];
  LOWORD(STACK[0xEE88]) = v24;
  STACK[0xEE88] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEE88], (int32x2_t)STACK[0x48C8]);
  v25 = STACK[0xEE90];
  v26 = (-2084417127 * STACK[0xEE90]) ^ v11;
  v27 = vdupq_n_s32(v26);
  v28 = (int32x4_t)xmmword_1015070D0;
  v29 = (int32x4_t)xmmword_1015070E0;
  v30 = (int32x4_t)xmmword_1015070F0;
  v31 = (int32x4_t)xmmword_101507100;
  v32 = *(int8x16_t *)&STACK[0x4660];
  v33 = *(int8x16_t *)&STACK[0x4620];
  v34 = *(int8x16_t *)&STACK[0x4610];
  v35.i64[0] = 0x9393939393939393;
  v35.i64[1] = 0x9393939393939393;
  v36 = *(int8x16_t *)&STACK[0x4650];
  v37 = *(int8x16_t *)&STACK[0x4950];
  v38.i64[0] = 0x1000000010;
  v38.i64[1] = 0x1000000010;
  do
  {
    v39 = *(int8x16_t *)(v25 + v2);
    v53.val[1] = veorq_s8(vqtbl1q_s8(v39, v36), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v30, v27), vsubq_s32(v30, v27))));
    v53.val[0] = veorq_s8(vqtbl1q_s8(v39, v32), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v31, v27), vsubq_s32(v31, v27))));
    v53.val[2] = veorq_s8(vqtbl1q_s8(v39, v33), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v29, v27), vsubq_s32(v29, v27))));
    v53.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v39, v34), (int8x16_t)v27), (int8x16_t)vmulq_s32(vaddq_s32(v28, v27), vsubq_s32(v28, v27)));
    *(int8x16_t *)(v25 + v2) = vmulq_s8(vqtbl4q_s8(v53, v37), v35);
    v2 += 16;
    v31 = vaddq_s32(v31, v38);
    v30 = vaddq_s32(v30, v38);
    v29 = vaddq_s32(v29, v38);
    v28 = vaddq_s32(v28, v38);
  }
  while (v2 != 16);
  v40 = (_QWORD *)(v25 + 8);
  v41 = 1;
  for (i = 3; i > 2; --i)
  {
    v43 = 8 * (16777619 * ((v26 + v41) ^ v26) % v41);
    v44 = *(_QWORD *)(v25 + v43) ^ *v40;
    *v40 = v44;
    v45 = *(_QWORD *)(v25 + v43) ^ v44;
    *(_QWORD *)(v25 + v43) = v45;
    *v40 ^= v45;
    v40 += 0xFFFFFFFFLL;
    --v41;
  }
  v46 = *((_BYTE *)&STACK[0xEE90] + v12);
  *((_BYTE *)&STACK[0xEE90] + v12) = STACK[0xEE97];
  LOBYTE(STACK[0xEE97]) = v46;
  v47 = *((_BYTE *)&STACK[0xEE90] + v13);
  *((_BYTE *)&STACK[0xEE90] + v13) = STACK[0xEE96];
  LOBYTE(STACK[0xEE96]) = v47;
  v48 = *((_BYTE *)&STACK[0xEE90] + v14);
  *((_BYTE *)&STACK[0xEE90] + v14) = STACK[0xEE95];
  LOBYTE(STACK[0xEE95]) = v48;
  v49 = STACK[0xEE90];
  LOBYTE(STACK[0xEE90]) = STACK[0xEE94];
  v50 = *((_BYTE *)&STACK[0xEE90] + v15);
  *((_BYTE *)&STACK[0xEE90] + v15) = STACK[0xEE93];
  LOBYTE(STACK[0xEE94]) = v49;
  LOBYTE(STACK[0xEE93]) = v50;
  v51 = STACK[0xEE91];
  LOBYTE(STACK[0xEE92]) = STACK[0xEE90];
  LOWORD(STACK[0xEE90]) = v51;
  STACK[0xEE90] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEE90], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x49F0] = STACK[0xEE90] ^ STACK[0xEE88];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 - 1674869136) & 0x63D47FFD ^ 0x21B5)))();
}

uint64_t sub_100B4B7C4@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;

  *v2 = a1 - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 - 8505) | 0x1003u) + 4215))();
}

uint64_t sub_100B4B7F4()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = v1 ^ v0;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v6 = 2142736129
     * ((~((v2 - 240) | 0x72BFD561B01B67ABLL) + ((v2 - 240) & 0x72BFD561B01B67ABLL)) ^ 0xF05B22922CBC0C5DLL);
  STACK[0x1D350] = 0;
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v6;
  STACK[0x1D360] = v5 ^ v6;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8 * (v1 ^ 0x5D8E ^ (46 * (*(_QWORD *)STACK[0x4A48] == 0))))
                                          - v3
                                          + 4206))(v7);
}

uint64_t sub_100B4B8B4@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1;
  v4 = (v1 + 1226157436) & 0xB6EA5276;
  v5 = STACK[0x6AD8];
  v6 = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  v7 = 2142736129 * ((((v2 - 240) | 0x268EE926813C6D21) - ((v2 - 240) & 0x268EE926813C6D21)) ^ 0x5B95E12AE264F928);
  LODWORD(STACK[0x1D358]) = (v3 + 427180619) ^ v7;
  STACK[0x1D360] = v6 ^ v7;
  STACK[0x1D350] = a1;
  v8 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((int)v3 + 15520)) - v4 + 4206))(v8);
}

uint64_t sub_100B4B96C()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100B4B97C()
{
  int v0;

  STACK[0xC768] -= 16;
  *(_DWORD *)STACK[0x46E0] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((4086 * (LODWORD(STACK[0x9D18]) != -1926392729)) ^ (v0 + 6021)))
                            - 8))();
}

uint64_t sub_100B4B9E0()
{
  int v0;

  *(_BYTE *)STACK[0x4820] = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6039)) - 8))();
}

uint64_t sub_100B4BA0C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_QWORD *)STACK[0x46E8] != 0) * (((v0 + 2777) ^ 0xBCC) - 4207)) ^ (v0 + 14642)))
                            - 8))();
}

uint64_t sub_100B4BA54@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v5 = 2142736129 * ((v2 - 240) ^ 0x7D1B080C63589409);
  STACK[0x1D350] = a1;
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v5;
  STACK[0x1D360] = v4 ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8 * (int)(v1 ^ 0x198 ^ (22707 * ((_DWORD)v1 != -2094579914))))
                                          - ((v1 + 2764) ^ 0x1B47)))(v6);
}

uint64_t sub_100B4BB00()
{
  int v0;
  int v1;
  int v2;

  if (*(_BYTE *)STACK[0x4820] & 1 | (v1 != -1926392729))
    v2 = v1;
  else
    v2 = 1926392753;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((11303 * (v2 != 10 * (v0 ^ 0x126A) - 1926416139)) ^ v0))
                            - (v0 - 2777)
                            + 4202))();
}

uint64_t sub_100B4BB94@<X0>(unint64_t a1@<X8>)
{
  unsigned __int8 v1;
  int v2;
  int v3;
  char v4;
  unint64_t v5;
  BOOL v6;

  LODWORD(STACK[0xE05C]) = v3;
  STACK[0xE060] = a1;
  STACK[0xE068] = a1;
  STACK[0xA830] = v5;
  LOBYTE(STACK[0x7703]) = v1;
  LOBYTE(STACK[0xB467]) = v4;
  v6 = v1 == ((7 * (v2 ^ 0x28)) ^ 0x76);
  LOBYTE(STACK[0xE077]) = v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((250 * (((3 * (v2 ^ 0xCB)) ^ v6) & 1)) ^ v2)))();
}

uint64_t sub_100B4BC30()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6564)) - 8))();
}

uint64_t sub_100B4BC54@<X0>(unint64_t a1@<X8>)
{
  int v1;

  STACK[0x8C10] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((28 * (STACK[0xA948] != 0)) ^ (v1 + 6126))) - 12))();
}

uint64_t sub_100B4BC94()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B4BCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;
  unint64_t v8;

  v7 = STACK[0xB2C0];
  LODWORD(STACK[0x8CDC]) = *(_DWORD *)STACK[0xB2C0];
  v8 = STACK[0x7678];
  STACK[0xC470] = v7 + 680;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                                  + 8 * (int)(((v7 + 696 <= v8 - 0x55058F428EADA9F4) * ((((v6 + 104124169) & 0xF9CB33BB) + 11565) ^ 0x47BC)) ^ (v6 + 13146))))(2291641619, 2003327990, a3, -18803, 18798, a6, 22788);
}

uint64_t sub_100B4BD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ (7435 * ((unint64_t)(a6 + v6 + 0x55058F428EADACACLL) > 0xF)))) - ((v7 - 550456682) & 0x20CF1D77 ^ 0x1072)))(a1, a2, 2207309558, a3, a4, 17723, a5, 696123488);
}

uint64_t sub_100B4BDF0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 4661)) - 4))();
}

uint64_t sub_100B4BE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v14 = v12 + 4 * ((v8 ^ a7) - v9);
  *(_OWORD *)(v11 + v14) = *(_OWORD *)(v7 + v14);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 == 60) * v13) ^ v10)) - 4))();
}

uint64_t sub_100B4BE4C(int a1, unsigned int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = ((v6 + a1) & a2 ^ a4) + v7;
  *(_DWORD *)(v4 + 4 * v8) = *(_DWORD *)(v5 + 4 * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 ^ (16 * (v8 == 0)))) - 4))();
}

uint64_t sub_100B4BE80()
{
  int v0;
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = v2 + v1;
  v4 = (v0 ^ 0x66FF)
     - 1789742704
     + ((v0 - 20917 + (LODWORD(STACK[0xA418]) ^ 0xCE0BEBF4) + 838075286) ^ ((LODWORD(STACK[0xA418]) ^ 0x2A25FE50)
                                                                          - 707133008) ^ ((LODWORD(STACK[0xA418]) ^ 0x690381C3)
                                                                                        - 1761837507));
  v5 = v4 < v1;
  v6 = v3 < v4;
  if (v2 > 0xF7DADE02 != v5)
    v6 = v5;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((86 * v6) ^ v0)))();
}

uint64_t sub_100B4BF58()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;

  STACK[0x7CA8] = STACK[0x8458] + v1;
  v2 = STACK[0x6AD8];
  STACK[0x9AE0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (int)(v0 ^ 0x101E)) - 4))(5121);
}

uint64_t sub_100B4C02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((119 * (((v6 ^ 0x77 ^ ((unint64_t)(v5 - 0x55058F428EADACACLL + v7) < 0x10)) & 1) == 0)) ^ v6)) - 4))(21300, 13879, 2207309558, 21315, a5, 17723, 4867, 696123488);
}

uint64_t sub_100B4C0AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  *(_OWORD *)(v7 + 4 * v9) = *(_OWORD *)(v8 + 4 * v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((((v10 ^ a7) * v11) ^ 0x4976) + v9 == 64) * a1) ^ v10))
                            - 4))();
}

uint64_t sub_100B4C0EC(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_DWORD *)(v5 + 4 * v8) = *(_DWORD *)(v6 + 4 * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v8 == 63) * a4) ^ v7)) - (v7 + a2) + a5))();
}

uint64_t sub_100B4C124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v3 - 0x55058F428EADAA04) = *(_DWORD *)(a1 + 680);
  *(_DWORD *)(v3 - 0x55058F428EADAA00) = *(_DWORD *)(a1 + 684);
  *(_QWORD *)(v3 - 0x55058F428EADA9FCLL) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((109 * ((v2 - 1756645917) & 0x68B430EE ^ 0x3003) - 7512)
                                          * (a1 + 968 <= (unint64_t)(v3 - 0x55058F428EADA8E4))) ^ v2))
                            - 8))();
}

uint64_t sub_100B4C1D0@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (v3 | (4
                                     * (a2
                                      + 0x55058F428EADAA34
                                      + v2
                                      + (unint64_t)((v3 + 2087654212) & a1)
                                      - 3582 < (unint64_t)((v3 - 1763770236) & 0x6920FF7F) - 7727)))))();
}

uint64_t sub_100B4C23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;

  v13 = v8 - 1;
  *(_DWORD *)(v9 + 4 * v13) = *(_DWORD *)(v10 + 4 * v13);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v13 == 0) * (((v11 + a8) & v12) + 10050)) ^ v11)))();
}

uint64_t sub_100B4C274()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * ((55
                                                                 * ((((unint64_t)(v0 - 0x55058F428EADACACLL + v2) < 0x10) ^ (v1 - 1)) & 1)) ^ v1))
                                                   - 4))(4294960723, 5779);
}

uint64_t sub_100B4C2DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  *(_OWORD *)(v3 + 4 * v2) = *(_OWORD *)(v4 + 4 * v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((30024
                                          * ((((((((_DWORD)v5 + v6) | 0x490u) ^ a2) + v2 - v5) | (v5
                                                                                                - (((((_DWORD)v5 + v6) | 0x490u) ^ a2)
                                                                                                 + v2))) & 0x8000000000000000) == 0)) ^ ((int)v5 + v7)))
                            - 4))();
}

uint64_t sub_100B4C330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_DWORD *)(v6 + 4 * v9) = *(_DWORD *)(v7 + 4 * v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 == 63) * (v8 + a6)) ^ v8)) - 4))();
}

uint64_t sub_100B4C368()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 4939)))();
}

uint64_t sub_100B4C388()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v6 = 4 * (((v2 + 1569) ^ v5) - v0);
  *(_OWORD *)(v4 + v6) = *(_OWORD *)(v1 + v6);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((39 * (v0 == 60)) ^ v3)))();
}

uint64_t sub_100B4C3C4@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  int v6;

  *(_QWORD *)(v3 - 0x55058F428EADA8F4) = a1[119];
  *(_QWORD *)(v3 - 0x55058F428EADA8ECLL) = v2;
  STACK[0xE080] = (unint64_t)(a1 + 215);
  v4 = a1[215];
  STACK[0xE088] = (unint64_t)(a1 + 217);
  if (a1[217])
    v5 = v4 == 0;
  else
    v5 = 1;
  v6 = !v5;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (int)((v6 * ((((v1 + 1542955219) & 0xA4087FFD) + 6724) ^ v1 ^ 0x6E1)) ^ v1)))();
}

uint64_t sub_100B4C470()
{
  int v0;
  unsigned __int8 *v1;
  _BYTE *v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = *v2 == 1 && *v1 == (7 * (v0 ^ 0x32) - 117);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21790 * v5) ^ v0)) - 12))(v3);
}

uint64_t sub_100B4C4BC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  _BOOL4 v15;
  int v16;

  v3 = v1 ^ 0x50F;
  v4 = *(_DWORD *)(a1 + 1712) + 249893742;
  v5 = (v4 ^ 0xD3B59481) & (2 * (v4 & 0xE235D922)) ^ v4 & 0xE235D922;
  v6 = ((2 * (v4 ^ 0xD7DC8BA5 ^ (v3 + 1008520471) & 0xC3E33DE5)) ^ 0x6BD2DFC6) & (v4 ^ 0xD7DC8BA5 ^ (v3 + 1008520471) & 0xC3E33DE5) ^ (2 * (v4 ^ 0xD7DC8BA5 ^ (v3 + 1008520471) & 0xC3E33DE5)) & 0x35E96FE2;
  v7 = v6 ^ 0x14292021;
  v8 = (v6 ^ 0x1C04D80) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0xD7A5BF8C) & v7 ^ (4 * v7) & 0x35E96FE0;
  v10 = (v9 ^ 0x15A12F80) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x20484063)) ^ 0x5E96FE30) & (v9 ^ 0x20484063) ^ (16 * (v9 ^ 0x20484063)) & 0x35E96FE0;
  v12 = v10 ^ 0x35E96FE3 ^ (v11 ^ 0x14806EC3) & (v10 << 8);
  v13 = v4 ^ (2
            * ((v12 << 16) & 0x35E90000 ^ v12 ^ ((v12 << 16) ^ 0x6FE30000) & (((v11 ^ 0x216901C3) << 8) & 0x35E90000 ^ 0x14800000 ^ (((v11 ^ 0x216901C3) << 8) ^ 0x696F0000) & (v11 ^ 0x216901C3))));
  *(_DWORD *)(v2 - 0x55058F428EADA7A8) = v13 ^ 0x4F089283;
  v14 = *(_DWORD *)(a1 + 1728) - 249893744;
  *(_DWORD *)(v2 - 0x55058F428EADA768) = v14;
  v15 = v14 < 0x3D
     && (((v13 ^ 0xD1910B3D) + 1634100802) ^ ((v13 ^ 0x31A31FF) - 1276289916) ^ ((v13 ^ 0x10AE3C26) - 1604759205))
      - 1926392729 < 0x3D;
  if (v15)
    v16 = -1926392729;
  else
    v16 = 1926417710;
  LODWORD(STACK[0xE094]) = v16;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25553 * v15) ^ v3)) - 12))(43);
}

uint64_t sub_100B4C738@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((25 * (*(unsigned __int8 *)(a1 + 1744) == ((v1 + 18) ^ 0x76))) ^ v1)))();
}

uint64_t sub_100B4C78C()
{
  int v0;
  _BYTE *v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((*v1 != 1) * ((v0 ^ 0x323C) - 4289 + ((v0 - 12791) | 0x1022))) ^ v0))
                            - 12))();
}

uint64_t sub_100B4C7DC()
{
  int v0;
  _BYTE *v1;

  *v1 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 8661)) - 12))();
}

uint64_t sub_100B4C7FC@<X0>(uint64_t a1@<X8>)
{
  int v1;

  STACK[0xE098] = a1 + 0x332AA6337A971AFALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * ((23834 * (*(_QWORD *)(a1 + 1760) != 0)) ^ (v1 + 1247)))
                            - ((v1 + 1222) ^ 0x1538)))();
}

uint64_t sub_100B4C868()
{
  int v0;
  _BYTE *v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((*v1 != 1) * (((v0 - 5368) | 0x1032) + (v0 ^ 0xFFFFFACF))) ^ v0))
                            - 4))();
}

uint64_t sub_100B4C8B4()
{
  _BYTE *v0;
  int v1;

  *v0 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 4014)) - 8))();
}

uint64_t sub_100B4C8D8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 8689)) - (v0 - 4095) + 107))();
}

uint64_t sub_100B4C90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;

  LODWORD(STACK[0xA100]) = v7;
  v10 = *(_DWORD *)(a6 + 24);
  *(_DWORD *)(v9 - 0x55058F428EADAA0CLL) = v10;
  v11 = (v10 + v8)
      - 0xD903F87B43820F0
      - (((unint64_t)(v10 + v8) << (((v6 - 102) | 0x42u) - 82)) & 0x978FBE20);
  v12 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * (v6 ^ 0x1645)))(a1, a2, a3, a4, v11, 0x58292A32636B72E6, a5, 0x2AB629F33171E5F1);
}

uint64_t sub_100B4C9DC(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * ((6041 * ((v1 ^ 0xB680E69F) > 0x7952F8B7)) ^ (v1 | 0xF1)))
                                                   - 8))(a1, 2013256049);
}

uint64_t sub_100B4CA60()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((23 * (v0 == ((STACK[0x6508] - 3443) | 0x20E0) - 9187)) ^ LODWORD(STACK[0x3378]))))();
}

uint64_t sub_100B4CAA0@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0xB2C0];
  LODWORD(STACK[0xBCD4]) = LODWORD(STACK[0xE05C]) + (a1 ^ 0x8D2DB784 ^ *(_DWORD *)STACK[0xB2C0]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((*(_BYTE *)(v1 + 1768) == 0) * ((a1 + 1196773267) & 0xB8AA9CFF ^ 0x1796)) ^ a1))
                            - 8))();
}

uint64_t sub_100B4CB30()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((*(_DWORD *)(v1 + 24) - 249893743) < 0x14)
                                          * (((v0 ^ 0xB39) + 16861) ^ 0x6A08)) ^ (v0 + 17498)))
                            - 8))();
}

uint64_t sub_100B4CB80()
{
  int v0;
  int v1;
  unint64_t v2;

  LODWORD(STACK[0x6A80]) = v1;
  STACK[0x6A70] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((125
                                          * (((*(_QWORD *)STACK[0x4A48] == 0) ^ (9 * (v0 ^ 0x3C)
                                                                                                  + v0
                                                                                                  - 44
                                                                                                  + 1)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100B4CBFC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  int v7;

  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  v4 = (_QWORD *)STACK[0x4A48];
  STACK[0xEE28] = STACK[0x4A48];
  *(_DWORD *)(v1 + 784) = -299994601
                        - 1705718857 * (((v2 - 240) & 0xAD967AFA | ~((v2 - 240) | 0xAD967AFA)) ^ 0x6FFB5A5C)
                        + v0
                        - 26;
  *(_QWORD *)(v1 + 792) = &STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  if (*(_DWORD *)(v1 + 788))
    v6 = 1;
  else
    v6 = *v4 == 0;
  v7 = !v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((5455 * v7) ^ (((v0 - 14) ^ 0x378E ^ (2113 * (v0 ^ 0x1092)))
                                                                      + v0)))
                                          - 8))(v5);
}

uint64_t sub_100B4CCD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t);
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = STACK[0x6AD8];
  v6 = STACK[0x1E28];
  *(_QWORD *)(v3 + 800) = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) ^ STACK[0x1E28];
  *(_QWORD *)(v3 + 784) = a1;
  *(_DWORD *)(v3 + 792) = (v2 + 427180620) ^ v6;
  v7 = v1(v4 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (v2 + 14236)) - 8))(v7);
}

uint64_t sub_100B4CD1C()
{
  uint64_t (*v0)(uint64_t);
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL4 v9;

  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v6 = STACK[0x1FA8];
  *(_DWORD *)(v2 + 792) = (v1 + 427180620) ^ STACK[0x1FA8];
  *(_QWORD *)(v2 + 800) = v5 ^ v6;
  *(_QWORD *)(v2 + 784) = 0;
  v7 = v0(v3 - 240);
  v9 = *(_DWORD *)STACK[0x4A78] == (v1 ^ 0xF4) - 8428 + ((v1 - 48) | 0x24) && *(_QWORD *)STACK[0x49F0] != 0;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((54 * v9) | v1 ^ 0x228A)))(v7);
}

uint64_t sub_100B4CDAC()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  __int16 v20;
  int v21;
  int v22;
  unint64_t v23;
  unsigned int v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  unint64_t v29;
  unsigned int v30;
  uint64_t i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  int32x4_t v41;
  int8x16_t v42;
  int32x4_t v43;
  uint16x8_t v44;
  uint8x16_t v45;
  uint16x8_t v46;
  uint16x8_t v47;
  int8x16x4_t v49;

  v2 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198));
  v3 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v2 ^ 0x83C25199) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v2 ^ 0x83C25199;
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v3 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  STACK[0xEF88] = 0;
  LODWORD(v9) = -2084417127 * v10;
  v11 = 16777619 * ((-2084417127 * v10 + 7) ^ (-2084417127 * v10)) % 7;
  v12 = *(_BYTE *)((unint64_t)&STACK[0xEF88] | v11);
  *(_BYTE *)((unint64_t)&STACK[0xEF88] | v11) = 0;
  LOBYTE(STACK[0xEF8F]) = v12;
  v13 = 16777619 * ((-2084417127 * v10 + 6) ^ (-2084417127 * v10)) % 6;
  v14 = *(_BYTE *)((unint64_t)&STACK[0xEF88] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEF88] | v13) = STACK[0xEF8E];
  LOBYTE(STACK[0xEF8E]) = v14;
  v15 = 16777619 * ((-2084417127 * v10 + 5) ^ (-2084417127 * v10)) % 5;
  v16 = *(_BYTE *)((unint64_t)&STACK[0xEF88] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEF88] | v15) = STACK[0xEF8D];
  LOBYTE(STACK[0xEF8D]) = v16;
  v17 = STACK[0xEF88];
  LOBYTE(STACK[0xEF88]) = STACK[0xEF8C];
  LOBYTE(STACK[0xEF8C]) = v17;
  v18 = 16777619 * ((-2084417127 * v10 + 3) ^ (-2084417127 * v10)) % 3;
  v19 = *(_BYTE *)((unint64_t)&STACK[0xEF88] | v18);
  *(_BYTE *)((unint64_t)&STACK[0xEF88] | v18) = STACK[0xEF8B];
  LOBYTE(STACK[0xEF8B]) = v19;
  v20 = STACK[0xEF89];
  LOBYTE(STACK[0xEF8A]) = STACK[0xEF88];
  LOWORD(STACK[0xEF88]) = v20;
  v21 = (v9 * v9) ^ v9;
  LODWORD(v9) = (v9 + v9 * v9) ^ v9;
  v22 = v9 + 16777619 * LODWORD(STACK[0xEF8C]);
  LODWORD(STACK[0xEF88]) = v21 + 16777619 * LODWORD(STACK[0xEF88]);
  LODWORD(STACK[0xEF8C]) = v22;
  v23 = STACK[0xEF88] ^ v0;
  v24 = 899433627 * (v23 - v21);
  LODWORD(v23) = 899433627 * (HIDWORD(v23) - v9);
  LODWORD(STACK[0xEF90]) = v24;
  LODWORD(STACK[0xEF94]) = v23;
  LOBYTE(STACK[0xEF91]) = v24;
  LOBYTE(STACK[0xEF90]) = BYTE2(v24);
  LOBYTE(STACK[0xEF92]) = BYTE1(v24);
  LODWORD(v9) = HIBYTE(v24);
  v25 = (_BYTE *)((unint64_t)&STACK[0xEF90] | v18);
  LOBYTE(v24) = *v25;
  *v25 = v9;
  LOBYTE(STACK[0xEF93]) = v24;
  LOBYTE(v9) = STACK[0xEF90];
  LOBYTE(STACK[0xEF90]) = v23;
  LOBYTE(STACK[0xEF94]) = v9;
  v26 = (_BYTE *)((unint64_t)&STACK[0xEF90] | v15);
  LOBYTE(v25) = *v26;
  *v26 = BYTE1(v23);
  LOBYTE(STACK[0xEF95]) = (_BYTE)v25;
  v27 = (_BYTE *)((unint64_t)&STACK[0xEF90] | v13);
  LOBYTE(v26) = *v27;
  *v27 = BYTE2(v23);
  LOBYTE(STACK[0xEF96]) = (_BYTE)v26;
  v28 = (_BYTE *)((unint64_t)&STACK[0xEF90] | v11);
  LOBYTE(v11) = *(_BYTE *)((unint64_t)&STACK[0xEF90] | v11);
  *v28 = BYTE3(v23);
  LOBYTE(STACK[0xEF97]) = v11;
  v29 = STACK[0xEF90];
  v30 = (-2084417127 * STACK[0xEF90]) ^ v10;
  for (i = 1; i != 2; ++i)
  {
    v32 = 8 * i;
    v33 = 8 * (16777619 * ((v30 + (_DWORD)i) ^ v30) % i);
    v34 = *(_QWORD *)(v29 + v33) ^ *(_QWORD *)(v29 + 8 * i);
    *(_QWORD *)(v29 + v32) = v34;
    v35 = *(_QWORD *)(v29 + v33) ^ v34;
    *(_QWORD *)(v29 + v33) = v35;
    *(_QWORD *)(v29 + v32) = *(_QWORD *)(v29 + 8 * i) ^ v35;
  }
  v36 = 0;
  v37 = (__n128)xmmword_1015070D0;
  v38 = (__n128)xmmword_1015070E0;
  v39 = (__n128)xmmword_1015070F0;
  v40 = (__n128)xmmword_101507100;
  v41 = vdupq_n_s32(v30);
  v42 = *(int8x16_t *)&STACK[0x4950];
  v43.i64[0] = 0x1000000010;
  v43.i64[1] = 0x1000000010;
  v44.i64[0] = 0x9B009B009B009BLL;
  v44.i64[1] = 0x9B009B009B009BLL;
  do
  {
    v45 = *(uint8x16_t *)(v29 + v36);
    v46 = vmovl_high_u8(v45);
    v47 = vmovl_u8(*(uint8x8_t *)v45.i8);
    v49.val[1] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v39, v41), vsubq_s32((int32x4_t)v39, v41)), (int8x16_t)v41), (int8x16_t)vmull_high_u16(v47, v44));
    v49.val[2] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v38, v41), vsubq_s32((int32x4_t)v38, v41)), (int8x16_t)v41), (int8x16_t)vmull_u16(*(uint16x4_t *)v46.i8, (uint16x4_t)0x9B009B009B009BLL));
    v49.val[0] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v40, v41), vsubq_s32((int32x4_t)v40, v41)), (int8x16_t)v41), (int8x16_t)vmull_u16(*(uint16x4_t *)v47.i8, (uint16x4_t)0x9B009B009B009BLL));
    v49.val[3] = veorq_s8(veorq_s8((int8x16_t)vmulq_s32(vaddq_s32((int32x4_t)v37, v41), vsubq_s32((int32x4_t)v37, v41)), (int8x16_t)v41), (int8x16_t)vmull_high_u16(v46, v44));
    *(int8x16_t *)(v29 + v36) = vqtbl4q_s8(v49, v42);
    v36 += 16;
    v40 = (__n128)vaddq_s32((int32x4_t)v40, v43);
    v39 = (__n128)vaddq_s32((int32x4_t)v39, v43);
    v38 = (__n128)vaddq_s32((int32x4_t)v38, v43);
    v37 = (__n128)vaddq_s32((int32x4_t)v37, v43);
  }
  while (v36 != 16);
  *(_QWORD *)STACK[0x49F0] = v29;
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128))(STACK[0x6AD8] + 8 * (v1 + 8594)))(v37, v38, v39, v40);
}

uint64_t sub_100B4D1AC()
{
  int v0;
  _DWORD *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *v1 = (((v2 - 116) | 0x80) ^ 0x1083) + v0;
  v4 = STACK[0x6AD8];
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 13));
  v6 = 2142736129 * ((~(v3 - 240) & 0x7E6851004955409CLL | (v3 - 240) & 0x8197AEFFB6AABF63) ^ 0x373590C2A0DD495);
  LODWORD(STACK[0x1D358]) = (v2 + 427180632) ^ v6;
  STACK[0x1D350] = 0;
  STACK[0x1D360] = v5 ^ v6;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((v2 + 13) ^ 0x3799 ^ (30262
                                                                             * (*(_DWORD *)(STACK[0x4CF8] + 4) != 492826167))))
                                          - 12))(v7);
}

uint64_t sub_100B4D2BC()
{
  int v0;
  int v1;
  int v2;
  uint64_t (*v3)(void);

  v2 = *(_DWORD *)STACK[0x60B8];
  STACK[0x6AB0] = *(_QWORD *)STACK[0x60C0];
  STACK[0x6AA0] = v2 & 0x6A87B1E0;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 8776)) - ((v1 + 8776) ^ 0x15BFu) + 9973);
  LODWORD(STACK[0x6A90]) = v0 - 249893744;
  LODWORD(STACK[0x6AC0]) = v0;
  return v3();
}

uint64_t sub_100B4D348(uint64_t a1, uint64_t a2, int a3, unsigned int a4, int a5, unint64_t a6, unsigned int a7)
{
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;

  v11 = v8 + 1;
  v12 = v8 + 1 + a7 < v7;
  if (v7 < a7 != v11 > (((v9 + a3) | 0x1000) ^ a4))
    v12 = v7 < a7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v12 * a5) ^ v9)) - ((5 * (v9 ^ v10)) ^ a6)))();
}

uint64_t sub_100B4D3A8@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_DWORD *)(a2 + 24 * v3) - v6 == 65 * (v4 ^ v5) + a1) * ((v4 ^ v5) + v2)) ^ v4))
                            - 12))();
}

uint64_t sub_100B4D3EC@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v2 + 878442204) ^ (a1 + 24 * v1 == -4)) & 1) == 0)
                                          * ((v2 + 22658) ^ 0x5929)) ^ (v2 + 22658)))
                            - 8))();
}

uint64_t sub_100B4D448()
{
  int v0;

  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v0 & 0xCBA418FF) + 5602))
                                                  - 8))(LODWORD(STACK[0x6A90]), 2303862270);
}

uint64_t sub_100B4D4EC(unsigned int a1, int a2)
{
  int v2;
  int v3;
  int v4;
  char v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unsigned int v22;

  v19 = v6 + a1;
  v20 = *(_BYTE *)(v19 + v10);
  v21 = (((((v19 ^ v7) & 0x7FFFFFFF) * v13) >> (v5 + v14)) ^ (((v19 ^ v7) & 0x7FFFFFFF) * v13))
      * v13;
  LOBYTE(v21) = v20 ^ *(_BYTE *)(v12 + a1) ^ *(_BYTE *)(v18 + (v21 >> 24)) ^ *(_BYTE *)((v21 >> 24) + v11 + 1) ^ *(_BYTE *)(v9 + (v21 >> 24)) ^ v21;
  v22 = ((v21 ^ (-63 * BYTE3(v21))) & 0xFC | (v21 ^ ~(-63 * BYTE3(v21)) | 0xFFFFFF00) & (a2 ^ v15)) ^ v16;
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a1 == 0) * v17) ^ v8)) - 8))(a1 - 1, (v22 - (v2 & (2 * v22)) + v3) ^ v4);
}

uint64_t sub_100B4D598(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;

  v4 = (a3 ^ (v3 + 12) ^ 0x746D8676) & ((a3 >> 4) ^ 0xF4EFCD4A) ^ (((v3 + 1447253673) & 0xA9BCBFFA) + 177281857) & (a3 >> 4);
  v5 = ((v4 & 0x9C2E653D ^ 0x842E252C) + (v4 ^ 0x18104213) - ((v4 ^ 0x18104213) & 0x9C2E653D)) ^ 0x4B40989B;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27 * (((v5 | (v5 >> 2)) & 3) == 0)) ^ (v3 + 5771)))
                            - 12))();
}

uint64_t sub_100B4D6A4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  STACK[0x1D350] = 0;
  v4 = STACK[0x1FA0];
  LODWORD(STACK[0x1D358]) = (v0 + 427180620) ^ STACK[0x1FA0];
  STACK[0x1D360] = v3 ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((*(_DWORD *)STACK[0x4A78] > ((v0 - 1384471187) & 0x52855FFB) - 5611)
                                                   * (((v0 + 1195912564) & 0xB8B7D27F) + 2063)) ^ (v0 + 14272))))(v5);
}

uint64_t sub_100B4D758()
{
  int v0;
  int v1;
  _BOOL4 v3;

  v3 = v0 == 1 && *(_QWORD *)STACK[0x49F0] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v3 * (((v1 - 1451) | 0x36) + 26180)) ^ v1))
                            - (v1 + 683495995)
                            + 683501602))();
}

uint64_t sub_100B4D7B0@<X0>(unsigned int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  int32x2_t v21;
  int32x2_t v22;
  int32x2_t v23;
  __int16 v24;
  unint64_t v25;
  unsigned int v26;
  int32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int32x4_t v30;
  int32x4_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int32x4_t v38;
  int8x16_t v39;
  _QWORD *v40;
  unsigned int v41;
  uint64_t i;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  __int16 v51;
  int8x16x4_t v53;

  v2 = 0;
  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x83C25198));
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v3 ^ 0x83C25199) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3 ^ 0x83C25199;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v9;
  v11 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v10 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v10;
  STACK[0xEEA8] = 0;
  STACK[0xEEB0] = v1;
  v12 = 16777619 * ((-2084417127 * v11 + 7) ^ (-2084417127 * v11)) % 7;
  v13 = 16777619 * ((-2084417127 * v11 + 6) ^ (-2084417127 * v11)) % 6;
  v14 = 16777619 * ((-2084417127 * v11 + 5) ^ (-2084417127 * v11)) % 5;
  v15 = 16777619 * ((-2084417127 * v11 + 3) ^ (-2084417127 * v11)) % 3;
  v16 = *(_BYTE *)((unint64_t)&STACK[0xEEA8] | v12);
  *(_BYTE *)((unint64_t)&STACK[0xEEA8] | v12) = STACK[0xEEAF];
  v17 = *(_BYTE *)((unint64_t)&STACK[0xEEA8] | v13);
  *(_BYTE *)((unint64_t)&STACK[0xEEA8] | v13) = STACK[0xEEAE];
  v18 = *(_BYTE *)((unint64_t)&STACK[0xEEA8] | v14);
  *(_BYTE *)((unint64_t)&STACK[0xEEA8] | v14) = STACK[0xEEAD];
  v19 = STACK[0xEEA8];
  LOBYTE(STACK[0xEEA8]) = STACK[0xEEAC];
  v20 = *(_BYTE *)((unint64_t)&STACK[0xEEA8] | v15);
  *(_BYTE *)((unint64_t)&STACK[0xEEA8] | v15) = STACK[0xEEAB];
  v21 = vdup_n_s32(-2084417127 * v11);
  v22.i32[0] = v21.i32[0];
  v22.i32[1] = -2084417127 * v11 + 1;
  LOBYTE(STACK[0xEEAF]) = v16;
  LOBYTE(STACK[0xEEAE]) = v17;
  LOBYTE(STACK[0xEEAD]) = v18;
  v23 = (int32x2_t)veor_s8((int8x8_t)vmul_s32(v22, v21), (int8x8_t)v21);
  LOBYTE(STACK[0xEEAC]) = v19;
  LOBYTE(STACK[0xEEAB]) = v20;
  v24 = STACK[0xEEA9];
  LOBYTE(STACK[0xEEAA]) = STACK[0xEEA8];
  LOWORD(STACK[0xEEA8]) = v24;
  STACK[0xEEA8] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEEA8], (int32x2_t)STACK[0x48C8]);
  v25 = STACK[0xEEB0];
  v26 = (-2084417127 * STACK[0xEEB0]) ^ v11;
  v27 = vdupq_n_s32(v26);
  v28 = (int32x4_t)xmmword_1015070D0;
  v29 = (int32x4_t)xmmword_1015070E0;
  v30 = (int32x4_t)xmmword_1015070F0;
  v31 = (int32x4_t)xmmword_101507100;
  v32 = *(int8x16_t *)&STACK[0x4660];
  v33 = *(int8x16_t *)&STACK[0x4620];
  v34 = *(int8x16_t *)&STACK[0x4610];
  v35.i64[0] = 0x9393939393939393;
  v35.i64[1] = 0x9393939393939393;
  v36 = *(int8x16_t *)&STACK[0x4650];
  v37 = *(int8x16_t *)&STACK[0x4950];
  v38.i64[0] = 0x1000000010;
  v38.i64[1] = 0x1000000010;
  do
  {
    v39 = *(int8x16_t *)(v25 + v2);
    v53.val[1] = veorq_s8(vqtbl1q_s8(v39, v36), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v30, v27), vsubq_s32(v30, v27))));
    v53.val[0] = veorq_s8(vqtbl1q_s8(v39, v32), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v31, v27), vsubq_s32(v31, v27))));
    v53.val[2] = veorq_s8(vqtbl1q_s8(v39, v33), veorq_s8((int8x16_t)v27, (int8x16_t)vmulq_s32(vaddq_s32(v29, v27), vsubq_s32(v29, v27))));
    v53.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v39, v34), (int8x16_t)v27), (int8x16_t)vmulq_s32(vaddq_s32(v28, v27), vsubq_s32(v28, v27)));
    *(int8x16_t *)(v25 + v2) = vmulq_s8(vqtbl4q_s8(v53, v37), v35);
    v2 += 16;
    v31 = vaddq_s32(v31, v38);
    v30 = vaddq_s32(v30, v38);
    v29 = vaddq_s32(v29, v38);
    v28 = vaddq_s32(v28, v38);
  }
  while (v2 != 16);
  v40 = (_QWORD *)(v25 + 8);
  v41 = 1;
  for (i = 3; i > 2; --i)
  {
    v43 = 8 * (16777619 * ((v26 + v41) ^ v26) % v41);
    v44 = *(_QWORD *)(v25 + v43) ^ *v40;
    *v40 = v44;
    v45 = *(_QWORD *)(v25 + v43) ^ v44;
    *(_QWORD *)(v25 + v43) = v45;
    *v40 ^= v45;
    v40 += 0xFFFFFFFFLL;
    --v41;
  }
  v46 = *((_BYTE *)&STACK[0xEEB0] + v12);
  *((_BYTE *)&STACK[0xEEB0] + v12) = STACK[0xEEB7];
  LOBYTE(STACK[0xEEB7]) = v46;
  v47 = *((_BYTE *)&STACK[0xEEB0] + v13);
  *((_BYTE *)&STACK[0xEEB0] + v13) = STACK[0xEEB6];
  LOBYTE(STACK[0xEEB6]) = v47;
  v48 = *((_BYTE *)&STACK[0xEEB0] + v14);
  *((_BYTE *)&STACK[0xEEB0] + v14) = STACK[0xEEB5];
  LOBYTE(STACK[0xEEB5]) = v48;
  v49 = STACK[0xEEB0];
  LOBYTE(STACK[0xEEB0]) = STACK[0xEEB4];
  LOBYTE(STACK[0xEEB4]) = v49;
  v50 = *((_BYTE *)&STACK[0xEEB0] + v15);
  *((_BYTE *)&STACK[0xEEB0] + v15) = STACK[0xEEB3];
  LOBYTE(STACK[0xEEB3]) = v50;
  v51 = STACK[0xEEB1];
  LOBYTE(STACK[0xEEB2]) = STACK[0xEEB0];
  LOWORD(STACK[0xEEB0]) = v51;
  STACK[0xEEB0] = (unint64_t)vmla_s32(v23, (int32x2_t)STACK[0xEEB0], (int32x2_t)STACK[0x48C8]);
  *(_QWORD *)STACK[0x49F0] = STACK[0xEEB0] ^ STACK[0xEEA8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((15874 * (a1 >= ((a1 + 2029835857) & 0x5E45D1FE ^ 0x4C54937D))) ^ (a1 - 683495995)))
                            - 4))();
}

uint64_t sub_100B4DBFC()
{
  int v0;
  _DWORD *v1;
  int v2;

  *v1 = v0 - 1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v2 + 14284)))();
}

uint64_t sub_100B4DC18()
{
  uint64_t (*v0)(uint64_t);
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = STACK[0x1F98];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 13)) ^ STACK[0x1F98];
  STACK[0x1D350] = 0;
  LODWORD(STACK[0x1D358]) = (v1 + 427180632) ^ v4;
  v5 = v0(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((v1 + 13) ^ 0x36CD ^ ((*(_QWORD *)STACK[0x4A48] != 0)
                                                                             * (((v1 + 13) ^ 0x4453) - 3981))))
                                          - 4))(v5);
}

uint64_t sub_100B4DC94@<X0>(unint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t);
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = STACK[0x6AD8];
  v5 = STACK[0x1C38];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) ^ STACK[0x1C38];
  LODWORD(STACK[0x1D358]) = (v2 + 427180619) ^ v5;
  STACK[0x1D350] = a1;
  v6 = v1(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (v2 ^ 0x1FB6 ^ (10619
                                                                      * ((v2 + 1700243293) < 0x67162BF5))))
                                          - 4))(v6);
}

uint64_t sub_100B4DD10()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((((v0 ^ 0xC7C16729) + 943646550) ^ 0x1B7E) * (v1 ^ 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100B4DD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char *v5;
  _BYTE **v6;
  _BYTE *v7;
  _BYTE *v8;
  unint64_t v9;

  v4 = STACK[0xC768];
  v5 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x8D78] = (unint64_t)v5;
  STACK[0x9BE0] = (unint64_t)(v5 + 1784);
  STACK[0xC768] = v4 + 3568;
  STACK[0x9AD0] = 0;
  LODWORD(STACK[0x7DD0]) = 249893743;
  STACK[0xA398] = 0;
  LODWORD(STACK[0x910C]) = 249893743;
  v6 = (_BYTE **)*(&off_1015B46D0 + (int)a3 + 943640210);
  v7 = *v6;
  LOBYTE(STACK[0x1D05A]) = **v6;
  LOBYTE(STACK[0x1D05B]) = v7[1];
  LOBYTE(STACK[0x1D05C]) = v7[2];
  LOBYTE(STACK[0x1D05D]) = v7[3];
  LOBYTE(STACK[0x1D05E]) = v7[4];
  LOBYTE(STACK[0x1D05F]) = v7[5];
  LOBYTE(STACK[0x1D060]) = v7[6];
  LOBYTE(STACK[0x1D061]) = v7[7];
  LOBYTE(STACK[0x1D062]) = v7[8];
  LOBYTE(STACK[0x1D063]) = v7[9];
  LOBYTE(STACK[0x1D064]) = v7[10];
  LOBYTE(STACK[0x1D065]) = v7[11];
  LOBYTE(STACK[0x1D066]) = v7[12];
  LOBYTE(STACK[0x1D067]) = v7[13];
  LOBYTE(STACK[0x1D068]) = v7[14];
  LOBYTE(STACK[0x1D069]) = v7[15];
  LOBYTE(STACK[0x1D06A]) = v7[16];
  LOBYTE(STACK[0x1D06B]) = v7[17];
  LOBYTE(STACK[0x1D06C]) = v7[18];
  LOBYTE(STACK[0x1D06D]) = v7[19];
  LOBYTE(STACK[0x1D06E]) = v7[20];
  LOBYTE(STACK[0x1D06F]) = v7[21];
  LOBYTE(STACK[0x1D070]) = v7[22];
  LOBYTE(STACK[0x1D071]) = v7[23];
  LOBYTE(STACK[0x1D072]) = v7[24];
  LOBYTE(STACK[0x1D073]) = v7[25];
  LOBYTE(STACK[0x1D074]) = v7[26];
  LOBYTE(STACK[0x1D075]) = v7[27];
  LOBYTE(STACK[0x1D076]) = v7[28];
  LOBYTE(STACK[0x1D077]) = v7[29];
  LOBYTE(STACK[0x1D078]) = v7[30];
  LOBYTE(STACK[0x1D079]) = v7[31];
  LOBYTE(STACK[0x1D07A]) = v7[32];
  LOBYTE(STACK[0x1D07B]) = v7[33];
  v8 = *v6;
  LOBYTE(STACK[0x1D07C]) = v8[34];
  LOBYTE(STACK[0x1D07D]) = v8[35];
  LOBYTE(STACK[0x1D07E]) = v8[36];
  LOBYTE(STACK[0x1D07F]) = v8[37];
  LOBYTE(STACK[0x1D080]) = v8[38];
  LOBYTE(STACK[0x1D081]) = v8[39];
  LOBYTE(STACK[0x1D082]) = v8[40];
  LOBYTE(STACK[0x1D083]) = v8[41];
  LOBYTE(STACK[0x1D084]) = v8[42];
  LOBYTE(STACK[0x1D085]) = v8[43];
  LOBYTE(STACK[0x1D086]) = v8[44];
  LOBYTE(STACK[0x1D087]) = v8[45];
  LOBYTE(STACK[0x1D088]) = v8[46];
  LOBYTE(STACK[0x1D089]) = v8[47];
  LOBYTE(STACK[0x1D08A]) = v8[48];
  LOBYTE(STACK[0x1D08B]) = v8[49];
  LOBYTE(STACK[0x1D08C]) = v8[50];
  LOBYTE(STACK[0x1D08D]) = v8[51];
  LOBYTE(STACK[0x1D08E]) = v8[52];
  LOBYTE(STACK[0x1D08F]) = v8[53];
  LOBYTE(STACK[0x1D090]) = v8[54];
  LOBYTE(STACK[0x1D091]) = v8[55];
  LOBYTE(STACK[0x1D092]) = v8[56];
  LOBYTE(STACK[0x1D093]) = v8[57];
  v9 = (*(unsigned int *)(v3 + 28) ^ 0x7FF68DCBFECCE9DALL)
     - 0x7FF68DCB370BB5E1
     + (((unint64_t)*(unsigned int *)(v3 + 28) << (((a3 + 27) | 0x62) ^ (a3 + 126))) & 0x1FD99D3B4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((28734 * (((v9 - a3) | (a3 - v9)) >> 63)) ^ (a3 + 943655451))) - 12))(a1, a2, 28183, 4294955500, 4294951516, -3351327738, &STACK[0x1D05A], 472);
}

uint64_t sub_100B4E078()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12323)) - 12))();
}

uint64_t sub_100B4E098@<X0>(uint64_t a1@<X6>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((29 * (v3 ^ 0x1252)) ^ (v3 - 2162) ^ (*(unsigned __int8 *)(a3 + v4) == *(unsigned __int8 *)(a1 + v4))) & 1) == 0)
                                          * a2) ^ (v3 + 21619)))
                            - 12))();
}

uint64_t sub_100B4E0EC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((4 * (((v1 == 63) ^ (v0 - 1)) & 1)) & 0xBF | ((((v1 == 63) ^ (v0 - 1)) & 1) << 6)) ^ v0))
                            - 12))();
}

uint64_t sub_100B4E128(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, unint64_t a6)
{
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _BOOL4 v10;
  unint64_t v11;

  v10 = v6 < v9;
  v11 = v7 + 1;
  if (v10 == v11 > a6)
    v10 = v11 + v9 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((86 * (((v8 + a5) | 0x1006) ^ 0x1047) + a3) * v10) ^ v8))
                            - 12))();
}

uint64_t sub_100B4E18C()
{
  int v0;

  LOBYTE(STACK[0x97BF]) = 1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 1998)))();
}

uint64_t sub_100B4E1AC()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x7358] = ((v0 + 2690) ^ 0xFFFFFFFFFFFFE50CLL) + *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 2076));
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 9706)))(5121);
}

uint64_t sub_100B4E200()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2D7C])))();
}

uint64_t sub_100B4E22C()
{
  int v0;
  int v1;
  unsigned __int8 v2;
  int v3;

  v3 = v0 ^ 1;
  if (v2 != (v1 - 118))
    v3 = 1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((3249 * v3) ^ (v1 + 1569))))();
}

uint64_t sub_100B4E26C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v1 - 542955263) & 0x205CD6FE ^ 0x5909) * v0) ^ (v1 + 6564)))
                            - 8))();
}

uint64_t sub_100B4E2B8()
{
  int v0;
  char v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * (((((v0 - 6660) | 0x60) ^ (v0 - 7277)) * (v1 == 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100B4E300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v7 - 10616)) - 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)(v7 - 20283 + ((v7 + 842175933) & 0xCDCD7B7B))))(a1, a2, a3, a4, 0xF26FC0784BC7D9E8, 0x58292A32636B72E6, a7, 0x2AB629F33171E5F1);
}

uint64_t sub_100B4E39C()
{
  int v0;
  char *v1;
  _BYTE *v2;

  v1 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] += 64;
  sub_10009ABD4(v1, 0, 0x1CuLL);
  v2 = sub_10009ABD4(v1 + 32, 0, 0x1CuLL);
  return (*(uint64_t (**)(_BYTE *))(STACK[0x6AD8] + 8 * (int)(((v0 + 253579713) & 0xF0E2B62D ^ 0x39A2) + v0)))(v2);
}

uint64_t sub_100B4E448()
{
  _BYTE *v0;
  int v1;
  _BOOL4 v2;

  v2 = (*v0 + (((v1 + 118) | 8) ^ (v1 + 56))) < 0xF6u;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((8 * v2) | (16 * v2) | v1)) - 4))();
}

uint64_t sub_100B4E490()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((23799 * (*(unsigned __int8 *)(v0 + 1) - 58 > 0xFFFFFFF5)) ^ (v1 + 24)))
                            - ((125 * ((v1 + 24) ^ 0x1472u)) ^ 0x249BLL)))();
}

uint64_t sub_100B4E4DC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B4E53C()
{
  _DWORD *v0;
  uint64_t v1;
  int v2;
  int v3;

  *v0 = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((30467
                                          * ((*(_BYTE *)(v1 + 2)
                                                             + 3 * (v3 ^ 0xFC)
                                                             + ((57 * (v3 ^ 0x98)) ^ 0x12)) > 0xF5u)) ^ v3))
                            - 4))();
}

uint64_t sub_100B4E59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  unint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (v8 | (16 * (*(unsigned __int8 *)(v7 + 3) - 58 < 0xFFFFFFF6))))
                            - ((3 * ((v8 - 1075609232) & (a7 + 3020) ^ 0x33FCu)) ^ v9)))();
}

uint64_t sub_100B4E5E8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B4E644()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  *(_DWORD *)(v0 + 4) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((2421 * (*(unsigned __int8 *)(v1 + 4) - 58 > 0xFFFFFFF5)) ^ v3))
                            - ((v3 - 937566579) & 0x37E1FB69 ^ 0x202CLL)))();
}

uint64_t sub_100B4E6A4()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((3606
                                          * ((*(_BYTE *)(v0 + 5) - 58) >= (v1 ^ 0xDFu))) ^ v1))
                            - 12))();
}

uint64_t sub_100B4E6E4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100B4E744()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  *(_DWORD *)(v0 + 8) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((6091
                                          * (((((32 * v3) ^ 0x40) - 74) & 0xFEu) <= (*(_BYTE *)(v1 + 6) - 58))) ^ v3))
                            - 4))();
}

uint64_t sub_100B4E78C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((7 * (*(unsigned __int8 *)(v0 + 7) - 58 > 0xFFFFFFF5)) ^ v1))
                            - ((v1 - 322716489) & 0x133C7F68 ^ 0x5C44)))();
}

uint64_t sub_100B4E7DC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B4E844(int a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_DWORD *)(v1 + 12) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(unsigned __int8 *)(v2 + 8) - 58 > 0xFFFFFFF5)
                                          * ((a1 ^ 0x49EE) - 5529)) ^ a1))
                            - ((a1 - 18762) ^ 0x12F2)))();
}

uint64_t sub_100B4E894(uint64_t a1, int a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((20898 * ((*(_BYTE *)(v2 + 9) + (a2 ^ 0x58) - 48) > 0xF5u)) ^ a2))
                            - 12))();
}

uint64_t sub_100B4E8D4(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a2) - 12))();
}

uint64_t sub_100B4E938()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  *(_DWORD *)(v0 + 16) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(unsigned __int8 *)(v1 + 10) - 58 > 0xFFFFFFF5)
                                          * ((v3 - 17) ^ 0x2B7B)) ^ v3))
                            - ((v3 - 640) ^ 0x1072)))();
}

uint64_t sub_100B4E980(uint64_t a1, int a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((*(_BYTE *)(v2 + 11) - 58) < (a2 + 17))
                                          * ((a2 - 1475320559) & 0x57EF9AFF ^ 0x12E5)) ^ a2))
                            - 4))();
}

uint64_t sub_100B4E9D4(int a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v3 = (v1 ^ 0x77FB1FF5) + 10 * ((a1 ^ 0xD71FDB7B) + ((2 * a1) & 0xF6)) + 549866285;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4))(v3, 549866285, v3 + ((((v2 - 720) | 0x50) ^ 0x19C) & (2 * v1)));
}

uint64_t sub_100B4EA38(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t (*v3)(void);
  uint64_t v4;

  *(_DWORD *)(v4 + 20) = a3;
  return v3();
}

uint64_t sub_100B4EA58()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(((STACK[0x6508] - 3748) * v0) ^ LODWORD(STACK[0x3FD8]))))();
}

uint64_t sub_100B4EA78()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1124) ^ 0x2186 ^ (STACK[0x6508] + 939))))();
}

uint64_t sub_100B4EAA8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 16419) ^ 0x5B7ELL)))();
}

uint64_t sub_100B4EAFC()
{
  unsigned __int8 v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((6897 * ((v0 ^ (STACK[0x6508] - 1)) & 1)) ^ (STACK[0x6508] + v1)))
                            - 4))();
}

uint64_t sub_100B4EB3C@<X0>(uint64_t a1@<X8>)
{
  _DWORD *v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _QWORD *v19;
  _BOOL4 v20;

  v2 = STACK[0x6508] + 2442;
  v3 = STACK[0x6508];
  v4 = *v1 + 100;
  v5 = v1[1] - 1;
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (char *)&STACK[0x10000] + a1;
  STACK[0xC768] = a1 + 64;
  *((_DWORD *)v10 + 4) = v5;
  *((_DWORD *)v10 + 5) = v4;
  *((_DWORD *)v10 + 2) = v7;
  *((_DWORD *)v10 + 3) = v6;
  *(_DWORD *)v10 = v9;
  *((_DWORD *)v10 + 1) = v8;
  *((_QWORD *)v10 + 3) = 0;
  v11 = (uint64_t)*(&off_1015B46D0 + v2 - 6028);
  *((_DWORD *)v10 + 8) = 0;
  *((_QWORD *)v10 + 5) = 0;
  *((_QWORD *)v10 + 6) = v11;
  v12 = (void (*)(void))*(&off_1015B46D0 + (v2 ^ 0x1847));
  v12();
  v13 = (char *)&STACK[0x10000] + STACK[0xC768];
  v14 = v1[9];
  v15 = ((2 * v2) ^ 0x2476) - 4114 + v1[8];
  v16 = v1[10];
  v17 = v1[11];
  v18 = v1[12];
  *((_DWORD *)v13 - 16) = v1[13];
  v13 -= 64;
  *((_DWORD *)v13 + 5) = v15;
  *((_DWORD *)v13 + 3) = v16;
  *((_DWORD *)v13 + 4) = v14 - 1;
  *((_DWORD *)v13 + 1) = v18;
  *((_DWORD *)v13 + 2) = v17;
  *((_QWORD *)v13 + 3) = 0;
  *((_DWORD *)v13 + 8) = 0;
  *((_QWORD *)v13 + 5) = 0;
  *((_QWORD *)v13 + 6) = v11;
  v12();
  v19 = (_QWORD *)(v3 + STACK[0xC768] + STACK[0x19D0]);
  STACK[0xC768] -= 48;
  *v19 = 0;
  v20 = ((uint64_t (*)(_QWORD, _QWORD *))STACK[0x44E0])(0, v19) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((19142 * v20) ^ v2)) - 8))();
}

uint64_t sub_100B4EC74()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2442)) - 8))();
}

uint64_t sub_100B4EC90()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v7;

  v4 = v0 - v1;
  v5 = v3 - v0;
  v7 = v4 < 1 || v5 < 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25 * v7) ^ (v2 + 4459))) - 4))();
}

uint64_t sub_100B4ECD8()
{
  uint64_t v0;
  int v1;

  STACK[0xC768] = v0 - 80;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 5005)) - 8))();
}

uint64_t sub_100B4ED04()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x1E9C])) - 4))();
}

uint64_t sub_100B4ED2C@<X0>(uint64_t a1@<X8>)
{
  int v1;

  STACK[0xC768] = (((v1 - 3894) | 0x5A32u) ^ 0xFFFFFFFFFFFFA4B2) + a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 2777)) - 12))();
}

uint64_t sub_100B4ED94()
{
  int v0;
  char v1;
  char v2;
  char v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;
  _BOOL4 v8;
  char v9;

  v4 = v0 | 0x1040;
  v5 = (char)(v1 - 63) - (char)(v2 - 63);
  v6 = ((v5 << ((v4 + 58) & 0xF7 ^ v3)) & (((v4 - 2046) | 0x30) ^ 0xDDDC2EAC)) + (v5 ^ 0xEEEE1F6D);
  v7 = v6 == -286384275;
  v8 = v6 != -286384275;
  v9 = v7;
  LOBYTE(STACK[0x97BF]) = v9;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v4 | (16 * v8))))();
}

uint64_t sub_100B4EE20()
{
  int v0;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 9478)) - 12))(1801580355, 2493394431);
}

uint64_t sub_100B4EE88(char a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;

  *(_BYTE *)(a6 + ((((v8 + a8) << (((v9 + a1) & a2) ^ a4)) + a5) >> 32)) = *(_BYTE *)(v11 + ((((v8 + a8) << (((v9 + a1) & a2) ^ a4)) + a5) >> 32));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v8 + 1) > 0x5F) * a7) ^ v10)) - 12))();
}

uint64_t sub_100B4EED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((595 * ((((v5 - 6131) ^ ((v3 ^ 0xFFF5DDFFDAFF7FADLL) + (v4 & 0x1B5FEFF5ALL) + 0xA2200ECC1B44CLL == v6)) & 1) == 0)) ^ v5)) - 12))(a1, a2, a3, 4294948784, 4294949456, 4294957813, 906, 2210);
}

uint64_t sub_100B4EF8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((26
                                          * (((*(unsigned __int8 *)(a1 + v1) == *(unsigned __int8 *)(v3 + v1)) ^ (v2 - 1)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_100B4EFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, unint64_t a8)
{
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v9 != ((((v8 + v10) | 0x29) + 69) ^ 0xC1)) * a7) ^ ((v8 + v10) | 0x2C29)))
                            - ((((v8 + v10) | 0x2C29u) + a6) ^ a8)))();
}

uint64_t sub_100B4F004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unint64_t v13;

  v12 = v6 < v7;
  v13 = v5 + 1;
  if (v12 == v13 > ((v8 + v9) ^ (unint64_t)(v10 + 3514)))
    v12 = v13 + v11 < v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v12 * (v8 + a5)) ^ v8)))();
}

uint64_t sub_100B4F058()
{
  int v0;
  char v1;
  char v2;
  int v3;

  v3 = (char)(v2 - 63) - (char)(v1 - 63);
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((495
                                * ((v3 ^ ((v0 - 5332) | 0x500C) ^ 0xEEEE4F93) + ((2 * v3) & 0xDDDC3EDA) != ((((v0 - 5332) | 0x500C) + 751559544) & 0xD333DBFF ^ 0xEEEE0F1B))) ^ ((v0 - 5332) | 0x500C))))();
}

uint64_t sub_100B4F0E0(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, unint64_t *, uint64_t, const mach_header_64 *, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 3653)) - 4))(a1, &STACK[0xFEBE], 85, &_mh_execute_header, 45, 4099);
}

uint64_t sub_100B4F120(uint64_t a1, uint64_t a2, int a3, uint64_t a4, char a5, char a6)
{
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  *(_BYTE *)(a2 + (v7 >> 32)) = *(_BYTE *)(v9 + (v7 >> 32));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((((v6 ^ a6) * a5) ^ (v10 < 0x62)) & 1) * a3) ^ v8))
                            - 4))();
}

uint64_t sub_100B4F164()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, unint64_t *))(STACK[0x6AD8]
                                                                + 8
                                                                * ((58
                                                                  * ((v0 ^ 0x373EFFECDF777F37)
                                                                   - 0x373EFFEC17B64B3ELL
                                                                   + ((((v2 + 1385249565) & 0xAD6EF0D5) + 0x1BEEEBDEALL) & v1) != v3 + 170 * (v2 ^ 0x149Cu) - 2210)) ^ v2)))(5121, &STACK[0xFEBE]);
}

uint64_t sub_100B4F210@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(unsigned __int8 *)(a2 + v2) != *(unsigned __int8 *)(a1 + v2))
                                          * ((((v3 - 12404) | 0x481) - 3072) ^ 0x899)) ^ v3))
                            - 12))();
}

uint64_t sub_100B4F254()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((16088 * ((((v0 - 3055) ^ (v1 == 63)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_100B4F288()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;
  unint64_t v4;

  v3 = v0 < 0xC7C133F9;
  v4 = v2 + 1;
  if (v3 == v4 > ((8258 * (v1 ^ 0x1493u)) ^ 0xFFFFFFFF383E8C82))
    v3 = v4 + 3351327737u < v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v3 * (((v1 ^ 0x1493) + 2208) ^ 0x898)) ^ v1)))();
}

uint64_t sub_100B4F2FC()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x7358] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((863 * (v0 ^ 0x8A6) + 9174) ^ v0)))(5121);
}

uint64_t sub_100B4F350()
{
  int v0;
  char v1;
  char v2;
  int v3;

  v3 = (char)(v1 - 63) - (char)(v2 - 63);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v0 + 17053 + 13 * (v0 ^ 0x83B))
                                          * (((2 * v3) & 0xDDDC3EDA) + (v3 ^ 0xEEEE1F6D) == -286384275)) ^ v0))
                            - 8))();
}

uint64_t sub_100B4F3D4()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x7358] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return (*(uint64_t (**)(void))(v1 + 111360))();
}

uint64_t sub_100B4F410()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((9892 * (v0 == (STACK[0x34C8] ^ 0x891))) ^ (STACK[0x6508] - 2021)))
                            - 8))();
}

uint64_t sub_100B4F454()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x34C8];
  v1 = STACK[0x6AD8];
  STACK[0x7358] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x34C8]) - 8;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(v0 ^ 0x2409 ^ (v0 - 595397017) & 0x237D1BFF)))();
}

uint64_t sub_100B4F4B0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((23461 * (v0 == STACK[0x6508] - 4214)) ^ (STACK[0x6508] - 2021)))
                            - 8))();
}

uint64_t sub_100B4F4F8()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 1984;
  v1 = STACK[0x6AD8];
  STACK[0x7358] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 ^ 0x251C) + v0)))();
}

uint64_t sub_100B4F548()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2021)) - 8))();
}

uint64_t sub_100B4F574()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((5 * (STACK[0x6508] ^ 0x11CD)) ^ 0x5736) * (v0 == 0)) ^ (STACK[0x6508] - 2021)))
                            - 8))();
}

uint64_t sub_100B4F5C4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = v0 ^ 0x125Fu;
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v3 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 11705));
  STACK[0x7358] = (v1 ^ 0xFFFFFFFFFFFFE500) + v2;
  return v3();
}

uint64_t sub_100B4F610@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;

  STACK[0xEA78] = v3;
  STACK[0xEA80] = v2;
  STACK[0x9B28] = 0;
  LODWORD(STACK[0x7A64]) = 249893743;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((31557
                                * ((((v1 ^ 0xA5B3C38) - 173751352) ^ (a1 - 2690 + (v1 ^ 0xF3B8E73C) + 205981774) ^ (((46 * (a1 ^ 0x1A6E)) ^ v1 ^ 0xEF422363) + 280872553))
                                 + 362930832 < 9)) ^ a1)))();
}

uint64_t sub_100B4F6E0()
{
  char v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((((unsigned __int16)(1726 * (v1 ^ 0x1AF0) - 6485) >> v0) & 1) == 0)
                                * ((v1 ^ 0x1AF0) + 8)) ^ v1)))();
}

uint64_t sub_100B4F728()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)((char *)*(&off_1015B46D0 + v1 - 4157)
                 + 24 * *(_QWORD *)((char *)*(&off_1015B46D0 + (v1 ^ 0x1E0A)) + 8 * v0 - 12)
                 + 4);
  v3 = (((((v1 + 12204) | 0x412) ^ 0xFFFFB149) & v2 ^ 0xC4AE0B3E)
      + (v2 & 0xFECEFB59 ^ 0x3A40F041)
      - (((((v1 + 12204) | 0x412) ^ 0xFFFFB149) & v2 ^ 0xC4AE0B3E) & 0xFECEFB59)) ^ 0xF7C6F344;
  v4 = ((uint64_t (*)(_QWORD))STACK[0x5510])((((2 * v3) & 0x3D3AF0C0) - v3 - 513636449) ^ 0x7173B39Fu);
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((22417 * (v4 != 0)) ^ v1)))(5121);
}

uint64_t sub_100B4F848()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_QWORD *)(v3 + 24 * v1 + 8) > v2) * (v0 ^ 0xDDD ^ (v0 - 15280) ^ 0x5014)) ^ v0))
                            - 4))();
}

uint64_t sub_100B4F908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((246 * ((((v7 ^ 0xB59866B8) + 1812435863) ^ ((v7 ^ 0x4C568547) - 1781960598) ^ ((v7 ^ 0xCE87B7E4) + 387465931)) + ((v6 - 4790) | 0x28E) + 1372247949 != 1084324769)) ^ v6)) - 4))(4294963160, 3210642526, 571663220, 146, a5, a6, 3723304075, 29261);
}

uint64_t sub_100B4F9DC(int a1, unsigned int a2, uint64_t a3, char a4)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL4 v11;

  *(_BYTE *)(v9 + v6) = *(_BYTE *)(v4 + v6) ^ a4;
  v10 = v5 + a1 + v6 - 733;
  v11 = v8 + v6 + 1 < v7;
  if (v7 < v8 != v10 > a2)
    v11 = v7 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((246 * v11) ^ v5)) - 4))();
}

uint64_t sub_100B4FA44()
{
  int v0;
  int v1;

  LODWORD(STACK[0xEA88]) = v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v1 + 1067)))();
}

uint64_t sub_100B4FA64()
{
  return ((uint64_t (*)(void))STACK[0x7358])();
}

uint64_t sub_100B4FA98()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2021)) - 8))();
}

uint64_t sub_100B4FAC4@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  int v5;

  LODWORD(STACK[0x8DD0]) = v2;
  LODWORD(STACK[0xAEA4]) = v3;
  STACK[0x9CE0] = v4;
  STACK[0xC320] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v5 == 0) * ((a1 - 880358263) & 0x347927FF ^ 0x1EAC)) ^ (a1 - 1410)))
                            - 4))();
}

uint64_t sub_100B4FB3C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x9AE0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 4043)) - (v0 ^ 0x57D8) + 21283))();
}

uint64_t sub_100B4FBA0@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  int v7;

  *(_DWORD *)(v3 + 1296) = v2;
  STACK[0xE3B8] = v4;
  v5 = STACK[0xC768];
  STACK[0xE3C0] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v5 + ((((a1 + 855411272) & 0xCD032EFD) + 1033) ^ 0x1006);
  STACK[0xB270] = v1;
  if (v1)
    v6 = v4 == 0;
  else
    v6 = 1;
  v7 = !v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1893 * v7) ^ a1)) - 12))();
}

uint64_t sub_100B4FC40()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;
  unint64_t v3;

  *(_DWORD *)v1 = -1926392729;
  *(_QWORD *)(v1 + 8) = 0;
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 249893743;
  *(_QWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 40) = 249893743;
  STACK[0xD0A8] = v1 + 40;
  *(_QWORD *)(v1 + 48) = 0;
  STACK[0x6AF8] = v1 + 48;
  *(_DWORD *)(v1 + 56) = 249893743;
  STACK[0xAA40] = v1 + 56;
  *(_QWORD *)(v1 + 64) = 0;
  STACK[0x83C0] = v1 + 64;
  *(_DWORD *)(v1 + 72) = 249893743;
  *(_QWORD *)(v1 + 80) = 0;
  *(_BYTE *)(v1 + 88) = 0;
  *v2 = -1926392729;
  v3 = STACK[0x6AD8];
  STACK[0xD1B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) + (((_DWORD)v0 + 203049746) & 0xF3E5B8F6 ^ 0xFFFFFFFFFFFFEF8ELL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((int)v0 + 1653)))();
}

uint64_t sub_100B4FD38()
{
  uint64_t v0;

  STACK[0xC768] = v0 - 112;
  return ((uint64_t (*)(void))STACK[0x9AE0])();
}

uint64_t sub_100B4FD58()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1410) ^ (4804 * (v0 == 0)))) - 4))();
}

uint64_t sub_100B4FD88()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2D78])))();
}

uint64_t sub_100B4FDB8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = ((a1 - 104) ^ 0x9C ^ *(_BYTE *)(v3 + v1)) - (*(_BYTE *)(v2 + v1) - 82);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((20497 * (((2 * v4) & 0xF7717CEE) + (v4 ^ 0x7BB8BE77) == 2075704951)) ^ (a1 - 1410)))
                            - 4))();
}

uint64_t sub_100B4FE2C()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((((v1 - 9948) | 0x44) + ((v1 - 12839) ^ 0x4397)) * (v0 == 19)) ^ v1)))();
}

uint64_t sub_100B4FE70()
{
  int v0;
  unint64_t v1;
  unint64_t v2;

  v1 = STACK[0x9BE0];
  STACK[0xBA60] = STACK[0x9BE0] + 0x560BD4FF9249CC08;
  STACK[0x9D90] = v1 + 1771;
  *(_WORD *)(v1 + 1771) = 0;
  v2 = STACK[0x6AD8];
  STACK[0x9AE0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 42576) - 4))();
}

uint64_t sub_100B4FF04()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((8246 * (v0 == (STACK[0x337C] & 0xF2703F3F) - 15643)) ^ (STACK[0x6508] - 1398)))
                            - 4))();
}

uint64_t sub_100B4FF58()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((54
                                          * (((v0 ^ 0x5B1 ^ LOBYTE(STACK[0x97BF]) ^ (v0 - 654876325) & 0x270871FF) & 1) == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_100B4FFB0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((*(unsigned __int8 *)(STACK[0xBA60] - 0x560BD4FF9249C51CLL) == ((((v0 - 12) & 0xEF) - 57) ^ (v0 - 85))) | v0)))();
}

uint64_t sub_100B5000C@<X0>(unsigned int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((449 * (((((a1 - 7737) ^ 0x4955) - 2561) & STACK[0xAEA4]) == 0)) ^ a1))
                            - 12))();
}

uint64_t sub_100B50050()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((241 * (*(_BYTE *)STACK[0x9D90] != 0)) ^ v0))
                            - ((((v0 - 16839) | 0x6000u) - 20496) ^ v0 ^ 0x5223u)))();
}

uint64_t sub_100B500A8()
{
  int v0;
  _BOOL4 v1;

  v1 = LOBYTE(STACK[0x8DD0]) == ((1408 * ((v0 - 844566544) & 0x3256BFF7 ^ 0x1074)) ^ 0xB00);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((8 * v1) | (16 * v1)) ^ v0)) - 12))();
}

uint64_t sub_100B5010C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 98 * (v0 ^ 0xB7C) + 1860)) - 4))();
}

uint64_t sub_100B50148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((142 * ((v7 ^ v6 ^ 0x37491770) != 0)) ^ v6)) - ((367 * (v6 ^ 0x4369u)) ^ 0x2D2)))(576, 17049, 571663220, 146, a5, a6, 3723304075, 29261);
}

uint64_t sub_100B501C8()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v0 < 8) ^ ((v1 & 0xF7) + 1)) & 1) * ((v1 - 13) ^ 0x4C4E)) ^ v1))
                            - 4))();
}

uint64_t sub_100B5021C()
{
  int v0;
  unint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v0 + 8661 + v0 - 10747 - 27821) * (v1 < 0x20)) ^ v0))
                            - 4))();
}

uint64_t sub_100B5025C()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((47 * (v0 >= ((v1 - 767230928) & 0x2DBAB7FFu) - 4182)) ^ v1))
                            - 4))();
}

uint64_t sub_100B502AC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, __n128 a5)
{
  int v5;
  __n128 v6;

  v6.n128_u64[0] = 0x9292929292929292;
  v6.n128_u64[1] = 0x9292929292929292;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 + 11979)) - 4))(a1, a2, a3, 11905, -4838, 438, a4, a5, v6);
}

uint64_t sub_100B502DC(double a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int a9)
{
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int8x16_t v16;
  int8x16_t v17;
  uint64_t v18;

  v15 = (~(_DWORD)v11 + v10);
  v16 = *(int8x16_t *)(v9 + v15 - 15);
  v17 = *(int8x16_t *)(v9 + v15 - 31);
  v18 = v14 + v15;
  *(int8x16_t *)(v18 - 15) = veorq_s8(v16, a3);
  *(int8x16_t *)(v18 - 31) = veorq_s8(v17, a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v11 + a8 + ((v13 + 650) | 6u) - v12) | (v12
                                                                                     - (v11
                                                                                      + a8
                                                                                      + (unint64_t)((v13 + 650) | 6u)))) >> 63)
                                          * a9) ^ (v13 + a7)))
                            - 4))();
}

uint64_t sub_100B50340(unsigned int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 ^ (3506 * (v3 != v2))))
                            - ((((v4 - 4712) | a1) + a2) ^ 0x4573)))();
}

uint64_t sub_100B50380()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((215 * (((((v1 - 15219) | 0x21D1) - 11197) & v0) == 0)) ^ v1))
                            - 12))();
}

uint64_t sub_100B503C8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, __n128 a5)
{
  int v5;

  a5.n128_u16[0] = -28014;
  a5.n128_u8[2] = -110;
  a5.n128_u8[3] = -110;
  a5.n128_u8[4] = -110;
  a5.n128_u8[5] = -110;
  a5.n128_u8[6] = -110;
  a5.n128_u8[7] = -110;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 4))(a1, a2, a3, 4294960945, 4878, 25730, a4, a5);
}

uint64_t sub_100B503F8(double a1, int8x8_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(int8x8_t *)(v13 + (~(_DWORD)v10 + v8)) = veor_s8(*(int8x8_t *)(v11 + (~(_DWORD)v10 + v8)), a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v9 + a6) ^ a7) + v10 == v12) * a8) ^ v9))
                            - 4))();
}

uint64_t sub_100B50438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8 * ((10616 * (v4 != v3)) ^ v5))
                                                                     - 4))(a1, a2, a3, 146);
}

uint64_t sub_100B5047C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 481)) - 4))();
}

uint64_t sub_100B50490(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v9 = v6 - 1;
  *(_BYTE *)(v8 + v9) = *(_BYTE *)(v4 + v9) ^ a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 == 0) * (v7 ^ 0x1127)) ^ v5)) - 4))();
}

uint64_t sub_100B504D0@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;

  STACK[0x9B28] = v2;
  LODWORD(STACK[0xEA88]) = 0;
  LODWORD(STACK[0x7A64]) = a1 + 1536775654;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 5639)) - 12))();
}

uint64_t sub_100B5074C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((118
                                          * (v3 + v0 - 0x40A5A2B5C3B91FC5 <= v4
                                                                             + (unint64_t)(v1 ^ 0x2C4u)
                                                                             + v2
                                                                             - 0x7B36BF1EC314C048)) ^ v1))
                            - ((2 * v1) ^ 0xD068u)
                            + 20522))();
}

uint64_t sub_100B507BC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * (((v1 + 1606763369 == v0) * ((v1 ^ 0x5538) - 6072)) ^ v1))
                            - 4))();
}

uint64_t sub_100B50800()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v1 ^ 0x7A5) - 1309) * (v0 > 7)) ^ v1)) - 12))();
}

uint64_t sub_100B50830()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  int v10;

  v6 = (v1 - 1);
  v7 = ((49 * ((v3 + 9516) ^ 0x35F4u)) ^ 0x1076) - v6;
  v9 = v5 - 0x7B36BF1EC3147D5DLL + v2 > (unint64_t)(v5 - 0x7B36BF1EC3147D5DLL + v6 + v2);
  v8 = v4 + v0 - 0x40A5A2B5C3B91FC5 + v6;
  v9 = v9 || v8 + v7 > v8;
  v10 = v9;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14 * v10) ^ (v3 + 9516)))
                                          - ((v3 + 1885) ^ 0x17D7)))(4114);
}

uint64_t sub_100B508D8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((30400
                                          * (((41 * (v2 ^ 0x2D) + 1) ^ (v0
                                                                                       - (v4
                                                                                        + v1)
                                                                                       + v3
                                                                                       + 0x3A911C68FF5B5D98 < (unint64_t)((v2 - 6081) | 0x1064u) - 4182)) & 1)) ^ v2))
                            - 12))();
}

uint64_t sub_100B50954(unsigned int a1)
{
  unsigned int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((5714
                                * (((v1 < ((v2 - 10314) | a1) - 4182) ^ (-77 * (v2 ^ 0xAA) + 1)) & 1)) ^ v2)))();
}

uint64_t sub_100B509A8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 16381)) - 8))();
}

uint64_t sub_100B509DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v16 = ((9 * (v8 ^ v13) + a4) ^ v12) + v7;
  v17 = v14 + v5 + v16;
  v18 = *(_OWORD *)(v17 - 31);
  v19 = v15 + v6 + v16;
  *(_OWORD *)(v19 - 15) = *(_OWORD *)(v17 - 15);
  *(_OWORD *)(v19 - 31) = v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((v11 + v12) | v10) >= 0) * a5) ^ v9)) - 8))();
}

uint64_t sub_100B50A40(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ (2520 * (v1 != v2))))
                            - ((a1 - 12922) ^ 0x38FDu)
                            + 10375))();
}

uint64_t sub_100B50A7C()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((37
                                * (((v1 + 82) ^ (((((v1 - 10281) | 0x1014) ^ 0x106E) & v0) == 0)) & 1)) ^ v1)))();
}

uint64_t sub_100B50AE4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 12))(~v0 + v1);
}

uint64_t sub_100B50B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v12 + a1 + v8) = *(_QWORD *)(v11 + a1 + v7);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((30 * (v9 == 0)) ^ v10))
                                          - ((a5 + v10 + 195) & a6)
                                          + a7))(a1 - 8);
}

uint64_t sub_100B50B78(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 ^ (14 * (v3 == v2))))
                            - (((a2 ^ 0x7A5u) + 4) ^ a2 ^ 0x7A5u)))();
}

uint64_t sub_100B50BB0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 386)) - 12))();
}

uint64_t sub_100B50BC4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v3 - 1;
  *(_BYTE *)(v6 + v7 + v1) = *(_BYTE *)(v5 + v7 + v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v7 == 0) * v4) ^ v2)) - 12))();
}

uint64_t sub_100B50BF8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((14
                                * ((((v3 ^ 0x4C580B95) + 660130690) ^ ((v3 ^ 0xB19B20E7) - 627318540) ^ ((v3 ^ (v4 + 767550400) & 0xD23FDC7F ^ 0xA206BD50) + ((v4 - 14425) ^ 0xC9067AEE)))
                                 - 313680589 != a3)) ^ v4)))();
}

uint64_t sub_100B50CA4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  unsigned int v16;

  v15 = v12 < a3;
  *(_BYTE *)(v14 + v10 + v9) = *(_BYTE *)(v13 + v10 + v8);
  v16 = v10 + 1;
  if (v15 == v16 > a7)
    v15 = v16 + a3 < v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v15 * a8) ^ v11)) - (((v11 - 2011) | 0x74u) ^ 0x107ALL)))();
}

uint64_t sub_100B50D10@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_100B50D1C()
{
  return ((uint64_t (*)(void))STACK[0x7B48])();
}

uint64_t sub_100B50D50()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((45 * (STACK[0xEA80] == 0)) ^ (STACK[0x6508] + 5735))))();
}

uint64_t sub_100B50D88@<X0>(_DWORD *a1@<X8>)
{
  *a1 = STACK[0x7A64];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x22A0])))();
}

uint64_t sub_100B50DA8()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((329
                                                        * (((*(_QWORD *)(v0 + 24) == 0) ^ (STACK[0x6508]
                                                                                           + 65) & 0xEF) & 1)) ^ LODWORD(STACK[0x2BB0])))
                                          - 8))(5121);
}

uint64_t sub_100B50E0C@<X0>(unsigned int a1@<W8>)
{
  _QWORD *v1;

  *v1 = STACK[0x9B28];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - (a1 ^ 0x5CD1) + 4206))();
}

uint64_t sub_100B50E3C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 1067)))();
}

uint64_t sub_100B50E58()
{
  int v0;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 7229)))(1999958390);
}

uint64_t sub_100B50E9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = (*(unsigned __int8 *)(v3 + v1) ^ 0x92) - (*(_BYTE *)(v2 + v1) + (v0 ^ 0xD8));
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((20101 * (((2 * v4) & 0xF7717CEE) + (v4 ^ 0x7BB8BE77) == 2075704951)) ^ (v0 + 7631))))();
}

uint64_t sub_100B50F08(unsigned int a1)
{
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((758 * (((602 * (v1 ^ 0x1071) + v3) & a1 ^ 0x1077) + v2 == 20)) ^ v1 ^ 0x3CC5)))();
}

uint64_t sub_100B50F58@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 12767)) - 8))();
}

uint64_t sub_100B50F70@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((15826 * (v1 == ((a1 + 1513430656) & 0xA5CADBFD ^ 0xAF4))) ^ (a1 - 1410)))
                            - 4))();
}

uint64_t sub_100B50FB8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (v0 ^ 0xECF ^ (((v0 ^ 0x3EFE65A7) != 930337444) * (1519 * (v0 ^ 0xAFC) + 5647))))
                            - 4))();
}

uint64_t sub_100B51024@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  int v6;

  v4 = STACK[0x6AD8];
  STACK[0xC000] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4;
  if (v3)
    v5 = v1 == 0;
  else
    v5 = 1;
  v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v6 * (a1 - 11908)) ^ a1)) - 40 * (a1 ^ 0x2EBBu) + 18032))();
}

uint64_t sub_100B51080()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((*(_DWORD *)(v0 + 1576) == ((v1 - 16880) | 0x2B04) - 12172)
                                * (((v1 - 17974) | 0x1034) ^ 0x109D)) ^ v1)))();
}

uint64_t sub_100B510D0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((28083 * (((*(_DWORD *)(v1 + 1576) == 0) ^ (a1 + 1)) & 1)) ^ a1))
                            - ((a1 - 48762813) & 0x2E7FEF9 ^ 0x1EC1)))();
}

uint64_t sub_100B51124(uint64_t a1)
{
  unsigned int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 + 14793) ^ 0x5896)))(a1, 4241409, 1140884777, 2145868747, 3942578037, 4294961465, 20624, 5656);
}

uint64_t sub_100B51184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((86
                                          * (((111 * (v3 ^ 0xD5)) ^ (*(unsigned __int8 *)(v1 + v0) == *(unsigned __int8 *)(v2 + v0))) & 1)) ^ v3))
                            - ((158 * (v3 ^ 0x58A0u)) ^ 0x1ED8)))();
}

uint64_t sub_100B511E0@<X0>(int a1@<W5>, unsigned int a2@<W6>, unint64_t a3@<X7>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BOOL4 v8;

  v6 = (((a4 - 3761) | 0x601u) ^ a3) + v4;
  v8 = v5 == 63 || v6 == 300;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21 * v8) ^ a4)) - (((a4 + a1) | a2) ^ 0x5896)))();
}

uint64_t sub_100B51238()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100B51240@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0xA398] == 0) * (((a1 + 672156690) | 0x14482355) ^ 0x3C587FFA)) ^ (a1 + 2705)))
                            - (a1 + 16135)
                            + 20341))();
}

uint64_t sub_100B512A8()
{
  unsigned int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)(v0 ^ 0x3C5864FD ^ (11620
                                                                               * (v0 > ((v0 - 1012412512) ^ 0xD9BE930E)))))
                                          - 8))(v1);
}

uint64_t sub_100B512F4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((11300 * ((((v0 + 1281630465) ^ (STACK[0x9AD0] == 0)) & 1) == 0)) ^ v0))
                            - (v0 - 16135)
                            + 4206))();
}

uint64_t sub_100B51358()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 16135)) - 8))(v1);
}

uint64_t sub_100B51378@<X0>(int a1@<W8>)
{
  int v1;

  STACK[0xC768] = STACK[0xC768] + ((a1 + 466) ^ 0x23Au) - 7778;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((16 * (v1 == (((a1 + 466) | 0x907) ^ 0x1B4F))) | ((v1 == (((a1 + 466) | 0x907) ^ 0x1B4F)) << 6)) ^ (a1 + 19875)))
                            - 12))();
}

uint64_t sub_100B513E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BOOL4 v8;

  v2 = STACK[0xB2C0];
  STACK[0x6AC0] = STACK[0xB2C0] + 680;
  STACK[0xE078] = v2 + 680;
  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  v5 = 1872284299 * ((v1 + 0x7BD2D04F44E88FB3 - 2 * ((v1 - 240) & 0x7BD2D04F44E890A3)) ^ 0xE27BEBC867993F4ELL);
  LODWORD(STACK[0x1D364]) = v0 + 1037162758 + v5 - 14;
  STACK[0x1D358] = v2 + 0x7B9AD85E800B068CLL;
  STACK[0x1D350] = v4 - v5 - 8;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x48F8])(v1 - 240);
  v8 = LODWORD(STACK[0x1D360]) == -53671020 && LOBYTE(STACK[0xB467]) == 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((77 * v8) ^ ((int)v0 + 4043)))
                                          - ((((_DWORD)v0 + 1445686156) & 0xA9D49477)
                                           + 9970)
                                          + 14176))(v6);
}

uint64_t sub_100B5151C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(1784);
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v1 != 0) * (((v0 - 14056) | 6) - 112)) | v0));
  STACK[0xA948] = v1;
  return ((uint64_t (*)(void))(v2 - (v0 ^ 0x3764)))();
}

uint64_t sub_100B5158C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((2010 * ((v7 + 394170822 + v7 + 15053) <= 0x223C171D)) ^ ((int)v7 + 4450))))(a1, a2, a3, a4, 0xF26FC0784BC7D9E8, 0x58292A32636B72E6, a7, 0x2AB629F33171E5F1);
}

uint64_t sub_100B51624()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (((v0 - 2319) | 0x4932u) ^ 0x5B7ELL)))();
}

uint64_t sub_100B51688()
{
  unsigned int v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = STACK[0x6AD8];
  v6 = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v0 - 4));
  v7 = 1872284299 * ((v3 + 0x7C772D326EC1722CLL - 2 * (v3 & 0x7C772D326EC1722CLL)) ^ 0xE5DE16B54DB0DDC1);
  *(_QWORD *)(v2 + 792) = STACK[0x6AC0] + 0x7B9AD85E800B03E4;
  *(_QWORD *)(v2 + 784) = v6 - v7 - 8;
  *(_DWORD *)(v2 + 804) = v0 + 1037162758 + v7 - 18;
  v8 = v1(v4 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (int)((v0 - 4) ^ 0xB3D)) - (v0 ^ 0x107ALL)))(v8);
}

uint64_t sub_100B51778()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B517CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v5) - (v5 ^ 0x161DLL)))(a1, a2, a3, a4, a5, 1793481482, 2384258894, 1910713342);
}

uint64_t sub_100B51818(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, char a7, char a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v15 = (*(unsigned __int8 *)(v9 + v11) ^ v14) - *(unsigned __int8 *)(v10 + v11);
  v17 = a5 + (v15 ^ a4) + ((v15 << ((v8 + a7) & a8 ^ v13)) & v12) + 1994 == a6 && v11 != 19;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((2 * v17) | (8 * v17)) ^ v8)) - 4))();
}

uint64_t sub_100B51878@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unint64_t v26;

  v6 = (a3 ^ 0x5987C05B) & (2 * (a3 & 0x9D17E29B)) ^ a3 & 0x9D17E29B;
  v7 = ((2 * (a3 ^ 0x738A6AE1 ^ (v5 + 1580))) ^ 0xDD3B4FEC) & (a3 ^ 0x738A6AE1 ^ (v5 + 1580)) ^ (2
                                                                                               * (a3 ^ 0x738A6AE1 ^ (v5 + 1580))) & 0xEE9DA7F6;
  v8 = v7 ^ 0x2284A012;
  v9 = (v7 ^ 0xCC1906E4) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0xBA769FD8) & v8 ^ (4 * v8) & 0xEE9DA7F4;
  v11 = (v10 ^ 0xAA1487D0) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x44892026)) ^ 0xE9DA7F60) & (v10 ^ 0x44892026) ^ (16 * (v10 ^ 0x44892026)) & 0xEE9DA7F0;
  v13 = v11 ^ 0xEE9DA7F6 ^ (v12 ^ 0xE8982700) & (v11 << 8);
  v14 = (v13 << 16) & 0x6E9D0000 ^ v13 ^ ((v13 << 16) ^ 0x27F60000) & (((v12 ^ 0x6058096) << 8) & 0x6E9D0000 ^ 0x62180000 ^ (((v12 ^ 0x6058096) << 8) ^ 0x1DA70000) & (v12 ^ 0x6058096));
  v15 = (v4 ^ 0xD15914E5) & (2 * (v4 & 0x9519A4F6)) ^ v4 & 0x9519A4F6;
  v16 = ((2 * (v4 ^ 0xD1795DA1)) ^ 0x88C1F2AE) & (v4 ^ 0xD1795DA1) ^ (2 * (v4 ^ 0xD1795DA1)) & 0x4460F956;
  v17 = v16 ^ 0x44200951;
  v18 = (v16 ^ a1) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0x1183E55C) & v17 ^ (4 * v17) & 0x4460F954;
  v20 = (v19 ^ 0xE140) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x44601803)) ^ 0x460F9570) & (v19 ^ 0x44601803) ^ (16 * (v19 ^ 0x44601803)) & 0x4460F950;
  v22 = v20 ^ 0x4460F957 ^ (v21 ^ (a2 + 3038)) & (v20 << 8);
  v23 = v4 ^ (2
            * ((v22 << 16) & 0x44600000 ^ v22 ^ ((v22 << 16) ^ 0x79570000) & (((v21 ^ 0x606807) << 8) & 0x44600000 ^ (((v21 ^ 0x606807) << 8) ^ 0x60F90000) & (v21 ^ 0x606807) ^ 0x4000000)));
  v24 = (a3 ^ (2 * v14) ^ 0xF83B6853) & (v23 ^ 0x62A7A9A7) ^ v23 & 0xAC03ADB;
  LODWORD(STACK[0x9FEC]) = ((v24 & 0x98BFF115 ^ 0x98BFD105) + (v24 & 0x67400EEA ^ 0x40024B) - 1) ^ 0xD40B7582;
  LODWORD(STACK[0x72B4]) = *(_DWORD *)(v3 + 1576);
  v25 = *(_DWORD *)(v3 + 1580);
  v26 = STACK[0xC768];
  STACK[0xAFA0] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v26 + 256;
  STACK[0x81F0] = v3 + 1584;
  LODWORD(STACK[0xA81C]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((30727 * ((v25 - 1) < 3)) ^ v5)) - 4))();
}

uint64_t sub_100B51BFC()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((*(_DWORD *)(v0 + 676) == 1) * ((v1 + 2123732623) & 0x816A6F9C ^ 0x39FF)) ^ v1))
                            - 4))();
}

uint64_t sub_100B51C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  int v14;

  v10 = *(_DWORD *)(v8 + 684);
  v11 = v10 <= (int)(((v9 + 1609932442) & 0xA00A7F7F) - 18298);
  v12 = 4 * v10;
  v14 = !v11 && a8 == v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v14 * ((68 * (v9 ^ 0x29D3)) ^ 0x2F7E)) ^ v9)) - 4))();
}

uint64_t sub_100B51CB0()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v0 >= v1 - 18295) * ((v1 - 16054) ^ 0x8C3)) ^ v1))
                            - 12))();
}

uint64_t sub_100B51D00()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3)) - ((v0 + 3) ^ 0x4771)))();
}

uint64_t sub_100B51D6C@<X0>(int a1@<W1>, unint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;

  LODWORD(STACK[0x8EC8]) = a1;
  LODWORD(STACK[0x756C]) = v3;
  STACK[0xB830] = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v2 ^ 0x3BEA)) - (v2 ^ 0x8C0)))();
}

uint64_t sub_100B51DCC(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4))(a1, LODWORD(STACK[0xED98]));
}

uint64_t sub_100B51F04()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 + 10753) + 25492))();
}

uint64_t sub_100B51F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((v4 + v2 + ((3733 * (v3 ^ 0x63A4u)) ^ 0xCE11CA8E9CA94A71) <= a1 + a2) | v3))
                            - 8))();
}

uint64_t sub_100B51FA8()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((32 * ((((7 * (v1 ^ 0x37C4)) ^ ((v0 ^ v1 ^ 0x49C5C620) == 0)) & 1) == 0)) & 0x7F | ((((7 * (v1 ^ 0xC4)) ^ ~((v0 ^ v1 ^ 0x49C5C620) == 0)) & 1) << 7)) ^ v1)))();
}

uint64_t sub_100B51FF8(uint64_t a1, int a2)
{
  unsigned int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((13 * (v2 < ((a2 + 1456273799) & 0xA932B7FE ^ 0x107E))) | a2)))();
}

uint64_t sub_100B5203C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((a2 - 20174) | 0x54) ^ 0x1087)
                                          * ((unint64_t)(v3 - (a3 + a1) + v4 - 0x31EE357163568FDBLL) < 0x20)) ^ (a2 - 3457)))
                            - 8))();
}

uint64_t sub_100B5209C()
{
  int v0;
  int v1;
  int v2;

  v2 = (v1 - 1673164605) & 0x63BA25ED;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((30862
                                          * (((((v2 ^ v0) & v2) >> ((98 * (v2 ^ 0xB)) ^ __clz(v2 ^ v0 | 1) ^ 0x69)) & 1) == 0)) ^ (v2 + 11417)))
                            - 4027 * (v2 ^ 0x22u)
                            + 8042))();
}

uint64_t sub_100B5212C(uint64_t a1)
{
  int v1;
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 2622)) - 12))(a1, 32 - (v1 & 0xFFFFFFE0));
}

uint64_t sub_100B52164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v12 = v9 + v5 + v3;
  v13 = *(_OWORD *)(v12 - 31);
  v14 = a1 + a3 + v5;
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(v12 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v11 & ~(((v4 ^ v8) * v10) ^ ((a2 | v6) >> 63))) * v7) ^ (v4 + 2567)))
                            - 12))();
}

uint64_t sub_100B521C8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v5 & ~((a3 - 2084585365) & 0x7C403CFF ^ (v3 == v4)))
                                          * (2 * (a3 ^ 0x2700) - 4097)) ^ a3))
                            - 12))();
}

uint64_t sub_100B52218(uint64_t a1, int a2)
{
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 ^ (31 * ((v2 & 0x18) != 0))))
                            - ((a2 - 7216) ^ 0x107ALL)))();
}

uint64_t sub_100B52264(uint64_t a1)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(STACK[0x6AD8] + 8 * v2))(a1, v1 & 0xFFFFFFF8, a1 - 7);
}

uint64_t sub_100B52290@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;

  *(_QWORD *)(a2 + (~(_DWORD)v4 + v5) + a3) = *(_QWORD *)(v7 + (~(_DWORD)v4 + v5) + v3);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v4 + v10 + ((v6 + v8) & v9) == a1) * v11) ^ v6)))();
}

uint64_t sub_100B522D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((a2 == v4) ^ (a4 + 0x80)) & 1)
                                               * (((a4 + 919934818) & 0xC92AB27E) + 1685)) ^ a4))
                            - 8))();
}

uint64_t sub_100B52330()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 13790)) - 8))();
}

uint64_t sub_100B52348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a1 + (v4 - 1) + a2) = *(_BYTE *)(v5 + (v4 - 1) + v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((193 * (v4 == 1)) ^ v3)) - 8))();
}

uint64_t sub_100B52380()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((32413
                                * ((((v0 ^ 0xCBDF24E4) + 1871552346) ^ ((v0 ^ 0xC2EBD09F) + 1723427619) ^ ((v0 ^ ((v1 - 14868) | 0x1036) ^ ((v1 - 3649) | 0x328) ^ 0x40F13742) - 459033677)) != -308852790)) ^ v1)))();
}

uint64_t sub_100B5242C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;
  unsigned int v8;

  v7 = v4 < 0xADB8CBD8;
  *(_BYTE *)(a1 + v3 + a2) = *(_BYTE *)(v6 + v3 + v2);
  v8 = v3 + 1;
  if (v7 == v8 > 0x52473427)
    v7 = v8 - 1380398120 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v7 * ((v5 ^ 0x3F4D) + 26418)) ^ v5)) - 12))();
}

uint64_t sub_100B524A4()
{
  return ((uint64_t (*)(void))STACK[0xD3C0])();
}

uint64_t sub_100B524B8()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v1 = STACK[0x6508] - 2962;
  v2 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (LODWORD(STACK[0x4848]) ^ v1)) - 12))(v0);
}

uint64_t sub_100B52548()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2B18])) - 8))();
}

uint64_t sub_100B52570@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((3372 * (a1 + 1099091205 <= (a1 + 1259116346))) ^ (a1 + 5089)))
                            - 4))();
}

uint64_t sub_100B525D4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B525FC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 601)) - 12))();
}

uint64_t sub_100B52628()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 10118)) - ((v0 + 1806) ^ 0x178CLL)))();
}

uint64_t sub_100B52668()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B52698()
{
  uint64_t v0;
  int v1;
  int v2;

  v1 = STACK[0x6508] + 3260;
  if ((((*(_DWORD *)(v0 + 632) ^ 0xFF8256E3) + 8235293) ^ ((*(_DWORD *)(v0 + 632) ^ 0x6F1729C3)
                                                          + (STACK[0x2ED8] ^ 0x90E8D22D)) ^ ((*(_DWORD *)(v0 + 632) ^ 0x1DB8EB47) - 498658119))
     - 1926392729 >= 0x1C)
    v2 = *(_DWORD *)(v0 + 652);
  else
    v2 = 1926392763;
  LODWORD(STACK[0xE134]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((19758 * (v2 == -1926392729)) ^ v1)) - 4))();
}

uint64_t sub_100B52758()
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x2ED8] + 3924))
                                                   - ((STACK[0x2ED8] + 7498) ^ 0x2152)))(43, 2013256049);
}

uint64_t sub_100B527BC()
{
  return ((uint64_t (*)(void))STACK[0x8478])();
}

uint64_t sub_100B527C8()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(LODWORD(STACK[0x2B14]) + STACK[0x6508] - 1778)))();
}

uint64_t sub_100B52810()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1070)) - 8))();
}

uint64_t sub_100B52840@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 9676))
                            - ((a1 + 1904142177) & 0x8E811FAC ^ 0x178CLL)))();
}

uint64_t sub_100B52888()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B528A8()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2B1C])))();
}

uint64_t sub_100B528CC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 12563)) - 8))();
}

uint64_t sub_100B52900@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 3235)) - ((a1 - 747935961) & 0x2C949FE6 ^ 0x1780)))();
}

uint64_t sub_100B52948()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100B52974()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  int v5;

  v0 = (STACK[0x6508] - 4040) | 0x811;
  v1 = STACK[0x6508] - 2039;
  v2 = STACK[0xCEB8];
  STACK[0x99F8] = STACK[0xCEB8];
  v3 = STACK[0xAD48];
  STACK[0x9668] = STACK[0xAD48];
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  v5 = !v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((23237 * v5) ^ v1)) - (v0 ^ 0x8BB)))();
}

uint64_t sub_100B529F0@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((14218
                                                        * (((((a1 + 1231332960) & 0xB69B54ED) + 1792991327) ^ a1) > 0xBE26641)) ^ (a1 + 816)))
                                          - 4))(0x4B0D70AD3A88BE86);
}

uint64_t sub_100B52A7C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((STACK[0x6508] + 2059873377) ^ 0x7AC729A4 ^ (2849
                                                                                           * (STACK[0x6508] != 1340750845))))
                            - 12))();
}

uint64_t sub_100B52AD4()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1134)))();
}

uint64_t sub_100B52B00@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 9606)))();
}

uint64_t sub_100B52B20@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 1806)))();
}

uint64_t sub_100B52B48()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 4629)) - 4))();
}

uint64_t sub_100B52B78@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 2160))
                            - ((a1 - 1890133104) ^ 0x8F56EC0ELL)))();
}

uint64_t sub_100B52BC4()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((((v0 + v1) | 0x12) ^ 0x28E1) * (v0 == 1851727466)) ^ (v0 + v1 + 1824))))();
}

uint64_t sub_100B52C0C()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = (STACK[0x6508] + 472771561) & 0xE3D23FFF;
  v1 = STACK[0x6508] - 1015;
  v2 = STACK[0x6AD8];
  STACK[0xCB18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x3AD4)) - v0 + 15447))();
}

uint64_t sub_100B52C80()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] - 3472;
  v1 = STACK[0x6508] - 2630;
  v2 = STACK[0x6AD8];
  STACK[0xB8C8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x1E6C)) - v0 + 738))();
}

uint64_t sub_100B52CDC()
{
  int v0;

  v0 = STACK[0x6508] + 1098;
  STACK[0x7AD0] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((LOBYTE(STACK[0x9E67]) * (v0 ^ 0x594D ^ (v0 | 0x13E) ^ 0x763E)) ^ LODWORD(STACK[0x28FC])))
                            - 8))();
}

uint64_t sub_100B52D3C()
{
  int v0;
  _BOOL4 v1;

  v1 = ((uint64_t (*)(_QWORD))STACK[0x5510])((v0 - 1926412582) ^ LODWORD(STACK[0x8CDC])) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v1 * ((v0 - 14223) ^ 0x15E4)) ^ v0)) - 8))();
}

uint64_t sub_100B52D98()
{
  int v0;

  LODWORD(STACK[0xE0A8]) = 1926417667;
  STACK[0x6B20] = 0;
  LOBYTE(STACK[0xE0AF]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 1117913344) & 0xBD5DF977) + 4206))();
}

uint64_t sub_100B52DE8()
{
  int v0;
  int v1;
  unint64_t v2;
  _BOOL4 v3;

  LODWORD(STACK[0xE0A8]) = v1;
  STACK[0x6B20] = v2;
  v3 = v1 == -1926392729;
  LOBYTE(STACK[0xE0AF]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (11264 * v3)))
                            - ((((v0 - 809679039) & 0x3042A3F7) + 3911) ^ ((v0 - 1534) | 0x76u))))();
}

uint64_t sub_100B52E58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, unsigned int a5@<W8>)
{
  unint64_t v5;

  v5 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                                  + 8 * (int)(a5 + 6957)))(83, a1, 4169, a2, a3, a4, 14990);
}

uint64_t sub_100B53118()
{
  int v0;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8
                                                     * ((LOBYTE(STACK[0xE0AF]) * ((v0 ^ 0x2A81) + 8143)) ^ (v0 + 10881)))
                                         - ((v0 + 1750) ^ 0x1744)))(0);
}

uint64_t sub_100B53164()
{
  int v0;
  _BOOL4 v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(48) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((v1 * (v0 - 21048 + ((v0 + 1765352680) & 0x96C6B76C))) ^ v0))
                            - 8))();
}

uint64_t sub_100B531C0()
{
  int v0;

  STACK[0x8F08] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1750)) - 12))();
}

uint64_t sub_100B531E8(unint64_t a1)
{
  int v1;
  int v2;

  STACK[0x8F08] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (223 * (v1 == -1926392729))))
                            - (v2 - 1750)
                            + 4202))();
}

uint64_t sub_100B53228()
{
  uint64_t v0;
  int v1;
  _BOOL4 v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x5510])(48) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((24199 * v2) ^ v1))
                            - (v0 ^ 0xFFFFFFFFFFFFF595)
                            - 37 * (v1 ^ 0x17F9u)))();
}

uint64_t sub_100B53280(unint64_t a1)
{
  int v1;
  _BOOL4 v2;

  STACK[0x9B98] = a1;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5510])(16) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((97 * v2) ^ v1))
                            - (((v1 + 1042790997) & 0xC1D83BF7)
                             + 1569)
                            + 5775))();
}

uint64_t sub_100B532E0(unint64_t a1)
{
  int v1;
  char v2;
  int v3;
  uint64_t v4;

  v2 = (v1 + 40) & 0x54;
  STACK[0x75A0] = a1;
  v3 = *(_DWORD *)(STACK[0x7678] - 0x55058F428EADAA00);
  STACK[0x6A70] = STACK[0xC470];
  if (v3 < 0)
    v3 = -v3;
  LODWORD(STACK[0xB1A0]) = v3 << (v2 ^ 0x16);
  v4 = ((uint64_t (*)(_QWORD))STACK[0x5510])((v3 << (v2 ^ 0x16)));
  STACK[0x7AD0] = v4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v4 != 0) * (2107 * (v1 ^ 0x1695) + 25613)) ^ v1)))();
}

uint64_t sub_100B5339C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xAB80] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(((v0 ^ 0x6A06) - 15491) ^ v0)) - 4))();
}

uint64_t sub_100B533E8()
{
  int v0;

  STACK[0x9B98] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2514)) - 8))();
}

uint64_t sub_100B53408()
{
  int v0;

  STACK[0x75A0] = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 1733)))();
}

uint64_t sub_100B53420()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((15 * (STACK[0x7AD0] != 0)) ^ (v0 + 1569))))();
}

uint64_t sub_100B53448()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 9970)) - 12))(v1);
}

uint64_t sub_100B5346C()
{
  int v0;

  STACK[0xC768] -= 1904;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12543)) - 8))(5121);
}

uint64_t sub_100B534B0()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100B534C8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((STACK[0x6508] - 1798) ^ 0x95C) * (v0 == -1926392729)) ^ (STACK[0x6508] + 2392))))();
}

uint64_t sub_100B53504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((v7 + 3676) ^ v7)))(a1, a2, a3, a4, a5, a6, a7, 806657363);
}

uint64_t sub_100B53548()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xC310] = (STACK[0x2FB0] ^ 0xFFFFFFFFFFFFE594)
                + *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2204));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((7095 * (LODWORD(STACK[0x2B2C]) > 0xCD965A9C)) ^ ((int)v0 - 1758)))
                            - 8))();
}

uint64_t sub_100B535C4()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508];
  v1 = 844 * (STACK[0x6508] ^ 0x107E);
  v2 = STACK[0x6AD8];
  STACK[0xC310] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2199)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((13908 * (((v1 - 1550514646) ^ (v0 - 2199)) >= 0xDCFB7D22)) ^ ((int)v0 + 441)))
                            - 8))();
}

uint64_t sub_100B53654()
{
  unint64_t v0;

  v0 = STACK[0x6AD8];
  STACK[0xA5A0] = 564 * (STACK[0x6508] ^ 0x107D)
                + *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1530))
                - 6216;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * SLODWORD(STACK[0x2398])) - 8))();
}

uint64_t sub_100B536D0()
{
  int v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] + 8368;
  LODWORD(STACK[0xAE4C]) = v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((27 * (v0 == (((_DWORD)v1 - 1024802935) & 0x3D1537E4 ^ 0x8D2D9383))) ^ v2)))();
}

uint64_t sub_100B53734()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC310] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 2635)) - (v0 ^ 0x7ECLL)))();
}

uint64_t sub_100B53780()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xCBD0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3654)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 - 3654) | 0x150E))
                            - (((_DWORD)v0 - 3892) | 0x4E08u)
                            + 20290))();
}

uint64_t sub_100B537DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                                  + 8 * (int)(((STACK[0x8FD8] > STACK[0xBFD8] - 0x3A8834BBB3077A40) * (LODWORD(STACK[0x3BC8]) + ((STACK[0x6508] + 8368) ^ 0x3B60))) ^ (STACK[0x6508] + 10397))))(a1, a2, a3, a4, 440281528, 725302468, 1772489163);
}

uint64_t sub_100B5387C@<X0>(uint64_t a1@<X4>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v13 = STACK[0x3BC8];
  v14 = (v6 ^ 0x67373F67FFF3FDFFLL) - 0x67373F67FFF3FDFFLL + ((LODWORD(STACK[0x3BC8]) ^ 0xFFE7A168) & (2 * v6));
  v15 = *v10;
  v16 = *(_BYTE *)(v5 + v14);
  v17 = (((v5 + (v6 ^ 0xFFF3FDFF) + 786945 + ((LODWORD(STACK[0x3BC8]) ^ 0xFFE7A168) & (2 * v6))) ^ *(_DWORD *)(*v8 + (v15 & a1))) & 0x7FFFFFFF)
      * a3;
  v18 = (v17 ^ HIWORD(v17)) * a3;
  v19 = a5 + v14;
  LODWORD(v15) = ((*(_DWORD *)(*v8 + (v15 & a2)) ^ v19) & 0x7FFFFFFF) * a3;
  v20 = (v15 ^ WORD1(v15)) * a3;
  *(_BYTE *)(v19 + a4) = *(_BYTE *)(v12 + (v18 >> 24)) ^ v16 ^ *(_BYTE *)(v11 + (v18 >> 24)) ^ *(_BYTE *)(v9 + (v18 >> 24)) ^ *(_BYTE *)(STACK[0x4568] + (v20 >> 24)) ^ *(_BYTE *)(STACK[0x4570] + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + STACK[0x4578] + 2) ^ v18 ^ v20 ^ (BYTE3(v18) * v7) ^ (119 * BYTE3(v20));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((119 * (v6 != 15)) ^ v13)) - 12))();
}

uint64_t sub_100B5399C@<X0>(uint64_t a1@<X4>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;

  v14 = v7 - 1;
  v15 = *v11;
  v16 = ((*(_DWORD *)(*v9 + (v15 & a1)) ^ (v5 + v14)) & 0x7FFFFFFF) * a3;
  v17 = ((v16 >> ((v6 + 80) ^ 0x66)) ^ v16) * a3;
  LODWORD(v15) = ((*(_DWORD *)(*v9 + (v15 & a2)) ^ (a5 + v14)) & 0x7FFFFFFF) * a3;
  v18 = (v15 ^ WORD1(v15)) * a3;
  *(_BYTE *)(a5 + v14 + a4) = *(_BYTE *)(v13 + (v17 >> 24)) ^ *(_BYTE *)(v5 + v14) ^ *(_BYTE *)(v12 + (v17 >> 24)) ^ *(_BYTE *)(v10 + (v17 >> 24)) ^ *((_BYTE *)*(&off_1015B46D0 + v6 - 10393) + (v18 >> 24) - 8) ^ v17 ^ *((_BYTE *)*(&off_1015B46D0 + v6 - 11795) + (v18 >> 24) - 8) ^ (BYTE3(v17) * v8) ^ *((_BYTE *)*(&off_1015B46D0 + v6 - 10446) + (v18 >> 24) - 11) ^ v18 ^ (-53 * BYTE3(v18));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((2101 * (v14 != 0)) ^ v6)))();
}

uint64_t sub_100B53AAC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 2392)))();
}

uint64_t sub_100B53AC8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((61 * (STACK[0xA3D8] != 0)) ^ (v0 + 18089))) - 8))();
}

uint64_t sub_100B53B00()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B53B1C()
{
  STACK[0xC768] -= 176;
  return ((uint64_t (*)(void))STACK[0xC458])();
}

uint64_t sub_100B53B48()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6508];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1374270564) ^ 0xAE164C8C)) - 4;
  LODWORD(STACK[0xEE20]) = (v2 - 1374270564) ^ 0xE42;
  LODWORD(STACK[0xEE50]) = v2 - 1374270564;
  STACK[0xEE30] = v1;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = v2 - 1374270534;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v0 - 240) | 0xC38FB10D) - ((v0 - 240) & 0xC38FB10D)) ^ 0xFE1D6E54)
                          + v2;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v4);
}

uint64_t sub_100B53C28()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t (*v3)(unint64_t);

  v0 = STACK[0x6508] + 8211;
  v1 = STACK[0x6508] - 2958;
  LODWORD(STACK[0x73FC]) = -1926392729;
  v2 = STACK[0xA8C0] + 372;
  v3 = (uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x2191)) - v0 + 12413);
  STACK[0xADD8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  return v3(v2);
}

uint64_t sub_100B53CC4()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6508];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = v2 + 1119049902;
  LODWORD(STACK[0xEE50]) = v2 + 1119049399;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v0;
  LODWORD(STACK[0xEE60]) = v2 + 1119049391;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((v1 + 1959456321 - 2 * ((v1 - 240) & 0x74CAEF31)) ^ 0x49583068)
                          + v2;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v4);
}

uint64_t sub_100B53DB0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 534)) - 4))();
}

uint64_t sub_100B53DE8()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((997 * (STACK[0xBB88] == 0x3032385379A144E6)) ^ (STACK[0x6508] + 2428)))
                            - (STACK[0x6508]
                             + 1018100529)
                            + 1018104731))();
}

uint64_t sub_100B53E50()
{
  unsigned int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((2 * (v0 - 1018100529) - 1749) ^ (11860 * (v0 < 0x2F212728))))
                                          - 12))(v1);
}

uint64_t sub_100B53EB0()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0x89AC]) = v0;
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 40)) - 4;
  LODWORD(STACK[0xEE20]) = v1 - 186612538;
  LODWORD(STACK[0xEE50]) = v1 - 186611688;
  STACK[0xEE30] = v0;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = (v1 - 186611688) ^ 0x79;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601 - 1705718857 * ((v2 - 240) ^ 0x3D92DF59) + v1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100B53F7C()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  v0 = STACK[0x6508] - 9;
  v1 = STACK[0x6508] + 11453;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5510])(16);
  *(_QWORD *)STACK[0x9830] = v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((22963 * (((v2 == 0) ^ v0) & 1)) ^ v1)))();
}

uint64_t sub_100B53FE0@<X0>(uint64_t *a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  *(_DWORD *)STACK[0xB5E8] = 16;
  v2 = *a1;
  v3 = STACK[0x6AD8];
  STACK[0xD3B8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (int)(v1 + ((v1 + 1217649809) & 0xB76C3D3D) - 3582))
                                          - 12))(v2);
}

uint64_t sub_100B54068()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((STACK[0x6508] + 1241515452) ^ 0x4A000C9E ^ (12275
                                                                                           * (STACK[0x6508]
                                                                                            + 1241515452 < 0x16356FA0))))
                            - 8))();
}

uint64_t sub_100B540C0()
{
  uint64_t v0;

  STACK[0xC768] = v0 - 400;
  return ((uint64_t (*)(void))STACK[0xCA98])();
}

uint64_t sub_100B540E0()
{
  int v0;
  _BOOL4 v4;

  v4 = v0 == -1926392729 && STACK[0xC960] != 0 && LODWORD(STACK[0xB684]) != 1930690922 && STACK[0x79D8] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5223 * v4) ^ LODWORD(STACK[0x3434]))) - 4))();
}

uint64_t sub_100B54148()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 5848)) - 4))();
}

uint64_t sub_100B54178@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6508];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6)) - 4;
  LODWORD(STACK[0xEE20]) = v2 - 1259866344;
  LODWORD(STACK[0xEE50]) = (v2 - 1259867130) ^ 0xE4F;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v2 - 1259867130;
  STACK[0xEE30] = a1;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((665172271 - ((v1 - 240) | 0x27A5B92F) + ((v1 - 240) | 0xD85A46D0)) ^ 0xE5C89989)
                          + v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v4);
}

uint64_t sub_100B5426C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  _BOOL4 v17;

  v8 = STACK[0x6508];
  v9 = STACK[0x6508] + 50;
  STACK[0xB6A8] = 0;
  LODWORD(STACK[0xC0C4]) = 0;
  v10 = STACK[0xC960];
  v11 = STACK[0xA290];
  v12 = LODWORD(STACK[0xB684]) - 479225397;
  v13 = STACK[0x6AD8];
  *(_QWORD *)(v1 + 952) = *(_QWORD *)(STACK[0x6AD8] + 8 * v9) - 4;
  *(_QWORD *)(v1 + 968) = v11;
  *(_DWORD *)(v1 + 960) = 2014084982;
  *(_QWORD *)(v1 + 984) = v10;
  *(_DWORD *)(v1 + 1008) = v12;
  *(_BYTE *)(v1 + 1032) = -121;
  *(_QWORD *)(v1 + 992) = STACK[0x2E48];
  *(_QWORD *)(v1 + 1000) = STACK[0x2E40];
  *(_DWORD *)(v0 + 784) = v3
                        - (((v4 ^ 0x69979720 | 0xB27317E4) - ((v4 ^ 0x69979720) & 0xB27317E4)) ^ 0xE6765F9D) * v6
                        + v8;
  *(_QWORD *)(v0 + 792) = v5;
  v14 = v2(v7 - 240);
  v15 = *(_DWORD *)(v0 + 788);
  LODWORD(STACK[0xE0BC]) = v15;
  v17 = v15 == -1926392729 && STACK[0xB6A8] != 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * (v9 ^ 0x2FDE ^ (30423 * v17))) - 8))(v14);
}

uint64_t sub_100B543A0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x270C])) - 8))();
}

uint64_t sub_100B543C8@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = STACK[0x2E20];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * LODWORD(STACK[0x2E18])) - 4;
  LODWORD(STACK[0xEE20]) = v4 - 67;
  LODWORD(STACK[0xEE50]) = STACK[0x2E1C];
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v4;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = a1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((~(v1 | 0xCEEF9A93) + (v1 & 0xCEEF9A93)) ^ 0xC82BA35)
                          + STACK[0x6508];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v5);
}

uint64_t sub_100B5449C()
{
  int v0;
  unint64_t v1;
  unsigned int v2;
  unint64_t v3;

  v0 = STACK[0x6508] - 697;
  v1 = STACK[0xB6A8]++;
  v2 = 1772489163
     * ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x1A3E29B8)) ^ v1) & 0x7FFFFFFF);
  v3 = 1772489163 * (v2 ^ HIWORD(v2));
  LODWORD(v3) = *(unsigned __int8 *)(STACK[0x5660] + (v3 >> 24)) ^ *(unsigned __int8 *)v1 ^ *(unsigned __int8 *)(STACK[0x5668] + (v3 >> 24)) ^ *(unsigned __int8 *)(STACK[0x58D0] + (LODWORD(STACK[0x2B84]) - 3515) + (v3 >> 24)) ^ v3 ^ (-123 * (v3 >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((13092
                                          * ((((v3 ^ 0x23) + 97) ^ ((v3 ^ 0xF8) - 68) ^ ((v3 ^ 0xDB) - 103)) == 155)) ^ v0))
                            - 12))();
}

uint64_t sub_100B545B8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v4 = STACK[0x2B84];
  STACK[0x6AB0] = v0 + 2;
  STACK[0xB6A8] = v0 + 2;
  v5 = 1772489163
     * ((1772489163 * ((*(_DWORD *)(v2 + v3) ^ v1) & 0x7FFFFFFF)) ^ ((1772489163
                                                                    * ((*(_DWORD *)(v2 + v3) ^ v1) & 0x7FFFFFFFu)) >> 16));
  v6 = v5 >> (90 * (v4 ^ 0xBAu) - 94);
  v7 = *(_BYTE *)(STACK[0x5660] + v6) ^ *(_BYTE *)(v0 + 1) ^ *(_BYTE *)(STACK[0x5668] + v6) ^ *(_BYTE *)(v6 + STACK[0x58D0] + 2) ^ v5 ^ (v6 * ((v4 - 70) & 0xFE ^ 0xF3));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((16356
                                          * ((((v7 ^ 0x61) + 75) ^ ((v7 ^ 0x2C) + 8) ^ ((v7 ^ 0x4D) + 103)) == 52)) ^ v4))
                            - 12))();
}

uint64_t sub_100B546CC(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 2822))
                                                                       - 12))(a1, a2, &STACK[0xDEA4]);
}

uint64_t sub_100B5470C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) + v1))();
}

uint64_t sub_100B54A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x6508];
  *(_QWORD *)STACK[0x9C58] = 0x9BCAA45AF19CC7F3
                           * (0xDB99BFE92E2F6DEDLL
                            * (((v2 ^ 0x1CC09CA123C6AAB3) - 0x594487A516008A7BLL) ^ ((v2 ^ 0x1EDF70A17D67AE00)
                                                                                     - 0x5B5B6BA548A18EC8) ^ ((v2 ^ 0x27A7164E61E8899ALL) - 0x62230D4A542EA952))
                            - 0x3AC90753A37D6C5
                            * (*(_QWORD *)(v1 + (a1 & STACK[0x1E00])) & 0x7FFFFFFFFFFFFFFFLL ^ 0x4012572C7FE445D0))
                           - 0x7FE71F5F3D0E9E9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v3 + 4480)) - 4))();
}

uint64_t sub_100B54B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2244) ^ 0x2425)))(2026, a2, a3, a4, a5, a6, 1772489163, 2491241021);
}

uint64_t sub_100B54F50()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 697)) - 12))();
}

uint64_t sub_100B54F94@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v9 = a1 + 1733871569;
  STACK[0xC9C8] = v1;
  if (v1 == 0x603CE14A0A8FADE1 && v5 == -1926392729)
    v11 = 1926417571;
  else
    v11 = v5;
  v12 = STACK[0x6AD8];
  *(_QWORD *)(v3 + 952) = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 40)) - 4;
  *(_DWORD *)(v3 + 960) = v9 ^ 0xFD2;
  *(_DWORD *)(v3 + 1008) = v9;
  *(_QWORD *)(v3 + 976) = v11;
  *(_QWORD *)(v3 + 1016) = 2368574567;
  *(_DWORD *)(v3 + 1024) = v9 ^ 0x49;
  *(_DWORD *)(v3 + 1028) = 0;
  *(_DWORD *)(v2 + 784) = -299994601 - 1705718857 * (((v6 | 0x6F2A9AEF) + (~v6 | 0x90D56510)) ^ 0x52B845B7) + a1;
  *(_QWORD *)(v2 + 792) = v7;
  v13 = v4(v8 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * *(int *)(v2 + 788)) - 8))(v13);
}

uint64_t sub_100B55094()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  STACK[0xCFF8] = *(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL ^ 0x78B6EE6512D51ED0;
  v1 = STACK[0x6AD8];
  STACK[0xB3A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 - 3392)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 + 5221) ^ (v0 - 3392))) - 4))();
}

uint64_t sub_100B55120@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v10 = STACK[0x6AD8];
  *(_QWORD *)(v2 + 952) = *(_QWORD *)(STACK[0x6AD8] + 8 * ((a1 + 1944549218) ^ 0x73E79746)) - 4;
  *(_DWORD *)(v2 + 960) = a1 + 1944549882;
  *(_DWORD *)(v2 + 1008) = a1 + 1944549218;
  *(_QWORD *)(v2 + 976) = v5;
  *(_QWORD *)(v2 + 1016) = v8;
  *(_DWORD *)(v2 + 1024) = (a1 + 1944549218) ^ 0x69;
  *(_DWORD *)(v2 + 1028) = 0;
  *(_DWORD *)(v1 + 784) = -299994601 - ((~(v6 | 0x980D81CF) + (v6 & 0x980D81CF)) ^ 0x5A60A169) * v4 + a1;
  *(_QWORD *)(v1 + 792) = v7;
  v11 = v3(v9 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * *(int *)(v1 + 788)) - 12))(v11);
}

uint64_t sub_100B551DC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 693)) - 12))();
}

uint64_t sub_100B55414@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x2F40]);
  STACK[0xC308] = a1;
  STACK[0xEE18] = v4 - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x2F3C];
  LODWORD(STACK[0xEE50]) = STACK[0x2F48];
  STACK[0xEE30] = v1;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = STACK[0x2F38];
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((1345037616 - ((v2 - 240) | 0x502BA530) + ((v2 - 240) | 0xAFD45ACF)) ^ 0x92468596)
                          + STACK[0x6508];
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v5);
}

uint64_t sub_100B55500()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3815;
  v1 = STACK[0x6AD8];
  STACK[0xB058] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0)
                + ((1168 * (STACK[0x6508] ^ 0x1074)) ^ 0xFFFFFFFFFFFFF6D4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1687)) - 12))();
}

uint64_t sub_100B55578()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6508];
  *(_QWORD *)STACK[0xC078] = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v1 + 17355)) - 8))();
}

uint64_t sub_100B555A8()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;

  LODWORD(STACK[0xA6F0]) = v1;
  v2 = STACK[0x6508];
  v3 = STACK[0x6AD8];
  v4 = STACK[0x2B80];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x2B74];
  LODWORD(STACK[0xEE50]) = v4;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v1;
  LODWORD(STACK[0xEE60]) = v4 - 18;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v0 - 240) & 0x1C6F4208) - (v0 - 240) + 1670430198) ^ 0x5E0262AF)
                          + v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v5);
}

uint64_t sub_100B55694()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((LODWORD(STACK[0xBB5C]) != -1926392713)
                                     * (1833 * (STACK[0x6508] ^ 0x107F) - 16480)) | LODWORD(STACK[0x2274]))))();
}

uint64_t sub_100B556FC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((STACK[0x7C38] != 0) * (((v0 - 12283) ^ 0x17F8) + v0 - 15140)) ^ v0)))();
}

uint64_t sub_100B5573C()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (v0 ^ 0x1680 ^ (13439 * ((v0 ^ 0xE65BF95B) < 0x5D13A5C9))))
                                          - 12))(5121);
}

uint64_t sub_100B557C0()
{
  int v0;
  unint64_t v1;
  unsigned int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  STACK[0x7BA8] = v1;
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 1678255519) ^ 0x1FFFFFFF9BF7FA49)) - 4;
  LODWORD(STACK[0xEE20]) = v0 - 1678256879;
  LODWORD(STACK[0xEE50]) = v0 - 1678255519;
  STACK[0xEE30] = v2;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = v0 - 1678256119;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((v3 - 1090532302 - 2 * ((v3 - 240) & 0xBEFFCD22)) ^ 0x836D127B)
                          + v0;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v5);
}

uint64_t sub_100B558B8()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6508];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6)) - 4;
  LODWORD(STACK[0xEE20]) = v2 + 1378669364;
  LODWORD(STACK[0xEE50]) = v2 + 1378672092;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v2 + 1378669358;
  STACK[0xEE30] = 0x603CE14A0A8FADE1;
  STACK[0xEE58] = v0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((2 * (v1 - 240)) | 0x4561FA54) - (v1 - 240) - 582024490) ^ 0x1F222273)
                          + v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100B559A0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = STACK[0x6508];
  v2 = STACK[0x6AD8];
  v3 = STACK[0xC308];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x2288];
  LODWORD(STACK[0xEE50]) = STACK[0x2284];
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = STACK[0x228C];
  STACK[0xEE30] = 0xA3713A3BC6C25331;
  STACK[0xEE58] = v3;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((~((v0 - 240) | 0x72A25BD1) + ((v0 - 240) & 0x72A25BD1)) ^ 0xB0CF7B77)
                          + v1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100B55A7C()
{
  unint64_t v0;
  unint64_t v1;
  char *v2;
  unint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  uint64_t v81;

  v0 = STACK[0x6508];
  v1 = STACK[0xC768];
  v2 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0xA2F0] = (unint64_t)(v2 + 0x59251BE96394D045);
  STACK[0xA480] = (unint64_t)(v2 + 0x424515205A782521);
  STACK[0xC768] = v1 + 447 * (v0 ^ 0x107E) - 3496;
  STACK[0x9078] = 0xC27AFEAA03E150FLL;
  LODWORD(STACK[0x7C30]) = 0;
  v3 = 1772489163
     * ((1772489163 * ((_DWORD)v2 + 1670697029)) ^ ((1772489163 * ((_DWORD)v2 + 1670697029)) >> 16));
  v4 = (char *)*(&off_1015B46D0 + (int)(v0 ^ 0x1193)) - 12;
  v5 = (char *)*(&off_1015B46D0 + (int)(v0 ^ 0x1178)) - 4;
  v6 = (char *)*(&off_1015B46D0 + (int)(v0 ^ 0x1012)) - 8;
  v2[16] = v4[v3 >> 24] ^ (-53
                         * ((-53 * ((_BYTE)v2 + 69)) ^ ((1772489163 * ((_DWORD)v2 + 1670697029)) >> 16))) ^ (57 * ((1772489163 * ((1772489163 * ((_DWORD)v2 + 1670697029)) ^ ((1772489163 * ((_DWORD)v2 + 1670697029)) >> 16))) >> 24)) ^ v5[(v3 >> 24) + ((37 * (v0 ^ 0x1061)) ^ 0x351)] ^ v6[v3 >> 24];
  v7 = 1772489163
     * ((1772489163 * ((_DWORD)v2 + 1670697030)) ^ ((1772489163 * ((_DWORD)v2 + 1670697030)) >> 16));
  v2[17] = (57
          * ((1772489163
            * ((1772489163 * ((_DWORD)v2 + 1670697030)) ^ ((1772489163 * ((_DWORD)v2 + 1670697030)) >> 16))) >> 24)) ^ (-53 * ((-53 * ((_BYTE)v2 + 70)) ^ ((1772489163 * ((_DWORD)v2 + 1670697030)) >> 16))) ^ v4[v7 >> 24] ^ v5[(v7 >> 24) + 2] ^ v6[v7 >> 24];
  v8 = 1772489163
     * ((1772489163 * ((_DWORD)v2 + 1670697031)) ^ ((1772489163 * ((_DWORD)v2 + 1670697031)) >> 16));
  v2[18] = (57
          * ((1772489163
            * ((1772489163 * ((_DWORD)v2 + 1670697031)) ^ ((1772489163 * ((_DWORD)v2 + 1670697031)) >> 16))) >> 24)) ^ (-53 * ((-53 * ((_BYTE)v2 + 71)) ^ ((1772489163 * ((_DWORD)v2 + 1670697031)) >> 16))) ^ v4[v8 >> 24] ^ v5[(v8 >> 24) + 2] ^ v6[v8 >> 24];
  v9 = 1772489163
     * ((1772489163 * ((_DWORD)v2 + 1670697032)) ^ ((1772489163 * ((_DWORD)v2 + 1670697032)) >> 16));
  v2[19] = (57
          * ((1772489163
            * ((1772489163 * ((_DWORD)v2 + 1670697032)) ^ ((1772489163 * ((_DWORD)v2 + 1670697032)) >> 16))) >> 24)) ^ (-53 * ((-53 * ((_BYTE)v2 + 72)) ^ ((1772489163 * ((_DWORD)v2 + 1670697032)) >> 16))) ^ v4[v9 >> 24] ^ v5[(v9 >> 24) + 2] ^ v6[v9 >> 24];
  v10 = STACK[0xA2F0];
  v11 = STACK[0xA2F0];
  v12 = 1772489163 * ((1772489163 * ((_DWORD)v10 + 4)) ^ ((1772489163 * (v10 + 4)) >> 16));
  *(_BYTE *)(v10 - 0x59251BE96394D031) = v5[(v12 >> 24) + 2] ^ v4[v12 >> 24] ^ v6[v12 >> 24] ^ v12 ^ (57 * ((1772489163 * ((1772489163 * ((_DWORD)v10 + 4)) ^ ((1772489163 * (v10 + 4)) >> 16))) >> 24));
  v13 = 1772489163 * ((1772489163 * ((_DWORD)v10 + 5)) ^ ((1772489163 * (v10 + 5)) >> 16));
  *(_BYTE *)(v10 - 0x59251BE96394D030) = v5[(v13 >> 24) + 2] ^ v4[v13 >> 24] ^ v6[v13 >> 24] ^ v13 ^ (57 * ((1772489163 * ((1772489163 * ((_DWORD)v10 + 5)) ^ ((1772489163 * (v10 + 5)) >> 16))) >> 24));
  v14 = 1772489163 * ((1772489163 * ((_DWORD)v10 + 6)) ^ ((1772489163 * (v10 + 6)) >> 16));
  *(_BYTE *)(v10 - 0x59251BE96394D02FLL) = v4[v14 >> 24] ^ v14 ^ v5[(v14 >> 24) + 2] ^ (57
                                                                                      * ((1772489163
                                                                                        * ((1772489163
                                                                                          * ((_DWORD)v10 + 6)) ^ ((1772489163 * (v10 + 6)) >> 16))) >> 24)) ^ v6[v14 >> 24];
  v15 = 1772489163 * ((1772489163 * ((_DWORD)v10 + 7)) ^ ((1772489163 * (v10 + 7)) >> 16));
  v16 = STACK[0x4448];
  v17 = STACK[0x4440];
  v18 = STACK[0x4450];
  *(_BYTE *)(v10 - 0x59251BE96394D02ELL) = (-71
                                          * ((1772489163
                                            * ((1772489163 * ((_DWORD)v10 + 7)) ^ ((1772489163 * (v10 + 7)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v10 + 7)) ^ ((1772489163 * (v10 + 7)) >> 16))) ^ *(_BYTE *)(STACK[0x4448] + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + STACK[0x4440] + 1) ^ *(_BYTE *)(STACK[0x4450] + (v15 >> 24));
  v19 = 1772489163 * ((1772489163 * ((_DWORD)v11 + 8)) ^ ((1772489163 * (v11 + 8)) >> 16));
  *(_BYTE *)(v11 - 0x59251BE96394D02DLL) = *(_BYTE *)((v19 >> 24) + v17 + 1) ^ *(_BYTE *)(v16 + (v19 >> 24)) ^ *(_BYTE *)(v18 + (v19 >> 24)) ^ v19 ^ (-71 * ((1772489163 * ((1772489163 * ((_DWORD)v11 + 8)) ^ ((1772489163 * (v11 + 8)) >> 16))) >> 24));
  v20 = 1772489163 * ((1772489163 * ((_DWORD)v11 + 9)) ^ ((1772489163 * (v11 + 9)) >> 16));
  *(_BYTE *)(v11 - 0x59251BE96394D02CLL) = *(_BYTE *)((v20 >> 24) + v17 + 1) ^ *(_BYTE *)(v16 + (v20 >> 24)) ^ *(_BYTE *)(v18 + (v20 >> 24)) ^ v20 ^ (-71 * ((1772489163 * ((1772489163 * ((_DWORD)v11 + 9)) ^ ((1772489163 * (v11 + 9)) >> 16))) >> 24));
  v21 = 1772489163 * ((1772489163 * ((_DWORD)v11 + 10)) ^ ((1772489163 * (v11 + 10)) >> 16));
  *(_BYTE *)(v11 - 0x59251BE96394D02BLL) = *(_BYTE *)(v16 + (v21 >> 24)) ^ v21 ^ *(_BYTE *)((v21 >> 24) + v17 + 1) ^ (-71 * ((1772489163 * ((1772489163 * ((_DWORD)v11 + 10)) ^ ((1772489163 * (v11 + 10)) >> 16))) >> 24)) ^ *(_BYTE *)(v18 + (v21 >> 24));
  v22 = 1772489163 * ((1772489163 * ((_DWORD)v11 + 11)) ^ ((1772489163 * (v11 + 11)) >> 16));
  *(_BYTE *)(v11 - 0x59251BE96394D02ALL) = (-71
                                          * ((1772489163
                                            * ((1772489163 * ((_DWORD)v11 + 11)) ^ ((1772489163
                                                                                                 * (v11 + 11)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v11 + 11)) ^ ((1772489163 * (v11 + 11)) >> 16))) ^ *(_BYTE *)(v16 + (v22 >> 24)) ^ *(_BYTE *)((v22 >> 24) + v17 + 1) ^ *(_BYTE *)(v18 + (v22 >> 24));
  v23 = STACK[0xA2F0];
  v24 = 1772489163 * ((1772489163 * ((_DWORD)v23 + 12)) ^ ((1772489163 * (v23 + 12)) >> 16));
  *(_BYTE *)(v23 - 0x59251BE96394D029) = *(_BYTE *)((v24 >> 24) + v17 + 1) ^ *(_BYTE *)(v16 + (v24 >> 24)) ^ *(_BYTE *)(v18 + (v24 >> 24)) ^ v24 ^ (-71 * ((1772489163 * ((1772489163 * ((_DWORD)v23 + 12)) ^ ((1772489163 * (v23 + 12)) >> 16))) >> 24));
  v25 = 1772489163 * ((1772489163 * ((_DWORD)v23 + 13)) ^ ((1772489163 * (v23 + 13)) >> 16));
  *(_BYTE *)(v23 - 0x59251BE96394D028) = *(_BYTE *)((v25 >> 24) + v17 + 1) ^ *(_BYTE *)(v16 + (v25 >> 24)) ^ *(_BYTE *)(v18 + (v25 >> 24)) ^ v25 ^ (-71 * ((1772489163 * ((1772489163 * ((_DWORD)v23 + 13)) ^ ((1772489163 * (v23 + 13)) >> 16))) >> 24));
  v26 = 1772489163 * ((1772489163 * ((_DWORD)v23 + 14)) ^ ((1772489163 * (v23 + 14)) >> 16));
  *(_BYTE *)(v23 - 0x59251BE96394D027) = *(_BYTE *)(v16 + (v26 >> 24)) ^ v26 ^ *(_BYTE *)((v26 >> 24) + v17 + 1) ^ (-71 * ((1772489163 * ((1772489163 * ((_DWORD)v23 + 14)) ^ ((1772489163 * (v23 + 14)) >> 16))) >> 24)) ^ *(_BYTE *)(v18 + (v26 >> 24));
  v27 = 1772489163 * ((1772489163 * ((_DWORD)v23 + 15)) ^ ((1772489163 * (v23 + 15)) >> 16));
  *(_BYTE *)(v23 - 0x59251BE96394D026) = (-71
                                          * ((1772489163
                                            * ((1772489163 * ((_DWORD)v23 + 15)) ^ ((1772489163
                                                                                                 * (v23 + 15)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v23 + 15)) ^ ((1772489163 * (v23 + 15)) >> 16))) ^ *(_BYTE *)(v16 + (v27 >> 24)) ^ *(_BYTE *)((v27 >> 24) + v17 + 1) ^ *(_BYTE *)(v18 + (v27 >> 24));
  *(_OWORD *)(STACK[0xA480] - 0x424515205A782501) = 0u;
  STACK[0xBFC8] = (unint64_t)(v2 + 0x4052B40C9BC7DBB9);
  v28 = STACK[0xBFC8];
  v29 = STACK[0xBFC8];
  v30 = 1772489163 * ((1772489163 * (_DWORD)v28) ^ ((1772489163 * v28) >> 16));
  v31 = (uint64_t)*(&off_1015B46D0 + SLODWORD(STACK[0x1DF4]));
  v32 = (char *)*(&off_1015B46D0 + (int)v0 - 3611) - 4;
  v33 = (uint64_t)*(&off_1015B46D0 + (int)v0 - 3523);
  *(_BYTE *)(v28 - 0x4052B40C9BC7DB89) = *(_BYTE *)(v31 + (v30 >> 24)) ^ v32[v30 >> 24] ^ *(_BYTE *)((v30 >> 24) + v33 + 1) ^ v30 ^ (45 * ((1772489163 * ((1772489163 * (_DWORD)v28) ^ ((1772489163 * v28) >> 16))) >> 24)) ^ 0xBF;
  v34 = 1772489163 * ((1772489163 * (_DWORD)v28 + 1772489163) ^ ((1772489163 * v28 + 1772489163) >> 16));
  *(_BYTE *)(v28 - 0x4052B40C9BC7DB88) = *(_BYTE *)(v31 + (v34 >> 24)) ^ v34 ^ v32[v34 >> 24] ^ *(_BYTE *)((v34 >> 24) + v33 + 1) ^ (45 * ((1772489163 * ((1772489163 * (_DWORD)v28 + 1772489163) ^ ((1772489163 * v28 + 1772489163) >> 16))) >> 24)) ^ 0x15;
  v35 = 1772489163 * ((1772489163 * ((_DWORD)v28 + 2)) ^ ((1772489163 * (v28 + 2)) >> 16));
  *(_BYTE *)(v28 - 0x4052B40C9BC7DB87) = (-53 * ((-53 * (v28 + 2)) ^ ((1772489163 * (v28 + 2)) >> 16))) ^ (45 * ((1772489163 * ((1772489163 * ((_DWORD)v28 + 2)) ^ ((1772489163 * (v28 + 2)) >> 16))) >> 24)) ^ *(_BYTE *)(v31 + (v35 >> 24)) ^ v32[v35 >> 24] ^ *(_BYTE *)((v35 >> 24) + v33 + 1) ^ 0x92;
  v36 = 1772489163 * ((1772489163 * ((_DWORD)v28 + 3)) ^ ((1772489163 * (v28 + 3)) >> 16));
  *(_BYTE *)(v28 - 0x4052B40C9BC7DB86) = (-53 * ((-53 * (v28 + 3)) ^ ((1772489163 * (v28 + 3)) >> 16))) ^ (45 * ((1772489163 * ((1772489163 * ((_DWORD)v28 + 3)) ^ ((1772489163 * (v28 + 3)) >> 16))) >> 24)) ^ *(_BYTE *)(v31 + (v36 >> 24)) ^ v32[v36 >> 24] ^ *(_BYTE *)((v36 >> 24) + v33 + 1) ^ 0xFA;
  v37 = 1772489163 * ((1772489163 * ((_DWORD)v29 + 4)) ^ ((1772489163 * (v29 + 4)) >> 16));
  *(_BYTE *)(v29 - 0x4052B40C9BC7DB85) = *(_BYTE *)(v31 + (v37 >> 24)) ^ v32[v37 >> 24] ^ *(_BYTE *)((v37 >> 24) + v33 + 1) ^ v37 ^ (45 * ((1772489163 * ((1772489163 * ((_DWORD)v29 + 4)) ^ ((1772489163 * (v29 + 4)) >> 16))) >> 24)) ^ 0x68;
  v38 = 1772489163 * ((1772489163 * ((_DWORD)v29 + 5)) ^ ((1772489163 * (v29 + 5)) >> 16));
  *(_BYTE *)(v29 - 0x4052B40C9BC7DB84) = *(_BYTE *)(v31 + (v38 >> 24)) ^ v32[v38 >> 24] ^ *(_BYTE *)((v38 >> 24) + v33 + 1) ^ v38 ^ (45 * ((1772489163 * ((1772489163 * ((_DWORD)v29 + 5)) ^ ((1772489163 * (v29 + 5)) >> 16))) >> 24)) ^ 3;
  v39 = 1772489163 * ((1772489163 * ((_DWORD)v29 + 6)) ^ ((1772489163 * (v29 + 6)) >> 16));
  *(_BYTE *)(v29 - 0x4052B40C9BC7DB83) = (-53 * ((-53 * (v29 + 6)) ^ ((1772489163 * (v29 + 6)) >> 16))) ^ *(_BYTE *)(v31 + (v39 >> 24)) ^ v32[v39 >> 24] ^ (45 * ((1772489163 * ((1772489163 * ((_DWORD)v29 + 6)) ^ ((1772489163 * (v29 + 6)) >> 16))) >> 24)) ^ *(_BYTE *)((v39 >> 24) + v33 + 1) ^ 0xF;
  v40 = 1772489163 * ((1772489163 * ((_DWORD)v29 + 7)) ^ ((1772489163 * (v29 + 7)) >> 16));
  v41 = STACK[0x4400];
  v42 = STACK[0x43F0];
  v43 = STACK[0x43F8];
  *(_BYTE *)(v29 - 0x4052B40C9BC7DB82) = (-53 * ((-53 * (v29 + 7)) ^ ((1772489163 * (v29 + 7)) >> 16))) ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v29 + 7)) ^ ((1772489163 * (v29 + 7)) >> 16))) >> 24)) ^ *(_BYTE *)(STACK[0x4400] + (v40 >> 24)) ^ *(_BYTE *)((v40 >> 24) + STACK[0x43F0] + 2) ^ *(_BYTE *)((v40 >> 24) + STACK[0x43F8] + 4) ^ 0x51;
  v44 = STACK[0xBFC8];
  v45 = STACK[0xBFC8];
  v46 = 1772489163 * ((1772489163 * ((_DWORD)v44 + 8)) ^ ((1772489163 * (v44 + 8)) >> 16));
  *(_BYTE *)(v44 - 0x4052B40C9BC7DB81) = *(_BYTE *)(v41 + (v46 >> 24)) ^ *(_BYTE *)((v46 >> 24) + v42 + 2) ^ *(_BYTE *)((v46 >> 24) + v43 + 4) ^ v46 ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v44 + 8)) ^ ((1772489163 * (v44 + 8)) >> 16))) >> 24)) ^ 0x71;
  v47 = 1772489163 * ((1772489163 * ((_DWORD)v44 + 9)) ^ ((1772489163 * (v44 + 9)) >> 16));
  *(_BYTE *)(v44 - 0x4052B40C9BC7DB80) = *(_BYTE *)(v41 + (v47 >> 24)) ^ *(_BYTE *)((v47 >> 24) + v42 + 2) ^ *(_BYTE *)((v47 >> 24) + v43 + 4) ^ v47 ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v44 + 9)) ^ ((1772489163 * (v44 + 9)) >> 16))) >> 24)) ^ 0xCE;
  v48 = 1772489163 * ((1772489163 * ((_DWORD)v44 + 10)) ^ ((1772489163 * (v44 + 10)) >> 16));
  *(_BYTE *)(v44 - 0x4052B40C9BC7DB7FLL) = v48 ^ *(_BYTE *)(v41 + (v48 >> 24)) ^ *(_BYTE *)((v48 >> 24) + v42 + 2) ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v44 + 10)) ^ ((1772489163 * (v44 + 10)) >> 16))) >> 24)) ^ *(_BYTE *)((v48 >> 24) + v43 + 4) ^ 0xB4;
  v49 = 1772489163 * ((1772489163 * ((_DWORD)v44 + 11)) ^ ((1772489163 * (v44 + 11)) >> 16));
  *(_BYTE *)(v44 - 0x4052B40C9BC7DB7ELL) = (-53 * ((-53 * (v44 + 11)) ^ ((1772489163 * (v44 + 11)) >> 16))) ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v44 + 11)) ^ ((1772489163 * (v44 + 11)) >> 16))) >> 24)) ^ *(_BYTE *)(v41 + (v49 >> 24)) ^ *(_BYTE *)((v49 >> 24) + v42 + 2) ^ *(_BYTE *)((v49 >> 24) + v43 + 4) ^ 0x5E;
  v50 = 1772489163 * ((1772489163 * ((_DWORD)v45 + 12)) ^ ((1772489163 * (v45 + 12)) >> 16));
  *(_BYTE *)(v45 - 0x4052B40C9BC7DB7DLL) = *(_BYTE *)(v41 + (v50 >> 24)) ^ *(_BYTE *)((v50 >> 24) + v42 + 2) ^ *(_BYTE *)((v50 >> 24) + v43 + 4) ^ v50 ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v45 + 12)) ^ ((1772489163 * (v45 + 12)) >> 16))) >> 24)) ^ 0xAA;
  v51 = 1772489163 * ((1772489163 * ((_DWORD)v45 + 13)) ^ ((1772489163 * (v45 + 13)) >> 16));
  *(_BYTE *)(v45 - 0x4052B40C9BC7DB7CLL) = *(_BYTE *)(v41 + (v51 >> 24)) ^ *(_BYTE *)((v51 >> 24) + v42 + 2) ^ *(_BYTE *)((v51 >> 24) + v43 + 4) ^ v51 ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v45 + 13)) ^ ((1772489163 * (v45 + 13)) >> 16))) >> 24)) ^ 0x29;
  STACK[0xAD98] = (unint64_t)(v2 + 0x1FA352732AF767B5);
  v52 = 1772489163 * ((1772489163 * ((_DWORD)v45 + 14)) ^ ((1772489163 * (v45 + 14)) >> 16));
  *(_BYTE *)(v45 - 0x4052B40C9BC7DB7BLL) = v52 ^ *(_BYTE *)(v41 + (v52 >> 24)) ^ *(_BYTE *)((v52 >> 24) + v42 + 2) ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v45 + 14)) ^ ((1772489163 * (v45 + 14)) >> 16))) >> 24)) ^ *(_BYTE *)((v52 >> 24) + v43 + 4) ^ 0x41;
  v53 = 1772489163 * ((1772489163 * ((_DWORD)v45 + 15)) ^ ((1772489163 * (v45 + 15)) >> 16));
  *(_BYTE *)(v45 - 0x4052B40C9BC7DB7ALL) = (-53 * ((-53 * (v45 + 15)) ^ ((1772489163 * (v45 + 15)) >> 16))) ^ (95 * ((1772489163 * ((1772489163 * ((_DWORD)v45 + 15)) ^ ((1772489163 * (v45 + 15)) >> 16))) >> 24)) ^ *(_BYTE *)(v41 + (v53 >> 24)) ^ *(_BYTE *)((v53 >> 24) + v42 + 2) ^ *(_BYTE *)((v53 >> 24) + v43 + 4) ^ 0xB2;
  v54 = STACK[0xAD98];
  v55 = STACK[0xAD98];
  v56 = 1772489163 * ((1772489163 * (_DWORD)v54) ^ ((1772489163 * v54) >> 16));
  v57 = (char *)*(&off_1015B46D0 + (int)v0 - 2099) - 8;
  v58 = (uint64_t)*(&off_1015B46D0 + (int)(v0 ^ 0x1697));
  v59 = (char *)*(&off_1015B46D0 + (int)(v0 ^ 0x1319)) - 4;
  *(_BYTE *)(v54 - 0x1FA352732AF76775) = v57[v56 >> 24] ^ *(_BYTE *)(v58 + (v56 >> 24)) ^ v59[(v56 >> 24) + 2] ^ v56 ^ (-119 * BYTE3(v56)) ^ 0x72;
  v60 = 1772489163 * ((1772489163 * (_DWORD)v54 + 1772489163) ^ ((1772489163 * v54 + 1772489163) >> 16));
  *(_BYTE *)(v54 - 0x1FA352732AF76774) = v57[v60 >> 24] ^ v60 ^ *(_BYTE *)(v58 + (v60 >> 24)) ^ v59[(v60 >> 24) + 2] ^ (-119 * BYTE3(v60)) ^ 0xA8;
  v61 = 1772489163 * ((1772489163 * ((_DWORD)v54 + 2)) ^ ((1772489163 * (v54 + 2)) >> 16));
  *(_BYTE *)(v54 - 0x1FA352732AF76773) = (-53 * ((-53 * (v54 + 2)) ^ ((1772489163 * (v54 + 2)) >> 16))) ^ (-119 * ((1772489163 * ((1772489163 * ((_DWORD)v54 + 2)) ^ ((1772489163 * (v54 + 2)) >> 16))) >> 24)) ^ v57[v61 >> 24] ^ *(_BYTE *)(v58 + (v61 >> 24)) ^ v59[(v61 >> 24) + 2] ^ 0xFA;
  v62 = 1772489163 * ((1772489163 * ((_DWORD)v54 + 3)) ^ ((1772489163 * (v54 + 3)) >> 16));
  *(_BYTE *)(v54 - 0x1FA352732AF76772) = (-53 * ((-53 * (v54 + 3)) ^ ((1772489163 * (v54 + 3)) >> 16))) ^ (-119 * ((1772489163 * ((1772489163 * ((_DWORD)v54 + 3)) ^ ((1772489163 * (v54 + 3)) >> 16))) >> 24)) ^ v57[v62 >> 24] ^ *(_BYTE *)(v58 + (v62 >> 24)) ^ v59[(v62 >> 24) + 2] ^ 0x8A;
  v63 = 1772489163 * ((1772489163 * ((_DWORD)v55 + 4)) ^ ((1772489163 * (v55 + 4)) >> 16));
  *(_BYTE *)(v55 - 0x1FA352732AF76771) = v57[v63 >> 24] ^ *(_BYTE *)(v58 + (v63 >> 24)) ^ v59[(v63 >> 24) + 2] ^ v63 ^ (-119 * ((1772489163 * ((1772489163 * ((_DWORD)v55 + 4)) ^ ((1772489163 * (v55 + 4)) >> 16))) >> 24)) ^ 0xFB;
  v64 = 1772489163 * ((1772489163 * ((_DWORD)v55 + 5)) ^ ((1772489163 * (v55 + 5)) >> 16));
  *(_BYTE *)(v55 - 0x1FA352732AF76770) = v57[v64 >> 24] ^ *(_BYTE *)(v58 + (v64 >> 24)) ^ v59[(v64 >> 24) + 2] ^ v64 ^ (-119 * BYTE3(v64)) ^ 0xBC;
  v65 = 1772489163 * ((1772489163 * ((_DWORD)v55 + 6)) ^ ((1772489163 * (v55 + 6)) >> 16));
  *(_BYTE *)(v55 - 0x1FA352732AF7676FLL) = (-53 * ((-53 * (v55 + 6)) ^ ((1772489163 * (v55 + 6)) >> 16))) ^ v57[v65 >> 24] ^ *(_BYTE *)(v58 + (v65 >> 24)) ^ (-119 * ((1772489163 * ((1772489163 * ((_DWORD)v55 + 6)) ^ ((1772489163 * (v55 + 6)) >> 16))) >> 24)) ^ v59[(v65 >> 24) + 2] ^ 0x31;
  v66 = 1772489163 * ((1772489163 * ((_DWORD)v55 + 7)) ^ ((1772489163 * (v55 + 7)) >> 16));
  v67 = STACK[0x4888];
  v68 = STACK[0x4890];
  v69 = STACK[0x4898];
  *(_BYTE *)(v55 - 0x1FA352732AF7676ELL) = (-53 * ((-53 * (v55 + 7)) ^ ((1772489163 * (v55 + 7)) >> 16))) ^ (59 * ((1772489163 * ((1772489163 * ((_DWORD)v55 + 7)) ^ ((1772489163 * (v55 + 7)) >> 16))) >> 24)) ^ *(_BYTE *)(STACK[0x4888] + (v66 >> 24)) ^ *(_BYTE *)(STACK[0x4890] + (v66 >> 24) + 2) ^ *(_BYTE *)(STACK[0x4898] + (v66 >> 24) + 2) ^ 0xB7;
  v70 = STACK[0xAD98];
  v71 = STACK[0xAD98];
  v72 = 1772489163 * ((1772489163 * ((_DWORD)v70 + 8)) ^ ((1772489163 * (v70 + 8)) >> 16));
  *(_BYTE *)(v70 - 0x1FA352732AF7676DLL) = *(_BYTE *)(v67 + (v72 >> 24)) ^ *(_BYTE *)(v68 + (v72 >> 24) + 2) ^ *(_BYTE *)(v69 + (v72 >> 24) + 2) ^ (-53 * ((-53 * (v70 + 8)) ^ ((1772489163 * (v70 + 8)) >> 16))) ^ (59 * ((1772489163 * ((1772489163 * ((_DWORD)v70 + 8)) ^ ((1772489163 * (v70 + 8)) >> 16))) >> 24)) ^ 0x4B;
  v73 = 1772489163 * ((1772489163 * ((_DWORD)v70 + 9)) ^ ((1772489163 * (v70 + 9)) >> 16));
  *(_BYTE *)(v70 - 0x1FA352732AF7676CLL) = *(_BYTE *)(v67 + (v73 >> 24)) ^ *(_BYTE *)(v68 + (v73 >> 24) + 2) ^ *(_BYTE *)(v69 + (v73 >> 24) + 2) ^ (-53 * ((-53 * (v70 + 9)) ^ ((1772489163 * (v70 + 9)) >> 16))) ^ (59 * ((1772489163 * ((1772489163 * ((_DWORD)v70 + 9)) ^ ((1772489163 * (v70 + 9)) >> 16))) >> 24)) ^ 0xA8;
  v74 = 1772489163 * ((1772489163 * ((_DWORD)v70 + 10)) ^ ((1772489163 * (v70 + 10)) >> 16));
  *(_BYTE *)(v70 - 0x1FA352732AF7676BLL) = v74 ^ *(_BYTE *)(v67 + (v74 >> 24)) ^ *(_BYTE *)(v68 + (v74 >> 24) + 2) ^ (59 * BYTE3(v74)) ^ *(_BYTE *)(v69 + (v74 >> 24) + 2) ^ 0xA1;
  v75 = 1772489163 * ((1772489163 * ((_DWORD)v70 + 11)) ^ ((1772489163 * (v70 + 11)) >> 16));
  *(_BYTE *)(v70 - 0x1FA352732AF7676ALL) = (-53 * ((-53 * (v70 + 11)) ^ ((1772489163 * (v70 + 11)) >> 16))) ^ (59 * ((1772489163 * ((1772489163 * ((_DWORD)v70 + 11)) ^ ((1772489163 * (v70 + 11)) >> 16))) >> 24)) ^ *(_BYTE *)(v67 + (v75 >> 24)) ^ *(_BYTE *)(v68 + (v75 >> 24) + 2) ^ *(_BYTE *)(v69 + (v75 >> 24) + 2) ^ 0xD;
  v76 = 1772489163 * ((1772489163 * ((_DWORD)v71 + 12)) ^ ((1772489163 * (v71 + 12)) >> 16));
  *(_BYTE *)(v71 - 0x1FA352732AF76769) = *(_BYTE *)(v67 + (v76 >> 24)) ^ *(_BYTE *)(v68 + (v76 >> 24) + 2) ^ *(_BYTE *)(v69 + (v76 >> 24) + 2) ^ (-53 * ((-53 * (v71 + 12)) ^ ((1772489163 * (v71 + 12)) >> 16))) ^ (59 * ((1772489163 * ((1772489163 * ((_DWORD)v71 + 12)) ^ ((1772489163 * (v71 + 12)) >> 16))) >> 24)) ^ 0xB7;
  v77 = 1772489163 * ((1772489163 * ((_DWORD)v71 + 13)) ^ ((1772489163 * (v71 + 13)) >> 16));
  *(_BYTE *)(v71 - 0x1FA352732AF76768) = *(_BYTE *)(v67 + (v77 >> 24)) ^ *(_BYTE *)(v68 + (v77 >> 24) + 2) ^ *(_BYTE *)(v69 + (v77 >> 24) + 2) ^ (-53 * ((-53 * (v71 + 13)) ^ ((1772489163 * (v71 + 13)) >> 16))) ^ (59 * ((1772489163 * ((1772489163 * ((_DWORD)v71 + 13)) ^ ((1772489163 * (v71 + 13)) >> 16))) >> 24)) ^ 0x29;
  v78 = 1772489163 * ((1772489163 * ((_DWORD)v71 + 14)) ^ ((1772489163 * (v71 + 14)) >> 16));
  *(_BYTE *)(v71 - 0x1FA352732AF76767) = v78 ^ *(_BYTE *)(v67 + (v78 >> 24)) ^ *(_BYTE *)(v68 + (v78 >> 24) + 2) ^ (59 * BYTE3(v78)) ^ *(_BYTE *)(v69 + (v78 >> 24) + 2) ^ 0x66;
  v79 = (unint64_t)(1772489163
                         * ((1772489163 * ((_DWORD)v71 + 15)) ^ ((1772489163 * (v71 + 15)) >> 16))) >> 24;
  *(_BYTE *)(v71 - 0x1FA352732AF76766) = (-53 * ((-53 * (v71 + 15)) ^ ((1772489163 * (v71 + 15)) >> 16))) ^ (59 * ((1772489163 * ((1772489163 * ((_DWORD)v71 + 15)) ^ ((1772489163 * (v71 + 15)) >> 16))) >> 24)) ^ *(_BYTE *)(v67 + v79) ^ *(_BYTE *)(v68 + v79 + 2) ^ *(_BYTE *)(v69 + v79 + 2) ^ 0xF9;
  STACK[0xB2A8] = (unint64_t)(v2 + 0x61A62D86AB16EA08);
  v80 = v0 + 1822;
  v81 = ((uint64_t (*)(uint64_t))STACK[0x5510])(36);
  STACK[0xA150] = v81 + 0xC27AFEAA03E150FLL;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((18087 * (v81 != 0)) ^ v80)))();
}

uint64_t sub_100B56C4C()
{
  unsigned int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = (v0 ^ 0xFFFFFFFFFFFFFCABLL) + *(_QWORD *)(STACK[0x6AD8] + 8 * (int)v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 + 3464)) - 8))();
}

uint64_t sub_100B56C88()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((STACK[0x6508] - 1027) ^ 0x277D ^ (32016
                                                                                 * (((STACK[0x6508] - 1027) ^ 0x4F1548F9) > 0xC3A1B14B))))
                            - ((STACK[0x6508] - 1135) | 0x2250)
                            + 11855))();
}

uint64_t sub_100B56D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6) - ((v7 + v6 + 530) & 0x13659C7E) + 4206))(7041, 5563, 4222, 95, 154, a6, STACK[0x4F88], STACK[0x4F80]);
}

uint64_t sub_100B56D84()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0x9654]) = v1;
  v2 = STACK[0x2F6C];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(LODWORD(STACK[0x2F6C]) ^ 0xF8075852)) - 4;
  LODWORD(STACK[0xEE20]) = v2 ^ 0xE0A;
  LODWORD(STACK[0xEE50]) = v2;
  STACK[0xEE30] = v1;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = STACK[0x2F68];
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((((v0 - 240) | 0x4D097778) - (v0 - 240) + ((v0 - 240) & 0xB2F68880)) ^ 0x709BA821)
                          + STACK[0x6508];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100B56E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 3432)) - 12))(a1, a2, a3, 577628422, 606767441, 1104152011, a7, 3190810030);
}

uint64_t sub_100B56ED8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((6305 * (STACK[0xA150] != 0xC27AFEAA03E150FLL)) ^ (v0 + 5476)))
                            - 4))();
}

uint64_t sub_100B56F20()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B56F48()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((4 * (STACK[0x9078] == 0xC27AFEAA03E150FLL)) | (8
                                                                                          * (STACK[0x9078] == 0xC27AFEAA03E150FLL))) ^ (v0 + 960)))
                            - 4))();
}

uint64_t sub_100B56F90()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 964)) - 4))(v1);
}

uint64_t sub_100B56FBC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6889)) - ((v0 + 6889) ^ 0x2B5BLL)))();
}

uint64_t sub_100B5707C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7, char a8)
{
  uint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v24 = (unint64_t)((v10 ^ HIWORD(v10)) * (v9 ^ v16 ^ v15)) >> 24;
  v25 = (unint64_t)((v13 ^ HIWORD(v13)) * a6) >> 24;
  *(_BYTE *)(v8 + v11) = *(_BYTE *)(v14 + v11) ^ *(_BYTE *)(v12 + v11) ^ *(_BYTE *)(v19 + v24) ^ *(_BYTE *)(v24 + v21 + 1) ^ *(_BYTE *)(v18 + v24) ^ *(_BYTE *)(v20 + v25) ^ *(_BYTE *)(v25 + v23 + 2) ^ *(_BYTE *)(v25 + v22 + 4) ^ ((v13 ^ BYTE2(v13)) * a6) ^ ((v10 ^ BYTE2(v10)) * (v9 ^ v16 ^ v15)) ^ (v24 * a7) ^ ((((v13 ^ HIWORD(v13)) * a6) >> 24) * a8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v11 == 15) * v17) ^ v9)) - 4))();
}

uint64_t sub_100B5712C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 + 16833)) - 4))(a1, a2, a3, a4, 324803451, 117446816, 623382785, 1670464441);
}

uint64_t sub_100B5718C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;

  v5 = v1 + v3 - 0x2C990CF5135C0AFDLL;
  v6 = *(_BYTE *)(v5 - 0x61A62D86AB16EA08);
  v7 = ((1772489163 * (_DWORD)v5) ^ ((1772489163 * v5) >> 16))
     * (((v2 + 34077335) | 0x11540000) ^ 0x7AFA02C6);
  LOBYTE(v7) = *(_BYTE *)(STACK[0x4A08] + (v7 >> 24)) ^ v6 ^ *(_BYTE *)(STACK[0x4A10] + (v7 >> 24)) ^ *(_BYTE *)(v4 + (v7 >> 24)) ^ v7 ^ (5 * BYTE3(v7));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((986
                                          * (((((v7 ^ 0x18) + 30) ^ ((v7 ^ 0xA8) - 82) ^ ((v7 ^ 0xB0) - 74))
                                                             - *(_BYTE *)(v0 + v3 - 0x2C990CF5135C0AFDLL)) == 6)) ^ (v2 + 21897)))
                            - 8))();
}

uint64_t sub_100B5727C()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((87
                                          * ((((v0 + 1 - (v1 | ((unint64_t)(v1 ^ 0x3FC507F8) << 32))) | ((v1 | ((unint64_t)(v1 ^ 0x3FC507F8) << 32)) - (v0 + 1))) & 0x8000000000000000) == 0)) ^ ((int)v1 - 324778198)))
                            - 4))();
}

uint64_t sub_100B572E4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 16874)) - 4))();
}

uint64_t sub_100B5737C()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((49 * (v1 == 244649449)) ^ v0)))();
}

uint64_t sub_100B5746C()
{
  int v0;

  ++*(_DWORD *)STACK[0x47D0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 1646710298) & 0x9DD93797 ^ 0x1790)))();
}

uint64_t sub_100B574B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  _QWORD *v13;
  unint64_t v14;

  v9 = *(_DWORD *)STACK[0x47D0];
  *(_DWORD *)STACK[0x47D0] = v9 + 1;
  v10 = ((v7 - 1768) ^ 0x49F5) & v9;
  v11 = 8 * v10;
  v12 = v10 >= 0x16;
  v13 = (_QWORD *)(STACK[0x5060] + 8 * v10);
  v14 = v11 + STACK[0x5068] - 176;
  if (v12)
    v13 = (_QWORD *)v14;
  *v13 = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 4))(a1, a2, a3, a4, a5, a6, a7, 1140987260);
}

uint64_t sub_100B57548()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v6 = ((((_DWORD)v3 + (_DWORD)v1) * v4) ^ (((v3 + v1) * v4) >> 16)) * v4;
  *(_BYTE *)(v0 + v1) = *(_BYTE *)(v3 + v1 + v5) ^ *(_BYTE *)(STACK[0x4888] + (v6 >> 24)) ^ *(_BYTE *)(STACK[0x4890] + (v6 >> 24) + 2) ^ (*(_BYTE *)(v0 + v1) - (((v2 ^ 0xEC) + 66) & (2 * *(_BYTE *)(v0 + v1))) + 52) ^ *(_BYTE *)(STACK[0x4898] + (v6 >> 24) + 2) ^ ((((v3 + v1) * v4) ^ (((v3 + v1) * v4) >> 16)) * v4) ^ (59 * ((((((_DWORD)v3 + (_DWORD)v1) * v4) ^ (((v3 + v1) * v4) >> 16)) * v4) >> 24)) ^ 0x34;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((6520 * (v1 != 15)) ^ v2)) - 4))();
}

uint64_t sub_100B575FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  char v12;
  uint64_t v13;
  int v14;
  unint64_t v15;

  v13 = v7 + v9 - 0x20E1E36A7BF68DFALL;
  v14 = (v11 + v8 + 1757) | a6;
  v15 = (((_DWORD)v13 * v10) ^ ((v13 * v10) >> 16)) * (v14 ^ 0x6EAF1369);
  LODWORD(v13) = *(unsigned __int8 *)(STACK[0x4A08] + (v15 >> 24)) ^ *(unsigned __int8 *)(v13 - 0x61A62D86AB16EA08) ^ *(unsigned __int8 *)(STACK[0x4A10] + (v15 >> 24)) ^ *(unsigned __int8 *)(STACK[0x47F0] + (v15 >> 24)) ^ v15 ^ (5 * (((((_DWORD)v13 * v10) ^ ((v13 * v10) >> 16)) * (v14 ^ 0x6EAF1369)) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((101
                                          * (((((v13 ^ (((v8 - 31) | v12) - 24)) - 61) ^ ((v13 ^ 0x8D) + 81) ^ ((v13 ^ 0x92) + 80))
                                                             - *(_BYTE *)(v6 + v9 - 0x20E1E36A7BF68DFALL)) != 222)) ^ v8))
                            - 12))();
}

uint64_t sub_100B576E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v8 + 1 != ((v9 + 12015) ^ 0x20E1E36A7BF6D72CLL))
                                               * (((v9 + a8) & 0xBBFDEDEF) + v10)) ^ v9))
                            - 4))();
}

uint64_t sub_100B57750()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x7090724 ^ (14257 * (v0 != 1255320645)))) - 4))();
}

uint64_t sub_100B57828()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((27 * (v1 != -706868051)) ^ v0)))();
}

uint64_t sub_100B578F4()
{
  int v0;

  ++*(_DWORD *)STACK[0x47D0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B579D0()
{
  int v0;

  ++*(_DWORD *)STACK[0x47D0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B57A70@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;

  v3 = (v1 - 5973) & v2;
  v4 = 8 * v3;
  v5 = (_QWORD *)(STACK[0x5060] + v4);
  v6 = v4 + STACK[0x5068] - 176;
  if (v3 >= 0x16)
    v7 = (_QWORD *)v6;
  else
    v7 = v5;
  *v7 = a1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v1))();
}

uint64_t sub_100B57AB0()
{
  int v0;
  uint64_t v1;

  STACK[0xC768] -= 80;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0)
                                          - ((v0 + 396127103) & 0xE86396FE)
                                          + 4206))(v1);
}

uint64_t sub_100B57B04()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((5518 * (STACK[0x7C38] != 0)) ^ (v0 + 12301))))();
}

uint64_t sub_100B57B30()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B57B40()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((39 * (STACK[0x6E78] != 0)) ^ (v0 + 932))) - 12))();
}

uint64_t sub_100B57B6C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v1);
}

uint64_t sub_100B57B80()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((8 * (STACK[0xC960] == 0)) | (16 * (STACK[0xC960] == 0))) ^ (v0 + 5743)))
                            - 8))();
}

uint64_t sub_100B57BB8()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 5767)) - 8))(v1);
}

uint64_t sub_100B57BD4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((164 * (STACK[0x79D8] == 0)) ^ (v0 + 15088))))();
}

uint64_t sub_100B57C04()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2619)) - 4))(v1);
}

uint64_t sub_100B57C20()
{
  return ((uint64_t (*)(void))STACK[0x7F28])();
}

uint64_t sub_100B57C30()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 5940) ^ (5017 * (v0 == -1926392729))))
                            - ((STACK[0x3120] + 2947) ^ 0x1077)))();
}

uint64_t sub_100B57C7C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t (*v2)(unint64_t);

  v0 = STACK[0x3120];
  LODWORD(STACK[0xAD80]) = -1926392729;
  v1 = STACK[0x9560] + 108;
  v2 = (uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v0 + 8317))
                                                - ((v0 + 11149) ^ 0x3085));
  STACK[0xADD8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return v2(v1);
}

uint64_t sub_100B57D00()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 5940) ^ (7404 * (v0 == -1926392729))))
                            - (STACK[0x6508] ^ 9)
                            - ((STACK[0x6508] + 2144314632) & 0xFF3B4FEF ^ 0xFFFFFFFF80F4EAE7)))();
}

uint64_t sub_100B57D70()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((26818 * (v0 == (v0 ^ 0x7F0B1511) + 883312403)) ^ (v0 - 2131418564)))
                            - 8))();
}

uint64_t sub_100B57DE8@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((a1 ^ v1 ^ (STACK[0x6BD8] == 0x3032385379A144E6)) & 1) == 0)
                                          * (((a1 - 61) | 0x34) ^ 0x37CE)) ^ a1))
                            - 4))();
}

uint64_t sub_100B57E40()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 9)) - 4))(v1);
}

uint64_t sub_100B57E78()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0x8D64]) = v2;
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 + 1347352368) ^ 0x504F1738)) - 4;
  LODWORD(STACK[0xEE20]) = (v0 + 1347352368) ^ 0x1036;
  LODWORD(STACK[0xEE50]) = v0 + 1347352368;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v2;
  LODWORD(STACK[0xEE60]) = v0 + 1347352447;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * (((((v1 - 240) | 0x9FBE5D4) ^ 0xFFFFFFFE) - (~(v1 - 240) | 0xF6041A2B)) ^ 0xCB96C572)
                          + v0;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100B57F6C()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 1438;
  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(16);
  *(_QWORD *)STACK[0xCF68] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 != 0) * (v0 ^ 0xAD6)) ^ LODWORD(STACK[0x2B5C])))
                            - 12))();
}

uint64_t sub_100B57FCC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  int v6;

  *(_DWORD *)(STACK[0x96E0] - 0xB580E1F2621E52FLL) = -1926392713;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 + 11707)) - (((v6 + 5840) | 0xC00u) ^ 0x2DACLL)))(*a6, a1, a2, a3, a4, a5, 3537203550, 3589933888);
}

uint64_t sub_100B58084()
{
  STACK[0xC768] -= 400;
  return ((uint64_t (*)(void))STACK[0xB058])();
}

uint64_t sub_100B580B0()
{
  int v0;
  _BOOL4 v5;

  v5 = v0 != STACK[0x6508] - 1926396943
    || STACK[0x9438] == 0
    || LODWORD(STACK[0xA040]) == 1930690922
    || STACK[0xA0C8] == 0
    || LODWORD(STACK[0xA1D4]) == 1930690922;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((115 * v5) ^ LODWORD(STACK[0x3438]))) - 8))();
}

uint64_t sub_100B5813C()
{
  int v0;
  unint64_t v1;

  LODWORD(STACK[0xC174]) = -1926392729;
  v1 = STACK[0x6AD8];
  STACK[0xACB8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v0 - 1342372798) & 0x5002F9BD ^ 0x18BE) + v0)) - 4))();
}

uint64_t sub_100B581D0@<X0>(int a1@<W8>)
{
  unint64_t v1;
  char v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  LODWORD(STACK[0x8F4C]) = a1;
  STACK[0xB4B8] = v4;
  STACK[0xB7E8] = v5;
  LOBYTE(STACK[0xA2AF]) = v2;
  v7 = STACK[0xC768];
  STACK[0xB700] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v7 + 400;
  STACK[0xC820] = v6;
  STACK[0x7F88] = v1;
  LOWORD(STACK[0xA252]) = -16107;
  v8 = STACK[0x6AD8];
  STACK[0xA700] = (v3 ^ 0x683Au) - 24891 + *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v3 + 3700)) - 4))();
}

uint64_t sub_100B58294(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, _UNKNOWN **))(*(_QWORD *)(STACK[0x6AD8]
                                                                   + 8
                                                                   * (int)((LODWORD(STACK[0x2EC8]) * (v1 == -1926392729)) ^ (STACK[0x6508] - 3236)))
                                                       - 8))(a1, &off_1015B46D0);
}

uint64_t sub_100B582E8()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((59 * (LOBYTE(STACK[0x7F77]) == (LOBYTE(STACK[0x27BC]) + 46))) ^ LODWORD(STACK[0x27C0])))
                            - 8))();
}

uint64_t sub_100B5833C@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 + 14218) * (a1 == -1926392713)) ^ v1))
                            - 4462 * (v1 ^ 0x3D1u)
                            + 13378))();
}

uint64_t sub_100B583A4()
{
  int v0;
  int v1;
  int v2;

  LODWORD(STACK[0x6C2C]) = v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v2 != -1926392729) * ((v1 + 1200) ^ 0x1503)) ^ (v1 + 1165))))();
}

uint64_t sub_100B583E4@<X0>(int a1@<W8>)
{
  BOOL v1;
  int v2;

  if (STACK[0x85D8])
    v1 = LODWORD(STACK[0x9928]) == 0;
  else
    v1 = 1;
  v2 = !v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((765 * v2) ^ a1)))();
}

uint64_t sub_100B58434@<X0>(int a1@<W8>)
{
  unsigned __int8 *v1;
  unsigned int v2;
  unint64_t v3;
  int v4;

  STACK[0x85D8] = (unint64_t)(v1 + 1);
  v2 = 1772489163
     * ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x1A3E29B8)) ^ v1) & 0x7FFFFFFF);
  v3 = 1772489163 * (v2 ^ HIWORD(v2));
  v4 = *(unsigned __int8 *)(STACK[0x5660] + (v3 >> 24)) ^ *v1 ^ *(unsigned __int8 *)(STACK[0x5668] + (v3 >> 24)) ^ *(unsigned __int8 *)((v3 >> 24) + STACK[0x58D0] + 2) ^ v3 ^ ((v3 >> 24) * (7 * (a1 ^ 0x177C) + 15));
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((21646
                                * ((((v4 ^ 0x96) - 96) ^ ((v4 ^ 0x75) + 125) ^ ((v4 ^ 0xE3) - 21)) == 90)) ^ a1)))();
}

uint64_t sub_100B58518@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  STACK[0x85D8] = v1 + 2;
  v5 = ((*(_DWORD *)(v3 + v4) ^ v2) & 0x7FFFFFFF) * (((a1 + 1462618328) & 0xA8D23277) + 1772484949);
  v6 = 1772489163 * (v5 ^ HIWORD(v5));
  v7 = v6 >> (((a1 - 40) ^ 0xA0u) - 70);
  v8 = *(_BYTE *)(STACK[0x5660] + v7) ^ *(_BYTE *)(v1 + 1) ^ *(_BYTE *)(STACK[0x5668] + v7) ^ *(_BYTE *)(v7 + STACK[0x58D0] + 2) ^ v6 ^ (-123 * v7);
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((8332
                                * ((((v8 ^ 0x7B) - 103) ^ ((v8 ^ 0x23) - 63) ^ ((v8 ^ 0x58) - 68)) == 244)) ^ a1)))();
}

uint64_t sub_100B5860C()
{
  uint64_t v0;
  unint64_t v1;

  STACK[0x8740] = STACK[0xB210] + 16;
  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 3453))
                            - (((_DWORD)v0 - 1586021281) & 0x5E88F9FE ^ 0x39B4)))();
}

uint64_t sub_100B5866C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v1 & 0x2B3987FF ^ ((a1 == -1926392761) * v2)))
                            - (((v1 & 0x2B3987FF ^ 0x13A4u) + 9172) ^ 0x3442)))();
}

uint64_t sub_100B586D4(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((STACK[0xC090] + 16 <= STACK[0x7CB0] - 0x640A6DF8ECDDBAB5) * (((v2 - 1029) | 0x418) ^ 0x60BC)) ^ v2)) - 4))(a1, a2, 1772489163, 4133648400, 14223, 12681, 16077, 3973954229);
}

uint64_t sub_100B58770@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;

  v9 = v6 + STACK[0xC090];
  v10 = v6 - 1;
  v11 = ((*(_DWORD *)(*v7 + (*v8 & a2)) ^ (a5 + v10 + a4)) & 0x7FFFFFFF) * (a1 + (v5 ^ a3) - 978);
  v12 = (v11 ^ HIWORD(v11)) * a1;
  *(_BYTE *)(a5 + v10) = *(_BYTE *)(STACK[0x4588] + (v12 >> 24)) ^ *(_BYTE *)(v9 + 15) ^ *(_BYTE *)(STACK[0x4590]
                                                                                                  + (v12 >> 24)) ^ *(_BYTE *)(STACK[0x4598] + (v12 >> 24)) ^ v12 ^ (-103 * BYTE3(v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21750 * (v10 != 0)) ^ v5)) - 4))();
}

uint64_t sub_100B5881C@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, int a5@<W6>, int a6@<W7>, uint64_t a7@<X8>)
{
  int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  _QWORD *v12;
  _DWORD *v13;
  unsigned int v14;
  unint64_t v15;

  v14 = ((*(_DWORD *)(*v12 + (*v13 & a3)) ^ (a7 + v8 + a6)) & 0x7FFFFFFF) * a2;
  v15 = (v14 ^ HIWORD(v14)) * a2;
  *(_BYTE *)(a7 + v8) = *(_BYTE *)(*(_QWORD *)(a1 + 8 * (v7 ^ a4)) + (v15 >> 24) - 12) ^ *(_BYTE *)(v8 + STACK[0xC090] + 16) ^ *(_BYTE *)(*(_QWORD *)(a1 + 8 * (v7 ^ v10)) + ((6 * (v7 ^ v11)) ^ v9) + (v15 >> 24) - 8) ^ *(_BYTE *)(*(_QWORD *)(a1 + 8 * (v7 ^ a5)) + (v15 >> 24) - 1) ^ v15 ^ (19 * BYTE3(v15));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((23 * (v8 == 15)) ^ v7)) - 4))();
}

uint64_t sub_100B588EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *);

  v8 = STACK[0x9438];
  v9 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(STACK[0x6AD8] + 8 * ((((v7 + 11474) | 0x810) - 9943) ^ v7));
  STACK[0xBFC0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 8;
  return v9(37814272, v8, a3, a4, a5, a6, a7, &STACK[0xDEA4]);
}

uint64_t sub_100B58980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 3091) ^ 0x3139 ^ STACK[0x12BC] & 0x1DE02F1E)))(a1, a2, a3, a4, a5, a6, a7, 2147479433);
}

uint64_t sub_100B589D8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x1940];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x1938]) - 4;
  LODWORD(STACK[0xEE20]) = v2 - 114;
  LODWORD(STACK[0xEE50]) = v2;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v1;
  LODWORD(STACK[0xEE60]) = v2 ^ 0x1FF5;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((((v0 - 240) | 0x2A3555CE) - (v0 - 240) + ((v0 - 240) & 0xD5CAAA30)) ^ 0x17A78A97)
                          + STACK[0x6508];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100B58AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  unint64_t v9;

  v7 = STACK[0x6508] - 3276;
  v8 = STACK[0x9438];
  v9 = STACK[0x6AD8];
  STACK[0xBFC0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 8;
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v9 + 8 * (LODWORD(STACK[0x115C]) + v7)))(37814272, v8, a3, a4, a5, a6, a7, &STACK[0xDEA4]);
}

uint64_t sub_100B58B3C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25849 * (STACK[0xC090] != 0)) ^ (v0 + 8509))) - 8))();
}

uint64_t sub_100B58B74()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B58B88()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((432 * (STACK[0x9438] == 0)) ^ (v0 + 12349))) - 8))();
}

uint64_t sub_100B58BC0()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 12429)) - 8))(v1);
}

uint64_t sub_100B58BDC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7126 * (STACK[0xA0C8] != 0)) ^ (v0 + 7635))) - 4))();
}

uint64_t sub_100B58C14()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B58C28()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((955 * (STACK[0xB530] == 0)) ^ (v0 + 4369))))();
}

uint64_t sub_100B58C5C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 4550)))(v1);
}

uint64_t sub_100B58C74()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((v0 - 4151) ^ 0x17FB ^ (2849 * (((v0 - 4151) ^ 0xE6BF64Cu) < 0x407A2091)))))();
}

uint64_t sub_100B58CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  v5 = STACK[0x6508] - 2233;
  *(_DWORD *)STACK[0x7EC0] = STACK[0xD5E4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v5 ^ 0x16ED)))(a1, a2, a3, a4, a5, &STACK[0xDEA4], 1772484949, 1533666748);
}

uint64_t sub_100B58DB8()
{
  unsigned int v0;

  v0 = STACK[0x6508] - 766576283;
  STACK[0xC768] -= 2560;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v0 ^ 0xD24F011A ^ (7840 * (v0 >= 0x9F9F23C9))))
                            - 4))();
}

uint64_t sub_100B58E28()
{
  return ((uint64_t (*)(void))STACK[0x95A8])();
}

uint64_t sub_100B58E38()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((STACK[0x6508] - 2902) ^ 0x3AC5) * (v0 != -1926392729)) ^ (STACK[0x6508] + 3963)))
                            - 4))();
}

uint64_t sub_100B58E74@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t (*v2)(unint64_t);

  LODWORD(STACK[0x9AEC]) = -1926392729;
  v1 = STACK[0x95E0] + 76;
  v2 = (uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0x2059)) - 12);
  STACK[0xADD8] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) + ((a1 + 11113) ^ 0xFFFFFFFFFFFFCF71);
  return v2(v1);
}

uint64_t sub_100B58F08@<X0>(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;
  _BOOL4 v11;

  *(_DWORD *)(v5 + 552) = v7;
  LOBYTE(STACK[0xCC7F]) = v4;
  STACK[0xA578] = a1;
  STACK[0x9890] = v3;
  LODWORD(STACK[0x80B8]) = v8;
  v9 = STACK[0xC768];
  STACK[0xC568] = (unint64_t)&STACK[0x10000] + STACK[0xC768] + 16;
  STACK[0xC768] = v9 + 32;
  STACK[0xC438] = a2;
  STACK[0x8F90] = 0x3032385379A144E6;
  STACK[0xB5F8] = 0;
  v11 = v6 != 0x3032385379A144E6 && a2 != 0x3A8834BBB3077A40;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((v11 * ((v2 - 4588) ^ 0x17F5)) ^ v2)))(37814272);
}

uint64_t sub_100B5900C()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;

  *v0 = -1926392729;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5510])(2560);
  STACK[0x8F90] = v2 + 0x3032385379A144E6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((56 * (v2 == 0)) ^ v1))
                            - ((v1 + 1471127903) & 0xA85077EF ^ 0x37E4)))();
}

uint64_t sub_100B5909C()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(2560);
  STACK[0xB5F8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v1 == 0) ^ (v0 - 77)) & 1)
                                          * (5386 * (v0 ^ 0x37EF) + 5580)) ^ v0))
                            - 8))();
}

uint64_t sub_100B59118()
{
  int v0;
  unint64_t v1;

  STACK[0xD5F8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 10068)) - 12))();
}

uint64_t sub_100B59370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2856) ^ 0x1715)) - 12))(STACK[0xD5F8], a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100B59414()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(void);

  v1 = STACK[0x6508];
  LODWORD(STACK[0x9E24]) = STACK[0x6508] - 4246 + *(_DWORD *)(v0 + 552);
  STACK[0x6A90] = STACK[0xC568];
  v2 = STACK[0x6AD8];
  STACK[0x6C08] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v1 - 3984)) - 12;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((v1 - 3984) ^ 0x4752)) - 4);
  LODWORD(STACK[0x6500]) = 5;
  return v3();
}

uint64_t sub_100B594C0()
{
  int v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] - 3425;
  LODWORD(STACK[0xBC94]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((18644 * (LOBYTE(STACK[0xCC7F]) != (v1 - 17))) ^ v2))
                            - 4))();
}

uint64_t sub_100B59508@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x13CE)) - (a1 + 13991) + 14772))();
}

uint64_t sub_100B59550()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 3631)) - 8))();
}

uint64_t sub_100B59584()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 10102)) - ((v0 + 10384) | 0x618u) + 16150))();
}

uint64_t sub_100B595D4(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2)
                                                                                                - 12))(a1, a2, 25694273, 2170024478, 4243574783, 4269270528, 778273050);
}

uint64_t sub_100B59638()
{
  unsigned int v0;
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v6;

  v6 = v3 < v0 && v4 == v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v6 * ((v1 - 174802959) & 0xA6B7DF7 ^ 0x4D59)) ^ v1)))();
}

uint64_t sub_100B59678(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  v10 = (((v7 + 1) << ((51 * (v6 ^ 0x1D)) ^ 0xCB)) & (a5 + 3967)) + ((v7 + 1) ^ (a6 + 2495)) + a3;
  LOWORD(v10) = *(unsigned __int8 *)(v9 + v10 + 1) ^ 0x92 | ((*(unsigned __int8 *)(v9 + v10) ^ 0xFF92) << 8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((unsigned __int16)((v10 ^ 0x37BB) - 13747 + ((2 * v10) & 0x6F76)) != 520)
                                          * v8) ^ v6))
                            - 8))();
}

uint64_t sub_100B59724@<X0>(int a1@<W6>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v3 + (a2 | (v5 << 16)) + a1 + v6 <= v2) * v7) ^ v4))
                            - 8))();
}

uint64_t sub_100B5976C()
{
  unsigned int v0;
  char v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((45
                                          * (((*(_BYTE *)(v4 + v0) ^ 0x92) - v1 + (v2 ^ v3) + 12 + 108) == ((v2 ^ v3 ^ 0x1E) + 66))) ^ v2 ^ v3))
                            - 12))();
}

uint64_t sub_100B597C4@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  _BOOL4 v3;
  _BOOL4 v4;

  v2 = ((v1 - 12086) ^ 0xE44F2892) + a1;
  v3 = v2 < 0x12B2A07A;
  v4 = v2 > LODWORD(STACK[0x80B8]) + 313696378;
  if (LODWORD(STACK[0x80B8]) > 0xED4D5F85 != v3)
    v4 = v3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v4 * (v1 - 25853)) ^ v1)))();
}

uint64_t sub_100B59844()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((19241 * (v0 == (((v1 + 16) | 1) + 84))) ^ (v1 - 20385))))();
}

uint64_t sub_100B59890@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v2 ^ 0xD19C31FF) + a1 > v1) * ((v2 ^ 0x5871) - 5470)) | v2))
                            - 8))();
}

uint64_t sub_100B598E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8]
                                            + 8
                                            * (((STACK[0xC568] > STACK[0xA578])
                                              * (((v4 - 1858789345) & 0x6ECADFDF ^ 0x7DB)
                                               + ((v4 + 2124941983) & (a4 + 833)))) ^ v4)))(16);
}

uint64_t sub_100B5999C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;

  v20 = ((*(_DWORD *)(*v16 + (*v18 & a6)) ^ (v8 + v10)) & 0x7FFFFFFF) * a5;
  v21 = (v20 ^ HIWORD(v20)) * (v11 ^ v12 ^ v14);
  *(_BYTE *)(v9 + v10) = *(_BYTE *)(a8 + (v21 >> 24)) ^ *(_BYTE *)(v8 + v10) ^ *(_BYTE *)((v21 >> 24) + v17 + 2) ^ *(_BYTE *)(v19 + (v21 >> 24)) ^ v21 ^ (BYTE3(v21) * v15);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v10 != 15) * v13) ^ v11)))();
}

uint64_t sub_100B59A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;

  v18 = a1 - 1;
  v19 = ((*(_DWORD *)(*v14 + (*v16 & a6)) ^ (v8 + v18)) & 0x7FFFFFFF) * ((v10 + a7) & v11 ^ v12);
  v20 = (v19 ^ HIWORD(v19)) * a5;
  *(_BYTE *)(v9 + v18) = *(_BYTE *)(a8 + (v20 >> 24)) ^ *(_BYTE *)(v8 + v18) ^ *(_BYTE *)((v20 >> 24) + v15 + 2) ^ *(_BYTE *)(v17 + (v20 >> 24)) ^ v20 ^ (BYTE3(v20) * v13);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((63 * (v18 != 0)) ^ v10)))();
}

uint64_t sub_100B59AB8()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((75
                                          * (v3
                                           + (v1 ^ 0xBFDDBFD6BF7DED67)
                                           + 0x4022402940821299
                                           + ((((v2 + 679322992) & 0xD78224FD) + 0x17EFBB5D9) & (2 * v1)) <= STACK[0xA578] + ((3 * v0 - 1189091277) ^ 0xFFF7FFFFFBF6EFDCLL) + 0x8000004091024)) ^ v2))
                            - 4))();
}

uint64_t sub_100B59CE8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((28357 * (((v3 + 42) ^ ((a3 ^ (v3 - 3553) ^ 0x4BAF450) == 0)) & 1)) ^ v3)))();
}

uint64_t sub_100B59D4C(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(STACK[0x6AD8]
                                                             + 8
                                                             * (((v2 >= v3 - 5900) * ((v3 + 14427) ^ 0x4F56)) ^ v3)))(a1, a2, (v3 - 966132388));
}

uint64_t sub_100B59D98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((23
                                          * (v5 + a2 - v2 - v4 + 0x401A40293C790275 + a1 < ((v3 - 538040575) & 0xE67B9DFF ^ (v3 - 58034955) & 0x3753BBB ^ 0xC66A1470uLL))) ^ v3))
                            - 4))();
}

uint64_t sub_100B59E24(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD))(STACK[0x6AD8]
                                           + 8
                                           * ((21
                                             * (((((~v4 + a4) ^ (~(_DWORD)v4 + a4)) - 1) & ~(~v4 + (unint64_t)a4)) >> 63)) ^ (a4 + 16396))))((a4 ^ 0x1056) - 1814089236);
}

uint64_t sub_100B59E7C(int a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  a3.n128_u16[0] = -28014;
  a3.n128_u8[2] = -110;
  a3.n128_u8[3] = -110;
  a3.n128_u8[4] = -110;
  a3.n128_u8[5] = -110;
  a3.n128_u8[6] = -110;
  a3.n128_u8[7] = -110;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8]
                                                                                        + 8
                                                                                        * ((22633 * (a1 == 1337002521)) ^ (a1 + 1814099312)))
                                                                            - 4))(v3 - 7, v6 - 7, ~v5 + v4, a2, a3);
}

uint64_t sub_100B59EF0(uint64_t a1, uint64_t a2, unsigned int a3, double a4, int8x8_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  *(int8x8_t *)(a1 + a3 + v11) = veor_s8(*(int8x8_t *)(a2 + a3 + v10), a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v12 != 0) * a10) ^ v13)) - 4))();
}

uint64_t sub_100B59F30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((13281
                                * (((((v1 - v0) | (unint64_t)(v0 - v1)) >> (((4 * (v2 ^ 0x5E) - 16) | 0x1A) ^ 0x21u)) & 1) == 0)) ^ (4 * (v2 ^ 0x325E)))))();
}

uint64_t sub_100B59F90()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v0 + 13801) ^ 0x78D9) - 7595) * (v2 == v1)) ^ (v0 + 13801)))
                            - 8))();
}

uint64_t sub_100B59FCC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2132)) - 4))();
}

uint64_t sub_100B59FFC(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((6947
                                * (((v3 + 6441) ^ 0x42B68291)
                                 + (((a3 ^ 0xB8469337) + 1775257938) ^ ((a3 ^ 0x7943BCE6) - 1462409599) ^ ((a3 ^ 0xC5BFCC95) + 338237172)) != 400750002)) ^ v3)))();
}

uint64_t sub_100B5A0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  _BOOL4 v15;
  unsigned int v16;

  v15 = v13 < 0x17E2F5B2;
  *(_BYTE *)(v8 + v11 + v10) = v12 ^ a8 ^ 0x8C ^ *(_BYTE *)(v14 + v11 + v9);
  v16 = v11 + 1;
  if (v15 == v16 > 0xE81D0A4D)
    v15 = v16 + 400750002 < v13;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v15 * a5) ^ v12)))();
}

uint64_t sub_100B5A120(__n128 a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  __n128 v8;

  v8.n128_u64[0] = 0x9292929292929292;
  v8.n128_u64[1] = 0x9292929292929292;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128))(STACK[0x6AD8] + 8 * (v7 + 11662)))((v6 & 0xFFFFFFE0) - 32, 0, a5, a6, 26650, a1, a2, v8);
}

uint64_t sub_100B5A158(uint64_t a1, uint64_t a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int8x16_t v21;

  v18 = ((((v12 + v14) & v15) + v16) ^ a2) + v11;
  v19 = v17 + v18 + v9;
  v20 = v8 + v10 + v18;
  v21 = veorq_s8(*(int8x16_t *)(v19 - 31), a5);
  *(int8x16_t *)(v20 - 15) = veorq_s8(*(int8x16_t *)(v19 - 15), a5);
  *(int8x16_t *)(v20 - 31) = v21;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((a1 == a2) * a8) ^ v13)))();
}

uint64_t sub_100B5A1B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (11 * (v1 != v0))))
                            - 28 * (v2 ^ 0x5AB0u)
                            - ((7951 * (v2 ^ 0x5A61u)) ^ 0xFFFFFFFFFFFFD6E6)))();
}

uint64_t sub_100B5A204(uint64_t a1, int a2)
{
  char v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((v2 & 0x18) != ((a2 - 152418204) & STACK[0x8F4] ^ 0xC66A1470))
                                     * (((a2 - 1073780522) & 0xD3DFC277) + 1814107339)) ^ a2)))();
}

uint64_t sub_100B5A26C(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((53132 * (a3 == -454160075)) ^ (a3 + 966144267))) - 4))();
}

uint64_t sub_100B5A2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  char v5;
  int v6;
  uint64_t v7;
  unsigned int v8;

  v8 = v4 - 1;
  *(_BYTE *)(v0 + v8 + v2) = ((v3 ^ v5) + 116) ^ *(_BYTE *)(v7 + v8 + v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v8 == 0) * v6) ^ v3)) - 4))();
}

uint64_t sub_100B5A2E4@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;

  v5 = v3 + a3;
  v6 = (v5 ^ 0x4FBD74CE) & (2 * (v5 & 0x1C74EF)) ^ v5 & 0x1C74EF;
  v7 = ((2 * (v5 ^ 0x4F857580)) ^ (a1 + 573)) & (v5 ^ 0x4F857580) ^ (2 * (v5 ^ 0x4F857580)) & (a2 + 578);
  v8 = (((v4 - 15784) | 0x1000) + 302575787) ^ v7;
  v9 = v6 ^ 0xF679016F ^ (v7 ^ 0x1278004C) & (4 * v6);
  v10 = ((4 * v8) ^ 0x59E405BC) & v8 ^ (4 * v8) & (a2 + 576);
  v11 = v10 & 0x50E6B538 ^ v9 ^ (v10 ^ 0xD060012B) & ((16 * v9) ^ 0xB776A3C8);
  v12 = ((16 * v10) ^ 0xD6E6A7F8) & (v10 ^ 0xD060012B) ^ v10 & 0x50E6B538;
  v13 = v12 & 0xD0E6B538 ^ v11 ^ ((v11 << 8) ^ 0xC9E6F238) & (v12 ^ 0xD060016F);
  v14 = ((v12 << 8) ^ 0xB0E79D38) & (v12 ^ 0xD060016F) ^ v12 & 0xD0E6B538;
  *(_DWORD *)STACK[0x9890] = v5 ^ (2
                                 * (v13 ^ v14 & 0x50E6B538 ^ ((v13 << 16) ^ 0xD189B538) & (v14 ^ 0x26190000) ^ ((v13 << 16) ^ 0xD189B538) & (a2 + 508))) ^ 0x78E3E006;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 4))();
}

uint64_t sub_100B5A470()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 15517)) - ((v0 + 986523013) & 0xC532FFCE) + 13762))();
}

uint64_t sub_100B5A4C0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26503 * (STACK[0x8F90] != 0x3032385379A144E6)) ^ v0))
                            - ((((v0 - 9604) | 0x30u) + 8) ^ ((v0 - 13754) | 0x1066u))))();
}

uint64_t sub_100B5A520()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 9556)) - 8))(v1);
}

uint64_t sub_100B5A554()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v0 + 2104) ^ (17514 * (v1 != 0)))))();
}

uint64_t sub_100B5A578()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100B5A58C()
{
  int v0;

  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8]
                                            + 8
                                            * ((14940 * ((v0 - 727631628) > 0xC11EC087)) ^ (v0 - 1441))))(37814272);
}

uint64_t sub_100B5A5F4()
{
  uint64_t v0;

  STACK[0xC768] = v0 - 32;
  return ((uint64_t (*)(void))STACK[0xADD8])();
}

uint64_t sub_100B5A614()
{
  int v0;
  int v1;
  _BOOL4 v3;

  v3 = v1 != -1926392729 || LODWORD(STACK[0x9AEC]) == ((4106 * (STACK[0x6508] ^ 0x1074)) ^ (v0 + 415));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((27840 * v3) ^ (STACK[0x6508] + 3998))) - 4))();
}

uint64_t sub_100B5A680@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((LOBYTE(STACK[0xA633]) != 0) * ((a1 - 3998) ^ 0x6933)) ^ a1))
                            - 4))();
}

uint64_t sub_100B5A6C8()
{
  int v0;

  STACK[0xA860] = STACK[0x95E0] + 92;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((*(_QWORD *)STACK[0x4878] != 0) * ((v0 ^ 0x5710) - 4219)) | v0))
                            - 12))();
}

uint64_t sub_100B5A728()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  STACK[0xEE28] = STACK[0x4878];
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v1 - 240) | 0xFA325E1) + (~(v1 - 240) | 0xF05CDA1E)) ^ 0x3231FAB9)
                          + v0
                          - 26;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (int)((v0 ^ 0x2795) + v0)) - 12))(v3);
}

uint64_t sub_100B5A7D4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v0 - 28941 + ((v0 + 942084514) & 0xC7D89DFF))
                                               * (*(_QWORD *)STACK[0x49D0] != 0)) ^ v0))
                            - 4))();
}

uint64_t sub_100B5A828()
{
  int v0;

  LODWORD(STACK[0xD0C4]) = -1926392729;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 12267)))();
}

uint64_t sub_100B5A850()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((*(_QWORD *)STACK[0x4878] == 0) ^ (v0 - 1)) & 1)
                                               * (((v0 + 1028815186) & 0xC2AD74DF) + 2244)) ^ v0))
                            - 12))();
}

uint64_t sub_100B5A8A8@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v5 = 2142736129 * ((~(v2 - 240) & 0x1150768AE33DFD07 | (v2 - 240) & 0xEEAF89751CC202F8) ^ 0x6C4B7E868065690ELL);
  LODWORD(STACK[0x1D358]) = (v1 + 427180620) ^ v5;
  STACK[0x1D350] = a1;
  STACK[0x1D360] = v4 ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (int)(v1 ^ 0x32D2))
                                          - 2643 * (v1 ^ 0x1086)
                                          + 10560))(v6);
}

uint64_t sub_100B5A954()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(3300);
  *(_QWORD *)STACK[0x49D0] = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v1 == 0) * (v0 ^ 0x2961)) ^ v0)))();
}

uint64_t sub_100B5A9B4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  int v3;
  _QWORD *v4;
  int v5;

  *(_BYTE *)(*v4 + 33 * a1) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((a1 + 1 == (v1 ^ (4 * v5) ^ v2)) * v3) ^ v5)))();
}

uint64_t sub_100B5A9F0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((*(_QWORD *)STACK[0x4878] != 0)
                                          * ((v0 + 3045) ^ 0x6B ^ (1409 * (v0 ^ 0x347F)))) ^ v0))
                            - 8))();
}

uint64_t sub_100B5AA38@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = STACK[0x1638];
  STACK[0x1D360] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) ^ STACK[0x1638];
  STACK[0x1D350] = a1;
  LODWORD(STACK[0x1D358]) = (v1 + 427180619) ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v1 + 9209)) - (v1 + 12254) + 16473))(v5);
}

uint64_t sub_100B5AAA0()
{
  int v0;
  uint64_t v1;
  int v2;

  LODWORD(STACK[0xD0C4]) = v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((((v2 ^ 0xFFFFAFC9) + v2 - 12267) * (v1 == 0)) ^ v2)))();
}

uint64_t sub_100B5AAE4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((*(_QWORD *)STACK[0x4878] == 0) * ((v0 + 12) ^ 0x175F)) ^ (v0 + 9052))))();
}

uint64_t sub_100B5AB1C@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v5 = STACK[0x1988];
  LODWORD(STACK[0x1D358]) = (v1 + 427180620) ^ STACK[0x1988];
  STACK[0x1D350] = a1;
  STACK[0x1D360] = v4 ^ v5;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v1 == -907056486) * ((v1 - 12) ^ 0x4C4E)) ^ (v1 + 9101))))(v6);
}

uint64_t sub_100B5AB90()
{
  int v0;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 607)) - 8))(0x3B7EFEAA61CFC96ELL);
}

uint64_t sub_100B5ABD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((*(_BYTE *)(a1 + 33 * v1) == 0) * (v3 ^ 0x1007)) ^ (v3 + v2))))();
}

uint64_t sub_100B5AC14()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((111 * (v0 - 4213 + 14 * (v2 ^ v1 ^ 0x1397u) != 100)) ^ v2 ^ v1))
                            - 8))();
}

uint64_t sub_100B5AC58()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 32 * (v0 ^ 0x19EB)) - 4))();
}

uint64_t sub_100B5AC94()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7374)) - 4))();
}

uint64_t sub_100B5ACAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  unsigned int *v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  *v3 = v2;
  v6 = v2;
  v7 = 33 * v2;
  *(_BYTE *)(a2 + v7) = 1;
  LODWORD(v7) = v4 <= *(_QWORD *)STACK[0x49D0] + v7 + 1;
  STACK[0xBE88] = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * (int)((v7 * (v5 - 2286)) ^ (v5 + 8922)))
                                                                              - ((v5 + 650) | 0x2048u)
                                                                              + 13124))(a1, 3282014940, 0xC48101559E303692, 36);
}

uint64_t sub_100B5AD4C@<X0>(char a1@<W3>, _BYTE *a2@<X8>)
{
  int v2;
  _BYTE *v3;

  a2[15] = v3[91] - (a1 & (2 * v3[91])) - 110;
  a2[14] = v3[90] - (a1 & (2 * v3[90])) - 110;
  a2[13] = v3[89] - ((((v2 - 32) | 0x42) ^ 0x4E) & (2 * v3[89])) - 110;
  a2[12] = v3[88] - (a1 & (2 * v3[88])) - 110;
  a2[11] = v3[87] - (a1 & (2 * v3[87])) - 110;
  a2[10] = v3[86] - (a1 & (2 * v3[86])) - 110;
  a2[9] = v3[85] - (a1 & (2 * v3[85])) - 110;
  a2[8] = v3[84] - (a1 & (2 * v3[84])) - 110;
  a2[7] = v3[83] - (a1 & (2 * v3[83])) - 110;
  a2[6] = v3[82] - (a1 & (2 * v3[82])) - 110;
  a2[5] = v3[81] - (a1 & (2 * v3[81])) - 110;
  a2[4] = v3[80] - (a1 & (2 * v3[80])) - 110;
  a2[3] = v3[79] - (a1 & (2 * v3[79])) - 110;
  a2[2] = v3[78] - (a1 & (2 * v3[78])) - 110;
  a2[1] = v3[77] - (a1 & (2 * v3[77])) - 110;
  *a2 = v3[76] - (a1 & (2 * v3[76])) - 110;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4))();
}

uint64_t sub_100B5AEC0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = (v5 ^ a1) + ((2 * (_DWORD)v5) & a2) + a3;
  *(_BYTE *)(a5 + v10) = *(_BYTE *)(v9 + v10) - (a4 & (2 * *(_BYTE *)(v9 + v10))) - 110;
  LODWORD(v10) = v5 + ((v6 + v8) & v7) != 889;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((8 * v10) | (16 * v10)) ^ v6)) - 4))();
}

uint64_t sub_100B5AF1C()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 3441)) - (v0 + 13906) + 14772))();
}

uint64_t sub_100B5AF6C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;

  STACK[0xA650] = v1;
  STACK[0x7C48] = 0;
  LODWORD(STACK[0x92E4]) = -1926392729;
  v2 = STACK[0x6AD8];
  STACK[0x7F98] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2512 * (a1 + 1492 * (a1 ^ 0x3CB) != 304940019)) ^ (a1 + 4132)))
                            - 4))();
}

uint64_t sub_100B5B000(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((STACK[0x6508] - 4022) | 4) ^ 0x704F) * (a4 == -1926392729)) ^ LODWORD(STACK[0x1E14])))
                            - (STACK[0x6508]
                             - 2730)
                            + 1480))();
}

uint64_t sub_100B5B048()
{
  int v0;
  unint64_t v1;

  STACK[0x6C20] = STACK[0xCB20];
  STACK[0x7368] = 0x6A072866245C401ALL;
  v1 = STACK[0x6AD8];
  STACK[0x9610] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((451 * ((v0 ^ 0x44C7F87D) != 369561175)) ^ (v0 + 2782))) - 12))();
}

uint64_t sub_100B5B224(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)((STACK[0x6508] - 3630) ^ (19650
                                                                                               * (a4 == -1926392729))))
                                                   - (STACK[0x6508]
                                                    - 3301)
                                                   + 909))(STACK[0x6508]);
}

uint64_t sub_100B5B264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;

  STACK[0xB498] = STACK[0x7368];
  STACK[0xCD08] = STACK[0x6C20];
  v8 = ((((LODWORD(STACK[0x9D1C]) ^ 0xF4D00EFF) + 187691265) ^ ((LODWORD(STACK[0x9D1C]) ^ 0x9EDC0ADC) + 1629746468) ^ ((LODWORD(STACK[0x9D1C]) ^ 0xE7219044) + 417230780))
      - 1926392714) ^ ((v7 ^ 0x2353) - 1163912459);
  v9 = v8 & 0x97BCFE15 ^ 0x9640513B ^ (-2 - ((~(v8 & 0x684301E5) | 0xBE40509E) + (v8 & 0x28400084 | 0x41BFAF61)));
  LODWORD(STACK[0xC454]) = (((2 * v9) | 0x9037FF22) - v9 - 1209794449) ^ 0x579651E3;
  v10 = STACK[0x6AD8];
  STACK[0x9308] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * (v7 + 4030)) - 4))(a1, a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B5B3F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)((STACK[0x6508] - 1926396943) ^ 0x8D2D962F ^ (21564 * (((STACK[0x6508] + 117) ^ ((((a4 - (STACK[0x6508] - 1926396943)) | (STACK[0x6508] - 1926396943 - a4)) & 0x80000000) != 0)) & 1))))
                                                   - 4))(STACK[0x6508]);
}

uint64_t sub_100B5B458@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, int a6@<W8>)
{
  unint64_t v6;

  v6 = STACK[0x6AD8];
  STACK[0xD0D8] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a6 & 0x5F220757)) - 8;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (a6 & 0x5F220757 ^ 0x1160u)) - ((((a6 & 0x5F220757) - 752) | 0x5000u) ^ 0x515FLL)))(STACK[0x4AE0], a1, a2, a3, a4, &STACK[0xDEA4], a5, 1533666748);
}

uint64_t sub_100B5B4F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)((13758
                                                                      * (a4 == (LODWORD(STACK[0x4B08]) ^ 0x8D2D8411))) ^ (STACK[0x6508] - 3630)))
                                                   - 4))(STACK[0x6508]);
}

uint64_t sub_100B5B53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xD0D8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((int)v7 + 4325)) - ((v7 + 19733) ^ 0x515FLL)))(STACK[0x4AE0], a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B5B5C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (int)(((((STACK[0x6508] + 12506) | 0x2C) ^ 0x79DF)
                                                                      * (a4 == -1926392729)) ^ (STACK[0x6508] - 3630)))
                                                   - 4))(STACK[0x6508]);
}

uint64_t sub_100B5B60C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;
  int v6;

  v1 = STACK[0xB498];
  v2 = *(_DWORD *)(STACK[0xB498] - 0x6A072866245C400ELL)
     - 1926392729
     + (((LODWORD(STACK[0x9D1C]) ^ 0x7DE5610D) - 2112184589) ^ ((LODWORD(STACK[0x9D1C]) ^ 0xA7D6F4D4) + 1479084844) ^ ((LODWORD(STACK[0x9D1C]) ^ (98 * (a1 ^ 0x4157) + 1461580104)) - 1461584318));
  LODWORD(STACK[0xE0D4]) = v2;
  v3 = *(_DWORD *)(v1 - 0x6A072866245C4012) + ((a1 - 1647600769) & 0x62342FE4 ^ 0x58568F05);
  v2 += 1482064869;
  v4 = v2 < 0xC2B35520;
  v5 = v3 < v2;
  if (v3 < 0xC2B35520 != v4)
    v5 = v4;
  if (v5)
    v6 = 1926417665;
  else
    v6 = -1926392729;
  LODWORD(STACK[0xE0D8]) = v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((251 * v5) ^ a1)))();
}

uint64_t sub_100B5B768(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x18F9u)) - 8))(a1, 895751862);
}

uint64_t sub_100B5B848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  uint64_t v6;

  v5 = STACK[0x6508];
  v6 = 73 * (STACK[0x6508] ^ 0x107E);
  *(_DWORD *)(STACK[0xB498] - 0x6A072866245C400ELL) = *(_DWORD *)(a5 + 560);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * ((13508 * (*(_DWORD *)(a5 + 564) == -1926392729)) ^ ((int)v5 - 3630)))
                                                   - v6
                                                   + 580))(v5);
}

uint64_t sub_100B5B8BC()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xA898] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((49 * (v0 ^ 0x21E) + 1589) ^ v0)))();
}

uint64_t sub_100B5B8F4(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((a4 == ((5 * (a1 ^ 0x1153)) ^ 0x8D2D91DE)) * (a1 + 13731)) ^ (a1 + 4783)))
                            - 4))();
}

uint64_t sub_100B5B944()
{
  int v0;
  unint64_t v1;

  STACK[0x8D48] = STACK[0x6EC0];
  STACK[0x6CA0] = 0x6A072866245C401ALL;
  v1 = STACK[0x6AD8];
  STACK[0x9610] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x14D0)) - 12))();
}

uint64_t sub_100B5BAF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((26210 * (a4 == (LODWORD(STACK[0x4B08]) ^ 0x8D2D8411))) ^ (STACK[0x6508] - 3627)))
                            - 8))();
}

uint64_t sub_100B5BB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  unint64_t v9;

  STACK[0xC8D0] = STACK[0x6CA0];
  STACK[0x8D70] = STACK[0x8D48];
  v8 = ((((LODWORD(STACK[0xA6C4]) ^ 0xD499870D) + 728135923) ^ ((LODWORD(STACK[0xA6C4]) ^ 0x240A4402) - 604652546) ^ ((LODWORD(STACK[0xA6C4]) ^ 0x7DBE5768) - 2109626216))
      - 1926392714) & ((v7 + 7439) ^ 0xFFFFDF32) ^ 0x4B09F173;
  LODWORD(STACK[0x8964]) = (v8 - ((2 * v8) & 0xBBEE5FE2) - 571002887) ^ 0x1BD34AED;
  v9 = STACK[0x6AD8];
  STACK[0x9308] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((int)v7 + 3996)) - 4))(a1, a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B5BC8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] - 3627) ^ (10167 * (a4 == -1926392729))))
                            - ((2 * STACK[0x6508]) ^ 0x20E4)))();
}

uint64_t sub_100B5BCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xD0D8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (v7 ^ 0x1167)) - ((v7 + 15294) | 0x1151u) + 20807))(STACK[0x4AE0], a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B5BD5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((14760 * (a4 == STACK[0x6508] - 1926396943)) ^ (STACK[0x6508] - 3627)))
                            - 8))();
}

uint64_t sub_100B5BD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xD0D8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) + ((v7 + 19744) ^ 0xFFFFFFFFFFFFAEA7);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (v7 ^ 0x1110)) - 12))(STACK[0x4AE0], a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B5BE24(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((STACK[0x6508] - 3694) | 0x43) + 25587) * (a4 == -1926392729)) ^ (STACK[0x6508] - 3627)))
                            - 8))();
}

uint64_t sub_100B5BE68@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;
  int v6;

  v1 = STACK[0xC8D0];
  v2 = *(_DWORD *)(STACK[0xC8D0] - 0x6A072866245C400ELL)
     + (((LODWORD(STACK[0xA6C4]) ^ 0x938E01E2) + 1819409950) ^ ((LODWORD(STACK[0xA6C4]) ^ 0x49BD7332)
                                                              + ((a1 - 1655581524) & 0x62AE397E ^ 0xB6429CB8)) ^ ((LODWORD(STACK[0xA6C4]) ^ 0x571EE6B7) + ((a1 + 248839497) & 0xF12B06FF ^ 0xA8E11FDD)))
     - 1926392729;
  LODWORD(STACK[0xE0DC]) = v2;
  v3 = *(_DWORD *)(v1 - 0x6A072866245C4012) + 1753223812;
  v2 += 1753223812;
  v4 = v2 < 0xD2DCE3BF;
  v5 = v3 < v2;
  if (v3 < 0xD2DCE3BF != v4)
    v5 = v4;
  if (v5)
    v6 = 1926417665;
  else
    v6 = -1926392729;
  LODWORD(STACK[0xE0E0]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((9472 * !v5) ^ a1)) - 8))();
}

uint64_t sub_100B5BFD0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 10868)) - 12))();
}

uint64_t sub_100B5C080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((59
                                          * (a1 - 0x3A8834BBB3077A40 > *(_QWORD *)(v1 - 0x6A072866245C401ALL)
                                                                       - 0x3032385379A144E6
                                                                       + ((v2 + 827727971) & 0xCEA9BD39 ^ 0xBD346106DA861CD6)
                                                                       + v3)) ^ v2))
                            - ((v2 + 1046372445) & 0xC1A17D3F ^ 0x1D35)))();
}

uint64_t sub_100B5C13C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((12052
                                          * ((((v1 ^ 0x9B5A4FB) + 2010477649) ^ ((v1 ^ 0x6A857AD8) + 350595700) ^ ((v1 ^ 0x4F04C5BD) + 828638369 + ((v0 - 3299) | 0x20))) != 1381288758)) ^ v0))
                            - 8))();
}

uint64_t sub_100B5C204@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  _QWORD *v9;
  unsigned int v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL4 v22;
  unsigned int v23;

  v18 = v2 + v5 + v3;
  v19 = ((*(_DWORD *)(*v9 + (*v12 & v10)) ^ (a2 + v5)) & 0x7FFFFFFF) * a1;
  v20 = (v19 ^ HIWORD(v19)) * ((v4 - 3267) ^ 0x69A619BD);
  v21 = (((_DWORD)v18 * a1) ^ ((v18 * a1) >> 16)) * a1;
  *(_BYTE *)(v18 - 0x3032385379A144E6) = *(_BYTE *)(v15 + (v20 >> 24)) ^ *(_BYTE *)(a2 + v5 - 0x3A8834BBB3077A40) ^ *(_BYTE *)(v14 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v11 + 2) ^ *(_BYTE *)(v16 + (v21 >> 24)) ^ *(_BYTE *)((v21 >> 24) + v17 + 3) ^ v21 ^ *(_BYTE *)(v13 + (v21 >> 24)) ^ v20 ^ (89 * (((((_DWORD)v18 * a1) ^ ((v18 * a1) >> 16)) * a1) >> 24)) ^ (119 * BYTE3(v20));
  v22 = v7 < v6;
  v23 = v5 + 1;
  if (v22 == v23 > 0xF16E4CA)
    v22 = v23 + v6 < v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v22 * v8) ^ v4)) - 8))();
}

uint64_t sub_100B5C328()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(v1 ^ ((2 * (v0 != 0x2C341B9E)) | (4 * (v0 != 0x2C341B9E)))))
                            - (v1 ^ 0x1D31)))();
}

uint64_t sub_100B5C390()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 5071)) - 8))();
}

uint64_t sub_100B5C3A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;

  v15 = v4 - 1;
  v16 = (((a1 + v15) ^ *(_DWORD *)(*v7 + (*v9 & v5))) & 0x7FFFFFFF) * v6;
  v17 = (v16 ^ HIWORD(v16)) * v6;
  v18 = ((((_DWORD)v1 + v15 + (_DWORD)v2) * v6) ^ (((v1 + v15 + (_DWORD)v2) * v6) >> 16)) * v6;
  *(_BYTE *)(v1 + v15 + v2 - 0x3032385379A144E6) = *(_BYTE *)(v12 + (v17 >> 24)) ^ *(_BYTE *)(a1
                                                                                              + v15
                                                                                              - 0x3A8834BBB3077A40) ^ *(_BYTE *)(v11 + (v17 >> 24)) ^ *(_BYTE *)((v17 >> 24) + v8 + 2) ^ *(_BYTE *)(v13 + (v18 >> 24)) ^ *(_BYTE *)((v18 >> 24) + v14 + 3) ^ *(_BYTE *)(v10 + (v18 >> 24)) ^ v18 ^ v17 ^ (89 * ((((((_DWORD)v1 + v15 + (_DWORD)v2) * v6) ^ (((v1 + v15 + (_DWORD)v2) * v6) >> 16)) * v6) >> 24)) ^ (119 * BYTE3(v17));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14716 * (v15 != 0)) ^ (v3 + 3267))) - 8))();
}

uint64_t sub_100B5C4A4()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  *(_DWORD *)(STACK[0xC8D0] - 0x6A072866245C400ELL) = STACK[0xE0DC];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((v0 - 1926396943) ^ 0x8D2D962C ^ (17891
                                                                                * ((((LODWORD(STACK[0xE0E0])
                                                                                    - (v0
                                                                                     - 1926396943)) | (v0 - 1926396943 - LODWORD(STACK[0xE0E0]))) & 0x80000000) == 0))))
                            - 8))();
}

uint64_t sub_100B5C524()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 3627;
  v1 = STACK[0x6AD8];
  STACK[0xA898] = (STACK[0x6508] ^ 0xFFFFFFFFFFFFEF8ELL) + *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x16A8)))();
}

uint64_t sub_100B5C564(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v4 - 4018) ^ (a4 == -1926392729)) & 1) == 0) * (v4 ^ 0x11B2)) ^ (v4 + 4715)))
                            - 4))();
}

uint64_t sub_100B5C5B8()
{
  uint64_t v0;
  unint64_t v1;

  STACK[0xBF90] = 0x6A072866245C401ALL;
  v1 = STACK[0x6AD8];
  STACK[0x9610] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 2971)) - 12))();
}

uint64_t sub_100B5C764(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((29210 * (a4 == (((STACK[0x6508] - 3902) | 0x280) ^ 0x8D2D97DF))) ^ (STACK[0x6508] + 716))))();
}

uint64_t sub_100B5C7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  unint64_t v10;

  STACK[0x86C8] = STACK[0xBF90];
  v8 = ((((LODWORD(STACK[0xB59C]) ^ 0xF3859B0A) + 209347830) ^ (((v7 + 7434) ^ LODWORD(STACK[0xB59C]) ^ 0x51F5D922)
                                                              - 1375074784) ^ ((LODWORD(STACK[0xB59C]) ^ 0x2F5DF68D)
                                                                             - 794687117))
      - 1926392714) ^ 0x9AE044B6;
  v9 = v8 & 0x24BD23E5 ^ 0xA13841F2 ^ (-2 - ((~(v8 & 0xDB42DC15) | 0x3B7805E6) + (v8 & 0x1B400404 | 0xC487FA19)));
  LODWORD(STACK[0x6D7C]) = (v9 - ((2 * v9) & 0x8027D618) - 1072436468) ^ 0x4D9E7FCF;
  v10 = STACK[0x6AD8];
  STACK[0x9308] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((int)v7 + 3991)) - 4))(a1, a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B5C93C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((127 * (a4 != STACK[0x6508] - 1926396943)) ^ (STACK[0x6508] + 711))))();
}

uint64_t sub_100B5C97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xD0D8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (v7 ^ 0x1137)) - ((v7 + 19775) ^ 0x515FLL)))(STACK[0x4AE0], a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B5C9FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((30524 * (a4 == ((STACK[0x6508] - 3111) ^ 0x8D2D9028))) ^ (STACK[0x6508] + 716))))();
}

uint64_t sub_100B5CA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xD0D8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (v7 + 4308)) - (v7 + 19716) + 20807))(STACK[0x4AE0], a2, a3, a4, a5, &STACK[0xDEA4], a7, 1533666748);
}

uint64_t sub_100B5CABC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((17476 * (a4 == ((STACK[0x6508] + 1448) ^ 0x8D2D8279))) ^ (STACK[0x6508] + 1483)))
                            - 12))();
}

uint64_t sub_100B5CB00@<X0>(int a1@<W8>)
{
  unsigned int v1;
  unsigned int v2;
  _BOOL4 v3;
  _BOOL4 v4;
  int v5;

  v1 = *(_DWORD *)(STACK[0x86C8] - 0x6A072866245C400ELL)
     + ((((a1 - 5054) | 0x80) + 219648993 + (LODWORD(STACK[0xB59C]) ^ 0xF2E8693F)) ^ ((LODWORD(STACK[0xB59C]) ^ 0x3F7D0D72)
                                                                                    - 1065160050) ^ ((((a1 - 5594) | 0x1032) ^ 0x40B8E05C ^ LODWORD(STACK[0xB59C])) - 1085861930))
     - 1926392729;
  v2 = *(_DWORD *)(STACK[0x86C8] - 0x6A072866245C4012);
  LODWORD(STACK[0xE0E4]) = v1;
  v2 -= 1724385388;
  v1 -= 1724385388;
  v3 = v1 < 0x394C8CF;
  v4 = v2 < v1;
  if (v2 < 0x394C8CF != v3)
    v4 = v3;
  if (v4)
    v5 = 1926417665;
  else
    v5 = -1926392729;
  LODWORD(STACK[0xE0E8]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((95 * v4) ^ a1)) - 12))();
}

uint64_t sub_100B5CC4C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x10CC)) - 8))();
}

uint64_t sub_100B5CD30()
{
  int v0;
  int v1;

  v0 = (STACK[0x6508] - 4214) | 0x221;
  v1 = STACK[0x6508] + 716;
  *(_DWORD *)(STACK[0x86C8] - 0x6A072866245C400ELL) = STACK[0xE0E4];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((LODWORD(STACK[0xE0E8]) == -1926392729) * (v0 + 13188)) ^ v1)))();
}

uint64_t sub_100B5CDA8()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xA898] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((v0 ^ 0x1257) + 1612) ^ v0)))();
}

uint64_t sub_100B5CDD4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((5 * (a7 ^ 0x11BD) - 2291) | 0xC0) ^ 0x7705) * (a4 == -1926392729)) ^ (a7 + 4783)))
                            - 4))();
}

_QWORD *sub_100B5CE20@<X0>(int a1@<W8>)
{
  unint64_t v1;

  STACK[0xB430] = STACK[0xA668];
  STACK[0x79A0] = 0;
  LODWORD(STACK[0x8F9C]) = 1784467771;
  STACK[0xCA48] = 0;
  v1 = STACK[0x6AD8];
  STACK[0xC6C8] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) + ((a1 + 12373) ^ 0xFFFFFFFFFFFFC6B8);
  return (*(_QWORD *(**)(unint64_t *__return_ptr, uint64_t, unint64_t, unint64_t, unint64_t))(v1 + 8 * (a1 + 2204)))(&STACK[0xCA48], 236, STACK[0x5680], STACK[0x5678], STACK[0x5670]);
}

uint64_t sub_100B5CEA8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((55
                                               * ((((a4 - (STACK[0x6508] - 1926396943)) | (STACK[0x6508]
                                                                                         - 1926396943
                                                                                         - a4)) & 0x80000000) == 0)) ^ (STACK[0x6508] - 4228 + (STACK[0x6508] ^ 0xFE0B27C0) + 32840800 + 14)))
                            - 8))();
}

uint64_t sub_100B5CF14()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(_QWORD))STACK[0x5510])((LODWORD(STACK[0xA684]) - 1784467771));
  STACK[0xCA50] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((v1 != 0) * (v0 ^ 0x5E1C ^ (v0 + 320316055) & 0xECE80F7E)) ^ v0))
                            - 8))();
}

uint64_t sub_100B5CFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  LODWORD(STACK[0xE0EC]) = -1926392729;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((20089 * ((v4 - 1777925654) < 0x7C24C216)) ^ (((v4 + 15983) ^ 0x776C) + v4)))
                                                                                       - 8))(a1, a2, a3, a4, 0xD218315410365DB9);
}

uint64_t sub_100B5D030(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  LODWORD(STACK[0xE0EC]) = a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v4 ^ 0xFE0B2B45 ^ (9499 * (v4 == 2037546508))))
                            - ((v4 + 32819306) | 0x1056u)
                            + 4206))();
}

uint64_t sub_100B5D0B4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = STACK[0x92B8] + 0x67666D61F4F64840;
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((a1 + 1852625963) ^ 0x6E6CF4DD)) - 4;
  LODWORD(STACK[0xEE20]) = (a1 + 1852625963) ^ v1;
  LODWORD(STACK[0xEE50]) = a1 + 1852627092;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = a1 + 1852625963;
  STACK[0xEE30] = 0x697AB5D639A15648;
  STACK[0xEE58] = v4;
  *(_QWORD *)(v2 + 792) = &STACK[0xEE18];
  *(_DWORD *)(v2 + 784) = -299994601
                        - 1705718857 * ((2 * ((v3 - 240) & 0x5CDD6030) - (v3 - 240) + 589471694) ^ 0x1EB04097)
                        + a1;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * *(int *)(v2 + 788)) - 4))(v6);
}

uint64_t sub_100B5D1B8()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 668;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B5D1E4()
{
  int v0;
  int v1;

  v1 = STACK[0x6508] + 10707;
  STACK[0xC768] += (STACK[0x6508] + 30) ^ 0xFFFFFFFFFFFFEF64;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (29371 * (v0 == -1926392729)))) - 12))();
}

uint64_t sub_100B5D250()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v3 = STACK[0x8F9C];
  v4 = (v3 ^ 0xD5830EB4) & (2 * ((((v0 + 355369187) & 0xEAD17EFE) - 1784471985) & v3)) ^ (((v0 + 355369187) & 0xEAD17EFE)
                                                                                        - 1784471985) & v3;
  v5 = ((2 * (v3 ^ 0xDEC31BBC)) ^ 0x96C06AF2) & (v3 ^ 0xDEC31BBC) ^ (2 * (v3 ^ 0xDEC31BBC)) & 0x4B603578;
  v6 = v5 ^ 0x49201509;
  v7 = (v5 ^ 0x2202031) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x2D80D5E4) & v6 ^ (4 * v6) & 0x4B603578;
  v9 = (v8 ^ 0x9001569) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x42602019)) ^ 0xB6035790) & (v8 ^ 0x42602019) ^ (16 * (v8 ^ 0x42602019)) & 0x4B603570;
  v11 = v9 ^ 0x4B603579 ^ (v10 ^ 0x2001569) & (v9 << 8);
  v12 = LODWORD(STACK[0x8F9C]) ^ 0x61B1DC52 ^ (2
                                             * ((v11 << 16) & 0x4B600000 ^ v11 ^ ((v11 << 16) ^ 0x35790000) & (((v10 ^ 0x49602069) << 8) & 0x4B600000 ^ 0xB400000 ^ (((v10 ^ 0x49602069) << 8) ^ 0x60350000) & (v10 ^ 0x49602069))));
  v13 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  v14 = STACK[0xCA48];
  LODWORD(STACK[0xEE20]) = v12;
  v15 = STACK[0x9C80];
  STACK[0xEE38] = v14;
  v16 = STACK[0x6BB0];
  STACK[0xEE40] = v15;
  STACK[0xEE48] = v16;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v2 - 240) | 0xBB1598B0) - ((v2 - 240) & 0xBB1598B0)) ^ 0x868747E9)
                          + v0
                          - 30;
  STACK[0xEE28] = v1;
  LOBYTE(STACK[0xEE68]) = 35;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v17 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * (v0 + 10677)) - 12))(v17);
}

uint64_t sub_100B5D4A4()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x70CC]) = v0;
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = v1 + 1043899193;
  LODWORD(STACK[0xEE50]) = (v1 + 1043899150) ^ 0xE33;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v1 + 1043899150;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = v2;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v3 - 240) | 0x4BF53C93) - ((v3 - 240) & 0x4BF53C93)) ^ 0x7667E3CA)
                          + v1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v5);
}

uint64_t sub_100B5D574()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] - 606;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100B5D594()
{
  unint64_t v0;

  v0 = STACK[0xCA48];
  STACK[0xC1C8] = STACK[0xCA48];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((30009 * (v0 != 0)) ^ LODWORD(STACK[0x2C5C]))) - 4))();
}

uint64_t sub_100B5D5D4()
{
  int v0;
  unint64_t v1;

  v0 = 26 * (STACK[0x6508] ^ 0x1069);
  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 3509)) - ((v0 + 13974) ^ 0x39B4)))();
}

uint64_t sub_100B5D620()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = STACK[0x6508] + 13;
  v2 = STACK[0x6AD8];
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  v4 = 2142736129
     * ((0xAED79AFE76C9995DLL - ((v0 - 240) | 0xAED79AFE76C9995DLL) + STACK[0x28B0]) ^ 0x2C336D0DEA6EF2ABLL);
  LODWORD(STACK[0x1D358]) = (STACK[0x6508] + 427180632) ^ v4;
  STACK[0x1D350] = STACK[0x4840];
  STACK[0x1D360] = v3 ^ v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((11207 * ((v1 ^ 0xF64C4489) != -1742295402)) ^ (LODWORD(STACK[0x28BC]) + v1)))
                                          - 4))(v5);
}

uint64_t sub_100B5D700(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unint64_t v5;

  v5 = STACK[0x6AD8];
  LODWORD(STACK[0x75C8]) = a4;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 + ((v4 - 131) | 0x16A2) - 1387)))(5121);
}

uint64_t sub_100B5D750()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  v2 = STACK[0x8410];
  v3 = STACK[0x9AF8];
  v4 = STACK[0x92B8];
  v5 = STACK[0xA684];
  v6 = 1651633301 * ((v1 - 2014101550 - 2 * ((v1 - 240) & 0x87F340C2)) ^ 0x97FB0662);
  STACK[0x1D378] = STACK[0xCA50];
  STACK[0x1D358] = v2;
  LODWORD(STACK[0x1D350]) = -475732267 - v6 + 89769207 * v5;
  STACK[0x1D360] = v4;
  STACK[0x1D370] = v3;
  LODWORD(STACK[0x1D368]) = v6 + 1600395290 + STACK[0x6508];
  v7 = v0(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (LODWORD(STACK[0x1D44]) ^ ((((LODWORD(STACK[0x1D354])
                                                                                    - LODWORD(STACK[0x1D48])) | (LODWORD(STACK[0x1D48]) - LODWORD(STACK[0x1D354]))) >= 0)
                                                                                 * LODWORD(STACK[0x1D3C]))))
                                          - 8))(v7);
}

uint64_t sub_100B5D850()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((19029 * (LODWORD(STACK[0xE0EC]) == LODWORD(STACK[0x1AB4]) - 1926400140)) ^ LODWORD(STACK[0x1AB4])))
                            - 8))();
}

uint64_t sub_100B5D8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  int v4;
  unsigned int v5;

  v4 = STACK[0x1148];
  v5 = STACK[0x1144];
  STACK[0x79A0] = v3;
  LODWORD(STACK[0x8F9C]) = STACK[0xA684];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8 * SLODWORD(STACK[0x1AB4]))
                                                                     - (v4 & v5)
                                                                     + 4206))(a1, a2, a3, 2368574567);
}

uint64_t sub_100B5D8F4()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 3197;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100B5D940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 1277) ^ (17817 * (v6 == -1926392729)))) - 4))(a1, a2, 157, a4, 36, a6, 137, 806657363);
}

uint64_t sub_100B5D988()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6048)))();
}

uint64_t sub_100B5D9C0()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  int v9;

  v4 = STACK[0x6508] - 1713;
  v5 = STACK[0x6AD8];
  v6 = STACK[0x6508] + 17569;
  STACK[0xBB30] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) + v3;
  STACK[0xBCF8] = v0;
  STACK[0x7330] = v1;
  v7 = STACK[0xC768];
  STACK[0xC750] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v7 + 48;
  LODWORD(STACK[0x6B4C]) = -1926392729;
  STACK[0xA6E0] = 0;
  LODWORD(STACK[0x9748]) = 1930690922;
  if (v0)
    v8 = v1 == 0;
  else
    v8 = 1;
  v9 = !v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((16 * v9) | (32 * v9)) ^ v6)) - (v4 ^ 0x9C9)))();
}

uint64_t sub_100B5DA94@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  _DWORD *v2;

  *v1 = 0;
  *v2 = 1930690922;
  STACK[0xBB50] = 0x2EB35D1B00280420;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 12571 + ((a1 - 609825359) & 0x24592FFB))) - 8))();
}

uint64_t sub_100B5DAFC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x3EC8] + 17815) * (v0 == -1926392729)) ^ (STACK[0x6508] + 1277)))
                            - 4))();
}

uint64_t sub_100B5DB44()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x3EC8];
  STACK[0xD098] = *(_QWORD *)STACK[0xA070];
  LODWORD(STACK[0xA41C]) = *(_DWORD *)STACK[0xC038];
  STACK[0x7688] = *(_QWORD *)STACK[0xBC60];
  LODWORD(STACK[0xAC38]) = *(_DWORD *)STACK[0x8F78];
  STACK[0xAC68] = 0;
  LODWORD(STACK[0x913C]) = 1930690922;
  STACK[0x7B28] = 0x2EB35D1B00280420;
  v1 = STACK[0x6AD8];
  STACK[0x8988] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((v0 - 250) ^ 0x17BC) + v0)))();
}

uint64_t sub_100B5DC10()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] - 2168;
  LODWORD(STACK[0x9D14]) = v0;
  v3 = STACK[0x6AD8];
  STACK[0x85F8] = v2 + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v1 - 3848)) - 2054;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((int)v1 + 977)) - 4))();
}

uint64_t sub_100B5DC5C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 13739)) - 8))();
}

uint64_t sub_100B5DC90()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = STACK[0x34A8];
  v4 = STACK[0x6508];
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x34A4];
  LODWORD(STACK[0xEE50]) = v3;
  STACK[0xEE30] = v2;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = v3 ^ 0x3D;
  LODWORD(STACK[0xEE64]) = 0;
  *(_DWORD *)(v0 + 784) = -299994601
                        - 1705718857 * ((((2 * (v1 - 240)) | 0xC9AEB946) - (v1 - 240) + 455648093) ^ 0xD94583FA)
                        + v4;
  *(_QWORD *)(v0 + 792) = &STACK[0xEE18];
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * *(int *)(v0 + 788)) - 4))(v6);
}

uint64_t sub_100B5DD54()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((2
                                 * (((LODWORD(STACK[0x913C]) == 1930690922) ^ LODWORD(STACK[0x32E4])) & 1)) & 0xFB | (4 * (((LODWORD(STACK[0x913C]) == 1930690922) ^ LODWORD(STACK[0x32E4])) & 1))) ^ LODWORD(STACK[0x2F54]))))();
}

uint64_t sub_100B5DD98()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;

  v1 = STACK[0x32E4];
  v2 = 2107 * (LODWORD(STACK[0x32E4]) ^ 0x2507);
  STACK[0xB410] = STACK[0xAC68];
  STACK[0xA7E0] = STACK[0xD098];
  LODWORD(STACK[0xA20C]) = STACK[0xA41C];
  v3 = STACK[0xC768];
  STACK[0x84A0] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v3 + 16;
  LODWORD(STACK[0x9F58]) = v0;
  STACK[0x6CC8] = 0;
  STACK[0x94F0] = 0;
  LODWORD(STACK[0xA8CC]) = 1930690922;
  LODWORD(STACK[0xA638]) = 1199954562;
  LODWORD(v3) = v0 ^ 0x50064DAA ^ (2 * ((v0 ^ 0x2AEBFC47) & (2 * ((v1 - 1930700399) & v0)) ^ (v1 - 1930700399) & v0));
  LODWORD(v3) = ((v3 & 0xB ^ 0xD1E5EDCB) - (v3 & 0xB) + (v3 & (v2 ^ 0x1079) ^ 4)) ^ 0xD181CDC3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((2097 * ((_DWORD)v3 - ((2 * (_DWORD)v3) & 0x480046) == 1843200)) ^ v1))
                            - 12))();
}

uint64_t sub_100B5DF30()
{
  int v0;
  int v1;

  *(_QWORD *)STACK[0xC718] = ((uint64_t (*)(_QWORD))STACK[0x5510])((v0 - 1930690922));
  *(_DWORD *)STACK[0x7C00] = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((5677
                                          * (((((v1 - 1091214645) & 0x410ABDEB) - 1638870376) ^ v1) != -2007715728)) ^ (v1 - 2041)))
                            - 4))();
}

uint64_t sub_100B5DFD8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x3FE8] ^ 0x65) * (v0 != -1926392729)) ^ LODWORD(STACK[0x3CB0])))
                            - 12))();
}

uint64_t sub_100B5E014()
{
  unint64_t v0;

  v0 = STACK[0x3FE8];
  STACK[0xC448] = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((int)v0 + 16124)))();
}

uint64_t sub_100B5E084@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  char v7;
  unint64_t v8;
  char *v9;
  _DWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  char v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;

  v7 = (v6 + 5) | 9;
  v8 = STACK[0xC768];
  v9 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC760] = (unint64_t)(v9 + 152);
  STACK[0xC768] = v8 + 192;
  v10 = (_DWORD *)STACK[0x60B8];
  v11 = (uint64_t *)STACK[0x60C0];
  v12 = *(_QWORD *)STACK[0x60C0];
  v13 = *(_DWORD *)STACK[0x60B8] & 0x1A3E29B8;
  v14 = 1772489163 * ((*(_DWORD *)(v12 + v13) ^ ((_DWORD)v9 + 152)) & 0x7FFFFFFF);
  v15 = 1772489163 * (v14 ^ HIWORD(v14));
  v16 = STACK[0x4708];
  v17 = STACK[0x4710];
  v18 = STACK[0x4718];
  v9[152] = *(_BYTE *)(STACK[0x4708] + (v15 >> (v7 ^ 0xB5u))) ^ *(_BYTE *)((v15 >> (v7 ^ 0xB5u)) + STACK[0x4718] + 1) ^ *(_BYTE *)(STACK[0x4710] + (v15 >> (v7 ^ 0xB5u)) + ((14 * (v6 ^ 0x26B2)) ^ 0x1074u)) ^ v15 ^ (31 * (v15 >> (v7 ^ 0xB5u))) ^ 0x71;
  v19 = 1772489163 * ((*(_DWORD *)(v12 + v13) ^ ((_DWORD)v9 + 153)) & 0x7FFFFFFF);
  v20 = 1772489163 * (v19 ^ HIWORD(v19));
  v9[153] = *(_BYTE *)(v16 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v17 + 2) ^ *(_BYTE *)((v20 >> 24) + v18 + 1) ^ v20 ^ (31 * BYTE3(v20)) ^ 0x19;
  LODWORD(v20) = 1772489163 * ((*(_DWORD *)(v12 + v13) ^ ((_DWORD)v9 + 154)) & 0x7FFFFFFF);
  v21 = 1772489163 * (v20 ^ WORD1(v20));
  v9[154] = *(_BYTE *)(v16 + (v21 >> 24)) ^ *(_BYTE *)((v21 >> 24) + v17 + 2) ^ *(_BYTE *)((v21 >> 24) + v18 + 1) ^ v21 ^ (31 * BYTE3(v21)) ^ 0xCB;
  v22 = (_BYTE *)STACK[0xC760];
  v23 = (_BYTE *)STACK[0xC760];
  LODWORD(v12) = 1772489163 * (((STACK[0xC760] + 3) ^ *(_DWORD *)(v12 + v13)) & 0x7FFFFFFF);
  v24 = 1772489163 * (v12 ^ WORD1(v12));
  v22[3] = *(_BYTE *)(v16 + (v24 >> 24)) ^ *(_BYTE *)((v24 >> 24) + v17 + 2) ^ *(_BYTE *)((v24 >> 24) + v18 + 1) ^ v24 ^ (31 * BYTE3(v24)) ^ 0xC5;
  v25 = *v10 & 0x1A3E29B8;
  LODWORD(v24) = 1772489163 * ((*(_DWORD *)(*v11 + v25) ^ ((_DWORD)v22 + 4)) & 0x7FFFFFFF);
  v26 = 1772489163 * (v24 ^ WORD1(v24));
  v22[4] = *(_BYTE *)(v16 + (v26 >> 24)) ^ *(_BYTE *)((v26 >> 24) + v17 + 2) ^ *(_BYTE *)((v26 >> 24) + v18 + 1) ^ v26 ^ (31 * BYTE3(v26)) ^ 0x1F;
  LODWORD(v26) = 1772489163 * ((*(_DWORD *)(*v11 + v25) ^ ((_DWORD)v22 + 5)) & 0x7FFFFFFF);
  v27 = 1772489163 * (v26 ^ WORD1(v26));
  v22[5] = *(_BYTE *)(v16 + (v27 >> 24)) ^ *(_BYTE *)((v27 >> 24) + v17 + 2) ^ *(_BYTE *)((v27 >> 24) + v18 + 1) ^ v27 ^ (31 * BYTE3(v27)) ^ 0x6B;
  LODWORD(v27) = 1772489163 * ((((_DWORD)v23 + 6) ^ *(_DWORD *)(*v11 + v25)) & 0x7FFFFFFF);
  v28 = 1772489163 * (v27 ^ WORD1(v27));
  v23[6] = *(_BYTE *)(v16 + (v28 >> 24)) ^ *(_BYTE *)((v28 >> 24) + v17 + 2) ^ *(_BYTE *)((v28 >> 24) + v18 + 1) ^ v28 ^ (31 * BYTE3(v28)) ^ 6;
  v29 = *v10 & 0x1A3E29B8;
  LODWORD(v28) = 1772489163 * ((*(_DWORD *)(*v11 + v29) ^ ((_DWORD)v23 + 7)) & 0x7FFFFFFF);
  v30 = 1772489163 * (v28 ^ WORD1(v28));
  v23[7] = *(_BYTE *)(v16 + (v30 >> 24)) ^ *(_BYTE *)((v30 >> 24) + v17 + 2) ^ *(_BYTE *)((v30 >> 24) + v18 + 1) ^ v30 ^ (31 * BYTE3(v30)) ^ 0xD2;
  v31 = *v11;
  LODWORD(v30) = 1772489163 * ((*(_DWORD *)(*v11 + v29) ^ ((_DWORD)v23 + 8)) & 0x7FFFFFFF);
  v32 = 1772489163 * (v30 ^ WORD1(v30));
  v23[8] = *(_BYTE *)(v16 + (v32 >> 24)) ^ *(_BYTE *)((v32 >> 24) + v17 + 2) ^ *(_BYTE *)((v32 >> 24) + v18 + 1) ^ v32 ^ (31 * BYTE3(v32)) ^ 0x84;
  v33 = (_BYTE *)STACK[0xC760];
  v34 = (_BYTE *)STACK[0xC760];
  LODWORD(v29) = 1772489163 * (((STACK[0xC760] + 9) ^ *(_DWORD *)(v31 + v29)) & 0x7FFFFFFF);
  v35 = 1772489163 * (v29 ^ WORD1(v29));
  v33[9] = *(_BYTE *)(v16 + (v35 >> 24)) ^ *(_BYTE *)((v35 >> 24) + v17 + 2) ^ *(_BYTE *)((v35 >> 24) + v18 + 1) ^ v35 ^ (31 * BYTE3(v35)) ^ 0x9C;
  v36 = *v10 & 0x1A3E29B8;
  LODWORD(v35) = 1772489163 * ((*(_DWORD *)(v31 + v36) ^ ((_DWORD)v33 + 10)) & 0x7FFFFFFF);
  v37 = 1772489163 * (v35 ^ WORD1(v35));
  v33[10] = *(_BYTE *)(v16 + (v37 >> 24)) ^ *(_BYTE *)((v37 >> 24) + v17 + 2) ^ *(_BYTE *)((v37 >> 24) + v18 + 1) ^ v37 ^ (31 * BYTE3(v37)) ^ 0xEC;
  v38 = *v11;
  LODWORD(v37) = 1772489163 * ((*(_DWORD *)(*v11 + v36) ^ ((_DWORD)v33 + 11)) & 0x7FFFFFFF);
  v39 = 1772489163 * (v37 ^ WORD1(v37));
  v33[11] = *(_BYTE *)(v16 + (v39 >> 24)) ^ *(_BYTE *)((v39 >> 24) + v17 + 2) ^ *(_BYTE *)((v39 >> 24) + v18 + 1) ^ v39 ^ (31 * BYTE3(v39)) ^ 0xF;
  LODWORD(v33) = 1772489163 * ((((_DWORD)v34 + 12) ^ *(_DWORD *)(v38 + v36)) & 0x7FFFFFFF);
  v40 = 1772489163 * (v33 ^ (v33 >> 16));
  v34[12] = *(_BYTE *)(v16 + (v40 >> 24)) ^ *(_BYTE *)((v40 >> 24) + v17 + 2) ^ *(_BYTE *)((v40 >> 24) + v18 + 1) ^ v40 ^ (31 * BYTE3(v40)) ^ 0x8A;
  v41 = *v10 & 0x1A3E29B8;
  LODWORD(v40) = 1772489163 * ((*(_DWORD *)(v38 + v41) ^ ((_DWORD)v34 + 13)) & 0x7FFFFFFF);
  v42 = 1772489163 * (v40 ^ WORD1(v40));
  v34[13] = *(_BYTE *)(v16 + (v42 >> 24)) ^ *(_BYTE *)((v42 >> 24) + v17 + 2) ^ *(_BYTE *)((v42 >> 24) + v18 + 1) ^ v42 ^ (31 * BYTE3(v42)) ^ 0xE0;
  v43 = *v11;
  LODWORD(v42) = 1772489163 * ((*(_DWORD *)(*v11 + v41) ^ ((_DWORD)v34 + 14)) & 0x7FFFFFFF);
  v44 = 1772489163 * (v42 ^ WORD1(v42));
  v34[14] = *(_BYTE *)(v16 + (v44 >> 24)) ^ *(_BYTE *)((v44 >> 24) + v17 + 2) ^ *(_BYTE *)((v44 >> 24) + v18 + 1) ^ v44 ^ (31 * BYTE3(v44)) ^ 0xF4;
  v45 = STACK[0xC760];
  LODWORD(v44) = 1772489163 * (((STACK[0xC760] + 15) ^ *(_DWORD *)(v43 + v41)) & 0x7FFFFFFF);
  v46 = 1772489163 * (v44 ^ WORD1(v44));
  v47 = (uint64_t)*(&off_1015B46D0 + (v6 ^ 0x22FA));
  v48 = *(_BYTE *)(v47 + (v46 >> 24));
  v49 = (char *)*(&off_1015B46D0 + v6 - 9749) - 8;
  v50 = v49[v46 >> 24];
  v51 = (uint64_t)*(&off_1015B46D0 + (v6 ^ 0x26ED));
  STACK[0x9448] = (unint64_t)(v9 + 168);
  *(_BYTE *)(v45 + 15) = v48 ^ v50 ^ *(_BYTE *)(v51 + (v46 >> 24)) ^ v46 ^ (99 * BYTE3(v46)) ^ 0xEF;
  LODWORD(v45) = *(_DWORD *)(v43 + v41);
  v52 = (_BYTE *)STACK[0x9448];
  v53 = (_BYTE *)STACK[0x9448];
  v54 = 1772489163
      * ((1772489163 * ((v52 ^ v45) & 0x7FFFFFFF)) ^ ((1772489163
                                                                                 * ((v52 ^ v45) & 0x7FFFFFFF)) >> 16));
  *v52 = *(_BYTE *)(v47 + (v54 >> 24)) ^ v49[v54 >> 24] ^ *(_BYTE *)(v51 + (v54 >> 24)) ^ v54 ^ (99 * BYTE3(v54)) ^ 0x91;
  LODWORD(v54) = 1772489163 * ((*(_DWORD *)(*v11 + (*v10 & 0x1A3E29B8)) ^ ((_DWORD)v52 + 1)) & 0x7FFFFFFF);
  v55 = 1772489163 * (v54 ^ WORD1(v54));
  v52[1] = *(_BYTE *)(v47 + (v55 >> 24)) ^ v49[v55 >> 24] ^ *(_BYTE *)(v51 + (v55 >> 24)) ^ v55 ^ (99 * BYTE3(v55)) ^ 0x74;
  LODWORD(v55) = 1772489163 * ((*(_DWORD *)(*v11 + (*v10 & 0x1A3E29B8)) ^ ((_DWORD)v52 + 2)) & 0x7FFFFFFF);
  v56 = 1772489163 * (v55 ^ WORD1(v55));
  v52[2] = *(_BYTE *)(v47 + (v56 >> 24)) ^ v49[v56 >> 24] ^ *(_BYTE *)(v51 + (v56 >> 24)) ^ v56 ^ (99 * BYTE3(v56)) ^ 0x42;
  LODWORD(v56) = 1772489163 * ((*(_DWORD *)(*v11 + (*v10 & 0x1A3E29B8)) ^ ((_DWORD)v52 + 3)) & 0x7FFFFFFF);
  v57 = 1772489163 * (v56 ^ WORD1(v56));
  v52[3] = *(_BYTE *)(v47 + (v57 >> 24)) ^ v49[v57 >> 24] ^ *(_BYTE *)(v51 + (v57 >> 24)) ^ v57 ^ (99 * BYTE3(v57)) ^ 0xB;
  v58 = *v10 & 0x1A3E29B8;
  LODWORD(v52) = 1772489163 * ((*(_DWORD *)(*v11 + v58) ^ ((_DWORD)v53 + 4)) & 0x7FFFFFFF);
  v59 = 1772489163 * (v52 ^ (v52 >> 16));
  v53[4] = *(_BYTE *)(v47 + (v59 >> 24)) ^ v49[v59 >> 24] ^ *(_BYTE *)(v51 + (v59 >> 24)) ^ v59 ^ (99 * BYTE3(v59)) ^ 0x46;
  LODWORD(v59) = 1772489163 * ((*(_DWORD *)(*v11 + v58) ^ ((_DWORD)v53 + 5)) & 0x7FFFFFFF);
  v60 = 1772489163 * (v59 ^ WORD1(v59));
  v53[5] = *(_BYTE *)(v47 + (v60 >> 24)) ^ v49[v60 >> 24] ^ *(_BYTE *)(v51 + (v60 >> 24)) ^ v60 ^ (99 * BYTE3(v60)) ^ 0x43;
  LODWORD(v60) = 1772489163 * ((*(_DWORD *)(*v11 + v58) ^ ((_DWORD)v53 + 6)) & 0x7FFFFFFF);
  v61 = 1772489163 * (v60 ^ WORD1(v60));
  v53[6] = *(_BYTE *)(v47 + (v61 >> 24)) ^ v49[v61 >> 24] ^ *(_BYTE *)(v51 + (v61 >> 24)) ^ v61 ^ (99 * BYTE3(v61)) ^ 0xA4;
  LODWORD(v61) = 1772489163 * ((*(_DWORD *)(*v11 + v58) ^ ((_DWORD)v53 + 7)) & 0x7FFFFFFF);
  v62 = 1772489163 * (v61 ^ WORD1(v61));
  v53[7] = *(_BYTE *)(v47 + (v62 >> 24)) ^ v49[v62 >> 24] ^ *(_BYTE *)(v51 + (v62 >> 24)) ^ v62 ^ (99 * BYTE3(v62)) ^ 4;
  v63 = (_BYTE *)STACK[0x9448];
  v64 = (_BYTE *)STACK[0x9448];
  v65 = *v11;
  v66 = *v10 & 0x1A3E29B8;
  LODWORD(v53) = 1772489163 * ((*(_DWORD *)(*v11 + v66) ^ (STACK[0x9448] + 8)) & 0x7FFFFFFF);
  v67 = 1772489163 * (v53 ^ (v53 >> 16));
  v63[8] = *(_BYTE *)(v47 + (v67 >> 24)) ^ v49[v67 >> 24] ^ *(_BYTE *)(v51 + (v67 >> 24)) ^ v67 ^ (99 * BYTE3(v67)) ^ 0xE0;
  LODWORD(v67) = 1772489163 * ((*(_DWORD *)(v65 + v66) ^ ((_DWORD)v63 + 9)) & 0x7FFFFFFF);
  v68 = 1772489163 * (v67 ^ WORD1(v67));
  v63[9] = *(_BYTE *)(v47 + (v68 >> 24)) ^ v49[v68 >> 24] ^ *(_BYTE *)(v51 + (v68 >> 24)) ^ v68 ^ (99 * BYTE3(v68)) ^ 0x84;
  LODWORD(v68) = 1772489163 * ((*(_DWORD *)(v65 + v66) ^ ((_DWORD)v63 + 10)) & 0x7FFFFFFF);
  v69 = 1772489163 * (v68 ^ WORD1(v68));
  v63[10] = *(_BYTE *)(v47 + (v69 >> 24)) ^ v49[v69 >> 24] ^ *(_BYTE *)(v51 + (v69 >> 24)) ^ v69 ^ (99 * BYTE3(v69)) ^ 0xCA;
  LODWORD(v69) = 1772489163 * ((*(_DWORD *)(v65 + v66) ^ ((_DWORD)v63 + 11)) & 0x7FFFFFFF);
  v70 = 1772489163 * (v69 ^ WORD1(v69));
  v63[11] = *(_BYTE *)(v47 + (v70 >> 24)) ^ v49[v70 >> 24] ^ *(_BYTE *)(v51 + (v70 >> 24)) ^ v70 ^ (99 * BYTE3(v70)) ^ 0xC2;
  v71 = *v11;
  v72 = *v10 & 0x1A3E29B8;
  LODWORD(v63) = 1772489163 * ((*(_DWORD *)(*v11 + v72) ^ ((_DWORD)v64 + 12)) & 0x7FFFFFFF);
  v73 = 1772489163 * (v63 ^ (v63 >> 16));
  v64[12] = *(_BYTE *)(v47 + (v73 >> 24)) ^ v49[v73 >> 24] ^ *(_BYTE *)(v51 + (v73 >> 24)) ^ v73 ^ (99 * BYTE3(v73)) ^ 0x88;
  LODWORD(v73) = 1772489163 * ((*(_DWORD *)(v71 + v72) ^ ((_DWORD)v64 + 13)) & 0x7FFFFFFF);
  v74 = 1772489163 * (v73 ^ WORD1(v73));
  v64[13] = *(_BYTE *)(v47 + (v74 >> 24)) ^ v49[v74 >> 24] ^ *(_BYTE *)(v51 + (v74 >> 24)) ^ v74 ^ (99 * BYTE3(v74)) ^ 0xE2;
  LODWORD(v74) = 1772489163 * ((*(_DWORD *)(v71 + v72) ^ ((_DWORD)v64 + 14)) & 0x7FFFFFFF);
  v75 = 1772489163 * (v74 ^ WORD1(v74));
  v64[14] = *(_BYTE *)(v47 + (v75 >> 24)) ^ v49[v75 >> 24] ^ *(_BYTE *)(v51 + (v75 >> 24)) ^ v75 ^ (99 * BYTE3(v75)) ^ 0x45;
  LODWORD(v75) = 1772489163 * ((*(_DWORD *)(v71 + v72) ^ ((_DWORD)v64 + 15)) & 0x7FFFFFFF);
  v76 = 1772489163 * (v75 ^ WORD1(v75));
  v64[15] = *(_BYTE *)(STACK[0x4688] + (v76 >> 24)) ^ *(_BYTE *)(STACK[0x4678] + (v76 >> 24)) ^ *(_BYTE *)((v76 >> 24) + STACK[0x4680] + 1) ^ v76 ^ (11 * BYTE3(v76)) ^ 0x5C;
  STACK[0x95F0] = v4;
  STACK[0x71A8] = v5;
  STACK[0x97E8] = v1;
  LODWORD(STACK[0x9194]) = v2;
  STACK[0xA748] = a1;
  LODWORD(STACK[0xCCCC]) = v3;
  STACK[0xBAD0] = (unint64_t)(v9 + 112);
  STACK[0xAF58] = (unint64_t)v9;
  STACK[0xCF48] = (unint64_t)(v9 + 132);
  v77 = ((uint64_t (*)(uint64_t))STACK[0x5510])(23);
  *(_QWORD *)STACK[0x71A8] = v77;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((50 * (v77 != 0)) ^ v6)) - 8))();
}

uint64_t sub_100B5ED24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  STACK[0x9BD0] = STACK[0xAF58];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)((((v7 + 838816831) & 0xCE00F7FF) - 16091) ^ v7)))(a1, a2, a3, a4, a5, a6, a7, 806657363);
}

uint64_t sub_100B5ED94()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((12663
                                               * (v0 == (((STACK[0x6508] - 3526) | 0x90B) ^ 0x8D2D9FDC))) ^ (STACK[0x6508] - 3379)))
                            - 8))();
}

uint64_t sub_100B5EDE0()
{
  int v0;

  return (*(uint64_t (**)(_QWORD, unint64_t))(STACK[0x6AD8] + 8 * ((v0 + 16189) ^ v0)))(LODWORD(STACK[0x9F58]), STACK[0x43B0]);
}

uint64_t sub_100B5EE54@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  unint64_t *v2;
  int v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;

  v6 = *v5;
  v7 = *v2;
  STACK[0x8EF8] = v4;
  STACK[0xD1A8] += 16;
  STACK[0xD9A0] = v7;
  STACK[0xD998] = v6;
  STACK[0xD990] = a2;
  STACK[0xD9B0] = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v3 ^ (8 * (a1 == v7)))) - 12))();
}

uint64_t sub_100B5F0A8()
{
  int v0;
  uint64_t v1;
  char *v2;
  char *v3;

  v3 = (char *)&STACK[0x1D0C0] + v1;
  *v3 = *v2;
  v3[1] = v2[1];
  v3[2] = v2[2];
  v3[3] = v2[3];
  v3[4] = v2[4];
  v3[5] = v2[5];
  v3[6] = v2[6];
  v3[7] = v2[7];
  v3[8] = v2[8];
  v3[9] = v2[9];
  v3[10] = v2[10];
  v3[11] = v2[11];
  v3[12] = v2[12];
  v3[13] = v2[13];
  v3[14] = v2[14];
  v3[15] = v2[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 3700) ^ 0x30B6)))();
}

uint64_t sub_100B5F150()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((69 * (((v1 == 0) ^ ((v0 ^ 0xB6) - 107)) & 1)) ^ v0 ^ 0x207))
                            - 8))();
}

uint64_t sub_100B5F194@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  BOOL v4;
  int v5;

  if (a1)
    v4 = v3 == 0;
  else
    v4 = 1;
  v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (v5 * v2))) - (((v1 - 4282) | 0x20Bu) ^ 0x2203)))();
}

uint64_t sub_100B5F1D8()
{
  int v0;
  int v1;
  _BOOL4 v3;

  v3 = ((((v0 + 1742674800) & 0x9820DB9B) - 6412) & v1 ^ 0xA14BB2CE)
     + (((v0 + 7492) ^ 0x3B57) & v1 | 0x54800420)
     - (((((v0 + 1742674800) & 0x9820DB9B) - 6412) & v1 ^ 0xA14BB2CE) & 0xA1090004) == 1422046955
    && v1 != -90997903;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1429 * v3) ^ v0)) - 8))();
}

uint64_t sub_100B5F27C(int a1, unint64_t a2)
{
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  BOOL v9;
  int v10;

  LODWORD(STACK[0x6AA0]) = v3;
  LODWORD(STACK[0x6A70]) = v2;
  STACK[0x6AB0] = a2;
  LODWORD(STACK[0x65A8]) = v4;
  STACK[0x60B0] = v5;
  LODWORD(STACK[0x60C8]) = a1;
  STACK[0xD9B8] = 0;
  v7 = (uint64_t (*)(uint64_t))STACK[0x5A48];
  STACK[0xD9B8] = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  v8 = v7(1032);
  STACK[0xD9A8] = v8;
  if (v8)
    v9 = STACK[0xD9B8] == 0;
  else
    v9 = 1;
  v10 = !v9;
  LODWORD(STACK[0x6AC0]) = v6 ^ 0x8A0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((v10 * (v6 ^ 0x16EC ^ (v6 - 158686828) & 0x975675F)) ^ v6))
                            - 4))();
}

uint64_t sub_100B5F35C()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  char *v19;
  unsigned int v20;
  char *v21;
  int v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  uint64_t v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unint64_t v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  char *v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  uint64_t v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  char *v96;
  char *v97;
  int v98;
  unsigned int v99;
  int v100;
  unint64_t v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  unint64_t v108;
  unint64_t v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unint64_t v133;
  unsigned int v134;
  unsigned __int8 v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unint64_t v141;
  unsigned int v142;
  unint64_t v143;
  char *v144;
  unsigned int v145;
  char *v146;
  int v147;
  int v148;
  unint64_t v149;
  unint64_t v150;
  int v151;
  char *v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unint64_t v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  unint64_t v176;
  unsigned int v177;
  int v178;
  unint64_t v179;
  int v180;
  int v181;
  unint64_t v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  int v205;
  int v206;
  unint64_t v207;
  int v208;
  unint64_t v209;
  unint64_t v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  BOOL v247;
  int v248;
  int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  unsigned int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  int v311;
  BOOL v312;
  int v313;
  int v314;
  int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  unint64_t v319;
  unint64_t v320;
  unint64_t v321;
  int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  unint64_t v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  int v354;
  unsigned int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  unsigned int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  unsigned int v388;
  int v389;
  unsigned int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  unsigned int v416;
  int v417;
  int v418;
  unsigned int v419;
  int v420;
  int v421;
  unsigned int v422;
  int v423;
  int v424;
  int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  int v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  int v440;
  unsigned int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  unint64_t v501;
  unint64_t v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  unint64_t v511;
  unsigned int v512;
  unint64_t v513;
  unsigned int v514;
  unint64_t v515;
  int v516;
  int v517;
  int v518;
  int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;

  v5 = STACK[0x6AC0];
  v6 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x18F6)) + (v0[15] ^ 0x75) - 12);
  v7 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 3351) + (v0[1] ^ 0xF7) - 12);
  v8 = ((*((unsigned __int8 *)*(&off_1015B46D0 + (v5 ^ 0x1783)) + (v0[9] ^ 0xD2)) ^ 0x99) << 16) | ((v7 ^ 0xBC ^ (((2 * v7) ^ 0xBE) + 4)) << 24) | (((*((_BYTE *)*(&off_1015B46D0 + v5 - 4282) + (v0[10] ^ 0x88)) + 47) ^ 0xEA) << 8) | ((-121 * *((_BYTE *)*(&off_1015B46D0 + v5 - 2574) + (v0[8] ^ 0xADLL))) ^ ((-121 * *((_BYTE *)*(&off_1015B46D0 + v5 - 2574) + (v0[8] ^ 0xADLL))) >> 6) ^ ((-121 * *((_BYTE *)*(&off_1015B46D0 + v5 - 2574) + (v0[8] ^ 0xADLL))) >> 2)) ^ 0xE9;
  v9 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x1268)) + (v0[7] ^ 0xDELL) - 8);
  v10 = STACK[0xD998];
  v11 = ((*((unsigned __int8 *)*(&off_1015B46D0 + v5 - 2427) + (v0[12] ^ 0xF7) - 8) ^ 0xCF) << 16) | ((v9 ^ 0x59 ^ (2 * v9) & 0xFFFFFF87) << 24) | ((((*(_BYTE *)(v10 + 6) ^ 0x41) + *((_BYTE *)*(&off_1015B46D0 + v5 - 2013) + (*(unsigned __int8 *)(v10 + 6) ^ 0x19)) + 1) ^ 0x60) << 8) | *((unsigned __int8 *)*(&off_1015B46D0 + v5 - 3259) + (*(unsigned __int8 *)(v10 + 11) ^ 0xBBLL) - 4) ^ 0xB9;
  v12 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x1382))
        + (((*(unsigned __int8 *)(v10 + 2) ^ 0xC) - (*(unsigned __int8 *)(v10 + 2) ^ 0xE0)) ^ 0xFFFFFFF8)
        + (*(unsigned __int8 *)(v10 + 2) ^ 0xC)
        - 4)
      + 100;
  v13 = ((((v6 >> 5) | (8 * v6)) ^ (v6 >> 1) & 3 ^ 0xD2) << 24) | ((((v0[3] ^ 0x44)
                                                                                    + (v0[3] ^ 0x23)
                                                                                    + *((_BYTE *)*(&off_1015B46D0
                                                                                                 + (v5 ^ 0x12E1))
                                                                                      + (v0[3] ^ 0xECLL)
                                                                                      - 12)
                                                                                    + 1) ^ 0xA2) << 8) | (((*((_BYTE *)*(&off_1015B46D0 + v5 - 1985) + (*(unsigned __int8 *)(STACK[0xD998] + 13) ^ 0x7ALL) - 12) + 112) ^ 0xEC) << 16) | v12 ^ 0x31 ^ (v12 >> 1) & 0x1F;
  v14 = (((*(_BYTE *)(v10 + 5) ^ 6) + 25) ^ 0x9C ^ *((unsigned __int8 *)*(&off_1015B46D0 + (v5 ^ 0x171C))
                                                                    + (*(unsigned __int8 *)(v10 + 5) ^ 0xC8)
                                                                    - 8) | (((*((_BYTE *)*(&off_1015B46D0 + (v5 ^ 0x1426))
                                                                                               + (v0[4] ^ 0x7BLL)
                                                                                               - 12)
                                                                                             - 14) ^ 0x51) << 16) | ((*((unsigned __int8 *)*(&off_1015B46D0 + (v5 ^ 0x139B)) + (*v0 ^ 0xB0) - 12) ^ 0x76) << 24) | ((*(unsigned __int8 *)(v10 + 14) ^ 0x3B ^ *((unsigned __int8 *)*(&off_1015B46D0 + v5 - 3755) + (*(unsigned __int8 *)(v10 + 14) ^ 0xE8))) << 8)) ^ v13;
  v15 = v14 ^ v11;
  LODWORD(v10) = v14 ^ v8;
  v16 = v13 ^ v8 ^ v15;
  v17 = v13 ^ 0x56E64BED;
  v18 = v14 ^ v8 ^ v1;
  v19 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 4350) - 8;
  v20 = *(_DWORD *)&v19[4 * ((v13 ^ 0x56E64BEDu) >> 24)] ^ 0x99C83F76;
  v21 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 3950) - 4;
  v22 = *(_DWORD *)&v21[4 * ((v15 ^ 0x49F4B115u) >> 16)];
  v23 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 3075) - 8;
  v24 = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 1801) - 4;
  HIDWORD(v25) = (*(_DWORD *)(v24 + 4 * (HIBYTE(v16) ^ 0xD0)) + v4) ^ 0x6CEE703D;
  LODWORD(v25) = HIDWORD(v25);
  v26 = (v25 >> 24) ^ __ROR4__(*(_DWORD *)&v23[4 * BYTE2(v17)], 11) ^ __ROR4__(*(_DWORD *)&v21[4* ((unsigned __int16)(v15 ^ 0xB115) >> 8)] ^ 0x83DF37E, 8) ^ __ROR4__((*(_DWORD *)(v24+ 4 * v18)+ v4) ^ 0x6CEE703D, 16);
  LODWORD(v10) = *(_DWORD *)&v21[4 * (BYTE2(v16) ^ 0x62)] ^ __ROR4__(*(_DWORD *)&v21[4 * (BYTE3(v10) ^ 0xEE)] ^ 0x83DF37E, 24) ^ __ROR4__(*(_DWORD *)&v19[4 * BYTE1(v17)] ^ 0x99C83F76, 8) ^ __ROR4__(*(_DWORD *)&v21[4* (v15 ^ 0xEC)] ^ 0x83DF37E, 16);
  v27 = *(_DWORD *)&v19[4 * BYTE2(v18)] ^ __ROR4__(*(_DWORD *)&v19[4 * ((v15 ^ 0x49F4B115u) >> 24)] ^ 0x99C83F76, 24) ^ __ROR4__((*(_DWORD *)(v24 + 4 * ((unsigned __int16)(v16 ^ 0x5B52) >> 8)) + v4) ^ 0x6CEE703D, 8);
  v28 = v22 ^ __ROR4__(v20, 24) ^ __ROR4__(*(_DWORD *)&v19[4 * BYTE1(v18)] ^ 0x99C83F76, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * (v16 ^ 0x52)], 11) ^ 0x89D21FDA, 16) ^ 0x87A053AC;
  LODWORD(v25) = __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * v17], 11) ^ 0x89D21FDA, 16);
  v29 = v27 ^ v25;
  BYTE1(v20) = ((unsigned __int16)(v27 ^ v25) >> 8) ^ 0xE2;
  v30 = (*(_DWORD *)(v24 + 4 * ((v27 ^ v25 ^ 0x84CE2A9) >> 16)) + v4) ^ __ROR4__(*(_DWORD *)&v19[4 * HIBYTE(v28)] ^ 0x99C83F76, 24) ^ __ROR4__(*(_DWORD *)&v19[4 * (BYTE1(v10) ^ 0xD5)] ^ 0x99C83F76, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * (v26 ^ 0xA)], 11) ^ 0x89D21FDA, 16);
  v31 = BYTE3(v10) ^ 0xCB;
  v32 = *(_DWORD *)&v19[4 * (BYTE2(v10) ^ 3)] ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * ((v29 ^ 0x84CE2A9u) >> 24)], 11) ^ 0x89D21FDA, 24) ^ __ROR4__(*(_DWORD *)&v19[4* ((unsigned __int16)(v26 ^ 0x5BE7) >> 8)] ^ 0x99C83F76, 8);
  LODWORD(v10) = (*(_DWORD *)(v24 + 4 * BYTE2(v28)) + v4) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * ((v26 ^ 0x2EB35BE7u) >> 24)], 11) ^ 0x89D21FDA, 24) ^ __ROR4__(*(_DWORD *)&v21[4 * BYTE1(v20)] ^ 0x83DF37E, 8) ^ __ROR4__(*(_DWORD *)&v21[4* (v10 ^ 0x6B)] ^ 0x83DF37E, 16);
  v33 = (*(_DWORD *)(v24 + 4 * (BYTE2(v26) ^ 0xEEu)) + v4) ^ __ROR4__(*(_DWORD *)&v21[4 * v31] ^ 0x83DF37E, 24) ^ __ROR4__(*(_DWORD *)&v19[4 * BYTE1(v28)] ^ 0x99C83F76, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * (v29 ^ 0x44)], 11) ^ 0x89D21FDA, 16);
  v34 = v32 ^ __ROR4__(*(_DWORD *)&v21[4 * v28] ^ 0x83DF37E, 16);
  v35 = v34 ^ 0x13A1C257;
  v33 ^= 0x546C2F8Au;
  v36 = v10 ^ 0x59CFB106;
  v37 = *(_DWORD *)&v21[4 * ((v34 ^ 0x13A1C257u) >> 16)] ^ __ROR4__(*(_DWORD *)&v19[4* ((v30 ^ 0x752E1B34u) >> 24)] ^ 0x99C83F76, 24) ^ __ROR4__(*(_DWORD *)&v19[4 * BYTE1(v33)] ^ 0x99C83F76, 8) ^ __ROR4__((*(_DWORD *)(v24 + 4 * (v10 ^ 6u))+ v4) ^ 0x6CEE703D, 16);
  HIDWORD(v25) = (*(_DWORD *)(v24 + 4 * ((v10 ^ 0x59CFB106) >> 24)) + v4) ^ 0x6CEE703D;
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(v10) = (v25 >> 24) ^ __ROR4__(*(_DWORD *)&v23[4 * ((v30 ^ 0x752E1B34u) >> 16)], 11) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * (BYTE1(v34) ^ 0x2F)], 11) ^ 0x89D21FDA, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * v33], 11) ^ 0x89D21FDA, 16);
  v38 = __ROR4__(*(_DWORD *)&v23[4 * HIBYTE(v33)], 11) ^ 0x89D21FDA;
  v39 = *(_DWORD *)&v19[4 * BYTE2(v33)] ^ __ROR4__(*(_DWORD *)&v21[4 * HIBYTE(v35)] ^ 0x83DF37E, 24) ^ __ROR4__(*(_DWORD *)&v21[4 * BYTE1(v36)] ^ 0x83DF37E, 8) ^ __ROR4__((*(_DWORD *)(v24 + 4 * (v30 ^ 0x69u)) + v4) ^ 0x6CEE703D, 16);
  v40 = *(_DWORD *)&v21[4 * BYTE2(v36)] ^ 0x718A7A4F ^ __ROR4__(v38, 24) ^ __ROR4__(*(_DWORD *)&v19[4 * (BYTE1(v30) ^ 0xAF)] ^ 0x99C83F76, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * v35], 11) ^ 0x89D21FDA, 16);
  LOWORD(v38) = v37 ^ 0xC25B;
  v41 = __ROR4__(*(_DWORD *)&v23[4 * ((v37 ^ 0xE698C25B) >> 24)], 11) ^ 0x89D21FDA;
  v42 = v39 ^ 0x3F6D81B7;
  v43 = (*(_DWORD *)(v24 + 4 * (BYTE2(v37) ^ 0xC5u)) + v4) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * (BYTE3(v10) ^ 0x17)], 11) ^ 0x89D21FDA, 24) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4* ((unsigned __int16)(v39 ^ 0x81B7) >> 8)], 11) ^ 0x89D21FDA, 8) ^ __ROR4__(*(_DWORD *)&v21[4 * v40] ^ 0x83DF37E, 16);
  v44 = (*(_DWORD *)(v24 + 4 * (BYTE2(v10) ^ 0x72u)) + v4) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * HIBYTE(v40)], 11) ^ 0x89D21FDA, 24) ^ __ROR4__((*(_DWORD *)(v24 + 4 * BYTE1(v38)) + v4) ^ 0x6CEE703D, 8) ^ __ROR4__(*(_DWORD *)&v19[4* (v39 ^ 0xB7)] ^ 0x99C83F76, 16);
  v45 = (*(_DWORD *)(v24 + 4 * (BYTE2(v39) ^ 0x30u)) + v4) ^ __ROR4__(v41, 24) ^ __ROR4__(*(_DWORD *)&v21[4 * BYTE1(v40)] ^ 0x83DF37E, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * (v10 ^ 0x50)], 11) ^ 0x89D21FDA, 16) ^ 0xCC780D2E;
  v46 = (*(_DWORD *)(v24 + 4 * BYTE2(v40)) + v4) ^ __ROR4__((*(_DWORD *)(v24 + 4 * HIBYTE(v42)) + v4) ^ 0x6CEE703D, 24) ^ __ROR4__(*(_DWORD *)&v21[4 * (BYTE1(v10) ^ 0x5B)] ^ 0x83DF37E, 8) ^ __ROR4__(*(_DWORD *)&v21[4 * v38] ^ 0x83DF37E, 16) ^ 0x48CD2D71;
  BYTE1(v38) = BYTE1(v43) ^ 0x11;
  v47 = *(_DWORD *)&v19[4 * BYTE2(v46)] ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * HIBYTE(v45)], 11) ^ 0x89D21FDA, 24) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * (BYTE1(v44) ^ 0x75)], 11) ^ 0x89D21FDA, 8) ^ __ROR4__((*(_DWORD *)(v24 + 4 * (v43 ^ 0xDBu)) + v4) ^ 0x6CEE703D, 16);
  v48 = (*(_DWORD *)(v24 + 4 * BYTE2(v45)) + v4) ^ __ROR4__(*(_DWORD *)&v19[4 * ((v43 ^ 0x9E3C11DB) >> 24)] ^ 0x99C83F76, 24) ^ __ROR4__(*(_DWORD *)&v19[4 * BYTE1(v46)] ^ 0x99C83F76, 8) ^ __ROR4__(*(_DWORD *)&v19[4 * (v44 ^ 0x84)] ^ 0x99C83F76, 16);
  LODWORD(v10) = *(_DWORD *)&v21[4 * (BYTE2(v43) ^ 0xC5)] ^ __ROR4__((*(_DWORD *)(v24 + 4 * (HIBYTE(v44) ^ 0x20)) + v4) ^ 0x6CEE703D, 24) ^ __ROR4__((*(_DWORD *)(v24 + 4 * BYTE1(v45)) + v4) ^ 0x6CEE703D, 8) ^ __ROR4__(*(_DWORD *)&v21[4 * v46] ^ 0x83DF37E, 16);
  v49 = *(_DWORD *)(v24 + 4 * (BYTE2(v44) ^ 5u));
  v50 = (((2 * v49) & 0x10967960) + (v49 ^ v4)) ^ __ROR4__(*(_DWORD *)&v19[4 * HIBYTE(v46)] ^ 0x99C83F76, 24) ^ __ROR4__((*(_DWORD *)(v24 + 4 * BYTE1(v38)) + v4) ^ 0x6CEE703D, 8) ^ __ROR4__(*(_DWORD *)&v21[4 * v45] ^ 0x83DF37E, 16);
  BYTE2(v38) = BYTE2(v10) ^ 0x4B;
  v51 = __ROR4__(*(_DWORD *)&v23[4 * ((unsigned __int16)(v10 ^ 0x72CA) >> 8)], 11) ^ 0x89D21FDA;
  LOBYTE(v42) = v48 ^ 0xC;
  HIDWORD(v25) = (*(_DWORD *)(v24 + 4 * (BYTE3(v10) ^ 0x13)) + v4) ^ 0x6CEE703D;
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(v10) = *(_DWORD *)&v19[4 * (BYTE2(v47) ^ 0xF7)] ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * ((v48 ^ 0xC50BC50C) >> 24)], 11) ^ 0x89D21FDA, 24) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * (BYTE1(v50) ^ 0x63)], 11) ^ 0x89D21FDA, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4* (v10 ^ 0xCA)], 11) ^ 0x89D21FDA, 16);
  v47 ^= 0x8243DD58;
  v52 = (v25 >> 24) ^ __ROR4__(*(_DWORD *)&v23[4 * ((v48 ^ 0xC50BC50C) >> 16)], 11) ^ __ROR4__(*(_DWORD *)&v21[4 * BYTE1(v47)] ^ 0x83DF37E, 8);
  HIDWORD(v25) = *(_DWORD *)&v19[4 * (v50 ^ 0x80)] ^ 0x99C83F76;
  LODWORD(v25) = HIDWORD(v25);
  v53 = v25 >> 16;
  LODWORD(v25) = __ROR4__(*(_DWORD *)&v23[4 * (HIBYTE(v50) ^ 0xFD)], 11) ^ 0x89D21FDA;
  HIDWORD(v25) = v25;
  v54 = (v25 >> 24) ^ __ROR4__(*(_DWORD *)&v23[4 * BYTE2(v38)], 11) ^ __ROR4__(*(_DWORD *)&v21[4 * (BYTE1(v48) ^ 0x3C)] ^ 0x83DF37E, 8);
  v55 = *(_DWORD *)&v19[4 * (BYTE2(v50) ^ 0x86)] ^ 0xF241FF17 ^ __ROR4__(*(_DWORD *)&v19[4 * HIBYTE(v47)] ^ 0x99C83F76, 24) ^ __ROR4__(v51, 8) ^ __ROR4__(*(_DWORD *)&v19[4 * v42] ^ 0x99C83F76, 16);
  v56 = v54 ^ __ROR4__((*(_DWORD *)(v24 + 4 * v47) + v4) ^ 0x6CEE703D, 16);
  v57 = v52 ^ v53;
  v58 = (*(_DWORD *)(v24 + 4 * (BYTE2(v56) ^ 0x50u)) + v4) ^ __ROR4__(*(_DWORD *)&v19[4 * HIBYTE(v55)] ^ 0x99C83F76, 24) ^ __ROR4__((*(_DWORD *)(v24+ 4* (((unsigned __int16)(v52 ^ v53) >> 8) ^ 0x43u))+ v4) ^ 0x6CEE703D, 8) ^ __ROR4__(*(_DWORD *)&v19[4* (v10 ^ 0xA6)] ^ 0x99C83F76, 16);
  v59 = *(_DWORD *)&v21[4 * (BYTE2(v10) ^ 0x62)] ^ __ROR4__((*(_DWORD *)(v24 + 4 * (((v52 ^ v53) >> 24) ^ 0xE3)) + v4) ^ 0x6CEE703D, 24) ^ __ROR4__((*(_DWORD *)(v24 + 4 * BYTE1(v55)) + v4) ^ 0x6CEE703D, 8) ^ __ROR4__(*(_DWORD *)&v21[4 * (v56 ^ 0xB5)] ^ 0x83DF37E, 16);
  v60 = *(_DWORD *)&v21[4 * BYTE2(v55)] ^ __ROR4__(*(_DWORD *)&v21[4 * (BYTE3(v10) ^ 0x4F)] ^ 0x83DF37E, 24) ^ __ROR4__((*(_DWORD *)(v24 + 4 * (((v56 ^ 0xD70D814C) >> (v53 & 8) >> (v53 & 8 ^ 8)) ^ 0x5Du)) + v4) ^ 0x6CEE703D, 8);
  LODWORD(v10) = *(_DWORD *)&v21[4 * (BYTE2(v57) ^ 0x70)] ^ __ROR4__(*(_DWORD *)&v19[4 * (HIBYTE(v56) ^ 0x63)] ^ 0x99C83F76, 24) ^ __ROR4__(*(_DWORD *)&v21[4 * (BYTE1(v10) ^ 0x4F)] ^ 0x83DF37E, 8) ^ __ROR4__(*(_DWORD *)&v21[4 * v55] ^ 0x83DF37E, 16) ^ 0x987F1AB4;
  HIDWORD(v25) = *(_DWORD *)&v23[4 * BYTE2(v10)];
  LODWORD(v25) = HIDWORD(v25);
  v61 = v25 >> 11;
  v62 = *(_DWORD *)&v19[4 * v57] ^ 0x99C83F76;
  v63 = v60 ^ (v62 << 16) ^ 0xCCF3B5EC;
  v64 = v63 ^ HIWORD(v62);
  v65 = __ROR4__(*(_DWORD *)&v23[4 * (BYTE1(v59) ^ 0xC4)], 11) ^ 0x89D21FDA;
  v66 = __ROR4__(*(_DWORD *)&v23[4 * HIBYTE(v63)], 11) ^ 0x89D21FDA;
  v67 = __ROR4__(*(_DWORD *)&v23[4 * BYTE1(v10)], 11) ^ 0x89D21FDA;
  v59 ^= 0x6B032916u;
  HIDWORD(v25) = *(_DWORD *)&v21[4 * BYTE3(v10)] ^ 0x83DF37E;
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(v10) = *(_DWORD *)&v21[4 * BYTE2(v63)] ^ __ROR4__((*(_DWORD *)(v24 + 4 * HIBYTE(v59)) + v4) ^ 0x6CEE703D, 24) ^ __ROR4__(*(_DWORD *)&v19[4* ((unsigned __int16)(v58 ^ 0xFFFC) >> 8)] ^ 0x99C83F76, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * v10], 11) ^ 0x89D21FDA, 16);
  v68 = v61 ^ __ROR4__(*(_DWORD *)&v21[4 * ((v58 ^ 0xFDAFFFCu) >> 24)] ^ 0x83DF37E, 24) ^ __ROR4__(v65, 8) ^ __ROR4__(*(_DWORD *)&v19[4 * v64] ^ 0x99C83F76, 16);
  v69 = (v25 >> 24) ^ __ROR4__(*(_DWORD *)&v23[4 * BYTE2(v59)], 11) ^ __ROR4__((*(_DWORD *)(v24 + 4 * BYTE1(v64)) + v4) ^ 0x6CEE703D, 8) ^ __ROR4__(*(_DWORD *)&v19[4* (v58 ^ 0xFC)] ^ 0x99C83F76, 16);
  v70 = __ROR4__(*(_DWORD *)&v23[4 * (BYTE2(v58) ^ 0x37)], 11) ^ 0x1C9CA62B ^ __ROR4__(v66, 24) ^ __ROR4__(v67, 8) ^ __ROR4__(*(_DWORD *)&v19[4 * v59] ^ 0x99C83F76, 16);
  v68 ^= 0xAF460F1E;
  v71 = *(_DWORD *)&v21[4 * ((v69 ^ 0xA55C8DB1) >> 16)] ^ __ROR4__(*(_DWORD *)&v21[4 * HIBYTE(v68)] ^ 0x83DF37E, 24) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4 * ((unsigned __int16)(v10 ^ 0x77B3) >> 8)], 11) ^ 0x89D21FDA, 8) ^ __ROR4__(*(_DWORD *)&v21[4 * v70] ^ 0x83DF37E, 16);
  v72 = __ROR4__(*(_DWORD *)&v23[4 * (v69 ^ 0xB1)], 11) ^ 0x89D21FDA;
  v73 = __ROR4__(*(_DWORD *)&v23[4 * BYTE1(v70)], 11) ^ 0x89D21FDA;
  LODWORD(v23) = *(_DWORD *)&v21[4 * BYTE2(v68)] ^ 0x6141BC1F ^ __ROR4__((*(_DWORD *)(v24 + 4 * HIBYTE(v70)) + v4) ^ 0x6CEE703D, 24) ^ __ROR4__((*(_DWORD *)(v24 + 4 * (BYTE1(v69) ^ 0xD0u))+ v4) ^ 0x6CEE703D, 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v23[4* (v10 ^ 0xB3)], 11) ^ 0x89D21FDA, 16);
  LODWORD(v19) = *(_DWORD *)&v21[4 * BYTE2(v70)] ^ 0x4224CD21 ^ __ROR4__(*(_DWORD *)&v19[4* ((v10 ^ 0xC2EA77B3) >> 24)] ^ 0x99C83F76, 24) ^ __ROR4__(*(_DWORD *)&v19[4 * BYTE1(v68)] ^ 0x99C83F76, 8) ^ __ROR4__(v72, 16);
  LODWORD(v21) = *(_DWORD *)&v21[4 * (BYTE2(v10) ^ 0x13)] ^ __ROR4__((*(_DWORD *)(v24 + 4 * ((v69 ^ 0xA55C8DB1) >> 24)) + v4) ^ 0x6CEE703D, 24);
  STACK[0x66C8] = v24;
  v74 = v21 ^ __ROR4__(v73, 8) ^ __ROR4__((*(_DWORD *)(v24 + 4 * v68) + v4) ^ 0x6CEE703D, 16);
  v75 = (uint64_t)*(&off_1015B46D0 + v5 - 2700);
  v76 = *(unsigned __int16 *)(v75 + 2 * ((v71 ^ 0xC82A7DC9) >> 24));
  v74 ^= 0x707802E2u;
  v77 = *(unsigned __int16 *)(v75 + 2 * BYTE2(v74));
  v78 = (((unsigned __int16)((v77 >> 6) | ((_WORD)v77 << 10)) ^ 0x793B ^ (((v77 >> 6) | (v77 << 10)) >> 4) & 0x7F8) << 8) ^ ((((v76 >> 6) | (v76 << 10)) ^ 0x793B ^ (((v76 >> 6) | (v76 << 10)) >> 4) & 0x7F8) << 16);
  v79 = *(unsigned __int16 *)(v75 + 2 * BYTE1(v19));
  v80 = (v79 >> 6) | (v79 << 10);
  v81 = (unint64_t)*(&off_1015B46D0 + (v5 ^ 0x1945));
  v82 = *(unsigned __int16 *)(v81 + 2 * v23);
  HIDWORD(v25) = ((v82 >> 3) | (v82 << 13)) ^ 0xFFFFCD59;
  LODWORD(v25) = WORD2(v25) & 0xFF00;
  v83 = v25 >> 8;
  v84 = *(unsigned __int16 *)(v81 + 2 * (v23 >> 24));
  v85 = *(unsigned __int16 *)(v81 + 2 * BYTE1(v74));
  LOWORD(v59) = (v85 >> 3) | ((_WORD)v85 << 13);
  v86 = (char *)*(&off_1015B46D0 + (v5 ^ 0x15E6)) - 8;
  v87 = ((*(unsigned __int16 *)&v86[2 * ((v71 ^ 0xC82A7DC9) >> 16)] ^ 0x98A8) << 8) ^ ((((v84 >> 3) | (v84 << 13)) ^ v3) << 16);
  v88 = *(unsigned __int16 *)(v75 + 2 * v74);
  HIDWORD(v25) = ((v88 >> 6) | (v88 << 10)) ^ 0x793B ^ (((v88 >> 6) | (v88 << 10)) >> 4) & 0x7F8;
  LODWORD(v25) = WORD2(v25) & 0xFF00;
  v89 = v25 >> 8;
  STACK[0x6660] = v81;
  v90 = *(unsigned __int16 *)(v81 + 2 * (v19 >> 24));
  v91 = (uint64_t)*(&off_1015B46D0 + v5 - 2466);
  HIDWORD(v25) = v71 ^ 0xFFFFB015 ^ *(unsigned __int16 *)(v91 + 2 * (v71 ^ 0xD3u));
  LODWORD(v25) = WORD2(v25) & 0xFF00;
  LODWORD(v75) = *(unsigned __int16 *)(v75 + 2 * BYTE2(v23));
  v92 = v78 ^ (unsigned __int16)v80 ^ 0x793B ^ (v80 >> 4) & 0x7F8 ^ v83;
  LODWORD(v21) = (*(unsigned __int16 *)&v86[2 * (BYTE1(v71) ^ 0x7D)] | ((((v90 >> 3) | (v90 << 13)) ^ v3) << 16)) ^ (((unsigned __int16)((v75 >> 6) | ((_WORD)v75 << 10)) ^ 0x793B ^ (((v75 >> 6) | ((_DWORD)v75 << 10)) >> 4) & 0x7F8) << 8);
  LODWORD(v23) = ((BYTE2(v19) ^ 0xB0DC ^ *(_WORD *)(v91 + 2 * (BYTE2(v19) ^ 0x1Au))) << 8) ^ ((*(unsigned __int16 *)&v86[2 * HIBYTE(v74)] ^ 0x98A8) << 16) ^ BYTE1(v23) ^ 0x142E ^ *(_WORD *)(v91 + 2 * (BYTE1(v23) ^ 0x1Au)) ^ (v25 >> 8);
  v93 = v87 ^ (unsigned __int16)(v59 ^ v3) ^ v92 ^ __ROR4__(*(unsigned __int16 *)&v86[2 * v19] ^ 0x98A8, 8) ^ v23;
  v94 = (int)v23;
  LODWORD(STACK[0x69A0]) = v93;
  v95 = v5;
  v96 = (char *)*(&off_1015B46D0 + (v5 ^ 0x1314)) - 8;
  LODWORD(v23) = __ROR4__(*(_DWORD *)&v96[4 * (BYTE2(v93) ^ 0xD9)], 14) ^ 0x2108D8FF;
  LODWORD(v19) = __ROR4__(*(_DWORD *)&v96[4 * (HIBYTE(v93) ^ 0xB9)], 14) ^ 0x2108D8FF;
  v97 = (char *)*(&off_1015B46D0 + (v5 ^ 0x19E2)) - 8;
  v98 = *(_DWORD *)&v97[4 * (v93 ^ 0x99)];
  LODWORD(STACK[0x6A50]) = v94;
  LODWORD(STACK[0x68C0]) = v94 ^ 0xD4520C1A;
  LODWORD(v23) = v94 ^ 0xD4520C1A ^ (v98 - 1780118023) ^ __ROR4__((*(_DWORD *)&v97[4 * (BYTE1(v93) ^ 0xF8)] - 1780118023) ^ 0x7DE0C031, 24) ^ __ROR4__((_DWORD)v23, 16);
  LODWORD(v25) = __ROR4__((_DWORD)v19, 8);
  LODWORD(v21) = v21 ^ v89 ^ 0x544F17E0 ^ v93;
  LODWORD(STACK[0x6990]) = v21 ^ v92;
  v99 = v21 ^ v92 ^ 0x2F0D5968;
  LODWORD(STACK[0x6A80]) = v99;
  LODWORD(v19) = v94 ^ 0xFB5F5572 ^ v21;
  LODWORD(STACK[0x6A90]) = (_DWORD)v19;
  LODWORD(STACK[0x68B0]) = v93 ^ 0xEA8AFC9D;
  LODWORD(v19) = v23 ^ v25 ^ v19;
  LODWORD(STACK[0x6A10]) = (_DWORD)v19;
  LODWORD(v86) = v23 ^ v25;
  LODWORD(STACK[0x66D8]) = v23 ^ v25;
  LODWORD(v21) = v19 ^ 0x648329A1;
  LODWORD(v19) = v19 ^ 0x648329A1 ^ v99;
  LODWORD(v75) = (_DWORD)v21;
  LODWORD(STACK[0x69C0]) = (_DWORD)v21;
  LODWORD(v21) = v19 ^ v93 ^ 0xEA8AFC9D;
  v100 = (int)v19;
  LODWORD(STACK[0x69D0]) = (_DWORD)v19;
  LODWORD(v19) = ((unsigned __int16)((unsigned __int16)v21 ^ 0x39D3) >> 8);
  LODWORD(STACK[0x6A60]) = (_DWORD)v19;
  v101 = (unint64_t)*(&off_1015B46D0 + v5 - 1914) - 8;
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (v19 ^ 0xD3));
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(v19) = v25 >> 14;
  LODWORD(v23) = (v21 ^ 0x477539D3) >> 24;
  LODWORD(STACK[0x69B0]) = (_DWORD)v23;
  v102 = v21 ^ 0x477539D3;
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (v23 ^ 0xD3));
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(v23) = (v25 >> 14) ^ (16 * (v25 >> 14) * (v25 >> 14));
  HIDWORD(v25) = v19 ^ (16 * (_DWORD)v19 * (_DWORD)v19) ^ 0x4E3DC9CA;
  LODWORD(v25) = HIDWORD(v25);
  v103 = v25 >> 24;
  LODWORD(STACK[0x6960]) = v103;
  LODWORD(STACK[0x6A30]) = v21;
  v104 = *(_DWORD *)&v97[4 * (v21 ^ 0xD7)] - 1780118023;
  LODWORD(STACK[0x6940]) = v104;
  LODWORD(STACK[0x6980]) = ((v21 ^ 0x477539D3) >> 16);
  LODWORD(v21) = v86 ^ v104 ^ v103 ^ __ROR4__((*(_DWORD *)&v97[4* (((v21 ^ 0x477539D3) >> 16) ^ 4)]- 1780118023) ^ 0x7DE0C031, 16) ^ __ROR4__(v23 ^ 0x4E3DC9CA, 8);
  LODWORD(STACK[0x6820]) = v21 ^ v75;
  v105 = (int)v21;
  LODWORD(STACK[0x6830]) = (_DWORD)v21;
  LODWORD(v21) = v21 ^ v75 ^ 0xBF11B666;
  LODWORD(v19) = v21 ^ v100 ^ v102;
  LODWORD(STACK[0x6810]) = v21 ^ v100;
  LODWORD(STACK[0x6970]) = v102;
  LODWORD(v23) = v19 ^ 0x95F9E2;
  v106 = v19 >> 24;
  LODWORD(STACK[0x66A8]) = v19 >> 24;
  LODWORD(v75) = (v21 ^ v100 ^ v102);
  LODWORD(STACK[0x6680]) = v75;
  LODWORD(v19) = *(_DWORD *)&v97[4 * (v75 ^ 0xE6)] - 1780118023;
  v107 = (*(_DWORD *)&v97[4 * (v106 ^ 4)] - 1780118023) ^ 0x7DE0C031;
  LODWORD(STACK[0x6688]) = BYTE1(v23);
  LODWORD(v25) = __ROR4__((*(_DWORD *)&v97[4 * (BYTE1(v23) ^ 4)] - 1780118023) ^ 0x7DE0C031, 24);
  LODWORD(STACK[0x6678]) = BYTE2(v23);
  v108 = (unint64_t)v97;
  LODWORD(v19) = v19 ^ __ROR4__(v107, 8) ^ v25 ^ v105;
  LODWORD(v25) = __ROR4__((*(_DWORD *)&v97[4 * (BYTE2(v23) ^ 4)] - 1780118023) ^ 0x7DE0C031, 16);
  LODWORD(STACK[0x67F0]) = v19 ^ v25;
  LODWORD(v19) = v19 ^ v25 ^ 0x5C3AF805;
  LODWORD(STACK[0x69E0]) = v19 ^ v21;
  v109 = (unint64_t)*(&off_1015B46D0 + (v95 ^ 0x194D)) - 4;
  v110 = v19 ^ v21 ^ 0xD0CB8E52;
  LODWORD(v75) = v110 ^ v102;
  v111 = (v110 ^ v102) >> 24;
  LODWORD(STACK[0x67C0]) = v111;
  HIDWORD(v25) = *(_DWORD *)(v109 + 4 * (v111 ^ 0xAD)) ^ 0x8C695FDD;
  LODWORD(v25) = HIDWORD(v25);
  v112 = v110 ^ v21 ^ v100 ^ v23;
  v113 = v110 ^ v21 ^ v100;
  LODWORD(STACK[0x67D0]) = v113;
  LODWORD(STACK[0x67E0]) = v112;
  BYTE1(v23) = BYTE1(v112) ^ 0xF9;
  LODWORD(v21) = (v25 >> 8) ^ __ROR4__(*(_DWORD *)&v96[4 * (v112 ^ 0xB1)], 14);
  v114 = ((v112 ^ 0x3A95F9E2) >> 16);
  LODWORD(STACK[0x6698]) = v114;
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (v114 ^ 0xD3u));
  LODWORD(v25) = HIDWORD(v25);
  v115 = v25 >> 14;
  LODWORD(STACK[0x6690]) = BYTE1(v23);
  v116 = v21 ^ v19 ^ __ROR4__(__ROR4__(*(_DWORD *)&v96[4 * (BYTE1(v23) ^ 0x53)], 14) ^ 0x2108D8FF, 24) ^ __ROR4__(((16 * v115 * v115) ^ (-16 * v115 * v115) ^ ((v115 ^ 0x4E3DC9CA) + (v115 ^ 0xB1C23635 ^ (16 * v115 * v115)) + 1))+ (v115 ^ 0x4E3DC9CA), 16);
  v117 = v116 ^ v110;
  LODWORD(v23) = v117 ^ 0x972B4E63;
  v118 = v117;
  LODWORD(v21) = v117 ^ 0x972B4E63 ^ v113 ^ 0x95F9E2;
  LODWORD(STACK[0x66E8]) = (_DWORD)v21;
  v119 = v21 ^ v75;
  LODWORD(v75) = v21 ^ v75 ^ 0x7708D8FF;
  v120 = BYTE1(v75);
  LODWORD(v25) = __ROR4__(*(_DWORD *)&v96[4 * (BYTE1(v75) ^ 0x53)], 14) ^ 0x2108D8FF;
  HIDWORD(v25) = v25;
  LODWORD(STACK[0x68F0]) = HIBYTE(v119);
  v121 = *(_DWORD *)(v109 + 4 * (HIBYTE(v119) ^ 0xDA)) ^ 0x8C695FDD;
  LODWORD(STACK[0x6910]) = v119;
  v122 = (v25 >> 24) ^ __ROR4__(v121, 8) ^ __ROR4__(*(_DWORD *)&v96[4 * (v119 ^ 0xAC)], 14);
  LODWORD(STACK[0x6930]) = BYTE2(v75);
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (BYTE2(v75) ^ 0xD3u));
  LODWORD(v25) = HIDWORD(v25);
  v123 = v122 ^ __ROR4__((v25 >> 14) ^ (16 * (v25 >> 14) * (v25 >> 14)) ^ 0x4E3DC9CA, 16) ^ v116;
  LODWORD(v21) = v123 ^ v113 ^ 0x95F9E2;
  LODWORD(STACK[0x6668]) = v119 ^ v21;
  v124 = (int)v21;
  LODWORD(STACK[0x66E0]) = (_DWORD)v21;
  LODWORD(v19) = v119 ^ v21 ^ v2;
  LODWORD(STACK[0x6650]) = BYTE1(v19);
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (BYTE1(v19) ^ 0xD3u));
  LODWORD(v25) = HIDWORD(v25);
  v125 = (v25 >> 14) ^ (16 * (v25 >> 14) * (v25 >> 14));
  LODWORD(STACK[0x6658]) = BYTE2(v19);
  LODWORD(v75) = __ROR4__(*(_DWORD *)&v96[4 * (BYTE2(v19) ^ 0x53)], 14) ^ 0x2108D8FF;
  LODWORD(STACK[0x6648]) = v19 >> 24;
  HIDWORD(v25) = *(_DWORD *)(v109 + 4 * ((v19 >> 24) ^ 0xAD)) ^ 0x8C695FDD;
  LODWORD(v25) = HIDWORD(v25);
  v126 = (v25 >> 8) ^ __ROR4__(v75, 16) ^ __ROR4__(*(_DWORD *)&v96[4 * (v19 ^ 0x53)], 14) ^ __ROR4__(v125 ^ 0x4E3DC9CA, 24);
  LODWORD(STACK[0x6608]) = v123;
  LODWORD(v75) = v23 ^ v123;
  LODWORD(STACK[0x6A20]) = v23 ^ v123;
  LODWORD(STACK[0x6A00]) = v126 ^ v123;
  LODWORD(v23) = v126 ^ v123 ^ 0xB62B4E63;
  LODWORD(STACK[0x67A0]) = v23 ^ v75;
  v127 = v23 ^ v75 ^ 0xE023969C;
  LODWORD(v19) = v127 ^ v21 ^ v19;
  LODWORD(v75) = v19 ^ 0xA123969C;
  LODWORD(STACK[0x66B8]) = v19;
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (v19 ^ 0x4Fu));
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(v19) = v25 >> 14;
  LODWORD(STACK[0x66A0]) = BYTE3(v75);
  v128 = v19 ^ __ROR4__(*(_DWORD *)(v109+ 4* ((((BYTE3(v75) + (BYTE3(v75) ^ 0xFFFFFF76) + 1) ^ 0xFFFFFFFE) + BYTE3(v75)) ^ 0x24)) ^ 0x8C695FDD, 8);
  LODWORD(STACK[0x6630]) = BYTE1(v75);
  LODWORD(v19) = v128 ^ __ROR4__((*(_DWORD *)(v108 + 4 * (BYTE1(v75) ^ 4u)) - 1780118023) ^ 0x7DE0C031, 24) ^ (16 * (_DWORD)v19 * (_DWORD)v19);
  LODWORD(STACK[0x6628]) = BYTE2(v75);
  LODWORD(v21) = v19 ^ __ROR4__(*(_DWORD *)(v109 + 4 * (BYTE2(v75) ^ 0xADu)) ^ 0x8C695FDD, 16) ^ v23;
  LODWORD(STACK[0x6700]) = (_DWORD)v21;
  LODWORD(v19) = v21 ^ 0x2108D8FF;
  LODWORD(v23) = v21 ^ 0x2108D8FF ^ v127;
  LODWORD(STACK[0x6730]) = (_DWORD)v23;
  v129 = v23 ^ 0x7E351135;
  LODWORD(v21) = v23 ^ 0x7E351135 ^ v127 ^ v124;
  v130 = v127 ^ v124;
  LODWORD(STACK[0x6710]) = v127 ^ v124;
  LODWORD(STACK[0x6750]) = (_DWORD)v21;
  v131 = v21 ^ v75 ^ 0xB623969C;
  LODWORD(STACK[0x66F8]) = HIBYTE(v131);
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (HIBYTE(v131) ^ 0xD3));
  LODWORD(v25) = HIDWORD(v25);
  v132 = (v25 >> 14) ^ (16 * (v25 >> 14) * (v25 >> 14));
  LODWORD(STACK[0x67B0]) = BYTE2(v131);
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (BYTE2(v131) ^ 0xD3u));
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(v23) = (v21 ^ v75);
  LODWORD(STACK[0x66D0]) = (_DWORD)v23;
  v133 = v108;
  STACK[0x6780] = v108;
  LODWORD(v23) = (*(_DWORD *)(v108 + 4 * (v23 ^ 0x98)) - 1780118023) ^ __ROR4__(v132 ^ 0x4E3DC9CA, 8);
  LODWORD(STACK[0x66F0]) = BYTE1(v131);
  v134 = v23 ^ __ROR4__((v25 >> 14) ^ (16 * (v25 >> 14) * (v25 >> 14)) ^ 0x4E3DC9CA, 16) ^ __ROR4__(__ROR4__(*(_DWORD *)&v96[4 * (BYTE1(v131) ^ 0x53)], 14) ^ 0x2108D8FF, 24) ^ v19;
  LODWORD(v108) = v134 ^ v130 ^ 0x802B4E63;
  v135 = v108 ^ v131;
  v136 = v108 ^ v131 ^ 0xFBD5D104;
  HIDWORD(v25) = (*(_DWORD *)(v133 + 4 * (BYTE2(v136) ^ 4u)) - 1780118023) ^ 0x7DE0C031;
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(v91) = v134 ^ v129;
  LODWORD(v19) = (v25 >> 16) ^ __ROR4__(__ROR4__(*(_DWORD *)&v96[4 * (BYTE1(v136) ^ 0x53)], 14) ^ 0x2108D8FF, 24) ^ __ROR4__(*(_DWORD *)(v109 + 4 * (HIBYTE(v136) ^ 0xAD)) ^ 0x8C695FDD, 8) ^ __ROR4__(*(_DWORD *)&v96[4 * ((((v108 ^ v131) ^ 4) - ((2 * v136) & 0x13E) + 159) ^ 0xCC)], 14) ^ v134;
  LODWORD(STACK[0x66C0]) = (_DWORD)v19;
  LODWORD(STACK[0x69F0]) = v19 ^ 0xE7D5D104;
  LODWORD(v133) = v19 ^ 0xE7D5D104 ^ v134 ^ v129;
  LODWORD(v21) = v133 ^ 0xDADD09FB ^ v131;
  LODWORD(STACK[0x6920]) = (_DWORD)v21;
  LODWORD(STACK[0x6860]) = BYTE2(v21);
  STACK[0x6740] = v101;
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (BYTE2(v21) ^ 0xD3u));
  LODWORD(v25) = HIDWORD(v25);
  v137 = v133 ^ 0xFB ^ v131;
  LODWORD(STACK[0x6870]) = v137;
  LODWORD(v86) = (v25 >> 14) ^ (16 * (v25 >> 14) * (v25 >> 14));
  HIDWORD(v25) = *(_DWORD *)(v101 + 4 * (v137 ^ 0xD3u));
  LODWORD(v25) = HIDWORD(v25);
  LODWORD(STACK[0x6880]) = v21 >> 24;
  STACK[0x6770] = v109;
  v138 = BYTE1(v21);
  v139 = (v25 >> 14) ^ (16 * (v25 >> 14) * (v25 >> 14)) ^ __ROR4__(*(_DWORD *)(v109 + 4 * ((v21 >> 24) ^ 0xBA)) ^ 0x8C695FDD, 8) ^ __ROR4__(*(_DWORD *)(v109 + 4 * (BYTE1(v21) ^ 0xADu)) ^ 0x8C695FDD, 24);
  LOBYTE(v109) = v118;
  LODWORD(STACK[0x6670]) = v118;
  v140 = v118 ^ 0xE023969C;
  v141 = (unint64_t)*(&off_1015B46D0 + (v95 ^ 0x198E)) - 12;
  v142 = *(_DWORD *)(v141
                   + 4
                   * ((((v118 ^ 0xE023969C) >> 16) - (((v118 ^ 0xE023969C) >> 15) & 0xF2) + 121) ^ 0xA9));
  v143 = __PAIR64__(v142, __ROR4__(v86 ^ 0x4E3DC9CA, 16));
  LODWORD(STACK[0x6A40]) = v139 ^ v143;
  LODWORD(v143) = v142;
  LODWORD(v23) = v95;
  v144 = (char *)*(&off_1015B46D0 + v95 - 4238) - 4;
  v145 = (-437574216 * (v143 >> 2)) ^ (v143 >> 2) ^ __ROR4__(HIBYTE(v140) ^ LODWORD(STACK[0x1000]) ^ *(_DWORD *)&v144[4 * (HIBYTE(v140) ^ 0x86)], 24);
  v146 = (char *)*(&off_1015B46D0 + (v95 ^ 0x12D6)) - 4;
  v147 = *(_DWORD *)&v146[4 * (BYTE1(v116) ^ 0x44)] + 1264166829;
  LODWORD(v19) = v147 ^ 0xF581E7BD ^ ((4 * v147) | 0x8707668);
  HIDWORD(v143) = *(_DWORD *)(v141 + 4 * (v116 ^ 0xD2u));
  LODWORD(v143) = HIDWORD(v143);
  v148 = *(_DWORD *)&v146[4 * (BYTE2(v116) ^ 0x68)] + 1264166829;
  LODWORD(v21) = v148 ^ __ROR4__((_DWORD)v19, 8) ^ __ROR4__((v143 >> 2) ^ 0xAD6F7DE8 ^ (-437574216 * (v143 >> 2)), 16);
  v149 = __PAIR64__(v145, __ROR4__(HIBYTE(v116) ^ 0xBE42705E ^ *(_DWORD *)&v144[4 * (HIBYTE(v116) ^ 0x1B)], 24));
  LODWORD(STACK[0x6900]) = v21 ^ ((4 * v148) | 0x8707668) ^ v149;
  LODWORD(v21) = *(_DWORD *)&v146[4 * (v109 ^ 0x55)] + 1264166829;
  LODWORD(v149) = v145;
  LODWORD(STACK[0x6618]) = (v149 >> 11) ^ __ROR4__(v21 ^ 0x49407549 ^ ((4 * (_DWORD)v21) | 0x8707668), 27);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (v120 ^ 0x42u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = (v149 >> 2) ^ 0x3D4CE4CE ^ (-437574216 * (v149 >> 2));
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x68F0]) ^ 0x34u));
  LODWORD(v149) = HIDWORD(v149);
  HIDWORD(v149) = (v149 >> 2) ^ 0x3115911 ^ (-437574216 * (v149 >> 2));
  LODWORD(v149) = HIDWORD(v149);
  v150 = (unint64_t)v146;
  LODWORD(v19) = *(_DWORD *)&v146[4 * (LODWORD(STACK[0x6910]) ^ 0x43)] + 1264166829;
  LODWORD(v101) = *(_DWORD *)&v146[4 * (LODWORD(STACK[0x6930]) ^ 0x92)] + 1264166829;
  v151 = (v149 >> 24) ^ __ROR4__((_DWORD)v21, 8) ^ v101 ^ ((4 * v101) | 0x8707668) ^ __ROR4__(v19 ^ 0x7B44DCA3 ^ ((4 * (_DWORD)v19) | 0x8707668), 16);
  LODWORD(STACK[0x6708]) = v151;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(v136) ^ 0xC8u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v19) = *(_DWORD *)&v146[4 * (HIBYTE(v136) ^ 0xEE)] + 1264166829;
  LODWORD(v21) = *(_DWORD *)&v144[4 * (BYTE2(v136) ^ 0xB0)] ^ (BYTE2(v136) | 0xE6CAA00) ^ __ROR4__((v149 >> 2) ^ 0x36E43231 ^ (-437574216 * (v149 >> 2)), 8) ^ __ROR4__(v19 ^ 0xA3914666 ^ ((4 * (_DWORD)v19) | 0x8707668), 24);
  v152 = (char *)*(&off_1015B46D0 + (int)(v23 ^ 0x15A9)) - 4;
  v153 = *(_DWORD *)&v152[4 * (v135 ^ 0x57)];
  LODWORD(STACK[0x68E0]) = ((v134 ^ 0xDADD09FB) >> 16) ^ __ROR4__(*(_DWORD *)&v152[4 * (HIBYTE(v134) ^ 0x99)] ^ 0x3FAB6DA, 24) ^ *(_DWORD *)&v144[4* (((v134 ^ 0xDADD09FB) >> 16) ^ 0xB1)] ^ __ROR4__(v134 ^ 0x5A1C8F ^ *(_DWORD *)&v144[4 * (v134 ^ 0x89)], 16) ^ __ROR4__(((unsigned __int16)(v134 ^ 0x9FB) >> 8) ^ 0xE6D23B3D ^ *(_DWORD *)&v144[4 * (((unsigned __int16)(v134 ^ 0x9FB) >> 8) ^ 0x21)], 8);
  LODWORD(STACK[0x68F0]) = v21 ^ __ROR4__(v153 ^ 0x443AEC17, 16);
  LODWORD(v23) = v134 ^ v130 ^ 0x7BFE9F67;
  LODWORD(v21) = (v134 ^ v130) ^ 0xC8E9CEBA ^ *(_DWORD *)&v144[4
                                                                              * ((v134 ^ v130) ^ 0xC3)];
  LODWORD(v19) = *(_DWORD *)&v152[4 * (((v134 ^ v130) >> 24) ^ 0x81)] ^ 0x7BD1E264;
  LODWORD(STACK[0x6930]) = (_DWORD)v23;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(v108) ^ 0x20u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x68D0]) = BYTE2(v23) ^ __ROR4__((_DWORD)v19, 24) ^ *(_DWORD *)&v144[4 * (BYTE2(v23) ^ 0x9B)] ^ __ROR4__((_DWORD)v21, 16) ^ __ROR4__((v149 >> 2) ^ 0x803BC596 ^ (-437574216 * (v149 >> 2)), 8);
  LODWORD(v19) = ((v91 ^ 0xCDDD09FB) >> 24) ^ 0xB685EBEA ^ *(_DWORD *)&v144[4
                                                                                        * (((v91 ^ 0xCDDD09FB) >> 24) ^ 0x4B)];
  LODWORD(v21) = *(_DWORD *)&v144[4 * (((v91 ^ 0xCDDD09FB) >> 16) ^ 0xB)] ^ ((v91 ^ 0xCDDD09FB) >> 16);
  LODWORD(STACK[0x66B0]) = v134 ^ v129;
  LODWORD(v21) = v21 ^ __ROR4__((_DWORD)v19, 24) ^ __ROR4__(*(_DWORD *)&v152[4* ((v134 ^ v129) ^ 0x6C)] ^ 0x40A463C6, 16);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (((unsigned __int16)(v134 ^ v129) >> 8) ^ 0x6Fu))
               + 1264166829;
  LODWORD(STACK[0x68A0]) = v21 ^ __ROR4__(v19 ^ 0x23D497FA ^ ((4 * (_DWORD)v19) | 0x8707668), 8);
  LODWORD(v21) = v133 ^ 0xDADD09FB ^ v23;
  HIDWORD(v149) = *(_DWORD *)&v152[4 * (BYTE1(v21) ^ 0x6E)] ^ 0x2C77F013;
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v19) = (v149 >> 8) ^ __ROR4__(*(_DWORD *)&v152[4 * ((v21 >> 24) ^ 0xC3)] ^ 0xE1EC1E11, 24);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE2(v21) ^ 0x37u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6890]) = v19 ^ (v149 >> 2) ^ (-437574216 * (v149 >> 2)) ^ __ROR4__(*(_DWORD *)&v152[4 * (v133 ^ 0xFB ^ v23 ^ 0x78)] ^ 0x3EC8461E, 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE3(v133) ^ 0x7E));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = (v149 >> 2) ^ 0x1F2E059E ^ (-437574216 * (v149 >> 2));
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (v133 ^ 0x12u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v19) = (v149 >> 2) ^ 0x894AEDDE ^ (-437574216 * (v149 >> 2));
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE2(v133) ^ 0x68u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6880]) ^ 0x72u));
  LODWORD(STACK[0x6880]) = (v149 >> 2) ^ __ROR4__((_DWORD)v21, 24) ^ (-437574216 * (v149 >> 2)) ^ __ROR4__((_DWORD)v19, 16) ^ __ROR4__(BYTE1(v133) ^ 0xDB5BB38 ^ *(_DWORD *)&v144[4 * (BYTE1(v133) ^ 0xA7)], 8);
  LODWORD(v21) = ((_DWORD)v23 + 1264166829) ^ 0x96642D46 ^ ((4 * ((_DWORD)v23 + 1264166829)) | 0x8707668);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6860]) ^ 0x65u)) + 1264166829;
  LODWORD(STACK[0x6870]) = v23 ^ __ROR4__(*(_DWORD *)&v152[4 * (LODWORD(STACK[0x6870]) ^ 0xCA)] ^ 0xBDE2DA99, 16) ^ __ROR4__((_DWORD)v21, 24) ^ ((4 * (_DWORD)v23) | 0x8707668) ^ __ROR4__(v138 ^ LODWORD(STACK[0x1004]) ^ *(_DWORD *)&v144[4 * (v138 ^ 0x47)], 8);
  LODWORD(v21) = HIBYTE(LODWORD(STACK[0x69C0])) ^ 0xE123F909 ^ *(_DWORD *)&v144[4
                                                                              * (HIBYTE(LODWORD(STACK[0x69C0])) ^ 0xDF)];
  LODWORD(v75) = STACK[0x6A10];
  LODWORD(STACK[0x6790]) = BYTE1(LODWORD(STACK[0x6A10]));
  HIDWORD(v149) = *(_DWORD *)&v152[4 * (BYTE1(v75) ^ 0xF4)] ^ 0x9100D14B;
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6760]) = v75;
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (v75 ^ 0xE2u)) + 1264166829;
  LODWORD(v75) = BYTE2(v75);
  LODWORD(STACK[0x6720]) = v75;
  LODWORD(STACK[0x6860]) = (v149 >> 8) ^ __ROR4__((_DWORD)v21, 24) ^ *(_DWORD *)&v152[4 * (v75 ^ 0x91)] ^ __ROR4__(v19 ^ 0x42E8A3B6 ^ ((4 * (_DWORD)v19) | 0x8707668), 16);
  LODWORD(v21) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6A30]) ^ 0xA3u)) + 1264166829;
  HIDWORD(v149) = v21 ^ 0x316B21F7 ^ ((4 * (_DWORD)v21) | 0x8707668);
  LODWORD(v149) = HIDWORD(v149);
  v154 = STACK[0x69B0];
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6A60]) ^ 0x2Bu)) + 1264166829;
  LODWORD(v108) = STACK[0x6980];
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6980]) ^ 0x4Au)) + 1264166829;
  LODWORD(v21) = (v149 >> 16) ^ __ROR4__(*(_DWORD *)&v152[4 * (LODWORD(STACK[0x69B0]) ^ 0x13)] ^ 0x50C22B7C, 24) ^ v23 ^ ((4 * (_DWORD)v23) | 0x8707668);
  v155 = STACK[0x6A20];
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (HIBYTE(LODWORD(STACK[0x6A20])) ^ 0xD8u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v23) = v149 >> 2;
  LODWORD(STACK[0x6850]) = v21 ^ __ROR4__(v19 ^ 0x99527468 ^ ((4 * (_DWORD)v19) | 0x8707668), 8);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (v155 ^ 0x68u));
  LODWORD(v149) = HIDWORD(v149);
  HIDWORD(v149) = (v149 >> 2) ^ 0x60F493EA ^ (-437574216 * (v149 >> 2));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = (v149 >> 16) ^ __ROR4__(v23 ^ 0x9575B151 ^ (-437574216 * (_DWORD)v23), 24);
  LODWORD(v91) = STACK[0x6608];
  HIDWORD(v149) = *(_DWORD *)&v152[4 * (HIBYTE(LODWORD(STACK[0x6608])) ^ 0xF8)] ^ 0xAD849223;
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v19) = (v149 >> 24) ^ __ROR4__(*(_DWORD *)&v152[4 * (LODWORD(STACK[0x6608]) ^ 0xD0)] ^ 0x1FC5EA55, 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(v155) ^ 0x40u));
  LODWORD(v149) = HIDWORD(v149);
  v156 = v149 >> 2;
  LODWORD(STACK[0x6610]) = v19 ^ __ROR4__(BYTE1(LODWORD(STACK[0x6608])) ^ 0x74285C7C ^ *(_DWORD *)&v144[4 * (BYTE1(LODWORD(STACK[0x6608])) ^ 0xF1)], 8);
  LODWORD(v133) = STACK[0x6830];
  HIDWORD(v149) = LODWORD(STACK[0x6830]) ^ 0xB80501D9 ^ *(_DWORD *)&v144[4
                                                                                        * (LODWORD(STACK[0x6830]) ^ 0xFA)];
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6840]) = v21 ^ __ROR4__(v156 ^ 0x6AEAF6B9 ^ (-437574216 * v156), 8);
  LODWORD(v109) = STACK[0x6810];
  LODWORD(v23) = ((unsigned __int16)(v109 ^ 0xF9E2) >> 8) ^ 0x283E251 ^ *(_DWORD *)&v144[4 * (((unsigned __int16)(v109 ^ 0xF9E2) >> 8) ^ 0xE0)];
  LODWORD(STACK[0x6830]) = (v149 >> 16) ^ __ROR4__(*(_DWORD *)&v152[4 * (BYTE1(v133) ^ 0x3F)] ^ 0xC6A6C33C, 8) ^ *(_DWORD *)&v152[4 * (BYTE2(v133) ^ 0x7C)] ^ __ROR4__(*(_DWORD *)&v152[4 * (BYTE3(v133) ^ 0x83)] ^ 0x8B78FCA2, 24);
  v157 = *(_DWORD *)(v150 + 4 * BYTE2(LODWORD(STACK[0x6820]))) + 1264166829;
  LODWORD(v21) = ((4 * v157) | 0x8707668) ^ v157 ^ __ROR4__(BYTE1(LODWORD(STACK[0x6820])) ^ 0x90798528 ^ *(_DWORD *)&v144[4 * (BYTE1(LODWORD(STACK[0x6820])) ^ 8)], 8);
  v158 = *(_DWORD *)(v150 + 4 * (HIBYTE(LODWORD(STACK[0x6820])) ^ 5u)) + 1264166829;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6820]) ^ 0x4Cu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6820]) = v21 ^ __ROR4__(v158 ^ 0x51E1A617 ^ ((4 * v158) | 0x8707668), 24) ^ __ROR4__((v149 >> 2) ^ 0x1E98B632 ^ (-437574216 * (v149 >> 2)), 16);
  LODWORD(v21) = BYTE3(v109) ^ 0xFB5BD446 ^ *(_DWORD *)&v144[4 * (BYTE3(v109) ^ 0x79)];
  v159 = v109 ^ 0x4BC3520A ^ *(_DWORD *)&v144[4 * (v109 ^ 0xF4)];
  LODWORD(v19) = ((v109 ^ 0x95F9E2) >> 16);
  LODWORD(STACK[0x6810]) = (_DWORD)v19;
  LODWORD(STACK[0x6800]) = v19 ^ __ROR4__((_DWORD)v21, 24) ^ (((_DWORD)v23 << (v23 & 0x18) << (v23 & 0x18 ^ 0x18))
                                                                          + (v23 >> 8)) ^ __ROR4__(v159, 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x67C0]) ^ 0xEEu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = *(_DWORD *)&v152[4 * (LODWORD(STACK[0x6698]) ^ 0xF)] ^ __ROR4__((v149 >> 2) ^ 0xE268BCC1 ^ (-437574216 * (v149 >> 2)), 24);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6690]) ^ 0xAFu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = v21 ^ __ROR4__((v149 >> 2) ^ 0xC8CDC675 ^ (-437574216 * (v149 >> 2)), 8);
  LODWORD(v133) = STACK[0x67F0];
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE2(LODWORD(STACK[0x67F0])) ^ 0x1Du));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v19) = (v149 >> 2) ^ __ROR4__(((unsigned __int16)(v133 ^ 0xB666) >> 8) ^ 0x896EE530 ^ *(_DWORD *)&v144[4 * (((unsigned __int16)(v133 ^ 0xB666) >> 8) ^ 0xE2)], 8) ^ (-437574216 * (v149 >> 2)) ^ __ROR4__(((v133 ^ 0xCB11B666) >> 24) ^ 0xA43A5DF1 ^ *(_DWORD *)&v144[4 * (((v133 ^ 0xCB11B666) >> 24) ^ 0x5D)], 24);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x67F0]) ^ 0xBu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x67F0]) = v19 ^ __ROR4__((v149 >> 2) ^ 0x992CA564 ^ (-437574216 * (v149 >> 2)), 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (HIBYTE(LODWORD(STACK[0x67D0])) ^ 0x46u));
  LODWORD(v149) = HIDWORD(v149);
  v160 = *(_DWORD *)(v150 + 4 * (BYTE2(LODWORD(STACK[0x67D0])) ^ 0xF3u)) + 1264166829;
  LODWORD(v19) = v160 ^ __ROR4__((v149 >> 2) ^ 0xE3DE0F6D ^ (-437574216 * (v149 >> 2)), 24) ^ ((4 * v160) | 0x8707668) ^ __ROR4__(*(_DWORD *)&v152[4 * (LODWORD(STACK[0x67D0]) ^ 0x20)] ^ 0xF353A81C, 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(LODWORD(STACK[0x67D0])) ^ 0xE8u));
  LODWORD(v149) = HIDWORD(v149);
  v161 = *(_DWORD *)&v152[4 * (LODWORD(STACK[0x67E0]) ^ 0x48)];
  LODWORD(STACK[0x67D0]) = v19 ^ __ROR4__((v149 >> 2) ^ 0xDBC4C3D4 ^ (-437574216 * (v149 >> 2)), 8);
  LODWORD(STACK[0x67C0]) = v21 ^ __ROR4__(v161 ^ 0x28E97FC2, 16);
  LODWORD(v101) = STACK[0x67A0];
  HIDWORD(v149) = LODWORD(STACK[0x67A0]) ^ 0x3131F8A9 ^ *(_DWORD *)&v144[4
                                                                                        * (LODWORD(STACK[0x67A0]) ^ 0x5E)];
  LODWORD(v149) = HIDWORD(v149);
  v162 = (v149 >> 16) ^ __ROR4__(((v101 ^ 0xF72B9D63) >> 24) ^ 0xC02E5589 ^ *(_DWORD *)&v144[4 * (((v101 ^ 0xF72B9D63) >> 24) ^ 0x14)], 24);
  LODWORD(v75) = ((LODWORD(STACK[0x6710]) ^ 0xC123969C) >> 16);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE1(LODWORD(STACK[0x6710])) ^ 0xC8u)) + 1264166829;
  LODWORD(v19) = v75 ^ 0xE6CAA93 ^ __ROR4__(*(_DWORD *)&v152[4 * (LODWORD(STACK[0x6710]) ^ 0x5F)] ^ 0xCD0E15C3, 16) ^ __ROR4__(((LODWORD(STACK[0x6710]) ^ 0xC123969C) >> 24) ^ LODWORD(STACK[0x1008]) ^ *(_DWORD *)&v144[4 * (((LODWORD(STACK[0x6710]) ^ 0xC123969C) >> 24) ^ 0x35)], 24) ^ *(_DWORD *)&v144[4 * (v75 ^ 0x23)];
  LODWORD(v75) = STACK[0x6A00];
  v163 = *(_DWORD *)(v150 + 4 * (HIBYTE(LODWORD(STACK[0x6A00])) ^ 0xFBu));
  LODWORD(STACK[0x67E0]) = v19 ^ __ROR4__(v23 ^ 0xAB56DD82 ^ ((4 * (_DWORD)v23) | 0x8707668), 8);
  HIDWORD(v149) = *(_DWORD *)&v152[4 * (v75 ^ 0x93)] ^ 0x8721E897;
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v23) = v149 >> 16;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(v75) ^ 0x86u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6710]) = v23 ^ __ROR4__((v163 + 1264166829) ^ 0xCA6AE9CE ^ ((4 * (v163 + 1264166829)) | 0x8707668), 24) ^ __ROR4__((v149 >> 2) ^ 0xE5997E0B ^ (-437574216 * (v149 >> 2)), 8);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE2(v101) ^ 0x57u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE1(v101) ^ 0xBDu)) + 1264166829;
  LODWORD(STACK[0x67A0]) = v162 ^ (v149 >> 2) ^ (-437574216 * (v149 >> 2)) ^ __ROR4__(v23 ^ 0x4A2F3852 ^ ((4 * (_DWORD)v23) | 0x8707668), 8);
  v164 = STACK[0x6750];
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6750]) ^ 0x13u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6750]) = *(_DWORD *)&v144[4 * (((v164 ^ 0xB669969C) >> 16) ^ 0x35)] ^ ((v164 ^ 0xB669969C) >> 16) ^ __ROR4__(((v164 ^ 0xB669969C) >> 24) ^ 0xDC1109F6 ^ *(_DWORD *)&v144[4 * (((v164 ^ 0xB669969C) >> 24) ^ 0xE4)], 24) ^ __ROR4__(((unsigned __int16)(v164 ^ 0x969C) >> 8) ^ 0x18FBCF1E ^ *(_DWORD *)&v144[4 * (((unsigned __int16)(v164 ^ 0x969C) >> 8) ^ 0x46)], 8) ^ __ROR4__((v149 >> 2) ^ 0x493EA445 ^ (-437574216 * (v149 >> 2)), 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(LODWORD(STACK[0x6730])) ^ 0xBAu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6730]) ^ 0xBDu)) + 1264166829;
  LODWORD(v23) = *(_DWORD *)&v152[4 * LODWORD(STACK[0x66D0])];
  v165 = (unint64_t)v152;
  LODWORD(STACK[0x6730]) = *(_DWORD *)&v144[4 * (BYTE2(LODWORD(STACK[0x6730])) ^ 0xEB)] ^ BYTE2(LODWORD(STACK[0x6730])) ^ __ROR4__((v149 >> 2) ^ 0x165F2DD6 ^ (-437574216 * (v149 >> 2)), 8) ^ __ROR4__(v19 ^ 0x63E50FFD ^ ((4 * (_DWORD)v19) | 0x8707668), 16) ^ __ROR4__(*(_DWORD *)&v152[4 * (HIBYTE(LODWORD(STACK[0x6730])) ^ 0x2E)] ^ 0xDD685D79, 24);
  LODWORD(v133) = STACK[0x69E0];
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (HIBYTE(LODWORD(STACK[0x69E0])) ^ 0x46u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v75) = LODWORD(STACK[0x67B0]) ^ LODWORD(STACK[0x100C]) ^ __ROR4__(v23 ^ 0xBBA5ABFF, 16) ^ __ROR4__(LODWORD(STACK[0x66F8]) ^ 0xB17429DE ^ *(_DWORD *)&v144[4 * (LODWORD(STACK[0x66F8]) ^ 0xB5)], 24) ^ *(_DWORD *)&v144[4 * (LODWORD(STACK[0x67B0]) ^ 0x25)] ^ __ROR4__(LODWORD(STACK[0x66F0]) ^ 0x491AACCD ^ *(_DWORD *)&v144[4 * (LODWORD(STACK[0x66F0]) ^ 0x84)], 8);
  LODWORD(STACK[0x67B0]) = v75;
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (BYTE2(v133) ^ 0xC5u)) + 1264166829;
  LODWORD(v21) = v19 ^ ((4 * (_DWORD)v19) | 0x8707668) ^ __ROR4__((v149 >> 2) ^ 0x7E1231D2 ^ (-437574216 * (v149 >> 2)), 24) ^ __ROR4__(*(_DWORD *)&v152[4* (BYTE1(v133) ^ 0x3C)] ^ 0x2198578A, 8);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (v133 ^ 0xB1u)) + 1264166829;
  LODWORD(v21) = v21 ^ __ROR4__(v19 ^ 0xDEF629F ^ ((4 * (_DWORD)v19) | 0x8707668), 16) ^ 0xBE72F0D7;
  LODWORD(STACK[0x66F8]) = (_DWORD)v21;
  LODWORD(v21) = (_DWORD)v21 - v75 - 1291020;
  LODWORD(v19) = (v21 ^ 0xEB0A54EA) & (2 * (v21 & 0xF3135880)) ^ v21 & 0xF3135880;
  LODWORD(v23) = ((2 * (v21 ^ 0x4D2CD4EA)) ^ 0x7C7F18D4) & (v21 ^ 0x4D2CD4EA) ^ (2 * (v21 ^ 0x4D2CD4EA)) & 0xBE3F8C6A;
  LODWORD(v19) = (v23 ^ 0x1C1F0000) & (4 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((4 * (v23 ^ 0x8200842A)) ^ 0xF8FE31A8) & (v23 ^ 0x8200842A) ^ (4 * (v23 ^ 0x8200842A)) & 0xBE3F8C68;
  LODWORD(v19) = (v23 ^ 0xB83E0020) & (16 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((16 * (v23 ^ 0x6018C42)) ^ 0xE3F8C6A0) & (v23 ^ 0x6018C42) ^ (16 * (v23 ^ 0x6018C42)) & 0xBE3F8C60;
  LODWORD(v19) = v19 ^ 0xBE3F8C6A ^ (v23 ^ 0xA2388400) & ((_DWORD)v19 << 8);
  LODWORD(STACK[0x66D0]) = v21 ^ (2
                                              * (((_DWORD)v19 << 16) & 0x3E3F0000 ^ v19 ^ (((_DWORD)v19 << 16) ^ 0xC6A0000) & (((v23 ^ 0x1C07084A) << 8) & 0x3E3F0000 ^ 0x330000 ^ (((v23 ^ 0x1C07084A) << 8) ^ 0x3F8C0000) & (v23 ^ 0x1C07084A))));
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(LODWORD(STACK[0x6700])) ^ 0x71u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (HIBYTE(LODWORD(STACK[0x6700])) ^ 0xCEu)) + 1264166829;
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE2(LODWORD(STACK[0x6700])) ^ 0x92u)) + 1264166829;
  LODWORD(v21) = v23 ^ __ROR4__((v149 >> 2) ^ 0x3752819D ^ (-437574216 * (v149 >> 2)), 8) ^ __ROR4__(v19 ^ 0x54C99A6A ^ ((4 * (_DWORD)v19) | 0x8707668), 24);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6700]) ^ 0xAFu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x66F0]) = v21 ^ ((4 * (_DWORD)v23) | 0x8707668) ^ __ROR4__((v149 >> 2) ^ 0xEE31A8F4 ^ (-437574216 * (v149 >> 2)), 16);
  LODWORD(v75) = STACK[0x69F0];
  LODWORD(v21) = BYTE2(v75) ^ *(_DWORD *)&v144[4 * (BYTE2(v75) ^ 8)] ^ __ROR4__(BYTE1(v75) ^ 0x5C54D8E2 ^ *(_DWORD *)&v144[4 * (BYTE1(v75) ^ 0x6C)], 8) ^ __ROR4__(BYTE3(v75) ^ 0x89D8720 ^ *(_DWORD *)&v144[4 * (BYTE3(v75) ^ 0xC2)], 24);
  LODWORD(v149) = __ROR4__(LODWORD(STACK[0x69F0]) ^ 0xC95F7DD9 ^ *(_DWORD *)&v144[4* (LODWORD(STACK[0x66C0]) ^ 8)], 16);
  LODWORD(v23) = LODWORD(STACK[0x66B0]) ^ 0x5B1A7F01 ^ LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x69E0]) = (_DWORD)v23;
  LODWORD(v152) = v21 ^ v149 ^ 0x87B37FD9;
  LODWORD(STACK[0x6700]) = (_DWORD)v152;
  LODWORD(v21) = (_DWORD)v23 - (_DWORD)v152 - 551333060;
  LODWORD(v19) = (v21 ^ 0xDA5E44EF) & (2 * (v21 & 0xDC5F66EC)) ^ v21 & 0xDC5F66EC;
  LODWORD(v23) = ((2 * (v21 ^ 0x5248096F)) ^ 0x1C2EDF06) & (v21 ^ 0x5248096F) ^ (2 * (v21 ^ 0x5248096F)) & 0x8E176F82;
  LODWORD(v19) = (v23 ^ 0x60F01) & (4 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((4 * (v23 ^ 0x82112081)) ^ 0x385DBE0C) & (v23 ^ 0x82112081) ^ (4 * (v23 ^ 0x82112081)) & 0x8E176F80;
  LODWORD(v19) = (v23 ^ 0x8152E00) & (16 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((16 * (v23 ^ 0x86024183)) ^ 0xE176F830) & (v23 ^ 0x86024183) ^ (16 * (v23 ^ 0x86024183)) & 0x8E176F80;
  LODWORD(v19) = v19 ^ 0x8E176F83 ^ (v23 ^ 0x80166800) & ((_DWORD)v19 << 8);
  LODWORD(STACK[0x6698]) = v21 ^ (2
                                              * (((_DWORD)v19 << 16) & 0xE170000 ^ v19 ^ (((_DWORD)v19 << 16) ^ 0x6F830000) & (((v23 ^ 0xE010783) << 8) & 0x8E170000 ^ 0x8100000 ^ (((v23 ^ 0xE010783) << 8) ^ 0x176F0000) & (v23 ^ 0xE010783))));
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(LODWORD(STACK[0x66E8])) ^ 3u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = __ROR4__((v149 >> 2) ^ 0xC494D240 ^ (-437574216 * (v149 >> 2)), 8) ^ 0x4142845C ^ __ROR4__(*(_DWORD *)(v165 + 4 * (LODWORD(STACK[0x66E8]) ^ 0x46u)) ^ 0xDA999FB3, 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (HIBYTE(LODWORD(STACK[0x66E8])) ^ 0xDu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE2(LODWORD(STACK[0x66E8])) ^ 0x5Eu)) + 1264166829;
  v166 = STACK[0x6990];
  LODWORD(v19) = (LODWORD(STACK[0x6990]) ^ 0x342576EC ^ v151) + 590287821;
  v167 = (2 * (v19 & 0x83349890)) & (v19 ^ 0x77239681) ^ v19 & 0x83349890 ^ ((2 * (v19 & 0x83349890)) & 0x4010000 | 0x80000400);
  LODWORD(v75) = (2 * (v19 ^ 0x77239681)) & 0xF4170E10 ^ 0x14110211 ^ ((2
                                                                                    * (v19 ^ 0x77239681)) ^ 0xE82E1C22) & (v19 ^ 0x77239681);
  v168 = (4 * v167) & 0xF4170E10 ^ v167 ^ ((4 * v167) ^ 0x1000) & v75;
  LODWORD(v75) = (4 * v75) & 0xF4170E10 ^ 0x24030611 ^ ((4 * v75) ^ 0xD05C3844) & v75;
  v169 = v168 ^ (16 * v168) & 0xF4170E10 ^ ((16 * v168) ^ 0x4000) & v75;
  LODWORD(v75) = (16 * v75) & 0xF4170E10 ^ 0xB4070E01 ^ ((16 * v75) ^ 0x4170E110) & v75;
  v170 = ((v169 ^ 0x74170A11) << 8) & 0xF4170E00 ^ v169 ^ 0x74170A11 ^ (((v169 ^ 0x74170A11) << 8) ^ 0x170E1100) & v75;
  LODWORD(STACK[0x6620]) = v19 ^ (2
                                              * ((v170 << 16) & 0x74170000 ^ v170 ^ ((v170 << 16) ^ 0xE110000) & (((_DWORD)v75 << 8) & 0xF4170000 ^ 0x60110000 ^ (((_DWORD)v75 << 8) ^ 0x170E0000) & v75)));
  LODWORD(v19) = v21 ^ v23 ^ __ROR4__((v149 >> 2) ^ 0xB5CEAEB6 ^ (-437574216 * (v149 >> 2)), 24) ^ ((4 * (_DWORD)v23) | 0x8707668);
  LODWORD(STACK[0x66E8]) = (_DWORD)v19;
  LODWORD(v21) = -472690389 - (_DWORD)v19 - (_DWORD)v152;
  LODWORD(v19) = (v21 ^ 0x7245F3DD) & (2 * (v21 & 0x8285F31D)) ^ v21 & 0x8285F31D;
  LODWORD(v23) = ((2 * (v21 ^ 0x7744F5FD)) ^ 0xEB820DC0) & (v21 ^ 0x7744F5FD) ^ (2 * (v21 ^ 0x7744F5FD)) & 0xF5C106E0;
  LODWORD(v19) = (v23 ^ 0x4006C0) & (4 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((4 * (v23 ^ 0x14410220)) ^ 0xD7041B80) & (v23 ^ 0x14410220) ^ (4 * (v23 ^ 0x14410220)) & 0xF5C106E0;
  LODWORD(v19) = v19 ^ 0xF5C106E0 ^ (v23 ^ 0xD5000280) & (16 * (_DWORD)v19);
  LODWORD(v23) = (16 * (v23 ^ 0x20C10460)) & 0xF5C106E0 ^ 0xA1C100E0 ^ ((16
                                                                                     * (v23 ^ 0x20C10460)) ^ 0x5C106E00) & (v23 ^ 0x20C10460);
  LODWORD(v19) = ((_DWORD)v19 << 8) & 0xF5C10600 ^ v19 ^ (((_DWORD)v19 << 8) ^ 0xC106E000) & v23;
  LODWORD(STACK[0x6690]) = v21 ^ (2
                                              * (((_DWORD)v19 << 16) & 0x75C10000 ^ v19 ^ (((_DWORD)v19 << 16) ^ 0x6E00000) & (((_DWORD)v23 << 8) & 0xF5C10000 ^ 0x34C10000 ^ (((_DWORD)v23 << 8) ^ 0xC1060000) & v23)));
  LODWORD(v75) = STACK[0x69D0];
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (HIBYTE(LODWORD(STACK[0x69D0])) ^ 0x15u));
  LODWORD(v149) = HIDWORD(v149);
  HIDWORD(v149) = (v149 >> 2) ^ 0x7A8CBE03 ^ (-437574216 * (v149 >> 2));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6640]) = BYTE1(LODWORD(STACK[0x69D0]));
  LODWORD(v21) = (v149 >> 24) ^ __ROR4__(*(_DWORD *)(v165 + 4 * (BYTE1(v75) ^ 0x17u)) ^ 0x388F3778, 8);
  LODWORD(STACK[0x6638]) = v75;
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (v75 ^ 0x4Au)) + 1264166829;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE2(v75) ^ 0xDEu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x66B0]) = v21 ^ (v149 >> 2) ^ (-437574216 * (v149 >> 2)) ^ __ROR4__(v19 ^ 0x1A78E8EF ^ ((4 * (_DWORD)v19) | 0x8707668), 16);
  LODWORD(v23) = LODWORD(STACK[0x6610]) ^ *(_DWORD *)(v165 + 4 * (BYTE2(v91) ^ 0x49u));
  LODWORD(STACK[0x66C0]) = (_DWORD)v23;
  LODWORD(v21) = (LODWORD(STACK[0x6A50]) ^ 0xCA761782 ^ v23) + 301491876;
  LODWORD(v19) = (v21 ^ 0xE2239F64) & (2 * (v21 & 0xC483D868)) ^ v21 & 0xC483D868;
  LODWORD(v23) = ((2 * (v21 ^ 0x62220F64)) ^ 0x4D43AE18) & (v21 ^ 0x62220F64) ^ (2 * (v21 ^ 0x62220F64)) & 0xA6A1D70C;
  LODWORD(v19) = (v23 ^ 0x4018200) & (4 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((4 * (v23 ^ 0xA2A05104)) ^ 0x9A875C30) & (v23 ^ 0xA2A05104) ^ (4 * (v23 ^ 0xA2A05104)) & 0xA6A1D70C;
  LODWORD(v19) = (v23 ^ 0x8281540C) & (16 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((16 * (v23 ^ 0x2420830C)) ^ 0x6A1D70C0) & (v23 ^ 0x2420830C) ^ (16 * (v23 ^ 0x2420830C)) & 0xA6A1D700;
  LODWORD(v19) = v19 ^ 0xA6A1D70C ^ (v23 ^ 0x22015000) & ((_DWORD)v19 << 8);
  LODWORD(STACK[0x6598]) = v21 ^ (2
                                              * (((_DWORD)v19 << 16) & 0x26A10000 ^ v19 ^ (((_DWORD)v19 << 16) ^ 0x570C0000) & (((v23 ^ 0x84A0870C) << 8) & 0xA6A10000 ^ 0x6200000 ^ (((v23 ^ 0x84A0870C) << 8) ^ 0x21D70000) & (v23 ^ 0x84A0870C))));
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x66B8]) ^ 0x54u)) + 1264166829;
  LODWORD(STACK[0x66B8]) = LODWORD(STACK[0x6628]) ^ __ROR4__(LODWORD(STACK[0x66A0]) ^ 0x74285C32 ^ *(_DWORD *)&v144[4 * (LODWORD(STACK[0x66A0]) ^ 0xBF)], 24) ^ *(_DWORD *)&v144[4 * (LODWORD(STACK[0x6628]) ^ 0xDF)] ^ __ROR4__(v19 ^ 0x771DC896 ^ ((4 * (_DWORD)v19) | 0x8707668), 16) ^ __ROR4__(*(_DWORD *)(v165 + 4 * (LODWORD(STACK[0x6630]) ^ 0xB2u)) ^ 0x2198578A, 8);
  v171 = STACK[0x66D8];
  LODWORD(STACK[0x6630]) = BYTE1(LODWORD(STACK[0x66D8]));
  LODWORD(v21) = *(_DWORD *)(v150 + 4 * (BYTE1(v171) ^ 0x3Eu)) + 1264166829;
  LODWORD(STACK[0x6628]) = BYTE2(v171);
  LODWORD(v21) = *(_DWORD *)(v165 + 4 * (BYTE2(v171) ^ 0xEAu)) ^ __ROR4__(v21 ^ 0x63E50FFD ^ ((4 * (_DWORD)v21) | 0x8707668), 8);
  LODWORD(STACK[0x6610]) = v171;
  LODWORD(v21) = v21 ^ __ROR4__(*(_DWORD *)(v165 + 4 * (v171 ^ 0xDu)) ^ 0xCCB8A66F, 16);
  LODWORD(STACK[0x6608]) = HIBYTE(v171);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (HIBYTE(v171) ^ 0x1D)) + 1264166829;
  LODWORD(STACK[0x66A0]) = v21 ^ __ROR4__(v19 ^ 0x274A182B ^ ((4 * (_DWORD)v19) | 0x8707668), 24);
  LODWORD(v23) = STACK[0x6680];
  STACK[0x6950] = (unint64_t)v144;
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6688]) ^ 0x1Fu)) + 1264166829;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x66A8]) ^ 0xCCu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = LODWORD(STACK[0x6678]) ^ *(_DWORD *)&v144[4 * (LODWORD(STACK[0x6678]) ^ 0x73)] ^ __ROR4__(v23 ^ 0xF39C4FF0 ^ *(_DWORD *)&v144[4 * (v23 ^ 0x2B)], 16) ^ __ROR4__(v19 ^ 0x81F3A736 ^ ((4 * (_DWORD)v19) | 0x8707668), 8) ^ __ROR4__((v149 >> 2) ^ 0xE876D992 ^ (-437574216 * (v149 >> 2)), 24);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6648]) ^ 0xD3u)) + 1264166829;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6650]) ^ 0xFFu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6668]) ^ 7u)) + 1264166829;
  LODWORD(v19) = __ROR4__(v19 ^ 0xCBDC5A62 ^ ((4 * (_DWORD)v19) | 0x8707668), 24) ^ 0xF9C739 ^ __ROR4__((v149 >> 2) ^ 0x9BF55BD3 ^ (-437574216 * (v149 >> 2)), 8) ^ *(_DWORD *)(v165 + 4 * (LODWORD(STACK[0x6658]) ^ 0x96u));
  v172 = *(_DWORD *)(v165 + 4 * (BYTE1(LODWORD(STACK[0x6670])) ^ 0x76u));
  STACK[0x6910] = v165;
  LODWORD(STACK[0x66A8]) = v19 ^ __ROR4__(v23 ^ 0x9195EF8C ^ ((4 * (_DWORD)v23) | 0x8707668), 16);
  HIDWORD(v149) = v172 ^ 0xF94DCD4F;
  LODWORD(v149) = v172 ^ 0xF94DCD4F;
  LODWORD(STACK[0x6680]) = (v149 >> 8) ^ __ROR4__(LODWORD(STACK[0x6618]) ^ 0xA655DED2, 21);
  LODWORD(STACK[0x6990]) = v166 ^ 0x71F97D61;
  LODWORD(v21) = v21 ^ 0xA762CA58;
  LODWORD(STACK[0x6688]) = (_DWORD)v21;
  LODWORD(v21) = (_DWORD)v21 - (v166 ^ 0x71F97D61) - 969201179;
  LODWORD(v19) = (v21 ^ 0xBADCAB96) & (2 * (v21 & 0xBC980B97)) ^ v21 & 0xBC980B97;
  LODWORD(v23) = ((2 * (v21 ^ 0xCBDCA8B2)) ^ 0xEE89464A) & (v21 ^ 0xCBDCA8B2) ^ (2 * (v21 ^ 0xCBDCA8B2)) & 0x7744A324;
  LODWORD(v19) = (v23 ^ 0x66000200) & (4 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((4 * (v23 ^ 0x1144A125)) ^ 0xDD128C94) & (v23 ^ 0x1144A125) ^ (4 * (v23 ^ 0x1144A125)) & 0x7744A324;
  LODWORD(v19) = (v23 ^ 0x55008000) & (16 * (_DWORD)v19) ^ v19;
  LODWORD(v23) = ((16 * (v23 ^ 0x22442321)) ^ 0x744A3250) & (v23 ^ 0x22442321) ^ (16 * (v23 ^ 0x22442321)) & 0x7744A320;
  v173 = STACK[0x66E0];
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x66E0]) ^ 0x45u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x64B0]) = v21 ^ (2
                                              * (((v19 ^ 0x7744A325 ^ (v23 ^ LODWORD(STACK[0x1014])) & ((_DWORD)v19 << 8)) << 16) & 0x77440000 ^ v19 ^ 0x7744A325 ^ (v23 ^ LODWORD(STACK[0x1014])) & ((_DWORD)v19 << 8) ^ (((v19 ^ 0x7744A325 ^ (v23 ^ LODWORD(STACK[0x1014])) & ((_DWORD)v19 << 8)) << 16) ^ 0x23250000) & (((v23 ^ 0x3048125) << 8) & 0x77440000 ^ 0x33440000 ^ (((v23 ^ 0x3048125) << 8) ^ 0x44A30000) & (v23 ^ 0x3048125))));
  HIDWORD(v149) = (v149 >> 2) ^ 0x76D5AA36 ^ (-437574216 * (v149 >> 2));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = (v149 >> 16) ^ __ROR4__(*(_DWORD *)(v165 + 4 * (HIBYTE(v173) ^ 0x55)) ^ 0x4CFD77F3, 24);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(v173) ^ 0xCDu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v23) = (v149 >> 2) ^ 0xD91D3D63 ^ (-437574216 * (v149 >> 2));
  LODWORD(v108) = LODWORD(STACK[0x6940]) ^ __ROR4__(__ROR4__(*(_DWORD *)&v96[4 * (v108 ^ 0x53)], 14) ^ 0x2108D8FF, 16) ^ v171 ^ __ROR4__(__ROR4__(*(_DWORD *)&v96[4 * (v154 ^ 0x53)], 14) ^ 0x2108D8FF, 8) ^ LODWORD(STACK[0x6960]);
  v174 = v108 ^ LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x65B8]) = v174;
  LODWORD(v19) = v174 ^ 0xF8648FB5;
  LODWORD(v75) = v174 ^ 0xF8648FB5 ^ LODWORD(STACK[0x6970]);
  LODWORD(v133) = v75 ^ 0x47E0C031;
  v175 = ((v75 ^ 0x47E0C031) >> 16);
  LODWORD(STACK[0x6590]) = v175;
  v176 = STACK[0x6780];
  HIDWORD(v149) = (*(_DWORD *)(STACK[0x6780] + 4 * (v175 ^ 4u)) - 1780118023) ^ 0x7DE0C031;
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v152) = *(_DWORD *)(v150 + 4 * (BYTE2(v173) ^ 0x88u)) + 1264166829;
  v177 = (v75 ^ 0x47E0C031) >> 24;
  LODWORD(STACK[0x65A0]) = v177;
  v178 = *(_DWORD *)(v176 + 4 * (v177 ^ 4));
  LODWORD(STACK[0x6678]) = v21 ^ v152 ^ __ROR4__((_DWORD)v23, 8);
  LODWORD(v21) = (v149 >> 16) ^ __ROR4__((v178 - 1780118023) ^ 0x7DE0C031, 8);
  LODWORD(v23) = ((unsigned __int16)(v75 ^ 0xC031) >> 8);
  LODWORD(STACK[0x6588]) = (_DWORD)v23;
  v179 = STACK[0x6740];
  HIDWORD(v149) = *(_DWORD *)(STACK[0x6740] + 4 * (v23 ^ 0xD3));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v23) = (v149 >> 14) ^ (16 * (v149 >> 14) * (v149 >> 14));
  LODWORD(STACK[0x6580]) = v75;
  LODWORD(v149) = __ROR4__(*(_DWORD *)&v96[4 * (v75 ^ 0x62)], 14);
  LODWORD(STACK[0x6960]) = v108;
  LODWORD(v21) = v21 ^ v149 ^ v108;
  LODWORD(v149) = __ROR4__(v23 ^ 0x4E3DC9CA, 24);
  LODWORD(STACK[0x6548]) = v21 ^ v149;
  LODWORD(v23) = v108 ^ LODWORD(STACK[0x69C0]);
  LODWORD(STACK[0x65C0]) = (_DWORD)v23;
  LODWORD(v21) = v21 ^ v149 ^ 0x97F9AEA8;
  LODWORD(v23) = v21 ^ v23;
  LODWORD(STACK[0x6570]) = (_DWORD)v23;
  v180 = (int)v21;
  LODWORD(STACK[0x6578]) = (_DWORD)v21;
  LODWORD(v21) = v23 ^ 0xF8F17657;
  LODWORD(v23) = v23 ^ 0xF8F17657 ^ v19;
  LODWORD(STACK[0x65B0]) = (_DWORD)v23;
  LODWORD(v19) = v23 ^ 0x3A000000;
  LODWORD(v23) = v23 ^ 0x3A000000 ^ v75 ^ 0x47E0C031;
  LODWORD(v75) = v23 ^ 0x7DE0C031;
  LODWORD(STACK[0x6560]) = v23;
  LODWORD(STACK[0x6558]) = ((unsigned __int16)((unsigned __int16)v23 ^ 0xC031) >> 8);
  LODWORD(v149) = __ROR4__(*(_DWORD *)&v96[4* (((unsigned __int16)((unsigned __int16)v23 ^ 0xC031) >> 8) ^ 0x53)], 14);
  v181 = *(_DWORD *)(v176 + 4 * (v23 ^ 0x35u)) - 1780118023;
  LODWORD(STACK[0x6550]) = (v23 ^ 0x7DE0C031) >> 24;
  LODWORD(v23) = v181 ^ __ROR4__(v149 ^ 0x2108D8FF, 24);
  LODWORD(v149) = __ROR4__(*(_DWORD *)&v96[4 * (BYTE3(v75) ^ 0x53)], 14);
  LODWORD(v75) = BYTE2(v75);
  LODWORD(STACK[0x6568]) = v75;
  v182 = STACK[0x6770];
  LODWORD(v108) = v23 ^ __ROR4__(v149 ^ 0x2108D8FF, 8) ^ __ROR4__(*(_DWORD *)(STACK[0x6770]+ 4 * (v75 ^ 0xAD)) ^ 0x8C695FDD, 16) ^ v180;
  v183 = v21 ^ v108;
  v184 = v21 ^ v108 ^ v133;
  LODWORD(v91) = v184 ^ 0x2BE0C031;
  LODWORD(v133) = ((v184 ^ 0x2BE0C031u) >> 16);
  LODWORD(v23) = *(_DWORD *)&v96[4 * ((v133 - (((v184 ^ 0x2BE0C031u) >> 15) & 0x13E) + 159) ^ 0xCC)];
  LODWORD(STACK[0x66E0]) = v184;
  v185 = (v184 ^ 0x2BE0C031u) >> 24;
  LODWORD(v109) = *(_DWORD *)(v182 + 4 * (v184 ^ 0x9Cu)) ^ __ROR4__(__ROR4__((_DWORD)v23, 14) ^ 0x2108D8FF, 16) ^ __ROR4__(__ROR4__(*(_DWORD *)&v96[4 * (v185 ^ 0x53)], 14) ^ 0x2108D8FF, 8);
  LODWORD(v165) = ((unsigned __int16)(v184 ^ 0xC031) >> 8);
  HIDWORD(v149) = (*(_DWORD *)(v176 + 4 * (v165 ^ 4)) - 1780118023) ^ 0x7DE0C031;
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6970]) = v108;
  LODWORD(v23) = v109 ^ ((v108 ^ -(int)v108 ^ ((v149 >> 24) - (v108 ^ (v149 >> 24)))) + (v149 >> 24));
  LODWORD(v19) = v19 ^ v21 ^ v108;
  LODWORD(STACK[0x6670]) = v23 ^ v21 ^ v108;
  LODWORD(v109) = (_DWORD)v23;
  LODWORD(STACK[0x66D8]) = (_DWORD)v23;
  LODWORD(v24) = v23 ^ v21 ^ v108 ^ 0xFB695FDD;
  LODWORD(v21) = v24 ^ v19;
  v186 = v24 ^ v19 ^ v184;
  LODWORD(STACK[0x6940]) = v24 ^ v19;
  LODWORD(v108) = v186 ^ 0x7DE0C031;
  LODWORD(STACK[0x65F0]) = v186 ^ 0x7DE0C031;
  LODWORD(v23) = ((v186 ^ 0x7DE0C031u) >> 16);
  LODWORD(STACK[0x6650]) = (_DWORD)v23;
  LODWORD(v149) = __ROR4__(*(_DWORD *)&v96[4 * (v23 ^ 0x53)], 14);
  LODWORD(STACK[0x65E8]) = v186;
  v187 = (*(_DWORD *)(v176 + 4 * (v186 ^ 0x35u)) - 1780118023) ^ __ROR4__(v149 ^ 0x2108D8FF, 16);
  LODWORD(STACK[0x6600]) = BYTE1(v108);
  HIDWORD(v149) = *(_DWORD *)(v179 + 4 * (BYTE1(v108) ^ 0xD3u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x65D8]) = BYTE3(v108);
  v188 = v187 ^ __ROR4__((*(_DWORD *)(v176 + 4 * (BYTE3(v108) ^ 4)) - 1780118023) ^ 0x7DE0C031, 8) ^ v109 ^ __ROR4__((v149 >> 14) ^ (16 * (v149 >> 14) * (v149 >> 14)) ^ 0x4E3DC9CA, 24);
  LODWORD(v24) = v188 ^ v24;
  LODWORD(v91) = v24 ^ v91;
  v189 = v91 ^ 0xBA695FDD;
  LODWORD(v149) = __ROR4__(*(_DWORD *)&v96[4 * (BYTE3(v91) ^ 0xE9)], 14) ^ 0x2108D8FF;
  HIDWORD(v149) = v149;
  v190 = (v149 >> 8) ^ __ROR4__(__ROR4__(*(_DWORD *)&v96[4 * (((unsigned __int16)(v91 ^ 0x5FDD) >> 8) ^ 0x53)], 14) ^ 0x2108D8FF, 24) ^ __ROR4__(*(_DWORD *)(v182+ 4 * (((v91 ^ 0xBA695FDD) >> 16) ^ 0xADu)) ^ 0x8C695FDD, 16) ^ __ROR4__(*(_DWORD *)&v96[4 * (v91 ^ 0x8E)], 14) ^ v188;
  LODWORD(v91) = v21 ^ 0x4708D8FF ^ v190;
  HIDWORD(v149) = *(_DWORD *)(v179 + 4 * (((unsigned __int16)(v91 ^ v189) >> 8) ^ 0x8Cu));
  LODWORD(v149) = HIDWORD(v149);
  v191 = *(_DWORD *)(v182 + 4 * ((~(_BYTE)v21 ^ v190 ^ v189) ^ 0x70u)) ^ __ROR4__((*(_DWORD *)(v176 + 4 * (((v91 ^ v189 ^ 0xAD695FDD) >> 16) ^ 4u))- 1780118023) ^ 0x7DE0C031, 16) ^ __ROR4__((v149 >> 14) ^ (16 * (v149 >> 14) * (v149 >> 14)) ^ 0x4E3DC9CA, 24) ^ __ROR4__(*(_DWORD *)(v182 + 4 * ((v91 ^ v189) >> 24)) ^ 0x8C695FDD, 8);
  LODWORD(v24) = v24 ^ 0xDB6A2DBE ^ v191;
  v192 = v24 ^ v91;
  LODWORD(v91) = v24 ^ v91 ^ v91 ^ v189 ^ 0xAD695FDD;
  v193 = *(_DWORD *)(v182 + 4 * (v91 ^ 0xCEu)) ^ v190 ^ __ROR4__(*(_DWORD *)(v182 + 4* (BYTE3(v91) ^ 0x34)) ^ 0x8C695FDD, 8) ^ v191;
  v194 = v91 ^ 0x99037263;
  LODWORD(v109) = v193 ^ __ROR4__((*(_DWORD *)(v176 + 4 * (((unsigned __int16)(v91 ^ 0x7263) >> 8) ^ 4u))- 1780118023) ^ 0x7DE0C031, 24) ^ __ROR4__(__ROR4__(*(_DWORD *)&v96[4* (((v91 ^ 0x99037263) >> 16) ^ 0x53)], 14) ^ 0x2108D8FF, 16);
  LODWORD(v179) = LODWORD(STACK[0x6678]) ^ ((4 * (_DWORD)v152) | 0x8707668) ^ 0x6717BCD4;
  LODWORD(STACK[0x69C0]) = v179;
  LODWORD(v179) = v179 - LODWORD(STACK[0x69E0]) + 1697311773;
  v195 = (v179 ^ 0x992BE541) & (2 * (v179 & 0x8043E595)) ^ v179 & 0x8043E595;
  LODWORD(v91) = ((2 * (v179 ^ 0x99A9A74B)) ^ 0x33D485BC) & (v179 ^ 0x99A9A74B) ^ (2 * (v179 ^ 0x99A9A74B)) & 0x19EA42DE;
  v196 = (v91 ^ 0x920409E) & (4 * v195) ^ v195;
  LODWORD(v91) = ((4 * (v91 ^ 0x82A4242)) ^ 0x67A90B78) & (v91 ^ 0x82A4242) ^ (4 * (v91 ^ 0x82A4242)) & 0x19EA42DC;
  v197 = (v91 ^ 0x1A80250) & (16 * v196) ^ v196;
  LODWORD(v91) = ((16 * (v91 ^ 0x18424086)) ^ 0x9EA42DE0) & (v91 ^ 0x18424086) ^ (16 * (v91 ^ 0x18424086)) & 0x19EA42D0;
  v198 = v197 ^ 0x19EA42DE ^ (v91 ^ 0x18A0001E) & (v197 << 8);
  v199 = ((v198 << 16) ^ 0x42DE0000) & (((v91 ^ 0x14A421E) << 8) & 0x19EA0000 ^ 0x11A80000 ^ (((v91 ^ 0x14A421E) << 8) ^ 0xEA420000) & (v91 ^ 0x14A421E));
  v200 = (v198 << 16) & 0x19EA0000 ^ v198;
  v201 = v109 ^ 0xBC618722 ^ v24;
  LODWORD(STACK[0x6740]) = v201 ^ 0xF16A2DBE;
  v202 = v201 ^ 0xF16A2DBE ^ v192;
  LODWORD(STACK[0x65D0]) = v202 ^ 0xAD695FDD;
  v203 = v202 ^ 0xAD695FDD ^ v194;
  v204 = v203;
  LODWORD(v24) = *(_DWORD *)&v96[4 * (v203 ^ 0xED)];
  v205 = v200 ^ v199;
  v203 ^= 0x346A2DBEu;
  v206 = *(_DWORD *)(v182 + 4 * (BYTE2(v203) ^ 0xADu));
  LODWORD(STACK[0x6618]) = v179 ^ (2 * v205);
  HIDWORD(v149) = v206 ^ 0x8C695FDD;
  LODWORD(v149) = v206 ^ 0x8C695FDD;
  LODWORD(STACK[0x65C8]) = (v149 >> 16) ^ __ROR4__(v24, 14) ^ __ROR4__((*(_DWORD *)(v176 + 4 * (BYTE1(v203) ^ 4u))- 1780118023) ^ 0x7DE0C031, 24) ^ __ROR4__((*(_DWORD *)(v176 + 4 * (HIBYTE(v203) ^ 4))- 1780118023) ^ 0x7DE0C031, 8);
  LODWORD(v108) = v185 ^ 0x8A;
  v207 = STACK[0x6910];
  v208 = *(_DWORD *)(STACK[0x6910] + 4 * (BYTE2(v19) ^ 0x36u)) ^ __ROR4__(*(_DWORD *)(STACK[0x6910]+ 4* ((v19 >> 24) ^ 0x75)) ^ 0x96F11381, 24);
  LODWORD(v108) = *(_DWORD *)(v150 + 4 * v108) + 1264166829;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (v133 ^ 0x15));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v133) = (-437574216 * (v149 >> 2)) ^ (v149 >> 2) ^ __ROR4__(v108 ^ 0xE808089E ^ ((4 * v108) | 0x8707668), 24);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x66E0]) ^ 0x8Bu));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v75) = v133 ^ __ROR4__((v149 >> 2) ^ 0x6FC2CAC4 ^ (-437574216 * (v149 >> 2)), 16);
  LODWORD(v133) = v165 ^ 0x89;
  LODWORD(v23) = v165 ^ 0xE7648839;
  v209 = STACK[0x6950];
  LODWORD(STACK[0x6780]) = v75 ^ __ROR4__(v23 ^ *(_DWORD *)(STACK[0x6950] + 4 * v133), 8);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE1(v19) ^ 0xA4u)) + 1264166829;
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (HIBYTE(v183) ^ 0xC3));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v75) = (v149 >> 2) ^ 0xB7175001 ^ (-437574216 * (v149 >> 2));
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (v183 ^ 0xF8u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v75) = BYTE2(v183) ^ __ROR4__(v75, 24) ^ __ROR4__((v149 >> 2) ^ 0x8B98FEE ^ (-437574216 * (v149 >> 2)), 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(v183) ^ 0x21u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6658]) = v75 ^ *(_DWORD *)(v209 + 4 * (BYTE2(v183) ^ 0xAFu)) ^ __ROR4__((v149 >> 2) ^ 0xC7FB9F5B ^ (-437574216 * (v149 >> 2)), 8);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (HIBYTE(LODWORD(STACK[0x6970])) ^ 0xF6u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v75) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6970]) ^ 0x13u)) + 1264166829;
  HIDWORD(v149) = (v149 >> 2) ^ 0x91EB3E80 ^ (-437574216 * (v149 >> 2));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = v149 >> 24;
  LODWORD(STACK[0x66E0]) = (_DWORD)v21;
  LODWORD(STACK[0x65F8]) = v21 & 0xFBFFFFFF ^ __ROR4__(v75 ^ 0xE9BEBB32 ^ ((4 * v75) | 0x8707668), 16);
  LODWORD(v21) = v19 ^ 0x39F6639E ^ *(_DWORD *)(v209 + 4 * (v19 ^ 0x8Du));
  HIDWORD(v149) = BYTE1(v202) ^ 0xFD1CA504 ^ *(_DWORD *)(v209 + 4 * (BYTE1(v202) ^ 0x5Du));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6678]) = v202;
  LODWORD(v75) = *(_DWORD *)(v207 + 4 * (HIBYTE(v202) ^ 0x9C));
  LODWORD(STACK[0x6770]) = v208 ^ __ROR4__(v23 ^ 0x7235F4EB ^ ((4 * (_DWORD)v23) | 0x8707668), 8) ^ __ROR4__((_DWORD)v21, 16);
  LODWORD(v21) = (v149 >> 8) ^ __ROR4__(v75 ^ 0x427D9D71, 24);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE1(v201) ^ 0xD7u));
  LODWORD(v149) = HIDWORD(v149);
  HIDWORD(v149) = (v149 >> 2) ^ 0x7B3A0DAF ^ (-437574216 * (v149 >> 2));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x6668]) = v201;
  LODWORD(v19) = (v149 >> 8) ^ __ROR4__(*(_DWORD *)(v207 + 4 * (v201 ^ 0xB9u)) ^ 0xC9909A12, 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (v202 ^ 0x6Au));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(STACK[0x65E0]) = v21 ^ __ROR4__((v149 >> 2) ^ 0xD2B5EB9C ^ (-437574216 * (v149 >> 2)), 16);
  LODWORD(STACK[0x6530]) = v19 ^ __ROR4__(HIBYTE(v201) ^ 0xF8349996 ^ *(_DWORD *)(v209+ 4 * (HIBYTE(v201) ^ 0xB2)), 24);
  LODWORD(v21) = *(_DWORD *)(v150 + 4 * (BYTE3(v109) ^ 0xC5)) + 1264166829;
  LODWORD(v19) = *(_DWORD *)(v150
                           + 4
                           * (((v109 ^ 0xBC618722) >> 8) & 0xBF ^ 5 ^ (((v109 ^ 0xBC618722) >> 8) & 0x40 | 0xB8)))
               + 1264166829;
  LODWORD(STACK[0x6528]) = ((v109 ^ 0xBC618722) >> 16);
  LODWORD(STACK[0x6518]) = ((v109 ^ 0xBC618722) >> 16) ^ __ROR4__(v21 ^ 0x7B44DCA3 ^ ((4 * (_DWORD)v21) | 0x8707668), 24) ^ __ROR4__(v19 ^ 0x4519617C ^ ((4 * (_DWORD)v19) | 0x8707668), 8) ^ __ROR4__(v109 ^ 0x6209651E ^ *(_DWORD *)(v209 + 4 * (v109 ^ 0x4Fu)), 16);
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (HIBYTE(v203) ^ 0x51));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v21) = (v149 >> 2) ^ 0xCF3C04BF ^ (-437574216 * (v149 >> 2));
  HIDWORD(v149) = *(_DWORD *)(v141 + 4 * (BYTE2(v203) ^ 0x60u));
  LODWORD(v149) = HIDWORD(v149);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (BYTE1(v203) ^ 0x56u)) + 1264166829;
  LODWORD(STACK[0x6648]) = (v149 >> 2) ^ __ROR4__((_DWORD)v21, 24) ^ (-437574216 * (v149 >> 2)) ^ __ROR4__(*(_DWORD *)(v207 + 4 * (v204 ^ 0xAAu)) ^ 0x3BE07A63, 16) ^ __ROR4__(v19 ^ 0xE5E7AF07 ^ ((4 * (_DWORD)v19) | 0x8707668), 8);
  LODWORD(v21) = LODWORD(STACK[0x6548]) ^ 0x5C3AF805;
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (BYTE1(v21) ^ 0xEFu)) + 1264166829;
  LODWORD(v96) = STACK[0x6578];
  LODWORD(STACK[0x64E8]) = BYTE2(LODWORD(STACK[0x6578])) ^ 0xE6CAA0E ^ *(_DWORD *)(v209
                                                                                 + 4
                                                                                 * (BYTE2(LODWORD(STACK[0x6578])) ^ 0xBEu)) ^ __ROR4__(v19 ^ 0x9B8B8ADF ^ ((4 * (_DWORD)v19) | 0x8707668), 8);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (BYTE2(LODWORD(STACK[0x6570])) ^ 0xD6u)) + 1264166829;
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE1(LODWORD(STACK[0x6570])) ^ 0x43u)) + 1264166829;
  LODWORD(v179) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6550]) ^ 0x50u));
  v210 = __PAIR64__(v179, __ROR4__(v23 ^ 0xC55CB0E0 ^ ((4 * (_DWORD)v23) | 0x8707668), 8));
  LODWORD(STACK[0x64F8]) = ((4 * (_DWORD)v19) | 0x8707668) ^ v19 ^ __ROR4__(*(_DWORD *)(v207+ 4* (LODWORD(STACK[0x6570]) ^ 0xCCu)) ^ 0xD087FAE0, 16) ^ __ROR4__(*(_DWORD *)(v207 + 4 * (HIBYTE(LODWORD(STACK[0x6570])) ^ 0x35u)) ^ 0xD6C08B86, 24) ^ v210;
  LODWORD(v210) = v179;
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6558]) ^ 4u)) + 1264166829;
  LODWORD(STACK[0x64F0]) = *(_DWORD *)(v209 + 4 * (LODWORD(STACK[0x6568]) ^ 0xBCu)) ^ LODWORD(STACK[0x6568]) ^ __ROR4__((v210 >> 2) ^ 0xF161B960 ^ (-437574216 * (v210 >> 2)), 24) ^ __ROR4__(v23 ^ 0x3D3235C2 ^ ((4 * (_DWORD)v23) | 0x8707668), 8) ^ __ROR4__(*(_DWORD *)(v207 + 4 * (LODWORD(STACK[0x6560]) ^ 0xBu)) ^ 0xA1DD8616, 16);
  HIDWORD(v210) = *(_DWORD *)(v207 + 4 * (HIBYTE(LODWORD(STACK[0x65B0])) ^ 0xCCu)) ^ 0x9747A02D;
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v19) = v210 >> 24;
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * ~(LODWORD(STACK[0x65B0]) >> 8)) + 1264166829;
  LODWORD(v210) = __ROR4__(v23 ^ 0xC506 ^ ((4 * (_DWORD)v23) | 0x8707668), 8);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x65B0]) ^ 0x3Du)) + 1264166829;
  LODWORD(v179) = *(_DWORD *)(v150 + 4 * (BYTE2(LODWORD(STACK[0x65B0])) ^ 0xB4u)) + 1264166829;
  LODWORD(STACK[0x64E0]) = v19 ^ v210 ^ v179 ^ ((4 * v179) | 0x8707668) ^ __ROR4__(v23 ^ 0x73834747 ^ ((4 * (_DWORD)v23) | 0x8707668), 16);
  LODWORD(v19) = (v96 >> 24) ^ 0x89D8720 ^ *(_DWORD *)(v209 + 4 * ((v96 >> 24) ^ 0xC2));
  HIDWORD(v210) = *(_DWORD *)(v207 + 4 * (v21 ^ 0x7Bu)) ^ 0x6A011972;
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v21) = v210 >> 16;
  LODWORD(STACK[0x64D0]) = (_DWORD)v21;
  LODWORD(STACK[0x64D8]) = v21 & 0xF7FFFFFF ^ __ROR4__((_DWORD)v19, 24);
  LODWORD(v21) = *(_DWORD *)(v150 + 4 * (BYTE1(LODWORD(STACK[0x6960])) ^ 0x91u)) + 1264166829;
  HIDWORD(v210) = v21 ^ 0xD37D893C ^ ((4 * (_DWORD)v21) | 0x8707668);
  LODWORD(v210) = HIDWORD(v210);
  LOBYTE(v204) = STACK[0x6960];
  LODWORD(v21) = (v210 >> 8) ^ __ROR4__(*(_DWORD *)(v207 + 4 * (HIBYTE(LODWORD(STACK[0x6960])) ^ 0x2Du)) ^ 0xDFB1A3CE, 24);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6580]) ^ 0x44u)) + 1264166829;
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6588]) ^ 0xA3u)) + 1264166829;
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6590]) ^ 0x87u));
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(STACK[0x64C8]) = (v210 >> 2) ^ __ROR4__(v19 ^ 0xD1A4778B ^ ((4 * (_DWORD)v19) | 0x8707668), 16) ^ (-437574216 * (v210 >> 2)) ^ __ROR4__(v23 ^ 0x1917A5F4 ^ ((4 * (_DWORD)v23) | 0x8707668), 8) ^ __ROR4__(LODWORD(STACK[0x65A0]) ^ 0xFD1CA576 ^ *(_DWORD *)(v209 + 4 * (LODWORD(STACK[0x65A0]) ^ 0x2Fu)), 24);
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x65B8]) ^ 0x56u));
  LODWORD(v210) = HIDWORD(v210);
  v211 = STACK[0x65B8];
  LODWORD(v179) = ((unsigned __int16)(v211 ^ 0x4F84) >> 8) ^ 0x6FE6C279 ^ *(_DWORD *)(v209 + 4 * (((unsigned __int16)(v211 ^ 0x4F84) >> 8) ^ 0xB1u));
  LODWORD(v23) = ((LODWORD(STACK[0x65B8]) ^ 0xD5844F84) >> 16);
  LODWORD(STACK[0x64C0]) = (_DWORD)v23;
  LODWORD(v19) = v23 ^ __ROR4__((v210 >> 2) ^ 0xB4781D1A ^ (-437574216 * (v210 >> 2)), 16) ^ __ROR4__(v179, 8);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (HIBYTE(v211) ^ 0xF5)) + 1264166829;
  LODWORD(STACK[0x64B8]) = v19 ^ __ROR4__(v23 ^ 0x32046CEC ^ ((4 * (_DWORD)v23) | 0x8707668), 24);
  LODWORD(STACK[0x64A8]) = v21 ^ __ROR4__(*(_DWORD *)(v207 + 4 * (v204 ^ 3u)) ^ 0x2F18BD08, 16);
  LODWORD(v133) = STACK[0x65C0];
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE1(LODWORD(STACK[0x65C0])) ^ 0xD4u)) + 1264166829;
  LODWORD(STACK[0x64A0]) = BYTE2(v133) ^ 0xEB ^ __ROR4__(((v133 ^ 0xF8EB7661) >> 24) ^ 0x7CEFC766 ^ *(_DWORD *)(v209 + 4 * (((v133 ^ 0xF8EB7661) >> 24) ^ 0xF)), 24) ^ *(_DWORD *)(v209 + 4 * (BYTE2(v133) ^ 0xDEu)) ^ __ROR4__(v23 ^ 0x274A182B ^ ((4 * (_DWORD)v23) | 0x8707668), 8) ^ __ROR4__(v133 ^ 0xC95F7D8E ^ *(_DWORD *)(v209 + 4 * (v133 ^ 0x5Bu)), 16);
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6720]) ^ 0xC3u));
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (HIBYTE(LODWORD(STACK[0x6A10])) ^ 0x54u)) + 1264166829;
  LODWORD(v21) = (-437574216 * (v210 >> 2)) ^ (v210 >> 2) ^ __ROR4__(v19 ^ 0x2593E69C ^ ((4 * (_DWORD)v19) | 0x8707668), 24);
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6760]) ^ 0x36u));
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v21) = v21 ^ __ROR4__((v210 >> 2) ^ 0x404F8C0D ^ (-437574216 * (v210 >> 2)), 16);
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6790]) ^ 0xDAu));
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v19) = (v210 >> 2) ^ 0xBD6C2F5 ^ (-437574216 * (v210 >> 2));
  HIDWORD(v210) = *(_DWORD *)(v207 + 4 * (LODWORD(STACK[0x6608]) ^ 0x86u)) ^ 0x146D3CAA;
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v179) = *(_DWORD *)(v207 + 4 * (LODWORD(STACK[0x6610]) ^ 0x20u));
  LODWORD(STACK[0x6A10]) = v21 ^ __ROR4__((_DWORD)v19, 8);
  LODWORD(v21) = (v210 >> 24) ^ __ROR4__(v179 ^ 0xE335E0A6, 16);
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6630]) ^ 0x6Du));
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6628]) ^ 0x10u)) + 1264166829;
  LODWORD(STACK[0x6478]) = (_DWORD)v23;
  LODWORD(STACK[0x6760]) = v21 ^ v23 ^ __ROR4__((v210 >> 2) ^ 0xC494D240 ^ (-437574216 * (v210 >> 2)), 8);
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6A30]) ^ 0x79u));
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v21) = (v210 >> 2) ^ 0x28029009 ^ (-437574216 * (v210 >> 2));
  HIDWORD(v210) = *(_DWORD *)(v207 + 4 * (LODWORD(STACK[0x69B0]) ^ 0x54u)) ^ 0x2F18BD08;
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v21) = (v210 >> 24) ^ __ROR4__((_DWORD)v21, 16);
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (LODWORD(STACK[0x6A60]) ^ 0xFAu));
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(STACK[0x6470]) = v21 ^ __ROR4__((v210 >> 2) ^ 0x7B3A0DAF ^ (-437574216 * (v210 >> 2)), 8);
  LODWORD(STACK[0x6468]) = ((LODWORD(STACK[0x69D0]) ^ 0x477539D3u) >> 16) ^ __ROR4__(((LODWORD(STACK[0x69D0]) ^ 0x477539D3u) >> 24) ^ 0x88D85634 ^ *(_DWORD *)(v209 + 4 * (((LODWORD(STACK[0x69D0]) ^ 0x477539D3u) >> 24) ^ 0x4A)), 24) ^ *(_DWORD *)(v209 + 4 * (((LODWORD(STACK[0x69D0]) ^ 0x477539D3u) >> 16) ^ 0x39u)) ^ __ROR4__(*(_DWORD *)(v207 + 4 * (LODWORD(STACK[0x6640]) ^ 0x47u)) ^ 0x6BB7AADE, 8) ^ __ROR4__(*(_DWORD *)(v207 + 4 * (LODWORD(STACK[0x6638]) ^ 0x93u)) ^ LODWORD(STACK[0x1140]), 16);
  LODWORD(v179) = STACK[0x6940];
  STACK[0x6498] = v150;
  LODWORD(v21) = *(_DWORD *)(v150 + 4 * (BYTE1(v179) ^ 0x71u)) + 1264166829;
  HIDWORD(v210) = v21 ^ 0xF369C28 ^ ((4 * (_DWORD)v21) | 0x8707668);
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v21) = (v210 >> 8) ^ __ROR4__(BYTE3(v179) ^ 0x1C65405D ^ *(_DWORD *)(v209 + 4 * (BYTE3(v179) ^ 0xD4)), 24);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE2(LODWORD(STACK[0x66D8])) ^ 0x7Du)) + 1264166829;
  LODWORD(v19) = v23 ^ __ROR4__(LODWORD(STACK[0x66D8]) ^ 0x644E14E0 ^ *(_DWORD *)(v209 + 4 * (LODWORD(STACK[0x66D8]) ^ 0xD7u)), 16) ^ ((4 * (_DWORD)v23) | 0x8707668) ^ __ROR4__(*(_DWORD *)(v207+ 4* (HIBYTE(LODWORD(STACK[0x66D8])) ^ 0xFAu)) ^ 0xE61DDCDB, 24);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (BYTE1(LODWORD(STACK[0x66D8])) ^ 0x4Eu)) + 1264166829;
  LODWORD(STACK[0x6480]) = v19 ^ __ROR4__(v23 ^ 0x40315D01 ^ ((4 * (_DWORD)v23) | 0x8707668), 8);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (v179 ^ 0xF2u)) + 1264166829;
  LODWORD(STACK[0x6450]) = v21 ^ __ROR4__(v19 ^ 0x7472858D ^ ((4 * (_DWORD)v19) | 0x8707668), 16);
  LOBYTE(v133) = STACK[0x6670];
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (BYTE1(LODWORD(STACK[0x6670])) ^ 0x80u)) + 1264166829;
  LODWORD(v21) = *(_DWORD *)(v207 + 4 * (BYTE2(LODWORD(STACK[0x6670])) ^ 2u)) ^ __ROR4__(__ROR4__(__ROR4__(*(_DWORD *)(v207+ 4 * (HIBYTE(LODWORD(STACK[0x6670])) ^ 0xA2u)), 22) ^ 0x6DA98065, 10) ^ 0x983DF391, 24) ^ __ROR4__(v19 ^ 0x5BFFC344 ^ ((4 * (_DWORD)v19) | 0x8707668), 8);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x65D8]) ^ 0x52u)) + 1264166829;
  HIDWORD(v210) = v23 ^ 0x3B7544A4 ^ ((4 * (_DWORD)v23) | 0x8707668);
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v19) = (v210 >> 24) ^ __ROR4__(LODWORD(STACK[0x65F0]) ^ 0x30874BCE ^ *(_DWORD *)(v209 + 4 * (LODWORD(STACK[0x65E8]) ^ 0xA4u)), 16);
  LODWORD(v23) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6600]) ^ 0x12u)) + 1264166829;
  LODWORD(v179) = *(_DWORD *)(v150 + 4 * (LODWORD(STACK[0x6650]) ^ 0x74u)) + 1264166829;
  LODWORD(STACK[0x6448]) = v179;
  LODWORD(STACK[0x6440]) = v19 ^ v179 ^ __ROR4__(v23 ^ 0x2F8D83CF ^ ((4 * (_DWORD)v23) | 0x8707668), 8);
  LODWORD(v19) = *(_DWORD *)(v150 + 4 * (v133 ^ 0x89u)) + 1264166829;
  LODWORD(STACK[0x6458]) = v21 ^ __ROR4__(v19 ^ LODWORD(STACK[0x1020]) ^ ((4 * (_DWORD)v19) | 0x8707668), 16);
  LODWORD(STACK[0x6430]) = (LODWORD(STACK[0x65C8]) ^ v109 ^ 0xBC618722 ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x65D0]) ^ 0xC5000000)
                         - 2
                         * ((LODWORD(STACK[0x65C8]) ^ v109 ^ 0xBC618722 ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x65D0]) ^ 0xC5000000) & 0x3EC733F9 ^ (LODWORD(STACK[0x65C8]) ^ v109 ^ 0xBC618722 ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x65D0])) & 0x11);
  LODWORD(v21) = BYTE2(LODWORD(STACK[0x6A20])) ^ 0x93;
  STACK[0x6438] = v141;
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * v21);
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v75) = LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x69F0]);
  LODWORD(v179) = LODWORD(STACK[0x6840]) ^ (v210 >> 2) ^ (-437574216 * (v210 >> 2));
  LODWORD(v133) = LODWORD(STACK[0x6800]) ^ *(_DWORD *)(v209 + 4 * (LODWORD(STACK[0x6810]) ^ 0xDDu));
  HIDWORD(v210) = *(_DWORD *)(v141 + 4 * (BYTE2(LODWORD(STACK[0x6A00])) ^ 0xD1u));
  LODWORD(v210) = HIDWORD(v210);
  LODWORD(v19) = LODWORD(STACK[0x6710]) ^ (v210 >> 2) ^ (-437574216 * (v210 >> 2));
  v212 = LODWORD(STACK[0x66B0]) ^ 0xA0224071;
  LODWORD(v141) = STACK[0x6870];
  LODWORD(STACK[0x69B0]) = (LODWORD(STACK[0x6870]) ^ 0x61AC4E1)
                         + v212
                         + 2022881068
                         - ((2 * ((LODWORD(STACK[0x6870]) ^ 0x61AC4E1) + v212 + 2022881068)) & 0x67C08646);
  LODWORD(v21) = LODWORD(STACK[0x6A50]) ^ 0x8226797;
  v213 = v75 ^ LODWORD(STACK[0x1010]);
  LODWORD(STACK[0x65A0]) = v213 - v212;
  LODWORD(v23) = v213 - v212 + 276488798;
  LODWORD(STACK[0x6490]) = (_DWORD)v23;
  LODWORD(v182) = (v21 ^ v23) - ((2 * (v21 ^ v23)) & 0x36002410);
  LODWORD(v109) = LODWORD(STACK[0x6708]) ^ 0x45DC0B8D;
  LODWORD(v23) = LODWORD(STACK[0x6680]) ^ 0x35C6A410;
  LODWORD(STACK[0x6A00]) = v109 - 1218611495 + (_DWORD)v23 - ((2 * (v109 - 1218611495 + (_DWORD)v23)) & 0x89B47A56);
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x6688]) - ((2 * LODWORD(STACK[0x6688])) & 0x4BB709BC);
  LODWORD(v209) = LODWORD(STACK[0x6860]) - ((2 * LODWORD(STACK[0x6860])) & 0xD422AB70);
  v214 = v75 ^ LODWORD(STACK[0x6930]);
  v215 = v213 - 2 * (v213 & 0x4868C91D ^ v75 & 4);
  LODWORD(v75) = LODWORD(STACK[0x66A0]) ^ 0xF3F1321C;
  LODWORD(STACK[0x6608]) = v75 + v213;
  LODWORD(STACK[0x6860]) = v75 - ((2 * v75) & 0xF109A36);
  LODWORD(v91) = (v75 + v213) ^ 0x9D609ED0;
  LODWORD(STACK[0x6568]) = v91;
  LODWORD(STACK[0x6800]) = ((v209 + 1779520952) ^ v91) - ((2 * ((v209 + 1779520952) ^ v91)) & 0xF109A36);
  LODWORD(v75) = LODWORD(STACK[0x6830]) - ((2 * LODWORD(STACK[0x6830])) & 0x4BB709BC);
  LODWORD(STACK[0x6830]) = v212 - ((2 * v212) & 0xD422AB70);
  v216 = LODWORD(STACK[0x69A0]) ^ 0xF30BE147;
  LODWORD(v150) = STACK[0x66F8];
  LODWORD(v152) = STACK[0x6900];
  LODWORD(v86) = (LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x66F8]) ^ 0xA8FCFA68) - 715751666;
  LODWORD(STACK[0x6460]) = (_DWORD)v86;
  v217 = STACK[0x64B0];
  LODWORD(v86) = LODWORD(STACK[0x64B0]) ^ 0xF195FD5 ^ v86;
  LODWORD(STACK[0x6A60]) = (_DWORD)v86;
  LODWORD(STACK[0x6488]) = v217 ^ 0xF195FD5;
  LODWORD(STACK[0x6930]) = v86 ^ 0xD7E5C66C ^ (v182 + 452989448);
  LODWORD(STACK[0x6790]) = v86 ^ 0xD7E5C66C ^ (v216 - ((2 * v216) & 0x36002410) + 452989448);
  v218 = LODWORD(STACK[0x6850]) - ((2 * LODWORD(STACK[0x6850])) & 0xD422AB70);
  LODWORD(v182) = LODWORD(STACK[0x6820]) - ((2 * LODWORD(STACK[0x6820])) & 0x7C50BA2E);
  LODWORD(v209) = LODWORD(STACK[0x67F0]) - ((2 * LODWORD(STACK[0x67F0])) & 0x36002410);
  LODWORD(STACK[0x6850]) = ((v218 + 1779520952) ^ v91) - ((2 * ((v218 + 1779520952) ^ v91)) & 0xF109A36);
  v219 = LODWORD(STACK[0x66D0]) ^ 0xB2E3C48A;
  LODWORD(STACK[0x69D0]) = (v219 ^ (v75 + 635143390)) - ((2 * (v219 ^ (v75 + 635143390))) & 0x7C50BA2E);
  LODWORD(v86) = STACK[0x66A8];
  v220 = LODWORD(STACK[0x66A8]) + LODWORD(STACK[0x6990]);
  LODWORD(STACK[0x6580]) = v220 ^ 0x6A1C5940;
  LODWORD(STACK[0x6820]) = ((v182 + 1042832663) ^ v220 ^ 0x6A1C5940)
                         - ((2 * ((v182 + 1042832663) ^ v220 ^ 0x6A1C5940)) & 0x4BB709BC);
  LODWORD(STACK[0x6640]) = (v217 ^ 0xF195FD5 ^ (v209 + 452989448))
                         - ((2 * (v217 ^ 0xF195FD5 ^ (v209 + 452989448))) & 0x1A0A8BC2);
  LODWORD(STACK[0x6A20]) = v109 ^ 0x42A170;
  LODWORD(STACK[0x6638]) = v150 - ((2 * v150) & 0x1A0A8BC2);
  LODWORD(v75) = LODWORD(STACK[0x67C0]) - ((2 * LODWORD(STACK[0x67C0])) & 0x1A0A8BC2);
  v221 = LODWORD(STACK[0x67D0]) - ((2 * LODWORD(STACK[0x67D0])) & 0x1A0A8BC2);
  LODWORD(v133) = (v133 - ((2 * v133) & 0x7C50BA2E) + 1042832663) ^ v220 ^ 0x6A1C5940;
  LODWORD(STACK[0x6A50]) = v133 - ((2 * v133) & 0x4BB709BC);
  LODWORD(v133) = (_DWORD)v86 + (v141 ^ 0x61AC4E1);
  LODWORD(STACK[0x6670]) = v133;
  LODWORD(v133) = v133 ^ 0x6B2ABB65;
  LODWORD(STACK[0x6A30]) = ((v221 + 218449377) ^ v133) + 452989448 + (~(2 * ((v221 + 218449377) ^ v133)) | 0xC9FFDBEF);
  LODWORD(STACK[0x6810]) = (_DWORD)v152 - ((2 * (_DWORD)v152) & 0xBC1DA8E8);
  LODWORD(v75) = (v75 + 218449377) ^ v133;
  LODWORD(v152) = v133;
  v222 = v75 ^ 0xC0A3AD69;
  LODWORD(v75) = (v217 ^ 0xF4616777) & (v75 ^ 0xC0A3AD69) ^ v75 & 0xE0782AAA;
  LODWORD(STACK[0x67F0]) = LODWORD(STACK[0x69C0]) - ((2 * LODWORD(STACK[0x69C0])) & 0xB0E7003C);
  v223 = LODWORD(STACK[0x67A0]) - ((2 * LODWORD(STACK[0x67A0])) & 0x90D19232);
  LODWORD(v91) = STACK[0x6620];
  LODWORD(v179) = (v179 - ((2 * v179) & 0xB0E7003C) - 663519202) ^ LODWORD(STACK[0x6620]) ^ 0x934704AC;
  LODWORD(STACK[0x67D0]) = v179 - ((2 * v179) & 0x9B7451AA);
  LODWORD(v109) = LODWORD(STACK[0x66B8]) ^ 0x9EF19302;
  LODWORD(STACK[0x63F0]) = v216 - v109;
  LODWORD(v182) = (v216 - v109) ^ 0x5053694;
  LODWORD(STACK[0x67C0]) = ((v223 + 1214826777) ^ v182) - ((2 * ((v223 + 1214826777) ^ v182)) & 0xBC1DA8E8);
  LODWORD(STACK[0x63E8]) = v217 ^ 0x14194DDD;
  LODWORD(STACK[0x67A0]) = v222
                         + (v217 ^ 0x14194DDD)
                         + ((2
                           * ((v75 & 0x1242DF5C ^ 0x1202DD5C) + (v75 ^ 0x40682280) - ((v75 ^ 0x40682280) & 0x1242DF5C))) ^ 0xDBEA5417);
  LODWORD(v21) = STACK[0x66E8];
  LODWORD(STACK[0x6610]) = v220;
  LODWORD(v133) = STACK[0x6690];
  v224 = LODWORD(STACK[0x6690]) ^ 0x3CCB8BD9 ^ v21 ^ v220;
  v225 = LODWORD(STACK[0x6690]) ^ 0x3CCB8BD9 ^ v23 ^ v220;
  LODWORD(STACK[0x6740]) = (((_DWORD)v19 - ((2 * (_DWORD)v19) & 0x90D19232) + 1214826777) ^ v182)
                         - ((2 * (((_DWORD)v19 - ((2 * (_DWORD)v19) & 0x90D19232) + 1214826777) ^ v182)) & 0xBC1DA8E8);
  LODWORD(v23) = LODWORD(STACK[0x66C0]) - ((2 * LODWORD(STACK[0x66C0])) & 0x9B7451AA);
  LODWORD(STACK[0x6840]) = LODWORD(STACK[0x6750]) - ((2 * LODWORD(STACK[0x6750])) & 0x67C08646);
  LODWORD(STACK[0x69A0]) = LODWORD(STACK[0x66F0]) + 635143391 + (~(2 * LODWORD(STACK[0x66F0])) | 0xB448F643);
  LODWORD(STACK[0x6750]) = v109 - ((2 * v109) & 0x90D19232);
  LODWORD(v21) = LODWORD(STACK[0x6698]) ^ 0x91CD913F;
  LODWORD(STACK[0x6538]) = (_DWORD)v21;
  LODWORD(v207) = v21 ^ v91 ^ ((_DWORD)v23 + 1304045781);
  LODWORD(STACK[0x6710]) = v207;
  LODWORD(STACK[0x6870]) = v21 ^ v91 ^ ((_DWORD)v86 - ((2 * (_DWORD)v86) & 0x9B7451AA) + 1304045781) ^ 0xC5D184B8;
  LODWORD(v75) = LODWORD(STACK[0x68A0]) - ((2 * LODWORD(STACK[0x68A0])) & 0x4BB709BC);
  LODWORD(v179) = LODWORD(STACK[0x6730]) ^ 0xE6CAA5B;
  v226 = LODWORD(STACK[0x67E0]) - ((2 * LODWORD(STACK[0x67E0])) & 0xBC1DA8E8);
  LODWORD(v86) = v179 ^ LODWORD(STACK[0x67E0]);
  LODWORD(STACK[0x67E0]) = v179 + 635143391 + ((2 * (v179 & 0x25DB84DF ^ STACK[0x6730] & 1)) ^ 0xFFFFFFFD);
  LODWORD(v179) = LODWORD(STACK[0x68E0]) - ((2 * LODWORD(STACK[0x68E0])) & 0x1A0A8BC2);
  v227 = v133 ^ 0x3C892AA9;
  LODWORD(STACK[0x6548]) = v133 ^ 0x3C892AA9;
  LODWORD(STACK[0x6590]) = (_DWORD)v152;
  LODWORD(v209) = (v152 ^ (v179 + 218449377))
                - ((2 * (v152 ^ (v179 + 218449377))) & 0x4BB709BC);
  LODWORD(v23) = LODWORD(STACK[0x68D0]) - ((2 * LODWORD(STACK[0x68D0])) & 0x1A0A8BC2);
  LODWORD(v179) = LODWORD(STACK[0x6890]) - ((2 * LODWORD(STACK[0x6890])) & 0xB0E7003C);
  LODWORD(v133) = LODWORD(STACK[0x6700]) - ((2 * LODWORD(STACK[0x6700])) & 0xB0E7003C);
  LODWORD(v19) = LODWORD(STACK[0x6880]) - ((2 * LODWORD(STACK[0x6880])) & 0xB0E7003C);
  LODWORD(STACK[0x6890]) = (v219 ^ (v75 + 635143390)) - ((2 * (v219 ^ (v75 + 635143390))) & 0x1A0A8BC2);
  LODWORD(v75) = LODWORD(STACK[0x68F0]) - ((2 * LODWORD(STACK[0x68F0])) & 0x1A0A8BC2);
  LODWORD(v21) = v214 ^ LODWORD(STACK[0x6920]);
  v228 = v214 - ((2 * v214) & 0x7D8E67D0);
  v229 = (v152 ^ (v75 + 218449377)) - ((2 * (v152 ^ (v75 + 218449377))) & 0x4BB709BC);
  LODWORD(v75) = (((_DWORD)v19 - 663519202) ^ v91 ^ 0x934704AC)
               - ((2 * (((_DWORD)v19 - 663519202) ^ v91 ^ 0x934704AC)) & 0x1724B036);
  LODWORD(STACK[0x6558]) = v91 ^ 0x934704AC;
  v230 = (v91 ^ 0x934704AC ^ (v179 - 663519202)) - ((2 * (v91 ^ 0x934704AC ^ (v179 - 663519202))) & 0x1724B036);
  v231 = (v152 ^ ((_DWORD)v23 + 218449377))
       - ((2 * (v152 ^ ((_DWORD)v23 + 218449377))) & 0x4BB709BC);
  LODWORD(v19) = LODWORD(STACK[0x69E0]) - ((2 * LODWORD(STACK[0x69E0])) & 0x7D8E67D0);
  LODWORD(STACK[0x6578]) = (_DWORD)v86;
  v232 = v91 ^ 0x934704AC ^ v86 ^ 0xFACBC278 ^ (v133 - 663519202);
  LODWORD(v21) = v182 ^ ((_DWORD)v21 - ((2 * (_DWORD)v21) & 0x90D19232) + 1214826777);
  LODWORD(v23) = (_DWORD)v21 - ((2 * (_DWORD)v21) & 0x7D8E67D0);
  LODWORD(v176) = LODWORD(STACK[0x6A00]) - 992330453;
  v233 = (v215 + 1214826777) ^ v176 ^ LODWORD(STACK[0x6598]) ^ v182 ^ 0xCC7A03F1;
  v234 = v91;
  v235 = v91 ^ v86 ^ 0x1F8E36E1 ^ 0xA5E32830 ^ ((v141 ^ 0x61AC4E1)
                                                            - 2 * ((v141 ^ 0x61AC4E1) & 0xB92581F ^ v141 & 4)
                                                            + 194140187);
  LODWORD(v21) = LODWORD(STACK[0x6598]) ^ 0xBB074598;
  LODWORD(STACK[0x6550]) = (_DWORD)v21;
  v236 = v182;
  LODWORD(STACK[0x6588]) = v176;
  v237 = ((v21 ^ (v228 + 1053242344))
        - ((2 * (v21 ^ (v228 + 1053242344))) & 0x90D19232)
        + 1214826777) ^ v176 ^ v182;
  LODWORD(v21) = v176 ^ v21;
  v238 = ((_DWORD)v19 + 1053242344) ^ v21 ^ v182 ^ 0x1D2BC98;
  LODWORD(STACK[0x6560]) = v182;
  v239 = (((v226 - 569453452) ^ v227) - ((2 * ((v226 - 569453452) ^ v227)) & 0x90D19232) + 1214826777) ^ v182 ^ 0x4A6586A8;
  LODWORD(STACK[0x6570]) = v86 ^ 0x1F8E36E1;
  v240 = (v75 + 194140187) ^ v86 ^ 0x2B769A9A;
  v241 = v21 ^ 0xC87D037B ^ ((_DWORD)v23 + 1053242344);
  LODWORD(v133) = STACK[0x6AC0];
  LODWORD(v182) = *(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 2319) - 4;
  LODWORD(STACK[0x6A00]) = v182;
  LODWORD(v21) = *(&off_1015B46D0 + (int)(v133 ^ 0x19C7)) - 4;
  LODWORD(STACK[0x68A0]) = (_DWORD)v21;
  LODWORD(v23) = (v207 ^ v224 ^ 0x31885F4)
               - v182
               + (_DWORD)v21
               - ((2 * ((v207 ^ v224 ^ 0x31885F4) - v182 + (_DWORD)v21) + 1932192156) & 0xEAC300A6);
  v242 = (v230 + 194140187) ^ v86 ^ 0x6E6F3EE0;
  LODWORD(STACK[0x69F0]) = (v209 + 635143390) ^ v219 ^ 0x5901E3CB;
  v243 = STACK[0x6610];
  v244 = LODWORD(STACK[0x6610]) ^ LODWORD(STACK[0x101C]) ^ (LODWORD(STACK[0x69D0]) + 1042832663);
  LODWORD(v21) = LODWORD(STACK[0x6820]) + 635143390;
  v245 = LODWORD(STACK[0x6610]) ^ (LODWORD(STACK[0x6A40]) + 635143390) ^ 0xB7D69351 ^ v219;
  v246 = LODWORD(STACK[0x6A50]) + 635143390;
  LODWORD(v23) = ((_DWORD)v23 + 787936545) ^ v237;
  LODWORD(STACK[0x68D0]) = (_DWORD)v23;
  v247 = (v23 & 1) == 0;
  v248 = v21 ^ 0xBB45C3C5 ^ v219;
  v249 = v246 ^ 0x1049029C ^ v219;
  if (v247)
    v250 = v248;
  else
    v250 = v246 ^ 0x1049029C ^ v219;
  LODWORD(STACK[0x6A50]) = v250;
  if (!v247)
    v249 = v245;
  LODWORD(STACK[0x6920]) = v249;
  if (v247)
    v248 = v244;
  LODWORD(STACK[0x6900]) = v248;
  if (v247)
    v251 = v245;
  else
    v251 = v244;
  LODWORD(STACK[0x6A40]) = v251;
  LODWORD(STACK[0x69C0]) = (LODWORD(STACK[0x6A30]) + 1) ^ LODWORD(STACK[0x6488]) ^ 0xAE830859;
  v252 = v243 ^ v227 ^ LODWORD(STACK[0x6A20]);
  v253 = v243 ^ v227 ^ (LODWORD(STACK[0x6810]) - 569453452) ^ 0x76B08F6C;
  if (v247)
    v254 = v225;
  else
    v254 = v224;
  LODWORD(STACK[0x6A30]) = v254;
  if (v247)
    v255 = v224;
  else
    v255 = v252;
  LODWORD(STACK[0x69E0]) = v255;
  if (!v247)
    v252 = v253;
  LODWORD(STACK[0x6A20]) = v252;
  if (!v247)
    v253 = v225;
  LODWORD(STACK[0x69D0]) = v253;
  v256 = LODWORD(STACK[0x69B0]) - 1277148381;
  v257 = LODWORD(STACK[0x6840]) - 1277148381;
  v258 = STACK[0x66D0];
  v259 = v256 ^ LODWORD(STACK[0x67B0]) ^ LODWORD(STACK[0x66D0]) ^ 0x30A7B5B7;
  v260 = v219;
  LODWORD(STACK[0x6540]) = v219;
  v261 = v256 ^ LODWORD(STACK[0x67E0]) ^ v219 ^ 0x164B0885;
  v262 = v256 ^ LODWORD(STACK[0x69A0]) ^ v219 ^ 0xDCA86B;
  LODWORD(STACK[0x63E0]) = v256;
  v263 = v256 ^ v257 ^ v258 ^ 0x4DA5DD81;
  if (v247)
    v264 = v262;
  else
    v264 = v261;
  if (v247)
    v265 = v261;
  else
    v265 = v263;
  if (v247)
    v266 = v259;
  else
    v266 = v262;
  if (v247)
    v267 = v263;
  else
    v267 = v259;
  LODWORD(STACK[0x6840]) = (v231 + 635143390) ^ v260 ^ 0x1DAEF437;
  v268 = (v229 + 635143390) ^ v260 ^ 0x6930F415;
  if (v247)
    v269 = v235;
  else
    v269 = v232;
  LODWORD(STACK[0x68F0]) = v269;
  if (v247)
    v270 = v232;
  else
    v270 = v240;
  LODWORD(STACK[0x69B0]) = v270;
  if (v247)
    v271 = v240;
  else
    v271 = v242;
  LODWORD(STACK[0x68E0]) = v271;
  if (v247)
    v272 = v242;
  else
    v272 = v235;
  LODWORD(STACK[0x69A0]) = v272;
  if (v247)
    v273 = v237 ^ 0xDF7D037B;
  else
    v273 = v241;
  LODWORD(STACK[0x6820]) = v273;
  if (v247)
    v274 = v241;
  else
    v274 = v233;
  if (v247)
    v275 = v238;
  else
    v275 = v237 ^ 0xDF7D037B;
  if (v247)
    v276 = v233;
  else
    v276 = v238;
  LODWORD(STACK[0x6810]) = v276;
  v277 = LODWORD(STACK[0x6460]) ^ LODWORD(STACK[0x6490]);
  v278 = LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x64B0]) ^ 0xC3FC8BB1 ^ v277;
  v279 = LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x6490]);
  v280 = LODWORD(STACK[0x6608]) ^ (LODWORD(STACK[0x6830]) + 1779520952) ^ 0x3B541474 ^ LODWORD(STACK[0x6618]);
  v281 = LODWORD(STACK[0x6618]) ^ 0xB58B2D32;
  v282 = LODWORD(STACK[0x6608]) ^ (LODWORD(STACK[0x6860]) + 126373147) ^ 0xE34621E5 ^ v281;
  v283 = STACK[0x6698];
  v284 = v234 ^ (LODWORD(STACK[0x67F0]) - 663519202) ^ 0xC1D5BD4C ^ LODWORD(STACK[0x6698]);
  v285 = LODWORD(STACK[0x67D0]) + 1304045781;
  v286 = LODWORD(STACK[0x67C0]) - 569453452;
  v287 = LODWORD(STACK[0x67A0]) + 1;
  v288 = STACK[0x6690];
  v289 = LODWORD(STACK[0x6690]) ^ v236 ^ (LODWORD(STACK[0x6750]) + 1214826777) ^ 0xB46384B1;
  v290 = LODWORD(STACK[0x6890]) + 218449377;
  v291 = LODWORD(STACK[0x6690]) ^ (LODWORD(STACK[0x6740]) - 569453452) ^ 0x203445E4;
  v292 = LODWORD(STACK[0x6A60]) ^ (LODWORD(STACK[0x6A90]) - ((2 * LODWORD(STACK[0x6A90])) & 0x36002410) + 452989448) ^ 0x15F64471 ^ LODWORD(STACK[0x6490]);
  v293 = (LODWORD(STACK[0x6850]) + 126373147) ^ LODWORD(STACK[0x1018]) ^ v281;
  v294 = (LODWORD(STACK[0x6800]) + 126373147) ^ 0xCCD51189 ^ v281;
  LODWORD(STACK[0x65D8]) = v293;
  if (v247)
    v295 = v280;
  else
    v295 = v293;
  if (v247)
    v296 = v294;
  else
    v296 = v280;
  LODWORD(STACK[0x6790]) = v296;
  LODWORD(STACK[0x6720]) = v282;
  if (v247)
    v297 = v282;
  else
    v297 = v294;
  v298 = v287 ^ 0xCAD5DA5D;
  v299 = LODWORD(STACK[0x6710]) ^ 0x785F4AD;
  LODWORD(STACK[0x6708]) = v284;
  v300 = STACK[0x6870];
  if (v247)
    v301 = v284;
  else
    v301 = STACK[0x6870];
  if (!v247)
    v300 = v299;
  LODWORD(STACK[0x6990]) = v300;
  LODWORD(STACK[0x65C0]) = v283 ^ v285 ^ 0xCBB63737;
  if (v247)
    v302 = v299;
  else
    v302 = v283 ^ v285 ^ 0xCBB63737;
  LODWORD(STACK[0x66A0]) = v289;
  if (v247)
    v303 = v239;
  else
    v303 = v289;
  if (v247)
    v304 = v288 ^ v286 ^ 0xF50E78B8;
  else
    v304 = v239;
  LODWORD(STACK[0x6600]) = v304;
  LODWORD(STACK[0x6630]) = v291;
  if (v247)
    v305 = v291;
  else
    v305 = v288 ^ v286 ^ 0xF50E78B8;
  v306 = LODWORD(STACK[0x6670]) ^ v290 ^ 0xFFB0B616;
  LODWORD(STACK[0x67F0]) = v278;
  LODWORD(STACK[0x65E8]) = v292;
  if (v247)
    v307 = v292;
  else
    v307 = v278;
  LODWORD(STACK[0x67B0]) = v279;
  if (v247)
    v308 = v279;
  else
    v308 = STACK[0x6930];
  LODWORD(STACK[0x65F0]) = v298;
  v309 = STACK[0x69C0];
  if (!v247)
    v309 = v298;
  LODWORD(STACK[0x6500]) = v309;
  LODWORD(STACK[0x6520]) = v306;
  if (v247)
    v310 = v306;
  else
    v310 = STACK[0x6840];
  LODWORD(STACK[0x6830]) = v268;
  if (v247)
    v311 = v268;
  else
    v311 = STACK[0x69F0];
  v312 = (STACK[0x68D0] & 2) == 0;
  if ((STACK[0x68D0] & 2) != 0)
    v313 = v265;
  else
    v313 = v266;
  LODWORD(STACK[0x67C0]) = v313;
  if (v312)
    v314 = v265;
  else
    v314 = v266;
  LODWORD(STACK[0x6730]) = v314;
  if (v312)
    v315 = v267;
  else
    v315 = v264;
  LODWORD(STACK[0x66A8]) = v315;
  if (v312)
    v316 = v264;
  else
    v316 = v267;
  LODWORD(STACK[0x6740]) = v316;
  if (v312)
    v317 = v275;
  else
    v317 = v274;
  LODWORD(STACK[0x66B8]) = v317;
  if (v312)
    v318 = v274;
  else
    v318 = v275;
  LODWORD(STACK[0x6850]) = v318;
  v319 = STACK[0x6950];
  v320 = STACK[0x6438];
  HIDWORD(v321) = *(_DWORD *)(STACK[0x6438] + 4 * (BYTE2(LODWORD(STACK[0x6970])) ^ 0x85u));
  LODWORD(v321) = HIDWORD(v321);
  v322 = (v321 >> 2) ^ __ROR4__(BYTE1(LODWORD(STACK[0x6970])) ^ 0x51BB7F67 ^ *(_DWORD *)(STACK[0x6950]+ 4* (BYTE1(LODWORD(STACK[0x6970])) ^ 0x70u)), 8) ^ (-437574216 * (v321 >> 2));
  v323 = STACK[0x66E0] & 0x4000000;
  LODWORD(STACK[0x65C8]) = v307;
  LODWORD(STACK[0x65B0]) = v308;
  if (v312)
    v324 = v308;
  else
    v324 = v307;
  LODWORD(STACK[0x6408]) = v324;
  LODWORD(STACK[0x6700]) = v295;
  LODWORD(STACK[0x65B8]) = v297;
  if (v312)
    v325 = v297;
  else
    v325 = v295;
  LODWORD(STACK[0x6628]) = v325;
  v326 = STACK[0x6920];
  if (!v312)
    v326 = STACK[0x6900];
  LODWORD(STACK[0x6880]) = v326;
  v327 = STACK[0x6A50];
  if (!v312)
    v327 = STACK[0x6A40];
  LODWORD(STACK[0x66B0]) = v327;
  v328 = STACK[0x69E0];
  if (!v312)
    v328 = STACK[0x69D0];
  LODWORD(STACK[0x66F8]) = v328;
  v329 = STACK[0x6A30];
  if (v312)
    v329 = STACK[0x6A20];
  LODWORD(STACK[0x67E0]) = v329;
  LODWORD(STACK[0x6688]) = v301;
  LODWORD(STACK[0x6680]) = v302;
  if (v312)
    v330 = v302;
  else
    v330 = v301;
  LODWORD(STACK[0x6750]) = v330;
  LODWORD(STACK[0x66D8]) = v303;
  LODWORD(STACK[0x6650]) = v305;
  if (v312)
    v331 = v305;
  else
    v331 = v303;
  LODWORD(STACK[0x67D0]) = v331;
  LODWORD(STACK[0x65D0]) = v310;
  LODWORD(STACK[0x6510]) = v311;
  if (v312)
    v310 = v311;
  LODWORD(STACK[0x6710]) = v310;
  v332 = STACK[0x69B0];
  if (!v312)
    v332 = STACK[0x69A0];
  LODWORD(STACK[0x66F0]) = v332;
  v333 = STACK[0x68E0];
  if (v312)
    v333 = STACK[0x68F0];
  LODWORD(STACK[0x66E0]) = v333;
  v334 = STACK[0x6820];
  if (!v312)
    v334 = STACK[0x6810];
  LODWORD(STACK[0x66E8]) = v334;
  if ((v323 & v322) != 0)
    v323 = -v323;
  v335 = LODWORD(STACK[0x65F8]) ^ (v323 + v322);
  v336 = *(_DWORD *)(STACK[0x6498] + 4 * (BYTE2(LODWORD(STACK[0x6668])) ^ 0x24u)) + 1264166829;
  v337 = LODWORD(STACK[0x6530]) ^ v336 ^ ((4 * v336) | 0x8707668);
  v338 = LODWORD(STACK[0x65E0]) ^ *(_DWORD *)(STACK[0x6910] + 4 * (BYTE2(LODWORD(STACK[0x6678])) ^ 0x5Bu));
  v339 = LODWORD(STACK[0x6518]) ^ *(_DWORD *)(v319 + 4 * (LODWORD(STACK[0x6528]) ^ 0xE9u));
  v340 = STACK[0x64D0] & 0x8000000;
  if ((v340 & STACK[0x64E8]) != 0)
    v340 = -v340;
  v341 = LODWORD(STACK[0x64D8]) ^ (v340 + LODWORD(STACK[0x64E8]));
  v342 = LODWORD(STACK[0x64B8]) ^ *(_DWORD *)(v319 + 4 * (LODWORD(STACK[0x64C0]) ^ 0x27u));
  v343 = LODWORD(STACK[0x64A8]) ^ *(_DWORD *)(STACK[0x6910] + 4 * (BYTE2(LODWORD(STACK[0x6960])) ^ 0x46u));
  HIDWORD(v344) = *(_DWORD *)(v320 + 4 * (LODWORD(STACK[0x6980]) ^ 0x82u));
  LODWORD(v344) = HIDWORD(v344);
  v345 = LODWORD(STACK[0x6760]) ^ ((4 * LODWORD(STACK[0x6478])) | 0x8707668);
  v346 = LODWORD(STACK[0x6470]) ^ (v344 >> 2) ^ (-437574216 * (v344 >> 2));
  HIDWORD(v344) = *(_DWORD *)(v320 + 4 * (BYTE2(LODWORD(STACK[0x6940])) ^ 0x8Bu));
  LODWORD(v344) = HIDWORD(v344);
  v347 = LODWORD(STACK[0x6450]) ^ (v344 >> 2) ^ (-437574216 * (v344 >> 2));
  v348 = LODWORD(STACK[0x6440]) ^ ((4 * LODWORD(STACK[0x6448])) | 0x8707668);
  LODWORD(STACK[0x6960]) = (LODWORD(STACK[0x6490]) ^ LODWORD(STACK[0x6A80]))
                         - ((2 * (LODWORD(STACK[0x6490]) ^ LODWORD(STACK[0x6A80]))) & 0x36002410);
  v349 = LODWORD(STACK[0x64A0]) - ((2 * LODWORD(STACK[0x64A0])) & 0x4BB709BC);
  v350 = LODWORD(STACK[0x6468]) - ((2 * LODWORD(STACK[0x6468])) & 0xD422AB70);
  v351 = v277 ^ LODWORD(STACK[0x68C0]);
  LODWORD(STACK[0x6910]) = (v277 ^ LODWORD(STACK[0x68B0])) - ((2 * (v277 ^ LODWORD(STACK[0x68B0]))) & 0x36002410);
  v352 = v345 - ((2 * v345) & 0xD422AB70);
  v353 = LODWORD(STACK[0x6A10]) - ((2 * LODWORD(STACK[0x6A10])) & 0xF109A36);
  v354 = STACK[0x6540];
  LODWORD(STACK[0x6860]) = ((v349 + 635143390) ^ LODWORD(STACK[0x6540]))
                         - ((2 * ((v349 + 635143390) ^ LODWORD(STACK[0x6540]))) & 0x7C50BA2E);
  LODWORD(STACK[0x6A10]) = v351 - ((2 * v351) & 0x36002410);
  v355 = LODWORD(STACK[0x6658]) - ((2 * LODWORD(STACK[0x6658])) & 0xBC1DA8E8);
  v356 = STACK[0x6590];
  v357 = (v341 - ((2 * v341) & 0x1A0A8BC2) + 218449377) ^ LODWORD(STACK[0x6590]);
  LODWORD(STACK[0x6970]) = v357 - ((2 * v357) & 0x36002410);
  v358 = STACK[0x6568];
  LODWORD(STACK[0x68C0]) = ((v350 + 1779520952) ^ LODWORD(STACK[0x6568]))
                         - ((2 * ((v350 + 1779520952) ^ LODWORD(STACK[0x6568]))) & 0xF109A36);
  LODWORD(STACK[0x6890]) = ((v346 - ((2 * v346) & 0xF109A36) + 126373147) ^ v281)
                         - ((2 * ((v346 - ((2 * v346) & 0xF109A36) + 126373147) ^ v281)) & 0xD422AB70);
  v359 = LODWORD(STACK[0x64E0]) - ((2 * LODWORD(STACK[0x64E0])) & 0x1A0A8BC2);
  LODWORD(STACK[0x63D0]) = v281;
  v360 = ((v353 + 126373147) ^ v281) - ((2 * ((v353 + 126373147) ^ v281)) & 0xD422AB70);
  v361 = LODWORD(STACK[0x64C8]) - ((2 * LODWORD(STACK[0x64C8])) & 0x7C50BA2E);
  v362 = LODWORD(STACK[0x6780]) - ((2 * LODWORD(STACK[0x6780])) & 0x7C50BA2E);
  LODWORD(STACK[0x6870]) = ((v359 + 218449377) ^ v356) - ((2 * ((v359 + 218449377) ^ v356)) & 0x36002410);
  v363 = (v343 - ((2 * v343) & 0x4BB709BC) + 635143390) ^ v354;
  v364 = v363 - ((2 * v363) & 0x7C50BA2E);
  v365 = STACK[0x6580];
  LODWORD(STACK[0x6980]) = ((v361 + 1042832663) ^ LODWORD(STACK[0x6580]))
                         - ((2 * ((v361 + 1042832663) ^ LODWORD(STACK[0x6580]))) & 0x4BB709BC);
  v366 = LODWORD(STACK[0x64F8]) - ((2 * LODWORD(STACK[0x64F8])) & 0x36002410);
  LODWORD(STACK[0x6678]) = ((v352 + 1779520952) ^ v358) - ((2 * ((v352 + 1779520952) ^ v358)) & 0xF109A36);
  v367 = LODWORD(STACK[0x6770]) - ((2 * LODWORD(STACK[0x6770])) & 0xBC1DA8E8);
  v368 = (v342 - ((2 * v342) & 0x7C50BA2E) + 1042832663) ^ v365;
  v369 = v368 - ((2 * v368) & 0x4BB709BC);
  v370 = STACK[0x6488];
  LODWORD(STACK[0x6950]) = ((v366 + 452989448) ^ LODWORD(STACK[0x6488]))
                         - ((2 * ((v366 + 452989448) ^ LODWORD(STACK[0x6488]))) & 0x1A0A8BC2);
  v371 = (LODWORD(STACK[0x64F0]) - ((2 * LODWORD(STACK[0x64F0])) & 0x36002410) + 452989448) ^ v370;
  LODWORD(STACK[0x6940]) = v371 - ((2 * v371) & 0x1A0A8BC2);
  v372 = STACK[0x6548];
  v373 = ((v355 - 569453452) ^ v372) - ((2 * ((v355 - 569453452) ^ v372)) & 0x7C50BA2E);
  v374 = (v335 - ((2 * v335) & 0x7C50BA2E) + 1042832663) ^ v365;
  v375 = v374 - 569453452 + (~(2 * v374) | 0x43E25717);
  v376 = v348 - ((2 * v348) & 0xB0E7003C);
  v377 = LODWORD(STACK[0x6458]) - ((2 * LODWORD(STACK[0x6458])) & 0x9B7451AA);
  v378 = ((v367 - 569453452) ^ v372) - ((2 * ((v367 - 569453452) ^ v372)) & 0x7C50BA2E);
  v379 = LODWORD(STACK[0x6480]) - ((2 * LODWORD(STACK[0x6480])) & 0x9B7451AA);
  v380 = STACK[0x6538];
  v381 = ((v377 + 1304045781) ^ v380) - ((2 * ((v377 + 1304045781) ^ v380)) & 0xB0E7003C);
  v382 = ((v362 + 1042832663) ^ v365) - ((2 * ((v362 + 1042832663) ^ v365)) & 0xBC1DA8E8);
  v383 = STACK[0x6558];
  v384 = ((v376 - 663519202) ^ v383) - ((2 * ((v376 - 663519202) ^ v383)) & 0x9B7451AA);
  v385 = ((v347 - ((2 * v347) & 0x9B7451AA) + 1304045781) ^ v380)
       - ((2 * ((v347 - ((2 * v347) & 0x9B7451AA) + 1304045781) ^ v380)) & 0xB0E7003C);
  v386 = v339 - ((2 * v339) & 0xB0E7003C);
  v387 = LODWORD(STACK[0x6648]) - ((2 * LODWORD(STACK[0x6648])) & 0x1724B036);
  v388 = v338 - ((2 * v338) & 0xB0E7003C);
  v389 = ((v386 - 663519202) ^ v383) - ((2 * ((v386 - 663519202) ^ v383)) & 0x1724B036);
  v390 = ((v387 + 194140187) ^ LODWORD(STACK[0x6570]))
       - ((2 * ((v387 + 194140187) ^ LODWORD(STACK[0x6570]))) & 0xB0E7003C);
  v391 = (v337 - ((2 * v337) & 0x1724B036) + 194140187) ^ LODWORD(STACK[0x6570]);
  v392 = v391 - ((2 * v391) & 0xB0E7003C);
  v393 = (((LODWORD(STACK[0x6430]) + 1053242344) ^ LODWORD(STACK[0x6550]))
        - ((2 * ((LODWORD(STACK[0x6430]) + 1053242344) ^ LODWORD(STACK[0x6550]))) & 0x90D19232)
        + 1214826777) ^ LODWORD(STACK[0x6560]);
  v394 = v393 - ((2 * v393) & 0x89B47A56);
  v395 = ((v388 - 663519202) ^ v383) - ((2 * ((v388 - 663519202) ^ v383)) & 0x1724B036);
  v396 = LODWORD(STACK[0x68A0]) - LODWORD(STACK[0x6A00]);
  v397 = (v378 + 1042832663) ^ v365;
  LODWORD(STACK[0x68B0]) = v397 ^ 0x86BF1D9A;
  HIDWORD(v344) = v397 ^ 0x86BF1D9A;
  LODWORD(v344) = v397 ^ 0x86BF1D9A;
  LODWORD(STACK[0x6A80]) = (v344 >> 28) - ((2 * (v344 >> 28)) & 0xF5B950D4);
  LODWORD(STACK[0x68A0]) = (v397 ^ 0x86BF1D9A) & 0xB61C09D ^ v397 & 5;
  v398 = LODWORD(STACK[0x6A60]) ^ 0x4BA919F6 ^ (LODWORD(STACK[0x6960]) + 452989448);
  v399 = LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6A90]);
  v400 = 2 * LODWORD(STACK[0x6490]);
  LODWORD(STACK[0x62B0]) = v400;
  v401 = v399 ^ 0xD74EBFE2 ^ (LODWORD(STACK[0x65A0]) - (v400 & 0x36002410) + 729478246);
  v402 = (LODWORD(STACK[0x6910]) + 452989448) ^ v370 ^ 0xCDC2025;
  v403 = (LODWORD(STACK[0x6A10]) + 452989448) ^ v370 ^ 0xC92D5672;
  v404 = (((v379 + 1304045781) ^ v380) - ((2 * ((v379 + 1304045781) ^ v380)) & 0xB0E7003C) - 663519202) ^ v383;
  v405 = (v394 - 992330453) ^ LODWORD(STACK[0x6588]);
  v396 += 966096078;
  LODWORD(STACK[0x6780]) = v396;
  LODWORD(STACK[0x66C0]) = v405;
  v406 = (v396 + (v397 ^ 0xCA564406 ^ v404)) ^ v405;
  LODWORD(STACK[0x6910]) = v406 ^ 0xCD984A71;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v407 = v398;
  else
    v407 = v401;
  LODWORD(STACK[0x6A10]) = v407;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v408 = v402;
  else
    v408 = v398;
  LODWORD(STACK[0x6800]) = v408;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v409 = v401;
  else
    v409 = v403;
  LODWORD(STACK[0x67A0]) = v409;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v410 = v403;
  else
    v410 = v402;
  LODWORD(STACK[0x6A00]) = v410;
  v411 = LODWORD(STACK[0x6608]) ^ 0x5744AEEC ^ (LODWORD(STACK[0x6890]) + 1779520952);
  v412 = LODWORD(STACK[0x6608]) ^ 0x6A5CDFD ^ (v360 + 1779520952);
  v413 = LODWORD(STACK[0x6610]) ^ 0x349248A3 ^ (LODWORD(STACK[0x6860]) + 1042832663);
  v414 = STACK[0x6610];
  v415 = LODWORD(STACK[0x6610]) ^ 0x8D9EC39 ^ (v364 + 1042832663);
  v416 = LODWORD(STACK[0x66D0]) ^ (v369 + 635143390) ^ 0xA2DCA7FE;
  v417 = LODWORD(STACK[0x66D0]) ^ (LODWORD(STACK[0x6980]) + 635143390) ^ 0x16FEA6C5;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v418 = LODWORD(STACK[0x6610]) ^ 0x349248A3 ^ (LODWORD(STACK[0x6860]) + 1042832663);
  else
    v418 = LODWORD(STACK[0x6610]) ^ 0x8D9EC39 ^ (v364 + 1042832663);
  LODWORD(STACK[0x6980]) = v418;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v413 = v416;
  LODWORD(STACK[0x6770]) = v413;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v419 = v417;
  else
    v419 = v416;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v420 = v415;
  else
    v420 = v417;
  LODWORD(STACK[0x6760]) = v420;
  v421 = LODWORD(STACK[0x64B0]) ^ LODWORD(STACK[0x1024]) ^ (LODWORD(STACK[0x6870]) + 452989448);
  v422 = v414 ^ 0x891C5178 ^ (v373 + 1042832663);
  v423 = LODWORD(STACK[0x64B0]) ^ 0x36C901EE ^ (LODWORD(STACK[0x6970]) + 452989448);
  v424 = STACK[0x6690];
  v425 = LODWORD(STACK[0x6690]) ^ (v375 + 1) ^ 0x6003F5DD;
  v426 = v397 ^ 0xBAE917A5;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v427 = v414 ^ 0x891C5178 ^ (v373 + 1042832663);
  else
    v427 = LODWORD(STACK[0x6690]) ^ (v375 + 1) ^ 0x6003F5DD;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v422 = v426;
  LODWORD(STACK[0x6970]) = v422;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v428 = v424 ^ (v382 - 569453452) ^ 0xB2C80A4B;
  else
    v428 = v426;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v429 = v425;
  else
    v429 = v424 ^ (v382 - 569453452) ^ 0xB2C80A4B;
  LODWORD(STACK[0x6960]) = v429;
  v430 = LODWORD(STACK[0x6620]) ^ 0xF18A92F2 ^ (v385 - 663519202);
  v431 = LODWORD(STACK[0x6620]) ^ 0xAA9E7B7B ^ (v381 - 663519202);
  v432 = LODWORD(STACK[0x6620]) ^ 0x703B510C ^ (v392 - 663519202);
  v433 = LODWORD(STACK[0x6578]) ^ 0x620BC90C ^ (v389 + 194140187);
  v434 = LODWORD(STACK[0x6620]) ^ 0xABFF57DE ^ (v390 - 663519202);
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v435 = LODWORD(STACK[0x6578]) ^ 0xAF5FC020 ^ (v395 + 194140187);
  else
    v435 = v432;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v436 = v432;
  else
    v436 = LODWORD(STACK[0x6578]) ^ 0x620BC90C ^ (v389 + 194140187);
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v437 = v434;
  else
    v437 = LODWORD(STACK[0x6578]) ^ 0xAF5FC020 ^ (v395 + 194140187);
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v438 = v433;
  else
    v438 = v434;
  v439 = LODWORD(STACK[0x6950]) + 218449377;
  v440 = LODWORD(STACK[0x6940]) + 218449377;
  v441 = v404 ^ 0xD46CB0F5;
  v442 = LODWORD(STACK[0x6618]) ^ (LODWORD(STACK[0x6678]) + 126373147) ^ 0x4512FE0C;
  v443 = LODWORD(STACK[0x6618]) ^ (LODWORD(STACK[0x68C0]) + 126373147) ^ 0x774C8EDF;
  LODWORD(STACK[0x64A0]) = v442;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v444 = v442;
  else
    v444 = v411;
  if (((v406 ^ 0xCD984A71) & 1) == 0)
    v411 = v443;
  LODWORD(STACK[0x6950]) = v411;
  LODWORD(STACK[0x64E8]) = v412;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v445 = v443;
  else
    v445 = v412;
  v446 = STACK[0x6670];
  v447 = LODWORD(STACK[0x6670]) ^ v440 ^ 0xD77B4831;
  v448 = LODWORD(STACK[0x6670]) ^ v439 ^ 0x1F9243F2;
  v449 = LODWORD(STACK[0x6698]) ^ (v384 + 1304045781) ^ 0x8B5582D3;
  LODWORD(STACK[0x6458]) = v449;
  if (((v406 ^ 0xCD984A71) & 1) == 0)
  {
    v449 = v430;
    v430 = v431;
  }
  LODWORD(STACK[0x6940]) = v430;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v450 = v431;
  else
    v450 = v441;
  LODWORD(STACK[0x64E0]) = v421;
  LODWORD(STACK[0x6470]) = v448;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v451 = v421;
  else
    v451 = v448;
  LODWORD(STACK[0x64C8]) = v423;
  LODWORD(STACK[0x6478]) = v447;
  if (((v406 ^ 0xCD984A71) & 1) != 0)
    v452 = v423;
  else
    v452 = v447;
  LODWORD(STACK[0x68C0]) = v406;
  if ((v406 & 2) != 0)
    v453 = v449;
  else
    v453 = v450;
  LODWORD(STACK[0x64D8]) = v453;
  if ((v406 & 2) == 0)
    v450 = v449;
  LODWORD(STACK[0x64D0]) = v450;
  v454 = (((LODWORD(STACK[0x6710]) ^ 0xA8ACC5FB) + 1465072133) ^ ((LODWORD(STACK[0x6710]) ^ 0xF8EDCCF8) + 118633224) ^ ((LODWORD(STACK[0x6710]) ^ 0x60ADFFA7) - 1622015911))
       - (((LODWORD(STACK[0x6850]) ^ 0x24642D33) - 610544947) ^ ((LODWORD(STACK[0x6850]) ^ 0xBE438750) + 1102870704) ^ ((LODWORD(STACK[0x6850]) ^ 0x1747E2C9) - 390587081))
       + 1435913407;
  v455 = (v454 ^ 0x2B455AFB) & (2 * (v454 & 0x8B4590E3)) ^ v454 & 0x8B4590E3;
  v456 = ((2 * (v454 ^ 0x3DC77B7F)) ^ 0x6D05D738) & (v454 ^ 0x3DC77B7F) ^ (2 * (v454 ^ 0x3DC77B7F)) & 0xB682EB9C;
  v457 = (v456 ^ 0xA480EB18) & (4 * v455) ^ v455;
  v458 = ((4 * (v456 ^ 0x92822884)) ^ 0xDA0BAE70) & (v456 ^ 0x92822884) ^ (4 * (v456 ^ 0x92822884)) & 0xB682EB9C;
  v459 = (v458 ^ 0x9202AA10) & (16 * v457) ^ v457;
  v460 = ((16 * (v458 ^ 0x2480418C)) ^ 0x682EB9C0) & (v458 ^ 0x2480418C) ^ (16 * (v458 ^ 0x2480418C)) & 0xB682EB90;
  v461 = v459 ^ 0xB682EB9C ^ (v460 ^ 0x2002A91C) & (v459 << 8);
  v462 = (v461 << 16) & 0x36820000 ^ v461 ^ ((v461 << 16) ^ 0x2B9C0000) & (((v460 ^ 0x9680421C) << 8) & 0x36820000 ^ 0x34000000 ^ (((v460 ^ 0x9680421C) << 8) ^ 0x2EB0000) & (v460 ^ 0x9680421C));
  v463 = (((LODWORD(STACK[0x6880]) ^ 0x66AA0F73) - 1722421107) ^ ((LODWORD(STACK[0x6880]) ^ 0xFA7637D1) + 92915759) ^ ((LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x1028])) - 2134814628))
       - 1674824122;
  v464 = (v463 ^ 0x55941BC3) & (2 * (v463 & 0x99A05BEB)) ^ v463 & 0x99A05BEB;
  v465 = ((2 * (v463 ^ 0x67940905)) ^ 0xFC68A5DC) & (v463 ^ 0x67940905) ^ (2 * (v463 ^ 0x67940905)) & 0xFE3452EE;
  v466 = (v465 ^ 0xEC0000CC) & (4 * v464) ^ v464;
  v467 = ((4 * (v465 ^ 0x2145222)) ^ 0xF8D14BB8) & (v465 ^ 0x2145222) ^ (4 * (v465 ^ 0x2145222)) & 0xFE3452EC;
  v468 = (v467 ^ 0xF81042A0) & (16 * v466) ^ v466;
  v469 = ((16 * (v467 ^ 0x6241046)) ^ 0xE3452EE0) & (v467 ^ 0x6241046) ^ (16 * (v467 ^ 0x6241046)) & 0xFE3452E0;
  v470 = v468 ^ 0xFE3452EE ^ (v469 ^ 0xE2040200) & (v468 << 8);
  v471 = (v470 << 16) & 0x7E340000 ^ v470 ^ ((v470 << 16) ^ 0x52EE0000) & (((v469 ^ 0x1C30500E) << 8) & 0x7E340000 ^ 0x4A240000 ^ (((v469 ^ 0x1C30500E) << 8) ^ 0x34520000) & (v469 ^ 0x1C30500E));
  v472 = (((LODWORD(STACK[0x67D0]) ^ 0x14929EF6) - 345153270) ^ ((LODWORD(STACK[0x67D0]) ^ 0x30CFABE7) - 818916327) ^ ((LODWORD(STACK[0x67D0]) ^ 0x72B94F7D) - 1924747133))
       + (((LODWORD(STACK[0x67C0]) ^ 0xD14FA5A6) - 858334610) ^ ((LODWORD(STACK[0x67C0]) ^ 0xA2ADF4C7) - 1087075571) ^ ((LODWORD(STACK[0x67C0]) ^ 0x43934292) + 1577729370))
       - 1767753869;
  v473 = (2 * (v472 & 0x9259D6C0 ^ 0xC10C2178)) & 0x80002100 ^ v472 & 0x9259D6C0 ^ 0xC10C2178 ^ ((2
                                                                                                * (v472 & 0x9259D6C0 ^ 0xC10C2178)) ^ 0x821842F0) & (v472 ^ 0x5355F7B8);
  v474 = (2 * (v472 ^ 0x5355F7B8)) & 0xC10C2178 ^ 0x41042108 ^ ((2 * (v472 ^ 0x5355F7B8)) ^ 0x821842F0) & (v472 ^ 0x5355F7B8);
  v475 = (4 * v473) & 0xC10C2178 ^ v473 ^ ((4 * v473) ^ 0x43085E0) & v474;
  v476 = (4 * v474) & 0xC10C2178 ^ 0xC10C2018 ^ ((4 * v474) ^ 0x43085E0) & v474;
  v477 = (16 * v475) & 0xC10C2170 ^ v475 ^ ((16 * v475) ^ 0x10C20180) & v476;
  v478 = (16 * v476) & 0xC10C2170 ^ 0xC10C2078 ^ ((16 * v476) ^ 0x10C21780) & v476;
  v479 = v477 ^ 0x80000060 ^ (v477 << 8) & 0xC10C2100 ^ ((v477 << 8) ^ 0xC211800) & v478;
  v480 = (v479 << 16) & 0x410C0000 ^ v479 ^ ((v479 << 16) ^ 0x21780000) & ((v478 << 8) & 0xC10C0000 ^ 0x410C0000 ^ ((v478 << 8) ^ 0xC210000) & v478);
  v481 = (4 * v462) ^ (2 * (v454 ^ LODWORD(STACK[0x66F0])));
  v482 = (((v481 ^ 0xBDBC39A) - 1809761351) ^ ((v481 ^ 0x151301D6) - 1964377611) ^ ((v481 ^ 0x85E714FE) + 438168797))
       + 667593982;
  v483 = (v482 ^ 0xE1163A36) & (2 * (v482 & 0xF1A6A236)) ^ v482 & 0xF1A6A236;
  v484 = ((2 * (v482 ^ 0x22167E7A)) ^ 0xA761B898) & (v482 ^ 0x22167E7A) ^ (2 * (v482 ^ 0x22167E7A)) & 0xD3B0DC4C;
  v485 = (v484 ^ 0x9320DC0C) & (4 * v483) ^ v483;
  v486 = ((4 * (v484 ^ 0x50904444)) ^ 0x4EC37130) & (v484 ^ 0x50904444) ^ (4 * (v484 ^ 0x50904444)) & 0xD3B0DC4C;
  v487 = (v486 ^ 0x42805000) & (16 * v485) ^ v485;
  v488 = ((16 * (v486 ^ 0x91308C4C)) ^ 0x3B0DC4C0) & (v486 ^ 0x91308C4C) ^ (16 * (v486 ^ 0x91308C4C)) & 0xD3B0DC40;
  v489 = v487 ^ 0xD3B0DC4C ^ (v488 ^ 0x1300C40C) & (v487 << 8);
  v490 = (v489 << 16) & 0x53B00000 ^ v489 ^ ((v489 << 16) ^ 0x5C4C0000) & (((v488 ^ 0xC0B0180C) << 8) & 0x53B00000 ^ 0x43200000 ^ (((v488 ^ 0xC0B0180C) << 8) ^ 0xB0DC0000) & (v488 ^ 0xC0B0180C));
  v491 = LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x67E0]) ^ v463;
  v492 = STACK[0x6AA0];
  v493 = (v492 ^ 0xDAF7B024) & (2 * (v492 & 0x58E7A2B6)) ^ v492 & 0x58E7A2B6;
  v494 = ((2 * (v492 ^ 0xCBBAB104)) ^ 0x26BA2764) & (v492 ^ 0xCBBAB104) ^ (2 * (v492 ^ 0xCBBAB104)) & 0x135D13B2;
  v495 = (v494 ^ 0x12580322) & (4 * v493) ^ v493;
  v496 = ((4 * (v494 ^ 0x11451092)) ^ 0x4D744EC8) & (v494 ^ 0x11451092) ^ (4 * (v494 ^ 0x11451092)) & 0x135D13B0;
  v497 = (v496 ^ 0x1540292) & (16 * v495) ^ v495;
  v498 = ((16 * (v496 ^ 0x12091132)) ^ 0x35D13B20) & (v496 ^ 0x12091132) ^ (16 * (v496 ^ 0x12091132)) & 0x135D13B0;
  v499 = LODWORD(STACK[0x6AA0]) ^ (2
                                 * (((v497 ^ 0x135D13B2 ^ (v498 ^ LODWORD(STACK[0x102C])) & (v497 << 8)) << 16) & 0x135D0000 ^ v497 ^ 0x135D13B2 ^ (v498 ^ LODWORD(STACK[0x102C])) & (v497 << 8) ^ (((v497 ^ 0x135D13B2 ^ (v498 ^ LODWORD(STACK[0x102C])) & (v497 << 8)) << 16) ^ 0x13B20000) & (((v498 ^ 0x20C0092) << 8) & 0x135D0000 ^ 0x24C0000 ^ (((v498 ^ 0x20C0092) << 8) ^ 0x5D130000) & (v498 ^ 0x20C0092))));
  v500 = STACK[0x6A70];
  LODWORD(STACK[0x6860]) = LODWORD(STACK[0x6A70]) - 308265999;
  v501 = STACK[0xD990];
  v502 = v499 ^ 0xD87D85D2;
  v503 = (((((v491 ^ (2 * v471)) >> 1) ^ 0xF32B1615) - 710023685) ^ ((((v491 ^ (2 * v471)) >> 1) ^ 0x5A7EFD56)
                                                                                 + 2096631482) ^ ((((v491 ^ (2 * v471)) >> 1) ^ 0xC8EADB76)
                                                                                                - 294901606))
       - 2062390370;
  v504 = (v503 ^ 0x6E6E8D53) & (2 * (v503 & 0x8C801064)) ^ v503 & 0x8C801064;
  v505 = ((2 * (v503 ^ 0x7E6EAD13)) ^ 0xE5DD7AEE) & (v503 ^ 0x7E6EAD13) ^ (2 * (v503 ^ 0x7E6EAD13)) & 0xF2EEBD76;
  v506 = (v505 ^ 0x60220420) & (4 * v504) ^ v504;
  v507 = ((4 * (v505 ^ 0x12228511)) ^ 0xCBBAF5DC) & (v505 ^ 0x12228511) ^ (4 * (v505 ^ 0x12228511)) & 0xF2EEBD74;
  v508 = (v507 ^ 0xC2AAB543) & (16 * v506) ^ v506;
  v509 = ((16 * (v507 ^ 0x30440823)) ^ 0x2EEBD770) & (v507 ^ 0x30440823) ^ (16 * (v507 ^ 0x30440823)) & 0xF2EEBD70;
  v510 = v508 ^ 0xF2EEBD77 ^ (v509 ^ 0x22EA9500) & (v508 << 8);
  v511 = (*(_QWORD *)(v501 + 8 * ((*(_QWORD *)(v501 + 8 * (0xFA01072C % (v500 - 308265999))) + 3676206819) % v502))
        + 2327007895)
       % v502;
  LODWORD(STACK[0x6450]) = LODWORD(STACK[0x68B0]) - 1956527976 - 2 * LODWORD(STACK[0x68A0]);
  v512 = v472 ^ LODWORD(STACK[0x6740]) ^ (2 * v480);
  v513 = (*(_QWORD *)(v501 + 8 * v511) + 2053125614) % v502;
  v514 = v503 ^ (2
               * ((v510 << 16) & 0x72EE0000 ^ v510 ^ ((v510 << 16) ^ 0x3D770000) & (((v509 ^ 0xD0042807) << 8) & 0xF2EE0000 ^ 0x10420000 ^ (((v509 ^ 0xD0042807) << 8) ^ 0x6EBD0000) & (v509 ^ 0xD0042807))));
  STACK[0x6A90] = v501;
  v515 = *(_QWORD *)(v501 + 8 * v513) + 1951837419;
  STACK[0x6870] = v502;
  LODWORD(v515) = v515 % v502 - ((2 * (v515 % v502)) & 0x3171264C) - 1732734170;
  LODWORD(v513) = LODWORD(STACK[0x6640]) + 218449377;
  LODWORD(STACK[0x64F0]) = LODWORD(STACK[0x6638]) + 218449377;
  LODWORD(STACK[0x6530]) = v446 ^ v513 ^ 0xD4079926;
  LODWORD(v513) = LODWORD(STACK[0x6A80]) - 86202262;
  LODWORD(STACK[0x64A8]) = v441;
  LODWORD(STACK[0x6658]) = (__ROR4__(v513 ^ __ROR4__(v441, 28) ^ 0x5902039E, 4) ^ 0xD2B803D6) + LODWORD(STACK[0x6780]);
  LODWORD(STACK[0x6890]) = v512 >> 1;
  LODWORD(STACK[0x6A80]) = (((v515 ^ 0xD977D960) + 1083718332) ^ ((v515 ^ 0x6827180C) - 238486568) ^ ((v515 ^ 0x29E8524A) - 1341673070))
                         + 1606087777;
  v516 = STACK[0x6800];
  if ((v406 & 2) == 0)
    v516 = STACK[0x67A0];
  LODWORD(STACK[0x63F8]) = v516;
  v517 = STACK[0x6A10];
  if ((v406 & 2) == 0)
    v517 = STACK[0x6A00];
  LODWORD(STACK[0x6400]) = v517;
  LODWORD(STACK[0x6648]) = v444;
  LODWORD(STACK[0x65F8]) = v445;
  if ((v406 & 2) != 0)
    v518 = v445;
  else
    v518 = v444;
  LODWORD(STACK[0x65E0]) = v518;
  v519 = STACK[0x6770];
  if ((v406 & 2) != 0)
    v519 = STACK[0x6760];
  LODWORD(STACK[0x6638]) = v519;
  LODWORD(STACK[0x6518]) = v419;
  v520 = STACK[0x6980];
  if ((v406 & 2) == 0)
    v520 = v419;
  LODWORD(STACK[0x6640]) = v520;
  LODWORD(STACK[0x6498]) = v451;
  LODWORD(STACK[0x6480]) = v452;
  if ((v406 & 2) != 0)
    v521 = v451;
  else
    v521 = v452;
  LODWORD(STACK[0x6428]) = v521;
  LODWORD(STACK[0x6678]) = v427;
  LODWORD(STACK[0x6668]) = v428;
  if ((v406 & 2) != 0)
    v522 = v427;
  else
    v522 = v428;
  LODWORD(STACK[0x6468]) = v522;
  LODWORD(STACK[0x6528]) = v435;
  LODWORD(STACK[0x64F8]) = v438;
  if ((v406 & 2) != 0)
    v523 = v438;
  else
    v523 = v435;
  LODWORD(STACK[0x63D8]) = v523;
  LODWORD(STACK[0x64C0]) = v436;
  LODWORD(STACK[0x64B8]) = v437;
  if ((v406 & 2) != 0)
    v524 = v437;
  else
    v524 = v436;
  LODWORD(STACK[0x63C8]) = v524;
  LODWORD(STACK[0x68A0]) = v514;
  LODWORD(STACK[0x68B0]) = v482 ^ (2 * v490);
  STACK[0x6A60] = STACK[0xD9B0];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AC0])))();
}

uint64_t sub_100B67DC8@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _BOOL4 v54;

  v6 = STACK[0x6A80];
  v7 = LODWORD(STACK[0x6A80]) < 0x6112655F;
  v8 = 8 * ((a2 | ((unint64_t)(a2 < v2) << 32)) + 0x47C77A5ED18B4FFFLL) - 0x3E3BD2F9C6577260;
  v9 = *(_QWORD *)(STACK[0x6A90] + v8);
  v10 = v9 * a1 - 0x64648195D0C31779;
  v11 = (v10 ^ 0x5152EDD198FA5679) & (2 * (v10 & (LODWORD(STACK[0x6AC0]) ^ 0x64648195D0C306C2))) ^ v10 & (LODWORD(STACK[0x6AC0]) ^ 0x64648195D0C306C2);
  v12 = ((2 * (v10 ^ 0xD913EFD2B9785E39)) ^ 0x7AEEDC8ED3769280) & (v10 ^ 0xD913EFD2B9785E39) ^ (2 * (v10 ^ 0xD913EFD2B9785E39)) & 0xBD776E4769BB4940;
  v13 = ((4 * (v12 ^ 0x8511224128894940)) ^ 0xF5DDB91DA6ED2500) & (v12 ^ 0x8511224128894940) ^ (4 * (v12 ^ 0x8511224128894940)) & 0xBD776E4769BB4940;
  v14 = (v13 ^ 0xB555280520A90100) & (16 * ((v12 ^ 0x34272C0669910000) & (4 * v11) ^ v11)) ^ (v12 ^ 0x34272C0669910000) & (4 * v11) ^ v11;
  v15 = ((16 * (v13 ^ 0x822464249124840)) ^ 0xD776E4769BB49400) & (v13 ^ 0x822464249124840) ^ (16 * (v13 ^ 0x822464249124840)) & 0xBD776E4769BB4940;
  v16 = (v15 ^ 0x9576644609B00000) & (v14 << 8) ^ v14;
  v17 = (((v15 ^ 0x28010A01600B4940) << 8) ^ 0x776E4769BB494000) & (v15 ^ 0x28010A01600B4940) ^ ((v15 ^ 0x28010A01600B4940) << 8) & 0xBD776E4769BB4900;
  v18 = v16 ^ 0xBD776E4769BB4940 ^ (v17 ^ 0x3566464129090000) & (v16 << 16);
  v19 = v10 ^ (2
             * ((v18 << 32) & 0x3D776E4700000000 ^ v18 ^ ((v18 << 32) ^ 0x69BB494000000000) & (((v17 ^ 0x8811280640B20940) << 16) & 0x3D776E4700000000 ^ 0x1130064400000000 ^ (((v17 ^ 0x8811280640B20940) << 16) ^ 0x6E4769BB00000000) & (v17 ^ 0x8811280640B20940))));
  v20 = (a2 | ((unint64_t)(a2 < v2) << 32))
      - 0x48200AD99AA3D66ALL
      + (((v19 ^ v3 ^ 0x28CEB383CFD2EEB1) - 0x1662723871DF0504) ^ ((v19 ^ v3 ^ 0xBE38E6A98C9D8F2CLL)
                                                                     + 0x7F6BD8EDCD6F9B67) ^ ((v19 ^ v3 ^ 0xDA1A98B140FAE464)
                                                                                              + 0x1B49A6F50108F02FLL));
  v21 = ((2 * (v20 ^ 0x79F8C950EFB8407ELL)) ^ 0x8731BF523D49CC2ELL) & (v20 ^ 0x79F8C950EFB8407ELL) ^ (2 * (v20 ^ 0x79F8C950EFB8407ELL)) & 0xC398DFA91EA4E616;
  v22 = v21 ^ 0x408840A902A42211;
  v23 = (v20 ^ 0x3978C4F1ED98046CLL) & (2 * (v20 & 0xBA6016F9F11CA669)) ^ v20 & 0xBA6016F9F11CA669;
  v24 = (v21 ^ 0x83009F000C008004) & (4 * v23) ^ v23;
  v25 = ((4 * v22) ^ 0xE637EA47A93985CLL) & v22 ^ (4 * v22) & 0xC398DFA91EA4E614;
  v26 = (v25 ^ 0x2005EA01A808010) & (16 * v24) ^ v24;
  v27 = ((16 * (v25 ^ 0xC198810904246603)) ^ 0x398DFA91EA4E6170) & (v25 ^ 0xC198810904246603) ^ (16 * (v25 ^ 0xC198810904246603)) & 0xC398DFA91EA4E610;
  v28 = (v27 ^ 0x188DA810A046000) & (v26 << 8) ^ v26;
  v29 = (((v27 ^ 0xC210052814A08607) << 8) ^ 0x98DFA91EA4E61700) & (v27 ^ 0xC210052814A08607) ^ ((v27 ^ 0xC210052814A08607) << 8) & 0xC398DFA91EA4E600;
  v30 = (v20 ^ (2
              * (((v28 ^ 0xC398DFA91EA4E617 ^ (v29 ^ 0x8098890804A40000) & (v28 << 16)) << 32) & 0x4398DFA900000000 ^ v28 ^ 0xC398DFA91EA4E617 ^ (v29 ^ 0x8098890804A40000) & (v28 << 16) ^ (((v28 ^ 0xC398DFA91EA4E617 ^ (v29 ^ 0x8098890804A40000) & (v28 << 16)) << 32) ^ 0x1EA4E61700000000) & (((v29 ^ 0x430056A11A00E017) << 16) & 0x4398DFA900000000 ^ 0x10C10900000000 ^ (((v29 ^ 0x430056A11A00E017) << 16) ^ 0x5FA91EA400000000) & (v29 ^ 0x430056A11A00E017))))) >> 32;
  v31 = v20
      - 0x5689B4D0DE00B030
      + (((v30 ^ 0xB6815EC5A1267ADCLL) - 0x20FFCCC4D54C8BBDLL) ^ ((v30 ^ 0x6FF209EAB3488F68) + 0x673641438DD81F7) ^ ((v30 ^ 0xD973572F2A3ED01DLL) - 0x4F0DC52E5E54217CLL));
  v32 = (v31 ^ 0x974959CA52182344) & (2 * (v31 & 0xA7685DCC1B582B61)) ^ v31 & 0xA7685DCC1B582B61;
  v33 = ((2 * (v31 ^ 0x9BC95BDA74A86504)) ^ 0x79420C2CDFE09CCALL) & (v31 ^ 0x9BC95BDA74A86504) ^ (2 * (v31 ^ 0x9BC95BDA74A86504)) & 0x3CA106166FF04E64;
  v34 = ((4 * (v33 ^ 0x4A1021220104225)) ^ 0xF2841859BFC13994) & (v33 ^ 0x4A1021220104225) ^ (4
                                                                                                  * (v33 ^ 0x4A1021220104225)) & 0x3CA106166FF04E64;
  v35 = (v34 ^ 0x308000102FC00800) & (16 * ((v33 ^ 0x380004004FE00C00) & (4 * v32) ^ v32)) ^ (v33 ^ 0x380004004FE00C00) & (4 * v32) ^ v32;
  v36 = ((16 * (v34 ^ 0xC21060640304661)) ^ 0xCA106166FF04E650) & (v34 ^ 0xC21060640304661) ^ (16 * (v34 ^ 0xC21060640304661)) & 0x3CA106166FF04E60;
  v37 = (v36 ^ 0x80000066F004600) & (v35 << 8) ^ v35;
  v38 = (((v36 ^ 0x34A1061000F00825) << 8) ^ 0xA106166FF04E6500) & (v36 ^ 0x34A1061000F00825) ^ ((v36 ^ 0x34A1061000F00825) << 8) & 0x3CA106166FF04E00;
  v39 = v37 ^ 0x3CA106166FF04E65 ^ (v38 ^ 0x2000060660400000) & (v37 << 16);
  v40 = (v31 ^ (2
              * ((v39 << 32) & 0x3CA1061600000000 ^ v39 ^ ((v39 << 32) ^ 0x6FF04E6500000000) & (((v38 ^ 0x1CA100100FB00A65) << 16) & 0x3CA1061600000000 ^ 0x38A1000600000000 ^ (((v38 ^ 0x1CA100100FB00A65) << 16) ^ 0x6166FF000000000) & (v38 ^ 0x1CA100100FB00A65))))) >> 16;
  v41 = v9 ^ v4;
  v42 = v31
      - (((v40 ^ 0xF2A3A708C940B37DLL) - 0x51E24E7A1864D7B1) ^ ((v40 ^ 0xAC6AA3B2D51DEAFELL) - 0xF2B4AC004398E32) ^ ((v40 ^ 0x5EC983D041B59D3BLL) + 0x277955D6F6E0609))
      + 0x3D2F8F697CAFA0CDLL;
  v43 = ((2 * (v42 ^ 0x8EB68F7991E3B2DCLL)) ^ 0x9083DE670070B1F8) & (v42 ^ 0x8EB68F7991E3B2DCLL) ^ (2 * (v42 ^ 0x8EB68F7991E3B2DCLL)) & 0x4841EF33803858FCLL;
  v44 = (v42 ^ 0x86F64F6991D3E29CLL) & (2 * (v42 & 0xC6F7604A11DBEA20)) ^ v42 & 0xC6F7604A11DBEA20;
  v45 = v43 ^ 0x4840211080084804;
  v46 = (v43 ^ 0x1822000301080) & (4 * v44) ^ v44;
  v47 = ((4 * v45) ^ 0x2107BCCE00E163F0) & v45 ^ (4 * v45) & 0x4841EF33803858FCLL;
  v48 = (v47 ^ 0x1AC02002040E0) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x484043318018180CLL)) ^ 0x841EF33803858FC0) & (v47 ^ 0x484043318018180CLL) ^ (16 * (v47 ^ 0x484043318018180CLL)) & 0x4841EF33803858F0;
  v50 = (v49 ^ 0xE33000000800) & (v48 << 8) ^ v48;
  v51 = (((v49 ^ 0x48410C038038503CLL) << 8) ^ 0x41EF33803858FC00) & (v49 ^ 0x48410C038038503CLL) ^ ((v49 ^ 0x48410C038038503CLL) << 8) & 0x4841EF3380385800;
  v52 = v50 ^ 0x4841EF33803858FCLL ^ (v51 ^ 0x4041230000180000) & (v50 << 16);
  *(_QWORD *)(STACK[0x6A60] + v8) = v41;
  v53 = (v42 ^ (2
              * ((v52 << 32) & 0x4841EF3300000000 ^ v52 ^ ((v52 << 32) ^ 0x3858FC00000000) & (((v51 ^ 0x800CC33802000FCLL) << 16) & 0x4841EF3300000000 ^ 0x406F0300000000 ^ (((v51 ^ 0x800CC33802000FCLL) << 16) ^ 0x6F33803800000000) & (v51 ^ 0x800CC33802000FCLL))))) >> 8;
  LODWORD(v42) = v42
               - (((v53 ^ 0x790EF245) + 461493737) ^ ((v53 ^ 0x8382CCB0) - 519181538) ^ ((v53 ^ 0xB79D95AE) - 720195068))
               + 1182281424;
  LODWORD(v53) = ((2 * (v42 ^ 0x9404145)) ^ 0xE4841204) & (v42 ^ 0x9404145) ^ (2 * (v42 ^ 0x9404145)) & 0xF2420902;
  LODWORD(v45) = v53 ^ 0x12420902;
  LODWORD(v53) = (v53 ^ 0xE0000000) & (4 * ((2 * (v42 & 0xFB024847)) & (v42 ^ 0xFB404147) ^ v42 & 0xFB024847)) ^ (2 * (v42 & 0xFB024847)) & (v42 ^ 0xFB404147) ^ v42 & 0xFB024847;
  LODWORD(v51) = ((4 * v45) ^ 0xC9082408) & v45 ^ (4 * v45) & 0xF2420900;
  LODWORD(v53) = (v51 ^ 0xC0000000) & (16 * v53) ^ v53;
  LODWORD(v51) = ((16 * (v51 ^ 0x32420902)) ^ 0x24209020) & (v51 ^ 0x32420902) ^ (16 * (v51 ^ 0x32420902)) & 0xF2420900;
  LODWORD(STACK[0x6AA0]) = v42 ^ (2
                                * ((((v51 ^ 0xD2420902) << 8) & 0xF2420900 ^ 0x42000000 ^ (((v51 ^ 0xD2420902) << 8) ^ 0x42090000) & (v51 ^ 0xD2420902)) & (((v51 ^ 0x20000000) & ((_DWORD)v53 << 8) ^ v53) << 16) ^ (v51 ^ 0x20000000) & ((_DWORD)v53 << 8) ^ v53));
  if (v7 != a2 - 103626989 < 0x6112655F)
    v54 = v7;
  else
    v54 = a2 - 103626989 < v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((22212 * !v54) ^ LODWORD(STACK[0x6AC0]))))();
}

uint64_t sub_100B6AA84()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  BOOL v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t (*v36)(void);
  int v37;
  int v38;
  int v39;

  v1 = STACK[0x68D0];
  v2 = STACK[0x6930];
  if ((STACK[0x68D0] & 1) != 0)
    v2 = STACK[0x65E8];
  if ((v1 & 1) != 0)
    v3 = STACK[0x6720];
  else
    v3 = STACK[0x65D8];
  v4 = STACK[0x67F0];
  if ((v1 & 1) != 0)
  {
    v4 = STACK[0x67B0];
    v5 = STACK[0x6708];
  }
  else
  {
    v5 = STACK[0x65C0];
  }
  v6 = STACK[0x66A0];
  if ((v1 & 1) != 0)
    v6 = STACK[0x6630];
  v7 = STACK[0x6840];
  if ((v1 & 1) != 0)
    v7 = STACK[0x6830];
  LODWORD(STACK[0x67B0]) = v7;
  v8 = LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x64F0]) ^ LODWORD(STACK[0x64B0]) ^ 0xB478D9E8;
  v9 = STACK[0x65F0];
  v10 = STACK[0x6530];
  if ((v1 & 1) != 0)
    v9 = STACK[0x6530];
  LODWORD(STACK[0x67F0]) = v9;
  LODWORD(STACK[0x64F0]) = v8;
  if ((v1 & 1) != 0)
    v11 = v8;
  else
    v11 = v10;
  if ((v1 & 2) != 0)
    v12 = v4;
  else
    v12 = v2;
  LODWORD(STACK[0x63C0]) = v12;
  if ((v1 & 2) == 0)
    v2 = v4;
  LODWORD(STACK[0x6530]) = v2;
  v13 = STACK[0x6920];
  if ((v1 & 2) == 0)
    v13 = STACK[0x6900];
  LODWORD(STACK[0x6830]) = v13;
  v14 = STACK[0x6500];
  if ((v1 & 2) != 0)
    v15 = v11;
  else
    v15 = STACK[0x6500];
  LODWORD(STACK[0x65F0]) = v15;
  if ((v1 & 2) != 0)
    v16 = v14;
  else
    v16 = v11;
  LODWORD(STACK[0x6840]) = v16;
  v17 = STACK[0x6600];
  if ((v1 & 2) != 0)
    v18 = v6;
  else
    v18 = STACK[0x6600];
  LODWORD(STACK[0x6720]) = v18;
  if ((v1 & 2) != 0)
    v19 = v17;
  else
    v19 = v6;
  LODWORD(STACK[0x6630]) = v19;
  v20 = STACK[0x65D0];
  if ((v1 & 2) != 0)
    v20 = STACK[0x6510];
  LODWORD(STACK[0x65D0]) = v20;
  v21 = STACK[0x68F0];
  if ((v1 & 2) == 0)
    v21 = STACK[0x68E0];
  LODWORD(STACK[0x65E8]) = v21;
  v22 = STACK[0x6820];
  if ((v1 & 2) == 0)
    v22 = STACK[0x6810];
  LODWORD(STACK[0x66A0]) = v22;
  v23 = STACK[0x64A8];
  LODWORD(STACK[0x6A90]) = (LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x64A8]) ^ 0x13E429F1) + LODWORD(STACK[0x6780]);
  v24 = STACK[0x6790];
  LODWORD(STACK[0x6780]) = v3;
  if ((v1 & 2) == 0)
    v24 = v3;
  LODWORD(STACK[0x65D8]) = v24;
  v25 = STACK[0x6990];
  LODWORD(STACK[0x6A60]) = v5;
  if ((v1 & 2) != 0)
    v25 = v5;
  LODWORD(STACK[0x6708]) = v25;
  if ((STACK[0x6910] & 1) != 0)
    v26 = STACK[0x64E8];
  else
    v26 = STACK[0x64A0];
  if ((STACK[0x6910] & 1) != 0)
    v27 = STACK[0x6478];
  else
    v27 = STACK[0x64E0];
  if ((STACK[0x6910] & 1) != 0)
    v28 = STACK[0x6470];
  else
    v28 = STACK[0x64C8];
  if ((STACK[0x6910] & 1) != 0)
    v29 = v23;
  else
    v29 = STACK[0x6458];
  v30 = (STACK[0x68C0] & 2) == 0;
  v31 = STACK[0x6800];
  if ((STACK[0x68C0] & 2) != 0)
    v31 = STACK[0x67A0];
  LODWORD(STACK[0x63B8]) = v31;
  v32 = STACK[0x6770];
  if (v30)
    v32 = STACK[0x6760];
  LODWORD(STACK[0x6388]) = v32;
  v33 = STACK[0x6498];
  if (!v30)
    v33 = STACK[0x6480];
  LODWORD(STACK[0x6390]) = v33;
  v34 = STACK[0x6950];
  LODWORD(STACK[0x68F0]) = v26;
  if (!v30)
    v34 = v26;
  LODWORD(STACK[0x65C0]) = v34;
  v35 = STACK[0x64C0];
  if (v30)
    v35 = STACK[0x64B8];
  LODWORD(STACK[0x63B0]) = v35;
  LODWORD(STACK[0x6600]) = LODWORD(STACK[0x68A0]) ^ 0x39C4B52E ^ ((v0 - 845663139) | 0x32677526);
  v36 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8);
  STACK[0x6AC0] = STACK[0xD990];
  LODWORD(STACK[0x6930]) = v27;
  LODWORD(STACK[0x6920]) = v28;
  if (v30)
    v37 = v27;
  else
    v37 = v28;
  LODWORD(STACK[0x6398]) = v37;
  v38 = STACK[0x6970];
  if (v30)
    v38 = STACK[0x6960];
  LODWORD(STACK[0x63A0]) = v38;
  STACK[0x6AA0] = STACK[0xD9B0];
  v39 = STACK[0x6940];
  LODWORD(STACK[0x6900]) = v29;
  if (!v30)
    v39 = v29;
  LODWORD(STACK[0x63A8]) = v39;
  return v36();
}

uint64_t sub_100B6AFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;

  STACK[0x6A80] = v9 ^ 0xFFFFEE54;
  v12 = 8 * ((v9 ^ 0x79FF4DC3AD8DAD7BLL) + v8 + ((unint64_t)(v8 < v10) << 32)) + 0x300591E232707978;
  *(_QWORD *)(STACK[0x6AA0] + v12) = *(_QWORD *)(STACK[0x6AC0] + v12) ^ v11;
  v13 = (a8 ^ 0x3FD8BCFC) & (2 * (a8 & 0xBFD8BEFD)) ^ a8 & 0xBFD8BEFD;
  LODWORD(v12) = ((2 * (a8 ^ 0x70C8905C)) ^ LODWORD(STACK[0x3040])) & (a8 ^ 0x70C8905C) ^ (2 * (a8 ^ 0x70C8905C)) & 0xCF102EA0;
  v14 = v12 ^ 0x411022A1;
  LODWORD(v12) = (v12 ^ 0x8E000C00) & (4 * v13) ^ v13;
  v15 = ((4 * v14) ^ 0x3C40BA84) & v14 ^ (4 * v14) & 0xCF102EA0;
  LODWORD(v12) = (v15 ^ 0xC002A81) & (16 * v12) ^ v12;
  v16 = ((16 * (v15 ^ 0xC3100421)) ^ 0xF102EA10) & (v15 ^ 0xC3100421) ^ (16 * (v15 ^ 0xC3100421)) & 0xCF102EA0;
  LODWORD(v12) = v12 ^ 0xCF102EA1 ^ (v16 ^ 0xC1002A00) & ((_DWORD)v12 << 8);
  LODWORD(v12) = ((_DWORD)v12 << 16) & 0x4F100000 ^ v12 ^ (((_DWORD)v12 << 16) ^ 0x2EA10000) & (((v16 ^ 0xE1004A1) << 8) & 0x4F100000 ^ 0x4F100000 ^ (((v16 ^ 0xE1004A1) << 8) ^ 0x102E0000) & (v16 ^ 0xE1004A1));
  v17 = (a6 ^ 0xEB52732C) & (2 * (a6 & 0xE392782E)) ^ a6 & 0xE392782E;
  v18 = ((2 * (a6 ^ 0x2C562334)) ^ 0x9F88B634) & (a6 ^ 0x2C562334) ^ (2 * (a6 ^ 0x2C562334)) & 0xCFC45B1A;
  v19 = ((4 * (v18 ^ 0x4044490A)) ^ 0x3F116C68) & (v18 ^ 0x4044490A) ^ (4 * (v18 ^ 0x4044490A)) & 0xCFC45B18;
  v20 = (v19 ^ 0xF004800) & (16 * ((v18 ^ 0x8E800010) & (4 * v17) ^ v17)) ^ (v18 ^ 0x8E800010) & (4 * v17) ^ v17;
  v21 = ((16 * (v19 ^ 0xC0C41312)) ^ 0xFC45B1A0) & (v19 ^ 0xC0C41312) ^ (16 * (v19 ^ 0xC0C41312)) & 0xCFC45B10;
  v22 = v20 ^ 0xCFC45B1A ^ (v21 ^ 0xCC44111A) & (v20 << 8);
  v23 = a6 ^ (2
            * ((v22 << 16) & 0x4FC40000 ^ v22 ^ ((v22 << 16) ^ 0x5B1A0000) & (((v21 ^ 0x3804A1A) << 8) & 0x4FC40000 ^ 0xB840000 ^ (((v21 ^ 0x3804A1A) << 8) ^ 0xC45B0000) & (v21 ^ 0x3804A1A))));
  v24 = (a8 ^ (2 * v12) ^ 0xF5136022) & (v23 ^ 0xEA1ACE1A) ^ v23 & 0xC8EB839D;
  v25 = (((v24 ^ 0xA7F78031) - 1200235604) ^ ((v24 ^ 0xC4465E4D) - 607910440) ^ ((v24 ^ 0xABBB5C64) - 1271330817))
      + 678897277;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((13397 * ((((v25 | v9) - v25) | (v9 - v25) & ~(v9 ^ v25)) >> 31)) ^ v9 & 0x567C))
                            - 8))();
}

uint64_t sub_100B6DF50(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  BOOL v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  unint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  unsigned int v225;
  int v226;
  unint64_t v227;
  unint64_t v228;
  char v229;
  unint64_t v230;
  uint64_t (*v231)(void);

  v3 = STACK[0x68D0];
  v4 = STACK[0x69C0];
  if ((STACK[0x68D0] & 1) == 0)
    v4 = STACK[0x64F0];
  v5 = STACK[0x69F0];
  if ((v3 & 1) != 0)
    v5 = STACK[0x6520];
  LODWORD(STACK[0x67A0]) = v5;
  v6 = (v3 & 2) == 0;
  v7 = STACK[0x65C8];
  if (!v6)
    v7 = STACK[0x65B0];
  LODWORD(STACK[0x65C8]) = v7;
  v8 = STACK[0x6700];
  if (!v6)
    v8 = STACK[0x65B8];
  LODWORD(STACK[0x6770]) = v8;
  v9 = STACK[0x67F0];
  LODWORD(STACK[0x6760]) = v4;
  if (!v6)
    v9 = v4;
  LODWORD(STACK[0x6820]) = v9;
  v10 = STACK[0x69E0];
  if (v6)
    v10 = STACK[0x69D0];
  LODWORD(STACK[0x6510]) = v10;
  v11 = STACK[0x6990];
  if (v6)
    v11 = STACK[0x6A60];
  LODWORD(STACK[0x6700]) = v11;
  v12 = STACK[0x69B0];
  if (v6)
    v12 = STACK[0x69A0];
  LODWORD(STACK[0x6520]) = v12;
  v13 = (STACK[0x68C0] & 2) == 0;
  v14 = STACK[0x6950];
  if ((STACK[0x68C0] & 2) == 0)
    v14 = STACK[0x68F0];
  LODWORD(STACK[0x65B0]) = v14;
  v15 = STACK[0x6980];
  if (!v13)
    v15 = STACK[0x6518];
  LODWORD(STACK[0x65B8]) = v15;
  v16 = STACK[0x6970];
  if (!v13)
    v16 = STACK[0x6960];
  LODWORD(STACK[0x6370]) = v16;
  v17 = STACK[0x6940];
  if (v13)
    v17 = STACK[0x6900];
  LODWORD(STACK[0x6378]) = v17;
  v18 = ((a2 - 0x2D48EA838CE9FD71) ^ 0xFA6AC93E64CB8819) & (2 * ((a2 - 0x2D48EA838CE9FD71) & 0xF36C8DBF74C38D5DLL)) ^ (a2 - 0x2D48EA838CE9FD71) & 0xF36C8DBF74C38D5DLL;
  v19 = ((2 * ((a2 - 0x2D48EA838CE9FD71) ^ 0xDE22C3082CCA90ABLL)) ^ 0x5A9C9D6EB0123BECLL) & ((a2 - 0x2D48EA838CE9FD71) ^ 0xDE22C3082CCA90ABLL) ^ (2 * ((a2 - 0x2D48EA838CE9FD71) ^ 0xDE22C3082CCA90ABLL)) & 0x2D4E4EB758091DF6;
  v20 = v19 ^ 0x2542429148090412;
  v21 = (v19 ^ 0x8040C26100019E4) & (4 * v18) ^ v18;
  v22 = ((4 * v20) ^ 0xB5393ADD602477D8) & v20 ^ (4 * v20) & 0x2D4E4EB758091DF4;
  v23 = (v22 ^ 0x25080A95400015D0) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x846442218090826)) ^ 0xD4E4EB758091DF60) & (v22 ^ 0x846442218090826) ^ (16 * (v22 ^ 0x846442218090826)) & 0x2D4E4EB758091DF0;
  v25 = (v24 ^ 0x4444A3500011D00) & (v23 << 8) ^ v23;
  v26 = (((v24 ^ 0x290A048258080096) << 8) ^ 0x4E4EB758091DF600) & (v24 ^ 0x290A048258080096) ^ ((v24 ^ 0x290A048258080096) << 8) & 0x2D4E4EB758091D00;
  v27 = v25 ^ 0x2D4E4EB758091DF6 ^ (v26 ^ 0xC4E061008090000) & (v25 << 16);
  v28 = ((a2 - 0x2D48EA838CE9FD71) ^ (2
                                      * ((v27 << 32) & 0x2D4E4EB700000000 ^ v27 ^ ((v27 << 32) ^ 0x58091DF600000000) & (((v26 ^ 0x210048A7500009F6) << 16) & 0x2D4E4EB700000000 ^ 0x214806B600000000 ^ (((v26 ^ 0x210048A7500009F6) << 16) ^ 0x4EB7580900000000) & (v26 ^ 0x210048A7500009F6uLL))))) >> 25;
  v29 = a2
      + 0x787E03A1BF64056ALL
      + (((v28 ^ 0xAD030291B8EBBB0CLL) + 0x61C64684C545116BLL) ^ ((v28 ^ 0x4A1FA52FD66DB7CELL) - 0x79251EC5543CE257) ^ ((v28 ^ 0xE71CA7E29E82D220) + 0x2BD9E3F7E32C7847));
  v30 = (v29 ^ 0xD8D5135E1AA305F9) & (2 * (v29 & 0x80E05B509ACB15FDLL)) ^ v29 & 0x80E05B509ACB15FDLL;
  v31 = ((2 * (v29 ^ 0xD815B5FE0F352EA9)) ^ 0xB1EBDD5D2BFC76A8) & (v29 ^ 0xD815B5FE0F352EA9) ^ (2 * (v29 ^ 0xD815B5FE0F352EA9)) & 0x58F5EEAE95FE3B54;
  v32 = v31 ^ 0x481422A294020954;
  v33 = (v31 ^ 0x81CC04017C3200) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0x63D7BABA57F8ED50) & v32 ^ (4 * v32) & 0x58F5EEAE95FE3B54;
  v35 = (v34 ^ 0x40D5AAAA15F82950) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x1820440480061204)) ^ 0x8F5EEAE95FE3B540) & (v34 ^ 0x1820440480061204) ^ (16 * (v34 ^ 0x1820440480061204)) & 0x58F5EEAE95FE3B50;
  v37 = (v36 ^ 0x854EAA815E23100) & (v35 << 8) ^ v35;
  v38 = (((v36 ^ 0x50A10406801C0A14) << 8) ^ 0xF5EEAE95FE3B5400) & (v36 ^ 0x50A10406801C0A14) ^ ((v36 ^ 0x50A10406801C0A14) << 8) & 0x58F5EEAE95FE3B00;
  v39 = v37 ^ 0x58F5EEAE95FE3B54 ^ (v38 ^ 0x50E4AE84943A0000) & (v37 << 16);
  v40 = (v29 ^ (2
              * ((v39 << 32) & 0x58F5EEAE00000000 ^ v39 ^ ((v39 << 32) ^ 0x15FE3B5400000000) & (((v38 ^ 0x811402A01C42B54) << 16) & 0x58F5EEAE00000000 ^ 0x10516A0000000000 ^ (((v38 ^ 0x811402A01C42B54) << 16) ^ 0x6EAE95FE00000000) & (v38 ^ 0x811402A01C42B54))))) >> 13;
  v41 = v29
      - 0x47F3F1A18FA421C9
      + (((v40 ^ 0xA193D84AF28B9AB0) + 0x380547E6400DF1E5) ^ ((v40 ^ 0xAB6E846EAE357D62) + 0x32F81BC21CB31637) ^ ((v40 ^ 0xAFDDB3ACC936E69) - 0x6C94BB6981EAFAC2));
  v42 = (v41 ^ 0x2FBF243D77B20686) & (2 * (v41 & 0x2F3E344007C354D6)) ^ v41 & 0x2F3E344007C354D6;
  v43 = ((2 * (v41 ^ 0x318F04BD75B20F2ALL)) ^ 0x3D6261FAE4E2B7F8) & (v41 ^ 0x318F04BD75B20F2ALL) ^ (2 * (v41 ^ 0x318F04BD75B20F2ALL)) & 0x1EB130FD72715BFCLL;
  v44 = v43 ^ 0x291100512114804;
  v45 = (v43 ^ 0x1C202000200013F8) & (4 * v42) ^ v42;
  v46 = ((4 * v44) ^ 0x7AC4C3F5C9C56FF0) & v44 ^ (4 * v44) & 0x1EB130FD72715BFCLL;
  v47 = (v46 ^ 0x1A8000F540414BE0) & (16 * v45) ^ v45;
  v48 = ((16 * (v46 ^ 0x43130083230100CLL)) ^ 0xEB130FD72715BFC0) & (v46 ^ 0x43130083230100CLL) ^ (16 * (v46 ^ 0x43130083230100CLL)) & 0x1EB130FD72715BF0;
  v49 = (v48 ^ 0xA1100D522111B00) & (v47 << 8) ^ v47;
  v50 = (((v48 ^ 0x14A030285060403CLL) << 8) ^ 0xB130FD72715BFC00) & (v48 ^ 0x14A030285060403CLL) ^ ((v48 ^ 0x14A030285060403CLL) << 8) & 0x1EB130FD72715B00;
  v51 = v49 ^ 0x1EB130FD72715BFCLL ^ (v50 ^ 0x1030307070510000) & (v49 << 16);
  v52 = (v41 ^ (2
              * ((v51 << 32) & 0x1EB130FD00000000 ^ v51 ^ ((v51 << 32) ^ 0x72715BFC00000000) & (((v50 ^ 0xE81008D022003FCLL) << 16) & 0x1EB130FD00000000 ^ 0xE00008C00000000 ^ (((v50 ^ 0xE81008D022003FCLL) << 16) ^ 0x30FD727100000000) & (v50 ^ 0xE81008D022003FCLL))))) >> 3;
  v53 = v41
      + 0x7837C3913643A51ALL
      + (((v52 ^ 0xF685E4C2E7241EFLL) - 0x795B0E1F83C812A6) ^ ((v52 ^ 0x75C2F5B258F5E194) - 0x3F1A5E1F54FB2DDLL) ^ ((v52 ^ 0x7C6D65762AE39C1ELL) - 0xA5E35258759CF57));
  v54 = (v53 ^ 0x7F36F48F25C5CE5) & (2 * (v53 & 0x27FB0F8AC35E1EE8)) ^ v53 & 0x27FB0F8AC35E1EE8;
  v55 = ((2 * (v53 ^ 0x7017F5D76E064F5)) ^ 0x41F4E1AF6B7CF43ALL) & (v53 ^ 0x7017F5D76E064F5) ^ (2
                                                                                                  * (v53 ^ 0x7017F5D76E064F5)) & 0x20FA70D7B5BE7A1CLL;
  v56 = v55 ^ 0x200A105094820A05;
  v57 = (v55 ^ 0xF0600701387000) & (4 * v54) ^ v54;
  v58 = ((4 * v56) ^ 0x83E9C35ED6F9E874) & v56 ^ (4 * v56) & 0x20FA70D7B5BE7A1CLL;
  v59 = (v58 ^ 0xE8405694B86800) & (16 * v57) ^ v57;
  v60 = ((16 * (v58 ^ 0x2012308121061209)) ^ 0xFA70D7B5BE7A1D0) & (v58 ^ 0x2012308121061209) ^ (16 * (v58 ^ 0x2012308121061209)) & 0x20FA70D7B5BE7A10;
  v61 = (v60 ^ 0xA2005311A62000) & (v59 << 8) ^ v59;
  v62 = (((v60 ^ 0x20587084A4185A0DLL) << 8) ^ 0xFA70D7B5BE7A1D00) & (v60 ^ 0x20587084A4185A0DLL) ^ ((v60 ^ 0x20587084A4185A0DLL) << 8) & 0x20FA70D7B5BE7A00;
  v63 = v61 ^ 0x20FA70D7B5BE7A1DLL ^ (v62 ^ 0x20705095B43A0000) & (v61 << 16);
  v64 = v53 ^ (2
             * ((v63 << 32) & 0x20FA70D700000000 ^ v63 ^ ((v63 << 32) ^ 0x35BE7A1D00000000) & (((v62 ^ 0x8A20420184621DLL) << 16) & 0x20FA70D700000000 ^ 0x28404100000000 ^ (((v62 ^ 0x8A20420184621DLL) << 16) ^ 0x70D7B5BE00000000) & (v62 ^ 0x8A20420184621DLL))));
  v65 = ((v64 ^ 0x620F1D1496911524) - 0x7841F3B7AB0C7610) ^ ((v64 ^ 0x6FC25C8385904E97) - 0x758CB220B80D2DA3) ^ ((v64 ^ 0x2AB64F98BB23B161) - 0x30F8A13B86BED255);
  v66 = ((v65 - 0x719C31E856C2F1A9) ^ 0x182DB82E1A11F978) & (2
                                                               * ((v65 - 0x719C31E856C2F1A9) & 0x922D3D0C1245F27DLL)) ^ (v65 - 0x719C31E856C2F1A9) & 0x922D3D0C1245F27DLL;
  v67 = ((2 * ((v65 - 0x719C31E856C2F1A9) ^ 0x382DCA361E9BBDEALL)) ^ 0x5401EE7419BC9F2ELL) & ((v65
                                                                                               - 0x719C31E856C2F1A9) ^ 0x382DCA361E9BBDEALL) ^ (2 * ((v65 - 0x719C31E856C2F1A9) ^ 0x382DCA361E9BBDEALL)) & 0xAA00F73A0CDE4F96;
  v68 = v67 ^ 0xAA00110A04424091;
  v69 = (v67 ^ 0xE430081C0B04) & (4 * v66) ^ v66;
  v70 = ((4 * v68) ^ 0xA803DCE833793E5CLL) & v68 ^ (4 * v68) & 0xAA00F73A0CDE4F94;
  v71 = (v70 ^ 0xA800D42800580E10) & (16 * v69) ^ v69;
  v72 = ((16 * (v70 ^ 0x20023120C864183)) ^ 0xA00F73A0CDE4F970) & (v70 ^ 0x20023120C864183) ^ (16 * (v70 ^ 0x20023120C864183)) & 0xAA00F73A0CDE4F90;
  v73 = (v72 ^ 0xA00073200CC44900) & (v71 << 8) ^ v71;
  v74 = (((v72 ^ 0xA00841A001A0687) << 8) ^ 0xF73A0CDE4F9700) & (v72 ^ 0xA00841A001A0687) ^ ((v72 ^ 0xA00841A001A0687) << 8) & 0xAA00F73A0CDE4F00;
  v75 = v73 ^ 0xAA00F73A0CDE4F97 ^ (v74 ^ 0x32080C4E0000) & (v73 << 16);
  v76 = v65
      + 0x20910B23BB8300D5
      + ((((v65 - 0x719C31E856C2F1A9) ^ (2
                                         * ((v75 << 32) & 0x2A00F73A00000000 ^ v75 ^ ((v75 << 32) ^ 0xCDE4F9700000000) & (((v74 ^ 0xAA00C53200904897) << 16) & 0x2A00F73A00000000 ^ 0x800F32000000000 ^ (((v74 ^ 0xAA00C53200904897) << 16) ^ 0x773A0CDE00000000) & (v74 ^ 0xAA00C53200904897))))) >> 28) ^ 0xFFFFFFF29D3A2A3FLL);
  v77 = v76 + (v76 >> 13) + ((v76 + (v76 >> 13)) >> 3);
  v78 = ((((v77 - ((2 * v77) & 0x890649F41B90D1D2) - 0x3B7CDB05F2379717) ^ 0x69E8C0CEC2D9F1C5)
        - (((v77 - ((2 * v77) & 0x890649F41B90D1D2) - 0x3B7CDB05F2379717) ^ 0x69E8C0CEC2D9F1C5) >> 27)) ^ 0x587BBBF3FBD6CADFLL)
      - 0xA101312C00852
      + ((2
        * (((v77 - ((2 * v77) & 0x890649F41B90D1D2) - 0x3B7CDB05F2379717) ^ 0x69E8C0CEC2D9F1C5)
         - (((v77 - ((2 * v77) & 0x890649F41B90D1D2) - 0x3B7CDB05F2379717) ^ 0x69E8C0CEC2D9F1C5) >> 27))) & 0xB0F777E7F7AD95BELL);
  v79 = (v78 ^ 0x376F035F84CCBD6BLL) & (2 * (v78 & 0xA78E541F16E93D73)) ^ v78 & 0xA78E541F16E93D73;
  v80 = ((2 * (v78 ^ 0x7A7F234BA01CDFE9)) ^ 0xBBE2EEA96DEBC534) & (v78 ^ 0x7A7F234BA01CDFE9) ^ (2 * (v78 ^ 0x7A7F234BA01CDFE9)) & 0xDDF17754B6F5E29ALL;
  v81 = v80 ^ 0x441111549214228ALL;
  v82 = (v80 ^ 0x9860600024E1C010) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ 0x77C5DD52DBD78A68) & v81 ^ (4 * v81) & 0xDDF17754B6F5E298;
  v84 = (v83 ^ 0x55C1555092D58200) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0x8830220424206092)) ^ 0xDF17754B6F5E29A0) & (v83 ^ 0x8830220424206092) ^ (16 * (v83 ^ 0x8830220424206092)) & 0xDDF17754B6F5E290;
  v86 = (v85 ^ 0xDD11754026542000) & (v84 << 8) ^ v84;
  v87 = (((v85 ^ 0xE0021490A1C21ALL) << 8) ^ 0xF17754B6F5E29A00) & (v85 ^ 0xE0021490A1C21ALL) ^ ((v85 ^ 0xE0021490A1C21ALL) << 8) & 0xDDF17754B6F5E200;
  v88 = v86 ^ 0xDDF17754B6F5E29ALL ^ (v87 ^ 0xD1715414B4E00000) & (v86 << 16);
  v89 = (v78 ^ (2
              * ((v88 << 32) & 0x5DF1775400000000 ^ v88 ^ ((v88 << 32) ^ 0x36F5E29A00000000) & (((v87 ^ 0xC8023400215609ALL) << 16) & 0x5DF1775400000000 ^ 0x8A1410000000000 ^ (((v87 ^ 0xC8023400215609ALL) << 16) ^ 0x7754B6F500000000) & (v87 ^ 0xC8023400215609ALL))))) >> 8;
  v90 = v78
      + 0x18045705FAEF2E73
      + (((v89 ^ 0x812F94929AD7B9FALL) - 0x659067899707BF59) ^ ((v89 ^ 0xE13F7317D30D048ALL) - 0x580800CDEDD0229) ^ ((v89 ^ 0x602569FBDFA1BF88) + 0x7B65651F2D8E46D5));
  v91 = (v90 ^ 0x7393717CA790DA53) & (2 * (v90 & 0x74147A7EB7A5135BLL)) ^ v90 & 0x74147A7EB7A5135BLL;
  v92 = ((2 * (v90 ^ 0xFBB335B8C99ADED5)) ^ 0x1F4E9F8CFC7F9B1CLL) & (v90 ^ 0xFBB335B8C99ADED5) ^ (2 * (v90 ^ 0xFBB335B8C99ADED5)) & 0x8FA74FC67E3FCD8ELL;
  v93 = v92 ^ 0x80A1404202004482;
  v94 = (v92 ^ 0x20B847C3C890CLL) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0x3E9D3F19F8FF3638) & v93 ^ (4 * v93) & 0x8FA74FC67E3FCD8CLL;
  v96 = (v95 ^ 0xE850F00783F0400) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0x812240C60600C986)) ^ 0xFA74FC67E3FCD8E0) & (v95 ^ 0x812240C60600C986) ^ (16 * (v95 ^ 0x812240C60600C986)) & 0x8FA74FC67E3FCD80;
  v98 = (v97 ^ 0x8A244C46623CC800) & (v96 << 8) ^ v96;
  v99 = (((v97 ^ 0x58303801C03050ELL) << 8) ^ 0xA74FC67E3FCD8E00) & (v97 ^ 0x58303801C03050ELL) ^ ((v97 ^ 0x58303801C03050ELL) << 8) & 0x8FA74FC67E3FCD00;
  v100 = v98 ^ 0x8FA74FC67E3FCD8ELL ^ (v99 ^ 0x870746463E0D0000) & (v98 << 16);
  v101 = (v90 ^ (2
               * ((v100 << 32) & 0xFA74FC600000000 ^ v100 ^ ((v100 << 32) ^ 0x7E3FCD8E00000000) & (((v99 ^ 0x8A009804032418ELL) << 16) & 0xFA74FC600000000 ^ 0x2101C000000000 ^ (((v99 ^ 0x8A009804032418ELL) << 16) ^ 0x4FC67E3F00000000) & (v99 ^ 0x8A009804032418ELL))))) >> 6;
  v102 = v90
       - (((v101 ^ 0x1493DDE88758BF19) + 0x6432F2BF0D2E9DB4) ^ ((v101 ^ 0xCED468F512BBFB50) - 0x418AB85D67322605) ^ ((v101 ^ 0xDB9BE4E66CCC2E68) - 0x54C5344E1945F33DLL))
       + 0x42F586D1C631784FLL;
  v103 = (v102 ^ 0x101D631D40ECE3D5) & (2 * (v102 & 0xA29C725964CCE398)) ^ v102 & 0xA29C725964CCE398;
  v104 = ((2 * (v102 ^ 0x542DE73D81F4E0C5)) ^ 0xED632AC9CA7006BALL) & (v102 ^ 0x542DE73D81F4E0C5) ^ (2 * (v102 ^ 0x542DE73D81F4E0C5)) & 0xF6B19564E538035CLL;
  v105 = v104 ^ 0x1290952425080145;
  v106 = (v104 ^ 0x8421004080300200) & (4 * v103) ^ v103;
  v107 = ((4 * v105) ^ 0xDAC6559394E00D74) & v105 ^ (4 * v105) & 0xF6B19564E538035CLL;
  v108 = (v107 ^ 0xD280150084200140) & (16 * v106) ^ v106;
  v109 = ((16 * (v107 ^ 0x2431806461180209)) ^ 0x6B19564E538035D0) & (v107 ^ 0x2431806461180209) ^ (16 * (v107 ^ 0x2431806461180209)) & 0xF6B19564E5380350;
  v110 = (v109 ^ 0x6211144441000100) & (v108 << 8) ^ v108;
  v111 = (((v109 ^ 0x94A08120A438020DLL) << 8) ^ 0xB19564E538035D00) & (v109 ^ 0x94A08120A438020DLL) ^ ((v109 ^ 0x94A08120A438020DLL) << 8) & 0xF6B19564E5380300;
  v112 = v110 ^ 0xF6B19564E538035DLL ^ (v111 ^ 0xB091046420000000) & (v110 << 16);
  v113 = v102 ^ (2
               * ((v112 << 32) & 0x76B1956400000000 ^ v112 ^ ((v112 << 32) ^ 0x6538035D00000000) & (((v111 ^ 0x46209100C538025DLL) << 16) & 0x76B1956400000000 ^ 0x6291104400000000 ^ (((v111 ^ 0x46209100C538025DLL) << 16) ^ 0x1564E53800000000) & (v111 ^ 0x46209100C538025DLL))));
  v114 = ((v113 ^ 0x1820C6D9977B26ALL) + 0x62C769A1428B6BBLL) ^ ((v113 ^ 0x81908F43E67E6AE4) - 0x79C10A4B94DE91CBLL) ^ ((v113 ^ 0x78DD936D1B53DACLL) + 0x23A3C15CEA397DLL);
  v115 = ((v114 - 0x2CDB61C9C33D2174) ^ 0x8F33C47041364B4DLL) & (2
                                                                 * ((v114 - 0x2CDB61C9C33D2174) & 0xCFA3897549B74B8ELL)) ^ (v114 - 0x2CDB61C9C33D2174) & 0xCFA3897549B74B8ELL;
  v116 = ((2 * ((v114 - 0x2CDB61C9C33D2174) ^ 0x8B71D4DA43584A55)) ^ 0x89A4BB5E15DE03B6) & ((v114
                                                                                                 - 0x2CDB61C9C33D2174) ^ 0x8B71D4DA43584A55) ^ (2 * ((v114 - 0x2CDB61C9C33D2174) ^ 0x8B71D4DA43584A55)) & 0x44D25DAF0AEF01DALL;
  v117 = v116 ^ 0x445244A10A210049;
  v118 = (v116 ^ 0x80090E00CE0010) & (4 * v115) ^ v115;
  v119 = ((4 * v117) ^ 0x134976BC2BBC076CLL) & v117 ^ (4 * v117) & 0x44D25DAF0AEF01D8;
  v120 = (v119 ^ 0x4054AC0AAC0140) & (16 * v118) ^ v118;
  v121 = ((16 * (v119 ^ 0x4492090300430093)) ^ 0x4D25DAF0AEF01DB0) & (v119 ^ 0x4492090300430093) ^ (16 * (v119 ^ 0x4492090300430093)) & 0x44D25DAF0AEF01D0;
  v122 = (v121 ^ 0x440058A00AE00100) & (v120 << 8) ^ v120;
  v123 = (((v121 ^ 0xD2050F000F004BLL) << 8) ^ 0xD25DAF0AEF01DB00) & (v121 ^ 0xD2050F000F004BLL) ^ ((v121 ^ 0xD2050F000F004BLL) << 8) & 0x44D25DAF0AEF0100;
  v124 = v122 ^ 0x44D25DAF0AEF01DBLL ^ (v123 ^ 0x40500D0A0A010000) & (v122 << 16);
  v125 = ((v114 - 0x2CDB61C9C33D2174) ^ (2
                                         * ((v124 << 32) & 0x44D25DAF00000000 ^ v124 ^ ((v124 << 32) ^ 0xAEF01DB00000000) & (((v123 ^ 0x48250A500EE00DBLL) << 16) & 0x44D25DAF00000000 ^ 0x50550000000000 ^ (((v123 ^ 0x48250A500EE00DBLL) << 16) ^ 0x5DAF0AEF00000000) & (v123 ^ 0x48250A500EE00DBLL))))) >> 29;
  v126 = v114
       - 0x6FBE018848A1FFE4
       + (((v125 ^ 0xE3EC6CFEC0E19C4ALL) + 0x540D189A4279AB5ELL) ^ ((v125 ^ 0xF05A652028125BE5) + 0x47BB1144AA8A6CF3) ^ ((v125 ^ 0x13B609DCD4EA4E45) - 0x5BA88247A98D86ADLL));
  v127 = (v126 ^ 0x52A424ED841B4A10) & (2 * (v126 & 0x5AA4B4CD109A6B00)) ^ v126 & 0x5AA4B4CD109A6B00;
  v128 = ((2 * (v126 ^ 0xD6EC65E5842FDE10)) ^ 0x1891A251296B6A20) & (v126 ^ 0xD6EC65E5842FDE10) ^ (2 * (v126 ^ 0xD6EC65E5842FDE10)) & 0x8C48D12894B5B510;
  v129 = v128 ^ 0x8448512894949510;
  v130 = (v128 ^ 0x800800000212000) & (4 * v127) ^ v127;
  v131 = ((4 * v129) ^ 0x312344A252D6D440) & v129 ^ (4 * v129) & 0x8C48D12894B5B510;
  v132 = (v131 ^ 0x402010949400) & (16 * v130) ^ v130;
  v133 = ((16 * (v131 ^ 0x8C48910884212110)) ^ 0xC48D12894B5B5100) & (v131 ^ 0x8C48910884212110) ^ (16 * (v131 ^ 0x8C48910884212110)) & 0x8C48D12894B5B510;
  v134 = (v133 ^ 0x8408100800111100) & (v132 << 8) ^ v132;
  v135 = (((v133 ^ 0x840C12094A4A410) << 8) ^ 0x48D12894B5B51000) & (v133 ^ 0x840C12094A4A410) ^ ((v133 ^ 0x840C12094A4A410) << 8) & 0x8C48D12894B5B500;
  v136 = v134 ^ 0x8C48D12894B5B510 ^ (v135 ^ 0x840000094B50000) & (v134 << 16);
  v137 = v126
       + 0x5AA4B4CD109A6B00
       + (((v126 ^ (2
                  * ((v136 << 32) & 0xC48D12800000000 ^ v136 ^ ((v136 << 32) ^ 0x14B5B51000000000) & (((v135 ^ 0x8408D1280000A510) << 16) & 0xC48D12800000000 ^ 0xC40410800000000 ^ (((v135 ^ 0x8408D1280000A510) << 16) ^ 0x512894B500000000) & (v135 ^ 0x8408D1280000A510))))) >> 8) ^ 0x4A34349C39F101);
  v138 = v137 + (v137 >> 1) - ((2 * (v137 + (v137 >> 1))) & 0x7B5BB27B1E4E7B80) - 0x425226C270D8C240;
  v139 = (v138 ^ 0xA68FA4010E34CDF0)
       + ((v138 ^ 0xA68FA4010E34CDF0) >> 30)
       + (((v138 ^ 0xA68FA4010E34CDF0) + ((v138 ^ 0xA68FA4010E34CDF0) >> 30)) >> 12);
  v140 = v139 + (v139 >> 8) - ((2 * (v139 + (v139 >> 8))) & 0x915BE8FBF31C2DD4) + 0x48ADF47DF98E16EALL;
  v141 = (((v140 ^ 0x2218D7EDD1C60304) - 0x2218D7EDD1C60304) ^ ((v140 ^ 0x7CB516E5715E2470) - 0x7CB516E5715E2470) ^ ((v140 ^ 0x160035755916319ELL) - 0x160035755916319ELL))
       - 0x51A4C341A5542F83;
  v142 = v141 + (v141 >> 31) + ((v141 + (v141 >> 31)) >> 14);
  v143 = ((v142 + 0x4075AC3245FAB493) ^ 0xBFA20389B0610B6CLL) & (2
                                                                 * ((v142 + 0x4075AC3245FAB493) & 0xBF8A53CDBA054B6DLL)) ^ (v142 + 0x4075AC3245FAB493) & 0xBF8A53CDBA054B6DLL;
  v144 = ((2 * ((v142 + 0x4075AC3245FAB493) ^ 0xDBA6241BF06B0D6ELL)) ^ 0xC858EFAC94DC8C06) & ((v142
                                                                                                 + 0x4075AC3245FAB493) ^ 0xDBA6241BF06B0D6ELL) ^ (2 * ((v142 + 0x4075AC3245FAB493) ^ 0xDBA6241BF06B0D6ELL)) & 0x642C77D64A6E4602;
  v145 = v144 ^ 0x242410524A224201;
  v146 = (v144 ^ 0x40084704000C0400) & (4 * v143) ^ v143;
  v147 = ((4 * v145) ^ 0x90B1DF5929B9180CLL) & v145 ^ (4 * v145) & 0x642C77D64A6E4600;
  v148 = (v147 ^ 0x20575008280000) & (16 * v146) ^ v146;
  v149 = ((16 * (v147 ^ 0x640C208642464603)) ^ 0x42C77D64A6E46030) & (v147 ^ 0x640C208642464603) ^ (16 * (v147 ^ 0x640C208642464603)) & 0x642C77D64A6E4600;
  v150 = (v149 ^ 0x4004754402644000) & (v148 << 8) ^ v148;
  v151 = (((v149 ^ 0x24280292480A0603) << 8) ^ 0x2C77D64A6E460300) & (v149 ^ 0x24280292480A0603) ^ ((v149 ^ 0x24280292480A0603) << 8) & 0x642C77D64A6E4600;
  v152 = v150 ^ 0x642C77D64A6E4603 ^ (v151 ^ 0x242456424A460000) & (v150 << 16);
  v153 = ((v142 + 0x4075AC3245FAB493) ^ (2
                                         * ((v152 << 32) & 0x642C77D600000000 ^ v152 ^ ((v152 << 32) ^ 0x4A6E460300000000) & (((v151 ^ 0x4008219400284403) << 16) & 0x642C77D600000000 ^ 0x28359000000000 ^ (((v151 ^ 0x4008219400284403) << 16) ^ 0x77D64A6E00000000) & (v151 ^ 0x4008219400284403))))) >> 2;
  v154 = v142
       - (((v153 ^ 0x113C10BBEF853571) + 0xFACEEE8465F9491) ^ ((v153 ^ 0xF67CAD46130292E6) - 0x1713ACEA4527CCF8) ^ ((v153 ^ 0xDAA231E4B731D64DLL) - 0x3BCD3048E1148853))
       + 0x6586C85F7CCE7883;
  v155 = (v154 ^ 0xBDE309CB551D573CLL) & (2 * (v154 & 0xBDEBA9EB659E57B9)) ^ v154 & 0xBDEBA9EB659E57B9;
  v156 = ((2 * (v154 ^ 0xED671A4B1711731CLL)) ^ 0xA1196740E51E494ALL) & (v154 ^ 0xED671A4B1711731CLL) ^ (2 * (v154 ^ 0xED671A4B1711731CLL)) & 0x508CB3A0728F24A4;
  v157 = v156 ^ 0x508490A0128124A5;
  v158 = (v156 ^ 0x82300200A0000) & (4 * v155) ^ v155;
  v159 = ((4 * v157) ^ 0x4232CE81CA3C9294) & v157 ^ (4 * v157) & 0x508CB3A0728F24A4;
  v160 = (v159 ^ 0x40008280420C0080) & (16 * v158) ^ v158;
  v161 = ((16 * (v159 ^ 0x108C312030832421)) ^ 0x8CB3A0728F24A50) & (v159 ^ 0x108C312030832421) ^ (16 * (v159 ^ 0x108C312030832421)) & 0x508CB3A0728F24A0;
  v162 = (v161 ^ 0x88320020820000) & (v160 << 8) ^ v160;
  v163 = (((v161 ^ 0x500481A0520D24A5) << 8) ^ 0x8CB3A0728F24A500) & (v161 ^ 0x500481A0520D24A5) ^ ((v161 ^ 0x500481A0520D24A5) << 8) & 0x508CB3A0728F2400;
  v164 = v162 ^ 0x508CB3A0728F24A5 ^ (v163 ^ 0x80A02002040000) & (v162 << 16);
  v165 = v154 ^ (2
               * ((v164 << 32) & 0x508CB3A000000000 ^ v164 ^ ((v164 << 32) ^ 0x728F24A500000000) & (((v163 ^ 0x500C1380708B00A5) << 16) & 0x508CB3A000000000 ^ 0x400C812000000000 ^ (((v163 ^ 0x500C1380708B00A5) << 16) ^ 0x33A0728F00000000) & (v163 ^ 0x500C1380708B00A5))));
  v166 = ((v165 ^ 0x70219BE0D3DE41E7) + 0x5B5FD160F06627F9) ^ ((v165 ^ 0x3CF1B4B9A6734E08) + 0x178FFE3985CB2818) ^ ((v165 ^ 0xF13AA0B2F52D111CLL) - 0x25BB15CD296A88FCLL);
  v167 = ((v166 + 0x392C7CFAB1438424) ^ 0x743CBBDEAB67788CLL) & (2
                                                                 * ((v166 + 0x392C7CFAB1438424) & 0x86BEA3DEB374792ELL)) ^ (v166 + 0x392C7CFAB1438424) & 0x86BEA3DEB374792ELL;
  v168 = ((2 * ((v166 + 0x392C7CFAB1438424) ^ 0x7D68BBDBEDAF2A94)) ^ 0xF7AC300ABDB6A774) & ((v166
                                                                                                 + 0x392C7CFAB1438424) ^ 0x7D68BBDBEDAF2A94) ^ (2 * ((v166 + 0x392C7CFAB1438424) ^ 0x7D68BBDBEDAF2A94)) & 0xFBD618055EDB53BALL;
  v169 = v168 ^ 0x85208054249508ALL;
  v170 = (v168 ^ 0x338410001C920130) & (4 * v167) ^ v167;
  v171 = ((4 * v169) ^ 0xEF5860157B6D4EE8) & v169 ^ (4 * v169) & 0xFBD618055EDB53B8;
  v172 = (v171 ^ 0xEB5000055A4942A0) & (16 * v170) ^ v170;
  v173 = ((16 * (v171 ^ 0x1086180004921112)) ^ 0xBD618055EDB53BA0) & (v171 ^ 0x1086180004921112) ^ (16 * (v171 ^ 0x1086180004921112)) & 0xFBD618055EDB53B0;
  v174 = (v173 ^ 0xB94000054C911300) & (v172 << 8) ^ v172;
  v175 = (((v173 ^ 0x42961800124A401ALL) << 8) ^ 0xD618055EDB53BA00) & (v173 ^ 0x42961800124A401ALL) ^ ((v173 ^ 0x42961800124A401ALL) << 8) & 0xFBD618055EDB5300;
  v176 = v174 ^ 0xFBD618055EDB53BALL ^ (v175 ^ 0xD21000045A530000) & (v174 << 16);
  v177 = ((((v166 + 0x392C7CFAB1438424) ^ (2
                                           * ((v176 << 32) & 0x7BD6180500000000 ^ v176 ^ ((v176 << 32) ^ 0x5EDB53BA00000000) & (((v175 ^ 0x29C61801048841BALL) << 16) & 0x7BD6180500000000 ^ 0x63D2000400000000 ^ (((v175 ^ 0x29C61801048841BALL) << 16) ^ 0x18055EDB00000000) & (v175 ^ 0x29C61801048841BALL))))) >> 27) ^ 0xFFFFFFE76929857ELL)
       + v166;
  v178 = (((((v177 - 0x4014DF269B4802ADLL) >> 11) ^ 0x943487A64ACC9A83) - 0x417712B1A17CF369) ^ ((((v177 - 0x4014DF269B4802ADLL) >> 11) ^ 0xF2504F3A6656869ELL) - 0x2713DA2D8DE6EF74) ^ ((((v177 - 0x4014DF269B4802ADLL) >> 11) ^ 0x6664C89C2C9A1C1DLL) + 0x4CD8A27438D58A09))
       + v177;
  v179 = ((v178 + 0x1442B63BF5BEC9A8) ^ 0x6ACBFF3558A59D50) & (2
                                                                 * ((v178 + 0x1442B63BF5BEC9A8) & 0x80EBFFB55AA99D95)) ^ (v178 + 0x1442B63BF5BEC9A8) & 0x80EBFFB55AA99D95;
  v180 = ((2 * ((v178 + 0x1442B63BF5BEC9A8) ^ 0x6B0DCC7569A59558)) ^ 0xD7CC67806618119ALL) & ((v178
                                                                                                 + 0x1442B63BF5BEC9A8) ^ 0x6B0DCC7569A59558) ^ (2 * ((v178 + 0x1442B63BF5BEC9A8) ^ 0x6B0DCC7569A59558)) & 0xEBE633C0330C08CCLL;
  v181 = v180 ^ 0x2822104011040845;
  v182 = (v180 ^ 0x3C4238022080088) & (4 * v179) ^ v179;
  v183 = ((4 * v181) ^ 0xAF98CF00CC302334) & v181 ^ (4 * v181) & 0xEBE633C0330C08CCLL;
  v184 = (v183 ^ 0xAB80030000000000) & (16 * v182) ^ v182;
  v185 = ((16 * (v183 ^ 0x406630C0330C08C9)) ^ 0xBE633C0330C08CD0) & (v183 ^ 0x406630C0330C08C9) ^ (16 * (v183 ^ 0x406630C0330C08C9)) & 0xEBE633C0330C08C0;
  v186 = (v185 ^ 0xAA62300030000800) & (v184 << 8) ^ v184;
  v187 = (((v185 ^ 0x418403C0030C000DLL) << 8) ^ 0xE633C0330C08CD00) & (v185 ^ 0x418403C0030C000DLL) ^ ((v185 ^ 0x418403C0030C000DLL) << 8) & 0xEBE633C0330C0800;
  v188 = v186 ^ 0xEBE633C0330C08CDLL ^ (v187 ^ 0xE222000000080000) & (v186 << 16);
  v189 = ((v178 + 0x1442B63BF5BEC9A8) ^ (2
                                         * ((v188 << 32) & 0x6BE633C000000000 ^ v188 ^ ((v188 << 32) ^ 0x330C08CD00000000) & (((v187 ^ 0x9C433C0330400CDLL) << 16) & 0x6BE633C000000000 ^ 0x482600C000000000 ^ (((v187 ^ 0x9C433C0330400CDLL) << 16) ^ 0x33C0330C00000000) & (v187 ^ 0x9C433C0330400CDLL))))) >> 3;
  v190 = v178
       - (((v189 ^ 0x658D18E1C30FB453) - 0x38277C98BE344342) ^ ((v189 ^ 0x215944EF436EAC44) - 0x7CF320963E555B55) ^ ((v189 ^ 0x46F1AF3827F72996) - 0x1B5BCB415ACCDE87))
       + 0x42A136E8EB180BFALL;
  v191 = (v190 ^ 0xF8F9D7B622A086ABLL) & (2 * (v190 & 0xF2FDE7B88AA294B3)) ^ v190 & 0xF2FDE7B88AA294B3;
  v192 = ((2 * (v190 ^ 0xDD42538632A08EEDLL)) ^ 0x5F7F687D700434BCLL) & (v190 ^ 0xDD42538632A08EEDLL) ^ (2 * (v190 ^ 0xDD42538632A08EEDLL)) & 0x2FBFB43EB8021A5ELL;
  v193 = v192 ^ 0x2080940288020A42;
  v194 = (v192 ^ 0xF3F20243000101CLL) & (4 * v191) ^ v191;
  v195 = ((4 * v193) ^ 0xBEFED0FAE0086978) & v193 ^ (4 * v193) & 0x2FBFB43EB8021A5CLL;
  v196 = (v195 ^ 0x2EBE903AA0000850) & (16 * v194) ^ v194;
  v197 = ((16 * (v195 ^ 0x101240418021206)) ^ 0xFBFB43EB8021A5E0) & (v195 ^ 0x101240418021206) ^ (16 * (v195 ^ 0x101240418021206)) & 0x2FBFB43EB8021A50;
  v198 = (v197 ^ 0x2BBB002A80000000) & (v196 << 8) ^ v196;
  v199 = (((v197 ^ 0x404B41438021A1ELL) << 8) ^ 0xBFB43EB8021A5E00) & (v197 ^ 0x404B41438021A1ELL) ^ ((v197 ^ 0x404B41438021A1ELL) << 8) & 0x2FBFB43EB8021A00;
  v200 = v198 ^ 0x2FBFB43EB8021A5ELL ^ (v199 ^ 0x2FB4343800020000) & (v198 << 16);
  v201 = v190 ^ (2
               * ((v200 << 32) & 0x2FBFB43E00000000 ^ v200 ^ ((v200 << 32) ^ 0x38021A5E00000000) & (((v199 ^ 0xB8006B800005ELL) << 16) & 0x2FBFB43E00000000 ^ 0xB81043C00000000 ^ (((v199 ^ 0xB8006B800005ELL) << 16) ^ 0x343EB80200000000) & (v199 ^ 0xB8006B800005ELL))));
  v202 = ((v201 ^ 0x2E9C2888FBD3BCBBLL) - 0x59C9598F8AC51B91) ^ ((v201 ^ 0xD00E041510A099A3) + 0x58A48AED9E49C177) ^ ((v201 ^ 0x314836411D58517) - 0x7441F26360C3223DLL);
  v203 = ((v202 - 0x358D1915351FB37ALL) ^ 0x36453B844D96E966) & (2
                                                                 * ((v202 - 0x358D1915351FB37ALL) & 0x8705B2086DA70987)) ^ (v202 - 0x358D1915351FB37ALL) & 0x8705B2086DA70987;
  v204 = ((2 * ((v202 - 0x358D1915351FB37ALL) ^ 0x3E4F1B84C5D6F86ELL)) ^ 0x7295531950E3E3D2) & ((v202
                                                                                                 - 0x358D1915351FB37ALL) ^ 0x3E4F1B84C5D6F86ELL) ^ (2 * ((v202 - 0x358D1915351FB37ALL) ^ 0x3E4F1B84C5D6F86ELL)) & 0xB94AA98CA871F1E8;
  v205 = v204 ^ 0x894AA884A8101029;
  v206 = (v204 ^ 0x3000000000206000) & (4 * v203) ^ v203;
  v207 = ((4 * v205) ^ 0xE52AA632A1C7C7A4) & v205 ^ (4 * v205) & 0xB94AA98CA871F1E8;
  v208 = (v207 ^ 0xA10AA000A041C1A0) & (16 * v206) ^ v206;
  v209 = ((16 * (v207 ^ 0x1840098C08303049)) ^ 0x94AA98CA871F1E90) & (v207 ^ 0x1840098C08303049) ^ (16 * (v207 ^ 0x1840098C08303049)) & 0xB94AA98CA871F1E0;
  v210 = (v209 ^ 0x900A888880111000) & (v208 << 8) ^ v208;
  v211 = (((v209 ^ 0x294021042860E169) << 8) ^ 0x4AA98CA871F1E900) & (v209 ^ 0x294021042860E169) ^ ((v209 ^ 0x294021042860E169) << 8) & 0xB94AA98CA871F100;
  v212 = v210 ^ 0xB94AA98CA871F1E9 ^ (v211 ^ 0x808888820710000) & (v210 << 16);
  v213 = v202
       + 0x6867040F559827CBLL
       + ((((v202 - 0x358D1915351FB37ALL) ^ (2
                                           * ((v212 << 32) & 0x394AA98C00000000 ^ v212 ^ ((v212 << 32) ^ 0x2871F1E900000000) & (((v211 ^ 0xB1422104880010E9) << 16) & 0x394AA98C00000000 ^ 0x1042018C00000000 ^ (((v211 ^ 0xB1422104880010E9) << 16) ^ 0x298CA87100000000) & (v211 ^ 0xB1422104880010E9))))) >> 31) ^ 0x14A234402);
  v214 = (v213 ^ 0xE44504C3E2EE8C23) & (2 * (v213 & 0xE91194E3E2EF2E42)) ^ v213 & 0xE91194E3E2EF2E42;
  v215 = ((2 * (v213 ^ 0xF4460403623698A3)) ^ 0x3AAF21C101B36DC2) & (v213 ^ 0xF4460403623698A3) ^ (2 * (v213 ^ 0xF4460403623698A3)) & 0x1D5790E080D9B6E0;
  v216 = v215 ^ 0x550902080489221;
  v217 = (v215 ^ 0x806008000912000) & (4 * v214) ^ v214;
  v218 = ((4 * v216) ^ 0x755E43820366DB84) & v216 ^ (4 * v216) & 0x1D5790E080D9B6E0;
  v219 = (v218 ^ 0x1556008000409280) & (16 * v217) ^ v217;
  v220 = ((16 * (v218 ^ 0x801906080992461)) ^ 0xD5790E080D9B6E10) & (v218 ^ 0x801906080992461) ^ (16 * (v218 ^ 0x801906080992461)) & 0x1D5790E080D9B6E0;
  v221 = (v220 ^ 0x1551000000992600) & (v219 << 8) ^ v219;
  v222 = (((v220 ^ 0x80690E0804090E1) << 8) ^ 0x5790E080D9B6E100) & (v220 ^ 0x80690E0804090E1) ^ ((v220 ^ 0x80690E0804090E1) << 8) & 0x1D5790E080D9B600;
  v225 = LODWORD(STACK[0x66C0]) ^ 0xCD984A71;
  v226 = STACK[0x6A90];
  LODWORD(STACK[0x64F0]) = v225;
  LODWORD(STACK[0x66C0]) = v226 ^ v225;
  LODWORD(STACK[0x6810]) = LODWORD(STACK[0x68B0]) ^ 0xB61015A4;
  v223 = v221 ^ 0x1D5790E080D9B6E1 ^ (v222 ^ 0x1510808080900000) & (v221 << 16);
  v224 = v213
       - 0x16EE6B1C1D10D1BELL
       + (((v213 ^ (2
                  * ((v223 << 32) & 0x1D5790E000000000 ^ v223 ^ ((v223 << 32) ^ 0xD9B6E100000000) & (((v222 ^ 0x8471060004916E1) << 16) & 0x1D5790E000000000 ^ 0xD17102000000000 ^ (((v222 ^ 0x8471060004916E1) << 16) ^ 0x10E080D900000000) & (v222 ^ 0x8471060004916E1))))) >> 8) ^ 0xD31D94E2E35C43);
  v227 = v224
       + (v224 >> 5)
       - 0x72043B41836511A5
       - ((v224 + (v224 >> 5) - 0x72043B41836511A5) >> 28)
       + ((v224 + (v224 >> 5) - 0x72043B41836511A5 - ((v224 + (v224 >> 5) - 0x72043B41836511A5) >> 28)) >> 13);
  LODWORD(v224) = ((((v227 >> 3) ^ v227 ^ 0x310D8ACE) - 331539636) ^ (((v227 >> 3) ^ v227 ^ 0xE0179925) + 1025968289) ^ (((v227 >> 3) ^ v227 ^ 0xD11A13EB) + 204112495))
                + 1451246340
                + ((((2 * ((v227 >> 3) & v227)) ^ 0x3314073D) + 654685010) ^ (((2 * ((v227 >> 3) & v227)) ^ 0xB9D20B9D)
                                                                            - 1379680270) ^ (((2 * ((v227 >> 3) & v227)) ^ 0x8AC60CA0)
                                                                                           - 1630029619));
  LODWORD(v227) = (v224 ^ 0xBEB86605) & (2 * (v224 & 0xB83D7709)) ^ v224 & 0xB83D7709;
  LODWORD(v75) = ((2 * (v224 ^ 0xCED02E07)) ^ 0xEDDAB21C) & (v224 ^ 0xCED02E07) ^ (2 * (v224 ^ 0xCED02E07)) & 0x76ED590E;
  LODWORD(v222) = v75 ^ 0x12254902;
  LODWORD(v75) = (v75 ^ 0x60C8100C) & (4 * v227) ^ v227;
  LODWORD(v227) = ((4 * v222) ^ 0xDBB56438) & v222 ^ (4 * v222) & 0x76ED5908;
  LODWORD(v75) = (v227 ^ 0x52A54000) & (16 * v75) ^ v75;
  LODWORD(v227) = ((16 * (v227 ^ 0x24481906)) ^ 0x6ED590E0) & (v227 ^ 0x24481906) ^ (16 * (v227 ^ 0x24481906)) & 0x76ED5900;
  v228 = STACK[0x6AB0];
  v229 = *(_BYTE *)(STACK[0x6AB0] + 15);
  LODWORD(STACK[0x6AA0]) = v2 ^ 0x6F514002 ^ v165 ^ v102 ^ v224 ^ (2
                                                                 * ((v227 ^ 0x66C51000) & ((_DWORD)v75 << 8) ^ v75 ^ v112 ^ ((((v227 ^ 0x1028490E) << 8) ^ 0xED590000) & (v227 ^ 0x1028490E) ^ ((v227 ^ 0x1028490E) << 8) & 0x76ED5900 ^ 0x64490000) & (((v227 ^ 0x66C51000) & ((_DWORD)v75 << 8) ^ v75) << 16)));
  if (((*(_BYTE *)(v228 + ((*(_BYTE *)(v228 + ((*(_BYTE *)(v228 + ((v229 + 11) & 0xF)) + 14) & 0xF)) + 11) & 0xF)) - 1) & 0xE) != 0)
    v230 = (*(_BYTE *)(v228 + ((*(_BYTE *)(v228 + ((*(_BYTE *)(v228 + ((v229 + 11) & 0xF)) + 14) & 0xF)) + 11) & 0xF))
          - 1) & 0xF;
  else
    v230 = 1;
  v231 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)STACK[0x6A80]);
  STACK[0x6AC0] = v230;
  STACK[0x6A60] = v230 - 1;
  return v231();
}

uint64_t sub_100B71498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  BOOL v102;
  int v103;

  v10 = STACK[0x6A80];
  v11 = (STACK[0x6A80] - 2599) | 0x204B;
  v12 = -175343934
      - 1112151687 * (((2 * *(unsigned __int8 *)(a7 + v9)) & 0x170) + (*(unsigned __int8 *)(a7 + v9) ^ 0xFEFBFBB8));
  LODWORD(STACK[0x6A90]) = v11;
  v13 = ((2 * (v12 ^ 0x214564F2)) ^ 0xFAC4E768) & (v12 ^ 0x214564F2) ^ (2 * (v12 ^ 0x214564F2)) & 0x7D6273B4;
  v14 = v13 ^ LODWORD(STACK[0x3044]);
  v15 = (v13 ^ 0x740263A0) & (4 * ((v12 ^ 0x19074676) & (2 * (v12 & (v11 ^ 0x5C273089))) ^ v12 & (v11 ^ 0x5C273089))) ^ (v12 ^ 0x19074676) & (2 * (v12 & (v11 ^ 0x5C273089))) ^ v12 & (v11 ^ 0x5C273089);
  v16 = ((4 * v14) ^ 0xF589CED0) & v14 ^ (4 * v14) & 0x7D6273B4;
  v17 = (v16 ^ 0x75004280) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0x8623124)) ^ 0xD6273B40) & (v16 ^ 0x8623124) ^ (16 * (v16 ^ 0x8623124)) & 0x7D6273B0;
  v19 = v17 ^ 0x7D6273B4 ^ (v18 ^ 0x54223300) & (v17 << 8);
  v20 = v12 ^ (2
             * ((v19 << 16) & 0x7D620000 ^ v19 ^ ((v19 << 16) ^ 0x73B40000) & (((v18 ^ 0x294040B4) << 8) & 0x7D620000 ^ 0x1D000000 ^ (((v18 ^ 0x294040B4) << 8) ^ 0x62730000) & (v18 ^ 0x294040B4))));
  v21 = ((v20 ^ v8 ^ 0x6CA60B8B) + 893137907) ^ ((v20 ^ v8 ^ 0x450FEE03) + 479581819) ^ ((v20 ^ v8 ^ 0x6D0A15A6)
                                                                                       + 881864160);
  v22 = v9 + 1053057095 + v21;
  v23 = ((2 * (v22 ^ 0xC57B32A3)) ^ 0xC2F5CB84) & (v22 ^ 0xC57B32A3) ^ (2 * (v22 ^ 0xC57B32A3)) & 0x617AE5C2;
  v24 = (v22 ^ 0x85799661) & (2 * (v22 & 0xA401D761)) ^ v22 & 0xA401D761;
  v25 = ((4 * (v23 ^ 0x210A2442)) ^ 0x85EB9708) & (v23 ^ 0x210A2442) ^ (4 * (v23 ^ 0x210A2442)) & 0x617AE5C0;
  v26 = (v25 ^ 0x16A8502) & (16 * ((v23 ^ 0x100C1C2) & (4 * v24) ^ v24)) ^ (v23 ^ 0x100C1C2) & (4 * v24) ^ v24;
  v27 = ((16 * (v25 ^ 0x601060C2)) ^ 0x17AE5C20) & (v25 ^ 0x601060C2) ^ (16 * (v25 ^ 0x601060C2)) & 0x617AE5C0;
  v28 = v26 ^ 0x617AE5C2 ^ (v27 ^ 0x12A44C2) & (v26 << 8);
  v29 = (v22 ^ (2
              * ((v28 << 16) & 0x617A0000 ^ v28 ^ ((v28 << 16) ^ 0x65C20000) & (((v27 ^ 0x6050A1C2) << 8) & 0x617A0000 ^ 0x11A0000 ^ (((v27 ^ 0x6050A1C2) << 8) ^ 0x7AE50000) & (v27 ^ 0x6050A1C2u))))) >> 16;
  v30 = v21
      + (((v29 ^ 0x387CF81C) - 1758717165) ^ ((v29 ^ 0xFD1F2F6C) + 1380961379) ^ ((v29 ^ 0xC5637300) + 1781764111));
  v31 = v9 - 332127119 + v30;
  v32 = (v31 ^ 0x7719E331) & (2 * (v31 & 0x4741CBB8)) ^ v31 & 0x4741CBB8;
  v33 = ((2 * (v31 ^ 0xF518E031)) ^ 0x64B25712) & (v31 ^ 0xF518E031) ^ (2 * (v31 ^ 0xF518E031)) & 0xB2592B88;
  v34 = ((4 * (v33 ^ 0x92492889)) ^ 0xC964AE24) & (v33 ^ 0x92492889) ^ (4 * (v33 ^ 0x92492889)) & 0xB2592B88;
  v35 = (v34 ^ 0x80402A09) & (16 * ((v33 ^ 0xA0400309) & (4 * v32) ^ v32)) ^ (v33 ^ 0xA0400309) & (4 * v32) ^ v32;
  v36 = ((16 * (v34 ^ 0x32190189)) ^ 0x2592B890) & (v34 ^ 0x32190189) ^ (16 * (v34 ^ 0x32190189)) & 0xB2592B80;
  v37 = v35 ^ 0xB2592B89 ^ (v36 ^ 0x20102809) & (v35 << 8);
  v38 = (v31 ^ (2
              * ((v37 << 16) & 0x32590000 ^ v37 ^ ((v37 << 16) ^ 0x2B890000) & (((v36 ^ 0x92490309) << 8) & 0x32590000 ^ 0x22500000 ^ (((v36 ^ 0x92490309) << 8) ^ 0x592B0000) & (v36 ^ 0x92490309))))) >> 8;
  v20 ^= 0x6D8CEB64u;
  v39 = v9
      + v30
      - (((v38 ^ 0x71CA5CDB) - 261479332) ^ ((v38 ^ 0xB0D9495D) + 830026206) ^ ((v38 ^ 0xC174F41A) + 1087671451))
      + 399497142;
  v40 = (v39 ^ 0x8E0A42A) & (2 * (v39 & 0x52F2368C)) ^ v39 & 0x52F2368C;
  v41 = ((2 * (v39 ^ 0x28E0853A)) ^ 0xF425676C) & (v39 ^ 0x28E0853A) ^ (2 * (v39 ^ 0x28E0853A)) & 0x7A12B3B6;
  v42 = ((4 * (v41 ^ 0xA129092)) ^ 0xE84ACED8) & (v41 ^ 0xA129092) ^ (4 * (v41 ^ 0xA129092)) & 0x7A12B3B4;
  v43 = (v42 ^ 0x68028286) & (16 * ((v41 ^ 0x500222A0) & (4 * v40) ^ v40)) ^ (v41 ^ 0x500222A0) & (4 * v40) ^ v40;
  v44 = ((16 * (v42 ^ 0x12103126)) ^ 0xA12B3B60) & (v42 ^ 0x12103126) ^ (16 * (v42 ^ 0x12103126)) & 0x7A12B3B0;
  v45 = v44 ^ 0x5A108096;
  v46 = v43 ^ 0x7A12B3B6 ^ (v44 ^ 0x20023300) & (v43 << 8);
  v47 = v39 ^ (2
             * ((v46 << 16) & 0x7A120000 ^ v46 ^ ((v46 << 16) ^ 0x33B60000) & ((v45 << 8) & 0x7A120000 ^ 0x68000000 ^ ((v45 << 8) ^ 0x12B30000) & v45))) ^ 0xCF1E7E2B;
  v48 = ((v47 ^ v20 ^ 0x6AECE61) - 112119393) ^ ((v47 ^ v20 ^ 0xFFB5AEF3) + 4870413) ^ ((v47 ^ v20 ^ 0xDDD95413)
                                                                                      + 572959725);
  v49 = v9 + 1301433674 + v48;
  v50 = (v49 ^ 0xD72FE7A6) & (2 * (v49 & 0xD72FE737)) ^ v49 & 0xD72FE737;
  v51 = ((2 * (v49 ^ 0xF97BEB82)) ^ 0x5CA8196A) & (v49 ^ 0xF97BEB82) ^ (2 * (v49 ^ 0xF97BEB82)) & 0x2E540CB4;
  v52 = v51 ^ 0x22540495;
  v53 = (v51 ^ 0xE000821) & (4 * v50) ^ v50;
  v54 = ((4 * v52) ^ 0xB95032D4) & v52 ^ (4 * v52) & 0x2E540CB4;
  v55 = (v54 ^ 0x28500091) & (16 * v53) ^ v53;
  v56 = ((16 * (v54 ^ 0x6040C21)) ^ 0xE540CB50) & (v54 ^ 0x6040C21) ^ (16 * (v54 ^ 0x6040C21)) & 0x2E540CB0;
  v57 = v55 ^ 0x2E540CB5 ^ (v56 ^ 0x244008A5) & (v55 << 8);
  v58 = (v49 ^ (2
              * ((v57 << 16) & 0x2E540000 ^ v57 ^ ((v57 << 16) ^ 0xCB50000) & (((v56 ^ 0xA1404A5) << 8) & 0x2E540000 ^ 0x2A500000 ^ (((v56 ^ 0xA1404A5) << 8) ^ 0x540C0000) & (v56 ^ 0xA1404A5))))) >> 16;
  v59 = v48 + (((v58 ^ 0x1D74EAE) + 602697892) ^ ((v58 ^ 0x8C153601) - 1372714995) ^ ((v58 ^ 0x8DC2EB00) - 1342581490));
  v60 = v9 + 1334542071 + v59;
  v61 = (v60 ^ 0xA0FB97D7) & (2 * (v60 & 0xB2FB07E7)) ^ v60 & 0xB2FB07E7;
  v62 = ((2 * (v60 ^ 0xC50F9455)) ^ 0xEFE92764) & (v60 ^ 0xC50F9455) ^ (2 * (v60 ^ 0xC50F9455)) & 0x77F493B2;
  v63 = v62 ^ 0x10149092;
  v64 = (v62 ^ 0x47E00320) & (4 * v61) ^ v61;
  v65 = ((4 * v63) ^ 0xDFD24EC8) & v63 ^ (4 * v63) & 0x77F493B0;
  v66 = ((16 * (v65 ^ 0x20249132)) ^ 0x7F493B20) & (v65 ^ 0x20249132) ^ (16 * (v65 ^ 0x20249132)) & 0x77F493B0;
  v67 = (v65 ^ 0x57D00280) & (16 * v64) ^ v64 ^ 0x77F493B2 ^ (v66 ^ 0x77401300) & (((v65 ^ 0x57D00280) & (16 * v64) ^ v64) << 8);
  v68 = (v67 << 16) & 0x77F40000 ^ v67 ^ ((v67 << 16) ^ 0x13B20000) & (((v66 ^ 0xB48092) << 8) & 0x77F40000 ^ 0x3640000 ^ (((v66 ^ 0xB48092) << 8) ^ 0xF4930000) & (v66 ^ 0xB48092));
  v69 = v9
      + v59
      - (((((v60 ^ (2 * v68)) >> 8) ^ 0xF42003D2) - 1721400696) ^ ((((v60 ^ (2 * v68)) >> 8) ^ 0x5197CE19) + 1020415821) ^ ((((v60 ^ (2 * v68)) >> 8) ^ 0xA5CDBFEB) - 930595137))
      + 120066890;
  v70 = (v69 ^ 0x1F82CEF6) & (2 * (v69 & 0x1E22EC06)) ^ v69 & 0x1E22EC06;
  v71 = ((2 * (v69 ^ 0x278206F2)) ^ 0x7341D5E8) & (v69 ^ 0x278206F2) ^ (2 * (v69 ^ 0x278206F2)) & 0x39A0EAF4;
  v72 = v71 ^ 0x8A02A14;
  v73 = (v71 ^ LODWORD(STACK[0x304C])) & (4 * v70) ^ v70;
  v74 = ((4 * v72) ^ 0xE683ABD0) & v72 ^ (4 * v72) & 0x39A0EAF4;
  v75 = v74 ^ 0x19204024;
  v76 = (v74 ^ 0x2080AAC4) & (16 * v73) ^ v73;
  v77 = ((16 * v75) ^ 0x9A0EAF40) & v75 ^ (16 * v75) & 0x39A0EAF0;
  v78 = v76 ^ 0x39A0EAF4 ^ (v77 ^ LODWORD(STACK[0x3050])) & (v76 << 8);
  v79 = v69 ^ (2
             * ((v78 << 16) & 0x39A00000 ^ v78 ^ ((v78 << 16) ^ 0x6AF40000) & (((v77 ^ 0x21A040B4) << 8) & 0x39A00000 ^ 0x19000000 ^ (((v77 ^ 0x21A040B4) << 8) ^ 0x20EA0000) & (v77 ^ 0x21A040B4)))) ^ 0xB3D34E10;
  v80 = ((v79 ^ v20 ^ 0xA70EA836) + 1492211658) ^ ((v79 ^ v20 ^ 0xB63C3246) + 1237568954) ^ ((v79 ^ v20 ^ 0xB7EDF6C4)
                                                                                           + 1209141564);
  v81 = v9 - 405118046 + v80;
  v82 = (v81 ^ 0x3FC54C8B) & (2 * (v81 & 0xBF050912)) ^ v81 & 0xBF050912;
  v83 = ((2 * (v81 ^ 0x31CD5E8F)) ^ 0x1D90AF3A) & (v81 ^ 0x31CD5E8F) ^ (2 * (v81 ^ 0x31CD5E8F)) & v7;
  v84 = v83 ^ 0x82485085;
  v85 = (v83 ^ 0xC000418) & (4 * v82) ^ v82;
  v86 = ((4 * v84) ^ 0x3B215E74) & v84 ^ (4 * v84) & v7;
  v87 = ((16 * (v86 ^ 0x84C80189)) ^ LODWORD(STACK[0x3054])) & (v86 ^ 0x84C80189) ^ (16 * (v86 ^ 0x84C80189)) & (v7 - 12);
  v88 = (v86 ^ 0xA005609) & (16 * v85) ^ v85 ^ (v7 + 1) ^ (v87 ^ 0x8C805100) & (((v86 ^ 0xA005609) & (16 * v85) ^ v85) << 8);
  v89 = (v81 ^ (2
              * ((v88 << 16) & 0xEC80000 ^ v88 ^ ((v88 << 16) ^ 0x579D0000) & (((v87 ^ 0x248060D) << 8) & 0xEC80000 ^ 0x6880000 ^ (((v87 ^ 0x248060D) << 8) ^ 0x48570000) & (v87 ^ 0x248060D))))) >> 16;
  v90 = v80 + (((v89 ^ 0xA6AADC9D) + 1958736056) ^ ((v89 ^ 0xB8B4DB2) - 643931751) ^ ((v89 ^ 0xAD213EAA) + 2134119041));
  v91 = v9 + 926149202 + v90;
  v92 = (v91 ^ 0x1D85FCB8) & (2 * (v91 & 0x9D95FEB2)) ^ v91 & 0x9D95FEB2;
  v93 = ((2 * (v91 ^ 0x14A565BC)) ^ 0x1261361C) & (v91 ^ 0x14A565BC) ^ (2 * (v91 ^ 0x14A565BC)) & 0x89309B0E;
  v94 = 4 * (v93 ^ 0x89108902);
  v95 = (v94 ^ 0x24C26C38) & (v93 ^ 0x89108902);
  v96 = (v93 ^ 0x120120A) & (4 * v92) ^ v92;
  v97 = v95 ^ v94 & 0x89309B0C;
  v98 = (v97 ^ 0x800) & (16 * v96) ^ v96;
  v99 = ((16 * (v97 ^ 0x89309306)) ^ 0x9309B0E0) & (v97 ^ 0x89309306) ^ (16 * (v97 ^ 0x89309306)) & 0x89309B00;
  v100 = v98 ^ 0x89309B0E ^ (v99 ^ 0x8100900E) & (v98 << 8);
  v101 = (v91 ^ (2
               * ((v100 << 16) & 0x9300000 ^ v100 ^ ((v100 << 16) ^ 0x1B0E0000) & (((v99 ^ 0x8300B0E) << 8) & 0x89300000 ^ 0x9200000 ^ (((v99 ^ 0x8300B0E) << 8) ^ 0x309B0000) & (v99 ^ 0x8300B0E))))) >> 8;
  v102 = STACK[0x6A60] == v9;
  LODWORD(STACK[0x6AA0]) ^= v47 ^ v79 ^ 0x821D5835 ^ (v9
                                                    + v90
                                                    - (((v101 ^ 0x6E6619F4) + 1383181566) ^ ((v101 ^ 0xCAC4F497)
                                                                                           - 153927265) ^ ((v101 ^ 0xA43F19AB) - 1742164829))
                                                    - 958877758);
  v103 = v102;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((22245 * v103) ^ v10)))();
}

uint64_t sub_100B72C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;

  v6 = (STACK[0x68D0] & 2) == 0;
  v7 = STACK[0x6A50];
  if ((STACK[0x68D0] & 2) == 0)
    v7 = STACK[0x6A40];
  LODWORD(STACK[0x6800]) = v7;
  v8 = STACK[0x6A30];
  if (!v6)
    v8 = STACK[0x6A20];
  LODWORD(STACK[0x6518]) = v8;
  v9 = STACK[0x66D8];
  if (!v6)
    v9 = STACK[0x6650];
  LODWORD(STACK[0x6500]) = v9;
  v10 = STACK[0x67B0];
  if (!v6)
    v10 = STACK[0x67A0];
  LODWORD(STACK[0x66D8]) = v10;
  v11 = (STACK[0x68C0] & 2) == 0;
  v12 = STACK[0x6A10];
  if ((STACK[0x68C0] & 2) != 0)
    v12 = STACK[0x6A00];
  LODWORD(STACK[0x6358]) = v12;
  v13 = STACK[0x6930];
  if (v11)
    v13 = STACK[0x6920];
  LODWORD(STACK[0x6338]) = v13;
  v14 = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A90]));
  v15 = STACK[0x6528];
  if (v11)
    v15 = STACK[0x64F8];
  LODWORD(STACK[0x6340]) = v15;
  STACK[0x6A60] = -1351825004;
  STACK[0x6A40] = 1692742199;
  STACK[0x6A30] = 429079961;
  STACK[0x6A50] = 1996364664;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 - 8))(1109440462, a2, a3, -1749244439, -712172279, a6, 2094371709);
}

uint64_t sub_100B72E5C(unint64_t a1, uint64_t a2, int a3, unint64_t a4, unint64_t a5)
{
  int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unint64_t v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  unint64_t v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unint64_t v138;
  unint64_t v139;
  unsigned int v140;
  uint64_t (*v141)(unint64_t);
  int v142;
  unint64_t v143;

  LODWORD(STACK[0x6920]) = a3;
  STACK[0x6990] = v17;
  STACK[0x69A0] = v6;
  STACK[0x69B0] = v16;
  STACK[0x69C0] = v14;
  STACK[0x69D0] = v8;
  STACK[0x69E0] = v13;
  STACK[0x69F0] = v11;
  STACK[0x6A00] = a5;
  STACK[0x6A10] = a4;
  STACK[0x6A20] = a1;
  v18 = LODWORD(STACK[0x6A90]) ^ 0x8AD;
  v19 = (*(unsigned __int8 *)(v8 + v7) ^ 0x7BDE4EAE) - 1739848225 + ((2 * *(unsigned __int8 *)(v8 + v7)) & 0x15C);
  LODWORD(STACK[0x6A80]) = v18;
  v20 = v19 * (v18 ^ 0xBDB5C61B) + 874260934;
  v21 = (v20 ^ 0x993AA045) & (2 * (v20 & 0xDC3C8A95)) ^ v20 & 0xDC3C8A95;
  v22 = ((2 * (v20 ^ 0xA12AA44F)) ^ 0xFA2C5DB4) & (v20 ^ 0xA12AA44F) ^ (2 * (v20 ^ 0xA12AA44F)) & 0x7D162EDA;
  v23 = v22 ^ 0x512224A;
  v24 = (v22 ^ 0x74040C92) & (4 * v21) ^ v21;
  v25 = ((4 * v23) ^ 0xF458BB68) & v23 ^ (4 * v23) & 0x7D162ED8;
  v26 = (v25 ^ 0x74102A40) & (16 * v24) ^ v24;
  v27 = ((16 * (v25 ^ 0x9060492)) ^ 0xD162EDA0) & (v25 ^ 0x9060492) ^ (16 * (v25 ^ 0x9060492)) & 0x7D162ED0;
  v28 = v26 ^ 0x7D162EDA ^ (v27 ^ 0x51022C00) & (v26 << 8);
  v29 = v20 ^ (2
             * ((v28 << 16) & 0x7D160000 ^ v28 ^ ((v28 << 16) ^ 0x2EDA0000) & (((v27 ^ 0x2C14025A) << 8) & 0x7D160000 ^ 0x69100000 ^ (((v27 ^ 0x2C14025A) << 8) ^ 0x162E0000) & (v27 ^ 0x2C14025A))));
  v30 = ((v29 ^ v5 ^ 0x47AA3936) - 250821792) ^ ((v29 ^ v5 ^ 0xB3D57E50) + 91456570) ^ ((v29 ^ v5 ^ 0x8A4B9047)
                                                                                      + 1022192175);
  v31 = v7 + v6 + v30;
  v32 = ((2 * (v31 ^ 0x54F61042)) ^ 0x584D7E38) & (v31 ^ 0x54F61042) ^ (2 * (v31 ^ 0x54F61042)) & 0xAC26BF1C;
  v33 = v32 ^ 0xA4228104;
  v34 = (v31 ^ 0xF4D60E5E) & (2 * (v31 & 0xF8D0AF5E)) ^ v31 & 0xF8D0AF5E;
  v35 = (v32 ^ 0x243E1C) & (4 * v34) ^ v34;
  v36 = ((4 * v33) ^ 0xB09AFC70) & v33 ^ (4 * v33) & 0xAC26BF1C;
  v37 = (v36 ^ 0xA002BC00) & (16 * v35) ^ v35;
  v38 = ((16 * (v36 ^ 0xC24030C)) ^ 0xC26BF1C0) & (v36 ^ 0xC24030C) ^ (16 * (v36 ^ 0xC24030C)) & 0xAC26BF10;
  v39 = v37 ^ 0xAC26BF1C ^ (v38 ^ 0x8022B11C) & (v37 << 8);
  v40 = (v31 ^ (2
              * ((v39 << 16) & 0x2C260000 ^ v39 ^ ((v39 << 16) ^ 0x3F1C0000) & (((v38 ^ 0x2C040E1C) << 8) & 0x2C260000 ^ (((v38 ^ 0x2C040E1C) << 8) ^ 0x26BF0000) & (v38 ^ 0x2C040E1C) ^ 0x8000000)))) >> 16;
  v41 = v30 + (((v40 ^ 0x929758DC) + 1084672407) ^ ((v40 ^ 0x60405B00) - 1301165493) ^ ((v40 ^ 0xF2D7FB49) + 551971332));
  v42 = v7 + v11 + v41;
  v43 = ((2 * (v42 ^ 0xDC50487A)) ^ 0x282D7EA) & (v42 ^ 0xDC50487A) ^ (2 * (v42 ^ 0xDC50487A)) & 0x1416BF4;
  v44 = (v42 ^ 0xDC500B6E) & (2 * (v42 & 0xDD11238F)) ^ v42 & 0xDD11238F;
  v45 = ((4 * (v43 ^ 0x1412815)) ^ 0x505AFD4) & (v43 ^ 0x1412815) ^ (4 * (v43 ^ 0x1412815)) & 0x1416BF4;
  v46 = (v45 ^ 0x1012BD1) & (16 * ((v43 ^ 0x1002261) & (4 * v44) ^ v44)) ^ (v43 ^ 0x1002261) & (4 * v44) ^ v44;
  v47 = ((16 * (v45 ^ 0x404021)) ^ 0x1416BF50) & (v45 ^ 0x404021) ^ (16 * (v45 ^ 0x404021)) & 0x1416BF0;
  v48 = v46 ^ 0x1416BF5 ^ (v47 ^ 0x2B00) & (v46 << 8);
  v49 = v29 ^ 0x1401C376;
  v50 = (v42 ^ (2
              * ((v48 << 16) & 0x1410000 ^ v48 ^ ((v48 << 16) ^ 0x6BF50000) & ((((v47 ^ 0x14140A5) << 8) ^ 0x416B0000) & (v47 ^ 0x14140A5) ^ ((v47 ^ 0x14140A5) << 8) & 0x1410000u)))) >> 8;
  v51 = v41 - (((v50 ^ 0xAFE513BE) + 241237013) ^ ((v50 ^ 0x8B52348) - 1456419613) ^ ((v50 ^ 0xA78D2102) + 101240489));
  v52 = v7 + v16 + v51;
  LODWORD(STACK[0x6960]) = v52;
  v53 = (v52 ^ 0xF63A9CF) & (2 * (v52 & 0x2F6B2D80)) ^ v52 & 0x2F6B2D80;
  v54 = ((2 * (v52 ^ 0x9A7E8CF)) ^ 0x4D998A9E) & (v52 ^ 0x9A7E8CF) ^ (2 * (v52 ^ 0x9A7E8CF)) & 0x26CCC54E;
  v55 = v54 ^ 0x22444541;
  v56 = (v54 ^ 0x4888141) & (4 * v53) ^ v53;
  v57 = ((4 * v55) ^ 0x9B33153C) & v55 ^ (4 * v55) & 0x26CCC54C;
  v58 = (v57 ^ 0x2000503) & (16 * v56) ^ v56;
  v59 = v7 + v14 + v51;
  LODWORD(STACK[0x6980]) = v59;
  v60 = ((16 * (v57 ^ 0x24CCC043)) ^ 0x6CCC54F0) & (v57 ^ 0x24CCC043) ^ (16 * (v57 ^ 0x24CCC043)) & 0x26CCC540;
  v61 = (v59 ^ 0x5CD513D4) & (2 * (v59 & 0x5ED65B00)) ^ v59 & 0x5ED65B00;
  v62 = v58 ^ 0x26CCC54F;
  v63 = ((2 * (v59 ^ 0x5CF123D4)) ^ 0x44EF1A8) & (v59 ^ 0x5CF123D4) ^ (2 * (v59 ^ 0x5CF123D4)) & 0x22778D4;
  v64 = v60 ^ 0x200810F;
  v65 = (v63 ^ 0x27054) & (4 * v61) ^ v61;
  v66 = ((4 * (v63 ^ 0x2210854)) ^ 0x89DE350) & (v63 ^ 0x2210854) ^ (4 * (v63 ^ 0x2210854)) & 0x22778D4;
  v67 = (v60 ^ 0x24CC4400) & (v58 << 8);
  v68 = (v66 ^ 0x56044) & (16 * v65) ^ v65;
  v69 = ((16 * (v66 ^ 0x2221884)) ^ 0x22778D40) & (v66 ^ 0x2221884) ^ (16 * (v66 ^ 0x2221884)) & 0x22778D0;
  v70 = (v64 << 8) & 0x26CC0000;
  v71 = v62 ^ v67;
  v72 = v7 + v17 + v51;
  v73 = ((v64 << 8) ^ 0x4CC50000) & v64;
  v74 = (v72 ^ 0x1C94131C) & (2 * (v72 & 0x5ED65B00)) ^ v72 & 0x5ED65B00;
  v75 = ((2 * (v72 ^ 0x2894B51C)) ^ 0xEC85DC38) & (v72 ^ 0x2894B51C) ^ (2 * (v72 ^ 0x2894B51C)) & 0x7642EE1C;
  v76 = v68 ^ 0x22778D4 ^ (v69 ^ 0x2270894) & (v68 << 8);
  LODWORD(STACK[0x6940]) = v76;
  v77 = (v75 ^ 0x6400CE04) & (4 * v74) ^ v74;
  v78 = 4 * (v75 ^ 0x12422204);
  v79 = (v78 ^ 0xD90BB870) & (v75 ^ 0x12422204);
  v80 = v78 & 0x7642EE1C;
  v81 = (v69 << 8) & v9 ^ 0x270000 ^ ((v69 << 8) ^ 0x27089400) & v69;
  v82 = v70 ^ 0x22080000 ^ v73;
  v83 = ((16 * (v79 ^ v80 ^ 0x2640460C)) ^ 0x642EE1C0) & (v79 ^ v80 ^ 0x2640460C) ^ (16 * (v79 ^ v80 ^ 0x2640460C)) & 0x7642EE10;
  v76 <<= 16;
  LODWORD(STACK[0x6930]) = v76;
  v84 = (v79 ^ v80 ^ 0x5002A80C) & (16 * v77) ^ v77 ^ 0x7642EE1C ^ (v83 ^ 0x6402E000) & (((v79 ^ v80 ^ 0x5002A80C) & (16 * v77) ^ v77) << 8);
  v85 = v72 ^ (2
             * ((v84 << 16) & 0x76420000 ^ v84 ^ ((v84 << 16) ^ 0x6E1C0000) & (((v83 ^ 0x12400E1C) << 8) & 0x76420000 ^ 0x34000000 ^ (((v83 ^ 0x12400E1C) << 8) ^ 0x42EE0000) & (v83 ^ 0x12400E1C)))) ^ 0xA726668C;
  LODWORD(STACK[0x6950]) = v85;
  v86 = ((v71 << 16) ^ 0x454F0000) & v82;
  v87 = ((v85 ^ v49 ^ 0xE7FF43BD) + 402701379) ^ ((v85 ^ v49 ^ 0x157A5491) - 360338577) ^ ((v85 ^ v49 ^ 0x41C5E2CF)
                                                                                         - 1103487695);
  v88 = v7 + v10 + v87;
  v89 = (v71 << 16) & 0x26CC0000 ^ v71;
  v90 = (v88 ^ 0xE06D6D1C) & (2 * (v88 & 0xF4616E58)) ^ v88 & 0xF4616E58;
  v91 = ((2 * (v88 ^ 0x202F7D0C)) ^ 0xA89C26A8) & (v88 ^ 0x202F7D0C) ^ (2 * (v88 ^ 0x202F7D0C)) & 0xD44E1354;
  v92 = (v91 ^ 0x844C0214) & (4 * v90) ^ v90;
  v93 = ((4 * (v91 ^ LODWORD(STACK[0x3058]))) ^ 0x51384D50) & (v91 ^ LODWORD(STACK[0x3058])) ^ (4
                                                                                              * (v91 ^ LODWORD(STACK[0x3058]))) & 0xD44E1354;
  v94 = ((16 * (v93 ^ 0x84461204)) ^ 0x44E13540) & (v93 ^ 0x84461204) ^ (16 * (v93 ^ 0x84461204)) & 0xD44E1350;
  v95 = (v93 ^ 0x50080144) & (16 * v92) ^ v92 ^ 0xD44E1354 ^ (v94 ^ 0x44401100) & (((v93 ^ 0x50080144) & (16 * v92) ^ v92) << 8);
  LODWORD(STACK[0x6970]) = (v76 ^ 0x78D40000) & v81;
  v96 = (v88 ^ (2
              * ((v95 << 16) & 0x544E0000 ^ v95 ^ ((v95 << 16) ^ 0x13540000) & (((v94 ^ 0x900E0214) << 8) & 0x544E0000 ^ 0x104C0000 ^ (((v94 ^ 0x900E0214) << 8) ^ 0x4E130000) & (v94 ^ 0x900E0214))))) >> 16;
  v97 = v87 + (((v96 ^ 0x89240F66) + 794957638) ^ ((v96 ^ 0x2EEBB445) - 2001884057) ^ ((v96 ^ 0xA7CFC756) + 25812854));
  v98 = v7 + v12 + v97;
  v99 = (v98 ^ 0xE1B61E2D) & (2 * (v98 & 0x84349EAE)) ^ v98 & 0x84349EAE;
  v100 = ((2 * (v98 ^ 0xE9D7227D)) ^ 0xDBC779A6) & (v98 ^ 0xE9D7227D) ^ (2 * (v98 ^ 0xE9D7227D)) & 0x6DE3BCD2;
  v101 = ((4 * (v100 ^ 0x24208451)) ^ 0xB78EF34C) & (v100 ^ 0x24208451) ^ (4 * (v100 ^ 0x24208451)) & 0x6DE3BCD0;
  v102 = (v101 ^ 0x2582B053) & (16 * ((v100 ^ 0x1C23880) & (4 * v99) ^ v99)) ^ (v100 ^ 0x1C23880) & (4 * v99) ^ v99;
  v103 = ((16 * (v101 ^ 0x48610C93)) ^ 0xDE3BCD30) & (v101 ^ 0x48610C93) ^ (16 * (v101 ^ 0x48610C93)) & 0x6DE3BCD0;
  v104 = v102 ^ 0x6DE3BCD3 ^ (v103 ^ 0x4C238C00) & (v102 << 8);
  LODWORD(STACK[0x6900]) = v89 ^ v86;
  v105 = (v98 ^ (2
               * ((v104 << 16) & 0x6DE30000 ^ v104 ^ ((v104 << 16) ^ 0x3CD30000) & (((v103 ^ 0x21C030C3) << 8) & 0x6DE30000 ^ 0xC430000 ^ (((v103 ^ 0x21C030C3) << 8) ^ 0xE3BC0000) & (v103 ^ 0x21C030C3))))) >> 8;
  v106 = STACK[0x6AC0]
       + v15
       + v97
       - (((v105 ^ 0xF260B895) - 357792730) ^ ((v105 ^ 0xCE84794B) - 699906564) ^ ((v105 ^ 0x3CE2B439) + 607029386));
  v107 = (v106 ^ 0xC307261F) & (2 * (v106 & 0xB57475E)) ^ v106 & 0xB57475E;
  v108 = ((2 * (v106 ^ 0xC383263F)) ^ 0x91A8C2C2) & (v106 ^ 0xC383263F) ^ (2 * (v106 ^ 0xC383263F)) & 0xC8D46160;
  v109 = ((4 * (v108 ^ 0x48542121)) ^ 0x23518584) & (v108 ^ 0x48542121) ^ (4 * (v108 ^ 0x48542121)) & 0xC8D46160;
  v110 = v109 ^ 0xC8846061;
  v111 = (v109 ^ 0x500101) & (16 * ((v108 ^ 0x800041) & (4 * v107) ^ v107)) ^ (v108 ^ 0x800041) & (4 * v107) ^ v107;
  v112 = ((16 * v110) ^ 0x8D461610) & v110 ^ (16 * v110) & 0xC8D46160;
  v113 = v111 ^ 0xC8D46161 ^ (v112 ^ 0x88440061) & (v111 << 8);
  v114 = v106 ^ 0x6DBD3193 ^ (2
                            * ((v113 << 16) & 0x48D40000 ^ v113 ^ ((v113 << 16) ^ 0x61610000) & (((v112 ^ 0x40906161) << 8) & 0x48D40000 ^ 0x8940000 ^ (((v112 ^ 0x40906161) << 8) ^ 0x54610000) & (v112 ^ 0x40906161))));
  v115 = ((v114 ^ v49 ^ 0x5A27E8AC) - 1512564908) ^ ((v114 ^ v49 ^ 0xE10C877E) + 519272578) ^ ((v114 ^ v49 ^ 0xA6DCCF8A)
                                                                                             + 1495478390);
  v116 = STACK[0x6A50];
  v117 = STACK[0x6AC0] + STACK[0x6A50] + v115;
  v118 = (v117 ^ 0xA4FD94D2) & (2 * (v117 & 0xA6F984E0)) ^ v117 & 0xA6F984E0;
  v119 = ((2 * (v117 ^ 0xA45F9552)) ^ 0x54C2364) & (v117 ^ 0xA45F9552) ^ (2 * (v117 ^ 0xA45F9552)) & 0x2A611B2;
  v120 = ((4 * (v119 ^ 0x2A21092)) ^ 0xA9846C8) & (v119 ^ 0x2A21092) ^ (4 * (v119 ^ 0x2A21092)) & 0x2A611B0;
  v121 = (v120 ^ 0x2800092) & (16 * ((v119 ^ 0x40112) & (4 * v118) ^ v118)) ^ (v119 ^ 0x40112) & (4 * v118) ^ v118;
  v122 = ((16 * (v120 ^ 0x261132)) ^ 0x2A611B20) & (v120 ^ 0x261132) ^ (16 * (v120 ^ 0x261132)) & 0x2A611B0;
  v123 = v121 ^ 0x2A611B2 ^ (v122 ^ 0x2201192) & (v121 << 8);
  v124 = ((v123 << 16) ^ 0x11B20000) & (((v122 ^ 0x860092) << 8) & 0x2A60000 ^ 0xA60000 ^ (((v122 ^ 0x860092) << 8) ^ 0x26110000) & (v122 ^ 0x860092));
  v125 = v115
       + (((((v117 ^ (2 * ((v123 << 16) & 0x2A60000 ^ v123 ^ v124))) >> 16) ^ 0xBB164C39) + 2137293321) ^ ((((v117 ^ (2 * ((v123 << 16) & 0x2A60000 ^ v123 ^ v124))) >> 16) ^ 0x715E3B64) - 1255344810) ^ ((((v117 ^ (2 * ((v123 << 16) & 0x2A60000 ^ v123 ^ v124))) >> 16) ^ 0xCA48D5AC) + 238689182));
  v126 = STACK[0x6A40];
  v127 = STACK[0x6AC0] + STACK[0x6A40] + v125;
  v128 = (v127 ^ 0xE625E95F) & (2 * (v127 & 0xF4A00160)) ^ v127 & 0xF4A00160;
  v129 = ((2 * (v127 ^ 0xCE25E95F)) ^ 0x750BD07E) & (v127 ^ 0xCE25E95F) ^ (2 * (v127 ^ 0xCE25E95F)) & 0x3A85E83E;
  v130 = v129 ^ 0xA842801;
  v131 = (v129 ^ 0x38042000) & (4 * v128) ^ v128;
  v132 = ((4 * v130) ^ 0xEA17A0FC) & v130 ^ (4 * v130) & 0x3A85E83C;
  v133 = (v132 ^ 0x2A05A023) & (16 * v131) ^ v131;
  v134 = ((16 * (v132 ^ 0x10804803)) ^ 0xA85E83F0) & (v132 ^ 0x10804803) ^ (16 * (v132 ^ 0x10804803)) & 0x3A85E830;
  v135 = v133 ^ 0x3A85E83F ^ (v134 ^ 0x2804800F) & (v133 << 8);
  v136 = (v127 ^ (2
                * ((v135 << 16) & 0x3A850000 ^ v135 ^ ((v135 << 16) ^ 0x683F0000) & (((v134 ^ 0x1281680F) << 8) & 0x3A850000 ^ 0x3A050000 ^ (((v134 ^ 0x1281680F) << 8) ^ 0x5E80000) & (v134 ^ 0x1281680F))))) >> 8;
  v137 = ((v136 ^ 0x20DD82C) - 1000399479) ^ ((v136 ^ 0xFD52A6C) - 913838135) ^ ((v136 ^ 0xD095391) - 883190218);
  v138 = STACK[0x6A60];
  LODWORD(STACK[0x68F0]) = v125;
  LODWORD(STACK[0x68E0]) = v137;
  v139 = STACK[0x6A30];
  v140 = LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x6950]) ^ v114 ^ 0xAEB755BB;
  v141 = (uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                              + 8
                                                              * ((30692 * (STACK[0x6AC0] == STACK[0x69E0])) ^ LODWORD(STACK[0x6A90])))
                                                  - 8);
  v142 = STACK[0x6AC0] + STACK[0x6A00] + v125 - v137;
  v143 = STACK[0x6A20];
  STACK[0x6A50] = v116 + 1;
  LODWORD(STACK[0x6AA0]) = v140 ^ v142;
  STACK[0x6A30] = v139 + 1;
  STACK[0x6A60] = v138 + 1;
  STACK[0x6A40] = v126 + 1;
  return v141(v143 - 1);
}

uint64_t sub_100B747A8(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  char v225;
  unsigned __int8 v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  unint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;

  v11 = (STACK[0x68D0] & 2) == 0;
  v12 = STACK[0x6790];
  if ((STACK[0x68D0] & 2) != 0)
    v12 = STACK[0x6780];
  LODWORD(STACK[0x6920]) = v12;
  v13 = STACK[0x6688];
  if (!v11)
    v13 = STACK[0x6680];
  LODWORD(STACK[0x6970]) = v13;
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x6658]) ^ LODWORD(STACK[0x64F0]);
  v14 = STACK[0x6678];
  if ((STACK[0x68C0] & 2) != 0)
    v14 = STACK[0x6668];
  LODWORD(STACK[0x6330]) = v14;
  v15 = v9 + v8 - a7;
  v16 = v9;
  v17 = (v15 ^ 0xCFF7CB82) & (2 * (v15 & 0xCFF61328)) ^ v15 & 0xCFF61328;
  v18 = ((2 * (v15 ^ 0x53B7CF82)) ^ 0x3883B954) & (v15 ^ 0x53B7CF82) ^ (2 * (v15 ^ 0x53B7CF82)) & 0x9C41DCAA;
  v19 = v18 ^ LODWORD(STACK[0x1038]);
  v20 = (v18 ^ 0x18009800) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x710772A8) & v19 ^ (4 * v19) & 0x9C41DCA8;
  v22 = (v21 ^ 0x100150A2) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x8C408C02)) ^ 0xC41DCAA0) & (v21 ^ 0x8C408C02) ^ (16 * (v21 ^ 0x8C408C02)) & 0x9C41DCA0;
  v24 = v22 ^ 0x9C41DCAA ^ (v23 ^ 0x8401C80A) & (v22 << 8);
  v25 = (v15 ^ (2
              * ((v24 << 16) & 0x1C410000 ^ v24 ^ ((v24 << 16) ^ 0x5CAA0000) & (((v23 ^ 0x1840140A) << 8) & 0x1C410000 ^ 0x1C010000 ^ (((v23 ^ 0x1840140A) << 8) ^ 0x41DC0000) & (v23 ^ 0x1840140A))))) >> 13;
  v26 = ((v25 ^ 0x6EF2161F) - 457569702) ^ ((v25 ^ 0x37AFE9DC) - 1108871781) ^ ((v25 ^ 0x595B846E) - 753690583);
  v27 = v16 + LODWORD(STACK[0x68F0]) + v26 - LODWORD(STACK[0x68E0]) - a4;
  v28 = (v27 ^ 0x586C3D22) & (2 * (v27 & 0x608EBDA8)) ^ v27 & 0x608EBDA8;
  v29 = ((2 * (v27 ^ 0xD9647C62)) ^ 0x73D58394) & (v27 ^ 0xD9647C62) ^ (2 * (v27 ^ 0xD9647C62)) & 0xB9EAC1CA;
  v30 = v29 ^ 0x882A404A;
  v31 = (v29 ^ 0x840818A) & (4 * v28) ^ v28;
  v32 = ((4 * v30) ^ 0xE7AB0728) & v30 ^ (4 * v30) & 0xB9EAC1C8;
  v33 = (v32 ^ 0xA1AA0100) & (16 * v31) ^ v31;
  v34 = ((16 * (v32 ^ 0x1840C0C2)) ^ 0x9EAC1CA0) & (v32 ^ 0x1840C0C2) ^ (16 * (v32 ^ 0x1840C0C2)) & 0xB9EAC1C0;
  v35 = v33 ^ 0xB9EAC1CA ^ (v34 ^ 0x98A80000) & (v33 << 8);
  v36 = (v27 ^ (2
              * ((v35 << 16) & 0x39EA0000 ^ v35 ^ ((v35 << 16) ^ 0x41CA0000) & (((v34 ^ 0x2142C14A) << 8) & 0xB9EA0000 ^ 0x112A0000 ^ (((v34 ^ 0x2142C14A) << 8) ^ 0x6AC10000) & (v34 ^ 0x2142C14A))))) >> 1;
  v37 = v16
      + LODWORD(STACK[0x68F0])
      + v26
      + (((v36 ^ 0x6FCB4B91) - 1700936936) ^ ((v36 ^ 0xA413FF76) + 1363507185) ^ ((v36 ^ 0xC3BF2BF9) + 921281408))
      - LODWORD(STACK[0x68E0])
      - a1;
  v38 = (v37 ^ 0xC9CD37E1) & (2 * (v37 & 0xDC1B7F4)) ^ v37 & 0xDC1B7F4;
  v39 = ((2 * (v37 ^ 0xC24C1141)) ^ 0x9F1B4D6A) & (v37 ^ 0xC24C1141) ^ (2 * (v37 ^ 0xC24C1141)) & 0xCF8DA6B4;
  v40 = v39 ^ LODWORD(STACK[0x103C]);
  v41 = (v39 ^ 0xF090420) & (4 * v38) ^ v38;
  v42 = ((4 * v40) ^ 0x3E369AD4) & v40 ^ (4 * v40) & 0xCF8DA6B4;
  v43 = (v42 ^ 0xE048280) & (16 * v41) ^ v41;
  v44 = ((16 * (v42 ^ 0xC1892421)) ^ 0xF8DA6B50) & (v42 ^ 0xC1892421) ^ (16 * (v42 ^ 0xC1892421)) & 0xCF8DA6B0;
  v45 = v43 ^ 0xCF8DA6B5 ^ (v44 ^ 0xC88822A5) & (v43 << 8);
  v46 = v37 ^ (2
             * ((v45 << 16) & 0x4F8D0000 ^ v45 ^ ((v45 << 16) ^ 0x26B50000) & (((v44 ^ 0x70584A5) << 8) & 0x4F8D0000 ^ 0x42090000 ^ (((v44 ^ 0x70584A5) << 8) ^ 0x8DA60000) & (v44 ^ 0x70584A5))));
  v47 = v46 ^ a8;
  v48 = (((v46 ^ 0xAB9988E0) + 98356133) ^ ((v46 ^ 0x18E721D1) - 1230871914) ^ ((v46 ^ 0xB4658422) + 438355815))
      + 1253133536
      + ((((v46 >> 10) ^ 0x53AEEA5E) + 343450126) ^ (((v46 >> 10) ^ 0x43FE1CF2) + 69751970) ^ (((v46 >> 10) ^ 0x10513067)
                                                                                             + 1468495925))
      + 982;
  v49 = ((2 * (v48 & 0xC418B259)) & 0x80044A2 | v48 & 0xC418B259) ^ (2 * (v48 & 0xC418B259)) & (v48 ^ 0xCA986FBA);
  v50 = ((2 * (v48 ^ 0xCA986FBA)) ^ 0x1D01BBC6) & (v48 ^ 0xCA986FBA) ^ (2 * (v48 ^ 0xCA986FBA)) & 0xE80DDE2;
  v51 = v50 ^ 0x2804421;
  v52 = (v50 ^ 0x2009DC1) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0x3A03778C) & v51 ^ (4 * v51) & 0xE80DDE0;
  v54 = (v53 ^ 0xA005583) & (16 * v52) ^ v52;
  v55 = ((16 * (v53 ^ 0x4808863)) ^ 0xE80DDE30) & (v53 ^ 0x4808863) ^ (16 * (v53 ^ 0x4808863)) & 0xE80DDE0;
  v56 = v54 ^ 0xE80DDE3 ^ (v55 ^ 0x800DCC3) & (v54 << 8);
  v57 = (v48 ^ (2
              * ((v56 << 16) & 0xE800000 ^ v56 ^ ((v56 << 16) ^ 0x5DE30000) & (((v55 ^ 0x68001C3) << 8) & 0xE800000 ^ (((v55 ^ 0x68001C3) << 8) ^ 0x80DD0000) & (v55 ^ 0x68001C3) ^ 0xE000000)))) >> 3;
  v58 = v48
      - (((v57 ^ 0x9EA3A478) - 1924400500) ^ ((v57 ^ 0x66F0988E) + 1964557950) ^ ((v57 ^ 0xE0501DC5) - 206027977))
      - 1020971509;
  v59 = v58 + 215940111;
  v60 = ((v58 + 1128644815) ^ 0xFBAD0F1A) & (2 * ((v58 + 1128644815) & STACK[0x1040])) ^ (v58 + 1128644815) & STACK[0x1040];
  v61 = ((2 * ((v58 + 1128644815) ^ 0xD8EF0838)) ^ 0x468C4F56) & ((v58 + 1128644815) ^ 0xD8EF0838) ^ (2 * ((v58 + 1128644815) ^ 0xD8EF0838)) & 0x234627AA;
  v62 = v61 ^ 0x214220A9;
  v63 = (v61 ^ 0x2060621) & (4 * v60) ^ v60;
  v64 = ((4 * v62) ^ 0x8D189EAC) & v62 ^ (4 * v62) & 0x234627A8;
  v65 = (v64 ^ 0x10006A3) & (16 * v63) ^ v63;
  v66 = ((16 * (v64 ^ LODWORD(STACK[0x1044]))) ^ 0x34627AB0) & (v64 ^ LODWORD(STACK[0x1044])) ^ (16
                                                                                               * (v64 ^ LODWORD(STACK[0x1044]))) & 0x234627A0;
  v67 = v65 ^ 0x234627AB ^ (v66 ^ 0x2042220B) & (v65 << 8);
  v68 = ((v58 + 1128644815) ^ (2
                             * ((v67 << 16) & 0x23460000 ^ v67 ^ ((v67 << 16) ^ 0x27AB0000) & (((v66 ^ 0x304050B) << 8) & 0x23460000 ^ 0x21400000 ^ (((v66 ^ 0x304050B) << 8) ^ 0x46270000) & (v66 ^ 0x304050B))))) >> 8;
  v69 = v58
      + 1353281659
      + (((v68 ^ 0x28C9C728) - 542142079) ^ ((v68 ^ 0xE4C765E4) + 329331533) ^ ((v68 ^ 0xCCF583AC) + 999544069));
  v70 = (v69 ^ 0xE40E841E) & (2 * (v69 & 0xF6A8081E)) ^ v69 & 0xF6A8081E;
  v71 = ((2 * (v69 ^ 0x884E840A)) ^ 0xFDCD1828) & (v69 ^ 0x884E840A) ^ (2 * (v69 ^ 0x884E840A)) & 0x7EE68C14;
  v72 = v71 ^ 0x2228414;
  v73 = (v71 ^ 0x7CC00000) & (4 * v70) ^ v70;
  v74 = ((4 * v72) ^ 0xFB9A3050) & v72 ^ (4 * v72) & 0x7EE68C14;
  v75 = (v74 ^ 0x7A820004) & (16 * v73) ^ v73;
  v76 = ((16 * (v74 ^ 0x4648C04)) ^ 0xEE68C140) & (v74 ^ 0x4648C04) ^ (16 * (v74 ^ 0x4648C04)) & 0x7EE68C10;
  v77 = v75 ^ 0x7EE68C14 ^ (v76 ^ 0x6E608000) & (v75 << 8);
  v78 = (v69 ^ (2
              * ((v77 << 16) & 0x7EE60000 ^ v77 ^ ((v77 << 16) ^ 0xC140000) & (((v76 ^ 0x10860C14) << 8) & 0x7EE60000 ^ 0x18620000 ^ (((v76 ^ 0x10860C14) << 8) ^ 0x668C0000) & (v76 ^ 0x10860C14))))) >> 4;
  v79 = v69
      - 453303395
      + (((v78 ^ 0xA352C471) - 799906011) ^ ((v78 ^ 0x2A78802D) + 1501045625) ^ ((v78 ^ 0x881C955F) - 82037237))
      + 937;
  v80 = (v79 ^ 0x5F764E5D) & (2 * (v79 & 0x9F766E81)) ^ v79 & 0x9F766E81;
  v81 = ((2 * (v79 ^ 0x6B1E1F5D)) ^ 0xE8D0E3B8) & (v79 ^ 0x6B1E1F5D) ^ (2 * (v79 ^ 0x6B1E1F5D)) & 0xF46871DC;
  v82 = v81 ^ 0x14281044;
  v83 = (v81 ^ 0xE0406048) & (4 * v80) ^ v80;
  v84 = ((4 * v82) ^ 0xD1A1C770) & v82 ^ (4 * v82) & 0xF46871DC;
  v85 = (v84 ^ 0xD0204150) & (16 * v83) ^ v83;
  v86 = ((16 * (v84 ^ 0x2448308C)) ^ 0x46871DC0) & (v84 ^ 0x2448308C) ^ (16 * (v84 ^ 0x2448308C)) & 0xF46871D0;
  v87 = v85 ^ 0xF46871DC ^ (v86 ^ 0x4400111C) & (v85 << 8);
  v88 = v79 ^ (2
             * ((v87 << 16) & 0x74680000 ^ v87 ^ ((v87 << 16) ^ 0x71DC0000) & (((v86 ^ 0xB068601C) << 8) & 0x74680000 ^ 0x14080000 ^ (((v86 ^ 0xB068601C) << 8) ^ 0x68710000) & (v86 ^ 0xB068601C))));
  v89 = (((v88 ^ 0xF5A11A4B) + 146790623) ^ ((v88 ^ 0x99EDD83) - 192930025) ^ ((v88 ^ 0x52DAE53C) - 1346099286))
      - ((((v88 >> 14) ^ 0x156BF02C) + 2054813770) ^ (((v88 >> 14) ^ 0x699B1B61) + 109646597) ^ (((v88 >> 14) ^ 0x7CF250D9)
                                                                                               + 333469885));
  v90 = ((v89 + 794933236) ^ 0xE3BADB1A) & (2 * ((v89 + 794933236) & 0xEBB31B9C)) ^ (v89 + 794933236) & 0xEBB31B9C;
  v91 = ((2 * ((v89 + 794933236) ^ 0x21BCCC02)) ^ 0x941FAF3C) & ((v89 + 794933236) ^ 0x21BCCC02) ^ (2
                                                                                                  * ((v89 + 794933236) ^ 0x21BCCC02)) & 0xCA0FD79E;
  v92 = v91 ^ 0x4A005082;
  v93 = (v91 ^ 0x800C8610) & (4 * v90) ^ v90;
  v94 = ((4 * v92) ^ 0x283F5E78) & v92 ^ (4 * v92) & 0xCA0FD79C;
  v95 = (v94 ^ 0x80F5606) & (16 * v93) ^ v93;
  v96 = ((16 * (v94 ^ 0xC2008186)) ^ 0xA0FD79E0) & (v94 ^ 0xC2008186) ^ (16 * (v94 ^ 0xC2008186)) & 0xCA0FD790;
  v97 = v95 ^ 0xCA0FD79E ^ (v96 ^ 0x800D511E) & (v95 << 8);
  v98 = ((v89 + 794933236) ^ (2
                            * ((v97 << 16) & 0x4A0F0000 ^ v97 ^ ((v97 << 16) ^ 0x579E0000) & (((v96 ^ 0x4A02861E) << 8) & 0x4A0F0000 ^ 0x40080000 ^ (((v96 ^ 0x4A02861E) << 8) ^ 0xFD70000) & (v96 ^ 0x4A02861E))))) >> 4;
  v99 = v89
      + 1826711274
      + (((v98 ^ 0x1EBE8D11) + 642039452) ^ ((v98 ^ 0xA12CACF0) - 1713987717) ^ ((v98 ^ 0xB0292AAB) - 1999431390));
  v100 = (v99 ^ LODWORD(STACK[0x1048])) & (2 * (v99 & 0x76F233E5)) ^ v99 & 0x76F233E5;
  v101 = ((2 * (v99 ^ 0x69C38E77)) ^ 0x3E637B24) & (v99 ^ 0x69C38E77) ^ (2 * (v99 ^ 0x69C38E77)) & 0x1F31BD92;
  v102 = v101 ^ 0x1108492;
  v103 = (v101 ^ 0x1E011900) & (4 * v100) ^ v100;
  v104 = ((4 * v102) ^ 0x7CC6F648) & v102 ^ (4 * v102) & 0x1F31BD90;
  v105 = (v104 ^ 0x1C00B400) & (16 * v103) ^ v103;
  v106 = ((16 * (v104 ^ 0x3310992)) ^ 0xF31BD920) & (v104 ^ 0x3310992) ^ (16 * (v104 ^ 0x3310992)) & 0x1F31BD90;
  v107 = v105 ^ 0x1F31BD92 ^ (v106 ^ 0x13119900) & (v105 << 8);
  v108 = v99 ^ (2
              * ((v107 << 16) & 0x1F310000 ^ v107 ^ ((v107 << 16) ^ 0x3D920000) & (((v106 ^ 0xC202492) << 8) & 0x1F310000 ^ (((v106 ^ 0xC202492) << 8) ^ 0x31BD0000) & (v106 ^ 0xC202492) ^ 0xE000000)));
  v109 = (((v108 ^ 0xE9D8587) + 261802912) ^ ((v108 ^ 0xC4AF1793) - 978822772) ^ ((v108 ^ 0x7717F0FD) + 1980808934))
       - ((((v108 >> 15) ^ 0x31CB0D38) - 27855533) ^ (((v108 >> 15) ^ 0x6A4B05B7) - 1512636962) ^ (((v108 >> 15) ^ 0x5B8172C5)
                                                                                                 - 1810068816));
  v110 = ((v109 + 1933997406) ^ 0x362BDFC8) & (2 * ((v109 + 1933997406) & 0xA033DFD1)) ^ (v109 + 1933997406) & 0xA033DFD1;
  v111 = ((2 * ((v109 + 1933997406) ^ 0x764ED7C8)) ^ 0xACFA1032) & ((v109 + 1933997406) ^ 0x764ED7C8) ^ (2 * ((v109 + 1933997406) ^ 0x764ED7C8)) & 0xD67D0818;
  v112 = v111 ^ 0x52050809;
  v113 = (v111 ^ 0x80580000) & (4 * v110) ^ v110;
  v114 = ((4 * v112) ^ 0x59F42064) & v112 ^ (4 * v112) & 0xD67D0818;
  v115 = (v114 ^ 0x50740000) & (16 * v113) ^ v113;
  v116 = ((16 * (v114 ^ 0x86090819)) ^ 0x67D08190) & (v114 ^ 0x86090819) ^ (16 * (v114 ^ 0x86090819)) & 0xD67D0810;
  v117 = v115 ^ 0xD67D0819 ^ (v116 ^ 0x46500000) & (v115 << 8);
  v118 = ((((v109 + 1933997406) ^ (2
                                 * ((v117 << 16) & 0x567D0000 ^ v117 ^ ((v117 << 16) ^ 0x8190000) & (((v116 ^ 0x902D0809) << 8) & 0xD67D0000 ^ 0x2750000 ^ (((v116 ^ 0x902D0809) << 8) ^ 0x7D080000) & (v116 ^ 0x902D0809))))) >> 4) ^ 0xFF304301)
       + v109;
  v119 = v118 - 2 * ((v118 + 326784304) & 0x7B4CC03F ^ v118 & 1) + 247928174;
  v120 = ((v118 + 614945320) ^ 0x2DA4AC2E) & (2 * ((v118 + 614945320) & 0x8DA92EAF)) ^ (v118 + 614945320) & 0x8DA92EAF;
  v121 = ((2 * ((v118 + 614945320) ^ 0x36A4E560)) ^ 0x761B979E) & ((v118 + 614945320) ^ 0x36A4E560) ^ (2 * ((v118 + 614945320) ^ 0x36A4E560)) & 0xBB0DCBCE;
  v122 = v121 ^ 0x89044841;
  v123 = (v121 ^ 0xB209838D) & (4 * v120) ^ v120;
  v124 = ((4 * v122) ^ 0xEC372F3C) & v122 ^ (4 * v122) & 0xBB0DCBCC;
  v125 = (v124 ^ 0xA8050B03) & (16 * v123) ^ v123;
  v126 = ((16 * (v124 ^ 0x1308C0C3)) ^ 0xB0DCBCF0) & (v124 ^ 0x1308C0C3) ^ (16 * (v124 ^ 0x1308C0C3)) & 0xBB0DCBC0;
  v127 = v125 ^ 0xBB0DCBCF ^ (v126 ^ 0xB00C8800) & (v125 << 8);
  v128 = ((v118 + 614945320) ^ (2
                              * ((v127 << 16) & 0x3B0D0000 ^ v127 ^ ((v127 << 16) ^ 0x4BCF0000) & (((v126 ^ 0xB01430F) << 8) & 0x3B0D0000 ^ 0x32040000 ^ (((v126 ^ 0xB01430F) << 8) ^ 0xDCB0000) & (v126 ^ 0xB01430F))))) >> 14;
  v129 = v118
       + 1022477305
       + (((v128 ^ 0x6C86B2F4) + 742664966) ^ ((v128 ^ 0xFF74C84) + 1328928118) ^ ((v128 ^ 0x637248D2) + 598790436));
  v130 = (v129 ^ 0x3099EDC9) & (2 * (v129 & 0x349D8D8A)) ^ v129 & 0x349D8D8A;
  v131 = ((2 * (v129 ^ 0x38B1FCD9)) ^ 0x1858E2A6) & (v129 ^ 0x38B1FCD9) ^ (2 * (v129 ^ 0x38B1FCD9)) & 0xC2C7152;
  v132 = v131 ^ 0x4241151;
  v133 = (v131 ^ 0x86101) & (4 * v130) ^ v130;
  v134 = ((4 * v132) ^ 0x30B1C54C) & v132 ^ (4 * v132) & 0xC2C7150;
  v135 = (v134 ^ 0x204153) & (16 * v133) ^ v133;
  v136 = ((16 * (v134 ^ 0xC0C3013)) ^ 0xC2C71530) & (v134 ^ 0xC0C3013) ^ (16 * (v134 ^ 0xC0C3013)) & 0xC2C7150;
  v137 = v135 ^ 0xC2C7153 ^ (v136 ^ 0x41143) & (v135 << 8);
  v138 = (v129 ^ (2
                * ((v137 << 16) & 0xC2C0000 ^ v137 ^ ((v137 << 16) ^ 0x71530000) & (((v136 ^ 0xC286043) << 8) & 0xC2C0000 ^ (((v136 ^ 0xC286043) << 8) ^ 0x2C710000) & (v136 ^ 0xC286043) ^ 0xC0000)))) >> 7;
  v139 = v129
       - (((v138 ^ 0x8FA829FA) + 1741429942) ^ ((v138 ^ 0x7EAFBBF) - 275853583) ^ ((v138 ^ 0x881B589B) + 1618963925))
       + 1605390862;
  v140 = (v139 ^ 0xB88AFA4C) & (2 * (v139 & 0xBD2AFB0E)) ^ v139 & 0xBD2AFB0E;
  v141 = ((2 * (v139 ^ 0xD2DFCA4C)) ^ 0xDFEA6284) & (v139 ^ 0xD2DFCA4C) ^ (2 * (v139 ^ 0xD2DFCA4C)) & 0x6FF53142;
  v142 = v141 ^ 0x20151142;
  v143 = (v141 ^ 0x4DE02000) & (4 * v140) ^ v140;
  v144 = ((4 * v142) ^ 0xBFD4C508) & v142 ^ (4 * v142) & 0x6FF53140;
  v145 = v143 ^ 0x6FF53142 ^ (v144 ^ 0x2FD40100) & (16 * v143);
  v146 = (16 * (v144 ^ 0x40213042)) & 0x6FF53140 ^ 0xA42142 ^ ((16 * (v144 ^ 0x40213042)) ^ 0xFF531420) & (v144 ^ 0x40213042);
  v147 = (v145 << 8) & 0x6FF53100 ^ v145 ^ ((v145 << 8) ^ 0xF5314200) & v146;
  v148 = v139 ^ (2
               * ((v147 << 16) & 0x6FF50000 ^ v147 ^ ((v147 << 16) ^ 0x31420000) & ((v146 << 8) & 0x6FF50000 ^ 0xAC40000 ^ ((v146 << 8) ^ 0x75310000) & v146)));
  v149 = v47 ^ v108;
  v150 = (((v148 ^ LODWORD(STACK[0x104C])) - 1124096540) ^ ((v148 ^ 0xD7EFB218) - 251761319) ^ ((v148 ^ LODWORD(STACK[0x1050]))
                                                                                              - 535861241))
       - ((((v148 >> 13) ^ 0x7EABCDBC) - 209036140) ^ (((v148 >> 13) ^ 0xE84E635) - 2086308069) ^ (((v148 >> 13) ^ 0x702B7372)
                                                                                                 - 49618338))
       + 1605881994;
  v151 = (v150 ^ 0xB41F50ED) & (2 * (v150 & 0x815F588D)) ^ v150 & 0x815F588D;
  v152 = ((2 * (v150 ^ 0xB6BFE0EF)) ^ 0x6FC170C4) & (v150 ^ 0xB6BFE0EF) ^ (2 * (v150 ^ 0xB6BFE0EF)) & 0x37E0B862;
  v153 = v152 ^ 0x10208822;
  v154 = (v152 ^ 0x7C02040) & (4 * v151) ^ v151;
  v155 = ((4 * v153) ^ 0xDF82E188) & v153 ^ (4 * v153) & 0x37E0B860;
  v156 = (v155 ^ 0x1780A002) & (16 * v154) ^ v154;
  v157 = ((16 * (v155 ^ 0x20601862)) ^ 0x7E0B8620) & (v155 ^ 0x20601862) ^ (16 * (v155 ^ 0x20601862)) & 0x37E0B860;
  v158 = v156 ^ 0x37E0B862 ^ (v157 ^ 0x36008000) & (v156 << 8);
  v159 = (((v150 ^ (2
                  * ((v158 << 16) & 0x37E00000 ^ v158 ^ ((v158 << 16) ^ 0x38620000) & (((v157 ^ 0x1E03842) << 8) & 0x37E00000 ^ 0x17400000 ^ (((v157 ^ 0x1E03842) << 8) ^ 0x60B80000) & (v157 ^ 0x1E03842))))) >> 4) ^ 0x8E5E284)
       + v150;
  v160 = (v159 ^ 0xA41F5C4C) & (2 * (v159 & 0x815F588D)) ^ v159 & 0x815F588D;
  v161 = ((2 * (v159 ^ 0xA401EC44)) ^ 0x4ABD6992) & (v159 ^ 0xA401EC44) ^ (2 * (v159 ^ 0xA401EC44)) & 0x255EB4C8;
  v162 = v161 ^ 0x25429449;
  v163 = (v161 ^ 0x201C3001) & (4 * v160) ^ v160;
  v164 = ((4 * v162) ^ 0x957AD324) & v162 ^ (4 * v162) & 0x255EB4C8;
  v165 = (v164 ^ 0x55A9000) & (16 * v163) ^ v163;
  v166 = ((16 * (v164 ^ 0x200424C9)) ^ 0x55EB4C90) & (v164 ^ 0x200424C9) ^ (16 * (v164 ^ 0x200424C9)) & 0x255EB4C0;
  v167 = v165 ^ 0x255EB4C9 ^ (v166 ^ 0x54A0400) & (v165 << 8);
  v168 = v159 ^ (2
               * ((v167 << 16) & 0x255E0000 ^ v167 ^ ((v167 << 16) ^ 0x34C90000) & (((v166 ^ 0x2014B049) << 8) & 0x255E0000 ^ 0x214A0000 ^ (((v166 ^ 0x2014B049) << 8) ^ 0x5EB40000) & (v166 ^ 0x2014B049))));
  v169 = v149 ^ v168;
  v170 = ((v168 ^ 0xAE9A86B) - 708593723) ^ ((v168 ^ 0xB1E7DB25) + 1858978955) ^ ((v168 ^ 0x387C4251) - 413770241);
  v171 = ((v170 - 1801205211) ^ 0xB8F31FBA) & (2 * ((v170 - 1801205211) & 0xBAFA5F33)) ^ (v170 - 1801205211) & 0xBAFA5F33;
  v172 = ((2 * ((v170 - 1801205211) ^ 0xBD97839A)) ^ 0xEDBB952) & ((v170 - 1801205211) ^ 0xBD97839A) ^ (2 * ((v170 - 1801205211) ^ 0xBD97839A)) & 0x76DDCA8;
  v173 = v172 ^ 0x12444A9;
  v174 = (v172 ^ 0x6499800) & (4 * v171) ^ v171;
  v175 = ((4 * v173) ^ 0x1DB772A4) & v173 ^ (4 * v173) & 0x76DDCA8;
  v176 = (v175 ^ 0x52550A0) & (16 * v174) ^ v174;
  v177 = ((16 * (v175 ^ 0x2488C09)) ^ 0x76DDCA90) & (v175 ^ 0x2488C09) ^ (16 * (v175 ^ 0x2488C09)) & 0x76DDCA0;
  v178 = v176 ^ 0x76DDCA9 ^ (v177 ^ 0x64DC800) & (v176 << 8);
  v179 = v170
       + 1335765336
       + ((((v170 - 1801205211) ^ (2
                                 * ((v178 << 16) & 0x76D0000 ^ v178 ^ ((v178 << 16) ^ 0x5CA90000) & (((v177 ^ 0x1201429) << 8) & 0x76D0000 ^ 0x2210000 ^ (((v177 ^ 0x1201429) << 8) ^ 0x6DDC0000) & (v177 ^ 0x1201429))))) >> 10) ^ 0x2F1CF9);
  v180 = v179 - (v179 >> 1);
  v181 = v59 ^ v10 ^ v119 ^ v180;
  v182 = (((v180 ^ 0xDF027D5D) + 250136668) ^ ((v180 ^ 0xE6301399) + 937076384) ^ ((v180 ^ 0xFEC7758E) + 791527561))
       - ((((v180 >> 8) ^ 0x64CB2598) + 283338480) ^ (((v180 >> 8) ^ 0xFEB3DA1B) - 1969514131) ^ (((v180 >> 8) ^ 0x9ABF0A98)
                                                                                                - 292075024));
  v183 = ((v182 + 2031738062) ^ LODWORD(STACK[0x1054])) & (2 * ((v182 + 2031738062) & 0xE5B62B52)) ^ (v182 + 2031738062) & 0xE5B62B52;
  v184 = ((2 * ((v182 + 2031738062) ^ 0x699DFB93)) ^ 0x1857A182) & ((v182 + 2031738062) ^ 0x699DFB93) ^ (2 * ((v182 + 2031738062) ^ 0x699DFB93)) & 0x8C2BD0C0;
  v185 = v184 ^ 0x84285041;
  v186 = (v184 ^ 0x8018081) & (4 * v183) ^ v183;
  v187 = ((4 * v185) ^ 0x30AF4304) & v185 ^ (4 * v185) & 0x8C2BD0C0;
  v188 = (v187 ^ 0x2B4001) & (16 * v186) ^ v186;
  v189 = ((16 * (v187 ^ 0x8C0090C1)) ^ 0xC2BD0C10) & (v187 ^ 0x8C0090C1) ^ (16 * (v187 ^ 0x8C0090C1)) & 0x8C2BD0C0;
  v190 = v188 ^ 0x8C2BD0C1 ^ (v189 ^ 0x802900C1) & (v188 << 8);
  v191 = ((v182 + 2031738062) ^ (2
                               * ((v190 << 16) & 0xC2B0000 ^ v190 ^ ((v190 << 16) ^ 0x50C10000) & (((v189 ^ LODWORD(STACK[0x1058])) << 8) & 0x8C2B0000 ^ 0x42B0000 ^ (((v189 ^ LODWORD(STACK[0x1058])) << 8) ^ 0x2BD00000) & (v189 ^ LODWORD(STACK[0x1058])))))) >> 4;
  v192 = v182
       + 1484978403
       + (((v191 ^ 0xABCDC7C1) + 616995016) ^ ((v191 ^ 0xD7801125) + 1485524516) ^ ((v191 ^ 0x7393EE49) - 57102000));
  v193 = (v192 ^ 0xB067A700) & (2 * (v192 & 0x8577A791)) ^ v192 & 0x8577A791;
  v194 = ((2 * (v192 ^ 0xB8E7A602)) ^ 0x7B200326) & (v192 ^ 0xB8E7A602) ^ (2 * (v192 ^ 0xB8E7A602)) & 0x3D900192;
  v195 = v194 ^ 0x4900091;
  v196 = (v194 ^ 0x39000011) & (4 * v193) ^ v193;
  v197 = ((4 * v195) ^ 0xF640064C) & v195 ^ (4 * v195) & 0x3D900190;
  v198 = (v197 ^ 0x34000003) & (16 * v196) ^ v196;
  v199 = ((16 * (v197 ^ 0x9900193)) ^ 0xD9001930) & (v197 ^ 0x9900193) ^ (16 * (v197 ^ 0x9900193)) & 0x3D900190;
  v200 = v198 ^ 0x3D900193 ^ (v199 ^ 0x19000183) & (v198 << 8);
  v201 = v88 ^ LODWORD(STACK[0x6AA0]) ^ v148 ^ v192 ^ (2
                                                     * ((v200 << 16) & 0x3D900000 ^ v200 ^ ((v200 << 16) ^ 0x1930000) & (((v199 ^ 0x24900083) << 8) & 0x3D900000 ^ 0x2D900000 ^ (((v199 ^ 0x24900083) << 8) ^ 0x90010000) & (v199 ^ 0x24900083))));
  v202 = (((2 * (v169 & 0xFE ^ 0x44)) | 0x8EB9FB94) - (v169 & 0xFE ^ 0x44) + 950207030) ^ 0xCA15FDCE;
  v203 = v202 - ((2 * v202) & 0x7E574AA4) + 2133566802;
  v204 = STACK[0x105C];
  LODWORD(STACK[0x6940]) = v203;
  v205 = 16843009
       * (((v203 ^ 0xBA6B9C30) + 1792917312) ^ ((v203 ^ v204) - 1070151048) ^ ((v203 ^ 0xD889D0F6) + 138408954))
       + 1986073147;
  LODWORD(STACK[0x6A30]) = v205;
  v206 = (v205 ^ 0x9181B412) & (2 * (v205 & 0xD991B513)) ^ v205 & 0xD991B513;
  v207 = ((2 * (v205 ^ 0xA1F636)) ^ 0xB260864A) & (v205 ^ 0xA1F636) ^ (2 * (v205 ^ 0xA1F636)) & 0xD9304324;
  v208 = v207 ^ 0x49104125;
  v209 = (v207 ^ 0x81100121) & (4 * v206) ^ v206;
  v210 = ((4 * v208) ^ 0x64C10C94) & v208 ^ (4 * v208) & 0xD9304324;
  v211 = (v210 ^ 0x40000001) & (16 * v209) ^ v209;
  v212 = ((16 * (v210 ^ 0x99304321)) ^ 0x93043250) & (v210 ^ 0x99304321) ^ (16 * (v210 ^ 0x99304321)) & 0xD9304320;
  LODWORD(STACK[0x6A20]) = 2
                         * (((v211 ^ 0xD9304325 ^ (v212 ^ LODWORD(STACK[0x1060])) & (v211 << 8)) << 16) & 0x59300000 ^ v211 ^ 0xD9304325 ^ (v212 ^ LODWORD(STACK[0x1060])) & (v211 << 8) ^ (((v211 ^ 0xD9304325 ^ (v212 ^ LODWORD(STACK[0x1060])) & (v211 << 8)) << 16) ^ 0x43250000) & (((v212 ^ 0x48304125) << 8) & 0xD9300000 ^ 0x49300000 ^ (((v212 ^ 0x48304125) << 8) ^ 0x30430000) & (v212 ^ 0x48304125)));
  v213 = (v201 & 2 | 0x679FCCED) + (v201 & 5 | 0xBDFDBBFA);
  LODWORD(STACK[0x6A10]) = ((2 * (v169 & 0xFFFFFF01 ^ 0xD29CD800)) | 0xE182C134) - (v169 & 0xFFFFFF01 ^ 0xD29CD800);
  LODWORD(STACK[0x68F0]) = v201;
  v214 = (((v201 ^ 0x5DFFEC07) + 935175795) ^ ((v201 ^ 0x3D2E6FCF) + 1466705339) ^ ((v201 ^ 0xBA84676A) - 792318688))
       - 1036107250;
  v215 = ~(v214 ^ (2
                 * ((2 * (v214 & 0x8DAA0F1B ^ 0xB729AF7B)) & 2 ^ v214 & 0x8DAA0F1B ^ 0xB729AF7B ^ ((2
                                                                                                  * (v214 & 0x8DAA0F1B ^ 0xB729AF7B)) ^ 0x6E535EF6) & (v214 ^ 0x1A000020)))) & 7;
  v216 = (v215 | 0x115BC1CD) - (v215 | 0xEA43E32);
  LODWORD(STACK[0x6790]) = v216;
  v217 = v216 + 245644850;
  v218 = (v216 + 245644850) ^ 0x5BED5902;
  LODWORD(STACK[0x6A40]) = v213;
  if (v213 == 631081196)
    v219 = 0;
  else
    v219 = -1;
  LODWORD(STACK[0x6680]) = v218;
  v220 = v218 & 3 ^ 1;
  LODWORD(STACK[0x6668]) = v217;
  v221 = v217 & 0x1C ^ 8;
  LODWORD(STACK[0x64A0]) = v221;
  LODWORD(STACK[0x64A8]) = v220;
  v222 = v219 << v221 << v220;
  v223 = 16843009 * v222;
  v224 = (2097152000 * v222) & (v181 ^ 0xD1000000) & 0x62000000 ^ 0x60184C2B | (2097152000
                                                                                               * v222) & (v181 ^ 0xD1000000) & STACK[0x1068];
  v225 = v222 ^ 0x26;
  if (v213 == 631081196)
    v225 = -39;
  LODWORD(STACK[0x6A60]) = v223;
  LODWORD(STACK[0x6688]) = (v224 - 2) ^ v223;
  v226 = ((2 * ((v225 ^ 0xD9) & (v169 ^ LOBYTE(STACK[0x1064])) ^ v225 & 0xFC)) | 0xB2)
       - ((v225 ^ 0xD9) & (v169 ^ LOBYTE(STACK[0x1064])) ^ v225 & 0xFC)
       - 89;
  v227 = (v226 & 0x18) + (v226 ^ 0xFFFFFF7A) + (v226 | 0xAF9CCAE7) + 1;
  LODWORD(STACK[0x6A50]) = (v227 & 0xCD410845 ^ 0x8410004) + (v227 & 0x32BEF7BA ^ 0x329082A3) - 1;
  LODWORD(STACK[0x6900]) = v181;
  LODWORD(STACK[0x6930]) = v169;
  v228 = 16843009
       * ((((BYTE1(v169) ^ BYTE2(v169) ^ 0x7C)
                           - 2 * ((BYTE1(v169) ^ BYTE2(v169) ^ 0x7C) & 0x3F ^ (BYTE1(v169) ^ BYTE2(v169)) & 2)
                           - 67) ^ v169) ^ HIBYTE(v169) ^ 0xD7)
       + 624193420;
  v229 = (v228 ^ 0xDAABCA67) & (2 * (v228 & 0xDACB9074)) ^ v228 & 0xDACB9074;
  v230 = ((2 * (v228 ^ 0x5AAEEAC7)) ^ 0xCAF566) & (v228 ^ 0x5AAEEAC7) ^ (2 * (v228 ^ 0x5AAEEAC7)) & 0x80657AB2;
  v231 = v230 ^ 0x80250A91;
  v232 = (v230 ^ 0x414821) & (4 * v229) ^ v229;
  v233 = ((4 * v231) ^ 0x195EACC) & v231 ^ (4 * v231) & 0x80657AB0;
  v234 = (v233 ^ 0x56A93) & (16 * v232) ^ v232;
  v235 = ((16 * (v233 ^ 0x80601033)) ^ 0x657AB30) & (v233 ^ 0x80601033) ^ (16 * (v233 ^ 0x80601033)) & 0x80657AB0;
  v236 = v234 ^ 0x80657AB3 ^ (v235 ^ 0x452A00) & (v234 << 8);
  LODWORD(STACK[0x6A00]) = v228 ^ (2
                                 * ((v236 << 16) & 0x650000 ^ v236 ^ ((v236 << 16) ^ 0x7AB30000) & (((v235 ^ 0x80205083) << 8) & 0x650000 ^ 0x50000 ^ (((v235 ^ 0x80205083) << 8) ^ 0x657A0000) & (v235 ^ 0x80205083))));
  v237 = v181 ^ 0x53 ^ ((unsigned __int16)(v181 ^ 0xE253) >> 8) ^ ((v181 ^ 0xA29BE253) >> 16) ^ ((v181 ^ 0xA29BE253) >> 24);
  v238 = 16843009
       * (((v237 ^ 0x7E42740D) - 804948878) ^ ((v237 ^ 0xC7F2AF7E) + 1773514499) ^ ((v237 ^ 0xB9B0DBAD) + 402119634))
       + 1835596235;
  LODWORD(STACK[0x69F0]) = v238;
  v239 = (v238 ^ 0xFD884851) & (2 * (v238 & 0xF9AC6292)) ^ v238 & 0xF9AC6292;
  v240 = ((2 * (v238 ^ 0xBDC04C55)) ^ 0x88D85D8E) & (v238 ^ 0xBDC04C55) ^ (2 * (v238 ^ 0xBDC04C55)) & 0x446C2EC6;
  v241 = v240 ^ 0x44242241;
  v242 = (v240 ^ 0x442C81) & (4 * v239) ^ v239;
  v243 = ((4 * v241) ^ 0x11B0BB1C) & v241 ^ (4 * v241) & 0x446C2EC4;
  v244 = (v243 ^ 0x202A03) & (16 * v242) ^ v242;
  v245 = ((16 * (v243 ^ 0x444C04C3)) ^ 0x46C2EC70) & (v243 ^ 0x444C04C3) ^ (16 * (v243 ^ 0x444C04C3)) & 0x446C2EC0;
  LODWORD(STACK[0x69E0]) = 2
                         * (((v244 ^ 0x446C2EC7 ^ (v245 ^ LODWORD(STACK[0x106C])) & (v244 << 8)) << 16) & 0x446C0000 ^ v244 ^ 0x446C2EC7 ^ (v245 ^ LODWORD(STACK[0x106C])) & (v244 << 8) ^ (((v244 ^ 0x446C2EC7 ^ (v245 ^ LODWORD(STACK[0x106C])) & (v244 << 8)) << 16) ^ 0x2EC70000) & (((v245 ^ 0x2C0287) << 8) & 0x446C0000 ^ (((v245 ^ 0x2C0287) << 8) ^ 0x6C2E0000) & (v245 ^ 0x2C0287) ^ 0x400000));
  v246 = STACK[0xD9B0];
  v247 = *(_QWORD *)(STACK[0xD9B0] + 8 * (0x6E8B915Bu % LODWORD(STACK[0x6860])));
  v248 = STACK[0x6870];
  v249 = *(_QWORD *)(STACK[0xD9B0]
                   + 8
                   * (((((v247 ^ 0x14F04B30264ABF95) - 0x138D9C31E0A33842) ^ ((v247 ^ 0xB50051564905B4F5)
                                                                                + 0x4D8279A87013CCDELL) ^ ((v247 ^ 0x4716FC8089A9ED86) - 0x406B2B814F406A51))
                     - 0x1E64CE185754012CLL)
                    % STACK[0x6870]));
  v250 = *(_QWORD *)(STACK[0xD9B0]
                   + 8
                   * (((((v249 ^ 0x1C1AD2DAB636AA6) + 0x6B877CBE98E78F2DLL) ^ ((v249 ^ 0x41C16FD21B62D748)
                                                                               + 0x2B87BE4128E632C3) ^ ((v249 ^ 0xA6E6241956E75B08) - 0x335F0A759A9C417DLL))
                     + 0x735FC88AF573C7C6)
                    % STACK[0x6870]));
  STACK[0x6AC0] = STACK[0xD9B0];
  v251 = *(_QWORD *)(v246
                   + 8
                   * (((((v250 ^ 0x846C735AFF22BBDCLL) - 0x4B3BEC95F39964BALL) ^ ((v250 ^ 0x6AEC3845EBCCB347)
                                                                                + 0x5A445875188893DFLL) ^ ((v250 ^ 0x866ADF9F208EE7DLL) + 0x38CECDC9014CCEE5))
                     + 0x29B1792A24093D0DLL)
                    % v248));
  LODWORD(v251) = ((((v251 ^ 0x1E8BDE708112D6ALL) + 0x43C62BD7E67B1E5FLL) ^ ((v251 ^ 0x38627B01B3449D7FLL)
                                                                           + 0x7A4CED315D2EAE4CLL) ^ ((v251 ^ 0xDF6C20005DB356F3) - 0x62BD49CF4C269A38))
                 + 0x5B378F2A89E92656)
                % v248;
  LODWORD(STACK[0x6AA0]) = ((((v251 - ((2 * v251) & 0x22E938F0) + 292854904) ^ 0x7B1CDCDD) - 720934455) ^ (((v251 - ((2 * v251) & 0x22E938F0) + 292854904) ^ 0x58C0D28E) - 153393252) ^ (((v251 - ((2 * v251) & 0x22E938F0) + 292854904) ^ 0x32A8922B) - 1665980609))
                         + 1830584960;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A80])))();
}

uint64_t sub_100B773FC@<X0>(unsigned int a1@<W1>, int a2@<W8>)
{
  _BOOL4 v2;

  v2 = (a2 - 343343347) < LODWORD(STACK[0x6AA0]);
  if (LODWORD(STACK[0x6AA0]) < a1 != (a2 - 343343347) < 0x2C8BABEE)
    v2 = LODWORD(STACK[0x6AA0]) < a1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((28 * !v2) | LODWORD(STACK[0x6A80]))))();
}

uint64_t sub_100B7A0D0()
{
  int v0;
  int v1;
  int v2;
  int v3;

  v1 = STACK[0x67B0];
  if ((STACK[0x68D0] & 2) == 0)
    v1 = STACK[0x67A0];
  LODWORD(STACK[0x64C0]) = v1;
  LODWORD(STACK[0x6950]) = LODWORD(STACK[0x6890]) ^ 0x56659557;
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x6900]) ^ 0x70F9EA20;
  LODWORD(STACK[0x6658]) = LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A30]);
  LODWORD(STACK[0x68E0]) = LODWORD(STACK[0x6A10]) + 255762278;
  LODWORD(STACK[0x6420]) = LODWORD(STACK[0x6688]) ^ 0xE694908B;
  v2 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x6A80]) = v2;
  v3 = STACK[0x6A00];
  LODWORD(STACK[0x6780]) = v2 ^ LODWORD(STACK[0x6A00]);
  LODWORD(STACK[0x64F8]) = v2 ^ v3 ^ 0xE5F91C48;
  LODWORD(STACK[0x6320]) = v3 ^ 0xB6B3A73B;
  STACK[0x6AC0] = STACK[0xD9B0];
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x6A70]) + 1886962966;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100B7A2CC()
{
  int v0;
  int v1;
  _BOOL4 v2;

  v2 = LODWORD(STACK[0x6A70]) < 0x125FC40F;
  if (v2 == (v1 + 1104534596) < 0x82D88925)
    v2 = LODWORD(STACK[0x6AA0]) > v1 + 1104534596;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2625 * !v2) ^ v0)) - 4))();
}

uint64_t sub_100B7CF98()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = STACK[0x67F0];
  if ((STACK[0x68D0] & 2) == 0)
    v1 = STACK[0x6760];
  LODWORD(STACK[0x67F0]) = v1;
  STACK[0x6AC0] = (v0 - 10);
  LODWORD(STACK[0x6980]) = LODWORD(STACK[0x6930]) ^ 0x407AC917;
  v2 = -2 - LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x6678]) = v2;
  LODWORD(STACK[0x6650]) = v2 ^ 0xBBF071B2;
  LODWORD(STACK[0x6318]) = LODWORD(STACK[0x6A80]) ^ 0xF6D9E350;
  if (((*(_BYTE *)(STACK[0x6AB0]
                  + ((*(_BYTE *)(STACK[0x6AB0]
                               + ((*(_BYTE *)(STACK[0x6AB0]
                                            + ((((2 * *(_BYTE *)(STACK[0x6AB0] + 8)) & 0xFB)
                                              + (*(_BYTE *)(STACK[0x6AB0] + 8) ^ 0xFD)) & 0xF))
                                 - 1) & 0xF))
                    + 2) & 0xF))
       + 14) & 0xE) != 0)
    v3 = (*(_BYTE *)(STACK[0x6AB0]
                   + ((*(_BYTE *)(STACK[0x6AB0]
                                + ((*(_BYTE *)(STACK[0x6AB0]
                                             + ((((2 * *(_BYTE *)(STACK[0x6AB0] + 8)) & 0xFB)
                                               + (*(_BYTE *)(STACK[0x6AB0] + 8) ^ 0xFD)) & 0xF))
                                  - 1) & 0xF))
                     + 2) & 0xF))
        + 14) & 0xF;
  else
    v3 = 1;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8);
  STACK[0x6AA0] = 1 - v3;
  return v4();
}

uint64_t sub_100B80014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x6AC0];
  LODWORD(STACK[0x6A80]) = (STACK[0x6AC0] + 441019309) & 0xE5B676FF;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((26 * (((STACK[0x6AA0] + v1) | a1) >> 63)) ^ v2))
                            - 8))();
}

uint64_t sub_100B815AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = LODWORD(STACK[0x6A80]) + 7193;
  v6 = STACK[0x6648];
  if ((STACK[0x68C0] & 2) == 0)
    v6 = STACK[0x65F8];
  LODWORD(STACK[0x6480]) = v6;
  LODWORD(STACK[0x67B0]) = LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A60]);
  v7 = STACK[0x6AD8];
  LODWORD(STACK[0x6990]) = v5;
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * v5);
  STACK[0x6AC0] = 418580238;
  LODWORD(STACK[0x6AA0]) = v4;
  return v8(a1, a2, a3, a4, 2071626130, 100710482);
}

uint64_t sub_100B816DC@<X0>(int a1@<W2>, int a2@<W3>, unint64_t a3@<X5>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  uint64_t (*v54)(void);

  LODWORD(STACK[0x69B0]) = a4;
  LODWORD(STACK[0x69D0]) = a1;
  LODWORD(STACK[0x69E0]) = v14;
  STACK[0x6A00] = v13;
  STACK[0x6A10] = v12;
  STACK[0x6A20] = v10;
  STACK[0x6A30] = v9;
  STACK[0x6A40] = v8;
  STACK[0x6A50] = v7;
  STACK[0x6A60] = a3;
  v15 = *(unsigned __int8 *)(a5 + v6) * a2 + 950601186;
  v16 = (LODWORD(STACK[0x6A80]) - 4142) | 0x25A2;
  LODWORD(STACK[0x69A0]) = v16;
  v17 = ((v15 & 0xC756FA1E) << (v16 + 23)) & (v15 ^ 0xA606FB1E) ^ v15 & 0xC756FA1E;
  v18 = ((2 * (v15 ^ 0x20ABCB12)) ^ 0xCFFA6218) & (v15 ^ 0x20ABCB12) ^ (2 * (v15 ^ 0x20ABCB12)) & 0xE7FD310C;
  v19 = v18 ^ LODWORD(STACK[0x3080]);
  v20 = (v18 ^ 0x7F8210C) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x9FF4C430) & v19 ^ (4 * v19) & 0xE7FD310C;
  v22 = v21 ^ 0x87F40000;
  v23 = (16 * (v21 ^ 0x6009310C)) & 0xE7FD3100 ^ 0x802C210C ^ ((16 * (v21 ^ 0x6009310C)) ^ 0x7FD310C0) & (v21 ^ 0x6009310C);
  v24 = ((v20 ^ 0xE7FD310C ^ v22 & (16 * v20)) << 8) & 0xE7FD3100 ^ v20 ^ 0xE7FD310C ^ v22 & (16 * v20) ^ (((v20 ^ 0xE7FD310C ^ v22 & (16 * v20)) << 8) ^ 0xFD310C00) & v23;
  v25 = (v5 - ((2 * v5) & 0xC3C837E) + 102646207) ^ 0x86C8D9B9 ^ v15 ^ (2
                                                                      * ((v24 << 16) & 0x67FD0000 ^ v24 ^ ((v24 << 16) ^ 0x310C0000) & ((v23 << 8) & 0xE7FD0000 ^ 0x2CC0000 ^ ((v23 << 8) ^ 0xFD310000) & v23)));
  v26 = v6 + v13 + v25;
  v27 = (v26 ^ 0xD4EBE3C1) & (2 * (v26 & 0xD8EC0BC0)) ^ v26 & 0xD8EC0BC0;
  v28 = ((2 * (v26 ^ 0x5563E6C1)) ^ 0x1B1FDA02) & (v26 ^ 0x5563E6C1) ^ (2 * (v26 ^ 0x5563E6C1)) & 0x8D8FED00;
  v29 = v28 ^ 0x84802501;
  v30 = (v28 ^ 0x1004801) & (4 * v27) ^ v27;
  v31 = ((4 * v29) ^ 0x363FB404) & v29 ^ (4 * v29) & 0x8D8FED00;
  v32 = v30 ^ 0x8D8FED01 ^ (v31 ^ 0x40FA400) & (16 * v30);
  v33 = ((16 * (v31 ^ 0x89804901)) ^ 0xD8FED010) & (v31 ^ 0x89804901) ^ (16 * (v31 ^ 0x89804901)) & 0x8D8FED00;
  v34 = v33 & 0x20B21050 ^ v32 ^ (v33 ^ 0x888EC001) & ((v32 << 8) ^ 0xAF5F1150);
  v35 = ((v33 << 8) ^ 0xAE721050) & (v33 ^ 0x888EC001) ^ v33 & 0x20B21050;
  v36 = (v26 ^ (2
              * (v35 & 0x20B21050 ^ v34 ^ ((v34 << 16) ^ 0xCDB31056) & (v35 ^ 0xD0D0000) ^ ((v34 << 16) ^ 0xCDB31056) & 0xD8F0000))) >> 16;
  v37 = v25 + (((v36 ^ 0xBA698325) + 1091514641) ^ ((v36 ^ 0xD3C2D51E) + 681862956) ^ ((v36 ^ 0x69AB95C8) - 1832048642));
  v38 = v6 + v12 + v37;
  v39 = (v38 ^ 0xD7993978) & (2 * (v38 & 0x87DD3A41)) ^ v38 & 0x87DD3A41;
  v40 = ((2 * (v38 ^ 0xDF3309F8)) ^ 0xB1DC6772) & (v38 ^ 0xDF3309F8) ^ (2 * (v38 ^ 0xDF3309F8)) & 0x58EE33B8;
  v41 = v40 ^ 0x48221089;
  v42 = (v40 ^ 0x50CE2380) & (4 * v39) ^ v39;
  v43 = ((4 * v41) ^ 0x63B8CEE4) & v41 ^ (4 * v41) & 0x58EE33B8;
  v44 = ((16 * (v43 ^ 0x18463119)) ^ 0x8EE33B90) & (v43 ^ 0x18463119) ^ (16 * (v43 ^ 0x18463119)) & 0x58EE33B0;
  v45 = (v43 ^ 0x40A802A9) & (16 * v42) ^ v42 ^ 0x58EE33B9 ^ (v44 ^ 0x8E23300) & (((v43 ^ 0x40A802A9) & (16 * v42) ^ v42) << 8);
  v46 = (v38 ^ (2
              * ((v45 << 16) & 0x58EE0000 ^ v45 ^ ((v45 << 16) ^ 0x33B90000) & (((v44 ^ LODWORD(STACK[0x3084])) << 8) & 0x58EE0000 ^ 0x10CC0000 ^ (((v44 ^ LODWORD(STACK[0x3084])) << 8) ^ 0x6E330000) & (v44 ^ LODWORD(STACK[0x3084])))))) >> 8;
  v47 = v37 - (((v46 ^ 0x8DD0AD52) - 195634043) ^ ((v46 ^ 0x9C2B521) + 1883555064) ^ ((v46 ^ 0x8405492E) - 41731847));
  LODWORD(STACK[0x69F0]) = v6 + v10 + v47;
  v48 = v6 + v11 + v47;
  v49 = (v48 ^ 0xD7E17B4E) & (2 * (v48 & 0x87E97A6E)) ^ v48 & 0x87E97A6E;
  v50 = ((2 * (v48 ^ 0xDD231F8E)) ^ 0xB594CBC0) & (v48 ^ 0xDD231F8E) ^ (2 * (v48 ^ 0xDD231F8E)) & 0x5ACA65E0;
  v51 = ((4 * (v50 ^ 0x4A4A2420)) ^ 0x6B299780) & (v50 ^ 0x4A4A2420) ^ (4 * (v50 ^ 0x4A4A2420)) & 0x5ACA65E0;
  v52 = ((16 * (v51 ^ 0x10C26060)) ^ 0xACA65E00) & (v51 ^ 0x10C26060) ^ (16 * (v51 ^ 0x10C26060)) & 0x5ACA65E0;
  v53 = (v51 ^ 0x4A080580) & (16 * ((v50 ^ 0x508045C0) & (4 * v49) ^ v49)) ^ (v50 ^ 0x508045C0) & (4 * v49) ^ v49 ^ 0x5ACA65E0 ^ (v52 ^ 0x88244E0) & (((v51 ^ 0x4A080580) & (16 * ((v50 ^ 0x508045C0) & (4 * v49) ^ v49)) ^ (v50 ^ 0x508045C0) & (4 * v49) ^ v49) << 8);
  LODWORD(STACK[0x69C0]) = v48 ^ 0x92EFB353 ^ (2
                                             * ((v53 << 16) & 0x5ACA0000 ^ v53 ^ ((v53 << 16) ^ 0x65E00000) & (((v52 ^ 0x524821E0) << 8) & 0x5ACA0000 ^ 0x108A0000 ^ (((v52 ^ 0x524821E0) << 8) ^ 0xCA650000) & (v52 ^ 0x524821E0))));
  v54 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((27792 * (v6 + STACK[0x6A40] == 15)) ^ LODWORD(STACK[0x6990])));
  ++LODWORD(STACK[0x6AA0]);
  ++STACK[0x6AC0];
  return v54();
}

uint64_t sub_100B82F28(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned __int8 v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  uint64_t v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  int v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  int v243;
  uint64_t (*v244)(uint64_t, unint64_t);

  v13 = v8 + a1 - v11;
  v14 = (v13 ^ 0xFD437866) & (2 * (v13 & 0xFD927C07)) ^ v13 & 0xFD927C07;
  v15 = ((2 * (v13 ^ 0x9F67186C)) ^ 0xC5EAC8D6) & (v13 ^ 0x9F67186C) ^ (2 * (v13 ^ 0x9F67186C)) & 0x62F5646A;
  v16 = (v15 ^ 0x40C04000) & (4 * v14) ^ v14;
  v17 = ((4 * (v15 ^ 0x22152429)) ^ 0x8BD591AC) & (v15 ^ 0x22152429) ^ (4 * (v15 ^ 0x22152429)) & 0x62F56468;
  v18 = (v17 ^ 0x2D50023) & (16 * v16) ^ v16;
  v19 = ((16 * (v17 ^ 0x60206443)) ^ 0x2F5646B0) & (v17 ^ 0x60206443) ^ (16 * (v17 ^ 0x60206443)) & 0x62F56460;
  v20 = v18 ^ 0x62F5646B ^ (v19 ^ 0x2254444B) & (v18 << 8);
  v21 = (v13 ^ (2
              * ((v20 << 16) & 0x62F50000 ^ v20 ^ ((v20 << 16) ^ 0x646B0000) & (((v19 ^ 0x40A1204B) << 8) & 0x62F50000 ^ 0x2910000 ^ (((v19 ^ 0x40A1204B) << 8) ^ 0x75640000) & (v19 ^ 0x40A1204Bu))))) >> 13;
  v22 = ((v21 ^ 0x3ECD31D1) + 2073441967) ^ ((v21 ^ 0xA44BF5D9) - 518983001) ^ ((v21 ^ 0x9A8101DD) - 539359581);
  v23 = v8 + a7 + v22 - v10 - v9;
  v24 = (v23 ^ 0x2D06731C) & (2 * (v23 & 0x8947641D)) ^ v23 & 0x8947641D;
  v25 = ((2 * (v23 ^ 0x2D887306)) ^ 0x499E2E36) & (v23 ^ 0x2D887306) ^ (2 * (v23 ^ 0x2D887306)) & 0xA4CF171A;
  v26 = (v25 ^ 0xE0010) & (4 * v24) ^ v24;
  v27 = ((4 * (v25 ^ 0xA4411109)) ^ 0x933C5C6C) & (v25 ^ 0xA4411109) ^ (4 * (v25 ^ 0xA4411109)) & 0xA4CF1718;
  v28 = (v27 ^ 0x800C1400) & (16 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0x24C30313)) ^ 0x4CF171B0) & (v27 ^ 0x24C30313) ^ (16 * (v27 ^ 0x24C30313)) & 0xA4CF1710;
  v30 = v28 ^ 0xA4CF171B ^ (v29 ^ 0x4C1110B) & (v28 << 8);
  v31 = (v23 ^ (2
              * ((v30 << 16) & 0x24CF0000 ^ v30 ^ ((v30 << 16) ^ 0x171B0000) & (((v29 ^ LODWORD(STACK[0x1070])) << 8) & 0xA4CF0000 ^ 0x20C80000 ^ (((v29 ^ LODWORD(STACK[0x1070])) << 8) ^ 0x4F170000) & (v29 ^ LODWORD(STACK[0x1070])))))) >> 1;
  v32 = v8
      + a7
      + v22
      + (((v31 ^ 0xE1A7E225) + 1493931123) ^ ((v31 ^ 0x405E3B6E) - 118338246) ^ ((v31 ^ 0xC59E7C5E) + 2100431370))
      - v10
      - a6;
  v33 = (v32 ^ 0x4F975AA1) & (2 * (v32 & 0x6F065804)) ^ v32 & 0x6F065804;
  v34 = ((2 * (v32 ^ 0x919BEAA1)) ^ 0xFD3B654A) & (v32 ^ 0x919BEAA1) ^ (2 * (v32 ^ 0x919BEAA1)) & 0xFE9DB2A4;
  v35 = v34 ^ 0x28492A5;
  v36 = (v34 ^ 0xFE9D3285) & (4 * v33) ^ v33;
  v37 = ((4 * v35) ^ 0xFA76CA94) & v35 ^ (4 * v35) & 0xFE9DB2A4;
  v38 = (v37 ^ 0xFA148280) & (16 * v36) ^ v36;
  v39 = ((16 * (v37 ^ 0x4893021)) ^ 0xE9DB2A50) & (v37 ^ 0x4893021) ^ (16 * (v37 ^ 0x4893021)) & 0xFE9DB2A0;
  v40 = v38 ^ 0xFE9DB2A5 ^ (v39 ^ 0xE8992200) & (v38 << 8);
  v41 = v32 ^ (2
             * ((v40 << 16) & 0x7E9D0000 ^ v40 ^ ((v40 << 16) ^ 0x32A50000) & (((v39 ^ 0x160490A5) << 8) & 0x7E9D0000 ^ 0x620D0000 ^ (((v39 ^ 0x160490A5) << 8) ^ 0x1DB20000) & (v39 ^ 0x160490A5))));
  v42 = ((((v41 >> 10) ^ 0x6156873) - 1956023368) ^ (((v41 >> 10) ^ 0x5F51B5CD) - 768758262) ^ (((v41 >> 10) ^ 0x595F2284)
                                                                                              - 735889087))
      + (((v41 ^ 0xD3702E32) + 1266281124) ^ ((v41 ^ 0x13170BFB) - 1960915093) ^ ((v41 ^ 0xAF9BCF0A) + 932318108));
  v43 = ((v42 - 1021115549) ^ 0x377FE823) & (2 * ((v42 - 1021115549) & 0xB77FE94B)) ^ (v42 - 1021115549) & 0xB77FE94B;
  v44 = ((2 * ((v42 - 1021115549) ^ 0x3D1668A5)) ^ 0x14D303DC) & ((v42 - 1021115549) ^ 0x3D1668A5) ^ (2 * ((v42 - 1021115549) ^ 0x3D1668A5)) & 0x8A6981EE;
  v45 = v44 ^ 0x41014E;
  v46 = ((4 * (v44 ^ 0x8A288022)) ^ LODWORD(STACK[0x1074])) & (v44 ^ 0x8A288022) ^ (4 * (v44 ^ 0x8A288022)) & 0x8A6981EC;
  v47 = (v46 ^ 0x82001A6) & (16 * (v45 & (4 * v43) ^ v43)) ^ v45 & (4 * v43) ^ v43;
  v48 = ((16 * (v46 ^ 0x82498046)) ^ 0xA6981EE0) & (v46 ^ 0x82498046) ^ (16 * (v46 ^ 0x82498046)) & 0x8A6981E0;
  v49 = v48 ^ 0x861810E;
  v50 = v47 ^ 0x8A6981EE ^ (v48 ^ 0x82080000) & (v47 << 8);
  v51 = ((v42 - 1021115549) ^ (2
                             * ((v50 << 16) & 0xA690000 ^ v50 ^ ((v50 << 16) ^ 0x1EE0000) & ((v49 << 8) & 0x8A690000 ^ 0x2680000 ^ ((v49 << 8) ^ 0x69810000) & v49)))) >> 3;
  v52 = v42
      - (((v51 ^ 0x899F62D1) - 1721260758) ^ ((v51 ^ 0xEDDC2B81) - 47911814) ^ ((v51 ^ 0x702CD402) + 1624511483))
      - 954286937;
  v53 = (v52 ^ 0xB093402A) & (2 * (v52 & 0xB81B8AB2)) ^ v52 & 0xB81B8AB2;
  v54 = ((2 * (v52 ^ 0xA092552E)) ^ 0x3113BF38) & (v52 ^ 0xA092552E) ^ (2 * (v52 ^ 0xA092552E)) & 0x1889DF9C;
  v55 = v54 ^ 0x8884084;
  v56 = (v54 ^ 0x8001F1C) & (4 * v53) ^ v53;
  v57 = ((4 * v55) ^ 0x62277E70) & v55 ^ (4 * v55) & 0x1889DF9C;
  v58 = (v57 ^ 0x15E0C) & (16 * v56) ^ v56;
  v59 = ((16 * (v57 ^ 0x1888818C)) ^ 0x889DF9C0) & (v57 ^ 0x1888818C) ^ (16 * (v57 ^ 0x1888818C)) & 0x1889DF90;
  v60 = v58 ^ 0x1889DF9C ^ (v59 ^ 0x889D900) & (v58 << 8);
  v61 = v52 ^ (2
             * ((v60 << 16) & 0x18890000 ^ v60 ^ ((v60 << 16) ^ 0x5F9C0000) & (((v59 ^ 0x1000061C) << 8) & 0x18890000 ^ (((v59 ^ 0x1000061C) << 8) ^ 0x9DF0000) & (v59 ^ 0x1000061C) ^ 0x10000000)));
  v62 = ((v61 ^ 0x19A3C7D8) - 1013196261) ^ ((v61 ^ 0xA47409B5) + 2118915192) ^ ((v61 ^ 0x5CFFBE7) - 537401818);
  v63 = ((v62 + 851846728) ^ 0x18A121FB) & (2 * ((v62 + 851846728) & 0x9D29A5C2)) ^ (v62 + 851846728) & 0x9D29A5C2;
  v64 = ((2 * ((v62 + 851846728) ^ 0xF260FF)) ^ 0x3BB78A7A) & ((v62 + 851846728) ^ 0xF260FF) ^ (2
                                                                                              * ((v62 + 851846728) ^ 0xF260FF)) & 0x9DDBC53C;
  v65 = (v64 ^ 0x1983C01D) & (4 * v63) ^ v63;
  v66 = ((4 * (v64 ^ 0x84484505)) ^ 0x776F14F4) & (v64 ^ 0x84484505) ^ (4 * (v64 ^ 0x84484505)) & 0x9DDBC53C;
  v67 = (v66 ^ 0x154B0420) & (16 * v65) ^ v65;
  v68 = ((16 * (v66 ^ 0x8890C109)) ^ 0xDDBC53D0) & (v66 ^ 0x8890C109) ^ (16 * (v66 ^ 0x8890C109)) & 0x9DDBC530;
  v69 = v67 ^ 0x9DDBC53D ^ (v68 ^ 0x9D984100) & (v67 << 8);
  v70 = v62
      - 806368246
      + ((((v62 + 851846728) ^ (2
                              * ((v69 << 16) & 0x1DDB0000 ^ v69 ^ ((v69 << 16) ^ 0x453D0000) & (((v68 ^ 0x43842D) << 8) & 0x1DDB0000 ^ 0x41A0000 ^ (((v68 ^ 0x43842D) << 8) ^ 0xDBC50000) & (v68 ^ 0x43842D))))) >> 8) ^ 0xACAC2F);
  v71 = v70 + (v70 >> 4) + 1526767980 - ((2 * (v70 + (v70 >> 4))) & 0xB6014C4E) + 1211;
  v72 = (((v71 ^ 0x62D309EA) - ((v71 ^ 0x62D309EA) >> 14)) ^ LODWORD(STACK[0x1078]))
      - 361891920
      + ((2 * ((v71 ^ 0x62D309EA) - ((v71 ^ 0x62D309EA) >> 14))) & 0x7FFFDEF6);
  v73 = (v72 ^ 0xD1429485) & (2 * (v72 & 0xD59218D5)) ^ v72 & 0xD59218D5;
  v74 = ((2 * (v72 ^ 0xF366A4A7)) ^ 0x4DE978E4) & (v72 ^ 0xF366A4A7) ^ (2 * (v72 ^ 0xF366A4A7)) & 0x26F4BC72;
  v75 = (v74 ^ 0x4C42062) & (4 * v73) ^ v73;
  v76 = ((4 * (v74 ^ 0x22148412)) ^ 0x9BD2F1C8) & (v74 ^ 0x22148412) ^ (4 * (v74 ^ 0x22148412)) & 0x26F4BC70;
  v77 = (v76 ^ 0x2D0B042) & (16 * v75) ^ v75;
  v78 = ((16 * (v76 ^ 0x24240C32)) ^ 0x6F4BC720) & (v76 ^ 0x24240C32) ^ (16 * (v76 ^ 0x24240C32)) & 0x26F4BC70;
  v79 = v77 ^ 0x26F4BC72 ^ (v78 ^ 0x26408452) & (v77 << 8);
  v80 = (v72 ^ (2
              * ((v79 << 16) & 0x26F40000 ^ v79 ^ ((v79 << 16) ^ 0x3C720000) & (((v78 ^ 0xB43852) << 8) & 0x26F40000 ^ 0x2400000 ^ (((v78 ^ 0xB43852) << 8) ^ 0x74BC0000) & (v78 ^ 0xB43852))))) >> 4;
  v81 = v72
      + 77837901
      + (((v80 ^ 0x9365706D) - 356338362) ^ ((v80 ^ 0xE66F22EF) - 1614223416) ^ ((v80 ^ 0x7803E481) + 27533738));
  v82 = (v81 ^ 0x5DBFEE1A) & (2 * (v81 & 0x5C3FEF5C)) ^ v81 & 0x5C3FEF5C;
  v83 = ((2 * (v81 ^ 0x6DDBB01A)) ^ 0x63C8BE8C) & (v81 ^ 0x6DDBB01A) ^ (2 * (v81 ^ 0x6DDBB01A)) & 0x31E45F46;
  v84 = (v83 ^ 0x21C01E02) & (4 * v82) ^ v82;
  v85 = ((4 * (v83 ^ 0x10244142)) ^ 0xC7917D18) & (v83 ^ 0x10244142) ^ (4 * (v83 ^ 0x10244142)) & 0x31E45F44;
  v86 = v85 ^ LODWORD(STACK[0x107C]);
  v87 = ((16 * (v85 ^ 0x30640246)) ^ 0x1E45F460) & (v85 ^ 0x30640246) ^ (16 * (v85 ^ 0x30640246)) & 0x31E45F40;
  v88 = v86 & (16 * v84) ^ v84 ^ 0x31E45F46 ^ (v87 ^ 0x10445406) & ((v86 & (16 * v84) ^ v84) << 8);
  v89 = v81 ^ (2
             * ((v88 << 16) & 0x31E40000 ^ v88 ^ ((v88 << 16) ^ 0x5F460000) & (((v87 ^ LODWORD(STACK[0x1080])) << 8) & 0x31E40000 ^ 0x11A00000 ^ (((v87 ^ LODWORD(STACK[0x1080])) << 8) ^ 0x645F0000) & (v87 ^ LODWORD(STACK[0x1080])))));
  v90 = (v89 ^ 0xD2EB7BF8) + ((v89 >> 15) ^ 0xFFFE5A29) + 1;
  v91 = v41 ^ a8 ^ v89;
  v92 = v90 - (v90 >> 4) - ((2 * (v90 - (v90 >> 4))) & 0xADEA8E1E) + 1458915087;
  v93 = (((v92 ^ 0x78AF23C7) - 2024743879) ^ ((v92 ^ 0x7B8E8D) - 8097421) ^ ((v92 ^ 0x2E21EA45) - 773974597))
      - 171216202;
  v94 = v93 + (v93 >> 14) - ((v93 + (v93 >> 14)) >> 7);
  v95 = v94 - ((2 * v94) & 0x9A30EA34) - 854035174;
  v96 = (v95 ^ 0xAC25936D) - ((v95 ^ 0xAC25936D) >> 13) + (((v95 ^ 0xAC25936D) - ((v95 ^ 0xAC25936D) >> 13)) >> 4);
  v97 = v96 - ((2 * v96) & 0xD5C15494) - 354375094;
  v98 = (((v97 ^ 0x7079C011) - 1887027217) ^ ((v97 ^ 0x30218E3A) - 807505466) ^ ((v97 ^ 0xAAB8E461) + 1430723487))
      - 1764294061;
  v99 = v98 + (v98 >> 10) - ((v98 + (v98 >> 10)) >> 1);
  v100 = v61 ^ a3 ^ v92 ^ (v99 - ((2 * v99) & 0xCB264050) - 443342808);
  v101 = v91 ^ v97;
  v102 = (v99 ^ 0xC7F51B4A) - ((v99 ^ 0xC7F51B4A) >> 8) + (((v99 ^ 0xC7F51B4A) - ((v99 ^ 0xC7F51B4A) >> 8)) >> 4);
  v103 = v71 ^ v12 ^ v95 ^ (v102 - ((2 * v102) & 0x8D10C97E) - 964139841);
  v104 = (((2 * (v101 & 0xFE ^ 0x54)) | 0x1B5A6252) - (v101 & 0xFE ^ 0x54) + 1381158615) & 0x3FFFFFFE;
  v105 = 16843009
       * (((v104 ^ 0xB7BB02E0) + 1014472326) ^ ((v104 ^ 0x1BA221EE) - 1871790708) ^ ((v104 ^ 0x81B4120E) + 175672940))
       + 1166798229;
  v106 = (v105 ^ 0x9EFCFED5) & (2 * (v105 & 0x9EFEFF05)) ^ v105 & 0x9EFEFF05;
  v107 = ((2 * (v105 ^ 0x9F7598D7)) ^ 0x316CFA4) & (v105 ^ 0x9F7598D7) ^ (2 * (v105 ^ 0x9F7598D7)) & 0x18B67D2;
  v108 = v107 ^ 0x892052;
  v109 = (v107 ^ 0x1024442) & (4 * v106) ^ v106;
  v110 = ((4 * v108) ^ 0x62D9F48) & v108 ^ (4 * v108) & 0x18B67D0;
  v111 = (v110 ^ 0x90742) & (16 * v109) ^ v109;
  v112 = ((16 * (v110 ^ 0x1826092)) ^ 0x18B67D20) & (v110 ^ 0x1826092) ^ (16 * (v110 ^ 0x1826092)) & 0x18B67D0;
  v113 = v105 ^ (2
               * (((v111 ^ 0x18B67D2 ^ (v112 ^ LODWORD(STACK[0x1084])) & (v111 << 8)) << 16) & 0x18B0000 ^ v111 ^ 0x18B67D2 ^ (v112 ^ LODWORD(STACK[0x1084])) & (v111 << 8) ^ (((v111 ^ 0x18B67D2 ^ (v112 ^ LODWORD(STACK[0x1084])) & (v111 << 8)) << 16) ^ 0x67D20000) & (((v112 ^ 0x10902D2) << 8) & 0x18B0000 ^ 0x880000 ^ (((v112 ^ 0x10902D2) << 8) ^ 0xB670000) & (v112 ^ 0x10902D2))));
  v114 = (v101 & 0xDFF7F201 ^ 0xDFC520CD) + (v101 & 0x20080D00 ^ 0x80901) - 1;
  v115 = (v114 & 0xD104CE0D ^ 0x80000C2D) + (v114 & 0x2EFB3112 ^ 0x4A13001);
  LOBYTE(v114) = (v103 & 7 ^ 1) + (v103 & 3 ^ 0xEA) - ((v103 & 7 ^ 1) & 3);
  v116 = ((v103 & 0x8B7CEED0 ^ 0x64E845) + (v103 & 0x74831128 ^ 0x44010029) - 2) ^ 0x315DCAFC;
  v117 = ((2 * v116) | 0xA2447226) - v116;
  v118 = v103;
  v119 = (v103 ^ 1) + 1;
  v120 = ((v114 & 0xD ^ 0x1B12E1C5) + (v114 & 0x32 ^ 0x44490821) - 1) ^ 0x5F5BE9C9;
  if (v120)
    v121 = 255;
  else
    v121 = 0;
  LODWORD(STACK[0x6648]) = v119 & 6;
  LODWORD(STACK[0x67A0]) = v119 & 1;
  v122 = v121 << (v119 & 6) << (v119 & 1);
  LODWORD(STACK[0x6A50]) = v122;
  v123 = v122 ^ 0xDAECF7C3;
  if (!v120)
    v123 = STACK[0x1088];
  LODWORD(STACK[0x6A60]) = v123 & 0x20 ^ (v123 ^ 0x3C) & (v101 ^ 0xED);
  v124 = v100;
  LODWORD(STACK[0x68C0]) = v100;
  v125 = v100 ^ 0xE8 ^ ((v100 ^ 0x56026FE8) >> 16) ^ ((unsigned __int16)(v100 ^ 0x6FE8) >> 8);
  v126 = STACK[0x6668];
  v127 = (((LODWORD(STACK[0x67C0]) ^ 0xBF800583) + 1082129021) ^ ((LODWORD(STACK[0x67C0]) ^ 0x6E3F07F5) - 1849624565) ^ ((LODWORD(STACK[0x67C0]) ^ 0xC5C0B4B6) + 977226570))
       - (((v126 ^ 0x227E76E5) - 2039689191) ^ ((v126 ^ 0xC033E73F) + 1679901123) ^ ((v126 ^ 0xF3165011) + 1459943149))
       + 435930153
       + (((v119 & 7 ^ 0x6A9C813) - 792767915) ^ (v119 & 7 | 0x1858A268) ^ ((v119 & 7 ^ LODWORD(STACK[0x108C]))
                                                                          - 1281731579));
  LODWORD(STACK[0x6A40]) = v127;
  v128 = (v127 ^ 0xD534BFD5) & (2 * (v127 & 0xD9B6BF86)) ^ v127 & 0xD9B6BF86;
  v129 = ((2 * (v127 ^ 0xD67982D9)) ^ 0x1F9E7ABE) & (v127 ^ 0xD67982D9) ^ (2 * (v127 ^ 0xD67982D9)) & 0xFCF3D5E;
  v130 = (v129 ^ 0xF8E3959) & (4 * v128) ^ v128;
  v131 = ((4 * (v129 ^ 0x410541)) ^ 0x3F3CF57C) & (v129 ^ 0x410541) ^ (4 * (v129 ^ 0x410541)) & 0xFCF3D5C;
  v132 = (v131 ^ 0xF0C3540) & (16 * v130) ^ v130;
  v133 = ((16 * (v131 ^ 0xC30803)) ^ 0xFCF3D5F0) & (v131 ^ 0xC30803) ^ (16 * (v131 ^ 0xC30803)) & 0xFCF3D50;
  v134 = v132 ^ 0xFCF3D5F ^ (v133 ^ 0xCC31500) & (v132 << 8);
  LODWORD(STACK[0x6A80]) = (v134 << 16) & 0xFCF0000 ^ v134 ^ ((v134 << 16) ^ 0x3D5F0000) & (((v133 ^ 0x30C280F) << 8) & 0xFCF0000 ^ 0xC20000 ^ (((v133 ^ 0x30C280F) << 8) ^ 0x4F3D0000) & (v133 ^ 0x30C280F));
  v135 = STACK[0x64F8];
  v136 = 917865695 * LODWORD(STACK[0x64F8]) - 1687232682;
  v137 = (v136 ^ 0x42D83AAA) & (2 * (v136 & 0x649120AA)) ^ v136 & 0x649120AA;
  v138 = ((2 * (v136 ^ 0x8AF87ABA)) ^ 0xDCD2B420) & (v136 ^ 0x8AF87ABA) ^ (2 * (v136 ^ 0x8AF87ABA)) & 0xEE695A10;
  v139 = (v138 ^ 0x84604800) & (4 * v137) ^ v137;
  v140 = ((4 * (v138 ^ 0x22294A10)) ^ 0xB9A56840) & (v138 ^ 0x22294A10) ^ (4 * (v138 ^ 0x22294A10)) & 0xEE695A10;
  v141 = (v140 ^ 0xA8214810) & (16 * v139) ^ v139;
  v142 = ((16 * (v140 ^ 0x46481210)) ^ 0xE695A100) & (v140 ^ 0x46481210) ^ (16 * (v140 ^ 0x46481210)) & 0xEE695A10;
  v143 = v141 ^ 0xEE695A10 ^ (v142 ^ 0xE6010010) & (v141 << 8);
  v144 = STACK[0x6678];
  LODWORD(STACK[0x6A30]) = (LODWORD(STACK[0x65D0]) ^ 0x30ECF6A4)
                         + ((((LODWORD(STACK[0x6940]) ^ 0xF0453754) + 552801372) ^ ((LODWORD(STACK[0x6940]) ^ 0xAC86BF3A)
                                                                                  + 2083560502) ^ ((LODWORD(STACK[0x6940]) ^ 0x2EA12DD0)
                                                                                                 - 32043296))
                          - (((v104 ^ 0xC6B16CF9) + 1300099229) ^ ((v104 ^ 0x62567A45) - 375724511) ^ ((v104 ^ 0x894A27BC) + 42384346)))
                         * LODWORD(STACK[0x1090]);
  v145 = ((LODWORD(STACK[0x65E8]) ^ 0x8750230E) + 2024791282) ^ ((LODWORD(STACK[0x65E8]) ^ 0x3518522F) - 890786351) ^ ((LODWORD(STACK[0x65E8]) ^ 0x5C9FDDA3) - 1553980835);
  v146 = v136 ^ LODWORD(STACK[0x66A8]) ^ (2
                                        * ((v143 << 16) & 0x6E690000 ^ v143 ^ ((v143 << 16) ^ 0x5A100000) & (((v142 ^ 0x8685A10) << 8) & 0x6E690000 ^ 0x6210000 ^ (((v142 ^ 0x8685A10) << 8) ^ 0x695A0000) & (v142 ^ 0x8685A10))));
  v147 = v101 ^ 0x3A ^ ((unsigned __int16)(v101 ^ 0x343A) >> 8) ^ ((v101 ^ 0xD140343A) >> 16) ^ HIBYTE(v101) ^ 0x1A;
  v148 = 16843009 * (v125 ^ HIBYTE(v124) ^ 0xD0);
  LODWORD(STACK[0x6528]) = 16843009 * v147;
  LODWORD(STACK[0x6308]) = v148;
  LODWORD(STACK[0x6310]) = v148 ^ 0xB31F631D;
  v149 = (16843009 * v147 - ((33686018 * v147) & 0x6B33CB36) + 899278235) ^ 0xCBCBCBCB ^ v148 ^ 0xB31F631D;
  LODWORD(STACK[0x6940]) = v146 ^ (917865695 * v149);
  LODWORD(STACK[0x6A00]) = (LODWORD(STACK[0x67D0]) ^ 0x56E47A6C)
                         - 2142418863
                         + 815281931
                         * (v120
                          - (((v144 ^ 0xEA378145) - 1372057847) ^ ((v144 ^ 0x22EE5A60) + 1726075950) ^ ((v144 ^ 0x12BBAC37) + 1454645883)));
  v150 = (((LODWORD(STACK[0x67E0]) ^ 0x95C4899) - 157042841) ^ ((LODWORD(STACK[0x67E0]) ^ 0x60E5985D) - 1625659485) ^ ((LODWORD(STACK[0x67E0]) ^ 0xE3C1A197) + 473849449))
       + 634140315 * (v149 - v135)
       + 1406111861
       * ((((v126 ^ 0x149EB43E) - 1332997436) ^ ((v126 ^ 0x261AFD02) - 2113381376) ^ ((v126 ^ 0x23DF88F7) - 2016596469))
        - (((v119 & 7 ^ 0x9BCE2C66) + 1306048034) ^ ((v119 & 7 ^ 0x74FD1585) - 1561620541) ^ ((v119 & 7 ^ 0xEF3339E3)
                                                                                            + 958768037)));
  v151 = STACK[0x6658];
  v152 = v145
       - (((v151 ^ 0x22919E33) + 1581494312) ^ ((v151 ^ 0xA119223F) - 573895636) ^ ((v151 ^ 0x6A398F55) + 384540994))
       - 550820930
       + (((v113 ^ 0xD3C4F83F) - 1099461895) ^ ((v113 ^ 0x1D5E8FA2) + 1894645094) ^ ((v113 ^ 0x5076473C) + 1036334588));
  v153 = (v152 ^ 0xBD3A632B) & (2 * (v152 & 0xB1B063AB)) ^ v152 & 0xB1B063AB;
  v154 = ((2 * (v152 ^ 0xBD3A673D)) ^ 0x1914092C) & (v152 ^ 0xBD3A673D) ^ (2 * (v152 ^ 0xBD3A673D)) & 0xC8A0496;
  v155 = v153 ^ 0xC8A0496 ^ (v154 ^ 0x8080006) & (4 * v153);
  v156 = ((4 * (v154 ^ 0x48A0492)) ^ 0x32281258) & (v154 ^ 0x48A0492) ^ (4 * (v154 ^ 0x48A0492)) & 0xC8A0494;
  v157 = v156 & 0xD06C2960 ^ v155 ^ (v156 ^ 0x80016) & ((16 * v155) ^ 0x18CC6000);
  v158 = ((16 * v156) ^ 0xD0EC2860) & (v156 ^ 0x80016) ^ v156 & 0xD06C2960;
  v159 = v158 & 0xD06C2960 ^ v157 ^ ((v157 << 8) ^ 0x5268BF60) & (v158 ^ 0x80096);
  v160 = ((v158 << 8) ^ 0xD86C2960) & (v158 ^ 0x80096) ^ v158 & 0xD06C2960;
  v161 = v159 ^ v160 & 0x506C2960 ^ ((v159 << 16) ^ 0xD4FA2960) & (v160 ^ 0xC820000) ^ ((v159 << 16) ^ 0xD4FA2960) & 0xC8A0000;
  v162 = STACK[0x69A0];
  v163 = *((_DWORD *)*(&off_1015B46D0 + LODWORD(STACK[0x69A0]) - 7555) + (v126 ^ 0x115BC1CBu) - 3)
       - (((v126 ^ 0xDCD48F3E) + 2026252740) ^ ((v126 ^ 0x36F53A85) - 1830314887) ^ ((v126 ^ 0xFB7A7470) + 1600705166));
  LODWORD(STACK[0x6990]) = (1571284775 * v120) ^ (1571284775
                                                * (((v144 ^ 0x3A04BE10) + 2114662494) ^ ((v144 ^ 0xCC643A85) - 2006207287) ^ ((v144 ^ 0x2C02F387) + 1745714635))
                                                + 328819296) ^ (v150 - 1028040680);
  v164 = (uint64_t)*(&off_1015B46D0 + (v162 ^ 0x2F63));
  LODWORD(STACK[0x6AA0]) = v119 & 7;
  LODWORD(v164) = *(_DWORD *)(v164 + 4 * (v119 & 7) - 4);
  LODWORD(STACK[0x6478]) = v119;
  v165 = (v164 + 703161784 - ((2 * v164) & 0x53D2CB70)) ^ (v119 & 7 | 0xD5C8258);
  LODWORD(STACK[0x6760]) = v120;
  v166 = (v117 + 786286317) ^ 0xF0DE4823 | v120;
  LODWORD(STACK[0x6A20]) = v166;
  v167 = ((2 * v166) & 0xFFFF7EFE) + (v166 ^ 0x7FFFBF7F);
  v168 = v113;
  v169 = ((2 * (v113 & 0xFE ^ 0xFA)) & 0x50) - (v113 & 0xFE ^ 0xFA);
  v170 = v115 - 1;
  v171 = (v169 + 945214423) & 0x20025FFF;
  v172 = (v171 ^ 0x633D9DC8) & ((v115 - 1) ^ 0xE639EFDF) ^ (v115 - 1) & 0xBCC0313A;
  v173 = (v172 & 0x9B4DE831 ^ 0x1B4DC821) + (v172 ^ 0xA4002110) - ((v172 ^ 0xA4002110) & 0x9B4DE831);
  v174 = (LODWORD(STACK[0x66B0]) ^ 0xE3E29706) + 1893589919 * (v135 - v149);
  LODWORD(v164) = *((_DWORD *)*(&off_1015B46D0 + v162 - 9586) + (v167 - 2147467135) % 0x101);
  v175 = v101 ^ 0xFEEA257C ^ LODWORD(STACK[0x66B8]) ^ (8 * (v101 ^ 0xFEEA257C)
                                                     - ((16 * (v101 ^ 0xFEEA257C)) & 0xBB8C59C0)
                                                     - 574214941);
  v176 = STACK[0x68E0];
  LODWORD(STACK[0x67E0]) = (((v151 & 0xFE ^ 0xEA | 0x68943BE2) - (v151 & 0xFE ^ 0xEA | 0x976BC41D) - 1754545123) ^ 0xAAF8773C) & (LODWORD(STACK[0x68E0]) ^ 0xF0195565);
  v177 = *((_DWORD *)*(&off_1015B46D0 + (v162 ^ 0x223D)) + (v118 ^ 0x54C453A6) % 0x101 - 3);
  LODWORD(v164) = (((LODWORD(STACK[0x66F8]) ^ 0x911BE57C) + 1860442756) ^ ((LODWORD(STACK[0x66F8]) ^ 0xC53CA087)
                                                                         + 985882489) ^ ((LODWORD(STACK[0x66F8]) ^ 0xDE5F34A8)
                                                                                       + 564185944))
                + 271581192
                + (((v177 ^ 0x70A39735) - 1568916605) ^ ((v177 ^ 0xE82BE752) + 989088742) ^ ((v177 ^ 0xF534F944)
                                                                                           + 669734388))
                + (v164 ^ 0x21336D5B)
                + 820;
  v178 = (v164 ^ 0xBAE146AA) & (2 * (v164 & 0xBAE54883)) ^ v164 & 0xBAE54883;
  v179 = ((2 * (v164 ^ 0xAB63C7AC)) ^ 0x230D1E5E) & (v164 ^ 0xAB63C7AC) ^ (2 * (v164 ^ 0xAB63C7AC)) & 0x11868F2E;
  v180 = (v179 ^ 0x104872D) & (4 * v178) ^ v178;
  v181 = ((4 * (v179 ^ 0x10828121)) ^ 0x461A3CBC) & (v179 ^ 0x10828121) ^ (4 * (v179 ^ 0x10828121)) & 0x11868F2C;
  v182 = (v181 ^ 0x20C23) & (16 * v180) ^ v180;
  v183 = ((16 * (v181 ^ 0x11848303)) ^ 0x1868F2F0) & (v181 ^ 0x11848303) ^ (16 * (v181 ^ 0x11848303)) & 0x11868F20;
  v184 = v182 ^ 0x11868F2F ^ (v183 ^ 0x1000820F) & (v182 << 8);
  v185 = (v184 << 16) & 0x11860000 ^ v184 ^ ((v184 << 16) ^ 0xF2F0000) & (((v183 ^ 0x1860D0F) << 8) & 0x11860000 ^ 0x11000000 ^ (((v183 ^ 0x1860D0F) << 8) ^ 0x68F0000) & (v183 ^ 0x1860D0F));
  v186 = (((v151 & 0xFE ^ 0x4293D58) - ((2 * (v151 & 0xFE ^ 0x4293D58)) & 0x81249E8) - 1080056075) ^ 0xB4E913F) & (v176 ^ 0xF3195564) ^ v176 & 0x4F07F535;
  v187 = STACK[0x6930];
  v188 = (((LODWORD(STACK[0x6920]) ^ 0x8EB33446) + 1900858298) ^ ((LODWORD(STACK[0x6920]) ^ 0x9335D8B7) + 1825187657) ^ ((LODWORD(STACK[0x6920]) ^ 0x9B1067C) - 162596476))
       + (((v187 ^ 0xE28E79D8) - 1244379511) ^ ((v187 ^ 0x489892FB) + 532852140) ^ ((v187 ^ 0x87ADF98F) - 789068064))
       - 98678751
       - (((v186 ^ 0x46B39E78) - 395099155) ^ ((v186 ^ 0xE5A022A8) + 1264647997) ^ ((v186 ^ 0x1CED160A) - 1305621601))
       + 550;
  v189 = (v188 ^ 0xA366CD50) & (2 * (v188 & 0xB076E998)) ^ v188 & 0xB076E998;
  v190 = ((2 * (v188 ^ 0xE3835C60)) ^ 0xA7EB6BF0) & (v188 ^ 0xE3835C60) ^ (2 * (v188 ^ 0xE3835C60)) & 0x53F5B5F8;
  v191 = (v190 ^ 0x3E120E0) & (4 * v189) ^ v189;
  v192 = ((4 * (v190 ^ 0x50149408)) ^ 0x4FD6D7E0) & (v190 ^ 0x50149408) ^ (4 * (v190 ^ 0x50149408)) & 0x53F5B5F8;
  v193 = (v192 ^ 0x43D495E0) & (16 * v191) ^ v191;
  v194 = ((16 * (v192 ^ 0x10212018)) ^ 0x3F5B5F80) & (v192 ^ 0x10212018) ^ (16 * (v192 ^ 0x10212018)) & 0x53F5B5F0;
  v195 = v193 ^ 0x53F5B5F8 ^ (v194 ^ 0x13511500) & (v193 << 8);
  v196 = (v195 << 16) & 0x53F50000 ^ v195 ^ ((v195 << 16) ^ 0x35F80000) & (((v194 ^ 0x40A4A078) << 8) & 0x53F50000 ^ 0x2400000 ^ (((v194 ^ 0x40A4A078) << 8) ^ 0x75B50000) & (v194 ^ 0x40A4A078));
  v197 = (v171 ^ 0xA072D720) & (v170 ^ 0x5FF7EFDF) ^ v170 & 0x7F8F7B52;
  v198 = (v197 & 0xCCA23EAF ^ 0x80201CAD) + (v197 ^ 0x5F876202) - ((v197 ^ 0x5F876202) & 0xCCA23EAF);
  v199 = ((v144 ^ 0xC75E4AA1) - 2091793171) ^ ((v144 ^ 0xFB0D2714) - 1090344614) ^ ((v144 ^ LODWORD(STACK[0x1094]))
                                                                                  - 1572956949);
  LODWORD(STACK[0x6920]) = v101 ^ LODWORD(STACK[0x6730]) ^ (32 * (v101 ^ 0xFEEA257C)) ^ v198 ^ 0x36D3E800 ^ (32 * (v198 ^ 0x36D3E800) - (((v198 ^ 0x36D3E800) << 6) & 0x2967D840) + 347335712);
  v200 = (v162 - 1474) | 0x5C0;
  LODWORD(STACK[0x6AC0]) = v200;
  v201 = v187 ^ 0xA8A5E547 ^ v200;
  LODWORD(STACK[0x67D0]) = v201;
  LODWORD(STACK[0x66B8]) = v186 ^ LODWORD(STACK[0x6518]) ^ v201;
  v202 = (LODWORD(STACK[0x6520]) ^ 0xEED7AC82)
       - (((v118 ^ 0x47A22BCA) - 1772515184) ^ ((v118 ^ 0x229B311) - 741210027) ^ ((v118 ^ 0x114FCB7D) - 1061916615))
       + ((v163 - 1055016246) ^ 0xD23266F0)
       + v165
       + v167
       + 297148667;
  v203 = (v202 ^ 0xEB61AC6A) & (2 * (v202 & 0xF38A086B)) ^ v202 & 0xF38A086B;
  v204 = ((2 * (v202 ^ 0xE971ACEE)) ^ 0x35F7490A) & (v202 ^ 0xE971ACEE) ^ (2 * (v202 ^ 0xE971ACEE)) & 0x1AFBA484;
  v205 = (v204 ^ 0x10708401) & (4 * v203) ^ v203;
  v206 = ((4 * (v204 ^ 0xA08A485)) ^ 0x6BEE9214) & (v204 ^ 0xA08A485) ^ (4 * (v204 ^ 0xA08A485)) & 0x1AFBA484;
  v207 = (v206 ^ 0xAEA8000) & (16 * v205) ^ v205;
  v208 = ((16 * (v206 ^ 0x10112481)) ^ 0xAFBA4850) & (v206 ^ 0x10112481) ^ (16 * (v206 ^ 0x10112481)) & 0x1AFBA480;
  v209 = v207 ^ 0x1AFBA485 ^ (v208 ^ 0xABA0000) & (v207 << 8);
  v210 = (v209 << 16) & 0x1AFB0000 ^ v209 ^ ((v209 << 16) ^ 0x24850000) & (((v208 ^ 0x1041A485) << 8) & 0x1AFB0000 ^ 0x5B0000 ^ (((v208 ^ 0x1041A485) << 8) ^ 0x7BA40000) & (v208 ^ 0x1041A485));
  v211 = ((v187 ^ 0x96D782F0) - 388894950) ^ ((v187 ^ 0x4ED86C88) + 819855714) ^ ((v187 ^ 0x90121665) - 300647539);
  LODWORD(STACK[0x6470]) = v101;
  LODWORD(STACK[0x6518]) = (-91860915 * v211 - ((-1254970722 - 183721830 * v211) & 0x96965EA0) + 635733151) ^ LODWORD(STACK[0x65F0]) ^ (-91860915 * (((v101 ^ 0xE5F5E9A1) - 359186640) ^ ((v101 ^ 0xC50286EA) - 899657627) ^ ((v101 ^ 0xBBBBA086) - 1260816887)) + 1688544908);
  v212 = ((LODWORD(STACK[0x66A0]) ^ 0x58E4312E) - 1491349806) ^ ((LODWORD(STACK[0x66A0]) ^ 0xDD44257B) + 582736517) ^ ((LODWORD(STACK[0x66A0]) ^ 0x8C05CFF) - 146824447);
  v213 = LODWORD(STACK[0x6A50]);
  v214 = STACK[0x68C0];
  LODWORD(STACK[0x6730]) = (-1325400064 * v213) & (LODWORD(STACK[0x68C0]) ^ 0x25C7E23D);
  v215 = v212 + 805431813 * ((v214 ^ 0x25C7E23D) - (LODWORD(STACK[0x6900]) ^ 0xB56639F8)) - 948705426;
  v216 = (v215 ^ 0xF1CA5CBB) & (2 * (v215 & 0xC5EC613C)) ^ v215 & 0xC5EC613C;
  LODWORD(STACK[0x6A10]) = v215;
  v217 = ((2 * (v215 ^ 0x729A9CEB)) ^ 0x6EEDFBAE) & (v215 ^ 0x729A9CEB) ^ (2 * (v215 ^ 0x729A9CEB)) & 0xB776FDD6;
  v218 = (v217 ^ 0x26608980) & (4 * v216) ^ v216;
  v219 = ((4 * (v217 ^ 0x91120451)) ^ 0xDDDBF75C) & (v217 ^ 0x91120451) ^ (4 * (v217 ^ 0x91120451)) & 0xB776FDD4;
  v220 = (v219 ^ 0x9552F540) & (16 * v218) ^ v218;
  v221 = ((16 * (v219 ^ 0x22240883)) ^ 0x776FDD70) & (v219 ^ 0x22240883) ^ (16 * (v219 ^ 0x22240883)) & 0xB776FDD0;
  v222 = v220 ^ 0xB776FDD7 ^ (v221 ^ 0x3766DD00) & (v220 << 8);
  v223 = (v222 << 16) & 0x37760000 ^ v222 ^ ((v222 << 16) ^ 0x7DD70000) & (((v221 ^ 0x80102087) << 8) & 0x37760000 ^ 0x1020000 ^ (((v221 ^ 0x80102087) << 8) ^ 0x76FD0000) & (v221 ^ 0x80102087));
  v224 = v175 ^ v173;
  v225 = v173 ^ 0xD8F23744;
  v226 = (LODWORD(STACK[0x65C8]) ^ 0xD7E5C66C)
       + 1129498779
       * ((v118 ^ 0xAAA51096)
        + (((LODWORD(STACK[0x68F0]) ^ 0x595C1D92) + 857626600) ^ ((LODWORD(STACK[0x68F0]) ^ 0x169CE2EE) + 2094966940) ^ ((LODWORD(STACK[0x68F0]) ^ 0x95951BDE) - 2666068)))
       + 1829461767 * ((v101 ^ 0xFEEA257C) - (v173 ^ 0xD8F23744))
       + 1361734883;
  v227 = (v226 ^ 0x29AE3EEB) & (2 * (v226 & 0x4A08BEF0)) ^ v226 & 0x4A08BEF0;
  LODWORD(STACK[0x6300]) = v226;
  v228 = ((2 * (v226 ^ 0x29AF2B2B)) ^ 0xC74F2BB6) & (v226 ^ 0x29AF2B2B) ^ (2 * (v226 ^ 0x29AF2B2B)) & 0x63A795DA;
  v229 = (v228 ^ 0x40870189) & (4 * v227) ^ v227;
  v230 = ((4 * (v228 ^ 0x20A09449)) ^ 0x8E9E576C) & (v228 ^ 0x20A09449) ^ (4 * (v228 ^ 0x20A09449)) & 0x63A795D8;
  v231 = (v230 ^ 0x2861540) & (16 * v229) ^ v229;
  v232 = ((16 * (v230 ^ 0x61218093)) ^ 0x3A795DB0) & (v230 ^ 0x61218093) ^ (16 * (v230 ^ 0x61218093)) & 0x63A795D0;
  v233 = v231 ^ 0x63A795DB ^ (v232 ^ 0x2221154B) & (v231 << 8);
  v234 = ((v233 << 16) ^ 0x15DB0000) & (((v232 ^ 0x4186804B) << 8) & 0x63A70000 ^ 0x40220000 ^ (((v232 ^ 0x4186804B) << 8) ^ 0xA7950000) & (v232 ^ 0x4186804B));
  v235 = (v233 << 16) & 0x63A70000 ^ v233;
  v236 = STACK[0xD9B0];
  v237 = *(_QWORD *)(STACK[0xD9B0] + 8 * (0xA34C54D5 % LODWORD(STACK[0x6860])));
  v238 = STACK[0x6870];
  v239 = *(_QWORD *)(STACK[0xD9B0]
                   + 8
                   * (((((v237 ^ 0xC0433758EB94B706) + 0x64AB422CD5F8D9FFLL) ^ ((v237 ^ 0x64CB7A7035FA7358)
                                                                                - 0x3FDCF0FBF469E25FLL) ^ ((v237 ^ 0x426EABCE388822B8) - 0x19792145F91BB3BFLL))
                     - 0x420E9392B02C084DLL)
                    % STACK[0x6870]));
  LODWORD(STACK[0x6A50]) = v235 ^ v234;
  v240 = *(_QWORD *)(v236
                   + 8
                   * (((((v239 ^ 0xBA7F5F0498B69878) - 0x3B8EC192392160E8) ^ ((v239 ^ 0x4F58D732E390F480)
                                                                                + 0x3156B65BBDF8F3F0) ^ ((v239 ^ 0x13C16ED09DC08A1ELL) + 0x6DCF0FB9C3A88D72))
                     + 0x67177870479D7410)
                    % v238));
  v241 = ((2 * v240) & 0xCDCDCDCDCDCDCDCCLL ^ 0x8C0458C45C88504)
       - ((2 * ((2 * v240) & 0xCDCDCDCDCDCDCDCCLL ^ 0x8C0458C45C88504)) & 0xA9B819A80181290)
       + 0x374DC2ED401C1B7ALL;
  LODWORD(STACK[0x6520]) = LODWORD(STACK[0x6A40]) ^ (2 * LODWORD(STACK[0x6A80]));
  LODWORD(STACK[0x66A8]) = v152 ^ (2 * v161);
  LODWORD(STACK[0x66B0]) = v224 ^ (8 * v225);
  STACK[0x6A80] = v236;
  v242 = *(_QWORD *)(v236
                   + 8
                   * ((v240
                     - (((v241 ^ 0xCD1A4B7FC507F00ELL) + 0x3B7B4E07D02EA37BLL) ^ ((v241 ^ 0xBC835121E271A14BLL)
                                                                                + 0x4AE25459F758F240) ^ ((v241 ^ 0x4E149D3F22A2CF3BLL) - 0x478A67B8C87463B0))
                     - 0x4F2C96FF6CC7A1E5)
                    % v238));
  LODWORD(STACK[0x65C8]) = v164 ^ (2 * v185);
  LODWORD(STACK[0x68D0]) = v188 ^ (2 * v196);
  LODWORD(STACK[0x66A0]) = v202 ^ (2 * v210);
  LODWORD(v242) = ((((v242 ^ 0xEB11FB29FC687209) + 0x6C91C34813F79754) ^ ((v242 ^ 0xDF532ED8D74194CBLL)
                                                                            + 0x58D316B938DE7192) ^ ((v242 ^ 0xD2A43317CDCF0024) + 0x55240B762250E57FLL))
                 - 0x6166DE86C5DA809ELL)
                % v238;
  LODWORD(v242) = (((v242 - ((2 * v242) & 0x9B654EAC) + 1303553878) ^ LODWORD(STACK[0x1098])) + 605478577) ^ (((v242 - ((2 * v242) & 0x9B654EAC) + 1303553878) ^ 0xC3B37D27) + 639147930) ^ (((v242 - ((2 * v242) & 0x9B654EAC) + 1303553878) ^ 0x4FBCE67F) - 1441332030);
  LODWORD(STACK[0x6450]) = 16843009 * v213;
  LODWORD(STACK[0x65F0]) = LODWORD(STACK[0x6A60]) ^ (16843009 * v213);
  v243 = STACK[0x6A30];
  LODWORD(STACK[0x6A40]) = (2 * LODWORD(STACK[0x6A30]) + 121235720) & 0x4770799C;
  LODWORD(STACK[0x6A30]) = v243 - 1487589038;
  LODWORD(v240) = v151 ^ LODWORD(STACK[0x6510]);
  LODWORD(STACK[0x65F8]) = v168;
  LODWORD(STACK[0x65D0]) = v240 ^ v168;
  LODWORD(v240) = LODWORD(STACK[0x6A00]) + 3791;
  LODWORD(STACK[0x67C0]) = (2 * v240) & 0xE547D88A;
  LODWORD(STACK[0x64B8]) = v240 + 1923345477;
  LODWORD(STACK[0x69C0]) = (2 * v174) & 0x5758AA58;
  LODWORD(STACK[0x69B0]) = v174 + 732714284;
  LODWORD(STACK[0x69F0]) = LODWORD(STACK[0x6500]) ^ 0x56E47A6C;
  LODWORD(STACK[0x69D0]) = -v199;
  LODWORD(STACK[0x69E0]) = -(((v118 ^ 0x8515244C) + 1424924426) ^ ((v118 ^ 0x2FE24349) - 31852531) ^ ((v118 ^ 0xFE3334A3) + 801673191));
  LODWORD(STACK[0x6A00]) = 2 * v223;
  LODWORD(STACK[0x6498]) = v214 ^ 0x6456B756;
  v244 = *(uint64_t (**)(uint64_t, unint64_t))(STACK[0x6AD8] + 8 * v162);
  LODWORD(STACK[0x6A60]) = v242 - 942121632;
  return v244(0x2B7F43A3A3F13F99, 0xC6825D8D45C605F3);
}

uint64_t sub_100B86350()
{
  int v0;
  unsigned int v1;
  _BOOL4 v2;

  v2 = (v0 + 1782110565) < LODWORD(STACK[0x6A60]);
  if (LODWORD(STACK[0x6A60]) < v1 != (v0 + 1782110565) < 0x6FF1A349)
    v2 = LODWORD(STACK[0x6A60]) < v1;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x6AC0]) | (2 * v2))))(0x2B7F43A3A3F13F99);
}

uint64_t sub_100B89858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x6900]) = LODWORD(STACK[0x65F0]) ^ 0x20;
  LODWORD(STACK[0x6500]) = LODWORD(STACK[0x65D0]) ^ 0x11615CD3;
  LODWORD(STACK[0x6510]) = LODWORD(STACK[0x66A8]) ^ 0x84D44B40;
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x69B0]) - LODWORD(STACK[0x69C0]);
  LODWORD(STACK[0x68E0]) &= 0x3D93B393u;
  LODWORD(STACK[0x68C0]) = LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x109C]);
  LODWORD(STACK[0x69A0]) = LODWORD(STACK[0x66B8]) ^ 0x513F226B;
  LODWORD(STACK[0x64F8]) = LODWORD(STACK[0x6518]) ^ 0xF9540E97;
  LODWORD(STACK[0x62F8]) = 2 * LODWORD(STACK[0x6A50]);
  STACK[0x6A50] = STACK[0xD9B0];
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x6A70]) - 341218608;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - 12))();
}

uint64_t sub_100B899E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  LODWORD(STACK[0x6A80]) = LODWORD(STACK[0x6AC0]) < v9;
  STACK[0x6A60] = (a8 - 3761);
  v10 = v8 - 128948997;
  v11 = v10 < LODWORD(STACK[0x6AC0]);
  if (LODWORD(STACK[0x6A80]) != v10 < 0xFE092EDF)
    v11 = STACK[0x6A80];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27244 * (v11 ^ 1)) ^ a8)) - 12))(0x2B7F43A3A3F13F99);
}

uint64_t sub_100B8CFE8()
{
  unint64_t v0;
  uint64_t (*v1)(void);

  LODWORD(STACK[0x6458]) = LODWORD(STACK[0x69F0])
                         + LODWORD(STACK[0x69D0])
                         + LODWORD(STACK[0x69E0])
                         + LODWORD(STACK[0x6760])
                         + LODWORD(STACK[0x6A20])
                         + 598598212;
  LODWORD(STACK[0x64F0]) = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6A10]);
  LODWORD(STACK[0x62F0]) = LODWORD(STACK[0x6528]) ^ 0x306B6DF2;
  LODWORD(STACK[0x6930]) = LODWORD(STACK[0x6940]) ^ 0x9DE0A46;
  LODWORD(STACK[0x64E0]) = LODWORD(STACK[0x6990]) ^ 0xF4579B4D;
  LODWORD(STACK[0x69B0]) = LODWORD(STACK[0x65C8]) ^ 0x57378602;
  if (((*(_BYTE *)(STACK[0x6AB0]
                  + ((*(_BYTE *)(STACK[0x6AB0]
                               + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 11) + 2) & 0xF)) - 1) & 0xF))
                    + 5) & 0xF))
       + 14) & 0xE) != 0)
    v0 = (*(_BYTE *)(STACK[0x6AB0]
                   + ((*(_BYTE *)(STACK[0x6AB0]
                                + ((*(_BYTE *)(STACK[0x6AB0] + ((*(_BYTE *)(STACK[0x6AB0] + 11) + 2) & 0xF)) - 1) & 0xF))
                     + 5) & 0xF))
        + 14) & 0xF;
  else
    v0 = 1;
  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6A60]) - 12);
  STACK[0x6AC0] = v0;
  STACK[0x6A50] = v0 - 1;
  return v1();
}

uint64_t sub_100B8E13C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6A60];
  LODWORD(STACK[0x6A80]) = (STACK[0x6A60] - 2390) | 0x2130;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((14402 * (STACK[0x6A50] == v0)) ^ v1)) - 12))();
}

uint64_t sub_100B8F6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  LODWORD(STACK[0x64C8]) = LODWORD(STACK[0x6A30]) - LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x64E8]) = LODWORD(STACK[0x66B0]) ^ 0xAD10A940;
  v7 = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A80]));
  LODWORD(STACK[0x66F8]) = LODWORD(STACK[0x66A0]) ^ 0x7C2C602E;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 - 4))(0, STACK[0x6AC0] - 1, a3, a4, a5, a6, a7, 1890276898);
}

uint64_t sub_100B8F7AC(uint64_t a1, int a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;

  LODWORD(STACK[0x69E0]) = a5;
  LODWORD(STACK[0x6A00]) = a4;
  LODWORD(STACK[0x6A40]) = a2;
  STACK[0x6A50] = v10;
  LODWORD(STACK[0x6A60]) = v9;
  v13 = 116 * (LODWORD(STACK[0x6A80]) ^ 0x310D);
  v14 = *(unsigned __int8 *)(a7 + v11);
  LODWORD(STACK[0x69C0]) = v13;
  v15 = (v13 ^ 0x2BAF5A6B) + v14 * v8;
  v16 = (v15 ^ 0xC05A3F2D) & (2 * (v15 & 0xD450BE31)) ^ v15 & 0xD450BE31;
  v17 = ((2 * (v15 ^ 0x687A7F2D)) ^ 0x78558238) & (v15 ^ 0x687A7F2D) ^ (2 * (v15 ^ 0x687A7F2D)) & 0xBC2AC11C;
  v18 = v17 ^ 0x842A4104;
  v19 = (v17 ^ 0x34288008) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0xF0AB0470) & v18 ^ (4 * v18) & 0xBC2AC11C;
  v21 = v19 ^ 0xBC2AC11C ^ (v20 ^ 0xB02A0010) & (16 * v19);
  v22 = (16 * (v20 ^ 0xC00C10C)) & 0xBC2AC110 ^ 0x3C02C01C ^ ((16 * (v20 ^ 0xC00C10C)) ^ 0xC2AC11C0) & (v20 ^ 0xC00C10C);
  v23 = (v21 << 8) & 0xBC2AC100 ^ v21 ^ ((v21 << 8) ^ 0x2AC11C00) & v22;
  v24 = (v7 - ((2 * v7) & 0x2A547FB6) - 1792393253) ^ 0x693F03D2 ^ v15 ^ (2
                                                                        * ((v23 << 16) & 0x3C2A0000 ^ v23 ^ ((v23 << 16) ^ 0x411C0000) & ((v22 << 8) & 0x3C2A0000 ^ 0x142A0000 ^ ((v22 << 8) ^ 0x2AC10000) & v22)));
  STACK[0x69F0] = v11 + a1;
  v25 = v11 + a1 + v24 - ((v24 + v12 + ((v24 + v12) >> 16)) >> 8) + ((v24 + v12) >> 16);
  v26 = ((2 * v25) & 0x93EFA9F6) + (v25 ^ 0xC9F7D4FB);
  v27 = v26 + 2138767320;
  v28 = (2 * ((v26 + 2138767320) & 0xB68D2B2D)) & ((v26 + 2138767320) ^ 0x36CC8A8D) ^ (v26 + 2138767320) & 0xB68D2B2D;
  v29 = ((2 * ((v26 + 2138767320) ^ 0x52D6CA8D)) ^ 0xC8B7C340) & ((v26 + 2138767320) ^ 0x52D6CA8D) ^ (2 * ((v26 + 2138767320) ^ 0x52D6CA8D)) & 0xE45BE1A0;
  v30 = v29 ^ 0x244820A0;
  v31 = (v29 ^ 0xC011C100) & (4 * v28) ^ v28;
  v32 = ((4 * v30) ^ 0x916F8680) & v30 ^ (4 * v30) & 0xE45BE1A0;
  v33 = (v32 ^ 0x804B8080) & (16 * v31) ^ v31;
  v34 = ((16 * (v32 ^ 0x64106120)) ^ 0x45BE1A00) & (v32 ^ 0x64106120) ^ (16 * (v32 ^ 0x64106120)) & 0xE45BE1A0;
  v35 = v33 ^ 0xE45BE1A0 ^ (v34 ^ 0x441A0000) & (v33 << 8);
  LODWORD(STACK[0x6A10]) = v26 + 281701763;
  LODWORD(STACK[0x6A30]) = ((4 * (v26 + 281701763)) & 0xC49310D8 ^ 0x24431D4F)
                         + ((4 * (v26 + 281701763)) & 0xA20A000 ^ 0x208A001);
  v26 += 2121423271;
  v36 = (v26 ^ 0x6D5A4519) & (2 * (v26 & 0x6D1A565A)) ^ v26 & 0x6D1A565A;
  v37 = (v35 << 16) & 0x520000 ^ v35 ^ ((v35 << 16) ^ 0x1A00000) & (((v34 ^ 0xA041E1A0) << 8) & 0x45B0000 ^ 0x41A0000 ^ (((v34 ^ 0xA041E1A0) << 8) ^ 0x1BE10000) & (v34 ^ 0xA041E1A0));
  v38 = ((2 * (v26 ^ 0x6D5AE90D)) ^ 0x817EAE) & (v26 ^ 0x6D5AE90D) ^ (2 * (v26 ^ 0x6D5AE90D)) & 0x40BF56;
  v39 = ((4 * (v38 ^ 0x408151)) ^ 0x102FD5C) & (v38 ^ 0x408151) ^ (4 * (v38 ^ 0x408151)) & 0x40BF54;
  v40 = (v39 ^ 0xBD40) & (16 * ((v38 ^ 0x3E00) & (4 * v36) ^ v36)) ^ (v38 ^ 0x3E00) & (4 * v36) ^ v36;
  v41 = ((16 * (v39 ^ 0x400203)) ^ 0x40BF570) & (v39 ^ 0x400203) ^ (16 * (v39 ^ 0x400203)) & 0x40BF50;
  v42 = v40 ^ 0x40BF57 ^ (v41 ^ 0xB500) & (v40 << 8);
  LODWORD(STACK[0x6A20]) = (((8 * v37) ^ (4 * v27)) & 0xCEB3B0D8 ^ 0x402B010)
                         + (((8 * v37) ^ (4 * v27)) & 0x4A012018 ^ 0x7B0D082C)
                         - ((((8 * v37) ^ (4 * v27)) & 0xCEB3B0D8 ^ 0x402B010) & 0x4A012018);
  v43 = v26 ^ (2
             * ((v42 << 16) & 0x400000 ^ v42 ^ ((v42 << 16) ^ 0x3F570000) & (((v41 ^ 0x400A07) << 8) & 0x400000 ^ (((v41 ^ 0x400A07) << 8) ^ 0x40BF0000) & (v41 ^ 0x400A07) ^ 0x400000))) ^ 0x9431531A;
  LODWORD(STACK[0x69D0]) = 723707125
                         - ((4 * v43) & 0xCEB3B0D8 ^ 0xC6029010 | 0x2B22E4F5)
                         + ((4 * v43) & 0xCEB3B0D8 ^ 0xC6029010 | 0xD4DD1B0A);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                              + 8
                                                              * ((174 * (STACK[0x69F0] == 15)) ^ LODWORD(STACK[0x6A80])))
                                                  - 4))(a1 + 1, (LODWORD(STACK[0x6A40]) + 1));
}

uint64_t sub_100B907F4@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  unsigned int v140;
  uint64_t (*v141)(void);

  LODWORD(STACK[0x6A20]) = v8;
  v9 = STACK[0x69C0];
  v10 = (LODWORD(STACK[0x69C0]) + 1088028731) & 0xBF25FFB4;
  LODWORD(STACK[0x62A0]) = LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6450]);
  LODWORD(STACK[0x6A80]) = v10;
  LODWORD(STACK[0x6730]) = (v10 - 886191812) ^ LODWORD(STACK[0x6920]);
  v11 = (a4 + a1) >> 16;
  v12 = a4 + v5 + v11;
  v13 = (a4 + a1 + v11) >> 8;
  v14 = v7
      + a4
      + ((v12 + ((v12 - v13) >> 13) - v13) >> 1)
      - ((2 * ((_DWORD)v7 + a4 + ((v12 + ((v12 - v13) >> 13) - v13) >> 1) + ((v12 - v13) >> 13) + v11 - v13 - v4)) & 0xBD2C2C76)
      + ((v12 - v13) >> 13)
      + v11
      - v13
      - v6;
  v15 = (v14 ^ 0xC65DC1B6)
      + ((v14 ^ 0xC65DC1B6) >> 10)
      - (((v14 ^ 0xC65DC1B6) + ((v14 ^ 0xC65DC1B6) >> 10)) >> 3);
  v16 = ((v15 - 1744607686) ^ 0x9AA86DDC) & (2 * ((v15 - 1744607686) & STACK[0x10A0])) ^ (v15 - 1744607686) & STACK[0x10A0];
  v17 = ((2 * ((v15 - 1744607686) ^ 0x8EB16DEC)) ^ 0x297BC7EA) & ((v15 - 1744607686) ^ 0x8EB16DEC) ^ (2 * ((v15 - 1744607686) ^ 0x8EB16DEC)) & 0x14BDE3F4;
  v18 = v17 ^ 0x14842015;
  v19 = (v17 ^ 0x4B040F1) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0x52F78FD4) & v18 ^ (4 * v18) & 0x14BDE3F4;
  v21 = (v20 ^ 0x10B583D0) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x4086021)) ^ 0x4BDE3F50) & (v20 ^ 0x4086021) ^ (16 * (v20 ^ 0x4086021)) & 0x14BDE3F0;
  v23 = v21 ^ 0x14BDE3F5 ^ (v22 ^ 0x9C23A5) & (v21 << 8);
  v24 = ((v15 - 1744607686) ^ (2
                             * ((v23 << 16) & 0x14BD0000 ^ v23 ^ ((v23 << 16) ^ 0x63F50000) & (((v22 ^ 0x1421C0A5) << 8) & 0x14BD0000 ^ (((v22 ^ 0x1421C0A5) << 8) ^ 0x3DE30000) & (v22 ^ 0x1421C0A5) ^ 0x1C0000u)))) >> 8;
  v25 = v15
      - 1530727845
      + (((v24 ^ 0x3E353D5A) - 1024293436) ^ ((v24 ^ 0x6F58D26) - 97372736) ^ ((v24 ^ 0x3872AD35) - 994765395));
  v26 = (v25 ^ 0xC8975FA7) & (2 * (v25 & 0x90D75C27)) ^ v25 & 0x90D75C27;
  v27 = ((2 * (v25 ^ 0xC8B5EFE5)) ^ 0xB0C56784) & (v25 ^ 0xC8B5EFE5) ^ (2 * (v25 ^ 0xC8B5EFE5)) & 0x5862B3C2;
  v28 = v27 ^ 0x48229042;
  v29 = (v27 ^ 0x84021C2) & (4 * v26) ^ v26;
  v30 = ((4 * v28) ^ 0x618ACF08) & v28 ^ (4 * v28) & 0x5862B3C0;
  v31 = (v30 ^ 0x40028302) & (16 * v29) ^ v29;
  v32 = ((16 * (v30 ^ 0x186030C2)) ^ 0x862B3C20) & (v30 ^ 0x186030C2) ^ (16 * (v30 ^ 0x186030C2)) & 0x5862B3C0;
  v33 = v31 ^ 0x5862B3C2 ^ (v32 ^ 0x2230C2) & (v31 << 8);
  v34 = (v25 ^ (2
              * ((v33 << 16) & 0x58620000 ^ v33 ^ ((v33 << 16) ^ 0x33C20000) & (((v32 ^ 0x584083C2) << 8) & 0x58620000 ^ 0x18400000 ^ (((v32 ^ 0x584083C2) << 8) ^ 0x62B30000) & (v32 ^ 0x584083C2))))) >> 4;
  v35 = v25
      - 1203868817
      + (((v34 ^ 0xCEC20D2D) + 1560557334) ^ ((v34 ^ 0x8AC703F5) + 419510734) ^ ((v34 ^ 0x440C6D62) - 674605221));
  v36 = (v35 ^ 0x52A1C625) & (2 * (v35 & 0x44C99735)) ^ v35 & 0x44C99735;
  v37 = ((2 * (v35 ^ 0xD2B1C24F)) ^ 0x2CF0AAF4) & (v35 ^ 0xD2B1C24F) ^ (2 * (v35 ^ 0xD2B1C24F)) & 0x9678557A;
  v38 = v37 ^ 0x9208550A;
  v39 = (v37 ^ 0x84600072) & (4 * v36) ^ v36;
  v40 = ((4 * v38) ^ 0x59E155E8) & v38 ^ (4 * v38) & 0x96785578;
  v41 = (v40 ^ 0x10605560) & (16 * v39) ^ v39;
  v42 = ((16 * (v40 ^ 0x86180012)) ^ 0x678557A0) & (v40 ^ 0x86180012) ^ (16 * (v40 ^ 0x86180012)) & 0x96785570;
  v43 = v41 ^ 0x9678557A ^ (v42 ^ 0x600555A) & (v41 << 8);
  v44 = v35 ^ (2
             * ((v43 << 16) & 0x16780000 ^ v43 ^ ((v43 << 16) ^ 0x557A0000) & (((v42 ^ 0x9078005A) << 8) & 0x16780000 ^ 0x6280000 ^ (((v42 ^ 0x9078005A) << 8) ^ 0x78550000) & (v42 ^ 0x9078005A))));
  v45 = (((4 * (v44 ^ 0x8FCBAE2D)) & 0xCEB3B0D8 ^ 0x82B1B0D0)
       - ((2 * ((4 * (v44 ^ 0x8FCBAE2D)) & 0xCEB3B0D8 ^ 0x82B1B0D0)) & 0x114001B0)
       - 1997779973) ^ 0xA8C279BA;
  v46 = ((2 * v45) | 0x2E2E9D88) - v45 - 387403460;
  v47 = v44 ^ 0x8FCBAE2D ^ a2;
  v48 = v47 & 0x5BBCD421 ^ 0x51189401 ^ (v46 ^ 0xE23618E4) & (v47 ^ 0x4A355B5);
  v49 = 2 * ((v48 | 0x6C334043) - (v48 | 0x13CCBFBC)) + 664371064;
  v50 = (((v44 ^ 0xE19D773) - 1957820976) ^ ((v44 ^ 0xEC91ED07) + 1774600124) ^ ((v44 ^ 0x9B92A878) + 516258501))
      - ((((v44 >> 14) ^ 0x37B70372) - 965033730) ^ (((v44 >> 14) ^ 0x8FD16F73) + 2115808509) ^ (((v44 >> 14) ^ 0xB867886B)
                                                                                               + 1235897317));
  v51 = ((v50 + 1686851431) ^ 0x4EFBD78D) & (2 * ((v50 + 1686851431) & 0x90F397CE)) ^ (v50 + 1686851431) & 0x90F397CE;
  v52 = ((2 * ((v50 + 1686851431) ^ 0x6FDAF90D)) ^ 0xFE52DD86) & ((v50 + 1686851431) ^ 0x6FDAF90D) ^ (2 * ((v50 + 1686851431) ^ 0x6FDAF90D)) & 0xFF296EC2;
  v53 = v52 ^ 0x1292241;
  v54 = (v52 ^ 0xC6004C00) & (4 * v51) ^ v51;
  v55 = ((4 * v53) ^ 0xFCA5BB0C) & v53 ^ (4 * v53) & 0xFF296EC0;
  v56 = (v55 ^ 0xFC212A00) & (16 * v54) ^ v54;
  v57 = ((16 * (v55 ^ 0x30844C3)) ^ 0xF296EC30) & (v55 ^ 0x30844C3) ^ (16 * (v55 ^ 0x30844C3)) & 0xFF296EC0;
  v58 = v56 ^ 0xFF296EC3 ^ (v57 ^ 0xF2006C00) & (v56 << 8);
  v59 = v50
      - 176232651
      + ((((v50 + 1686851431) ^ (2
                               * ((v58 << 16) & 0x7F290000 ^ v58 ^ ((v58 << 16) ^ 0x6EC30000) & (((v57 ^ 0xD2902C3) << 8) & 0x7F290000 ^ 0x56010000 ^ (((v57 ^ 0xD2902C3) << 8) ^ 0x296E0000) & (v57 ^ 0xD2902C3))))) >> 4) ^ 0xB2A34A4);
  v60 = (((v47 ^ 0xDF95AF67) + 543838361) ^ ((v47 ^ 0x5203B67C) - 1375975036) ^ ((v47 ^ 0x89354CAE) + 1992995666))
      + (((v46 ^ 0x9D25DF72) + 1402476440) ^ ((v46 ^ 0xBE3324E4) + 1888414722) ^ ((v46 ^ 0x9A9C3753) + 1411514295))
      - (((v49 ^ 0xEB97C570) - 569911211) ^ ((v49 ^ LODWORD(STACK[0x10A4])) + 1576112926) ^ ((v49 ^ 0xF8E14B8F)
                                                                                           - 848210260))
      + 603387129;
  LODWORD(STACK[0x62D0]) = v60;
  v61 = (v60 ^ 0xA7FD727C) & (2 * (v60 & 0xB7FC7A7E)) ^ v60 & 0xB7FC7A7E;
  v62 = ((2 * (v60 ^ 0x860D32DC)) ^ 0x63E29144) & (v60 ^ 0x860D32DC) ^ (2 * (v60 ^ 0x860D32DC)) & 0x31F148A2;
  v63 = v62 ^ 0x101148A2;
  v64 = (v62 ^ 0x21E00002) & (4 * v61) ^ v61;
  v65 = ((4 * v63) ^ 0xC7C52288) & v63 ^ (4 * v63) & 0x31F148A0;
  v66 = v64 ^ 0x31F148A2 ^ (v65 ^ 0x1C10080) & (16 * v64);
  v67 = (16 * (v65 ^ 0x30304822)) & 0x31F148A0 ^ 0x20E14082 ^ ((16 * (v65 ^ 0x30304822)) ^ 0x1F148A20) & (v65 ^ 0x30304822);
  v68 = (v66 << 8) & 0x31F14800 ^ v66 ^ ((v66 << 8) ^ 0xF148A200) & v67;
  LODWORD(STACK[0x6A00]) = (v68 << 16) & 0x31F10000 ^ v68 ^ ((v68 << 16) ^ 0x48A20000) & ((v67 << 8) & 0x31F10000 ^ 0xB10000 ^ ((v67 << 8) ^ 0xF1480000) & v67);
  LODWORD(STACK[0x69D0]) = v59;
  STACK[0x69E0] = v14;
  v69 = (v59 + 1586893087 - ((2 * v59) & 0xBD2C2C76) + 1308) ^ v14;
  v70 = (v59 ^ 0xCF942A28) - ((v59 ^ 0xCF942A28) >> 15) - (((v59 ^ 0xCF942A28) - ((v59 ^ 0xCF942A28) >> 15)) >> 4);
  v71 = v70 + ((v70 - 1630131289) >> 14);
  v72 = ((v71 - 264910041) ^ 0xCBD4E21) & (2 * ((v71 - 264910041) & 0xAEA06080)) ^ (v71 - 264910041) & 0xAEA06080;
  v73 = ((2 * ((v71 - 264910041) ^ 0x40FD8E21)) ^ 0xDCBBDD42) & ((v71 - 264910041) ^ 0x40FD8E21) ^ (2
                                                                                                  * ((v71 - 264910041) ^ 0x40FD8E21)) & 0xEE5DEEA0;
  v74 = v73 ^ 0x224422A1;
  v75 = (v73 ^ 0xCC018400) & (4 * v72) ^ v72;
  v76 = ((4 * v74) ^ 0xB977BA84) & v74 ^ (4 * v74) & 0xEE5DEEA0;
  v77 = (v76 ^ 0xA855AA81) & (16 * v75) ^ v75;
  v78 = ((16 * (v76 ^ 0x46084421)) ^ 0xE5DEEA10) & (v76 ^ 0x46084421) ^ (16 * (v76 ^ 0x46084421)) & 0xEE5DEEA0;
  v79 = v77 ^ 0xEE5DEEA1 ^ (v78 ^ 0xE45CEA00) & (v77 << 8);
  v80 = ((v71 - 264910041) ^ (2
                            * ((v79 << 16) & 0x6E5D0000 ^ v79 ^ ((v79 << 16) ^ 0x6EA10000) & (((v78 ^ 0xA0104A1) << 8) & 0x6E5D0000 ^ 0x22110000 ^ (((v78 ^ 0xA0104A1) << 8) ^ 0x5DEE0000) & (v78 ^ 0xA0104A1))))) >> 7;
  v81 = v71
      - (((v80 ^ 0x9A7D1031) - 673055027) ^ ((v80 ^ 0x5A0D6D67) + 395412379) ^ ((v80 ^ 0xC12C4E2D) - 1934581551))
      + 359979806;
  v82 = ((2 * (v81 & 0xD6222E10)) & 0x28400020 | v81 & 0xD6222E10) ^ (2 * (v81 & 0xD6222E10)) & (v81 ^ 0xFCE98EE9);
  v83 = ((2 * (v81 ^ 0xFCE98EE9)) ^ 0x559741F2) & (v81 ^ 0xFCE98EE9) ^ (2 * (v81 ^ 0xFCE98EE9)) & 0x2ACBA0F8;
  v84 = v83 ^ 0x2A48A009;
  v85 = (v83 ^ 0x2C100C9) & (4 * v82) ^ v82;
  v86 = ((4 * v84) ^ 0xAB2E83E4) & v84 ^ (4 * v84) & 0x2ACBA0F8;
  v87 = (v86 ^ 0x2A0A80F0) & (16 * v85) ^ v85;
  v88 = ((16 * (v86 ^ 0xC12019)) ^ 0xACBA0F90) & (v86 ^ 0xC12019) ^ (16 * (v86 ^ 0xC12019)) & 0x2ACBA0F0;
  v89 = v87 ^ 0x2ACBA0F9 ^ (v88 ^ 0x288A0000) & (v87 << 8);
  v90 = v81 ^ (2
             * ((v89 << 16) & 0x2ACB0000 ^ v89 ^ ((v89 << 16) ^ 0x20F90000) & (((v88 ^ 0x241A069) << 8) & 0x2ACB0000 ^ 0x204B0000 ^ (((v88 ^ 0x241A069) << 8) ^ 0x4BA00000) & (v88 ^ 0x241A069))));
  LODWORD(STACK[0x62C8]) = v90 ^ 0xB2A56D18;
  v91 = (((4 * (v90 ^ 0xB2A56D18)) & 0xCEB3B0D8 ^ 0x84130050)
       + ((4 * (v90 ^ 0xB2A56D18)) & 0x440280D8 ^ 0x510CCA8F)
       - (((4 * (v90 ^ 0xB2A56D18)) & 0xCEB3B0D8 ^ 0x84130050) & 0x440280D8)) & 0xFFFFB3F8 ^ 0x131D8240;
  v92 = (v90 ^ 0xA31A8995) + ((v90 >> 13) ^ 0xFFFAE72B) + 1;
  v93 = v92 + (v92 >> 4) - ((2 * (v92 + (v92 >> 4))) & 0xCFCFB290) + 1743247688;
  v94 = (((v93 ^ 0xAFEBB878) + 1343506312) ^ ((v93 ^ 0x25E0418D) - 635453837) ^ ((v93 ^ 0xEDEC20BD) + 303292227))
      + 333328721;
  v95 = v69 + 669505864 - ((2 * v69) & 0xFCFB290);
  v96 = v94 + (v94 >> 10) - ((v94 + (v94 >> 10)) >> 1);
  v97 = (((v96 ^ 0x2D142FAD) - 1211388057) ^ ((v96 ^ 0x8B262DC8) + 301575428) ^ ((v96 ^ 0x61C7192F) - 82273819))
      - ((((v96 >> 8) ^ 0x4173654B) - 829539997) ^ (((v96 >> 8) ^ 0xFAC01F79) + 1966949201) ^ (((v96 >> 8) ^ 0xBB748F29)
                                                                                             + 881447681));
  v98 = ((v97 + 863377420) ^ 0xFE1DF1B5) & (2 * ((v97 + 863377420) & 0xFE99F5A5)) ^ (v97 + 863377420) & 0xFE99F5A5;
  v99 = ((2 * ((v97 + 863377420) ^ 0xDB2C93FF)) ^ 0x4B6ACCB4) & ((v97 + 863377420) ^ 0xDB2C93FF) ^ (2
                                                                                                  * ((v97 + 863377420) ^ 0xDB2C93FF)) & 0x25B5665A;
  v100 = v99 ^ 0x2495224A;
  v101 = (v99 ^ 0x304452) & (4 * v98) ^ v98;
  v102 = ((4 * v100) ^ 0x96D59968) & v100 ^ (4 * v100) & 0x25B56658;
  v103 = (v102 ^ 0x4950042) & (16 * v101) ^ v101;
  v104 = ((16 * (v102 ^ 0x21206612)) ^ 0x5B5665A0) & (v102 ^ 0x21206612) ^ (16 * (v102 ^ 0x21206612)) & 0x25B56650;
  v105 = v104 ^ 0x24A1025A;
  v106 = v103 ^ 0x25B5665A ^ (v104 ^ 0x1146400) & (v103 << 8);
  v107 = ((v97 + 863377420) ^ (2
                             * ((v106 << 16) & 0x25B50000 ^ v106 ^ ((v106 << 16) ^ 0x665A0000) & ((v105 << 8) & 0x25B50000 ^ 0x910000 ^ ((v105 << 8) ^ 0x35660000) & v105)))) >> 4;
  v108 = v97
       + 740160656
       + (((v107 ^ 0x4BCE6E5C) + 2005079789) ^ ((v107 ^ 0x77464168) + 1259026905) ^ ((v107 ^ 0x33551CA5) + 253256726));
  v109 = (v108 ^ 0xC865EDFE) & (2 * (v108 & 0xD261CDFF)) ^ v108 & 0xD261CDFF;
  v110 = ((2 * (v108 ^ 0x6864F6F8)) ^ 0x740A760E) & (v108 ^ 0x6864F6F8) ^ (2 * (v108 ^ 0x6864F6F8)) & 0xBA053B06;
  v111 = v110 ^ 0x8A050901;
  v112 = (v110 ^ 0x10003205) & (4 * v109) ^ v109;
  v113 = ((4 * v111) ^ 0xE814EC1C) & v111 ^ (4 * v111) & 0xBA053B04;
  v114 = (v113 ^ 0xA8042803) & (16 * v112) ^ v112;
  v115 = ((16 * (v113 ^ 0x12011303)) ^ 0xA053B070) & (v113 ^ 0x12011303) ^ (16 * (v113 ^ 0x12011303)) & 0xBA053B00;
  v116 = v114 ^ 0xBA053B07 ^ (v115 ^ 0xA0013000) & (v114 << 8);
  v117 = v108 ^ (2
               * ((v116 << 16) & 0x3A050000 ^ v116 ^ ((v116 << 16) ^ 0x3B070000) & (((v115 ^ LODWORD(STACK[0x10A8])) << 8) & 0x3A050000 ^ 0x3A040000 ^ (((v115 ^ LODWORD(STACK[0x10A8])) << 8) ^ 0x53B0000) & (v115 ^ LODWORD(STACK[0x10A8]))))) ^ 0x5AD4EF67;
  LODWORD(STACK[0x62B8]) = v117;
  v118 = STACK[0x66E8];
  v119 = (4 * (LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x6980]))) & 0xCEB3B0D8 ^ 0xC4A320D8;
  v120 = (((2 * v119) & 0x980221A0) - v119 + 582410540) ^ 0x251AEB3D;
  v121 = (v120 - ((2 * v120) & 0x2FB885F0) + 400311032) ^ 0xD6D248F9;
  LODWORD(STACK[0x6450]) = v121 + 820836004 - ((2 * v121) & 0x61D9ED48);
  v122 = ((4 * v118) & 0xCEB3B0D8 ^ 0xC4128040)
       + ((4 * v118) & 0x6A1A050 ^ 0x23AD6C37)
       - (((4 * v118) & 0xCEB3B0D8 ^ 0xC4128040) & 0x6A1A050);
  v123 = STACK[0x6530];
  v124 = STACK[0x6960];
  v125 = LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x6530]) ^ LODWORD(STACK[0x6960]);
  LODWORD(STACK[0x6448]) = LODWORD(STACK[0x64C0]) ^ ((v122 & 0x2B5014AE ^ 0x9401088)
                                                   + (v122 ^ 0x263E4D76)
                                                   - ((v122 ^ 0x263E4D76) & 0x2B5014A8));
  v126 = (4 * v123) & 0xCEB3B0D8 ^ LODWORD(STACK[0x6628]) ^ (((4 * (v96 ^ v15 ^ v70)) & 0xCEB3B0D8)
                                                           - ((8 * (v96 ^ v15 ^ v70)) & 0x8674110)
                                                           + 339208845);
  LODWORD(STACK[0x64C0]) = (2 * v91) & 0xF2B90670;
  LODWORD(STACK[0x6430]) = v91 + 2036122430;
  LODWORD(STACK[0x6628]) = v93;
  LODWORD(STACK[0x6438]) = 4 * (v93 ^ v95);
  v127 = (((4 * v117) & 0xCEB3B0D8 ^ 0x6332058) - ((2 * ((4 * v117) & 0xCEB3B0D8 ^ 0x6332058)) & 0x85210000) + 1926532355) ^ 0x5610E002;
  v128 = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x68F0]) ^ 0x95BDB58A;
  v129 = STACK[0x69B0];
  LODWORD(STACK[0x6440]) = v128;
  v130 = (((4 * v125) & 0x4A12B0C8 ^ 0x14434ED) + ((4 * v125) & 0x84A10010 ^ 0x84210001) - 2) & 0xCEB3B0D8 ^ v124 ^ a3 ^ v15 ^ (v70 - ((2 * v70) & 0x8172C4DE) - 1061592465) ^ v96 ^ ((v126 ^ 0x4E931090) - 2 * ((v126 ^ 0x4E931090) & 0x7D6097FC ^ v126 & 0xC) - 44001296);
  v131 = ((2 * ((4 * (v129 ^ v128)) & 0xCEB3B0D8 ^ 0x4C8280C0)) | 0x4A175066)
       - ((4 * (v129 ^ v128)) & 0xCEB3B0D8 ^ 0x4C8280C0)
       - 621520947;
  LODWORD(STACK[0x6418]) = v131 & 0xCAE08418 ^ 0xCAE0041C;
  v132 = (4 * v129) & 0xCEB3B0D8 ^ 0x86B23040;
  v133 = STACK[0xD9B0];
  v134 = *(_QWORD *)(STACK[0xD9B0] + 8 * (0x3DB33C26u % LODWORD(STACK[0x6860])));
  v135 = STACK[0x6870];
  v136 = *(_QWORD *)(STACK[0xD9B0]
                   + 8
                   * (((((v134 ^ 0x51033228EACEFB0BLL) + 0x38B49B57C9195269) ^ ((v134 ^ 0xB0D332275C0C0332)
                                                                                - 0x269B64A7802455AELL) ^ ((v134 ^ 0x736E6E950241EDFLL) + 0x6E814F9673F3B7BDLL))
                     + 0x70AEB0664A324239)
                    % STACK[0x6870]));
  v137 = *(_QWORD *)(STACK[0xD9B0]
                   + 8
                   * (((((v136 ^ 0x2179CD2654F877A5) + 0x4ACF3A33C2FD3CDLL) ^ ((v136 ^ 0xF8246F85D118F969)
                                                                               - 0x220EAEFF4630A2FFLL) ^ ((v136 ^ 0x3FBB44456306682ALL) + 0x1A6E7AC00BD1CC44))
                     + 0x3CCC279CFD7BEEA7)
                    % STACK[0x6870]));
  STACK[0x6A30] = STACK[0xD9B0];
  v138 = *(_QWORD *)(v133
                   + 8
                   * (((((v137 ^ 0x1015BB32B69B27C3) + 0x317E9FE907B0CCADLL) ^ ((v137 ^ 0xC0BBDC86CBA75C7ALL)
                                                                                - 0x1E2F07A2857348EALL) ^ ((v137 ^ 0x364881529BDA9D5FLL) + 0x1723A5892AF17631))
                     + 0x38723DC2CE14C826)
                    % v135));
  LODWORD(STACK[0x68F0]) = v127;
  LODWORD(STACK[0x6860]) = 2 * v127;
  v139 = v131 ^ 0x210BA821;
  v140 = v132 - ((2 * v132) & 0x81262130) + 1642025887;
  LODWORD(v138) = ((((v138 ^ 0xE7AF72B3F02043E2) - 0x33090FAB36F021A8) ^ ((v138 ^ 0x7D14EE38166F45B6)
                                                                            + 0x564D6CDF2F40D804) ^ ((v138 ^ 0x7C5D7A6D00A9E0B2) + 0x5704F88A39867D08))
                 + 0x32409BFE30EBF44BLL)
                % v135;
  LODWORD(STACK[0x6410]) = v140 & 0x5DBA577B ^ LODWORD(STACK[0x10AC]);
  LODWORD(STACK[0x6870]) = v140 ^ 0x446E51BB;
  LODWORD(STACK[0x6380]) = (v140 ^ 0x446E51BB) & 0x5DBA577C;
  LODWORD(STACK[0x6A60]) = ((((v138 - ((2 * v138) & 0xFDD44918) - 18209652) ^ 0x2F4FCD07) + 715504829) ^ (((v138 - ((2 * v138) & 0xFDD44918) - 18209652) ^ 0xC5D150BA) - 1069866750) ^ (((v138 - ((2 * v138) & 0xFDD44918) - 18209652) ^ 0x1474B931) + 295618699))
                         + 78156366;
  v141 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v9) - 12);
  LODWORD(STACK[0x68B0]) = v139;
  LODWORD(STACK[0x69C0]) = v139 & 0xCAE08418;
  LODWORD(STACK[0x6A10]) = v130;
  LODWORD(STACK[0x69F0]) = v130 ^ 0x560EDE6B;
  return v141();
}

uint64_t sub_100B92330@<X0>(unsigned int a1@<W4>, uint64_t a2@<X5>, unsigned int a3@<W6>, unsigned int a4@<W8>)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int v49;

  LODWORD(STACK[0x6A50]) = LODWORD(STACK[0x6A60]) < a1;
  v7 = *(_QWORD *)(STACK[0x6A30]
                 + 8 * ((a4 | ((unint64_t)(a4 < a3) << 32)) + 0x877274FA0D4BC1ALL)
                 - 0x43B93A7D2E780330);
  v8 = 1639 * (LODWORD(STACK[0x6A80]) ^ 0x1B91u);
  STACK[0x6AC0] = v8;
  v9 = (((v7 ^ 0x93A174A1B3E3EDEELL) - 0x3746AB9205AB7FC6) ^ ((v7 ^ 0x700F38543CA49BD2) + 0x2B1718987513F606) ^ ((v8 ^ 0x548AA1369A1B0D9 ^ v7) + 0x5E508ADF2016FD0ELL))
     * v4
     - 0x4CB92235DBEF34EALL;
  v10 = (v9 ^ 0xF2BA6A4A82DF3768) & (2 * (v9 & 0xE4B8835322DFB608)) ^ v9 & 0xE4B8835322DFB608;
  v11 = ((2 * (v9 ^ 0x3ADB6C4CC6F93F68)) ^ 0xBCC7DE3FC84D12C0) & (v9 ^ 0x3ADB6C4CC6F93F68) ^ (2
                                                                                                  * (v9 ^ 0x3ADB6C4CC6F93F68)) & 0xDE63EF1FE4268960;
  v12 = ((4 * (v11 ^ 0x4220210024228920)) ^ 0x798FBC7F909A2580) & (v11 ^ 0x4220210024228920) ^ (4 * (v11 ^ 0x4220210024228920)) & 0xDE63EF1FE4268960;
  v13 = (v12 ^ 0x5803AC1F80020100) & (16 * ((v11 ^ 0x94420E1D80040040) & (4 * v10) ^ v10)) ^ (v11 ^ 0x94420E1D80040040) & (4 * v10) ^ v10;
  v14 = ((16 * (v12 ^ 0x8660430064248860)) ^ 0xE63EF1FE42689600) & (v12 ^ 0x8660430064248860) ^ (16 * (v12 ^ 0x8660430064248860)) & 0xDE63EF1FE4268960;
  v15 = (v14 ^ 0xC622E11E40208000) & (v13 << 8) ^ v13;
  v16 = (((v14 ^ 0x18410E01A4060960) << 8) ^ 0x63EF1FE426896000) & (v14 ^ 0x18410E01A4060960) ^ ((v14 ^ 0x18410E01A4060960) << 8) & 0xDE63EF1FE4268900;
  v17 = v15 ^ 0xDE63EF1FE4268960 ^ (v16 ^ 0x42630F0424000000) & (v15 << 16);
  v18 = v9 ^ (2
            * ((v17 << 32) & 0x5E63EF1F00000000 ^ v17 ^ ((v17 << 32) ^ 0x6426896000000000) & (((v16 ^ 0x9C00E01BC0268960) << 16) & 0x5E63EF1F00000000 ^ 0x10600B1900000000 ^ (((v16 ^ 0x9C00E01BC0268960) << 16) ^ 0x6F1FE42600000000) & (v16 ^ 0x9C00E01BC0268960))));
  v19 = (a4 | ((unint64_t)(a4 < a3) << 32))
      + 0x6047D0533DDF8F2DLL
      + (((v18 ^ a2 ^ 0x45D85DCD9E2BB391) + 0x27DA7FC1B6338B7BLL) ^ ((v18 ^ a2 ^ 0x14547AD3DA25E899)
                                                                     + 0x765658DFF23DD073) ^ ((v18 ^ a2 ^ 0x81B66872AE9CFFC0)
                                                                                              - 0x1C4BB581797B38D4));
  v20 = (v19 ^ 0xED7FA863F25B9753) & (2 * (v19 & 0xED7FC24BFA9B9063)) ^ v19 & 0xED7FC24BFA9B9063;
  v21 = ((2 * (v19 ^ 0xBD4C2CF3365AB795)) ^ 0xA067DD7199824FECLL) & (v19 ^ 0xBD4C2CF3365AB795) ^ (2 * (v19 ^ 0xBD4C2CF3365AB795)) & 0x5033EEB8CCC127F6;
  v22 = v21 ^ 0x5010228844412012;
  v23 = (v21 ^ 0x23083088800384) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0x40CFBAE333049FD8) & v22 ^ (4 * v22) & 0x5033EEB8CCC127F4;
  v25 = ((16 * (v24 ^ 0x10304418CCC12026)) ^ 0x33EEB8CCC127F60) & (v24 ^ 0x10304418CCC12026) ^ (16 * (v24 ^ 0x10304418CCC12026)) & 0x5033EEB8CCC127F0;
  v26 = (v25 ^ 0x32EA88CC002700) & (((v24 ^ 0x4003AAA0000007D0) & (16 * v23) ^ v23) << 8) ^ (v24 ^ 0x4003AAA0000007D0) & (16 * v23) ^ v23;
  v27 = (((v25 ^ 0x5001043000C10096) << 8) ^ 0x33EEB8CCC127F600) & (v25 ^ 0x5001043000C10096) ^ ((v25 ^ 0x5001043000C10096) << 8) & 0x5033EEB8CCC12700;
  v28 = (v19 ^ (2
              * (((v26 ^ 0x5033EEB8CCC127F6 ^ (v27 ^ 0x1022A888C0010000) & (v26 << 16)) << 32) & 0x5033EEB800000000 ^ v26 ^ 0x5033EEB8CCC127F6 ^ (v27 ^ 0x1022A888C0010000) & (v26 << 16) ^ (((v26 ^ 0x5033EEB8CCC127F6 ^ (v27 ^ 0x1022A888C0010000) & (v26 << 16)) << 32) ^ 0x4CC127F600000000) & (((v27 ^ 0x401146300CC001F6) << 16) & 0x5033EEB800000000 ^ 0x1003223800000000 ^ (((v27 ^ 0x401146300CC001F6) << 16) ^ 0x6EB8CCC100000000) & (v27 ^ 0x401146300CC001F6))))) >> 32;
  v29 = v19
      + 0x45AA9218FB7AE86
      + (((v28 ^ 0xABEC30EDED097168) - 0xF92575EBD5D5C20) ^ ((v28 ^ 0x1A05902A9CF7B27ALL) + 0x41840866335C60CELL) ^ ((v28 ^ 0xB1E9A0C7BCE49148) - 0x1597C774ECB0BC00));
  v30 = (v29 ^ 0x8D937A9E403B40EELL) & (2 * (v29 & 0x8DA380DE083260EFLL)) ^ v29 & 0x8DA380DE083260EFLL;
  v31 = ((2 * (v29 ^ 0x8C907B06403B00E2)) ^ 0x267F7B09012C01ALL) & (v29 ^ 0x8C907B06403B00E2) ^ (2 * (v29 ^ 0x8C907B06403B00E2)) & 0x133FBD84809600CLL;
  v32 = ((4 * (v31 ^ 0x110084848092005)) ^ 0x4CFEF6120258034) & (v31 ^ 0x110084848092005) ^ (4
                                                                                                 * (v31 ^ 0x110084848092005)) & 0x133FBD84809600CLL;
  v33 = (v32 ^ 0x3EB4000010000) & (16 * ((v31 ^ 0x2039000000008) & (4 * v30) ^ v30)) ^ (v31 ^ 0x2039000000008) & (4 * v30) ^ v30;
  v34 = ((16 * (v32 ^ 0x130109848086009)) ^ 0x133FBD84809600D0) & (v32 ^ 0x130109848086009) ^ (16 * (v32 ^ 0x130109848086009)) & 0x133FBD848096000;
  v35 = (v34 ^ 0x133B98000000000) & (v33 << 8) ^ v33;
  v36 = (((v34 ^ 0x42584809600DLL) << 8) ^ 0x33FBD84809600D00) & (v34 ^ 0x42584809600DLL) ^ ((v34 ^ 0x42584809600DLL) << 8) & 0x133FBD848096000;
  v37 = v35 ^ 0x133FBD84809600DLL ^ (v36 ^ 0x133D84808000000) & (v35 << 16);
  v38 = (v29 ^ (2
              * ((v37 << 32) & 0x133FBD800000000 ^ v37 ^ ((v37 << 32) ^ 0x4809600D00000000) & (((v36 ^ 0x23904009600DLL) << 16) & 0x133FBD800000000 ^ 0x23B3D000000000 ^ (((v36 ^ 0x23904009600DLL) << 16) ^ 0x7BD8480900000000) & (v36 ^ 0x23904009600DLL))))) >> 16;
  v39 = v29
      - (((v38 ^ 0xA6E2898275C7B47FLL) + 0x5AB7228734BD32D0) ^ ((v38 ^ 0x16C0DE1B7F004937) - 0x156A8AE1C1853078) ^ ((v38 ^ 0xB022D85FBDB96568) + 0x4C77735AFCC3E3D9))
      - 0x76DD36532610900CLL;
  v40 = (v39 ^ 0xE681D3F00216AFCCLL) & (2 * (v39 & 0xD5DBF524470F8CLL)) ^ v39 & 0xD5DBF524470F8CLL;
  v41 = ((2 * (v39 ^ 0xE6A0C6D04210AEC4)) ^ 0xCCEA3A4ACCAF4290) & (v39 ^ 0xE6A0C6D04210AEC4) ^ (2 * (v39 ^ 0xE6A0C6D04210AEC4)) & 0xE6751D256657A148;
  v42 = ((4 * (v41 ^ 0x221505252250A148)) ^ 0x99D47495995E8520) & (v41 ^ 0x221505252250A148) ^ (4 * (v41 ^ 0x221505252250A148)) & 0xE6751D256657A148;
  v43 = (v42 ^ 0x8054140500568100) & (16 * ((v41 ^ 0x460180000040000) & (4 * v40) ^ v40)) ^ (v41 ^ 0x460180000040000) & (4 * v40) ^ v40;
  v44 = ((16 * (v42 ^ 0x6621092066012048)) ^ 0x6751D256657A1480) & (v42 ^ 0x6621092066012048) ^ (16 * (v42 ^ 0x6621092066012048)) & 0xE6751D256657A140;
  v45 = (v44 ^ 0x6651100464520000) & (v43 << 8) ^ v43;
  v46 = (((v44 ^ 0x80240D210205A148) << 8) ^ 0x751D256657A14800) & (v44 ^ 0x80240D210205A148) ^ ((v44 ^ 0x80240D210205A148) << 8) & 0xE6751D256657A100;
  v47 = v45 ^ 0xE6751D256657A148 ^ (v46 ^ 0x6415052446010000) & (v45 << 16);
  v48 = (v39 ^ (2
              * ((v47 << 32) & 0x66751D2500000000 ^ v47 ^ ((v47 << 32) ^ 0x6657A14800000000) & (((v46 ^ 0x826018012056A148) << 16) & 0x66751D2500000000 ^ 0x6250192000000000 ^ (((v46 ^ 0x826018012056A148) << 16) ^ 0x1D25665700000000) & (v46 ^ 0x826018012056A148))))) >> 8;
  LODWORD(v39) = v39
               - (((v48 ^ 0x417906C4) + 1580835124) ^ ((v48 ^ 0x8D472694) - 1845001884) ^ ((v48 ^ 0x73D6C81D)
                                                                                         + 1821798379))
               + 2075409887;
  LODWORD(v48) = ((2 * (v39 ^ 0xC219159B)) ^ 0x164469E6) & (v39 ^ 0xC219159B) ^ (2 * (v39 ^ 0xC219159B)) & 0x8B2234F2;
  LODWORD(v46) = (v39 ^ 0x403B154B) & (2 * (v39 & 0x493B2168)) ^ v39 & 0x493B2168;
  LODWORD(v42) = v48 ^ 0x89221411;
  LODWORD(v48) = (v48 ^ 0xE0) & (4 * v46) ^ v46;
  LODWORD(v46) = ((4 * v42) ^ 0x2C88D3CC) & v42 ^ (4 * v42) & 0x8B2234F0;
  LODWORD(v42) = ((16 * (v46 ^ 0x83222433)) ^ 0xB2234F30) & (v46 ^ 0x83222433) ^ (16 * (v46 ^ 0x83222433)) & 0x8B2234F0;
  LODWORD(v48) = (v42 ^ 0x82220400) & (((v46 ^ 0x80010C0) & (16 * (_DWORD)v48) ^ v48) << 8) ^ (v46 ^ 0x80010C0) & (16 * v48) ^ v48;
  LODWORD(v48) = v5 & (2
                     * (v39 ^ (2
                             * (v48 ^ 0x8B2234F3 ^ ((((v42 ^ 0x90030C3) << 8) ^ 0x2234F300) & (v42 ^ 0x90030C3) ^ ((v42 ^ 0x90030C3) << 8) & 0x8B223400 ^ 0x2200000) & ((_DWORD)v48 << 16))) ^ 0xF20CF0E2)) ^ 0x7006E058;
  LODWORD(STACK[0x6A40]) = -136045517 - (v48 | 0xF7E41C33) + (v48 | 0x81BE3CC);
  if (LODWORD(STACK[0x6A50]) != a4 - 89218245 < 0xFFA8E786)
    v49 = STACK[0x6A50];
  else
    v49 = a4 - 89218245 < LODWORD(STACK[0x6A60]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((16 * v49) | (32 * v49)) ^ LODWORD(STACK[0x6A80])))
                            - 12))();
}

uint64_t sub_100B95D1C()
{
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x6470]) ^ 0xCEE17ECE;
  LODWORD(STACK[0x62A8]) = LODWORD(STACK[0x6430]) - LODWORD(STACK[0x64C0]);
  LODWORD(STACK[0x6298]) = 769323960 - LODWORD(STACK[0x68F0]) + (STACK[0x6860] & 0xA449FA92) + 3838;
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x6418]) + LODWORD(STACK[0x68B0]);
  LODWORD(STACK[0x6290]) = LODWORD(STACK[0x6410]) + LODWORD(STACK[0x6870]) - LODWORD(STACK[0x6380]);
  STACK[0x6A80] = STACK[0xD9B0];
  LODWORD(STACK[0x6A60]) = LODWORD(STACK[0x6A70]) + 1092877077;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]))();
}

uint64_t sub_100B95E58(uint64_t a1, unsigned int a2)
{
  int v2;
  _BOOL4 v3;

  STACK[0x6A50] = (2 * STACK[0x6AC0]) ^ 0x62C;
  if (a2 < 0x125FC40F != (v2 + 1317632729) < 0x5383BF24)
    v3 = a2 < 0x125FC40F;
  else
    v3 = (v2 + 1317632729) < LODWORD(STACK[0x6A60]);
  return (*(uint64_t (**)(BOOL, _QWORD))(STACK[0x6AD8] + 8 * (int)((26017 * !v3) ^ STACK[0x6AC0])))((v2 + 1317632729) < LODWORD(STACK[0x6A60]), LODWORD(STACK[0x6A70]));
}

uint64_t sub_100B98FCC()
{
  uint64_t v0;
  int v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);

  v3 = STACK[0x6A50];
  LODWORD(STACK[0x64C0]) = LODWORD(STACK[0x64B8]) - LODWORD(STACK[0x67C0]);
  LODWORD(STACK[0x6A80]) = v3 - 70;
  LODWORD(STACK[0x6A60]) = ((v3 - 70) ^ 0xCEB3F53C) & LODWORD(STACK[0x6438]);
  LODWORD(STACK[0x6288]) = LODWORD(STACK[0x6A30]) - LODWORD(STACK[0x69C0]);
  v4 = ((v0 - 0x4EB4FFD9173E208ELL) ^ 0x8DE65C2859F651A7) & (2 * ((v0 - 0x4EB4FFD9173E208ELL) & 0xA1C698A81DF41987)) ^ (v0 - 0x4EB4FFD9173E208ELL) & 0xA1C698A81DF41987;
  v5 = ((2 * ((v0 - 0x4EB4FFD9173E208ELL) ^ 0xCFEF4C6849DE40AFLL)) ^ 0xDC53A980A854B250) & ((v0 - 0x4EB4FFD9173E208ELL) ^ 0xCFEF4C6849DE40AFLL) ^ (2 * ((v0 - 0x4EB4FFD9173E208ELL) ^ 0xCFEF4C6849DE40AFLL)) & 0x6E29D4C0542A5928;
  v6 = v5 ^ 0x22285440542A4928;
  v7 = (v5 ^ 0xC00808000000000) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0xB8A7530150A964A0) & v6 ^ (4 * v6) & 0x6E29D4C0542A5928;
  v9 = (v8 ^ 0x2821500050284020) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x460884C004021908)) ^ 0xE29D4C0542A59280) & (v8 ^ 0x460884C004021908) ^ (16 * (v8 ^ 0x460884C004021908)) & 0x6E29D4C0542A5920;
  v11 = (v10 ^ 0x6209440040201000) & (v9 << 8) ^ v9;
  v12 = (((v10 ^ 0xC2090C0140A4928) << 8) ^ 0x29D4C0542A592800) & (v10 ^ 0xC2090C0140A4928) ^ ((v10 ^ 0xC2090C0140A4928) << 8) & 0x6E29D4C0542A5900;
  v13 = v11 ^ 0x6E29D4C0542A5928 ^ (v12 ^ 0x2800C04000080000) & (v11 << 16);
  v14 = ((v0 - 0x4EB4FFD9173E208ELL) ^ (2
                                      * ((v13 << 32) & 0x6E29D4C000000000 ^ v13 ^ ((v13 << 32) ^ 0x542A592800000000) & (((v12 ^ 0x4629148054225128) << 16) & 0x6E29D4C000000000 ^ 0x2A2980C000000000 ^ (((v12 ^ 0x4629148054225128) << 16) ^ 0x54C0542A00000000) & (v12 ^ 0x4629148054225128uLL))))) >> 25;
  v15 = v0
      + 0x2D4D3886BE51ABA9
      + (((v14 ^ 0xACC3D386C78256C6) + 0x56B609640498CF0ELL) ^ ((v14 ^ 0x80A935A1EE6BE5A4) + 0x7ADCEF432D717C70) ^ ((v14 ^ 0x2C6AE65DCB212738) - 0x29E0C340F7C4410CLL));
  v16 = (v15 ^ 0x8A0EA1390491BF3DLL) & (2 * (v15 & 0x2B4E85B026923FBELL)) ^ v15 & 0x2B4E85B026923FBELL;
  v17 = ((2 * (v15 ^ 0x9A93A1190591F96DLL)) ^ 0x63BA495246078DA6) & (v15 ^ 0x9A93A1190591F96DLL) ^ (2 * (v15 ^ 0x9A93A1190591F96DLL)) & 0xB1DD24A92303C6D2;
  v18 = v17 ^ 0x904524A921004251;
  v19 = (v17 ^ 0x2118000002018480) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0xC77492A48C0F1B4CLL) & v18 ^ (4 * v18) & 0xB1DD24A92303C6D0;
  v21 = (v20 ^ 0x815400A000030240) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x308924092300C493)) ^ 0x1DD24A92303C6D30) & (v20 ^ 0x308924092300C493) ^ (16 * (v20 ^ 0x308924092300C493)) & 0xB1DD24A92303C6D0;
  v23 = (v22 ^ 0x11D0008020004400) & (v21 << 8) ^ v21;
  v24 = (((v22 ^ 0xA00D2429030382C3) << 8) ^ 0xDD24A92303C6D300) & (v22 ^ 0xA00D2429030382C3) ^ ((v22 ^ 0xA00D2429030382C3) << 8) & 0xB1DD24A92303C600;
  v25 = v23 ^ 0xB1DD24A92303C6D3 ^ (v24 ^ 0x9104202103020000) & (v23 << 16);
  v26 = (v15 ^ (2
              * ((v25 << 32) & 0x31DD24A900000000 ^ v25 ^ ((v25 << 32) ^ 0x2303C6D300000000) & (((v24 ^ 0x20D90488200104D3) << 16) & 0x31DD24A900000000 ^ 0x115404A800000000 ^ (((v24 ^ 0x20D90488200104D3) << 16) ^ 0x24A9230300000000) & (v24 ^ 0x20D90488200104D3))))) >> 13;
  v27 = v15
      - 0x3B8C4711A049A4BDLL
      + (((v26 ^ 0x2B347E05AAFB6995) + 0x7C0658924FF17014) ^ ((v26 ^ 0x8C12AE06AD3EFFE8) - 0x24DF776EB7CB1991) ^ ((v26 ^ 0xA72687B528C692D0) - 0xFEB5EDD323374A9));
  v28 = (v27 ^ 0x2FA15BDFFC90966ELL) & (2 * (v27 & 0xFA85B9FFCD2C74FLL)) ^ v27 & 0xFA85B9FFCD2C74FLL;
  v29 = ((2 * (v27 ^ 0x24F1CED93CB59EF0)) ^ 0x56B32A8D80CEB37ELL) & (v27 ^ 0x24F1CED93CB59EF0) ^ (2 * (v27 ^ 0x24F1CED93CB59EF0)) & 0x2B599546C06759BELL;
  v30 = v29 ^ 0x2948954240214881;
  v31 = (v29 ^ 0x20100048046113CLL) & (4 * v28) ^ v28;
  v32 = ((4 * v30) ^ 0xAD66551B019D66FCLL) & v30 ^ (4 * v30) & 0x2B599546C06759BCLL;
  v33 = (v32 ^ 0x29401502000540B0) & (16 * v31) ^ v31;
  v34 = ((16 * (v32 ^ 0x2198044C0621903)) ^ 0xB599546C06759BF0) & (v32 ^ 0x2198044C0621903) ^ (16 * (v32 ^ 0x2198044C0621903)) & 0x2B599546C06759B0;
  v35 = (v34 ^ 0x2119144400651900) & (v33 << 8) ^ v33;
  v36 = (((v34 ^ 0xA408102C002400FLL) << 8) ^ 0x599546C06759BF00) & (v34 ^ 0xA408102C002400FLL) ^ ((v34 ^ 0xA408102C002400FLL) << 8) & 0x2B599546C0675900;
  v37 = v35 ^ 0x2B599546C06759BFLL ^ (v36 ^ 0x911044040410000) & (v35 << 16);
  v38 = (v27 ^ (2
              * ((v37 << 32) & 0x2B59954600000000 ^ v37 ^ ((v37 << 32) ^ 0x406759BF00000000) & (((v36 ^ 0x22489106802640BFLL) << 16) & 0x2B59954600000000 ^ 0x2A19150000000000 ^ (((v36 ^ 0x22489106802640BFLL) << 16) ^ 0x1546C06700000000) & (v36 ^ 0x22489106802640BFLL))))) >> 3;
  v39 = v27
      - 0x1CA446D844EE38B9
      + (((v38 ^ 0xD576F1F31CABFE24) - 0x6F908D6716B39EB4) ^ ((v38 ^ 0xFB509D1DF4C54778) - 0x41B6E189FEDD27E8) ^ ((v38 ^ 0x2515468D27ED37DALL) + 0x600CC5E6D20AA8B6));
  v40 = (v39 ^ 0xDE25F064D65ECD9FLL) & (2 * (v39 & 0xDE21F970075CEE1ELL)) ^ v39 & 0xDE21F970075CEE1ELL;
  v41 = ((2 * (v39 ^ 0xDE262264DED68DBFLL)) ^ 0xFB629B314C742) & (v39 ^ 0xDE262264DED68DBFLL) ^ (2
                                                                                                 * (v39 ^ 0xDE262264DED68DBFLL)) & 0x7DB14D98A63A0;
  v42 = v41 ^ 0x4914488A20A1;
  v43 = (v41 ^ 0x7820011004000) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0x1F6C5366298E84) & v42 ^ (4 * v42) & 0x7DB14D98A63A0;
  v45 = (v44 ^ 0x7481040080280) & (16 * v43) ^ v43;
  v46 = ((16 * (v44 ^ 0x930499826121)) ^ 0x7DB14D98A63A10) & (v44 ^ 0x930499826121) ^ (16
                                                                                           * (v44 ^ 0x930499826121)) & 0x7DB14D98A63A0;
  v47 = (v46 ^ 0x5910498822200) & (v45 << 8) ^ v45;
  v48 = (((v46 ^ 0x24A10410841A1) << 8) ^ 0x7DB14D98A63A100) & (v46 ^ 0x24A10410841A1) ^ ((v46 ^ 0x24A10410841A1) << 8) & 0x7DB14D98A6300;
  v49 = v47 ^ 0x7DB14D98A63A1 ^ (v48 ^ 0x3101088020000) & (v47 << 16);
  v50 = v39 ^ (2
             * ((v49 << 32) & 0x7DB1400000000 ^ v49 ^ ((v49 << 32) ^ 0x598A63A100000000) & (((v48 ^ 0x4CB04518842A1) << 16) & 0x7DB1400000000 ^ 0x3021400000000 ^ (((v48 ^ 0x4CB04518842A1) << 16) ^ 0x5B14D98A00000000) & (v48 ^ 0x4CB04518842A1))));
  v51 = ((v50 ^ 0x747993F7F6905FF1) + 0x23683CA95F5250EFLL) ^ ((v50 ^ 0x817E044E1E192CB9) - 0x299054EF4824DC59) ^ ((v50 ^ 0x2B2D5EE05CC15A14) + 0x7C3CF1BEF503550CLL);
  v52 = ((v51 - 0x6E8550BC50152CF2) ^ 0xC810858A592E791FLL) & (2
                                                               * ((v51 - 0x6E8550BC50152CF2) & 0xC8A5152C584E7D9CLL)) ^ (v51 - 0x6E8550BC50152CF2) & 0xC8A5152C584E7D9CLL;
  v53 = ((2 * ((v51 - 0x6E8550BC50152CF2) ^ 0xD8128DCA69B27927)) ^ 0x216F31CC63F80976) & ((v51
                                                                                               - 0x6E8550BC50152CF2) ^ 0xD8128DCA69B27927) ^ (2 * ((v51 - 0x6E8550BC50152CF2) ^ 0xD8128DCA69B27927)) & 0x10B798E631FC04BALL;
  v54 = v53 ^ 0x1090882210040489;
  v55 = (v53 ^ 0x2410C021780030) & (4 * v52) ^ v52;
  v56 = ((4 * v54) ^ 0x42DE6398C7F012ECLL) & v54 ^ (4 * v54) & 0x10B798E631FC04B8;
  v57 = (v56 ^ 0x96008001F000A0) & (16 * v55) ^ v55;
  v58 = ((16 * (v56 ^ 0x10219866300C0413)) ^ 0xB798E631FC04BB0) & (v56 ^ 0x10219866300C0413) ^ (16 * (v56 ^ 0x10219866300C0413)) & 0x10B798E631FC04B0;
  v59 = (v58 ^ 0x31886211C00000) & (v57 << 8) ^ v57;
  v60 = (((v58 ^ 0x10861084203C040BLL) << 8) ^ 0xB798E631FC04BB00) & (v58 ^ 0x10861084203C040BLL) ^ ((v58 ^ 0x10861084203C040BLL) << 8) & 0x10B798E631FC0400;
  v61 = v59 ^ 0x10B798E631FC04BBLL ^ (v60 ^ 0x1090802030040000) & (v59 << 16);
  v62 = v51
      + 0x5A1FC470083950ABLL
      + ((((v51 - 0x6E8550BC50152CF2) ^ (2
                                         * ((v61 << 32) & 0x10B798E600000000 ^ v61 ^ ((v61 << 32) ^ 0x31FC04BB00000000) & (((v60 ^ 0x2718C601F804BBLL) << 16) & 0x10B798E600000000 ^ 0x11880200000000 ^ (((v60 ^ 0x2718C601F804BBLL) << 16) ^ 0x18E631FC00000000) & (v60 ^ 0x2718C601F804BBLL))))) >> 28) ^ 0xFFFFFFF375DDA5BCLL);
  v63 = v62 + (v62 >> 13) + ((v62 + (v62 >> 13)) >> 3);
  v64 = (v63 ^ 0xAD6BE434CF11992CLL)
      - ((v63 ^ 0xAD6BE434CF11992CLL) >> 27)
      + (((v63 ^ 0xAD6BE434CF11992CLL) - ((v63 ^ 0xAD6BE434CF11992CLL) >> 27)) >> 8);
  v65 = v64 - (v64 >> 6);
  v66 = v65
      + 0x22F9489AAA5E0C0DLL
      + ((v65 + 0x22F9489AAA5E0C0DLL) >> 29)
      + ((v65 + 0x22F9489AAA5E0C0DLL + ((v65 + 0x22F9489AAA5E0C0DLL) >> 29)) >> 8)
      + ((v65
        + 0x22F9489AAA5E0C0DLL
        + ((v65 + 0x22F9489AAA5E0C0DLL) >> 29)
        + ((v65 + 0x22F9489AAA5E0C0DLL + ((v65 + 0x22F9489AAA5E0C0DLL) >> 29)) >> 8)) >> 1);
  v67 = (v66 ^ 0x1B227D3C8113F030)
      + ((v66 ^ 0x1B227D3C8113F030) >> 30)
      + (((v66 ^ 0x1B227D3C8113F030) + ((v66 ^ 0x1B227D3C8113F030) >> 30)) >> 12);
  v68 = v67
      + (v67 >> 8)
      + 0x65AD4840611DB993
      + ((v67 + (v67 >> 8) + 0x65AD4840611DB993) >> 31)
      + ((v67 + (v67 >> 8) + 0x65AD4840611DB993 + ((v67 + (v67 >> 8) + 0x65AD4840611DB993) >> 31)) >> 14);
  v69 = v68 - (v68 >> 2);
  v70 = v69
      + 0x567FE64507F0763FLL
      - ((v69 + 0x567FE64507F0763FLL) >> 27)
      + ((v69 + 0x567FE64507F0763FLL - ((v69 + 0x567FE64507F0763FLL) >> 27)) >> 11);
  v71 = ((2 * (v70 - (v70 >> 3))) & 0xFFAF7C3FFEFEFE5ELL) + ((v70 - (v70 >> 3)) ^ 0xFFD7BE1FFF7F7F2FLL);
  v72 = v71
      - 0x3933042B52A83047
      + ((v71 - 0x3933042B52A83047) >> 31)
      + ((v71 - 0x3933042B52A83047 + ((v71 - 0x3933042B52A83047) >> 31)) >> 8);
  v73 = v72
      + (v72 >> 5)
      - 0x72043B41836511A5
      - ((v72 + (v72 >> 5) - 0x72043B41836511A5) >> 28)
      + ((v72 + (v72 >> 5) - 0x72043B41836511A5 - ((v72 + (v72 >> 5) - 0x72043B41836511A5) >> 28)) >> 13);
  LODWORD(v73) = (v73 >> 3) + v73 - ((2 * ((v73 >> 3) + v73)) & 0x1EA5C536) - 1890393445;
  v74 = STACK[0x6AB0];
  LODWORD(v64) = v1 ^ (v65 - ((2 * v65) & 0xFDE85C88) + 2129931844) ^ (((2 * v65) & 0x80160820 ^ 0x80BA0021 | (2 * v65) & 0x4501F008)
                                                                     - 1) ^ v2 & (2 * v69) ^ v69;
  v75 = *(_BYTE *)(v74 + ((*(_BYTE *)(v74 + 14) + 1) & 0xF));
  LODWORD(STACK[0x6AC0]) = v64 ^ 0xC23325E6 ^ (((2 * v73) & v2 ^ 0x161EC139)
                                             + ((2 * v73) & 0xC0022008 ^ 0xC0A02086)
                                             - (((2 * v73) & v2 ^ 0x161EC139) & 0xC00A2019)) ^ v73;
  if (((*(_BYTE *)(v74 + ((*(_BYTE *)(v74 + ((v75 + 10) & 0xF)) + 5) & 0xF)) + 5) & 0xE) != 0)
    v76 = (*(_BYTE *)(v74 + ((*(_BYTE *)(v74 + ((v75 + 10) & 0xF)) + 5) & 0xF)) + 5) & 0xF;
  else
    v76 = 1;
  v77 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v3) - 4);
  STACK[0x6A70] = v76 - 1;
  return v77(0xFFFFFFFFLL);
}

uint64_t sub_100B9A204(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;

  v8 = STACK[0x6A80];
  v9 = *(unsigned __int8 *)(a7 + a4) * (LODWORD(STACK[0x6A80]) - 1112169579) + 346696700;
  v10 = (v9 ^ 0xEB45D2C4) & (2 * (v9 & 0xEB55D404)) ^ v9 & 0xEB55D404;
  v11 = ((2 * (v9 ^ 0xBFCE7ACC)) ^ 0xA9375D90) & (v9 ^ 0xBFCE7ACC) ^ (2 * (v9 ^ 0xBFCE7ACC)) & 0x549BAEC8;
  v12 = ((4 * (v11 ^ 0x5488A248)) ^ 0x526EBB20) & (v11 ^ 0x5488A248) ^ (4 * (v11 ^ 0x5488A248)) & 0x549BAEC8;
  v13 = (v12 ^ 0x500AAA00) & (16 * ((v11 ^ 0x130248) & (4 * v10) ^ v10)) ^ (v11 ^ 0x130248) & (4 * v10) ^ v10;
  v14 = ((16 * (v12 ^ 0x49104C8)) ^ 0x49BAEC80) & (v12 ^ 0x49104C8) ^ (16 * (v12 ^ 0x49104C8)) & 0x549BAEC0;
  v15 = v13 ^ 0x549BAEC8 ^ (v14 ^ 0x409AAC00) & (v13 << 8);
  v16 = v9 ^ (2
            * ((v15 << 16) & 0x549B0000 ^ v15 ^ ((v15 << 16) ^ 0x2EC80000) & (((v14 ^ 0x14010248) << 8) & 0x549B0000 ^ 0x44110000 ^ (((v14 ^ 0x14010248) << 8) ^ 0x1BAE0000) & (v14 ^ 0x14010248))));
  v17 = (v7 - ((2 * v7) & 0x87123A5C) - 1014424274) ^ 0x88FB94BA ^ v16;
  v18 = a4 + v17 + ((v17 + a4) >> 16) - ((v17 + (_DWORD)a4 + ((v17 + a4) >> 16)) >> 8);
  v19 = ((2 * v18) & 0xFEEFFDF8) + (v18 ^ 0x7F77FEFC) - 2130936944;
  v20 = (v19 ^ 0xB009297A) & (2 * (v19 & 0xB5100A70)) ^ v19 & 0xB5100A70;
  v21 = ((2 * (v19 ^ 0xD0292D7A)) ^ 0xCA724E14) & (v19 ^ 0xD0292D7A) ^ (2 * (v19 ^ 0xD0292D7A)) & 0x6539270A;
  v22 = (v21 ^ 0x4109020A) & (4 * v20) ^ v20;
  v23 = ((4 * (v21 ^ 0x2509210A)) ^ 0x94E49C28) & (v21 ^ 0x2509210A) ^ (4 * (v21 ^ 0x2509210A)) & 0x65392708;
  v24 = (v23 ^ 0x4200402) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x61192302)) ^ 0x539270A0) & (v23 ^ 0x61192302) ^ (16 * (v23 ^ 0x61192302)) & 0x65392700;
  v26 = v24 ^ 0x6539270A ^ (v25 ^ 0x4110200A) & (v24 << 8);
  v27 = v19 ^ 0x85A1A4FB ^ (2
                          * ((v26 << 16) & 0x65390000 ^ v26 ^ ((v26 << 16) ^ 0x270A0000) & (((v25 ^ 0x2429070A) << 8) & 0x65390000 ^ 0x44180000 ^ (((v25 ^ 0x2429070A) << 8) ^ 0x39270000) & (v25 ^ 0x2429070A))));
  v28 = v16 ^ 0xFBA1690B ^ v27;
  v29 = v28 + a4 + 1764383100 + ((v28 + a4) >> 16);
  v30 = (v29 ^ 0x4695B654) & (2 * (v29 & 0x96D5A684)) ^ v29 & 0x96D5A684;
  v31 = ((2 * (v29 ^ 0x6AB7BF5C)) ^ 0xF8C433B0) & (v29 ^ 0x6AB7BF5C) ^ (2 * (v29 ^ 0x6AB7BF5C)) & 0xFC6219D8;
  v32 = v31 ^ 0x4220848;
  v33 = (v31 ^ 0xF8401058) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0xF1886760) & v32 ^ (4 * v32) & 0xFC6219D8;
  v35 = (v34 ^ LODWORD(STACK[0x30A4])) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0xC621898)) ^ 0xC6219D80) & (v34 ^ 0xC621898) ^ (16 * (v34 ^ 0xC621898)) & 0xFC6219D0;
  v37 = v35 ^ 0xFC6219D8 ^ (v36 ^ 0xC4201958) & (v35 << 8);
  v38 = (v29 ^ (2
              * ((v37 << 16) & 0x7C620000 ^ v37 ^ ((v37 << 16) ^ 0x19D80000) & (((v36 ^ 0x38420058) << 8) & 0x7C620000 ^ 0x1C620000 ^ (((v36 ^ 0x38420058) << 8) ^ 0x62190000) & (v36 ^ 0x38420058))))) >> 8;
  v39 = a4
      + 88135411
      + v28
      + ((v28 + a4) >> 16)
      - (((v38 ^ 0xC4AD7346) + 1687162440) ^ ((v38 ^ 0x923B59B2) + 839263412) ^ ((v38 ^ 0x56C8BB61) - 151665055));
  v40 = (v39 ^ 0xD22301B0) & (2 * (v39 & 0x9B2315A2)) ^ v39 & 0x9B2315A2;
  v41 = ((2 * (v39 ^ 0xE02103F4)) ^ 0xF6042CAC) & (v39 ^ 0xE02103F4) ^ (2 * (v39 ^ 0xE02103F4)) & 0x7B021656;
  v42 = v41 ^ 0x9021252;
  v43 = (v41 ^ 0x70020442) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0xEC085958) & v42 ^ (4 * v42) & 0x7B021654;
  v45 = v44 ^ 0x13020606;
  v46 = (v44 ^ 0x68001040) & (16 * v43) ^ v43;
  v47 = ((16 * v45) ^ 0xB0216560) & v45 ^ (16 * v45) & 0x7B021650;
  v48 = v39 ^ (2
             * (((v46 ^ 0x7B021656 ^ (v47 ^ 0x30000416) & (v46 << 8)) << 16) & 0x7B020000 ^ v46 ^ 0x7B021656 ^ (v47 ^ 0x30000416) & (v46 << 8) ^ (((v46 ^ 0x7B021656 ^ (v47 ^ 0x30000416) & (v46 << 8)) << 16) ^ 0x16560000) & (((v47 ^ 0x4B021216) << 8) & 0x7B020000 ^ 0x79000000 ^ (((v47 ^ 0x4B021216) << 8) ^ 0x2160000) & (v47 ^ 0x4B021216))));
  v49 = (((v48 ^ 0xA68D8A10) + 1099302816) ^ ((v48 ^ 0x56E29BF6) - 1310124422) ^ ((v48 ^ 0xB94C28E8) + 1581753704))
      + 1405274475;
  v50 = (v49 ^ 0xA3DCF72E) & (2 * (v49 & 0xB399070F)) ^ v49 & 0xB399070F;
  v51 = ((2 * (v49 ^ 0x80CEF524)) ^ 0x66AFE456) & (v49 ^ 0x80CEF524) ^ (2 * (v49 ^ 0x80CEF524)) & 0x3357F22A;
  v52 = ((4 * (v51 ^ 0x11501229)) ^ 0xCD5FC8AC) & (v51 ^ 0x11501229) ^ (4 * (v51 ^ 0x11501229)) & 0x3357F228;
  v53 = (v52 ^ 0x157C023) & (16 * ((v51 ^ 0x2042000) & (4 * v50) ^ v50)) ^ (v51 ^ 0x2042000) & (4 * v50) ^ v50;
  v54 = ((16 * (v52 ^ 0x32003203)) ^ 0x357F22B0) & (v52 ^ 0x32003203) ^ (16 * (v52 ^ 0x32003203)) & 0x3357F220;
  v55 = v53 ^ 0x3357F22B ^ (v54 ^ 0x31572200) & (v53 << 8);
  v56 = v49 ^ (2
             * ((v55 << 16) & 0x33570000 ^ v55 ^ ((v55 << 16) ^ 0x722B0000) & (((v54 ^ 0x200D00B) << 8) & 0x33570000 ^ 0x20050000 ^ (((v54 ^ 0x200D00B) << 8) ^ 0x57F20000) & (v54 ^ 0x200D00B))));
  v57 = v56 ^ 0xFA668C31;
  v58 = ((2 * v56) ^ 0xC8E6D3DF) & 0xCDCFFDEA ^ 0x82B39107 ^ (1976331192
                                                            - (((2 * v56) ^ 0xC8E6D3DF) & 0x8100442 | 0x75CC6BB8)
                                                            + (((2 * v56) ^ 0xC8E6D3DF) & 0xC80180 | 0x8A339447));
  v59 = v16 ^ 0x24E6FC ^ v56 ^ 0xFA668C31;
  v60 = a4 - 1249606404 + v59 - ((v59 + (_DWORD)a4 + ((v59 + a4) >> 16)) >> 8);
  LODWORD(STACK[0x6AC0]) ^= v27 ^ (2 * v27) & 0xC517F828 ^ v57 ^ (v60 + ((v59 + a4) >> 16)) ^ (v58 - ((2 * v58) & 0x67A0B03A) - 1278191587) ^ 0x15DAE0D7 ^ (((2 * ((2 * (v60 + ((v59 + a4) >> 16))) & 0xC517F828 ^ 0x80440090)) & 0x82283020) - ((2 * (v60 + ((v59 + a4) >> 16))) & 0xC517F828 ^ 0x80440090) + 340517613);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((974 * (STACK[0x6A70] != a4)) ^ v8)) - 4))((a1 + 1));
}

uint64_t sub_100B9B13C(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v3;
  uint64_t v4;

  v3 = (a3 - 8248);
  LODWORD(STACK[0x64B8]) = LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x6A20]) ^ STACK[0x69E0] ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6A60]);
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * a3);
  STACK[0x6A70] = v3;
  return ((uint64_t (*)(void))(v4 - (v3 ^ 0x1C)))();
}

uint64_t sub_100B9B208@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unint64_t v62;
  unsigned int v63;
  int v64;

  v3 = STACK[0x6A70] - 8;
  v4 = -1400134691 - 1112151687 * *(unsigned __int8 *)(STACK[0x6AB0] + v1);
  LODWORD(STACK[0x6A80]) = v3 | 0x4E73;
  v5 = (v4 ^ ((v3 | 0x4E73) + 57740936)) & (2 * (v4 & 0x53745C23)) ^ v4 & 0x53745C23;
  v6 = ((2 * (v4 ^ 0xA5397541)) ^ 0xEC9A52C4) & (v4 ^ 0xA5397541) ^ (2 * (v4 ^ 0xA5397541)) & 0xF64D2962;
  v7 = ((4 * (v6 ^ 0x12452922)) ^ 0xD934A588) & (v6 ^ 0x12452922) ^ (4 * (v6 ^ 0x12452922)) & 0xF64D2960;
  v8 = (v7 ^ 0xD0042102) & (16 * ((v6 ^ 0xC4040822) & (4 * v5) ^ v5)) ^ (v6 ^ 0xC4040822) & (4 * v5) ^ v5;
  v9 = ((16 * (v7 ^ 0x26490862)) ^ 0x64D29620) & (v7 ^ 0x26490862) ^ (16 * (v7 ^ 0x26490862)) & 0xF64D2960;
  v10 = ((v8 ^ 0xF64D2962 ^ (v9 ^ LODWORD(STACK[0x30B4])) & (v8 << 8)) << 16) & 0x764D0000 ^ v8 ^ 0xF64D2962 ^ (v9 ^ LODWORD(STACK[0x30B4])) & (v8 << 8) ^ (((v8 ^ 0xF64D2962 ^ (v9 ^ LODWORD(STACK[0x30B4])) & (v8 << 8)) << 16) ^ 0x29620000) & (((v9 ^ 0x920D2942) << 8) & 0x764D0000 ^ 0x32440000 ^ (((v9 ^ 0x920D2942) << 8) ^ 0x4D290000) & (v9 ^ 0x920D2942));
  v11 = a1 - ((2 * a1) & 0x5C5A500C) + 774711302;
  v12 = v4 ^ (2 * v10);
  v13 = (v11 ^ 0xD14326E1 ^ v12) + v1 + (((v11 ^ 0xD14326E1 ^ v12) + v1) >> 16);
  v14 = ((2 * (v13 - (v13 >> 8))) & 0xAFF7EDFE) + ((v13 - (v13 >> 8)) ^ 0x57FBF6FF);
  v15 = v14 - 84426900;
  v16 = (2 * ((v14 - 84426900) & 0xAD0C4995)) & ((v14 - 84426900) ^ 0x8CC96D05) ^ (v14 - 84426900) & 0xAD0C4995;
  v17 = ((2 * ((v14 - 84426900) ^ 0xC4D9ED05)) ^ 0xD3AB4920) & ((v14 - 84426900) ^ 0xC4D9ED05) ^ (2
                                                                                                * ((v14 - 84426900) ^ 0xC4D9ED05)) & 0x69D5A490;
  v18 = v17 ^ 0x2854A490;
  v19 = (v17 ^ 0x40058000) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0xA7569240) & v18 ^ (4 * v18) & 0x69D5A490;
  v21 = (v20 ^ 0x21548000) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x48812490)) ^ LODWORD(STACK[0x30B8])) & (v20 ^ 0x48812490) ^ (16 * (v20 ^ 0x48812490)) & 0x69D5A490;
  v23 = v21 ^ 0x69D5A490 ^ (v22 ^ 0x9500000) & (v21 << 8);
  v14 += 57670355;
  v24 = (4
       * ((v23 << 16) & 0x21450000 ^ v23 ^ ((v23 << 16) ^ 0x24900000) & (((v22 ^ 0x6085A490) << 8) & 0x29D50000 ^ 0x28510000 ^ (((v22 ^ 0x6085A490) << 8) ^ 0x15A40000) & (v22 ^ 0x6085A490)))) ^ (2 * v15);
  v25 = (v14 ^ 0x119E8B23) & (2 * (v14 & 0x5A18932A)) ^ v14 & 0x5A18932A;
  v26 = v24 & 0x1116800;
  v27 = ((2 * (v14 ^ 0xB5BEAD23)) ^ 0xDF4C7C12) & (v14 ^ 0xB5BEAD23) ^ (2 * (v14 ^ 0xB5BEAD23)) & 0xEFA63E08;
  v28 = v24 & 0xC4069028 ^ 0xA84A022D;
  v29 = ((4 * (v27 ^ 0x20A20209)) ^ 0xBE98F824) & (v27 ^ 0x20A20209) ^ (4 * (v27 ^ 0x20A20209)) & 0xEFA63E08;
  v30 = v28 + v26;
  v31 = (v29 ^ 0xAE803800) & (16 * ((v27 ^ 0xC8041E01) & (4 * v25) ^ v25)) ^ (v27 ^ 0xC8041E01) & (4 * v25) ^ v25;
  v32 = ((16 * (v29 ^ LODWORD(STACK[0x30BC]))) ^ 0xFA63E090) & (v29 ^ LODWORD(STACK[0x30BC])) ^ (16
                                                                                               * (v29 ^ LODWORD(STACK[0x30BC]))) & 0xEFA63E00;
  v33 = v31 ^ 0xEFA63E09 ^ (v32 ^ 0xEA222000) & (v31 << 8);
  v34 = v14 ^ (2
             * ((v33 << 16) & 0x6FA60000 ^ v33 ^ ((v33 << 16) ^ 0x3E090000) & (((v32 ^ 0x5841E09) << 8) & 0x6FA60000 ^ 0x49800000 ^ (((v32 ^ 0x5841E09) << 8) ^ 0xA63E0000) & (v32 ^ 0x5841E09)))) ^ 0xEE66B262;
  LODWORD(STACK[0x6A60]) = ((v30 - 1) & 0x1071808 ^ 0x10C3048B) + ((v30 - 1) & 0xC410E020 ^ 0xC4182021);
  v35 = (-2036313184 - (v2 & (2 * v34) ^ 0x4113B828) + ((2 * (v2 & (2 * v34) ^ 0x4113B828)) | 0xF2BF435E) + 2737) ^ 0x7F96A167;
  v36 = (v12 ^ 0xC85C53BD ^ v34) + v1 + (((v12 ^ 0xC85C53BD ^ v34) + v1) >> 16);
  v37 = (v36 + 1016125767) ^ 0x3CE11C6;
  v38 = ((v36 + 1016125767) ^ 0x834E14B4) & (2 * ((v36 + 1016125767) & 0xC36F26B9)) ^ (v36 + 1016125767) & 0xC36F26B9;
  v39 = ((2 * v37) ^ 0x81426EFE) & v37;
  v40 = (2 * v37) & 0xC0A1377E;
  v41 = -1274461342 - (v35 | 0xB4094362) + (v35 | 0x4BF6BC9D);
  v42 = (v39 ^ v40 ^ 0x4000266D) & (4 * v38) ^ v38;
  v43 = ((4 * (v39 ^ v40 ^ 0x40A11101)) ^ 0x284DDFC) & (v39 ^ v40 ^ 0x40A11101) ^ (4 * (v39 ^ v40 ^ 0x40A11101)) & 0xC0A1377C;
  v44 = (v43 ^ 0x801573) & (16 * v42) ^ v42;
  v45 = ((16 * (v43 ^ 0xC0212203)) ^ 0xA1377F0) & (v43 ^ 0xC0212203) ^ (16 * (v43 ^ 0xC0212203)) & 0xC0A13770;
  v46 = v44 ^ 0xC0A1377F ^ (v45 ^ 0x1370F) & (v44 << 8);
  v47 = ((v36 + 1016125767) ^ (2
                             * ((v46 << 16) & 0x40A10000 ^ v46 ^ ((v46 << 16) ^ 0x377F0000) & (((v45 ^ 0xC0A0000F) << 8) & 0x40A10000 ^ 0x40800000 ^ (((v45 ^ 0xC0A0000F) << 8) ^ 0xA1370000) & (v45 ^ 0xC0A0000F))))) >> 8;
  v48 = v36
      - (((v47 ^ 0xDD464970) + 2127137336) ^ ((v47 ^ LODWORD(STACK[0x30C0])) - 2116384951) ^ ((v47 ^ 0xFF516237)
                                                                                            + 1558094193))
      - 12642486;
  v49 = (v48 ^ 0x181AD988) & (2 * (v48 & 0x5A1319C2)) ^ v48 & 0x5A1319C2;
  v50 = ((2 * (v48 ^ 0xC3AF98C)) ^ 0xAC53C09C) & (v48 ^ 0xC3AF98C) ^ (2 * (v48 ^ 0xC3AF98C)) & 0x5629E04E;
  v51 = (v50 ^ 0x220C04A) & (4 * v49) ^ v49;
  v52 = ((4 * (v50 ^ 0x52282042)) ^ 0x58A78138) & (v50 ^ 0x52282042) ^ (4 * (v50 ^ 0x52282042)) & 0x5629E04C;
  v53 = (v52 ^ 0x50218006) & (16 * v51) ^ v51;
  v54 = ((16 * (v52 ^ 0x6086046)) ^ 0x629E04E0) & (v52 ^ 0x6086046) ^ (16 * (v52 ^ 0x6086046)) & 0x5629E040;
  v55 = v53 ^ 0x5629E04E ^ (v54 ^ 0x4208000E) & (v53 << 8);
  v56 = v48 ^ 0x63A9D57E ^ (2
                          * ((v55 << 16) & 0x56290000 ^ v55 ^ ((v55 << 16) ^ 0x604E0000) & (((v54 ^ 0x1421E00E) << 8) & 0x56290000 ^ 0x56090000 ^ (((v54 ^ 0x1421E00E) << 8) ^ 0x29E00000) & (v54 ^ 0x1421E00E))));
  v57 = (((2 * v56) & 0xC517F828 ^ 0xC5102800)
       + ((2 * v56) & 0xC5062800 ^ 0x32860587)
       - (((2 * v56) & 0xC517F828 ^ 0xC5102800) & 0xC5062800)) ^ 0xF3060C84;
  v58 = (v12 ^ 0xEA9702C7 ^ v56) + v1 + (((v12 ^ 0xEA9702C7 ^ v56) + v1) >> 16);
  v59 = v58 - (v58 >> 8) - 1249606404;
  v60 = (2 * v59) ^ 0x509EB5AF;
  v61 = LODWORD(STACK[0x6AC0]) ^ v34 ^ v41 ^ v56 ^ v59 ^ (1870852295 - (v57 | 0x6F82F0C7) + (v57 | 0x907D0F38)) ^ v60 & 0xC7E2F473;
  v62 = STACK[0x6A70];
  v63 = (~(v60 & 0x2F50C5B) | 0xC08087FE) + (v60 & 0x2F50C5B | LODWORD(STACK[0x30CC]));
  v64 = (4 * (((v1 + 1 - STACK[0x6A70]) | (STACK[0x6A70] - (v1 + 1))) >> 63)) | (8
                                                                               * (((v1 + 1 - STACK[0x6A70]) | (STACK[0x6A70] - (v1 + 1))) >> 63));
  LODWORD(STACK[0x6AC0]) = v61 ^ 0xBA8AC4CA ^ (-2 - v63);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v62 ^ 0x2054 ^ v64)) - 12))();
}

uint64_t sub_100B9C1D4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;

  LODWORD(STACK[0x6A70]) = v1;
  v4 = v0
     + 857204639
     + ((v0 + 857204639) >> 13)
     + ((v0 + 857204639 + ((v0 + 857204639) >> 13)) >> 1);
  v5 = v4 - ((2 * v4) & 0x62DCF7EE) - 1318159369;
  v6 = (v5 ^ 0x29A5AC7A) + ((v5 ^ 0x29A5AC7Au) >> 10) - (((v5 ^ 0x29A5AC7A) + ((v5 ^ 0x29A5AC7Au) >> 10)) >> 3);
  v7 = v6 + ((v6 + 839906387) >> 8) - 1583477505;
  v8 = (v7 ^ 0x4669E740) & (2 * (v7 & 0x9071E754)) ^ v7 & 0x9071E754;
  v9 = ((2 * (v7 ^ 0x66A96348)) ^ 0xEDB10838) & (v7 ^ 0x66A96348) ^ (2 * (v7 ^ 0x66A96348)) & 0xF6D8841C;
  v10 = v9 ^ 0x12488404;
  v11 = (v9 ^ 0xC0800010) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0xDB621070) & v10 ^ (4 * v10) & 0xF6D8841C;
  v13 = (v12 ^ 0xD2400000) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x2498840C)) ^ 0x6D8841C0) & (v12 ^ 0x2498840C) ^ (16 * (v12 ^ 0x2498840C)) & 0xF6D88410;
  v15 = v13 ^ 0xF6D8841C ^ (v14 ^ 0x6488001C) & (v13 << 8);
  v16 = (v7 ^ (2
             * ((v15 << 16) & 0x76D80000 ^ v15 ^ ((v15 << 16) ^ 0x41C0000) & (((v14 ^ 0x9250841C) << 8) & 0xF6D80000 ^ 0x26580000 ^ (((v14 ^ 0x9250841C) << 8) ^ 0x58840000) & (v14 ^ 0x9250841C))))) >> 4;
  v17 = v6
      + ((v6 + 839906387) >> 8)
      + 1742159441
      + (((v16 ^ 0xDB158D8B) - 1364977534) ^ ((v16 ^ 0x44E1941E) + 827326741) ^ ((v16 ^ 0x98AB1763) - 317029782));
  v18 = ((2 * (v17 & 0x574A1A05)) & 0x102002 | v17 & 0x574A1A05) ^ (2 * (v17 & 0x574A1A05)) & (v17 ^ 0x4651B166);
  v19 = ((2 * (v17 ^ 0x4651B166)) ^ 0x223756C6) & (v17 ^ 0x4651B166) ^ (2 * (v17 ^ 0x4651B166)) & 0x111BAB62;
  v20 = v19 ^ 0x1108A921;
  v21 = (v19 ^ 0x100101) & (4 * v18) ^ v18;
  v22 = ((4 * v20) ^ 0x446EAD8C) & v20 ^ (4 * v20) & 0x111BAB60;
  v23 = (v22 ^ 0xAA903) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x11110263)) ^ 0x11BAB630) & (v22 ^ 0x11110263) ^ (16 * (v22 ^ 0x11110263)) & 0x111BAB60;
  v25 = v23 ^ 0x111BAB63 ^ (v24 ^ 0x111AA200) & (v23 << 8);
  v26 = v17 ^ (2
             * ((v25 << 16) & 0x111B0000 ^ v25 ^ ((v25 << 16) ^ 0x2B630000) & (((v24 ^ 0x10943) << 8) & 0x111B0000 ^ (((v24 ^ 0x10943) << 8) ^ 0x1BAB0000) & (v24 ^ 0x10943) ^ 0x100000)));
  v27 = v26 ^ 0x63CBB388;
  v28 = (v26 ^ 0x4EA8E30E) + ((v26 >> 14) ^ 0xFFFEC55C) + 1;
  v29 = v28 + (v28 >> 4) + 1139265411 - ((2 * (v28 + (v28 >> 4))) & 0x87CFAD90) + 1861;
  v30 = (v29 ^ 0x8C73FCE0) + ((v29 >> 15) ^ 0xFFFEE718) + 1;
  v31 = v30 - (v30 >> 4);
  v32 = v31 - 1630131289 + ((v31 - 1630131289) >> 14) - ((v31 - 1630131289 + ((v31 - 1630131289) >> 14)) >> 7);
  v33 = v32 - 395723886 - ((2 * v32) & 0xD0D37DE6) + 865;
  v34 = (v33 ^ 0x89545884) - ((v33 ^ 0x89545884) >> 13) + (((v33 ^ 0x89545884) - ((v33 ^ 0x89545884) >> 13)) >> 4);
  v35 = v34 - 1409918967 + ((v34 - 1409918967) >> 10) - ((v34 - 1409918967 + ((v34 - 1409918967) >> 10)) >> 1);
  v36 = (v35 ^ 0xC7F51B4A) - ((v35 ^ 0xC7F51B4A) >> 8) + (((v35 ^ 0xC7F51B4A) - ((v35 ^ 0xC7F51B4A) >> 8)) >> 4);
  v37 = v36 - ((2 * v36) & 0x90FC439A) - 931257907;
  v38 = (2 * (v33 ^ v27 ^ v37)) ^ 0x97F0EC7A;
  v39 = v3 & (2 * (LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6930]))) ^ 0x84045820;
  v40 = ((v39 | 0xCA0BEDF5) - (v39 | 0x35F4120A) + 905187850) ^ 0xAC2BEAF8;
  v41 = v3 & (2 * (LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x6730]))) ^ LODWORD(STACK[0x10B0]);
  v42 = ((v3 & (2 * (v31 ^ v6 ^ v35))) + 1457814124 - ((4 * (v31 ^ v6 ^ v35)) & 0x8808F050)) ^ LODWORD(STACK[0x6630]);
  v43 = ((v3 & (2 * LODWORD(STACK[0x6920])) ^ 0xC404F828)
       + 889953100
       + (LODWORD(STACK[0x10B4]) | ~(2 * (v3 & (2 * LODWORD(STACK[0x6920])) ^ 0xC404F828)))
       + 1) ^ LODWORD(STACK[0x6960]) ^ (v41 - ((2 * v41) & 0x192000) - 2111006973) ^ v2;
  LODWORD(STACK[0x6280]) = 2 * LODWORD(STACK[0x6A00]);
  LODWORD(STACK[0x6A60]) = v5;
  LODWORD(STACK[0x6A50]) = v29;
  LODWORD(STACK[0x6A30]) = v3 & (2 * (v29 ^ v5 ^ v34));
  LODWORD(STACK[0x6A20]) = (v40 | 0xC47B195C) - (v40 | 0x3B84E6A3) + 998565539;
  v44 = v43 ^ v6 ^ v31 ^ v35 ^ (v42 - ((2 * v42) & 0x19A859D8) + 215231724);
  v45 = STACK[0x66F8];
  v46 = STACK[0x6440];
  LODWORD(STACK[0x6A00]) = v3 & (2 * LODWORD(STACK[0x6940]));
  v47 = LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x67E0]);
  LODWORD(STACK[0x69E0]) = (2 * v34) & 0xF438D918;
  LODWORD(STACK[0x69D0]) = v34 - 98800500;
  LODWORD(STACK[0x6438]) = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x6850]) ^ v47 ^ v46 ^ LODWORD(STACK[0x67D0]) ^ (616964900 - (v3 & (2 * v45) ^ 0xF60C210C) + ((2 * (v3 & (2 * v45) ^ 0xF60C210C)) & 0xA633B010)) ^ ((v3 & (2 * (v45 ^ v46)) ^ 0x4438A0AC) - ((2 * (v3 & (2 * (v45 ^ v46)) ^ 0x4438A0AC)) & 0xA6BF058) + 364247087) ^ LODWORD(STACK[0x6AC0]) ^ v27 ^ v33 ^ v37 ^ v38 & 0xBC298A64 ^ (((2 * v38) & 0x700C8418) - (v38 & 0x793E724C) - 1049086480);
  LODWORD(STACK[0x6950]) = v44;
  LODWORD(STACK[0x6960]) = v44 ^ 0x16D5430C;
  LODWORD(STACK[0x67E0]) = LODWORD(STACK[0x65F8]) ^ 0x9EEC30A0;
  LODWORD(STACK[0x67D0]) = (STACK[0x6790] & 1) == 0;
  LODWORD(STACK[0x67C0]) = STACK[0x6680] & 0x1E ^ 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A80])) - 4))(216);
}

uint64_t sub_100B9CB38@<X0>(int a1@<W0>, char a2@<W2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  char v9;
  int v10;
  unsigned int v11;
  char v12;
  char v13;
  char v14;
  int v15;
  int v16;
  char v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;

  v21 = STACK[0x6A80];
  v22 = *(_DWORD *)(a5 + 4 * (v10 ^ 0x83u)) + v20;
  v23 = ((v22 ^ 0xAF3DE42E) & STACK[0x67E0] ^ v15) >> 1;
  v24 = ((v23 ^ 0x41600800) - 2 * ((v23 ^ 0x41600800) & 0x302C0899 ^ v23 & 0x18) - 1339291519) ^ v22;
  v25 = 4
      * (v9 ^ ((v10 ^ ((v10 & v8) >> 1)) << v13) ^ a2 ^ (((((v10 ^ ((v10 & v8) >> 1)) & v14 ^ 0x19)
                                                                                           - (((LODWORD(STACK[0x6A80])
                                                                                              + v17) ^ v12) & (2 * ((v10 ^ ((v10 & v8) >> 1)) & v14 ^ 0x19)))
                                                                                           + 83) ^ v7) >> LODWORD(STACK[0x6AA0])));
  *(_DWORD *)(STACK[0xD9B8] + v25) = a3 ^ a4 ^ (((v24 ^ v11) & STACK[0x6900]) >> LODWORD(STACK[0x67D0]) >> LODWORD(STACK[0x67C0])) ^ ((v24 & v19 ^ v5 ^ (v24 ^ v11) & v16) << LODWORD(STACK[0x6760]));
  v26 = *(unsigned __int16 *)(v6 + 2 * (v10 ^ 3u));
  *(_DWORD *)(v18 + v25) = a3 ^ a4 ^ 0xCD59 ^ (unsigned __int16)((v26 >> 3) | ((_WORD)v26 << 13));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 == 255) * a1) ^ v21)) - 4))();
}

uint64_t sub_100B9CCD0()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  char v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  char v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  unsigned int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unint64_t v399;
  unsigned __int8 *v400;
  int v401;
  unint64_t v402;
  unint64_t v403;
  int v404;
  unint64_t v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  unsigned int v416;
  int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  int v422;
  int v423;
  unsigned int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  int v443;
  unsigned int v444;
  int v445;
  int v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  int v465;
  unsigned int v466;
  unsigned int v467;
  int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  unsigned int v473;
  int v474;
  unsigned int v475;
  int v476;
  unsigned int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  unsigned int v497;
  unsigned int v498;
  int v499;
  int v500;
  uint64_t v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  uint64_t (*v508)(void);
  unint64_t v509;

  v2 = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6458]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A30]) ^ (LODWORD(STACK[0x69D0]) - LODWORD(STACK[0x69E0]));
  LODWORD(STACK[0x62E0]) = v2;
  v3 = STACK[0x65D8];
  v4 = LODWORD(STACK[0x65D8]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x68C0]);
  v5 = (v4 ^ LODWORD(STACK[0x69B0]) ^ 0xCBABB918)
     + 1457814124
     - 2 * ((v4 ^ LODWORD(STACK[0x69B0]) ^ 0xCBABB918) & 0x56E47A6F ^ (v4 ^ LODWORD(STACK[0x69B0])) & 3);
  v6 = (v5 ^ LODWORD(STACK[0x6720])) - ((2 * (v5 ^ LODWORD(STACK[0x6720]))) & 0x1DCA0014) - 1897594870;
  v7 = (v6 ^ LODWORD(STACK[0x6708])) - ((2 * (v6 ^ LODWORD(STACK[0x6708]))) & 0xC34E57C2) - 509137951;
  v8 = (v7 ^ LODWORD(STACK[0x69A0])) + 732714284 - ((2 * (v7 ^ LODWORD(STACK[0x69A0]))) & 0x5758AA58);
  v9 = (v8 ^ LODWORD(STACK[0x65E8])) - 884265136 - ((2 * (v8 ^ LODWORD(STACK[0x65E8]))) & 0x96965EA0);
  v10 = LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x6500]) ^ LODWORD(STACK[0x6520]);
  LODWORD(STACK[0x6258]) = v0;
  v11 = (v0 - 7158) | 2;
  LODWORD(STACK[0x6AC0]) = v11;
  v12 = (v11 + 1256942225) ^ LODWORD(STACK[0x64B8]);
  LODWORD(STACK[0x6260]) = v12;
  v13 = ((v10 ^ 0xE61C53BD ^ v12) - 195585203 - ((2 * (v10 ^ 0xE61C53BD ^ v12)) & 0xE8AF369A)) ^ LODWORD(STACK[0x64E0]);
  v14 = STACK[0x6770];
  v15 = (v13 + 339208845 - ((2 * v13) & 0x286FD51A)) ^ LODWORD(STACK[0x6770]);
  v16 = STACK[0x69F0];
  v17 = (v15 - ((2 * v15) & 0xD5911F5A) + 1791528877) ^ LODWORD(STACK[0x69F0]);
  v18 = (v17 - 471689466 - ((2 * v17) & 0xC7C52E0C)) ^ LODWORD(STACK[0x6800]);
  v19 = (v18 - 471689466 - ((2 * v18) & 0xC7C52E0C)) ^ LODWORD(STACK[0x6830]);
  v20 = (v19 - 111931753 - ((2 * v19) & 0xF2A81D2E)) ^ LODWORD(STACK[0x64F8]);
  v21 = (v20 - 884265136 - ((2 * v20) & 0x96965EA0)) ^ LODWORD(STACK[0x6840]);
  v22 = (v21 - 884265136 - ((2 * v21) & 0x96965EA0)) ^ LODWORD(STACK[0x67F0]);
  v23 = (v22 - ((2 * v22) & 0x1DCA0014) - 1897594870) ^ LODWORD(STACK[0x6700]);
  LODWORD(STACK[0x62E8]) = v2 ^ 0xDD1D66F5;
  v24 = ((v23 - ((2 * v23) & 0x7EC8AE98) + 1063540556) ^ v2 ^ 0xDD1D66F5)
      - ((2 * ((v23 - ((2 * v23) & 0x7EC8AE98) + 1063540556) ^ v2 ^ 0xDD1D66F5)) & 0x58C0438E);
  v25 = LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6750]) ^ LODWORD(STACK[0x66E0]) ^ LODWORD(STACK[0x6710]) ^ LODWORD(STACK[0x64C0]) ^ LODWORD(STACK[0x64F0]) ^ LODWORD(STACK[0x66F8]) ^ v9 ^ LODWORD(STACK[0x6960]);
  v26 = LODWORD(STACK[0x6438]) ^ 0x116FD761;
  LODWORD(STACK[0x6270]) = v26;
  v27 = ((v24 + 744497607) ^ LODWORD(STACK[0x6510]))
      + 889953100
      - ((2 * ((v24 + 744497607) ^ LODWORD(STACK[0x6510]))) & 0x6A173698);
  v28 = LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x64C8]) ^ LODWORD(STACK[0x6930]) ^ ((v25 ^ v26 ^ 0x520CB9C9) - ((2 * (v25 ^ v26 ^ 0x520CB9C9)) & 0x63C45018) + 836904972);
  v29 = STACK[0x65F8];
  v30 = v28 & 0xD36C9E3B ^ 0x10649439 ^ (v28 ^ 0xC76E4D1F) & (LODWORD(STACK[0x65F8]) ^ 0x4D80AE9A);
  v31 = (v30 - ((2 * v30) & 0xE917A95E) - 192162641) >> 1;
  v32 = ((v31 ^ 0x13C1A646) - 2 * ((v31 ^ 0x13C1A646) & 0x7E54E39 ^ v31 & 0x11) - 2015015384) ^ v28;
  v33 = STACK[0x62A0];
  v34 = (v32 ^ 0x408B0337) & (LODWORD(STACK[0x62A0]) ^ 0x5A1F09C1) ^ v32 & 0xA5E0F63E;
  v35 = ((v27 ^ LODWORD(STACK[0x6730])) - ((2 * (v27 ^ LODWORD(STACK[0x6730]))) & 0x4A89F49A) + 625277517) ^ LODWORD(STACK[0x64E8]);
  v36 = STACK[0x6658];
  LODWORD(STACK[0x6630]) = LODWORD(STACK[0x6658]) ^ 0xE9B13358;
  v37 = v36;
  v38 = STACK[0x67B0];
  v39 = v32 & 0xE5BC4476 ^ 0x203C0444 ^ (v32 ^ 0x408B0337) & (LODWORD(STACK[0x67B0]) ^ 0x70F10C33);
  v40 = (((v35 ^ 0x7D16CC2) & (v36 ^ 0xE9B13358) ^ v36 & 0xB0F93A) >> 1) ^ 0x58188C;
  v41 = STACK[0x6650];
  LODWORD(STACK[0x6458]) = STACK[0x6650] & 0xF;
  v42 = STACK[0x6680];
  v43 = STACK[0x6680] & 0x17 ^ 1;
  LODWORD(STACK[0x6430]) = v43;
  LODWORD(STACK[0x6450]) = ((((v34 & 0x1D518C1D ^ 0x1D510C0D) + (v34 & 0xE2AE73E2 ^ 0x80806203) - 1) ^ 0x9D516C39) << (v41 & 0xF)) | (((((2 * v39) & 0xA968B66) - v39 + 2058664524) ^ 0x1A00BE3E) >> v43);
  v44 = (v40 - 1473972467 - ((2 * v40) & 0x504A06B2) + 3148) ^ v35;
  v45 = v44 ^ 0xAF4496A0;
  v46 = STACK[0x6688];
  v47 = (v44 ^ 0xAF4496A0) & (LODWORD(STACK[0x6688]) ^ 0xB1D9BCC4) ^ v44 & 0x2E3E0F12;
  v48 = STACK[0x6760];
  v49 = STACK[0x6900];
  v50 = STACK[0x6478];
  LODWORD(STACK[0x6780]) = STACK[0x6478] & 5;
  LODWORD(STACK[0x6628]) = v50 & 2;
  LODWORD(STACK[0x6448]) = ((((v47 & 0x929CEFBF ^ 0x9294E0AD) + (v47 ^ 0xC2A0F12) - ((v47 ^ 0xC2A0F12) & 0x929CEFBF)) ^ 0xB0B2E6AD) << v48)
                         + ((v45 & v49) >> (v50 & 5) >> (v50 & 2));
  v51 = v37;
  v52 = v37 ^ 0xE9B13359;
  v53 = v37 & 0x448137F4 ^ 0x40011240 ^ (v37 ^ 0xE9B13359) & (LODWORD(STACK[0x65B0]) ^ 0xDF98EAD3);
  v54 = ((88087792 - v53 + ((2 * v53) & 0xF57FA7A0) + 3903) >> 1) ^ 0x2E0069F;
  v55 = v14 & 0x3206C28F ^ 0x3004800A ^ (v29 ^ 0xACEAF22E) & (v14 ^ 0x1437EA8D);
  v56 = (v54 - ((2 * v54) & 0x3633BA4E) - 1692803801) ^ LODWORD(STACK[0x65B0]);
  v57 = (v55 - ((2 * v55) & 0xD441350C) + 1780521606) >> 1;
  v58 = ((v57 ^ 0x25116C00) + 339208845 - 2 * ((v57 ^ 0x25116C00) & 0x1437EA9F ^ v57 & 0x12)) ^ v14;
  v59 = v38 ^ 0x954D4845;
  LODWORD(STACK[0x6660]) = v50 & 3;
  LODWORD(STACK[0x6790]) = v50 & 4;
  LODWORD(STACK[0x68F0]) = (((((2 * (v58 & ~v33 ^ 0x44A879C4)) | 0x88C7750E) - (v58 & ~v33 ^ 0x44A879C4) - 1147386503) ^ 0xCBC343) << v48)
                         + ((v58 & v49) >> (v50 & 3) >> (v50 & 4));
  v60 = (((v38 ^ 0x954D4845) & v56 ^ 0x2FF544BD)
       - ((2 * ((v38 ^ 0x954D4845) & v56 ^ 0x2FF544BD)) & 0x20147BC8)
       - 1878376988) ^ 0xBFFF7959;
  v61 = v46;
  v62 = (v46 ^ 0x9FE7B3D6) & v56;
  v46 ^= 0x9FE7B3D6;
  v63 = STACK[0x6678];
  LODWORD(STACK[0x6350]) = STACK[0x6678] & 9;
  LODWORD(STACK[0x6348]) = v41 & 0x16;
  LOBYTE(v50) = STACK[0x6668];
  v64 = STACK[0x6668] & 0xD ^ 9;
  LODWORD(STACK[0x6410]) = v64;
  LODWORD(STACK[0x6418]) = v42 & 0x12;
  LODWORD(STACK[0x66C8]) = (v60 >> (v42 & 0x12) >> v64) ^ (v62 << (v63 & 9) << (v41 & 0x16));
  v65 = (v51 ^ 0xA59F15CA) & (v3 ^ 0x1437EA8D) ^ v3 & 0x4C2E2693;
  v66 = (((v65 & 0x9F5D0077 ^ 0x9F510066) + (v65 ^ 0x400C0491) - ((v65 ^ 0x400C0491) & 0x9F5D0077)) >> 1) ^ 0x6DBB9333;
  v67 = (v66 + 339208845 - ((2 * v66) & 0x286FD51A)) ^ v3;
  v68 = v42 & 0x1B ^ 9;
  LODWORD(STACK[0x65D8]) = v68;
  LODWORD(STACK[0x65B0]) = v50 & 4;
  LOBYTE(v26) = v50;
  LODWORD(STACK[0x6A80]) = (((((2 * (v67 & ~v33 ^ 0x2E110C)) | 0xA397E6D0) - (v67 & ~v33 ^ 0x2E110C) - 1372320616) ^ 0x51E5E264) << v48) | ((v49 & v67) >> (v50 & 4) >> v68);
  v69 = STACK[0x6480] & 0xE2C77A2 ^ 0xA2044A0 ^ (v29 ^ 0x90C04703) & (LODWORD(STACK[0x6480]) ^ 0x9B19DD27);
  v70 = (v69 - ((2 * v69) & 0x56EC7CB8) - 1418314148) >> 1;
  v71 = ((v70 ^ 0x55AF17EF) - 2 * ((v70 ^ 0x55AF17EF) & 0x1B19DD37 ^ v70 & 0x10) - 1692803801) ^ LODWORD(STACK[0x6480]);
  v72 = STACK[0x6648];
  LOBYTE(v60) = STACK[0x67A0];
  LOBYTE(v64) = v41 & 0x19;
  LODWORD(STACK[0x6770]) = (((-1602551808
                            - (v71 & (v38 ^ 0x954D4845) ^ 0x480C468)
                            + ((2 * (v71 & (v38 ^ 0x954D4845) ^ 0x480C468)) & 0xBF09F30A)
                            + 1658) ^ 0xA4FBC212) >> v72 >> v60) ^ ((v71 & v46) << (v41 & 6) << (v41 & 0x19));
  v73 = STACK[0x6A10] & 0xAAC3EC0 ^ 0x2043280 ^ (LODWORD(STACK[0x6A10]) ^ 0x3CC651C6) & (v29 ^ 0x94400E61);
  v74 = (v73 - 1684368770 - ((2 * v73) & 0x373541E4) + 3700) >> 1;
  v75 = ((v74 ^ 0x488D4159) - 2 * ((v74 ^ 0x488D4159) & 0x6AC88FAF ^ v74 & 2) + 1791528877) ^ v16;
  v76 = v75 & v46 ^ LODWORD(STACK[0x10BC]);
  LOBYTE(v16) = v42;
  v77 = v42 & 0xB ^ 9;
  LODWORD(STACK[0x6480]) = v77;
  LODWORD(STACK[0x6478]) = v50 & 0x14;
  LODWORD(STACK[0x68E0]) = ((((v75 & (v38 ^ 0x954D4845) ^ 0x22122959)
                            - ((2 * (v75 & (v38 ^ 0x954D4845) ^ 0x22122959)) & 0x60E1C22C)
                            + 812704022) ^ 0x1262C84F) >> (v50 & 0x14) >> v77)
                         + (((((2 * v76) & 0x5FBF37E6) - v76 + 1344300044) ^ 0xC020868D) << v48);
  v78 = STACK[0x65C0];
  v79 = v78 & 0x731A9AD5 ^ 0x52180811 ^ (v51 ^ 0x9AABA98C) & (v78 ^ 0x9B19DD27);
  v80 = LODWORD(STACK[0x68D0]) ^ 0x3DCCD4CF;
  LODWORD(STACK[0x6498]) = v52;
  v81 = (v79 - 1909702048 - ((2 * v79) & 0x1C588768) + 340) >> 1;
  v82 = ((v81 ^ 0x679669D0) - 2 * ((v81 ^ 0x679669D0) & 0x1B19DD2F ^ v81 & 8) - 1692803801) ^ v78;
  LODWORD(STACK[0x6328]) = v63 & 5;
  LODWORD(STACK[0x62C0]) = v41 & 0x1A;
  LODWORD(STACK[0x68D0]) = (((-73417664 - (v82 & ~v33 ^ 0x52F54B9F) + ((2 * (v82 & ~v33 ^ 0x52F54B9F)) & 0x8C0877E)) ^ 0xA96AF7DF) << (v63 & 5) << (v41 & 0x1A)) | ((v49 & v82) >> v60 >> v72);
  v83 = LODWORD(STACK[0x68C0]) ^ (((v51 & 0x9B156A7 ^ 0x1314683 ^ v80 & v52)
                                 - ((2 * (v51 & 0x9B156A7 ^ 0x1314683 ^ v80 & v52)) & 0xB9343AD2)
                                 + 1553603945) >> 1);
  v84 = STACK[0x65E0];
  v85 = (v29 ^ 0x5B0392E7) & (v84 ^ 0x9B19DD27) ^ v84 & 0xC5EFA246;
  v86 = v61 & 0xE81BB532 ^ 0x2019B030 ^ v46 & (v83 ^ 0xBC5E8581);
  v87 = v83 & 0xA0668A64 ^ 0x440020 ^ (v38 ^ 0x352BC221) & (v83 ^ 0x544530B3);
  v88 = v29;
  v89 = v29 ^ 0x9EEC30A1;
  v90 = STACK[0x6880];
  LODWORD(STACK[0x6470]) = v29 ^ 0x9EEC30A1;
  v91 = v29 & 0x2EA8719F ^ 0x2A084190 ^ (v29 ^ 0x9EEC30A1) & (v90 ^ 0xCD4AE699);
  LODWORD(STACK[0x6360]) = v41 & 0x19;
  LOBYTE(v12) = v41 & 6;
  LODWORD(STACK[0x6368]) = v41 & 6;
  LOBYTE(v60) = v26;
  v92 = v26 & 0x19 ^ 9;
  LODWORD(STACK[0x69F0]) = v92;
  LODWORD(STACK[0x6A00]) = v16 & 6;
  LODWORD(STACK[0x6A70]) = (v87 >> (v16 & 6) >> v92) | (((((2 * v86) | 0x675C6B64) - v86 - 867055026) ^ 0x9BB43490) << (v41 & 0x19) << (v41 & 6));
  v93 = (((v85 & 0xE29E0D7 ^ 0xE20C0D7) + (v85 ^ 0xC0CD2000) - ((v85 ^ 0xC0CD2000) & 0xE29E0D7)) >> 1) ^ 0x27F6A068;
  v94 = (v93 - ((2 * v93) & 0x3633BA4E) - 1692803801) ^ v84;
  v95 = (((2 * v91) & 0x1EA01BCE) - v91 - 256904680) >> 1;
  v96 = ((v95 ^ 0x6A07C184) - 471689466 - 2 * ((v95 ^ 0x6A07C184) & 0x63E29716 ^ v95 & 0x10)) ^ v90;
  v97 = (v94 & ~v33) << v48;
  v98 = v49;
  LOBYTE(v84) = STACK[0x6660];
  v99 = (v94 & v49) >> v84;
  LOBYTE(v49) = STACK[0x6790];
  LODWORD(STACK[0x68C0]) = (v99 >> v49) | v97;
  v100 = STACK[0x6658];
  v101 = STACK[0x6658] & 0x26BDC1FA ^ 0x9F2CC367 ^ v52 & (LODWORD(STACK[0x65B8]) ^ 0x1C4A1E87);
  v102 = ((((2 * v101) & 0xC184B8A) - v101 + 2046024250) >> 1) ^ 0x63370C02;
  v103 = (v102 - ((2 * v102) & 0x75EFBEFA) + 989323133) ^ LODWORD(STACK[0x65B8]);
  v104 = v46;
  LOBYTE(v63) = STACK[0x67A0];
  LODWORD(STACK[0x68B0]) = ((v96 & v98) >> v72 >> v63) + ((v96 & v46) << v48);
  LOBYTE(v29) = STACK[0x65D8];
  LOBYTE(v26) = STACK[0x65B0];
  v105 = STACK[0x6678];
  LODWORD(STACK[0x6278]) = STACK[0x6678] & 0xC;
  v106 = STACK[0x6650];
  LODWORD(STACK[0x6380]) = STACK[0x6650] & 0x13;
  LODWORD(STACK[0x68A0]) = ((((v103 & ~v33 ^ 0x28A0A7C8 | 0xB19F9B15)
                            - (v103 & ~v33 ^ 0x28A0A7C8 | 0x4E6064EA)
                            + 1314940138) ^ 0x993F3CDD) << (v105 & 0xC) << (v106 & 0x13)) ^ (((((v38 ^ 0x954D4845) & v103 ^ 0x21848513)
                                                                                             - ((2
                                                                                               * ((v38 ^ 0x954D4845) & v103 ^ 0x21848513)) & 0xFC699004)
                                                                                             + 2117388290) ^ 0x5FB04D11) >> v29 >> v26);
  v107 = STACK[0x6630];
  v108 = v100;
  v109 = ((STACK[0x6630] & (LODWORD(STACK[0x6800]) ^ 0x9CD75654) ^ v100 & 0x7F35C152) >> 1) ^ 0x349880A8;
  v110 = (v109 - 471689466 - ((2 * v109) & 0xC7C52E0C)) ^ LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x6A60]) = (((((2 * (v104 & v110 ^ 0xA516949)) | 0x39ED2570) - (v104 & v110 ^ 0xA516949) + 1661562184) ^ 0x96A7FBF1) << v48)
                         + (((v38 ^ 0x954D4845) & v110) >> v49 >> v84);
  v111 = STACK[0x6638] & 0x821F68CB ^ 0x821D480B ^ (v88 ^ 0x1CF3586A) & (LODWORD(STACK[0x6638]) ^ 0x3AF7DF7D);
  v112 = ((((2 * v111) | 0x58DA7708) - v111 - 745356164) >> 1) ^ 0x56339DE3;
  v113 = (v112 - ((2 * v112) & 0x75EFBEFA) + 989323133) ^ LODWORD(STACK[0x6638]);
  v114 = v60 & 0x1D ^ 9;
  LODWORD(STACK[0x65C0]) = v16 & 2;
  LODWORD(STACK[0x65B8]) = v114;
  LODWORD(STACK[0x6890]) = ((((v113 & ~v33 ^ 0x4001218)
                            + 396411320
                            - ((2 * (v113 & ~v33 ^ 0x4001218)) & 0x2F417F78)
                            - 508) ^ 0x13A0ADA4) << v12 << v64) ^ ((v113 & v98) >> (v16 & 2) >> v114);
  v115 = v88 & 0x6133E190 ^ 0x108100 ^ v89 & (LODWORD(STACK[0x6830]) ^ 0x82D17696);
  v116 = STACK[0x6640];
  v117 = ((((2 * v115) & 0x8A25EF50) - v115 - 1158870953) >> 1) ^ 0x5D6ED4EB;
  v118 = (v117 - 471689466 - ((2 * v117) & 0xC7C52E0C)) ^ LODWORD(STACK[0x6830]);
  LODWORD(STACK[0x6A50]) = (((((2 * (v118 & (v38 ^ 0x954D4845) ^ 0x290A100)) & 0x2CEC45C6)
                            - (v118 & (v38 ^ 0x954D4845) ^ 0x290A100)
                            - 376840932) ^ 0xEB197C1C) >> v72 >> v63) | ((v118 & ~v33) << v48);
  v119 = (((v100 ^ 0xCE341E8E) & (v116 ^ 0x3AF7DF7C) ^ v116 & 0x27852DD6) >> 1) ^ 0x114286AA;
  v120 = (v119 - ((2 * v119) & 0x75EFBEFA) + 989323133) ^ v116;
  LODWORD(STACK[0x6638]) = v106 & 0xE;
  LODWORD(STACK[0x6640]) = v106 & 0x11;
  LODWORD(STACK[0x6880]) = ((v98 & v120) >> v26 >> v29) ^ ((v104 & v120) << (v106 & 0xE) << (v106 & 0x11));
  v121 = ((LODWORD(STACK[0x65E8]) ^ 0xE8AE752A) & v107 ^ v100 & 0xC3022006) >> 1;
  v122 = ((v121 ^ 0x60801000) + 732714284 - 2 * ((v121 ^ 0x60801000) & 0x2BAC553C ^ v121 & 0x10)) ^ LODWORD(STACK[0x65E8]);
  v123 = STACK[0x67E0];
  v124 = (STACK[0x67E0] & (LODWORD(STACK[0x6388]) ^ 0x9B36DA50) ^ v88 & 0xA1C1052C) >> 1;
  v125 = ((v124 ^ 0x40600010) - 2 * ((v124 ^ 0x40600010) & 0x3AF7DF7F ^ v124 & 2) + 989323133) ^ LODWORD(STACK[0x6388]);
  LODWORD(STACK[0x65E0]) = v105 & 0xD;
  LODWORD(STACK[0x65E8]) = v106 & 0x12;
  LOBYTE(v64) = STACK[0x69F0];
  LOBYTE(v63) = STACK[0x6A00];
  LODWORD(STACK[0x6870]) = ((v125 & ~v33) << (v105 & 0xD) << (v106 & 0x12)) ^ ((v125 & v98) >> v64 >> v63);
  LODWORD(STACK[0x6A40]) = ((v122 & (v38 ^ 0x954D4845)) >> LODWORD(STACK[0x6AA0])) + ((v122 & v104) << v48);
  v126 = (((STACK[0x6518] & v107) >> 1) - 111931753 - (STACK[0x6518] & v107 & 0xF2A81D2E)) ^ LODWORD(STACK[0x64F8]);
  v127 = (((v88 ^ 0xB2168F02) & (LODWORD(STACK[0x6338]) ^ 0x3BD5A52A) ^ STACK[0x6338] & 0x2CFABFA2) >> 1) ^ 0x14685291;
  v128 = (v127 + 1003857194 - ((2 * v127) & 0x77AB4A54)) ^ LODWORD(STACK[0x6338]);
  LODWORD(STACK[0x6A30]) = ((v126 & v104) << v48)
                         + (((((2 * (v126 & (v38 ^ 0x954D4845) ^ 0x1040800)) & 0x366DF108)
                            - (v126 & (v38 ^ 0x954D4845) ^ 0x1040800)
                            - 456587397) ^ 0xE5CD0F7B) >> v63 >> v64);
  LODWORD(STACK[0x6860]) = (((((2 * (v128 & ~v33 ^ 0x81142000)) | 0x5E1B196E) - (v128 & ~v33 ^ 0x81142000) - 789417143) ^ LODWORD(STACK[0x10C0])) << (v105 & 0xD) << (v106 & 0x12))
                         + ((v128 & v98) >> v84 >> v49);
  v129 = STACK[0x6820] & 0x74216A8D ^ 0x24202201 ^ (v100 ^ 0x9D9059D4) & (LODWORD(STACK[0x6820]) ^ 0xCB4B2F50);
  v130 = (((2 * v129) | 0x4B87871C) - v129 - 633586574) >> 1;
  v131 = ((v130 ^ 0x20F165C7) - 884265136 - 2 * ((v130 ^ 0x20F165C7) & 0x4B4B2F58 ^ v130 & 8)) ^ LODWORD(STACK[0x6820]);
  v132 = ((v123 & (LODWORD(STACK[0x6390]) ^ 0xF20BD3AA) ^ v88 & 0xC9DE7680) >> 1) ^ 0x44661840;
  v133 = (v132 + 1003857194 - ((2 * v132) & 0x77AB4A54)) ^ LODWORD(STACK[0x6390]);
  LOBYTE(v105) = STACK[0x6628];
  LOBYTE(v29) = STACK[0x6780];
  LODWORD(STACK[0x6850]) = (((((2 * (v133 & v104 ^ 0x64022600)) | 0x77CD0C50) - (v133 & v104 ^ 0x64022600) + 1142520280) ^ 0xDFE4A028) << v48)
                         + ((v133 & v98) >> v105 >> v29);
  LODWORD(STACK[0x6518]) = v106 & 2;
  LODWORD(STACK[0x64F8]) = v106 & 0x1D;
  LODWORD(STACK[0x6A20]) = (((((2 * (v131 & ~v33 ^ 0x26E00090)) & 0x7B5CF8F2) - (v131 & ~v33 ^ 0x26E00090) + 1112638342) ^ 0x64B18316) << (v106 & 2) << (v106 & 0x1D)) | (((((v38 ^ 0x954D4845) & v131 & 0xC0658015 ^ 0x40450015) + ((v38 ^ 0x954D4845) & v131 & 0x3F9A7FEA ^ 0x3D9A1DE1) - 1) ^ 0x7DDF1DF5) >> (v60 & 0x1D ^ 9) >> (v16 & 2));
  v134 = STACK[0x6498];
  v135 = v100 & 0x7FE3C830 ^ 0x37438000 ^ STACK[0x6498] & (LODWORD(STACK[0x6840]) ^ 0xB4A8E760);
  v136 = (((2 * v135) & 0x3E5A1CCC) - v135 - 523046503) >> 1;
  v137 = ((v136 ^ 0x5F1838C4) - 884265136 - 2 * ((v136 ^ 0x5F1838C4) & 0x4B4B2F5B ^ v136 & 0xB)) ^ LODWORD(STACK[0x6840]);
  LOBYTE(v116) = STACK[0x67A0];
  LODWORD(STACK[0x6A10]) = ((v98 & v137) >> v72 >> v116) ^ ((((v104 & v137 ^ LODWORD(STACK[0x10C4]))
                                                            - ((2 * (v104 & v137 ^ LODWORD(STACK[0x10C4]))) & 0x162B3648)
                                                            - 1961518300) ^ 0x1A65F820) << v48);
  v138 = (((v88 ^ 0xD198ADA2) & (LODWORD(STACK[0x6398]) ^ 0x3BD5A52A) ^ STACK[0x6398] & 0x4F749D02) >> 1) ^ 0x5AA4281;
  v139 = (v138 + 1003857194 - ((2 * v138) & 0x77AB4A54)) ^ LODWORD(STACK[0x6398]);
  v140 = STACK[0x67F0] & 0xBAB3F4B5 ^ 0x30B21000 ^ (v100 ^ 0x5302C7EC) & (LODWORD(STACK[0x67F0]) ^ 0xCB4B2F50);
  v141 = ((606857578 - v140 + ((2 * v140) | 0xB7A819B6) + 2491) >> 1) ^ 0x30B29C65;
  v142 = (v141 - 884265136 - ((2 * v141) & 0x96965EA0)) ^ LODWORD(STACK[0x67F0]);
  LODWORD(STACK[0x6840]) = ((v139 & ~v33) << LODWORD(STACK[0x6638]) << LODWORD(STACK[0x6640])) ^ ((v139 & v59) >> v63 >> v64);
  LODWORD(STACK[0x6A00]) = ((v98 & v142) >> LODWORD(STACK[0x64A0]) >> LODWORD(STACK[0x64A8])) | ((v142 & ~v33) << v48);
  v143 = v88 & 0x5E50E1A0 ^ 0x1000E1A0 ^ STACK[0x6470] & (LODWORD(STACK[0x6428]) ^ 0x6585448A);
  v144 = ((((((2 * v143) & 0x89F3BB5E) - v143 + 990257744) >> 1) ^ 0x1AA371A8)
        + 1003857194
        - 2
        * ((((((2 * v143) & 0x89F3BB5E) - v143 + 990257744) >> 1) ^ 0x1AA371A8) & 0x3BD5A52B ^ ((((2 * v143) & 0x89F3BB5E)
                                                                                               - v143
                                                                                               + 990257744) >> 1) & 1)) ^ LODWORD(STACK[0x6428]);
  v145 = STACK[0x65C8] & 0x7C8D23C2 ^ 0x64000240 ^ (LODWORD(STACK[0x65C8]) ^ 0x9BE456DD) & (v108 ^ 0x953C109B);
  v146 = LODWORD(STACK[0x69B0]) ^ ((v145 - ((2 * v145) & 0x471EFF8) - 2110195716) >> 1);
  v147 = STACK[0x6688] & 0xE2F206A ^ 0xC072048 ^ (v146 ^ 0xBDA28B0B) & v104;
  v148 = STACK[0x67B0] & 0x4CA8A5A7 ^ 0x4A8A020 ^ (v146 ^ 0xFF250EC6) & v59;
  v149 = v59;
  LODWORD(STACK[0x69F0]) = ((((v148 | 0xEE4CCCE4) - (v148 | 0x11B3331B) + 296956699) ^ 0xEEEC6CC1) >> v116 >> v72) ^ (((((2 * v147) & 0xBAE61AB2) - v147 + 579662502) ^ 0x20ACF2AC) << v48);
  v150 = v88;
  v151 = (v123 & (LODWORD(STACK[0x6330]) ^ 0xCCCE3CD4) ^ v88 & 0xE37C1F1A) >> 1;
  v152 = ((v151 ^ 0x41360800) - 2 * ((v151 ^ 0x41360800) & 0x2FB223DF ^ v151 & 0x11) + 800203726) ^ LODWORD(STACK[0x6330]);
  LOBYTE(v88) = v116;
  LOBYTE(v64) = v72;
  LODWORD(STACK[0x6830]) = (((((2 * (v144 & v59 ^ 0x30018000)) | 0xEB945EA0) - (v144 & v59 ^ 0x30018000) + 171298992) ^ 0xC5CBAF50) >> v116 >> v72) ^ ((v144 & v104) << v106);
  LODWORD(STACK[0x6398]) = v106 & 0x17;
  LODWORD(STACK[0x6820]) = ((v152 & v98) >> LODWORD(STACK[0x67D0]) >> LODWORD(STACK[0x67C0])) ^ ((v152 & ~v33) << (v106 & 0x17));
  v153 = (LODWORD(STACK[0x6990]) ^ 0xDD638391) & v134 ^ v108 & 0xDD638391;
  v154 = (((v153 & 0xA79944EE ^ 0x2699446E) + (v153 ^ 0xD1620081) - ((v153 ^ 0xD1620081) & 0xA79944EE)) >> 1) ^ 0x5FED23BF;
  v155 = v150;
  v156 = (v150 ^ 0x2D00863A) & (LODWORD(STACK[0x6370]) ^ 0x2FB223CE) ^ STACK[0x6370] & 0xB3ECB69B;
  v157 = (v154 - 195585203 - ((2 * v154) & 0xE8AF369A)) ^ LODWORD(STACK[0x64E0]);
  v158 = (((v156 & 0xB3E4B1F6 ^ 0x92A09164) + (v156 ^ 0x2144209A) - ((v156 ^ 0x2144209A) & 0xB3E4B1F6)) >> 1) ^ 0x588059F3;
  v159 = (v158 - ((2 * v158) & 0x5F64479C) + 800203726) ^ LODWORD(STACK[0x6370]);
  LOBYTE(v144) = v105;
  LODWORD(STACK[0x69E0]) = (((((2 * (v157 & v59 ^ 0x8A24020)) | 0x2E028C5C) - (v157 & v59 ^ 0x8A24020) - 385959470) ^ 0x1FA3060E) >> v29 >> v105)
                         + ((v157 & v104) << v48);
  v160 = v108 & 0xA744D444 ^ 0xA1045044 ^ (LODWORD(STACK[0x65D0]) ^ 0x5A61A6EF) & v134;
  v161 = STACK[0x6668];
  v162 = STACK[0x6668] & 5 ^ 1;
  LODWORD(STACK[0x62D8]) = v162;
  v163 = STACK[0x6680];
  v164 = STACK[0x6680] & 0x1A ^ 8;
  LODWORD(STACK[0x6428]) = v164;
  LODWORD(STACK[0x6810]) = (((((2 * (v159 & ~v33 ^ 0x40400200)) & 0xBD05C1FA) - (v159 & ~v33 ^ 0x40400200) + 561848066) ^ 0x613D1D02) << (v106 & 0x17)) | ((v159 & v98) >> v164 >> v162);
  v165 = (((2 * v160) & 0xC4405184) - v160 + 501208893) >> 1;
  v166 = ((v165 ^ 0xEEDCB9C) - 2 * ((v165 ^ 0xEEDCB9C) & 0x6C442E7A ^ v165 & 2) - 331075976) ^ LODWORD(STACK[0x6500]);
  v167 = v98;
  LODWORD(STACK[0x69D0]) = ((v166 & v98) >> LODWORD(STACK[0x65B0]) >> LODWORD(STACK[0x65D8])) | ((v166 & v104) << v48);
  v168 = STACK[0x66B8] & 0x9957AD17 ^ 0x81578012 ^ (LODWORD(STACK[0x66B8]) ^ 0xB098098A) & (v150 ^ 0x7BB9DB6);
  v169 = (((v150 ^ 0xB9F3D88A) & (LODWORD(STACK[0x6468]) ^ 0x2FB223CE) ^ STACK[0x6468] & 0x271FE82A) >> 1) ^ 0x13891005;
  v170 = (v169 - ((2 * v169) & 0x5F64479C) + 800203726) ^ LODWORD(STACK[0x6468]);
  v171 = ((v170 & ~v33 ^ 0xD020B347 | LODWORD(STACK[0x10C8])) - (v170 & ~v33 ^ 0xD020B347 | 0x46FED3E3) + 1191105507) ^ 0x69219F5B;
  v172 = (((2 * v168) & 0xB2CC87CC) - v168 - 1499874279) >> 1;
  v173 = ((v172 ^ 0x5BEF1A84) - 2 * ((v172 ^ 0x5BEF1A84) & 0x61A72BF1 ^ v172 & 0x10) - 509137951) ^ LODWORD(STACK[0x69A0]);
  v174 = v149;
  v175 = (v170 & v149 ^ 0xE4D5D387) - 1410531328 - ((2 * (v170 & v149 ^ 0xE4D5D387)) & 0x57DA1348);
  v176 = (v173 & v104 ^ 0x510169) - ((2 * (v173 & v104 ^ 0x510169)) & 0xA3F11CE2);
  v177 = (v173 & v149 ^ 0xF810400) - ((2 * (v173 & v149 ^ 0xF810400)) & 0x9F80B262);
  LOBYTE(v149) = STACK[0x6348];
  LOBYTE(v116) = STACK[0x6350];
  LOBYTE(v106) = STACK[0x6660];
  LODWORD(STACK[0x6800]) = (v171 << v149 << v116) | (((v175 + 2468) ^ 0x4F38DA23) >> LODWORD(STACK[0x6790]) >> v106);
  LODWORD(STACK[0x69C0]) = (((v177 + 1338005809) ^ 0x40415D31) >> LODWORD(STACK[0x6480]) >> LODWORD(STACK[0x6478])) ^ (((v176 + 1375243889) ^ 0x51A98F18) << v48);
  v178 = (v108 ^ 0x334B7301) & (LODWORD(STACK[0x63A0]) ^ 0x2FB223CE) ^ STACK[0x63A0] & 0xDAFA4058;
  v179 = (((v178 & 0x44F9FD46 ^ 0x439FD46) + (v178 ^ 0x42C00010) - ((v178 ^ 0x42C00010) & 0x44F9FD46)) >> 1) ^ 0x645FE8F;
  v180 = (v179 - ((2 * v179) & 0x5F64479C) + 800203726) ^ LODWORD(STACK[0x63A0]);
  LODWORD(STACK[0x67F0]) = ((((v180 & ~v33 & 0x841123A0 ^ 0x800123A1) + (v180 & ~v33 & 0x7BEEDC5F) - 1) ^ 0x800123A0) << v116 << v149)
                         + ((v98 & v180) >> LODWORD(STACK[0x6AA0]));
  v181 = STACK[0x6470];
  v182 = v150 & 0xB5577CCF ^ 0x34407884 ^ STACK[0x6470] & (LODWORD(STACK[0x6970]) ^ 0x3BB27CC5);
  v183 = (-1980188289 - (v182 | 0x89F8B97F) + (v182 | 0x76074680)) >> 1;
  v184 = ((v183 ^ 0x6B018742) - 2 * ((v183 ^ 0x6B018742) & 0xEE5000F ^ v183 & 5) - 1897594870) ^ LODWORD(STACK[0x6970]);
  v185 = STACK[0x64D8];
  v186 = v108;
  v187 = STACK[0x6630] & (LODWORD(STACK[0x64D8]) ^ 0xD22ADE20) ^ v108 & 0x594B1EB8;
  LODWORD(STACK[0x69B0]) = ((((v184 & v174 & 0x741E28AF ^ 0x341C2027) + (v184 & v174 & 0x8BE1D750 ^ 0xE00401) - 1) ^ 0x34FC2427) >> v88 >> v64)
                         + ((v184 & ~v33) << v48);
  v188 = (((v187 >> 1) ^ 0x2480890C) - 1956527976 - ((2 * ((v187 >> 1) ^ 0x2480890C)) & 0x16C38130)) ^ v185;
  v189 = ((2 * (v104 & v188 ^ 0xD010C400)) & 0xBF30905E) - (v104 & v188 ^ 0xD010C400);
  v190 = ((v108 ^ 0x6D7158) & (LODWORD(STACK[0x6708]) ^ 0x8EE5000A) ^ STACK[0x6708] & 0xE9DC4200) >> 1;
  v191 = ((v190 ^ 0x44620000) - 1897594870 - 2 * ((v190 ^ 0x44620000) & 0xEE5001E ^ v190 & 0x14)) ^ LODWORD(STACK[0x6708]);
  v192 = v104;
  v193 = v167;
  v194 = v167 & v188;
  LOBYTE(v116) = STACK[0x65E0];
  LOBYTE(v167) = STACK[0x65E8];
  LOBYTE(v149) = STACK[0x65B8];
  LOBYTE(v49) = STACK[0x65C0];
  LODWORD(STACK[0x64E0]) = (v194 >> v149 >> v49) + (((v189 + 543668176) ^ 0xF07773D0) << v116 << v167);
  v195 = STACK[0x63A8];
  v196 = STACK[0x67E0];
  LODWORD(STACK[0x6268]) = v163 & 0x16;
  v197 = ~v161 & 9;
  LODWORD(STACK[0x6500]) = v197;
  LODWORD(STACK[0x69A0]) = ((v193 & v191) >> (v163 & 0x16) >> v197)
                         + (((((2 * (v104 & v191 ^ 0x51180C05)) & 0x4DA84FCC) - (v104 & v191 ^ 0x51180C05) - 651438055) ^ 0x8833D41C) << v167 << v116);
  v198 = (v196 & (v195 ^ 0xA0B5820E) ^ v155 & 0x2BD44296) >> 1;
  v199 = ((v198 ^ 0x5620040) - 1956527976 - 2 * ((v198 ^ 0x5620040) & 0xB61C09E ^ v198 & 6)) ^ v195;
  LODWORD(STACK[0x64D8]) = ((((v199 & v174 ^ 0x114C80 | 0xD3CD7F7C) - (v199 & v174 ^ 0x114C80 | 0x2C328083) + 741507203) ^ 0xD3DC33FC) >> v144 >> LODWORD(STACK[0x6780])) | ((v199 & ~v33) << v48);
  v200 = STACK[0x6750] & 0x1438BB6B ^ LODWORD(STACK[0x10CC]) ^ (v108 ^ 0xFD898832) & (LODWORD(STACK[0x6750]) ^ 0x8EE5000A);
  v201 = ((((2 * v200) & 0xF74CFFE0) - v200 - 2074509297) >> 1) ^ 0x42308493;
  v202 = (v201 - ((2 * v201) & 0x1DCA0014) - 1897594870) ^ LODWORD(STACK[0x6750]);
  v203 = ((2 * (v104 & v202 ^ 0x4EA4010)) & 0x959100D0) - (v104 & v202 ^ 0x4EA4010);
  v204 = STACK[0x64D0];
  v205 = v196 & (LODWORD(STACK[0x64D0]) ^ 0xD88A2712) ^ v155 & STACK[0x10D0];
  v206 = STACK[0x6650];
  LODWORD(STACK[0x65D0]) = STACK[0x6650] & 3;
  LODWORD(STACK[0x65C8]) = v206 & 0x1C;
  LODWORD(STACK[0x6990]) = (((((2 * (v174 & v202 ^ 0x880011EA)) & 0x6828A0A6) - (v174 & v202 ^ 0x880011EA) - 873746516) ^ 0x43EBBE46) >> v49 >> v149) ^ (((v203 - 1254654057) ^ 0xB1DD3F87) << (v206 & 3) << (v206 & 0x1C));
  v207 = (((v205 >> 1) ^ 0x9741040) - 1956527976 - 2 * (((v205 >> 1) ^ 0x9741040) & 0xB61C09C ^ (v205 >> 1) & 4)) ^ v204;
  LOBYTE(v116) = STACK[0x6790];
  LODWORD(STACK[0x66B8]) = ((v207 & v193) >> v106 >> v116) ^ ((v207 & ~v33) << v48);
  v208 = v155 & 0x44D2BB16 ^ 0x4423116 ^ v181 & (LODWORD(STACK[0x6700]) ^ 0xCA37BB1C);
  v209 = ((((2 * v208) & 0xAA430F38) - v208 + 719222883) >> 1) ^ 0x152E3CBA;
  v210 = (v209 - ((2 * v209) & 0x1DCA0014) - 1897594870) ^ LODWORD(STACK[0x6700]);
  LODWORD(STACK[0x6980]) = ((((v210 & ~v33 ^ 0x3D10892 | 0xB7FEB1FE)
                            - (v210 & ~v33 ^ 0x3D10892 | 0x48014E01)
                            + 1208045057) ^ 0xB42FB96C) << v48) ^ ((v210 & v193) >> (v163 & 0x16) >> (~(_BYTE)v161 & 9));
  v211 = (v108 ^ 0xD38C3968) & (LODWORD(STACK[0x6378]) ^ 0x8B61C098) ^ STACK[0x6378] & 0x3A3D0A31;
  v212 = (((v211 & 0x9D2C2BFA ^ 0x8D2029CB | v211 & 0x62D3D404) - 1) >> 1) ^ 0x438094ED;
  v213 = (v212 - 1956527976 - ((2 * v212) & 0x16C38130)) ^ LODWORD(STACK[0x6378]);
  LOBYTE(v196) = STACK[0x6458];
  LODWORD(STACK[0x64D0]) = ((v174 & v213) >> v106 >> v116) ^ ((v192 & v213) << v196);
  v214 = (((LODWORD(STACK[0x62E0]) ^ 0xE27931B8) & (v108 ^ 0x97FF91C4) ^ STACK[0x62E0] & 0x7E4EA29C) >> 1) ^ 0x3124104C;
  v215 = (v214 - ((2 * v214) & 0x7EC8AE98) + 1063540556) ^ LODWORD(STACK[0x62E8]);
  v216 = ((v215 & v192 & 0x475D54DD ^ 0x475954D5) + (v215 & v192 ^ 0x262008) - ((v215 & v192 ^ 0x262008) & 0x475D54DD)) ^ 0x477B74D5;
  v217 = v174;
  LOBYTE(v144) = STACK[0x6410];
  v218 = (v215 & v174) >> v144;
  LOBYTE(v174) = STACK[0x6418];
  LODWORD(STACK[0x6970]) = (v216 << v48) | (v218 >> v174);
  v219 = STACK[0x6498];
  v220 = (v108 & 0x8F143134 ^ 0x84040120 ^ (LODWORD(STACK[0x6950]) ^ 0xFBFFA236) & v219)
       - ((2 * (v108 & 0x8F143134 ^ 0x84040120 ^ (LODWORD(STACK[0x6950]) ^ 0xFBFFA236) & v219)) & 0x377C5272)
       - 1682036423;
  v221 = (((v220 >> 1) ^ LODWORD(STACK[0x10D4]))
        - 2 * (((v220 >> 1) ^ LODWORD(STACK[0x10D4])) & 0x623ED00F ^ (v220 >> 1) & 1)
        + 1648283662) ^ LODWORD(STACK[0x6960]);
  LOBYTE(v89) = STACK[0x67D0];
  LOBYTE(v107) = STACK[0x67C0];
  LODWORD(STACK[0x6960]) = ((((v221 & v192 & 0x16F4690F ^ 0x16F0680F)
                            + (v221 & v192 ^ 0xC8390)
                            - ((v221 & v192 ^ 0xC8390) & 0x16F4690F)) ^ 0x16F8EA9F) << v206) | ((v221 & v217) >> v89 >> v107);
  v222 = ((v155 ^ 0xE69A4A94) & (LODWORD(STACK[0x64C0]) ^ 0x72A3EC44) ^ STACK[0x64C0] & 0x78767A34) >> 1;
  v223 = ((v222 ^ 0x38113402) + 1923345477 - 2 * ((v222 ^ 0x38113402) & 0x72A3EC65 ^ v222 & 0x20)) ^ LODWORD(STACK[0x64C0]);
  v224 = (((2 * (v223 & ~v33 ^ 0x30030918)) & 0x914CF562) - (v223 & ~v33 ^ 0x30030918) + 928613710) ^ 0x75A8C56;
  v225 = v223 & v217;
  LOBYTE(v106) = STACK[0x6680];
  v226 = STACK[0x6680] & 0xE ^ 8;
  LODWORD(STACK[0x63A0]) = v226;
  v227 = v161 & 0x11 ^ 1;
  LODWORD(STACK[0x63A8]) = v227;
  LODWORD(STACK[0x6950]) = (v224 << v48) ^ (v225 >> v226 >> v227);
  v228 = ((((v219 & (LODWORD(STACK[0x6720]) ^ 0x839F32C4) ^ v186 & 0xD57B48A8) & 0x942E4556 ^ 0x842C4556)
         + (v219 & (LODWORD(STACK[0x6720]) ^ 0x839F32C4) ^ v186 & 0xD57B48A8 ^ 0x10420008)
         - ((v219 & (LODWORD(STACK[0x6720]) ^ 0x839F32C4) ^ v186 & 0xD57B48A8 ^ 0x10420008) & 0x942E4556)) >> 1) ^ 0x22AEA2AB;
  v229 = (v228 + 1457814124 - ((2 * v228) & 0xADC8F4D8)) ^ LODWORD(STACK[0x6720]);
  v230 = (LODWORD(STACK[0x6940]) ^ 0x1E4CDCCA) & STACK[0x6630] ^ v108 & 0x2670FE80;
  LODWORD(STACK[0x6940]) = (((((2 * (v217 & v229 ^ 0x1140401)) & 0x49FF4676) - (v217 & v229 ^ 0x1140401) + 1526750404) ^ 0x5A1458C5) >> v174 >> v144) ^ ((v192 & v229) << v196);
  v231 = (((v230 >> 1) ^ 0x10181900) - 2 * (((v230 >> 1) ^ 0x10181900) & 0x31E2280D ^ (v230 >> 1) & 1) + 836904972) ^ LODWORD(STACK[0x6930]);
  LOBYTE(v196) = v89;
  LODWORD(STACK[0x6750]) = (((((2 * (v231 & ~v33 ^ 0xC008480)) | 0xC3B4D93A) - (v231 & ~v33 ^ 0xC008480) + 505779043) ^ 0xEDDAE81D) << LODWORD(STACK[0x6398])) | ((v193 & v231) >> v107 >> v89);
  v232 = STACK[0x6520] & 0xBE17DFC8 ^ LODWORD(STACK[0x10D8]) ^ (LODWORD(STACK[0x6520]) ^ 0xDCB6C538) & (v155 ^ 0x20FBEF69);
  v233 = ((((2 * v232) | 0x1A5998D6) - v232 + 1926443925) >> 1) ^ 0xA958C75;
  v234 = (v233 - ((2 * v233) & 0xFB6A3542) + 2109020833) ^ LODWORD(STACK[0x6520]);
  v235 = STACK[0x67B0];
  v236 = v234 & 0x51A84A56 ^ 0x1084040 ^ (v234 ^ 0xA103DF99) & (LODWORD(STACK[0x67B0]) ^ 0xC4E50213);
  v237 = v234 & 0xC8FB1054 ^ 0x7A0054 ^ (v234 ^ 0xA103DF99) & (v33 ^ 0x3704EFAB);
  LOBYTE(v181) = STACK[0x6628];
  LODWORD(STACK[0x6930]) = ((((v237 | 0x9C88FC4F) - (v237 | 0x637703B0) + 1668744112) ^ 0x1CF1EC0B) << LODWORD(STACK[0x6518]) << LODWORD(STACK[0x64F8])) ^ ((((v236 | 0x3066E01A) - (v236 | 0xCF991FE5) - 812048411) ^ 0x306EEA4A) >> LODWORD(STACK[0x6780]) >> v181);
  v238 = LODWORD(STACK[0x6740]) ^ ((STACK[0x67E0] & (LODWORD(STACK[0x6740]) ^ 0x50646954) ^ v155 & 0x441BDF94) >> 1);
  v239 = STACK[0x6688] & 0x1C7D25B1 ^ 0x7D2491 ^ (v238 ^ 0xA069B31) & v192;
  LOBYTE(v204) = v106;
  v240 = v106 & 7 ^ 1;
  LODWORD(STACK[0x6388]) = v240;
  LODWORD(STACK[0x6740]) = ((((v239 | 0x189FDEB0) - (v239 | 0xE760214F) - 413130417) ^ 0x487DBB1) << v48) ^ ((v235 & 0xD0632DA2 ^ 0x90410800 ^ (v238 ^ 0xC6189322) & v217) >> v240);
  v241 = (LODWORD(STACK[0x6920]) ^ 0xFE267F9C) & (v155 ^ 0x98EAB4B1) ^ STACK[0x6920] & 0x6068410;
  v242 = (((v241 & 0x9FDF7C38 ^ 0x9BDD7C28) + (v241 ^ 0x4028010) - ((v241 ^ 0x4028010) & 0x9FDF7C38)) >> 1) ^ 0x4EEDFC1C;
  v243 = LODWORD(STACK[0x6730]) ^ (v242 + 889953100 - ((2 * v242) & 0x6A173698));
  v244 = ((v243 & v217 ^ 0x40880840 | 0xD4A9342E) - (v243 & v217 ^ 0x40880840 | 0x2B56CBD1) + 727108561) ^ 0x94213C6E;
  v245 = (146913727 - (v243 & v192 ^ 0x4966A10) + ((2 * (v243 & v192 ^ 0x4966A10)) | 0xEE7C8C82)) ^ LODWORD(STACK[0x10DC]);
  LODWORD(STACK[0x62E8]) = v206 & 0xB;
  v246 = v245 << (v206 & 0xB);
  LODWORD(STACK[0x62E0]) = v206 & 0x14;
  LOBYTE(v163) = v206;
  LOBYTE(v245) = STACK[0x6648];
  LOBYTE(v134) = STACK[0x67A0];
  LODWORD(STACK[0x6730]) = (v244 >> v245 >> v134) ^ (v246 << (v206 & 0x14));
  v247 = ((v155 ^ 0x64E001AA) & (LODWORD(STACK[0x66D8]) ^ 0x30ECF6A4) ^ STACK[0x66D8] & 0xFA0C310A) >> 1;
  v248 = ((v247 ^ 0x18061800) + 820836004 - 2 * ((v247 ^ 0x18061800) & 0x30ECF6BC ^ v247 & 0x18)) ^ LODWORD(STACK[0x66D8]);
  LODWORD(STACK[0x6720]) = ((((v248 & v192 ^ 0x20AC6A0E | 0xD4579D00)
                            - (v248 & v192 ^ 0x20AC6A0E | 0x2BA862FF)
                            + 732455679) ^ 0xF4FBF70E) << v48) ^ ((v248 & v193) >> LODWORD(STACK[0x6AA0]));
  v249 = v108 & 0xA38EDC5D ^ 0xA3045C54 ^ v219 & (LODWORD(STACK[0x6710]) ^ 0x93622AF9);
  v250 = (1054417845 - (v249 | 0x3ED923B5) + (v249 | 0xC126DC4A)) >> 1;
  v251 = ((v250 ^ 0x61D14823) + 820836004 - 2 * ((v250 ^ 0x61D14823) & 0x30ECF6BC ^ v250 & 0x18)) ^ LODWORD(STACK[0x6710]);
  v252 = v193;
  LOBYTE(v106) = v48;
  v253 = v204 & 0x1F ^ 9;
  LODWORD(STACK[0x6520]) = v253;
  LODWORD(STACK[0x6710]) = ((v193 & v251) >> v253) | ((v251 & ~v33) << v48);
  v254 = (LODWORD(STACK[0x64B8]) ^ 0xB55868BE) & v219;
  v255 = v108;
  v256 = LODWORD(STACK[0x10E0]) ^ ((-69140480
                                  - (v186 & 0xDCE172C ^ 0x54E012C ^ v254)
                                  + ((2 * (v186 & 0xDCE172C ^ 0x54E012C ^ v254)) | 0x83DEFDA)
                                  + 2067) >> 1);
  v257 = LODWORD(STACK[0x6260]) ^ (v256 - ((2 * v256) & 0xE4FBF132) - 226625383);
  LOBYTE(v16) = STACK[0x6480];
  LOBYTE(v89) = STACK[0x6478];
  LODWORD(STACK[0x6708]) = ((v257 & v217) >> v16 >> v89) | ((v257 & v192) << v48);
  v258 = STACK[0x64C8] & 0x2B5CA7A8 ^ 0x2950A320 ^ (v155 ^ 0xB5B09709) & (LODWORD(STACK[0x64C8]) ^ 0xA3B83CCE);
  v259 = ((((2 * v258) | 0x6D31D094) - v258 + 1231493046) >> 1) ^ 0x5E6837F1;
  v260 = (v259 - ((2 * v259) & 0x4770799C) - 1548206898) ^ LODWORD(STACK[0x64C8]);
  LODWORD(STACK[0x6468]) = v163 & 7;
  LODWORD(STACK[0x6700]) = (((128053205
                            - (v260 & v192 ^ 0x38412417)
                            + ((2 * (v260 & v192 ^ 0x38412417)) & 0xF0BC18BA)
                            + 973) ^ 0x3FE0D7B5) << (v163 & 7)) | ((v260 & v193) >> v196 >> v107);
  v261 = STACK[0x66A0] & 0x7403EA5E ^ 0x10010040 ^ (LODWORD(STACK[0x66A0]) ^ 0xC77F4161) & (v155 ^ 0xEAEFDAFF);
  v262 = LODWORD(STACK[0x66F8]) ^ ((((2 * v261) | 0x6DFDB32E) - v261 + 1224812137) >> 1);
  v263 = v33;
  v264 = ((v262 ^ 0x41BECCB3) & ~v33 | v33 & 0x8B93A137) ^ 0x190A004;
  v265 = v235 & 0xBB1CFDAD ^ 0xA2148181 ^ (v262 ^ 0x71319029) & v217;
  v266 = STACK[0x63C8];
  v267 = (v108 ^ 0xF5FE25CB) & (v266 ^ 0x9F943B48) ^ v266 & 0x1C4F1692;
  LODWORD(STACK[0x66F8]) = (((((2 * v264) & 0x1A6A6BB6) - v264 - 221591004) ^ 0x78C9CB17) << (v163 & 0x15) << (v163 & 0xA)) | (((202390781 - v265 + ((2 * v265) | 0xE7DF8606)) ^ 0xC0F70A87) >> v245 >> v134);
  v268 = (((v267 & 0x4F194DEB ^ 0x4B1049EB) + (v267 & 0xB0E6B214 ^ 0x10041201) - 1) >> 1) ^ 0x238824F5;
  v269 = (v268 - ((2 * v268) & 0x3F287690) - 1617675448) ^ v266;
  LODWORD(STACK[0x64C8]) = ((v252 & v269) >> LODWORD(STACK[0x6430])) + ((v192 & v269) << v48);
  v270 = STACK[0x66E0] & 0x548F23D0 ^ 0x140F2110 ^ (v108 ^ 0xBD3E1089) & (LODWORD(STACK[0x66E0]) ^ 0xEED7AC82);
  v271 = (v270 - ((2 * v270) & 0xB6E59D38) - 613232996) >> 1;
  v272 = v271 ^ 0x45FD6786;
  v273 = v271 & 0x57D85CFE ^ 0x4980870 ^ (v271 ^ 0x45FD6786) & (LODWORD(STACK[0x66E0]) ^ 0x390FF07C);
  v274 = (LODWORD(STACK[0x66E0]) ^ 0xEED7AC82)
       + v272
       + ((2 * ((LODWORD(STACK[0x10E4]) | (2 * v273)) - v273) - 2076998562) ^ 0x6B31DB1)
       + 1;
  LOBYTE(v204) = STACK[0x6790];
  LOBYTE(v253) = STACK[0x6660];
  v275 = ((v252 & v274) >> v204 >> v253) | ((v192 & v274) << v48);
  v276 = ((v155 ^ 0x6EF88118) & (LODWORD(STACK[0x63D8]) ^ 0x9F943B48) ^ STACK[0x63D8] & 0xF014B1B8) >> 1;
  v277 = ((v276 ^ 0x480A1884) - 2 * ((v276 ^ 0x480A1884) & 0x1F943B4A ^ v276 & 2) - 1617675448) ^ LODWORD(STACK[0x63D8]);
  LODWORD(STACK[0x64C0]) = ((((v277 & ~v33 & STACK[0x10E8] ^ 0xE138C475) + (v277 & ~v33 & 0x1AC6390B) - 1) ^ 0xE138C474) << LODWORD(STACK[0x6640]) << LODWORD(STACK[0x6638])) ^ ((((v277 & v217 ^ 0x8413C228 | 0xA36AB571) - (v277 & v217 ^ 0x8413C228 | 0x5C954A8E) + 1553287822) ^ 0x27797759) >> LODWORD(STACK[0x6410]) >> LODWORD(STACK[0x6418]));
  v278 = (v108 ^ 0xEC9BE1EF) & (LODWORD(STACK[0x66F0]) ^ 0xEED7AC82) ^ STACK[0x66F0] & 0x52AD2B6;
  v279 = (((v278 & 0xE9C0168C ^ 0xE9C0040D | v278 & 0x163FE972) - 1) >> 1) ^ 0x76E14247;
  v280 = (v279 - 287855486 - ((2 * v279) & 0xDDAF5904)) ^ LODWORD(STACK[0x66F0]);
  LOBYTE(v33) = STACK[0x6780];
  LOBYTE(v245) = v181;
  v281 = (((((2 * (v192 & v280 ^ 0x21040410)) & 0x7427671E) - (v192 & v280 ^ 0x21040410) + 1173113968) ^ 0x64E84860) << v106)
       + ((v217 & v280) >> v33 >> v181);
  v282 = (v155 ^ 0x91FB80F2) & (LODWORD(STACK[0x63B0]) ^ 0x9F943B48) ^ STACK[0x63B0] & 0xF17B052;
  v283 = (((v282 >> 1) ^ 0x78A1820) - 2 * (((v282 >> 1) ^ 0x78A1820) & 0x1F943B4F ^ (v282 >> 1) & 7) - 1617675448) ^ LODWORD(STACK[0x63B0]);
  LOBYTE(v181) = STACK[0x6360];
  LOBYTE(v196) = STACK[0x6368];
  LODWORD(STACK[0x64B8]) = ((v283 & ~v263) << v181 << v196) ^ ((v283 & v252) >> v16 >> v89);
  v284 = (LODWORD(STACK[0x66A8]) ^ 0x28B29913) & STACK[0x6498] ^ v108 & 0x8006F394;
  v285 = (((v284 & 0xD7A5E21E ^ 0xD7A1400B) + (v284 & 0x285A1DE0) - 1) >> 1) ^ 0x2BD0B98D;
  v286 = (v285 - ((2 * v285) & 0x58C0438E) + 744497607) ^ LODWORD(STACK[0x6510]);
  LODWORD(STACK[0x66F0]) = (((((2 * (v286 & v217 ^ 0x411808A4)) | 0x88798A3C) - (v286 & v217 ^ 0x411808A4) - 1144833310) ^ 0x524CDBA) >> v204 >> v253) | ((v286 & ~v263) << v106);
  v287 = STACK[0x6340] & 0xB390A25C ^ 0x9310025C ^ (v155 ^ 0x2D7C92FD) & (LODWORD(STACK[0x6340]) ^ 0x9F943B48);
  v288 = ((v287 - ((2 * v287) & 0xFCDC5E7E) - 26333377) >> 1) ^ 0x7F770795;
  v289 = (v288 - ((2 * v288) & 0x3F287690) - 1617675448) ^ LODWORD(STACK[0x6340]);
  v290 = STACK[0x66E8];
  v291 = (v108 ^ 0xF5A8376B) & (v290 ^ 0x8D6048AA) ^ v290 & STACK[0x10EC];
  v292 = (v291 & 0xDFC69101 ^ 0xCFC69101) + (v291 ^ 0x10080000) - ((v291 ^ 0x10080000) & 0xDFC69101);
  v293 = -2140180159 - (v289 & v192 ^ 0x49810237 | 0x806F7141) + (v289 & v192 ^ 0x49810237 | 0x7F908EBE);
  v294 = (v289 & v252) >> LODWORD(STACK[0x63A0]) >> LODWORD(STACK[0x63A8]);
  v295 = v292 >> 1;
  v296 = (((v290 ^ 0x1D4955C4) - 491345348) ^ ((v290 ^ 0x34E0C995) - 887146901) ^ ((v290 ^ 0xA4C9D4FB) + 1530276613))
       - ((((v292 >> 1) ^ v290 ^ 0xFFCCE3CF) - 1832944281) ^ (((v292 >> 1) ^ v290 ^ 0x6E232B51) + 55621113) ^ (((v292 >> 1) ^ v290 ^ 0x7D68C8A5) + 270226957))
       - 1908734899;
  v297 = (v296 ^ 0x2955C2EE) & (2 * (v296 & 0x8119E2F0)) ^ v296 & 0x8119E2F0;
  v298 = ((2 * (v296 ^ 0x2B7402CE)) ^ 0x54DBC07C) & (v296 ^ 0x2B7402CE) ^ (2 * (v296 ^ 0x2B7402CE)) & 0xAA6DE03E;
  v299 = (v298 ^ 0xA249A002) & (4 * v297) ^ v297;
  v300 = ((4 * (v298 ^ 0xAA242002)) ^ 0xA9B780F8) & (v298 ^ 0xAA242002) ^ (4 * (v298 ^ 0xAA242002)) & 0xAA6DE03C;
  v301 = (v300 ^ 0xA8258020) & (16 * v299) ^ v299;
  v302 = ((16 * (v300 ^ LODWORD(STACK[0x10F0]))) ^ 0xA6DE03E0) & (v300 ^ LODWORD(STACK[0x10F0])) ^ (16
                                                                                                  * (v300 ^ LODWORD(STACK[0x10F0]))) & 0xAA6DE030;
  v303 = v301 ^ 0xAA6DE03E ^ (v302 ^ 0xA24C0000) & (v301 << 8);
  v304 = (v303 << 16) & 0x2A6D0000 ^ v303 ^ ((v303 << 16) ^ 0x603E0000) & (((v302 ^ 0x821E01E) << 8) & 0x2A6D0000 ^ 0x20D0000 ^ (((v302 ^ 0x821E01E) << 8) ^ 0x6DE00000) & (v302 ^ 0x821E01E));
  v305 = ((v295 ^ 0x5AE6758D) + 932571941) ^ ((v295 ^ 0x95B80B54) - 120875522) ^ ((v295 ^ 0xAEB93648) - 1010128670);
  v306 = v296 ^ v295 ^ (-761272382 - v305 - ((422161522 - 2 * v305) & 0x8C162312)) ^ (2 * v304);
  LOBYTE(v89) = v181;
  LODWORD(STACK[0x66A0]) = ((v293 ^ 0x36118C89) << v181 << v196) ^ v294;
  v307 = (((v290 ^ 0x574371E8) - 1464037864) ^ ((v290 ^ 0xAE087EBC) + 1375174980) ^ ((v290 ^ 0x742B47FE) - 1948993534))
       + 1239062891
       + (((v306 ^ 0x145FE0CB) + 1205047241) ^ ((v306 ^ 0x507AED2) + 1451999698) ^ ((v306 ^ 0x232E358D) + 1889688207));
  v308 = ((2 * (v307 ^ 0xB9566BB9)) ^ 0xB1BBE23C) & (v307 ^ 0xB9566BB9) ^ (2 * (v307 ^ 0xB9566BB9)) & 0x58DDF11E;
  v309 = 2 * (v307 & 0xE18B9AA7);
  v310 = v308 ^ 0x48441102;
  v311 = (v308 ^ 0x4018E01E) & (4 * (v309 & (v307 ^ 0xF9435AB7) ^ v307 & 0xE18B9AA7)) ^ v309 & (v307 ^ 0xF9435AB7) ^ v307 & 0xE18B9AA7;
  v312 = ((4 * v310) ^ 0x6377C478) & v310 ^ (4 * v310) & 0x58DDF11C;
  v313 = (v312 ^ 0x4055C010) & (16 * v311) ^ v311;
  v314 = ((16 * (v312 ^ 0x18883106)) ^ 0x8DDF11E0) & (v312 ^ 0x18883106) ^ (16 * (v312 ^ 0x18883106)) & 0x58DDF110;
  v315 = v313 ^ 0x58DDF11E ^ (v314 ^ 0x8DD1100) & (v313 << 8);
  v316 = v235 & 0x8003CCB4 ^ 0x80038484 ^ v217 & (v307 ^ 0x700BB42F ^ (2
                                                                     * ((v315 << 16) & 0x58DD0000 ^ v315 ^ ((v315 << 16) ^ 0x711E0000) & (((v314 ^ 0x5000E01E) << 8) & 0x58DD0000 ^ (((v314 ^ 0x5000E01E) << 8) ^ 0xDDF10000) & (v314 ^ 0x5000E01E) ^ 0xC0000))));
  v317 = v309 & (v307 ^ 0xDDEB1086) ^ v307 & 0xE18B9AA7;
  v318 = ((2 * (v307 ^ 0x5DFE30C8)) ^ 0x78EB54DE) & (v307 ^ 0x5DFE30C8) ^ (2 * (v307 ^ 0x5DFE30C8)) & 0xBC75AA6E;
  v319 = (v318 ^ 0x860000D) & (4 * v317) ^ v317;
  v320 = ((4 * (v318 ^ 0x8414AA21)) ^ 0xF1D6A9BC) & (v318 ^ 0x8414AA21) ^ (4 * (v318 ^ 0x8414AA21)) & 0xBC75AA6C;
  v321 = (v320 ^ 0xB054A820) & (16 * v319) ^ v319;
  v322 = ((16 * (v320 ^ 0xC210243)) ^ 0xC75AA6F0) & (v320 ^ 0xC210243) ^ (16 * (v320 ^ 0xC210243)) & 0xBC75AA60;
  v323 = v321 ^ 0xBC75AA6F ^ (v322 ^ 0x8450A200) & (v321 << 8);
  v324 = v263;
  v325 = (v263 & 0x824CB674 | (v307 ^ (2
                                     * ((v323 << 16) & 0x3C750000 ^ v323 ^ ((v323 << 16) ^ 0x2A6F0000) & (((v322 ^ LODWORD(STACK[0x10F4])) << 8) & 0xBC750000 ^ 0x8550000 ^ (((v322 ^ LODWORD(STACK[0x10F4])) << 8) ^ 0x75AA0000) & (v322 ^ LODWORD(STACK[0x10F4]))))) ^ 0x4BE6780D) & ~v263) ^ 0x204A634;
  v326 = STACK[0x6528];
  v327 = STACK[0x6308];
  LODWORD(STACK[0x66E8]) = ((((v316 | 0x40D3AB8B) - (v316 | 0xBF2C5474) - 1087613836) ^ 0x40D1670B) >> LODWORD(STACK[0x64A0]) >> LODWORD(STACK[0x64A8])) ^ LODWORD(STACK[0x6528]) ^ LODWORD(STACK[0x6308]) ^ 0x9E0B5774 ^ (((v325 - ((2 * v325) & 0x5AB6C380) + 760963520) ^ 0xAD137180) << v106);
  v328 = STACK[0x6470];
  v329 = LODWORD(STACK[0x6270]) ^ (((((LODWORD(STACK[0x6438]) ^ 0x41895C17) & v328 ^ v155 & 0x3857EF05) & 0x52C3E427 ^ 0x52C38027)
                                  + ((LODWORD(STACK[0x6438]) ^ 0x41895C17) & v328 ^ v155 & 0x3857EF05 ^ 0x8006500)
                                  - (((LODWORD(STACK[0x6438]) ^ 0x41895C17) & v328 ^ v155 & 0x3857EF05 ^ 0x8006500) & 0x52C3E427)) >> 1);
  v330 = STACK[0x65F0] & 0xF5835A1E ^ 0x44014800 ^ (v329 ^ 0xBC71EEFE) & v252;
  v331 = STACK[0x6688];
  v332 = STACK[0x6688] & 0xF3F0CD36 ^ 0x92C04110 ^ (v329 ^ 0xBA0279D6) & v192;
  LOBYTE(v290) = v196;
  v333 = (((v332 - ((2 * v332) & 0x94230A0A) + 1242662149) ^ 0x4B314503) << v196 << v181)
       + (((((2 * v330) & 0xC78447CA) - v330 + 473816090) ^ 0x583C941A) >> v245 >> v33);
  v334 = v333 - ((2 * v333) & 0x9EC6566A);
  v335 = STACK[0x64F0];
  v336 = STACK[0x6630];
  v337 = LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6318]);
  LODWORD(STACK[0x6920]) = v337 ^ 0x39B6692F ^ (v334 + 1331899189);
  v338 = ((v335 ^ 0x74016A56) & v336 ^ v255 & 0xB5ACF0C4) >> 1;
  v339 = ((v338 ^ 0x50D01820) - 2 * ((v338 ^ 0x50D01820) & 0x1ADF2A02 ^ v338 & 2) - 1696650752) ^ v335;
  LOBYTE(v181) = STACK[0x67A0];
  LOBYTE(v196) = STACK[0x6648];
  v340 = (((LODWORD(STACK[0x66B0]) ^ 0xBCE455B2) & STACK[0x67E0] ^ v155 & 0x34B006BE) >> 1) ^ 0xA500050;
  LODWORD(STACK[0x66E0]) = v326 ^ v327 ^ 0x9E0B5774 ^ ((((v339 ^ 0x5B72B092) & v252) >> v181 >> v196) | ((v339 & 0xAB9ACCB3 ^ 0xB128092 ^ (v339 ^ 0x5B72B092) & (v331 ^ 0x347D7F65)) << v106));
  v341 = (v340 - ((2 * v340) & 0x4A89F49A) + 625277517) ^ LODWORD(STACK[0x64E8]);
  LODWORD(STACK[0x66D8]) = v337 ^ ((v341 & v217) >> LODWORD(STACK[0x6388])) ^ 0x76D5421A ^ ((((v341 & v192 & 0x505EDE6F ^ LODWORD(STACK[0x10F8]))
                                                                                            + (v341 & v192 & 0xAFA12190 ^ 0x12081)
                                                                                            - 1) ^ 0x504BEEE7) << v106);
  v342 = LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6A60]);
  LODWORD(STACK[0x66A8]) = v281;
  v343 = v342 ^ LODWORD(STACK[0x6A30]) ^ v281 ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6710]) ^ LODWORD(STACK[0x6A10]);
  v344 = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x69A0]);
  LODWORD(STACK[0x66B0]) = v275;
  LODWORD(STACK[0x6510]) = v343 ^ v344 ^ v275 ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x67E0]) = LODWORD(STACK[0x6408]) ^ LODWORD(STACK[0x6600]) ^ v337 ^ LODWORD(STACK[0x6440]) ^ LODWORD(STACK[0x6290]) ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x62D0]) ^ LODWORD(STACK[0x6280]) ^ LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x62B8]) ^ LODWORD(STACK[0x6298]) ^ 0x94C167B4;
  v345 = LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x62F0]);
  v346 = LODWORD(STACK[0x63F8]) ^ LODWORD(STACK[0x62F0]);
  LODWORD(STACK[0x6600]) = LODWORD(STACK[0x6530]) ^ LODWORD(STACK[0x62F0]) ^ v327;
  LODWORD(STACK[0x6530]) = v346 ^ v327;
  v347 = (((v255 ^ 0xA2CE13C4) & (LODWORD(STACK[0x66D0]) ^ 0x97384054) ^ STACK[0x66D0] & 0x4B7F209C) >> 1) ^ 0x19C000A;
  v348 = (v347 + 635143390 - ((2 * v347) & 0x4BB709BC)) ^ LODWORD(STACK[0x6540]);
  v349 = LODWORD(STACK[0x63C0]) ^ v326;
  v350 = STACK[0x6310];
  LODWORD(STACK[0x6528]) = v345 ^ LODWORD(STACK[0x6310]);
  LODWORD(STACK[0x6540]) = v349 ^ v350;
  v351 = LODWORD(STACK[0x6300]) ^ LODWORD(STACK[0x62F8]);
  LODWORD(STACK[0x6290]) = LODWORD(STACK[0x6400]) ^ v337;
  LODWORD(STACK[0x64E8]) = LODWORD(STACK[0x6358]) ^ v337;
  LODWORD(STACK[0x64F0]) = v337 ^ v351;
  LOBYTE(v245) = STACK[0x6AA0];
  LOBYTE(v281) = v89;
  LOBYTE(v326) = v290;
  LODWORD(STACK[0x6408]) = ((((v348 & ~v263 & 0xC279103D ^ 0xC239001D) + (v348 & ~v263 & 0x3D86EFC2 ^ 0x11000941) - 1) ^ LODWORD(STACK[0x10FC])) << v89 << v290) | (((((2 * (v217 & v348 ^ 0x85000340)) | 0x57B066E8) - (v217 & v348 ^ 0x85000340) + 1411894412) ^ 0x2ED83034) >> v245);
  v352 = ((v155 ^ 0x203F6120) & (LODWORD(STACK[0x6698]) ^ 0xDC77B9EA) ^ STACK[0x6698] & 0xBED35180) >> 1;
  v353 = ((v352 ^ 0x4E2988C0) + 1304045781 - 2 * ((v352 ^ 0x4E2988C0) & 0x4DBA28DD ^ v352 & 8)) ^ LODWORD(STACK[0x6538]);
  LODWORD(STACK[0x6400]) = ((((v353 & v192 & 0x41648A3A ^ 0x1608A12)
                            + (v353 & v192 ^ 0x68850129)
                            - ((v353 & v192 ^ 0x68850129) & 0x41648A3A)) ^ 0x29E18B13) << v106) ^ ((v353 & v252) >> LODWORD(STACK[0x6520]));
  v354 = (((v255 ^ 0xBCA1FE86) & (LODWORD(STACK[0x6690]) ^ 0xE287FEDC) ^ STACK[0x6690] & 0x5510CDDE) >> 1) ^ 0x2000666E;
  v355 = (v354 - 569453452 - ((2 * v354) & 0xBC1DA8E8)) ^ LODWORD(STACK[0x6548]);
  LOBYTE(v263) = v106;
  LOBYTE(v335) = STACK[0x6668];
  v356 = STACK[0x6668] & 0xC ^ 8;
  v357 = STACK[0x6680];
  v358 = STACK[0x6680] & 0x13 ^ 1;
  LODWORD(STACK[0x6538]) = v356;
  LODWORD(STACK[0x6548]) = v358;
  LODWORD(STACK[0x63F8]) = ((v252 & v355) >> v356 >> v358) | (((((2 * (v192 & v355 ^ 0x124C860)) & 0x1A340892)
                                                              - (v192 & v355 ^ 0x124C860)
                                                              - 219808842) ^ 0xF3C133D6) << v106);
  v359 = v155 & 0x52C92451 ^ 0x12092041 ^ v328 & (LODWORD(STACK[0x6620]) ^ 0x19FDA0E3);
  v360 = ((v359 - ((2 * v359) & 0x72CC3DBEu) - 1184489761) >> 1) ^ 0x5CD38F4F;
  v361 = (v360 - 663519202 - ((2 * v360) & 0xB0E7003C)) ^ LODWORD(STACK[0x6558]);
  LOBYTE(v327) = v181;
  LODWORD(STACK[0x6698]) = (((((2 * (v361 & ~v324 ^ 0x88086008)) | 0xE0356ADE) - (v361 & ~v324 ^ 0x88086008) + 266685073) ^ 0x7812D567) << LODWORD(STACK[0x65C8]) << LODWORD(STACK[0x65D0])) | ((v361 & v217) >> v196 >> v181);
  v362 = STACK[0x6498];
  v363 = STACK[0x6498] & (LODWORD(STACK[0x6598]) ^ 0x27528A51) ^ v255 & 0xA292FC21;
  v364 = ((v363 & 0xA235113B ^ 0x2025111B)
        + (v363 ^ LODWORD(STACK[0x1100]))
        - ((v363 ^ LODWORD(STACK[0x1100])) & 0xA235113B)) >> 1;
  v365 = ((v364 ^ 0x405AC28D) + 1053242344 - 2 * ((v364 ^ 0x405AC28D) & 0x3EC733FA ^ v364 & 0x12)) ^ LODWORD(STACK[0x6550]);
  v366 = (((v192 & v365 & 0x5C932CAC ^ 0x5C832C29) + (v192 & v365 & 0xA36CD353) - 1) ^ 0x5C832C28) << v263;
  v367 = v252 & v365;
  LOBYTE(v365) = v335 & 0x15 ^ 1;
  LOBYTE(v345) = v357 & 0xA ^ 8;
  LODWORD(STACK[0x6440]) = (v367 >> v345 >> v365) ^ v366;
  v368 = v328 & (LODWORD(STACK[0x6608]) ^ 0xCFE440F6) ^ v155 & 0x38958B9E;
  v369 = (((v368 & 0xF39F6CEE ^ 0xE30B6463 | v368 & STACK[0x1104]) - 1) >> 1) ^ 0x7DC7B271;
  v370 = (v369 + 1779520952 - ((2 * v369) & 0xD422AB70)) ^ LODWORD(STACK[0x6568]);
  LOBYTE(v328) = v245;
  LODWORD(STACK[0x6608]) = (((((2 * (v370 & ~v324 ^ 0x1405A20)) & 0xD4D39FAA) - (v370 & ~v324 ^ 0x1405A20) + 362164266) ^ 0x14D66A0A) << v326 << v281) ^ ((((v370 & v217 & 0xB0C831E0 ^ 0x908810E1) + (v370 & v217 & 0x4F37CE1F) - 1) ^ 0x908810E0) >> v245);
  v371 = STACK[0x63F0] & 0x38648457 ^ 0x10600003 ^ (v155 ^ 0xA688B4F6) & (LODWORD(STACK[0x63F0]) ^ 0x4D6DFF8D);
  v372 = ((((2 * v371) | 0x2E28E53A) - v371 + 1760267619) >> 1) ^ 0x47887B4D;
  v373 = (v372 + 1214826777 - ((2 * v372) & 0x90D19232)) ^ LODWORD(STACK[0x6560]);
  LODWORD(STACK[0x66D0]) = (((((2 * (v373 & v217 ^ 0x24420002)) & 0xD97026BC) - (v373 & v217 ^ 0x24420002) - 1824002911) ^ 0xB705ECA3) >> LODWORD(STACK[0x65C0]) >> LODWORD(STACK[0x65B8])) ^ (((1370515026 - (v373 & ~v324 ^ 0xA4000418) + ((2 * (v373 & ~v324 ^ 0xA4000418)) & 0x5C9F1BFE) + 2990) ^ 0xF5B07618) << v263);
  v374 = (v336 & (LODWORD(STACK[0x63E0]) ^ 0xC6596594) ^ v255 & STACK[0x1108]) >> 1;
  v375 = ((v374 ^ 0x30D89108) - 1277148381 - 2 * ((v374 ^ 0x30D89108) & 0x33E04337 ^ v374 & 0x14)) ^ LODWORD(STACK[0x63E0]);
  v376 = v255 & 0xE0650117 ^ 0x20640105 ^ v362 & (LODWORD(STACK[0x6610]) ^ 0xB4510540);
  LOBYTE(v181) = STACK[0x6278];
  LODWORD(STACK[0x63F0]) = ((v252 & v375) >> v327 >> v196) | ((((v192 & v375 & 0x2304839C ^ 0x2004811D)
                                                              + (v192 & v375 & 0xDCFB7C63)
                                                              - 1) ^ 0x2004811C) << LODWORD(STACK[0x6380]) << v181);
  v377 = STACK[0x64B0] & 0xAE9877AB ^ 0x288050B ^ (v255 ^ 0x472944F2) & STACK[0x63E8];
  v378 = ((v377 - ((2 * v377) & 0x59946F0A) + 751449989) >> 1) ^ 0x152D3B83;
  v379 = (v378 + 452989448 - ((2 * v378) & 0x36002410)) ^ LODWORD(STACK[0x6488]);
  v380 = ((v379 & ~v324 & 0x470B6F15 ^ 0x70B6814)
        + (v379 & ~v324 ^ 0xC0109709)
        - ((v379 & ~v324 ^ 0xC0109709) & 0x470B6F15)) ^ 0x871BF81C;
  v381 = (v252 & v379) >> v327 >> v196;
  LOBYTE(v326) = STACK[0x62E8];
  LOBYTE(v327) = STACK[0x62E0];
  LODWORD(STACK[0x63E8]) = (v380 << v326 << v327) + v381;
  v382 = (1852630338 - (v376 | 0x6E6CE542) + (v376 | 0x91931ABD)) >> 1;
  v383 = ((v382 ^ 0x28EB0D54) + 1042832663 - 2 * ((v382 ^ 0x28EB0D54) & 0x3E285D1F ^ v382 & 8)) ^ LODWORD(STACK[0x6580]);
  LODWORD(STACK[0x6630]) = (v192 & v383 & 0x1D15EF71 ^ 0x15148F71)
                         + (v192 & v383 ^ 0x8A816000)
                         - ((v192 & v383 ^ 0x8A816000) & 0x1D15EF71);
  LODWORD(STACK[0x6620]) = (v217 & v383 ^ 0x80481088 | 0xC9834F3B) - (v217 & v383 ^ 0x80481088 | 0x367CB0C4);
  v384 = STACK[0x6588];
  v385 = v255 & 0x69021DCD ^ 0x61020D89 ^ v362 & (LODWORD(STACK[0x6588]) ^ 0xADD820E6);
  v386 = STACK[0x6578] & 0x8B541A96 ^ 0x80541892 ^ (v155 ^ 0x15B82A37) & (LODWORD(STACK[0x6578]) ^ 0x141C6EFA);
  v387 = ((((2 * v386) | 0xFB44E898) - v386 - 2107798604) >> 1) ^ 0x7EF13326;
  v388 = (v387 + 194140187 - ((2 * v387) & 0x1724B036)) ^ LODWORD(STACK[0x6570]);
  LODWORD(STACK[0x63E0]) = ((v388 & ~v324) << v327 << v326) ^ ((v388 & v252) >> v345 >> v365);
  v389 = ((v155 ^ LODWORD(STACK[0x110C])) & (LODWORD(STACK[0x6670]) ^ 0x662FFE84) ^ STACK[0x6670] & 0x597F5D70) >> 1;
  v390 = ((v389 ^ 0x2017AE00) + 218449377 - 2 * ((v389 ^ 0x2017AE00) & 0xD0545FD ^ v389 & 0x1C)) ^ LODWORD(STACK[0x6590]);
  LODWORD(STACK[0x6690]) = (((((2 * (v390 & v217 ^ 0x20A52012)) | 0x3819927C) - (v390 & v217 ^ 0x20A52012) + 1676883650) ^ 0xBCA9E92C) >> v245) ^ (((((2 * (v390 & v192 ^ 0x8140124)) | 0x5336A8E) - (v390 & v192 ^ 0x8140124) - 43627847) ^ 0xA8DB463) << v263);
  v391 = (v385 - ((2 * v385) & 0xDC4492A0) - 299742896) >> 1;
  v392 = ((v391 ^ 0x73102AC8) - 992330453 - 2 * ((v391 ^ 0x73102AC8) & 0x44DA3D3F ^ v391 & 0x14)) ^ v384;
  v393 = v255;
  v394 = v255 & 0xD04E6155 ^ 0x10420115 ^ v362 & (LODWORD(STACK[0x6618]) ^ 0x624D017C);
  v395 = STACK[0x6650] & 0x1B;
  LODWORD(STACK[0x6588]) = v395;
  v396 = STACK[0x6678] & 4;
  LODWORD(STACK[0x6598]) = v396;
  LODWORD(STACK[0x63D8]) = (((((2 * (v392 & ~v324 ^ 0x9E95C64)) | 0x87786176) - (v392 & ~v324 ^ 0x9E95C64) + 1011076933) ^ 0xCA556CDF) << v395 << v396)
                         + ((v252 & v392) >> v358 >> v356);
  v397 = (((((v394 | 0x40284581) - (v394 | 0xBFD7BA7E) - 1076381058) >> 1) ^ 0x483532E2)
        + 126373147
        - 2
        * (((((v394 | 0x40284581) - (v394 | 0xBFD7BA7E) - 1076381058) >> 1) ^ 0x483532E2) & 0x7884D1F ^ (((v394 | 0x40284581) - (v394 | 0xBFD7BA7E) - 1076381058) >> 1) & 4)) ^ LODWORD(STACK[0x63D0]);
  LODWORD(STACK[0x6410]) = v192;
  LODWORD(STACK[0x6418]) = v217;
  v398 = ((((2 * (v192 & v397 ^ 0x8204500)) | 0x229C96CE) - (v192 & v397 ^ 0x8204500) + 1857139865) ^ 0x996E0E67) << LODWORD(STACK[0x65E0]) << LODWORD(STACK[0x65E8]);
  LOBYTE(v356) = STACK[0x6628];
  LOBYTE(v192) = STACK[0x6780];
  LODWORD(STACK[0x6618]) = ((((v217 & v397 ^ 0x81F4304C | 0x20E6861) - (v217 & v397 ^ 0x81F4304C | 0xFDF1979E) - 34498658) ^ 0x83FA582D) >> v356 >> v192) ^ v398;
  v399 = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6258]) - 12801);
  v400 = (unsigned __int8 *)STACK[0x6AB0];
  v401 = *(unsigned __int8 *)(v399 + (*(unsigned __int8 *)(STACK[0x6AB0] + 12) ^ 0xAALL));
  v402 = (unint64_t)*(&off_1015B46D0 + (int)(STACK[0x6258] & 0x9E2A8056)) - 8;
  v403 = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6258]) - 11789) - 8;
  v404 = *(unsigned __int8 *)(v403 + (*(unsigned __int8 *)(STACK[0x6AB0] + 11) ^ 0xC4));
  v405 = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6258]) - 13782);
  v406 = v404 ^ 0x81 ^ ((((v400[10] ^ 0xCC) - 111) ^ 0xFB ^ *(unsigned __int8 *)(v402
                                                                                                + (v400[10] ^ 0x92))) << (v404 & 8) << (v404 & 8 ^ 8));
  v407 = (((v401 + 6) ^ (v401 << 7) ^ (8 * (v401 + 6)) ^ 0xE0) << 24) | ((*(unsigned __int8 *)(v402 + (v400[13] ^ 9)) ^ ((v400[13] ^ 0x57) - 111) ^ 0x3E) << 16);
  v408 = ((v400[3] ^ 0x84) - 111) ^ 0x8A ^ *(unsigned __int8 *)(v402 + (v400[3] ^ 0xDALL)) | ((*(unsigned __int8 *)(v405 + (*v400 ^ 0x5ELL)) ^ 0xFC) << 24);
  v409 = *(unsigned __int8 *)(v403 + (*(unsigned __int8 *)(STACK[0x6AB0] + 15) ^ 1)) ^ 0xE2 | v407;
  v410 = *(unsigned __int8 *)(v405 + (v400[7] ^ 0xC1)) ^ 0x77 | ((*(unsigned __int8 *)(v405 + (v400[5] ^ 0x69)) ^ 0xEF) << 16) | ((((v400[6] ^ 0x20) - 111) ^ 0xA ^ *(unsigned __int8 *)(v402 + (v400[6] ^ 0x7ELL))) << 8);
  v411 = v406 | ((*(unsigned __int8 *)(v403 + (*(unsigned __int8 *)(STACK[0x6AB0] + 8) ^ 0x83)) ^ 1) << 24);
  v412 = *(unsigned __int8 *)(STACK[0x6AB0] + 4) ^ 0x96;
  STACK[0x63C0] = v403;
  LODWORD(STACK[0x6678]) = v410 | ((*(unsigned __int8 *)(v403 + v412) ^ 0x3F) << 24);
  LOBYTE(v410) = *(_BYTE *)(v405 + (v400[9] ^ 0xF7));
  v413 = v400[2];
  STACK[0x63D0] = v399;
  LOBYTE(v412) = (*(_BYTE *)(v399 + v413) + 6) ^ (8 * (*(_BYTE *)(v399 + v413) + 6)) ^ ((*(_BYTE *)(v399 + v413) << 7) | 0x42);
  LODWORD(STACK[0x6650]) = v411 | ((((v410 + (v410 ^ 0x9C) + 1) ^ 0xFE) + v410) << 16);
  v414 = v400[14] ^ 0x31;
  STACK[0x63B8] = v405;
  LODWORD(STACK[0x6670]) = v409 | ((*(unsigned __int8 *)(v405 + v414) ^ 0xE9) << 8);
  v415 = v400[1];
  STACK[0x63C8] = v402;
  LODWORD(STACK[0x6668]) = v408 & 0xFFFF00FF | (v412 << 8) | ((*(unsigned __int8 *)(v402 + (v415 ^ 0x9E)) ^ ((v415 ^ 0xC0) - 111) ^ 0xE3) << 16);
  v416 = v393 >> 1;
  LODWORD(v415) = ((v393 >> 1) & 0x667D5F98 ^ 0xDC300908 | 0x896F6E71)
                - ((v393 >> 1) & 0x667D5F98 ^ 0xDC300908 | 0x7690918E)
                + 1989185934;
  v417 = v415 & 0x4AEDDCD9 ^ 0x4A80D000 ^ (v331 ^ 0xD50A6F0F) & (v415 ^ 0xFDFDC1C1);
  LODWORD(v405) = STACK[0x67B0];
  LODWORD(v415) = v415 & 0x6F9EDCF1 ^ 0x679C80D7 ^ (LODWORD(STACK[0x67B0]) ^ 0xFAD394B2) & (v415 ^ 0xFDFDC1C1);
  v418 = v155 >> 1;
  v419 = (v418 & 0x667D5F98 ^ 0x625C1924 | 0x2D78EE41) - (v418 & 0x667D5F98 ^ 0x625C1924 | 0xD28711BE) - 762900034;
  LODWORD(v412) = v419 & 0xBEB6DCB9 ^ 0x84A25001 ^ (v419 ^ 0xC5AA5045) & (v324 ^ 0x41492346);
  v420 = (v419 ^ 0xC5AA5045) & v252;
  LOBYTE(v217) = v357 & 0xF ^ 9;
  LOBYTE(v419) = v263;
  LODWORD(v412) = (_DWORD)v412 << v263;
  LODWORD(STACK[0x63B0]) = v412 + (v420 >> v217);
  LODWORD(STACK[0x63A8]) = v412 + (v420 >> v328);
  LODWORD(v399) = (2109352332 - v415 + ((2 * v415) & 0x48BACE6)) ^ 0x77BA699A;
  LODWORD(STACK[0x6590]) = v399;
  LODWORD(STACK[0x63A0]) = v399 >> LODWORD(STACK[0x67D0]) >> LODWORD(STACK[0x67C0]);
  v421 = ((v416 & 0x483F74D3 ^ 0x82C5413) - ((2 * (v416 & 0x483F74D3 ^ 0x82C5413)) & 0x903EC084) + 1587536230) ^ 0xEF6D64;
  LODWORD(STACK[0x6398]) = ((v252 & ((((2 * v421) | 0x30F63EAE) - v421 + 1736761513) ^ 0x1E413E61)) >> LODWORD(STACK[0x6428]) >> LODWORD(STACK[0x62D8]))
                         + (((((2 * v421) | 0x30F63EAE) - v421 + 1736761513) & 0xF106B7C ^ 0xE002A60 ^ (v331 ^ 0x90F7D8AA) & ((((2 * v421) | 0x30F63EAE) - v421 + 1736761513) ^ 0x1E413E61)) << v263);
  v422 = ((v418 & 0x480B7042 ^ 0x2849D205) + (v418 & 0x340491) + 0x7FFFFFFF) ^ 0x481;
  LODWORD(v412) = v422 & 0x483F76D7 ^ 0xD041AF72;
  LODWORD(v413) = ((v412 & (v324 ^ 0x502C880F) ^ v422 & 0x81376D0) & 0x4030D635 ^ 0x6330C625)
                + ((v412 & (v324 ^ 0x502C880F) ^ v422 & 0x81376D0) & 0x984F29C2 ^ 0x80400001);
  v423 = v422 & 0x400B3687 ^ 0x74FF7847 ^ v412 & (v405 ^ 0xC0467EE2);
  LOBYTE(v394) = STACK[0x6790];
  LOBYTE(v396) = STACK[0x6660];
  LODWORD(STACK[0x6390]) = ((((_DWORD)v413 - 1) ^ 0x6331E155) << LODWORD(STACK[0x6640]) << LODWORD(STACK[0x6638])) | (((((2 * v423) | 0x96DDBCF2) - v423 + 881926535) ^ 0xEF90801C) >> v394 >> v396);
  LODWORD(v415) = ((v416 & 0x483F74D3 ^ 0x400A3441 | 0xFB63D67D)
                 - (v416 & 0x483F74D3 ^ 0x400A3441 | 0x49C2982)
                 + 77343106) ^ 0x5B61F635;
  LODWORD(v415) = v415 - ((2 * v415) & 0x793A6950) + 1016935592;
  v424 = v415 ^ 0xCF3D986;
  LODWORD(v415) = (v331 ^ 0x302B110A) & (v415 ^ 0xCF3D986) ^ v415 & 0xAFCCA2DC;
  LODWORD(STACK[0x6680]) = (v415 & 0x7B28464D ^ 0x59284449) + (v415 & 0x84D7B9B2 ^ 0x84008081);
  LODWORD(STACK[0x6388]) = (v252 & v424) >> LODWORD(STACK[0x6388]);
  LODWORD(v415) = ((2 * (v418 & 0x305EB8B ^ 0x1046300)) & 0x2088406) - (v418 & 0x305EB8B ^ 0x1046300) + 641318380;
  v425 = v415 & 0x7800810 ^ 0x4800810;
  LODWORD(v415) = v415 ^ 0x223201FA;
  LODWORD(v412) = (((2 * (v416 & 0x305EB8B ^ 0x3014809)) | 0x2F5613F6) - (v416 & 0x305EB8B ^ 0x3014809) + 1750398469) ^ 0xF4AA596F;
  LODWORD(v412) = (v412 | 0xD1802C7D) - (v412 | 0x2E7FD382) + 780129154;
  v426 = v412 & 0x72A88C98 ^ 0x32880818 ^ (v331 ^ 0xED4F3F4E) & (v412 ^ 0xB78B6A7E);
  LODWORD(STACK[0x6610]) = v426;
  LOBYTE(v402) = STACK[0x6380];
  LODWORD(STACK[0x6438]) = ((v417 - ((2 * v417) & 0x11DE2DA6) + 149886675) ^ 0xA820612) << v181 << v402;
  LODWORD(STACK[0x6380]) = v426 << v181 << v402;
  v427 = v405;
  v428 = (v405 ^ 0xA315E346) & (v412 ^ 0xB78B6A7E) ^ v412 & 0x3658AB03;
  LODWORD(STACK[0x67D0]) = (v428 & 0x99725E69 ^ 0x99625E69) + (v428 & 0x668DA196 ^ 0x2608A001);
  v429 = v415 & v252;
  LODWORD(v415) = ((v425 ^ v415 & (v324 ^ 0x387FF7AF) | 0xCC0ACD4B)
                 - (v425 ^ v415 & (v324 ^ 0x387FF7AF) | 0x33F532B4)
                 + 871707316) ^ 0xCA8AC54B;
  LOBYTE(v275) = STACK[0x6268];
  v430 = v429 >> LODWORD(STACK[0x6500]) >> v275;
  LODWORD(STACK[0x6378]) = ((_DWORD)v415 << v419) | v430;
  LODWORD(STACK[0x6370]) = ((_DWORD)v415 << LODWORD(STACK[0x6328]) << LODWORD(STACK[0x62C0])) + v430;
  v431 = ((v418 & 0x306309EF ^ 0x200100C3) - ((2 * (v418 & 0x306309EF ^ 0x200100C3)) & 0x200211C8) - 1819464460) ^ 0xB1DF2AF7;
  LODWORD(v415) = (v431 | 0x76166AB5) - (v431 | 0x89E9954A) - 1981180598;
  v432 = v415 ^ 0x14E177EA;
  v433 = v415 & 0xD0833CB0 ^ 0x40800020 ^ (v415 ^ 0x14E177EA) & (v405 ^ 0x45CE74F5);
  LODWORD(STACK[0x6368]) = (v415 & 0xFDE2EF11 ^ 0x14E06700 ^ (v415 ^ 0x14E177EA) & (v331 ^ 0x62055CC7)) << LODWORD(STACK[0x6360]) << LODWORD(STACK[0x6368]);
  LODWORD(STACK[0x6360]) = ((((2 * v433) | 0xA82A5322) - v433 - 1410673041) ^ 0x4141D11) >> LODWORD(STACK[0x65B0]) >> LODWORD(STACK[0x65D8]);
  v434 = (v416 & 0x306309EF ^ 0x100100A0) - ((2 * (v416 & 0x306309EF ^ 0x100100A0)) & 0x40C41104) + 560098962;
  LODWORD(v399) = v434 & 0xF1FF3FFF ^ 0x61E53441;
  LODWORD(v402) = v434 & 0xD05F118E ^ 0xC81F500C ^ (v324 ^ 0x21A02E71) & v399;
  LODWORD(STACK[0x65B0]) = v402 - ((2 * v402) & 0x5200492C);
  LODWORD(STACK[0x65D8]) = v399;
  LODWORD(v402) = v434 & 0xB09333C5 ^ 0x20906180 ^ (v405 ^ 0x21DE3B80) & v399;
  v435 = v434 & 0xD1B4233D ^ 0x3300309 ^ (v331 ^ 0x405310EB) & v399;
  LOBYTE(v357) = STACK[0x6520];
  LODWORD(STACK[0x6358]) = (((v435 - 1546682717 - ((2 * v435) & 0x479E193C) + 3579) ^ LODWORD(STACK[0x1110])) << v419)
                         + (((((2 * (_DWORD)v402) | 0xF096C060) - (_DWORD)v402 + 129277904) ^ 0xF85A31F1) >> v357);
  LODWORD(v415) = v415 & 0x90209032 ^ 0x201010 ^ (v415 ^ 0x14E177EA) & (v324 ^ 0x6FDF6FCD);
  LODWORD(STACK[0x6350]) = (((1299715982 - (_DWORD)v415 + ((2 * (_DWORD)v415) & 0x650FC8A2) + 1056) ^ 0x5D781B9C) << LODWORD(STACK[0x6348]) << LODWORD(STACK[0x6350]))
                         + ((v432 & v252) >> v192 >> v356);
  v436 = ((v416 & 0x6401005 ^ 0xC4141053) + (v416 & 0x39A92500 ^ 0x9210101) - 1) ^ 0xBD7E107F;
  v437 = ((2 * v436) & 0x8294224E) - v436 - 1096735608;
  LODWORD(v415) = v437 & 0x38691CC8 ^ 0x8601408 ^ (v331 ^ 0xA78EAF1E) & (v437 ^ 0x85F05EAB);
  LODWORD(STACK[0x67C0]) = ((v415 | 0xCD8C9094) - (v415 | 0x32736F6B) + 846425963) ^ 0xC58C9814;
  v438 = (v405 ^ 0x201A6443) & (v437 ^ 0x85F05EAB) ^ v437 & 0xB5572C06;
  LODWORD(v415) = (v438 & 0xA789C6DA ^ LODWORD(STACK[0x1114])) + (v438 & 0x58763925);
  v439 = ((2 * (v418 & 0x3FE93505 ^ 0x27483405)) & 0x6140080A) - (v418 & 0x3FE93505 ^ 0x27483405) - 817024038;
  v440 = v439 & 0xFFEFFD7F ^ 0x98B77F54;
  LODWORD(STACK[0x6580]) = ((v440 & (v324 ^ 0xA4684F4A) ^ v439 & 0x5B87B035 ^ 0xFCEFCFFF)
                          + 346308761
                          + ((2 * (v440 & (v324 ^ 0xA4684F4A) ^ v439 & 0x5B87B035)) | 0xD6B77ED0)) ^ 0xF0DCBF7C;
  v441 = (((2 * (v416 & 0x3F000C90 ^ LODWORD(STACK[0x1118]))) | 0xEE2BEDCC)
        - (v416 & 0x3F000C90 ^ LODWORD(STACK[0x1118]))
        - 1997928166) ^ 0xB5F5DEE4;
  v442 = v441 - ((2 * v441) & 0x3E679A1C) - 1623995122;
  v443 = v442 ^ 0x29D3F42C;
  LODWORD(v412) = v442 & 0x8C6395ED ^ 0x843942C ^ (v405 ^ 0x192EDDA8) & (v442 ^ 0x29D3F42C);
  LOBYTE(v405) = STACK[0x6468];
  LODWORD(STACK[0x6348]) = ((v442 & 0xB4F2F2C4 ^ 0x20D2F004 ^ (v324 ^ 0x4B0D0D3B) & (v442 ^ 0x29D3F42C)) << v405)
                         + (v412 >> v396 >> v394);
  LODWORD(v402) = (v418 & 0x3F000C90 ^ 0xD000800) - ((2 * (v418 & 0x3F000C90 ^ 0xD000800)) & 0xE000000) + 1201271297;
  LODWORD(v413) = v402 & 0xFF000C90 ^ 0x3B001930;
  LODWORD(v412) = v402 & 0x6A000C80 ^ 0x28002281 ^ v413 & (v331 ^ 0xF5000D10);
  LODWORD(STACK[0x6340]) = (((((2 * (_DWORD)v412) & 0xA2006D60) - (_DWORD)v412 - 1365194419) ^ 0xACA0F3CC) << v419) | ((v413 & v252) >> v357);
  LODWORD(v412) = v402 & 0x1A000C90 ^ 0x8909D52 ^ v413 & (v324 ^ 0xE5000020);
  LODWORD(STACK[0x6338]) = (((((2 * (_DWORD)v412) | 0x63E9382E) - (_DWORD)v412 + 1309369321) ^ 0xA3641855) << LODWORD(STACK[0x65C8]) << LODWORD(STACK[0x65D0])) ^ (((v402 & 0x1A000810 | 0x20) ^ 0x1A000810 ^ v413 & (v427 ^ 0x8F000030)) >> LODWORD(STACK[0x64A0]) >> LODWORD(STACK[0x64A8]));
  v444 = (v331 ^ 0x7A705D4A) & (v442 ^ 0x29D3F42C) ^ v442 & 0xE597EE9C;
  LODWORD(STACK[0x6330]) = ((v252 & v443) >> v328) | ((((v444 & 0x97AC9FB4 ^ 0x92A89935) + (v444 & 0x6853604B) - 1) ^ 0xB33B7D38) << v419);
  LODWORD(v403) = ((2 * (v418 & 0x525295AD ^ 0x1050148C)) | 0x761BC62C) - (v418 & 0x525295AD ^ 0x1050148C) + 1156717802;
  v445 = v331;
  v446 = v403 & 0x16F519FB ^ 0x1414194B ^ (v403 ^ 0x4DAACCC1) & (v331 ^ 0x8912AA2D);
  LODWORD(STACK[0x6550]) = v416 & 0x525295AD;
  v447 = (v416 & 0x525295AD ^ 0x50520BAC) - ((2 * (v416 & 0x525295AD ^ 0x50520BAC)) & 0xA4052C08) - 701770220;
  LODWORD(STACK[0x6578]) = v447;
  v448 = v447 ^ 0x728C674F;
  v449 = (v427 ^ 0x7C2F525D) & (v447 ^ 0x728C674F) ^ v447 & 0xE8621A18;
  LODWORD(v402) = v447 & 0xFA532989 ^ 0xB8530909 ^ (v324 ^ 0x42CD674) & (v447 ^ 0x728C674F);
  LODWORD(v402) = (-1693512403 - (v402 | 0x9B0F0D2D) + (v402 | 0x64F0F2D2)) ^ 0xAE23DAD0;
  LODWORD(STACK[0x6320]) = ((_DWORD)v402 << v419)
                         + ((((v449 & 0xE349E260 ^ 0xC309E061) + (v449 & 0x1CB61D9F) - 1) ^ LODWORD(STACK[0x111C])) >> LODWORD(STACK[0x6430]));
  v450 = v403 & 0x24288C5C ^ 0x4288C40 ^ (v403 ^ 0x4DAACCC1) & (v427 ^ 0xB165C419);
  LODWORD(STACK[0x6570]) = v450;
  LODWORD(STACK[0x6568]) = v252 & (v447 ^ 0x728C674F);
  LODWORD(STACK[0x6318]) = ((_DWORD)v402 << v405)
                         + ((v252 & (v447 ^ 0x728C674F)) >> LODWORD(STACK[0x6480]) >> LODWORD(STACK[0x6478]));
  v451 = ((v418 & 0x230E5879 ^ 0x22004011)
        + (v418 & 0x23061811 ^ 0x9D77BE82)
        - ((v418 & 0x230E5879 ^ 0x22004011) & 0x23061811)) ^ 0xBF7395D1;
  v452 = v451 + 1234949093 - ((2 * v451) & 0x9337C09E) + 3178;
  LODWORD(STACK[0x6558]) = v452;
  LODWORD(v399) = v452 ^ 0x2E8523BF;
  v453 = v452 & 0xB8D75636 ^ 0x90014412 ^ (v452 ^ 0x2E8523BF) & (v324 ^ 0x4728A9C9);
  LODWORD(v402) = (v453 | 0xA4559736) - (v453 | 0x5BAA68C9);
  v454 = v452 & STACK[0x1120] ^ 0x24040095 ^ (v452 ^ 0x2E8523BF) & (v427 ^ 0x705B44D0);
  v455 = v416 & 0x230E5879 ^ 0x6614A8DB;
  LODWORD(STACK[0x6280]) = v455;
  LODWORD(v412) = v416 & 0x200C4831 ^ 0x24848025 ^ (v331 ^ 0x230A58E3) & v455;
  LODWORD(v412) = (((2 * v412) & 0xCC1591E6) - v412 - 1711983604) ^ 0x99751C38;
  LODWORD(STACK[0x6430]) = (_DWORD)v412 << LODWORD(STACK[0x6588]) << LODWORD(STACK[0x6598]);
  LODWORD(STACK[0x6310]) = v399;
  LODWORD(v399) = v399 & v252;
  LODWORD(STACK[0x6560]) = v399;
  v456 = v399 >> LODWORD(STACK[0x6648]) >> LODWORD(STACK[0x67A0]);
  LODWORD(v399) = (v402 + 1537894601) ^ 0x1CD1D112;
  LODWORD(STACK[0x6648]) = v399;
  LOBYTE(v331) = STACK[0x6518];
  LOBYTE(v405) = STACK[0x64F8];
  LODWORD(STACK[0x6308]) = ((_DWORD)v399 << v331 << v405) | v456;
  v457 = v416 & 0x2061030 ^ 0xC2260234 ^ (v427 ^ 0x431A5871) & (v416 & 0x230E5879 ^ 0x6614A8DB);
  v458 = (-934018536 - v457 + ((2 * v457) & 0x4E580526) - 1196) ^ 0x4C61FF48;
  LODWORD(STACK[0x6598]) = v458;
  LOBYTE(v356) = v419;
  LODWORD(STACK[0x6300]) = ((_DWORD)v412 << v419) | (v458 >> v217);
  v459 = (v416 & 0x4CB2B5F9 ^ 0x4209168 | 0x5AF522B8) - (v416 & 0x4CB2B5F9 ^ 0x4209168 | 0xA50ADD47) - 1526014649;
  v460 = v427;
  v461 = (v427 ^ 0x36E4FFA6) & (v459 ^ 0x8320498A) ^ v459 & 0xA3A9B7E3;
  v462 = v459 & 0x352F91A0 ^ 0x1200180 ^ (v324 ^ 0xCAD06E5F) & (v459 ^ 0x8320498A);
  LODWORD(STACK[0x6260]) = v462;
  LODWORD(v399) = (v415 - 1) ^ 0x22D8CADA;
  LODWORD(STACK[0x62A8]) = v399;
  LOBYTE(v412) = STACK[0x6500];
  LODWORD(STACK[0x62F8]) = v399 >> v412 >> v275;
  LODWORD(STACK[0x6588]) = v454 >> v412 >> v275;
  LODWORD(STACK[0x67A0]) = (((v461 & 0xBD4A3BAE ^ 0x3D4A082E) + (v461 ^ 0x8281B380) - ((v461 ^ 0x8281B380) & 0xBD4A3BAE)) ^ 0xBCEB89AC) >> v275 >> v412;
  LODWORD(v412) = (v446 - 993987072 - ((2 * v446) & 0x8981ED9C) + 206) ^ 0xD474E744;
  LOBYTE(v399) = STACK[0x62E8];
  LOBYTE(v415) = STACK[0x62E0];
  LODWORD(STACK[0x62F0]) = (_DWORD)v412 << v399 << v415;
  LODWORD(STACK[0x6500]) = v462 << v415 << v399;
  v463 = (v418 & 0x4CB2B5F9 ^ 0x4530B250) - ((2 * (v418 & 0x4CB2B5F9 ^ 0x4530B250)) & 0x81610640) - 759577822;
  v464 = v445;
  LODWORD(STACK[0x6AB0]) = v463 & 0x50B14042 ^ 0x40900040 ^ (v463 ^ 0x42DE0AD0) & (v445 ^ 0xCF56F390);
  LODWORD(v399) = (v445 ^ 0xB3FC8EA1) & (v459 ^ 0x8320498A) ^ v459 & 0x2C1B3D77;
  v465 = (v399 & 0x2A79E032 ^ 0x2A790030) + (v399 ^ 0xC480EA4A) - ((v399 ^ 0xC480EA4A) & 0x2A79E032);
  LODWORD(STACK[0x6248]) = v463 ^ 0x42DE0AD0;
  LODWORD(v399) = v463 & 0x376DE84B ^ 0xD8008 ^ (v463 ^ 0x42DE0AD0) & (v324 ^ 0xC89217B0);
  LODWORD(STACK[0x6520]) = (v399 | 0x978667EB) - (v399 | 0x68799814);
  v466 = (v463 ^ 0x42DE0AD0) & (v460 ^ 0x1C9383C8) ^ v463 & 0x89DECB89;
  LODWORD(STACK[0x6238]) = (v466 ^ 0x7775BF7E) + (v466 | 0x99AEF2CD) + (v466 & 0x66510D32);
  LODWORD(STACK[0x62E8]) = LODWORD(STACK[0x6608]) ^ LODWORD(STACK[0x6618]);
  v467 = ((v418 & 0x5B3EB6D3 ^ 0x8CFE8B06)
        + (v418 & 0x58260480 ^ 0x500104A8)
        - ((v418 & 0x5B3EB6D3 ^ 0x8CFE8B06) & STACK[0x1124])) ^ 0xCC796F2;
  LODWORD(v415) = (v467 | 0x8B5A6CAD) - (v467 | 0x74A59352) + 1957008210;
  v468 = v415 & 0x692194E0 ^ 0x482110A0 ^ (v415 ^ 0xAE0F0102) & (v445 ^ 0xF6C62736);
  LODWORD(v399) = ((2 * v468) | 0x82231166) - v468;
  v469 = v252;
  v470 = v440 & v252;
  LOBYTE(v252) = STACK[0x6428];
  LOBYTE(v418) = STACK[0x62D8];
  LODWORD(STACK[0x62E0]) = v470 >> v252 >> v418;
  v471 = (v469 & (v459 ^ 0x8320498A)) >> v418 >> v252;
  LODWORD(STACK[0x6428]) = ((v415 ^ 0xAE0F0102) & v469) >> v418 >> v252;
  v472 = ((2 * (v416 & 0x5B3EB6D3 ^ 0x41163293)) & 0x24216524) - (v416 & 0x5B3EB6D3 ^ 0x41163293) + 1303334249;
  v473 = (v472 & 0x62C264CD ^ 0x62C024C9) + (v472 & 0x9D3D9B32 ^ 0x95189331) - 1;
  v474 = v473 ^ 0x1D043524;
  v475 = v473 & 0x9B7BDE66 ^ 0x68014238 ^ (v324 ^ 0x64842199) & (v473 ^ 0x1D043524);
  LODWORD(STACK[0x6618]) = ((2 * v475) & 0x9A38BAB2) - v475;
  v476 = v460;
  v477 = v473 & 0xBA61B136 ^ 0xAA20A120 ^ (v460 ^ 0x2F2CF973) & (v473 ^ 0x1D043524);
  LODWORD(v399) = (v399 + 1055815501) ^ 0xA1319813;
  LODWORD(STACK[0x6608]) = v399;
  LODWORD(STACK[0x62D8]) = (_DWORD)v399 << v405 << v331;
  LODWORD(v412) = (_DWORD)v412 << v356;
  LOBYTE(v331) = STACK[0x6660];
  LOBYTE(v460) = STACK[0x6790];
  LODWORD(STACK[0x62D0]) = v412 + (v450 >> v331 >> v460);
  LOBYTE(v402) = STACK[0x6780];
  LOBYTE(v462) = STACK[0x6628];
  LODWORD(STACK[0x62C8]) = v412 + (((v403 ^ 0x4DAACCC1) & v469) >> v402 >> v462);
  LODWORD(v412) = (((2 * (LODWORD(STACK[0x6550]) ^ 0x40000125)) & 0x24050802)
                 - (LODWORD(STACK[0x6550]) ^ 0x40000125)
                 + 1827945454) ^ 0x6CAC996F;
  LODWORD(v412) = ((2 * v412) | 0x46FFAA20) - v412 - 595580176;
  v478 = (v476 ^ 0xD3304DDE) & (v412 ^ 0x97D2CC43) ^ v412 & 0x467D059B;
  v479 = STACK[0x68B0];
  LODWORD(v412) = v412 & 0x1A7CC814 ^ 0x8C814 ^ (v324 ^ 0xE58337EB) & (v412 ^ 0x97D2CC43);
  v480 = STACK[0x68F0];
  LODWORD(STACK[0x62C0]) = ((((_DWORD)v412 - ((2 * (_DWORD)v412) & 0xA02AB17A) + 1343576253) ^ 0x424D58A9) << LODWORD(STACK[0x6328]) << LODWORD(STACK[0x62C0]))
                         + ((((v478 & STACK[0x1128] ^ 0xB91032E5) + (v478 & 0x6E7CD19) - 1) ^ 0xBF4036E7) >> LODWORD(STACK[0x65B8]) >> LODWORD(STACK[0x65C0]));
  LODWORD(STACK[0x62B8]) = LODWORD(STACK[0x65F0]) ^ 0xB255331E ^ v403;
  LODWORD(STACK[0x6328]) = v403 ^ 0x4DAACCC1;
  LODWORD(STACK[0x65C0]) = v403 & 0x8DB8729B ^ (v403 ^ 0x4DAACCC1) & (v324 ^ 0x72478D64);
  LODWORD(v412) = STACK[0x6578] & 0xD0419950 ^ 0x50800142 ^ (v464 ^ 0x4E262A84) & v448;
  LODWORD(v403) = ((LODWORD(STACK[0x6620]) + 914141380) ^ 0x49CB5FB3u) >> v460 >> v331;
  *(_QWORD *)(v1 - 152) = (LODWORD(STACK[0x6590]) >> v460 >> v331);
  LODWORD(STACK[0x6620]) = LODWORD(STACK[0x62A8]) >> v460 >> v331;
  LODWORD(STACK[0x62A8]) = v470 >> v460 >> v331;
  LODWORD(v413) = STACK[0x6280];
  LODWORD(STACK[0x65F0]) = (v469 & STACK[0x6280]) >> v460 >> v331;
  LODWORD(v400) = ((v477 - ((2 * v477) & 0x88A9ED06) + 1146418819) ^ 0xF6746687) >> v331 >> v460;
  LODWORD(STACK[0x6298]) = LODWORD(STACK[0x6568]) >> v331 >> v460;
  LOBYTE(v448) = STACK[0x65E0];
  LOBYTE(v470) = STACK[0x65E8];
  LODWORD(v399) = LODWORD(STACK[0x67C0]) << v448 << v470;
  LODWORD(STACK[0x6288]) = (_DWORD)v412 << v470 << v448;
  v481 = v324;
  v482 = v416 & 0xC4841 ^ 0x86C4A80 ^ (v324 ^ 0x6712B038) & v413;
  LODWORD(STACK[0x65E8]) = v482 - ((2 * v482) & 0xD0ED1136);
  v483 = STACK[0x6558];
  LODWORD(STACK[0x6280]) = v464 ^ 0xBEE5FBDE ^ ((LODWORD(STACK[0x6558]) ^ 0x6899934C)
                                              - 2
                                              * ((LODWORD(STACK[0x6558]) ^ 0x6899934C) & 0x7973235F ^ STACK[0x6558] & 2)
                                              + 2037588829);
  LODWORD(v412) = v465 ^ 0xEEF9037A;
  v484 = STACK[0x68E0];
  LOBYTE(v470) = STACK[0x6638];
  LOBYTE(v482) = STACK[0x6640];
  LODWORD(v413) = (_DWORD)v412 << v470 << v482;
  v485 = LODWORD(STACK[0x6AB0]) << v470 << v482;
  v486 = STACK[0x6500];
  LODWORD(STACK[0x6278]) = LODWORD(STACK[0x6500]) | LODWORD(STACK[0x67A0]);
  LODWORD(STACK[0x6270]) = v471 | v413;
  LODWORD(STACK[0x6268]) = v471 + (LODWORD(STACK[0x6260]) << v356);
  LODWORD(STACK[0x6260]) = v471 | v486;
  v487 = v473 & STACK[0x112C] ^ 0x120002B1 ^ (v464 ^ 0x2CEBB96F) & (v473 ^ 0x1D043524);
  v488 = ((139239456 - v487 + ((2 * v487) & 0xEF66AE50) + 2231) ^ 0xB48AA46) << LODWORD(STACK[0x65C8]) << LODWORD(STACK[0x65D0]);
  LOBYTE(v486) = STACK[0x6538];
  v489 = LODWORD(STACK[0x6560]) >> v486;
  v490 = (v469 & v474) >> v486;
  LOBYTE(v486) = STACK[0x6548];
  LODWORD(STACK[0x6250]) = v489 >> v486;
  v491 = v490 >> v486;
  v492 = STACK[0x67B0];
  LODWORD(STACK[0x6240]) = LODWORD(STACK[0x67B0]) ^ 0xDA55A1FD;
  v493 = v415 & LODWORD(STACK[0x1134]) ^ LODWORD(STACK[0x1130]) ^ (v415 ^ 0xAE0F0102) & (v492 ^ LODWORD(STACK[0x1138]));
  LOBYTE(v486) = v402;
  v494 = ((LODWORD(STACK[0x67D0]) - 1) ^ 0x8962D46B) >> v402;
  LODWORD(v402) = (STACK[0x6248] & v469) >> v402;
  v495 = ((LODWORD(STACK[0x6238]) + 1) ^ 0x11FAB8CCu) >> v462 >> v486;
  LODWORD(STACK[0x6238]) = v494 >> v462;
  LODWORD(v402) = v402 >> v462;
  LODWORD(STACK[0x6230]) = v493 >> v486 >> v462;
  LODWORD(v412) = v415 & 0x7CAFC53B ^ 0x2C0F0102 ^ (v415 ^ 0xAE0F0102) & (v481 ^ 0x83503AC4);
  v496 = LODWORD(STACK[0x65A0]) - (STACK[0x62B0] & 0x1EF6B0B6);
  v497 = ((LODWORD(STACK[0x65A8]) ^ 0xDA73E479) - 1126619286) ^ ((LODWORD(STACK[0x65A8]) ^ 0xC21AE6CD) - 1531959842) ^ ((LODWORD(STACK[0x65A8]) ^ 0xE2FA79C5) - 2075084074);
  v498 = LODWORD(STACK[0x6510]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x69E0]) ^ v479 ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6700]) ^ v480 ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x66E0]) ^ LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x69F0]) ^ v484 ^ LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x6708]) ^ 0xDD2C5402 ^ LODWORD(STACK[0x66E8]);
  LODWORD(STACK[0x67C0]) = LODWORD(STACK[0x6600]) ^ 0x39F39E27;
  LODWORD(STACK[0x67B0]) = LODWORD(STACK[0x6530]) ^ 0x47DB5754;
  LODWORD(STACK[0x67D0]) = LODWORD(STACK[0x6290]) ^ 0x9F6E2FC8;
  LODWORD(STACK[0x67A0]) = LODWORD(STACK[0x64E8]) ^ 0x9F6E2FC8;
  LODWORD(STACK[0x6790]) = LODWORD(STACK[0x6540]) ^ 0xBA8790C8;
  LODWORD(STACK[0x6780]) = LODWORD(STACK[0x64F0]) ^ 0xB8E2B591;
  LODWORD(v415) = LODWORD(STACK[0x6630]) ^ 0x97948F71;
  LODWORD(v413) = v415 ^ (LODWORD(STACK[0x6520]) + 1752799252) ^ 0x95C7EFA3;
  v499 = v415 ^ LODWORD(STACK[0x65C0]) ^ 0xDA84081;
  LODWORD(STACK[0x62B0]) = v403;
  LODWORD(v403) = ((_DWORD)v415 << v356) ^ v403;
  LODWORD(STACK[0x6660]) = LODWORD(STACK[0x6650]) ^ 0xD4;
  v500 = STACK[0x65F8];
  LODWORD(STACK[0x6218]) = LODWORD(STACK[0x65F8]) ^ 0x3F27B092;
  v501 = *(_QWORD *)(v1 - 152);
  LODWORD(STACK[0x6210]) = v500 & 0x3092ED1E;
  LODWORD(STACK[0x6208]) = v464 ^ 0xCB8EE015;
  v502 = STACK[0x6658];
  LODWORD(STACK[0x6200]) = STACK[0x6658] & 0x72AF7E22;
  LODWORD(STACK[0x61F8]) = v502 ^ 0x4DFC55C6;
  LODWORD(STACK[0x61F0]) = v481 ^ 0xE656EE2C;
  LODWORD(STACK[0x61E8]) = v481 ^ 0x52556E;
  LODWORD(STACK[0x61E0]) = v501 | LODWORD(STACK[0x6438]);
  v503 = STACK[0x6440];
  LODWORD(STACK[0x61DC]) = LODWORD(STACK[0x6440]) - ((2 * LODWORD(STACK[0x6440])) & 0xD7F7E5A) - 2034254035;
  LODWORD(STACK[0x61D0]) = v503 - ((2 * v503) & 0x531986A0) + 697090896;
  LODWORD(STACK[0x61C8]) = LODWORD(STACK[0x66D0]) - ((2 * LODWORD(STACK[0x66D0])) & 0xCB3B5AD6) - 442651285;
  LODWORD(STACK[0x61C0]) = v503 - ((2 * v503) & 0xC4359DAC) - 501559594;
  LODWORD(STACK[0x61BC]) = ((LODWORD(STACK[0x6680]) - 1) ^ 0xD1E8444D) << v356;
  LODWORD(STACK[0x61B0]) = LODWORD(STACK[0x6610]) << v356;
  LODWORD(v415) = LODWORD(STACK[0x6448]) - ((2 * LODWORD(STACK[0x6448])) & 0xBA58A804) - 584297470;
  LODWORD(STACK[0x6228]) = v498;
  LODWORD(STACK[0x61A8]) = 826489243 * ((v415 ^ v498) - LODWORD(STACK[0x6450]));
  LODWORD(v415) = v469 & STACK[0x65D8];
  LODWORD(STACK[0x61A0]) = ((LODWORD(STACK[0x65B0]) - 1358945130) ^ 0x275A649A) << v356;
  v504 = STACK[0x6AA0];
  LODWORD(STACK[0x6198]) = v415 >> LODWORD(STACK[0x6AA0]);
  LODWORD(STACK[0x6290]) = v399;
  LODWORD(STACK[0x6190]) = LODWORD(STACK[0x6620]) | v399;
  LODWORD(STACK[0x6188]) = LODWORD(STACK[0x6580]) << v356;
  v505 = LODWORD(STACK[0x6648]) << v356;
  LODWORD(STACK[0x6180]) = v505;
  LODWORD(STACK[0x6178]) = v505 + LODWORD(STACK[0x6588]);
  LODWORD(STACK[0x6170]) = LODWORD(STACK[0x65F0]) | LODWORD(STACK[0x6430]);
  v506 = LODWORD(STACK[0x6AB0]) << v356;
  LODWORD(STACK[0x616C]) = v506;
  LODWORD(STACK[0x6160]) = v402 | v506;
  LODWORD(STACK[0x6158]) = (_DWORD)v413 << v356;
  LODWORD(STACK[0x6150]) = (LODWORD(STACK[0x6608]) << v356) + LODWORD(STACK[0x6428]);
  LODWORD(v399) = (LODWORD(STACK[0x6618]) - 1293704538) ^ 0xC3E2F4BA;
  LODWORD(STACK[0x6148]) = (_DWORD)v399 << LODWORD(STACK[0x6468]);
  LODWORD(STACK[0x62A0]) = (_DWORD)v400;
  LODWORD(STACK[0x6140]) = ((_DWORD)v399 << v356) + (_DWORD)v400;
  LODWORD(STACK[0x6138]) = LODWORD(STACK[0x6570]) >> LODWORD(STACK[0x64A8]) >> LODWORD(STACK[0x64A0]);
  LODWORD(STACK[0x6130]) = v499 << v356;
  v507 = LODWORD(STACK[0x6598]) >> v504;
  LODWORD(v399) = ((LODWORD(STACK[0x65E8]) - 126383713) ^ 0xF01FCBDC) << v356;
  LODWORD(STACK[0x6128]) = v507;
  LODWORD(STACK[0x6120]) = v399 | v507;
  LODWORD(STACK[0x6118]) = v483 & 0x25C6BE39;
  LODWORD(STACK[0x6688]) = v495;
  LODWORD(STACK[0x6110]) = v495 | v485;
  LODWORD(STACK[0x6108]) = (_DWORD)v412 << v356;
  LODWORD(STACK[0x60F8]) = v496 + 536230585;
  v508 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6258]));
  LODWORD(STACK[0x6680]) = v497 + 761879170;
  LODWORD(STACK[0x6258]) = v488;
  LODWORD(STACK[0x6248]) = v491;
  LODWORD(STACK[0x60F0]) = v491 + v488;
  LODWORD(STACK[0x6220]) = v403;
  HIDWORD(v509) = v403;
  LODWORD(v509) = v403;
  LODWORD(STACK[0x60E8]) = v509 >> 15;
  return v508();
}

uint64_t sub_100BA5A18(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  int v21;
  unsigned int v22;
  unint64_t v23;
  unsigned int v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  unint64_t v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unint64_t v53;
  int v54;
  int v55;
  int v56;
  BOOL v57;
  unsigned int v58;
  unsigned int v59;
  unint64_t v60;
  int v61;
  int v62;
  BOOL v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  BOOL v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  uint64_t v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  unint64_t v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unint64_t v262;
  unint64_t v263;
  int v264;
  _DWORD *v265;
  _DWORD *v266;
  _DWORD *v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;
  _DWORD *v272;
  unint64_t v273;
  uint64_t v274;
  unint64_t v275;
  int v276;
  uint64_t v277;
  _DWORD *v278;
  _DWORD *v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  _DWORD *v283;
  uint64_t v284;
  _DWORD *v285;
  int v286;
  _DWORD *v287;
  int v288;
  int v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t v292;
  unint64_t v293;
  unint64_t v294;
  int *v295;
  int v296;
  unint64_t v297;
  unint64_t v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t v301;
  _DWORD *v302;
  uint64_t v303;
  _DWORD *v304;
  uint64_t v305;
  _DWORD *v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  _DWORD *v312;
  uint64_t v313;
  unint64_t v314;
  uint64_t v315;
  _DWORD *v316;
  uint64_t v317;
  unint64_t v318;
  int v319;
  int v320;
  _DWORD *v321;
  _DWORD *v322;
  uint64_t v323;
  unint64_t v324;
  uint64_t v325;
  _DWORD *v326;
  uint64_t v327;
  _DWORD *v328;
  uint64_t v329;
  _DWORD *v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  _DWORD *v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  _DWORD *v338;
  _DWORD *v339;
  _DWORD *v340;
  uint64_t v341;
  _DWORD *v342;
  uint64_t v343;
  unint64_t v344;
  uint64_t v345;
  unint64_t v346;
  unint64_t v347;
  uint64_t v348;
  unint64_t v349;
  uint64_t v350;
  unint64_t v351;
  unint64_t v352;
  uint64_t v353;
  uint64_t v354;
  unint64_t v355;
  uint64_t v356;
  _DWORD *v357;
  uint64_t v358;
  _DWORD *v359;
  uint64_t v360;
  unint64_t v361;
  unint64_t v362;
  unint64_t v363;
  _DWORD *v364;
  _DWORD *v365;
  _DWORD *v366;
  uint64_t v367;
  unint64_t v368;
  uint64_t v369;
  _DWORD *v370;
  _DWORD *v371;
  _DWORD *v372;
  uint64_t v373;
  unint64_t v374;
  uint64_t v375;
  _DWORD *v376;
  uint64_t v377;
  _DWORD *v378;
  unint64_t v379;
  uint64_t v380;
  int v381;
  int v382;
  uint64_t v383;
  _DWORD *v384;
  _DWORD *v385;
  _DWORD *v386;
  unint64_t v387;
  unint64_t v388;
  _DWORD *v389;
  _DWORD *v390;
  _DWORD *v391;
  unint64_t v392;
  _DWORD *v393;
  _DWORD *v394;
  uint64_t v395;
  _DWORD *v396;
  uint64_t v397;
  _DWORD *v398;
  uint64_t v399;
  _DWORD *v400;
  int v401;
  unint64_t v402;
  unint64_t v403;
  unint64_t v404;
  _DWORD *v405;
  _DWORD *v406;
  _DWORD *v407;
  uint64_t v408;
  _DWORD *v409;
  uint64_t v410;
  _DWORD *v411;
  uint64_t v412;
  unint64_t v413;
  uint64_t v414;
  _DWORD *v415;
  uint64_t v416;
  _DWORD *v417;
  uint64_t v418;
  _DWORD *v419;
  uint64_t v420;
  _DWORD *v421;
  int v422;
  _DWORD *v423;
  _DWORD *v424;
  int v425;
  uint64_t v426;
  _DWORD *v427;
  uint64_t v428;
  _DWORD *v429;
  char *v430;
  int v431;
  int v432;
  unsigned int v433;
  uint64_t v434;
  int v435;
  unsigned int v436;
  int v437;
  char *v438;
  int v439;
  uint64_t v440;
  char *v441;
  uint64_t v442;
  char *v443;
  unsigned int v444;
  uint64_t v445;
  int *v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  uint64_t v450;
  int *v451;
  uint64_t v452;
  int *v453;
  int v454;
  int v455;
  int v456;
  int *v457;
  int *v458;
  int v459;
  uint64_t v460;
  unint64_t v461;
  uint64_t v462;
  unint64_t v463;
  uint64_t v464;
  int *v465;
  uint64_t v466;
  int *v467;
  uint64_t v468;
  int *v469;
  uint64_t v470;
  int *v471;
  uint64_t v472;
  int *v473;
  int v474;
  int *v475;
  uint64_t v476;
  int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  uint64_t v481;
  unint64_t v482;
  uint64_t v483;
  unint64_t v484;
  unint64_t v485;
  int *v486;
  int v487;
  uint64_t v488;
  unint64_t v489;
  uint64_t v490;
  int *v491;
  unint64_t v492;
  int v493;
  int v494;
  _DWORD *v495;
  _DWORD *v496;
  uint64_t v497;
  unint64_t v498;
  uint64_t v499;
  _DWORD *v500;
  uint64_t v501;
  int *v502;
  uint64_t v503;
  int *v504;
  uint64_t v505;
  int *v506;
  uint64_t v507;
  int *v508;
  uint64_t v509;
  int *v510;
  uint64_t v511;
  int *v512;
  int v513;
  int v514;
  int v515;
  int v516;
  unsigned int v517;
  int v518;
  int v519;
  unsigned int v520;
  int v521;
  int v522;
  int v523;
  _DWORD *v524;
  unsigned int v525;
  uint64_t v526;
  unint64_t v527;
  uint64_t v528;
  unint64_t v529;
  unint64_t v530;
  uint64_t v531;
  unsigned int v532;
  unint64_t v533;
  int v534;
  _DWORD *v535;
  int *v536;
  int v537;
  uint64_t v538;
  unint64_t v539;
  uint64_t v540;
  _DWORD *v541;
  _DWORD *v542;
  int *v543;
  int v544;
  int *v545;
  int v546;
  _DWORD *v547;
  uint64_t v548;
  unint64_t v549;
  uint64_t v550;
  unint64_t v551;
  uint64_t v552;
  _DWORD *v553;
  uint64_t v554;
  unint64_t v555;
  unint64_t v556;
  int v557;
  unsigned int v558;
  unint64_t v559;
  unint64_t v560;
  _DWORD *v561;
  _DWORD *v562;
  uint64_t v563;
  _DWORD *v564;
  uint64_t v565;
  _DWORD *v566;
  _DWORD *v567;
  uint64_t v568;
  unint64_t v569;
  uint64_t v570;
  unint64_t v571;
  unint64_t v572;
  int v573;
  int v574;
  int v575;
  int v576;
  unsigned int v577;
  unint64_t v578;
  int *v579;
  int v580;
  _DWORD *v581;
  _DWORD *v582;
  int *v583;
  int v584;
  uint64_t v585;
  _DWORD *v586;
  uint64_t v587;
  unint64_t v588;
  uint64_t v589;
  int *v590;
  uint64_t v591;
  unint64_t v592;
  uint64_t v593;
  _DWORD *v594;
  int v595;
  _DWORD *v596;
  _DWORD *v597;
  uint64_t v598;
  unint64_t v599;
  uint64_t v600;
  _DWORD *v601;
  _DWORD *v602;
  int *v603;
  int v604;
  uint64_t v605;
  int *v606;
  uint64_t v607;
  unint64_t v608;
  uint64_t v609;
  _DWORD *v610;
  int v611;
  int v612;
  int v613;
  unsigned int v614;
  unint64_t v615;
  unsigned int v616;
  unsigned int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  uint64_t v622;
  unsigned int v623;
  int v624;
  uint64_t v625;
  unint64_t v626;
  uint64_t v627;
  unint64_t v628;
  unint64_t v629;
  int *v630;
  int v631;
  int *v632;
  int v633;
  uint64_t v634;
  _DWORD *v635;
  uint64_t v636;
  _DWORD *v637;
  uint64_t v638;
  _DWORD *v639;
  uint64_t v640;
  _DWORD *v641;
  uint64_t v642;
  _DWORD *v643;
  uint64_t v644;
  unint64_t v645;
  uint64_t v646;
  _DWORD *v647;
  uint64_t v648;
  _DWORD *v649;
  uint64_t v650;
  unint64_t v651;
  int v652;
  unint64_t v653;
  unsigned int v654;
  unint64_t v655;
  _DWORD *v656;
  _DWORD *v657;
  _DWORD *v658;
  unint64_t v659;
  _DWORD *v660;
  uint64_t v661;
  _DWORD *v662;
  uint64_t v663;
  _DWORD *v664;
  uint64_t v665;
  _DWORD *v666;
  uint64_t v667;
  _DWORD *v668;
  uint64_t v669;
  unint64_t v670;
  uint64_t v671;
  unint64_t v672;
  uint64_t v673;
  _DWORD *v674;
  unint64_t v675;
  _DWORD *v676;
  int *v677;
  int v678;
  unsigned int v679;
  _DWORD *v680;
  _DWORD *v681;
  _DWORD *v682;
  _DWORD *v683;
  _DWORD *v684;
  _DWORD *v685;
  uint64_t v686;
  unint64_t v687;
  unint64_t v688;
  _DWORD *v689;
  unint64_t v690;
  unint64_t v691;
  uint64_t v692;
  _DWORD *v693;
  uint64_t v694;
  _DWORD *v695;
  int v696;
  unsigned int v697;
  unint64_t v698;
  int v699;
  int v700;
  int v701;
  int v702;
  int v703;
  int v704;
  int v705;
  int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  unsigned int v716;
  int v717;
  unsigned int v718;
  unsigned int v719;
  uint64_t v720;
  char *v721;
  unsigned int v722;
  unint64_t v723;
  unsigned int v724;
  unsigned int v725;
  int v726;
  int v727;
  int v728;
  unsigned int v729;
  unsigned int v730;
  int v731;
  int v732;
  int v733;
  int v734;
  unsigned int v735;
  unsigned int v736;
  int v737;
  unsigned int v738;
  char *v739;
  unsigned int v740;
  uint64_t v741;
  unsigned int v742;
  unsigned int v743;
  int v744;
  int v745;
  unsigned int v746;
  uint64_t v747;
  unsigned int v748;
  unint64_t v749;
  unint64_t v750;
  unsigned int v751;
  unsigned int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  unsigned int v759;
  unsigned int v760;
  unsigned int v761;
  unsigned int v762;
  int v763;
  unsigned int v764;
  int v765;
  unsigned int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  int v770;
  int v771;
  int v772;

  LODWORD(STACK[0x65D0]) = a2;
  v21 = (LODWORD(STACK[0x6AC0]) - 1497209979) & 0x593DB86E;
  v22 = (a2 & (LODWORD(STACK[0x6AC0]) - 7300) ^ 0xC6D4D3B5) - 1;
  LODWORD(STACK[0x6510]) = v21;
  v23 = v22 ^ (v21 + 1422057073);
  STACK[0x6650] = v23;
  v24 = ((a2 & 0x5B1B6368 ^ 0x1B19406B) + (a2 & 0xA4E49C95) - 1) ^ 0x77F9FB7F;
  v25 = STACK[0x63C8];
  v26 = *(unsigned __int8 *)(STACK[0x63C8] + (*(unsigned __int8 *)(v8 + v23) ^ 0x20)) ^ ((*(_BYTE *)(v8 + v23) ^ 0x7E) - 111) ^ 0xE5;
  v27 = (909717769 - (a2 & 0xFFFFFFFC ^ 0x43C01462 | 0x36393109) + (a2 & 0xFFFFFFFC ^ 0x43C01462 | 0xC9C6CEF6)) ^ 0xC7E82000;
  v28 = (1157213497 - v27 + ((2 * v27) | 0x760CA58E)) ^ 0x64FF6D38;
  STACK[0x65D8] = v28;
  v29 = (((2 * (a2 & 0xFFFFFFF7 ^ 0xE11D5BC2)) & 0xA671B94E) - (a2 & 0xFFFFFFF7 ^ 0xE11D5BC2) - 1396235440) ^ 0x28970306;
  v30 = 1878310232 - v29 + (LODWORD(STACK[0x30D0]) | (2 * v29));
  v31 = a2 ^ 0x9217C56A;
  STACK[0x6658] = v31;
  v32 = *(unsigned __int8 *)(v8 + v31);
  v33 = (((2 * v24) | 0xD002704A) - v24 + 402573275) ^ 0x16F6465ALL;
  STACK[0x6640] = v33;
  v34 = STACK[0x63B8];
  v35 = *(unsigned __int8 *)(STACK[0x63B8] + (v32 ^ 0x14));
  v36 = STACK[0xD9A0];
  STACK[0x65F0] = STACK[0xD9A0];
  v37 = STACK[0x63D0];
  LOBYTE(v24) = *(_BYTE *)(STACK[0x63D0] + (*(unsigned __int8 *)(v36 + v33) ^ 0xF8));
  LODWORD(v32) = ((v35 ^ 0x2A) << 24) | (((v24 + 6) ^ (8 * (v24 + 6)) ^ (((_BYTE)v24 << 7) | 0x17)) << 8);
  v38 = *(unsigned __int8 *)(v36 + v28);
  v30 ^= 0x6751FC56uLL;
  STACK[0x6638] = v30;
  LODWORD(v38) = ((v38 ^ 0x70) - 111) ^ *(unsigned __int8 *)(v25 + (v38 ^ 0x2E));
  LODWORD(v33) = (v26 << 16) | ((*(unsigned __int8 *)(v25 + (*(unsigned __int8 *)(v36 + v30) ^ 0xC5)) ^ ((*(unsigned __int8 *)(v36 + v30) ^ 0x9B) - 111) ^ 0x45) << 24);
  LODWORD(STACK[0x65E8]) = a2 & 0xFFFFFFF2;
  LODWORD(v38) = v32 | v38;
  LODWORD(STACK[0x6648]) = a2 & 0xFFFFFFF3;
  LODWORD(v32) = ((a2 & 0xFFFFFFF3 ^ LODWORD(STACK[0x30D4]))
                + (a2 & 0xD65C92E2 ^ 0xC410022E)
                - ((a2 & 0xFFFFFFF3 ^ LODWORD(STACK[0x30D4])) & 0xD65C92E2)) ^ 0xE6D918EF;
  LODWORD(STACK[0x6620]) = a2 & 0xFFFFFFF8;
  v39 = *(unsigned __int8 *)(v36
                           + ((1203261137 - (v32 | 0x47B84ED1) + (v32 | 0xB847B12E)) ^ 0x1B86E91));
  LODWORD(v39) = *(unsigned __int8 *)(v25 + (v39 ^ v16)) ^ ((v39 ^ v9) - 111) ^ 0x39;
  LODWORD(STACK[0x65E0]) = a2 & 0xFFFFFFF1;
  v40 = STACK[0x63C0];
  v41 = *(unsigned __int8 *)(v36
                           + (((a2 & 0xFFFFFFF1 ^ 0x25283EB1)
                             - ((2 * (a2 & 0xFFFFFFF1 ^ 0x25283EB1)) & 0x535CB042)
                             + 699291691) ^ 0x9E91A3F4));
  LODWORD(v39) = ((*(unsigned __int8 *)(STACK[0x63C0]
                                      + (*(unsigned __int8 *)(v36
                                                            + ((-1196447167
                                                              - (((a2 & 0xFFFFFFF2 ^ 0xF26493E7) - 1) ^ 0x1D7CAB16)
                                                              + ((2 * (((a2 & 0xFFFFFFF2 ^ 0xF26493E7) - 1) ^ 0x1D7CAB16)) & 0x8EA091C4)
                                                              + 3292) ^ 0xC5A04A82)) ^ 0xF2)) ^ 0xDC) << 16) | ((_DWORD)v39 << 24) | ((*(unsigned __int8 *)(v25 + (v41 ^ 0x33)) ^ ((v41 ^ 0x6D) - 111) ^ 0xAF) << 8);
  LODWORD(v30) = (-1644073339
                - (a2 & 0xFFFFFFF4 ^ 0x32DE3020)
                + ((2 * (a2 & 0xFFFFFFF4 ^ 0x32DE3020)) | 0xC3FD1646)
                + 1624) ^ 0x28DA8910;
  v42 = (v30 - ((2 * (_DWORD)v30) & 0x8095443A) + 1078632989) ^ 0xA9A75565;
  STACK[0x6628] = v42;
  v43 = *(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v36 + v42) ^ 0x5ELL)) | v33;
  v44 = ((a2 & 0x1E7D7E75 ^ 0x1604086C) + (a2 & 0xE1828180 ^ 0x20820001) - 1) ^ 0xA491CD06;
  STACK[0x6630] = v44;
  LOBYTE(v44) = *(_BYTE *)(v37 + (*(unsigned __int8 *)(v36 + v44) ^ 0xA2));
  v45 = v43 & 0xFFFF00FF | (((v44 + 6) ^ (8 * (v44 + 6)) ^ (((_BYTE)v44 << 7) | 0x2B)) << 8);
  LOBYTE(v44) = *(_BYTE *)(v37
                         + (*(unsigned __int8 *)(v36
                                               + ((((2 * (a2 & 0xFFFFFFFA ^ 0x6F6C7E90)) & 0xF6C53AE0)
                                                 - (a2 & 0xFFFFFFFA ^ 0x6F6C7E90)
                                                 + 77423246) ^ 0xF9E6D971)) ^ 0xBFLL));
  LOBYTE(v28) = *(_BYTE *)(v37
                         + (*(unsigned __int8 *)(v36
                                               + ((((2 * (a2 & 0xFFFFFFF8 ^ 0xD7C7881)) & 0x754CAA0)
                                                 - (a2 & 0xFFFFFFF8 ^ 0xD7C7881)
                                                 - 61498707) ^ 0x633E2743)) ^ 0xD3));
  LOBYTE(v28) = (v28 + 6) ^ (8 * (v28 + 6)) ^ (((_BYTE)v28 << 7) | 0x6B);
  LODWORD(v37) = v28 | (((v44 + 6) ^ (8 * (v44 + 6)) ^ (v11 | ((_BYTE)v44 << 7))) << 16);
  v46 = (((2 * (a2 & 0xFFFFFFFE ^ 0xAC4A910)) & 0x74779CA8) - (a2 & 0xFFFFFFFE ^ 0xAC4A910) + 1170485674) ^ 0xDD175DD1;
  STACK[0x6618] = v46;
  LODWORD(v42) = v38 | ((*(unsigned __int8 *)(v40 + (*(unsigned __int8 *)(v36 + v46) ^ 0xE3)) ^ 0xAC) << 16);
  v47 = ((a2 & 0xFFFFFFF0 ^ 0xDF3C98E0) + (a2 & 0x97162F50 ^ 0x22714) - ((a2 & 0xFFFFFFF0 ^ 0xDF3C98E0) & 0x97162F50)) & 0xFFFFFFF0 ^ 0xDA3D72DF;
  STACK[0x6608] = v47;
  v48 = -632910076 - (a2 & 0xFFFFFFF9 ^ 0xE8E86A81 | 0xDA468F04) + (a2 & 0xFFFFFFF9 ^ 0xE8E86A81 | 0x25B970FB);
  LODWORD(v41) = ((*(_BYTE *)(v36 + v47) ^ 0xD9) - 111) ^ *(unsigned __int8 *)(v25
                                                                                              + (*(unsigned __int8 *)(v36 + v47) ^ 0x87)) | v39;
  LODWORD(STACK[0x6610]) = a2 & 0xFFFFFFFB;
  LODWORD(v44) = (2026116736 - (a2 & 0xFFFFFFFB ^ 0x560C3D8) + ((2 * (a2 & 0xFFFFFFFB ^ 0x560C3D8)) & 0xE77B7C0) + 3487) ^ 0x704C045E;
  LODWORD(v25) = (v42 ^ 0xC6) & LODWORD(STACK[0x6218]);
  STACK[0x65F8] = v48 ^ 0x5F46DF14;
  LODWORD(v48) = ((*(unsigned __int8 *)(v40 + (*(unsigned __int8 *)(v36 + (v48 ^ 0x5F46DF14)) ^ 0x63)) ^ v10) << 8) | ((*(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v36 + ((-411357175 - (v44 | 0xE77B3009) + (v44 | 0x1884CFF6)) ^ 0x877BE901)) ^ 0x47)) ^ 0x47) << 24) | v37;
  v49 = v48 + 2077494956 - 2 * (v48 & 0x7BD40EBD ^ v28 & 0x11);
  LODWORD(STACK[0x64F8]) = v42;
  LODWORD(v48) = ((((unint64_t)(v25 ^ v42 & 0xA1CB8032) >> 1) ^ 1)
                + 515128086
                - 2
                * ((((unint64_t)(v25 ^ v42 & 0xA1CB8032) >> 1) ^ 1) & 0x1EB43BD3 ^ ((unint64_t)(v25 ^ v42 & 0xA1CB8032) >> 1) & 2)
                + 187) ^ v42;
  LODWORD(v28) = (LODWORD(STACK[0x6200]) ^ 0x10870E22 ^ (v49 ^ 0x97B708E) & STACK[0x6498])
               - ((2 * (LODWORD(STACK[0x6200]) ^ 0x10870E22 ^ (v49 ^ 0x97B708E) & STACK[0x6498])) & 0x100ADE4C);
  LOBYTE(v39) = STACK[0x6458];
  LODWORD(v46) = ((((((v48 ^ 0x1EB43B16) & STACK[0x61F0] ^ v48 & 0x19A911D3) & 0x3A96B30B ^ 0x3216A20B)
                  + ((v48 ^ 0x1EB43B16) & STACK[0x61F0] ^ v48 & 0x19A911D3 ^ 0x8A11140)
                  - (((v48 ^ 0x1EB43B16) & STACK[0x61F0] ^ v48 & 0x19A911D3 ^ 0x8A11140) & 0x3A96B30B)) ^ 0x2A97B359) << v39)
               + (((v48 ^ 0x1EB43B16) & v12) >> LODWORD(STACK[0x6478]) >> LODWORD(STACK[0x6480]));
  LODWORD(STACK[0x65C0]) = v46;
  LODWORD(STACK[0x64E8]) = v49;
  LODWORD(v44) = ((((v28 - 2012909786) >> 1) ^ 0x7C11A982)
                + 2077494956
                - ((2 * (((v28 - 2012909786) >> 1) ^ 0x7C11A982)) & 0xF7A81D58)) ^ v49;
  LODWORD(v44) = ((((v44 & STACK[0x6418] & 0xC7EFE551 ^ 0xC6E5E111)
                  + (v44 & STACK[0x6418] & 0x38101AAE ^ 0x30000003)
                  - 1) ^ 0xF6E5E113) >> a7) ^ ((v44 & STACK[0x6410]) << a6);
  LODWORD(STACK[0x65B8]) = v44;
  LODWORD(v28) = (1151579248
                - (LODWORD(STACK[0x6210]) ^ 0x904C0E ^ (v45 ^ 0x3092ED7F) & STACK[0x6470] | 0x44A3B470)
                + (LODWORD(STACK[0x6210]) ^ 0x904C0E ^ (v45 ^ 0x3092ED7F) & STACK[0x6470] | 0xBB5C4B8F)) >> 1;
  LODWORD(STACK[0x6500]) = v45;
  LODWORD(v28) = ((v28 ^ 0x55A613C0) + 1164482819 - 2 * ((v28 ^ 0x55A613C0) & 0x4568990B ^ v28 & 8)) ^ v45;
  LODWORD(v37) = v28 ^ 0x45689962;
  LODWORD(v28) = v28 & 0x546953C3 ^ 0x54614302 ^ (v28 ^ 0x45689962) & LODWORD(STACK[0x6208]);
  v50 = (v41 ^ 0x58) & LODWORD(STACK[0x61F8]) ^ v41 & 0xA44D669E;
  LODWORD(v28) = (((-611561798 - (v28 | 0xDB8C4EBA) + (v28 | 0x2473B145)) ^ 0x347AE305) << v39) | ((v37 & v12) >> LODWORD(STACK[0x64A8]) >> LODWORD(STACK[0x64A0]));
  LODWORD(STACK[0x64F0]) = v41;
  LODWORD(v37) = (-14717558 - (v50 & 0xFE3EDBA4) + ((v50 >> 1) ^ 0xC) + 72) ^ v41;
  LODWORD(v47) = ((v37 & 0x4F18E9B8 ^ 0x4F186988 ^ (v37 ^ 0xFF1F6D8A) & STACK[0x6240]) >> a7) ^ ((v37 & 0xFFADAA91 ^ 0xFF0D2880 ^ (v37 ^ 0xFF1F6D8A) & STACK[0x61E8]) << a6);
  LODWORD(STACK[0x65A8]) = v47;
  LODWORD(STACK[0x66B8]) = a8;
  LODWORD(STACK[0x66A0]) = v13;
  v51 = a8 + v13 - v46;
  LODWORD(v36) = -933415527 * v51
               - ((-933415527 * v51) >> 16)
               + ((-933415527 * v51 - ((-933415527 * v51) >> 16)) >> 8)
               + v44;
  v52 = -1996311307 * v36 + ((-1996311307 * v36) >> 16);
  LODWORD(v53) = __ROR4__(v52 ^ 0x5B63DF1A, 26) ^ 0xD8F7C696;
  HIDWORD(v53) = v53;
  LODWORD(v40) = v53 >> 6;
  v54 = v52 + LODWORD(STACK[0x6A30]) - v40;
  LODWORD(v40) = -13401021 * ((v52 + (v40 >> 8)) ^ v47)
               + ((-13401021 * ((v52 + (v40 >> 8)) ^ v47)) >> 16);
  LODWORD(STACK[0x65B0]) = v28;
  LODWORD(STACK[0x6598]) = v40 + v28 + (v40 >> 8);
  v55 = ((LODWORD(STACK[0x6A20]) - v51) ^ v51) + 2 * ((LODWORD(STACK[0x6A20]) - v51) & v51);
  v56 = (v36 ^ v14) - v36 + 2 * (v36 & v14);
  v57 = LODWORD(STACK[0x6680]) >= 0xC9A312E4;
  v58 = -13401021 * ((v52 + (v52 >> 8)) ^ v47) + ((-13401021 * ((v52 + (v52 >> 8)) ^ v47)) >> 16);
  v59 = -1496340151 * (v58 + (v58 >> 8) + v28) - ((-1496340151 * (v58 + (v58 >> 8) + v28)) >> 16);
  v60 = STACK[0xD9B8];
  STACK[0x65A0] = STACK[0xD9B8];
  v61 = (v59 - (v59 >> 8)) ^ v60;
  LODWORD(STACK[0x6AB0]) = v61;
  v62 = !v57;
  LODWORD(STACK[0x6600]) = v62;
  v63 = (v61 & 1) == 0;
  v64 = STACK[0x67C0];
  v65 = STACK[0x6780];
  if (v63)
    v66 = STACK[0x6780];
  else
    v66 = STACK[0x67C0];
  LODWORD(STACK[0x68B0]) = v66;
  v67 = STACK[0x6790];
  if (v63)
    v65 = STACK[0x6790];
  LODWORD(STACK[0x68F0]) = v65;
  v68 = STACK[0x67E0];
  if (!v63)
    v64 = STACK[0x67E0];
  LODWORD(STACK[0x67C0]) = v64;
  if (v63)
    v69 = v68;
  else
    v69 = v67;
  v70 = STACK[0x67A0];
  if (v63)
    v71 = STACK[0x67A0];
  else
    v71 = v18;
  LODWORD(STACK[0x66C8]) = v71;
  v72 = STACK[0x67B0];
  if (v63)
    v70 = STACK[0x67B0];
  LODWORD(STACK[0x68E0]) = v70;
  v73 = STACK[0x67D0];
  if (v63)
    v74 = v73;
  else
    v74 = v72;
  if (v63)
    v73 = v18;
  *(_QWORD *)(v19 - 152) = v74;
  LODWORD(STACK[0x65C8]) = v73;
  v75 = STACK[0x6A70];
  if (v63)
    v76 = STACK[0x6A70];
  else
    v76 = v56;
  LODWORD(STACK[0x6A30]) = v76;
  if (v63)
    v77 = v15;
  else
    v77 = v75;
  v78 = STACK[0x6A80];
  if (v63)
    v79 = STACK[0x6A80];
  else
    v79 = v15;
  LODWORD(STACK[0x6558]) = v79;
  if (!v63)
    v56 = v78;
  v80 = STACK[0x68C0];
  if (v63)
    v81 = STACK[0x68C0];
  else
    v81 = v17;
  LODWORD(STACK[0x6A20]) = v81;
  if (v63)
    v82 = v17;
  else
    v82 = STACK[0x6770];
  v83 = STACK[0x68D0];
  if (v63)
    v84 = STACK[0x6770];
  else
    v84 = STACK[0x68D0];
  LODWORD(STACK[0x6770]) = v84;
  if (v63)
    v85 = v83;
  else
    v85 = v80;
  v86 = STACK[0x6A60];
  if (v63)
    v87 = v20;
  else
    v87 = STACK[0x6A60];
  LODWORD(STACK[0x6590]) = v87;
  if (v63)
    v88 = STACK[0x6A40];
  else
    v88 = v20;
  if (v63)
    v89 = v86;
  else
    v89 = STACK[0x6A50];
  if (v63)
    v90 = STACK[0x6A50];
  else
    v90 = STACK[0x6A40];
  v91 = STACK[0x6890];
  v92 = STACK[0x6880];
  if (v63)
    v93 = STACK[0x6890];
  else
    v93 = STACK[0x6880];
  LODWORD(STACK[0x6550]) = v93;
  v94 = STACK[0x68A0];
  if (v63)
    v95 = STACK[0x68A0];
  else
    v95 = v91;
  LODWORD(STACK[0x6570]) = v95;
  if (v63)
    v96 = STACK[0x6870];
  else
    v96 = v94;
  if (v63)
    v97 = v92;
  else
    v97 = STACK[0x6870];
  v98 = STACK[0x6A10];
  if (v63)
    v99 = v55;
  else
    v99 = STACK[0x6A10];
  LODWORD(STACK[0x6588]) = v99;
  if (v63)
    v100 = v54;
  else
    v100 = v55;
  LODWORD(STACK[0x6528]) = v100;
  if (v63)
    v101 = v98;
  else
    v101 = STACK[0x6A00];
  if (v63)
    v54 = STACK[0x6A00];
  v102 = STACK[0x6860];
  v103 = STACK[0x6850];
  if (v63)
    v104 = STACK[0x6860];
  else
    v104 = STACK[0x6850];
  LODWORD(STACK[0x6548]) = v104;
  v105 = STACK[0x6830];
  if (v63)
    v102 = STACK[0x6830];
  LODWORD(STACK[0x6568]) = v102;
  if (v63)
  {
    v105 = STACK[0x6840];
    v106 = v103;
  }
  else
  {
    v106 = STACK[0x6840];
  }
  v107 = STACK[0x69D0];
  v108 = STACK[0x69C0];
  if (v63)
    v109 = STACK[0x69D0];
  else
    v109 = STACK[0x69C0];
  LODWORD(STACK[0x6540]) = v109;
  v110 = STACK[0x69F0];
  if (v63)
    v111 = v108;
  else
    v111 = STACK[0x69F0];
  LODWORD(STACK[0x69C0]) = v111;
  if (v63)
    v112 = v110;
  else
    v112 = STACK[0x69E0];
  if (v63)
    v113 = STACK[0x69E0];
  else
    v113 = v107;
  LODWORD(STACK[0x6520]) = v113;
  v114 = STACK[0x6820];
  v115 = STACK[0x67F0];
  if (v63)
    v116 = STACK[0x67F0];
  else
    v116 = STACK[0x6820];
  LODWORD(STACK[0x6580]) = v116;
  v117 = STACK[0x6810];
  if (!v63)
    v114 = STACK[0x6810];
  LODWORD(STACK[0x6518]) = v114;
  v118 = STACK[0x6800];
  if (v63)
  {
    v115 = STACK[0x6800];
    v118 = v117;
  }
  LODWORD(STACK[0x6810]) = v118;
  v119 = STACK[0x69A0];
  v120 = STACK[0x6990];
  if (v63)
    v121 = STACK[0x69A0];
  else
    v121 = STACK[0x6990];
  LODWORD(STACK[0x6538]) = v121;
  v122 = STACK[0x6980];
  if (!v63)
    v120 = STACK[0x6980];
  LODWORD(STACK[0x6560]) = v120;
  if (v63)
  {
    v123 = STACK[0x69B0];
  }
  else
  {
    v122 = STACK[0x69B0];
    v123 = v119;
  }
  v124 = STACK[0x6960];
  v125 = STACK[0x6950];
  if (v63)
    v126 = STACK[0x6960];
  else
    v126 = STACK[0x6950];
  LODWORD(STACK[0x6530]) = v126;
  v127 = STACK[0x6940];
  if (!v63)
    v125 = STACK[0x6940];
  LODWORD(STACK[0x6950]) = v125;
  if (v63)
  {
    v128 = STACK[0x6970];
  }
  else
  {
    v127 = STACK[0x6970];
    v128 = v124;
  }
  v129 = STACK[0x6930];
  v130 = STACK[0x6740];
  if (v63)
    v131 = STACK[0x6930];
  else
    v131 = STACK[0x6740];
  LODWORD(STACK[0x6578]) = v131;
  if (v63)
    v132 = STACK[0x6750];
  else
    v132 = v129;
  if (v63)
    v133 = v130;
  else
    v133 = STACK[0x6730];
  if (v63)
    v134 = STACK[0x6730];
  else
    v134 = STACK[0x6750];
  v135 = STACK[0x6710];
  v136 = STACK[0x6708];
  if (v63)
    v137 = STACK[0x6710];
  else
    v137 = STACK[0x6708];
  LODWORD(STACK[0x6750]) = v137;
  v138 = STACK[0x6700];
  if (!v63)
    v136 = STACK[0x6700];
  LODWORD(STACK[0x6708]) = v136;
  v139 = STACK[0x6720];
  if (v63)
  {
    v135 = STACK[0x6720];
    v139 = v138;
  }
  LODWORD(STACK[0x6710]) = v139;
  v140 = STACK[0x66F8];
  v141 = STACK[0x66F0];
  if (v63)
    v142 = STACK[0x66F0];
  else
    v142 = STACK[0x66F8];
  LODWORD(STACK[0x6740]) = v142;
  v143 = STACK[0x66A8];
  if (v63)
    v144 = STACK[0x66A8];
  else
    v144 = v141;
  LODWORD(STACK[0x6700]) = v144;
  v145 = STACK[0x66B0];
  if (v63)
    v143 = STACK[0x66B0];
  LODWORD(STACK[0x6720]) = v143;
  if (v63)
    v146 = v140;
  else
    v146 = v145;
  v147 = STACK[0x66E8];
  v148 = STACK[0x6920];
  if (v63)
    v149 = STACK[0x66E8];
  else
    v149 = STACK[0x6920];
  LODWORD(STACK[0x6730]) = v149;
  v150 = STACK[0x66E0];
  if (!v63)
    v148 = STACK[0x66E0];
  LODWORD(STACK[0x66F8]) = v148;
  if (v63)
    v147 = STACK[0x66D8];
  else
    v150 = STACK[0x66D8];
  LODWORD(STACK[0x66F0]) = v150;
  v151 = (STACK[0x6AB0] & 2) == 0;
  v152 = STACK[0x68B0];
  if ((STACK[0x6AB0] & 2) != 0)
    v153 = v69;
  else
    v153 = STACK[0x68B0];
  LODWORD(STACK[0x6780]) = v153;
  if (v151)
    v154 = v69;
  else
    v154 = v152;
  LODWORD(STACK[0x67E0]) = v154;
  v155 = STACK[0x68F0];
  v156 = STACK[0x67C0];
  if (v151)
    v157 = STACK[0x68F0];
  else
    v157 = STACK[0x67C0];
  LODWORD(STACK[0x6790]) = v157;
  v158 = *(_QWORD *)(v19 - 152);
  if (v151)
    v159 = v156;
  else
    v159 = v155;
  LODWORD(STACK[0x67C0]) = v159;
  v160 = STACK[0x66C8];
  if (v151)
    v161 = STACK[0x66C8];
  else
    v161 = v158;
  LODWORD(STACK[0x67A0]) = v161;
  if (v151)
    v162 = v158;
  else
    v162 = v160;
  LODWORD(STACK[0x67D0]) = v162;
  v163 = STACK[0x68E0];
  v164 = STACK[0x65C8];
  if (v151)
    v165 = STACK[0x68E0];
  else
    v165 = STACK[0x65C8];
  LODWORD(STACK[0x67B0]) = v165;
  if (v151)
    v166 = v164;
  else
    v166 = v163;
  LODWORD(STACK[0x65C8]) = v166;
  if (v151)
    v167 = v77;
  else
    v167 = v56;
  LODWORD(STACK[0x68E0]) = v167;
  if (v151)
    v168 = v56;
  else
    v168 = v77;
  LODWORD(STACK[0x68F0]) = v168;
  v169 = STACK[0x6A30];
  v170 = STACK[0x6558];
  if (v151)
    v171 = STACK[0x6A30];
  else
    v171 = STACK[0x6558];
  LODWORD(STACK[0x6A70]) = v171;
  if (v151)
    v172 = v170;
  else
    v172 = v169;
  LODWORD(STACK[0x6A80]) = v172;
  if (v151)
    v173 = v82;
  else
    v173 = v85;
  LODWORD(STACK[0x66C8]) = v173;
  if (v151)
    v174 = v85;
  else
    v174 = v82;
  LODWORD(STACK[0x68D0]) = v174;
  v175 = STACK[0x6A20];
  v176 = STACK[0x6770];
  if (v151)
    v177 = STACK[0x6A20];
  else
    v177 = STACK[0x6770];
  LODWORD(STACK[0x68C0]) = v177;
  if (v151)
    v178 = v176;
  else
    v178 = v175;
  LODWORD(STACK[0x6770]) = v178;
  if (v151)
    v179 = v89;
  else
    v179 = v88;
  LODWORD(STACK[0x6A60]) = v179;
  if (v151)
    v180 = v88;
  else
    v180 = v89;
  LODWORD(STACK[0x6A40]) = v180;
  v181 = STACK[0x6590];
  if (v151)
    v182 = STACK[0x6590];
  else
    v182 = v90;
  LODWORD(STACK[0x68B0]) = v182;
  if (v151)
    v183 = v90;
  else
    v183 = v181;
  LODWORD(STACK[0x6A50]) = v183;
  v184 = STACK[0x6550];
  if (v151)
    v185 = STACK[0x6550];
  else
    v185 = v96;
  LODWORD(STACK[0x6890]) = v185;
  if (v151)
    v186 = v96;
  else
    v186 = v184;
  LODWORD(STACK[0x6870]) = v186;
  v187 = STACK[0x6570];
  if (v151)
    v188 = v97;
  else
    v188 = STACK[0x6570];
  LODWORD(STACK[0x6880]) = v188;
  if (v151)
    v189 = v187;
  else
    v189 = v97;
  LODWORD(STACK[0x68A0]) = v189;
  v190 = STACK[0x6528];
  if (v151)
    v191 = v101;
  else
    v191 = STACK[0x6528];
  LODWORD(STACK[0x6A10]) = v191;
  if (v151)
    v192 = v190;
  else
    v192 = v101;
  LODWORD(STACK[0x6A30]) = v192;
  v193 = STACK[0x6588];
  if (v151)
    v194 = v54;
  else
    v194 = STACK[0x6588];
  LODWORD(STACK[0x6A00]) = v194;
  if (v151)
    v195 = v193;
  else
    v195 = v54;
  LODWORD(STACK[0x6A20]) = v195;
  v196 = STACK[0x6548];
  if (v151)
    v197 = STACK[0x6548];
  else
    v197 = v105;
  LODWORD(STACK[0x6860]) = v197;
  if (v151)
    v198 = v105;
  else
    v198 = v196;
  LODWORD(STACK[0x6840]) = v198;
  v199 = STACK[0x6568];
  if (v151)
    v200 = STACK[0x6568];
  else
    v200 = v106;
  LODWORD(STACK[0x6830]) = v200;
  if (v151)
    v201 = v106;
  else
    v201 = v199;
  LODWORD(STACK[0x6850]) = v201;
  v202 = STACK[0x6540];
  if (v151)
    v203 = v112;
  else
    v203 = STACK[0x6540];
  LODWORD(STACK[0x69F0]) = v203;
  if (v151)
    v204 = v202;
  else
    v204 = v112;
  LODWORD(STACK[0x69D0]) = v204;
  v205 = STACK[0x69C0];
  v206 = STACK[0x6520];
  if (v151)
    v207 = STACK[0x6520];
  else
    v207 = STACK[0x69C0];
  LODWORD(STACK[0x69E0]) = v207;
  if (v151)
    v208 = v205;
  else
    v208 = v206;
  LODWORD(STACK[0x69C0]) = v208;
  v209 = STACK[0x6518];
  if (v151)
    v210 = STACK[0x6518];
  else
    v210 = v115;
  LODWORD(STACK[0x6820]) = v210;
  if (v151)
    v211 = v115;
  else
    v211 = v209;
  LODWORD(STACK[0x6800]) = v211;
  v212 = STACK[0x6580];
  v213 = STACK[0x6810];
  if (v151)
    v214 = STACK[0x6580];
  else
    v214 = STACK[0x6810];
  LODWORD(STACK[0x67F0]) = v214;
  if (v151)
    v215 = v213;
  else
    v215 = v212;
  LODWORD(STACK[0x6810]) = v215;
  v216 = STACK[0x6538];
  if (v151)
    v217 = v122;
  else
    v217 = STACK[0x6538];
  LODWORD(STACK[0x6980]) = v217;
  if (v151)
    v218 = v216;
  else
    v218 = v122;
  LODWORD(STACK[0x69A0]) = v218;
  v219 = STACK[0x6560];
  if (v151)
    v220 = STACK[0x6560];
  else
    v220 = v123;
  LODWORD(STACK[0x6990]) = v220;
  if (v151)
    v221 = v123;
  else
    v221 = v219;
  LODWORD(STACK[0x69B0]) = v221;
  v222 = STACK[0x6530];
  if (v151)
    v223 = v127;
  else
    v223 = STACK[0x6530];
  LODWORD(STACK[0x6940]) = v223;
  if (v151)
    v224 = v222;
  else
    v224 = v127;
  LODWORD(STACK[0x6960]) = v224;
  v225 = STACK[0x6950];
  if (v151)
    v226 = v128;
  else
    v226 = STACK[0x6950];
  LODWORD(STACK[0x6970]) = v226;
  if (v151)
    v227 = v225;
  else
    v227 = v128;
  LODWORD(STACK[0x6950]) = v227;
  if (v151)
    v228 = v132;
  else
    v228 = v133;
  if (v151)
    v132 = v133;
  v229 = STACK[0x6578];
  if (v151)
    v230 = STACK[0x6578];
  else
    v230 = v134;
  LODWORD(STACK[0x6930]) = v230;
  if (v151)
  {
    v231 = STACK[0x6708];
  }
  else
  {
    v134 = v229;
    v231 = v135;
  }
  if (v151)
    v232 = v135;
  else
    v232 = STACK[0x6708];
  if (v151)
    v233 = STACK[0x6710];
  else
    v233 = STACK[0x6750];
  if (v151)
    v234 = STACK[0x6750];
  else
    v234 = STACK[0x6710];
  if (v151)
    v235 = STACK[0x6700];
  else
    v235 = v146;
  if (v151)
    v236 = v146;
  else
    v236 = STACK[0x6700];
  if (v151)
    v237 = STACK[0x6720];
  else
    v237 = STACK[0x6740];
  if (v151)
    v238 = STACK[0x6740];
  else
    v238 = STACK[0x6720];
  v239 = STACK[0x66F8];
  if (v151)
    v240 = STACK[0x66F8];
  else
    v240 = v147;
  LODWORD(STACK[0x6920]) = v240;
  if (v151)
    v241 = v147;
  else
    v241 = v239;
  if (v151)
    v242 = STACK[0x6730];
  else
    v242 = STACK[0x66F0];
  if (v151)
    v243 = STACK[0x66F0];
  else
    v243 = STACK[0x6730];
  v244 = -1496340151 * LODWORD(STACK[0x6598]) - ((-1496340151 * LODWORD(STACK[0x6598])) >> 16);
  v245 = STACK[0x65A0];
  v246 = ((v244 - (v244 >> 8)) ^ STACK[0x65A0]) + LODWORD(STACK[0x6910]);
  v247 = STACK[0x65C0];
  v248 = STACK[0x65B8];
  if ((v246 & 1) != 0)
    v249 = STACK[0x65B8];
  else
    v249 = STACK[0x65C0];
  v250 = STACK[0x65B0];
  if ((v246 & 1) != 0)
  {
    v248 = STACK[0x65B0];
    v250 = STACK[0x65A8];
  }
  else
  {
    v247 = STACK[0x65A8];
  }
  if ((v246 & 2) != 0)
    v251 = v249;
  else
    v251 = v250;
  if ((v246 & 2) != 0)
  {
    v249 = v250;
    v252 = v247;
  }
  else
  {
    v252 = v248;
  }
  if ((v246 & 2) == 0)
    v248 = v247;
  v253 = STACK[0x63D8];
  v254 = LODWORD(STACK[0x66D0]) ^ LODWORD(STACK[0x63D8]);
  v255 = v254 ^ LODWORD(STACK[0x61E0]) ^ LODWORD(STACK[0x61DC]);
  LODWORD(STACK[0x66E8]) = v242;
  v256 = v255 ^ v242 ^ 0x55F9A514 ^ v249;
  v257 = v254 ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x63B0]) ^ v240 ^ 0xFACAD969 ^ v252;
  v258 = LODWORD(STACK[0x6440]) ^ v253 ^ LODWORD(STACK[0x63A8]) ^ LODWORD(STACK[0x61C8]);
  LODWORD(STACK[0x66D8]) = v241;
  v259 = v258 ^ v241 ^ 0x36DBB752 ^ v248;
  v260 = v254 ^ LODWORD(STACK[0x6438]) ^ LODWORD(STACK[0x63A0]) ^ LODWORD(STACK[0x61C0]);
  LODWORD(STACK[0x66E0]) = v243;
  v261 = v260 ^ v243 ^ 0x315CD4EF ^ v251;
  v262 = v245 + 4 * v256;
  v263 = v245 + 4 * BYTE2(v259);
  STACK[0xD9B8] = v262;
  LODWORD(v262) = *(_DWORD *)v262;
  STACK[0xD9B8] = v263;
  LODWORD(v263) = *(_DWORD *)v263;
  STACK[0xD9B8] = v245;
  v264 = *(_DWORD *)(v245 + 4 * BYTE1(v259));
  v265 = (_DWORD *)(v245 + 4 * BYTE2(v261));
  v266 = (_DWORD *)(v245 + 4 * BYTE1(v256));
  STACK[0xD9B8] = (unint64_t)v265;
  LODWORD(v262) = *v265 ^ __ROR4__(v262, 16);
  v267 = (_DWORD *)(v245 + 4 * HIBYTE(v256));
  v268 = 4 * BYTE1(v257);
  STACK[0xD9B8] = (unint64_t)v266;
  LODWORD(v266) = *v266;
  STACK[0xD9B8] = (unint64_t)v267;
  LODWORD(v267) = *v267;
  STACK[0xD9B8] = v245 + v268;
  LODWORD(v262) = v262 ^ __ROR4__(*(_DWORD *)(v245 + v268), 8);
  v269 = 4 * HIBYTE(v257);
  STACK[0xD9B8] = v245 + v269;
  HIDWORD(v270) = *(_DWORD *)(v245 + v269);
  LODWORD(v270) = HIDWORD(v270);
  v271 = v245 + 4 * v257;
  v272 = (_DWORD *)(v245 + 4 * BYTE1(v261));
  v273 = v245 + 4 * BYTE2(v257);
  v274 = 4 * BYTE2(v256);
  v275 = v245 + v274;
  STACK[0xD9B8] = v271;
  LODWORD(v271) = *(_DWORD *)v271;
  STACK[0xD9B8] = (unint64_t)v272;
  LODWORD(v272) = *v272;
  STACK[0xD9B8] = v273;
  LODWORD(v273) = *(_DWORD *)v273;
  STACK[0xD9B8] = v245 + v274;
  v276 = (v270 >> 24) ^ __ROR4__(v264, 8) ^ *(_DWORD *)(v245 + v274);
  v277 = 4 * v259;
  v278 = (_DWORD *)(v275 + v277 - v274);
  v279 = &v278[v277 / 0xFFFFFFFFFFFFFFFCLL];
  v280 = HIBYTE(v261);
  v281 = (unint64_t)&v279[v280];
  v282 = 4 * v261;
  v283 = (_DWORD *)(v281 + v282 - v280 * 4);
  v284 = 4 * HIBYTE(v259);
  v285 = &v283[(unint64_t)v284 / 4 + v282 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = (unint64_t)v278;
  LODWORD(v278) = *v278;
  STACK[0xD9B8] = v281;
  LODWORD(v281) = *(_DWORD *)v281;
  STACK[0xD9B8] = (unint64_t)v283;
  v286 = v276 ^ __ROR4__(*v283, 16);
  STACK[0xD9B8] = (unint64_t)v285;
  v287 = &v285[v284 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v285) = v262 ^ __ROR4__(*v285, 24);
  v288 = LODWORD(STACK[0x6AB0]) + LODWORD(STACK[0x66C0]);
  LODWORD(v262) = LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x63E0]);
  LODWORD(v263) = v262 ^ LODWORD(STACK[0x6398]) ^ v263 ^ __ROR4__((_DWORD)v267, 24) ^ __ROR4__(v271, 16);
  LODWORD(v271) = LODWORD(STACK[0x6AB0]) + LODWORD(STACK[0x6A90]);
  LODWORD(STACK[0x6A90]) = v271;
  LODWORD(v271) = v271 + v286 - v246;
  v289 = v262 ^ LODWORD(STACK[0x6390]);
  LODWORD(STACK[0x66B0]) = v237;
  LODWORD(v271) = v289 ^ v237 ^ v271;
  LODWORD(v270) = __ROR4__(v281, 24);
  LODWORD(v281) = v262 ^ LODWORD(STACK[0x61BC]) ^ LODWORD(STACK[0x6388]);
  LODWORD(STACK[0x66F0]) = v238;
  LODWORD(v281) = v281 ^ v238 ^ ((((_DWORD)v285 - v246) ^ v288) + 2 * (((_DWORD)v285 - v246) & v288));
  v290 = BYTE1(v281);
  v291 = (unint64_t)&v287[v290];
  v292 = 4 * BYTE3(v271);
  v293 = v291 + v292 - v290 * 4;
  LODWORD(STACK[0x66A8]) = v235;
  LODWORD(v278) = v289 ^ __ROR4__((_DWORD)v266, 8) ^ v273 ^ __ROR4__((_DWORD)v278, 16) ^ v270 ^ v235;
  STACK[0xD9B8] = v291;
  LODWORD(v291) = *(_DWORD *)v291;
  STACK[0xD9B8] = v293;
  v294 = v293 - v292;
  LODWORD(v293) = *(_DWORD *)v293;
  v295 = (int *)(v294 + 4 * BYTE1(v278));
  STACK[0xD9B8] = (unint64_t)v295;
  v296 = *v295;
  v297 = v294 + 4 * (v278 >> 24);
  STACK[0xD9B8] = v297;
  LODWORD(v295) = *(_DWORD *)v297;
  LODWORD(v270) = __ROR4__((_DWORD)v272, 8);
  v298 = v294 + 4 * BYTE2(v278);
  STACK[0xD9B8] = v298;
  LODWORD(STACK[0x66F8]) = v236;
  LODWORD(v263) = v263 ^ v270 ^ v236;
  LODWORD(v297) = *(_DWORD *)v298;
  STACK[0xD9B8] = v294;
  LODWORD(v298) = *(_DWORD *)(v294 + 4 * BYTE2(v271));
  v299 = 4 * BYTE2(v263);
  v300 = v294 + v299;
  v301 = 4 * BYTE2(v281);
  v302 = (_DWORD *)(v300 + v301 - v299);
  v303 = 4 * BYTE3(v263);
  v304 = &v302[(unint64_t)v303 / 4 + v301 / 0xFFFFFFFFFFFFFFFCLL];
  v305 = 4 * v271;
  v306 = &v304[v303 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v305 / 4];
  v307 = v281;
  v308 = (unint64_t)&v306[v307 + v305 / 0xFFFFFFFFFFFFFFFCLL];
  v309 = 4 * BYTE3(v281);
  v310 = v308 + v309 - v307 * 4;
  v311 = 4 * BYTE1(v271);
  v312 = (_DWORD *)(v310 + v311 - v309);
  v313 = v263;
  v314 = (unint64_t)&v312[v313 + v311 / 0xFFFFFFFFFFFFFFFCLL];
  v315 = 4 * v278;
  v316 = (_DWORD *)(v314 + v315 - v313 * 4);
  v317 = BYTE1(v263);
  v318 = (unint64_t)&v316[v317 + v315 / 0xFFFFFFFFFFFFFFFCLL];
  v319 = STACK[0x6408];
  v320 = LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x6408]);
  LODWORD(v291) = v320 ^ LODWORD(STACK[0x6378]) ^ __ROR4__(v291, 8);
  STACK[0xD9B8] = v300;
  LODWORD(v291) = v291 ^ __ROR4__(v293, 24) ^ *(_DWORD *)v300;
  STACK[0xD9B8] = (unint64_t)v302;
  LODWORD(v293) = *v302;
  STACK[0xD9B8] = (unint64_t)v304;
  LODWORD(v300) = *v304;
  STACK[0xD9B8] = (unint64_t)v306;
  LODWORD(v302) = *v306;
  STACK[0xD9B8] = v308;
  LODWORD(v304) = *(_DWORD *)v308;
  STACK[0xD9B8] = v310;
  LODWORD(v306) = *(_DWORD *)v310;
  STACK[0xD9B8] = (unint64_t)v312;
  LODWORD(v312) = *v312;
  STACK[0xD9B8] = v314;
  LODWORD(v314) = *(_DWORD *)v314;
  STACK[0xD9B8] = (unint64_t)v316;
  LODWORD(v308) = *v316;
  LODWORD(STACK[0x6710]) = v234;
  LODWORD(v291) = v291 ^ v234 ^ __ROR4__(v308, 16);
  LODWORD(v308) = v320 ^ LODWORD(STACK[0x6238]);
  LODWORD(v310) = v308 ^ LODWORD(STACK[0x6380]);
  LODWORD(STACK[0x6700]) = v233;
  LODWORD(v312) = v310 ^ v233 ^ v297 ^ __ROR4__((_DWORD)v306, 24) ^ __ROR4__((_DWORD)v312, 8) ^ __ROR4__(v314, 16);
  LODWORD(v314) = v308 ^ LODWORD(STACK[0x61B0]) ^ __ROR4__(v296, 8);
  LODWORD(STACK[0x6720]) = v232;
  LODWORD(v293) = v314 ^ v232 ^ v293 ^ __ROR4__(v300, 24) ^ __ROR4__((_DWORD)v302, 16);
  LODWORD(v300) = v320 ^ LODWORD(STACK[0x6370]) ^ __ROR4__((_DWORD)v295, 24);
  LODWORD(STACK[0x6708]) = v231;
  STACK[0xD9B8] = v318;
  v321 = (_DWORD *)(v318 - v317 * 4);
  LODWORD(v318) = v300 ^ v298 ^ v231 ^ __ROR4__((_DWORD)v304, 16) ^ __ROR4__(*(_DWORD *)v318, 8);
  v322 = &v321[BYTE3(v291)];
  STACK[0xD9B8] = (unint64_t)v322;
  LODWORD(v300) = *v322;
  v323 = BYTE1(v291);
  v324 = (unint64_t)&v321[v323];
  v325 = 4 * (v312 >> 24);
  v326 = (_DWORD *)(v324 + v325 - v323 * 4);
  v327 = 4 * BYTE1(v312);
  v328 = &v326[(unint64_t)v327 / 4 + v325 / 0xFFFFFFFFFFFFFFFCLL];
  v329 = 4 * BYTE3(v293);
  v330 = &v328[(unint64_t)v329 / 4 + v327 / 0xFFFFFFFFFFFFFFFCLL];
  v331 = v312;
  v332 = (unint64_t)&v330[v331 + v329 / 0xFFFFFFFFFFFFFFFCLL];
  v333 = 4 * BYTE1(v293);
  v334 = (_DWORD *)(v332 - v331 * 4 + v333);
  v335 = BYTE2(v291);
  v336 = (unint64_t)&v334[v335 + v333 / 0xFFFFFFFFFFFFFFFCLL];
  v337 = 4 * v293;
  v338 = (_DWORD *)(v336 + v337 - v335 * 4);
  STACK[0xD9B8] = v324;
  LODWORD(v324) = *(_DWORD *)v324;
  STACK[0xD9B8] = (unint64_t)v326;
  LODWORD(v326) = *v326;
  STACK[0xD9B8] = (unint64_t)v328;
  LODWORD(v328) = *v328;
  STACK[0xD9B8] = (unint64_t)v330;
  LODWORD(v330) = *v330;
  STACK[0xD9B8] = v332;
  LODWORD(v332) = *(_DWORD *)v332;
  STACK[0xD9B8] = (unint64_t)v334;
  LODWORD(v334) = *v334;
  STACK[0xD9B8] = v336;
  LODWORD(v336) = *(_DWORD *)v336;
  STACK[0xD9B8] = (unint64_t)v338;
  v339 = &v338[v337 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v338) = *v338;
  v340 = &v339[v318];
  STACK[0xD9B8] = (unint64_t)v340;
  LODWORD(v308) = *v340;
  v341 = 4 * BYTE1(v318);
  v342 = (_DWORD *)((char *)v339 + v341);
  STACK[0xD9B8] = (unint64_t)v342;
  v343 = BYTE2(v293);
  HIDWORD(v270) = *v342;
  LODWORD(v270) = *v342;
  v344 = (unint64_t)&v342[v343] - v341;
  v345 = 4 * v291;
  v346 = v344 + v345 - v343 * 4;
  STACK[0xD9B8] = v344;
  LODWORD(v344) = *(_DWORD *)v344;
  STACK[0xD9B8] = v346;
  v347 = v346 - v345;
  LODWORD(v346) = (v270 >> 8) ^ __ROR4__((_DWORD)v330, 24) ^ __ROR4__(*(_DWORD *)v346, 16);
  v348 = 4 * BYTE3(v318);
  v349 = v347 + v348;
  v350 = 4 * BYTE2(v312);
  v351 = v349 + v350 - v348;
  STACK[0xD9B8] = v349;
  LODWORD(v349) = *(_DWORD *)v349;
  STACK[0xD9B8] = v351;
  v352 = v351 - v350;
  LODWORD(v346) = v346 ^ *(_DWORD *)v351;
  v353 = 4 * BYTE2(v318);
  STACK[0xD9B8] = v352 + v353;
  LODWORD(v351) = v319 ^ LODWORD(STACK[0x63F0]);
  LODWORD(v341) = v351 ^ LODWORD(STACK[0x6368]) ^ LODWORD(STACK[0x6360]);
  LODWORD(STACK[0x6740]) = v132;
  LODWORD(v349) = v341 ^ v132 ^ __ROR4__(v332, 16) ^ __ROR4__((_DWORD)v334, 8) ^ v336 ^ __ROR4__(v349, 24);
  LODWORD(v332) = v351 ^ LODWORD(STACK[0x6198]) ^ LODWORD(STACK[0x61A0]);
  LODWORD(STACK[0x6730]) = v134;
  LODWORD(v353) = v332 ^ v134 ^ __ROR4__(v324, 8) ^ __ROR4__((_DWORD)v326, 24) ^ __ROR4__((_DWORD)v338, 16) ^ *(_DWORD *)(v352 + v353);
  LODWORD(v346) = v346 + LODWORD(STACK[0x61A8]);
  LODWORD(v324) = v351 ^ LODWORD(STACK[0x6358]);
  LODWORD(STACK[0x6750]) = v228;
  LODWORD(v346) = v324 ^ v228 ^ v346;
  LODWORD(v324) = v351 ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x6930]) ^ __ROR4__(v300, 24) ^ __ROR4__((_DWORD)v328, 8) ^ __ROR4__(v308, 16) ^ v344;
  v354 = 4 * v346;
  v355 = v352 + v354;
  v356 = 4 * v349;
  v357 = (_DWORD *)(v355 + v356 - v354);
  v358 = 4 * BYTE1(v349);
  v359 = &v357[v356 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v358 / 4];
  v360 = BYTE2(v349);
  v361 = (unint64_t)&v359[v360 + v358 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = v355;
  LODWORD(v355) = *(_DWORD *)v355;
  STACK[0xD9B8] = (unint64_t)v357;
  LODWORD(v357) = *v357;
  STACK[0xD9B8] = (unint64_t)v359;
  LODWORD(v359) = *v359;
  STACK[0xD9B8] = v361;
  v362 = v361 - v360 * 4;
  LODWORD(v361) = *(_DWORD *)v361;
  v363 = v362 + 4 * BYTE2(v324);
  STACK[0xD9B8] = v363;
  LODWORD(v332) = *(_DWORD *)v363;
  STACK[0xD9B8] = v362;
  LODWORD(v363) = *(_DWORD *)(v362 + 4 * BYTE1(v346));
  v364 = (_DWORD *)(v362 + 4 * BYTE3(v346));
  STACK[0xD9B8] = (unint64_t)v364;
  LODWORD(v336) = *v364;
  v365 = (_DWORD *)(v362 + 4 * BYTE3(v349));
  STACK[0xD9B8] = (unint64_t)v365;
  LODWORD(v349) = *v365;
  v366 = (_DWORD *)(v362 + 4 * v324);
  STACK[0xD9B8] = (unint64_t)v366;
  LODWORD(v365) = *v366;
  v367 = 4 * BYTE2(v353);
  v368 = v362 + v367;
  v369 = 4 * BYTE3(v324);
  v370 = (_DWORD *)(v368 + v369 - v367);
  STACK[0xD9B8] = v368;
  LODWORD(v368) = *(_DWORD *)v368;
  STACK[0xD9B8] = (unint64_t)v370;
  v371 = &v370[v369 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v370) = *v370;
  v372 = &v371[BYTE1(v353)];
  STACK[0xD9B8] = (unint64_t)v372;
  LODWORD(v341) = *v372;
  v373 = BYTE2(v346);
  v374 = (unint64_t)&v371[v373];
  v375 = 4 * BYTE1(v324);
  v376 = (_DWORD *)(v374 + v375 - v373 * 4);
  v377 = 4 * BYTE3(v353);
  v378 = &v376[(unint64_t)v377 / 4 + v375 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = v374;
  LODWORD(v374) = *(_DWORD *)v374;
  STACK[0xD9B8] = (unint64_t)v376;
  LODWORD(v376) = *v376;
  STACK[0xD9B8] = (unint64_t)v378;
  v379 = (unint64_t)&v378[v377 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v378) = *v378;
  v380 = 4 * v353;
  STACK[0xD9B8] = v379 + v380;
  v381 = STACK[0x63F8];
  v382 = LODWORD(STACK[0x66D0]) ^ LODWORD(STACK[0x63F8]);
  LODWORD(v357) = v382 ^ LODWORD(STACK[0x6190]) ^ LODWORD(STACK[0x6960]) ^ __ROR4__((_DWORD)v357, 16) ^ __ROR4__((_DWORD)v370, 24) ^ __ROR4__(v341, 8) ^ v374;
  LODWORD(v359) = v382 ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x6188]) ^ LODWORD(STACK[0x6970]) ^ __ROR4__((_DWORD)v359, 8) ^ __ROR4__(v336, 24) ^ __ROR4__((_DWORD)v365, 16) ^ v368;
  LODWORD(v355) = v382 ^ LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x6188]) ^ LODWORD(STACK[0x6940]) ^ __ROR4__(v355, 16) ^ v361 ^ __ROR4__((_DWORD)v376, 8) ^ __ROR4__((_DWORD)v378, 24);
  LODWORD(v380) = *(_DWORD *)(v379 + v380);
  v383 = 4 * BYTE1(v355);
  STACK[0xD9B8] = v379 + v383;
  LODWORD(v380) = v382 ^ LODWORD(STACK[0x6290]) ^ LODWORD(STACK[0x62F8]) ^ LODWORD(STACK[0x6950]) ^ v332 ^ __ROR4__(v363, 8) ^ __ROR4__(v349, 24) ^ __ROR4__(v380, 16);
  LODWORD(v349) = *(_DWORD *)(v379 + v383);
  v384 = (_DWORD *)(v379 + 4 * BYTE1(v359));
  STACK[0xD9B8] = (unint64_t)v384;
  LODWORD(v383) = *v384;
  v385 = (_DWORD *)(v379 + 4 * v355);
  v386 = (_DWORD *)(v379 + 4 * v380);
  v387 = v379 + 4 * BYTE2(v355);
  STACK[0xD9B8] = (unint64_t)v385;
  LODWORD(v385) = *v385;
  STACK[0xD9B8] = (unint64_t)v386;
  LODWORD(v386) = *v386;
  STACK[0xD9B8] = v387;
  LODWORD(v387) = *(_DWORD *)v387;
  STACK[0xD9B8] = v379;
  LODWORD(v363) = *(_DWORD *)(v379 + 4 * BYTE2(v357));
  v388 = v379 + 4 * BYTE2(v380);
  STACK[0xD9B8] = v388;
  LODWORD(v336) = *(_DWORD *)v388;
  STACK[0xD9B8] = v379;
  LODWORD(v388) = *(_DWORD *)(v379 + 4 * (v359 >> 24));
  v389 = (_DWORD *)(v379 + 4 * BYTE3(v355));
  STACK[0xD9B8] = (unint64_t)v389;
  LODWORD(v355) = *v389;
  v390 = (_DWORD *)(v379 + 4 * BYTE1(v380));
  v391 = (_DWORD *)(v379 + 4 * BYTE3(v380));
  STACK[0xD9B8] = (unint64_t)v390;
  LODWORD(v390) = *v390;
  STACK[0xD9B8] = (unint64_t)v391;
  v392 = v379;
  LODWORD(v374) = *v391;
  v393 = (_DWORD *)(v379 + 4 * v359);
  STACK[0xD9B8] = (unint64_t)v393;
  LODWORD(v393) = *v393;
  v394 = (_DWORD *)(v379 + 4 * (v357 >> 24));
  STACK[0xD9B8] = (unint64_t)v394;
  LODWORD(v394) = *v394;
  v395 = 4 * BYTE1(v357);
  v396 = (_DWORD *)(v392 + v395);
  v397 = 4 * BYTE2(v359);
  v398 = &v396[(unint64_t)v397 / 4 + v395 / 0xFFFFFFFFFFFFFFFCLL];
  v399 = 4 * v357;
  v400 = &v398[(unint64_t)v399 / 4 + v397 / 0xFFFFFFFFFFFFFFFCLL];
  v401 = LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6400]);
  LODWORD(v387) = v401 ^ LODWORD(STACK[0x6348]) ^ LODWORD(STACK[0x69B0]) ^ v387 ^ __ROR4__(v388, 24) ^ __ROR4__((_DWORD)v390, 8);
  STACK[0xD9B8] = (unint64_t)v396;
  LODWORD(v390) = *v396;
  STACK[0xD9B8] = (unint64_t)v398;
  LODWORD(v388) = *v398;
  STACK[0xD9B8] = (unint64_t)v400;
  v402 = (unint64_t)&v400[v399 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v398) = v387 ^ __ROR4__(*v400, 16);
  LODWORD(v383) = v401 ^ LODWORD(STACK[0x6340]) ^ LODWORD(STACK[0x6990]) ^ __ROR4__(v383, 8) ^ __ROR4__((_DWORD)v385, 16) ^ v363 ^ __ROR4__(v374, 24);
  LODWORD(v349) = LODWORD(STACK[0x6338]) ^ __ROR4__(v349, 8) ^ __ROR4__((_DWORD)v386, 16);
  LODWORD(v270) = __ROR4__((_DWORD)v394, 24);
  LODWORD(v349) = v401 ^ LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x69A0]) ^ ((v349 ^ v270 ^ v388) - 584297470 - ((2 * (v349 ^ v270 ^ v388)) & 0xBA58A804));
  LODWORD(v355) = v401 ^ LODWORD(STACK[0x6330]) ^ LODWORD(STACK[0x6980]) ^ v336 ^ __ROR4__(v355, 24) ^ __ROR4__((_DWORD)v393, 16);
  v403 = v402 + 4 * BYTE1(v398);
  STACK[0xD9B8] = v403;
  LODWORD(v386) = *(_DWORD *)v403;
  v404 = v402 + 4 * BYTE2(v398);
  STACK[0xD9B8] = v404;
  LODWORD(v403) = *(_DWORD *)v404;
  LODWORD(v355) = v355 ^ __ROR4__((_DWORD)v390, 8);
  STACK[0xD9B8] = v402;
  LODWORD(v404) = *(_DWORD *)(v402 + 4 * BYTE2(v383));
  v405 = (_DWORD *)(v402 + 4 * BYTE1(v349));
  STACK[0xD9B8] = (unint64_t)v405;
  LODWORD(v404) = v404 ^ __ROR4__(*v405, 8);
  v406 = (_DWORD *)(v402 + 4 * v398);
  STACK[0xD9B8] = (unint64_t)v406;
  LODWORD(v387) = *v406;
  v407 = (_DWORD *)(v402 + 4 * v349);
  STACK[0xD9B8] = (unint64_t)v407;
  LODWORD(v406) = *v407;
  LODWORD(v404) = v404 ^ __ROR4__(v387, 16);
  v408 = 4 * BYTE3(v349);
  v409 = (_DWORD *)(v402 + v408);
  STACK[0xD9B8] = (unint64_t)v409;
  LODWORD(v403) = v403 ^ __ROR4__(*v409, 24);
  v410 = 4 * BYTE3(v355);
  v411 = &v409[(unint64_t)v410 / 4 + v408 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = (unint64_t)v411;
  LODWORD(v404) = v404 ^ __ROR4__(*v411, 24);
  v412 = v383;
  v413 = (unint64_t)&v411[v410 / 0xFFFFFFFFFFFFFFFCLL + v412];
  v414 = 4 * BYTE1(v383);
  v415 = (_DWORD *)(v413 + v414 - v412 * 4);
  STACK[0xD9B8] = v413;
  LODWORD(v413) = v403 ^ __ROR4__(*(_DWORD *)v413, 16);
  STACK[0xD9B8] = (unint64_t)v415;
  LODWORD(v403) = STACK[0x6920] & 8;
  LODWORD(v403) = ((*v415 >> ((((2 * v403) ^ 0x10) + v403 + 56) & 0x10) >> ((v403 + 56) & 8) >> ((((2 * v403) ^ 0x10)
                                                                                                + v403
                                                                                                + 56) ^ 0x48))
                 + (*v415 << 24)) ^ __ROR4__((_DWORD)v406, 16);
  v416 = 4 * BYTE3(v383);
  v417 = &v415[v414 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v416 / 4];
  v418 = 4 * BYTE1(v355);
  v419 = &v417[(unint64_t)v418 / 4 + v416 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = (unint64_t)v417;
  HIDWORD(v270) = *v417;
  LODWORD(v270) = *v417;
  v420 = 4 * v355;
  v421 = &v419[(unint64_t)v420 / 4 + v418 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = (unint64_t)v419;
  v422 = v413 ^ __ROR4__(*v419, 8);
  STACK[0xD9B8] = (unint64_t)v421;
  v423 = &v421[v420 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v413) = *v421;
  v424 = &v421[v420 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v349)];
  STACK[0xD9B8] = (unint64_t)v424;
  v425 = (v270 >> 24) ^ __ROR4__((_DWORD)v386, 8) ^ __ROR4__(v413, 16) ^ *v424;
  v426 = BYTE2(v355);
  v427 = &v423[v426];
  STACK[0xD9B8] = (unint64_t)&v423[v426];
  LODWORD(v423) = v403 ^ v423[v426];
  v428 = 4 * (v398 >> 24);
  v429 = (_DWORD *)((char *)v427 + v428 - v426 * 4);
  STACK[0xD9B8] = (unint64_t)v429;
  v430 = (char *)v429 - v428;
  LODWORD(v428) = v423 ^ __ROR4__(*v429, 24);
  v63 = LODWORD(STACK[0x6910]) == 0;
  v431 = STACK[0x6220];
  LODWORD(v429) = v425 ^ v431 ^ LODWORD(STACK[0x69D0]) ^ -(v425 ^ v431 ^ LODWORD(STACK[0x69D0])) ^ (v381
                                                                                                  - (v425 ^ v431 ^ LODWORD(STACK[0x69D0]) ^ v381));
  v432 = v381 ^ LODWORD(STACK[0x6220]);
  v433 = v432 ^ LODWORD(STACK[0x6318]) ^ LODWORD(STACK[0x69E0]) ^ v422;
  v434 = 4 * HIBYTE(v433);
  STACK[0xD9B8] = (unint64_t)&v430[v434];
  LODWORD(STACK[0x66C0]) = v288;
  v435 = v428 - v246 + v288;
  v436 = v432 ^ LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x69F0]) ^ v435;
  v437 = *(_DWORD *)&v430[v434];
  v438 = &v430[4 * BYTE1(v436)];
  STACK[0xD9B8] = (unint64_t)v438;
  v439 = *(_DWORD *)v438;
  v440 = 4 * HIBYTE(v436);
  v441 = &v430[v440];
  v442 = 4 * BYTE2(v436);
  v443 = &v441[v442 - v440];
  v444 = ((_DWORD)v429 + v381) ^ LODWORD(STACK[0x62D0]);
  v445 = 4 * BYTE1(v444);
  v446 = (int *)&v443[v445 - v442];
  LODWORD(STACK[0x65A8]) = v246;
  v447 = v404 - v246 + LODWORD(STACK[0x6A90]);
  v448 = STACK[0x6328];
  if (!v63)
    v448 = STACK[0x62B8];
  v449 = v432 ^ (((v448 & STACK[0x6900]) >> LODWORD(STACK[0x6AA0])) | LODWORD(STACK[0x62F0])) ^ LODWORD(STACK[0x69C0]) ^ v447;
  v450 = 4 * HIBYTE(v449);
  v451 = &v446[v445 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v450 / 4];
  v452 = 4 * v449;
  v453 = &v451[(unint64_t)v452 / 4 + v450 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = (unint64_t)v441;
  v454 = *(_DWORD *)v441;
  STACK[0xD9B8] = (unint64_t)v443;
  v455 = *(_DWORD *)v443;
  STACK[0xD9B8] = (unint64_t)v446;
  v456 = *v446;
  STACK[0xD9B8] = (unint64_t)v451;
  LODWORD(v451) = *v451;
  STACK[0xD9B8] = (unint64_t)v453;
  v457 = &v453[v452 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v453) = *v453;
  v458 = &v457[BYTE2(v433)];
  STACK[0xD9B8] = (unint64_t)v458;
  v459 = *v458;
  v460 = BYTE2(v449);
  v461 = (unint64_t)&v457[v460];
  v462 = 4 * BYTE2(v444);
  v463 = v461 + v462 - v460 * 4;
  v464 = 4 * v436;
  v465 = (int *)(v463 + v464 - v462);
  v466 = 4 * v444;
  v467 = &v465[v464 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v466 / 4];
  v468 = 4 * BYTE1(v433);
  v469 = &v467[(unint64_t)v468 / 4 + v466 / 0xFFFFFFFFFFFFFFFCLL];
  v470 = 4 * HIBYTE(v444);
  v471 = &v469[v468 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v470 / 4];
  v472 = 4 * BYTE1(v449);
  v473 = &v471[(unint64_t)v472 / 4 + v470 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = v461;
  LODWORD(v461) = *(_DWORD *)v461;
  STACK[0xD9B8] = v463;
  LODWORD(v463) = *(_DWORD *)v463;
  STACK[0xD9B8] = (unint64_t)v465;
  v474 = *v465;
  STACK[0xD9B8] = (unint64_t)v467;
  LODWORD(v467) = *v467;
  STACK[0xD9B8] = (unint64_t)v469;
  LODWORD(v469) = *v469;
  STACK[0xD9B8] = (unint64_t)v471;
  LODWORD(v471) = *v471;
  STACK[0xD9B8] = (unint64_t)v473;
  v475 = &v473[v472 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v473) = *v473;
  v476 = 4 * v433;
  STACK[0xD9B8] = (unint64_t)v475 + v476;
  v477 = LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x63E8]);
  v478 = v477 ^ LODWORD(STACK[0x6178]) ^ LODWORD(STACK[0x6A10]) ^ __ROR4__(v439, 8) ^ __ROR4__((_DWORD)v453, 16) ^ v459 ^ __ROR4__((_DWORD)v471, 24);
  v479 = v477 ^ LODWORD(STACK[0x6170]) ^ LODWORD(STACK[0x6A30]) ^ __ROR4__(v454, 24) ^ __ROR4__(v456, 8) ^ v461 ^ __ROR4__(*(_DWORD *)((char *)v475 + v476), 16);
  LODWORD(v476) = v477 ^ LODWORD(STACK[0x6308]) ^ LODWORD(STACK[0x6A00]) ^ __ROR4__((_DWORD)v451, 24) ^ v463 ^ __ROR4__(v474, 16) ^ __ROR4__((_DWORD)v469, 8);
  v480 = v477 ^ LODWORD(STACK[0x6300]) ^ LODWORD(STACK[0x6A20]) ^ __ROR4__(v437, 24) ^ v455 ^ __ROR4__((_DWORD)v467, 16) ^ __ROR4__((_DWORD)v473, 8);
  v481 = BYTE3(v476);
  v482 = (unint64_t)&v475[v481];
  v483 = 4 * v480;
  v484 = v482 + v483 - v481 * 4;
  STACK[0xD9B8] = v482;
  LODWORD(v482) = *(_DWORD *)v482;
  STACK[0xD9B8] = v484;
  v485 = v484 - v483;
  LODWORD(v484) = *(_DWORD *)v484;
  v486 = (int *)(v485 + 4 * HIBYTE(v479));
  STACK[0xD9B8] = (unint64_t)v486;
  v487 = *v486;
  v488 = 4 * BYTE2(v476);
  v489 = v485 + v488;
  v490 = 4 * BYTE2(v479);
  v491 = (int *)(v489 + v490 - v488);
  STACK[0xD9B8] = v489;
  LODWORD(v489) = *(_DWORD *)v489;
  STACK[0xD9B8] = (unint64_t)v491;
  v492 = (unint64_t)&v491[v490 / 0xFFFFFFFFFFFFFFFCLL];
  v493 = *v491;
  STACK[0xD9B8] = v492;
  v494 = *(_DWORD *)(v492 + 4 * v478);
  v495 = (_DWORD *)(v492 + 4 * HIBYTE(v478));
  STACK[0xD9B8] = (unint64_t)v495;
  LODWORD(v461) = *v495;
  v496 = (_DWORD *)(v492 + 4 * BYTE1(v479));
  STACK[0xD9B8] = (unint64_t)v496;
  LODWORD(v495) = *v496;
  v497 = 4 * v476;
  v498 = v492 + v497;
  v499 = 4 * v479;
  v500 = (_DWORD *)(v498 + v499 - v497);
  v501 = 4 * HIBYTE(v480);
  v502 = &v500[v499 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v501 / 4];
  v503 = 4 * BYTE2(v480);
  v504 = &v502[(unint64_t)v503 / 4 + v501 / 0xFFFFFFFFFFFFFFFCLL];
  v505 = 4 * BYTE1(v480);
  v506 = &v504[(unint64_t)v505 / 4 + v503 / 0xFFFFFFFFFFFFFFFCLL];
  v507 = 4 * BYTE2(v478);
  v508 = &v506[(unint64_t)v507 / 4 + v505 / 0xFFFFFFFFFFFFFFFCLL];
  v509 = 4 * BYTE1(v478);
  v510 = &v508[v507 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v509 / 4];
  v511 = 4 * BYTE1(v476);
  v512 = &v510[(unint64_t)v511 / 4 + v509 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v461) = LODWORD(STACK[0x6A50]) ^ v319 ^ __ROR4__(v461, 24) ^ __ROR4__((_DWORD)v495, 8);
  STACK[0xD9B8] = v498;
  LODWORD(v498) = v461 ^ __ROR4__(*(_DWORD *)v498, 16);
  STACK[0xD9B8] = (unint64_t)v500;
  LODWORD(v461) = *v500;
  STACK[0xD9B8] = (unint64_t)v502;
  v513 = *v502;
  STACK[0xD9B8] = (unint64_t)v504;
  v514 = v498 ^ *v504;
  v515 = v319 ^ v431;
  LODWORD(v482) = v319 ^ v431 ^ LODWORD(STACK[0x6278]) ^ LODWORD(STACK[0x6A40]) ^ __ROR4__(v482, 24) ^ __ROR4__(v461, 16);
  STACK[0xD9B8] = (unint64_t)v506;
  v516 = __ROR4__(*v506, 8);
  STACK[0xD9B8] = (unint64_t)v508;
  v517 = v482 ^ v516 ^ *v508;
  LODWORD(v484) = v319 ^ v431 ^ LODWORD(STACK[0x68B0]) ^ __ROR4__(v484, 16) ^ __ROR4__(v487, 24) ^ v489;
  STACK[0xD9B8] = (unint64_t)v510;
  v518 = v484 ^ __ROR4__(*v510, 8);
  v519 = v518 & 0x40000;
  if ((v518 & 0x40000 & STACK[0x6270]) != 0)
    v519 = -v519;
  v520 = (v519 + LODWORD(STACK[0x6270])) ^ v518 & 0xFFFBFFFF;
  v521 = LODWORD(STACK[0x6688]) ^ v319;
  v522 = STACK[0x62B0];
  v523 = v521 ^ LODWORD(STACK[0x62B0]) ^ LODWORD(STACK[0x6158]) ^ LODWORD(STACK[0x6A60]) ^ v493 ^ __ROR4__(v494, 16) ^ __ROR4__(v513, 24);
  STACK[0xD9B8] = (unint64_t)v512;
  v524 = &v512[v511 / 0xFFFFFFFFFFFFFFFCLL];
  v525 = v523 ^ __ROR4__(*v512, 8);
  v526 = HIBYTE(v525);
  v527 = (unint64_t)&v524[v526];
  v528 = 4 * v517;
  v529 = v527 + v528 - v526 * 4;
  STACK[0xD9B8] = v527;
  LODWORD(v527) = *(_DWORD *)v527;
  STACK[0xD9B8] = v529;
  v530 = v529 - v528;
  LODWORD(v529) = *(_DWORD *)v529;
  v531 = 4 * HIBYTE(v517);
  STACK[0xD9B8] = v530 + v531;
  v532 = LODWORD(STACK[0x6160]) ^ __ROR4__(LODWORD(STACK[0x60E8]) ^ __ROR4__(v514, 15) ^ 0xBEFA649, 17) ^ 0xD32485F7;
  LODWORD(v531) = *(_DWORD *)(v530 + v531);
  v533 = v530 + 4 * HIBYTE(v532);
  STACK[0xD9B8] = v533;
  v534 = *(_DWORD *)v533;
  v535 = (_DWORD *)(v530 + 4 * BYTE2(v517));
  STACK[0xD9B8] = (unint64_t)v535;
  LODWORD(v533) = *v535;
  STACK[0xD9B8] = v530;
  LODWORD(v535) = *(_DWORD *)(v530 + 4 * BYTE1(v525));
  v536 = (int *)(v530 + 4 * BYTE1(v532));
  STACK[0xD9B8] = (unint64_t)v536;
  v537 = *v536;
  v538 = 4 * BYTE2(v525);
  v539 = v530 + v538;
  v540 = 4 * v525;
  v541 = (_DWORD *)(v539 + v540 - v538);
  STACK[0xD9B8] = v539;
  LODWORD(v539) = *(_DWORD *)v539;
  STACK[0xD9B8] = (unint64_t)v541;
  v542 = &v541[v540 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v541) = *v541;
  v543 = &v542[v532];
  STACK[0xD9B8] = (unint64_t)v543;
  v544 = *v543;
  v545 = &v542[BYTE1(v517)];
  STACK[0xD9B8] = (unint64_t)v545;
  v546 = *v545;
  v547 = &v542[BYTE1(v520)];
  STACK[0xD9B8] = (unint64_t)v547;
  LODWORD(v545) = *v547;
  v548 = v520;
  v549 = (unint64_t)&v542[v548];
  v550 = 4 * BYTE2(v520);
  v551 = v549 + v550 - v548 * 4;
  v552 = 4 * HIBYTE(v520);
  v553 = (_DWORD *)(v551 - v550 + v552);
  v554 = BYTE2(v532);
  v555 = (unint64_t)&v553[v554 + v552 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9B8] = v549;
  LODWORD(v549) = *(_DWORD *)v549;
  STACK[0xD9B8] = v551;
  LODWORD(v551) = *(_DWORD *)v551;
  STACK[0xD9B8] = (unint64_t)v553;
  LODWORD(v553) = *v553;
  STACK[0xD9B8] = v555;
  v556 = v555 - v554 * 4;
  LODWORD(v555) = *(_DWORD *)v555;
  STACK[0xD9B8] = v556;
  v557 = STACK[0x62E8];
  LODWORD(v556) = LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x6150]) ^ LODWORD(STACK[0x68F0]) ^ v533 ^ __ROR4__(v537, 8) ^ __ROR4__((_DWORD)v541, 16) ^ __ROR4__((_DWORD)v553, 24);
  v558 = LODWORD(STACK[0x6148]) ^ LODWORD(STACK[0x62A0]) ^ LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x6A80]) ^ __ROR4__(v527, 24) ^ __ROR4__(v544, 16) ^ __ROR4__(v546, 8) ^ v551;
  LODWORD(v527) = LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x6140]) ^ LODWORD(STACK[0x68E0]) ^ __ROR4__(v529, 16) ^ __ROR4__(v534, 24) ^ v539 ^ __ROR4__((_DWORD)v545, 8);
  LODWORD(v555) = LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x6428]) ^ LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x6A70]) ^ __ROR4__(v531, 24) ^ __ROR4__((_DWORD)v535, 8) ^ __ROR4__(v549, 16) ^ v555;
  HIDWORD(v559) = *(_DWORD *)(STACK[0xD9A8] + 4 * BYTE2(v556));
  LODWORD(v559) = HIDWORD(v559);
  LODWORD(v549) = *(_DWORD *)(STACK[0xD9A8] + 4 * BYTE1(v558)) ^ __ROR4__(*(_DWORD *)(STACK[0xD9A8] + 4 * BYTE2(v527)), 24);
  LODWORD(v531) = *(_DWORD *)(STACK[0xD9A8] + 4 * BYTE1(v556)) ^ __ROR4__(*(_DWORD *)(STACK[0xD9A8] + 4 * BYTE2(v558)), 24);
  LODWORD(v529) = (v559 >> 24) ^ __ROR4__(*(_DWORD *)(STACK[0xD9A8] + 4 * v527), 8) ^ *(_DWORD *)(STACK[0xD9A8] + 4 * BYTE1(v555));
  LODWORD(v539) = *(_DWORD *)(STACK[0xD9A8] + 4 * BYTE1(v527)) ^ __ROR4__(*(_DWORD *)(STACK[0xD9A8] + 4 * BYTE3(v556)), 16);
  v560 = STACK[0xD9A8];
  v561 = (_DWORD *)(STACK[0xD9A8] + 4 * v555);
  STACK[0xD9A8] = (unint64_t)v561;
  LODWORD(v533) = *v561;
  v562 = (_DWORD *)(v560 + 4 * BYTE3(v527));
  STACK[0xD9A8] = (unint64_t)v562;
  LODWORD(v527) = v531 ^ __ROR4__(v533, 8) ^ __ROR4__(*v562, 16);
  v563 = 4 * v558;
  v564 = (_DWORD *)(v560 + v563);
  v565 = 4 * BYTE2(v555);
  v566 = &v564[(unint64_t)v565 / 4 + v563 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9A8] = (unint64_t)v564;
  LODWORD(v539) = v539 ^ __ROR4__(*v564, 8);
  v567 = &v566[HIBYTE(v558) + v565 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD9A8] = (unint64_t)v566;
  LODWORD(v539) = v539 ^ __ROR4__(*v566, 24);
  v568 = BYTE3(v555);
  v569 = (unint64_t)&v566[v565 / 0xFFFFFFFFFFFFFFFCLL + v568];
  STACK[0xD9A8] = (unint64_t)v567;
  LODWORD(v529) = v529 ^ __ROR4__(*v567, 16);
  v570 = 4 * v556;
  v571 = v569 + v570 - v568 * 4;
  STACK[0xD9A8] = v569;
  LODWORD(v569) = v549 ^ __ROR4__(*(_DWORD *)v569, 16);
  LODWORD(v549) = v539 - 1825539852 - ((2 * v539) & 0x2660F1E8);
  STACK[0xD9A8] = v571;
  v572 = v571 - v570;
  LODWORD(v571) = *(_DWORD *)v571;
  STACK[0xD9A8] = v572;
  v573 = STACK[0x6490];
  LODWORD(v549) = (LODWORD(STACK[0x67C0]) ^ v573 ^ v549)
                + 452989448
                - ((2 * (LODWORD(STACK[0x67C0]) ^ v573 ^ v549)) & 0x36002410);
  LODWORD(v559) = __ROR4__(v571, 8);
  LODWORD(v527) = LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x6490]) ^ (v527 - 1825539852 - ((2 * v527) & 0x2660F1E8));
  LODWORD(v571) = ((v529 + 452989448 - ((2 * v529) & 0x36002410)) ^ LODWORD(STACK[0x6488]))
                - 1825539852
                - ((2 * ((v529 + 452989448 - ((2 * v529) & 0x36002410)) ^ LODWORD(STACK[0x6488]))) & 0x2660F1E8);
  LODWORD(v569) = ((v569 ^ v559) - 1825539852 - ((2 * (v569 ^ v559)) & 0x2660F1E8)) ^ LODWORD(STACK[0x6780]);
  LODWORD(v556) = STACK[0x6460];
  LODWORD(v529) = LODWORD(STACK[0x6488]) ^ LODWORD(STACK[0x6460]);
  LODWORD(STACK[0x65C0]) = v529;
  LODWORD(v529) = v529 ^ 0x19811DDA;
  LODWORD(STACK[0x65B8]) = v529 ^ v573 ^ (v569 + 452989448 - ((2 * v569) & 0x36002410));
  v574 = v556 ^ v573;
  LODWORD(STACK[0x6910]) = v556 ^ v573 ^ 0x19811DDA ^ LODWORD(STACK[0x67E0]) ^ v571;
  v575 = v529 ^ v549;
  v576 = v529 ^ (v527 + 452989448 - ((2 * v527) & 0x36002410));
  LODWORD(v571) = v447 - 745349084 + v422 - v425 + ((1063412487 - v435) ^ 0xDD1AE112) + 1230;
  LODWORD(v527) = v571 & 0x8FA7EACA ^ 0x1C04450D ^ (v571 ^ 0x8FA7EAC3) & (2 * (v571 & 0x8FA7EACA));
  LODWORD(v549) = (2 * (v571 ^ 0x93A3AFC7)) & 0x1C04450C ^ 0x4044505 ^ ((2 * (v571 ^ 0x93A3AFC7)) ^ 0x38088A1A) & (v571 ^ 0x93A3AFC7);
  LODWORD(v527) = (4 * v527) & 0x1C04450C ^ v527 ^ ((4 * v527) ^ 0x70111434) & v549;
  LODWORD(v549) = ((4 * v549) ^ 0x70111434) & v549 ^ (4 * v549) & 0x1C04450C;
  LODWORD(v527) = v549 & 0x33A11684 ^ v527 ^ ((16 * v527) ^ 0xF3E50614) & (v549 ^ 0x1000040D);
  LODWORD(v549) = ((16 * v549) ^ 0x33A156C4) & (v549 ^ 0x1000040D) ^ v549 & 0x33A11684;
  LODWORD(v527) = v527 ^ v549 & 0x33A11684 ^ (((_DWORD)v527 << 8) ^ 0x37E41B84) & (v549 ^ 0x1000040D);
  LODWORD(v549) = (((_DWORD)v549 << 8) ^ 0x33A51284) & (v549 ^ 0x1000040D) ^ v549 & 0x33A11684;
  LODWORD(STACK[0x65B0]) = v571 ^ (2
                                 * (v527 ^ v549 & 0x33A11684 ^ (((_DWORD)v527 << 16) ^ 0x72A81684) & (v549 ^ 0xC040000) ^ (((_DWORD)v527 << 16) ^ 0x72A81684) & 0x1C040404));
  LODWORD(v571) = v432 ^ LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x6800]) ^ v425;
  LODWORD(v527) = v432 ^ LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x6810]) ^ v422;
  LODWORD(v549) = v381 ^ v522 ^ LODWORD(STACK[0x6138]) ^ LODWORD(STACK[0x6130]) ^ LODWORD(STACK[0x67F0]) ^ v447;
  v577 = v432 ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x6298]) ^ LODWORD(STACK[0x6820]) ^ v435;
  v578 = STACK[0xD9B8];
  v579 = (int *)(STACK[0xD9B8] + 4 * v571);
  STACK[0xD9B8] = (unint64_t)v579;
  v580 = *v579;
  v581 = (_DWORD *)(v578 + 4 * BYTE1(v527));
  STACK[0xD9B8] = (unint64_t)v581;
  LODWORD(v579) = *v581;
  v582 = (_DWORD *)(v578 + 4 * v527);
  STACK[0xD9B8] = (unint64_t)v582;
  LODWORD(v581) = *v582;
  v583 = (int *)(v578 + 4 * BYTE2(v577));
  STACK[0xD9B8] = (unint64_t)v583;
  v584 = *v583;
  v585 = 4 * v549;
  v586 = (_DWORD *)(v578 + v585);
  v587 = BYTE2(v527);
  v588 = (unint64_t)&v586[v587 + v585 / 0xFFFFFFFFFFFFFFFCLL];
  v589 = 4 * BYTE3(v527);
  v590 = (int *)(v588 - v587 * 4 + v589);
  v591 = BYTE3(v549);
  v592 = (unint64_t)&v590[v591 + v589 / 0xFFFFFFFFFFFFFFFCLL];
  v593 = 4 * BYTE3(v571);
  v594 = (_DWORD *)(v592 + v593 - v591 * 4);
  STACK[0xD9B8] = (unint64_t)v586;
  LODWORD(v586) = *v586;
  STACK[0xD9B8] = v588;
  LODWORD(v588) = *(_DWORD *)v588;
  STACK[0xD9B8] = (unint64_t)v590;
  v595 = *v590;
  STACK[0xD9B8] = v592;
  LODWORD(v592) = *(_DWORD *)v592;
  STACK[0xD9B8] = (unint64_t)v594;
  v596 = &v594[v593 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v594) = *v594;
  v597 = &v596[BYTE1(v577)];
  STACK[0xD9B8] = (unint64_t)v597;
  LODWORD(v553) = *v597;
  v598 = BYTE2(v549);
  v599 = (unint64_t)&v596[v598];
  v600 = 4 * v577;
  v601 = (_DWORD *)(v599 + v600 - v598 * 4);
  STACK[0xD9B8] = v599;
  LODWORD(v599) = *(_DWORD *)v599;
  STACK[0xD9B8] = (unint64_t)v601;
  v602 = &v601[v600 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v601) = *v601;
  v603 = &v602[BYTE1(v571)];
  STACK[0xD9B8] = (unint64_t)v603;
  v604 = *v603;
  v605 = 4 * BYTE1(v549);
  v606 = &v602[(unint64_t)v605 / 4];
  v607 = BYTE2(v571);
  v608 = (unint64_t)&v606[v607 + v605 / 0xFFFFFFFFFFFFFFFCLL];
  v609 = 4 * HIBYTE(v577);
  v610 = (_DWORD *)(v608 + v609 - v607 * 4);
  v611 = v477 ^ LODWORD(STACK[0x6250]);
  v612 = STACK[0x65C8];
  LODWORD(v592) = v611 ^ LODWORD(STACK[0x6180]) ^ LODWORD(STACK[0x6830]) ^ __ROR4__((_DWORD)v579, 8) ^ __ROR4__(v592, 24);
  STACK[0xD9B8] = (unint64_t)v606;
  v613 = *v606;
  STACK[0xD9B8] = v608;
  v614 = v592 ^ __ROR4__((_DWORD)v601, 16) ^ *(_DWORD *)v608;
  LODWORD(v608) = v477 ^ LODWORD(STACK[0x6430]) ^ LODWORD(STACK[0x6128]) ^ LODWORD(STACK[0x6860]) ^ __ROR4__((_DWORD)v581, 16) ^ v599 ^ __ROR4__(v604, 8);
  STACK[0xD9B8] = (unint64_t)v610;
  v615 = (unint64_t)&v610[v609 / 0xFFFFFFFFFFFFFFFCLL];
  v616 = v608 ^ __ROR4__(*v610, 24);
  v617 = v477 ^ LODWORD(STACK[0x6120]) ^ LODWORD(STACK[0x6840]) ^ __ROR4__((_DWORD)v586, 16) ^ v588 ^ __ROR4__((_DWORD)v594, 24) ^ __ROR4__((_DWORD)v553, 8);
  v618 = STACK[0x6420];
  if (v617)
    v618 = STACK[0x6280];
  v619 = LODWORD(STACK[0x6118]) ^ 0x24842239 ^ (v618 ^ 0x5CB59D64) & STACK[0x6310];
  v620 = v611 ^ LODWORD(STACK[0x6850]) ^ __ROR4__(v580, 16) ^ v584 ^ __ROR4__(v595, 24);
  v621 = __ROR4__(v613, 8);
  v622 = 4 * BYTE2(v616);
  STACK[0xD9B8] = v615 + v622;
  LODWORD(v622) = *(_DWORD *)(v615 + v622);
  v623 = v620 ^ v621 ^ (v619 << LODWORD(STACK[0x6468]));
  STACK[0xD9B8] = v615;
  v624 = *(_DWORD *)(v615 + 4 * BYTE2(v617));
  v625 = 4 * BYTE1(v614);
  v626 = v615 + v625;
  v627 = 4 * v623;
  v628 = v626 + v627 - v625;
  STACK[0xD9B8] = v626;
  LODWORD(v626) = *(_DWORD *)v626;
  STACK[0xD9B8] = v628;
  v629 = v628 - v627;
  LODWORD(v628) = *(_DWORD *)v628;
  v630 = (int *)(v629 + 4 * BYTE2(v623));
  STACK[0xD9B8] = (unint64_t)v630;
  v631 = *v630;
  STACK[0xD9B8] = v629;
  LODWORD(v630) = *(_DWORD *)(v629 + 4 * BYTE1(v616));
  v632 = (int *)(v629 + 4 * BYTE1(v623));
  STACK[0xD9B8] = (unint64_t)v632;
  v633 = *v632;
  v634 = 4 * v617;
  v635 = (_DWORD *)(v629 + v634);
  v636 = 4 * BYTE2(v614);
  v637 = &v635[(unint64_t)v636 / 4 + v634 / 0xFFFFFFFFFFFFFFFCLL];
  v638 = 4 * HIBYTE(v614);
  v639 = &v637[(unint64_t)v638 / 4 + v636 / 0xFFFFFFFFFFFFFFFCLL];
  v640 = 4 * HIBYTE(v623);
  v641 = &v639[(unint64_t)v640 / 4 + v638 / 0xFFFFFFFFFFFFFFFCLL];
  v642 = 4 * v614;
  v643 = &v641[(unint64_t)v642 / 4 + v640 / 0xFFFFFFFFFFFFFFFCLL];
  v644 = BYTE1(v617);
  v645 = (unint64_t)&v643[v642 / 0xFFFFFFFFFFFFFFFCLL + v644];
  v646 = 4 * v616;
  v647 = (_DWORD *)(v645 + v646 - v644 * 4);
  v648 = 4 * HIBYTE(v617);
  v649 = &v647[v646 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v648 / 4];
  v650 = HIBYTE(v616);
  v651 = (unint64_t)&v649[v650 + v648 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v628) = v515 ^ LODWORD(STACK[0x6110]) ^ LODWORD(STACK[0x68A0]) ^ __ROR4__(v628, 16);
  v652 = STACK[0x66C8];
  STACK[0xD9B8] = (unint64_t)v635;
  LODWORD(v635) = *v635;
  STACK[0xD9B8] = (unint64_t)v637;
  LODWORD(v628) = v628 ^ *v637;
  STACK[0xD9B8] = (unint64_t)v639;
  LODWORD(v637) = *v639;
  STACK[0xD9B8] = (unint64_t)v641;
  LODWORD(v639) = *v641;
  STACK[0xD9B8] = (unint64_t)v643;
  LODWORD(v643) = *v643;
  STACK[0xD9B8] = v645;
  LODWORD(v645) = v628 ^ __ROR4__(*(_DWORD *)v645, 8);
  STACK[0xD9B8] = (unint64_t)v647;
  LODWORD(v628) = *v647;
  STACK[0xD9B8] = (unint64_t)v649;
  LODWORD(v641) = *v649;
  STACK[0xD9B8] = v651;
  v653 = v651 - v650 * 4;
  LODWORD(v645) = v645 ^ __ROR4__(*(_DWORD *)v651, 24);
  LODWORD(v651) = v515 ^ LODWORD(STACK[0x6268]) ^ LODWORD(STACK[0x6880]) ^ v631 ^ __ROR4__((_DWORD)v630, 8) ^ __ROR4__((_DWORD)v643, 16) ^ __ROR4__((_DWORD)v641, 24);
  LODWORD(v643) = v515 ^ LODWORD(STACK[0x6260]) ^ LODWORD(STACK[0x6870]) ^ v624 ^ __ROR4__(v633, 8) ^ __ROR4__((_DWORD)v637, 24) ^ __ROR4__(v628, 16);
  v654 = v515 ^ LODWORD(STACK[0x616C]) ^ LODWORD(STACK[0x6688]) ^ LODWORD(STACK[0x6890]) ^ v622 ^ __ROR4__(v626, 8) ^ __ROR4__((_DWORD)v635, 16) ^ __ROR4__((_DWORD)v639, 24);
  v655 = v653 + 4 * BYTE2(v643);
  STACK[0xD9B8] = v655;
  LODWORD(v626) = *(_DWORD *)v655;
  STACK[0xD9B8] = v653;
  LODWORD(v655) = *(_DWORD *)(v653 + 4 * BYTE1(v654));
  v656 = (_DWORD *)(v653 + 4 * BYTE3(v645));
  STACK[0xD9B8] = (unint64_t)v656;
  LODWORD(v622) = *v656;
  v657 = (_DWORD *)(v653 + 4 * HIBYTE(v654));
  STACK[0xD9B8] = (unint64_t)v657;
  LODWORD(v656) = *v657;
  v658 = (_DWORD *)(v653 + 4 * BYTE1(v643));
  STACK[0xD9B8] = (unint64_t)v658;
  LODWORD(v657) = *v658;
  v659 = v653 + 4 * v643;
  STACK[0xD9B8] = v659;
  LODWORD(v658) = *(_DWORD *)v659;
  v660 = (_DWORD *)(v653 + 4 * BYTE2(v651));
  STACK[0xD9B8] = (unint64_t)v660;
  LODWORD(v659) = *v660;
  v661 = 4 * v651;
  v662 = (_DWORD *)(v653 + v661);
  v663 = 4 * BYTE1(v651);
  v664 = &v662[(unint64_t)v663 / 4 + v661 / 0xFFFFFFFFFFFFFFFCLL];
  v665 = 4 * BYTE1(v645);
  v666 = &v664[(unint64_t)v665 / 4 + v663 / 0xFFFFFFFFFFFFFFFCLL];
  v667 = 4 * (v643 >> 24);
  v668 = &v666[v665 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v667 / 4];
  v669 = BYTE2(v654);
  v670 = (unint64_t)&v668[v669 + v667 / 0xFFFFFFFFFFFFFFFCLL];
  v671 = 4 * BYTE2(v645);
  v672 = v670 + v671 - v669 * 4;
  v673 = 4 * v645;
  v674 = (_DWORD *)(v672 + v673 - v671);
  STACK[0xD9B8] = (unint64_t)v662;
  LODWORD(v662) = *v662;
  STACK[0xD9B8] = (unint64_t)v664;
  LODWORD(v664) = *v664;
  STACK[0xD9B8] = (unint64_t)v666;
  LODWORD(v666) = *v666;
  STACK[0xD9B8] = (unint64_t)v668;
  LODWORD(v668) = *v668;
  STACK[0xD9B8] = v670;
  LODWORD(v670) = *(_DWORD *)v670;
  STACK[0xD9B8] = v672;
  LODWORD(v672) = *(_DWORD *)v672;
  STACK[0xD9B8] = (unint64_t)v674;
  v675 = (unint64_t)&v674[v673 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v674) = *v674;
  v676 = (_DWORD *)(v675 + 4 * BYTE3(v651));
  STACK[0xD9B8] = (unint64_t)v676;
  LODWORD(v651) = *v676;
  v677 = (int *)(v675 + 4 * v654);
  STACK[0xD9B8] = (unint64_t)v677;
  v678 = *v677;
  STACK[0xD9B8] = v675;
  LODWORD(v675) = v557 ^ LODWORD(STACK[0x60F0]) ^ LODWORD(STACK[0x68D0]) ^ __ROR4__((_DWORD)v658, 16) ^ __ROR4__((_DWORD)v666, 8) ^ v670 ^ __ROR4__(v651, 24);
  LODWORD(v651) = v557 ^ LODWORD(STACK[0x6108]) ^ LODWORD(STACK[0x6230]);
  LODWORD(v670) = v651 ^ LODWORD(STACK[0x68C0]) ^ __ROR4__(v655, 8) ^ v659 ^ __ROR4__((_DWORD)v668, 24) ^ __ROR4__((_DWORD)v674, 16);
  LODWORD(v662) = v651 ^ LODWORD(STACK[0x6770]) ^ __ROR4__((_DWORD)v656, 24) ^ __ROR4__((_DWORD)v657, 8) ^ __ROR4__((_DWORD)v662, 16) ^ v672;
  v679 = v557 ^ LODWORD(STACK[0x6258]) ^ LODWORD(STACK[0x6248]) ^ v652 ^ v626 ^ __ROR4__(v622, 24) ^ __ROR4__((_DWORD)v664, 8) ^ __ROR4__(v678, 16);
  LODWORD(v651) = *(_DWORD *)(STACK[0xD9A8] + 4 * v670);
  LODWORD(v655) = *(_DWORD *)(STACK[0xD9A8] + 4 * BYTE2(v662));
  v680 = (_DWORD *)(STACK[0xD9A8] + 4 * BYTE2(v670));
  v681 = (_DWORD *)(STACK[0xD9A8] + 4 * v662);
  v682 = (_DWORD *)(STACK[0xD9A8] + 4 * BYTE2(v679));
  v683 = (_DWORD *)(STACK[0xD9A8] + 4 * v675);
  LODWORD(v659) = *(_DWORD *)(STACK[0xD9A8] + 4 * BYTE1(v662));
  LODWORD(v662) = *(_DWORD *)(STACK[0xD9A8] + 4 * (v662 >> 24));
  LODWORD(v659) = v659 ^ __ROR4__(*(_DWORD *)(STACK[0xD9A8] + 4 * BYTE2(v675)), 24);
  v684 = (_DWORD *)(STACK[0xD9A8] + 4 * v679);
  v685 = (_DWORD *)(STACK[0xD9A8] + 4 * BYTE1(v675));
  v686 = 4 * BYTE1(v670);
  v687 = STACK[0xD9A8] + v686;
  STACK[0xD9A8] = v687;
  v688 = v687 - v686;
  LODWORD(v687) = *(_DWORD *)v687;
  v689 = (_DWORD *)(v688 + 4 * HIBYTE(v679));
  STACK[0xD9A8] = (unint64_t)v689;
  LODWORD(v672) = *v689;
  v690 = v688 + 4 * BYTE3(v670);
  STACK[0xD9A8] = v690;
  HIDWORD(v691) = *(_DWORD *)v690;
  LODWORD(v691) = *(_DWORD *)v690;
  LODWORD(v670) = v691 >> 16;
  LODWORD(v690) = v659 ^ __ROR4__(*v684, 8) ^ v670 & 0xC393FBF1;
  v692 = 4 * BYTE3(v675);
  v693 = (_DWORD *)(v688 + v692);
  v694 = 4 * BYTE1(v679);
  v695 = (_DWORD *)((char *)&v693[(unint64_t)v694 / 4] - v692);
  v696 = STACK[0x65B0];
  v697 = LODWORD(STACK[0x65B0]) ^ 0xF1ACC7BA;
  v698 = __PAIR64__(v655, __ROR4__(v672, 16));
  LODWORD(v692) = v574 ^ 0x69A3ED7E ^ LODWORD(STACK[0x67B0]) ^ v697 ^ __ROR4__(*v680, 24) ^ __ROR4__(*v681, 8) ^ *v685 ^ v698;
  LODWORD(v698) = v655;
  LODWORD(v651) = (v698 >> 24) ^ __ROR4__(v651, 8);
  STACK[0xD9A8] = (unint64_t)v693;
  LODWORD(v698) = __ROR4__(*v693, 16);
  STACK[0xD9A8] = (unint64_t)v695;
  LODWORD(v651) = v651 ^ v698 ^ *v695;
  v699 = v692 + 452989448 - ((2 * v692) & 0x36002410);
  LODWORD(v655) = LODWORD(STACK[0x60F8]) ^ LODWORD(STACK[0x67A0]) ^ v696 ^ __ROR4__(*v682, 24) ^ __ROR4__(*v683, 8);
  LODWORD(v698) = __ROR4__((_DWORD)v662, 16);
  v700 = (v655 ^ v698 ^ 0x9774729F ^ v687) + 452989448 - ((2 * (v655 ^ v698 ^ 0x9774729F ^ v687)) & 0x36002410);
  LODWORD(v651) = v696 ^ 0xF1ACC7BA ^ v573 ^ v612 ^ (v651 + 1772350846 - ((2 * v651) & 0xD347DAFC));
  LODWORD(v670) = v696 ^ 0xF1ACC7BA ^ LODWORD(STACK[0x67D0]) ^ ((v690 ^ v670 & 0x3C6C040E)
                                                              + 1772350846
                                                              - 2 * ((v690 ^ v670 & 0x3C6C040E) & 0x69A3ED7F ^ v690 & 1));
  v701 = v651 + 452989448 - ((2 * v651) & 0x36002410);
  v702 = v670 + 452989448 - ((2 * v670) & 0x36002410);
  v703 = STACK[0x6A90];
  v704 = STACK[0x65B8];
  if ((STACK[0x6A90] & 1) != 0)
    v705 = STACK[0x65B8];
  else
    v705 = v575;
  v706 = STACK[0x6910];
  if ((v703 & 1) != 0)
    v707 = v575;
  else
    v707 = STACK[0x6910];
  if ((v703 & 1) != 0)
    v704 = v576;
  else
    v706 = v576;
  v708 = LODWORD(STACK[0x64B0]) ^ 0x66F1E028 ^ v699;
  v709 = LODWORD(STACK[0x65C0]) ^ 0x69E8BFFD ^ v701;
  v710 = LODWORD(STACK[0x65C0]) ^ 0x69E8BFFD ^ v700;
  v711 = LODWORD(STACK[0x65C0]) ^ 0x69E8BFFD ^ v573 ^ v702;
  if ((v703 & 1) != 0)
    v712 = v710;
  else
    v712 = v709;
  if ((v703 & 1) != 0)
  {
    v710 = v708;
    v708 = v711;
  }
  else
  {
    v709 = v711;
  }
  if ((v703 & 2) != 0)
    v713 = v705;
  else
    v713 = v706;
  if ((v703 & 2) != 0)
  {
    v714 = v710;
  }
  else
  {
    v706 = v705;
    v714 = v709;
  }
  if ((v703 & 2) != 0)
    v715 = v707;
  else
    v715 = v704;
  v716 = v713
       + 1070674903 * ((v715 ^ 0x8F965DD8) + ((v714 + 1174644586 - ((2 * v714) & 0x8C074ED4)) ^ v697))
       + 1070674903;
  if ((v703 & 2) != 0)
    v717 = v708;
  else
    v717 = v712;
  v718 = (1381510879 * (v717 ^ 0x7069A227)) ^ v706 ^ (1381510879
                                                    * ((v716 + 1174644586 - ((2 * v716) & 0x8C074ED4)) ^ v697));
  v719 = v718 ^ LODWORD(STACK[0x6668]);
  v720 = LODWORD(STACK[0x6AC0]);
  v721 = (char *)*(&off_1015B46D0 + (int)v720 - 6863) - 8;
  v722 = v721[(v718 ^ LOBYTE(STACK[0x6668])) ^ 0x71];
  v723 = STACK[0x65F0];
  *(_BYTE *)(STACK[0x65F0] + STACK[0x65D8]) = ((v722 >> 3) | (32 * v722)) ^ (4
                                                                           * ((v722 >> 3) | (32 * v722))
                                                                           * ((v722 >> 3) | (32 * v722))) ^ 0xF0;
  if ((v703 & 2) != 0)
  {
    v707 = v704;
    v708 = v712;
    v710 = v709;
  }
  v724 = v707 + 1174644586 - ((2 * v707) & 0x8C074ED4);
  v725 = v715 ^ (-1809076513 * (v696 ^ 0xC7C6C2F7));
  v726 = v708 ^ v697;
  v727 = v726 ^ v718 ^ v724;
  v728 = v727 ^ 0x7069A227;
  v729 = (v725 ^ (-1809076513 * (v727 ^ 0x7069A227 ^ v710)))
       + 1174644586
       - ((2 * (v725 ^ (-1809076513 * (v727 ^ 0x7069A227 ^ v710)))) & 0x8C074ED4);
  v730 = v716 ^ (-2994599 * ((v710 + 1174644586 - ((2 * v710) & 0x8C074ED4)) ^ v697)) ^ (-2994599 * v727);
  v731 = v726 ^ v718 ^ v730 ^ v729;
  v732 = v730 ^ v710;
  v733 = v714 ^ 0x7069A227;
  v734 = v728 + 226597455 * (v733 - (v731 ^ v717));
  v735 = v718 ^ v697 ^ (v732 + 1174644586 - ((2 * v732) & 0x8C074ED4)) ^ v734;
  v736 = v726 ^ (v735 + 1174644586 - ((2 * v735) & 0x8C074ED4));
  v737 = v736 ^ v731;
  v738 = (-2083826641 * (v696 ^ 0xC7C6C2F7)) ^ LODWORD(STACK[0x6660]) ^ v736 ^ (-2083826641 * (v733 ^ v737));
  v739 = (char *)*(&off_1015B46D0 + (int)(v720 ^ 0x1C3F)) - 8;
  *(_BYTE *)(v723 + STACK[0x6650]) = v739[BYTE2(v738) ^ 0xBLL] ^ ((BYTE2(v738) ^ 0xD2) + (BYTE2(v738) ^ 0xBD) + 1) ^ 0x5A;
  v740 = v737 ^ LODWORD(STACK[0x6670]);
  v741 = (uint64_t)*(&off_1015B46D0 + (int)(v720 ^ 0x1D2E));
  *(_BYTE *)(v723
           + ((1685813464
             - (((LODWORD(STACK[0x65E8]) ^ 0x364F66A7) - 1) ^ 0x5BA60C97 | 0x647B78D8)
             + (((LODWORD(STACK[0x65E8]) ^ 0x364F66A7) - 1) ^ 0x5BA60C97 | 0x9B848727)) ^ 0x647A2879)) = *(_BYTE *)(v741 + (BYTE2(v740) ^ 0x2DLL)) ^ 0x6D ^ (*(_BYTE *)(v741 + (BYTE2(v740) ^ 0x2DLL)) >> 1) & 0x43;
  v742 = (-755516034
        - (LODWORD(STACK[0x65E0]) ^ 0x3E1DE6B1 | 0xD2F7BD7E)
        + (LODWORD(STACK[0x65E0]) ^ 0x3E1DE6B1 | 0x2D084281)) ^ 0x2CFCD2A1;
  v743 = v721[BYTE1(v740) ^ 0x22];
  *(_BYTE *)(v723 + ((v742 + 615862072 - ((2 * v742) & 0x496A9E70)) ^ 0x894BFCC7)) = ((v743 >> 3) | (32 * v743)) ^ (4 * ((v743 >> 3) | (32 * v743)) * ((v743 >> 3) | (32 * v743))) ^ 0x65;
  v744 = v734 ^ LODWORD(STACK[0x6678]);
  v745 = STACK[0x65D0];
  v746 = ((v745 & 0x745BEA32 ^ 0x24194005) + (v745 & 0x8BA415C8 ^ 0x892015C1) - 2) ^ 0xF0DBEA14;
  *(_BYTE *)(v723 + ((((2 * v746) & 0x7780DF8) - v746 + 2084829442) ^ 0xB3B683BDLL)) = v739[((v744 ^ 0xB90B4C77) >> 16) ^ 0x38] ^ ((((v744 ^ 0xB90B4C77) >> 16) ^ 0xE1) + (((v744 ^ 0xB90B4C77) >> 16) ^ 0x8E) + 1) ^ 0xFE;
  v747 = (uint64_t)*(&off_1015B46D0 + (int)(v720 ^ 0x16F9));
  v748 = *(unsigned __int8 *)(v747 + (HIBYTE(v719) ^ 0xC7));
  v749 = STACK[0xD9A0];
  v750 = STACK[0xD9A0];
  *(_BYTE *)(v749 + STACK[0x6658]) = ((v748 >> 3) | (32 * v748)) ^ 0x37 ^ (((v748 >> 3) | (32 * v748)) >> 2) & 0x3D;
  v751 = (-621725466
        - (LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x30D8]) | 0xDAF138E6)
        + (LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x30D8]) | 0x250EC719)) ^ 0x26030F1D;
  v752 = v721[v744 ^ 0xEALL];
  *(_BYTE *)(v749 + ((1984202104 - (v751 | 0x76448578) + (v751 | 0x89BB7A87)) ^ 0xBE64843C)) = ((v752 >> 3) | (32 * v752)) ^ (4 * ((v752 >> 3) | (32 * v752)) * ((v752 >> 3) | (32 * v752))) ^ 0x4E;
  v753 = *(unsigned __int8 *)(v747 + (BYTE1(v744) ^ 0x33));
  *(_BYTE *)(v749 + STACK[0x65F8]) = ((v753 >> 3) | (32 * v753)) ^ 0x8B ^ (((v753 >> 3) | (32 * v753)) >> 2) & 0x3D;
  v754 = *(unsigned __int8 *)(v747 + (v740 ^ 2));
  *(_BYTE *)(v749 + STACK[0x6608]) = ((v754 >> 3) | (32 * v754)) ^ 0x94 ^ (((v754 >> 3) | (32 * v754)) >> 2) & 0x3D;
  v755 = *(unsigned __int8 *)(v747 + (BYTE2(v719) ^ 0xBBLL));
  *(_BYTE *)(v749 + STACK[0x6618]) = ((v755 >> 3) | (32 * v755)) ^ 0x4D ^ (((v755 >> 3) | (32 * v755)) >> 2) & 0x3D;
  v756 = *(unsigned __int8 *)(v741 + (BYTE1(v719) ^ 0xCBLL));
  *(_BYTE *)(v749 + STACK[0x6640]) = v756 ^ (v756 >> 1) & 0x43 ^ 0xC;
  *(_BYTE *)(v749 + STACK[0x6628]) = *(_BYTE *)(v741 + (v738 ^ 0x2FLL)) ^ 0x29 ^ (*(_BYTE *)(v741 + (v738 ^ 0x2FLL)) >> 1) & 0x43;
  v757 = *(unsigned __int8 *)(v747 + (HIBYTE(v738) ^ 0xEELL));
  *(_BYTE *)(v749 + STACK[0x6638]) = ((v757 >> 3) | (32 * v757)) ^ 0xCE ^ (((v757 >> 3) | (32 * v757)) >> 2) & 0x3D;
  v758 = (LODWORD(STACK[0x6610]) ^ 0xEDAA1B0B)
       + (v745 & 0x7178494A ^ 0x10504044)
       - ((LODWORD(STACK[0x6610]) ^ 0xEDAA1B0B) & 0x7178494A);
  *(_BYTE *)(v750
           + (((v758 & 0x6E5D8DA6 ^ 0xE4585A6) + (v758 ^ 0x71384850) - ((v758 ^ 0x71384850) & 0x6E5D8DA6)) ^ 0x11A052DDLL)) = v739[((v744 ^ 0xB90B4C77) >> 24) ^ 0xB6] ^ (((v744 ^ 0xB90B4C77) >> 24) + (((v744 ^ 0xB90B4C77) >> 24) ^ 0x6F) + 1) ^ 0x58;
  *(_BYTE *)(v750 + STACK[0x6630]) = *(_BYTE *)(v741 + (BYTE1(v738) ^ 0x98)) ^ (*(_BYTE *)(v741
                                                                                           + (BYTE1(v738) ^ 0x98)) >> 1) & 0x43 ^ 0x88;
  v759 = (((2 * (LODWORD(STACK[0x6648]) ^ 0xAAF0F5B3)) & 0xD9E36E84) - (LODWORD(STACK[0x6648]) ^ 0xAAF0F5B3) - 1827780423) ^ 0x160EC495;
  *(_BYTE *)(v750 + ((((2 * v759) & 0x6AF6922A) - v759 - 897272086) ^ 0x77630A1BLL)) = *(_BYTE *)(v741
                                                                                                + (HIBYTE(v740) ^ 0x8ALL)) ^ (*(_BYTE *)(v741 + (HIBYTE(v740) ^ 0x8ALL)) >> 1) & 0x43 ^ 0x83;
  STACK[0xD9A8] = (unint64_t)&v695[v694 / 0xFFFFFFFFFFFFFFFCLL];
  v760 = (((v745 ^ 0xF8B9A25A) + 122052006) ^ ((v745 ^ 0x5775D97D) - 1467341181) ^ ((v745 ^ 0x3DDBBE4D) - 1037811277))
       - 706985980;
  v761 = (v760 ^ 0x3F3BE566) & (2 * (v760 & 0xBC3B8576)) ^ v760 & 0xBC3B8576;
  v762 = ((2 * (v760 ^ 0x2F7BE706)) ^ 0x2680C4E0) & (v760 ^ 0x2F7BE706) ^ (2 * (v760 ^ 0x2F7BE706)) & 0x93406270;
  v763 = (v762 ^ 0x60) & (4 * v761) ^ v761;
  v764 = ((4 * (v762 ^ 0x91402210)) ^ 0x4D0189C0) & (v762 ^ 0x91402210) ^ (4 * (v762 ^ 0x91402210)) & 0x93406270;
  v765 = (v764 ^ 0x1000050) & (16 * v763) ^ v763;
  v766 = ((16 * (v764 ^ 0x92406230)) ^ 0x34062700) & (v764 ^ 0x92406230) ^ (16 * (v764 ^ 0x92406230)) & 0x93406270;
  v767 = v765 ^ 0x93406270 ^ (v766 ^ 0x10002270) & (v765 << 8);
  v768 = v760 ^ (2
               * (((v767 << 16) ^ 0x62700000) & (((v766 ^ 0x83404070) << 8) & 0x93400000 ^ 0x13000000 ^ (((v766 ^ 0x83404070) << 8) ^ 0x40620000) & (v766 ^ 0x83404070)) ^ v767 ^ ((v767 << 16) & 0x13400000 | 0x6000)));
  v769 = (((v768 ^ 0x71FF9842) - 2111036606) ^ ((v768 ^ 0x55FC27B3) - 1506829135) ^ ((v768 ^ LODWORD(STACK[0x30DC]))
                                                                                   + 1240171877))
       + 1538971726;
  v57 = v769 >= LODWORD(STACK[0x6680]);
  v770 = LODWORD(STACK[0x6600]) ^ (v769 < 0xC9A312E4);
  v771 = !v57;
  if (v770)
    v772 = STACK[0x6600];
  else
    v772 = v771;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((209 * v772) ^ v720)) - 4))(v720);
}

uint64_t sub_100BAA974()
{
  unsigned int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t (*v15)(void);

  v0 = STACK[0x6510];
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x6510]) - 7156;
  LODWORD(STACK[0x6668]) = LODWORD(STACK[0x64F8]) ^ 0x6BF3040B;
  LODWORD(STACK[0x6670]) = LODWORD(STACK[0x64F0]) ^ 0xD3A238D2;
  LODWORD(STACK[0x6678]) = LODWORD(STACK[0x64E8]) ^ 0x70D569E9;
  LODWORD(STACK[0x6660]) = LODWORD(STACK[0x6500]) ^ 0xC1C0ABFC;
  v1 = STACK[0x6AB0];
  v2 = STACK[0x64C8];
  v3 = STACK[0x64C0];
  if ((STACK[0x6AB0] & 1) != 0)
    v4 = STACK[0x64C0];
  else
    v4 = STACK[0x64C8];
  if ((v1 & 1) != 0)
    v5 = STACK[0x66A0];
  else
    v5 = STACK[0x64B8];
  if ((v1 & 1) != 0)
    v3 = STACK[0x64B8];
  else
    v2 = STACK[0x66A0];
  v6 = STACK[0x64E0];
  if ((v1 & 1) != 0)
    v7 = STACK[0x64E0];
  else
    v7 = STACK[0x64D0];
  if ((v1 & 1) != 0)
    v8 = STACK[0x66B8];
  else
    v8 = STACK[0x64D8];
  if ((v1 & 1) != 0)
  {
    v6 = STACK[0x64D8];
    v9 = STACK[0x64D0];
  }
  else
  {
    v9 = STACK[0x66B8];
  }
  if ((v1 & 2) != 0)
    v10 = v5;
  else
    v10 = v4;
  LODWORD(STACK[0x64C8]) = v10;
  if ((v1 & 2) == 0)
    v4 = v5;
  LODWORD(STACK[0x64B8]) = v4;
  if ((v1 & 2) != 0)
    v11 = v2;
  else
    v11 = v3;
  LODWORD(STACK[0x64C0]) = v11;
  if ((v1 & 2) != 0)
    v12 = v8;
  else
    v12 = v7;
  LODWORD(STACK[0x64D0]) = v12;
  if ((v1 & 2) != 0)
    v13 = v9;
  else
    v13 = v6;
  LODWORD(STACK[0x64E0]) = v13;
  if ((v1 & 2) != 0)
    v14 = v7;
  else
    v14 = v8;
  LODWORD(STACK[0x64D8]) = v14;
  v15 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0);
  LODWORD(STACK[0x6910]) = STACK[0x65A8];
  return v15();
}

uint64_t sub_100BAABA4()
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x6AC0]) - 863))
                                                   - ((LODWORD(STACK[0x6AC0]) - 863) ^ 0x3B14u)
                                                   + 8715))(STACK[0xD9B8]);
}

uint64_t sub_100BAABF0()
{
  uint64_t v0;
  int v1;
  void (*v2)(uint64_t);

  v2 = (void (*)(uint64_t))STACK[0x5A40];
  ((void (*)(void))STACK[0x5A40])();
  v2(v0);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (v1 ^ 0x1D5Cu) + 16203))(LODWORD(STACK[0x60C8]));
}

uint64_t sub_100BAAC3C(int a1)
{
  uint64_t v1;
  int v2;

  STACK[0xD1A8] = v1 - 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (223 * (a1 == 1930690922)))) - 8))();
}

uint64_t sub_100BAAD00@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, char a4@<W3>, char a5@<W4>, int a6@<W5>, char a7@<W6>, char a8@<W7>, unsigned int a9@<W8>)
{
  unsigned int v9;
  unsigned int v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  _BYTE *v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  char v20;
  _BOOL4 v21;

  v16 = (_BYTE *)(v15 + a9);
  v17 = a9 & 0xF;
  v18 = ((*(_DWORD *)(*v11 + (*v14 & v10)) ^ v16) & 0x7FFFFFFF) * a2;
  v19 = a9 + 1;
  v20 = *(_BYTE *)(v13 + (v17 | (16 * ((((v18 >> ((v12 + a4) & a5 ^ a8)) ^ v18) * a2) >> 24)))) ^ *v16 ^ (((v18 >> ((v12 + a4) & a5 ^ a8)) ^ v18) * a7);
  if (v9 < a1 != v19 > a3)
    v21 = v9 < a1;
  else
    v21 = v19 + a1 < v9;
  *v16 = v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((!v21 * a6) ^ v12)) - 8))();
}

uint64_t sub_100BAADA4()
{
  return ((uint64_t (*)(void))STACK[0x8EF8])();
}

uint64_t sub_100BAADB0()
{
  int v0;
  int v1;
  int v2;

  v1 = STACK[0x6508] + 2088;
  if (v0 == 841173085)
    v2 = -1926392729;
  else
    v2 = 1926392715;
  LODWORD(STACK[0x6B4C]) = v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4))(4294959272);
}

uint64_t sub_100BAAE00()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] - 300) ^ (23156 * (v0 == 841173085))))
                            - (STACK[0x6508] ^ 0x107ALL)))();
}

uint64_t sub_100BAAE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 + 11758)) - (v7 + 2400) + 2468))(a1, 440281528, a3, a4, a5, a6, a7, 806657363);
}

uint64_t sub_100BAAEAC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;

  v2 = STACK[0x6AD8];
  v3 = STACK[0x19F0];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x19E8])) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x19EC];
  LODWORD(STACK[0xEE50]) = v3;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = v3 ^ 0x177;
  LODWORD(STACK[0xEE64]) = 0;
  *(_DWORD *)(v0 + 784) = -299994601
                        - 1705718857
                        * ((-460897509 - ((v1 - 240) | 0xE487431B) + ((v1 - 240) | 0x1B78BCE4)) ^ 0x26EA63BD)
                        + STACK[0x6508];
  *(_QWORD *)(v0 + 792) = &STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v0 + 788)))(v4);
}

uint64_t sub_100BAAF80()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((10237 * (LODWORD(STACK[0xA638]) == LODWORD(STACK[0x12C4]))) ^ (STACK[0x6508] - 293)))
                            - 12))();
}

uint64_t sub_100BAAFBC(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0xE08])) - 4))(a1, a2, 1772493245, 1772489163, 3165626046, 1582813023, 3183359917, 15369);
}

uint64_t sub_100BAB050(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL4 v23;

  v19 = (((v8 + v10) ^ v11) & 0x7FFFFFFF) * (v12 ^ v14 ^ a3);
  v20 = (v19 ^ HIWORD(v19)) * a4;
  v21 = ((((((_DWORD)v9 + (_DWORD)v10) ^ v11) & 0x7FFFFFFF) * a4) ^ ((((((_DWORD)v9 + (_DWORD)v10) ^ v11) & 0x7FFFFFFFu)
                                                                    * a4) >> 16))
      * a4;
  LODWORD(v20) = (*(_BYTE *)(v17 + (v20 >> 24)) ^ *(_BYTE *)(v8 + v10) ^ *(_BYTE *)(v18 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v16 + 1) ^ v20 ^ (BYTE3(v20) * v15))
               - (*(_BYTE *)(v17 + (v21 >> 24)) ^ *(_BYTE *)(v9 + v10) ^ *(_BYTE *)(v18 + (v21 >> 24)) ^ *(_BYTE *)((v21 >> 24) + v16 + 1) ^ v21 ^ (((((((((_DWORD)v9 + (_DWORD)v10) ^ v11) & 0x7FFFFFFF) * a4) ^ ((((((_DWORD)v9 + (_DWORD)v10) ^ v11) & 0x7FFFFFFFu) * a4) >> 16)) * a4) >> 24) * v15));
  v23 = (v20 ^ a6) + a7 + (a5 & (2 * (_DWORD)v20)) != v13 || v10 == 15;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v23 * a8) ^ v12)) - 4))();
}

uint64_t sub_100BAB128@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = a1 - 1625716629;
  LODWORD(STACK[0xEE50]) = a1 - 1625716939;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = a1 - 1625716604;
  STACK[0xEE30] = v1;
  STACK[0xEE58] = v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v3 - 240) & 0x64EF6E68) - (v3 - 240) + 454070676) ^ 0x26824ECD)
                          + a1;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v5);
}

uint64_t sub_100BAB1F4()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3379)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 - 3379) ^ 0x1398)) - 8))();
}

uint64_t sub_100BAB254()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((5387 * (STACK[0x6508] ^ 0x1074) - 10666) * (v0 != -1926392729)) ^ LODWORD(STACK[0x2B54]))))();
}

uint64_t sub_100BAB2A4@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;

  v1 = STACK[0xC768];
  STACK[0x98A8] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v1 + 16;
  STACK[0xD060] = 0;
  v2 = *(_QWORD *)STACK[0xC718];
  STACK[0xE0F0] = v2;
  LODWORD(STACK[0xE0F8]) = STACK[0x9F58];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v2 == 0) * ((3 * (a1 ^ 0x3CF7)) ^ ((a1 ^ 0x60CC) - 1608))) ^ a1))
                            - 8))();
}

uint64_t sub_100BAB350()
{
  int v0;

  LOBYTE(STACK[0xE106]) = 0;
  STACK[0xE0FC] = 0;
  LOBYTE(STACK[0xE107]) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ 0x748Fu) + 12328))();
}

uint64_t sub_100BAB390@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v3 = v1 + (((v2 - 12323) | 4) ^ 0xA8F0B34E);
  v4 = v3 < 0x1C04B4B1;
  v5 = a1 + 470070449 < v3;
  if (a1 > 0xE3FB4B4E != v4)
    v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4 * v5) | (16 * v5)) ^ v2)) - 4))();
}

uint64_t sub_100BAB40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                                  + 8 * (int)(v4 ^ 0x12F6))
                                                                                      - 12))(a1, 3277552562, a3, a4, (v4 + 8565), *(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 8);
}

uint64_t sub_100BAB468()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v0 == 0) & ~LOBYTE(STACK[0xE107])) * ((v1 ^ 0x674F) + 5778)) ^ v1))
                            - 8))();
}

uint64_t sub_100BAB4AC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((233 * (STACK[0xD060] == 0)) ^ v0))
                            - ((v0 - 1145557610) & 0x4447CFDB)
                            - ((v0 - 1253121473) & 0x4AB0D75F ^ 0xFFFFFFFFFFFFB22DLL)))();
}

uint64_t sub_100BAB51C(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v2 + 578464631) & 0xDD855DF7 ^ 0x3DD5) + v2)) - 12))(STACK[0x4B10], a2, 2969791707, 2646401773, 32414, 4155752119, 4294164223, 139215104);
}

uint64_t sub_100BAB5A0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((24829 * (v0 == (STACK[0x3950] & 0x169B5EDA) + 1432985178)) ^ LODWORD(STACK[0x394C])))
                            - ((LODWORD(STACK[0x3954]) | 0x801u) ^ 0x48C5)))();
}

uint64_t sub_100BAB600()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1081 * (STACK[0xD060] == 0)) ^ v0))
                            - ((v0 - 1019706603) & 0x3CC77ADD ^ 0x48C5)))();
}

uint64_t sub_100BAB65C()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  v1 = LODWORD(STACK[0x9F58]) + 16;
  LODWORD(STACK[0x6E54]) = v1;
  v2 = ((v1 & 0x8CEBFE96) << (((v0 + 83) | 2) - 46)) & (v1 ^ 0x4CCBFC45) ^ v1 & 0x8CEBFE96;
  v3 = ((2 * (v1 ^ 0x5C8C9D61)) ^ 0xA0CEC7EE) & (v1 ^ 0x5C8C9D61) ^ (2 * (v1 ^ 0x5C8C9D61)) & 0xD06763F6;
  v4 = v3 ^ 0x50212011;
  v5 = (v3 ^ 0x4642E1) & (4 * v2) ^ v2;
  v6 = ((4 * v4) ^ 0x419D8FDC) & v4 ^ (4 * v4) & 0xD06763F4;
  v7 = (v6 ^ 0x400503C3) & (16 * v5) ^ v5;
  v8 = ((16 * (v6 ^ 0x90626023)) ^ 0x6763F70) & (v6 ^ 0x90626023) ^ (16 * (v6 ^ 0x90626023)) & 0xD06763F0;
  v9 = v7 ^ 0xD06763F7 ^ (v8 ^ 0x662387) & (v7 << 8);
  v10 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v1 ^ 0xACEB3978 ^ (2
                                                                         * ((v9 << 16) & 0x50670000 ^ v9 ^ ((v9 << 16) ^ 0x63F70000) & (((v8 ^ 0xD0014087) << 8) & 0xD0670000 ^ 0x10040000 ^ (((v8 ^ 0xD0014087) << 8) ^ 0x67630000) & (v8 ^ 0xD0014087)))));
  STACK[0x9248] = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 | (32 * (v10 != 0)))) - 8))();
}

uint64_t sub_100BAB82C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x94A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x13BC ^ ((v0 - 699) | 0x302))) - 12))();
}

uint64_t sub_100BAB874@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;

  STACK[0x6F90] = v1;
  v2 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ 0x13AD)) - ((a1 + 13894) ^ 0x39B4)))();
}

uint64_t sub_100BAB8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unint64_t v4;
  unint64_t v5;

  v3 = STACK[0x6508] - 1821;
  v4 = STACK[0x9248];
  v5 = STACK[0x6AD8];
  STACK[0xD2A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 8;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (v3 ^ 0x2D27))
                                                                              - 12))(v4, a2, a3, 102);
}

uint64_t sub_100BABB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((STACK[0x98A8] <= STACK[0x9248] + (LODWORD(STACK[0x9F58]) - 1930690922)) * ((LODWORD(STACK[0x49D8]) - 6) ^ 0x5BE6)) ^ LODWORD(STACK[0x341C]))) - 8))(a1, 440281528, 1772489163, a4, 146, 4294967173, STACK[0x60C0], STACK[0x5668]);
}

uint64_t sub_100BABBE0@<X0>(unsigned int a1@<W1>, int a2@<W2>, char a3@<W3>, char a4@<W4>, char a5@<W5>, _QWORD *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  _BYTE *v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;

  v14 = STACK[0x49D8];
  v15 = (_BYTE *)(v10 + (v8 - 1930690922 + v9 - 1));
  v16 = v9 - 1;
  v17 = ((v15 ^ *(_DWORD *)(*a6 + (*v11 & a1))) & 0x7FFFFFFF) * a2;
  v18 = (v17 ^ HIWORD(v17)) * a2;
  v19 = v18 >> (((LODWORD(STACK[0x49D8]) + 115) | 0x40u) + a3);
  *v15 = *(_BYTE *)(a8 + v16) ^ *(_BYTE *)(v12 + v19) ^ *(_BYTE *)(a7 + v19) ^ *(_BYTE *)(v19 + v13 + 2) ^ v18 ^ (v19 * a5) ^ a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27841 * (v16 != 0)) ^ v14)) - 8))();
}

uint64_t sub_100BABC94@<X0>(unsigned int a1@<W1>, int a2@<W2>, char a3@<W3>, char a4@<W4>, char a5@<W5>, _QWORD *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  unsigned int v17;
  unint64_t v18;

  v15 = (_BYTE *)(v11 + (v10 + v8));
  v16 = (v9 + 31) | 0x9A;
  v17 = ((v15 ^ *(_DWORD *)(*a6 + (*v12 & a1))) & 0x7FFFFFFF) * a2;
  v18 = (v17 ^ HIWORD(v17)) * a2;
  *v15 = *(_BYTE *)(a8 + v8) ^ *(_BYTE *)(v13 + (v18 >> (v16 + a3))) ^ *(_BYTE *)(a7 + (v18 >> (v16 + a3))) ^ *(_BYTE *)((v18 >> (v16 + a3)) + v14 + 2) ^ v18 ^ ((v18 >> (v16 + a3)) * a5) ^ a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2 * (v8 == 15)) | (4 * (v8 == 15)) | v9)) - 8))();
}

uint64_t sub_100BABD34()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)STACK[0xC718];
  v3 = sub_10009A6DC();
  *v2 = v0;
  LODWORD(STACK[0x9F58]) = STACK[0x6E54];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (((v1 - 2582) | 0x809u) ^ 0x48C5)))(v3);
}

uint64_t sub_100BABD98()
{
  int v0;

  STACK[0xC768] += (3 * (v0 ^ 0x449Au)) ^ 0xFFFFFFFFFFFFDAF5;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100BABDD4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((STACK[0xC448] == 0) ^ (v0 + 114)) & 1) * v1) ^ v0))
                            - ((v0 - 9459) | 0x1064u)
                            + 4202))();
}

uint64_t sub_100BABE30()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 5263)) - 12))(v1);
}

uint64_t sub_100BABE50@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  STACK[0xC768] -= 16;
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = (a1 + 714336383) ^ 0x1AE;
  LODWORD(STACK[0xEE50]) = (a1 + 714336383) ^ 0xF05;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = a1 + 714336383;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v1;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((1065132206 - ((v2 - 240) | 0x3F7CA0AE) + ((v2 - 240) | 0xC0835F51)) ^ 0xFD118008)
                          + a1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v4);
}

uint64_t sub_100BABF4C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = STACK[0x6508] - 459;
  v1 = (_QWORD *)STACK[0xC718];
  v2 = sub_10009A6DC();
  *v1 = 0;
  *(_DWORD *)STACK[0x7C00] = 1930690922;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v2);
}

uint64_t sub_100BABF8C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((8 * (STACK[0xAC68] == 0)) | (16 * (STACK[0xAC68] == 0))) ^ (STACK[0x6508] + 1269)))
                            - 4))();
}

uint64_t sub_100BABFCC()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x6508] + 1277;
  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100BABFF0()
{
  return ((uint64_t (*)(void))STACK[0xC868])();
}

uint64_t sub_100BAC000()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 312)))();
}

uint64_t sub_100BAC01C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;
  int v4;

  v0 = STACK[0x1968];
  v1 = STACK[0x1968] + 3416;
  STACK[0xB4A0] = 0;
  v2 = ((uint64_t (*)(_QWORD))STACK[0x5510])((LODWORD(STACK[0x9CD4]) - 1930690922));
  STACK[0x7310] = v2;
  v3 = v2 != 0;
  if (v2)
    v4 = -1926392729;
  else
    v4 = 1926417667;
  LODWORD(STACK[0xB074]) = v4;
  LOBYTE(STACK[0x90A7]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((17428 * v3) ^ v0)) - v1 + 4210))();
}

uint64_t sub_100BAC0B0()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x1968];
  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x1968]) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x2A79 ^ (v0 + 13982))) - 8))();
}

uint64_t sub_100BAC0F8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((STACK[0x90A7] & 1) == 0) * (v0 - 4201)) ^ (v0 + 16401)))
                            - 8))();
}

uint64_t sub_100BAC140()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v0 + 5929) ^ 0x1891) + v0 - 3755)))();
}

uint64_t sub_100BAC1A0()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((15508 * (v1 == ((v0 - 1723) ^ 0x8D2D9DDC))) ^ (v0 - 1723)))
                            - 4))();
}

uint64_t sub_100BAC1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v7 + 5709) | 0x15A0) - 1029) ^ v7)) - 4))(a1, a2, a3, a4, a5, 1506317302, a7, STACK[0x43B0]);
}

uint64_t sub_100BAC244()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((8608 * (STACK[0xB4A0] != 0)) ^ (v0 + 315))))();
}

uint64_t sub_100BAC274()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100BAC28C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5828 * (v1 == -1926392729)) ^ (v0 + 7510)))
                            - (((v0 + 138) | 0x245Au) ^ 0x3556)))();
}

uint64_t sub_100BAC2D4()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  int v9;

  v1 = STACK[0xCA20];
  v2 = STACK[0x9A50];
  v3 = STACK[0xC218];
  STACK[0x9DE0] = STACK[0xC218];
  STACK[0x81F8] = v1;
  STACK[0xB788] = v2;
  STACK[0x8150] = STACK[0x7740];
  STACK[0xBEC8] = 0;
  LODWORD(STACK[0x9C24]) = 1930690922;
  STACK[0xC778] = 0;
  LODWORD(STACK[0xB8A4]) = 1199954562;
  STACK[0x8C30] = 0;
  LODWORD(STACK[0x799C]) = 0;
  LODWORD(STACK[0x8484]) = 1930690922;
  if (v3)
    v4 = LODWORD(STACK[0x762C]) == ((v0 + 1625864459) & 0x9F1773BF) + 1930665805;
  else
    v4 = 0;
  v9 = v4 && v1 != 0 && v2 != 0 && STACK[0x6FA8] != 0 && STACK[0xCB80] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((v9 * ((v0 + 1773690532) & 0x96477C77 ^ 0x1093)) ^ v0))
                            - 8))();
}

uint64_t sub_100BAC420@<X0>(int a1@<W8>)
{
  uint64_t v1;
  BOOL v2;
  int v3;

  if (v1)
    v2 = LODWORD(STACK[0xB13C]) == 1930690922;
  else
    v2 = 1;
  v3 = !v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29 * v3) ^ a1))
                            - 2765 * (a1 ^ 0x6227u)
                            - (((a1 - 22561) | 0x189u) ^ 0xFFFFFFFFFFFFE1E7)))();
}

uint64_t sub_100BAC498()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x1E11)) - (v0 ^ 0x27ECu) + 11357))();
}

uint64_t sub_100BAC4F0@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  int v14;

  STACK[0xC0A0] = a1;
  STACK[0xEBE8] = v9;
  LODWORD(STACK[0xEBF4]) = v5;
  STACK[0xEBF8] = v8;
  STACK[0xEC00] = v2;
  STACK[0xEC08] = v3;
  STACK[0xEC10] = v4;
  STACK[0xEC18] = v1;
  if (v9)
    v10 = v5 == 1930690922;
  else
    v10 = 1;
  v14 = v10 || v8 == 0 || v6 != ((301 * (v7 ^ 0x2C6F)) ^ 0x73141104) || v3 == 0x6293007DAEF9E07CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v14 | (2 * v14)) ^ v7))
                            - (((v7 ^ 0x2C6Fu) + 16033) ^ 0x3EABLL)))();
}

uint64_t sub_100BAC598(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  int v3;

  *(_DWORD *)(v2 - 0x6293007DAEF9E07CLL) = 1930690922;
  *v1 = 1199954562;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3)
                                                   - ((3 * (v3 ^ 0x39EEu)) ^ 0x15CBLL)))(a1, 3277552562);
}

uint64_t sub_100BAC5FC@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;

  LOBYTE(STACK[0xEC2E]) = a1;
  LODWORD(STACK[0xEC28]) = v1;
  LODWORD(STACK[0xEC24]) = v2;
  v5 = a1 == 0;
  LOBYTE(STACK[0xEC2F]) = v5;
  if (v1 >= v4 - 1930690926)
    v5 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((20831 * v5) ^ v3)) - ((v3 + 5791) ^ 0x2C66u)))();
}

uint64_t sub_100BAC664()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x12FF)) - 4289 * (v0 ^ 6u) + 8566))();
}

uint64_t sub_100BAC6C4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 - 7148) + 4210))();
}

uint64_t sub_100BAC708()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x6508] + 3072) * (v0 == -1926392729)) ^ LODWORD(STACK[0x3C48])))
                            - (STACK[0x6508]
                             + 1316)
                            + 5522))();
}

uint64_t sub_100BAC748()
{
  _BOOL4 v1;

  v1 = LODWORD(STACK[0x9C24]) != 1930690938 || LODWORD(STACK[0xB8A4]) != 1199954578;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((16 * v1) | (32 * v1)) ^ (STACK[0x6508] + 5467)))
                            - (((STACK[0x6508] - 2796) | 0x1010)
                             + (unint64_t)(5 * ((STACK[0x6508] + 5467) ^ 0x240E)))
                            + 7913))();
}

uint64_t sub_100BAC7E0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W8>)
{
  unint64_t v3;
  uint64_t (*v4)(unint64_t, uint64_t, uint64_t, uint64_t);

  v3 = STACK[0xBEC8];
  v4 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                       + 8 * (a3 ^ 0x2D25))
                                                                           - ((a3 + 5813) | 0x1004u)
                                                                           + 12296);
  STACK[0xD2A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * a3) - 4;
  return v4(v3, a1, a2, 102);
}

uint64_t sub_100BAC878()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 - 2639) + 9661))();
}

uint64_t sub_100BAC8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((52
                                * (a2 + (unint64_t)((v4 ^ 0x1958u) + 9088) + v3 - 0x36DDE79E4EE9CA80 <= a1 + v2 - 0x421C746E4A9A0A8BLL)) ^ v4)))();
}

uint64_t sub_100BAC910(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((((v5 - 11405) | a4) ^ (v5 - 11346)) * (v4 == 0)) ^ v5)))();
}

uint64_t sub_100BAC96C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 4233)) - 4))();
}

uint64_t sub_100BAC98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unint64_t v17;
  unsigned int v18;
  unint64_t v19;

  v14 = v2 - 1;
  v15 = *(_DWORD *)(*v9 + (*v11 & v6));
  v16 = (((a2 + v4 + v14) ^ v15) & 0x7FFFFFFF) * v7;
  v17 = (v16 ^ HIWORD(v16)) * v7;
  v18 = (((a1 + v5 + v14) ^ v15) & 0x7FFFFFFF) * v7;
  v19 = (v18 ^ HIWORD(v18)) * v7;
  *(_BYTE *)(a1 + v5 + v14) = *(_BYTE *)(v10 + (v17 >> 24)) ^ *(_BYTE *)(a2 + v4 + v14) ^ *(_BYTE *)((v17 >> 24) + v12 + 4) ^ *(_BYTE *)((v17 >> 24) + v13 + 1) ^ *(_BYTE *)(v10 + (v19 >> 24)) ^ *(_BYTE *)((v19 >> 24) + v12 + 4) ^ *(_BYTE *)((v19 >> 24) + v13 + 1) ^ v17 ^ v19 ^ (BYTE3(v17) * v8) ^ (BYTE3(v19) * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5762 * (v14 == 0)) ^ v3)) - 4))();
}

uint64_t sub_100BACA64(uint64_t a1, int a2)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((a2 - 284043303) & 0x10EDD87F) - 4178) * (v2 == 0)) ^ a2))
                            - 12))();
}

uint64_t sub_100BACACC(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 - 9667)) - 4))();
}

uint64_t sub_100BACB10@<X0>(uint64_t a1@<X0>, unsigned int a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;

  v15 = (v6 ^ 0xF7EBFFF0F6EFDFFFLL) + 0x2CBFA7EFFF56A7EELL + ((2 * v6) & 0x1EDDFBFFELL);
  v16 = (_BYTE *)(a3 + v5 + v15);
  v17 = (_BYTE *)(a1 + v4 + v15);
  v18 = *(_DWORD *)(*v10 + (*v12 & a2));
  v19 = ((v16 ^ v18) & (((v7 - 731169756) & 0x2B9499F7) + 2147479433)) * v8;
  v20 = (v19 ^ HIWORD(v19)) * v8;
  v21 = ((((v17 ^ v18) & 0x7FFFFFFF) * v8) ^ ((((v17 ^ v18) & 0x7FFFFFFF) * v8) >> 16)) * v8;
  *v17 = *(_BYTE *)(v11 + (v20 >> 24)) ^ *v16 ^ *(_BYTE *)((v20 >> 24) + v13 + 4) ^ *(_BYTE *)((v20 >> 24) + v14 + 1) ^ *(_BYTE *)(v11 + (v21 >> 24)) ^ *(_BYTE *)((v21 >> 24) + v13 + 4) ^ *(_BYTE *)((v21 >> 24) + v14 + 1) ^ v20 ^ v21 ^ (BYTE3(v20) * v9) ^ (BYTE3(v21) * v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((204 * (v6 + 1 == v3)) ^ v7)) - 4))();
}

uint64_t sub_100BACC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))STACK[0xD2A8])(a1, a2, a3, 4294948158);
}

uint64_t sub_100BACC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = STACK[0x6508] - 1830;
  v4 = STACK[0xC778];
  v5 = (STACK[0x4C18] & 0x9D9CEFC5 ^ 0xFFFFFFFFFFFFDA39) + *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  v6 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((7793 * ((v3 ^ 0xD7BB330F) > 0x79A270C1)) ^ LODWORD(STACK[0x4C1C])));
  STACK[0xD2A8] = v5;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))(v6 - 8))(v4, a2, a3, 102);
}

uint64_t sub_100BACD30()
{
  int v0;
  int v1;
  uint64_t v2;

  v1 = LODWORD(STACK[0xE670]) - LODWORD(STACK[0xE678]) + 795991701;
  *(_DWORD *)(STACK[0xE640] - 0x6DA8A6D2510EBBD7) = v1;
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((15 * (STACK[0xE667] & 1 | (STACK[0xE650] == 0))) ^ (v0 + 6753)));
  LODWORD(STACK[0xE67C]) = v1;
  return ((uint64_t (*)(void))(v2
                            - (((v0 + 176877416) & 0xF57500BF)
                             + ((v0 - 1239969961) & 0x49E87377 ^ 0xFFFFFFFFFFFFEC23))))();
}

uint64_t sub_100BACE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * ((10129
                                                                 * (*(unsigned __int8 *)(a8 + 2003) == (((v8 + 45) | 4) - 118))) ^ v8))
                                                   - ((49 * (v8 ^ 0x1313u)) ^ 0x107ALL)))(a1, 3277552562);
}

uint64_t sub_100BACE6C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 15152)))();
}

uint64_t sub_100BACE88@<X0>(int a1@<W2>, _DWORD *a2@<X7>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  a2[499] = a1;
  a2[498] = a3;
  a2[497] = v3;
  v5 = v3 + 1068308805 < a1 - 862382121;
  if (v3 > 0xC052E6BA != (a1 - 862382121) < 0x3FAD1945)
    v5 = (a1 - 862382121) < 0x3FAD1945;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v5 * ((v4 - 4213) ^ 0x27F6)) ^ (v4 + 13758))) - 4))();
}

uint64_t sub_100BACF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                                                                 + 8 * (v4 + 4858))
                                                                                     - 12))(a1, a2, a3, a4, (v4 + 8577), *(_QWORD *)(STACK[0x6AD8] + 8 * v4));
}

uint64_t sub_100BACF68()
{
  STACK[0xC768] -= 16;
  return ((uint64_t (*)(void))STACK[0x9408])();
}

_QWORD *sub_100BACF94()
{
  int v0;
  uint64_t v1;
  int v2;
  _QWORD *(*v3)(unint64_t *__return_ptr, uint64_t);

  v1 = STACK[0x6508] + 2340;
  v2 = STACK[0x6508] - 3051;
  *(_QWORD *)STACK[0x6FA8] = 0;
  *(_DWORD *)STACK[0xCB80] = v0;
  v3 = (_QWORD *(*)(unint64_t *__return_ptr, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ 0x3B60))
                                                                       - v1
                                                                       + 6546);
  STACK[0x8120] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4;
  return v3(&STACK[0x799C], 4294959272);
}

uint64_t sub_100BAD018@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0xEBA0] = a1;
  STACK[0xEBA8] = v3;
  STACK[0xEB88] = v5;
  LODWORD(STACK[0xEB94]) = v1;
  STACK[0xEB98] = v4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((21130 * (((v5 == 0) ^ (v2 + v2 - 78 + 1)) & 1)) ^ v2)))();
}

uint64_t sub_100BAD078@<X0>(_DWORD *a1@<X8>)
{
  unsigned int v1;
  int v2;

  *a1 = 0;
  LOBYTE(STACK[0xEBB6]) = 0;
  LODWORD(STACK[0xEBB0]) = v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((7122 * (v1 > 0x71029141)) ^ (v1 + 950259063))))();
}

uint64_t sub_100BAD0E0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v3 = v1 + 164127324;
  if (v3 < 0x7CDC63CA != a1 + 164127328 < 12 * (v2 ^ 0x199E) + ((v2 - 145660315) & 0x8AE9076u) + 2094813988)
    v4 = v3 < 0x7CDC63CA;
  else
    v4 = a1 + 164127328 < v3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((1019 * v4) ^ v2)))();
}

uint64_t sub_100BAD17C(uint64_t a1)
{
  unsigned int v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v1 ^ 0x12CB))
                                                   - (v1 ^ 0x3CLL)))(a1, 3277552562);
}

uint64_t sub_100BAD1C0()
{
  return ((uint64_t (*)(void))STACK[0x8120])();
}

uint64_t sub_100BAD1CC()
{
  int v0;
  int v1;
  unint64_t v2;
  unsigned int v3;

  v2 = STACK[0x6508];
  v3 = STACK[0x6508] + 1091;
  LODWORD(STACK[0x6B4C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v2 + 8074) ^ (14 * v0))) - (v3 ^ 0x14BDLL)))();
}

uint64_t sub_100BAD214()
{
  int v0;
  BOOL v1;
  int v2;

  if (STACK[0x7A68])
    v1 = LODWORD(STACK[0xD05C]) == 20;
  else
    v1 = 0;
  v2 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 * (v0 + 16245)) ^ v0)) - 4))();
}

uint64_t sub_100BAD260()
{
  int v0;
  int v1;

  v1 = LODWORD(STACK[0x78FC]) != 384 * (v0 ^ 0x1499) + 1930678634;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((32 * v1) | (v1 << 6)) ^ v0)) - 4))();
}

uint64_t sub_100BAD2B8()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = v1 - 414665134 + (v0 ^ 0x24B9) - 10795;
  v3 = LODWORD(STACK[0x817C]) - 414663641;
  v4 = v2 < 0x5A5CBD91;
  v5 = v2 > v3;
  if (v3 < 0x5A5CBD91 != v4)
    v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((30542 * !v5) ^ v0)) - 4))();
}

uint64_t sub_100BAD340()
{
  int v0;
  unint64_t v1;

  STACK[0x8700] = STACK[0xC750] + 16;
  v1 = STACK[0x6AD8];
  STACK[0xAE88] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 6937 + ((v0 + 692) | 0x120))) - 8))();
}

uint64_t sub_100BAD3B8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 3104) ^ (21837 * v0)))
                            - (((STACK[0x6508] - 1136) | 0x1080) ^ 0x1C82)))();
}

uint64_t sub_100BAD3F0@<X0>(int a1@<W8>)
{
  int v1;
  BOOL v2;
  int v4;

  if (STACK[0x8C30])
    v2 = LODWORD(STACK[0x799C]) == 20;
  else
    v2 = 0;
  v4 = !v2 || LODWORD(STACK[0x8484]) == v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v4 * (((a1 - 7248) | 0x1040) ^ 0x1066)) ^ a1))
                            - ((a1 - 7248) ^ 0x32)))();
}

uint64_t sub_100BAD470()
{
  int v0;
  int v1;

  LODWORD(STACK[0xE10C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 1976)) - 8))();
}

uint64_t sub_100BAD494()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((8042
                                          * (((LODWORD(STACK[0xE10C]) == -1926392729) ^ (v0 + 55)) & 1)) ^ (v0 + 6586)))
                            - 8))();
}

uint64_t sub_100BAD4E0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 6851) | (4 * v0)))
                            - (STACK[0x38F8] ^ 0x2B3D)))();
}

uint64_t sub_100BAD510()
{
  BOOL v0;
  int v2;

  if (STACK[0x8C30])
    v0 = LODWORD(STACK[0x799C]) == 20;
  else
    v0 = 0;
  v2 = v0
    && LODWORD(STACK[0x8484]) != STACK[0x38F8]
                               + 1930673898
                               + (STACK[0x38F8] ^ 0x3B4F)
                               + 1745;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((179 * v2) ^ STACK[0x38F8])) - 4))();
}

uint64_t sub_100BAD590(uint64_t a1, uint64_t a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;

  v3 = STACK[0x8150];
  v4 = STACK[0x6AD8];
  STACK[0xBD28] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2);
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v4 + 8 * (v2 ^ 0x3A5F))
                                                                     - ((v2 - 299) ^ 0x628)))(a1, a2, v3);
}

uint64_t sub_100BAD5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v8 = (((v7 & 0xF57500BF) - 1431486791) & 0x5552FBFB)
     + ((32 * *(_DWORD *)STACK[0xE648]) & 0xD6F6FDE0)
     + 0x7C79BBBEF7EFB89DLL
     + ((16 * *(_DWORD *)STACK[0xE648]) ^ 0xDBAF6E736B7B7EF6);
  v9 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v7 & 0xFFFFFFFFF57500BFLL));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v9 + 8 * (int)(v7 & 0xF57500BF ^ 0x16AC)))(a1, a2, a3, a4, 0xF26FC0784BC7DF00, v8, a7, 0x2AB629F33171E5F1);
}

uint64_t sub_100BAD6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)STACK[0x6FA8];
  v4 = STACK[0x6AD8];
  STACK[0xBD28] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * ((int)v2 + 13745))
                                                            - ((v2 - 323) ^ 0x628)))(a1, a2, v3);
}

uint64_t sub_100BAD708(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  int v4;
  unint64_t v5;

  STACK[0xCC18] = a3;
  LODWORD(STACK[0x955C]) = v4;
  v5 = STACK[0x6AD8];
  STACK[0x7720] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (v3 + 4387))
                                                   - ((v3 + 48314271) & 0xFD1EFBE8 ^ 0x39A0)))(a1, 67);
}

uint64_t sub_100BAD778()
{
  int v0;
  int v1;

  v1 = STACK[0x6508] - 2714;
  LODWORD(STACK[0x9EC4]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((20844 * (v0 == (STACK[0x3308] ^ 0x8D2D91BB))) ^ v1))
                            - 4))();
}

uint64_t sub_100BAD7C8()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x3308];
  v1 = STACK[0x6AD8];
  STACK[0xAE88] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x3308]) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(((v0 - 1159398883) & 0x451B09AF ^ 0x2D12) + v0)) - 8))();
}

uint64_t sub_100BAD830()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6851)) - 4))();
}

uint64_t sub_100BAD85C()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((28208 * (v1 == -1926392729)) ^ (v0 + 7510)))
                            - (v0 ^ 0x107ALL)))();
}

uint64_t sub_100BAD8A0@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (13 * (a1 == 0))))
                            - ((v1 - 10648) | 0x1502u)
                            + 5522))();
}

uint64_t sub_100BAD8F0()
{
  int v0;
  BOOL v1;
  int v2;

  if (STACK[0x8150])
    v1 = LODWORD(STACK[0xB13C]) == 1930690922;
  else
    v1 = 1;
  v2 = !v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 * (((v0 - 2132915948) & 0x7F21A75F) + 15562)) ^ v0))
                            - 8))();
}

uint64_t sub_100BAD97C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, int a3@<W8>)
{
  uint64_t v3;
  unint64_t v4;

  LODWORD(STACK[0x80AC]) = a3;
  v4 = STACK[0x6AD8];
  STACK[0x7720] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 8;
  STACK[0xEC30] = a2;
  LODWORD(STACK[0xEC38]) = a3;
  LOWORD(STACK[0xEC3E]) = 18764;
  STACK[0xEC40] = (unint64_t)&STACK[0x80AC];
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * ((int)v3 + 5103 + (int)v3 + 6557)) - 8))(a1, 67);
}

uint64_t sub_100BAD9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;

  STACK[0x7448] = 0x2EB35D1B00280420;
  v7 = STACK[0x6AD8];
  STACK[0x8988] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * ((v6 + 5992) ^ v6)))(a1, a2, 157, a4, 36, a6, 137, 806657363);
}

uint64_t sub_100BADA5C()
{
  char v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((LODWORD(STACK[0x3518]) * (v0 & 1)) ^ LODWORD(STACK[0x3514]))))();
}

uint64_t sub_100BADAAC()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2FF0])))();
}

uint64_t sub_100BADB28()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1316)) - 8))();
}

uint64_t sub_100BADB50@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  BOOL v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  uint64_t v23;

  LODWORD(STACK[0xE108]) = a1;
  LODWORD(STACK[0x7C54]) = v8;
  LODWORD(STACK[0x79BC]) = v2;
  v9 = (v7 - 2012) ^ 0x1AC1809 ^ (v1 ^ (2 * ((v1 ^ 6) & (2 * (v1 & 0x96)) ^ v1 & 0x96))) & 0xF;
  v10 = (((v9 - (v3 & (2 * v9)) - 483998757) ^ 0x45C59619) - 296605296) ^ (((v9 - (v3 & (2 * v9)) - 483998757) ^ 0x7DF0D850)
                                                                         - 697866297) ^ (((v9
                                                                                         - (v3 & (2 * v9))
                                                                                         - 483998757) ^ 0xDABF9D07)
                                                                                       + 1898455698);
  v11 = -1993492749 - v10;
  v12 = v10 == 1226665177;
  if (v10 == 1226665177)
    v13 = v1;
  else
    v13 = v1 + 1226665177 - v10 + 16;
  v14 = v5 + 1774;
  if (!v12)
    v14 = v11;
  LODWORD(STACK[0xCDB4]) = v14;
  *(_DWORD *)STACK[0xCB80] = v13;
  v15 = (v13 ^ 0xCAEBFC54) & (2 * (v13 & 0x8CEBFE96)) ^ v13 & 0x8CEBFE96;
  v16 = ((2 * (v13 ^ 0xC2FED850)) ^ 0x9C2A4D8C) & (v13 ^ 0xC2FED850) ^ (2 * (v13 ^ 0xC2FED850)) & 0x4E1526C6;
  v17 = v16 ^ 0x42152242;
  v18 = (v16 ^ (v4 + 1153)) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0x38549B18) & v17 ^ (4 * v17) & 0x4E1526C4;
  v20 = (v19 ^ 0x8140206) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x460124C6)) ^ 0xE1526C60) & (v19 ^ 0x460124C6) ^ (16 * (v19 ^ 0x460124C6)) & 0x4E1526C0;
  v22 = v20 ^ 0x4E1526C6 ^ (v21 ^ (v6 + 486)) & (v20 << 8);
  v23 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v13 ^ (2
                                                             * ((v22 << 16) & 0x4E150000 ^ v22 ^ ((v22 << 16) ^ 0x26C60000) & (((v21 ^ 0xE050286) << 8) & 0x4E150000 ^ 0x4A110000 ^ (((v21 ^ 0xE050286) << 8) ^ 0x15260000) & (v21 ^ 0xE050286)))) ^ 0x1CC9B31A);
  *(_QWORD *)STACK[0x6FA8] = v23;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((532 * (v23 != 0)) ^ (v7 + 7510))) - 12))();
}

uint64_t sub_100BADDE0(unint64_t a1)
{
  int v1;

  STACK[0xB9D8] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 4852)) - ((v1 - 1050396828) & 0x3E9BFFD5) + 16336))();
}

uint64_t sub_100BADE50()
{
  int v0;
  unint64_t v1;
  char v2;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] ^ 0x7D;
  LODWORD(STACK[0x9B84]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((v1 - 1926396943) ^ 0x8D2D919E ^ (14206
                                                                                * (((-117 * v2) ^ ((((v0 - (v1 - 1926396943)) | (v1 - 1926396943 - v0)) & 0x80000000) != 0)) & 1))))
                            - 8))();
}

uint64_t sub_100BADEBC@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xAE88] = *(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x2F6E)) - ((a1 - 1521) & 0xFFFFF65E)))();
}

uint64_t sub_100BADF18()
{
  unint64_t v0;
  int v1;
  unint64_t v2;
  int v3;
  unsigned int v4;
  char *v5;
  _DWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  unint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  unsigned int v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int v47;
  unint64_t v48;

  v5 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] += 128;
  v6 = (_DWORD *)STACK[0x60B8];
  v7 = (uint64_t *)STACK[0x60C0];
  v8 = *(_QWORD *)STACK[0x60C0];
  v9 = *(_DWORD *)STACK[0x60B8] & v4;
  v10 = 1772489163 * ((*(_DWORD *)(v8 + v9) ^ ((_DWORD)v5 + 112)) & 0x7FFFFFFF);
  v11 = 1772489163 * ((v10 >> (((v1 - 37) | 0x68) + 36)) ^ v10);
  v12 = STACK[0x4688];
  v13 = STACK[0x4678];
  v14 = STACK[0x4680];
  v5[112] = *(_BYTE *)(STACK[0x4688] + (v11 >> 24)) ^ *(_BYTE *)(STACK[0x4678] + (v11 >> 24)) ^ *(_BYTE *)((v11 >> 24) + STACK[0x4680] + 1) ^ v11 ^ (11 * BYTE3(v11)) ^ 0x5B;
  LODWORD(v11) = 1772489163 * ((*(_DWORD *)(v8 + v9) ^ ((_DWORD)v5 + 113)) & 0x7FFFFFFF);
  v15 = 1772489163 * (v11 ^ WORD1(v11));
  v5[113] = *(_BYTE *)(v12 + (v15 >> 24)) ^ *(_BYTE *)(v13 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + v14 + 1) ^ v15 ^ (11 * BYTE3(v15)) ^ 4;
  LODWORD(v15) = 1772489163 * ((*(_DWORD *)(v8 + v9) ^ ((_DWORD)v5 + 114)) & 0x7FFFFFFF);
  v16 = 1772489163 * (v15 ^ WORD1(v15));
  v17 = *(_BYTE *)(v12 + (v16 >> 24));
  v18 = *(_BYTE *)(v13 + (v16 >> 24));
  STACK[0x9B10] = (unint64_t)(v5 + 112);
  v5[114] = v17 ^ v18 ^ *(_BYTE *)((v16 >> 24) + v14 + 1) ^ v16 ^ (11 * BYTE3(v16)) ^ 0x98;
  LODWORD(v8) = 1772489163 * ((*(_DWORD *)(v8 + v9) ^ ((_DWORD)v5 + 115)) & 0x7FFFFFFF);
  v19 = 1772489163 * (v8 ^ WORD1(v8));
  v5[115] = *(_BYTE *)(v12 + (v19 >> 24)) ^ *(_BYTE *)(v13 + (v19 >> 24)) ^ *(_BYTE *)((v19 >> 24) + v14 + 1) ^ v19 ^ (11 * BYTE3(v19)) ^ 0xC9;
  v20 = (_BYTE *)STACK[0x9B10];
  v21 = (_BYTE *)STACK[0x9B10];
  v22 = *v6 & v4;
  v23 = 1772489163 * ((*(_DWORD *)(*v7 + v22) ^ (STACK[0x9B10] + 4)) & 0x7FFFFFFF);
  v24 = 1772489163 * (v23 ^ HIWORD(v23));
  v20[4] = *(_BYTE *)(v12 + (v24 >> 24)) ^ *(_BYTE *)(v13 + (v24 >> 24)) ^ *(_BYTE *)((v24 >> 24) + v14 + 1) ^ v24 ^ (11 * BYTE3(v24)) ^ 0x40;
  LODWORD(v24) = 1772489163 * ((*(_DWORD *)(*v7 + v22) ^ ((_DWORD)v20 + 5)) & 0x7FFFFFFF);
  v25 = 1772489163 * (v24 ^ WORD1(v24));
  v26 = *(_BYTE *)(v12 + (v25 >> 24));
  LODWORD(STACK[0x96A4]) = v3;
  v20[5] = v26 ^ *(_BYTE *)(v13 + (v25 >> 24)) ^ *(_BYTE *)((v25 >> 24) + v14 + 1) ^ v25 ^ (11 * BYTE3(v25)) ^ 0x74;
  v27 = 1772489163 * ((*(_DWORD *)(*v7 + v22) ^ ((_DWORD)v20 + 6)) & 0x7FFFFFFF);
  v28 = 1772489163 * (v27 ^ HIWORD(v27));
  v29 = *(_BYTE *)(v12 + (v28 >> 24));
  STACK[0x82F0] = (unint64_t)v5;
  v20[6] = v29 ^ *(_BYTE *)(v13 + (v28 >> 24)) ^ *(_BYTE *)((v28 >> 24) + v14 + 1) ^ v28 ^ (11 * BYTE3(v28)) ^ 0x20;
  LODWORD(v28) = 1772489163 * ((*(_DWORD *)(*v7 + v22) ^ ((_DWORD)v20 + 7)) & 0x7FFFFFFF);
  v30 = 1772489163 * (v28 ^ WORD1(v28));
  LOBYTE(v25) = *(_BYTE *)(v12 + (v30 >> 24));
  STACK[0x96E8] = v2;
  v20[7] = v25 ^ *(_BYTE *)(v13 + (v30 >> 24)) ^ *(_BYTE *)((v30 >> 24) + v14 + 1) ^ v30 ^ (11 * BYTE3(v30)) ^ 0x89;
  v31 = *v7;
  v32 = *v6 & v4;
  v33 = 1772489163 * ((*(_DWORD *)(*v7 + v32) ^ ((_DWORD)v21 + 8)) & 0x7FFFFFFF);
  v34 = 1772489163 * (v33 ^ HIWORD(v33));
  v21[8] = *(_BYTE *)(v12 + (v34 >> 24)) ^ *(_BYTE *)(v13 + (v34 >> 24)) ^ *(_BYTE *)((v34 >> 24) + v14 + 1) ^ v34 ^ (11 * BYTE3(v34)) ^ 0x48;
  LODWORD(v34) = 1772489163 * ((*(_DWORD *)(v31 + v32) ^ ((_DWORD)v21 + 9)) & 0x7FFFFFFF);
  v35 = 1772489163 * (v34 ^ WORD1(v34));
  v21[9] = *(_BYTE *)(v12 + (v35 >> 24)) ^ *(_BYTE *)(v13 + (v35 >> 24)) ^ *(_BYTE *)((v35 >> 24) + v14 + 1) ^ v35 ^ (11 * BYTE3(v35)) ^ 0x4D;
  LODWORD(v35) = 1772489163 * ((*(_DWORD *)(v31 + v32) ^ ((_DWORD)v21 + 10)) & 0x7FFFFFFF);
  v36 = 1772489163 * (v35 ^ WORD1(v35));
  v21[10] = *(_BYTE *)(v12 + (v36 >> 24)) ^ *(_BYTE *)(v13 + (v36 >> 24)) ^ *(_BYTE *)((v36 >> 24) + v14 + 1) ^ v36 ^ (11 * BYTE3(v36)) ^ 0xF2;
  LODWORD(v36) = 1772489163 * ((*(_DWORD *)(v31 + v32) ^ ((_DWORD)v21 + 11)) & 0x7FFFFFFF);
  v37 = 1772489163 * (v36 ^ WORD1(v36));
  v21[11] = *(_BYTE *)(v12 + (v37 >> 24)) ^ *(_BYTE *)(v13 + (v37 >> 24)) ^ *(_BYTE *)((v37 >> 24) + v14 + 1) ^ v37 ^ (11 * BYTE3(v37)) ^ 0x58;
  v38 = (_BYTE *)STACK[0x9B10];
  v39 = *v7;
  v40 = *v6 & v4;
  LODWORD(v20) = 1772489163 * ((*(_DWORD *)(*v7 + v40) ^ (STACK[0x9B10] + 12)) & 0x7FFFFFFF);
  v41 = 1772489163 * (v20 ^ (v20 >> 16));
  v38[12] = *(_BYTE *)(v12 + (v41 >> 24)) ^ *(_BYTE *)(v13 + (v41 >> 24)) ^ *(_BYTE *)((v41 >> 24) + v14 + 1) ^ v41 ^ (11 * BYTE3(v41)) ^ 0xF1;
  LODWORD(v41) = 1772489163 * ((*(_DWORD *)(v39 + v40) ^ ((_DWORD)v38 + 13)) & 0x7FFFFFFF);
  v42 = 1772489163 * (v41 ^ WORD1(v41));
  v43 = STACK[0x4508];
  v44 = STACK[0x4518];
  v45 = STACK[0x4510];
  v38[13] = *(_BYTE *)(STACK[0x4508] + (v42 >> 24)) ^ *(_BYTE *)((v42 >> 24) + STACK[0x4518] + 2) ^ *(_BYTE *)(STACK[0x4510] + (v42 >> 24)) ^ v42 ^ (-37 * BYTE3(v42)) ^ 0x82;
  LODWORD(v42) = 1772489163 * ((*(_DWORD *)(v39 + v40) ^ ((_DWORD)v38 + 14)) & 0x7FFFFFFF);
  v46 = 1772489163 * (v42 ^ WORD1(v42));
  LOBYTE(v25) = *(_BYTE *)(v43 + (v46 >> 24));
  STACK[0xBA00] = v0;
  v38[14] = v25 ^ *(_BYTE *)((v46 >> 24) + v44 + 2) ^ *(_BYTE *)(v45 + (v46 >> 24)) ^ v46 ^ (-37 * BYTE3(v46)) ^ 0xA9;
  v47 = 1772489163 * ((*(_DWORD *)(v39 + v40) ^ ((_DWORD)v38 + 15)) & 0x7FFFFFFF);
  v48 = 1772489163 * (v47 ^ HIWORD(v47));
  v38[15] = *(_BYTE *)(v43 + (v48 >> 24)) ^ *(_BYTE *)((v48 >> 24) + v44 + 2) ^ *(_BYTE *)(v45 + (v48 >> 24)) ^ v48 ^ (-37 * BYTE3(v48)) ^ 0xCF;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v1 + 5395)))();
}

uint64_t sub_100BAE54C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((2 * (LODWORD(STACK[0x293C]) > 0x1278B347)) | (8
                                                                                             * (LODWORD(STACK[0x293C]) > 0x1278B347)) | (STACK[0x6508] + 3834)))
                            - 4))();
}

uint64_t sub_100BAE590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  v8 = STACK[0x6508] - 1976;
  LODWORD(STACK[0xE10C]) = v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26804 * (v7 == (v8 ^ 0x8D2D9CD9))) ^ v8)) - 8))(a1, a2, a3, a4, a5, a6, a7, 2491241021);
}

uint64_t sub_100BAE5E8@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((27126 * (LODWORD(STACK[0xCDB4]) - 1074809358 < (a1 ^ 0x73u) - 2257)) ^ a1))
                            - 8))();
}

uint64_t sub_100BAE63C()
{
  int v0;
  int v1;

  STACK[0xD608] = *(_QWORD *)STACK[0x6FA8] + (*(_DWORD *)STACK[0xCB80] - v1 - 855881568);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 11539 + 172 * (v0 ^ 0x892))) - 4))();
}

uint64_t sub_100BAE6BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v0 = *(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x198977A8)) & 0x7FFFFFFFFFFFFFFFLL;
  v1 = v0 ^ 0x504A15351C27B864;
  v2 = v0 ^ 0xAFB5EACAE3D8479BLL;
  v3 = 0x7E9AEC231C73A369 * (STACK[0x7D30] + 0x248979BB07D2E888 + (v0 ^ 0xAFB5EACAE3D8479BLL));
  v4 = (v3 ^ 0x3BD3288807A323B1) & (2 * (v3 & 0x83D328AC47CBABA1)) ^ v3 & 0x83D328AC47CBABA1;
  v5 = ((2 * (v3 ^ 0x387339C084B077B1)) ^ 0x774022D986F7B820) & (v3 ^ 0x387339C084B077B1) ^ (2
                                                                                                 * (v3 ^ 0x387339C084B077B1)) & 0xBBA0116CC37BDC10;
  v6 = v5 ^ 0x88A0112441084410;
  v7 = (v5 ^ 0x1300004002739800) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0xEE8045B30DEF7040) & v6 ^ (4 * v6) & 0xBBA0116CC37BDC10;
  v9 = (v8 ^ 0xAA800120016B5000) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x1120104CC2108C10)) ^ 0xBA0116CC37BDC100) & (v8 ^ 0x1120104CC2108C10) ^ (16 * (v8 ^ 0x1120104CC2108C10)) & 0xBBA0116CC37BDC10;
  v11 = (v10 ^ 0xBA00104C0339C000) & (v9 << 8) ^ v9;
  v12 = (((v10 ^ 0x1A00120C0421C10) << 8) ^ 0xA0116CC37BDC1000) & (v10 ^ 0x1A00120C0421C10) ^ ((v10 ^ 0x1A00120C0421C10) << 8) & 0xBBA0116CC37BDC00;
  v13 = v11 ^ 0xBBA0116CC37BDC10 ^ (v12 ^ 0xA000004043580000) & (v11 << 16);
  v14 = (v13 << 32) & 0x3BA0116C00000000 ^ v13 ^ ((v13 << 32) ^ 0x437BDC1000000000) & (((v12 ^ 0x1BA0112C8023CC10) << 16) & 0x3BA0116C00000000 ^ 0x2A80100400000000 ^ (((v12 ^ 0x1BA0112C8023CC10) << 16) ^ 0x116CC37B00000000) & (v12 ^ 0x1BA0112C8023CC10));
  v15 = 0x7E9AEC231C73A369 * (v2 + v1) + 0x9CB1C0EC1A13A75;
  v16 = (v15 ^ 0x50AFC5405AC06EFALL) & (2 * (v15 & 0x84CFD0145AD268F3)) ^ v15 & 0x84CFD0145AD268F3;
  v17 = ((2 * (v15 ^ 0x58324548DF647FDALL)) ^ 0xB9FB2AB90B6C2E52) & (v15 ^ 0x58324548DF647FDALL) ^ (2 * (v15 ^ 0x58324548DF647FDALL)) & 0xDCFD955C85B61728;
  v18 = v17 ^ 0x4404954484921129;
  v19 = (v17 ^ 0x1079001001000600) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0x73F6557216D85CA4) & v18 ^ (4 * v18) & 0xDCFD955C85B61728;
  v21 = (v20 ^ 0x50F4155004901420) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x8C09800C81260309)) ^ 0xCFD955C85B617290) & (v20 ^ 0x8C09800C81260309) ^ (16 * (v20 ^ 0x8C09800C81260309)) & 0xDCFD955C85B61720;
  v23 = (v22 ^ 0xCCD9154801201200) & (v21 << 8) ^ v21;
  v24 = (((v22 ^ 0x1024801484960529) << 8) ^ 0xFD955C85B6172900) & (v22 ^ 0x1024801484960529) ^ ((v22 ^ 0x1024801484960529) << 8) & 0xDCFD955C85B61700;
  v25 = v23 ^ 0xDCFD955C85B61729 ^ (v24 ^ 0xDC95140484160000) & (v23 << 16);
  v26 = v15 ^ (2
             * ((v25 << 32) & 0x5CFD955C00000000 ^ v25 ^ ((v25 << 32) ^ 0x5B6172900000000) & (((v24 ^ 0x68815801A01629) << 16) & 0x5CFD955C00000000 ^ 0x48A1104800000000 ^ (((v24 ^ 0x68815801A01629) << 16) ^ 0x155C85B600000000) & (v24 ^ 0x68815801A01629))));
  v27 = (v26 ^ 0x345CD0BD51BE46A1) & (v3 ^ (2 * v14) ^ 0x269FF7AC4458A1A5) ^ v26 & 0xD44CDDD98564B224;
  v28 = (v27 & 0x24DD410FB77CA501 ^ 0x24950006373C0501)
      + (v27 ^ 0x904849098040A204)
      - ((v27 ^ 0x904849098040A204) & 0x24DD410FB77CA501);
  STACK[0x7D30] = 0xB384FB7BCBD2A985
                * (0x1028507B9BCE74DLL * v1
                 + 0x66FE3E8B61B37C45
                 * (((v28 ^ 0xC6ED03882654342DLL) + 0x491AF1A9BA07DFE7) ^ ((v28 ^ 0xF60DC2F1FAFC6232)
                                                                           + 0x79FA30D066AF89FALL) ^ ((v28 ^ 0x903919E6EAB0533ALL) + 0x1FCEEBC776E3B8F2)))
                + 0x75B9A9F7BF935369;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2187) ^ 0x247C)))(2026);
}

uint64_t sub_100BAEF84@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t (*v9)(void);
  _BYTE *v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v9 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) + v3);
  v10 = (_BYTE *)(a2 - 0x12B14CA2252097BLL + v5);
  v11 = ((*(_DWORD *)(*v7 + (*v8 & v6)) ^ v10) & 0x7FFFFFFF) * a1;
  v12 = (v11 ^ HIWORD(v11)) * a1;
  v13 = STACK[0x5608];
  v14 = STACK[0x5600];
  v15 = STACK[0x5610];
  *v10 = HIBYTE(v2) ^ *(_BYTE *)(STACK[0x5608] + (v12 >> 24)) ^ *(_BYTE *)(STACK[0x5600] + (v12 >> 24)) ^ *(_BYTE *)(STACK[0x5610] + (v12 >> 24)) ^ v12 ^ (29 * BYTE3(v12)) ^ 0xB7;
  v16 = ((*(_DWORD *)(*v7 + (*v8 & v6)) ^ ((_DWORD)v10 + 1)) & 0x7FFFFFFF) * a1;
  v17 = (v16 ^ HIWORD(v16)) * a1;
  v10[1] = BYTE6(v2) ^ *(_BYTE *)(v13 + (v17 >> 24)) ^ *(_BYTE *)(v14 + (v17 >> 24)) ^ *(_BYTE *)(v15 + (v17 >> 24)) ^ v17 ^ (29 * BYTE3(v17)) ^ 0xAA;
  LODWORD(v12) = ((*(_DWORD *)(*v7 + (*v8 & v6)) ^ ((_DWORD)v10 + 2)) & 0x7FFFFFFF) * a1;
  v18 = (v12 ^ WORD1(v12)) * a1;
  v10[2] = BYTE5(v2) ^ *(_BYTE *)(v13 + (v18 >> 24)) ^ *(_BYTE *)(v14 + (v18 >> 24)) ^ *(_BYTE *)(v15 + (v18 >> 24)) ^ v18 ^ (29 * BYTE3(v18)) ^ 0x7A;
  LODWORD(v17) = ((*(_DWORD *)(*v7 + (*v8 & v6)) ^ ((_DWORD)v10 + 3)) & 0x7FFFFFFF) * a1;
  v19 = (v17 ^ WORD1(v17)) * a1;
  v10[3] = BYTE4(v2) ^ *(_BYTE *)(v13 + (v19 >> 24)) ^ *(_BYTE *)(v14 + (v19 >> 24)) ^ *(_BYTE *)(v15 + (v19 >> 24)) ^ v19 ^ (29 * BYTE3(v19)) ^ 0xAC;
  LODWORD(v18) = ((*(_DWORD *)(*v7 + (*v8 & v6)) ^ ((_DWORD)v10 + 4)) & 0x7FFFFFFF) * a1;
  v20 = (v18 ^ WORD1(v18)) * a1;
  v10[4] = BYTE3(v2) ^ *(_BYTE *)(v13 + (v20 >> 24)) ^ *(_BYTE *)(v14 + (v20 >> 24)) ^ *(_BYTE *)(v15 + (v20 >> 24)) ^ v20 ^ (29 * BYTE3(v20)) ^ 0x52;
  LODWORD(v19) = ((*(_DWORD *)(*v7 + (*v8 & v6)) ^ ((_DWORD)v10 + 5)) & 0x7FFFFFFF) * a1;
  v21 = (v19 ^ WORD1(v19)) * a1;
  v10[5] = BYTE2(v2) ^ *(_BYTE *)(v13 + (v21 >> 24)) ^ *(_BYTE *)(v14 + (v21 >> 24)) ^ *(_BYTE *)(v15 + (v21 >> 24)) ^ v21 ^ (29 * BYTE3(v21)) ^ 0x5C;
  LODWORD(v21) = ((*(_DWORD *)(*v7 + (*v8 & v6)) ^ ((_DWORD)v10 + 6)) & 0x7FFFFFFF) * a1;
  v22 = (v21 ^ WORD1(v21)) * a1;
  v10[6] = ((BYTE1(v2) ^ 0x31) - ((2 * BYTE1(v2)) & 4) - 126) ^ *(_BYTE *)(v13 + (v22 >> 24)) ^ *(_BYTE *)(v14 + (v22 >> 24)) ^ *(_BYTE *)(v15 + (v22 >> 24)) ^ v22 ^ (29 * BYTE3(v22)) ^ 0x82;
  LODWORD(v20) = ((*(_DWORD *)(*v7 + (*v8 & v6)) ^ ((_DWORD)v10 + 7)) & 0x7FFFFFFF) * a1;
  v23 = (v20 ^ WORD1(v20)) * a1;
  v10[7] = v2 ^ *(_BYTE *)(v13 + (v23 >> 24)) ^ *(_BYTE *)(v14 + (v23 >> 24)) ^ *(_BYTE *)(v15 + (v23 >> 24)) ^ v23 ^ (29 * BYTE3(v23)) ^ 0x4F;
  return v9();
}

uint64_t sub_100BAF2C8()
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8 * (int)((STACK[0x6508] - 2010) ^ 0x1312))
                                                   - 4))(STACK[0xB9D8]);
}

uint64_t sub_100BAF348()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 - 12126) + 4210))();
}

uint64_t sub_100BAF36C(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 10990))
                                                   - 12))(a1, 67);
}

uint64_t sub_100BAF398()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 3844)) - 4))();
}

uint64_t sub_100BAF3BC()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v1 = 6 * (STACK[0x6508] ^ 0x1123);
  v2 = STACK[0x6508] - 3873;
  LODWORD(STACK[0xBF04]) = v0;
  v3 = STACK[0x6AD8];
  STACK[0x85F8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ 0x1512 ^ (15588 * (v2 == 705550817)))) - v1 + 2042))();
}

uint64_t sub_100BAF440()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((LODWORD(STACK[0xBF04]) == -1926392729) ^ LODWORD(STACK[0x34F0])) & 1)
                                          * v0) ^ LODWORD(STACK[0x3180])))
                            - 12))();
}

uint64_t sub_100BAF48C()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((*(_QWORD *)STACK[0x6FA8] != 0) * ((LODWORD(STACK[0x34F0]) - 15166) ^ 0x77C)) ^ LODWORD(STACK[0x34F0]))))();
}

uint64_t sub_100BAF4D4()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x34F0])))();
}

uint64_t sub_100BAF510()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 11850)) - (v0 ^ 0x5DDEu) + 23205))();
}

uint64_t sub_100BAF540@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  STACK[0xB528] = v1;
  STACK[0x7EF8] = a1;
  LODWORD(STACK[0x9684]) = v2;
  LODWORD(STACK[0xB42C]) = v2 + ((2 * (v3 ^ 0x5292)) ^ 0x1072);
  v5 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v2 + ((445 * (v3 ^ 0x5AAB)) ^ 0x8CEBFDE0));
  STACK[0xAE20] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v5 != 0) * v4) ^ v3)) - 4))();
}

uint64_t sub_100BAF5E0(uint64_t a1)
{
  __int16 v1;
  int v2;
  unint64_t v3;

  *(_WORD *)a1 = 256;
  *(_BYTE *)(a1 + 2) = ((unsigned __int16)(v1 + 16955 + (~((v1 << ((v2 ^ 0xC8) + 79)) - 724) | 0x78B7)) >> 8) ^ 0x43;
  *(_BYTE *)(a1 + 3) = (v1 + 59 + (~(((_BYTE)v1 << ((v2 ^ 0xC8) + 79)) + 44) | 0xB7)) ^ 0xA4;
  STACK[0xA0E8] = 0;
  v3 = STACK[0x6AD8];
  STACK[0xB6C8] = a1 + 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ 0x3390)) - 12))();
}

uint64_t sub_100BAF66C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((158 * (STACK[0x7310] != 0)) ^ (v0 + 11778))) - 8))();
}

uint64_t sub_100BAF69C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100BAF6B8()
{
  STACK[0xC768] -= 32;
  return ((uint64_t (*)(void))STACK[0xA440])();
}

uint64_t sub_100BAF6E8()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 2230;
  v1 = STACK[0x6AD8];
  STACK[0xC310] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + LODWORD(STACK[0x2B28]) - 4081)) - 8))();
}

uint64_t sub_100BAF748()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xCBD0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 3663)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 + 1187) ^ (v0 - 3663))) - 8))();
}

uint64_t sub_100BAF798(uint64_t a1)
{
  unint64_t v1;

  v1 = STACK[0x6508];
  STACK[0xD1A8] += STACK[0x6508] ^ 0x1066;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v1 + 530)) - 4))(a1, 1772493245, 1772489163, 4294962660, 4114, 4294967243, STACK[0x45E8]);
}

uint64_t sub_100BAF844(uint64_t a1, int a2, int a3, int a4, int a5, char a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  v13 = (((v8 + v9) ^ *(_DWORD *)(v10 + v11)) & 0x7FFFFFFF) * (((v7 + a4) | a5) ^ a2);
  *(_BYTE *)(v12 + v9) = *(_BYTE *)(a7 + (v9 | (16 * (((v13 ^ HIWORD(v13)) * a3) >> 24)))) ^ *(_BYTE *)(v8 + v9) ^ ((v13 ^ BYTE2(v13)) * a6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ (8 * (v9 != 15)))) - 4))();
}

uint64_t sub_100BAF8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * (v6 + 1631)))(a1, 1463807981, a3, 2147476573, 3192319592, a6, 59, 0xCF7CE28C1CBA5E3ELL);
}

uint64_t sub_100BAF90C(uint64_t a1, uint64_t a2, int a3, int a4, int a5, char a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _DWORD *v14;
  unsigned int v15;

  v15 = ((*(_DWORD *)(*v12 + (*v14 & a5)) ^ (v7 + v11)) & ((v8 + 1438) ^ (a4 + 1422))) * a3;
  *(_BYTE *)(v9 + v11) = *(_BYTE *)(v13 + (v11 | (16 * (((v15 ^ HIWORD(v15)) * a3) >> 24)))) ^ *(_BYTE *)(v7 + v11) ^ ((v15 ^ BYTE2(v15)) * a6);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v11 == 15) * a7) ^ v10)))();
}

uint64_t sub_100BAF980@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  unint64_t v3;

  STACK[0xD628] = v1;
  STACK[0xD610] = v3;
  STACK[0xD638] = a1 - 0x6B2A75BCFF6C03A9;
  STACK[0xD630] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((v2 ^ 0x387C) + 7579) ^ 0x424E) * (v1 != 0)) ^ v2))
                            - 8))();
}

uint64_t sub_100BAFA00()
{
  int v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v5;

  STACK[0xD618] = 0;
  v1 = (uint64_t (*)(uint64_t))STACK[0x5A48];
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD618] = v2;
  v3 = v1(1028);
  STACK[0xD620] = v3;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  v5 = !v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((195 * v5) ^ v0)) - ((v0 - 7256) | 0x404u) + 5640))();
}

uint64_t sub_100BAFA80()
{
  unsigned __int8 *v0;
  int v1;
  char *v2;
  int v3;
  char *v4;
  unsigned __int8 v5;
  unsigned int v6;
  char *v7;
  unsigned __int8 v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  unsigned __int8 v14;
  uint64_t v15;
  unsigned __int8 v16;
  int v17;
  char v18;
  unsigned __int8 *v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  unsigned int v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  char *v33;
  int v34;
  unint64_t v35;
  char *v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  char *v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned __int8 v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  char v108;
  unint64_t v109;
  int v110;
  int v111;
  unint64_t v112;
  unsigned int v113;
  uint64_t v114;
  int v115;
  int v116;
  int v117;
  uint64_t v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  unint64_t v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  unsigned int v356;
  int v357;
  unint64_t v358;
  int v359;
  int v360;
  int v361;
  int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  unsigned int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  BOOL v390;
  int v391;
  int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  int v427;
  unsigned int v428;
  int v429;
  int v430;
  unsigned int v431;
  int v432;
  unsigned int v433;
  int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  int v451;
  unsigned int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  unsigned int v459;
  int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  int v465;
  BOOL v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  unsigned int v482;
  int v483;
  unint64_t v484;
  unint64_t v485;
  unint64_t v486;
  unint64_t v487;
  uint64_t v488;
  uint64_t v489;
  unsigned int v490;
  unsigned int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  unsigned int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  unsigned int v513;
  unsigned int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unint64_t v522;
  uint64_t v523;
  unint64_t v524;
  unint64_t v525;
  unint64_t v526;
  unint64_t v527;
  uint64_t v528;
  unint64_t v529;
  unint64_t v530;
  unint64_t v531;
  uint64_t v532;
  unint64_t v533;
  uint64_t v534;
  unint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  unint64_t v539;
  uint64_t v540;
  unint64_t v541;
  unint64_t v542;
  uint64_t v543;
  unint64_t v544;
  unint64_t v545;
  unint64_t v546;
  unint64_t v547;
  unint64_t v548;
  unint64_t v549;
  unint64_t v550;
  unint64_t v551;
  unint64_t v552;
  unint64_t v553;
  uint64_t v554;
  unint64_t v555;
  uint64_t v556;
  unint64_t v557;
  uint64_t v558;
  unint64_t v559;
  uint64_t v560;
  unint64_t v561;
  unint64_t v562;
  uint64_t v563;
  unint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  unint64_t v568;
  uint64_t v569;
  unint64_t v570;
  uint64_t v571;
  uint64_t v572;
  unint64_t v573;
  unint64_t v574;
  unint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  unint64_t v579;
  uint64_t v580;
  unint64_t v581;
  uint64_t v582;
  unint64_t v583;
  unint64_t v584;
  unint64_t v585;
  unint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  unint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  unint64_t v594;
  unint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  unint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  unint64_t v603;
  uint64_t v604;
  unint64_t v605;
  unint64_t v606;
  unint64_t v607;
  unint64_t v608;
  uint64_t v609;
  unint64_t v610;
  uint64_t v611;
  unint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  unint64_t v617;
  unint64_t v618;
  unint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  unint64_t v625;
  uint64_t v626;
  unint64_t v627;
  unint64_t v628;
  uint64_t v629;
  unint64_t v630;
  unint64_t v631;
  unint64_t v632;
  uint64_t v633;
  unint64_t v634;
  uint64_t v635;
  unint64_t v636;
  unint64_t v637;
  unint64_t v638;
  unint64_t v639;
  unint64_t v640;
  unint64_t v641;
  uint64_t v642;
  unint64_t v643;
  unint64_t v644;
  unint64_t v645;
  unint64_t v646;
  unint64_t v647;
  unint64_t v648;
  unint64_t v649;
  unint64_t v650;
  int v651;
  int v652;
  unsigned int v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  unsigned int v661;
  int v662;
  int v663;
  unsigned int v664;
  unsigned int v665;
  int v666;
  int v667;
  int v668;
  int v669;
  unsigned int v670;
  unsigned int v671;
  unsigned int v672;
  unsigned int v673;
  int v674;
  unsigned int v675;
  unsigned int v676;
  unsigned int v677;
  int v678;
  unsigned int v679;
  unsigned int v680;
  int v681;
  unsigned int v682;
  unsigned int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  int v687;
  int v688;
  int v689;
  unsigned int v690;
  uint64_t v691;
  uint64_t v692;
  unint64_t v693;
  unint64_t v694;
  uint64_t v695;
  int v696;
  unsigned int v697;
  unsigned int v698;
  unint64_t v699;
  uint64_t v700;
  unint64_t v701;
  unint64_t v702;
  unint64_t v703;
  unint64_t v704;
  unint64_t v705;
  uint64_t v706;
  unint64_t v707;
  unint64_t v708;
  uint64_t v709;
  unint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  unint64_t v714;
  uint64_t v715;
  unint64_t v716;
  unint64_t v717;
  uint64_t v718;
  unint64_t v719;
  uint64_t v720;
  unint64_t v721;
  unint64_t v722;
  unint64_t v723;
  unint64_t v724;
  unint64_t v725;
  unint64_t v726;
  unint64_t v727;
  unint64_t v728;
  unint64_t v729;
  unint64_t v730;
  unint64_t v731;
  unint64_t v732;
  uint64_t v733;
  unint64_t v734;
  uint64_t v735;
  unint64_t v736;
  unint64_t v737;
  unint64_t v738;
  unint64_t v739;
  unint64_t v740;
  unint64_t v741;
  unint64_t v742;
  unint64_t v743;
  unint64_t v744;
  unint64_t v745;
  unint64_t v746;
  unint64_t v747;
  unint64_t v748;
  unint64_t v749;
  unint64_t v750;
  unint64_t v751;
  unint64_t v752;
  uint64_t v753;
  unint64_t v754;
  uint64_t v755;
  unint64_t v756;
  uint64_t v757;
  unint64_t v758;
  unint64_t v759;
  unint64_t v760;
  unint64_t v761;
  unint64_t v762;
  unint64_t v763;
  uint64_t v764;
  unint64_t v765;
  uint64_t v766;
  unint64_t v767;
  unint64_t v768;
  unint64_t v769;
  unint64_t v770;
  unint64_t v771;
  unint64_t v772;
  unint64_t v773;
  unint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  unint64_t v778;
  uint64_t v779;
  unint64_t v780;
  uint64_t v781;
  unint64_t v782;
  unint64_t v783;
  unint64_t v784;
  unint64_t v785;
  unint64_t v786;
  unint64_t v787;
  uint64_t v788;
  unint64_t v789;
  unint64_t v790;
  unint64_t v791;
  unint64_t v792;
  unint64_t v793;
  unint64_t v794;
  unint64_t v795;
  unint64_t v796;
  uint64_t v797;
  unint64_t v798;
  unint64_t v799;
  unint64_t v800;
  unint64_t v801;
  unint64_t v802;
  unint64_t v803;
  unint64_t v804;
  unint64_t v805;
  uint64_t v806;
  unint64_t v807;
  uint64_t v808;
  unint64_t v809;
  uint64_t v810;
  unint64_t v811;
  unint64_t v812;
  unint64_t v813;
  unint64_t v814;
  unint64_t v815;
  unint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  unint64_t v822;
  uint64_t v823;
  unint64_t v824;
  uint64_t v825;
  unint64_t v826;
  unint64_t v827;
  unint64_t v828;
  int v829;
  unsigned int v830;
  unsigned int v831;
  int v832;
  int v833;
  int v834;
  int v835;
  int v836;
  int v837;
  int v838;
  int v839;
  int v840;
  unsigned int v841;
  unsigned int v842;
  unsigned int v843;
  int v844;
  int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  int v850;
  int v851;
  int v852;
  unsigned int v853;
  unsigned int v854;
  unsigned int v855;
  int v856;
  int v857;
  int v858;
  int v859;
  int v860;
  int v861;
  int v862;
  BOOL v863;
  int v864;
  int v865;
  int v866;
  int v867;
  unsigned int v868;
  unsigned int v869;
  int v870;
  int v871;
  int v872;
  int v873;
  unsigned int v874;
  int v875;
  unsigned int v876;
  int v877;
  int v878;
  unsigned int v879;
  unsigned int v880;
  int v881;
  unsigned int v882;
  unsigned int v883;
  unsigned int v884;
  unsigned int v885;
  unsigned int v886;
  int v887;
  unsigned int v888;
  int v889;
  int v890;
  unsigned int v891;
  int v892;
  int v893;
  int v894;
  unsigned int v895;
  int v896;
  unsigned int v897;
  int v898;
  unsigned int v899;
  unsigned int v900;
  int v901;
  int v902;
  int v903;
  int v904;
  int v905;
  int v906;
  int v907;
  int v908;
  int v909;
  int v910;
  int v911;
  int v912;
  int v913;
  unsigned int v914;
  int v915;
  int v916;
  unsigned int v917;
  int v918;
  unsigned int v919;
  int v920;
  int v921;
  int v922;
  unsigned int v923;
  int v924;
  int v925;
  int v926;
  int v927;
  unsigned int v928;
  int v929;
  int v930;
  int v931;
  int v932;
  unsigned int v933;
  int v934;
  unsigned int v935;
  unsigned int v936;
  unsigned int v937;
  int v938;
  int v939;
  int v940;
  int v941;
  int v942;
  int v943;
  int v944;
  int v945;
  int v946;
  int v947;
  int v948;
  int v949;
  int v950;
  int v951;
  int v952;
  int v953;
  int v954;
  unint64_t v955;
  unint64_t v956;
  unint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  unint64_t v963;
  uint64_t v964;
  unint64_t v965;
  unint64_t v966;
  unint64_t v967;
  unint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  unint64_t v972;
  uint64_t v973;
  unint64_t v974;
  uint64_t v975;
  unint64_t v976;
  unint64_t v977;
  unint64_t v978;
  unint64_t v979;
  uint64_t v980;
  unint64_t v981;
  unint64_t v982;
  unint64_t v983;
  uint64_t v984;
  unint64_t v985;
  unint64_t v986;
  unint64_t v987;
  unint64_t v988;
  unint64_t v989;
  unint64_t v990;
  uint64_t v991;
  unint64_t v992;
  uint64_t v993;
  unint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  unint64_t v999;
  unint64_t v1000;
  unint64_t v1001;
  unint64_t v1002;
  unint64_t v1003;
  unint64_t v1004;
  uint64_t v1005;
  unint64_t v1006;
  uint64_t v1007;
  unint64_t v1008;
  uint64_t v1009;
  unint64_t v1010;
  uint64_t v1011;
  unint64_t v1012;
  unint64_t v1013;
  uint64_t v1014;
  unint64_t v1015;
  unint64_t v1016;
  unint64_t v1017;
  unint64_t v1018;
  unint64_t v1019;
  uint64_t v1020;
  unint64_t v1021;
  unint64_t v1022;
  unint64_t v1023;
  unint64_t v1024;
  unint64_t v1025;
  unint64_t v1026;
  unint64_t v1027;
  unint64_t v1028;
  unint64_t v1029;
  unint64_t v1030;
  unint64_t v1031;
  int v1032;
  int v1033;
  int v1034;
  uint64_t v1035;
  int v1036;
  unint64_t v1037;
  unint64_t v1038;
  int v1039;
  unint64_t v1040;
  int v1041;
  unsigned int v1042;
  int v1043;
  int v1044;
  int v1045;
  int v1046;
  int v1047;
  int v1048;
  int v1049;
  int v1050;
  int v1051;
  int v1052;
  int v1053;
  unsigned int v1054;
  BOOL v1055;
  unint64_t v1056;
  int v1057;
  int v1058;
  int v1059;
  int v1060;
  unsigned int v1061;
  unsigned int v1062;
  int v1063;
  int v1064;
  int v1065;
  unsigned int v1066;
  int v1067;
  unsigned int v1068;
  unsigned int v1069;
  char v1070;
  char v1071;
  int v1072;
  unsigned int v1073;
  int v1074;
  int v1075;
  int v1076;
  int v1077;
  int v1078;
  unsigned int v1079;
  unsigned int v1080;
  int v1081;
  uint64_t (*v1082)(uint64_t);

  v2 = (char *)*(&off_1015B46D0 + ((v1 - 1150) ^ 0x20F6)) - 12;
  v3 = v1 - 1150;
  v4 = (char *)*(&off_1015B46D0 + ((v1 - 1150) ^ 0x2A74)) - 8;
  v5 = (v0[15] ^ 0xF9) + (v0[15] ^ 0x60) + v2[v0[15] ^ 0xD3] + 2;
  v6 = (v0[12] ^ 0xFFFFFFAF) + v4[v0[12] ^ 0xF9] - 100;
  v7 = (char *)*(&off_1015B46D0 + ((v1 - 1150) ^ 0x2EFC)) - 8;
  v8 = (v7[v0[6] ^ 0x94] - 63) ^ 0xE3;
  v9 = v0[5] ^ 0x6ELL;
  v10 = (char *)*(&off_1015B46D0 + v1 - 11438) - 12;
  v11 = ((v0[7] ^ 0xD3) + v4[v0[7] ^ 0x85] - 100) ^ 0x22;
  LODWORD(STACK[0x6A10]) = v11;
  v12 = v11 | (v8 << 8);
  v13 = (((v10[v9] >> 3) | (32 * v10[v9])) ^ 0xE0) << 16;
  LOBYTE(v11) = v7[v0[13] ^ 0x34] - 63;
  v14 = v7[v0[11] ^ 0x58] - 63;
  v15 = *v0;
  v16 = (v0[14] ^ 0xDB) + v4[v0[14] ^ 0x8DLL] - 100;
  v17 = ((v11 ^ 0xED) << 16) | ((v16 ^ 0xB7) << 8) | v5 ^ 0x65 | ((v6 ^ 0xD8) << 24);
  LODWORD(STACK[0x6980]) = v17;
  v18 = (v0[1] ^ 0x33) + v4[v0[1] ^ 0x65];
  v19 = (unsigned __int8 *)STACK[0xD610];
  LODWORD(v15) = ((v15 ^ 0x3B) + (v15 ^ 0xA2) + v2[v15 ^ 0x88] + 2) ^ 0x88888888;
  v20 = *(unsigned __int8 *)(STACK[0xD610] + 4);
  STACK[0x6A40] = v20;
  v21 = (_DWORD)v15 << 24;
  LODWORD(v15) = (v7[v20 ^ 0x32] - 63) ^ 0x9E;
  v22 = v21 & 0xFF00FFFF | (((v18 - 100) ^ 0x55) << 16);
  v23 = v19[2];
  STACK[0x6A60] = v23;
  v24 = v2[v23 ^ 0xFB];
  LODWORD(v20) = v13 | ((_DWORD)v15 << 24) | v12;
  LODWORD(STACK[0x69B0]) = v20;
  v25 = v19[8];
  v26 = v22 & 0xFFFF00FF | ((((v23 ^ 0x48) + (v23 ^ 0xD1) + v24 + 2) ^ 0xDB) << 8);
  STACK[0x6950] = v25;
  v27 = (v25 ^ 0x91) + v4[v25 ^ 0xC7];
  v28 = v19[9];
  STACK[0x68F0] = v28;
  LOBYTE(v23) = v2[v28 ^ 0xF];
  v29 = v19[3];
  STACK[0x6A20] = v29;
  LODWORD(v15) = v14 | (((v27 - 100) ^ 5) << 24) | (((v23 - 2 * ((v28 ^ 0x43) & (v28 ^ 0x5A)) + 103) ^ 0x91) << 16);
  v30 = v29 ^ 5;
  v31 = v19[10];
  STACK[0x67C0] = v31;
  v32 = v26 & 0xFFFFFF00 | ((v10[v30] >> 3) | (32 * v10[v30])) ^ 0x36;
  LODWORD(STACK[0x6890]) = v32;
  v33 = (char *)*(&off_1015B46D0 + v1 - 9564) - 12;
  LODWORD(v15) = v15 & 0xFFFF00FF | (((v7[v31 ^ 0x5B] - 63) ^ 0x16) << 8);
  LODWORD(STACK[0x6960]) = v15 ^ 7;
  v34 = *(_DWORD *)&v33[4 * (v6 ^ 0x7C)];
  HIDWORD(v35) = v34 ^ 0x8D;
  LODWORD(v35) = v34 ^ 0x93B15400;
  v36 = (char *)*(&off_1015B46D0 + (v3 & 0x3FFC413F)) - 12;
  v37 = *(_DWORD *)&v36[4 * (v11 ^ 0x7F)];
  LODWORD(v25) = v37 ^ 0x59312D22 ^ (v37 >> 4) & 0xD814F48;
  v38 = *(_DWORD *)&v36[4 * (v16 ^ 0x67)];
  LODWORD(STACK[0x6AC0]) = v3;
  v39 = (uint64_t)*(&off_1015B46D0 + (v3 ^ 0x287E));
  v40 = (v35 >> 8) ^ v32 ^ *(_DWORD *)(v39 + 4 * (v5 ^ 0xD1u)) ^ __ROR4__(v25, 16) ^ __ROR4__(v38 ^ 0x59312D22 ^ (v38 >> 4) & 0xD814F48, 24);
  v41 = v40 ^ v20;
  v42 = v40;
  LODWORD(STACK[0x68E0]) = v40;
  v43 = v40 ^ v20 ^ v15 ^ 7;
  LODWORD(STACK[0x6800]) = v43;
  v44 = v41;
  LODWORD(STACK[0x6840]) = v41;
  v45 = v43 ^ v17;
  LODWORD(STACK[0x69C0]) = v45;
  v46 = *(_DWORD *)(v39 + 4 * (((unsigned __int16)(v45 ^ 0x3E6) >> 8) ^ 0x78u)) ^ 0xFD19B3AF;
  v47 = *(_DWORD *)&v36[4 * (((v45 ^ 0xCC2803E6) >> 16) ^ 0xA1)];
  v48 = v45 ^ 0x7CDB3CC1;
  LODWORD(STACK[0x69A0]) = v45 ^ 0x7CDB3CC1;
  v49 = (char *)*(&off_1015B46D0 + v3 - 9409) - 12;
  v50 = *(_DWORD *)(v39 + 4 * (v45 ^ 0x86u)) ^ __ROR4__(v46, 24) ^ v42 ^ __ROR4__(v47 ^ 0x59312D22 ^ (v47 >> 4) & 0xD814F48, 16) ^ __ROR4__(*(_DWORD *)&v49[4 * (HIBYTE(v45) ^ 0xDF)] ^ 0x70012253, 8);
  LODWORD(STACK[0x6810]) = v50;
  v51 = v50 ^ v15 ^ v48;
  v52 = v50 ^ v15;
  LODWORD(STACK[0x6990]) = v50 ^ v15;
  LODWORD(v15) = *(_DWORD *)&v36[4 * (((v51 ^ 0xB0F33F20) >> 16) ^ 0xAF)];
  LODWORD(v25) = *(_DWORD *)&v36[4 * (((unsigned __int16)(v51 ^ 0x3F20) >> 8) ^ 0xE9)];
  v53 = *(_DWORD *)&v36[4 * (HIBYTE(v51) ^ 0xBE)];
  v54 = *(_DWORD *)(v39 + 4 * (v51 ^ 0xDBu)) ^ __ROR4__(v15 ^ 0x59312D22 ^ (v15 >> 4) & 0xD814F48, 16) ^ __ROR4__(v25 ^ 0x59312D22 ^ (v25 >> 4) & 0xD814F48, 24) ^ __ROR4__(v53 ^ 0x59312D22 ^ (v53 >> 4) & 0xD814F48, 8);
  LODWORD(STACK[0x6940]) = v52 ^ 0x723C00D6;
  v55 = v51 ^ 0xEC0E849C;
  LODWORD(STACK[0x6A80]) = v51 ^ 0xEC0E849C;
  v56 = v54 ^ v44;
  LODWORD(STACK[0x6820]) = v56;
  LODWORD(v15) = v56 ^ 0xE227BEE3 ^ v52 ^ 0x723C00D6;
  v56 ^= 0xE227BEE3;
  LODWORD(STACK[0x6930]) = v56;
  LODWORD(STACK[0x6AA0]) = v15;
  v57 = v15 ^ 0x42E88115;
  LODWORD(v15) = v15 ^ 0x42E88115 ^ v55;
  LODWORD(v30) = *(_DWORD *)&v33[4 * (BYTE3(v15) ^ 0x44)];
  HIDWORD(v35) = v30 ^ 0x8D;
  LODWORD(v35) = v30 ^ 0x93B15400;
  LODWORD(v30) = v35 >> 8;
  LODWORD(v25) = *(_DWORD *)&v36[4 * (BYTE1(v15) ^ 0xE4)];
  v58 = *(_DWORD *)&v33[4 * (BYTE2(v15) ^ 0x8B)];
  HIDWORD(v35) = v58 ^ 0x548D;
  LODWORD(v35) = v58 ^ 0x93B10000;
  v59 = v15 ^ 0xCC3B6F0;
  LODWORD(STACK[0x6910]) = v15 ^ 0xCC3B6F0;
  LODWORD(v15) = v30 ^ *(_DWORD *)&v49[4 * (v15 ^ 0x53)] ^ __ROR4__(v25 ^ 0x59312D22 ^ (v25 >> 4) & 0xD814F48, 24);
  v60 = v54 ^ v50;
  LODWORD(STACK[0x6A70]) = v60;
  v61 = v15 ^ v60 ^ (v35 >> 16);
  v62 = v61 ^ v56;
  LODWORD(STACK[0x67F0]) = v61;
  LODWORD(STACK[0x6920]) = v61 ^ v56 ^ 0x186F0EE0;
  v63 = v61 ^ v56 ^ 0x186F0EE0 ^ v57;
  v64 = v63 ^ v59;
  v65 = v63 ^ v59 ^ 0x6F9F1E09;
  LODWORD(v15) = *(_DWORD *)&v33[4 * (v65 ^ 0x48)];
  LODWORD(v30) = ((v15 ^ LODWORD(STACK[0x12C8])) + 572846702) ^ ((v15 ^ 0x3F5E1F71) - 1063133041) ^ ((v15 ^ 0xA5EEFA13) + 1511065069);
  LODWORD(v25) = *(_DWORD *)&v33[4 * (HIBYTE(v64) ^ 0x27)];
  HIDWORD(v35) = v25 ^ 0x8D;
  LODWORD(v35) = v25 ^ 0x93B15400;
  LODWORD(v25) = v35 >> 8;
  LODWORD(v15) = (((2 * ((2 * v15) & 0x213D8CDC ^ 0x20198088)) & 0x42321180)
                - ((2 * v15) & 0x213D8CDC ^ 0x20198088)
                + 375838238) ^ 0x3A6EC656;
  v66 = *(_DWORD *)&v33[4 * (BYTE2(v64) ^ 0xD7)];
  HIDWORD(v35) = v66 ^ 0x548D;
  LODWORD(v35) = v66 ^ 0x93B10000;
  v67 = v25 ^ __ROR4__(*(_DWORD *)&v49[4 * (BYTE1(v64) ^ 0xBD)] ^ 0x70012253, 24) ^ v61 ^ (v35 >> 16) ^ (v30 + 1477094476 + ((((2 * v15) & 0x28EF7638) - v15 - 343391008) ^ 0x1873AB1F) + 787);
  LODWORD(STACK[0x6830]) = v67;
  v68 = v62 ^ 0x6C54DAF2;
  v69 = v67 ^ 0x7F6E6FA5;
  v70 = v68 ^ v67 ^ 0x7F6E6FA5;
  LODWORD(STACK[0x6880]) = v63;
  v71 = v63 - ((2 * v63) & 0x2ECEF9D6) + 392658155;
  LODWORD(STACK[0x6850]) = v70 ^ v71;
  v72 = v70;
  LODWORD(STACK[0x69E0]) = v70;
  v73 = v70 ^ v71 ^ 0xCC3B6F0;
  LODWORD(STACK[0x69F0]) = v73;
  LODWORD(STACK[0x68C0]) = v65;
  v74 = v73 ^ v65;
  LODWORD(STACK[0x6A90]) = v74;
  LODWORD(v15) = *(_DWORD *)&v33[4 * (BYTE1(v74) ^ 0xE0)];
  HIDWORD(v35) = v15 ^ 0xB1548D;
  LODWORD(v35) = v15 ^ 0x93000000;
  v75 = (v35 >> 24) ^ __ROR4__(*(_DWORD *)(v39 + 4 * (HIBYTE(v74) ^ 0x24)) ^ 0xFD19B3AF, 8) ^ *(_DWORD *)&v49[4 * (v74 ^ 0x5A)] ^ __ROR4__(*(_DWORD *)(v39 + 4 * (BYTE2(v74) ^ 0x1Bu)) ^ 0xFD19B3AF, 16) ^ v69;
  LODWORD(STACK[0x6A00]) = v75;
  v76 = v75 - ((2 * v75) & 0x2ECEF9D6) + 392658155;
  LODWORD(v30) = v76 ^ v72 ^ v65;
  HIDWORD(v35) = *(_DWORD *)(v39 + 4 * (((v30 ^ 0xE5012253) >> 16) ^ 0x47u)) ^ 0xFD19B3AF;
  LODWORD(v35) = HIDWORD(v35);
  v77 = ((v35 >> 16) - ((2 * (v35 >> 16)) & 0x7092628C) + 944320838) ^ *(_DWORD *)&v33[4 * (v30 ^ 0x1B)];
  v78 = *(_DWORD *)&v36[4 * (BYTE3(v30) ^ 9)];
  HIDWORD(v35) = v78 ^ 0x59312D22 ^ (v78 >> 4) & 0xD814F48;
  LODWORD(v35) = HIDWORD(v35);
  v79 = v77 ^ __ROR4__(*(_DWORD *)(v39 + 4 * (((unsigned __int16)(v30 ^ 0x2253) >> 8) ^ 0x47u)) ^ 0xFD19B3AF, 24) ^ v75 ^ ((v35 >> 8) - ((2 * (v35 >> 8)) & 0xFE45B36C) + 2132990390);
  LODWORD(STACK[0x6A30]) = v79;
  v80 = v76 ^ v71;
  LODWORD(STACK[0x68D0]) = v80;
  v81 = v76 ^ v72 ^ 0x70012253 ^ v79;
  LODWORD(STACK[0x68A0]) = v81;
  v82 = v76 ^ v72 ^ 0x70012253;
  LODWORD(STACK[0x6970]) = v82;
  v83 = v81 ^ v80;
  LODWORD(STACK[0x67D0]) = v83;
  v83 ^= 0xA25D709E;
  LODWORD(STACK[0x68B0]) = 2 * v83;
  v84 = v83;
  LODWORD(STACK[0x6870]) = v83;
  LODWORD(STACK[0x69D0]) = v30 ^ 0x796CC871;
  v85 = (v83 + 577628422 - ((2 * v83) & 0x44DBD444) + 284) ^ v30 ^ 0x796CC871;
  v86 = *(_DWORD *)&v36[4
                      * (((unsigned __int16)((v83 - 5882 - ((2 * v83) & 0xD444) + 284) ^ v30 ^ 0xC871) >> 8) ^ 0x80)];
  HIDWORD(v35) = v86 ^ 0x59312D22 ^ (v86 >> 4) & 0xD814F48;
  LODWORD(v35) = HIDWORD(v35);
  v87 = ((v35 >> 24) - (LODWORD(STACK[0x12CC]) & (2 * (v35 >> 24))) - 1754065120) ^ *(_DWORD *)&v33[4 * (((v83 + 6 - ((2 * v83) & 0x44) + 28) ^ v30 ^ 0x71) ^ 0xA2)];
  LODWORD(v15) = *(_DWORD *)&v36[4 * (HIBYTE(v85) ^ 0x19)] ^ 0x4EF6D998;
  LODWORD(v15) = (v15 >> 4) & 0xD814F48 ^ v15;
  LODWORD(v30) = v15 ^ 0x1346B9B2;
  LODWORD(v15) = (v15 ^ 0x1346B9B2) >> (v15 & 8) >> (v15 & 8 ^ 8);
  LODWORD(v30) = (_DWORD)v30 << 24;
  v88 = v87 ^ (v15 + v30 - 2 * ((v15 + v30) & 0x5018FFD2 ^ v15 & 2) - 803668016);
  v89 = *(_DWORD *)&v36[4 * (BYTE2(v85) ^ 0x4A)];
  v90 = v89 ^ 0x691DD2E0;
  if (!(_DWORD)v30)
    v90 = -669715328;
  v91 = v88 ^ __ROR4__(v89 ^ ((v90 & (v89 ^ 0x4EF6D990u)) >> 4) ^ 0x5DB0602A, 16);
  v92 = v85 ^ 0x4B18D2EA;
  LODWORD(STACK[0x67E0]) = v85 ^ 0x4B18D2EA;
  LODWORD(STACK[0x6A50]) = v91 ^ v82;
  v93 = v91 ^ v82 ^ v84;
  LODWORD(STACK[0x6900]) = v93;
  v94 = v93 ^ v92;
  LODWORD(STACK[0x6860]) = v93 ^ v92;
  v95 = *(_DWORD *)&v33[4 * (((v93 ^ v92) >> 24) ^ 0xD9)];
  HIDWORD(v97) = v95 ^ 0x8D;
  LODWORD(v97) = v95 ^ 0x93B15400;
  v96 = v97 >> 8;
  v98 = v94 ^ 0x70861484;
  HIDWORD(v97) = *(_DWORD *)&v49[4 * (((v94 ^ 0x70861484u) >> 16) ^ 0xE7)] ^ 0x70012253;
  LODWORD(v97) = HIDWORD(v97);
  LODWORD(STACK[0x6AB0]) = (v97 >> 16) ^ __ROR4__(*(_DWORD *)(v39+ 4* (((unsigned __int16)(v94 ^ 0x1484) >> 8) ^ 0x3Du)) ^ 0xFD19B3AF, 24);
  LODWORD(STACK[0x6720]) = v94 ^ 0x70861484;
  v99 = *(_DWORD *)&v36[4 * (v94 ^ 0xC5)] ^ 0x4EF6D998;
  v100 = v96 ^ v99 ^ (v99 >> 4) & 0xD814F48;
  v101 = v10[v19[11] ^ 0x40];
  v102 = ((v101 >> 3) | (32 * v101)) | (((v7[STACK[0x67C0] ^ 0x8C] - 63) ^ 0x66) << 8);
  v103 = v7[v19[13] ^ 0xF9] - 63;
  v104 = (v19[12] ^ 0x35) + v4[v19[12] ^ 0x63] - 100;
  v105 = ((v103 ^ 0x46) << 16) | ((v104 ^ 0x26) << 24);
  v106 = (STACK[0x6A40] ^ 0x57) + v4[STACK[0x6A40] ^ 1];
  v107 = v102 | ((((STACK[0x6950] ^ 0x8F) + v4[STACK[0x6950] ^ 0xD9] - 100) ^ 0xFFFFFFF3) << 24);
  v108 = (STACK[0x6A20] ^ 0x7A) + (STACK[0x6A20] ^ 0xE3) + v2[STACK[0x6A20] ^ 0xC9];
  v109 = STACK[0x6A60] ^ 0x6B;
  STACK[0x6460] = (unint64_t)v10;
  LODWORD(v109) = (v108 + 2) ^ 0xBE | ((((v10[v109] >> 3) | (32 * v10[v109])) ^ 0x82) << 8);
  LOBYTE(v102) = (v19[15] ^ 0xA8) + (v19[15] ^ 0x31) + v2[v19[15] ^ 0x1BLL];
  v110 = (((v106 - 100) ^ 0x2A) << 24) | (((v7[v19[6] ^ 0xF4] - 63) ^ 0xB1) << 8) | ((((v19[5] ^ 0xE5) + v4[v19[5] ^ 0xB3] - 100) ^ 0x6A) << 16);
  v111 = (*v19 ^ 0x58) + v4[*v19 ^ 0xELL];
  LODWORD(v109) = v109 & 0xFF00FFFF | ((((v19[1] ^ 0xC) + (v19[1] ^ 0x95) + v2[v19[1] ^ 0x26] + 2) ^ 0x60) << 16);
  v112 = STACK[0x68F0];
  STACK[0x6470] = (unint64_t)v4;
  v113 = v107 & 0xFF00FFFF | ((((v112 ^ 0x5D) + v4[v112 ^ 0xB] - 100) ^ 0xE1) << 16);
  v114 = v19[14];
  STACK[0x6478] = (unint64_t)v2;
  LOBYTE(v102) = v102 + 2;
  LOBYTE(v114) = v2[v114 ^ 0xE3] - 2 * ((v114 ^ 0x36) & (v114 ^ 0x2F)) + 103;
  v115 = *(_DWORD *)&v33[4 * (v103 ^ 0xCE)];
  HIDWORD(v97) = v115 ^ 0x548D;
  LODWORD(v97) = v115 ^ 0x93B10000;
  v116 = v97 >> 16;
  v117 = v102 ^ 0xAC | ((v114 ^ 0x5E) << 8) | v105;
  v118 = v19[7] ^ 0xADLL;
  STACK[0x6468] = (unint64_t)v7;
  v119 = v110 & 0xFFFFFF00 | (v7[v118] - 63) ^ 2;
  LODWORD(v118) = *(_DWORD *)&v33[4 * (v114 ^ 0x94)];
  HIDWORD(v97) = v118 ^ 0xB1548D;
  LODWORD(v97) = v118 ^ 0x93000000;
  LODWORD(v114) = v116 ^ (v109 | (((v111 - 100) ^ 0xFFFFFF83) << 24)) ^ *(_DWORD *)&v49[4
                                                                                      * (v102 ^ 0xFC)] ^ (v97 >> 24) ^ __ROR4__(*(_DWORD *)(v39 + 4 * (v104 ^ 0x8Du)) ^ 0xFD19B3AF, 8);
  v120 = v114 ^ v119;
  v121 = v113 ^ 0x6F3F2F32 ^ v114 ^ v119;
  LODWORD(v118) = (v121 ^ -v121 ^ ((v117 ^ 0x9EFC8222) + (v117 ^ 0x61037DDD ^ v121) + 1)) + (v117 ^ 0x9EFC8222);
  LODWORD(v114) = *(_DWORD *)(v39
                            + 4
                            * (((v121 ^ -(char)v121 ^ ((v117 ^ 0x22) + (v117 ^ 0xDD ^ v121) + 1))
                                               + (v117 ^ 0x22)) ^ 0x47u)) ^ __ROR4__(*(_DWORD *)&v49[4 * (BYTE1(v118) ^ 0xA3)] ^ 0x70012253, 24) ^ v114 ^ __ROR4__(*(_DWORD *)(v39 + 4 * (BYTE3(v118) ^ 0x47)) ^ 0xFD19B3AF, 8) ^ __ROR4__(*(_DWORD *)&v49[4 * (BYTE2(v118) ^ 0xA3)] ^ 0x70012253, 16);
  v122 = v114 ^ 0xE0165CB9;
  LODWORD(v114) = v114 ^ 0xA6B50BBF;
  v123 = v114 ^ v120;
  LODWORD(v114) = ((v122 + v114 + 1) ^ 0xFFFFFFFE) + v114;
  v124 = v123 ^ v121;
  v125 = *(_DWORD *)&v33[4 * (((v124 ^ v118) >> 24) ^ 0xE0)];
  HIDWORD(v97) = v125 ^ 0x8D;
  LODWORD(v97) = v125 ^ 0x93B15400;
  v126 = v124 ^ v118 ^ 0xD66387E6;
  LODWORD(STACK[0x6770]) = v126;
  v127 = *(_DWORD *)&v33[4 * ((v124 ^ v118) ^ 0x8F)] ^ __ROR4__(*(_DWORD *)&v49[4 * (BYTE1(v126) ^ 0x15)] ^ 0x70012253, 24);
  v128 = v124 ^ v118 ^ 0xA89C31C7;
  LODWORD(STACK[0x6700]) = v128;
  LODWORD(v114) = v127 ^ __ROR4__(*(_DWORD *)&v49[4 * (BYTE2(v128) ^ 0xA3)] ^ 0x70012253, 16) ^ v114 ^ ((v97 >> 8) - ((2 * (v97 >> 8)) & 0x139E1082) - 1982920639);
  v129 = v114 ^ v123;
  LODWORD(v118) = v129 ^ 0xEDDE6DDA ^ v118;
  v130 = *(_DWORD *)&v36[4 * (BYTE1(v118) ^ 0xE4)];
  LODWORD(v109) = *(_DWORD *)&v36[4 * (v118 ^ 0xA2)] ^ 0x4EF6D998;
  v131 = v124 ^ v129 ^ 0xEDDE6DDA;
  LODWORD(v114) = v109 ^ __ROR4__(*(_DWORD *)(v39 + 4 * (BYTE3(v118) ^ 0x4B)) ^ 0xFD19B3AF, 8) ^ (v109 >> 4) & 0xD814F48 ^ __ROR4__(*(_DWORD *)(v39 + 4 * (BYTE2(v118) ^ 0x84u)) ^ 0xFD19B3AF, 16) ^ v114 ^ __ROR4__(v130 ^ 0x59312D22 ^ (v130 >> 4) & 0xD814F48, 24) ^ 0x2B232C52;
  v132 = v129 ^ 0xF1831D44 ^ v114;
  v133 = v131 ^ 0xA89C31C7 ^ v132;
  v134 = v133 ^ v118;
  v135 = *(_DWORD *)&v33[4 * (HIBYTE(v134) ^ 0xCE)];
  HIDWORD(v97) = v135 ^ 0x8D;
  LODWORD(v97) = v135 ^ 0x93B15400;
  v136 = v91 ^ LODWORD(STACK[0x6A30]);
  LODWORD(STACK[0x66E8]) = v136;
  v137 = LODWORD(STACK[0x6AB0]) ^ v100 ^ v136;
  LODWORD(STACK[0x6A60]) = v137;
  v138 = *(_DWORD *)&v36[4 * (v134 ^ 0xE0)] ^ 0x4EF6D998;
  LODWORD(v114) = (v97 >> 8) ^ __ROR4__(*(_DWORD *)&v49[4 * (((v134 ^ 0xDDF132BA) >> 16) ^ 0x14)] ^ 0x70012253, 16) ^ v138 ^ __ROR4__(__ROR4__(__ROR4__(*(_DWORD *)(v39+ 4* (((unsigned __int16)(v134 ^ 0x32BA) >> 8) ^ 0xCCu)), 21) ^ 0xC1EAB02D, 11) ^ 0xF8A18EF9, 24) ^ (v138 >> 4) & 0xD814F48 ^ v114;
  v139 = v114 ^ v132;
  v140 = v114;
  LODWORD(STACK[0x6760]) = v114;
  v141 = v133 & 0x80000;
  if ((v133 & 0x80000 & ~v139) != 0)
    v141 = -v141;
  v142 = v133 & 0xFFF7FFFF ^ 0x99C3B6F0 ^ (v141 + (v139 ^ 0x13D87FDC));
  v143 = v142 ^ v134;
  v144 = v142;
  LODWORD(STACK[0x6780]) = v142;
  v145 = v143 ^ 0x8646B9B2;
  LODWORD(STACK[0x6740]) = v143 ^ 0x8646B9B2;
  v146 = *(_DWORD *)&v36[4 * (((v143 ^ 0x8646B9B2) >> 16) ^ 0x14)];
  v147 = *(_DWORD *)&v49[4 * (v143 ^ 0xA3)] ^ __ROR4__(*(_DWORD *)(v39 + 4 * (HIBYTE(v143) ^ 0xD2)) ^ 0xFD19B3AF, 8) ^ __ROR4__(*(_DWORD *)(v39+ 4* (((unsigned __int16)(v143 ^ 0xB9B2) >> 8) ^ 0xFEu)) ^ 0xFD19B3AF, 24) ^ v140 ^ __ROR4__(v146 ^ 0x59312D22 ^ (v146 >> 4) & 0xD814F48, 16);
  v148 = v139 ^ 0x58F4A12D;
  LODWORD(STACK[0x6750]) = v148;
  v149 = v147 ^ v148;
  v150 = v147 ^ v148 ^ v144 ^ 0x4BA92B87;
  v151 = v145 ^ v150;
  v152 = v150;
  LODWORD(STACK[0x66F0]) = v150;
  v153 = *(_DWORD *)&v36[4 * (((unsigned __int16)(v145 ^ v150) >> 8) ^ 0x43)];
  v154 = (v153 >> 4) & 0xD814F08;
  v155 = (v153 >> 4) & 0x40;
  v390 = (v155 & v153) == 0;
  v156 = v153 ^ 0x5DB0602A;
  if (!v390)
    v155 = -v155;
  v157 = v154 ^ 0x4814D08 ^ (v155 + v156);
  v158 = *(_DWORD *)&v36[4 * (BYTE2(v151) ^ 0x48)];
  v159 = v151 ^ 0xCE1A114B;
  v160 = *(_DWORD *)(v39 + 4 * (HIBYTE(v151) ^ 0x89)) ^ 0xFD19B3AF;
  v161 = v159;
  LODWORD(STACK[0x6730]) = v159;
  v162 = *(_DWORD *)&v49[4 * (v159 ^ 0xA3)] ^ __ROR4__(v160, 8) ^ __ROR4__(v158 ^ 0x59312D22 ^ (v158 >> 4) & 0xD814F48, 16);
  v163 = LODWORD(STACK[0x6A50]) ^ 0x20861484;
  LODWORD(STACK[0x66D0]) = v163;
  LODWORD(STACK[0x6A20]) = v137 ^ 0x80479BE1;
  v164 = v137 ^ 0x80479BE1 ^ v163;
  LODWORD(STACK[0x6A40]) = v164;
  v165 = v164 ^ 0xFA5CA8F9;
  v166 = STACK[0x6900];
  LODWORD(STACK[0x67B0]) = v164 ^ 0xFA5CA8F9 ^ LODWORD(STACK[0x6900]);
  v167 = v164 ^ 0xFA5CA8F9 ^ v166 ^ 0x5B861484;
  LODWORD(STACK[0x66F8]) = v167;
  v168 = v167 ^ v98;
  LODWORD(STACK[0x6950]) = *(_DWORD *)&v36[4 * (BYTE2(v168) ^ 0x52)];
  v169 = __ROR4__(v157, 24);
  v170 = *(_DWORD *)&v36[4 * (BYTE1(v168) ^ 0x52)];
  LODWORD(STACK[0x6710]) = v147 ^ 0x90D9DB5D;
  v171 = ((v162 ^ v169) - ((2 * (v162 ^ v169)) & 0x2BB3B6BA) + 366599005) ^ v147 ^ 0x90D9DB5D;
  LODWORD(STACK[0x6708]) = v149 ^ 0x5DFC9D7A;
  LODWORD(STACK[0x66C8]) = 2 * v171;
  LODWORD(STACK[0x66D8]) = v171;
  v172 = (v171 - ((2 * v171) & 0xA261E9E) + 85135183) ^ v149 ^ 0x5DFC9D7A;
  v173 = v172 ^ v152 ^ v161;
  v174 = *(_DWORD *)&v36[4 * (((unsigned __int16)(v173 ^ 0x6E97) >> 8) ^ 0xFA)];
  v175 = *(_DWORD *)(v39 + 4 * (v173 ^ 0x29u)) ^ __ROR4__(*(_DWORD *)&v49[4* ~((v173 ^ 0x9FC26E97) >> 16)] ^ 0x70012253, 16) ^ __ROR4__(*(_DWORD *)&v49[4 * (HIBYTE(v173) ^ 0xE1)] ^ 0x70012253, 8);
  v176 = v172 ^ v152 ^ 0x699EC66E;
  LODWORD(STACK[0x66A8]) = v176;
  v172 ^= 0x429EC66Eu;
  LODWORD(STACK[0x66C0]) = v172;
  LODWORD(STACK[0x6680]) = v173 ^ 0x429EC66E;
  v177 = v175 ^ __ROR4__(v174 ^ 0x59312D22 ^ (v174 >> 4) & 0xD814F48, 24) ^ v171;
  LODWORD(STACK[0x66B0]) = v177;
  v178 = v172 ^ v177 ^ 0x9D89B884;
  v179 = v177 ^ 0x9D89B884;
  LODWORD(STACK[0x66B8]) = v177 ^ 0x9D89B884;
  v180 = v178 ^ ~v176;
  v181 = v178;
  LODWORD(STACK[0x6690]) = v178;
  v182 = v180 ^ v173 ^ 0x429EC66E;
  LODWORD(STACK[0x66E0]) = v180;
  v183 = *(_DWORD *)&v33[4 * (BYTE1(v182) ^ 0xD2)];
  HIDWORD(v185) = v183 ^ 0xB1548D;
  LODWORD(v185) = v183 ^ 0x93000000;
  v184 = v185 >> 24;
  HIDWORD(v185) = *(_DWORD *)(v39 + 4 * (BYTE2(v182) ^ 0xEAu)) ^ 0xFD19B3AF;
  LODWORD(v185) = HIDWORD(v185);
  LODWORD(STACK[0x6650]) = v182 ^ 0xEAD9A43;
  v186 = *(_DWORD *)&v49[4 * (HIBYTE(v168) ^ 0x88)];
  v187 = *(_DWORD *)&v33[4 * (v182 ^ 0xB)] ^ v184 ^ __ROR4__(*(_DWORD *)&v49[4 * (HIBYTE(v182) ^ 0xAD)] ^ 0x70012253, 8) ^ ((v185 >> 16)- 1252825939+ (~(2 * (v185 >> 16)) | 0x955936A7)) ^ v179;
  LODWORD(STACK[0x6668]) = v187;
  LODWORD(STACK[0x6678]) = v187 ^ 0xB5ECFD64;
  v188 = v181 ^ v187 ^ 0xB5ECFD64;
  LODWORD(STACK[0x6628]) = v188;
  LODWORD(STACK[0x6688]) = v188 ^ 0x22A35706;
  v189 = v188 ^ 0x22A35706 ^ v180;
  LODWORD(STACK[0x6698]) = v189;
  v189 ^= 0xEAD9A43u;
  LODWORD(STACK[0x6660]) = v189;
  LODWORD(STACK[0x6620]) = v189 ^ v182;
  LODWORD(STACK[0x6618]) = *(_DWORD *)&v49[4 * ((v189 ^ v182) ^ 0x5A)];
  LODWORD(STACK[0x6610]) = *(_DWORD *)&v49[4 * ~((v189 ^ v182) >> 16)];
  v190 = *(_DWORD *)&v33[4 * (v168 ^ 0x48)];
  STACK[0x65F8] = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6AC0]) ^ 0x2061));
  LODWORD(STACK[0x6600]) = *(_DWORD *)&v33[4 * (((unsigned __int16)(v189 ^ v182) >> 8) ^ 0xE0)];
  STACK[0x6580] = (unint64_t)v33;
  LODWORD(STACK[0x6608]) = *(_DWORD *)&v33[4 * (((v189 ^ v182) >> 24) ^ 0xBE)];
  v191 = STACK[0xD638];
  STACK[0x65E8] = STACK[0xD638];
  v192 = *(_QWORD *)v191;
  STACK[0x65F0] = *(_QWORD *)v191;
  v193 = v192 ^ 0x7979797979797979;
  v194 = STACK[0xD630];
  STACK[0x6AB0] = STACK[0xD630];
  *(_QWORD *)v194 = v193;
  HIDWORD(v185) = ((LODWORD(STACK[0x6950]) ^ 0x4EF6D998)
                 - ((2 * (LODWORD(STACK[0x6950]) ^ 0x4EF6D998)) & 0x268D7364)
                 + 323402162) ^ ((LODWORD(STACK[0x6950]) ^ 0x4EF6D998u) >> 4) & 0xD814F48;
  LODWORD(v185) = HIDWORD(v185);
  v195 = (v185 >> 16) - ((2 * (v185 >> 16)) & 0x21A8E8);
  HIDWORD(v185) = v170 ^ 0x59312D22 ^ (v170 >> 4) & 0xD814F48;
  LODWORD(v185) = HIDWORD(v185);
  LODWORD(STACK[0x65E0]) = v190 ^ __ROR4__(v186 ^ 0x70012253, 8) ^ ((v185 >> 24)
                                                                  - ((2 * (v185 >> 24)) & 0x8EF67908)
                                                                  - 948224892) ^ LODWORD(STACK[0x6A60]) ^ (v195 - 2146380684);
  LODWORD(STACK[0x65D0]) = v165 - ((2 * v165) & 0xA253EF6E);
  LODWORD(STACK[0x65D8]) = v166 ^ 0x5EBE1570;
  v196 = LODWORD(STACK[0x6AA0]) ^ 0x6AB17DA1;
  v197 = v196 - (v166 ^ 0x5EBE1570) - 1305158324;
  v198 = (v197 ^ 0xC43BCD3D) & (2 * (v197 & 0x86BBCDBE)) ^ v197 & 0x86BBCDBE;
  v199 = ((2 * (v197 ^ 0xC90AD561)) ^ 0x9F6231BE) & (v197 ^ 0xC90AD561) ^ (2 * (v197 ^ 0xC90AD561)) & 0x4FB118DE;
  v200 = v199 ^ LODWORD(STACK[0x12D4]);
  v201 = ((4 * (v199 ^ LODWORD(STACK[0x12D8]))) ^ 0x3EC4637C) & (v199 ^ LODWORD(STACK[0x12D8])) ^ (4
                                                                                                 * (v199 ^ LODWORD(STACK[0x12D8]))) & 0x4FB118DC;
  v202 = (v201 ^ 0xE800040) & (16 * (v200 & (4 * v198) ^ v198)) ^ v200 & (4 * v198) ^ v198;
  v203 = ((16 * (v201 ^ 0x41311883)) ^ 0xFB118DF0) & (v201 ^ 0x41311883) ^ (16 * (v201 ^ 0x41311883)) & 0x4FB118D0;
  v204 = v202 ^ 0x4FB118DF ^ (v203 ^ 0x4B110800) & (v202 << 8);
  LODWORD(v191) = v197 ^ (2
                        * ((v204 << 16) & 0x4FB10000 ^ v204 ^ ((v204 << 16) ^ 0x18DF0000) & (((v203 ^ LODWORD(STACK[0x12D0])) << 8) & 0x4FB10000 ^ 0x4EA10000 ^ (((v203 ^ LODWORD(STACK[0x12D0])) << 8) ^ 0x31180000) & (v203 ^ LODWORD(STACK[0x12D0])))));
  LODWORD(STACK[0x66A0]) = v191;
  v205 = LODWORD(STACK[0x69B0]) ^ 0xED2DFF9;
  v206 = 1056460586
       - v205
       - (((LODWORD(STACK[0x6A70]) ^ 0x10BE1030) + 239274749) ^ ((LODWORD(STACK[0x6A70]) ^ 0x843A29A3) - 1698221200) ^ ((LODWORD(STACK[0x6A70]) ^ 0xFE354432) - 523739393));
  v207 = (v206 ^ 0x197AD7BA) & (2 * (v206 & 0x9A721733)) ^ v206 & 0x9A721733;
  v208 = ((2 * (v206 ^ 0x2DDAF3B8)) ^ 0x6F51C916) & (v206 ^ 0x2DDAF3B8) ^ (2 * (v206 ^ 0x2DDAF3B8)) & 0xB7A8E48A;
  v209 = (v208 ^ 0x2320C001) & (4 * v207) ^ v207;
  v210 = ((4 * (v208 ^ 0x90A82489)) ^ 0xDEA3922C) & (v208 ^ 0x90A82489) ^ (4 * (v208 ^ 0x90A82489)) & 0xB7A8E488;
  v211 = (v210 ^ 0x96A08000) & (16 * v209) ^ v209;
  v212 = ((16 * (v210 ^ 0x21086483)) ^ 0x7A8E48B0) & (v210 ^ 0x21086483) ^ (16 * (v210 ^ 0x21086483)) & 0xB7A8E480;
  v213 = v211 ^ 0xB7A8E48B ^ (v212 ^ 0x3288400B) & (v211 << 8);
  LODWORD(STACK[0x6950]) = v206 ^ (2
                                 * ((v213 << 16) & 0x37A80000 ^ v213 ^ ((v213 << 16) ^ 0x648B0000) & (((v212 ^ 0x8520A40B) << 8) & STACK[0x12DC] ^ 0x17080000 ^ (((v212 ^ 0x8520A40B) << 8) ^ 0x28E40000) & (v212 ^ 0x8520A40B))));
  v168 ^= 0x131798C1u;
  LODWORD(STACK[0x6640]) = v168;
  v214 = v196 - v168 + 1804967428;
  v215 = (v214 ^ 0x3B2226A9) & (2 * (v214 & 0xB3248731)) ^ v214 & 0xB3248731;
  v216 = ((2 * (v214 ^ 0x392B2ECB)) ^ 0x141F53F4) & (v214 ^ 0x392B2ECB) ^ (2 * (v214 ^ 0x392B2ECB)) & 0x8A0FA9FA;
  v217 = (v216 ^ 0x20681C0) & (4 * v215) ^ v215;
  v218 = ((4 * (v216 ^ 0x8A00A80A)) ^ 0x283EA7E8) & (v216 ^ 0x8A00A80A) ^ (4 * (v216 ^ 0x8A00A80A)) & 0x8A0FA9F8;
  v219 = (v218 ^ 0x80EA1E2) & (16 * v217) ^ v217;
  v220 = ((16 * (v218 ^ 0x82010812)) ^ 0xA0FA9FA0) & (v218 ^ 0x82010812) ^ (16 * (v218 ^ 0x82010812)) & 0x8A0FA9F0;
  v221 = v214 ^ (2
               * (((v219 ^ 0x8A0FA9FA ^ (v220 ^ LODWORD(STACK[0x12E4])) & (v219 << 8)) << 16) & 0xA0F0000 ^ v219 ^ 0x8A0FA9FA ^ (v220 ^ LODWORD(STACK[0x12E4])) & (v219 << 8) ^ (((v219 ^ 0x8A0FA9FA ^ (v220 ^ LODWORD(STACK[0x12E4])) & (v219 << 8)) << 16) ^ 0x29FA0000) & (((v220 ^ 0xA05205A) << 8) & 0xA0F0000 ^ (((v220 ^ 0xA05205A) << 8) ^ 0xFA90000) & (v220 ^ 0xA05205A) ^ 0x60000)));
  LODWORD(STACK[0x6900]) = v221;
  v222 = STACK[0x6800];
  v223 = (LODWORD(STACK[0x6800]) ^ 0x31ED4206 ^ LODWORD(STACK[0x6A80])) - 814247947;
  v224 = (v223 ^ 0x963F1B7C) & (2 * (v223 & 0xD6BF937E)) ^ v223 & 0xD6BF937E;
  v225 = ((2 * (v223 ^ 0xB25A3D80)) ^ 0xC9CB5DFC) & (v223 ^ 0xB25A3D80) ^ (2 * (v223 ^ 0xB25A3D80)) & 0x64E5AEFE;
  v226 = (v225 ^ 0x40C02CFA) & (4 * v224) ^ v224;
  v227 = ((4 * (v225 ^ 0x2424A202)) ^ 0x9396BBF8) & (v225 ^ 0x2424A202) ^ (4 * (v225 ^ 0x2424A202)) & 0x64E5AEFC;
  v228 = v227 ^ LODWORD(STACK[0x12E8]);
  v229 = ((16 * (v227 ^ 0x64610406)) ^ 0x4E5AEFE0) & (v227 ^ 0x64610406) ^ (16 * (v227 ^ 0x64610406)) & 0x64E5AEF0;
  v230 = v228 & (16 * v226) ^ v226 ^ 0x64E5AEFE ^ (v229 ^ 0x4440AE00) & ((v228 & (16 * v226) ^ v226) << 8);
  LODWORD(STACK[0x68F0]) = v223 ^ (2
                                 * ((v230 << 16) & 0x64E50000 ^ v230 ^ ((v230 << 16) ^ 0x2EFE0000) & (((v229 ^ 0x20A5001E) << 8) & 0x64E50000 ^ 0x410000 ^ (((v229 ^ 0x20A5001E) << 8) ^ 0xE5AE0000) & (v229 ^ 0x20A5001E))));
  v231 = (LODWORD(STACK[0x67D0]) ^ 0x274D0497 ^ LODWORD(STACK[0x6A20])) + 929817954;
  v232 = (v231 ^ 0xDD74ED46) & (2 * (v231 & 0xDD46E194)) ^ v231 & 0xDD46E194;
  v233 = ((2 * (v231 ^ 0x67746C46)) ^ 0x74651BA4) & (v231 ^ 0x67746C46) ^ (2 * (v231 ^ 0x67746C46)) & 0xBA328DD2;
  v234 = (v233 ^ 0x30200882) & (4 * v232) ^ v232;
  v235 = ((4 * (v233 ^ 0x8A128452)) ^ 0xE8CA3748) & (v233 ^ 0x8A128452) ^ (4 * (v233 ^ 0x8A128452)) & 0xBA328DD0;
  v236 = (v235 ^ 0xA8020540) & (16 * v234) ^ v234;
  v237 = ((16 * (v235 ^ 0x12308892)) ^ 0xA328DD20) & (v235 ^ 0x12308892) ^ (16 * (v235 ^ 0x12308892)) & 0xBA328DD0;
  v238 = v236 ^ 0xBA328DD2 ^ (v237 ^ 0xA2208D00) & (v236 << 8);
  LODWORD(STACK[0x69B0]) = v231 ^ (2
                                 * ((v238 << 16) & 0x3A320000 ^ v238 ^ ((v238 << 16) ^ 0xDD20000) & (((v237 ^ 0x181200D2) << 8) & 0x3A320000 ^ 0x8320000 ^ (((v237 ^ 0x181200D2) << 8) ^ 0x328D0000) & (v237 ^ 0x181200D2))));
  v239 = (LODWORD(STACK[0x6820]) ^ 0x16A44708) - v205 + 1983229328;
  v240 = (v239 ^ 0xF9F0356A) & (2 * (v239 & 0xE1E43973)) ^ v239 & 0xE1E43973;
  v241 = ((2 * (v239 ^ 0xF8B0076E)) ^ 0x32A87C3A) & (v239 ^ 0xF8B0076E) ^ (2 * (v239 ^ 0xF8B0076E)) & 0x19543E1C;
  v242 = (v241 ^ 0x442C19) & (4 * v240) ^ v240;
  v243 = ((4 * (v241 ^ 0x9540205)) ^ 0x6550F874) & (v241 ^ 0x9540205) ^ (4 * (v241 ^ 0x9540205)) & 0x19543E1C;
  v244 = (v243 ^ 0x1503810) & (16 * v242) ^ v242;
  v245 = ((16 * (v243 ^ 0x18040609)) ^ 0x9543E1D0) & (v243 ^ 0x18040609) ^ (16 * (v243 ^ 0x18040609)) & 0x19543E10;
  LODWORD(STACK[0x67C0]) = v239 ^ (2
                                 * (((v244 ^ 0x19543E1D ^ (v245 ^ LODWORD(STACK[0x12EC])) & (v244 << 8)) << 16) & 0x19540000 ^ v244 ^ 0x19543E1D ^ (v245 ^ LODWORD(STACK[0x12EC])) & (v244 << 8) ^ (((v244 ^ 0x19543E1D ^ (v245 ^ LODWORD(STACK[0x12EC])) & (v244 << 8)) << 16) ^ 0x3E1D0000) & (((v245 ^ 0x8141E0D) << 8) & 0x19540000 ^ 0x9400000 ^ (((v245 ^ 0x8141E0D) << 8) ^ 0x543E0000) & (v245 ^ 0x8141E0D))));
  v246 = LODWORD(STACK[0x67F0]) ^ 0xC876BD4F;
  v247 = STACK[0x6840];
  v248 = (LODWORD(STACK[0x6840]) ^ 0x4B96B4B ^ v246) - 1790553824;
  v249 = (v248 ^ 0x8FDE4C7A) & (2 * (v248 & 0xAF9F6D7C)) ^ v248 & 0xAF9F6D7C;
  v250 = ((2 * (v248 ^ 0xDFE00CBA)) ^ 0xE0FEC38C) & (v248 ^ 0xDFE00CBA) ^ (2 * (v248 ^ 0xDFE00CBA)) & 0x707F61C6;
  v251 = (v250 ^ 0x607E4180) & (4 * v249) ^ v249;
  v252 = ((4 * (v250 ^ 0x10012042)) ^ 0xC1FD8718) & (v250 ^ 0x10012042) ^ (4 * (v250 ^ 0x10012042)) & 0x707F61C4;
  v253 = (v252 ^ 0x407D0106) & (16 * v251) ^ v251;
  v254 = ((16 * (v252 ^ 0x300260C6)) ^ 0x7F61C60) & (v252 ^ 0x300260C6) ^ (16 * (v252 ^ 0x300260C6)) & 0x707F61C0;
  v255 = v253 ^ 0x707F61C6 ^ (v254 ^ 0x760086) & (v253 << 8);
  LODWORD(STACK[0x67A0]) = v248 ^ (2
                                 * ((v255 << 16) & 0xF07FFFFF ^ v255 ^ ((v255 << 16) ^ 0x61C60000) & (((v254 ^ 0x70096186) << 8) & 0x707F0000 ^ (((v254 ^ 0x70096186) << 8) ^ 0x7F610000) & (v254 ^ 0x70096186) ^ 0x1E0000)));
  v256 = LODWORD(STACK[0x6890]) ^ 0x5EECD2B5;
  v257 = v221 ^ LODWORD(STACK[0x12E0]);
  v258 = v257 ^ (v256 - ((2 * v256) & 0xA0C045EC) + 1348477686);
  v259 = LODWORD(STACK[0x67B0]) ^ 0xA9D5F656;
  v260 = STACK[0x6A30];
  v261 = (LODWORD(STACK[0x6A30]) ^ 0xFF3B5FF3 ^ v259) - 278052220;
  v262 = (v261 ^ 0xB771DCC8) & (2 * (v261 & 0xC765910D)) ^ v261 & 0xC765910D;
  v263 = ((2 * (v261 ^ 0xB730FCD0)) ^ 0xE0AADBBA) & (v261 ^ 0xB730FCD0) ^ (2 * (v261 ^ 0xB730FCD0)) & 0x70556DDC;
  v264 = (v263 ^ 0x20416819) & (4 * v262) ^ v262;
  v265 = ((4 * (v263 ^ 0x10552445)) ^ 0xC155B774) & (v263 ^ 0x10552445) ^ (4 * (v263 ^ 0x10552445)) & 0x70556DDC;
  v266 = (v265 ^ 0x40552550) & (16 * v264) ^ v264;
  v267 = ((16 * (v265 ^ 0x30004889)) ^ 0x556DDD0) & (v265 ^ 0x30004889) ^ (16 * (v265 ^ 0x30004889)) & 0x70556DD0;
  LODWORD(STACK[0x67B0]) = v261 ^ (2
                                 * (((v266 ^ 0x70556DDD ^ (v267 ^ LODWORD(STACK[0x12F0])) & (v266 << 8)) << 16) & 0x70550000 ^ v266 ^ 0x70556DDD ^ (v267 ^ LODWORD(STACK[0x12F0])) & (v266 << 8) ^ (((v266 ^ 0x70556DDD ^ (v267 ^ LODWORD(STACK[0x12F0])) & (v266 << 8)) << 16) ^ 0x6DDD0000) & (((v267 ^ 0x7001200D) << 8) & 0x70550000 ^ 0x20100000 ^ (((v267 ^ 0x7001200D) << 8) ^ 0x556D0000) & (v267 ^ 0x7001200D))));
  v268 = STACK[0x67E0];
  v269 = (LODWORD(STACK[0x6850]) ^ 0x88F6DEE0 ^ LODWORD(STACK[0x67E0])) - 2111524048;
  v270 = (v269 ^ 0xB5F32961) & (2 * (v269 & 0xB9F3AA69)) ^ v269 & 0xB9F3AA69;
  v271 = ((2 * (v269 ^ 0xB4353921)) ^ 0x1B8D2690) & (v269 ^ 0xB4353921) ^ (2 * (v269 ^ 0xB4353921)) & 0xDC69348;
  v272 = (v271 ^ 0x9840200) & (4 * v270) ^ v270;
  v273 = ((4 * (v271 ^ 0x4429148)) ^ 0x371A4D20) & (v271 ^ 0x4429148) ^ (4 * (v271 ^ 0x4429148)) & 0xDC69348;
  v274 = v272 ^ 0xDC69348 ^ (v273 ^ 0x5020108) & (16 * v272);
  v275 = (16 * (v273 ^ 0x8C49248)) & 0xDC69340 ^ 0x1868348 ^ ((16 * (v273 ^ 0x8C49248)) ^ 0xDC693480) & (v273 ^ 0x8C49248);
  v276 = (v274 << 8) & 0xDC69300 ^ v274 ^ ((v274 << 8) ^ 0xC6934800) & v275;
  LODWORD(STACK[0x6790]) = v269 ^ (2
                                 * ((v276 << 16) & 0xDC60000 ^ v276 ^ ((v276 << 16) ^ 0x13480000) & ((v275 << 8) & 0xDC60000 ^ 0x9440000 ^ ((v275 << 8) ^ 0xC6930000) & v275)));
  v277 = LODWORD(STACK[0x68E0]) ^ 0xD73E4927;
  LODWORD(STACK[0x6670]) = v191 ^ 0x488F54EC;
  LODWORD(STACK[0x6890]) = (v259 + v277) ^ LODWORD(STACK[0x12F4]) ^ v191 ^ 0x488F54EC ^ (v258
                                                                                       - ((2 * v258) & 0x80E951D8)
                                                                                       + 1081387244);
  v278 = STACK[0x6830];
  v279 = v256 - 1505513604 + (LODWORD(STACK[0x6830]) ^ 0x6E18916E);
  v280 = (v279 ^ 0x5A7B5B17) & (2 * (v279 & 0x93731347)) ^ v279 & 0x93731347;
  v281 = ((2 * (v279 ^ 0x58D95F1F)) ^ 0x975498B0) & (v279 ^ 0x58D95F1F) ^ (2 * (v279 ^ 0x58D95F1F)) & 0xCBAA4C58;
  v282 = (v281 ^ 0x83000810) & (4 * v280) ^ v280;
  v283 = ((4 * (v281 ^ 0x48AA4448)) ^ 0x2EA93160) & (v281 ^ 0x48AA4448) ^ (4 * (v281 ^ 0x48AA4448)) & 0xCBAA4C58;
  v284 = (v283 ^ 0xAA80048) & (16 * v282) ^ v282;
  v285 = ((16 * (v283 ^ 0xC1024C18)) ^ 0xBAA4C580) & (v283 ^ 0xC1024C18) ^ (16 * (v283 ^ 0xC1024C18)) & 0xCBAA4C50;
  v286 = v284 ^ 0xCBAA4C58 ^ (v285 ^ 0x8AA04458) & (v284 << 8);
  v287 = v279 ^ (2
               * ((v286 << 16) & 0x4BAA0000 ^ v286 ^ ((v286 << 16) ^ 0x4C580000) & (((v285 ^ 0x410A0858) << 8) & 0x4BAA0000 ^ 0x41A20000 ^ (((v285 ^ 0x410A0858) << 8) ^ 0x2A4C0000) & (v285 ^ 0x410A0858))));
  LODWORD(STACK[0x6658]) = v287;
  v288 = v205 - 2 * (v205 & 0x5610F8E7 ^ STACK[0x6A10] & 4) + 1443952867;
  LODWORD(STACK[0x63F8]) = v259 + v277;
  v289 = (v259 + v277) ^ 0x4ECDB7AD;
  LODWORD(STACK[0x6A10]) = (v289 ^ v288) - ((2 * (v289 ^ v288)) & 0x80E951D8);
  LODWORD(STACK[0x68E0]) = v205 - v256;
  v290 = LODWORD(STACK[0x6A40]) ^ 0xC24B3038;
  v291 = v205 - 627904487 + v290;
  v292 = (v291 ^ 0x32DCC2D9) & (2 * (v291 & 0xBB1EC091)) ^ v291 & 0xBB1EC091;
  v293 = ((2 * (v291 ^ 0x6EC42D9)) ^ 0x7BE50490) & (v291 ^ 0x6EC42D9) ^ (2 * (v291 ^ 0x6EC42D9)) & 0xBDF28248;
  v294 = (v293 ^ 0x38E00000) & (4 * v292) ^ v292;
  v295 = ((4 * (v293 ^ 0x84128248)) ^ 0xF7CA0920) & (v293 ^ 0x84128248) ^ (4 * (v293 ^ 0x84128248)) & 0xBDF28248;
  v296 = v294 ^ 0xBDF28248 ^ (v295 ^ 0xB5C20000) & (16 * v294);
  v297 = (16 * (v295 ^ 0x8308248)) & 0xBDF28240 ^ 0x20D28248 ^ ((16 * (v295 ^ 0x8308248)) ^ 0xDF282480) & (v295 ^ 0x8308248);
  v298 = (v296 << 8) & 0xBDF28200 ^ v296 ^ ((v296 << 8) ^ 0xF2824800) & v297;
  LODWORD(v194) = v291 ^ (2
                        * ((v298 << 16) & 0x3DF20000 ^ v298 ^ ((v298 << 16) ^ 0x2480000) & ((v297 << 8) & 0x3DF20000 ^ 0xD700000 ^ ((v297 << 8) ^ 0x72820000) & v297)));
  LODWORD(STACK[0x6648]) = v194;
  v299 = LODWORD(STACK[0x6880]) ^ 0xFFB7E265;
  v300 = LODWORD(STACK[0x6A90]) ^ 0x722A5632;
  v301 = v299 + v300 + 1;
  LODWORD(STACK[0x6850]) = v301;
  v302 = v301 ^ 0x7CD3CE5A;
  v303 = v301 ^ 0x7CD3CE5A ^ (v277 - ((2 * v277) & 0x4B518124) - 1515667310);
  LODWORD(STACK[0x67F0]) = v303 - ((2 * v303) & 0xF8A0DE4C);
  v304 = LODWORD(STACK[0x6960]) - ((2 * LODWORD(STACK[0x6960])) & 0xAC21F1C6);
  v305 = LODWORD(STACK[0x6980]) ^ 0x3D1ED40C;
  v306 = v300 - v305 - 62909246;
  v307 = (2 * (v306 & 0xEB01C724)) & (v306 ^ 0x668B5FEF) ^ v306 & 0xEB01C724 ^ ((2 * (v306 & 0xEB01C724)) & 0x84028848 | 0x1082);
  v308 = (2 * (v306 ^ 0x668B5FEF)) & 0x8D8A98CA ^ 0x848A8849 ^ ((2 * (v306 ^ 0x668B5FEF)) ^ 0x1B153196) & (v306 ^ 0x668B5FEF);
  v309 = (4 * v307) & 0x8D8A98C8 ^ v307 ^ ((4 * v307) ^ 0x4208) & v308;
  v310 = (4 * v308) & 0x8D8A98C8 ^ LODWORD(STACK[0x12F8]) ^ ((4 * v308) ^ 0x362A632C) & v308;
  v311 = (16 * v309) & 0x8D8A98C0 ^ v309 ^ ((16 * v309) ^ 0x108A0) & v310;
  v312 = (16 * v310) & 0x8D8A98C0 ^ 0x502104B ^ ((16 * v310) ^ 0xD8A98CB0) & v310;
  v313 = v311 ^ (v311 << 8) & 0x8D8A9800 ^ ((v311 << 8) ^ 0x180A00) & v312;
  v314 = v306 ^ (2
               * (((v313 ^ 0x8D8288C1) << 16) & 0xD8A0000 ^ v313 ^ 0x8D8288C1 ^ (((v313 ^ 0x8D8288C1) << 16) ^ 0x18CB0000) & ((v312 << 8) & 0x8D8A0000 ^ 0x5020000 ^ ((v312 << 8) ^ 0xA980000) & v312)));
  v315 = v289 ^ (v305 - ((2 * v305) & 0xAC21F1C6) + 1443952867);
  LODWORD(STACK[0x6980]) = v315 - ((2 * v315) & 0xA0C045EC);
  v316 = LODWORD(STACK[0x69A0]) - 2 * (STACK[0x69A0] & 0x25A8C09E ^ STACK[0x69C0] & 0xC);
  LODWORD(STACK[0x63F0]) = v289;
  LODWORD(STACK[0x67D0]) = v257;
  v317 = v257 ^ ((v289 ^ (v304 + 1443952867)) - ((2 * (v289 ^ (v304 + 1443952867))) & 0xA0C045EC) + 1348477686);
  LODWORD(STACK[0x69A0]) = v317 + 1081387244 + (~(2 * v317) | 0x7F16AE27);
  v318 = v302 ^ (v247 - ((2 * v247) & 0x4B518124) - 1515667310);
  LODWORD(STACK[0x6960]) = v318 - ((2 * v318) & 0xF8A0DE4C);
  v319 = LODWORD(STACK[0x6A80]) - ((2 * LODWORD(STACK[0x6A80])) & 0xAF377902);
  v320 = v302 ^ (v222 - ((2 * v222) & 0x4B518124) - 1515667310);
  LODWORD(STACK[0x69C0]) = v320 - ((2 * v320) & 0xF8A0DE4C);
  LODWORD(v193) = STACK[0x67B0];
  HIDWORD(v185) = LODWORD(STACK[0x67B0]) ^ 0xAB7;
  LODWORD(v185) = LODWORD(STACK[0x67B0]) ^ 0xE7654000;
  v321 = __ROR4__(STACK[0x6910], 13) ^ 0x7C3B63B1 ^ (v185 >> 13);
  v322 = LODWORD(STACK[0x6940]) - 2 * (STACK[0x6940] & 0x8AEA12A ^ STACK[0x6990] & 8);
  v323 = v319 + 1469824129;
  v324 = LODWORD(STACK[0x6810]) ^ 0xDA776395;
  LODWORD(STACK[0x63E8]) = v324;
  v325 = (v323 ^ v324) - ((2 * (v323 ^ v324)) & 0x115D4244);
  LODWORD(STACK[0x6820]) = v302;
  LODWORD(STACK[0x6990]) = (v302 ^ (v316 - 1515667310)) - ((2 * (v302 ^ (v316 - 1515667310))) & 0xF8A0DE4C);
  HIDWORD(v185) = v321;
  LODWORD(v185) = v321;
  v326 = LODWORD(STACK[0x68C0]) - ((2 * LODWORD(STACK[0x68C0])) & 0x37A30C6C);
  LODWORD(STACK[0x6910]) = (v185 >> 19) - ((2 * (v185 >> 19)) & 0x567E5F9A);
  v327 = v287 ^ 0x9C992AD5;
  LODWORD(STACK[0x65B8]) = (v287 ^ 0x9C992AD5 ^ (v322 + 145662242))
                         - ((2 * (v287 ^ 0x9C992AD5 ^ (v322 + 145662242))) & 0xAF377902);
  LODWORD(STACK[0x6800]) = v299 - ((2 * v299) & 0x37A30C6C);
  v328 = v314 ^ 0xFAD17084;
  v329 = v314 ^ 0xFAD17084 ^ (v246 - ((2 * v246) & 0x37A30C6C) + 466716214);
  LODWORD(STACK[0x65C8]) = v329 - ((2 * v329) & 0xD1BDA008);
  LODWORD(STACK[0x65B0]) = v247 - ((2 * v247) & 0x115D4244);
  v330 = LODWORD(STACK[0x6920]) - 388050940 + (~(2 * LODWORD(STACK[0x6920])) | 0x2E425FF7);
  v331 = STACK[0x6950];
  v332 = LODWORD(STACK[0x6950]) ^ 0x1C06C93B;
  v333 = v193 ^ 0x1B352591;
  LODWORD(STACK[0x6A80]) = LODWORD(STACK[0x6A70]) ^ 0xE102E533 ^ v193 ^ 0x1B352591 ^ v332;
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6930]) ^ 0x7F306179 ^ v193 ^ 0x1B352591 ^ v332;
  v334 = LODWORD(STACK[0x6790]) ^ 0x41245CFD;
  LODWORD(v193) = (v334 ^ (v330 + 1)) - ((2 * (v334 ^ (v330 + 1))) & 0x37A30C6C);
  LODWORD(STACK[0x65C0]) = v278 ^ LODWORD(STACK[0x1300]) ^ v331;
  LODWORD(STACK[0x6630]) = v194 ^ 0xC6228CE9;
  v335 = v194 ^ 0xC6228CE9 ^ ((v260 ^ 0x96C34CC4) - 2 * ((v260 ^ 0x96C34CC4) & 0x675D48F8 ^ v260 & 0x10) + 1734166760);
  LODWORD(STACK[0x6920]) = v335 - ((2 * v335) & 0x7733F12E);
  LODWORD(STACK[0x6830]) = (v314 ^ 0xFAD17084 ^ (v326 + 466716214))
                         - ((2 * (v314 ^ 0xFAD17084 ^ (v326 + 466716214))) & 0xD1BDA008);
  v336 = LODWORD(STACK[0x68A0]) - ((2 * LODWORD(STACK[0x68A0])) & 0xCEBA91D0);
  v337 = v194 ^ 0xC6228CE9 ^ (v268 - ((2 * v268) & 0xCEBA91D0) + 1734166760);
  LODWORD(STACK[0x67E0]) = v337 - ((2 * v337) & 0x7733F12E);
  v338 = LODWORD(STACK[0x6870]) - (STACK[0x68B0] & 0xCEBA91D0);
  v339 = LODWORD(STACK[0x66E8]) - ((2 * LODWORD(STACK[0x66E8])) & 0xC5C3D802);
  LODWORD(STACK[0x66E8]) = (v194 ^ 0xC6228CE9 ^ (v336 + 1734166760))
                         - ((2 * (v194 ^ 0xC6228CE9 ^ (v336 + 1734166760))) & 0x7733F12E);
  v340 = v259 + 1458824295 - ((2 * v259) & 0xADE7C8CE);
  LODWORD(STACK[0x68B0]) = (v194 ^ 0xC6228CE9 ^ (v338 + 1734166760))
                         - ((2 * (v194 ^ 0xC6228CE9 ^ (v338 + 1734166760))) & 0x7733F12E);
  v341 = LODWORD(STACK[0x66D0]) - 2 * (STACK[0x66D0] & 0x62E1EC03 ^ STACK[0x6A50] & 2) - 488510463;
  v342 = STACK[0x67C0];
  v343 = LODWORD(STACK[0x6860]) + 136848924 - ((2 * LODWORD(STACK[0x6860])) & 0x10504C38);
  v344 = v257 ^ (LODWORD(STACK[0x6A20]) - 2 * (STACK[0x6A20] & 0x506022FE ^ STACK[0x6A60] & 8) + 1348477686);
  LODWORD(STACK[0x65A8]) = v344 + 1458824295 - ((2 * v344) & 0xADE7C8CE);
  v345 = STACK[0x67A0];
  v346 = LODWORD(STACK[0x67A0]) ^ 0x87C588EC;
  v347 = ((v341 ^ v342 ^ 0x185A948) + 136848924 - ((2 * (v341 ^ v342 ^ 0x185A948)) & 0x10504C38)) ^ v346;
  LODWORD(STACK[0x6A60]) = v347 - ((2 * v347) & 0xC0FA7AEA);
  v348 = LODWORD(STACK[0x6640]) + 1458824295 - ((2 * LODWORD(STACK[0x6640])) & 0xADE7C8CE);
  v349 = STACK[0x68F0];
  v350 = STACK[0x6A40] & 0xD017EE6B ^ 0xC0062462 ^ v290 & (LODWORD(STACK[0x68F0]) ^ 0x86AB20E9);
  v351 = STACK[0x65E0];
  LODWORD(STACK[0x65D0]) = LODWORD(STACK[0x65E0]) ^ (LODWORD(STACK[0x65D0]) - 785778761) ^ 0x41F0AA38;
  v352 = v332 ^ v302;
  LODWORD(STACK[0x6A50]) = v352;
  LODWORD(STACK[0x63C8]) = v349 ^ 0x56BCCE82;
  LODWORD(STACK[0x65A0]) = (v352 ^ 0x85DA4C6D ^ v351) - ((2 * (v352 ^ 0x85DA4C6D ^ v351)) & 0x60EB38E8);
  v353 = v349 ^ 0x4F2AE5;
  LODWORD(v194) = LODWORD(STACK[0x6900]) ^ 0x6244E291;
  LODWORD(STACK[0x6A40]) = v194 ^ ((v349 ^ 0x56BCCE82)
                                 + v290
                                 + ((2 * ((v350 | 0x74738A1C) - (v350 | 0xB8C75E3)) + 387509190) ^ 0x1712E353)
                                 + 1);
  v354 = v194 ^ v349 ^ 0x4F2AE5;
  LODWORD(STACK[0x6640]) = v349 ^ 0x4F2AE5;
  LODWORD(STACK[0x6A20]) = v354 ^ v340;
  LODWORD(STACK[0x65E0]) = v354 ^ v348;
  LODWORD(STACK[0x6598]) = LODWORD(STACK[0x68D0]) ^ 0xEDEF8EFC;
  LODWORD(v194) = v345 ^ v342 ^ 0x185A948;
  v355 = v194 ^ LODWORD(STACK[0x65D8]);
  LODWORD(STACK[0x68D0]) = v194 ^ 0x552B57A1 ^ (v339 - 488510463);
  LODWORD(STACK[0x6578]) = v314;
  v356 = v314 ^ 0x480DF4F7 ^ (v193 + 466716214);
  v357 = v327 ^ (v325 + 145662242);
  v358 = STACK[0x65F8] - 8;
  STACK[0x66D0] = v358;
  LODWORD(STACK[0x65D8]) = v358
                         + (v357 ^ 0x4BE382F6)
                         + (((v355 ^ 0x7382B99B) - 204823439) ^ ((v355 ^ 0x6E96C424) - 287385136) ^ ((v355 ^ 0x70183F4E) - 263183706));
  HIDWORD(v185) = LODWORD(STACK[0x6600]) ^ 0xB1548D;
  LODWORD(v185) = LODWORD(STACK[0x6600]) ^ 0x93000000;
  LODWORD(STACK[0x65F8]) = v342 ^ v346 ^ 0xAF61F0DC ^ v343;
  v359 = (v185 >> 24) ^ LODWORD(STACK[0x6618]);
  HIDWORD(v185) = LODWORD(STACK[0x6608]) ^ 0x8D;
  LODWORD(v185) = LODWORD(STACK[0x6608]) ^ 0x93B15400;
  v360 = v359 ^ (v185 >> 8);
  LODWORD(v185) = __ROR4__(LODWORD(STACK[0x6610]) ^ 0x70012253, 16);
  v361 = LODWORD(STACK[0x6700]) - 2 * (STACK[0x6700] & 0x8AEA12E ^ STACK[0x6770] & 0xC);
  v362 = LODWORD(STACK[0x6680]) - ((2 * LODWORD(STACK[0x6680])) & 0x7733F12E);
  v363 = ((2 * (STACK[0x6690] & 0x62E1EC1F ^ (~LODWORD(STACK[0x6690]) | 0x7FFFFFE1))) ^ 0xC5C3D803)
       - LODWORD(STACK[0x6690]);
  v364 = LODWORD(STACK[0x66A8]) - ((2 * LODWORD(STACK[0x66A8])) & 0x7733F12E);
  v365 = LODWORD(STACK[0x68E0]) ^ 0xC7771701;
  LODWORD(STACK[0x6A30]) = ((LODWORD(STACK[0x66D8]) - (STACK[0x66C8] & 0x7733F12E) + 999946391) ^ v365)
                         - ((2 * ((LODWORD(STACK[0x66D8]) - (STACK[0x66C8] & 0x7733F12E) + 999946391) ^ v365)) & 0xCEBA91D0);
  LODWORD(v194) = LODWORD(STACK[0x66B8]) + 136848924 - 2 * (STACK[0x66B8] & 0x828261E ^ STACK[0x66B0] & 2);
  LODWORD(STACK[0x6700]) = LODWORD(STACK[0x66C0]) - ((2 * LODWORD(STACK[0x66C0])) & 0xCEBA91D0);
  LODWORD(STACK[0x68A0]) = ((v362 + 999946391) ^ v365) - ((2 * ((v362 + 999946391) ^ v365)) & 0xCEBA91D0);
  v366 = LODWORD(STACK[0x6650]) + 136848924 - ((2 * LODWORD(STACK[0x6650])) & 0x10504C38);
  v367 = LODWORD(STACK[0x6620]) ^ 0xF65CA8F9;
  LODWORD(STACK[0x63E0]) = v365;
  LODWORD(STACK[0x6880]) = ((v364 + 999946391) ^ v365) - ((2 * ((v364 + 999946391) ^ v365)) & 0xCEBA91D0);
  v368 = STACK[0x6688];
  LODWORD(STACK[0x66D8]) = LODWORD(STACK[0x6688]) + 1458824295 - 2 * (STACK[0x6688] & 0x56F3E46F ^ STACK[0x6628] & 8);
  v369 = STACK[0x6698];
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x6660]) + 1458824295 - 2 * (STACK[0x6660] & 0x56F3E477 ^ STACK[0x6698] & 0x10);
  v370 = STACK[0x6678];
  v371 = STACK[0x6678] & 0x506022FF ^ STACK[0x6668] & 9;
  v372 = v360 ^ v185 ^ LODWORD(STACK[0x6678]);
  LODWORD(STACK[0x6940]) = v372;
  v373 = v370 - 2 * v371;
  LODWORD(STACK[0x6638]) = v346;
  LODWORD(STACK[0x68C0]) = (v194 ^ v346) - ((2 * (v194 ^ v346)) & 0xC5C3D802);
  LODWORD(v194) = (v367 + 1458824295 - ((2 * v367) & 0xADE7C8CE)) ^ v353;
  LODWORD(STACK[0x6930]) = v194 - ((2 * v194) & 0xA0C045EC);
  v374 = v368 ^ v372 ^ 0x7EACB810;
  v375 = v369 ^ 0xD35CA8F9 ^ v374;
  LODWORD(STACK[0x6620]) = v375;
  LODWORD(STACK[0x6870]) = v374 - 2 * (v374 & 0x25A8C096 ^ (v368 ^ v372) & 4);
  LODWORD(v194) = LODWORD(STACK[0x66E0]) - ((2 * LODWORD(STACK[0x66E0])) & 0xC5C3D802);
  LODWORD(STACK[0x6618]) = ((v363 - 488510463) ^ v342 ^ 0x185A948)
                         + 136848924
                         - ((2 * ((v363 - 488510463) ^ v342 ^ 0x185A948)) & 0x10504C38);
  LODWORD(STACK[0x6860]) = (v367 ^ v375) - ((2 * (v367 ^ v375)) & 0x4B518124);
  LODWORD(STACK[0x6608]) = ((v373 + 1348477686) ^ LODWORD(STACK[0x67D0]))
                         + 1458824295
                         - ((2 * ((v373 + 1348477686) ^ LODWORD(STACK[0x67D0]))) & 0xADE7C8CE);
  LODWORD(STACK[0x63D8]) = v342 ^ 0x185A948;
  LODWORD(STACK[0x66B0]) = ((v194 - 488510463) ^ v342 ^ 0x185A948)
                         + 136848924
                         - ((2 * ((v194 - 488510463) ^ v342 ^ 0x185A948)) & 0x10504C38);
  v376 = STACK[0x6810];
  LODWORD(v194) = LODWORD(STACK[0x6810]) ^ 0x9194E163 ^ (((v361 + 145662242) ^ v327)
                                                       - ((2 * ((v361 + 145662242) ^ v327)) & 0xAF377902)
                                                       + 1469824129);
  LODWORD(STACK[0x6600]) = (v366 ^ v346) - ((2 * (v366 ^ v346)) & 0xC5C3D802);
  v377 = STACK[0x69B0];
  v378 = LODWORD(STACK[0x69B0]) ^ v332;
  v379 = LODWORD(STACK[0x66F0]) ^ v378;
  LODWORD(STACK[0x64E8]) = v379;
  LODWORD(STACK[0x6458]) = v194;
  v380 = (v379 ^ 0x42D1A5F) + v194;
  v381 = v380 + v358;
  LODWORD(STACK[0x66A8]) = v380 + v358 + 942100875 - 2 * ((v380 + v358) & 0x3827518F ^ v380 & 4);
  v382 = STACK[0x66A0];
  v383 = LODWORD(STACK[0x66A0]) ^ 0xD34A5349 ^ (LODWORD(STACK[0x69A0]) + 1);
  v384 = v333 ^ (LODWORD(STACK[0x67F0]) - 61837530);
  v385 = (LODWORD(STACK[0x6960]) - 61837530) ^ 0x832C021 ^ v333;
  v386 = LODWORD(STACK[0x69C0]) - 61837530;
  v387 = LODWORD(STACK[0x6990]) - 61837530;
  v388 = LODWORD(STACK[0x6598]) ^ v378;
  v389 = LODWORD(STACK[0x65D8]) - 1864794795 + v388;
  LODWORD(STACK[0x67F0]) = v389;
  v390 = (v389 & 1) == 0;
  LODWORD(STACK[0x63D0]) = v333;
  if ((v389 & 1) != 0)
    v391 = v385;
  else
    v391 = v386 ^ 0x7A0EC0F0 ^ v333;
  LODWORD(STACK[0x66F0]) = v391;
  if ((v389 & 1) != 0)
    v392 = v384;
  else
    v392 = v385;
  LODWORD(STACK[0x66C0]) = v392;
  if ((v389 & 1) != 0)
    v393 = v387 ^ 0xEA157EC2 ^ v333;
  else
    v393 = v384;
  LODWORD(STACK[0x66E0]) = v393;
  if ((v389 & 1) != 0)
    v394 = v386 ^ 0x7A0EC0F0 ^ v333;
  else
    v394 = v387 ^ 0xEA157EC2 ^ v333;
  LODWORD(STACK[0x66B8]) = v394;
  v395 = v376 ^ 0x88484F37 ^ (LODWORD(STACK[0x65B8]) + 1469824129);
  v396 = (LODWORD(STACK[0x65B0]) + 145662242) ^ 0x3DF44D55;
  LODWORD(STACK[0x63C0]) = v327;
  v397 = v396 ^ v327;
  if ((v389 & 1) != 0)
    v398 = v397;
  else
    v398 = v395;
  v399 = LODWORD(STACK[0x6658]) ^ 0x4BE47841;
  if ((v389 & 1) != 0)
    v400 = LODWORD(STACK[0x6658]) ^ 0x4BE47841;
  else
    v400 = v397;
  LODWORD(STACK[0x69A0]) = v400;
  if ((v389 & 1) != 0)
  {
    v399 = v357 ^ 0xCC0DA8E8;
    v401 = v395;
  }
  else
  {
    v401 = v357 ^ 0xCC0DA8E8;
  }
  LODWORD(STACK[0x6990]) = v401;
  v402 = LODWORD(STACK[0x6950]) ^ 0x88367481 ^ (LODWORD(STACK[0x6910]) - 1421922355);
  v403 = LODWORD(STACK[0x6800]) + 466716214;
  v404 = LODWORD(STACK[0x65C8]) - 388050940;
  LODWORD(STACK[0x6560]) = v328;
  v405 = v403 ^ v328 ^ 0xE8525C1F ^ LODWORD(STACK[0x6790]);
  v406 = (LODWORD(STACK[0x6830]) - 388050940) ^ LODWORD(STACK[0x1304]) ^ v334;
  LODWORD(STACK[0x63B8]) = v334;
  v407 = v404 ^ 0xB2DC8473 ^ v334;
  if ((v389 & 1) != 0)
    v408 = v356;
  else
    v408 = v405;
  LODWORD(STACK[0x6910]) = v408;
  if ((v389 & 1) != 0)
    v409 = v405;
  else
    v409 = v406;
  LODWORD(STACK[0x6668]) = v409;
  if ((v389 & 1) != 0)
    v410 = v406;
  else
    v410 = v407;
  LODWORD(STACK[0x6680]) = v410;
  if ((v389 & 1) != 0)
    v411 = v407;
  else
    v411 = v356;
  LODWORD(STACK[0x6650]) = v411;
  v412 = v377 ^ 0x9726644;
  v413 = LODWORD(STACK[0x65C0]) ^ v377 ^ 0x9726644;
  v414 = v377 ^ 0x9726644 ^ v332;
  v415 = LODWORD(STACK[0x6A90]) ^ 0x3B29A44E ^ v414;
  v416 = LODWORD(STACK[0x69E0]) ^ 0x4F12705C ^ v414;
  LODWORD(STACK[0x6960]) = v414;
  v417 = LODWORD(STACK[0x69F0]) ^ 0x325BC20A ^ v378;
  if (v390)
    v418 = v415;
  else
    v418 = LODWORD(STACK[0x69F0]) ^ 0x325BC20A ^ v378;
  LODWORD(STACK[0x6610]) = v418;
  if (v390)
    v419 = v417;
  else
    v419 = v416;
  LODWORD(STACK[0x6678]) = v419;
  if (v390)
    v420 = v416;
  else
    v420 = v413;
  LODWORD(STACK[0x69E0]) = v420;
  if (v390)
    v421 = v413;
  else
    v421 = v415;
  LODWORD(STACK[0x6660]) = v421;
  v422 = LODWORD(STACK[0x68E0]) ^ 0x89A29CCD ^ (LODWORD(STACK[0x6920]) + 999946391);
  v423 = LODWORD(STACK[0x68E0]) ^ 0xE9BA4E27 ^ (LODWORD(STACK[0x67E0]) + 999946391);
  v424 = LODWORD(STACK[0x68E0]) ^ 0xA2A29CCD ^ (LODWORD(STACK[0x68B0]) + 999946391);
  if (v390)
    v425 = LODWORD(STACK[0x68E0]) ^ 0x3461D009 ^ (LODWORD(STACK[0x66E8]) + 999946391);
  else
    v425 = LODWORD(STACK[0x68E0]) ^ 0x89A29CCD ^ (LODWORD(STACK[0x6920]) + 999946391);
  if (!v390)
  {
    v422 = LODWORD(STACK[0x68E0]) ^ 0xE9BA4E27 ^ (LODWORD(STACK[0x67E0]) + 999946391);
    v423 = LODWORD(STACK[0x68E0]) ^ 0xA2A29CCD ^ (LODWORD(STACK[0x68B0]) + 999946391);
    v424 = LODWORD(STACK[0x68E0]) ^ 0x3461D009 ^ (LODWORD(STACK[0x66E8]) + 999946391);
  }
  v426 = LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x1308]) ^ LODWORD(STACK[0x65A8]);
  v427 = LODWORD(STACK[0x65A0]) - 1334469516;
  LODWORD(STACK[0x6830]) = v412;
  v428 = v427 ^ v412 ^ 0xF3B38517;
  v429 = STACK[0x6850];
  v430 = STACK[0x65D0];
  v431 = LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x65D0]) ^ 0xCB52BCC8 ^ v414;
  LODWORD(STACK[0x69F0]) = v378 ^ LODWORD(STACK[0x6850]);
  v432 = v378 ^ v429 ^ v430;
  v433 = v432 ^ LODWORD(STACK[0x66F8]) ^ 0xE920DA8C;
  v434 = v432 ^ 0x2364A09F;
  if (v390)
    v435 = v432 ^ LODWORD(STACK[0x66F8]) ^ 0xE920DA8C;
  else
    v435 = v432 ^ 0x2364A09F;
  if (v390)
  {
    v433 = v431;
    v436 = v428;
  }
  else
  {
    v436 = v431;
  }
  if (v390)
    v437 = v434;
  else
    v437 = v428;
  v438 = (LODWORD(STACK[0x6A10]) + 1081387244) ^ LODWORD(STACK[0x6670]) ^ 0x8F08854E ^ LODWORD(STACK[0x6900]);
  if (v390)
    v439 = STACK[0x6890];
  else
    v439 = (LODWORD(STACK[0x6980]) + 1348477686) ^ LODWORD(STACK[0x12FC]) ^ v382 ^ LODWORD(STACK[0x67D0]);
  if (v390)
    v440 = (LODWORD(STACK[0x6A10]) + 1081387244) ^ LODWORD(STACK[0x6670]) ^ 0x8F08854E ^ LODWORD(STACK[0x6900]);
  else
    v440 = STACK[0x6890];
  if (v390)
  {
    v438 = v383;
    v441 = (LODWORD(STACK[0x6980]) + 1348477686) ^ LODWORD(STACK[0x12FC]) ^ v382 ^ LODWORD(STACK[0x67D0]);
  }
  else
  {
    v441 = v383;
  }
  LODWORD(STACK[0x6840]) = v332;
  v442 = LODWORD(STACK[0x6AA0]) ^ v332 ^ 0xFA37C0A2 ^ LODWORD(STACK[0x67B0]);
  v443 = STACK[0x6A80];
  v444 = STACK[0x6A70];
  if (v390)
    v445 = STACK[0x6A70];
  else
    v445 = STACK[0x6A80];
  if (v390)
    v444 = LODWORD(STACK[0x6AA0]) ^ v332 ^ 0xFA37C0A2 ^ LODWORD(STACK[0x67B0]);
  LODWORD(STACK[0x6A10]) = v444;
  if (v390)
    v446 = v402;
  else
    v446 = v442;
  if (v390)
    v447 = v443;
  else
    v447 = v402;
  LODWORD(STACK[0x69C0]) = v447;
  if (v390)
    v448 = v355 ^ 0x7FB7E214;
  else
    v448 = (LODWORD(STACK[0x6A60]) - 528663179) ^ 0xC7E64E8E;
  v449 = STACK[0x68D0];
  if (v390)
    v450 = (LODWORD(STACK[0x6A60]) - 528663179) ^ 0xC7E64E8E;
  else
    v450 = STACK[0x68D0];
  LODWORD(STACK[0x6980]) = v450;
  v451 = STACK[0x65F8];
  if (v390)
    v452 = v449;
  else
    v452 = STACK[0x65F8];
  if (!v390)
    v451 = v355 ^ 0x7FB7E214;
  LODWORD(STACK[0x6770]) = v451;
  v453 = STACK[0x6A20];
  v454 = STACK[0x65E0];
  if (v390)
    v455 = STACK[0x65E0];
  else
    v455 = STACK[0x6A20];
  LODWORD(STACK[0x6920]) = v455;
  v456 = STACK[0x6A40];
  if (v390)
    v457 = v453;
  else
    v457 = STACK[0x6A40];
  if (v390)
    v458 = v426;
  else
    v458 = v454;
  if (!v390)
    v456 = v426;
  LODWORD(STACK[0x68D0]) = v456;
  v459 = LODWORD(STACK[0x6970]) ^ 0xF271B2A6;
  LODWORD(STACK[0x6570]) = v378;
  v460 = v459 ^ v378;
  v461 = LODWORD(STACK[0x69D0]) ^ 0xFB1C5884 ^ v378;
  if (v390)
    v462 = v460;
  else
    v462 = LODWORD(STACK[0x6A00]) ^ 0x827090F5 ^ v378;
  if (v390)
    v463 = LODWORD(STACK[0x6A00]) ^ 0x827090F5 ^ v378;
  else
    v463 = LODWORD(STACK[0x69D0]) ^ 0xFB1C5884 ^ v378;
  LODWORD(STACK[0x68B0]) = v463;
  if (v390)
  {
    v464 = v388;
  }
  else
  {
    v461 = v388;
    v464 = v460;
  }
  v465 = LODWORD(STACK[0x67F0]) ^ (2 * LODWORD(STACK[0x67F0]));
  LODWORD(STACK[0x6890]) = v465;
  v466 = (v465 & 2) == 0;
  if ((v465 & 2) != 0)
    v467 = v398;
  else
    v467 = v399;
  LODWORD(STACK[0x6A70]) = v467;
  if (v466)
    v468 = v398;
  else
    v468 = v399;
  LODWORD(STACK[0x6688]) = v468;
  if (v466)
    v469 = v461;
  else
    v469 = v462;
  LODWORD(STACK[0x65E0]) = v469;
  if (!v466)
    v462 = v461;
  LODWORD(STACK[0x67E0]) = v462;
  if (v466)
    v470 = v425;
  else
    v470 = v423;
  LODWORD(STACK[0x6800]) = v470;
  if (v466)
    v471 = v423;
  else
    v471 = v425;
  LODWORD(STACK[0x6A60]) = v471;
  if (v466)
    v472 = v424;
  else
    v472 = v422;
  LODWORD(STACK[0x67F0]) = v472;
  if (v466)
    v473 = v422;
  else
    v473 = v424;
  LODWORD(STACK[0x6690]) = v473;
  if (v466)
    v474 = v433;
  else
    v474 = v437;
  if (v466)
    v433 = v437;
  v475 = ((LODWORD(STACK[0x6700]) + 1734166760) ^ LODWORD(STACK[0x6630]))
       + 999946391
       + (~(2 * ((LODWORD(STACK[0x6700]) + 1734166760) ^ LODWORD(STACK[0x6630]))) | 0x88CC0ED1);
  v476 = STACK[0x6640];
  v477 = (LODWORD(STACK[0x66C8]) ^ v476) + 1348477687 + (~(2 * (LODWORD(STACK[0x66C8]) ^ v476)) | 0x5F3FBA13);
  v478 = (LODWORD(STACK[0x66D8]) ^ v476) + 1348477687 + (~(2 * (LODWORD(STACK[0x66D8]) ^ v476)) | 0x5F3FBA13);
  v479 = LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x6638]);
  LODWORD(STACK[0x6A90]) = v479;
  v480 = STACK[0x66D0] + 1646891453;
  LODWORD(STACK[0x6438]) = v479 ^ 0xC1D1E1A4;
  v481 = v480 + (v479 ^ 0xC1D1E1A4) + v380;
  LODWORD(STACK[0x6700]) = v439;
  LODWORD(STACK[0x6628]) = v438;
  if (v466)
    v482 = v438;
  else
    v482 = v439;
  LODWORD(STACK[0x6A80]) = (v381 ^ -v381 ^ ((v482 ^ 0xC7D8AE74) + (LODWORD(STACK[0x66A8]) ^ v482) + 1))
                         + (LODWORD(STACK[0x66A8]) ^ v482);
  v483 = STACK[0x64E8];
  LODWORD(STACK[0x6430]) = ((LODWORD(STACK[0x64E8]) ^ 0x8AC7097) + 2038071606) ^ ((LODWORD(STACK[0x64E8]) ^ 0xFC1339CB)
                                                                                - 1916417942) ^ ((LODWORD(STACK[0x64E8]) ^ 0xF0925303)
                                                                                               - 2126208350);
  v484 = 0x41B14FC555EB8BCBLL * STACK[0x65F0] + 0x4CE7CBF72E288A12;
  v485 = (v484 ^ 0x3AD9A1C8C98775CCLL) & (2 * (v484 & 0xB3183408D1D775EELL)) ^ v484 & 0xB3183408D1D775EELL;
  v486 = ((2 * (v484 ^ 0x78E9A9D8C9A5F484)) ^ 0x97E33BA030E502D4) & (v484 ^ 0x78E9A9D8C9A5F484) ^ (2 * (v484 ^ 0x78E9A9D8C9A5F484)) & 0xCBF19DD01872816ALL;
  v487 = (v486 ^ 0x80E1100000600040) & (4 * v485) ^ v485;
  v486 ^= 0x481084500812812AuLL;
  v488 = 4 * v486;
  v489 = ((4 * v486) ^ 0x2FC6774061CA05A8) & v486;
  if (v466)
    v490 = v441;
  else
    v490 = v440;
  LODWORD(STACK[0x65F0]) = v490;
  if (v466)
    v491 = v440;
  else
    v491 = v441;
  LODWORD(STACK[0x65F8]) = v491;
  v492 = STACK[0x66B8];
  if (v466)
    v493 = STACK[0x66B8];
  else
    v493 = STACK[0x66C0];
  if (v466)
    v492 = STACK[0x66C0];
  LODWORD(STACK[0x65D0]) = v492;
  v494 = STACK[0x6668];
  v495 = STACK[0x6650];
  if (v466)
    v496 = STACK[0x6650];
  else
    v496 = STACK[0x6668];
  LODWORD(STACK[0x66C0]) = v496;
  if (v466)
    v497 = v494;
  else
    v497 = v495;
  LODWORD(STACK[0x66B8]) = v497;
  v498 = STACK[0x6910];
  v499 = STACK[0x6680];
  if (v466)
    v500 = STACK[0x6910];
  else
    v500 = STACK[0x6680];
  LODWORD(STACK[0x66E8]) = v500;
  if (v466)
    v501 = v499;
  else
    v501 = v498;
  LODWORD(STACK[0x6680]) = v501;
  v502 = STACK[0x69E0];
  v503 = STACK[0x6610];
  if (v466)
    v504 = STACK[0x69E0];
  else
    v504 = STACK[0x6610];
  LODWORD(STACK[0x6910]) = v504;
  if (v466)
    v505 = v503;
  else
    v505 = v502;
  LODWORD(STACK[0x66A8]) = v505;
  if (v466)
    v506 = v452;
  else
    v506 = v448;
  if (v466)
    v452 = v448;
  LODWORD(STACK[0x6610]) = v452;
  if (v466)
    v507 = v458;
  else
    v507 = v457;
  LODWORD(STACK[0x66B0]) = v507;
  if (v466)
    v508 = v457;
  else
    v508 = v458;
  LODWORD(STACK[0x66D8]) = v508;
  v509 = STACK[0x66F0];
  v510 = STACK[0x66E0];
  if (v466)
    v511 = STACK[0x66E0];
  else
    v511 = STACK[0x66F0];
  LODWORD(STACK[0x6720]) = v511;
  if (v466)
    v512 = v509;
  else
    v512 = v510;
  LODWORD(STACK[0x65C8]) = v512;
  if (v466)
    v513 = v445;
  else
    v513 = v446;
  if (v466)
    v514 = v446;
  else
    v514 = v445;
  LODWORD(STACK[0x66E0]) = v514;
  v515 = STACK[0x6678];
  v516 = STACK[0x6660];
  if (v466)
    v517 = STACK[0x6678];
  else
    v517 = STACK[0x6660];
  LODWORD(STACK[0x66C8]) = v517;
  if (v466)
    v518 = v516;
  else
    v518 = v515;
  LODWORD(STACK[0x6678]) = v518;
  if (v466)
    v519 = v435;
  else
    v519 = v436;
  LODWORD(STACK[0x66F0]) = v519;
  if (v466)
    v520 = v436;
  else
    v520 = v435;
  LODWORD(STACK[0x6440]) = v520;
  LODWORD(STACK[0x6400]) = 2 * v493;
  LODWORD(STACK[0x6698]) = v493;
  v521 = v493 - 657299708 - ((2 * v493) & 0xB1A4CE08);
  v522 = v489 ^ v488 & 0xCBF19DD018728168;
  v523 = (v522 ^ 0xBC0154000420120) & (16 * v487) ^ v487;
  v524 = ((16 * (v522 ^ 0xC031889018308042)) ^ 0xBF19DD01872816A0) & (v522 ^ 0xC031889018308042) ^ (16 * (v522 ^ 0xC031889018308042)) & 0xCBF19DD018728160;
  v525 = (v524 ^ 0x8B119D0000200000) & (v523 << 8) ^ v523;
  v526 = (((v524 ^ 0x40E000D01852814ALL) << 8) ^ 0xF19DD01872816A00) & (v524 ^ 0x40E000D01852814ALL) ^ ((v524 ^ 0x40E000D01852814ALL) << 8) & 0xCBF19DD018728100;
  v527 = v525 ^ 0xCBF19DD01872816ALL ^ (v526 ^ 0xC191901010000000) & (v525 << 16);
  v528 = v484 ^ (2
               * ((v527 << 32) & 0x4BF19DD000000000 ^ v527 ^ ((v527 << 32) ^ 0x1872816A00000000) & (((v526 ^ 0xA600DC00872816ALL) << 16) & 0x4BF19DD000000000 ^ 0x4221858000000000 ^ (((v526 ^ 0xA600DC00872816ALL) << 16) ^ 0x1DD0187200000000) & (v526 ^ 0xA600DC00872816ALL))));
  v529 = ((v528 ^ 0xA7B64DF887E96A8CLL) - 0x629A59275DC01D12) ^ ((v528 ^ 0xCE0C73D287341635) - 0xB20670D5D1D61ABLL) ^ ((v528 ^ 0x3D846723799147A6) + 0x7578C035C47CFC8);
  v530 = ((v529 - 0xE2385EB0343F54) ^ 0x99F654215399C381) & (2 * ((v529 - 0xE2385EB0343F54) & 0x91F4863553998BD5)) ^ (v529 - 0xE2385EB0343F54) & 0x91F4863553998BD5;
  v531 = ((2 * ((v529 - 0xE2385EB0343F54) ^ 0xBADE54297088C5A3)) ^ 0x5655A43846229CECLL) & ((v529
                                                                                               - 0xE2385EB0343F54) ^ 0xBADE54297088C5A3) ^ (2 * ((v529 - 0xE2385EB0343F54) ^ 0xBADE54297088C5A3)) & 0x2B2AD21C23114E76;
  v532 = (v531 ^ 0x200001802000C64) & (4 * v530) ^ v530;
  v533 = ((4 * (v531 ^ 0x292A520421114212)) ^ 0xACAB48708C4539D8) & (v531 ^ 0x292A520421114212) ^ (4 * (v531 ^ 0x292A520421114212)) & 0x2B2AD21C23114E74;
  v534 = (v533 ^ 0x282A401000010850) & (16 * v532) ^ v532;
  v535 = ((16 * (v533 ^ 0x300920C23104626)) ^ 0xB2AD21C23114E760) & (v533 ^ 0x300920C23104626) ^ (16 * (v533 ^ 0x300920C23104626)) & 0x2B2AD21C23114E70;
  v536 = (v535 ^ 0x2228000021104600) & (v534 << 8) ^ v534;
  v537 = (((v535 ^ 0x902D21C02010816) << 8) ^ 0x2AD21C23114E7600) & (v535 ^ 0x902D21C02010816) ^ ((v535 ^ 0x902D21C02010816) << 8) & 0x2B2AD21C23114E00;
  v538 = v536 ^ 0x2B2AD21C23114E76 ^ (v537 ^ 0x2A02100001000000) & (v536 << 16);
  v539 = ((v529 - 0xE2385EB0343F54) ^ (2
                                       * ((v538 << 32) & 0x2B2AD21C00000000 ^ v538 ^ ((v538 << 32) ^ 0x23114E7600000000) & (((v537 ^ 0x128C21C22110876) << 16) & 0x2B2AD21C00000000 ^ 0x2922D00C00000000 ^ (((v537 ^ 0x128C21C22110876) << 16) ^ 0x521C231100000000) & (v537 ^ 0x128C21C22110876))))) >> 32;
  v540 = v529
       - 0x6C00D74AA5D8F6B3
       + (((v539 ^ 0x498D7C5F3181E8DDLL) - 0x6D42C2E1194A9D22) ^ ((v539 ^ 0x133EE7606A8D6344) - 0x37F159DE424616BBLL) ^ ((v539 ^ 0x5AB39B3FDAAD2DBCLL) - 0x7E7C2581F2665843));
  v541 = (v540 ^ 0x9DF2DBDFEA25D6CFLL) & (2 * (v540 & 0x21E2E3DFF2A9170ELL)) ^ v540 & 0x21E2E3DFF2A9170ELL;
  v542 = ((2 * (v540 ^ 0x9FB399C76B75F8D3)) ^ 0x7CA2F43133B9DFBALL) & (v540 ^ 0x9FB399C76B75F8D3) ^ (2 * (v540 ^ 0x9FB399C76B75F8D3)) & 0xBE517A1899DCEFDCLL;
  v543 = (v542 ^ 0xC0010101188CC18) & (4 * v541) ^ v541;
  v544 = ((4 * (v542 ^ 0x82510A0888442045)) ^ 0xF945E8626773BF74) & (v542 ^ 0x82510A0888442045) ^ (4 * (v542 ^ 0x82510A0888442045)) & 0xBE517A1899DCEFDCLL;
  v545 = (v544 ^ 0xB84168000150AF40) & (16 * v543) ^ v543;
  v546 = ((16 * (v544 ^ 0x6101218988C4089)) ^ 0xE517A1899DCEFDD0) & (v544 ^ 0x6101218988C4089) ^ (16 * (v544 ^ 0x6101218988C4089)) & 0xBE517A1899DCEFD0;
  v547 = (v546 ^ 0xA411200899CCED00) & (v545 << 8) ^ v545;
  v548 = (((v546 ^ 0x1A405A100010020DLL) << 8) ^ 0x517A1899DCEFDD00) & (v546 ^ 0x1A405A100010020DLL) ^ ((v546 ^ 0x1A405A100010020DLL) << 8) & 0xBE517A1899DCEF00;
  v549 = v547 ^ 0xBE517A1899DCEFDDLL ^ (v548 ^ 0x1050181898CC0000) & (v547 << 16);
  v550 = (v540 ^ (2
                * ((v549 << 32) & 0x3E517A1800000000 ^ v549 ^ ((v549 << 32) ^ 0x19DCEFDD00000000) & (((v548 ^ 0xAE016200011022DDLL) << 16) & 0x3E517A1800000000 ^ 0x441620000000000 ^ (((v548 ^ 0xAE016200011022DDLL) << 16) ^ 0x7A1899DC00000000) & (v548 ^ 0xAE016200011022DDLL))))) >> 16;
  v551 = v540
       - 0x5E93B258FE9168ELL
       + (((v550 ^ 0x4ED15D759311BE42) - 0x234958A0B28643ACLL) ^ ((v550 ^ 0xA2B34779AB3E5B4ELL) + 0x30D4BD5375565960) ^ ((v550 ^ 0xEC6277ECFBF1241CLL) + 0x7E058DC62599260ELL));
  v552 = (v551 ^ 0x8162F6B2449B40DALL) & (2 * (v551 & 0x9564873B64DB6A9ALL)) ^ v551 & 0x9564873B64DB6A9ALL;
  v553 = ((2 * (v551 ^ 0xABABF8C6CD8F11FALL)) ^ 0x7D9EFFFB52A8F6C0) & (v551 ^ 0xABABF8C6CD8F11FALL) ^ (2 * (v551 ^ 0xABABF8C6CD8F11FALL)) & 0x3ECF7FFDA9547B60;
  v554 = (v553 ^ 0x3C863DF900007240) & (4 * v552) ^ v552;
  v555 = ((4 * (v553 ^ 0x2410004A9540920)) ^ 0xFB3DFFF6A551ED80) & (v553 ^ 0x2410004A9540920) ^ (4 * (v553 ^ 0x2410004A9540920)) & 0x3ECF7FFDA9547B60;
  v556 = (v555 ^ 0x3A0D7FF4A1506900) & (16 * v554) ^ v554;
  v557 = ((16 * (v555 ^ 0x4C2000908041260)) ^ 0xECF7FFDA9547B600) & (v555 ^ 0x4C2000908041260) ^ (16 * (v555 ^ 0x4C2000908041260)) & 0x3ECF7FFDA9547B60;
  v558 = (v557 ^ 0x2CC77FD881443200) & (v556 << 8) ^ v556;
  v559 = (((v557 ^ 0x1208002528104960) << 8) ^ 0xCF7FFDA9547B6000) & (v557 ^ 0x1208002528104960) ^ ((v557 ^ 0x1208002528104960) << 8) & 0x3ECF7FFDA9547B00;
  v560 = v558 ^ 0x3ECF7FFDA9547B60 ^ (v559 ^ 0xE4F7DA900500000) & (v558 << 16);
  v561 = (v551 ^ (2
                * ((v560 << 32) & 0x3ECF7FFD00000000 ^ v560 ^ ((v560 << 32) ^ 0x29547B6000000000) & (((v559 ^ 0x30800254A9041B60) << 16) & 0x3ECF7FFD00000000 ^ 0x256A900000000 ^ (((v559 ^ 0x30800254A9041B60) << 16) ^ 0x7FFDA95400000000) & (v559 ^ 0x30800254A9041B60))))) >> 8;
  v562 = v551
       - (((v561 ^ 0xE2F7FEF598AFF1A7) - 0x30D809B5E7257FA8) ^ ((v561 ^ 0x6D0B9F4CE292C50CLL) + 0x40DB97F362E7B4FDLL) ^ ((v561 ^ 0x8F4413377A0B4737) - 0x5D6BE4770581C938));
  v563 = ((v562 - 0x3058DA48B47538B3) ^ 0x6E5AAD8E2D425FCBLL) & (2
                                                                 * ((v562 - 0x3058DA48B47538B3) & 0x6E9C200E4D085F8CLL)) ^ (v562 - 0x3058DA48B47538B3) & 0x6E9C200E4D085F8CLL;
  v564 = ((2 * ((v562 - 0x3058DA48B47538B3) ^ 0x2252ED8A3542ECDBLL)) ^ 0x999D9B08F09566AELL) & ((v562
                                                                                                 - 0x3058DA48B47538B3) ^ 0x2252ED8A3542ECDBLL) ^ (2 * ((v562 - 0x3058DA48B47538B3) ^ 0x2252ED8A3542ECDBLL)) & 0x4CCECD84784AB356;
  v565 = (v564 ^ 0x880800070002200) & (4 * v563) ^ v563;
  v566 = ((4 * (v564 ^ 0x44424484084A9151)) ^ 0x333B3611E12ACD5CLL) & (v564 ^ 0x44424484084A9151) ^ (4 * (v564 ^ 0x44424484084A9151)) & 0x4CCECD84784AB354;
  v567 = (v566 ^ 0xA0400600A8140) & (16 * v565) ^ v565;
  v568 = ((16 * (v566 ^ 0x4CC4C98418403203)) ^ 0xCCECD84784AB3570) & (v566 ^ 0x4CC4C98418403203) ^ (16 * (v566 ^ 0x4CC4C98418403203)) & 0x4CCECD84784AB350;
  v569 = (v568 ^ 0x4CCCC804000A3100) & (v567 << 8) ^ v567;
  v570 = (((v568 ^ 0x2058078408207) << 8) ^ 0xCECD84784AB35700) & (v568 ^ 0x2058078408207) ^ ((v568 ^ 0x2058078408207) << 8) & 0x4CCECD84784AB300;
  v571 = v569 ^ 0x4CCECD84784AB357 ^ (v570 ^ 0x4CCC840048020000) & (v569 << 16);
  v572 = (v562 - 0x3058DA48B47538B3) ^ (2
                                        * ((v571 << 32) & 0x4CCECD8400000000 ^ v571 ^ ((v571 << 32) ^ 0x784AB35700000000) & (((v570 ^ 0x249843048A057) << 16) & 0x4CCECD8400000000 ^ 0x4A858400000000 ^ (((v570 ^ 0x249843048A057) << 16) ^ 0x4D84784A00000000) & (v570 ^ 0x249843048A057))));
  STACK[0x6A40] = v572;
  v528 ^= 0xBCDA25DB627A4B2uLL;
  v573 = ((v572 ^ v528 ^ 0x21E53B9F27CBE9C8) - 0x4D89C099363803DBLL) ^ ((v572 ^ v528 ^ 0xE0AD64262B34BA92)
                                                                        + 0x733E60DFC538AF7FLL) ^ ((v572 ^ v528 ^ 0x990B49C2E677B9F0)
                                                                                                 + 0xA984D3B087BAC1DLL);
  v574 = ((v573 - 0x6CA8469563ADC729) ^ 0xAC9AA24B5F02D7E9) & (2
                                                                 * ((v573 - 0x6CA8469563ADC729) & 0xA0D834135F28C7E2)) ^ (v573 - 0x6CA8469563ADC729) & 0xA0D834135F28C7E2;
  v575 = ((2 * ((v573 - 0x6CA8469563ADC729) ^ 0xEC1AEA6D7703D2ADLL)) ^ 0x9985BCFC50562A9ELL) & ((v573
                                                                                                 - 0x6CA8469563ADC729) ^ 0xEC1AEA6D7703D2ADLL) ^ (2 * ((v573 - 0x6CA8469563ADC729) ^ 0xEC1AEA6D7703D2ADLL)) & 0x4CC2DE7E282B154ELL;
  v576 = (v575 ^ 0x80905C00020008) & (4 * v574) ^ v574;
  v577 = ((4 * (v575 ^ 0x4442420228291541)) ^ 0x330B79F8A0AC553CLL) & (v575 ^ 0x4442420228291541) ^ (4 * (v575 ^ 0x4442420228291541)) & 0x4CC2DE7E282B154CLL;
  v578 = (v577 ^ 0x2587820281500) & (16 * v576) ^ v576;
  v579 = ((16 * (v577 ^ 0x4CC0860608030043)) ^ 0xCC2DE7E282B154F0) & (v577 ^ 0x4CC0860608030043) ^ (16 * (v577 ^ 0x4CC0860608030043)) & 0x4CC2DE7E282B1540;
  v580 = (v579 ^ 0x4C00C66200211400) & (v578 << 8) ^ v578;
  v581 = (((v579 ^ 0xC2181C280A010FLL) << 8) ^ 0xC2DE7E282B154F00) & (v579 ^ 0xC2181C280A010FLL) ^ ((v579 ^ 0xC2181C280A010FLL) << 8) & 0x4CC2DE7E282B1500;
  v582 = v580 ^ 0x4CC2DE7E282B154FLL ^ (v581 ^ 0x40C25E2828010000) & (v580 << 16);
  v583 = ((v573 - 0x6CA8469563ADC729) ^ (2
                                         * ((v582 << 32) & 0x4CC2DE7E00000000 ^ v582 ^ ((v582 << 32) ^ 0x282B154F00000000) & (((v581 ^ 0xC008056002A104FLL) << 16) & 0x4CC2DE7E00000000 ^ 0x80D65400000000 ^ (((v581 ^ 0xC008056002A104FLL) << 16) ^ 0x5E7E282B00000000) & (v581 ^ 0xC008056002A104FLL))))) >> 32;
  v584 = v573
       + 0x142339D10AC76D08
       + (((v583 ^ 0xBFD34525ACE8CE15) + 0x2575D0BA8EF1074FLL) ^ ((v583 ^ 0x591D700053BE4A1BLL) - 0x3C441A608E587CBFLL) ^ ((v583 ^ 0xE6CE3525D60F247DLL) + 0x7C68A0BAF416ED27));
  v585 = (v584 ^ 0x95455E4DF17A800BLL) & (2 * (v584 & 0x85661E0DE5732A88)) ^ v584 & 0x85661E0DE5732A88;
  v586 = ((2 * (v584 ^ 0x9F055E4CF37ED50BLL)) ^ 0x34C680822C1BFF06) & (v584 ^ 0x9F055E4CF37ED50BLL) ^ (2 * (v584 ^ 0x9F055E4CF37ED50BLL)) & 0x1A634041160DFF82;
  v587 = (v586 ^ 0x100000000409FE00) & (4 * v585) ^ v585;
  v588 = ((4 * (v586 ^ 0xA21404112040081)) ^ 0x698D01045837FE0CLL) & (v586 ^ 0xA21404112040081) ^ (4 * (v586 ^ 0xA21404112040081)) & 0x1A634041160DFF80;
  v589 = (v588 ^ 0x80100001005FE00) & (16 * v587) ^ v587;
  v590 = ((16 * (v588 ^ 0x1262404106080183)) ^ 0xA634041160DFF830) & (v588 ^ 0x1262404106080183) ^ (16 * (v588 ^ 0x1262404106080183)) & 0x1A634041160DFF80;
  v591 = (v590 ^ 0x2200001000DF800) & (v589 << 8) ^ v589;
  v592 = (((v590 ^ 0x1843404016000783) << 8) ^ 0x634041160DFF8300) & (v590 ^ 0x1843404016000783) ^ ((v590 ^ 0x1843404016000783) << 8) & 0x1A634041160DFF00;
  v593 = v591 ^ 0x1A634041160DFF83 ^ (v592 ^ 0x2404000040D0000) & (v591 << 16);
  v594 = (v584 ^ (2
                * ((v593 << 32) & 0x1A63404100000000 ^ v593 ^ ((v593 << 32) ^ 0x160DFF8300000000) & (((v592 ^ 0x1823004112007C83) << 16) & 0x1A63404100000000 ^ 0x1A22404000000000 ^ (((v592 ^ 0x1823004112007C83) << 16) ^ 0x4041160D00000000) & (v592 ^ 0x1823004112007C83))))) >> 16;
  v595 = v584
       - 0x1A9DCB09CC446E5CLL
       + (((v594 ^ 0xC8700979A237DA44) - 0x690BF74CF1D4F9EDLL) ^ ((v594 ^ 0x8098F4EE79665754) - 0x21E30ADB2A8574FDLL) ^ ((v594 ^ 0x48E86835C5DC4478) + 0x166C69FF69C0982FLL));
  v596 = (v595 ^ 0x657F42ACFF04F3B1) & (2 * (v595 & 0x417F54AEFF2683A5)) ^ v595 & 0x417F54AEFF2683A5;
  v597 = ((2 * (v595 ^ 0x65ED6BB52D40F4FBLL)) ^ 0x49247E37A4CCEEBCLL) & (v595 ^ 0x65ED6BB52D40F4FBLL) ^ (2 * (v595 ^ 0x65ED6BB52D40F4FBLL)) & 0x24923F1BD266775ELL;
  v598 = (v597 ^ 0x36138004061CLL) & (4 * v596) ^ v596;
  v599 = ((4 * (v597 ^ 0x2492010852221142)) ^ 0x9248FC6F4999DD78) & (v597 ^ 0x2492010852221142) ^ (4 * (v597 ^ 0x2492010852221142)) & 0x24923F1BD266775CLL;
  v600 = (v599 ^ 0x3C0B40005550) & (16 * v598) ^ v598;
  v601 = ((16 * (v599 ^ 0x2492031092662206)) ^ 0x4923F1BD266775E0) & (v599 ^ 0x2492031092662206) ^ (16 * (v599 ^ 0x2492031092662206)) & 0x24923F1BD2667750;
  v602 = (v601 ^ 0x2311902667500) & (v600 << 8) ^ v600;
  v603 = (((v601 ^ 0x24900E02D000021ELL) << 8) ^ 0x923F1BD266775E00) & (v601 ^ 0x24900E02D000021ELL) ^ ((v601 ^ 0x24900E02D000021ELL) << 8) & 0x24923F1BD2667700;
  v604 = v602 ^ 0x24923F1BD266775ELL ^ (v603 ^ 0x121B1242660000) & (v602 << 16);
  v605 = (v595 ^ (2
                * ((v604 << 32) & 0x24923F1B00000000 ^ v604 ^ ((v604 << 32) ^ 0x5266775E00000000) & (((v603 ^ 0x248024099000215ELL) << 16) & 0x24923F1B00000000 ^ 0x802D1900000000 ^ (((v603 ^ 0x248024099000215ELL) << 16) ^ 0x3F1BD26600000000) & (v603 ^ 0x248024099000215ELL))))) >> 8;
  v606 = v595
       - (((v605 ^ 0xBA7D17A8E1E62E69) + 0x51373B534C8AB61CLL) ^ ((v605 ^ 0x6B7421B12A4E8613) - 0x7FC1F2B578DDE19ELL) ^ ((v605 ^ 0xD101695D66F34217) + 0x3A4B45A6CB9FDA66));
  v607 = ((v606 + 0x4981EFDA1205B5FLL) ^ 0x8BDFE9E109BB0233) & (2
                                                                * ((v606 + 0x4981EFDA1205B5FLL) & 0xA39FEDC911B25438)) ^ (v606 + 0x4981EFDA1205B5FLL) & 0xA39FEDC911B25438;
  v608 = ((2 * ((v606 + 0x4981EFDA1205B5FLL) ^ 0x8DE0EB732BBB8A63)) ^ 0x5CFE0D747413BCB6) & ((v606
                                                                                                + 0x4981EFDA1205B5FLL) ^ 0x8DE0EB732BBB8A63) ^ (2 * ((v606 + 0x4981EFDA1205B5FLL) ^ 0x8DE0EB732BBB8A63)) & 0x2E7F06BA3A09DE5ALL;
  v609 = (v608 ^ 0xC7E042000019000) & (4 * v607) ^ v607;
  v610 = ((4 * (v608 ^ 0x2201028A0A084249)) ^ 0xB9FC1AE8E827796CLL) & (v608 ^ 0x2201028A0A084249) ^ (4 * (v608 ^ 0x2201028A0A084249)) & 0x2E7F06BA3A09DE58;
  v611 = (v610 ^ 0x287C02A828015840) & (16 * v609) ^ v609;
  v612 = ((16 * (v610 ^ 0x603041212088613)) ^ 0xE7F06BA3A09DE5B0) & (v610 ^ 0x603041212088613) ^ (16 * (v610 ^ 0x603041212088613)) & 0x2E7F06BA3A09DE50;
  v613 = (v612 ^ 0x267002A22009C400) & (v611 << 8) ^ v611;
  v614 = (((v612 ^ 0x80F04181A001A4BLL) << 8) ^ 0x7F06BA3A09DE5B00) & (v612 ^ 0x80F04181A001A4BLL) ^ ((v612 ^ 0x80F04181A001A4BLL) << 8) & 0x2E7F06BA3A09DE00;
  v615 = v613 ^ 0x2E7F06BA3A09DE5BLL ^ (v614 ^ 0x2E06023A08080000) & (v613 << 16);
  v616 = (v606 + 0x4981EFDA1205B5FLL) ^ (2
                                       * ((v615 << 32) & 0x2E7F06BA00000000 ^ v615 ^ ((v615 << 32) ^ 0x3A09DE5B00000000) & (((v614 ^ 0x7904803201845BLL) << 16) & 0x2E7F06BA00000000 ^ 0x284504B200000000 ^ (((v614 ^ 0x7904803201845BLL) << 16) ^ 0x6BA3A0900000000) & (v614 ^ 0x7904803201845BLL))));
  STACK[0x6A20] = v616;
  v617 = ((v616 ^ v528 ^ 0xFE0AB61A66FCE3F7) - 0x39766C5E90D46F8FLL) ^ ((v616 ^ v528 ^ 0x4562C410394CA20CLL)
                                                                        + 0x7DE1E1AB309BD18CLL) ^ ((v616 ^ v528 ^ 0x2FCC31F66D047AFDLL)
                                                                                                 + 0x174F144D64D3097BLL);
  v618 = ((v617 - 0x4FD33E66EFFC3BC8) ^ 0xB303DB5FB210E247) & (2
                                                                 * ((v617 - 0x4FD33E66EFFC3BC8) & 0xA3ABD81FB498F346)) ^ (v617 - 0x4FD33E66EFFC3BC8) & 0xA3ABD81FB498F346;
  v619 = ((2 * ((v617 - 0x4FD33E66EFFC3BC8) ^ 0xF5127B5F9A2140CFLL)) ^ 0xAD7346805D736712) & ((v617
                                                                                                 - 0x4FD33E66EFFC3BC8) ^ 0xF5127B5F9A2140CFLL) ^ (2 * ((v617 - 0x4FD33E66EFFC3BC8) ^ 0xF5127B5F9A2140CFLL)) & 0x56B9A3402EB9B388;
  v620 = (v619 ^ 0x431000004210300) & (4 * v618) ^ v618;
  v621 = ((4 * (v619 ^ 0x5288A14022889089)) ^ 0x5AE68D00BAE6CE24) & (v619 ^ 0x5288A14022889089) ^ (4 * (v619 ^ 0x5288A14022889089)) & 0x56B9A3402EB9B388;
  v622 = (v621 ^ 0x52A081002AA08200) & (16 * v620) ^ v620;
  v623 = ((16 * (v621 ^ 0x419224004193189)) ^ 0x6B9A3402EB9B3890) & (v621 ^ 0x419224004193189) ^ (16 * (v621 ^ 0x419224004193189)) & 0x56B9A3402EB9B380;
  v624 = (v623 ^ 0x429820002A993000) & (v622 << 8) ^ v622;
  v625 = (((v623 ^ 0x1421834004208309) << 8) ^ 0xB9A3402EB9B38900) & (v623 ^ 0x1421834004208309) ^ ((v623 ^ 0x1421834004208309) << 8) & 0x56B9A3402EB9B300;
  v626 = v624 ^ 0x56B9A3402EB9B389 ^ (v625 ^ 0x10A1000028B10000) & (v624 << 16);
  v627 = ((v617 - 0x4FD33E66EFFC3BC8) ^ (2
                                         * ((v626 << 32) & 0x56B9A34000000000 ^ v626 ^ ((v626 << 32) ^ 0x2EB9B38900000000) & (((v625 ^ 0x4618A34006083289) << 16) & 0x56B9A34000000000 ^ 0x54B9814000000000 ^ (((v625 ^ 0x4618A34006083289) << 16) ^ 0x23402EB900000000) & (v625 ^ 0x4618A34006083289))))) >> 32;
  v628 = v617
       - 0x485D3E4B16D190A3
       + (((v627 ^ 0xAEF6C69E05795646) - 0x17C2474B6CCFDD7ELL) ^ ((v627 ^ 0x40AA3C9240BE5009) + 0x66142B8D6F724CFLL) ^ ((v627 ^ 0xEE5CFA0C466CDED0) - 0x57687BD92FDA55E8));
  v629 = (v628 ^ 0x146A519141235BE4) & (2 * (v628 & 0x556A59D9458B9BC8)) ^ v628 & 0x556A59D9458B9BC8;
  v630 = ((2 * (v628 ^ 0x967E6113CB325E74)) ^ 0x862871951D738B78) & (v628 ^ 0x967E6113CB325E74) ^ (2 * (v628 ^ 0x967E6113CB325E74)) & 0xC31438CA8EB9C5BCLL;
  v631 = (v630 ^ 0x820020800C308120) & (4 * v629) ^ v629;
  v632 = ((4 * (v630 ^ 0x4114084A82884484)) ^ 0xC50E32A3AE716F0) & (v630 ^ 0x4114084A82884484) ^ (4 * (v630 ^ 0x4114084A82884484)) & 0xC31438CA8EB9C5BCLL;
  v633 = (v632 ^ 0x10200A0AA104A0) & (16 * v631) ^ v631;
  v634 = ((16 * (v632 ^ 0xC30418C08418C10CLL)) ^ 0x31438CA8EB9C5BC0) & (v632 ^ 0xC30418C08418C10CLL) ^ (16 * (v632 ^ 0xC30418C08418C10CLL)) & 0xC31438CA8EB9C5B0;
  v635 = (v634 ^ 0x10008888A984100) & (v633 << 8) ^ v633;
  v636 = (((v634 ^ 0xC21430420421843CLL) << 8) ^ 0x1438CA8EB9C5BC00) & (v634 ^ 0xC21430420421843CLL) ^ ((v634 ^ 0xC21430420421843CLL) << 8) & 0xC31438CA8EB9C500;
  v637 = v635 ^ 0xC31438CA8EB9C5BCLL ^ (v636 ^ 0x10088A88810000) & (v635 << 16);
  v638 = (v628 ^ (2
                * ((v637 << 32) & 0x431438CA00000000 ^ v637 ^ ((v637 << 32) ^ 0xEB9C5BC00000000) & (((v636 ^ 0xC3043040063841BCLL) << 16) & 0x431438CA00000000 ^ 0x4314304200000000 ^ (((v636 ^ 0xC3043040063841BCLL) << 16) ^ 0x38CA8EB900000000) & (v636 ^ 0xC3043040063841BCLL))))) >> 16;
  v639 = v628
       - 0x6B79834CC1F37381
       + (((v638 ^ 0x5E7A907BBD5E08DDLL) + 0x481A1A59E11A9FD1) ^ ((v638 ^ 0xB5C65CFA75DB91CALL) - 0x5C592927D660F938) ^ ((v638 ^ 0xEBBC1BE3E1D9C1EFLL) - 0x2236E3E4262A91DLL));
  v640 = (v639 ^ 0x29A7FC15B77BE52) & (2 * (v639 & 0xAA837FE592663F53)) ^ v639 & 0xAA837FE592663F53;
  v641 = ((2 * (v639 ^ 0x139A894A5B7FAC54)) ^ 0x7233ED5F9233260ELL) & (v639 ^ 0x139A894A5B7FAC54) ^ (2 * (v639 ^ 0x139A894A5B7FAC54)) & 0xB919F6AFC9199306;
  v642 = (v641 ^ 0x3011E40E80110204) & (4 * v640) ^ v640;
  v643 = ((4 * (v641 ^ 0x890812A049089101)) ^ 0xE467DABF24664C1CLL) & (v641 ^ 0x890812A049089101) ^ (4 * (v641 ^ 0x890812A049089101)) & 0xB919F6AFC9199304;
  v644 = (v643 ^ 0xA001D2AF00000000) & (16 * v642) ^ v642;
  v645 = ((16 * (v643 ^ 0x19182400C9199303)) ^ 0x919F6AFC91993070) & (v643 ^ 0x19182400C9199303) ^ (16 * (v643 ^ 0x19182400C9199303)) & 0xB919F6AFC9199300;
  v646 = (v645 ^ 0x911962AC81191000) & (v644 << 8) ^ v644;
  v647 = (((v645 ^ 0x2800940348008307) << 8) ^ 0x19F6AFC919930700) & (v645 ^ 0x2800940348008307) ^ ((v645 ^ 0x2800940348008307) << 8) & 0xB919F6AFC9199300;
  v648 = v646 ^ 0xB919F6AFC9199307 ^ (v647 ^ 0x1910A68909110000) & (v646 << 16);
  v649 = (v639 ^ (2
                * ((v648 << 32) & 0x3919F6AF00000000 ^ v648 ^ ((v648 << 32) ^ 0x4919930700000000) & (((v647 ^ 0xA0095026C0089007) << 16) & 0x3919F6AF00000000 ^ 0x91036A600000000 ^ (((v647 ^ 0xA0095026C0089007) << 16) ^ 0x76AFC91900000000) & (v647 ^ 0xA0095026C0089007))))) >> 8;
  v650 = v639
       - (((v649 ^ 0xD5C8B4F23268DAD4) + 0x6D9A21562B03C2FDLL) ^ ((v649 ^ 0xFF5D137120C07BAALL) + 0x470F86D539AB6383) ^ ((v649 ^ 0x2A5F2435A6A8F467) - 0x6DF24E6E403C13B0));
  LODWORD(STACK[0x6A00]) = v650 - 292663254 - ((2 * (v650 - 213498281)) & 0xF69013A6);
  v651 = v481 + 996;
  v652 = STACK[0x6960];
  v653 = LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6750]) ^ 0xF23512F5;
  v654 = STACK[0x6570];
  v655 = LODWORD(STACK[0x6570]) ^ LODWORD(STACK[0x6760]) ^ 0x25F56C2E;
  v656 = STACK[0x6990];
  if (!v466)
    v656 = STACK[0x69A0];
  LODWORD(STACK[0x6660]) = v656;
  v657 = STACK[0x69C0];
  if (v466)
    v657 = STACK[0x6A10];
  LODWORD(STACK[0x6668]) = v657;
  v658 = STACK[0x68D0];
  if (!v466)
    v658 = STACK[0x6920];
  LODWORD(STACK[0x65B8]) = v658;
  LODWORD(STACK[0x66F8]) = v464;
  if (v466)
    v659 = STACK[0x68B0];
  else
    v659 = v464;
  LODWORD(STACK[0x6650]) = v659;
  v660 = STACK[0x6770];
  if (v466)
    v660 = STACK[0x6980];
  LODWORD(STACK[0x65B0]) = v660;
  if ((((_BYTE)v481 - 28) & 1) == 0)
    v653 = v655;
  LODWORD(STACK[0x69E0]) = v653;
  v661 = v652 ^ LODWORD(STACK[0x6708]) ^ 0x82486756;
  v662 = v654 ^ LODWORD(STACK[0x6730]) ^ 0x5375A6A4;
  v663 = v654 ^ LODWORD(STACK[0x6710]) ^ 0xD3399C4;
  if ((((_BYTE)v481 - 28) & 1) != 0)
    v664 = v654 ^ LODWORD(STACK[0x6730]) ^ 0x5375A6A4;
  else
    v664 = v483 ^ 0x8E290E5D;
  LODWORD(STACK[0x69D0]) = v664;
  if ((v651 & 1) != 0)
    v665 = v483 ^ 0x8E290E5D;
  else
    v665 = v661;
  LODWORD(STACK[0x6760]) = v665;
  if ((v651 & 1) == 0)
    v661 = v663;
  LODWORD(STACK[0x6960]) = v661;
  if ((v651 & 1) != 0)
    v666 = v663;
  else
    v666 = v662;
  LODWORD(STACK[0x6750]) = v666;
  v667 = LODWORD(STACK[0x68E0]) ^ 0x62C9FEA9 ^ (v475 + 1);
  v668 = LODWORD(STACK[0x67C0]) ^ 0x4D480882 ^ (LODWORD(STACK[0x68C0]) - 488510463);
  v669 = LODWORD(STACK[0x67C0]) ^ 0x4A46C5C7 ^ (LODWORD(STACK[0x6600]) - 488510463);
  v670 = LODWORD(STACK[0x67A0]) ^ 0xE9AB7E20 ^ LODWORD(STACK[0x6618]);
  v671 = LODWORD(STACK[0x68F0]) ^ 0x9FE6F67D ^ LODWORD(STACK[0x6608]);
  v672 = LODWORD(STACK[0x6900]) ^ 0x80171811 ^ v478;
  v673 = LODWORD(STACK[0x6900]) ^ 0x80171811 ^ v477;
  v674 = LODWORD(STACK[0x6900]) ^ (LODWORD(STACK[0x6930]) + 1348477686) ^ 0x78E62AAB;
  if ((v651 & 1) != 0)
    v675 = v672;
  else
    v675 = LODWORD(STACK[0x68F0]) ^ 0x9FE6F67D ^ LODWORD(STACK[0x6608]);
  if ((v651 & 1) != 0)
    v672 = LODWORD(STACK[0x6900]) ^ 0x80171811 ^ v477;
  LODWORD(STACK[0x6930]) = v672;
  if ((v651 & 1) != 0)
    v676 = v674;
  else
    v676 = v673;
  if ((v651 & 1) == 0)
    v671 = v674;
  LODWORD(STACK[0x68C0]) = v671;
  v677 = LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x6940]) ^ 0x9721F8DF;
  v678 = LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x69B0]);
  v679 = v678 ^ (LODWORD(STACK[0x6870]) - 1515667310) ^ 0xC8077CBD;
  v680 = v678 ^ (LODWORD(STACK[0x6860]) - 1515667310) ^ 0xED077CBD;
  v681 = STACK[0x6780];
  if ((v651 & 1) != 0)
    v681 = STACK[0x6740];
  LODWORD(STACK[0x6940]) = v681;
  v682 = LODWORD(STACK[0x6648]) ^ (LODWORD(STACK[0x6A30]) + 1734166760) ^ 0xFC5E0BD6;
  v683 = LODWORD(STACK[0x6648]) ^ (LODWORD(STACK[0x68A0]) + 1734166760) ^ 0xBEC0CDB8;
  v684 = LODWORD(STACK[0x6648]) ^ (LODWORD(STACK[0x6880]) + 1734166760) ^ 0x95C0CDB8;
  if ((v651 & 1) != 0)
    v685 = v667;
  else
    v685 = LODWORD(STACK[0x6648]) ^ (LODWORD(STACK[0x6A30]) + 1734166760) ^ 0xFC5E0BD6;
  LODWORD(STACK[0x6870]) = v685;
  if ((v651 & 1) == 0)
    v682 = v683;
  LODWORD(STACK[0x65D8]) = v682;
  if ((v651 & 1) != 0)
    v686 = v683;
  else
    v686 = v684;
  LODWORD(STACK[0x6860]) = v686;
  if ((v651 & 1) != 0)
    v667 = v684;
  LODWORD(STACK[0x65A8]) = v667;
  v687 = STACK[0x6A90];
  v688 = LODWORD(STACK[0x6A90]) ^ 0x456EF6CC;
  if ((v651 & 1) != 0)
    v689 = v668;
  else
    v689 = v669;
  LODWORD(STACK[0x68A0]) = v689;
  if ((v651 & 1) == 0)
    v669 = v688;
  LODWORD(STACK[0x6740]) = v669;
  if ((v651 & 1) == 0)
    v688 = v670;
  LODWORD(STACK[0x6880]) = v688;
  if ((v651 & 1) != 0)
    v690 = v670;
  else
    v690 = v668;
  LODWORD(STACK[0x6730]) = v690;
  v691 = *(_QWORD *)(STACK[0x65E8] + 8);
  v692 = 0x41B14FC555EB8BCBLL * v691 - 0x2A49C516F3F0501ALL;
  v693 = (v692 ^ 0xA301A1D6FBE10890) & (2 * (v692 & 0x2A49C516F3F0501ALL)) ^ v692 & 0x2A49C516F3F0501ALL;
  v694 = ((2 * (v692 ^ 0xA310ABFBFA61A890)) ^ 0x12B2DDDA1323F114) & (v692 ^ 0xA310ABFBFA61A890) ^ (2 * (v692 ^ 0xA310ABFBFA61A890)) & 0x89596EED0991F88ALL;
  v695 = (v694 ^ 0xCC80101C000) & (4 * v693) ^ v693;
  v696 = LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6620]) ^ 0x48AFBC2F ^ v654;
  if ((v651 & 1) != 0)
    v697 = v677;
  else
    v697 = v680;
  LODWORD(STACK[0x6A30]) = v697;
  if ((v651 & 1) == 0)
    v680 = v696;
  LODWORD(STACK[0x6780]) = v680;
  if ((v651 & 1) != 0)
    v698 = v696;
  else
    v698 = v679;
  LODWORD(STACK[0x6970]) = v698;
  if ((v651 & 1) != 0)
    v677 = v679;
  LODWORD(STACK[0x6710]) = v677;
  v699 = ((4 * (v694 ^ 0x894922250890088ALL)) ^ 0x2565BBB42647E228) & (v694 ^ 0x894922250890088ALL) ^ (4 * (v694 ^ 0x894922250890088ALL)) & 0x89596EED0991F888;
  v700 = (v699 ^ 0x1412AA40001E000) & (16 * v695) ^ v695;
  v701 = ((16 * (v699 ^ 0x8818444909901882)) ^ 0x9596EED0991F88A0) & (v699 ^ 0x8818444909901882) ^ (16 * (v699 ^ 0x8818444909901882)) & 0x89596EED0991F880;
  v702 = (v701 ^ 0x81106EC009118800) & (v700 << 8) ^ v700;
  v703 = (((v701 ^ 0x849002D0080700ALL) << 8) ^ 0x596EED0991F88A00) & (v701 ^ 0x849002D0080700ALL) ^ ((v701 ^ 0x849002D0080700ALL) << 8) & 0x89596EED0991F800;
  v704 = v702 ^ 0x89596EED0991F88ALL ^ (v703 ^ 0x9486C0901900000) & (v702 << 16);
  v705 = v692 ^ (2
               * ((v704 << 32) & 0x9596EED00000000 ^ v704 ^ ((v704 << 32) ^ 0x991F88A00000000) & (((v703 ^ 0x801102E40801708ALL) << 16) & 0x9596EED00000000 ^ 0x110666C00000000 ^ (((v703 ^ 0x801102E40801708ALL) << 16) ^ 0x6EED099100000000) & (v703 ^ 0x801102E40801708ALL))));
  v706 = (((v650 - 0x216E25AF0CB9B9A9) ^ v705 ^ 0x5BF4FB13FE7811ABLL) - 0x77919766DA139599) ^ (((v650 - 0x216E25AF0CB9B9A9) ^ v705 ^ 0x72FCBB83F3C0E4CCLL)
                                                                                                 - 0x5E99D7F6D7AB60FELL) ^ (((v650 - 0x216E25AF0CB9B9A9) ^ v705 ^ 0x3D1894CED6B5469) - 0x2FB4E539C900D05BLL);
  v707 = ((v706 + 0x6FCE7E47E859DC02) ^ 0xD4EDA76D995C0C33) & (2
                                                                 * ((v706 + 0x6FCE7E47E859DC02) & 0x96EE2761DC5E493BLL)) ^ (v706 + 0x6FCE7E47E859DC02) & 0x96EE2761DC5E493BLL;
  v708 = ((2 * ((v706 + 0x6FCE7E47E859DC02) ^ 0xF061E36EB9D80E13)) ^ 0xCD1F881ECB0C8E50) & ((v706
                                                                                                 + 0x6FCE7E47E859DC02) ^ 0xF061E36EB9D80E13) ^ (2 * ((v706 + 0x6FCE7E47E859DC02) ^ 0xF061E36EB9D80E13)) & 0x668FC40F65864728;
  v709 = (v708 ^ 0x4409800E41000400) & (4 * v707) ^ v707;
  v710 = ((4 * (v708 ^ 0x2280440124824128)) ^ 0x9A3F103D96191CA0) & (v708 ^ 0x2280440124824128) ^ (4 * (v708 ^ 0x2280440124824128)) & 0x668FC40F65864728;
  v711 = (v710 ^ 0x20F000D04000420) & (16 * v709) ^ v709;
  v712 = ((16 * (v710 ^ 0x6480C40261864308)) ^ 0x68FC40F658647280) & (v710 ^ 0x6480C40261864308) ^ (16 * (v710 ^ 0x6480C40261864308)) & 0x668FC40F65864720;
  v713 = (v712 ^ 0x608C400640044200) & (v711 << 8) ^ v711;
  v714 = (((v712 ^ 0x603840925820528) << 8) ^ 0x8FC40F6586472800) & (v712 ^ 0x603840925820528) ^ ((v712 ^ 0x603840925820528) << 8) & 0x668FC40F65864700;
  v715 = v713 ^ 0x668FC40F65864728 ^ (v714 ^ 0x684040504060000) & (v713 << 16);
  v716 = ((v706 + 0x6FCE7E47E859DC02) ^ (2
                                         * ((v715 << 32) & 0x668FC40F00000000 ^ v715 ^ ((v715 << 32) ^ 0x6586472800000000) & (((v714 ^ 0x600BC00A61804728) << 16) & 0x668FC40F00000000 ^ 0x2280800900000000 ^ (((v714 ^ 0x600BC00A61804728) << 16) ^ 0x440F658600000000) & (v714 ^ 0x600BC00A61804728))))) >> 32;
  v717 = v706
       + 0x1D20DDC37CE0FE40
       + (((v716 ^ 0x28526DD8A10622C0) + 0x440E9FD9B30886C7) ^ ((v716 ^ 0xFC82A5A982FCF7A4) - 0x6F21A8576F0DAC5DLL) ^ ((v716 ^ 0xD4D0C871B107F20BLL) - 0x4773C58F5CF6A9F2));
  v718 = (v717 ^ 0x783E81F6F4D3A353) & (2 * (v717 & 0x7D3ED5E4C6E3A393)) ^ v717 & 0x7D3ED5E4C6E3A393;
  v719 = ((2 * (v717 ^ 0xC257A37FF153A671)) ^ 0x7ED2ED366F600BC4) & (v717 ^ 0xC257A37FF153A671) ^ (2 * (v717 ^ 0xC257A37FF153A671)) & 0xBF69769B37B005E2;
  v720 = (v719 ^ 0x3C406412270000C0) & (4 * v718) ^ v718;
  v721 = ((4 * (v719 ^ 0x8129128910900422)) ^ 0xFDA5DA6CDEC01788) & (v719 ^ 0x8129128910900422) ^ (4 * (v719 ^ 0x8129128910900422)) & 0xBF69769B37B005E0;
  v722 = (v721 ^ 0xBD21520816800580) & (16 * v720) ^ v720;
  v723 = ((16 * (v721 ^ 0x248249321300062)) ^ 0xF69769B37B005E20) & (v721 ^ 0x248249321300062) ^ (16 * (v721 ^ 0x248249321300062)) & 0xBF69769B37B005E0;
  v724 = (v723 ^ 0xB601609333000400) & (v722 << 8) ^ v722;
  v725 = (((v723 ^ 0x968160804B001C2) << 8) ^ 0x69769B37B005E200) & (v723 ^ 0x968160804B001C2) ^ ((v723 ^ 0x968160804B001C2) << 8) & 0xBF69769B37B00500;
  v726 = v724 ^ 0xBF69769B37B005E2 ^ (v725 ^ 0x2960121330000000) & (v724 << 16);
  v727 = (v717 ^ (2
                * ((v726 << 32) & 0x3F69769B00000000 ^ v726 ^ ((v726 << 32) ^ 0x37B005E200000000) & (((v725 ^ 0x9609648807B005E2) << 16) & 0x3F69769B00000000 ^ 0x960400B00000000 ^ (((v725 ^ 0x9609648807B005E2) << 16) ^ 0x769B37B000000000) & (v725 ^ 0x9609648807B005E2))))) >> 16;
  v728 = v717
       + 0x4578F93E3C5DC83DLL
       + (((v727 ^ 0xA8AE123EC271A54ELL) - 0x2EE82A0BB5C15E99) ^ ((v727 ^ 0xC1ABBFDD5EAC74E3) - 0x47ED87E8291C8F34) ^ ((v727 ^ 0x6905C04FAD0B782ELL) + 0x10BC078525447C07));
  v729 = (v728 ^ 0x3CEFB33F88E829ABLL) & (2 * (v728 & 0xBE0C323FD0EC2DAALL)) ^ v728 & 0xBE0C323FD0EC2DAALL;
  v730 = ((2 * (v728 ^ 0x6CF7F30B88303ABFLL)) ^ 0xA5F78268B1B82E2ALL) & (v728 ^ 0x6CF7F30B88303ABFLL) ^ (2 * (v728 ^ 0x6CF7F30B88303ABFLL)) & 0xD2FBC13458DC1714;
  v731 = (v730 ^ 0x8071802000900600) & (4 * v729) ^ v729;
  v732 = ((4 * (v730 ^ 0x5208411448441115)) ^ 0x4BEF04D163705C54) & (v730 ^ 0x5208411448441115) ^ (4 * (v730 ^ 0x5208411448441115)) & 0xD2FBC13458DC1714;
  v733 = (v732 ^ 0x42EB001040501400) & (16 * v731) ^ v731;
  v734 = ((16 * (v732 ^ 0x9010C124188C0301)) ^ 0x2FBC13458DC17150) & (v732 ^ 0x9010C124188C0301) ^ (16 * (v732 ^ 0x9010C124188C0301)) & 0xD2FBC13458DC1710;
  v735 = (v734 ^ 0x2B8010408C01100) & (v733 << 8) ^ v733;
  v736 = (((v734 ^ 0xD043C030501C0605) << 8) ^ 0xFBC13458DC171500) & (v734 ^ 0xD043C030501C0605) ^ ((v734 ^ 0xD043C030501C0605) << 8) & 0xD2FBC13458DC1700;
  v737 = v735 ^ 0xD2FBC13458DC1715 ^ (v736 ^ 0xD2C1001058140000) & (v735 << 16);
  v738 = (v728 ^ (2
                * ((v737 << 32) & 0x52FBC13400000000 ^ v737 ^ ((v737 << 32) ^ 0x58DC171500000000) & (((v736 ^ 0x3AC12400C80215) << 16) & 0x52FBC13400000000 ^ 0x12CB812000000000 ^ (((v736 ^ 0x3AC12400C80215) << 16) ^ 0x413458DC00000000) & (v736 ^ 0x3AC12400C80215))))) >> 8;
  v739 = v728
       - (((v738 ^ 0xAE59BDA83C495015) + 0x39A02A9CD2EE6648) ^ ((v738 ^ 0x1D8044F80E81FD65) - 0x75862C331FD934C8) ^ ((v738 ^ 0xB363B2E24DA9F973) + 0x249A25D6A30ECF22));
  v740 = ((v739 - 0x2CF58F7E5A3471ALL) ^ 0x9B850944F3A2D8C5) & (2
                                                                * ((v739 - 0x2CF58F7E5A3471ALL) & 0xD395AC16FBCA90E8)) ^ (v739 - 0x2CF58F7E5A3471ALL) & 0xD395AC16FBCA90E8;
  v741 = ((2 * ((v739 - 0x2CF58F7E5A3471ALL) ^ 0x3D8E09642533F915)) ^ 0xDC374AE5BDF2D3FALL) & ((v739
                                                                                                - 0x2CF58F7E5A3471ALL) ^ 0x3D8E09642533F915) ^ (2 * ((v739 - 0x2CF58F7E5A3471ALL) ^ 0x3D8E09642533F915)) & 0xEE1BA572DEF969FCLL;
  v742 = (v741 ^ 0xCC1300609C7041E0) & (4 * v740) ^ v740;
  v743 = ((4 * (v741 ^ 0x2208A51242092805)) ^ 0xB86E95CB7BE5A7F4) & (v741 ^ 0x2208A51242092805) ^ (4 * (v741 ^ 0x2208A51242092805)) & 0xEE1BA572DEF969FCLL;
  v744 = (v743 ^ 0xA80A85425AE121E0) & (16 * v742) ^ v742;
  v745 = ((16 * (v743 ^ 0x4611203084184809)) ^ 0xE1BA572DEF969FD0) & (v743 ^ 0x4611203084184809) ^ (16 * (v743 ^ 0x4611203084184809)) & 0xEE1BA572DEF969F0;
  v746 = (v745 ^ 0xE01A0520CE900900) & (v744 << 8) ^ v744;
  v747 = (((v745 ^ 0xE01A0521069602DLL) << 8) ^ 0x1BA572DEF969FD00) & (v745 ^ 0xE01A0521069602DLL) ^ ((v745 ^ 0xE01A0521069602DLL) << 8) & 0xEE1BA572DEF96900;
  v748 = v746 ^ 0xEE1BA572DEF969FDLL ^ (v747 ^ 0xA012052D8690000) & (v746 << 16);
  v749 = (v739 - 0x2CF58F7E5A3471ALL) ^ (2
                                       * ((v748 << 32) & 0x6E1BA57200000000 ^ v748 ^ ((v748 << 32) ^ 0x5EF969FD00000000) & (((v747 ^ 0xE41A8520069000FDLL) << 16) & 0x6E1BA57200000000 ^ 0x4A09210200000000 ^ (((v747 ^ 0xE41A8520069000FDLL) << 16) ^ 0x2572DEF900000000) & (v747 ^ 0xE41A8520069000FDLL))));
  STACK[0x69F0] = v749;
  v705 ^= 0xAEBDE95B6575554ALL;
  v750 = ((v749 ^ v705 ^ 0x7D350965B5E49577) + 0x5D75B4A625B9F92BLL) ^ ((v749 ^ v705 ^ 0xC6D3FFF3E1386269)
                                                                        - 0x196CBDCF8E9AF1CBLL) ^ ((v749 ^ v705 ^ 0xAC12720297424048)
                                                                                                 - 0x73AD303EF8E0D3EALL);
  v751 = ((v750 - 0x21D31DC602F70F8ELL) ^ 0xE81CC04CAF3BA42ALL) & (2
                                                                 * ((v750 - 0x21D31DC602F70F8ELL) & 0xEA1EE46EAF333483)) ^ (v750 - 0x21D31DC602F70F8ELL) & 0xEA1EE46EAF333483;
  v752 = ((2 * ((v750 - 0x21D31DC602F70F8ELL) ^ 0x6821C008EF79E52CLL)) ^ 0x47E48CC8095A35ELL) & ((v750
                                                                                                - 0x21D31DC602F70F8ELL) ^ 0x6821C008EF79E52CLL) ^ (2 * ((v750 - 0x21D31DC602F70F8ELL) ^ 0x6821C008EF79E52CLL)) & 0x823F2466404AD1AELL;
  v753 = (v752 ^ 0x3E00440000800CLL) & (4 * v751) ^ v751;
  v754 = ((4 * (v752 ^ 0x82012422404A50A1)) ^ 0x8FC9199012B46BCLL) & (v752 ^ 0x82012422404A50A1) ^ (4 * (v752 ^ 0x82012422404A50A1)) & 0x823F2466404AD1ACLL;
  v755 = (v754 ^ 0x3C0000000A40A0) & (16 * v753) ^ v753;
  v756 = ((16 * (v754 ^ 0x8203246640409103)) ^ 0x23F2466404AD1AF0) & (v754 ^ 0x8203246640409103) ^ (16 * (v754 ^ 0x8203246640409103)) & 0x823F2466404AD1A0;
  v757 = (v756 ^ 0x232046400081000) & (v755 << 8) ^ v755;
  v758 = (((v756 ^ 0x800D20024042C10FLL) << 8) ^ 0x3F2466404AD1AF00) & (v756 ^ 0x800D20024042C10FLL) ^ ((v756 ^ 0x800D20024042C10FLL) << 8) & 0x823F2466404AD100;
  v759 = v757 ^ 0x823F2466404AD1AFLL ^ (v758 ^ 0x224244040400000) & (v757 << 16);
  v760 = ((v750 - 0x21D31DC602F70F8ELL) ^ (2
                                         * ((v759 << 32) & 0x23F246600000000 ^ v759 ^ ((v759 << 32) ^ 0x404AD1AF00000000) & (((v758 ^ 0x801B0026000A50AFLL) << 16) & 0x23F246600000000 ^ 0x219242400000000 ^ (((v758 ^ 0x801B0026000A50AFLL) << 16) ^ 0x2466404A00000000) & (v758 ^ 0x801B0026000A50AFLL))))) >> 32;
  v761 = v750
       - 0x5BDF56A848A452CFLL
       + (((v760 ^ 0xAC2E36F4FB2B59F6) - 0x38FBFA1B37CA0258) ^ ((v760 ^ 0xD5510CA3E0F34EECLL) - 0x4184C04C2C121542) ^ ((v760 ^ 0x797F3A57F5ACBBF4) + 0x12550947C6B21FA6));
  v762 = (v761 ^ 0x3054E365C6764FC4) & (2 * (v761 & 0xB900EA4017766F04)) ^ v761 & 0xB900EA4017766F04;
  v763 = ((2 * (v761 ^ 0x3255E7E5C6BA81C4)) ^ 0x16AA1B4BA399DD80) & (v761 ^ 0x3255E7E5C6BA81C4) ^ (2 * (v761 ^ 0x3255E7E5C6BA81C4)) & 0x8B550DA5D1CCEEC0;
  v764 = (v763 ^ 0x9008188CC00) & (4 * v762) ^ v762;
  v765 = ((4 * (v763 ^ 0x895504A450442240)) ^ 0x2D5436974733BB00) & (v763 ^ 0x895504A450442240) ^ (4 * (v763 ^ 0x895504A450442240)) & 0x8B550DA5D1CCEEC0;
  v766 = (v765 ^ 0x95404854100AA00) & (16 * v764) ^ v764;
  v767 = ((16 * (v765 ^ 0x8201092090CC44C0)) ^ 0xB550DA5D1CCEEC00) & (v765 ^ 0x8201092090CC44C0) ^ (16 * (v765 ^ 0x8201092090CC44C0)) & 0x8B550DA5D1CCEEC0;
  v768 = (v767 ^ 0x8150080510CCEC00) & (v766 << 8) ^ v766;
  v769 = (((v767 ^ 0xA0505A0C10002C0) << 8) ^ 0x550DA5D1CCEEC000) & (v767 ^ 0xA0505A0C10002C0) ^ ((v767 ^ 0xA0505A0C10002C0) << 8) & 0x8B550DA5D1CCEE00;
  v770 = v768 ^ 0x8B550DA5D1CCEEC0 ^ (v769 ^ 0x1050581C0CC0000) & (v768 << 16);
  v771 = (v761 ^ (2
                * ((v770 << 32) & 0xB550DA500000000 ^ v770 ^ ((v770 << 32) ^ 0x51CCEEC000000000) & (((v769 ^ 0x8A50082411002EC0) << 16) & 0xB550DA500000000 ^ 0x2500C2100000000 ^ (((v769 ^ 0x8A50082411002EC0) << 16) ^ 0xDA5D1CC00000000) & (v769 ^ 0x8A50082411002EC0))))) >> 16;
  v772 = v761
       + 0x7BE8153763437A4CLL
       + (((v771 ^ 0x73CE839C23F9D5FLL) - 0x59A789AA9B6FB40ELL) ^ ((v771 ^ 0xA974A7ADE39D7481) + 0x81039C14532A230) ^ ((v771 ^ 0xAE48E2B6C9A95D31) + 0xF2C7CDA6F068BA0));
  v773 = (v772 ^ 0xD3248DBA756C1876) & (2 * (v772 & 0x9BB4A1BA658E9276)) ^ v772 & 0x9BB4A1BA658E9276;
  v774 = ((2 * (v772 ^ 0xD42CCECAFF7418BALL)) ^ 0x9F30DEE135F51598) & (v772 ^ 0xD42CCECAFF7418BALL) ^ (2 * (v772 ^ 0xD42CCECAFF7418BALL)) & 0x4F986F709AFA8ACCLL;
  v775 = (v774 ^ 0xF100E6010700088) & (4 * v773) ^ v773;
  v776 = ((4 * (v774 ^ 0x408821108A0A8A44)) ^ 0x3E61BDC26BEA2B30) & (v774 ^ 0x408821108A0A8A44) ^ (4 * (v774 ^ 0x408821108A0A8A44)) & 0x4F986F709AFA8ACCLL;
  v777 = (v776 ^ 0xE002D400AEA0A00) & (16 * v775) ^ v775;
  v778 = ((16 * (v776 ^ 0x41984230901080CCLL)) ^ 0xF986F709AFA8ACC0) & (v776 ^ 0x41984230901080CCLL) ^ (16 * (v776 ^ 0x41984230901080CCLL)) & 0x4F986F709AFA8AC0;
  v779 = (v778 ^ 0x498067008AA88800) & (v777 << 8) ^ v777;
  v780 = (((v778 ^ 0x61808701052020CLL) << 8) ^ 0x986F709AFA8ACC00) & (v778 ^ 0x61808701052020CLL) ^ ((v778 ^ 0x61808701052020CLL) << 8) & 0x4F986F709AFA8A00;
  v781 = v779 ^ 0x4F986F709AFA8ACCLL ^ (v780 ^ 0x80860109A8A0000) & (v779 << 16);
  v782 = (v772 ^ (2
                * ((v781 << 32) & 0x4F986F7000000000 ^ v781 ^ ((v781 << 32) ^ 0x1AFA8ACC00000000) & (((v780 ^ 0x47900F60007002CCLL) << 16) & 0x4F986F7000000000 ^ 0x88650000000000 ^ (((v780 ^ 0x47900F60007002CCLL) << 16) ^ 0x6F709AFA00000000) & (v780 ^ 0x47900F60007002CCLL))))) >> 8;
  v783 = v772
       - (((v782 ^ 0xA537CCC718B6010CLL) + 0x5AED66DDAF251A29) ^ ((v782 ^ 0x1D34F949769B64A1) - 0x1D11ACAC3EF7807ALL) ^ ((v782 ^ 0xB81281E5B57D1E2ALL) + 0x47C82BFF02EE050FLL));
  v784 = ((v783 + 0x616DFCB1DA794A26) ^ 0x21AE07C2AA0C6AD5) & (2
                                                                 * ((v783 + 0x616DFCB1DA794A26) & 0xB58807D2AB4D62C6)) ^ (v783 + 0x616DFCB1DA794A26) & 0xB58807D2AB4D62C6;
  v785 = ((2 * ((v783 + 0x616DFCB1DA794A26) ^ 0x6BAE0546EE1C2ED9)) ^ 0xBC4C05288AA2983ELL) & ((v783
                                                                                                 + 0x616DFCB1DA794A26) ^ 0x6BAE0546EE1C2ED9) ^ (2 * ((v783 + 0x616DFCB1DA794A26) ^ 0x6BAE0546EE1C2ED9)) & 0xDE26029445514C1ELL;
  v786 = (v785 ^ 0x9C00000000000818) & (4 * v784) ^ v784;
  v787 = ((4 * (v785 ^ 0x4222029445514401)) ^ 0x78980A511545307CLL) & (v785 ^ 0x4222029445514401) ^ (4 * (v785 ^ 0x4222029445514401)) & 0xDE26029445514C1CLL;
  v788 = (v787 ^ 0x5800021005410000) & (16 * v786) ^ v786;
  v789 = ((16 * (v787 ^ 0x8626008440104C03)) ^ 0xE26029445514C1F0) & (v787 ^ 0x8626008440104C03) ^ (16 * (v787 ^ 0x8626008440104C03)) & 0xDE26029445514C10;
  v790 = (v789 ^ 0xC220000445104000) & (v788 << 8) ^ v788;
  v791 = (((v789 ^ 0x1C06029000410C0FLL) << 8) ^ 0x26029445514C1F00) & (v789 ^ 0x1C06029000410C0FLL) ^ ((v789 ^ 0x1C06029000410C0FLL) << 8) & 0xDE26029445514C00;
  v792 = v790 ^ 0xDE26029445514C1FLL ^ (v791 ^ 0x602000441400000) & (v790 << 16);
  v793 = (v783 + 0x616DFCB1DA794A26) ^ (2
                                        * ((v792 << 32) & 0x5E26029400000000 ^ v792 ^ ((v792 << 32) ^ 0x45514C1F00000000) & (((v791 ^ 0xD82402900411401FLL) << 16) & 0x5E26029400000000 ^ 0x5C22028400000000 ^ (((v791 ^ 0xD82402900411401FLL) << 16) ^ 0x294455100000000) & (v791 ^ 0xD82402900411401FLL))));
  STACK[0x6708] = v793;
  v794 = ((v793 ^ v705 ^ 0x27366DFB42169BF7) + 0x309ADBBAF47055DCLL) ^ ((v793 ^ v705 ^ 0xBF656810D427B3B3)
                                                                        - 0x573621AE9DBE8260) ^ ((v793 ^ v705 ^ 0x9DF327BE327826F8)
                                                                                                 - 0x75A06E007BE1172BLL);
  v795 = ((v794 + 0x3090411B65747E68) ^ 0x395A88CC095380A5) & (2
                                                                 * ((v794 + 0x3090411B65747E68) & 0xBD632AD0885BC108)) ^ (v794 + 0x3090411B65747E68) & 0xBD632AD0885BC108;
  v796 = ((2 * ((v794 + 0x3090411B65747E68) ^ 0x3D888ED097582A5)) ^ 0x7D77447B025C875ALL) & ((v794
                                                                                                + 0x3090411B65747E68) ^ 0x3D888ED097582A5) ^ (2 * ((v794 + 0x3090411B65747E68) ^ 0x3D888ED097582A5)) & 0xBEBBA23D812E43ACLL;
  v797 = (v796 ^ 0x3C110000000C0000) & (4 * v795) ^ v795;
  v798 = ((4 * (v796 ^ 0x8288A204812240A5)) ^ 0xFAEE88F604B90EB4) & (v796 ^ 0x8288A204812240A5) ^ (4 * (v796 ^ 0x8288A204812240A5)) & 0xBEBBA23D812E43ACLL;
  v799 = (v798 ^ 0xBAAA8034002802A0) & (16 * v797) ^ v797;
  v800 = ((16 * (v798 ^ 0x411220981064109)) ^ 0xEBBA23D812E43AD0) & (v798 ^ 0x411220981064109) ^ (16 * (v798 ^ 0x411220981064109)) & 0xBEBBA23D812E43A0;
  v801 = (v800 ^ 0xAABA221800240200) & (v799 << 8) ^ v799;
  v802 = (((v800 ^ 0x14018025810A412DLL) << 8) ^ 0xBBA23D812E43AD00) & (v800 ^ 0x14018025810A412DLL) ^ ((v800 ^ 0x14018025810A412DLL) << 8) & 0xBEBBA23D812E4300;
  v803 = v801 ^ 0xBEBBA23D812E43ADLL ^ (v802 ^ 0xBAA2200100020000) & (v801 << 16);
  v804 = ((v794 + 0x3090411B65747E68) ^ (2
                                         * ((v803 << 32) & 0x3EBBA23D00000000 ^ v803 ^ ((v803 << 32) ^ 0x12E43AD00000000) & (((v802 ^ 0x419823C812C42ADLL) << 16) & 0x3EBBA23D00000000 ^ 0x1C82221100000000 ^ (((v802 ^ 0x419823C812C42ADLL) << 16) ^ 0x223D812E00000000) & (v802 ^ 0x419823C812C42ADLL))))) >> 32;
  v805 = v794
       + 0x4AB938DE15D20D4ELL
       + (((v804 ^ 0x81F4A215577D295BLL) - 0x207B0357AB244ED2) ^ ((v804 ^ 0x326D32EFAE74F56BLL) + 0x6C1D6C52ADD26D1ELL) ^ ((v804 ^ 0xB39990FA3949B6C1) - 0x121631B8C510D148));
  v806 = (v805 ^ 0x56C9C40F14163FD2) & (2 * (v805 & 0x44C9D45014173F9ALL)) ^ v805 & 0x44C9D45014173F9ALL;
  v807 = ((2 * (v805 ^ 0xDFD8E4AF143212E6)) ^ 0x362261FE004A5AF8) & (v805 ^ 0xDFD8E4AF143212E6) ^ (2 * (v805 ^ 0xDFD8E4AF143212E6)) & 0x9B1130FF00252D7CLL;
  v808 = (v807 ^ 0x120020C000000878) & (4 * v806) ^ v806;
  v809 = ((4 * (v807 ^ 0x8911100100252504)) ^ 0x6C44C3FC0094B5F0) & (v807 ^ 0x8911100100252504) ^ (4 * (v807 ^ 0x8911100100252504)) & 0x9B1130FF00252D7CLL;
  v810 = (v809 ^ 0x80000FC00042560) & (16 * v808) ^ v808;
  v811 = ((16 * (v809 ^ 0x931130030021080CLL)) ^ 0xB1130FF00252D7C0) & (v809 ^ 0x931130030021080CLL) ^ (16 * (v809 ^ 0x931130030021080CLL)) & 0x9B1130FF00252D70;
  v812 = (v811 ^ 0x911100F000000500) & (v810 << 8) ^ v810;
  v813 = (((v811 ^ 0xA00300F0025283CLL) << 8) ^ 0x1130FF00252D7C00) & (v811 ^ 0xA00300F0025283CLL) ^ ((v811 ^ 0xA00300F0025283CLL) << 8) & 0x9B1130FF00252D00;
  v814 = v812 ^ 0x9B1130FF00252D7CLL ^ (v813 ^ 0x1110300000250000) & (v812 << 16);
  v815 = (v805 ^ (2
                * ((v814 << 32) & 0x1B1130FF00000000 ^ v814 ^ ((v814 << 32) ^ 0x252D7C00000000) & (((v813 ^ 0x8A0100FF0000017CLL) << 16) & 0x1B1130FF00000000 ^ 0xB0030DA00000000 ^ (((v813 ^ 0x8A0100FF0000017CLL) << 16) ^ 0x30FF002500000000) & (v813 ^ 0x8A0100FF0000017CLL))))) >> 16;
  v816 = v805
       - 0xFEFFE13762A192FLL
       + (((v815 ^ 0xC5E28822E3AB54D3) - 0xC6CE8C9761DF2D8) ^ ((v815 ^ 0xF672BE3619F2D923) - 0x3FFCDEDD8C447F28) ^ ((v815 ^ 0x339044FD0F0F99ADLL) + 0x5E1DBE96546C05ALL));
  v817 = (v816 ^ 0x1C67C455CBAAAA5ELL) & (2 * (v816 & 0x1E47E465EB220B1FLL)) ^ v816 & 0x1E47E465EB220B1FLL;
  v818 = ((2 * (v816 ^ 0x14EFC417DBEAAA7ELL)) ^ 0x155040E4619142C2) & (v816 ^ 0x14EFC417DBEAAA7ELL) ^ (2 * (v816 ^ 0x14EFC417DBEAAA7ELL)) & 0xAA8207230C8A160;
  v819 = (v818 ^ 0x2020800040) & (4 * v817) ^ v817;
  v820 = ((4 * (v818 ^ 0xAA820121048A121)) ^ 0x2AA081C8C3228584) & (v818 ^ 0xAA820121048A121) ^ (4 * (v818 ^ 0xAA820121048A121)) & 0xAA8207230C8A160;
  v821 = (v820 ^ 0xAA0004000008100) & (16 * v819) ^ v819;
  v822 = ((16 * (v820 ^ 0x8203230C82061)) ^ 0xAA8207230C8A1610) & (v820 ^ 0x8203230C82061) ^ (16
                                                                                                  * (v820 ^ 0x8203230C82061)) & 0xAA8207230C8A160;
  v823 = (v822 ^ 0xA80002200880000) & (v821 << 8) ^ v821;
  v824 = (((v822 ^ 0x2820503040A161) << 8) ^ 0xA8207230C8A16100) & (v822 ^ 0x2820503040A161) ^ ((v822 ^ 0x2820503040A161) << 8) & 0xAA8207230C8A100;
  v825 = v823 ^ 0xAA8207230C8A161 ^ (v824 ^ 0x820203000800000) & (v823 << 16);
  v826 = (v816 ^ (2
                * ((v825 << 32) & 0xAA8207200000000 ^ v825 ^ ((v825 << 32) ^ 0x30C8A16100000000) & (((v824 ^ 0x288004230488061) << 16) & 0xAA8207200000000 ^ 0xA88003200000000 ^ (((v824 ^ 0x288004230488061) << 16) ^ 0x207230C800000000) & (v824 ^ 0x288004230488061))))) >> 8;
  v827 = v816
       - (((v826 ^ 0xA6BFE0D74CBAE246) + 0x309E7960D8582AF0) ^ ((v826 ^ 0xC3D4F022BC4BB06) - 0x65E3294A40D98C50) ^ ((v826 ^ 0xAA88A83126F4EA09) + 0x3CA93186B21622A1));
  STACK[0x6548] = v827;
  v828 = v827 + 0x5E62922B52893E75;
  LODWORD(STACK[0x6620]) = v827 + 1262674127 - ((2 * (v827 + 1384726133) + 1122763962) & 0xAE87464E);
  LODWORD(v816) = (LODWORD(STACK[0x6A60]) ^ 0x3E3EE9D7 ^ v521) - 155755375;
  LODWORD(v827) = STACK[0x1318];
  LODWORD(STACK[0x6600]) = v513;
  LODWORD(v816) = ((((v816 + (v513 ^ v827)) >> 1) ^ 0xA156158D) + 858099193) ^ ((((v816 + (v513 ^ v827)) >> 1) ^ LODWORD(STACK[0x131C])) + 1471564543) ^ ((((v816 + (v513 ^ v827)) >> 1) ^ 0x6493C706) - 153067660);
  LODWORD(v827) = ((LODWORD(STACK[0x6800]) ^ 0x3836A728) - 943105832) ^ ((LODWORD(STACK[0x6800]) ^ 0x6FBDFAB0)
                                                                       - 1874721456) ^ ((LODWORD(STACK[0x6800]) ^ 0x8F593A9C)
                                                                                      + 1889977700);
  LODWORD(v802) = v816 - 720532604;
  LODWORD(STACK[0x6618]) = v816 - 720532604;
  LODWORD(v816) = (v802 ^ 0x98C85D30) & (2 * (v802 & 0xDAE2913A)) ^ v802 & 0xDAE2913A;
  LODWORD(v824) = ((2 * (v802 ^ 0x9C095D34)) ^ LODWORD(STACK[0x1320])) & (v802 ^ 0x9C095D34) ^ (2 * (v802 ^ 0x9C095D34)) & 0x46EBCC0E;
  LODWORD(v816) = (v824 ^ 0x4A2880A) & (4 * v816) ^ v816;
  LODWORD(v824) = ((4 * (v824 ^ 0x42284402)) ^ 0x1BAF3038) & (v824 ^ 0x42284402) ^ (4 * (v824 ^ 0x42284402)) & 0x46EBCC0C;
  LODWORD(v816) = (v824 ^ 0x2AB0000) & (16 * v816) ^ v816;
  LODWORD(v824) = ((16 * (v824 ^ 0x4440CC06)) ^ 0x6EBCC0E0) & (v824 ^ 0x4440CC06) ^ (16 * (v824 ^ 0x4440CC06)) & 0x46EBCC00;
  LODWORD(v816) = v816 ^ 0x46EBCC0E ^ (v824 ^ 0x46A8C000) & ((_DWORD)v816 << 8);
  LODWORD(STACK[0x6AA0]) = ((_DWORD)v816 << 16) & 0x46EB0000 ^ v816 ^ (((_DWORD)v816 << 16) ^ 0x4C0E0000) & (((v824 ^ 0x430C0E) << 8) & 0x46EB0000 ^ 0x4230000 ^ (((v824 ^ 0x430C0E) << 8) ^ 0xEBCC0000) & (v824 ^ 0x430C0E));
  LODWORD(v816) = LODWORD(STACK[0x67E0])
                + (LODWORD(STACK[0x6A70]) ^ 0x7811D5E1)
                + 1896188566
                + ((v827 - 1691827835) ^ 0xC98AF3A0);
  LODWORD(STACK[0x6608]) = v506;
  LODWORD(STACK[0x6450]) = v474;
  LODWORD(STACK[0x6448]) = v433;
  LODWORD(v827) = v433
                + v474
                - 126779910
                + (((v506 ^ 0xB35D2EBD) + 1285738819) ^ ((v506 ^ 0x50445D8A) - 1346657674) ^ ((v506 ^ 0xF1A2D3D2)
                                                                                            + 240987182))
                + 1095;
  LODWORD(v824) = (v827 ^ 0x2F304B1B) & (2 * (v827 & 0x8FB14313)) ^ v827 & 0x8FB14313;
  LODWORD(v802) = ((2 * (v827 ^ 0x2372CB3B)) ^ 0x59871050) & (v827 ^ 0x2372CB3B) ^ (2 * (v827 ^ 0x2372CB3B)) & 0xACC38828;
  LODWORD(v824) = (v802 ^ 0x88838020) & (4 * v824) ^ v824;
  LODWORD(v802) = ((4 * (v802 ^ 0xA4408828)) ^ 0xB30E20A0) & (v802 ^ 0xA4408828) ^ (4 * (v802 ^ 0xA4408828)) & 0xACC38828;
  LODWORD(v824) = (v802 ^ 0xA0020028) & (16 * v824) ^ v824;
  LODWORD(v802) = ((16 * (v802 ^ 0xCC18808)) ^ 0xCC388280) & (v802 ^ 0xCC18808) ^ (16 * (v802 ^ 0xCC18808)) & 0xACC38820;
  LODWORD(v824) = v824 ^ 0xACC38828 ^ (v802 ^ 0x8C008028) & ((_DWORD)v824 << 8);
  LODWORD(STACK[0x6A50]) = (4
                          * (((_DWORD)v824 << 16) & 0x2CC30000 ^ v824 ^ (((_DWORD)v824 << 16) ^ 0x8280000) & (((v802 ^ 0x20C30828) << 8) & 0x2CC30000 ^ 0x2C430000 ^ (((v802 ^ 0x20C30828) << 8) ^ 0xC3880000) & (v802 ^ 0x20C30828)))) ^ (2 * v827);
  LODWORD(v827) = (v816 ^ 0xB3D23EDE) & (2 * (v816 & 0xBB1ABE98)) ^ v816 & 0xBB1ABE98;
  LODWORD(v824) = ((2 * (v816 ^ LODWORD(STACK[0x1324]))) ^ 0xD5BB488C) & (v816 ^ LODWORD(STACK[0x1324])) ^ (2 * (v816 ^ LODWORD(STACK[0x1324]))) & 0x6ADDA446;
  LODWORD(v827) = (v824 ^ 0x40990000) & (4 * v827) ^ v827;
  LODWORD(v824) = ((4 * (v824 ^ LODWORD(STACK[0x1328]))) ^ 0xAB769118) & (v824 ^ LODWORD(STACK[0x1328])) ^ (4 * (v824 ^ LODWORD(STACK[0x1328]))) & 0x6ADDA444;
  LODWORD(v802) = v824 ^ LODWORD(STACK[0x132C]);
  LODWORD(v824) = ((16 * (v824 ^ 0x40892446)) ^ 0xADDA4460) & (v824 ^ 0x40892446) ^ (16 * (v824 ^ 0x40892446)) & 0x6ADDA440;
  LODWORD(v827) = v802 & (16 * v827) ^ v827 ^ 0x6ADDA446 ^ (v824 ^ 0x28D80400) & ((v802 & (16 * (_DWORD)v827) ^ v827) << 8);
  LODWORD(STACK[0x65E8]) = v816 ^ (2
                                 * (((_DWORD)v827 << 16) & 0x6ADD0000 ^ v827 ^ (((_DWORD)v827 << 16) ^ 0x24460000) & (((v824 ^ 0x4205A006) << 8) & 0x6ADD0000 ^ 0x22590000 ^ (((v824 ^ 0x4205A006) << 8) ^ 0x5DA40000) & (v824 ^ 0x4205A006))));
  LODWORD(v802) = v562 - 1097188031;
  v829 = ((2 * (v802 ^ 0xA6464FF3)) ^ 0x184C06A) & (v802 ^ 0xA6464FF3) ^ (2 * (v802 ^ 0xA6464FF3)) & 0x80C26034;
  LODWORD(v827) = 2 * (v802 & 0x26842FC6);
  LODWORD(v824) = (v829 ^ 0x4020) & (4 * (v827 & (v802 ^ 0xA6460FF7) ^ v802 & 0x26842FC6)) ^ v827 & (v802 ^ 0xA6460FF7) ^ v802 & 0x26842FC6;
  v830 = ((4 * (v829 ^ 0x80422015)) ^ 0x30980D4) & (v829 ^ 0x80422015) ^ (4 * (v829 ^ 0x80422015)) & 0x80C26034;
  LODWORD(v824) = v830 & (16 * v824) ^ v824;
  v831 = ((16 * (v830 ^ 0x80C26021)) ^ 0xC260350) & (v830 ^ 0x80C26021) ^ (16 * (v830 ^ 0x80C26021)) & 0x80C26010;
  v832 = v824 ^ 0x80C26035 ^ (v831 ^ 0x20000) & ((_DWORD)v824 << 8);
  LODWORD(STACK[0x65A0]) = v832;
  LODWORD(STACK[0x6590]) = v832 << 16;
  LODWORD(STACK[0x6598]) = ((v832 << 16) ^ 0x60350000) & (((v831 ^ 0x80C06025) << 8) & 0x80C26000 ^ 0x824035 ^ (((v831 ^ 0x80C06025) << 8) ^ 0xC2603500) & (v831 ^ 0x80C06025));
  LODWORD(STACK[0x65C0]) = v802;
  LODWORD(v816) = ((2 * (v802 ^ 0xE4495E1F)) ^ 0x859AE3B2) & (v802 ^ 0xE4495E1F) ^ (2 * (v802 ^ 0xE4495E1F)) & 0xC2CD71D8;
  v833 = (v816 ^ 0x80006110) & (4 * (v827 & (v802 ^ 0xA4410F97) ^ v802 & 0x26842FC6)) ^ v827 & (v802 ^ 0xA4410F97) ^ v802 & 0x26842FC6;
  LODWORD(v816) = ((4 * (v816 ^ 0x42451049)) ^ 0xB35C764) & (v816 ^ 0x42451049) ^ (4 * (v816 ^ 0x42451049)) & 0xC2CD71D8;
  v834 = (v816 ^ 0x2054140) & (16 * v833) ^ v833;
  LODWORD(v816) = ((16 * (v816 ^ 0xC0C83099)) ^ 0x2CD71D90) & (v816 ^ 0xC0C83099) ^ (16 * (v816 ^ 0xC0C83099)) & 0xC2CD71D0;
  v835 = v802 ^ (2
               * ((((v816 ^ 0xC2086049) << 8) & 0x42CD0000 ^ 0x40410000 ^ (((v816 ^ 0xC2086049) << 8) ^ 0xCD710000) & (v816 ^ 0xC2086049)) & (((v816 ^ 0xC51100) & (v834 << 8) ^ v834) << 16) ^ (v816 ^ 0xC51100) & (v834 << 8) ^ v834));
  LODWORD(v802) = (((v835 ^ 0xA175F5C2) - 348265634) ^ ((v835 ^ 0x8BC360CF) - 1047824815) ^ ((v835 ^ 0xC32BACB)
                                                                                           + 1182444629))
                - 1667155457;
  LODWORD(STACK[0x6588]) = v802;
  v836 = (2 * (v802 & 0x504CE990)) & (v802 ^ 0xF80AA51F) ^ v802 & 0x504CE990 ^ ((2 * (v802 & 0x504CE990)) & LODWORD(STACK[0x130C]) | 0x40808);
  LODWORD(v816) = (2 * (v802 ^ 0xF80AA51F)) & 0xA8464C8E ^ 0xA8424481 ^ ((2 * (v802 ^ 0xF80AA51F)) ^ 0x508C991E) & (v802 ^ 0xF80AA51F);
  v837 = (4 * v836) & 0xA8464C88 ^ v836 ^ ((4 * v836) ^ 0x102020) & v816;
  LODWORD(v816) = (4 * v816) & 0xA8464C8C ^ 0x8464C83 ^ ((4 * v816) ^ LODWORD(STACK[0x1330])) & v816;
  v838 = (16 * v837) & 0xA8464C80 ^ v837 ^ ((16 * v837) ^ 0x408080) & v816;
  LODWORD(v816) = (16 * v816) & 0xA8464C80 ^ 0x2802040F ^ ((16 * v816) ^ 0x8464C8F0) & v816;
  v839 = v838 ^ (v838 << 8) & 0xA8464C00 ^ ((v838 << 8) ^ 0x44088800) & v816 ^ 0xA8024C07;
  LODWORD(STACK[0x6528]) = v839;
  LODWORD(STACK[0x6520]) = v839 << 16;
  LODWORD(STACK[0x6518]) = ((v839 << 16) ^ 0x4C8F0000) & (((_DWORD)v816 << 8) & 0xA8460000 ^ 0x28020000 ^ (((_DWORD)v816 << 8) ^ 0x464C0000) & v816);
  v840 = v606 + 1988414377;
  v841 = ((2 * (v840 ^ 0x3757AB57)) ^ 0x7F1D0296) & (v840 ^ 0x3757AB57) ^ (2 * (v840 ^ 0x3757AB57)) & 0xBF8E814A;
  LODWORD(v827) = 2 * ((v606 + 1988414377) & 0x88D92A1C);
  LODWORD(v824) = (v841 ^ 0x270C0000) & (4 * (v827 & (v840 ^ 0x26D5AB5F) ^ v840 & 0x88D92A1C)) ^ v827 & (v840 ^ 0x26D5AB5F) ^ v840 & 0x88D92A1C;
  v842 = ((4 * (v841 ^ 0x80828149)) ^ 0xFE3A052C) & (v841 ^ 0x80828149) ^ (4 * (v841 ^ 0x80828149)) & 0xBF8E8148;
  LODWORD(v824) = (v842 ^ 0xBE0A0100) & (16 * v824) ^ v824;
  v843 = ((16 * (v842 ^ 0x1848043)) ^ 0xF8E814B0) & (v842 ^ 0x1848043) ^ (16 * (v842 ^ 0x1848043)) & 0xBF8E8140;
  LODWORD(STACK[0x6568]) = (v843 ^ 0xB8880000) & ((_DWORD)v824 << 8) ^ v824;
  LODWORD(STACK[0x6558]) = ((v843 ^ 0x706814B) << 8) & 0xBF8E8100 ^ 0xE800000 ^ (((v843 ^ 0x706814B) << 8) ^ 0x8E810000) & (v843 ^ 0x706814B);
  LODWORD(v816) = ((2 * (v840 ^ 0x8B933843)) ^ 0x69424BE) & (v840 ^ 0x8B933843) ^ (2 * (v840 ^ 0x8B933843)) & 0x34A125E;
  v844 = (v816 ^ 0x2000010) & (4 * (v827 & (v840 ^ 0x8A91285B) ^ v840 & 0x88D92A1C)) ^ v827 & (v840 ^ 0x8A91285B) ^ v840 & 0x88D92A1C;
  LODWORD(v816) = ((4 * (v816 ^ 0x14A1241)) ^ 0xD28497C) & (v816 ^ 0x14A1241) ^ (4 * (v816 ^ 0x14A1241)) & 0x34A125C;
  v845 = (v816 ^ 0x1080040) & (16 * v844) ^ v844;
  LODWORD(v816) = ((16 * (v816 ^ 0x2421203)) ^ 0x34A125F0) & (v816 ^ 0x2421203) ^ (16 * (v816 ^ 0x2421203)) & 0x34A1250;
  v846 = (v606 + 1988414377) ^ (2
                              * ((((v816 ^ 0x34A120F) << 8) & 0x34A0000 ^ (((v816 ^ 0x34A120F) << 8) ^ 0x4A120000) & (v816 ^ 0x34A120F) ^ 0x2020202) & ((v816 & (v845 << 8) ^ v845) << 16) ^ v816 & (v845 << 8) ^ v845));
  LODWORD(v827) = (((v846 ^ 0x3C101111) + 1098443296) ^ ((v846 ^ 0x23F2CAC2) + 1587163597) ^ ((v846 ^ 0x973BF1CF)
                                                                                            - 363656510))
                - 724231666;
  LODWORD(STACK[0x6550]) = v827;
  v847 = (v827 ^ 0xE2A65C1) & (2 * (v827 & 0x8F3371C8)) ^ v827 & 0x8F3371C8;
  LODWORD(v816) = ((2 * (v827 ^ 0xC68A7D1)) ^ 0x6B7AC32) & (v827 ^ 0xC68A7D1) ^ (2 * (v827 ^ 0xC68A7D1)) & 0x835BD618;
  v848 = (v816 ^ 0x80139409) & (4 * v847) ^ v847;
  LODWORD(v816) = ((4 * (v816 ^ 0x81485209)) ^ 0xD6F5864) & (v816 ^ 0x81485209) ^ (4 * (v816 ^ 0x81485209)) & 0x835BD618;
  v849 = (v816 ^ 0x14B5000) & (16 * v848) ^ v848;
  LODWORD(v816) = ((16 * (v816 ^ 0x82108619)) ^ 0x35BD6190) & (v816 ^ 0x82108619) ^ (16 * (v816 ^ 0x82108619)) & 0x835BD610;
  v850 = v849 ^ 0x835BD619 ^ (v816 ^ 0x1194009) & (v849 << 8);
  v851 = v816 ^ LODWORD(STACK[0x1310]);
  LODWORD(STACK[0x6510]) = v850 << 16;
  LODWORD(STACK[0x64F8]) = ((v850 << 16) ^ 0x56190000) & ((v851 << 8) & 0x835B0000 ^ 0x90000 ^ ((v851 << 8) ^ 0x5BD60000) & v851);
  v852 = v650 - 1097817333;
  v853 = ((2 * (v852 ^ 0x49C7BC20)) ^ 0x910EAAB4) & (v852 ^ 0x49C7BC20) ^ (2 * (v852 ^ 0x49C7BC20)) & 0xC887555A;
  LODWORD(v827) = 2 * ((v650 - 1097817333) & 0x8140E97A);
  LODWORD(v824) = (v853 ^ 0x60010) & (4 * (v827 & (v852 ^ 0x4946EC70) ^ v852 & 0x8140E97A)) ^ v827 & (v852 ^ 0x4946EC70) ^ v852 & 0x8140E97A;
  v854 = ((4 * (v853 ^ 0x4881554A)) ^ 0x221D5568) & (v853 ^ 0x4881554A) ^ (4 * (v853 ^ 0x4881554A)) & 0xC8875558;
  LODWORD(v824) = (v854 ^ 0x55540) & (16 * v824) ^ v824;
  v855 = ((16 * (v854 ^ 0xC8820012)) ^ 0x887555A0) & (v854 ^ 0xC8820012) ^ (16 * (v854 ^ 0xC8820012)) & 0xC8875550;
  LODWORD(STACK[0x6540]) = (v855 ^ 0x88055500) & ((_DWORD)v824 << 8) ^ v824;
  LODWORD(STACK[0x6538]) = ((v855 ^ 0x4082005A) << 8) & 0xC8870000 ^ 0x50000 ^ (((v855 ^ 0x4082005A) << 8) ^ 0x87550000) & (v855 ^ 0x4082005A);
  LODWORD(v816) = ((2 * (v852 ^ 0x7115C776)) ^ 0xE0AA5C18) & (v852 ^ 0x7115C776) ^ (2 * (v852 ^ 0x7115C776)) & 0xF0552E0C;
  v856 = (v816 ^ 0xC08) & (4 * (v827 & (v852 ^ 0x7114C572) ^ v852 & 0x8140E97A)) ^ v827 & (v852 ^ 0x7114C572) ^ v852 & 0x8140E97A;
  LODWORD(v816) = ((4 * (v816 ^ 0x10552204)) ^ 0xC154B830) & (v816 ^ 0x10552204) ^ (4 * (v816 ^ 0x10552204)) & 0xF0552E0C;
  v857 = (v816 ^ 0xC0542800) & (16 * v856) ^ v856;
  LODWORD(v816) = ((16 * (v816 ^ 0x3001060C)) ^ 0x552E0C0) & (v816 ^ 0x3001060C) ^ (16 * (v816 ^ 0x3001060C)) & 0xF0552E00;
  v858 = (v650 - 1097817333) ^ (2
                              * ((((v816 ^ 0xF0050E0C) << 8) & 0x70550000 ^ 0x50040000 ^ (((v816 ^ 0xF0050E0C) << 8) ^ 0x552E0000) & (v816 ^ 0xF0050E0C)) & (((v816 ^ 0x502000) & (v857 << 8) ^ v857) << 16) ^ (v816 ^ 0x502000) & (v857 << 8) ^ v857));
  LODWORD(v827) = (((v858 ^ 0x2AAFF8AB) - 1113639464) ^ ((v858 ^ 0xCC96A889) + 1537631734) ^ ((v858 ^ LODWORD(STACK[0x1334]))
                                                                                            - 263621595))
                - 1557303796;
  LODWORD(STACK[0x6530]) = v827;
  v859 = (v827 ^ 0xB958A297) & (2 * (v827 & 0xA01CCAD6)) ^ v827 & 0xA01CCAD6;
  LODWORD(v816) = ((2 * (v827 ^ 0xB948B3B7)) ^ 0x32A8F2C2) & (v827 ^ 0xB948B3B7) ^ (2 * (v827 ^ 0xB948B3B7)) & 0x19547960;
  v860 = (v816 ^ 0x9007041) & (4 * v859) ^ v859;
  LODWORD(v816) = ((4 * (v816 ^ 0x9540921)) ^ 0x6551E584) & (v816 ^ 0x9540921) ^ (4 * (v816 ^ 0x9540921)) & 0x19547960;
  v861 = (v816 ^ 0x1506100) & (16 * v860) ^ v860;
  LODWORD(v816) = ((16 * (v816 ^ 0x18041861)) ^ 0x95479610) & (v816 ^ 0x18041861) ^ (16 * (v816 ^ 0x18041861)) & 0x19547960;
  v862 = v861 ^ 0x19547961 ^ (v816 ^ 0x11441061) & (v861 << 8);
  LODWORD(STACK[0x64F0]) = ((v862 << 16) ^ 0x79610000) & (((v816 ^ 0x8106961) << 8) & 0x19540000 ^ 0x9040000 ^ (((v816 ^ 0x8106961) << 8) ^ 0x54790000) & (v816 ^ 0x8106961));
  LODWORD(STACK[0x6500]) = ((v687 ^ 0x16DF4605) - 1404154057) ^ ((v687 ^ 0x4E274748) - 189378948);
  LODWORD(STACK[0x6428]) = ((v483 ^ 0x49EC1722) + 943384193) ^ ((v483 ^ 0x3A238358) + 1274376955) ^ ((v483 ^ 0x77E28E25) + 104103816);
  LODWORD(STACK[0x6570]) = v654 ^ 0xA32D13F2 ^ LODWORD(STACK[0x6940]);
  LODWORD(STACK[0x6940]) = v651;
  v863 = (v651 & 2) == 0;
  v864 = STACK[0x65D8];
  v865 = STACK[0x65A8];
  if ((v651 & 2) != 0)
    v866 = STACK[0x65D8];
  else
    v866 = STACK[0x65A8];
  LODWORD(STACK[0x63B0]) = v866;
  if ((v651 & 2) != 0)
    v867 = v865;
  else
    v867 = v864;
  LODWORD(STACK[0x63A8]) = v867;
  if ((v651 & 2) != 0)
    v868 = v675;
  else
    v868 = v676;
  LODWORD(STACK[0x6380]) = v868;
  if ((v651 & 2) != 0)
    v869 = v676;
  else
    v869 = v675;
  LODWORD(STACK[0x6388]) = v869;
  *(_QWORD *)(STACK[0x6AB0] + 8) = v691 ^ 0x7979797979797979;
  v870 = v739 - 456308856;
  v871 = ((2 * (v870 ^ 0x4605FB69)) ^ 0x77C1663A) & (v870 ^ 0x4605FB69) ^ (2 * (v870 ^ 0x4605FB69)) & 0x3BE0B31C;
  v872 = (v739 - 456308856) & 0x7DE54874;
  v873 = (v871 ^ 0x33802210) & (4 * ((2 * v872) & (v870 ^ 0x7DC56B61) ^ v872)) ^ (2 * v872) & (v870 ^ 0x7DC56B61) ^ v872;
  v874 = ((4 * (v871 ^ 0x8209105)) ^ 0xEF82CC74) & (v871 ^ 0x8209105) ^ (4 * (v871 ^ 0x8209105)) & 0x3BE0B31C;
  v875 = (v874 ^ 0x2B808000) & (16 * v873) ^ v873;
  v876 = ((16 * (v874 ^ 0x10603309)) ^ 0xBE0B31D0) & (v874 ^ 0x10603309) ^ (16 * (v874 ^ 0x10603309)) & 0x3BE0B310;
  v877 = (v739 - 456308856) ^ (2
                             * ((((v876 ^ 0x1E0820D) << 8) & 0x3BE00000 ^ 0x20A00000 ^ (((v876 ^ 0x1E0820D) << 8) ^ 0xE0B30000) & (v876 ^ 0x1E0820D)) & (((v876 ^ 0x3A003100) & (v875 << 8) ^ v875) << 16) ^ (v876 ^ 0x3A003100) & (v875 << 8) ^ v875));
  v878 = (((v877 ^ 0x16F797F6) + 2038100953) ^ ((v877 ^ 0x6596827A) + 169600597) ^ ((v877 ^ 0xE845DF8) + 1627994583))
       + 134280138;
  LODWORD(STACK[0x65D8]) = v878;
  v879 = (v878 ^ 0xBF5CBE82) & (2 * (v878 & 0x3F513CC4)) ^ v878 & 0x3F513CC4;
  v880 = ((2 * (v878 ^ 0x857EBF82)) ^ 0x745F068C) & (v878 ^ 0x857EBF82) ^ (2 * (v878 ^ 0x857EBF82)) & 0xBA2F8346;
  v881 = (v880 ^ 0x300D0200) & (4 * v879) ^ v879;
  v882 = ((4 * (v880 ^ 0x8A208142)) ^ 0xE8BE0D18) & (v880 ^ 0x8A208142) ^ (4 * (v880 ^ 0x8A208142)) & 0xBA2F8344;
  v883 = (v882 ^ 0xA82E0106) & (16 * v881) ^ v881;
  v884 = ((16 * (v882 ^ LODWORD(STACK[0x1338]))) ^ 0xA2F83460) & (v882 ^ LODWORD(STACK[0x1338])) ^ (16
                                                                                                  * (v882 ^ LODWORD(STACK[0x1338]))) & 0xBA2F8340;
  v885 = v883 ^ 0xBA2F8346 ^ (v884 ^ 0xA2280000) & (v883 << 8);
  v886 = ((v885 << 16) ^ 0x3460000) & (((v884 ^ 0x18078306) << 8) & 0xBA2F0000 ^ 0x102C0000 ^ (((v884 ^ 0x18078306) << 8) ^ 0x2F830000) & (v884 ^ 0x18078306));
  v887 = v783 + 2091598263;
  v888 = ((2 * (v887 ^ 0x213066B2)) ^ 0xE92DAFA2) & (v887 ^ 0x213066B2) ^ (2 * (v887 ^ 0x213066B2)) & 0x7496D7D0;
  v889 = 2 * ((v783 + 2091598263) & 0x55A6B163);
  v890 = (v888 ^ 0x60048780) & (4 * (v889 & (v887 ^ 0x1342472) ^ v887 & 0x55A6B163)) ^ v889 & (v887 ^ 0x1342472) ^ v887 & 0x55A6B163;
  v891 = ((4 * (v888 ^ 0x14925051)) ^ 0xD25B5F44) & (v888 ^ 0x14925051) ^ (4 * (v888 ^ 0x14925051)) & 0x7496D7D0;
  v892 = (v891 ^ 0x50125740) & (16 * v890) ^ v890;
  v893 = ((16 * (v891 ^ 0x24848091)) ^ 0x496D7D10) & (v891 ^ 0x24848091) ^ (16 * (v891 ^ 0x24848091)) & 0x7496D7D0;
  v894 = (v783 + 2091598263) ^ (2
                              * ((((v893 ^ 0x349282C1) << 8) & 0x74960000 ^ 0x14960000 ^ (((v893 ^ 0x349282C1) << 8) ^ 0x96D70000) & (v893 ^ 0x349282C1)) & (((v893 ^ 0x40045500) & (v892 << 8) ^ v892) << 16) ^ (v893 ^ 0x40045500) & (v892 << 8) ^ v892));
  v895 = (((v894 ^ 0x4F29EF41) - 1122777702) ^ ((v894 ^ 0xE69844BB) + 346189412) ^ ((v894 ^ 0xFC171A99) + 237842498))
       + 1557081569;
  v896 = (v895 ^ 0x112E0A6E) & (2 * (v895 & 0x554E934C)) ^ v895 & 0x554E934C;
  v897 = ((2 * (v895 ^ 0x3B370EEE)) ^ 0xDCF33B44) & (v895 ^ 0x3B370EEE) ^ (2 * (v895 ^ 0x3B370EEE)) & 0x6E799DA2;
  v898 = (v897 ^ 0x4C701980) & (4 * v896) ^ v896;
  v899 = ((4 * (v897 ^ 0x220884A2)) ^ 0xB9E67688) & (v897 ^ 0x220884A2) ^ (4 * (v897 ^ 0x220884A2)) & 0x6E799DA0;
  v900 = ((16 * (v899 ^ 0x46198922)) ^ 0xE799DA20) & (v899 ^ 0x46198922) ^ (16 * (v899 ^ 0x46198922)) & 0x6E799DA0;
  v901 = (v899 ^ 0x28601482) & (16 * v898) ^ v898 ^ 0x6E799DA2 ^ (v900 ^ 0x66199800) & (((v899 ^ 0x28601482) & (16 * v898) ^ v898) << 8);
  v902 = ((2 * (v828 ^ 0x6D92D8D3)) ^ 0x72720B0) & (v828 ^ 0x6D92D8D3) ^ (2 * (v828 ^ 0x6D92D8D3)) & 0x3939058;
  v903 = v828 & 0x6E01488B;
  v904 = (v902 ^ 0x30010) & (4 * ((2 * v903) & (v828 ^ 0x6D9048C3) ^ v903)) ^ (2 * v903) & (v828 ^ 0x6D9048C3) ^ v903;
  v905 = ((4 * (v902 ^ 0x909048)) ^ 0xE4E4160) & (v902 ^ 0x909048) ^ (4 * (v902 ^ 0x909048)) & 0x3939058;
  v906 = (v905 ^ 0x2020040) & (16 * v904) ^ v904;
  v907 = ((16 * (v905 ^ 0x1919018)) ^ 0x39390580) & (v905 ^ 0x1919018) ^ (16 * (v905 ^ 0x1919018)) & 0x3939040;
  v908 = v828 ^ (2
               * ((((v907 ^ 0x2829058) << 8) & 0x3930000 ^ 0x3900000 ^ (((v907 ^ 0x2829058) << 8) ^ 0x93900000) & (v907 ^ 0x2829058)) & (((v907 ^ 0x1110000) & (v906 << 8) ^ v906) << 16) ^ (v907 ^ 0x1110000) & (v906 << 8) ^ v906));
  v909 = (((v908 ^ 0x5E96111F) + 1764236485) ^ ((v908 ^ 0x712857BE) + 1184258662) ^ ((v908 ^ 0x41BF0E2A) + 1979778034))
       - 1557034374;
  v910 = ((2 * (v909 ^ 0x42C38E22)) ^ 0x3C140678) & (v909 ^ 0x42C38E22) ^ (2 * (v909 ^ 0x42C38E22)) & 0x1E0A033C;
  v911 = (v910 ^ 0x1400013C) & (4 * ((v909 ^ 0x5AC18C1E) & (2 * (v909 & STACK[0x1314])) ^ v909 & STACK[0x1314])) ^ (v909 ^ 0x5AC18C1E) & (2 * (v909 & STACK[0x1314])) ^ v909 & STACK[0x1314];
  v912 = ((4 * (v910 ^ 0x20A0104)) ^ 0x78280CF0) & (v910 ^ 0x20A0104) ^ (4 * (v910 ^ 0x20A0104)) & 0x1E0A033C;
  v913 = v911 ^ 0x1E0A033C ^ (v912 ^ 0x1808002C) & (16 * v911);
  v914 = (16 * (v912 ^ LODWORD(STACK[0x133C]))) & 0x1E0A0330 ^ 0x1E0A003C ^ ((16 * (v912 ^ LODWORD(STACK[0x133C]))) ^ 0xE0A033C0) & (v912 ^ LODWORD(STACK[0x133C]));
  v915 = (v913 << 8) & 0x1E0A0300 ^ v913 ^ ((v913 << 8) ^ 0xA033C00) & v914;
  v916 = LODWORD(STACK[0x6528]) ^ STACK[0x6520] & 0x28460000 ^ LODWORD(STACK[0x6518]) ^ LODWORD(STACK[0x6AA0]) ^ v850 ^ STACK[0x6510] & 0x35B0000 ^ LODWORD(STACK[0x64F8]) ^ v862 ^ LODWORD(STACK[0x64F0]) ^ ((v862 << 16) & 0x19540000 | 0x3941) ^ v885 ^ (v885 << 16) & 0x3A2F0000 ^ v886 ^ v901 ^ (v901 << 16) & 0x6E790000 ^ ((v901 << 16) ^ 0x1DA20000) & (((v900 ^ 0x8600582) << 8) & 0x6E790000 ^ 0x6600000 ^ (((v900 ^ 0x8600582) << 8) ^ 0x799D0000) & (v900 ^ 0x8600582)) ^ v915 ^ (v915 << 16) & 0x1E0A0000 ^ ((v915 << 16) ^ 0x33C0000) & ((v914 << 8) & 0x1E0A0000 ^ 0x14080000 ^ ((v914 << 8) ^ 0xA030000) & v914);
  v917 = ((2 * (v870 ^ 0x1F0DD4F5)) ^ 0xC5D13902) & (v870 ^ 0x1F0DD4F5) ^ (2 * (v870 ^ 0x1F0DD4F5)) & 0x62E89C80;
  v918 = (v917 ^ 0x40800000) & (4 * ((2 * v872) & (v870 ^ 0x7DC54475) ^ v872)) ^ (2 * v872) & (v870 ^ 0x7DC54475) ^ v872;
  v919 = ((4 * (v917 ^ 0x22288481)) ^ 0x8BA27204) & (v917 ^ 0x22288481) ^ (4 * (v917 ^ 0x22288481)) & 0x62E89C80;
  v920 = (v919 ^ 0x2A01000) & (16 * v918) ^ v918;
  v921 = ((16 * (v919 ^ 0x60488C81)) ^ 0x2E89C810) & (v919 ^ 0x60488C81) ^ (16 * (v919 ^ 0x60488C81)) & 0x62E89C80;
  v922 = (v921 ^ 0x22888800) & (v920 << 8) ^ v920;
  v923 = ((v921 ^ 0x40601481) << 8) & 0x62E80000 ^ 0x60880000 ^ (((v921 ^ 0x40601481) << 8) ^ 0xE89C0000) & (v921 ^ 0x40601481);
  v924 = ((2 * (v887 ^ 0x4ED9D750)) ^ 0x36FECC66) & (v887 ^ 0x4ED9D750) ^ (2 * (v887 ^ 0x4ED9D750)) & 0x1B7F6632;
  v925 = (v924 ^ 0x123E4400) & (4 * (v889 & (v887 ^ 0x4594B552) ^ v887 & 0x55A6B163)) ^ v889 & (v887 ^ 0x4594B552) ^ v887 & 0x55A6B163;
  v926 = ((4 * (v924 ^ 0x9012211)) ^ 0x6DFD98CC) & (v924 ^ 0x9012211) ^ (4 * (v924 ^ 0x9012211)) & 0x1B7F6630;
  v927 = (v926 ^ 0x97D0000) & (16 * v925) ^ v925;
  v928 = ((16 * (v926 ^ 0x12026633)) ^ 0xB7F66330) & (v926 ^ 0x12026633) ^ (16 * (v926 ^ 0x12026633)) & 0x1B7F6630;
  v929 = (v928 ^ 0x13766200) & (v927 << 8) ^ v927;
  v930 = ((v928 ^ 0x8090403) << 8) & 0x1B7F0000 ^ 0x1B660000 ^ (((v928 ^ 0x8090403) << 8) ^ 0x7F660000) & (v928 ^ 0x8090403);
  v931 = ((2 * (v828 ^ 0xE2EB2036)) ^ 0x19D4D17A) & (v828 ^ 0xE2EB2036) ^ (2 * (v828 ^ 0xE2EB2036)) & 0x8CEA68BC;
  v932 = (v931 ^ 0x8004038) & (4 * ((2 * v903) & (v828 ^ 0x6EE92022) ^ v903)) ^ (2 * v903) & (v828 ^ 0x6EE92022) ^ v903;
  v933 = ((4 * (v931 ^ 0x842A2885)) ^ 0x33A9A2F4) & (v931 ^ 0x842A2885) ^ (4 * (v931 ^ 0x842A2885)) & 0x8CEA68BC;
  v934 = (v933 ^ 0xA820B0) & (16 * v932) ^ v932;
  v935 = ((16 * (v933 ^ 0x8C424809)) ^ 0xCEA68BD0) & (v933 ^ 0x8C424809) ^ (16 * (v933 ^ 0x8C424809)) & 0x8CEA6890;
  v936 = (v935 ^ 0x8CA20800) & (v934 << 8) ^ v934;
  v937 = ((v935 ^ 0x48602D) << 8) & 0x8CEA0000 ^ 0x8680000 ^ (((v935 ^ 0x48602D) << 8) ^ 0xEA680000) & (v935 ^ 0x48602D);
  LODWORD(STACK[0x6410]) = LODWORD(STACK[0x6500]) ^ ((LODWORD(STACK[0x6A90]) ^ 0x9929E0E9) + 599321051);
  v938 = STACK[0x69E0];
  if (!v863)
    v938 = STACK[0x6570];
  LODWORD(STACK[0x63A0]) = v938;
  v939 = STACK[0x69D0];
  v940 = STACK[0x6960];
  if (v863)
    v941 = STACK[0x69D0];
  else
    v941 = STACK[0x6960];
  LODWORD(STACK[0x6390]) = v941;
  if (v863)
    v942 = v940;
  else
    v942 = v939;
  LODWORD(STACK[0x6398]) = v942;
  v943 = STACK[0x68A0];
  v944 = STACK[0x6880];
  if (v863)
    v945 = STACK[0x68A0];
  else
    v945 = STACK[0x6880];
  LODWORD(STACK[0x6370]) = v945;
  if (v863)
    v946 = v944;
  else
    v946 = v943;
  LODWORD(STACK[0x6378]) = v946;
  v947 = STACK[0x6930];
  v948 = STACK[0x68C0];
  if (v863)
    v949 = STACK[0x68C0];
  else
    v949 = STACK[0x6930];
  LODWORD(STACK[0x6360]) = v949;
  if (v863)
    v950 = v947;
  else
    v950 = v948;
  LODWORD(STACK[0x6368]) = v950;
  v951 = STACK[0x6780];
  v952 = STACK[0x6710];
  if (v863)
    v953 = STACK[0x6710];
  else
    v953 = STACK[0x6780];
  LODWORD(STACK[0x6418]) = v953;
  if (v863)
    v954 = v951;
  else
    v954 = v952;
  LODWORD(STACK[0x6420]) = v954;
  v955 = STACK[0x6548] - 0x1CC90C74AD06369BLL;
  v956 = (v955 ^ 0xC29D256057513FB3) & (2 * (v955 & 0xD2DE357247053E22)) ^ v955 & 0xD2DE357247053E22;
  v957 = ((2 * (v955 ^ 0xC3054D64D95343B3)) ^ 0x23B6F02D3CACFB22) & (v955 ^ 0xC3054D64D95343B3) ^ (2 * (v955 ^ 0xC3054D64D95343B3)) & 0x11DB78169E567D90;
  v958 = (v957 ^ 0x19070001C047900) & (4 * v956) ^ v956;
  v959 = ((4 * (v957 ^ 0x1049081282520491)) ^ 0x476DE05A7959F644) & (v957 ^ 0x1049081282520491) ^ (4 * (v957 ^ 0x1049081282520491)) & 0x11DB78169E567D90;
  v960 = (v959 ^ 0x149601218507400) & (16 * v958) ^ v958;
  v961 = ((16 * (v959 ^ 0x1092180486060991)) ^ 0x1DB78169E567D910) & (v959 ^ 0x1092180486060991) ^ (16 * (v959 ^ 0x1092180486060991)) & 0x11DB78169E567D90;
  v962 = (v961 ^ 0x1193000084465900) & (v960 << 8) ^ v960;
  v963 = (((v961 ^ 0x4878161A102481) << 8) ^ 0xDB78169E567D9100) & (v961 ^ 0x4878161A102481) ^ ((v961 ^ 0x4878161A102481) << 8) & 0x11DB78169E567D00;
  v964 = v962 ^ 0x11DB78169E567D91 ^ (v963 ^ 0x1158101616540000) & (v962 << 16);
  v965 = (v955 ^ (2
                * ((v964 << 32) & 0x11DB781600000000 ^ v964 ^ ((v964 << 32) ^ 0x1E567D9100000000) & (((v963 ^ 0x83680088026C91) << 16) & 0x11DB781600000000 ^ 0x1C9600000000000 ^ (((v963 ^ 0x83680088026C91) << 16) ^ 0x78169E5600000000) & (v963 ^ 0x83680088026C91))))) >> 31;
  v966 = v828
       + 0x50C82FE20895BCE4
       + (((v965 ^ 0x6B3FE4030F00F999) + 0x3387055FDBBE3D7BLL) ^ ((v965 ^ 0x90C67F112CFB397CLL) - 0x378161B207BA0260) ^ ((v965 ^ 0xFBF99B138063AA1BLL) - 0x5CBE85B0AB229107));
  v967 = (v966 ^ 0xAEA961C8E7355F1BLL) & (2 * (v966 & 0xAE318592C7B95E10)) ^ v966 & 0xAE318592C7B95E10;
  v968 = ((2 * (v966 ^ 0xA6AB60E8E5155F3BLL)) ^ 0x1135CAF445580256) & (v966 ^ 0xA6AB60E8E5155F3BLL) ^ (2 * (v966 ^ 0xA6AB60E8E5155F3BLL)) & 0x89AE57A22AC012ALL;
  v969 = (v968 ^ 0x5000080000) & (4 * v967) ^ v967;
  v970 = ((4 * (v968 ^ 0x88A250A22A40129)) ^ 0x226B95E88AB004ACLL) & (v968 ^ 0x88A250A22A40129) ^ (4 * (v968 ^ 0x88A250A22A40129)) & 0x89AE57A22AC0128;
  v971 = (v970 ^ 0xA856802A00020) & (16 * v969) ^ v969;
  v972 = ((16 * (v970 ^ 0x8906012200C0103)) ^ 0x89AE57A22AC012B0) & (v970 ^ 0x8906012200C0103) ^ (16 * (v970 ^ 0x8906012200C0103)) & 0x89AE57A22AC0120;
  v973 = (v972 ^ 0x88A452222800000) & (v971 << 8) ^ v971;
  v974 = (((v972 ^ 0x10A058002C010BLL) << 8) ^ 0x9AE57A22AC012B00) & (v972 ^ 0x10A058002C010BLL) ^ ((v972 ^ 0x10A058002C010BLL) << 8) & 0x89AE57A22AC0100;
  v975 = v973 ^ 0x89AE57A22AC012BLL ^ (v974 ^ 0x880602220000000) & (v973 << 16);
  v976 = (v966 ^ (2
                * ((v975 << 32) & 0x89AE57A00000000 ^ v975 ^ ((v975 << 32) ^ 0x22AC012B00000000) & (((v974 ^ 0x1A855802AC002BLL) << 16) & 0x89AE57A00000000 ^ 0x880C55200000000 ^ (((v974 ^ 0x1A855802AC002BLL) << 16) ^ 0x657A22AC00000000) & (v974 ^ 0x1A855802AC002BLL))))) >> 9;
  v977 = v966
       - (((v976 ^ 0x1C3BCBF293906A67) - 0x19773163C7FFC23DLL) ^ ((v976 ^ 0xB69DB71DC5B0F3AFLL) + 0x4C2EB2736E20A40BLL) ^ ((v976 ^ 0xAAF976C9CF61E966) + 0x504A73A764F1BEC4))
       - 0x64DB5ACF7F217AE7;
  v978 = (v977 ^ 0xADF0CF2B7D293322) & (2 * (v977 & 0xDF8EFAA79AC0003)) ^ v977 & 0xDF8EFAA79AC0003;
  v979 = ((2 * (v977 ^ 0xADF0973F1F693322)) ^ 0x4010F12ACD8A6642) & (v977 ^ 0xADF0973F1F693322) ^ (2 * (v977 ^ 0xADF0973F1F693322)) & 0xA008789566C53320;
  v980 = (v979 ^ 0x700044800000) & (4 * v978) ^ v978;
  v981 = ((4 * (v979 ^ 0xA008089522451121)) ^ 0x8021E2559B14CC84) & (v979 ^ 0xA008089522451121) ^ (4 * (v979 ^ 0xA008089522451121)) & 0xA008789566C53320;
  v982 = (v981 ^ 0x8000601502040000) & (16 * v980) ^ v980;
  v983 = ((16 * (v981 ^ 0x2008188064C13321)) ^ 0x8789566C533210) & (v981 ^ 0x2008188064C13321) ^ (16 * (v981 ^ 0x2008188064C13321)) & 0xA008789566C53320;
  v984 = (v983 ^ 0x81464413200) & (v982 << 8) ^ v982;
  v985 = (((v983 ^ 0xA008708102840121) << 8) ^ 0x8789566C5332100) & (v983 ^ 0xA008708102840121) ^ ((v983 ^ 0xA008708102840121) << 8) & 0xA008789566C53300;
  v986 = v984 ^ 0xA008789566C53321 ^ (v985 ^ 0x8100444010000) & (v984 << 16);
  v987 = (v977 ^ (2
                * ((v986 << 32) & 0x2008789500000000 ^ v986 ^ ((v986 << 32) ^ 0x66C5332100000000) & (((v985 ^ 0xA000689122C41221) << 16) & 0x2008789500000000 ^ 0x8181000000000 ^ (((v985 ^ 0xA000689122C41221) << 16) ^ 0x789566C500000000) & (v985 ^ 0xA000689122C41221))))) >> 6;
  v988 = v977
       - (((v987 ^ 0x37EC6EDA65C4337FLL) - 0x4BA6AAC2E92902A8) ^ ((v987 ^ 0xE344CA7A58377812) + 0x60F1F19D2B25B63BLL) ^ ((v987 ^ 0xD49F055A3723D2F4) + 0x572A3EBD44311CDDLL))
       - 0x679AF7572777C260;
  v989 = (v988 ^ 0xF0141C5FDAC49155) & (2 * (v988 & 0xF916811F1AE61A15)) ^ v988 & 0xF916811F1AE61A15;
  v990 = ((2 * (v988 ^ 0xC0151C57FB889575)) ^ 0x72073A91C2DD1EC0) & (v988 ^ 0xC0151C57FB889575) ^ (2 * (v988 ^ 0xC0151C57FB889575)) & 0x39039D48E16E8F60;
  v991 = (v990 ^ 0x20020800C0080840) & (4 * v989) ^ v989;
  v992 = ((4 * (v990 ^ 0x900854821228120)) ^ 0xE40E752385BA3D80) & (v990 ^ 0x900854821228120) ^ (4 * (v990 ^ 0x900854821228120)) & 0x39039D48E16E8F60;
  v993 = (v992 ^ 0x20021500812A0D00) & (16 * v991) ^ v991;
  v994 = ((16 * (v992 ^ 0x1901884860448260)) ^ 0x9039D48E16E8F600) & (v992 ^ 0x1901884860448260) ^ (16 * (v992 ^ 0x1901884860448260)) & 0x39039D48E16E8F60;
  v995 = (v994 ^ 0x1001940800688600) & (v993 << 8) ^ v993;
  v996 = (((v994 ^ 0x29020940E1060960) << 8) ^ 0x39D48E16E8F6000) & (v994 ^ 0x29020940E1060960) ^ ((v994 ^ 0x29020940E1060960) << 8) & 0x39039D48E16E8F00;
  v997 = v995 ^ 0x39039D48E16E8F60 ^ (v996 ^ 0x1010840600E0000) & (v995 << 16);
  v998 = v988 ^ (2
               * ((v997 << 32) & 0x39039D4800000000 ^ v997 ^ ((v997 << 32) ^ 0x616E8F6000000000) & (((v996 ^ 0x3802950881608F60) << 16) & 0x39039D4800000000 ^ 0x20031C0000000000 ^ (((v996 ^ 0x3802950881608F60) << 16) ^ 0x1D48E16E00000000) & (v996 ^ 0x3802950881608F60))));
  v999 = (((v998 ^ 0x2940F88AE82C1833) + 0x5E485D4723C4DB68) ^ ((v998 ^ 0x4C7E3E18DFE54047) + 0x3B769BD5140D8314) ^ ((v998 ^ 0xAC2A679CEFF25CA1) - 0x24DD3DAEDBE5600ALL))
       - 0x1826E40B4BA2896FLL;
  v1000 = v999 - (v999 >> 31) - ((v999 - (v999 >> 31)) >> 14);
  v1001 = v1000 + (v1000 >> 7);
  v1002 = (v1001 ^ 0xA181E2272F695246)
        - ((v1001 ^ 0xA181E2272F695246) >> 27)
        + (((v1001 ^ 0xA181E2272F695246) - ((v1001 ^ 0xA181E2272F695246) >> 27)) >> 13)
        + 0x340DC9E131C736A7;
  v1003 = (v1002 ^ 0xE3E1A4DEEF308554) & (2 * (v1002 & 0xCBF2361ECE38C959)) ^ v1002 & 0xCBF2361ECE38C959;
  v1004 = ((2 * (v1002 ^ 0xF225C4FA73601546)) ^ 0x73AFE5C97AB1B83ELL) & (v1002 ^ 0xF225C4FA73601546) ^ (2 * (v1002 ^ 0xF225C4FA73601546)) & 0x39D7F2E4BD58DC1ELL;
  v1005 = (v1004 ^ 0x3181E0C03800080CLL) & (4 * v1003) ^ v1003;
  v1006 = ((4 * (v1004 ^ 0x850122485484401)) ^ 0xE75FCB92F563707CLL) & (v1004 ^ 0x850122485484401) ^ (4 * (v1004 ^ 0x850122485484401)) & 0x39D7F2E4BD58DC1CLL;
  v1007 = (v1006 ^ 0x2157C280B5405010) & (16 * v1005) ^ v1005;
  v1008 = ((16 * (v1006 ^ 0x1880306408188C03)) ^ 0x9D7F2E4BD58DC1F0) & (v1006 ^ 0x1880306408188C03) ^ (16 * (v1006 ^ 0x1880306408188C03)) & 0x39D7F2E4BD58DC10;
  v1009 = (v1008 ^ 0x195722409508C000) & (v1007 << 8) ^ v1007;
  v1010 = (((v1008 ^ 0x2080D0A428501C0FLL) << 8) ^ 0xD7F2E4BD58DC1F00) & (v1008 ^ 0x2080D0A428501C0FLL) ^ ((v1008 ^ 0x2080D0A428501C0FLL) << 8) & 0x39D7F2E4BD58DC00;
  v1011 = v1009 ^ 0x39D7F2E4BD58DC1FLL ^ (v1010 ^ 0x11D2E0A418580000) & (v1009 << 16);
  v1012 = (v1002 ^ (2
                  * ((v1011 << 32) & 0x39D7F2E400000000 ^ v1011 ^ ((v1011 << 32) ^ 0x3D58DC1F00000000) & (((v1010 ^ 0x28051240A500C01FLL) << 16) & 0x39D7F2E400000000 ^ 0x91342A400000000 ^ (((v1010 ^ 0x28051240A500C01FLL) << 16) ^ 0x72E4BD5800000000) & (v1010 ^ 0x28051240A500C01FLL))))) >> 6;
  v1013 = (v1001 ^ 0xA181E2272F695246)
        - ((v1001 ^ 0xA181E2272F695246) >> 27)
        + (((v1001 ^ 0xA181E2272F695246) - ((v1001 ^ 0xA181E2272F695246) >> 27)) >> 13)
        - 0x4BC6E68C5E83532FLL
        + (((v1012 ^ 0x6E10C8E38906C905) - 0x7A7CDD21E19891D9) ^ ((v1012 ^ 0x9629293526EEA007)
                                                                    + 0x7DBAC308B18F0725) ^ ((v1012 ^ 0xFB121019D13A4CC7)
                                                                                             + 0x1081FA24465BEBE5));
  v1014 = (v1013 ^ 0x52CCC8DD62AF9A00) & (2 * (v1013 & 0x630ECA9974CFD048)) ^ v1013 & 0x630ECA9974CFD048;
  v1015 = ((2 * (v1013 ^ 0x96D8DCDF8A391A00)) ^ 0xEBAC2C8DFDED9490) & (v1013 ^ 0x96D8DCDF8A391A00) ^ (2 * (v1013 ^ 0x96D8DCDF8A391A00)) & 0xF5D61646FEF6CA48;
  v1016 = (v1015 ^ 0x80040404F4648000) & (4 * v1014) ^ v1014;
  v1017 = ((4 * (v1015 ^ 0x1452124202124A48)) ^ 0xD758591BFBDB2920) & (v1015 ^ 0x1452124202124A48) ^ (4 * (v1015 ^ 0x1452124202124A48)) & 0xF5D61646FEF6CA48;
  v1018 = (v1017 ^ 0xD5501002FAD20800) & (16 * v1016) ^ v1016;
  v1019 = ((16 * (v1017 ^ 0x208606440424C248)) ^ 0x5D61646FEF6CA480) & (v1017 ^ 0x208606440424C248) ^ (16 * (v1017 ^ 0x208606440424C248)) & 0xF5D61646FEF6CA40;
  v1020 = (v1019 ^ 0x55400446EE648000) & (v1018 << 8) ^ v1018;
  v1021 = (((v1019 ^ 0xA096120010924A48) << 8) ^ 0xD61646FEF6CA4800) & (v1019 ^ 0xA096120010924A48) ^ ((v1019 ^ 0xA096120010924A48) << 8) & 0xF5D61646FEF6CA00;
  v1022 = v1020 ^ 0xF5D61646FEF6CA48 ^ (v1021 ^ 0xD4160646F6C20000) & (v1020 << 16);
  v1023 = v1013 ^ (2
                 * ((v1022 << 32) & 0x75D6164600000000 ^ v1022 ^ ((v1022 << 32) ^ 0x7EF6CA4800000000) & (((v1021 ^ 0x21C0100008348248) << 16) & 0x75D6164600000000 ^ 0x6190000000000000 ^ (((v1021 ^ 0x21C0100008348248) << 16) ^ 0x1646FEF600000000) & (v1021 ^ 0x21C0100008348248))));
  v1024 = (v1023 ^ 0x734EA015B27A6CB8) + ((v1023 >> 25) ^ 0xFFFFFFC658AFF526) + 1;
  v1025 = v1024 - (v1024 >> 11) - ((v1024 - (v1024 >> 11)) >> 6);
  v1026 = v1025
        - 0x19CD634DB404B01DLL
        - ((v1025 - 0x19CD634DB404B01DLL) >> 24)
        - ((v1025 - 0x19CD634DB404B01DLL - ((v1025 - 0x19CD634DB404B01DLL) >> 24)) >> 9);
  v1027 = v1026 - (v1026 >> 6);
  LODWORD(v1001) = v1027 ^ v1001;
  v1028 = (v1027 ^ 0x3B73525787EF3D13)
        - ((v1027 ^ 0x3B73525787EF3D13) >> 27)
        + (((v1027 ^ 0x3B73525787EF3D13) - ((v1027 ^ 0x3B73525787EF3D13) >> 27)) >> 9);
  v1029 = v1028 - (v1028 >> 2) - ((2 * (v1028 - (v1028 >> 2))) & 0x93774E41E6CD0B48) + 0x49BBA720F36685A4;
  v1030 = (((v1029 ^ 0x6D51D1F1D49B02D8) - 0x6D51D1F1D49B02D8) ^ ((v1029 ^ 0xD143FB22CAC0864) - 0xD143FB22CAC0864) ^ ((v1029 ^ 0x29FE49630B518F18) - 0x29FE49630B518F18))
        - 0x1E7168B397B6EFE6;
  v1031 = v1030 + (v1030 >> 30) + ((v1030 + (v1030 >> 30)) >> 14);
  v1032 = v840 ^ LODWORD(STACK[0x65C0]) ^ v852 ^ v870 ^ v887 ^ v828 ^ v988 ^ (2
                                                                            * (STACK[0x6590] & 0xC20000 ^ LODWORD(STACK[0x65A0]) ^ LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x6568]) ^ STACK[0x6558] & (LODWORD(STACK[0x6568]) << 16) ^ LODWORD(STACK[0x6540]) ^ STACK[0x6538] & (LODWORD(STACK[0x6540]) << 16) ^ v922 ^ v923 & (v922 << 16) ^ v929 ^ v930 & (v929 << 16) ^ v936 ^ v937 & (v936 << 16) ^ v997)) ^ v1025;
  v1033 = LODWORD(STACK[0x6618]) ^ (2 * LODWORD(STACK[0x6AA0]));
  v1034 = LODWORD(STACK[0x65E8]) >> 1;
  v1035 = v1031 - (v1031 >> 7) - ((2 * (v1031 - (v1031 >> 7))) & 0x6AA07E69D22111B2) - 0x4AAFC0CB16EF7727;
  v1036 = v1032 ^ v1034 ^ v1035;
  v1037 = (v1035 ^ 0x8300B8E76316C203)
        - ((v1035 ^ 0x8300B8E76316C203) >> 31)
        + (((v1035 ^ 0x8300B8E76316C203) - ((v1035 ^ 0x8300B8E76316C203) >> 31)) >> 15);
  v1038 = v1037 + (v1037 >> 3);
  v1039 = LODWORD(STACK[0x6588]) ^ LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x6550]) ^ LODWORD(STACK[0x6530]) ^ LODWORD(STACK[0x65D8]) ^ v895 ^ v909 ^ (2 * v916) ^ v1001 ^ v1038;
  v1040 = v1038
        + 0x5375B4D3090F5508
        + ((v1038 + 0x5375B4D3090F5508) >> 29)
        - ((v1038 + 0x5375B4D3090F5508 + ((v1038 + 0x5375B4D3090F5508) >> 29)) >> 8);
  v1041 = STACK[0x6A20] ^ STACK[0x6A40] ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A00]) ^ STACK[0x69F0] ^ STACK[0x6708] ^ (LODWORD(STACK[0x6620]) + 810) ^ v1029 ^ v1023 ^ (v1040 - (v1040 >> 2) - ((2 * (v1040 - (v1040 >> 2))) & 0x7BDE4660) + 1039082288);
  v1042 = v1036 ^ 0xC6212EDA;
  LODWORD(v1040) = (((2 * (v1042 & 0xFE ^ 0xE2)) & 0x1B0) - (v1042 & 0xFE ^ 0xE2) - 1456609498) ^ 0xC13D77B4;
  LODWORD(v1001) = (v1040 | 0x47106818) - (v1040 | 0xB8EF97E7) - 1192257561;
  LODWORD(STACK[0x6710]) = v1001;
  LODWORD(v1040) = 16843009
                 * (((v1001 ^ 0xB7E6C788) - 790646641) ^ ((v1001 ^ 0x42772E59) + 625891680) ^ ((v1001 ^ 0xDA911155)
                                                                                             - 1113037228))
                 - 1209432238;
  v1043 = (v1040 ^ 0xB3CB47AB) & (2 * (v1040 & 0xB3CA662B)) ^ v1040 & 0xB3CA662B;
  LODWORD(v1035) = ((2 * (v1040 ^ LODWORD(STACK[0x1340]))) ^ 0xB224320) & (v1040 ^ LODWORD(STACK[0x1340])) ^ (2 * (v1040 ^ LODWORD(STACK[0x1340]))) & 0x5912190;
  v1044 = (v1035 ^ 0x1800100) & (4 * v1043) ^ v1043;
  LODWORD(v1035) = ((4 * (v1035 ^ 0x4912090)) ^ 0x16448640) & (v1035 ^ 0x4912090) ^ (4 * (v1035 ^ 0x4912090)) & 0x5912190;
  v1045 = v1044 ^ 0x5912190 ^ (v1035 ^ 0x4000000) & (16 * v1044);
  LODWORD(v1035) = (16 * (v1035 ^ 0x1912190)) & 0x5912190 ^ 0x4812090 ^ ((16 * (v1035 ^ 0x1912190)) ^ 0x59121900) & (v1035 ^ 0x1912190);
  v1046 = (v1045 << 8) & 0x5912100 ^ v1045 ^ ((v1045 << 8) ^ 0x91219000) & v1035;
  LODWORD(STACK[0x6A00]) = v1040 ^ (2
                                  * ((v1046 << 16) & 0x5910000 ^ v1046 ^ ((v1046 << 16) ^ 0x21900000) & (((_DWORD)v1035 << 8) & 0x5910000 ^ 0x4900000 ^ (((_DWORD)v1035 << 8) ^ 0x91210000) & v1035)));
  v1047 = v1041 ^ 0x7662E4CC;
  LODWORD(STACK[0x68A0]) = v1041;
  LOBYTE(v1035) = (((v1041 ^ 0xC9) + 3) ^ ((v1041 ^ 0xCD) + 7) ^ ((v1041 ^ 0xC8) + 4)) + 5;
  LOBYTE(v1035) = (v1035 & 1) + 87 + (v1035 & 6 ^ 3);
  v1048 = (v1035 & 7 ^ 0x86A60A02) + (v1035 & 0x38 ^ 0x10000171);
  v1049 = ((v1041 ^ 0x7662E4CC) & 7 ^ 4) - ((2 * v1041) & 4) + 18;
  v1050 = STACK[0x6760];
  if (v863)
    v1050 = STACK[0x6750];
  LODWORD(STACK[0x6358]) = v1050;
  v1051 = STACK[0x6870];
  if (!v863)
    v1051 = STACK[0x6860];
  LODWORD(STACK[0x6350]) = v1051;
  v1052 = STACK[0x6A30];
  if (v863)
    v1052 = STACK[0x6970];
  LODWORD(STACK[0x6408]) = v1052;
  v1053 = STACK[0x6740];
  if (v863)
    v1053 = STACK[0x6730];
  LODWORD(STACK[0x6348]) = v1053;
  LODWORD(STACK[0x69E0]) = v1049;
  v1054 = v1049 ^ 0xB8FEB283;
  LODWORD(STACK[0x6930]) = v1054;
  v1055 = v1054 == -1191267694;
  v1056 = (v1048 - 1) ^ 0x96A60B6C;
  if (v1054 == -1191267694)
    v1057 = 0;
  else
    v1057 = 255;
  STACK[0x6A90] = v1056;
  v1058 = v1057 << v1056;
  v1059 = v1058;
  v1060 = -2097152000 * v1058 + 1208249095;
  v1061 = ((2 * (v1060 & 0xB7000000)) | 2) & (v1060 ^ 0xAE5377B0) ^ v1060 & 0xB7000000 ^ ((((((v1060 & 0xB7000000) >> 26) & 1) << 27) | 0x1003358)
                                                                                        + 3240);
  v1062 = (2 * (v1060 ^ 0xAE5377B0)) & 0x18000000 ^ 0x8000001 ^ ((2 * (v1060 ^ 0xAE5377B0)) ^ LODWORD(STACK[0x1344])) & (v1060 ^ 0xAE5377B0);
  v1063 = (4 * v1061) & 0x19A8E348 ^ v1061 ^ ((4 * v1061) ^ 0x4010004) & v1062;
  v1064 = (4 * v1062) & 0x19A8E348 ^ 0x19086249 ^ ((4 * v1062) ^ 0x66A38D24) & v1062;
  v1065 = (16 * v1063) & 0x19A8E340 ^ v1063 ^ ((16 * v1063) ^ 0x10040010) & v1064;
  v1066 = (16 * v1064) & 0x19A8E340 ^ 0x120C349 ^ ((16 * v1064) ^ 0x9A8E3490) & v1064;
  v1067 = v1065 ^ 0x8A8A248 ^ (v1065 << 8) & 0x19A8E300 ^ ((v1065 << 8) ^ 0x400100) & v1066;
  v1068 = (v1060 ^ (2
                  * ((v1067 << 16) & 0x19A80000 ^ v1067 ^ ((v1067 << 16) ^ 0x63490000) & ((v1066 << 8) & 0x19A80000 ^ 0x11080000 ^ ((v1066 << 8) ^ 0x28E30000) & v1066))) ^ 0xE9F94933) & (v1039 ^ 0x7CC3AFA7);
  LODWORD(STACK[0x6780]) = v1039;
  v1070 = v1058 ^ 0x66;
  LODWORD(STACK[0x6A40]) = (((v1039 ^ 0xFDC463FB) & 0x6F431B58 ^ 0x4D011A18 ^ v1068)
                          - ((2 * ((v1039 ^ 0xFDC463FB) & 0x6F431B58 ^ 0x4D011A18 ^ v1068)) & 0x947C5D0)
                          - 2069634328) ^ (16843009 * v1059 - ((33686018 * v1059) & 0x9C2AE34C) - 837455450);
  if (v1055)
    v1070 = -103;
  LODWORD(STACK[0x65A8]) = v1036;
  v1071 = (v1070 ^ 0x99) & (v1036 ^ 0xBC) ^ v1070 & 0x36;
  v1072 = (((2 * v1071) | 0x3C) - v1071 - 30) ^ 0x96;
  v1073 = ((v1072 | 0xBA8FC593) - (v1072 | 0x45703A6C) + 1164982892) ^ 0xBE8DD48B;
  LODWORD(STACK[0x6A20]) = (((2 * v1073) | 0x4E84F4C0) - v1073 - 658668128) ^ (16843009 * v1059);
  v1074 = (((v1042 ^ BYTE1(v1042) ^ BYTE2(v1042)) ^ 0x37)
         + ((v1042 ^ (v1042 >> 8) ^ HIWORD(v1042) ^ 0x461977CC) & 0x66 ^ 0x65CE0204)
         - (((v1042 ^ BYTE1(v1042) ^ BYTE2(v1042)) ^ 0x37) & 0x66666666)) ^ 0x65CE02F6;
  LODWORD(STACK[0x6708]) = v1042;
  v1069 = v1039 ^ 0xFDC463FB;
  v1075 = (((BYTE2(v1069) ^ 0x8D ^ BYTE1(v1069))
                           - ((2 * (BYTE2(v1069) ^ 0x8D ^ BYTE1(v1069))) & 0xE7)
                           + 115) ^ v1069) ^ HIBYTE(v1069);
  v1076 = *(_QWORD *)(STACK[0x6AB0]
                    + 8
                    * ((*(_QWORD *)(STACK[0x6AB0]
                                  + 8 * (*(_QWORD *)(STACK[0x6AB0] + 8 * ((*(_DWORD *)STACK[0x6AB0] & 1) == 0)) & 1)) & 1) == 0)) & 1;
  v1077 = (v1076 + 1023853403) ^ (v1076 + 1123369115) ^ ((v1076 ^ 0x3F18EDEB) - 2048011918);
  v1078 = STACK[0x6A80];
  LODWORD(STACK[0x6620]) = (2 * LODWORD(STACK[0x6A80])) & 0x88768BFA;
  LODWORD(STACK[0x65C0]) = v1078 - 1002748419;
  LODWORD(STACK[0x6590]) = ((v1042 & 0x1234E800 ^ 0x1010E8B1) + (v1042 & 0xEDCB1701) - 1) ^ 0x94A1400;
  LODWORD(STACK[0x65A0]) = v1047;
  v1079 = (v1047 & 0xFFFFFFF8 ^ 0x4D929563) - 1;
  LODWORD(STACK[0x6588]) = v1079 & 0x974B3B38 ^ 0x91093839;
  LODWORD(STACK[0x6570]) = v1079 & 0x68B4C4C0;
  v1080 = 16843009 * (HIBYTE(v1042) ^ 0xAA522FC6 ^ (v1074 - ((2 * v1074) & 0x6B0) - 1437454504));
  v1081 = 16843009 * (v1075 ^ 0x8D);
  v1082 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AC0])) - 4);
  LODWORD(STACK[0x68C0]) = v1034;
  LODWORD(STACK[0x69F0]) = v1034 ^ 0x48045F3C;
  LODWORD(STACK[0x6880]) = v1033 ^ 0xC11553BF;
  LODWORD(STACK[0x65E8]) = v1081;
  LODWORD(STACK[0x6618]) = v1080;
  LODWORD(STACK[0x69D0]) = v1081 ^ v1080;
  LODWORD(STACK[0x6960]) = v1033;
  LODWORD(STACK[0x6AA0]) = v1077;
  LODWORD(STACK[0x6A80]) = v1077 + 38859825;
  return v1082(0x60245421987E4C25);
}

uint64_t sub_100BBC534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _BOOL4 v8;

  v8 = (a8 - 1978246890) < LODWORD(STACK[0x6A80]);
  if (LODWORD(STACK[0x6AA0]) < 0xBAF53C9C != (a8 - 1978246890) < 0xBD4630CD)
    v8 = LODWORD(STACK[0x6AA0]) < 0xBAF53C9C;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5075 * !v8) ^ LODWORD(STACK[0x6AC0]))) - 4))();
}

uint64_t sub_100BBF600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  BOOL v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;

  v7 = (STACK[0x6890] & 2) == 0;
  v8 = STACK[0x6700];
  if ((STACK[0x6890] & 2) != 0)
    v8 = STACK[0x6628];
  LODWORD(STACK[0x6628]) = v8;
  v9 = STACK[0x6A10];
  if (v7)
    v9 = STACK[0x69C0];
  LODWORD(STACK[0x65D8]) = v9;
  v10 = STACK[0x6980];
  if (v7)
    v10 = STACK[0x6770];
  LODWORD(STACK[0x6598]) = v10;
  LODWORD(STACK[0x6620]) = LODWORD(STACK[0x65C0]) - LODWORD(STACK[0x6620]);
  v11 = (STACK[0x6940] & 2) == 0;
  v12 = STACK[0x6760];
  if ((STACK[0x6940] & 2) != 0)
    v12 = STACK[0x6750];
  LODWORD(STACK[0x6338]) = v12;
  v13 = STACK[0x6740];
  if (!v11)
    v13 = STACK[0x6730];
  LODWORD(STACK[0x6330]) = v13;
  LODWORD(STACK[0x6A10]) = LODWORD(STACK[0x6A50]) ^ 0x9235C065;
  LODWORD(STACK[0x6700]) = LODWORD(STACK[0x6780]) ^ 0xE98F1859;
  LODWORD(STACK[0x6980]) = LODWORD(STACK[0x6A00]) ^ 0xFA80368D;
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x6588]) + LODWORD(STACK[0x6570]) - 1;
  STACK[0x6AB0] = STACK[0xD630];
  LODWORD(STACK[0x69C0]) = LODWORD(STACK[0x69D0]) ^ 0xA6A6A6A6;
  LODWORD(STACK[0x6618]) ^= 0xE1E1E1E1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                                  + 8 * v6))(a1, a2, a3, a4, a5, a6, 0x1D941CAF5DD3B9CLL);
}

uint64_t sub_100BBF864()
{
  int v0;
  int v1;

  LODWORD(STACK[0x6AC0]) = v0 ^ 0x3F7;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((11961 * ((v1 - 858773431) > 1)) ^ v0)))();
}

uint64_t sub_100BC27F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  BOOL v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unsigned int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  unint64_t v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  uint64_t v96;
  int v97;
  char *v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  unint64_t v157;
  int v158;
  int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  uint64_t v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  uint64_t (*v198)(void);

  v8 = STACK[0x6A00];
  v9 = STACK[0x6A00] & 0xFE;
  v10 = (v9 ^ 0x9A) - ((2 * (v9 ^ 0x9A)) & 0xE8) - 1765829003;
  v11 = (v10 & 0x14148103 ^ 0x29002102) + (v10 ^ LODWORD(STACK[0x1348])) - ((v10 ^ LODWORD(STACK[0x1348])) & 0x40E00102);
  LODWORD(STACK[0x6550]) = v11;
  v12 = STACK[0x6590];
  v13 = STACK[0x6590] & 0xFFFFFF11;
  v14 = v11 & 0xA037F38C ^ 0x7FDCAD73 ^ (v11 ^ 0xC2E35E70) & (v13 ^ 0x7E4C9F62);
  if (v14 >= 0x101)
    v14 = (v14 - 257) % 0x101;
  LODWORD(STACK[0x6770]) = v14;
  v15 = (STACK[0x6890] & 2) == 0;
  v16 = STACK[0x69A0];
  if ((STACK[0x6890] & 2) != 0)
    v16 = STACK[0x6990];
  LODWORD(STACK[0x6558]) = v16;
  v17 = STACK[0x68B0];
  if (v15)
    v17 = STACK[0x66F8];
  LODWORD(STACK[0x68B0]) = v17;
  v18 = STACK[0x6920];
  if (!v15)
    v18 = STACK[0x68D0];
  v19 = STACK[0x6870];
  if ((STACK[0x6940] & 2) == 0)
    v19 = STACK[0x6860];
  LODWORD(STACK[0x6328]) = v19;
  v20 = STACK[0x6AC0];
  v21 = LODWORD(STACK[0x6AC0]) ^ 7u;
  STACK[0x6AB0] = v21;
  v22 = ((v6 + 0x11DF2A61D5E8C944) ^ 0xDAB11100E1CC26C8) & (2
                                                              * ((v21 - 0x23C66A6D3A14243FLL) & (v6
                                                                                               + 0x11DF2A61D5E8C944))) ^ (v21 - 0x23C66A6D3A14243FLL) & (v6 + 0x11DF2A61D5E8C944);
  v23 = ((2 * ((v6 + 0x11DF2A61D5E8C944) ^ 0x62C23305E9D42EC8)) ^ 0x7DF74D2E587013B2) & ((v6 + 0x11DF2A61D5E8C944) ^ 0x62C23305E9D42EC8) ^ (2 * ((v6 + 0x11DF2A61D5E8C944) ^ 0x62C23305E9D42EC8)) & 0xBEFBA6972C3809D8;
  v24 = (v23 ^ 0x32E2040608380081) & (4 * v22) ^ v22;
  v25 = ((4 * (v23 ^ 0x8208A29124080849)) ^ 0xFBEE9A5CB0E02764) & (v23 ^ 0x8208A29124080849) ^ (4 * (v23 ^ 0x8208A29124080849)) & 0xBEFBA6972C3809D8;
  v26 = (v25 ^ 0xBAEA821420200149) & (16 * v24) ^ v24;
  v27 = ((16 * (v25 ^ 0x41124830C180899)) ^ 0xEFBA6972C3809D90) & (v25 ^ 0x41124830C180899) ^ (16 * (v25 ^ 0x41124830C180899)) & 0xBEFBA6972C3809D0;
  v28 = (v27 ^ 0xAEBA201200000949) & (v26 << 8) ^ v26;
  v29 = (((v27 ^ 0x104186852C380049) << 8) ^ 0xFBA6972C3809D900) & (v27 ^ 0x104186852C380049) ^ ((v27 ^ 0x104186852C380049) << 8) & 0xBEFBA6972C380900;
  v30 = v28 ^ 0xBEFBA6972C3809D9 ^ (v29 ^ 0xBAA28604280800D9) & (v28 << 16);
  v31 = ((v6 + 0x11DF2A61D5E8C944) ^ (2
                                      * ((v30 << 32) & 0x3EFBA69700000000 ^ v30 ^ ((v30 << 32) ^ 0x2C3809D900000000) & (((v29 ^ 0x4592093043000D9) << 16) & 0x3EFBA69700000000 ^ 0x1868828700000000 ^ (((v29 ^ 0x4592093043000D9) << 16) ^ 0x26972C3800000000) & (v29 ^ 0x4592093043000D9))))) >> 31;
  v32 = v6
      + 0x3868D5EB81B909BLL
      + (((v31 ^ 0x8FBD10BAE06834B5) - 0x37C0B4D90E8D7C02) ^ ((v31 ^ 0xAB772469D2ED5D8DLL) - 0x130A800A3C08153ALL) ^ ((v31 ^ 0x24CA34D2C1F8DA05) + 0x63486F4ED0E26D4ELL));
  v33 = (v32 ^ 0xB36F86FDC5121200) & (2 * (v32 & 0xA30FD6F801525B44)) ^ v32 & 0xA30FD6F801525B44;
  v34 = ((2 * (v32 ^ 0xF7722F7DC512A080)) ^ 0xA8FBF30B8881F788) & (v32 ^ 0xF7722F7DC512A080) ^ (2 * (v32 ^ 0xF7722F7DC512A080)) & 0x547DF985C440FBC4;
  v35 = (v34 ^ 0x79F1000000F300) & (4 * v33) ^ v33;
  v36 = ((4 * (v34 ^ 0x5404088444400844)) ^ 0x51F7E6171103EF10) & (v34 ^ 0x5404088444400844) ^ (4 * (v34 ^ 0x5404088444400844)) & 0x547DF985C440FBC4;
  v37 = (v36 ^ 0x5075E0050000EB00) & (16 * v35) ^ v35;
  v38 = ((16 * (v36 ^ 0x4081980C44010C4)) ^ 0x47DF985C440FBC40) & (v36 ^ 0x4081980C44010C4) ^ (16 * (v36 ^ 0x4081980C44010C4)) & 0x547DF985C440FBC0;
  v39 = (v38 ^ 0x445D98044400B800) & (v37 << 8) ^ v37;
  v40 = (((v38 ^ 0x1020618180404384) << 8) ^ 0x7DF985C440FBC400) & (v38 ^ 0x1020618180404384) ^ ((v38 ^ 0x1020618180404384) << 8) & 0x547DF985C440FB00;
  v41 = v39 ^ 0x547DF985C440FBC4 ^ (v40 ^ 0x5479818440400000) & (v39 << 16);
  v42 = (v32 ^ (2
              * ((v41 << 32) & 0x547DF98500000000 ^ v41 ^ ((v41 << 32) ^ 0x4440FBC400000000) & (((v40 ^ 0x4780184003BC4) << 16) & 0x547DF98500000000 ^ 0x478398500000000 ^ (((v40 ^ 0x4780184003BC4) << 16) ^ 0x7985C44000000000) & (v40 ^ 0x4780184003BC4))))) >> 9;
  v43 = v32
      - (((v42 ^ 0xB8FD42095993EFDLL) - 0x300ED70206A92360) ^ ((v42 ^ 0x76D688E853E3F862) - 0x4D578BCAC0D3E5FFLL) ^ ((v42 ^ 0x7D18E623BBBE2F49) - 0x4699E501288E32D4))
      + 0x4F21ABDDFE738549;
  v44 = (v43 ^ 0xD229610C5BEDFD3ALL) & (2 * (v43 & 0x182D715013E9E1B0)) ^ v43 & 0x182D715013E9E1B0;
  v45 = ((2 * (v43 ^ 0xE261212C7A7E7D1ALL)) ^ 0xF498A0F8D32F3954) & (v43 ^ 0xE261212C7A7E7D1ALL) ^ (2 * (v43 ^ 0xE261212C7A7E7D1ALL)) & 0xFA4C507C69979CAALL;
  v46 = (v45 ^ 0xE008004041070800) & (4 * v44) ^ v44;
  v47 = ((4 * (v45 ^ 0xA445004289084AALL)) ^ 0xE93141F1A65E72A8) & (v45 ^ 0xA445004289084AALL) ^ (4
                                                                                                  * (v45 ^ 0xA445004289084AALL)) & 0xFA4C507C69979CA8;
  v48 = (v47 ^ 0xE8004070201610A0) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x124C100C49818C02)) ^ 0xA4C507C69979CAA0) & (v47 ^ 0x124C100C49818C02) ^ (16 * (v47 ^ 0x124C100C49818C02)) & 0xFA4C507C69979CA0;
  v50 = (v49 ^ 0xA044004409118800) & (v48 << 8) ^ v48;
  v51 = (((v49 ^ 0x5A0850386086140ALL) << 8) ^ 0x4C507C69979CAA00) & (v49 ^ 0x5A0850386086140ALL) ^ ((v49 ^ 0x5A0850386086140ALL) << 8) & 0xFA4C507C69979C00;
  v52 = v50 ^ 0xFA4C507C69979CAALL ^ (v51 ^ 0x4840506801940000) & (v50 << 16);
  v53 = (((v43 ^ (2
                * ((v52 << 32) & 0x7A4C507C00000000 ^ v52 ^ ((v52 << 32) ^ 0x69979CAA00000000) & (((v51 ^ 0xB20C0014680314AALL) << 16) & 0x7A4C507C00000000 ^ 0x2A00106800000000 ^ (((v51 ^ 0xB20C0014680314AALL) << 16) ^ 0x507C699700000000) & (v51 ^ 0xB20C0014680314AALL))))) >> 6) ^ 0xFF0D08381CFCE49CLL)
      + v43;
  v54 = v53
      - 0x41DD6DF823E4E03CLL
      - ((v53 - 0x41DD6DF823E4E03CLL) >> 31)
      - ((v53 - 0x41DD6DF823E4E03CLL - ((v53 - 0x41DD6DF823E4E03CLL) >> 31)) >> 14);
  v55 = v54 + (v54 >> 7);
  v56 = (v55 ^ 0xA181E2272F695246)
      - ((v55 ^ 0xA181E2272F695246) >> 27)
      + (((v55 ^ 0xA181E2272F695246) - ((v55 ^ 0xA181E2272F695246) >> 27)) >> 13);
  v57 = v56 + (v56 >> 6) - ((2 * (v56 + (v56 >> 6))) & 0x97E352CC72BDD918) + 0x4BF1A966395EEC8CLL;
  v58 = (v57 ^ 0x59B1EBE70206C4ECLL)
      - ((v57 ^ 0x59B1EBE70206C4ECLL) >> 25)
      - (((v57 ^ 0x59B1EBE70206C4ECLL) - ((v57 ^ 0x59B1EBE70206C4ECLL) >> 25)) >> 11);
  v59 = v58 - (v58 >> 6);
  v60 = v59 ^ (v53 + 334094769) ^ v5;
  v61 = v59
      - 0x19CD634DB404B01DLL
      - ((v59 - 0x19CD634DB404B01DLL) >> 24)
      - ((v59 - 0x19CD634DB404B01DLL - ((v59 - 0x19CD634DB404B01DLL) >> 24)) >> 9);
  v62 = v61 - (v61 >> 6);
  LODWORD(v61) = v62 ^ v55;
  v63 = (v62 ^ 0x3B73525787EF3D13)
      - ((v62 ^ 0x3B73525787EF3D13) >> 27)
      + (((v62 ^ 0x3B73525787EF3D13) - ((v62 ^ 0x3B73525787EF3D13) >> 27)) >> 9);
  v64 = v63 - (v63 >> 2);
  v65 = v64
      - 0x682D0FD48B1D758ALL
      + ((v64 - 0x682D0FD48B1D758ALL) >> 30)
      + ((v64 - 0x682D0FD48B1D758ALL + ((v64 - 0x682D0FD48B1D758ALL) >> 30)) >> 14);
  v66 = v65 - (v65 >> 7);
  v67 = v60 ^ v66;
  v68 = (v66 ^ 0x365087D38A064ADALL)
      - ((v66 ^ 0x365087D38A064ADALL) >> 31)
      + (((v66 ^ 0x365087D38A064ADALL) - ((v66 ^ 0x365087D38A064ADALL) >> 31)) >> 15);
  v69 = v68 + (v68 >> 3);
  v70 = v69
      + 0x5375B4D3090F5508
      + ((v69 + 0x5375B4D3090F5508) >> 29)
      - ((v69 + 0x5375B4D3090F5508 + ((v69 + 0x5375B4D3090F5508) >> 29)) >> 8);
  v71 = v64 ^ v57 ^ v7 ^ (v70 - (v70 >> 2));
  v72 = ((((v67 & 0xC0) + (v67 & 0xFE ^ 0x684AC8C3)) | 0x84143600) - ((v67 & 0xFE ^ 0x684AC8C3) & 0x248C0)) ^ 0xEC5CB6E7;
  LODWORD(v57) = 16843009 * v72 + 825351148;
  v73 = (v57 ^ 0xCC8DA5C2) & (2 * (v57 & 0xCECE2414)) ^ v57 & 0xCECE2414;
  v74 = ((2 * (v57 ^ 0xC091EDCA)) ^ 0x1CBF93BC) & (v57 ^ 0xC091EDCA) ^ (2 * (v57 ^ 0xC091EDCA)) & 0xE5FC9DE;
  v75 = (v74 ^ 0xC198090) & (4 * v73) ^ v73;
  v76 = ((4 * (v74 ^ 0x2404842)) ^ 0x397F2778) & (v74 ^ 0x2404842) ^ (4 * (v74 ^ 0x2404842)) & 0xE5FC9DC;
  v77 = (v76 ^ 0x85F0140) & (16 * v75) ^ v75;
  v78 = ((16 * (v76 ^ 0x600C886)) ^ 0xE5FC9DE0) & (v76 ^ 0x600C886) ^ (16 * (v76 ^ 0x600C886)) & 0xE5FC9D0;
  v79 = v77 ^ 0xE5FC9DE ^ (v78 ^ 0x45C891E) & (v77 << 8);
  v80 = v57 ^ (2
             * ((v79 << 16) & 0xE5F0000 ^ v79 ^ ((v79 << 16) ^ 0x49DE0000) & (((v78 ^ 0xA03401E) << 8) & 0xE5F0000 ^ 0x160000 ^ (((v78 ^ 0xA03401E) << 8) ^ 0x5FC90000) & (v78 ^ 0xA03401E))));
  v81 = ((v61 ^ v69) - ((2 * (v61 ^ v69)) & 0xA58C0F68) + 1388709812) ^ a5;
  LODWORD(v61) = ((v67 & 0xFFFFFF01 ^ 0x2829DC01)
                + 1098057849
                - ((2 * (v67 & 0xFFFFFF01 ^ 0x2829DC01)) & 0x82E62C00)
                + 3601) ^ 0x416B161A;
  v82 = ((2 * v61) & 0x4C03D200) - v61;
  LOBYTE(v57) = (v71 & 7 ^ 2) - 2 * (v71 & 1) - 87;
  v83 = (v57 & 5) - 2079825921 + (v57 & 0x3A ^ 0x10000129);
  LODWORD(v57) = ((v71 ^ 6) + 1) & 7 ^ 6;
  v84 = ((v57 - ((2 * v57) & 8) + 1381740076) & 0x1059283C ^ 0x801010)
      + ((v57 - ((2 * v57) & 8) + 1381740076) ^ 0x565FEEAE)
      - (((v57 - ((2 * v57) & 8) + 1381740076) ^ 0x565FEEAE) & 0x40440BC);
  LODWORD(STACK[0x68D0]) = ((2 * (v71 & 0xFFFFFFF8 ^ 0xD276DEE)) & 0x4C942D2C) - (v71 & 0xFFFFFFF8 ^ 0xD276DEE);
  LODWORD(STACK[0x6990]) = v83 ^ 0xB7A4360C;
  v85 = v84 ^ 0x10D93838;
  if ((v83 ^ 0xB7A4360C) == 0x23AC570E)
    v86 = 0;
  else
    v86 = 255;
  v87 = v86 << v85;
  v88 = (v86 << v85);
  LODWORD(STACK[0x6570]) = v88;
  LODWORD(STACK[0x65C0]) = ((-2097152000 * v88) & (v81 ^ 0xC7000000) & 0x4000000 ^ 0x4410185)
                         + ((-2097152000 * v88) & (v81 ^ 0xC7000000) ^ 0x100C0A58)
                         - (((-2097152000 * v88) & (v81 ^ 0xC7000000) ^ 0x100C0A58) & 0x4040A58);
  LODWORD(STACK[0x66F8]) = v81;
  LODWORD(STACK[0x6760]) = v72
                         - (((LODWORD(STACK[0x6710]) ^ 0xB57C6B7F) - 767222662) ^ ((LODWORD(STACK[0x6710]) ^ 0xA2E945C0)
                                                                                 - 976211257) ^ ((LODWORD(STACK[0x6710]) ^ 0x3895D63B)
                                                                                               + 1605148990));
  v89 = STACK[0x6A90];
  v90 = (-184532857 * STACK[0x6A90]) ^ LODWORD(STACK[0x65E0]);
  LODWORD(STACK[0x6A80]) = v85;
  LODWORD(STACK[0x6548]) = v90 ^ (-184532857 * v85);
  v91 = 16843009
      * (BYTE2(v67) ^ HIBYTE(v67) ^ 0x9D ^ (((BYTE1(v67) ^ 0x7A)
                                                            - 2 * ((BYTE1(v67) ^ 0x7A) & 0x1C ^ BYTE1(v67) & 4)
                                                            - 104) ^ v67));
  v92 = 16843009
      * (v81 ^ 0x2D ^ ((unsigned __int16)(v81 ^ 0x482D) >> 8) ^ ((v81 ^ 0x9DA0482D) >> 16) ^ HIBYTE(v81) ^ 0x64);
  LODWORD(STACK[0x6750]) = v91;
  LODWORD(STACK[0x6518]) = v92;
  v93 = v91 ^ 0x56565656 ^ v92;
  v94 = STACK[0x69C0];
  LODWORD(STACK[0x6568]) = (v18 ^ 0xD56B3654) + 1812066115 * (LODWORD(STACK[0x69C0]) - v93);
  v95 = LODWORD(STACK[0x65C8]) + 1846523419 - ((2 * LODWORD(STACK[0x65C8])) & 0xDC1F7ACA);
  v96 = (uint64_t)*(&off_1015B46D0 + v20 - 17438);
  v97 = v20;
  v98 = (char *)*(&off_1015B46D0 + (v20 ^ 0x4BBC)) - 8;
  LODWORD(STACK[0x6890]) = LODWORD(STACK[0x65D0])
                         + (*(_DWORD *)&v98[4 * v89] ^ 0xFC26B1E4)
                         + (*(_DWORD *)(v96 + 4 * v85) ^ v84 ^ 0x4B081522);
  v99 = LODWORD(STACK[0x6930]) ^ (v95 + 1866);
  LODWORD(STACK[0x69A0]) = v80;
  v100 = v99 ^ ((v80 ^ v8) >> 3);
  LODWORD(STACK[0x65C8]) = v100 ^ 0xD991FDA3;
  LODWORD(STACK[0x6588]) = (v100 ^ 0xD991FDA3) & 0x23AC571E ^ v100 & 0x10;
  LODWORD(STACK[0x65D0]) = LODWORD(STACK[0x65B0]) ^ (v89 - 188887584 - ((2 * v89) & 0xD6C) + 2262);
  LODWORD(STACK[0x65B0]) = v82 + 1509824247;
  LODWORD(STACK[0x6860]) = v80 & 0xFE;
  LODWORD(STACK[0x6538]) = (v82 + 1509824247) ^ 0x20594299;
  v101 = (v82 + 1509824247) & 0xC38F46A0 ^ 0x43084480 ^ (v80 & 0xFE ^ 0x3C70B9F7) & ((v82 + 1509824247) ^ 0x20594299);
  v102 = (v101 | 0x303030E) - (v101 | 0xFCFCFCF1);
  v103 = STACK[0x69E0];
  v104 = 4 * (LODWORD(STACK[0x69E0]) ^ 0x11u);
  STACK[0x6530] = v104;
  LODWORD(v89) = (LODWORD(STACK[0x65F0]) ^ 0x3827518B) + (*(_DWORD *)&v98[v104] ^ 0x3D94E1B);
  LODWORD(v104) = v97;
  v105 = (char *)*(&off_1015B46D0 + (v97 ^ 0x4BE7)) - 4;
  v106 = 4 * (v83 ^ 0x94086102);
  STACK[0x65F0] = v106;
  LODWORD(STACK[0x6740]) = v89 + (LODWORD(STACK[0x134C]) ^ __ROR4__(*(_DWORD *)&v105[v106], 13));
  LODWORD(STACK[0x6520]) = v102 - 50529039;
  v107 = (v102 - 50529039) ^ 0xBFFDFAF1;
  LODWORD(STACK[0x6528]) = v107;
  v108 = ((v9 ^ 0x50) + (v8 & 0xE0 ^ 0x9ED09A0) - ((v9 ^ 0x50) & 0xE0)) ^ 0x99EDF9EA;
  v109 = (((2 * v108) | 0xB78540D6) - v108 + 608001941) ^ 0xED842DF4;
  v110 = v13 ^ 0xDE7B6CEE;
  v111 = STACK[0x65A8];
  v112 = (((-1783470298 - (STACK[0x65A8] & 4 | 0x8510148)) ^ 0xA236EDF6) + 1788506941) ^ (((-1783470298
                                                                                          - (STACK[0x65A8] & 4 | 0x8510148)) ^ 0x94D8C1E)
                                                                                        - 1042214187) ^ (((-1783470298 - (STACK[0x65A8] & 4 | 0x8510148)) ^ 0x261A0432) - 290022663);
  LODWORD(STACK[0x6730]) = (LODWORD(STACK[0x65F8]) ^ 0x3827518B)
                         + (*(_DWORD *)&v98[4 * ((v67 ^ 0xAE6977E4) % 0x101)] ^ 0xFC26B1E4)
                         + ((*((_DWORD *)*(&off_1015B46D0 + (int)(v104 ^ 0x4E73)) + v107 % 0x101) - 761724263) ^ 0xC3CE8AA);
  v113 = v12 & 0x59B98210 ^ 0xA7C6FFDF ^ v109 & v110 ^ LODWORD(STACK[0x65B8]) ^ (((v12 & 0x59B98210 ^ 0xA7C6FFDF ^ v109 & v110) >> 4)
                                                                               - (((v12 & 0x59B98210 ^ 0xA7C6FFDF ^ v109 & v110) >> 3) & 0xAD66CA8)
                                                                               - 714394028);
  v114 = v112 - 626855011;
  v115 = (v114 ^ 0xDF2E1D50) & (2 * (v114 & 0xDF8F1152)) ^ v114 & 0xDF8F1152;
  v116 = ((2 * (v114 ^ 0xEA223FD0)) ^ 0x6B5A5D04) & (v114 ^ 0xEA223FD0) ^ (2 * (v114 ^ 0xEA223FD0)) & 0x35AD2E82;
  v117 = (v116 ^ 0x20892C02) & (4 * v115) ^ v115;
  v118 = ((4 * (v116 ^ 0x14A52282)) ^ 0xD6B4BA08) & (v116 ^ 0x14A52282) ^ (4 * (v116 ^ 0x14A52282)) & 0x35AD2E80;
  v119 = v118 ^ 0x21090482;
  v120 = (v118 ^ 0x14A42A02) & (16 * v117) ^ v117;
  v121 = ((16 * v119) ^ 0x5AD2E820) & v119 ^ (16 * v119) & 0x35AD2E80;
  v122 = v120 ^ 0x35AD2E82 ^ (v121 ^ 0x10802882) & (v120 << 8);
  v123 = v113 & ((v112 - 626855011) ^ (2
                                     * ((v122 << 16) & 0x35AD0000 ^ v122 ^ ((v122 << 16) ^ 0x2E820000) & (((v121 ^ 0x252D0682) << 8) & 0x35AD0000 ^ 0x10810000 ^ (((v121 ^ 0x252D0682) << 8) ^ 0xAD2E0000) & (v121 ^ 0x252D0682)))) ^ 0xFDD54C56) ^ 0x904A00E5;
  v124 = ((2 * v123) & 0x4E507AF0) - v123;
  if ((v83 ^ 0xB7A4360C) == 0x23AC570E)
    v125 = -1713229678;
  else
    v125 = v87 ^ 0x661DCF6D;
  LODWORD(STACK[0x6870]) = v125;
  v15 = v124 == 1875247067;
  v126 = 1715399103 - v112;
  if (v15)
    v126 = v112 - 626855011;
  v127 = (LODWORD(STACK[0x68D0]) - 642389655) & 0xFFFFFFFC;
  v128 = (v83 ^ 0x6BF79EFC) & (v127 ^ 0xF2845226) ^ v83 & 0xEA2D;
  LODWORD(STACK[0x6540]) = v128;
  LODWORD(STACK[0x65E0]) = v128 & 0x29218ECE ^ 0x10005;
  v129 = STACK[0x6AA0];
  v130 = (LODWORD(STACK[0x6AA0]) ^ 0xE0EB62C4) & (v103 ^ 0xFFFFFFEC) ^ (v103 & 0x1B | 0x480204C0);
  v131 = LODWORD(STACK[0x6558]) ^ (LODWORD(STACK[0x6AA0]) >> 4) ^ (32 * v94 - ((v94 << 6) & 0xFDC5400) - 2014434786) ^ (((2 * v130) | 0x8B754BDE) - v130 - 1169860079);
  v132 = STACK[0x6608];
  v133 = STACK[0x6708];
  LODWORD(STACK[0x68D0]) = ((STACK[0x6708] & 0x153D3262 ^ 0x213005) + (STACK[0x6708] & 0xEAC2CD99) - 1) ^ (LODWORD(STACK[0x6708]) >> 4) ^ (v113 - 544272046 + v126 - ((2 * (v113 - 544272046 + v126)) & 0x72DE73F4) + 963590650);
  v134 = v12 & 0x683FD411 ^ 0x20095441 ^ (LODWORD(STACK[0x6550]) ^ 0xAADC8AA5) & v110;
  v135 = (v134 | 0x10CA5353) - (v134 | 0xEF35ACAC);
  v136 = STACK[0x68A0];
  v137 = 0xFF00FF00FF0100
       * (((v136 ^ 0xC05806F1A290667BLL) + 0x3FA7F90E4094D124) ^ ((v136 ^ 0xAE2DC0323BA18011) + 0x51D23FCDD9A5374ALL) ^ ((v136 ^ 0x6E75C6C3E18EB539) - 0x6E75C6C3FC75FD9ELL))
       - 0x1F809BB98260DCCALL;
  v138 = (v137 ^ 0xC4890BBA5E228FDBLL) & (2 * (v137 & 0xD6C953029E88D002)) ^ v137 & 0xD6C953029E88D002;
  v139 = ((2 * (v137 ^ 0x6C0B0DBE7E330FDFLL)) ^ 0x7584BD79C177BE28) & (v137 ^ 0x6C0B0DBE7E330FDFLL) ^ (2 * (v137 ^ 0x6C0B0DBE7E330FDFLL)) & 0xBAC25EBCE0BBDE00;
  v140 = (v139 ^ 0x30001C18C0238010) & (4 * v138) ^ v138;
  v141 = ((4 * (v139 ^ 0x8A42428420884005)) ^ 0xEB097AF382EF7C54) & (v139 ^ 0x8A42428420884005) ^ (4 * (v139 ^ 0x8A42428420884005)) & 0xBAC25EBCE0BBDF14;
  v142 = (v141 ^ 0xAA005AB080AB5C00) & (16 * v140) ^ v140;
  v143 = ((16 * (v141 ^ 0x10C2040C60108301)) ^ 0xAC25EBCE0BBDF150) & (v141 ^ 0x10C2040C60108301) ^ (16 * (v141 ^ 0x10C2040C60108301)) & 0xBAC25EBCE0BBDF10;
  v144 = (v143 ^ 0xA8004A8C00B9D100) & (v142 << 8) ^ v142;
  v145 = (((v143 ^ 0x12C21430E0020E05) << 8) ^ 0xC25EBCE0BBDF1500) & (v143 ^ 0x12C21430E0020E05) ^ ((v143 ^ 0x12C21430E0020E05) << 8) & 0xBAC25EBCE0BBDF00;
  v146 = v144 ^ 0xBAC25EBCE0BBDF15 ^ (v145 ^ 0x82421CA0A09B0000) & (v144 << 16);
  v147 = v137 ^ (2
               * ((v146 << 32) & 0x3AC25EBC00000000 ^ v146 ^ ((v146 << 32) ^ 0x60BBDF1500000000) & (((v145 ^ 0x3880421C4020CA15) << 16) & 0x3AC25EBC00000000 ^ 0x20421E0400000000 ^ (((v145 ^ 0x3880421C4020CA15) << 16) ^ 0x5EBCE0BB00000000) & (v145 ^ 0x3880421C4020CA15))));
  v148 = ((v147 ^ 0xAEA4988448630A18) + 0x18FBDFFECC299D3ELL) ^ ((v147 ^ 0xB611E6D49C4555AFLL) + 0x4EA1AE180FC28BLL);
  LODWORD(v147) = __CFADD__(257 * (v148 ^ ((v147 ^ 0xFAFC2C038BD93157) + 0x4CA36B790F93A673)), 0x95D4C0FA6E50403ALL)
                + (((v148 ^ ((v147 ^ 0xFAFC2C038BD93157) + 0x4CA36B790F93A673)) * (unsigned __int128)0x101uLL) >> 64)
                + 257
                * ((__CFADD__(v147 ^ 0xAEA4988448630A18, 0x18FBDFFECC299D3ELL) - 1) ^ (__CFADD__(v147 ^ 0xB611E6D49C4555AFLL, 0x4EA1AE180FC28BLL)- 1) ^ (__CFADD__(v147 ^ 0xFAFC2C038BD93157, 0x4CA36B790F93A673)- 1))+ 565887028;
  LODWORD(v148) = (v147 ^ LODWORD(STACK[0x1350])) & (2 * (v147 & 0xDE454078)) ^ v147 & 0xDE454078;
  LODWORD(v145) = ((2 * (v147 ^ 0xDB935045)) ^ 0xBAC207A) & (v147 ^ 0xDB935045) ^ (2 * (v147 ^ 0xDB935045)) & 0x5D6103C;
  LODWORD(v148) = (v145 ^ 0x5441025) & (4 * v148) ^ v148;
  LODWORD(v145) = ((4 * (v145 ^ 0x4521005)) ^ 0x175840F4) & (v145 ^ 0x4521005) ^ (4 * (v145 ^ 0x4521005)) & 0x5D6103C;
  LODWORD(v148) = (v145 ^ 0x5500021) & (16 * v148) ^ v148;
  LODWORD(v145) = ((16 * (v145 ^ 0x861009)) ^ 0x5D6103D0) & (v145 ^ 0x861009) ^ (16 * (v145 ^ 0x861009)) & 0x5D61030;
  LODWORD(v148) = v148 ^ 0x5D6103D ^ (v145 ^ 0x540002D) & ((_DWORD)v148 << 8);
  v149 = v147 ^ (2
               * (((_DWORD)v148 << 16) & 0x5D60000 ^ v148 ^ (((_DWORD)v148 << 16) ^ 0x103D0000) & (((v145 ^ 0x96102D) << 8) & 0x5D60000 ^ 0x1C60000 ^ (((v145 ^ 0x96102D) << 8) ^ 0x56100000) & (v145 ^ 0x96102D))));
  v150 = (v132 ^ v133 ^ 0x2A65CF08)
       + ((2 * ((v111 ^ 0xFEFF4137) & (v132 ^ 0x399D6DAC) ^ v133 & 0x2B26CD49)) ^ 0x500C9A92)
       + ((v135 - 281695060) ^ 0x78F8435A);
  v151 = (v129 ^ 0x4C49879B) & (v103 ^ 0xFFFFFFEA) ^ (v103 | 0x9E0F9D5B);
  LODWORD(v148) = LODWORD(STACK[0x68A0]) ^ 0x1DFB48A7 ^ (LODWORD(STACK[0x65A0]) >> 4);
  LODWORD(STACK[0x6610]) ^= v94 ^ v93;
  LODWORD(v148) = v148 ^ LODWORD(STACK[0x69D0]) ^ v93 ^ ((v131 ^ (32 * v93) ^ 0x3231B896)
                                                       - 2 * ((v131 ^ (32 * v93) ^ 0x3231B896) & 0x1DE6655B ^ v131 & 8)
                                                       + 501638483);
  LODWORD(v147) = *(_DWORD *)(v96 + 4 * (v149 ^ 0xD5C16002));
  LODWORD(v145) = (v83 ^ 0x6BF79EFD) & (v127 ^ 0xDB5ADEFD) ^ v83 & 0x866F6;
  v152 = (v145 & 0x3EF7B3C2 ^ 0x16A7B140) + (v145 ^ 0x28504286) - ((v145 ^ 0x28504286) & 0x3EF7B3C2);
  LODWORD(STACK[0x64F0]) = v152;
  LODWORD(STACK[0x6608]) = LODWORD(STACK[0x6520]) ^ v67 ^ 0x3FCADC14 ^ ((LODWORD(STACK[0x6548]) ^ ((LODWORD(STACK[0x6528]) ^ v67) << 8) ^ 0x6977E400)
                                                                      - 2
                                                                      * ((LODWORD(STACK[0x6548]) ^ ((LODWORD(STACK[0x6528]) ^ v67) << 8) ^ 0x6977E400) & 0x11A3ABFA ^ STACK[0x6548] & 0xA)
                                                                      - 1851544592);
  v153 = *(_DWORD *)(v96 + STACK[0x65F0]);
  v154 = LODWORD(STACK[0x68B0])
       + ((v151 % 0x101) ^ 0xA42ED2E5 ^ *(_DWORD *)(v96 + 4 * (v151 % 0x101)))
       + (v149 ^ 0x304D6C1 ^ (v147 - ((2 * v147) & 0x1A2937B2) - 1928029223));
  LODWORD(STACK[0x6510]) = ((v136 ^ 0x857945DB) + 1736307332) ^ ((v136 ^ 0x69C5F95C) - 1950265851) ^ ((v136 ^ 0x9403EFD4) + 1980192909);
  v155 = *(_DWORD *)&v105[STACK[0x6530]];
  v156 = (LODWORD(STACK[0x6A60]) ^ 0xD8D26704)
       + (*(_DWORD *)&v98[4 * ((v71 ^ 0x9D6CC371) % 0x101)] ^ 0xFC26B1E4)
       + (__ROR4__(*(_DWORD *)&v105[4 * ((v152 ^ 0x840B084F) % 0x101)], 13) ^ 0xD0342AA4);
  HIDWORD(v157) = *(_DWORD *)&v105[4 * ((v111 ^ 0xFEFF4137) % 0x101)];
  LODWORD(v157) = HIDWORD(v157);
  LODWORD(v147) = STACK[0x65B0] & 0xFE4B7187 ^ 0xAC0A7084 ^ (LODWORD(STACK[0x6860]) ^ 0x1B48ED0) & STACK[0x6538];
  LODWORD(v148) = (*(_DWORD *)&v98[4 * LODWORD(STACK[0x6770])] ^ 0x3D94E1B)
                + ((((v157 >> 13) ^ 0xE1FEB858) + 1790829820) ^ (((v157 >> 13) ^ 0x5688C6FF) - 573859235) ^ (((v157 >> 13) ^ 0x98BDABFC) + 335476576))
                - 1886849350
                + (((v148 ^ 0xCF2A1CC1) - 263327887) ^ ((v148 ^ 0x18220597) + 658896423) ^ ((v148 ^ 0x9E11A2E)
                                                                                          + 914811296));
  v158 = (v148 ^ 0xC35FECC0) & (2 * (v148 & 0xEA5F8E84)) ^ v148 & 0xEA5F8E84;
  v159 = ((2 * (v148 ^ 0x87CBECC0)) ^ 0xDB28C488) & (v148 ^ 0x87CBECC0) ^ (2 * (v148 ^ 0x87CBECC0)) & 0x6D946244;
  v160 = (v159 ^ 0x49004000) & (4 * v158) ^ v158;
  v161 = ((4 * (v159 ^ 0x24942244)) ^ 0xB6518910) & (v159 ^ 0x24942244) ^ (4 * (v159 ^ 0x24942244)) & 0x6D946244;
  v162 = (v161 ^ 0x24100004) & (16 * v160) ^ v160;
  v163 = ((16 * (v161 ^ 0x49846244)) ^ 0xD9462440) & (v161 ^ 0x49846244) ^ (16 * (v161 ^ 0x49846244)) & 0x6D946240;
  v164 = v162 ^ 0x6D946244 ^ (v163 ^ 0x49042004) & (v162 << 8);
  LODWORD(STACK[0x6860]) = v148 ^ (2
                                 * ((v164 << 16) & 0x6D940000 ^ v164 ^ ((v164 << 16) ^ 0x62440000) & (((v163 ^ 0x24904204) << 8) & 0x6D940000 ^ 0x69940000 ^ (((v163 ^ 0x24904204) << 8) ^ 0x14620000) & (v163 ^ 0x24904204))));
  LODWORD(v147) = (((2 * v147) | 0xC91CF04E) - v147 + 460425177) ^ 0x9732B7DD;
  LODWORD(v148) = v147 ^ (4 * ((v147 + 295935919 - ((2 * v147) & 0x234757E0) + 3137) ^ v67 ^ 0x3FCADC14));
  LODWORD(v147) = (v148 - 673783638 - 2 * (v148 & 0x57D6E0AB ^ v147 & 1)) ^ LODWORD(STACK[0x6600]);
  v165 = ((LODWORD(STACK[0x6780]) ^ 0xF17BEE07) - 418707038) ^ ((LODWORD(STACK[0x6780]) ^ 0xD864CA02) - 837538395) ^ ((LODWORD(STACK[0x6780]) ^ 0x55DC8BA2) + 1135373317);
  v166 = (((LODWORD(STACK[0x66C8]) ^ 0x2D2440F7) - 757350647) ^ ((LODWORD(STACK[0x66C8]) ^ 0x3DB09759) - 1034983257) ^ ((LODWORD(STACK[0x66C8]) ^ 0xB6285147) + 1238871737))
       + 553629999
       * ((((v111 ^ 0x82449E2C) + 184784700) ^ ((v111 ^ 0x3C38EE84) - 1249908844) ^ ((v111 ^ 0x857F8EBB) + 205031341))
        - (((v67 ^ 0x9E184618) + 1133989341) ^ ((v67 ^ 0x6AB2FD5B) - 1220675936) ^ ((v67 ^ 0x9F3F7383) + 1118861384)))
       + 774583321;
  v167 = (v166 ^ 0xD8BDA68B) & (2 * (v166 & 0xE13DC6D0)) ^ v166 & 0xE13DC6D0;
  LODWORD(v145) = ((2 * (v166 ^ 0x18B4272B)) ^ 0xF313C3F6) & (v166 ^ 0x18B4272B) ^ (2 * (v166 ^ 0x18B4272B)) & 0xF989E1FA;
  v168 = (v145 ^ 0x810101C0) & (4 * v167) ^ v167;
  LODWORD(v145) = ((4 * (v145 ^ 0x8882009)) ^ 0xE62787EC) & (v145 ^ 0x8882009) ^ (4 * (v145 ^ 0x8882009)) & 0xF989E1F8;
  v169 = (v145 ^ 0xE00181F3) & (16 * v168) ^ v168;
  LODWORD(v145) = ((16 * (v145 ^ 0x19886013)) ^ 0x989E1FB0) & (v145 ^ 0x19886013) ^ (16 * (v145 ^ 0x19886013)) & 0xF989E1F0;
  v170 = v169 ^ 0xF989E1FB ^ (v145 ^ 0x98880100) & (v169 << 8);
  LODWORD(STACK[0x6600]) = v166 ^ (2
                                 * ((v170 << 16) & 0x79890000 ^ v170 ^ ((v170 << 16) ^ 0x61FB0000) & (((v145 ^ 0x6101E04B) << 8) & 0x79890000 ^ 0x70080000 ^ (((v145 ^ 0x6101E04B) << 8) ^ 0x9E10000) & (v145 ^ 0x6101E04B))));
  v171 = (LODWORD(STACK[0x65D0]) ^ 0xE6067653 ^ LODWORD(STACK[0x6A80]))
       + 185397543 * (v165 - (LODWORD(STACK[0x66F8]) ^ 0x5FF3648A))
       - 1823697697;
  v172 = (v171 ^ 0xCEFDCC83) & (2 * (v171 & 0xEE8190D3)) ^ v171 & 0xEE8190D3;
  LODWORD(v145) = ((2 * (v171 ^ 0xC2FFCD83)) ^ 0x58FCBAA0) & (v171 ^ 0xC2FFCD83) ^ (2 * (v171 ^ 0xC2FFCD83)) & 0x2C7E5D50;
  v173 = (v145 ^ 0x80C0000) & (4 * v172) ^ v172;
  LODWORD(v145) = ((4 * (v145 ^ LODWORD(STACK[0x1358]))) ^ 0xB1F97540) & (v145 ^ LODWORD(STACK[0x1358])) ^ (4 * (v145 ^ LODWORD(STACK[0x1358]))) & 0x2C7E5D50;
  v174 = (v145 ^ 0x20785540) & (16 * v173) ^ v173;
  LODWORD(v145) = ((16 * (v145 ^ 0xC060810)) ^ 0xC7E5D500) & (v145 ^ 0xC060810) ^ (16 * (v145 ^ 0xC060810)) & 0x2C7E5D50;
  v175 = v174 ^ 0x2C7E5D50 ^ (v145 ^ 0x4645500) & (v174 << 8);
  LODWORD(STACK[0x6780]) = v171 ^ (2
                                 * ((v175 << 16) & 0x2C7E0000 ^ v175 ^ ((v175 << 16) ^ 0x5D500000) & (((v145 ^ 0x281A0850) << 8) & 0x2C7E0000 ^ 0x220000 ^ (((v145 ^ 0x281A0850) << 8) ^ 0x7E5D0000) & (v145 ^ 0x281A0850))));
  LODWORD(v147) = ((v147 - ((2 * v147) & 0x234757E0) - 1851544592) ^ v67 ^ 0x3FCADC14)
                + 2108515253
                * ((((v136 ^ 0xD3A304DD) + 980246213) ^ ((v136 ^ 0xBA5707FF) + 1402559975) ^ ((v136 ^ 0xD4B7EF55)
                                                                                            + 1031386445))
                 - (((v71 ^ 0x11818331) + 1277963487) ^ ((v71 ^ 0xA618D03) + 1472996077) ^ ((v71 ^ 0x43707267)
                                                                                          + 517856649)))
                - 1088766843;
  LODWORD(v148) = (v147 ^ 0xA85B5C26) & (2 * (v147 & 0x311A5E37)) ^ v147 & 0x311A5E37;
  v176 = ((2 * (v147 ^ 0xA87F7C00)) ^ 0x32CA446E) & (v147 ^ 0xA87F7C00) ^ (2 * (v147 ^ 0xA87F7C00)) & 0x99652236;
  v177 = v176 ^ LODWORD(STACK[0x135C]);
  v178 = ((4 * (v176 ^ 0x89252211)) ^ 0x659488DC) & (v176 ^ 0x89252211) ^ (4 * (v176 ^ 0x89252211)) & 0x99652234;
  LODWORD(v148) = (v178 ^ 0x1040013) & (16 * (v177 & (4 * v148) ^ v148)) ^ v177 & (4 * v148) ^ v148;
  v179 = ((16 * (v178 ^ 0x98612223)) ^ 0x96522370) & (v178 ^ 0x98612223) ^ (16 * (v178 ^ 0x98612223)) & 0x99652230;
  LODWORD(v148) = v148 ^ 0x99652237 ^ (v179 ^ 0x90402207) & ((_DWORD)v148 << 8);
  LODWORD(STACK[0x65F8]) = v147 ^ (2
                                 * (((_DWORD)v148 << 16) & 0x19650000 ^ v148 ^ (((_DWORD)v148 << 16) ^ 0x22370000) & (((v179 ^ 0x9250007) << 8) & 0x19650000 ^ 0x18450000 ^ (((v179 ^ 0x9250007) << 8) ^ 0x65220000) & (v179 ^ 0x9250007))));
  v180 = STACK[0xD630];
  v181 = *(_QWORD *)(v180 + 8 * (*(_QWORD *)(v180 + 8 * (*(_QWORD *)(v180 + 8) & 1)) & 1));
  v182 = ((v181 ^ 0x4124E44BE2E66922) - 0x2C51092C052EA36CLL) ^ ((v181 ^ 0x87519027CC81FC7ALL) + 0x15DB82BFD4B6C9CCLL) ^ ((v181 ^ 0xBF0C0D15571EEC21) + 0x2D861F8D4F29D991);
  LODWORD(v148) = (v182 & 1 ^ 0xD979DE3F) + 2 * (v182 & 1);
  v15 = v182 >> 1 == 0x75F9B5F0731D46E7;
  v183 = v182 - 219233177;
  v184 = v148 - 5278730;
  if (!v15)
    v183 = v184;
  v185 = (v183 ^ 0x369689C2) & (2 * (v183 & 0x26D6ADCB)) ^ v183 & 0x26D6ADCB;
  v186 = ((2 * (v183 ^ 0x7613C8D0)) ^ 0xA18ACA36) & (v183 ^ 0x7613C8D0) ^ (2 * (v183 ^ 0x7613C8D0)) & 0x50C5651A;
  v187 = (v186 ^ 0x804010) & (4 * v185) ^ v185;
  v188 = ((4 * (v186 ^ 0x50452509)) ^ 0x4315946C) & (v186 ^ 0x50452509) ^ (4 * (v186 ^ 0x50452509)) & 0x50C56518;
  v189 = (v188 ^ 0x40050400) & (16 * v187) ^ v187;
  v190 = ((16 * (v188 ^ 0x10C06113)) ^ 0xC5651B0) & (v188 ^ 0x10C06113) ^ (16 * (v188 ^ 0x10C06113)) & 0x50C56510;
  STACK[0x6AA0] = v180;
  v191 = *(_QWORD *)(v180
                   + 8
                   * (v183 ^ (2
                            * ((((v190 ^ 0x5081240B) << 8) & 0x50C50000 ^ 0x40450000 ^ (((v190 ^ 0x5081240B) << 8) ^ 0xC5650000) & (v190 ^ 0x5081240B)) & (((v190 ^ 0x444100) & (v189 << 8) ^ v189) << 16) ^ (v190 ^ 0x444100) & (v189 << 8) ^ v189)) ^ 0x26D6ADCBLL));
  LODWORD(v191) = (v191 & 1 | 0xD9FD211C) - 2 * (v191 & 1) - 15;
  v192 = ((v191 ^ 0x422DAF9A) - 205453587) ^ ((v191 ^ 0x75654EC6) - 997595215) ^ ((v191 ^ 0xEEB5C051) + 1599695144);
  v193 = LODWORD(STACK[0x66F0]) ^ __ROR4__(v155, 13);
  LODWORD(STACK[0x6920]) = v83;
  LODWORD(STACK[0x66C8]) = v193 ^ v83 ^ 0x1FED66BC ^ v153;
  LODWORD(STACK[0x66F0]) = v111 ^ 0x250575D3;
  LODWORD(STACK[0x68B0]) = 16843009 * LODWORD(STACK[0x6570]);
  LODWORD(STACK[0x6558]) = v67;
  LODWORD(STACK[0x65D0]) = v67 ^ 0x29;
  LODWORD(STACK[0x65B8]) = LODWORD(STACK[0x6A70]) ^ 0x87EE2A1E;
  LODWORD(STACK[0x65F0]) = LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x69A0]);
  v194 = STACK[0x6568];
  LODWORD(STACK[0x6550]) = (2 * LODWORD(STACK[0x6568])) & 0xC31B653A;
  LODWORD(STACK[0x6548]) = v194 - 510807395;
  v195 = LODWORD(STACK[0x6890]) + 1;
  LODWORD(STACK[0x65B0]) = (2 * v195) & 0x96F9C9E8;
  LODWORD(STACK[0x65A0]) = v195 - 881007372;
  LODWORD(STACK[0x6530]) = LODWORD(STACK[0x65C8]) + 598497038;
  v196 = LODWORD(STACK[0x6740]) + 1;
  LODWORD(STACK[0x6570]) = (2 * v196) & 0xF865D3FA;
  LODWORD(STACK[0x6568]) = v196 - 63772163;
  v197 = LODWORD(STACK[0x6730]) + 1;
  LODWORD(STACK[0x6730]) = (2 * v197) & 0xD49AB2E8;
  LODWORD(STACK[0x6590]) = v197 + 1783454068;
  LODWORD(STACK[0x65A8]) = STACK[0x6540] & 0xD6DE7131 ^ 0xD6DA5131;
  LODWORD(STACK[0x6770]) = LODWORD(STACK[0x68D0]) ^ 0x28824D88;
  LODWORD(STACK[0x64E0]) = v150 + 1;
  LODWORD(STACK[0x6500]) = ~(2 * (v150 + 1)) | 0x8954FDFB;
  LODWORD(STACK[0x6528]) = STACK[0x1354] & (2 * (v154 + 1));
  LODWORD(STACK[0x6520]) = v154 - 1983708158;
  LODWORD(STACK[0x6540]) = (2 * (v156 + 1)) & 0x9F353820;
  LODWORD(STACK[0x6538]) = v156 - 811951087;
  LODWORD(STACK[0x66E8]) = -v151;
  v198 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AC0])) - 12);
  LODWORD(STACK[0x64C8]) = LODWORD(STACK[0x6A20]) ^ 0x7A190E92;
  LODWORD(STACK[0x64F8]) = STACK[0x6870] & 0xE9;
  LODWORD(STACK[0x6740]) = v71;
  LODWORD(STACK[0x6890]) = v71 ^ 0x607301C3;
  LODWORD(STACK[0x6A70]) = v192;
  LODWORD(STACK[0x6A60]) = v192 + 1337386887;
  return v198();
}

uint64_t sub_100BC57DC()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unint64_t v5;
  _BOOL4 v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _BOOL4 v59;

  v4 = v0;
  v5 = STACK[0x6AB0];
  v6 = LODWORD(STACK[0x6A70]) < 0x6811887C;
  v7 = *(_QWORD *)(STACK[0x6AA0]
                 + 8
                 * ((v0 | ((unint64_t)(v0 < 0x657A2FE0) << 32))
                  + 0x50F15C36005C4929
                  + (STACK[0x6AB0] ^ 0xF0EA3C99A29CDA7)));
  v8 = 0x41B14FC555EB8BCBLL
     * (((v7 ^ 0xA36A484EF034C991) + 0x44A8F7F02A22E833) ^ ((v7 ^ 0x301D4BAFD41F5602) - 0x28200BEEF1F6885ELL) ^ ((v7 ^ 0xEA0E7A985D52E6EALL) + 0xDCCC5268744C74ALL))
     + 0x4F800AA115CD4DBCLL;
  v9 = (v8 ^ 0xCCDDFBC21BDF03D3) & (2 * (v8 & 0xEE9DFA14939F539BLL)) ^ v8 & 0xEE9DFA14939F539BLL;
  v10 = ((2 * (v8 ^ 0x9CFDBBE21CD784E5)) ^ 0xE4C083ED1E91AEFCLL) & (v8 ^ 0x9CFDBBE21CD784E5) ^ (2
                                                                                                  * (v8 ^ 0x9CFDBBE21CD784E5)) & 0x726041F68F48D77ELL;
  v11 = v10 ^ 0x1220401281485102;
  v12 = (v10 ^ 0x604000E40E00867CLL) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xC98107DA3D235DF8) & v11 ^ (4 * v11) & 0x726041F68F48D77CLL;
  v14 = ((16 * (v13 ^ 0x3260402482488206)) ^ 0x26041F68F48D77E0) & (v13 ^ 0x3260402482488206) ^ (16 * (v13 ^ 0x3260402482488206)) & 0x726041F68F48D770;
  v15 = (v14 ^ 0x2200016084085700) & (((v13 ^ 0x400001D20D005570) & (16 * v12) ^ v12) << 8) ^ (v13 ^ 0x400001D20D005570) & (16 * v12) ^ v12;
  v16 = (((v14 ^ 0x506040960B40801ELL) << 8) ^ 0x6041F68F48D77E00) & (v14 ^ 0x506040960B40801ELL) ^ ((v14 ^ 0x506040960B40801ELL) << 8) & 0x726041F68F48D700;
  v17 = v8 ^ (2
            * (((v15 ^ 0x726041F68F48D77ELL ^ (v16 ^ 0x6040408608400000) & (v15 << 16)) << 32) & 0x726041F600000000 ^ v15 ^ 0x726041F68F48D77ELL ^ (v16 ^ 0x6040408608400000) & (v15 << 16) ^ (((v15 ^ 0x726041F68F48D77ELL ^ (v16 ^ 0x6040408608400000) & (v15 << 16)) << 32) ^ 0xF48D77E00000000) & (((v16 ^ 0x122001708708817ELL) << 16) & 0x726041F600000000 ^ 0x320040B600000000 ^ (((v16 ^ 0x122001708708817ELL) << 16) ^ 0x41F68F4800000000) & (v16 ^ 0x122001708708817ELL))));
  v18 = (v4 | ((unint64_t)(v4 < 0x657A2FE0) << 32))
      + 0x2367115CBA01F480
      + (((v17 ^ v2 ^ 0x25FB8DE4DDC76D61) - 0x328310B3071D6FC5) ^ ((v17 ^ v2 ^ 0x1B25D0E0C19C532BLL)
                                                                     - 0xC5D4DB71B46518FLL) ^ ((v17 ^ v2 ^ 0x3003A6119155C32DLL)
                                                                                             - 0x277B3B464B8FC189));
  v19 = (v18 ^ 0xF7BC52C53E1E9A5BLL) & (2 * (v18 & 0xF63E54E53858DB63)) ^ v18 & 0xF63E54E53858DB63;
  v20 = ((2 * (v18 ^ 0x5FC87B0D0E9F181BLL)) ^ 0x53EC5FD06D8F86F0) & (v18 ^ 0x5FC87B0D0E9F181BLL) ^ (2 * (v18 ^ 0x5FC87B0D0E9F181BLL)) & 0xA9F62FE836C7C378;
  v21 = v20 ^ 0xA812202812404108;
  v22 = (v20 ^ 0x1E0078020878210) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ 0xA7D8BFA0DB1F0DE0) & v21 ^ (4 * v21) & 0xA9F62FE836C7C378;
  v24 = (v23 ^ 0xA1D02FA012070160) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x826004824C0C218)) ^ 0x9F62FE836C7C3780) & (v23 ^ 0x826004824C0C218) ^ (16 * (v23 ^ 0x826004824C0C218)) & 0xA9F62FE836C7C370;
  v26 = (((v25 ^ 0x209401681283C078) << 8) ^ 0xF62FE836C7C37800) & (v25 ^ 0x209401681283C078) ^ ((v25 ^ 0x209401681283C078) << 8) & 0xA9F62FE836C7C300;
  v27 = (v25 ^ 0x89622E8024440300) & (v24 << 8) ^ v24 ^ 0xA9F62FE836C7C378 ^ (v26 ^ 0xA026282006C30000) & (((v25 ^ 0x89622E8024440300) & (v24 << 8) ^ v24) << 16);
  v28 = (v18 ^ (2
              * ((v27 << 32) & 0x29F62FE800000000 ^ v27 ^ ((v27 << 32) ^ 0x36C7C37800000000) & (((v26 ^ 0x9D007C830048378) << 16) & 0x29F62FE800000000 ^ 0x16092800000000 ^ (((v26 ^ 0x9D007C830048378) << 16) ^ 0x2FE836C700000000) & (v26 ^ 0x9D007C830048378))))) >> 32;
  v29 = v18
      - 0x3D105CE5D2696A89
      + (((v28 ^ 0x8B9590E8218E4ABCLL) - 0x22D882E0BD88551ELL) ^ ((v28 ^ 0xAC7AA232E707BCC1) - 0x537B03A7B01A363) ^ ((v28 ^ 0x27EF32DA22D7FB98) + 0x715DDF2D412E1BC6));
  v30 = (v29 ^ 0xDE539BCB63531033) & (2 * (v29 & 0xDC9BC3D3831A5833)) ^ v29 & 0xDC9BC3D3831A5833;
  v31 = ((2 * (v29 ^ 0xEE549AC965779015)) ^ 0x659EB235CCDB904CLL) & (v29 ^ 0xEE549AC965779015) ^ (2 * (v29 ^ 0xEE549AC965779015)) & 0x32CF591AE66DC826;
  v32 = v31 ^ 0x1241490A22244822;
  v33 = (v31 ^ 0x208E101004498004) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0xCB3D646B99B72098) & v32 ^ (4 * v32) & 0x32CF591AE66DC824;
  v35 = ((16 * (v34 ^ 0x30C219106648C826)) ^ 0x2CF591AE66DC8260) & (v34 ^ 0x30C219106648C826) ^ (16 * (v34 ^ 0x30C219106648C826)) & 0x32CF591AE66DC820;
  v36 = (v35 ^ 0x20C5110A664C8000) & (((v34 ^ 0x20D400A80250000) & (16 * v33) ^ v33) << 8) ^ (v34 ^ 0x20D400A80250000) & (16 * v33) ^ v33;
  v37 = (((v35 ^ 0x120A481080214806) << 8) ^ 0xCF591AE66DC82600) & (v35 ^ 0x120A481080214806) ^ ((v35 ^ 0x120A481080214806) << 8) & 0x32CF591AE66DC800;
  v38 = v36 ^ 0x32CF591AE66DC826 ^ (v37 ^ 0x249180264480000) & (v36 << 16);
  v39 = (v29 ^ (2
              * ((v38 << 32) & 0x32CF591A00000000 ^ v38 ^ ((v38 << 32) ^ 0x666DC82600000000) & (((v37 ^ 0x308641188225C826) << 16) & 0x32CF591A00000000 ^ 0x22C5191200000000 ^ (((v37 ^ 0x308641188225C826) << 16) ^ 0x591AE66D00000000) & (v37 ^ 0x308641188225C826))))) >> 16;
  v40 = v29
      - 0x23424D5CACA6DE4ALL
      + (((v39 ^ 0x7E0242D4B98B48F4) + 0x5A446B1C4E53DBCELL) ^ ((v39 ^ 0x928999785195A895) - 0x49304F4F59B2C453) ^ ((v39 ^ 0xEC8B263309FCAFA0) - 0x3732F00401DBC366));
  v41 = (v40 ^ 0x93C6BAD51D041D27) & (2 * (v40 & 0xDB973CD919865984)) ^ v40 & 0xDB973CD919865984;
  v42 = ((2 * (v40 ^ 0x37C6B2C50D001E2FLL)) ^ 0xD8A31C38290C8F56) & (v40 ^ 0x37C6B2C50D001E2FLL) ^ (2 * (v40 ^ 0x37C6B2C50D001E2FLL)) & (v1 + 170);
  v43 = ((4 * (v42 ^ 0x24508204148240A9)) ^ 0xB146387052191EACLL) & (v42 ^ 0x24508204148240A9) ^ (4 * (v42 ^ 0x24508204148240A9)) & (v1 + 168);
  v44 = (v43 ^ 0xA0400810100006A0) & (16 * ((v42 ^ 0xC801040800000600) & (4 * v41) ^ v41)) ^ (v42 ^ 0xC801040800000600) & (4 * v41) ^ v41;
  v45 = ((16 * (v43 ^ 0x4C11860C04864103)) ^ 0xC518E1C148647AB0) & (v43 ^ 0x4C11860C04864103) ^ (16 * (v43 ^ 0x4C11860C04864103)) & (v1 + 160);
  v46 = (((v45 ^ 0x28410E1C1482050BLL) << 8) ^ 0x518E1C148647AB00) & (v45 ^ 0x28410E1C1482050BLL) ^ ((v45 ^ 0x28410E1C1482050BLL) << 8) & v1;
  v47 = (v45 ^ 0xC410800000044200) & (v44 << 8) ^ v44 ^ (v1 + 171) ^ (v46 ^ 0x40000C1404060000) & (((v45 ^ 0xC410800000044200) & (v44 << 8) ^ v44) << 16);
  v48 = (v40 ^ (2
              * ((v47 << 32) & 0x6C518E1C00000000 ^ v47 ^ ((v47 << 32) ^ 0x148647AB00000000) & (((v46 ^ 0xAC518208108044ABLL) << 16) & 0x6C518E1C00000000 ^ 0x60418A1800000000 ^ (((v46 ^ 0xAC518208108044ABLL) << 16) ^ 0xE1C148600000000) & (v46 ^ 0xAC518208108044ABLL))))) >> 8;
  v49 = v40
      - (((v48 ^ 0xD3E77FE4B44DE5A6) - 0x4CF9C5E365CE9BD7) ^ ((v48 ^ 0x4F0FAB4BA40D3B59) + 0x2FEEEEB38A71BAD8) ^ ((v48 ^ 0x9CE3E083E1705429) - 0x3FD5A8430F32A58))
      - 0x729B75A963BC20EFLL;
  v50 = ((2 * (v49 ^ 0xB8C97D41992460ELL)) ^ 0x492367068A398784) & (v49 ^ 0xB8C97D41992460ELL) ^ (2
                                                                                                  * (v49 ^ 0xB8C97D41992460ELL)) & 0xA491B383451CC3C2;
  v51 = (v49 ^ 0xF9C9756188E458ELL) & (2 * (v49 & 0xAF1D24575C8E85CCLL)) ^ v49 & 0xAF1D24575C8E85CCLL;
  v52 = v50 ^ 0xA490908145044042;
  v53 = (v50 ^ 0x1230200180300) & (4 * v51) ^ v51;
  v54 = ((4 * v52) ^ 0x9246CE0D14730F08) & v52 ^ (4 * v52) & 0xA491B383451CC3C0;
  v55 = ((16 * (v54 ^ 0x24913182410CC0C2)) ^ 0x491B383451CC3C20) & (v54 ^ 0x24913182410CC0C2) ^ (16 * (v54 ^ 0x24913182410CC0C2)) & 0xA491B383451CC3C0;
  v56 = (v55 ^ 0x113000410C0000) & (((v54 ^ 0x8000820104100300) & (16 * v53) ^ v53) << 8) ^ (v54 ^ 0x8000820104100300) & (16 * v53) ^ v53;
  v57 = (((v55 ^ 0xA48083830410C3C2) << 8) ^ 0x91B383451CC3C200) & (v55 ^ 0xA48083830410C3C2) ^ ((v55 ^ 0xA48083830410C3C2) << 8) & 0xA491B383451CC300;
  v58 = v49 ^ (2
             * (((v56 ^ 0xA491B383451CC3C2 ^ (v57 ^ 0x8091830104000000) & (v56 << 16)) << 32) & 0x2491B38300000000 ^ v56 ^ 0xA491B383451CC3C2 ^ (v57 ^ 0x8091830104000000) & (v56 << 16) ^ (((v56 ^ 0xA491B383451CC3C2 ^ (v57 ^ 0x8091830104000000) & (v56 << 16)) << 32) ^ 0x451CC3C200000000) & (((v57 ^ 0x24003082411C01C2) << 16) & 0x2491B38300000000 ^ 0x410B28300000000 ^ (((v57 ^ 0x24003082411C01C2) << 16) ^ 0x3383451C00000000) & (v57 ^ 0x24003082411C01C2))));
  LODWORD(STACK[0x6AC0]) = (((v58 >> 2) & 0xC011015 ^ 0xD53C01B) + ((v58 >> 2) & 0xA42340 ^ 0x141) + 0xFFFFFFF) & (v3 + 42) ^ v58;
  if (v6 != v4 + 1380859940 < 0xB7C87003)
    v59 = v6;
  else
    v59 = v4 + 1380859940 < LODWORD(STACK[0x6A60]);
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((7 * v59) | v5)) - 12))(v4 + 1380859940 < LODWORD(STACK[0x6A60]));
}

uint64_t sub_100BC8D0C(uint64_t a1)
{
  int v1;
  int v2;

  LODWORD(STACK[0x6A60]) = LODWORD(STACK[0x68A0]) ^ 0x43906DE9;
  LODWORD(STACK[0x65C8]) = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x1360]);
  LODWORD(STACK[0x64E8]) = (LODWORD(STACK[0x6870]) ^ 0x92) & STACK[0x65D0];
  LODWORD(STACK[0x6AB0]) = v1 - 110;
  LODWORD(STACK[0x6A70]) = ((v1 - 110) ^ 0x5DE6571F) * LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x65D0]) = LODWORD(STACK[0x65F0]) ^ 0x16CFC6EE;
  v2 = LODWORD(STACK[0x65A8]) + LODWORD(STACK[0x65E0]) - 1;
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x64E0]) + LODWORD(STACK[0x6500]) - 1152024317;
  LODWORD(STACK[0x65E0]) = (LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x6890]) ^ 0x90BEE655 ^ v2)
                         + 1091220729 * (LODWORD(STACK[0x66E8]) + LODWORD(STACK[0x6510]))
                         + 1852751956;
  LODWORD(STACK[0x6760]) = LODWORD(STACK[0x6780]) ^ 0x404FD613;
  LODWORD(STACK[0x66E8]) = LODWORD(STACK[0x6518]) ^ 0xF9F9F9F9;
  STACK[0x6AA0] = STACK[0xD630];
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12))(a1, 0xF17FF84E550F3000);
}

uint64_t sub_100BC8F44()
{
  int v0;
  int v1;

  v1 = STACK[0x6AB0];
  STACK[0x6AC0] = (LODWORD(STACK[0x6AB0]) - 21189) | 0x3108u;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((498 * ((v0 - 1702506463) < 2)) ^ v1))
                            - 12))();
}

uint64_t sub_100BCBF38()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  int v58;
  unsigned int v59;
  unint64_t v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  _DWORD *v66;
  uint64_t v67;
  uint64_t (*v68)(void);

  LODWORD(STACK[0x68A0]) = v3;
  v4 = STACK[0x6A30];
  if ((STACK[0x6940] & 2) != 0)
    v4 = STACK[0x6970];
  LODWORD(STACK[0x6340]) = v4;
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x65C0]) ^ LODWORD(STACK[0x68B0]);
  v5 = LODWORD(STACK[0x6A70]) + LODWORD(STACK[0x65B8]);
  LODWORD(STACK[0x65A8]) = LODWORD(STACK[0x6610]) ^ 0xF9AC5FC2;
  LODWORD(STACK[0x65C0]) = LODWORD(STACK[0x65A0]) - LODWORD(STACK[0x65B0]);
  LODWORD(STACK[0x65B0]) = LODWORD(STACK[0x6568]) - LODWORD(STACK[0x6570]);
  v6 = LODWORD(STACK[0x68D0]) ^ 0xA306D27A;
  LODWORD(STACK[0x65B8]) = LODWORD(STACK[0x6520]) - LODWORD(STACK[0x6528]);
  LODWORD(STACK[0x6720]) = LODWORD(STACK[0x6860]) ^ 0x9A810169;
  v7 = ((v0 + 0x4D4D2A3F3EE8E14BLL) ^ 0xE54C975FBBD31A24) & (2 * ((v0 + 0x4D4D2A3F3EE8E14BLL) & 0xC169275FB3DBA244)) ^ (v0 + 0x4D4D2A3F3EE8E14BLL) & 0xC169275FB3DBA244;
  v8 = ((2 * ((v0 + 0x4D4D2A3F3EE8E14BLL) ^ 0xE50E977FBA511AACLL)) ^ 0x48CF6040131571D0) & ((v0 + 0x4D4D2A3F3EE8E14BLL) ^ 0xE50E977FBA511AACLL) ^ (2 * ((v0 + 0x4D4D2A3F3EE8E14BLL) ^ 0xE50E977FBA511AACLL)) & 0x2467B020098AB8E8;
  v9 = v8 ^ 0x24209020088A8828;
  v10 = (v8 ^ 0x45200001001000) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x919EC080262AE3A0) & v9 ^ (4 * v9) & 0x2467B020098AB8E8;
  v12 = (v11 ^ 0x68000000AA0A0) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x2461302009801848)) ^ 0x467B020098AB8E80) & (v11 ^ 0x2461302009801848) ^ (16 * (v11 ^ 0x2461302009801848)) & 0x2467B020098AB8E0;
  v14 = (v13 ^ 0x4630000088A8800) & (v12 << 8) ^ v12;
  v15 = (((v13 ^ 0x2004B02001003068) << 8) ^ 0x67B020098AB8E800) & (v13 ^ 0x2004B02001003068) ^ ((v13 ^ 0x2004B02001003068) << 8) & 0x2467B020098AB800;
  v16 = v14 ^ 0x2467B020098AB8E8 ^ (v15 ^ 0x2420200008880000) & (v14 << 16);
  v17 = ((v0 + 0x4D4D2A3F3EE8E14BLL) ^ (2
                                      * ((v16 << 32) & 0x2467B02000000000 ^ v16 ^ ((v16 << 32) ^ 0x98AB8E800000000) & (((v15 ^ 0x479020010210E8) << 16) & 0x2467B02000000000 ^ 0x447B02000000000 ^ (((v15 ^ 0x479020010210E8) << 16) ^ 0x3020098A00000000) & (v15 ^ 0x479020010210E8uLL))))) >> 31;
  v18 = v0
      - 0x3DF1779C951C6490
      + (((v17 ^ 0x3547F7C586FAFA77) - 0x62A8A56A245AD92ELL) ^ ((v17 ^ 0x7DFB428DE1A2C16BLL) - 0x2A1410224302E232) ^ ((v17 ^ 0x48BCB549741E75A3) - 0x1F53E7E6D6BE56FALL));
  v19 = (v18 ^ 0x2696D3C93D961514) & (2 * (v18 & 0xA4971BEA39C75605)) ^ v18 & 0xA4971BEA39C75605;
  v20 = ((2 * (v18 ^ 0x67B6D39D6D18B11CLL)) ^ 0x864390EEA9BFCE32) & (v18 ^ 0x67B6D39D6D18B11CLL) ^ (2 * (v18 ^ 0x67B6D39D6D18B11CLL)) & 0xC321C87754DFE718;
  v21 = v20 ^ 0x4120481154402109;
  v22 = (v20 ^ 0x82008060001FC010) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ 0xC8721DD537F9C64) & v21 ^ (4 * v21) & 0xC321C87754DFE718;
  v24 = (v23 ^ 0x10055505F8400) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0xC320C82204806319)) ^ 0x321C87754DFE7190) & (v23 ^ 0xC320C82204806319) ^ (16 * (v23 ^ 0xC320C82204806319)) & 0xC321C87754DFE710;
  v26 = (v25 ^ 0x200807544DE6100) & (v24 << 8) ^ v24;
  v27 = (((v25 ^ 0xC121480210018609) << 8) ^ 0x21C87754DFE71900) & (v25 ^ 0xC121480210018609) ^ ((v25 ^ 0xC121480210018609) << 8) & 0xC321C87754DFE700;
  v28 = v26 ^ 0xC321C87754DFE719 ^ (v27 ^ 0x100405454C70000) & (v26 << 16);
  v29 = (v18 ^ (2
              * ((v28 << 32) & 0x4321C87700000000 ^ v28 ^ ((v28 << 32) ^ 0x54DFE71900000000) & (((v27 ^ 0xC22188230018E619) << 16) & 0x4321C87700000000 ^ 0x300882000000000 ^ (((v27 ^ 0xC22188230018E619) << 16) ^ 0x487754DF00000000) & (v27 ^ 0xC22188230018E619))))) >> 9;
  v30 = v18
      - (((v29 ^ 0x9AFE17B400B3B3C6) + 0x4AB98B34897E4AE5) ^ ((v29 ^ 0xA1C3F50949C2C092) + 0x71846989C00F39B1) ^ ((v29 ^ 0x3B6C8938DA394F18) - 0x14D4EA47AC0B49C5))
      + 0x717D290AA861C929;
  v31 = (v30 ^ 0xBB2EEDF603C24B0BLL) & (2 * (v30 & 0x330E9E4ABEB524BLL)) ^ v30 & 0x330E9E4ABEB524BLL;
  v32 = ((2 * (v30 ^ 0xB90F7FFE5494EB89)) ^ 0x747F2C35FEFF7384) & (v30 ^ 0xB90F7FFE5494EB89) ^ (2 * (v30 ^ 0xB90F7FFE5494EB89)) & 0xBA3F961AFF7FB9C2;
  v33 = v32 ^ 0x8A00920A01008842;
  v34 = (v32 ^ 0x10070410FE7F1100) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0xE8FE586BFDFEE708) & v33 ^ (4 * v33) & 0xBA3F961AFF7FB9C0;
  v36 = (v35 ^ 0xA83E100AFD7EA100) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x12018610020118C2)) ^ 0xA3F961AFF7FB9C20) & (v35 ^ 0x12018610020118C2) ^ (16 * (v35 ^ 0x12018610020118C2)) & 0xBA3F961AFF7FB9C0;
  v38 = (v37 ^ 0xA239000AF77B9800) & (v36 << 8) ^ v36;
  v39 = (((v37 ^ 0x18069610080421C2) << 8) ^ 0x3F961AFF7FB9C200) & (v37 ^ 0x18069610080421C2) ^ ((v37 ^ 0x18069610080421C2) << 8) & 0xBA3F961AFF7FB900;
  v40 = v38 ^ 0xBA3F961AFF7FB9C2 ^ (v39 ^ 0x3A16121A7F390000) & (v38 << 16);
  v41 = (((v30 ^ (2
                * ((v40 << 32) & 0x3A3F961A00000000 ^ v40 ^ ((v40 << 32) ^ 0x7F7FB9C200000000) & (((v39 ^ 0x80298400804639C2) << 16) & 0x3A3F961A00000000 ^ 0x2825000000000000 ^ (((v39 ^ 0x80298400804639C2) << 16) ^ 0x161AFF7F00000000) & (v39 ^ 0x80298400804639C2))))) >> 6) ^ 0xFFF33C68AAABAF78)
      + v30;
  v42 = v41
      - 0x56D9F5638BE36FA1
      - ((v41 - 0x56D9F5638BE36FA1) >> 31)
      - ((v41 - 0x56D9F5638BE36FA1 - ((v41 - 0x56D9F5638BE36FA1) >> 31)) >> 14);
  v43 = v42 + (v42 >> 7);
  LODWORD(v39) = v2 & (v43 >> 2) ^ v43;
  v44 = (v43 ^ 0xA181E2272F695246)
      - ((v43 ^ 0xA181E2272F695246) >> 27)
      + (((v43 ^ 0xA181E2272F695246) - ((v43 ^ 0xA181E2272F695246) >> 27)) >> 13);
  v45 = v44 + (v44 >> 6);
  v46 = (v45 ^ 0x124042813B582860)
      - ((v45 ^ 0x124042813B582860) >> 25)
      - (((v45 ^ 0x124042813B582860) - ((v45 ^ 0x124042813B582860) >> 25)) >> 11);
  v47 = v46 - (v46 >> 6);
  LODWORD(STACK[0x6570]) = v2 & (v47 >> 2) ^ v47;
  v48 = v47
      - 0x19CD634DB404B01DLL
      - ((v47 - 0x19CD634DB404B01DLL) >> 24)
      - ((v47 - 0x19CD634DB404B01DLL - ((v47 - 0x19CD634DB404B01DLL) >> 24)) >> 9);
  v49 = v48 - (v48 >> 6);
  LODWORD(v39) = v2 & (v49 >> 2) ^ v39 ^ v49;
  v50 = (v49 ^ 0x3B73525787EF3D13)
      - ((v49 ^ 0x3B73525787EF3D13) >> 27)
      + (((v49 ^ 0x3B73525787EF3D13) - ((v49 ^ 0x3B73525787EF3D13) >> 27)) >> 9);
  v51 = v50 - (v50 >> 2);
  v52 = v51 ^ v45;
  v53 = v51
      - 0x682D0FD48B1D758ALL
      + ((v51 - 0x682D0FD48B1D758ALL) >> 30)
      + ((v51 - 0x682D0FD48B1D758ALL + ((v51 - 0x682D0FD48B1D758ALL) >> 30)) >> 14);
  v54 = v53 - (v53 >> 7);
  LODWORD(v9) = v2 & (v54 >> 2) ^ v54;
  v55 = (v54 ^ 0x365087D38A064ADALL)
      - ((v54 ^ 0x365087D38A064ADALL) >> 31)
      + (((v54 ^ 0x365087D38A064ADALL) - ((v54 ^ 0x365087D38A064ADALL) >> 31)) >> 15);
  v56 = v55 + (v55 >> 3);
  v57 = v2 & (v56 >> 2) ^ v56;
  v58 = LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x6518]) = v6;
  LODWORD(STACK[0x6970]) = v58;
  v59 = v6 ^ v58;
  v60 = v56
      + 0x5375B4D3090F5508
      + ((v56 + 0x5375B4D3090F5508) >> 29)
      - ((v56 + 0x5375B4D3090F5508 + ((v56 + 0x5375B4D3090F5508) >> 29)) >> 8);
  LODWORD(STACK[0x6568]) = v59;
  STACK[0x64D0] = v52 ^ (v60 - (v60 >> 2)) ^ v2 & ((v52 ^ (v60 - (v60 >> 2))) >> 2);
  LODWORD(v52) = (v2 & (v59 >> 2) ^ 0xCA41041) - ((2 * (v2 & (v59 >> 2) ^ 0xCA41041)) & 0x1102020A);
  v61 = LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x6880]);
  v62 = STACK[0x6760];
  LODWORD(STACK[0x6870]) = v61;
  LODWORD(v60) = v62 ^ v61;
  LODWORD(STACK[0x6528]) = (v2 & (LODWORD(STACK[0x6770]) >> 2) ^ 0x8A53350)
                         - 714394028
                         - (LODWORD(STACK[0x1364]) & (2 * (v2 & (LODWORD(STACK[0x6770]) >> 2) ^ 0x8A53350)));
  v63 = ((v2 & (LODWORD(STACK[0x6780]) >> 2) ^ 0x8A50214)
       - ((2 * (v2 & (LODWORD(STACK[0x6780]) >> 2) ^ 0x8A50214)) & 0x19006080)
       - 292357024) ^ v62;
  LODWORD(STACK[0x65A0]) = LODWORD(STACK[0x65F8]) ^ 0xAAAE14D3;
  v64 = v41 - 1410641332;
  LODWORD(v41) = LODWORD(STACK[0x6598]) ^ ((v2 & (v60 >> 2) ^ 0x8812248)
                                         - ((2 * (v2 & (v60 >> 2) ^ 0x8812248)) & 0x11406688)
                                         + 451458022);
  LODWORD(STACK[0x6510]) = (2 * v9) & 0xB0BEC5A6;
  LODWORD(STACK[0x6500]) = v9 - 664837421;
  LODWORD(STACK[0x6520]) = v52 + 2077966597;
  LODWORD(v41) = v41 ^ 0xF667864F ^ (v63 - ((2 * v63) & 0xFD2B6E8A) - 23742651);
  LODWORD(v41) = LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x64F0]) ^ v60 ^ (v41 - ((2 * v41) & 0xCBD4220E) + 1709838599) ^ 0x27A7B3F ^ ((v39 ^ v57) - ((2 * (v39 ^ v57)) & 0xF6DD6384) + 2070852034);
  v65 = v1 ^ LODWORD(STACK[0x6960]) ^ (v41 - ((2 * v41) & 0x53B30678) + 702120764);
  LODWORD(v41) = LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6910]);
  LODWORD(v39) = (v41 & 0x60F52673 ^ 0x251C07F3) - ((2 * (v41 & 0x60F52673 ^ 0x251C07F3)) & 0x8A804BC4) + 1161999854;
  LODWORD(v41) = (v41 ^ LODWORD(STACK[0x6A10])) & 0x9F0AD98C ^ 0x830C4B5E;
  LODWORD(v41) = ((v41 | LODWORD(STACK[0x1368])) - (v41 | 0xDE156AB1) - 569021775) & 0x4DA165BC ^ 0x49002195 ^ (((v41 | LODWORD(STACK[0x1368])) - (v41 | 0xDE156AB1) - 569021775) ^ 0xDD1178E3) & ((((2 * (STACK[0x6A50] & 0x60F52672 ^ 0xC2F88628)) & 0xC45A4454) - (STACK[0x6A50] & 0x60F52672 ^ 0xC2F88628) + 366120401) ^ 0x5DE21E4 ^ v39);
  LODWORD(v39) = (((2 * v41) | 0x878F913E) - v41 - 1137166495) ^ 0xB8397654;
  LODWORD(STACK[0x64F0]) = ((v2 & (LODWORD(STACK[0x6910]) >> 2) ^ 0xCA03200)
                          - ((2 * (v2 & (LODWORD(STACK[0x6910]) >> 2) ^ 0xCA03200)) & 0x1080600)
                          + 299239330) & 0x1FBFFF57;
  LODWORD(STACK[0x64C0]) = v5 - ((2 * v5 + 214429182) & 0xDA0060C) - 986449403;
  v66 = (_DWORD *)STACK[0xD630];
  v67 = *(_QWORD *)&v66[2 * (*(_QWORD *)&v66[2 * ((*v66 & 1) == 0)] & 1)] & 1;
  STACK[0x6AB0] = STACK[0xD630];
  LODWORD(v67) = *(_QWORD *)&v66[2 * v67] & 1;
  LODWORD(v52) = (v67 - 696253331) ^ (v67 + 964691021) ^ ((v67 ^ 0x53B96459) + 1975947286);
  LODWORD(STACK[0x5F90]) = v65;
  LODWORD(STACK[0x6598]) = v65 ^ 0x57434426;
  v68 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]) - 12);
  LODWORD(STACK[0x6960]) = v64;
  LODWORD(STACK[0x68C0]) = v2 & (v64 >> 2);
  LODWORD(STACK[0x6890]) = v39;
  LODWORD(STACK[0x64B8]) = v2 & (v39 >> 2);
  LODWORD(STACK[0x6AA0]) = v52;
  LODWORD(STACK[0x6A70]) = v52 - 653860536;
  return v68();
}

uint64_t sub_100BCCF24()
{
  int v0;
  _BOOL4 v1;

  if (LODWORD(STACK[0x6AA0]) < 0x267FF44E != (v0 - 1561785553) < 0xFF86D596)
    v1 = LODWORD(STACK[0x6AA0]) < 0x267FF44E;
  else
    v1 = (v0 - 1561785553) < LODWORD(STACK[0x6A70]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((1404 * !v1) ^ STACK[0x6AC0])) - 12))();
}

uint64_t sub_100BD0554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int v13;

  v9 = STACK[0x6AC0] ^ 0x17B3;
  v10 = (a8 + 1);
  v11 = (v9 - 760430332) & 0x2D53183F;
  LODWORD(STACK[0x6A50]) = LODWORD(STACK[0x64F8]) ^ LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x64E8]);
  LODWORD(STACK[0x68B0]) = LODWORD(STACK[0x6530]) - 2 * LODWORD(STACK[0x6588]);
  LODWORD(STACK[0x64E0]) = LODWORD(STACK[0x6608]) ^ 0x4200B38;
  v12 = LODWORD(STACK[0x6600]) ^ 0xAFB081D3;
  LODWORD(STACK[0x6AB0]) = v11;
  LODWORD(STACK[0x64D8]) = v12 ^ v11;
  v13 = LODWORD(STACK[0x64F0]) ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x64B8]) ^ LODWORD(STACK[0x64C0]) ^ v8 ^ STACK[0x64D0];
  LODWORD(STACK[0x64F0]) = v13;
  LODWORD(STACK[0x64D0]) = v13 ^ 0xEA00F82D;
  STACK[0x6A70] = STACK[0xD630];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v9) - 4))(a1, a2, a3, a4, a5, a6, a7, v10);
}

uint64_t sub_100BD06F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;

  v10 = *(_QWORD *)(STACK[0x6A70]
                  + 8 * ((a8 | ((unint64_t)(a8 < 0x5C9DCA68) << 32)) + 0x2EBA39F7BED637FCLL)
                  - 0x75D1CFC0DBA01320);
  v11 = (LODWORD(STACK[0x6AB0]) + 7041);
  STACK[0x6AC0] = v11;
  v12 = 0x41B14FC555EB8BCBLL
      * (((v10 ^ 0x5965C2E1EA1176CELL) - 0x4690C1C17FBCE8C5) ^ ((v10 ^ 0x55A93A958EA93E67) - 0x4A5C39B51B04A06CLL) ^ ((v11 ^ 0x75B5810D1DC12A53 ^ v10) - 0x6A40822D886CAFDBLL))
      - 0x3034A5229D19AA07;
  v13 = (v12 ^ 0x9F2B9E4E133DD748) & (2 * (v12 & 0xDF4BDF0C533E176DLL)) ^ v12 & 0xDF4BDF0C533E176DLL;
  v14 = ((2 * (v12 ^ 0xB53F364E1141FDD0)) ^ 0xD4E9D28484FFD57ALL) & (v12 ^ 0xB53F364E1141FDD0) ^ (2 * (v12 ^ 0xB53F364E1141FDD0)) & 0x6A74E942427FEABCLL;
  v15 = ((4 * (v14 ^ 0x2A14294242002A85)) ^ 0xA9D3A50909FFAAF4) & (v14 ^ 0x2A14294242002A85) ^ (4 * (v14 ^ 0x2A14294242002A85)) & 0x6A74E942427FEABCLL;
  v16 = (v15 ^ 0x2850A100007FAAB0) & (16 * ((v14 ^ 0x4060C0000078C038) & (4 * v13) ^ v13)) ^ (v14 ^ 0x4060C0000078C038) & (4 * v13) ^ v13;
  v17 = ((16 * (v15 ^ 0x4224484242004009)) ^ 0xA74E942427FEABD0) & (v15 ^ 0x4224484242004009) ^ (16 * (v15 ^ 0x4224484242004009)) & 0x6A74E942427FEAB0;
  v18 = (v17 ^ 0x22448000027EAA00) & (v16 << 8) ^ v16;
  v19 = (((v17 ^ 0x483069424001402DLL) << 8) ^ 0x74E942427FEABD00) & (v17 ^ 0x483069424001402DLL) ^ ((v17 ^ 0x483069424001402DLL) << 8) & 0x6A74E942427FEA00;
  v20 = v18 ^ 0x6A74E942427FEABDLL ^ (v19 ^ 0x60604042426A0000) & (v18 << 16);
  v21 = v12 ^ (2
             * ((v20 << 32) & 0x6A74E94200000000 ^ v20 ^ ((v20 << 32) ^ 0x427FEABD00000000) & (((v19 ^ 0xA14A900001542BDLL) << 16) & 0x6A74E94200000000 ^ 0x234A90000000000 ^ (((v19 ^ 0xA14A900001542BDLL) << 16) ^ 0x6942427F00000000) & (v19 ^ 0xA14A900001542BDLL))));
  v22 = (a8 | ((unint64_t)(a8 < 0x5C9DCA68) << 32))
      + 0x3B43EF0DCB7B3C21
      + (((v21 ^ a7 ^ 0x6E432A731BED446) - 0x32FF4244AD176E95) ^ ((v21 ^ a7 ^ 0x35BB960C5E9CEB13)
                                                                    - 0x1A0E6EFC23551C0) ^ ((v21 ^ a7 ^ 0xBC147923B8E3FD42)
                                                                                            + 0x77F0F63FDBB5B86FLL));
  v23 = ((2 * (v22 ^ 0xBEB667902C03E92ALL)) ^ 0x7D75B39A1E993622) & (v22 ^ 0xBEB667902C03E92ALL) ^ (2 * (v22 ^ 0xBEB667902C03E92ALL)) & 0x3EBAD9CD0F4C9B10;
  v24 = (v22 ^ 0xBEAE3F182A0F693ALL) & (2 * (v22 & 0x800CBE5D234F723BLL)) ^ v22 & 0x800CBE5D234F723BLL;
  v25 = v23 ^ 0x28A484501448911;
  v26 = (v23 ^ 0x3091880E081000) & (4 * v24) ^ v24;
  v27 = ((4 * v25) ^ 0xFAEB67343D326C44) & v25 ^ (4 * v25) & 0x3EBAD9CD0F4C9B10;
  v28 = ((16 * (v27 ^ 0x41098C9024C9311)) ^ 0xEBAD9CD0F4C9B110) & (v27 ^ 0x41098C9024C9311) ^ (16 * (v27 ^ 0x41098C9024C9311)) & 0x3EBAD9CD0F4C9B10;
  v29 = (v28 ^ 0x2AA898C004489100) & (((v27 ^ 0x3AAA41040D000800) & (16 * v26) ^ v26) << 8) ^ (v27 ^ 0x3AAA41040D000800) & (16 * v26) ^ v26;
  v30 = (((v28 ^ 0x1412410D0B040A01) << 8) ^ 0xBAD9CD0F4C9B1100) & (v28 ^ 0x1412410D0B040A01) ^ ((v28 ^ 0x1412410D0B040A01) << 8) & 0x3EBAD9CD0F4C9B00;
  v31 = (v22 ^ (2
              * (((v29 ^ 0x3EBAD9CD0F4C9B11 ^ (v30 ^ 0x3A98C90D0C080000) & (v29 << 16)) << 32) & 0x3EBAD9CD00000000 ^ v29 ^ 0x3EBAD9CD0F4C9B11 ^ (v30 ^ 0x3A98C90D0C080000) & (v29 << 16) ^ (((v29 ^ 0x3EBAD9CD0F4C9B11 ^ (v30 ^ 0x3A98C90D0C080000) & (v29 << 16)) << 32) ^ 0xF4C9B1100000000) & (((v30 ^ 0x42210C003448A11) << 16) & 0x3EBAD9CD00000000 ^ 0x2632D08100000000 ^ (((v30 ^ 0x42210C003448A11) << 16) ^ 0x59CD0F4C00000000) & (v30 ^ 0x42210C003448A11))))) >> 32;
  v32 = v22
      - 0x2C3B57ECC5A1E6B1
      + (((v31 ^ 0x17AADCD05FF27827) + 0x516FFDFEB4862236) ^ ((v31 ^ 0x7A87134C7E04FC47) + 0x3C4232629570A656) ^ ((v31 ^ 0x6D2DCF9CC09EBBA5) + 0x2BE8EEB22BEAE1B8));
  v33 = (v32 ^ 0x4562F1939EC4F246) & (2 * (v32 & 0x6582F51BDED4F314)) ^ v32 & 0x6582F51BDED4F314;
  v34 = ((2 * (v32 ^ 0x4D6691949BC4F44ELL)) ^ 0x51C8C91E8A200EB4) & (v32 ^ 0x4D6691949BC4F44ELL) ^ (2 * (v32 ^ 0x4D6691949BC4F44ELL)) & 0x28E4648F4510075ALL;
  v35 = ((4 * (v34 ^ 0x282424814510014ALL)) ^ 0xA391923D14401D68) & (v34 ^ 0x282424814510014ALL) ^ (4 * (v34 ^ 0x282424814510014ALL)) & 0x28E4648F45100758;
  v36 = (v35 ^ 0x2080000D04000540) & (16 * ((v34 ^ 0x400E00000410) & (4 * v33) ^ v33)) ^ (v34 ^ 0x400E00000410) & (4 * v33) ^ v33;
  v37 = ((16 * (v35 ^ 0x864648241100212)) ^ 0x8E4648F4510075A0) & (v35 ^ 0x864648241100212) ^ (16 * (v35 ^ 0x864648241100212)) & 0x28E4648F45100750;
  v38 = (v37 ^ 0x844408441000500) & (v36 << 8) ^ v36;
  v39 = (((v37 ^ 0x20A0240B0410025ALL) << 8) ^ 0xE4648F4510075A00) & (v37 ^ 0x20A0240B0410025ALL) ^ ((v37 ^ 0x20A0240B0410025ALL) << 8) & 0x28E4648F45100700;
  v40 = v38 ^ 0x28E4648F4510075ALL ^ (v39 ^ 0x2064040500000000) & (v38 << 16);
  v41 = (v32 ^ (2
              * ((v40 << 32) & 0x28E4648F00000000 ^ v40 ^ ((v40 << 32) ^ 0x4510075A00000000) & (((v39 ^ 0x880608A4510055ALL) << 16) & 0x28E4648F00000000 ^ 0x860208F00000000 ^ (((v39 ^ 0x880608A4510055ALL) << 16) ^ 0x648F451000000000) & (v39 ^ 0x880608A4510055ALL))))) >> 16;
  v42 = v32
      - 0x4BCEADB598042BC2
      + (((v41 ^ 0x129A2E918A025F45) - 0x4EE10D63AB757FABLL) ^ ((v41 ^ 0xC214E5CAABB2612BLL) + 0x619039C7753ABE3BLL) ^ ((v41 ^ 0xD08EFF1115A16A9ALL) + 0x730A231CCB29B58CLL));
  v43 = ((2 * (v42 ^ 0x53F4C55CC2B2E693)) ^ 0xBC70FFAA9D1AE8C6) & (v42 ^ 0x53F4C55CC2B2E693) ^ (2 * (v42 ^ 0x53F4C55CC2B2E693)) & 0x5E387FD54E8D7462;
  v44 = (v42 ^ 0x49ECB04DCABFC2F3) & (2 * (v42 & 0xDCCBA898C3F92F0)) ^ v42 & 0xDCCBA898C3F92F0;
  v45 = v43 ^ 0x4208005542851421;
  v46 = (v43 ^ 0x1C307E0000084040) & (4 * v44) ^ v44;
  v47 = ((4 * v45) ^ 0x78E1FF553A35D18CLL) & v45 ^ (4 * v45) & 0x5E387FD54E8D7460;
  v48 = ((16 * (v47 ^ 0x618008044882463)) ^ 0xE387FD54E8D74630) & (v47 ^ 0x618008044882463) ^ (16 * (v47 ^ 0x618008044882463)) & 0x5E387FD54E8D7460;
  v49 = (v48 ^ 0x42007D5448854400) & (((v47 ^ 0x58207F550A055000) & (16 * v46) ^ v46) << 8) ^ (v47 ^ 0x58207F550A055000) & (16 * v46) ^ v46;
  v50 = (((v48 ^ 0x1C38028106083043) << 8) ^ 0x387FD54E8D746300) & (v48 ^ 0x1C38028106083043) ^ ((v48 ^ 0x1C38028106083043) << 8) & 0x5E387FD54E8D7400;
  v51 = (v42 ^ (2
              * (((v49 ^ 0x5E387FD54E8D7463 ^ (v50 ^ 0x183855440C040000) & (v49 << 16)) << 32) & 0x5E387FD500000000 ^ v49 ^ 0x5E387FD54E8D7463 ^ (v50 ^ 0x183855440C040000) & (v49 << 16) ^ (((v49 ^ 0x5E387FD54E8D7463 ^ (v50 ^ 0x183855440C040000) & (v49 << 16)) << 32) ^ 0x4E8D746300000000) & (((v50 ^ 0x46002A9142891463) << 16) & 0x5E387FD500000000 ^ 0x28315000000000 ^ (((v50 ^ 0x46002A9142891463) << 16) ^ 0x7FD54E8D00000000) & (v50 ^ 0x46002A9142891463))))) >> 8;
  LODWORD(v42) = v42
               - (((v51 ^ 0xA687BEFF) - 10801016) ^ ((v51 ^ 0x9F4E1A90) - 963472151) ^ ((v51 ^ 0x98D88115) - 1056698514))
               - 879314112;
  LODWORD(v50) = (v42 ^ 0x3864CA2A) & (2 * (v42 & 0xB97682B3)) ^ v42 & 0xB97682B3;
  LODWORD(v51) = ((2 * (v42 ^ 0x7A8CCE0C)) ^ 0x87F4997E) & (v42 ^ 0x7A8CCE0C) ^ (2 * (v42 ^ 0x7A8CCE0C)) & 0xC3FA4CBE;
  LODWORD(v48) = v51 ^ 0x400A4481;
  LODWORD(v51) = (v51 ^ 0x83F0081C) & (4 * v50) ^ v50;
  LODWORD(v50) = ((4 * v48) ^ 0xFE932FC) & v48 ^ (4 * v48) & 0xC3FA4CBC;
  LODWORD(v48) = ((16 * (v50 ^ 0xC0124C03)) ^ 0x3FA4CBF0) & (v50 ^ 0xC0124C03) ^ (16 * (v50 ^ 0xC0124C03)) & 0xC3FA4CB0;
  LODWORD(v51) = (v48 ^ 0x3A04800) & (((v50 ^ 0x3E800B0) & (16 * (_DWORD)v51) ^ v51) << 8) ^ (v50 ^ 0x3E800B0) & (16 * v51) ^ v51;
  v52 = v42 ^ (2
             * (v51 ^ 0xC3FA4CBF ^ ((((v48 ^ 0xC05A040F) << 8) ^ 0xFA4CBF00) & (v48 ^ 0xC05A040F) ^ ((v48 ^ 0xC05A040F) << 8) & 0xC3FA4C00 ^ 0xC2480000) & ((_DWORD)v51 << 16)));
  LODWORD(v42) = (((v52 ^ 0xC41C6CDE) + 1013912322) ^ ((v52 ^ 0x755DDDD2) - 1926323698) ^ ((v52 ^ 0x8FC3AAC1)
                                                                                         + 2008077599))
               + 1025596134;
  LODWORD(v50) = (v42 ^ 0x50719E8) & (2 * (v42 & 0x55A79DF0)) ^ v42 & 0x55A79DF0;
  LODWORD(v51) = ((2 * (v42 ^ 0xAC0028C8)) ^ 0xF34F6A70) & (v42 ^ 0xAC0028C8) ^ (2 * (v42 ^ 0xAC0028C8)) & 0xF9A7B538;
  LODWORD(v48) = v51 ^ 0x8A09508;
  LODWORD(v51) = (v51 ^ 0xF1062000) & (4 * v50) ^ v50;
  LODWORD(v50) = ((4 * v48) ^ 0xE69ED4E0) & v48 ^ (4 * v48) & 0xF9A7B538;
  LODWORD(v51) = (v50 ^ 0xE0869420) & (16 * v51) ^ v51;
  LODWORD(v50) = ((16 * (v50 ^ 0x19212118)) ^ 0x9A7B5380) & (v50 ^ 0x19212118) ^ (16 * (v50 ^ 0x19212118)) & 0xF9A7B530;
  v53 = v42 ^ (2
             * ((v50 ^ 0x98231100) & ((_DWORD)v51 << 8) ^ v51 ^ ((((v50 ^ 0x6184A438) << 8) ^ 0xA7B50000) & (v50 ^ 0x6184A438) ^ ((v50 ^ 0x6184A438) << 8) & 0xF9A7B500 ^ 0x21A50000) & (((v50 ^ 0x98231100) & ((_DWORD)v51 << 8) ^ v51) << 16))) ^ 0xF34F6A70;
  LODWORD(STACK[0x6AA0]) = ((2 * (v9 & (v53 >> 2) ^ 0xB503817)) | 0x9E0E2B76) - (v9 & (v53 >> 2) ^ 0xB503817);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((106 * (((v8 + (unint64_t)LODWORD(STACK[0x6AB0])) >> 32) ^ 1)) ^ (LODWORD(STACK[0x6AB0]) | 0x26BCu)))
                            - 4))();
}

uint64_t sub_100BD3C44(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unint64_t v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  uint64_t (*v127)(void);

  LODWORD(STACK[0x6530]) = v3;
  LODWORD(STACK[0x64A0]) = LODWORD(STACK[0x6590]) - LODWORD(STACK[0x6730]);
  LODWORD(STACK[0x6520]) ^= LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x6568]) ^ LODWORD(STACK[0x6528]) ^ LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x6570]) ^ (LODWORD(STACK[0x6500]) - LODWORD(STACK[0x6510]));
  v6 = ((a2 - 0x2493341BA98F5969) ^ 0xF4CD5A52DDAD26D4) & (2 * ((a2 - 0x2493341BA98F5969) & 0xE6ED835AD9A046C5)) ^ (a2 - 0x2493341BA98F5969) & 0xE6ED835AD9A046C5;
  v7 = ((2 * ((a2 - 0x2493341BA98F5969) ^ 0x3C9C58F24FAD2EDELL)) ^ 0xB4E3B7512C1AD036) & ((a2 - 0x2493341BA98F5969) ^ 0x3C9C58F24FAD2EDELL) ^ (2 * ((a2 - 0x2493341BA98F5969) ^ 0x3C9C58F24FAD2EDELL)) & 0xDA71DBA8960D681ALL;
  v8 = v7 ^ 0x4A1048A892052809;
  v9 = (v7 ^ 0x9060130004000010) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0x69C76EA25835A06CLL) & v8 ^ (4 * v8) & 0xDA71DBA8960D6818;
  v11 = (v10 ^ 0x48414AA010052000) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x9230910886084813)) ^ 0xA71DBA8960D681B0) & (v10 ^ 0x9230910886084813) ^ (16 * (v10 ^ 0x9230910886084813)) & 0xDA71DBA8960D6810;
  v13 = (v12 ^ 0x82119A8800040000) & (v11 << 8) ^ v11;
  v14 = (((v12 ^ 0x586041209609680BLL) << 8) ^ 0x71DBA8960D681B00) & (v12 ^ 0x586041209609680BLL) ^ ((v12 ^ 0x586041209609680BLL) << 8) & 0xDA71DBA8960D6800;
  v15 = v13 ^ 0xDA71DBA8960D681BLL ^ (v14 ^ 0x5051888004080000) & (v13 << 16);
  v16 = ((a2 - 0x2493341BA98F5969) ^ (2
                                      * ((v15 << 32) & 0x5A71DBA800000000 ^ v15 ^ ((v15 << 32) ^ 0x160D681B00000000) & (((v14 ^ 0x8A2053289205601BLL) << 16) & 0x5A71DBA800000000 ^ 0x5149A000000000 ^ (((v14 ^ 0x8A2053289205601BLL) << 16) ^ 0x5BA8960D00000000) & (v14 ^ 0x8A2053289205601BLL))))) >> 31;
  v17 = a2
      + 0x5CDAA21F455270CDLL
      + (((v16 ^ 0x409ED44910174987) - 0x7447809CBD646A1) ^ ((v16 ^ 0x13253013EEFA5575) - 0x54FF9C53353B5A53) ^ ((v16 ^ 0x53BBE45A12F454C5) - 0x1461481AC9355BE3));
  v18 = (v17 ^ 0xC515C54A2C6A311) & (2 * (v17 & 0xAD5A59602296C3A0)) ^ v17 & 0xAD5A59602296C3A0;
  v19 = ((2 * (v17 ^ 0x645FE54A7C2A411)) ^ 0x563F4E690AA8CF62) & (v17 ^ 0x645FE54A7C2A411) ^ (2
                                                                                                  * (v17 ^ 0x645FE54A7C2A411)) & 0xAB1FA734855467B0;
  v20 = v19 ^ 0xA900A11485542091;
  v21 = (v19 ^ 0x21B060000000700) & (4 * v18) ^ v18;
  v22 = ((4 * v20) ^ 0xAC7E9CD215519EC4) & v20 ^ (4 * v20) & 0xAB1FA734855467B0;
  v23 = (v22 ^ 0xA81E841005500680) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x301232480046131)) ^ 0xB1FA734855467B10) & (v22 ^ 0x301232480046131) ^ (16 * (v22 ^ 0x301232480046131)) & 0xAB1FA734855467B0;
  v25 = (v24 ^ 0xA11A230005446300) & (v23 << 8) ^ v23;
  v26 = (((v24 ^ 0xA058434801004A1) << 8) ^ 0x1FA734855467B100) & (v24 ^ 0xA058434801004A1) ^ ((v24 ^ 0xA058434801004A1) << 8) & 0xAB1FA73485546700;
  v27 = v25 ^ 0xAB1FA734855467B1 ^ (v26 ^ 0xB07240404440000) & (v25 << 16);
  v28 = (v17 ^ (2
              * ((v27 << 32) & 0x2B1FA73400000000 ^ v27 ^ ((v27 << 32) ^ 0x55467B100000000) & (((v26 ^ 0xA0188330811046B1) << 16) & 0x2B1FA73400000000 ^ 0x80B222000000000 ^ (((v26 ^ 0xA0188330811046B1) << 16) ^ 0x2734855400000000) & (v26 ^ 0xA0188330811046B1))))) >> 9;
  v29 = v17
      - (((v28 ^ 0x47E9F084F201FE80) - 0x3729C7A9BF1E6D8DLL) ^ ((v28 ^ 0x22B363E1D3E6A343) - 0x527354CC9EF9304ELL) ^ ((v28 ^ 0x652635C9957342C5) - 0x15E602E4D86CD1C8))
      + 0x3DBD743A2945EF9ALL;
  v30 = (v29 ^ 0xFCD35B33FFB457FBLL) & (2 * (v29 & 0xFEE053A3FFC547FBLL)) ^ v29 & 0xFEE053A3FFC547FBLL;
  v31 = ((2 * (v29 ^ 0x8153DB33FC3E520BLL)) ^ 0xFF67112007F62BE0) & (v29 ^ 0x8153DB33FC3E520BLL) ^ (2 * (v29 ^ 0x8153DB33FC3E520BLL)) & 0x7FB3889003FB15F0;
  v32 = v31 ^ 0x90889000091410;
  v33 = (v31 ^ 0x7F030000033201E0) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0xFECE22400FEC57C0) & v32 ^ (4 * v32) & 0x7FB3889003FB15F0;
  v35 = (v34 ^ 0x7E82000003E815C0) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x131889000130030)) ^ 0xFB3889003FB15F00) & (v34 ^ 0x131889000130030) ^ (16 * (v34 ^ 0x131889000130030)) & 0x7FB3889003FB15F0;
  v37 = (v36 ^ 0x7B30880003B11500) & (v35 << 8) ^ v35;
  v38 = (((v36 ^ 0x4830090004A00F0) << 8) ^ 0xB3889003FB15F000) & (v36 ^ 0x4830090004A00F0) ^ ((v36 ^ 0x4830090004A00F0) << 8) & 0x7FB3889003FB1500;
  v39 = v37 ^ 0x7FB3889003FB15F0 ^ (v38 ^ 0x3380800003110000) & (v37 << 16);
  v40 = (((v29 ^ (2
                * ((v39 << 32) & 0x7FB3889000000000 ^ v39 ^ ((v39 << 32) ^ 0x3FB15F000000000) & (((v38 ^ 0x4C33089000EA05F0) << 16) & 0x7FB3889000000000 ^ 0x7723880000000000 ^ (((v38 ^ 0x4C33089000EA05F0) << 16) ^ 0x89003FB00000000) & (v38 ^ 0x4C33089000EA05F0))))) >> 6) ^ 0xFFE47AF1701F324FLL)
      + v29;
  STACK[0x6AB0] = v40;
  v41 = v40
      - 0x5B2A8BA4380979F1
      - ((v40 - 0x5B2A8BA4380979F1) >> 31)
      - ((v40 - 0x5B2A8BA4380979F1 - ((v40 - 0x5B2A8BA4380979F1) >> 31)) >> 14);
  v42 = v41 + (v41 >> 7);
  v43 = (v42 ^ 0x5E7E1DD8D096ADB9) - 0x5E7E1DD8D096ADB9;
  v44 = v43 & 0x100000000000;
  v45 = v43 & 0xFFFFEFFFFFFFFFFFLL;
  if ((v44 & v42) != 0)
    v44 = -v44;
  v46 = ((2 * (v45 ^ -(uint64_t)v42 ^ (v44 + v42))) & 0x4303C44E5ED2A48CLL)
      + (v45 ^ -(uint64_t)v42 ^ (v44 + v42) ^ 0xA181E2272F695246);
  v47 = v46 - (v46 >> 27) + ((v46 - (v46 >> 27)) >> 13);
  v48 = v47 + (v47 >> 6);
  v49 = (v48 ^ 0x124042813B582860)
      - ((v48 ^ 0x124042813B582860) >> 25)
      - (((v48 ^ 0x124042813B582860) - ((v48 ^ 0x124042813B582860) >> 25)) >> 11);
  v50 = v49 - (v49 >> 6);
  LODWORD(STACK[0x6528]) = v4 & (v50 >> 2) ^ v50;
  v51 = v50
      - 0x19CD634DB404B01DLL
      - ((v50 - 0x19CD634DB404B01DLL) >> 24)
      - ((v50 - 0x19CD634DB404B01DLL - ((v50 - 0x19CD634DB404B01DLL) >> 24)) >> 9);
  v52 = v51 - (v51 >> 6);
  v53 = ((((v52 ^ 0x3B73525787EF3D13) - ((v52 ^ 0x3B73525787EF3D13) >> 27)) >> 9) ^ ((v52 ^ 0x3B73525787EF3D13)
                                                                                       - ((v52 ^ 0x3B73525787EF3D13) >> 27)))
      + 2
      * ((((v52 ^ 0x3B73525787EF3D13) - ((v52 ^ 0x3B73525787EF3D13) >> 27)) >> 9) & ((v52 ^ 0x3B73525787EF3D13)
                                                                                       - ((v52 ^ 0x3B73525787EF3D13) >> 27)));
  v54 = v53 - (v53 >> 2);
  v55 = v54
      - 0x682D0FD48B1D758ALL
      + ((v54 - 0x682D0FD48B1D758ALL) >> 30)
      + ((v54 - 0x682D0FD48B1D758ALL + ((v54 - 0x682D0FD48B1D758ALL) >> 30)) >> 14);
  v56 = v55 - (v55 >> 7);
  STACK[0x6510] = v4 & (v56 >> 2) ^ v56;
  v57 = (v56 ^ 0x365087D38A064ADALL)
      - ((v56 ^ 0x365087D38A064ADALL) >> 31)
      + (((v56 ^ 0x365087D38A064ADALL) - ((v56 ^ 0x365087D38A064ADALL) >> 31)) >> 15);
  v58 = v57 + (v57 >> 3);
  LODWORD(v52) = v4 & (v52 >> 2) ^ v4 & (v42 >> 2) ^ v42 ^ v52 ^ v4 & (v58 >> 2) ^ v58;
  v59 = v58
      + 0x5375B4D3090F5508
      + ((v58 + 0x5375B4D3090F5508) >> 29)
      - ((v58 + 0x5375B4D3090F5508 + ((v58 + 0x5375B4D3090F5508) >> 29)) >> 8);
  v60 = v59 - (v59 >> 2);
  LODWORD(v58) = STACK[0x6720];
  LODWORD(v59) = v4 & ((LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x6970])) >> 2) ^ 0xC441214;
  LODWORD(v59) = (v59 - 673783638 - ((2 * v59) & 0xFA8C104)) ^ LODWORD(STACK[0x65D8]);
  LODWORD(STACK[0x6AA0]) = v59 - ((2 * v59) & 0x627CB1E6);
  LODWORD(v59) = v58 ^ LODWORD(STACK[0x6A60]);
  v61 = STACK[0x6860];
  v62 = ((2 * (v4 & (v61 >> 2) ^ 0x8901883)) | 0xF8E57C0) - (v4 & (v61 >> 2) ^ 0x8901883) - 130493408;
  LODWORD(v48) = v4 & (v60 >> 2) ^ v54 ^ v48 ^ v4 & ((v54 ^ v48) >> 2) ^ v60;
  v63 = STACK[0x6990];
  v64 = STACK[0x69A0];
  LODWORD(v52) = v4 & (LODWORD(STACK[0x6870]) >> 2) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x68B0]) ^ (v52 - ((2 * v52) & 0xC64E852C) + 1663517334);
  LODWORD(v52) = ((v52 ^ 0xFE408770) - 2 * ((v52 ^ 0xFE408770) & 0x6232F3CF ^ v52 & 3) - 499977268) ^ v5;
  LODWORD(v52) = (v52 - 657299708 - ((2 * v52) & 0xB1A4CE08)) ^ LODWORD(STACK[0x67F0]);
  LODWORD(STACK[0x6A70]) = v52 - ((2 * v52) & 0xA75514C6);
  LODWORD(v52) = v4 & ((v59 ^ LODWORD(STACK[0x6A10])) >> 2) ^ 0x3640906;
  LODWORD(v52) = (((2 * v52) & 0x10885002) - v52 + 398152662) ^ 0x37BF3BD0;
  v65 = LODWORD(STACK[0x6A00]) >> 1;
  v66 = ((2 * (v65 & 0x1397FC7 ^ 0xC87452AD)) | 0xBEA25CD6) - (v65 & 0x1397FC7 ^ 0xC87452AD) + 548327829;
  LODWORD(v54) = (((v62 ^ 0x173F5435) - 98351790) ^ ((v62 ^ 0x182D9388) - 181304595) ^ ((v62 ^ 0xC11A65D) - 519194822))
               + (((v61 ^ 0xBAC7BAA8) - 541506497) ^ ((v61 ^ 0x35DF6621) + 1352767672) ^ ((v61 ^ 0x7E679685) + 454649876));
  LODWORD(STACK[0x6500]) = v62;
  LODWORD(v58) = (v62 ^ 0x30361E0) & (v61 ^ 0x5B26A64A) ^ v62 & 0xAA59EC46;
  LODWORD(v58) = (v58 & 0xA9F98161 ^ 0x1B90161) + (v58 ^ 0xA8408802) - ((v58 ^ 0xA8408802) & 0xA9F98161);
  v67 = STACK[0x6A30];
  v68 = v66 & 0x530062CB ^ LODWORD(STACK[0x136C]) ^ (LODWORD(STACK[0x6A30]) ^ 0x88B69CB1) & (v66 ^ 0x157691CD);
  LODWORD(STACK[0x6A60]) = v68 - 738962651 - ((2 * v68) & 0x27E8C59C);
  v69 = STACK[0x6A50];
  LODWORD(STACK[0x64E8]) = v66 & 0x4328FA67 ^ 0x1209045 ^ (LODWORD(STACK[0x6A50]) ^ 0x4328FAE7) & (v66 ^ 0x157691CD);
  v70 = v54
      + ((4 * v58) ^ 0xF11E5B73)
      + ((((2 * v58) ^ 0x843F3EBF) - 1239727584) ^ (((2 * v58) ^ 0xA92F8370) - 1693712431) ^ (((2 * v58) ^ 0x2A606F89)
                                                                                            + 407114538));
  LODWORD(STACK[0x64F8]) = v59 ^ LODWORD(STACK[0x66E0]) ^ (((2 * v52) | 0x5089D322) - v52 - 675604881) ^ (v70 - ((2 * v70 - 1860937740) & 0xDDE8ECD6) - 1216437659) ^ v2 ^ (v48 - 673783638 - ((2 * v48) & 0xAFADC154));
  v71 = STACK[0x6A40];
  LODWORD(v48) = (v64 >> 1) & 0x5AD14980 ^ 0xF5E2DA80;
  LODWORD(v59) = (v64 >> 1) & 0xD14800 ^ 0x1406409 ^ v48 & (LODWORD(STACK[0x6A40]) ^ 0xFC901080);
  v72 = STACK[0x6A20];
  LODWORD(v48) = (v64 >> 1) & 0x50000900 ^ 0x21022900 ^ v48 & (LODWORD(STACK[0x6A20]) ^ 0xD642C080);
  v73 = STACK[0x6930];
  v74 = STACK[0x6A80];
  LODWORD(v48) = ((1287357106 - (_DWORD)v48 + ((2 * (_DWORD)v48) & 0x6680F200)) ^ 0x98BB21B2) >> LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x6980]) = ((((((2 * (_DWORD)v59) | 0x4031E6CA) - (_DWORD)v59 - 538506085) ^ 0x249ADD6C) << (STACK[0x6930] & 0x9B ^ 0x92) << (STACK[0x6930] & 4)) ^ 0x9B114C2F) & ~(_DWORD)v48 | v48 & 0x64EEB3D0;
  LODWORD(v59) = ((v65 & 0x9F17CD ^ 0x8604CD) + (v65 & 0x841149 ^ 0x260B100) - ((v65 & 0x9F17CD ^ 0x8604CD) & 0x841149)) ^ 0x2CE7E769;
  LODWORD(v59) = v59 - ((2 * v59) & 0x5BA39DB2) + 2110901977;
  v75 = v59 ^ LODWORD(STACK[0x1370]);
  LODWORD(v48) = v59 & 0xE95CCE13 ^ 0x29180201 ^ (v69 ^ 0xE95CCE93) & v75;
  LODWORD(STACK[0x6960]) = (v48 | 0x5F731136) - (v48 | 0xA08CEEC9);
  LODWORD(STACK[0x68C0]) = v59 & 0x698EF736 ^ 0x408EA122 ^ (v71 ^ 0x90C589C7) & v75;
  LODWORD(v48) = (v64 >> 1) & 0x146560DD ^ 0x28AE816F;
  LODWORD(v59) = (v64 >> 1) & 0x14040094 ^ 0x13000614 ^ v48 & (v72 ^ 0x344E6156);
  LODWORD(STACK[0x68B0]) = (v59 | 0x3D1A79A) - (v59 | 0xFC2E5865);
  LODWORD(v59) = (v64 >> 1) & 0x1061400C ^ 0xD8209408 ^ (v67 ^ 0x30452054) & v48;
  v76 = ((((2 * (_DWORD)v59) & 0x110EE888) - (_DWORD)v59 + 1953006523) ^ 0xA4EA979D) << (v73 & 3 ^ 2) << (v73 & 0x9C ^ 0x90);
  LODWORD(v59) = ((2 * (v65 & 0x3FF71BB1 ^ 0xEE99391)) | 0xD256A994) - (v65 & 0x3FF71BB1 ^ 0xEE99391) - 1764447434;
  LODWORD(v48) = v59 & LODWORD(STACK[0x1374]) ^ 0x852511DB ^ (v67 ^ 0x4A828ECC) & (v59 ^ 0x4C9E2B9);
  LODWORD(STACK[0x6890]) = (v48 | 0x68938B9C) - (v48 | 0x976C7463);
  LODWORD(v59) = v59 & 0x1CCC451D ^ 0x4440119 ^ (v59 ^ 0x4C9E2B9) & (v72 ^ 0x3F8C2EFD);
  LODWORD(STACK[0x6730]) = ((2 * v59) | 0x2B2DCF80) - v59;
  LODWORD(v59) = ((v64 >> 1) & 0x7073189F ^ 0x196AE0B0 | 0xB69B4B5E)
               - ((v64 >> 1) & 0x7073189F ^ 0x196AE0B0 | 0x4964B4A1)
               + 1231336609;
  LODWORD(v52) = v59 & 0x5A2C1B4E ^ 0x201A4E ^ (v59 ^ 0x2F758244) & (v69 ^ 0x5A2C1BCE);
  LODWORD(STACK[0x6588]) = (((2 * v52) & 0x62FFB874) - v52 - 830463035) ^ 0xC4843BCF;
  LODWORD(STACK[0x6308]) = (v59 & 0xE34CA8AE ^ 0x23448004 ^ (v59 ^ 0x2F758244) & (v71 ^ 0x1A07D65F)) << (v73 & 0xA ^ 2u) << (v73 & 0x95 ^ 0x90u);
  LODWORD(v48) = v65 & 0x512041BD ^ 0xF26083FF;
  LODWORD(STACK[0x6300]) = v48;
  LODWORD(STACK[0x6570]) = v65 & 0x41200005 ^ 0xE2608045 ^ (v71 ^ 0x1220C2B4) & v48;
  LODWORD(v59) = ((2 * ((v64 >> 1) & 0x477A4168 ^ 0x63646540)) & 0x42F44050)
               - ((v64 >> 1) & 0x477A4168 ^ 0x63646540)
               + 1585825616;
  LODWORD(v54) = (v59 ^ 0xF2776180) & (v67 ^ 0xF084C080) ^ v59 & 0x1B3222F8;
  LODWORD(STACK[0x6310]) = (((v54 & 0x19D045C7 ^ LODWORD(STACK[0x1378])) + (v54 & 0xE62FBA38 ^ 0x220001) - 1) ^ 0x3D06504) << (v73 & 0x1C ^ 0x10u);
  LODWORD(v59) = v59 & 0x46FC81E8 ^ 0x3C106C ^ (v59 ^ 0xF2776180) & (v69 ^ 0x46FC8168);
  LODWORD(STACK[0x6568]) = v59 - ((2 * v59) & 0x75C1A2E6);
  LODWORD(v58) = ((v64 >> 1) & 0x2725A2A3 ^ 0x6040282)
               - ((2 * ((v64 >> 1) & 0x2725A2A3 ^ 0x6040282)) & 0x480104)
               + 276711874;
  LODWORD(v48) = v58 & 0x3FFDAFFF ^ 0x7917CC86;
  LODWORD(STACK[0x6318]) = v48;
  LODWORD(v59) = v48 & (v71 ^ 0x31F3A422) ^ v58 & LODWORD(STACK[0x137C]);
  LODWORD(STACK[0x64C0]) = (v59 & 0x37FCC7D8 ^ 0x37C4D708) + (v59 ^ 0x483800D1) - ((v59 ^ 0x483800D1) & 0x37FCC7D8);
  LODWORD(v59) = (v65 & 0x4372A330 ^ 0x40120330 | 0x8AFD93D5)
               - (v65 & 0x4372A330 ^ 0x40120330 | 0x75026C2A)
               + 1963093034;
  LODWORD(v52) = (v67 ^ 0xE053E3D1) & (v59 ^ 0xC6AD484) ^ v59 & 0xBE515A1;
  LODWORD(v59) = (v69 ^ 0x6665DFB8) & (v59 ^ 0xC6AD484) ^ v59 & 0x4665D730;
  LODWORD(STACK[0x64B8]) = (v59 & 0x76558B78 ^ 0x34158279) + (v59 & 0x89AA7487);
  LODWORD(v59) = (v65 & 0x476BE1FB ^ 0xDC696587)
               + (v65 & 0x768616B ^ LODWORD(STACK[0x1380]))
               - ((v65 & 0x476BE1FB ^ 0xDC696587) & 0x8768656B);
  LODWORD(v48) = (((v52 & 0x2AC9812A ^ 0x2A088108)
                 + (v52 ^ 0xE11CA3)
                 - ((v52 ^ 0xE11CA3) & 0x2AC9812A)) ^ LODWORD(STACK[0x1384])) << (v73 & 0x18 ^ 0x10u) << (v73 & 0x87 ^ 0x82u);
  LODWORD(v52) = v59 & 0x3297D43E ^ 0x212842E ^ (v59 ^ 0xB1B3DB9B) & (v72 ^ 0x11D7AFDE);
  LODWORD(v59) = (v67 ^ 0xA8B7C8BE) & (v59 ^ 0xB1B3DB9B) ^ v59 & 0x430136C4;
  LODWORD(v52) = ((((2 * (_DWORD)v52) | 0x2055E176) - (_DWORD)v52 - 271249595) ^ 0x22ABA48Fu) >> v74;
  LODWORD(STACK[0x64B0]) = (((((v59 & 0x345B9683 ^ 0x345B9483) + (v59 & 0xCBA4697C ^ 0x3002005) - 1) ^ 0x365AA607) << (v73 & 0xB ^ 2u) << (v73 & 0x94 ^ 0x90u)) ^ 0xA2E2F77A) & ~(_DWORD)v52 | v52 & 0x5D1D0885;
  LODWORD(v59) = ((v64 >> 1) & 0x397B0FF5 ^ 0x21600B40)
               - ((2 * ((v64 >> 1) & 0x397B0FF5 ^ 0x21600B40)) & 0x12F61028)
               - 813742052;
  LODWORD(v52) = v59 & 0x65286841 ^ 0x4028C040 ^ (v59 ^ 0xBD8B5763) & (v69 ^ 0x652868C1);
  LODWORD(STACK[0x64A8]) = ((2 * v52) & 0xD0DCC970) - v52;
  LODWORD(STACK[0x6498]) = v59 & 0x4CA807FD ^ 0xC880761 ^ (v59 ^ 0xBD8B5763) & (v71 ^ 0xB5E3790C);
  LODWORD(v59) = (((v64 >> 1) & 0x1185B3DD ^ 0x1000934D)
                - ((2 * ((v64 >> 1) & 0x1185B3DD ^ 0x1000934D)) & 0x22000398)
                - 586021426) ^ 0x1F5645CE;
  LODWORD(v59) = (v59 | 0x43C5EF7B) - (v59 | 0xBC3A1084) - 1137045372;
  LODWORD(v52) = (v59 ^ 0xB38EC858) & (v67 ^ 0x2DFC9438) ^ v59 & 0xC64A6A42;
  LODWORD(STACK[0x6490]) = v59 & 0xA393C2C7 ^ 0xA382C040 ^ (v59 ^ 0xB38EC858) & (v69 ^ 0xA393C247);
  LODWORD(STACK[0x6488]) = (((v52 ^ 0x84080040) - ((2 * (_DWORD)v52) & 0x34640E5E) + 439486255) ^ 0x1C304F2F) << (v73 & 0x98 ^ 0x90) << (v73 & 7 ^ 2);
  LODWORD(v59) = (-2101623880
                - (v65 & 0x5CD2C769 ^ 0x5000C520)
                + ((2 * (v65 & 0x5CD2C769 ^ 0x5000C520)) | 0xFA8864D8)
                + 2524) ^ 0xDEA95D3C;
  LODWORD(v59) = (v59 | 0x2FFB2978) - (v59 | 0xD004D687) - 804989305;
  LODWORD(v52) = v59 & 0x81CCEE32 ^ 0x1086620 ^ (v71 ^ 0x788790C3) & (v59 ^ 0x39730FDB);
  LODWORD(STACK[0x6480]) = (v52 | 0x9B163E62) - (v52 | 0x64E9C19D);
  LODWORD(v59) = v59 & 0x26EB0CB9 ^ 0x26904B9 ^ (v59 ^ 0x39730FDB) & (v72 ^ 0x5AB6759);
  LODWORD(STACK[0x6298]) = ((2 * v59) & 0x83EA24B8) - v59;
  LODWORD(v59) = (v65 & 0x6A68A82C ^ 0xA482820) - ((2 * (v65 & 0x6A68A82C ^ 0xA482820)) & 0x44500048) + 666436278;
  v77 = v59 & 0xFFF8A8FC ^ 0xB14178C8;
  LODWORD(STACK[0x6290]) = v59 & 0x74B80818 ^ 0x30000808 ^ (v69 ^ 0x74B80898) & v77;
  LODWORD(STACK[0x6320]) = (v59 & 0x88B0A820 ^ 0x80012800 ^ (v67 ^ 0x63015058) & v77) << (v73 & 0x99 ^ 0x90u);
  LODWORD(v59) = ((2 * ((v64 >> 1) & 0x4C321C12 ^ 0x4C300800)) | 0xD5D41D2E)
               - ((v64 >> 1) & 0x4C321C12 ^ 0x4C300800)
               - 1793724055;
  LODWORD(v59) = (v59 & 0xA624AF60 ^ 0x2400A260) + (v59 ^ 0xCA3D1D93) - ((v59 ^ 0xCA3D1D93) & 0xA624AF64);
  LODWORD(STACK[0x6288]) = (((v59 ^ 0x92859455) & (v71 ^ LODWORD(STACK[0x1388])) ^ v59 & 0x9C322FDC) & 0x33B8787B ^ 0x33A87823)
                         + ((v59 ^ 0x92859455) & (v71 ^ LODWORD(STACK[0x1388])) ^ v59 & 0x9C322FDC ^ 0x1204DC)
                         - (((v59 ^ 0x92859455) & (v71 ^ LODWORD(STACK[0x1388])) ^ v59 & 0x9C322FDC ^ 0x1204DC) & 0x33B8787B);
  LODWORD(v59) = (v59 ^ 0x92859455) & (v72 ^ 0x5DA6C5D4) ^ v59 & 0x7EE6AE34;
  LODWORD(STACK[0x6280]) = (v59 & 0xF512E03F ^ 0xA112E02B) + (v59 & 0xAED1FC0 ^ 0x8C00E01);
  LODWORD(v59) = ((2 * (v65 & 0x438BCC1F ^ 0xC29005)) | 0xAB7CD8EC) - (v65 & 0x438BCC1F ^ 0xC29005) + 708940682;
  LODWORD(v52) = v59 & 0xF5EA6925 ^ 0xA4202100 ^ (v67 ^ 0x1E5C975F) & (v59 ^ 0x12EA6449);
  LODWORD(STACK[0x6278]) = (v52 | 0x68D90EB5) - (v52 | 0x9726F14A);
  LODWORD(v59) = v59 & 0xF2C4A36E ^ 0xA2440028 ^ (v69 ^ 0xF2C4A3EE) & (v59 ^ 0x12EA6449);
  LODWORD(STACK[0x6270]) = ((2 * v59) | 0x7EA787B0) - v59;
  LODWORD(v59) = (((v64 >> 1) & 0x500CD8 ^ 0xD3CC9C5) + ((v64 >> 1) & 0x12802020 ^ 0x2021) - 2) ^ 0xC5CA99C;
  LODWORD(v59) = ((2 * v59) | 0x9607DCB4) - v59 + 888934822;
  v78 = (v59 ^ 0x107C00FC) & (v71 ^ 0x105B9E80) ^ v59 & 0x16EF1F8E;
  LODWORD(v52) = (v71 ^ 0xF6AD45B9 ^ ((v59 ^ 0xCA23A6F2) - 2 * ((v59 ^ 0xCA23A6F2) & 0x55B99D4F ^ v59 & 9) - 709255866))
               + 44683499
               + (((v78 & 0x54EB480E ^ 0x5462400A) + (v78 ^ 0x890884) - ((v78 ^ 0x890884) & 0x54EB480E)) ^ 0xBBF1BFF9)
               + 2376;
  v79 = (v52 ^ 0xFD4711EF) & (2 * (v52 & 0xFD5625CE)) ^ v52 & 0xFD5625CE;
  LODWORD(v54) = ((2 * (v52 ^ LODWORD(STACK[0x138C]))) ^ 0xD47AFE4A) & (v52 ^ LODWORD(STACK[0x138C])) ^ (2 * (v52 ^ LODWORD(STACK[0x138C]))) & 0xEA3D7F24;
  v80 = (v54 ^ 0xC03C3E05) & (4 * v79) ^ v79;
  LODWORD(v54) = ((4 * (v54 ^ 0x2A050125)) ^ 0xA8F5FC94) & (v54 ^ 0x2A050125) ^ (4 * (v54 ^ 0x2A050125)) & 0xEA3D7F24;
  v81 = (v54 ^ 0xA8357C00) & (16 * v80) ^ v80;
  LODWORD(v54) = ((16 * (v54 ^ 0x42080321)) ^ 0xA3D7F250) & (v54 ^ 0x42080321) ^ (16 * (v54 ^ 0x42080321)) & 0xEA3D7F20;
  v82 = v81 ^ 0xEA3D7F25 ^ (v54 ^ 0xA2157200) & (v81 << 8);
  LODWORD(v52) = (v52 ^ (2
                                     * ((v82 << 16) & 0x6A3D0000 ^ v82 ^ ((v82 << 16) ^ 0x7F250000) & (((v54 ^ 0x48280D25) << 8) & 0x6A3D0000 ^ 0x42000000 ^ (((v54 ^ 0x48280D25) << 8) ^ 0x3D7F0000) & (v54 ^ 0x48280D25)))) ^ 0xFD66DB84) << (v73 & 0x9B ^ 0x92) << (v73 & 4);
  v83 = (v65 & 0x657CE8AB ^ 0x414C6800 | 0x26D230E1) - (v65 & 0x657CE8AB ^ 0x414C6800 | 0xD92DCF1E) - 651309282;
  v84 = (v83 & 0x86A7E116 ^ 0x9607A302) + (v83 ^ 0x20F85074) - ((v83 ^ 0x20F85074) & 0x86A7E116);
  LODWORD(v59) = (v59 & 0xECF75646 ^ 0xEC835602 ^ (v59 ^ 0xEF83FF03) & (v72 ^ 0xCFB73DA6)) >> v74;
  LODWORD(STACK[0x65D8]) = ((v52 ^ 0xB50FFDAE) & ~(_DWORD)v59 | v59 & 0x4AF00251) ^ 0x2100041;
  LODWORD(v52) = (v71 ^ 0x1E093E01) & (v84 ^ 0x5F5C3A55) ^ v84 & 0xE74240F0;
  LODWORD(STACK[0x6268]) = (v52 & 0xF0CC7C35 ^ 0xF08C3C25) + (v52 ^ 0x2424010) - ((v52 ^ 0x2424010) & 0xF0CC7C35);
  LODWORD(v52) = (v69 ^ 0x47DBBD38) & (v84 ^ 0x5F5C3A55) ^ v84 & 0x47DBBDB8;
  LODWORD(STACK[0x6260]) = (v52 & 0xAEF6B0D6 ^ 0xAC64A0D7) + (v52 & 0x51094F29);
  LODWORD(v59) = ((v64 >> 1) & 0x4804B22 ^ 0x158C204B) + ((v64 >> 1) & 0x42628001) - 1;
  v85 = v59 ^ 0xD82B7D0C;
  LODWORD(v52) = (v59 ^ 0xD82B7D0C) & (v67 ^ 0x4080CE7E) ^ 0x88081000;
  LODWORD(v59) = v59 ^ 0x40621085;
  LODWORD(STACK[0x62B0]) = (v52 ^ v59 & 0x32E0004) << (~(_BYTE)v73 & 0x92) << (v73 & 0xD);
  LODWORD(v59) = v85 & (v72 ^ 0xC6035837) ^ 0xC0430104 ^ v59 & 0x554233C7;
  LODWORD(STACK[0x6258]) = ((v59 | 0x85F55544) - (v59 | 0x7A0AAABB) + 2047519419) ^ 0xD5F775C1;
  LODWORD(v59) = ((v65 & 0x77CF9E5 ^ 0x758E981 | 0x797FC2BE) - (v65 & 0x77CF9E5 ^ 0x758E981 | 0x86803D41) - 2038416063) ^ 0xF8424BBC;
  LODWORD(v59) = ((2 * v59) & 0x9892A796) - v59 + 867609652;
  v86 = v59 & 0xB025DB40 ^ 0xB0040B40 ^ (v69 ^ 0xB025DBC0) & (v59 ^ 0xBF4E2FF8);
  v87 = STACK[0x6A90];
  LODWORD(STACK[0x6250]) = (((v59 & 0x77DE5317 ^ 0x374E0310 ^ (v67 ^ 0x9C68AD6D) & (v59 ^ 0xBF4E2FF8)) << (v73 & 0x91 ^ 0x90u) << (v73 & 0xE ^ 2u)) ^ 0xC6ABE99E) & ~(v86 >> STACK[0x6A90]) | (v86 >> STACK[0x6A90]) & 0x39541661;
  LODWORD(v59) = ((2 * ((v64 >> 1) & 0x2C001B78 ^ LODWORD(STACK[0x1390]))) & 0x14400670)
               - ((v64 >> 1) & 0x2C001B78 ^ LODWORD(STACK[0x1390]))
               + 1950440517;
  LODWORD(v52) = v59 & 0x9CC14940 ^ 0x9C108000 ^ (v59 ^ 0x86617AA5) & (v71 ^ LODWORD(STACK[0x1394]));
  LODWORD(STACK[0x6248]) = v52 - ((2 * v52) & 0x1CD75006);
  LODWORD(STACK[0x62E0]) = v59 & 0xF0E02E18 ^ 0x80602A00 ^ (v59 ^ 0x86617AA5) & (v72 ^ 0xD38045F8);
  LODWORD(v59) = ((2 * ((v64 >> 1) & 0x216C78D8 ^ 0x1005898)) | 0x2EDB6E34)
               - ((v64 >> 1) & 0x216C78D8 ^ 0x1005898)
               + 1754417382;
  LODWORD(v59) = (v59 & 0xE1C77150 ^ 0x40C24000) + (v59 ^ 0xB71DB771) - ((v59 ^ 0xB71DB771) & 0xE1C77151);
  LODWORD(v52) = (v59 ^ 0xA30B80C2) & (v67 ^ 0xF1FECF6) ^ v59 & 0xE4A9128C;
  LODWORD(v54) = v52 ^ LODWORD(STACK[0x1398]);
  LODWORD(v59) = v59 & 0xE4AAF020 ^ 0x80089000 ^ (v59 ^ 0xA30B80C2) & (v72 ^ 0xC7EA9BC0);
  LODWORD(STACK[0x6240]) = v59 - ((2 * v59) & 0xB87AA4C2);
  v88 = ((2 * (v65 & 0x3C37F7E5 ^ 0xC230165)) & 0xDE3C2) - (v65 & 0x3C37F7E5 ^ 0xC230165) + 1031343630;
  LODWORD(v59) = v88 & 0x1D14F755 ^ 0x1014A650 ^ (v71 ^ 0x645F89A4) & (v88 ^ 0x5510F225);
  LODWORD(STACK[0x6238]) = (v59 | 0x4A7C0C7) - (v59 | 0xFB583F38);
  v89 = ((v64 >> 1) & 0x399889EE ^ LODWORD(STACK[0x139C]) | 0x8A2894DA)
      - ((v64 >> 1) & 0x399889EE ^ LODWORD(STACK[0x139C]) | 0x75D76B25)
      + 1977051941;
  LODWORD(STACK[0x6230]) = (((v52 & 0x5E7C855C ^ 0x5E5C8558) + (_DWORD)v54 - (v54 & 0x5E7C855C)) ^ 0x5ED58758) << (v73 & 0x91 ^ 0x90u) << (v73 & 0xE ^ 2u);
  LODWORD(v52) = v88 & 0xC33575C ^ 0xC0020044 ^ (v69 ^ 0x4C3357DC) & (v88 ^ 0x5510F225);
  LODWORD(STACK[0x6220]) = v52 - ((2 * v52) & 0x823B5262);
  LODWORD(v52) = ((v65 & 0x55CBD79D ^ 0x5C8171D | 0xFEDE0D6) - (v65 & 0x55CBD79D ^ 0x5C8171D | 0xF0121F29) - 267247831) ^ 0x2FCDE07E;
  LODWORD(v52) = ((2 * v52) & 0xCDDD748C) - v52 - 1726921287;
  LODWORD(STACK[0x62F8]) = v52 ^ 0x43AFEFB3;
  v90 = v52 & 0x16B3034D ^ 0x14130148 ^ (v67 ^ 0xFD05FD37) & (v52 ^ 0x43AFEFB3);
  LODWORD(STACK[0x6218]) = (v90 | 0xBA69ED2A) - (v90 | 0x459612D5);
  LODWORD(v54) = v89 & 0xFBA93F74 ^ 0xEA293400 ^ (v89 ^ 0x690DE191) & (v72 ^ 0xDCEB5494);
  LODWORD(STACK[0x6210]) = (LODWORD(STACK[0x13A0]) | (2 * v54)) - v54;
  LODWORD(STACK[0x62F0]) = v52 & 0xE78587A5;
  LODWORD(STACK[0x62E8]) = (v89 & 0xC0F49665 ^ 0x40048001 ^ (v89 ^ 0x690DE191) & (v71 ^ 0x39BFE894)) << (~(_BYTE)v73 & 0x90);
  LODWORD(v52) = (v65 & 0x37A6C2C4 ^ 0x5000240 | 0x5ED897C3) - (v65 & 0x37A6C2C4 ^ 0x5000240 | 0xA127683C) - 1591252932;
  LODWORD(v52) = (v52 & 0x9E10C138 ^ 0x10006029) + (v52 & 0x61EF1EC7) - 1;
  v91 = v52 ^ 0x406816C0;
  LODWORD(v52) = v52 ^ 0x303172A7;
  LODWORD(STACK[0x6208]) = (v91 & 0xF314CD06 ^ (v71 ^ 0xA5F93F7) & v52 ^ 0x70104406) << (v73 & 0x17 ^ 0x12) << (v73 & 0x88 ^ 0x80);
  LODWORD(STACK[0x6200]) = v52 & (v72 ^ 0xAFE3E6B3) ^ 0x10443 ^ v91 & 0x8CA38D53;
  v92 = ((((2 * (v65 & 0x1CD14D9E ^ 0x904D1A)) | 0xE09E6ED2) - (v65 & 0x1CD14D9E ^ 0x904D1A) + 263243927) ^ 0xCB95AB62)
      - 1;
  LODWORD(v54) = v92 & 0xBE69A9FE ^ 0x1809291C ^ (v71 ^ 0x4722D70F) & (v92 ^ 0x1E294AA8);
  LODWORD(STACK[0x61F8]) = (v54 | 0x8B2C330D) - (v54 | 0x74D3CCF2);
  LODWORD(v52) = ((2 * ((v64 >> 1) & 0x4E811E1F ^ 0x881121A)) | 0x6A8642E2)
               - ((v64 >> 1) & 0x4E811E1F ^ 0x881121A)
               + 1253891727;
  LODWORD(STACK[0x62D8]) = v52 ^ 0x60C01541;
  LODWORD(v54) = (v52 ^ 0x60C01541) & (v67 ^ 0xFCA755A1) ^ v52 & 0x1701ABDB;
  LODWORD(STACK[0x61E8]) = (v54 & 0xFAA5DD32 ^ 0xE8A4DC22) + (v54 ^ 0x131101D9) - ((v54 ^ 0x131101D9) & 0xFAA5DD32);
  LODWORD(STACK[0x62C8]) = v52 & 0xF1EE928C;
  LODWORD(v52) = (v69 ^ 0x103082FF) & (v92 ^ 0x1E294AA8) ^ v92 & 0x1030827F;
  LODWORD(STACK[0x61BC]) = (v52 & 0xD8E15908 ^ 0xD8C15909) + (v52 & 0x271EA6F7);
  LODWORD(v52) = ((v64 & 0x9385210 ^ 0x9BAC1411) + (v64 & 0x20028962) - 1) ^ 0xBFADBF14;
  LODWORD(v52) = (((v52 | 0x4A908430) - (v52 | 0xB56F7BCF) - 1250985009) ^ 0x6E99BC14) >> !(STACK[0x6740] & 1) >> (STACK[0x6740] & 1);
  v93 = v52 & 0x3A25F1EC ^ 0x20A008 ^ (v52 ^ 0x293ADB72) & (v72 ^ 0x19659A0C);
  LODWORD(STACK[0x61B0]) = (v93 | 0xF82798F3) - (v93 | 0x7D8670C);
  LODWORD(v52) = v52 & 0xE0C41DD7 ^ 0xC40117 ^ (v52 ^ 0x293ADB72) & (v67 ^ 0xB72E3AD);
  LODWORD(STACK[0x6228]) = (((v52 | 0xFC392870) - (v52 | 0x3C6D78F) + 63362959) ^ 0xDCFD3035) << (v73 & 0x9F ^ 0x92);
  v94 = (v64 >> 1) & 0x2C147631 ^ 0x782CBE73;
  LODWORD(v52) = (v64 >> 1) & 0xC005620 ^ 0xB0842A6 ^ v94 & (v69 ^ 0x4C08DE22);
  LODWORD(STACK[0x6198]) = ((2 * v52) | 0xF431DA20) - v52;
  LODWORD(v52) = (v64 >> 1) & 0x24005200 ^ 0x74420280 ^ (v67 ^ 0x1C34A470) & v94;
  v95 = ((((2 * (_DWORD)v52) & 0x20401186) - (_DWORD)v52 + 1876948784) ^ 0x6B9DEFB2) << (v73 & 0x95 ^ 0x90) << (v73 & 0xA ^ 2);
  LODWORD(v52) = v65 & STACK[0x13A4] ^ 0xBF83C857;
  LODWORD(STACK[0x6158]) = (((v71 ^ 0x4B81A813) & v52 ^ v65 & 0x30804422 ^ 0xEFF9FFBD)
                          + ((v71 ^ 0x4B81A813) & v52 ^ v65 & 0x30804422 | 0x9EC6C0E6)
                          + (((v71 ^ 0x4B81A813) & v52 ^ v65 & 0x30804422) & 0x61012C19)
                          + 1) ^ 0x3C4200E6;
  v96 = (v65 & 0x734671A ^ 0x6004200) + (v65 & 0x5006518 ^ 0xC102B519) - ((v65 & 0x734671A ^ 0x6004200) & 0x5006518);
  LODWORD(STACK[0x62D0]) = v65 & 0x6423 ^ 0x82024847 ^ (v72 ^ 0xA1020407) & v52;
  LODWORD(v52) = (v96 & 0x7D0533F2 ^ 0xA8050287) + (v96 & 0x232CC08 ^ 0x20ACC09) - 2;
  v97 = v52 & 0xA33CAA6C ^ 0x1C8A68 ^ (v71 ^ 0x5A77D49C) & (v52 ^ 0xE341B5A3);
  LODWORD(v52) = v52 & 0x8A5F94EC ^ 0x21C14CC ^ (v52 ^ 0xE341B5A3) & (v72 ^ 0x291FFF0C);
  LODWORD(STACK[0x6150]) = (v52 - ((2 * v52) & 0x319B8882) - 1731345343) ^ 0x1890442D;
  LODWORD(STACK[0x62B8]) = ((((2 * v97) | 0x1A5A0D70) - v97 - 221054648) ^ 0xAE312CF1) << (~(_BYTE)v73 & 0x90);
  LODWORD(v52) = ((v64 >> 1) & 0x334AF54B ^ 0x142944B | 0x5E180325)
               - ((v64 >> 1) & 0x334AF54B ^ 0x142944B | 0xA1E7FCDA)
               - 1578631974;
  LODWORD(v52) = (v52 & 0x11382CE8 ^ 0x1A024C1) + (v52 & 0xEE47D317) - 1;
  LODWORD(v54) = v52 ^ 0x6E014306;
  LODWORD(v52) = v52 ^ 0x192D8879;
  v98 = ((v52 & (v69 ^ 0x27F889B0) ^ v54 & 0x27F88930) & 0xBD3FC334 ^ 0xBD0FC324)
      + (v52 & (v69 ^ 0x27F889B0) ^ v54 & 0x27F88930 ^ 0x300810)
      - ((v52 & (v69 ^ 0x27F889B0) ^ v54 & 0x27F88930 ^ 0x300810) & 0xBD3FC334);
  LODWORD(v52) = v52 & (v67 ^ 0xF2CF0F4A) ^ 0x19119120 ^ v54 & 0x1979F130;
  LODWORD(v54) = (v65 & 0xB3F64D7 ^ 0x90A4417)
               + (v65 & 0x11960C0 ^ 0x24D123E8)
               - ((v65 & 0xB3F64D7 ^ 0x90A4417) & 0x11960C0);
  v99 = v63 & 0x1D ^ 0xC;
  v100 = STACK[0x6920];
  v101 = ~LODWORD(STACK[0x6920]) & 2;
  LODWORD(v59) = ((((2 * (_DWORD)v52) | 0x7F27B570) - (_DWORD)v52 - 1066654392) ^ 0x37AA8AA8) << v99 << v101;
  LODWORD(STACK[0x61F0]) = v59;
  LODWORD(STACK[0x61E0]) = ((v98 ^ 0x9A274214) >> v74) ^ -((v98 ^ 0x9A274214) >> v74) ^ (v59
                                                                                       - (v59 ^ ((v98 ^ 0x9A274214) >> v74)));
  LODWORD(v52) = (v54 & 0x138F3451 ^ 0x42860409) + (v54 & 0x2C70CB86 ^ 0x24700B81) - 1;
  v102 = v52 & 0x140683C8 ^ 0x84028388 ^ (v67 ^ 0x3FB07DB2) & (v52 ^ 0x547EE175);
  LODWORD(STACK[0x6130]) = ((v102 | 0xF92E3EB1) - (v102 | 0x6D1C14E) + 114409806) ^ 0x692A3C79;
  LODWORD(v52) = (v52 ^ 0x547EE175) & (v72 ^ 0x3F5A2922) ^ v52 & 0x1C1A42C2;
  LODWORD(STACK[0x6108]) = (v52 & 0xF5D02BA1 ^ 0xE5D029A1) + (v52 & 0xA2FD45E ^ 0x24043);
  LODWORD(v52) = ((((v64 >> 1) & 0x1624384E ^ 0x241008)
                 + ((v64 >> 1) & 0x6242800 ^ 0xC691AD81)
                 - (((v64 >> 1) & 0x1624384E ^ 0x241008) & 0x6242800)) ^ 0x17E16ADC)
               - 1;
  LODWORD(STACK[0x6028]) = v52 & 0xE768E04C ^ 0xE508A00C ^ (v52 ^ 0xFD1CBF8D) & (v69 ^ 0xE768E0CC);
  LODWORD(v52) = v52 & 0xA45E744C ^ 0x840E1404 ^ (v52 ^ 0xFD1CBF8D) & (v71 ^ 0x5D150ABD);
  LODWORD(STACK[0x62A8]) = (((v52 | 0x7CA786E2) - (v52 | 0x8358791D) - 2091353827) ^ LODWORD(STACK[0x13A8])) << (v73 & 0x9E ^ 0x92) << (v73 & 1);
  LODWORD(v52) = ((v64 >> 1) & 0x1601040 ^ 0x21AC0EC1) + ((v64 >> 1) & 0x4C016007) - 1;
  v103 = v52 ^ 0x4C014006;
  LODWORD(v52) = v52 ^ 0xFA0EBE0A;
  LODWORD(v54) = v52 & (v71 ^ 0x4B43A02E) ^ v103 & 0x50C7 ^ 0x1000D18C;
  LODWORD(STACK[0x6008]) = (v54 | 0x6F5B7E92) - (v54 | 0x90A4816D);
  LODWORD(STACK[0x5FE0]) = ((v52 & (v72 ^ 0x46C2B0C2) ^ v103 & 0x45005002) & 0xDFAC086D ^ 0x9EAC086D)
                         + (v52 & (v72 ^ 0x46C2B0C2) ^ v103 & 0x45005002 ^ 0x41028002)
                         - ((v52 & (v72 ^ 0x46C2B0C2) ^ v103 & 0x45005002 ^ 0x41028002) & 0xDFAC086D);
  LODWORD(v52) = (((2 * (v65 & 0x23C72374 ^ 0x23C60210)) | 0x8B5D15E8) - (v65 & 0x23C72374 ^ 0x23C60210) - 1169066740) ^ 0xAEBF86F0;
  LODWORD(v52) = (v52 | 0x8C2BAC21) - (v52 | 0x73D453DE) + 1943294942;
  v104 = (v67 ^ 0xCD99032D) & (v52 ^ 0x3B7E6D9) ^ v52 & 0x262FFD57;
  LODWORD(STACK[0x62C0]) = (((v104 & 0xEF268008 ^ 0xEF028008) + (v104 ^ 0x251507) - ((v104 ^ 0x251507) & 0xEF268008)) ^ 0xED24715E) << (v73 & 0x1C ^ 0x10);
  LODWORD(STACK[0x69F0]) = v64 >> 1;
  LODWORD(v52) = v52 & 0x14F56EEA ^ LODWORD(STACK[0x13AC]) ^ (v69 ^ 0x14F56E6A) & (v52 ^ 0x3B7E6D9);
  LODWORD(STACK[0x5FB8]) = ((2 * v52) & 0x66AC43E8) - v52;
  LODWORD(v52) = ((v64 >> 1) & 0x6A1334B1 ^ 0x53C34CCA | 0x7127EE3E)
               - ((v64 >> 1) & 0x6A1334B1 ^ 0x53C34CCA | 0x8ED811C1)
               - 1898442303;
  v105 = v52 & 0x72A4B053 ^ LODWORD(STACK[0x13B0]) ^ (v52 ^ 0x96C0DB06) & (v71 ^ 0x8BEFCEA2);
  LODWORD(STACK[0x5F88]) = v105 - ((2 * v105) & 0x5333E0E6);
  LODWORD(v52) = (v52 ^ 0x96C0DB06) & (v72 ^ 0x7163ACE8) ^ v52 & 0x5223C708;
  LODWORD(STACK[0x5F80]) = (v52 & 0x45568DD8 ^ 0x45548CD8) + (v52 ^ 0x224100) - ((v52 ^ 0x224100) & 0x45568DD8);
  LODWORD(v52) = ((-67589476
                 - (v65 & 0x126B9CBA ^ 0x10288800 | 0xFBF8B358)
                 + (v65 & 0x126B9CBA ^ 0x10288800 | 0x4074CA6)
                 + 2237) ^ 0x12004FE8)
               - 1;
  LODWORD(v54) = (v69 ^ 0xBA1EC9AC) & (v52 ^ 0x3299A2BA) ^ v52 & 0xBA1EC92C;
  LODWORD(STACK[0x5FD8]) = (v54 ^ 0xCDF77EF7) + 88485476 + ((2 * v54) | 0xF573A33A);
  v106 = STACK[0x69C0];
  LODWORD(v54) = (LODWORD(STACK[0x6A00]) ^ 0x78F37AFA) & STACK[0x69C0] ^ STACK[0x69D0] & 0xC1395FF0;
  LODWORD(STACK[0x62A0]) = (v52 & 0x32EBFE0E ^ 0x3289A20A ^ (v67 ^ 0xD95D0074) & (v52 ^ 0x3299A2BA)) << (~(_BYTE)v73 & 0x92);
  LODWORD(v52) = v106 ^ (v54 >> 1);
  v107 = v52 & 0xC62803A8 ^ 0x40000300 ^ (v67 ^ 0x2D9EFDD2) & (v52 ^ 0x40100350);
  LODWORD(v52) = v52 & 0x74F33BA5 ^ 0x44C10325 ^ (v69 ^ 0x74F33B25) & (v52 ^ 0x40100350);
  v108 = (v52 | 0xCEC51A49) - (v52 | 0x313AE5B6);
  LODWORD(STACK[0x66E0]) = LODWORD(STACK[0x6750]) ^ 0xAFAFAFAF;
  LODWORD(STACK[0x66D8]) = STACK[0x6AB0] - 3848196;
  LODWORD(STACK[0x6088]) = LODWORD(STACK[0x6AA0]) - 1321314061;
  LODWORD(STACK[0x60F8]) = LODWORD(STACK[0x6A70]) + 1403685475;
  v109 = (LODWORD(STACK[0x6A60]) + 4009) ^ 0xC1F4228D;
  LODWORD(v59) = v100 & 0x12 ^ 2;
  LODWORD(STACK[0x68A0]) = v59;
  LODWORD(STACK[0x5FD0]) = v109 << v59;
  v110 = LODWORD(STACK[0x6980]) ^ 0x408090C0;
  LODWORD(STACK[0x6020]) = LODWORD(STACK[0x6960]) - 1601376567;
  v111 = v63 & 0x15 ^ 4;
  LODWORD(STACK[0x6018]) = LODWORD(STACK[0x68C0]) << (~(_BYTE)v63 & 0xA) << v111;
  v112 = (LODWORD(STACK[0x68B0]) - 64071579) ^ 0x10DFA1A8;
  LODWORD(STACK[0x6000]) = v76 ^ 0x1A20904B;
  LODWORD(STACK[0x6010]) = (v76 ^ 0x8C3DA3AE) - 1847281014;
  LODWORD(STACK[0x5FF0]) = (v76 ^ 0x961D33E5) - 1950078269;
  LODWORD(STACK[0x5FF8]) = (v112 >> v74) - 500767016;
  v113 = (LODWORD(STACK[0x6890]) - 1754499997) ^ 0xEDB6FAF7;
  LODWORD(STACK[0x6590]) = v100 & 0x10;
  LODWORD(STACK[0x6050]) = v113 << (v100 & 0x10);
  LODWORD(STACK[0x6040]) = ((LODWORD(STACK[0x6730]) - 362211264) ^ 0x151AA6C0u) >> v87;
  v114 = LODWORD(STACK[0x6588]) >> v74;
  LODWORD(STACK[0x6A10]) = v65;
  LODWORD(STACK[0x6048]) = v65 & 0x50000039;
  LODWORD(STACK[0x68B0]) = v100 & 0x11;
  LODWORD(v52) = ~v63 & 0xE;
  LODWORD(STACK[0x6058]) = LODWORD(STACK[0x6570]) << (v100 & 0x11) << v52;
  LODWORD(STACK[0x6038]) = ~v114;
  LODWORD(STACK[0x6030]) = v114 & 0x7B1963CF;
  LODWORD(STACK[0x6070]) = v73 & 0xF82283;
  v115 = ((LODWORD(STACK[0x6568]) - 1159671437) ^ 0xF8A8C09F) >> v87;
  LODWORD(STACK[0x6068]) = ~v115;
  LODWORD(STACK[0x6060]) = v115 & 0x5F646E65;
  v116 = LODWORD(STACK[0x64C0]) ^ 0x37D41F8B;
  LODWORD(STACK[0x6078]) = v58 & 0x355C0141;
  LODWORD(STACK[0x6080]) = v116 << v101;
  v117 = (LODWORD(STACK[0x64B8]) - 1) ^ 0x30755678;
  LODWORD(STACK[0x5FE8]) = (v48 ^ 0xE2C8405F) - 191593258;
  LODWORD(STACK[0x60C8]) = v48 ^ 0xD7FE0466;
  LODWORD(STACK[0x5FC8]) = (v48 ^ 0x35364439) + 594182324;
  LODWORD(STACK[0x60B0]) = (v117 >> v87) - 375178379;
  LODWORD(STACK[0x6588]) = LODWORD(STACK[0x64B0]) ^ 0x511D0001;
  LODWORD(STACK[0x60F0]) = LODWORD(STACK[0x64A8]) + 395418439;
  LODWORD(v58) = v63 & 0x17 ^ 6;
  LODWORD(STACK[0x60E8]) = LODWORD(STACK[0x6498]) << v58;
  LODWORD(v48) = LODWORD(STACK[0x6490]) >> v74;
  v118 = STACK[0x6488];
  LODWORD(STACK[0x64A8]) = (LODWORD(STACK[0x6488]) ^ 0x8CCCA8F6) - 8072101;
  LODWORD(STACK[0x6128]) = v118 ^ 0x31537D02;
  LODWORD(STACK[0x6498]) = (v118 ^ 0xBD9FD5F4) - 824727207;
  LODWORD(STACK[0x6120]) = v48 - 1934130349;
  LODWORD(v48) = (LODWORD(STACK[0x6480]) + 1693041053) ^ 0x9B5E5650;
  LODWORD(STACK[0x6730]) = v52;
  LODWORD(STACK[0x6118]) = (_DWORD)v48 << v52;
  LODWORD(STACK[0x6110]) = (LODWORD(STACK[0x6298]) + 1040903587) ^ 0x1C00E583;
  LODWORD(v48) = LODWORD(STACK[0x6290]) >> v74;
  LODWORD(STACK[0x6148]) = v73 & 0xA04C0006;
  LODWORD(STACK[0x5FC0]) = (2 * v48) & 0x6C938B40;
  LODWORD(STACK[0x5FB0]) = v48 - 1236679264;
  v119 = ~v63 & 8;
  LODWORD(STACK[0x6140]) = (LODWORD(STACK[0x6288]) ^ 0xA3AA78F3) << v119;
  LODWORD(STACK[0x6138]) = ((LODWORD(STACK[0x6280]) - 1) ^ 0xBB566A3F) >> v87;
  LODWORD(v48) = (LODWORD(STACK[0x6278]) - 1759055542) ^ 0xDC134FB4;
  LODWORD(STACK[0x616C]) = LODWORD(STACK[0x6270]) - 1062454232;
  LODWORD(v52) = v63 & 7 ^ 6;
  LODWORD(STACK[0x6160]) = (_DWORD)v48 << (v63 & 0x18 ^ 8) << v52;
  LODWORD(v48) = LODWORD(STACK[0x6268]) ^ 0xB5CE3C75;
  LODWORD(STACK[0x6178]) = (LODWORD(STACK[0x6260]) - 1) ^ 0xEB3C98C6;
  LODWORD(STACK[0x68C0]) = v58;
  LODWORD(STACK[0x6170]) = (_DWORD)v48 << v58;
  LODWORD(v48) = LODWORD(STACK[0x6258]) >> v87;
  LODWORD(STACK[0x5FA8]) = (2 * v48) & 0xCE944928;
  LODWORD(STACK[0x5FA0]) = v48 - 414571372;
  LODWORD(v58) = LODWORD(STACK[0x6250]) ^ 0x18100261;
  LODWORD(STACK[0x5F98]) = STACK[0x6250] & 0xABB96A1A ^ 0xA3A9681A;
  LODWORD(STACK[0x61A8]) = ((LODWORD(STACK[0x6248]) + 241936387) ^ 0x163A6003) << (v63 & 0x1B ^ 0xA);
  v120 = (LODWORD(STACK[0x6240]) - 599960991) ^ 0xFC3F4261;
  v121 = (LODWORD(STACK[0x6238]) - 78102728) ^ 0x1A39492;
  LODWORD(v48) = STACK[0x6230];
  LODWORD(STACK[0x6248]) = (LODWORD(STACK[0x6230]) ^ 0x32727DDA) + 368394296;
  LODWORD(STACK[0x6190]) = v48 ^ 0x401286DD;
  LODWORD(STACK[0x6238]) = (v48 ^ 0x7260FB07) + 1441253099;
  LODWORD(STACK[0x61A0]) = LODWORD(STACK[0x6220]) - 1055020751;
  LODWORD(STACK[0x6188]) = (v120 >> v87) - 663174638;
  LODWORD(STACK[0x69D0]) = v63 & 0x1B ^ 0xA;
  LODWORD(STACK[0x6180]) = v121 << (v63 & 0x1B ^ 0xA);
  LODWORD(v59) = (LODWORD(STACK[0x6218]) + 1167463125) ^ 0xACD9EF63;
  LODWORD(v48) = ((LODWORD(STACK[0x6210]) + 1868508117) ^ 0x1380C13Bu) >> v74;
  LODWORD(STACK[0x61DC]) = v73 & 0xA0D8220F;
  LODWORD(STACK[0x5F78]) = (2 * v48) & 0x98F4917A;
  LODWORD(STACK[0x5F70]) = v48 - 864401219;
  LODWORD(STACK[0x6970]) = v99;
  LODWORD(STACK[0x6870]) = v101;
  LODWORD(STACK[0x61D0]) = (_DWORD)v59 << v99 << v101;
  v122 = STACK[0x6208];
  LODWORD(STACK[0x5F68]) = (LODWORD(STACK[0x6208]) ^ 0xEDC3BDC2) - 749932020;
  LODWORD(STACK[0x61C8]) = v122 ^ 0x42CE8FBE;
  LODWORD(STACK[0x5F60]) = (v122 ^ 0xAF0D327C) - 1853719114;
  LODWORD(STACK[0x61C0]) = (LODWORD(STACK[0x6200]) >> v87) - 1049579466;
  LODWORD(v59) = (LODWORD(STACK[0x61F8]) + 1960037618) ^ 0x8D0C12B9;
  LODWORD(v48) = LODWORD(STACK[0x61E8]) ^ 0xE9B4DDAA;
  LODWORD(STACK[0x6200]) = LODWORD(STACK[0x61BC]) - 1;
  v123 = v63 & 0x19 ^ 8;
  LODWORD(STACK[0x6740]) = v123;
  LODWORD(STACK[0x61E8]) = (_DWORD)v48 << v123;
  LODWORD(STACK[0x6570]) = v111;
  LODWORD(STACK[0x6568]) = ~v63 & 0xA;
  LODWORD(STACK[0x61F8]) = (_DWORD)v59 << v111 << (~(_BYTE)v63 & 0xA);
  LODWORD(v59) = (LODWORD(STACK[0x61B0]) + 131622668) ^ 0xD027E99B;
  v124 = STACK[0x6228];
  LODWORD(STACK[0x61BC]) = (LODWORD(STACK[0x6228]) ^ 0x339D9A18) + 1995558878;
  LODWORD(STACK[0x6220]) = v124 ^ 0xA26C60AD;
  LODWORD(STACK[0x61B0]) = (v124 ^ 0x91F1FAB5) - 727863439;
  LODWORD(STACK[0x6210]) = (v59 >> v87) - 1164727750;
  LODWORD(v59) = ((LODWORD(STACK[0x6198]) + 99029744) ^ 0xB9183194) >> v87;
  LODWORD(STACK[0x5F50]) = (v95 ^ 0x20B86CA2) - 698262549;
  LODWORD(STACK[0x6228]) = v95 ^ 0xB3B89273;
  LODWORD(STACK[0x5F48]) = (v95 ^ 0x9300FED1) + 1708771738;
  LODWORD(STACK[0x6218]) = v59 + 153536695;
  LODWORD(STACK[0x6230]) = LODWORD(STACK[0x6158]) << (v63 & 0x18 ^ 8);
  LODWORD(STACK[0x6240]) = v73 & 0xB050800F;
  LODWORD(v59) = LODWORD(STACK[0x6150]) >> v87;
  LODWORD(STACK[0x5F28]) = (2 * v59) & 0x8EE97152;
  LODWORD(STACK[0x5F20]) = v59 - 948651863;
  LODWORD(STACK[0x6258]) = LODWORD(STACK[0x6108]) - 1;
  LODWORD(v59) = v63 & 5 ^ 4;
  LODWORD(STACK[0x6890]) = v59;
  LODWORD(STACK[0x6250]) = LODWORD(STACK[0x6130]) << v59;
  LODWORD(v59) = LODWORD(STACK[0x6028]) >> v74;
  LODWORD(STACK[0x5F18]) = (2 * v59) & 0x19EDBF62;
  LODWORD(STACK[0x5F10]) = v59 - 1929977935;
  LODWORD(v59) = (LODWORD(STACK[0x6008]) - 1868267155) ^ 0xED5B7F12;
  LODWORD(STACK[0x6288]) = LODWORD(STACK[0x5FE0]) ^ 0x9A2C586F;
  LODWORD(STACK[0x69C0]) = v52;
  LODWORD(STACK[0x6960]) = v63 & 0x18 ^ 8;
  LODWORD(STACK[0x6280]) = (_DWORD)v59 << v52 << (v63 & 0x18 ^ 8);
  LODWORD(STACK[0x6278]) = v73 & 0xB29283;
  LODWORD(v59) = ((LODWORD(STACK[0x5FB8]) + 1286200843) ^ 0x4848FE89u) >> v74;
  LODWORD(v48) = (LODWORD(STACK[0x5F88]) + 697954419) ^ 0x591D5033;
  v125 = ~v63 & 4;
  LODWORD(STACK[0x6980]) = v125;
  LODWORD(STACK[0x6270]) = (_DWORD)v48 << v125;
  LODWORD(STACK[0x5F40]) = (2 * v59) & 0x277CA9BA;
  LODWORD(STACK[0x5F38]) = v59 + 331240669;
  LODWORD(STACK[0x6268]) = LODWORD(STACK[0x5F80]) ^ 0x57740FD8;
  LODWORD(v59) = (LODWORD(STACK[0x5FD8]) ^ 0xFAA9D0BD) >> v74;
  LODWORD(STACK[0x5F30]) = (2 * v59) & 0x2785E8F2;
  LODWORD(STACK[0x5F80]) = v59 - 1815939975;
  LODWORD(STACK[0x6750]) = v119;
  LODWORD(STACK[0x64B8]) = v107 << v119;
  LODWORD(STACK[0x64B0]) = ((v108 + 825943478) ^ 0xCA141A6C) >> v87;
  LODWORD(STACK[0x6A70]) = v73 & 7 ^ 2;
  LODWORD(STACK[0x6A60]) = STACK[0x69E0] & 0x18 ^ 0x10;
  LODWORD(STACK[0x5F88]) = v63 & 0xD;
  LODWORD(STACK[0x6008]) = v110;
  LODWORD(STACK[0x5FE0]) = v110 | 0x4E2BA6E8;
  LODWORD(STACK[0x5F58]) = v63 & 0xF;
  LODWORD(STACK[0x6130]) = LODWORD(STACK[0x65D8]) | 0x4BDA1E08;
  LODWORD(STACK[0x6488]) = v58;
  LODWORD(STACK[0x6198]) = v58 & 0xABB96A1A;
  LODWORD(STACK[0x5FB8]) = v63 & 6;
  LODWORD(STACK[0x64C0]) = v63 & 0x1A;
  v126 = LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x66E0]);
  LODWORD(STACK[0x6260]) = v73 & 0x3856000D;
  LODWORD(STACK[0x6490]) = LODWORD(STACK[0x64F8]) ^ 0x869E1083;
  LODWORD(STACK[0x6298]) = v126;
  LODWORD(STACK[0x6290]) = v126 ^ 0xB1351885;
  v127 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * STACK[0x6AC0]);
  LODWORD(STACK[0x6AB0]) = LODWORD(STACK[0x69A0]) ^ 0xC2CDB7A8;
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6618]);
  LODWORD(STACK[0x6208]) = (LODWORD(STACK[0x66D8]) >> 2) & 0xFF47BD7;
  LODWORD(STACK[0x6158]) = (2 * LODWORD(STACK[0x6588])) & 0xEBE7EC7C;
  return v127();
}

uint64_t sub_100BD8990@<X0>(uint64_t a1@<X2>, int a2@<W4>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  char v5;
  int v6;
  char v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  char v17;
  int v18;
  int v19;
  char v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  uint64_t v29;

  v21 = STACK[0x6AC0];
  HIDWORD(v23) = *((_DWORD *)*(&off_1015B46D0 + (int)v21 + v19) + (((_DWORD)v21 - 6949) ^ v11) - 3);
  LODWORD(v23) = HIDWORD(v23);
  v22 = v23 >> 19;
  v24 = (((v11 & v20 ^ 4) - (v11 & v20 & 0x10) + (v11 & v20 & 0x10 ^ 0x10)) >> 1) ^ v11;
  v25 = ((((v22 ^ 0x6482798C) & STACK[0x6AB0] ^ a2) & v8 ^ (v14 + 3324))
       + ((v22 ^ 0x6482798C) & STACK[0x6AB0] ^ a2 ^ 0x477029CE)
       - (((v22 ^ 0x6482798C) & STACK[0x6AB0] ^ a2 ^ 0x477029CE) & v8)) >> 1;
  v26 = ((v25 ^ 0x539FD2E2) - 2 * ((v25 ^ 0x539FD2E2) & 0x639913D6 ^ v25 & 4) - 476507182) ^ v22;
  v27 = v26 & 0x1D87377F ^ 0x11851578 ^ (v26 ^ v16) & a3;
  v28 = (((((2 * v27) | 0xF1EA1AF6) - v27 - 2029325691) ^ 0x6DF02D63) << LODWORD(STACK[0x6A60]) << LODWORD(STACK[0x6A70]))
      + ((((((v26 ^ v16) & a5 ^ v26 & 0xCC7A0D6B) & v18 ^ 0xD1101742)
         + ((v26 ^ v16) & a5 ^ v26 & 0xCC7A0D6B ^ 0xC400009)
         - (((v26 ^ v16) & a5 ^ v26 & 0xCC7A0D6B ^ 0xC400009) & v18)) ^ 0x5D101A2B) >> LODWORD(STACK[0x6A80]));
  v29 = 4
      * (((v24 ^ 0xA) << v7 << v5) ^ LODWORD(STACK[0x6AA0]) ^ (((v24 ^ 0xA) & v17 ^ v24 & 5) >> STACK[0x6A90]));
  *(_DWORD *)(STACK[0xD618] + v29) = v9 ^ v10 ^ a4 ^ (v28 - (v15 & (2 * v28)) - 2058048663);
  *(_DWORD *)(v12 + v29) = v13 ^ v6 ^ 0x96EFD43C ^ *(_DWORD *)(a1 + 4 * (v11 ^ 0x48));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((16178 * (v11 == 255)) ^ v21)))();
}

uint64_t sub_100BD8BF0()
{
  int v0;
  char v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  char v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  char v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unint64_t v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  char v140;
  unsigned int v141;
  int v142;
  char v143;
  char v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  char v209;
  char v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  int v257;
  unsigned int v258;
  int v259;
  char v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  char v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  char v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  int v354;
  int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  int v368;
  unsigned int v369;
  int v370;
  int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  unsigned int v375;
  unint64_t v376;
  unint64_t v377;
  unsigned int v378;
  unint64_t v379;
  unsigned int v380;
  int v381;
  uint64_t v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  unsigned int v405;
  int v406;
  int v407;
  unsigned int v408;
  int v409;
  int v410;
  unsigned int v411;
  int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  char v416;
  unsigned int v417;
  unsigned int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  int v425;
  int v426;
  unsigned int v427;
  int v428;
  int v429;
  int v430;
  unsigned int v431;
  int v432;
  int v433;
  unsigned int v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  int v440;
  int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unint64_t v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  uint64_t v464;
  unsigned int v465;
  unsigned int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  BOOL v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  uint64_t v551;
  int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  int v626;
  int v627;
  int v628;
  int v629;
  int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  int v640;
  int v641;
  int v642;
  int v643;
  BOOL v644;
  int v645;
  int v646;
  int v647;
  int v648;
  BOOL v649;
  int v650;
  int v651;
  int v652;
  int v653;
  unsigned int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  unint64_t v659;
  int v660;
  int v661;
  int v662;
  int v663;
  int v664;
  unsigned int v665;
  char v666;
  unsigned int v667;
  unsigned int v668;
  int v669;
  unsigned int v670;
  int v671;
  unsigned int v672;
  unsigned int v673;
  int v674;
  char v675;
  unsigned int v676;
  unint64_t v677;
  int *v678;
  int v679;
  int v680;
  uint64_t v681;
  unint64_t v682;
  uint64_t v683;
  _DWORD *v684;
  uint64_t v685;
  _DWORD *v686;
  uint64_t v687;
  _DWORD *v688;
  unint64_t v689;
  _DWORD *v690;
  uint64_t v691;
  unint64_t v692;
  uint64_t v693;
  unint64_t v694;
  int v695;
  unint64_t v696;
  int *v697;
  int v698;
  _DWORD *v699;
  uint64_t v700;
  _DWORD *v701;
  uint64_t v702;
  _DWORD *v703;
  _DWORD *v704;
  int *v705;
  int v706;
  _DWORD *v707;
  uint64_t v708;
  _DWORD *v709;
  int v710;
  unsigned int v711;
  int v712;
  unsigned int v713;
  int v714;
  unsigned int v715;
  int v716;
  int v717;
  int v718;
  int v719;
  unsigned int v720;
  int v721;
  unsigned int v722;
  int v723;
  unsigned int v724;
  int v725;
  int v726;
  unint64_t v727;
  int v728;
  _DWORD *v729;
  unint64_t v730;
  uint64_t v731;
  unint64_t v732;
  uint64_t v733;
  unint64_t v734;
  uint64_t v735;
  unint64_t v736;
  uint64_t v737;
  int *v738;
  uint64_t v739;
  int *v740;
  uint64_t v741;
  unint64_t v742;
  uint64_t v743;
  unint64_t v744;
  uint64_t v745;
  int *v746;
  uint64_t v747;
  unint64_t v748;
  uint64_t v749;
  _DWORD *v750;
  uint64_t v751;
  unint64_t v752;
  int v753;
  int v754;
  int v755;
  int v756;
  int v757;
  unint64_t v758;
  int *v759;
  int v760;
  uint64_t v761;
  int v762;
  int v763;
  int v764;
  int v765;
  int v766;
  int v767;
  unint64_t v768;
  unint64_t v769;
  unint64_t v770;
  _DWORD *v771;
  _DWORD *v772;
  uint64_t v773;
  unint64_t v774;
  _DWORD *v775;
  unint64_t v776;
  _DWORD *v777;
  unint64_t v778;
  _DWORD *v779;
  int v780;
  unint64_t v781;
  _DWORD *v782;
  unint64_t v783;
  unint64_t v784;
  uint64_t v785;
  int v786;
  unint64_t v787;
  unsigned int v788;
  int v789;
  int v790;
  unint64_t v791;
  _DWORD *v792;
  uint64_t v793;
  int v794;
  int v795;
  _DWORD *v796;
  int v797;
  uint64_t v798;
  _DWORD *v799;
  uint64_t v800;
  _DWORD *v801;
  unint64_t v802;
  unint64_t v803;
  unint64_t v804;
  uint64_t v805;
  unint64_t v806;
  uint64_t v807;
  _DWORD *v808;
  uint64_t v809;
  unint64_t v810;
  uint64_t v811;
  _DWORD *v812;
  uint64_t v813;
  _DWORD *v814;
  int v815;
  int v816;
  unsigned int v817;
  int v818;
  int v819;
  char v820;
  int v821;
  _DWORD *v822;
  _DWORD *v823;
  uint64_t v824;
  _DWORD *v825;
  uint64_t v826;
  _DWORD *v827;
  unint64_t v828;
  uint64_t v829;
  unint64_t v830;
  uint64_t v831;
  _DWORD *v832;
  uint64_t v833;
  unint64_t v834;
  unint64_t v835;
  uint64_t v836;
  unint64_t v837;
  uint64_t v838;
  unint64_t v839;
  uint64_t v840;
  _DWORD *v841;
  uint64_t v842;
  _DWORD *v843;
  uint64_t v844;
  unint64_t v845;
  _DWORD *v846;
  unint64_t v847;
  uint64_t v848;
  char *v849;
  int v850;
  int v851;
  int v852;
  _DWORD *v853;
  uint64_t v854;
  unint64_t v855;
  uint64_t v856;
  unint64_t v857;
  unint64_t v858;
  unint64_t v859;
  _DWORD *v860;
  uint64_t v861;
  unint64_t v862;
  uint64_t v863;
  unint64_t v864;
  uint64_t v865;
  unint64_t v866;
  uint64_t v867;
  _DWORD *v868;
  uint64_t v869;
  _DWORD *v870;
  uint64_t v871;
  _DWORD *v872;
  uint64_t v873;
  _DWORD *v874;
  uint64_t v875;
  unint64_t v876;
  unint64_t v877;
  uint64_t v878;
  unint64_t v879;
  uint64_t v880;
  _DWORD *v881;
  unint64_t v882;
  uint64_t v883;
  _DWORD *v884;
  unint64_t v885;
  int v886;
  int v887;
  int v888;
  uint64_t v889;
  uint64_t v890;
  unint64_t v891;
  uint64_t v892;
  _DWORD *v893;
  unint64_t v894;
  _DWORD *v895;
  uint64_t v896;
  _DWORD *v897;
  uint64_t v898;
  _DWORD *v899;
  unint64_t v900;
  _DWORD *v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  _DWORD *v906;
  uint64_t v907;
  _DWORD *v908;
  int v909;
  int v910;
  unsigned int v911;
  int v912;
  unint64_t v913;
  unsigned int v914;
  unsigned int v915;
  int v916;
  _DWORD *v917;
  int *v918;
  int v919;
  int *v920;
  int v921;
  unsigned int v922;
  uint64_t v923;
  _DWORD *v924;
  uint64_t v925;
  int *v926;
  unint64_t v927;
  int v928;
  uint64_t v929;
  _DWORD *v930;
  uint64_t v931;
  int *v932;
  _DWORD *v933;
  int v934;
  uint64_t v935;
  int *v936;
  int *v937;
  uint64_t v938;
  int *v939;
  int *v940;
  uint64_t v941;
  int *v942;
  uint64_t v943;
  unint64_t v944;
  unsigned int v945;
  unsigned int v946;
  unsigned int v947;
  unsigned int v948;
  unsigned int v949;
  unsigned int v950;
  unsigned int v951;
  unsigned int v952;
  unint64_t v953;
  int v954;
  unsigned int v955;
  int v956;
  int v957;
  int v958;
  int v959;
  int v960;
  int v961;
  unsigned int v962;
  unsigned int v963;
  int v964;
  unsigned int v965;
  int v966;
  unsigned int v967;
  int v968;
  unsigned int v969;
  unsigned int v970;
  unint64_t v971;
  int v972;
  int *v973;
  int v974;
  _DWORD *v975;
  _DWORD *v976;
  unint64_t v977;
  int v978;
  _DWORD *v979;
  int *v980;
  int v981;
  uint64_t v982;
  unint64_t v983;
  uint64_t v984;
  _DWORD *v985;
  uint64_t v986;
  _DWORD *v987;
  uint64_t v988;
  _DWORD *v989;
  uint64_t v990;
  unint64_t v991;
  uint64_t v992;
  _DWORD *v993;
  uint64_t v994;
  _DWORD *v995;
  unint64_t v996;
  uint64_t v997;
  int v998;
  unsigned int v999;
  int v1000;
  int v1001;
  int v1002;
  int v1003;
  unint64_t v1004;
  unsigned int v1005;
  int v1006;
  _DWORD *v1007;
  _DWORD *v1008;
  unint64_t v1009;
  unint64_t v1010;
  _DWORD *v1011;
  unint64_t v1012;
  int v1013;
  _DWORD *v1014;
  uint64_t v1015;
  unint64_t v1016;
  uint64_t v1017;
  _DWORD *v1018;
  uint64_t v1019;
  unint64_t v1020;
  unint64_t v1021;
  _DWORD *v1022;
  uint64_t v1023;
  _DWORD *v1024;
  uint64_t v1025;
  unint64_t v1026;
  uint64_t v1027;
  unint64_t v1028;
  unint64_t v1029;
  unint64_t v1030;
  int v1031;
  int v1032;
  unsigned int v1033;
  unsigned int v1034;
  int v1035;
  unsigned int v1036;
  unsigned int v1037;
  unint64_t v1038;
  _DWORD *v1039;
  _DWORD *v1040;
  uint64_t v1041;
  unint64_t v1042;
  uint64_t v1043;
  unint64_t v1044;
  uint64_t v1045;
  _DWORD *v1046;
  uint64_t v1047;
  unint64_t v1048;
  int v1049;
  unint64_t v1050;
  int v1051;
  uint64_t v1052;
  _DWORD *v1053;
  uint64_t v1054;
  unint64_t v1055;
  unint64_t v1056;
  int *v1057;
  int v1058;
  uint64_t v1059;
  _DWORD *v1060;
  uint64_t v1061;
  _DWORD *v1062;
  uint64_t v1063;
  unint64_t v1064;
  uint64_t v1065;
  _DWORD *v1066;
  uint64_t v1067;
  unint64_t v1068;
  unint64_t v1069;
  unsigned int v1070;
  char v1071;
  _DWORD *v1072;
  _DWORD *v1073;
  unint64_t v1074;
  unint64_t v1075;
  _DWORD *v1076;
  _DWORD *v1077;
  _DWORD *v1078;
  _DWORD *v1079;
  unint64_t v1080;
  _DWORD *v1081;
  uint64_t v1082;
  _DWORD *v1083;
  uint64_t v1084;
  _DWORD *v1085;
  _DWORD *v1086;
  _DWORD *v1087;
  unint64_t v1088;
  uint64_t v1089;
  _DWORD *v1090;
  uint64_t v1091;
  _DWORD *v1092;
  unsigned int v1093;
  char v1094;
  uint64_t v1095;
  unint64_t v1096;
  uint64_t v1097;
  unint64_t v1098;
  unint64_t v1099;
  _DWORD *v1100;
  uint64_t v1101;
  unint64_t v1102;
  uint64_t v1103;
  _DWORD *v1104;
  uint64_t v1105;
  _DWORD *v1106;
  uint64_t v1107;
  _DWORD *v1108;
  uint64_t v1109;
  _DWORD *v1110;
  uint64_t v1111;
  unint64_t v1112;
  uint64_t v1113;
  _DWORD *v1114;
  _DWORD *v1115;
  _DWORD *v1116;
  uint64_t v1117;
  _DWORD *v1118;
  uint64_t v1119;
  _DWORD *v1120;
  uint64_t v1121;
  _DWORD *v1122;
  unint64_t v1123;
  _DWORD *v1124;
  int v1125;
  int v1126;
  int v1127;
  int v1128;
  _DWORD *v1129;
  _DWORD *v1130;
  _DWORD *v1131;
  _DWORD *v1132;
  _DWORD *v1133;
  _DWORD *v1134;
  unint64_t v1135;
  int *v1136;
  int v1137;
  _DWORD *v1138;
  uint64_t v1139;
  unint64_t v1140;
  uint64_t v1141;
  int *v1142;
  uint64_t v1143;
  unint64_t v1144;
  int v1145;
  unint64_t v1146;
  _DWORD *v1147;
  _DWORD *v1148;
  _DWORD *v1149;
  uint64_t v1150;
  int v1151;
  int v1152;
  int v1153;
  int v1154;
  int v1155;
  int v1156;
  int v1157;
  int v1158;
  int v1159;
  int v1160;
  unsigned int v1161;
  int v1162;
  int v1163;
  int v1164;
  int v1165;
  int v1166;
  int v1167;
  int v1168;
  int v1169;
  unsigned int v1170;
  int v1171;
  int v1172;
  unsigned int v1173;
  int v1174;
  int v1175;
  int v1176;
  unsigned int v1177;
  int v1178;
  int v1179;
  int v1180;
  int v1181;
  int v1182;
  int v1183;
  int v1184;
  unsigned int v1185;
  unsigned int v1186;
  int v1187;
  int v1188;
  unsigned int v1189;
  unsigned int v1190;
  unsigned int v1191;
  unsigned int v1192;
  int v1193;
  int v1194;
  unsigned int v1195;
  int v1196;
  unsigned int v1197;
  unsigned int v1198;
  unsigned int v1199;
  int v1200;
  unsigned int v1201;
  unsigned int v1202;
  int v1203;
  int v1204;
  int v1205;
  int v1206;
  unsigned int v1207;
  uint64_t v1208;
  unint64_t v1209;
  unsigned int v1210;
  unsigned int v1211;
  int v1212;
  unsigned int v1213;
  char v1214;
  int v1215;
  unsigned int v1216;
  unsigned int v1217;
  unsigned int v1218;
  unsigned int v1219;
  unsigned int v1220;
  uint64_t v1221;
  unint64_t v1222;
  uint64_t v1223;
  _DWORD *v1224;
  uint64_t v1225;
  _DWORD *v1226;
  _DWORD *v1227;
  unint64_t v1228;
  int v1229;
  _DWORD *v1230;
  _DWORD *v1231;
  _DWORD *v1232;
  uint64_t v1233;
  _DWORD *v1234;
  uint64_t v1235;
  unint64_t v1236;
  unint64_t v1237;
  int *v1238;
  int v1239;
  _DWORD *v1240;
  uint64_t v1241;
  uint64_t v1242;
  int *v1243;
  uint64_t v1244;
  int *v1245;
  uint64_t v1246;
  int *v1247;
  int v1248;
  unsigned int v1249;
  uint64_t v1250;
  int *v1251;
  uint64_t v1252;
  unint64_t v1253;
  int v1254;
  unint64_t v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;
  _DWORD *v1259;
  uint64_t v1260;
  unint64_t v1261;
  uint64_t v1262;
  _DWORD *v1263;
  uint64_t v1264;
  _DWORD *v1265;
  uint64_t v1266;
  int *v1267;
  uint64_t v1268;
  int *v1269;
  uint64_t v1270;
  int *v1271;
  uint64_t v1272;
  int *v1273;
  uint64_t v1274;
  int *v1275;
  uint64_t v1276;
  unint64_t v1277;
  uint64_t v1278;
  _DWORD *v1279;
  uint64_t v1280;
  _DWORD *v1281;
  int v1282;
  _DWORD *v1283;
  uint64_t v1284;
  uint64_t v1285;
  unint64_t v1286;
  uint64_t v1287;
  _DWORD *v1288;
  uint64_t v1289;
  unint64_t v1290;
  uint64_t v1291;
  _DWORD *v1292;
  uint64_t v1293;
  unint64_t v1294;
  uint64_t v1295;
  _DWORD *v1296;
  uint64_t v1297;
  _DWORD *v1298;
  uint64_t v1299;
  _DWORD *v1300;
  uint64_t v1301;
  unint64_t v1302;
  unint64_t v1303;
  _DWORD *v1304;
  uint64_t v1305;
  uint64_t v1306;
  _DWORD *v1307;
  uint64_t v1308;
  unint64_t v1309;
  uint64_t v1310;
  _DWORD *v1311;
  uint64_t v1312;
  _DWORD *v1313;
  uint64_t v1314;
  _DWORD *v1315;
  _DWORD *v1316;
  uint64_t v1317;
  uint64_t v1318;
  _DWORD *v1319;
  uint64_t v1320;
  _DWORD *v1321;
  uint64_t v1322;
  _DWORD *v1323;
  uint64_t v1324;
  unint64_t v1325;
  uint64_t v1326;
  _DWORD *v1327;
  uint64_t v1328;
  _DWORD *v1329;
  uint64_t v1330;
  _DWORD *v1331;
  uint64_t v1332;
  unint64_t v1333;
  unint64_t v1334;
  _DWORD *v1335;
  uint64_t v1336;
  _DWORD *v1337;
  uint64_t v1338;
  _DWORD *v1339;
  _DWORD *v1340;
  _DWORD *v1341;
  _DWORD *v1342;
  uint64_t v1343;
  uint64_t v1344;
  uint64_t v1345;
  unint64_t v1346;
  uint64_t v1347;
  _DWORD *v1348;
  int v1349;
  uint64_t v1350;
  _DWORD *v1351;
  _DWORD *v1352;
  unint64_t v1353;
  _DWORD *v1354;
  _DWORD *v1355;
  uint64_t v1356;
  _DWORD *v1357;
  uint64_t v1358;
  _DWORD *v1359;
  _DWORD *v1360;
  _DWORD *v1361;
  _DWORD *v1362;
  uint64_t v1363;
  _DWORD *v1364;
  uint64_t v1365;
  _DWORD *v1366;
  uint64_t v1367;
  unint64_t v1368;
  unint64_t v1369;
  _DWORD *v1370;
  uint64_t v1371;
  uint64_t v1372;
  unint64_t v1373;
  uint64_t v1374;
  unint64_t v1375;
  uint64_t v1376;
  _DWORD *v1377;
  int v1378;
  _DWORD *v1379;
  _DWORD *v1380;
  uint64_t v1381;
  _DWORD *v1382;
  uint64_t v1383;
  unint64_t v1384;
  uint64_t v1385;
  _DWORD *v1386;
  uint64_t v1387;
  _DWORD *v1388;
  uint64_t v1389;
  _DWORD *v1390;
  uint64_t v1391;
  unint64_t v1392;
  uint64_t v1393;
  _DWORD *v1394;
  uint64_t v1395;
  _DWORD *v1396;
  uint64_t v1397;
  _DWORD *v1398;
  _DWORD *v1399;
  uint64_t v1400;
  int v1401;
  uint64_t v1402;
  _DWORD *v1403;
  uint64_t v1404;
  _DWORD *v1405;
  uint64_t v1406;
  unint64_t v1407;
  uint64_t v1408;
  unint64_t v1409;
  unint64_t v1410;
  uint64_t v1411;
  _DWORD *v1412;
  uint64_t v1413;
  _DWORD *v1414;
  uint64_t v1415;
  unint64_t v1416;
  unint64_t v1417;
  _DWORD *v1418;
  _DWORD *v1419;
  uint64_t v1420;
  unint64_t v1421;
  uint64_t v1422;
  unint64_t v1423;
  unint64_t v1424;
  uint64_t v1425;
  uint64_t v1426;
  _DWORD *v1427;
  uint64_t v1428;
  _DWORD *v1429;
  uint64_t v1430;
  unint64_t v1431;
  uint64_t v1432;
  _DWORD *v1433;
  uint64_t v1434;
  _DWORD *v1435;
  _DWORD *v1436;
  uint64_t v1437;
  uint64_t v1438;
  int v1439;
  uint64_t v1440;
  uint64_t v1441;
  uint64_t v1442;
  unint64_t v1443;
  uint64_t v1444;
  unint64_t v1445;
  uint64_t v1446;
  _DWORD *v1447;
  uint64_t v1448;
  _DWORD *v1449;
  uint64_t v1450;
  _DWORD *v1451;
  uint64_t v1452;
  unint64_t v1453;
  uint64_t v1454;
  _DWORD *v1455;
  uint64_t v1456;
  _DWORD *v1457;
  uint64_t v1458;
  unint64_t v1459;
  uint64_t v1460;
  _DWORD *v1461;
  uint64_t v1462;
  _DWORD *v1463;
  uint64_t v1464;
  _DWORD *v1465;
  _DWORD *v1466;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  uint64_t v1470;
  _DWORD *v1471;
  uint64_t v1472;
  unint64_t v1473;
  uint64_t v1474;
  _DWORD *v1475;
  uint64_t v1476;
  _DWORD *v1477;
  uint64_t v1478;
  unint64_t v1479;
  uint64_t v1480;
  unint64_t v1481;
  uint64_t v1482;
  _DWORD *v1483;
  uint64_t v1484;
  _DWORD *v1485;
  uint64_t v1486;
  _DWORD *v1487;
  uint64_t v1488;
  unint64_t v1489;
  unint64_t v1490;
  uint64_t v1491;
  int v1492;
  unint64_t v1493;
  int v1494;
  unint64_t v1495;
  uint64_t v1496;
  _DWORD *v1497;
  uint64_t v1498;
  unint64_t v1499;
  unint64_t v1500;
  unint64_t v1501;
  uint64_t v1502;
  _BYTE *v1503;
  _BYTE *v1504;

  LODWORD(STACK[0x6480]) = LODWORD(STACK[0x6548]) - LODWORD(STACK[0x6550]);
  v3 = LODWORD(STACK[0x6538]) - LODWORD(STACK[0x6540]);
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x6500]) ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6088]) ^ LODWORD(STACK[0x6530]) ^ LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x6528]) ^ STACK[0x6510];
  v4 = v0 ^ LODWORD(STACK[0x60F8]);
  LODWORD(STACK[0x5FD8]) = LODWORD(STACK[0x6010]) ^ LODWORD(STACK[0x5FF0]);
  LODWORD(STACK[0x5FE8]) ^= LODWORD(STACK[0x5FC8]);
  LODWORD(STACK[0x6208]) = 0;
  LODWORD(STACK[0x5FF0]) = LODWORD(STACK[0x6588]) - LODWORD(STACK[0x6158]);
  LODWORD(STACK[0x6010]) = LODWORD(STACK[0x64A8]) ^ LODWORD(STACK[0x6498]);
  LODWORD(STACK[0x6028]) = LODWORD(STACK[0x5FB0]) - LODWORD(STACK[0x5FC0]);
  LODWORD(STACK[0x6088]) = LODWORD(STACK[0x5FA0]) - LODWORD(STACK[0x5FA8]);
  LODWORD(STACK[0x6108]) = LODWORD(STACK[0x5F98]) + LODWORD(STACK[0x6488]) - LODWORD(STACK[0x6198]);
  LODWORD(STACK[0x60F8]) = LODWORD(STACK[0x6248]) ^ LODWORD(STACK[0x6238]);
  LODWORD(STACK[0x6158]) = LODWORD(STACK[0x5F70]) - LODWORD(STACK[0x5F78]);
  LODWORD(STACK[0x6150]) = LODWORD(STACK[0x5F68]) ^ LODWORD(STACK[0x5F60]);
  LODWORD(STACK[0x6198]) = LODWORD(STACK[0x61BC]) ^ LODWORD(STACK[0x61B0]);
  LODWORD(STACK[0x61B0]) = LODWORD(STACK[0x5F50]) ^ LODWORD(STACK[0x5F48]);
  LODWORD(STACK[0x61BC]) = LODWORD(STACK[0x5F20]) - LODWORD(STACK[0x5F28]);
  LODWORD(STACK[0x61E0]) += LODWORD(STACK[0x61F0]);
  LODWORD(STACK[0x61F0]) = LODWORD(STACK[0x5F10]) - LODWORD(STACK[0x5F18]);
  LODWORD(STACK[0x6238]) = LODWORD(STACK[0x5F38]) - LODWORD(STACK[0x5F40]);
  LODWORD(STACK[0x6248]) = LODWORD(STACK[0x5F80]) - LODWORD(STACK[0x5F30]);
  LODWORD(STACK[0x6588]) = LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x66E0]);
  v540 = LODWORD(STACK[0x6710]) == 788592772;
  v5 = STACK[0x67F0];
  v6 = LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x67F0]) ^ v4;
  v7 = LODWORD(STACK[0x5F88]) ^ 0xC;
  v8 = LODWORD(STACK[0x5FD0]) << v7;
  v9 = LOBYTE(STACK[0x5F88]) ^ 0xC;
  LODWORD(STACK[0x6710]) = v7;
  LODWORD(STACK[0x5FD0]) = v8 | (LODWORD(STACK[0x64E8]) >> v1);
  v10 = STACK[0x68C0];
  LODWORD(STACK[0x5FC8]) = LODWORD(STACK[0x64B0]) + (LODWORD(STACK[0x64B8]) << v10);
  v11 = STACK[0x6A00];
  v12 = LODWORD(STACK[0x13C0]) ^ (((LODWORD(STACK[0x6A00]) ^ 0x2182E864) & (LODWORD(STACK[0x6578]) ^ 0xE100F6B2) ^ STACK[0x6578] & 0x9848CD6E) >> 1);
  v13 = (v12 + 466716214 - ((2 * v12) & 0x37A30C6C)) ^ LODWORD(STACK[0x6560]);
  v14 = LODWORD(STACK[0x6A20]) ^ 0x23406BE0;
  v15 = LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x13C4]);
  v16 = ((1543782528 - (v13 & v14 ^ 0x290C500) + ((2 * (v13 & v14 ^ 0x290C500)) & 0x47F76718) + 3059) ^ 0x5E948973u) >> LODWORD(STACK[0x6A80]);
  v17 = STACK[0x6A80];
  v18 = STACK[0x6990];
  v19 = STACK[0x6990] & 0x1F ^ 0xE;
  LODWORD(STACK[0x6880]) = v19;
  LODWORD(STACK[0x5FC0]) = ((((v15 & v13 & 0xA4A34428 ^ 0x84234421) + (v15 & v13 & 0x5B5CBBD7) - 1) ^ 0x84234420) << v19) ^ v16;
  v20 = v11 ^ 0xB9CA250A;
  v21 = (((LODWORD(STACK[0x64F0]) ^ 0xE3380A10) & (v11 ^ 0xB9CA250A) ^ v11 & 0xAF3B6B0E) >> 1) ^ 0x54851085;
  v22 = (v21 - ((2 * v21) & 0x4C073264) - 1509713614) ^ LODWORD(STACK[0x64D0]);
  v23 = STACK[0x6A40];
  v24 = LODWORD(STACK[0x6A40]) ^ 0xF94B7EF1;
  v25 = STACK[0x6A50];
  v26 = LODWORD(STACK[0x6A50]) ^ 0x80;
  LODWORD(STACK[0x6550]) = ((v22 & v24) << LODWORD(STACK[0x69C0]) << LODWORD(STACK[0x6960])) | ((v22 & v26) >> v1);
  v27 = (((v11 ^ 0xB9CA250A) & (LODWORD(STACK[0x6688]) ^ 0xC69E96AE) ^ v11 & 0x4170BCB0) >> 1) ^ 0xA01200;
  v28 = (v27 - 2014434786 - ((2 * v27) & 0xFDC543C)) ^ LODWORD(STACK[0x6688]);
  v29 = ((v28 & v14 & 0x86691569 ^ 0x82600161) + (v28 & v14 ^ 0x65993608) - ((v28 & v14 ^ 0x65993608) & 0x86691569)) ^ 0xE3F02361;
  v30 = STACK[0x6930];
  v31 = (v15 & v28) << (v30 & 0x8B ^ 0x82) << (v30 & 0x14 ^ 0x10);
  LODWORD(STACK[0x5F88]) = (v29 >> v17)
                         + (((v31 ^ 0x6374FC7E) + 2004102404) ^ ((v31 ^ 0xD845983) + 428116223) ^ ((v31 ^ 0x6EF0A5FD)
                                                                                                 + 2062578817));
  v32 = STACK[0x69A0];
  v33 = v6 & STACK[0x13C8] ^ 0x4344D010 ^ (v6 ^ 0x429776D7) & (LODWORD(STACK[0x69A0]) ^ 0x8D894ED0);
  v34 = (((v33 | 0xDEC96A46) - (v33 | 0x213695B9) + 557225401) >> 1) ^ 0x6FC4E503;
  v6 ^= 0x66002098u;
  LODWORD(STACK[0x5EB0]) = v6;
  v35 = (v34 - ((2 * v34) & 0x492EAC9E) + 613897807) ^ v6;
  LOBYTE(v19) = STACK[0x6870];
  v36 = STACK[0x6970];
  LODWORD(STACK[0x6548]) = ((((v35 & v15 ^ 0x8C084480 | 0x4640028A) - (v35 & v15 ^ 0x8C084480 | 0xB9BFFD75) - 1178600075) ^ 0xCA48460A) << v19 << v36) | ((v35 & v26) >> v17);
  v37 = (v11 ^ 0xFC321AB5) & (v5 ^ 0xD8D26704) ^ v5 & 0x45F83FBE;
  v38 = (v37 & 0x5D8CC750 ^ 0x188CC651 | v37 & 0xA27338AE) - 1;
  v39 = (((v38 >> 1) ^ 0x2C2E70AA) - 657299708 - 2 * (((v38 >> 1) ^ 0x2C2E70AA) & 0x58D26705 ^ (v38 >> 1) & 1)) ^ v5;
  LODWORD(STACK[0x6540]) = ((v24 & v39) << v36 << v19) + ((v39 & v14) >> v1);
  v40 = STACK[0x6AB0];
  v41 = v32 & 0x23C9E716 ^ 0x21004300 ^ STACK[0x6AB0] & (LODWORD(STACK[0x64A0]) ^ 0x4984BE62);
  v42 = (((v41 | 0xD94C351A) - (v41 | 0x26B3CAE5) + 649317093) >> 1) ^ 0x7D42E88D;
  v43 = (v42 + 1783454068 - ((2 * v42) & 0xD49AB2E8)) ^ LODWORD(STACK[0x64A0]);
  v44 = STACK[0x6920] & 3 ^ 2;
  LODWORD(STACK[0x6580]) = v44;
  v45 = ((((2 * (v43 & v24 ^ 0xE2986030)) | 0xE00A4D3E) - (v43 & v24 ^ 0xE2986030) + 268097889) ^ 0x129D46AF) << v44;
  v46 = v18 & 0x1C ^ 0xC;
  LODWORD(STACK[0x6578]) = v46;
  LODWORD(STACK[0x5EF8]) = (v45 << v46) + ((v43 & v14) >> v1);
  v47 = v3;
  LODWORD(STACK[0x5EA0]) = v3;
  v48 = (v3 ^ 0x7BB14EED) & (v11 ^ 0xB9CA250B);
  LODWORD(STACK[0x6700]) = v11 ^ 0xB9CA250B;
  v49 = v11;
  v50 = ((v11 & 0xB42BD2FD ^ 0x3429405C ^ v48) - ((2 * (v11 & 0xB42BD2FD ^ 0x3429405C ^ v48)) & 0x3AF759E8) - 1652839180) >> 1;
  v51 = ((v50 ^ 0xCAC7650) - 811951088 - 2 * ((v50 ^ 0xCAC7650) & 0x4F9A9C14 ^ v50 & 4)) ^ v47;
  v52 = v30 & 0x1A ^ 0x12;
  LODWORD(STACK[0x66E0]) = v52;
  LODWORD(STACK[0x66E8]) = v30 & 5;
  LODWORD(STACK[0x6538]) = ((((v15 & v51 ^ 0x80A09064 | 0x7189F5A5) - (v15 & v51 ^ 0x80A09064 | 0x8E760A5A) - 1904866726) ^ 0xF12965C1) << v52 << (v30 & 5)) | ((v51 & v14) >> v1);
  v53 = ((v11 ^ 0xB9CA250A) & (LODWORD(STACK[0x66B0]) ^ 0x795E1D7E) ^ v11 & 0xAC352B2A) >> 1;
  v54 = ((v53 ^ 0x54001085) - 714394028 - 2 * ((v53 ^ 0x54001085) & 0x556B365E ^ v53 & 0xA)) ^ LODWORD(STACK[0x66B0]);
  v55 = v17;
  LODWORD(STACK[0x6528]) = ((((v54 & v14 & 0xBE989C19 ^ 0xA6989419) + (v54 & v14 & 0x416763E6 ^ 0x410003E7) - 1) ^ 0xE79897FF) >> v17) | ((v24 & v54) << LODWORD(STACK[0x68A0]) << v9);
  v56 = STACK[0x6520] & 0x75402673 ^ 0x70000433 ^ (LODWORD(STACK[0x6520]) ^ 0xDB4202D6) & (v32 ^ 0xB78D91DB);
  v57 = ((((2 * v56) | 0x26328F08) - v56 - 320423812) >> 1) ^ 0x192CA0F2;
  v58 = LODWORD(STACK[0x6520]) ^ 0x62B5932B;
  LODWORD(STACK[0x5EA8]) = v58;
  v59 = (v57 - ((2 * v57) & 0x73EF23FA) - 1174957571) ^ v58;
  v60 = v18 & 0x16 ^ 6;
  v61 = v18 & 9 ^ 8;
  LODWORD(STACK[0x6530]) = ((v59 & v15) << (v18 & 0x16 ^ 6) << v61) | ((v59 & v14) >> v17);
  v62 = v11 & 0x9C584846 ^ 0x84480800 ^ (LODWORD(STACK[0x6860]) ^ 0x6D27024A) & (v11 ^ 0xB9CA250B);
  v63 = LODWORD(STACK[0x6720]) ^ ((((2 * v62) | 0xCDD34900) - v62 + 420895616) >> 1);
  v64 = (v63 ^ 0x9B477A49) & v26 ^ v25 & 0x8DCDE76D;
  v65 = v23 & 0xC2357B9F ^ 0x106880 ^ (v63 ^ 0xD4BFE6BB) & v24;
  v66 = (((((((2 * v65) | 0xE7A012A8) - v65 - 1943013716) ^ 0xB3C11B45) << (v30 & 0xE ^ 2) << (v30 & 0x91 ^ 0x90)) ^ 0x19B0E816) & ~(v64 >> v1) | (v64 >> v1) & 0xE64F17E9) ^ 0x80081349;
  LODWORD(STACK[0x5EF0]) = v66 - ((2 * v66) & 0xF7359F50);
  v67 = (((v32 ^ 0xA4D7270A) & (LODWORD(STACK[0x66B8]) ^ 0x41A8D0E6) ^ STACK[0x66B8] & 0x661A90A2) >> 1) ^ 0x20044851;
  v68 = (v67 - ((2 * v67) & 0x8351A1CC) + 1101582566) ^ LODWORD(STACK[0x66B8]);
  v69 = STACK[0x69E0] & 8;
  v70 = STACK[0x69E0];
  LODWORD(STACK[0x6560]) = v69;
  v71 = ((((2 * (v68 & v24 ^ 0x2B00B072)) & 0xC7420F1A) - (v68 & v24 ^ 0x2B00B072) - 1671497614) ^ 0xB75E4800) << v69;
  v72 = v30 & 0x17 ^ 0x12;
  LODWORD(STACK[0x6558]) = v72;
  LODWORD(STACK[0x6520]) = (((v68 & v26) >> v17) - ((2 * ((v68 & v26) >> v17)) & 0xE68D9002) - 213465087) ^ 0xF346C801 ^ (v71 << v72);
  v73 = ((LODWORD(STACK[0x68D0]) ^ 0x21D80E8) & (v49 ^ 0x1E08DB82) ^ STACK[0x6770] & 0xA7C2FE88) >> 1;
  v74 = ((v73 ^ 0x11416600) - 2 * ((v73 ^ 0x11416600) & 0x211B529F ^ v73 & 0xC) - 1592044909) ^ LODWORD(STACK[0x6518]);
  v75 = (v26 & v74 ^ 0xD4284410) - ((2 * (v26 & v74 ^ 0xD4284410)) & 0x9B4BE4D8);
  v76 = v30 & 0xF ^ 2;
  LODWORD(STACK[0x6488]) = v76;
  v77 = (v74 & v24) << v76;
  v78 = ~v70 & 0x10;
  LODWORD(STACK[0x66D8]) = v78;
  LODWORD(STACK[0x6518]) = (((v75 + 1302721132) ^ 0x998DB67C) >> v1) ^ (v77 << v78);
  v79 = (v40 & (LODWORD(STACK[0x6680]) ^ 0xCC4A99C) ^ v32 & 0x4D6C797Au) >> 1;
  v80 = ((v79 ^ 0x20261894) - 2 * ((v79 ^ 0x20261894) & 0x41A8D0EE ^ v79 & 8) + 1101582566) ^ LODWORD(STACK[0x6680]);
  LODWORD(STACK[0x6510]) = ((v80 & v15) << v52 << (v30 & 5)) ^ ((v80 & v14) >> v17);
  v81 = ((v20 & (LODWORD(STACK[0x6660]) ^ 0x7691C2F0) ^ v49 & 0xF17FE8EE) >> 1) ^ 0x58A51005;
  v82 = (v81 - 2014434786 - ((2 * v81) & 0xFDC543C)) ^ LODWORD(STACK[0x6660]);
  LODWORD(STACK[0x6500]) = ((v26 & v82) >> v17)
                         + ((((v24 & v82 & 0xF5B9E551 ^ 0xF5A0E451) + (v24 & v82 & 0xA461AAE ^ 0x8401821) - 1) ^ 0xFDE0FC71) << v10 << LODWORD(STACK[0x6750]));
  v83 = (LODWORD(STACK[0x64F8]) ^ 0xA40865EA) & v40 ^ v32 & 0x529DEB2;
  v84 = (((v83 >> 1) ^ 0x4CB50) - 2 * (((v83 >> 1) ^ 0x4CB50) & 0x27BFABDB ^ (v83 >> 1) & 1) + 666872794) ^ LODWORD(STACK[0x6490]);
  v85 = (v84 & v26 ^ 0xE01F | 0x811680FA) - (v84 & v26 ^ 0xE01F | 0x7EE97F05);
  v86 = (((v84 & v24 ^ 0x2423A104) - ((2 * (v84 & v24 ^ 0x2423A104)) & 0xE7C61776) - 203224133) ^ 0xD7C0AABF) << (v30 & 0x81 ^ 0x80) << (v30 & 0x1E ^ 0x12);
  LODWORD(STACK[0x5EE8]) = (((v85 + 2129231621) ^ 0x811660E5) >> v17)
                         - 1188559
                         + (((v86 ^ 0x6B35786A) + 1797744151) ^ ((v86 ^ 0x19304A0A) + 421680247) ^ ((v86 ^ 0x72053260)
                                                                                                  + 1914121245));
  v87 = ((v32 ^ 0x94CD65E) & (LODWORD(STACK[0x65B8]) ^ 0x89C30400) ^ STACK[0x65B8] & 0xCB8161F6) >> 1;
  v88 = ((v87 ^ 0x44C08000) - 1983708159 - 2 * ((v87 ^ 0x44C08000) & 0x9C30421 ^ v87 & 0x20)) ^ LODWORD(STACK[0x65B8]);
  LODWORD(STACK[0x66F8]) = v60;
  LODWORD(STACK[0x66F0]) = v61;
  LODWORD(STACK[0x64F8]) = (((((2 * (v88 & v24 ^ 0x3180B86)) | 0x2A0B12DE) - (v88 & v24 ^ 0x3180B86) - 352684399) ^ 0x161D82E9) << (v18 & 0x16 ^ 6) << v61) | ((v88 & v14) >> v1);
  LODWORD(v90) = __ROR4__(STACK[0x66A8], 13) ^ 0xA45EFFB4 ^ __ROR4__(STACK[0x66A8] & 0xF9373468 ^ 0xC17FE218 ^ (v49 ^ 0x40FD1163) & (LODWORD(STACK[0x66A8]) ^ 0xA6BC86E9), 14);
  HIDWORD(v90) = v90;
  v89 = v90 >> 19;
  v91 = v89 & 0x3AAC4DAD ^ 0x202809A9 ^ (v25 ^ 0x3AAC4D2D) & (v89 ^ 0x49EFE15A);
  v92 = v70 & 4;
  LODWORD(STACK[0x5FB0]) = v92;
  v93 = (v89 & 0x186A391B ^ 0x86A211A ^ (v23 ^ 0xE12147EA) & (v89 ^ 0x49EFE15A)) << v92;
  v94 = v30 & 0x1B ^ 0x12;
  LODWORD(STACK[0x5FA8]) = v94;
  LODWORD(STACK[0x64F0]) = (((((2 * v91) & 0x840AE714) - v91 - 1107653515) ^ 0x957EC4D4) >> v17) ^ (v93 << v94);
  v95 = STACK[0x6668] & 0x6C9D24E8 ^ 0x4C9D20A0 ^ (v49 ^ 0xD55701E3) & (LODWORD(STACK[0x6668]) ^ 0xD7D6E0AA);
  v96 = ((v95 - ((2 * v95) & 0xF98A0D8C) + 2093287110) >> 1) ^ 0x3A660367;
  v97 = (v96 - 673783638 - ((2 * v96) & 0xAFADC154)) ^ LODWORD(STACK[0x6668]);
  v98 = (((v24 & v97 ^ 0x101004) - ((2 * (v24 & v97 ^ 0x101004)) & 0xF62B218E) + 2065010887) ^ 0x7B0580C3) << (v30 & 0x86 ^ 0x82) << (v30 & 0x19 ^ 0x10);
  LODWORD(STACK[0x5F28]) = ((v97 & v14) >> v17)
                         + 404889728
                         + (((v98 ^ 0xC7D0B2CA) + 537751398) ^ ((v98 ^ 0x1CEF6435) - 80561765) ^ ((v98 ^ 0xDB3FD6FF)
                                                                                                + 1021446993));
  v99 = LODWORD(STACK[0x6698]) ^ ((((2 * (v40 & STACK[0x6698] ^ 0x367C14)) | 0x94DBDE42)
                                 - (v40 & STACK[0x6698] ^ 0x367C14)
                                 + 898765023) >> 1);
  v100 = STACK[0x6A30];
  v101 = v99 & 0xC5A66C1C ^ 0x45244818 ^ (v99 ^ 0x652DC99A) & (LODWORD(STACK[0x6A30]) ^ 0x2E109266);
  v102 = STACK[0x6A20];
  v103 = v99 & 0x7BDF7B9C ^ 0x585A3808 ^ (v99 ^ 0x652DC99A) & (LODWORD(STACK[0x6A20]) ^ 0x589F107C);
  v104 = LODWORD(STACK[0x64C0]) ^ 0xA;
  LODWORD(STACK[0x6860]) = v104;
  LODWORD(STACK[0x64E8]) = (((v103 + 565653682 - ((2 * v103) & 0x436E6B24) + 1248) ^ 0x18E04402u) >> v17)
                         + (v101 << v104 << LODWORD(STACK[0x6890]));
  v105 = (LODWORD(STACK[0x65F0]) ^ 0xF6622FAD) & v40 ^ v32 & 0x364D5B65;
  v106 = ((v105 & 0x7331AFC0 ^ 0x4330AEC1 | v105 & STACK[0x13CC]) - 1) >> 1;
  v107 = ((v106 ^ 0x20BEDEF0) - 689917402 + ((2 * ((v106 ^ 0x20BEDEF0) & 0x56E0B236 ^ v106 & 0x10)) ^ 0xFFFFFFDF) + 1) ^ LODWORD(STACK[0x65D0]);
  v108 = (v107 & v26 ^ 0x15060058 | 0x6DA03426) - (v107 & v26 ^ 0x15060058 | 0x925FCBD9);
  v109 = (((v108 - 1839215655) ^ 0x78A6347E) >> v17) & 0x6D680930 | (((v107 & v24) << (v30 & 0x1A ^ 0x12) << (v30 & 0x85 ^ 0x80)) ^ 0x9297F6CF) & ~(((v108 - 1839215655) ^ 0x78A6347E) >> v17);
  v110 = v32 & 0x383D4D9E ^ 0x314D04 ^ (LODWORD(STACK[0x6708]) ^ 0xCCE4636F) & v40;
  v111 = v110 | LODWORD(STACK[0x13D0]);
  v112 = LODWORD(STACK[0x6708]) ^ 0x53B87353;
  LODWORD(STACK[0x5E98]) = v112;
  v113 = ((((v111 - (v110 | 0x81034D64) - 2130490012) >> 1) ^ 0x3F607D0B)
        - 2
        * ((((v111 - (v110 | 0x81034D64) - 2130490012) >> 1) ^ 0x3F607D0B) & 0x27615DA6 ^ ((v111
                                                                                          - (v110 | 0x81034D64)
                                                                                          - 2130490012) >> 1) & 4)
        - 1486791262) ^ v112;
  v114 = STACK[0x6880];
  v115 = (((((2 * (v113 & v24 ^ 0x6120E008)) | 0xEF52FA8A) - (v113 & v24 ^ 0x6120E008) + 139887291) ^ 0x96899D4D) << LODWORD(STACK[0x6880]))
       + ((((v113 & v26 ^ 0x5820B445) - ((2 * (v113 & v26 ^ 0x5820B445)) & 0x760F85E8) - 1157119244) ^ 0xE32776B1) >> v1);
  LODWORD(STACK[0x5F68]) = v115;
  v116 = LODWORD(STACK[0x6650]) ^ ((((2 * (v40 & STACK[0x6650] ^ 0x58C5E888)) | 0xF76CCC7A)
                                  - (v40 & STACK[0x6650] ^ 0x58C5E888)
                                  + 71932355) >> 1);
  v117 = v116 & 0xD541D21F ^ 0x5101C21A ^ (v116 ^ 0x51B9C75A) & (v25 ^ 0xD541D29F);
  v118 = v116 & 0x136012 ^ 0x32012 ^ (v116 ^ 0x51B9C75A) & (v100 ^ 0xEBA59E68);
  v119 = (((v118 - ((2 * v118) & 0x8DC00D3E) - 958396769) ^ 0xC6F2669F) << LODWORD(STACK[0x69C0]) << LODWORD(STACK[0x6960])) | (v117 >> v55);
  LODWORD(STACK[0x5F80]) = v119;
  v120 = v20;
  v121 = ((LODWORD(STACK[0x65C0]) ^ 0x399866E0) & v20 ^ v49 & 0xF2E48214) >> 1;
  v122 = ((v121 ^ 0x58600000) - 881007372 - 2 * ((v121 ^ 0x58600000) & 0x4B7CE4FF ^ v121 & 0xB)) ^ LODWORD(STACK[0x65C0]);
  v123 = ((-1835822901 - (v122 & v24 ^ 0xC0804940) + ((2 * (v122 & v24 ^ 0xC0804940)) | 0xDAD8C8C6) + 2770) ^ 0xADEC2D23) << (~LOBYTE(STACK[0x6990]) & 0xC);
  v124 = ~LODWORD(STACK[0x6990]) & 0xC;
  LODWORD(STACK[0x5E88]) = v124;
  v125 = STACK[0x6920] & 0x13 ^ 2;
  LODWORD(STACK[0x5E80]) = v125;
  v126 = (v123 << v125) | ((v122 & v14) >> v1);
  LODWORD(STACK[0x5F60]) = v126;
  v127 = (LODWORD(STACK[0x6608]) ^ 0xDC662E82) & v120;
  LODWORD(STACK[0x6498]) = v120;
  v128 = ((((v127 ^ v49 & 0x639BD472) >> 1) ^ 0x10C50201)
        - 2 * ((((v127 ^ v49 & 0x639BD472) >> 1) ^ 0x10C50201) & 0x3BDDF1CB ^ ((v127 ^ v49 & 0x639BD472) >> 1) & 2)
        - 1143082551) ^ LODWORD(STACK[0x64E0]);
  LODWORD(STACK[0x6770]) = v30 & 1;
  v129 = v30 & 0x1E ^ 0x12;
  LODWORD(STACK[0x6708]) = v129;
  v130 = (((-1747727736 - (v128 & v26 ^ 0x500061A8) + ((2 * (v128 & v26 ^ 0x500061A8)) | 0xD05863FE) + 889) ^ 0x382C5057) >> v1)
       + ((v128 & v24) << (v30 & 1) << v129);
  LODWORD(STACK[0x5F78]) = v130;
  LODWORD(STACK[0x5F70]) = v109 ^ 0x9297F6CF;
  HIDWORD(v90) = v109 ^ 0x9297F6CF;
  LODWORD(v90) = v109 ^ 0x9297F6CF;
  LODWORD(STACK[0x5ED8]) = (v90 >> 24) ^ __ROR4__(v126 ^ v119 ^ v130 ^ v115, 24);
  v131 = v32 & 0x4E2DC2A1 ^ 0x62C8201 ^ v40 & (LODWORD(STACK[0x6678]) ^ 0xE8914448);
  v132 = LODWORD(STACK[0x6678]) ^ (((v131 | 0x40D6CFB7) - (v131 | 0xBF293048) - 1087819704) >> 1);
  v133 = v100 & 0x24A61A9E ^ 0x86109C ^ (v132 ^ 0x80617BFC) & v15;
  v134 = v102 & 0xE48C9B27 ^ 0xA4801A01 ^ (v132 ^ 0x404BFA45) & v14;
  LODWORD(STACK[0x65F0]) = (((v133 + 1048770984 - ((2 * v133) & 0x7D05F350)) ^ 0x1EA2F32E) << v60 << v61)
                         + (((v134 - ((2 * v134) & 0xDEFEB8C2) - 276865951) ^ 0x6BFF4D40) >> v55);
  v135 = (LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x13D4])) & (v49 ^ 0xCC081239);
  v136 = (((v135 ^ STACK[0x65F8] & 0x75C23732) & 0x21A7FEF5 ^ LODWORD(STACK[0x13D8]))
        + ((v135 ^ STACK[0x65F8] & 0x75C23732) & 0xDE58010A ^ 0x101)
        - 1) >> 1;
  v137 = ((v136 ^ 0x1013FCFA) - 2 * ((v136 ^ 0x1013FCFA) & 0x29340E8F ^ v136 & 5) - 1456206198) ^ LODWORD(STACK[0x65A0]);
  LODWORD(STACK[0x65F8]) = ((((v137 & v15 ^ 0x86002D5 | 0xF8CA7D64) - (v137 & v15 ^ 0x86002D5 | 0x735829B) + 120947355) ^ 0xF0AA7FB1) << LODWORD(STACK[0x68A0]) << LODWORD(STACK[0x6710])) | ((((v137 & v26 & 0xEC1DEA49 ^ 0xEC1CE849) + (v137 & v26 ^ 0x12410200) - ((v137 & v26 ^ 0x12410200) & 0xEC1DEA49)) ^ 0xFE5CE849) >> v55);
  v138 = LODWORD(STACK[0x65E0]) ^ ((v120 & STACK[0x65E0]) >> 1);
  v139 = v102 ^ 0xDCBF941F ^ (v138 + LODWORD(STACK[0x13DC]) - ((2 * v138) & 0xB2B2CAE4));
  if (v540)
    v139 = STACK[0x64C8];
  v140 = v1;
  LODWORD(STACK[0x64C8]) = (((((2 * (v24 & v138 ^ 0x11461889)) & 0xDF72BD92) - (v24 & v138 ^ 0x11461889) - 1874419402) ^ 0x8100B9BF) << LODWORD(STACK[0x6980]) << LODWORD(STACK[0x69D0])) | (((((v139 ^ LODWORD(STACK[0x13DC])) & v138 ^ 0x80280821 | 0xFBDFFD7) - ((v139 ^ LODWORD(STACK[0x13DC])) & v138 ^ 0x80280821 | 0xF0420028) - 264110040) ^ 0x8F95F7F6) >> v1);
  v141 = ((v40 & (LODWORD(STACK[0x65E8]) ^ 0x4B5A2A78) ^ v32 & 0xF00FAB7A) >> 1) ^ 0x6006D194;
  v142 = (v141 - 1152024318 - ((2 * v141) & 0x76AB0204)) ^ LODWORD(STACK[0x65E8]);
  v143 = STACK[0x6A70];
  v144 = STACK[0x6A60];
  LODWORD(STACK[0x64C0]) = ((((v142 & v26 ^ 0x58120832) - ((2 * (v142 & v26 ^ 0x58120832)) & 0xEA8C2FAE) + 1967527895) ^ 0x2D541FE5) >> v1) ^ ((v142 & v24) << v143 << v144);
  v145 = STACK[0x6700];
  v146 = v49 & 0xB7070349 ^ 0x22070341 ^ (LODWORD(STACK[0x6480]) ^ LODWORD(STACK[0x13E0])) & STACK[0x6700];
  v147 = (((v146 | 0xB152501A) - (v146 | 0x4EADAFE5) + 1320005605) >> 1) ^ 0x112BA929;
  v148 = (v147 - 510807395 - ((2 * v147) & 0xC31B653A)) ^ LODWORD(STACK[0x6480]);
  LODWORD(STACK[0x64B8]) = ((((v15 & v148 & 0xCA5681FE ^ 0x4256813C)
                            + (v15 & v148 ^ 0x9C204EC2)
                            - ((v15 & v148 ^ 0x9C204EC2) & 0xCA5681FE)) ^ 0x5676CF3C) << v143 << v144)
                         + ((((v148 & v26 & 0x2C1D47FB ^ 0x281D443A) + (v148 & v26 & 0xD3E2B804 ^ 0x20B801) - 1) ^ 0x283DFC3A) >> v55);
  v149 = (((v49 ^ 0xAA280C9C) & (LODWORD(STACK[0x6620]) ^ 0xC43B45FC) ^ STACK[0x6620] & 0x13E22996) >> 1) ^ 0x1100CA;
  v150 = (v149 - 1002748419 - ((2 * v149) & 0x88768BFA)) ^ LODWORD(STACK[0x6620]);
  LODWORD(STACK[0x5F10]) = ((((v26 & v150 ^ 0x8A465ACE | 0x3F494E92)
                            - (v26 & v150 ^ 0x8A465ACE | 0xC0B6B16D)
                            - 1061768851) ^ 0xB50F145C) >> v1) | ((((STACK[0x13E4] & (2 * (v24 & v150 ^ 0xA2CD1A48)))
                                                                  - (v24 & v150 ^ 0xA2CD1A48)
                                                                  - 484444412) ^ 0x41D2ED4C) << v124 << v125);
  v151 = STACK[0x6780] & 0xAEF47434 ^ 0x2E104414 ^ (LODWORD(STACK[0x6780]) ^ 0xAEDD2A73) & (v49 ^ 0x173E513F);
  v152 = ((142801219 - (v151 | 0x882F943) + (v151 | 0xF77D06BC)) >> 1) ^ 0x3BDCB14C;
  v153 = (v152 - 292357024 - ((2 * v152) & 0xDD25F8C0)) ^ LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x64B0]) = (((((2 * (v153 & v24 ^ 0x80080B24)) | 0x8D6F6786) - (v153 & v24 ^ 0x80080B24) - 1186444227) ^ 0xC6BFB8E7) << LODWORD(STACK[0x66E8]) << LODWORD(STACK[0x66E0])) ^ ((v153 & v14) >> v1);
  v154 = v49 & 0x2C18D5E9 ^ 0x100408 ^ (LODWORD(STACK[0x6600]) ^ 0xFD24D0CF) & v145;
  v155 = (-1170026568 - (v154 | 0xBA42CFB8) + (v154 | 0x45BD3047)) >> 1;
  v156 = LODWORD(STACK[0x64D8]) ^ ((v155 ^ 0x36D298A3) - 2 * ((v155 ^ 0x36D298A3) & 0x7E8C84FF ^ v155 & 8) + 2123138295);
  v157 = v26;
  LODWORD(STACK[0x64A8]) = ((((v156 & v24 ^ 0x9504005) - ((2 * (v156 & v24 ^ 0x9504005)) & 0x73B4B0C8) + 970610788) ^ 0x308A1861) << LODWORD(STACK[0x6568]) << LODWORD(STACK[0x6570])) ^ ((v156 & v26) >> v55);
  v158 = ((v40 & (LODWORD(STACK[0x65B0]) ^ 0x865ACF98) ^ v32 & 0x7A682664) >> 1) ^ 0x21241310;
  v159 = (v158 - 63772163 - ((2 * v158) & 0xF865D3FA)) ^ LODWORD(STACK[0x65B0]);
  v160 = ((2 * (v159 & v26 ^ 0x34C60B)) & 0x92D9A436) - (v159 & v26 ^ 0x34C60B);
  v161 = (((((v159 & v24 & 0x35D25640 ^ 0x15424641) + (v159 & v24 & 0xCA2DA9BF) - 1) ^ 0x15424640) << (v30 & 0x11 ^ 0x10) << (v30 & 0x8E ^ 0x82)) ^ 0xE83BC39A) & ~(((v160 - 1231868444) ^ 0xB6A7EBEF) >> v55) | (((v160 - 1231868444) ^ 0xB6A7EBEF) >> v55) & 0x17C43C65;
  v162 = STACK[0x6588];
  v163 = LODWORD(STACK[0x6588]) ^ 0xC1C9E798 ^ ((v161 & 0x3DFEFC02 ^ 0x29F22403) + (v161 & 0xC20103FD) - 1);
  LODWORD(STACK[0x5F20]) = v163;
  v164 = (LODWORD(STACK[0x6610]) ^ 0x12BBA0E5) & (v49 ^ 0x951B865) ^ STACK[0x6610] & 0xB09B9D6E;
  v165 = (((v164 & 0x34A76807 ^ 0x34A56001) + (v164 ^ 0xA9C4E) - ((v164 ^ 0xA9C4E) & 0x34A76807)) >> 1) ^ 0x121B3A16;
  v166 = (v165 - 350749492 - (STACK[0x13E8] & (2 * v165)) + 603) ^ LODWORD(STACK[0x65A8]);
  v167 = v30 & 0x1D ^ 0x10;
  LODWORD(STACK[0x5FA0]) = v167;
  v168 = (((v166 & v24 ^ 0xA15B0118) - ((2 * (v166 & v24 ^ 0xA15B0118)) & 0x3AD0046) - 2116648925) ^ 0x208D813B) << v167;
  v169 = ~v30 & 2;
  LODWORD(STACK[0x5F98]) = v169;
  v170 = (v168 << v169) ^ ((v26 & v166) >> v140);
  LODWORD(STACK[0x5F50]) = v170;
  v171 = v40;
  v172 = v32 & 0x2118787C ^ 0x102840 ^ v40 & (LODWORD(STACK[0x6690]) ^ 0xF9CA1F78);
  v173 = ((((2 * v172) | 0xDAAEA06) - v172 - 114652419) >> 1) ^ 0x366B6B5;
  v174 = (v173 - 657299708 - ((2 * v173) & 0xB1A4CE08)) ^ LODWORD(STACK[0x6690]);
  v175 = v30 & 3 ^ 2;
  LODWORD(STACK[0x6610]) = v175;
  v176 = (((v174 & v24 ^ 0xD00201CB | 0xA3A18A79) - (v174 & v24 ^ 0xD00201CB | 0x5C5E7586) + 1549694342) ^ 0x73A38BB2) << v175;
  v177 = STACK[0x69E0] & 0x1C ^ 0x10;
  LODWORD(STACK[0x6608]) = v177;
  v178 = (v176 << v177) + ((v174 & v26) >> v140);
  LODWORD(STACK[0x5F38]) = v178;
  v179 = LODWORD(STACK[0x67E0]) ^ (((v171 & STACK[0x67E0] & 0x515BF30E ^ 0x511AA306)
                                  + (v171 & STACK[0x67E0] ^ 0x2C55028)
                                  - ((v171 & STACK[0x67E0] ^ 0x2C55028) & 0x515BF30Eu)) >> 1);
  v180 = STACK[0x6A50];
  v181 = (v179 ^ 0x29CF5193) & (LODWORD(STACK[0x6A50]) ^ 0xBDCFDDB5) ^ v179 & 0xBDCFDD35;
  v182 = STACK[0x6A40];
  v183 = ((((v181 & 0x7D77828E ^ 0x6533828A) + (v181 ^ 0x98445825) - ((v181 ^ 0x98445825) & 0x7D77828E)) ^ 0xCCFC8BBA) >> v55) ^ ((v179 & 0xF3D24345 ^ 0x21C24101 ^ (v179 ^ 0x29CF5193) & (LODWORD(STACK[0x6A40]) ^ 0xA993DB4)) << v114);
  LODWORD(STACK[0x5F40]) = v183;
  v184 = v145;
  v185 = v145 & (LODWORD(STACK[0x66C0]) ^ 0x44EF0F86) ^ v49 & 0x547DF60;
  v186 = (((v185 & 0xA73AA285 ^ 0xA638A285)
         + (v185 ^ LODWORD(STACK[0x13EC]))
         - ((v185 ^ LODWORD(STACK[0x13EC])) & 0xA73AA285)) >> 1) ^ 0x53BF7D42;
  v187 = (v186 - ((2 * v186) & 0x8351A1CC) + 1101582566) ^ LODWORD(STACK[0x66C0]);
  v188 = LODWORD(STACK[0x5F58]) ^ 0xE;
  LODWORD(STACK[0x6780]) = v188;
  v189 = ((v24 & v187) << v188 << LODWORD(STACK[0x6590])) | ((((v187 & v14 & 0xD20ED683 ^ 0x520CD281)
                                                             + (v187 & v14 & 0x2DF1297C ^ 0x24E02805)
                                                             - 1) ^ 0x76ECFA85) >> v140);
  LODWORD(STACK[0x5F48]) = v189;
  v190 = (LODWORD(STACK[0x5F90]) ^ 0x7A37634A) & (v32 ^ 0xDD875FC3) ^ STACK[0x5F90] & 0x1F4AE86B;
  v191 = (((v190 & 0xA13DB721 ^ 0xA13D9721) + (v190 ^ 0xE402842) - ((v190 ^ 0xE402842) & 0xA13DB721)) >> 1) ^ 0x5ABFFF94;
  v192 = (v191 - ((2 * v191) & 0x5AE84ED8) + 762586988) ^ LODWORD(STACK[0x6598]);
  v193 = STACK[0x6990];
  v194 = STACK[0x6990] & 0x14 ^ 4;
  LODWORD(STACK[0x6600]) = v194;
  v195 = v193 & 0xB ^ 0xA;
  v196 = ((((v192 & v24 & 0x2527CCE7 ^ 0x252544E3) + (v192 & v24 & 0xDAD83318 ^ 0x402001) - 1) ^ 0x256564E3) << v194 << v195) | (((-2026224054 - (v192 & v14 ^ 0xA180C098) + ((2 * (v192 & v14 ^ 0xA180C098)) & 0xF18B550A) + 3888) ^ 0x26BA95E2) >> v140);
  LODWORD(STACK[0x5F08]) = v196;
  v197 = STACK[0x6800] & 0x46DEE35F ^ 0x28A210F ^ (v49 ^ 0xFF14C654) & (LODWORD(STACK[0x6800]) ^ 0xD8D26704);
  v198 = (((v197 | 0x4A5E899C) - (v197 | 0xB5A17663) - 1247709597) >> 1) ^ 0x40365CB;
  v199 = (v198 - 657299708 - ((2 * v198) & 0xB1A4CE08)) ^ LODWORD(STACK[0x6800]);
  v200 = (((((2 * (v199 & v14 ^ LODWORD(STACK[0x13F0]))) | 0x25EF5774)
          - (v199 & v14 ^ LODWORD(STACK[0x13F0]))
          + 1829262406) ^ 0xBBD275AB) >> v55)
       + ((((v24 & v199 & 0x2269A4E0 ^ 0x202904E1) + (v24 & v199 & 0xDD965B1F) - 1) ^ 0x202904E0) << v144 << v143);
  LODWORD(STACK[0x5F30]) = v200;
  v201 = v184 & (LODWORD(STACK[0x6628]) ^ 0x136B5150) ^ v49 & 0x2B4C00DB;
  v202 = (((v201 ^ LODWORD(STACK[0x13F4])) + (v201 | 0xA3BDFCC3) + (v201 & 0x5C42033C) + 1) >> 1) ^ 0x55FCFE45;
  v203 = (v202 + 942100875 - ((2 * v202) & 0x704EA316)) ^ LODWORD(STACK[0x6628]);
  v204 = LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6618]);
  LODWORD(STACK[0x65C8]) = v204;
  v205 = v204 ^ ((v157 & v203) >> v55) ^ (((((2 * (v24 & v203 ^ 0x240054)) | 0x9225EA7C)
                                                        - (v24 & v203 ^ 0x240054)
                                                        + 921504450) ^ LODWORD(STACK[0x13F8])) << LODWORD(STACK[0x6870]) << LODWORD(STACK[0x6970]));
  LODWORD(STACK[0x5F18]) = v205;
  v206 = LODWORD(STACK[0x6910]) ^ (((v32 ^ 0xB7B76E84) & (LODWORD(STACK[0x6910]) ^ 0xA6BC86E8) ^ STACK[0x6910] & 0x757AD92C) >> 1);
  v207 = v182 & 0x1B96A600 ^ 0x19022600 ^ (v206 ^ 0xAF3660FD) & v24;
  v208 = v180 & 0x89FF9329 ^ 0x80BE8009 ^ (v206 ^ 0x3D5F55D4) & v157;
  v209 = STACK[0x6770];
  v210 = STACK[0x6708];
  v211 = (((v208 - ((2 * v208) & 0xB022F1A4) - 669943598) ^ 0x58AFF8DB) >> v55) + (v207 << v209 << v210);
  LODWORD(STACK[0x5EE0]) = v211;
  v212 = LODWORD(STACK[0x5F88]) - 335597950;
  LODWORD(STACK[0x5F00]) = v212;
  v213 = LODWORD(STACK[0x5F28]) + 464;
  LODWORD(STACK[0x5F28]) = v213;
  v214 = LODWORD(STACK[0x5F10]) ^ LODWORD(STACK[0x6AA0]);
  LODWORD(STACK[0x5F10]) = v214;
  v215 = v189 ^ LODWORD(STACK[0x6540]) ^ LODWORD(STACK[0x64C8]) ^ LODWORD(STACK[0x6528]) ^ v200 ^ LODWORD(STACK[0x6500]) ^ v205 ^ v213 ^ v170 ^ LODWORD(STACK[0x64F0]) ^ LODWORD(STACK[0x6518]) ^ v214 ^ v212 ^ LODWORD(STACK[0x64B8]) ^ LODWORD(STACK[0x6510]) ^ v211 ^ LODWORD(STACK[0x6538]) ^ LODWORD(STACK[0x64E8]) ^ LODWORD(STACK[0x64C0]) ^ LODWORD(STACK[0x65F0]) ^ LODWORD(STACK[0x6520]) ^ v183;
  v216 = v162 ^ LODWORD(STACK[0x5EF8]);
  LODWORD(STACK[0x5EF8]) = v216;
  v217 = (LODWORD(STACK[0x5EF0]) + 2073743272) ^ 0xE22234F7;
  LODWORD(STACK[0x5EF0]) = v217;
  v218 = v215 ^ LODWORD(STACK[0x64F8]) ^ v178 ^ v216 ^ v163 ^ LODWORD(STACK[0x64B0]) ^ LODWORD(STACK[0x65F8]) ^ v217 ^ LODWORD(STACK[0x6530]) ^ LODWORD(STACK[0x6550]) ^ v196 ^ LODWORD(STACK[0x64A8]);
  v219 = __ROR4__(LODWORD(STACK[0x5ED8]) ^ 0xDB89DE9F, 8);
  v220 = LODWORD(STACK[0x5EE8]) + 1106;
  LODWORD(STACK[0x5EE8]) = v220;
  LODWORD(STACK[0x6618]) = v218 ^ v219 ^ v220 ^ LODWORD(STACK[0x6548]) ^ 0x9FDB89DE;
  v221 = STACK[0x6AB0];
  v222 = ((2 * (v32 & 0x54E65407 ^ 0x4861407 ^ v221 & (LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x1400])))) | 0x26FCCB44)
       - (v32 & 0x54E65407 ^ 0x4861407 ^ v221 & (LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x1400])))
       - 327050658;
  v223 = ((LODWORD(STACK[0x13FC]) ^ (v222 >> 1))
        - 388050940
        - ((2 * (LODWORD(STACK[0x13FC]) ^ (v222 >> 1))) & 0xD1BDA008)) ^ LODWORD(STACK[0x63B8]);
  LODWORD(STACK[0x5ED0]) = v223;
  LODWORD(STACK[0x5F90]) = (v223 & v24 & 0xBDC3A0EF ^ 0xB800A0C9)
                         + (v223 & v24 ^ 0x5F31026)
                         - ((v223 & v24 ^ 0x5F31026) & 0xBDC3A0EF);
  v224 = STACK[0x6648] & 0x501F33CF ^ 0xD0209 ^ (v49 ^ 0xE9D516C4) & (LODWORD(STACK[0x6648]) ^ 0xA17FC401);
  v225 = ((((2 * v224) | 0xBB194496) - v224 - 1569497675) >> 1) ^ 0x2ECF5021;
  v226 = (v225 + 1734166760 - ((2 * v225) & 0xCEBA91D0)) ^ LODWORD(STACK[0x6630]);
  v227 = STACK[0x1404];
  v228 = v30 & 0xE ^ 2;
  LODWORD(STACK[0x6648]) = v228;
  v229 = ((((2 * (v15 & v226 ^ 0x80C2C04A)) & 0x2A41FDC2) - (v15 & v226 ^ 0x80C2C04A) - 354483938) ^ 0x6A1DC154) << v228;
  v230 = v30 & 0x11 ^ 0x10;
  LODWORD(STACK[0x6630]) = v230;
  LODWORD(STACK[0x63B8]) = (v229 << v230)
                         + ((((v227 & (2 * (v226 & v14 ^ 0xC012C14))) - (v226 & v14 ^ 0xC012C14) + 1413397559) ^ 0x583F9023) >> v55);
  v231 = v32;
  v232 = v32 & 0x71477427 ^ 0x21070405 ^ v221 & (LODWORD(STACK[0x6658]) ^ 0xE570FFD0);
  v233 = ((((2 * v232) | 0x7D457196) - v232 - 1050851531) >> 1) ^ 0x2FF04477;
  v234 = (v233 + 145662242 - ((2 * v233) & 0x115D4244)) ^ LODWORD(STACK[0x63C0]);
  LODWORD(STACK[0x5EC8]) = v234;
  LODWORD(STACK[0x63C0]) = 240746350 - (v234 & v24 ^ 0x10036405) + (STACK[0x1408] & (2 * (v234 & v24 ^ 0x10036405)));
  v235 = (v32 ^ 0xA0E4C02E) & (LODWORD(STACK[0x6850]) ^ 0xD97B0EC8) ^ STACK[0x6850] & 0x62297786;
  v236 = ((v235 & 0xE4B2E9A6 ^ 0x8492C8A2) + (v235 ^ 0x62203104) - ((v235 ^ 0x62203104) & 0xE4B2E9A6)) >> 1;
  v237 = ((v236 ^ 0x635DEF11) - 1515667310 - 2 * ((v236 ^ 0x635DEF11) & 0x25A8C09A ^ v236 & 8)) ^ LODWORD(STACK[0x6820]);
  v238 = (v237 & 0x94254897 | (v182 ^ 0x9291C999) & ~v237) ^ 0x14200092;
  v239 = v24;
  LOBYTE(v170) = STACK[0x6600];
  LODWORD(STACK[0x5F88]) = (((((2 * v238) & 0x553212AE) - v238 - 714672472) ^ 0xAA9C4152 ^ ((v237 ^ -v237 ^ (v24 + (v182 ^ 0xD30D1C48 ^ (v237 - 709255866 - ((2 * v237) & 0xAB733A8C))) + 1))
                                                                                          + v24)) << v195 << v170)
                         + ((((v237 & v14 & 0xF0589967 ^ 0xB0589947) + (v237 & v14 & 0xFA76698 ^ 0x4804201) - 1) ^ 0xB4D8DB47) >> v140);
  v240 = (v49 ^ 0x7C290FD4) & (LODWORD(STACK[0x67A0]) ^ 0x8FEDAEF0) ^ STACK[0x67A0] & 0xC5E32ADE;
  v241 = (((v240 >> 1) ^ 0x42F09568) + 136848924 - 2 * (((v240 >> 1) ^ 0x42F09568) & 0x828261D ^ (v240 >> 1) & 1)) ^ LODWORD(STACK[0x6638]);
  v242 = v30 & 0x13 ^ 0x12;
  v243 = STACK[0x69E0] & 0xC;
  LODWORD(STACK[0x6790]) = v243;
  LODWORD(STACK[0x6658]) = v242;
  LODWORD(STACK[0x67A0]) = (((542649627 - (v15 & v241 ^ 0xA00881C0 | 0x20582D1B) + (v15 & v241 ^ 0xA00881C0 | 0xDFA7D2E4)) ^ 0x7FAF5324) << v243 << v242)
                         + (((((2 * (v157 & v241 ^ 0x1002C54)) | 0x721B5C4C) - (v157 & v241 ^ 0x1002C54) - 957197862) ^ 0x380D8272u) >> v55);
  v244 = v32 & 0xE031CD69 ^ 0xE001CD40 ^ v221 & (LODWORD(STACK[0x63F8]) ^ 0xF8EC8227);
  v245 = ((((2 * v244) | 0x385DB4C) - v244 - 29552038) >> 1) ^ 0x10E152E7;
  v246 = (v245 + 1443952867 - ((2 * v245) & 0xAC21F1C6)) ^ LODWORD(STACK[0x63F0]);
  LODWORD(STACK[0x5ED8]) = (((((2 * (v246 & v24 ^ 0xE5D064A7)) & 0x81057916) - (v246 & v24 ^ 0xE5D064A7) - 1082309772) ^ 0x5AAD27D3) << v209 << v210)
                         + ((((v246 & v14 ^ 0xA2001) - (v246 & v14 & 0xA6409EEC) + (v246 & v14 & 0xA6409EEC ^ 0xA6409EEC)) ^ 0xA64ABEED) >> v55);
  v247 = (v49 ^ 0x91ACC202) & (LODWORD(STACK[0x67B0]) ^ 0xE7654AB7) ^ STACK[0x67B0] & 0x2866E709;
  v248 = (((v247 & 0x1AD46D82 ^ 0x1AD06882) + (v247 ^ 0x260500) - ((v247 ^ 0x260500) & 0x1AD46D82)) >> 1) ^ 0x1D4B1541;
  v249 = (v248 - 61837530 - ((2 * v248) & 0xF8A0DE4C)) ^ LODWORD(STACK[0x63D0]);
  LODWORD(STACK[0x67B0]) = (((-1733873397 - (v15 & v249 ^ 0x8420656) + ((2 * (v15 & v249 ^ 0x8420656)) & 0xCEB19DE8)) ^ 0x90E5375D) << LODWORD(STACK[0x6580]) << LODWORD(STACK[0x6578]))
                         + ((((v157 & v249 & 0xE3185501 ^ LODWORD(STACK[0x140C]))
                            + (v157 & v249 ^ 0x98A4008)
                            - ((v157 & v249 ^ 0x98A4008) & 0xE3185501)) ^ 0xEA921509) >> v140);
  v250 = ((((v32 ^ 0xA5AADED1) & STACK[0x63C8] ^ STACK[0x68F0] & 0x67676979 ^ 0xBFDFFFFF)
         + ((v32 ^ 0xA5AADED1) & STACK[0x63C8] ^ STACK[0x68F0] & 0x67676979 | 0xE9EC8712)
         + (((v32 ^ 0xA5AADED1) & STACK[0x63C8] ^ STACK[0x68F0] & 0x67676979) & 0x161378ED)
         + 1) >> 1) ^ 0x77F46789;
  v251 = (v250 + 1458824295 - ((2 * v250) & 0xADE7C8CE)) ^ LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x6640]) = ((((v251 & v15 & 0xB83F11F6 ^ 0xB83D01B4)
                            + (v251 & v15 ^ 0x2021E42)
                            - ((v251 & v15 ^ 0x2021E42) & 0xB83F11F6)) ^ 0xBA3D0FB4) << LODWORD(STACK[0x68B0]) << LODWORD(STACK[0x6730])) ^ (((-1065420536 - (v251 & v14 ^ 0x8022AA14) + ((2 * (v251 & v14 ^ 0x8022AA14)) | 0x7F020C04) + 246) ^ 0xBFA3AC16) >> v55);
  v252 = STACK[0x6700];
  v253 = ((((2 * (v49 & 0x1A015CA3 ^ 0x58A1 ^ v252 & (LODWORD(STACK[0x67C0]) ^ 0xF96519EA))) | 0xBEAEC0AE)
         - (v49 & 0x1A015CA3 ^ 0x58A1 ^ v252 & (LODWORD(STACK[0x67C0]) ^ 0xF96519EA))
         + 547921833) >> 1) ^ 0x63AB9E7A;
  v254 = (v253 - 488510463 - ((2 * v253) & 0xC5C3D802)) ^ LODWORD(STACK[0x63D8]);
  LODWORD(STACK[0x6638]) = ((v24 & v254 ^ 0xD841044) + 230082615 - ((2 * (v24 & v254 ^ 0xD841044)) & 0x1B6D9C1A) + 1494) ^ 0x32DE49;
  LODWORD(STACK[0x67C0]) = (v157 & v254 ^ 0x6A68A58C | 0x9AAEDD9D) - (v157 & v254 ^ 0x6A68A58C | 0x65512262);
  v255 = (v221 & (LODWORD(STACK[0x6810]) ^ 0xCC1726C6) ^ v32 & 0x41FBF9D2) >> 1;
  v256 = ((v255 ^ 0x2064D8C0) + 1469824129 - 2 * ((v255 ^ 0x2064D8C0) & 0x579BBC83 ^ v255 & 2)) ^ LODWORD(STACK[0x63E8]);
  LODWORD(STACK[0x63F8]) = (((((2 * (v256 & v157 ^ 0x42278020)) | 0x65FD6196) - (v256 & v157 ^ 0x42278020) + 1291931445) ^ 0xF0D930EB) >> v140) | ((v256 & v24) << v209 << v210);
  v257 = v252;
  v258 = ((((v252 & (LODWORD(STACK[0x69B0]) ^ 0xF8DE17DE) ^ v49 & 0x41D9EDEE) & 0x6EE9B0BC ^ 0x2E60901C)
         + (v252 & (LODWORD(STACK[0x69B0]) ^ 0xF8DE17DE) ^ v49 & 0x41D9EDEE ^ 0x41896DE2)
         - ((v252 & (LODWORD(STACK[0x69B0]) ^ 0xF8DE17DE) ^ v49 & 0x41D9EDEE ^ 0x41896DE2) & 0x6EE9B0BC)) >> 1) ^ 0x17547C2A;
  v259 = (v258 - 1334469516 - ((2 * v258) & 0x60EB38E8)) ^ LODWORD(STACK[0x6830]);
  v260 = v170;
  LODWORD(STACK[0x5F58]) = v195;
  LODWORD(STACK[0x63F0]) = ((v15 & v259) << v170 << v195) | (((((2 * (v259 & v14 ^ 0x81580860)) & 0xC0047BDA)
                                                             - (v259 & v14 ^ 0x81580860)
                                                             + 536723986) ^ 0x9EA5CA72) >> v55);
  v261 = STACK[0x6900] & 0x683B1BA3 ^ 0x40220023 ^ (v49 ^ 0xD1F13EA8) & (LODWORD(STACK[0x6900]) ^ 0xB72FD4C5);
  v262 = ((((2 * v261) | 0xA14B4AA0) - v261 - 1353033040) >> 1) ^ 0x18565AF9;
  v263 = (v262 + 1348477686 - ((2 * v262) & 0xA0C045EC)) ^ LODWORD(STACK[0x67D0]);
  v264 = v30;
  v265 = v30 & 6 ^ 2;
  LODWORD(STACK[0x6A60]) = v265;
  v266 = (((v24 & v263 & 0xA6B65CD6 ^ 0xA6B61CD1) + (v24 & v263 & 0x5949A329) - 1) ^ 0xA6B61CD0) << v265;
  v267 = v30 & 0x19 ^ 0x10;
  LODWORD(STACK[0x6900]) = v267;
  LODWORD(STACK[0x68F0]) = (v266 << v267) + ((v263 & v14) >> v140);
  v268 = STACK[0x68E0] & 0xF0CEA3F1 ^ 0x3F05ADBF ^ (v32 ^ 0x32031459) & (LODWORD(STACK[0x68E0]) ^ 0xFCEEEF96);
  v269 = (((v268 | LODWORD(STACK[0x1414])) - (v268 | 0xD307198D) - 754509427) >> 1) ^ 0x7199F42E;
  v270 = (v269 + 999946391 - ((2 * v269) & 0x7733F12E)) ^ LODWORD(STACK[0x63E0]);
  LOBYTE(v200) = STACK[0x6860];
  v271 = STACK[0x6890];
  LODWORD(STACK[0x67D0]) = ((((v270 & v15 ^ LODWORD(STACK[0x1410]) | 0x418FB000)
                            - (v270 & v15 ^ LODWORD(STACK[0x1410]) | 0xBE704FFF)
                            - 1099935745) ^ 0xD18FD021) << v200 << v271) ^ ((((v270 & v157 & 0xCCB41597 ^ 0x48940597)
                                                                            + (v270 & v157 ^ 0x94281020)
                                                                            - ((v270 & v157 ^ 0x94281020) & 0xCCB41597)) ^ 0x589C05B7) >> v55);
  v272 = v49 & 0xA1166F12 ^ 0xA0106D10 ^ v252 & (LODWORD(STACK[0x6950]) ^ 0x1D25B137);
  v273 = LODWORD(STACK[0x6840]) ^ (((v272 | 0xD0CCBA75) - (v272 | 0x2F33458A) + 791889290) >> 1);
  v274 = v15 & (v273 ^ 0xCD8F8527) ^ STACK[0x6A30] & 0x555EB0A;
  v275 = STACK[0x6A20] & 0x1338BDB8 ^ 0x11884A0 ^ (v273 ^ 0xDBE2D395) & v14;
  v276 = (((v274 & 0x4BA0970E ^ 0x4AA09705) + (v274 & 0xB45F68F1) - 1) ^ 0x4BB47D0E) << LODWORD(STACK[0x6560]);
  v277 = ((v275 - ((2 * v275) & 0x86411046) + 1126205475) ^ LODWORD(STACK[0x1418])) >> v140;
  LODWORD(STACK[0x68E0]) = ((v276 << LODWORD(STACK[0x6558])) ^ v277) + 2 * ((v276 << LODWORD(STACK[0x6558])) & v277);
  v278 = ((v32 ^ 0x3EF3B006) & (LODWORD(STACK[0x66A0]) ^ 0x8FBFC00) ^ STACK[0x66A0] & 0xFC3E07AE) >> 1;
  v279 = ((v278 ^ 0x41D0200) + 1081387244 - 2 * ((v278 ^ 0x41D0200) & 0x4074A8FF ^ v278 & 0x13)) ^ LODWORD(STACK[0x6670]);
  v280 = ((v279 & v24 ^ 0xD8505088 | 0x85E3E78E) - (v279 & v24 ^ 0xD8505088 | 0x7A1C1871) + 2048661617) ^ 0x5DB3B706;
  v281 = v157;
  v282 = ((2 * (v279 & v157 ^ 0x2701080)) & 0xBD71FAFE) - (v279 & v157 ^ 0x2701080);
  LOBYTE(v157) = STACK[0x66F8];
  LOBYTE(v252) = STACK[0x66F0];
  LODWORD(STACK[0x6A70]) = (v280 << v157 << v252) ^ (((v282 - 1589181824) ^ 0xA3371200) >> v55);
  v283 = ((((v221 & (LODWORD(STACK[0x6360]) ^ 0x96CDE333) ^ v32 & 0x3173A76A) & 0x14DDB3F6 ^ 0x48C9397 | (v221 & (LODWORD(STACK[0x6360]) ^ 0x96CDE333) ^ v32 & 0x3173A76A) & 0xEB224C08)
         - 1) >> 1) ^ 0x2669A5F;
  v284 = (v283 - ((2 * v283) & 0x4F7C88B2) - 1480702887) ^ LODWORD(STACK[0x6360]);
  LODWORD(STACK[0x63D0]) = ((((v284 & v15 ^ 0xC0602500) - ((2 * (v284 & v15 ^ 0xC0602500)) & 0xBF67F0EA) - 541853579) ^ 0x1FD3DD75) << LODWORD(STACK[0x66E0]) << LODWORD(STACK[0x66E8])) | ((((v284 & v281 & 0x3A10ED42 ^ 0x1810AD03) + (v284 & v281 & 0xC5EF12BD) - 1) ^ 0x1810AD02) >> v140);
  v285 = v221;
  v286 = (((v221 & (LODWORD(STACK[0x6380]) ^ 0xF90A78D2) ^ v231 & 0x5EB43C8B) & 0x3709ED38 ^ 0x30082429)
        + ((v221 & (LODWORD(STACK[0x6380]) ^ 0xF90A78D2) ^ v231 & 0x5EB43C8B) & 0xC8F612C6)
        - 1) >> 1;
  v287 = ((v286 ^ 0x39460850) - 2 * ((v286 ^ 0x39460850) & STACK[0x141C] ^ v286 & 2) - 1480702887) ^ LODWORD(STACK[0x6380]);
  LOBYTE(v183) = STACK[0x5E88];
  LOBYTE(v221) = STACK[0x5E80];
  LODWORD(STACK[0x63C8]) = ((((v287 & v239 & STACK[0x1424] ^ 0x14520211) + (v287 & v239 & 0xEBACBD25) - 1) ^ 0x14520210) << v183 << v221)
                         + ((v287 & v14) >> v140);
  v288 = v49 & 0x12585A79 ^ 0x10184231 ^ v257 & (LODWORD(STACK[0x6368]) ^ 0xB5E61E20);
  v289 = (((STACK[0x1420] & (2 * v288)) - v288 - 1671962856) >> 1) ^ 0x4E03CE90;
  v290 = (v289 - ((2 * v289) & 0x4F7C88B2) - 1480702887) ^ LODWORD(STACK[0x6368]);
  LODWORD(STACK[0x6380]) = ((((v281 & v290 ^ 0x80B4) + 1115881555 - ((2 * (v281 & v290 ^ 0x80B4)) & 0x85061F30) + 3909) ^ 0x42838F2C) >> v140)
                         + ((((v239 & v290 ^ 0x20520815 | 0x8CFBCE4)
                            - (v239 & v290 ^ 0x20520815 | 0xF730431B)
                            - 147832037) ^ 0x289DB4F1) << v242 << v243);
  v291 = v32 & 0xE9E01935 ^ 0x40201801 ^ v285 & (LODWORD(STACK[0x6388]) ^ 0x4E5E5D6C);
  v292 = ((-1056555265 - v291 + ((2 * v291) | 0x7DF37708) + 1405) >> 1) ^ 0x5F0CD952;
  v293 = (v292 - ((2 * v292) & 0x4F7C88B2) - 1480702887) ^ LODWORD(STACK[0x6388]);
  LODWORD(STACK[0x6388]) = ((((v293 & v14 & 0xDA5CA166 ^ 0x8258A164)
                            + (v293 & v14 ^ 0x58041A03)
                            - ((v293 & v14 ^ 0x58041A03) & 0xDA5CA166)) ^ 0x8258BB65) >> v55)
                         + ((v293 & v15) << LODWORD(STACK[0x69C0]) << LODWORD(STACK[0x6960]));
  v294 = (v49 ^ 0xEC8F3243) & (LODWORD(STACK[0x6370]) ^ 0x84BF1768) ^ STACK[0x6370] & 0x55451748;
  v295 = (((v294 & 0x5491FDF0 ^ 0x5090FDF1 | v294 & 0xAB6E020E) - 1) >> 1) ^ 0x2A4AF55C;
  v296 = (v295 - ((2 * v295) & 0x97E2ED0) - 2067851416) ^ LODWORD(STACK[0x6370]);
  LODWORD(STACK[0x6370]) = ((((v15 & v296 ^ 0x45A00C60 | 0xABD4CC48)
                            - (v15 & v296 ^ 0x45A00C60 | 0x542B33B7)
                            + 1412117431) ^ LODWORD(STACK[0x1428])) << v221 << v183) ^ ((((v296 & v14 ^ 0xFFFFD2FF)
                                                                                        + 1865863406
                                                                                        + ((2 * (v296 & v14)) | 0x21925E26)) ^ 0x90C90213) >> v55);
  v297 = v49 & 0xA702514B ^ 0xA2025143 ^ v257 & (LODWORD(STACK[0x6330]) ^ 0x23BD4623);
  v298 = ((v297 | 0x2A9DCB49) - (v297 | 0xD56234B6) - 714984266) >> 1;
  v299 = ((v298 ^ 0x14CECD80) - 2 * ((v298 ^ 0x14CECD80) & 0x4BF176E ^ v298 & 6) - 2067851416) ^ LODWORD(STACK[0x6330]);
  v300 = v264 & 0xA ^ 2;
  LODWORD(STACK[0x66A0]) = v300;
  v301 = ((((2 * (v15 & v299 ^ 0xC1429089)) & 0x26B3669A) - (v15 & v299 ^ 0xC1429089) + 1822837938) ^ 0xADE4DC3B) << v300;
  v302 = v264 & 0x15 ^ 0x10;
  LODWORD(STACK[0x6670]) = v302;
  LODWORD(STACK[0x6368]) = (v301 << v302) ^ ((v281 & v299) >> v55);
  v303 = (((v285 & (LODWORD(STACK[0x6378]) ^ 0x7118E5E5) ^ v32 & 0xF5A7F28D) & 0x628D2703 ^ 0x228D2702)
        + ((v285 & (LODWORD(STACK[0x6378]) ^ 0x7118E5E5) ^ v32 & 0xF5A7F28D) & 0x9D72D8FC ^ 0x8420908D)
        - 1) >> 1;
  v304 = ((v303 ^ 0x33140283) - 2 * ((v303 ^ 0x33140283) & 0x4BF177C ^ v303 & 0x14) - 2067851416) ^ LODWORD(STACK[0x6378]);
  LODWORD(STACK[0x6378]) = ((((v304 & v14 ^ 0x20410211) - ((2 * (v304 & v14 ^ 0x20410211)) & 0x82EE3FC0) - 1049157664) ^ 0xE1361DF1) >> v55) ^ ((v304 & v15) << LODWORD(STACK[0x69D0]) << LODWORD(STACK[0x6980]));
  v305 = (v32 ^ 0x99C93610) & (LODWORD(STACK[0x6348]) ^ 0x84BF1768) ^ STACK[0x6348] & 0x5B0481B8;
  v306 = (((v305 >> 1) ^ 0x20094) - 2 * (((v305 >> 1) ^ 0x20094) & 0x4BF176B ^ (v305 >> 1) & 3) - 2067851416) ^ LODWORD(STACK[0x6348]);
  LODWORD(STACK[0x6360]) = ((((v306 & v15 & 0x48AC456C ^ 0x48AC4421) + (v306 & v15 & 0xB753BA93) - 1) ^ 0x48AC4420) << v271 << v200) ^ (((((2 * (v306 & v281 ^ 0x308050A8)) | 0x7A69C2EC) - (v306 & v281 ^ 0x308050A8) - 1026875766) ^ 0xDB4B1DEu) >> v55);
  v307 = STACK[0x63A8] & 0x3F582ACE ^ 0x1502808 ^ (v49 ^ 0x86920FC5) & (LODWORD(STACK[0x63A8]) ^ 0x8EFD7F73);
  v308 = ((((2 * v307) & 0x1719CDF2) - v307 + 1953700102) >> 1) ^ 0x3DBD8DA6;
  v309 = (v308 - ((2 * v308) & 0x1DFAFEE6) - 1895989389) ^ LODWORD(STACK[0x63A8]);
  LODWORD(STACK[0x63A8]) = ((((v15 & v309 ^ 0xC4011A00 | 0x10B3EF2E) - (v15 & v309 ^ 0xC4011A00 | 0xEF4C10D1) - 280227631) ^ 0xD4B2F52E) << v157 << v252)
                         + ((v309 & v14) >> v55);
  v310 = v32;
  v311 = ((((v285 & (LODWORD(STACK[0x6328]) ^ 0x4C01336B) ^ v231 & 0xC2FC4C18) & 0x480DF3E1 ^ 0x805F3E1)
         + ((v285 & (LODWORD(STACK[0x6328]) ^ 0x4C01336B) ^ v231 & 0xC2FC4C18) & 0xB7F20C1E ^ 0xF00819)
         - 1) >> 1) ^ 0x651CFFF8;
  v312 = (v311 - ((2 * v311) & 0x1DFAFEE6) - 1895989389) ^ LODWORD(STACK[0x6328]);
  v313 = v239;
  LODWORD(STACK[0x5EB8]) = v239;
  LODWORD(STACK[0x6348]) = ((((v312 & v281 ^ 0x4D1F0842 | 0xE17F22B7)
                            - (v312 & v281 ^ 0x4D1F0842 | 0x1E80DD48)
                            + 511761736) ^ 0xAC602AF5) >> v55)
                         + ((v312 & v239) << v195 << v260);
  v314 = (v32 ^ 0x84C2EFDE) & (LODWORD(STACK[0x63B0]) ^ 0x8EFD7F73) ^ STACK[0x63B0] & 0x460F5876;
  v315 = (((v314 & 0x469D1763 ^ 0x429D1701) + (v314 ^ 0x4000862) - ((v314 ^ 0x4000862) & 0x469D1763)) >> 1) ^ 0x224823B9;
  v316 = (v315 - ((2 * v315) & 0x1DFAFEE6) - 1895989389) ^ LODWORD(STACK[0x63B0]);
  v317 = v281;
  v318 = (((v316 & v281 ^ 0x4105610 | 0x4ECC6FF0) - (v316 & v281 ^ 0x4105610 | 0xB133900F) - 1322020849) ^ LODWORD(STACK[0x142C])) >> v55;
  LOBYTE(v239) = STACK[0x6648];
  LOBYTE(v281) = STACK[0x6630];
  LODWORD(STACK[0x63B0]) = ((((v316 & v15 & 0x82FF7D8F ^ 0x827D6D81) + (v316 & v15 & 0x7D008270 ^ 0x10000201) - 1) ^ 0x927D6F81) << v239 << v281) ^ v318;
  v319 = v285;
  v320 = ((v285 & (LODWORD(STACK[0x6350]) ^ 0x1289B58C) ^ v32 & 0x9C74CAFE) >> 1) ^ 0x40224154;
  v321 = (v320 - ((2 * v320) & 0x1DFAFEE6) - 1895989389) ^ LODWORD(STACK[0x6350]);
  v322 = v317;
  LODWORD(STACK[0x5E90]) = v317;
  LOBYTE(v257) = STACK[0x6870];
  LOBYTE(v252) = STACK[0x6970];
  LODWORD(STACK[0x6330]) = ((((v321 & v15 ^ 0x80030300 | 0x7E1F717) - (v321 & v15 ^ 0x80030300 | 0xF81E08E8) - 132249368) ^ 0x87E2F417) << v257 << v252) ^ ((((v321 & v317 ^ 0x90C62210 | 0xC8EEB739) - (v321 & v317 ^ 0x90C62210 | 0x371148C6) + 923879622) ^ 0x58289529) >> v140);
  v323 = STACK[0x6358] & 0x929B4EB4 ^ 0x90810830 ^ (v49 ^ 0x2B516BBF) & (LODWORD(STACK[0x6358]) ^ 0x8A041402);
  v324 = ((v323 - ((2 * v323) & 0x3A9D739E) + 491698639) >> 1) ^ 0x7E7DAFF;
  v325 = (v324 - ((2 * v324) & 0x14082804) - 1979444222) ^ LODWORD(STACK[0x6358]);
  v326 = v264 & 0x16 ^ 0x12;
  LODWORD(STACK[0x63E8]) = v326;
  LODWORD(STACK[0x63E0]) = v264 & 9;
  LODWORD(STACK[0x6358]) = ((v313 & v325) << v326 << (v264 & 9))
                         + ((((v325 & v14 ^ 0x2108002)
                            - (v325 & v14 & 0xECC45490)
                            + (v325 & v14 & 0xECC45490 ^ 0xECC45490)) ^ 0xEED4D492) >> v140);
  v327 = ((((v319 & (LODWORD(STACK[0x6390]) ^ 0xE4BB028E) ^ v310 & 0x6EBF168C) & 0x25A3AFA9 ^ 0x2523A921)
         + (v319 & (LODWORD(STACK[0x6390]) ^ 0xE4BB028E) ^ v310 & 0x6EBF168C ^ 0xA980688)
         - ((v319 & (LODWORD(STACK[0x6390]) ^ 0xE4BB028E) ^ v310 & 0x6EBF168C ^ 0xA980688) & 0x25A3AFA9)) >> 1) ^ 0x36DB5FD4;
  v328 = (v327 - 1979444222 + (~(2 * v327) | 0xEBF7D7FB) + 1) ^ LODWORD(STACK[0x6390]);
  v329 = v14;
  LODWORD(STACK[0x6390]) = (((((2 * (v328 & v14 ^ 0x84108803)) | 0x35CE9088) - (v328 & v14 ^ 0x84108803) + 1696118716) ^ 0x1EF7C047) >> v55) ^ ((v328 & v15) << v252 << v257);
  v330 = v49;
  v331 = (v49 ^ 0xFFCDF59D) & (LODWORD(STACK[0x6338]) ^ 0x8A041402) ^ STACK[0x6338] & 0x4607D096;
  v332 = (((v331 & 0x595B3A96 ^ 0x595A3A17 | v331 & 0xA6A4C568) - 1) >> 1) ^ 0x2DAF150A;
  v333 = (v332 - ((2 * v332) & 0x14082804) - 1979444222) ^ LODWORD(STACK[0x6338]);
  v334 = v55;
  v335 = STACK[0x6488];
  LODWORD(STACK[0x6350]) = ((((v15 & v333 ^ 0x1080848A) - ((2 * (v15 & v333 ^ 0x1080848A)) & 0xF419DE60) - 99815632) ^ 0xEA8C6BBA) << LODWORD(STACK[0x6488]) << LODWORD(STACK[0x66D8]))
                         + ((v322 & v333) >> v55);
  v336 = (v49 ^ 0xBCD8BA85) & (LODWORD(STACK[0x6398]) ^ 0x8A041402) ^ STACK[0x6398] & 0x5129F8E;
  v337 = (((v336 & 0x52A49653 ^ 0x2A48051) + (v336 & 0xAD5B69AC ^ 0xA102480D) - 1) >> 1) ^ 0x51D36E2F;
  v338 = (v337 - ((2 * v337) & 0x14082804) - 1979444222) ^ LODWORD(STACK[0x6398]);
  v339 = v338 & v329 & STACK[0x1430] ^ 0xB80003;
  LODWORD(STACK[0x5EC0]) = v15;
  LODWORD(STACK[0x6398]) = ((v15 & v338) << v239 << v281)
                         + ((((v338 & v329 & 0xB303EBFD ^ 0xB303EBF5) + v339 - 1) ^ 0xB3BBEBF7) >> v140);
  v340 = STACK[0x6498];
  v341 = ((((v340 & (LODWORD(STACK[0x63A0]) ^ 0xA9C54256) ^ v49 & 0xEE15040C) >> 1) ^ 0x54000204)
        - 2
        * ((((v340 & (LODWORD(STACK[0x63A0]) ^ 0xA9C54256) ^ v49 & 0xEE15040C) >> 1) ^ 0x54000204) & 0x47D0465B ^ ((v340 & (LODWORD(STACK[0x63A0]) ^ 0xA9C54256) ^ v49 & 0xEE15040C) >> 1) & 1)
        + 1204831834) ^ LODWORD(STACK[0x63A0]);
  LODWORD(STACK[0x63A0]) = v341;
  LODWORD(STACK[0x63D8]) = ((2 * (v15 & v341 ^ 0x5843109)) & 0xF3F956C) - (v15 & v341 ^ 0x5843109);
  v342 = ((LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x65A8]) ^ 0xE90A7FCE)
        - 1002748419
        - ((2 * (LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x65A8]) ^ 0xE90A7FCE)) & 0x88768BFA)) ^ LODWORD(STACK[0x6620]);
  v343 = (v342 - 63772163 - ((2 * v342) & 0xF865D3FA)) ^ LODWORD(STACK[0x65B0]);
  v344 = (v343 + 942100875 - ((2 * v343) & 0x704EA316)) ^ LODWORD(STACK[0x6628]);
  v345 = LODWORD(STACK[0x5EB0]) ^ (v344 - ((2 * v344) & 0x492EAC9E) + 613897807);
  v346 = (v345 - 2014434786 - ((2 * v345) & 0xFDC543C)) ^ LODWORD(STACK[0x6688]);
  v347 = (v346 - ((2 * v346) & 0x4C073264) - 1509713614) ^ LODWORD(STACK[0x64D0]);
  v348 = LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x65B8]) ^ LODWORD(STACK[0x65D0]) ^ LODWORD(STACK[0x64D8]) ^ (v347 - ((2 * v347) & 0xADC1644C) - 689917402);
  v349 = LODWORD(STACK[0x64E0]) ^ LODWORD(STACK[0x6650]) ^ ((v348 ^ 0x105BD6F9)
                                                          - 2 * ((v348 ^ 0x105BD6F9) & 0x3BDDF1CB ^ v348 & 2)
                                                          - 1143082551);
  v350 = (v349 - 657299708 - ((2 * v349) & 0xB1A4CE08)) ^ LODWORD(STACK[0x67F0]);
  v351 = (v350 - 657299708 - ((2 * v350) & 0xB1A4CE08)) ^ LODWORD(STACK[0x6690]);
  v352 = (v351 - ((2 * v351) & 0x5AE84ED8) + 762586988) ^ LODWORD(STACK[0x6598]);
  v353 = ((v352 ^ 0x8EFD841A) & v340 ^ v49 & 0xABEC12A6) >> 1;
  v354 = ((v353 ^ 0x54E40001) - 2 * ((v353 ^ 0x54E40001) & 0x2CC30B2F ^ v353 & 8) + 750979879) ^ v352;
  v355 = STACK[0x6A50];
  v356 = v354 & 0x4796988D ^ 0x40960885 ^ (v354 ^ 0x9D29D9B) & (LODWORD(STACK[0x6A50]) ^ 0x4796980D);
  v357 = v354 & 0x832ECACD ^ 0x8324400D ^ (v354 ^ 0x9D29D9B) & (LODWORD(STACK[0x6A40]) ^ 0x7A65B43C);
  v358 = v264;
  v359 = ((v357 - ((2 * v357) & 0x1410C678) + 168321852) ^ 0x882EABB8) << (v264 & 0x8B ^ 0x82) << (v264 & 0x14 ^ 0x10);
  LODWORD(STACK[0x68D0]) = (((((2 * v356) | 0xEAA9B98A) - v356 + 178987835) ^ 0xB4504CC9) >> v55)
                         - 1558605337
                         + (((v359 ^ 0x85CC1859) - 651528638) ^ ((v359 ^ 0x2BD6D566) + 1999682431) ^ ((v359 ^ 0xAE1ACD3F) - 218324184));
  v360 = LODWORD(STACK[0x6660]) ^ (LODWORD(STACK[0x65E0]) - 881007372 - ((2 * LODWORD(STACK[0x65E0])) & 0x96F9C9E8)) ^ (LODWORD(STACK[0x6698]) - (STACK[0x6400] & 0xA72ECF28) - 745052268) ^ LODWORD(STACK[0x64A0]) ^ LODWORD(STACK[0x65C0]) ^ LODWORD(STACK[0x6720]) ^ 0x55CA5F9B;
  v361 = (v360 - ((2 * v360) & 0x52681D14) - 1456206198) ^ LODWORD(STACK[0x65A0]);
  v362 = (v361 - 673783638 - ((2 * v361) & 0xAFADC154)) ^ LODWORD(STACK[0x6668]);
  v363 = LODWORD(STACK[0x6490]) ^ (v362 - ((2 * v362) & 0x4F7F57B4) + 666872794);
  v364 = LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x5EA0]) ^ LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x5E98]) ^ (v363 - ((2 * v363) & 0x8351A1CC) + 1101582566);
  v365 = (((v364 ^ 0xCA78BC64) - 2 * ((v364 ^ 0xCA78BC64) & STACK[0x1434] ^ v364 & 2) - 1174957571) ^ LODWORD(STACK[0x5EA8])) & 0xE274B815 | (((v364 ^ 0xCA78BC64) - ((2 * (v364 ^ 0xCA78BC64)) & 0x13EF23FA) + 435655165) ^ LODWORD(STACK[0x5EA8])) & 0x1D8B47EA;
  v366 = (v365 - 510807395 - ((2 * v365) & 0xC31B653A)) ^ LODWORD(STACK[0x6480]);
  v367 = (v366 - 1152024318 - ((2 * v366) & 0x76AB0204)) ^ LODWORD(STACK[0x65E8]);
  v368 = v319;
  v369 = (((((v367 ^ 0x79AEB11F) & v319 ^ v310 & 0x5CBF27A3) & 0x6DA8A53 ^ 0x6D28A51)
         + ((v367 ^ 0x79AEB11F) & v319 ^ v310 & 0x5CBF27A3 ^ 0x402D0182)
         - (((v367 ^ 0x79AEB11F) & v319 ^ v310 & 0x5CBF27A3 ^ 0x402D0182) & 0x6DA8A53u)) >> 1) ^ 0x33D5638;
  v370 = (v369 - ((2 * v369) & 0x702FBDE) - 2088665617) ^ v367;
  v371 = STACK[0x6A20];
  v372 = v370 & 0x152387CA ^ 0x11220548 ^ (v370 ^ 0xA690EB53) & (LODWORD(STACK[0x6A20]) ^ 0x3663EC2A);
  v373 = STACK[0x6A30];
  v374 = ((v372 - ((2 * v372) & 0x46BCB19A) - 1554097971) ^ 0xB67CDEC7) >> v140;
  v375 = (v370 & 0x39E5ADCC ^ 0x2080A940 ^ (v370 ^ 0xA690EB53) & (LODWORD(STACK[0x6A30]) ^ 0xD25353B6)) << LODWORD(STACK[0x6730]) << LODWORD(STACK[0x68B0]);
  v376 = STACK[0xD628];
  STACK[0x6800] = STACK[0xD628];
  v377 = STACK[0x6460];
  v378 = *(unsigned __int8 *)(STACK[0x6460] + (*(unsigned __int8 *)(v376 + 15) ^ 0xDALL));
  LODWORD(STACK[0x6810]) = v374 ^ v375;
  v379 = STACK[0x6478];
  v380 = *(unsigned __int8 *)(v377 + (*(unsigned __int8 *)(v376 + 4) ^ 0xDFLL));
  v381 = ((((v380 >> 3) | (32 * v380)) ^ 0x29) << 24) | ((((*(_BYTE *)(v376 + 5) ^ 0xC7)
                                                                          + *(_BYTE *)(STACK[0x6470]
                                                                                     + (*(unsigned __int8 *)(v376 + 5) ^ 0x91))
                                                                          - 100) ^ 0x87) << 16);
  v382 = *(unsigned __int8 *)(v376 + 14);
  v383 = ((v378 >> 3) | (32 * v378)) ^ 0x4B;
  v384 = *(unsigned __int8 *)(v377 + (*(unsigned __int8 *)(v376 + 9) ^ 0x73));
  v385 = v381 & 0xFFFF0000 | ((((*(_BYTE *)(v376 + 6) ^ 0x86)
                                               + (*(_BYTE *)(v376 + 6) ^ 0x1F)
                                               + *(_BYTE *)(STACK[0x6478] + (*(unsigned __int8 *)(v376 + 6) ^ 0xACLL))
                                               + 2) ^ 0x16) << 8) | (*(_BYTE *)(STACK[0x6468]
                                                                                               + (*(unsigned __int8 *)(v376 + 7) ^ 0xCLL))
                                                                                    - 63) ^ 0xDB;
  v386 = v385
       - 2
       * (v385 & 0x4D41A96C ^ ((*(_BYTE *)(STACK[0x6468] + (*(unsigned __int8 *)(v376 + 7) ^ 0xCLL))
                                               - 63) ^ 0xDB) & 8);
  v387 = (((*(_BYTE *)(STACK[0x6468] + (*(unsigned __int8 *)(v376 + 13) ^ 0xD3)) - 63) ^ 0x3E) << 16) | (((*(unsigned __int8 *)(STACK[0x6468] + (*(unsigned __int8 *)(v376 + 12) ^ 0x69)) - 63) ^ 0xEB) << 24) | v383 | (((*(_BYTE *)(STACK[0x6470] + (v382 ^ 0xF0)) - (v382 ^ 0x59) - 101) ^ 0x9A) << 8);
  v388 = v387 - 2 * (v387 & 0x29017B1F ^ v383 & 5);
  v389 = ((((v384 >> 3) | (32 * v384)) ^ 0x9F) << 16) | ((((*(_BYTE *)(v376 + 10) ^ 0x1A)
                                                                                           + (*(_BYTE *)(v376 + 10) ^ 0x83)
                                                                                           + *(_BYTE *)(STACK[0x6478] + (*(unsigned __int8 *)(v376 + 10) ^ 0x30))
                                                                                           + 2) ^ 0x9B) << 8);
  LOBYTE(v183) = (*(_BYTE *)(v376 + 11) ^ 0x3B) + *(_BYTE *)(STACK[0x6470] + (*(unsigned __int8 *)(v376 + 11) ^ 0x6DLL));
  v390 = ((((*(_BYTE *)(v376 + 2) ^ 0x25)
                           + (*(_BYTE *)(v376 + 2) ^ 0xBC)
                           + *(_BYTE *)(v379 + (*(unsigned __int8 *)(v376 + 2) ^ 0x96))
                           + 2) ^ 0xE6) << ((v382 ^ 0x59) & 8) << ((v382 ^ 0x59) & 8 ^ 8)) ^ (((*(_BYTE *)(v376 + 3) ^ 0x84) + ((2 * *(_BYTE *)(v376 + 3)) & 0xCA ^ 0xF7) + *(_BYTE *)(STACK[0x6470] + (*(unsigned __int8 *)(v376 + 3) ^ 0xB7)) + 2) | ((((*(_BYTE *)(v376 + 1) ^ 0xD8) + (*(_BYTE *)(v376 + 1) ^ 0x41) + *(_BYTE *)(v379 + (*(unsigned __int8 *)(v376 + 1) ^ 0x6BLL)) + 2) ^ 0x76) << 16)) | (((*(unsigned __int8 *)(STACK[0x6468] + (*(unsigned __int8 *)v376 ^ 0x15)) - 63) ^ 0x11111111) << 24);
  LODWORD(v382) = ((v390 ^ 0xB09746DE) & STACK[0x6498] ^ v330 & 0xB0974600) >> 1;
  LODWORD(v382) = ((v382 ^ 0x58410200) + 1135480091 - 2 * ((v382 ^ 0x58410200) & 0x43AE0DC6 ^ v382 & 2) + 169) ^ v390;
  LODWORD(v376) = *(unsigned __int8 *)(v377 + (*(unsigned __int8 *)(v376 + 8) ^ 0xD9));
  v391 = v355;
  v392 = v382 & 0x3D44A84D ^ 0x440840 ^ (v382 ^ 0x43AE0D1B) & (v355 ^ 0x3D44A8CD);
  LODWORD(v382) = v382 & 0x62FED9F4 ^ 0x60049844 ^ (v382 ^ 0x43AE0D1B) & (v373 ^ 0x8948278E);
  LODWORD(v382) = ((398982500 - (_DWORD)v382 + ((2 * (_DWORD)v382) & 0xD07020F4) - 3551) ^ 0x356D7ED1) << LODWORD(STACK[0x6570]) << LODWORD(STACK[0x6568]);
  LODWORD(v376) = v389 & 0xFFFFFF00 | ((((v376 >> 3) | (32 * (_DWORD)v376)) ^ 0x5A) << 24) | (v183 - 100) ^ 0x58;
  v393 = v386 - 851334812;
  v394 = ((v386 - 851334812) ^ 0xCD41A964) & (v32 ^ 0xF8DBFBEA) ^ (v386 - 851334812) & 0x3A164C42;
  v395 = (((v394 >> 1) ^ 0x4000420) - 2 * (((v394 >> 1) ^ 0x4000420) & 0x4D41A965 ^ (v394 >> 1) & 1) - 851334812) ^ v393;
  LODWORD(v376) = v376 - 2 * (v376 & 0x3D44558F ^ ((v183 - 100) ^ 0x58) & 3) - 1119595124;
  v396 = (v376 ^ 0xBD44558C) & (v330 ^ 0x42ECBFAA) ^ v376 & 0xFB269AA1;
  v397 = STACK[0x5EB8];
  v398 = (((((2 * (v395 & v329 ^ 0x842C464)) | 0x82B99936) - (v395 & v329 ^ 0x842C464) - 1096600731) ^ 0x491E08FF) >> v140) | ((v395 & STACK[0x5EB8]) << (v264 & 0xB ^ 2) << (STACK[0x69E0] & 0x14 ^ 0x10));
  v399 = (((v396 & 0x70D6D02 ^ 0x70D6503 | v396 & 0xF8F292FC) - 1) >> 1) ^ 0x5F04BAC1;
  LODWORD(v376) = (v399 - ((2 * v399) & 0x7A88AB18) - 1119595124) ^ v376;
  v388 += 687962906;
  v400 = ((((v388 ^ 0x6D6842BE) & v368 ^ v310 & 0x446939A4 ^ 0xFBD7D7DE)
         + 1597751036
         + ((2 * ((v388 ^ 0x6D6842BE) & v368 ^ v310 & 0x446939A4)) & 0x41888208)) >> 1) ^ 0xDAD53BD;
  v401 = (v400 - ((2 * v400) & 0x5202F634) + 687962906) ^ v388;
  v402 = STACK[0x5E90];
  LODWORD(STACK[0x64E0]) = STACK[0x5ED0] & LODWORD(STACK[0x5E90]);
  LODWORD(STACK[0x64A0]) = STACK[0x5EC8] & v402;
  v403 = v376 & v397;
  v404 = (v376 & v402 ^ LODWORD(STACK[0x1438])) - ((2 * (v376 & v402 ^ LODWORD(STACK[0x1438]))) & 0xF60277E8);
  v405 = STACK[0x63A0] & v329;
  v406 = STACK[0x6890];
  v407 = STACK[0x6860];
  v408 = ((((v401 & STACK[0x5EC0] ^ 0x201D0A19 | 0xB329E11)
          - (v401 & STACK[0x5EC0] ^ 0x201D0A19 | 0xF4CD61EE)
          - 187866642) ^ 0x2B2F9408) << LODWORD(STACK[0x6890]) << LODWORD(STACK[0x6860])) | ((v401 & v329) >> v55);
  v409 = STACK[0x69F0];
  v410 = ((2 * (v409 & 0x620CF5D7 ^ 0x6208B583)) & 0x419432C) - (v409 & 0x620CF5D7 ^ 0x6208B583) + 2111919689;
  v411 = (v410 & 0xAC2A88AC ^ 0x8D480805) + (v410 & 0x52157753) - 1;
  v412 = v411 ^ 0x377CD1B5;
  v411 ^= 0x52811043u;
  v413 = STACK[0x6A40];
  v414 = v412 & (LODWORD(STACK[0x6A40]) ^ 0x74C9C34A) ^ v411 & 0x8D82BDBB ^ 0x89029D10;
  v415 = v414 - ((2 * v414) & 0x713B44F4);
  v416 = STACK[0x6970];
  LOBYTE(v379) = STACK[0x6870];
  v417 = ((LODWORD(STACK[0x63D8]) - 127912631) ^ 0xFDE40440) << v416 << v379;
  v418 = v412 & (v371 ^ 0xF299D3D5) ^ 0x51C1B824 ^ v411 & 0xD1D9B835;
  v419 = (((((2 * v392) & 0x1184E2F8) - v392 - 146960765) ^ 0xF67D8ECA) >> v334) ^ ((((v415 - 1197628806) ^ 0x341FBED8) << v416 << v379) | (((v418 - ((2 * v418) & 0x5A8BC41E) + 759554575) ^ 0x3D5DDA1F) >> v334)) ^ v382;
  LODWORD(STACK[0x69E0]) = v419;
  LODWORD(v377) = STACK[0x6A10];
  v420 = ((v377 & 0xA620814 ^ 0x16201C2D) + (v377 & 0x200D61C1) + 0x3FFFFFFF) ^ 0x200921C1;
  LODWORD(v382) = v420 & 0x2A6F69DD ^ 0x7E92FAE2;
  v421 = v420 & 0x224904 ^ 0x41024900 ^ (v373 ^ 0x3A04B37C) & v382;
  v422 = v391;
  v423 = (((((v391 ^ 0x87DF82D) & v382 ^ v420 & 0x86D688D) & 0x7E3991EE ^ 0x773911EF)
         + (((v391 ^ 0x87DF82D) & v382 ^ v420 & 0x86D688D) & 0xC66A11)
         - 1) ^ LODWORD(STACK[0x143C])) >> v140;
  LODWORD(STACK[0x6910]) = v358 & 0xD;
  LODWORD(STACK[0x6870]) = ~v358 & 0x12;
  v424 = v398 ^ ((((((2 * v421) | 0x572F6E26) - v421 + 1416120557) ^ 0xBA07B611) << (v358 & 0xD) << (~(_BYTE)v358 & 0x12)) | v423);
  LODWORD(STACK[0x6400]) = v424;
  v425 = (v377 & 0x261260A ^ 0x5330270B) + (v377 & 0x8CC8A4 ^ 0x8C1885) - 2;
  v426 = v425 ^ LODWORD(STACK[0x1440]);
  LODWORD(v382) = v425 & 0x12EB7DD2 ^ 0x685910 ^ (v373 ^ 0x15D83A8) & v426;
  v427 = (v403 << (v358 & 0xD) << (~(_BYTE)v358 & 0x12)) ^ ((((((2 * (_DWORD)v382) | 0x6A6C46D0)
                                                             - (_DWORD)v382
                                                             - 892740456) ^ 0x27DC1A2A) << v406 << v407) | ((v425 & 0xED5400 ^ 0x4904000 ^ (v422 ^ 0x4FD5480) & v426) >> v140)) ^ (((v404 - 83805196) ^ 0x5B4578ACu) >> v140);
  LODWORD(v382) = ((v409 & 0x1E8432AC ^ 0x1E002224 | 0x7F98935F)
                 - (v409 & 0x1E8432AC ^ 0x1E002224 | 0x80676CA0)
                 - 2140705632) ^ 0x8A5572CA;
  LODWORD(v382) = v382 - ((2 * v382) & 0x7AF51B02) + 1031441793;
  v428 = (v382 ^ 0xEBBB39ED) & (v413 ^ 0xEA0FC95F) ^ v382 & 0x1344B7AE;
  v429 = v408 ^ (((((v428 & 0xACAAA7BA ^ 0xACAA81B2) + (v428 ^ 0x1402608) - ((v428 ^ 0x1402608) & 0xACAAA7BA)) ^ 0xAEEAB01E) << v335 << LODWORD(STACK[0x66D8]))
               + ((unint64_t)(v382 & 0xCBE9B5A8 ^ 0xCBA931A8 ^ (v382 ^ 0xEBBB39ED) & (v371 ^ 0xE8A9DE48)) >> v334));
  LODWORD(STACK[0x63A0]) = v429;
  v430 = STACK[0x5EE0];
  v431 = 1692361169 * (LODWORD(STACK[0x5EE0]) - LODWORD(STACK[0x66C8]) + v429);
  v432 = v431 ^ LODWORD(STACK[0x5F00]);
  v433 = v431 & 4;
  if ((v431 & 4 & v432) != 0)
    v433 = -v433;
  v434 = (v433 + v432) ^ v431 & 0xFFFFFFFB;
  v435 = STACK[0x6408];
  v436 = 1692361169 * ((v405 >> v140) - LODWORD(STACK[0x6408]) + v417 + v429);
  LODWORD(STACK[0x63D8]) = v427;
  v437 = -235766893 * (v436 + HIWORD(v436) + ((v436 + HIWORD(v436)) >> 8) - v427);
  v438 = -235766893 * (v431 + HIWORD(v431) + ((v431 + HIWORD(v431)) >> 8) - v427);
  v439 = v438 + HIWORD(v438) - ((v438 + HIWORD(v438)) >> 8);
  v440 = ((LODWORD(STACK[0x6528]) ^ -LODWORD(STACK[0x6528]) ^ (v439 - (v439 ^ LODWORD(STACK[0x6528])))) + v439) ^ v439;
  v441 = STACK[0x66D0] + LODWORD(STACK[0x6458]);
  v442 = LODWORD(STACK[0x6430]) + LODWORD(STACK[0x6438]);
  LODWORD(STACK[0x67F0]) = v441 + LODWORD(STACK[0x6428]) + LODWORD(STACK[0x6410]);
  v443 = 1395682593 * (v437 + HIWORD(v437) - v424 - ((v437 + HIWORD(v437)) >> 8));
  v444 = -2048965681 * ((v443 + HIWORD(v443) + ((v443 + HIWORD(v443)) >> 8)) ^ v419);
  v445 = v444 ^ HIWORD(v444) ^ ((v444 ^ HIWORD(v444)) >> 8);
  v446 = STACK[0xD618];
  STACK[0x6438] = STACK[0xD618];
  LODWORD(STACK[0x64D8]) = v441 + v442 + v446 - 332551831 + v445;
  v447 = v445 + v446;
  v448 = STACK[0x5F20];
  v449 = STACK[0x5F10];
  if ((v447 & 1) != 0)
    v450 = STACK[0x5F20];
  else
    v450 = STACK[0x5F10];
  LODWORD(STACK[0x67E0]) = v450;
  v451 = STACK[0x5EF8];
  if ((v447 & 1) != 0)
    v452 = v449;
  else
    v452 = STACK[0x5EF8];
  v453 = STACK[0x5F18];
  if ((v447 & 1) == 0)
    v451 = STACK[0x5F18];
  LODWORD(STACK[0x6680]) = v451;
  if ((v447 & 1) != 0)
    v454 = v453;
  else
    v454 = v448;
  v455 = STACK[0x64E8];
  v456 = STACK[0x64C8];
  if ((v447 & 1) != 0)
    v457 = STACK[0x64C8];
  else
    v457 = STACK[0x64E8];
  LODWORD(STACK[0x6760]) = v457;
  v458 = STACK[0x6548];
  if ((v447 & 1) == 0)
    v455 = STACK[0x6548];
  LODWORD(STACK[0x6620]) = v455;
  v459 = STACK[0x5F60];
  if ((v447 & 1) == 0)
    v458 = STACK[0x5F60];
  LODWORD(STACK[0x6678]) = v458;
  if ((v447 & 1) != 0)
    v460 = v459;
  else
    v460 = v456;
  v461 = STACK[0x6550];
  v462 = STACK[0x5EF0];
  if ((v447 & 1) != 0)
    v463 = STACK[0x5EF0];
  else
    v463 = STACK[0x6550];
  LODWORD(STACK[0x6720]) = v463;
  if ((v447 & 1) != 0)
    v464 = v461;
  else
    v464 = LODWORD(STACK[0x6500]);
  if ((v447 & 1) != 0)
    v465 = v434;
  else
    v465 = v462;
  if ((v447 & 1) != 0)
    v466 = STACK[0x6500];
  else
    v466 = v434;
  *(_QWORD *)(v2 - 152) = v464;
  v467 = STACK[0x5F68];
  v468 = STACK[0x65F8];
  if ((v447 & 1) != 0)
    v469 = STACK[0x65F8];
  else
    v469 = STACK[0x5F68];
  LODWORD(STACK[0x6668]) = v469;
  v470 = STACK[0x5F28];
  if ((v447 & 1) != 0)
    v468 = STACK[0x5F28];
  LODWORD(STACK[0x66A8]) = v468;
  if ((v447 & 1) != 0)
    v471 = STACK[0x5EE8];
  else
    v471 = v470;
  if ((v447 & 1) != 0)
    v472 = v467;
  else
    v472 = STACK[0x5EE8];
  v473 = STACK[0x6520];
  v474 = STACK[0x5F70];
  if ((v447 & 1) != 0)
    v475 = STACK[0x6520];
  else
    v475 = STACK[0x5F70];
  LODWORD(STACK[0x66D0]) = v475;
  v476 = STACK[0x6510];
  if ((v447 & 1) != 0)
    v473 = STACK[0x6510];
  LODWORD(STACK[0x65A8]) = v473;
  v477 = STACK[0x5F48];
  if ((v447 & 1) != 0)
    v476 = STACK[0x5F48];
  LODWORD(STACK[0x6660]) = v476;
  if ((v447 & 1) != 0)
    v478 = v474;
  else
    v478 = v477;
  v479 = STACK[0x65F0];
  if ((v447 & 1) != 0)
    v480 = v430;
  else
    v480 = STACK[0x65F0];
  LODWORD(STACK[0x66C0]) = v480;
  v481 = STACK[0x64F0];
  if ((v447 & 1) == 0)
    v479 = STACK[0x64F0];
  LODWORD(STACK[0x65A0]) = v479;
  if ((v447 & 1) != 0)
  {
    v430 = STACK[0x64A8];
    v482 = v481;
  }
  else
  {
    v482 = STACK[0x64A8];
  }
  v483 = STACK[0x64F8];
  v484 = STACK[0x5F78];
  if ((v447 & 1) != 0)
    v485 = STACK[0x5F78];
  else
    v485 = STACK[0x64F8];
  LODWORD(STACK[0x6650]) = v485;
  v486 = STACK[0x5F80];
  if ((v447 & 1) != 0)
    v484 = STACK[0x5F80];
  LODWORD(STACK[0x6690]) = v484;
  if ((v447 & 1) != 0)
    v487 = STACK[0x5F40];
  else
    v487 = v486;
  if ((v447 & 1) != 0)
    v488 = v483;
  else
    v488 = STACK[0x5F40];
  v489 = STACK[0x6358];
  v490 = STACK[0x6398];
  if ((v447 & 1) != 0)
    v491 = STACK[0x6398];
  else
    v491 = STACK[0x6358];
  LODWORD(STACK[0x6628]) = v491;
  v492 = STACK[0x6390];
  if ((v447 & 1) == 0)
    v489 = STACK[0x6390];
  LODWORD(STACK[0x6688]) = v489;
  v493 = STACK[0x6350];
  if ((v447 & 1) != 0)
    v494 = v492;
  else
    v494 = STACK[0x6350];
  if ((v447 & 1) == 0)
    v493 = v490;
  LODWORD(STACK[0x6598]) = v493;
  v495 = STACK[0x5F38];
  v496 = STACK[0x5F30];
  if ((v447 & 1) != 0)
    v497 = STACK[0x5F30];
  else
    v497 = STACK[0x5F38];
  LODWORD(STACK[0x66B8]) = v497;
  v498 = STACK[0x6538];
  if ((v447 & 1) == 0)
    v495 = STACK[0x6538];
  LODWORD(STACK[0x6570]) = v495;
  v499 = STACK[0x6540];
  if ((v447 & 1) == 0)
    v498 = STACK[0x6540];
  LODWORD(STACK[0x65D0]) = v498;
  if ((v447 & 1) != 0)
    v500 = v499;
  else
    v500 = v496;
  v501 = STACK[0x63A8];
  v502 = STACK[0x6348];
  if ((v447 & 1) != 0)
    v503 = STACK[0x63A8];
  else
    v503 = STACK[0x6348];
  LODWORD(STACK[0x66B0]) = v503;
  v504 = STACK[0x63B0];
  if ((v447 & 1) == 0)
    v502 = STACK[0x63B0];
  LODWORD(STACK[0x6398]) = v502;
  if ((v447 & 1) != 0)
    v505 = STACK[0x6330];
  else
    v505 = v501;
  if ((v447 & 1) != 0)
    v506 = v504;
  else
    v506 = STACK[0x6330];
  v507 = STACK[0x5F50];
  v508 = STACK[0x5F08];
  if ((v447 & 1) != 0)
    v509 = STACK[0x5F08];
  else
    v509 = STACK[0x5F50];
  LODWORD(STACK[0x65C0]) = v509;
  v510 = STACK[0x64C0];
  if ((v447 & 1) != 0)
    v508 = STACK[0x64C0];
  LODWORD(STACK[0x65F0]) = v508;
  v511 = STACK[0x64B0];
  if ((v447 & 1) == 0)
    v507 = STACK[0x64B0];
  LODWORD(STACK[0x65B8]) = v507;
  if ((v447 & 1) == 0)
    v511 = v510;
  v512 = STACK[0x6370];
  v513 = STACK[0x6360];
  if ((v447 & 1) != 0)
    v514 = STACK[0x6360];
  else
    v514 = STACK[0x6370];
  LODWORD(STACK[0x6698]) = v514;
  v515 = STACK[0x6368];
  if ((v447 & 1) != 0)
    v516 = v512;
  else
    v516 = STACK[0x6368];
  v517 = STACK[0x6378];
  if ((v447 & 1) == 0)
    v515 = STACK[0x6378];
  LODWORD(STACK[0x6430]) = v515;
  if ((v447 & 1) != 0)
    v518 = v517;
  else
    v518 = v513;
  v519 = STACK[0x6530];
  v520 = STACK[0x6518];
  if ((v447 & 1) != 0)
    v521 = STACK[0x6530];
  else
    v521 = STACK[0x6518];
  LODWORD(STACK[0x65B0]) = v521;
  if ((v447 & 1) == 0)
    v520 = v440;
  LODWORD(STACK[0x65E8]) = v520;
  if ((v447 & 1) != 0)
    v522 = v440;
  else
    v522 = STACK[0x64B8];
  if ((v447 & 1) != 0)
    v523 = STACK[0x64B8];
  else
    v523 = v519;
  v524 = STACK[0x63C8];
  v525 = STACK[0x6380];
  if ((v447 & 1) != 0)
    v526 = STACK[0x63C8];
  else
    v526 = STACK[0x6380];
  LODWORD(STACK[0x65F8]) = v526;
  v527 = STACK[0x6388];
  if ((v447 & 1) == 0)
    v525 = STACK[0x6388];
  LODWORD(STACK[0x63B0]) = v525;
  v528 = STACK[0x63D0];
  if ((v447 & 1) != 0)
  {
    v524 = STACK[0x63D0];
    v528 = v527;
  }
  LODWORD(STACK[0x63D0]) = v528;
  v529 = STACK[0x6448];
  v530 = STACK[0x6440];
  if ((v447 & 1) != 0)
    v531 = STACK[0x6448];
  else
    v531 = STACK[0x6440];
  LODWORD(STACK[0x6428]) = v531;
  v532 = STACK[0x6450];
  if ((v447 & 1) != 0)
    v533 = v530;
  else
    v533 = STACK[0x6450];
  LODWORD(STACK[0x65E0]) = v533;
  v534 = STACK[0x66C8];
  if ((v447 & 1) == 0)
  {
    v532 = STACK[0x66C8];
    v534 = v529;
  }
  LODWORD(STACK[0x63C8]) = v534;
  v535 = STACK[0x6418];
  v536 = STACK[0x6340];
  if ((v447 & 1) != 0)
    v537 = STACK[0x6418];
  else
    v537 = STACK[0x6340];
  LODWORD(STACK[0x6410]) = v537;
  if ((v447 & 1) != 0)
    v535 = v435;
  LODWORD(STACK[0x6440]) = v535;
  if ((v447 & 1) != 0)
    v538 = STACK[0x6420];
  else
    v538 = v435;
  if ((v447 & 1) == 0)
    v536 = STACK[0x6420];
  LODWORD(STACK[0x6420]) = v536;
  v539 = v447 + LODWORD(STACK[0x6940]);
  LODWORD(STACK[0x6460]) = LODWORD(STACK[0x67F0]) + 1894566327 + v447;
  v540 = (v447 & 2) == 0;
  if ((v447 & 2) != 0)
    v541 = v454;
  else
    v541 = v452;
  LODWORD(STACK[0x6448]) = v541;
  if ((v447 & 2) != 0)
    v542 = v452;
  else
    v542 = v454;
  v543 = STACK[0x6680];
  if (v540)
    v544 = STACK[0x67E0];
  else
    v544 = STACK[0x6680];
  if (!v540)
    v543 = STACK[0x67E0];
  v545 = STACK[0x6620];
  if (v540)
    v546 = STACK[0x6620];
  else
    v546 = v460;
  LODWORD(STACK[0x6450]) = v546;
  if (v540)
    v547 = v460;
  else
    v547 = v545;
  LODWORD(STACK[0x6468]) = v547;
  v548 = STACK[0x6760];
  v549 = STACK[0x6678];
  if (v540)
    v550 = STACK[0x6678];
  else
    v550 = STACK[0x6760];
  LODWORD(STACK[0x6940]) = v550;
  v551 = *(_QWORD *)(v2 - 152);
  if (v540)
    v552 = v548;
  else
    v552 = v549;
  LODWORD(STACK[0x6458]) = v552;
  if (v540)
    v553 = v465;
  else
    v553 = v551;
  LODWORD(STACK[0x6470]) = v553;
  if (v540)
    v554 = v551;
  else
    v554 = v465;
  LODWORD(STACK[0x6480]) = v554;
  v555 = STACK[0x6720];
  if (v540)
    v556 = v466;
  else
    v556 = STACK[0x6720];
  LODWORD(STACK[0x6490]) = v556;
  if (v540)
    v557 = v555;
  else
    v557 = v466;
  LODWORD(STACK[0x6478]) = v557;
  v558 = STACK[0x6668];
  if (v540)
    v559 = v471;
  else
    v559 = STACK[0x6668];
  LODWORD(STACK[0x64A8]) = v559;
  if (v540)
    v560 = v558;
  else
    v560 = v471;
  LODWORD(STACK[0x64B0]) = v560;
  v561 = STACK[0x66A8];
  if (v540)
    v562 = STACK[0x66A8];
  else
    v562 = v472;
  LODWORD(STACK[0x6498]) = v562;
  if (v540)
    v563 = v472;
  else
    v563 = v561;
  LODWORD(STACK[0x64B8]) = v563;
  v564 = STACK[0x65A8];
  if (v540)
    v565 = v478;
  else
    v565 = STACK[0x65A8];
  LODWORD(STACK[0x64C0]) = v565;
  if (v540)
    v566 = v564;
  else
    v566 = v478;
  LODWORD(STACK[0x64E8]) = v566;
  v567 = STACK[0x66D0];
  v568 = STACK[0x6660];
  if (v540)
    v569 = STACK[0x6660];
  else
    v569 = STACK[0x66D0];
  LODWORD(STACK[0x64D0]) = v569;
  if (v540)
    v570 = v567;
  else
    v570 = v568;
  LODWORD(STACK[0x64C8]) = v570;
  v571 = STACK[0x65A0];
  if (v540)
    v572 = v430;
  else
    v572 = STACK[0x65A0];
  LODWORD(STACK[0x64F8]) = v572;
  if (v540)
    v573 = v571;
  else
    v573 = v430;
  LODWORD(STACK[0x64F0]) = v573;
  v574 = STACK[0x66C0];
  if (v540)
    v575 = STACK[0x66C0];
  else
    v575 = v482;
  LODWORD(STACK[0x6500]) = v575;
  if (v540)
    v576 = v482;
  else
    v576 = v574;
  LODWORD(STACK[0x6510]) = v576;
  v577 = STACK[0x6650];
  if (v540)
    v578 = v487;
  else
    v578 = STACK[0x6650];
  LODWORD(STACK[0x6528]) = v578;
  if (v540)
    v579 = v577;
  else
    v579 = v487;
  LODWORD(STACK[0x6520]) = v579;
  v580 = STACK[0x6690];
  if (v540)
    v581 = v488;
  else
    v581 = STACK[0x6690];
  LODWORD(STACK[0x6530]) = v581;
  if (v540)
    v582 = v580;
  else
    v582 = v488;
  LODWORD(STACK[0x6538]) = v582;
  v583 = STACK[0x6628];
  if (v540)
    v584 = STACK[0x6628];
  else
    v584 = v494;
  LODWORD(STACK[0x6650]) = v584;
  if (v540)
    v585 = v494;
  else
    v585 = v583;
  LODWORD(STACK[0x6660]) = v585;
  v586 = STACK[0x6688];
  v587 = STACK[0x6598];
  if (v540)
    v588 = STACK[0x6598];
  else
    v588 = STACK[0x6688];
  LODWORD(STACK[0x6620]) = v588;
  if (v540)
    v589 = v586;
  else
    v589 = v587;
  LODWORD(STACK[0x6628]) = v589;
  v590 = STACK[0x6570];
  if (v540)
    v591 = STACK[0x6570];
  else
    v591 = v500;
  LODWORD(STACK[0x6550]) = v591;
  if (v540)
    v592 = v500;
  else
    v592 = v590;
  LODWORD(STACK[0x6548]) = v592;
  v593 = STACK[0x66B8];
  v594 = STACK[0x65D0];
  if (v540)
    v595 = STACK[0x66B8];
  else
    v595 = STACK[0x65D0];
  LODWORD(STACK[0x6568]) = v595;
  if (v540)
    v596 = v594;
  else
    v596 = v593;
  LODWORD(STACK[0x6540]) = v596;
  v597 = STACK[0x6398];
  if (v540)
    v598 = STACK[0x6398];
  else
    v598 = v505;
  LODWORD(STACK[0x6668]) = v598;
  if (v540)
    v599 = v505;
  else
    v599 = v597;
  LODWORD(STACK[0x6678]) = v599;
  v600 = STACK[0x66B0];
  if (v540)
    v601 = v506;
  else
    v601 = STACK[0x66B0];
  LODWORD(STACK[0x6688]) = v601;
  if (v540)
    v602 = v600;
  else
    v602 = v506;
  LODWORD(STACK[0x6680]) = v602;
  v603 = STACK[0x65C0];
  if (v540)
    v604 = v511;
  else
    v604 = STACK[0x65C0];
  LODWORD(STACK[0x65A0]) = v604;
  if (v540)
    v605 = v603;
  else
    v605 = v511;
  LODWORD(STACK[0x65A8]) = v605;
  v606 = STACK[0x65F0];
  v607 = STACK[0x65B8];
  if (v540)
    v608 = STACK[0x65F0];
  else
    v608 = STACK[0x65B8];
  LODWORD(STACK[0x6570]) = v608;
  if (v540)
    v609 = v607;
  else
    v609 = v606;
  LODWORD(STACK[0x6598]) = v609;
  if (v540)
    v610 = v516;
  else
    v610 = v518;
  LODWORD(STACK[0x66B0]) = v610;
  if (v540)
    v611 = v518;
  else
    v611 = v516;
  LODWORD(STACK[0x6690]) = v611;
  v612 = STACK[0x6698];
  v613 = STACK[0x6430];
  if (v540)
    v614 = STACK[0x6430];
  else
    v614 = STACK[0x6698];
  LODWORD(STACK[0x66A8]) = v614;
  if (v540)
    v615 = v612;
  else
    v615 = v613;
  LODWORD(STACK[0x6698]) = v615;
  v616 = STACK[0x65B0];
  if (v540)
    v617 = v522;
  else
    v617 = STACK[0x65B0];
  LODWORD(STACK[0x65D0]) = v617;
  if (v540)
    v618 = v616;
  else
    v618 = v522;
  LODWORD(STACK[0x65B8]) = v618;
  v619 = STACK[0x65E8];
  if (v540)
    v620 = v523;
  else
    v620 = STACK[0x65E8];
  LODWORD(STACK[0x65C0]) = v620;
  if (v540)
    v621 = v619;
  else
    v621 = v523;
  LODWORD(STACK[0x65B0]) = v621;
  v622 = STACK[0x63B0];
  if (v540)
    v623 = STACK[0x63B0];
  else
    v623 = v524;
  LODWORD(STACK[0x66C8]) = v623;
  if (v540)
    v624 = v524;
  else
    v624 = v622;
  LODWORD(STACK[0x66B8]) = v624;
  v625 = STACK[0x65F8];
  v626 = STACK[0x63D0];
  if (v540)
    v627 = STACK[0x65F8];
  else
    v627 = STACK[0x63D0];
  LODWORD(STACK[0x66D0]) = v627;
  if (v540)
    v628 = v626;
  else
    v628 = v625;
  LODWORD(STACK[0x66C0]) = v628;
  v629 = STACK[0x6428];
  if (v540)
    v630 = STACK[0x6428];
  else
    v630 = v532;
  LODWORD(STACK[0x65F0]) = v630;
  if (v540)
    v631 = v532;
  else
    v631 = v629;
  LODWORD(STACK[0x65F8]) = v631;
  v632 = STACK[0x65E0];
  v633 = STACK[0x63C8];
  if (v540)
    v634 = STACK[0x65E0];
  else
    v634 = STACK[0x63C8];
  LODWORD(STACK[0x65E8]) = v634;
  if (v540)
    v635 = v633;
  else
    v635 = v632;
  LODWORD(STACK[0x65E0]) = v635;
  v636 = STACK[0x6410];
  if (v540)
    v637 = STACK[0x6410];
  else
    v637 = v538;
  LODWORD(STACK[0x67E0]) = v637;
  if (v540)
    v638 = v538;
  else
    v638 = v636;
  LODWORD(STACK[0x6720]) = v638;
  v639 = STACK[0x6440];
  v640 = STACK[0x6420];
  if (v540)
    v641 = STACK[0x6420];
  else
    v641 = STACK[0x6440];
  LODWORD(STACK[0x6760]) = v641;
  if (v540)
    v642 = v639;
  else
    v642 = v640;
  LODWORD(STACK[0x67F0]) = v642;
  v643 = v539;
  v644 = (v539 & 1) == 0;
  v645 = STACK[0x63D8];
  v646 = STACK[0x63A0];
  if ((v539 & 1) != 0)
    v647 = STACK[0x63A0];
  else
    v647 = STACK[0x63D8];
  if ((v539 & 1) == 0)
    v645 = STACK[0x6400];
  v648 = STACK[0x69E0];
  if (!v644)
  {
    v646 = STACK[0x69E0];
    v648 = STACK[0x6400];
  }
  v649 = (v643 & 2) == 0;
  v650 = v643;
  if ((v643 & 2) != 0)
    v651 = v648;
  else
    v651 = v647;
  if (v649)
  {
    v647 = v648;
    v652 = v646;
  }
  else
  {
    v652 = v645;
  }
  if (v649)
    v646 = v645;
  v653 = STACK[0x69F0];
  v654 = STACK[0x69F0] & 0x68EF2B7F ^ 0xB1B85DAB;
  v655 = STACK[0x6A30];
  v656 = STACK[0x69F0] & 0x40A4236C ^ 0x13801000 ^ (LODWORD(STACK[0x6A30]) ^ 0x38124D16) & v654;
  v657 = STACK[0x6A20];
  v658 = STACK[0x6A10];
  v659 = STACK[0x6A90];
  v660 = ((2 * (v658 & 0x68EF2B7F ^ 0x446DA605)) & 0x58471658) - (v658 & 0x68EF2B7F ^ 0x446DA605) - 758369197;
  v661 = STACK[0x6A50];
  v662 = v660 & 0x1617468D ^ 0x10150489 ^ (LODWORD(STACK[0x6A50]) ^ 0x1217460D) & (v660 ^ 0xF9AC6AC);
  v663 = LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x68F0]);
  v664 = STACK[0x5ED8];
  v665 = v663 ^ (((((STACK[0x1444] & (2 * v656)) - v656 - 38474718) ^ 0x7F94ED0A) << LODWORD(STACK[0x68C0]) << LODWORD(STACK[0x6750]))
               + (((((v654 & (v657 ^ 0x9765527) ^ v653 & 0x28262A47) & 0xA0B7742C ^ 0xA691F42C)
                  + (v654 & (v657 ^ 0x9765527) ^ v653 & 0x28262A47 ^ 0x82608C3)
                  - ((v654 & (v657 ^ 0x9765527) ^ v653 & 0x28262A47 ^ 0x82608C3) & 0xA0B7742C)) ^ 0x8EA1E06C) >> STACK[0x6A90])) ^ LODWORD(STACK[0x5ED8]) ^ v543 ^ v652;
  v666 = STACK[0x6A80];
  v667 = v663 ^ ((((v662 - ((2 * v662) & 0x1FA52342) + 265458081) ^ 0x19D5D3A4u) >> v666) | ((v660 & 0x6975B7BC ^ 0x91086AC ^ (LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x1448])) & (v660 ^ 0xF9AC6AC)) << LODWORD(STACK[0x6770]) << LODWORD(STACK[0x6708]))) ^ LODWORD(STACK[0x5ED8]) ^ v544 ^ v646;
  v668 = STACK[0x69F0] & LODWORD(STACK[0x144C]) ^ 0xA05C29 ^ v654 & (LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x1450]));
  v669 = STACK[0x6A40];
  v670 = STACK[0x69F0] & 0x4008027B ^ 0xD1088273 ^ v654 & (LODWORD(STACK[0x6A40]) ^ 0x28537C8A);
  v671 = LODWORD(STACK[0x5FB8]) ^ 6;
  LODWORD(STACK[0x69E0]) = v671;
  v672 = v663 ^ ((((((2 * v670) & 0xB0401C7E) - v670 + 568324544) ^ 0x61CF7398) << v671 << LODWORD(STACK[0x6740])) | (v668 >> v659)) ^ v664 ^ LODWORD(STACK[0x6448]) ^ v647;
  v673 = v660 & STACK[0x1454] ^ 0x9BC06085 ^ (v655 ^ 0x50771FBD) & (v660 ^ 0xF9AC6AC);
  v674 = v657;
  v675 = v666;
  v676 = v663 ^ ((v660 & 0xA3330413 ^ 0x3120400 ^ (v660 ^ 0xF9AC6AC) & (v657 ^ 0x80736FF3)) >> v666) ^ (((v673 + 255825260 - ((2 * v673) & 0x1E7F42A2) + 3045) ^ 0x9F7F0150) << LODWORD(STACK[0x6900]) << LODWORD(STACK[0x6A60])) ^ v664 ^ v542 ^ v651;
  v677 = STACK[0x6438];
  v678 = (int *)(STACK[0x6438] + 4 * BYTE2(v667));
  STACK[0xD618] = (unint64_t)v678;
  v679 = *v678;
  STACK[0xD618] = v677;
  v680 = *(_DWORD *)(v677 + 4 * HIBYTE(v667));
  v681 = 4 * BYTE1(v676);
  v682 = v677 + v681;
  v683 = 4 * BYTE1(v667);
  v684 = (_DWORD *)(v682 + v683 - v681);
  STACK[0xD618] = v682;
  LODWORD(v682) = v679 ^ __ROR4__(*(_DWORD *)v682, 8);
  v685 = 4 * v665;
  v686 = (_DWORD *)((char *)v684 + v685 - v683);
  v687 = 4 * v672;
  v688 = (_DWORD *)((char *)&v686[(unint64_t)v687 / 4] - v685);
  STACK[0xD618] = (unint64_t)v684;
  LODWORD(v685) = *v684;
  STACK[0xD618] = (unint64_t)v686;
  LODWORD(v682) = v682 ^ __ROR4__(*v686, 16);
  v689 = (unint64_t)&v688[BYTE1(v672) + v687 / 0xFFFFFFFFFFFFFFFCLL];
  v690 = &v688[v687 / 0xFFFFFFFFFFFFFFFCLL];
  v691 = BYTE1(v665);
  v692 = (unint64_t)&v690[v691];
  v693 = 4 * BYTE2(v672);
  v694 = v692 + v693 - v691 * 4;
  STACK[0xD618] = (unint64_t)v688;
  LODWORD(v688) = *v688;
  STACK[0xD618] = v689;
  v695 = *(_DWORD *)v689;
  STACK[0xD618] = v692;
  LODWORD(v689) = *(_DWORD *)v692;
  STACK[0xD618] = v694;
  v696 = v694 - v693;
  LODWORD(v692) = *(_DWORD *)v694;
  v697 = (int *)(v696 + 4 * v676);
  STACK[0xD618] = (unint64_t)v697;
  v698 = *v697;
  v699 = (_DWORD *)(v696 + 4 * BYTE2(v676));
  STACK[0xD618] = (unint64_t)v699;
  LODWORD(v694) = *v699;
  v700 = 4 * HIBYTE(v672);
  v701 = (_DWORD *)(v696 + v700);
  STACK[0xD618] = (unint64_t)v701;
  LODWORD(v699) = v682 ^ __ROR4__(*v701, 24);
  v702 = 4 * HIBYTE(v665);
  v703 = &v701[(unint64_t)v702 / 4 + v700 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v703;
  v704 = &v703[v702 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v703) = *v703;
  v705 = &v704[BYTE2(v665)];
  STACK[0xD618] = (unint64_t)v705;
  v706 = *v705;
  v707 = &v704[v667];
  v708 = 4 * HIBYTE(v676);
  v709 = &v704[(unint64_t)v708 / 4];
  v710 = (v658 & 0x750ABF61 ^ 0x5080E40)
       + (v658 & 0x31020621 ^ 0x38D64023)
       - ((v658 & 0x750ABF61 ^ 0x5080E40) & 0x31020621);
  LODWORD(v704) = v710 & 0xFF7FFFFF ^ 0x824B24A0;
  v711 = v710 & 0x2203F2BD ^ 0x20034035 ^ (v655 ^ 0xC9350CC7) & v704;
  v712 = v674;
  v713 = v710 & 0x6D640756 ^ 0x41600102 ^ v704 & (v674 ^ 0x4E246CB6);
  LODWORD(v704) = (v711 - ((2 * v711) & 0xE8305DC2) - 199741727) ^ 0xD6184E74;
  v714 = STACK[0x6930] & 0x1F ^ 0x12;
  LODWORD(STACK[0x6A70]) = v714;
  v715 = ((_DWORD)v704 << v714) ^ (((((2 * v713) & 0xD699DB54) - v713 - 1808592299) ^ 0xD5131757) >> v659);
  v716 = LODWORD(STACK[0x5F88]) ^ LODWORD(STACK[0x67B0]);
  v717 = v716 ^ v715;
  LODWORD(STACK[0x6518]) = v650;
  v718 = v716 ^ v715 ^ v650 ^ __ROR4__(v680, 24) ^ __ROR4__((_DWORD)v688, 16);
  v719 = LODWORD(STACK[0x64D8]) + 58;
  LODWORD(STACK[0x6930]) = v719;
  v720 = v718 ^ __ROR4__(v689, 8) ^ v719 ^ v694 ^ LODWORD(STACK[0x6450]);
  v721 = ((2 * (v653 & 0x750ABF61 ^ 0x70022E20)) | 0x5B4A13E4) - (v653 & 0x750ABF61 ^ 0x70022E20) + 1381692942;
  v722 = (v721 & 0xDCB93C4A ^ 0x50182408) + (v721 ^ 0xAEA5D8C2) - ((v721 ^ 0xAEA5D8C2) & 0xDCB93C4A);
  LODWORD(v689) = (v722 ^ 0x24AC26D8) & (v661 ^ 0xF805ADBD) ^ v722 & 0xF805AD3D;
  v723 = v669;
  v724 = v722 & 0x514F0A28 ^ 0x10430028 ^ (v722 ^ 0x24AC26D8) & (v669 ^ 0xA80474D9);
  LOBYTE(v669) = v675;
  v725 = v716 ^ (((((v689 & 0xCF431D92 ^ 0x87421C82)
                  + (v689 ^ 0x7801211C)
                  - ((v689 ^ 0x7801211C) & 0xCF431D92)) ^ 0x97461896) >> v675) | (((((2 * v724) & 0xD2632808)
                                                                                                - v724
                                                                                                - 1764856837) ^ 0x868169DB) << LODWORD(STACK[0x6880])));
  STACK[0xD618] = (unint64_t)v707;
  v726 = v725 ^ __ROR4__(v695, 8) ^ v706 ^ __ROR4__(*v707, 16);
  STACK[0xD618] = (unint64_t)v709;
  v727 = (unint64_t)&v709[v708 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v694) = v726 ^ __ROR4__(*v709, 24) ^ LODWORD(STACK[0x6458]);
  v728 = v717 ^ LODWORD(STACK[0x6940]);
  LODWORD(v704) = LODWORD(STACK[0x6460]) - 2220;
  LODWORD(STACK[0x6940]) = (_DWORD)v704;
  LODWORD(v688) = v728 ^ ((_DWORD)v699 + v650 - (_DWORD)v704);
  LODWORD(v685) = v725 ^ __ROR4__(v685, 8) ^ v692 ^ __ROR4__(v698, 16);
  v729 = &v709[v708 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v694)];
  STACK[0xD618] = (unint64_t)v729;
  LODWORD(v709) = *v729;
  v730 = v727 + 4 * BYTE2(v688);
  STACK[0xD618] = v730;
  LODWORD(STACK[0x6448]) = *(_DWORD *)v730;
  LODWORD(v685) = v685 ^ __ROR4__((_DWORD)v703, 24) ^ LODWORD(STACK[0x6468]);
  STACK[0xD618] = v727;
  LODWORD(STACK[0x6460]) = *(_DWORD *)(v727 + 4 * BYTE1(v720));
  v731 = 4 * BYTE1(v688);
  v732 = v727 + v731;
  v733 = 4 * v694;
  v734 = v732 + v733 - v731;
  v735 = 4 * BYTE3(v694);
  v736 = v734 - v733 + v735;
  v737 = 4 * v685;
  v738 = (int *)(v736 + v737 - v735);
  v739 = 4 * BYTE1(v685);
  v740 = &v738[(unint64_t)v739 / 4 + v737 / 0xFFFFFFFFFFFFFFFCLL];
  v741 = BYTE2(v694);
  v742 = (unint64_t)&v740[v741 + v739 / 0xFFFFFFFFFFFFFFFCLL];
  v743 = 4 * HIBYTE(v720);
  v744 = v742 - v741 * 4 + v743;
  v745 = 4 * v688;
  v746 = (int *)(v744 + v745 - v743);
  v747 = v720;
  v748 = (unint64_t)&v746[v747 + v745 / 0xFFFFFFFFFFFFFFFCLL];
  v749 = 4 * (v688 >> 24);
  v750 = (_DWORD *)(v748 - v747 * 4 + v749);
  v751 = 4 * BYTE2(v685);
  v752 = (unint64_t)v750 + v751 - v749;
  STACK[0xD618] = v732;
  LODWORD(v659) = *(_DWORD *)v732;
  STACK[0xD618] = v734;
  v753 = *(_DWORD *)v734;
  STACK[0xD618] = v736;
  v754 = *(_DWORD *)v736;
  STACK[0xD618] = (unint64_t)v738;
  v755 = *v738;
  STACK[0xD618] = (unint64_t)v740;
  LODWORD(STACK[0x6458]) = *v740;
  STACK[0xD618] = v742;
  LODWORD(STACK[0x6450]) = *(_DWORD *)v742;
  STACK[0xD618] = v744;
  LODWORD(STACK[0x6468]) = *(_DWORD *)v744;
  STACK[0xD618] = (unint64_t)v746;
  v756 = *v746;
  STACK[0xD618] = v748;
  v757 = *(_DWORD *)v748;
  STACK[0xD618] = (unint64_t)v750;
  LODWORD(v732) = *v750;
  STACK[0xD618] = v752;
  v758 = v752 - v751;
  LODWORD(v752) = *(_DWORD *)v752;
  v759 = (int *)(v758 + 4 * BYTE2(v720));
  STACK[0xD618] = (unint64_t)v759;
  v760 = *v759;
  v761 = 4 * BYTE3(v685);
  STACK[0xD618] = v758 + v761;
  LODWORD(v744) = STACK[0x6A10];
  LODWORD(v742) = STACK[0x6A10] & 0x25F1C17B ^ 0x4F0282F7;
  LODWORD(v736) = v712;
  LODWORD(v746) = STACK[0x6A10] & 0x4C0C108 ^ 0xE028280 ^ (v723 ^ 0x67818179) & v742;
  LOBYTE(v723) = v669;
  v762 = STACK[0x6990] & 0x1E ^ 0xE;
  LODWORD(STACK[0x64D8]) = v762;
  LODWORD(v685) = STACK[0x6920] & 1;
  LODWORD(STACK[0x6920]) = v685;
  LODWORD(v748) = ((v744 & 0x4F1801A ^ 0xC028096 ^ (v712 ^ 0x2FB3C37E) & v742) >> v669) | ((_DWORD)v746 << v685 << v762);
  LODWORD(v751) = (v653 & 0x20E00078 ^ 0x7A283815) + (v653 & 0x511C103) - 1;
  LODWORD(v751) = (v751 & 0x491084E ^ 0x469B1203) + (v751 & 0x2160C131) - 1;
  v763 = v751 ^ 0x2960C1B1;
  LODWORD(v751) = v751 ^ 0xC3859B0;
  v764 = v751 & (LODWORD(STACK[0x6A30]) ^ 0x20F3BD92) ^ v763 & 0x14143E8 ^ 0x4B400000;
  LOBYTE(v712) = STACK[0x6960];
  LOBYTE(v734) = STACK[0x69C0];
  LODWORD(v704) = ((LODWORD(STACK[0x63C0]) ^ 0x1E5A1B6B) << v712 << v734) ^ (LODWORD(STACK[0x64A0]) >> STACK[0x6A90]) ^ LODWORD(STACK[0x63F8]);
  LODWORD(v732) = v704 ^ v748 ^ __ROR4__((_DWORD)v709, 8) ^ __ROR4__(v755, 16) ^ LODWORD(STACK[0x6470]) ^ __ROR4__(v732, 24) ^ v760;
  LODWORD(v685) = v704 ^ ((v751 & (LODWORD(STACK[0x6A50]) ^ 0x4FA3FC00) ^ 0x45009800 ^ v763 & 0xFA3D880) >> STACK[0x6A90]) ^ (v764 << LODWORD(STACK[0x66E0]) << LODWORD(STACK[0x66E8])) ^ LODWORD(STACK[0x6448]) ^ __ROR4__(STACK[0x6460], 8) ^ __ROR4__(v753, 16) ^ LODWORD(STACK[0x6478]) ^ __ROR4__(*(_DWORD *)(v758 + v761), 24);
  v765 = v744 & 0x25F10028 ^ 0x8D71020 ^ (LODWORD(STACK[0x6A50]) ^ 0x2DF300AC) & v742;
  LODWORD(v752) = v704 ^ ((((v765 - ((2 * v765) & 0xDD8B8624) + 2127415058) ^ 0x7B18D716) >> STACK[0x6A90])
                                      + ((_DWORD)v746 << LODWORD(STACK[0x66D8]) << LODWORD(STACK[0x6488]))) ^ __ROR4__(v659, 8) ^ __ROR4__(v754, 24) ^ LODWORD(STACK[0x6480]) ^ __ROR4__(v757, 16) ^ v752;
  v766 = v736;
  v767 = v751 & (v736 ^ 0x6C34681) ^ v763 & 0x25830961 ^ 0x91002C20;
  LODWORD(v730) = v764 << v712 << v734;
  LODWORD(v744) = ((2 * v767) & 0x8AD5DA3A) - v767 + 982848226;
  LOBYTE(v712) = v723;
  LODWORD(v704) = v704 ^ v730 ^ ((v744 ^ 0x8E9536C3) >> v723) ^ __ROR4__(STACK[0x6458], 8) ^ LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x6490]) ^ __ROR4__(STACK[0x6468], 24) ^ __ROR4__(v756, 16);
  v768 = v758 + 4 * BYTE3(v732);
  v769 = v758 + 4 * (v704 >> 24);
  v770 = v758 + 4 * BYTE3(v752);
  v771 = (_DWORD *)(v758 + 4 * BYTE2(v752));
  v772 = (_DWORD *)(v758 + 4 * BYTE2(v685));
  v773 = 4 * BYTE3(v685);
  STACK[0xD618] = v768;
  LODWORD(v742) = *(_DWORD *)v768;
  STACK[0xD618] = v769;
  LODWORD(v709) = *(_DWORD *)v769;
  STACK[0xD618] = v770;
  LODWORD(v769) = *(_DWORD *)v770;
  STACK[0xD618] = (unint64_t)v771;
  LODWORD(v770) = *v771;
  STACK[0xD618] = (unint64_t)v772;
  LODWORD(v768) = *v772;
  STACK[0xD618] = v758 + v773;
  LODWORD(v771) = *(_DWORD *)(v758 + v773);
  v774 = v758 + 4 * BYTE2(v704);
  STACK[0xD618] = v774;
  LODWORD(v774) = *(_DWORD *)v774;
  v775 = (_DWORD *)(v758 + 4 * BYTE1(v685));
  STACK[0xD618] = (unint64_t)v775;
  LODWORD(v736) = *v775;
  v776 = v758 + 4 * v732;
  v777 = (_DWORD *)(v758 + 4 * v685);
  v778 = v758 + 4 * v752;
  v779 = (_DWORD *)(v758 + 4 * v704);
  STACK[0xD618] = v776;
  v780 = *(_DWORD *)v776;
  STACK[0xD618] = (unint64_t)v777;
  LODWORD(v777) = *v777;
  STACK[0xD618] = v778;
  LOBYTE(v751) = v744 & 0x10;
  LODWORD(v744) = *(_DWORD *)v778;
  LODWORD(v778) = *(_DWORD *)v778 >> v751 >> (v751 ^ 0x10);
  v781 = v758 + 4 * BYTE2(v732);
  v782 = (_DWORD *)(v758 + 4 * BYTE1(v704));
  v783 = v758 + 4 * BYTE1(v752);
  STACK[0xD618] = (unint64_t)v779;
  LODWORD(v779) = *v779;
  STACK[0xD618] = v781;
  LODWORD(v781) = *(_DWORD *)v781;
  STACK[0xD618] = (unint64_t)v782;
  LODWORD(v782) = *v782;
  STACK[0xD618] = v783;
  v784 = v758;
  LODWORD(v783) = *(_DWORD *)v783;
  v785 = 4 * BYTE1(v732);
  STACK[0xD618] = v758 + v785;
  LODWORD(v732) = (STACK[0x69F0] & 0x4C2020 ^ 0xC11CE8D1) + (STACK[0x69F0] & 0x12010502) - 1;
  LODWORD(v732) = (v732 & 0x82520 ^ 0x20220E49) + (v732 & LODWORD(STACK[0x1458])) - 1;
  v786 = (v732 & 0x10022100 | 0x84005010) ^ 0x80003310 ^ (v732 ^ 0x4F0650C) & (LODWORD(STACK[0x6A40]) ^ 0x24490D60);
  LODWORD(v732) = v732 & 0x22092300 ^ 0x1110180 ^ (v732 ^ 0x4F0650C) & (v766 ^ 0x4594024);
  v787 = STACK[0x6A90];
  v788 = (((_DWORD)v732 - ((2 * (_DWORD)v732) & 0x7D39AD1C) + 1050465934) ^ 0x3B9DFE4Au) >> STACK[0x6A90];
  LODWORD(v732) = LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x67B0]) ^ (v788
                                                                   + (v786 << LODWORD(STACK[0x6560]) << LODWORD(STACK[0x6558]))) ^ LODWORD(STACK[0x6498]) ^ __ROR4__(v742, 24) ^ v774 ^ __ROR4__((_DWORD)v777, 16) ^ __ROR4__(v783, 8);
  v789 = STACK[0x6A10];
  LODWORD(v783) = STACK[0x6A10] & 0x124D2522 ^ 0x34DF4A44;
  LODWORD(v774) = STACK[0x6A10] & 0x10492122 ^ LODWORD(STACK[0x145C]) ^ (LODWORD(STACK[0x6A50]) ^ 0x104B6966) & v783;
  LODWORD(v776) = STACK[0x6A30];
  LODWORD(v783) = STACK[0x6A10] & 0x12442122 ^ 0x202800 ^ (LODWORD(STACK[0x6A30]) ^ 0x34500700) & v783;
  LODWORD(v783) = (v783 + 2082990303 - ((2 * v783) & 0x684EC440) + 2378) ^ 0x68C19269;
  LODWORD(v774) = (((_DWORD)v774 - ((2 * (_DWORD)v774) & 0x4C7F01A4) - 415268645) ^ 0xF7154829) >> v712;
  LODWORD(v736) = LODWORD(STACK[0x67B0]) ^ (((_DWORD)v783 << LODWORD(STACK[0x69E0]) << LODWORD(STACK[0x6740])) | v774) ^ LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x64A8]) ^ __ROR4__((_DWORD)v709, 24) ^ v770 ^ __ROR4__(v736, 8) ^ __ROR4__(v780, 16);
  LODWORD(v778) = LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x67B0]) ^ (((_DWORD)v783 << LODWORD(STACK[0x6A60]) << LODWORD(STACK[0x6900])) | v774) ^ LODWORD(STACK[0x64B0]) ^ __ROR4__((_DWORD)v771, 24) ^ ((_DWORD)v744 << 16) ^ v778 ^ v781 ^ __ROR4__((_DWORD)v782, 8);
  LODWORD(v769) = LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x67B0]) ^ (v786 << LODWORD(STACK[0x6780]) << LODWORD(STACK[0x6590])) ^ v788 ^ LODWORD(STACK[0x64B8]) ^ __ROR4__(v769, 24) ^ v768 ^ __ROR4__((_DWORD)v779, 16);
  v790 = __ROR4__(*(_DWORD *)(v758 + v785), 8);
  v791 = v758 + 4 * BYTE1(v736);
  v792 = (_DWORD *)(v758 + 4 * (v769 ^ v790));
  v793 = 4 * BYTE3(v778);
  STACK[0xD618] = v791;
  v794 = *(_DWORD *)v791;
  STACK[0xD618] = (unint64_t)v792;
  LODWORD(v758) = *v792;
  STACK[0xD618] = v784 + v793;
  v795 = *(_DWORD *)(v784 + v793);
  v796 = (_DWORD *)(v784 + 4 * BYTE2(v736));
  STACK[0xD618] = (unint64_t)v796;
  LODWORD(v793) = *v796;
  STACK[0xD618] = v784;
  v797 = *(_DWORD *)(v784 + 4 * v778);
  v798 = 4 * BYTE1(v778);
  v799 = (_DWORD *)(v784 + 4 * BYTE3(v736));
  v800 = 4 * ((unsigned __int16)(v769 ^ v790) >> 8);
  v801 = (_DWORD *)(v784 + v800);
  STACK[0xD618] = v784 + v798;
  LODWORD(v798) = *(_DWORD *)(v784 + v798);
  STACK[0xD618] = (unint64_t)v799;
  LODWORD(v784) = *v799;
  STACK[0xD618] = (unint64_t)v801;
  v802 = (unint64_t)v801 - v800;
  LODWORD(v800) = *v801;
  v803 = v802 + 4 * ((v769 ^ v790) >> 16);
  STACK[0xD618] = v803;
  LODWORD(v803) = *(_DWORD *)v803;
  v804 = v802 + 4 * BYTE2(v778);
  STACK[0xD618] = v804;
  LODWORD(v804) = *(_DWORD *)v804;
  STACK[0xD618] = v802;
  LODWORD(v709) = *(_DWORD *)(v802 + 4 * v732);
  v805 = 4 * BYTE2(v732);
  v806 = v802 + v805;
  v807 = 4 * BYTE1(v732);
  v808 = (_DWORD *)(v806 + v807 - v805);
  v809 = (v769 ^ v790) >> 24;
  v810 = (unint64_t)&v808[v807 / 0xFFFFFFFFFFFFFFFCLL + v809];
  v811 = 4 * BYTE3(v732);
  v812 = (_DWORD *)(v810 + v811 - v809 * 4);
  v813 = 4 * v736;
  v814 = (_DWORD *)((char *)&v812[(unint64_t)v813 / 4] - v811);
  LODWORD(v811) = (v789 & 0x48147E36 ^ 0x7A14 | 0xF0BB30E5) - (v789 & 0x48147E36 ^ 0x7A14 | 0xF44CF1A) + 256167706;
  LODWORD(v811) = (v811 & 0xB8C38964 ^ 0x90400900) + (v811 ^ 0x29BFF0E5) - ((v811 ^ 0x29BFF0E5) & 0xB8C38964);
  LODWORD(v769) = v776;
  LODWORD(v791) = STACK[0x6A20];
  v815 = v811 & 0x77755517 ^ LODWORD(STACK[0x1460]) ^ (v811 ^ 0xB9EBDD18) & (LODWORD(STACK[0x6A20]) ^ 0x54353EF7);
  v816 = ((v811 & 0x4BE2DA7E ^ 0x9E2D818 ^ (v776 ^ 0xA0542404) & (v811 ^ 0xB9EBDD18)) << LODWORD(STACK[0x6860]) << LODWORD(STACK[0x6890])) | (((((2 * v815) | 0xD53C09D6) - v815 + 358742805) ^ 0xAEEA01EA) >> v787);
  v817 = ((LODWORD(STACK[0x5F90]) ^ 0xB830B0C9) << LODWORD(STACK[0x6658]) << LODWORD(STACK[0x6790])) ^ (LODWORD(STACK[0x64E0]) >> v787) ^ LODWORD(STACK[0x5FC0]);
  LODWORD(v793) = v817 ^ v816 ^ LODWORD(STACK[0x64C0]) ^ v793 ^ __ROR4__(v797, 16) ^ __ROR4__(v800, 8);
  STACK[0xD618] = v806;
  LODWORD(v776) = *(_DWORD *)v806;
  STACK[0xD618] = (unint64_t)v808;
  LODWORD(v800) = *v808;
  STACK[0xD618] = v810;
  LODWORD(v808) = *(_DWORD *)v810;
  STACK[0xD618] = (unint64_t)v812;
  LODWORD(v812) = v793 ^ __ROR4__(*v812, 24);
  LODWORD(v793) = (STACK[0x69F0] & 0x48147E36 ^ 0x2030)
                + 1080172799
                - ((2 * (STACK[0x69F0] & 0x48147E36 ^ 0x2030)) & 0x8000580C)
                + 2831;
  LODWORD(v810) = v793 & 0xC817FFFE ^ 0x902EAA46;
  v818 = STACK[0x6A40];
  v819 = STACK[0x6A50];
  LODWORD(v659) = STACK[0x6A80];
  LODWORD(v798) = v817 ^ ((v793 & 0x817342C ^ 0x262004 ^ v810 & (LODWORD(STACK[0x6A40]) ^ 0xD03C4ADC)) << LODWORD(STACK[0x63E0]) << LODWORD(STACK[0x63E8])) ^ ((unint64_t)((((v810 & (v819 ^ 0x802F96BA) ^ v793 & 0x8007963A) & 0x983959B8 ^ 0x39D85989 | (v810 & (v819 ^ 0x802F96BA) ^ v793 & 0x8007963A) & 0x4006A646) - 1) ^ 0xB9F6DB8A) >> LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x64C8]) ^ __ROR4__(v798, 8) ^ __ROR4__(v784, 24) ^ v803 ^ __ROR4__((_DWORD)v709, 16);
  LODWORD(v778) = v793 & 0xC817CF7A ^ 0x88318870 ^ v810 & (v769 ^ 0x10093100);
  LODWORD(v793) = v793 & 0xC0043BE4 ^ LODWORD(STACK[0x1464]) ^ v810 & (v791 ^ 0xD02C5004);
  LOBYTE(v803) = STACK[0x5FB0];
  LOBYTE(v806) = STACK[0x5FA8];
  LODWORD(STACK[0x6990]) = LODWORD(STACK[0x6638]) << v803 << v806;
  LODWORD(v778) = v817 ^ ((((((2 * (_DWORD)v778) | 0x552EEA78) - (_DWORD)v778 + 1432914628) ^ 0xB288770E) << v806 << v803)
                        + (((((2 * (_DWORD)v793) & 0x245D2CC8) - (_DWORD)v793 - 305043045) ^ 0x17965569u) >> v787)) ^ LODWORD(STACK[0x64D0]) ^ __ROR4__(v794, 8) ^ __ROR4__(v758, 16) ^ __ROR4__(v795, 24) ^ v776;
  LODWORD(v769) = v811 & 0xB44BB8DB ^ 0x5C65EF69 ^ (v818 ^ 0x4D00C62A) & (v811 ^ 0xB9EBDD18);
  LODWORD(v758) = v819;
  LODWORD(v791) = (v819 ^ 0x483AC4B2) & (v811 ^ 0xB9EBDD18) ^ v811 & 0x483AC432;
  v820 = v659;
  LOBYTE(v753) = STACK[0x69D0];
  LOBYTE(v819) = STACK[0x6980];
  LODWORD(v769) = v817 ^ (((((2 * (_DWORD)v769) | 0x14E9F9E6) - (_DWORD)v769 + 1972044557) ^ 0x665A8B82) << v753 << v819) ^ ((((v791 & 0x2895B11B ^ 0x2885B109) + (v791 & 0xD76A4EE4 ^ 0x280401) - 1) ^ 0x20877119) >> v659) ^ LODWORD(STACK[0x64E8]) ^ v804 ^ __ROR4__(v800, 8) ^ __ROR4__((_DWORD)v808, 24);
  STACK[0xD618] = (unint64_t)v814;
  v821 = __ROR4__(*v814, 16);
  LODWORD(v793) = v769 ^ v821;
  v822 = &v814[v813 / 0xFFFFFFFFFFFFFFFCLL + ((unsigned __int16)(v769 ^ v821) >> 8)];
  STACK[0xD618] = (unint64_t)v822;
  LODWORD(v769) = *v822;
  v823 = &v814[v813 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v778)];
  STACK[0xD618] = (unint64_t)v823;
  LODWORD(v776) = *v823;
  STACK[0xD618] = (unint64_t)&v814[v813 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v822) = v814[v813 / 0xFFFFFFFFFFFFFFFCLL + v778];
  v824 = 4 * (v812 >> 24);
  v825 = &v814[v813 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v824 / 4];
  v826 = 4 * BYTE3(v793);
  v827 = &v825[(unint64_t)v826 / 4 + v824 / 0xFFFFFFFFFFFFFFFCLL];
  v828 = (unint64_t)&v827[BYTE3(v798) + v826 / 0xFFFFFFFFFFFFFFFCLL];
  v829 = v812;
  v830 = (unint64_t)&v827[v826 / 0xFFFFFFFFFFFFFFFCLL + v829];
  v831 = 4 * BYTE3(v778);
  v832 = (_DWORD *)(v830 + v831 - v829 * 4);
  v833 = BYTE2(v798);
  v834 = (unint64_t)&v832[v833] - v831;
  STACK[0xD618] = (unint64_t)v825;
  LODWORD(v831) = *v825;
  STACK[0xD618] = (unint64_t)v827;
  LODWORD(v803) = *v827;
  STACK[0xD618] = v828;
  LODWORD(v825) = *(_DWORD *)v828;
  STACK[0xD618] = v830;
  HIDWORD(v835) = *(_DWORD *)v830;
  LODWORD(v835) = *(_DWORD *)v830;
  LODWORD(v830) = (v835 >> 16) ^ __ROR4__((_DWORD)v825, 24);
  v836 = 4 * v798;
  v837 = v834 + v836 - v833 * 4;
  v838 = 4 * BYTE2(v812);
  v839 = v837 + v838 - v836;
  STACK[0xD618] = (unint64_t)v832;
  LODWORD(v836) = *v832;
  STACK[0xD618] = v834;
  LODWORD(v828) = *(_DWORD *)v834;
  STACK[0xD618] = v837;
  LODWORD(v834) = *(_DWORD *)v837;
  STACK[0xD618] = v839;
  LODWORD(v837) = *(_DWORD *)v839;
  v840 = 4 * BYTE1(v778);
  v841 = (_DWORD *)(v839 - v838 + v840);
  STACK[0xD618] = (unint64_t)v841;
  LODWORD(v839) = v830 ^ __ROR4__(*v841, 8);
  v842 = 4 * BYTE1(v798);
  v843 = &v841[(unint64_t)v842 / 4 + v840 / 0xFFFFFFFFFFFFFFFCLL];
  v844 = BYTE1(v812);
  v845 = (unint64_t)&v843[v842 / 0xFFFFFFFFFFFFFFFCLL + v844];
  v846 = &v843[v842 / 0xFFFFFFFFFFFFFFFCLL + v793];
  LODWORD(v810) = LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x6618]);
  STACK[0xD618] = (unint64_t)v843;
  LODWORD(v830) = *v843;
  STACK[0xD618] = v845;
  LODWORD(v843) = *(_DWORD *)v845;
  STACK[0xD618] = (unint64_t)v846;
  v847 = v845 - v844 * 4;
  LODWORD(v846) = *v846;
  v848 = 4 * BYTE2(v793);
  STACK[0xD618] = v847 + v848;
  LODWORD(v845) = v810 % 0x101;
  LODWORD(v810) = STACK[0x68D0];
  LODWORD(v848) = v839 ^ *(_DWORD *)(v847 + v848);
  LODWORD(v785) = STACK[0x6AC0] + 4837;
  LODWORD(STACK[0x6AC0]) = v785;
  v849 = (char *)*(&off_1015B46D0 + (int)v785 - 11459) + 4 * (v810 % 0x101);
  LODWORD(v839) = v845 ^ 0xDECAC734 ^ *((_DWORD *)*(&off_1015B46D0 + (int)(v785 ^ 0x2D47)) + v845 - 1);
  v850 = STACK[0x69F0];
  LODWORD(v845) = ((2 * (v850 & 0x7744809A ^ 0x6164ACB4)) | 0x991511C4) - (v850 & 0x7744809A ^ 0x6164ACB4) - 1284147426;
  LODWORD(v810) = (v845 ^ 0xA223A5F2) & (v758 ^ 0x8B108A50) ^ v845 & 0x8B108AD0;
  LODWORD(v845) = (v845 ^ 0xA223A5F2) & (v818 ^ 0x964385C4) ^ v845 & 0x6F08FB34;
  LODWORD(v785) = (((v845 & 0xDEDCF6FF ^ 0x96DC34EA) + (v845 & 0x21230900 ^ 0x1000801) - 1) ^ 0xB5DC9DDA) << LODWORD(STACK[0x6670]) << LODWORD(STACK[0x66A0]);
  STACK[0xD618] = v847;
  HIDWORD(v835) = *((_DWORD *)v849 - 3);
  LODWORD(v835) = HIDWORD(v835);
  LODWORD(v810) = ((v810 & 0x2DEAF5DA ^ 0x25EA755A) + (v810 ^ 0x8008880) - ((v810 ^ 0x8008880) & 0x2DEAF5DA)) ^ 0xA7EAFD8A;
  LODWORD(v659) = LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x63F0]);
  LODWORD(v776) = v659 ^ (v810 >> v787) ^ v785 ^ LODWORD(STACK[0x64F0]) ^ v776 ^ __ROR4__(v803, 24) ^ __ROR4__(v834, 16) ^ __ROR4__((_DWORD)v843, 8);
  LODWORD(v843) = v848 + v839 + ((v835 >> 26) ^ 0x8517351C ^ ((v835 >> 26) >> 3) & 0x14A9443D);
  LODWORD(v848) = ((STACK[0x6A10] & 0x25000012 ^ 0x21000353) - 1) | STACK[0x6A10] & 0x52448088 ^ 0x8847208D;
  LODWORD(v849) = v848 & 0x114480CA | STACK[0x6A10] & 0x66000010;
  LODWORD(v803) = v849 ^ 0x363FF9AB;
  LODWORD(v849) = v849 ^ 0xBB89017E;
  v851 = STACK[0x6A30];
  LODWORD(v834) = (((v851 ^ 0x9CC1818C) & v849 ^ v803 & 0x775539F2) & 0x788931AA ^ 0x100100AA)
                + ((v851 ^ 0x9CC1818C) & v849 ^ v803 & 0x775539F2 ^ 0x6EEAFF15)
                - (((v851 ^ 0x9CC1818C) & v849 ^ v803 & 0x775539F2 ^ 0x6EEAFF15) & 0x78AB35AA);
  v852 = STACK[0x6A20];
  LODWORD(v849) = v803 & 0x443A8999 ^ v849 & (LODWORD(STACK[0x6A20]) ^ 0xE77AE679) ^ 0x4320C18;
  LODWORD(v769) = v659 ^ (((v834 ^ 0x1355F26B) << LODWORD(STACK[0x6580]) << LODWORD(STACK[0x6578]))
                        + (((((2 * (_DWORD)v849) | 0x6C469B1A) - (_DWORD)v849 - 908283277) ^ 0xB623C904) >> v820)) ^ LODWORD(STACK[0x64F8]) ^ __ROR4__(v769, 8) ^ __ROR4__((_DWORD)v822, 16) ^ __ROR4__(v831, 24) ^ v828;
  LODWORD(v822) = v848 & 0x16418096 ^ 0x50C812 ^ (LODWORD(STACK[0x6A30]) ^ 0xFD45008C) & (v848 ^ 0x138A226B);
  LODWORD(v822) = v659 ^ ((((((2 * (_DWORD)v822) & 0x7EE8AFAC) - (_DWORD)v822 - 1064589271) ^ 0xD25B6019) << LODWORD(STACK[0x66F0]) << LODWORD(STACK[0x66F8]))
                        + ((unint64_t)(v848 & 0x48408108 ^ 0x80800028 ^ (v848 ^ 0x138A226B) & (LODWORD(STACK[0x6A20]) ^ 0xEB8080C8)) >> v787)) ^ LODWORD(STACK[0x6500]) ^ __ROR4__(v836, 24) ^ v837 ^ __ROR4__(v830, 8) ^ __ROR4__((_DWORD)v846, 16);
  LODWORD(v843) = v659 ^ (v785 + (v810 >> v820)) ^ LODWORD(STACK[0x6510]) ^ ((_DWORD)v843 + 1);
  v853 = (_DWORD *)(v847 + 4 * v822);
  STACK[0xD618] = (unint64_t)v853;
  LODWORD(v836) = *v853;
  v854 = 4 * v843;
  v855 = v847 + v854;
  v856 = 4 * v769;
  v857 = v855 + v856 - v854;
  STACK[0xD618] = v855;
  LODWORD(v855) = *(_DWORD *)v855;
  STACK[0xD618] = v857;
  v858 = v857 - v856;
  LODWORD(v857) = *(_DWORD *)v857;
  v859 = v858 + 4 * BYTE1(v769);
  STACK[0xD618] = v859;
  LODWORD(v848) = *(_DWORD *)v859;
  v860 = (_DWORD *)(v858 + 4 * BYTE3(v776));
  STACK[0xD618] = (unint64_t)v860;
  LODWORD(v859) = *v860;
  v861 = 4 * BYTE2(v822);
  v862 = v858 + v861;
  v863 = 4 * (v822 >> 24);
  v864 = v862 + v863 - v861;
  v865 = 4 * v776;
  v866 = v864 + v865 - v863;
  v867 = 4 * BYTE2(v776);
  v868 = (_DWORD *)(v866 + v867 - v865);
  STACK[0xD618] = v862;
  LODWORD(v862) = *(_DWORD *)v862;
  STACK[0xD618] = v864;
  LODWORD(v864) = *(_DWORD *)v864;
  STACK[0xD618] = v866;
  LODWORD(v866) = *(_DWORD *)v866;
  STACK[0xD618] = (unint64_t)v868;
  LODWORD(v857) = *v868 ^ __ROR4__(v857, 16);
  v869 = BYTE1(v776);
  v870 = &v868[v867 / 0xFFFFFFFFFFFFFFFCLL + v869];
  v871 = 4 * BYTE2(v843);
  v872 = (_DWORD *)((char *)v870 + v871 - v869 * 4);
  STACK[0xD618] = (unint64_t)v870;
  HIDWORD(v835) = *v870;
  LODWORD(v835) = *v870;
  STACK[0xD618] = (unint64_t)v872;
  LODWORD(v836) = (v835 >> 8) ^ __ROR4__(v836, 16) ^ *v872;
  v873 = 4 * BYTE1(v822);
  v874 = (_DWORD *)((char *)&v872[(unint64_t)v873 / 4] - v871);
  STACK[0xD618] = (unint64_t)v874;
  LODWORD(v857) = v857 ^ __ROR4__(*v874, 8);
  v875 = BYTE1(v843);
  v876 = (unint64_t)&v874[v875 + v873 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = v876;
  v877 = v876 - v875 * 4;
  LODWORD(v876) = *(_DWORD *)v876;
  v878 = 4 * (v843 >> 24);
  v879 = v877 + v878;
  STACK[0xD618] = v879;
  v880 = 4 * BYTE3(v769);
  v881 = (_DWORD *)(v879 + v880 - v878);
  LODWORD(v871) = STACK[0x6518];
  LODWORD(v834) = (v857 ^ __ROR4__(*(_DWORD *)v879, 24)) + LODWORD(STACK[0x6518]) - LODWORD(STACK[0x6930]);
  LODWORD(STACK[0x68D0]) = v834;
  LODWORD(v871) = LODWORD(STACK[0x6940]) ^ v871 ^ __ROR4__(v855, 16) ^ __ROR4__(v848, 8) ^ __ROR4__(v859, 24) ^ v862;
  LODWORD(STACK[0x6890]) = v871;
  STACK[0xD618] = (unint64_t)v881;
  v882 = __PAIR64__(v866, __ROR4__(*v881, 24));
  LODWORD(v839) = v836 ^ v882;
  LODWORD(STACK[0x6810]) = v836 ^ v882;
  v883 = 4 * BYTE2(v769);
  v884 = (_DWORD *)((char *)v881 + v883 - v880);
  LODWORD(v882) = v866;
  STACK[0xD618] = (unint64_t)v884;
  LODWORD(v879) = (v882 >> 16) ^ __ROR4__(v864, 24) ^ __ROR4__(v876, 8) ^ *v884;
  LODWORD(STACK[0x6930]) = v879;
  LODWORD(v836) = (((2 * (v850 & 0x6021AFC4 ^ 0x40018C40)) & 0x40001908) - (v850 & 0x6021AFC4 ^ 0x40018C40) + 1379656539) ^ 0xD218E14B;
  v885 = (unint64_t)v884 - v883;
  LODWORD(v883) = ((2 * v836) & 0x4043A880) - v836 - 1067570242;
  LODWORD(v866) = STACK[0x6A40];
  LODWORD(v836) = v883 & 0xB3F7A6F2 ^ 0xA0742262 ^ (v883 ^ 0xA01F71A2) & (LODWORD(STACK[0x6A40]) ^ 0x4ABCD802);
  LODWORD(v883) = v883 & 0x8D4E3474 ^ 0x89003020 ^ (v883 ^ 0xA01F71A2) & (v852 ^ 0xAE0E5F94);
  LODWORD(v836) = v659 ^ ((((((2 * (_DWORD)v836) | 0x7DA6DBDA) - (_DWORD)v836 + 1093440019) ^ 0xBEB06F2D) << v753 << v819) | (((((2 * (_DWORD)v883) | 0x85C80278) - v883 - 1122238780) ^ 0x4BEA013C) >> v820)) ^ LODWORD(STACK[0x6520]);
  v886 = STACK[0x6A10];
  LODWORD(v862) = ((2 * (v886 & 0x6021AFC4 ^ 0x2020A000)) | 0x1A4CB3F6) - (v886 & 0x6021AFC4 ^ 0x2020A000) + 1926866437;
  LODWORD(v848) = v862 & 0xFFFFFFFC ^ 0x2D64A4F4;
  LODWORD(v883) = v862 & 0x63A760C4 ^ 0x8B3A9A31 ^ (v851 ^ 0x88119EBC) & v848;
  LODWORD(v855) = (LODWORD(STACK[0x6A50]) ^ 0xD17E1824) & v848;
  LODWORD(STACK[0x66E8]) = v848;
  LODWORD(STACK[0x67B0]) = v862;
  LODWORD(v855) = v862 & 0xD17E18A4 ^ 0x16400A4 ^ v855;
  LODWORD(v883) = v659 ^ (v855 >> v787) ^ (((-1557742252 - (_DWORD)v883 + ((2 * (_DWORD)v883) & 0xB9B28552)) ^ 0x93807A1) << LODWORD(STACK[0x6870]) << LODWORD(STACK[0x6910]));
  LODWORD(STACK[0x6560]) = v659;
  LODWORD(v857) = v883 ^ LODWORD(STACK[0x6528]);
  LODWORD(v848) = ((((v866 ^ 0x90EDC1DC) & v848 ^ v862 & 0x69A6BF2C) & 0xE6120D8C ^ 0xC610018F)
                 + ((v866 ^ 0x90EDC1DC) & v848 ^ v862 & 0x69A6BF2C ^ 0x28068C20)
                 - (((v866 ^ 0x90EDC1DC) & v848 ^ v862 & 0x69A6BF2C ^ 0x28068C20) & 0xE6120D8C)) ^ 0xE730258B;
  LODWORD(STACK[0x66E0]) = v848;
  LODWORD(v855) = v855 >> v820;
  LODWORD(STACK[0x68E0]) = v855;
  LODWORD(v883) = (_DWORD)v848 << LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x66A0]) = v883;
  LODWORD(v883) = (v855 | v883) ^ LODWORD(STACK[0x6530]);
  LODWORD(v859) = v850 & 0x6021AFC4 ^ 0xA063D44C;
  LODWORD(STACK[0x6638]) = v859;
  v887 = v851;
  LODWORD(v845) = v850 & 0x20002504 ^ 0xA0424404 ^ (v851 ^ 0x40609B4C) & v859;
  LODWORD(STACK[0x66D8]) = v845;
  v888 = v852;
  LODWORD(v848) = (_DWORD)v845 << LODWORD(STACK[0x64D8]) << LODWORD(STACK[0x6920]);
  LODWORD(STACK[0x6618]) = v848;
  LODWORD(v876) = ((((v859 & (v852 ^ 0xA061E4C8) ^ v850 & 0x218F00) & 0xC001E440 ^ 0x50086051)
                  + ((v859 & (v852 ^ 0xA061E4C8) ^ v850 & 0x218F00) & 0x20621B8C ^ 0x900909)
                  - 2) ^ 0xD0B9ED50) >> v787;
  LODWORD(STACK[0x6920]) = v876;
  LODWORD(v848) = v659 ^ v848 ^ v876 ^ LODWORD(STACK[0x6538]) ^ v871;
  v889 = 4 * BYTE2(v848);
  STACK[0xD618] = v885 + v889;
  LODWORD(STACK[0x6590]) = v839 ^ v659;
  LODWORD(v864) = *(_DWORD *)(v885 + v889);
  LODWORD(v862) = v839 ^ v659 ^ v883;
  STACK[0xD618] = v885;
  LODWORD(v883) = *(_DWORD *)(v885 + 4 * BYTE3(v848));
  v890 = 4 * BYTE1(v862);
  v891 = v885 + v890;
  v892 = 4 * BYTE2(v862);
  v893 = (_DWORD *)(v891 + v892 - v890);
  LODWORD(v836) = v836 ^ v834;
  STACK[0xD618] = v891;
  LODWORD(v855) = *(_DWORD *)v891;
  STACK[0xD618] = (unint64_t)v893;
  v894 = (unint64_t)&v893[v892 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v659) = *v893;
  STACK[0xD618] = v894;
  LODWORD(v866) = *(_DWORD *)(v894 + 4 * v862);
  v895 = (_DWORD *)(v894 + 4 * v836);
  STACK[0xD618] = (unint64_t)v895;
  LODWORD(v857) = v857 ^ v879;
  LODWORD(v893) = *v895;
  v896 = 4 * v848;
  v897 = (_DWORD *)(v894 + v896);
  v898 = 4 * v857;
  v899 = (_DWORD *)((char *)v897 + v898 - v896);
  v900 = (unint64_t)&v899[BYTE1(v848)] - v898;
  v901 = (_DWORD *)((char *)&v899[BYTE3(v857)] - v898);
  v902 = (uint64_t)&v899[BYTE2(v836)] - v898;
  v903 = (uint64_t)&v899[BYTE3(v862)] - v898;
  v904 = (uint64_t)&v899[BYTE2(v857)] - v898;
  v905 = (uint64_t)&v899[BYTE3(v836)] - v898;
  v906 = (_DWORD *)((char *)&v899[BYTE1(v857)] - v898);
  v907 = 4 * BYTE1(v836);
  v908 = (_DWORD *)((char *)&v899[(unint64_t)v907 / 4] - v898);
  LODWORD(v836) = ((2 * (v886 & 0x7B0F9F11 ^ 0x630B9411)) | 0xFE45F1E2) - (v886 & 0x7B0F9F11 ^ 0x630B9411) - 2132998385;
  LODWORD(v857) = ((2 * (v886 & 0x720F1E00 ^ 0x30000C00)) & 0x240E1800) - (v886 & 0x720F1E00 ^ 0x30000C00) - 380054670;
  LODWORD(v891) = (v836 & 0x90B49A3D ^ LODWORD(STACK[0x1468])) + (v836 & 0x6F4B65C2 ^ 0x470A44C1) - 1;
  LODWORD(v836) = v891 & 0x9E0C1DD ^ ((v857 & 0x225F1400 ^ 0x200D0409) + (v857 & 0xDC206A00 ^ 0x5D202961) - 2);
  LODWORD(v857) = v836 ^ 0xF7BF3E2F;
  LODWORD(v836) = v836 ^ 0x2CF5F47;
  LODWORD(v898) = v857 & 0x70AF5F51 ^ (v887 ^ 0x9B19A12B) & v836 ^ 0x10840000;
  v909 = v888;
  LODWORD(v836) = v857 & 0x49A7CE5C ^ v836 & (v888 ^ 0x6AE7A59C);
  v910 = LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x63B8]);
  LODWORD(v836) = v910 ^ ((v836 ^ 0x41204068) >> v820) ^ (((((2 * (_DWORD)v898) & 0x4D54AB00)
                                                                        - (_DWORD)v898
                                                                        + 1498786431) ^ 0x39F1EB3F) << LODWORD(STACK[0x6960]) << LODWORD(STACK[0x69C0])) ^ LODWORD(STACK[0x6540]) ^ v864 ^ __ROR4__(v866, 16);
  STACK[0xD618] = (unint64_t)v897;
  LODWORD(v866) = *v897;
  STACK[0xD618] = (unint64_t)v899;
  LODWORD(v857) = *v899;
  STACK[0xD618] = v900;
  LODWORD(v899) = *(_DWORD *)v900;
  STACK[0xD618] = (unint64_t)v901;
  LODWORD(v897) = *v901;
  STACK[0xD618] = v902;
  LODWORD(v900) = *(_DWORD *)v902;
  STACK[0xD618] = v903;
  LODWORD(v901) = *(_DWORD *)v903;
  STACK[0xD618] = v904;
  LODWORD(v903) = *(_DWORD *)v904;
  STACK[0xD618] = v905;
  LODWORD(v836) = v836 ^ __ROR4__(*(_DWORD *)v905, 24);
  STACK[0xD618] = (unint64_t)v906;
  v911 = v836 ^ __ROR4__(*v906, 8);
  LODWORD(v904) = v850;
  LODWORD(v864) = v850 & 0x7B0F9F11 ^ 0x9719A532;
  LODWORD(v898) = STACK[0x6A40];
  LODWORD(v836) = v850 & 0x63078301 ^ 0x8004A1A0 ^ v864 & (LODWORD(STACK[0x6A40]) ^ 0x1A0C9D10);
  v912 = STACK[0x6A50];
  LODWORD(v879) = v864;
  LODWORD(STACK[0x6960]) = v864;
  LODWORD(v902) = v904 & 0x5A0A9A00 ^ v864 & (v912 ^ 0xDE0A9A00) ^ 0x46080200;
  LODWORD(v905) = ((-1850168348 - (_DWORD)v836 + ((2 * (_DWORD)v836) | 0xDC8EA7FC) + 30) ^ 0x6D42537E) << LODWORD(STACK[0x6608]) << LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x6580]) = v905;
  LODWORD(v836) = (((2 * v902) | 0xE911988C) - v902 - 1955122246) ^ 0xA4884E46;
  v913 = STACK[0x6A90];
  v914 = v910 ^ (v905 | (v836 >> STACK[0x6A90])) ^ LODWORD(STACK[0x6548]) ^ __ROR4__(v857, 16) ^ __ROR4__((_DWORD)v899, 8) ^ v900 ^ __ROR4__((_DWORD)v901, 24);
  LODWORD(STACK[0x6670]) = v891;
  LODWORD(STACK[0x6548]) = v891 ^ 0x65A9040F;
  LODWORD(v900) = v891 & 0x21DA0662 ^ 0x100460 ^ (v891 ^ 0x65A9040F) & (v909 ^ 0x29A6D82);
  LODWORD(v891) = (((((v898 ^ 0xCCA42FF7) & (v891 ^ 0x65A9040F) ^ v891 & 0x35EF5106) & 0xE4F5A77 ^ 0xA0A1A77)
                  + ((v898 ^ 0xCCA42FF7) & (v891 ^ 0x65A9040F) ^ v891 & 0x35EF5106 ^ 0x5E54100)
                  - (((v898 ^ 0xCCA42FF7) & (v891 ^ 0x65A9040F) ^ v891 & 0x35EF5106 ^ 0x5E54100) & 0xE4F5A77)) ^ 0x2E031B71) << LODWORD(STACK[0x5F98]) << LODWORD(STACK[0x5FA0]);
  LODWORD(STACK[0x6578]) = v891;
  LODWORD(STACK[0x6558]) = v910;
  v915 = v910 ^ (v891 + (((((2 * (_DWORD)v900) & 0xEB160DA2) - v900 + 175438126) ^ 0x2BECF94C) >> v913)) ^ LODWORD(STACK[0x6550]) ^ __ROR4__(v883, 24) ^ __ROR4__(v855, 8) ^ __ROR4__((_DWORD)v893, 16) ^ v903;
  v916 = v904;
  LODWORD(v883) = v904 & 0x390B9B01 ^ 0x10099882 ^ (v887 ^ 0xD60D2531) & v879;
  LODWORD(v891) = (((_DWORD)v883 - ((2 * (_DWORD)v883) & 0x5C3B1406) - 1373779445) ^ 0xAB0DD38B) << LODWORD(STACK[0x5F58]) << LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x6550]) = v891;
  LODWORD(v891) = v910 ^ (v891 + (v836 >> v820)) ^ LODWORD(STACK[0x6568]) ^ v659 ^ __ROR4__(v866, 16) ^ __ROR4__((_DWORD)v897, 24);
  STACK[0xD618] = (unint64_t)v908;
  v917 = &v908[v907 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v855) = *v908;
  v918 = &v908[v907 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v914)];
  STACK[0xD618] = (unint64_t)v918;
  v919 = *v918;
  v920 = &v908[v907 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v915)];
  STACK[0xD618] = (unint64_t)v920;
  v921 = *v920;
  v922 = v891 ^ __ROR4__(v855, 8);
  v923 = 4 * BYTE1(v915);
  v924 = &v917[(unint64_t)v923 / 4];
  v925 = 4 * BYTE2(v915);
  v926 = &v924[(unint64_t)v925 / 4 + v923 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v924;
  LODWORD(STACK[0x6528]) = *v924;
  STACK[0xD618] = (unint64_t)v926;
  v927 = (unint64_t)&v926[v925 / 0xFFFFFFFFFFFFFFFCLL];
  v928 = *v926;
  STACK[0xD618] = v927;
  LODWORD(STACK[0x6530]) = *(_DWORD *)(v927 + 4 * HIBYTE(v914));
  v929 = 4 * BYTE1(v922);
  v930 = (_DWORD *)(v927 + v929);
  v931 = 4 * HIBYTE(v922);
  v932 = &v930[(unint64_t)v931 / 4 + v929 / 0xFFFFFFFFFFFFFFFCLL];
  v933 = &v930[v929 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v922)];
  STACK[0xD618] = (unint64_t)v930;
  HIDWORD(v882) = *v930;
  LODWORD(v882) = *v930;
  v934 = v882 >> 8;
  v935 = (v882 >> 8) & 0x8000000;
  if ((v935 & v928) != 0)
    LODWORD(v935) = -(int)v935;
  LODWORD(STACK[0x6538]) = v935 + v928;
  v936 = &v932[v931 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v911)];
  v937 = &v932[v931 / 0xFFFFFFFFFFFFFFFCLL + v914];
  v938 = (uint64_t)&v932[v931 / 0xFFFFFFFFFFFFFFFCLL + v915];
  v939 = &v932[v931 / 0xFFFFFFFFFFFFFFFCLL + v922];
  v940 = &v932[v931 / 0xFFFFFFFFFFFFFFFCLL + v911];
  v941 = (uint64_t)&v932[v931 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v911)];
  v942 = &v932[v931 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v914)];
  v943 = 4 * HIBYTE(v911);
  v944 = (unint64_t)&v932[v931 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v943 / 4];
  v945 = (((2 * (STACK[0x6A10] & 0x67BE3DF3 ^ 0x651A0562)) & 0x83386226)
        - (STACK[0x6A10] & 0x67BE3DF3 ^ 0x651A0562)
        - 1507603228) ^ 0x86D69C85;
  v946 = ((2 * v945) & 0xB7D64328) - v945 - 1542136213;
  v947 = v946 & 0xC8F09934 ^ 0x8008814 ^ (v887 ^ 0x2346674E) & (v946 ^ 0x6A23E00E);
  LODWORD(STACK[0x6568]) = v946 ^ 0x6A23E00E;
  LODWORD(STACK[0x6600]) = v946;
  v948 = (v912 ^ 0xBE4A8FBD) & (v946 ^ 0x6A23E00E) ^ v946 & 0xBE4A8F3D;
  v949 = ((LODWORD(STACK[0x146C]) | (2 * (v916 & 0x67BE3DF3 ^ 0x42A83441)))
        - (v916 & 0x67BE3DF3 ^ 0x42A83441)
        + 1977333477) ^ 0x8AA8668F;
  v950 = ((2 * v949) & 0x9F9F1C50) - v949;
  v951 = (LODWORD(STACK[0x67C0]) + 1699816034) ^ 0xF0C67811;
  LODWORD(STACK[0x67C0]) = v951;
  v952 = (((v948 & 0x4F081AC1 ^ 0x470010C1) + (v948 ^ 0x28080A30) - ((v948 ^ 0x28080A30) & 0x4F081AC1)) ^ 0x4D0290FD) >> v820;
  v953 = STACK[0x6A90];
  v954 = LODWORD(STACK[0x67A0]) ^ (v951 >> STACK[0x6A90]) ^ LODWORD(STACK[0x6990]);
  v955 = v954 ^ (((((v947 | 0xDB76248) - (v947 | 0xF2489DB7) - 230122057) ^ 0x4D976A58) << LODWORD(STACK[0x6880])) | v952) ^ LODWORD(STACK[0x6570]) ^ __ROR4__(v919, 8);
  STACK[0xD618] = (unint64_t)v932;
  v956 = *v932;
  STACK[0xD618] = (unint64_t)v933;
  v957 = v955 ^ __ROR4__(v921, 24) ^ *v933;
  STACK[0xD618] = (unint64_t)v936;
  v958 = *v936;
  STACK[0xD618] = (unint64_t)v937;
  v959 = *v937;
  STACK[0xD618] = v938;
  v960 = *(_DWORD *)v938;
  STACK[0xD618] = (unint64_t)v939;
  v961 = *v939;
  STACK[0xD618] = (unint64_t)v940;
  LODWORD(v940) = v957 ^ __ROR4__(*v940, 16);
  LODWORD(v938) = STACK[0x6A40];
  LODWORD(v939) = (v950 - 1339002409) ^ 0x5C4E0835;
  LODWORD(STACK[0x6540]) = v950 - 1339002409;
  v962 = STACK[0x6A20];
  LODWORD(STACK[0x6570]) = (_DWORD)v939;
  v963 = ((v950 - 1339002409) & 0x617CAEA1 ^ 0x404C0821 ^ v939 & (v962 ^ 0x423CC541)) >> v953;
  LODWORD(v953) = v954 ^ (((v950 - 1339002409) & 0xB75E3FC7 ^ 0x144E0805 ^ v939 & (v938 ^ 0x4E154136)) << LODWORD(STACK[0x6A70])) ^ v963 ^ LODWORD(STACK[0x6598]) ^ __ROR4__(STACK[0x6528], 8) ^ __ROR4__(STACK[0x6530], 24);
  STACK[0xD618] = v941;
  LODWORD(v953) = v953 ^ __ROR4__(v961, 16) ^ *(_DWORD *)v941;
  v964 = STACK[0x6A30];
  v965 = v954 ^ ((((v950 - 1339002409) & 0x627B2BA ^ 0x4060030 ^ v939 & (LODWORD(STACK[0x6A30]) ^ 0xED914CC0)) << LODWORD(STACK[0x69D0]) << LODWORD(STACK[0x6980])) | v963);
  LODWORD(STACK[0x67D0]) = v954;
  v966 = v965 ^ LODWORD(STACK[0x65A0]) ^ __ROR4__(v956, 24) ^ __ROR4__(v958, 8);
  STACK[0xD618] = (unint64_t)v942;
  v967 = v966 ^ __ROR4__(v960, 16) ^ *v942;
  v968 = v946 & 0x8712AF09 ^ 0x3020E01 ^ (v938 ^ LODWORD(STACK[0x1470])) & (v946 ^ 0x6A23E00E);
  v969 = (v968 - ((2 * v968) & 0x83EF654A) - 1040731483) ^ 0xC0F71CAC;
  LODWORD(STACK[0x65A0]) = v969;
  v970 = v954 ^ (v969 << LODWORD(STACK[0x6610]) << LODWORD(STACK[0x6608])) ^ v952 ^ LODWORD(STACK[0x65A8]) ^ v934 & 0xF7FFFFFF ^ LODWORD(STACK[0x6538]) ^ __ROR4__(v959, 16);
  STACK[0xD618] = v944;
  v971 = v944 - v943;
  v972 = __ROR4__(*(_DWORD *)v944, 24);
  v973 = (int *)(v944 - v943 + 4 * v940);
  STACK[0xD618] = (unint64_t)v973;
  v974 = *v973;
  v975 = (_DWORD *)(v944 - v943 + 4 * ((v970 ^ v972) >> 16));
  STACK[0xD618] = (unint64_t)v975;
  LODWORD(v944) = *v975;
  STACK[0xD618] = v971;
  LODWORD(v937) = *(_DWORD *)(v971 + 4 * ((unsigned __int16)(v970 ^ v972) >> 8));
  v976 = (_DWORD *)(v971 + 4 * v967);
  STACK[0xD618] = (unint64_t)v976;
  LODWORD(v941) = *v976;
  v977 = v971 + 4 * BYTE2(v967);
  STACK[0xD618] = v977;
  v978 = *(_DWORD *)v977;
  STACK[0xD618] = v971;
  LODWORD(v977) = *(_DWORD *)(v971 + 4 * v953);
  v979 = (_DWORD *)(v971 + 4 * BYTE3(v953));
  STACK[0xD618] = (unint64_t)v979;
  LODWORD(v975) = *v979;
  v980 = (int *)(v971 + 4 * BYTE1(v967));
  STACK[0xD618] = (unint64_t)v980;
  v981 = *v980;
  v982 = 4 * BYTE1(v940);
  v983 = v971 + v982;
  v984 = 4 * BYTE1(v953);
  v985 = (_DWORD *)(v983 + v984 - v982);
  v986 = 4 * (v940 >> 24);
  v987 = &v985[(unint64_t)v986 / 4 + v984 / 0xFFFFFFFFFFFFFFFCLL];
  v988 = 4 * HIBYTE(v967);
  v989 = &v987[v986 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v988 / 4];
  v990 = BYTE2(v953);
  v991 = (unint64_t)&v989[v990 + v988 / 0xFFFFFFFFFFFFFFFCLL];
  v992 = 4 * ((v970 ^ v972) >> 24);
  v993 = (_DWORD *)(v991 - v990 * 4 + v992);
  v994 = 4 * (v970 ^ v972);
  v995 = (_DWORD *)((char *)&v993[(unint64_t)v994 / 4] - v992);
  STACK[0xD618] = v983;
  LODWORD(v992) = *(_DWORD *)v983;
  STACK[0xD618] = (unint64_t)v985;
  LODWORD(v985) = *v985;
  STACK[0xD618] = (unint64_t)v987;
  LODWORD(v987) = *v987;
  STACK[0xD618] = (unint64_t)v989;
  LODWORD(v989) = *v989;
  STACK[0xD618] = v991;
  LODWORD(v991) = *(_DWORD *)v991;
  STACK[0xD618] = (unint64_t)v993;
  LODWORD(v993) = *v993;
  STACK[0xD618] = (unint64_t)v995;
  v996 = (unint64_t)&v995[v994 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v979) = *v995;
  v997 = 4 * BYTE2(v940);
  STACK[0xD618] = v996 + v997;
  LODWORD(v983) = (((STACK[0x6A10] & 0x1C0BCC60 ^ 0x9B0037D) - 1) & 0x19100A04 ^ 0x2403801)
                + (((STACK[0x6A10] & 0x1C0BCC60 ^ 0x9B0037D) - 1) ^ 0x3D1D0374)
                - ((((STACK[0x6A10] & 0x1C0BCC60 ^ 0x9B0037D) - 1) ^ 0x3D1D0374) & 0x18240808);
  LODWORD(STACK[0x6A10]) = v983;
  LODWORD(STACK[0x6608]) = v983 ^ 0xBCFA2C4;
  v998 = v983 & 0xFD1B1C33 ^ 0x90B0000 ^ (v964 ^ 0x16ADE249) & (v983 ^ 0xBCFA2C4);
  v999 = v983 & 0x49F45571 ^ 0x9C40040 ^ (v983 ^ 0xBCFA2C4) & (v962 ^ 0x6AB43E91);
  v1000 = *(_DWORD *)(v996 + v997);
  STACK[0xD618] = v996;
  LODWORD(v983) = STACK[0x69F0];
  v1001 = STACK[0x69F0] & 0x1C0BCC60 ^ 0x38155081;
  v1002 = STACK[0x6A50];
  LODWORD(STACK[0x6610]) = v1001;
  LODWORD(v996) = v983 & 0x18028460 ^ 0x18C60480 ^ v1001 & (v1002 ^ 0x38068460);
  LODWORD(v997) = ((2 * v996) & 0x2900A980) - v996;
  LODWORD(v940) = v983 & 0x1C080440 ^ 0x18141001 ^ (v983 & 0x1C0BCC60 ^ 0x38155081) & (v938 ^ 0x241748A0);
  LODWORD(v996) = LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x68F0]);
  LOBYTE(v964) = STACK[0x6A80];
  v1003 = v996 ^ (v999 >> v964);
  LODWORD(v937) = v1003 ^ (v998 << LODWORD(STACK[0x6710]) << LODWORD(STACK[0x68A0])) ^ LODWORD(STACK[0x65B0]) ^ __ROR4__(v974, 16) ^ __ROR4__((_DWORD)v937, 8) ^ __ROR4__((_DWORD)v989, 24) ^ v991;
  v1004 = STACK[0x6A90];
  LODWORD(v991) = ((v997 - 1419793631) ^ LODWORD(STACK[0x1474])) >> STACK[0x6A90];
  LODWORD(v941) = v996 ^ ((_DWORD)v940 << LODWORD(STACK[0x6900]) << LODWORD(STACK[0x6A60])) ^ v991 ^ LODWORD(STACK[0x65B8]) ^ v944 ^ __ROR4__(v941, 16) ^ __ROR4__((_DWORD)v975, 24) ^ __ROR4__(v992, 8);
  LODWORD(v975) = v996 ^ ((_DWORD)v940 << LODWORD(STACK[0x6730]) << LODWORD(STACK[0x68B0])) ^ v991 ^ LODWORD(STACK[0x65C0]) ^ __ROR4__(v977, 16) ^ __ROR4__(v981, 8) ^ __ROR4__((_DWORD)v993, 24) ^ v1000;
  LODWORD(v977) = v1003 ^ (v998 << LODWORD(STACK[0x6630]) << LODWORD(STACK[0x6648])) ^ LODWORD(STACK[0x65D0]) ^ v978 ^ __ROR4__((_DWORD)v985, 8) ^ __ROR4__((_DWORD)v987, 24);
  v1006 = __ROR4__((_DWORD)v979, 16);
  v1005 = v977 ^ v1006;
  v1007 = (_DWORD *)(STACK[0xD620] + 4 * (v977 ^ v1006));
  v1008 = (_DWORD *)(STACK[0xD620] + 4 * (v937 >> 24));
  HIDWORD(v1009) = *(_DWORD *)(STACK[0xD620] + 4 * v941);
  LODWORD(v1009) = HIDWORD(v1009);
  LODWORD(v977) = (v1009 >> 8) ^ __ROR4__(*(_DWORD *)(STACK[0xD620] + 4 * (v975 >> 24)), 16);
  v1010 = STACK[0xD620] + 4 * BYTE2(v975);
  v1011 = (_DWORD *)(STACK[0xD620] + 4 * BYTE1(v941));
  v1012 = STACK[0xD620];
  STACK[0xD620] = STACK[0xD620];
  v1013 = *(_DWORD *)(v1012 + 4 * BYTE3(v941));
  v1014 = (_DWORD *)(v1012 + 4 * BYTE2(v937));
  STACK[0xD620] = (unint64_t)v1014;
  LODWORD(v985) = *v1014;
  v1015 = 4 * HIBYTE(v1005);
  v1016 = v1012 + v1015;
  v1017 = 4 * v937;
  v1018 = (_DWORD *)(v1016 + v1017 - v1015);
  v1019 = BYTE1(v937);
  v1020 = (unint64_t)&v1018[v1019 + v1017 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD620] = v1016;
  LODWORD(v1016) = *(_DWORD *)v1016;
  STACK[0xD620] = (unint64_t)v1018;
  LODWORD(v1018) = *v1018;
  STACK[0xD620] = v1020;
  v1021 = v1020 - v1019 * 4;
  LODWORD(v1020) = *(_DWORD *)v1020;
  v1022 = (_DWORD *)(v1021 + 4 * BYTE2(v941));
  STACK[0xD620] = (unint64_t)v1022;
  LODWORD(v941) = *v1022;
  LODWORD(v977) = v977 ^ v1020;
  v1023 = 4 * v975;
  v1024 = (_DWORD *)(v1021 + v1023);
  v1025 = BYTE1(v975);
  v1026 = (unint64_t)&v1024[v1025 + v1023 / 0xFFFFFFFFFFFFFFFCLL];
  v1027 = 4 * BYTE2(v1005);
  v1028 = v1026 + v1027 - v1025 * 4;
  STACK[0xD620] = (unint64_t)v1024;
  LODWORD(v1024) = *v1024;
  STACK[0xD620] = v1026;
  LODWORD(v1026) = *(_DWORD *)v1026;
  STACK[0xD620] = v1028;
  v1029 = v1028 - v1027;
  LODWORD(v1028) = v977 ^ __ROR4__(*(_DWORD *)v1028, 24);
  v1030 = v1029 + 4 * BYTE1(v1005);
  STACK[0xD620] = v1030;
  v1031 = *(_DWORD *)v1030;
  STACK[0xD620] = v1029;
  v1032 = STACK[0x6840];
  v1033 = (LODWORD(STACK[0x65E0]) - ((2 * LODWORD(STACK[0x65E0])) & 0xCE57CAEE) + 1730930039) ^ LODWORD(STACK[0x6840]) ^ __ROR4__(*(_DWORD *)v1010, 24) ^ __ROR4__(v1013, 16) ^ __ROR4__((_DWORD)v1018, 8) ^ v1031;
  LODWORD(v1030) = LODWORD(STACK[0x65E8]) - 1334469516 - ((2 * LODWORD(STACK[0x65E8])) & 0x60EB38E8);
  LODWORD(v997) = STACK[0x6830];
  LODWORD(v1028) = (v1028 - 1334469516 - ((2 * v1028) & 0x60EB38E8)) ^ LODWORD(STACK[0x6830]);
  LODWORD(v1010) = v1028 - 1515667310 - ((2 * v1028) & 0x4B518124);
  LODWORD(v941) = LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x65F0]) ^ __ROR4__(*v1007, 8) ^ __ROR4__(*v1008, 16) ^ __ROR4__(v941, 24) ^ 0x1932ED2E ^ v1026;
  v1034 = ((v1033 ^ 0xC71EF269) - 1334469516 - 2 * ((v1033 ^ 0xC71EF269) & 0x30759C76 ^ v1033 & 2)) ^ LODWORD(STACK[0x6830]);
  LODWORD(STACK[0x6900]) = v1034 - 1515667310 - ((2 * v1034) & 0x4B518124);
  LODWORD(v1028) = v1032 ^ LODWORD(STACK[0x6820]);
  LODWORD(STACK[0x6A60]) = v1028;
  LODWORD(STACK[0x68F0]) = v1028 ^ v997 ^ 0x6AF4EEE6 ^ v1030 ^ *v1011 ^ __ROR4__((_DWORD)v985, 24) ^ __ROR4__(v1016, 16) ^ __ROR4__((_DWORD)v1024, 8);
  LODWORD(STACK[0x6820]) = v1028 ^ LODWORD(STACK[0x65F8]) ^ 0xCF5C2E74 ^ v1010;
  LODWORD(STACK[0x6730]) = v941 - 1515667310 - ((2 * v941) & 0x4B518124);
  v1035 = v1002;
  LODWORD(v1030) = v983 & 0x40210704 ^ 0x40BE050C ^ STACK[0x6638] & (v1002 ^ 0x4023178C);
  LODWORD(v1024) = LODWORD(STACK[0x6590]) ^ ((((((2 * (_DWORD)v1030) | 0x2160F9C0) - (_DWORD)v1030 + 1867481888) ^ 0xD02D6DE0) >> v964)
                                           + LODWORD(STACK[0x6618])) ^ LODWORD(STACK[0x6620]);
  v1036 = v962;
  LODWORD(v1030) = (((STACK[0x67B0] & 0x4A334E58 ^ 0xA6B287D1 ^ STACK[0x66E8] & (v962 ^ 0x697325B8)) - 1) ^ 0xAE928380) >> v1004;
  LOBYTE(v962) = v1004;
  v1037 = (LODWORD(STACK[0x68D0]) ^ 0x90416C8C ^ (LODWORD(STACK[0x6810]) + 406098384)) + LODWORD(STACK[0x6890]);
  LODWORD(v941) = LODWORD(STACK[0x6560]) ^ (LODWORD(STACK[0x66A0]) + v1030) ^ LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6890]);
  LODWORD(v1030) = LODWORD(STACK[0x6560]) ^ (LODWORD(STACK[0x66E0]) << LODWORD(STACK[0x6740]) << LODWORD(STACK[0x69E0])) ^ LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x6650]);
  LODWORD(v1007) = LODWORD(STACK[0x6560]) ^ (LODWORD(STACK[0x6920]) | (LODWORD(STACK[0x66D8]) << LODWORD(STACK[0x6A70]))) ^ LODWORD(STACK[0x6660]) ^ LODWORD(STACK[0x68D0]);
  v1038 = STACK[0xD618];
  v1039 = (_DWORD *)(STACK[0xD618] + 4 * BYTE2(v941));
  STACK[0xD618] = (unint64_t)v1039;
  LODWORD(v1016) = *v1039;
  STACK[0xD618] = v1038;
  LODWORD(v1010) = *(_DWORD *)(v1038 + 4 * BYTE2(v1007));
  v1040 = (_DWORD *)(v1038 + 4 * BYTE1(v1024));
  STACK[0xD618] = (unint64_t)v1040;
  LODWORD(v1039) = *v1040;
  LODWORD(v1040) = v1030 ^ LODWORD(STACK[0x6930]);
  v1041 = 4 * BYTE2(v1040);
  v1042 = v1038 + v1041;
  v1043 = 4 * (v1007 >> 24);
  v1044 = v1042 + v1043 - v1041;
  v1045 = 4 * (v1024 >> 24);
  v1046 = (_DWORD *)(v1044 + v1045 - v1043);
  v1047 = BYTE2(v1024);
  v1048 = (unint64_t)&v1046[v1047 + v1045 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v997) = LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x1478]);
  STACK[0xD618] = v1042;
  LODWORD(v1042) = *(_DWORD *)v1042;
  STACK[0xD618] = v1044;
  v1049 = *(_DWORD *)v1044;
  STACK[0xD618] = (unint64_t)v1046;
  LODWORD(v1046) = *v1046;
  STACK[0xD618] = v1048;
  v1050 = v1048 - v1047 * 4;
  LODWORD(v1048) = *(_DWORD *)v1048;
  STACK[0xD618] = v1050;
  v1051 = *(_DWORD *)(v1050 + 4 * BYTE1(v1007));
  LODWORD(STACK[0x6930]) = v997 ^ v1037;
  v1052 = 4 * BYTE1(v1040);
  v1053 = (_DWORD *)(v1050 + v1052);
  v1054 = v1040;
  v1055 = (unint64_t)&v1053[v1054 + v1052 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1053;
  LODWORD(v1053) = *v1053;
  STACK[0xD618] = v1055;
  v1056 = v1055 - v1054 * 4;
  LODWORD(v1055) = *(_DWORD *)v1055;
  v1057 = (int *)(v1056 + 4 * v941);
  STACK[0xD618] = (unint64_t)v1057;
  v1058 = *v1057;
  v1059 = 4 * (v1040 >> 24);
  v1060 = (_DWORD *)(v1056 + v1059);
  v1061 = 4 * BYTE3(v941);
  v1062 = &v1060[(unint64_t)v1061 / 4 + v1059 / 0xFFFFFFFFFFFFFFFCLL];
  v1063 = v1007;
  v1064 = (unint64_t)&v1062[v1061 / 0xFFFFFFFFFFFFFFFCLL + v1063];
  v1065 = 4 * BYTE1(v941);
  v1066 = (_DWORD *)(v1064 + v1065 - v1063 * 4);
  v1067 = 4 * v1024;
  v1068 = (unint64_t)v1066 + v1067 - v1065;
  LODWORD(v1028) = STACK[0x6A30];
  LODWORD(v1044) = STACK[0x6670] & 0xDA534B0D ^ 0x1043430D ^ (LODWORD(STACK[0x6A30]) ^ 0x31E5B577) & STACK[0x6548];
  LODWORD(v1026) = ((((v1035 ^ 0x10BB4A4B) & STACK[0x6548] ^ STACK[0x6670] & 0x10BB4ACB) & 0x8A804C03 ^ 0xA004403)
                  + (((v1035 ^ 0x10BB4A4B) & STACK[0x6548] ^ STACK[0x6670] & 0x10BB4ACB) & 0x757FB3FC ^ LODWORD(STACK[0x147C]))
                  - 1) ^ 0xFCB46AC;
  LODWORD(v938) = STACK[0x6A80];
  LODWORD(v1004) = STACK[0x6558];
  LODWORD(v1044) = LODWORD(STACK[0x6558]) ^ ((((((2 * (_DWORD)v1044) & 0xE7510FE6) - (_DWORD)v1044 - 1940424692) ^ 0xDC153B0C) << LODWORD(STACK[0x6710]) << LODWORD(STACK[0x68A0])) | (v1026 >> LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6668]) ^ v1016 ^ __ROR4__(v1049, 24) ^ __ROR4__((_DWORD)v1053, 8);
  STACK[0xD618] = (unint64_t)v1060;
  LODWORD(v1016) = *v1060;
  STACK[0xD618] = (unint64_t)v1062;
  LODWORD(v1062) = *v1062;
  STACK[0xD618] = v1064;
  LODWORD(v1053) = *(_DWORD *)v1064;
  STACK[0xD618] = (unint64_t)v1066;
  LODWORD(v1066) = *v1066;
  STACK[0xD618] = v1068;
  v1069 = v1068 - v1067;
  LODWORD(v1044) = v1044 ^ __ROR4__(*(_DWORD *)v1068, 16);
  v1070 = v1036;
  LODWORD(v1067) = v983 & 0x10058201 ^ 0x90018020 ^ STACK[0x6960] & (v1036 ^ 0xB305A901);
  v1071 = v962;
  LODWORD(v1068) = v1004 ^ (LODWORD(STACK[0x6580]) | (v1067 >> v962)) ^ LODWORD(STACK[0x6678]) ^ v1048 ^ __ROR4__(v1051, 8) ^ __ROR4__(v1058, 16) ^ __ROR4__(v1016, 24);
  LODWORD(v1042) = v1004 ^ LODWORD(STACK[0x6578]) ^ (v1026 >> v962) ^ LODWORD(STACK[0x6680]) ^ __ROR4__((_DWORD)v1039, 8) ^ v1042 ^ __ROR4__((_DWORD)v1062, 24) ^ __ROR4__((_DWORD)v1053, 16);
  LOBYTE(v1064) = v938;
  LODWORD(v1066) = v1004 ^ (LODWORD(STACK[0x6550]) + (v1067 >> v938)) ^ LODWORD(STACK[0x6688]) ^ v1010 ^ __ROR4__((_DWORD)v1046, 24) ^ __ROR4__(v1055, 16) ^ __ROR4__((_DWORD)v1066, 8);
  v1072 = (_DWORD *)(v1069 + 4 * BYTE2(v1068));
  STACK[0xD618] = (unint64_t)v1072;
  LODWORD(v1055) = *v1072;
  STACK[0xD618] = v1069;
  LODWORD(v1010) = *(_DWORD *)(v1069 + 4 * BYTE2(v1066));
  v1073 = (_DWORD *)(v1069 + 4 * BYTE1(v1068));
  STACK[0xD618] = (unint64_t)v1073;
  LODWORD(v1072) = *v1073;
  v1074 = v1069 + 4 * BYTE2(v1042);
  v1075 = v1069 + 4 * (v1066 >> 24);
  v1076 = (_DWORD *)(v1069 + 4 * BYTE3(v1044));
  v1077 = (_DWORD *)(v1069 + 4 * v1042);
  v1078 = (_DWORD *)(v1069 + 4 * BYTE3(v1068));
  v1079 = (_DWORD *)(v1069 + 4 * v1044);
  STACK[0xD618] = v1074;
  LODWORD(v1074) = *(_DWORD *)v1074;
  STACK[0xD618] = v1075;
  LODWORD(v1075) = *(_DWORD *)v1075;
  STACK[0xD618] = (unint64_t)v1076;
  LODWORD(v1076) = *v1076;
  STACK[0xD618] = (unint64_t)v1077;
  LODWORD(v1077) = *v1077;
  STACK[0xD618] = (unint64_t)v1078;
  LODWORD(v1078) = *v1078;
  STACK[0xD618] = (unint64_t)v1079;
  v1080 = v1069;
  LODWORD(v1079) = *v1079;
  v1081 = (_DWORD *)(v1069 + 4 * BYTE3(v1042));
  STACK[0xD618] = (unint64_t)v1081;
  LODWORD(v1053) = *v1081;
  v1082 = 4 * v1066;
  v1083 = (_DWORD *)(v1080 + v1082);
  v1084 = 4 * BYTE1(v1044);
  v1085 = &v1083[(unint64_t)v1084 / 4 + v1082 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1083;
  LODWORD(v1083) = *v1083;
  STACK[0xD618] = (unint64_t)v1085;
  v1086 = &v1085[v1084 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1085) = *v1085;
  v1087 = &v1086[BYTE2(v1044)];
  STACK[0xD618] = (unint64_t)v1087;
  LODWORD(v1044) = *v1087;
  v1088 = (unint64_t)&v1086[v1068];
  STACK[0xD618] = v1088;
  LODWORD(v1068) = *(_DWORD *)v1088;
  v1089 = 4 * BYTE1(v1066);
  v1090 = &v1086[(unint64_t)v1089 / 4];
  v1091 = 4 * BYTE1(v1042);
  v1092 = &v1090[(unint64_t)v1091 / 4 + v1089 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v983) = STACK[0x6A50];
  LODWORD(v938) = STACK[0x6540] & 0xBBBD105D ^ 0x180C0015 ^ STACK[0x6570] & (LODWORD(STACK[0x6A50]) ^ 0xBBBD10DD);
  v1093 = (STACK[0x6540] & 0xE7A8767A ^ 0x44080030 ^ STACK[0x6570] & (v1028 ^ 0xC1E8800)) << LODWORD(STACK[0x6910]) << LODWORD(STACK[0x6870]);
  LODWORD(v1088) = LODWORD(STACK[0x67A0]) ^ LODWORD(STACK[0x6990]);
  LODWORD(v1044) = v1088 ^ ((v938 ^ LODWORD(STACK[0x67C0])) >> v962) ^ v1093 ^ LODWORD(STACK[0x6690]) ^ __ROR4__(v1075, 24) ^ v1044 ^ __ROR4__(v1068, 16);
  LODWORD(v1075) = LODWORD(STACK[0x65A0]) << LODWORD(STACK[0x66F0]) << LODWORD(STACK[0x66F8]);
  LODWORD(v1068) = (((STACK[0x6568] & (v1070 ^ 0xD7FDB2F8) ^ STACK[0x6600] & 0xF4BDD918) & 0x8E85E05A ^ 0x8E05A05B)
                  + ((STACK[0x6568] & (v1070 ^ 0xD7FDB2F8) ^ STACK[0x6600] & 0xF4BDD918) & 0x717A1FA5)
                  - 1) ^ 0xEE246052;
  v1094 = v1064;
  LODWORD(v1010) = LODWORD(STACK[0x67D0]) ^ v1075 ^ (v1068 >> v1064) ^ LODWORD(STACK[0x6698]) ^ v1010 ^ __ROR4__((_DWORD)v1077, 16) ^ __ROR4__((_DWORD)v1078, 24) ^ __ROR4__((_DWORD)v1085, 8);
  LODWORD(v938) = LODWORD(STACK[0x67D0]) ^ (v938 >> v1064) ^ v1093 ^ LODWORD(STACK[0x66A8]) ^ __ROR4__((_DWORD)v1072, 8) ^ v1074 ^ __ROR4__((_DWORD)v1076, 24) ^ __ROR4__((_DWORD)v1083, 16);
  LODWORD(v1055) = v1088 ^ v1075 ^ ((LODWORD(STACK[0x67C0]) ^ v1068) >> v962) ^ LODWORD(STACK[0x66B0]) ^ v1055 ^ __ROR4__((_DWORD)v1079, 16) ^ __ROR4__((_DWORD)v1053, 24);
  STACK[0xD618] = (unint64_t)v1090;
  LODWORD(v1068) = v1055 ^ __ROR4__(*v1090, 8);
  v1095 = v1010;
  v1096 = (unint64_t)&v1092[v1091 / 0xFFFFFFFFFFFFFFFCLL + v1095];
  v1097 = 4 * BYTE2(v1010);
  v1098 = v1096 + v1097 - v1095 * 4;
  STACK[0xD618] = (unint64_t)v1092;
  LODWORD(v1092) = *v1092;
  LODWORD(v1044) = v1044 ^ ((_DWORD)v1092 << 24);
  LODWORD(v1092) = v1044 ^ (v1092 >> 8);
  STACK[0xD618] = v1096;
  LODWORD(v1075) = *(_DWORD *)v1096;
  STACK[0xD618] = v1098;
  v1099 = v1098 - v1097;
  LODWORD(v1074) = *(_DWORD *)v1098;
  STACK[0xD618] = v1099;
  LODWORD(v1098) = *(_DWORD *)(v1099 + 4 * BYTE2(v1092));
  v1100 = (_DWORD *)(v1099 + 4 * v1092);
  STACK[0xD618] = (unint64_t)v1100;
  LODWORD(v1096) = *v1100;
  v1101 = 4 * BYTE2(v1068);
  v1102 = v1099 + v1101;
  v1103 = 4 * BYTE2(v938);
  v1104 = (_DWORD *)(v1102 + v1103 - v1101);
  v1105 = 4 * BYTE3(v938);
  v1106 = &v1104[(unint64_t)v1105 / 4 + v1103 / 0xFFFFFFFFFFFFFFFCLL];
  v1107 = 4 * BYTE1(v1010);
  v1108 = &v1106[v1105 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1107 / 4];
  v1109 = 4 * BYTE3(v1044);
  v1110 = &v1108[(unint64_t)v1109 / 4 + v1107 / 0xFFFFFFFFFFFFFFFCLL];
  v1111 = BYTE3(v1068);
  v1112 = (unint64_t)&v1110[v1111 + v1109 / 0xFFFFFFFFFFFFFFFCLL];
  v1113 = 4 * BYTE1(v938);
  v1114 = (_DWORD *)(v1112 + v1113 - v1111 * 4);
  STACK[0xD618] = v1102;
  LODWORD(v1102) = *(_DWORD *)v1102;
  STACK[0xD618] = (unint64_t)v1104;
  LODWORD(v1104) = *v1104;
  STACK[0xD618] = (unint64_t)v1106;
  LODWORD(v1106) = *v1106;
  STACK[0xD618] = (unint64_t)v1108;
  LODWORD(v1108) = *v1108;
  STACK[0xD618] = (unint64_t)v1110;
  LODWORD(v1110) = *v1110;
  STACK[0xD618] = v1112;
  LODWORD(v1112) = *(_DWORD *)v1112;
  STACK[0xD618] = (unint64_t)v1114;
  v1115 = &v1114[v1113 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1114) = *v1114;
  v1116 = &v1115[BYTE3(v1010)];
  STACK[0xD618] = (unint64_t)v1116;
  LODWORD(v1010) = *v1116;
  v1117 = 4 * v938;
  v1118 = &v1115[(unint64_t)v1117 / 4];
  v1119 = 4 * v1068;
  v1120 = &v1118[(unint64_t)v1119 / 4 + v1117 / 0xFFFFFFFFFFFFFFFCLL];
  v1121 = 4 * BYTE1(v1092);
  v1122 = &v1120[(unint64_t)v1121 / 4 + v1119 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1118;
  LODWORD(v1118) = *v1118;
  STACK[0xD618] = (unint64_t)v1120;
  LODWORD(v1120) = *v1120;
  STACK[0xD618] = (unint64_t)v1122;
  v1123 = (unint64_t)&v1122[v1121 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1122) = *v1122;
  v1124 = (_DWORD *)(v1123 + 4 * BYTE1(v1068));
  STACK[0xD618] = (unint64_t)v1124;
  HIDWORD(v1009) = v1075;
  LODWORD(v1009) = v1075;
  LODWORD(v1068) = *v1124;
  LODWORD(v1075) = (v1009 >> 29) ^ __ROR4__((_DWORD)v1104, 13);
  STACK[0xD618] = v1123;
  v1125 = STACK[0x6A40];
  v1126 = v983;
  v1127 = STACK[0x6750];
  LODWORD(v1123) = (STACK[0x6A10] & 0x79DF4AD9 ^ 0x9CF02C0 ^ (LODWORD(STACK[0x6A40]) ^ 0x80943428) & STACK[0x6608]) << LODWORD(STACK[0x6750]) << LODWORD(STACK[0x68C0]);
  LODWORD(v983) = ((((v983 ^ 0xC9496BF6) & LODWORD(STACK[0x6608]) ^ STACK[0x6A10] & 0xC9496B76) & 0x1F565C44 ^ 0x17161C40)
                 + ((v983 ^ 0xC9496BF6) & LODWORD(STACK[0x6608]) ^ STACK[0x6A10] & 0xC9496B76 ^ 0x48494216)
                 - (((v983 ^ 0xC9496BF6) & LODWORD(STACK[0x6608]) ^ STACK[0x6A10] & 0xC9496B76 ^ 0x48494216) & 0x1F565C44)) ^ 0x5E563C16;
  LODWORD(v1112) = v996 ^ ((v983 >> v1071) + v1123) ^ LODWORD(STACK[0x66B8]) ^ v1074 ^ __ROR4__(v1112, 24) ^ __ROR4__((_DWORD)v1118, 16) ^ __ROR4__((_DWORD)v1122, 8);
  v1128 = STACK[0x6A30];
  LODWORD(v1104) = STACK[0x69F0] & 0x100A0020 ^ 0x10041080 ^ STACK[0x6610] & (v1070 ^ 0x300E5840);
  LODWORD(v1074) = (STACK[0x69F0] & 0x10098860 ^ 0x10110000 ^ (LODWORD(STACK[0x6A30]) ^ 0x380F5400) & STACK[0x6610]) << LODWORD(STACK[0x6658]) << LODWORD(STACK[0x6790]);
  LODWORD(v1010) = v996 ^ (v1074 | (v1104 >> v1071)) ^ LODWORD(STACK[0x66C0]) ^ v1098 ^ __ROR4__((_DWORD)v1114, 8) ^ __ROR4__(v1010, 24) ^ __ROR4__((_DWORD)v1120, 16);
  LODWORD(v1068) = v996 ^ (v1074 + (v1104 >> v1094)) ^ 0x4B8EC23A ^ LODWORD(STACK[0x66C8]) ^ __ROR4__(v1075 ^ 0x11D25C76, 19) ^ __ROR4__((_DWORD)v1110, 24) ^ __ROR4__(v1068, 8);
  LODWORD(v1096) = v996 ^ v1123 ^ (v983 >> v1094) ^ LODWORD(STACK[0x66D0]) ^ __ROR4__(v1096, 16) ^ v1102 ^ __ROR4__((_DWORD)v1106, 24);
  LODWORD(v1009) = __ROR4__((_DWORD)v1108, 8);
  LODWORD(v1123) = v1096 ^ v1009;
  LODWORD(v983) = *(_DWORD *)(STACK[0xD620] + 4 * (v1096 ^ v1009));
  v1129 = (_DWORD *)(STACK[0xD620] + 4 * BYTE3(v1010));
  v1130 = (_DWORD *)(STACK[0xD620] + 4 * ((unsigned __int16)(v1096 ^ v1009) >> 8));
  v1131 = (_DWORD *)(STACK[0xD620] + 4 * v1010);
  v1132 = (_DWORD *)(STACK[0xD620] + 4 * BYTE2(v1123));
  v1133 = (_DWORD *)(STACK[0xD620] + 4 * BYTE1(v1068));
  v1134 = (_DWORD *)(STACK[0xD620] + 4 * BYTE2(v1068));
  v1135 = STACK[0xD620];
  v1136 = (int *)(STACK[0xD620] + 4 * BYTE3(v1068));
  STACK[0xD620] = (unint64_t)v1136;
  v1137 = *v1136;
  v1138 = (_DWORD *)(v1135 + 4 * v1112);
  STACK[0xD620] = (unint64_t)v1138;
  LODWORD(v1136) = *v1138;
  v1139 = 4 * BYTE3(v1123);
  v1140 = v1135 + v1139;
  v1141 = 4 * BYTE1(v1112);
  v1142 = (int *)(v1140 + v1141 - v1139);
  v1143 = BYTE1(v1010);
  v1144 = (unint64_t)&v1142[v1143 + v1141 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD620] = v1140;
  LODWORD(v1140) = *(_DWORD *)v1140;
  STACK[0xD620] = (unint64_t)v1142;
  v1145 = *v1142;
  STACK[0xD620] = v1144;
  v1146 = v1144 - v1143 * 4;
  LODWORD(v1144) = *(_DWORD *)v1144;
  v1147 = (_DWORD *)(v1146 + 4 * BYTE2(v1112));
  STACK[0xD620] = (unint64_t)v1147;
  LODWORD(v1114) = *v1147;
  v1148 = (_DWORD *)(v1146 + 4 * v1068);
  STACK[0xD620] = (unint64_t)v1148;
  LODWORD(v1068) = *v1148;
  v1149 = (_DWORD *)(v1146 + 4 * BYTE3(v1112));
  STACK[0xD620] = (unint64_t)v1149;
  LODWORD(v1112) = *v1149;
  v1150 = 4 * BYTE2(v1010);
  STACK[0xD620] = v1146 + v1150;
  v1151 = LODWORD(STACK[0x6930]) - 307256543;
  LODWORD(v1140) = LODWORD(STACK[0x6950]) ^ (LODWORD(STACK[0x6720])
                                           - ((2 * LODWORD(STACK[0x6720])) & 0xD98EB578)
                                           - 322479428) ^ v1151 ^ __ROR4__(v1140, 16) ^ v1144 ^ __ROR4__((_DWORD)v1114, 24);
  LODWORD(v1009) = __ROR4__(v1068, 8);
  LODWORD(v1068) = ((v1140 ^ v1009 ^ 0x50F48499) - 1334469516 - ((2 * (v1140 ^ v1009 ^ 0x50F48499)) & 0x60EB38E8)) ^ LODWORD(STACK[0x6830]);
  v1152 = v1068 - 1515667310 - ((2 * v1068) & 0x4B518124);
  LODWORD(v1112) = LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x6840]) ^ 0x10408B6A ^ LODWORD(STACK[0x6760]) ^ v1151 ^ __ROR4__(v983, 8) ^ *v1133 ^ __ROR4__(v1112, 16);
  LODWORD(v1009) = __ROR4__(*(_DWORD *)(v1146 + v1150), 24);
  v1153 = (v1112 ^ v1009) - 1515667310 - ((2 * (v1112 ^ v1009)) & 0x4B518124);
  LODWORD(v983) = v1151 ^ LODWORD(STACK[0x6840]) ^ (LODWORD(STACK[0x67E0])
                                                  - 68914650
                                                  - ((2 * LODWORD(STACK[0x67E0])) & 0xF7C8ED9E)
                                                  + 1193) ^ __ROR4__(*v1129, 16) ^ *v1130 ^ __ROR4__(*v1134, 24);
  LODWORD(v1009) = __ROR4__((_DWORD)v1136, 8);
  LODWORD(v983) = ((v983 ^ v1009 ^ 0x5BD161D1)
                 - 1334469516
                 - 2 * ((v983 ^ v1009 ^ 0x5BD161D1) & 0x30759C7E ^ (v983 ^ v1009) & 0xA)) ^ LODWORD(STACK[0x6830]);
  v1154 = v983 - 1515667310 - ((2 * v983) & 0x4B518124);
  v1155 = STACK[0x6850];
  v1156 = LODWORD(STACK[0x6850]) ^ 0x13BAF730 ^ LODWORD(STACK[0x6900]);
  v1157 = LODWORD(STACK[0x6850]) ^ 0x13BAF730 ^ LODWORD(STACK[0x6730]);
  v1158 = STACK[0x6940];
  v1159 = STACK[0x6820];
  if ((STACK[0x6940] & 1) != 0)
    v1160 = STACK[0x6820];
  else
    v1160 = STACK[0x68F0];
  if ((v1158 & 1) != 0)
  {
    v1159 = LODWORD(STACK[0x6850]) ^ 0x13BAF730 ^ LODWORD(STACK[0x6900]);
    v1156 = LODWORD(STACK[0x6850]) ^ 0x13BAF730 ^ LODWORD(STACK[0x6730]);
    v1157 = STACK[0x68F0];
  }
  v1161 = LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x67F0]) ^ v1151 ^ __ROR4__(*v1131, 8) ^ __ROR4__(*v1132, 24) ^ __ROR4__(v1137, 16) ^ 0x8F54A849 ^ v1145;
  v1162 = v1155 ^ 0x4F1D4BAF ^ v1154;
  v1163 = v1155 ^ 0x4F1D4BAF ^ v1153;
  v1164 = v1155 ^ 0x4F1D4BAF ^ v1152;
  if ((v1158 & 1) != 0)
    v1165 = v1163;
  else
    v1165 = v1155 ^ 0x4F1D4BAF ^ v1154;
  if ((v1158 & 1) == 0)
  {
    v1162 = v1161;
    v1161 = v1164;
    v1164 = v1163;
  }
  if ((v1158 & 2) != 0)
    v1166 = v1160;
  else
    v1166 = v1156;
  if ((v1158 & 2) != 0)
    v1167 = v1156;
  else
    v1167 = v1160;
  if ((v1158 & 2) != 0)
    v1168 = v1157;
  else
    v1168 = v1159;
  if ((v1158 & 2) != 0)
    v1157 = v1159;
  STACK[0xD620] = v1146;
  if ((v1158 & 2) != 0)
    v1169 = v1164;
  else
    v1169 = v1162;
  if ((v1158 & 2) != 0)
  {
    v1164 = v1162;
    v1170 = v1165;
  }
  else
  {
    v1170 = v1161;
  }
  if ((v1158 & 2) != 0)
    v1165 = v1161;
  v1171 = v1157 ^ (631244839 * (v1151 ^ 0x5CA7BC9F)) ^ (631244839 * (v1164 ^ v1167));
  v1172 = (27853421 * (v1165 ^ v1151)) ^ v1168 ^ (27853421 * (v1171 ^ 0x5CA7BC9F));
  v1173 = LODWORD(STACK[0x1480]) + LODWORD(STACK[0x1480]) * ((v1170 ^ 0xA3584360) + (v1172 ^ v1151)) + v1171;
  v1174 = v1170 ^ v1166;
  v1175 = v1172 ^ v1151 ^ v1170 ^ v1166;
  v1176 = v1169 ^ v1151;
  v1177 = (v1169 ^ 0xA3584360) + (v1174 ^ 0x5CA7BC9F ^ v1172);
  v1178 = v1175 ^ v1176 ^ v1167;
  v1179 = v1175 ^ v1176 ^ v1173;
  v1180 = v1165 ^ v1151 ^ (554682523 * (v1164 ^ v1151)) ^ (-121303101 * (v1164 ^ v1151)) ^ v1172 ^ v1173 ^ (-121303101 * (v1178 ^ 0x5CA7BC9F));
  v1181 = v1178 + 2069391619 * v1177 + 2069391619;
  v1182 = v1180 ^ (554682523 * (v1181 ^ 0x5CA7BC9F));
  v1183 = v1165 ^ v1170 ^ v1179 ^ v1181;
  v1184 = STACK[0x6A00];
  v1185 = (v1175 ^ 0x279D66D6) & STACK[0x6700] ^ STACK[0x6A00] & 0x8675FBB3;
  v1186 = ((v1185 & 0xA5CFF3BD ^ 0xA58EB31C) + (v1185 ^ 0x6140A1) - ((v1185 ^ 0x6140A1) & 0xA5CFF3BD)) >> 1;
  v1187 = ((v1186 ^ 0x12F7490F) - 2 * ((v1186 ^ 0x12F7490F) & 0x2BF04B1F ^ v1186 & 0x10) + 737168143) ^ v1175;
  v1188 = v1128;
  v1189 = (v1187 ^ 0x8A18D66A) & (v1128 ^ 0x1CDB027) ^ v1187 & 0xEA7B4E5D;
  v1190 = (v1187 ^ 0x8A18D66A) & (v1070 ^ 0xDEB47852) ^ v1187 & 0xFDF413B2;
  v1191 = STACK[0x69A0] & LODWORD(STACK[0x1484]) ^ 0x1880A30 ^ (v1182 ^ 0xCC629116) & STACK[0x6AB0];
  v1192 = ((v1191 | 0x774C637E) - (v1191 | 0x88B39C81) - 2001494911) >> 1;
  v1193 = v1183 ^ v1182;
  v1194 = ((v1192 ^ 0x3B067733) - 2 * ((v1192 ^ 0x3B067733) & 0x2E32B43F ^ v1192 & 0xC) - 1372408781) ^ v1182;
  v1195 = ((((v1190 & 0xD4A10B80 ^ LODWORD(STACK[0x148C])) + (v1190 ^ 0xC9440000) - ((v1190 ^ 0xC9440000) & 0xD4A10B80)) ^ 0x95F519A2) >> v1071) | ((((v1189 & 0x58E0B940 ^ 0x18C0B900) + (v1189 ^ 0xC2204454) - ((v1189 ^ 0xC2204454) & 0x58E0B940)) ^ 0x10D8BB5C) << LODWORD(STACK[0x6A70]));
  v1196 = (((((v1194 ^ 0x6B88AA1D) & (v1125 ^ LODWORD(STACK[0x1488])) ^ v1194 & 0x34C0C864) & 0x3DFF0C30 ^ 0x1DFF0410)
          + ((v1194 ^ 0x6B88AA1D) & (v1125 ^ LODWORD(STACK[0x1488])) ^ v1194 & 0x34C0C864 ^ 0x20000820)
          - (((v1194 ^ 0x6B88AA1D) & (v1125 ^ LODWORD(STACK[0x1488])) ^ v1194 & 0x34C0C864 ^ 0x20000820) & 0x3DFF0C30)) ^ 0x3D7F8C14) << LODWORD(STACK[0x6880]);
  v1197 = (v1194 ^ 0x6B88AA1D) & (v1126 ^ 0x953FCBC3) ^ v1194 & 0x953FCB43;
  v1198 = v1196 + ((((v1197 & 0xD1B3F491 ^ 0x40B3F491) + (v1197 & 0x2E4C0B6E ^ 0x40901) - 1) ^ 0x41BF7790) >> v1094);
  v1199 = ((v1193 ^ 0xB42FCB6C) & (LODWORD(STACK[0x69A0]) ^ 0x24F8D060) ^ v1193 & 0xE63567C8) >> 1;
  v1200 = ((v1199 ^ 0x5212A1A4) + 872497478 - 2 * ((v1199 ^ 0x5212A1A4) & 0x34014DEC ^ v1199 & 8) + 3230) ^ v1193;
  v1201 = v1070;
  v1202 = ((v1200 & 0xDC97B704 ^ 0x80068600 ^ (v1200 ^ 0x802E8688) & (v1125 ^ 0x25DCC9F5)) << LODWORD(STACK[0x6708]) << LODWORD(STACK[0x6770]))
        + ((v1200 & 0xF17A3659 ^ 0x802A0608 ^ (v1200 ^ 0x802E8688) & (v1070 ^ 0xD23A5DB9)) >> v1071);
  v1203 = STACK[0x5FC8];
  v1204 = v1195 ^ LODWORD(STACK[0x5FC8]);
  v1205 = v1198 ^ v1202 ^ v1204;
  v1206 = STACK[0x65C8];
  v1207 = LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x5FD0]) ^ v1205;
  v1208 = 4 * HIBYTE(v1207);
  v1209 = STACK[0xD618];
  STACK[0xD618] += v1208;
  v1210 = (v1179 ^ 0x8F392CE5) & (v1184 ^ 0x7FCFC78D) ^ v1179 & 0xC605E286;
  v1211 = (((v1210 & 0x6BE31602 ^ 0x6BE21600) + (v1210 ^ 0x8405A002) - ((v1210 ^ 0x8405A002) & 0x6BE31602)) >> 1) ^ 0x34F3CB42;
  v1212 = (v1211 + 1253462721 + (~(2 * v1211) | 0x6A935A7F)) ^ v1179;
  v1213 = v1212 & 0x32BCCCEA ^ 0x22CCC8A ^ (v1212 ^ 0xC58F7E25) & (v1126 ^ 0x32BCCC6A);
  v1214 = v1188;
  v1215 = STACK[0x6980];
  v1216 = (((((2 * v1213) | 0xDE43A848) - v1213 + 282995676) ^ 0xED81548E) >> v1094) ^ ((v1212 & 0x4D5134BA ^ 0x45013420 ^ (v1212 ^ 0xC58F7E25) & (v1188 ^ 0xA6E7CAC0)) << LODWORD(STACK[0x6980]) << LODWORD(STACK[0x69D0]));
  v1217 = LODWORD(STACK[0x6588]) ^ v1203 ^ (1311483624 - LODWORD(STACK[0x5FE0]) + (LODWORD(STACK[0x6008]) | 0xB1D45917)) ^ v1216 ^ v1202 ^ 0x6A4585F8 ^ v1198;
  v1218 = v1206 ^ LODWORD(STACK[0x6018]) ^ ((LODWORD(STACK[0x6020]) ^ 0x36279335u) >> v1071) ^ v1216 ^ v1202 ^ v1205;
  v1219 = LODWORD(STACK[0x6588]) ^ (LODWORD(STACK[0x5FF8])
                                  + ((LODWORD(STACK[0x6000]) + 133794157) ^ LODWORD(STACK[0x5FD8]))) ^ v1204;
  v1220 = *(_DWORD *)(v1209 + v1208);
  v1221 = 4 * BYTE2(v1217);
  v1222 = v1209 + v1221;
  v1223 = 4 * BYTE1(v1218);
  v1224 = (_DWORD *)(v1222 + v1223 - v1221);
  v1225 = 4 * v1219;
  v1226 = &v1224[(unint64_t)v1225 / 4 + v1223 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = v1222;
  LODWORD(v1222) = *(_DWORD *)v1222;
  STACK[0xD618] = (unint64_t)v1224;
  LODWORD(v1224) = *v1224;
  STACK[0xD618] = (unint64_t)v1226;
  v1227 = &v1226[v1225 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1226) = *v1226;
  v1228 = (unint64_t)&v1227[HIBYTE(v1217)];
  STACK[0xD618] = v1228;
  v1229 = *(_DWORD *)v1228;
  v1230 = &v1227[BYTE2(v1218)];
  STACK[0xD618] = (unint64_t)v1230;
  LODWORD(v1228) = *v1230;
  v1231 = &v1227[BYTE1(v1219)];
  STACK[0xD618] = (unint64_t)v1231;
  LODWORD(v1230) = *v1231;
  v1232 = &v1227[v1207];
  STACK[0xD618] = (unint64_t)v1232;
  LODWORD(v1231) = *v1232;
  v1233 = 4 * HIBYTE(v1218);
  v1234 = &v1227[(unint64_t)v1233 / 4];
  v1235 = BYTE2(v1219);
  v1236 = (unint64_t)&v1234[v1235 + v1233 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1234;
  LODWORD(v1234) = *v1234;
  STACK[0xD618] = v1236;
  v1237 = v1236 - v1235 * 4;
  LODWORD(v1236) = *(_DWORD *)v1236;
  v1238 = (int *)(v1237 + 4 * BYTE1(v1207));
  STACK[0xD618] = (unint64_t)v1238;
  v1239 = *v1238;
  v1240 = (_DWORD *)(v1237 + 4 * v1217);
  STACK[0xD618] = (unint64_t)v1240;
  LODWORD(v1238) = *v1240;
  v1241 = 4 * HIBYTE(v1219);
  STACK[0xD618] = v1237 + v1241;
  LODWORD(v1241) = *(_DWORD *)(v1237 + v1241);
  v1242 = 4 * BYTE2(v1207);
  v1243 = (int *)(v1237 + v1242);
  v1244 = 4 * BYTE1(v1217);
  v1245 = &v1243[(unint64_t)v1244 / 4 + v1242 / 0xFFFFFFFFFFFFFFFCLL];
  v1246 = 4 * v1218;
  v1247 = &v1245[(unint64_t)v1246 / 4 + v1244 / 0xFFFFFFFFFFFFFFFCLL];
  v1248 = ((LODWORD(STACK[0x6050]) << LODWORD(STACK[0x6780])) + LODWORD(STACK[0x6040])) ^ (v1220 << 8) ^ HIBYTE(v1220) ^ v1222;
  LODWORD(v1222) = ((LODWORD(STACK[0x6048]) ^ LODWORD(STACK[0x1628]) ^ (((LODWORD(STACK[0x6AC0]) ^ 0x387C) - 247452793) ^ v1201) & STACK[0x6300]) >> v1094) ^ LODWORD(STACK[0x6058]) ^ __ROR4__((_DWORD)v1234, 24) ^ v1236;
  v1249 = v1248 ^ __ROR4__((_DWORD)v1224, 8) ^ __ROR4__((_DWORD)v1226, 16);
  LODWORD(v1224) = (LODWORD(STACK[0x6030]) | STACK[0x6038] & (LODWORD(STACK[0x6308]) ^ 0x84E69C30)) ^ __ROR4__(v1229, 24) ^ v1228 ^ __ROR4__((_DWORD)v1230, 8) ^ __ROR4__((_DWORD)v1231, 16) ^ 0x84E69C30;
  v1250 = 4 * HIBYTE(v1249);
  v1251 = &v1247[v1246 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1250 / 4];
  v1252 = BYTE2(v1224);
  v1253 = (unint64_t)&v1251[v1252 + v1250 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1222) = v1222 ^ __ROR4__(v1239, 8) ^ __ROR4__((_DWORD)v1238, 16);
  STACK[0xD618] = (unint64_t)v1243;
  v1254 = *v1243;
  STACK[0xD618] = (unint64_t)v1245;
  LODWORD(v1245) = *v1245;
  STACK[0xD618] = (unint64_t)v1247;
  LODWORD(v1247) = *v1247;
  STACK[0xD618] = (unint64_t)v1251;
  LODWORD(v1251) = *v1251;
  STACK[0xD618] = v1253;
  v1255 = v1253 - v1252 * 4;
  LODWORD(v1253) = *(_DWORD *)v1253;
  v1256 = 4 * BYTE1(v1222);
  STACK[0xD618] = v1255 + v1256;
  LODWORD(v1245) = (((LODWORD(STACK[0x6310]) << (LODWORD(STACK[0x6070]) ^ 0x82)) ^ 0xA09B919A) & STACK[0x6068] | LODWORD(STACK[0x6060])) ^ __ROR4__(v1241, 24) ^ v1254 ^ __ROR4__((_DWORD)v1245, 8) ^ __ROR4__((_DWORD)v1247, 16) ^ 0xA09B919A;
  LODWORD(v1241) = *(_DWORD *)(v1255 + v1256);
  v1257 = 4 * v1245;
  STACK[0xD618] = v1255 + v1257;
  LODWORD(v1257) = *(_DWORD *)(v1255 + v1257);
  v1258 = 4 * (v1224 >> 24);
  v1259 = (_DWORD *)(v1255 + v1258);
  v1260 = BYTE2(v1222);
  v1261 = (unint64_t)&v1259[v1260 + v1258 / 0xFFFFFFFFFFFFFFFCLL];
  v1262 = 4 * BYTE1(v1245);
  v1263 = (_DWORD *)(v1261 + v1262 - v1260 * 4);
  v1264 = 4 * v1249;
  v1265 = &v1263[(unint64_t)v1264 / 4 + v1262 / 0xFFFFFFFFFFFFFFFCLL];
  v1266 = 4 * BYTE3(v1222);
  v1267 = &v1265[(unint64_t)v1266 / 4 + v1264 / 0xFFFFFFFFFFFFFFFCLL];
  v1268 = 4 * BYTE2(v1245);
  v1269 = &v1267[v1266 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1268 / 4];
  v1270 = 4 * BYTE1(v1249);
  v1271 = &v1269[(unint64_t)v1270 / 4 + v1268 / 0xFFFFFFFFFFFFFFFCLL];
  v1272 = 4 * v1224;
  v1273 = &v1271[(unint64_t)v1272 / 4 + v1270 / 0xFFFFFFFFFFFFFFFCLL];
  v1274 = 4 * (v1245 >> 24);
  v1275 = &v1273[(unint64_t)v1274 / 4 + v1272 / 0xFFFFFFFFFFFFFFFCLL];
  v1276 = BYTE2(v1249);
  v1277 = (unint64_t)&v1275[v1274 / 0xFFFFFFFFFFFFFFFCLL + v1276];
  v1278 = 4 * BYTE1(v1224);
  v1279 = (_DWORD *)(v1277 + v1278 - v1276 * 4);
  v1280 = 4 * v1222;
  v1281 = &v1279[(unint64_t)v1280 / 4 + v1278 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1251) = ((LODWORD(STACK[0x6080]) << LODWORD(STACK[0x6970])) | ((LODWORD(STACK[0x6078]) ^ 0x31144000 ^ STACK[0x6318] & (v1201 ^ 0x161C2AA1)) >> v1094)) ^ __ROR4__((_DWORD)v1251, 24) ^ v1253 ^ __ROR4__(v1241, 8) ^ __ROR4__(v1257, 16);
  STACK[0xD618] = (unint64_t)v1259;
  LODWORD(v1241) = *v1259;
  STACK[0xD618] = v1261;
  LODWORD(v1257) = *(_DWORD *)v1261;
  STACK[0xD618] = (unint64_t)v1263;
  LODWORD(v1253) = *v1263;
  STACK[0xD618] = (unint64_t)v1265;
  LODWORD(v1259) = *v1265;
  STACK[0xD618] = (unint64_t)v1267;
  v1282 = *v1267;
  STACK[0xD618] = (unint64_t)v1269;
  LODWORD(v1261) = *v1269;
  STACK[0xD618] = (unint64_t)v1271;
  LODWORD(v1263) = *v1271;
  STACK[0xD618] = (unint64_t)v1273;
  LODWORD(v1265) = *v1273;
  STACK[0xD618] = (unint64_t)v1275;
  LODWORD(v1267) = *v1275;
  STACK[0xD618] = v1277;
  LODWORD(v1277) = *(_DWORD *)v1277;
  STACK[0xD618] = (unint64_t)v1279;
  LODWORD(v1279) = *v1279;
  STACK[0xD618] = (unint64_t)v1281;
  v1283 = &v1281[v1280 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1281) = *v1281;
  v1284 = v1251 >> 24;
  STACK[0xD618] = (unint64_t)&v1283[v1284];
  LODWORD(v1241) = (LODWORD(STACK[0x60B0]) + ((LODWORD(STACK[0x60C8]) - 1046298387) ^ LODWORD(STACK[0x5FE8]))) ^ __ROR4__(v1241, 24) ^ v1257;
  LODWORD(v1257) = (LODWORD(STACK[0x5FF0]) - 168561090) ^ 0x60C0145 ^ __ROR4__(v1282, 24) ^ v1261 ^ __ROR4__((_DWORD)v1263, 8) ^ __ROR4__((_DWORD)v1265, 16);
  LODWORD(v1241) = v1241 ^ __ROR4__(v1253, 8) ^ __ROR4__((_DWORD)v1259, 16);
  LODWORD(v1253) = v1283[v1284];
  v1285 = BYTE2(v1241);
  v1286 = (unint64_t)&v1283[v1285];
  v1287 = 4 * BYTE1(v1257);
  v1288 = (_DWORD *)(v1286 + v1287 - v1285 * 4);
  LODWORD(v1277) = ((LODWORD(STACK[0x60F0]) ^ 0x72B11B46u) >> v1071) ^ (LODWORD(STACK[0x60E8]) << v1127) ^ __ROR4__((_DWORD)v1267, 24) ^ v1277 ^ __ROR4__((_DWORD)v1279, 8) ^ __ROR4__((_DWORD)v1281, 16);
  v1289 = v1277;
  v1290 = (unint64_t)&v1288[v1287 / 0xFFFFFFFFFFFFFFFCLL + v1289];
  v1291 = 4 * BYTE3(v1241);
  v1292 = (_DWORD *)(v1290 + v1291 - v1289 * 4);
  v1293 = BYTE2(v1257);
  v1294 = (unint64_t)&v1292[v1291 / 0xFFFFFFFFFFFFFFFCLL + v1293];
  v1295 = 4 * BYTE1(v1277);
  v1296 = (_DWORD *)(v1294 + v1295 - v1293 * 4);
  v1297 = 4 * v1251;
  v1298 = &v1296[(unint64_t)v1297 / 4 + v1295 / 0xFFFFFFFFFFFFFFFCLL];
  v1299 = 4 * BYTE3(v1257);
  v1300 = &v1298[(unint64_t)v1299 / 4 + v1297 / 0xFFFFFFFFFFFFFFFCLL];
  v1301 = BYTE2(v1277);
  v1302 = (unint64_t)&v1300[v1301 + v1299 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = v1286;
  LODWORD(v1286) = *(_DWORD *)v1286;
  STACK[0xD618] = (unint64_t)v1288;
  LODWORD(v1288) = *v1288;
  STACK[0xD618] = v1290;
  LODWORD(v1290) = *(_DWORD *)v1290;
  STACK[0xD618] = (unint64_t)v1292;
  LODWORD(v1292) = *v1292;
  STACK[0xD618] = v1294;
  LODWORD(v1294) = *(_DWORD *)v1294;
  STACK[0xD618] = (unint64_t)v1296;
  LODWORD(v1296) = *v1296;
  STACK[0xD618] = (unint64_t)v1298;
  LODWORD(v1298) = *v1298;
  STACK[0xD618] = (unint64_t)v1300;
  LODWORD(v1300) = *v1300;
  STACK[0xD618] = v1302;
  v1303 = v1302 - v1301 * 4;
  LODWORD(v1302) = *(_DWORD *)v1302;
  v1304 = (_DWORD *)(v1303 + 4 * BYTE1(v1251));
  STACK[0xD618] = (unint64_t)v1304;
  LODWORD(v1271) = *v1304;
  v1305 = 4 * v1241;
  STACK[0xD618] = v1303 + v1305;
  LODWORD(v1305) = *(_DWORD *)(v1303 + v1305);
  v1306 = 4 * BYTE3(v1277);
  v1307 = (_DWORD *)(v1303 + v1306);
  v1308 = BYTE2(v1251);
  v1309 = (unint64_t)&v1307[v1308 + v1306 / 0xFFFFFFFFFFFFFFFCLL];
  v1310 = 4 * BYTE1(v1241);
  v1311 = (_DWORD *)(v1309 + v1310 - v1308 * 4);
  v1312 = 4 * v1257;
  v1313 = &v1311[(unint64_t)v1312 / 4 + v1310 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1290) = (LODWORD(STACK[0x6120]) + ((LODWORD(STACK[0x6128]) + 1109066159) ^ LODWORD(STACK[0x6010]))) ^ __ROR4__(v1253, 24) ^ v1286 ^ __ROR4__((_DWORD)v1288, 8) ^ __ROR4__(v1290, 16);
  v1314 = 4 * BYTE3(v1290);
  v1315 = &v1313[(unint64_t)v1314 / 4 + v1312 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1292) = ((LODWORD(STACK[0x6118]) << LODWORD(STACK[0x68B0])) + (LODWORD(STACK[0x6110]) >> v1071)) ^ __ROR4__((_DWORD)v1292, 24) ^ v1294 ^ __ROR4__((_DWORD)v1296, 8) ^ __ROR4__((_DWORD)v1298, 16);
  STACK[0xD618] = (unint64_t)v1307;
  LODWORD(v1253) = *v1307;
  STACK[0xD618] = v1309;
  LODWORD(v1309) = *(_DWORD *)v1309;
  STACK[0xD618] = (unint64_t)v1311;
  LODWORD(v1311) = *v1311;
  STACK[0xD618] = (unint64_t)v1313;
  LODWORD(v1313) = *v1313;
  STACK[0xD618] = (unint64_t)v1315;
  v1316 = &v1315[v1314 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1315) = *v1315;
  v1317 = BYTE2(v1292);
  STACK[0xD618] = (unint64_t)&v1316[v1317];
  LODWORD(v1311) = ((LODWORD(STACK[0x6140]) << LODWORD(STACK[0x68C0])) | LODWORD(STACK[0x6138])) ^ __ROR4__(v1253, 24) ^ v1309 ^ __ROR4__((_DWORD)v1311, 8) ^ __ROR4__((_DWORD)v1313, 16);
  LODWORD(v1313) = (LODWORD(STACK[0x6320]) << (LODWORD(STACK[0x6148]) ^ 2)) ^ LODWORD(STACK[0x6028]) ^ 0xB649C5A0 ^ __ROR4__((_DWORD)v1300, 24) ^ v1302 ^ __ROR4__((_DWORD)v1271, 8) ^ __ROR4__(v1305, 16);
  LODWORD(v1253) = v1316[v1317];
  v1318 = 4 * BYTE1(v1313);
  v1319 = &v1316[(unint64_t)v1318 / 4];
  v1320 = 4 * v1311;
  v1321 = &v1319[(unint64_t)v1320 / 4 + v1318 / 0xFFFFFFFFFFFFFFFCLL];
  v1322 = 4 * (v1292 >> 24);
  v1323 = &v1321[(unint64_t)v1322 / 4 + v1320 / 0xFFFFFFFFFFFFFFFCLL];
  v1324 = BYTE2(v1313);
  v1325 = (unint64_t)&v1323[v1324 + v1322 / 0xFFFFFFFFFFFFFFFCLL];
  v1326 = 4 * BYTE1(v1311);
  v1327 = (_DWORD *)(v1325 + v1326 - v1324 * 4);
  v1328 = 4 * v1290;
  v1329 = &v1327[(unint64_t)v1328 / 4 + v1326 / 0xFFFFFFFFFFFFFFFCLL];
  v1330 = 4 * (v1313 >> 24);
  v1331 = &v1329[v1328 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1330 / 4];
  v1332 = (v1311 >> (v1214 & 0x10 ^ 0x10) >> (v1214 & 0x10));
  v1333 = (unint64_t)&v1331[v1332 + v1330 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1319;
  LODWORD(v1319) = *v1319;
  STACK[0xD618] = (unint64_t)v1321;
  LODWORD(v1321) = *v1321;
  STACK[0xD618] = (unint64_t)v1323;
  LODWORD(v1323) = *v1323;
  STACK[0xD618] = v1325;
  LODWORD(v1325) = *(_DWORD *)v1325;
  STACK[0xD618] = (unint64_t)v1327;
  LODWORD(v1327) = *v1327;
  STACK[0xD618] = (unint64_t)v1329;
  LODWORD(v1329) = *v1329;
  STACK[0xD618] = (unint64_t)v1331;
  LODWORD(v1331) = *v1331;
  STACK[0xD618] = v1333;
  v1334 = v1333 - v1332 * 4;
  LODWORD(v1333) = *(_DWORD *)v1333;
  v1335 = (_DWORD *)(v1334 + 4 * BYTE1(v1290));
  STACK[0xD618] = (unint64_t)v1335;
  LODWORD(v1271) = *v1335;
  v1336 = 4 * v1292;
  v1337 = (_DWORD *)(v1334 + v1336);
  v1338 = 4 * (v1311 >> 24);
  v1339 = &v1337[(unint64_t)v1338 / 4 + v1336 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1337;
  LODWORD(v1337) = *v1337;
  STACK[0xD618] = (unint64_t)v1339;
  v1340 = &v1339[v1338 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1339) = *v1339;
  v1341 = &v1340[BYTE2(v1290)];
  STACK[0xD618] = (unint64_t)v1341;
  LODWORD(v1290) = *v1341;
  v1342 = &v1340[BYTE1(v1292)];
  STACK[0xD618] = (unint64_t)v1342;
  LODWORD(v1292) = *v1342;
  v1343 = 4 * v1313;
  STACK[0xD618] = (unint64_t)v1340 + v1343;
  LODWORD(v1315) = LODWORD(STACK[0x6160]) ^ ((LODWORD(STACK[0x616C]) ^ 0x8FD7E3B8) >> v1071) ^ __ROR4__((_DWORD)v1315, 24) ^ v1253 ^ __ROR4__((_DWORD)v1319, 8) ^ __ROR4__((_DWORD)v1321, 16);
  LODWORD(v1343) = *(_DWORD *)((char *)v1340 + v1343);
  v1344 = 4 * (v1315 >> 24);
  STACK[0xD618] = (unint64_t)v1340 + v1344;
  LODWORD(v1337) = ((LODWORD(STACK[0x6178]) >> v1094) + (LODWORD(STACK[0x6170]) << v1127)) ^ __ROR4__((_DWORD)v1331, 24) ^ v1333 ^ __ROR4__((_DWORD)v1271, 8) ^ __ROR4__((_DWORD)v1337, 16);
  LODWORD(v1253) = (1272585736 - LODWORD(STACK[0x6130]) + (LODWORD(STACK[0x65D8]) | 0xB425E1F7)) ^ ((_DWORD)v1323 << 8) ^ (v1323 >> 24) ^ v1325 ^ __ROR4__((_DWORD)v1327, 8) ^ __ROR4__((_DWORD)v1329, 16) ^ 0x33A1C18;
  LODWORD(v1344) = *(_DWORD *)((char *)v1340 + v1344);
  v1345 = BYTE2(v1253);
  v1346 = (unint64_t)&v1340[v1345];
  v1347 = 4 * BYTE1(v1337);
  v1348 = (_DWORD *)(v1346 + v1347 - v1345 * 4);
  LODWORD(v1290) = LODWORD(STACK[0x62B0]) ^ 0xE74A2494 ^ LODWORD(STACK[0x6088]) ^ __ROR4__((_DWORD)v1339, 24) ^ v1290 ^ __ROR4__((_DWORD)v1292, 8);
  v1349 = __ROR4__(v1343, 16);
  LODWORD(v1343) = v1290 ^ v1349;
  v1350 = 4 * (v1290 ^ v1349);
  v1351 = (_DWORD *)((char *)&v1348[(unint64_t)v1350 / 4] - v1347);
  STACK[0xD618] = v1346;
  LODWORD(v1346) = *(_DWORD *)v1346;
  STACK[0xD618] = (unint64_t)v1348;
  LODWORD(v1348) = *v1348;
  STACK[0xD618] = (unint64_t)v1351;
  v1352 = &v1351[v1350 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1351) = *v1351;
  v1353 = (unint64_t)&v1352[BYTE3(v1253)];
  STACK[0xD618] = v1353;
  LODWORD(v1347) = *(_DWORD *)v1353;
  v1354 = &v1352[BYTE2(v1337)];
  STACK[0xD618] = (unint64_t)v1354;
  LODWORD(v1353) = *v1354;
  v1355 = &v1352[BYTE1(v1343)];
  STACK[0xD618] = (unint64_t)v1355;
  LODWORD(v1354) = *v1355;
  v1356 = 4 * v1315;
  v1357 = &v1352[(unint64_t)v1356 / 4];
  v1358 = 4 * (v1337 >> 24);
  v1359 = &v1357[(unint64_t)v1358 / 4 + v1356 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1357;
  LODWORD(v1357) = *v1357;
  STACK[0xD618] = (unint64_t)v1359;
  v1360 = &v1359[v1358 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1359) = *v1359;
  v1361 = &v1360[BYTE2(v1343)];
  STACK[0xD618] = (unint64_t)v1361;
  LODWORD(v1333) = *v1361;
  v1362 = &v1360[BYTE1(v1315)];
  STACK[0xD618] = (unint64_t)v1362;
  LODWORD(v1361) = *v1362;
  v1363 = 4 * v1253;
  v1364 = &v1360[(unint64_t)v1363 / 4];
  v1365 = 4 * BYTE3(v1343);
  v1366 = &v1364[(unint64_t)v1365 / 4 + v1363 / 0xFFFFFFFFFFFFFFFCLL];
  v1367 = BYTE2(v1315);
  v1368 = (unint64_t)&v1366[v1367 + v1365 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1364;
  LODWORD(v1364) = *v1364;
  STACK[0xD618] = (unint64_t)v1366;
  LODWORD(v1366) = *v1366;
  STACK[0xD618] = v1368;
  v1369 = v1368 - v1367 * 4;
  LODWORD(v1368) = *(_DWORD *)v1368;
  v1370 = (_DWORD *)(v1369 + 4 * BYTE1(v1253));
  STACK[0xD618] = (unint64_t)v1370;
  LODWORD(v1253) = *v1370;
  v1371 = 4 * v1337;
  STACK[0xD618] = v1369 + v1371;
  LODWORD(v1357) = ((LODWORD(STACK[0x61A8]) << v1215) + (LODWORD(STACK[0x62E0]) >> v1094)) ^ __ROR4__(v1347, 24) ^ v1353 ^ __ROR4__((_DWORD)v1354, 8) ^ __ROR4__((_DWORD)v1357, 16);
  LODWORD(v1371) = *(_DWORD *)(v1369 + v1371);
  LODWORD(v1346) = LODWORD(STACK[0x6108]) ^ __ROR4__(v1344, 24) ^ v1346 ^ __ROR4__((_DWORD)v1348, 8) ^ __ROR4__((_DWORD)v1351, 16) ^ 0x750281E5;
  v1372 = 4 * BYTE3(v1346);
  v1373 = v1369 + v1372;
  v1374 = 4 * BYTE2(v1357);
  v1375 = v1373 + v1374 - v1372;
  LODWORD(v1344) = (LODWORD(STACK[0x6188]) + ((LODWORD(STACK[0x6190]) + 1737866033) ^ LODWORD(STACK[0x60F8]))) ^ __ROR4__((_DWORD)v1359, 24) ^ v1333 ^ __ROR4__((_DWORD)v1361, 8) ^ __ROR4__((_DWORD)v1364, 16);
  v1376 = 4 * BYTE1(v1344);
  v1377 = (_DWORD *)(v1375 + v1376 - v1374);
  LODWORD(v1368) = ((LODWORD(STACK[0x61A0]) ^ LODWORD(STACK[0x13BC])) >> v1094) ^ (LODWORD(STACK[0x6180]) << v1215) ^ __ROR4__((_DWORD)v1366, 24) ^ v1368 ^ __ROR4__(v1253, 8);
  v1378 = __ROR4__(v1371, 16);
  LODWORD(v1371) = v1368 ^ v1378;
  v1379 = &v1377[(v1368 ^ v1378) + v1376 / 0xFFFFFFFFFFFFFFFCLL];
  v1380 = &v1377[v1376 / 0xFFFFFFFFFFFFFFFCLL];
  v1381 = 4 * (v1357 >> 24);
  v1382 = &v1380[(unint64_t)v1381 / 4];
  v1383 = BYTE2(v1344);
  v1384 = (unint64_t)&v1382[v1383 + v1381 / 0xFFFFFFFFFFFFFFFCLL];
  v1385 = 4 * BYTE1(v1371);
  v1386 = (_DWORD *)(v1384 - v1383 * 4 + v1385);
  v1387 = 4 * v1346;
  v1388 = &v1386[(unint64_t)v1387 / 4 + v1385 / 0xFFFFFFFFFFFFFFFCLL];
  v1389 = 4 * BYTE3(v1344);
  v1390 = &v1388[v1387 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1389 / 4];
  v1391 = BYTE2(v1371);
  v1392 = (unint64_t)&v1390[v1391 + v1389 / 0xFFFFFFFFFFFFFFFCLL];
  v1393 = 4 * BYTE1(v1346);
  v1394 = (_DWORD *)(v1392 + v1393 - v1391 * 4);
  v1395 = 4 * v1357;
  v1396 = &v1394[v1393 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1395 / 4];
  v1397 = 4 * BYTE3(v1371);
  v1398 = &v1396[(unint64_t)v1397 / 4 + v1395 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = v1373;
  LODWORD(v1373) = *(_DWORD *)v1373;
  STACK[0xD618] = v1375;
  LODWORD(v1375) = *(_DWORD *)v1375;
  STACK[0xD618] = (unint64_t)v1377;
  LODWORD(v1377) = *v1377;
  STACK[0xD618] = (unint64_t)v1379;
  LODWORD(v1379) = *v1379;
  STACK[0xD618] = (unint64_t)v1382;
  LODWORD(v1382) = *v1382;
  STACK[0xD618] = v1384;
  LODWORD(v1384) = *(_DWORD *)v1384;
  STACK[0xD618] = (unint64_t)v1386;
  LODWORD(v1386) = *v1386;
  STACK[0xD618] = (unint64_t)v1388;
  LODWORD(v1388) = *v1388;
  STACK[0xD618] = (unint64_t)v1390;
  LODWORD(v1390) = *v1390;
  STACK[0xD618] = v1392;
  LODWORD(v1392) = *(_DWORD *)v1392;
  STACK[0xD618] = (unint64_t)v1394;
  LODWORD(v1394) = *v1394;
  STACK[0xD618] = (unint64_t)v1396;
  LODWORD(v1396) = *v1396;
  STACK[0xD618] = (unint64_t)v1398;
  v1399 = &v1398[v1397 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1398) = *v1398;
  v1400 = 4 * BYTE2(v1346);
  STACK[0xD618] = (unint64_t)v1399 + v1400;
  v1401 = STACK[0x6A50];
  LODWORD(v1373) = (LODWORD(STACK[0x62E8]) << (LODWORD(STACK[0x61DC]) ^ 2)) ^ LODWORD(STACK[0x6158]) ^ 0xCC7A48BD ^ __ROR4__(v1373, 24) ^ v1375;
  LODWORD(v1400) = *(_DWORD *)((char *)v1399 + v1400);
  v1402 = 4 * BYTE1(v1357);
  v1403 = &v1399[(unint64_t)v1402 / 4];
  v1404 = 4 * v1344;
  v1405 = &v1403[(unint64_t)v1404 / 4 + v1402 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1373) = v1373 ^ __ROR4__((_DWORD)v1377, 8) ^ __ROR4__((_DWORD)v1379, 16);
  LODWORD(v1382) = (LODWORD(STACK[0x61D0])
                  + ((LODWORD(STACK[0x62F0]) ^ 0x438587A1 ^ (LODWORD(STACK[0x6A50]) ^ 0xE7858725) & STACK[0x62F8]) >> v1071)) ^ ((_DWORD)v1382 << 8) ^ (v1382 >> 24) ^ v1384 ^ __ROR4__((_DWORD)v1386, 8) ^ __ROR4__((_DWORD)v1388, 16);
  v1406 = BYTE3(v1373);
  v1407 = (unint64_t)&v1405[v1404 / 0xFFFFFFFFFFFFFFFCLL + v1406];
  v1408 = 4 * BYTE2(v1382);
  v1409 = v1407 + v1408 - v1406 * 4;
  LODWORD(v1344) = (LODWORD(STACK[0x61C0]) + ((LODWORD(STACK[0x61C8]) + 2084683896) ^ LODWORD(STACK[0x6150]))) ^ __ROR4__((_DWORD)v1390, 24) ^ v1392 ^ __ROR4__((_DWORD)v1394, 8) ^ __ROR4__((_DWORD)v1396, 16);
  STACK[0xD618] = (unint64_t)v1403;
  LODWORD(v1403) = *v1403;
  STACK[0xD618] = (unint64_t)v1405;
  LODWORD(v1405) = *v1405;
  STACK[0xD618] = v1407;
  LODWORD(v1407) = *(_DWORD *)v1407;
  STACK[0xD618] = v1409;
  v1410 = v1409 - v1408;
  LODWORD(v1409) = *(_DWORD *)v1409;
  v1411 = 4 * BYTE1(v1344);
  STACK[0xD618] = v1410 + v1411;
  LODWORD(v1400) = (LODWORD(STACK[0x61E8]) << LODWORD(STACK[0x69E0])) ^ ((LODWORD(STACK[0x62C8]) ^ 0x60C01000 ^ STACK[0x62D8] & (v1401 ^ 0xF1EE920C)) >> v1094) ^ __ROR4__((_DWORD)v1398, 24) ^ v1400 ^ __ROR4__((_DWORD)v1403, 8) ^ __ROR4__((_DWORD)v1405, 16);
  LODWORD(v1403) = *(_DWORD *)(v1410 + v1411);
  v1412 = (_DWORD *)(v1410 + 4 * v1400);
  STACK[0xD618] = (unint64_t)v1412;
  LODWORD(v1405) = *v1412;
  v1413 = 4 * (v1382 >> 24);
  v1414 = (_DWORD *)(v1410 + v1413);
  v1415 = BYTE2(v1344);
  v1416 = (unint64_t)&v1414[v1415 + v1413 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = (unint64_t)v1414;
  LODWORD(v1414) = *v1414;
  STACK[0xD618] = v1416;
  v1417 = v1416 - v1415 * 4;
  LODWORD(v1416) = *(_DWORD *)v1416;
  v1418 = (_DWORD *)(v1417 + 4 * BYTE1(v1400));
  STACK[0xD618] = (unint64_t)v1418;
  LODWORD(v1388) = *v1418;
  v1419 = (_DWORD *)(v1417 + 4 * v1373);
  STACK[0xD618] = (unint64_t)v1419;
  LODWORD(v1418) = *v1419;
  v1420 = 4 * BYTE3(v1344);
  v1421 = v1417 + v1420;
  v1422 = 4 * BYTE2(v1400);
  v1423 = v1421 + v1422 - v1420;
  STACK[0xD618] = v1421;
  LODWORD(v1421) = *(_DWORD *)v1421;
  STACK[0xD618] = v1423;
  v1424 = v1423 - v1422;
  LODWORD(v1423) = *(_DWORD *)v1423;
  v1425 = 4 * BYTE1(v1373);
  STACK[0xD618] = v1424 + v1425;
  LODWORD(v1425) = *(_DWORD *)(v1424 + v1425);
  v1426 = 4 * v1382;
  v1427 = (_DWORD *)(v1424 + v1426);
  v1428 = 4 * BYTE3(v1400);
  v1429 = &v1427[(unint64_t)v1428 / 4 + v1426 / 0xFFFFFFFFFFFFFFFCLL];
  v1430 = BYTE2(v1373);
  v1431 = (unint64_t)&v1429[v1430 + v1428 / 0xFFFFFFFFFFFFFFFCLL];
  v1432 = 4 * BYTE1(v1382);
  v1433 = (_DWORD *)(v1431 - v1430 * 4 + v1432);
  v1434 = 4 * v1344;
  v1435 = &v1433[(unint64_t)v1434 / 4 + v1432 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1403) = (((LODWORD(STACK[0x6200]) ^ 0xC8E15B20) >> v1094) | LODWORD(STACK[0x61F8])) ^ __ROR4__(v1407, 24) ^ v1409 ^ __ROR4__((_DWORD)v1403, 8) ^ __ROR4__((_DWORD)v1405, 16);
  STACK[0xD618] = (unint64_t)v1427;
  LODWORD(v1405) = *v1427;
  STACK[0xD618] = (unint64_t)v1429;
  LODWORD(v1407) = *v1429;
  STACK[0xD618] = v1431;
  LODWORD(v1431) = *(_DWORD *)v1431;
  STACK[0xD618] = (unint64_t)v1433;
  LODWORD(v1433) = *v1433;
  STACK[0xD618] = (unint64_t)v1435;
  v1436 = &v1435[v1434 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1435) = *v1435;
  v1437 = 4 * (v1403 >> 24);
  STACK[0xD618] = (unint64_t)v1436 + v1437;
  LODWORD(v1414) = (LODWORD(STACK[0x6210]) + ((LODWORD(STACK[0x6220]) - 419416727) ^ LODWORD(STACK[0x6198]))) ^ __ROR4__((_DWORD)v1414, 24) ^ v1416 ^ __ROR4__((_DWORD)v1388, 8) ^ __ROR4__((_DWORD)v1418, 16);
  LODWORD(v1437) = *(_DWORD *)((char *)v1436 + v1437);
  v1438 = 4 * BYTE2(v1414);
  STACK[0xD618] = (unint64_t)v1436 + v1438;
  LODWORD(v1421) = (LODWORD(STACK[0x6218]) + ((LODWORD(STACK[0x6228]) + 1164027196) ^ LODWORD(STACK[0x61B0]))) ^ __ROR4__(v1421, 24) ^ v1423 ^ __ROR4__(v1425, 8);
  v1439 = __ROR4__((_DWORD)v1405, 16);
  LODWORD(v1405) = v1421 ^ v1439;
  LODWORD(v1438) = *(_DWORD *)((char *)v1436 + v1438);
  v1440 = ((unsigned __int16)(v1421 ^ v1439) >> 8);
  STACK[0xD618] = (unint64_t)&v1436[v1440];
  LODWORD(v1431) = ((LODWORD(STACK[0x62D0]) >> v1094) + (LODWORD(STACK[0x6230]) << LODWORD(STACK[0x69C0]))) ^ __ROR4__(v1407, 24) ^ v1431 ^ __ROR4__((_DWORD)v1433, 8) ^ __ROR4__((_DWORD)v1435, 16);
  LODWORD(v1435) = v1436[v1440];
  v1441 = 4 * v1431;
  STACK[0xD618] = (unint64_t)v1436 + v1441;
  LODWORD(v1441) = *(_DWORD *)((char *)v1436 + v1441);
  v1442 = v1414 >> 24;
  v1443 = (unint64_t)&v1436[v1442];
  v1444 = 4 * BYTE2(v1405);
  v1445 = v1443 + v1444 - v1442 * 4;
  v1446 = 4 * BYTE1(v1431);
  v1447 = (_DWORD *)(v1445 + v1446 - v1444);
  v1448 = 4 * v1403;
  v1449 = &v1447[(unint64_t)v1448 / 4 + v1446 / 0xFFFFFFFFFFFFFFFCLL];
  v1450 = 4 * (v1405 >> 24);
  v1451 = &v1449[v1448 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1450 / 4];
  v1452 = BYTE2(v1431);
  v1453 = (unint64_t)&v1451[v1452 + v1450 / 0xFFFFFFFFFFFFFFFCLL];
  v1454 = 4 * BYTE1(v1403);
  v1455 = (_DWORD *)(v1453 + v1454 - v1452 * 4);
  v1456 = 4 * v1414;
  v1457 = &v1455[v1454 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1456 / 4];
  v1458 = BYTE3(v1431);
  v1459 = (unint64_t)&v1457[v1458 + v1456 / 0xFFFFFFFFFFFFFFFCLL];
  v1460 = 4 * BYTE2(v1403);
  v1461 = (_DWORD *)(v1459 + v1460 - v1458 * 4);
  v1462 = 4 * BYTE1(v1414);
  v1463 = &v1461[(unint64_t)v1462 / 4 + v1460 / 0xFFFFFFFFFFFFFFFCLL];
  v1464 = 4 * v1405;
  v1465 = &v1463[(unint64_t)v1464 / 4 + v1462 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1435) = LODWORD(STACK[0x61BC]) ^ 0xC774B8A9 ^ (LODWORD(STACK[0x62B8]) << (LODWORD(STACK[0x6240]) ^ 2)) ^ ((_DWORD)v1437 << 8) ^ BYTE3(v1437) ^ v1438 ^ __ROR4__((_DWORD)v1435, 8) ^ __ROR4__(v1441, 16);
  STACK[0xD618] = v1443;
  LODWORD(v1441) = *(_DWORD *)v1443;
  STACK[0xD618] = v1445;
  LODWORD(v1407) = *(_DWORD *)v1445;
  STACK[0xD618] = (unint64_t)v1447;
  LODWORD(v1443) = *v1447;
  STACK[0xD618] = (unint64_t)v1449;
  LODWORD(v1437) = *v1449;
  STACK[0xD618] = (unint64_t)v1451;
  LODWORD(v1438) = *v1451;
  STACK[0xD618] = v1453;
  LODWORD(v1445) = *(_DWORD *)v1453;
  STACK[0xD618] = (unint64_t)v1455;
  LODWORD(v1447) = *v1455;
  STACK[0xD618] = (unint64_t)v1457;
  LODWORD(v1449) = *v1457;
  STACK[0xD618] = v1459;
  LODWORD(v1451) = *(_DWORD *)v1459;
  STACK[0xD618] = (unint64_t)v1461;
  LODWORD(v1453) = *v1461;
  STACK[0xD618] = (unint64_t)v1463;
  LODWORD(v1463) = *v1463;
  STACK[0xD618] = (unint64_t)v1465;
  v1466 = &v1465[v1464 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1465) = *v1465;
  v1467 = 4 * (v1435 >> 24);
  STACK[0xD618] = (unint64_t)v1466 + v1467;
  LODWORD(v1441) = LODWORD(STACK[0x61E0]) ^ __ROR4__(v1441, 24) ^ v1407 ^ __ROR4__(v1443, 8) ^ __ROR4__(v1437, 16);
  LODWORD(v1467) = *(_DWORD *)((char *)v1466 + v1467);
  v1468 = 4 * BYTE2(v1441);
  STACK[0xD618] = (unint64_t)v1466 + v1468;
  LODWORD(v1443) = ((LODWORD(STACK[0x6250]) << LODWORD(STACK[0x6860])) | ((LODWORD(STACK[0x6258]) ^ 0xF1C829A3) >> v1071)) ^ __ROR4__(v1438, 24) ^ v1445 ^ __ROR4__((_DWORD)v1447, 8) ^ __ROR4__((_DWORD)v1449, 16);
  LODWORD(v1468) = *(_DWORD *)((char *)v1466 + v1468);
  v1469 = 4 * BYTE1(v1443);
  STACK[0xD618] = (unint64_t)v1466 + v1469;
  LODWORD(v1469) = *(_DWORD *)((char *)v1466 + v1469);
  LODWORD(v1463) = LODWORD(STACK[0x61F0]) ^ LODWORD(STACK[0x62A8]) ^ 0x8CF6DFB1 ^ __ROR4__((_DWORD)v1451, 24) ^ v1453 ^ __ROR4__((_DWORD)v1463, 8) ^ __ROR4__((_DWORD)v1465, 16);
  v1470 = 4 * v1463;
  STACK[0xD618] = (unint64_t)v1466 + v1470;
  LODWORD(v1470) = *(_DWORD *)((char *)v1466 + v1470);
  v1471 = &v1466[BYTE3(v1441)];
  STACK[0xD618] = (unint64_t)v1471;
  LODWORD(v1438) = *v1471;
  v1472 = BYTE2(v1443);
  v1473 = (unint64_t)&v1466[v1472];
  v1474 = 4 * BYTE1(v1463);
  v1475 = (_DWORD *)(v1473 + v1474 - v1472 * 4);
  v1476 = 4 * v1435;
  v1477 = &v1475[v1474 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1476 / 4];
  v1478 = BYTE3(v1443);
  v1479 = (unint64_t)&v1477[v1478 + v1476 / 0xFFFFFFFFFFFFFFFCLL];
  v1480 = 4 * BYTE2(v1463);
  v1481 = v1479 + v1480 - v1478 * 4;
  v1482 = 4 * BYTE1(v1435);
  v1483 = (_DWORD *)(v1481 - v1480 + v1482);
  v1484 = 4 * v1441;
  v1485 = &v1483[(unint64_t)v1484 / 4 + v1482 / 0xFFFFFFFFFFFFFFFCLL];
  v1486 = 4 * (v1463 >> 24);
  v1487 = &v1485[v1484 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1486 / 4];
  v1488 = BYTE2(v1435);
  v1489 = (unint64_t)&v1487[v1488 + v1486 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD618] = v1473;
  LODWORD(v1473) = *(_DWORD *)v1473;
  STACK[0xD618] = (unint64_t)v1475;
  LODWORD(v1475) = *v1475;
  STACK[0xD618] = (unint64_t)v1477;
  LODWORD(v1477) = *v1477;
  STACK[0xD618] = v1479;
  LODWORD(v1479) = *(_DWORD *)v1479;
  STACK[0xD618] = v1481;
  LODWORD(v1481) = *(_DWORD *)v1481;
  STACK[0xD618] = (unint64_t)v1483;
  LODWORD(v1483) = *v1483;
  STACK[0xD618] = (unint64_t)v1485;
  LODWORD(v1485) = *v1485;
  STACK[0xD618] = (unint64_t)v1487;
  LODWORD(v1487) = *v1487;
  STACK[0xD618] = v1489;
  v1490 = v1489 - v1488 * 4;
  LODWORD(v1489) = *(_DWORD *)v1489;
  v1491 = 4 * BYTE1(v1441);
  STACK[0xD618] = v1490 + v1491;
  LODWORD(v1459) = LODWORD(STACK[0x6280]) + (LODWORD(STACK[0x6288]) >> v1071);
  v1492 = (LODWORD(STACK[0x6270]) << LODWORD(STACK[0x69D0])) + (LODWORD(STACK[0x6268]) >> v1071);
  HIDWORD(v1493) = v1438;
  LODWORD(v1493) = v1438;
  v1494 = LODWORD(STACK[0x62A0]) << LODWORD(STACK[0x6260]);
  LODWORD(v1491) = *(_DWORD *)(v1490 + v1491);
  LODWORD(v1473) = LODWORD(STACK[0x6238]) ^ 0x13BE54DD ^ (LODWORD(STACK[0x62C0]) << (LODWORD(STACK[0x6278]) ^ 0x82)) ^ (v1473 + (v1493 >> 24) - 2 * (v1473 & (v1493 >> 24))) ^ __ROR4__((_DWORD)v1475, 8) ^ __ROR4__((_DWORD)v1477, 16);
  v1495 = v1490 + 4 * v1443;
  STACK[0xD618] = v1495;
  LODWORD(v1443) = *(_DWORD *)v1495;
  LODWORD(v1467) = v1459 ^ ((_DWORD)v1467 << 8) ^ BYTE3(v1467) ^ v1468 ^ __ROR4__(v1469, 8) ^ __ROR4__(v1470, 16);
  STACK[0xD618] = v1490;
  LODWORD(v1489) = v1494 ^ LODWORD(STACK[0x6248]) ^ 0x93C2F479 ^ __ROR4__((_DWORD)v1487, 24) ^ v1489 ^ __ROR4__(v1491, 8) ^ __ROR4__(v1443, 16);
  LODWORD(v1468) = v1492 ^ __ROR4__(v1479, 24) ^ v1481 ^ __ROR4__((_DWORD)v1483, 8) ^ __ROR4__((_DWORD)v1485, 16);
  HIDWORD(v1493) = *(_DWORD *)(STACK[0xD620] + 4 * BYTE2(v1473));
  LODWORD(v1493) = HIDWORD(v1493);
  LODWORD(v1491) = (v1493 >> 24) ^ __ROR4__(*(_DWORD *)(STACK[0xD620] + 4 * BYTE3(v1467)), 16) ^ *(_DWORD *)(STACK[0xD620] + 4 * BYTE1(v1468)) ^ __ROR4__(*(_DWORD *)(STACK[0xD620] + 4 * v1489), 8);
  LODWORD(v1443) = *(_DWORD *)(STACK[0xD620] + 4 * BYTE3(v1473));
  LODWORD(v1438) = *(_DWORD *)(STACK[0xD620] + 4 * BYTE2(v1468));
  LODWORD(v1495) = *(_DWORD *)(STACK[0xD620] + 4 * BYTE1(v1489));
  LODWORD(v1477) = *(_DWORD *)(STACK[0xD620] + 4 * v1467);
  LODWORD(v1469) = *(_DWORD *)(STACK[0xD620] + 4 * BYTE3(v1468));
  LODWORD(v1479) = *(_DWORD *)(STACK[0xD620] + 4 * BYTE2(v1489));
  LODWORD(v1481) = *(_DWORD *)(STACK[0xD620] + 4 * BYTE1(v1467));
  LODWORD(v1483) = *(_DWORD *)(STACK[0xD620] + 4 * v1473);
  v1496 = 4 * BYTE3(v1489);
  v1497 = (_DWORD *)(STACK[0xD620] + v1496);
  STACK[0xD620] = (unint64_t)v1497;
  LODWORD(v1490) = *v1497;
  v1498 = BYTE2(v1467);
  v1499 = (unint64_t)&v1497[v1498] - v1496;
  STACK[0xD620] = v1499;
  LODWORD(v1496) = *(_DWORD *)v1499;
  v1500 = v1499 - v1498 * 4;
  v1501 = v1500 + 4 * BYTE1(v1473);
  STACK[0xD620] = v1501;
  LODWORD(v1501) = *(_DWORD *)v1501;
  LODWORD(v1499) = v1491 & LODWORD(STACK[0x6290]);
  LODWORD(v1491) = v1491 + LODWORD(STACK[0x6290]);
  v1502 = 4 * v1468;
  STACK[0xD620] = v1500 + v1502;
  LODWORD(v1443) = LODWORD(STACK[0x6298]) ^ 0x11440A45 ^ __ROR4__(v1443, 16) ^ __ROR4__(v1438, 24) ^ v1495 ^ __ROR4__((_DWORD)v1477, 8);
  LODWORD(v1502) = *(_DWORD *)(v1500 + v1502);
  LODWORD(v1499) = v1491 - 2 * v1499;
  LODWORD(v1438) = STACK[0x6AA0];
  LODWORD(v1491) = LODWORD(STACK[0x6AA0]) ^ __ROR4__(v1469, 16) ^ __ROR4__(v1479, 24) ^ v1481 ^ __ROR4__((_DWORD)v1483, 8) ^ 0x4A59D2D4;
  STACK[0xD620] = v1500;
  LODWORD(v1490) = v1438 ^ __ROR4__(v1490, 16) ^ __ROR4__(v1496, 24) ^ v1501 ^ __ROR4__(v1502, 8) ^ 0xBE5D4DEF;
  LODWORD(v1501) = v1491 ^ v1443 ^ v1499;
  LODWORD(v1500) = v1491 ^ v1443 ^ v1490;
  LODWORD(v1490) = v1490 ^ v1443 ^ v1499;
  LODWORD(v1479) = STACK[0x6AC0];
  LOBYTE(v1469) = *((_BYTE *)*(&off_1015B46D0 + LODWORD(STACK[0x6AC0]) - 10732) + (BYTE3(v1500) ^ 0x80) - 4);
  v1503 = (_BYTE *)STACK[0x6800];
  v1503[8] = v1469 ^ (16 * v1469) ^ 0x4A;
  LOBYTE(v1469) = *((_BYTE *)*(&off_1015B46D0 + (int)(v1479 ^ 0x2FB4)) + (BYTE1(v1499) ^ 0xDDLL)) + 20;
  v1503[12] = v1469 ^ (16 * v1469) ^ 0x56;
  v1503[1] = ((BYTE2(v1501) ^ 0xAC) + *((_BYTE *)*(&off_1015B46D0 + (int)(v1479 ^ 0x2BF4)) + (BYTE2(v1501) ^ 0xDFLL)) + 1) ^ 0xF;
  LOBYTE(v1469) = *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 10973) + ((v1491 ^ v1443 ^ v1499) ^ 0x3CLL));
  v1503[4] = v1469 ^ 0xD9 ^ (((4 * v1469) ^ 0x24) + 36);
  v1503[5] = *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 9613) + (v1499 ^ 6) - 8) ^ 0x86;
  v1503[13] = (-123 * *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 11771) + (BYTE3(v1499) ^ 0x28) - 12)) ^ 0xAE;
  v1503[6] = (*((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 10294) + (BYTE2(v1490) ^ 0x60) - 4) + (BYTE2(v1490) ^ 0x69)) ^ 0x14;
  v1503[3] = BYTE3(v1501) ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v1479 ^ 0x2E91)) + (BYTE3(v1501) ^ 0xBELL)) ^ 0x66;
  v1503[7] = v1500 ^ ((v1500 ^ 0x70) - 53) ^ 0x68 ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v1479 ^ 0x2CC0))
                                                    + (v1500 ^ 0xC0)
                                                    - 8);
  v1503[2] = *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 11590) + (BYTE3(v1490) ^ 0xAALL)) ^ 0x46;
  v1504 = (_BYTE *)STACK[0xD628];
  v1504[10] = v1490 ^ 0x4E ^ *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 10830) + (v1490 ^ 0xCCLL) - 4);
  *v1504 = *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 10052) + (BYTE2(v1500) ^ 0x62) - 8) ^ 0x41;
  v1504[9] = BYTE1(v1501) ^ 0x9C ^ *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 11521) + (BYTE1(v1501) ^ 0xA5) - 8);
  LOBYTE(v1490) = *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 10722) + (BYTE1(v1490) ^ 0xC9) - 8);
  v1504[11] = (v1490 + 33) ^ 0xA5 ^ (4 * v1490 + 36);
  v1504[14] = *((_BYTE *)*(&off_1015B46D0 + (int)(v1479 ^ 0x2A91))
              + (BYTE2(v1499) ^ 0xA ^ -(BYTE2(v1499) ^ 0xA) ^ ((BYTE2(v1499) ^ 0xFFFFFF9E) + 108))
              + 107) ^ 0xE6;
  v1504[15] = (-39 * *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 10340) + (BYTE1(v1500) ^ 0xDDLL) - 12)) ^ ((-39 * *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 10340) + (BYTE1(v1500) ^ 0xDDLL) - 12)) >> 3) ^ ((-39 * *((_BYTE *)*(&off_1015B46D0 + (int)v1479 - 10340) + (BYTE1(v1500) ^ 0xDDLL) - 12)) >> 1) ^ 0x7A;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v1479) - 12))(STACK[0xD620]);
}

uint64_t sub_100BE80F4()
{
  int v0;
  uint64_t (*v1)(unint64_t);
  uint64_t v2;

  v1 = (uint64_t (*)(unint64_t))STACK[0x5A40];
  ((void (*)(void))STACK[0x5A40])();
  v2 = v1(STACK[0xD618]);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0)
                                                   - ((v0 + 13807) ^ 0x4C0BLL)))(v2, 1463807981);
}

uint64_t sub_100BE8144(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  LODWORD(STACK[0x6AC0]) = (v8 ^ a2) - 335554561 + ((2 * v8) & 0xAE7FDFDA);
  STACK[0xD1A8] = STACK[0xD1A8] - 19494 + ((v9 + 195035772) & 0xF45FFD96);
  STACK[0xC768] -= 144;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((464
                                          * (STACK[0xA7B8] <= *(_QWORD *)(STACK[0xB8D0] - 0x28623712C9340EDELL) + a8)) | v9))
                            - 4))();
}

uint64_t sub_100BE8238()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v7 = v4 - 11482 + (v3 - 7997);
  v8 = *(_DWORD *)STACK[0x60B8];
  v9 = *(_QWORD *)STACK[0x60C0];
  v10 = (((v2 + v7) ^ *(_DWORD *)(v9 + (v8 & 0x1A3E29B8))) & 0x7FFFFFFF) * v0;
  v11 = (v10 ^ HIWORD(v10)) * v0;
  v12 = ((((*(_DWORD *)(v9 + (v8 & 0x16A74F3C)) ^ ((_DWORD)v1 + (_DWORD)v7)) & 0x7FFFFFFF) * v0) ^ ((((*(_DWORD *)(v9 + (v8 & 0x16A74F3C)) ^ ((_DWORD)v1 + (_DWORD)v7)) & 0x7FFFFFFFu) * v0) >> 16))
      * v0;
  LOBYTE(STACK[0xFB63]) = *(_BYTE *)(STACK[0x5608] + (v11 >> 24)) ^ *(_BYTE *)(v2 + v7) ^ *(_BYTE *)(v6 + (v11 >> 24)) ^ *(_BYTE *)(STACK[0x5610] + (v11 >> 24)) ^ *(_BYTE *)(v5 + (v12 >> 24)) ^ *(_BYTE *)((v12 >> 24) + STACK[0x5568] + 2) ^ *(_BYTE *)(STACK[0x5560] + (v12 >> 24)) ^ v11 ^ (29 * BYTE3(v11)) ^ v12 ^ (-55 * BYTE3(v12));
  v13 = (*(uint64_t (**)(void))(*(_QWORD *)STACK[0x5B58]
                             + 32
                             * *(unsigned __int8 *)(((v1 + v7 - 0x30831D73E345A1C2 - *(_QWORD *)STACK[0x5B50]) & 0xFFFFFFFFFFFFFFF0)
                                                  + *(_QWORD *)STACK[0x5B48]
                                                  + 8)
                             + 16))();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((453 * (v7 != 0)) ^ v3)) - 4))(v13);
}

uint64_t sub_100BE83A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v7 = *(unsigned int *)STACK[0x60B8];
  v8 = *(_QWORD *)STACK[0x60C0];
  v9 = ((*(_DWORD *)(v8 + (v7 & 0x1A3E29B8)) ^ (v2 + v4)) & 0x7FFFFFFF) * v0;
  v10 = (v9 ^ HIWORD(v9)) * v0;
  v11 = ((((*(_DWORD *)(v8 + (v7 & ((v3 - 7978) ^ 0x16A763E5))) ^ ((_DWORD)v1 + (_DWORD)v4)) & 0x7FFFFFFF)
        * v0) ^ ((((*(_DWORD *)(v8 + (v7 & ((v3 - 7978) ^ 0x16A763E5))) ^ ((_DWORD)v1 + (_DWORD)v4)) & 0x7FFFFFFFu)
                * v0) >> 16))
      * v0;
  LOBYTE(STACK[0xFB62]) = *(_BYTE *)(STACK[0x5608] + (v10 >> 24)) ^ *(_BYTE *)(v2 + v4) ^ *(_BYTE *)(v6 + (v10 >> 24)) ^ *(_BYTE *)(STACK[0x5610] + (v10 >> 24)) ^ *(_BYTE *)(v5 + (v11 >> 24)) ^ *(_BYTE *)((v11 >> 24) + STACK[0x5568] + 2) ^ v10 ^ *(_BYTE *)(STACK[0x5560] + (v11 >> 24)) ^ (29 * BYTE3(v10)) ^ v11 ^ (-55 * BYTE3(v11));
  v12 = (*(uint64_t (**)(void))(*(_QWORD *)STACK[0x5B58]
                             + 32
                             * *(unsigned __int8 *)(((v1 + v4 - 0x30831D73E345A1C2 - *(_QWORD *)STACK[0x5B50]) & 0xFFFFFFFFFFFFFFF0)
                                                  + *(_QWORD *)STACK[0x5B48]
                                                  + 8)
                             + 16))();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21 * (v4 == 47)) ^ v3)) - 4))(v12);
}

uint64_t sub_100BE8504()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v0 ^ 0x58AB) * (LODWORD(STACK[0x6AC0]) == 1128253420)) ^ v0))
                            - ((v0 - 7365) | 0x62u)
                            + 4206))();
}

uint64_t sub_100BE8568()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  _BOOL4 v4;

  v1 = STACK[0xB1D0];
  v2 = STACK[0x9198] - 0x6B2A75BCFF6C03A9;
  STACK[0xD640] = v2;
  v4 = v1 == 0x112B0CED4B6AE23 || v2 == 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((v4 * (((v0 ^ 0x7816) + 253176624) & 0xF0E8AFCF ^ ((v0 ^ 0x7816) - 9433))) ^ v0 ^ 0x7816)))();
}

#error "100BE8618: too big function (funcsize=0)"

uint64_t sub_100C02CE8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unint64_t v26;
  int v27;
  int v28;
  unint64_t v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  int v34;
  unsigned __int8 v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  unint64_t v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  BOOL v116;
  unsigned int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  BOOL v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  unint64_t v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  unsigned int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  unsigned int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  int v379;
  unsigned int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  unsigned int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  unsigned int v391;
  int v392;
  int v393;
  unsigned int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  int v412;
  unsigned int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  int v427;
  unsigned int v428;
  int v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  unsigned int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  unsigned int v473;
  int v474;
  int v475;
  unsigned int v476;
  int v477;
  int v478;
  int v479;
  unsigned int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  unsigned int v486;
  unsigned int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  unsigned int v497;
  unsigned int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  unsigned int v513;
  unsigned int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  unint64_t v543;
  int v544;
  unsigned int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  int v626;
  int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  unsigned int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  int v640;
  int v641;
  int v642;
  int v643;
  int v644;
  unint64_t v645;
  int v646;
  int v647;
  unsigned int v648;
  int v649;
  int v650;
  unsigned int v651;
  int v652;
  int v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  int v661;
  int v662;
  int v663;
  int v664;
  int v665;
  int v666;
  int v667;
  int v668;
  int v669;
  int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  int v676;
  int v677;
  int v678;
  int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  unsigned int v696;
  int v697;
  int v698;
  int v699;
  unsigned int v700;
  int v701;
  int v702;
  int v703;
  int v704;
  int v705;
  int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  unint64_t v714;
  int v715;
  int v716;
  int v717;
  int v718;
  int v719;
  int v720;
  int v721;
  int v722;
  int v723;
  int v724;
  int v725;
  int v726;
  int v727;
  int v728;
  int v729;
  int v730;
  int v731;
  int v732;
  int v733;
  int v734;
  int v735;
  int v736;
  int v737;
  int v738;
  unsigned int v739;
  int v740;
  int v741;
  int v742;
  int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  int v750;
  int v751;
  int v752;
  int v753;
  int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  int v759;
  int v760;
  int v761;
  int v762;
  int v763;
  int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  int v774;
  int v775;
  int v776;
  int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  int v783;
  int v784;
  int v785;
  int v786;
  int v787;
  int v788;
  int v789;

  LODWORD(STACK[0x6510]) = 0;
  LODWORD(STACK[0x6310]) = LODWORD(STACK[0x6668]) ^ LODWORD(STACK[0x6430]);
  LODWORD(STACK[0x6368]) = STACK[0x65A0] ^ STACK[0x65A8];
  LODWORD(STACK[0x6388]) = v8 ^ LODWORD(STACK[0x6228]) ^ v15 ^ a3 ^ v25;
  LODWORD(STACK[0x6398]) = LODWORD(STACK[0x63D0]) ^ v14 ^ LODWORD(STACK[0x6218]) ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x63A8]);
  LODWORD(STACK[0x63A0]) ^= LODWORD(STACK[0x63F8]);
  LODWORD(STACK[0x63A8]) = v17 ^ LODWORD(STACK[0x6318]) ^ LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6270]);
  LODWORD(STACK[0x63C8]) ^= LODWORD(STACK[0x63E0]) ^ v20 ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x6278]);
  LODWORD(STACK[0x63D0]) = v11 ^ v24 ^ LODWORD(STACK[0x62F0]) ^ LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x6250]);
  LODWORD(STACK[0x63F8]) = LODWORD(STACK[0x62D0]) ^ LODWORD(STACK[0x6370]) ^ LODWORD(STACK[0x6258]) ^ LODWORD(STACK[0x6260]);
  LODWORD(STACK[0x6440]) = a1 ^ a4;
  LODWORD(STACK[0x65A0]) = LODWORD(STACK[0x6238]) ^ a7 ^ v10 ^ v13 ^ v19;
  LODWORD(STACK[0x6650]) = a2 ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x6300]) ^ LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x6320]);
  LODWORD(STACK[0x65C8]) = LODWORD(STACK[0x6390]) ^ LODWORD(STACK[0x6220]) ^ LODWORD(STACK[0x6338]) ^ LODWORD(STACK[0x6308]) ^ v22;
  LODWORD(STACK[0x65A8]) = LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x63B0]) ^ LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x6330]);
  LODWORD(STACK[0x6668]) = v21 ^ v23 ^ LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x6380]) ^ LODWORD(STACK[0x6248]);
  LODWORD(STACK[0x6658]) = LODWORD(STACK[0x62F8]) ^ v16 ^ a8 ^ LODWORD(STACK[0x62A0]) ^ LODWORD(STACK[0x6298]);
  LODWORD(STACK[0x6670]) = LODWORD(STACK[0x6240]) ^ LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x62D8]) ^ a6;
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x62B0]) ^ LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x6288]) ^ v18 ^ LODWORD(STACK[0x62B8]);
  v26 = STACK[0x6A50];
  LODWORD(STACK[0x63E0]) = a5 ^ 0x52A9FD25 ^ *(_DWORD *)(STACK[0x6A50] + 4 * (a5 ^ 0xE3u));
  v27 = (LODWORD(STACK[0x6730]) - 10087) | 0x240;
  LODWORD(STACK[0x6500]) = v27;
  v28 = (*(_DWORD *)(v26
                   + 4 * ((LODWORD(STACK[0x64A0]) ^ 0x3C) - ((LODWORD(STACK[0x6280]) << (v27 ^ 0xCE)) & 0x82u) + 65)) ^ 0x22F7AE55)
      + 1392234594;
  LODWORD(STACK[0x6430]) = LODWORD(STACK[0x64A0]) ^ 0xDB57BB3A ^ (((2 * v28) & 0x5A085F3C) + (v28 ^ 0xAD042F9E));
  v29 = STACK[0x67C0];
  LODWORD(STACK[0x63D8]) = -2052653464
                         - ((((2 * (LODWORD(STACK[0x64A8]) ^ 0xED)) & 0xEA) + (LODWORD(STACK[0x64A8]) ^ 0xBF98F598)) ^ LODWORD(STACK[0x64A8]) ^ 0xED)
                         + *(_DWORD *)(STACK[0x67C0] + 4 * (LODWORD(STACK[0x64A8]) ^ 0x12u));
  LODWORD(STACK[0x63B0]) = BYTE1(v9) ^ 0xB8DABAFB ^ *(_DWORD *)(v26 + 4 * (BYTE1(v9) ^ 0x65u));
  v30 = STACK[0x6360];
  v31 = STACK[0x6A30];
  LODWORD(STACK[0x63B8]) = (LODWORD(STACK[0x6360])
                          - 1621172836
                          - 2 * (STACK[0x6360] & 0x9E ^ STACK[0x6760] & 2)) ^ 0x83779721 ^ *(_DWORD *)(STACK[0x6A30] + 4 * (LODWORD(STACK[0x6760]) ^ 0x83u));
  LODWORD(STACK[0x6390]) = v12 ^ 0xC8A3095 ^ *(_DWORD *)(v26 + 4 * (v12 ^ 0x2Fu));
  LODWORD(STACK[0x6338]) = (LODWORD(STACK[0x6770]) - 1621172836 - ((2 * LODWORD(STACK[0x6770])) & 0x138)) ^ 0x3B284312 ^ *(_DWORD *)(v31 + 4 * (LODWORD(STACK[0x64B0]) ^ 0xE5u));
  LODWORD(STACK[0x6380]) = -2052653464
                         - ((BYTE2(v9) - 1080494731) ^ BYTE2(v9))
                         + *(_DWORD *)(v29 + 4 * (BYTE2(v9) ^ 0xFFu));
  v32 = STACK[0x6A40];
  v33 = *(_DWORD *)(STACK[0x6A40] + 4 * v9) - 1607106390;
  LODWORD(STACK[0x6378]) = v33 ^ LODWORD(STACK[0x15FC]) ^ (4 * v33 * v33);
  LODWORD(STACK[0x6770]) = LODWORD(STACK[0x6450]) ^ 0x3F7B7413 ^ *(_DWORD *)(v26 + 4
                                                                                 * (LODWORD(STACK[0x6450]) ^ 0xA2u));
  v34 = STACK[0x6468];
  v35 = HIWORD(LODWORD(STACK[0x6468])) ^ 0x93;
  LODWORD(STACK[0x64B0]) = (((unsigned __int16)(LODWORD(STACK[0x6468]) ^ 0x876C) >> 8)
                          - 1621172836
                          - (((LODWORD(STACK[0x6468]) ^ 0x5393876Cu) >> 7) & 0x138)) ^ 0xF1FC7CAB ^ *(_DWORD *)(v31 + 4 * (((unsigned __int16)(LODWORD(STACK[0x6468]) ^ 0x876C) >> 8) ^ 0x26u));
  LODWORD(STACK[0x6760]) = -2052653464
                         - ((((2 * (LODWORD(STACK[0x6470]) ^ 0xBD)) & 0xEA) + (LODWORD(STACK[0x6470]) ^ 0xBF98F5C8)) ^ LODWORD(STACK[0x6470]) ^ 0xBD)
                         + *(_DWORD *)(v29 + 4 * (LODWORD(STACK[0x6470]) ^ 0x42u));
  v36 = LODWORD(STACK[0x6478]) ^ 0x48F2DDCD;
  v37 = *(_DWORD *)(v32 + 4 * (LOBYTE(STACK[0x6478]) ^ 0xCDu)) - 1607106390;
  LODWORD(STACK[0x64A0]) = v37 ^ (4 * v37 * v37);
  v38 = LODWORD(STACK[0x6310]) ^ 0xFC2530DF;
  LODWORD(STACK[0x6318]) = -2052653464
                         - ((HIBYTE(v38) - 1080494731) ^ HIBYTE(v38))
                         + *(_DWORD *)(v29 + 4 * (HIBYTE(v38) ^ 0xFF));
  v39 = *(_DWORD *)(v32 + 4 * HIBYTE(v36)) - 1607106390;
  LODWORD(STACK[0x6478]) = v39 ^ (4 * v39 * v39);
  v40 = *(_DWORD *)(v32 + 4 * (LODWORD(STACK[0x6460]) ^ 0x88u)) - 1607106390;
  LODWORD(STACK[0x64A8]) = v40 ^ 0x818639C7 ^ (4 * v40 * v40);
  LODWORD(STACK[0x6310]) = v38 ^ 0x28DE07F8 ^ *(_DWORD *)(v26
                                                                         + 4
                                                                         * (v38
                                                                          - ((2 * v38) & 0x82)
                                                                          + 65));
  LODWORD(STACK[0x6480]) ^= 0x6CB444BF ^ *(_DWORD *)(v26 + 4 * (LODWORD(STACK[0x6480]) ^ 0x6Au));
  LODWORD(STACK[0x6470]) = ((v34 ^ 0x5393876C) & 6 | 0xE6ED1150) ^ ((v34 ^ 0x5393876C) & 0xF9 | 0xDB57BB06) ^ *(_DWORD *)(v26 + 4 * (v34 ^ 0x2Du));
  v41 = *(_DWORD *)(v32 + 4 * BYTE1(v36));
  LODWORD(STACK[0x6460]) = ((v34 ^ 0x5393876Cu) >> 24) ^ 0x6B7FFA5 ^ *(_DWORD *)(v26
                                                                               + 4
                                                                               * (((v34 ^ 0x5393876Cu) >> 24) ^ 0x41));
  LODWORD(STACK[0x6468]) = 4 * (v41 - 1607106390) * (v41 - 1607106390)
                         + v41
                         - 1607106390
                         - 2 * ((4 * (v41 - 1607106390) * (v41 - 1607106390)) & (v41 - 1607106390));
  v42 = BYTE2(v36);
  LODWORD(STACK[0x6450]) = BYTE2(v36) - 1621172836 - ((v36 >> 15) & 0x138);
  LODWORD(STACK[0x6308]) = (BYTE1(v38) - 1621172836 - ((v38 >> 7) & 0x138)) ^ 0x8A682542 ^ *(_DWORD *)(v31 + 4 * (BYTE1(v38) ^ 0x26u));
  LODWORD(STACK[0x64B8]) = -2052653464
                         - (((LODWORD(STACK[0x64B8]) ^ 0x7B) - 1080494731) ^ LODWORD(STACK[0x64B8]) ^ 0x7B)
                         + *(_DWORD *)(v29 + 4 * (LODWORD(STACK[0x64B8]) ^ 0x84u));
  v43 = STACK[0x64E8];
  v44 = (((v43 ^ 0x55AC6A9Bu) >> 24) - 1621172836 - (((v43 ^ 0x55AC6A9Bu) >> 23) & 0x138)) ^ 0x61F8C18C ^ *(_DWORD *)(v31 + 4 * (((v43 ^ 0x55AC6A9Bu) >> 24) ^ 0x26));
  v45 = STACK[0x6780];
  LODWORD(STACK[0x6300]) = -2052653464
                         - ((((LODWORD(STACK[0x6780]) ^ 0xD77F4785) >> 16) - 1080494731) ^ ((LODWORD(STACK[0x6780]) ^ 0xD77F4785) >> 16))
                         + *(_DWORD *)(v29
                                     + 4 * (((LODWORD(STACK[0x6780]) ^ 0xD77F4785) >> 16) ^ 0xFFu));
  v46 = STACK[0x6328];
  LODWORD(STACK[0x6370]) = -2052653464
                         - ((((LODWORD(STACK[0x6328]) ^ 0x3312D99Cu) >> 16) - 1080494731) ^ ((LODWORD(STACK[0x6328]) ^ 0x3312D99Cu) >> 16))
                         + *(_DWORD *)(v29
                                     + 4 * (((LODWORD(STACK[0x6328]) ^ 0x3312D99Cu) >> 16) ^ 0xFFu));
  v47 = *(_DWORD *)(v32 + 4 * (BYTE2(v43) ^ 0x66u)) - 1607106390;
  v48 = v47 ^ __ROR4__(v44, 24) ^ (4 * v47 * v47);
  v49 = *(_DWORD *)(v32 + 4 * ((unsigned __int16)(v45 ^ 0x4785) >> 8)) - 1607106390;
  LODWORD(STACK[0x62F8]) = v49 ^ 0xF7FE9D36 ^ (4 * v49 * v49);
  v50 = LODWORD(STACK[0x64C8]) ^ 0xDB57BB4B ^ *(_DWORD *)(v26 + 4 * (LODWORD(STACK[0x64C8]) ^ 0xCu));
  LODWORD(STACK[0x64C8]) = v50 - ((2 * v50) & 0x5253853A);
  LODWORD(STACK[0x64C0]) = -2052653464
                         - (((LODWORD(STACK[0x64C0]) ^ 0x3C) - 1080494731) ^ LODWORD(STACK[0x64C0]) ^ 0x3C)
                         + *(_DWORD *)(v29 + 4 * (LODWORD(STACK[0x64C0]) ^ 0xC3u));
  HIDWORD(v51) = v48;
  LODWORD(v51) = v48;
  LODWORD(STACK[0x64E8]) = (v51 >> 14) ^ __ROR4__((-2052653464- (((v43 ^ 0x9B) - 1080494731) ^ v43 ^ 0x9B)+ *(_DWORD *)(v29 + 4 * (v43 ^ 0x64u))) ^ 0xE8F0A63, 30);
  v52 = (((v45 ^ 0xD77F4785) >> 24) - 1621172836 + (~((v45 ^ 0xD77F4785) >> 23) | 0xFFFFFEC7) + 1) ^ 0xF0835CB ^ *(_DWORD *)(v31 + 4 * (((v45 ^ 0xD77F4785) >> 24) ^ 0x26));
  v53 = ((unsigned __int16)(v43 ^ 0x6A9B) >> 8);
  v54 = *(_DWORD *)(v31 + 4 * (v53 ^ 0x26u));
  v55 = (v54 & 0x180C0044 ^ 0x6096C007) + (v54 & 0x6612610) - 1;
  v53 ^= 0xDF9584F6;
  v56 = v53 & 0x14000454 ^ 0x144D4300 ^ ((v55 & 0xA002610 ^ 0x4711) + (v55 & 0x146D0044) - 1);
  v57 = v53 & 0x819080AB ^ 0x324E40CF ^ (-434678399
                                       - (v54 & 0xE192D9AB ^ 0xEAB43339 | 0xE6175581)
                                       + (v54 & 0xE192D9AB ^ 0xEAB43339 | LODWORD(STACK[0x1600])));
  LODWORD(STACK[0x6330]) = ((v56 | v57) >> (v57 & 8) >> (v57 & 8 ^ 8)) + ((v56 | v57) << 24);
  LODWORD(STACK[0x6328]) = ((v46 ^ 0x9C) - 1621172836 - 2 * ((v46 ^ 0x3312D99C) & 0x9F ^ v46 & 3)) ^ 0x476D2829 ^ *(_DWORD *)(v31 + 4 * (v46 ^ 0xBAu));
  v58 = *(_DWORD *)(v32 + 4 * (LODWORD(STACK[0x64D8]) ^ 0x99u)) - 1607106390;
  LODWORD(STACK[0x6320]) = v58 ^ (4 * v58 * v58);
  LODWORD(STACK[0x64D8]) = -2052653464
                         - ((((v46 ^ 0x3312D99Cu) >> 24) - 1080494731) ^ ((v46 ^ 0x3312D99Cu) >> 24))
                         + *(_DWORD *)(v29 + 4 * (((v46 ^ 0x3312D99Cu) >> 24) ^ 0xFF));
  v59 = *(_DWORD *)(v26 + 4 * (v45 ^ 0xC4u)) ^ v45 ^ 0x85;
  LODWORD(STACK[0x6780]) = ((unsigned __int16)(v46 ^ 0xD99C) >> 8) ^ LODWORD(STACK[0x1604]) ^ *(_DWORD *)(v26 + 4 * (((unsigned __int16)(v46 ^ 0xD99C) >> 8) ^ 0x41u));
  v60 = v59 ^ 0xDB57BB06 ^ -(v59 ^ 0xDB57BB06) ^ ((v59 ^ 0x68AF1EEB) + 1275550227);
  v61 = STACK[0x64E0];
  v62 = LODWORD(STACK[0x64E0]) ^ 0x794E79F5;
  v63 = -2052653464
      - ((((unsigned __int16)(v61 ^ 0x79F5) >> 8) - 1080494731) ^ ((unsigned __int16)(v61 ^ 0x79F5) >> 8))
      + *(_DWORD *)(v29 + 4 * (((unsigned __int16)(v61 ^ 0x79F5) >> 8) ^ 0xFFu));
  v64 = STACK[0x63C0];
  v65 = LODWORD(STACK[0x63C0]) ^ 0xBC44D383;
  v66 = *(_DWORD *)(v31 + 4 * (HIBYTE(v65) ^ 0x26)) ^ 0x3E577E90;
  v67 = *(_DWORD *)(v26 + 4 * (LODWORD(STACK[0x64E0]) ^ 0xB4u));
  LODWORD(STACK[0x64E0]) = (HIBYTE(v65) ^ 0x487D8F11 ^ -(HIBYTE(v65) ^ 0x487D8F11) ^ (v66
                                                                                    - (((HIBYTE(v65) ^ 0x487D8F11)
                                                                                      - (v66 & 0x200)) ^ v66 & 0xFFFFFDFF)))
                         + v66;
  v68 = *(_DWORD *)(v31 + 4 * (((v61 ^ 0x794E79F5u) >> 16) ^ 0x26u)) ^ (((v61 ^ 0x794E79F5u) >> 16)
                                                                                         - 1621172836
                                                                                         - (((v61 ^ 0x794E79F5u) >> 15) & 0x138)) ^ __ROR4__(v63 ^ 0xFBA52FCB, 8) ^ __ROR4__(v61 ^ 0x85E57E09 ^ v67, 16);
  v69 = LODWORD(STACK[0x64F0]) ^ 0xD53D66F1;
  v70 = LODWORD(STACK[0x64F0]) ^ 0x5958264 ^ *(_DWORD *)(v26
                                                                        + 4
                                                                        * (LODWORD(STACK[0x64F0]) ^ 0xB0u));
  LODWORD(STACK[0x64F0]) = -2052653464
                         - (((LODWORD(STACK[0x64D0]) ^ 0x2C) - 1080494731) ^ LODWORD(STACK[0x64D0]) ^ 0x2C)
                         + *(_DWORD *)(v29 + 4 * (LODWORD(STACK[0x64D0]) ^ 0xD3u));
  v71 = *(_DWORD *)(v32 + 4 * BYTE2(v38));
  LODWORD(STACK[0x67C0]) = -2052653464
                         - (((v64 ^ 0x83) - 1080494731) ^ v64 ^ 0x83)
                         + *(_DWORD *)(v29 + 4 * (v64 ^ 0x7Cu));
  v72 = *(_DWORD *)(v32 + 4 * (LODWORD(STACK[0x64F8]) ^ 0x3Du));
  v73 = *(_DWORD *)(v31 + 4 * (HIBYTE(v69) ^ 0x26));
  HIDWORD(v51) = v73 ^ (HIBYTE(v69) + 6216192 - ((v69 >> 23) & 0x138) + 924);
  LODWORD(v51) = v73 ^ 0x9FFFFFFF;
  v74 = v51 >> 24;
  LODWORD(STACK[0x63C0]) = (v72 - 1607106390) ^ (4 * (v72 - 1607106390) * (v72 - 1607106390));
  v75 = HIBYTE(v62) ^ 0xA783D82F ^ *(_DWORD *)(v26 + 4 * (HIBYTE(v62) ^ 0x41));
  v76 = BYTE2(v30);
  v77 = *(_DWORD *)(v26 + 4 * (BYTE2(v30) ^ 0x16u));
  LODWORD(STACK[0x64D0]) = v35;
  LODWORD(STACK[0x6A40]) = *(_DWORD *)(v26 + 4 * (v35 ^ 0x41u));
  v78 = STACK[0x65B8];
  LODWORD(STACK[0x62F0]) = *(_DWORD *)(v26 + 4 * (LODWORD(STACK[0x65B8]) ^ 0xB9u));
  v79 = BYTE2(v69);
  v80 = *(_DWORD *)(v26 + 4 * (BYTE2(v69) ^ 0x41u));
  v81 = BYTE1(v69) ^ 0x4ED2E247 ^ *(_DWORD *)(v26 + 4 * (BYTE1(v69) ^ 0x41u));
  v82 = STACK[0x6598];
  HIDWORD(v51) = v75;
  LODWORD(v51) = v75;
  v83 = v51 >> 24;
  v84 = v68 & 0x2000000;
  if ((v83 & v68 & 0x2000000) != 0)
    v84 = -v84;
  LODWORD(STACK[0x6360]) = v84 + v83;
  LODWORD(STACK[0x6598]) = (v82 - 1621172836 - ((2 * v82) & 0x138)) ^ 0x86677BD8 ^ *(_DWORD *)(v31 + 4 * (v82 ^ 0x32u));
  v85 = LODWORD(STACK[0x67A0]) - 652399471 + ~(STACK[0x65C0] & 0x537630A6);
  LODWORD(STACK[0x6A50]) = *(_DWORD *)(v31 + 4 * (v42 ^ 0x26u));
  v86 = *(_DWORD *)(v31 + 4 * (BYTE1(v65) ^ 0x26u));
  LODWORD(STACK[0x67A0]) = *(_DWORD *)(v31 + 4 * (BYTE2(v65) ^ 0x26u));
  LODWORD(STACK[0x62E8]) = BYTE2(v65) - 1621172836 - ((v65 >> 15) & 0x138);
  LODWORD(STACK[0x65C0]) = (BYTE1(v65) - 1621172836 - ((v65 >> 7) & 0x138)) ^ 0x86677BCC ^ v86;
  v87 = (((2 * (STACK[0x67D0] & 0xFFFFFFF7 ^ 0x7E279586)) | 0xA01E78A2)
       - (STACK[0x67D0] & 0xFFFFFFF7 ^ 0x7E279586)
       - 1343175761) ^ 0x5A5FBC53;
  v88 = (v87 | 0x56FA9443) - (v87 | 0xA9056BBC);
  v89 = ((((LODWORD(STACK[0x67D0]) | 0xFFFFFFF7) - 1194375877) ^ 0x81B718E7) - 1224564511) ^ 0xF07AFEBE;
  v90 = LODWORD(STACK[0x6358]) ^ 0xDB57BB4E ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x6340]) ^ LODWORD(STACK[0x6348]);
  v91 = __ROR4__(STACK[0x6338], 16);
  v92 = STACK[0x6940];
  v93 = (v90 ^ v91) + v92 - 2 * ((v90 ^ v91) & v92);
  v94 = LODWORD(STACK[0x66C0]) + LODWORD(STACK[0x63F0]) - 2 * (STACK[0x66C0] & LODWORD(STACK[0x63F0]));
  v95 = STACK[0x6940];
  v96 = v94 + v92 - 2 * (v94 & v92);
  v97 = v79 ^ LODWORD(STACK[0x1608]) ^ LODWORD(STACK[0x66C0]);
  v98 = STACK[0x66C0];
  v99 = v97 ^ __ROR4__(v70, 16) ^ v80 ^ v74 ^ __ROR4__(v81, 8);
  HIDWORD(v100) = STACK[0x6AB0];
  LODWORD(v100) = STACK[0x6AB0];
  v101 = STACK[0x6AB0];
  v102 = (v100 >> 29) ^ __ROR4__(v99, 29);
  v103 = STACK[0x6610];
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x6660]) ^ LODWORD(STACK[0x6610]) ^ LODWORD(STACK[0x6648]);
  v104 = STACK[0x6640];
  v105 = STACK[0x6630];
  v106 = LODWORD(STACK[0x6630]) ^ LODWORD(STACK[0x6300]) ^ 0xB2763145 ^ __ROR4__(STACK[0x62F8], 8) ^ __ROR4__(v52, 24) ^ __ROR4__(v60 + 1275550226, 16);
  v107 = LODWORD(STACK[0x6640]) ^ __ROR4__(LODWORD(STACK[0x6318]) ^ 0x9A78F832, 24) ^ __ROR4__(STACK[0x6310], 16) ^ (v71 - 1607106390) ^ (4 * (v71 - 1607106390) * (v71 - 1607106390)) ^ __ROR4__(STACK[0x6308], 8) ^ 0x5CBECECE;
  v108 = (v106 - v107) ^ LODWORD(STACK[0x65F0]);
  v109 = LODWORD(STACK[0x6A10]) ^ 0xFAA2B435 ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x67B0]);
  if ((STACK[0x6A10] & v89) != 0)
    v110 = -v89;
  else
    v110 = v89;
  v111 = (v88 - 1459262532) ^ LODWORD(STACK[0x160C]) ^ LODWORD(STACK[0x6850]) ^ (v110 + LODWORD(STACK[0x6A10]));
  v112 = LODWORD(STACK[0x6A70]) ^ 0x474394AE ^ LODWORD(STACK[0x6850]) ^ v85;
  v113 = STACK[0x6638];
  v114 = LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x6388]) ^ 0x97FB6D1D;
  v115 = (LODWORD(STACK[0x6368]) ^ (v106 - v107)) - v114;
  v116 = (v115 & 1) == 0;
  v117 = v115;
  LODWORD(STACK[0x64F8]) = v115;
  v118 = STACK[0x66E8];
  v119 = v111 ^ LODWORD(STACK[0x66E8]);
  v120 = STACK[0x65D0];
  if (v116)
    v121 = STACK[0x65D0];
  else
    v121 = v109;
  if (!v116)
    v109 = v119;
  LODWORD(STACK[0x6A70]) = v109;
  if (!v116)
    v119 = v112 ^ v118;
  LODWORD(STACK[0x6A60]) = v119;
  if (v116)
    v122 = v112 ^ v118;
  else
    v122 = v120;
  LODWORD(STACK[0x67D0]) = v122;
  v123 = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x6398]) ^ 0x70571657;
  v124 = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x63A0]) ^ 0xD5907EAB;
  v125 = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x63A8]) ^ 0x131FF37B;
  v126 = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x63C8]) ^ 0x6EEDD731;
  if (v116)
    v127 = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x6398]) ^ 0x70571657;
  else
    v127 = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x63A0]) ^ 0xD5907EAB;
  LODWORD(STACK[0x65E8]) = v127;
  if (!v116)
    v124 = v125;
  LODWORD(STACK[0x67B0]) = v124;
  if (v116)
    v128 = v125;
  else
    v128 = v126;
  LODWORD(STACK[0x65D0]) = v128;
  if (v116)
    v123 = v126;
  LODWORD(STACK[0x6648]) = v123;
  v129 = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x63D0]) ^ 0x528CB669;
  v130 = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x6418]) ^ 0xB948BED4 ^ LODWORD(STACK[0x6428]) ^ LODWORD(STACK[0x6400]) ^ LODWORD(STACK[0x63E8]);
  v131 = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x65D8]) ^ 0x73E08F34;
  v132 = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x63F8]) ^ 0xDDD169BE;
  if (v116)
    v133 = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x6418]) ^ 0xB948BED4 ^ LODWORD(STACK[0x6428]) ^ LODWORD(STACK[0x6400]) ^ LODWORD(STACK[0x63E8]);
  else
    v133 = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x63D0]) ^ 0x528CB669;
  LODWORD(STACK[0x6600]) = v133;
  if (!v116)
    v129 = v131;
  LODWORD(STACK[0x65D8]) = v129;
  if (v116)
    v130 = v132;
  LODWORD(STACK[0x6418]) = v130;
  if (v116)
    v134 = v131;
  else
    v134 = v132;
  LODWORD(STACK[0x6428]) = v134;
  v135 = v76 ^ LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x6410]) ^ v95 ^ __ROR4__(STACK[0x63E0], 8) ^ __ROR4__(STACK[0x63B8], 16) ^ v77 ^ 0x2F954C9F;
  v136 = LODWORD(STACK[0x6680]) ^ 0xA6EE643C ^ v93;
  v137 = LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x6440]) ^ __ROR4__(LODWORD(STACK[0x6488]) ^ 0x33B0CE40, 16) ^ __ROR4__(LODWORD(STACK[0x63D8]) ^ 0x9F6814D2, 24) ^ __ROR4__(STACK[0x6430], 8);
  v138 = v105 ^ __ROR4__(LODWORD(STACK[0x64B8]) ^ 0xF3593E33, 24) ^ LODWORD(STACK[0x64C0]) ^ __ROR4__(LODWORD(STACK[0x64C8])+ 690602653, 8) ^ __ROR4__(LODWORD(STACK[0x6320]) ^ 0x754FBFF9, 16);
  v139 = v105 ^ __ROR4__(LODWORD(STACK[0x64E8]) ^ 0x1D846289, 18) ^ LODWORD(STACK[0x6330]) ^ 0x46C14CDF;
  v140 = LODWORD(STACK[0x65F8]) ^ __ROR4__(STACK[0x63B0], 8) ^ __ROR4__(STACK[0x6390], 24) ^ LODWORD(STACK[0x6380]) ^ __ROR4__(STACK[0x6378], 16) ^ 0x7AAC0942;
  if (v116)
    v141 = v135;
  else
    v141 = v140;
  LODWORD(STACK[0x65F8]) = v141;
  if (v116)
    v135 = v136;
  LODWORD(STACK[0x64C0]) = v135;
  v142 = v137 ^ 0x2C2739B5;
  if (!v116)
    v140 = v137 ^ 0x2C2739B5;
  LODWORD(STACK[0x64B8]) = v140;
  if (!v116)
    v142 = v136;
  LODWORD(STACK[0x64E8]) = v142;
  v143 = v138 ^ 0x8187754E;
  v144 = v105 ^ LODWORD(STACK[0x6370]) ^ __ROR4__(STACK[0x6328], 16) ^ __ROR4__(LODWORD(STACK[0x64D8]) ^ 0xD6EEAAA6, 24) ^ __ROR4__(STACK[0x6780], 8) ^ 0xAAFE61F3;
  if (v116)
    v145 = v139;
  else
    v145 = v138 ^ 0x8187754E;
  LODWORD(STACK[0x6780]) = v145;
  if (v116)
    v146 = v144;
  else
    v146 = v139;
  LODWORD(STACK[0x6430]) = v146;
  if (!v116)
    v143 = v106;
  LODWORD(STACK[0x6440]) = v143;
  if (v116)
    v144 = v106;
  LODWORD(STACK[0x6488]) = v144;
  v147 = v113 ^ LODWORD(STACK[0x65A0]) ^ 0x5DAB3C8E;
  v148 = v113 ^ LODWORD(STACK[0x1610]) ^ LODWORD(STACK[0x6408]) ^ LODWORD(STACK[0x6458]);
  LODWORD(STACK[0x65F0]) = v108 - v114;
  v149 = v96 ^ 0x79FF0B8D;
  if (v116)
    v150 = v114;
  else
    v150 = v149;
  LODWORD(STACK[0x6458]) = v150;
  if (!v116)
    v149 = v147;
  LODWORD(STACK[0x6638]) = v149;
  if (v116)
    v151 = v148;
  else
    v151 = v114;
  LODWORD(STACK[0x6410]) = v151;
  if (v116)
    v152 = v147;
  else
    v152 = v148;
  v153 = LODWORD(STACK[0x62E8]) ^ 0x880A6BF3 ^ v101 ^ v98 ^ __ROR4__(LODWORD(STACK[0x67C0]) ^ 0x16075AD5, 16) ^ __ROR4__(STACK[0x64E0], 24) ^ LODWORD(STACK[0x67A0]) ^ __ROR4__(STACK[0x65C0], 8);
  v154 = LODWORD(STACK[0x6608]) ^ v68 & 0xFDFFFFFF ^ LODWORD(STACK[0x6360]) ^ 0x4ED10A50;
  v155 = LODWORD(STACK[0x6608]) ^ v78 ^ LODWORD(STACK[0x62F0]) ^ __ROR4__(LODWORD(STACK[0x64F0]) ^ 0x4FF5A5EF, 8) ^ __ROR4__(LODWORD(STACK[0x63C0]) ^ 0xF53F4390, 16) ^ __ROR4__(STACK[0x6598], 24) ^ 0x2E7203C;
  v156 = __ROR4__(v102 ^ 0x47C517B2, 3) ^ 0x50426AD1;
  if (v116)
    v157 = v156;
  else
    v157 = v155;
  if (v116)
    v158 = v153;
  else
    v158 = v156;
  if (v116)
    v159 = v154;
  else
    v159 = v153;
  if (v116)
    v160 = v155;
  else
    v160 = v154;
  v161 = v95 ^ LODWORD(STACK[0x64D0]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A40]) ^ __ROR4__(STACK[0x64B0], 8) ^ __ROR4__(STACK[0x6470], 16) ^ __ROR4__(STACK[0x6460], 24);
  v162 = v95 ^ LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x6A20]) ^ __ROR4__(LODWORD(STACK[0x64A0]) ^ 0x3125FC95, 16) ^ __ROR4__(LODWORD(STACK[0x6478]) ^ 0x91F27889, 24) ^ LODWORD(STACK[0x6A50]) ^ __ROR4__(LODWORD(STACK[0x6468]) ^ 0xD47B9873, 8);
  v163 = v104 ^ LODWORD(STACK[0x1618]) ^ __ROR4__(STACK[0x6770], 8) ^ LODWORD(STACK[0x6760]) ^ __ROR4__(STACK[0x6480], 16) ^ __ROR4__(STACK[0x64A8], 24);
  if (v116)
    v164 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x6650]) ^ 0x21F3DD7;
  else
    v164 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x65A8]) ^ 0xA258B165;
  if (v116)
    v165 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x65A8]) ^ 0xA258B165;
  else
    v165 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x1614]) ^ LODWORD(STACK[0x6490]) ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x6420]) ^ LODWORD(STACK[0x6438]);
  if (v116)
    v166 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x1614]) ^ LODWORD(STACK[0x6490]) ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x6420]) ^ LODWORD(STACK[0x6438]);
  else
    v166 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x65C8]) ^ 0xEE9332;
  if (v116)
    v167 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x65C8]) ^ 0xEE9332;
  else
    v167 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x6650]) ^ 0x21F3DD7;
  v168 = v162 ^ 0x339DE952;
  if (v116)
    v169 = v161 ^ 0x66C030E6;
  else
    v169 = v107;
  if (v116)
    v170 = v168;
  else
    v170 = v161 ^ 0x66C030E6;
  if (v116)
  {
    v171 = v163;
  }
  else
  {
    v107 = v163;
    v171 = v168;
  }
  v172 = LODWORD(STACK[0x6790]) ^ v103;
  v173 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6658]) ^ 0x184288EB ^ LODWORD(STACK[0x65E0]);
  v174 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6668]) ^ 0x56257494;
  v175 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6670]) ^ 0x8E103822;
  if (v116)
    v176 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6658]) ^ 0x184288EB ^ LODWORD(STACK[0x65E0]);
  else
    v176 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6668]) ^ 0x56257494;
  if (v116)
  {
    v173 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6AC0]) ^ 0x850AB0C8;
  }
  else
  {
    v174 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6670]) ^ 0x8E103822;
    v175 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6AC0]) ^ 0x850AB0C8;
  }
  v177 = LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x65B0]) ^ LODWORD(STACK[0x6790]) ^ 0xCDFC4107;
  v178 = LODWORD(STACK[0x6710]) ^ 0x52D23761;
  v179 = v178 ^ v172;
  v180 = v178 ^ LODWORD(STACK[0x6A30]);
  v181 = v172 ^ LODWORD(STACK[0x6A30]);
  if (v116)
    v182 = LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6660]) ^ 0x668AA9C6;
  else
    v182 = v180;
  if (v116)
    v183 = LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x65B0]) ^ LODWORD(STACK[0x6790]) ^ 0xCDFC4107;
  else
    v183 = LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6660]) ^ 0x668AA9C6;
  if (v116)
    v177 = v179;
  else
    v181 = 0;
  LODWORD(STACK[0x6650]) = v117 + 843084454;
  v184 = ((v117 + 843084454) & 2) == 0;
  v185 = STACK[0x6A70];
  v186 = STACK[0x67D0];
  if (((v117 + 843084454) & 2) != 0)
    v187 = STACK[0x6A70];
  else
    v187 = STACK[0x67D0];
  LODWORD(STACK[0x6668]) = v187;
  if (((v117 + 843084454) & 2) != 0)
    v185 = v186;
  LODWORD(STACK[0x6660]) = v185;
  v188 = STACK[0x6A60];
  if (((v117 + 843084454) & 2) != 0)
    v189 = STACK[0x6A60];
  else
    v189 = v121;
  LODWORD(STACK[0x67A0]) = v189;
  if (((v117 + 843084454) & 2) != 0)
    v190 = v121;
  else
    v190 = v188;
  v191 = STACK[0x65E8];
  v192 = STACK[0x65D0];
  if (((v117 + 843084454) & 2) != 0)
    v193 = STACK[0x65D0];
  else
    v193 = STACK[0x65E8];
  LODWORD(STACK[0x6630]) = v193;
  if (((v117 + 843084454) & 2) != 0)
    v194 = v191;
  else
    v194 = v192;
  v195 = STACK[0x67B0];
  if (v184)
    v196 = STACK[0x67B0];
  else
    v196 = STACK[0x6648];
  if (v184)
    v195 = STACK[0x6648];
  LODWORD(STACK[0x6AC0]) = v195;
  v197 = STACK[0x65D8];
  v198 = STACK[0x6418];
  if (v184)
    v199 = STACK[0x6418];
  else
    v199 = STACK[0x65D8];
  LODWORD(STACK[0x6A30]) = v199;
  if (!v184)
    v197 = v198;
  LODWORD(STACK[0x65E8]) = v197;
  v200 = STACK[0x6600];
  v201 = STACK[0x6428];
  if (v184)
    v202 = STACK[0x6600];
  else
    v202 = STACK[0x6428];
  LODWORD(STACK[0x65A0]) = v202;
  if (v184)
    v200 = v201;
  LODWORD(STACK[0x6620]) = v200;
  v203 = STACK[0x64C0];
  v204 = STACK[0x64B8];
  if (v184)
    v205 = STACK[0x64C0];
  else
    v205 = STACK[0x64B8];
  LODWORD(STACK[0x67B0]) = v205;
  if (v184)
    v203 = v204;
  LODWORD(STACK[0x6770]) = v203;
  v206 = STACK[0x65F8];
  v207 = STACK[0x64E8];
  if (v184)
    v208 = STACK[0x64E8];
  else
    v208 = STACK[0x65F8];
  LODWORD(STACK[0x67D0]) = v208;
  if (v184)
    v209 = v206;
  else
    v209 = v207;
  LODWORD(STACK[0x6618]) = v209;
  v210 = STACK[0x6440];
  v211 = STACK[0x6430];
  if (v184)
    v212 = STACK[0x6440];
  else
    v212 = STACK[0x6430];
  LODWORD(STACK[0x6628]) = v212;
  if (v184)
    v213 = v211;
  else
    v213 = v210;
  LODWORD(STACK[0x65B0]) = v213;
  v214 = STACK[0x6780];
  v215 = STACK[0x6488];
  if (v184)
    v216 = STACK[0x6780];
  else
    v216 = STACK[0x6488];
  LODWORD(STACK[0x6598]) = v216;
  if (v184)
    v214 = v215;
  LODWORD(STACK[0x6608]) = v214;
  v217 = STACK[0x6458];
  if (v184)
    v218 = STACK[0x6458];
  else
    v218 = v152;
  LODWORD(STACK[0x6610]) = v218;
  if (v184)
    v219 = v152;
  else
    v219 = v217;
  LODWORD(STACK[0x67C0]) = v219;
  v220 = STACK[0x6638];
  v221 = STACK[0x6410];
  if (v184)
    v222 = STACK[0x6638];
  else
    v222 = STACK[0x6410];
  LODWORD(STACK[0x6A50]) = v222;
  if (v184)
    v220 = v221;
  LODWORD(STACK[0x6780]) = v220;
  if (v184)
    v223 = v159;
  else
    v223 = v157;
  LODWORD(STACK[0x65D8]) = v223;
  if (v184)
    v224 = v157;
  else
    v224 = v159;
  LODWORD(STACK[0x6648]) = v224;
  if (v184)
    v225 = v158;
  else
    v225 = v160;
  LODWORD(STACK[0x6638]) = v225;
  if (v184)
    v226 = v160;
  else
    v226 = v158;
  LODWORD(STACK[0x6640]) = v226;
  if (v184)
    v227 = v164;
  else
    v227 = v166;
  LODWORD(STACK[0x64E8]) = v227;
  if (v184)
    v228 = v166;
  else
    v228 = v164;
  LODWORD(STACK[0x6760]) = v228;
  if (v184)
    v229 = v167;
  else
    v229 = v165;
  LODWORD(STACK[0x6790]) = v229;
  if (v184)
    v230 = v165;
  else
    v230 = v167;
  LODWORD(STACK[0x65B8]) = v230;
  if (v184)
    v231 = v169;
  else
    v231 = v171;
  LODWORD(STACK[0x65C0]) = v231;
  if (v184)
    v232 = v171;
  else
    v232 = v169;
  LODWORD(STACK[0x6A70]) = v232;
  if (v184)
    v233 = v170;
  else
    v233 = v107;
  LODWORD(STACK[0x6A40]) = v233;
  if (v184)
    v234 = v107;
  else
    v234 = v170;
  LODWORD(STACK[0x6600]) = v234;
  if (v184)
    v235 = v175;
  else
    v235 = v176;
  LODWORD(STACK[0x65A8]) = v235;
  if (!v184)
    v176 = v175;
  LODWORD(STACK[0x65E0]) = v176;
  if (v184)
    v236 = v174;
  else
    v236 = v173;
  LODWORD(STACK[0x6A60]) = v236;
  if (v184)
    v237 = v173;
  else
    v237 = v174;
  LODWORD(STACK[0x64E0]) = v237;
  v238 = v181 ^ v179;
  if (v184)
    v239 = v183;
  else
    v239 = v238;
  LODWORD(STACK[0x6670]) = v239;
  if (v184)
    v183 = v238;
  LODWORD(STACK[0x65F8]) = v183;
  if (v184)
    v240 = v177;
  else
    v240 = v182;
  LODWORD(STACK[0x65D0]) = v240;
  if (v184)
    v241 = v182;
  else
    v241 = v177;
  LODWORD(STACK[0x65C8]) = v241;
  v242 = STACK[0x6910];
  v243 = STACK[0x66F8];
  v244 = STACK[0x66A0];
  v245 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x66B0]);
  v246 = STACK[0x66F0];
  v247 = LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6820]);
  v248 = STACK[0x66E0];
  HIDWORD(v249) = STACK[0x6870];
  LODWORD(v249) = STACK[0x6870];
  v250 = (v249 >> 9) ^ __ROR4__(LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x66F8]) ^ v245 ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x6860]) ^ LODWORD(STACK[0x69C0]) ^ v247 ^ LODWORD(STACK[0x66E0]), 9);
  v251 = LODWORD(STACK[0x6688]) ^ LODWORD(STACK[0x69A0]);
  v252 = LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6830]);
  LODWORD(STACK[0x64C0]) = v252;
  v253 = STACK[0x6840];
  v254 = STACK[0x6690];
  v255 = v251 ^ v252 ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x68D0]);
  v256 = STACK[0x66D0];
  v257 = STACK[0x66A8];
  v258 = STACK[0x66C8];
  v259 = STACK[0x66D8];
  v260 = LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x66D0]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x66D8]);
  LODWORD(STACK[0x64B8]) = v260;
  v261 = STACK[0x6920];
  v262 = STACK[0x6990];
  v263 = STACK[0x6950];
  v264 = STACK[0x68E0];
  v265 = v255 ^ v260 ^ LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x68E0]) ^ __ROR4__(v250 ^ 0x3DB548B4, 23) ^ 0x6A91687B;
  v266 = STACK[0x6698];
  v267 = STACK[0x6980];
  v268 = STACK[0x68F0];
  v269 = LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x67F0]) ^ LODWORD(STACK[0x68F0]) ^ (v265 + v266 - 2 * (v265 & v266));
  LODWORD(STACK[0x6658]) = v269;
  v270 = v243 ^ v244 ^ v245 ^ v247;
  v271 = v190;
  LODWORD(STACK[0x64D0]) = v190;
  v272 = STACK[0x6660];
  v273 = v248 ^ v190 ^ LODWORD(STACK[0x6660]);
  v274 = STACK[0x6668];
  v275 = v270 ^ v273 ^ LODWORD(STACK[0x6668]);
  v276 = STACK[0x6630];
  v277 = LODWORD(STACK[0x67A0]) ^ LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x64C8]) = v196;
  LODWORD(STACK[0x64D8]) = v194;
  v278 = STACK[0x6AC0];
  HIDWORD(v249) = STACK[0x6A80];
  LODWORD(v249) = STACK[0x6A80];
  LODWORD(STACK[0x64F0]) = (v249 >> 11) ^ __ROR4__(v275 ^ v277 ^ v196 ^ v194 ^ LODWORD(STACK[0x6AC0]), 11);
  v279 = v259
       - (v244
        + LODWORD(STACK[0x6708]))
       + v264
       + LODWORD(STACK[0x6650])
       - LODWORD(STACK[0x6A40])
       - LODWORD(STACK[0x67C0])
       + LODWORD(STACK[0x65E0])
       + 1368718712
       + ((((LODWORD(STACK[0x6628])
           - LODWORD(STACK[0x6608])
           + ((((v248
               - LODWORD(STACK[0x6AB0])
               + LODWORD(STACK[0x6770])
               + v271
               + v239
               + (v246 ^ v243 ^ v272 ^ ((((((LODWORD(STACK[0x6620]) ^ v254 ^ ((v269 ^ 0xBB65465C)
                                                                            + (LODWORD(STACK[0x67E0]) ^ 0x2740C121 ^ v257)
                                                                            - LODWORD(STACK[0x6648])))
                                          - (LODWORD(STACK[0x6850])
                                           + LODWORD(STACK[0x65D8]))) ^ LODWORD(STACK[0x67D0]))
                                        + v276) ^ LODWORD(STACK[0x6650]))
                                      + v268))) ^ LODWORD(STACK[0x6820]))
             + LODWORD(STACK[0x6A50])) ^ LODWORD(STACK[0x6940]))) ^ v242)
         + v253) ^ LODWORD(STACK[0x6618]));
  v280 = (v279 ^ LODWORD(STACK[0x6A30])) + 2 * (v279 & STACK[0x6A30]);
  v281 = STACK[0x65E8];
  v282 = STACK[0x6598];
  v283 = LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x6600]) ^ (((LODWORD(STACK[0x6930])
                                                            - v262
                                                            - LODWORD(STACK[0x65E8])
                                                            + ((v194
                                                              - (v263
                                                               + v266)
                                                              + (LODWORD(STACK[0x6780]) ^ v258 ^ ((v256 ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6638]) ^ ((((v280 ^ -v280 ^ (LODWORD(STACK[0x6A70]) - (v280 ^ LODWORD(STACK[0x6A70])))) + LODWORD(STACK[0x6A70])) ^ LODWORD(STACK[0x6AA0])) - v267))
                                                                                                - LODWORD(STACK[0x6790])))) ^ LODWORD(STACK[0x67B0]))) ^ LODWORD(STACK[0x6A60]))
                                                          - LODWORD(STACK[0x6598]));
  v284 = STACK[0x65F0];
  v285 = LODWORD(STACK[0x6810]) - v261 - LODWORD(STACK[0x65F0]) + LODWORD(STACK[0x6760]) - 843084454 + v283;
  v286 = STACK[0x69F0];
  v287 = STACK[0x68D0];
  v288 = STACK[0x6870];
  v289 = STACK[0x69C0];
  v290 = STACK[0x68A0];
  v291 = STACK[0x65B0];
  v292 = STACK[0x6890];
  v293 = LODWORD(STACK[0x6890])
       - LODWORD(STACK[0x69E0])
       - LODWORD(STACK[0x65F8])
       + (LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x65B0]) ^ v274 ^ (LODWORD(STACK[0x69F0]) + LODWORD(STACK[0x68D0]) + LODWORD(STACK[0x67A0]) - LODWORD(STACK[0x6610]) + v285 - 2 * (v285 & STACK[0x67A0])));
  v294 = STACK[0x65A0];
  v295 = STACK[0x65B8];
  v296 = STACK[0x66E8];
  v297 = STACK[0x6900];
  v298 = STACK[0x6680];
  v299 = STACK[0x6880];
  v300 = STACK[0x68C0];
  v301 = STACK[0x65D0];
  v302 = LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x65D0]) ^ (1082416080 - LODWORD(STACK[0x6700]) - LODWORD(STACK[0x68B0]) - LODWORD(STACK[0x6A90]) + v278 + LODWORD(STACK[0x65A0]) + LODWORD(STACK[0x65B8]) + LODWORD(STACK[0x65C8]) + (((v293 ^ LODWORD(STACK[0x66E8])) + LODWORD(STACK[0x6900])) ^ LODWORD(STACK[0x6800])));
  v303 = STACK[0x6A10];
  v304 = STACK[0x6A20];
  v305 = STACK[0x6518];
  v306 = STACK[0x6970];
  v307 = STACK[0x6860];
  v308 = STACK[0x67F0];
  v309 = STACK[0x65C0];
  v310 = STACK[0x65A8];
  LODWORD(STACK[0x64B0]) = LODWORD(STACK[0x6678])
                         + LODWORD(STACK[0x6A10])
                         + LODWORD(STACK[0x6A20])
                         + LODWORD(STACK[0x6518])
                         - LODWORD(STACK[0x69B0])
                         + LODWORD(STACK[0x6970])
                         + LODWORD(STACK[0x6A80])
                         + LODWORD(STACK[0x6860])
                         + LODWORD(STACK[0x67F0])
                         - 2 * (LODWORD(STACK[0x6A80]) + LODWORD(STACK[0x6518]))
                         + v196
                         + LODWORD(STACK[0x65C0])
                         - LODWORD(STACK[0x65A8])
                         + v302;
  v311 = LODWORD(STACK[0x6530]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x66B8]) ^ v298 ^ v303 ^ LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x6940]) ^ v304 ^ LODWORD(STACK[0x66C0]) ^ v305 ^ v296 ^ LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x69D0]) ^ v286;
  v312 = STACK[0x67E0];
  v313 = STACK[0x69A0];
  v314 = STACK[0x6688];
  v315 = STACK[0x6690];
  v316 = v311 ^ LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x6910]) ^ v288 ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6688]) ^ LODWORD(STACK[0x64C0]) ^ v292 ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x6690]) ^ v306 ^ LODWORD(STACK[0x6AA0]) ^ v299 ^ v287 ^ LODWORD(STACK[0x64B8]) ^ v297;
  v317 = STACK[0x6810];
  v318 = v290 ^ v307 ^ v289;
  v319 = STACK[0x6698];
  v320 = STACK[0x6620];
  v321 = STACK[0x6618];
  v322 = v316 ^ LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x6950]) ^ v300 ^ LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x68E0]) ^ v318 ^ LODWORD(STACK[0x6698]) ^ v308 ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x68F0]) ^ (v284 + 843084454) ^ LODWORD(STACK[0x6A30]) ^ v294 ^ v281 ^ LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x67B0]) ^ LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x6658]);
  v323 = STACK[0x6608];
  v324 = STACK[0x6628];
  v325 = STACK[0x6610];
  v326 = STACK[0x67C0];
  v327 = STACK[0x64E8];
  v328 = STACK[0x6600];
  v329 = v322 ^ LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x6608]) ^ v291 ^ v282 ^ LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6610]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x67C0]) ^ LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x64E8]) ^ v295 ^ LODWORD(STACK[0x6A40]) ^ v309 ^ LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x6A70]);
  v330 = STACK[0x65C8];
  v331 = STACK[0x64E0];
  v332 = STACK[0x65E0];
  v333 = v301 ^ LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x64E0]) ^ LODWORD(STACK[0x65E0]) ^ LODWORD(STACK[0x6A60]) ^ v310 ^ LODWORD(STACK[0x6670]);
  v334 = STACK[0x65F8];
  v335 = STACK[0x65D8];
  v336 = STACK[0x6638];
  v337 = STACK[0x6648];
  v338 = STACK[0x6640];
  LODWORD(STACK[0x6680]) = v329 ^ v333 ^ LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x65D8]) ^ LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x6648]) ^ LODWORD(STACK[0x6640]) ^ __ROR4__(LODWORD(STACK[0x64F0]) ^ 0xADF7785C, 21);
  LODWORD(STACK[0x66E8]) = __ROR4__(__ROR4__(STACK[0x6A80] & 0xB2CC384C, 29) ^ 0x72E68DAD, 3) ^ 0x3ED0D1F1 | STACK[0x6A80] & 0x4D33C7B3;
  v339 = STACK[0x66B0];
  v340 = (((LODWORD(STACK[0x64B0]) ^ v327) - v313) ^ v331) + LODWORD(STACK[0x66B0]);
  v341 = STACK[0x6A00] & 0x4000000;
  if ((v340 & v341) != 0)
    v341 = -v341;
  v342 = (v341 + v340) ^ STACK[0x6A00] & 0xFBFFFFFF;
  LODWORD(STACK[0x64C0]) = v317 ^ -v317 ^ ((v317 ^ 0x83C5192C) + 2084234964);
  v343 = LODWORD(STACK[0x64D0]) + 792024999;
  v344 = LODWORD(STACK[0x67A0]) + 1883210861;
  v345 = LODWORD(STACK[0x6800]) - 891884308;
  v346 = v320 + 1097567988;
  v347 = v314;
  v348 = v342 - v314;
  v349 = v347 - 1174287324;
  v350 = LODWORD(STACK[0x6820]) + 932204235;
  v351 = LODWORD(STACK[0x6AC0]) + 1996253477;
  LODWORD(STACK[0x6940]) = v351;
  v352 = v351 ^ v349;
  LODWORD(STACK[0x66B8]) = v352;
  v353 = v352 ^ v350;
  LODWORD(STACK[0x6620]) = v353;
  v354 = v353 ^ v345;
  LODWORD(STACK[0x6530]) = v354;
  v355 = (LODWORD(STACK[0x6650]) ^ 0x6B88220A) - v354;
  LODWORD(STACK[0x6650]) = v355;
  v356 = v328 - 1146973282 + v355;
  LODWORD(STACK[0x6678]) = v356;
  v357 = v337 - 1015754815;
  v358 = 305869789 - LODWORD(STACK[0x6550]);
  v359 = LODWORD(STACK[0x66A0]) + 236301582 + v356;
  LODWORD(STACK[0x6850]) = v359;
  v360 = (v338 ^ 0xA0BD280) + v359;
  LODWORD(STACK[0x6688]) = v360;
  v361 = v360 ^ v323 ^ 0x8CEFBB04;
  LODWORD(STACK[0x66C0]) = v361;
  v362 = v361 ^ v343;
  LODWORD(STACK[0x6610]) = v362;
  v363 = v362 ^ v358;
  LODWORD(STACK[0x66A0]) = v363;
  v364 = v363 ^ (v325 + 1163643662);
  LODWORD(STACK[0x6A80]) = v364;
  v365 = v326 - v315 - 825340302 + v364;
  LODWORD(STACK[0x69D0]) = v365;
  v366 = v365 + (LODWORD(STACK[0x6860]) ^ 0x1A6A1451);
  LODWORD(STACK[0x6608]) = v366;
  v367 = (v330 ^ 0x9B13A449) - v366;
  LODWORD(STACK[0x6640]) = v367;
  v368 = v367 ^ v357;
  LODWORD(STACK[0x6518]) = v368;
  v369 = v368 ^ (v312 + 2017624579);
  LODWORD(STACK[0x6600]) = v369;
  v370 = LODWORD(STACK[0x6960]) ^ 0x9D13183 ^ v369;
  LODWORD(STACK[0x6860]) = v370;
  v371 = LODWORD(STACK[0x6540]) + 1540449185;
  v372 = LODWORD(STACK[0x6558]) + 1979444901;
  v373 = LODWORD(STACK[0x6A90]) - 1353546128 + v370;
  LODWORD(STACK[0x6960]) = v373;
  v374 = v373 ^ v371;
  LODWORD(STACK[0x6550]) = v374;
  LODWORD(STACK[0x64F0]) = v374 ^ v372;
  v375 = LODWORD(STACK[0x6630]) ^ 0xB1FFBD1C ^ v374 ^ v372;
  LODWORD(STACK[0x65C8]) = v375;
  v376 = LODWORD(STACK[0x67F0]) - v375 - 1589278683;
  LODWORD(STACK[0x6A90]) = v376;
  v377 = LODWORD(STACK[0x64D8]) ^ 0xDFB898BD ^ v376;
  LODWORD(STACK[0x6648]) = v377;
  v378 = LODWORD(STACK[0x6830]) - v377 - 1270148292;
  LODWORD(STACK[0x6830]) = v378;
  v379 = v319 - v378 + 760002520;
  LODWORD(STACK[0x6558]) = v379;
  v380 = (v327 ^ 0x8B319D74) - v379;
  LODWORD(STACK[0x6820]) = v380;
  v381 = v346 + v380 + 1529;
  LODWORD(STACK[0x6540]) = v381;
  v382 = LODWORD(STACK[0x64C8]) - 1149580608;
  v383 = v339 - 1745043000;
  v384 = v344 + v381 - 3734;
  LODWORD(STACK[0x6810]) = v384;
  v385 = LODWORD(STACK[0x6840]) ^ 0x201F2842 ^ v384;
  LODWORD(STACK[0x6800]) = v385;
  v386 = v385 + (LODWORD(STACK[0x65A0]) ^ 0x9B702AF3);
  LODWORD(STACK[0x6840]) = v386;
  v387 = v386 ^ (v324 + 651533177);
  LODWORD(STACK[0x6630]) = v387;
  v388 = LODWORD(STACK[0x66A8]) + 1221267487 + v387;
  LODWORD(STACK[0x6618]) = v388;
  v389 = v388 ^ v382;
  LODWORD(STACK[0x67A0]) = v389;
  v390 = LODWORD(STACK[0x6760]) - 569332759 + v389;
  LODWORD(STACK[0x66B0]) = v390;
  v391 = (LODWORD(STACK[0x6790]) ^ 0xDBDA1138) - v390;
  LODWORD(STACK[0x67E0]) = v391;
  v392 = v391 ^ (v332 + 1610920447);
  LODWORD(STACK[0x67F0]) = v392;
  v393 = v392 + (LODWORD(STACK[0x6870]) ^ 0x13D6B9BE);
  LODWORD(STACK[0x6870]) = v393;
  v394 = LODWORD(STACK[0x6660]) ^ 0xE3452992 ^ v393;
  LODWORD(STACK[0x6660]) = v394;
  v395 = LODWORD(STACK[0x6568]) - 125158818;
  v396 = LODWORD(STACK[0x6770]) + 672772968 + v394 + 3243;
  LODWORD(STACK[0x66A8]) = v396;
  LODWORD(STACK[0x6760]) = v396 ^ v395;
  v397 = LODWORD(STACK[0x6538]) - (v396 ^ v395) - 715849971;
  LODWORD(STACK[0x6770]) = v397;
  v398 = v397 ^ LODWORD(STACK[0x65A8]) ^ 0x2BEBDB01;
  LODWORD(STACK[0x65A8]) = v398;
  v399 = v398 ^ (v331 - 54821560);
  LODWORD(STACK[0x6790]) = v399;
  v400 = LODWORD(STACK[0x6598]) - v399 - 1526839382;
  LODWORD(STACK[0x6628]) = v400;
  v401 = LODWORD(STACK[0x6A00]) ^ 0x8278A9C9 ^ v400;
  LODWORD(STACK[0x64E0]) = v401;
  v402 = LODWORD(STACK[0x6890]) - 1259229827 + v401;
  LODWORD(STACK[0x65A0]) = v402;
  v403 = LODWORD(STACK[0x6A30]) - v402 - 422987228;
  LODWORD(STACK[0x64E8]) = v403;
  v404 = LODWORD(STACK[0x68A0]) ^ 0x380B8A12 ^ v403;
  LODWORD(STACK[0x6598]) = v404;
  v405 = LODWORD(STACK[0x6880]) + 344267969 + v404;
  LODWORD(STACK[0x6880]) = v405;
  v406 = LODWORD(STACK[0x6658]) ^ 0x6560B656 ^ v405;
  LODWORD(STACK[0x68A0]) = v406;
  v407 = LODWORD(STACK[0x6700]) - 1548819292 + v406;
  LODWORD(STACK[0x6A30]) = v407;
  v408 = v336 - v407 - 107014840;
  LODWORD(STACK[0x65E0]) = v408;
  v409 = (LODWORD(STACK[0x6930]) ^ 0x94885917) - v408;
  LODWORD(STACK[0x6658]) = v409;
  v410 = LODWORD(STACK[0x6780]) + 1268722016 + v409;
  LODWORD(STACK[0x6930]) = v410;
  v411 = LODWORD(STACK[0x6708]) - 1019364268 + v410 + 1126;
  v412 = (LODWORD(STACK[0x6680]) ^ 0xA7A333) + 440269473 + v411 + 2631;
  v413 = LODWORD(STACK[0x65B0]) ^ 0xF6A40CD7 ^ v412;
  LODWORD(STACK[0x6708]) = v413;
  v414 = v383 + v413 + 3382;
  v415 = LODWORD(STACK[0x65F0]) - 905202646 + v414;
  LODWORD(STACK[0x64C8]) = v415;
  v416 = v415 + (LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x161C]));
  LODWORD(STACK[0x6890]) = v416;
  v417 = LODWORD(STACK[0x68C0]) - 545784104 + v416;
  LODWORD(STACK[0x64D8]) = v417;
  v418 = v321 - 92061422 + v417 - 68;
  LODWORD(STACK[0x6700]) = v418;
  v419 = LODWORD(STACK[0x68B0]) + 679921984;
  v420 = LODWORD(STACK[0x6668]) - v418 - 1872652821;
  LODWORD(STACK[0x6680]) = v420;
  v421 = LODWORD(STACK[0x66D8]) ^ 0x71989BBB;
  v422 = v334 ^ 0xF8ACAA6F ^ v420;
  LODWORD(STACK[0x68C0]) = v422;
  LODWORD(STACK[0x6A00]) = v422 + v421;
  v423 = (LODWORD(STACK[0x65B8]) ^ 0xD90FC8CA) - (v422 + v421);
  LODWORD(STACK[0x66E8]) = v423;
  v424 = v335 - 989170664 + v423;
  LODWORD(STACK[0x65F8]) = v424;
  v425 = v348 - 1339897009 + v424;
  LODWORD(STACK[0x6690]) = v425;
  v426 = (LODWORD(STACK[0x65C0]) ^ 0xDA765252) - v425;
  LODWORD(STACK[0x64D0]) = v426;
  v427 = LODWORD(STACK[0x64C0]) + 2084234963;
  v428 = LODWORD(STACK[0x6AA0]) - 667699120 + v426;
  LODWORD(STACK[0x6698]) = v428;
  v429 = LODWORD(STACK[0x68E0]) ^ 0x21C9F7B8;
  v430 = v428 ^ v427;
  LODWORD(STACK[0x68E0]) = v430;
  v431 = LODWORD(STACK[0x6910]) ^ 0x94A3273F ^ v430;
  LODWORD(STACK[0x6AA0]) = v431 + v429;
  v432 = LODWORD(STACK[0x68D0]) ^ 0xC2D518A4 ^ (v431 + v429);
  LODWORD(STACK[0x6638]) = v432;
  v433 = LODWORD(STACK[0x6670]) + 2047054727 + v432;
  LODWORD(STACK[0x6668]) = v433;
  v434 = v419 - v433 - 2493;
  v435 = v434 + (LODWORD(STACK[0x6A10]) ^ 0x6459B1F5);
  v436 = LODWORD(STACK[0x6A40]) - v435 - 700259660;
  v437 = LODWORD(STACK[0x6A50]) - 1120255911;
  v438 = LODWORD(STACK[0x6950]) + 406182653 + v436;
  LODWORD(STACK[0x6A50]) = v438;
  v439 = v437 + v438;
  v440 = LODWORD(STACK[0x66E0]) - 282123151;
  v441 = LODWORD(STACK[0x67D0]) - (v437 + v438) - 647136889;
  v442 = LODWORD(STACK[0x66D0]) - 1865345671;
  v443 = LODWORD(STACK[0x69C0]) + 1932095661 + v441;
  v444 = LODWORD(STACK[0x66C8]) + 864884063 - v443 + 3229;
  LODWORD(STACK[0x64C0]) = v444;
  v445 = v444 + (LODWORD(STACK[0x6900]) ^ 0x707F9A7D);
  v446 = LODWORD(STACK[0x68F0]) ^ 0xF616DCD0 ^ v445;
  v447 = LODWORD(STACK[0x69B0]) ^ 0x52D3861E ^ v446;
  v448 = LODWORD(STACK[0x69A0]) + 866558744;
  v449 = LODWORD(STACK[0x6920]) - v447 - 1639039397;
  v450 = LODWORD(STACK[0x6970]) - v449 - 440022903;
  v451 = v450 ^ (LODWORD(STACK[0x6AB0]) - 1346601850);
  v452 = v451 + (LODWORD(STACK[0x66F0]) ^ 0xBB482927);
  v453 = LODWORD(STACK[0x6560]) ^ 0xA9FC72FB ^ v452;
  LODWORD(STACK[0x6538]) = v453;
  v454 = LODWORD(STACK[0x64F8]) - 1485377495 + v453;
  LODWORD(STACK[0x68F0]) = v454 ^ v448;
  v455 = LODWORD(STACK[0x6A60]) - (v454 ^ v448) + 2145724179;
  v456 = LODWORD(STACK[0x65D0]) + 1623024924;
  v457 = LODWORD(STACK[0x6990]) - 1213023159 + v455;
  LODWORD(STACK[0x64F8]) = v457;
  v458 = LODWORD(STACK[0x6A20]) ^ 0x54962373;
  v459 = v457 ^ LODWORD(STACK[0x6980]) ^ 0xBA6BD540;
  LODWORD(STACK[0x6A60]) = v459 ^ v442;
  v460 = v458 - (v459 ^ v442);
  v461 = LODWORD(STACK[0x67B0]) + 820042460 + v460;
  v462 = LODWORD(STACK[0x6A70]) + 1045476257 + v461;
  LODWORD(STACK[0x6990]) = v462 ^ v456;
  v463 = LODWORD(STACK[0x69E0]) - 1214783983 + (v462 ^ v456);
  v464 = LODWORD(STACK[0x65E8]) - 620008536 + v463 + 2705;
  v465 = v440 - v464 + 2283;
  v466 = LODWORD(STACK[0x66F8]) - v465 - 1825041153;
  LODWORD(STACK[0x65D8]) = v466;
  v467 = LODWORD(STACK[0x69F0]) - v466;
  v468 = LODWORD(STACK[0x6598]) - LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x68B0]) = v468;
  v469 = v411 + v468;
  LODWORD(STACK[0x66C8]) = v469;
  v470 = v414 + v469;
  LODWORD(STACK[0x69A0]) = v470;
  v471 = v470 + LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x6920]) = v471;
  v472 = v471 ^ LODWORD(STACK[0x6930]);
  LODWORD(STACK[0x6980]) = v472;
  v473 = v446 - v472;
  LODWORD(STACK[0x69B0]) = v473;
  v474 = v473 ^ LODWORD(STACK[0x6530]);
  LODWORD(STACK[0x68D0]) = v474;
  LODWORD(STACK[0x6630]) = v474 ^ v412;
  v467 += 905575163;
  v475 = v434 - (v474 ^ v412);
  LODWORD(STACK[0x6A20]) = v475;
  v476 = v467 + (LODWORD(STACK[0x6710]) ^ 0x9C954D15);
  v477 = v467 ^ v475;
  LODWORD(STACK[0x69F0]) = v477;
  v478 = LODWORD(STACK[0x6650]) - v477;
  LODWORD(STACK[0x6A70]) = v478;
  v479 = v478 ^ LODWORD(STACK[0x64F0]);
  LODWORD(STACK[0x6930]) = v479;
  v480 = LODWORD(STACK[0x6548]) + v476;
  v481 = LODWORD(STACK[0x67C0]) + 1396192228 + v479;
  LODWORD(STACK[0x6A10]) = v481;
  v482 = v481 ^ LODWORD(STACK[0x6678]);
  LODWORD(STACK[0x6A40]) = v482;
  v483 = v482 + v441;
  LODWORD(STACK[0x66D0]) = v483;
  v484 = v483 ^ LODWORD(STACK[0x66A8]);
  LODWORD(STACK[0x6950]) = v484;
  v485 = v484 + LODWORD(STACK[0x65A8]);
  LODWORD(STACK[0x6910]) = v485;
  v486 = v431 - v485;
  LODWORD(STACK[0x6780]) = v486;
  v487 = v486 + v435;
  LODWORD(STACK[0x69C0]) = v487;
  v488 = v487 ^ v455;
  LODWORD(STACK[0x6670]) = v488;
  v489 = LODWORD(STACK[0x66A0]) - v488;
  LODWORD(STACK[0x6900]) = v489;
  v490 = v489 ^ LODWORD(STACK[0x65A0]);
  LODWORD(STACK[0x6710]) = v490;
  v491 = LODWORD(STACK[0x6518]) - v490;
  LODWORD(STACK[0x6970]) = v491;
  v492 = v450 - v491;
  LODWORD(STACK[0x65D0]) = v492;
  v493 = v459 ^ v492;
  LODWORD(STACK[0x66A0]) = v493;
  v494 = LODWORD(STACK[0x6680]) - v493;
  LODWORD(STACK[0x65C0]) = v494;
  v495 = v494 ^ LODWORD(STACK[0x6540]);
  LODWORD(STACK[0x6678]) = v495;
  v496 = v495 ^ LODWORD(STACK[0x66B8]);
  LODWORD(STACK[0x6680]) = v496;
  v497 = v496 + v461;
  LODWORD(STACK[0x6650]) = v497;
  v498 = LODWORD(STACK[0x6880]) - v497;
  LODWORD(STACK[0x66D8]) = v498;
  v499 = v480 + 547316254 + v498 + 2804;
  LODWORD(STACK[0x6540]) = v499;
  v500 = LODWORD(STACK[0x6600]) - v499;
  LODWORD(STACK[0x69E0]) = v500;
  v501 = v500 + LODWORD(STACK[0x68A0]);
  v502 = LODWORD(STACK[0x6610]) - v501;
  LODWORD(STACK[0x65A8]) = v502;
  LODWORD(STACK[0x6560]) = v501;
  LODWORD(STACK[0x67C0]) = v445 - v502;
  v503 = v445 - v502 + v436;
  LODWORD(STACK[0x65B8]) = v503;
  v504 = LODWORD(STACK[0x6638]) - v503;
  LODWORD(STACK[0x68A0]) = v504;
  v505 = v504 ^ LODWORD(STACK[0x6700]);
  LODWORD(STACK[0x65B0]) = v505;
  v506 = v505 + LODWORD(STACK[0x6608]);
  LODWORD(STACK[0x6AB0]) = v506;
  v507 = LODWORD(STACK[0x6A90]) - v506 + v451;
  LODWORD(STACK[0x65A0]) = v507;
  v508 = v507 + v443;
  LODWORD(STACK[0x66A8]) = v508;
  v509 = v508 ^ v439;
  LODWORD(STACK[0x6880]) = v509;
  v510 = v509 ^ LODWORD(STACK[0x6AA0]);
  LODWORD(STACK[0x66B8]) = v510;
  v511 = LODWORD(STACK[0x6628]) - v510;
  LODWORD(STACK[0x6610]) = v511;
  v512 = v511 + LODWORD(STACK[0x6668]);
  LODWORD(STACK[0x6700]) = v512;
  v513 = v452 - v512;
  LODWORD(STACK[0x67D0]) = v513;
  v514 = v464 - v513;
  LODWORD(STACK[0x6628]) = v514;
  v515 = v514 ^ LODWORD(STACK[0x6618]);
  LODWORD(STACK[0x6638]) = v515;
  v516 = v515 ^ LODWORD(STACK[0x6688]);
  LODWORD(STACK[0x66E0]) = v516;
  v517 = LODWORD(STACK[0x6708]) + 1624477052;
  v518 = v447 - v516;
  LODWORD(STACK[0x6618]) = v518;
  LODWORD(STACK[0x6668]) = v518 + v462;
  v519 = ((-1624477052 - (v518 + v462)) ^ v517) + 2 * ((-1624477052 - (v518 + v462)) & v517);
  LODWORD(STACK[0x6568]) = v519;
  LODWORD(STACK[0x6598]) = v454 - v519;
  v520 = LODWORD(STACK[0x66C0]) - (v454 - v519);
  LODWORD(STACK[0x66C0]) = v520;
  v521 = v476 - v520;
  LODWORD(STACK[0x6548]) = v521;
  v522 = LODWORD(STACK[0x64E0]) - v521;
  LODWORD(STACK[0x6708]) = v522;
  v523 = LODWORD(STACK[0x6658]) - v522;
  LODWORD(STACK[0x65F0]) = v523;
  v524 = v523 ^ LODWORD(STACK[0x65F8]);
  LODWORD(STACK[0x6658]) = v524;
  v525 = v449 - v524;
  LODWORD(STACK[0x6AA0]) = v525;
  v526 = LODWORD(STACK[0x64C8]) - v525;
  LODWORD(STACK[0x67B0]) = v526;
  v527 = v526 ^ LODWORD(STACK[0x64E8]);
  LODWORD(STACK[0x6688]) = v527;
  v528 = v465 - v527;
  LODWORD(STACK[0x6608]) = v528;
  LODWORD(STACK[0x6518]) = v528 + v463;
  v529 = v528 + v463 + LODWORD(STACK[0x6648]);
  LODWORD(STACK[0x66F8]) = v529;
  v530 = v529 + LODWORD(STACK[0x6660]);
  LODWORD(STACK[0x6600]) = v530;
  v531 = v530 ^ v460;
  LODWORD(STACK[0x6660]) = v531;
  v532 = v531 ^ LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x65E8]) = v532;
  v533 = v532 + LODWORD(STACK[0x65E0]);
  v534 = v533 + LODWORD(STACK[0x64C0]);
  LODWORD(STACK[0x6648]) = v534;
  v535 = LODWORD(STACK[0x6640]) - v534;
  LODWORD(STACK[0x65F8]) = v535;
  v536 = v535 + LODWORD(STACK[0x6550]);
  LODWORD(STACK[0x66F0]) = v536;
  v537 = v536 ^ LODWORD(STACK[0x64F8]);
  LODWORD(STACK[0x65E0]) = v537;
  v538 = v537 + LODWORD(STACK[0x65C8]);
  LODWORD(STACK[0x6640]) = v538;
  v539 = LODWORD(STACK[0x64D8]) - v538;
  v540 = LODWORD(STACK[0x64D0]) - v539;
  LODWORD(STACK[0x66B0]) = v540;
  v541 = v540 ^ LODWORD(STACK[0x6620]);
  LODWORD(STACK[0x6620]) = v541;
  v542 = LODWORD(STACK[0x6558]) - v541;
  HIDWORD(v543) = v542 ^ LODWORD(STACK[0x6520]) ^ LODWORD(STACK[0x6580]);
  LODWORD(v543) = v542 ^ LODWORD(STACK[0x6520]);
  v544 = v542 ^ LODWORD(STACK[0x6538]);
  v545 = ((((v543 >> 15) << 15) ^ 0x3CC28000) & 0xFFFF8000 | (((v543 >> 15) ^ (LODWORD(STACK[0x6570]) << 17)) >> 17))
       - ((2 * (((v543 >> 15) << 15) ^ 0x3CC28000)) & 0x79850000);
  LODWORD(STACK[0x6538]) = ((STACK[0x6720] & 0xB3 ^ 0x30) - ((2 * (STACK[0x6720] & 0xB3 ^ 0x30)) & 0xFFFFFFC3) + 685) ^ 0x21E ^ (v545 - 1128103936) & 0xC9A67DB3 | ((STACK[0x6720] & 0x4C ^ 0xF6F04EB) - 1) & 0x96D04EC ^ 0x96D04E4 ^ (v545 - 1128103936) & 0x3659824C;
  v546 = v544 + LODWORD(STACK[0x6760]);
  v547 = LODWORD(STACK[0x6800]) - v546;
  LODWORD(STACK[0x6558]) = v547;
  v548 = v547 + LODWORD(STACK[0x6A30]);
  LODWORD(STACK[0x6570]) = v548;
  v549 = v548 + LODWORD(STACK[0x67A0]);
  v550 = v549 ^ LODWORD(STACK[0x6770]);
  v551 = v550 ^ LODWORD(STACK[0x6690]);
  v552 = LODWORD(STACK[0x6890]) - v551;
  LODWORD(STACK[0x6890]) = v552;
  v553 = v552 ^ LODWORD(STACK[0x6870]);
  v554 = LODWORD(STACK[0x68F0]) - v553;
  v555 = v554 + LODWORD(STACK[0x6A50]);
  v556 = LODWORD(STACK[0x67E0]) - v555;
  v557 = LODWORD(STACK[0x6810]) - v556;
  v558 = v557 + LODWORD(STACK[0x67F0]);
  v559 = v558 ^ LODWORD(STACK[0x6698]);
  LODWORD(STACK[0x6550]) = v559;
  v560 = v559 ^ LODWORD(STACK[0x6820]);
  v561 = LODWORD(STACK[0x6AC0]) - 1881020786 + v560;
  v562 = LODWORD(STACK[0x66E8]) - v561;
  v563 = v562 + LODWORD(STACK[0x6790]);
  v564 = LODWORD(STACK[0x6860]) - v563;
  v565 = v564 + LODWORD(STACK[0x6840]);
  v566 = v565 ^ LODWORD(STACK[0x68C0]);
  v567 = v566 ^ LODWORD(STACK[0x6830]);
  v568 = LODWORD(STACK[0x65D8]) - v567;
  v569 = v568 + LODWORD(STACK[0x6990]);
  v570 = v562 ^ v501;
  LODWORD(STACK[0x6580]) = v562 ^ v501;
  v571 = LODWORD(STACK[0x6940]) - v569;
  v572 = v571 + LODWORD(STACK[0x6960]);
  v573 = LODWORD(STACK[0x6850]) - v572;
  v574 = LODWORD(STACK[0x6A60]) - v573;
  LODWORD(STACK[0x6530]) = v574;
  v575 = v574 ^ LODWORD(STACK[0x68E0]);
  v576 = v570 ^ v544;
  LODWORD(STACK[0x65C8]) = v570 ^ v544;
  v577 = LODWORD(STACK[0x6A00]) - v575;
  v578 = v576 ^ LODWORD(STACK[0x65A0]);
  LODWORD(STACK[0x65A0]) = v578;
  v579 = v578 ^ LODWORD(STACK[0x65A8]);
  LODWORD(STACK[0x65D8]) = v579;
  v580 = v539 - v579;
  LODWORD(STACK[0x6940]) = v580;
  v581 = v580 + v533;
  LODWORD(STACK[0x68E0]) = v581;
  v582 = LODWORD(STACK[0x6548]) - v581;
  LODWORD(STACK[0x6810]) = v582;
  v583 = v582 + LODWORD(STACK[0x65C0]);
  LODWORD(STACK[0x6AC0]) = v583;
  v584 = v568 - v583;
  LODWORD(STACK[0x66E8]) = v584;
  v585 = v584 + LODWORD(STACK[0x65D0]);
  LODWORD(STACK[0x65D0]) = v585;
  v586 = v585 ^ LODWORD(STACK[0x6568]);
  LODWORD(STACK[0x6870]) = v586;
  v587 = LODWORD(STACK[0x6A90]) - v586;
  LODWORD(STACK[0x6990]) = v587;
  v588 = v587 ^ v553;
  LODWORD(STACK[0x68F0]) = v588;
  v589 = v588 ^ v577;
  LODWORD(STACK[0x6860]) = v589;
  v590 = v589 ^ LODWORD(STACK[0x65B0]);
  LODWORD(STACK[0x6A90]) = v590;
  v591 = v590 ^ LODWORD(STACK[0x65B8]);
  LODWORD(STACK[0x6698]) = v591;
  v592 = v591 ^ LODWORD(STACK[0x6518]);
  LODWORD(STACK[0x65C0]) = v592;
  v593 = LODWORD(STACK[0x6598]) - v592;
  LODWORD(STACK[0x6720]) = v593;
  v594 = v593 ^ LODWORD(STACK[0x68D0]);
  LODWORD(STACK[0x68D0]) = v594;
  v595 = LODWORD(STACK[0x6630]) - v594;
  v596 = (v595 ^ LODWORD(STACK[0x6540])) + 2 * (v595 & STACK[0x6540]);
  LODWORD(STACK[0x6A60]) = v596;
  v116 = LODWORD(STACK[0x6528]) == 0;
  v597 = LODWORD(STACK[0x69E0]) - v596;
  LODWORD(STACK[0x6540]) = v597;
  v598 = v597 + LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x67A0]) = v598;
  v599 = v598 ^ v567;
  LODWORD(STACK[0x6A50]) = v599;
  LODWORD(STACK[0x68C0]) = v599 + v573;
  v600 = (v599 + v573) ^ v560;
  LODWORD(STACK[0x69E0]) = v600;
  v601 = v600 ^ LODWORD(STACK[0x69C0]);
  LODWORD(STACK[0x6A00]) = v601;
  v602 = LODWORD(STACK[0x6610]) - v601;
  LODWORD(STACK[0x6A70]) = v602;
  v603 = LODWORD(STACK[0x6A40]) - v602;
  LODWORD(STACK[0x6960]) = v603;
  v604 = LODWORD(STACK[0x6650]) - v603;
  LODWORD(STACK[0x6650]) = v604;
  v605 = v604 + v556;
  LODWORD(STACK[0x69C0]) = v605;
  v606 = LODWORD(STACK[0x6628]) - v605;
  LODWORD(STACK[0x6548]) = v606 ^ v557;
  v607 = (v606 ^ v557) + LODWORD(STACK[0x65F0]);
  LODWORD(STACK[0x6A40]) = v607;
  v608 = v607 ^ LODWORD(STACK[0x6A20]);
  LODWORD(STACK[0x6610]) = v608;
  v609 = v608 ^ LODWORD(STACK[0x6618]);
  LODWORD(STACK[0x6A20]) = v609;
  v610 = v609 + LODWORD(STACK[0x6638]);
  LODWORD(STACK[0x6690]) = v610;
  LODWORD(STACK[0x65B8]) = v610 ^ v546;
  v611 = LODWORD(STACK[0x6970]) - (v610 ^ v546);
  LODWORD(STACK[0x65B0]) = v611;
  v612 = v611 + v549;
  LODWORD(STACK[0x6618]) = (v611 + v549) ^ v550;
  v613 = LODWORD(STACK[0x6678]) - ((v611 + v549) ^ v550);
  LODWORD(STACK[0x6568]) = v613;
  v614 = LODWORD(STACK[0x65E8]) - v613;
  LODWORD(STACK[0x6628]) = v614;
  v615 = v614 ^ v555;
  LODWORD(STACK[0x6A30]) = v615;
  v616 = v615 + v563;
  LODWORD(STACK[0x6970]) = v616;
  v617 = LODWORD(STACK[0x6600]) - v616;
  v618 = v617 + LODWORD(STACK[0x6680]);
  v619 = LODWORD(STACK[0x6620]) - v618;
  LODWORD(STACK[0x6598]) = v619;
  v620 = v619 ^ LODWORD(STACK[0x6608]);
  LODWORD(STACK[0x6820]) = v620;
  v621 = LODWORD(STACK[0x66C8]) - v620;
  LODWORD(STACK[0x6678]) = v621;
  v622 = v621 + LODWORD(STACK[0x6A10]);
  LODWORD(STACK[0x65A8]) = v622;
  v623 = v622 ^ LODWORD(STACK[0x66D0]);
  LODWORD(STACK[0x66D0]) = v623;
  v624 = v623 + LODWORD(STACK[0x65E0]);
  LODWORD(STACK[0x6850]) = v624;
  v625 = v624 + LODWORD(STACK[0x65F8]);
  LODWORD(STACK[0x6A10]) = v625;
  v626 = v625 ^ v564;
  LODWORD(STACK[0x67F0]) = v625 ^ v564;
  v627 = LODWORD(STACK[0x6670]) ^ 0x7181605B;
  if (v116)
    v627 = -1904304220;
  v628 = (v626 ^ LODWORD(STACK[0x6670])) & 0x7181605B | v626 & 0x8E7E9FA4 ^ v627 & STACK[0x6670];
  LODWORD(STACK[0x6840]) = v628;
  v629 = v628 + LODWORD(STACK[0x68B0]);
  v630 = v629 + LODWORD(STACK[0x6668]);
  v631 = LODWORD(STACK[0x6658]) - v630;
  LODWORD(STACK[0x6790]) = v631 ^ v565;
  v632 = v631 ^ v565 ^ v572;
  LODWORD(STACK[0x6638]) = v632;
  v633 = v561 - v632;
  v634 = LODWORD(STACK[0x66A0]) - (v561 - v632);
  LODWORD(STACK[0x6830]) = v634;
  v635 = v634 + v554;
  v636 = (v634 + v554) ^ LODWORD(STACK[0x66A8]);
  v637 = v636 + LODWORD(STACK[0x6648]);
  LODWORD(STACK[0x66A8]) = v637;
  LODWORD(STACK[0x66A0]) = v566 - v637;
  v638 = v566 - v637 + LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x6770]) = v638;
  v639 = v638 ^ LODWORD(STACK[0x66B8]);
  LODWORD(STACK[0x66C8]) = v639;
  v640 = v639 ^ v575;
  v641 = v640 + LODWORD(STACK[0x6920]);
  LODWORD(STACK[0x6760]) = v641;
  v642 = LODWORD(STACK[0x6660]) - v641;
  LODWORD(STACK[0x6680]) = v642;
  v643 = v642 ^ v558;
  LODWORD(STACK[0x66B8]) = v642 ^ v558 ^ v551;
  HIDWORD(v645) = STACK[0x6780];
  LODWORD(v645) = STACK[0x6780];
  v644 = v645 >> 19;
  v646 = (v642 ^ v558 ^ v551) + LODWORD(STACK[0x6710]);
  LODWORD(STACK[0x6800]) = v646;
  v647 = v646 + LODWORD(STACK[0x66D8]);
  HIDWORD(v645) = v647;
  LODWORD(v645) = v647;
  v648 = __ROR4__(((v645 >> 19) ^ -(int)(v645 >> 19) ^ ((v644 ^ 0xDE541ED9) + (v644 ^ 0x21ABE126 ^ (v645 >> 19)) + 1))+ (v644 ^ 0xDE541ED9), 13) ^ 0xF6CEF2A0;
  v649 = STACK[0x6930];
  v650 = LODWORD(STACK[0x6930]) + LODWORD(STACK[0x69D0]);
  v651 = LODWORD(STACK[0x6910]) - v648;
  LODWORD(STACK[0x66D8]) = v651 + v569;
  v652 = (v651 + v569) ^ LODWORD(STACK[0x6900]);
  LODWORD(STACK[0x6630]) = v652;
  v653 = v652 ^ LODWORD(STACK[0x67C0]);
  LODWORD(STACK[0x6670]) = v653;
  v654 = v653 + LODWORD(STACK[0x6700]);
  v655 = v654 ^ LODWORD(STACK[0x66E0]);
  LODWORD(STACK[0x6608]) = v655;
  v656 = v655 ^ LODWORD(STACK[0x6950]);
  LODWORD(STACK[0x6600]) = v656;
  v657 = v656 + LODWORD(STACK[0x69F0]);
  v658 = LODWORD(STACK[0x6688]) - v657;
  LODWORD(STACK[0x6780]) = v658;
  LODWORD(STACK[0x6660]) = v657;
  v659 = LODWORD(STACK[0x66C0]) - v658;
  LODWORD(STACK[0x66E0]) = v659;
  v660 = LODWORD(STACK[0x68A0]) - v659;
  v661 = v660 + LODWORD(STACK[0x69A0]);
  LODWORD(STACK[0x67E0]) = v661;
  v662 = v661 + LODWORD(STACK[0x6980]);
  LODWORD(STACK[0x6668]) = v662;
  v663 = LODWORD(STACK[0x6538]) - v662;
  v664 = v663 ^ v649;
  LODWORD(STACK[0x65F0]) = v664;
  v665 = v664 ^ LODWORD(STACK[0x69B0]);
  v666 = LODWORD(STACK[0x6880]) - v665;
  LODWORD(STACK[0x65E8]) = v666 ^ v571;
  v667 = (v666 ^ v571) + LODWORD(STACK[0x67D0]);
  LODWORD(STACK[0x65F8]) = v667;
  v668 = v650 - v667;
  v669 = v668 ^ LODWORD(STACK[0x6708]);
  v670 = v669 ^ LODWORD(STACK[0x6558]);
  LODWORD(STACK[0x66C0]) = v670;
  v671 = v670 + LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x6708]) = v671;
  v672 = v671 + LODWORD(STACK[0x6550]);
  LODWORD(STACK[0x6710]) = v672;
  v673 = LODWORD(STACK[0x6530]) - v672;
  v674 = v673 + LODWORD(STACK[0x66F8]);
  LODWORD(STACK[0x6688]) = v674;
  v675 = v674 ^ LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x6700]) = v675;
  v676 = v675 ^ LODWORD(STACK[0x6570]);
  LODWORD(STACK[0x66F8]) = v676;
  v677 = LODWORD(STACK[0x66F0]) - v676;
  LODWORD(STACK[0x6620]) = v677;
  v678 = (v677 ^ LODWORD(STACK[0x67B0])) + 2 * (v677 & STACK[0x67B0]);
  v679 = v657 ^ LODWORD(STACK[0x65A0]);
  LODWORD(STACK[0x67B0]) = v679;
  v680 = v663 + v679;
  LODWORD(STACK[0x69F0]) = v680;
  v681 = v680 + LODWORD(STACK[0x6560]);
  LODWORD(STACK[0x69D0]) = v681;
  v682 = v669 + v681;
  LODWORD(STACK[0x65E0]) = v682;
  v683 = v682 + LODWORD(STACK[0x6540]);
  LODWORD(STACK[0x6910]) = v683;
  v684 = v683 + v595;
  LODWORD(STACK[0x66F0]) = v684;
  v685 = v684 + v606;
  LODWORD(STACK[0x66B0]) = v685;
  v686 = v617 - v685;
  LODWORD(STACK[0x6A80]) = v686;
  v687 = v686 ^ LODWORD(STACK[0x6580]);
  LODWORD(STACK[0x6920]) = v687;
  v688 = v687 + v635;
  LODWORD(STACK[0x6640]) = v660 - (v687 + v635);
  v689 = v612 - (v660 - (v687 + v635));
  LODWORD(STACK[0x69B0]) = v689 ^ v629;
  v690 = v618 - (v689 ^ v629);
  LODWORD(STACK[0x68A0]) = v690;
  v691 = LODWORD(STACK[0x65B8]) - v690;
  v692 = v691 ^ LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x6658]) = v692;
  v693 = v692 ^ LODWORD(STACK[0x6548]);
  LODWORD(STACK[0x6610]) = v693 + v636;
  v694 = (v693 + v636) ^ LODWORD(STACK[0x65C8]);
  LODWORD(STACK[0x6880]) = v694;
  v695 = v631 & 0x8000000;
  if ((v694 & v631 & 0x8000000) != 0)
    v695 = -v695;
  v696 = (v695 + v694) ^ v631 & 0xF7FFFFFF;
  LODWORD(STACK[0x6950]) = v696;
  v697 = v696 ^ v633;
  v698 = LODWORD(STACK[0x65C0]) - (v696 ^ v633);
  LODWORD(STACK[0x6648]) = v698;
  v699 = v647 - v698;
  v700 = v647 - v698 + v648;
  LODWORD(STACK[0x6930]) = v700;
  v701 = v700 ^ LODWORD(STACK[0x65D0]);
  LODWORD(STACK[0x6980]) = v701;
  v702 = v665 - v701;
  LODWORD(STACK[0x69A0]) = v702;
  v703 = v702 + v673;
  LODWORD(STACK[0x67C0]) = v703;
  v704 = v640 - v703;
  LODWORD(STACK[0x6900]) = v704;
  v705 = v704 ^ LODWORD(STACK[0x65D8]);
  v706 = v705 + LODWORD(STACK[0x6568]);
  LODWORD(STACK[0x67D0]) = v706 + v630;
  v707 = v706 + v630 + v643;
  LODWORD(STACK[0x68B0]) = v707 + v654;
  v708 = v707 + v654 + v668;
  v709 = LODWORD(STACK[0x65B0]) - v708;
  v710 = v709 + v666;
  v711 = LODWORD(STACK[0x6598]) - (v709 + v666);
  v712 = (v711 + v651) ^ LODWORD(STACK[0x65A8]);
  v713 = v712 ^ LODWORD(STACK[0x6638]);
  LODWORD(STACK[0x6638]) = v713;
  v714 = STACK[0x6590];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD2BLL) = v712;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADC7) = v697;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACDBLL) = v699;
  v715 = LODWORD(STACK[0x66E8]) - v713;
  v716 = LODWORD(STACK[0x6650]) - v715;
  v717 = v716 + LODWORD(STACK[0x65F0]);
  v718 = LODWORD(STACK[0x6618]) - v717;
  LODWORD(STACK[0x66E8]) = v718;
  v719 = v718 ^ LODWORD(STACK[0x6698]);
  v720 = LODWORD(STACK[0x6628]) - v719;
  LODWORD(STACK[0x6698]) = v720;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADEFLL) = v719;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADDFLL) = v689;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD27) = v693;
  *(_DWORD *)(v714 - 0x112B0CED4B6AC8FLL) = v705;
  v721 = v678;
  v722 = v678 + LODWORD(STACK[0x6890]);
  v723 = LODWORD(STACK[0x6AA0]) - v722;
  v724 = LODWORD(STACK[0x66A8]) - v720;
  v725 = LODWORD(STACK[0x65E8]) - v724;
  LODWORD(STACK[0x6890]) = v725;
  v726 = v722 - v725;
  v727 = v722 - v725 + LODWORD(STACK[0x6678]);
  LODWORD(STACK[0x6AA0]) = v727;
  v728 = LODWORD(STACK[0x6600]) - v727;
  LODWORD(STACK[0x6678]) = v728;
  v729 = v728 + LODWORD(STACK[0x6630]);
  LODWORD(STACK[0x66A8]) = v729;
  LODWORD(STACK[0x6650]) = v729 ^ v723;
  v730 = v729 ^ v723 ^ LODWORD(STACK[0x66B8]);
  LODWORD(STACK[0x66B8]) = v730;
  v731 = v730 + LODWORD(STACK[0x6720]);
  LODWORD(STACK[0x6720]) = v731;
  v732 = LODWORD(STACK[0x6810]) - v731;
  v733 = v732 ^ LODWORD(STACK[0x6690]);
  v734 = v733 + LODWORD(STACK[0x65F8]);
  LODWORD(STACK[0x6810]) = v734;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD57) = v733;
  *(_DWORD *)(v714 - 0x112B0CED4B6AE0BLL) = v688;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD9FLL) = v706;
  *(_DWORD *)(v714 - 0x112B0CED4B6AC83) = STACK[0x65E0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AC73) = v691;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACB3) = v707;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADABLL) = v711;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD47) = v716;
  *(_DWORD *)(v714 - 0x112B0CED4B6AE0FLL) = v726;
  v735 = STACK[0x6870];
  v736 = LODWORD(STACK[0x6AB0]) - LODWORD(STACK[0x6870]);
  LODWORD(STACK[0x6690]) = v734 + v721;
  v737 = (v734 + v721) ^ LODWORD(STACK[0x6860]);
  v738 = v737 & 0x100000;
  if ((v737 & 0x100000 & v735) != 0)
    v738 = -v738;
  *(_DWORD *)(v714 - 0x112B0CED4B6AC7BLL) = v732;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACE7) = v737;
  v739 = (v738 + v735) ^ v737 & 0xFFEFFFFF;
  LODWORD(STACK[0x6630]) = v739;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACC7) = v717;
  v740 = v739 ^ LODWORD(STACK[0x66A0]);
  LODWORD(STACK[0x6870]) = v740;
  v741 = LODWORD(STACK[0x6608]) - v740;
  LODWORD(STACK[0x6AB0]) = v741;
  v742 = LODWORD(STACK[0x6680]) - v741;
  v743 = v742 ^ LODWORD(STACK[0x66D0]);
  LODWORD(STACK[0x66D0]) = v743;
  v744 = v743 + LODWORD(STACK[0x68E0]);
  LODWORD(STACK[0x6860]) = v744;
  v745 = v744 + v736;
  LODWORD(STACK[0x68E0]) = v745;
  v746 = v745 ^ LODWORD(STACK[0x68D0]);
  *(_DWORD *)(v714 - 0x112B0CED4B6AD8BLL) = v746;
  v747 = LODWORD(STACK[0x67A0]) - v746;
  v748 = v747 ^ LODWORD(STACK[0x6688]);
  v749 = v748 + LODWORD(STACK[0x6620]);
  v750 = v749 ^ LODWORD(STACK[0x68F0]);
  *(_DWORD *)(v714 - 0x112B0CED4B6AD7BLL) = v750;
  v751 = LODWORD(STACK[0x6940]) - v750;
  LODWORD(STACK[0x6940]) = v751;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADB3) = STACK[0x6660];
  v752 = LODWORD(STACK[0x66C8]) - v751;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACAFLL) = v752;
  v753 = LODWORD(STACK[0x6670]) - v752;
  *(_DWORD *)(v714 - 0x112B0CED4B6AE03) = v708;
  v754 = v753 ^ LODWORD(STACK[0x6990]);
  *(_DWORD *)(v714 - 0x112B0CED4B6AD5BLL) = v754;
  v755 = v754 ^ LODWORD(STACK[0x6668]);
  *(_DWORD *)(v714 - 0x112B0CED4B6ACA7) = v709;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD37) = v710;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACFBLL) = v715;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADFFLL) = STACK[0x6640];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD63) = v724;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACEBLL) = STACK[0x6610];
  *(_DWORD *)(v714 - 0x112B0CED4B6AE07) = STACK[0x66B0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD3BLL) = STACK[0x6658];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADE7) = v711 + v651;
  v756 = LODWORD(STACK[0x68C0]) - v755;
  v757 = LODWORD(STACK[0x6820]) - v756;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADEBLL) = v757;
  v758 = v757 + LODWORD(STACK[0x66E0]);
  LODWORD(STACK[0x6990]) = v758;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD4BLL) = STACK[0x6648];
  *(_DWORD *)(v714 - 0x112B0CED4B6ACF3) = STACK[0x66F0];
  v759 = v758 + LODWORD(STACK[0x66C0]);
  v760 = LODWORD(STACK[0x6700]) - v759;
  v761 = LODWORD(STACK[0x67F0]) - v760;
  v762 = LODWORD(STACK[0x6A90]) - v761;
  v763 = LODWORD(STACK[0x6790]) - v762;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADF7) = v763;
  v764 = v763 + LODWORD(STACK[0x6760]);
  v765 = v764 ^ LODWORD(STACK[0x6850]);
  v766 = LODWORD(STACK[0x6770]) - v765;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACD3) = v766;
  v767 = v766 ^ LODWORD(STACK[0x6960]);
  v768 = v767 ^ LODWORD(STACK[0x69E0]);
  if (LODWORD(STACK[0x6578]) == -378405712)
    v769 = STACK[0x69E0];
  else
    v769 = ~v768;
  v770 = v768 + 2 * (v769 & v767);
  *(_DWORD *)(v714 - 0x112B0CED4B6ACC3) = v770;
  v771 = v770 + LODWORD(STACK[0x6840]);
  v772 = v771 + LODWORD(STACK[0x69C0]);
  v773 = v772 ^ LODWORD(STACK[0x66D8]);
  *(_DWORD *)(v714 - 0x112B0CED4B6AD1BLL) = v773;
  v774 = LODWORD(STACK[0x66F8]) - v773;
  v775 = LODWORD(STACK[0x6830]) - v774;
  v776 = v775 + LODWORD(STACK[0x6A00]);
  v777 = v776 + LODWORD(STACK[0x6800]);
  *(_DWORD *)(v714 - 0x112B0CED4B6AD43) = v777;
  v778 = v777 ^ LODWORD(STACK[0x6970]);
  *(_DWORD *)(v714 - 0x112B0CED4B6ADE3) = v778;
  v779 = v778 ^ LODWORD(STACK[0x6AC0]);
  v780 = v779 + LODWORD(STACK[0x6A60]);
  *(_DWORD *)(v714 - 0x112B0CED4B6AC77) = v780;
  v781 = v780 + LODWORD(STACK[0x6A50]);
  v782 = LODWORD(STACK[0x6708]) - v781;
  v783 = v782 ^ LODWORD(STACK[0x6A20]);
  v784 = v783 ^ LODWORD(STACK[0x6780]);
  *(_DWORD *)(v714 - 0x112B0CED4B6ADA7) = v784;
  v785 = LODWORD(STACK[0x6A70]) - v784;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACA3) = v785;
  v786 = v785 + LODWORD(STACK[0x6A40]);
  v787 = v786 + LODWORD(STACK[0x6710]);
  *(_DWORD *)(v714 - 0x112B0CED4B6AC6BLL) = v787;
  v788 = LODWORD(STACK[0x67E0]) - v787;
  v789 = v788 ^ LODWORD(STACK[0x6A30]);
  *(_DWORD *)(v714 - 0x112B0CED4B6ACBBLL) = v789 + LODWORD(STACK[0x6A10]);
  *(_DWORD *)(v714 - 0x112B0CED4B6ACABLL) = v788;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACCBLL) = v747;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACF7) = v783;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD03) = STACK[0x6650];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADDBLL) = v748;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADA3) = v759;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACE3) = STACK[0x67B0];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADBFLL) = STACK[0x6678];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD13) = v742;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD6BLL) = v765;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD7FLL) = v749;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD23) = v789;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACEFLL) = STACK[0x6690];
  *(_DWORD *)(v714 - 0x112B0CED4B6AE13) = STACK[0x67C0];
  *(_DWORD *)(v714 - 0x112B0CED4B6ACFFLL) = v756;
  *(_DWORD *)(v714 - 0x112B0CED4B6AC87) = v767;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD9BLL) = STACK[0x6638];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD83) = STACK[0x6630];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD97) = STACK[0x66B8];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD3FLL) = v753;
  *(_DWORD *)(v714 - 0x112B0CED4B6AE1FLL) = v771;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD17) = v760;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD0BLL) = STACK[0x67D0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AC97) = v764;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD07) = STACK[0x6698];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADBBLL) = v782;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADC3) = v774;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD87) = STACK[0x6910];
  *(_DWORD *)(v714 - 0x112B0CED4B6AC6FLL) = STACK[0x66D0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AC9BLL) = STACK[0x68A0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AC7FLL) = STACK[0x6860];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADD3) = STACK[0x6920];
  *(_DWORD *)(v714 - 0x112B0CED4B6AC93) = STACK[0x6880];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD0FLL) = STACK[0x66E8];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD53) = v775;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD93) = STACK[0x66A8];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADCBLL) = STACK[0x6810];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD67) = STACK[0x6890];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADD7) = v755;
  *(_DWORD *)(v714 - 0x112B0CED4B6AE1BLL) = v781;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD4FLL) = STACK[0x69D0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD33) = v761;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACBFLL) = STACK[0x69B0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD1FLL) = STACK[0x69F0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD73) = STACK[0x6720];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADF3) = STACK[0x6930];
  *(_DWORD *)(v714 - 0x112B0CED4B6ACDFLL) = STACK[0x6950];
  *(_DWORD *)(v714 - 0x112B0CED4B6ACCFLL) = STACK[0x6900];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD2FLL) = STACK[0x6AA0];
  *(_DWORD *)STACK[0x6588] = STACK[0x6870];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADFBLL) = STACK[0x68E0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD5FLL) = STACK[0x68B0];
  *(_DWORD *)(v714 - 0x112B0CED4B6ADB7) = STACK[0x6AB0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD8FLL) = STACK[0x6940];
  *(_DWORD *)(v714 - 0x112B0CED4B6AC9FLL) = STACK[0x6980];
  *(_DWORD *)(v714 - 0x112B0CED4B6AD77) = v762;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADAFLL) = STACK[0x69A0];
  *(_DWORD *)(v714 - 0x112B0CED4B6AE17) = v786;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACB7) = v776;
  *(_DWORD *)(v714 - 0x112B0CED4B6ADCFLL) = STACK[0x6A80];
  *(_DWORD *)(v714 - 0x112B0CED4B6AC8BLL) = v779;
  *(_DWORD *)(v714 - 0x112B0CED4B6AD6FLL) = v772;
  *(_DWORD *)(v714 - 0x112B0CED4B6ACD7) = STACK[0x6990];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6730])))();
}

uint64_t sub_100C093EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26 * (((v6 - 34689035) ^ v5) + (STACK[0x19F4] & (2 * v5)) + 1530787836 != v6 + 1496098801)) ^ v6))
                                                                                       - 8))(a1, 83, a3, a4, a5, 155);
}

uint64_t sub_100C09470(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v8;

  v4 = v3 + 6864;
  v5 = (v3 + 4177) | 0xA89u;
  v6 = STACK[0xB610];
  STACK[0xD648] = a3;
  v8 = v6 == 0x3B6225A8A99B3D66 || a3 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v8 * (((v4 - 7326) | 0x1D4) ^ 0x2FE3)) ^ v4))
                            - (v5 ^ 0x4AA5)))();
}

#error "100C0950C: too big function (funcsize=0)"

uint64_t sub_100C253C0@<X0>(int a1@<W3>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((4449 * ((a1 ^ 0x5EFFCFBB) + ((2 * a1) & 0xBDFE9050) == 1593823163)) ^ a2))
                            - ((a2 + 1025017889) & 0xC2E77ABB ^ 0x32BALL)))();
}

uint64_t sub_100C25428(int a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v5;

  v3 = STACK[0xB7E0];
  STACK[0xD650] = a3;
  v5 = v3 == 0x5403DD36F7778C5ALL || a3 == 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((1897 * ((a1 ^ 0x67 ^ v5) & 1)) ^ a1)))();
}

#error "100C254A0: too big function (funcsize=0)"

uint64_t sub_100C3C1D8()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((7360 * ((v0 ^ 0xF9A7EEBF) + ((2 * v0) & 0xF34E9058) == -106434881)) ^ v1))
                            - ((v1 ^ 0x3FA3u)
                             - 2516)
                            + 1690))();
}

uint64_t sub_100C3C228()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  *(_DWORD *)(v1 + 660) = -1926392729;
  v2 = STACK[0x6AD8];
  STACK[0xD248] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 ^ 0x1326))
                                          - ((v0 + 13125) ^ 0x39EFLL)))(5121);
}

uint64_t sub_100C3C2DC()
{
  int v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 + 660) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7267)) - 8))();
}

uint64_t sub_100C3C308(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;

  a3[166] = v7;
  STACK[0xE148] = v6;
  STACK[0xE150] = v6;
  STACK[0xE158] = v6;
  STACK[0xE160] = v6;
  STACK[0xE168] = v6;
  STACK[0xE170] = v6;
  STACK[0xE178] = v6;
  STACK[0xE180] = v6;
  STACK[0xE188] = v6;
  STACK[0xE190] = v6;
  STACK[0xE198] = v6;
  STACK[0xE1A0] = v6;
  STACK[0xE1A8] = v6;
  STACK[0xE1B0] = v6;
  STACK[0xE1B8] = v6;
  STACK[0xE1C0] = v6;
  STACK[0xE1C8] = v6;
  STACK[0xE1D0] = v6;
  a3[168] = v4;
  a3[167] = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v3))(4294952410, 5733, 12235);
}

uint64_t sub_100C3C570@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;

  if (v3 == (a2 ^ a1) - 1926394392)
    v4 = v2;
  else
    v4 = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v4 * ((4 * (a2 ^ a1)) ^ 0x1A4F)) ^ a2)))();
}

uint64_t sub_100C3C5B4(uint64_t a1, int a2)
{
  unsigned __int8 v2;
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v2 ^ (v3 - 1)) & 1) * a2) ^ v3)))();
}

uint64_t sub_100C3C5F0()
{
  int v0;
  int v1;
  unint64_t v2;

  LODWORD(STACK[0xE1D8]) = v0;
  v2 = STACK[0x6AD8];
  STACK[0xD4C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v1 - 14192)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 - 12845)) - ((v1 - 14192) ^ 0x52D7u) + 22801))();
}

uint64_t sub_100C3C684(uint64_t a1, int a2)
{
  return ((uint64_t (*)(unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a2)
                                                           - ((a2 + 1370515026) & 0xAE4F74FF ^ 0x3463)))(STACK[0xA018] - 0x28623712C9340DAALL, (a2 + 1370515026) & 0xAE4F74FF);
}

uint64_t sub_100C3C744@<X0>(int a1@<W1>, int a2@<W6>, unint64_t a3@<X8>)
{
  unint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v3 > a3) * (((a1 ^ 0x26DC) - 1036830480) ^ a2)) ^ a1))
                            - 12))();
}

uint64_t sub_100C3C77C@<X0>(int a1@<W3>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2;
  a2[1] = v2[1];
  a2[2] = v2[2];
  a2[3] = v2[3];
  a2[4] = v2[4];
  a2[5] = v2[5];
  a2[6] = v2[6];
  a2[7] = v2[7];
  a2[8] = v2[8];
  a2[9] = v2[9];
  a2[10] = v2[10];
  a2[11] = v2[11];
  a2[12] = v2[12];
  a2[13] = v2[13];
  a2[14] = v2[14];
  a2[15] = v2[15];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - ((a1 - 573) ^ 0x107ALL)))();
}

uint64_t sub_100C3C818@<X0>(unsigned int a1@<W2>, int a2@<W6>, uint64_t a3@<X7>, _BYTE *a4@<X8>)
{
  _BYTE *v4;

  a4[15] = v4[15];
  a4[14] = v4[14];
  a4[13] = v4[13];
  a4[12] = v4[12];
  a4[11] = v4[11];
  a4[10] = v4[10];
  a4[9] = v4[9];
  a4[8] = v4[8];
  a4[7] = v4[7];
  a4[6] = v4[6];
  a4[5] = v4[5];
  a4[4] = v4[4];
  a4[3] = v4[3];
  a4[2] = v4[2];
  a4[1] = v4[1];
  *a4 = *v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(a1 ^ (a2 + 4037) ^ ((4 * (a1 < 0xEF367164)) | ((a1 < 0xEF367164) << 9))))
                            - ((a1 + 1036829789) | 0x76)
                            + a3))();
}

uint64_t sub_100C3C8E4()
{
  return ((uint64_t (*)(void))STACK[0xD4C0])();
}

uint64_t sub_100C3C8F4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;

  v7 = (STACK[0x6508] + 8084) | 0x465;
  v8 = STACK[0x6508] - 1180;
  *(_DWORD *)(v0 + 4) = v1;
  *(_QWORD *)(v0 + 368) = v2;
  v9 = *(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0xBEF1E5A8)) & 0x7FFFFFFFFFFFFFFFLL ^ 0x77A41B05FCE8D427;
  *(_QWORD *)(v0 + 448) = v9
                        + 0x40791AC78BD5C571
                        + 2 * ((v9 & (v7 ^ 0x40791AC78BD5F11ELL) | 0x20) ^ (v9 | 0xFFFFFFFFFFFFFFDFLL))
                        + 2;
  *(_QWORD *)(v0 + 432) = v3;
  *(_DWORD *)(v0 + 440) = *v4;
  *(_QWORD *)(v0 + 744) = v5;
  *(_BYTE *)(v0 + 764) = -7;
  *(_QWORD *)(v0 + 216) = v6;
  *(_DWORD *)(v0 + 224) = 67;
  v10 = STACK[0x6AD8];
  STACK[0xD4C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v8) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (v8 ^ 0x52C7)) - 12))();
}

uint64_t sub_100C3C9F4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  _BOOL4 v7;

  if ((v4 & 0x42061) != 0)
    v5 = -1926392729;
  else
    v5 = 1926417715;
  if (v3 != v2)
    v5 = v3;
  if ((v4 & 0xE) == 0xE)
    v6 = -1926392729;
  else
    v6 = 1926417715;
  if (v5 != -1926392729)
    v6 = v5;
  LODWORD(STACK[0xE1D8]) = v1;
  LODWORD(STACK[0xE23C]) = v6;
  v7 = (v4 & 0xE) == 0xE && v5 == -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (15908 * !v7)))
                            - (((v0 - 1627561221) & 0x6102E76Fu)
                             - 17316)
                            + 8379))();
}

uint64_t sub_100C3CAB0()
{
  unint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;

  v0 = STACK[0x6508];
  v1 = STACK[0x810C];
  LODWORD(STACK[0xD694]) = STACK[0x810C];
  v2 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x5DE7658C)) & 0x7FFFFFFF;
  v3 = (v2 ^ 0xC1380BF0) + v1;
  LODWORD(STACK[0xD698]) = -2045994307 * (v3 + 413384807);
  v4 = -2045994307 * (v3 + ((v0 + 7041) ^ 0xAF87F759));
  v5 = (v4 ^ 0x87C73307) & (2 * (v4 & 0xC7D60247)) ^ v4 & 0xC7D60247;
  v6 = ((2 * (v4 ^ 0x854F3389)) ^ 0x8532639C) & (v4 ^ 0x854F3389) ^ (2 * (v4 ^ 0x854F3389)) & 0x429931CE;
  v7 = v6 ^ 0x42891042;
  v8 = (v6 ^ 0x4011014E) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0xA64C738) & v7 ^ (4 * v7) & 0x429931CC;
  v10 = v8 ^ 0x429931CE ^ (v9 ^ 0x2000106) & (16 * v8);
  v11 = (16 * (v9 ^ 0x409930C6)) & 0x429931C0 ^ 0x4208210E ^ ((16 * (v9 ^ 0x409930C6)) ^ 0x29931CE0) & (v9 ^ 0x409930C6);
  v12 = (v10 << 8) & 0x42993100 ^ v10 ^ ((v10 << 8) ^ 0x9931CE00) & v11;
  v13 = (v12 << 16) & 0x42990000 ^ v12 ^ ((v12 << 16) ^ 0x31CE0000) & ((v11 << 8) & 0x42990000 ^ 0x42880000 ^ ((v11 << 8) ^ 0x99310000) & v11);
  v14 = -2045994307 * ((v2 ^ 0xC1380BF0) + (v2 ^ 0x3EC7F40F)) - 1804077042;
  v15 = (v14 ^ 0xF94022BE) & (2 * (v14 & 0xF194A2BE)) ^ v14 & 0xF194A2BE;
  v16 = ((2 * (v14 ^ 0x986067AA)) ^ 0xD3E98A28) & (v14 ^ 0x986067AA) ^ (2 * (v14 ^ 0x986067AA)) & 0x69F4C514;
  v17 = v16 ^ 0x28144514;
  v18 = (v16 ^ 0x60E0C004) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0xA7D31450) & v17 ^ (4 * v17) & 0x69F4C514;
  v20 = (v19 ^ 0x21D00400) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x4824C104)) ^ 0x9F4C5140) & (v19 ^ 0x4824C104) ^ (16 * (v19 ^ 0x4824C104)) & 0x69F4C510;
  v22 = v20 ^ 0x69F4C514 ^ (v21 ^ 0x9444114) & (v20 << 8);
  v23 = ((v22 << 16) ^ 0x45140000) & (((v21 ^ 0x60B08414) << 8) & 0x69F40000 ^ 0x9300000 ^ (((v21 ^ 0x60B08414) << 8) ^ 0x74C50000) & (v21 ^ 0x60B08414));
  v24 = (v14 ^ (2 * ((v22 << 16) & 0x69F40000 ^ v22 ^ v23)) ^ 0xA0552896) & (v4 ^ (2 * v13) ^ 0x60C73F25) ^ (v14 ^ (2 * ((v22 << 16) & 0x69F40000 ^ v22 ^ v23))) & 0x23115EFE;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((126 * ((v24 & 0x694133A5 ^ 0x69412185) + (v24 & 0x96BECC5A ^ 0x2100011) != 1262496004)) ^ ((int)v0 + 11180))))();
}

uint64_t sub_100C3CE7C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100C3D13C()
{
  BOOL v0;
  int v1;

  STACK[0xB050] = STACK[0xBEA8] + LODWORD(STACK[0xE1D8]);
  if (STACK[0xBAF8])
    v0 = STACK[0xA170] == 0;
  else
    v0 = 1;
  v1 = !v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((v1 * (STACK[0x3290] - 17027)) ^ LODWORD(STACK[0x328C])))
                            - STACK[0x3280]
                            + 1309))();
}

uint64_t sub_100C3D1B8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((231 * (LODWORD(STACK[0xE144]) - 833853339 >= (v0 ^ 0x468Au) - 1535)) ^ v0)))();
}

uint64_t sub_100C3D210()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC958] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 3733)) - 8))();
}

uint64_t sub_100C3D47C()
{
  int v0;
  BOOL v1;
  char v2;

  v0 = STACK[0x6508] + 3048;
  STACK[0xAC50] = STACK[0xBEA8] + LODWORD(STACK[0xE1D8]);
  if (STACK[0xBAF8])
    v1 = STACK[0xA170] == 0;
  else
    v1 = 1;
  v2 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((52
                                          * (((LODWORD(STACK[0x329C]) + 1) ^ v2) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100C3D4FC()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((v0 - 4224) ^ 0xFFFFE1A4 ^ (351
                                                                          * (((((_DWORD)v0 - 4224) ^ ((((LODWORD(STACK[0xE144]) - 833853339) ^ ((_DWORD)v0 - 4224)) & (v0 - 4224)) >> ((v0 + 0x80) ^ 0xE9 ^ __clz((LODWORD(STACK[0xE144]) - 833853339) ^ (v0 - 4224) | 1)))) & 1) == 0))))
                            - 12))();
}

uint64_t sub_100C3D590()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC958] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x116E)) - 8))();
}

uint64_t sub_100C3D814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;

  v6 = (STACK[0x6508] + 1145327336) & 0xBBBBE5F7;
  v7 = STACK[0x6508] - 3874;
  STACK[0xD658] = STACK[0xBEA8] + LODWORD(STACK[0xE13C]);
  v8 = STACK[0xC768];
  STACK[0xD660] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v8 + 16;
  STACK[0x9458] = 0x77F08B69E6123757;
  v9 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((v6 ^ 0x5E46) + v7)))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100C3D918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);

  v7 = STACK[0x6508];
  v8 = STACK[0xA628];
  *(_DWORD *)(v8 + 244) = -1926392713;
  *(_QWORD *)(v8 + 16) = STACK[0xC7E0];
  *(_DWORD *)(v8 + 24) = STACK[0x9844];
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((int)v7 + 1468));
  STACK[0xD238] = (v7 + 10973) - 15195 + *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v7 - 4049));
  return v9(a1, a2, a3, a4, 0xF26FC0784BC7DF30, 0x58292A32636B72E6, a7, 0x2AB629F33171E5F1);
}

uint64_t sub_100C3D9E8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100C3DA00()
{
  __int16 v0;
  int v1;
  unint64_t v2;
  uint64_t v3;

  v2 = STACK[0xB8D0];
  *(_DWORD *)(STACK[0xB8D0] - 0x28623712C9340CA6) = ((unsigned __int16)(v0 - 26430) ^ 0x7A7DD13B)
                                                    - 270598144
                                                    + (((v1 - 1746) ^ 0x1ABD2) & (2 * (unsigned __int16)(v0 - 26430)));
  v3 = ((uint64_t (*)(_QWORD))STACK[0x5510])((unsigned __int16)(v0 - 26430));
  *(_QWORD *)(v2 - 0x28623712C9340CAELL) = v3 + 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5982 * (v3 != 0)) ^ (v1 - 1746))) - 12))();
}

uint64_t sub_100C3DAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = STACK[0x7D18];
  v6 = STACK[0xB1D0];
  v7 = STACK[0x6AD8];
  STACK[0xA438] = *(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 12;
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(v7 + 8 * (v4 ^ 0x246E)) - (((v4 + 20828) | 0x42Bu) ^ 0x5F27)))(STACK[0x60B8], a2, v5, a4, v6);
}

uint64_t sub_100C3DB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v7 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 8;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((int)v6 + 4075)))(v7, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100C3DC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;

  v7 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 8;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)(v6 + 4086)))(v7, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100C3DD40()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  v0 = STACK[0x6508];
  v1 = STACK[0x6508] + 3621;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5510])(24);
  STACK[0x9458] = v2 + 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v2 == 0) * (v0 - 4181)) ^ v1)) - 4))();
}

uint64_t sub_100C3DDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = STACK[0x6508];
  v5 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v6 = STACK[0xB1D0];
  v7 = STACK[0x6AD8];
  STACK[0xA438] = ((STACK[0x6508] + 1795845877) & 0x94F5DFBF)
                - 24375
                + *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1709));
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(v7 + 8 * ((int)v4 + 7508)) - 12))(STACK[0x60B8], a2, v5, a4, v6);
}

uint64_t sub_100C3DE68()
{
  int v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] + 9436;
  LODWORD(STACK[0xD134]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + (int)v1 - 13322)) - 12))();
}

uint64_t sub_100C3DEEC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((2784 * (LODWORD(STACK[0xD134]) == STACK[0x2EE0] - 1926395464)) ^ LODWORD(STACK[0x2B30])))
                            - 4))();
}

uint64_t sub_100C3DF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x2EE0] ^ 0x18A2))
                                                                                                - ((STACK[0x2EE0]
                                                                                                  - 2575) | 0x3E1C)
                                                                                                + 16052))(a1, a2, a3, a4, a5, 581925057, 1301527240);
}

uint64_t sub_100C3DFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;

  v4 = STACK[0x6508];
  STACK[0xAF80] = 0x3B2B85D6199E010FLL * v3 + 0x283834400B3883F9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                                                                 * ((int)v4 + 3115))
                                                                     - 8))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3E040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  _QWORD *v6;
  _DWORD *v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;

  v8 = STACK[0x6508] - 1706;
  v9 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (*v7 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) - 983699745);
  v10 = (v9 ^ 0x2B430EF9) & (2 * (v9 & 0xAA624EFD)) ^ v9 & 0xAA624EFD;
  v11 = ((2 * (v9 ^ 0x2B039E2B)) ^ 0x2C3A1AC) & (v9 ^ 0x2B039E2B) ^ (2 * (v9 ^ 0x2B039E2B)) & 0x8161D0D6;
  v12 = v11 ^ 0x81205052;
  v13 = (v11 ^ 0x210086) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0x5874358) & v12 ^ (4 * v12) & 0x8161D0D4;
  v15 = (v14 ^ 0x1014056) & (16 * v13) ^ v13;
  v16 = ((16 * (v14 ^ 0x80609086)) ^ 0x161D0D60) & (v14 ^ 0x80609086) ^ (16 * (v14 ^ 0x80609086)) & 0x8161D0D0;
  v17 = v15 ^ 0x8161D0D6 ^ (v16 ^ 0x10096) & (v15 << 8);
  *(_DWORD *)(v5 + 4) = v9 ^ 0x250C7B36 ^ (2
                                         * ((v17 << 16) & 0x1610000 ^ v17 ^ ((v17 << 16) ^ 0x50D60000) & (((v16 ^ 0x8160D096) << 8) & 0x81610000 ^ 0x210000 ^ (((v16 ^ 0x8160D096) << 8) ^ 0x61D00000) & (v16 ^ 0x8160D096))));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * (v8 ^ 0x2A1D ^ (25617
                                                                                       * ((v8 ^ 0xA73B5996) > 0xE7730F8E)))))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3E23C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 4866)))();
}

uint64_t sub_100C3E250()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100C3E4AC(uint64_t a1, int a2)
{
  unint64_t v2;

  v2 = STACK[0x6508];
  LODWORD(STACK[0x810C]) = a2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((v2 - 1739) ^ 0x2A7A)))();
}

uint64_t sub_100C3E4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;

  v8 = STACK[0x6508];
  v9 = *v7;
  v10 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (v9 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) - 1569514713);
  v11 = (v10 ^ 0xFDBC69C4) & (2 * (v10 & 0xF1BD4DD5)) ^ v10 & 0xF1BD4DD5;
  v12 = ((2 * (v10 ^ 0x3CB470C4)) ^ 0x9A127A22) & (v10 ^ 0x3CB470C4) ^ (2 * (v10 ^ 0x3CB470C4)) & 0xCD093D10;
  v13 = v12 ^ 0x45090511;
  v14 = (v12 ^ 0x88003801) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x3424F444) & v13 ^ (4 * v13) & 0xCD093D10;
  v16 = (v15 ^ 0x4003401) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0xC9090911)) ^ 0xD093D110) & (v15 ^ 0xC9090911) ^ (16 * (v15 ^ 0xC9090911)) & 0xCD093D10;
  v18 = v16 ^ 0xCD093D11 ^ (v17 ^ 0xC0011101) & (v16 << 8);
  *(_DWORD *)(v5 + 492) = *(_DWORD *)(*v6 + (v9 & 0x76AF6350)) & 0x7FFFFFFF ^ v10 ^ (2
                                                                                   * ((v18 << 16) & 0x4D090000 ^ v18 ^ ((v18 << 16) ^ 0x3D110000) & (((v17 ^ 0xD082C01) << 8) & 0x4D090000 ^ 0x44000000 ^ (((v17 ^ 0xD082C01) << 8) ^ 0x93D0000) & (v17 ^ 0xD082C01)))) ^ 0x483DC80B;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * ((25619
                                                                         * ((((_DWORD)v8 - 1751) ^ 0xCB4E3D89) < 0x906A2D8A)) ^ ((int)v8 + 4955))))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3E70C(uint64_t a1, int a2)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((24054
                                               * (2045994307 * ((v3 ^ 0xC1380BF0) + 344394080 + 2 * v2 - a2 + 1025) == (LODWORD(STACK[0x4B08]) ^ 0xB9BF7057))) ^ (STACK[0x6508] - 3810)))
                            - 12))();
}

uint64_t sub_100C3E78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * (v3 ^ 0x3A2E ^ (v3 - 1705815818) & 0x65ACB5F6)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3E7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  v8 = STACK[0x6508];
  v9 = *v7;
  v10 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (v9 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) - 2018422361);
  v11 = (v10 ^ 0xBF961101) & (2 * (v10 & 0xB8061155)) ^ v10 & 0xB8061155;
  v12 = ((2 * (v10 ^ 0xAF9A130B)) ^ 0x2F3804BC) & (v10 ^ 0xAF9A130B) ^ (2 * (v10 ^ 0xAF9A130B)) & 0x179C025E;
  v13 = v12 ^ 0x10840242;
  v14 = (v12 ^ 0x1C001C) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x5E700978) & v13 ^ (4 * v13) & 0x179C025C;
  v16 = (v15 ^ 0x16100056) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x18C0206)) ^ 0x79C025E0) & (v15 ^ 0x18C0206) ^ (16 * (v15 ^ 0x18C0206)) & 0x179C0250;
  v18 = v16 ^ 0x179C025E ^ (v17 ^ 0x1180001E) & (v16 << 8);
  *(_DWORD *)(v5 + 468) = *(_DWORD *)(*v6 + (int)(v9 & 0x86CA5F68)) & 0x7FFFFFFF ^ 0x91D6BD18 ^ v10 ^ (2 * ((v18 << 16) & 0x179C0000 ^ v18 ^ ((v18 << 16) ^ 0x25E0000) & (((v17 ^ 0x61C021E) << 8) & 0x179C0000 ^ 0x39C0000 ^ (((v17 ^ 0x61C021E) << 8) ^ 0x1C020000) & (v17 ^ 0x61C021E))));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((int)v8 + 4955)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3E9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;

  v8 = *v7;
  v9 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (v8 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) - 1675593881);
  v10 = (2 * (v9 & 0x8041B295 ^ 0xA9254921)) & 0x14120 ^ v9 & 0x8041B295 ^ 0xA9254921 ^ ((2
                                                                                        * (v9 & 0x8041B295 ^ 0xA9254921)) ^ 0x524A9242) & (v9 ^ 0x2964FBB4);
  v11 = (2 * (v9 ^ 0x2964FBB4)) & 0xA9254920 ^ 0xA9254921 ^ ((2 * (v9 ^ 0x2964FBB4)) ^ 0x524A9242) & (v9 ^ 0x2964FBB4);
  v12 = (4 * v10) & 0xA9254920 ^ v10 ^ ((4 * v10) ^ 0xA4952484) & v11;
  v13 = (4 * v11) & 0xA9254920 ^ 0x9204921 ^ ((4 * v11) ^ 0xA4952484) & v11;
  v14 = (16 * v12) & 0xA9254920 ^ v12 ^ ((16 * v12) ^ 0x92049210) & v13;
  v15 = (16 * v13) & 0xA9254920 ^ 0x29214921 ^ ((16 * v13) ^ 0x92549210) & v13;
  v16 = v14 ^ (v14 << 8) & 0xA9254900 ^ ((v14 << 8) ^ 0x24492100) & v15 ^ 0x100;
  v17 = STACK[0x6508];
  *(_DWORD *)(v5 + 488) = *(_DWORD *)(*v6 + (int)(v8 & 0xFEB89B00)) & 0x7FFFFFFF ^ v9 ^ (2
                                                                                       * ((v16 << 16) & 0x29250000 ^ v16 ^ ((v16 << 16) ^ 0x49210000) & ((v15 << 8) & 0x29250000 ^ 0x8240000 ^ ((v15 << 8) ^ 0x25490000) & v15))) ^ 0xDABBCFAD;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8 * (int)((v17 - 1693) ^ 0x2A08)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3EC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;

  v8 = STACK[0x6508];
  v9 = *v7;
  v10 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (v9 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) + 337158772);
  v11 = (v10 ^ 0x81AB47FD) & (2 * (v10 & 0xD18817FC)) ^ v10 & 0xD18817FC;
  v12 = ((2 * (v10 ^ 0xA1AB4385)) ^ 0xE046A8F2) & (v10 ^ 0xA1AB4385) ^ (2 * (v10 ^ 0xA1AB4385)) & 0x70235478;
  v13 = v12 ^ 0x10215409;
  v14 = (v12 ^ 0x50010079) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0xC08D51E4) & v13 ^ (4 * v13) & 0x70235478;
  v16 = (v15 ^ 0x40015079) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x30220419)) ^ 0x2354790) & (v15 ^ 0x30220419) ^ (16 * (v15 ^ 0x30220419)) & 0x70235470;
  v18 = v16 ^ 0x70235479 ^ (v17 ^ 0x214469) & (v16 << 8);
  *(_DWORD *)(v5 + 464) = *(_DWORD *)(*v6 + (v9 & 0x319FF688)) & 0x7FFFFFFF ^ v10 ^ (2
                                                                                   * ((v18 << 16) & 0x70230000 ^ v18 ^ ((v18 << 16) ^ 0x54790000) & (((v17 ^ 0x70021069) << 8) & 0x70230000 ^ 0x50230000 ^ (((v17 ^ 0x70021069) << 8) ^ 0x23540000) & (v17 ^ 0x70021069)))) ^ 0xDDE19A72;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((int)v8 + 4955)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3EDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;

  v8 = STACK[0x6508];
  v9 = *v7;
  v10 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (v9 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) + 233128690);
  v11 = (v10 ^ 0xDB918EE7) & (2 * (v10 & 0xD301CEF6)) ^ v10 & 0xD301CEF6;
  v12 = ((2 * (v10 ^ 0xDB929787)) ^ 0x1126B2E2) & (v10 ^ 0xDB929787) ^ (2 * (v10 ^ 0xDB929787)) & 0x8935970;
  v13 = v12 ^ 0x8914911;
  v14 = (v12 ^ 0x921061) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x224D65C4) & v13 ^ (4 * v13) & 0x8935970;
  v16 = (v15 ^ 0x14151) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x8921831)) ^ 0x89359710) & (v15 ^ 0x8921831) ^ (16 * (v15 ^ 0x8921831)) & 0x8935970;
  v18 = v16 ^ 0x8935971 ^ (v17 ^ 0x8111161) & (v16 << 8);
  *(_DWORD *)(v5 + 464) = *(_DWORD *)(*v6 + (v9 & 0x319FF688)) & 0x7FFFFFFF ^ v10 ^ (2
                                                                                   * ((v18 << 16) & 0x8930000 ^ v18 ^ ((v18 << 16) ^ 0x59710000) & (((v17 ^ 0x824861) << 8) & 0x8930000 ^ 0x8820000 ^ (((v17 ^ 0x824861) << 8) ^ 0x13590000) & (v17 ^ 0x824861)))) ^ 0x9E685968;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8 * (int)((v8 - 1703) ^ 0x2A1E)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3EFE0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  _BOOL4 v18;
  _BOOL4 v19;

  v2 = STACK[0x6508] + 1938;
  v3 = v2 ^ 0x48EB;
  v4 = v2 | 0x2082;
  v5 = STACK[0x6508] + 3573;
  v6 = -2045994307 * ((v1 ^ 0xC1380BF0) - 264915418 + v0);
  v7 = (v6 ^ v4 ^ 0x319E4100) & (2 * (v6 & 0xB9DF7992)) ^ v6 & 0xB9DF7992;
  v8 = ((2 * ((v3 - 232265711) ^ v6)) ^ 0x97EE82CC) & ((v3 - 232265711) ^ v6) ^ (2 * ((v3 - 232265711) ^ v6)) & 0x4BF74166;
  v9 = v8 ^ 0x48114122;
  v10 = (v8 ^ 0x3E60040) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x2FDD0598) & v9 ^ (4 * v9) & 0x4BF74164;
  v12 = (v11 ^ 0xBD50100) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x40224066)) ^ 0xBF741660) & (v11 ^ 0x40224066) ^ (16 * (v11 ^ 0x40224066)) & 0x4BF74160;
  v14 = v12 ^ 0x4BF74166 ^ (v13 ^ 0xB740000) & (v12 << 8);
  v15 = v6 ^ (2
            * ((v14 << 16) & 0x4BF70000 ^ v14 ^ ((v14 << 16) ^ 0x41660000) & (((v13 ^ 0x40834106) << 8) & 0x4BF70000 ^ 0x8B60000 ^ (((v13 ^ 0x40834106) << 8) ^ 0x77410000) & (v13 ^ 0x40834106))));
  LODWORD(STACK[0x9ED8]) = v15 ^ 0x21D06F39;
  LODWORD(STACK[0xBAB4]) += 4;
  v16 = (((v15 ^ 0x3674E991) - 396658344) ^ ((v15 ^ 0x3C221039) - 502431488) ^ ((v15 ^ 0xA6AB02F6) + 2021954097))
      + 1603579277;
  v17 = LODWORD(STACK[0x9418]) - 984490319;
  v18 = v16 < 0xD2671926;
  v19 = v16 > v17;
  if (v17 < 0xD2671926 != v18)
    v19 = v18;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((460 * !v19) ^ v5)) - 12))(1733415904);
}

uint64_t sub_100C3F270()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((v1 == 219495029) ^ (v0 + 89)) & 1)
                                               * (((v0 + 1347577385) & 0xAFAD7F6E) + 22814)) ^ v0))
                            - 8))();
}

uint64_t sub_100C3F2CC()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;

  v4 = (((v2 + 3842) | 2) ^ 0x651DA7D5) + v1 + v0 + 1199413305;
  v5 = v4 < v1 - 1179624031;
  if (v3 > 0x464FA262 != v4 < 0xB9B05D9D)
    v5 = v3 > 0x464FA262;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v5 * (((v2 + 12959) | 0x22) - 20634)) | v2)) - 12))();
}

uint64_t sub_100C3F360()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v3 = v1 - 276440563;
  v4 = v3 < (v2 ^ 0xFC9B6947 ^ (v2 - 1269119023) & 0x4BA55BEB);
  v5 = v0 - 1475853864 < v3;
  if ((v0 - 1475853864) < 0xFC9B1482 != v4)
    v5 = v4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((4 * !v5) | (!v5 << 6)) ^ v2)))();
}

uint64_t sub_100C3F3F4()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v3 = v0 - 1342548702 + v1 - 504263171;
  v4 = v3 < ((v1 + 9145) ^ 0xE67EB210);
  v5 = v3 > v2;
  if (v2 < 0xE67EE2F3 != v4)
    v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29 * !v5) ^ v1)) - 4))();
}

uint64_t sub_100C3F474()
{
  unsigned int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 2060) = -1926392729;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v0 ^ 0xE1F1F71B ^ ((((v0 + 504253147) | 0x5810) ^ 0x7028)
                                                                 * (v0 > 0x6C934C51))))
                            - 8))();
}

uint64_t sub_100C3F4D8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((47 * (v1 >= (uint64_t)0xF09B3C1F33D778B3)) ^ v0))
                            - 12))();
}

uint64_t sub_100C3F514()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((98 * (v1 < ((((v0 - 17381) ^ 0x5215u) - 806599679) ^ 0x4E3DA0FC4EB2DC1CLL))) ^ (v0 - 17381)))
                            - 12))();
}

uint64_t sub_100C3F568()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v0 ^ 0xCFECD2BE ^ (23
                                                                 * ((v1 & ~(v0 | ((unint64_t)(v0 ^ 0x35014F14) << 32)) | ((v0 | ((unint64_t)(v0 ^ 0x35014F14) << 32)) ^ ~v1) & (v1 - (v0 | ((unint64_t)(v0 ^ 0x35014F14) << 32)))) >> 63))))
                            - 8))();
}

uint64_t sub_100C3F5BC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((10950 * (v1 == ((v0 + 806581571) ^ 0x894u) - 0xF64C3E0CC289135)) ^ (v0 + 806581571)))
                            - (((v0 + 806585389) | 0x10u) ^ 0x1072)))();
}

uint64_t sub_100C3F628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((v3 + 8273) ^ v3)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3F698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int *v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;

  v8 = STACK[0x6508] - 1669;
  v9 = *v7;
  v10 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (v9 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) - 825476620);
  v11 = (v10 ^ 0xC7AEBD7F) & (2 * (v10 & 0xD7CE3E7C)) ^ v10 & 0xD7CE3E7C;
  v12 = ((2 * (v10 ^ 0x4736891F)) ^ 0x21F16EC6) & (v10 ^ 0x4736891F) ^ (2 * (v10 ^ 0x4736891F)) & 0x90F8B762;
  v13 = v12 ^ 0x90089121;
  v14 = (v12 ^ 0x702241) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x43E2DD8C) & v13 ^ (4 * v13) & 0x90F8B760;
  v16 = (v15 ^ 0xE09503) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x90182263)) ^ 0xF8B7630) & (v15 ^ 0x90182263) ^ (16 * (v15 ^ 0x90182263)) & 0x90F8B760;
  v18 = v16 ^ 0x90F8B763 ^ (v17 ^ 0x883643) & (v16 << 8);
  *(_DWORD *)(v5 + 488) = *(_DWORD *)(*v6 + (int)(v9 & 0xFEB89B00)) & 0x7FFFFFFF ^ v10 ^ (2
                                                                                        * ((v18 << 16) & 0x10F80000 ^ v18 ^ ((v18 << 16) ^ 0x37630000) & (((v17 ^ 0x90708143) << 8) & 0x10F80000 ^ 0x480000 ^ (((v17 ^ 0x90708143) << 8) ^ 0xF8B70000) & (v17 ^ 0x90708143)))) ^ 0xCC0DBFC0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v8 ^ 0x2A20)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3F8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  _QWORD *v5;
  _DWORD *v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;

  v7 = STACK[0x6508];
  v8 = -2045994307 * (v3 + (*(_DWORD *)(*v5 + (*v6 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) - 754057589);
  v9 = (v8 ^ 0xC1E074C9) & (2 * (v8 & 0xE1E94501)) ^ v8 & 0xE1E94501;
  v10 = ((2 * (v8 ^ 0x4060FEC9)) ^ 0x43137790) & (v8 ^ 0x4060FEC9) ^ (2 * (v8 ^ 0x4060FEC9)) & 0xA189BBC8;
  v11 = v10 ^ 0xA0888848;
  v12 = (v10 ^ 0x2101B040) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0x8626EF20) & v11 ^ (4 * v11) & 0xA189BBC8;
  v14 = (v13 ^ 0x8000AB08) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x218910C8)) ^ 0x189BBC80) & (v13 ^ 0x218910C8) ^ (16 * (v13 ^ 0x218910C8)) & 0xA189BBC0;
  v16 = v14 ^ 0xA189BBC8 ^ (v15 ^ 0x89B800) & (v14 << 8);
  v17 = v8 ^ (2
            * ((v16 << 16) & 0x21890000 ^ v16 ^ ((v16 << 16) ^ 0x3BC80000) & (((v15 ^ 0xA1000348) << 8) & 0x21890000 ^ (((v15 ^ 0xA1000348) << 8) ^ 0x9BB0000) & (v15 ^ 0xA1000348) ^ 0x20000000)));
  LODWORD(STACK[0x9418]) = (((v17 ^ 0x1190A5B3) - 1345792116) ^ ((v17 ^ 0x71CD0112) - 812289237) ^ ((v17 ^ 0x81B79630)
                                                                                                  + 1072686089))
                         - 1386022453;
  LODWORD(STACK[0xBAB4]) += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((int)v7 + 4955)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3FB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int *v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;

  v8 = STACK[0x6508] - 1760;
  v9 = *v7;
  v10 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (v9 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) + 1220687509);
  v11 = (v10 ^ 0xB50DC91F) & (2 * (v10 & 0xB5ADE19F)) ^ v10 & 0xB5ADE19F;
  v12 = ((2 * (v10 ^ 0xF415C901)) ^ 0x8370513C) & (v10 ^ 0xF415C901) ^ (2 * (v10 ^ 0xF415C901)) & 0x41B8289E;
  v13 = v12 ^ 0x40882882;
  v14 = (v12 ^ 0x130201E) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x6E0A278) & v13 ^ (4 * v13) & 0x41B8289C;
  v16 = (v15 ^ 0xA02016) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x41180886)) ^ 0x1B8289E0) & (v15 ^ 0x41180886) ^ (16 * (v15 ^ 0x41180886)) & 0x41B82890;
  v18 = v16 ^ 0x41B8289E ^ (v17 ^ 0x180081E) & (v16 << 8);
  *(_DWORD *)(v5 + 464) = *(_DWORD *)(*v6 + (v9 & 0x319FF688)) & 0x7FFFFFFF ^ v10 ^ (2
                                                                                   * ((v18 << 16) & 0x41B80000 ^ v18 ^ ((v18 << 16) ^ 0x289E0000) & (((v17 ^ 0x4038201E) << 8) & 0x41B80000 ^ 0x41900000 ^ (((v17 ^ 0x4038201E) << 8) ^ 0xB8280000) & (v17 ^ 0x4038201E)))) ^ 0x7B8095DF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v8 ^ 0x2A47)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C3FD28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unsigned int *v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;

  v5 = STACK[0x6508];
  v6 = *v4;
  v7 = -2045994307 * (v0 - 15334653 + (*(_DWORD *)(*v3 + (v6 & v1)) & 0x7FFFFFFF ^ 0xC1380BF0));
  v8 = (v7 ^ 0x77A9E369) & (2 * (v7 & 0x87ADC869)) ^ v7 & 0x87ADC869;
  v9 = ((2 * (v7 ^ 0x7CF2636B)) ^ 0xF6BF5604) & (v7 ^ 0x7CF2636B) ^ (2 * (v7 ^ 0x7CF2636B)) & 0xFB5FAB02;
  v10 = v9 ^ 0x940A902;
  v11 = (v9 ^ 0x321F0200) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0xED7EAC08) & v10 ^ (4 * v10) & 0xFB5FAB00;
  v13 = (v12 ^ 0xE95EA800) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x12010302)) ^ 0xB5FAB020) & (v12 ^ 0x12010302) ^ (16 * (v12 ^ 0x12010302)) & 0xFB5FAB00;
  v15 = v13 ^ 0xFB5FAB02 ^ (v14 ^ 0xB15AA000) & (v13 << 8);
  *(_DWORD *)(v2 + 468) = *(_DWORD *)(*v3 + (int)(v6 & 0x86CA5F68)) & 0x7FFFFFFF ^ v7 ^ (2
                                                                                       * ((v15 << 16) & 0x7B5F0000 ^ v15 ^ ((v15 << 16) ^ 0x2B020000) & (((v14 ^ 0x4A050B02) << 8) & 0xFB5F0000 ^ 0x20540000 ^ (((v14 ^ 0x4A050B02) << 8) ^ 0x5FAB0000) & (v14 ^ 0x4A050B02)))) ^ 0x25C6369C;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((v5 - 1732) ^ 0x2A63)))();
}

uint64_t sub_100C3FF3C()
{
  int v0;
  unsigned int v1;
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = STACK[0x6508];
  v6 = -1774869232 - 2045994307 * (v0 + (*(_DWORD *)(*v2 + (*v4 & v1)) & 0x7FFFFFFF ^ 0xC1380BF0) - 2086116060);
  v7 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((int)(STACK[0x6508] - 558336790) ^ 0x1FFFFFFFDEB895FELL)) - 4;
  LODWORD(STACK[0xEE20]) = (v5 - 558336790) ^ 0xFA1;
  LODWORD(STACK[0xEE50]) = v5 - 558336790;
  STACK[0xEE30] = 3710789893;
  STACK[0xEE58] = v6;
  LODWORD(STACK[0xEE60]) = (v5 - 558336790) ^ 0x2F;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v3 - 240) & 0x56D27FA0) - (v3 - 240) + 690847834) ^ 0x14BF5F03)
                          + v5;
  v8 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v8);
}

uint64_t sub_100C40078(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((STACK[0x6A80] + LODWORD(STACK[0xBAB4]) > STACK[0x6A70]) * (((STACK[0x6508] - 170761599) & 0xA2DAFFD) + 20370)) ^ (STACK[0x6508] + 4706))) - 4))(a1, a2, 1772489163, STACK[0x60C0], STACK[0x60B8], STACK[0x4A60], STACK[0x4A58], STACK[0x4A50]);
}

uint64_t sub_100C40104@<X0>(int a1@<W2>, _QWORD *a2@<X3>, _DWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;

  v11 = v10 + (a7 + v7 + 8);
  v12 = ((v11 ^ *(_DWORD *)(*a2 + (*a3 & ((v8 ^ 0x2B20) + 1301524723)))) & 0x7FFFFFFF) * a1;
  v13 = (v12 ^ HIWORD(v12)) * a1;
  *(_BYTE *)(v9 + v7 + 793) = *(_BYTE *)(a6 + (v13 >> 24)) ^ *(_BYTE *)(v11 - 0x77F08B69E6123757) ^ *(_BYTE *)(a4 + (v13 >> 24) + 1) ^ *(_BYTE *)(a5 + (v13 >> 24) + 1) ^ v13 ^ (-97 * BYTE3(v13));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29354 * (v7 != 15)) ^ v8)) - 4))();
}

uint64_t sub_100C401C0@<X0>(int a1@<W2>, _QWORD *a2@<X3>, _DWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;

  v11 = a7 + v8;
  v12 = v8 - 1;
  v13 = v10 + v11 + 839 * (v7 ^ 0x22DBu) - 2510;
  v14 = ((v13 ^ *(_DWORD *)(*a2 + (*a3 & 0x4D93BAC8))) & 0x7FFFFFFF) * a1;
  v15 = (v14 ^ HIWORD(v14)) * a1;
  *(_BYTE *)(v9 + v12 + 793) = *(_BYTE *)(a6 + (v15 >> 24)) ^ *(_BYTE *)(v13 - 0x77F08B69E6123757) ^ *(_BYTE *)(a4 + (v15 >> 24) + 1) ^ *(_BYTE *)(a5 + (v15 >> 24) + 1) ^ v15 ^ (-97 * BYTE3(v15));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((45 * (v12 == 0)) ^ v7)) - 4))();
}

uint64_t sub_100C4027C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8 * (v3 ^ 0x3A72 ^ (v3 + 1697))))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C402F0()
{
  int v0;
  unsigned int v1;
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = STACK[0x6508];
  v6 = -1297555272 - 2045994307 * (v0 + (*(_DWORD *)(*v2 + (*v4 & v1)) & 0x7FFFFFFF ^ 0xC1380BF0) - 781273632);
  v7 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 571743420) ^ 0x22143DAC)) - 4;
  LODWORD(STACK[0xEE20]) = v5 + 571740950;
  LODWORD(STACK[0xEE50]) = v5 + 571743420;
  STACK[0xEE30] = v6;
  STACK[0xEE58] = 3798734713;
  LODWORD(STACK[0xEE60]) = v5 + 571743434;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v3 - 240) | 0xD5AA3D3) - ((v3 - 240) & 0xD5AA3D3)) ^ 0x30C87C8A)
                          + v5;
  v8 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v8);
}

uint64_t sub_100C40414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * (int)((STACK[0x6508] - 1688) ^ 0x2A0F ^ (25726 * (((STACK[0x6508] - 1688) ^ 0x3319C12D) > 0x7C82F849)))))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C404BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  unsigned int *v5;
  _QWORD *v6;
  _DWORD *v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;

  v8 = STACK[0x6508];
  v9 = -2045994307 * (v3 + (*(_DWORD *)(*v6 + (*v7 & v4)) & 0x7FFFFFFF ^ 0xC1380BF0) + 2102819398);
  v10 = (2 * (v9 & 0xE1336DF2 ^ 0x144A9408)) & 0x429000 ^ v9 & 0xE1336DF2 ^ 0x144A9408 ^ ((2
                                                                                         * (v9 & 0xE1336DF2 ^ 0x144A9408)) ^ 0x28952810) & (v9 ^ 0xF579F9FA);
  v11 = ~(2 * (v9 ^ 0xF579F9FA)) & 0x144A9408 ^ ((2 * (v9 ^ 0xF579F9FA)) ^ 0x28952810) & (v9 ^ 0xF579F9FA);
  v12 = (4 * v10) & 0x144A9408 ^ v10 ^ ((4 * v10) ^ 0x512A5020) & v11;
  v13 = (4 * v11) & 0x144A9408 ^ 0x4408408 ^ ((4 * v11) ^ 0x512A5020) & v11;
  v14 = v12 ^ 0x14021000 ^ (16 * v12) & 0x144A9400 ^ ((16 * v12) ^ 0x44084080) & v13;
  v15 = (16 * v13) & 0x144A9400 ^ 0x10429408 ^ ((16 * v13) ^ 0x44A94080) & v13;
  v16 = (v14 << 8) & 0x144A9400 ^ v14 ^ ((v14 << 8) ^ 0x4A940800) & v15;
  *v5 = v9 ^ (2
            * ((v16 << 16) & 0x144A0000 ^ v16 ^ ((v16 << 16) ^ 0x14080000) & ((v15 << 8) & 0x144A0000 ^ 0x144A0000 ^ ((v15 << 8) ^ 0x4A940000) & v15))) ^ 0x6C9BD185;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((int)v8 + 4955)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C406AC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v1 < (uint64_t)0xA1A5606161E7A9F9) ^ (((v0 + 118) | 5) - 6)) & 1)
                                          * ((((v0 - 1930) | 5) - 5872) ^ 0x3F8C)) ^ ((v0 - 1930) | 5)))
                            - 8))();
}

uint64_t sub_100C40720()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((15
                                          * (v2 >= (uint64_t)(((v0 - 22105) | 0x148u) ^ (unint64_t)(v1 + 228)))) ^ (v0 - 10759)))
                            - 4))();
}

uint64_t sub_100C4076C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((22
                                          * (v1 < ((((v0 + 2938) | 0x401) + 159953926) | 0x60310048u)
                                                - 0x2463331CFB48BF7CLL)) ^ ((v0 + 2938) | 0x401)))
                            - 8))();
}

uint64_t sub_100C407D4()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v0 ^ 0x69B9F133 ^ (10949
                                                                 * ((((v1
                                                                     - (v0 | ((unint64_t)(v0 + 1759803524) << 32))) | ((v0 | ((unint64_t)(v0 + 1759803524) << 32)) - v1)) & 0x8000000000000000) == 0))))
                            - (v0 - 1773789145)
                            + 4210))();
}

uint64_t sub_100C40844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v3 ^ 0x2A0E)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C408B8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((107
                                          * (((v1 < 0x6A4687DA031CD0F5) ^ (49 * (v0 ^ 0x3F))) & 1)) ^ v0))
                            - ((v0 - 38480445) & 0x24AFF5E ^ 0x1D5ELL)))();
}

uint64_t sub_100C40924()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((v0 ^ 0x54C3 ^ (v1 < 0x64B9E383943A1470)) & 1) == 0)
                                * (((v0 - 21449) | 0xE00) ^ 0xFB5)) ^ v0)))();
}

uint64_t sub_100C4097C()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * (int)((18109 * (v1 == (v0 ^ 0x4E3DA0FC815E5FABLL))) ^ v0))
                            - ((301 * (v0 ^ 0xF80)) ^ 0x107ELL)))();
}

uint64_t sub_100C409E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v3 + 6641)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C40A4C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((60
                                          * (((v1 < (uint64_t)0x84DB45763809976FLL) ^ (((v0 - 56) ^ 0xF1) + 1)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100C40A9C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((a1 ^ 0x11E2) + 16458 + ((a1 + v1) & 0x7C453BDB))
                                          * (v2 == 0x839C98B72E7E6B16)) ^ a1))
                            - 12))();
}

uint64_t sub_100C40AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v3 ^ 0x2A12u)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C40B6C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v0 + 806594103) | 4) ^ 0x327D) * (v1 < 0x3B375930C12C4869)) | (v0 + 806594103) | 4))
                            - (((v0 + 806594103) | 4) ^ 0x3DFAu)
                            + 3974))();
}

uint64_t sub_100C40BC0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((22210 * (v2 == v1 + (v0 - 1464) - 2518)) ^ v0))
                            - ((v0 + 1013572200) & 0xC3961E7F)
                            + 4206))();
}

uint64_t sub_100C40C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v3 + 6651)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C40CA0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v2 == ((a1 + 426) ^ 0xDB9CCCE36E7120A5))
                                          * (((a1 + 488169265) & (v1 + 251)) + 15297)) ^ a1))
                            - 12))();
}

uint64_t sub_100C40CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v3 ^ 0x2A34)))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C40D6C(uint64_t a1, int a2)
{
  int v2;
  unint64_t v3;

  v3 = STACK[0x6508];
  *(_DWORD *)(STACK[0xE6A0] + 8) = 2045994307 * (v2 - a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v3 + 494)) - 8))();
}

uint64_t sub_100C40DB8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v4 = STACK[0x6508] + 15716;
  v5 = STACK[0xE6A0];
  v6 = ((STACK[0x6508] - 349548791) & 0x14D5EBFB ^ 0x860CD1C6) * ((v3 ^ 0xC1380BF0) - 1574765693 + v2);
  v7 = (v6 ^ 0xB39D19C1) & (2 * (v6 & 0xB39D51E9)) ^ v6 & 0xB39D51E9;
  v8 = (((v6 ^ 0xD4B71B41) << (STACK[0x6508] - 117)) ^ 0xCE549550) & (v6 ^ 0xD4B71B41) ^ ((v6 ^ 0xD4B71B41) << (STACK[0x6508] - 117)) & 0x672A4AA8;
  v9 = v8 ^ 0x212A4AA8;
  v10 = (v8 ^ 0x46000000) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x9CA92AA0) & v9 ^ (4 * v9) & 0x672A4AA8;
  v12 = (v11 ^ 0x4280AA8) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x63024008)) ^ 0x72A4AA80) & (v11 ^ 0x63024008) ^ (16 * (v11 ^ 0x63024008)) & 0x672A4AA0;
  v14 = v12 ^ 0x672A4AA8 ^ (v13 ^ 0x62200A28) & (v12 << 8);
  v15 = v6 ^ (2
            * ((v14 << 16) & 0x672A0000 ^ v14 ^ ((v14 << 16) ^ 0x4AA80000) & (((v13 ^ 0x50A4028) << 8) & 0x672A0000 ^ 0x45200000 ^ (((v13 ^ 0x50A4028) << 8) ^ 0x2A4A0000) & (v13 ^ 0x50A4028)))) ^ 0x74B450DE;
  *(_DWORD *)(v5 + 472) = v15;
  v17 = (*(_DWORD *)(a1 + (int)(v1 & 0x86CA5F68)) & 0x7FFFFFFF ^ *(_DWORD *)(v5 + 468)) == 0x2D0A8F1
     && v15 == -1926392729;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((54 * v17) ^ v4)))();
}

uint64_t sub_100C40FD8()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100C4105C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;

  v4 = STACK[0x6508] - 3834;
  v5 = STACK[0xE6A0];
  v6 = -2045994307 * ((v3 ^ 0xC1380BF0) - 1971140549 + v2);
  v7 = (v6 ^ 0x9ADF7FC0) & (2 * (v6 & 0x9B1C7E11)) ^ v6 & 0x9B1C7E11;
  v8 = ((2 * (v6 ^ 0xBACF57C2)) ^ 0x43A653A6) & (v6 ^ 0xBACF57C2) ^ (2 * (v6 ^ 0xBACF57C2)) & 0x21D329D2;
  v9 = v8 ^ 0x20512851;
  v10 = (v8 ^ 0x820091) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x874CA74C) & v9 ^ (4 * v9) & 0x21D329D0;
  v12 = (v11 ^ 0x1402143) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x20930893)) ^ 0x1D329D30) & (v11 ^ 0x20930893) ^ (16 * (v11 ^ 0x20930893)) & 0x21D329D0;
  v14 = v12 ^ 0x21D329D3 ^ (v13 ^ 0x11209C3) & (v12 << 8);
  *(_DWORD *)(v5 + 476) = v6 ^ 0x9B91306D ^ (2
                                           * ((v14 << 16) & 0x21D30000 ^ v14 ^ ((v14 << 16) ^ 0x29D30000) & (((v13 ^ 0x20C120C3) << 8) & 0x21D30000 ^ 0x20D20000 ^ (((v13 ^ 0x20C120C3) << 8) ^ 0x53290000) & (v13 ^ 0x20C120C3)))) ^ *(_DWORD *)(a1 + (v1 & 0x65D185E0)) & 0x7FFFFFFF;
  *(_BYTE *)(v5 + 516) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 4))();
}

uint64_t sub_100C41220(uint64_t a1, int a2)
{
  int v2;
  int v3;
  unint64_t v4;

  v3 = STACK[0x6508] - 426;
  v4 = STACK[0xE6A0];
  *(_QWORD *)(v4 + 816) = (2045994307 * (v2 - a2));
  *(_BYTE *)(v4 + 792) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12))();
}

uint64_t sub_100C4126C(uint64_t a1, int a2)
{
  int v2;
  unint64_t v3;

  v3 = STACK[0x6508];
  *(_DWORD *)(STACK[0xE6A0] + 788) = 2045994307 * (v2 - a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v3 + 494)) - 8))();
}

uint64_t sub_100C412B8()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 16903)) - 12))();
}

uint64_t sub_100C4130C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;

  v4 = STACK[0x6508] - 232;
  v5 = STACK[0xE6A0];
  v6 = -2045994307 * ((v3 ^ 0xC1380BF0) + 1418248666 + v2);
  v7 = (v6 ^ 0xEF45C90D) & (2 * (v6 & 0xEF158DAE)) ^ v6 & 0xEF158DAE;
  v8 = ((2 * (v6 ^ 0xF564C009)) ^ 0x34E29B4E) & (v6 ^ 0xF564C009) ^ (2 * (v6 ^ 0xF564C009)) & 0x1A714DA6;
  v9 = v8 ^ 0xA1144A1;
  v10 = (v8 ^ 0x12610901) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x69C5369C) & v9 ^ (4 * v9) & 0x1A714DA4;
  v12 = (v11 ^ 0x8410483) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x12304923)) ^ 0xA714DA70) & (v11 ^ 0x12304923) ^ (16 * (v11 ^ 0x12304923)) & 0x1A714DA0;
  v14 = v12 ^ 0x1A714DA7 ^ (v13 ^ 0x2104887) & (v12 << 8);
  *(_DWORD *)(v5 + 492) = v6 ^ (2
                              * ((v14 << 16) & 0x1A710000 ^ v14 ^ ((v14 << 16) ^ 0x4DA70000) & (((v13 ^ 0x18610587) << 8) & 0x1A710000 ^ 0xA300000 ^ (((v13 ^ 0x18610587) << 8) ^ 0x714D0000) & (v13 ^ 0x18610587)))) ^ *(_DWORD *)(a1 + (v1 & 0x76AF6350)) & 0x7FFFFFFF ^ 0xF225E91C;
  *(_DWORD *)(v5 + 476) = (*(_DWORD *)(a1 + (v1 & 0x65D185E0)) & 0x7FFFFFFF ^ 0x8D1DDA)
                        + 441179774
                        - 2
                        * ((*(_DWORD *)(a1 + (v1 & 0x65D185E0)) & 0x7FFFFFFF ^ 0x8D1DDA | 0x7FFFFFF2) ^ (*(_DWORD *)(a1 + (v1 & 0x65D185E0)) | 0x7FFFFFFE) ^ ((*(_DWORD *)(a1 + (v1 & 0x65D185E0)) & 0x7FFFFFFF ^ 0x8D1DDA) & 0x1A4BDE72 | 0xC));
  *(_BYTE *)(v5 + 516) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 8))();
}

uint64_t sub_100C4153C()
{
  int v0;
  unsigned int v1;
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;

  v5 = STACK[0x6508];
  v6 = STACK[0x6508] - 1088298591;
  v7 = 1391795026 - 2045994307 * (v0 + (*(_DWORD *)(*v2 + (*v4 & v1)) & 0x7FFFFFFF ^ 0xC1380BF0) + 1147469507);
  v8 = STACK[0x6AD8];
  v9 = STACK[0x6508] - 1088302616;
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = v9;
  LODWORD(STACK[0xEE50]) = v6;
  STACK[0xEE30] = 3339235242;
  STACK[0xEE58] = v7;
  LODWORD(STACK[0xEE60]) = v6 ^ 0xB;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v3 - 240) & 0x75679450) - (v3 - 240) - 1969722456) ^ 0xB70AB4F1)
                          + v5;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v10 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v10);
}

uint64_t sub_100C41678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 407))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, 1301527240);
}

uint64_t sub_100C416EC(uint64_t a1, int a2)
{
  int v2;
  int v3;

  v3 = STACK[0x6508] + 494;
  *(_DWORD *)(STACK[0xE6A0] + 340) = 2045994307 * (v2 - a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 8))();
}

uint64_t sub_100C41738(uint64_t a1, int a2)
{
  int v2;

  v2 = STACK[0x6508] + 12621;
  LODWORD(STACK[0xA82C]) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4))();
}

uint64_t sub_100C4180C@<X0>(unsigned int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((19206 * (STACK[0x9458] != 0x77F08B69E6123757)) ^ a1))
                            - (a1 ^ 0x1EBELL)))();
}

uint64_t sub_100C4186C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3652)) - 4))(v1);
}

uint64_t sub_100C4189C()
{
  int v0;
  int v1;

  STACK[0xC768] -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27 * (v1 == -1926392729)) ^ (v0 + 6807)))
                            - (v0 + 6681)
                            + 10887))();
}

uint64_t sub_100C418FC()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;
  int v6;

  v2 = LODWORD(STACK[0xE1D8])
     + 1859395045
     + 2045994307
     * ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x5DE7658C)) & 0x7FFFFFFF ^ 0x3EC7F40F)
      - LODWORD(STACK[0x810C]));
  v3 = (((LODWORD(STACK[0x9084]) ^ 0x3F65C6E2) + ((v0 + 1820891499) & 0x93777F3F ^ (v1 + 23))) ^ ((LODWORD(STACK[0x9084]) ^ 0x36F0C377)
                                                                                                - 921748343) ^ ((LODWORD(STACK[0x9084]) ^ 0x84B891F2) + 2068278798))
     - 66997684;
  v4 = (v2 < 0x6ED41DE5) ^ (v3 < 0x6ED41DE5);
  v5 = v2 > v3;
  if (v4)
    v5 = v2 < 0x6ED41DE5;
  if (v5)
    v6 = 1926392763;
  else
    v6 = -1926392729;
  LODWORD(STACK[0xE1DC]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((49 * !v5) ^ v0)) - 12))();
}

uint64_t sub_100C41A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v3 + 12681)))(a1, a2, a3, 2172385150);
}

uint64_t sub_100C41A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * ((v5 + 11217) ^ (23 * (v4 < (uint64_t)0xDB9CCCE36E7130D3))))
                                                                              - ((v5 + 1624763273) & 0x9F281FDF)
                                                                              - ((v5 + 16170) | 4u)
                                                                              + 27519))(3216372594, 1575445900, 498, a4, 19537);
}

uint64_t sub_100C41B18()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (41 * (v0 < (uint64_t)0xB2FB6E939239C034))))
                            - ((((v1 + 9399) ^ 0x227Eu) - 7445) ^ ((v1 + 9399) | 0x549u))))();
}

uint64_t sub_100C41B70()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((973
                                * (((v0 < (uint64_t)0x9175D7E9E8846D8FLL) ^ ((v1 ^ 0x4D) + v1 - 48)) & 1)) ^ v1)))();
}

uint64_t sub_100C41BB8()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((14 * (v0 >= (v1 - 20734) - 0x6A24E5F588A7C0C5)) ^ v1))
                            - ((v1 - 20734) ^ 0x1398)))();
}

uint64_t sub_100C41C00()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((((v1 ^ 0x1212) + 7059) ^ 0x4DB6) * (v0 == 0x95DB1A0A775852CFLL)) ^ v1)))();
}

uint64_t sub_100C41C44()
{
  int v0;
  __int16 v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (126 * ((v1 & 0x200) == 0))))
                            - ((((v0 + 1231835583) & 0xB693DF2F) - 13956) ^ 0x1780)))();
}

uint64_t sub_100C41CAC@<X0>(int a1@<W8>)
{
  int v1;
  BOOL v2;
  int v3;

  LODWORD(STACK[0xABA4]) = v1 | 0x200;
  if (STACK[0xBAF8])
    v2 = STACK[0xA170] == 0;
  else
    v2 = 1;
  v3 = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((v3 * (((a1 - 1842533897) & 0x6DD2C989 ^ 0xFFFFBAA2) + a1 - 18701)) | a1))
                            - 8))();
}

uint64_t sub_100C41D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;
  unint64_t v8;

  v7 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (v6 ^ 0x11EB)))(v7, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100C41E4C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7267)) - 8))();
}

uint64_t sub_100C41E70()
{
  unsigned int v0;
  int v1;

  LODWORD(STACK[0xE23C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v0 + 5986)) - (v0 ^ 0x107ELL)))();
}

uint64_t sub_100C41EB8@<X0>(int a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((218 * (v1 - 406062431 == (a1 ^ 0x44A4) + 427782511)) ^ a1)))();
}

uint64_t sub_100C41F00@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x6AC0]) = a1 + 427765195;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 - 19067)) - 8))();
}

uint64_t sub_100C41F44()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;
  uint64_t v7;
  _BOOL4 v8;

  v6 = v0 < LODWORD(STACK[0x6AC0]);
  v7 = sub_10009A6DC();
  *(_QWORD *)(v3 + 16 * v4) = 0x77F08B69E6123757;
  v8 = v4 + 427790899 < v0;
  if (v6 != v1 + v5 + v4 - 8386 > 0xE6806DCD)
    v8 = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 | (16 * !v8))) - 8))(v7);
}

uint64_t sub_100C41FE0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((24665 * (((STACK[0xBAF8] == 0) ^ (v0 - 76)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100C42028@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((STACK[0xA170] != 0) * (v1 ^ 0x20CB)) | v1))
                            - a1
                            + 4206))();
}

uint64_t sub_100C42064()
{
  _DWORD *v0;
  int v1;
  int v2;

  *v0 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 ^ 0x30B5) + 4173)) - 8))();
}

uint64_t sub_100C42088@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xD248] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 - 2522)) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * ((a1 - 2522) ^ 0x1318))
                                          - (a1 + 10609)
                                          + 14815))(5121);
}

uint64_t sub_100C42124()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  int v3;

  v0 = ((STACK[0x6508] - 1834963719) & 0x6D5F76B2) + 7442;
  v1 = STACK[0x6508] + 9132;
  v2 = LODWORD(STACK[0xCD54]) - 1689164803;
  LODWORD(STACK[0xD69C]) = v2;
  if (v2 <= 0x800)
    v3 = STACK[0xA014];
  else
    v3 = 1926417753;
  LODWORD(STACK[0xE238]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21876 * (v3 == -1926392729)) ^ v1)) - (v0 ^ 0x5130)))();
}

uint64_t sub_100C421D4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x5510])((a1 - ((2 * a1) & 0x91B85E20) + 1222389520) ^ 0x48DC2F10);
  *(_QWORD *)STACK[0xB158] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v2 != 0) * (v1 ^ 0x3CDE)) ^ v1))
                            - (v1 ^ 0x3FE3)
                            + 3005))();
}

uint64_t sub_100C4226C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 + 3521))
                                                                                                - 8))(a1, 2619932672, a3, a4, a5, 8463, 4294967207);
}

uint64_t sub_100C422F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  unsigned int v6;
  _QWORD *v7;
  _DWORD *v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;

  v9 = STACK[0x6508];
  v10 = -2045994307
      * (v5 + ((STACK[0x6508] + 11846) ^ 0xC138354C ^ *(_DWORD *)(*v7 + (*v8 & v6)) & 0x7FFFFFFF) - 694995098);
  v11 = (v10 ^ 0xD244E903) & (2 * (v10 & 0xD8168D52)) ^ v10 & 0xD8168D52;
  v12 = ((2 * (v10 ^ 0xC24DF187)) ^ 0x34B6F9AA) & (v10 ^ 0xC24DF187) ^ (2 * (v10 ^ 0xC24DF187)) & 0x1A5B7CD4;
  v13 = v12 ^ 0xA490455;
  v14 = (v12 ^ 0xA137885) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x696DF354) & v13 ^ (4 * v13) & 0x1A5B7CD4;
  v16 = (v15 ^ 0x8497041) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x12120C81)) ^ 0xA5B7CD50) & (v15 ^ 0x12120C81) ^ (16 * (v15 ^ 0x12120C81)) & 0x1A5B7CD0;
  v18 = v16 ^ 0x1A5B7CD5 ^ (v17 ^ 0x134C85) & (v16 << 8);
  *(_DWORD *)(STACK[0xE6A0] + 760) = v10 ^ 0x512FE09F ^ (2
                                                       * ((v18 << 16) & 0x1A5B0000 ^ v18 ^ ((v18 << 16) ^ 0x7CD50000) & (((v17 ^ 0x1A483085) << 8) & 0x1A5B0000 ^ (((v17 ^ 0x1A483085) << 8) ^ 0x5B7C0000) & (v17 ^ 0x1A483085) ^ 0x30000)));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((13858 * ((_DWORD)v9 == -1672425946)) ^ ((int)v9 + 407)))
                                                                                                - 8))(a1, a2, a3, a4, a5, 581925057, 1301527240);
}

uint64_t sub_100C4254C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v4 = STACK[0x6508] - 426;
  v5 = STACK[0xE6A0];
  v6 = -2045994307 * ((v3 ^ 0xC1380BF0) - 982204977 + v2);
  v7 = (v6 ^ 0xA98E27EC) & (2 * (v6 & 0x8DCF27CD)) ^ v6 & 0x8DCF27CD;
  v8 = ((2 * (v6 ^ 0xA894687E)) ^ 0x4AB69F66) & (v6 ^ 0xA894687E) ^ (2 * (v6 ^ 0xA894687E)) & 0x255B4FB2;
  v9 = v8 ^ 0x25494091;
  v10 = (v8 ^ 0x104FA1) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x956D3ECC) & v9 ^ (4 * v9) & 0x255B4FB0;
  v12 = (v11 ^ 0x5490E80) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x20124133)) ^ 0x55B4FB30) & (v11 ^ 0x20124133) ^ (16 * (v11 ^ 0x20124133)) & 0x255B4FB0;
  v14 = v12 ^ 0x255B4FB3 ^ (v13 ^ 0x5104B83) & (v12 << 8);
  v15 = v6 ^ (2
            * ((v14 << 16) & 0x255B0000 ^ v14 ^ ((v14 << 16) ^ 0x4FB30000) & (((v13 ^ 0x204B0483) << 8) & 0x255B0000 ^ 0x24100000 ^ (((v13 ^ 0x204B0483) << 8) ^ 0x5B4F0000) & (v13 ^ 0x204B0483))));
  *(_DWORD *)(v5 + 496) = 1400898419
                        * (((v15 ^ 0x9C9A3BB4) + 1825552407) ^ ((v15 ^ 0x2DCC0168) - 577142069) ^ ((v15 ^ 0x7C098277)
                                                                                                 - 1940127274))
                        - 829100753;
  *(_DWORD *)(v5 + 476) = (*(_DWORD *)(a1 + (v1 & 0x65D185E0)) & 0x7FFFFFFF ^ 0x8D1DDA)
                        + 441179774
                        - 2
                        * ((*(_DWORD *)(a1 + (v1 & 0x65D185E0)) & 0x7FFFFFFF ^ 0x8D1DDA | 0x7FFFFFF6) ^ (*(_DWORD *)(a1 + (v1 & 0x65D185E0)) | 0x7FFFFFFE) ^ ((*(_DWORD *)(a1 + (v1 & 0x65D185E0)) & 0x7FFFFFFF ^ 0x8D1DDA) & 0x1A4BDE76 | 8));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 12))();
}

uint64_t sub_100C427B0(uint64_t a1, int a2)
{
  int v2;
  unint64_t v3;

  v3 = STACK[0x6508];
  *(_QWORD *)(STACK[0xE6A0] + 344) = (2045994307 * (v2 - a2));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v3 + 494)) - 8))();
}

uint64_t sub_100C427FC(uint64_t a1, int a2)
{
  int v2;
  int v3;
  unint64_t v4;
  int v5;

  v4 = STACK[0x6508];
  v5 = STACK[0x6508] + 17534;
  LODWORD(STACK[0xD97C]) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((11
                                          * (2045994307
                                           * ((v3 ^ 0xC1380BF0) + v2 + (((_DWORD)v4 - 3834) ^ 0xB03AC469) + v2 - a2) != -719423427)) | v5))
                            - (v4 - 1224)
                            + 2982))();
}

uint64_t sub_100C42880@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((19410
                                               * (2045994307 * (v3 + v2 + (a1 ^ 0xAD2) - 1185306001 + v1) == -1591978)) ^ a1))
                            - (a1 ^ 0x178)))();
}

uint64_t sub_100C428F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 ^ 0x122C)) - 8))(STACK[0xE6A0] + 500, 2619932672, a3, a4, a5, 8463, 4294967207);
}

uint64_t sub_100C429E0()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;

  v2 = STACK[0x6508] - 101437544;
  v3 = -2045994307 * ((v1 ^ 0xC1380BF0) - 1778200639 + v0);
  v4 = (v3 ^ 0x92CF450B) & (2 * (v3 & 0x9AC85423)) ^ v3 & 0x9AC85423;
  v5 = ((2 * (v3 ^ 0x835FE549)) ^ 0x332F62D4) & (v3 ^ 0x835FE549) ^ (2 * (v3 ^ 0x835FE549)) & 0x1997B16A;
  v6 = v5 ^ 0x890912A;
  v7 = (v5 ^ 0x11032000) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x665EC5A8) & v6 ^ (4 * v6) & 0x1997B168;
  v9 = (v8 ^ 0x168122) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x19813042)) ^ 0x997B16A0) & (v8 ^ 0x19813042) ^ (16 * (v8 ^ 0x19813042)) & 0x1997B160;
  v11 = v9 ^ 0x1997B16A ^ (v10 ^ 0x19131000) & (v9 << 8);
  *(_DWORD *)(STACK[0xE6A0] + 784) = v3 ^ 0x6CEA290 ^ (2
                                                     * ((v11 << 16) & 0x19970000 ^ v11 ^ ((v11 << 16) ^ 0x316A0000) & (((v10 ^ 0x84A14A) << 8) & 0x19970000 ^ 0x8060000 ^ (((v10 ^ 0x84A14A) << 8) ^ 0x17B10000) & (v10 ^ 0x84A14A))));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v2 ^ 0xF9F44296 ^ (4348 * (v2 != 465162526))))
                            - 8))();
}

uint64_t sub_100C42BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 15109))
                                                                                                - 8))(2147479433, 2619932672, a3, a4, a5, 8463, 4294967207);
}

uint64_t sub_100C42C4C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(v3 + 476) = v5;
  v7 = *(_DWORD *)(a2 + v4) & (a1 + v2 - 2049 + 1242);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((9274
                                          * ((-1617210048
                                            - LODWORD(STACK[0xD97C])
                                            + (v7 ^ 0xC1380BF0)
                                            + 2 * (v7 ^ (7 * (v2 ^ 0x11C7) + 1053287321)))
                                           * v6 == -1072289153)) ^ v2))
                            - 4))();
}

uint64_t sub_100C42CE0()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x121E)) - 8))(v0 + 517);
}

uint64_t sub_100C42D78()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (v1 | (2 * (v0 < ((v1 + 274537819) & 0xEFA2DFD9) + 0x3B375930C12BFB90))))
                            - 4))();
}

uint64_t sub_100C42DC0()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((v1 - 14721) ^ (8
                                                         * (((((v1 + 127) ^ 0x89) + 1) ^ (v0 < ((v1 - 19027) | 0x1020u) - 0xF64C3E0CC289CBELL)) & 1))))
                            - 12))();
}

uint64_t sub_100C42E1C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BOOL4 v2;

  v2 = v1 < ((((a1 - 2111749557) & 0x7DDEBBD7) + 0x3644B9A487800EEFLL) ^ ((a1 - 4593) | 0x1014u));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v2 | (4 * v2)) ^ a1)))();
}

uint64_t sub_100C42E80()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v1 - 4622) ^ 0x35C8) * (v0 == 0xF09B3C1F33D778B3)) ^ v1)))();
}

uint64_t sub_100C42EBC()
{
  int v0;
  __int16 v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((45
                                * ((v1 & 0x100) != (((v0 ^ 0x3457) - 447102548) & 0x1AA61BFB ^ ((v0 ^ 0x11F0) + 771)))) ^ v0 ^ 0x3457)))();
}

uint64_t sub_100C42F20()
{
  unsigned int v0;
  int v1;
  BOOL v2;
  int v3;

  LODWORD(STACK[0xBC2C]) = (v0 - 3681) ^ (v0 + 360) ^ 0x10F9 | v1;
  if (STACK[0xBAF8])
    v2 = STACK[0xA170] == 0;
  else
    v2 = 1;
  v3 = !v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((232 * v3) ^ v0)))();
}

uint64_t sub_100C42F80()
{
  unsigned int v0;
  int v1;
  _BOOL4 v2;

  v2 = v1 - 833853339 < ((98 * (v0 ^ 0x14CA) - 5682) ^ (81 * (v0 ^ 0x14F3)));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v2 | (4 * v2)) ^ v0)))();
}

uint64_t sub_100C42FE4()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC958] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1138)) - 8))();
}

uint64_t sub_100C43234()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v0 - 108) | 0x84) + 15102) * (v1 == 0xA1A5606161E7A9F9)) ^ v0))
                            - ((v0 - 296) | 0x1022u)
                            + 4210))();
}

uint64_t sub_100C43294()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x5213))
                            - ((v0 - 760492439) & 0x2D547EEF ^ 0x4EE5)))();
}

uint64_t sub_100C432E4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v0 - 7761) * (v1 < (uint64_t)0x95DB1A0A775852CFLL)) ^ v0))
                            - ((v0 - 7377) ^ 0x198)))();
}

uint64_t sub_100C4332C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((a1 ^ 0x11E2) + 16611) ^ 0x38B) * (v1 == 0x84DB45763809976FLL)) ^ a1))
                            - 12))();
}

uint64_t sub_100C4337C()
{
  int v0;
  unsigned int v1;
  unint64_t v2;

  v2 = STACK[0x8250] + v1;
  LODWORD(STACK[0xE6B4]) = LODWORD(STACK[0x6A60]) - v1 - 1784467771 + (v0 ^ 0x5025) - 380;
  STACK[0xBDB0] = v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100C433E4()
{
  unsigned int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * ((50 * (v2 < (v0 ^ 0x1C26) + 0x73C4977DCA951B88)) ^ v0))
                            - ((v0 + 184750451) & v1 ^ 0xEC0)))();
}

uint64_t sub_100C43440()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v0 - 3244) | 0x89B) ^ 0x2043) * (v1 == 0x6A4687DA031CD0F5)) ^ v0))
                            - ((v0 + 426) ^ 0x107ALL)))();
}

uint64_t sub_100C4349C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v5 ^ 0xDE9) + v5))
                                                                                                - 8))(a1, a2, a3, a4, a5, 581925057, 1301527240);
}

uint64_t sub_100C43534()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((5052 * (v1 == ((v0 - 168776118) & 0xA0F5EED ^ 0x64B9E383943A1ABCLL))) ^ v0))
                            - 12))();
}

uint64_t sub_100C43594@<X0>(int a1@<W8>)
{
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((13329
                                          * ((((a1 ^ 0x82800B15) + 1555012564) ^ (((98 * (v1 ^ 0xEE7)) ^ 0x44FA487E)
                                                                                + (a1 ^ 0x9AD5C8C1)) ^ ((a1 ^ 0xB4A8388A) + 1787275341))
                                           - 1926392729 < 0xC9)) ^ v1))
                            - 12))();
}

uint64_t sub_100C43638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ 0x289Bu)) - 12))(14328, a2, a3, 767, a5, a6, a7, 2918208296);
}

uint64_t sub_100C43948()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v1 - 25191) ^ 0x36CF) - 13483) * (v0 < (uint64_t)0xB643783A6A0446A0)) ^ v1))
                            - (((v1 - 25191) | 0x6020u) ^ 0x60ADLL)))();
}

uint64_t sub_100C439A4()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v0 >= (uint64_t)(((v1 - 12990) | 0x1004u) ^ 0xB5962A68C3138235))
                                          * ((v1 - 8890) ^ 0x1388)) ^ v1))
                            - 12))();
}

uint64_t sub_100C439F8()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((3631
                                * (v0 == ((30 * (v1 ^ 0x1399u)) ^ ((v1 + 8635) - 0x4A69D5973CECA528)))) ^ v1)))();
}

uint64_t sub_100C43A48()
{
  int v0;
  int v1;
  _BOOL4 v2;

  v2 = ((((2 * v0) ^ 0x7D1A) - 6018) & v1) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 | (16 * v2)) ^ v0))
                            - (v0 - 6438)
                            + 7197))();
}

uint64_t sub_100C43A94@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;

  v6 = STACK[0xBEA8] + v4;
  v7 = -2045994307 * ((v2 ^ 0xC1380BF0) + v5 + ((602 * (v3 ^ 0x1C2E)) ^ 0x7AF2F0F0));
  v8 = (v7 ^ 0xFA66B3CF) & (2 * (v7 & 0xFB643BCF)) ^ v7 & 0xFB643BCF;
  v9 = ((2 * (v7 ^ 0x3C6EE4C7)) ^ 0x8E15BE10) & (v7 ^ 0x3C6EE4C7) ^ (2 * (v7 ^ 0x3C6EE4C7)) & 0xC70ADF08;
  v10 = v9 ^ 0x410A4108;
  v11 = (v9 ^ 0x860A9E00) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0x1C2B7C20) & v10 ^ (4 * v10) & 0xC70ADF08;
  v13 = (v12 ^ 0x40A5C00) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0xC3008308)) ^ 0x70ADF080) & (v12 ^ 0xC3008308) ^ (16 * (v12 ^ 0xC3008308)) & 0xC70ADF00;
  v15 = v13 ^ 0xC70ADF08 ^ (v14 ^ 0x4008D000) & (v13 << 8);
  v16 = v7 ^ (2
            * ((v15 << 16) & 0x470A0000 ^ v15 ^ ((v15 << 16) ^ 0x5F080000) & (((v14 ^ 0x87020F08) << 8) & 0x470A0000 ^ 0x45000000 ^ (((v14 ^ 0x87020F08) << 8) ^ 0xADF0000) & (v14 ^ 0x87020F08))));
  v17 = ((v16 ^ 0x6CEEEA1A) - 140285947) ^ ((v16 ^ 0x6A46E008) - 250912233) ^ ((v16 ^ 0xFDC98FCD) + 1719930324);
  STACK[0xC768] = v1;
  LOBYTE(v10) = (v17 + 121) & 0xC5 ^ 0x73 ^ (2 * ((v17 + 121) & 0xC5)) & ((v17 + 121) ^ 0xB4);
  v18 = ((v17 + 121) ^ (2
                                                        * (((2 * ((v17 + 121) ^ 0xB6)) ^ 0xE4) & ((v17 + 121) ^ 0xB6) & ((4 * v10) ^ 4) ^ v10))) & 0xF ^ 0x1012009A;
  STACK[0xE208] = v6;
  LODWORD(STACK[0x74F4]) = v17 + 170969465;
  STACK[0xAFB8] = (unint64_t)&STACK[0x10000] + a1;
  STACK[0x88A0] = 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v3 | (2 * (((2 * v18) | 0x3FBF0DAC) - v18 == LODWORD(STACK[0x698])))))
                            - 4))();
}

uint64_t sub_100C43D68()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;

  v4 = (v2 & 0xA00000A | v0) ^ v2 & (v1 ^ 0x8B1B0CEF);
  v5 = ((2 * (v1 ^ 0x8B1B0CEF)) ^ LODWORD(STACK[0x554])) & (v1 ^ 0x8B1B0CEF) ^ (2 * (v1 ^ 0x8B1B0CEF)) & 0x1EB8222A;
  v6 = v5 ^ 0x288222A;
  v7 = (v4 << ((98 * (v3 ^ 2)) ^ 0x74)) & ((((v3 + 2143703510) & 0x80399377) + 470810251) ^ v5) ^ v4;
  v8 = ((4 * v6) ^ 0x7AE088A8) & v6 ^ (4 * v6) & 0x1EB82228;
  v9 = (v8 ^ 0x1AA00022) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x4182202)) ^ 0xEB8222A0) & (v8 ^ 0x4182202) ^ (16 * (v8 ^ 0x4182202)) & 0x1EB82220;
  v11 = v9 ^ 0x1EB8222A ^ (v10 ^ 0xA80220A) & (v9 << 8);
  v12 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v1 ^ (2
                                                            * ((v11 << 16) & 0x1EB80000 ^ v11 ^ ((v11 << 16) ^ 0x222A0000) & (((v10 ^ 0x1438000A) << 8) & 0x1EB80000 ^ 0x6980000 ^ (((v10 ^ 0x1438000A) << 8) ^ 0x38220000) & (v10 ^ 0x1438000A)))) ^ 0xAC836A91);
  STACK[0x88A0] = v12 + 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((20323 * (v12 != 0)) ^ v3)) - 4))();
}

uint64_t sub_100C43F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;

  v7 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) + (((_DWORD)v6 - 33) | 0x4400u) - 17754;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (int)(v6 ^ 0x1D13)))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100C43FF8@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v1 < 0x64B9E383943A1470) ^ (a1 + 76)) & 1)
                                          * (a1 - 19640)) ^ a1))
                            - 8))();
}

uint64_t sub_100C44044@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((a1 - 1452) ^ ((v1 < 0x6A4687DA031CD0F5) | (16 * (v1 < 0x6A4687DA031CD0F5)))))
                            - (a1 - 14661)
                            - (a1 - 15093)
                            + 9584))();
}

uint64_t sub_100C44094@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((17792 * (v1 == ((195 * (a1 ^ 0x1396u)) ^ 0x64B9E383943A15F6))) ^ a1)))();
}

uint64_t sub_100C440DC@<X0>(int a1@<W0>, int a2@<W8>)
{
  char v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((((((a2 ^ 0x25D6) - 1686562412) & 0x6486F96B) - 18746)
                                                        * ((v2 & 8) == 0)) ^ a2 ^ 0x25D6))
                                          - (((a2 ^ 0x25D6) + 1078585706) & (a1 + 1125))
                                          + 6012))(1344274432);
}

uint64_t sub_100C44160(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  _BOOL4 v27;

  v5 = v1 ^ 0xC1380BF0;
  v6 = -2045994307 * (v4 + 225880044 + (v1 ^ 0xC1380BF0));
  v7 = ((v3 - 1386357730) ^ v6) & (2 * (v6 & 0xCD5EA981)) ^ v6 & 0xCD5EA981;
  v8 = ((2 * (v6 ^ 0x3D7A3460)) ^ 0xE0493BC2) & (v6 ^ 0x3D7A3460) ^ (2 * (v6 ^ 0x3D7A3460)) & 0xF0249DE0;
  v9 = v8 ^ 0x10248421;
  v10 = (v8 ^ 0x60000821) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0xC0927784) & v9 ^ (4 * v9) & 0xF0249DE0;
  v12 = (v11 ^ 0xC0001581) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x30248861)) ^ 0x249DE10) & (v11 ^ 0x30248861) ^ (16 * (v11 ^ 0x30248861)) & 0xF0249DE0;
  v14 = v12 ^ 0xF0249DE1 ^ (v13 ^ 0x9CE1) & (v12 << 8);
  v15 = (v14 << 16) & 0x70240000 ^ v14 ^ ((v14 << 16) ^ 0x1DE10000) & (((v13 ^ 0xF02401E1) << 8) & 0xF0240000 ^ a1 ^ (((v13 ^ 0xF02401E1) << 8) ^ 0x249D0000) & (v13 ^ 0xF02401E1));
  v16 = -2045994307 * (v5 + v2) - 1471539377;
  v17 = (v16 ^ 0x9DBAC37C) & (2 * (v16 & 0xDDC2837D)) ^ v16 & 0xDDC2837D;
  v18 = ((2 * (v16 ^ LODWORD(STACK[0x6A0]))) ^ 0xA3F889F6) & (v16 ^ LODWORD(STACK[0x6A0])) ^ (2
                                                                                            * (v16 ^ LODWORD(STACK[0x6A0]))) & 0xD1FC44FA;
  v19 = v18 ^ 0x50044409;
  v20 = (v18 ^ 0x811840F1) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x47F113EC) & v19 ^ (4 * v19) & 0xD1FC44F8;
  v22 = (v21 ^ 0x41F000E0) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x900C4413)) ^ 0x1FC44FB0) & (v21 ^ 0x900C4413) ^ (16 * (v21 ^ 0x900C4413)) & 0xD1FC44F0;
  v24 = v22 ^ 0xD1FC44FB ^ (v23 ^ 0x11C4444B) & (v22 << 8);
  v25 = v16 ^ (2
             * ((v24 << 16) & 0x51FC0000 ^ v24 ^ ((v24 << 16) ^ 0x44FB0000) & (((v23 ^ 0xC038004B) << 8) & 0xD1FC0000 ^ 0x1B80000 ^ (((v23 ^ 0xC038004B) << 8) ^ 0x7C440000) & (v23 ^ 0xC038004B))));
  v26 = (v6 ^ (2 * v15) ^ 0xFB731788) & (v25 ^ 0xFFCA0A8B);
  v27 = (v25 & 0xF62485CB ^ 0x6A4DA789 ^ v26) - ((2 * (v25 & 0xF62485CB ^ 0x6A4DA789 ^ v26)) & 0x76B2557A) + 995699389 == LODWORD(STACK[0x6A4]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v27 | (16 * v27) | v3)) - 12))();
}

uint64_t sub_100C4449C()
{
  int v0;
  int v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(_QWORD))STACK[0x5510])(2045994307* ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x5DE7658C)) & 0x7FFFFFFF ^ 0x3EC7F40Fu)- v1));
  STACK[0x6DE0] = v2 + 0x72A84CEE1D1701F9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v0 - 1) ^ (v2 == 0)) & 1)
                                          * (((v0 - 17698) | 0x1084) ^ 0xA5D)) ^ v0))
                            - 12))();
}

uint64_t sub_100C44564(unint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v9;

  LODWORD(STACK[0x6438]) = v2;
  v5 = v1 + v3;
  v6 = STACK[0xB8D0];
  v7 = STACK[0xB610];
  STACK[0xD1A8] += 16;
  STACK[0xD668] = a1;
  STACK[0xD670] = v5;
  STACK[0xD678] = a1;
  STACK[0x6AA0] = v7 - 0x3B6225A8A99B3D66;
  v9 = v7 == 0x3B6225A8A99B3D66 || v6 == 0x28623712C9340CFALL;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                               + 8
                                                               * (((8 * v9) | (16 * v9)) ^ (v4 - 1701075270) & 0x656475EBu))
                                                   - 4))(v6 - 0x28623712C9340CFALL);
}

uint64_t sub_100C44694(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;

  LODWORD(STACK[0x63E0]) = v5;
  v6 = -2045994307 * (v5 + 84017331 + (v2 & 0x7FFFFFFF ^ 0xC1380BF0) + 2076);
  v7 = (v6 ^ 0xD60303EA) & (2 * (v6 & (v3 ^ 0xD68BD92C))) ^ v6 & (v3 ^ 0xD68BD92C);
  v8 = ((2 * (v6 ^ 0x7213013A)) ^ 0x493125A0) & (v6 ^ 0x7213013A) ^ (2 * (v6 ^ 0x7213013A)) & 0xA49892D0;
  v9 = v8 ^ 0xA4889250;
  v10 = (v8 ^ 0x900080) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ LODWORD(STACK[0x2CC])) & v9 ^ (4 * v9) & 0xA49892D0;
  v12 = (v11 ^ 0x80000250) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ LODWORD(STACK[0x2D0]))) ^ 0x49892D00) & (v11 ^ LODWORD(STACK[0x2D0])) ^ (16
                                                                                             * (v11 ^ LODWORD(STACK[0x2D0]))) & 0xA49892D0;
  v14 = v12 ^ 0xA49892D0 ^ (v13 ^ 0x8800D0) & (v12 << 8);
  v15 = v6 ^ (2
            * ((v14 << 16) & 0x24980000 ^ v14 ^ ((v14 << 16) ^ 0x12D00000) & (((v13 ^ 0xA41092D0) << 8) & 0x24980000 ^ 0x24080000 ^ (((v13 ^ 0xA41092D0) << 8) ^ 0x18920000) & (v13 ^ 0xA41092D0))));
  LODWORD(STACK[0x66C0]) = v15;
  LODWORD(STACK[0x6910]) = v15 >> 3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (28 * (a1 != v4))))
                            - ((v1 - 874) ^ 0x1CF6u)
                            + 21299))();
}

uint64_t sub_100C4485C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char *v4;

  v4 = (char *)&STACK[0x1D0C0] + v2;
  *v4 = *a1;
  v4[1] = *(_BYTE *)(v1 - 0x28623712C9340CF9);
  v4[2] = *(_BYTE *)(v1 - 0x28623712C9340CF8);
  v4[3] = *(_BYTE *)(v1 - 0x28623712C9340CF7);
  v4[4] = *(_BYTE *)(v1 - 0x28623712C9340CF6);
  v4[5] = *(_BYTE *)(v1 - 0x28623712C9340CF5);
  v4[6] = *(_BYTE *)(v1 - 0x28623712C9340CF4);
  v4[7] = *(_BYTE *)(v1 - 0x28623712C9340CF3);
  v4[8] = *(_BYTE *)(v1 - 0x28623712C9340CF2);
  v4[9] = *(_BYTE *)(v1 - 0x28623712C9340CF1);
  v4[10] = *(_BYTE *)(v1 - 0x28623712C9340CF0);
  v4[11] = *(_BYTE *)(v1 - 0x28623712C9340CEFLL);
  v4[12] = *(_BYTE *)(v1 - 0x28623712C9340CEELL);
  v4[13] = *(_BYTE *)(v1 - 0x28623712C9340CEDLL);
  v4[14] = *(_BYTE *)(v1 - 0x28623712C9340CECLL);
  v4[15] = *(_BYTE *)(v1 - 0x28623712C9340CEBLL);
  return ((uint64_t (*)(char *))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - ((1201 * (v3 ^ 0x5326u)) ^ 0x4FC5)))(v4);
}

uint64_t sub_100C44A04()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  int v4;

  if (v2)
    v3 = v1 == 0;
  else
    v3 = 1;
  v4 = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((34 * (v0 ^ 0x4DF2)) ^ 0x500) - 20415) * v4) ^ v0))
                            - 12))();
}

uint64_t sub_100C44A54()
{
  int v0;
  int v1;
  BOOL v3;

  v1 = STACK[0x66C0];
  v3 = (STACK[0x66C0] & 8)
     + ((((v0 - 500) | 0x1004) ^ 0x5DD9) & v1 ^ 0xFFFFFFFE)
     + ((((v0 - 500) | 0x1004) ^ 0x5DD9) & v1 | 0xE57FD0D7) != -444608293
    || v1 == -1634027958;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((7339 * (((((v0 + 49) & 0xCE) + 1) ^ v3) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_100C44AF8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((v0 - 5078) | 0xC6) + ((v0 - 17876) | 0x420) - 26335) * (v1 != 0x3B6225A8A99B3D66)) | v0)))();
}

uint64_t sub_100C44B54(unint64_t a1)
{
  int v1;
  unint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  int v7;
  uint64_t v8;

  STACK[0x6AC0] = a1;
  LODWORD(STACK[0x6410]) = v1 - 2988;
  v2 = (v1 + 1990860245) & 0x8955EFDF;
  STACK[0xD680] = 0;
  v3 = (uint64_t (*)(uint64_t))STACK[0x5A48];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD680] = v4;
  v5 = v3(1028);
  STACK[0xD688] = v5;
  if (v4)
    v6 = v5 == 0;
  else
    v6 = 1;
  v7 = !v6;
  v8 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((14338 * v7) ^ v1));
  STACK[0x6AB0] = v2;
  return ((uint64_t (*)(void))(v8 - (v2 ^ 0x29DF)))();
}

uint64_t sub_100C44C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v7 = LODWORD(STACK[0x6910]) ^ 0x13D356C9u;
  v8 = *(_QWORD *)(v6
                 + 8
                 * ((*(_QWORD *)(v6
                               + 8
                               * ((*(_QWORD *)(v6
                                             + 8
                                             * ((*(_QWORD *)(v6 + 8 * (0xE4BA7030 % v7)) + 3023599886)
                                              % v7))
                                 + 645889211)
                                % v7))
                   + 1633382719)
                  % v7))
     + 2773306757;
  STACK[0x68B0] = v7;
  LODWORD(v8) = v8 % v7 - ((2 * (v8 % v7)) & 0x26033FCE) + 318873575;
  LODWORD(STACK[0x6A90]) = (((v8 ^ 0xB13D0445) + 816235660) ^ ((v8 ^ 0x98FA9D79) + 425811384) ^ ((v8 ^ 0x3AC606DB)
                                                                                               - 1151482346))
                         - 1988551840;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                                  + 8 * (int)STACK[0x6AB0]))(471038602, a2, a3, a4, a5, a6, 0x1234C59CD00187FALL);
}

uint64_t sub_100C44D8C(unsigned int a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  _BOOL4 v6;
  unint64_t v7;
  unint64_t v8;

  v4 = v1;
  v5 = STACK[0x6A90];
  v6 = LODWORD(STACK[0x6A90]) < a1;
  v7 = STACK[0x6AB0];
  v8 = 8 * ((v4 | ((unint64_t)(v4 < 0x32D39DC6) << 32)) + 0x7FC2AAEDFF03CC7ELL) + 0x1EAA88E7144ADE0;
  *(_QWORD *)(v3 + v8) = *(_QWORD *)(v2 + v8) ^ 0x5D5D5D5D5D5D5D5DLL;
  if (v6 == v4 - 381690683 < 0x1C137A8A)
    v6 = v4 - 381690683 < v5;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((28564 * !v6) ^ v7)))();
}

uint64_t sub_100C472B4()
{
  int v0;
  unsigned int v1;

  STACK[0x6A90] = STACK[0xD670];
  STACK[0x6A80] = STACK[0xD678];
  v1 = ((LODWORD(STACK[0x6910]) ^ 0xA883673) + 728357197) ^ ((LODWORD(STACK[0x6910]) ^ 0xB2C67018) - 1826119896) ^ ((LODWORD(STACK[0x6910]) ^ v0 ^ 0x4D ^ 0xAB9D2C8C) - 1971519586);
  LODWORD(STACK[0x6AB0]) = v1;
  LODWORD(STACK[0x6A70]) = v1 + 105500243;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100C47434()
{
  unsigned int v0;
  int v1;
  _BOOL4 v2;
  unint64_t v3;

  v2 = LODWORD(STACK[0x6AB0]) < 0x3232B9F7;
  v3 = 8
     * ((v1 + 7537)
      + (unint64_t)v0
      + ((unint64_t)(v0 < 0x32D39DC6) << 32)
      + 0x4A5E28BEC2AFF575)
     - 0x52F145F7AC1F66D0;
  *(_QWORD *)(STACK[0x6A80] + v3) = *(_QWORD *)(STACK[0x6A90] + v3) ^ 0x5D5D5D5D5D5D5D5DLL;
  if (v2 == v0 + 94956165 < LODWORD(STACK[0x384]))
    v2 = LODWORD(STACK[0x6A70]) > v0 + 94956165;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((77 * v2) ^ v1)) - 8))();
}

uint64_t sub_100C493FC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100C49510@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 + 1 != v2) * v3) ^ a1)) - 8))();
}

uint64_t sub_100C49578@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LODWORD(STACK[0x6AB0]) = a1 + 2852;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4 * (v1 == 15)) | (32 * (v1 == 15))) ^ a1)) - 8))();
}

uint64_t sub_100C495FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25)
{
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  uint64_t v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  uint64_t v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  unsigned int v321;
  int v322;
  int v323;
  unsigned int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  int v335;
  unsigned int v336;
  int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  unsigned int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  unsigned int v475;
  int v476;
  int v477;
  unsigned int v478;
  unsigned int v479;
  int v480;
  unsigned int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  unsigned int v487;
  int v488;
  int v489;
  int v490;
  unsigned int v491;
  unsigned int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  unsigned int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  unsigned int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  unsigned int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  unsigned int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  unsigned int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  unsigned int v561;
  int v562;
  int v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  int v573;
  unsigned int v574;
  unsigned int v575;
  unsigned int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  unsigned int v586;
  unsigned int v587;
  unint64_t v588;
  unint64_t v589;
  uint64_t v590;
  unint64_t v591;
  int v592;
  int v593;
  int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  int v598;
  uint64_t v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  unsigned int v612;
  int v613;
  unsigned int v614;
  uint64_t v615;
  int v616;
  int v617;
  int v618;
  uint64_t (*v619)(void);

  v29 = (v26 ^ 0x4B4B5E60) + ((v26 ^ 0x4B4B5E60u) >> 11) + (((v26 ^ 0x4B4B5E60) + ((v26 ^ 0x4B4B5E60u) >> 11)) >> 6);
  v30 = v29 - 1348772148 + ((v29 - 1348772148) >> 8) + ((v29 - 1348772148 + ((v29 - 1348772148) >> 8)) >> 3);
  v31 = ((v30 - 343849205) >> 13) + v30 - 343849205 - 2 * ((v30 - 343849205) >> 13);
  v32 = v29 ^ v25 ^ v30;
  v33 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C2ALL);
  LODWORD(STACK[0x66A8]) = v31 + (v31 >> 5) + v32 - 2 * ((v31 + (v31 >> 5)) & v32);
  v34 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BD2);
  v35 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D32);
  v36 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C86);
  v37 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CFALL);
  v38 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C8ALL);
  v39 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CE2);
  v40 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BDELL);
  v41 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C62);
  v42 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D2ELL);
  v43 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BC2);
  v44 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D4ELL);
  v45 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D22);
  v46 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C66);
  v47 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C9ELL);
  v48 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C52);
  LODWORD(STACK[0x6A30]) = v43;
  LODWORD(STACK[0x6A90]) = (v43 ^ v42) + 2 * (v43 & v42);
  v49 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C82);
  LODWORD(STACK[0x69D0]) = v38 - v36;
  v50 = (v34 ^ v33) + 2 * (v34 & v33);
  LODWORD(STACK[0x6A60]) = v50;
  LODWORD(STACK[0x6A40]) = (v50 ^ (v38 - v36)) + 2 * (v50 & (v38 - v36));
  LODWORD(STACK[0x6A00]) = v39 - v49;
  LODWORD(STACK[0x6970]) = v44 + v41;
  LODWORD(STACK[0x6A20]) = v49 - v47;
  LODWORD(STACK[0x6980]) = v45 - v44;
  LODWORD(STACK[0x6810]) = v40 + v37;
  v51 = *(_DWORD *)STACK[0x6AA0];
  LODWORD(STACK[0x6A50]) = v47 + v51;
  LODWORD(STACK[0x6900]) = v48 - v39;
  LODWORD(STACK[0x67C0]) = v46 + v40;
  v52 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C76);
  LODWORD(STACK[0x6568]) = v41 - v35;
  LODWORD(STACK[0x69F0]) = v52 + v46;
  v53 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C5ELL);
  v54 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C4ALL);
  LODWORD(STACK[0x67E0]) = v53 ^ v35;
  LODWORD(STACK[0x69C0]) = v54 ^ v51;
  LODWORD(STACK[0x6940]) = v53 - v37;
  v55 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CDALL);
  LODWORD(STACK[0x6800]) = v54 + v55;
  v56 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D4ALL);
  LODWORD(STACK[0x6840]) = v56 ^ v55;
  v57 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C9ALL);
  LODWORD(STACK[0x6930]) = v56 + v57;
  LODWORD(STACK[0x6960]) = v48 ^ v52;
  v58 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D0ALL);
  LODWORD(STACK[0x69A0]) = v58 ^ v57;
  v59 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C8ELL);
  LODWORD(STACK[0x69B0]) = v59 ^ v58;
  v60 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CDELL);
  LODWORD(STACK[0x68F0]) = v59 - v60;
  v61 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C02);
  LODWORD(STACK[0x6770]) = v60 - v61;
  v62 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BBALL);
  LODWORD(STACK[0x6850]) = v61 - v62;
  v63 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C6ALL);
  LODWORD(STACK[0x6A10]) = v63 + v62;
  v64 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D26);
  LODWORD(STACK[0x6990]) = v63 + v64;
  v65 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D5ALL);
  LODWORD(STACK[0x68D0]) = v64 - v65;
  v66 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D5ELL);
  LODWORD(STACK[0x67D0]) = v65 + v66;
  v67 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BE2);
  LODWORD(STACK[0x67A0]) = v67 + v66;
  v68 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C5ALL);
  LODWORD(STACK[0x6860]) = v67 ^ v68;
  v69 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D1ALL);
  LODWORD(STACK[0x66F8]) = v69 + v68;
  v70 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C0ELL);
  LODWORD(STACK[0x6A70]) = v70 ^ v69;
  v71 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BBELL);
  LODWORD(STACK[0x67F0]) = v70 - v71;
  v72 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C16);
  LODWORD(STACK[0x6870]) = v71 + v72;
  v73 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CB6);
  LODWORD(STACK[0x6780]) = v73 + v72;
  v74 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BAELL);
  LODWORD(STACK[0x66E0]) = v74 ^ v73;
  v75 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CBALL);
  LODWORD(STACK[0x66E8]) = v74 - v75;
  v76 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C7ELL);
  LODWORD(STACK[0x6620]) = v75 - v76;
  v77 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BE6);
  LODWORD(STACK[0x6750]) = v76 - v77;
  v78 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C42);
  LODWORD(STACK[0x66F0]) = v77 - v78;
  v79 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C3ALL);
  LODWORD(STACK[0x6610]) = v78 - v79;
  v80 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BD6);
  LODWORD(STACK[0x6618]) = v80 + v79;
  v81 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C72);
  LODWORD(STACK[0x6740]) = v80 - v81;
  v82 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BB6);
  LODWORD(STACK[0x66D8]) = v82 ^ v81;
  v83 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C56);
  LODWORD(STACK[0x6688]) = v82 + v83;
  v84 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CCELL);
  LODWORD(STACK[0x68C0]) = v83 ^ v84;
  v85 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CEELL);
  LODWORD(STACK[0x66C8]) = v84 - v85;
  v86 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D16);
  LODWORD(STACK[0x65D8]) = v85 - v86;
  v87 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D12);
  LODWORD(STACK[0x67B0]) = v86 ^ v87;
  v88 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D3ELL);
  LODWORD(STACK[0x6730]) = v88 ^ v87;
  v89 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BF6);
  LODWORD(STACK[0x6720]) = v88 - v89;
  v90 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D56);
  LODWORD(STACK[0x6790]) = v90 ^ v89;
  v91 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C0ALL);
  v92 = v91 ^ v90;
  v93 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BC6);
  LODWORD(STACK[0x6670]) = v91 ^ v93;
  v94 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C46);
  LODWORD(STACK[0x6AA0]) = v94 ^ v93;
  v95 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BCELL);
  LODWORD(STACK[0x6A80]) = v94 ^ v95;
  v96 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BEALL);
  LODWORD(STACK[0x66A0]) = v96 + v95;
  v97 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CF6);
  LODWORD(STACK[0x6648]) = v96 ^ v97;
  v98 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D42);
  LODWORD(STACK[0x6678]) = v97 - v98;
  v99 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CA2);
  LODWORD(STACK[0x6700]) = v98 ^ v99;
  v100 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C2ELL);
  LODWORD(STACK[0x6660]) = v99 - v100;
  v101 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C1ELL);
  LODWORD(STACK[0x65E0]) = v100 - v101;
  v102 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CAALL);
  v103 = v101 + v102;
  v104 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D06);
  LODWORD(STACK[0x65E8]) = v102 - v104;
  v105 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CD6);
  LODWORD(STACK[0x6698]) = v104 - v105;
  v106 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BFELL);
  LODWORD(STACK[0x6600]) = v105 - v106;
  v107 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D3ALL);
  LODWORD(STACK[0x6690]) = v107 ^ v106;
  v108 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C4ELL);
  LODWORD(STACK[0x65F8]) = v107 + v108;
  v109 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CF2);
  LODWORD(STACK[0x65A8]) = v33 + v108;
  LODWORD(STACK[0x65B0]) = v109 ^ v38;
  v110 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C96);
  v111 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CBELL);
  LODWORD(STACK[0x6638]) = v111 ^ v109;
  LODWORD(STACK[0x65D0]) = v111 ^ v110;
  v112 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D46);
  v113 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D36);
  LODWORD(STACK[0x65C0]) = v112 ^ v110;
  LODWORD(STACK[0x65A0]) = v113 + v112;
  v114 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BCALL);
  v115 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C3ELL);
  LODWORD(STACK[0x6628]) = v113 + v114;
  LODWORD(STACK[0x6590]) = v115 - v114;
  v116 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CB2);
  v117 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C6ELL);
  LODWORD(STACK[0x65B8]) = v116 - v115;
  v118 = v117 ^ v116;
  v119 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C92);
  v120 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D02);
  LODWORD(STACK[0x6598]) = v117 + v119;
  LODWORD(STACK[0x65C8]) = v120 + v119;
  v121 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C26);
  v122 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D52);
  v123 = v120 + v121;
  LODWORD(STACK[0x6588]) = v122 ^ v121;
  v124 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BDALL);
  v125 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CC2);
  v126 = v122 ^ v125;
  v127 = v124 - v125;
  v128 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CCALL);
  v129 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C36);
  LODWORD(STACK[0x6578]) = v129 - v124;
  LODWORD(STACK[0x65F0]) = v129 ^ v128;
  v130 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BEELL);
  v131 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CFELL);
  v132 = v131 - v128;
  v133 = (v130 - v131);
  v134 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CA6);
  v135 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BB2);
  v136 = v34 - v134;
  v137 = v135 ^ v134;
  v138 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C06);
  v139 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D0ELL);
  v140 = v135 - v139;
  v141 = v139 - v138;
  v142 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BF2);
  v143 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D2ALL);
  v144 = v142 + v138;
  v145 = v143 + v142;
  v146 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D62);
  v147 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CAELL);
  v148 = v143 - v146;
  v149 = v147 + v146;
  v150 = v147 + v130;
  v151 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C12);
  v152 = v36 - v151;
  v153 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C22);
  v154 = v151 ^ v153;
  v155 = *(_DWORD *)(v27 - 0x3B6225A8A99B3D1ELL);
  v156 = v153 - v155;
  v157 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CE6);
  *(_QWORD *)(v28 - 152) = v133;
  LODWORD(STACK[0x6580]) = v157 + v155;
  v158 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C1ALL);
  v159 = v157 - v158;
  v160 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C32);
  v161 = v160 ^ v158;
  v162 = *(_DWORD *)(v27 - 0x3B6225A8A99B3C7ALL);
  v163 = v162 ^ v160;
  v164 = v162 & 0x10000000;
  v165 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CD2);
  if ((v162 & 0x10000000 & v165) != 0)
    v164 = -v164;
  LODWORD(STACK[0x6570]) = (v164 + v165) ^ v162 & 0xEFFFFFFF;
  v166 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CC6);
  v167 = v165 + v166;
  v168 = v166 ^ LODWORD(STACK[0x6A30]);
  v169 = *(_DWORD *)(v27 - 0x3B6225A8A99B3BFALL);
  LODWORD(STACK[0x6890]) = v137 + LODWORD(STACK[0x6AA0]);
  v170 = *(_QWORD *)(v28 - 152);
  LODWORD(STACK[0x69E0]) = v137 - (v42 - v169);
  LODWORD(STACK[0x6950]) = v42 - v169 + LODWORD(STACK[0x69D0]);
  LODWORD(STACK[0x68E0]) = v92 + LODWORD(STACK[0x6A60]);
  LODWORD(STACK[0x6AA0]) = v123 + v92;
  v171 = STACK[0x68F0];
  LODWORD(STACK[0x6920]) = v123 - LODWORD(STACK[0x68F0]);
  v172 = STACK[0x69C0];
  LODWORD(STACK[0x68A0]) = v171 + LODWORD(STACK[0x69C0]);
  v173 = STACK[0x69A0];
  LODWORD(STACK[0x6A60]) = v172 - LODWORD(STACK[0x69A0]);
  LODWORD(STACK[0x6880]) = v145 + v173;
  v174 = STACK[0x69B0];
  LODWORD(STACK[0x68F0]) = v145 + LODWORD(STACK[0x69B0]);
  v175 = STACK[0x68C0];
  LODWORD(STACK[0x69D0]) = v174 - LODWORD(STACK[0x68C0]);
  LODWORD(STACK[0x68C0]) = v175 - v118;
  LODWORD(STACK[0x6760]) = v140 ^ v118;
  LODWORD(STACK[0x6820]) = v140 + v152;
  v176 = v154 + v152;
  v177 = STACK[0x6870];
  LODWORD(STACK[0x6830]) = v154 ^ LODWORD(STACK[0x6870]);
  LODWORD(STACK[0x6708]) = (v170 ^ v177) + 2 * (v170 & v177);
  LODWORD(STACK[0x69A0]) = v170 ^ v141;
  LODWORD(STACK[0x6710]) = v103 + v141;
  v178 = STACK[0x67F0];
  LODWORD(STACK[0x6870]) = v103 - LODWORD(STACK[0x67F0]);
  v179 = STACK[0x6700];
  LODWORD(STACK[0x69C0]) = LODWORD(STACK[0x6700]) + v178;
  v180 = STACK[0x67B0];
  LODWORD(STACK[0x69B0]) = LODWORD(STACK[0x67B0]) + v179;
  LODWORD(STACK[0x67F0]) = v180 + v126;
  LODWORD(STACK[0x6700]) = v163 ^ v126;
  LODWORD(STACK[0x6A30]) = v148 + v163;
  v181 = STACK[0x6990];
  LODWORD(STACK[0x6608]) = LODWORD(STACK[0x6990]) + v148;
  LODWORD(STACK[0x6990]) = v181 + v167;
  v182 = STACK[0x6790];
  LODWORD(STACK[0x67B0]) = v167 ^ LODWORD(STACK[0x6790]);
  v183 = STACK[0x6940];
  LODWORD(STACK[0x6790]) = v182 - LODWORD(STACK[0x6940]);
  v184 = STACK[0x6720];
  LODWORD(STACK[0x66D0]) = v183 ^ LODWORD(STACK[0x6720]);
  v185 = STACK[0x6840];
  LODWORD(STACK[0x6720]) = LODWORD(STACK[0x6840]) + v184;
  v186 = STACK[0x67A0];
  LODWORD(STACK[0x6840]) = LODWORD(STACK[0x67A0]) + v185;
  LODWORD(STACK[0x67A0]) = v186 + v149;
  v187 = STACK[0x66D8];
  LODWORD(STACK[0x66B8]) = v149 - LODWORD(STACK[0x66D8]);
  v188 = STACK[0x66E8];
  LODWORD(STACK[0x66D8]) = v187 - LODWORD(STACK[0x66E8]);
  v189 = STACK[0x6A90];
  LODWORD(STACK[0x66B0]) = v188 + LODWORD(STACK[0x6A90]);
  LODWORD(STACK[0x66E8]) = v189 - v127;
  v190 = STACK[0x6980];
  LODWORD(STACK[0x6668]) = LODWORD(STACK[0x6980]) + v127;
  v191 = STACK[0x6970];
  LODWORD(STACK[0x6980]) = v190 ^ LODWORD(STACK[0x6970]);
  v192 = v191 ^ LODWORD(STACK[0x66F8]);
  LODWORD(v170) = STACK[0x6698];
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x66F8]) - LODWORD(STACK[0x6698]);
  v193 = STACK[0x6960];
  LODWORD(STACK[0x6970]) = LODWORD(STACK[0x6960]) ^ v170;
  LODWORD(STACK[0x66F8]) = v132 + v193;
  LODWORD(v170) = STACK[0x66E0];
  LODWORD(STACK[0x6960]) = v132 + LODWORD(STACK[0x66E0]);
  v194 = STACK[0x6810];
  LODWORD(STACK[0x6940]) = v170 ^ LODWORD(STACK[0x6810]);
  LODWORD(v170) = STACK[0x66A0];
  LODWORD(STACK[0x66E0]) = v194 - LODWORD(STACK[0x66A0]);
  LODWORD(STACK[0x6680]) = v156 ^ v170;
  LODWORD(STACK[0x6698]) = v136 + v156;
  v195 = STACK[0x6678];
  LODWORD(STACK[0x66A0]) = LODWORD(STACK[0x6678]) + v136;
  LODWORD(STACK[0x6678]) = v195 ^ v150;
  v196 = STACK[0x67E0];
  LODWORD(STACK[0x6650]) = v150 + LODWORD(STACK[0x67E0]);
  LODWORD(v170) = STACK[0x6688];
  LODWORD(STACK[0x6630]) = LODWORD(STACK[0x6688]) + v196;
  v197 = STACK[0x6660];
  LODWORD(STACK[0x6640]) = v170 - LODWORD(STACK[0x6660]);
  v198 = STACK[0x6600];
  LODWORD(STACK[0x6658]) = LODWORD(STACK[0x6600]) + v197;
  LODWORD(v170) = STACK[0x6670];
  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x6670]) ^ v198;
  v199 = STACK[0x6800];
  LODWORD(STACK[0x6670]) = v170 ^ LODWORD(STACK[0x6800]);
  v200 = STACK[0x6648];
  LODWORD(STACK[0x6660]) = v199 + LODWORD(STACK[0x6648]);
  LODWORD(v170) = STACK[0x6610];
  LODWORD(STACK[0x6648]) = LODWORD(STACK[0x6610]) + v200;
  v201 = STACK[0x6620];
  LODWORD(STACK[0x6800]) = v170 ^ LODWORD(STACK[0x6620]);
  LODWORD(v170) = LODWORD(STACK[0x65F0]) + v201;
  LODWORD(STACK[0x6600]) = LODWORD(STACK[0x65F0]) - v144;
  v202 = STACK[0x6618];
  LODWORD(STACK[0x67E0]) = LODWORD(STACK[0x6618]) ^ v144;
  LODWORD(STACK[0x6618]) = v202 ^ v159;
  v203 = v159 ^ LODWORD(STACK[0x65F8]);
  v204 = STACK[0x6770];
  LODWORD(STACK[0x65F0]) = LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x65F8]);
  v205 = STACK[0x65E8];
  LODWORD(STACK[0x65F8]) = LODWORD(STACK[0x65E8]) ^ v204;
  v206 = STACK[0x6A00];
  LODWORD(STACK[0x6810]) = v205 - LODWORD(STACK[0x6A00]);
  v207 = STACK[0x67C0];
  LODWORD(STACK[0x6610]) = v206 ^ LODWORD(STACK[0x67C0]);
  v208 = STACK[0x65D8];
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x65D8]) + v207;
  v209 = LODWORD(STACK[0x65C8]) ^ v208;
  v210 = (v192 ^ v209) + v209 - 2 * ((v192 ^ v209) & v209);
  v211 = *(_DWORD *)(v27 - 0x3B6225A8A99B3CEALL);
  v212 = STACK[0x6590];
  LODWORD(STACK[0x65C8]) ^= LODWORD(STACK[0x6590]);
  LODWORD(STACK[0x6A00]) = v212 + v161;
  v213 = v161 - LODWORD(STACK[0x6580]);
  v214 = STACK[0x66F0];
  LODWORD(STACK[0x6770]) = LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6580]);
  LODWORD(STACK[0x6580]) = v214 - (v211 ^ v169);
  v215 = STACK[0x65A0];
  LODWORD(STACK[0x67C0]) = (v211 ^ v169) + LODWORD(STACK[0x65A0]);
  v216 = v215 ^ LODWORD(STACK[0x6588]);
  v217 = LODWORD(STACK[0x65A8]) + LODWORD(STACK[0x6588]);
  v218 = STACK[0x6578];
  LODWORD(STACK[0x65D8]) = LODWORD(STACK[0x6578]) ^ LODWORD(STACK[0x65A8]);
  v219 = LODWORD(STACK[0x65E0]) + v218;
  LODWORD(STACK[0x6588]) = LODWORD(STACK[0x65E0]) - v168;
  v220 = LODWORD(STACK[0x6A10]) ^ v168;
  v221 = LODWORD(STACK[0x6A10]) + LODWORD(STACK[0x65B0]);
  v222 = STACK[0x6900];
  LODWORD(STACK[0x6A10]) = LODWORD(STACK[0x65B0]) - LODWORD(STACK[0x6900]);
  v223 = v222 - LODWORD(STACK[0x6598]);
  v224 = STACK[0x66C8];
  LODWORD(STACK[0x65B0]) = LODWORD(STACK[0x6598]) - LODWORD(STACK[0x66C8]);
  v225 = STACK[0x6740];
  LODWORD(STACK[0x65E0]) = v224 - LODWORD(STACK[0x6740]);
  v226 = LODWORD(STACK[0x6850]) ^ v225;
  v227 = LODWORD(STACK[0x6850]) - LODWORD(STACK[0x65D0]);
  v228 = LODWORD(STACK[0x65D0]) - LODWORD(STACK[0x65C0]);
  v229 = STACK[0x65B8];
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x65B8]) + LODWORD(STACK[0x65C0]);
  v230 = STACK[0x6730];
  LODWORD(STACK[0x66F0]) = v229 - LODWORD(STACK[0x6730]);
  v231 = v230 - LODWORD(STACK[0x6638]);
  v232 = LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x6570]);
  v233 = LODWORD(STACK[0x6570]) + LODWORD(STACK[0x67D0]);
  v234 = LODWORD(STACK[0x67D0]) - LODWORD(STACK[0x6A20]);
  v235 = STACK[0x6690];
  LODWORD(STACK[0x6638]) = LODWORD(STACK[0x6A20]) + LODWORD(STACK[0x6690]);
  v236 = v235 - LODWORD(STACK[0x6930]);
  v237 = LODWORD(STACK[0x6930]) - LODWORD(STACK[0x6568]);
  v238 = STACK[0x69F0];
  LODWORD(STACK[0x6690]) = LODWORD(STACK[0x69F0]) + LODWORD(STACK[0x6568]);
  v239 = STACK[0x6628];
  v240 = LODWORD(STACK[0x6628]) + v238;
  LODWORD(STACK[0x6900]) = v234 ^ v226;
  v241 = STACK[0x6750];
  v242 = LODWORD(STACK[0x6750]) ^ v239;
  LODWORD(STACK[0x6730]) = v234 ^ v176;
  v243 = LODWORD(STACK[0x6860]) + v241;
  v244 = LODWORD(STACK[0x6860]) ^ LODWORD(STACK[0x6780]);
  v245 = LODWORD(STACK[0x6780]) - LODWORD(STACK[0x68D0]);
  v246 = v211 + LODWORD(STACK[0x68D0]);
  v247 = STACK[0x6A50];
  v248 = v211 + LODWORD(STACK[0x6A50]);
  LODWORD(STACK[0x69F0]) = v176 - v248;
  LODWORD(STACK[0x6930]) = v248 - v170;
  LODWORD(v170) = v170 - v227 - ((2 * (v170 - v227)) & 0x320D3CC) - 2121242138;
  LODWORD(STACK[0x6750]) = v227 - v203;
  v249 = STACK[0x6890];
  LODWORD(STACK[0x6598]) = LODWORD(STACK[0x6890]) + v203;
  LODWORD(STACK[0x6740]) = v249 - v243;
  LODWORD(STACK[0x6860]) = v243 - v237;
  v250 = STACK[0x6700];
  LODWORD(STACK[0x68D0]) = LODWORD(STACK[0x6700]) ^ v237;
  v251 = STACK[0x6A70];
  v252 = v247 + LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x65A0]) = v210 + v250;
  v253 = v210 - v216;
  LODWORD(STACK[0x65C0]) = v213 + v216;
  v254 = STACK[0x6668];
  LODWORD(STACK[0x6780]) = v213 - LODWORD(STACK[0x6668]);
  LODWORD(STACK[0x6590]) = v254 - v223;
  v255 = STACK[0x66D8];
  LODWORD(STACK[0x6668]) = v223 - LODWORD(STACK[0x66D8]);
  v256 = STACK[0x6630];
  LODWORD(STACK[0x67D0]) = v255 ^ LODWORD(STACK[0x6630]);
  v257 = STACK[0x6760];
  v258 = LODWORD(STACK[0x6760]) + v256;
  v259 = STACK[0x6A80];
  v260 = v251 + LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x65B8]) = v258 - 2 * LODWORD(STACK[0x6760]);
  v261 = v257 - LODWORD(STACK[0x68A0]);
  LODWORD(STACK[0x6760]) = LODWORD(STACK[0x68A0]) - v244;
  v262 = v244 + v240;
  LODWORD(STACK[0x6538]) = v262;
  LODWORD(STACK[0x6850]) = v240 - v217;
  v263 = STACK[0x6920];
  LODWORD(STACK[0x65A8]) = LODWORD(STACK[0x6920]) ^ v217;
  LODWORD(STACK[0x6890]) = v263 - v245;
  v264 = STACK[0x6658];
  LODWORD(STACK[0x6628]) = v245 - LODWORD(STACK[0x6658]);
  v265 = STACK[0x66E0];
  LODWORD(STACK[0x6A20]) = v264 + LODWORD(STACK[0x66E0]);
  v266 = STACK[0x6648];
  LODWORD(STACK[0x6920]) = LODWORD(STACK[0x6648]) ^ v265;
  v267 = STACK[0x6820];
  LODWORD(STACK[0x66D8]) = v266 + LODWORD(STACK[0x6820]);
  LODWORD(STACK[0x6648]) = v267 ^ v220;
  LODWORD(STACK[0x6630]) = v232 + v220;
  v268 = STACK[0x6720];
  LODWORD(STACK[0x6820]) = v232 - LODWORD(STACK[0x6720]);
  v269 = STACK[0x66F8];
  LODWORD(STACK[0x68A0]) = v268 - LODWORD(STACK[0x66F8]);
  v270 = STACK[0x6880];
  LODWORD(STACK[0x6720]) = v269 - LODWORD(STACK[0x6880]);
  v271 = STACK[0x6660];
  LODWORD(STACK[0x66E0]) = v270 ^ LODWORD(STACK[0x6660]);
  v272 = STACK[0x68F0];
  LODWORD(STACK[0x66F8]) = v271 - LODWORD(STACK[0x68F0]);
  v273 = STACK[0x6708];
  LODWORD(STACK[0x6620]) = LODWORD(STACK[0x6708]) ^ v272;
  v274 = v273 + v260;
  v275 = LODWORD(STACK[0x6710]) + v260;
  v276 = LODWORD(STACK[0x6710]) + LODWORD(STACK[0x6610]);
  v277 = LODWORD(STACK[0x6610]) - LODWORD(STACK[0x65E8]);
  LODWORD(STACK[0x6700]) = v219 ^ LODWORD(STACK[0x65E8]);
  v278 = STACK[0x6830];
  v279 = v219 + LODWORD(STACK[0x6830]);
  LODWORD(STACK[0x6660]) = v279;
  v280 = STACK[0x66D0];
  v281 = v278 ^ LODWORD(STACK[0x66D0]);
  LODWORD(STACK[0x6568]) = v281;
  LODWORD(STACK[0x6610]) = v280 - v242;
  v282 = STACK[0x67F0];
  LODWORD(STACK[0x6658]) = v242 - LODWORD(STACK[0x67F0]);
  v283 = STACK[0x6698];
  LODWORD(STACK[0x6570]) = v282 + LODWORD(STACK[0x6698]);
  v284 = STACK[0x6600];
  LODWORD(STACK[0x65D0]) = LODWORD(STACK[0x6600]) ^ v283;
  v285 = STACK[0x66B0];
  LODWORD(STACK[0x6880]) = v284 - LODWORD(STACK[0x66B0]);
  v286 = STACK[0x66A0];
  LODWORD(STACK[0x6830]) = v285 ^ LODWORD(STACK[0x66A0]);
  v287 = STACK[0x6688];
  LODWORD(STACK[0x6698]) = v286 - LODWORD(STACK[0x6688]);
  v288 = STACK[0x66B8];
  LODWORD(STACK[0x6688]) = v287 - LODWORD(STACK[0x66B8]);
  v289 = STACK[0x6670];
  LODWORD(STACK[0x6578]) = v288 ^ LODWORD(STACK[0x6670]);
  v290 = STACK[0x65F8];
  LODWORD(STACK[0x6670]) = v289 + LODWORD(STACK[0x65F8]);
  LODWORD(STACK[0x65F8]) = v221 ^ v290;
  v291 = STACK[0x66E8];
  LODWORD(STACK[0x6710]) = v221 + LODWORD(STACK[0x66E8]);
  v292 = v231 ^ v291;
  v293 = STACK[0x6580];
  LODWORD(STACK[0x6560]) = v231 + LODWORD(STACK[0x6580]);
  LODWORD(STACK[0x66B0]) = v228 ^ v293;
  v294 = STACK[0x65C8];
  LODWORD(STACK[0x67F0]) = v228 ^ LODWORD(STACK[0x65C8]);
  v295 = STACK[0x6790];
  LODWORD(STACK[0x66B8]) = v294 - LODWORD(STACK[0x6790]);
  v296 = STACK[0x67B0];
  LODWORD(STACK[0x66E8]) = v295 - LODWORD(STACK[0x67B0]);
  v297 = STACK[0x6618];
  LODWORD(STACK[0x68F0]) = v296 - LODWORD(STACK[0x6618]);
  v298 = v297 ^ LODWORD(STACK[0x65E0]);
  v299 = STACK[0x6588];
  LODWORD(STACK[0x67B0]) = LODWORD(STACK[0x65E0]) - LODWORD(STACK[0x6588]);
  v300 = STACK[0x6870];
  v301 = v299 + LODWORD(STACK[0x6870]);
  LODWORD(STACK[0x65C8]) = v301;
  v302 = STACK[0x6678];
  LODWORD(STACK[0x66A0]) = v300 + LODWORD(STACK[0x6678]);
  v303 = STACK[0x6650];
  LODWORD(STACK[0x6790]) = v302 - LODWORD(STACK[0x6650]);
  LODWORD(STACK[0x6678]) = v303 ^ v259;
  LODWORD(STACK[0x66D0]) = v259 - v236;
  v304 = STACK[0x65B0];
  LODWORD(STACK[0x6650]) = v236 - LODWORD(STACK[0x65B0]);
  v305 = STACK[0x65D8];
  LODWORD(STACK[0x65E0]) = v304 - LODWORD(STACK[0x65D8]);
  v306 = LODWORD(STACK[0x67A0]) ^ v305;
  v307 = STACK[0x69E0];
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x67A0]) + LODWORD(STACK[0x69E0]);
  v308 = STACK[0x6950];
  LODWORD(STACK[0x6600]) = v307 - LODWORD(STACK[0x6950]);
  v309 = LODWORD(STACK[0x68E0]) ^ v308;
  v310 = LODWORD(STACK[0x68E0]) + LODWORD(STACK[0x68C0]);
  v311 = LODWORD(STACK[0x68C0]) - LODWORD(STACK[0x6680]);
  LODWORD(STACK[0x6680]) += v246;
  v312 = v233 ^ v246;
  LODWORD(STACK[0x6618]) = v233 ^ v252;
  v313 = STACK[0x65F0];
  LODWORD(STACK[0x65B0]) = v252 - LODWORD(STACK[0x65F0]);
  v314 = LODWORD(STACK[0x6840]) + v313;
  v315 = STACK[0x6640];
  LODWORD(STACK[0x65D8]) = LODWORD(STACK[0x6840]) - LODWORD(STACK[0x6640]);
  v316 = STACK[0x6608];
  v317 = v315 + LODWORD(STACK[0x6608]);
  LODWORD(STACK[0x6A70]) = v170 ^ (v317 - ((2 * v317) & 0x320D3CC) - 2121242138);
  LODWORD(v170) = (((v170 ^ 0x245F02B7) - 610206391) ^ ((v170 ^ 0x42FFE700) - 1124067072) ^ ((v170 ^ 0xE7308C51)
                                                                                           + 416248751))
                - v279
                - 252064679;
  v318 = (v170 ^ 0x86061DA9) & (2 * (v170 & 0x90969D8D)) ^ v170 & 0x90969D8D;
  v319 = ((2 * (v170 ^ 0xA7061EB1)) ^ 0x6F210678) & (v170 ^ 0xA7061EB1) ^ (2 * (v170 ^ 0xA7061EB1)) & 0x3790833C;
  v320 = (v319 ^ 0x16000338) & (4 * v318) ^ v318;
  v321 = ((4 * (v319 ^ 0x10908104)) ^ 0xDE420CF0) & (v319 ^ 0x10908104) ^ (4 * (v319 ^ 0x10908104)) & 0x3790833C;
  v322 = v320 ^ 0x3790833C ^ (v321 ^ 0x1600003C) & (16 * v320);
  v323 = (16 * (v321 ^ 0x2190830C)) & 0x37908330 ^ a11 ^ ((16 * (v321 ^ 0x2190830C)) ^ 0x790833C0) & (v321 ^ 0x2190830C);
  v324 = (v322 << 8) & 0x37908300 ^ v322 ^ ((v322 << 8) ^ 0x90833C00) & v323;
  LODWORD(STACK[0x68C0]) = v170 ^ (2
                                 * ((v324 << 16) & 0x37900000 ^ v324 ^ ((v324 << 16) ^ 0x33C0000) & ((v323 << 8) & 0x37900000 ^ 0x27100000 ^ ((v323 << 8) ^ 0x90830000) & v323)));
  LODWORD(STACK[0x6950]) = v209;
  LODWORD(STACK[0x67A0]) = v314 ^ (v209 + LODWORD(STACK[0x6A90]));
  v325 = STACK[0x6A40];
  LODWORD(v170) = LODWORD(STACK[0x6A30]) - LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x68E0]) = v314 ^ v170;
  LODWORD(STACK[0x6A50]) = v274 - v170;
  LODWORD(STACK[0x6640]) = v274 + v276;
  v326 = v261;
  LODWORD(v170) = v261 + v276 - 1996262770;
  v327 = (v170 ^ 0x5B2D69E1) & (2 * (v170 & 0x938E69E4)) ^ v170 & 0x938E69E4;
  v328 = ((2 * (v170 ^ 0x7F393869)) ^ 0xD96EA31A) & (v170 ^ 0x7F393869) ^ (2 * (v170 ^ 0x7F393869)) & 0xECB7518C;
  v329 = (v328 ^ 0xC8220100) & (4 * v327) ^ v327;
  v330 = ((4 * (v328 ^ 0x24915085)) ^ 0xB2DD4634) & (v328 ^ 0x24915085) ^ (4 * (v328 ^ 0x24915085)) & 0xECB7518C;
  v331 = (v330 ^ 0xA0954000) & (16 * v329) ^ v329;
  v332 = ((16 * (v330 ^ 0x4C221189)) ^ 0xCB7518D0) & (v330 ^ 0x4C221189) ^ (16 * (v330 ^ 0x4C221189)) & 0xECB75180;
  v333 = v331 ^ 0xECB7518D ^ (v332 ^ 0xC8351000) & (v331 << 8);
  LODWORD(STACK[0x65F0]) = v170 ^ (2
                                 * ((v333 << 16) & 0x6CB70000 ^ v333 ^ ((v333 << 16) ^ 0x518D0000) & (((v332 ^ 0x2482410D) << 8) & 0xECB70000 ^ 0x48A60000 ^ (((v332 ^ 0x2482410D) << 8) ^ 0x37510000) & (v332 ^ 0x2482410D))));
  LODWORD(v170) = v298 + v301 - 468943157;
  v334 = (v170 ^ 0x51C1AA38) & (2 * (v170 & 0x9505AB3D)) ^ v170 & 0x9505AB3D;
  v335 = ((2 * (v170 ^ 0x5BCBAC0A)) ^ 0x9D9C0E6E) & (v170 ^ 0x5BCBAC0A) ^ (2 * (v170 ^ 0x5BCBAC0A)) & 0xCECE0736;
  v336 = (v335 ^ 0x8E4C0425) & (4 * v334) ^ v334;
  v337 = ((4 * (v335 ^ 0x42420111)) ^ 0x3B381CDC) & (v335 ^ 0x42420111) ^ (4 * (v335 ^ 0x42420111)) & a13;
  v338 = (v337 ^ 0xA080413) & (16 * v336) ^ v336;
  v339 = ((16 * (v337 ^ 0xC4C60323)) ^ 0xECE07370) & (v337 ^ 0xC4C60323) ^ (16 * (v337 ^ 0xC4C60323)) & 0xCECE0730;
  v340 = v338 ^ a12 ^ (v339 ^ 0xCCC00300) & (v338 << 8);
  LODWORD(STACK[0x6A80]) = v170 ^ (2
                                 * ((v340 << 16) & 0x4ECE0000 ^ v340 ^ ((v340 << 16) ^ 0x7370000) & (((v339 ^ 0x20E0407) << 8) & 0xCECE0000 ^ 0xC80000 ^ (((v339 ^ 0x20E0407) << 8) ^ 0x4E070000) & (v339 ^ 0x20E0407))));
  LODWORD(STACK[0x64F8]) = v281 - 826330704 + v292;
  LODWORD(STACK[0x65E8]) = v292 ^ v277;
  v341 = STACK[0x6598];
  LODWORD(STACK[0x6558]) = v277 + LODWORD(STACK[0x6598]);
  LODWORD(STACK[0x69E0]) = v341 + v253;
  v342 = STACK[0x6560];
  LODWORD(v170) = ((v342 - v253) ^ 0x1BFBA77F) + 797374621 + ((2 * (v342 - v253)) & 0x37F74EFE);
  v343 = (v170 ^ 0xC0283B5D) & (2 * (v170 & 0xE80AB39E)) ^ v170 & 0xE80AB39E;
  v344 = ((2 * (v170 ^ 0x2C5979)) ^ 0xD04DD5CE) & (v170 ^ 0x2C5979) ^ (2 * (v170 ^ 0x2C5979)) & 0xE826EAE6;
  v345 = (v344 ^ 0xC004C0C0) & (4 * v343) ^ v343;
  v346 = ((4 * (v344 ^ 0x28222A21)) ^ 0xA09BAB9C) & (v344 ^ 0x28222A21) ^ (4 * (v344 ^ 0x28222A21)) & 0xE826EAE4;
  v347 = (v346 ^ 0xA002AA83) & (16 * v345) ^ v345;
  v348 = ((16 * (v346 ^ 0x48244063)) ^ 0x826EAE70) & (v346 ^ 0x48244063) ^ (16 * (v346 ^ 0x48244063)) & 0xE826EAE0;
  v349 = v347 ^ 0xE826EAE7 ^ (v348 ^ 0x8026AA00) & (v347 << 8);
  LODWORD(STACK[0x6840]) = v170 ^ (2
                                 * ((v349 << 16) & 0x68260000 ^ v349 ^ ((v349 << 16) ^ 0x6AE70000) & (((v348 ^ 0x68004087) << 8) & 0x68260000 ^ 0x48040000 ^ (((v348 ^ 0x68004087) << 8) ^ 0x26EA0000) & (v348 ^ 0x68004087))));
  LODWORD(STACK[0x6870]) = v309 + v262 - 1021751739;
  LODWORD(STACK[0x6580]) = v311 - 120441315 + v309;
  v350 = v325 - LODWORD(STACK[0x67E0]);
  v351 = STACK[0x6770];
  LODWORD(STACK[0x6518]) = LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x67E0]);
  LODWORD(STACK[0x6530]) = v275 + v311;
  LODWORD(STACK[0x6598]) = v275 - v351;
  LODWORD(STACK[0x6520]) = v298 ^ v312;
  LODWORD(STACK[0x6588]) = v312 + v351 + 891841364;
  LODWORD(v170) = v316 - LODWORD(STACK[0x6800]);
  v352 = LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x69A0]);
  v353 = LODWORD(STACK[0x69A0]) + LODWORD(STACK[0x69D0]);
  v354 = LODWORD(STACK[0x69D0]) - 1459586027 + LODWORD(STACK[0x6960]);
  v355 = LODWORD(STACK[0x6960]) - LODWORD(STACK[0x6940]);
  v356 = LODWORD(STACK[0x6940]) - LODWORD(STACK[0x69B0]);
  v357 = LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x69B0]);
  v358 = LODWORD(STACK[0x6990]) - LODWORD(STACK[0x67C0]);
  v359 = LODWORD(STACK[0x6638]) + LODWORD(STACK[0x67C0]);
  v360 = LODWORD(STACK[0x6638]) + LODWORD(STACK[0x69C0]);
  v361 = LODWORD(STACK[0x6970]) + LODWORD(STACK[0x69C0]);
  v362 = LODWORD(STACK[0x6970]) - LODWORD(STACK[0x66C8]);
  v363 = LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x66C8]);
  v364 = LODWORD(STACK[0x6AA0]) - LODWORD(STACK[0x6810]);
  v365 = LODWORD(STACK[0x6810]) - LODWORD(STACK[0x6690]);
  v366 = LODWORD(STACK[0x6690]) + LODWORD(STACK[0x6980]);
  v367 = LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6980]);
  v368 = STACK[0x6A00];
  v369 = LODWORD(STACK[0x6A00]) + LODWORD(STACK[0x66F0]);
  LODWORD(STACK[0x6940]) = v310;
  v370 = STACK[0x65A0];
  LODWORD(STACK[0x6608]) = v310 + 658197140 + LODWORD(STACK[0x65A0]);
  v371 = STACK[0x6590];
  LODWORD(STACK[0x69A0]) = v370 ^ LODWORD(STACK[0x6590]);
  LODWORD(STACK[0x69C0]) = v371 - v362;
  LODWORD(STACK[0x6590]) = v362 - v353;
  v372 = STACK[0x6578];
  LODWORD(STACK[0x6800]) = v353 - LODWORD(STACK[0x6578]);
  LODWORD(STACK[0x6578]) = v306 ^ v372;
  LODWORD(STACK[0x6548]) = v355 + v306;
  LODWORD(STACK[0x6970]) = v355 - v369;
  v373 = STACK[0x6730];
  LODWORD(STACK[0x6540]) = v369 + LODWORD(STACK[0x6730]);
  LODWORD(STACK[0x6550]) = v373 + v342;
  LODWORD(STACK[0x6980]) = v354 - v364;
  LODWORD(STACK[0x69B0]) = v364 ^ v357;
  v374 = STACK[0x6570];
  LODWORD(STACK[0x67C0]) = v357 + LODWORD(STACK[0x6570]);
  v375 = STACK[0x65C0];
  LODWORD(STACK[0x6528]) = LODWORD(STACK[0x65C0]) + v374;
  v376 = STACK[0x65A8];
  LODWORD(STACK[0x69D0]) = v326 ^ LODWORD(STACK[0x65A8]);
  LODWORD(STACK[0x66F0]) = v376 + 897178175 + v350;
  LODWORD(STACK[0x67E0]) = v375 - 227820417 + v350;
  v377 = STACK[0x6628];
  v378 = STACK[0x65B8];
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x6628]) + 2074588380 + LODWORD(STACK[0x65B8]);
  v379 = STACK[0x65B0];
  v380 = ((v378 - v379) ^ 0xB37FEF79) - 896240749 + ((2 * (v378 - v379)) & 0x66FFDEF2);
  v381 = (v380 ^ 0xDAFE45CD) & (2 * (v380 & 0x9B00610E)) ^ v380 & 0x9B00610E;
  v382 = ((2 * (v380 ^ 0xF8FE05D1)) ^ 0xC7FCC9BE) & (v380 ^ 0xF8FE05D1) ^ (2 * (v380 ^ 0xF8FE05D1)) & 0x63FE64DE;
  v383 = (v382 ^ 0x40002019) & (4 * v381) ^ v381;
  v384 = ((4 * (v382 ^ 0x20022441)) ^ 0x8FF9937C) & (v382 ^ 0x20022441) ^ (4 * (v382 ^ 0x20022441)) & 0x63FE64DC;
  v385 = (v384 ^ 0x3F80043) & (16 * v383) ^ v383;
  v386 = ((16 * (v384 ^ 0x60066483)) ^ 0x3FE64DF0) & (v384 ^ 0x60066483) ^ (16 * (v384 ^ 0x60066483)) & 0x63FE64D0;
  v387 = v385 ^ 0x63FE64DF ^ (v386 ^ 0x23E64400) & (v385 << 8);
  LODWORD(STACK[0x6638]) = v380 ^ (2
                                 * ((v387 << 16) & 0x63FE0000 ^ v387 ^ ((v387 << 16) ^ 0x64DF0000) & (((v386 ^ 0x4018200F) << 8) & 0x63FE0000 ^ 0x19A0000 ^ (((v386 ^ 0x4018200F) << 8) ^ 0x7E640000) & (v386 ^ 0x4018200F))));
  v388 = STACK[0x65D0];
  LODWORD(STACK[0x65B0]) = v379 - LODWORD(STACK[0x65D0]);
  v389 = STACK[0x6900];
  v390 = v388 - LODWORD(STACK[0x6900]) + 355285617;
  v391 = (v390 ^ 0xA8B642A7) & (2 * (v390 & 0xACC74B36)) ^ v390 & 0xACC74B36;
  v392 = ((2 * (v390 ^ 0xF9B650EB)) ^ 0xAAE237BA) & (v390 ^ 0xF9B650EB) ^ (2 * (v390 ^ 0xF9B650EB)) & 0x55711BDC;
  v393 = (v392 ^ 0x20119D) & (4 * v391) ^ v391;
  v394 = ((4 * (v392 ^ 0x55110845)) ^ 0x55C46F74) & (v392 ^ 0x55110845) ^ (4 * (v392 ^ 0x55110845)) & 0x55711BDC;
  v395 = (v394 ^ 0x55400B49) & (16 * v393) ^ v393;
  v396 = ((16 * (v394 ^ 0x311089)) ^ a14) & (v394 ^ 0x311089) ^ (16 * (v394 ^ 0x311089)) & 0x55711BD0;
  v397 = v395 ^ 0x55711BDD ^ (v396 ^ 0x55111900) & (v395 << 8);
  LODWORD(STACK[0x64F0]) = v390 ^ (2
                                 * ((v397 << 16) & 0x55710000 ^ v397 ^ ((v397 << 16) ^ 0x1BDD0000) & (((v396 ^ 0x60020D) << 8) & 0x55710000 ^ 0x4600000 ^ (((v396 ^ 0x60020D) << 8) ^ 0x711B0000) & (v396 ^ 0x60020D))));
  v398 = STACK[0x65F8];
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x65F8]) - v317;
  v399 = STACK[0x65D8];
  LODWORD(STACK[0x6990]) = LODWORD(STACK[0x65D8]) ^ v398;
  LODWORD(STACK[0x6A40]) = v399 ^ v363;
  v400 = STACK[0x6620];
  LODWORD(STACK[0x6730]) = LODWORD(STACK[0x6620]) ^ v363;
  v401 = STACK[0x65E0];
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x65E0]) + 803747269 + v400;
  v402 = LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6A10]);
  v403 = LODWORD(STACK[0x6A10]) + LODWORD(STACK[0x6A90]);
  v404 = STACK[0x6668];
  LODWORD(STACK[0x6690]) = LODWORD(STACK[0x6668]) - v401;
  v405 = STACK[0x6610];
  LODWORD(STACK[0x6510]) = v404 + 1065252048 + LODWORD(STACK[0x6610]);
  v406 = STACK[0x6740];
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x6740]) ^ v405;
  LODWORD(STACK[0x65D8]) = v170 - v406;
  LODWORD(STACK[0x65E0]) = v170 ^ v359;
  LODWORD(STACK[0x65F8]) = v403 + v359;
  LODWORD(STACK[0x6668]) = v352 - v403;
  v407 = STACK[0x6630];
  LODWORD(STACK[0x6570]) = LODWORD(STACK[0x6630]) ^ v352;
  v408 = STACK[0x6648];
  LODWORD(STACK[0x6740]) = LODWORD(STACK[0x6648]) - v407;
  v409 = STACK[0x6600];
  LODWORD(STACK[0x6610]) = LODWORD(STACK[0x6600]) + v408;
  LODWORD(STACK[0x6620]) = LODWORD(STACK[0x6568]) + v409;
  v410 = STACK[0x6708];
  v411 = STACK[0x6680];
  LODWORD(STACK[0x6770]) = ((2 * (LODWORD(STACK[0x6680]) - LODWORD(STACK[0x6708]))) & 0x85D82346)
                         + ((LODWORD(STACK[0x6680]) - LODWORD(STACK[0x6708])) ^ a16);
  v412 = v368 ^ LODWORD(STACK[0x6A60]);
  v413 = STACK[0x6658];
  LODWORD(STACK[0x64E0]) = LODWORD(STACK[0x6658]) + LODWORD(STACK[0x6660]);
  LODWORD(STACK[0x65D0]) = v413 - v356;
  v414 = STACK[0x6750];
  LODWORD(STACK[0x6660]) = LODWORD(STACK[0x6750]) ^ v356;
  LODWORD(STACK[0x64B8]) = (v414 ^ v412) + 2 * (v414 & v412);
  v415 = v365 + 1957927271 + LODWORD(STACK[0x6618]);
  v416 = LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x6670]);
  v417 = LODWORD(STACK[0x6670]) + v377;
  LODWORD(STACK[0x64C0]) = v360 + LODWORD(STACK[0x65C8]);
  v418 = STACK[0x66D8];
  LODWORD(STACK[0x65C8]) = v360 - LODWORD(STACK[0x66D8]);
  v419 = STACK[0x6780];
  LODWORD(STACK[0x6A10]) = v418 ^ LODWORD(STACK[0x6780]);
  v420 = v419 + v365;
  LODWORD(STACK[0x6810]) = LODWORD(STACK[0x6538]) + v367;
  v421 = STACK[0x6650];
  v422 = LODWORD(STACK[0x6650]) - v367;
  LODWORD(STACK[0x66D8]) = v422;
  v423 = LODWORD(STACK[0x66E0]) ^ v421;
  v424 = STACK[0x6760];
  LODWORD(STACK[0x6560]) = LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x66E0]);
  LODWORD(v170) = STACK[0x66F8];
  LODWORD(STACK[0x64C8]) = LODWORD(STACK[0x66F8]) - v424;
  v425 = LODWORD(STACK[0x6688]) - v170;
  v426 = LODWORD(STACK[0x67D0]) - LODWORD(STACK[0x6688]);
  v427 = LODWORD(STACK[0x6720]) - LODWORD(STACK[0x67D0]);
  v428 = STACK[0x6678];
  LODWORD(STACK[0x6600]) = LODWORD(STACK[0x6678]) + LODWORD(STACK[0x6720]);
  v429 = STACK[0x6698];
  LODWORD(STACK[0x67D0]) = LODWORD(STACK[0x6698]) - v428;
  v430 = STACK[0x6700];
  LODWORD(STACK[0x6A00]) = LODWORD(STACK[0x6700]) - v429;
  LODWORD(v170) = STACK[0x6860];
  LODWORD(STACK[0x6648]) = LODWORD(STACK[0x6860]) + v430;
  v431 = STACK[0x66B0];
  LODWORD(STACK[0x6750]) = LODWORD(STACK[0x66B0]) - v170;
  v432 = v412 + v358;
  v433 = v366 ^ v358;
  LODWORD(STACK[0x6720]) = v366 ^ v431;
  v434 = LODWORD(STACK[0x6850]) + v389;
  LODWORD(v170) = STACK[0x66B8];
  LODWORD(STACK[0x66F8]) = LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x6850]);
  v435 = STACK[0x66D0];
  v436 = v170 ^ LODWORD(STACK[0x66D0]);
  LODWORD(STACK[0x6658]) = v436;
  v437 = STACK[0x69F0];
  LODWORD(STACK[0x66B0]) = LODWORD(STACK[0x69F0]) + v411;
  v438 = LODWORD(STACK[0x66A0]) - v437;
  v439 = LODWORD(STACK[0x66A0]) + LODWORD(STACK[0x6710]);
  v440 = LODWORD(STACK[0x6820]) + LODWORD(STACK[0x6710]);
  v441 = LODWORD(STACK[0x6820]) + LODWORD(STACK[0x66E8]);
  v442 = STACK[0x6890];
  v443 = LODWORD(STACK[0x66E8]) - 1886275064 + LODWORD(STACK[0x6890]);
  LODWORD(STACK[0x6630]) = v443;
  v444 = v442 ^ v435;
  v445 = STACK[0x6558];
  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x6558]) + 1967729497;
  LODWORD(v170) = v445 - ((2 * (v445 + 1967729497)) & 0x10BDBBC8);
  v446 = v361 + v410;
  v447 = v361 - v402;
  v448 = STACK[0x68D0];
  LODWORD(STACK[0x6900]) = v402 - LODWORD(STACK[0x68D0]);
  v449 = v448 - LODWORD(STACK[0x68A0]);
  v450 = STACK[0x6830];
  LODWORD(STACK[0x6860]) = LODWORD(STACK[0x68A0]) - LODWORD(STACK[0x6830]);
  v451 = STACK[0x67F0];
  LODWORD(STACK[0x66B8]) = v450 - LODWORD(STACK[0x67F0]);
  v452 = STACK[0x6518];
  LODWORD(STACK[0x69F0]) = v451 - LODWORD(STACK[0x6518]);
  v453 = STACK[0x6930];
  LODWORD(STACK[0x6700]) = v452 + LODWORD(STACK[0x6930]);
  v454 = STACK[0x67B0];
  v455 = v453 + 846602275 + LODWORD(STACK[0x67B0]);
  LODWORD(STACK[0x6500]) = v455;
  v456 = STACK[0x6880];
  v457 = v454 ^ LODWORD(STACK[0x6880]);
  LODWORD(STACK[0x66E0]) = v457;
  v458 = STACK[0x6790];
  LODWORD(STACK[0x64D8]) = v456 - LODWORD(STACK[0x6790]);
  LODWORD(STACK[0x6820]) = v423 - 1644935872;
  v459 = LODWORD(STACK[0x6A20]) + v458 - 1012136525;
  LODWORD(STACK[0x65C0]) = v459;
  v417 += 1685873755;
  LODWORD(STACK[0x65B8]) = v417;
  v460 = v447 ^ 0x75CBB5AC;
  LODWORD(STACK[0x64E8]) = v447 ^ 0x75CBB5AC;
  v461 = LODWORD(STACK[0x69C0]) - 1609745275;
  LODWORD(STACK[0x6468]) = v461;
  LODWORD(STACK[0x6650]) = v422 + 99456957;
  v462 = v459 ^ v461 ^ (v422 + 99456957) ^ v417 ^ v460 ^ (v423 - 1644935872) ^ v443 ^ (v436 - 453962426);
  v463 = v432 - 1955184677;
  LODWORD(STACK[0x66D0]) = v432 - 1955184677;
  v416 -= 977013970;
  LODWORD(STACK[0x68D0]) = v416;
  v464 = LODWORD(STACK[0x65B0]) - 695736183;
  LODWORD(STACK[0x6880]) = v464;
  LODWORD(STACK[0x6850]) = v426 + 173968382;
  LODWORD(STACK[0x6780]) = v425 + 1672389079;
  v465 = LODWORD(STACK[0x6620]) - 491375001;
  LODWORD(STACK[0x6790]) = v465;
  LODWORD(STACK[0x64D0]) = v433 ^ 0x417523C4;
  v466 = STACK[0x6AA0];
  LODWORD(STACK[0x65A0]) = LODWORD(STACK[0x6AA0]) + 1599580890;
  v467 = v466 - ((2 * (v466 + 1599580890)) & 0xFECB60E8) + 1589467982;
  LODWORD(STACK[0x6388]) = v444;
  LODWORD(STACK[0x6930]) = v444 ^ 0x363DAA0C;
  v468 = v462 ^ v444 ^ 0x363DAA0C ^ v433 ^ 0x417523C4 ^ v463;
  v469 = LODWORD(STACK[0x67C0]) + 730766549;
  v470 = LODWORD(STACK[0x69A0]) + 743788348;
  LODWORD(STACK[0x6708]) = v470;
  v471 = v468 ^ v469 ^ (v425 + 1672389079) ^ (v426 + 173968382) ^ v416 ^ v470 ^ v465 ^ v464 ^ LODWORD(STACK[0x69E0]) ^ v467;
  v472 = LODWORD(STACK[0x6610]) - 1632617207;
  LODWORD(STACK[0x6538]) = v472;
  v473 = LODWORD(STACK[0x6520]) + 1313228753;
  LODWORD(STACK[0x6618]) = v473;
  LODWORD(STACK[0x65B0]) = v420 + 208099252;
  v474 = LODWORD(STACK[0x6590]) ^ 0xA8C09574;
  LODWORD(STACK[0x6670]) = v474;
  v475 = LODWORD(STACK[0x69B0]) ^ 0xF869A8F8;
  LODWORD(STACK[0x63F0]) = v475;
  v476 = v471 ^ v472 ^ (v420 + 208099252) ^ (v415 + 1842) ^ v475 ^ LODWORD(STACK[0x6980]) ^ (v434 + 580257178);
  v477 = LODWORD(STACK[0x6970]) - 1668978854;
  LODWORD(STACK[0x6408]) = v477;
  LODWORD(STACK[0x6428]) = v449;
  LODWORD(STACK[0x67B0]) = v449 ^ 0xBE5E5476;
  v478 = v476 ^ v477 ^ v474 ^ v449 ^ 0xBE5E5476 ^ LODWORD(STACK[0x67E0]);
  LODWORD(STACK[0x63C8]) = v427;
  LODWORD(STACK[0x6620]) = v427 ^ 0x8D374A68;
  LODWORD(v170) = v478 ^ v427 ^ 0x8D374A68 ^ v455 ^ v473 ^ (v170 + 2108164413) ^ (LODWORD(STACK[0x6A50]) + 121610704);
  LODWORD(STACK[0x65A8]) = v438 - 1013389524;
  LODWORD(STACK[0x6610]) = v446 - 1082389801;
  LODWORD(STACK[0x66E8]) = v457 - 2046207586;
  LODWORD(STACK[0x6400]) = v439;
  LODWORD(STACK[0x6710]) = v439 ^ 0xB95F24BB;
  v479 = LODWORD(STACK[0x6730]) ^ 0xC675F3A9;
  LODWORD(STACK[0x6628]) = v479;
  v480 = STACK[0x6578];
  v481 = (v438 - 1013389524) ^ (v457 - 2046207586) ^ v439 ^ 0xB95F24BB ^ v479 ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6870]) ^ (v446 - 1082389801) ^ (LODWORD(STACK[0x6578]) + 760598563);
  v482 = LODWORD(STACK[0x6570]) + 1319564417;
  LODWORD(STACK[0x6568]) = v482;
  v483 = LODWORD(STACK[0x6560]) + 845630243;
  LODWORD(STACK[0x6760]) = v483;
  v484 = LODWORD(STACK[0x65D8]) - 1536861058;
  LODWORD(STACK[0x6558]) = v484;
  v485 = LODWORD(STACK[0x64C8]) + 2042956056;
  LODWORD(STACK[0x6890]) = v485;
  v486 = LODWORD(STACK[0x64B8]) + 378421632;
  LODWORD(STACK[0x6560]) = v486;
  v487 = LODWORD(STACK[0x6530]) ^ 0xE43068EA;
  LODWORD(STACK[0x64C8]) = v487;
  v488 = LODWORD(STACK[0x6720]) ^ 0x334C5EBC;
  LODWORD(STACK[0x6530]) = v488;
  LODWORD(v170) = v170 ^ v487 ^ LODWORD(STACK[0x66A8]);
  v489 = LODWORD(STACK[0x67A0]) ^ 0x50D7FDBA;
  LODWORD(STACK[0x6370]) = v441;
  v490 = LODWORD(STACK[0x6740]) ^ 0x57478507;
  LODWORD(STACK[0x6720]) = v440;
  v491 = v440 ^ 0xC4AE2411;
  v492 = v481 ^ v489 ^ v483 ^ v485 ^ v484 ^ v488 ^ v441 ^ 0xE713033F ^ v490 ^ v440 ^ 0xC4AE2411 ^ v482 ^ v486 ^ LODWORD(STACK[0x6770]);
  v493 = LODWORD(STACK[0x6A70]) - 962277554;
  LODWORD(STACK[0x6418]) = v493;
  v494 = v492 ^ v493;
  v495 = STACK[0x6638];
  LODWORD(STACK[0x6570]) = LODWORD(STACK[0x6638]) ^ 0x96DAB031;
  v496 = LODWORD(STACK[0x6840]) ^ 0x9FDA2DA8;
  LODWORD(STACK[0x6830]) = v496;
  v497 = (v170 ^ v494 ^ v495 ^ 0x96DAB031 ^ v496 ^ 0xC3C70004)
       - 2
       * ((v170 ^ v494 ^ v495 ^ 0x96DAB031 ^ v496 ^ 0xC3C70004) & 0x2006351E ^ (v170 ^ v494 ^ v495 ^ 0x96DAB031 ^ v496) & 8);
  v498 = LODWORD(STACK[0x6580]) + 881;
  v499 = LODWORD(STACK[0x6510]) + 2683;
  v500 = LODWORD(STACK[0x66B0]) ^ 0x68720F87;
  LODWORD(STACK[0x68A0]) = v500;
  v501 = LODWORD(STACK[0x6528]) ^ 0xDB6AB6D5;
  LODWORD(STACK[0x6528]) = v501;
  LODWORD(v170) = v501 ^ v500 ^ v499 ^ v498;
  v502 = LODWORD(STACK[0x64D8]) + 408104702;
  LODWORD(STACK[0x67F0]) = v502;
  v503 = LODWORD(STACK[0x6690]) ^ 0x5426FDB1;
  v504 = LODWORD(STACK[0x6540]) - 355239063;
  LODWORD(STACK[0x6518]) = v504;
  v505 = LODWORD(STACK[0x6600]) - 6961056;
  v506 = LODWORD(STACK[0x6860]) + 56602256;
  v507 = LODWORD(STACK[0x65F8]) + 613015787;
  LODWORD(v170) = v170 ^ v502 ^ v503 ^ (LODWORD(STACK[0x69D0]) - 943481307) ^ v504 ^ v507 ^ v505 ^ v506;
  v508 = LODWORD(STACK[0x64E0]) - 922807945;
  v509 = LODWORD(STACK[0x64C0]) - 1245405536;
  v510 = STACK[0x68F0];
  v511 = LODWORD(STACK[0x6A20]) + LODWORD(STACK[0x68F0]) + 455013934;
  LODWORD(STACK[0x6860]) = v511;
  v512 = STACK[0x6588];
  v513 = v170 ^ v511 ^ v508 ^ LODWORD(STACK[0x6588]) ^ v509;
  v514 = (LODWORD(STACK[0x6920]) ^ v510) + 1554606439;
  v515 = LODWORD(STACK[0x6920]) - 468125714;
  v516 = LODWORD(STACK[0x6548]) + 944099371;
  LODWORD(STACK[0x64E0]) = v516;
  v517 = LODWORD(STACK[0x6700]) ^ 0xFF6A745F;
  LODWORD(STACK[0x6920]) = v517;
  v518 = LODWORD(STACK[0x6960]) ^ v515 ^ v514 ^ v517 ^ v516;
  LODWORD(v170) = STACK[0x6668];
  LODWORD(STACK[0x6440]) = LODWORD(STACK[0x6668]) - 1166704986;
  v519 = LODWORD(STACK[0x6550]) + 102740112;
  v520 = STACK[0x64F8];
  v521 = v513 ^ v518 ^ (v170 - 1166704986) ^ v519 ^ LODWORD(STACK[0x64F8]);
  v522 = v497 + 537277718;
  v523 = LODWORD(STACK[0x64F0]) ^ a15;
  LODWORD(STACK[0x6A20]) = v521 ^ v523 ^ v522;
  LODWORD(STACK[0x6580]) = v415 + 1842;
  v524 = ((v415 + 1842) ^ 0xEA84305A) - LODWORD(STACK[0x6970]) - v480;
  LODWORD(STACK[0x6458]) = v515;
  v525 = (v523 ^ (v524 - ((2 * v524 + 1816760582) & 0x400C6A2C) + 1445658009)) - v515;
  LODWORD(STACK[0x6590]) = v498;
  v526 = v498 - 757721418 - LODWORD(STACK[0x64E8]);
  LODWORD(STACK[0x6700]) = v507;
  v527 = v526
       - v507
       + LODWORD(STACK[0x6980])
       - LODWORD(STACK[0x6A10])
       + (v495 ^ 0x22D08F71 ^ (v525 - ((2 * v525) & 0x7F204F82) - 1081071679));
  LODWORD(STACK[0x6578]) = v469;
  v528 = v469 - 9445252 + v512;
  v529 = LODWORD(STACK[0x66B8]) - 165065374;
  LODWORD(STACK[0x65D8]) = v529;
  v530 = LODWORD(STACK[0x6598]) + 62243375;
  LODWORD(STACK[0x6600]) = v530;
  v531 = v528 - LODWORD(STACK[0x6A00]) - LODWORD(STACK[0x6A40]) + v529 + (v527 ^ v530);
  LODWORD(STACK[0x6378]) = v499;
  v532 = LODWORD(STACK[0x66D0]) + v499;
  LODWORD(STACK[0x63F8]) = v434 + 580257178;
  v533 = v532 + v434 + 580257178 - LODWORD(STACK[0x66F0]) - LODWORD(STACK[0x66E0]);
  v534 = STACK[0x68E0];
  LODWORD(STACK[0x6680]) = LODWORD(STACK[0x68E0]) - 2087456254;
  LODWORD(STACK[0x6980]) = v534 - (a18 & (2 * (v534 - 2087456254)));
  LODWORD(STACK[0x6368]) = v441 ^ 0xE713033F;
  v535 = v531 ^ LODWORD(STACK[0x6538]);
  LODWORD(STACK[0x63C0]) = v491;
  v536 = v533 - v534 + v520 + (v441 ^ 0xE713033F) - v491 - 161303456 + v535;
  LODWORD(STACK[0x6448]) = v508;
  v537 = v509 - v508 + v536 - 2 * (v536 & v509);
  v538 = -743788348 - LODWORD(STACK[0x65C0]) - LODWORD(STACK[0x69A0]);
  LODWORD(STACK[0x6360]) = v490;
  v539 = STACK[0x6840];
  v540 = LODWORD(STACK[0x6800]) + 864460020;
  v541 = LODWORD(STACK[0x65E0]) ^ 0xCCC58528;
  v542 = LODWORD(STACK[0x6660]) - 704259158;
  v543 = (LODWORD(STACK[0x6A70])
        - LODWORD(STACK[0x66D8])
        - 1061734511
        + ((LODWORD(STACK[0x65B0])
          + v540
          + 1831461128
          - LODWORD(STACK[0x6620])
          - v170
          - LODWORD(STACK[0x6A30])
          + LODWORD(STACK[0x6890])
          - (((LODWORD(STACK[0x6810]) ^ 0x75A2C49D) + 1336018465) ^ ((LODWORD(STACK[0x6810]) ^ 0xCBA35355) - 240938519) ^ ((LODWORD(STACK[0x6810]) ^ 0x1A0D3CEA) + 537787992))
          - (((v539 ^ 0xFD3B28E4) - 1658914124) ^ ((v539 ^ a19) + 1680924730) ^ ((v539 ^ 0x11257CDA) + 1895870094))
          + ((v538 + (v537 ^ v490)) ^ v541)
          + 732) ^ LODWORD(STACK[0x6780]))) ^ LODWORD(STACK[0x6710]);
  v544 = LODWORD(STACK[0x6880]) - LODWORD(STACK[0x67E0]) - LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x6420]) = v489;
  v545 = STACK[0x6850];
  v546 = (v519
        - (LODWORD(STACK[0x67B0])
         + LODWORD(STACK[0x6AA0])
         + LODWORD(STACK[0x69F0]))
        - 1989851968
        + (LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6850]) ^ (v544 - v489 + v542 - LODWORD(STACK[0x6560]) + v543))) ^ LODWORD(STACK[0x6628]);
  v547 = LODWORD(STACK[0x65D0]) ^ 0xC22A115C;
  v548 = LODWORD(STACK[0x6640]) ^ 0x79FE3C69;
  v549 = LODWORD(STACK[0x6A60]) + LODWORD(STACK[0x6A90]) + 1474389822;
  v550 = v549 + LODWORD(STACK[0x65B8]);
  LODWORD(STACK[0x6460]) = v503;
  v551 = v550 + v503 + LODWORD(STACK[0x67F0]) - 121610704 + LODWORD(STACK[0x68D0]);
  v552 = LODWORD(STACK[0x69E0]) ^ 0x2A74FC02;
  LODWORD(STACK[0x6380]) = v552;
  v553 = STACK[0x64E0];
  v554 = v551
       - v552
       + LODWORD(STACK[0x6670])
       - LODWORD(STACK[0x6500])
       - LODWORD(STACK[0x6A50])
       - LODWORD(STACK[0x64C8])
       - LODWORD(STACK[0x64E0])
       - LODWORD(STACK[0x6870])
       + v514;
  LODWORD(STACK[0x6598]) = v506;
  v555 = LODWORD(STACK[0x66F8]) - 912249376;
  LODWORD(STACK[0x6450]) = v505;
  v556 = v555
       + LODWORD(STACK[0x6630])
       - LODWORD(STACK[0x66C8])
       + LODWORD(STACK[0x6760])
       + ((v554 + ((v547 - v548 + v546) ^ v506)) ^ v505);
  v557 = LODWORD(STACK[0x6750]) - 158542515;
  v558 = LODWORD(STACK[0x65C8]) ^ 0x60E7EDAC;
  v559 = LODWORD(STACK[0x67D0]) ^ 0x3498C5FF;
  LODWORD(v170) = 943481307
                - (LODWORD(STACK[0x6930])
                 + v559)
                + LODWORD(STACK[0x64D0])
                - LODWORD(STACK[0x69D0])
                - LODWORD(STACK[0x6860])
                + LODWORD(STACK[0x6920]);
  v560 = LODWORD(STACK[0x65E8]) ^ 0x7DA8D43F;
  v561 = (((1609745275
          - LODWORD(STACK[0x69C0])
          + LODWORD(STACK[0x6518])
          + ((LODWORD(STACK[0x6790])
            - (LODWORD(STACK[0x68A0])
             + LODWORD(STACK[0x6658]))
            - (((LODWORD(STACK[0x69B0]) ^ 0xBEDE4AD9) - 1186456097) ^ ((LODWORD(STACK[0x69B0]) ^ 0x7BD77DCF) + 2084645577) ^ ((LODWORD(STACK[0x69B0]) ^ 0x5FA35D01) + 1479870983))
            + LODWORD(STACK[0x6568])
            + v557
            - (((LODWORD(STACK[0x6A80]) ^ 0x1E5B2FD6) - 1058047738) ^ ((LODWORD(STACK[0x6A80]) ^ 0xA4C52D0B) + 2054257625) ^ ((LODWORD(STACK[0x6A80]) ^ 0xBE0BA78E) + 1623191902))
            - (((LODWORD(STACK[0x68C0]) ^ 0xADCD4CA9) - 53954598) ^ ((LODWORD(STACK[0x68C0]) ^ 0x922277E4) - 1020818283) ^ ((LODWORD(STACK[0x68C0]) ^ 0x8FC14785) - 557531914))
            + 1939383045
            + (((((v556 ^ v558) - LODWORD(STACK[0x6528])) ^ LODWORD(STACK[0x65A8])) + LODWORD(STACK[0x6530])) ^ LODWORD(STACK[0x6820]))) ^ LODWORD(STACK[0x6618]))) ^ v560)
        + LODWORD(STACK[0x6770])) ^ LODWORD(STACK[0x6688]);
  v562 = LODWORD(STACK[0x6990]) ^ 0x53868376;
  LODWORD(STACK[0x63E8]) = v562;
  LODWORD(v170) = v170 - v562 + LODWORD(STACK[0x6558]);
  v563 = STACK[0x65F0];
  LODWORD(STACK[0x6470]) = LODWORD(STACK[0x65F0]) ^ 0xCBEACAFE;
  LODWORD(STACK[0x6A50]) = v170 + (v563 ^ 0xCBEACAFE) + v561;
  v564 = (((2 * LODWORD(STACK[0x6830])) & 0x4201031C ^ 0x40010308)
        - ((2 * ((2 * LODWORD(STACK[0x6830])) & 0x4201031C ^ 0x40010308)) & 0x84000218)
        - 1021941298) ^ 0xE71779CE;
  v565 = v564 - ((2 * v564) & 0xFC003200);
  LODWORD(STACK[0x6588]) = v519;
  v566 = (((((LODWORD(STACK[0x66E8]) ^ v545 ^ v519) >> 1) ^ 0x289800D2) - 183318529) ^ ((((LODWORD(STACK[0x66E8]) ^ v545 ^ v519) >> 1) ^ 0x7018ED06) - 1382929877) ^ ((((LODWORD(STACK[0x66E8]) ^ v545 ^ v519) >> 1) ^ 0xC50E600) - 774233811))
       + 2032618582;
  LODWORD(v170) = (v566 ^ 0x9DA7D5E6) & (2 * (v566 & 0xDDA719C4)) ^ v566 & 0xDDA719C4;
  v567 = ((2 * (v566 ^ 0x3FE7D4E6)) ^ 0xC4819A44) & (v566 ^ 0x3FE7D4E6) ^ (2 * (v566 ^ 0x3FE7D4E6)) & 0xE240CD22;
  LODWORD(v170) = (v567 ^ a22) & (4 * v170) ^ v170;
  v568 = ((4 * (v567 ^ 0x22404522)) ^ 0x89033488) & (v567 ^ 0x22404522) ^ (4 * (v567 ^ 0x22404522)) & 0xE240CD20;
  LODWORD(v170) = v170 ^ 0xE240CD22 ^ (v568 ^ 0x80000402) & (16 * v170);
  v569 = (16 * (v568 ^ 0x6240C922)) & 0xE240CD20 ^ a21 ^ ((16 * (v568 ^ 0x6240C922)) ^ 0x240CD220) & (v568 ^ 0x6240C922);
  LODWORD(v170) = ((_DWORD)v170 << 8) & 0xE240CD00 ^ v170 ^ (((_DWORD)v170 << 8) ^ 0x40CD2200) & v569;
  LODWORD(v170) = ((_DWORD)v170 << 16) & 0x62400000 ^ v170 ^ (((_DWORD)v170 << 16) ^ 0x4D220000) & ((v569 << 8) & 0xE2400000 ^ 0x22000000 ^ ((v569 << 8) ^ 0x40CD0000) & v569);
  v570 = (((v539 ^ 0xA6CB3277) - 27027816) ^ ((v539 ^ 0xB61F7B07) - 289939480) ^ ((v539 ^ 0x59DFAEAE) + 24578639))
       + 1431385770
       + ((v565 - 14911231) ^ a20);
  v571 = (v570 ^ 0x594386C7) & (2 * (v570 & 0x990B8617)) ^ v570 & 0x990B8617;
  v572 = ((2 * (v570 ^ 0x79508EE5)) ^ 0xC0B611E4) & (v570 ^ 0x79508EE5) ^ (2 * (v570 ^ 0x79508EE5)) & 0xE05B08F2;
  v573 = (v572 ^ a24) & (4 * v571) ^ v571;
  v574 = ((4 * (v572 ^ 0x20490812)) ^ 0x816C23C8) & (v572 ^ 0x20490812) ^ (4 * (v572 ^ 0x20490812)) & 0xE05B08F0;
  v575 = v573 ^ 0xE05B08F2 ^ (v574 ^ 0x804800C2) & (16 * v573);
  v576 = (16 * (v574 ^ 0x60130832)) & 0xE05B08F0 ^ 0xE04B00D2 ^ ((16 * (v574 ^ 0x60130832)) ^ 0x5B08F20) & (v574 ^ 0x60130832);
  v577 = (v575 << 8) & 0xE05B0800 ^ v575 ^ ((v575 << 8) ^ a23) & v576;
  v578 = v570 ^ v523 ^ (2
                      * ((v577 << 16) & 0x605B0000 ^ v577 ^ ((v577 << 16) ^ 0x8F20000) & ((v576 << 8) & 0xE05B0000 ^ 0x20530000 ^ ((v576 << 8) ^ 0x5B080000) & v576)));
  v579 = (((v578 ^ 0x8C34CA42) + 395691660) ^ ((v578 ^ 0xFAE803E1) + 1632177961) ^ ((v578 ^ 0x8FD36B46) + 343041936))
       + 256582153;
  v580 = (v579 ^ 0xB1321109) & (2 * (v579 & 0xA58301A2)) ^ v579 & 0xA58301A2;
  v581 = ((2 * (v579 ^ 0xB0301149)) ^ 0x2B6621D6) & (v579 ^ 0xB0301149) ^ (2 * (v579 ^ 0xB0301149)) & 0x15B310EA;
  v582 = (v581 ^ 0x8110A1) & (4 * v580) ^ v580;
  v583 = ((4 * (v581 ^ 0x14911029)) ^ 0x56CC43AC) & (v581 ^ 0x14911029) ^ (4 * (v581 ^ 0x14911029)) & 0x15B310E8;
  v584 = v582 ^ 0x15B310EB ^ (v583 ^ a25) & (16 * v582);
  v585 = (16 * (v583 ^ 0x1331043)) & 0x15B310E0 ^ 0x482104B ^ ((16 * (v583 ^ 0x1331043)) ^ 0x5B310EB0) & (v583 ^ 0x1331043);
  v586 = (v584 << 8) & 0x15B31000 ^ v584 ^ ((v584 << 8) ^ 0xB310EB00) & v585;
  v587 = (v586 << 16) & 0x15B30000 ^ v586 ^ ((v586 << 16) ^ 0x10EB0000) & ((v585 << 8) & 0x15B30000 ^ 0x4A30000 ^ ((v585 << 8) ^ 0xB3100000) & v585);
  v588 = STACK[0x68B0];
  v589 = STACK[0xD678];
  v590 = *(_QWORD *)(STACK[0xD678] + 8 * (0x7BC22182 % STACK[0x68B0]));
  v591 = ((((v590 ^ 0xEA7BFD74190F087FLL) - 0x7956AD9F84FA7B98) ^ ((v590 ^ 0x258EE0982A88F1E7) + 0x495C4F8C48827E00) ^ ((v590 ^ 0x92A840B16EDAA4C5) - 0x185105AF32FD722))
        - 0x318FF248A7957A2BLL)
       % STACK[0x68B0];
  LODWORD(v590) = 2 * (v553 ^ (LODWORD(STACK[0x6AA0]) + 332149208 + LODWORD(STACK[0x66E8])));
  LODWORD(v590) = (((v590 ^ 0xB16B7886) - 1682820330) ^ ((v590 ^ 0xCCF87118) - 434029940) ^ ((v590 ^ 0xC2C86560)
                                                                                           - 401527052))
                + 1051039895;
  v592 = (v590 ^ 0xA609B6CF) & (2 * (v590 & 0xB42D36EE)) ^ v590 & 0xB42D36EE;
  v593 = ((2 * (v590 ^ 0xCE59F643)) ^ 0xF4E9815A) & (v590 ^ 0xCE59F643) ^ (2 * (v590 ^ 0xCE59F643)) & 0x7A74C0AC;
  v594 = (v593 ^ 0x70608008) & (4 * v592) ^ v592;
  v595 = ((4 * (v593 ^ 0xA1440A5)) ^ 0xE9D302B4) & (v593 ^ 0xA1440A5) ^ (4 * (v593 ^ 0xA1440A5)) & 0x7A74C0AC;
  v596 = (v595 ^ 0x685000A0) & (16 * v594) ^ v594;
  v597 = ((16 * (v595 ^ 0x1224C009)) ^ 0xA74C0AD0) & (v595 ^ 0x1224C009) ^ (16 * (v595 ^ 0x1224C009)) & 0x7A74C0A0;
  v598 = v596 ^ 0x7A74C0AD ^ (v597 ^ 0x2244002D) & (v596 << 8);
  v599 = *(_QWORD *)(v589
                   + 8
                   * (((((*(_QWORD *)(v589 + 8 * v591) ^ 0xA651E1BDC271FD9DLL) + 0x20AC1508F0F16C19) ^ ((*(_QWORD *)(v589 + 8 * v591) ^ 0x8AA9E0A2FD632A00) + 0xC541417CFE3BB86) ^ ((*(_QWORD *)(v589 + 8 * v591) ^ 0x71A55C42624F8AC0) - 0x8A75708AF30E4BALL))
                     + 0x245F5617CB30CCD8)
                    % STACK[0x68B0]));
  LODWORD(STACK[0x67F0]) = v549;
  LODWORD(STACK[0x6488]) = v555;
  v600 = v549 ^ 0xDED3595 ^ v559 ^ v555 ^ v547 ^ LODWORD(STACK[0x6608]);
  LODWORD(STACK[0x6410]) = v540;
  v601 = v600 ^ LODWORD(STACK[0x66C8]) ^ v540 ^ LODWORD(STACK[0x66F0]);
  v602 = LODWORD(STACK[0x6A00]) - 617051831;
  LODWORD(STACK[0x65F8]) = v602;
  v603 = v602 ^ LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x6478]) = v548;
  v604 = v603 ^ v548 ^ LODWORD(STACK[0x6810]);
  LODWORD(STACK[0x63B8]) = v558;
  v605 = v601 ^ v604 ^ v558;
  v606 = LODWORD(STACK[0x6A10]) + 757721418;
  v607 = LODWORD(STACK[0x6A40]) + 626497083;
  v608 = LODWORD(STACK[0x6A30]) - 23348450;
  v609 = LODWORD(STACK[0x69F0]) + 390271078;
  LODWORD(STACK[0x6920]) = v606;
  LODWORD(STACK[0x6480]) = v541;
  LODWORD(STACK[0x6390]) = v607;
  LODWORD(STACK[0x6398]) = v608;
  v610 = v605 ^ v606 ^ v541 ^ v607 ^ v608 ^ v609 ^ LODWORD(STACK[0x65D8]);
  LODWORD(STACK[0x63A8]) = v560;
  LODWORD(STACK[0x63B0]) = v557;
  LODWORD(STACK[0x6930]) = v542;
  v611 = v610 ^ v557 ^ v560 ^ v542 ^ (LODWORD(STACK[0x6980]) + 1304489882) ^ LODWORD(STACK[0x6A80]);
  v612 = LODWORD(STACK[0x68C0]) ^ 0xAEFA048F;
  v613 = v579 ^ v612;
  LODWORD(STACK[0x63A0]) = v563 ^ 0xADC8BAF2;
  v614 = v611 ^ v563 ^ 0xADC8BAF2 ^ v612;
  STACK[0x6AA0] = v589;
  v615 = *(_QWORD *)(v589
                   + 8
                   * (((((v599 ^ 0x24A23926E6CCDDACLL) + 0x1FF2574481624E8ALL) ^ ((v599 ^ 0x4690942AFF76C9C4)
                                                                                + 0x7DC0FA4898D85AE2) ^ ((v599 ^ 0x3F6FF05144E74935uLL) + 0x43F9E332349DA11))
                     - 0x660D333E50521880)
                    % v588));
  v616 = LODWORD(STACK[0x6648]) ^ 0x5B7BA8B2;
  LODWORD(STACK[0x66E0]) = v616;
  v617 = v614 ^ __ROR4__(a17 ^ __ROR4__(v616, 27) ^ __ROR4__(STACK[0x6A20], 27), 5);
  v618 = ((((v615 ^ 0xCC399E55F412955FLL) - 0x677C5E65251D43AFLL) ^ ((v615 ^ 0xA382902112B43544) - 0x8C75011C3BBE3B4) ^ ((v615 ^ 0x32E65329BBFBFD46) + 0x665C6CE6950BD44ALL))
        - 0x9E76291BADECCECLL)
       % v588;
  LODWORD(STACK[0x6490]) = LODWORD(STACK[0x6900]) ^ 0x62240D6D;
  LODWORD(STACK[0x6A90]) = ((((v618 - ((2 * v618) & 0x80860D0) + 604254312) ^ 0x77595E08) - 550913580) ^ (((v618 - ((2 * v618) & 0x80860D0) + 604254312) ^ 0xBD022E32) + 359844330) ^ (((v618 - ((2 * v618) & 0x80860D0) + 604254312) ^ 0xEE5F4052) + 1177528202))
                         - 876209409;
  v619 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AB0])) - 12);
  LODWORD(STACK[0x6890]) = v566 ^ (2 * v170);
  LODWORD(STACK[0x6900]) = (v613 ^ (2 * v587)) >> 1;
  LODWORD(STACK[0x68A0]) = v590 ^ (2
                                 * ((v598 << 16) & 0x7A740000 ^ v598 ^ ((v598 << 16) ^ 0x40AD0000) & (((v597 ^ 0x5830C02D) << 8) & 0x7A740000 ^ 0xA340000 ^ (((v597 ^ 0x5830C02D) << 8) ^ 0x74C00000) & (v597 ^ 0x5830C02D))));
  LODWORD(STACK[0x6A80]) = v617;
  LODWORD(STACK[0x6A70]) = (2 * v617) & 0xA70D06EC;
  return v619();
}

uint64_t sub_100C4EBE0@<X0>(int a1@<W8>)
{
  _BOOL4 v1;

  if (LODWORD(STACK[0x6A90]) < 0x583AF2B3 != (a1 - 746401) < 0x583AF2B3)
    v1 = LODWORD(STACK[0x6A90]) < 0x583AF2B3;
  else
    v1 = (a1 - 746401) < LODWORD(STACK[0x6A90]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((420 * !v1) ^ LODWORD(STACK[0x6AB0]))) - 12))();
}

uint64_t sub_100C518F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unsigned int v5;

  LODWORD(STACK[0x6550]) = LODWORD(STACK[0x6810]) ^ 0xC5FF3D42;
  LODWORD(STACK[0x66A0]) = LODWORD(STACK[0x6890]) ^ 0x29E9B9CF;
  LODWORD(STACK[0x62B0]) = LODWORD(STACK[0x6A80]) + 1401324406 - LODWORD(STACK[0x6A70]);
  STACK[0x6A90] = STACK[0xD678];
  v4 = STACK[0x6910];
  LODWORD(STACK[0x6AB0]) = a4 - 4;
  v5 = ((v4 ^ 0xB61B743D) - 1745183997) ^ ((v4 ^ 0xC733DFF2) - 422432562) ^ ((v4 ^ (a4 - 4) ^ 0x62FBCB03) + 1125782074);
  LODWORD(STACK[0x6A80]) = v5;
  LODWORD(STACK[0x6A70]) = v5 + 552322255;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a4) - 4))();
}

uint64_t sub_100C51A3C()
{
  int v0;
  _BOOL4 v1;
  int v2;
  _BOOL4 v3;

  v1 = LODWORD(STACK[0x6A80]) < 0x3232B9F7;
  v2 = STACK[0x6AB0];
  STACK[0x6AA0] = (LODWORD(STACK[0x6AB0]) - 10499) | 0x3214u;
  if (v1 != (v0 - 86497166) < LODWORD(STACK[0x3AC]))
    v3 = v1;
  else
    v3 = LODWORD(STACK[0x6A70]) > v0 - 86497166;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4 * v3) | (8 * v3)) ^ v2)) - 4))();
}

uint64_t sub_100C54720@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t (*v168)(void);

  v2 = LODWORD(STACK[0x6A60]) - LODWORD(STACK[0x6940]) - LODWORD(STACK[0x6950]);
  v3 = ((a2 + 0x4591F23436A5EDEDLL) ^ 0x495D8F3F0D0205) & (2 * ((a2 + 0x4591F23436A5EDEDLL) & 0xA54C5E2FBF0910A6)) ^ (a2 + 0x4591F23436A5EDEDLL) & 0xA54C5E2FBF0910A6;
  v4 = ((2 * ((a2 + 0x4591F23436A5EDEDLL) ^ 0x8D1F9D2051D2249)) ^ 0x5B3B4FFB742865DELL) & ((a2 + 0x4591F23436A5EDEDLL) ^ 0x8D1F9D2051D2249) ^ (2 * ((a2 + 0x4591F23436A5EDEDLL) ^ 0x8D1F9D2051D2249)) & 0xAD9DA7FDBA1432EELL;
  v5 = v4 ^ 0xA484A0048A141221;
  v6 = (v4 ^ 0x91101F930000088) & (4 * v3) ^ v3;
  v7 = ((4 * v5) ^ 0xB6769FF6E850CBBCLL) & v5 ^ (4 * v5) & 0xAD9DA7FDBA1432ECLL;
  v8 = (v7 ^ 0xA41487F4A81002A0) & (16 * v6) ^ v6;
  v9 = ((16 * (v7 ^ 0x989200912043043)) ^ 0xD9DA7FDBA1432EF0) & (v7 ^ 0x989200912043043) ^ (16
                                                                                                * (v7 ^ 0x989200912043043)) & 0xAD9DA7FDBA1432E0;
  v10 = (v9 ^ 0x899827D9A0002200) & (v8 << 8) ^ v8;
  v11 = (((v9 ^ 0x240580241A14100FLL) << 8) ^ 0x9DA7FDBA1432EF00) & (v9 ^ 0x240580241A14100FLL) ^ ((v9 ^ 0x240580241A14100FLL) << 8) & 0xAD9DA7FDBA143200;
  v12 = v10 ^ 0xAD9DA7FDBA1432EFLL ^ (v11 ^ 0x8D85A5B810100000) & (v10 << 16);
  v13 = ((a2 + 0x4591F23436A5EDEDLL) ^ (2
                                      * ((v12 << 32) & 0x2D9DA7FD00000000 ^ v12 ^ ((v12 << 32) ^ 0x3A1432EF00000000) & (((v11 ^ 0x20180245AA0410EFLL) << 16) & 0x2D9DA7FD00000000 ^ 0x80005E900000000 ^ (((v11 ^ 0x20180245AA0410EFLL) << 16) ^ 0x27FDBA1400000000) & (v11 ^ 0x20180245AA0410EFLL))))) >> 29;
  v14 = a2
      - (((v13 ^ 0xEC890738EAD5AD2BLL) - 0x5CCB8B72CF4EF33ELL) ^ ((v13 ^ 0x2C093929962AEF07) + 0x63B44A9C4C4E4EEELL) ^ ((v13 ^ 0xC0803E140E05E25ALL) - 0x70C2B25E2B9EBC4FLL))
      + 0x26A7B89E05D87EE8;
  v15 = (v14 ^ 0x93E32A745A666824) & (2 * (v14 & 0x13F40B7698748148)) ^ v14 & 0x13F40B7698748148;
  v16 = ((2 * (v14 ^ 0x95EB3AFC5A0F6824)) ^ 0xC3E631584F7D2D8) & (v14 ^ 0x95EB3AFC5A0F6824) ^ (2 * (v14 ^ 0x95EB3AFC5A0F6824)) & 0x861F318AC27BE96CLL;
  v17 = v16 ^ 0x8201108A42082924;
  v18 = (v16 ^ 0x410210080720040) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0x187CC62B09EFA5B0) & v17 ^ (4 * v17) & 0x861F318AC27BE96CLL;
  v20 = (v19 ^ 0x1C000A006BA120) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x86033180C210484CLL)) ^ 0x61F318AC27BE96C0) & (v19 ^ 0x86033180C210484CLL) ^ (16 * (v19 ^ 0x86033180C210484CLL)) & 0x861F318AC27BE960;
  v22 = (v21 ^ 0x131088023A8000) & (v20 << 8) ^ v20;
  v23 = (((v21 ^ 0x860C2102C041692CLL) << 8) ^ 0x1F318AC27BE96C00) & (v21 ^ 0x860C2102C041692CLL) ^ ((v21 ^ 0x860C2102C041692CLL) << 8) & 0x861F318AC27BE900;
  v24 = v22 ^ 0x861F318AC27BE96CLL ^ (v23 ^ 0x611008242690000) & (v22 << 16);
  v25 = (v14 ^ (2
              * ((v24 << 32) & 0x61F318A00000000 ^ v24 ^ ((v24 << 32) ^ 0x427BE96C00000000) & (((v23 ^ 0x800E31088012816CLL) << 16) & 0x61F318A00000000 ^ 0x615318000000000 ^ (((v23 ^ 0x800E31088012816CLL) << 16) ^ 0x318AC27B00000000) & (v23 ^ 0x800E31088012816CLL))))) >> 14;
  v26 = v14
      - (((v25 ^ 0x7429712A1895AA73) + 0x61CF0139AAF3C775) ^ ((v25 ^ 0xF0F4B0A929C0B684) - 0x1AED3F456459247CLL) ^ ((v25 ^ 0x84DDAE7398996EFALL) - 0x6EC4219FD500FC02))
      - 0x1998DA566C402516;
  v27 = (v26 ^ 0x3262B1AA2B5EA465) & (2 * (v26 & 0x437305B0205EC569)) ^ v26 & 0x437305B0205EC569;
  v28 = ((2 * (v26 ^ 0xB226B9CA6B7AAEB5)) ^ 0xE2AB78F49648D7B8) & (v26 ^ 0xB226B9CA6B7AAEB5) ^ (2 * (v26 ^ 0xB226B9CA6B7AAEB5)) & 0xF155BC7A4B246BDCLL;
  v29 = v28 ^ 0x1154840A49242844;
  v30 = (v28 ^ 0x384002000388) & (4 * v27) ^ v27;
  v31 = ((4 * v29) ^ 0xC556F1E92C91AF70) & v29 ^ (4 * v29) & 0xF155BC7A4B246BDCLL;
  v32 = (v31 ^ 0xC154B06808002B50) & (16 * v30) ^ v30;
  v33 = ((16 * (v31 ^ 0x30010C124324408CLL)) ^ 0x155BC7A4B246BDC0) & (v31 ^ 0x30010C124324408CLL) ^ (16 * (v31 ^ 0x30010C124324408CLL)) & 0xF155BC7A4B246BD0;
  v34 = (v33 ^ 0x1151842002042900) & (v32 << 8) ^ v32;
  v35 = (((v33 ^ 0xE004385A4920421CLL) << 8) ^ 0x55BC7A4B246BDC00) & (v33 ^ 0xE004385A4920421CLL) ^ ((v33 ^ 0xE004385A4920421CLL) << 8) & 0xF155BC7A4B246B00;
  v36 = v34 ^ 0xF155BC7A4B246BDCLL ^ (v35 ^ 0x5114384A00200000) & (v34 << 16);
  v37 = (v26 ^ (2
              * ((v36 << 32) & 0x7155BC7A00000000 ^ v36 ^ ((v36 << 32) ^ 0x4B246BDC00000000) & (((v35 ^ 0xA04184304B0423DCLL) << 16) & 0x7155BC7A00000000 ^ 0x4105B45A00000000 ^ (((v35 ^ 0xA04184304B0423DCLL) << 16) ^ 0x3C7A4B2400000000) & (v35 ^ 0xA04184304B0423DCLL))))) >> 5;
  v38 = v26
      - 0x13951E75A52F77ELL
      + (((v37 ^ 0x661DDDCEA823A16ELL) + 0x6F1BBCBD4434918ELL) ^ ((v37 ^ 0x3D6FD93BA58F1EE0) + 0x3469B84849982E04) ^ ((v37 ^ 0x5A6C859AA81C0F18) + 0x536AE4E9440B3FFCLL));
  v39 = (v38 ^ 0xB8037772B0EBBB69) & (2 * (v38 & 0x3C93777B310A3C71)) ^ v38 & 0x3C93777B310A3C71;
  v40 = ((2 * (v38 ^ 0xC0039D90F0EFC38BLL)) ^ 0xF921D5D783CBFFF4) & (v38 ^ 0xC0039D90F0EFC38BLL) ^ (2 * (v38 ^ 0xC0039D90F0EFC38BLL)) & 0xFC90EAEBC1E5FFFALL;
  v41 = v40 ^ 0x4902A284024000ALL;
  v42 = (v40 ^ 0xF000C0C18041F3C0) & (4 * v39) ^ v39;
  v43 = ((4 * v41) ^ 0xF243ABAF0797FFE8) & v41 ^ (4 * v41) & 0xFC90EAEBC1E5FFF8;
  v44 = (v43 ^ 0xF000AAAB0185FFE0) & (16 * v42) ^ v42;
  v45 = ((16 * (v43 ^ 0xC904040C0600012)) ^ 0xC90EAEBC1E5FFFA0) & (v43 ^ 0xC904040C0600012) ^ (16 * (v43 ^ 0xC904040C0600012)) & 0xFC90EAEBC1E5FFF0;
  v46 = (v45 ^ 0xC800AAA80045FF00) & (v44 << 8) ^ v44;
  v47 = (((v45 ^ 0x34904043C1A0005ALL) << 8) ^ 0x90EAEBC1E5FFFA00) & (v45 ^ 0x34904043C1A0005ALL) ^ ((v45 ^ 0x34904043C1A0005ALL) << 8) & 0xFC90EAEBC1E5FF00;
  v48 = v46 ^ 0xFC90EAEBC1E5FFFALL ^ (v47 ^ 0x9080EAC1C1E50000) & (v46 << 16);
  v49 = v38 ^ (2
             * ((v48 << 32) & 0x7C90EAEB00000000 ^ v48 ^ ((v48 << 32) ^ 0x41E5FFFA00000000) & (((v47 ^ 0x6C10002A000005FALL) << 16) & 0x7C90EAEB00000000 ^ 0x14102A0A00000000 ^ (((v47 ^ 0x6C10002A000005FALL) << 16) ^ 0x6AEBC1E500000000) & (v47 ^ 0x6C10002A000005FALL))));
  v50 = ((v49 ^ 0xEBB4993ADCC9B836) + 0x351691780B180B73) ^ ((v49 ^ 0x554E3208713A90D5) - 0x7413C5B55914DC6ELL) ^ ((v49 ^ 0xFA49DC4A1F32EB66) + 0x24EBD408C8E35823);
  v51 = ((v50 - 0x36B4F3F7983ABC93) ^ 0xDE9378D7D29B37A7) & (2
                                                               * ((v50 - 0x36B4F3F7983ABC93) & 0x9F1862E7DADA37B6)) ^ (v50 - 0x36B4F3F7983ABC93) & 0x9F1862E7DADA37B6;
  v52 = ((2 * ((v50 - 0x36B4F3F7983ABC93) ^ 0xE8B3BD51663B34E7)) ^ 0xEF57BF6D79C206A2) & ((v50
                                                                                               - 0x36B4F3F7983ABC93) ^ 0xE8B3BD51663B34E7) ^ (2 * ((v50 - 0x36B4F3F7983ABC93) ^ 0xE8B3BD51663B34E7)) & 0x77ABDFB6BCE10350;
  v53 = v52 ^ 0x10A8409284210151;
  v54 = (v52 ^ 0x64039F2438C00200) & (4 * v51) ^ v51;
  v55 = ((4 * v53) ^ 0xDEAF7EDAF3840D44) & v53 ^ (4 * v53) & 0x77ABDFB6BCE10350;
  v56 = (v55 ^ 0x56AB5E92B0800140) & (16 * v54) ^ v54;
  v57 = ((16 * (v55 ^ 0x210081240C610211)) ^ 0x7ABDFB6BCE103510) & (v55 ^ 0x210081240C610211) ^ (16 * (v55 ^ 0x210081240C610211)) & 0x77ABDFB6BCE10350;
  v58 = (v57 ^ 0x72A9DB228C000100) & (v56 << 8) ^ v56;
  v59 = (((v57 ^ 0x502049430E10241) << 8) ^ 0xABDFB6BCE1035100) & (v57 ^ 0x502049430E10241) ^ ((v57 ^ 0x502049430E10241) << 8) & 0x77ABDFB6BCE10300;
  v60 = v58 ^ 0x77ABDFB6BCE10351 ^ (v59 ^ 0x238B96B4A0010000) & (v58 << 16);
  v61 = v50
      + 0x68636EF0429F7B24
      + ((((v50 - 0x36B4F3F7983ABC93) ^ (2
                                         * ((v60 << 32) & 0x77ABDFB600000000 ^ v60 ^ ((v60 << 32) ^ 0x3CE1035100000000) & (((v59 ^ 0x542049021CE00251) << 16) & 0x77ABDFB600000000 ^ 0x2009431600000000 ^ (((v59 ^ 0x542049021CE00251) << 16) ^ 0x5FB6BCE100000000) & (v59 ^ 0x542049021CE00251))))) >> 28) ^ 0xFFFFFFFE6F224555);
  v62 = v61 + (v61 >> 15) - ((v61 + (v61 >> 15)) >> 7);
  v63 = v62 + ((v62 - 0x1169993D3BD78268) >> 29) + 0x16530D4D08F38842;
  v64 = (v63 ^ 0x94335875BA34F455) & (2 * (v63 & 0xD8435975BB34F556)) ^ v63 & 0xD8435975BB34F556;
  v65 = ((2 * (v63 ^ 0x34B5D835CE75B675)) ^ 0xD9ED0280EA828646) & (v63 ^ 0x34B5D835CE75B675) ^ (2 * (v63 ^ 0x34B5D835CE75B675)) & 0xECF6814075414322;
  v66 = v65 ^ 0x2412814015414121;
  v67 = (v65 ^ 0xC004000060000200) & (4 * v64) ^ v64;
  v68 = ((4 * v66) ^ 0xB3DA0501D5050C8CLL) & v66 ^ (4 * v66) & 0xECF6814075414320;
  v69 = (v68 ^ 0xA0D2010055010000) & (16 * v67) ^ v67;
  v70 = ((16 * (v68 ^ 0x4C24804020404323)) ^ 0xCF68140754143230) & (v68 ^ 0x4C24804020404323) ^ (16 * (v68 ^ 0x4C24804020404323)) & 0xECF6814075414320;
  v71 = (v70 ^ 0xCC60000054000200) & (v69 << 8) ^ v69;
  v72 = (((v70 ^ 0x2096814021414103) << 8) ^ 0xF681407541432300) & (v70 ^ 0x2096814021414103) ^ ((v70 ^ 0x2096814021414103) << 8) & 0xECF6814075414300;
  v73 = v71 ^ 0xECF6814075414323 ^ (v72 ^ 0xE480004041410000) & (v71 << 16);
  v74 = (v63 ^ (2
              * ((v73 << 32) & 0x6CF6814000000000 ^ v73 ^ ((v73 << 32) ^ 0x7541432300000000) & (((v72 ^ 0x876810034004023) << 16) & 0x6CF6814000000000 ^ 0x6CB6800000000000 ^ (((v72 ^ 0x876810034004023) << 16) ^ 0x140754100000000) & (v72 ^ 0x876810034004023))))) >> 8;
  v75 = v62
      + ((v62 - 0x1169993D3BD78268) >> 29)
      - 0x15F48D9ACF06A80DLL
      + (((v74 ^ 0x954F7634CB072B51) - 0x141F11C2B111CAC3) ^ ((v74 ^ 0x59D81B6E4285FA63) + 0x27778367C76CE40FLL) ^ ((v74 ^ 0xCC5E43037CD36741) - 0x4D0E24F506C586D3));
  v76 = (v75 ^ 0x97833D4C03667D26) & (2 * (v75 & 0x86243E0D22767D86)) ^ v75 & 0x86243E0D22767D86;
  v77 = ((2 * (v75 ^ 0x9783015C030A552ALL)) ^ 0x234E7EA242F85158) & (v75 ^ 0x9783015C030A552ALL) ^ (2 * (v75 ^ 0x9783015C030A552ALL)) & 0x11A73F51217C28ACLL;
  v78 = v77 ^ 0x10A10151210428A4;
  v79 = (v77 ^ 0x100380000780008) & (4 * v76) ^ v76;
  v80 = ((4 * v78) ^ 0x469CFD4485F0A2B0) & v78 ^ (4 * v78) & 0x11A73F51217C28ACLL;
  v81 = (v80 ^ 0x843D40017020A0) & (16 * v79) ^ v79;
  v82 = ((16 * (v80 ^ 0x11230211200C080CLL)) ^ 0x1A73F51217C28AC0) & (v80 ^ 0x11230211200C080CLL) ^ (16 * (v80 ^ 0x11230211200C080CLL)) & 0x11A73F51217C28A0;
  v83 = (v82 ^ 0x1023351001400800) & (v81 << 8) ^ v81;
  v84 = (((v82 ^ 0x1840A41203C202CLL) << 8) ^ 0xA73F51217C28AC00) & (v82 ^ 0x1840A41203C202CLL) ^ ((v82 ^ 0x1840A41203C202CLL) << 8) & 0x11A73F51217C2800;
  v85 = v83 ^ 0x11A73F51217C28ACLL ^ (v84 ^ 0x127110120280000) & (v83 << 16);
  v86 = (v75 ^ (2
              * ((v85 << 32) & 0x11A73F5100000000 ^ v85 ^ ((v85 << 32) ^ 0x217C28AC00000000) & (((v84 ^ 0x10802E50015400ACLL) << 16) & 0x11A73F5100000000 ^ 0xA61E0100000000 ^ (((v84 ^ 0x10802E50015400ACLL) << 16) ^ 0x3F51217C00000000) & (v84 ^ 0x10802E50015400ACLL))))) >> 2;
  v87 = v75
      + 0x1743348C99E63778
      + (((v86 ^ 0xB9FAA51779C48F46) - 0x3CBE9D42EC1EF695) ^ ((v86 ^ 0x20727C6303F6AC33) + 0x5AC9BBC969D32A20) ^ ((v86 ^ 0xB0405D5FA211A842) - 0x3504650A37CBD191));
  v88 = (v87 ^ 0xD26D95FC86A9B8F2) & (2 * (v87 & 0x1B6DC5FED68A38F2)) ^ v87 & 0x1B6DC5FED68A38F2;
  v89 = ((2 * (v87 ^ 0xD03F950406A9C956)) ^ 0x96A4A1F5A047E348) & (v87 ^ 0xD03F950406A9C956) ^ (2 * (v87 ^ 0xD03F950406A9C956)) & 0xCB5250FAD023F1A4;
  v90 = v89 ^ 0x4952500A502010A4;
  v91 = (v89 ^ 0x820000F08001E100) & (4 * v88) ^ v88;
  v92 = ((4 * v90) ^ 0x2D4943EB408FC690) & v90 ^ (4 * v90) & 0xCB5250FAD023F1A4;
  v93 = (v92 ^ 0x94040EA4003C080) & (16 * v91) ^ v91;
  v94 = ((16 * (v92 ^ 0xC212101090203124)) ^ 0xB5250FAD023F1A40) & (v92 ^ 0xC212101090203124) ^ (16 * (v92 ^ 0xC212101090203124)) & 0xCB5250FAD023F1A0;
  v95 = (v94 ^ 0x810000A800231000) & (v93 << 8) ^ v93;
  v96 = (((v94 ^ 0x4A525052D000E1A4) << 8) ^ 0x5250FAD023F1A400) & (v94 ^ 0x4A525052D000E1A4) ^ ((v94 ^ 0x4A525052D000E1A4) << 8) & 0xCB5250FAD023F100;
  v97 = v95 ^ 0xCB5250FAD023F1A4 ^ (v96 ^ 0x425050D000210000) & (v95 << 16);
  v98 = v87 ^ (2
             * ((v97 << 32) & 0x4B5250FA00000000 ^ v97 ^ ((v97 << 32) ^ 0x5023F1A400000000) & (((v96 ^ 0x8902002AD00251A4) << 16) & 0x4B5250FA00000000 ^ 0xB0000D800000000 ^ (((v96 ^ 0x8902002AD00251A4) << 16) ^ 0x50FAD02300000000) & (v96 ^ 0x8902002AD00251A4))));
  v99 = (((v98 ^ 0xB5B24FE5D0A4F538) - 0x7D32A58CB46AA514) ^ ((v98 ^ 0x86E32C9A71C01C1DLL) - 0x4E63C6F3150E4C31) ^ ((v98 ^ 0xEC72C32BF56CE0C6) - 0x24F2294291A2B0EALL))
      - ((((v98 >> 26) ^ 0xFC2A7B6F21F637ADLL) + 0x1937477E19D239CELL) ^ (((v98 >> 26) ^ 0x7F1CB54FC4ABC264)
                                                                        - 0x65FE76A1037033FBLL) ^ (((v98 >> 26) ^ 0x8336CE172DB5E0DCLL)
                                                                                                 + 0x662BF2061591EEBDLL));
  v100 = ((v99 + 0x698D95FB320DC8FLL) ^ 0xE50708B54E69DEB4) & (2 * ((v99 + 0x698D95FB320DC8FLL) & 0xF627AD046E7198B6)) ^ (v99 + 0x698D95FB320DC8FLL) & 0xF627AD046E7198B6;
  v101 = ((2 * ((v99 + 0x698D95FB320DC8FLL) ^ 0xE14658BD4E4ACFBCLL)) ^ 0x2EC3EB724076AE14) & ((v99
                                                                                               + 0x698D95FB320DC8FLL) ^ 0xE14658BD4E4ACFBCLL) ^ (2 * ((v99 + 0x698D95FB320DC8FLL) ^ 0xE14658BD4E4ACFBCLL)) & 0x1761F5B9203B570ALL;
  v102 = v101 ^ 0x112014892009510ALL;
  v103 = (v101 ^ 0x1E03000020600) & (4 * v100) ^ v100;
  v104 = ((4 * v102) ^ 0x5D87D6E480ED5C28) & v102 ^ (4 * v102) & 0x1761F5B9203B5708;
  v105 = (v104 ^ 0x1501D4A000295400) & (16 * v103) ^ v103;
  v106 = ((16 * (v104 ^ 0x260211920120302)) ^ 0x761F5B9203B570A0) & (v104 ^ 0x260211920120302) ^ (16 * (v104 ^ 0x260211920120302)) & 0x1761F5B9203B5700;
  v107 = (v106 ^ 0x1601519000315000) & (v105 << 8) ^ v105;
  v108 = (((v106 ^ 0x160A429200A070ALL) << 8) ^ 0x61F5B9203B570A00) & (v106 ^ 0x160A429200A070ALL) ^ ((v106 ^ 0x160A429200A070ALL) << 8) & 0x1761F5B9203B5700;
  v109 = v107 ^ 0x1761F5B9203B570ALL ^ (v108 ^ 0x161B12020130000) & (v107 << 16);
  v110 = v99
       - 0x33F799BDE6D8ABALL
       + ((((v99 + 0x698D95FB320DC8FLL) ^ (2
                                         * ((v109 << 32) & 0x1761F5B900000000 ^ v109 ^ ((v109 << 32) ^ 0x203B570A00000000) & (((v108 ^ 0x160044990028550ALL) << 16) & 0x1761F5B900000000 ^ 0x240D58000000000 ^ (((v108 ^ 0x160044990028550ALL) << 16) ^ 0x75B9203B00000000) & (v108 ^ 0x160044990028550ALL))))) >> 11) ^ 0xFFE4EB22733A3F19);
  v111 = v110 + (v110 >> 1) - ((2 * (v110 + (v110 >> 1))) & 0x9FC1037E4E03BA84) + 0x4FE081BF2701DD42;
  v112 = (((v111 ^ 0xFE26147535661A90) + 0x1D9EB8ACA99E570) ^ ((v111 ^ 0x98CB3A4784F4463ALL) + 0x6734C5B87B0BB9C6) ^ ((v111 ^ 0x290DAF8D969381E8) - 0x290DAF8D969381E8))
       + 0x4A32D8D75B08C537;
  v113 = v112 + (v112 >> 28) + ((v112 + (v112 >> 28)) >> 8);
  v114 = v113 - (v113 >> 1);
  LODWORD(v62) = v114 ^ v62;
  v115 = v114
       + 0xA1629B7EBE9CDADLL
       - ((v114 + 0xA1629B7EBE9CDADLL) >> 28)
       - ((v114 + 0xA1629B7EBE9CDADLL - ((v114 + 0xA1629B7EBE9CDADLL) >> 28)) >> 15);
  v116 = ((2 * v115) & 0xCCDFFFF5FF7F3FD4) + (v115 ^ 0xE66FFFFAFFBF9FEALL);
  v117 = ((v116 + 0x7DB67FFDBFDFF75ELL) ^ 0x13D13867736B44B1) & (2
                                                                 * ((v116 + 0x7DB67FFDBFDFF75ELL) & 0x9BD98007406068B8)) ^ (v116 + 0x7DB67FFDBFDFF75ELL) & 0x9BD98007406068B8;
  v118 = ((2 * ((v116 + 0x7DB67FFDBFDFF75ELL) ^ 0x7C23869F36BC5D1)) ^ 0x383770DD66175AD2) & ((v116
                                                                                                + 0x7DB67FFDBFDFF75ELL) ^ 0x7C23869F36BC5D1) ^ (2 * ((v116 + 0x7DB67FFDBFDFF75ELL) ^ 0x7C23869F36BC5D1)) & 0x9C1BB86EB30BAD68;
  v119 = v118 ^ 0x840888229108A529;
  v120 = (v118 ^ 0x1802000C02030040) & (4 * v117) ^ v117;
  v121 = ((4 * v119) ^ 0x706EE1BACC2EB5A4) & v119 ^ (4 * v119) & 0x9C1BB86EB30BAD68;
  v122 = (v121 ^ 0x100AA02A800AA520) & (16 * v120) ^ v120;
  v123 = ((16 * (v121 ^ 0x8C11184433010849)) ^ 0xC1BB86EB30BAD690) & (v121 ^ 0x8C11184433010849) ^ (16 * (v121 ^ 0x8C11184433010849)) & 0x9C1BB86EB30BAD60;
  v124 = (v123 ^ 0x801B806A300A8400) & (v122 << 8) ^ v122;
  v125 = (((v123 ^ 0x1C00380483012969) << 8) ^ 0x1BB86EB30BAD6900) & (v123 ^ 0x1C00380483012969) ^ ((v123 ^ 0x1C00380483012969) << 8) & 0x9C1BB86EB30BAD00;
  v126 = v124 ^ 0x9C1BB86EB30BAD69 ^ (v125 ^ 0x1818282203090000) & (v124 << 16);
  v127 = ((v116 + 0x7DB67FFDBFDFF75ELL) ^ (2
                                         * ((v126 << 32) & 0x1C1BB86E00000000 ^ v126 ^ ((v126 << 32) ^ 0x330BAD6900000000) & (((v125 ^ 0x8403904CB0028469) << 16) & 0x1C1BB86E00000000 ^ 0x411086400000000 ^ (((v125 ^ 0x8403904CB0028469) << 16) ^ 0x386EB30B00000000) & (v125 ^ 0x8403904CB0028469))))) >> 1;
  v128 = v116
       - (((v127 ^ 0xD8702141AF8C168ALL) - 0x62FBBB30C7E351B9) ^ ((v127 ^ 0x1BF578336E2E5DE5) + 0x5E811DBDF9BEE52ALL) ^ ((v127 ^ 0x82798977D299D25ALL) - 0x38F21306BAF69569))
       + 0x4B030BDD5BCDA293;
  v129 = (v128 ^ 0xDB05813AAC1DDE7DLL) & (2 * (v128 & 0xD315A9B3291DDF7DLL)) ^ v128 & 0xD315A9B3291DDF7DLL;
  v130 = ((2 * (v128 ^ 0x5F24917AAC266E77)) ^ 0x186271930A776214) & (v128 ^ 0x5F24917AAC266E77) ^ (2 * (v128 ^ 0x5F24917AAC266E77)) & 0x8C3138C9853BB10ALL;
  v131 = v130 ^ 0x841108488508910ALL;
  v132 = (v130 ^ 0x820208100332000) & (4 * v129) ^ v129;
  v133 = ((4 * v131) ^ 0x30C4E32614EEC428) & v131 ^ (4 * v131) & 0x8C3138C9853BB108;
  v134 = (v133 ^ 0x2000042A8000) & (16 * v132) ^ v132;
  v135 = ((16 * (v133 ^ 0x8C3118C981113102)) ^ 0xC3138C9853BB10A0) & (v133 ^ 0x8C3118C981113102) ^ (16 * (v133 ^ 0x8C3118C981113102)) & 0x8C3138C9853BB100;
  v136 = (v135 ^ 0x80110888013B1000) & (v134 << 8) ^ v134;
  v137 = (((v135 ^ 0xC2030418400A10ALL) << 8) ^ 0x3138C9853BB10A00) & (v135 ^ 0xC2030418400A10ALL) ^ ((v135 ^ 0xC2030418400A10ALL) << 8) & 0x8C3138C9853BB100;
  v138 = v136 ^ 0x8C3138C9853BB10ALL ^ (v137 ^ 0x30088101310000) & (v136 << 16);
  v139 = v128 ^ (2
               * ((v138 << 32) & 0xC3138C900000000 ^ v138 ^ ((v138 << 32) ^ 0x53BB10A00000000) & (((v137 ^ 0x8C013048840AB10ALL) << 16) & 0xC3138C900000000 ^ 0x43038C000000000 ^ (((v137 ^ 0x8C013048840AB10ALL) << 16) ^ 0x38C9853B00000000) & (v137 ^ 0x8C013048840AB10ALL))));
  v140 = (v139 ^ 0x3100623CDB3D014) + ((v139 >> 26) ^ 0xFFFFFFFF3BFE770CLL) + 1;
  v141 = ((v140 - (v140 >> 13)) ^ 0x43F3EEAD739ADD2BLL)
       - 0x420022A50208052ALL
       + ((2 * (v140 - (v140 >> 13))) & 0x87E7DD5AE735BA56);
  v142 = (v141 ^ 0xFC4D3BE76E6CB7FFLL) & (2 * (v141 & 0xFE0C33F78E6D27FFLL)) ^ v141 & 0xFE0C33F78E6D27FFLL;
  v143 = ((2 * (v141 ^ 0xA4455CAD6EACF6EBLL)) ^ 0xB492DEB5C183A228) & (v141 ^ 0xA4455CAD6EACF6EBLL) ^ (2 * (v141 ^ 0xA4455CAD6EACF6EBLL)) & 0x5A496F5AE0C1D114;
  v144 = v143 ^ 0x4A49214A20405114;
  v145 = (v143 ^ 0x10004E1040818000) & (4 * v142) ^ v142;
  v146 = ((4 * v144) ^ 0x6925BD6B83074450) & v144 ^ (4 * v144) & 0x5A496F5AE0C1D114;
  v147 = (v146 ^ 0x48012D4A80014010) & (16 * v145) ^ v145;
  v148 = ((16 * (v146 ^ 0x1248421060C09104)) ^ 0xA496F5AE0C1D1140) & (v146 ^ 0x1248421060C09104) ^ (16 * (v146 ^ 0x1248421060C09104)) & 0x5A496F5AE0C1D110;
  v149 = (v148 ^ 0x650A00011100) & (v147 << 8) ^ v147;
  v150 = (((v148 ^ 0x5A490A50E0C0C014) << 8) ^ 0x496F5AE0C1D11400) & (v148 ^ 0x5A490A50E0C0C014) ^ ((v148 ^ 0x5A490A50E0C0C014) << 8) & 0x5A496F5AE0C1D100;
  v151 = v149 ^ 0x5A496F5AE0C1D114 ^ (v150 ^ 0x48494A40C0C10000) & (v149 << 16);
  v152 = (v141 ^ (2
                * ((v151 << 32) & 0x5A496F5A00000000 ^ v151 ^ ((v151 << 32) ^ 0x60C1D11400000000) & (((v150 ^ 0x1200251A2000C114) << 16) & 0x5A496F5A00000000 ^ 0x10010F1A00000000 ^ (((v150 ^ 0x1200251A2000C114) << 16) ^ 0x6F5AE0C100000000) & (v150 ^ 0x1200251A2000C114))))) >> 6;
  v153 = v141
       - 0x695CD765650C1030
       + (((v152 ^ 0x693FC35F657CD88DLL) - 0x5DCE9C3998B36629) ^ ((v152 ^ 0xD798A571CEBF3F5DLL) + 0x1C9605E8CC8F7E07) ^ ((v152 ^ 0xBD8F179322FC5DC7) + 0x7681B70A20CC1C9DLL));
  v154 = (v153 ^ 0x5E13B03447603AEBLL) & (2 * (v153 & 0x9F423A3868693CE2)) ^ v153 & 0x9F423A3868693CE2;
  v155 = ((2 * (v153 ^ 0x5C97C4245770432BLL)) ^ 0x87ABFC387E32FF92) & (v153 ^ 0x5C97C4245770432BLL) ^ (2 * (v153 ^ 0x5C97C4245770432BLL)) & 0xC3D5FE1C3F197FC8;
  v156 = v155 ^ 0x4054020401090049;
  v157 = (v155 ^ 0x8301F80022007780) & (4 * v154) ^ v154;
  v158 = ((4 * v156) ^ 0xF57F870FC65FF24) & v156 ^ (4 * v156) & 0xC3D5FE1C3F197FC8;
  v159 = (v158 ^ 0x355F8103C017F00) & (16 * v157) ^ v157;
  v160 = ((16 * (v158 ^ 0xC080060C031800C9)) ^ 0x3D5FE1C3F197FC90) & (v158 ^ 0xC080060C031800C9) ^ (16 * (v158 ^ 0xC080060C031800C9)) & 0xC3D5FE1C3F197FC0;
  v161 = (v160 ^ 0x155E00031117C00) & (v159 << 8) ^ v159;
  v162 = (((v160 ^ 0xC2801E1C0E080349) << 8) ^ 0xD5FE1C3F197FC900) & (v160 ^ 0xC2801E1C0E080349) ^ ((v160 ^ 0xC2801E1C0E080349) << 8) & 0xC3D5FE1C3F197F00;
  v163 = v161 ^ 0xC3D5FE1C3F197FC9 ^ (v162 ^ 0xC1D41C1C19190000) & (v161 << 16);
  v164 = v153 ^ (2
               * ((v163 << 32) & 0x43D5FE1C00000000 ^ v163 ^ ((v163 << 32) ^ 0x3F197FC900000000) & (((v162 ^ 0x201E200260036C9) << 16) & 0x43D5FE1C00000000 ^ 0x1C1C00400000000 ^ (((v162 ^ 0x201E200260036C9) << 16) ^ 0x7E1C3F1900000000) & (v162 ^ 0x201E200260036C9))));
  v165 = (v164 ^ 0x287005B5E5DCFCBELL) + ((v164 >> 27) ^ 0xFFFFFFFAF1FF4943) + 1;
  v166 = v165 + (v165 >> 13) + ((v165 + (v165 >> 13)) >> 6);
  LODWORD(STACK[0x6AB0]) = a1 ^ v62 ^ 0x242D101C ^ (v166 - ((2 * v166) & 0x6FEA1CF8) - 1208676740);
  LODWORD(STACK[0x62A8]) = v2 + 371163482;
  LODWORD(STACK[0x6698]) = LODWORD(STACK[0x68A0]) ^ 0xFE304;
  if (((*(_BYTE *)(STACK[0x6AC0]
                  + ((*(_BYTE *)(STACK[0x6AC0]
                               + ((*(_BYTE *)(STACK[0x6AC0] + ((*(_BYTE *)(STACK[0x6AC0] + 14) + 6) & 0xF)) + 2) & 0xF))
                    + 12) & 0xF))
       + 3) & 0xE) != 0)
    v167 = (*(_BYTE *)(STACK[0x6AC0]
                     + ((*(_BYTE *)(STACK[0x6AC0]
                                  + ((*(_BYTE *)(STACK[0x6AC0] + ((*(_BYTE *)(STACK[0x6AC0] + 14) + 6) & 0xF)) + 2) & 0xF))
                       + 12) & 0xF))
          + 3) & 0xF;
  else
    v167 = 1;
  v168 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)STACK[0x6AA0]);
  STACK[0x6A20] = v167;
  STACK[0x6A90] = v167 - 1;
  return v168();
}

uint64_t sub_100C56F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;

  v8 = STACK[0x6AA0];
  v9 = (*(unsigned __int8 *)(STACK[0x6AC0] + v6) ^ 0x3D6D3E5B)
     + 1399969334
     + ((2 * *(unsigned __int8 *)(STACK[0x6AC0] + v6)) & 0xB6)
     + 1902;
  LODWORD(STACK[0x6A60]) = STACK[0x6AA0] - 11936;
  v10 = v8 - 467021204 + 2007602165 * v9 - 2745;
  v11 = (v10 ^ 0x52E5EDAC) & (2 * (v10 & 0x54E5C12C)) ^ v10 & 0x54E5C12C;
  v12 = ((2 * (v10 ^ 0xDBEC6FEC)) ^ 0x1E135D80) & (v10 ^ 0xDBEC6FEC) ^ (2 * (v10 ^ 0xDBEC6FEC)) & 0x8F09AEC0;
  v13 = ((4 * (v12 ^ 0x8108A240)) ^ 0x3C26BB00) & (v12 ^ 0x8108A240) ^ (4 * (v12 ^ 0x8108A240)) & 0x8F09AEC0;
  v14 = (v13 ^ 0xC00AA00) & (16 * ((v12 ^ 0x6010C80) & (4 * v11) ^ v11)) ^ (v12 ^ 0x6010C80) & (4 * v11) ^ v11;
  v15 = ((16 * (v13 ^ 0x830904C0)) ^ 0xF09AEC00) & (v13 ^ 0x830904C0) ^ (16 * (v13 ^ 0x830904C0)) & 0x8F09AEC0;
  v16 = v10 ^ (2
             * (((v14 ^ 0x8F09AEC0 ^ (v15 ^ 0x8008ACC0) & (v14 << 8)) << 16) & 0xF090000 ^ v14 ^ 0x8F09AEC0 ^ (v15 ^ 0x8008ACC0) & (v14 << 8) ^ (((v14 ^ 0x8F09AEC0 ^ (v15 ^ 0x8008ACC0) & (v14 << 8)) << 16) ^ 0x2EC00000) & (((v15 ^ 0xF0102C0) << 8) & 0xF090000 ^ 0x6010000 ^ (((v15 ^ 0xF0102C0) << 8) ^ 0x9AE0000) & (v15 ^ 0xF0102C0))));
  v17 = v6 + (a6 ^ 0x56F69CAC ^ v16) - (((a6 ^ 0x56F69CAC ^ v16) + v6) >> 16);
  v18 = (v17 ^ LODWORD(STACK[0x3B4])) + 1677155197 + ((2 * v17) & 0x79F9F93E);
  v19 = ((2 * (v18 ^ 0xDC3DA199)) ^ 0x66C0CFA) & (v18 ^ 0xDC3DA199) ^ (2 * (v18 ^ 0xDC3DA199)) & 0x336067C;
  v20 = (v18 ^ 0xDE2BA7D1) & (2 * (v18 & 0xDF0BA7E4)) ^ v18 & 0xDF0BA7E4;
  v21 = v19 ^ 0x1120205;
  v22 = (v19 ^ 0x1240435) & (4 * v20) ^ v20;
  v23 = ((4 * v21) ^ 0xCD819F4) & v21 ^ (4 * v21) & 0x336067C;
  v24 = (v23 ^ 0x100069) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x3260609)) ^ 0x336067D0) & (v23 ^ 0x3260609) ^ (16 * (v23 ^ 0x3260609)) & 0x3360670;
  v26 = (v18 ^ (2
              * (((v24 ^ 0x336067D ^ (v25 ^ 0x320062D) & (v24 << 8)) << 16) & 0x3360000 ^ v24 ^ 0x336067D ^ (v25 ^ 0x320062D) & (v24 << 8) ^ (((v24 ^ 0x336067D ^ (v25 ^ 0x320062D) & (v24 << 8)) << 16) ^ 0x67D0000) & (((v25 ^ 0x16002D) << 8) & 0x3360000 ^ 0x1300000 ^ (((v25 ^ 0x16002D) << 8) ^ 0x36060000) & (v25 ^ 0x16002Du))))) >> 8;
  v27 = v18
      - 1599602729
      - (((v26 ^ 0xAF3D60CB) + 39903881) ^ ((v26 ^ 0xF0CFC3C) - 1571717504) ^ ((v26 ^ 0xA0EC935C) + 229708064));
  v28 = v27 + 1562725665;
  v29 = (v28 ^ 0xD78F63E8) & (2 * (v28 & 0xD7C86BEC)) ^ v28 & 0xD7C86BEC;
  v30 = ((2 * (v28 ^ 0xD71F7378)) ^ 0x1AE3128) & (v28 ^ 0xD71F7378) ^ (2 * (v28 ^ 0xD71F7378)) & 0xD71894;
  v31 = v30 ^ 0x510894;
  v32 = (v30 ^ 0x121004) & (4 * v29) ^ v29;
  v33 = ((4 * v31) ^ 0x35C6250) & v31 ^ (4 * v31) & 0xD71894;
  v34 = (v33 ^ 0x540004) & (16 * v32) ^ v32;
  v35 = ((16 * (v33 ^ 0x831884)) ^ 0xD718940) & (v33 ^ 0x831884) ^ (16 * (v33 ^ 0x831884)) & 0xD71890;
  v36 = v35 ^ 0x861094;
  v37 = ((v27 - 1506881480) ^ 0x97C863EA) & (2 * ((v27 - 1506881480) & 0xD7C86BEC)) ^ (v27 - 1506881480) & 0xD7C86BEC;
  v38 = ((2 * ((v27 - 1506881480) ^ 0x16D8A43A)) ^ 0x82219FAC) & ((v27 - 1506881480) ^ 0x16D8A43A) ^ (2 * ((v27 - 1506881480) ^ 0x16D8A43A)) & 0xC110CFD6;
  v39 = v34 ^ 0xD71894 ^ (v35 ^ 0x510894) & (v34 << 8);
  v40 = (v38 ^ 0x80108F82) & (4 * v37) ^ v37;
  v41 = ((4 * (v38 ^ 0x41104052)) ^ 0x4433F58) & (v38 ^ 0x41104052) ^ (4 * (v38 ^ 0x41104052)) & 0xC110CFD4;
  v42 = v41 ^ 0xC110C086;
  v43 = (v41 ^ 0xF40) & (16 * v40) ^ v40;
  v44 = ((16 * v42) ^ 0x110CFD60) & v42 ^ (16 * v42) & 0xC110CFD0;
  v45 = v44 ^ 0xC0100296;
  v46 = (v44 ^ 0x100CD96) & (v43 << 8);
  v47 = (v36 << 8) & v7 ^ 0xC70000 ^ ((v36 << 8) ^ 0xD7180000) & v36;
  v48 = (v27 - 1506881480) ^ (2
                            * (((v43 ^ 0xC110CFD6 ^ v46) << 16) & 0x41100000 ^ v43 ^ 0xC110CFD6 ^ v46 ^ (((v43 ^ 0xC110CFD6 ^ v46) << 16) ^ 0x4FD60000) & ((v45 << 8) & 0xC1100000 ^ 0x41100000 ^ ((v45 << 8) ^ 0x10CF0000) & v45))) ^ 0xB33D7300;
  v49 = ((v48 ^ v16 ^ 0xE42E1357) + 1236624809) ^ ((v48 ^ v16 ^ 0x50FBF74D) - 44006989) ^ ((v48 ^ v16 ^ 0x86D7FFF6)
                                                                                         + 726436106);
  v50 = v6 - 1201616289 + v49;
  v51 = ((2 * (v50 & 0xA805C88D)) & 0x400A1012 | v50 & 0xA805C88D) ^ (2 * (v50 & 0xA805C88D)) & (v50 ^ 0xC44BF85F);
  v52 = ((2 * (v50 ^ 0xC44BF85F)) ^ 0xD89C61A4) & (v50 ^ 0xC44BF85F) ^ (2 * (v50 ^ 0xC44BF85F)) & 0x6C4E30D2;
  v53 = v52 ^ 0x24421052;
  v54 = (v52 ^ 0x444C3002) & (4 * v51) ^ v51;
  v55 = ((4 * v53) ^ 0xB138C348) & v53 ^ (4 * v53) & 0x6C4E30D0;
  v56 = (v55 ^ 0x20080042) & (16 * v54) ^ v54;
  v57 = ((16 * (v55 ^ 0x4C463092)) ^ 0xC4E30D20) & (v55 ^ 0x4C463092) ^ (16 * (v55 ^ 0x4C463092)) & 0x6C4E30D0;
  v58 = v56 ^ 0x6C4E30D2 ^ (v57 ^ 0x44420000) & (v56 << 8);
  v59 = v50 ^ (2
             * ((v58 << 16) & 0x6C4E0000 ^ v58 ^ ((v58 << 16) ^ 0x30D20000) & (((v57 ^ 0x280C30D2) << 8) & 0x6C4E0000 ^ 0x204E0000 ^ (((v57 ^ 0x280C30D2) << 8) ^ 0x4E300000) & (v57 ^ 0x280C30D2))));
  v60 = v49
      - (((HIWORD(v59) ^ 0x4CDD888F) - 1298349914) ^ ((HIWORD(v59) ^ 0x64D5535A) - 1701569679) ^ ((HIWORD(v59) ^ 0x2808EBC8)
                                                                                                - 699816989));
  v61 = v6 + 937586865 + v60;
  v62 = ((2 * (v61 ^ 0x3CF2D96F)) ^ 0x346E8638) & (v61 ^ 0x3CF2D96F) ^ (2 * (v61 ^ 0x3CF2D96F)) & 0x1A37431C;
  v63 = (v61 ^ 0x34F1D96B) & (2 * (v61 & 0x26C59A73)) ^ v61 & 0x26C59A73;
  v64 = v62 ^ 0xA114104;
  v65 = v63 ^ 0x1A37431C ^ (v62 ^ 0x10260218) & (4 * v63);
  v66 = ((4 * v64) ^ 0x68DD0C70) & v64 ^ (4 * v64) & 0x1A37431C;
  v67 = v66 & 0x194A030 ^ v65 ^ (v66 ^ 0x815001C) & ((16 * v65) ^ 0xA2E091F0);
  v68 = ((16 * v66) ^ 0x80C4A130) & (v66 ^ 0x815001C) ^ v66 & 0x194A030;
  v69 = v68 & 0x194A030 ^ v67 ^ ((v67 << 8) ^ 0x22D7AC30) & (v68 ^ 0x14001C);
  v70 = ((v68 << 8) ^ 0x1594B030) & (v68 ^ 0x14001C) ^ v68 & 0x194A030;
  v71 = (v61 ^ (2
              * (v69 ^ v70 & 0x194A030 ^ ((v69 << 16) ^ 0x4288A033) & (v70 ^ 0x1A230000) ^ ((v69 << 16) ^ 0x4288A033) & 0x1A370000u))) >> 8;
  v72 = v6
      + v60
      - (((v71 ^ 0xDE6635AA) - 2121482292) ^ ((v71 ^ 0xB9997EE6) - 428608376) ^ ((v71 ^ 0x67EDC850) + 939999794));
  v73 = v72 + 436955911;
  v74 = (v73 ^ 0xCD1C8C30) & (2 * (v73 & 0xED9E2CB2)) ^ v73 & 0xED9E2CB2;
  v75 = ((2 * (v73 ^ 0x1D00DD74)) ^ 0xE13DE38C) & (v73 ^ 0x1D00DD74) ^ (2 * (v73 ^ 0x1D00DD74)) & 0xF09EF1C6;
  v76 = v75 ^ 0x10821042;
  v77 = (v75 ^ 0xE01AE180) & (4 * v74) ^ v74;
  v78 = ((4 * v76) ^ 0xC27BC718) & v76 ^ (4 * v76) & 0xF09EF1C4;
  v79 = ((16 * (v78 ^ 0x308430C6)) ^ 0x9EF1C60) & (v78 ^ 0x308430C6) ^ (16 * (v78 ^ 0x308430C6)) & 0xF09EF1C0;
  v80 = v72 + 1662316062;
  v81 = (v80 ^ 0xE95C0EB1) & (2 * (v80 & 0xED9E2CB2)) ^ v80 & 0xED9E2CB2;
  v82 = ((2 * ((v72 + 1662316062) ^ 0xF14C06F1)) ^ 0x39A45486) & ((v72 + 1662316062) ^ 0xF14C06F1) ^ (2 * ((v72 + 1662316062) ^ 0xF14C06F1)) & 0x1CD22A42;
  v83 = (v82 ^ 0x18820800) & (4 * v81) ^ v81;
  v84 = ((4 * (v82 ^ 0x4522A41)) ^ 0x7348A90C) & (v82 ^ 0x4522A41) ^ (4 * (v82 ^ 0x4522A41)) & 0x1CD22A40;
  v85 = v84 ^ 0xC920243;
  v86 = v84 ^ 0x10402800;
  v87 = (v78 ^ 0xC01AC106) & (16 * v77) ^ v77 ^ 0xF09EF1C6 ^ (v79 ^ LODWORD(STACK[0x3BC])) & (((v78 ^ 0xC01AC106) & (16 * v77) ^ v77) << 8);
  v88 = v86 & (16 * v83) ^ v83;
  v89 = ((16 * v85) ^ 0xCD22A430) & v85 ^ (16 * v85) & 0x1CD22A40;
  v90 = v88 ^ 0x1CD22A43 ^ (v89 ^ LODWORD(STACK[0x3C0])) & (v88 << 8);
  v91 = ((v79 ^ 0xF010E186) << 8) & 0xF09E0000 ^ 0x600E0000 ^ (((v79 ^ 0xF010E186) << 8) ^ 0x9EF10000) & (v79 ^ 0xF010E186);
  v92 = v80 ^ (2
             * ((v90 << 16) & 0x1CD20000 ^ v90 ^ ((v90 << 16) ^ 0x2A430000) & (((v89 ^ 0x10D00A43) << 8) & 0x1CD20000 ^ 0xCD00000 ^ (((v89 ^ 0x10D00A43) << 8) ^ 0x522A0000) & (v89 ^ 0x10D00A43)))) ^ 0x6B713EB1;
  v93 = ((2 * (v6 + (v16 ^ 0xF939DA29 ^ v92) - (((v16 ^ 0xF939DA29 ^ v92) + v6) >> 16))) & 0x3FF9FFD6)
      + ((v6 + (v16 ^ 0xF939DA29 ^ v92) - (((v16 ^ 0xF939DA29 ^ v92) + v6) >> 16)) ^ 0x1FFCFFEB);
  v94 = ((2 * ((v93 - 168608834) ^ 0x64558FB3)) ^ 0x1CB497C8) & ((v93 - 168608834) ^ 0x64558FB3) ^ (2
                                                                                                  * ((v93 - 168608834) ^ 0x64558FB3)) & 0x8E5A4BE4;
  v95 = ((v93 - 168608834) ^ 0xE04F8717) & (2 * ((v93 - 168608834) & 0xEA0FC457)) ^ (v93 - 168608834) & 0xEA0FC457;
  v96 = v94 ^ 0x824A4824;
  v97 = (v94 ^ 0xA104BC0) & (4 * v95) ^ v95;
  v98 = ((4 * v96) ^ 0x39692F90) & v96 ^ (4 * v96) & 0x8E5A4BE4;
  v99 = (v98 ^ 0x8480B84) & (16 * v97) ^ v97;
  v100 = ((16 * (v98 ^ LODWORD(STACK[0x3C4]))) ^ 0xE5A4BE40) & (v98 ^ LODWORD(STACK[0x3C4])) ^ (16
                                                                                              * (v98 ^ LODWORD(STACK[0x3C4]))) & 0x8E5A4BE0;
  v101 = v99 ^ 0x8E5A4BE4 ^ (v100 ^ 0x84000AA4) & (v99 << 8);
  v102 = ((v93 - 168608834) ^ (2
                             * ((v101 << 16) & 0xE5A0000 ^ v101 ^ ((v101 << 16) ^ 0x4BE40000) & (((v100 ^ 0xA5A41A4) << 8) & 0xE5A0000 ^ 0x4100000 ^ (((v100 ^ 0xA5A41A4) << 8) ^ 0x5A4B0000) & (v100 ^ 0xA5A41A4))))) >> 8;
  v103 = v93
       - (((v102 ^ 0x53004EC) - 912917420) ^ ((v102 ^ 0x449BB40D) - 2009183053) ^ ((v102 ^ 0x41498BB2) - 1913883890))
       - 788938205;
  v104 = (v103 ^ 0x5A10F7) & (2 * (v103 & 0x245A84F6)) ^ v103 & 0x245A84F6;
  v105 = ((2 * (v103 ^ 0x4B11B3)) ^ 0x48232A8A) & (v103 ^ 0x4B11B3) ^ (2 * (v103 ^ 0x4B11B3)) & 0x24119544;
  v106 = (v105 ^ 0x4008005) & (4 * v104) ^ v104;
  v107 = ((4 * (v105 ^ 0x24109545)) ^ 0x90465514) & (v105 ^ 0x24109545) ^ (4 * (v105 ^ 0x24109545)) & 0x24119544;
  v108 = ((16 * (v107 ^ LODWORD(STACK[0x3D0]))) ^ 0x41195450) & (v107 ^ LODWORD(STACK[0x3D0])) ^ (16
                                                                                                * (v107 ^ LODWORD(STACK[0x3D0]))) & 0x24119540;
  v109 = (v107 ^ 0x1500) & (16 * v106) ^ v106 ^ 0x24119545 ^ (v108 ^ 0x111405) & (((v107 ^ 0x1500) & (16 * v106) ^ v106) << 8);
  LODWORD(STACK[0x6AB0]) ^= LODWORD(STACK[0x3CC]) ^ v28 ^ v73 ^ v103 ^ (2
                                                                      * ((v39 << 16) & 0xD70000 ^ v39 ^ ((v39 << 16) ^ 0x18940000) & v47 ^ v87 ^ (v87 << 16) & 0x709E0000 ^ ((v87 << 16) ^ 0x71C60000) & v91 ^ v109 ^ (v109 << 16) & 0x24110000 ^ ((v109 << 16) ^ 0x15450000) & (((v108 ^ 0x24008105) << 8) & 0x24110000 ^ 0x24000000 ^ (((v108 ^ 0x24008105) << 8) ^ 0x11950000) & (v108 ^ 0x24008105))));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((23538 * (STACK[0x6A90] == v6)) ^ v8)))();
}

uint64_t sub_100C58324(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = LODWORD(STACK[0x6A60]) + 1375;
  v5 = STACK[0x66E0];
  LODWORD(STACK[0x6A90]) = v2;
  LODWORD(STACK[0x62A0]) = LODWORD(STACK[0x6A50]) ^ v5;
  v6 = STACK[0x6AD8];
  LODWORD(STACK[0x6A10]) = v4;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * v4) - 12);
  LODWORD(STACK[0x6A80]) = v3;
  return v7(-79363535, a2, 482794844);
}

uint64_t sub_100C583C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  unint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  uint64_t v157;

  LODWORD(STACK[0x6AA0]) = v9;
  STACK[0x6A50] = v8;
  v12 = STACK[0x6A20];
  v13 = *(unsigned __int8 *)(v8 + STACK[0x6A20]);
  v14 = 3739 * (LODWORD(STACK[0x6A60]) ^ 0x1075);
  LODWORD(STACK[0x6A70]) = v14;
  v15 = 2007602165 * ((v13 ^ 0xFFFED796) + 687647417 + ((v13 << (v14 ^ 0xD0)) & 0x12C)) - 684350309;
  v16 = (v15 ^ 0x959F4C80) & (2 * (v15 & 0xC51C48CA)) ^ v15 & 0xC51C48CA;
  v17 = ((2 * (v15 ^ 0x1F97DC80)) ^ 0xB5172894) & (v15 ^ 0x1F97DC80) ^ (2 * (v15 ^ 0x1F97DC80)) & 0xDA8B944A;
  v18 = v17 ^ 0x4A88944A;
  v19 = (v17 ^ 0x10030000) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0x6A2E5128) & v18 ^ (4 * v18) & 0xDA8B9448;
  v21 = v19 ^ 0xDA8B944A ^ (v20 ^ 0x4A0A1000) & (16 * v19);
  v22 = (16 * (v20 ^ 0x90818442)) & 0xDA8B9440 ^ 0x5202904A ^ ((16 * (v20 ^ 0x90818442)) ^ 0xA8B944A0) & (v20 ^ 0x90818442);
  v23 = (v21 << 8) & 0xDA8B9400 ^ v21 ^ ((v21 << 8) ^ 0x8B944A00) & v22;
  v24 = v15 ^ (2
             * ((v23 << 16) & 0x5A8B0000 ^ v23 ^ ((v23 << 16) ^ 0x144A0000) & ((v22 << 8) & 0x5A8B0000 ^ 0x500B0000 ^ ((v22 << 8) ^ 0xB940000) & v22)));
  STACK[0x6A40] = v12 + v6;
  v25 = v12 + v6 + (a6 ^ 0x451F605E ^ v24) - (((a6 ^ 0x451F605E ^ v24) + v9) >> 16);
  v26 = ((2 * v25) & 0xD59EFA7E) + (v25 ^ 0x6ACF7D3F);
  v27 = ((2 * ((v26 - 146803720) ^ 0x2EC69C7E)) ^ 0x666C256E) & ((v26 - 146803720) ^ 0x2EC69C7E) ^ (2
                                                                                                  * ((v26 - 146803720) ^ 0x2EC69C7E)) & 0xB33612B6;
  v28 = v27 ^ 0x91121291;
  v29 = ((v26 - 146803720) ^ 0x1DE68CEC) & (2 * ((v26 - 146803720) & 0x9DF08EC9)) ^ (v26 - 146803720) & 0x9DF08EC9;
  v30 = (v27 ^ 0x22040024) & (4 * v29) ^ v29;
  v31 = ((4 * v28) ^ 0xCCD84ADC) & v28 ^ (4 * v28) & 0xB33612B4;
  v32 = (v31 ^ 0x80100293) & (16 * v30) ^ v30;
  v33 = ((16 * (v31 ^ 0x33261023)) ^ 0x33612B70) & (v31 ^ 0x33261023) ^ (16 * (v31 ^ 0x33261023)) & 0xB33612B0;
  v34 = v32 ^ 0xB33612B7 ^ (v33 ^ 0x33200287) & (v32 << 8);
  v35 = ((v26 - 146803720) ^ (2
                            * ((v34 << 16) & 0x33360000 ^ v34 ^ ((v34 << 16) ^ 0x12B70000) & (((v33 ^ LODWORD(STACK[0x3D4])) << 8) & 0x33360000 ^ 0x1240000 ^ (((v33 ^ LODWORD(STACK[0x3D4])) << 8) ^ 0x36120000) & (v33 ^ LODWORD(STACK[0x3D4])))))) >> 8;
  v36 = v26 - (((v35 ^ 0x4371647E) - 11651295) ^ ((v35 ^ 0xA0F9A6BA) + 482801125) ^ ((v35 ^ 0xE357326F) + 1600676146));
  v37 = v36 + 1256868746;
  v38 = ((v36 + 1256868746) ^ 0x6249A88) & (2 * ((v36 + 1256868746) & 0x726DB2D)) ^ (v36 + 1256868746) & 0x726DB2D;
  v39 = ((2 * ((v36 + 1256868746) ^ 0x2641A92)) ^ 0xA85837E) & ((v36 + 1256868746) ^ 0x2641A92) ^ (2
                                                                                                 * ((v36 + 1256868746) ^ 0x2641A92)) & 0x542C1BE;
  v40 = v39 ^ LODWORD(STACK[0x3D8]);
  v41 = (v39 ^ 0x40813D) & (4 * v38) ^ v38;
  v42 = ((4 * v40) ^ 0x150B06FC) & v40 ^ (4 * v40) & 0x542C1BC;
  v43 = (v42 ^ 0x50200B3) & (16 * v41) ^ v41;
  v44 = ((16 * (v42 ^ 0x40C103)) ^ LODWORD(STACK[0x3DC])) & (v42 ^ 0x40C103) ^ (16 * (v42 ^ 0x40C103)) & 0x542C1B0;
  LODWORD(STACK[0x6A30]) = v36 - 1932725388;
  v45 = ((v36 - 1932725388) ^ 0xEC493758) & (2 * ((v36 - 1932725388) & 0xE4DB65A)) ^ (v36 - 1932725388) & 0xE4DB65A;
  v46 = ((2 * ((v36 - 1932725388) ^ 0xFC581FCC)) ^ 0xE42B532C) & ((v36 - 1932725388) ^ 0xFC581FCC) ^ (2 * ((v36 - 1932725388) ^ 0xFC581FCC)) & 0xF215A996;
  v47 = v46 ^ 0x1214A892;
  v48 = (v46 ^ 0x60010102) & (4 * v45) ^ v45;
  v49 = ((4 * v47) ^ 0xC856A658) & v47 ^ (4 * v47) & 0xF215A994;
  v50 = v49 ^ LODWORD(STACK[0x3E0]);
  v51 = v49 ^ 0xC014A000;
  v52 = v43 ^ 0x542C1BF ^ (v44 ^ 0x400010F) & (v43 << 8);
  v53 = ((16 * v50) ^ 0x215A9960) & v50 ^ (16 * v50) & 0xF215A990;
  v54 = v53 ^ 0xD2052096;
  v55 = v51 & (16 * v48) ^ v48 ^ 0xF215A996 ^ (v53 ^ 0x20108996) & ((v51 & (16 * v48) ^ v48) << 8);
  v36 -= 707365237;
  v56 = (v36 ^ 0xCF692459) & (2 * (v36 & 0xE4DB65A)) ^ v36 & 0xE4DB65A;
  v57 = (v54 << 8) & STACK[0x3E4] ^ 0x62140000 ^ ((v54 << 8) ^ 0x15A90000) & v54;
  v58 = ((2 * (v36 ^ 0xD36024ED)) ^ 0xBA5B256E) & (v36 ^ 0xD36024ED) ^ (2 * (v36 ^ 0xD36024ED)) & 0xDD2D92B6;
  v59 = v58 ^ LODWORD(STACK[0x3EC]);
  v60 = (v58 ^ LODWORD(STACK[0x3E8])) & (4 * v56) ^ v56;
  v61 = ((4 * v59) ^ 0x74B64ADC) & v59 ^ (4 * v59) & 0xDD2D92B4;
  v62 = v61 ^ 0x89099023;
  v63 = (v61 ^ 0x54240283) & (16 * v60) ^ v60;
  v64 = ((16 * v62) ^ 0xD2D92B70) & v62 ^ (16 * v62) & 0xDD2D92B0;
  v65 = ((v52 << 16) ^ 0x41BF0000) & (((v44 ^ 0x142C00F) << 8) & 0x5420000 ^ 0x5020000 ^ (((v44 ^ 0x142C00F) << 8) ^ 0x42C10000) & (v44 ^ 0x142C00F));
  v66 = v63 ^ 0xDD2D92B7 ^ (v64 ^ 0xD0090200) & (v63 << 8);
  v67 = (v52 << 16) & 0x5420000 ^ v52;
  v68 = v36 ^ (2
             * ((v66 << 16) & 0x5D2D0000 ^ v66 ^ ((v66 << 16) ^ 0x12B70000) & (((v64 ^ 0xD249087) << 8) & 0x5D2D0000 ^ 0x502D0000 ^ (((v64 ^ 0xD249087) << 8) ^ 0x2D920000) & (v64 ^ 0xD249087)))) ^ 0x5326290;
  v69 = ((v55 << 16) ^ 0x29960000) & v57;
  v70 = ((v68 ^ v24 ^ 0x44D23EBE) + 2043532744) ^ ((v68 ^ v24 ^ LODWORD(STACK[0x3F0])) + 112198874) ^ ((v68 ^ v24 ^ 0xAB0C40E4) - 1777095778);
  v71 = v12 + v7 + v70;
  v72 = (v71 ^ 0xE6C30822) & (2 * (v71 & 0xF0C3884B)) ^ v71 & 0xF0C3884B;
  v73 = ((2 * (v71 ^ 0xA74318A2)) ^ 0xAF0121D2) & (v71 ^ 0xA74318A2) ^ (2 * (v71 ^ 0xA74318A2)) & 0x578090E8;
  v74 = ((4 * (v73 ^ LODWORD(STACK[0x3F4]))) ^ 0x5E0243A4) & (v73 ^ LODWORD(STACK[0x3F4])) ^ (4
                                                                                            * (v73 ^ LODWORD(STACK[0x3F4]))) & 0x578090E8;
  v75 = (v74 ^ 0x560000A9) & (16 * ((v73 ^ 0x17809041) & (4 * v72) ^ v72)) ^ (v73 ^ 0x17809041) & (4 * v72) ^ v72;
  v76 = ((16 * (v74 ^ 0x1809049)) ^ 0x78090E90) & (v74 ^ 0x1809049) ^ (16 * (v74 ^ 0x1809049)) & 0x578090E0;
  v77 = v75 ^ 0x578090E9 ^ (v76 ^ 0x50000069) & (v75 << 8);
  v78 = (v55 << 16) & 0x72150000 ^ v55;
  v79 = (v71 ^ (2
              * ((v77 << 16) & 0x57800000 ^ v77 ^ ((v77 << 16) ^ 0x10E90000) & (((v76 ^ 0x7809069) << 8) & 0x57800000 ^ 0x57000000 ^ (((v76 ^ 0x7809069) << 8) ^ 0x80900000) & (v76 ^ 0x7809069))))) >> 16;
  v80 = v67 ^ v65;
  v81 = v70 - (((v79 ^ 0x6907DB13) + 1850692995) ^ ((v79 ^ 0xF5CD64E8) - 226104710) ^ ((v79 ^ 0x9CCAC139) - 1685958743));
  v82 = v12 + v10 + v81;
  v83 = (v82 ^ 0x4FC66504) & (2 * (v82 & 0x6FE48150)) ^ v82 & 0x6FE48150;
  v84 = ((2 * (v82 ^ 0x48665A4)) ^ 0xD6C5C9E8) & (v82 ^ 0x48665A4) ^ (2 * (v82 ^ 0x48665A4)) & 0x6B62E4F4;
  v85 = ((4 * (v84 ^ 0x29222414)) ^ 0xAD8B93D0) & (v84 ^ 0x29222414) ^ (4 * (v84 ^ 0x29222414)) & 0x6B62E4F4;
  v86 = (v85 ^ 0x290280C0) & (16 * ((v84 ^ 0x420020D4) & (4 * v83) ^ v83)) ^ (v84 ^ 0x420020D4) & (4 * v83) ^ v83;
  v87 = ((16 * (v85 ^ 0x42606424)) ^ 0xB62E4F40) & (v85 ^ 0x42606424) ^ (16 * (v85 ^ 0x42606424)) & 0x6B62E4F0;
  v88 = v86 ^ 0x6B62E4F4 ^ (v87 ^ 0x222244B4) & (v86 << 8);
  v89 = v78 ^ v69;
  v90 = (v82 ^ (2
              * ((v88 << 16) & 0x6B620000 ^ v88 ^ ((v88 << 16) ^ 0x64F40000) & (((v87 ^ 0x4940A0B4) << 8) & 0x6B620000 ^ 0x9020000 ^ (((v87 ^ 0x4940A0B4) << 8) ^ 0x62E40000) & (v87 ^ 0x4940A0B4))))) >> 8;
  v91 = v81 - (((v90 ^ 0x36A6381C) - 2074177103) ^ ((v90 ^ 0x508959A6) - 495849461) ^ ((v90 ^ 0x665680F2) - 726783649));
  v92 = v12 + a3 + v91;
  v93 = (v92 ^ 0x3BC0F910) & (2 * (v92 & 0xB394E159)) ^ v92 & 0xB394E159;
  v94 = ((2 * (v92 ^ 0x7EE1B9A0)) ^ 0x9AEAB1F2) & (v92 ^ 0x7EE1B9A0) ^ (2 * (v92 ^ 0x7EE1B9A0)) & 0xCD7558F8;
  v95 = v94 ^ 0x45154809;
  v96 = (v94 ^ 0x896040E1) & (4 * v93) ^ v93;
  v97 = ((4 * v95) ^ 0x35D563E4) & v95 ^ (4 * v95) & 0xCD7558F8;
  v98 = (v97 ^ 0x55540E9) & (16 * v96) ^ v96;
  v99 = ((16 * (v97 ^ 0xC8201819)) ^ 0xD7558F90) & (v97 ^ 0xC8201819) ^ (16 * (v97 ^ 0xC8201819)) & 0xCD7558F0;
  v100 = v99 ^ 0x8205069;
  v101 = v98 ^ 0xCD7558F9;
  v102 = v12 + v11 + v91;
  v103 = (v102 ^ 0x67ADB232) & (2 * (v102 & 0x6729C2B2)) ^ v102 & 0x6729C2B2;
  v104 = (v99 ^ 0xC5550800) & (v98 << 8);
  v105 = ((2 * (v102 ^ 0xEBBCB616)) ^ 0x192AE948) & (v102 ^ 0xEBBCB616) ^ (2 * (v102 ^ 0xEBBCB616)) & 0x8C9574A4;
  v106 = ((4 * (v105 ^ 0x849514A4)) ^ 0x3255D290) & (v105 ^ 0x849514A4) ^ (4 * (v105 ^ 0x849514A4)) & 0x8C9574A4;
  v107 = (v106 ^ 0x155084) & (16 * ((v105 ^ 0x8100024) & (4 * v103) ^ v103)) ^ (v105 ^ 0x8100024) & (4 * v103) ^ v103;
  v108 = v101 ^ v104;
  v109 = ((16 * (v106 ^ 0x8C802424)) ^ 0xC9574A40) & (v106 ^ 0x8C802424) ^ (16 * (v106 ^ 0x8C802424)) & 0x8C9574A0;
  v110 = v109 ^ 0x48034A4;
  v111 = v12 + a1 + v91;
  v112 = v107 ^ 0x8C9574A4 ^ (v109 ^ 0x88154000) & (v107 << 8);
  v113 = (v111 ^ 0x6605A023) & (2 * (v111 & 0x6729C2B2)) ^ v111 & 0x6729C2B2;
  v114 = ((2 * (v111 ^ 0x24042423)) ^ 0x865BCD22) & (v111 ^ 0x24042423) ^ (2 * (v111 ^ 0x24042423)) & 0x432DE690;
  v115 = (v114 ^ 0x40092401) & (4 * v113) ^ v113;
  v116 = ((4 * (v114 ^ 0x41242291)) ^ 0xCB79A44) & (v114 ^ 0x41242291) ^ (4 * (v114 ^ 0x41242291)) & 0x432DE690;
  v117 = (v116 ^ 0x258211) & (16 * v115) ^ v115;
  v118 = ((16 * (v116 ^ 0x43086491)) ^ 0x32DE6910) & (v116 ^ 0x43086491) ^ (16 * (v116 ^ 0x43086491)) & 0x432DE690;
  v119 = v117 ^ 0x432DE691 ^ (v118 ^ 0x20C6000) & (v117 << 8);
  v120 = ((v108 << 16) ^ 0x58F90000) & ((v100 << 8) & 0x4D750000 ^ 0x8250000 ^ ((v100 << 8) ^ 0x75580000) & v100);
  v121 = v111 ^ LODWORD(STACK[0x3F8]) ^ (2
                                       * ((v119 << 16) & 0x432D0000 ^ v119 ^ ((v119 << 16) ^ 0x66910000) & (((v118 ^ 0x41218681) << 8) & 0x432D0000 ^ 0x42090000 ^ (((v118 ^ 0x41218681) << 8) ^ 0x2DE60000) & (v118 ^ 0x41218681))));
  v122 = v24 ^ 0xF542A4FD ^ v121;
  v123 = ((v112 << 16) ^ 0x74A40000) & ((v110 << 8) & 0xC950000 ^ 0x8810000 ^ ((v110 << 8) ^ 0x15740000) & v110);
  v124 = STACK[0x6A40] + v122 - ((v122 + LODWORD(STACK[0x6AA0])) >> 16);
  v125 = ((2 * v124) & 0xFFABD7FC) + (v124 ^ 0x7FD5EBFE);
  v126 = ((2 * ((v125 - 706038322) ^ 0x2455162A)) ^ 0x1CD4903C) & ((v125 - 706038322) ^ 0x2455162A) ^ (2 * ((v125 - 706038322) ^ 0x2455162A)) & 0x8E6A481E;
  v127 = v126 ^ 0x822A4802;
  v128 = ((v125 - 706038322) ^ 0x203F1E22) & (2 * ((v125 - 706038322) & 0xAA3F5E34)) ^ (v125 - 706038322) & 0xAA3F5E34;
  v129 = (v126 ^ 0xA400012) & (4 * v128) ^ v128;
  v130 = ((4 * v127) ^ 0x39A92078) & v127 ^ (4 * v127) & 0x8E6A481C;
  v131 = (v130 ^ 0x8280006) & (16 * v129) ^ v129;
  v132 = ((16 * (v130 ^ 0x86424806)) ^ 0xE6A481E0) & (v130 ^ 0x86424806) ^ (16 * (v130 ^ 0x86424806)) & 0x8E6A4810;
  v133 = v131 ^ 0x8E6A481E ^ (v132 ^ 0x8620001E) & (v131 << 8);
  v134 = (v108 << 16) & 0x4D750000 ^ v108 ^ v120;
  v135 = ((v125 - 706038322) ^ (2
                              * ((v133 << 16) & 0xE6A0000 ^ v133 ^ ((v133 << 16) ^ 0x481E0000) & (((v132 ^ 0x84A481E) << 8) & 0xE6A0000 ^ 0x4220000 ^ (((v132 ^ 0x84A481E) << 8) ^ 0x6A480000) & (v132 ^ 0x84A481E))))) >> 8;
  v136 = (v112 << 16) & 0xC950000 ^ v112 ^ v123;
  v137 = v125
       - (((v135 ^ 0x7BF64C1C) + 853743151) ^ ((v135 ^ 0xD1923A70) - 1735958461) ^ ((v135 ^ 0xAAC289A2) - 472394863));
  v138 = ((v137 - 126491697) ^ 0x887795BC) & (2 * ((v137 - 126491697) & 0xD167D630)) ^ (v137 - 126491697) & 0xD167D630;
  v139 = ((2 * ((v137 - 126491697) ^ 0x8ABB1D9C)) ^ 0xB7B99758) & ((v137 - 126491697) ^ 0x8ABB1D9C) ^ (2 * ((v137 - 126491697) ^ 0x8ABB1D9C)) & 0x5BDCCBAC;
  v140 = v139 ^ 0x484448A4;
  v141 = (v139 ^ 0x3988100) & (4 * v138) ^ v138;
  v142 = ((4 * v140) ^ 0x6F732EB0) & v140 ^ (4 * v140) & 0x5BDCCBAC;
  v143 = (v142 ^ 0x4B500AA0) & (16 * v141) ^ v141;
  v144 = ((16 * (v142 ^ 0x108CC10C)) ^ 0xBDCCBAC0) & (v142 ^ 0x108CC10C) ^ (16 * (v142 ^ 0x108CC10C)) & 0x5BDCCBA0;
  v145 = v144 ^ 0x4210412C;
  v146 = v143 ^ 0x5BDCCBAC ^ (v144 ^ 0x19CC8A00) & (v143 << 8);
  v147 = ((v137 + 1880592566) ^ 0x828FAF79) & (2 * ((v137 + 1880592566) & 0xA2CFAC60)) ^ (v137 + 1880592566) & 0xA2CFAC60;
  v148 = ((2 * ((v137 + 1880592566) ^ 0x8784B7B9)) ^ 0x4A9637B2) & ((v137 + 1880592566) ^ 0x8784B7B9) ^ (2 * ((v137 + 1880592566) ^ 0x8784B7B9)) & 0x254B1BD8;
  v149 = (v148 ^ 0x20021BC9) & (4 * v147) ^ v147;
  v150 = ((4 * (v148 ^ 0x25490849)) ^ 0x952C6F64) & (v148 ^ 0x25490849) ^ (4 * (v148 ^ 0x25490849)) & 0x254B1BD8;
  v151 = v150 ^ LODWORD(STACK[0x3FC]);
  v152 = (v150 ^ 0x5080B59) & (16 * v149) ^ v149;
  v153 = ((16 * v151) ^ 0x54B1BD90) & v151 ^ (16 * v151) & 0x254B1BD0;
  v154 = v152 ^ 0x254B1BD9 ^ (v153 ^ 0x4011949) & (v152 << 8);
  v155 = LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x6A30]) ^ (2 * v89) ^ v102 ^ (2 * v136) ^ (v137 + 1880592566) ^ (2 * ((v154 << 16) & 0x254B0000 ^ v154 ^ ((v154 << 16) ^ 0x1BD90000) & (((v153 ^ 0x214A0249) << 8) & 0x254B0000 ^ 0x24400000 ^ (((v153 ^ 0x214A0249) << 8) ^ 0x4B1B0000) & (v153 ^ 0x214A0249))));
  v156 = LODWORD(STACK[0x6A80]) ^ v37 ^ (2 * v80) ^ v92 ^ (2 * v134) ^ (v137 - 126491697) ^ (2
                                                                                           * ((v146 << 16) & 0x5BDC0000 ^ v146 ^ ((v146 << 16) ^ 0x4BAC0000) & ((v145 << 8) & 0x5BDC0000 ^ 0x3140000 ^ ((v145 << 8) ^ 0x5CCB0000) & v145)));
  v157 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((9878 * (STACK[0x6A40] == 15)) ^ LODWORD(STACK[0x6A10])));
  LODWORD(STACK[0x6A90]) ^= v68 ^ v121 ^ 0x21333507 ^ (v137 + 1542504493);
  LODWORD(STACK[0x6AB0]) = v155 ^ 0x378E555E;
  LODWORD(STACK[0x6A80]) = v156 ^ 0x47FD4990;
  return ((uint64_t (*)(uint64_t))(v157 - 12))(a1 + 1);
}

uint64_t sub_100C59894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,unsigned int a30,int a31,int a32,int a33,int a34,int a35,int a36)
{
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  char v217;
  int v218;
  unsigned int v219;
  BOOL v220;
  int v221;
  int v222;
  int v223;
  int v224;
  char v225;
  unsigned __int8 v226;
  unsigned int v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;

  v37 = v36 + 1802297259;
  v38 = (v37 ^ 0x400095E0) & (2 * (v37 & 0x952A99EA)) ^ v37 & 0x952A99EA;
  v39 = ((2 * (v37 ^ 0x6210A7A0)) ^ 0xEE747C94) & (v37 ^ 0x6210A7A0) ^ (2 * (v37 ^ 0x6210A7A0)) & 0xF73A3E4A;
  v40 = v39 ^ 0x110A024A;
  v41 = (v39 ^ 0xE4302C00) & (4 * v38) ^ v38;
  v42 = ((4 * v40) ^ 0xDCE8F928) & v40 ^ (4 * v40) & 0xF73A3E48;
  v43 = (v42 ^ 0xD4283802) & (16 * v41) ^ v41;
  v44 = ((16 * (v42 ^ 0x23120642)) ^ 0x73A3E4A0) & (v42 ^ 0x23120642) ^ (16 * (v42 ^ 0x23120642)) & 0xF73A3E40;
  v45 = v43 ^ 0xF73A3E4A ^ (v44 ^ a18) & (v43 << 8);
  v46 = v36
      + 1719432084
      + ((((v36 + 1802297259) ^ (2
                               * ((v45 << 16) & 0x773A0000 ^ v45 ^ ((v45 << 16) ^ 0x3E4A0000) & (((v44 ^ 0x84181A4A) << 8) & 0x773A0000 ^ 0x45000000 ^ (((v44 ^ 0x84181A4A) << 8) ^ 0x3A3E0000) & (v44 ^ 0x84181A4A))))) >> 12) ^ 0x174AE);
  v47 = (v46 ^ 0x1013E758) & (2 * (v46 & 0x9A1B0601)) ^ v46 & 0x9A1B0601;
  v48 = ((2 * (v46 ^ 0x3037EB58)) ^ 0x5459DAB2) & (v46 ^ 0x3037EB58) ^ (2 * (v46 ^ 0x3037EB58)) & 0xAA2CED58;
  v49 = v48 ^ a19;
  v50 = (v48 ^ 0x2080D41) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0xA8B3B564) & v49 ^ (4 * v49) & 0xAA2CED58;
  v52 = (v51 ^ 0xA820A549) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x20C4819)) ^ 0xA2CED590) & (v51 ^ 0x20C4819) ^ (16 * (v51 ^ 0x20C4819)) & 0xAA2CED50;
  v54 = v52 ^ 0xAA2CED59 ^ (v53 ^ 0xA20CC500) & (v52 << 8);
  v55 = (v46 ^ (2
              * ((v54 << 16) & 0x2A2C0000 ^ v54 ^ ((v54 << 16) ^ 0x6D590000) & (((v53 ^ 0x8202849) << 8) & 0x2A2C0000 ^ (((v53 ^ 0x8202849) << 8) ^ 0x2CED0000) & (v53 ^ 0x8202849) ^ 0x2000000)))) >> 1;
  v56 = v46
      - (((v55 ^ 0xB576579E) + 1204706493) ^ ((v55 ^ 0xBB032EF0) + 1237001683) ^ ((v55 ^ 0x415C1737) - 1276896234))
      + 1598581005;
  v57 = (v56 ^ 0xF5742069) & (2 * (v56 & 0xF8640270)) ^ v56 & 0xF8640270;
  v58 = ((2 * (v56 ^ 0x45FC24A9)) ^ 0x7B304DB2) & (v56 ^ 0x45FC24A9) ^ (2 * (v56 ^ 0x45FC24A9)) & 0xBD9826D8;
  v59 = v58 ^ 0x84882249;
  v60 = (v58 ^ 0x25182088) & (4 * v57) ^ v57;
  v61 = ((4 * v59) ^ 0xF6609B64) & v59 ^ (4 * v59) & 0xBD9826D8;
  v62 = v60 ^ 0xBD9826D9 ^ (v61 ^ 0xB4000259) & (16 * v60);
  v63 = (16 * (v61 ^ 0x9982499)) & 0xBD9826D0 ^ 0x24180249 ^ ((16 * (v61 ^ 0x9982499)) ^ 0xD9826D90) & (v61 ^ 0x9982499);
  v64 = (v62 << 8) & 0xBD982600 ^ v62 ^ ((v62 << 8) ^ 0x9826D900) & v63;
  v65 = v56 ^ (2
             * ((v64 << 16) & 0x3D980000 ^ v64 ^ ((v64 << 16) ^ 0x26D90000) & ((v63 << 8) & 0xBD980000 ^ 0x25980000 ^ ((v63 << 8) ^ 0x98260000) & v63)));
  v66 = ((v65 ^ 0xF13F426F) + 508333678) ^ ((v65 ^ 0xBCE7B0AA) + 1402240169) ^ ((v65 ^ 0xB7BCBD07) + 1489989894);
  v67 = ((v66 - 1123090373) ^ 0xFFABCCA9) & (2 * ((v66 - 1123090373) & 0xFFABED09)) ^ (v66 - 1123090373) & 0xFFABED09;
  v68 = ((2 * ((v66 - 1123090373) ^ 0xD5AA84BB)) ^ 0x5402D364) & ((v66 - 1123090373) ^ 0xD5AA84BB) ^ (2 * ((v66 - 1123090373) ^ 0xD5AA84BB)) & 0x2A0169B2;
  v69 = v68 ^ 0x2A012892;
  v70 = (v68 ^ 0x40B0) & (4 * v67) ^ v67;
  v71 = ((4 * v69) ^ 0xA805A6C8) & v69 ^ (4 * v69) & 0x2A0169B0;
  v72 = v70 ^ 0x2A0169B2 ^ (v71 ^ 0x28012080) & (16 * v70);
  v73 = ((16 * (v71 ^ 0x2004932)) ^ 0xA0169B20) & (v71 ^ 0x2004932) ^ (16 * (v71 ^ 0x2004932)) & 0x2A0169B0;
  v74 = v73 & 0xA1601420 ^ v72 ^ (v73 ^ 0x200009B2) & ((v72 << 8) ^ 0xA009A620);
  v75 = ((v73 << 8) ^ 0xA1693420) & (v73 ^ 0x200009B2) ^ v73 & 0xA1601420;
  v76 = v66
      - 1128600252
      + ((((v66 - 1123090373) ^ (2
                               * (v75 & a20 ^ v74 ^ ((v74 << 16) ^ 0xC8F21428) & (v75 ^ 0xA010000) ^ ((v74 << 16) ^ 0xC8F21428) & 0x2A010000))) >> 14) ^ 0x2AEA4);
  v77 = v76
      + 531532108
      + ((((v76 >> 8) ^ 0x77D0F48) + 1379882257) ^ (((v76 >> 8) ^ 0x1D1B58CC) + 1213792917) ^ (((v76 >> 8) ^ 0x1A665784)
                                                                                             + 1327762909));
  v78 = (v77 ^ 0x30F1F5A) & (2 * (v77 & 0x8B0F1C5B)) ^ v77 & 0x8B0F1C5B;
  v79 = ((2 * (v77 ^ 0x130D377C)) ^ 0x3004564E) & (v77 ^ 0x130D377C) ^ (2 * (v77 ^ 0x130D377C)) & 0x98022B26;
  v80 = v79 ^ a23;
  v81 = (v79 ^ 0x90020A05) & (4 * v78) ^ v78;
  v82 = ((4 * v80) ^ 0x6008AC9C) & v80 ^ (4 * v80) & 0x98022B24;
  v83 = (v82 ^ 0x2800) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x98020323)) ^ a21) & (v82 ^ 0x98020323) ^ (16 * (v82 ^ 0x98020323)) & 0x98022B20;
  v85 = v83 ^ 0x98022B27 ^ (v84 ^ 0x80022207) & (v83 << 8);
  v86 = v77 ^ (2
             * ((v85 << 16) & 0x18020000 ^ v85 ^ ((v85 << 16) ^ 0x2B270000) & (((v84 ^ 0x18000907) << 8) & 0x98020000 ^ (((v84 ^ 0x18000907) << 8) ^ 0x22B0000) & (v84 ^ 0x18000907) ^ 0x18000000)));
  v87 = ((v86 ^ 0xE0B1B4D6) + 1088304038) ^ ((v86 ^ a22) - 1977257682) ^ ((v86 ^ 0x61F4089D) - 1046769681);
  v88 = ((v87 - 1013604985) ^ 0x3EC1B541) & (2 * ((v87 - 1013604985) & 0xBEC5366A)) ^ (v87 - 1013604985) & 0xBEC5366A;
  v89 = ((2 * ((v87 - 1013604985) ^ 0x341D501)) ^ 0x7B09C6D6) & ((v87 - 1013604985) ^ 0x341D501) ^ (2
                                                                                                  * ((v87 - 1013604985) ^ 0x341D501)) & 0xBD84E36A;
  v90 = v89 ^ a24;
  v91 = (v89 ^ 0x3900C240) & (4 * v88) ^ v88;
  v92 = ((4 * v90) ^ 0xF6138DAC) & v90 ^ (4 * v90) & 0xBD84E368;
  v93 = (v92 ^ a25) & (16 * v91) ^ v91;
  v94 = ((16 * (v92 ^ 0x9846243)) ^ 0xD84E36B0) & (v92 ^ 0x9846243) ^ (16 * (v92 ^ 0x9846243)) & 0xBD84E360;
  v95 = v93 ^ 0xBD84E36B ^ (v94 ^ 0x98042200) & (v93 << 8);
  v96 = ((v87 - 1013604985) ^ (2
                             * ((v95 << 16) & 0x3D840000 ^ v95 ^ ((v95 << 16) ^ 0x636B0000) & (((v94 ^ 0x2580C14B) << 8) & 0xBD840000 ^ 0x39040000 ^ (((v94 ^ 0x2580C14B) << 8) ^ 0x4E30000) & (v94 ^ 0x2580C14B))))) >> 15;
  v97 = v87
      - 1859262462
      + (((v96 ^ 0x9335182B) - 883124657) ^ ((v96 ^ 0x5D7EF74E) + 85424428) ^ ((v96 ^ 0xCE4AE0FC) - 1776062822));
  v98 = (v97 ^ a28) & (2 * (v97 & 0x98C469F2)) ^ v97 & 0x98C469F2;
  v99 = ((2 * (v97 ^ 0x5E335FE6)) ^ 0x8DEE6C28) & (v97 ^ 0x5E335FE6) ^ (2 * (v97 ^ 0x5E335FE6)) & 0xC6F73614;
  v100 = v99 ^ a26;
  v101 = (v99 ^ 0x84223404) & (4 * v98) ^ v98;
  v102 = ((4 * v100) ^ 0x1BDCD850) & v100 ^ (4 * v100) & 0xC6F73614;
  v103 = (v102 ^ a27) & (16 * v101) ^ v101;
  v104 = ((16 * (v102 ^ 0xC4232604)) ^ 0x6F736140) & (v102 ^ 0xC4232604) ^ (16 * (v102 ^ 0xC4232604)) & 0xC6F73610;
  v105 = v103 ^ 0xC6F73614 ^ (v104 ^ 0x46732000) & (v103 << 8);
  v106 = (v97 ^ (2
               * ((v105 << 16) & 0x46F70000 ^ v105 ^ ((v105 << 16) ^ 0x36140000) & (((v104 ^ 0x80841614) << 8) & 0x46F70000 ^ 0xC10000 ^ (((v104 ^ 0x80841614) << 8) ^ 0x77360000) & (v104 ^ 0x80841614))))) >> 8;
  v107 = v97
       + 647153377
       + (((v106 ^ 0xBD03D7C8) - 201644643) ^ ((v106 ^ 0xE7C217A6) - 1455757837) ^ ((v106 ^ 0x5AD8C26B) + 337653824));
  v108 = (v107 ^ 0xA36F323E) & (2 * (v107 & 0x234FB2BF)) ^ v107 & 0x234FB2BF;
  v109 = ((2 * (v107 ^ 0xE3FE1626)) ^ 0x81634932) & (v107 ^ 0xE3FE1626) ^ (2 * (v107 ^ 0xE3FE1626)) & 0xC0B1A498;
  v110 = v109 ^ 0x4090A489;
  v111 = (v109 ^ 0x80210010) & (4 * v108) ^ v108;
  v112 = ((4 * v110) ^ 0x2C69264) & v110 ^ (4 * v110) & 0xC0B1A498;
  v113 = (v112 ^ 0x808009) & (16 * v111) ^ v111;
  v114 = ((16 * (v112 ^ 0xC0312499)) ^ 0xB1A4990) & (v112 ^ 0xC0312499) ^ (16 * (v112 ^ 0xC0312499)) & 0xC0B1A490;
  v115 = v113 ^ 0xC0B1A499 ^ (v114 ^ 0x100009) & (v113 << 8);
  v116 = v107 ^ (2
               * ((v115 << 16) & 0x40B10000 ^ v115 ^ ((v115 << 16) ^ 0x24990000) & (((v114 ^ 0xC0A1A409) << 8) & 0x40B10000 ^ 0x40110000 ^ (((v114 ^ 0xC0A1A409) << 8) ^ 0x31A40000) & (v114 ^ 0xC0A1A409))));
  v117 = (((v116 ^ 0x74363B1C) + 1935829101) ^ ((v116 ^ 0x8CCE2CE5) - 1952809066) ^ ((v116 ^ 0x77C2EB29) + 1888925786))
       - ((((v116 >> 9) ^ 0x3D9D33E9) + 2034024869) ^ (((v116 >> 9) ^ 0x177779EA) + 1406569384) ^ (((v116 >> 9) ^ 0x2AADD77D)
                                                                                                 + 1846289713));
  v118 = v117
       - (((((v117 - 1133002861) >> 3) ^ 0x36DC6F12) + 8469551) ^ ((((v117 - 1133002861) >> 3) ^ 0xA6B6B373) - 1863589808) ^ ((((v117 - 1133002861) >> 3) ^ 0x906ADC61) - 1506308258))
       + 1276922318;
  v119 = (v118 ^ 0x632CD32) & (2 * (v118 & 0xA6B8C902)) ^ v118 & 0xA6B8C902;
  v120 = ((2 * (v118 ^ 0x47735D32)) ^ 0xC3972860) & (v118 ^ 0x47735D32) ^ (2 * (v118 ^ 0x47735D32)) & 0xE1CB9430;
  v121 = v120 ^ 0x20489410;
  v122 = (v120 ^ 0x81830000) & (4 * v119) ^ v119;
  v123 = ((4 * v121) ^ 0x872E50C0) & v121 ^ (4 * v121) & 0xE1CB9430;
  v124 = (v123 ^ 0x810A1000) & (16 * v122) ^ v122;
  v125 = ((16 * (v123 ^ 0x60C18430)) ^ 0x1CB94300) & (v123 ^ 0x60C18430) ^ (16 * (v123 ^ 0x60C18430)) & 0xE1CB9430;
  v126 = v124 ^ 0xE1CB9430 ^ (v125 ^ 0x890030) & (v124 << 8);
  v127 = v118 ^ (2
               * ((v126 << 16) & 0x61CB0000 ^ v126 ^ ((v126 << 16) ^ 0x14300000) & (((v125 ^ 0xE1429430) << 8) & 0x61CB0000 ^ 0x204B0000 ^ (((v125 ^ 0xE1429430) << 8) ^ 0x4B940000) & (v125 ^ 0xE1429430))));
  v128 = ((v127 >> 8) ^ 0xBDE13A) + (v127 ^ 0xBDE13A0B) + ((((v127 >> 8) ^ 0xBDE13A) + (v127 ^ 0xBDE13A0B)) >> 2);
  v129 = v128 - ((2 * v128) & 0x66014970) + 855680184;
  v130 = v86 ^ LODWORD(STACK[0x6AB0]) ^ v129;
  v131 = ((v129 ^ 0x77B197E1) - 2008127457) ^ ((v129 ^ a29) - 1529001015) ^ ((v129 ^ 0x1F93876E) - 529762158);
  v132 = ((v131 - 634401935) ^ 0xE5120DEE) & (2 * ((v131 - 634401935) & 0xF6182DEC)) ^ (v131 - 634401935) & 0xF6182DEC;
  v133 = ((2 * ((v131 - 634401935) ^ 0x81225566)) ^ 0xEE74F114) & ((v131 - 634401935) ^ 0x81225566) ^ (2 * ((v131 - 634401935) ^ 0x81225566)) & 0x773A788A;
  v134 = v133 ^ 0x110A088A;
  v135 = (v133 ^ 0x60207000) & (4 * v132) ^ v132;
  v136 = ((4 * v134) ^ 0xDCE9E228) & v134 ^ (4 * v134) & 0x773A7888;
  v137 = (v136 ^ 0x54286000) & (16 * v135) ^ v135;
  v138 = ((16 * (v136 ^ 0x23121882)) ^ 0x73A788A0) & (v136 ^ 0x23121882) ^ (16 * (v136 ^ 0x23121882)) & 0x773A7880;
  v139 = v137 ^ 0x773A788A ^ (v138 ^ 0x73220800) & (v137 << 8);
  v140 = ((v131 - 634401935) ^ (2
                              * ((v139 << 16) & 0x773A0000 ^ v139 ^ ((v139 << 16) ^ 0x788A0000) & (((v138 ^ a30) << 8) & 0x773A0000 ^ 0x45020000 ^ (((v138 ^ a30) << 8) ^ 0x3A780000) & (v138 ^ a30))))) >> 8;
  v141 = v131
       - 630612506
       + (((v140 ^ 0xE5822891) - 1686811632) ^ ((v140 ^ 0x53E90FE9) + 756968312) ^ ((v140 ^ 0xB6935FA4) - 932955333));
  v142 = (v141 ^ 0x77AF3EA4) & (2 * (v141 & 0x77CF3F34)) ^ v141 & 0x77CF3F34;
  v143 = ((2 * (v141 ^ 0x7FA74A84)) ^ 0x10D0EB60) & (v141 ^ 0x7FA74A84) ^ (2 * (v141 ^ 0x7FA74A84)) & 0x86875B0;
  v144 = v143 ^ 0x8281490;
  v145 = (v143 ^ 0x406120) & (4 * v142) ^ v142;
  v146 = ((4 * v144) ^ 0x21A1D6C0) & v144 ^ (4 * v144) & 0x86875B0;
  v147 = (v146 ^ 0x205490) & (16 * v145) ^ v145;
  v148 = ((16 * (v146 ^ 0x8482130)) ^ 0x86875B00) & (v146 ^ 0x8482130) ^ (16 * (v146 ^ 0x8482130)) & 0x86875B0;
  v149 = v147 ^ 0x86875B0 ^ (v148 ^ 0x5100) & (v147 << 8);
  v150 = (v141 ^ (2
                * ((v149 << 16) & 0x8680000 ^ v149 ^ ((v149 << 16) ^ 0x75B00000) & (((v148 ^ 0x86824B0) << 8) & 0x8680000 ^ (((v148 ^ 0x86824B0) << 8) ^ 0x68750000) & (v148 ^ 0x86824B0) ^ 0x80000)))) >> 6;
  v151 = v141
       - (((v150 ^ 0x343E2CCF) - 1023267390) ^ ((v150 ^ 0xD2093309) + 624243208) ^ ((v150 ^ 0xE7AA6097) + 278290842))
       + 2094935131;
  v152 = (v151 ^ 0xE9C2953C) & (2 * (v151 & 0xF1929139)) ^ v151 & 0xF1929139;
  v153 = ((2 * (v151 ^ 0xAE6B52C)) ^ 0xF6E8482A) & (v151 ^ 0xAE6B52C) ^ (2 * (v151 ^ 0xAE6B52C)) & 0xFB742414;
  v154 = v153 ^ 0x9142415;
  v155 = (v153 ^ 0xC3402011) & (4 * v152) ^ v152;
  v156 = ((4 * v154) ^ 0xEDD09054) & v154 ^ (4 * v154) & 0xFB742414;
  v157 = (v156 ^ a31) & (16 * v155) ^ v155;
  v158 = ((16 * (v156 ^ 0x12242401)) ^ 0xB7424150) & (v156 ^ 0x12242401) ^ (16 * (v156 ^ 0x12242401)) & 0xFB742410;
  v159 = v157 ^ 0xFB742415 ^ (v158 ^ 0xB3400000) & (v157 << 8);
  v160 = v151 ^ (2
               * ((v159 << 16) & 0x7B740000 ^ v159 ^ ((v159 << 16) ^ 0x24150000) & (((v158 ^ 0x48342405) << 8) & 0x7B740000 ^ 0xB500000 ^ (((v158 ^ 0x48342405) << 8) ^ 0x74240000) & (v158 ^ 0x48342405))));
  v161 = ((((v160 >> 9) ^ 0x8CC12466) + 2146215053) ^ (((v160 >> 9) ^ 0x1BEA1FC5) - 389570768) ^ (((v160 >> 9) ^ 0x97131D37)
                                                                                                + 1681825246))
       + (((v160 ^ 0x1ED75A92) - 1312384135) ^ ((v160 ^ 0x4A7905A5) - 446118832) ^ ((v160 ^ 0x24E37735) - 1947027744));
  v162 = ((v161 + 1844976944) ^ 0xBF910046) & (2 * ((v161 + 1844976944) & 0xBF955268)) ^ (v161 + 1844976944) & 0xBF955268;
  v163 = ((2 * ((v161 + 1844976944) ^ a32)) ^ 0xC08ECDC) & ((v161 + 1844976944) ^ a32) ^ (2 * ((v161 + 1844976944) ^ a32)) & 0x604766E;
  v164 = v163 ^ 0x2041222;
  v165 = (v163 ^ 0x4004042) & (4 * v162) ^ v162;
  v166 = ((4 * v164) ^ 0x1811D9B8) & v164 ^ (4 * v164) & 0x604766C;
  v167 = (v166 ^ 0x5020) & (16 * v165) ^ v165;
  v168 = ((16 * (v166 ^ 0x6042646)) ^ 0x604766E0) & (v166 ^ 0x6042646) ^ (16 * (v166 ^ 0x6042646)) & 0x6047660;
  v169 = v167 ^ 0x604766E ^ (v168 ^ 0x4660E) & (v167 << 8);
  v170 = ((((v161 + 1844976944) ^ (2
                                 * ((v169 << 16) & 0x6040000 ^ v169 ^ ((v169 << 16) ^ 0x766E0000) & (((v168 ^ 0x600100E) << 8) & 0x6040000 ^ (((v168 ^ 0x600100E) << 8) ^ 0x4760000) & (v168 ^ 0x600100E) ^ 0x2000000)))) >> 3) ^ 0xE80D4829)
       + v161;
  v171 = v65 ^ LODWORD(STACK[0x6A80]) ^ v127 ^ (v170 + 764243865);
  v172 = v170 - 1882763625 + ((v170 - 1882763625) >> 8) + ((v170 - 1882763625 + ((v170 - 1882763625) >> 8)) >> 2);
  v173 = v130 ^ v172;
  v174 = ((v172 - 437942056) ^ 0x8C595CFA) & (2 * ((v172 - 437942056) & 0xAC911CFB)) ^ (v172 - 437942056) & 0xAC911CFB;
  v175 = ((2 * ((v172 - 437942056) ^ 0x9C5B5C0C)) ^ 0x619481EE) & ((v172 - 437942056) ^ 0x9C5B5C0C) ^ (2 * ((v172 - 437942056) ^ 0x9C5B5C0C)) & 0x30CA40F6;
  v176 = v175 ^ 0x104A4011;
  v177 = (v175 ^ 0x208200E5) & (4 * v174) ^ v174;
  v178 = ((4 * v176) ^ 0xC32903DC) & v176 ^ (4 * v176) & 0x30CA40F4;
  v179 = (v178 ^ 0x800D3) & (16 * v177) ^ v177;
  v180 = ((16 * (v178 ^ 0x30C24023)) ^ 0xCA40F70) & (v178 ^ 0x30C24023) ^ (16 * (v178 ^ 0x30C24023)) & 0x30CA40F0;
  v181 = v179 ^ 0x30CA40F7 ^ (v180 ^ 0x800087) & (v179 << 8);
  v182 = ((v172 - 437942056) ^ (2
                              * ((v181 << 16) & 0x30CA0000 ^ v181 ^ ((v181 << 16) ^ 0x40F70000) & (((v180 ^ 0x304A4087) << 8) & 0x30CA0000 ^ 0x308A0000 ^ (((v180 ^ 0x304A4087) << 8) ^ 0xCA400000) & (v180 ^ 0x304A4087))))) >> 14;
  v183 = v172
       - 391989355
       + (((v182 ^ 0x69E00C67) + 1667890057) ^ ((v182 ^ 0xF720E056) - 39249990) ^ ((v182 ^ 0x9EC3DE37) - 1807078951));
  v184 = (v183 ^ 0x5F012E14) & (2 * (v183 & a33)) ^ v183 & a33;
  v185 = ((2 * (v183 ^ 0x77932E14)) ^ 0xD1B40C80) & (v183 ^ 0x77932E14) ^ (2 * (v183 ^ 0x77932E14)) & 0xE8DA0640;
  v186 = v185 ^ 0x284A0240;
  v187 = (v185 ^ 0xC0020000) & (4 * v184) ^ v184;
  v188 = ((4 * v186) ^ 0xA3681900) & v186 ^ (4 * v186) & 0xE8DA0640;
  v189 = v187 ^ 0xE8DA0640 ^ (v188 ^ 0xA0480000) & (16 * v187);
  v190 = (16 * (v188 ^ 0x48920640)) & 0xE8DA0640 ^ 0x605A0240 ^ ((16 * (v188 ^ 0x48920640)) ^ 0x8DA06400) & (v188 ^ 0x48920640);
  v191 = (v189 << 8) & 0xE8DA0600 ^ v189 ^ ((v189 << 8) ^ 0xDA064000) & v190;
  v192 = (v183 ^ (2
                * ((v191 << 16) & 0x68DA0000 ^ v191 ^ ((v191 << 16) ^ 0x6400000) & ((v190 << 8) & 0xE8DA0000 ^ 0x20D80000 ^ ((v190 << 8) ^ 0xDA060000) & v190)))) >> 1;
  v193 = v183
       - (((v192 ^ 0x59969241) - 1157049605) ^ ((v192 ^ 0xC7B2EE2F) + 623685269) ^ ((v192 ^ 0xF118EE04) + 327593664))
       + 1109599206;
  v194 = (v193 ^ 0xC8CCD72D) & (2 * (v193 & 0xEAC8D740)) ^ v193 & 0xEAC8D740;
  v195 = ((2 * (v193 ^ 0x8CDFB2D)) ^ 0xC40A58DA) & (v193 ^ 0x8CDFB2D) ^ (2 * (v193 ^ 0x8CDFB2D)) & 0xE2052C6C;
  v196 = v195 ^ 0x22052425;
  v197 = (v195 ^ 0xC0000825) & (4 * v194) ^ v194;
  v198 = ((4 * v196) ^ 0x8814B1B4) & v196 ^ (4 * v196) & 0xE2052C6C;
  v199 = (v198 ^ 0x80042029) & (16 * v197) ^ v197;
  v200 = ((16 * (v198 ^ 0x62010C49)) ^ 0x2052C6D0) & (v198 ^ 0x62010C49) ^ (16 * (v198 ^ 0x62010C49)) & 0xE2052C60;
  v201 = v199 ^ 0xE2052C6D ^ (v200 ^ 0x2000042D) & (v199 << 8);
  v202 = v116 ^ LODWORD(STACK[0x6A90]) ^ v160 ^ v193 ^ (2
                                                      * ((v201 << 16) & 0x62050000 ^ v201 ^ ((v201 << 16) ^ 0x2C6D0000) & (((v200 ^ 0xC205282D) << 8) & 0x62050000 ^ 0x62010000 ^ (((v200 ^ 0xC205282D) << 8) ^ 0x52C0000) & (v200 ^ 0xC205282D))));
  v203 = ((2 * v171) & 8) + 2125639880 + (v171 & 0x7F ^ 0xFFFFFFA7) + 1460;
  v204 = ((v203 & 0x50108136 ^ 0x81080025) + (v203 & 0x8006C9) - 1) ^ 0xD198863C;
  v205 = (v171 & 0xFFFFFF80 ^ 0x89511F80 | 0xADCCF51F) - (v171 & 0xFFFFFF80 ^ 0x89511F80 | 0x52330AE0) + 1379076832;
  LODWORD(STACK[0x6A80]) = (v205 & 0x68FFE80E ^ 0x401A0805) + (v205 & 0x97001791) - 1;
  LODWORD(STACK[0x6660]) = v204;
  v206 = 16843009 * v204 - 1540883315;
  v207 = (v206 ^ 0x5B9C2B63) & (2 * (v206 & 0x5BD80373)) ^ v206 & 0x5BD80373;
  v208 = ((2 * (v206 ^ 0xFE3C2DE3)) ^ 0x4BC85D20) & (v206 ^ 0xFE3C2DE3) ^ (2 * (v206 ^ 0xFE3C2DE3)) & 0xA5E42E90;
  v209 = v208 ^ 0xA4242290;
  v210 = (v208 ^ 0x1C00C00) & (4 * v207) ^ v207;
  v211 = ((4 * v209) ^ 0x9790BA40) & v209 ^ (4 * v209) & 0xA5E42E90;
  v212 = v210 ^ 0xA5E42E90 ^ (v211 ^ a34) & (16 * v210);
  v213 = (16 * (v211 ^ 0x20640490)) & 0xA5E42E90 ^ 0xA1A40690 ^ ((16 * (v211 ^ 0x20640490)) ^ 0x5E42E900) & (v211 ^ 0x20640490);
  v214 = (v212 << 8) & 0xA5E42E00 ^ v212 ^ ((v212 << 8) ^ 0xE42E9000) & v213;
  LODWORD(STACK[0x66B8]) = v206 ^ (2
                                 * ((v214 << 16) & 0x25E40000 ^ v214 ^ ((v214 << 16) ^ 0x2E900000) & ((v213 << 8) & 0x25E40000 ^ ((v213 << 8) ^ 0xE42E0000) & v213 ^ 0x1C00000)));
  v215 = ((v202 ^ a35) - 897968355) ^ ((v202 ^ 0x3CCA7371) + 1111612463) ^ ((v202 ^ 0xBB1DE07B) - 980005083);
  LOBYTE(v214) = (((v202 ^ a35) + 29) ^ ((v202 ^ 0x71) + 47) ^ ((v202 ^ 0x7B) + 37)) + 4;
  LODWORD(STACK[0x6800]) = v202;
  LODWORD(STACK[0x6A50]) = ((v202 & 0xFFFFFFF8 ^ 0xA8603548)
                          + (v202 & 0x6CE2C9D0 ^ 0x4482C892)
                          - ((v202 & 0xFFFFFFF8 ^ 0xA8603548) & 0x6CE2C9D0)) ^ 0xA2FCB289;
  v216 = (v214 & 1 | 0xFFBBD7FE)
       - ((2 * v215) & 4 ^ v214 & 7 | 0x1A9A50F8)
       + (((2 * v215) & 4 ^ v214 & 7) & 1 | 0x120250B8);
  v217 = v216 ^ 0x10;
  LODWORD(STACK[0x66D0]) = v216;
  v218 = v216 ^ 0x6B85E7EB;
  LODWORD(STACK[0x6350]) = v202 & 7;
  v219 = v202 & 7 ^ 0xEE7C59BD;
  LODWORD(STACK[0x6750]) = v219;
  v220 = v219 == -293840453;
  if (v219 == -293840453)
    v221 = 0;
  else
    v221 = 255;
  LODWORD(STACK[0x6668]) = v218;
  v222 = v218 & 0xC;
  LODWORD(STACK[0x63D8]) = v222;
  LODWORD(STACK[0x63D0]) = v217 & 0x13;
  v223 = v221 << v222 << (v217 & 0x13);
  v224 = 16843009 * v223;
  LODWORD(STACK[0x6A60]) = v224;
  LODWORD(STACK[0x6548]) = (-1459617792 * v223) & (v173 ^ 0xF000000) ^ v224;
  v225 = v223 ^ 0x35;
  if (v220)
    v225 = -54;
  v226 = ((2 * ((v225 ^ 0xCA) & (v171 ^ 0xB7) ^ v225 & 0xD8)) | 0x4E)
       - ((v225 ^ 0xCA) & (v171 ^ 0xB7) ^ v225 & 0xD8)
       - 39;
  v227 = v226 ^ 0xE91BAD09;
  LODWORD(STACK[0x6A30]) = v226 & 0x58 ^ 0x12645250;
  LODWORD(STACK[0x6A40]) = v227;
  LODWORD(STACK[0x6A20]) = v227 & 0xE018AD58;
  LODWORD(STACK[0x6A10]) = (((BYTE1(v171) ^ BYTE2(v171) ^ 0xE6)
                                            - 2
                                            * ((BYTE1(v171) ^ BYTE2(v171) ^ 0xE6) & 0x59 ^ (BYTE1(v171) ^ BYTE2(v171)) & 1)
                                            + 88) ^ v171) ^ HIBYTE(v171) ^ 0x71;
  LODWORD(STACK[0x64A8]) = v173;
  v228 = STACK[0x68B0];
  v229 = STACK[0xD678];
  v230 = *(_QWORD *)(STACK[0xD678] + 8 * (0x95612FD0 % STACK[0x68B0]));
  v231 = *(_QWORD *)(STACK[0xD678]
                   + 8
                   * (((((v230 ^ 0xEC1F74D27C77EC9ELL) - 0x16559A430C17D25) ^ ((v230 ^ 0x481739CAAE85E426)
                                                                               + 0x5A92EB431DCC8A63) ^ ((v230 ^ 0xF95510458FAF55E5) - 0x142F3D33C319C45ELL))
                     - 0x4FD88FD4038A1EFFLL)
                    % STACK[0x68B0]));
  v232 = *(_QWORD *)(STACK[0xD678]
                   + 8
                   * (((((v231 ^ 0x919859C06C8757D3) + 0xD470115ABA5C98CLL) ^ ((v231 ^ 0xBFFBFF8C58ACD27DLL)
                                                                               + 0x2324A7599F8E4C26) ^ ((v231 ^ 0x733EFB116976D8F3) - 0x101E5C3B51ABB954))
                     + 0x3E7DFA782500A88CLL)
                    % STACK[0x68B0]));
  LODWORD(STACK[0x66D8]) = 16843009
                         * (v173 ^ 0xB5 ^ ((unsigned __int16)(v173 ^ 0x5FB5) >> 8) ^ ((v173 ^ 0xAF855FB5) >> 16) ^ HIBYTE(v173) ^ 0xA4);
  STACK[0x6AA0] = v229;
  v233 = *(_QWORD *)(v229
                   + 8
                   * (((((v232 ^ 0xF0BA7EA648A7E417) - 0x97AAD407B8B4E84) ^ ((v232 ^ 0x476F72D5C528C545)
                                                                               + 0x41505ECC09FB902ALL) ^ ((v232 ^ 0xEA88512ED0D27C0FLL) - 0x134882C8E3FED69CLL))
                     - 0x5B627143E4FE67E8)
                    % v228));
  LODWORD(v233) = ((((v233 ^ 0xF73065D16434C8D5) - 0x5EF893D9A2F0948BLL) ^ ((v233 ^ 0xF7CC32191312CDC6)
                                                                            - 0x5E04C411D5D69198) ^ ((v233 ^ 0x5DA10A952A7B584ELL) + 0xB9603621340FBF0))
                 - 0xB6A54A97F8C586ELL)
                % v228;
  LODWORD(STACK[0x64A0]) = v171;
  LODWORD(STACK[0x64B0]) = v171 ^ 0x14D39A84;
  LODWORD(STACK[0x6A90]) = ((((v233 - ((2 * v233) & 0x3F796A9E) - 1615022769) ^ a36) + 1554125319) ^ (((v233 - ((2 * v233) & 0x3F796A9E) - 1615022769) ^ 0xF0A35102) + 1593485415) ^ (((v233 - ((2 * v233) & 0x3F796A9E) - 1615022769) ^ 0x9DE40F2F) + 868087372))
                         - 655617620;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A70])) - 12))();
}

uint64_t sub_100C5BCA0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  int v7;
  _BOOL4 v8;

  v5 = STACK[0x6A90];
  v6 = LODWORD(STACK[0x6A90]) < a4;
  v7 = STACK[0x6A70];
  STACK[0x6AB0] = (LODWORD(STACK[0x6A70]) + 2567);
  if (v6 != (v4 - 698672703) < 0xAD15DD8)
    v8 = v6;
  else
    v8 = v4 - 698672703 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((!v8 | (8 * !v8)) ^ v7)) - 12))();
}

uint64_t sub_100C5E924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28,int a29)
{
  int v29;
  unsigned int v30;

  LODWORD(STACK[0x67D0]) = LODWORD(STACK[0x6900]) ^ 0x3253FED4;
  LODWORD(STACK[0x6540]) = LODWORD(STACK[0x64A8]) ^ a29;
  LODWORD(STACK[0x6340]) = LODWORD(STACK[0x6A80]) ^ 0x5E38C1B;
  LODWORD(STACK[0x6348]) = LODWORD(STACK[0x6A50]) - 1;
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6A40]) + LODWORD(STACK[0x6A30]) - LODWORD(STACK[0x6A20]);
  LODWORD(STACK[0x64B8]) = 16843009 * LODWORD(STACK[0x6A10]);
  LODWORD(STACK[0x6358]) = LODWORD(STACK[0x66D8]) ^ a28;
  STACK[0x6AA0] = STACK[0xD678];
  v30 = ((LODWORD(STACK[0x6910]) ^ 0x85CD207D) - 1540567229) ^ ((LODWORD(STACK[0x6910]) ^ 0x8CB4CE0D) - 1386929869) ^ ((LODWORD(STACK[0x6910]) ^ 0x1AAAB8B9) + 994793351);
  LODWORD(STACK[0x6A90]) = v30;
  LODWORD(STACK[0x6A80]) = v30 + 1796106290;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6AB0]) - 4))(a1, a2, a3, 0x4CF596644C9A8D16, a5, 0xF14D8332E5391910, a7, (v29 + 1));
}

uint64_t sub_100C5EB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _BOOL4 v8;

  if (LODWORD(STACK[0x6A90]) < 0x3232B9F7 != (a8 + 1758125586) < 0x9D412229)
    v8 = LODWORD(STACK[0x6A90]) < 0x3232B9F7;
  else
    v8 = LODWORD(STACK[0x6A80]) > a8 + 1758125586;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((976 * !v8) ^ STACK[0x6AB0])) - 4))();
}

uint64_t sub_100C61798@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t (*v172)(void);

  v4 = (a1 - 8368) | 0x20AC;
  v5 = LODWORD(STACK[0x64B8]) ^ LODWORD(STACK[0x66D8]);
  LODWORD(STACK[0x6A90]) = v4;
  LODWORD(STACK[0x6498]) = v5 ^ (v4 - 1633783312);
  v6 = ((v3 + 0x6E5B330F2D349AE0) ^ 0xB4F10FA36A566D5ALL) & (2 * ((v3 + 0x6E5B330F2D349AE0) & 0xA4F12FAA73676E5ALL)) ^ (v3 + 0x6E5B330F2D349AE0) & 0xA4F12FAA73676E5ALL;
  v7 = ((2 * ((v3 + 0x6E5B330F2D349AE0) ^ 0xFDD34DE78A90B14ALL)) ^ 0xB244C49BF3EFBE20) & ((v3 + 0x6E5B330F2D349AE0) ^ 0xFDD34DE78A90B14ALL) ^ (2 * ((v3 + 0x6E5B330F2D349AE0) ^ 0xFDD34DE78A90B14ALL)) & 0x5922624DF9F7DF10;
  v8 = v7 ^ 0x4922224408104110;
  v9 = (v7 ^ 0x10004009D1A79A00) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0x64898937E7DF7C40) & v8 ^ (4 * v8) & 0x5922624DF9F7DF10;
  v11 = (v10 ^ 0x40000005E1D75C00) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x1922624818208310)) ^ 0x922624DF9F7DF100) & (v10 ^ 0x1922624818208310) ^ (16 * (v10 ^ 0x1922624818208310)) & 0x5922624DF9F7DF10;
  v13 = (v12 ^ 0x1022204D9975D100) & (v11 << 8) ^ v11;
  v14 = (((v12 ^ 0x4900420060820E10) << 8) ^ 0x22624DF9F7DF1000) & (v12 ^ 0x4900420060820E10) ^ ((v12 ^ 0x4900420060820E10) << 8) & 0x5922624DF9F7DF00;
  v15 = v13 ^ 0x5922624DF9F7DF10 ^ (v14 ^ 0x224049F1D70000) & (v13 << 16);
  v16 = ((v3 + 0x6E5B330F2D349AE0) ^ (2
                                      * ((v15 << 32) & 0x5922624D00000000 ^ v15 ^ ((v15 << 32) ^ 0x79F7DF1000000000) & (((v14 ^ 0x590022040820CF10) << 16) & 0x5922624D00000000 ^ 0x1922020800000000 ^ (((v14 ^ 0x590022040820CF10) << 16) ^ 0x624DF9F700000000) & (v14 ^ 0x590022040820CF10uLL))))) >> 29;
  v17 = v3
      - (((v16 ^ 0x10327077B51B4B89) - 0x3505243208B3C6D3) ^ ((v16 ^ 0x7BC569DBE3E1AEF6) - 0x5EF23D9E5E4923ACLL) ^ ((v16 ^ 0x6BF719A971719CF3) - 0x4EC04DECCCD911A9))
      - 0x18478EE5669302D1;
  v18 = (v17 ^ 0xC65E5C1C6C6347B5) & (2 * (v17 & 0x65C9D5E6D0B1735)) ^ v17 & 0x65C9D5E6D0B1735;
  v19 = ((2 * (v17 ^ 0xCACE4498FC754F9FLL)) ^ 0x9925B38D22FCB154) & (v17 ^ 0xCACE4498FC754F9FLL) ^ (2 * (v17 ^ 0xCACE4498FC754F9FLL)) & 0xCC92D9C6917E58AALL;
  v20 = v19 ^ 0x44924842910248AALL;
  v21 = (v19 ^ 0x8009180007C1000) & (4 * v18) ^ v18;
  v22 = ((4 * v20) ^ 0x324B671A45F962A8) & v20 ^ (4 * v20) & 0xCC92D9C6917E58A8;
  v23 = (v22 ^ 0x24102017840A0) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0xCC9098C490061802)) ^ 0xC92D9C6917E58AA0) & (v22 ^ 0xCC9098C490061802) ^ (16 * (v22 ^ 0xCC9098C490061802)) & 0xCC92D9C6917E58A0;
  v25 = (v24 ^ 0xC800984011640800) & (v23 << 8) ^ v23;
  v26 = (((v24 ^ 0x4924186801A500ALL) << 8) ^ 0x92D9C6917E58AA00) & (v24 ^ 0x4924186801A500ALL) ^ ((v24 ^ 0x4924186801A500ALL) << 8) & 0xCC92D9C6917E5800;
  v27 = v25 ^ 0xCC92D9C6917E58AALL ^ (v26 ^ 0x8090C08010580000) & (v25 << 16);
  v28 = (v17 ^ (2
              * ((v27 << 32) & 0x4C92D9C600000000 ^ v27 ^ ((v27 << 32) ^ 0x117E58AA00000000) & (((v26 ^ 0x4C021946812650AALL) << 16) & 0x4C92D9C600000000 ^ 0x410488000000000 ^ (((v26 ^ 0x4C021946812650AALL) << 16) ^ 0x59C6917E00000000) & (v26 ^ 0x4C021946812650AALL))))) >> 14;
  v29 = v17
      - (((v28 ^ 0x84F68496E3E69E71) + 0x252DE7A45A854CDFLL) ^ ((v28 ^ 0x2178AFB7C96BF425) - 0x7F5C337A8FF7D975) ^ ((v28 ^ 0xA58C565755D0558ALL) + 0x4573565ECB38726))
      - 0x738E21910995FE35;
  v30 = (v29 ^ 0x53AB9C2338FFD0DBLL) & (2 * (v29 & 0x1BC3DD343CE002DCLL)) ^ v29 & 0x1BC3DD343CE002DCLL;
  v31 = ((2 * (v29 ^ 0x75AFA643313FD0E3)) ^ 0xDCD8F6EE1BBFA47ELL) & (v29 ^ 0x75AFA643313FD0E3) ^ (2 * (v29 ^ 0x75AFA643313FD0E3)) & 0x6E6C7B770DDFD23ELL;
  v32 = v31 ^ 0x2224091104405201;
  v33 = (v31 ^ 0x4C08706001800030) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0xB9B1EDDC377F48FCLL) & v32 ^ (4 * v32) & 0x6E6C7B770DDFD23CLL;
  v35 = (v34 ^ 0x28206954055F4020) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x464C122308809203)) ^ 0xE6C7B770DDFD23F0) & (v34 ^ 0x464C122308809203) ^ (16 * (v34 ^ 0x464C122308809203)) & 0x6E6C7B770DDFD230;
  v37 = (v36 ^ 0x664433700DDD0200) & (v35 << 8) ^ v35;
  v38 = (((v36 ^ 0x82848070002D00FLL) << 8) ^ 0x6C7B770DDFD23F00) & (v36 ^ 0x82848070002D00FLL) ^ ((v36 ^ 0x82848070002D00FLL) << 8) & 0x6E6C7B770DDFD200;
  v39 = v37 ^ 0x6E6C7B770DDFD23FLL ^ (v38 ^ 0x6C6873050DD20000) & (v37 << 16);
  v40 = (v29 ^ (2
              * ((v39 << 32) & 0x6E6C7B7700000000 ^ v39 ^ ((v39 << 32) ^ 0xDDFD23F00000000) & (((v38 ^ 0x2040872000DC03FLL) << 16) & 0x6E6C7B7700000000 ^ 0x408722000000000 ^ (((v38 ^ 0x2040872000DC03FLL) << 16) ^ 0x7B770DDF00000000) & (v38 ^ 0x2040872000DC03FLL))))) >> 5;
  v41 = v29
      - 0x6B1F7CAB18F1C48DLL
      + (((v40 ^ 0xD92BEB61CBB1CC3DLL) + 0x7600B8FF47199DB5) ^ ((v40 ^ 0x5C0EB7B78BCBF311) - 0xCDA1BD6F89C5D67) ^ ((v40 ^ 0x83D940ABE140C219) + 0x2CF213356DE89391));
  v42 = (v41 ^ 0x982F01F90EBE128FLL) & (2 * (v41 & 0xDD0C09FC283F1AACLL)) ^ v41 & 0xDD0C09FC283F1AACLL;
  v43 = ((2 * (v41 ^ 0x1A2F12C11EC8129FLL)) ^ 0x8E46367A6DEE1066) & (v41 ^ 0x1A2F12C11EC8129FLL) ^ (2 * (v41 ^ 0x1A2F12C11EC8129FLL)) & 0xC7231B3D36F70832;
  v44 = v43 ^ 0x4121090512110811;
  v45 = (v43 ^ 0x8400023020E40020) & (4 * v42) ^ v42;
  v46 = ((4 * v44) ^ 0x1C8C6CF4DBDC20CCLL) & v44 ^ (4 * v44) & 0xC7231B3D36F70830;
  v47 = (v46 ^ 0x400083412D40000) & (16 * v45) ^ v45;
  v48 = ((16 * (v46 ^ 0xC323130924230833)) ^ 0x7231B3D36F708330) & (v46 ^ 0xC323130924230833) ^ (16 * (v46 ^ 0xC323130924230833)) & 0xC7231B3D36F70830;
  v49 = (v48 ^ 0x4221131126700000) & (v47 << 8) ^ v47;
  v50 = (((v48 ^ 0x8502082C10870803) << 8) ^ 0x231B3D36F7083300) & (v48 ^ 0x8502082C10870803) ^ ((v48 ^ 0x8502082C10870803) << 8) & 0xC7231B3D36F70800;
  v51 = v49 ^ 0xC7231B3D36F70833 ^ (v50 ^ 0x303193436000000) & (v49 << 16);
  v52 = v41 ^ (2
             * ((v51 << 32) & 0x47231B3D00000000 ^ v51 ^ ((v51 << 32) ^ 0x36F7083300000000) & (((v50 ^ 0xC420020900F70833) << 16) & 0x47231B3D00000000 ^ 0x4402090800000000 ^ (((v50 ^ 0xC420020900F70833) << 16) ^ 0x1B3D36F700000000) & (v50 ^ 0xC420020900F70833))));
  v53 = ((v52 ^ 0xEB85C86C433F30BALL) - 0x11CD6CA1207BC69FLL) ^ ((v52 ^ 0xB7779C0FB5F4ADD6) - 0x4D3F38C2D6B05BF3) ^ ((v52 ^ 0x3FE7B87B31A97A6) + 0x64920B52FA19E7DLL);
  v54 = ((v53 - 0x54CCBC99A68EEE1CLL) ^ 0xFE2625E9609094F6) & (2
                                                               * ((v53 - 0x54CCBC99A68EEE1CLL) & 0xFC8635ED74D4D6F0)) ^ (v53 - 0x54CCBC99A68EEE1CLL) & 0xFC8635ED74D4D6F0;
  v55 = ((2 * ((v53 - 0x54CCBC99A68EEE1CLL) ^ 0x7F2E06B141191596)) ^ 0x75066B86B9B86CCLL) & ((v53
                                                                                              - 0x54CCBC99A68EEE1CLL) ^ 0x7F2E06B141191596) ^ (2 * ((v53 - 0x54CCBC99A68EEE1CLL) ^ 0x7F2E06B141191596)) & 0x83A8335C35CDC366;
  v56 = v55 ^ 0x80A8114414444122;
  v57 = (v55 ^ 0x200221821818240) & (4 * v54) ^ v54;
  v58 = ((4 * v56) ^ 0xEA0CD70D7370D98) & v56 ^ (4 * v56) & 0x83A8335C35CDC364;
  v59 = (v58 ^ 0x2A0015015050100) & (16 * v57) ^ v57;
  v60 = ((16 * (v58 ^ 0x8108320C20C8C266)) ^ 0x3A8335C35CDC3660) & (v58 ^ 0x8108320C20C8C266) ^ (16 * (v58 ^ 0x8108320C20C8C266)) & 0x83A8335C35CDC360;
  v61 = (v60 ^ 0x280314014CC0200) & (v59 << 8) ^ v59;
  v62 = (((v60 ^ 0x8128021C2101C106) << 8) ^ 0xA8335C35CDC36600) & (v60 ^ 0x8128021C2101C106) ^ ((v60 ^ 0x8128021C2101C106) << 8) & 0x83A8335C35CDC300;
  v63 = v61 ^ 0x83A8335C35CDC366 ^ (v62 ^ 0x8020101405C10000) & (v61 << 16);
  v64 = v53
      - 0x584686AC31BA172BLL
      + ((((v53 - 0x54CCBC99A68EEE1CLL) ^ (2
                                         * ((v63 << 32) & 0x3A8335C00000000 ^ v63 ^ ((v63 << 32) ^ 0x35CDC36600000000) & (((v62 ^ 0x3882348300C8166) << 16) & 0x3A8335C00000000 ^ 0xA0021000000000 ^ (((v62 ^ 0x3882348300C8166) << 16) ^ 0x335C35CD00000000) & (v62 ^ 0x3882348300C8166))))) >> 28) ^ 0xFFFFFFF0739AA22ELL);
  v65 = v64 + (v64 >> 15) - ((v64 + (v64 >> 15)) >> 7);
  v66 = v65 + ((v65 - 0x1169993D3BD78268) >> 29) + 0x174818E236A22620;
  v67 = (v66 ^ 0xD76C29E42916567ELL) & (2 * (v66 & 0xD74E4DE08D865778)) ^ v66 & 0xD74E4DE08D865778;
  v68 = ((2 * (v66 ^ 0x5FECAAE4211ED2BELL)) ^ 0x1145CE0959310B8CLL) & (v66 ^ 0x5FECAAE4211ED2BELL) ^ (2 * (v66 ^ 0x5FECAAE4211ED2BELL)) & 0x88A2E704AC9885C6;
  v69 = v68 ^ 0x88A22104A4888442;
  v70 = (v68 ^ 0x460008100180) & (4 * v67) ^ v67;
  v71 = ((4 * v69) ^ 0x228B9C12B2621718) & v69 ^ (4 * v69) & 0x88A2E704AC9885C4;
  v72 = (v71 ^ 0x828400A0000500) & (16 * v70) ^ v70;
  v73 = ((16 * (v71 ^ 0x882063040C9880C6)) ^ 0x8A2E704AC9885C60) & (v71 ^ 0x882063040C9880C6) ^ (16 * (v71 ^ 0x882063040C9880C6)) & 0x88A2E704AC9885C0;
  v74 = (v73 ^ 0x8822600088880400) & (v72 << 8) ^ v72;
  v75 = (((v73 ^ 0x80870424108186) << 8) ^ 0xA2E704AC9885C600) & (v73 ^ 0x80870424108186) ^ ((v73 ^ 0x80870424108186) << 8) & 0x88A2E704AC988500;
  v76 = v74 ^ 0x88A2E704AC9885C6 ^ (v75 ^ 0x80A2040488800000) & (v74 << 16);
  v77 = (v66 ^ (2
              * ((v76 << 32) & 0x8A2E70400000000 ^ v76 ^ ((v76 << 32) ^ 0x2C9885C600000000) & (((v75 ^ 0x800E300241801C6) << 16) & 0x8A2E70400000000 ^ 0x8A2430400000000 ^ (((v75 ^ 0x800E300241801C6) << 16) ^ 0x6704AC9800000000) & (v75 ^ 0x800E300241801C6))))) >> 8;
  v78 = v65
      + ((v65 - 0x1169993D3BD78268) >> 29)
      - 0xDD5D2EF2C82ED11
      + (((v77 ^ 0xDA4ACF125A7C622DLL) - 0x53D308533D206E91) ^ ((v77 ^ 0x901799FF45733A58) - 0x198E5EBE222F36E4) ^ ((v77 ^ 0x4A8A5C64FEDBEF29) + 0x3CEC64DA66781C6BLL));
  v79 = (v78 ^ 0xE5B2777266B7146DLL) & (2 * (v78 & 0x85BB077A77342689)) ^ v78 & 0x85BB077A77342689;
  v80 = ((2 * (v78 ^ 0xECD67DF642DF157FLL)) ^ 0xD2DAF5186BD667ECLL) & (v78 ^ 0xECD67DF642DF157FLL) ^ (2 * (v78 ^ 0xECD67DF642DF157FLL)) & 0x696D7A8C35EB33F6;
  v81 = v80 ^ 0x29250A8414291012;
  v82 = (v80 ^ 0x48300821C02264) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ 0xA5B5EA30D7ACCFD8) & v81 ^ (4 * v81) & 0x696D7A8C35EB33F4;
  v84 = (v83 ^ 0x21256A0015A803D0) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0x4848108C20433026)) ^ 0x96D7A8C35EB33F60) & (v83 ^ 0x4848108C20433026) ^ (16 * (v83 ^ 0x4848108C20433026)) & 0x696D7A8C35EB33F0;
  v86 = (v85 ^ 0x45288014A33300) & (v84 << 8) ^ v84;
  v87 = (((v85 ^ 0x6928520C21480096) << 8) ^ 0x6D7A8C35EB33F600) & (v85 ^ 0x6928520C21480096) ^ ((v85 ^ 0x6928520C21480096) << 8) & 0x696D7A8C35EB3300;
  v88 = v86 ^ 0x696D7A8C35EB33F6 ^ (v87 ^ 0x6968080421230000) & (v86 << 16);
  v89 = (v78 ^ (2
              * ((v88 << 32) & 0x696D7A8C00000000 ^ v88 ^ ((v88 << 32) ^ 0x35EB33F600000000) & (((v87 ^ 0x5728814C801F6) << 16) & 0x696D7A8C00000000 ^ 0x1614A0400000000 ^ (((v87 ^ 0x5728814C801F6) << 16) ^ 0x7A8C35EB00000000) & (v87 ^ 0x5728814C801F6))))) >> 2;
  v90 = v78
      - 0x30C18258EF16317ELL
      + (((v89 ^ 0xCE68228A3707CF80) - 0x6E139196417BED3BLL) ^ ((v89 ^ 0x72E416D59D0D76D0) + 0x2D605A36148EAB95) ^ ((v89 ^ 0xB9E0D1852D322909) - 0x199B62995B4E0BB2));
  v91 = (v90 ^ 0x1313EA5107AEA8E9) & (2 * (v90 & 0x5B93E09A578F0AE9)) ^ v90 & 0x5B93E09A578F0AE9;
  v92 = ((2 * (v90 ^ 0x1413AB61ACA2B83BLL)) ^ 0x9F0097F7F65B65A4) & (v90 ^ 0x1413AB61ACA2B83BLL) ^ (2 * (v90 ^ 0x1413AB61ACA2B83BLL)) & 0x4F804BFBFB2DB2D2;
  v93 = v92 ^ 0x4080480809249252;
  v94 = (v92 ^ 0xE0002F3F2082080) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0x3E012FEFECB6CB48) & v93 ^ (4 * v93) & 0x4F804BFBFB2DB2D0;
  v96 = (v95 ^ 0xE000BEBE8248240) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0x4180401013093092)) ^ 0xF804BFBFB2DB2D20) & (v95 ^ 0x4180401013093092) ^ (16 * (v95 ^ 0x4180401013093092)) & 0x4F804BFBFB2DB2D0;
  v98 = (v97 ^ 0x48000BBBB2092000) & (v96 << 8) ^ v96;
  v99 = (((v97 ^ 0x7804040492492D2) << 8) ^ 0x804BFBFB2DB2D200) & (v97 ^ 0x7804040492492D2) ^ ((v97 ^ 0x7804040492492D2) << 8) & 0x4F804BFBFB2DB200;
  v100 = v99 ^ 0x4F800000D20D20D2;
  v101 = v98 ^ 0x4F804BFBFB2DB2D2 ^ (v99 ^ 0x4BFB29200000) & (v98 << 16);
  v102 = v90 ^ (2
              * ((v101 << 32) & 0x4F804BFB00000000 ^ v101 ^ ((v101 << 32) ^ 0x7B2DB2D200000000) & ((v100 << 16) & 0x4F804BFB00000000 ^ 0x40000D200000000 ^ ((v100 << 16) ^ 0x4BFBFB2D00000000) & v100)));
  v103 = (((v102 ^ 0x1F6A51FCAEECF0E4) + 0x1D7995AD81E69028) ^ ((v102 ^ 0x13A460F764C236EDLL) + 0x11B7A4A64BC8562FLL) ^ ((v102 ^ 0x8CB326DD493F7B1DLL) - 0x715F1D7399CAE421))
       - ((((v102 >> 26) ^ 0x5502B696EAE3A76ELL) + 0x622E1B9E7F877658) ^ (((v102 >> 26) ^ 0xE7A82FEC2AB596B6)
                                                                          - 0x2F7B7D1B402EB870) ^ (((v102 >> 26) ^ 0xB2AA995ADF13C478) - 0x7A79CBADB588EABELL));
  v104 = ((v103 - 0x1523CB6914C69279) ^ 0x8DFD9545E0CBD93ALL) & (2
                                                                 * ((v103 - 0x1523CB6914C69279) & 0xC9E1A509F2CBD93BLL)) ^ (v103 - 0x1523CB6914C69279) & 0xC9E1A509F2CBD93BLL;
  v105 = ((2 * ((v103 - 0x1523CB6914C69279) ^ 0x1F3ED74704CCD938)) ^ 0xADBEE49DEC0E0006) & ((v103
                                                                                                 - 0x1523CB6914C69279) ^ 0x1F3ED74704CCD938) ^ (2 * ((v103 - 0x1523CB6914C69279) ^ 0x1F3ED74704CCD938)) & 0xD6DF724EF6070002;
  v106 = v105 ^ 0x5241124212010001;
  v107 = (v105 ^ 0x48E200CC4060000) & (4 * v104) ^ v104;
  v108 = ((4 * v106) ^ 0x5B7DC93BD81C000CLL) & v106 ^ (4 * v106) & 0xD6DF724EF6070000;
  v109 = (v108 ^ 0x525D400AD0040000) & (16 * v107) ^ v107;
  v110 = ((16 * (v108 ^ 0x8482324426030003)) ^ 0x6DF724EF60700030) & (v108 ^ 0x8482324426030003) ^ (16 * (v108 ^ 0x8482324426030003)) & 0xD6DF724EF6070000;
  v111 = (v110 ^ 0x44D7204E60000000) & (v109 << 8) ^ v109;
  v112 = (((v110 ^ 0x9208520096070003) << 8) ^ 0xDF724EF607000300) & (v110 ^ 0x9208520096070003) ^ ((v110 ^ 0x9208520096070003) << 8) & 0xD6DF724EF6070000;
  v113 = v111 ^ 0xD6DF724EF6070003 ^ (v112 ^ 0xD652424606000000) & (v111 << 16);
  v114 = v103
       - 0x4B42265F21FAB93DLL
       + ((((v103 - 0x1523CB6914C69279) ^ (2
                                           * ((v113 << 32) & 0x56DF724E00000000 ^ v113 ^ ((v113 << 32) ^ 0x7607000300000000) & (((v112 ^ 0x8D3008F0070003) << 16) & 0x56DF724E00000000 ^ 0x491004800000000 ^ (((v112 ^ 0x8D3008F0070003) << 16) ^ 0x724EF60700000000) & (v112 ^ 0x8D3008F0070003))))) >> 11) ^ 0xFFE6F5D7CDFC2744);
  v115 = v114 + (v114 >> 1) - ((2 * (v114 + (v114 >> 1))) & 0x57434E4607473748) + 0x2BA1A72303A39BA4;
  v116 = (((v115 ^ 0x191558E642EE3B47) - 0x191558E642EE3B47) ^ ((v115 ^ 0xD1CDA63DCAB6BAF9) + 0x2E3259C235494507) ^ ((v115 ^ 0xE37959F88BFB1A1ALL) + 0x1C86A6077404E5E6))
       + 0x25F3FE3B37AA8399;
  v117 = v116 + (v116 >> 28) + ((v116 + (v116 >> 28)) >> 8);
  v118 = v117 - (v117 >> 1);
  LODWORD(v117) = v115 ^ v52;
  LODWORD(v52) = v118 ^ v65;
  v119 = v118
       + 0xA1629B7EBE9CDADLL
       - ((v118 + 0xA1629B7EBE9CDADLL) >> 28)
       - ((v118 + 0xA1629B7EBE9CDADLL - ((v118 + 0xA1629B7EBE9CDADLL) >> 28)) >> 15);
  v120 = ((2 * v119) & 0xFCFCFFBFEFE773FELL) + (v119 ^ 0x7E7E7FDFF7F3B9FFLL);
  v121 = ((v120 - 0x68042A47203300D5) ^ 0xEDA58867AEBE16C5) & (2
                                                                 * ((v120 - 0x68042A47203300D5) & 0xE985AA67283F46D6)) ^ (v120 - 0x68042A47203300D5) & 0xE985AA67283F46D6;
  v122 = ((2 * ((v120 - 0x68042A47203300D5) ^ 0xEEA78CE3FEBA1261)) ^ 0xE444D09AD0AA96ELL) & ((v120
                                                                                                - 0x68042A47203300D5) ^ 0xEEA78CE3FEBA1261) ^ (2 * ((v120 - 0x68042A47203300D5) ^ 0xEEA78CE3FEBA1261)) & 0x7222684D68554B6;
  v123 = v122 ^ 0x122228452855491;
  v124 = (v122 ^ 0x600000080000020) & (4 * v121) ^ v121;
  v125 = ((4 * v123) ^ 0x1C889A135A1552DCLL) & v123 ^ (4 * v123) & 0x7222684D68554B4;
  v126 = (v125 ^ 0x400020052055080) & (16 * v124) ^ v124;
  v127 = ((16 * (v125 ^ 0x322248484800423)) ^ 0x7222684D68554B70) & (v125 ^ 0x322248484800423) ^ (16 * (v125 ^ 0x322248484800423)) & 0x7222684D68554B0;
  v128 = (v127 ^ 0x222200440054000) & (v126 << 8) ^ v126;
  v129 = (((v127 ^ 0x500068096801487) << 8) ^ 0x222684D68554B700) & (v127 ^ 0x500068096801487) ^ ((v127 ^ 0x500068096801487) << 8) & 0x7222684D6855400;
  v130 = v128 ^ 0x7222684D68554B7 ^ (v129 ^ 0x222048484040000) & (v128 << 16);
  v131 = ((v120 - 0x68042A47203300D5) ^ (2
                                         * ((v130 << 32) & 0x722268400000000 ^ v130 ^ ((v130 << 32) ^ 0x568554B700000000) & (((v129 ^ 0x5002200528140B7) << 16) & 0x722268400000000 ^ 0x122200000000000 ^ (((v129 ^ 0x5002200528140B7) << 16) ^ 0x2684D68500000000) & (v129 ^ 0x5002200528140B7))))) >> 1;
  v132 = v120
       - (((v131 ^ 0x4E1936B3543297CDLL) + 0x148025F832B295F7) ^ ((v131 ^ 0xA359E063A54EF539) - 0x63F0CD73C3108FDLL) ^ ((v131 ^ 0x98A021E3B3E69528) - 0x3DC6CD572A9968ECLL))
       + 0x1BCC55972EF695C3;
  v133 = (v132 ^ 0x1AF8F9CFDA01626) & (2 * (v132 & 0x952F0F00FD30A626)) ^ v132 & 0x952F0F00FD30A626;
  v134 = ((2 * (v132 ^ 0x29F1979CDDC1162ALL)) ^ 0x79BD313841E36018) & (v132 ^ 0x29F1979CDDC1162ALL) ^ (2 * (v132 ^ 0x29F1979CDDC1162ALL)) & 0xBCDE989C20F1B00CLL;
  v135 = v134 ^ 0x8442888420109004;
  v136 = (v134 ^ 0x389C100000C12008) & (4 * v133) ^ v133;
  v137 = ((4 * v135) ^ 0xF37A627083C6C030) & v135 ^ (4 * v135) & 0xBCDE989C20F1B00CLL;
  v138 = (v137 ^ 0xB05A001000C08000) & (16 * v136) ^ v136;
  v139 = ((16 * (v137 ^ 0xC84988C2031300CLL)) ^ 0xCDE989C20F1B00C0) & (v137 ^ 0xC84988C2031300CLL) ^ (16 * (v137 ^ 0xC84988C2031300CLL)) & 0xBCDE989C20F1B000;
  v140 = (v139 ^ 0x8CC8888000110000) & (v138 << 8) ^ v138;
  v141 = (((v139 ^ 0x3016101C20E0B00CLL) << 8) ^ 0xDE989C20F1B00C00) & (v139 ^ 0x3016101C20E0B00CLL) ^ ((v139 ^ 0x3016101C20E0B00CLL) << 8) & 0xBCDE989C20F1B000;
  v142 = v140 ^ 0xBCDE989C20F1B00CLL ^ (v141 ^ 0x9C98980020B00000) & (v140 << 16);
  v143 = v132 ^ (2
               * ((v142 << 32) & 0x3CDE989C00000000 ^ v142 ^ ((v142 << 32) ^ 0x20F1B00C00000000) & (((v141 ^ 0x2046009C0041B00CLL) << 16) & 0x3CDE989C00000000 ^ 0x2442980C00000000 ^ (((v141 ^ 0x2046009C0041B00CLL) << 16) ^ 0x189C20F100000000) & (v141 ^ 0x2046009C0041B00CLL))));
  v144 = (v143 ^ 0x6D36A033520AAB43) + ((v143 >> 26) ^ 0xFFFFFFE4B257F32BLL) + 1;
  v145 = ((v144 - (v144 >> 13)) ^ 0x5FFF53CF5FB7FFFELL)
       - 0x1EA01003099206F8
       + ((2 * (v144 - (v144 >> 13))) & 0xBFFEA79EBF6FFFFCLL);
  v146 = (v145 ^ 0x3EA8BB3B859856F2) & (2 * (v145 & 0xBEA0BC33A9DA06FALL)) ^ v145 & 0xBEA0BC33A9DA06FALL;
  v147 = ((2 * (v145 ^ 0x63A9DB3E94BC56B2)) ^ 0xBA12CE1A7ACCA090) & (v145 ^ 0x63A9DB3E94BC56B2) ^ (2 * (v145 ^ 0x63A9DB3E94BC56B2)) & 0xDD09670D3D665048;
  v148 = v147 ^ 0x4509210505225048;
  v149 = (v147 ^ 0x9800400828400000) & (4 * v146) ^ v146;
  v150 = ((4 * v148) ^ 0x74259C34F5994120) & v148 ^ (4 * v148) & 0xDD09670D3D665048;
  v151 = (v150 ^ 0x5401040435004000) & (16 * v149) ^ v149;
  v152 = ((16 * (v150 ^ 0x8908630908661048)) ^ 0xD09670D3D6650480) & (v150 ^ 0x8908630908661048) ^ (16 * (v150 ^ 0x8908630908661048)) & 0xDD09670D3D665040;
  v153 = (v152 ^ 0xD000600114640000) & (v151 << 8) ^ v151;
  v154 = (((v152 ^ 0xD09070C29025048) << 8) ^ 0x9670D3D66504800) & (v152 ^ 0xD09070C29025048) ^ ((v152 ^ 0xD09070C29025048) << 8) & 0xDD09670D3D665000;
  v155 = v153 ^ 0xDD09670D3D665048 ^ (v154 ^ 0x901050D24400000) & (v153 << 16);
  v156 = (v145 ^ (2
                * ((v155 << 32) & 0x5D09670D00000000 ^ v155 ^ ((v155 << 32) ^ 0x3D66504800000000) & (((v154 ^ 0xD408620019261048) << 16) & 0x5D09670D00000000 ^ 0x1800420900000000 ^ (((v154 ^ 0xD408620019261048) << 16) ^ 0x670D3D6600000000) & (v154 ^ 0xD408620019261048))))) >> 6;
  v157 = v145
       - 0x2A2C9534386104AALL
       + (((v156 ^ 0x9C67F0B297D3323ALL) + 0x3C712640E829728BLL) ^ ((v156 ^ 0xA2793802BA0E5B64) + 0x26FEEF0C5F41BD5) ^ ((v156 ^ 0x3EE40378CA9133C7) - 0x610D2A754A948C88));
  v158 = (v157 ^ 0x77E521084D54E47BLL) & (2 * (v157 & 0x47E1342D4984F17ALL)) ^ v157 & 0x47E1342D4984F17ALL;
  v159 = ((2 * (v157 ^ 0xFAE72908CE5426DBLL)) ^ 0x7A0C3A4B0FA1AF42) & (v157 ^ 0xFAE72908CE5426DBLL) ^ (2 * (v157 ^ 0xFAE72908CE5426DBLL)) & 0xBD061D2587D0D7A0;
  v160 = v159 ^ 0x85020524805050A1;
  v161 = (v159 ^ 0x3804100106008700) & (4 * v158) ^ v158;
  v162 = ((4 * v160) ^ 0xF41874961F435E84) & v160 ^ (4 * v160) & 0xBD061D2587D0D7A0;
  v163 = (v162 ^ 0xB400140407405680) & (16 * v161) ^ v161;
  v164 = ((16 * (v162 ^ 0x906092180908121)) ^ 0xD061D2587D0D7A10) & (v162 ^ 0x906092180908121) ^ (16 * (v162 ^ 0x906092180908121)) & 0xBD061D2587D0D7A0;
  v165 = (v164 ^ 0x9000100005005200) & (v163 << 8) ^ v163;
  v166 = (((v164 ^ 0x2D060D2582D085A1) << 8) ^ 0x61D2587D0D7A100) & (v164 ^ 0x2D060D2582D085A1) ^ ((v164 ^ 0x2D060D2582D085A1) << 8) & 0xBD061D2587D0D700;
  v167 = v165 ^ 0xBD061D2587D0D7A1 ^ (v166 ^ 0x404050580D00000) & (v165 << 16);
  v168 = v157 ^ (2
               * ((v167 << 32) & 0x3D061D2500000000 ^ v167 ^ ((v167 << 32) ^ 0x7D0D7A100000000) & (((v166 ^ 0xB9021820070056A1) << 16) & 0x3D061D2500000000 ^ 0x2002182500000000 ^ (((v166 ^ 0xB9021820070056A1) << 16) ^ 0x1D2587D000000000) & (v166 ^ 0xB9021820070056A1))));
  LODWORD(STACK[0x6AA0]) = a2 ^ v117 ^ 0x7145CB20 ^ v168;
  v169 = (v168 ^ 0x1561B81B5A261F6) + ((v168 >> 27) ^ 0xFFFFFFFFD53C8FC9) + 1;
  v170 = v169 + (v169 >> 13) + ((v169 + (v169 >> 13)) >> 6);
  LODWORD(STACK[0x6AB0]) = v2 ^ v52 ^ 0xCBBEA9C4 ^ (v170 - ((2 * v170) & 0x2D44B680) - 1767744704);
  LODWORD(STACK[0x6520]) = LODWORD(STACK[0x6800]) ^ 0x526F2B0B;
  LODWORD(STACK[0x6678]) = ~LODWORD(STACK[0x6548]);
  if (((*(_BYTE *)(STACK[0x6AC0]
                  + ((*(_BYTE *)(STACK[0x6AC0]
                               + ((*(_BYTE *)(STACK[0x6AC0] + ((*(_BYTE *)(STACK[0x6AC0] + 10) + 7) & 0xF)) + 7) & 0xF))
                    + 2) & 0xF))
       + 12) & 0xE) != 0)
    v171 = (*(_BYTE *)(STACK[0x6AC0]
                     + ((*(_BYTE *)(STACK[0x6AC0]
                                  + ((*(_BYTE *)(STACK[0x6AC0] + ((*(_BYTE *)(STACK[0x6AC0] + 10) + 7) & 0xF)) + 7) & 0xF))
                       + 2) & 0xF))
          + 12) & 0xF;
  else
    v171 = 1;
  v172 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 4);
  STACK[0x6A80] = v171 - 1;
  return v172();
}

uint64_t sub_100C63FDC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  uint64_t (*v181)(void);

  v10 = *(unsigned __int8 *)(STACK[0x6AC0] + v4);
  v11 = STACK[0x6A90];
  LODWORD(STACK[0x6A40]) = (LODWORD(STACK[0x6A90]) - 1314690480) & 0x4E5C7977;
  v12 = 2007602165 * (((v10 << ((v11 + 80) & 0x77 ^ 0x77)) & 0x6E) + (v10 ^ 0xFEB8B737)) - 1278518833;
  v13 = ((2 * (v12 ^ 0x4C589343)) ^ 0x4762559A) & (v12 ^ 0x4C589343) ^ (2 * (v12 ^ 0x4C589343)) & 0xA3B12ACC;
  v14 = (v12 ^ 0xCFC9B14F) & (2 * (v12 & 0xEFE9B98E)) ^ v12 & 0xEFE9B98E;
  v15 = v13 ^ 0xA0912A45;
  v16 = (v13 ^ 0x330000D) & (4 * v14) ^ v14;
  v17 = ((4 * v15) ^ 0x8EC4AB34) & v15 ^ (4 * v15) & 0xA3B12ACC;
  v18 = (v17 ^ 0x82802A09) & (16 * v16) ^ v16;
  v19 = ((16 * (v17 ^ 0x213100C9)) ^ 0x3B12ACD0) & (v17 ^ 0x213100C9) ^ (16 * (v17 ^ 0x213100C9)) & 0xA3B12AC0;
  v20 = v18 ^ 0xA3B12ACD ^ (v19 ^ 0x23102800) & (v18 << 8);
  v21 = v12 ^ (2
             * ((v20 << 16) & 0x23B10000 ^ v20 ^ ((v20 << 16) ^ 0x2ACD0000) & (((v19 ^ 0x80A1020D) << 8) & 0x23B10000 ^ 0x2910000 ^ (((v19 ^ 0x80A1020D) << 8) ^ 0xB12A0000) & (v19 ^ 0x80A1020D))));
  v22 = ((v21 ^ v7 ^ 0x351A7F09) - 1641461524) ^ ((v21 ^ v7 ^ 0x94036669) + 1060131212) ^ ((v21 ^ v7 ^ 0x4C90F574)
                                                                                         - 408698217);
  v23 = v4 + 675055487 + v22;
  v24 = ((2 * (v23 & 0x91089C8A)) & 0x12004 | v23 & 0x91089C8A) ^ (2 * (v23 & 0x91089C8A)) & (v23 ^ 0x5841B88C);
  v25 = (2 * (v23 ^ 0x5841B88C)) & (v5 + 6) ^ 0x49492402 ^ ((2 * (v23 ^ 0x5841B88C)) ^ 0x9292480C) & (v23 ^ 0x5841B88C);
  v26 = v24 ^ 0xC8492406 ^ (4 * v24) & v25 ^ ((4 * v24) & 0xC8402400 | 0x1000000);
  v27 = (4 * v25) & (v5 + 4) ^ 0xC8492406 ^ ((4 * v25) ^ 0x25249018) & v25;
  v28 = ((16 * v26) ^ 0x94924060) & v27;
  v29 = (16 * v27) & v5 ^ 0x49492406 ^ ((16 * v27) ^ 0x94924060) & v27;
  v30 = (16 * v26) & v5 ^ v26 ^ v28 ^ LODWORD(STACK[0x414]) ^ (((16 * v26) & v5 ^ v26 ^ v28) << 8) & v5 ^ ((((16 * v26) & v5 ^ v26 ^ v28) << 8) ^ 0x49240600) & v29;
  v31 = (v23 ^ (2
              * ((v30 << 16) & 0x49490000 ^ v30 ^ ((v30 << 16) ^ 0x24060000) & ((v29 << 8) & 0x49490000 ^ 0x490000 ^ ((v29 << 8) ^ 0x49240000) & v29)))) >> 16;
  v32 = v22 - (((v31 ^ 0xC4837865) + 813352902) ^ ((v31 ^ 0x42DB69F3) - 1239230892) ^ ((v31 ^ 0x8658120C) + 1923198381));
  v33 = v4 - 422903264 + v32;
  v34 = (v33 ^ 0xE76B9C33) & (2 * (v33 & 0xC773DE24)) ^ v33 & 0xC773DE24;
  v35 = ((2 * (v33 ^ 0x632B8C7B)) ^ 0x48B0A4BE) & (v33 ^ 0x632B8C7B) ^ (2 * (v33 ^ 0x632B8C7B)) & 0xA458525E;
  v36 = ((4 * (v35 ^ 0xA4485241)) ^ 0x9161497C) & (v35 ^ 0xA4485241) ^ (4 * (v35 ^ 0xA4485241)) & 0xA458525C;
  v37 = (v36 ^ 0x80404043) & (16 * ((v35 ^ 0x80100251) & (4 * v34) ^ v34)) ^ (v35 ^ 0x80100251) & (4 * v34) ^ v34;
  v38 = ((16 * (v36 ^ 0x24181203)) ^ 0x458525F0) & (v36 ^ 0x24181203) ^ (16 * (v36 ^ 0x24181203)) & 0xA4585250;
  v39 = v37 ^ 0xA458525F ^ (v38 ^ 0x400000F) & (v37 << 8);
  v40 = (v33 ^ (2
              * ((v39 << 16) & 0x24580000 ^ v39 ^ ((v39 << 16) ^ 0x525F0000) & (((v38 ^ 0xA058520F) << 8) & 0xA4580000 ^ 0x24080000 ^ (((v38 ^ 0xA058520F) << 8) ^ 0x58520000) & (v38 ^ 0xA058520F))))) >> 8;
  v41 = v4
      + v32
      - (((v40 ^ 0x89358139) + 1492802039) ^ ((v40 ^ 0xAD985B9B) + 2086110037) ^ ((v40 ^ 0x2422A9D8) - 168988392));
  v42 = v21 ^ 0x90CAF7AC;
  v43 = v41 - 1737867773;
  v44 = ((v41 - 1737867773) ^ 0xE7D109E7) & (2 * ((v41 - 1737867773) & STACK[0x418])) ^ (v41 - 1737867773) & STACK[0x418];
  v45 = ((2 * ((v41 - 1737867773) ^ 0x6FF3824D)) ^ 0x11CD9F74) & ((v41 - 1737867773) ^ 0x6FF3824D) ^ (2 * ((v41 - 1737867773) ^ 0x6FF3824D)) & 0x88E6CFBA;
  v46 = v45 ^ 0x8822408A;
  v47 = (v45 ^ 0xC40F32) & (4 * v44) ^ v44;
  v48 = ((4 * v46) ^ 0x239B3EE8) & v46 ^ (4 * v46) & 0x88E6CFB8;
  v49 = v48 ^ 0x8864C112;
  v50 = (v48 ^ 0x820EA2) & (16 * v47) ^ v47;
  v51 = ((16 * v49) ^ 0x8E6CFBA0) & v49 ^ (16 * v49) & 0x88E6CFB0;
  v52 = v51 ^ 0x82041A;
  v53 = v50 ^ 0x88E6CFBA;
  v54 = v41 - 94473437;
  v55 = ((v41 - 94473437) ^ 0xAE28D3EC) & (2 * ((v41 - 94473437) & 0xCE2A9BEE)) ^ (v41 - 94473437) & 0xCE2A9BEE;
  v56 = (v51 ^ 0x8864CB1A) & (v50 << 8);
  v57 = ((2 * ((v41 - 94473437) ^ 0xBE78F330)) ^ 0xE0A4D1BC) & ((v41 - 94473437) ^ 0xBE78F330) ^ (2
                                                                                                * ((v41 - 94473437) ^ 0xBE78F330)) & 0x705268DE;
  v58 = v57 ^ 0x10522842;
  v59 = (v57 ^ 0x6000409A) & (4 * v55) ^ v55;
  v60 = ((4 * v58) ^ 0xC149A378) & v58 ^ (4 * v58) & 0x705268DC;
  v61 = v60 ^ 0x30124886;
  v62 = (v60 ^ 0x40402046) & (16 * v59) ^ v59;
  v63 = 16 * (v60 ^ 0x30124886);
  v64 = v53 ^ v56;
  v65 = (v63 ^ 0x5268DE0) & v61 ^ v63 & 0x705268D0;
  v66 = v62 ^ 0x705268DE ^ (v65 ^ 0x2081E) & (v62 << 8);
  v41 += 1130886714;
  v67 = (v41 ^ 0x8D0013EF) & (2 * (v41 & 0xCE2A9BEE)) ^ v41 & 0xCE2A9BEE;
  v68 = ((2 * (v41 ^ LODWORD(STACK[0x41C]))) ^ 0x96F53182) & (v41 ^ LODWORD(STACK[0x41C])) ^ (2
                                                                                            * (v41 ^ LODWORD(STACK[0x41C]))) & 0x4B7A98C0;
  v69 = v68 ^ LODWORD(STACK[0x428]);
  v70 = (v68 ^ 0x701080) & (4 * v67) ^ v67;
  v71 = ((4 * v69) ^ LODWORD(STACK[0x420])) & v69 ^ (4 * v69) & 0x4B7A98C0;
  v72 = v71 ^ 0x421098C1;
  v73 = (v71 ^ 0x96A0000) & (16 * v70) ^ v70;
  v74 = ((16 * v72) ^ 0xB7A98C10) & v72 ^ (16 * v72) & 0x4B7A98C0;
  v75 = ((v64 << 16) ^ 0x4FBA0000) & ((v52 << 8) & 0x88E60000 ^ 0x8200000 ^ ((v52 << 8) ^ 0x66CF0000) & v52);
  v76 = v41 ^ (2
             * (((v73 ^ 0x4B7A98C1 ^ (v74 ^ 0x3288800) & (v73 << 8)) << 16) & 0x4B7A0000 ^ v73 ^ 0x4B7A98C1 ^ (v74 ^ 0x3288800) & (v73 << 8) ^ (((v73 ^ 0x4B7A98C1 ^ (v74 ^ 0x3288800) & (v73 << 8)) << 16) ^ 0x18C10000) & (((v74 ^ LODWORD(STACK[0x424])) << 8) & 0x4B7A0000 ^ 0x1620000 ^ (((v74 ^ LODWORD(STACK[0x424])) << 8) ^ 0x7A980000) & (v74 ^ LODWORD(STACK[0x424]))))) ^ 0xB6764534;
  v77 = (v64 << 16) & 0x8E60000 ^ v64;
  v78 = ((v76 ^ v42 ^ 0xEA2DD02C) + 366096340) ^ ((v76 ^ v42 ^ 0xDB1EDE63) + 618733981) ^ ((v76 ^ v42 ^ 0xB259FAAF)
                                                                                         + 1302725969);
  v79 = ((v66 << 16) ^ 0x68DE0000) & (((v65 ^ 0x7050601E) << 8) & 0x70520000 ^ 0x20120000 ^ (((v65 ^ 0x7050601E) << 8) ^ 0x52680000) & (v65 ^ 0x7050601E));
  v80 = v4 - 1580155157 + v78;
  v81 = ((2 * (v80 ^ 0x22E0D984)) ^ 0x86F5D8E2) & (v80 ^ 0x22E0D984) ^ (2 * (v80 ^ 0x22E0D984)) & 0xC37AEC70;
  v82 = (v80 ^ 0xE1D0B1E4) & (2 * (v80 & STACK[0x42C])) ^ v80 & STACK[0x42C];
  v83 = v81 ^ 0x410A2411;
  v84 = (v81 ^ 0xC372C860) & (4 * v82) ^ v82;
  v85 = ((4 * v83) ^ 0xDEBB1C4) & v83 ^ (4 * v83) & 0xC37AEC70;
  v86 = ((16 * (v85 ^ 0xC2104C31)) ^ 0x37AEC710) & (v85 ^ 0xC2104C31) ^ (16 * (v85 ^ 0xC2104C31)) & 0xC37AEC70;
  v87 = (v85 ^ LODWORD(STACK[0x430])) & (16 * v84) ^ v84;
  v88 = v87 ^ 0xC37AEC71 ^ (v86 ^ 0x32AC400) & (v87 << 8);
  v89 = (v66 << 16) & 0x70520000 ^ v66;
  v90 = (v80 ^ (2
              * ((v88 << 16) & 0x437A0000 ^ v88 ^ ((v88 << 16) ^ 0x6C710000) & (((v86 ^ 0xC0502861) << 8) & 0x437A0000 ^ 0x1120000 ^ (((v86 ^ 0xC0502861) << 8) ^ 0x7AEC0000) & (v86 ^ 0xC0502861))))) >> 16;
  v91 = v77 ^ v75;
  v92 = v78 - (((v90 ^ 0x9D18F6D5) + 284634931) ^ ((v90 ^ 0x10A4DFA3) - 1656027579) ^ ((v90 ^ 0x8DBCCEF9) + 5445407));
  v93 = v4 - 1208078416 + v92;
  v94 = (v93 ^ 0x5C5CCB5C) & (2 * (v93 & 0x595C0399)) ^ v93 & 0x595C0399;
  v95 = ((2 * (v93 ^ 0x5E6CC86C)) ^ 0xE6197EA) & (v93 ^ 0x5E6CC86C) ^ (2 * (v93 ^ 0x5E6CC86C)) & 0x730CBF4;
  v96 = ((4 * (v95 ^ 0x1104815)) ^ 0x1CC32FD4) & (v95 ^ 0x1104815) ^ (4 * (v95 ^ 0x1104815)) & 0x730CBF4;
  v97 = (v96 ^ 0x4000BD1) & (16 * ((v95 ^ 0x62042F1) & (4 * v94) ^ v94)) ^ (v95 ^ 0x62042F1) & (4 * v94) ^ v94;
  v98 = ((16 * (v96 ^ 0x330C021)) ^ 0x730CBF50) & (v96 ^ 0x330C021) ^ (16 * (v96 ^ 0x330C021)) & 0x730CBF0;
  v99 = v89 ^ v79;
  v100 = v97 ^ 0x730CBF5 ^ (v98 ^ 0x3008BA5) & (v97 << 8);
  v101 = (v93 ^ (2
               * ((v100 << 16) & 0x7300000 ^ v100 ^ ((v100 << 16) ^ 0x4BF50000) & (((v98 ^ 0x43040A5) << 8) & 0x7300000 ^ 0x7300000 ^ (((v98 ^ 0x43040A5) << 8) ^ 0x30CB0000) & (v98 ^ 0x43040A5u))))) >> 8;
  v102 = v4
       + v92
       - (((v101 ^ 0xD2AE3E15) - 1395956309) ^ ((v101 ^ 0x93F4BF19) - 309205849) ^ ((v101 ^ 0x410BDC98) + 1064208168));
  v103 = v102 - 768302679;
  v104 = ((v102 - 768302679) ^ 0x3C51D7ED) & (2 * ((v102 - 768302679) & 0xBD5997CC)) ^ (v102 - 768302679) & 0xBD5997CC;
  v105 = ((2 * ((v102 - 768302679) ^ 0x6652FC65)) ^ LODWORD(STACK[0x434])) & ((v102 - 768302679) ^ 0x6652FC65) ^ (2 * ((v102 - 768302679) ^ 0x6652FC65)) & 0xDB0B6BA8;
  v106 = v105 ^ 0x490928A9;
  v107 = (v105 ^ 0x92024300) & (4 * v104) ^ v104;
  v108 = ((4 * v106) ^ 0x6C2DAEA4) & v106 ^ (4 * v106) & 0xDB0B6BA8;
  v109 = (v108 ^ 0x48092AA9) & (16 * v107) ^ v107;
  v110 = ((16 * (v108 ^ 0x93024109)) ^ 0xB0B6BA90) & (v108 ^ 0x93024109) ^ (16 * (v108 ^ 0x93024109)) & 0xDB0B6BA0;
  v111 = v110 ^ 0x4B094129;
  v112 = v110 ^ 0x90022A29;
  v113 = v109 ^ 0xDB0B6BA9;
  v114 = v102 + 1575259380;
  v115 = v112 & (v109 << 8);
  v116 = (v114 ^ 0x78330F16) & (2 * (v114 & 0x7AB32F98)) ^ v114 & 0x7AB32F98;
  v117 = ((2 * (v114 ^ 0xA8130D06)) ^ 0xA540453C) & (v114 ^ 0xA8130D06) ^ (2 * (v114 ^ 0xA8130D06)) & v6;
  v118 = (v117 ^ 0x80200002) & (4 * v116) ^ v116;
  v119 = ((4 * (v117 ^ 0x52A02282)) ^ 0x4A808A78) & (v117 ^ 0x52A02282) ^ (4 * (v117 ^ 0x52A02282)) & (v6 - 2);
  v120 = v113 ^ v115;
  v121 = (v119 ^ 0x42800206) & (16 * v118) ^ v118;
  v122 = ((16 * (v119 ^ 0x90202086)) ^ 0x2A0229E0) & (v119 ^ 0x90202086) ^ (16 * (v119 ^ 0x90202086)) & (v6 - 14);
  v123 = v122 ^ 0xD0A0021E;
  v124 = v121 ^ v6 ^ (v122 ^ 0x200201E) & (v121 << 8);
  v125 = (v123 << 8) & v8;
  v102 -= 1494347765;
  v126 = ((v123 << 8) ^ 0xA0220000) & v123;
  v127 = (v102 ^ 0x7AA30F94) & (2 * (v102 & 0x7AB32F98)) ^ v102 & 0x7AB32F98;
  v128 = ((2 * (v102 ^ 0x4BA150A4)) ^ 0x6224FE78) & (v102 ^ 0x4BA150A4) ^ (2 * (v102 ^ 0x4BA150A4)) & 0x31127F3C;
  v129 = (v128 ^ 0x20027F24) & (4 * v127) ^ v127;
  v130 = ((4 * (v128 ^ 0x11120104)) ^ 0xC449FCF0) & (v128 ^ 0x11120104) ^ (4 * (v128 ^ 0x11120104)) & 0x31127F3C;
  v131 = v130 ^ 0x3112030C;
  v132 = v130 ^ 0x7C20;
  v133 = v125 ^ 0x52800000 ^ v126;
  v134 = v132 & (16 * v129) ^ v129;
  v135 = ((16 * v131) ^ 0x1127F3C0) & v131 ^ (16 * v131) & 0x31127F30;
  v136 = v134 ^ 0x31127F3C ^ (v135 ^ 0x1102733C) & (v134 << 8);
  v137 = v102 ^ 0x8C328268 ^ (2
                            * ((v136 << 16) & 0x31120000 ^ v136 ^ ((v136 << 16) ^ 0x7F3C0000) & (((v135 ^ 0x20100C3C) << 8) & 0x31120000 ^ 0x21000000 ^ (((v135 ^ 0x20100C3C) << 8) ^ 0x127F0000) & (v135 ^ 0x20100C3C))));
  v138 = ((v137 ^ v42 ^ 0xA96EDC5) - 177663429) ^ ((v137 ^ v42 ^ 0x19FD280E) - 436021262) ^ ((v137 ^ v42 ^ 0x98AD8DFB)
                                                                                           + 1733456389);
  v139 = v4 - 206445530 + v138;
  v140 = (2 * (v139 & 0x9814640A ^ v9)) & 0x20080004 ^ v139 & 0x9814640A ^ v9 ^ ((2 * (v139 & 0x9814640A ^ v9)) ^ 0xCB122808) & (v139 ^ 0xFD9D700E);
  v141 = (2 * (v139 ^ 0xFD9D700E)) & v9 ^ 0x24891404 ^ ((2 * (v139 ^ 0xFD9D700E)) ^ 0xCB122808) & (v139 ^ 0xFD9D700E);
  v142 = (4 * v140) & v9 ^ v140 ^ ((4 * v140) ^ 0x96245010) & v141;
  v143 = (4 * v141) & v9 ^ 0x61890404 ^ ((4 * v141) ^ 0x96245010) & v141;
  v144 = (16 * v142) & (v9 - 4) ^ v142 ^ ((16 * v142) ^ 0x18904040) & v143;
  v145 = (16 * v143) & (v9 - 4) ^ 0x25081404 ^ ((16 * v143) ^ 0x58914040) & v143;
  v146 = v144 ^ 0x5801400 ^ (v144 << 8) & (v9 - 4) ^ ((v144 << 8) ^ 0x9040400) & v145;
  v147 = (v139 ^ (2
                * ((v146 << 16) & 0x65890000 ^ v146 ^ ((v146 << 16) ^ 0x14040000) & ((v145 << 8) & 0x65890000 ^ 0x64890000 ^ ((v145 << 8) ^ 0x9140000) & v145)))) >> 16;
  v148 = v138
       - (((v147 ^ 0xC688E171) - 439033831) ^ ((v147 ^ 0x90D44248) - 1282915550) ^ ((v147 ^ 0x565CF83F) + 1962998103));
  v149 = v4 - 578863147 + v148;
  v150 = (v120 << 16) & 0x5B0B0000 ^ v120 ^ ((v120 << 16) ^ 0x6BA90000) & ((v111 << 8) & 0x5B0B0000 ^ 0x50000000 ^ ((v111 << 8) ^ 0xB6B0000) & v111);
  v151 = (v149 ^ 0x890A428A) & (2 * (v149 & 0xD1A362CB)) ^ v149 & 0xD1A362CB;
  v152 = ((2 * (v149 ^ 0xAA0E421C)) ^ 0xF75A41AE) & (v149 ^ 0xAA0E421C) ^ (2 * (v149 ^ 0xAA0E421C)) & (a4 + 214);
  v153 = (v152 ^ 0x43080004) & (4 * v151) ^ v151;
  v154 = ((4 * (v152 ^ 0x8A52051)) ^ 0xEEB4835C) & (v152 ^ 0x8A52051) ^ (4 * (v152 ^ 0x8A52051)) & (a4 + 212);
  v155 = v153 ^ (a4 + 215) ^ (v154 ^ 0x6AA40050) & (16 * v153);
  v156 = (16 * (v154 ^ 0x11092083)) & (a4 + 208) ^ 0x412D2087 ^ ((16 * (v154 ^ 0x11092083)) ^ 0xBAD20D70) & (v154 ^ 0x11092083);
  v157 = (v155 << 8) & a4 ^ v155 ^ ((v155 << 8) ^ 0xAD20D700) & v156;
  v158 = (v124 << 16) & 0x52A00000 ^ v124 ^ ((v124 << 16) ^ 0x229E0000) & v133;
  v159 = (v149 ^ (2
                * ((v157 << 16) & 0x7BAD0000 ^ v157 ^ ((v157 << 16) ^ 0x20D70000) & ((v156 << 8) & 0x7BAD0000 ^ 0x528D0000 ^ ((v156 << 8) ^ 0x2D200000) & v156)))) >> 8;
  v160 = v4
       + v148
       - (((v159 ^ 0xD1FDC850) - 931818810) ^ ((v159 ^ 0xCCE17925) - 714529871) ^ ((v159 ^ LODWORD(STACK[0x438]))
                                                                                 + 77682884));
  v161 = ((v160 - 1470555557) ^ 0x36C665FF) & (2 * ((v160 - 1470555557) & 0x208771FC)) ^ (v160 - 1470555557) & 0x208771FC;
  v162 = ((2 * ((v160 - 1470555557) ^ 0x76C887DF)) ^ LODWORD(STACK[0x43C])) & ((v160 - 1470555557) ^ 0x76C887DF) ^ (2 * ((v160 - 1470555557) ^ 0x76C887DF)) & 0x564FF622;
  v163 = v162 ^ 0x52401221;
  v164 = (v162 ^ 0x544FD400) & (4 * v161) ^ v161;
  v165 = ((4 * v163) ^ 0x593FD88C) & v163 ^ (4 * v163) & 0x564FF620;
  v166 = (v165 ^ 0x500FD000) & (16 * v164) ^ v164;
  v167 = ((16 * (v165 ^ LODWORD(STACK[0x440]))) ^ 0x64FF6230) & (v165 ^ LODWORD(STACK[0x440])) ^ (16
                                                                                                * (v165 ^ LODWORD(STACK[0x440]))) & 0x564FF620;
  v168 = v167 ^ 0x12009403;
  v169 = LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x444]) ^ v43 ^ (2 * v91) ^ v103 ^ (2 * v150) ^ (v160 - 1470555557);
  v170 = v166 ^ 0x564FF623 ^ (v167 ^ 0x444F6200) & (v166 << 8);
  v171 = ((v160 - 790942858) ^ 0x60AEE3F6) & (2 * ((v160 - 790942858) & 0x410EE3F8)) ^ (v160 - 790942858) & 0x410EE3F8;
  v172 = ((2 * ((v160 - 790942858) ^ 0xE2B3A596)) ^ 0x477A8CDC) & ((v160 - 790942858) ^ 0xE2B3A596) ^ (2 * ((v160 - 790942858) ^ 0xE2B3A596)) & 0xA3BD466E;
  v173 = (((v167 ^ 0x12009403) << 8) ^ 0x4FF60000) & (v167 ^ 0x12009403);
  v174 = v172 ^ 0xA0854222;
  v175 = (v172 ^ 0xA0B84440) & (4 * v171) ^ v171;
  v176 = ((4 * v174) ^ LODWORD(STACK[0x448])) & v174 ^ (4 * v174) & 0xA3BD466C;
  v177 = (v176 ^ 0x82B50020) & (16 * v175) ^ v175;
  v178 = ((16 * (v176 ^ 0x21084646)) ^ 0x3BD466E0) & (v176 ^ 0x21084646) ^ (16 * (v176 ^ 0x21084646)) & 0xA3BD4660;
  v179 = v177 ^ 0xA3BD466E ^ (v178 ^ 0x23944600) & (v177 << 8);
  v180 = LODWORD(STACK[0x6AB0]) ^ v54 ^ (2 * v99);
  LODWORD(STACK[0x6AA0]) = v169 ^ (2
                                 * ((v170 << 16) & 0x564F0000 ^ v170 ^ ((v170 << 16) ^ 0x76230000) & ((v168 << 8) & 0x564F0000 ^ 0x10090000 ^ v173)));
  v181 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((28 * (STACK[0x6A80] != v4)) ^ v11)) - 4);
  LODWORD(STACK[0x6AB0]) = v180 ^ v114 ^ (2 * v158) ^ (v160 - 790942858) ^ (2
                                                                          * ((v179 << 16) & 0x23BD0000 ^ v179 ^ ((v179 << 16) ^ 0x466E0000) & (((v178 ^ 0x8029000E) << 8) & 0x23BD0000 ^ 0x2B90000 ^ (((v178 ^ 0x8029000E) << 8) ^ 0x3D460000) & (v178 ^ 0x8029000E)))) ^ 0x36F54FD2;
  return v181();
}

uint64_t sub_100C657FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = LODWORD(STACK[0x6A40]) + 14341;
  LODWORD(STACK[0x66F8]) = LODWORD(STACK[0x64A0]) ^ 0x1F052F73;
  LODWORD(STACK[0x68E0]) = LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6A70]) ^ 0x1B6752BE;
  v8 = STACK[0x6AD8];
  LODWORD(STACK[0x6940]) = v7;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * v7);
  STACK[0x6A30] = -406874491;
  STACK[0x6A20] = -88342740;
  STACK[0x69F0] = 15;
  STACK[0x6A10] = 61834806;
  STACK[0x6A60] = 1723504920;
  STACK[0x6A80] = 759442092;
  STACK[0x6A70] = 390033913;
  STACK[0x6A00] = 2063918795;
  LODWORD(STACK[0x6A90]) = v6;
  return v9(a1, a2, a3, 1784819514, 1422745925, a6, -982427435, -265214780);
}

uint64_t sub_100C65954@<X0>(int a1@<W3>, int a2@<W4>, unint64_t a3@<X6>, unint64_t a4@<X7>, unint64_t a5@<X8>)
{
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  unint64_t v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  unint64_t v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  unint64_t v186;
  int v187;
  unint64_t v188;
  uint64_t (*v189)(void);

  STACK[0x6980] = v8;
  STACK[0x6990] = v13;
  STACK[0x69A0] = v6;
  STACK[0x69B0] = a5;
  STACK[0x69C0] = v7;
  STACK[0x69D0] = a4;
  STACK[0x69E0] = a3;
  v14 = *(unsigned __int8 *)(a5 + v11);
  v15 = LODWORD(STACK[0x6A40]) + 1205;
  LODWORD(STACK[0x6A50]) = v15;
  v16 = 2007602165 * ((v14 ^ 0xFFFFF9DF) - 1941946865 + ((v15 ^ 0x1495) & (2 * v14))) - 1302909560;
  v17 = ((2 * (v16 ^ 0x25C17EDB)) ^ 0x6DBED2) & (v16 ^ 0x25C17EDB) ^ (2 * (v16 ^ 0x25C17EDB)) & 0x8036DF68;
  v18 = v17 ^ 0x80124129;
  v19 = (v16 ^ 0x25E73DBB) & (2 * (v16 & 0xA5F7A1B2)) ^ v16 & 0xA5F7A1B2;
  v20 = (v17 ^ LODWORD(STACK[0x44C])) & (4 * v19) ^ v19;
  v21 = ((4 * v18) ^ 0xDB7DA4) & v18 ^ (4 * v18) & 0x8036DF68;
  v22 = (v21 ^ 0x125D29) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x80248249)) ^ 0x36DF690) & (v21 ^ 0x80248249) ^ (16 * (v21 ^ 0x80248249)) & 0x8036DF60;
  v24 = v22 ^ 0x8036DF69 ^ (v23 ^ 0x24D669) & (v22 << 8);
  v25 = v16 ^ (2
             * ((v24 << 16) & 0x360000 ^ v24 ^ ((v24 << 16) ^ 0x5F690000) & (((v23 ^ 0x80120969) << 8) & 0x360000 ^ (((v23 ^ 0x80120969) << 8) ^ 0x36DF0000) & (v23 ^ 0x80120969) ^ 0x200000)));
  v26 = ((v25 ^ v5 ^ 0x3C7A2597) + 724035267) ^ ((v25 ^ v5 ^ LODWORD(STACK[0x450])) - 705785163) ^ ((v25 ^ v5 ^ 0x5B136B16)
                                                                                                  + 1280223300);
  v27 = v11 + a3 + v26;
  v28 = (v27 ^ 0x8046C8E5) & (2 * (v27 & 0x8806CAF5)) ^ v27 & 0x8806CAF5;
  v29 = ((2 * (v27 ^ 0x8047596D)) ^ 0x10832730) & (v27 ^ 0x8047596D) ^ (2 * (v27 ^ 0x8047596D)) & 0x8419398;
  v30 = v29 ^ 0x8409088;
  v31 = (v29 ^ LODWORD(STACK[0x454])) & (4 * v28) ^ v28;
  v32 = ((4 * v30) ^ 0x21064E60) & v30 ^ (4 * v30) & 0x8419398;
  v33 = (v32 ^ 0x200) & (16 * v31) ^ v31;
  v34 = ((16 * (v32 ^ 0x8419198)) ^ 0x84193980) & (v32 ^ 0x8419198) ^ (16 * (v32 ^ 0x8419198)) & 0x8419390;
  v35 = v33 ^ 0x8419398 ^ (v34 ^ 0x11118) & (v33 << 8);
  v36 = (v27 ^ (2
              * ((v35 << 16) & 0x8410000 ^ v35 ^ ((v35 << 16) ^ 0x13980000) & (((v34 ^ 0x8408218) << 8) & 0x8410000 ^ 0x8400000 ^ (((v34 ^ 0x8408218) << 8) ^ 0x41930000) & (v34 ^ 0x8408218))))) >> 16;
  v37 = v26 - (((v36 ^ 0x4C3A3D02) - 334219771) ^ ((v36 ^ 0xEF8A7F0B) + 1336177678) ^ ((v36 ^ 0xA3B0DA8C) + 60739979));
  v38 = v11 + a4 + v37;
  v39 = (v38 ^ 0xF8659201) & (2 * (v38 & 0xFD75928A)) ^ v38 & 0xFD75928A;
  v40 = ((2 * (v38 ^ 0x82049205)) ^ 0xFEE2011E) & (v38 ^ 0x82049205) ^ (2 * (v38 ^ 0x82049205)) & 0x7F71008E;
  v41 = ((4 * (v40 ^ 0x1110081)) ^ 0xFDC4023C) & (v40 ^ 0x1110081) ^ (4 * (v40 ^ 0x1110081)) & 0x7F71008C;
  v42 = (v40 ^ 0x7E600008) & (4 * v39) ^ v39 ^ 0x7F71008F ^ (v41 ^ 0x7D400003) & (16
                                                                                * ((v40 ^ 0x7E600008) & (4 * v39) ^ v39));
  v43 = (16 * (v41 ^ 0x2310083)) & 0x7F710080 ^ 0x861000F ^ ((16 * (v41 ^ 0x2310083)) ^ 0xF71008F0) & (v41 ^ 0x2310083);
  v44 = (v42 << 8) & 0x7F710000 ^ v42 ^ ((v42 << 8) ^ 0x71008F00) & v43;
  v45 = (v38 ^ (2
              * ((v44 << 16) & 0x7F710000 ^ v44 ^ ((v44 << 16) ^ 0x8F0000) & ((v43 << 8) & 0x7F710000 ^ 0xE710000 ^ ((v43 << 8) ^ 0x71000000) & v43)))) >> 8;
  v46 = v25 ^ 0x6FC183BB;
  v47 = v37 - (((v45 ^ 0x8DB1AC60) + 399206124) ^ ((v45 ^ 0x3BF2189) - 1715082493) ^ ((v45 ^ 0x8EEF187A) + 345363186));
  v48 = v11 + a2 + v47;
  v49 = (v48 ^ 0xBB70A189) & (2 * (v48 & 0x3374B522)) ^ v48 & 0x3374B522;
  v50 = ((2 * (v48 ^ 0xDD30818D)) ^ 0xDC88695E) & (v48 ^ 0xDD30818D) ^ (2 * (v48 ^ 0xDD30818D)) & 0xEE4434AE;
  v51 = v50 ^ 0x224414A1;
  v52 = (v50 ^ 0xCC002008) & (4 * v49) ^ v49;
  v53 = ((4 * v51) ^ 0xB910D2BC) & v51 ^ (4 * v51) & 0xEE4434AC;
  v54 = (v53 ^ 0xA80010A3) & (16 * v52) ^ v52;
  v55 = ((16 * (v53 ^ 0x46442403)) ^ 0xE4434AF0) & (v53 ^ 0x46442403) ^ (16 * (v53 ^ 0x46442403)) & 0xEE4434A0;
  v56 = v55 ^ LODWORD(STACK[0x458]);
  v57 = v54 ^ 0xEE4434AF;
  v58 = v11 + a1 + v47;
  v59 = (v55 ^ 0xE4400000) & (v54 << 8);
  v60 = (v58 ^ 0x44ED6833) & (2 * (v58 & 0x66E96A44)) ^ v58 & 0x66E96A44;
  v61 = ((2 * (v58 ^ 0x41BDECBB)) ^ 0x4EA90DFE) & (v58 ^ 0x41BDECBB) ^ (2 * (v58 ^ 0x41BDECBB)) & 0x275486FE;
  v62 = v61 ^ 0x21548201;
  v63 = (v61 ^ 0x6100030) & (4 * v60) ^ v60;
  v64 = v57 ^ v59;
  v65 = ((4 * v62) ^ 0x9D521BFC) & v62 ^ (4 * v62) & 0x275486FC;
  v66 = v65 ^ 0x22048403;
  v67 = (v65 ^ LODWORD(STACK[0x45C])) & (16 * v63) ^ v63;
  v68 = ((16 * v66) ^ 0x75486FF0) & v66 ^ (16 * v66) & 0x275486F0;
  v69 = v67 ^ 0x275486FF ^ (v68 ^ 0x2540060F) & (v67 << 8);
  v70 = v11 + v7 + v47;
  v71 = ((v68 ^ LODWORD(STACK[0x460])) << 8) & 0x27540000 ^ 0x23500000 ^ (((v68 ^ LODWORD(STACK[0x460])) << 8) ^ 0x54860000) & (v68 ^ LODWORD(STACK[0x460]));
  v72 = (v70 ^ 0x44E16B01) & (2 * (v70 & 0x66E96A44)) ^ v70 & 0x66E96A44;
  v73 = ((2 * (v70 ^ 0xC123BF81)) ^ 0x4F95AB8A) & (v70 ^ 0xC123BF81) ^ (2 * (v70 ^ 0xC123BF81)) & 0xA7CAD5C4;
  v74 = ((4 * (v73 ^ 0xA04A5445)) ^ 0x9F2B5714) & (v73 ^ 0xA04A5445) ^ (4 * (v73 ^ 0xA04A5445)) & 0xA7CAD5C4;
  v75 = v74 ^ 0x20C080C1;
  v76 = (v74 ^ 0x870A5500) & (16 * ((v73 ^ 0x7808545) & (4 * v72) ^ v72)) ^ (v73 ^ 0x7808545) & (4 * v72) ^ v72;
  v77 = ((16 * v75) ^ 0x7CAD5C50) & v75 ^ (16 * v75) & 0xA7CAD5C0;
  v78 = ((v64 << 16) ^ 0x34AF0000) & ((v56 << 8) & 0x6E440000 ^ 0x2A400000 ^ ((v56 << 8) ^ 0x44340000) & v56);
  v79 = v76 ^ 0xA7CAD5C5 ^ (v77 ^ 0x24885400) & (v76 << 8);
  v80 = v70 ^ (2
             * ((v79 << 16) & 0x27CA0000 ^ v79 ^ ((v79 << 16) ^ 0x55C50000) & (((v77 ^ 0x83428185) << 8) & 0x27CA0000 ^ 0x250A0000 ^ (((v77 ^ 0x83428185) << 8) ^ 0x4AD50000) & (v77 ^ 0x83428185)))) ^ 0xF8C10FC;
  LODWORD(STACK[0x6960]) = v80;
  v81 = ((v80 ^ v46 ^ 0xA7A87505) + 1482132219) ^ ((v80 ^ v46 ^ 0xDCFEAC09) + 587289591) ^ ((v80 ^ v46 ^ 0x9C3D94E5)
                                                                                          + 1673685787);
  v82 = v11 + v6 + v81;
  v83 = (v82 ^ 0xF5E858CA) & (2 * (v82 & STACK[0x464])) ^ v82 & STACK[0x464];
  v84 = ((2 * (v82 ^ 0xB5286C9E)) ^ 0xA9826CEA) & (v82 ^ 0xB5286C9E) ^ (2 * (v82 ^ 0xB5286C9E)) & 0x54C13674;
  v85 = ((4 * (v84 ^ 0x54411215)) ^ 0x5304D9D4) & (v84 ^ 0x54411215) ^ (4 * (v84 ^ 0x54411215)) & 0x54C13674;
  v86 = (v84 ^ LODWORD(STACK[0x468])) & (4 * v83) ^ v83;
  v87 = ((16 * (v85 ^ 0x4C12621)) ^ 0x4C136750) & (v85 ^ 0x4C12621) ^ (16 * (v85 ^ 0x4C12621)) & 0x54C13670;
  v88 = (v85 ^ 0x50001051) & (16 * v86) ^ v86 ^ 0x54C13675 ^ (v87 ^ 0x44012625) & (((v85 ^ 0x50001051) & (16 * v86) ^ v86) << 8);
  LODWORD(STACK[0x6970]) = (v64 << 16) & 0x6E440000 ^ v64 ^ v78;
  v89 = (v82 ^ (2
              * ((v88 << 16) & 0x54C10000 ^ v88 ^ ((v88 << 16) ^ 0x36750000) & (((v87 ^ 0x10C01025) << 8) & 0x54C10000 ^ 0x14C10000 ^ (((v87 ^ 0x10C01025) << 8) ^ 0xC1360000) & (v87 ^ 0x10C01025))))) >> 16;
  v90 = v81 - (((v89 ^ 0x4A617A82) - 2009564259) ^ ((v89 ^ 0x297AD22) - 1060197315) ^ ((v89 ^ 0x48F6B749) - 1968196008));
  v91 = v11 + v8 + v90;
  v92 = (2 * (v91 & 0x3CA2C254)) & (v91 ^ 0x1421BA46) ^ v91 & 0x3CA2C254 ^ ((2 * (v91 & 0x3CA2C254)) & 0x28010000 | 0x1000);
  v93 = (2 * (v91 ^ 0x1421BA46)) & 0x28837812 ^ 0x28810812 ^ ((2 * (v91 ^ 0x1421BA46)) ^ 0x5106F024) & (v91 ^ 0x1421BA46);
  v94 = (4 * v92) & 0x28837810 ^ v92 ^ ((4 * v92) ^ 0x4000) & v93;
  v95 = (4 * v93) & 0x28837810 ^ 0x8821812 ^ ((4 * v93) ^ 0xA20DE048) & v93;
  v96 = (16 * v94) & 0x28837810 ^ v94 ^ ((16 * v94) ^ 0x50000) & v95;
  v97 = (16 * v95) & 0x28837810 ^ 0x20807812 ^ ((16 * v95) ^ 0x88378120) & v95;
  v98 = v96 ^ 0x28822812 ^ (v96 << 8) & 0x28837800 ^ ((v96 << 8) ^ 0x1500000) & v97;
  v99 = (v91 ^ (2
              * ((v98 << 16) & 0x28830000 ^ v98 ^ ((v98 << 16) ^ 0x78120000) & ((v97 << 8) & 0x28830000 ^ 0x28830000 ^ ((v97 << 8) ^ 0x3780000) & v97)))) >> 8;
  LODWORD(STACK[0x6950]) = (v69 << 16) & 0x27540000 ^ v69 ^ ((v69 << 16) ^ 0x6FF0000) & v71;
  v100 = v90 - (((v99 ^ 0x3AF6DE87) + 1140531851) ^ ((v99 ^ 0xA824F70D) - 785839359) ^ ((v99 ^ 0x92EF89B8) - 337480266));
  v101 = v11 + v10 + v100;
  v102 = (v101 ^ 0x8EEF5F58) & (2 * (v101 & 0xA00F1E51)) ^ v101 & 0xA00F1E51;
  v103 = ((2 * (v101 ^ 0x8EFF6FF8)) ^ 0x5DE0E352) & (v101 ^ 0x8EFF6FF8) ^ (2 * (v101 ^ 0x8EFF6FF8)) & 0x2EF071A8;
  v104 = v103 ^ 0x221010A9;
  v105 = (v103 ^ 0x22606121) & (4 * v102) ^ v102;
  v106 = ((4 * v104) ^ 0xBBC1C6A4) & v104 ^ (4 * v104) & 0x2EF071A8;
  v107 = v106 ^ 0x4303109;
  v108 = (v106 ^ 0x2AC040A0) & (16 * v105) ^ v105;
  v109 = ((16 * v107) ^ 0xEF071A90) & v107 ^ (16 * v107) & 0x2EF071A0;
  v110 = v109 ^ LODWORD(STACK[0x478]);
  v111 = v108 ^ 0x2EF071A9;
  v112 = v11 + v13 + v100;
  v113 = (v112 ^ LODWORD(STACK[0x470])) & (2 * (v112 & 0x401E3CA2)) ^ v112 & 0x401E3CA2;
  v114 = (v109 ^ LODWORD(STACK[0x46C])) & (v108 << 8);
  v115 = ((2 * (v112 ^ 0x3BC8FC0E)) ^ 0xF7AD8158) & (v112 ^ 0x3BC8FC0E) ^ (2 * (v112 ^ 0x3BC8FC0E)) & 0x7BD6C0AC;
  v116 = v115 ^ 0x85240A4;
  v117 = (v115 ^ LODWORD(STACK[0x474])) & (4 * v113) ^ v113;
  v118 = ((4 * v116) ^ 0xEF5B02B0) & v116 ^ (4 * v116) & 0x7BD6C0AC;
  v119 = v118 ^ 0x1084C00C;
  v120 = (v118 ^ 0x6B5200A0) & (16 * v117) ^ v117;
  v121 = v111 ^ v114;
  v122 = ((16 * v119) ^ 0xBD6C0AC0) & v119 ^ (16 * v119) & 0x7BD6C0A0;
  v123 = v122 ^ 0x4292C02C;
  v124 = v11 + v9 + v100;
  v125 = v120 ^ 0x7BD6C0AC ^ (v122 ^ 0x39440000) & (v120 << 8);
  v126 = (v124 ^ 0x6C1E38A2) & (2 * (v124 & 0x401E3CA2)) ^ v124 & 0x401E3CA2;
  v127 = ((2 * (v124 ^ 0xEC0A21E2)) ^ 0x58283A80) & (v124 ^ 0xEC0A21E2) ^ (2 * (v124 ^ 0xEC0A21E2)) & 0xAC141D40;
  v128 = (v127 ^ 0xA4041040) & (4 * v126) ^ v126;
  v129 = ((4 * (v127 ^ LODWORD(STACK[0x47C]))) ^ 0xB0507500) & (v127 ^ LODWORD(STACK[0x47C])) ^ (4
                                                                                               * (v127 ^ LODWORD(STACK[0x47C]))) & 0xAC141D40;
  v130 = v128 ^ 0xAC141D40 ^ (v129 ^ 0xA0101500) & (16 * v128);
  v131 = (v123 << 8) & 0x7BD60000 ^ 0x29160000 ^ ((v123 << 8) ^ 0xD6C00000) & v123;
  v132 = (16 * (v129 ^ LODWORD(STACK[0x488]))) & 0xAC141D40 ^ LODWORD(STACK[0x480]) ^ ((16
                                                                                      * (v129 ^ LODWORD(STACK[0x488]))) ^ 0xC141D400) & (v129 ^ LODWORD(STACK[0x488]));
  v133 = (v130 << 8) & 0xAC141D00 ^ v130 ^ ((v130 << 8) ^ 0x141D4000) & v132;
  v134 = ((v121 << 16) ^ 0x71A90000) & ((v110 << 8) & 0x2EF00000 ^ 0xE800000 ^ ((v110 << 8) ^ 0x70710000) & v110);
  v135 = (v121 << 16) & 0x2EF00000 ^ v121;
  v136 = v124 ^ (2
               * ((v133 << 16) & 0x2C140000 ^ v133 ^ ((v133 << 16) ^ 0x1D400000) & ((v132 << 8) & STACK[0x484] ^ 0x28000000 ^ ((v132 << 8) ^ 0x141D0000) & v132))) ^ 0xFE0FE416;
  v137 = ((v136 ^ v46 ^ 0x9BB32483) + 1682758525) ^ ((v136 ^ v46 ^ LODWORD(STACK[0x48C])) + 1810220969) ^ ((v136 ^ v46 ^ 0x33A3623B) - 866345531);
  v138 = v11 + STACK[0x6A00] + v137;
  v139 = ((v125 << 16) ^ 0x40AC0000) & v131;
  v140 = ((2 * (v138 ^ 0x1AD27DE6)) ^ 0xB7AFCB84) & (v138 ^ 0x1AD27DE6) ^ (2 * (v138 ^ 0x1AD27DE6)) & 0xDBD7E5C2;
  v141 = v140 ^ 0x48502442;
  v142 = (v138 ^ 0x98D15DA6) & (2 * (v138 & 0xC1059824)) ^ v138 & 0xC1059824;
  v143 = (v140 ^ 0x4046C5C0) & (4 * v142) ^ v142;
  v144 = ((4 * v141) ^ 0x6F5F9708) & v141 ^ (4 * v141) & 0xDBD7E5C0;
  v145 = (v144 ^ 0x4B578500) & (16 * v143) ^ v143;
  v146 = ((16 * (v144 ^ 0x908060C2)) ^ 0xBD7E5C20) & (v144 ^ 0x908060C2) ^ (16 * (v144 ^ 0x908060C2)) & 0xDBD7E5C0;
  v147 = v145 ^ 0xDBD7E5C2 ^ (v146 ^ 0x99564400) & (v145 << 8);
  v148 = v138 ^ (2
               * ((v147 << 16) & 0x5BD70000 ^ v147 ^ ((v147 << 16) ^ 0x65C20000) & (((v146 ^ 0x4281A1C2) << 8) & 0x5BD70000 ^ 0x8120000 ^ (((v146 ^ 0x4281A1C2) << 8) ^ 0x57E50000) & (v146 ^ 0x4281A1C2))));
  v149 = ((HIWORD(v148) ^ 0xAD211513) - 688459725) ^ ((HIWORD(v148) ^ 0xE484E59F) - 1621950273) ^ ((HIWORD(v148) ^ 0x49A505A2)
                                                                                                 + 846389380);
  v150 = v135 ^ v134;
  v151 = v11 + v12 + v137 - v149;
  v152 = (v151 ^ 0xED6AB0E7) & (2 * (v151 & 0xED6C34E4)) ^ v151 & 0xED6C34E4;
  v153 = ((2 * (v151 ^ 0xF72AD1AF)) ^ 0x348DCA96) & (v151 ^ 0xF72AD1AF) ^ (2 * (v151 ^ 0xF72AD1AF)) & 0x1A46E54A;
  v154 = ((4 * (v153 ^ 0xA422549)) ^ 0x691B952C) & (v153 ^ 0xA422549) ^ (4 * (v153 ^ 0xA422549)) & 0x1A46E548;
  v155 = (v154 ^ 0x8028503) & (16 * ((v153 ^ 0x1002C049) & (4 * v152) ^ v152)) ^ (v153 ^ 0x1002C049) & (4 * v152) ^ v152;
  v156 = ((16 * (v154 ^ 0x12446043)) ^ 0xA46E54B0) & (v154 ^ 0x12446043) ^ (16 * (v154 ^ 0x12446043)) & 0x1A46E540;
  v157 = v155 ^ 0x1A46E54B ^ (v156 ^ 0x46444B) & (v155 << 8);
  v158 = (v157 << 16) & 0x1A460000 ^ v157 ^ ((v157 << 16) ^ 0x654B0000) & (((v156 ^ LODWORD(STACK[0x490])) << 8) & 0x1A460000 ^ 0x18020000 ^ (((v156 ^ LODWORD(STACK[0x490])) << 8) ^ 0x46E50000) & (v156 ^ LODWORD(STACK[0x490])));
  v159 = (v125 << 16) & 0x7BD60000 ^ v125 ^ v139;
  v160 = v137
       - v149
       - (((((v151 ^ (2 * v158)) >> 8) ^ 0xFCEA7004) + 1643648174) ^ ((((v151 ^ (2 * v158)) >> 8) ^ 0xA4FF2C4F)
                                                                                  + 971852007) ^ ((((v151 ^ (2 * v158)) >> 8) ^ 0x58CC39B5)
                                                                                                - 975282915));
  v161 = STACK[0x6A10];
  v162 = v11 + STACK[0x6A10] + v160;
  v163 = (v162 ^ 0x5FD89AC) & (2 * (v162 & STACK[0x494])) ^ v162 & STACK[0x494];
  v164 = ((2 * (v162 ^ 0x265799EE)) ^ 0xEF55279E) & (v162 ^ 0x265799EE) ^ (2 * (v162 ^ 0x265799EE)) & 0x77AA93CE;
  v165 = v164 ^ 0x10AA9041;
  v166 = (v164 ^ 0x570281CC) & (4 * v163) ^ v163;
  v167 = ((4 * v165) ^ 0xDEAA4F3C) & v165 ^ (4 * v165) & 0x77AA93CC;
  v168 = (v167 ^ 0x56AA0300) & (16 * v166) ^ v166;
  v169 = ((16 * (v167 ^ 0x210090C3)) ^ 0x7AA93CF0) & (v167 ^ 0x210090C3) ^ (16 * (v167 ^ 0x210090C3)) & 0x77AA93C0;
  v170 = LODWORD(STACK[0x6AA0]) ^ v48 ^ (2 * LODWORD(STACK[0x6970])) ^ v101 ^ (2 * v150) ^ v162;
  v171 = STACK[0x6A20];
  v172 = v11 + STACK[0x6A20] + v160;
  v173 = (v172 ^ 0x9BF1C408) & (2 * (v172 & 0xA3FA1442)) ^ v172 & 0xA3FA1442;
  v174 = ((2 * (v172 ^ 0xDF75EC0C)) ^ 0xF91FF09C) & (v172 ^ 0xDF75EC0C) ^ (2 * (v172 ^ 0xDF75EC0C)) & 0x7C8FF84E;
  v175 = v168 ^ 0x77AA93CF ^ (v169 ^ 0x72A8100F) & (v168 << 8);
  v176 = v174 ^ 0x4800842;
  v177 = (v174 ^ 0x1808F84A) & (4 * v173) ^ v173;
  v178 = ((4 * v176) ^ 0xF23FE138) & v176 ^ (4 * v176) & 0x7C8FF84C;
  v179 = ((v169 ^ 0x502830F) << 8) & 0x77AA0000 ^ 0x55280000 ^ (((v169 ^ 0x502830F) << 8) ^ 0xAA930000) & (v169 ^ 0x502830F);
  v180 = ((16 * (v178 ^ LODWORD(STACK[0x498]))) ^ 0xC8FF84E0) & (v178 ^ LODWORD(STACK[0x498])) ^ (16
                                                                                                * (v178 ^ LODWORD(STACK[0x498]))) & 0x7C8FF840;
  v181 = (v178 ^ 0x700FE000) & (16 * v177) ^ v177 ^ 0x7C8FF84E ^ (v180 ^ 0x488F8000) & (((v178 ^ 0x700FE000) & (16 * v177) ^ v177) << 8);
  v182 = LODWORD(STACK[0x6AB0]) ^ v58 ^ (2 * LODWORD(STACK[0x6950])) ^ v112 ^ (2 * v159);
  v183 = v170 ^ (2 * ((v175 << 16) & 0x77AA0000 ^ v175 ^ ((v175 << 16) ^ 0x13CF0000) & v179));
  v184 = v182 ^ v172;
  v185 = LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x6960]) ^ v136;
  v186 = STACK[0x6A30];
  v187 = v11 + STACK[0x6A30];
  v188 = STACK[0x69F0];
  v189 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((6921 * (v11 == STACK[0x69F0])) ^ LODWORD(STACK[0x6940])));
  ++STACK[0x6A00];
  --STACK[0x6A70];
  --STACK[0x6A80];
  --STACK[0x6A60];
  STACK[0x6A30] = v186 + 1;
  STACK[0x6A20] = v171 + 1;
  STACK[0x6A10] = v161 + 1;
  LODWORD(STACK[0x6A90]) = v185 ^ 0xDB613306 ^ (v187 + v160);
  LODWORD(STACK[0x6AA0]) = v183 ^ 0x82E70CC0;
  STACK[0x69F0] = v188 - 1;
  LODWORD(STACK[0x6AB0]) = v184 ^ (2
                                 * ((v181 << 16) & 0x7C8F0000 ^ v181 ^ ((v181 << 16) ^ 0x784E0000) & (((v180 ^ 0x3400780E) << 8) & 0x7C8F0000 ^ 0x70070000 ^ (((v180 ^ 0x3400780E) << 8) ^ 0xFF80000) & (v180 ^ 0x3400780E)))) ^ 0xB8AA3E9E;
  return v189();
}

uint64_t sub_100C671DC(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,int a31,int a32,int a33,int a34,int a35,unsigned int a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,int a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  int v257;
  int v258;
  char v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  int v272;
  uint64_t v273;
  unint64_t v274;
  int v275;
  char *v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  char *v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  char *v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  int v313;
  unint64_t v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  unint64_t v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  unsigned int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  uint64_t v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  int v349;
  uint64_t (*v350)(uint64_t);

  v70 = v69 + v67 - STACK[0x6A60];
  v71 = (v70 ^ 0xEB1AE5A4) & (2 * (v70 & 0xF320E904)) ^ v70 & 0xF320E904;
  v72 = ((2 * (v70 ^ 0xCD5BF7AC)) ^ 0x7CF63D50) & (v70 ^ 0xCD5BF7AC) ^ (2 * (v70 ^ 0xCD5BF7AC)) & 0x3E7B1EA8;
  v73 = v72 ^ 0x20902A8;
  v74 = (v72 ^ a29) & (4 * v71) ^ v71;
  v75 = ((4 * v73) ^ 0xF9EC7AA0) & v73 ^ (4 * v73) & 0x3E7B1EA8;
  v76 = (v75 ^ 0x38681AA0) & (16 * v74) ^ v74;
  v77 = ((16 * (v75 ^ 0x6130408)) ^ 0xE7B1EA80) & (v75 ^ 0x6130408) ^ (16 * (v75 ^ 0x6130408)) & 0x3E7B1EA0;
  v78 = v76 ^ 0x3E7B1EA8 ^ (v77 ^ a30) & (v76 << 8);
  v79 = (v70 ^ (2
              * ((v78 << 16) & 0x3E7B0000 ^ v78 ^ ((v78 << 16) ^ 0x1EA80000) & (((v77 ^ 0x184A1428) << 8) & 0x3E7B0000 ^ 0x4610000 ^ (((v77 ^ 0x184A1428) << 8) ^ 0x7B1E0000) & (v77 ^ 0x184A1428))))) >> 12;
  v80 = ((v79 ^ 0xBCFDAA84) + 93698813) ^ ((v79 ^ 0xEAFAA30D) + 1402123126) ^ ((v79 ^ 0x560C31E4) - 278650467);
  v81 = v69 + v80 + a2 - a3 - v68 - STACK[0x6A70];
  v82 = (v81 ^ 0xC10019CF) & (2 * (v81 & 0xEA4299CF)) ^ v81 & 0xEA4299CF;
  v83 = ((2 * (v81 ^ 0x91012853)) ^ 0xF6876338) & (v81 ^ 0x91012853) ^ (2 * (v81 ^ 0x91012853)) & 0x7B43B19C;
  v84 = v83 ^ 0x9409084;
  v85 = (v83 ^ 0x72022118) & (4 * v82) ^ v82;
  v86 = ((4 * v84) ^ 0xED0EC670) & v84 ^ (4 * v84) & 0x7B43B19C;
  v87 = (v86 ^ 0x69028010) & (16 * v85) ^ v85;
  v88 = ((16 * (v86 ^ 0x1241318C)) ^ 0xB43B19C0) & (v86 ^ 0x1241318C) ^ (16 * (v86 ^ 0x1241318C)) & 0x7B43B190;
  v89 = v87 ^ 0x7B43B19C ^ (v88 ^ 0x3003111C) & (v87 << 8);
  v90 = (v81 ^ (2
              * ((v89 << 16) & 0x7B430000 ^ v89 ^ ((v89 << 16) ^ 0x319C0000) & (((v88 ^ 0x4B40A01C) << 8) & 0x7B430000 ^ 0x38420000 ^ (((v88 ^ 0x4B40A01C) << 8) ^ 0x43B10000) & (v88 ^ 0x4B40A01C))))) >> 1;
  v91 = v69
      + v80
      - (((v90 ^ 0x6079C2A5) - 1751259060) ^ ((v90 ^ 0x26E60213) - 788387586) ^ ((v90 ^ 0x79FD3DCD) - 1910958300))
      + a2
      - a3
      - v68
      - STACK[0x6A80];
  v92 = (v91 ^ 0xAC8DA11C) & (2 * (v91 & 0xC8CE2A18)) ^ v91 & 0xC8CE2A18;
  v93 = ((2 * (v91 ^ 0x2D85A12C)) ^ 0xCA971668) & (v91 ^ 0x2D85A12C) ^ (2 * (v91 ^ 0x2D85A12C)) & 0xE54B8B34;
  v94 = v93 ^ 0x25488914;
  v95 = (v93 ^ 0x40010134) & (4 * v92) ^ v92;
  v96 = ((4 * v94) ^ 0x952E2CD0) & v94 ^ (4 * v94) & 0xE54B8B34;
  v97 = v95 ^ 0xE54B8B34 ^ (v96 ^ 0x850A0800) & (16 * v95);
  v98 = (16 * (v96 ^ 0x60418324)) & 0xE54B8B30 ^ 0xA1430834 ^ ((16 * (v96 ^ 0x60418324)) ^ 0x54B8B340) & (v96 ^ 0x60418324);
  v99 = (v97 << 8) & 0xE54B8B00 ^ v97 ^ ((v97 << 8) ^ 0x4B8B3400) & v98;
  v100 = v91 ^ (2
              * ((v99 << 16) & 0x654B0000 ^ v99 ^ ((v99 << 16) ^ 0xB340000) & ((v98 << 8) & 0xE54B0000 ^ 0x24400000 ^ ((v98 << 8) ^ 0x4B8B0000) & v98)));
  v101 = v100 ^ LODWORD(STACK[0x6AA0]);
  v102 = ((v100 ^ 0x2A46C2C3) + 772409312) ^ ((v100 ^ 0xC287B257) - 959744180) ^ ((v100 ^ 0x6A8E4CE4) + 1858243065);
  v103 = ((v102 - 1579410342) ^ a31) & (2 * ((v102 - 1579410342) & 0xA9F25B3E)) ^ (v102 - 1579410342) & 0xA9F25B3E;
  v104 = ((2 * ((v102 - 1579410342) ^ 0x38C852FC)) ^ 0x22741384) & ((v102 - 1579410342) ^ 0x38C852FC) ^ (2 * ((v102 - 1579410342) ^ 0x38C852FC)) & 0x913A09C2;
  v105 = v104 ^ 0x910A0842;
  v106 = (v104 ^ 0x10100182) & (4 * v103) ^ v103;
  v107 = ((4 * v105) ^ 0x44E82708) & v105 ^ (4 * v105) & 0x913A09C0;
  v108 = v106 ^ 0x913A09C2 ^ (v107 ^ 0x280102) & (16 * v106);
  v109 = (16 * (v107 ^ 0x911208C2)) & 0x913A09C0 ^ 0x801A01C2 ^ ((16 * (v107 ^ 0x911208C2)) ^ 0x13A09C20) & (v107 ^ 0x911208C2);
  v110 = (v108 << 8) & 0x913A0900 ^ v108 ^ ((v108 << 8) ^ 0x3A09C200) & v109;
  v111 = ((v102 - 1579410342) ^ (2
                               * ((v110 << 16) & 0x113A0000 ^ v110 ^ ((v110 << 16) ^ 0x9C20000) & ((v109 << 8) & 0x913A0000 ^ 0x1320000 ^ ((v109 << 8) ^ 0x3A090000) & v109)))) >> 14;
  v112 = v102
       + 344885863
       + (((v111 ^ 0x6D9A579A) + 1715583997) ^ ((v111 ^ 0x39DC0CDD) + 839377084) ^ ((v111 ^ 0x5444FD0E) + 1604260201));
  v113 = (v112 ^ 0xA6683E5) & (2 * (v112 & 0x2B66A301)) ^ v112 & 0x2B66A301;
  v114 = ((2 * (v112 ^ 0x1EEB85E7)) ^ 0x6B1A4DCC) & (v112 ^ 0x1EEB85E7) ^ (2 * (v112 ^ 0x1EEB85E7)) & 0x358D26E6;
  v115 = v114 ^ a32;
  v116 = (v114 ^ 0x21082626) & (4 * v113) ^ v113;
  v117 = ((4 * v115) ^ 0xD6349B98) & v115 ^ (4 * v115) & 0x358D26E4;
  v118 = (v117 ^ a34) & (16 * v116) ^ v116;
  v119 = ((16 * (v117 ^ 0x21892466)) ^ a33) & (v117 ^ 0x21892466) ^ (16 * (v117 ^ 0x21892466)) & 0x358D26E0;
  v120 = v118 ^ 0x358D26E6 ^ (v119 ^ a35) & (v118 << 8);
  v121 = (v112 ^ (2
                * ((v120 << 16) & 0x358D0000 ^ v120 ^ ((v120 << 16) ^ 0x26E60000) & (((v119 ^ a36) << 8) & 0x358D0000 ^ 0x30890000 ^ (((v119 ^ a36) << 8) ^ 0xD260000) & (v119 ^ a36))))) >> 8;
  v122 = v112
       + 1494427410
       + (((v121 ^ 0x39E03CA8) + 645247972) ^ ((v121 ^ 0x305A4011) + 802148187) ^ ((v121 ^ 0x9B30857) + 371623709));
  v123 = ((2 * (v122 & 0xB2B68049)) & 0x45090092 | v122 & 0xB2B68049) ^ (2 * (v122 & 0xB2B68049)) & (v122 ^ 0x7F2F6F97);
  v124 = ((2 * (v122 ^ 0x7F2F6F97)) ^ 0x9B33DFBC) & (v122 ^ 0x7F2F6F97) ^ (2 * (v122 ^ 0x7F2F6F97)) & 0xCD99EFDE;
  v125 = v124 ^ a37;
  v126 = (v124 ^ 0x8910230E) & (4 * v123) ^ v123;
  v127 = ((4 * v125) ^ 0x3667BF78) & v125 ^ (4 * v125) & 0xCD99EFDC;
  v128 = (v127 ^ 0x401AF56) & (16 * v126) ^ v126;
  v129 = ((16 * (v127 ^ 0xC9984086)) ^ 0xD99EFDE0) & (v127 ^ 0xC9984086) ^ (16 * (v127 ^ 0xC9984086)) & 0xCD99EFD0;
  v130 = v128 ^ 0xCD99EFDE ^ (v129 ^ 0xC998ED00) & (v128 << 8);
  v131 = v122 ^ (2
               * ((v130 << 16) & 0x4D990000 ^ v130 ^ ((v130 << 16) ^ 0x6FDE0000) & (((v129 ^ 0x401021E) << 8) & 0xCD990000 ^ 0x44100000 ^ (((v129 ^ 0x401021E) << 8) ^ 0x19EF0000) & (v129 ^ 0x401021E))));
  v132 = ((v131 ^ 0xF7BA2DD2) + 330331962) ^ ((v131 ^ 0x7C0EF313) - 1744524807) ^ ((v131 ^ 0x39018134) - 586425376);
  v133 = ((v132 + 1670450179) ^ 0x9263D826) & (2 * ((v132 + 1670450179) & 0xD36B9036)) ^ (v132 + 1670450179) & 0xD36B9036;
  v134 = ((2 * ((v132 + 1670450179) ^ 0xB2A7F822)) ^ 0xC398D028) & ((v132 + 1670450179) ^ 0xB2A7F822) ^ (2 * ((v132 + 1670450179) ^ 0xB2A7F822)) & 0x61CC6814;
  v135 = v134 ^ 0x20442814;
  v136 = (v134 ^ 0x61886800) & (4 * v133) ^ v133;
  v137 = ((4 * v135) ^ 0x8731A050) & v135 ^ (4 * v135) & 0x61CC6814;
  v138 = v136 ^ 0x61CC6814 ^ (v137 ^ 0x1002004) & (16 * v136);
  v139 = (16 * (v137 ^ 0x60CC4804)) & 0x61CC6810 ^ 0x61086814 ^ ((16 * (v137 ^ 0x60CC4804)) ^ 0x1CC68140) & (v137 ^ 0x60CC4804);
  v140 = (v138 << 8) & 0x61CC6800 ^ v138 ^ ((v138 << 8) ^ 0xCC681400) & v139;
  v141 = ((v132 + 1670450179) ^ (2
                               * ((v140 << 16) & 0x61CC0000 ^ v140 ^ ((v140 << 16) ^ 0x68140000) & ((v139 << 8) & 0x61CC0000 ^ 0x21840000 ^ ((v139 << 8) ^ a38) & v139)))) >> 15;
  v142 = v132
       - 1056165599
       + (((v141 ^ 0x40616CE2) - 1173169364) ^ ((v141 ^ 0x282962B8) - 765799054) ^ ((v141 ^ 0x6848AE8C) - 1841620666));
  v143 = (v142 ^ 0x7A7843F9) & (2 * (v142 & 0x7B7D53F8)) ^ v142 & 0x7B7D53F8;
  v144 = ((2 * (v142 ^ 0xA87AE4D9)) ^ 0xA60F6E42) & (v142 ^ 0xA87AE4D9) ^ (2 * (v142 ^ 0xA87AE4D9)) & 0xD307B720;
  v145 = v144 ^ 0x51009121;
  v146 = (v144 ^ 0x82070600) & (4 * v143) ^ v143;
  v147 = ((4 * v145) ^ a39) & v145 ^ (4 * v145) & 0xD307B720;
  v148 = (v147 ^ 0x40069400) & (16 * v146) ^ v146;
  v149 = ((16 * (v147 ^ 0x93012321)) ^ 0x307B7210) & (v147 ^ 0x93012321) ^ (16 * (v147 ^ 0x93012321)) & 0xD307B720;
  v150 = v148 ^ 0xD307B721 ^ (v149 ^ 0x10033200) & (v148 << 8);
  v151 = (v142 ^ (2
                * ((v150 << 16) & 0x53070000 ^ v150 ^ ((v150 << 16) ^ 0x37210000) & (((v149 ^ 0xC3048521) << 8) & 0x53070000 ^ 0x50000000 ^ (((v149 ^ 0xC3048521) << 8) ^ 0x7B70000) & (v149 ^ 0xC3048521))))) >> 8;
  v152 = v142
       - 168218947
       + (((v151 ^ 0xD7202E0D) - 339909587) ^ ((v151 ^ 0xB89870F2) - 2080032044) ^ ((v151 ^ 0x6F432EC2) + 1407083748));
  v153 = (v152 ^ 0x4159C31D) & (2 * (v152 & 0x491DEB1E)) ^ v152 & 0x491DEB1E;
  v154 = ((2 * (v152 ^ 0x43605339)) ^ 0x14FB704E) & (v152 ^ 0x43605339) ^ (2 * (v152 ^ 0x43605339)) & 0xA7DB826;
  v155 = v154 ^ 0xA048821;
  v156 = (v154 ^ 0x793000) & (4 * v153) ^ v153;
  v157 = ((4 * v155) ^ 0x29F6E09C) & v155 ^ (4 * v155) & 0xA7DB824;
  v158 = (v157 ^ 0x874A000) & (16 * v156) ^ v156;
  v159 = ((16 * (v157 ^ a40)) ^ 0xA7DB8270) & (v157 ^ a40) ^ (16 * (v157 ^ a40)) & 0xA7DB820;
  v160 = v158 ^ 0xA7DB827 ^ (v159 ^ 0x2598007) & (v158 << 8);
  v161 = v152 ^ (2
               * ((v160 << 16) & 0xA7D0000 ^ v160 ^ ((v160 << 16) ^ 0x38270000) & (((v159 ^ a41) << 8) & 0xA7D0000 ^ 0x2450000 ^ (((v159 ^ a41) << 8) ^ 0x7DB80000) & (v159 ^ a41))));
  v162 = (((v161 ^ 0x14DBCB37) + 80510227) ^ ((v161 ^ 0x97416FF3) - 2024351273) ^ ((v161 ^ 0xE20238C9) - 233468179))
       - ((((v161 >> 9) ^ 0xAF4086A) - 1736021940) ^ (((v161 >> 9) ^ 0x9B2EAC22) + 157076484) ^ (((v161 >> 9) ^ 0x91EA6806)
                                                                                               + 60295208));
  v163 = ((v162 - 2029539693) ^ 0x5D038BA1) & (2 * ((v162 - 2029539693) & 0x99ABD3B4)) ^ (v162 - 2029539693) & 0x99ABD3B4;
  v164 = ((2 * ((v162 - 2029539693) ^ 0x5F072DE1)) ^ 0x8D59FCAA) & ((v162 - 2029539693) ^ 0x5F072DE1) ^ (2 * ((v162 - 2029539693) ^ 0x5F072DE1)) & 0xC6ACFE54;
  v165 = v164 ^ 0x42A40255;
  v166 = (v164 ^ 0x8408DC00) & (4 * v163) ^ v163;
  v167 = ((4 * v165) ^ 0x1AB3F954) & v165 ^ (4 * v165) & 0xC6ACFE54;
  v168 = (v167 ^ 0x2A0F840) & (16 * v166) ^ v166;
  v169 = ((16 * (v167 ^ a42)) ^ 0x6ACFE550) & (v167 ^ a42) ^ (16 * (v167 ^ a42)) & 0xC6ACFE50;
  v170 = v168 ^ 0xC6ACFE55 ^ (v169 ^ 0x428CE400) & (v168 << 8);
  v171 = ((v162 - 2029539693) ^ (2
                               * ((v170 << 16) & 0x46AC0000 ^ v170 ^ ((v170 << 16) ^ 0x7E550000) & (((v169 ^ 0x84201A05) << 8) & 0x46AC0000 ^ 0x42000000 ^ (((v169 ^ 0x84201A05) << 8) ^ a43) & (v169 ^ 0x84201A05))))) >> 3;
  v172 = v162
       - (((v171 ^ 0x845D02E9) + 1785209323) ^ ((v171 ^ 0xBCF1794C) + 1388599888) ^ ((v171 ^ 0x2BB33E46) - 981066426))
       + 1741844589;
  v173 = (v172 ^ 0xB5037432) & (2 * (v172 & 0xB60B78BB)) ^ v172 & 0xB60B78BB;
  v174 = ((2 * (v172 ^ 0xFD013556)) ^ 0x96149BDA) & (v172 ^ 0xFD013556) ^ (2 * (v172 ^ 0xFD013556)) & 0x4B0A4DEC;
  v175 = v174 ^ 0x490A4425;
  v176 = (v174 ^ 0x10001C9) & (4 * v173) ^ v173;
  v177 = ((4 * v175) ^ 0x2C2937B4) & v175 ^ (4 * v175) & 0x4B0A4DEC;
  v178 = (v177 ^ a44) & (16 * v176) ^ v176;
  v179 = ((16 * (v177 ^ a45)) ^ 0xB0A4DED0) & (v177 ^ a45) ^ (16 * (v177 ^ a45)) & 0x4B0A4DE0;
  v180 = v178 ^ 0x4B0A4DED ^ (v179 ^ 0x4C00) & (v178 << 8);
  v181 = v172 ^ (2
               * ((v180 << 16) & 0x4B0A0000 ^ v180 ^ ((v180 << 16) ^ 0x4DED0000) & (((v179 ^ a46) << 8) & 0x4B0A0000 ^ 0x41020000 ^ (((v179 ^ a46) << 8) ^ 0xA4D0000) & (v179 ^ a46))));
  v182 = (a47 ^ (v181 >> 8)) + (v181 ^ 0x6AC13808) + (((a47 ^ (v181 >> 8)) + (v181 ^ 0x6AC13808)) >> 2);
  v183 = v182 - ((2 * v182) & 0xD39FB2B2) + 1775229273;
  v184 = v101 ^ v181;
  v185 = ((v183 ^ 0x9C007C76) + 1677689738) ^ ((v183 ^ 0x851AB531) + 2061847247) ^ ((v183 ^ 0x70D5101E) - 1893011486);
  v186 = v131 ^ LODWORD(STACK[0x6AB0]) ^ v183;
  v187 = v185 + ((v185 + 118959614) >> 8);
  v188 = ((v187 + 197189292) ^ 0xFA152E01) & (2 * ((v187 + 197189292) & 0xFB564F52)) ^ (v187 + 197189292) & 0xFB564F52;
  v189 = ((2 * ((v187 + 197189292) ^ 0x7C91B605)) ^ 0xF8FF2AE) & ((v187 + 197189292) ^ 0x7C91B605) ^ (2 * ((v187 + 197189292) ^ 0x7C91B605)) & 0x87C7F956;
  v190 = v189 ^ 0x80400951;
  v191 = (v189 ^ 0x7837000) & (4 * v188) ^ v188;
  v192 = ((4 * v190) ^ 0x1F1FE55C) & v190 ^ (4 * v190) & 0x87C7F954;
  v193 = (v192 ^ 0x707E140) & (16 * v191) ^ v191;
  v194 = ((16 * (v192 ^ 0x80C01803)) ^ 0x7C7F9570) & (v192 ^ 0x80C01803) ^ (16 * (v192 ^ 0x80C01803)) & 0x87C7F950;
  v195 = v193 ^ 0x87C7F957 ^ (v194 ^ 0x4479100) & (v193 << 8);
  v196 = ((v187 + 197189292) ^ (2
                              * ((v195 << 16) & 0x7C70000 ^ v195 ^ ((v195 << 16) ^ 0x79570000) & (((v194 ^ 0x83806807) << 8) & 0x7C70000 ^ (((v194 ^ 0x83806807) << 8) ^ 0x47F90000) & (v194 ^ 0x83806807) ^ 0x60000)))) >> 6;
  v197 = v187
       - (((v196 ^ 0x702133B8) + 2018241865) ^ ((v196 ^ 0xD01FAF6B) - 663391844) ^ ((v196 ^ 0xA3E7C224) - 1416815403))
       + 2085455100;
  v198 = (v197 ^ 0x967C240A) & (2 * (v197 & 0x967D290A)) ^ v197 & 0x967D290A;
  v199 = ((2 * (v197 ^ 0x92BE760E)) ^ 0x986BE08) & (v197 ^ 0x92BE760E) ^ (2 * (v197 ^ 0x92BE760E)) & 0x4C35F04;
  v200 = v199 ^ a48;
  v201 = (v199 ^ 0x4800D04) & (4 * v198) ^ v198;
  v202 = ((4 * v200) ^ 0x130D7C10) & v200 ^ (4 * v200) & 0x4C35F04;
  v203 = (v202 ^ 0x15C04) & (16 * v201) ^ v201;
  v204 = ((16 * (v202 ^ 0x4C20304)) ^ 0x4C35F040) & (v202 ^ 0x4C20304) ^ (16 * (v202 ^ 0x4C20304)) & 0x4C35F00;
  v205 = v203 ^ 0x4C35F04 ^ (v204 ^ 0x4015004) & (v203 << 8);
  v206 = v197 ^ (2
               * ((v205 << 16) & 0x4C30000 ^ v205 ^ ((v205 << 16) ^ 0x5F040000) & (((v204 ^ 0xC20F04) << 8) & 0x4C30000 ^ 0x4800000 ^ (((v204 ^ 0xC20F04) << 8) ^ 0x435F0000) & (v204 ^ 0xC20F04))));
  v207 = ((v206 >> 9) ^ 0x507233) + (v206 ^ 0xA0E46613) - ((((v206 >> 9) ^ 0x507233) + (v206 ^ 0xA0E46613)) >> 3);
  v208 = v207 - ((2 * v207) & 0x8F5BD434) - 944903654;
  v209 = (((v208 ^ 0xCE5F318E) + 832622194) ^ ((v208 ^ 0x36C1E26D) - 918676077) ^ ((v208 ^ 0x3F3339F9) - 1060321785))
       + 703056152;
  v210 = v184 ^ v208;
  v211 = v209 + (v209 >> 8) + ((v209 + (v209 >> 8)) >> 2);
  v212 = v211 + 507395563 - ((2 * v211) & 0x3C7C7BD6);
  v213 = ((v212 ^ 0x73D0EB2E) - 1943071534) ^ ((v212 ^ 0xC6231B5A) + 970777766) ^ ((v212 ^ a49) + 1412575841);
  v214 = v186 ^ v212;
  v215 = v186 ^ v212 ^ 0x75000000;
  v216 = v214;
  v217 = ((v213 - 1319452511) ^ 0xFE5B03DD) & (2 * ((v213 - 1319452511) & 0xFF5A231D)) ^ (v213 - 1319452511) & 0xFF5A231D;
  v218 = ((2 * ((v213 - 1319452511) ^ 0xCCCB01E5)) ^ 0x672245F0) & ((v213 - 1319452511) ^ 0xCCCB01E5) ^ (2 * ((v213 - 1319452511) ^ 0xCCCB01E5)) & 0x339122F8;
  v219 = v218 ^ 0x10912208;
  v220 = (v218 ^ 0x230000F0) & (4 * v217) ^ v217;
  v221 = ((4 * v219) ^ 0xCE448BE0) & v219 ^ (4 * v219) & 0x339122F8;
  v222 = (v221 ^ 0x20002E8) & (16 * v220) ^ v220;
  v223 = ((16 * (v221 ^ a50)) ^ 0x39122F80) & (v221 ^ a50) ^ (16 * (v221 ^ a50)) & 0x339122F0;
  v224 = v222 ^ 0x339122F8 ^ (v223 ^ a51) & (v222 << 8);
  v225 = ((v213 - 1319452511) ^ (2
                               * ((v224 << 16) & 0x33910000 ^ v224 ^ ((v224 << 16) ^ 0x22F80000) & (((v223 ^ 0x2810078) << 8) & 0x33910000 ^ 0x22910000 ^ (((v223 ^ 0x2810078) << 8) ^ 0x11220000) & (v223 ^ 0x2810078))))) >> 14;
  v226 = v213
       + 982746546
       + (((v225 ^ 0xD17CF749) + 267093019) ^ ((v225 ^ 0x2F593B23) - 238139279) ^ ((v225 ^ 0xFE26B90B) + 548522585));
  v227 = (v226 ^ 0x17A947DC) & (2 * (v226 & 0x978D57D9)) ^ v226 & 0x978D57D9;
  v228 = ((2 * (v226 ^ 0x32BBEB7C)) ^ 0x4A6D794A) & (v226 ^ 0x32BBEB7C) ^ (2 * (v226 ^ 0x32BBEB7C)) & 0xA536BCA4;
  v229 = v228 ^ 0xA51284A5;
  v230 = (v228 ^ 0x1243801) & (4 * v227) ^ v227;
  v231 = ((4 * v229) ^ 0x94DAF294) & v229 ^ (4 * v229) & 0xA536BCA4;
  v232 = (v231 ^ 0x8412B080) & (16 * v230) ^ v230;
  v233 = ((16 * (v231 ^ 0x21240C21)) ^ 0x536BCA50) & (v231 ^ 0x21240C21) ^ (16 * (v231 ^ 0x21240C21)) & 0xA536BCA0;
  v234 = v232 ^ 0xA536BCA5 ^ (v233 ^ a52) & (v232 << 8);
  v235 = (v226 ^ (2
                * ((v234 << 16) & 0x25360000 ^ v234 ^ ((v234 << 16) ^ 0x3CA50000) & (((v233 ^ 0xA41434A5) << 8) & 0xA5360000 ^ 0x1020000 ^ (((v233 ^ 0xA41434A5) << 8) ^ 0x36BC0000) & (v233 ^ 0xA41434A5))))) >> 1;
  v236 = v226
       - (((v235 ^ 0x722DAED8) - 1564083632) ^ ((v235 ^ 0x1F5BF3) - 789115035) ^ ((v235 ^ 0x38E6E262) - 401688842))
       - 1938530226;
  v237 = (v236 ^ 0x11153A4B) & (2 * (v236 & 0xA5553B6A)) ^ v236 & 0xA5553B6A;
  v238 = ((2 * (v236 ^ 0x1B37680B)) ^ 0x7CC4A6C2) & (v236 ^ 0x1B37680B) ^ (2 * (v236 ^ 0x1B37680B)) & 0xBE625360;
  v239 = v238 ^ 0x82225121;
  v240 = (v238 ^ a53) & (4 * v237) ^ v237;
  v241 = ((4 * v239) ^ 0xF9894D84) & v239 ^ (4 * v239) & 0xBE625360;
  v242 = (v241 ^ 0xB8004100) & (16 * v240) ^ v240;
  v243 = ((16 * (v241 ^ 0x6621261)) ^ 0xE6253610) & (v241 ^ 0x6621261) ^ (16 * (v241 ^ 0x6621261)) & 0xBE625360;
  v244 = v242 ^ 0xBE625361 ^ (v243 ^ 0xA6201200) & (v242 << 8);
  v245 = v161 ^ LODWORD(STACK[0x6A90]) ^ v206 ^ v236 ^ (2
                                                      * ((v244 << 16) & 0x3E620000 ^ v244 ^ ((v244 << 16) ^ 0x53610000) & (((v243 ^ 0x18424161) << 8) & 0x3E620000 ^ 0x1C200000 ^ (((v243 ^ 0x18424161) << 8) ^ 0x62530000) & (v243 ^ 0x18424161))));
  v246 = ((v210 & 0x7F ^ 0x1204519) + 491916299 - ((2 * (v210 & 0x7F ^ 0x1204519)) & 0x2000008) - 391) ^ 0x1C724FBD;
  v247 = 16843009 * v246 - 1541479961;
  LODWORD(STACK[0x6510]) = v246;
  v248 = (v247 ^ 0x53E45F50) & (2 * (v247 & 0x5BE11E19)) ^ v247 & 0x5BE11E19;
  v249 = ((2 * (v247 ^ 0xD5E64F60)) ^ 0x1C0EA2F2) & (v247 ^ 0xD5E64F60) ^ (2 * (v247 ^ 0xD5E64F60)) & 0x8E075178;
  v250 = v249 ^ 0x82015109;
  v251 = (v249 ^ a54) & (4 * v248) ^ v248;
  v252 = ((4 * v250) ^ 0x381D45E4) & v250 ^ (4 * v250) & 0x8E075178;
  v253 = (v252 ^ 0x8054169) & (16 * v251) ^ v251;
  v254 = ((16 * (v252 ^ a55)) ^ 0xE0751790) & (v252 ^ a55) ^ (16 * (v252 ^ a55)) & 0x8E075170;
  v255 = v253 ^ 0x8E075179 ^ (v254 ^ 0x80051100) & (v253 << 8);
  v256 = v247 ^ (2
               * ((v255 << 16) & 0xE070000 ^ v255 ^ ((v255 << 16) ^ 0x51790000) & (((v254 ^ 0xE024069) << 8) & 0xE070000 ^ 0x8060000 ^ (((v254 ^ 0xE024069) << 8) ^ 0x7510000) & (v254 ^ 0xE024069))));
  v257 = (v245 ^ 3) + 9;
  LODWORD(STACK[0x6AB0]) = v257;
  v258 = ((v245 & 7) - ((2 * v245) & 0xC) + 22) ^ 0x12;
  v259 = v257 & 7;
  LODWORD(STACK[0x68F0]) = v257 & 7;
  v260 = (v245 & 0x70112038 ^ 0x70002025) + (v245 & 0x8FEEDFC0 ^ 0x38AC841) - 2;
  v261 = (v260 & 0xB97802B0 ^ 0x90680095) + (v260 & 0x4687FD48 ^ 0x4001200B) - 2;
  if (v258)
    v262 = 255;
  else
    v262 = 0;
  v263 = v262 << v259;
  LODWORD(STACK[0x6A80]) = v261 ^ 0xD09D8366;
  v264 = (-889192448 * v263) & v215;
  v265 = v263 ^ 0x89831C27;
  if (!v258)
    v265 = 1987896280;
  v266 = 16843009 * v263;
  LODWORD(STACK[0x6980]) = v264 ^ v266;
  LODWORD(STACK[0x64C0]) = v265 & 0x89 ^ (v265 ^ 0xD8) & (v210 ^ 0x30) ^ v266;
  LODWORD(STACK[0x6A60]) = v216;
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x64C8])
                         + ((((v210 & 0x7F ^ 0x1204519) + 491916299 - ((2 * (v210 & 0x7F ^ 0x1204519)) & 0x2000008) - 391) ^ 0x1C724FBD)
                          - LODWORD(STACK[0x6660]))
                         * a56;
  v267 = LODWORD(STACK[0x6750]) ^ (LODWORD(STACK[0x64D0]) - 293840453 - ((2 * LODWORD(STACK[0x64D0])) & 0xDCF8B376));
  LODWORD(STACK[0x6A40]) = (v258 & 3 ^ v267 & 0xD06706E3 | v267 & 0x2F98F91C)
                         - 2 * (((v258 & 3 ^ v267 & 0xD06706E3) & 0x25771A9B | v267 & 0x25101818) ^ v267 & 8);
  v268 = 16843009
       * (v210 ^ 0x2C ^ ((unsigned __int16)(v210 ^ 0x782C) >> 8) ^ ((v210 ^ 0x26B9782C) >> 16) ^ HIBYTE(v210) ^ 0x14);
  LODWORD(STACK[0x6A90]) = v268;
  v269 = 16843009
       * (v216 ^ 0x37 ^ ((unsigned __int16)(v216 ^ 0x1237) >> 8) ^ ((v216 ^ 0xD5801237) >> 16) ^ HIBYTE(v216) ^ 0x4B);
  LODWORD(STACK[0x69B0]) = v269;
  v270 = v269 ^ v268;
  v271 = v269 ^ v268 ^ 0xACACACAC;
  v272 = STACK[0x6A50];
  v273 = (uint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6A50]) ^ 0x101F));
  HIDWORD(v274) = *(_DWORD *)(v273 + 4 * (v271 % 0x101));
  LODWORD(v274) = HIDWORD(v274);
  v275 = (v274 >> 25) ^ ((v274 >> 25) >> 6) ^ ((v274 >> 25) >> 4);
  v276 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6A50]) ^ 0x1308)) - 12;
  v277 = STACK[0x6350];
  LODWORD(STACK[0x6430]) = LODWORD(STACK[0x6350]) ^ 6;
  v278 = *(_DWORD *)&v276[4 * (v277 ^ 6)];
  HIDWORD(v274) = *(_DWORD *)(v273 + 4 * (LODWORD(STACK[0x6498]) % 0x101));
  LODWORD(v274) = HIDWORD(v274);
  v279 = (v274 >> 25) ^ ((v274 >> 25) >> 6) ^ ((v274 >> 25) >> 4);
  v280 = LODWORD(STACK[0x64D8]) + (v279 ^ 0xB2F7C892) + 1508006375 + (v275 ^ 0x4D08376D);
  v281 = (v280 ^ 0xBE709094) & (2 * (v280 & 0xBE70D518)) ^ v280 & 0xBE70D518;
  v282 = ((2 * (v280 ^ 0x8250B084)) ^ 0x7840CB38) & (v280 ^ 0x8250B084) ^ (2 * (v280 ^ 0x8250B084)) & 0x3C20659C;
  v283 = (v282 ^ 0x3C204004) & (4 * v281) ^ v281;
  v284 = ((4 * (v282 ^ 0x4202484)) ^ 0xF0819670) & (v282 ^ 0x4202484) ^ (4 * (v282 ^ 0x4202484)) & 0x3C20659C;
  v285 = (v284 ^ 0x3000040C) & (16 * v283) ^ v283;
  v286 = ((16 * (v284 ^ a58)) ^ a57) & (v284 ^ a58) ^ (16 * (v284 ^ a58)) & 0x3C206590;
  v287 = v285 ^ 0x3C20659C ^ (v286 ^ 0x4100) & (v285 << 8);
  LODWORD(STACK[0x6990]) = v280 ^ (2
                                 * ((v287 << 16) & 0x3C200000 ^ v287 ^ ((v287 << 16) ^ 0x659C0000) & (((v286 ^ a59) << 8) & 0x3C200000 ^ (((v286 ^ a59) << 8) ^ 0x20650000) & (v286 ^ a59) ^ 0x1C000000)));
  LODWORD(STACK[0x6A70]) = ((v270 ^ 0xF8B32BB3) + 544940149) ^ ((v270 ^ 0x24D0C28A) - 65484466) ^ ((v270 ^ 0x70CF4595)
                                                                                                 - 1475916205);
  if ((v270 & 0x8000) != 0)
    v288 = 0x8000;
  else
    v288 = -32768;
  v289 = v288 + v271;
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x64F8]) + (v277 ^ 0x5A2922D7 ^ (v278 - 293840453 - ((2 * v278) & 0xDCF8B376)));
  v290 = ((LODWORD(STACK[0x68C0]) ^ 0xB89917DA) - 375591765) ^ ((LODWORD(STACK[0x68C0]) ^ 0x983E4833) - 918834364);
  v291 = (LODWORD(STACK[0x68C0]) ^ a60) - 1047734190;
  v292 = (char *)*(&off_1015B46D0 + v272 - 4460) - 4;
  v293 = LODWORD(STACK[0x66D0]) ^ 0xF723D7B8;
  LODWORD(STACK[0x6A00]) = v293;
  v294 = *(_DWORD *)&v292[4 * v293];
  LODWORD(STACK[0x6970]) = v290 ^ v291;
  v295 = v294 ^ (32 * (v294 ^ 0xE1AF374F)) ^ (4 * (v294 ^ 0xE1AF374F));
  v296 = STACK[0x66B8];
  v297 = LODWORD(STACK[0x6388]) ^ ((v256 ^ 0x43AAEF3u ^ LODWORD(STACK[0x66B8])) >> 5) ^ 0x34A9D06E;
  v298 = (v297 - ((2 * v297) & 0x87AE2430) + 1138168344) ^ v256 ^ 0x43AAEF3;
  LODWORD(STACK[0x6A10]) = v298 - ((2 * v298) & 0x59C7F47C);
  LODWORD(STACK[0x69E0]) = LODWORD(STACK[0x6380]) + (v295 ^ 0x16012C5D);
  v299 = (char *)*(&off_1015B46D0 + v272 - 3391) + 4 * ((v289 ^ 0x8000) % 0x101);
  v300 = STACK[0x64A0];
  v301 = ((v300 ^ 0xE23CB447) + 152097085) ^ ((v300 ^ 0xE0978E53) + 196864809) ^ ((v300 ^ 0x63CF54AF) - 1998376491);
  v302 = (v296 ^ 0x10A42173 | 0xC5EB13DF) - (v296 ^ 0x10A42173 | 0x3A14EC20);
  v303 = STACK[0x6800];
  v304 = ((v303 ^ 0x3F1565A5) + 636836205) ^ ((v303 ^ 0x57FFA366) + 1293918128) ^ ((v303 ^ 0x23D6DC5D) + 959897749);
  v305 = *((_DWORD *)v299 - 2) ^ ((*((_DWORD *)v299 - 2) ^ 0xC172BBDD) >> 5) ^ ((*((_DWORD *)v299 - 2) ^ 0xC172BBDD) >> 3);
  v306 = STACK[0x6348];
  LODWORD(v299) = ((2 * ((v306 ^ 0x5D2C755) & (v277 ^ 0xFFFFFFF9) ^ 0x12482C00)) & 0xF8B239DC)
                - ((v306 ^ 0x5D2C755) & (v277 ^ 0xFFFFFFF9) ^ 0x12482C00);
  v307 = (LODWORD(STACK[0x64F0]) ^ a61) + (v279 ^ 0x4D08376D) + (v305 ^ 0x23B71B97);
  LODWORD(STACK[0x66B0]) = v256;
  v308 = (((2 * (v256 ^ 6)) | 0xE6A9CDA) - (v256 ^ 6) + 2026549651) ^ 0xAFB48A81;
  v309 = ((v210 & 0xFFFFFF80 ^ 0x335F19E4 | 0xD32C1563) - (v210 & 0xFFFFFF80 ^ 0x335F19E4 | 0x2CD3EA9C) + 752085660) ^ 0xF2CDD807;
  v310 = (-623252985 - v308 + ((2 * v308) & 0x4A4C2BF0)) ^ 0xF2582E06;
  v311 = (v310 ^ v309) % 0x101;
  v312 = *(_DWORD *)&v276[4 * v311] - ((2 * *(_DWORD *)&v276[4 * v311]) & 0x4A37FBDC);
  LODWORD(STACK[0x64F8]) = v210;
  v313 = v210 ^ 0x12BED4A0;
  HIDWORD(v314) = *(_DWORD *)(v273 + 4 * ((v210 ^ 0x12BED4A0) % 0x101));
  LODWORD(v314) = HIDWORD(v314);
  v315 = v311 ^ 0xEEB1797B ^ (v312 - 1524892178);
  v316 = (v314 >> 25) ^ 0xB2F7C892 ^ ((v314 >> 25) >> 6) ^ ((v314 >> 25) >> 4);
  v317 = LODWORD(STACK[0x6A80]) | v258;
  v318 = ((v245 & 7) - ((2 * v245) & 0xC) + 22) ^ 0x12u;
  LODWORD(STACK[0x69A0]) = v245 ^ 0xB5ABE084;
  v319 = v317 ^ LODWORD(STACK[0x64E8]) ^ (8 * ((v317 - ((2 * v317) & 0xDAB5630) + 114666264) ^ v245 ^ 0xB5ABE084));
  v320 = v310 | v309;
  v321 = v306 & 0x62527095 ^ 0x62126014 ^ (v306 ^ 0x90AD8B65) & (v277 ^ 0x9DAD8F6C);
  v322 = (v321 | 0x5311DE66) - (v321 | 0xACEE2199);
  v323 = (v302 + 974449696) ^ 0xD54F32FF;
  v324 = STACK[0x6340];
  LODWORD(STACK[0x6A20]) = v323 + LODWORD(STACK[0x6340]);
  v325 = v323 ^ v324;
  v326 = ((v245 & 4 ^ 0x72545DE) - 272) ^ (v306 >> 7) ^ 0xA208DAF0 ^ (LODWORD(STACK[0x6A40]) - 1518921069);
  v327 = ((v323 ^ v324) - ((2 * (v323 ^ v324)) & 0x2B6FE87E) + 901248063) ^ LODWORD(STACK[0x64B0]);
  v328 = STACK[0x64E0];
  LODWORD(STACK[0x69C0]) = v325;
  v329 = (v325 ^ v328 ^ (4 * v327)) - ((2 * (v325 ^ v328 ^ (4 * v327))) & 0xEB6FE87E);
  LODWORD(STACK[0x64F0]) = ((v300 ^ 0x1F5DBB52) - 193864150) ^ ((v300 ^ 0x5B7F5333) - 1336723895) ^ ((v300 ^ a62) - 831855710);
  v330 = v306 & 0xB97285CB ^ a63 ^ (v306 ^ 0x428D2A35) & (v277 ^ 0x468D7A32);
  v331 = ((((2 * v330) & 0xC70F9A6E) - v330 + 477639368) ^ 0x9D2AB309)
       + (((v303 ^ 0x8614BCD1) - 1661698023) ^ ((v303 ^ 0xDD15F027) - 940192529) ^ ((v303 ^ 0x103D5668) + 182282914));
  LODWORD(STACK[0x64D0]) = v317
                         - (((v245 ^ 0x7ECB5434) + 882854736) ^ ((v245 ^ 0x63E3CEAC) + 699912664) ^ ((v245 ^ 0x6E56D104) + 604163712));
  LODWORD(STACK[0x6A40]) = ((LODWORD(STACK[0x64A8]) ^ 0xAA96C96A) - 270416618) ^ ((LODWORD(STACK[0x64A8]) ^ 0x768482FA)
                                                                                + 871599750) ^ ((LODWORD(STACK[0x64A8]) ^ 0xD3E790FE)
                                                                                              - 1768907646);
  v332 = v273;
  HIDWORD(v314) = *(_DWORD *)(v273 + 4 * ((v245 ^ 0x737E4B9Cu) % 0x101));
  LODWORD(v314) = HIDWORD(v314);
  LODWORD(STACK[0x64A0]) = (v314 >> 25) ^ 0xB2F7C892 ^ ((v314 >> 25) >> 6) ^ ((v314 >> 25) >> 4);
  v333 = LODWORD(STACK[0x6500])
       + 1553266771
       * ((((v245 ^ 0x4DF58F51) + 355318217) ^ ((v245 ^ 0x1E288EB6) + 1190180912) ^ ((v245 ^ 0x58B97BAF) + 6376759))
        - (((v303 ^ 0x3334D59) - 1365010002) ^ ((v303 ^ 0x8D876052) + 538424487) ^ ((v303 ^ a64) + 268620470)))
       + v315
       + v316
       + 1281216187;
  v334 = (v333 ^ 0x781BCDDC) & (2 * (v333 & 0x7D43CC1D)) ^ v333 & 0x7D43CC1D;
  v335 = ((2 * (v333 ^ 0xE29DC5CC)) ^ a65) & (v333 ^ 0xE29DC5CC) ^ (2 * (v333 ^ 0xE29DC5CC)) & 0x9FDE09D0;
  v336 = (v335 ^ 0x1F1C0080) & (4 * v334) ^ v334;
  v337 = ((4 * (v335 ^ 0x80420851)) ^ 0x7F782744) & (v335 ^ 0x80420851) ^ (4 * (v335 ^ 0x80420851)) & 0x9FDE09D0;
  v338 = (v337 ^ 0x1F580140) & (16 * v336) ^ v336;
  v339 = ((16 * (v337 ^ a66)) ^ 0xFDE09D10) & (v337 ^ a66) ^ (16 * (v337 ^ a66)) & 0x9FDE09D0;
  v340 = v338 ^ 0x9FDE09D1 ^ (v339 ^ 0x9DC009C1) & (v338 << 8);
  LODWORD(STACK[0x69F0]) = v333 ^ (2
                                 * ((v340 << 16) & 0x1FDE0000 ^ v340 ^ ((v340 << 16) ^ 0x9D10000) & (((v339 ^ 0x21E00C1) << 8) & 0x9FDE0000 ^ 0x1D60000 ^ (((v339 ^ 0x21E00C1) << 8) ^ 0x5E090000) & (v339 ^ 0x21E00C1))));
  v341 = STACK[0x68B0];
  v342 = STACK[0xD678];
  v343 = *(_QWORD *)(STACK[0xD678] + 8 * (0x4E036F37 % STACK[0x68B0]));
  v344 = *(_QWORD *)(STACK[0xD678]
                   + 8
                   * (((((v343 ^ 0x9E4B054432B42273) - 0x400B9880B343143DLL) ^ ((v343 ^ 0x95D65621366392B9)
                                                                                - 0x4B96CBE5B794A4F7) ^ ((v343 ^ 0x56C00E38598AED97) + 0x777F6C0327822427))
                     - 0x7CE23F6620280758)
                    % STACK[0x68B0]));
  v345 = *(_QWORD *)(STACK[0xD678]
                   + 8
                   * (((((v344 ^ 0x69005EE947B8CA38) - 0x79BEED3AFA635123) ^ ((v344 ^ 0x87585E87B74C9235)
                                                                                + 0x681912ABF568F6D2) ^ ((v344 ^ 0xB3055D33ADA90550) + 0x5C44111FEF8D61B5))
                     + 0x4DE3EE8FA45666A8)
                    % STACK[0x68B0]));
  STACK[0x6A80] = STACK[0xD678];
  v346 = *(_QWORD *)(v342
                   + 8
                   * (((((v345 ^ 0xBB2A104A45AB41CCLL) - 0xF33F9322AB86729) ^ ((v345 ^ 0x82F3ACB0988775C9)
                                                                               - 0x36EA45C8F794532CLL) ^ ((v345 ^ 0x6484E1A780716958) + 0x2F62F720109DB043))
                     - 0x16BB4BDAAFC502C5)
                    % v341));
  v347 = ((2 * ((2 * (_DWORD)v346) & 0x9C0D7F7C ^ 0x80055148)) | 0x90BF6CD34016CLL)
       - ((2 * (_DWORD)v346) & 0x9C0D7F7C ^ 0x80055148)
       - 0x485FB669A00B6;
  v348 = (v347 & 0x85C9840803E8 ^ 0x33C949C800400281) + (v347 & 0x400367AB7FC16 ^ 0x402362097C017) - 2;
  LODWORD(v346) = ((((v346 ^ 0x6B9375FD048C576CLL) - 0x5CE17689E80A4D88) ^ ((v346 ^ 0x2729891CA39726E0)
                                                                            - 0x105B8A684F113C04) ^ ((v346 ^ 0x11E7A1BCB440936FLL) - 0x2695A2C858C6898BLL))
                 + 0x215439941508D861
                 + (((v348 ^ 0x60FC120578DF54FLL) + 0x7D1D2BB0E31843BBLL) ^ ((v348 ^ 0x36AD7EF6945C5DD8)
                                                                           + 0x4DBF946620C9EB2ELL) ^ ((v348 ^ 0x36B71D39D9101C7uLL) + 0x78799B432904B733)))
                % v341;
  LODWORD(v342) = STACK[0x6AA0];
  LODWORD(STACK[0x69D0]) = (2 * LODWORD(STACK[0x6AA0])) & 0x8D1C7A52;
  LODWORD(STACK[0x64D8]) = v342 + 1183726889;
  v349 = STACK[0x68F0];
  LODWORD(STACK[0x6940]) = (LODWORD(STACK[0x68F0]) - 2 * (STACK[0x6AB0] & 3) - 1666830253) ^ LODWORD(STACK[0x6668]);
  STACK[0x68D0] = v318;
  HIDWORD(v314) = *(_DWORD *)(v332 + 4 * v318);
  LODWORD(v314) = HIDWORD(v314);
  LODWORD(v348) = v314 >> 25;
  LODWORD(STACK[0x6340]) = 870225221 * (LODWORD(STACK[0x6660]) - LODWORD(STACK[0x6510]));
  LODWORD(STACK[0x6350]) = LODWORD(STACK[0x6A30]) + 1;
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x6A10]) - 1394345410;
  LODWORD(STACK[0x6950]) = LODWORD(STACK[0x69E0]) + 1;
  LODWORD(STACK[0x6388]) = -240353121 - 1971922015 * v301;
  LODWORD(STACK[0x6348]) = ((_DWORD)v299 - 2086214895) ^ 0xB97E5CCE;
  LODWORD(STACK[0x64C8]) = (2 * (v307 + 1)) & 0xEE5B907E;
  LODWORD(STACK[0x6380]) = v307 + 1999489088;
  LODWORD(STACK[0x6500]) = (2 * v319) & 0x8DAB5630;
  LODWORD(STACK[0x64A8]) = v319 - 959075560;
  LODWORD(STACK[0x6320]) = LODWORD(STACK[0x6518]) - v313;
  LODWORD(STACK[0x64E0]) = v322 - 1393679975;
  LODWORD(STACK[0x6318]) = (2 * v326) & 0x1B9AA3C;
  LODWORD(STACK[0x6300]) = v326 - 2133011170;
  LODWORD(STACK[0x6310]) = v329 + 1974989887;
  LODWORD(STACK[0x6328]) = -522055703 * LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x6308]) = 1556706939 * v331;
  LODWORD(STACK[0x6960]) = v320;
  LODWORD(STACK[0x6518]) = 1948242523 * (v320 - v313);
  LODWORD(v342) = *(_DWORD *)&v292[4 * (v317 % 0x101)];
  LODWORD(STACK[0x6338]) = -v304;
  LODWORD(STACK[0x69E0]) = LODWORD(STACK[0x6A90]) ^ 0x32323232;
  LODWORD(STACK[0x6A70]) = ((((v346 - ((2 * v346) & 0x2AF9FA94) - 1250099894) ^ 0x9C11D799) + 475570132) ^ (((v346 - ((2 * v346) & 0x2AF9FA94) - 1250099894) ^ 0x976A570E) + 388177733) ^ (((v346 - ((2 * v346) & 0x2AF9FA94) - 1250099894) ^ a67) + 1045312920))
                         + 886824565;
  v350 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v272) - 12);
  LODWORD(STACK[0x68C0]) = v348;
  LODWORD(STACK[0x62E0]) = v348 >> 4;
  STACK[0x64E8] = (unint64_t)v292;
  LODWORD(v341) = *(_DWORD *)&v292[4 * v349];
  LODWORD(STACK[0x62D8]) = v341;
  LODWORD(v341) = v341 ^ 0xE1AF374F;
  LODWORD(STACK[0x62D0]) = v341;
  LODWORD(STACK[0x62E8]) = 4 * v341;
  LODWORD(STACK[0x6330]) = v342;
  LODWORD(STACK[0x62F0]) = v342 ^ 0xE1AF374F;
  LODWORD(STACK[0x62F8]) = 4 * (v342 ^ 0xE1AF374F);
  LODWORD(STACK[0x6A10]) = LODWORD(STACK[0x6A60]) ^ 0x660B2A21;
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x6890]) ^ 0x60CB96B9;
  LODWORD(STACK[0x6AB0]) = LODWORD(STACK[0x6900]) ^ 0x7E1D698F;
  return v350(1779536758);
}

uint64_t sub_100C6A674(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8)
{
  unsigned int v8;
  _BOOL4 v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  int v111;
  unint64_t v112;
  int v113;
  int v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  int v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BOOL4 v173;
  unint64_t v174;

  v8 = STACK[0x6A70];
  v9 = LODWORD(STACK[0x6A70]) < a1;
  v10 = STACK[0x6A50];
  v11 = (LODWORD(STACK[0x6A50]) + 985736244) & 0xC53EEFFF;
  v12 = *(_QWORD *)(STACK[0x6A80]
                  + 8 * ((a6 | ((unint64_t)(a6 < 0x7ED1FB20) << 32)) + 0x36277A4DCE85F705)
                  + 0x4EC42D8D95406ED8);
  STACK[0x6AA0] = v11;
  v13 = 0x2BDBBD57BB49DD97
      * (((v12 ^ 0xBB4C7BBA554C0735) - 0x53A68CA43706F288) ^ (v11
                                                                - 0x12B454A964D5FF43
                                                                + (v12 ^ 0xFA5EA3B7069F2059)) ^ ((v12 ^ 0x1C4F85500E8E7A31)
                                                                                                 + 0xB5A8DB1933B7074))
      - 0x490B242C6DEE78F4;
  v14 = ((2 * (v13 ^ 0xACB78A5DB5FD3F4ELL)) ^ 0x3C8047AAD8E294B4) & (v13 ^ 0xACB78A5DB5FD3F4ELL) ^ (2 * (v13 ^ 0xACB78A5DB5FD3F4ELL)) & 0x1E4023D56C714A5ALL;
  v15 = (v13 ^ 0xA8F7894C95ED7546) & (2 * (v13 & 0xB2F7A988D98C7514)) ^ v13 & 0xB2F7A988D98C7514;
  v16 = v14 ^ 0x240205524114A4ALL;
  v17 = (v14 ^ 0x1C00020048600010) & (4 * v15) ^ v15;
  v18 = ((4 * v16) ^ 0x79008F55B1C52968) & v16 ^ (4 * v16) & 0x1E4023D56C714A58;
  v19 = (v18 ^ 0x1800035520410840) & (16 * v17) ^ v17;
  v20 = ((16 * (v18 ^ 0x64020804C304212)) ^ 0xE4023D56C714A5A0) & (v18 ^ 0x64020804C304212) ^ (16 * (v18 ^ 0x64020804C304212)) & 0x1E4023D56C714A50;
  v21 = (((v20 ^ 0x1A40028128614A5ALL) << 8) ^ 0x4023D56C714A5A00) & (v20 ^ 0x1A40028128614A5ALL) ^ ((v20 ^ 0x1A40028128614A5ALL) << 8) & 0x1E4023D56C714A00;
  v22 = (v20 ^ 0x400215444100000) & (v19 << 8) ^ v19 ^ 0x1E4023D56C714A5ALL ^ (v21 ^ 0x14460400000) & (((v20 ^ 0x400215444100000) & (v19 << 8) ^ v19) << 16);
  v23 = v13 ^ (2
             * ((v22 << 32) & 0x1E4023D500000000 ^ v22 ^ ((v22 << 32) ^ 0x6C714A5A00000000) & (((v21 ^ 0x1E4022910C31005ALL) << 16) & 0x1E4023D500000000 ^ 0x1C00038400000000 ^ (((v21 ^ 0x1E4022910C31005ALL) << 16) ^ 0x23D56C7100000000) & (v21 ^ 0x1E4022910C31005ALL))));
  v24 = (a6 | ((unint64_t)(a6 < 0x7ED1FB20) << 32))
      - 0x4FD3E219592DE9C1
      + (((v23 ^ a7 ^ 0x21FEC84F310E5F3CLL) + 0x2FE6D2BA9C1A7EA5) ^ ((v23 ^ a7 ^ 0x104646E2910AB68ALL)
                                                                     + 0x1E5E5C173C1E9713) ^ ((v23 ^ a7 ^ 0xA74F642FA16A0816)
                                                                                              - 0x56A88125F381D671));
  v25 = (v24 ^ 0xB6FBFD348DCD8E44) & (2 * (v24 & 0xB6E3F1A12DE12E68)) ^ v24 & 0xB6E3F1A12DE12E68;
  v26 = ((2 * (v24 ^ 0xBEFC9C76964F9E14)) ^ 0x103EDBAF775D60F8) & (v24 ^ 0xBEFC9C76964F9E14) ^ (2 * (v24 ^ 0xBEFC9C76964F9E14)) & 0x81F6DD7BBAEB07CLL;
  v27 = ((4 * (v26 ^ 0x801245088A29004)) ^ 0x207DB75EEEBAC1F0) & (v26 ^ 0x801245088A29004) ^ (4
                                                                                                  * (v26 ^ 0x801245088A29004)) & 0x81F6DD7BBAEB07CLL;
  v28 = (v27 ^ 0x1D2556AAAA8060) & (16 * ((v26 ^ 0x1E4985330C2060) & (4 * v25) ^ v25)) ^ (v26 ^ 0x1E4985330C2060) & (4 * v25) ^ v25;
  v29 = ((16 * (v27 ^ 0x80248811104300CLL)) ^ 0x81F6DD7BBAEB07C0) & (v27 ^ 0x80248811104300CLL) ^ (16 * (v27 ^ 0x80248811104300CLL)) & 0x81F6DD7BBAEB070;
  v30 = (v29 ^ 0x164D53BAAA0000) & (v28 << 8) ^ v28;
  v31 = (((v29 ^ 0x80920840104B03CLL) << 8) ^ 0x1F6DD7BBAEB07C00) & (v29 ^ 0x80920840104B03CLL) ^ ((v29 ^ 0x80920840104B03CLL) << 8) & 0x81F6DD7BBAEB000;
  v32 = v30 ^ 0x81F6DD7BBAEB07CLL ^ (v31 ^ 0x80D4593AAA00000) & (v30 << 16);
  v33 = (v24 ^ (2
              * ((v32 << 32) & 0x81F6DD700000000 ^ v32 ^ ((v32 << 32) ^ 0x3BAEB07C00000000) & (((v31 ^ 0x122844110E807CLL) << 16) & 0x81F6DD700000000 ^ 0x8445100000000 ^ (((v31 ^ 0x122844110E807CLL) << 16) ^ 0x6DD7BBAE00000000) & (v31 ^ 0x122844110E807CLL))))) >> 32;
  v34 = v24
      + 0x68EAD8375078C169
      + (((v33 ^ 0x3EAB57AF296C8CEELL) - 0x394D44D6E8B6F19ELL) ^ ((v33 ^ 0x5118E272CBE6CD26) - 0x56FEF10B0A3CB056) ^ ((v33 ^ 0x6FB3B5DD544B2B6ELL) - 0x6855A6A49591561ELL));
  v35 = ((2 * (v34 ^ 0x88E484F84198218BLL)) ^ 0xBA7750362A374ABCLL) & (v34 ^ 0x88E484F84198218BLL) ^ (2 * (v34 ^ 0x88E484F84198218BLL)) & 0xDD3BA81B151BA55ELL;
  v36 = v35 ^ 0x4508A8091508A542;
  v37 = (v34 ^ 0x1DE8CFA409B2081) & (2 * (v34 & 0x55DF2CE3548384D5)) ^ v34 & 0x55DF2CE3548384D5;
  v38 = (v35 ^ 0x983100120012001CLL) & (4 * v37) ^ v37;
  v39 = ((4 * v36) ^ 0x74EEA06C546E9578) & v36 ^ (4 * v36) & 0xDD3BA81B151BA55CLL;
  v40 = (v39 ^ 0x542AA008140A8550) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x8911081301112006)) ^ 0xD3BA81B151BA55E0) & (v39 ^ 0x8911081301112006) ^ (16 * (v39 ^ 0x8911081301112006)) & 0xDD3BA81B151BA550;
  v42 = (v41 ^ 0xD13A8011111A0500) & (v40 << 8) ^ v40;
  v43 = (((v41 ^ 0xC01280A0401A01ELL) << 8) ^ 0x3BA81B151BA55E00) & (v41 ^ 0xC01280A0401A01ELL) ^ ((v41 ^ 0xC01280A0401A01ELL) << 8) & 0xDD3BA81B151BA500;
  v44 = v42 ^ 0xDD3BA81B151BA55ELL ^ (v43 ^ 0x1928081111010000) & (v42 << 16);
  v45 = (v34 ^ (2
              * ((v44 << 32) & 0x5D3BA81B00000000 ^ v44 ^ ((v44 << 32) ^ 0x151BA55E00000000) & (((v43 ^ 0xC413A00A041AA15ELL) << 16) & 0x5D3BA81B00000000 ^ 0x5520A80000000000 ^ (((v43 ^ 0xC413A00A041AA15ELL) << 16) ^ 0x281B151B00000000) & (v43 ^ 0xC413A00A041AA15ELL))))) >> 16;
  v46 = v34
      - (((v45 ^ 0xAE2CB6BD358F70B8) + 0x5BC09A818BD95DDBLL) ^ ((v45 ^ 0x890259E520AD2E85) + 0x7CEE75D99EFB03E8) ^ ((v45 ^ 0x272E2AC729C32089) - 0x2D3DF904686AF214))
      - 0x33182CEEC642578ELL;
  v47 = (v46 ^ 0x7CD64A711C79B232) & (2 * (v46 & 0x7EE443759D7D303ALL)) ^ v46 & 0x7EE443759D7D303ALL;
  v48 = ((2 * (v46 ^ 0x401E4AF004119266)) ^ 0x7DF4130B32D944B8) & (v46 ^ 0x401E4AF004119266) ^ (2 * (v46 ^ 0x401E4AF004119266)) & 0x3EFA0985996CA25CLL;
  v49 = ((4 * (v48 ^ 0x20A08848924A244)) ^ 0xFBE8261665B28970) & (v48 ^ 0x20A08848924A244) ^ (4
                                                                                                  * (v48 ^ 0x20A08848924A244)) & 0x3EFA0985996CA25CLL;
  v50 = (v49 ^ 0x3AE8000401208040) & (16 * ((v48 ^ 0x3CB0010010480018) & (4 * v47) ^ v47)) ^ (v48 ^ 0x3CB0010010480018) & (4 * v47) ^ v47;
  v51 = ((16 * (v49 ^ 0x4120981984C220CLL)) ^ 0xEFA0985996CA25C0) & (v49 ^ 0x4120981984C220CLL) ^ (16 * (v49 ^ 0x4120981984C220CLL)) & 0x3EFA0985996CA250;
  v52 = (v51 ^ 0x2EA0080190482000) & (v50 << 8) ^ v50;
  v53 = (((v51 ^ 0x105A01840924821CLL) << 8) ^ 0xFA0985996CA25C00) & (v51 ^ 0x105A01840924821CLL) ^ ((v51 ^ 0x105A01840924821CLL) << 8) & 0x3EFA0985996CA200;
  v54 = v52 ^ 0x3EFA0985996CA25CLL ^ (v53 ^ 0x3A08018108200000) & (v52 << 16);
  v55 = (v46 ^ (2
              * ((v54 << 32) & 0x3EFA098500000000 ^ v54 ^ ((v54 << 32) ^ 0x196CA25C00000000) & (((v53 ^ 0x4F20804914CA25CLL) << 16) & 0x3EFA098500000000 ^ 0x367A008100000000 ^ (((v53 ^ 0x4F20804914CA25CLL) << 16) ^ 0x985996C00000000) & (v53 ^ 0x4F20804914CA25CLL))))) >> 8;
  v56 = v46
      - 0x60A4792C18C8E474
      + (((v55 ^ 0x6908981732C31D69) - 0xF8354132F659AD8) ^ ((v55 ^ 0x482DCD2CDE53C8E9) - 0x2EA60128C3F54F58) ^ ((v55 ^ 0x2116956B9A3F71F4) - 0x479D596F8799F645));
  v57 = ((2 * (v56 ^ 0xB0B8981362633F44)) ^ 0xEDF0A1CA86580E6ELL) & (v56 ^ 0xB0B8981362633F44) ^ (2 * (v56 ^ 0xB0B8981362633F44)) & 0xF6F850E5432C0736;
  v58 = v57 ^ 0x1208502541240111;
  v59 = (v56 ^ 0x343888F7206F3F62) & (2 * (v56 & 0x4640C8F6214F3873)) ^ v56 & 0x4640C8F6214F3873;
  v60 = (v57 ^ 0x200000C002080204) & (4 * v59) ^ v59;
  v61 = ((4 * v58) ^ 0xDBE143950CB01CDCLL) & v58 ^ (4 * v58) & 0xF6F850E5432C0734;
  v62 = (v61 ^ 0xD2E0408500200410) & (16 * v60) ^ v60;
  v63 = ((16 * (v61 ^ 0x24181060430C0323)) ^ 0x6F850E5432C07370) & (v61 ^ 0x24181060430C0323) ^ (16 * (v61 ^ 0x24181060430C0323)) & 0xF6F850E5432C0730;
  v64 = (v63 ^ 0x6680004402000300) & (v62 << 8) ^ v62;
  v65 = (((v63 ^ 0x907850A1412C0407) << 8) ^ 0xF850E5432C073700) & (v63 ^ 0x907850A1412C0407) ^ ((v63 ^ 0x907850A1412C0407) << 8) & 0xF6F850E5432C0700;
  v66 = v56 ^ (2
             * (((v64 ^ 0xF6F850E5432C0737 ^ (v65 ^ 0xF050404100040000) & (v64 << 16)) << 32) & 0x76F850E500000000 ^ v64 ^ 0xF6F850E5432C0737 ^ (v65 ^ 0xF050404100040000) & (v64 << 16) ^ (((v64 ^ 0xF6F850E5432C0737 ^ (v65 ^ 0xF050404100040000) & (v64 << 16)) << 32) ^ 0x432C073700000000) & (((v65 ^ 0x6A810A443280037) << 16) & 0x76F850E500000000 ^ 0x261810C100000000 ^ (((v65 ^ 0x6A810A443280037) << 16) ^ 0x50E5432C00000000) & (v65 ^ 0x6A810A443280037))));
  v67 = v23 ^ 0x77FB6B1914DF4C9ALL;
  LODWORD(v64) = a8 & ((v56 ^ (2
                                           * (v64 ^ 0x432C0737 ^ (v65 ^ 0x40000) & ((_DWORD)v64 << 16)))) >> 2) ^ 0x1EA00B26;
  v68 = 615807012 - (v64 | 0x24B47824) + (v64 | 0xDB4B87DB);
  v69 = (((v66 ^ 0xA145C8BAA687F5ELL) + 0x7BA0F3274E5107FBLL) ^ ((v66 ^ 0xDAC1DA513FFEA808) - 0x548A8A0224382F53) ^ ((v66 ^ 0xFF35EFAC3281E14BLL) - 0x717EBFFF29476610))
      - 0x61F9C0659CAB7A66;
  v70 = (v69 ^ 0xBFF5DC3D43BAE04DLL) & (2 * (v69 & 0xBFF5DEBD0322C94ELL)) ^ v69 & 0xBFF5DEBD0322C94ELL;
  v71 = ((2 * (v69 ^ 0x8957C03543FFE2CDLL)) ^ 0x6D443D1081BA5706) & (v69 ^ 0x8957C03543FFE2CDLL) ^ (2 * (v69 ^ 0x8957C03543FFE2CDLL)) & 0x36A21E8840DD2B82;
  v72 = ((4 * (v71 ^ 0x12A2028840452881)) ^ 0xDA887A210374AE0CLL) & (v71 ^ 0x12A2028840452881) ^ (4 * (v71 ^ 0x12A2028840452881)) & 0x36A21E8840DD2B80;
  v73 = ((16 * (v72 ^ 0x2422048840890183)) ^ 0x6A21E8840DD2B830) & (v72 ^ 0x2422048840890183) ^ (16 * (v72 ^ 0x2422048840890183)) & 0x36A21E8840DD2B80;
  v74 = (v73 ^ 0x2220088000D02800) & (((v72 ^ 0x12801A0000542A00) & (16
                                                                       * ((v71 ^ 0x24001C0000980300) & (4 * v70) ^ v70)) ^ (v71 ^ 0x24001C0000980300) & (4 * v70) ^ v70) << 8) ^ (v72 ^ 0x12801A0000542A00) & (16 * ((v71 ^ 0x24001C0000980300) & (4 * v70) ^ v70)) ^ (v71 ^ 0x24001C0000980300) & (4 * v70) ^ v70;
  v75 = (((v73 ^ 0x14821608400D0383) << 8) ^ 0xA21E8840DD2B8300) & (v73 ^ 0x14821608400D0383) ^ ((v73 ^ 0x14821608400D0383) << 8) & 0x36A21E8840DD2B00;
  v76 = v74 ^ 0x36A21E8840DD2B83 ^ (v75 ^ 0x2202080040090000) & (v74 << 16);
  v77 = v69 ^ (2
             * ((v76 << 32) & 0x36A21E8800000000 ^ v76 ^ ((v76 << 32) ^ 0x40DD2B8300000000) & (((v75 ^ 0x14A0168800D42883) << 16) & 0x36A21E8800000000 ^ 0x20221E0000000000 ^ (((v75 ^ 0x14A0168800D42883) << 16) ^ 0x1E8840DD00000000) & (v75 ^ 0x14A0168800D42883))));
  v78 = v77 ^ 0xF9AF4886;
  v79 = (a6 | ((unint64_t)(a6 < 0x7ED1FB20) << 32))
      + 0x6005F06A9512C246
      + (((v77 ^ 0xDCF76E51F9AF4886 ^ v67 ^ 0x373AE57947A3B62ALL) - 0x373AE57947A3B62ALL) ^ ((v77 ^ 0xDCF76E51F9AF4886 ^ v67 ^ 0xA4BF8AEDE416CB75)
                                                                                             + 0x5B4075121BE9348BLL) ^ ((v77 ^ 0xDCF76E51F9AF4886 ^ v67 ^ 0x7DCF76F3CD3306ABLL) - 0x7DCF76F3CD3306ABLL));
  v80 = (v79 ^ 0x6E2308F85A01BECDLL) & (2 * (v79 & 0x8E4428FC5AA1BE8ELL)) ^ v79 & 0x8E4428FC5AA1BE8ELL;
  v81 = ((2 * (v79 ^ 0x622B58407F42FBD1)) ^ 0xD8DEE1784BC68ABELL) & (v79 ^ 0x622B58407F42FBD1) ^ (2 * (v79 ^ 0x622B58407F42FBD1)) & 0xEC6F70BC25E3455ELL;
  v82 = ((4 * (v81 ^ 0x2421108424214541)) ^ 0xB1BDC2F0978D157CLL) & (v81 ^ 0x2421108424214541) ^ (4 * (v81 ^ 0x2421108424214541)) & 0xEC6F70BC25E3455CLL;
  v83 = (v82 ^ 0xA02D40B005810540) & (16 * ((v81 ^ 0x4800603001820018) & (4 * v80) ^ v80)) ^ (v81 ^ 0x4800603001820018) & (4 * v80) ^ v80;
  v84 = ((16 * (v82 ^ 0x4C42300C20624003)) ^ 0xC6F70BC25E3455F0) & (v82 ^ 0x4C42300C20624003) ^ (16 * (v82 ^ 0x4C42300C20624003)) & 0xEC6F70BC25E34550;
  v85 = (v84 ^ 0xC467008004204500) & (v83 << 8) ^ v83;
  v86 = (((v84 ^ 0x2808703C21C3000FLL) << 8) ^ 0x6F70BC25E3455F00) & (v84 ^ 0x2808703C21C3000FLL) ^ ((v84 ^ 0x2808703C21C3000FLL) << 8) & 0xEC6F70BC25E34500;
  LODWORD(v72) = a8 & (v77 >> 2) ^ 0x18011603;
  v87 = v85 ^ 0xEC6F70BC25E3455FLL ^ (v86 ^ 0x6C60302421410000) & (v85 << 16);
  v88 = (v79 ^ (2
              * ((v87 << 32) & 0x6C6F70BC00000000 ^ v87 ^ ((v87 << 32) ^ 0x25E3455F00000000) & (((v86 ^ 0x800F409804A2005FLL) << 16) & 0x6C6F70BC00000000 ^ 0xC43501C00000000 ^ (((v86 ^ 0x800F409804A2005FLL) << 16) ^ 0x70BC25E300000000) & (v86 ^ 0x800F409804A2005FLL))))) >> 32;
  v89 = v79
      - 0x40871E045F447E3CLL
      + (((v88 ^ 0x5C4306131216605DLL) - 0x3C2A43F2E0305D33) ^ ((v88 ^ 0x16AACAB31883A104) - 0x76C38F52EAA59C6ALL) ^ ((v88 ^ 0x4AE9CCA014C988E5) - 0x2A808941E6EFB58BLL));
  v90 = ((2 * (v89 ^ 0x63B1CB9895D0DA14)) ^ 0x990A8EF46760D710) & (v89 ^ 0x63B1CB9895D0DA14) ^ (2 * (v89 ^ 0x63B1CB9895D0DA14)) & 0x4C85477A33B06B88;
  v91 = (v89 ^ 0x2FB0CAD89550B91CLL) & (2 * (v89 & 0x2F348CE2A660B19CLL)) ^ v89 & 0x2F348CE2A660B19CLL;
  v92 = v90 ^ 0x4485410A10902888;
  v93 = (v90 ^ 0x800061023004200) & (4 * v91) ^ v91;
  v94 = ((4 * v92) ^ 0x32151DE8CEC1AE20) & v92 ^ (4 * v92) & 0x4C85477A33B06B88;
  v95 = (v94 ^ 0x5056802802A00) & (16 * v93) ^ v93;
  v96 = ((16 * (v94 ^ 0x4C80421231304188)) ^ 0xC85477A33B06B880) & (v94 ^ 0x4C80421231304188) ^ (16 * (v94 ^ 0x4C80421231304188)) & 0x4C85477A33B06B80;
  v97 = (v96 ^ 0x4804472233002800) & (v95 << 8) ^ v95;
  v98 = (((v96 ^ 0x481005800B04308) << 8) ^ 0x85477A33B06B8800) & (v96 ^ 0x481005800B04308) ^ ((v96 ^ 0x481005800B04308) << 8) & 0x4C85477A33B06B00;
  v99 = v97 ^ 0x4C85477A33B06B88 ^ (v98 ^ 0x405423230200000) & (v97 << 16);
  v100 = v89 ^ (2
              * ((v99 << 32) & 0x4C85477A00000000 ^ v99 ^ ((v99 << 32) ^ 0x33B06B8800000000) & (((v98 ^ 0x4880054803906388) << 16) & 0x4C85477A00000000 ^ 0x885444A00000000 ^ (((v98 ^ 0x4880054803906388) << 16) ^ 0x477A33B000000000) & (v98 ^ 0x4880054803906388))));
  v101 = (((v100 ^ 0x5E7BD9E350F23DEBLL) - 0xDCC982F11E43C0CLL) ^ ((v100 ^ 0x46863B2DD02B3E07) - 0x15317AE1913D3FE0) ^ ((v100 ^ 0x1458FA9B89163C69) - 0x47EFBB57C8003D8ELL))
       - ((((v100 >> 16) ^ 0x52A329FE9AAEE6D1) + 0x1DECCD64C26B6047) ^ (((v100 >> 16) ^ 0x40D2A15C1772C01ALL)
                                                                          + 0xF9D45C64FB7468ELL) ^ (((v100 >> 16) ^ 0x12713F9C09DAE7CBLL)
                                                                                                  + 0x5D3EDB06511F615DLL))
       + ((((2 * v100) & 0x773738A7919EB212 ^ 0x7DD4DA55A6114145) + 0x5E47AA31391A81B3) ^ (((2 * v100) & 0x773738A7919EB212 ^ 0xD0CD955C82E5D195)
                                                                                               - 0xCA11AC7E211EE9DLL) ^ (((2 * v100) & 0x773738A7919EB212 ^ 0xCB2C470CA4F410C0) - 0x1740C897C4002FC8))
       - 0x35CB90B01A4F5165;
  v102 = (v101 ^ 0xC2C20C3C5F18BD4CLL) & (2 * (v101 & 0xE2EB293958113D6ELL)) ^ v101 & 0xE2EB293958113D6ELL;
  v103 = ((2 * (v101 ^ 0x43545C0EFF3A8F9CLL)) ^ 0x437EEA6F4E5765E4) & (v101 ^ 0x43545C0EFF3A8F9CLL) ^ (2 * (v101 ^ 0x43545C0EFF3A8F9CLL)) & 0xA1BF7537A72BB2F2;
  v104 = ((4 * (v103 ^ 0xA0811510A1289212)) ^ 0x86FDD4DE9CAECBC8) & (v103 ^ 0xA0811510A1289212) ^ (4 * (v103 ^ 0xA0811510A1289212)) & 0xA1BF7537A72BB2F0;
  v105 = (v104 ^ 0x80BD5416842A82C0) & (16 * ((v103 ^ 0x13C6027000120E0) & (4 * v102) ^ v102)) ^ (v103 ^ 0x13C6027000120E0) & (4 * v102) ^ v102;
  v106 = ((16 * (v104 ^ 0x2102212123013032)) ^ 0x1BF7537A72BB2F20) & (v104 ^ 0x2102212123013032) ^ (16 * (v104 ^ 0x2102212123013032)) & 0xA1BF7537A72BB2F0;
  v107 = (v106 ^ 0x1B75132222B2200) & (v105 << 8) ^ v105;
  v108 = (((v106 ^ 0xA0082405850090D2) << 8) ^ 0xBF7537A72BB2F200) & (v106 ^ 0xA0082405850090D2) ^ ((v106 ^ 0xA0082405850090D2) << 8) & 0xA1BF7537A72BB200;
  v109 = v107 ^ 0xA1BF7537A72BB2F2 ^ (v108 ^ 0xA135352723220000) & (v107 << 16);
  v110 = (v101 ^ (2
                * ((v109 << 32) & 0x21BF753700000000 ^ v109 ^ ((v109 << 32) ^ 0x272BB2F200000000) & (((v108 ^ 0x8A4010840900F2) << 16) & 0x21BF753700000000 ^ 0x88501400000000 ^ (((v108 ^ 0x8A4010840900F2) << 16) ^ 0x7537A72B00000000) & (v108 ^ 0x8A4010840900F2))))) >> 8;
  v111 = ((2 * v72) & 0x1002420A) - v72;
  v112 = v101
       + (((v110 ^ 0x199A5CFEAA30E34BLL) + 0x7E995AA4CFA15BELL) ^ ((v110 ^ 0x407E271CEFCFB7C6) + 0x5E0DEE4809054131) ^ ((v110 ^ 0x5907B84177E912D5) + 0x477471159123E424));
  LODWORD(v101) = v101
                + (((v110 ^ 0xAA30E34B) + 1291457982) ^ ((v110 ^ 0xEFCFB7C6) + 151339313) ^ ((v110 ^ 0x77E912D5)
                                                                                           - 1859918812))
                + 487948160;
  LODWORD(v80) = 2 * (v101 & 0x661F0D3F);
  LODWORD(v110) = ((2 * (v101 ^ 0xB23599DC)) ^ 0xA85529C6) & (v101 ^ 0xB23599DC) ^ (2 * (v101 ^ 0xB23599DC)) & 0xD42A94E2;
  v113 = v110 ^ 0x542A9421;
  LODWORD(v110) = (v110 ^ 0x800000C0) & (4 * (v80 & (v101 ^ 0x761F89BE) ^ v101 & 0x661F0D3F)) ^ v80 & (v101 ^ 0x761F89BE) ^ v101 & 0x661F0D3F;
  LODWORD(v104) = ((4 * v113) ^ 0x50AA538C) & v113 ^ (4 * v113) & 0xD42A94E0;
  LODWORD(v110) = (v104 ^ 0x502A1080) & (16 * v110) ^ v110;
  LODWORD(v104) = ((16 * (v104 ^ 0x84008463)) ^ 0x42A94E30) & (v104 ^ 0x84008463) ^ (16 * (v104 ^ 0x84008463)) & 0xD42A94E0;
  v114 = v104 ^ 0x940290C3;
  LODWORD(v108) = v80 & (v101 ^ 0x745F49BF) ^ v101 & 0x661F0D3F;
  LODWORD(v80) = ((2 * (v101 ^ 0xBC5B41DB)) ^ 0xB48899C8) & (v101 ^ 0xBC5B41DB) ^ (2 * (v101 ^ 0xBC5B41DB)) & 0xDA444CE4;
  LODWORD(v108) = (v80 ^ 0x900008C0) & (4 * v108) ^ v108;
  LODWORD(v80) = ((4 * (v80 ^ 0x4A444424)) ^ 0x69113390) & (v80 ^ 0x4A444424) ^ (4 * (v80 ^ 0x4A444424)) & 0xDA444CE4;
  LODWORD(v108) = (v80 ^ 0x48000080) & (16 * v108) ^ v108;
  LODWORD(v110) = (v104 ^ 0x40280400) & ((_DWORD)v110 << 8) ^ v110;
  LODWORD(v104) = ((16 * (v80 ^ 0x92444C64)) ^ 0xA444CE40) & (v80 ^ 0x92444C64) ^ (16 * (v80 ^ 0x92444C64)) & 0xDA444CE0;
  LODWORD(v110) = v101 ^ (2
                        * (v110 ^ (((v114 << 8) ^ 0x2A940000) & v114 ^ (v114 << 8) & 0xD42A9400) & ((_DWORD)v110 << 16)));
  LODWORD(v104) = v101 ^ (2
                        * ((v104 ^ 0x80444C00) & ((_DWORD)v108 << 8) ^ v108 ^ ((((v104 ^ 0x5A0000A4) << 8) ^ 0x444C0000) & (v104 ^ 0x5A0000A4) ^ ((v104 ^ 0x5A0000A4) << 8) & 0xDA444C00 ^ 0x40440000) & (((v104 ^ 0x80444C00) & ((_DWORD)v108 << 8) ^ v108) << 16)));
  v115 = ((v112 - 0x7847F26D9F63F01DLL) ^ 0xF4EBF5E8A93ED07FLL) & (2
                                                                 * ((v112 - 0x7847F26D9F63F01DLL) & 0xF8F3F5E0CC3E1A7ELL)) ^ (v112 - 0x7847F26D9F63F01DLL) & 0xF8F3F5E0CC3E1A7ELL;
  v116 = ((2 * ((v112 - 0x7847F26D9F63F01DLL) ^ 0x2568FEE8A90AE00FLL)) ^ 0xBB361610CA69F4E2) & ((v112
                                                                                                 - 0x7847F26D9F63F01DLL) ^ 0x2568FEE8A90AE00FLL) ^ (2 * ((v112 - 0x7847F26D9F63F01DLL) ^ 0x2568FEE8A90AE00FLL)) & 0xDD9B0B086534FA70;
  v117 = v116 ^ 0x4489090825140A11;
  v118 = (v116 ^ 0x811202084424F060) & (4 * v115) ^ v115;
  v119 = ((4 * v117) ^ 0x766C2C2194D3E9C4) & v117 ^ (4 * v117) & 0xDD9B0B086534FA70;
  v120 = (v119 ^ 0x540808000410E850) & (16 * v118) ^ v118;
  v121 = ((16 * (v119 ^ 0x8993030861241231)) ^ 0xD9B0B086534FA710) & (v119 ^ 0x8993030861241231) ^ (16 * (v119 ^ 0x8993030861241231)) & 0xDD9B0B086534FA70;
  v122 = (v121 ^ 0xD99000004104A200) & (v120 << 8) ^ v120;
  v123 = (((v121 ^ 0x40B0B0824305861) << 8) ^ 0x9B0B086534FA7100) & (v121 ^ 0x40B0B0824305861) ^ ((v121 ^ 0x40B0B0824305861) << 8) & 0xDD9B0B086534FA00;
  v124 = v122 ^ 0xDD9B0B086534FA71 ^ (v123 ^ 0x990B080024300000) & (v122 << 16);
  v125 = (v112 - 0x7847F26D9F63F01DLL) ^ (2
                                        * ((v124 << 32) & 0x5D9B0B0800000000 ^ v124 ^ ((v124 << 32) ^ 0x6534FA7100000000) & (((v123 ^ 0x4490030841048A71) << 16) & 0x5D9B0B0800000000 ^ 0x54930A0800000000 ^ (((v123 ^ 0x4490030841048A71) << 16) ^ 0xB08653400000000) & (v123 ^ 0x4490030841048A71))));
  v126 = v125 ^ 0xA407254F1C8D048;
  v125 >>= 2;
  LODWORD(v80) = v125 & a8 ^ LODWORD(STACK[0x49C]);
  LODWORD(v104) = v104 ^ ((a8 & (v110 >> 2) ^ 0x18A10D03)
                        - ((2 * (a8 & (v110 >> 2) ^ 0x18A10D03)) & 0x3540744E)
                        - 1694860569) & 0xFFE3FFFF;
  LODWORD(v125) = v80 + (v125 & 0x18013021 ^ 0xD944E0C1);
  LODWORD(v110) = v80 & 0x18013021;
  v127 = v126 ^ v67;
  v128 = ((v127 ^ 0x3F6500CBD5FD38BFLL) - 0x3F6500CBD5FD38BFLL) ^ ((v127 ^ 0x5D2A6A3A04EDF0AFLL) - 0x5D2A6A3A04EDF0AFLL);
  v129 = (v127 ^ 0x40E66ECE333E5BFELL) - 0x40E66ECE333E5BFELL;
  LODWORD(v127) = v125 - v110;
  v130 = (a6 | ((unint64_t)(a6 < 0x7ED1FB20) << 32)) + 0x3A4C26F8328B501CLL + (v128 ^ v129);
  v131 = (v130 ^ 0xC25E9C572AC40021) & (2 * (v130 & 0xE85CDD4730D148B2)) ^ v130 & 0xE85CDD4730D148B2;
  v132 = ((2 * (v130 ^ 0xC24FAED74B448141)) ^ 0x5426E720F72B93E6) & (v130 ^ 0xC24FAED74B448141) ^ (2 * (v130 ^ 0xC24FAED74B448141)) & 0x2A1373907B95C9F2;
  v133 = ((4 * (v132 ^ 0x2A11109008944811)) ^ 0xA84DCE41EE5727CCLL) & (v132 ^ 0x2A11109008944811) ^ (4 * (v132 ^ 0x2A11109008944811)) & 0x2A1373907B95C9F0;
  v134 = (v133 ^ 0x280142006A1501C0) & (16 * ((v132 ^ 0x26300430101C0) & (4 * v131) ^ v131)) ^ (v132 ^ 0x26300430101C0) & (4 * v131) ^ v131;
  v135 = ((16 * (v133 ^ 0x21231901180C833)) ^ 0xA1373907B95C9F30) & (v133 ^ 0x21231901180C833) ^ (16 * (v133 ^ 0x21231901180C833)) & 0x2A1373907B95C9F0;
  v136 = (v135 ^ 0x2013310039148900) & (v134 << 8) ^ v134;
  v137 = (((v135 ^ 0xA004290428140C3) << 8) ^ 0x1373907B95C9F300) & (v135 ^ 0xA004290428140C3) ^ ((v135 ^ 0xA004290428140C3) << 8) & 0x2A1373907B95C900;
  v138 = v136 ^ 0x2A1373907B95C9F3 ^ (v137 ^ 0x213101011810000) & (v136 << 16);
  v139 = (v130 ^ (2
                * ((v138 << 32) & 0x2A13739000000000 ^ v138 ^ ((v138 << 32) ^ 0x7B95C9F300000000) & (((v137 ^ 0x280063806A1408F3) << 16) & 0x2A13739000000000 ^ 0x803000000000000 ^ (((v137 ^ 0x280063806A1408F3) << 16) ^ 0x73907B9500000000) & (v137 ^ 0x280063806A1408F3))))) >> 32;
  v140 = v130
       - 0x3CC14DF1A34B6AE7
       + (((v139 ^ 0x5902F592B5200D27) - 0x2E1734D1E28A6B73) ^ ((v139 ^ 0x6968A67407485D5BLL) - 0x1E7D673750E23B0FLL) ^ ((v139 ^ 0x306A53E65A30E93BLL) - 0x477F92A50D9A8F6FLL));
  v141 = (v140 ^ 0xDAABEC7AD3CF12A9) & (2 * (v140 & 0x9C33EC7C940F92ACLL)) ^ v140 & 0x9C33EC7C940F92ACLL;
  v142 = ((2 * (v140 ^ 0xDA8FF483F3CF33A9)) ^ 0x8D7831FECF81420ALL) & (v140 ^ 0xDA8FF483F3CF33A9) ^ (2 * (v140 ^ 0xDA8FF483F3CF33A9)) & 0x46BC18FF67C0A104;
  v143 = v142 ^ 0x428408012040A105;
  v144 = (v142 ^ 0x1810F640000000) & (4 * v141) ^ v141;
  v145 = ((4 * v143) ^ 0x1AF063FD9F028414) & v143 ^ (4 * v143) & 0x46BC18FF67C0A104;
  v146 = (v145 ^ 0x2B000FD07008000) & (16 * v144) ^ v144;
  v147 = ((16 * (v145 ^ 0x440C180260C02101)) ^ 0x6BC18FF67C0A1050) & (v145 ^ 0x440C180260C02101) ^ (16 * (v145 ^ 0x440C180260C02101)) & 0x46BC18FF67C0A100;
  v148 = (((v147 ^ 0x43C100903C0A105) << 8) ^ 0xBC18FF67C0A10500) & (v147 ^ 0x43C100903C0A105) ^ ((v147 ^ 0x43C100903C0A105) << 8) & 0x46BC18FF67C0A100;
  v149 = (v147 ^ 0x428008F664000000) & (v146 << 8) ^ v146 ^ 0x46BC18FF67C0A105 ^ (v148 ^ 0x418186740800000) & (((v147 ^ 0x428008F664000000) & (v146 << 8) ^ v146) << 16);
  v150 = (v140 ^ (2
                * ((v149 << 32) & 0x46BC18FF00000000 ^ v149 ^ ((v149 << 32) ^ 0x67C0A10500000000) & (((v148 ^ 0x42A400982740A005) << 16) & 0x46BC18FF00000000 ^ 0x4600183F00000000 ^ (((v148 ^ 0x42A400982740A005) << 16) ^ 0x18FF67C000000000) & (v148 ^ 0x42A400982740A005))))) >> 16;
  LODWORD(v147) = (v127 & 0x2A2714D6 ^ 0x22620457) + (v127 & 0x5480EB29);
  v151 = v140
       - (((v150 ^ 0x2C4DE3FE9FD70FE8) + 0x2E908FB7FCE60857) ^ ((v150 ^ 0x83CF20E5EBE027ALL) + 0xAE19E473D8F05C5) ^ ((v150 ^ 0x24718DBB1CE1561CLL) + 0x26ACE1F27FD051A3))
       - 0x510A41D80A74BFB9;
  v152 = ((2 * (v151 ^ 0xE5B8026A997F24A7)) ^ 0x2B48387B88851462) & (v151 ^ 0xE5B8026A997F24A7) ^ (2 * (v151 ^ 0xE5B8026A997F24A7)) & 0x15A41C3DC4428A30;
  v153 = (v151 ^ 0xE5981E46193D2C87) & (2 * (v151 & 0xF01C1E575D3DAE96)) ^ v151 & 0xF01C1E575D3DAE96;
  v154 = v152 ^ 0x14A4040444428A11;
  v155 = (v152 ^ 0x183980000020) & (4 * v153) ^ v153;
  v156 = ((4 * v154) ^ 0x569070F7110A28C4) & v154 ^ (4 * v154) & 0x15A41C3DC4428A30;
  v157 = ((16 * (v156 ^ 0x1240C08C4408231)) ^ 0x5A41C3DC4428A310) & (v156 ^ 0x1240C08C4408231) ^ (16 * (v156 ^ 0x1240C08C4408231)) & 0x15A41C3DC4428A30;
  v158 = (v157 ^ 0x1000001C44008200) & (((v156 ^ 0x1480103500020800) & (16 * v155) ^ v155) << 8) ^ (v156 ^ 0x1480103500020800) & (16 * v155) ^ v155;
  v159 = (((v157 ^ 0x5A41C2180420821) << 8) ^ 0xA41C3DC4428A3100) & (v157 ^ 0x5A41C2180420821) ^ ((v157 ^ 0x5A41C2180420821) << 8) & 0x15A41C3DC4428A00;
  v160 = (v151 ^ (2
                * (((v158 ^ 0x15A41C3DC4428A31 ^ (v159 ^ 0x4041C0440020000) & (v158 << 16)) << 32) & 0x15A41C3D00000000 ^ v158 ^ 0x15A41C3DC4428A31 ^ (v159 ^ 0x4041C0440020000) & (v158 << 16) ^ (((v158 ^ 0x15A41C3DC4428A31 ^ (v159 ^ 0x4041C0440020000) & (v158 << 16)) << 32) ^ 0x44428A3100000000) & (((v159 ^ 0x11A0003984408A31) << 16) & 0x15A41C3D00000000 ^ 0x180183D00000000 ^ (((v159 ^ 0x11A0003984408A31) << 16) ^ 0x1C3DC44200000000) & (v159 ^ 0x11A0003984408A31))))) >> 8;
  v161 = v151
       + 0x57AA2DC54268FC1
       + (((v160 ^ 0xFEDEFB15078E8406) - 0x1B828EF8C527B1A0) ^ ((v160 ^ 0x5563E1876512FE2ALL) + 0x4FC06B9558443474) ^ ((v160 ^ 0xAB6E4EA42C49C296) - 0x4E323B49EEE0F730));
  v162 = (v147 - 1) ^ v126;
  v163 = ((2 * (v161 ^ 0x8E323B74F7BB54E3)) ^ 0xBC054C44C451FE24) & (v161 ^ 0x8E323B74F7BB54E3) ^ (2 * (v161 ^ 0x8E323B74F7BB54E3)) & 0x5E02A6226228FF12;
  v164 = v163 ^ 0x4202A22222280112;
  v165 = (v161 ^ 0x8E321954D59B03E1) & (2 * (v161 & 0xD0309D569593ABF1)) ^ v161 & 0xD0309D569593ABF1;
  v166 = (v163 ^ 0x4004000FE00) & (4 * v165) ^ v165;
  v167 = ((4 * v164) ^ 0x780A988988A3FC48) & v164 ^ (4 * v164) & 0x5E02A6226228FF10;
  v168 = ((16 * (v167 ^ 0x600262262080312)) ^ 0xE02A6226228FF120) & (v167 ^ 0x600262262080312) ^ (16 * (v167 ^ 0x600262262080312)) & 0x5E02A6226228FF10;
  v169 = (v168 ^ 0x400222222208F100) & (((v167 ^ 0x580280000020FC00) & (16 * v166) ^ v166) << 8) ^ (v167 ^ 0x580280000020FC00) & (16 * v166) ^ v166;
  v170 = (((v168 ^ 0x1E00840040200E12) << 8) ^ 0x2A6226228FF1200) & (v168 ^ 0x1E00840040200E12) ^ ((v168 ^ 0x1E00840040200E12) << 8) & 0x5E02A6226228FF00;
  v171 = v169 ^ 0x5E02A6226228FF12 ^ (v170 ^ 0x202222220280000) & (v169 << 16);
  v172 = v161 ^ (2
               * ((v171 << 32) & 0x5E02A62200000000 ^ v171 ^ ((v171 << 32) ^ 0x6228FF1200000000) & (((v170 ^ 0x5C0084004200ED12) << 16) & 0x5E02A62200000000 ^ 0x5800840200000000 ^ (((v170 ^ 0x5C0084004200ED12) << 16) ^ 0x2622622800000000) & (v170 ^ 0x5C0084004200ED12))));
  LODWORD(v161) = a8 & ((v161 ^ (2 * (_DWORD)v171)) >> 2) ^ 0x94A29064;
  LODWORD(STACK[0x6A90]) ^= v66 ^ v68 ^ v104 ^ 0xB41C230C ^ (201572956 - (v161 | 0xC03C25C) + (v161 | 0xF3FC3DA3)) ^ v172;
  v173 = a6 - 348153769 < v8;
  if (v9 != a6 - 348153769 < 0x6A119376)
    v173 = v9;
  v174 = (((v172 ^ 0xCE5A801308814910) - 0x1452DA808A42FBBELL) ^ ((v172 ^ 0x634E562543FD133) + 0x23C3400E29039C63) ^ ((v172 ^ 0x205AF8670D7CCDF6) + 0x5AD5D0B704080A8))
       - 0x1172534883587AE3;
  LODWORD(STACK[0x6AB0]) ^= v78 ^ (v111 - 151986518) & 0xFEBFFFFF ^ v162 ^ 0x14F86461 ^ (((v174 >> 2) & a8 ^ 0x18211A20)
                                                                                       + ((v174 >> 2) & 0x10812704 ^ 0x86A544)
                                                                                       - (((v174 >> 2) & a8 ^ 0x18211A20) & 0x10812704)) ^ v174;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((17202 * !v173) ^ v10)) - 12))();
}

uint64_t sub_100C6D8C4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = LODWORD(STACK[0x62D8]) ^ (32 * LODWORD(STACK[0x62D0]));
  LODWORD(STACK[0x64D8]) -= LODWORD(STACK[0x69D0]);
  LODWORD(STACK[0x69D0]) = LODWORD(STACK[0x6340]) + LODWORD(STACK[0x6528]);
  v3 = LODWORD(STACK[0x68C0]) ^ 0x4D08376D ^ (LODWORD(STACK[0x68C0]) >> 6) ^ LODWORD(STACK[0x62E0]);
  LODWORD(STACK[0x68C0]) = ~LODWORD(STACK[0x6980]);
  LODWORD(STACK[0x6340]) = LODWORD(STACK[0x6350]) + v3;
  LODWORD(STACK[0x6350]) = LODWORD(STACK[0x6A00]) + LODWORD(STACK[0x6530]) - LODWORD(STACK[0x68F0]);
  LODWORD(STACK[0x6528]) = LODWORD(STACK[0x6950]) + (v2 ^ LODWORD(STACK[0x62E8]) ^ 0xE9FED3A2);
  LODWORD(STACK[0x6A00]) = LODWORD(STACK[0x6380]) - LODWORD(STACK[0x64C8]);
  LODWORD(STACK[0x6950]) = LODWORD(STACK[0x6320]) + LODWORD(STACK[0x6960]);
  LODWORD(STACK[0x64C8]) = LODWORD(STACK[0x6300]) - LODWORD(STACK[0x6318]);
  LODWORD(STACK[0x6380]) = LODWORD(STACK[0x6310]) ^ LODWORD(STACK[0x64B0]);
  LODWORD(STACK[0x6530]) = LODWORD(STACK[0x6970])
                         + LODWORD(STACK[0x6308])
                         + 522055703 * LODWORD(STACK[0x6498])
                         + LODWORD(STACK[0x6328])
                         + 346257949 * LODWORD(STACK[0x64D0])
                         - 1521915018;
  LODWORD(STACK[0x64D0]) = LODWORD(STACK[0x63E8])
                         + LODWORD(STACK[0x64A0])
                         + (LODWORD(STACK[0x6330]) ^ (32 * LODWORD(STACK[0x62F0])) ^ LODWORD(STACK[0x62F8]) ^ 0xE9FED3A2)
                         + 1629211531 * (LODWORD(STACK[0x6348]) + LODWORD(STACK[0x6338]))
                         + 1748539849;
  LODWORD(STACK[0x6970]) = LODWORD(STACK[0x69F0]) ^ 0x8730B282;
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x6A60]) ^ 0x61023526;
  STACK[0x6A80] = STACK[0xD678];
  LODWORD(STACK[0x6A70]) = (((LODWORD(STACK[0x6910]) ^ 0xC3874A84) - 496589380) ^ ((LODWORD(STACK[0x6910]) ^ 0x834CCBEC)
                                                                                 - 1565711148) ^ ((LODWORD(STACK[0x6910]) ^ 0x5318D7A1)
                                                                                                + 1928935583))
                         - 1823759582;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)STACK[0x6AA0]))(a1, a2, 3313392921);
}

uint64_t sub_100C6DCA8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  int v147;
  unint64_t v148;
  int v149;
  int v150;

  v9 = STACK[0x6A70];
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x6A70]) < a3;
  v10 = STACK[0x6AA0] - 4303;
  v11 = (v8 | ((unint64_t)(v8 < 0x7ED1FB20) << 32)) + 0x101C6416F02B6760;
  STACK[0x6A60] = v10;
  v12 = 0x2BDBBD57BB49DD97
      * (((*(_QWORD *)(STACK[0x6A80] + 8 * (v10 + v11) + 0x7F1CDF4488142780) ^ 0xA65049A54C65497FLL)
        + 0x1E5C0D86013380D0) ^ ((*(_QWORD *)(STACK[0x6A80] + 8 * (v10 + v11) + 0x7F1CDF4488142780) ^ 0x640226FAF50B4D15)
                                 - 0x23F19D2647A27B5ALL) ^ ((*(_QWORD *)(STACK[0x6A80]
                                                                       + 8 * (v10 + v11)
                                                                       + 0x7F1CDF4488142780) ^ 0x9F0F3202E4335937)
                                                          + 0x27037621A9659088))
      + 0x574B732BDD6068C5;
  v13 = (v12 ^ 0x1B70B30595A6695) & (2 * (v12 & 0xA5B453A55A5B48D9)) ^ v12 & 0xA5B453A55A5B48D9;
  v14 = ((2 * (v12 ^ 0x4BFF8B3A4DCAE735)) ^ 0xDC97B13E2F235FD8) & (v12 ^ 0x4BFF8B3A4DCAE735) ^ (2 * (v12 ^ 0x4BFF8B3A4DCAE735)) & 0xEE4BD89F1791AFECLL;
  v15 = ((4 * (v14 ^ 0x224848811090A024)) ^ 0xB92F627C5E46BFB0) & (v14 ^ 0x224848811090A024) ^ (4 * (v14 ^ 0x224848811090A024)) & 0xEE4BD89F1791AFECLL;
  v16 = (v15 ^ 0xA80B401C1600AFA0) & (16 * ((v14 ^ 0x8C03901E030107C8) & (4 * v13) ^ v13)) ^ (v14 ^ 0x8C03901E030107C8) & (4 * v13) ^ v13;
  v17 = ((16 * (v15 ^ 0x464098830191004CLL)) ^ 0xE4BD89F1791AFEC0) & (v15 ^ 0x464098830191004CLL) ^ (16 * (v15 ^ 0x464098830191004CLL)) & 0xEE4BD89F1791AFE0;
  v18 = (v17 ^ 0xE40988911110AE00) & (v16 << 8) ^ v16;
  v19 = (((v17 ^ 0xA42500E0681012CLL) << 8) ^ 0x4BD89F1791AFEC00) & (v17 ^ 0xA42500E0681012CLL) ^ ((v17 ^ 0xA42500E0681012CLL) << 8) & 0xEE4BD89F1791AF00;
  v20 = v18 ^ 0xEE4BD89F1791AFECLL ^ (v19 ^ 0x4A48981711810000) & (v18 << 16);
  v21 = v12 ^ (2
             * ((v20 << 32) & 0x6E4BD89F00000000 ^ v20 ^ ((v20 << 32) ^ 0x1791AFEC00000000) & (((v19 ^ 0xA4034088061003ECLL) << 16) & 0x6E4BD89F00000000 ^ 0x2640C80E00000000 ^ (((v19 ^ 0xA4034088061003ECLL) << 16) ^ 0x589F179100000000) & (v19 ^ 0xA4034088061003ECLL))));
  v22 = (v8 | ((unint64_t)(v8 < 0x7ED1FB20) << 32))
      - 0x1A69C1FEBEC3466BLL
      + (((v21 ^ a7 ^ 0x498F8B588F45BD11) + 0x4B9D60F46310BE71) ^ ((v21 ^ a7 ^ 0x7B4BA1FA0E7DE11FLL)
                                                                     + 0x79594A56E228E27FLL) ^ ((v21 ^ a7 ^ 0x47E4D921F4404B0FLL)
                                                                                              + 0x45F6328D1815486FLL));
  v23 = (v22 ^ 0x13B705EEA684A6EBLL) & (2 * (v22 & 0xA337A9CEA6C436EALL)) ^ v22 & 0xA337A9CEA6C436EALL;
  v24 = ((2 * (v22 ^ 0x179347E6EB84A7FBLL)) ^ 0x6949DC509A812222) & (v22 ^ 0x179347E6EB84A7FBLL) ^ (2 * (v22 ^ 0x179347E6EB84A7FBLL)) & 0xB4A4EE284D409110;
  v25 = v24 ^ 0x94A4222845409111;
  v26 = (v24 ^ 0xCC0008000000) & (4 * v23) ^ v23;
  v27 = ((4 * v25) ^ 0xD293B8A135024444) & v25 ^ (4 * v25) & 0xB4A4EE284D409110;
  v28 = (v27 ^ 0x9080A82005000000) & (16 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0x2424460848409111)) ^ 0x4A4EE284D4091110) & (v27 ^ 0x2424460848409111) ^ (16 * (v27 ^ 0x2424460848409111)) & 0xB4A4EE284D409110;
  v30 = (v29 ^ 0x4E20044001100) & (v28 << 8) ^ v28;
  v31 = (((v29 ^ 0xB4A00C2809408001) << 8) ^ 0xA4EE284D40911100) & (v29 ^ 0xB4A00C2809408001) ^ ((v29 ^ 0xB4A00C2809408001) << 8) & 0xB4A4EE284D409100;
  v32 = v30 ^ 0xB4A4EE284D409111 ^ (v31 ^ 0xA4A4280840000000) & (v30 << 16);
  v33 = (v22 ^ (2
              * ((v32 << 32) & 0x34A4EE2800000000 ^ v32 ^ ((v32 << 32) ^ 0x4D40911100000000) & (((v31 ^ 0x1000C6200D408011) << 16) & 0x34A4EE2800000000 ^ 0x1084A22800000000 ^ (((v31 ^ 0x1000C6200D408011) << 16) ^ 0x6E284D4000000000) & (v31 ^ 0x1000C6200D408011))))) >> 32;
  v34 = v22
      - 0x196A6A2AB4DB44C8
      + (((v33 ^ 0xCCC1F67383BFF2C4) - 0x129FBDDA2D0EB209) ^ ((v33 ^ 0x8E6FCBC81C89ADDELL) - 0x50318061B238ED13) ^ ((v33 ^ 0x42AE3DBB5D492A84) + 0x630F89ED0C0795B7));
  v35 = ((2 * (v34 ^ 0x9F481F1858635DCLL)) ^ 0x25E9BCA69BD709B2) & (v34 ^ 0x9F481F1858635DCLL) ^ (2
                                                                                                  * (v34 ^ 0x9F481F1858635DCLL)) & 0x92F4DE534DEB84D8;
  v36 = (v34 ^ 0x1BF41FB0854D35D4) & (2 * (v34 & 0x9B005FA2C86DB105)) ^ v34 & 0x9B005FA2C86DB105;
  v37 = v35 ^ 0x9214425144288449;
  v38 = (v35 ^ 0x9C0201C30010) & (4 * v36) ^ v36;
  v39 = ((4 * v37) ^ 0x4BD3794D37AE1364) & v37 ^ (4 * v37) & 0x92F4DE534DEB84D8;
  v40 = (v39 ^ 0x2D0584105AA0040) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x9024861248418499)) ^ 0x2F4DE534DEB84D90) & (v39 ^ 0x9024861248418499) ^ (16 * (v39 ^ 0x9024861248418499)) & 0x92F4DE534DEB84D0;
  v42 = (v41 ^ 0x244C4104CA80400) & (v40 << 8) ^ v40;
  v43 = (((v41 ^ 0x90B01A4301438049) << 8) ^ 0xF4DE534DEB84D900) & (v41 ^ 0x90B01A4301438049) ^ ((v41 ^ 0x90B01A4301438049) << 8) & 0x92F4DE534DEB8400;
  v44 = v42 ^ 0x92F4DE534DEB84D9 ^ (v43 ^ 0x90D4524149800000) & (v42 << 16);
  v45 = (v34 ^ (2
              * ((v44 << 32) & 0x12F4DE5300000000 ^ v44 ^ ((v44 << 32) ^ 0x4DEB84D900000000) & (((v43 ^ 0x2208C12046B04D9) << 16) & 0x12F4DE5300000000 ^ 0xA4921000000000 ^ (((v43 ^ 0x2208C12046B04D9) << 16) ^ 0x5E534DEB00000000) & (v43 ^ 0x2208C12046B04D9))))) >> 16;
  v46 = v34
      - (((v45 ^ 0x60C7CCE09CE6D999) + 0x1C5EE2E520590EF8) ^ ((v45 ^ 0x2554D8385358FDD1) + 0x59CDF63DEFE72AC0) ^ ((v45 ^ 0x4593ABF0241877F2) + 0x390A85F598A7A09DLL));
  v47 = ((v46 + 0x7C17718837F16327) ^ 0x1B387E27C7C19AB2) & (2
                                                               * ((v46 + 0x7C17718837F16327) & 0x9B827F47E795D2B3)) ^ (v46 + 0x7C17718837F16327) & 0x9B827F47E795D2B3;
  v48 = ((2 * ((v46 + 0x7C17718837F16327) ^ 0x83CEC2B80C21EB0)) ^ 0x277D26D8CEAF9806) & ((v46
                                                                                              + 0x7C17718837F16327) ^ 0x83CEC2B80C21EB0) ^ (2 * ((v46 + 0x7C17718837F16327) ^ 0x83CEC2B80C21EB0)) & 0x93BE936C6757CC02;
  v49 = v48 ^ 0x9082912421504401;
  v50 = (v48 ^ 0x218020806078800) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0x4EFA4DB19D5F300CLL) & v49 ^ (4 * v49) & 0x93BE936C6757CC00;
  v52 = (v51 ^ 0x2BA012005570000) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x9104924C6200CC03)) ^ 0x3BE936C6757CC030) & (v51 ^ 0x9104924C6200CC03) ^ (16 * (v51 ^ 0x9104924C6200CC03)) & 0x93BE936C6757CC00;
  v54 = (v53 ^ 0x13A812446554C000) & (v52 << 8) ^ v52;
  v55 = (((v53 ^ 0x8016812802030C03) << 8) ^ 0xBE936C6757CC0300) & (v53 ^ 0x8016812802030C03) ^ ((v53 ^ 0x8016812802030C03) << 8) & 0x93BE936C6757CC00;
  v56 = v54 ^ 0x93BE936C6757CC03 ^ (v55 ^ 0x9292006447440000) & (v54 << 16);
  v57 = ((v46 + 0x7C17718837F16327) ^ (2
                                       * ((v56 << 32) & 0x13BE936C00000000 ^ v56 ^ ((v56 << 32) ^ 0x6757CC0300000000) & (((v55 ^ 0x12C93082013CC03) << 16) & 0x13BE936C00000000 ^ 0x92902800000000 ^ (((v55 ^ 0x12C93082013CC03) << 16) ^ 0x136C675700000000) & (v55 ^ 0x12C93082013CC03))))) >> 8;
  v58 = v21 ^ 0x2B273882A96E25DFLL;
  v59 = v46
      + (((v57 ^ 0xA654B21B92958E4ELL) - 0x2A985E821A481F9ALL) ^ ((v57 ^ 0x86DBD9AF154AFC78) - 0xA1735369D976DACLL) ^ ((v57 ^ 0x2035B9ED18F6487CLL) + 0x5306AA8B6FD42658))
      - 0x44629AA675388700;
  v60 = ((2 * (v59 ^ 0xE3F50FAB368E058CLL)) ^ 0x8E6D4186C1A8072CLL) & (v59 ^ 0xE3F50FAB368E058CLL) ^ (2 * (v59 ^ 0xE3F50FAB368E058CLL)) & 0x4736A0C360D40396;
  v61 = (v60 ^ 0x4604008240840000) & (4
                                      * ((v59 ^ 0xA2F30F6B161A0598) & (2 * (v59 & 0xA4C3AF68565A061ALL)) ^ v59 & 0xA4C3AF68565A061ALL)) ^ (v59 ^ 0xA2F30F6B161A0598) & (2 * (v59 & 0xA4C3AF68565A061ALL)) ^ v59 & 0xA4C3AF68565A061ALL;
  v62 = ((4 * (v60 ^ 0x4112A04120540092)) ^ 0x1CDA830D83500E58) & (v60 ^ 0x4112A04120540092) ^ (4 * (v60 ^ 0x4112A04120540092)) & 0x4736A0C360D40394;
  v63 = (v62 ^ 0x412800100500200) & (16 * v61) ^ v61;
  v64 = ((16 * (v62 ^ 0x432420C260840186)) ^ 0x736A0C360D403960) & (v62 ^ 0x432420C260840186) ^ (16 * (v62 ^ 0x432420C260840186)) & 0x4736A0C360D40390;
  v65 = (v64 ^ 0x4322000200400100) & (v63 << 8) ^ v63;
  v66 = (((v64 ^ 0x414A0C160940296) << 8) ^ 0x36A0C360D4039600) & (v64 ^ 0x414A0C160940296) ^ ((v64 ^ 0x414A0C160940296) << 8) & 0x4736A0C360D40300;
  v67 = v65 ^ 0x4736A0C360D40396 ^ (v66 ^ 0x620804040000000) & (v65 << 16);
  v68 = v59 ^ (2
             * ((v67 << 32) & 0x4736A0C300000000 ^ v67 ^ ((v67 << 32) ^ 0x60D4039600000000) & (((v66 ^ 0x4116208320D40196) << 16) & 0x4736A0C300000000 ^ 0x4734800300000000 ^ (((v66 ^ 0x4116208320D40196) << 16) ^ 0x20C360D400000000) & (v66 ^ 0x4116208320D40196))));
  v69 = v68 ^ 0x937EC1083439BC89;
  v68 >>= 2;
  LODWORD(v46) = v68 & 0x4011D27 ^ 0xC15FC435;
  LODWORD(v49) = v68 & 0x1AA02200 ^ 0x10802201;
  v70 = (v8 | ((unint64_t)(v8 < 0x7ED1FB20) << 32))
      - 0x616ACD6EAA90BFE3
      + (((v69 ^ v58 ^ 0x81211163E4C71805) + 0x7EDEEE9C1B38E7FBLL) ^ ((v69 ^ v58 ^ 0x291976536A05F682)
                                                                      - 0x291976536A05F682) ^ ((v69 ^ v58 ^ 0xCFC782D3F11F61E6)
                                                                                               + 0x30387D2C0EE09E1ALL));
  v71 = (2 * (v70 & 0xC96AB351AB9C5424)) & (v70 ^ 0x655A715D019D33F6) ^ v70 & 0xC96AB351AB9C5424 ^ ((2 * (v70 & 0xC96AB351AB9C5424)) & 0x8010420002002040 | 0x820800800000380);
  v72 = (2 * (v70 ^ 0x655A715D019D33F6)) & 0xAC30C20CAA0167D2 ^ 0xA4104204AA012052 ^ ((2
                                                                                           * (v70 ^ 0x655A715D019D33F6)) ^ 0x586184195402CFA4) & (v70 ^ 0x655A715D019D33F6);
  v73 = (4 * v71) & 0xAC30C20CAA0167D0 ^ v71 ^ ((4 * v71) ^ 0x2082002000000E00) & v72;
  v74 = (4 * v72) & 0xAC30C20CAA0167D0 ^ 0xC30C20C02006092 ^ ((4 * v72) ^ 0xB0C30832A8059F48) & v72;
  v75 = (16 * v73) & 0xAC30C20CAA0167D0 ^ v73 ^ ((16 * v73) ^ 0x8208008000005800) & v74;
  v76 = (16 * v74) & 0xAC30C20CAA0167D0 ^ 0x2C30C2040A0102D2 ^ ((16 * v74) ^ 0xC30C20CAA0167D20) & v74;
  v77 = (v75 << 8) & 0xAC30C20CAA016700 ^ v75 ^ ((v75 << 8) ^ 0x2080080000458000) & v76;
  v78 = (v76 << 8) & 0xAC30C20CAA016700 ^ 0x8C30C204AA0025D2 ^ ((v76 << 8) ^ 0x30C20CAA0167D200) & v76;
  LODWORD(v46) = v46 + v49;
  v79 = v77 ^ (v77 << 16) & 0xAC30C20CAA010000 ^ ((v77 << 16) ^ 0x8008000145800000) & v78 ^ 0xA4104204AA002252;
  v80 = (v70 ^ (2
              * ((v79 << 32) & 0x2C30C20C00000000 ^ v79 ^ ((v79 << 32) ^ 0x2A0167D200000000) & ((v78 << 16) & 0x2C30C20C00000000 ^ 0x2C30400C00000000 ^ ((v78 << 16) ^ 0x420CAA0100000000) & v78)))) >> 32;
  LODWORD(v77) = v46 - 1;
  v81 = v70
      + 0x649F402403FC237CLL
      + (((v80 ^ 0x96CF5099A4EB8498) - 0x6BBC0B9D5603BC25) ^ ((v80 ^ 0x2C30675DC7DB76A3) + 0x2EBCC3A6CACCB1E2) ^ ((v80 ^ 0xBAFF37C4A23B4173) - 0x478C6CC050D379CELL));
  v82 = (v81 ^ 0x69BECDA99B9B3818) & (2 * (v81 & 0x623ECE31DB83BC9DLL)) ^ v81 & 0x623ECE31DB83BC9DLL;
  v83 = ((2 * (v81 ^ 0x2DFBD5CA8A9B3102)) ^ 0x9F8A37F6A2311B3ELL) & (v81 ^ 0x2DFBD5CA8A9B3102) ^ (2 * (v81 ^ 0x2DFBD5CA8A9B3102)) & 0x4FC51BFB51188D9ELL;
  v84 = ((4 * (v83 ^ 0x4045080951088481)) ^ 0x3F146FED4462367CLL) & (v83 ^ 0x4045080951088481) ^ (4 * (v83 ^ 0x4045080951088481)) & 0x4FC51BFB51188D9CLL;
  v85 = (v84 ^ 0xF040BE940000410) & (16 * ((v83 ^ 0x98011C20010001CLL) & (4 * v82) ^ v82)) ^ (v83 ^ 0x98011C20010001CLL) & (4 * v82) ^ v82;
  v86 = ((16 * (v84 ^ 0x40C1101211188983)) ^ 0xFC51BFB51188D9F0) & (v84 ^ 0x40C1101211188983) ^ (16 * (v84 ^ 0x40C1101211188983)) & 0x4FC51BFB51188D90;
  v87 = (v86 ^ 0x4C411BB111088900) & (v85 << 8) ^ v85;
  v88 = (((v86 ^ 0x384004A4010040FLL) << 8) ^ 0xC51BFB51188D9F00) & (v86 ^ 0x384004A4010040FLL) ^ ((v86 ^ 0x384004A4010040FLL) << 8) & 0x4FC51BFB51188D00;
  v89 = v88 ^ 0xAC400AA4110009FLL;
  v90 = (v88 ^ 0x45011B5110080000) & (v87 << 16);
  LODWORD(v88) = v77 ^ 0xC57DF433;
  v91 = (v81 ^ (2
              * (((v87 ^ 0x4FC51BFB51188D9FLL ^ v90) << 32) & 0x4FC51BFB00000000 ^ v87 ^ 0x4FC51BFB51188D9FLL ^ v90 ^ (((v87 ^ 0x4FC51BFB51188D9FLL ^ v90) << 32) ^ 0x51188D9F00000000) & ((v89 << 16) & 0x4FC51BFB00000000 ^ 0x44040AE300000000 ^ ((v89 << 16) ^ 0x1BFB511800000000) & v89)))) >> 16;
  v92 = v81
      - (((v91 ^ 0xBA1E80C6061A4B0ALL) - 0x778886DD343C5617) ^ ((v91 ^ 0xD8514FC64B4AACADLL) - 0x15C749DD796CB1B0) ^ ((v91 ^ 0x624FB0B4A7A19E15) + 0x502649506A787CF8));
  v93 = ((v92 - 0x4F99B0DD894A65CALL) ^ 0xF35AA41F0BE4B9B9) & (2
                                                               * ((v92 - 0x4F99B0DD894A65CALL) & 0xE442055F8BF6BDB8)) ^ (v92 - 0x4F99B0DD894A65CALL) & 0xE442055F8BF6BDB8;
  v94 = ((2 * ((v92 - 0x4F99B0DD894A65CALL) ^ 0xFB5EA4B61D20A0A9)) ^ 0x3E3943D32DAC3A22) & ((v92
                                                                                               - 0x4F99B0DD894A65CALL) ^ 0xFB5EA4B61D20A0A9) ^ (2 * ((v92 - 0x4F99B0DD894A65CALL) ^ 0xFB5EA4B61D20A0A9)) & 0x1F1CA1E996D61D10;
  v95 = v94 ^ 0x104A02892520511;
  v96 = (v94 ^ 0x121801C004841800) & (4 * v93) ^ v93;
  v97 = ((4 * v95) ^ 0x7C7287A65B587444) & v95 ^ (4 * v95) & 0x1F1CA1E996D61D10;
  v98 = (v97 ^ 0x1C1081A012501400) & (16 * v96) ^ v96;
  v99 = ((16 * (v97 ^ 0x30C204984860911)) ^ 0xF1CA1E996D61D110) & (v97 ^ 0x30C204984860911) ^ (16 * (v97 ^ 0x30C204984860911)) & 0x1F1CA1E996D61D10;
  v100 = (v99 ^ 0x1108008904401100) & (v98 << 8) ^ v98;
  v101 = (((v99 ^ 0xE14A16092960C01) << 8) ^ 0x1CA1E996D61D1100) & (v99 ^ 0xE14A16092960C01) ^ ((v99 ^ 0xE14A16092960C01) << 8) & 0x1F1CA1E996D61D00;
  v102 = v100 ^ 0x1F1CA1E996D61D11 ^ (v101 ^ 0x1C00A18096140000) & (v100 << 16);
  v103 = (v102 << 32) & 0x1F1CA1E900000000 ^ v102 ^ ((v102 << 32) ^ 0x16D61D1100000000) & (((v101 ^ 0x31C006900C20C11) << 16) & 0x1F1CA1E900000000 ^ 0x1E14212900000000 ^ (((v101 ^ 0x31C006900C20C11) << 16) ^ 0x21E996D600000000) & (v101 ^ 0x31C006900C20C11));
  v104 = v88 - ((2 * v88) & 0x5443240);
  v105 = v92
       + ((((((v92 - 0x4F99B0DD894A65CALL) ^ (2 * v103)) >> 8) ^ 0x41B74186D995F656) - 0x1F5B005370308BC2) ^ (((((v92 - 0x4F99B0DD894A65CALL) ^ (2 * v103)) >> 8) ^ 0x8FFC3AB246DE59D6) + 0x2EEF84981084DBBELL) ^ (((((v92 - 0x4F99B0DD894A65CALL) ^ (2 * v103)) >> 8) ^ 0xCEBD287011EDF507) + 0x6FAE965A47B7776DLL))
       - 0x5DEAE3E903969E91;
  v106 = (v105 ^ 0x6AFFBBA984CBB234) & (2 * (v105 & 0xCFE302DD6EBBB34)) ^ v105 & 0xCFE302DD6EBBB34;
  v107 = ((2 * (v105 ^ 0x723FBBE9098EB67CLL)) ^ 0xFD831789BECA1A90) & (v105 ^ 0x723FBBE9098EB67CLL) ^ (2 * (v105 ^ 0x723FBBE9098EB67CLL)) & 0x7EC18BC4DF650D48;
  v108 = ((4 * (v107 ^ 0x240884441250548)) ^ 0xFB062F137D943520) & (v107 ^ 0x240884441250548) ^ (4 * (v107 ^ 0x240884441250548)) & 0x7EC18BC4DF650D48;
  v109 = (v108 ^ 0x7A000B005D040500) & (16 * ((v107 ^ 0x748109809E400808) & (4 * v106) ^ v106)) ^ (v107 ^ 0x748109809E400808) & (4 * v106) ^ v106;
  v110 = ((16 * (v108 ^ 0x4C180C482610848)) ^ 0xEC18BC4DF650D480) & (v108 ^ 0x4C180C482610848) ^ (16 * (v108 ^ 0x4C180C482610848)) & 0x7EC18BC4DF650D40;
  v111 = (((v110 ^ 0x12C1038009250948) << 8) ^ 0xC18BC4DF650D4800) & (v110 ^ 0x12C1038009250948) ^ ((v110 ^ 0x12C1038009250948) << 8) & 0x7EC18BC4DF650D00;
  v112 = v111 ^ 0x3E400B009A600548;
  v113 = (v110 ^ 0x6C008844D6400400) & (v109 << 8) ^ v109 ^ 0x7EC18BC4DF650D48 ^ (v111 ^ 0x408180C445050000) & (((v110 ^ 0x6C008844D6400400) & (v109 << 8) ^ v109) << 16);
  v114 = v105 ^ (2
               * ((v113 << 32) & 0x7EC18BC400000000 ^ v113 ^ ((v113 << 32) ^ 0x5F650D4800000000) & ((v112 << 16) & 0x7EC18BC400000000 ^ 0x7401008000000000 ^ ((v112 << 16) ^ 0xBC4DF6500000000) & v112)));
  v115 = v114 ^ 0x9C5DBA91;
  LODWORD(v108) = a8 & (v114 >> 2) ^ 0xB6100824;
  v116 = (v8 | ((unint64_t)(v8 < 0x7ED1FB20) << 32))
       - 0x22F23F5B6B065483
       + (((v114 ^ 0xA6725A1C9C5DBA91 ^ v58 ^ 0x40FD4E9FBA726E8FLL) - 0x40FD4E9FBA726E8FLL) ^ ((v114 ^ 0xA6725A1C9C5DBA91 ^ v58 ^ 0x9AB370E13E892F17)
                                                                                               + 0x654C8F1EC176D0E9) ^ ((v114 ^ 0xA6725A1C9C5DBA91 ^ v58 ^ 0x6FC49A47AC916873) - 0x6FC49A47AC916873));
  v117 = ((2 * (v116 ^ 0x6D29BFDB45BFB79FLL)) ^ 0x6AAAB89EA24269A2) & (v116 ^ 0x6D29BFDB45BFB79FLL) ^ (2 * (v116 ^ 0x6D29BFDB45BFB79FLL)) & 0xB5555C4F512134D0;
  v118 = v117 ^ 0x9555444151211451;
  v119 = (v116 ^ 0xDD78FBD3449EB30FLL) & (2 * (v116 & 0xD87CE394149E834ELL)) ^ v116 & 0xD87CE394149E834ELL;
  v120 = (v117 ^ 0x2000180000000000) & (4 * v119) ^ v119;
  v121 = ((4 * v118) ^ 0xD555713D4484D344) & v118 ^ (4 * v118) & 0xB5555C4F512134D0;
  v122 = ((16 * (v121 ^ 0x20000C4211212491)) ^ 0x5555C4F512134D10) & (v121 ^ 0x20000C4211212491) ^ (16 * (v121 ^ 0x20000C4211212491)) & 0xB5555C4F512134D0;
  v123 = (v122 ^ 0x1555444510010400) & (((v121 ^ 0x9555500D40001040) & (16 * v120) ^ v120) << 8) ^ (v121 ^ 0x9555500D40001040) & (16 * v120) ^ v120;
  v124 = (((v122 ^ 0xA000180A412030C1) << 8) ^ 0x555C4F512134D100) & (v122 ^ 0xA000180A412030C1) ^ ((v122 ^ 0xA000180A412030C1) << 8) & 0xB5555C4F51213400;
  v125 = v123 ^ 0xB5555C4F512134D1 ^ (v124 ^ 0x15544C4101200000) & (v123 << 16);
  v126 = (v116 ^ (2
                * ((v125 << 32) & 0x35555C4F00000000 ^ v125 ^ ((v125 << 32) ^ 0x512134D100000000) & (((v124 ^ 0xA001100E500124D1) << 16) & 0x35555C4F00000000 ^ 0x21100C4E00000000 ^ (((v124 ^ 0xA001100E500124D1) << 16) ^ 0x5C4F512100000000) & (v124 ^ 0xA001100E500124D1))))) >> 32;
  LODWORD(v122) = v108 | 0x772C129A;
  v127 = v116
       - 0x468FFD3FE8FA9C8FLL
       + (((v126 ^ 0x4BA91269119C6ACBLL) + 0x1D7005314B29FB81) ^ ((v126 ^ 0x68995690331788AFLL) + 0x3E4041C869A219E5) ^ ((v126 ^ 0x233044F9B25F91ECLL) + 0x75E953A1E8EA00A8));
  v128 = (v127 ^ 0xAE3BAC722BB6B819) & (2 * (v127 & 0xC833C97B33373D19)) ^ v127 & 0xC833C97B33373D19;
  v129 = ((2 * (v127 ^ 0xBE1BAE8429B4E039)) ^ 0xEC50CFFE3507BA40) & (v127 ^ 0xBE1BAE8429B4E039) ^ (2 * (v127 ^ 0xBE1BAE8429B4E039)) & 0x762867FF1A83DD20;
  v130 = ((4 * (v129 ^ 0x122820010A804520)) ^ 0xD8A19FFC6A0F7480) & (v129 ^ 0x122820010A804520) ^ (4 * (v129 ^ 0x122820010A804520)) & 0x762867FF1A83DD20;
  v131 = (v130 ^ 0x502007FC0A035400) & (16 * ((v129 ^ 0x600047FC10019800) & (4 * v128) ^ v128)) ^ (v129 ^ 0x600047FC10019800) & (4 * v128) ^ v128;
  v132 = ((16 * (v130 ^ 0x2608600310808920)) ^ 0x62867FF1A83DD200) & (v130 ^ 0x2608600310808920) ^ (16 * (v130 ^ 0x2608600310808920)) & 0x762867FF1A83DD20;
  v133 = (v132 ^ 0x620067F10801D000) & (v131 << 8) ^ v131;
  v134 = (((v132 ^ 0x1428000E12820D20) << 8) ^ 0x2867FF1A83DD2000) & (v132 ^ 0x1428000E12820D20) ^ ((v132 ^ 0x1428000E12820D20) << 8) & 0x762867FF1A83DD00;
  v135 = v133 ^ 0x762867FF1A83DD20 ^ (v134 ^ 0x2020671A02810000) & (v133 << 16);
  v136 = (v127 ^ (2
                * ((v135 << 32) & 0x762867FF00000000 ^ v135 ^ ((v135 << 32) ^ 0x1A83DD2000000000) & (((v134 ^ 0x560800E51802DD20) << 16) & 0x762867FF00000000 ^ 0x1000657C00000000 ^ (((v134 ^ 0x560800E51802DD20) << 16) ^ 0x67FF1A8300000000) & (v134 ^ 0x560800E51802DD20uLL))))) >> 16;
  LODWORD(v134) = -1999377051 - (v108 | 0x88D3ED65);
  v137 = v127
       - (((v136 ^ 0x7F801BBB7C63A59FLL) - 0x1E3A61A1BB69101ALL) ^ ((v136 ^ 0x2E45F07A00A33B9CLL) - 0x4FFF8A60C7A98E19) ^ ((v136 ^ 0x51C5EBA2F0059833) - 0x307F91B8370F2DB6));
  v138 = ((2 * ((v137 - 0x328FC03CEA2DFD8ALL) ^ 0x9283476FA4EE3614)) ^ 0x171490A2EAF761F4) & ((v137
                                                                                                 - 0x328FC03CEA2DFD8ALL) ^ 0x9283476FA4EE3614) ^ (2 * ((v137 - 0x328FC03CEA2DFD8ALL) ^ 0x9283476FA4EE3614)) & 0xB8A4851757BB0FALL;
  v139 = ((v137 - 0x328FC03CEA2DFD8ALL) ^ 0x90814F3E85C536CCLL) & (2
                                                                 * ((v137 - 0x328FC03CEA2DFD8ALL) & 0x99090F3ED19586EELL)) ^ (v137 - 0x328FC03CEA2DFD8ALL) & 0x99090F3ED19586EELL;
  v140 = v138 ^ 0x88A48511508900ALL;
  v141 = (v138 ^ 0x407220F0) & (4 * v139) ^ v139;
  v142 = ((4 * v140) ^ 0x2E292145D5EEC3E8) & v140 ^ (4 * v140) & 0xB8A4851757BB0F8;
  v143 = (v142 ^ 0xA080041556A80E0) & (16 * v141) ^ v141;
  v144 = ((16 * (v142 ^ 0x182481020113012)) ^ 0xB8A4851757BB0FA0) & (v142 ^ 0x182481020113012) ^ (16 * (v142 ^ 0x182481020113012)) & 0xB8A4851757BB0F0;
  v145 = (((v144 ^ 0x30A48402040B05ALL) << 8) ^ 0x8A4851757BB0FA00) & (v144 ^ 0x30A48402040B05ALL) ^ ((v144 ^ 0x30A48402040B05ALL) << 8) & 0xB8A4851757BB000;
  v146 = (v144 ^ 0x8800011553B0000) & (v143 << 8) ^ v143 ^ 0xB8A4851757BB0FALL ^ (v145 ^ 0xA08405171300000) & (((v144 ^ 0x8800011553B0000) & (v143 << 8) ^ v143) << 16);
  v147 = v134 + v122;
  if (LODWORD(STACK[0x6A90]) != v8 + 1185702394 < 0xC57E5D19)
    v150 = STACK[0x6A90];
  else
    v150 = v8 + 1185702394 < v9;
  v148 = ((v137 - 0x328FC03CEA2DFD8ALL) ^ (2
                                         * ((v146 << 32) & 0xB8A485100000000 ^ v146 ^ ((v146 << 32) ^ 0x757BB0FA00000000) & (((v145 ^ 0x1820800044B00FALL) << 16) & 0xB8A485100000000 ^ 0x38A080000000000 ^ (((v145 ^ 0x1820800044B00FALL) << 16) ^ 0x4851757B00000000) & (v145 ^ 0x1820800044B00FALL))))) >> 8;
  v149 = v137
       + (((v148 ^ 0x7E39AD57) - 228613138) ^ ((v148 ^ 0xA58BEFB3) + 703455498) ^ ((v148 ^ 0xE7892003) + 1810837178));
  LODWORD(STACK[0x6AB0]) ^= (v104 + 1660819744) ^ v69 ^ v147 ^ v115 ^ ((v149 - 525354328) >> 2) & 0x1EA13F27 ^ (v149 - 525354328) ^ 0xFE779F36;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(((4 * (v150 ^ 1)) | ((v150 ^ 1) << 7)) ^ STACK[0x6AA0])))();
}

uint64_t sub_100C70AB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50)
{
  uint64_t v50;
  unint64_t v51;
  int v52;
  int v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t (*v145)(void);

  v51 = STACK[0x6A60];
  v52 = (STACK[0x6A60] + 1380901639) & 0xADB11CE9;
  LODWORD(STACK[0x6A90]) = v52;
  LODWORD(STACK[0x6498]) = LODWORD(STACK[0x6940]) << (v52 - 124);
  LODWORD(STACK[0x6940]) = LODWORD(STACK[0x64A8]) - LODWORD(STACK[0x6500]);
  v53 = LODWORD(STACK[0x6538]) + (LODWORD(STACK[0x64F0]) - LODWORD(STACK[0x69C0])) * a49;
  v54 = ((v50 - 0x358C1ADEFB00F53CLL) ^ 0xFA93DA7403281F34) & (2
                                                               * ((v50 - 0x358C1ADEFB00F53CLL) & 0xFCDBDA6693895F39)) ^ (v50 - 0x358C1ADEFB00F53CLL) & 0xFCDBDA6693895F39;
  v55 = ((2 * ((v50 - 0x358C1ADEFB00F53CLL) ^ 0x32B67ABC23389316)) ^ 0x9CDB41B56163985ELL) & ((v50
                                                                                               - 0x358C1ADEFB00F53CLL) ^ 0x32B67ABC23389316) ^ (2 * ((v50 - 0x358C1ADEFB00F53CLL) ^ 0x32B67ABC23389316)) & 0xCE6DA0DAB0B1CC2ELL;
  v56 = v55 ^ 0x4224A04A90904421;
  v57 = (v55 ^ 0x844900900021880CLL) & (4 * v54) ^ v54;
  v58 = ((4 * v56) ^ 0x39B6836AC2C730BCLL) & v56 ^ (4 * v56) & 0xCE6DA0DAB0B1CC2CLL;
  v59 = (v58 ^ 0x824804A80810020) & (16 * v57) ^ v57;
  v60 = ((16 * (v58 ^ 0xC64920903030CC03)) ^ 0xE6DA0DAB0B1CC2F0) & (v58 ^ 0xC64920903030CC03) ^ (16 * (v58 ^ 0xC64920903030CC03)) & 0xCE6DA0DAB0B1CC20;
  v61 = (v60 ^ 0xC648008A0010C000) & (v59 << 8) ^ v59;
  v62 = (((v60 ^ 0x825A050B0A10C0FLL) << 8) ^ 0x6DA0DAB0B1CC2F00) & (v60 ^ 0x825A050B0A10C0FLL) ^ ((v60 ^ 0x825A050B0A10C0FLL) << 8) & 0xCE6DA0DAB0B1CC00;
  v63 = v61 ^ 0xCE6DA0DAB0B1CC2FLL ^ (v62 ^ 0x4C208090B0800000) & (v61 << 16);
  v64 = ((v50 - 0x358C1ADEFB00F53CLL) ^ (2
                                       * ((v63 << 32) & 0x4E6DA0DA00000000 ^ v63 ^ ((v63 << 32) ^ 0x30B1CC2F00000000) & (((v62 ^ 0x824D204A0031C02FLL) << 16) & 0x4E6DA0DA00000000 ^ 0x4E25004A00000000 ^ (((v62 ^ 0x824D204A0031C02FLL) << 16) ^ 0x20DAB0B100000000) & (v62 ^ 0x824D204A0031C02FLL))))) >> 29;
  v65 = v50
      - (((v64 ^ 0x966563691A544E0CLL) - 0x3B6727B85D8ECF57) ^ ((v64 ^ 0xB81D8B8BEC6E8959) - 0x151FCF5AABB40802) ^ ((v64 ^ 0x2E78E8E1F426196ALL) + 0x7C8553CF4C0367CFLL))
      - 0x63CA88E1E1A5885;
  v66 = (v65 ^ 0x869B30378985ADELL) & (2 * (v65 & 0x208A234370DC631ELL)) ^ v65 & 0x208A234370DC631ELL;
  v67 = ((2 * (v65 ^ 0x96DF101793018F6)) ^ 0x53CFA48413D8F7D0) & (v65 ^ 0x96DF101793018F6) ^ (2
                                                                                                  * (v65 ^ 0x96DF101793018F6)) & 0x29E7D24209EC7BE8;
  v68 = v67 ^ 0x2820524208240828;
  v69 = (v67 ^ 0x41800001C010C0) & (4 * v66) ^ v66;
  v70 = ((4 * v68) ^ 0xA79F490827B1EFA0) & v68 ^ (4 * v68) & 0x29E7D24209EC7BE8;
  v71 = (v70 ^ 0x2187400001A06BA0) & (16 * v69) ^ v69;
  v72 = ((16 * (v70 ^ 0x8609242084C1048)) ^ 0x9E7D24209EC7BE80) & (v70 ^ 0x8609242084C1048) ^ (16 * (v70 ^ 0x8609242084C1048)) & 0x29E7D24209EC7BE0;
  v73 = (v72 ^ 0x865000008C43A00) & (v71 << 8) ^ v71;
  v74 = (((v72 ^ 0x2182D24201284168) << 8) ^ 0xE7D24209EC7BE800) & (v72 ^ 0x2182D24201284168) ^ ((v72 ^ 0x2182D24201284168) << 8) & 0x29E7D24209EC7B00;
  v75 = v73 ^ 0x29E7D24209EC7BE8 ^ (v74 ^ 0x21C2420008680000) & (v73 << 16);
  v76 = (v65 ^ (2
              * ((v75 << 32) & 0x29E7D24200000000 ^ v75 ^ ((v75 << 32) ^ 0x9EC7BE800000000) & (((v74 ^ 0x8259042018413E8) << 16) & 0x29E7D24200000000 ^ 0x29A5D20200000000 ^ (((v74 ^ 0x8259042018413E8) << 16) ^ 0x524209EC00000000) & (v74 ^ 0x8259042018413E8))))) >> 14;
  v77 = v65
      - (((v76 ^ 0x80EE2B4AC290DDDCLL) + 0x5E0A002367F0E99CLL) ^ ((v76 ^ 0xB5214EC1CB7E3EB6) + 0x6BC565A86E1E0AF2) ^ ((v76 ^ 0x35CEE7BF84F36F78) - 0x14D53329DE6CA4C0))
      - 0x366E14A885FEE21ELL;
  v78 = (v77 ^ 0xB19DC409DE54FD00) & (2 * (v77 & 0x35DDE1491F58FD92)) ^ v77 & 0x35DDE1491F58FD92;
  v79 = ((2 * (v77 ^ 0xD1360409F4648F24)) ^ 0xC9D7CA81D678E56CLL) & (v77 ^ 0xD1360409F4648F24) ^ (2 * (v77 ^ 0xD1360409F4648F24)) & 0xE4EBE540EB3C72B6;
  v80 = v79 ^ 0x2428254029041292;
  v81 = (v79 ^ 0xC0C38000C2206000) & (4 * v78) ^ v78;
  v82 = ((4 * v80) ^ 0x93AF9503ACF1CAD8) & v80 ^ (4 * v80) & 0xE4EBE540EB3C72B4;
  v83 = (v82 ^ 0x80AB8500A8304280) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x64406040430C3026)) ^ 0x4EBE540EB3C72B60) & (v82 ^ 0x64406040430C3026) ^ (16 * (v82 ^ 0x64406040430C3026)) & 0xE4EBE540EB3C72B0;
  v85 = (v84 ^ 0x44AA4400A3042200) & (v83 << 8) ^ v83;
  v86 = (((v84 ^ 0xA041A14048385096) << 8) ^ 0xEBE540EB3C72B600) & (v84 ^ 0xA041A14048385096) ^ ((v84 ^ 0xA041A14048385096) << 8) & 0xE4EBE540EB3C7200;
  v87 = v85 ^ 0xE4EBE540EB3C72B6 ^ (v86 ^ 0xE0E1404028300000) & (v85 << 16);
  v88 = (v77 ^ (2
              * ((v87 << 32) & 0x64EBE54000000000 ^ v87 ^ ((v87 << 32) ^ 0x6B3C72B600000000) & (((v86 ^ 0x40AA500C30C40B6) << 16) & 0x64EBE54000000000 ^ 0xAB044000000000 ^ (((v86 ^ 0x40AA500C30C40B6) << 16) ^ 0x6540EB3C00000000) & (v86 ^ 0x40AA500C30C40B6))))) >> 5;
  v89 = v77
      + 0x1691DFC03DCB9E2ALL
      + (((v88 ^ 0x77A9967143DA11CDLL) + 0x23480D99F113700ALL) ^ ((v88 ^ 0x96F30028EB8B0236) - 0x3DED643FA6BD9C0DLL) ^ ((v88 ^ 0xE0B84107EE18133CLL) - 0x4BA62510A32E8D07));
  v90 = (v89 ^ 0xAA64B4C1ECAEFD51) & (2 * (v89 & 0xCA48B4D1ED0CFE64)) ^ v89 & 0xCA48B4D1ED0CFE64;
  v91 = ((2 * (v89 ^ 0x3A7495E2ECA79D59)) ^ 0xE07842660356C67ALL) & (v89 ^ 0x3A7495E2ECA79D59) ^ (2 * (v89 ^ 0x3A7495E2ECA79D59)) & 0xF03C213301AB633CLL;
  v92 = v91 ^ 0x1004211100A92105;
  v93 = (v91 ^ 0x6020000200024230) & (4 * v90) ^ v90;
  v94 = ((4 * v92) ^ 0xC0F084CC06AD8CF4) & v92 ^ (4 * v92) & 0xF03C213301AB633CLL;
  v95 = (v94 ^ 0xC030000000A90020) & (16 * v93) ^ v93;
  v96 = ((16 * (v94 ^ 0x300C213301026309)) ^ 0x3C213301AB633D0) & (v94 ^ 0x300C213301026309) ^ (16 * (v94 ^ 0x300C213301026309)) & 0xF03C213301AB6330;
  v97 = (v96 ^ 0x13000A22300) & (v95 << 8) ^ v95;
  v98 = (((v96 ^ 0xF03C20030109402DLL) << 8) ^ 0x3C213301AB633D00) & (v96 ^ 0xF03C20030109402DLL) ^ ((v96 ^ 0xF03C20030109402DLL) << 8) & 0xF03C213301AB6300;
  v99 = v97 ^ 0xF03C213301AB633DLL ^ (v98 ^ 0x3020210101230000) & (v97 << 16);
  v100 = v89 ^ (2
              * ((v99 << 32) & 0x703C213300000000 ^ v99 ^ ((v99 << 32) ^ 0x1AB633D00000000) & (((v98 ^ 0xC01C00320088423DLL) << 16) & 0x703C213300000000 ^ 0x500C201000000000 ^ (((v98 ^ 0xC01C00320088423DLL) << 16) ^ 0x213301AB00000000) & (v98 ^ 0xC01C00320088423DLL))));
  v101 = ((v100 ^ 0x99450C2C9FE32F5CLL) + 0x7A194E1FCAA03A40) ^ ((v100 ^ 0x92D58FB4D01C8878) + 0x7189CD87855F9D1CLL) ^ ((v100 ^ 0x21F0374DA1A59F3ALL) - 0x3D538A810B1975A6);
  LODWORD(v99) = ((v100 >> 2) & 0x6010503 ^ 0xC00244D2) + ((v100 >> 2) & 0x18A03A24 ^ 0x802821) - 1;
  v102 = ((v101 + 0x7EA7C5D928F75D64) ^ 0xB2902D48CB5F5922) & (2
                                                                 * ((v101 + 0x7EA7C5D928F75D64) & 0xBA90316AC39F6103)) ^ (v101 + 0x7EA7C5D928F75D64) & 0xBA90316AC39F6103;
  v103 = ((2 * ((v101 + 0x7EA7C5D928F75D64) ^ 0x86906D9DCD59D926)) ^ 0x7800B9EE1D8D704ALL) & ((v101
                                                                                                 + 0x7EA7C5D928F75D64) ^ 0x86906D9DCD59D926) ^ (2 * ((v101 + 0x7EA7C5D928F75D64) ^ 0x86906D9DCD59D926)) & 0x3C005CF70EC6B824;
  v104 = v103 ^ 0x400441102428825;
  v105 = (v103 ^ 0x380008E60C840000) & (4 * v102) ^ v102;
  v106 = ((4 * v104) ^ 0xF00173DC3B1AE094) & v104 ^ (4 * v104) & 0x3C005CF70EC6B824;
  v107 = (v106 ^ 0x300050D40A02A000) & (16 * v105) ^ v105;
  v108 = ((16 * (v106 ^ 0xC000C2304C41821)) ^ 0xC005CF70EC6B8250) & (v106 ^ 0xC000C2304C41821) ^ (16 * (v106 ^ 0xC000C2304C41821)) & 0x3C005CF70EC6B820;
  v109 = (v108 ^ 0x4C700C428000) & (v107 << 8) ^ v107;
  v110 = (((v108 ^ 0x3C00108702843825) << 8) ^ 0x5CF70EC6B82500) & (v108 ^ 0x3C00108702843825) ^ ((v108 ^ 0x3C00108702843825) << 8) & 0x3C005CF70EC6B800;
  v111 = v109 ^ 0x3C005CF70EC6B825 ^ (v110 ^ 0x540606800000) & (v109 << 16);
  v112 = v101
       + 0x3937F743EC96BE68
       + ((((v101 + 0x7EA7C5D928F75D64) ^ (2
                                           * ((v111 << 32) & 0x3C005CF700000000 ^ v111 ^ ((v111 << 32) ^ 0xEC6B82500000000) & (((v110 ^ 0x3C0008F108469825) << 16) & 0x3C005CF700000000 ^ 0x2000503100000000 ^ (((v110 ^ 0x3C0008F108469825) << 16) ^ 0x5CF70EC600000000) & (v110 ^ 0x3C0008F108469825))))) >> 28) ^ 0xFFFFFFF256F47312);
  v113 = v112 + (v112 >> 15) - ((v112 + (v112 >> 15)) >> 7);
  v114 = v113
       - 0x1169993D3BD78268
       + ((v113 - 0x1169993D3BD78268) >> 29)
       + ((v113 - 0x1169993D3BD78268 + ((v113 - 0x1169993D3BD78268) >> 29)) >> 8)
       + 0x408218BBE0077F59;
  v115 = (v114 ^ 0xBF7DE6315FFC0437) & (2 * (v114 & 0xBF7DE7441FF880A7)) ^ v114 & 0xBF7DE7441FF880A7;
  v116 = ((2 * (v114 ^ 0xF7C4E8B1688C0435)) ^ 0x91721FEAEEE90924) & (v114 ^ 0xF7C4E8B1688C0435) ^ (2 * (v114 ^ 0xF7C4E8B1688C0435)) & 0x48B90FF577748492;
  v117 = v116 ^ 0x4889001511148492;
  v118 = (v116 ^ 0x300F2066600000) & (4 * v115) ^ v115;
  v119 = ((4 * v117) ^ 0x22E43FD5DDD21248) & v117 ^ (4 * v117) & 0x48B90FF577748490;
  v120 = (v119 ^ 0xA00FD555500000) & (16 * v118) ^ v118;
  v121 = ((16 * (v119 ^ 0x4819002022248492)) ^ 0x8B90FF5777484920) & (v119 ^ 0x4819002022248492) ^ (16 * (v119 ^ 0x4819002022248492)) & 0x48B90FF577748490;
  v122 = (v121 ^ 0x8900F5577400000) & (v120 << 8) ^ v120;
  v123 = (((v121 ^ 0x402900A000348492) << 8) ^ 0xB90FF57774849200) & (v121 ^ 0x402900A000348492) ^ ((v121 ^ 0x402900A000348492) << 8) & 0x48B90FF577748400;
  v124 = v122 ^ 0x48B90FF577748492 ^ (v123 ^ 0x809057574040000) & (v122 << 16);
  v125 = (v114 ^ (2
                * ((v124 << 32) & 0x48B90FF500000000 ^ v124 ^ ((v124 << 32) ^ 0x7774849200000000) & (((v123 ^ 0x40B00A8003700492) << 16) & 0x48B90FF500000000 ^ 0x4008088100000000 ^ (((v123 ^ 0x40B00A8003700492) << 16) ^ 0xFF5777400000000) & (v123 ^ 0x40B00A8003700492))))) >> 2;
  v126 = v113
       - 0x1169993D3BD78268
       + ((v113 - 0x1169993D3BD78268) >> 29)
       + ((v113 - 0x1169993D3BD78268 + ((v113 - 0x1169993D3BD78268) >> 29)) >> 8)
       - 0x3691C63EB8DE9C9BLL
       + (((v125 ^ 0x697BAE8AAA9BCC2ELL) - 0x49B193589F142567) ^ ((v125 ^ 0x3B2E8877A4F64BACLL) - 0x1BE4B5A59179A2E5) ^ ((v125 ^ 0x79CEDA9EB229E5E2) - 0x5904E74C87A60CABLL));
  v127 = (v126 ^ 0x7DD327E67002B790) & (2 * (v126 & 0x41E387F042AA27C4)) ^ v126 & 0x41E387F042AA27C4;
  v128 = ((2 * (v126 ^ 0x7C9029E6F006B818)) ^ 0x7AE75C2D65593FB8) & (v126 ^ 0x7C9029E6F006B818) ^ (2 * (v126 ^ 0x7C9029E6F006B818)) & 0x3D73AE16B2AC9FDCLL;
  v129 = v128 ^ 0x510A21292A48044;
  v130 = (v128 ^ 0x8020C0000081F10) & (4 * v127) ^ v127;
  v131 = ((4 * v129) ^ 0xF5CEB85ACAB27F70) & v129 ^ (4 * v129) & 0x3D73AE16B2AC9FDCLL;
  v132 = (v131 ^ 0x3542A81282A01F40) & (16 * v130) ^ v130;
  v133 = ((16 * (v131 ^ 0x8310604300C808CLL)) ^ 0xD73AE16B2AC9FDC0) & (v131 ^ 0x8310604300C808CLL) ^ (16 * (v131 ^ 0x8310604300C808CLL)) & 0x3D73AE16B2AC9FD0;
  v134 = (v133 ^ 0x1532A00222889D00) & (v132 << 8) ^ v132;
  v135 = (((v133 ^ 0x28410E149024021CLL) << 8) ^ 0x73AE16B2AC9FDC00) & (v133 ^ 0x28410E149024021CLL) ^ ((v133 ^ 0x28410E149024021CLL) << 8) & 0x3D73AE16B2AC9F00;
  v136 = v134 ^ 0x3D73AE16B2AC9FDCLL ^ (v135 ^ 0x31220612A08C0000) & (v134 << 16);
  v137 = v126 ^ (2
               * ((v136 << 32) & 0x3D73AE1600000000 ^ v136 ^ ((v136 << 32) ^ 0x32AC9FDC00000000) & (((v135 ^ 0xC51A804122003DCLL) << 16) & 0x3D73AE1600000000 ^ 0x11610C1200000000 ^ (((v135 ^ 0xC51A804122003DCLL) << 16) ^ 0x2E16B2AC00000000) & (v135 ^ 0xC51A804122003DCLL))));
  v138 = (v137 ^ 0x89ABA2EA0536CA25) + ((v137 >> 26) ^ 0xFFFFFFDD9517457ELL) + 1;
  v139 = v138 - (v138 >> 11) + ((v138 - (v138 >> 11)) >> 1);
  LODWORD(v100) = ((v99 & 0x16800ECA ^ 0x12420289) + (v99 & 0x8217135) - 1) ^ v100 ^ 0x3E7B054F ^ (v139
                                                                                                 - ((2 * v139) & 0xB0C6BA58)
                                                                                                 - 664576724);
  LODWORD(v99) = ((v139 >> 2) ^ 0x2CC1000B) & 0x28B1EC5A ^ 0x9B4298B1 ^ (((2
                                                                                       * (((v139 >> 2) ^ 0x2CC1000B) & a50 ^ 0xC1755183)) | 0xFC6F9276)
                                                                                     - (((v139 >> 2) ^ 0x2CC1000B) & a50 ^ 0xC1755183)
                                                                                     - 2117585211);
  v139 -= 0x5ADA8E7CBF9180BLL;
  v140 = ((v139 >> 28) ^ v139) + 2 * ((v139 >> 28) & v139) + ((((v139 >> 28) ^ v139) + 2 * ((v139 >> 28) & v139)) >> 8);
  v141 = v140
       - (v140 >> 1)
       + 0xA1629B7EBE9CDADLL
       - ((v140 - (v140 >> 1) + 0xA1629B7EBE9CDADLL) >> 28)
       - ((v140 - (v140 >> 1) + 0xA1629B7EBE9CDADLL - ((v140 - (v140 >> 1) + 0xA1629B7EBE9CDADLL) >> 28)) >> 15);
  v142 = v141 - (v141 >> 1) - ((2 * (v141 - (v141 >> 1))) & 0x9701F51039325C6) - 0x7B47F0577E366D1DLL;
  v143 = (v142 ^ 0x44BDB1BB6F10FF9ELL)
       - ((v142 ^ 0x44BDB1BB6F10FF9EuLL) >> 26)
       - (((v142 ^ 0x44BDB1BB6F10FF9ELL) - ((v142 ^ 0x44BDB1BB6F10FF9EuLL) >> 26)) >> 13);
  LODWORD(STACK[0x6AB0]) = a4 ^ (v100 - ((2 * v100) & 0xB096E7B4) - 666143782) ^ (((2 * v99) | 0x64AC1290)
                                                                                - v99
                                                                                - 844499272) ^ 0x65AF5B0C ^ a8 & ((v143 + (v143 >> 6)) >> 2) ^ (v143 + (v143 >> 6));
  LODWORD(STACK[0x64B8]) ^= 0x95959595;
  LODWORD(STACK[0x64F0]) = LODWORD(STACK[0x6430]) + LODWORD(STACK[0x6670]) - STACK[0x68D0];
  LODWORD(STACK[0x6338]) = -1971922015 * LODWORD(STACK[0x6A20]);
  LODWORD(STACK[0x6500]) = v53 - 206347499;
  LODWORD(STACK[0x6A70]) = -LODWORD(STACK[0x6A10]);
  LODWORD(STACK[0x64A8]) = LODWORD(STACK[0x64F8]) ^ 0xE157C5B8;
  if (((*(_BYTE *)(STACK[0x6AC0]
                  + ((*(_BYTE *)(STACK[0x6AC0]
                               + ((*(_BYTE *)(STACK[0x6AC0] + ((*(_BYTE *)(STACK[0x6AC0] + 11) + 14) & 0xF)) + 13) & 0xF))
                    + 2) & 0xF))
       + 9) & 0xE) != 0)
    v144 = (*(_BYTE *)(STACK[0x6AC0]
                     + ((*(_BYTE *)(STACK[0x6AC0]
                                  + ((*(_BYTE *)(STACK[0x6AC0] + ((*(_BYTE *)(STACK[0x6AC0] + 11) + 14) & 0xF)) + 13) & 0xF))
                       + 2) & 0xF))
          + 9) & 0xF;
  else
    v144 = 1;
  v145 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)v51);
  STACK[0x6AA0] = v144;
  STACK[0x6A80] = v144 - 1;
  return v145();
}

uint64_t sub_100C720E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;

  v9 = 2007602165 * *(unsigned __int8 *)(STACK[0x6AC0] + v7);
  v10 = v9 ^ v8;
  v11 = (v9 ^ v8) + v7;
  v12 = (v11 - HIWORD(v11)) >> 8;
  v13 = STACK[0x6A90];
  v14 = v11 - v12 - HIWORD(v11);
  v15 = v7 - 1844246994 + v10 - v12 - HIWORD(v11);
  v16 = v7
      + (v15 ^ v9)
      - (((v15 ^ v9) + (_DWORD)v7 - (((v15 ^ v9) + v7) >> 16)) >> 8)
      - (((v15 ^ v9) + v7) >> 16);
  v17 = (STACK[0x4A0] & (2 * v16)) + (v16 ^ 0x3FEFE7FD);
  v18 = v17 - 58720264;
  v19 = 2 * ((v17 - 58720264) & 0xC390180B);
  v20 = ((2 * (v18 ^ 0x108F6F0A)) ^ 0xA63EEE02) & (v18 ^ 0x108F6F0A) ^ (2 * (v18 ^ 0x108F6F0A)) & 0xD31F7700;
  v21 = v20 ^ LODWORD(STACK[0x4A4]);
  v22 = (v20 ^ 0x2006000) & (4 * (v19 & (v18 ^ 0x938F5F0A) ^ v18 & 0xC390180B)) ^ v19 & (v18 ^ 0x938F5F0A) ^ v18 & 0xC390180B;
  v23 = ((4 * v21) ^ 0x4C7DDC04) & v21 ^ (4 * v21) & 0xD31F7700;
  v24 = (v23 ^ 0x401D5401) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x93022301)) ^ 0x31F77010) & (v23 ^ 0x93022301) ^ (16 * (v23 ^ 0x93022301)) & 0xD31F7700;
  v26 = v7 + ((v17 + 1378033201) ^ v9) - ((((v17 + 1378033201) ^ v9) + v7) >> 16);
  v27 = ((2 * v26) & 0xFFFFBEEE) + (v26 ^ 0x7FFFDF77);
  v28 = v18 ^ (2
             * (((v24 ^ 0xD31F7701 ^ (v25 ^ 0x11177001) & (v24 << 8)) << 16) & 0x531F0000 ^ v24 ^ 0xD31F7701 ^ (v25 ^ 0x11177001) & (v24 << 8) ^ (((v24 ^ 0xD31F7701 ^ (v25 ^ 0x11177001) & (v24 << 8)) << 16) ^ 0x77010000) & (((v25 ^ 0xC2080701) << 8) & 0x531F0000 ^ 0x40080000 ^ (((v25 ^ 0xC2080701) << 8) ^ 0x1F770000) & (v25 ^ 0xC2080701))));
  v29 = (v27 - 1100809217) ^ 0x53468646;
  v30 = ((v27 - 1100809217) ^ 0xD15C8642) & (2 * ((v27 - 1100809217) & 0xC19D248A)) ^ (v27 - 1100809217) & 0xC19D248A;
  v31 = ((2 * v29) ^ 0x25B74598) & v29;
  v32 = (2 * v29) & 0x92DBA2CC;
  v33 = (v28 >> 2) ^ 0x1BC1D536;
  v34 = (v31 ^ v32 ^ 0x9091000C) & (4 * v30) ^ v30;
  v35 = ((4 * (v31 ^ v32 ^ 0x9248A244)) ^ 0x4B6E8B30) & (v31 ^ v32 ^ 0x9248A244) ^ (4 * (v31 ^ v32 ^ 0x9248A244)) & 0x92DBA2CC;
  v36 = v35 ^ LODWORD(STACK[0x4AC]);
  v37 = (v35 ^ 0x24A8200) & (16 * v34) ^ v34;
  v38 = ((16 * v36) ^ 0x2DBA2CC0) & v36 ^ (16 * v36) & 0x92DBA2C0;
  v39 = ((v27 - 1100809217) ^ (2
                             * (((v37 ^ 0x92DBA2CC ^ (v38 ^ 0x9A200C) & (v37 << 8)) << 16) & 0x12DB0000 ^ v37 ^ 0x92DBA2CC ^ (v38 ^ 0x9A200C) & (v37 << 8) ^ (((v37 ^ 0x92DBA2CC ^ (v38 ^ 0x9A200C) & (v37 << 8)) << 16) ^ 0x22CC0000) & (((v38 ^ 0x9241820C) << 8) & 0x12DB0000 ^ 0x590000 ^ (((v38 ^ 0x9241820C) << 8) ^ 0x5BA20000) & (v38 ^ 0x9241820C))))) >> 8;
  v40 = v27
      - (((v39 ^ 0x21A134B8) + 1589209581) ^ ((v39 ^ 0x9C5C3C5B) - 482057968) ^ ((v39 ^ 0xBD1CB282) - 1039863849))
      + 254765831;
  v41 = (v40 ^ 0xEEC098B4) & (2 * (v40 & 0xF0CA9CB8)) ^ v40 & 0xF0CA9CB8;
  v42 = ((2 * (v40 ^ 0xEE5181C4)) ^ 0x3D363AF8) & (v40 ^ 0xEE5181C4) ^ (2 * (v40 ^ 0xEE5181C4)) & 0x1E9B1D7C;
  v43 = v42 ^ 0x2890504;
  v44 = (v42 ^ 0x4931064) & (4 * v41) ^ v41;
  v45 = ((4 * v43) ^ 0x7A6C75F0) & v43 ^ (4 * v43) & 0x1E9B1D7C;
  v46 = (v45 ^ 0x1A08156C) & (16 * v44) ^ v44;
  v47 = ((16 * (v45 ^ 0x493080C)) ^ 0xE9B1D7C0) & (v45 ^ 0x493080C) ^ (16 * (v45 ^ 0x493080C)) & 0x1E9B1D70;
  v48 = v46 ^ 0x1E9B1D7C ^ (v47 ^ 0x891153C) & (v46 << 8);
  v49 = v40 ^ (2
             * ((v48 << 16) & 0x1E9B0000 ^ v48 ^ ((v48 << 16) ^ 0x1D7C0000) & (((v47 ^ 0x160A083C) << 8) & 0x1E9B0000 ^ 0x4820000 ^ (((v47 ^ 0x160A083C) << 8) ^ 0x9B1D0000) & (v47 ^ 0x160A083C))));
  v50 = v19 & (v18 ^ 0x8B1D9AE2) ^ v18 & 0xC390180B;
  v51 = ((2 * (v18 ^ 0x8C1D9AE0)) ^ LODWORD(STACK[0x4B4])) & (v18 ^ 0x8C1D9AE0) ^ (2 * (v18 ^ 0x8C1D9AE0)) & 0x4F8D82EA;
  v52 = (v51 ^ 0xE000040) & (4 * v50) ^ v50;
  v53 = ((4 * (v51 ^ 0x40848229)) ^ 0x3E360BAC) & (v51 ^ 0x40848229) ^ (4 * (v51 ^ 0x40848229)) & 0x4F8D82E8;
  v54 = v53 ^ 0xE0402A3;
  v55 = ((16 * (v53 ^ 0x41898043)) ^ 0xF8D82EB0) & (v53 ^ 0x41898043) ^ (16 * (v53 ^ 0x41898043)) & 0x4F8D82E0;
  v56 = v54 & (16 * v52) ^ v52 ^ 0x4F8D82EB ^ (v55 ^ 0x48880200) & ((v54 & (16 * v52) ^ v52) << 8);
  v57 = (-1825007445
       - ((v49 >> 2) & 0x1EA13F27 ^ 0xCA12627 | 0x933898AB)
       + ((v49 >> 2) & 0x1EA13F27 ^ 0xCA12627 | 0x6CC76754)) ^ 0x7C476873;
  LODWORD(STACK[0x6AB0]) ^= v14 ^ (((v14 >> (v13 - 127)) & a7 ^ 0x10004210)
                                 + ((v14 >> (v13 - 127)) & 0x1EA00005 ^ 0x8FF200C5)
                                 - (((v14 >> (v13 - 127)) & a7 ^ 0x10004210) & 0x1EA04015)) ^ v18 ^ (2 * ((v56 << 16) & 0x4F8D0000 ^ v56 ^ ((v56 << 16) ^ 0x2EB0000) & (((v55 ^ 0x705804B) << 8) & 0x4F8D0000 ^ 0x420D0000 ^ (((v55 ^ 0x705804B) << 8) ^ 0x8D820000) & (v55 ^ 0x705804B)))) ^ v33 & 0x2A7574DA ^ (((2 * (v33 & 0x34D44BFD)) | 0x186E5A96) - (v33 & 0x34D44BFD) + 1942540981) ^ v49 ^ 0x10FA8097 ^ (v57 - ((2 * v57) & 0x6A947940) - 1253426016);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((STACK[0x6A80] != v7) | (16 * (STACK[0x6A80] != v7))) ^ v13)))();
}

uint64_t sub_100C72D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t);
  unint64_t v12;
  unint64_t v13;

  v7 = LODWORD(STACK[0x6A90]) + 16481;
  v8 = LODWORD(STACK[0x6A90]) + 16470;
  v9 = LODWORD(STACK[0x64C0]) ^ 0x585F;
  LODWORD(STACK[0x6A20]) = v8;
  LODWORD(STACK[0x6670]) = v9 ^ v8;
  LODWORD(STACK[0x69C0]) = LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x6A30]) ^ 0xBDBBA46D;
  LODWORD(STACK[0x64B0]) = LODWORD(STACK[0x6800]) >> 7;
  v10 = LODWORD(STACK[0x6A70]) + LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x6A80]) = v5;
  LODWORD(STACK[0x64A0]) = LODWORD(STACK[0x6658]) + 1133174353 * v10 + 894790804;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t))(STACK[0x6AD8] + 8 * v7);
  v12 = STACK[0x6AA0];
  LODWORD(STACK[0x6A60]) = STACK[0x6AA0] + 918142869;
  LODWORD(STACK[0x6A40]) = v12 - 1;
  v13 = STACK[0x6AC0];
  STACK[0x6A70] = 1066930554;
  STACK[0x6A50] = -918142869;
  LODWORD(STACK[0x6A90]) = v6;
  return v11(a1, a2, a3, a4, a5, 0, v13);
}

uint64_t sub_100C72EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  char v16;
  int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unint64_t v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  uint64_t (*v100)(void);

  v13 = (LODWORD(STACK[0x6A20]) - 20437) | 0x1010;
  v14 = *(unsigned __int8 *)(a7 + v12);
  LODWORD(STACK[0x6A30]) = v13;
  v15 = (v14 ^ 0x7FBFFF8E) - 303161862 + ((v14 << (v13 - 17)) & 0x11C);
  v16 = 125 * v15;
  v17 = -1840127368 * v15 + 1453368536 - 447237763 * v15;
  v18 = v12 + a6;
  v19 = v12 + a6 + (v17 ^ v7) - (((v17 ^ v7) + v10) >> 16);
  v20 = (v19 ^ 0xDEFFFFFE) + 2109669118 + ((2 * v19) & 0xBDFFFFFC);
  v21 = 2 * (v20 & 0xA3410104);
  v22 = (2 * (v20 ^ 0xA8F112DE)) & 0xBB013DA ^ 0x890104A ^ ((2 * (v20 ^ 0xA8F112DE)) ^ 0x176027B4) & (v20 ^ 0xA8F112DE);
  v23 = (4 * (v21 & 0x2800208 ^ (v20 & 0xA3410104 | 0x890104A) ^ v21 & (v20 ^ 0xA8F112DE))) & 0xB000118 ^ v21 & 0x2800208 ^ (v20 & 0xA3410104 | 0x890104A) ^ v21 & (v20 ^ 0xA8F112DE) ^ ((4 * (v21 & 0x2800208 ^ (v20 & 0xA3410104 | 0x890104A) ^ v21 & (v20 ^ 0xA8F112DE))) ^ 0x22404128) & v22;
  v24 = (4 * v22) & 0xBB013D8 ^ 0x1301092 ^ ((4 * v22) ^ 0x2EC04F68) & v22;
  v25 = (16 * v23) & 0xBB013D0 ^ v23 ^ ((16 * v23) ^ 0xA9011420) & v24;
  v26 = (16 * v24) & 0xBB013D0 ^ 0xB0025A ^ ((16 * v24) ^ 0xBB013DA0) & v24;
  v27 = v25 ^ 0x8201098 ^ (v25 << 8) & 0xBB01300 ^ ((v25 << 8) ^ 0x90014200) & v26;
  v28 = (v20 ^ (2
              * ((v27 << 16) & 0xBB00000 ^ v27 ^ ((v27 << 16) ^ 0x13DA0000) & ((v26 << 8) & 0xBB00000 ^ 0xBA00000 ^ ((v26 << 8) ^ 0x30130000) & v26)))) >> 8;
  v29 = v20 - (((v28 ^ 0x4EBEFFE1) - 1007905404) ^ ((v28 ^ 0x36CFC308) - 1147295381) ^ ((v28 ^ 0x78C23DCF) - 175089746));
  v30 = v29 + 2102503142;
  v31 = 2 * ((v29 + 2102503142) & 0xB3D0C563);
  v32 = ((2 * (v30 ^ 0x38C58312)) ^ 0x162A8CE2) & (v30 ^ 0x38C58312) ^ (2 * (v30 ^ 0x38C58312)) & 0x8B154670;
  v33 = v32 ^ 0x89154211;
  v34 = (v32 ^ 0x2104401) & (4 * (v31 & (v30 ^ 0x3BC48152) ^ v30 & 0xB3D0C563)) ^ v31 & (v30 ^ 0x3BC48152) ^ v30 & 0xB3D0C563;
  v35 = ((4 * v33) ^ 0x2C5519C4) & v33 ^ (4 * v33) & 0x8B154670;
  v36 = (v35 ^ 0x8150041) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x83004631)) ^ 0xB1546710) & (v35 ^ 0x83004631) ^ (16 * (v35 ^ 0x83004631)) & 0x8B154670;
  v38 = v36 ^ 0x8B154671 ^ (v37 ^ 0x81144600) & (v36 << 8);
  v39 = ((v29 + 311059610) ^ 0x473DA096) & (2 * ((v29 + 311059610) & 0x67A18AC6)) ^ (v29 + 311059610) & 0x67A18AC6;
  v40 = ((2 * ((v29 + 311059610) ^ 0x97FA192)) ^ LODWORD(STACK[0x4BC])) & ((v29 + 311059610) ^ 0x97FA192) ^ (2 * ((v29 + 311059610) ^ 0x97FA192)) & 0x6EDE2B54;
  v41 = v40 ^ 0x22422954;
  v42 = (v40 ^ 0xCCC0244) & (4 * v39) ^ v39;
  v43 = ((4 * v41) ^ 0xBB78AD50) & v41 ^ (4 * v41) & 0x6EDE2B54;
  v44 = v43 ^ 0x44860204;
  v45 = v42 ^ 0x6EDE2B54 ^ (v43 ^ 0x2A582940) & (16 * v42);
  v46 = (v38 << 16) & 0xB150000 ^ v38 ^ ((v38 << 16) ^ 0x46710000) & (((v37 ^ 0xA010061) << 8) & 0xB150000 ^ 0xA110000 ^ (((v37 ^ 0xA010061) << 8) ^ 0x15460000) & (v37 ^ 0xA010061));
  v47 = (16 * v44) & 0x6EDE2B50 ^ 0x21C0A14 ^ ((16 * v44) ^ LODWORD(STACK[0x4C0])) & v44;
  v48 = (v45 << 8) & 0x6EDE2B00 ^ v45 ^ ((v45 << 8) ^ 0xDE2B5400) & v47;
  v49 = (v29 + 311059610) ^ (2
                           * ((v48 << 16) & 0x6EDE0000 ^ v48 ^ ((v48 << 16) ^ 0x2B540000) & ((v47 << 8) & 0x6EDE0000 ^ 0x20D40000 ^ ((v47 << 8) ^ 0x5E2B0000) & v47)));
  v29 += 1536419761;
  v50 = (v29 ^ 0x5789E2B4) & (2 * (v29 & 0x67A18AC6)) ^ v29 & 0x67A18AC6;
  v51 = ((2 * (v29 ^ 0x1FC8F6BC)) ^ 0xF0D2F8F4) & (v29 ^ 0x1FC8F6BC) ^ (2 * (v29 ^ 0x1FC8F6BC)) & 0x78697C7A;
  v52 = ((4 * (v51 ^ 0x829040A)) ^ 0xE1A5F1E8) & (v51 ^ 0x829040A) ^ (4 * (v51 ^ 0x829040A)) & 0x78697C78;
  v53 = (v52 ^ 0x60217070) & (16 * ((v51 ^ 0x30217830) & (4 * v50) ^ v50)) ^ (v51 ^ 0x30217830) & (4 * v50) ^ v50;
  v54 = ((((v30 ^ (2 * v46)) >> 2) & 0x2213304 ^ 0xA3453099) + (((v30 ^ (2 * v46)) >> 2) & 0x1C800C23) - 1) ^ 0xDE796230;
  v55 = ((16 * (v52 ^ 0x18480C12)) ^ 0x8697C7A0) & (v52 ^ 0x18480C12) ^ (16 * (v52 ^ 0x18480C12)) & 0x78697C70;
  v56 = v53 ^ 0x78697C7A ^ (v55 ^ 0x1445A) & (v53 << 8);
  v57 = (((2 * (((v49 >> 2) ^ 0x47F229C9) & 0x5FB270ED)) | 0x154D5DD0)
       - (((v49 >> 2) ^ 0x47F229C9) & 0x5FB270ED)
       + 1968787736) ^ ((v49 >> 2) ^ 0x47F229C9) & 0x41134FCA;
  v58 = v57 ^ 0xD1B4FE28;
  v59 = v29 ^ (2
             * ((v56 << 16) & 0x78690000 ^ v56 ^ ((v56 << 16) ^ 0x7C7A0000) & (((v55 ^ 0x7868385A) << 8) & 0x78690000 ^ 0x10010000 ^ (((v55 ^ 0x7868385A) << 8) ^ 0x697C0000) & (v55 ^ 0x7868385A))));
  v60 = v57 & 0xB0C5649B;
  LODWORD(STACK[0x6A10]) = v54 - ((2 * v54) & 0xD60AE1C8);
  v61 = (-1057308594 - (((v59 >> 2) ^ 0x8941E7B1) & 0x252F68A4) + ((2 * ((v59 >> 2) ^ 0x8941E7B1)) & 0x4A0A5140)) ^ ((v59 >> 2) ^ 0x8941E7B1) & 0x3B8E5783;
  v62 = (v57 ^ 0xD1B4FE28) & 0xB0C5649B;
  v63 = (v17 - 2 * (v17 & 0x5780900E ^ v16 & 4) - 679440374) ^ 0xB023E238 ^ v59;
  v64 = (v63 + v10) >> 16;
  v65 = (v63 + v10 - v64) >> 8;
  v66 = (v60 ^ 0x20410093) + v58;
  v67 = v18 + v63 - v65 - v64;
  v68 = STACK[0x6AA0] + v8;
  v69 = (v61 & 0xA5808FE3 ^ 0x25000781) + (v61 ^ 0xC0D3E86A) - ((v61 ^ 0xC0D3E86A) & 0xA5808FE3);
  v70 = STACK[0x6AA0] + v11 + v63 - v65 - v64;
  v71 = ((v68 + v63 - v65 - v64) >> 2) & 0x1EA13F27 ^ (v68 + v63 - v65 - v64);
  v72 = v66 - v62;
  v73 = ((2 * (v70 ^ 0x96FBBE75)) ^ 0xF658D67C) & (v70 ^ 0x96FBBE75) ^ (2 * (v70 ^ 0x96FBBE75)) & 0x7B2C6B3E;
  v74 = (v70 ^ 0xCDD79463) & (2 * (v70 & 0xEDD7D54B)) ^ v70 & 0xEDD7D54B;
  v75 = v73 ^ 0x9242902;
  v76 = (v73 ^ 0x7208423C) & (4 * v74) ^ v74;
  v77 = ((4 * v75) ^ 0xECB1ACF8) & v75 ^ (4 * v75) & 0x7B2C6B3C;
  v78 = (v77 ^ 0x68202830) & (16 * v76) ^ v76;
  v79 = ((16 * (v77 ^ 0x130C4306)) ^ 0xB2C6B3E0) & (v77 ^ 0x130C4306) ^ (16 * (v77 ^ 0x130C4306)) & 0x7B2C6B30;
  v80 = v31 & (v30 ^ 0xA15BB0CF) ^ v30 & 0xB3D0C563 ^ (v31 & 0x2810084 | 0x26100);
  v81 = (2 * (v30 ^ 0xA15BB0CF)) & 0x128B75AC ^ 0x128914A4 ^ ((2 * (v30 ^ 0xA15BB0CF)) ^ 0x2516EB58) & (v30 ^ 0xA15BB0CF);
  v82 = v78 ^ 0x7B2C6B3E ^ (v79 ^ 0x3204231E) & (v78 << 8);
  v83 = (4 * v80) & 0x128B75AC ^ v80 ^ ((4 * v80) ^ 0x98400) & v81;
  v84 = (4 * v81) & 0x128B75AC ^ 0x1082210C ^ ((4 * v81) ^ 0x4A2DD6B0) & v81;
  v85 = (16 * v83) & 0x128B75A0 ^ v83 ^ ((16 * v83) ^ 0xB65000) & v84;
  v86 = (16 * v84) & 0x128B75A0 ^ 0x1208252C ^ ((16 * v84) ^ 0x28B75AC0) & v84;
  v87 = v85 ^ 0x120340AC ^ (v85 << 8) & 0x128B7500 ^ ((v85 << 8) ^ 0x89350000) & v86;
  v88 = v70 ^ (2
             * ((v82 << 16) & 0x7B2C0000 ^ v82 ^ ((v82 << 16) ^ 0x6B3E0000) & (((v79 ^ 0x4928481E) << 8) & 0x7B2C0000 ^ 0x53040000 ^ (((v79 ^ 0x4928481E) << 8) ^ 0x2C6B0000) & (v79 ^ 0x4928481E))));
  v89 = ((v88 >> 2) & 0x1EA13F27 ^ 0x12210005) - ((2 * ((v88 >> 2) & 0x1EA13F27 ^ 0x12210005)) & 0x9020E02);
  v88 ^= 0x187883E6u;
  v90 = v88 ^ (v17 - ((2 * v17) & 0xAB5F01A2) - 709918511);
  v91 = LODWORD(STACK[0x6AB0]) ^ v30 ^ (2
                                      * ((v87 << 16) & 0x128B0000 ^ v87 ^ ((v87 << 16) ^ 0x75AC0000) & ((v86 << 8) & 0x128B0000 ^ 0x108A0000 ^ ((v86 << 8) ^ 0x8B750000) & v86))) ^ v67 ^ (v67 >> 2) & 0x1EA13F27;
  v92 = (v90 + v10) >> 16;
  v93 = (v90 + v10 - v92) >> 8;
  v94 = v68 + v90;
  v95 = STACK[0x6AA0];
  LODWORD(STACK[0x6AB0]) = v91 ^ (LODWORD(STACK[0x6A10]) + 1795551460) ^ (v18 + v90 - v93 - v92) ^ 0xA9CF9E57 ^ (((_DWORD)v18 + v90 - v93 - v92) >> 2) & 0x1EA13F27;
  v96 = v95 + v9 + v90 - v93;
  v97 = v94 - v93 - v92;
  v98 = v96 - v92;
  v99 = LODWORD(STACK[0x6A90]) ^ v59;
  LODWORD(STACK[0x6A80]) ^= v49 ^ v72 ^ (v71 - ((2 * v71) & 0x8FBB0B38) + 1205699996) ^ v97 ^ 0xC4AB73AB ^ (v97 >> 2) & 0x1EA13F27;
  LODWORD(STACK[0x6A90]) = v99 ^ v69 ^ v88 ^ (v89 + 634865425) ^ v98 ^ 0x22D32910 ^ (v98 >> 2) & 0x1EA13F27;
  v100 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((53 * (v18 != 15)) ^ LODWORD(STACK[0x6A20])));
  ++LODWORD(STACK[0x6A60]);
  ++LODWORD(STACK[0x6A40]);
  --STACK[0x6A50];
  --STACK[0x6A70];
  return v100();
}

uint64_t sub_100C73C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,int a51,int a52,int a53,int a54)
{
  int v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unint64_t v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v56 = STACK[0x6990];
  LODWORD(STACK[0x6538]) = LODWORD(STACK[0x6518]) + LODWORD(STACK[0x6380]);
  v57 = v54 + LODWORD(STACK[0x6A60]);
  v58 = v54 + LODWORD(STACK[0x6A40]);
  v59 = HIWORD(v58);
  v60 = (v58 - HIWORD(v58)) >> 8;
  v61 = (v57 - v60 - v59) >> 12;
  v62 = v55
      + v54
      + v61
      - ((2 * ((_DWORD)v55 + v54 + v61 - ((v57 + v61 - v60 - v59) >> 1) - v60 - v59 - STACK[0x6A50])) & 0x135C5DE2)
      - ((v57 + v61 - v60 - v59) >> 1)
      - v60
      - v59
      - STACK[0x6A70];
  v63 = (((v62 ^ 0x583674C0) - 1479963840) ^ ((v62 ^ 0x583091CA) - 1479578058) ^ ((v62 ^ 0x89A8CBFB) + 1985426437))
      + 1535156214;
  v64 = v63 + (v63 >> 14) + ((v63 + (v63 >> 14)) >> 8);
  v65 = v64 - 1917083304 + ((v64 - 1917083304) >> 15) + ((v64 - 1917083304 + ((v64 - 1917083304) >> 15)) >> 8);
  v66 = (v65 ^ 0x2C34075D) - ((v65 ^ 0x2C34075D) >> 9) - (((v65 ^ 0x2C34075D) - ((v65 ^ 0x2C34075D) >> 9)) >> 3);
  v67 = v66 - 85229157 - ((2 * v66) & 0xF5D70336);
  v68 = (v67 ^ 0x22255AF2) + ((v67 ^ 0x22255AF2) >> 8) + (((v67 ^ 0x22255AF2) + ((v67 ^ 0x22255AF2) >> 8)) >> 2);
  v69 = v68 - 1656269659 + ((v68 - 1656269659) >> 8) - ((v68 - 1656269659 + ((v68 - 1656269659) >> 8)) >> 6);
  v70 = v69 - ((2 * v69) & 0x1A93630A) - 1924550267;
  LODWORD(STACK[0x6658]) = v65;
  v71 = v70 ^ v65;
  LODWORD(STACK[0x63E8]) = v70;
  v72 = (v70 ^ 0xBA564094) + ((v70 ^ 0xBA564094) >> 9) - (((v70 ^ 0xBA564094) + ((v70 ^ 0xBA564094) >> 9)) >> 3);
  v73 = v72 + 1647959806 + ((v72 + 1647959806) >> 8) + ((v72 + 1647959806 + ((v72 + 1647959806) >> 8)) >> 2);
  v74 = v73 - 138608640 - (a50 & (2 * v73)) + 575;
  v75 = ((v74 ^ 0xB5E40CC5) + 1243345723) ^ ((v74 ^ 0xCC7C7296) + 864259434) ^ ((v74 ^ 0x8E257C6C) + 1910145940);
  v76 = v75 + ((v75 - 1976326126) >> 14);
  v77 = ((v76 - 691183370) ^ 0xB357779D) & (2 * ((v76 - 691183370) & 0xB366471C)) ^ (v76 - 691183370) & 0xB366471C;
  v78 = ((2 * ((v76 - 691183370) ^ a51)) ^ 0x85F27D32) & ((v76 - 691183370) ^ a51) ^ (2 * ((v76 - 691183370) ^ a51)) & 0x42F93E98;
  v79 = v78 ^ 0x42090289;
  v80 = (v78 ^ 0xB03E19) & (4 * v77) ^ v77;
  v81 = ((4 * v79) ^ 0xBE4FA64) & v79 ^ (4 * v79) & 0x42F93E98;
  v82 = (v81 ^ 0x2E03A19) & (16 * v80) ^ v80;
  v83 = ((16 * (v81 ^ 0x40190499)) ^ 0x2F93E990) & (v81 ^ 0x40190499) ^ (16 * (v81 ^ 0x40190499)) & 0x42F93E90;
  v84 = v83 ^ 0x40681609;
  v85 = v82 ^ 0x42F93E99 ^ (v83 ^ 0x2912800) & (v82 << 8);
  STACK[0x6A10] = v62;
  LODWORD(STACK[0x6330]) = v67;
  LODWORD(STACK[0x6328]) = v72;
  v86 = ((v76 - 691183370) ^ (2
                            * ((v85 << 16) & 0x42F90000 ^ v85 ^ ((v85 << 16) ^ 0x3E990000) & ((v84 << 8) & 0x42F90000 ^ 0x2C10000 ^ ((v84 << 8) ^ 0x793E0000) & v84)))) >> 1;
  v87 = v76
      - (((v86 ^ 0xE6DBBE1B) + 476216128) ^ ((v86 ^ 0xC68AF929) + 1009990670) ^ ((v86 ^ 0x39825A25) - 1019502846))
      + 2027476179;
  v88 = (v87 ^ 0xE2C1026B) & (2 * (v87 & 0xF4C5AB73)) ^ v87 & 0xF4C5AB73;
  v89 = ((2 * (v87 ^ 0xC24B14AD)) ^ 0x6D1D7FBC) & (v87 ^ 0xC24B14AD) ^ (2 * (v87 ^ 0xC24B14AD)) & 0x368EBFDE;
  v90 = v89 ^ 0x12828042;
  v91 = (v89 ^ 0x240C3F9C) & (4 * v88) ^ v88;
  v92 = ((4 * v90) ^ 0xDA3AFF78) & v90 ^ (4 * v90) & 0x368EBFDC;
  v93 = (v92 ^ 0x120ABF50) & (16 * v91) ^ v91;
  v94 = ((16 * (v92 ^ 0x24840086)) ^ 0x68EBFDE0) & (v92 ^ 0x24840086) ^ (16 * (v92 ^ 0x24840086)) & 0x368EBFD0;
  v95 = v93 ^ 0x368EBFDE ^ (v94 ^ 0x208ABD1E) & (v93 << 8);
  v96 = v87 ^ (2
             * ((v95 << 16) & 0x368E0000 ^ v95 ^ ((v95 << 16) ^ 0x3FDE0000) & (((v94 ^ a52) << 8) & 0x368E0000 ^ (((v94 ^ a52) << 8) ^ 0xEBF0000) & (v94 ^ a52) ^ 0x30000000))) ^ 0xFA1BBBC0;
  v97 = LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x66A0]);
  LODWORD(STACK[0x6518]) = v56 ^ 0xCB67A29D;
  v98 = (((2 * ((v56 >> 2) & 0x1EA13F27 ^ 0xAA03921)) & 0x4406C48) - ((v56 >> 2) & 0x1EA13F27 ^ 0xAA03921) + 2111555971) ^ 0x74D953BA;
  LODWORD(STACK[0x6320]) = v98 - 809645378 - ((2 * v98) & 0x9F5B957C);
  LODWORD(STACK[0x6380]) = v96;
  v99 = ((v71 ^ v96) >> 2) & 0x1EA13F27;
  v100 = ((((v97 ^ v56 ^ 0xCB67A29D) >> 2) & 0x1EA13F27 ^ 0xF1FFD5FB)
        - 1850814379
        + ((2 * (((v97 ^ v56 ^ 0xCB67A29D) >> 2) & 0x1EA13F27)) | 0xDCA25F58)) ^ 0x5461315D ^ ((LODWORD(STACK[0x6498]) ^ 0x1C812B02 ^ ((v72 ^ v62 ^ v67) >> 2) & 0x1EA13F27)
                                                                                             + 682625479
                                                                                             - 2
                                                                                             * ((LODWORD(STACK[0x6498]) ^ 0x1C812B02 ^ ((v72 ^ v62 ^ v67) >> 2) & 0x1EA13F27) & 0x28B009C7 ^ ((v72 ^ v62 ^ v67) >> 2) & 1)
                                                                                             + 15);
  LODWORD(STACK[0x6318]) = (2 * v100) & 0xA2630368;
  LODWORD(STACK[0x6310]) = v100 - 785284684;
  v101 = STACK[0x6340];
  v102 = LODWORD(STACK[0x6340]) ^ 0xA13722 ^ v99;
  v103 = LODWORD(STACK[0x6540]) ^ (LODWORD(STACK[0x6840]) >> 2) & 0x1EA13F27 ^ LODWORD(STACK[0x6350]) ^ (((((LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6830])) ^ LODWORD(STACK[0x6540])) >> 2) & 0x1EA13F27 ^ a53 | 0xC110B788) - ((((LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6830])) ^ LODWORD(STACK[0x6540])) >> 2) & 0x1EA13F27 ^ a53 | 0x3EEF4877) + 1055869047) ^ LODWORD(STACK[0x6A80]) ^ v64 ^ v68 ^ v74 ^ ((v74 ^ ((v68 ^ v64) - ((2 * (v68 ^ v64)) & 0x6F7A047E) + 2008875583)) >> 2) & 0x1EA13F27;
  v104 = LODWORD(STACK[0x6520]) ^ LODWORD(STACK[0x67D0]) ^ v103;
  LODWORD(STACK[0x6A20]) = v103 ^ 0x864994E2;
  v105 = STACK[0x68B0];
  LODWORD(STACK[0x6350]) = v104;
  LODWORD(STACK[0x6348]) = (((2 * ((v104 >> 2) & 0x1EA13F27 ^ 0x1E813B27)) & 0x2C00204A)
                          - ((v104 >> 2) & 0x1EA13F27 ^ 0x1E813B27)
                          + 167227138) & 0xFEA1FFFF;
  v106 = STACK[0xD678];
  v107 = *(_QWORD *)(STACK[0xD678] + 8 * (0x2887379C % v105));
  LODWORD(STACK[0x6A50]) = v102 & a54 ^ v101 & 0x10;
  LODWORD(STACK[0x6A40]) = v102 + 1077434285;
  LODWORD(STACK[0x6498]) = v103;
  LODWORD(STACK[0x6340]) = ((v103 >> 2) & 0x1EA13F27 ^ 0xC803C26)
                         - ((2 * ((v103 >> 2) & 0x1EA13F27 ^ 0xC803C26)) & 0x28424E06)
                         + 875128667;
  v108 = *(_QWORD *)(v106
                   + 8
                   * (((((v107 ^ 0x2FAD598C796DC5CELL) + 0x3E074F5F872EF875) ^ ((v107 ^ 0xE66531EB5C7F7852)
                                                                                - 0x830D8C75DC3BA17) ^ ((v107 ^ 0x9495353A784FE0C1) - 0x7AC0DC1679F32284))
                     - 0x4CF74B8E22D9CEE4)
                    % v105));
  v109 = *(_QWORD *)(v106
                   + 8
                   * (((((v108 ^ 0xC31335514BF05897) - 0x7F9958FC50121AA5) ^ ((v108 ^ 0x9F56E7FFFED2ADB0)
                                                                                - 0x23DC8A52E530EF82) ^ ((v108 ^ 0x1188FF3E87FA87ALL) + 0x426D1DA10C6215B8))
                     - 0x1E28CF0FACB71BBBLL)
                    % v105));
  STACK[0x6A80] = v106;
  v110 = *(_QWORD *)(v106
                   + 8
                   * (((((v109 ^ 0x5A75E3B94A12443) + 0x35B627F58F17B1BALL) ^ ((v109 ^ 0x689600E58FD02EA2)
                                                                               + 0x5887792B9466BB59) ^ ((v109 ^ 0x306C0383462C57BCuLL) + 0x7D7A4D5D9AC247))
                     - 0x6D4C249309ACE379)
                    % v105));
  LODWORD(v110) = ((((v110 ^ 0x8379E3329DFAB283) - 0x3A9764B23BD48228) ^ ((v110 ^ 0xDC7943F410820907)
                                                                            - 0x6597C474B6AC39ACLL) ^ ((v110 ^ 0x25DFD9BD025E6D9) + 0x444C85E489F4298ELL))
                 - 0x1B4C2521C0E75F8FLL)
                % v105;
  LODWORD(STACK[0x6A70]) = ((((v110 - ((2 * v110) & 0x3B61822) - 2116350959) ^ 0xA66CDD4F) - 1074211932) ^ (((v110 - ((2 * v110) & 0x3B61822) - 2116350959) ^ 0x4BE80491) + 1383860862) ^ (((v110 - ((2 * v110) & 0x3B61822) - 2116350959) ^ 0x6C5FD5CF) + 1976294180))
                         - 480915041;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A30])) - 8))();
}

uint64_t sub_100C74888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;

  v9 = STACK[0x6A70];
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x6A70]) < v8;
  v10 = STACK[0x6A30];
  STACK[0x6A60] = (LODWORD(STACK[0x6A30]) + 15731);
  v11 = a8 + 1648205093 < v9;
  if (LODWORD(STACK[0x6AA0]) != (a8 + 1648205093) < 0x7BA4D49D)
    v11 = STACK[0x6AA0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((23572 * (v11 ^ 1)) ^ v10)) - 8))();
}

uint64_t sub_100C77818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52)
{
  int v52;

  LODWORD(STACK[0x6338]) ^= LODWORD(STACK[0x6388]) ^ LODWORD(STACK[0x67E0]);
  v52 = LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x63F0]) ^ LODWORD(STACK[0x6668]) ^ LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6AB0]) ^ STACK[0x6A10] ^ LODWORD(STACK[0x6330]) ^ (LODWORD(STACK[0x6310]) - LODWORD(STACK[0x6318])) ^ LODWORD(STACK[0x6328]);
  LODWORD(STACK[0x6890]) = v52;
  LODWORD(STACK[0x6A10]) = v52 ^ 0x8120007B;
  STACK[0x6AB0] = STACK[0xD678];
  LODWORD(STACK[0x6AA0]) = (((LODWORD(STACK[0x6910]) ^ 0x518DEB56) + 1886127210) ^ ((LODWORD(STACK[0x6910]) ^ a52)
                                                                                  - 706475833) ^ ((LODWORD(STACK[0x6910]) ^ 0xB65B5A66)
                                                                                                - 1749371558))
                         - 184195915;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6A60]) - 8))();
}

uint64_t sub_100C779C8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  _BOOL4 v4;

  if (LODWORD(STACK[0x6AA0]) < 0x27381EAC != (a3 + 231794484) < 0x27381EAC)
    v4 = LODWORD(STACK[0x6AA0]) < 0x27381EAC;
  else
    v4 = (a3 + 231794484) < LODWORD(STACK[0x6AA0]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((13283 * !v4) ^ v3)) - 8))();
}

uint64_t sub_100C7AA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unint64_t v85;
  char v86;
  unint64_t v87;
  uint64_t (*v88)(void);

  LODWORD(STACK[0x6A80]) = v6 ^ 0x20;
  LODWORD(STACK[0x67E0]) = LODWORD(STACK[0x6A40]) - (LODWORD(STACK[0x6A50]) << ((v6 ^ 0x20) + 108));
  v8 = ((a4 + 0x48A48B205C8629DDLL) ^ 0x960D765D7590C6EELL) & (2 * ((a4 + 0x48A48B205C8629DDLL) & 0xD6AE67116598D68ELL)) ^ (a4 + 0x48A48B205C8629DDLL) & 0xD6AE67116598D68ELL;
  v9 = ((2 * ((a4 + 0x48A48B205C8629DDLL) ^ 0x1F49765DBCB16BEELL)) ^ 0x93CE2299B2537AC0) & ((a4 + 0x48A48B205C8629DDLL) ^ 0x1F49765DBCB16BEELL) ^ (2 * ((a4 + 0x48A48B205C8629DDLL) ^ 0x1F49765DBCB16BEELL)) & 0xC9E7114CD929BD60;
  v10 = v9 ^ 0x4821114449288520;
  v11 = (v9 ^ 0x81C2000890013840) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0x279C453364A6F580) & v10 ^ (4 * v10) & 0xC9E7114CD929BD60;
  v13 = (v12 ^ 0x18401004020B500) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0xC863104C99090860)) ^ 0x9E7114CD929BD600) & (v12 ^ 0xC863104C99090860) ^ (16 * (v12 ^ 0xC863104C99090860)) & 0xC9E7114CD929BD60;
  v15 = (v14 ^ 0x8861104C90099400) & (v13 << 8) ^ v13;
  v16 = (((v14 ^ 0x4186010049202960) << 8) ^ 0xE7114CD929BD6000) & (v14 ^ 0x4186010049202960) ^ ((v14 ^ 0x4186010049202960) << 8) & 0xC9E7114CD929BD00;
  v17 = v15 ^ 0xC9E7114CD929BD60 ^ (v16 ^ 0xC101004809290000) & (v15 << 16);
  v18 = ((a4 + 0x48A48B205C8629DDLL) ^ (2
                                      * ((v17 << 32) & 0x49E7114C00000000 ^ v17 ^ ((v17 << 32) ^ 0x5929BD6000000000) & (((v16 ^ 0x8E61104D0009D60) << 16) & 0x49E7114C00000000 ^ 0x48A3004400000000 ^ (((v16 ^ 0x8E61104D0009D60) << 16) ^ 0x114CD92900000000) & (v16 ^ 0x8E61104D0009D60))))) >> 29;
  v19 = a4
      - (((v18 ^ 0x70C9D2149BEC3BE9) - 0x4F96BC17B49E58B4) ^ ((v18 ^ 0x399876F6A90CC5C9) - 0x6C718F5867EA694) ^ ((v18 ^ 0x4951A4E48BF3C666) - 0x760ECAE7A481A53BLL))
      - 0x26D14B70EC1F17BALL;
  v20 = (v19 ^ 0x74B2CF5D5798B9A3) & (2 * (v19 & 0x6C4CF9D17DCBD0ALL)) ^ v19 & 0x6C4CF9D17DCBD0ALL;
  v21 = ((2 * (v19 ^ 0x78BB574F76A0D9A3)) ^ 0xFCFF31A4C2F8C952) & (v19 ^ 0x78BB574F76A0D9A3) ^ (2 * (v19 ^ 0x78BB574F76A0D9A3)) & 0x7E7F98D2617C64A8;
  v22 = v21 ^ 0x2008852210424A9;
  v23 = (v21 ^ 0x3C37108040704000) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0xF9FE634985F192A4) & v22 ^ (4 * v22) & 0x7E7F98D2617C64A8;
  v25 = (v24 ^ 0x787E0040017000A0) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0x6019892600C6409)) ^ 0xE7F98D2617C64A90) & (v24 ^ 0x6019892600C6409) ^ (16 * (v24 ^ 0x6019892600C6409)) & 0x7E7F98D2617C64A0;
  v27 = (v26 ^ 0x6679880201444000) & (v25 << 8) ^ v25;
  v28 = (((v26 ^ 0x180610D060382429) << 8) ^ 0x7F98D2617C64A900) & (v26 ^ 0x180610D060382429) ^ ((v26 ^ 0x180610D060382429) << 8) & 0x7E7F98D2617C6400;
  v29 = v27 ^ 0x7E7F98D2617C64A9 ^ (v28 ^ 0x7E18904060640000) & (v27 << 16);
  v30 = (v19 ^ (2
              * ((v29 << 32) & 0x7E7F98D200000000 ^ v29 ^ ((v29 << 32) ^ 0x617C64A900000000) & (((v28 ^ 0x670892011844A9) << 16) & 0x7E7F98D200000000 ^ 0x662D988200000000 ^ (((v28 ^ 0x670892011844A9) << 16) ^ 0x18D2617C00000000) & (v28 ^ 0x670892011844A9uLL))))) >> 14;
  v31 = v19
      - (((v30 ^ 0x7225836DF2DD5973) + 0x1A662C96B4175D5BLL) ^ ((v30 ^ 0x960944B0239FC57CLL) - 0x1B514B49AAA3EAALL) ^ ((v30 ^ 0xE42C2CD22DA5C89ELL) - 0x73907CD694903348))
      - 0xA4B614429FC2F8DLL;
  v32 = (v31 ^ 0x75137185FAE6B84CLL) & (2 * (v31 & 0x795375D5FC063D50)) ^ v31 & 0x795375D5FC063D50;
  v33 = ((2 * (v31 ^ 0xB5B7D98E82EEA0ECLL)) ^ 0x99C958B6FDD13B78) & (v31 ^ 0xB5B7D98E82EEA0ECLL) ^ (2 * (v31 ^ 0xB5B7D98E82EEA0ECLL)) & 0xCCE4AC5B7EE89DBCLL;
  v34 = v33 ^ 0x4424A44902288484;
  v35 = (v33 ^ 0x88C0081270001900) & (4 * v32) ^ v32;
  v36 = ((4 * v34) ^ 0x3392B16DFBA276F0) & v34 ^ (4 * v34) & 0xCCE4AC5B7EE89DBCLL;
  v37 = (v36 ^ 0x80A0497AA014A0) & (16 * v35) ^ v35;
  v38 = ((16 * (v36 ^ 0xCC640C120448890CLL)) ^ 0xCE4AC5B7EE89DBC0) & (v36 ^ 0xCC640C120448890CLL) ^ (16 * (v36 ^ 0xCC640C120448890CLL)) & 0xCCE4AC5B7EE89DB0;
  v39 = (v38 ^ 0xCC4084136E889900) & (v37 << 8) ^ v37;
  v40 = (((v38 ^ 0xA428481060043CLL) << 8) ^ 0xE4AC5B7EE89DBC00) & (v38 ^ 0xA428481060043CLL) ^ ((v38 ^ 0xA428481060043CLL) << 8) & 0xCCE4AC5B7EE89D00;
  v41 = v39 ^ 0xCCE4AC5B7EE89DBCLL ^ (v40 ^ 0xC4A4085A68880000) & (v39 << 16);
  v42 = (v31 ^ (2
              * ((v41 << 32) & 0x4CE4AC5B00000000 ^ v41 ^ ((v41 << 32) ^ 0x7EE89DBC00000000) & (((v40 ^ 0x840A401166001BCLL) << 16) & 0x4CE4AC5B00000000 ^ 0x40A4801300000000 ^ (((v40 ^ 0x840A401166001BCLL) << 16) ^ 0x2C5B7EE800000000) & (v40 ^ 0x840A401166001BCLL))))) >> 5;
  v43 = v31
      + 0x617A7516CB494415
      + (((v42 ^ 0x362DECBE807EF944) - 0x6DDD9F148484A905) ^ ((v42 ^ 0xD89AF14BB7B6FB52) + 0x7C957D1E4CB354EDLL) ^ ((v42 ^ 0xED7DC45FAFC6BA27) + 0x4972480A54C3159ALL));
  v44 = (v43 ^ 0x741BA8BF8D25C183) & (2 * (v43 & 0x7013AABFCDB1E1ABLL)) ^ v43 & 0x7013AABFCDB1E1ABLL;
  v45 = ((2 * (v43 ^ 0x541AF9AD1C2602D3)) ^ 0x4812A625A32FC6F0) & (v43 ^ 0x541AF9AD1C2602D3) ^ (2 * (v43 ^ 0x541AF9AD1C2602D3)) & 0x24095312D197E378;
  v46 = v45 ^ 0x2409511250902108;
  v47 = (v45 ^ 0x20001078270) & (4 * v44) ^ v44;
  v48 = ((4 * v46) ^ 0x90254C4B465F8DE0) & v46 ^ (4 * v46) & 0x24095312D197E378;
  v49 = (v48 ^ 0x1400240178160) & (16 * v47) ^ v47;
  v50 = ((16 * (v48 ^ 0x2408131091806218)) ^ 0x4095312D197E3780) & (v48 ^ 0x2408131091806218) ^ (16 * (v48 ^ 0x2408131091806218)) & 0x24095312D197E370;
  v51 = (v50 ^ 0x1110011162300) & (v49 << 8) ^ v49;
  v52 = (((v50 ^ 0x24084212C081C078) << 8) ^ 0x95312D197E37800) & (v50 ^ 0x24084212C081C078) ^ ((v50 ^ 0x24084212C081C078) << 8) & 0x24095312D197E300;
  v53 = v51 ^ 0x24095312D197E378 ^ (v52 ^ 0x1121091830000) & (v51 << 16);
  v54 = v43 ^ (2
             * ((v53 << 32) & 0x2409531200000000 ^ v53 ^ ((v53 << 32) ^ 0x5197E37800000000) & (((v52 ^ 0x2408410240148378) << 16) & 0x2409531200000000 ^ 0x2409020000000000 ^ (((v52 ^ 0x2408410240148378) << 16) ^ 0x5312D19700000000) & (v52 ^ 0x2408410240148378))));
  v55 = ((v54 ^ 0xBB23844AA8579853) - 0x4A34CB96E36EE227) ^ ((v54 ^ 0x5BA8EE1DD6C9EE50) + 0x55405E3E620F6BDCLL) ^ ((v54 ^ 0xD888E0ED10005158) - 0x299FAF315B392B2CLL);
  v56 = ((v55 + 0x1D8270433579F588) ^ 0xD56324D579D1BA9) & (2 * ((v55 + 0x1D8270433579F588) & 0xAE07434D97DD538CLL)) ^ (v55 + 0x1D8270433579F588) & 0xAE07434D97DD538CLL;
  v57 = ((2 * ((v55 + 0x1D8270433579F588) ^ 0x5550B256713D39A1)) ^ 0xF6AFE237CDC0D45ALL) & ((v55
                                                                                               + 0x1D8270433579F588) ^ 0x5550B256713D39A1) ^ (2 * ((v55 + 0x1D8270433579F588) ^ 0x5550B256713D39A1)) & 0xFB57F11BE6E06A2CLL;
  v58 = v57 ^ 0x950110822202A25;
  v59 = (v57 ^ 0xF0070012C4C04000) & (4 * v56) ^ v56;
  v60 = ((4 * v58) ^ 0xED5FC46F9B81A8B4) & v58 ^ (4 * v58) & 0xFB57F11BE6E06A2CLL;
  v61 = (v60 ^ 0xE957C00B82802820) & (16 * v59) ^ v59;
  v62 = ((16 * (v60 ^ 0x1200311064604209)) ^ 0xB57F11BE6E06A2D0) & (v60 ^ 0x1200311064604209) ^ (16 * (v60 ^ 0x1200311064604209)) & 0xFB57F11BE6E06A20;
  v63 = (v62 ^ 0xB157111A66002200) & (v61 << 8) ^ v61;
  v64 = (((v62 ^ 0x4A00E00180E0482DLL) << 8) ^ 0x57F11BE6E06A2D00) & (v62 ^ 0x4A00E00180E0482DLL) ^ ((v62 ^ 0x4A00E00180E0482DLL) << 8) & 0xFB57F11BE6E06A00;
  v65 = v63 ^ 0xFB57F11BE6E06A2DLL ^ (v64 ^ 0x53511102E0600000) & (v63 << 16);
  v66 = v55
      - 0x34764C6F32A8B6EBLL
      + ((((v55 + 0x1D8270433579F588) ^ (2
                                         * ((v65 << 32) & 0x7B57F11B00000000 ^ v65 ^ ((v65 << 32) ^ 0x66E06A2D00000000) & (((v64 ^ 0xA806E0190680422DLL) << 16) & 0x7B57F11B00000000 ^ 0xA44111B00000000 ^ (((v64 ^ 0xA806E0190680422DLL) << 16) ^ 0x711BE6E000000000) & (v64 ^ 0xA806E0190680422DLL))))) >> 28) ^ 0xFFFFFFF63D79E97ALL);
  v67 = v66 + (v66 >> 15) - ((v66 + (v66 >> 15)) >> 7);
  v68 = v67
      - 0x1169993D3BD78268
      + ((v67 - 0x1169993D3BD78268) >> 29)
      + ((v67 - 0x1169993D3BD78268 + ((v67 - 0x1169993D3BD78268) >> 29)) >> 8);
  v69 = v68 + (v68 >> 2);
  v70 = (v69 ^ 0xD2EE651F22C5D259)
      - ((v69 ^ 0xD2EE651F22C5D259) >> 26)
      - (((v69 ^ 0xD2EE651F22C5D259) - ((v69 ^ 0xD2EE651F22C5D259) >> 26)) >> 11);
  v71 = v70 + (v70 >> 1) - ((2 * (v70 + (v70 >> 1))) & 0x24DC2265C23226C2) + 0x126E1132E1191361;
  LODWORD(v70) = v67 - ((2 * v67) & 0x29DBFF1A) + 351141773;
  LODWORD(v67) = (-2
                - ((~(((v67 >> 1) ^ 0x77BBD264) & 0x323FEB68) | 0xFE213C07)
                 + (((v67 >> 1) ^ 0x77BBD264) & 0x32212800 | 0x1DEC3F8))) ^ ((v67 >> 1) ^ 0x77BBD264) & 0x2B728C02;
  LODWORD(v58) = (v67 & 0x92A6B046 ^ 0x12A40001) + (v67 & 0x6D594FB9) - 1;
  v72 = (((v71 ^ 0xBC1D151A01CC55CELL) + 0x43E2EAE5FE33AA32) ^ ((v71 ^ 0x13B13298C6F406ELL) - 0x13B13298C6F406ELL) ^ ((v71 ^ 0xAF4817016CBA06C1) + 0x50B7E8FE9345F93FLL))
      + 0xCC0684B151FFB56;
  v73 = v72 + (v72 >> 28) + ((v72 + (v72 >> 28)) >> 8);
  v74 = v73 - (v73 >> 1);
  v75 = v74
      + 0xA1629B7EBE9CDADLL
      - ((v74 + 0xA1629B7EBE9CDADLL) >> 28)
      - ((v74 + 0xA1629B7EBE9CDADLL - ((v74 + 0xA1629B7EBE9CDADLL) >> 28)) >> 15);
  v76 = v75 - (v75 >> 1);
  LODWORD(v75) = (v7 & (v76 >> 1) ^ v76) - ((2 * (v7 & (v76 >> 1) ^ v76)) & 0x3E51770);
  v77 = (v76 ^ 0xC005BE13EED96D7DLL)
      - ((v76 ^ 0xC005BE13EED96D7DLL) >> 26)
      - (((v76 ^ 0xC005BE13EED96D7DLL) - ((v76 ^ 0xC005BE13EED96D7DLL) >> 26)) >> 13);
  v78 = ((v77 + (v77 >> 6)) ^ 0x36BB3FA5F3873FCELL)
      - (((v77 + (v77 >> 6)) ^ 0x36BB3FA5F3873FCELL) >> 27)
      + ((((v77 + (v77 >> 6)) ^ 0x36BB3FA5F3873FCELL) - (((v77 + (v77 >> 6)) ^ 0x36BB3FA5F3873FCELL) >> 27)) >> 13);
  v79 = v78 + (v78 >> 6);
  LODWORD(STACK[0x6AA0]) = v5 ^ v70 ^ v58 ^ v74 ^ v7 & (v74 >> 1) ^ 0x83299DCF ^ ((v7 & (v79 >> 1) ^ v79)
                                                                                              - ((2
                                                                                                * (v7 & (v79 >> 1) ^ v79)) & 0x6469C20C)
                                                                                              + 842326278);
  v80 = v79
      - 0x116B4B9B00286EECLL
      + ((v79 - 0x116B4B9B00286EECLL) >> 31)
      + ((v79 - 0x116B4B9B00286EECLL + ((v79 - 0x116B4B9B00286EECLL) >> 31)) >> 8);
  LODWORD(v80) = v80 - 514635232 + (v80 >> 8);
  v81 = 2 * (v80 & 0x1EACB5E0);
  LODWORD(v70) = ((2 * (v80 ^ 0x113CFD1C)) ^ 0x1F2091F8) & (v80 ^ 0x113CFD1C) ^ (2 * (v80 ^ 0x113CFD1C)) & 0xF9048FC;
  LODWORD(v77) = v70 ^ 0x904804;
  LODWORD(v70) = (v70 ^ 0xF000080) & (4 * (v81 & (v80 ^ 0x1C2CB5DC) ^ v80 & 0x1EACB5E0)) ^ v81 & (v80 ^ 0x1C2CB5DC) ^ v80 & 0x1EACB5E0;
  LODWORD(v58) = ((4 * v77) ^ 0x3E4123F0) & v77 ^ (4 * v77) & 0xF9048FC;
  LODWORD(v70) = (v58 ^ 0xE0000EC) & (16 * v70) ^ v70;
  LODWORD(v58) = ((16 * (v58 ^ 0x190480C)) ^ 0xF9048FC0) & (v58 ^ 0x190480C) ^ (16 * (v58 ^ 0x190480C)) & 0xF9048C0;
  LODWORD(v71) = v81 & (v80 ^ 0x9C8AA5E0) ^ v80 & 0x1EACB5E0;
  v82 = ((2 * (v80 ^ 0x84C28FA0)) ^ 0x34DC7480) & (v80 ^ 0x84C28FA0) ^ (2 * (v80 ^ 0x84C28FA0)) & 0x9A6E3A40;
  LODWORD(v71) = (v82 ^ 0x10443000) & (4 * v71) ^ v71;
  v83 = ((4 * (v82 ^ 0x8A220A40)) ^ 0x69B8E900) & (v82 ^ 0x8A220A40) ^ (4 * (v82 ^ 0x8A220A40)) & 0x9A6E3A40;
  LODWORD(v71) = (v83 ^ 0x8282800) & (16 * v71) ^ v71;
  v84 = ((16 * (v83 ^ 0x92461240)) ^ 0xA6E3A400) & (v83 ^ 0x92461240) ^ (16 * (v83 ^ 0x92461240)) & 0x9A6E3A40;
  LODWORD(v70) = v80 ^ (2
                      * (((((v58 ^ 0x690403C) << 8) ^ 0x10480000) & (v58 ^ 0x690403C) ^ ((v58 ^ 0x690403C) << 8) & 0xF900000) & (((v58 ^ 0x9000800) & ((_DWORD)v70 << 8) ^ v70) << 16) ^ (v58 ^ 0x9000800) & ((_DWORD)v70 << 8) ^ v70));
  LODWORD(v80) = v7 & ((v80 ^ (2
                                           * ((((v84 ^ 0x180C1A40) << 8) & 0x1A6E0000 ^ 0xA2A0000 ^ (((v84 ^ 0x180C1A40) << 8) ^ 0x6E3A0000) & (v84 ^ 0x180C1A40)) & (((v84 ^ 0x82622000) & ((_DWORD)v71 << 8) ^ v71) << 16) ^ (v84 ^ 0x82622000) & ((_DWORD)v71 << 8) ^ v71))) >> 1) ^ 0x9446320;
  LODWORD(v80) = (-1168594940 - v80 + ((2 * v80) & 0x20AC884) - 3160) ^ 0xBAFA9ABC;
  v85 = STACK[0x6AC0];
  LODWORD(v75) = v4 ^ v69 ^ v7 & (v69 >> 1) ^ (v75 - 2114810952) ^ v70 ^ 0xF79AB38F;
  v86 = *(_BYTE *)(STACK[0x6AC0] + ((*(_BYTE *)(STACK[0x6AC0] + 11) + 5) & 0xF));
  LODWORD(STACK[0x6AB0]) = v75 ^ (((2 * v80) & 0x27D5263C) - v80 + 739601632);
  if (((*(_BYTE *)(v85 + ((*(_BYTE *)(v85 + ((v86 + 12) & 0xF)) + 3) & 0xF)) + 7) & 0xE) != 0)
    v87 = (*(_BYTE *)(v85 + ((*(_BYTE *)(v85 + ((v86 + 12) & 0xF)) + 3) & 0xF)) + 7) & 0xF;
  else
    v87 = 1;
  v88 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v6);
  STACK[0x6A50] = v87;
  STACK[0x6A60] = v87 - 1;
  return v88();
}

uint64_t sub_100C7BD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unint64_t v73;

  v10 = 2007602165 * *(unsigned __int8 *)(STACK[0x6AC0] + v8) + 2091932338;
  v11 = STACK[0x6A80];
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6A80]) - 10271;
  v12 = ((2 * (v10 ^ 0x24930CF9)) ^ 0x4FB9536E) & (v10 ^ 0x24930CF9) ^ (2 * (v10 ^ 0x24930CF9)) & (a7 + 6);
  v13 = v12 ^ 0xA044A891;
  v14 = (v10 ^ 0x220F046D) & (2 * (v10 & (v11 - 2091946823))) ^ v10 & (v11 - 2091946823);
  v15 = (v12 ^ 0xA71801A0) & (4 * v14) ^ v14;
  v16 = ((4 * v13) ^ 0x9F72A6DC) & v13 ^ (4 * v13) & (a7 + 4);
  v17 = ((16 * (v16 ^ 0x208C0923)) ^ 0x7DCA9B70) & (v16 ^ 0x208C0923) ^ (16 * (v16 ^ 0x208C0923)) & a7;
  v18 = (v16 ^ 0x8750A080) & (16 * v15) ^ v15 ^ (a7 + 7) ^ (v17 ^ 0x25C88900) & (((v16 ^ 0x8750A080) & (16 * v15) ^ v15) << 8);
  v19 = v10 ^ (2
             * ((v18 << 16) & 0x27DC0000 ^ v18 ^ ((v18 << 16) ^ 0x29B70000) & (((v17 ^ LODWORD(STACK[0x4C8])) << 8) & 0xA7DC0000 ^ 0x23540000 ^ (((v17 ^ LODWORD(STACK[0x4C8])) << 8) ^ 0x5CA90000) & (v17 ^ LODWORD(STACK[0x4C8])))));
  v20 = (v7 - ((2 * v7) & 0x75517ADA) - 1163346579) ^ 0x35764B4D ^ v19;
  v21 = ((2 * (v8 + v20 - ((v20 + v8) >> 16))) & 0x45FF3DDE)
      + ((v8 + v20 - ((v20 + v8) >> 16)) ^ 0x22FF9EEF);
  v22 = ((v21 - 658051) ^ 0xDD416392) & (2 * ((v21 - 658051) & 0xDD0A6B94)) ^ (v21 - 658051) & 0xDD0A6B94;
  v23 = ((2 * ((v21 - 658051) ^ 0xEF55249A)) ^ 0x64BE9E1C) & ((v21 - 658051) ^ 0xEF55249A) ^ (2
                                                                                            * ((v21 - 658051) ^ 0xEF55249A)) & 0x325F4F0E;
  v24 = v23 ^ 0x12414102;
  v25 = (v23 ^ 0x201A0E00) & (4 * v22) ^ v22;
  v26 = ((4 * v24) ^ 0xC97D3C38) & v24 ^ (4 * v24) & 0x325F4F0C;
  v27 = ((16 * (v26 ^ 0x32024306)) ^ 0x25F4F0E0) & (v26 ^ 0x32024306) ^ (16 * (v26 ^ 0x32024306)) & 0x325F4F00;
  v28 = (v26 ^ 0x5D0C06) & (16 * v25) ^ v25 ^ 0x325F4F0E ^ (v27 ^ 0x20544000) & (((v26 ^ 0x5D0C06) & (16 * v25) ^ v25) << 8);
  v29 = (((v27 ^ 0x120B0F0E) << 8) ^ 0x5F4F0E00) & (v27 ^ 0x120B0F0E) ^ ((v27 ^ 0x120B0F0E) << 8) & 0x325F4F00;
  v30 = ((v21 - 658051) ^ (2
                         * (v29 & 0x4B091C00 ^ v28 ^ ((v28 << 16) ^ 0x4071CE1) & 0x325F0C00 ^ (v29 ^ 0x20100000) & ((v28 << 16) ^ 0x4071CE1u)))) >> 8;
  v31 = v21
      - (((v30 ^ 0x3719BA8A) - 309051590) ^ ((v30 ^ 0xE80E8292) + 847447842) ^ ((v30 ^ 0xDFAA9EF5) + 86448967))
      + 294829826;
  v32 = ((2 * (v31 ^ 0x4466F9)) ^ 0x4BB3472E) & (v31 ^ 0x4466F9) ^ (2 * (v31 ^ 0x4466F9)) & 0xA5D9A396;
  v33 = (v31 ^ 0x15DE46D) & (2 * (v31 & 0xA59DC56E)) ^ v31 & 0xA59DC56E;
  v34 = ((4 * (v32 ^ 0xA448A091)) ^ 0x97668E5C) & (v32 ^ 0xA448A091) ^ (4 * (v32 ^ 0xA448A091)) & 0xA5D9A394;
  v35 = (v34 ^ 0x85408200) & (16 * ((v32 ^ 0x918301) & (4 * v33) ^ v33)) ^ (v32 ^ 0x918301) & (4 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x20992183)) ^ 0x5D9A3970) & (v34 ^ 0x20992183) ^ (16 * (v34 ^ 0x20992183)) & 0xA5D9A390;
  v37 = v35 ^ 0xA5D9A397 ^ (v36 ^ 0x5982100) & (v35 << 8);
  v38 = v31 ^ (2
             * ((v37 << 16) & 0x25D90000 ^ v37 ^ ((v37 << 16) ^ 0x23970000) & (((v36 ^ 0xA0418287) << 8) & 0x25D90000 ^ 0x24580000 ^ (((v36 ^ 0xA0418287) << 8) ^ 0x59A30000) & (v36 ^ 0xA0418287))));
  v39 = (((v38 ^ 0x2D2F62E2) + 1531671711) ^ ((v38 ^ 0xA4313C2A) - 766170537) ^ ((v38 ^ LODWORD(STACK[0x4CC]))
                                                                               + 1383516917))
      + 2084271887;
  v40 = (v39 ^ 0xFD756782) & (2 * (v39 & 0xF16577CB)) ^ v39 & 0xF16577CB;
  v41 = ((2 * (v39 ^ 0x7DFD8892)) ^ 0x1931FEB2) & (v39 ^ 0x7DFD8892) ^ (2 * (v39 ^ 0x7DFD8892)) & 0x8C98FF58;
  v42 = v41 ^ LODWORD(STACK[0x4D0]);
  v43 = (v41 ^ 0x810FE11) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0x3263FD64) & v42 ^ (4 * v42) & 0x8C98FF58;
  v45 = (v44 ^ 0xFD40) & (16 * v43) ^ v43;
  v46 = ((16 * (v44 ^ 0x8C980219)) ^ 0xC98FF590) & (v44 ^ 0x8C980219) ^ (16 * (v44 ^ 0x8C980219)) & 0x8C98FF50;
  v47 = v46 ^ 0x4100A49;
  v48 = (((v38 ^ 0x4155110B) + 925960056) ^ ((v38 ^ 0xFB5B9AC6) - 1925215045) ^ ((v38 ^ 0x1702098D) + 1634082802))
      - 485680999;
  v49 = v45 ^ 0x8C98FF59 ^ (v46 ^ 0x8888F500) & (v45 << 8);
  v50 = (v48 ^ 0xC39C191A) & (2 * (v48 & 0xD39D5958)) ^ v48 & 0xD39D5958;
  v51 = ((2 * (v48 ^ LODWORD(STACK[0x4D4]))) ^ 0x662385A4) & (v48 ^ LODWORD(STACK[0x4D4])) ^ (2
                                                                                            * (v48 ^ LODWORD(STACK[0x4D4]))) & 0x3311C2D2;
  v52 = ((4 * (v51 ^ 0x11104252)) ^ 0xCC470B48) & (v51 ^ 0x11104252) ^ (4 * (v51 ^ 0x11104252)) & 0x3311C2D0;
  v53 = (v52 ^ 0x10252) & (16 * ((v51 ^ 0x3018092) & (4 * v50) ^ v50)) ^ (v51 ^ 0x3018092) & (4 * v50) ^ v50;
  v54 = ((16 * (v52 ^ 0x3310C092)) ^ 0x311C2D20) & (v52 ^ 0x3310C092) ^ (16 * (v52 ^ 0x3310C092)) & 0x3311C2D0;
  v55 = v53 ^ 0x3311C2D2 ^ (v54 ^ 0x311000D2) & (v53 << 8);
  v56 = v48 ^ (2
             * ((v55 << 16) & 0x33110000 ^ v55 ^ ((v55 << 16) ^ 0x42D20000) & (((v54 ^ 0x201C2D2) << 8) & 0x33110000 ^ 0x22110000 ^ (((v54 ^ 0x201C2D2) << 8) ^ 0x11C20000) & (v54 ^ 0x201C2D2))));
  v57 = v39 ^ (2
             * ((v49 << 16) & 0xC980000 ^ v49 ^ ((v49 << 16) ^ 0x7F590000) & ((v47 << 8) & 0x8C980000 ^ ((v47 << 8) ^ 0x18FF0000) & v47 ^ 0x4000000)));
  v58 = v8
      + (v19 ^ 0x36F49A97 ^ v56 ^ 0x8B4B04B)
      - (((v19 ^ 0x36F49A97 ^ v56 ^ 0x8B4B04B)
        + (_DWORD)v8
        - (((v19 ^ 0x36F49A97 ^ v56 ^ 0x8B4B04B) + v8) >> 16)) >> 8)
      - (((v19 ^ 0x36F49A97 ^ v56 ^ 0x8B4B04B) + v8) >> 16);
  v59 = ((2 * v58) & 0x4BFAFA9C) + (v58 ^ 0xA5FD7D4E);
  v60 = ((v59 + 940587880) ^ 0xA7516D74) & (2 * ((v59 + 940587880) & 0xB4054D78)) ^ (v59 + 940587880) & 0xB4054D78;
  v61 = ((2 * ((v59 + 940587880) ^ 0xAF59FDA4)) ^ 0x36B961B8) & ((v59 + 940587880) ^ 0xAF59FDA4) ^ (2
                                                                                                  * ((v59 + 940587880) ^ 0xAF59FDA4)) & 0x1B5CB0DC;
  v62 = ((4 * (v61 ^ 0x9449044)) ^ 0x6D72C370) & (v61 ^ 0x9449044) ^ (4 * (v61 ^ 0x9449044)) & 0x1B5CB0DC;
  v63 = (v62 ^ 0x950804C) & (16 * ((v61 ^ 0x10182080) & (4 * v60) ^ v60)) ^ (v61 ^ 0x10182080) & (4 * v60) ^ v60;
  v64 = ((16 * (v62 ^ LODWORD(STACK[0x4E4]))) ^ 0xB5CB0DC0) & (v62 ^ LODWORD(STACK[0x4E4])) ^ (16
                                                                                             * (v62 ^ LODWORD(STACK[0x4E4]))) & 0x1B5CB0D0;
  v65 = v63 ^ 0x1B5CB0DC ^ (v64 ^ LODWORD(STACK[0x4E0])) & (v63 << 8);
  v66 = (v59 + 940587880) ^ (2
                           * ((v65 << 16) & 0x1B5C0000 ^ v65 ^ ((v65 << 16) ^ 0x30DC0000) & (((v64 ^ 0xA14B01C) << 8) & 0x1B5C0000 ^ 0x34C0000 ^ (((v64 ^ 0xA14B01C) << 8) ^ 0x5CB00000) & (v64 ^ 0xA14B01C))));
  v67 = v19 ^ 0xEC961E79 ^ v66 ^ 0xC14CC499;
  v68 = (v67 + v8) >> 16;
  v69 = (v67 + (_DWORD)v8 - v68) >> 8;
  v70 = v8 + 1225360151 + v67 - v69 - v68;
  v71 = v8 + v9 + v67 - v69 - v68;
  LODWORD(STACK[0x6AB0]) ^= v56 ^ 0x8B4B04B ^ (v56 >> 1) & 0x194D676A ^ v66 ^ 0xC14CC499 ^ (v66 >> 1) & 0x194D676A ^ v71 ^ ((v71 >> 1) ^ 0x5178028A) & 0x552A0648 ^ 0x95D18547 ^ (-1471570858 - (((v71 >> 1) ^ 0x5178028A) & 0x44266120 | 0xA8499C56) + (((v71 >> 1) ^ 0x5178028A) & 0x8410002 | 0x57B663A9));
  v72 = LODWORD(STACK[0x6AA0]) ^ 0x18004428 ^ (v57 >> 1) & 0x194D676A ^ (v59 - 1559493175) ^ ((v59 - 1559493175) >> 1) & 0x194D676A ^ (v70 >> 1) & 0x194D676A;
  v73 = STACK[0x6A60];
  LODWORD(STACK[0x6AA0]) = v57 ^ v70 ^ 0x2ECB1448 ^ (v72 - 558919855 - ((2 * v72) & 0xBD5F3A62) + 3552);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v11 ^ (32 * (v73 != v8)))))();
}

uint64_t sub_100C7CBBC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  unint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = LODWORD(STACK[0x6A70]) + 14125;
  LODWORD(STACK[0x69B0]) ^= 0x9E9E9E9E;
  v3 = STACK[0x6AD8];
  LODWORD(STACK[0x6A30]) = v2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * v2) - 8);
  LODWORD(STACK[0x6A80]) = a2;
  return v4(a1, -918142869);
}

uint64_t sub_100C7CC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unint64_t v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v84;

  v11 = (LODWORD(STACK[0x6A70]) - 1910018423) & 0x71D8C3AB;
  v12 = *(unsigned __int8 *)(v6 + a3);
  LODWORD(STACK[0x6A40]) = v11;
  v13 = v12 * (v11 + 2007585098) + 1231404745;
  v14 = ((2 * (v13 ^ 0x8A0A3E19)) ^ 0x7920FE5C) & (v13 ^ 0x8A0A3E19) ^ (2 * (v13 ^ 0x8A0A3E19)) & 0x3C907F2E;
  v15 = (v13 ^ 0xA61A3C37) & (2 * (v13 & 0xB69A4137)) ^ v13 & 0xB69A4137;
  v16 = ((4 * (v14 ^ 0x4900122)) ^ 0xF241FCB8) & (v14 ^ 0x4900122) ^ (4 * (v14 ^ 0x4900122)) & 0x3C907F2C;
  v17 = (v16 ^ 0x30007C20) & (16 * ((v14 ^ 0x38000C0E) & (4 * v15) ^ v15)) ^ (v14 ^ 0x38000C0E) & (4 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0xC900306)) ^ 0xC907F2E0) & (v16 ^ 0xC900306) ^ (16 * (v16 ^ 0xC900306)) & 0x3C907F20;
  v19 = v13 ^ (2
             * (((v17 ^ 0x3C907F2E ^ (v18 ^ 0x800720E) & (v17 << 8)) << 16) & 0x3C900000 ^ v17 ^ 0x3C907F2E ^ (v18 ^ 0x800720E) & (v17 << 8) ^ (((v17 ^ 0x3C907F2E ^ (v18 ^ 0x800720E) & (v17 << 8)) << 16) ^ 0x7F2E0000) & (((v18 ^ 0x34900D0E) << 8) & 0x3C900000 ^ 0x2C800000 ^ (((v18 ^ 0x34900D0E) << 8) ^ 0x107F0000) & (v18 ^ 0x34900D0E))));
  v20 = (v4 - ((2 * v4) & 0xC3C70EDA) + 1642301293) ^ 0xD6593806 ^ v19;
  v21 = a3 + v3;
  v22 = a3
      + v5
      + v20
      - ((2 * (a3 + v3 + v20 - ((v20 + v8 - ((v20 + v8) >> 16)) >> 8) - ((v20 + v8) >> 16))) & 0xE0688B1E)
      - ((v20 + v8 - ((v20 + v8) >> 16)) >> 8)
      - ((v20 + v8) >> 16);
  LODWORD(STACK[0x6A60]) = ((v22 ^ 0x9C991D83) + 1667687037) ^ ((v22 ^ 0x86415E6D) + 2042536339) ^ ((v22 ^ 0xEAEC0661)
                                                                                                  + 353630623);
  v23 = (((v22 ^ 0x5F10DDED) - 1594940909) ^ ((v22 ^ 0xE9857E6C) + 377127316) ^ ((v22 ^ 0x46A1E60E) - 1185015310))
      - 1933583519;
  v24 = (v23 ^ 0xF1F7705A) & (2 * (v23 & 0xF587705C)) ^ v23 & 0xF587705C;
  v25 = ((2 * (v23 ^ 0x39F55062)) ^ 0x98E4407C) & (v23 ^ 0x39F55062) ^ (2 * (v23 ^ 0x39F55062)) & 0xCC72203E;
  v26 = (v25 ^ 0x88200030) & (4 * v24) ^ v24;
  v27 = ((4 * (v25 ^ LODWORD(STACK[0x4E8]))) ^ 0x31C880F8) & (v25 ^ LODWORD(STACK[0x4E8])) ^ (4
                                                                                            * (v25 ^ LODWORD(STACK[0x4E8]))) & 0xCC72203C;
  v28 = (v27 ^ 0x400026) & (16 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0xCC322006)) ^ 0xC72203E0) & (v27 ^ 0xCC322006) ^ (16 * (v27 ^ 0xCC322006)) & 0xCC722030;
  v30 = v23 ^ (2
             * (((v28 ^ 0xCC72203E ^ (v29 ^ 0xC422001E) & (v28 << 8)) << 16) & 0x4C720000 ^ v28 ^ 0xCC72203E ^ (v29 ^ 0xC422001E) & (v28 << 8) ^ (((v28 ^ 0xCC72203E ^ (v29 ^ 0xC422001E) & (v28 << 8)) << 16) ^ 0x203E0000) & (((v29 ^ 0x850201E) << 8) & 0xCC720000 ^ 0xC520000 ^ (((v29 ^ 0x850201E) << 8) ^ 0x72200000) & (v29 ^ 0x850201E))));
  v31 = a3 + v3 + (v19 ^ 0xDABD8F4B ^ v30) - (((v19 ^ 0xDABD8F4B ^ v30) + v8) >> 16);
  v32 = ((2 * v31) & 0xF16369A2) + (v31 ^ 0x78B1B4D1);
  v33 = ((v32 - 2167824) ^ 0xA74E1FBE) & (2 * ((v32 - 2167824) & 0x876F5F3F)) ^ (v32 - 2167824) & 0x876F5F3F;
  v34 = ((2 * ((v32 - 2167824) ^ 0xAB52A394)) ^ 0x587BF956) & ((v32 - 2167824) ^ 0xAB52A394) ^ (2
                                                                                              * ((v32 - 2167824) ^ 0xAB52A394)) & 0x2C3DFCAA;
  v35 = ((4 * (v34 ^ 0x240404A9)) ^ 0xB0F7F2AC) & (v34 ^ 0x240404A9) ^ (4 * (v34 ^ 0x240404A9)) & 0x2C3DFCA8;
  v36 = (v35 ^ 0x2035F0A0) & (16 * ((v34 ^ 0x839F800) & (4 * v33) ^ v33)) ^ (v34 ^ 0x839F800) & (4 * v33) ^ v33;
  v37 = ((16 * (v35 ^ LODWORD(STACK[0x4EC]))) ^ 0xC3DFCAB0) & (v35 ^ LODWORD(STACK[0x4EC])) ^ (16
                                                                                             * (v35 ^ LODWORD(STACK[0x4EC]))) & 0x2C3DFCA0;
  v38 = v36 ^ 0x2C3DFCAB ^ (v37 ^ 0x1DC80B) & (v36 << 8);
  v39 = (((v30 >> 1) & 0x484202 ^ 0xC4D28A11) + ((v30 >> 1) & 0x19052568 ^ 0x19000501) - 2) ^ 0x4D724214;
  v40 = ((v32 - 2167824) ^ (2
                          * ((v38 << 16) & 0x2C3D0000 ^ v38 ^ ((v38 << 16) ^ 0x7CAB0000) & (((v37 ^ 0x2C20340B) << 8) & 0x2C3D0000 ^ (((v37 ^ 0x2C20340B) << 8) ^ 0x3DFC0000) & (v37 ^ 0x2C20340B) ^ 0x10000)))) >> 8;
  v41 = v32
      - (((v40 ^ 0xFECC792A) + 561974776) ^ ((v40 ^ 0x6343EAF) - 645445005) ^ ((v40 ^ 0xF87F0123) + 667710975))
      + 1923322558;
  v42 = ((2 * (v41 ^ 0x3211AD8D)) ^ 0x839E8EC0) & (v41 ^ 0x3211AD8D) ^ (2 * (v41 ^ 0x3211AD8D)) & 0xC1CF4760;
  v43 = (v41 ^ 0xF39CE8CD) & (2 * (v41 & 0xF3DEEAED)) ^ v41 & 0xF3DEEAED;
  v44 = v42 ^ 0x40414120;
  v45 = (v42 ^ 0x818E0640) & (4 * v43) ^ v43;
  v46 = ((4 * v44) ^ 0x73D1D80) & v44 ^ (4 * v44) & 0xC1CF4760;
  v47 = (v46 ^ 0x10D0500) & (16 * v45) ^ v45;
  v48 = ((16 * (v46 ^ 0xC0C24260)) ^ 0x1CF47600) & (v46 ^ 0xC0C24260) ^ (16 * (v46 ^ 0xC0C24260)) & 0xC1CF4760;
  v49 = v39 - ((2 * v39) & 0x13925F00);
  v50 = v47 ^ 0xC1CF4760 ^ (v48 ^ 0xC44660) & (v47 << 8);
  v51 = v41 ^ (2
             * ((v50 << 16) & 0x41CF0000 ^ v50 ^ ((v50 << 16) ^ 0x47600000) & (((v48 ^ 0xC10B0160) << 8) & 0xC1CF0000 ^ 0x880000 ^ (((v48 ^ 0xC10B0160) << 8) ^ 0x4F470000) & (v48 ^ 0xC10B0160))));
  v52 = -1628255409
      - ((v51 >> 1) & 0x194D676A ^ 0x14DA3A82 | 0x9EF2CB4F)
      + ((v51 >> 1) & 0x194D676A ^ 0x14DA3A82 | 0x610D34B0);
  v53 = (((v51 ^ 0x5F50ACD5) - 1270255247) ^ ((v51 ^ 0xC30823FE) + 672267868) ^ ((v51 ^ 0x6E98EB06) - 2055129436))
      - 1433049940;
  v54 = (v53 ^ 0x32DA46C3) & (2 * (v53 & 0x849A64E2)) ^ v53 & 0x849A64E2;
  v55 = ((2 * (v53 ^ 0x3BEE8687)) ^ 0x7EE9C4CA) & (v53 ^ 0x3BEE8687) ^ (2 * (v53 ^ 0x3BEE8687)) & 0xBF74E264;
  v56 = v55 ^ 0x81142225;
  v57 = (v55 ^ 0x36608000) & (4 * v54) ^ v54;
  v58 = ((4 * v56) ^ 0xFDD38994) & v56 ^ (4 * v56) & 0xBF74E264;
  v59 = (v58 ^ 0xBD508001) & (16 * v57) ^ v57;
  v60 = ((16 * (v58 ^ 0x2246261)) ^ 0xF74E2650) & (v58 ^ 0x2246261) ^ (16 * (v58 ^ 0x2246261)) & 0xBF74E260;
  v61 = v59 ^ 0xBF74E265 ^ (v60 ^ 0xB7442200) & (v59 << 8);
  v62 = (((v51 ^ 0x7D5B8978) - 1774037794) ^ ((v51 ^ 0xC3FA802) - 416909912) ^ ((v51 ^ 0x83A44557) + 1757255923))
      - 416100123;
  v63 = (v62 ^ 0x54067BB6) & (2 * (v62 & STACK[0x4F0])) ^ v62 & STACK[0x4F0];
  v64 = ((2 * (v62 ^ 0x74064E36)) ^ 0xCA006BEC) & (v62 ^ 0x74064E36) ^ (2 * (v62 ^ 0x74064E36)) & 0xE50035F6;
  v65 = (v64 ^ 0xE1002112) & (4 * v63) ^ v63;
  v66 = ((4 * (v64 ^ 0x25001412)) ^ 0x9400D7D8) & (v64 ^ 0x25001412) ^ (4 * (v64 ^ 0x25001412)) & 0xE50035F4;
  v67 = v53 ^ (2
             * ((v61 << 16) & 0x3F740000 ^ v61 ^ ((v61 << 16) ^ 0x62650000) & (((v60 ^ 0x830C025) << 8) & 0x3F740000 ^ 0xB140000 ^ (((v60 ^ 0x830C025) << 8) ^ 0x74E20000) & (v60 ^ 0x830C025))));
  v68 = ((16 * (v66 ^ 0x61002026)) ^ 0x50035F60) & (v66 ^ 0x61002026) ^ (16 * (v66 ^ 0x61002026)) & 0xE50035F0;
  v69 = v68 ^ 0xA5002096;
  v70 = (v66 ^ 0x840015C6) & (16 * v65) ^ v65 ^ 0xE50035F6 ^ (v68 ^ 0x40001596) & (((v66 ^ 0x840015C6) & (16 * v65) ^ v65) << 8);
  v71 = v62 ^ (2
             * ((v70 << 16) & 0x65000000 ^ v70 ^ ((v70 << 16) ^ 0x35F60000) & ((v69 << 8) & 0xE5000000 ^ 0x65000000 ^ ((v69 << 8) ^ 0x350000) & v69)));
  v72 = STACK[0x6A50];
  v73 = v71 ^ 0x4FDA04E5;
  v74 = v19 ^ 0xE966ABA2 ^ v71 ^ 0x4FDA04E5;
  v75 = (((v71 >> 1) & 0x10440520 ^ 0x54D21185) + ((v71 >> 1) & 0x909624A) - 1) ^ 0x18C7D7C7;
  v76 = LODWORD(STACK[0x6A80]) ^ v22 ^ (((v22 >> 1) & v10 ^ 0x10700)
                                      + ((v22 >> 1) & 0x46702 ^ 0x2214E803)
                                      - (((v22 >> 1) & v10 ^ 0x10700) & 0x46702)) & 0x3BFFFFFE ^ v51;
  v77 = (v74 + v8) >> 16;
  v78 = (v74 + v8 - v77) >> 8;
  LODWORD(STACK[0x6A80]) = v76 ^ v52 ^ (v21 + v74 - v78 - v77) ^ 0x547EC7D2 ^ (((_DWORD)v21 + v74 - v78 - v77) >> 1) & 0x194D676A;
  v79 = v72 + v9 + v74 - v78 - v77;
  v80 = LODWORD(STACK[0x6AA0]) ^ (LODWORD(STACK[0x6A60]) + 960350374) ^ ((LODWORD(STACK[0x6A60])
                                                                                      + 960350374) >> 1) & 0x194D676A ^ (v67 >> 1) & 0x194D676A ^ (v72 + v7 + v74 - v78 - v77) ^ 0x194D4000 ^ (((_DWORD)v72 + v7 + v74 - v78 - v77) >> 1) & 0x194D676A;
  v81 = (-490203031 - (((v79 >> 1) ^ 0xA5D7BB92) & 0xE722174D) + (STACK[0x4F4] & (2 * ((v79 >> 1) ^ 0xA5D7BB92)))) ^ ((v79 >> 1) ^ 0xA5D7BB92) & 0xFE6F7027;
  v82 = LODWORD(STACK[0x6AB0]) ^ v30 ^ (v49 - 1345769599) ^ v73 ^ v79 ^ (v75 - ((2 * v75) & 0x90030CC2) + 1755418337);
  LODWORD(STACK[0x6AA0]) = v67 ^ 0xAD859E75 ^ (v80 - ((2 * v80) & 0x267C7CBA) + 322846301);
  v83 = (v81 & 0xDD49536F ^ 0x98115006) + (v81 ^ 0x47CA0B69) - ((v81 ^ 0x47CA0B69) & 0xDD49536F);
  v84 = *(_QWORD *)(STACK[0x6AD8] + 8 * ((5262 * (v21 == 15)) ^ LODWORD(STACK[0x6A30])));
  LODWORD(STACK[0x6AB0]) = v82 ^ 0x4918EDA1 ^ v83;
  return ((uint64_t (*)(void))(v84 - 8))();
}

uint64_t sub_100C7DA68(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;

  v68 = (v64 + a8) >> 16;
  v69 = (v64 + a8 - v68) >> 8;
  v70 = STACK[0x6A40];
  v71 = (a3 + v64 - v69 - v68 - a2) >> (LODWORD(STACK[0x6A40]) + 97);
  v72 = (v71 + v64 + v66 - v69 - v68) >> 1;
  v73 = a3 + v71 - ((2 * (a3 + v71 + v64 - v72 - v69 - v68 - a2)) & 0xFF256DA) + v64 - v72 - v69 - v68 - v65;
  v74 = (((v73 ^ 0xA34CF1D5) + 1555238443) ^ ((v73 ^ 0x262E640A) - 640574474) ^ ((v73 ^ 0x829BBEB2) + 2103722318))
      - 640967566;
  v75 = v74 + (v74 >> 14) + ((v74 + (v74 >> 14)) >> 8);
  v76 = v75 - ((2 * v75) & 0xD6298672) - 350960839;
  v77 = ((v76 ^ 0x142E81FE) - 338592254) ^ ((v76 ^ 0x1EC92D6) - 32281302) ^ ((v76 ^ 0xFED6D011) + 19476463);
  v78 = v77 + ((v77 + 2026923153) >> 15) - 577204869;
  v79 = (v78 ^ 0x93B78707) & (2 * (v78 & 0x9B37D716)) ^ v78 & 0x9B37D716;
  v80 = ((2 * (v78 ^ 0x85D0A92B)) ^ 0x3DCEFC7A) & (v78 ^ 0x85D0A92B) ^ (2 * (v78 ^ 0x85D0A92B)) & 0x1EE77E3C;
  v81 = v80 ^ 0x2210205;
  v82 = (v80 ^ 0x1CC67C38) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ 0x7B9DF8F4) & v81 ^ (4 * v81) & 0x1EE77E3C;
  v84 = (v83 ^ a53) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0x4620609)) ^ 0xEE77E3D0) & (v83 ^ 0x4620609) ^ (16 * (v83 ^ 0x4620609)) & 0x1EE77E30;
  v86 = v84 ^ 0x1EE77E3D ^ (v85 ^ 0xE676200) & (v84 << 8);
  v87 = (v78 ^ (2
              * ((v86 << 16) & 0x1EE70000 ^ v86 ^ ((v86 << 16) ^ 0x7E3D0000) & (((v85 ^ 0x10801C2D) << 8) & 0x1EE70000 ^ 0x18810000 ^ (((v85 ^ 0x10801C2D) << 8) ^ 0xE77E0000) & (v85 ^ 0x10801C2D))))) >> 8;
  v88 = v78 + 1567507290 + (((v87 ^ a55) + 91265878) ^ ((v87 ^ 0x6A556035) + 1780411284) ^ ((v87 ^ a54) + 1874806860));
  v89 = (v88 ^ 0xB8FE138E) & (2 * (v88 & 0x3CF85B2E)) ^ v88 & 0x3CF85B2E;
  v90 = ((2 * (v88 ^ 0xA9CE81C2)) ^ 0x2A6DB5D8) & (v88 ^ 0xA9CE81C2) ^ (2 * (v88 ^ 0xA9CE81C2)) & 0x9536DAEC;
  v91 = v90 ^ 0x95124A24;
  v92 = (v90 ^ 0x2090C8) & (4 * v89) ^ v89;
  v93 = ((4 * v91) ^ 0x54DB6BB0) & v91 ^ (4 * v91) & 0x9536DAEC;
  v94 = (v93 ^ 0x14124AA0) & (16 * v92) ^ v92;
  v95 = ((16 * (v93 ^ a56)) ^ 0x536DAEC0) & (v93 ^ a56) ^ (16 * (v93 ^ a56)) & 0x9536DAE0;
  v96 = v94 ^ 0x9536DAEC ^ (v95 ^ 0x11248A2C) & (v94 << 8);
  v97 = v88 ^ (2
             * ((v96 << 16) & 0x15360000 ^ v96 ^ ((v96 << 16) ^ 0x5AEC0000) & (((v95 ^ a57) << 8) & 0x15360000 ^ 0x1240000 ^ (((v95 ^ a57) << 8) ^ 0x36DA0000) & (v95 ^ a57))));
  v98 = v97 ^ 0x62D74C19;
  v99 = (((v97 ^ 0xA4FA6D79) - 1198195642) ^ ((v97 ^ 0x245E52D0) + 942719981) ^ ((v97 ^ 0x9A4DD602) - 2044508353))
      + ((v97 >> 9) ^ 0xFFF28B0B);
  v100 = ((v99 + 1373038072) ^ 0x9719196C) & (2 * ((v99 + 1373038072) & 0xA7A1A171)) ^ (v99 + 1373038072) & 0xA7A1A171;
  v101 = ((2 * ((v99 + 1373038072) ^ a58)) ^ 0x73F5F1BE) & ((v99 + 1373038072) ^ a58) ^ (2 * ((v99 + 1373038072) ^ a58)) & 0x39FAF8DE;
  v102 = v101 ^ 0x80A0841;
  v103 = (v101 ^ 0x3180808C) & (4 * v100) ^ v100;
  v104 = ((4 * v102) ^ 0xE7EBE37C) & v102 ^ (4 * v102) & 0x39FAF8DC;
  v105 = (v104 ^ 0x21EAE050) & (16 * v103) ^ v103;
  v106 = ((16 * (v104 ^ 0x18101883)) ^ 0x9FAF8DF0) & (v104 ^ 0x18101883) ^ (16 * (v104 ^ 0x18101883)) & 0x39FAF8D0;
  v107 = v105 ^ 0x39FAF8DF ^ (v106 ^ 0x19AA8800) & (v105 << 8);
  v108 = ((v99 + 1373038072) ^ (2
                              * ((v107 << 16) & 0x39FA0000 ^ v107 ^ ((v107 << 16) ^ 0x78DF0000) & (((v106 ^ 0x2050700F) << 8) & 0x39FA0000 ^ 0x1020000 ^ (((v106 ^ 0x2050700F) << 8) ^ 0x7AF80000) & (v106 ^ 0x2050700F))))) >> 3;
  v109 = v99
       - (((v108 ^ 0x50EF63E8) + 448615725) ^ ((v108 ^ 0x8266906A) - 936073553) ^ ((v108 ^ 0xC635F99B) - 1939353760))
       - 1649764607;
  v110 = (v109 ^ a59) & (2 * (v109 & 0xBABC2D46)) ^ v109 & 0xBABC2D46;
  v111 = ((2 * (v109 ^ 0x95D6067C)) ^ 0x5ED45674) & (v109 ^ 0x95D6067C) ^ (2 * (v109 ^ 0x95D6067C)) & 0x2F6A2B3A;
  v112 = v111 ^ 0x212A290A;
  v113 = (v111 ^ 0xE4A0232) & (4 * v110) ^ v110;
  v114 = ((4 * v112) ^ 0xBDA8ACE8) & v112 ^ (4 * v112) & 0x2F6A2B38;
  v115 = (v114 ^ 0x2D282820) & (16 * v113) ^ v113;
  v116 = ((16 * (v114 ^ 0x2420312)) ^ 0xF6A2B3A0) & (v114 ^ 0x2420312) ^ (16 * (v114 ^ 0x2420312)) & 0x2F6A2B30;
  v117 = v115 ^ 0x2F6A2B3A ^ (v116 ^ a60) & (v115 << 8);
  v118 = v109 ^ (2
               * ((v117 << 16) & 0x2F6A0000 ^ v117 ^ ((v117 << 16) ^ 0x2B3A0000) & (((v116 ^ 0x948081A) << 8) & 0x2F6A0000 ^ 0x5400000 ^ (((v116 ^ 0x948081A) << 8) ^ 0x6A2B0000) & (v116 ^ 0x948081A))));
  v119 = ((v118 >> 8) ^ 0x6AF2A0) + (v118 ^ 0x6AF2A05B) + ((((v118 >> 8) ^ 0x6AF2A0) + (v118 ^ 0x6AF2A05B)) >> 2);
  v120 = v119 - 1656269659 + ((v119 - 1656269659) >> 8) - ((v119 - 1656269659 + ((v119 - 1656269659) >> 8)) >> 6);
  v121 = v120 - (a61 & (2 * v120)) - 1547903023;
  v122 = (v121 ^ 0x94A32EC0) + ((v121 ^ 0x94A32EC0) >> 9) - (((v121 ^ 0x94A32EC0) + ((v121 ^ 0x94A32EC0) >> 9)) >> 3);
  v123 = v122 + 1647959806 + ((v122 + 1647959806) >> 8) + ((v122 + 1647959806 + ((v122 + 1647959806) >> 8)) >> 2);
  v124 = v123 - 1837718061 + ((v123 - 1837718061) >> 14) - ((v123 - 1837718061 + ((v123 - 1837718061) >> 14)) >> 1);
  v125 = LODWORD(STACK[0x6520]) ^ LODWORD(STACK[0x6830]);
  v126 = STACK[0x6A00];
  v127 = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6540]);
  LODWORD(STACK[0x6A30]) = v124;
  LODWORD(STACK[0x6A60]) = v98;
  LODWORD(STACK[0x6A50]) = v121;
  v128 = v67 & ((v121 ^ v98 ^ (v124 + 934706495 + (~(2 * v124) | 0x10930583))) >> 1) ^ LODWORD(STACK[0x6950]);
  v129 = STACK[0x6698];
  LODWORD(STACK[0x6950]) = v127;
  LODWORD(STACK[0x6A70]) = v76;
  v130 = v127 ^ v129 ^ v76 ^ (v119 - ((2 * v119) & 0xD38EEEB0) - 372803752) ^ v123;
  v131 = STACK[0x67D0];
  v132 = (v130 + 1999489087 - ((2 * v130) & 0x2E5B907E)) ^ v126;
  v133 = LODWORD(STACK[0x6AA0]) ^ v126 ^ v119 ^ v123 ^ (1999489087 - (v132 & 0x221A8054) + (v67 & (v132 >> 1)));
  v134 = (((v125 ^ a62) + 1529934697) ^ ((v125 ^ 0xC6F630B2) + 956944206) ^ ((v125 ^ 0x74A1779C) - 1956738972))
       - (((v125 ^ v131 ^ 0x176BD335) - 392942389) ^ ((v125 ^ v131 ^ 0xFABFAA4D) + 88102323) ^ ((v125 ^ v131 ^ 0xC4F0C307)
                                                                                              + 990854393))
       + 865277252;
  v135 = (v134 ^ 0x39CD73E5) & (2 * (v134 & 0xB9E07BF6)) ^ v134 & 0xB9E07BF6;
  v136 = ((2 * (v134 ^ 0x5BCD5641)) ^ 0xC45A5B6E) & (v134 ^ 0x5BCD5641) ^ (2 * (v134 ^ 0x5BCD5641)) & 0xE22D2DB6;
  v137 = v136 ^ 0x22252491;
  v138 = (v136 ^ 0xC0240921) & (4 * v135) ^ v135;
  v139 = ((4 * v137) ^ 0x88B4B6DC) & v137 ^ (4 * v137) & 0xE22D2DB4;
  v140 = (v139 ^ 0x80242483) & (16 * v138) ^ v138;
  v141 = ((16 * (v139 ^ 0x62090923)) ^ 0x22D2DB70) & (v139 ^ 0x62090923) ^ (16 * (v139 ^ 0x62090923)) & 0xE22D2DB0;
  v142 = v140 ^ 0xE22D2DB7 ^ (v141 ^ 0x22000987) & (v140 << 8);
  v143 = ((v142 << 16) ^ 0x2DB70000) & (((v141 ^ 0xC02D2487) << 8) & 0x622D0000 ^ 0x42000000 ^ (((v141 ^ 0xC02D2487) << 8) ^ 0x2D2D0000) & (v141 ^ 0xC02D2487));
  v144 = 212072270
       - (((LODWORD(STACK[0x6900]) ^ 0x8C5D69C7) + 1106340077) ^ ((LODWORD(STACK[0x6900]) ^ 0x68E1E101) - 1521622997) ^ ((LODWORD(STACK[0x6900]) ^ 0xE95387D4) + 620726016));
  v145 = (v144 ^ 0x331FD6EF) & (2 * (v144 & 0xB39F16EC)) ^ v144 & 0xB39F16EC;
  v146 = ((2 * (v144 ^ 0x1603D767)) ^ 0x4B398316) & (v144 ^ 0x1603D767) ^ (2 * (v144 ^ 0x1603D767)) & 0xA59CC18A;
  v147 = v146 ^ 0xA4844089;
  v148 = (v146 ^ 0x20188109) & (4 * v145) ^ v145;
  v149 = ((4 * v147) ^ 0x9673062C) & v147 ^ (4 * v147) & 0xA59CC188;
  v150 = (v149 ^ 0x84100003) & (16 * v148) ^ v148;
  v151 = ((16 * (v149 ^ 0x218CC183)) ^ 0x59CC18B0) & (v149 ^ 0x218CC183) ^ (16 * (v149 ^ 0x218CC183)) & 0xA59CC180;
  v152 = v150 ^ 0xA59CC18B ^ (v151 ^ 0x18C000B) & (v150 << 8);
  v153 = v67 & (LODWORD(STACK[0x6840]) >> 1) ^ 0x1080700;
  LODWORD(STACK[0x6520]) = (2 * v133) & 0xD6298672;
  LODWORD(STACK[0x6540]) = v133 - 350960839;
  LODWORD(STACK[0x6AA0]) = (v153 | 0xD349AB86) - (v153 | 0x2CB65479) + 750146681;
  v154 = v144 ^ v131 ^ v134 ^ (2
                             * ((v152 << 16) & 0x259C0000 ^ v152 ^ ((v152 << 16) ^ 0x418B0000) & (((v151 ^ 0xA410C10B) << 8) & 0xA59C0000 ^ 0x211C0000 ^ (((v151 ^ 0xA410C10B) << 8) ^ 0x9CC10000) & (v151 ^ 0xA410C10B)) ^ v142 ^ (v142 << 16) & 0x622D0000 ^ v143));
  v155 = v67 & ((LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x66A0]) ^ v73 ^ v118 ^ 0x9FCE77B2 ^ v122) >> 1) ^ 0x4D0020;
  v156 = (v155 - 187175480 - ((2 * v155) & 0x208ACA90)) ^ 0xB348FFBF;
  v157 = LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x6A80]) ^ v73 ^ v118 ^ 0x9FCE77B2 ^ (v122 - ((2 * v122) & 0x51A4BD6A) + 684875445) ^ (v156 - ((2 * v156) & 0xB742C44E) - 610180569);
  v158 = (((v125 ^ 0xEB62200C) + 345890804) ^ ((v125 ^ 0x6E630656) - 1851983446) ^ ((v125 ^ 0x93996DE3) + 1818661405))
       + 826521023
       + (((v154 ^ 0x15A04BBA) + 22418950) ^ ((v154 ^ 0x6B5BC0AD) + 2142084371) ^ ((v154 ^ 0x8701CFB3) - 1812491763));
  v159 = (v158 ^ 0xFE677E9E) & (2 * (v158 & 0xF8487CDE)) ^ v158 & 0xF8487CDE;
  v160 = ((2 * (v158 ^ 0x8E77960A)) ^ 0xEC7FD5A8) & (v158 ^ 0x8E77960A) ^ (2 * (v158 ^ 0x8E77960A)) & 0x763FEAD4;
  v161 = v160 ^ 0x12002A54;
  v162 = (v160 ^ 0x6023C080) & (4 * v159) ^ v159;
  v163 = ((4 * v161) ^ 0xD8FFAB50) & v161 ^ (4 * v161) & 0x763FEAD4;
  v164 = (v163 ^ 0x503FAA40) & (16 * v162) ^ v162;
  v165 = ((16 * (v163 ^ 0x26004084)) ^ 0x63FEAD40) & (v163 ^ 0x26004084) ^ (16 * (v163 ^ 0x26004084)) & 0x763FEAD0;
  v166 = v164 ^ 0x763FEAD4 ^ (v165 ^ 0x623EA800) & (v164 << 8);
  v167 = v158 ^ (2
               * ((v166 << 16) & 0x763F0000 ^ v166 ^ ((v166 << 16) ^ 0x6AD40000) & (((v165 ^ a63) << 8) & 0x763F0000 ^ 0x40150000 ^ (((v165 ^ a63) << 8) ^ 0x3FEA0000) & (v165 ^ a63))));
  LODWORD(STACK[0x6388]) = v167;
  v168 = ((2 * (v67 & (v167 >> 1) ^ 0x4240A)) & 0x12804680) - (v67 & (v167 >> 1) ^ 0x4240A) + 1992150078;
  LODWORD(STACK[0x6A80]) = (v168 & 0xDE57D368 ^ 0x80435361 | v168 & 0x21882C82) - 1;
  LODWORD(STACK[0x63F0]) = a64 & (2 * v128);
  LODWORD(STACK[0x6330]) = v128 - 1066368112;
  LODWORD(STACK[0x68B0]) = v157;
  LODWORD(STACK[0x68A0]) = v157 ^ 0x7142E618;
  LODWORD(STACK[0x6870]) = LODWORD(STACK[0x66B0]) ^ 0x47EDBCEB;
  LODWORD(STACK[0x6910]) = LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x69E0]);
  v169 = STACK[0x6750];
  LODWORD(STACK[0x66A0]) = STACK[0x6750] & 6 ^ 2;
  LODWORD(STACK[0x6698]) = (v169 & 1) == 0;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v70) - 8))(445780889, LODWORD(STACK[0x6960]));
}

uint64_t sub_100C7ECC0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, char a5@<W5>, int a6@<W8>)
{
  int v6;
  int v7;
  __int16 v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  char v23;
  int v24;
  int v25;
  uint64_t v26;

  v22 = v6 ^ 0xB3DBCBCC ^ ((((v6 & STACK[0x6870] ^ v12 | v18) - (v6 & STACK[0x6870] ^ v12 | a1)) << (a3 ^ a5))
                         + 891561778);
  v23 = STACK[0x68F0];
  v24 = (v6 ^ v13) + v20 + *((_DWORD *)*(&off_1015B46D0 + (a3 ^ v7)) + (v6 ^ 0xFEu) - 3);
  v25 = v24 ^ v21 ^ (2
                   * ((((v24 ^ a4) & v16 ^ v24 & v14) & a6 ^ v11)
                    + ((v24 ^ a4) & v16 ^ v24 & v14 ^ 0x444D00)
                    - (((v24 ^ a4) & v16 ^ v24 & v14 ^ 0x444D00) & a6)));
  v26 = 4 * ((((v15 & v22) >> v23) + (v22 << STACK[0x68D0])) ^ LODWORD(STACK[0x6910]));
  *(_DWORD *)(STACK[0xD680] + v26) = a2 ^ v19 ^ (((v25 & STACK[0x68C0]) << LODWORD(STACK[0x6698]) << LODWORD(STACK[0x66A0])) | ((v25 & STACK[0x68E0]) >> v23));
  *(_DWORD *)(v17 + v26) = a2 ^ v19 ^ (unsigned __int16)((*((_WORD *)*(&off_1015B46D0 + (a3 ^ v9)) + (v6 ^ 0x14u))
                                                        - 31448) ^ v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 != 255) * v10) ^ a3)) - 8))();
}

uint64_t sub_100C7EE50(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  unint64_t v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  char v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  int v209;
  char v210;
  char v211;
  int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  unsigned int v227;
  int v228;
  int v229;
  int v230;
  char v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  unsigned int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  unsigned int v253;
  char v254;
  unsigned int v255;
  char v256;
  int v257;
  unsigned int v258;
  int v259;
  int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  char v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  unsigned int v276;
  char v277;
  char v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  char v283;
  unsigned int v284;
  int v285;
  int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  char v292;
  char v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  unsigned int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  unsigned int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  char v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  char v327;
  int v328;
  int v329;
  char v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  int v336;
  unsigned int v337;
  int v338;
  int v339;
  char v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  char v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  int v349;
  char v350;
  unsigned int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  int v365;
  unint64_t v366;
  unint64_t v367;
  unint64_t v368;
  unint64_t v369;
  unint64_t v370;
  int v371;
  uint64_t v372;
  int v373;
  int v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  int v379;
  unsigned int v380;
  int v381;
  int v382;
  char v383;
  unsigned int v384;
  int v385;
  int v386;
  int v387;
  char v388;
  unsigned int v389;
  unsigned int v390;
  int v391;
  char v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  int v396;
  int v397;
  int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  int v415;
  unsigned int v416;
  int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  unsigned int v430;
  unsigned int v431;
  int v432;
  unint64_t v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  int v437;
  uint64_t (*v438)(void);

  v82 = LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x6658]) ^ LODWORD(STACK[0x63E8]);
  v83 = LODWORD(STACK[0x6348]) ^ LODWORD(STACK[0x6380]) ^ LODWORD(STACK[0x67E0]);
  v84 = LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6408]) ^ LODWORD(STACK[0x6A70]) ^ (LODWORD(STACK[0x6540])
                                                                                  - LODWORD(STACK[0x6520]));
  v85 = LODWORD(STACK[0x6388]) ^ LODWORD(STACK[0x6A80]);
  v86 = LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A30]) ^ (LODWORD(STACK[0x6330])
                                                                                  - LODWORD(STACK[0x63F0]));
  LODWORD(STACK[0x6900]) = LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x69E0]);
  LODWORD(STACK[0x64A8]) = LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6940]);
  v87 = STACK[0x6A20];
  v88 = v82 ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x6340]) ^ v83 ^ 0x85D78AF6;
  LODWORD(STACK[0x6330]) = v88;
  v89 = STACK[0x6830];
  v90 = LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x67D0]) ^ v85 ^ LODWORD(STACK[0x6AB0]) ^ v86;
  LODWORD(STACK[0x6350]) = v90;
  v91 = STACK[0x6338];
  v92 = STACK[0x6970];
  v93 = STACK[0x64A0];
  v94 = LODWORD(STACK[0x64A0]) ^ LODWORD(STACK[0x6970]) ^ (v91 - ((2 * v91) & 0xACDEDA7A) - 697340611);
  LODWORD(STACK[0x6520]) = a4 ^ 0x646B;
  STACK[0x6658] = (a4 ^ 0x646Bu) + 14268;
  v95 = STACK[0x6500];
  v96 = LODWORD(STACK[0x66E0]) ^ LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x6720]) ^ v89 ^ LODWORD(STACK[0x6500]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x6A00]) ^ (LODWORD(STACK[0x68A0]) - 2 * (STACK[0x68A0] & 0x30A7E48D ^ STACK[0x68B0] & 1) - 1331174260) ^ (v94 + 1999489087 - ((v94 << (((a4 ^ 0x6B) - 68) ^ 0xAE)) & 0xEE5B907E));
  v97 = STACK[0x6610];
  v98 = STACK[0x6770];
  v99 = STACK[0x64F0];
  v100 = LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6580]) ^ LODWORD(STACK[0x6610]) ^ LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x64F0]);
  v101 = v84 ^ 0x6A7001D3;
  v102 = ((v101 ^ v100) + 875128667 - ((2 * (v101 ^ v100)) & 0x6852CEB6)) ^ v87;
  v103 = v102 - ((2 * v102) & 0xA581032C);
  v104 = LODWORD(STACK[0x6708]) ^ LODWORD(STACK[0x65A0]) ^ LODWORD(STACK[0x6860]) ^ LODWORD(STACK[0x6550]) ^ LODWORD(STACK[0x6538]) ^ LODWORD(STACK[0x6528]) ^ LODWORD(STACK[0x6518]) ^ v96 & 0xFFFFFBFF;
  v105 = v96 & 0x400;
  if ((v105 & STACK[0x6590]) != 0)
    v105 = -v105;
  v106 = v104 ^ (v105 + LODWORD(STACK[0x6590]));
  v107 = STACK[0x66B0];
  v108 = v106 & 0x3AF6588D ^ 0xA461884 ^ (v106 ^ 0x32F21C1D) & (LODWORD(STACK[0x66B0]) ^ 0x7D1BE466);
  v109 = v106 ^ 0x78E59DB ^ (2 * ((v108 | 0x220A226A) - (v108 | 0x5DF5DD95)) - 1142179030);
  v110 = LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6650]) ^ LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x6588]) ^ LODWORD(STACK[0x6570]) ^ (LODWORD(STACK[0x67C0]) - ((2 * LODWORD(STACK[0x6578])) & 0x60455026) - 609139480) ^ LODWORD(STACK[0x6530]) ^ LODWORD(STACK[0x6A10]) ^ v88 ^ v90 ^ (v103 - 759135850);
  v111 = STACK[0x66B8];
  v112 = STACK[0x6678];
  v113 = STACK[0x68D0];
  v114 = (v109 & STACK[0x6678]) << STACK[0x68D0];
  v115 = STACK[0x68E0];
  v116 = STACK[0x6668];
  v117 = STACK[0x6668] & 0x1E ^ 0x12;
  LODWORD(STACK[0x6540]) = v117;
  v118 = (v109 & v115) >> v117;
  v119 = (v116 & 1) == 0;
  LODWORD(STACK[0x6268]) = v119;
  LODWORD(STACK[0x6388]) = (v118 >> v119) | v114;
  v120 = v110 ^ (2 * ((v110 ^ 0x340854E4) & (v111 ^ 0x621D1900) ^ v110 & 0x73454753)) ^ 0x5408DC64;
  v121 = STACK[0x6670];
  v122 = STACK[0x68C0];
  v123 = STACK[0x6430];
  v124 = STACK[0x68F0];
  LODWORD(STACK[0x6380]) = ((v120 & STACK[0x6670]) >> LODWORD(STACK[0x68F0])) | ((v120 & STACK[0x68C0]) << v123);
  v125 = v111 ^ 0x11585E53;
  v126 = v99 ^ 0xC248FEE4 ^ (2 * (((2 * (v99 & v125 ^ 0x6414220)) & 0x3135855A) - (v99 & v125 ^ 0x6414220)) - 825591132);
  v127 = STACK[0x6418];
  v128 = STACK[0x6870];
  LODWORD(STACK[0x6AB0]) = ((v121 & v126) >> v124) + ((v126 & v122) << v123);
  v129 = v127 ^ (2
               * ((v128 & v127 & 0x1FBD8AE8 ^ 0x1E3480E8)
                + (v128 & v127 ^ 0x1890F04)
                - ((v128 & v127 ^ 0x1890F04) & 0x1FBD8AE8))) ^ 0x3C690BD8;
  v130 = v116 & 0x1B ^ 0x13;
  v131 = STACK[0x66D0] & 4;
  LODWORD(STACK[0x63E8]) = v131;
  LODWORD(STACK[0x63F0]) = v130;
  LODWORD(STACK[0x67E0]) = ((v129 & v112) << v113) + ((v129 & v115) >> v131 >> v130);
  v132 = STACK[0x69F0] & 0x15D22432 ^ 0x14D02002 ^ (LODWORD(STACK[0x69F0]) ^ 0x515FDFBF) & (v111 ^ 0x48A7A61);
  v133 = (2 * (((2 * v132) | 0x3564D922) - v132) + 1251682014) ^ 0xBE609142;
  v134 = (v133 - ((2 * v133) & 0xACDEDA78) - 697340611) ^ v92;
  v135 = LODWORD(STACK[0x6558]) ^ 0x8F8C1AC ^ (2
                                             * ((v128 & STACK[0x6558] & 0x72CE8E7B ^ 0x4C0052)
                                              + (v128 & STACK[0x6558] & a59 ^ 0x4306085))
                                             - 2);
  LODWORD(STACK[0x6970]) = ((v134 & v122) << v113) + ((v134 & v115) >> v124);
  v136 = STACK[0x6698];
  v137 = STACK[0x66A0];
  v138 = v116 & 0x19 ^ 0x11;
  LODWORD(STACK[0x6348]) = v138;
  v139 = v116 & 6 ^ 2;
  LODWORD(STACK[0x6340]) = v139;
  LODWORD(STACK[0x67D0]) = ((v121 & v135) >> v138 >> v139) ^ ((v135 & v112) << v136 << v137);
  v140 = LODWORD(STACK[0x6560]) ^ 0x2077F8A ^ (2
                                             * (((2 * (v125 & STACK[0x6560] ^ 0x4004C010)) | 0x20EFFAA)
                                              - (v125 & STACK[0x6560] ^ 0x4004C010))
                                             + 2112946262);
  v141 = v84 & 0xEB02A0D3 ^ 0xA900A0C1 ^ v101 & (v107 ^ 0xACEF1C38);
  v142 = v84 ^ 0x91ADF55D ^ (2 * (((2 * v141) | 0x7DDCB4AA) - v141) - 2111616170);
  LODWORD(STACK[0x6960]) = ((v121 & (v95 ^ (2 * (v128 & v95)))) >> (v116 & 0x1B ^ 0x13) >> v131)
                         + (((v95 ^ (2 * (v128 & v95))) & v112) << v137 << v136);
  LODWORD(STACK[0x67C0]) = ((v122 & v140) << v113) | ((v115 & v140) >> v124);
  v143 = LODWORD(STACK[0x6428]) ^ 0xF5B01590 ^ (2
                                              * ((((v111 ^ 0x33E68D44) & STACK[0x67B0] ^ STACK[0x6428] & 0x22BED317) & a60 ^ 1)
                                               + (((v111 ^ 0x33E68D44) & STACK[0x67B0] ^ STACK[0x6428] & 0x22BED317) & 0x7FF73F6 ^ 0x7E970E5))
                                              - 2);
  LODWORD(STACK[0x6AA0]) = ((v142 & v122) << v136 << v137) ^ ((v142 & v121) >> v124);
  v144 = (v107 ^ 0x4A6A4D6B) & STACK[0x6420];
  v145 = STACK[0x67A0];
  v146 = v116 & 0x1C ^ 0x10;
  LODWORD(STACK[0x6258]) = v146;
  v147 = ~v116 & 3;
  LODWORD(STACK[0x6260]) = v147;
  LODWORD(STACK[0x67B0]) = ((v112 & v143) << v113) | ((v115 & v143) >> v147 >> v146);
  v148 = v116 & 0xA ^ 2;
  LODWORD(STACK[0x6428]) = v148;
  v149 = v116 & 0x15 ^ 0x11;
  LODWORD(STACK[0x6420]) = v149;
  LODWORD(STACK[0x6A90]) = ((v121 & (v93 ^ (2 * (v93 & (v111 ^ 0x11585E53))))) >> v149 >> v148) | ((v122 & (v93 ^ (2 * (v93 & (v111 ^ 0x11585E53))))) << v113);
  v150 = v145 ^ (2 * (v144 ^ v145 & 0xD87F180)) ^ 0x51D81EBA;
  LODWORD(STACK[0x67A0]) = ((v150 & v115) >> v124) | ((v150 & v112) << v137 << v136);
  v151 = STACK[0x6790];
  LODWORD(STACK[0x6950]) = ((v122 & (v97 ^ (2 * (v128 & v97)))) << v113) | (((v97 ^ (2 * (v128 & v97))) & v115) >> v124);
  v152 = v151 ^ 0xEA337560 ^ (2 * (((2 * (v125 & v151 ^ 0x9C00A08)) | 0x79B36170) - (v125 & v151 ^ 0x9C00A08))
                            + 105684624);
  v153 = v121 & v152;
  v154 = (v112 & v152) << v136 << v137;
  v155 = v116 & 0x1A ^ 0x12;
  LODWORD(STACK[0x69E0]) = v155;
  v156 = v116 & 5 ^ 1;
  LODWORD(STACK[0x69F0]) = v156;
  LODWORD(STACK[0x6790]) = (v153 >> v156 >> v155) + v154;
  v157 = v91 ^ (2 * (v91 & (v111 ^ 0x11585E53)));
  v158 = v116 & 0xD ^ 1;
  v159 = (v121 & v157) >> v158;
  LODWORD(STACK[0x6560]) = v158;
  v160 = ~v116 & 0x12;
  LODWORD(STACK[0x6558]) = v160;
  LODWORD(STACK[0x6A80]) = (v159 >> v160) ^ ((v112 & v157) << v137 << v136);
  v161 = LODWORD(STACK[0x6780]) ^ (2 * (v128 & STACK[0x6780]));
  LODWORD(STACK[0x6780]) = ((v122 & v161) << v113) + ((v161 & v115) >> v124);
  v162 = v98 ^ (2
              * ((v125 & v98 & 0x32D08F17 ^ 0x10D00217)
               + (v125 & v98 ^ 0x622CCD00)
               - ((v125 & v98 ^ 0x622CCD00) & 0x32D08F17))) ^ 0xA1F8842E;
  v163 = v116 & 0xE ^ 2;
  v164 = ~v116 & 0x11;
  LODWORD(STACK[0x6500]) = v164;
  LODWORD(STACK[0x64F0]) = v163;
  LODWORD(STACK[0x6940]) = ((v122 & v162) << v113) + ((v115 & v162) >> v164 >> v163);
  v165 = LODWORD(STACK[0x6618]) ^ (2 * (v128 & STACK[0x6618]));
  v166 = STACK[0x6750];
  v167 = STACK[0x6750] & 5 ^ 1;
  LODWORD(STACK[0x6418]) = v167;
  v168 = ~LODWORD(STACK[0x6800]) & 2;
  LODWORD(STACK[0x6408]) = v168;
  LODWORD(STACK[0x6770]) = ((v121 & v165) >> v124) | ((v165 & v112) << v168 << v167);
  v169 = LODWORD(STACK[0x69C0]) ^ (2 * (STACK[0x69C0] & (v111 ^ 0x11585E53)));
  v170 = ~v166 & 3;
  v171 = v166 & 4;
  LOBYTE(v140) = v116 & 7 ^ 3;
  LOBYTE(v145) = v116 & 0x18 ^ 0x10;
  LODWORD(STACK[0x6A70]) = ((v121 & v169) >> v145 >> v140) + ((v169 & v112) << (v166 & 4) << (~(_BYTE)v166 & 3));
  v172 = LODWORD(STACK[0x6740]) ^ (2 * ((v107 ^ a61) & STACK[0x6360] ^ STACK[0x6740] & 0x4E8BA276));
  v173 = LODWORD(STACK[0x6760]) ^ 0xAF64C8 ^ (2
                                            * ((v125 & STACK[0x6760] ^ 0x86F44010 | 0x6A3F274)
                                             - (v125 & STACK[0x6760] ^ 0x86F44010 | 0x795C0D8B))
                                            - 222815466);
  LODWORD(STACK[0x6760]) = ((v122 & (v172 ^ 0xDB40850B)) << v113) + (((v172 ^ 0xDB40850B) & v115) >> v124);
  v174 = LODWORD(STACK[0x6370]) ^ 0x338150C5 ^ (2
                                              * ((STACK[0x6370] & 0x7CBD5161 ^ 0x74311040 ^ (v107 ^ 0x3B50ED8A) & STACK[0x6368])
                                               - ((2
                                                 * (STACK[0x6370] & 0x7CBD5161 ^ 0x74311040 ^ (v107 ^ 0x3B50ED8A) & STACK[0x6368])) & 0x74D27138))
                                              - 187535048);
  v175 = (v115 & v173) >> v140 >> v145;
  v176 = LODWORD(STACK[0x6820]) ^ (2 * (v128 & STACK[0x6820]));
  v177 = (LODWORD(STACK[0x6498]) ^ 0x3260F3B9) & (v111 ^ 0x6A4AFBA9) ^ STACK[0x6498] & 0x7B12A5FA;
  LODWORD(STACK[0x6A60]) = v175 + ((v112 & v173) << v137 << v136);
  v178 = (v111 ^ a62) & STACK[0x6620];
  v179 = STACK[0x63C8];
  v180 = (((2 * v177) ^ 0x64014370) + 875128667 - 2 * (((2 * v177) ^ 0x64014370) & 0x3429675E ^ (2 * v177) & 4)) ^ LODWORD(STACK[0x6A20]);
  LODWORD(STACK[0x6750]) = ((v121 & v174) >> v124) | ((v122 & v174) << v113);
  v181 = v179 ^ 0x5FECBDAE ^ (2
                            * ((v179 & 0x48EEAF0E ^ 0x48E20A0C ^ v178 | 0x29A9FBE7)
                             - (v179 & 0x48EEAF0E ^ 0x48E20A0C ^ v178 | 0x56560418))
                            - 1398011856);
  LODWORD(STACK[0x6A50]) = ((v122 & v176) << LODWORD(STACK[0x6430]))
                         + ((v176 & v115) >> (~(_BYTE)v116 & 0x11) >> (v116 & 0xE ^ 2));
  LODWORD(STACK[0x6740]) = ((v121 & v181) >> v124) | ((v112 & v181) << v113);
  LODWORD(STACK[0x6A40]) = ((v180 & v121) >> v124) ^ ((v180 & v112) << v113);
  v182 = v107;
  v183 = LODWORD(STACK[0x6730]) ^ a64 ^ (2
                                       * (((2 * (STACK[0x6730] & 0x4FD59157 ^ a66 ^ (v107 ^ a63) & STACK[0x6628])) & 0x52E9011E)
                                        - (STACK[0x6730] & 0x4FD59157 ^ a66 ^ (v107 ^ a63) & STACK[0x6628]))
                                       - 1391001888);
  v184 = STACK[0x6720];
  v185 = (v184 & 0x87D72150 ^ 0x7C30050 ^ (v107 ^ 0xC03A9DBB) & STACK[0x63C0])
       - (a65 & (2 * (v184 & 0x87D72150 ^ 0x7C30050 ^ (v107 ^ 0xC03A9DBB) & STACK[0x63C0])));
  v186 = v171;
  LODWORD(STACK[0x6730]) = ((v122 & v183) << v171 << v170)
                         + ((v183 & v115) >> (v116 & 0xD ^ 1) >> (~(_BYTE)v116 & 0x12));
  v187 = v184 ^ 0x47C1F579 ^ (2 * v185 - 2048552472);
  v188 = (LODWORD(STACK[0x6890]) ^ 0x53E081ED) & (v111 ^ 0xBF30BBF2) ^ STACK[0x6890] & 0xAE68E5A1;
  v189 = (v188 & 0xFF14531 ^ 0x7910110) + (v188 & 0x700EBACE ^ 0x20008001);
  v190 = STACK[0x6400];
  v191 = (((v111 ^ 0x88441577) & STACK[0x6710] ^ v190 & 0x991C4B24) & 0x5C67DD3 ^ 0x4000)
       + (((v111 ^ 0x88441577) & STACK[0x6710] ^ v190 & 0x991C4B24) & 0x7A39822C ^ a67);
  v192 = v116 & 0x1D ^ 0x11;
  LODWORD(STACK[0x6628]) = v192;
  v193 = (v187 & v115) >> v192;
  v194 = ~v116 & 2;
  LODWORD(STACK[0x6620]) = v194;
  LODWORD(STACK[0x6A30]) = ((v122 & v187) << v137 << v136) | (v193 >> v194);
  v195 = (((2 * v189 - 2) ^ 0x4BE20162)
        - 2 * (((2 * v189 - 2) ^ 0x4BE20162) & 0x52C0819E ^ (2 * v189 - 2) & 8)
        - 759135850) ^ LODWORD(STACK[0x6A10]);
  v196 = v121;
  LODWORD(STACK[0x6720]) = ((v121 & (v190 ^ 0x4F14A0A3 ^ (2 * v191 - 2))) >> v124)
                         + ((v112 & (v190 ^ 0x4F14A0A3 ^ (2 * v191 - 2))) << v113);
  v197 = v112;
  v198 = STACK[0x6420];
  v199 = STACK[0x6428];
  LODWORD(STACK[0x6A20]) = ((v195 & v121) >> LODWORD(STACK[0x6420]) >> LODWORD(STACK[0x6428])) ^ ((v195 & v112) << v113);
  v200 = LODWORD(STACK[0x63F8]) ^ 0x60A88DFA ^ (2
                                              * (((2 * (v128 & STACK[0x63F8] ^ 0xB01F1109)) & 0x7F695016)
                                               - (v128 & STACK[0x63F8] ^ 0xB01F1109))
                                              + 9875432);
  v201 = STACK[0x6A00];
  LODWORD(STACK[0x6710]) = ((v122 & v200) << v136 << v137) + ((v200 & v115) >> v124);
  v202 = (2 * ((v201 ^ 0x5A294A7) & v128 ^ v182 & 0x728F5C98)) ^ 0x851A3910;
  v203 = (v202 + 1999489087 - ((2 * v202) & 0xEE5B907C)) ^ v201;
  v204 = (2 * (v125 & STACK[0x6568])) & 0xB98E8722 ^ STACK[0x6568] & 0xB98E8723 | ((2 * (v125 & STACK[0x6568])) ^ LODWORD(STACK[0x6568])) & 0x467178DC;
  v205 = STACK[0x6708];
  LODWORD(STACK[0x6A10]) = ((v203 & v115) >> v124) | ((v203 & v122) << v113);
  v207 = STACK[0x6468];
  v208 = 2 * (v128 & STACK[0x6468]);
  v209 = v208 & 0x8000;
  if (((unsigned __int16)v209 & STACK[0x6468]) != 0)
    v209 = -v209;
  v210 = STACK[0x6418];
  v211 = STACK[0x6408];
  v206 = v205 ^ 0x94FEEF3E ^ (2 * ((v125 & v205 ^ 0x45210028 | 0xF5E77B7) - (v125 & v205 ^ 0x45210028 | a68)) - 515698544);
  LODWORD(STACK[0x6A00]) = ((v196 & v206) >> LODWORD(STACK[0x69F0]) >> LODWORD(STACK[0x69E0])) ^ ((v122 & v206) << v210 << v211);
  v212 = v116 & 0x17 ^ 0x13;
  LODWORD(STACK[0x63C8]) = v212;
  LODWORD(STACK[0x63C0]) = v116 & 8;
  LODWORD(STACK[0x6708]) = ((v196 & v204) >> (v116 & 8) >> v212) | ((v112 & v204) << v137 << v136);
  v213 = LODWORD(STACK[0x6700]) ^ 0x6D372490 ^ (2
                                              * (((2 * (v128 & STACK[0x6700] ^ 0x40E14200)) | 0x6CF5A090)
                                               - (v128 & STACK[0x6700] ^ 0x40E14200))
                                              + 319446896);
  LODWORD(STACK[0x6700]) = ((((v209 + v207) ^ v208 & 0xFFFF7FFF) & v112) << v113) ^ ((((v209 + v207) ^ v208 & 0xFFFF7FFF) & v115) >> v124);
  v214 = v213 & v115;
  v215 = (v213 & v112) << v170;
  v216 = v186;
  LODWORD(STACK[0x69F0]) = (v214 >> v124) ^ (v215 << v186);
  v217 = LODWORD(STACK[0x6570]) ^ (2 * (v125 & (LODWORD(STACK[0x6638]) ^ 0x73689FDB) ^ v111 & 0x6E28376B));
  v218 = STACK[0x6980];
  v219 = (STACK[0x6980] & a70 | v122 & (v217 ^ 0x7469E018)) ^ a69;
  v220 = STACK[0x64C0];
  LODWORD(STACK[0x69E0]) = (((((v196 & (v217 ^ 0x4F269DA) ^ STACK[0x64C0] & 0xF785DDD) & 0xA3D9725C ^ 0xA1993219)
                            + ((v196 & (v217 ^ 0x4F269DA) ^ STACK[0x64C0] & 0xF785DDD) & 0x5C268DA3)
                            - 1) ^ 0xA1993290) >> v124)
                         + (((((2 * v219) & 0x4F945D0) - v219 + 2105761047) ^ 0x4EC25D1C) << v136 << v137);
  v221 = LODWORD(STACK[0x69D0]) ^ 0x534B3958 ^ (2
                                              * ((STACK[0x69D0] & v125 & 0x5E5B3353 ^ 0x8011000)
                                               + (STACK[0x69D0] & v125 & 0x21A4CCAC ^ 0x21A48CAD))
                                              - 2);
  LODWORD(STACK[0x69D0]) = ((v196 & v221) >> v199 >> v198) + ((v221 & v197) << v211 << v210);
  v222 = LODWORD(STACK[0x6578]) ^ (2 * (v125 & STACK[0x6578]));
  v223 = STACK[0x6850];
  v224 = v122;
  LODWORD(STACK[0x69C0]) = ((v196 & v222) >> v124) | ((v122 & v222) << v136 << v137);
  v225 = v223 ^ 0x76CAAF94 ^ (2 * ((v128 & v223 & 0x509AB927 ^ 0x10001102) + (v128 & v223 & 0x2F6546D8 ^ 0x2B6546C9)) - 2);
  LODWORD(STACK[0x69B0]) = ((v122 & v225) << v113) | ((v225 & v115) >> v124);
  v226 = LODWORD(STACK[0x6880]) ^ (2 * (v125 & STACK[0x6880]));
  LODWORD(STACK[0x6618]) = v216;
  LODWORD(STACK[0x69A0]) = ((v196 & v226) >> v124) ^ ((v122 & v226) << v170 << v216);
  v227 = LODWORD(STACK[0x6580]) ^ 0x8018D038 ^ (2
                                              * ((v128 & STACK[0x6580] ^ 0xC28A2108 | 0x2864914)
                                               - (v128 & STACK[0x6580] ^ 0xC28A2108 | a71))
                                              - 84709930);
  v228 = (LODWORD(STACK[0x6990]) ^ 0x4D879BC5) & v128 ^ v182 & 0x43B785E5;
  LODWORD(STACK[0x6990]) = ((v122 & v227) << v170 << v216) ^ ((v227 & v115) >> v124);
  LODWORD(STACK[0x6880]) = ((v196 & (LODWORD(STACK[0x6518]) ^ (2 * v228) ^ 0xDED8664C) ^ v220 & 0x1CC4D333) >> v124) ^ ((((LODWORD(STACK[0x6518]) ^ (2 * v228) ^ 0x39513BF4) & v122 | v218 & 0xFB4D8E8B) ^ 0xFB4D8E8B) << v113);
  v229 = LODWORD(STACK[0x6538]) ^ 0x24A7F1F6 ^ (2
                                              * ((STACK[0x6538] & v128 & 0x1883F13B ^ 0x1003F03B)
                                               + (STACK[0x6538] & v128 ^ 0xAD009C0)
                                               - ((STACK[0x6538] & v128 ^ 0xAD009C0) & 0x1883F13B)));
  LOBYTE(v216) = v211;
  v230 = (v122 & v229) << v211;
  v231 = v210;
  v232 = STACK[0x6558];
  v233 = STACK[0x6560];
  LODWORD(STACK[0x6980]) = ((v196 & v229) >> LODWORD(STACK[0x6558]) >> LODWORD(STACK[0x6560])) + (v230 << v210);
  v234 = LODWORD(STACK[0x6688]) ^ (2 * (v125 & STACK[0x6688]));
  LODWORD(STACK[0x6468]) = ((v197 & v234) << v113) + ((v115 & v234) >> v124);
  v235 = LODWORD(STACK[0x6860]) ^ (2 * (v125 & STACK[0x6860]));
  v236 = v197;
  v237 = v116 & 0x1F ^ 0x13;
  LODWORD(STACK[0x6580]) = v237;
  LODWORD(STACK[0x6688]) = ((v197 & v235) << v113) | ((v115 & v235) >> v237);
  v238 = STACK[0x68A0] & (v111 ^ a72);
  v239 = STACK[0x68B0];
  v240 = LODWORD(STACK[0x6690]) ^ 0xEA4ACBC5 ^ (2
                                              * (((v182 ^ 0xB26D84EC) & STACK[0x6460] ^ STACK[0x6690] & 0xF5803807 ^ 0x2FFFFFFB)
                                               + ((2 * ((v182 ^ 0xB26D84EC) & STACK[0x6460] ^ STACK[0x6690] & 0xF5803807)) | 0x366C467E))
                                              + 1234418052);
  v241 = STACK[0x6430];
  LODWORD(STACK[0x6638]) = ((v196 & v240) >> v124) ^ ((v224 & v240) << LODWORD(STACK[0x6430]));
  v242 = v239 ^ 0xA1083C74 ^ (2
                            * (((v238 ^ v239 & 0x76F47C7) & 0x1597D64F ^ 0x1070206)
                             + ((v238 ^ v239 & 0x76F47C7) & 0x6A6829B0 ^ 0x68602931))
                            - 2);
  v243 = LODWORD(STACK[0x6630]) ^ (2 * (v128 & STACK[0x6630]));
  LODWORD(STACK[0x6860]) = ((v242 & v197) << v137 << v136) ^ ((v242 & v196) >> LODWORD(STACK[0x6620]) >> LODWORD(STACK[0x6628]));
  LODWORD(STACK[0x6460]) = ((v224 & v243) << v113) ^ ((v243 & v115) >> v124);
  v244 = v111 ^ 0x11585E53;
  v245 = LODWORD(STACK[0x6588]) ^ (2 * (v125 & STACK[0x6588]));
  v246 = STACK[0x6528];
  v247 = (v246 & v125 ^ 0xEB241416 | 0x74949F2A) - (v246 & v125 ^ 0xEB241416 | 0xB6B60D5);
  v248 = LODWORD(STACK[0x6458]) ^ (2 * (v128 & STACK[0x6458]));
  v249 = STACK[0x66D0];
  v250 = STACK[0x66D0] & 0x14 ^ 0x10;
  LODWORD(STACK[0x6588]) = v250;
  v251 = v116 & 0xB ^ 3;
  LODWORD(STACK[0x6578]) = v251;
  LODWORD(STACK[0x6850]) = ((v196 & v245) >> v250 >> v251) ^ ((v236 & v245) << v216 << v231);
  v252 = v246 ^ 0x3F611678 ^ (2 * v247 + 383173034);
  v253 = v115;
  v254 = v124;
  LODWORD(STACK[0x6458]) = ((v224 & v248) << v113) ^ ((v248 & v115) >> v124);
  LODWORD(STACK[0x6820]) = ((v252 & v236) << v136 << v137) | ((v252 & v115) >> v124);
  v255 = LODWORD(STACK[0x6590]) ^ (2
                                 * ((v128 & STACK[0x6590] & 0x6B1AEF88 ^ 0x611AC788)
                                  + (v128 & STACK[0x6590] ^ 0xA013840)
                                  - ((v128 & STACK[0x6590] ^ 0xA013840) & 0x6B1AEF88))) ^ 0xC237AF90;
  v256 = v170;
  v257 = STACK[0x6618];
  LODWORD(STACK[0x68B0]) = ((v224 & v255) << v170 << LODWORD(STACK[0x6618])) | ((v255 & v115) >> LODWORD(STACK[0x6420]) >> LODWORD(STACK[0x6428]));
  v258 = LODWORD(STACK[0x6598]) ^ 0xD6E06D70 ^ (2
                                              * ((v128 & STACK[0x6598] ^ a73)
                                               - ((2 * (v128 & STACK[0x6598] ^ a73)) & 0x56A5C970))
                                              - 693778064);
  LODWORD(STACK[0x6610]) = v170;
  LODWORD(STACK[0x6890]) = ((v196 & v258) >> v124) | ((v258 & v236) << v257 << v170);
  v259 = v111 ^ 0x6EA7A1AC ^ LODWORD(STACK[0x6330]);
  v260 = STACK[0x69F0];
  if (!LODWORD(STACK[0x69F0]))
    v259 = STACK[0x6330];
  v261 = LODWORD(STACK[0x6330]) ^ (2 * ((v259 ^ 0x4009D479) & v244 ^ v111 & 0x1080A27A));
  v262 = v220 & 0x3739D55F ^ (v261 ^ 0xC7B0A7F8) & v196;
  v263 = STACK[0x6548];
  v264 = ((v261 ^ 0xD3819818) & v236 | STACK[0x6548] & 0x2308EABF) ^ 0x108C22E;
  LODWORD(STACK[0x68A0]) = (((v264 - ((2 * v264) & 0x4CEAA1D6) + 645222635) ^ 0x475787A) << v113) | ((v262 ^ 8) >> v124);
  v265 = STACK[0x6350] & 0x4B32F056 ^ 0xE012 ^ (LODWORD(STACK[0x6350]) ^ 0x4AB72FD0) & (v111 ^ 0x5A6AAE05);
  v266 = (2 * ((v265 | 0x57ED0255) - (v265 | 0x2812FDAA)) + 1344666452) ^ 0x3BBF842E;
  v267 = LODWORD(STACK[0x6350]) ^ a74 ^ (v266 - ((2 * v266) & 0xCA45FB34) + 1696791963);
  v268 = v241;
  v269 = (v267 & v236) << v241;
  v270 = v116 & 0xF ^ 3;
  LODWORD(STACK[0x6400]) = v270;
  v271 = ~v249 & 0x10;
  LODWORD(STACK[0x63F8]) = v271;
  LODWORD(STACK[0x6690]) = ((v267 & v196) >> v270 >> v271) ^ v269;
  v272 = LODWORD(STACK[0x6378]) ^ 0x6F616050 ^ (2
                                              * ((v128 & STACK[0x6378] & 0x7FB21C3A ^ a75)
                                               + (v128 & STACK[0x6378] ^ 0x4802AC12)
                                               - ((v128 & STACK[0x6378] ^ 0x4802AC12) & 0x7FB21C3A)));
  LODWORD(STACK[0x6630]) = ((v224 & v272) << v113) | ((v272 & v115) >> v254);
  v273 = LODWORD(STACK[0x6650]) ^ 0x66556196 ^ (2
                                              * ((v244 & STACK[0x6650] & 0x55B013CB ^ 0x112010CB)
                                               + (v244 & STACK[0x6650] & 0x2A4FEC34 ^ 0x220AA001))
                                              - 2);
  v274 = LODWORD(STACK[0x6450]) ^ (2 * (v128 & STACK[0x6450]));
  v275 = (v111 ^ 0x497DBDE1) & (LODWORD(STACK[0x6840]) ^ a76) ^ STACK[0x6840] & 0x5825E3B2;
  v276 = ((v236 & v273) << v113) | ((v115 & v273) >> v254);
  LODWORD(STACK[0x6650]) = v276;
  v277 = STACK[0x64F0];
  v278 = STACK[0x6500];
  LODWORD(STACK[0x6450]) = ((v196 & v274) >> v277 >> v278) ^ ((v224 & v274) << v268);
  v279 = LODWORD(STACK[0x6830]) ^ (2
                                 * ((v275 & 0xD058042 ^ 0xD018040)
                                  + (v275 ^ 0x40042102)
                                  - ((v275 ^ 0x40042102) & 0xD058042)));
  v280 = ((v220 & 0x8570D3BB ^ 0x88 ^ v196 & (v279 ^ 0xF8A01EE3)) >> v233 >> v232)
       + (((((v263 & 0x5520120 | v236 & (v279 ^ 0x5A878A7C) & 0x9D5291E1) ^ a77)
          + ((v263 & 0x22054604 | v236 & (v279 ^ 0x5A878A7C) & 0x62AD6E1E) ^ 0x54401)
          - 1) ^ 0xBE5293E5) << v257 << v256);
  LODWORD(STACK[0x6840]) = v280;
  v281 = LODWORD(STACK[0x6448]) ^ (2 * (v128 & STACK[0x6448]));
  LODWORD(STACK[0x6448]) = ((v224 & v281) << v113) + ((v281 & v115) >> v254);
  v282 = LODWORD(STACK[0x66E8]) ^ 0xAE6E95B0 ^ (2
                                              * ((v128 & STACK[0x66E8] & 0x24C09D27 ^ 0x4000800)
                                               + (v128 & STACK[0x66E8] & 0x5B3F62D8 ^ 0x533742D9))
                                              - 2);
  LOBYTE(v263) = STACK[0x6620];
  v283 = STACK[0x6628];
  v284 = ((v282 & v236) << v113) + ((v282 & v115) >> v263 >> v283);
  LODWORD(STACK[0x6830]) = v284;
  v285 = LODWORD(STACK[0x6440]) ^ 0x1DF0508E ^ (2
                                              * ((v244 & STACK[0x6440] ^ 0x108880)
                                               - ((2 * (v244 & STACK[0x6440] ^ 0x108880)) & 0x1DD1418E))
                                              + 500253070);
  LODWORD(STACK[0x6440]) = ((v196 & v285) >> v254) | ((v224 & v285) << v136 << v137);
  v286 = LODWORD(STACK[0x65A0]) ^ 0x4EE357A8 ^ (2
                                              * ((v244 & STACK[0x65A0] ^ 0xC542C90 | 0x2B258744)
                                               - (v244 & STACK[0x65A0] ^ 0xC542C90 | 0x54DA78BB))
                                              - 1447759498);
  v287 = ((v224 & v286) << v136 << v137) | ((v115 & v286) >> v283 >> v263);
  v288 = STACK[0x66B0];
  v289 = LODWORD(STACK[0x6648]) ^ 0x4A6D39E8 ^ (2
                                              * (((2
                                                 * (STACK[0x6648] & 0x8955E462 ^ 0x148042 ^ (LODWORD(STACK[0x66B0]) ^ 0xCEB85889) & STACK[0x66E0])) & 0x7C632E64)
                                               - (STACK[0x6648] & 0x8955E462 ^ 0x148042 ^ (LODWORD(STACK[0x66B0]) ^ 0xCEB85889) & STACK[0x66E0]))
                                              + 60608922);
  v290 = ((v196 & v289) >> v277 >> v278) + ((v289 & v236) << v113);
  v291 = LODWORD(STACK[0x6530]) ^ (2
                                 * ((STACK[0x6530] & v244 ^ 0xB00A0A00)
                                  - ((2 * (STACK[0x6530] & v244 ^ 0xB00A0A00)) & 0x778D8EA6))
                                 - 141717850) ^ 0x97999AA6;
  v292 = STACK[0x6340];
  v293 = STACK[0x6348];
  v294 = STACK[0x6900];
  v295 = LODWORD(STACK[0x6900]) ^ ((v291 & v236) << v113) ^ ((v291 & v115) >> v292 >> v293);
  LODWORD(STACK[0x6648]) = v295;
  v296 = v288 & 0x42C38830 ^ 0x42410800 ^ v128 & (LODWORD(STACK[0x6810]) ^ 0xE6CF2312);
  v297 = 2 * (v296 - ((2 * v296) & 0x45B5688C)) - 977966964;
  v298 = ((v297 ^ 0xC4B468CC) - 2 * ((v297 ^ 0xC4B468CC) & 0x61F39670 ^ v297 & 0x10) + 1643353696) ^ LODWORD(STACK[0x6550]);
  v299 = STACK[0x66D8] & 0x10;
  v300 = STACK[0x6358];
  v301 = v260 ^ v284 ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6688]) ^ v276 ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6990]);
  v302 = v294 ^ v287;
  v303 = v294 ^ (((v224 & v298) << v113) + ((v298 & v253) >> v254));
  LODWORD(STACK[0x6810]) = v303;
  v304 = v294;
  v305 = v301 ^ v294 ^ v287 ^ v295 ^ LODWORD(STACK[0x6A10]) ^ v303 ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6880]);
  v306 = STACK[0x64B8];
  v307 = LODWORD(STACK[0x64B8]) ^ v300;
  v308 = v307 ^ v290;
  v309 = v305 ^ v280 ^ v307 ^ v290 ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A40]);
  v310 = __ROR4__(LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x6AA0]) ^ 0x761F9E01, 3);
  v311 = LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6860]);
  LODWORD(STACK[0x6590]) = v311;
  LODWORD(STACK[0x65A0]) = v309 ^ v311 ^ LODWORD(STACK[0x68A0]) ^ __ROR4__(v310 ^ 0x2EC3F3C0, 29);
  LODWORD(STACK[0x6570]) = (v300 - 2 * (v300 & 0x13E6FFF7 ^ v299) - 1813577753) ^ v306 ^ LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x64B0]) ^ LODWORD(STACK[0x64E0]) ^ LODWORD(STACK[0x64C8]);
  LODWORD(STACK[0x6598]) = v300 ^ LODWORD(STACK[0x66F8]) ^ v306 ^ LODWORD(STACK[0x64F8]) ^ LODWORD(STACK[0x64D8]);
  v312 = STACK[0x6910];
  LODWORD(STACK[0x66E8]) = LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x65B8]);
  LODWORD(STACK[0x66E0]) = v312 ^ LODWORD(STACK[0x65A8]);
  LODWORD(STACK[0x6800]) = v304 ^ LODWORD(STACK[0x64A8]);
  v313 = v304 ^ LODWORD(STACK[0x64D0]);
  v314 = v288;
  v315 = STACK[0x63B0];
  v316 = LODWORD(STACK[0x65C8]) ^ 0x5089BDB6 ^ (2
                                              * ((STACK[0x65C8] & 0xF89B8E0 ^ 0x8002000 ^ (v288 ^ a78) & STACK[0x63B8] | 0x10B6A0AD)
                                               - (STACK[0x65C8] & 0xF89B8E0 ^ 0x8002000 ^ (v288 ^ a78) & STACK[0x63B8] | 0x6F495F52))
                                              - 560808284);
  LODWORD(STACK[0x66D0]) = v307 ^ LODWORD(STACK[0x65B0]);
  LODWORD(STACK[0x66D8]) = v307 ^ LODWORD(STACK[0x65C0]);
  v317 = STACK[0x66C8];
  LODWORD(STACK[0x63B8]) = ((v196 & v316) >> v293 >> v292) | ((v224 & v316) << v113);
  v318 = v315 ^ 0x816D1254 ^ (2 * ((v128 & v315 ^ 0x41642000) - ((2 * (v128 & v315 ^ 0x41642000)) & 0x3A55254))
                            + 61166164);
  v319 = v317 ^ 0x508847CA ^ (2 * ((v244 & v317 & 0x5FFFDE8D ^ 0x8440285) + (v244 & v317 & 0x20002172 ^ 0x20002161)) - 2);
  v320 = STACK[0x66B8];
  v321 = STACK[0x65D0];
  LODWORD(STACK[0x6378]) = ((v253 & v319) >> v254) ^ ((v236 & v319) << LODWORD(STACK[0x6430]));
  v322 = v321 ^ (2 * ((v320 ^ 0x43D60446) & (v321 ^ 0x422A115C) ^ v321 & 0x528E5A15)) ^ 0x463E3174;
  LOBYTE(v295) = STACK[0x6618];
  v323 = STACK[0x6610];
  LODWORD(STACK[0x63B0]) = ((v196 & v322) >> (v116 & 9 ^ 1) >> (v116 & 0x16 ^ 0x12)) ^ ((v236 & v322) << v295 << v323);
  LODWORD(STACK[0x6370]) = ((v224 & v318) << v113) | ((v318 & v253) >> v254);
  v324 = STACK[0x65E8] & 0xAF0E2409 ^ 0xB062408 ^ (v288 ^ 0xE8E398E2) & STACK[0x63A8];
  v325 = LODWORD(STACK[0x65E8]) ^ 0xCCD808CF ^ (2 * ((v324 | 0x7EB64E79) - (v324 | 0x149B186)) + 43213580);
  v326 = LODWORD(STACK[0x6410]) ^ 0xD1ABC2E8 ^ (2
                                              * ((v244 & STACK[0x6410] & 0x158A179B ^ 0x800110)
                                               + (v244 & STACK[0x6410] & 0x6A75E864 ^ 0x6855E065))
                                              - 2);
  LOBYTE(v321) = STACK[0x63C8];
  LOBYTE(v301) = STACK[0x63C0];
  v327 = v323;
  LODWORD(STACK[0x6368]) = ((v224 & v325) << v295 << v323) + ((v325 & v253) >> v321 >> v301);
  v328 = LODWORD(STACK[0x6390]) ^ (2 * (v244 & STACK[0x6390]));
  LODWORD(STACK[0x6360]) = ((v196 & v326) >> v254) | ((v236 & v326) << v113);
  v329 = LODWORD(STACK[0x6398]) ^ (2 * (v128 & STACK[0x6398]));
  LOBYTE(v317) = STACK[0x6620];
  v330 = STACK[0x6628];
  LODWORD(STACK[0x6358]) = ((v236 & v328) << v113) ^ ((v253 & v328) >> v317 >> v330);
  LOBYTE(v306) = STACK[0x66A0];
  LODWORD(STACK[0x6668]) = ((v196 & v329) >> v254) ^ ((v224 & v329) << v136 << v306);
  v331 = LODWORD(STACK[0x6680]) ^ (2 * (v244 & STACK[0x6680]));
  LODWORD(STACK[0x6350]) = ((v196 & v331) >> v254) ^ ((v224 & v331) << v113);
  v332 = LODWORD(STACK[0x66F0]) ^ 0xB6A221F4 ^ (2
                                              * ((v128 & STACK[0x66F0] & 0x6A0B2EBB ^ 0x4A0100BA)
                                               + (v128 & STACK[0x66F0] & 0x15F4D144 ^ 0x11501041))
                                              - 2);
  LODWORD(STACK[0x6348]) = ((v332 & v236) << v136 << v306) | ((v332 & v253) >> v292 >> v293);
  v333 = LODWORD(STACK[0x6640]) ^ (2
                                 * ((((v320 ^ 0x9D0515A3) & STACK[0x6478] ^ STACK[0x6640] & 0x8C5D4BF0) & 0x2C897BFF ^ 0x880224)
                                  + ((v320 ^ 0x9D0515A3) & STACK[0x6478] ^ STACK[0x6640] & 0x8C5D4BF0 ^ 0xAE15FDDB)
                                  - (((v320 ^ 0x9D0515A3) & STACK[0x6478] ^ STACK[0x6640] & 0x8C5D4BF0 ^ 0xAE15FDDB) & 0x2C897BFF))) ^ 0x6C7F20E1;
  LODWORD(STACK[0x6340]) = ((v253 & v333) >> v321 >> v301) + ((v236 & v333) << v295 << v327);
  v334 = (v128 & STACK[0x65F8] & 0x6A63E61D ^ 0x62434401)
       + (v128 & STACK[0x65F8] ^ 0x8820BA3C)
       - ((v128 & STACK[0x65F8] ^ 0x8820BA3C) & 0x6A63E61D);
  v335 = STACK[0x65F0] & a79 ^ (v320 ^ 0x6B306BED) & STACK[0x6470] ^ 0x4A603502;
  v336 = (2 * (((2 * v335) & 0x2761C138) - v335) + 1486765766) ^ 0x588E55BE;
  LODWORD(STACK[0x6338]) = ((v196 & (LODWORD(STACK[0x65F8]) ^ (2 * v334) ^ 0xC486B842)) >> v254)
                         + ((v224 & (LODWORD(STACK[0x65F8]) ^ (2 * v334) ^ 0xC486B842)) << v113);
  v337 = (v336 - ((2 * v336) & 0xCC44E018) + 1713532940) ^ LODWORD(STACK[0x63A0]);
  v338 = STACK[0x65E0];
  v339 = (v288 ^ 0x38D8ECC4) & STACK[0x6480] ^ STACK[0x65E0] & 0x7F35502F;
  v340 = v254;
  LOBYTE(v321) = STACK[0x6408];
  LOBYTE(v301) = STACK[0x6418];
  LODWORD(STACK[0x6330]) = ((v224 & v337) << v321 << v301) ^ ((v253 & v337) >> v254);
  v341 = LODWORD(STACK[0x65D8]) ^ 0xDDCC0792 ^ (2
                                              * (((2 * (v128 & STACK[0x65D8] ^ 0x24010942)) & 0x6A31EAE8)
                                               - (v128 & STACK[0x65D8] ^ 0x24010942))
                                              - 1781656298);
  v342 = v338 ^ (2 * ((v339 & 0x187A25AE ^ 0x7A258E) + (v339 ^ 0x7E044021) - ((v339 ^ 0x7E044021) & 0x187A25AE))) ^ 0x98334E66;
  v343 = v196;
  LODWORD(STACK[0x6328]) = ((v196 & v342) >> v330 >> v317) + ((v342 & v236) << v113);
  v344 = v113;
  LODWORD(STACK[0x6320]) = ((v196 & v341) >> v254) + ((v224 & v341) << v113);
  v345 = STACK[0x6570];
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x6570]) ^ 0xD47C29CA;
  v346 = v345 & 0x13D53EBC ^ 0x11D03410 ^ (v345 ^ 0xD47C29CA) & (v320 ^ 0x28D60EF);
  v347 = 33686018 * LODWORD(STACK[0x6660]);
  LODWORD(STACK[0x65E0]) = v347;
  v348 = v347 & 0xD0F7369C ^ 0x687B9B4E;
  v349 = LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x66A8]) ^ ((v236 & v348) << v113) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x6688]) ^ LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x6650]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6990]);
  LODWORD(STACK[0x6910]) = v313;
  v350 = STACK[0x6580];
  v351 = (((v313 ^ (2 * (v313 & v128))) & v253) >> v350) ^ (((v313 ^ (2 * (v313 & v128))) & v224) << v295 << v327) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6970]) ^ ((v196 & v348) >> v340);
  v352 = v349 ^ LODWORD(STACK[0x68B0]);
  LODWORD(STACK[0x66F8]) = v302;
  v353 = v352 ^ v302 ^ LODWORD(STACK[0x6648]) ^ LODWORD(STACK[0x6810]) ^ v351 ^ LODWORD(STACK[0x6AB0]);
  v354 = LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6980]);
  v355 = STACK[0x6880];
  LODWORD(STACK[0x66F0]) = v308;
  v356 = v345 ^ 0xECD54544 ^ (2 * (((2 * v346) & 0x445EAA40) - v346) + 1000428990);
  v357 = ((v196 & v356) >> LODWORD(STACK[0x6400]) >> LODWORD(STACK[0x63F8])) | ((v356 & v224) << v113);
  v358 = v353 ^ v354 ^ v355 ^ LODWORD(STACK[0x6840]) ^ v308 ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x6690]);
  v359 = (v358 ^ LODWORD(STACK[0x68A0]) ^ -(v358 ^ LODWORD(STACK[0x68A0])) ^ (v357
                                                                            - (v358 ^ LODWORD(STACK[0x68A0]) ^ v357)))
       + v357;
  v360 = STACK[0x6598];
  LODWORD(STACK[0x6900]) = LODWORD(STACK[0x6598]) ^ 0x2A51A841;
  v361 = v360 & 0x78AC203B ^ 0x602C0018 ^ (v314 ^ 0x3F419CD0) & (v360 ^ 0x2A51A841);
  v362 = v360 ^ 0xE26E43FB ^ (2 * (((2 * v361) & 0x27985476) - v361) + 1483189128);
  LODWORD(STACK[0x63A8]) = ((((LODWORD(STACK[0x6800]) ^ (2 * (STACK[0x6800] & v128))) & v236) << v295 << v327)
                          + (((LODWORD(STACK[0x6800]) ^ (2 * (STACK[0x6800] & v128))) & v253) >> v340)) ^ ((v362 & v236) << v301 << v321) ^ ((v196 & v362) >> LODWORD(STACK[0x6428]) >> LODWORD(STACK[0x6420])) ^ v359;
  v363 = STACK[0x6488];
  LODWORD(STACK[0x6640]) = v244;
  v364 = v363 ^ 0xC9F1E69E ^ (2
                            * ((v244 & v363 ^ 0x80E0A84E) + 1679319022 - ((2 * (v244 & v363 ^ 0x80E0A84E)) & 0x4830B602))
                            - 2522);
  LODWORD(STACK[0x6660]) = ((v224 & v364) << v113) | ((v253 & v364) >> v340);
  v365 = STACK[0x6520];
  v366 = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6520]) ^ 0x22CC)) - 8;
  v367 = STACK[0x6AC0];
  v368 = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6520]) ^ 0x230D)) - 8;
  v369 = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6520]) ^ 0x2ED6)) - 8;
  v370 = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6520]) ^ 0x2CFB)) - 8;
  v371 = ((*(_BYTE *)(v367 + 15) ^ 0xE8) + (*(_BYTE *)(v367 + 15) ^ 0x24)) ^ 0x2F ^ *(unsigned __int8 *)(v368 + (*(unsigned __int8 *)(v367 + 15) ^ 0xF0)) | ((*(unsigned __int8 *)(v369 + (*(unsigned __int8 *)(v367 + 12) ^ 0x6ALL)) ^ 0xE9) << 24) | ((*(unsigned __int8 *)(v370 + (*(unsigned __int8 *)(v367 + 13) ^ 0x6FLL)) ^ 0xF7) << 16);
  v372 = *(unsigned __int8 *)(STACK[0x6AC0] + 5);
  v373 = ((*(unsigned __int8 *)(v367 + 8) ^ 0x5B ^ *(unsigned __int8 *)(v366 + (*(unsigned __int8 *)(v367 + 8) ^ 0x87))) << 24) | ((((*(_BYTE *)(v367 + 9) ^ 0xBA) + (*(_BYTE *)(v367 + 9) ^ 0x76)) ^ 0x99 ^ *(unsigned __int8 *)(v368 + (*(unsigned __int8 *)(v367 + 9) ^ 0x6ELL))) << 16);
  v374 = ((((*(unsigned __int8 *)(v367 + 4) ^ 0x36) + (*(unsigned __int8 *)(v367 + 4) ^ 0xFA)) ^ 0x73 ^ *(unsigned __int8 *)(v368 + (*(unsigned __int8 *)(v367 + 4) ^ 0xE2))) << 24) | ((((*(_BYTE *)(v366 + (v372 ^ 0x3A)) ^ -*(_BYTE *)(v366 + (v372 ^ 0x3A)) ^ ((v372 ^ 0x64) + (v372 ^ 0x9B ^ *(_BYTE *)(v366 + (v372 ^ 0x3A))) + 1)) + (v372 ^ 0x64)) ^ 0xF6) << 16) | ((((*(_BYTE *)(v367 + 6) ^ 0x98) + (*(_BYTE *)(v367 + 6) ^ 0x54)) ^ *(unsigned __int8 *)(v368 + (*(unsigned __int8 *)(v367 + 6) ^ 0x4CLL)) ^ 0x78) << 8);
  LODWORD(STACK[0x64B0]) = *(unsigned __int8 *)(v369 + (*(unsigned __int8 *)(v367 + 3) ^ 0x59)) ^ 5 | ((((*(_BYTE *)(v367 + 1) ^ 0x7E) + (*(_BYTE *)(v367 + 1) ^ 0xB2)) ^ 0x4C ^ *(unsigned __int8 *)(v368 + (*(unsigned __int8 *)(v367 + 1) ^ 0xAALL))) << 16) | ((*(unsigned __int8 *)(v367 + 2) ^ 0x2F ^ *(unsigned __int8 *)(v366 + (*(unsigned __int8 *)(v367 + 2) ^ 0xF7))) << 8) | ((*(unsigned __int8 *)(v370 + (*(unsigned __int8 *)v367 ^ 0xEELL)) ^ 0x46) << 24);
  v375 = *(unsigned __int8 *)(v367 + 14);
  STACK[0x6318] = v366;
  LODWORD(STACK[0x64A8]) = v371 | ((v375 ^ 0x7A ^ *(unsigned __int8 *)(v366 + (v375 ^ 0xBE))) << 8);
  v376 = *(unsigned __int8 *)(v367 + 11);
  STACK[0x6310] = v368;
  LODWORD(v376) = *(unsigned __int8 *)(v368 + (v376 ^ 0xD6)) ^ ((v376 ^ 2) + (v376 ^ 0xCE)) ^ 0x30 | v373;
  v377 = *(unsigned __int8 *)(v367 + 10) ^ 0x21;
  STACK[0x6308] = v369;
  LODWORD(STACK[0x64A0]) = v376 | ((*(unsigned __int8 *)(v369 + v377) ^ 0x87) << 8);
  v378 = *(unsigned __int8 *)(v367 + 7) ^ 0x9ALL;
  STACK[0x6300] = v370;
  LODWORD(STACK[0x6498]) = *(unsigned __int8 *)(v370 + v378) ^ 0xBC | v374;
  LODWORD(v369) = STACK[0x66B0];
  LODWORD(STACK[0x65F0]) = ((2 * (STACK[0x66B0] & 0x144D23F9 ^ 0x140821C8)) | 0x6731A04C)
                         - (STACK[0x66B0] & 0x144D23F9 ^ 0x140821C8);
  v379 = 33686018 * LODWORD(STACK[0x6510]);
  v380 = v379 & 0xDBD57CE4 ^ 0xEDEABE72;
  LODWORD(v367) = STACK[0x68C0];
  LODWORD(v377) = v343 & v380;
  LOBYTE(v366) = STACK[0x6268];
  LODWORD(STACK[0x62F8]) = ((v343 & v380) >> LODWORD(STACK[0x6540]) >> v366) | ((STACK[0x68C0] & v380) << v113);
  v381 = v236;
  v382 = (v380 & v236) << v344;
  v383 = v344;
  LODWORD(v368) = STACK[0x68F0];
  LODWORD(STACK[0x62F0]) = (v377 >> LODWORD(STACK[0x68F0])) | v382;
  LODWORD(v370) = STACK[0x65E0];
  LODWORD(v377) = STACK[0x65E0] & 0xDBD57CE4 ^ 0xEDEABE72;
  LODWORD(STACK[0x65C8]) = v377;
  v384 = (v367 & v377) << LODWORD(STACK[0x6418]) << v321;
  LODWORD(STACK[0x65E8]) = v253 & v377;
  LODWORD(STACK[0x62E8]) = v384 + ((v253 & v377) >> v350);
  v385 = STACK[0x6608];
  v386 = *(_DWORD *)(STACK[0x64E8] + 4 * (LODWORD(STACK[0x6608]) % 0x101));
  LODWORD(STACK[0x62E0]) = v386 ^ 0x16012C5D ^ (32 * (v386 ^ 0xE1AF374F)) ^ (4 * (v386 ^ 0xE1AF374F));
  v387 = v379 & 0x2A063DD6 ^ 0x15031EEB;
  LODWORD(STACK[0x62D8]) = ((v343 & v387) >> LODWORD(STACK[0x6620]) >> LODWORD(STACK[0x6628])) | ((v367 & v387) << v344);
  LOBYTE(v301) = STACK[0x6610];
  v388 = STACK[0x6618];
  LODWORD(STACK[0x62D0]) = ((v387 & v253) >> v368) + ((v387 & v381) << v301 << v388);
  LODWORD(v378) = v370 & 0x2A063DD6 ^ 0x15031EEB;
  LODWORD(STACK[0x6AC0]) = v378;
  LODWORD(STACK[0x62C8]) = ((v343 & v378) >> LODWORD(STACK[0x6400]) >> LODWORD(STACK[0x63F8])) | ((v367 & v378) << v383);
  v389 = v379 & 0x4EF9B912 ^ 0xA77CDC89;
  v390 = v253;
  LOBYTE(v338) = STACK[0x6420];
  LOBYTE(v372) = STACK[0x6428];
  LODWORD(v378) = (v389 & v253) >> v338 >> v372;
  v391 = v367 & v389;
  v392 = STACK[0x6430];
  LODWORD(STACK[0x62C0]) = (v391 << v392) | v378;
  LODWORD(STACK[0x62B8]) = (v391 << v383) + v378;
  LODWORD(v377) = STACK[0x62A8];
  v393 = STACK[0x66A8];
  STACK[0x6620] = (unint64_t)*(&off_1015B46D0 + (v365 ^ 0x2F93))
                + 4 * ((LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x66A8])) % 0x101u);
  LODWORD(v378) = STACK[0x62B0];
  LODWORD(STACK[0x65D8]) = LODWORD(STACK[0x62B0]) ^ v377;
  STACK[0x65D0] = (unint64_t)*(&off_1015B46D0 + (v365 ^ 0x2332)) + 4 * (v378 % 0x101);
  LODWORD(v377) = STACK[0x6490];
  LODWORD(v378) = STACK[0x62A0];
  LODWORD(STACK[0x6608]) = LODWORD(STACK[0x6490]) - LODWORD(STACK[0x62A0]);
  LODWORD(STACK[0x62B0]) = -(int)v377 - 1022995189 * v385 + v378;
  STACK[0x65C0] = (unint64_t)*(&off_1015B46D0 + (int)(v365 & 0xC50B1844))
                + 4 * ((LODWORD(STACK[0x63A8]) ^ v393) % 0x101);
  LODWORD(STACK[0x62A8]) = *((_DWORD *)*(&off_1015B46D0 + (v365 ^ 0x2649)) + LODWORD(STACK[0x6660]) % 0x101)
                         + ((LODWORD(STACK[0x6660]) % 0x101 + 2013288749) ^ (LODWORD(STACK[0x6660]) % 0x101));
  v394 = v370;
  LODWORD(v378) = v370 & 0xE22F1FCC ^ 0xF1178FE6;
  LODWORD(STACK[0x65B8]) = v378;
  v395 = (v390 & v378) >> v368;
  LODWORD(v378) = v367 & v378;
  LODWORD(STACK[0x65B0]) = v378;
  LODWORD(STACK[0x62A0]) = ((_DWORD)v378 << v383) + v395;
  LOBYTE(v306) = v388;
  LODWORD(STACK[0x6298]) = ((v343 & ((v379 & 0x2281008 | 0xF1178FE6) ^ v379 & 0xE0070FC4)) >> v372 >> v338) ^ ((((v379 & 0x2281008 | 0xF1178FE6) ^ v379 & 0xE0070FC4) & v381) << v388 << v301);
  v396 = v381;
  LODWORD(STACK[0x6290]) = (((v379 & 0xE22F1FCC ^ 0xF1178FE6) & v381) << v383) | (((v379 & 0xE22F1FCC ^ 0xF1178FE6) & v390) >> v338 >> v372);
  v397 = (a81 | (2 * (v369 & 0x407440CF ^ 0x30408A))) - (v369 & 0x407440CF ^ 0x30408A) + 1234296124;
  LODWORD(v377) = v370 & 0x80E8819E ^ 0x407440CF;
  LODWORD(STACK[0x65A8]) = v343 & v377;
  LODWORD(STACK[0x6590]) = v377;
  LODWORD(STACK[0x6288]) = ((v343 & v377) >> v372 >> v338) + ((v381 & v377) << v383);
  LODWORD(v370) = ((v397 & 0xB353CE58 ^ a82) + (v397 & 0x4CAC31A7) - 1) ^ 0xD77BEEDD;
  v398 = __ROR4__(__ROR4__(v370, 13) ^ 0xE95C59D4, 18);
  LODWORD(STACK[0x6280]) = ((v367 & (v398 ^ 0x56017A98)) << LODWORD(STACK[0x66A0]) << LODWORD(STACK[0x6698]))
                         + (((v398 ^ 0x56017A98) & v390) >> v368);
  LODWORD(v378) = (v369 & 0x886D1CB4 ^ 0x8001000) - ((2 * v369) & 0xC20060) - 446586823;
  v399 = (2
        * (((2 * (STACK[0x66B8] & 0x7792E34B ^ 0xD9B876C1)) | 0x7B57170) - (STACK[0x66B8] & 0x7792E34B ^ 0xD9B876C1))
        - 129331568) ^ 0x6177FB3F;
  v400 = v367 & v399;
  LODWORD(STACK[0x6278]) = ((v367 & v399) << v306 << v301) | ((v390 & v399) >> LODWORD(STACK[0x63E8]) >> LODWORD(STACK[0x63F0]));
  LODWORD(v378) = (2
                 * ((v369 ^ 0x4F80A05F)
                  + (((v378 & 0xE9D8198C ^ 0x8981884) + (v378 ^ 0xE363A12B) - ((v378 ^ 0xE363A12B) & 0xBD81986)) ^ 0x1225F777))
                 + 2) ^ 0xF792E34B;
  LODWORD(STACK[0x6270]) = ((v343 & v378) >> v368) | ((v378 & v381) << v383);
  v401 = v379 & 0xEF25C696 ^ 0xF792E34B;
  v402 = v401 & v390;
  LODWORD(v369) = (v401 & v390) >> v366 >> LODWORD(STACK[0x6540]);
  v403 = v394 & 0xFE17E920 ^ 0x7F0BF490;
  LODWORD(STACK[0x66B0]) = v403;
  LODWORD(v378) = v390 & v403;
  LOBYTE(v403) = STACK[0x6578];
  LODWORD(v378) = v378 >> v403;
  LODWORD(v377) = v390 & v377;
  LODWORD(STACK[0x6570]) = v377;
  v404 = v390;
  LODWORD(v377) = v377 >> v403;
  LOBYTE(v403) = STACK[0x6588];
  LODWORD(STACK[0x6578]) = v377 >> v403;
  LODWORD(STACK[0x6588]) = v378 >> v403;
  v405 = v394 & 0xA6D225E ^ 0x8536912F;
  LODWORD(STACK[0x6598]) = v405;
  LODWORD(STACK[0x63A0]) = (v343 & v405) >> LODWORD(STACK[0x6560]) >> LODWORD(STACK[0x6558]);
  LODWORD(STACK[0x6268]) = ((v343 & v405) >> v368) + ((v396 & v405) << v392);
  LODWORD(STACK[0x6568]) = v379;
  v406 = v379 & 0xFE17E920 ^ 0x7F0BF490;
  LOBYTE(v405) = STACK[0x6258];
  LOBYTE(v366) = STACK[0x6260];
  LODWORD(STACK[0x6398]) = (v406 & v390) >> v405 >> v366;
  v407 = v379 & 0xA6D225E ^ 0x8536912F;
  LODWORD(STACK[0x6260]) = (v407 & v390) >> v366 >> v405;
  LODWORD(STACK[0x6628]) = LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x65F8]);
  LODWORD(v377) = (2 * v370) ^ 0x407440CF;
  LODWORD(STACK[0x6600]) = v377;
  LODWORD(STACK[0x65F8]) = v343 & v377;
  LODWORD(STACK[0x6560]) = (v343 & v377) >> LODWORD(STACK[0x64F0]) >> LODWORD(STACK[0x6500]);
  LODWORD(STACK[0x6258]) = (v377 & v390) >> LODWORD(STACK[0x6580]);
  LODWORD(v370) = STACK[0x6418];
  LODWORD(v366) = STACK[0x6408];
  v408 = (v396 & v399) << LODWORD(STACK[0x6418]) << LODWORD(STACK[0x6408]);
  v409 = v343 & v399;
  LODWORD(v372) = v343;
  LOBYTE(v377) = v368;
  LODWORD(STACK[0x6250]) = (v409 >> v368) | v408;
  LOBYTE(v405) = STACK[0x6610];
  LOBYTE(v368) = STACK[0x6618];
  v410 = v409 >> LODWORD(STACK[0x63F8]) >> LODWORD(STACK[0x6400]);
  LODWORD(STACK[0x6248]) = v410 + (v400 << v405 << v368);
  LODWORD(STACK[0x6240]) = v410 | v408;
  v411 = (v367 & v401) << v383;
  LODWORD(STACK[0x6238]) = v411 + v369;
  LODWORD(v378) = v396;
  LOBYTE(v390) = v383;
  v412 = v402 >> v377;
  LODWORD(STACK[0x6230]) = ((v401 & v396) << v383) | v412;
  LODWORD(STACK[0x6228]) = v411 | v412;
  LODWORD(STACK[0x6220]) = (v396 & STACK[0x6AC0]) << v405 << v368;
  v413 = v394 & 0x4EF9B912 ^ 0xA77CDC89;
  v414 = v396 & v413;
  LODWORD(STACK[0x6218]) = (v396 & v413) << v405 << v368;
  LODWORD(STACK[0x6580]) = v406 & v396;
  LODWORD(STACK[0x6390]) = (v406 & v396) << v368 << v405;
  v415 = (v407 & v396) << v392;
  v416 = (v407 & v404) >> v377;
  LODWORD(STACK[0x6210]) = v416 | v415;
  LODWORD(STACK[0x6208]) = v416 + v415;
  LOBYTE(v368) = STACK[0x63D8];
  LOBYTE(v369) = STACK[0x63D0];
  LODWORD(STACK[0x6200]) = ((v343 & v407) >> v368 >> v369) + v415;
  LODWORD(STACK[0x66C0]) = ((LODWORD(STACK[0x66C0]) ^ 0xC1374A81) + 151954918) ^ ((LODWORD(STACK[0x66C0]) ^ 0xC5006998)
                                                                                + 221873917) ^ ((LODWORD(STACK[0x66C0]) ^ 0x9AAD9553)
                                                                                              + 1385462328);
  LODWORD(STACK[0x61F8]) = LODWORD(STACK[0x65A0]) ^ LODWORD(STACK[0x6690]);
  LODWORD(STACK[0x61F0]) = LODWORD(STACK[0x66B8]) ^ a80;
  v417 = v394 & 0x289A47F2 ^ 0x144D23F9;
  v418 = v367 & v417;
  v419 = (v404 & v417) >> v377;
  v420 = (2 * LODWORD(STACK[0x65F0]) + 416178100) ^ 0xD3F681F7;
  v421 = v343 & v420;
  v422 = v420 & v378;
  LOBYTE(v401) = v366;
  LODWORD(STACK[0x61E0]) = v422 << v366 << v370;
  LODWORD(STACK[0x61DC]) = v421 >> v368 >> v369;
  LODWORD(STACK[0x61D0]) = v422 << v383;
  LOBYTE(v369) = STACK[0x63F0];
  LOBYTE(v343) = STACK[0x63E8];
  LODWORD(STACK[0x61C8]) = v421 >> v369 >> v343;
  LODWORD(STACK[0x61C0]) = v418 << v383;
  LODWORD(STACK[0x61E8]) = v419;
  LODWORD(STACK[0x61BC]) = (v418 << v366 << v370) | v419;
  LOBYTE(v368) = STACK[0x6698];
  LOBYTE(v366) = STACK[0x66A0];
  LODWORD(STACK[0x61B0]) = (v378 & STACK[0x65C8]) << v368 << v366;
  LODWORD(STACK[0x61A8]) = LODWORD(STACK[0x65E8]) >> v377;
  v423 = v394 & 0x763FF584 ^ 0xBB1FFAC2;
  v424 = (v404 & v423) >> v343 >> v369;
  v425 = v378 & v423;
  LODWORD(STACK[0x6198]) = v425 << v368 << v366;
  v426 = STACK[0x6568];
  v427 = STACK[0x6568] & 0x763FF584 ^ 0xBB1FFAC2;
  v428 = v372 & v427;
  v429 = v367 & v427;
  LODWORD(STACK[0x6190]) = v428 >> v377;
  LODWORD(STACK[0x6188]) = (v428 >> v377) | (v429 << v383);
  LODWORD(STACK[0x61A0]) = v424;
  LODWORD(STACK[0x6180]) = (v425 << v383) | v424;
  LODWORD(STACK[0x6178]) = v429 << v370 << v401;
  LODWORD(STACK[0x6170]) = 2044731807 * (LODWORD(STACK[0x66A8]) - LODWORD(STACK[0x65D8]));
  LODWORD(STACK[0x616C]) = 1840882057 * LODWORD(STACK[0x6608]) - 1826554335;
  LOBYTE(v421) = v377;
  LODWORD(STACK[0x6160]) = (v404 & STACK[0x6AC0]) >> v377;
  v430 = v372;
  v431 = (v372 & v413) >> v377;
  LODWORD(STACK[0x6158]) = v431;
  LODWORD(STACK[0x6150]) = v431 + (v414 << v390);
  LODWORD(STACK[0x6148]) = -1811116485 * *(_DWORD *)(STACK[0x6620] - 8);
  v432 = *(_DWORD *)(STACK[0x65D0] - 4) ^ 0x6AAD797C;
  HIDWORD(v433) = *(_DWORD *)(STACK[0x65C0] - 4);
  LODWORD(v433) = HIDWORD(v433);
  LODWORD(STACK[0x6138]) = v433 >> 1;
  LODWORD(STACK[0x6130]) = LODWORD(STACK[0x65B0]) << v368 << v366;
  LODWORD(STACK[0x6128]) = (v372 & STACK[0x65B8]) >> v377;
  v434 = (v367 & STACK[0x6590]) << v368 << v366;
  LODWORD(STACK[0x6118]) = v434 | LODWORD(STACK[0x6578]);
  LODWORD(v372) = (STACK[0x6600] & v378) << v390;
  LODWORD(STACK[0x6108]) = (LODWORD(STACK[0x65F8]) >> v377) + v372;
  LODWORD(v377) = STACK[0x66B0];
  LODWORD(STACK[0x6620]) = (v430 & STACK[0x66B0]) >> v421;
  LODWORD(STACK[0x60F8]) = (LODWORD(STACK[0x6580]) << v390) | LODWORD(STACK[0x6398]);
  LODWORD(v366) = STACK[0x6430];
  LODWORD(v369) = STACK[0x6588];
  LODWORD(STACK[0x60F0]) = LODWORD(STACK[0x6588]) | ((v378 & v377) << LODWORD(STACK[0x6430]));
  v435 = (v430 & v406) >> v421;
  LODWORD(STACK[0x60E8]) = v435 | ((v367 & v406) << v390);
  LODWORD(v368) = STACK[0x6598];
  v436 = (v367 & STACK[0x6598]) << v390;
  LODWORD(STACK[0x60B0]) = (v367 & v407) << v390;
  LODWORD(STACK[0x6088]) = LODWORD(STACK[0x6570]) >> v421;
  HIDWORD(v433) = STACK[0x6668] & 0xEB8E97A6;
  LODWORD(v433) = HIDWORD(v433);
  v437 = v433 >> 20;
  LODWORD(STACK[0x6110]) = v372;
  LODWORD(STACK[0x6078]) = LODWORD(STACK[0x6560]) + v372;
  LODWORD(v378) = LODWORD(STACK[0x65A8]) >> v421;
  LODWORD(STACK[0x6120]) = v434;
  LODWORD(STACK[0x6070]) = v378 | v434;
  LODWORD(STACK[0x6068]) = (v367 & v377) << v366;
  LODWORD(STACK[0x6058]) = v435 | LODWORD(STACK[0x6390]);
  LODWORD(STACK[0x6060]) = (v367 & v377) << v390;
  LODWORD(STACK[0x6050]) = ((v367 & v377) << v390) + v369;
  LODWORD(STACK[0x6048]) = (v404 & v368) >> v421;
  LODWORD(v378) = v426 & 0xD0F7369C ^ 0x687B9B4E;
  LODWORD(STACK[0x6040]) = (v367 & v378) << v370 << v401;
  LODWORD(STACK[0x6038]) = (v430 & v378) >> v421;
  LODWORD(STACK[0x6618]) = LODWORD(STACK[0x66C0]) + 1654216795;
  v438 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6520])) - 12);
  LODWORD(STACK[0x6030]) = 32 * v432;
  LODWORD(STACK[0x6140]) = v432;
  LODWORD(STACK[0x6028]) = 2 * v432;
  LODWORD(STACK[0x6080]) = v437;
  LODWORD(STACK[0x6020]) = -v437;
  LODWORD(STACK[0x6018]) = LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x63B0]);
  LODWORD(STACK[0x60C8]) = v436;
  LODWORD(STACK[0x6010]) = LODWORD(STACK[0x63A0]) + v436;
  return v438();
}

uint64_t sub_100C83D68@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W6>, uint64_t a5@<X8>)
{
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  int v49;
  char v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  BOOL v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  BOOL v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unint64_t v174;
  BOOL v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  unint64_t v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  unsigned int v293;
  int *v294;
  unsigned int v295;
  unsigned int v296;
  int v297;
  uint64_t v298;
  _DWORD *v299;
  int v300;
  uint64_t v301;
  unint64_t v302;
  unint64_t v303;
  _DWORD *v304;
  unint64_t v305;
  int v306;
  unsigned int v307;
  uint64_t v308;
  _DWORD *v309;
  int v310;
  uint64_t v311;
  _DWORD *v312;
  char *v313;
  unint64_t v314;
  char *v315;
  char *v316;
  int v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  unint64_t v325;
  int v326;
  _DWORD *v327;
  uint64_t v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  _DWORD *v332;
  _DWORD *v333;
  _DWORD *v334;
  unint64_t v335;
  _DWORD *v336;
  _DWORD *v337;
  unint64_t v338;
  unint64_t v339;
  unint64_t v340;
  int *v341;
  int v342;
  _DWORD *v343;
  uint64_t v344;
  unint64_t v345;
  uint64_t v346;
  _DWORD *v347;
  uint64_t v348;
  _DWORD *v349;
  uint64_t v350;
  _DWORD *v351;
  uint64_t v352;
  int *v353;
  int v354;
  unsigned int v355;
  int v356;
  int *v357;
  int v358;
  uint64_t v359;
  int v360;
  uint64_t v361;
  unint64_t v362;
  uint64_t v363;
  unint64_t v364;
  unint64_t v365;
  _DWORD *v366;
  uint64_t v367;
  _DWORD *v368;
  uint64_t v369;
  _DWORD *v370;
  _DWORD *v371;
  _DWORD *v372;
  uint64_t v373;
  _DWORD *v374;
  uint64_t v375;
  _DWORD *v376;
  _DWORD *v377;
  uint64_t v378;
  _DWORD *v379;
  uint64_t v380;
  _DWORD *v381;
  uint64_t v382;
  unint64_t v383;
  uint64_t v384;
  unint64_t v385;
  unint64_t v386;
  uint64_t v387;
  _DWORD *v388;
  uint64_t v389;
  unint64_t v390;
  unint64_t v391;
  uint64_t v392;
  int v393;
  int v394;
  int v395;
  unsigned int v396;
  unint64_t v397;
  _DWORD *v398;
  uint64_t v399;
  _DWORD *v400;
  uint64_t v401;
  _DWORD *v402;
  uint64_t v403;
  unint64_t v404;
  unint64_t v405;
  _DWORD *v406;
  uint64_t v407;
  unint64_t v408;
  uint64_t v409;
  _DWORD *v410;
  uint64_t v411;
  _DWORD *v412;
  uint64_t v413;
  unint64_t v414;
  uint64_t v415;
  _DWORD *v416;
  uint64_t v417;
  _DWORD *v418;
  uint64_t v419;
  _DWORD *v420;
  uint64_t v421;
  _DWORD *v422;
  uint64_t v423;
  unint64_t v424;
  int v425;
  int v426;
  unint64_t v427;
  _DWORD *v428;
  uint64_t v429;
  unint64_t v430;
  uint64_t v431;
  _DWORD *v432;
  uint64_t v433;
  _DWORD *v434;
  uint64_t v435;
  _DWORD *v436;
  uint64_t v437;
  _DWORD *v438;
  uint64_t v439;
  _DWORD *v440;
  uint64_t v441;
  unint64_t v442;
  uint64_t v443;
  unint64_t v444;
  unint64_t v445;
  _DWORD *v446;
  _DWORD *v447;
  _DWORD *v448;
  _DWORD *v449;
  uint64_t v450;
  unint64_t v451;
  uint64_t v452;
  unint64_t v453;
  unint64_t v454;
  uint64_t v455;
  _DWORD *v456;
  _DWORD *v457;
  unint64_t v458;
  _DWORD *v459;
  _DWORD *v460;
  unint64_t v461;
  uint64_t v462;
  unint64_t v463;
  _DWORD *v464;
  unint64_t v465;
  _DWORD *v466;
  uint64_t v467;
  unint64_t v468;
  uint64_t v469;
  uint64_t v470;
  int v471;
  int v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  int *v476;
  unint64_t v477;
  unint64_t v478;
  unint64_t v479;
  _DWORD *v480;
  uint64_t v481;
  _DWORD *v482;
  uint64_t v483;
  _DWORD *v484;
  int v485;
  char *v486;
  char *v487;
  uint64_t v488;
  char *v489;
  uint64_t v490;
  char *v491;
  char *v492;
  uint64_t v493;
  unint64_t v494;
  int v495;
  int v496;
  uint64_t v497;
  unint64_t v498;
  uint64_t v499;
  unint64_t v500;
  unint64_t v501;
  _DWORD *v502;
  uint64_t v503;
  _DWORD *v504;
  uint64_t v505;
  _DWORD *v506;
  uint64_t v507;
  unint64_t v508;
  uint64_t v509;
  _DWORD *v510;
  uint64_t v511;
  _DWORD *v512;
  uint64_t v513;
  _DWORD *v514;
  uint64_t v515;
  _DWORD *v516;
  uint64_t v517;
  _DWORD *v518;
  uint64_t v519;
  _DWORD *v520;
  uint64_t v521;
  _DWORD *v522;
  uint64_t v523;
  unint64_t v524;
  _DWORD *v525;
  uint64_t v526;
  int v527;
  _DWORD *v528;
  uint64_t v529;
  unint64_t v530;
  uint64_t v531;
  unint64_t v532;
  unint64_t v533;
  _DWORD *v534;
  _DWORD *v535;
  uint64_t v536;
  _DWORD *v537;
  uint64_t v538;
  int *v539;
  uint64_t v540;
  int *v541;
  uint64_t v542;
  int *v543;
  uint64_t v544;
  int *v545;
  uint64_t v546;
  unint64_t v547;
  uint64_t v548;
  _DWORD *v549;
  uint64_t v550;
  _DWORD *v551;
  int v552;
  unint64_t v553;
  _DWORD *v554;
  int *v555;
  int v556;
  int v557;
  int v558;
  int *v559;
  _DWORD *v560;
  _DWORD *v561;
  _DWORD *v562;
  int *v563;
  _DWORD *v564;
  unint64_t v565;
  _DWORD *v566;
  _DWORD *v567;
  uint64_t v568;
  _DWORD *v569;
  uint64_t v570;
  unint64_t v571;
  uint64_t v572;
  _DWORD *v573;
  uint64_t v574;
  unint64_t v575;
  uint64_t v576;
  unint64_t v577;
  uint64_t v578;
  _DWORD *v579;
  uint64_t v580;
  unint64_t v581;
  int v582;
  unint64_t v583;
  int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  uint64_t v590;
  unint64_t v591;
  uint64_t v592;
  _DWORD *v593;
  uint64_t v594;
  _DWORD *v595;
  uint64_t v596;
  _DWORD *v597;
  uint64_t v598;
  _DWORD *v599;
  uint64_t v600;
  unint64_t v601;
  unint64_t v602;
  int *v603;
  int v604;
  _DWORD *v605;
  uint64_t v606;
  _DWORD *v607;
  uint64_t v608;
  _DWORD *v609;
  _DWORD *v610;
  uint64_t v611;
  _DWORD *v612;
  uint64_t v613;
  unint64_t v614;
  uint64_t v615;
  unint64_t v616;
  uint64_t v617;
  _DWORD *v618;
  uint64_t v619;
  _DWORD *v620;
  uint64_t v621;
  _DWORD *v622;
  uint64_t v623;
  unint64_t v624;
  unint64_t v625;
  _DWORD *v626;
  _DWORD *v627;
  uint64_t v628;
  _DWORD *v629;
  uint64_t v630;
  _DWORD *v631;
  uint64_t v632;
  int *v633;
  uint64_t v634;
  int *v635;
  uint64_t v636;
  int *v637;
  uint64_t v638;
  int *v639;
  uint64_t v640;
  int *v641;
  uint64_t v642;
  unint64_t v643;
  int v644;
  int v645;
  unint64_t v646;
  int *v647;
  int v648;
  int *v649;
  int v650;
  uint64_t v651;
  unsigned int v652;
  unsigned int v653;
  int v654;
  int v655;
  unsigned int v656;
  unsigned int v657;
  int *v658;
  int v659;
  _DWORD *v660;
  _DWORD *v661;
  _DWORD *v662;
  unint64_t v663;
  int v664;
  _DWORD *v665;
  _DWORD *v666;
  _DWORD *v667;
  int *v668;
  int v669;
  _DWORD *v670;
  int *v671;
  int v672;
  _DWORD *v673;
  unint64_t v674;
  _DWORD *v675;
  unint64_t v676;
  int *v677;
  int v678;
  int *v679;
  int v680;
  unsigned int v681;
  unsigned int v682;
  unsigned int v683;
  unsigned int v684;
  _DWORD *v685;
  _DWORD *v686;
  _DWORD *v687;
  _DWORD *v688;
  _DWORD *v689;
  _DWORD *v690;
  int *v691;
  int *v692;
  int *v693;
  int *v694;
  int *v695;
  unint64_t v696;
  uint64_t v697;
  int *v698;
  int *v699;
  int v700;
  int v701;
  int v702;
  int v703;
  unsigned int v704;
  int v705;
  int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int *v711;
  int v712;
  unint64_t v713;
  int v714;
  int v715;
  uint64_t v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  int v721;
  unsigned int v722;
  unsigned int v723;
  int v724;
  int v725;
  int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  int v732;
  int v733;
  int v734;
  int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  char v744;
  char v745;
  int v746;
  unsigned int v747;
  int v748;
  unsigned int v749;
  int v750;
  unsigned int v751;
  int v752;
  unint64_t v753;
  uint64_t v754;
  unint64_t v755;
  unsigned int v756;
  uint64_t v757;
  unsigned int v758;
  unint64_t v759;
  unsigned int v760;
  uint64_t v761;
  unsigned int v762;
  unsigned int v763;
  char *v764;
  unsigned int v765;
  unint64_t v766;
  unint64_t v767;
  unsigned int v768;
  unsigned int v769;
  int v770;
  int v771;
  int v772;
  unsigned int v773;
  int v774;
  int v775;
  int v776;
  unsigned int v777;
  int v778;
  int v779;
  int v780;

  STACK[0x6658] = v5;
  LODWORD(STACK[0x6410]) = v5 - 20025;
  v12 = (v5 - 20025) ^ 0x3685;
  LODWORD(STACK[0x6490]) = v12;
  v13 = ((a1 & 0xFFFFFFF2 ^ 0x8B3D20C0) + (a1 & 0xD7636832 ^ 0x5442483F) - ((a1 & 0xFFFFFFF2 ^ 0x8B3D20C0) & 0xD7636832)) ^ (v12 - 618511799);
  v14 = v13 - 881069717 - ((2 * v13) & 0x96F7EE88);
  v15 = ((a1 & 0xFFFFFFF5 ^ 0x6051D691) - 731906676 - (STACK[0x4F8] & (2 * (a1 & 0xFFFFFFF5 ^ 0x6051D691))) + 2649) ^ 0x567467BD;
  v16 = (((2 * (a1 & 0xFFFFFFFD ^ 0xCFC24B8)) | 0xD60872A) - (a1 & 0xFFFFFFFD ^ 0xCFC24B8) + 2035268715) ^ 0xC40847DC;
  v17 = ((2 * v16) | 0x28CA40CC) - v16;
  LODWORD(STACK[0x6610]) = a1 & 0xFFFFFFF1;
  v18 = ((a1 & 0xFFFFFFF1 ^ 0x87CA7910) + 990527740 - ((2 * (a1 & 0xFFFFFFF1 ^ 0x87CA7910)) & 0x761481E0)) ^ 0x1B0A4068;
  v19 = (((2 * v15) & 0xDAF9DEC4) - v15 + 310579357) ^ 0xE87D786ALL;
  STACK[0x6608] = v19;
  v21 = STACK[0xD668];
  STACK[0x65D0] = STACK[0xD668];
  v22 = STACK[0x6318];
  LODWORD(v19) = *(unsigned __int8 *)(v21 + v19) ^ 0x7B ^ *(unsigned __int8 *)(STACK[0x6318]
                                                                             + (*(unsigned __int8 *)(v21 + v19) ^ 0x71));
  v23 = a1;
  v24 = (v17 - 342171750) ^ 0x429ADEA9;
  STACK[0x65A8] = v24;
  v25 = *(unsigned __int8 *)(v21 + v24);
  v26 = (v14 + 1497) ^ 0x54BC08BALL;
  STACK[0x6600] = v26;
  v27 = STACK[0x6308];
  v28 = STACK[0x6310];
  LODWORD(v25) = ((v25 ^ 0x81) + (v25 ^ 0x4D)) ^ *(unsigned __int8 *)(STACK[0x6310] + (v25 ^ 0x55));
  v29 = ((*(unsigned __int8 *)(v27 + (*(unsigned __int8 *)(a5 + v26) ^ 0x9CLL)) ^ 0x3F) << 16) | ((*(unsigned __int8 *)(v27 + (*(unsigned __int8 *)(v21 + ((965883516 - (v18 | 0x3992367C) + (v18 | 0xC66DC983)) ^ 0x791C6E39)) ^ 0xBLL)) ^ 0x2C) << 8);
  v30 = ((a1 & 0xA5B9CB78 ^ 0xA90857) + (a1 & 0x5A463480) - 1) ^ 0x1812D669;
  STACK[0x65C8] = v30;
  v31 = (474351456 - (a1 & 0xFFFFFFF0 ^ 0x8DF91BC0 | 0x1C460760) + (a1 & 0xFFFFFFF0 ^ 0x8DF91BC0 | 0xE3B9F89F)) ^ 0xA328FA9F;
  v32 = *(unsigned __int8 *)(v21 + v30) ^ 0x8C ^ *(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v21 + v30) ^ 0x8CLL));
  v33 = (-502022893 - v31 + ((2 * v31) & 0x3BD86B64) + 3386) ^ 0x37C00DB2;
  STACK[0x65B0] = v33;
  LODWORD(v33) = *(unsigned __int8 *)(v27 + (*(unsigned __int8 *)(v21 + v33) ^ 0xC9)) ^ 0x75 | v29;
  v34 = v23 ^ 0x18BBDE3Cu;
  STACK[0x65F8] = v34;
  LODWORD(v30) = (v23 & 0xFFFFFFF4 ^ LODWORD(STACK[0x500]))
               - ((2 * (v23 & 0xFFFFFFF4 ^ LODWORD(STACK[0x500]))) & 0x791E0220)
               + 1016004881;
  LODWORD(v30) = (v30 & 0x61A07660 ^ LODWORD(STACK[0x4FC])) + (v30 & 0x9E5F8994);
  LODWORD(v34) = ((v25 ^ 0x3F) << 8) | ((*(unsigned __int8 *)(v28
                                                                          + (*(unsigned __int8 *)(v21 + v34) ^ 0xALL)) ^ ((*(unsigned __int8 *)(v21 + v34) ^ 0xDE) + (*(unsigned __int8 *)(v21 + v34) ^ 0x12)) ^ 0xFFFFFF81) << 24);
  LODWORD(STACK[0x65F0]) = v23 & 0xFFFFFFF3;
  LODWORD(v25) = (310148074 - (v23 & 0xFFFFFFF3 ^ 0xF2FDAD51 | 0x127C7BEA) + (v23 & 0xFFFFFFF3 ^ 0xF2FDAD51 | 0xED838415)) ^ 0x36CB9C83;
  v35 = (-1636269106 - (v23 & 0xFFFFFFF9 ^ 0xE764C0C1 | 0x9E7883CE) + (v23 & 0xFFFFFFF9 ^ 0xE764C0C1 | 0x61877C31)) ^ 0x9E5862CELL;
  STACK[0x65A0] = v35;
  v36 = STACK[0x6300];
  v37 = v32 | ((*(unsigned __int8 *)(STACK[0x6300] + (*(unsigned __int8 *)(v21 + v35) ^ 0x8ELL)) ^ 0xA0) << 8);
  v38 = (v30 - 1) ^ 0x3CC90077;
  STACK[0x6590] = v38;
  LODWORD(v19) = *(unsigned __int8 *)(v21 + v38) ^ 0x76 ^ *(unsigned __int8 *)(v22
                                                                             + (*(unsigned __int8 *)(v21 + v38) ^ 0xA4)) | ((_DWORD)v19 << 8);
  v39 = *(unsigned __int8 *)(v21 + ((1614708545 - (_DWORD)v25 + ((2 * (_DWORD)v25) | 0x3F82F492u) + 1654) ^ 0xAECF11B2));
  v40 = v33 | ((*(unsigned __int8 *)(v28 + (v39 ^ 0x4B)) ^ ((v39 ^ 0xFFFFFF9F) + (v39 ^ 0x53)) ^ 0x1B) << 24);
  LODWORD(STACK[0x6598]) = v23 & 0xFFFFFFFB;
  LODWORD(v33) = (((2 * (v23 & 0xFFFFFFFB ^ 0x52024B2)) & 0xCDB5EDF6) - (v23 & 0xFFFFFFFB ^ 0x52024B2) - 1725626112) ^ 0xBB410915;
  LODWORD(v38) = (v23 & 0xFFFFFFF7 ^ 0x380916D6)
               + 1743786208
               - (STACK[0x504] & (2 * (v23 & 0xFFFFFFF7 ^ 0x380916D6)))
               + 293;
  LODWORD(v30) = (v23 & 0xFFFFFFF6 ^ 0x3A2627E4)
               + (v23 & 0xF68A1462 ^ 0xC488100A)
               - ((v23 & 0xFFFFFFF6 ^ 0x3A2627E4) & 0xF68A1462);
  v41 = ((v38 & 0x4C78C243 ^ 0x448C243)
       + (v38 ^ 0x7AB01104)
       - ((v38 ^ 0x7AB01104) & 0x4C78C243)) ^ LODWORD(STACK[0x510]);
  STACK[0x65D8] = v41;
  LODWORD(v19) = v19 | ((*(unsigned __int8 *)(v21 + v41) ^ *(unsigned __int8 *)(v22
                                                                              + (*(unsigned __int8 *)(v21 + v41) ^ 0x22)) ^ 0xEEEEEEEE) << 24);
  LODWORD(v33) = v37 | ((*(unsigned __int8 *)(v36
                                            + (*(unsigned __int8 *)(v21
                                                                  + ((v33
                                                                    - ((2 * (_DWORD)v33) & 0xA3279F44)
                                                                    + 1368641442) ^ 0x6E6C3539)) ^ 0x4ALL)) ^ 0x75) << 24);
  v42 = (((v23 & 0xFFFFFFFA ^ LODWORD(STACK[0x508])) - 1) & 0x8C4152C0 ^ 0x10085)
      + (((v23 & 0xFFFFFFFA ^ LODWORD(STACK[0x508])) - 1) & 0x73BEAD3A);
  v43 = ((v30 & 0x4DE459FA ^ 0x4C2449B8)
       + (v30 ^ 0xA3C81246)
       - ((v30 ^ 0xA3C81246) & 0x4DE459FA)) ^ 0x3A3BA60F;
  STACK[0x65E0] = v43;
  LODWORD(v30) = v19 | ((*(unsigned __int8 *)(v27 + (*(unsigned __int8 *)(v21 + v43) ^ 0xCDLL)) ^ 0x8B) << 16);
  v44 = *(unsigned __int8 *)(v21 + ((v42 - 1) ^ 0x97FE12FBLL));
  LODWORD(v44) = v33 | ((v44 ^ 0x13 ^ *(unsigned __int8 *)(v22 + (v44 ^ 0x10))) << 16);
  LODWORD(STACK[0x65E8]) = v23;
  v45 = ((v23 & 0xFFFFFFFC ^ 0xA7896CD1) - ((2 * (v23 & 0xFFFFFFFC ^ 0xA7896CD1)) & 0xABE223A0) - 705621552) ^ LODWORD(STACK[0x50C]);
  STACK[0x65C0] = v45;
  LODWORD(v34) = *(unsigned __int8 *)(v28 + (*(unsigned __int8 *)(v21 + v45) ^ 0x85)) ^ ((*(_BYTE *)(v21 + v45) ^ 0x9D) + (*(_BYTE *)(v21 + v45) ^ 0x51)) ^ 0x3A | v34;
  v46 = (((2 * (v23 & 0xFFFFFFFE ^ 0xC881FF7)) & 0x2FC1C14A) - (v23 & 0xFFFFFFFE ^ 0xC881FF7) - 400613542) ^ 0xFC2CDE90;
  STACK[0x6588] = v46;
  HIDWORD(v47) = *(unsigned __int8 *)(v21 + v46) ^ 0x97;
  LODWORD(v47) = HIDWORD(v47);
  v48 = v34 | ((*(unsigned __int8 *)(v36
                                   + (((2 * ((v47 >> 1) ^ 0xE3123254)) & 0xC62464FELL | (((v47 >> 1) ^ 0xE3123254uLL) >> 31)) ^ 0xC62464C8)) ^ 0x22) << 16);
  v49 = STACK[0x6870];
  LODWORD(STACK[0x6470]) = v48;
  LODWORD(v34) = v48 ^ 0x34941B38 ^ (2 * ((v48 & v49 ^ 0xA090108A | 0x3ADA1D16) - (v48 & v49 ^ 0xA090108A | 0x4525E2E9))
                                   - 1974745646);
  LODWORD(v38) = STACK[0x68E0];
  LODWORD(v22) = STACK[0x6678];
  v50 = STACK[0x68F0];
  v51 = ((v34 & STACK[0x68E0]) >> v50) | ((v34 & STACK[0x6678]) << LODWORD(STACK[0x6430]));
  LODWORD(v34) = STACK[0x61F0];
  LODWORD(STACK[0x6478]) = v44 ^ 0xC7;
  LODWORD(v46) = v44 & 0x66BC3DA2 ^ 0x422C1400 ^ (v44 ^ 0xC7) & v34;
  LODWORD(v44) = v44 ^ 0xAE76110F ^ (2 * (((2 * v46) & 0x55D1C732) - v46) + 707672268);
  LODWORD(v43) = STACK[0x68C0];
  LOBYTE(v41) = STACK[0x68D0];
  v52 = STACK[0x6670];
  v53 = ((v44 & STACK[0x6670]) >> LODWORD(STACK[0x63D8]) >> LODWORD(STACK[0x63D0])) | ((v44 & STACK[0x68C0]) << v41);
  LODWORD(v44) = 2
               * (((2 * (v30 & LODWORD(STACK[0x6640]) ^ 0xB0B40041)) | 0x3348E4BC)
                - (v30 & LODWORD(STACK[0x6640]) ^ 0xB0B40041))
               + 1287068484;
  LODWORD(STACK[0x6480]) = v30;
  v54 = (((v30 ^ 0xD220E43E ^ v44) & v38) >> LODWORD(STACK[0x6420]) >> LODWORD(STACK[0x6428])) ^ (((v30 ^ 0xD220E43E ^ v44) & v22) << v41);
  LODWORD(STACK[0x6488]) = v40;
  LODWORD(v46) = v40 ^ 0x7A2316F6 ^ (2 * (((2 * (v40 & v49 ^ 0x7BD37B82)) | 0xD85E1F2) - (v40 & v49 ^ 0x7BD37B82))
                                   + 1920605710);
  v55 = ((v46 & v43) << LODWORD(STACK[0x6418]) << LODWORD(STACK[0x6408])) | ((v46 & v52) >> v50);
  LODWORD(v38) = a4 + v11;
  LODWORD(v30) = -502644123 * (v53 + a4 + v11) - ((-502644123 * (v53 + a4 + v11)) >> 16);
  LODWORD(STACK[0x6880]) = LODWORD(STACK[0x6820]) - v30 + (v30 | 0xDA262631) - ((v30 | 0xDA262631) ^ v30);
  LODWORD(STACK[0x6638]) = a2;
  LODWORD(STACK[0x6630]) = a3;
  LODWORD(v28) = a2 + a3;
  v57 = -502644123 * (v53 + v28) - ((-502644123 * (v53 + v28)) >> 16);
  v58 = 1430313035 * (v57 - v54 + (v57 >> 8)) - ((1430313035 * (v57 - v54 + (v57 >> 8))) >> 16);
  LODWORD(v22) = v58 + v55 + (v58 >> 8);
  LODWORD(STACK[0x6820]) = (v22 ^ v6) - v22 + 2 * (v22 & v6);
  v59 = (662770887 * v22 + ((662770887 * v22) >> 16)) ^ ((662770887 * (_DWORD)v22
                                                                      + ((662770887 * v22) >> 16)) >> 8);
  LODWORD(STACK[0x6690]) = (((v59 ^ 0x5EC1FE36) + (v59 | 0xA13E01C9) + 1) | v59) + v9 - v59;
  LODWORD(v22) = (v38 | 0xC9E1A0AF) - ((v38 | 0xC9E1A0AF) ^ v38);
  v60 = (v53 ^ v38) + 2 * (v53 & v38);
  LODWORD(STACK[0x6688]) = v22 - v11;
  LODWORD(STACK[0x6800]) = v22 - a4;
  LODWORD(v30) = v60 - v38;
  LODWORD(STACK[0x6580]) = v60 - v38;
  LODWORD(v38) = 1430313035
               * (-502644123 * v60
                - ((-502644123 * v60) >> 16)
                + ((-502644123 * v60 - ((-502644123 * v60) >> 16)) >> 8)
                - v54);
  LODWORD(v38) = v38 - WORD1(v38) + v55 + ((v38 - WORD1(v38)) >> 8);
  LODWORD(STACK[0x6650]) = (v38 ^ v7) - v38 + 2 * (v38 & v7);
  v61 = LODWORD(STACK[0x6618]) >= 0xB93CB18A;
  v62 = v30 + v28;
  v63 = -502644123 * v62
      - ((-502644123 * v62) >> 16)
      + ((-502644123 * v62 - ((-502644123 * v62) >> 16)) >> 8)
      - v54;
  LODWORD(STACK[0x66C0]) = v54;
  v64 = !v61;
  LODWORD(STACK[0x65B8]) = v64;
  if ((v63 & 0x400) != 0)
    v65 = -1024;
  else
    v65 = 1024;
  v66 = ((v65 + v63) & 0x1000000 | 0x400) ^ (v65 + v63) & 0xFEFFFFFF;
  v67 = v63 ^ LODWORD(STACK[0x6940]) ^ v66;
  LODWORD(STACK[0x66B0]) = v55;
  v68 = 662770887
      * (1430313035 * v66 - ((1430313035 * v66) >> 16) + v55 + ((1430313035 * v66 - ((1430313035 * v66) >> 16)) >> 8));
  v69 = 857983143 * (((v68 + HIWORD(v68)) ^ ((v68 + HIWORD(v68)) >> 8)) - v51);
  v70 = v69 + HIWORD(v69);
  v71 = STACK[0xD680];
  v72 = v70 + STACK[0xD680] + (v70 >> 8);
  LODWORD(STACK[0x6AC0]) = v72;
  v73 = 1430313035
      * (-502644123 * v62
       - ((-502644123 * v62) >> 16)
       - v54
       + ((-502644123 * v62 - ((-502644123 * v62) >> 16)) >> 8));
  v74 = 662770887 * (v73 - HIWORD(v73) + v55 + ((v73 - HIWORD(v73)) >> 8));
  v75 = ((v67 - v74) ^ v74) + 2 * ((v67 - v74) & v74);
  v76 = ((v74 - LODWORD(STACK[0x6950])) ^ v74 ^ LODWORD(STACK[0x6950]) ^ -(v74 ^ LODWORD(STACK[0x6950]))) + v74;
  LODWORD(STACK[0x66B8]) = v51;
  v77 = 857983143 * (((v74 + HIWORD(v74)) ^ ((v74 + HIWORD(v74)) >> 8)) - v51);
  v78 = v77 + HIWORD(v77) + ((v77 + HIWORD(v77)) >> 8);
  v79 = ((LODWORD(STACK[0x6890]) - v78) ^ v78) + 2 * ((LODWORD(STACK[0x6890]) - v78) & v78);
  v80 = 857983143 * (v59 - v51) + ((857983143 * (v59 - v51)) >> 16);
  LODWORD(STACK[0x67F0]) += v71 + v80 + (v80 >> 8);
  v81 = v71 + LODWORD(STACK[0x6920]);
  *(_QWORD *)(v10 - 152) = v71;
  LODWORD(STACK[0x6920]) = v81 + v78;
  v82 = (v72 & 1) == 0;
  v83 = STACK[0x66C8];
  if ((v72 & 1) != 0)
    v84 = v8;
  else
    v84 = STACK[0x66C8];
  LODWORD(STACK[0x6950]) = v84;
  v85 = STACK[0x6900];
  if ((v72 & 1) != 0)
    v86 = STACK[0x6900];
  else
    v86 = v8;
  v87 = STACK[0x6910];
  if ((v72 & 1) != 0)
    v85 = STACK[0x6910];
  LODWORD(STACK[0x6940]) = v85;
  if ((v72 & 1) != 0)
    v88 = v83;
  else
    v88 = v87;
  v89 = STACK[0x66E8];
  v90 = STACK[0x66D8];
  if ((v72 & 1) != 0)
    v91 = STACK[0x66E8];
  else
    v91 = STACK[0x66D8];
  LODWORD(STACK[0x6578]) = v91;
  v92 = STACK[0x66D0];
  if ((v72 & 1) != 0)
    v89 = STACK[0x66D0];
  LODWORD(STACK[0x66E8]) = v89;
  v93 = STACK[0x66E0];
  if ((v72 & 1) != 0)
    v92 = STACK[0x66E0];
  LODWORD(STACK[0x66D0]) = v92;
  if ((v72 & 1) != 0)
    v94 = v90;
  else
    v94 = v93;
  v95 = STACK[0x6970];
  v96 = STACK[0x6960];
  if ((v72 & 1) != 0)
    v97 = STACK[0x6960];
  else
    v97 = STACK[0x6970];
  LODWORD(STACK[0x6518]) = v97;
  if ((v72 & 1) != 0)
    v98 = v95;
  else
    v98 = STACK[0x6AB0];
  if ((v72 & 1) != 0)
    v99 = STACK[0x6AB0];
  else
    v99 = STACK[0x6AA0];
  if ((v72 & 1) != 0)
    v100 = STACK[0x6AA0];
  else
    v100 = v96;
  v101 = STACK[0x67D0];
  v102 = STACK[0x67C0];
  if ((v72 & 1) != 0)
    v103 = STACK[0x67C0];
  else
    v103 = STACK[0x67D0];
  LODWORD(STACK[0x6510]) = v103;
  if ((v72 & 1) != 0)
    v104 = STACK[0x67B0];
  else
    v104 = v102;
  if ((v72 & 1) != 0)
    v105 = STACK[0x67E0];
  else
    v105 = STACK[0x67B0];
  if ((v72 & 1) != 0)
    v106 = v101;
  else
    v106 = STACK[0x67E0];
  v107 = STACK[0x6A80];
  if ((v72 & 1) != 0)
    v108 = v75;
  else
    v108 = STACK[0x6A80];
  if ((v72 & 1) == 0)
    v107 = v76;
  LODWORD(STACK[0x64D8]) = v107;
  if ((v72 & 1) != 0)
    v75 = STACK[0x6A90];
  else
    v76 = STACK[0x6A90];
  v109 = STACK[0x6780];
  v110 = STACK[0x6770];
  if ((v72 & 1) != 0)
    v111 = STACK[0x6770];
  else
    v111 = STACK[0x6780];
  v112 = STACK[0x67A0];
  if ((v72 & 1) != 0)
    v110 = STACK[0x67A0];
  LODWORD(STACK[0x6770]) = v110;
  v113 = STACK[0x6790];
  if ((v72 & 1) != 0)
    v114 = v109;
  else
    v114 = STACK[0x6790];
  LODWORD(STACK[0x6500]) = v114;
  if ((v72 & 1) != 0)
    v115 = v113;
  else
    v115 = v112;
  v116 = STACK[0x6A70];
  v117 = STACK[0x6A40];
  if ((v72 & 1) != 0)
    v118 = STACK[0x6A70];
  else
    v118 = STACK[0x6A40];
  v119 = STACK[0x6A60];
  if (!v82)
    v116 = STACK[0x6A60];
  LODWORD(STACK[0x6890]) = v116;
  if (v82)
    v120 = STACK[0x6A50];
  else
    v120 = v117;
  if (v82)
    v121 = v119;
  else
    v121 = STACK[0x6A50];
  v122 = STACK[0x6730];
  if (v82)
    v123 = STACK[0x6740];
  else
    v123 = STACK[0x6730];
  v124 = STACK[0x6750];
  if (v82)
    v125 = STACK[0x6750];
  else
    v125 = STACK[0x6740];
  LODWORD(STACK[0x64D0]) = v125;
  v126 = STACK[0x6760];
  if (v82)
  {
    v124 = STACK[0x6760];
    v126 = v122;
  }
  v127 = STACK[0x6A30];
  v128 = STACK[0x6A20];
  if (v82)
    v129 = STACK[0x6A30];
  else
    v129 = STACK[0x6A20];
  LODWORD(STACK[0x64B8]) = v129;
  v130 = STACK[0x6A00];
  if (v82)
    v131 = STACK[0x6A00];
  else
    v131 = v127;
  LODWORD(STACK[0x6560]) = v131;
  v132 = STACK[0x6A10];
  if (v82)
    v133 = STACK[0x6A10];
  else
    v133 = v130;
  LODWORD(STACK[0x6A00]) = v133;
  if (v82)
    v134 = v128;
  else
    v134 = v132;
  LODWORD(STACK[0x64F8]) = v134;
  v135 = STACK[0x6710];
  v136 = STACK[0x6708];
  if (v82)
    v137 = STACK[0x6710];
  else
    v137 = STACK[0x6708];
  LODWORD(STACK[0x66D8]) = v137;
  v138 = STACK[0x6720];
  if (v82)
    v139 = STACK[0x6720];
  else
    v139 = v135;
  LODWORD(STACK[0x6710]) = v139;
  v140 = STACK[0x6700];
  if (v82)
    v141 = STACK[0x6700];
  else
    v141 = v138;
  LODWORD(STACK[0x6548]) = v141;
  if (v82)
    v142 = v136;
  else
    v142 = v140;
  v143 = STACK[0x69F0];
  v144 = STACK[0x69E0];
  if (v82)
    v145 = STACK[0x69F0];
  else
    v145 = STACK[0x69E0];
  LODWORD(STACK[0x6648]) = v145;
  v146 = STACK[0x69C0];
  if (v82)
    v147 = STACK[0x69C0];
  else
    v147 = v143;
  LODWORD(STACK[0x69F0]) = v147;
  if (v82)
    v148 = v144;
  else
    v148 = STACK[0x69D0];
  if (v82)
    v146 = STACK[0x69D0];
  LODWORD(STACK[0x64F0]) = v146;
  v149 = STACK[0x6990];
  v150 = STACK[0x6690];
  if (v82)
    v151 = STACK[0x6990];
  else
    v151 = STACK[0x6690];
  LODWORD(STACK[0x6540]) = v151;
  v152 = STACK[0x69A0];
  if (v82)
    v149 = STACK[0x69A0];
  LODWORD(STACK[0x6558]) = v149;
  v153 = STACK[0x69B0];
  if (!v82)
    v150 = STACK[0x69B0];
  LODWORD(STACK[0x6538]) = v150;
  if (v82)
    v152 = v153;
  v154 = STACK[0x6980];
  v155 = STACK[0x6850];
  if (v82)
    v156 = STACK[0x6850];
  else
    v156 = STACK[0x6980];
  LODWORD(STACK[0x6690]) = v156;
  v157 = STACK[0x6860];
  if (v82)
    v155 = STACK[0x6860];
  LODWORD(STACK[0x6850]) = v155;
  v158 = STACK[0x6688];
  if (!v82)
    v154 = STACK[0x6688];
  LODWORD(STACK[0x64C8]) = v154;
  if (!v82)
    v158 = v157;
  LODWORD(STACK[0x6688]) = v158;
  v159 = STACK[0x68A0];
  if (v82)
    v160 = v79;
  else
    v160 = STACK[0x68A0];
  LODWORD(STACK[0x6570]) = v160;
  v161 = STACK[0x6880];
  if (!v82)
    v159 = STACK[0x6880];
  LODWORD(STACK[0x64E8]) = v159;
  v162 = STACK[0x68B0];
  if (!v82)
    v161 = STACK[0x68B0];
  LODWORD(STACK[0x6530]) = v161;
  if (v82)
    v79 = v162;
  v163 = STACK[0x6820];
  v164 = STACK[0x6800];
  if (v82)
    v165 = STACK[0x6800];
  else
    v165 = STACK[0x6820];
  LODWORD(STACK[0x6568]) = v165;
  v166 = STACK[0x6830];
  if (v82)
    v164 = STACK[0x6830];
  LODWORD(STACK[0x64E0]) = v164;
  v167 = STACK[0x6840];
  if (v82)
    v166 = STACK[0x6840];
  LODWORD(STACK[0x6528]) = v166;
  if (v82)
    v168 = v163;
  else
    v168 = v167;
  v169 = STACK[0x6810];
  v170 = STACK[0x66F8];
  if (v82)
    v171 = STACK[0x6810];
  else
    v171 = STACK[0x66F8];
  LODWORD(STACK[0x6520]) = v171;
  v172 = STACK[0x6650];
  if (v82)
    v169 = STACK[0x6650];
  LODWORD(STACK[0x6550]) = v169;
  v173 = STACK[0x66F0];
  if (v82)
    v172 = STACK[0x66F0];
  LODWORD(STACK[0x64C0]) = v172;
  v174 = *(_QWORD *)(v10 - 152);
  if (v82)
    v173 = v170;
  LODWORD(STACK[0x66F8]) = v173;
  v176 = STACK[0x6AC0] & 2;
  v175 = v176 == 0;
  if (v176)
    v177 = v86;
  else
    v177 = v88;
  LODWORD(STACK[0x6910]) = v177;
  if (v176)
    v178 = v88;
  else
    v178 = v86;
  LODWORD(STACK[0x6800]) = v178;
  v179 = STACK[0x6950];
  v180 = STACK[0x6940];
  if (v176)
    v181 = STACK[0x6940];
  else
    v181 = STACK[0x6950];
  LODWORD(STACK[0x66C8]) = v181;
  if (v176)
    v182 = v179;
  else
    v182 = v180;
  LODWORD(STACK[0x6900]) = v182;
  v183 = STACK[0x66E8];
  if (v176)
    v184 = STACK[0x66E8];
  else
    v184 = v94;
  LODWORD(STACK[0x66E0]) = v184;
  if (v176)
    v185 = v94;
  else
    v185 = v183;
  LODWORD(STACK[0x66E8]) = v185;
  if (v176)
    v186 = v100;
  else
    v186 = v98;
  LODWORD(STACK[0x6AB0]) = v186;
  if (v176)
    v187 = v98;
  else
    v187 = v100;
  LODWORD(STACK[0x6960]) = v187;
  v188 = STACK[0x6518];
  if (v176)
    v189 = v99;
  else
    v189 = STACK[0x6518];
  LODWORD(STACK[0x6970]) = v189;
  if (v176)
    v190 = v188;
  else
    v190 = v99;
  LODWORD(STACK[0x6AA0]) = v190;
  if (v176)
    v191 = v106;
  else
    v191 = v104;
  LODWORD(STACK[0x67C0]) = v191;
  if (v176)
    v192 = v104;
  else
    v192 = v106;
  LODWORD(STACK[0x67E0]) = v192;
  v193 = STACK[0x6510];
  if (v176)
    v194 = v105;
  else
    v194 = STACK[0x6510];
  LODWORD(STACK[0x67D0]) = v194;
  if (v176)
    v195 = v193;
  else
    v195 = v105;
  LODWORD(STACK[0x67B0]) = v195;
  if (v176)
    v196 = v108;
  else
    v196 = v76;
  LODWORD(STACK[0x6A90]) = v196;
  if (v176)
    v197 = v76;
  else
    v197 = v108;
  LODWORD(STACK[0x6A80]) = v197;
  v198 = STACK[0x64D8];
  if (v176)
    v199 = STACK[0x64D8];
  else
    v199 = v75;
  LODWORD(STACK[0x6940]) = v199;
  if (v176)
    v200 = v75;
  else
    v200 = v198;
  LODWORD(STACK[0x6950]) = v200;
  if (v176)
    v201 = v111;
  else
    v201 = v115;
  LODWORD(STACK[0x67A0]) = v201;
  if (v176)
    v202 = v115;
  else
    v202 = v111;
  LODWORD(STACK[0x6780]) = v202;
  if (v176)
    v203 = v121;
  else
    v203 = v118;
  LODWORD(STACK[0x6A40]) = v203;
  if (v176)
    v204 = v118;
  else
    v204 = v121;
  LODWORD(STACK[0x6A60]) = v204;
  v205 = STACK[0x6770];
  v206 = STACK[0x6500];
  if (v176)
    v207 = STACK[0x6770];
  else
    v207 = STACK[0x6500];
  LODWORD(STACK[0x6790]) = v207;
  if (v176)
    v208 = v206;
  else
    v208 = v205;
  LODWORD(STACK[0x6770]) = v208;
  v209 = STACK[0x6890];
  if (v176)
    v210 = v120;
  else
    v210 = STACK[0x6890];
  LODWORD(STACK[0x6A70]) = v210;
  if (v176)
    v211 = v209;
  else
    v211 = v120;
  LODWORD(STACK[0x6A50]) = v211;
  if (v176)
    v212 = v124;
  else
    v212 = v123;
  LODWORD(STACK[0x6740]) = v212;
  if (v176)
    v213 = v123;
  else
    v213 = v124;
  LODWORD(STACK[0x6760]) = v213;
  v214 = STACK[0x64D0];
  if (v176)
    v215 = v126;
  else
    v215 = STACK[0x64D0];
  LODWORD(STACK[0x6750]) = v215;
  if (v176)
    v216 = v214;
  else
    v216 = v126;
  LODWORD(STACK[0x6730]) = v216;
  LODWORD(v218) = __ROR4__(LODWORD(STACK[0x64B8]) ^ LODWORD(STACK[0x514]), 21) ^ 0xC9EA8886;
  HIDWORD(v218) = v218;
  v217 = v218 >> 11;
  v219 = STACK[0x6A00];
  if (v176)
    v220 = STACK[0x6A00];
  else
    v220 = v217;
  LODWORD(STACK[0x6A30]) = v220;
  if (!v176)
    v217 = v219;
  LODWORD(STACK[0x6A10]) = v217;
  v221 = STACK[0x6560];
  v222 = STACK[0x64F8];
  if (v176)
    v223 = STACK[0x6560];
  else
    v223 = STACK[0x64F8];
  LODWORD(STACK[0x6A20]) = v223;
  if (v176)
    v224 = v222;
  else
    v224 = v221;
  LODWORD(STACK[0x6A00]) = v224;
  v225 = STACK[0x6710];
  if (v176)
    v226 = STACK[0x6710];
  else
    v226 = v142;
  LODWORD(STACK[0x6708]) = v226;
  if (v176)
    v227 = v142;
  else
    v227 = v225;
  LODWORD(STACK[0x6720]) = v227;
  v228 = STACK[0x66D8];
  v229 = STACK[0x6548];
  if (v176)
    v230 = STACK[0x6548];
  else
    v230 = STACK[0x66D8];
  LODWORD(STACK[0x6710]) = v230;
  if (v176)
    v231 = v228;
  else
    v231 = v229;
  LODWORD(STACK[0x6700]) = v231;
  v232 = STACK[0x69F0];
  if (v176)
    v233 = STACK[0x69F0];
  else
    v233 = v148;
  LODWORD(STACK[0x69E0]) = v233;
  if (v176)
    v234 = v148;
  else
    v234 = v232;
  LODWORD(STACK[0x69C0]) = v234;
  v235 = STACK[0x6648];
  v236 = STACK[0x64F0];
  if (v176)
    v237 = STACK[0x6648];
  else
    v237 = STACK[0x64F0];
  LODWORD(STACK[0x69D0]) = v237;
  if (v176)
    v238 = v236;
  else
    v238 = v235;
  LODWORD(STACK[0x69F0]) = v238;
  v239 = STACK[0x6540];
  if (v176)
    v240 = v152;
  else
    v240 = STACK[0x6540];
  LODWORD(STACK[0x6990]) = v240;
  if (v176)
    v241 = v239;
  else
    v241 = v152;
  LODWORD(STACK[0x69B0]) = v241;
  v242 = STACK[0x6558];
  v243 = STACK[0x6538];
  if (v176)
    v244 = STACK[0x6558];
  else
    v244 = STACK[0x6538];
  LODWORD(STACK[0x6880]) = v244;
  if (v176)
    v245 = v243;
  else
    v245 = v242;
  LODWORD(STACK[0x69A0]) = v245;
  v246 = STACK[0x6850];
  v247 = STACK[0x64C8];
  if (v176)
    v248 = STACK[0x6850];
  else
    v248 = STACK[0x64C8];
  LODWORD(STACK[0x6980]) = v248;
  if (v176)
    v249 = v247;
  else
    v249 = v246;
  LODWORD(STACK[0x6860]) = v249;
  v250 = STACK[0x6690];
  v251 = STACK[0x6688];
  if (v176)
    v252 = STACK[0x6688];
  else
    v252 = STACK[0x6690];
  LODWORD(STACK[0x6850]) = v252;
  if (v176)
    v253 = v250;
  else
    v253 = v251;
  LODWORD(STACK[0x6688]) = v253;
  v254 = STACK[0x64E8];
  if (v176)
    v255 = v79;
  else
    v255 = STACK[0x64E8];
  LODWORD(STACK[0x68A0]) = v255;
  if (v176)
    v256 = v254;
  else
    v256 = v79;
  LODWORD(STACK[0x68B0]) = v256;
  v257 = STACK[0x6570];
  v258 = STACK[0x6530];
  if (v176)
    v259 = STACK[0x6530];
  else
    v259 = STACK[0x6570];
  LODWORD(STACK[0x6890]) = v259;
  if (v176)
    v260 = v257;
  else
    v260 = v258;
  LODWORD(STACK[0x6820]) = v260;
  v261 = STACK[0x64E0];
  if (v176)
    v262 = v168;
  else
    v262 = STACK[0x64E0];
  LODWORD(STACK[0x6830]) = v262;
  if (v176)
    v263 = v261;
  else
    v263 = v168;
  LODWORD(STACK[0x6650]) = v263;
  v264 = STACK[0x6568];
  v265 = STACK[0x6528];
  if (v176)
    v266 = STACK[0x6528];
  else
    v266 = STACK[0x6568];
  LODWORD(STACK[0x6690]) = v266;
  if (v176)
    v267 = v264;
  else
    v267 = v265;
  LODWORD(STACK[0x6840]) = v267;
  v268 = STACK[0x6520];
  v269 = STACK[0x64C0];
  if (v176)
    v270 = STACK[0x64C0];
  else
    v270 = STACK[0x6520];
  LODWORD(STACK[0x6810]) = v270;
  if (v176)
    v271 = v268;
  else
    v271 = v269;
  LODWORD(STACK[0x66F0]) = v271;
  v272 = STACK[0x6550];
  v273 = STACK[0x66F8];
  if (v176)
    v274 = STACK[0x66F8];
  else
    v274 = STACK[0x6550];
  LODWORD(STACK[0x6648]) = v274;
  if (v176)
    v275 = v272;
  else
    v275 = v273;
  LODWORD(STACK[0x66F8]) = v275;
  LODWORD(STACK[0x6560]) = v176;
  v276 = ~v176 + 2 * v176;
  v277 = STACK[0x6578];
  v278 = STACK[0x66D0];
  if (v175)
    v279 = STACK[0x6578];
  else
    v279 = STACK[0x66D0];
  LODWORD(STACK[0x66D8]) = v279;
  if (v276 >= 0)
    v280 = v277;
  else
    v280 = v278;
  LODWORD(STACK[0x66D0]) = v280;
  v281 = STACK[0x67F0];
  v282 = STACK[0x66B8];
  if ((STACK[0x67F0] & 1) != 0)
    v283 = STACK[0x66B8];
  else
    v283 = STACK[0x66B0];
  v284 = STACK[0x6580];
  if ((v281 & 1) != 0)
    v282 = STACK[0x6580];
  v285 = STACK[0x66C0];
  if ((v281 & 1) != 0)
  {
    v284 = STACK[0x66C0];
    v285 = STACK[0x66B0];
  }
  if ((v281 & 2) != 0)
    v286 = v283;
  else
    v286 = v284;
  if ((v281 & 2) != 0)
  {
    v283 = v284;
    v287 = v282;
  }
  else
  {
    v287 = v285;
  }
  if ((v281 & 2) != 0)
    v282 = v285;
  v288 = STACK[0x6378];
  v289 = STACK[0x6320];
  v290 = LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x61E8]) ^ LODWORD(STACK[0x61C0]) ^ LODWORD(STACK[0x6668]) ^ v286;
  v291 = LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x61E0]) ^ LODWORD(STACK[0x61DC]) ^ LODWORD(STACK[0x6668]) ^ v283;
  v292 = LODWORD(STACK[0x6320]) ^ LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x6668]) ^ v287;
  v293 = LODWORD(STACK[0x6668]) ^ LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x61BC]) ^ LODWORD(STACK[0x6320]) ^ v282 ^ v275;
  v294 = (int *)(v174 + 4 * BYTE2(v293));
  STACK[0xD680] = (unint64_t)v294;
  v295 = v291 ^ v270;
  v296 = v292 ^ v274;
  v297 = *v294;
  STACK[0xD680] = v174;
  LODWORD(v294) = *(_DWORD *)(v174 + 4 * HIBYTE(v296));
  v298 = 4 * BYTE1(v295);
  v299 = (_DWORD *)(v174 + v298);
  STACK[0xD680] = (unint64_t)v299;
  v300 = v297 ^ __ROR4__(*v299, 8);
  v301 = 4 * HIBYTE(v295);
  v302 = (unint64_t)v299 + v301 - v298;
  STACK[0xD680] = v302;
  v303 = v302 - v301;
  LODWORD(v302) = *(_DWORD *)v302;
  v304 = (_DWORD *)(v303 + 4 * BYTE2(v295));
  STACK[0xD680] = (unint64_t)v304;
  LODWORD(v301) = *v304;
  STACK[0xD680] = v303;
  HIDWORD(v305) = *(_DWORD *)(v303 + 4 * v295);
  LODWORD(v305) = HIDWORD(v305);
  v306 = (v305 >> 16) ^ __ROR4__((_DWORD)v294, 24);
  v307 = v290 ^ v271;
  v308 = 4 * HIBYTE(v307);
  v309 = (_DWORD *)(v303 + v308);
  STACK[0xD680] = (unint64_t)v309;
  v310 = v300 ^ __ROR4__(*v309, 24);
  v311 = 4 * v293;
  v312 = (_DWORD *)((char *)v309 + v311 - v308);
  STACK[0xD680] = (unint64_t)v312;
  v313 = (char *)v312 - v311;
  LODWORD(v312) = *v312;
  v314 = (unint64_t)&v313[4 * v307];
  STACK[0xD680] = v314;
  LODWORD(v311) = *(_DWORD *)v314;
  v315 = &v313[4 * BYTE2(v296)];
  STACK[0xD680] = (unint64_t)v315;
  LODWORD(v314) = *(_DWORD *)v315;
  v316 = &v313[4 * BYTE2(v307)];
  STACK[0xD680] = (unint64_t)v316;
  v317 = v306 ^ *(_DWORD *)v316;
  v318 = 4 * BYTE1(v307);
  v319 = &v313[v318];
  v320 = 4 * HIBYTE(v293);
  v321 = &v319[v320 - v318];
  v322 = 4 * BYTE1(v293);
  v323 = &v321[v322 - v320];
  v324 = 4 * v296;
  v325 = (unint64_t)&v323[v324 - v322];
  STACK[0xD680] = (unint64_t)v319;
  LODWORD(v319) = *(_DWORD *)v319;
  STACK[0xD680] = (unint64_t)v321;
  LODWORD(v321) = *(_DWORD *)v321;
  STACK[0xD680] = (unint64_t)v323;
  v326 = v317 ^ __ROR4__(*(_DWORD *)v323, 8);
  STACK[0xD680] = v325;
  v327 = (_DWORD *)(v325 - v324);
  LODWORD(v325) = v310 ^ __ROR4__(*(_DWORD *)v325, 16);
  v328 = 4 * BYTE1(v296);
  STACK[0xD680] = (unint64_t)v327 + v328;
  v329 = STACK[0x6340];
  LODWORD(v302) = v289 ^ LODWORD(STACK[0x6340]) ^ LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x61A8]) ^ __ROR4__(v302, 24) ^ __ROR4__((_DWORD)v312, 16) ^ v314 ^ __ROR4__((_DWORD)v319, 8);
  LODWORD(v312) = LODWORD(STACK[0x6AC0]) + LODWORD(STACK[0x6930]);
  LODWORD(STACK[0x6930]) = (_DWORD)v312;
  v330 = v289 ^ v329 ^ LODWORD(STACK[0x62F8]) ^ v267 ^ (v281 + v326 - (_DWORD)v312);
  LODWORD(v325) = v289 ^ v329 ^ LODWORD(STACK[0x62F0]) ^ v263 ^ (v325 + v281 - LODWORD(STACK[0x6920]));
  LODWORD(v328) = v289 ^ v329 ^ LODWORD(STACK[0x62E8]) ^ v301 ^ __ROR4__(v311, 16) ^ __ROR4__((_DWORD)v321, 24) ^ __ROR4__(*(_DWORD *)((char *)v327 + v328), 8);
  v331 = v302 ^ v262;
  v332 = &v327[(v302 ^ v262)];
  v333 = &v327[BYTE1(v330)];
  v334 = &v327[BYTE1(v331)];
  v335 = (unint64_t)&v327[BYTE3(v325)];
  v336 = &v327[HIBYTE(v330)];
  v337 = &v327[v325];
  LODWORD(v328) = v328 ^ v266;
  STACK[0xD680] = (unint64_t)v332;
  LODWORD(v332) = *v332;
  STACK[0xD680] = (unint64_t)v333;
  LODWORD(v333) = *v333;
  STACK[0xD680] = (unint64_t)v334;
  LODWORD(v334) = *v334;
  STACK[0xD680] = v335;
  LODWORD(v335) = *(_DWORD *)v335;
  STACK[0xD680] = (unint64_t)v336;
  LODWORD(v336) = *v336;
  STACK[0xD680] = (unint64_t)v337;
  v338 = (unint64_t)v327;
  LODWORD(v337) = *v337;
  v339 = (unint64_t)&v327[BYTE1(v328)];
  STACK[0xD680] = v339;
  LODWORD(v327) = *(_DWORD *)v339;
  v340 = v338 + 4 * BYTE2(v330);
  STACK[0xD680] = v340;
  LODWORD(v339) = *(_DWORD *)v340;
  STACK[0xD680] = v338;
  LODWORD(v340) = *(_DWORD *)(v338 + 4 * BYTE2(v325));
  v341 = (int *)(v338 + 4 * v330);
  STACK[0xD680] = (unint64_t)v341;
  v342 = *v341;
  v343 = (_DWORD *)(v338 + 4 * v328);
  STACK[0xD680] = (unint64_t)v343;
  LODWORD(v341) = *v343;
  v344 = 4 * BYTE3(v328);
  v345 = v338 + v344;
  v346 = 4 * HIBYTE(v331);
  v347 = (_DWORD *)(v345 + v346 - v344);
  v348 = 4 * BYTE2(v328);
  v349 = &v347[(unint64_t)v348 / 4 + v346 / 0xFFFFFFFFFFFFFFFCLL];
  v350 = 4 * BYTE1(v325);
  v351 = &v349[(unint64_t)v350 / 4 + v348 / 0xFFFFFFFFFFFFFFFCLL];
  v352 = 4 * BYTE2(v331);
  v353 = &v351[(unint64_t)v352 / 4 + v350 / 0xFFFFFFFFFFFFFFFCLL];
  v354 = LODWORD(STACK[0x6370]) ^ v329;
  v355 = v354 ^ LODWORD(STACK[0x6198]) ^ LODWORD(STACK[0x61A0]) ^ ((_DWORD)v334 << 24) ^ (v334 >> 8) ^ __ROR4__(v335, 24) ^ __ROR4__(v342, 16);
  STACK[0xD680] = v345;
  LODWORD(v334) = *(_DWORD *)v345;
  STACK[0xD680] = (unint64_t)v347;
  LODWORD(v335) = *v347;
  STACK[0xD680] = (unint64_t)v349;
  LODWORD(v345) = v355 ^ v256 ^ *v349;
  LODWORD(v332) = v354 ^ LODWORD(STACK[0x6188]) ^ __ROR4__((_DWORD)v332, 16) ^ __ROR4__((_DWORD)v336, 24) ^ __ROR4__((_DWORD)v327, 8) ^ v340 ^ v259;
  v356 = v354 ^ LODWORD(STACK[0x6180]) ^ v255 ^ v339 ^ ((_DWORD)v341 << 16) ^ (v341 >> 16) ^ __ROR4__(v335, 24);
  STACK[0xD680] = (unint64_t)v351;
  LODWORD(v351) = v356 ^ __ROR4__(*v351, 8);
  STACK[0xD680] = (unint64_t)v353;
  v357 = &v353[v352 / 0xFFFFFFFFFFFFFFFCLL];
  v358 = *v353;
  v359 = v345;
  STACK[0xD680] = (unint64_t)&v357[v359];
  LODWORD(v333) = v354 ^ LODWORD(STACK[0x6178]) ^ LODWORD(STACK[0x6190]) ^ __ROR4__((_DWORD)v333, 8) ^ __ROR4__((_DWORD)v337, 16) ^ v260 ^ __ROR4__((_DWORD)v334, 24) ^ v358;
  v360 = v357[v359];
  v361 = BYTE1(v345);
  v362 = (unint64_t)&v357[v361];
  v363 = 4 * v332;
  v364 = v362 + v363 - v361 * 4;
  STACK[0xD680] = v362;
  LODWORD(v362) = *(_DWORD *)v362;
  STACK[0xD680] = v364;
  v365 = v364 - v363;
  LODWORD(v364) = *(_DWORD *)v364;
  v366 = (_DWORD *)(v365 + 4 * v351);
  STACK[0xD680] = (unint64_t)v366;
  LODWORD(v335) = *v366;
  v367 = 4 * BYTE2(v345);
  v368 = (_DWORD *)(v365 + v367);
  STACK[0xD680] = (unint64_t)v368;
  LODWORD(v335) = *v368 ^ __ROR4__(v335, 16);
  v369 = 4 * (v351 >> 24);
  v370 = &v368[(unint64_t)v369 / 4 + v367 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = (unint64_t)v370;
  v371 = &v370[v369 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v370) = *v370;
  v372 = &v371[BYTE3(v345)];
  STACK[0xD680] = (unint64_t)v372;
  HIDWORD(v305) = (_DWORD)v370;
  LODWORD(v305) = (_DWORD)v370;
  LODWORD(v362) = (v305 >> 24) ^ __ROR4__(v362, 8);
  HIDWORD(v305) = *v372;
  LODWORD(v305) = *v372;
  LODWORD(v364) = (v305 >> 24) ^ __ROR4__(v364, 16);
  v373 = 4 * (v332 >> 24);
  v374 = &v371[(unint64_t)v373 / 4];
  v375 = 4 * v333;
  v376 = &v374[(unint64_t)v375 / 4 + v373 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = (unint64_t)v374;
  LODWORD(v335) = v335 ^ __ROR4__(*v374, 24);
  STACK[0xD680] = (unint64_t)v376;
  v377 = &v376[v375 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v362) = v362 ^ __ROR4__(*v376, 16);
  v378 = 4 * BYTE1(v351);
  v379 = &v377[(unint64_t)v378 / 4];
  STACK[0xD680] = (unint64_t)v379;
  LODWORD(v305) = __ROR4__(*v379, 8);
  v380 = 4 * BYTE2(v332);
  v381 = &v379[(unint64_t)v380 / 4 + v378 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = (unint64_t)v381;
  LODWORD(v362) = v362 ^ *v381;
  v382 = BYTE2(v351);
  v383 = (unint64_t)&v381[v380 / 0xFFFFFFFFFFFFFFFCLL + v382];
  v384 = 4 * BYTE1(v332);
  v385 = v383 + v384 - v382 * 4;
  STACK[0xD680] = v383;
  LODWORD(v383) = *(_DWORD *)v383;
  STACK[0xD680] = v385;
  v386 = v385 - v384;
  LODWORD(v385) = *(_DWORD *)v385;
  v387 = 4 * BYTE2(v333);
  v388 = (_DWORD *)(v386 + v387);
  STACK[0xD680] = (unint64_t)v388;
  LODWORD(v364) = v364 ^ v305 ^ *v388;
  v389 = BYTE1(v333);
  v390 = (unint64_t)&v388[v389 + v387 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = v390;
  v391 = v390 - v389 * 4;
  HIDWORD(v305) = *(_DWORD *)v390;
  LODWORD(v305) = *(_DWORD *)v390;
  LODWORD(v390) = (v335 ^ -(int)v335 ^ ((v305 >> 8) - ((v305 >> 8) ^ v335))) + (v305 >> 8);
  v392 = 4 * (v333 >> 24);
  STACK[0xD680] = v391 + v392;
  LODWORD(v335) = LODWORD(STACK[0x6360]) ^ v288;
  v393 = STACK[0x6380];
  v394 = STACK[0x6388];
  v395 = STACK[0x61F8];
  LODWORD(v390) = v335 ^ LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x6380]) ^ LODWORD(STACK[0x61F8]) ^ LODWORD(STACK[0x6388]) ^ v249 ^ v390;
  LODWORD(v364) = v335 ^ LODWORD(STACK[0x6220]) ^ LODWORD(STACK[0x6160]) ^ v253 ^ (v364 + LODWORD(STACK[0x6170]));
  LODWORD(v362) = v335 ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x62D0]) ^ LODWORD(STACK[0x6660]) ^ LODWORD(STACK[0x63A8]) ^ v252 ^ (LODWORD(STACK[0x616C]) + LODWORD(STACK[0x62E0]) + v362);
  v396 = v335 ^ LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x6980]) ^ __ROR4__(v360, 16) ^ v383 ^ __ROR4__(v385, 8) ^ __ROR4__(*(_DWORD *)(v391 + v392), 24);
  v397 = v391 + 4 * BYTE3(v390);
  STACK[0xD680] = v397;
  LODWORD(v385) = *(_DWORD *)v397;
  v398 = (_DWORD *)(v391 + 4 * BYTE2(v396));
  STACK[0xD680] = (unint64_t)v398;
  LODWORD(v397) = *v398;
  STACK[0xD680] = v391;
  LODWORD(v398) = *(_DWORD *)(v391 + 4 * v390);
  v399 = 4 * BYTE1(v396);
  v400 = (_DWORD *)(v391 + v399);
  v401 = 4 * BYTE1(v364);
  v402 = &v400[(unint64_t)v401 / 4 + v399 / 0xFFFFFFFFFFFFFFFCLL];
  v403 = v364;
  v404 = (unint64_t)&v402[v403 + v401 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = (unint64_t)v400;
  LODWORD(v400) = *v400;
  STACK[0xD680] = (unint64_t)v402;
  LODWORD(v402) = *v402;
  STACK[0xD680] = v404;
  v405 = v404 - v403 * 4;
  LODWORD(v404) = *(_DWORD *)v404;
  v406 = (_DWORD *)(v405 + 4 * BYTE3(v362));
  STACK[0xD680] = (unint64_t)v406;
  LODWORD(v327) = *v406;
  v407 = 4 * BYTE2(v364);
  v408 = v405 + v407;
  v409 = 4 * v362;
  v410 = (_DWORD *)(v408 + v409 - v407);
  v411 = 4 * BYTE3(v364);
  v412 = &v410[v409 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v411 / 4];
  v413 = BYTE2(v390);
  v414 = (unint64_t)&v412[v413 + v411 / 0xFFFFFFFFFFFFFFFCLL];
  v415 = 4 * BYTE2(v362);
  v416 = (_DWORD *)(v414 + v415 - v413 * 4);
  v417 = 4 * v396;
  v418 = &v416[(unint64_t)v417 / 4 + v415 / 0xFFFFFFFFFFFFFFFCLL];
  v419 = 4 * BYTE1(v390);
  v420 = &v418[v417 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v419 / 4];
  v421 = 4 * HIBYTE(v396);
  v422 = &v420[(unint64_t)v421 / 4 + v419 / 0xFFFFFFFFFFFFFFFCLL];
  v423 = BYTE1(v362);
  v424 = (unint64_t)&v422[v423 + v421 / 0xFFFFFFFFFFFFFFFCLL];
  v425 = STACK[0x6338];
  v426 = LODWORD(STACK[0x6338]) ^ LODWORD(STACK[0x6358]);
  LODWORD(v404) = v426 ^ LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x69B0]) ^ __ROR4__(v404, 16);
  STACK[0xD680] = v408;
  LODWORD(v408) = *(_DWORD *)v408;
  STACK[0xD680] = (unint64_t)v410;
  LODWORD(v410) = *v410;
  STACK[0xD680] = (unint64_t)v412;
  LODWORD(v412) = *v412;
  STACK[0xD680] = v414;
  LODWORD(v414) = *(_DWORD *)v414;
  STACK[0xD680] = (unint64_t)v416;
  LODWORD(v404) = v404 ^ *v416;
  STACK[0xD680] = (unint64_t)v418;
  LODWORD(v416) = *v418;
  STACK[0xD680] = (unint64_t)v420;
  LODWORD(v404) = v404 ^ __ROR4__(*v420, 8);
  STACK[0xD680] = (unint64_t)v422;
  LODWORD(v422) = v404 ^ __ROR4__(*v422, 24);
  LODWORD(v385) = v426 ^ LODWORD(STACK[0x6150]) ^ LODWORD(STACK[0x6990]) ^ __ROR4__(v385, 24) ^ __ROR4__((_DWORD)v400, 8) ^ v408 ^ __ROR4__((_DWORD)v410, 16);
  LODWORD(v397) = v426 ^ LODWORD(STACK[0x62B8]) ^ LODWORD(STACK[0x69A0]) ^ v397 ^ __ROR4__((_DWORD)v398, 16) ^ __ROR4__((_DWORD)v412, 24);
  STACK[0xD680] = v424;
  v427 = v424 - v423 * 4;
  LODWORD(v397) = v397 ^ __ROR4__(*(_DWORD *)v424, 8);
  LODWORD(v424) = v426 ^ LODWORD(STACK[0x6218]) ^ LODWORD(STACK[0x6158]) ^ LODWORD(STACK[0x6880]) ^ __ROR4__((_DWORD)v402, 8) ^ __ROR4__((_DWORD)v327, 24) ^ v414;
  LODWORD(v305) = __ROR4__((_DWORD)v416, 16);
  LODWORD(v414) = v424 ^ v305;
  v428 = (_DWORD *)(v427 + 4 * ((unsigned __int16)(v424 ^ v305) >> 8));
  STACK[0xD680] = (unint64_t)v428;
  LODWORD(v424) = *v428;
  v429 = 4 * BYTE1(v397);
  v430 = v427 + v429;
  v431 = 4 * v422;
  v432 = (_DWORD *)(v430 + v431 - v429);
  v433 = 4 * BYTE1(v385);
  v434 = &v432[(unint64_t)v433 / 4 + v431 / 0xFFFFFFFFFFFFFFFCLL];
  v435 = 4 * BYTE3(v414);
  v436 = &v434[(unint64_t)v435 / 4 + v433 / 0xFFFFFFFFFFFFFFFCLL];
  v437 = 4 * v414;
  v438 = &v436[(unint64_t)v437 / 4 + v435 / 0xFFFFFFFFFFFFFFFCLL];
  v439 = 4 * BYTE3(v385);
  v440 = &v438[v437 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v439 / 4];
  v441 = BYTE1(v422);
  v442 = (unint64_t)&v440[v441 + v439 / 0xFFFFFFFFFFFFFFFCLL];
  v443 = 4 * BYTE2(v385);
  v444 = v442 + v443 - v441 * 4;
  STACK[0xD680] = v430;
  LODWORD(v430) = *(_DWORD *)v430;
  STACK[0xD680] = (unint64_t)v432;
  LODWORD(v432) = *v432;
  STACK[0xD680] = (unint64_t)v434;
  LODWORD(v434) = *v434;
  STACK[0xD680] = (unint64_t)v436;
  LODWORD(v436) = *v436;
  STACK[0xD680] = (unint64_t)v438;
  LODWORD(v438) = *v438;
  STACK[0xD680] = (unint64_t)v440;
  LODWORD(v440) = *v440;
  STACK[0xD680] = v442;
  LODWORD(v442) = *(_DWORD *)v442;
  STACK[0xD680] = v444;
  v445 = v444 - v443;
  LODWORD(v444) = *(_DWORD *)v444;
  v446 = (_DWORD *)(v445 + 4 * v385);
  STACK[0xD680] = (unint64_t)v446;
  LODWORD(v385) = *v446;
  v447 = (_DWORD *)(v445 + 4 * BYTE3(v397));
  STACK[0xD680] = (unint64_t)v447;
  LODWORD(v446) = *v447;
  v448 = (_DWORD *)(v445 + 4 * v397);
  STACK[0xD680] = (unint64_t)v448;
  LODWORD(v447) = *v448;
  v449 = (_DWORD *)(v445 + 4 * BYTE2(v414));
  STACK[0xD680] = (unint64_t)v449;
  LODWORD(v414) = *v449;
  LODWORD(v449) = v422 >> 24;
  v450 = 4 * BYTE2(v422);
  v451 = v445 + v450;
  v452 = 4 * v449;
  v453 = v451 + v452 - v450;
  STACK[0xD680] = v451;
  LODWORD(v451) = *(_DWORD *)v451;
  STACK[0xD680] = v453;
  v454 = v453 - v452;
  LODWORD(v453) = *(_DWORD *)v453;
  v455 = 4 * BYTE2(v397);
  STACK[0xD680] = v454 + v455;
  LODWORD(v430) = v395 ^ v393 ^ v394 ^ LODWORD(STACK[0x69C0]) ^ (LODWORD(STACK[0x62B0])
                                                               + (LODWORD(STACK[0x6148]) ^ LODWORD(STACK[0x6140]) ^ LODWORD(STACK[0x6028]) ^ LODWORD(STACK[0x6030]) ^ __ROR4__(v430, 8) ^ __ROR4__((_DWORD)v432, 16) ^ __ROR4__((_DWORD)v436, 24) ^ 0xDCAF9A1E ^ v444));
  LODWORD(v414) = v425 ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x62A0]) ^ LODWORD(STACK[0x69F0]) ^ __ROR4__((_DWORD)v434, 8) ^ __ROR4__((_DWORD)v447, 16) ^ v414 ^ __ROR4__(v453, 24);
  LODWORD(v430) = LODWORD(STACK[0x6298]) ^ LODWORD(STACK[0x6350]) ^ (v430 + v425 - 2 * (v430 & v425));
  LODWORD(v453) = v425 ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x6130]) ^ LODWORD(STACK[0x6128]) ^ LODWORD(STACK[0x69D0]) ^ __ROR4__((_DWORD)v438, 16) ^ __ROR4__((_DWORD)v440, 24) ^ __ROR4__(v442, 8);
  LODWORD(v424) = v425 ^ LODWORD(STACK[0x6350]) ^ LODWORD(STACK[0x6290]) ^ 0x40C68039 ^ LODWORD(STACK[0x6138]) ^ LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x69E0]) ^ __ROR4__(v424, 8) ^ __ROR4__(v385, 16) ^ __ROR4__((_DWORD)v446, 24) ^ v451;
  LODWORD(v385) = *(_DWORD *)(v454 + v455);
  v456 = (_DWORD *)(v454 + 4 * BYTE2(v424));
  STACK[0xD680] = (unint64_t)v456;
  LODWORD(v455) = *v456;
  LODWORD(v385) = v453 ^ v385;
  STACK[0xD680] = v454;
  LODWORD(v453) = *(_DWORD *)(v454 + 4 * v424);
  v457 = (_DWORD *)(v454 + 4 * v430);
  STACK[0xD680] = (unint64_t)v457;
  LODWORD(v455) = v455 ^ __ROR4__(*v457, 16);
  v458 = v454 + 4 * BYTE3(v385);
  v459 = (_DWORD *)(v454 + 4 * BYTE3(v424));
  v460 = (_DWORD *)(v454 + 4 * BYTE1(v424));
  STACK[0xD680] = v458;
  LODWORD(v455) = v455 ^ __ROR4__(*(_DWORD *)v458, 24);
  v461 = v454 + 4 * BYTE2(v430);
  STACK[0xD680] = (unint64_t)v459;
  LODWORD(v459) = *v459;
  STACK[0xD680] = (unint64_t)v460;
  LODWORD(v460) = *v460;
  STACK[0xD680] = v461;
  LODWORD(v461) = *(_DWORD *)v461 ^ __ROR4__(v453, 16);
  v462 = 4 * BYTE3(v430);
  STACK[0xD680] = v454 + v462;
  HIDWORD(v305) = *(_DWORD *)(v454 + v462);
  LODWORD(v305) = HIDWORD(v305);
  v463 = v454 + 4 * BYTE2(v414);
  LODWORD(v458) = (v305 >> 24) ^ __ROR4__((_DWORD)v460, 8);
  v464 = (_DWORD *)(v454 + 4 * BYTE1(v430));
  STACK[0xD680] = v463;
  LODWORD(v463) = *(_DWORD *)v463 ^ __ROR4__((_DWORD)v459, 24);
  v465 = v454 + 4 * BYTE2(v385);
  STACK[0xD680] = (unint64_t)v464;
  LODWORD(v463) = v463 ^ __ROR4__(*v464, 8);
  v466 = (_DWORD *)(v454 + 4 * v385);
  STACK[0xD680] = v465;
  LODWORD(v465) = v458 ^ *(_DWORD *)v465;
  v467 = 4 * v414;
  STACK[0xD680] = (unint64_t)v466;
  LODWORD(v466) = v463 ^ __ROR4__(*v466, 16);
  STACK[0xD680] = v454 + v467;
  LODWORD(v467) = *(_DWORD *)(v454 + v467);
  v468 = v454 + 4 * BYTE3(v414);
  STACK[0xD680] = v468;
  LODWORD(v465) = v465 ^ __ROR4__(v467, 16);
  HIDWORD(v305) = *(_DWORD *)v468;
  LODWORD(v305) = *(_DWORD *)v468;
  LODWORD(v461) = ((v305 >> 24) ^ -(int)(v305 >> 24) ^ (v461 - ((v305 >> 24) ^ v461))) + v461;
  v469 = 4 * BYTE1(v414);
  STACK[0xD680] = v454 + v469;
  LODWORD(v467) = v455 ^ __ROR4__(*(_DWORD *)(v454 + v469), 8);
  LODWORD(STACK[0x66B8]) = v467;
  v470 = 4 * BYTE1(v385);
  STACK[0xD680] = v454 + v470;
  LODWORD(v305) = __ROR4__(*(_DWORD *)(v454 + v470), 8);
  LODWORD(STACK[0x66C0]) = v461 ^ v305;
  v471 = (_DWORD)v466 + v281 - LODWORD(STACK[0x6930]);
  LODWORD(v442) = STACK[0x6348];
  v472 = STACK[0x6668];
  LODWORD(v469) = LODWORD(STACK[0x6668]) ^ LODWORD(STACK[0x6348]) ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x6A20]) ^ v471;
  LODWORD(STACK[0x6578]) = v471;
  v473 = 4 * BYTE3(v469);
  STACK[0xD680] = v454 + v473;
  LODWORD(v455) = v472 ^ v442 ^ LODWORD(STACK[0x6118]) ^ LODWORD(STACK[0x6A10]) ^ v467;
  LODWORD(v473) = *(_DWORD *)(v454 + v473);
  v474 = 4 * BYTE2(v455);
  STACK[0xD680] = v454 + v474;
  LODWORD(v467) = v465 - v281 + LODWORD(STACK[0x6920]);
  LODWORD(STACK[0x66B0]) = v467;
  LODWORD(v465) = v472 ^ v442 ^ LODWORD(STACK[0x6280]) ^ LODWORD(STACK[0x6A00]) ^ v467;
  LODWORD(v474) = *(_DWORD *)(v454 + v474);
  STACK[0xD680] = v454;
  LODWORD(v467) = *(_DWORD *)(v454 + 4 * v469);
  v475 = 4 * v465;
  STACK[0xD680] = v454 + v475;
  LODWORD(v468) = v472 ^ v442 ^ LODWORD(STACK[0x6108]) ^ LODWORD(STACK[0x6A30]) ^ v461 ^ v305;
  LODWORD(v475) = *(_DWORD *)(v454 + v475);
  v476 = (int *)(v454 + 4 * BYTE2(v468));
  v477 = v454 + 4 * BYTE1(v469);
  v478 = v454 + 4 * BYTE2(v469);
  v479 = v454 + 4 * BYTE2(v465);
  v480 = (_DWORD *)(v454 + 4 * v455);
  v481 = 4 * BYTE1(v468);
  v482 = (_DWORD *)(v454 + v481);
  v483 = 4 * v468;
  v484 = (_DWORD *)((char *)v482 + v483 - v481);
  STACK[0xD680] = (unint64_t)v476;
  v485 = *v476;
  STACK[0xD680] = v477;
  LODWORD(v477) = *(_DWORD *)v477;
  STACK[0xD680] = v478;
  LODWORD(v478) = *(_DWORD *)v478;
  STACK[0xD680] = v479;
  LODWORD(v479) = *(_DWORD *)v479;
  STACK[0xD680] = (unint64_t)v480;
  LODWORD(v480) = *v480;
  STACK[0xD680] = (unint64_t)v482;
  LODWORD(v482) = *v482;
  STACK[0xD680] = (unint64_t)v484;
  v486 = (char *)v484 - v483;
  LODWORD(v484) = *v484;
  v487 = &v486[4 * BYTE3(v455)];
  STACK[0xD680] = (unint64_t)v487;
  LODWORD(v483) = *(_DWORD *)v487;
  v488 = 4 * BYTE1(v455);
  v489 = &v486[v488];
  v490 = 4 * BYTE1(v465);
  v491 = &v489[v490 - v488];
  v492 = &v491[4 * BYTE3(v468) - v490];
  v493 = 4 * BYTE3(v465);
  v494 = (unint64_t)&v491[v493 - v490];
  LODWORD(v463) = STACK[0x6368];
  v495 = STACK[0x6330];
  v496 = LODWORD(STACK[0x6368]) ^ LODWORD(STACK[0x6330]);
  LODWORD(v474) = v496 ^ LODWORD(STACK[0x6278]) ^ LODWORD(STACK[0x6A40]) ^ v474 ^ __ROR4__(v477, 8) ^ __ROR4__((_DWORD)v484, 16);
  STACK[0xD680] = (unint64_t)v489;
  LODWORD(v477) = *(_DWORD *)v489;
  STACK[0xD680] = (unint64_t)v491;
  LODWORD(v491) = *(_DWORD *)v491;
  STACK[0xD680] = (unint64_t)v492;
  LODWORD(v484) = *(_DWORD *)v492;
  STACK[0xD680] = v494;
  LODWORD(v474) = v474 ^ __ROR4__(*(_DWORD *)v494, 24);
  LODWORD(v475) = LODWORD(STACK[0x6A50]) ^ v463 ^ __ROR4__(v475, 16) ^ v478 ^ __ROR4__((_DWORD)v482, 8) ^ __ROR4__(v483, 24);
  LODWORD(v473) = v463 ^ v495 ^ LODWORD(STACK[0x6270]) ^ LODWORD(STACK[0x6A60]) ^ __ROR4__(v473, 24) ^ v485 ^ __ROR4__((_DWORD)v480, 16) ^ __ROR4__((_DWORD)v491, 8);
  LODWORD(v491) = v475 ^ -(int)v475 ^ (v495 - (v475 ^ v495));
  LODWORD(v479) = v463 ^ v495 ^ LODWORD(STACK[0x6238]) ^ LODWORD(STACK[0x6A70]) ^ __ROR4__(v467, 16) ^ v479 ^ __ROR4__(v477, 8) ^ __ROR4__((_DWORD)v484, 24);
  v497 = 4 * BYTE3(v474);
  v498 = v494 - v493 + v497;
  v499 = 4 * BYTE2(v474);
  v500 = v498 + v499 - v497;
  LODWORD(v491) = ((_DWORD)v491 + v495) ^ LODWORD(STACK[0x6250]);
  STACK[0xD680] = v498;
  LODWORD(v498) = *(_DWORD *)v498;
  STACK[0xD680] = v500;
  v501 = v500 - v499;
  LODWORD(v500) = *(_DWORD *)v500;
  STACK[0xD680] = v501;
  LODWORD(v494) = *(_DWORD *)(v501 + 4 * BYTE2(v479));
  v502 = (_DWORD *)(v501 + 4 * BYTE2(v491));
  STACK[0xD680] = (unint64_t)v502;
  LODWORD(v477) = *v502;
  v503 = 4 * v474;
  v504 = (_DWORD *)(v501 + v503);
  v505 = 4 * v473;
  v506 = &v504[(unint64_t)v505 / 4 + v503 / 0xFFFFFFFFFFFFFFFCLL];
  v507 = BYTE2(v473);
  v508 = (unint64_t)&v506[v507 + v505 / 0xFFFFFFFFFFFFFFFCLL];
  v509 = 4 * BYTE1(v474);
  v510 = (_DWORD *)(v508 + v509 - v507 * 4);
  v511 = 4 * BYTE3(v473);
  v512 = &v510[(unint64_t)v511 / 4 + v509 / 0xFFFFFFFFFFFFFFFCLL];
  v513 = 4 * v479;
  v514 = &v512[v511 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v513 / 4];
  v515 = 4 * v491;
  v516 = &v514[(unint64_t)v515 / 4 + v513 / 0xFFFFFFFFFFFFFFFCLL];
  v517 = 4 * BYTE1(v479);
  v518 = &v516[v515 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v517 / 4];
  v519 = 4 * (v491 >> 24);
  v520 = &v518[(unint64_t)v519 / 4 + v517 / 0xFFFFFFFFFFFFFFFCLL];
  v521 = 4 * BYTE3(v479);
  v522 = &v520[v519 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v521 / 4];
  v523 = BYTE1(v473);
  v524 = (unint64_t)&v522[v523 + v521 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = (unint64_t)v504;
  LODWORD(v504) = *v504;
  STACK[0xD680] = (unint64_t)v506;
  LODWORD(v506) = *v506;
  STACK[0xD680] = v508;
  LODWORD(v508) = *(_DWORD *)v508;
  STACK[0xD680] = (unint64_t)v510;
  LODWORD(v510) = *v510;
  STACK[0xD680] = (unint64_t)v512;
  LODWORD(v512) = *v512;
  STACK[0xD680] = (unint64_t)v514;
  LODWORD(v514) = *v514;
  STACK[0xD680] = (unint64_t)v516;
  LODWORD(v516) = *v516;
  STACK[0xD680] = (unint64_t)v518;
  LODWORD(v518) = *v518;
  STACK[0xD680] = (unint64_t)v520;
  LODWORD(v520) = *v520;
  STACK[0xD680] = (unint64_t)v522;
  LODWORD(v522) = *v522;
  STACK[0xD680] = v524;
  v525 = (_DWORD *)(v524 - v523 * 4);
  LODWORD(v524) = *(_DWORD *)v524;
  v526 = 4 * BYTE1(v491);
  STACK[0xD680] = (unint64_t)v525 + v526;
  v527 = STACK[0x6018];
  LODWORD(v524) = LODWORD(STACK[0x6018]) ^ LODWORD(STACK[0x6068]) ^ LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6940]) ^ __ROR4__(v498, 24) ^ v477 ^ __ROR4__((_DWORD)v514, 16) ^ __ROR4__(v524, 8);
  LODWORD(v498) = LODWORD(STACK[0x63B0]) ^ __ROR4__((_DWORD)v504, 16) ^ v508 ^ __ROR4__((_DWORD)v518, 8) ^ __ROR4__((_DWORD)v520, 24);
  LODWORD(v526) = LODWORD(STACK[0x6018]) ^ LODWORD(STACK[0x60F8]) ^ LODWORD(STACK[0x6A90]) ^ v500 ^ __ROR4__((_DWORD)v506, 16) ^ __ROR4__((_DWORD)v522, 24) ^ __ROR4__(*(_DWORD *)((char *)v525 + v526), 8);
  LODWORD(v498) = LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x60F0]) ^ (v498
                                                                   + LODWORD(STACK[0x6A80])
                                                                   - 2 * (v498 & LODWORD(STACK[0x6A80])));
  LODWORD(v512) = LODWORD(STACK[0x6018]) ^ LODWORD(STACK[0x60E8]) ^ LODWORD(STACK[0x6950]) ^ v494 ^ __ROR4__((_DWORD)v510, 8) ^ __ROR4__((_DWORD)v512, 24) ^ __ROR4__((_DWORD)v516, 16);
  v528 = &v525[v524];
  STACK[0xD680] = (unint64_t)v528;
  LODWORD(v500) = *v528;
  v529 = BYTE2(v512);
  v530 = (unint64_t)&v525[v529];
  v531 = 4 * BYTE2(v498);
  v532 = v530 + v531 - v529 * 4;
  STACK[0xD680] = v530;
  LODWORD(v530) = *(_DWORD *)v530;
  STACK[0xD680] = v532;
  v533 = v532 - v531;
  LODWORD(v532) = *(_DWORD *)v532;
  STACK[0xD680] = v533;
  LODWORD(v477) = *(_DWORD *)(v533 + 4 * BYTE1(v498));
  v534 = (_DWORD *)(v533 + 4 * v512);
  STACK[0xD680] = (unint64_t)v534;
  LODWORD(v534) = *v534;
  v535 = (_DWORD *)(v533 + 4 * v498);
  STACK[0xD680] = (unint64_t)v535;
  LODWORD(v535) = *v535;
  v536 = 4 * BYTE3(v524);
  v537 = (_DWORD *)(v533 + v536);
  v538 = 4 * BYTE1(v524);
  v539 = &v537[(unint64_t)v538 / 4 + v536 / 0xFFFFFFFFFFFFFFFCLL];
  v540 = 4 * (v512 >> 24);
  v541 = &v539[(unint64_t)v540 / 4 + v538 / 0xFFFFFFFFFFFFFFFCLL];
  v542 = 4 * BYTE1(v512);
  v543 = &v541[v540 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v542 / 4];
  v544 = 4 * v526;
  v545 = &v543[(unint64_t)v544 / 4 + v542 / 0xFFFFFFFFFFFFFFFCLL];
  v546 = BYTE2(v526);
  v547 = (unint64_t)&v545[v546 + v544 / 0xFFFFFFFFFFFFFFFCLL];
  v548 = 4 * BYTE3(v526);
  v549 = (_DWORD *)(v547 - v546 * 4 + v548);
  v550 = 4 * BYTE3(v498);
  v551 = &v549[(unint64_t)v550 / 4 + v548 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = (unint64_t)v537;
  LODWORD(v537) = *v537;
  STACK[0xD680] = (unint64_t)v539;
  v552 = *v539;
  STACK[0xD680] = (unint64_t)v541;
  LODWORD(v541) = *v541;
  STACK[0xD680] = (unint64_t)v543;
  LODWORD(v543) = *v543;
  STACK[0xD680] = (unint64_t)v545;
  LODWORD(v545) = *v545;
  STACK[0xD680] = v547;
  LODWORD(v547) = *(_DWORD *)v547;
  STACK[0xD680] = (unint64_t)v549;
  LODWORD(v549) = *v549;
  STACK[0xD680] = (unint64_t)v551;
  v553 = (unint64_t)&v551[v550 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v551) = *v551;
  v554 = (_DWORD *)(v553 + 4 * BYTE1(v526));
  STACK[0xD680] = (unint64_t)v554;
  LODWORD(v526) = *v554;
  v555 = (int *)(v553 + 4 * BYTE2(v524));
  STACK[0xD680] = (unint64_t)v555;
  v556 = *v555;
  STACK[0xD680] = v553;
  v557 = LODWORD(STACK[0x6328]) ^ v425;
  v558 = v557 ^ LODWORD(STACK[0x60C8]);
  LODWORD(v553) = v558 ^ LODWORD(STACK[0x63A0]) ^ LODWORD(STACK[0x6AA0]) ^ v532 ^ __ROR4__((_DWORD)v537, 24) ^ __ROR4__((_DWORD)v543, 8) ^ __ROR4__((_DWORD)v545, 16);
  LODWORD(v545) = v557 ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x6AB0]) ^ __ROR4__(v477, 8) ^ __ROR4__((_DWORD)v534, 16) ^ __ROR4__((_DWORD)v549, 24) ^ v556;
  LODWORD(v530) = v557 ^ LODWORD(STACK[0x6268]) ^ LODWORD(STACK[0x6960]) ^ __ROR4__(v500, 16) ^ v530 ^ __ROR4__((_DWORD)v551, 24) ^ __ROR4__(v526, 8);
  LODWORD(v500) = v557 ^ LODWORD(STACK[0x6260]) ^ LODWORD(STACK[0x60B0]) ^ LODWORD(STACK[0x6970]) ^ __ROR4__((_DWORD)v535, 16) ^ __ROR4__(v552, 8) ^ __ROR4__((_DWORD)v541, 24) ^ v547;
  v559 = (int *)(STACK[0xD688] + 4 * BYTE2(v545));
  v560 = (_DWORD *)(STACK[0xD688] + 4 * BYTE2(v530));
  LODWORD(v477) = *(_DWORD *)(STACK[0xD688] + 4 * BYTE3(v553));
  v561 = (_DWORD *)(STACK[0xD688] + 4 * BYTE1(v500));
  v562 = (_DWORD *)(STACK[0xD688] + 4 * v553);
  v563 = (int *)(STACK[0xD688] + 4 * v530);
  v564 = (_DWORD *)(STACK[0xD688] + 4 * BYTE2(v500));
  v565 = STACK[0xD688];
  v566 = (_DWORD *)(STACK[0xD688] + 4 * BYTE2(v553));
  STACK[0xD688] = (unint64_t)v566;
  LODWORD(v535) = *v566;
  v567 = (_DWORD *)(v565 + 4 * BYTE3(v530));
  STACK[0xD688] = (unint64_t)v567;
  LODWORD(v567) = *v567;
  v568 = 4 * v545;
  v569 = (_DWORD *)(v565 + v568);
  v570 = BYTE1(v530);
  v571 = (unint64_t)&v569[v570 + v568 / 0xFFFFFFFFFFFFFFFCLL];
  v572 = 4 * BYTE3(v500);
  v573 = (_DWORD *)(v571 - v570 * 4 + v572);
  v574 = BYTE1(v553);
  v575 = (unint64_t)&v573[v574 + v572 / 0xFFFFFFFFFFFFFFFCLL];
  v576 = 4 * (v545 >> 24);
  v577 = v575 + v576 - v574 * 4;
  v578 = 4 * BYTE1(v545);
  v579 = (_DWORD *)(v577 - v576 + v578);
  v580 = v500;
  v581 = (unint64_t)&v579[v580 + v578 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD688] = (unint64_t)v569;
  LODWORD(v569) = *v569;
  STACK[0xD688] = v571;
  v582 = *(_DWORD *)v571;
  STACK[0xD688] = (unint64_t)v573;
  LODWORD(STACK[0x6570]) = *v573;
  STACK[0xD688] = v575;
  LODWORD(STACK[0x6568]) = *(_DWORD *)v575;
  STACK[0xD688] = v577;
  LODWORD(v577) = *(_DWORD *)v577;
  STACK[0xD688] = (unint64_t)v579;
  LODWORD(v575) = *v579;
  STACK[0xD688] = v581;
  v583 = v581 - v580 * 4;
  LODWORD(v581) = *(_DWORD *)v581;
  STACK[0xD688] = v583;
  LODWORD(v571) = STACK[0x6680];
  LODWORD(v490) = STACK[0x6628];
  LODWORD(STACK[0x6580]) = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6680]);
  v584 = v490 ^ v571 ^ 0x742B0810;
  v585 = v584 ^ LODWORD(STACK[0x6910]) ^ __ROR4__((_DWORD)v535, 24) ^ v582 ^ __ROR4__(v577, 16) ^ __ROR4__(v581, 8);
  v586 = v490 ^ 0x742B0810 ^ v571 ^ LODWORD(STACK[0x6900]) ^ __ROR4__(*v560, 24) ^ __ROR4__(v477, 16) ^ *v561 ^ __ROR4__((_DWORD)v569, 8);
  LODWORD(v581) = (v471 ^ v442 ^ -(v471 ^ v442) ^ (LODWORD(STACK[0x6710]) - (v471 ^ v442 ^ LODWORD(STACK[0x6710]))))
                + LODWORD(STACK[0x6710]);
  HIDWORD(v305) = v581 & 0xEB8E97A6;
  LODWORD(v305) = v581 & 0xEB8E97A6;
  v587 = v584 ^ LODWORD(STACK[0x6800]) ^ __ROR4__(*v562, 8) ^ __ROR4__(*v564, 24) ^ __ROR4__((_DWORD)v567, 16) ^ v575;
  LODWORD(v577) = (__ROR4__((LODWORD(STACK[0x6080]) ^ LODWORD(STACK[0x6020]) ^ ((LODWORD(STACK[0x6080]) ^ 0xBAC6676B ^ (v305 >> 20))+ ((v305 >> 20) ^ 0x45399894)+ 1))+ ((v305 >> 20) ^ 0x45399894), 12) ^ 0x89445399)+ ((v581 ^ v472) & 0x14716859);
  v588 = *v559;
  v589 = *v563;
  LODWORD(v577) = v577 ^ LODWORD(STACK[0x6078]);
  v590 = 4 * v577;
  v591 = STACK[0xD680];
  STACK[0xD680] += v590;
  LODWORD(v561) = v472 ^ v442 ^ LODWORD(STACK[0x6088]) ^ LODWORD(STACK[0x6120]) ^ LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x66B0]);
  LODWORD(v563) = v472 ^ v442 ^ LODWORD(STACK[0x6070]) ^ LODWORD(STACK[0x6708]) ^ LODWORD(STACK[0x66B8]);
  LODWORD(v590) = *(_DWORD *)(v591 + v590);
  v592 = 4 * (v472 ^ v442 ^ LOBYTE(STACK[0x6070]) ^ LOBYTE(STACK[0x6708]) ^ LOBYTE(STACK[0x66B8]));
  v593 = (_DWORD *)(v591 + v592);
  v594 = 4 * BYTE1(v561);
  v595 = &v593[(unint64_t)v594 / 4 + v592 / 0xFFFFFFFFFFFFFFFCLL];
  v596 = 4 * BYTE1(v563);
  v597 = &v595[v594 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v596 / 4];
  v598 = 4 * BYTE1(v577);
  v599 = &v597[(unint64_t)v598 / 4 + v596 / 0xFFFFFFFFFFFFFFFCLL];
  v600 = BYTE2(v563);
  v601 = (unint64_t)&v599[v600 + v598 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v562) = v472 ^ v442 ^ LODWORD(STACK[0x6258]) ^ LODWORD(STACK[0x6110]) ^ LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x66C0]);
  STACK[0xD680] = (unint64_t)v593;
  LODWORD(v593) = *v593;
  STACK[0xD680] = (unint64_t)v595;
  LODWORD(v595) = *v595;
  STACK[0xD680] = (unint64_t)v597;
  LODWORD(v597) = *v597;
  STACK[0xD680] = (unint64_t)v599;
  LODWORD(v599) = *v599;
  STACK[0xD680] = v601;
  v602 = v601 - v600 * 4;
  LODWORD(v601) = *(_DWORD *)v601;
  v603 = (int *)(v602 + 4 * (v562 >> 24));
  STACK[0xD680] = (unint64_t)v603;
  v604 = *v603;
  v605 = (_DWORD *)(v602 + 4 * (v561 >> 24));
  STACK[0xD680] = (unint64_t)v605;
  LODWORD(v605) = *v605;
  v606 = 4 * v562;
  v607 = (_DWORD *)(v602 + v606);
  v608 = 4 * BYTE1(v562);
  v609 = &v607[(unint64_t)v608 / 4 + v606 / 0xFFFFFFFFFFFFFFFCLL];
  v610 = &v609[BYTE3(v577) + v608 / 0xFFFFFFFFFFFFFFFCLL];
  v611 = 4 * (v563 >> 24);
  v612 = &v609[v608 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v611 / 4];
  v613 = BYTE2(v562);
  v614 = (unint64_t)&v612[v611 / 0xFFFFFFFFFFFFFFFCLL + v613];
  v615 = 4 * BYTE2(v577);
  v616 = v614 + v615 - v613 * 4;
  v617 = 4 * BYTE2(v561);
  v618 = (_DWORD *)(v616 - v615 + v617);
  v619 = 4 * v561;
  v620 = &v618[(unint64_t)v619 / 4 + v617 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v590) = v496 ^ LODWORD(STACK[0x6248]) ^ LODWORD(STACK[0x6760]) ^ __ROR4__(v590, 16) ^ __ROR4__((_DWORD)v597, 8);
  STACK[0xD680] = (unint64_t)v607;
  LODWORD(v597) = *v607;
  STACK[0xD680] = (unint64_t)v609;
  LODWORD(v607) = *v609;
  STACK[0xD680] = (unint64_t)v610;
  LODWORD(v610) = *v610;
  STACK[0xD680] = (unint64_t)v612;
  LODWORD(v612) = *v612;
  STACK[0xD680] = v614;
  LODWORD(v614) = *(_DWORD *)v614;
  STACK[0xD680] = v616;
  LODWORD(v616) = *(_DWORD *)v616;
  STACK[0xD680] = (unint64_t)v618;
  LODWORD(v618) = v590 ^ __ROR4__(v604, 24) ^ *v618;
  LODWORD(v610) = v496 ^ LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x6750]) ^ __ROR4__((_DWORD)v593, 16) ^ __ROR4__((_DWORD)v595, 8) ^ __ROR4__((_DWORD)v610, 24) ^ v614;
  LODWORD(v605) = v496 ^ LODWORD(STACK[0x6240]) ^ LODWORD(STACK[0x6730]) ^ __ROR4__((_DWORD)v599, 8) ^ v601 ^ __ROR4__((_DWORD)v605, 24) ^ __ROR4__((_DWORD)v597, 16);
  LODWORD(v490) = v496 ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x6740]) ^ __ROR4__((_DWORD)v607, 8) ^ __ROR4__((_DWORD)v612, 24) ^ v616;
  STACK[0xD680] = (unint64_t)v620;
  LODWORD(v490) = v490 ^ __ROR4__(*v620, 16);
  v621 = 4 * (v610 >> 24);
  v622 = &v620[v619 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v621 / 4];
  v623 = BYTE2(v610);
  v624 = (unint64_t)&v622[v623 + v621 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = (unint64_t)v622;
  LODWORD(v622) = *v622;
  STACK[0xD680] = v624;
  v625 = v624 - v623 * 4;
  LODWORD(v624) = *(_DWORD *)v624;
  STACK[0xD680] = v625;
  LODWORD(v620) = *(_DWORD *)(v625 + 4 * v610);
  v626 = (_DWORD *)(v625 + 4 * BYTE2(v618));
  STACK[0xD680] = (unint64_t)v626;
  LODWORD(v616) = *v626;
  v627 = (_DWORD *)(v625 + 4 * BYTE1(v618));
  STACK[0xD680] = (unint64_t)v627;
  LODWORD(v626) = *v627;
  v628 = 4 * BYTE1(v605);
  v629 = (_DWORD *)(v625 + v628);
  v630 = 4 * BYTE3(v490);
  v631 = &v629[(unint64_t)v630 / 4 + v628 / 0xFFFFFFFFFFFFFFFCLL];
  v632 = 4 * v618;
  v633 = &v631[(unint64_t)v632 / 4 + v630 / 0xFFFFFFFFFFFFFFFCLL];
  v634 = 4 * (v605 >> 24);
  v635 = &v633[(unint64_t)v634 / 4 + v632 / 0xFFFFFFFFFFFFFFFCLL];
  v636 = 4 * (v618 >> 24);
  v637 = &v635[v634 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v636 / 4];
  v638 = 4 * BYTE1(v490);
  v639 = &v637[(unint64_t)v638 / 4 + v636 / 0xFFFFFFFFFFFFFFFCLL];
  v640 = 4 * v490;
  v641 = &v639[(unint64_t)v640 / 4 + v638 / 0xFFFFFFFFFFFFFFFCLL];
  v642 = BYTE2(v605);
  v643 = (unint64_t)&v641[v642 + v640 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD680] = (unint64_t)v629;
  LODWORD(v629) = *v629;
  STACK[0xD680] = (unint64_t)v631;
  LODWORD(v631) = *v631;
  STACK[0xD680] = (unint64_t)v633;
  v644 = *v633;
  STACK[0xD680] = (unint64_t)v635;
  v645 = *v635;
  STACK[0xD680] = (unint64_t)v637;
  LODWORD(v637) = *v637;
  STACK[0xD680] = (unint64_t)v639;
  LODWORD(v639) = *v639;
  STACK[0xD680] = (unint64_t)v641;
  LODWORD(v641) = *v641;
  STACK[0xD680] = v643;
  v646 = v643 - v642 * 4;
  LODWORD(v643) = *(_DWORD *)v643;
  v647 = (int *)(v646 + 4 * BYTE1(v610));
  STACK[0xD680] = (unint64_t)v647;
  v648 = *v647;
  v649 = (int *)(v646 + 4 * BYTE2(v490));
  STACK[0xD680] = (unint64_t)v649;
  v650 = *v649;
  v651 = 4 * v605;
  STACK[0xD680] = v646 + v651;
  v652 = v527 ^ LODWORD(STACK[0x6060]) ^ LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x67A0]) ^ __ROR4__((_DWORD)v620, 16) ^ __ROR4__((_DWORD)v637, 24) ^ __ROR4__((_DWORD)v639, 8) ^ v643;
  LODWORD(v651) = v624 ^ LODWORD(STACK[0x6780]) ^ __ROR4__((_DWORD)v626, 8) ^ __ROR4__((_DWORD)v631, 24) ^ __ROR4__(*(_DWORD *)(v646 + v651), 16);
  v653 = v527 ^ LODWORD(STACK[0x6398]) ^ LODWORD(STACK[0x6390]) ^ LODWORD(STACK[0x6790]) ^ __ROR4__((_DWORD)v622, 24) ^ v616 ^ __ROR4__((_DWORD)v629, 8) ^ __ROR4__((_DWORD)v641, 16);
  LODWORD(v651) = v651 + v527 - 2 * (v651 & v527);
  v654 = v651 & 0x4000000;
  v655 = v651 & 0xFBFFFFFF;
  if ((v654 & STACK[0x6058]) != 0)
    v654 = -v654;
  v656 = (v654 + LODWORD(STACK[0x6058])) ^ v655;
  v657 = v527 ^ LODWORD(STACK[0x6050]) ^ LODWORD(STACK[0x6770]) ^ __ROR4__(v644, 16) ^ __ROR4__(v645, 24) ^ __ROR4__(v648, 8) ^ v650;
  v658 = (int *)(v646 + 4 * v656);
  STACK[0xD680] = (unint64_t)v658;
  v659 = *v658;
  v660 = (_DWORD *)(v646 + 4 * HIBYTE(v653));
  v661 = (_DWORD *)(v646 + 4 * HIBYTE(v656));
  v662 = (_DWORD *)(v646 + 4 * BYTE1(v656));
  STACK[0xD680] = (unint64_t)v660;
  LODWORD(v660) = *v660;
  STACK[0xD680] = (unint64_t)v661;
  LODWORD(v661) = *v661;
  STACK[0xD680] = (unint64_t)v662;
  LODWORD(v662) = *v662;
  v663 = v646 + 4 * BYTE1(v652);
  STACK[0xD680] = v663;
  v664 = *(_DWORD *)v663;
  v665 = (_DWORD *)(v646 + 4 * BYTE2(v653));
  STACK[0xD680] = (unint64_t)v665;
  LODWORD(v663) = *v665;
  v666 = (_DWORD *)(v646 + 4 * BYTE1(v653));
  v667 = (_DWORD *)(v646 + 4 * v657);
  STACK[0xD680] = (unint64_t)v666;
  LODWORD(v666) = *v666;
  STACK[0xD680] = (unint64_t)v667;
  LODWORD(v667) = *v667;
  v668 = (int *)(v646 + 4 * v652);
  STACK[0xD680] = (unint64_t)v668;
  v669 = *v668;
  v670 = (_DWORD *)(v646 + 4 * HIBYTE(v652));
  STACK[0xD680] = (unint64_t)v670;
  LODWORD(v668) = *v670;
  v671 = (int *)(v646 + 4 * BYTE2(v652));
  STACK[0xD680] = (unint64_t)v671;
  v672 = *v671;
  v673 = (_DWORD *)(v646 + 4 * v653);
  v674 = v646 + 4 * BYTE2(v656);
  v675 = (_DWORD *)(v646 + 4 * BYTE1(v657));
  STACK[0xD680] = (unint64_t)v673;
  LODWORD(v673) = *v673;
  STACK[0xD680] = v674;
  LODWORD(v674) = *(_DWORD *)v674;
  STACK[0xD680] = (unint64_t)v675;
  v676 = v646;
  LODWORD(v675) = *v675;
  v677 = (int *)(v646 + 4 * HIBYTE(v657));
  STACK[0xD680] = (unint64_t)v677;
  v678 = *v677;
  v679 = (int *)(v676 + 4 * BYTE2(v657));
  STACK[0xD680] = (unint64_t)v679;
  v680 = *v679;
  STACK[0xD680] = v676;
  v681 = v557 ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x67E0]) ^ __ROR4__((_DWORD)v662, 8) ^ __ROR4__((_DWORD)v668, 24) ^ __ROR4__((_DWORD)v673, 16) ^ v680;
  v682 = v557 ^ LODWORD(STACK[0x6010]) ^ LODWORD(STACK[0x67B0]) ^ __ROR4__((_DWORD)v666, 8) ^ __ROR4__(v669, 16) ^ v674 ^ __ROR4__(v678, 24);
  v683 = v558 ^ LODWORD(STACK[0x6048]) ^ LODWORD(STACK[0x67C0]) ^ __ROR4__((_DWORD)v661, 24) ^ __ROR4__(v664, 8) ^ v663 ^ __ROR4__((_DWORD)v667, 16);
  v684 = v557 ^ LODWORD(STACK[0x6200]) ^ LODWORD(STACK[0x67D0]) ^ __ROR4__(v659, 16) ^ __ROR4__((_DWORD)v660, 24) ^ v672 ^ __ROR4__((_DWORD)v675, 8);
  v685 = (_DWORD *)(STACK[0xD688] + 4 * HIBYTE(v684));
  v686 = (_DWORD *)(STACK[0xD688] + 4 * v683);
  v687 = (_DWORD *)(STACK[0xD688] + 4 * v684);
  v688 = (_DWORD *)(STACK[0xD688] + 4 * HIBYTE(v681));
  v689 = (_DWORD *)(STACK[0xD688] + 4 * v682);
  v690 = (_DWORD *)(STACK[0xD688] + 4 * v681);
  v691 = (int *)(STACK[0xD688] + 4 * BYTE1(v684));
  v692 = (int *)(STACK[0xD688] + 4 * HIBYTE(v683));
  v693 = (int *)(STACK[0xD688] + 4 * BYTE2(v682));
  v694 = (int *)(STACK[0xD688] + 4 * BYTE2(v681));
  v695 = (int *)(STACK[0xD688] + 4 * BYTE2(v683));
  v696 = STACK[0xD688];
  v697 = 4 * BYTE1(v681);
  v698 = (int *)(STACK[0xD688] + 4 * HIBYTE(v682));
  v699 = (int *)(STACK[0xD688] + v697);
  v700 = STACK[0x66C8];
  v701 = v584 ^ LODWORD(STACK[0x66C8]) ^ __ROR4__(v588, 24) ^ __ROR4__(v589, 8) ^ __ROR4__(STACK[0x6570], 16) ^ LODWORD(STACK[0x6568]);
  v702 = STACK[0x6930];
  if ((STACK[0x6930] & 1) != 0)
    v703 = v586;
  else
    v703 = v585;
  if ((v702 & 1) == 0)
  {
    v585 = v701;
    v701 = v587;
    v587 = v586;
  }
  v704 = LODWORD(STACK[0x6578])
       + LODWORD(STACK[0x66B0])
       + LODWORD(STACK[0x66B8])
       - 660804903
       + (LODWORD(STACK[0x66C0]) ^ 0x853DF0CB);
  v705 = *(_DWORD *)(STACK[0xD688] + 4 * BYTE1(v683));
  STACK[0xD688] = (unint64_t)v691;
  v706 = *v691;
  STACK[0xD688] = (unint64_t)v692;
  v707 = *v692;
  STACK[0xD688] = (unint64_t)v693;
  v708 = *v693;
  STACK[0xD688] = (unint64_t)v694;
  v709 = *v694;
  STACK[0xD688] = (unint64_t)v695;
  v710 = *v695;
  v711 = (int *)(v696 + 4 * BYTE2(v684));
  STACK[0xD688] = (unint64_t)v711;
  v712 = *v711;
  v713 = (unint64_t)&v699[v697 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD688] = (unint64_t)v698;
  v714 = *v698;
  STACK[0xD688] = (unint64_t)v699;
  v715 = *v699;
  v716 = 4 * BYTE1(v682);
  STACK[0xD688] = v713 + v716;
  v717 = v704 ^ 0xD631E033;
  v718 = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6680]) ^ 0xD33D5DA ^ LODWORD(STACK[0x66D8]) ^ v704 ^ 0xD631E033 ^ __ROR4__(*v689, 8) ^ __ROR4__(v707, 16) ^ __ROR4__(v712, 24) ^ v715;
  v719 = LODWORD(STACK[0x6580]) ^ 0xD33D5DA ^ LODWORD(STACK[0x66E0]) ^ v704 ^ 0xD631E033 ^ __ROR4__(*v685, 16) ^ __ROR4__(*v686, 8) ^ __ROR4__(v709, 24) ^ *(_DWORD *)(v713 + v716);
  v720 = LODWORD(STACK[0x6628]) ^ 0xD33D5DA ^ LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x66E8]) ^ v704 ^ 0xD631E033 ^ __ROR4__(*v690, 8) ^ v706 ^ __ROR4__(v710, 24) ^ __ROR4__(v714, 16);
  v721 = LODWORD(STACK[0x6580]) ^ LODWORD(STACK[0x66D0]) ^ v704 ^ __ROR4__(*v687, 8) ^ __ROR4__(*v688, 16) ^ v705 ^ __ROR4__(v708, 24);
  if ((v702 & 1) != 0)
    v722 = v718;
  else
    v722 = v720;
  if ((v702 & 1) != 0)
    v718 = v719;
  v723 = v721 ^ 0xDB0235E9;
  if ((v702 & 1) == 0)
  {
    v720 = v723;
    v723 = v719;
  }
  if ((v702 & 2) != 0)
    v724 = v587;
  else
    v724 = v585;
  if ((v702 & 2) != 0)
    v725 = v585;
  else
    v725 = v587;
  if ((v702 & 2) != 0)
    v726 = v701;
  else
    v726 = v703;
  if ((v702 & 2) != 0)
  {
    v727 = v720;
  }
  else
  {
    v703 = v701;
    v727 = v718;
  }
  if ((v702 & 2) != 0)
    v728 = v718;
  else
    v728 = v720;
  if ((v702 & 2) != 0)
    v729 = v722;
  else
    v729 = v723;
  if ((v702 & 2) != 0)
    v730 = v723;
  else
    v730 = v722;
  v731 = v724 + 1544974749 * ((v730 ^ v725) - (v704 ^ 0xAF293DF9));
  v732 = v729 ^ v717 ^ v731;
  v733 = v732 ^ v726;
  v734 = v732 ^ v726 ^ v728;
  v735 = v734 ^ v717 ^ v703;
  v736 = v735 + 1790513611 * ((v704 ^ 0xAF293DF9) + (v734 ^ 0x86E72235)) + 1790513611;
  v737 = v732 ^ ((v725 ^ v717 ^ v727 ^ v735 ^ -(v725 ^ v717 ^ v727 ^ v735) ^ ((v725 ^ v717 ^ v727 ^ v735 ^ 0x86E72235)
                                                                            + 2031672779))
               + 2031672778
               + 2054576353 * ((v736 ^ v727) - (v704 ^ 0xAF293DF9)));
  v738 = (v704 ^ 0xAF293DF9 ^ v730 ^ v733 ^ v737) + 567344941 * ((v727 ^ 0x7918DDCA) - (v736 ^ v717));
  v739 = v731 + 1575154069 * ((v704 ^ 0xAF293DF9) - (v738 ^ v728));
  v740 = STACK[0x6640];
  v741 = LODWORD(STACK[0x6910]) ^ 0x1E5D870E ^ (2
                                              * (((2 * (STACK[0x6910] & v740 ^ 0x8DA00000)) & 0x7AE278F0)
                                               - (STACK[0x6910] & v740 ^ 0x8DA00000))
                                              + 85821198);
  v742 = ((v741 & STACK[0x68E0]) >> LODWORD(STACK[0x63F0]) >> LODWORD(STACK[0x63E8])) | ((v741 & STACK[0x6678]) << STACK[0x68D0]);
  v743 = v700 ^ 0xC57A0334 ^ (2 * (((2 * (v700 & v740 ^ 0x88080075)) | 0x556A03DE) - (v700 & v740 ^ 0x88080075))
                            + 714472482);
  v744 = STACK[0x6698];
  v745 = STACK[0x66A0];
  v746 = LODWORD(STACK[0x6800]) ^ 0x79C7561E ^ (2
                                              * ((STACK[0x6800] & LODWORD(STACK[0x6870]) ^ 0x60026305)
                                               - ((2 * (STACK[0x6800] & LODWORD(STACK[0x6870]) ^ 0x60026305)) & 0x39C39014))
                                              - 1178365932);
  v747 = LODWORD(STACK[0x6900]) ^ 0xF8A22D2E ^ (2
                                              * ((STACK[0x6900] & LODWORD(STACK[0x6640]) ^ 0x8CA)
                                               - ((2 * (STACK[0x6900] & LODWORD(STACK[0x6640]) ^ 0x8CA)) & 0x78A23CBA))
                                              - 123585350);
  v748 = STACK[0x66A8];
  v749 = LODWORD(STACK[0x6040]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x6038]) ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6A90]) ^ LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6688]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x6860]) ^ LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x6648]) ^ LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x6650]) ^ LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6A10]) ^ ((v746 & STACK[0x68C0]) << STACK[0x68D0]) ^ ((v746 & STACK[0x68E0]) >> LODWORD(STACK[0x68F0])) ^ (((v747 & STACK[0x6670]) >> LODWORD(STACK[0x63F8]) >> LODWORD(STACK[0x6400])) + ((v747 & STACK[0x68C0]) << v744 << v745)) ^ v742 ^ (((v743 & STACK[0x6678]) << v744 << v745) | ((v743 & STACK[0x6670]) >> LODWORD(STACK[0x63C0]) >> LODWORD(STACK[0x63C8])));
  v750 = STACK[0x6660];
  v751 = (v739 + 2133725933 * ((v749 ^ LODWORD(STACK[0x6660])) - LODWORD(STACK[0x66A8]))) ^ LODWORD(STACK[0x6498]);
  v752 = STACK[0x65E8];
  v753 = STACK[0x6658];
  v754 = (uint64_t)*(&off_1015B46D0 + (int)(STACK[0x6658] ^ 0x5B55));
  v755 = STACK[0x65D0];
  *(_BYTE *)(v755 + (((v752 & STACK[0x518] ^ 0x14C35) + (v752 & 0xDFBE9288) - 1) ^ 0x18BA9209)) = *(_BYTE *)(v754 + (BYTE2(v751) ^ 0xEELL)) ^ BYTE2(v751) ^ 0x9C;
  v756 = ((v737 ^ v730 ^ 0x7918DDCA ^ v729 ^ v736 ^ v739) + 1373479139 * (v748 - (v749 ^ v750))) ^ LODWORD(STACK[0x64A0]);
  v757 = (uint64_t)*(&off_1015B46D0 + (int)v753 - 23936);
  v758 = *(unsigned __int8 *)(v757 + (v756 ^ 0xA3));
  v759 = v755;
  *(_BYTE *)(v755 + STACK[0x6590]) = ((v758 >> 7) | (2 * v758)) ^ 0x60;
  v760 = v750 ^ v748 ^ LODWORD(STACK[0x64B0]) ^ v749 ^ v738;
  v761 = (uint64_t)*(&off_1015B46D0 + (int)(v753 ^ 0x5DE8));
  *(_BYTE *)(v755 + STACK[0x65A8]) = (*(_BYTE *)(v761 + (BYTE1(v760) ^ 0x9ALL)) - 16) ^ 0x7F;
  v762 = *(unsigned __int8 *)(v757 + (HIBYTE(v751) ^ 0xB0));
  *(_BYTE *)(v755 + (LODWORD(STACK[0x6598]) ^ 0x18BBDE3Cu)) = ((v762 >> 7) | (2 * v762)) ^ 0xF7;
  LODWORD(v755) = LODWORD(STACK[0x64A8]) ^ __ROR4__(__ROR4__(v749 ^ v748, 12) ^ 0x5C0451F5 ^ __ROR4__(v737 ^ v750, 12), 20);
  v763 = (LODWORD(STACK[0x6610]) ^ 0xFC3FCA0D) - ((2 * (LODWORD(STACK[0x6610]) ^ 0xFC3FCA0D)) & 0x70472352) + 941855145;
  *(_BYTE *)(v759
           + (((v763 & 0x1DEC34A4 ^ 0x18040480)
             + (v763 ^ LODWORD(STACK[0x51C]))
             - ((v763 ^ LODWORD(STACK[0x51C])) & 0x1DEC34A4)) ^ 0x46B20B5B)) = *(_BYTE *)(v754
                                                                                        + (((unsigned __int16)(v755 ^ 0x880A) >> 8) ^ 0x52)) ^ ((unsigned __int16)(v755 ^ 0x880A) >> 8) ^ 0xB0;
  *(_BYTE *)(v759 + STACK[0x65A0]) = *(_BYTE *)(v754 + (BYTE1(v751) ^ 0xA8)) ^ BYTE1(v751) ^ 0x3E;
  v764 = (char *)*(&off_1015B46D0 + (int)v753 - 22203) - 4;
  *(_BYTE *)(v759 + STACK[0x65B0]) = v764[v755 ^ 0x72] ^ ((v764[v755 ^ 0x72] ^ 0xC4) >> 4) ^ ((v764[v755 ^ 0x72] ^ 0xC4) >> 3) ^ 0x62;
  v765 = *(unsigned __int8 *)(v757 + (BYTE2(v760) ^ 0xCCLL));
  *(_BYTE *)(v759 + STACK[0x6588]) = ((v765 >> 7) | (2 * v765)) ^ 0x8B;
  *(_BYTE *)(v759 + STACK[0x65C8]) = (*(_BYTE *)(v761 + (v751 ^ 0x4ELL)) - 16) ^ 0x1B;
  v766 = STACK[0xD668];
  v767 = STACK[0xD668];
  *(_BYTE *)(v766 + STACK[0x6608]) = *(_BYTE *)(v754 + (BYTE1(v756) ^ 0xD4)) ^ BYTE1(v756) ^ 0x3E;
  v768 = *(unsigned __int8 *)(v757 + (v760 ^ 0xBBLL));
  *(_BYTE *)(v766 + STACK[0x65C0]) = ((v768 >> 7) | (2 * v768)) ^ 0x59;
  *(_BYTE *)(v766 + STACK[0x65D8]) = (*(_BYTE *)(v761 + (HIBYTE(v756) ^ 0xDDLL)) - 16) ^ 0x3B;
  v769 = (-2023497796
        - (LODWORD(STACK[0x65F0]) ^ 0xF0B84370)
        + ((2 * (LODWORD(STACK[0x65F0]) ^ 0xF0B84370)) | 0xF138434E)
        - 355) ^ 0xDAFEA43C;
  LOBYTE(v762) = v764[BYTE3(v755) ^ 0xE7];
  *(_BYTE *)(v766 + ((((2 * v769) | 0x448BCB1C) - v769 - 575006094) ^ 0x6824FD59)) = v762 ^ ((v762 ^ 0xC4) >> 4) ^ ((v762 ^ 0xC4) >> 3) ^ 0xD4;
  *(_BYTE *)(v766 + STACK[0x6600]) = *(_BYTE *)(v754
                                              + (((v755 ^ 0x3C07880A) >> 16) ^ 0x2FLL)) ^ ((v755 ^ 0x3C07880A) >> 16) ^ 0x11;
  *(_BYTE *)(v766 + STACK[0x65E0]) = (*(_BYTE *)(v761 + (BYTE2(v756) ^ 0x16)) - 16) ^ 0x79;
  *(_BYTE *)(v767 + STACK[0x65F8]) = HIBYTE(v760) ^ 0x8A ^ *(_BYTE *)(v754 + (HIBYTE(v760) ^ 0x76));
  STACK[0xD688] = v713;
  LODWORD(v754) = (((v752 ^ 0xACF23418) + 1393413096) ^ ((v752 ^ 0x42466A13) - 1111910931) ^ ((v752 ^ 0xF60F8037)
                                                                                            + 166756297))
                + 981790826;
  v770 = (v754 ^ 0x9C26E9E0) & (2 * (v754 & 0xDE36EDE2)) ^ v754 & 0xDE36EDE2;
  v771 = ((2 * (v754 ^ 0xAC6B22A0)) ^ 0xE4BB9E84) & (v754 ^ 0xAC6B22A0) ^ (2 * (v754 ^ 0xAC6B22A0)) & 0x725DCF42;
  v772 = (v771 ^ 0x62198E40) & (4 * v770) ^ v770;
  v773 = ((4 * (v771 ^ 0x12444142)) ^ 0xC9773D08) & (v771 ^ 0x12444142) ^ (4 * (v771 ^ 0x12444142)) & 0x725DCF40;
  v774 = (v773 ^ 0x40550D02) & (16 * v772) ^ v772;
  v775 = ((16 * (v773 ^ 0x3208C242)) ^ 0x25DCF420) & (v773 ^ 0x3208C242) ^ (16 * (v773 ^ 0x3208C242)) & 0x725DCF40;
  v776 = v774 ^ 0x725DCF42 ^ (v775 ^ 0x205CC442) & (v774 << 8);
  LODWORD(v754) = v754 ^ (2
                        * ((v776 << 16) & 0x725D0000 ^ v776 ^ ((v776 << 16) ^ 0x4F420000) & (((v775 ^ 0x52010B42) << 8) & 0x725D0000 ^ 0x22100000 ^ (((v775 ^ 0x52010B42) << 8) ^ 0x5DCF0000) & (v775 ^ 0x52010B42))));
  v777 = (((v754 ^ LODWORD(STACK[0x520])) - 1796134517) ^ ((v754 ^ 0xC1557498) - 1742985666) ^ ((v754 ^ 0xB2E07CD1)
                                                                                              - 341234059))
       - 772239418;
  v61 = v777 >= LODWORD(STACK[0x6618]);
  v778 = LODWORD(STACK[0x65B8]) ^ (v777 < 0xB93CB18A);
  v779 = !v61;
  if (v778)
    v780 = STACK[0x65B8];
  else
    v780 = v779;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((29 * v780) ^ v753)))();
}

uint64_t sub_100C88FA4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t (*v15)(void);

  v0 = STACK[0x6490];
  v1 = STACK[0x6630];
  if ((STACK[0x6AC0] & 1) != 0)
    v2 = STACK[0x6630];
  else
    v2 = STACK[0x6440];
  if ((STACK[0x6AC0] & 1) != 0)
    v3 = STACK[0x6448];
  else
    v3 = STACK[0x6450];
  if ((STACK[0x6AC0] & 1) != 0)
  {
    v1 = STACK[0x6450];
    v4 = STACK[0x6440];
  }
  else
  {
    v4 = STACK[0x6448];
  }
  v5 = STACK[0x6468];
  if ((STACK[0x6AC0] & 1) != 0)
    v6 = STACK[0x6468];
  else
    v6 = STACK[0x6458];
  v7 = STACK[0x6460];
  if ((STACK[0x6AC0] & 1) != 0)
    v8 = STACK[0x6460];
  else
    v8 = STACK[0x6638];
  if ((STACK[0x6AC0] & 1) != 0)
  {
    v7 = STACK[0x6458];
    v5 = STACK[0x6638];
  }
  v9 = LODWORD(STACK[0x6560]) == 0;
  if (LODWORD(STACK[0x6560]))
    v10 = v3;
  else
    v10 = v2;
  LODWORD(STACK[0x6440]) = v10;
  if (v9)
    v2 = v3;
  LODWORD(STACK[0x6450]) = v2;
  if (v9)
    v11 = v4;
  else
    v11 = v1;
  LODWORD(STACK[0x6448]) = v11;
  if (v9)
    v12 = v6;
  else
    v12 = v8;
  LODWORD(STACK[0x6458]) = v12;
  if (v9)
    v13 = v7;
  else
    v13 = v5;
  LODWORD(STACK[0x6460]) = v13;
  if (v9)
    v14 = v5;
  else
    v14 = v7;
  LODWORD(STACK[0x6468]) = v14;
  v15 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 984073988) & 0x3AA7FEBF ^ 0x5EA3));
  LODWORD(STACK[0x64B0]) = STACK[0x6470];
  LODWORD(STACK[0x64A8]) = STACK[0x6488];
  LODWORD(STACK[0x6498]) = STACK[0x6478];
  LODWORD(STACK[0x64A0]) = STACK[0x6480];
  return v15();
}

uint64_t sub_100C89154()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((9178 * (v1 == (v0 ^ 0xFAEDC32DCFECBE4DLL))) ^ v0 ^ 0x3308))
                            - 4))();
}

uint64_t sub_100C891A4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 21003)) - (v0 ^ 0x4F91u) + 20197))();
}

uint64_t sub_100C891E4@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  v7 = STACK[0x6AD8];
  STACK[0x6F38] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) + v3;
  LODWORD(STACK[0xECDC]) = v6;
  STACK[0xECE0] = v2;
  v8 = ((uint64_t (*)(_QWORD))STACK[0x5510])(a1 ^ 0xACFDFB5E);
  *v4 = v8 + 0x59A8EEF074315627;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((4289 * (((((v5 ^ 0x5E9B) - 3988) ^ (v8 == 0)) & 1) == 0)) ^ v5))
                            - 12))();
}

uint64_t sub_100C89278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ 0x26B5)) - 12))(14328, a2, a3, 767, a5, a6, a7, 2918208296);
}

uint64_t sub_100C89300@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((11318 * (v1 == (((a1 + 3756) | 0x36u) ^ 0x95DB1A0A775842B9))) ^ a1))
                            - 12))();
}

uint64_t sub_100C89350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a6 + 4217))
                                                                                                - 8))(a1, a2, a3, a4, a5, 581925057, 1301527240);
}

uint64_t sub_100C893E8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v2 + 3834) ^ 0x8CE) * (v1 == v0 + 380)) ^ v2)) - 4))();
}

uint64_t sub_100C89420@<X0>(int a1@<W8>)
{
  unsigned int v1;
  BOOL v2;

  v2 = ((uint64_t (*)(_QWORD))STACK[0x5510])(a1 ^ 0xACFDFB5E) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((19109 * (((v1 - 1) ^ v2) & 1)) ^ v1))
                            - (v1 ^ 0x110A)
                            + 4210))();
}

uint64_t sub_100C8948C(unint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8
                                     * ((((v1 - 1257702783) & 0xAF74597 ^ 0x419C)
                                       * (v2 + (unint64_t)v3 - 0x77F08B69E6123757 > a1)) ^ (v1 + 18630)))
                         - ((11 * ((v1 + 18630) ^ 0x48E3u)) ^ 0x1CEFLL));
  STACK[0x6AC0] = a1 + 0x3A8834BBB3077A40;
  return v4();
}

uint64_t sub_100C8953C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 ^ (4 * ((((v6 ^ 0xBF81D4D1) + 901499746) ^ ((v6 ^ 0xC196C2D9) + 1269620074) ^ ((v6 ^ 0xCE58CA25) + v5 + 1147320491)) != 980796318)))) - 12))(a1, a2, a3, a4, a5, 725302468, 1301527240, 1772489163);
}

uint64_t sub_100C89604@<X0>(uint64_t a1@<X4>, int a2@<W5>, uint64_t a3@<X6>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BOOL4 v22;
  unsigned int v23;

  v17 = *v13;
  v18 = ((*(_DWORD *)(*v10 + (v17 & a3)) ^ (v9 + v6)) & (v5 ^ 0x7FFFE314)) * a4;
  v19 = (v18 ^ HIWORD(v18)) * a4;
  v20 = a1 + v6;
  LODWORD(v17) = ((*(_DWORD *)(*v10 + (v17 & a2)) ^ v20) & 0x7FFFFFFF) * a4;
  v21 = (v17 ^ WORD1(v17)) * a4;
  *(_BYTE *)(v20 - 0x3A8834BBB3077A40) = *(_BYTE *)(v16 + (v19 >> 24)) ^ *(_BYTE *)(v9 + v6 - 0x77F08B69E6123757) ^ *(_BYTE *)(a5 + (v19 >> 24) + 1) ^ *(_BYTE *)(v11 + (v19 >> 24) + 1) ^ *(_BYTE *)(v15 + (v21 >> 24)) ^ *(_BYTE *)(v14 + (v21 >> 24)) ^ v19 ^ *(_BYTE *)((v21 >> 24) + v12 + 2) ^ (-89 * BYTE3(v19)) ^ v21 ^ (119 * BYTE3(v21));
  v22 = v8 < v7;
  v23 = v6 + 1;
  if (v22 == v23 > 0xD95D218F)
    v22 = v23 + v7 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 | (4 * v22))) - 12))();
}

uint64_t sub_100C89740()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((179 * (v1 ^ 0x4AB3)) ^ 0x13DB) * (v0 < (uint64_t)0x889A08A604A38646)) ^ v1))
                            - ((v1 - 1946200875) & 0x740073FF)
                            + 4988))();
}

uint64_t sub_100C897AC()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((v0 != ((v1 + 7489) ^ 0x839C98B72E7E5BD3))
                                * (((v1 - 649312197) & 0x26B3A5C6) - 374)) ^ v1)))();
}

uint64_t sub_100C89800()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((v0 - 21014) ^ (v0 - 21030) ^ 0x6B) * (v1 < (uint64_t)0xE0B88BC30FE49FE5)) ^ v0)))();
}

uint64_t sub_100C8984C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (a1 ^ (16
                                     * ((((11 * (a1 ^ 0xEB) + 61) ^ (v1 == 0xDB9CCCE36E7130D3)) & 1) == 0)))))();
}

uint64_t sub_100C898A0()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((45
                                * ((((v0 + 1258326585) & 0xB4FF5577 ^ 0x1176) & v1) == (((v0 - 11648) | 0x8B2) ^ 0xBF7))) ^ v0)))();
}

uint64_t sub_100C89900()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  LODWORD(STACK[0xBA84]) = v1 | 0x100;
  v2 = STACK[0x6AD8];
  STACK[0xD4C0] = (v0 + 19750) - 22825 + *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((int)v0 + 1302)) - 12))();
}

uint64_t sub_100C89990()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v0 >= (v1 ^ 0x60D4u) * v2 - 0x37AE90BE7D5EBD74)
                                          * ((28 * (v1 ^ 0x6012)) ^ 0x13EE)) ^ v1))
                            - 8))();
}

uint64_t sub_100C899E8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 ^ ((v3 < (uint64_t)0xD29E68D369B9F04FLL) * a3)))
                            - ((((4 * v4) ^ 0x17858u) + 8) ^ v4 ^ 0x4967u)))();
}

uint64_t sub_100C89A34()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((((v0 - 96393893) & 0x5BEE7FF ^ 0x7F73) * (v1 == 0xC8516F4182A19D7FLL)) ^ v0)))();
}

uint64_t sub_100C89A88()
{
  int v0;
  char v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v0 - 3691) | 0x500) ^ 0x74CB) * ((v1 & 0x40) == 0)) ^ v0))
                            - 4))();
}

uint64_t sub_100C89AE4()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(23);
  *(_QWORD *)STACK[0x9750] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 != 0) * (v0 - 1638)) ^ v0)) - 4))();
}

uint64_t sub_100C89B40()
{
  int v0;

  *(_DWORD *)STACK[0x8C78] = -1926392720;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7608)) - 12))();
}

uint64_t sub_100C89F78()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v0 ^ 0x815E6672 ^ (43
                                                                 * ((((v1 & ((v0 | ((unint64_t)(v0 - 857780009) << 32)) ^ v1) | (v1 - (v0 | ((unint64_t)(v0 - 857780009) << 32))) & ~((v0 | ((unint64_t)(v0 - 857780009) << 32)) ^ v1)) >> ((-27 * (((v0 - 17) | 0x80) ^ 0x90)) ^ 0xAB)) & 1) == 0))))
                            - 8))();
}

uint64_t sub_100C89FFC@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((((a1 + 1022080106) & 0xC3143987 ^ 0x59D1) * (v1 == 0x4E3DA0FC815E5025)) ^ a1)))();
}

uint64_t sub_100C8A048@<X0>(int a1@<W8>)
{
  __int16 v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((30 * ((((a1 - 798) ^ ((v1 & 0x100) == 0)) & 1) == 0)) ^ (a1 + 10168)))
                            - 8))();
}

uint64_t sub_100C8A088@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 1806)))();
}

uint64_t sub_100C8A0C0()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((18895 * (v0 == ((v1 + 476619751) & 0xE3977FFC) - 0x6E8A2816177BC9E9)) ^ v1)))();
}

uint64_t sub_100C8A118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  BOOL v6;
  int v7;

  if (STACK[0xB158])
    v6 = STACK[0x9158] == 0;
  else
    v6 = 1;
  v7 = !v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                              + 8
                                                              * (int)((v7
                                                                     * ((v5 + 856107086) & 0xCCF8B7BD ^ (v5 + 479773792) & 0xE3675FF7 ^ a5)) ^ v5)))(a1, a2, 1575445900);
}

uint64_t sub_100C8A198@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;
  BOOL v18;
  int v19;

  v6 = STACK[0xBEA8] + v4;
  v7 = -2045994307 * ((v2 ^ 0xC1380BF0) + LODWORD(STACK[0xA82C]) + 141638199);
  v8 = (((v3 - 17324) | 0x441) ^ v7 ^ 0x269B9E5C) & (2 * (v7 & (200 * (v3 ^ 0x5B97) - 1462021462))) ^ v7 & (200 * (v3 ^ 0x5B97) - 1462021462);
  v9 = ((2 * (v7 ^ 0x760D8639)) ^ 0xBDAC1836) & (v7 ^ 0x760D8639) ^ (2 * (v7 ^ 0x760D8639)) & STACK[0x688];
  v10 = v9 ^ 0x42520409;
  v11 = (v9 ^ 0x84840C11) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0x7B58306C) & v10 ^ (4 * v10) & STACK[0x694];
  v13 = (v12 ^ 0x5A500010) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x84860C13)) ^ 0xED60C1B0) & (v12 ^ 0x84860C13) ^ (16 * (v12 ^ 0x84860C13)) & STACK[0x68C];
  v15 = v13 ^ LODWORD(STACK[0x690]) ^ (v14 ^ 0xCC400000) & (v13 << 8);
  v16 = v7 ^ (2
            * ((v15 << 16) & 0x5ED60000 ^ v15 ^ ((v15 << 16) ^ 0xC1B0000) & (((v14 ^ 0x12960C0B) << 8) & 0xDED60000 ^ 0x8D20000 ^ (((v14 ^ 0x12960C0B) << 8) ^ 0x560C0000) & (v14 ^ 0x12960C0B))));
  LODWORD(STACK[0xCD54]) = (((v16 ^ 0x52E29674) + 1193600248) ^ ((v16 ^ 0x9BD8C36A) - 1910590998) ^ ((v16 ^ 0xC469C70A) - 777013878))
                         + 1276689251;
  STACK[0x7CF0] = (unint64_t)&STACK[0x10000] + a1;
  STACK[0xC768] = v1;
  v17 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  STACK[0x6E58] = v17;
  STACK[0xE228] = v6;
  LODWORD(STACK[0xE234]) = v5;
  STACK[0xD018] = 0x77F08B69E6123757;
  if (v17)
    v18 = v6 == 0;
  else
    v18 = 1;
  v19 = v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2030 * v19) ^ v3)) - 8))();
}

uint64_t sub_100C8A454(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0xB1D0] != 0x112B0CED4B6AE23) * ((v4 + 2122589076) & a4 ^ 0xBC8)) ^ v4))
                            - 12))();
}

uint64_t sub_100C8A4A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;

  v4 = *(_DWORD *)(v1 + v2) & 0x7FFFFFFF;
  v5 = v4 ^ 0x3EC7F40F;
  v6 = v4 ^ 0xC1380BF0;
  v7 = -2045994307 * (v3 + (v4 ^ 0xC1380BF0) - 50684917 + v0 + 16345);
  v8 = (v7 ^ 0xEDFA42D9) & (2 * (v7 & (((v0 + 6587) | 0x158) ^ 0xEDFB55A0))) ^ v7 & (((v0 + 6587) | 0x158) ^ 0xEDFB55A0);
  v9 = ((2 * (v7 ^ 0xEF48C2D9)) ^ 0x5674002) & (v7 ^ 0xEF48C2D9) ^ (2 * (v7 ^ 0xEF48C2D9)) & 0x2B3A000;
  v10 = v9 ^ 0x290A001;
  v11 = (v9 ^ 0x232001) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0xACE8004) & v10 ^ (4 * v10) & 0x2B3A000;
  v13 = v11 ^ 0x2B3A001 ^ (v12 ^ 0x2828001) & (16 * v11);
  v14 = (16 * (v12 ^ 0x312001)) & 0x2B3A000 ^ 0x81A001 ^ ((16 * (v12 ^ 0x312001)) ^ 0x2B3A0010) & (v12 ^ 0x312001);
  v15 = (v13 << 8) & 0x2B3A000 ^ v13 ^ ((v13 << 8) ^ 0xB3A00100) & v14;
  v16 = (v15 << 16) & 0x2B30000 ^ v15 ^ ((v15 << 16) ^ 0x20010000) & ((v14 << 8) & 0x2B30000 ^ 0x130000 ^ ((v14 << 8) ^ 0xB3A00000) & v14);
  v17 = -2045994307 * (v6 + v5) - 185424274;
  v18 = (v17 ^ 0x8DDDE41C) & (2 * (v17 & 0x9119F45E)) ^ v17 & 0x9119F45E;
  v19 = ((2 * (v17 ^ 0xADED44B0)) ^ 0x79E961DC) & (v17 ^ 0xADED44B0) ^ (2 * (v17 ^ 0xADED44B0)) & 0x3CF4B0EE;
  v20 = v19 ^ 0x4149022;
  v21 = (v19 ^ 0x8E020C8) & (4 * v18) ^ v18;
  v22 = ((4 * v20) ^ 0xF3D2C3B8) & v20 ^ (4 * v20) & 0x3CF4B0EC;
  v23 = (v22 ^ 0x30D080A6) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0xC243046)) ^ 0xCF4B0EE0) & (v22 ^ 0xC243046) ^ (16 * (v22 ^ 0xC243046)) & 0x3CF4B0E0;
  v25 = v23 ^ 0x3CF4B0EE ^ (v24 ^ 0xC40000E) & (v23 << 8);
  v26 = v17 ^ (2
             * ((v25 << 16) & 0x3CF40000 ^ v25 ^ ((v25 << 16) ^ 0x30EE0000) & (((v24 ^ 0x30B4B00E) << 8) & 0x3CF40000 ^ 0x8440000 ^ (((v24 ^ 0x30B4B00E) << 8) ^ 0xF4B00000) & (v24 ^ 0x30B4B00E))));
  v27 = v26 & 0xA9FDDA2C ^ 0xA1658A08 ^ (v26 ^ 0x89389582) & (v7 ^ (2 * v16) ^ 0x4423F8F6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((21917 * (((2 * v27) & 0xAD12489E) - v27 == -676010488)) ^ v0))
                            - 12))();
}

uint64_t sub_100C8A820@<X0>(int a1@<W8>)
{
  BOOL v1;
  char v2;

  if (STACK[0xB158])
    v1 = STACK[0x9158] == 0;
  else
    v1 = 1;
  v2 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((v2 ^ (a1 + 123)) & 1)
                                          * ((76 * (a1 ^ 0x5C61)) ^ 0x255F)) ^ a1))
                            - 8))();
}

uint64_t sub_100C8A8A4(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;

  v4 = (LODWORD(STACK[0xE234])
      - 1616859749
      + (*(_DWORD *)(*(_QWORD *)STACK[0x60C0]
                   + (((v3 - 407330505) & 0x184743F4 ^ (a3 - 160)) & *(_DWORD *)STACK[0x60B8])) & 0x7FFFFFFF ^ 0xC1380BF0))
     * (((v3 + 1292) | 0x1638) ^ 0x860CADC5);
  v5 = (v4 ^ 0x3C38B52F) & (2 * (v4 & 0xBEB9314E)) ^ v4 & 0xBEB9314E;
  v6 = ((2 * (v4 ^ 0x1D3AB7A3)) ^ 0x47070DDA) & (v4 ^ 0x1D3AB7A3) ^ (2 * (v4 ^ 0x1D3AB7A3)) & 0xA38386EC;
  v7 = v6 ^ 0xA0808225;
  v8 = (v6 ^ 0x3010448) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0x8E0E1BB4) & v7 ^ (4 * v7) & 0xA38386EC;
  v10 = (v9 ^ 0x820202A9) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x21818449)) ^ 0x38386ED0) & (v9 ^ 0x21818449) ^ (16 * (v9 ^ 0x21818449)) & 0xA38386E0;
  v12 = v10 ^ 0xA38386ED ^ (v11 ^ 0x2000062D) & (v10 << 8);
  v13 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v4 ^ (2
                                                            * ((v12 << 16) & 0x23830000 ^ v12 ^ ((v12 << 16) ^ 0x6ED0000) & (((v11 ^ 0x8383802D) << 8) & 0xA3830000 ^ 0x20010000 ^ (((v11 ^ 0x8383802D) << 8) ^ 0x83860000) & (v11 ^ 0x8383802D)))) ^ 0xFCBC3C94);
  STACK[0xD018] = v13 + 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((81 * (v13 == 0)) ^ v3)) - 12))();
}

uint64_t sub_100C8AAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;

  STACK[0xD160] = STACK[0x7CF0];
  v7 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (v6 + 6916)))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100C8AC10()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((v1 == ((3676 * (v0 ^ 0x1390u)) ^ v2)) * ((v0 ^ 0x1212) + 30276)) ^ v0)))();
}

uint64_t sub_100C8AC50()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v1 ^ 0x1212) + 17533) * (v0 == 0xB2FB6E939239C034)) ^ v1)))();
}

uint64_t sub_100C8AC8C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((31457 * ((v1 & 0x40000) == ((((v0 + 8369) ^ 0x2232) + 8750) ^ 0x2233))) ^ (v0 + 8369)))
                            - ((1204 * ((v0 + 8369) ^ 0x2232u)) ^ 0x1780)))();
}

uint64_t sub_100C8ACF8()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(96);
  *(_QWORD *)STACK[0x9750] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (4 * (v1 == 0))))
                            - ((v0 - 2735) ^ (v0 + 12806) ^ 0x43B9)))();
}

uint64_t sub_100C8AD54@<X0>(unint64_t *a1@<X8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  _BOOL4 v8;

  *(_DWORD *)STACK[0x8C78] = -1926392825;
  STACK[0xE1F0] = STACK[0xBEA8] + v2;
  LODWORD(STACK[0xE1FC]) = v4;
  v5 = STACK[0xA82C];
  STACK[0x75D0] = *a1;
  STACK[0x8000] = STACK[0xB8D0] - 0x28623712C9340C8ELL;
  v6 = STACK[0xC768];
  STACK[0x8308] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v6 + 16;
  STACK[0x6D48] = 0x77F08B69E6123757;
  v7 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & v3)) & (((v1 + 819503525) & 0xCF275EAB)
                                                                                + 2147462005);
  v8 = 2045994307 * ((v7 ^ 0x3EC7F40F) - v5)
     % (2045994307 * ((v7 ^ 0xC1380BF0) + ((v1 + 819503525) ^ 0x30D8F5DF) + (v7 ^ 0x3EC7F40F)) + 117) == 0;
  LOBYTE(STACK[0x7F47]) = v8;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((179 * v8) ^ v1)))();
}

uint64_t sub_100C8AED8()
{
  int v0;
  unsigned int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((3641 * (((((v0 ^ 0x6D0B) - 10507) ^ (v1 % (v2 + 113) == 0)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_100C8AF2C()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;

  v3 = (((v1 + 1286830718) & 0xB34C5C76) - 2045998521) * (v2 + v0 - 1414249918);
  v4 = (v3 ^ 0xAEBFEE3) & (2 * (v3 & 0xAB03FC03)) ^ v3 & 0xAB03FC03;
  v5 = (((v3 ^ 0xAEDE6E7) << ((v1 - 46) ^ 0x52)) ^ 0x43DC35C8) & (v3 ^ 0xAEDE6E7) ^ ((v3 ^ 0xAEDE6E7) << ((v1 - 46) ^ 0x52)) & 0xA1EE1AE4;
  v6 = v5 ^ LODWORD(STACK[0x52C]);
  v7 = (v5 ^ 0x2C1A20) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ LODWORD(STACK[0x538])) & v6 ^ (4 * v6) & 0xA1EE1AE4;
  v9 = v7 ^ 0xA1EE1AE4 ^ (v8 ^ LODWORD(STACK[0x534])) & (16 * v7);
  v10 = (16 * (v8 ^ 0x20461064)) & 0xA1EE1AE0 ^ 0xA10E10A4 ^ ((16 * (v8 ^ 0x20461064)) ^ LODWORD(STACK[0x530])) & (v8 ^ 0x20461064);
  v11 = (v9 << 8) & 0xA1EE1A00 ^ v9 ^ ((v9 << 8) ^ 0xEE1AE400) & v10;
  v12 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v3 ^ (2
                                                            * ((v11 << 16) & 0x21EE0000 ^ v11 ^ ((v11 << 16) ^ 0x1AE40000) & ((v10 << 8) & 0x21EE0000 ^ 0x1E40000 ^ ((v10 << 8) ^ 0x6E1A0000) & v10))) ^ 0xA903C9CB);
  STACK[0x6D48] = v12 + 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v12 == 0) | (2 * (v12 == 0))) ^ v1)) - 8))();
}

uint64_t sub_100C8B0FC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 19005)))();
}

uint64_t sub_100C8B128@<X0>(uint64_t a1@<X8>)
{
  int v1;

  STACK[0xC768] = (((v1 + 394) | 0x584u) ^ 0xFFFFFFFFFFFFE874) + a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 4545)) - 4))();
}

uint64_t sub_100C8B164()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((v0 + 300720659) & 0xEE135F9C ^ 0x139C) * (v1 < 0x6E276BC73EE0F335)) | v0))
                            - (v0 ^ 0x11E0)))();
}

uint64_t sub_100C8B1C4()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v1 - 5012) ^ 0x726) * (v0 == 0x6A4687DA031CD0F5)) ^ v1)))();
}

uint64_t sub_100C8B208@<X0>(int a1@<W8>)
{
  __int16 v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((((v1 & 0x4000) - a1) | (a1 - (v1 & 0x4000u))) >> 31)
                                               * ((a1 - 2046689403) & 0x79FE17FE ^ 0x178A)) ^ (a1 + 14322)))
                            - 8))();
}

uint64_t sub_100C8B284()
{
  int v0;
  int v1;
  BOOL v2;
  int v3;

  LODWORD(STACK[0xAEBC]) = (((v0 + 1222496906) & 0xB721E55B) + 15093) | v1;
  if (STACK[0xBAF8])
    v2 = STACK[0xA170] == 0;
  else
    v2 = 1;
  v3 = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((79 * v3) ^ v0)) - 4))();
}

uint64_t sub_100C8B2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v7 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 12;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)(v6 ^ 0x101B)))(v7, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100C8B418()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((((v1 - 4370) | 0x3848) - 5648) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_100C8B454()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((((v0 - 3011) ^ 0x2F03) & v1) == 0) * (v0 ^ 0x3AD1)) ^ v0))
                            - 4))();
}

uint64_t sub_100C8B4A8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;

  v6 = STACK[0xBEA8] + v4;
  v7 = (v3 ^ 0x860CB5BA) * (v5 + 1398583046 + (v2 ^ 0xC1380BF0));
  v8 = (v7 ^ 0xFD8DE62F) & (2 * (v7 & 0xE10DC74F)) ^ v7 & 0xE10DC74F;
  v9 = ((2 * (v7 ^ 0x7D956021)) ^ 0x39314EDC) & (v7 ^ 0x7D956021) ^ (2 * (v7 ^ 0x7D956021)) & 0x9C98A76E;
  v10 = v9 ^ 0x8488A122;
  v11 = (v9 ^ 0x890864E) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0x72629DB8) & v10 ^ (4 * v10) & 0x9C98A76C;
  v13 = (v12 ^ 0x10008526) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x8C982246)) ^ 0xC98A76E0) & (v12 ^ 0x8C982246) ^ (16 * (v12 ^ 0x8C982246)) & 0x9C98A760;
  v15 = v13 ^ 0x9C98A76E ^ (v14 ^ 0x88882600) & (v13 << 8);
  v16 = v7 ^ (2
            * ((v15 << 16) & 0x1C980000 ^ v15 ^ ((v15 << 16) ^ 0x276E0000) & (((v14 ^ 0x1410810E) << 8) & 0x9C980000 ^ 0x4180000 ^ (((v14 ^ 0x1410810E) << 8) ^ 0x18A70000) & (v14 ^ 0x1410810E))));
  v17 = ((v16 ^ 0x775F3245) + 1665099729) ^ ((v16 ^ 0x29171281) + 1031227157) ^ ((v16 ^ 0x8E64A957) - 1710949181);
  STACK[0xC768] = v1;
  v18 = (v17 - 1508903628) & 0x95A32EC5 ^ 0xF4C91991 ^ ((v17 - 1508903628) ^ 0x412A2ED4) & (2
                                                                                          * ((v17 - 1508903628) & 0x95A32EC5));
  LODWORD(STACK[0xA298]) = v17 - 1508903628;
  STACK[0xE210] = v6;
  STACK[0xD030] = (unint64_t)&STACK[0x10000] + a1;
  STACK[0xCF10] = 0x77F08B69E6123757;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((28511
                                * ((((v17 - 1508903628) ^ (2
                                                         * (((4 * v18) ^ 4) & (((2 * ((v17 - 1508903628) ^ 0x616A3754)) ^ 0x69923322) & ((v17 - 1508903628) ^ 0x616A3754) | 1) ^ v18))) & 0xF) == 7)) ^ v3)))();
}

uint64_t sub_100C8B76C()
{
  int v0;
  int v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(_QWORD))STACK[0x5510])((v0 + 1001595897));
  STACK[0xCF10] = v2 + 0x77F08B69E6123757;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v2 != 0) * (602 * (v1 ^ 0x2F00) - 4206)) | v1)))();
}

uint64_t sub_100C8B7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;

  v7 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v6 - 3829)) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((v6 - 3829) ^ 0x1DE5)))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100C8B898()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((30666 * (v0 == (v1 ^ 0x2AE4u) - 14314 + v2)) ^ v1)))();
}

uint64_t sub_100C8B8CC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((1443 * ((*(_BYTE *)STACK[0x45C8] ^ (a1 + 79)) & 1)) ^ a1)))();
}

uint64_t sub_100C8B948@<X0>(int a1@<W8>)
{
  *(_BYTE *)STACK[0x45C8] = 1;
  *(_DWORD *)(STACK[0x45C0] + 24) |= ((a1 - 14444) | 0x108B) ^ 0x118E;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100C8B988()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v0 - 143) | 0x684) ^ 0x2E1C) + v0 + 475) * (v1 & 1 | (v1 == 0))) ^ v0))
                            - 12))();
}

uint64_t sub_100C8B9EC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((227 * ((((v1 - 475) ^ 0x118E) & v0) == 0)) ^ v1)) - 4))();
}

uint64_t sub_100C8BA28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v1 = (v0 + 1810431557) & STACK[0x69C];
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5510])(23);
  *(_QWORD *)STACK[0x9750] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((15161 * (v2 != 0)) ^ v0))
                            - ((v1 - 3448) ^ (7 * (v0 ^ 0x13FFu)))))();
}

uint64_t sub_100C8BAB8()
{
  int v0;

  *(_DWORD *)STACK[0x8C78] = -1926392720;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 14996)) - 12))();
}

uint64_t sub_100C8BEF8@<X0>(int a1@<W8>)
{
  unint64_t *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v15;

  v8 = *v1;
  v9 = STACK[0x6AD8];
  STACK[0xC6D8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5);
  STACK[0x9988] = v3;
  STACK[0xE680] = v7;
  STACK[0xE688] = v4;
  LODWORD(STACK[0xE694]) = v6;
  STACK[0x8698] = v8;
  v10 = STACK[0xC768];
  STACK[0x83A0] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = ((a1 - 9903) | 0x1030u) + v10 - 4198;
  STACK[0xB0F8] = 0x77F08B69E6123757;
  v11 = ((2 * (v6 & 0x95A32EC5 ^ LODWORD(STACK[0x634]))) ^ 0x1F1FEEB2) & (v6 ^ 0x9A2CD99C) ^ v6 & 0x95A32EC5 ^ LODWORD(STACK[0x634]);
  v12 = v6 ^ (2 * (((2 * (v6 ^ 0x9A2CD99C)) ^ 0x1F1FEEB0) & (v6 ^ 0x9A2CD99C) & ((4 * v11) ^ 4) ^ v11));
  v13 = ((2 * v12) & 8) + (v12 & 0xF ^ 0xFFFFFFF5) + 980424972;
  v15 = (v13 & 0x400023 ^ 0x2403) + (v13 & STACK[0x638] ^ 0x10802DD) == 961034202 && v2 == 1689419017;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((4 * v15) | (v15 << 8)) ^ a1)) - 4))();
}

uint64_t sub_100C8C0B0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;

  v6 = a1 - 67;
  v7 = ((2 * ((((a1 - 1834043127) & 0x6D513077) - 3833 + v2) ^ v5)) ^ 0xD53C5452) & ((((a1 - 1834043127) & 0x6D513077)
                                                                                    - 3833
                                                                                    + v2) ^ v5) ^ (2
                                                                                                 * ((((a1 - 1834043127) & 0x6D513077) - 3833 + v2) ^ v5)) & 0x6A9E2A28;
  v8 = v7 ^ 0x2A822A29;
  v9 = (v7 ^ 0x401E0001) & (4 * ((v5 ^ 0xD53B0CE4) & (2 * v1) ^ v1)) ^ (v5 ^ 0xD53B0CE4) & (2 * v1) ^ v1;
  v10 = ((4 * v8) ^ 0xAA78A8A4) & v8 ^ (4 * v8) & 0x6A9E2A28;
  v11 = (v10 ^ 0x2A182829) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ (v3 + 254))) ^ 0xA9E2A290) & (v10 ^ (v3 + 254)) ^ (16 * (v10 ^ (v3 + 254))) & 0x6A9E2A20;
  v13 = v11 ^ 0x6A9E2A29 ^ (v12 ^ v4) & (v11 << 8);
  v14 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v5 ^ (2
                                                            * ((v13 << 16) & 0x6A9E0000 ^ v13 ^ ((v13 << 16) ^ 0x2A290000) & (((v12 ^ 0x421C0829) << 8) & 0x6A9E0000 ^ 0x60940000 ^ (((v12 ^ 0x421C0829) << 8) ^ 0x1E2A0000) & (v12 ^ 0x421C0829)))) ^ 0x148F7A97);
  STACK[0xB0F8] = v14 + 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((71 * (v14 == 0)) ^ v6)) - 4))();
}

uint64_t sub_100C8C254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;

  v7 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((8089 * ((v6 ^ 0xA381D67F) < 0xEF6D5EEA)) ^ (v6 + 640))))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100C8C32C()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((17479
                                * (v0 == ((v1 + 735420451) ^ 0xB643783A41D1F6ADLL)
                                       + ((v1 + 735420451) & 0xD42A4DCE))) ^ v1)))();
}

uint64_t sub_100C8C384()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v0 - 12260) & v1) == 0) * ((v0 - 4525) ^ 0x6EE3)) ^ v0))
                            - 4))();
}

uint64_t sub_100C8C3D8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;

  STACK[0xE218] = STACK[0xBEA8] + v4;
  v6 = -2045994307 * (v5 + 2085571683 + (v2 ^ 0xC1380BF0));
  v7 = (v6 ^ 0x96E127A6) & (2 * (v6 & 0xA4E9A7A6)) ^ v6 & 0xA4E9A7A6;
  v8 = ((2 * (v6 ^ 0xD7E17890 ^ (v3 - 3537))) ^ 0xE6119E80) & (v6 ^ 0xD7E17890 ^ (v3 - 3537)) ^ (2
                                                                                               * (v6 ^ 0xD7E17890 ^ (v3 - 3537))) & 0x7308CF40;
  v9 = v8 ^ 0x11084140;
  v10 = (v8 ^ 0x2200CE40) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0xCC233D00) & v9 ^ (4 * v9) & 0x7308CF40;
  v12 = (v11 ^ 0x40000D00) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x3308C240)) ^ 0x308CF400) & (v11 ^ 0x3308C240) ^ (16 * (v11 ^ 0x3308C240)) & 0x7308CF40;
  v14 = v12 ^ 0x7308CF40 ^ (v13 ^ 0x3008C440) & (v12 << 8);
  v15 = v6 ^ (2
            * ((v14 << 16) & 0x73080000 ^ v14 ^ ((v14 << 16) ^ 0x4F400000) & (((v13 ^ 0x43000B40) << 8) & 0x73080000 ^ 0x73000000 ^ (((v13 ^ 0x43000B40) << 8) ^ 0x8CF0000) & (v13 ^ 0x43000B40))));
  v16 = (((v15 ^ 0xBBCF7A82) - 774528109) ^ ((v15 ^ 0x550ED029) + 1058277690) ^ ((v15 ^ 0x2A39938D) + 1076054686))
      - 1149636348;
  STACK[0xC768] = v1;
  LOBYTE(v13) = v16 ^ (2
                     * ((((2 * (v16 ^ 0x5E)) ^ 0x36) & (v16 ^ 0x5E) ^ 0x91) & (4
                                                                             * ((2 * (v16 & 0xC5)) & (v16 ^ 0xD4) ^ v16 & 0xC5)) ^ (2 * (v16 & 0xC5)) & (v16 ^ 0xD4) ^ v16 & 0xC5)) ^ 0x36;
  v17 = ((v13 & 6 ^ 0xF89C9A26) - (v13 & 6) + (v13 & 0xF ^ 9)) ^ 0xFABEBA64;
  LODWORD(STACK[0xBA6C]) = v16;
  STACK[0x6D90] = (unint64_t)&STACK[0x10000] + a1;
  STACK[0x8058] = 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((223 * (((2 * v17) | 0x515BA2D6) - v17 == 1396556430)) ^ v3))
                            - 8))();
}

uint64_t sub_100C8C6CC()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;

  v5 = v2 & (v1 ^ 0xC50A2EF1) ^ v0;
  v6 = (v3 + 2075068289 + ((v4 + 719948032) & 0xD51659FD)) & (2 * (v1 ^ 0xEE0C37F9)) ^ ((2 * (v1 ^ 0xEE0C37F9)) ^ 0xF75E3278) & (v1 ^ 0xEE0C37F9);
  v7 = v6 ^ 0x8A10904;
  v8 = (v6 ^ 0x732C1038) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0xEEBC64F0) & v7 ^ (4 * v7) & 0x7BAF193C;
  v10 = (v9 ^ 0x6AAC0030) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x1103190C)) ^ 0xBAF193C0) & (v9 ^ 0x1103190C) ^ (16 * (v9 ^ 0x1103190C)) & 0x7BAF1930;
  v12 = v10 ^ 0x7BAF193C ^ (v11 ^ 0x3AA11100) & (v10 << 8);
  v13 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v1 ^ (2
                                                            * ((v12 << 16) & 0x7BAF0000 ^ v12 ^ ((v12 << 16) ^ 0x193C0000) & (((v11 ^ 0x410E083C) << 8) & 0x7BAF0000 ^ 0x50A60000 ^ (((v11 ^ 0x410E083C) << 8) ^ 0x2F190000) & (v11 ^ 0x410E083C)))) ^ 0x50A51CBD);
  STACK[0x8058] = v13 + 0x77F08B69E6123757;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((20948 * (v13 != 0)) ^ v4)) - 8))();
}

uint64_t sub_100C8C87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;

  v7 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (v6 + 6943)))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100C8C94C()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((((v1 + 5607) ^ 0x28FD) + 19560) * (v0 == 0x3B375930C12C4869)) ^ v1)))();
}

uint64_t sub_100C8C990()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v0 - 10601) | 0x1064) ^ 0x767D) * ((v1 & 0x20000) == 0)) ^ v0))
                            - (((v0 - 8699) | 0x1004u) ^ 0x1780)))();
}

uint64_t sub_100C8C9FC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0xAC2C]) = v1 | 0x20000;
  v3 = STACK[0xBAF8];
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((a1 + 1293779230) ^ 0x4D1D810A)) - 4;
  LODWORD(STACK[0xEE20]) = (a1 + 1293779230) ^ 0xE15;
  LODWORD(STACK[0xEE50]) = a1 + 1293779230;
  STACK[0xEE30] = v3;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0xEE60]) = (a1 + 1293779230) | 0x63;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v2 - 240) & 0x49D430) - (v2 - 240) + 2142645192) ^ 0x4224F491)
                          + a1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v5);
}

uint64_t sub_100C8CAF4()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((13078 * (((v0 == 0) ^ (STACK[0x6508] - 1)) & 1)) ^ (STACK[0x6508] - 609)))
                            - 12))();
}

uint64_t sub_100C8CB2C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((STACK[0x6508] - 4146) | 0x1032) ^ 0x6EE)
                                               * ((v0 - 833853339) > 0xFFFFFFF5)) ^ (STACK[0x6508] + 15462)))
                            - 8))();
}

uint64_t sub_100C8CB8C()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC958] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 18178)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 14418)) - 8))();
}

uint64_t sub_100C8CDF4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 2173)) - 12))();
}

uint64_t sub_100C8CE20@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((26 * (a1 ^ 0x139B) + 21470) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_100C8CE54@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((((a1 ^ 0xB72) + 59162) & v1) == 0) * (a1 ^ 0x3D6B)) ^ a1 ^ 0xB72))
                            - 8))();
}

uint64_t sub_100C8CEBC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;

  v2 = a1 ^ 0x58EA;
  LODWORD(STACK[0x9304]) = v1 | 0x10000;
  if (STACK[0xBAF8])
    v3 = STACK[0xA170] == 0;
  else
    v3 = 1;
  v4 = !v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((76 * v4) ^ v2))
                            - ((v2 - 7553) ^ (3 * (v2 ^ 0x41A3u)) ^ 0x278ELL)))();
}

uint64_t sub_100C8CF34()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((30194 * (v1 - 833853688 + 602 * (v0 ^ 0x228Cu) - 3865 > 0xFFFFFFF5)) ^ v0))
                            - ((v0 - 5785) ^ 0xBF6)))();
}

uint64_t sub_100C8CF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  _QWORD *v7;
  unint64_t v8;

  v7 = (_QWORD *)STACK[0x7D18];
  *v7 = 0;
  v7[1] = 0;
  v8 = STACK[0x6AD8];
  STACK[0xD4C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 8;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((v6 ^ 0xEE9) + v6)) - 12))(a1, v6 ^ 0x52EFu, a3, a4, a5, a6, 3258141519, 4202);
}

uint64_t sub_100C8D000@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((v1 == (a1 ^ 0xEB1u) + 0x6E276BC73EE0D610) * ((a1 ^ 0x1212) + 15065)) ^ a1)))();
}

uint64_t sub_100C8D04C()
{
  int v0;
  int v1;
  char v2;
  _BOOL4 v4;

  v4 = (v2 & 0x20) == 0 && *(_BYTE *)(STACK[0x9770] - 0x55058F428EADA764) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v4 * (((v1 + v0) | 0x1584) ^ 0x24B5)) ^ v1)) - 12))();
}

uint64_t sub_100C8D0BC()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(48);
  *(_QWORD *)STACK[0x9750] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((16644 * (((v1 == 0) ^ (v0 - 56)) & 1)) ^ v0))
                            - ((v0 + 11460) ^ 0x49E5)))();
}

uint64_t sub_100C8D148@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;

  *(_DWORD *)STACK[0x8C78] = -1926392745;
  STACK[0xE1E0] = STACK[0xBEA8] + v1;
  LODWORD(STACK[0xE1E8]) = v4;
  v5 = STACK[0xA82C];
  STACK[0xB970] = *a1;
  v6 = STACK[0xC768];
  STACK[0xCD60] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v6 + 16;
  STACK[0x6DB0] = 0x77F08B69E6123757;
  v7 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & v2)) & 0x7FFFFFFF;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((5395
                                          * (2045994307 * ((v7 ^ 0x3EC7F40Fu) - v5)
                                           % (2045994307
                                            * ((v7 ^ (301 * (v3 ^ 0x49E7) - 1053319077 + 10663 * (v3 ^ 0x49EB) + 2001))
                                             + (v7 ^ 0x3EC7F40Fu))
                                            + 2045994372) == 0)) ^ v3))
                            - 4))();
}

uint64_t sub_100C8D29C()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;

  v3 = ((((v1 - 21306) | 0x1062) - 3866) ^ 0x860C9BE1) * (v2 + v0 - 464544705);
  v4 = (v3 ^ 0x844253B1) & (2 * (v3 & 0xC6545A3A)) ^ v3 & 0xC6545A3A;
  v5 = ((2 * (v3 ^ 0x442E781)) ^ LODWORD(STACK[0x2DC])) & (v3 ^ 0x442E781) ^ (2 * (v3 ^ 0x442E781)) & 0xC216BDBA;
  v6 = v5 ^ 0x42128489;
  v7 = (v5 ^ 0x40003D31) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x85AF6EC) & v6 ^ (4 * v6) & 0xC216BDB8;
  v9 = (v8 ^ 0x12B4B3) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0xC2040913)) ^ 0x216BDBB0) & (v8 ^ 0xC2040913) ^ (16 * (v8 ^ 0xC2040913)) & 0xC216BDB0;
  v11 = v9 ^ 0xC216BDBB ^ (v10 ^ 0x2990B) & (v9 << 8);
  v12 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v3 ^ (2
                                                            * ((v11 << 16) & 0x42160000 ^ v11 ^ ((v11 << 16) ^ 0x3DBB0000) & (((v10 ^ 0xC214240B) << 8) & 0xC2160000 ^ 0x40020000 ^ (((v10 ^ 0xC214240B) << 8) ^ 0x16BD0000) & (v10 ^ 0xC214240B)))) ^ 0x425D214C);
  STACK[0x6DB0] = v12 + 0x77F08B69E6123757;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((239 * (v12 == 0)) ^ v1)))();
}

uint64_t sub_100C8D478()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 14707)) - 4))();
}

uint64_t sub_100C8D4A8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;

  STACK[0xC768] = (v1 ^ 0xFFFFFFFFFFFFEF86) + a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v1 + 3247)) - 12))();
}

uint64_t sub_100C8D4E0()
{
  int v0;
  unint64_t v1;

  STACK[0xD6A0] = STACK[0x7400] + 78;
  v1 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 6878)))(83);
}

uint64_t sub_100C8D5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ (71 * (v6 == v5))))
                                                                                       - ((v7 ^ 0x51E3u)
                                                                                        - 3834)
                                                                                       + 376))(a1, a2, a3, a4, a5, 725302468);
}

uint64_t sub_100C8D648()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 11471)) - 12))();
}

uint64_t sub_100C8D660@<X0>(uint64_t a1@<X4>, unsigned int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t v18;

  v14 = v4 - 1;
  v15 = (((v5 + v14) ^ *(_DWORD *)(*v9 + (*v12 & 0x4D93BAC8))) & 0x7FFFFFFF) * (((v3 - 4102) | 0x10C) ^ (v8 - 276));
  v16 = (v15 ^ HIWORD(v15)) * v8;
  v17 = ((*(_DWORD *)(*v9 + (*v12 & a2)) ^ (a1 + v14)) & 0x7FFFFFFF) * v8;
  v18 = (v17 ^ HIWORD(v17)) * v8;
  *(_BYTE *)(a1 + v14 - 0x3A8834BBB3077A40) = *(_BYTE *)(v7 + (v16 >> 24)) ^ *(_BYTE *)(v5 + v14 - 0x77F08B69E6123757) ^ *(_BYTE *)(a3 + (v16 >> 24) + 1) ^ *(_BYTE *)(v10 + (v16 >> 24) + 1) ^ *(_BYTE *)(v6 + (v18 >> 24)) ^ *(_BYTE *)(v13 + (v18 >> 24)) ^ *(_BYTE *)((v18 >> 24) + v11 + 2) ^ v16 ^ (-89 * BYTE3(v16)) ^ v18 ^ (119 * BYTE3(v18));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((8622 * (v14 != 0)) ^ (v3 + 3189)))
                            - 12))();
}

uint64_t sub_100C8D78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  int v7;

  *(_QWORD *)(v6 + 400) = a5;
  *(_DWORD *)(v6 + 408) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v5) - ((v5 + 211457027) & 0xF3657AF6) + 4210))();
}

uint64_t sub_100C8D7CC@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;

  LODWORD(STACK[0xC834]) = (3259 * (a1 ^ 0x1071) - 22557) | v1;
  v2 = STACK[0x6AD8];
  STACK[0xD4C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 ^ 0x1BBELL)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ 0x17B)) - 12))();
}

uint64_t sub_100C8D874()
{
  int v0;
  int v1;

  LODWORD(STACK[0xE204]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (v1 - 1070) + 4206))();
}

uint64_t sub_100C8D8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v6 = STACK[0x6508];
  v7 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2887)) - 12;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((int)v6 + 1178)))(v7, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100C8D9C8()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((7759 * (((v0 - 15292) ^ 0xCE4C6DA8) + v1 > 0xFFFFFFF5)) ^ v0))
                            - (((v0 - 16761) | 0x1066) ^ 0x107ELL)))();
}

uint64_t sub_100C8DA2C()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC958] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x1147)) - 8))();
}

uint64_t sub_100C8DCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;
  unint64_t v8;

  v7 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 12;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (v6 ^ 0x1008)))(v7, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100C8DDB0()
{
  int v0;
  int v1;
  _BOOL4 v2;

  v2 = v1 - 833853688 + ((v0 + 1865525998) & 0x90CE55F6) - 1171 < ((v0 - 1629514773) & 0x6120777Fu) - 4224;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 | (8 * v2)) ^ (v0 + 3515))) - 12))();
}

uint64_t sub_100C8DE34()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC958] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x117A)) - 8))();
}

uint64_t sub_100C8E09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;
  unint64_t v8;

  v7 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (v6 ^ 0x101D)))(v7, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100C8E1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;

  v7 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (v6 + 6929)))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100C8E2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unint64_t v7;

  v7 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (v6 + 6920)))(83, a2, 4169, a4, a5, a6, 14990);
}

uint64_t sub_100C8E3B0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x6410]) + 2988)) - 8))();
}

uint64_t sub_100C8E3E0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v1 = (LODWORD(STACK[0x6410]) + 225959793) & 0xF2885ADE;
  v2 = LODWORD(STACK[0x6410]) + 16208;
  v3 = (uint64_t (*)(uint64_t))STACK[0x5A40];
  ((void (*)(unint64_t))STACK[0x5A40])(STACK[0xD680]);
  v4 = v3(v0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - (v1 ^ 0x4ACA)))(v4);
}

uint64_t sub_100C8E458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  STACK[0xD1A8] = a2 - 16;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                         + 8
                                                                                         * ((((v3 ^ 0xD233DBFD)
                                                                                            + 1877930486
                                                                                            + (((v2 + 454955542) & 0xE4E1EB6F ^ 0xA467FFB6) & (2 * v3)) == 1109577203)
                                                                                           * ((v2 - 1459) ^ 0x4203)) ^ v2))
                                                                             - 12))(a1, LODWORD(STACK[0x370]), 2948496375, 8204, 9920);
}

uint64_t sub_100C8E4FC()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  _BOOL4 v6;
  BOOL v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;

  v2 = *(_DWORD *)(STACK[0xB8D0] - 0x28623712C9340EEALL);
  v3 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x5DE7658C)) & 0x7FFFFFFF ^ 0xC1380BF0;
  v4 = (((v2 ^ 0xBA05B45C) + 1174031268) ^ ((v2 ^ 0x85E4DEE7) + 2048598297) ^ ((v2 ^ 0xB2CCFEDC) + 1295188260))
     + 1815733421;
  v5 = -2045994307 * (v1 + 620033541 + v3) - 1710995630;
  v6 = v4 < 0xDF0C5046;
  v7 = v4 > v5;
  v8 = (((v2 ^ 0x3C66A07C) - 1013358716) ^ ((v2 ^ 0xAD7C5BA) - 181913018) ^ (((v0 - 17506) | 0x4A00)
                                                                           - 613
                                                                           + (v2 ^ 0xBB9CF1A1)
                                                                           + 1147323226
                                                                           + 697))
     + 2045994307 * (LODWORD(STACK[0x6438]) + 1412746699 + v3);
  v9 = v6 ^ (v5 < 0xDF0C5046);
  v10 = v7;
  v11 = v8 + 631213886;
  if (v9)
    v12 = v6;
  else
    v12 = v10;
  if (v11 == 1211271349)
    v13 = v12;
  else
    v13 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((9637 * (v13 ^ 1)) ^ v0)) - 4))();
}

uint64_t sub_100C8E6F8()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((119
                                          * ((v1 ^ 0x59D9FFFEC7526F1BLL)
                                           - 0x59D9FFFE16B2FD2ALL
                                           + (((unint64_t)(v1 ^ 0x8D2D9467) << (((v0 - 109) | 8u) - 75)) & 0x94FFF6F8) == 869072466)) ^ v0))
                            - 12))();
}

uint64_t sub_100C8E784()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 10533)) - ((v0 - 10533) ^ 0x2188)))();
}

uint64_t sub_100C8E7E8@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  v8 = *(unsigned __int8 *)(v5 + v6) - *(unsigned __int8 *)(a5 + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((444
                                          * ((((((v7 - 17199) | a3) + a4) ^ ((a1 & (2 * v8)) + (v8 ^ a2) == a2)) & 1) == 0)) ^ v7))
                            - 4))();
}

uint64_t sub_100C8E84C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v5 = v2 < v1;
  if (v5 == (unint64_t)(v3 + 1) > 0xFFFFFFFFCC3301ADLL)
    v5 = v3 + 869053959 + v0 < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((!v5 * (((v4 + 7969) | 0x402) ^ 0x2030)) ^ v4)) - 4))();
}

uint64_t sub_100C8E8C8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((STACK[0x6DE0] != 0x72A84CEE1D1701F9) * (v0 ^ 0x4855)) ^ v0))
                            - ((v0 - 14294) ^ 0x1072)))();
}

uint64_t sub_100C8E91C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 14294)) - 4))(v1);
}

uint64_t sub_100C8E950@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0xE204]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((a1 + 1070) ^ (14244 * (v1 == -1926392729))))
                            - ((a1 + 280) ^ 0x1186)))();
}

uint64_t sub_100C8E9A0()
{
  int v0;
  BOOL v1;
  char v2;

  if (STACK[0xBAF8])
    v1 = STACK[0xA170] == 0;
  else
    v1 = 1;
  v2 = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (v0 ^ (16 * (((v0 + 22) ^ 0xB5 ^ v2) & 1)))))();
}

uint64_t sub_100C8E9EC()
{
  int v0;
  int v1;
  int v2;

  v2 = v1 - 833853688 + ((v0 - 3808) | 0x28u) - 1167 >= (v0 ^ 0xFFFFEB52);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v2 << 7) | (v2 << 9)) ^ v0)) - 8))();
}

uint64_t sub_100C8EA5C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC958] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 3742)) - 8))();
}

uint64_t sub_100C8ECEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v7 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v8 = STACK[0x6AD8];
  STACK[0xD3C0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v6);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)(v6 ^ 0x1001)))(v7, a2, a3, a4, a5, a6, 16794642, 806657363);
}

uint64_t sub_100C8EE18()
{
  int v0;

  v0 = STACK[0x6508] + 756;
  *(_DWORD *)(STACK[0xB8D0] - 0x28623712C9340CEALL) = -1926392730;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100C8EEA8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((18399
                                          * ((((v0 + 520793599) & 0xE0F557F5) - 0x8E7EF8B80E34995) * STACK[0xAF80] == 0xD45929E7EF813F79)) ^ v0))
                            - 12))();
}

uint64_t sub_100C8EF1C()
{
  char v0;
  int v1;

  *(_BYTE *)(STACK[0x9770] - 0x55058F428EADA763) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (v1 + 1525) + 6008))();
}

uint64_t sub_100C8EF58()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100C8EF98()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] + 4217;
  v1 = STACK[0xB8D0];
  *(_DWORD *)(v1 - 0x28623712C9340CEALL) = -1926392730;
  *(_BYTE *)(v1 - 0x28623712C9340CE6) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100C8F02C()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100C8F050()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xA438] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1831)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 7508)) - 12))();
}

uint64_t sub_100C8F2D4()
{
  int v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0x4B08] ^ 0x18B1;
  v2 = STACK[0x6508] + 8660;
  LODWORD(STACK[0x8D54]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((2 * (v0 == (v1 ^ 0x8D2D9CA0))) | (16
                                                                                           * (v0 == (v1 ^ 0x8D2D9CA0)))) ^ v2))
                            - 4))();
}

uint64_t sub_100C8F32C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x1979)) - 12))();
}

uint64_t sub_100C8F3AC()
{
  unint64_t v0;
  int v1;
  char v2;
  int v3;

  v0 = 1772489163
     * ((1772489163
       * ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x4D93BAC8)) ^ STACK[0x6DB0]) & 0x7FFFFFFF)) ^ ((1772489163 * ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x4D93BAC8)) ^ STACK[0x6DB0]) & 0x7FFFFFFF)) >> 16));
  v1 = STACK[0x6508] - 2624;
  v2 = *(_BYTE *)(STACK[0x4A50] + (v0 >> 24)) ^ *(_BYTE *)(STACK[0x6DB0] - 0x77F08B69E6123757) ^ *(_BYTE *)(STACK[0x4A60] + (v0 >> 24) + ((STACK[0x6508] - 4005) ^ 0xD0)) ^ *(_BYTE *)(STACK[0x4A58] + (v0 >> 24) + ((STACK[0x6508] - 4005) ^ 0xD0)) ^ v0 ^ (-97 * BYTE3(v0));
  if ((((v2 ^ 0x98) - 55) ^ ((v2 ^ 0x90) - 63) ^ ((v2 ^ 8) + 89)) == 0x52)
    v3 = STACK[0x8D54];
  else
    v3 = 1926417715;
  LODWORD(STACK[0xE1EC]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21112 * (v3 == -1926392729)) ^ v1)) - 4))();
}

uint64_t sub_100C8F4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ 0x6828 ^ ((v7 + 16339) | 0xE0A))) - 12))(14328, a2, a3, 767, a5, a6, a7, 2918208296);
}

uint64_t sub_100C8F564()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x32AC]))
                            - (STACK[0x32B0] & 0x19B35ADE ^ 0x5898)))();
}

uint64_t sub_100C8F5C0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3450])) - 4))();
}

uint64_t sub_100C8F5E0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x6DB0] != 0x77F08B69E6123757)
                                               * ((829 * (STACK[0x6508] ^ 0x107F)) ^ 0x34A3)) ^ (STACK[0x6508] + 2554)))
                            - (STACK[0x6508]
                             + 1996054245)
                            + 1996058447))();
}

uint64_t sub_100C8F64C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (v0 ^ 0x76F9752B ^ (11911 * (v0 == 592204313))))
                                          - 12))(v1);
}

uint64_t sub_100C8F6B8()
{
  int v0;
  int v1;

  STACK[0xC768] -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((15732 * (v1 == (v0 ^ 0x8D2D8942))) ^ v0)) - 12))();
}

uint64_t sub_100C8F720()
{
  int v0;

  *(_DWORD *)(STACK[0xB8D0] - 0x28623712C9340CEALL) = -1926392731;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100C8F774()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100C8F7AC()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6508];
  v1 = STACK[0x6AD8];
  STACK[0xA438] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1774)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((int)v0 + 7508)) - 12))();
}

uint64_t sub_100C8FA34()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6508];
  LODWORD(STACK[0x9264]) = v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((14119 * ((((v0 - (v1 - 1926396943)) | (v1 - 1926396943 - v0)) & 0x80000000) == 0)) ^ ((int)v1 - 10367 + (int)v1 + 7560 + 52))))();
}

uint64_t sub_100C8FA98()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((12837
                                               * (((STACK[0x6508] - 2134) | 0x81) + 1471922950 > 0xDDE56E9C)) ^ (((STACK[0x6508] - 2134) | 0x81) + 2333)))
                            - 12))();
}

uint64_t sub_100C8FB3C()
{
  int v0;
  unsigned int v1;
  unint64_t v2;
  char v3;
  int v4;

  v0 = STACK[0x6508] - 1926396943;
  v1 = 1772489163
     * ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x4D93BAC8)) ^ STACK[0x6D48]) & 0x7FFFFFFF);
  v2 = 1772489163 * ((v1 >> (LODWORD(STACK[0x2B34]) + STACK[0x6508] - 120)) ^ v1);
  v3 = *(_BYTE *)(STACK[0x4A50] + (v2 >> 24)) ^ *(_BYTE *)(STACK[0x6D48] - 0x77F08B69E6123757) ^ *(_BYTE *)(STACK[0x4A60] + (v2 >> 24) + 1) ^ *(_BYTE *)(STACK[0x4A58] + (v2 >> 24) + 1) ^ v2 ^ (-97 * BYTE3(v2));
  if ((((v3 ^ 0xA3) - 9) ^ ((v3 ^ 0xE0) - 74) ^ ((v3 ^ 0x43) + 23)) == 0x57)
    v4 = STACK[0x9264];
  else
    v4 = 1926417715;
  LODWORD(STACK[0xE200]) = v4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(v0 ^ 0x8D2D824E ^ (118 * (((v4 - v0) | (v0 - v4)) >= 0)))))();
}

uint64_t sub_100C8FC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((((STACK[0x6508] ^ 0x1093) + 19745) | 0xA8) - 10236) ^ STACK[0x6508] ^ 0x1093)) - 12))(14328, a2, a3, 767, a5, a6, a7, 2918208296);
}

uint64_t sub_100C8FD18()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2606) ^ 0x3B7C))
                            - (((STACK[0x6508] + 1938) | 0x4094) ^ 0x5898)))();
}

uint64_t sub_100C8FD64()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((LOBYTE(STACK[0x7F47]) * (STACK[0x6508] ^ 0x1CD1)) ^ LODWORD(STACK[0x32B4])))
                            - 12))();
}

uint64_t sub_100C8FDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8
                                                                                 * (int)((STACK[0x6508] - 1761) ^ 0x1534))
                                                                     - 8))(a1, a2, a3, 2595713195);
}

uint64_t sub_100C8FDF8()
{
  int v0;
  int v1;

  *(_DWORD *)STACK[0x8000] = ((v0 + 486971349) & 0xE2F97FFF ^ 0xF88468B) * v1 + 805002782;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100C8FE44@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((a1 - 1) ^ (STACK[0x6D48] == 0x77F08B69E6123757)) & 1)
                                * ((a1 - 532902792) & 0x1FC355FF ^ 0x1309)) ^ a1)))();
}

uint64_t sub_100C8FEA0@<X0>(int a1@<W8>)
{
  uint64_t v2;

  v2 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * a1))(v2);
}

uint64_t sub_100C8FED4()
{
  int v0;
  int v1;
  uint64_t v2;

  v2 = (v0 + 4545);
  STACK[0xC768] = STACK[0xC768] - 8775 + v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v2 ^ (28363 * (v1 == -1926392729))))
                            - ((v0 + 1806) ^ 0x1780)))();
}

uint64_t sub_100C8FF44@<X0>(int a1@<W8>)
{
  *(_DWORD *)(STACK[0xB8D0] - 0x28623712C9340CEALL) = -1926392722;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 4))();
}

uint64_t sub_100C8FFA0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100C8FFD8()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1070)) - 8))();
}

uint64_t sub_100C90008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = STACK[0x6508] - 1753;
  v5 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v6 = STACK[0xB1D0];
  v7 = STACK[0x6AD8];
  STACK[0xA438] = *(_QWORD *)(STACK[0x6AD8] + 8 * v4)
                + ((STACK[0x6508] - 293310651) & 0x117BDF6F ^ 0xFFFFFFFFFFFFA0D7);
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(v7 + 8 * (v4 ^ 0x2457)) - 12))(STACK[0x60B8], a2, v5, a4, v6);
}

uint64_t sub_100C900C0()
{
  int v0;
  int v1;
  int v2;

  v1 = STACK[0x22C8];
  v2 = STACK[0x6508] + 52;
  LODWORD(STACK[0xBB70]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25 * (v0 != (v1 & 0x9EF7FBF ^ 0x8D2DF77E))) ^ v2))
                            - 4))();
}

uint64_t sub_100C90118()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((STACK[0x6508] - 2015) ^ 0x2C7B ^ (195 * ((STACK[0x6508] - 2015) ^ 0x8D1))))
                            - 12))();
}

uint64_t sub_100C90198()
{
  int v0;

  if ((LODWORD(STACK[0x74F4]) - 1784467771) >= 8)
    v0 = STACK[0xBB70];
  else
    v0 = 1926392763;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v0 == -1926392729) * (STACK[0x6508] + 8003)) ^ (STACK[0x6508] + 61)))
                            - ((STACK[0x6508] + 4003) | 0x4300)
                            + 25365))();
}

uint64_t sub_100C9021C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (LODWORD(STACK[0x2230]) ^ (30403 * (LODWORD(STACK[0x2234]) != -294737180))))
                            - 4))();
}

uint64_t sub_100C902B0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v5 = 1772489163
     * ((1772489163 * ((((_DWORD)v2 + (_DWORD)v0) ^ v3) & 0x7FFFFFFF)) ^ ((1772489163
                                                                         * ((((_DWORD)v2 + (_DWORD)v0) ^ v3) & 0x7FFFFFFFu)) >> 16));
  LODWORD(v5) = (*(_BYTE *)(STACK[0x5A18] + (v5 >> 24)) ^ *(_BYTE *)(v2 + v0 - 0x77F08B69E6123757) ^ *(_BYTE *)(STACK[0x5A10] + (v5 >> 24)) ^ *(_BYTE *)((v5 >> 24) + STACK[0x5A20] + 1) ^ v5 ^ (BYTE3(v5) * ((v1 + 102) ^ 0xEC)))
              - *(unsigned __int8 *)(v4 + v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((4005
                                          * ((_DWORD)v5 - 1926392713 - ((2 * (_DWORD)v5) & 0x1A5B28CE) == -1926392713)) ^ v1))
                            - 4))();
}

uint64_t sub_100C90388()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((22841 * (((v0 == 7) ^ v1) & 1)) ^ v1))
                            - 4))();
}

uint64_t sub_100C903C8@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((41
                                          * (((STACK[0x88A0] == 0x77F08B69E6123757) ^ (7 * (a1 ^ 0x43) + 1)) & 1)) ^ a1))
                            - ((301 * (a1 ^ 0x6317u)) ^ 0x107ELL)))();
}

uint64_t sub_100C90438()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2995)) - 4))(v1);
}

uint64_t sub_100C90468()
{
  int v0;

  STACK[0xC768] -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((v0 + 204346336) < 0x3DDF5C71)
                                          * ((v0 - 436834512) & 0x1A0997DD ^ 0x36F9)) ^ (v0 + 956)))
                            - 12))();
}

uint64_t sub_100C904F8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100C90524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = STACK[0x6508];
  v5 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v6 = STACK[0xB1D0];
  v7 = STACK[0x6AD8];
  STACK[0xA438] = ((STACK[0x6508] + 3732) | 0x4021)
                - 24367
                + *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 1704));
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(v7 + 8 * (int)((v4 - 1704) ^ 0x2404)) - 12))(STACK[0x60B8], a2, v5, a4, v6);
}

uint64_t sub_100C905D4()
{
  int v0;
  int v1;
  int v2;

  v1 = STACK[0x22C0] & 0x72188BF4;
  v2 = STACK[0x6508] + 3695;
  LODWORD(STACK[0xB964]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((22551 * (v0 == v1 - 1926394953)) ^ v2)) - 12))();
}

uint64_t sub_100C90638()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x190E)) - ((v0 + 11426) ^ 0x355ELL)))();
}

uint64_t sub_100C906AC()
{
  unsigned int v0;
  unsigned int v1;
  int v2;
  _BOOL4 v3;
  int v4;

  v0 = *(_DWORD *)(STACK[0xB8D0] - 0x28623712C9340ED6) + 1374125861;
  v1 = LODWORD(STACK[0xA298]) + 1520349012;
  v2 = (v0 < 0xC4FB808F) ^ (v1 < 0xC4FB808F);
  v3 = v0 > v1;
  if (v2)
    v3 = v0 < 0xC4FB808F;
  if (v3)
    v4 = 1926392763;
  else
    v4 = STACK[0xB964];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v4 == -1926392729) * (((STACK[0x6508] ^ 0x3F71) - 4130) ^ 0x584F)) ^ (STACK[0x6508] + 3695)))
                            - 12))();
}

uint64_t sub_100C9078C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(v2 - 0x28623712C9340EDELL);
  *(_QWORD *)(v3 + 3832) = STACK[0xCF10];
  *(_QWORD *)(v3 + 3840) = v4;
  v5 = (v1 | ((unint64_t)(v1 < 0x7314016A) << 32)) + (((v0 + 800) | 0xD02u) ^ 0x8028C442);
  *(_QWORD *)(v3 + 3848) = v5;
  *(_BYTE *)(v3 + 3863) = v5 < 0xF33CECAF;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((20763 * (v5 != ((v0 + 800) ^ 0x3273u) + 4080852025)) ^ v0))
                            - 12))();
}

uint64_t sub_100C9083C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v2 = *(_DWORD *)STACK[0x60B8];
  v3 = *(_QWORD *)STACK[0x60C0];
  v4 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3616)) - 12);
  *(_DWORD *)(v1 + 3036) = v0;
  *(_QWORD *)(v1 + 3040) = v3;
  *(_DWORD *)(v1 + 3052) = v2;
  *(_QWORD *)(v1 + 3056) = 0;
  return v4();
}

uint64_t sub_100C90870()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 3056);
  *(_QWORD *)(v0 + 3064) = v1;
  v2 = *(_DWORD *)(v0 + 3052);
  v3 = *(_QWORD *)(v0 + 3040);
  v4 = *(_DWORD *)(v0 + 3036);
  *(_DWORD *)(v0 + 3072) = v4 ^ 0xEE0;
  *(_DWORD *)(v0 + 3076) = v4 + 7825;
  *(_DWORD *)(v0 + 3080) = v4 + 3695;
  v5 = *(_QWORD *)(v0 + 3832) + v1;
  v6 = ((v5 ^ *(_DWORD *)(v3 + (v2 & 0x4D93BAC8))) & 0x7FFFFFFF) * ((v4 + 7825) ^ 0x69A626CC);
  v7 = 1772489163 * (v6 ^ HIWORD(v6));
  *(_DWORD *)(v0 + 3084) = (*(_BYTE *)(STACK[0x5A18] + (v7 >> 24)) ^ *(_BYTE *)(v5
                                                                                               - 0x77F08B69E6123757) ^ *(_BYTE *)(STACK[0x5A10] + (v7 >> 24)) ^ *(_BYTE *)((v7 >> 24) + STACK[0x5A20] + 1) ^ v7 ^ (BYTE3(v7) * ((v4 ^ 0xE0) + 95)));
  v8 = *(_QWORD *)(v0 + 3840) + v1;
  *(_QWORD *)(v0 + 296) = v8 - 0x30831D73E345A1C2;
  v9 = STACK[0x6AD8];
  v10 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v4 ^ 0x7758));
  *(_QWORD *)(v0 + 3088) = v8;
  *(_QWORD *)(v0 + 280) = v10 - 4;
  return (*(uint64_t (**)(void))(v9 + 8 * (v4 ^ 0x7591)))();
}

uint64_t sub_100C909A0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((STACK[0xCF10] != 0x77F08B69E6123757)
                                     * (((a1 + 1241631224) & 0xB5FE1776) + 27140)) ^ a1)))();
}

uint64_t sub_100C90A00()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 7825)))(v1);
}

uint64_t sub_100C90A30()
{
  int v0;

  STACK[0xC768] += (v0 - 463992) & 0x4D3FF75D ^ 0xFFFFFFFFB2C70CACLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 10836)) - 4))();
}

uint64_t sub_100C90AA0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 ^ 0x4D38E4D8 ^ (14494 * (v0 == -106397891)))))();
}

uint64_t sub_100C90B08@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + v1)) - 12))();
}

uint64_t sub_100C90B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = STACK[0x6508] + 20149;
  v5 = STACK[0x6508] - 1731;
  v6 = STACK[0xB8D0] - 0x28623712C9340CFALL;
  v7 = STACK[0xB1D0];
  v8 = STACK[0x6AD8];
  STACK[0xA438] = *(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 4;
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(v8 + 8 * ((30334 * ((v5 ^ 0xD0C2E2CF) == 942762943)) ^ ((v4 ^ 0x7B3C) + v5))) - 12))(STACK[0x60B8], a2, v6, a4, v7);
}

uint64_t sub_100C90C50()
{
  int v0;
  unint64_t v1;
  int v2;
  int v3;

  v1 = STACK[0x4B08] ^ 0x18A1;
  v2 = STACK[0x22C4] & 0x34E7BE57;
  v3 = STACK[0x6508] + 630;
  LODWORD(STACK[0xC6BC]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * ((28784 * (v0 == (v2 ^ ((_DWORD)v1 - 1926397623)))) ^ v3))
                            - 8))();
}

uint64_t sub_100C90CB8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((12857 * (((3 * (v0 ^ 0x1911) + 547880380) ^ v0) == 1124101489)) ^ (v0 + 2279)))
                            - 12))();
}

uint64_t sub_100C90D44()
{
  int v0;
  int v1;
  int v2;

  v0 = STACK[0x6508] + 3537;
  v1 = STACK[0x6508] + 630;
  if ((LODWORD(STACK[0xBA6C]) - 1784467771) >= 8)
    v2 = STACK[0xC6BC];
  else
    v2 = 1926392763;
  LODWORD(STACK[0xE224]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((v2 == v0 - 1926400480) * (STACK[0x2EF0] + 6040)) ^ v1))
                            - 8))();
}

uint64_t sub_100C90DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7839 * ((STACK[0x2EF0] ^ 0x2B9BA2CD) < 0xF632F8E2)) ^ (((STACK[0x2EF0] + 13304) ^ 0x3F72) + STACK[0x2EF0])))
                                                                                                - 8))(a1, a2, a3, a4, a5, 581925057, 1301527240);
}

uint64_t sub_100C90E60()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;

  v1 = STACK[0x6508];
  v2 = ((v0 + 1494876587) ^ 0xD1D3AF1B) & (2 * ((v0 + 1494876587) & 0x51A2E5B)) ^ (v0 + 1494876587) & 0x51A2E5B;
  v3 = ((((v0 - 0x6C921C7FA6E5FE55) ^ 0x990475FCD3D7AB9DLL) << ((23 * (v1 ^ 0x27)) ^ 0x46)) ^ 0xAD9B0B8C) & ((v0 + 1494876587) ^ 0xD3D7AB9D) ^ (((v0 - 0x6C921C7FA6E5FE55) ^ 0x990475FCD3D7AB9DLL) << ((23 * (v1 ^ 0x27)) ^ 0x46)) & LODWORD(STACK[0x2E10]);
  v4 = v3 ^ 0x52448442;
  v5 = (v3 ^ 0x4890184) & (4 * v2) ^ v2;
  v6 = ((4 * v4) ^ 0x5B361718) & v4 ^ (4 * v4) & 0xD6CD85C4;
  v7 = (v6 ^ 0x52040500) & (16 * v5) ^ v5;
  v8 = ((16 * (v6 ^ 0x84C980C6)) ^ 0x6CD85C60) & (v6 ^ 0x84C980C6) ^ (16 * (v6 ^ 0x84C980C6)) & 0xD6CD85C0;
  v9 = (v0 + 1494876587) ^ (2
                          * ((((v8 ^ 0x92058186) << 8) & 0xD6CD8500 ^ 0x44850000 ^ (((v8 ^ 0x92058186) << 8) ^ 0xCD850000) & (v8 ^ 0x92058186)) & (((v8 ^ 0x44C80400) & (v7 << 8) ^ v7) << 16) ^ (v8 ^ 0x44C80400) & (v7 << 8) ^ v7)) ^ 0x8837BA3C;
  *(_DWORD *)STACK[0xC7C0] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((481 * (v9 != -1926392729)) ^ ((int)v1 + 630))) - 8))();
}

uint64_t sub_100C91018()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2714])) - 8))();
}

uint64_t sub_100C910B4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0x8058] != 0x77F08B69E6123757) * (((a1 - 3651) | 0x72) ^ 0x513F)) ^ a1))
                            - 8))();
}

uint64_t sub_100C91100()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3537)) - 8))(v1);
}

uint64_t sub_100C9112C()
{
  int v0;

  STACK[0xC768] -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 8062)) - ((v0 + 1806) ^ 0x1780)))();
}

uint64_t sub_100C91188()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100C911B8()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 13065)))();
}

uint64_t sub_100C911E4@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0xB6F8]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((55 * ((((a1 - 2013013112) & 0x77FC1FFF ^ LOBYTE(STACK[0x770F])) & 1) == 0)) ^ (a1 + 10088)))
                            - 8))();
}

uint64_t sub_100C91250()
{
  int v0;

  STACK[0x6AC0] = STACK[0xB7E0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x1088u)) - 4))();
}

uint64_t sub_100C91374()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 10088)) - 8))();
}

uint64_t sub_100C913A8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 1806)))();
}

uint64_t sub_100C913D8()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 3548)) - 12))();
}

uint64_t sub_100C91404@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 2173)) - 12))();
}

uint64_t sub_100C9143C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;

  LODWORD(STACK[0xD130]) = v2;
  STACK[0x8BA8] = v4;
  LODWORD(STACK[0xCA70]) = v3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((0xF71810747F1CCDEFLL * v1 == 0x15A0F62B442E978ALL) * (((a1 - 2418) | 0x1080) - 3461)) ^ (a1 + 1806))))();
}

uint64_t sub_100C914C0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((LOBYTE(STACK[0x770F]) ^ (v0 - 1)) & 1)
                                * (((v0 - 5316) | 0x920) ^ 0x27AE)) ^ v0)))();
}

uint64_t sub_100C9150C()
{
  int v0;

  STACK[0x6AC0] = STACK[0xB7E0];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x1096)) - 4))();
}

uint64_t sub_100C91628@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v8 = STACK[0x6AD8];
  STACK[0x93B8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) + v6;
  v9 = v5
     - v3
     + v4
     + 2 * (a1 ^ 0xB8E05170)
     - (v2 & 0x708BDA57 ^ 0x30805050)
     + ((v7 + 1135965648) & 0xBC4A7C9F ^ 0x471FEA83 ^ v2 & 0x708BDA57 ^ 0x30805050 ^ a1)
     + ((2 * (v2 & 0x708BDA57 ^ 0x30805050 ^ a1)) & 0x2E ^ ((v7 ^ 0x41DD) - 4200))
     + 2;
  v10 = ((uint64_t (*)(_QWORD))STACK[0x5510])((v9 - 1973368766 - ((2 * v9) & 0x14C19084)) ^ 0x8A60C842);
  STACK[0x7CD8] = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((3434 * (v10 != 0)) ^ v7)) - 4))();
}

uint64_t sub_100C91724(unint64_t a1)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BOOL4 v6;

  STACK[0xD1A8] += 16;
  v4 = STACK[0x6AC0];
  STACK[0xD870] = a1;
  STACK[0xD890] = v2;
  STACK[0xD880] = a1;
  v6 = v4 == 0x5403DD36F7778C5ALL || v3 == 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v1 ^ (41 * v6))))(3099649134, 421658624, v3);
}

uint64_t sub_100C91804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v3 ^ 0x6960) + 740087206) ^ 0x2C1D0380) * (a3 == v4)) ^ v3 ^ 0x642))
                            - 12))();
}

uint64_t sub_100C91988(uint64_t a1, uint64_t a2, char *a3)
{
  int v3;
  uint64_t v4;
  char *v5;

  v5 = (char *)&STACK[0x1D0C0] + v4;
  *v5 = *a3;
  v5[1] = a3[1];
  v5[2] = a3[2];
  v5[3] = a3[3];
  v5[4] = a3[4];
  v5[5] = a3[5];
  v5[6] = a3[6];
  v5[7] = a3[7];
  v5[8] = a3[8];
  v5[9] = a3[9];
  v5[10] = a3[10];
  v5[11] = a3[11];
  v5[12] = a3[12];
  v5[13] = a3[13];
  v5[14] = a3[14];
  v5[15] = a3[15];
  return ((uint64_t (*)(uint64_t, uint64_t, char *))(*(_QWORD *)(STACK[0x6AD8]
                                                                       + 8
                                                                       * (v3 ^ 0x2C1D11FF ^ (20615
                                                                                           * (v3 != ((v3 - 740087206) ^ 0xEB8FC9CE)))))
                                                           - 12))(a1, a2, v5);
}

uint64_t sub_100C91A64@<X0>(unint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v2;

  STACK[0x6A90] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 ^ (229 * (v2 != 0))))
                            - ((a2 + 4184) ^ 0x3DDFLL)))();
}

uint64_t sub_100C91A9C@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = (v1 & 1) + (v1 & 1 | 0xED1E7DEE) + ((((a1 + 790) | 0xD42) - 15842) ^ v1 & 0xF) == -316768801 && v1 != 541432448;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((8142 * v3) ^ a1)) - 12))();
}

uint64_t sub_100C91B10@<X0>(char a1@<W0>, uint64_t a2@<X3>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((6909
                                          * (((a2 == 0x5403DD36F7778C5ALL) ^ (a3 - 109 + a1 + 123)) & 1)) ^ a3))
                            - 12))();
}

uint64_t sub_100C91B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v16;

  STACK[0x6A60] = a5;
  LODWORD(STACK[0x6950]) = v5;
  LODWORD(STACK[0x66C0]) = v6;
  LODWORD(STACK[0x5E48]) = v7;
  STACK[0x5E50] = v9;
  STACK[0xD898] = 0;
  STACK[0xD868] = 0;
  v10 = (uint64_t (*)(uint64_t))STACK[0x5A48];
  STACK[0xD868] = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  v11 = v10(1032);
  STACK[0xD888] = v11 + 0x7520ADBE5B486666;
  STACK[0xD898] = v10(1028);
  v12 = v10(1032);
  STACK[0xD878] = v12;
  if (v11)
    v13 = v12 == 0;
  else
    v13 = 1;
  v16 = !v13 && STACK[0xD898] != 0 && STACK[0xD868] != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v16 * (v8 ^ 0x1318)) ^ v8))
                            - ((v8 - 486515475) & 0x1CFFBD7F)
                            + 11631))();
}

uint64_t sub_100C91C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  STACK[0x5E40] = v8;
  v9 = LODWORD(STACK[0x6950]) ^ 0x408B350u;
  v10 = *(_QWORD *)(v6
                  + 8
                  * ((*(_QWORD *)(v6
                                + 8
                                * ((*(_QWORD *)(v6
                                              + 8
                                              * ((*(_QWORD *)(v6 + 8 * (LODWORD(STACK[0x908]) % v9))
                                                + 1174666792)
                                               % v9))
                                  + 3637966177)
                                 % v9))
                    + 1279728145)
                   % v9))
      + 1772700010;
  STACK[0x6910] = v9;
  LODWORD(v10) = v10 % v9 - ((2 * (v10 % v9)) & 0x30031B22) + 939625873;
  LODWORD(STACK[0x6A80]) = (((v10 ^ 0xE3F53BF) - 858201153) ^ ((v10 ^ 0x19828BCF) - 614122545) ^ ((v10 ^ 0x2FBC55E1)
                                                                                                - 312744479))
                         - 541957786;
  v11 = STACK[0x6AD8];
  LODWORD(STACK[0x6AA0]) = v7 ^ 0x165;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * (v7 ^ 0x165))
                                                                                                - 4))(0x4B7BE12F114BE357, a2, a3, 0x13027FE9FA60D6DLL, a5, a6, 3667435255);
}

uint64_t sub_100C91EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL4 v12;
  int v13;
  unint64_t v14;
  uint64_t v15;

  LODWORD(STACK[0x6AB0]) = v7;
  v11 = STACK[0x6A80];
  v12 = LODWORD(STACK[0x6A80]) < a7;
  v13 = STACK[0x6AA0];
  v14 = 8 * ((v8 | ((unint64_t)(v8 < 0x4B134CED) << 32)) + 0x3AB3A4DF800D1E73) + 0x2A62D901A6FCA500;
  v15 = *(_QWORD *)(v9 + v14);
  STACK[0x6A70] = (LODWORD(STACK[0x6AA0]) + 4397);
  if (v12 == v8 - 1887088117 < 0xDA989EF7)
    v12 = v8 - 1887088117 < v11;
  *(_QWORD *)(v10 + v14) = v15 ^ 0xDEDEDEDEDEDEDEDELL;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((429 * !v12) ^ v13)) - 4))(0x4B7BE12F114BE357);
}

uint64_t sub_100C93EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x6AB0] = STACK[0xD890];
  STACK[0x6AA0] = STACK[0xD880];
  LODWORD(STACK[0x6A80]) = (((LODWORD(STACK[0x6950]) ^ 0x4AB8AA3) - 621148885) ^ ((LODWORD(STACK[0x6950]) ^ 0xC6BE05C7)
                                                                                + 418351695) ^ ((LODWORD(STACK[0x6950]) ^ 0xC61D3C34)
                                                                                              + 407679934))
                         + 14963447;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6A70]) - 12))(a1, a2, a3, a4, a5, a6, a7, 3678244817);
}

uint64_t sub_100C94038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  unsigned int v9;
  _BOOL4 v10;
  unint64_t v11;

  v10 = LODWORD(STACK[0x6A80]) < a8;
  if (v10 == v9 - 1876278555 < 0xDB3D8FD1)
    v10 = v9 - 1876278555 < LODWORD(STACK[0x6A80]);
  v11 = 8 * ((v8 + 189) + (v9 | ((unint64_t)(v9 < 0x4B134CED) << 32)) + 0x332EDF09973A59C9)
      + 0x668907B0ED91A7A8;
  *(_QWORD *)(STACK[0x6AA0] + v11) = *(_QWORD *)(STACK[0x6AB0] + v11) ^ 0xDEDEDEDEDEDEDEDELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5277 * !v10) ^ v8)) - 12))();
}

uint64_t sub_100C96020()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100C96128@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((126 * (v1 + 1 != v2)) ^ a1)) - 4))();
}

uint64_t sub_100C961B0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  LODWORD(STACK[0x6AB0]) = (a1 + v2) & 0xB1395FFE;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25539 * (v1 == 15)) ^ a1)) - 4))();
}

uint64_t sub_100C96244()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unint64_t v6;
  int v7;
  int *v8;
  unint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  uint64_t v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  int v367;
  int v368;
  unsigned int v369;
  int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  int v382;
  int v383;
  unsigned int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  unsigned int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  int v427;
  unsigned int v428;
  int v429;
  unsigned int v430;
  unsigned int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  unsigned int v436;
  int v437;
  unsigned int v438;
  unsigned int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  int v497;
  unsigned int v498;
  unsigned int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  unsigned int v515;
  int v516;
  unsigned int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  unsigned int v522;
  unsigned int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  int v533;
  unsigned int v534;
  int v535;
  int v536;
  int v537;
  unsigned int v538;
  unsigned int v539;
  int v540;
  int v541;
  int v542;
  unsigned int v543;
  unsigned int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  unsigned int v556;
  int v557;
  int v558;
  unsigned int v559;
  int v560;
  int v561;
  unsigned int v562;
  int v563;
  int v564;
  int v565;
  unsigned int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  unsigned int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  unsigned int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  unsigned int v596;
  int v597;
  unint64_t v598;
  int v599;
  unsigned int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  int v611;
  unsigned int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  int v626;
  int v627;
  unsigned int v628;
  unsigned int v629;
  int v630;
  int v631;
  int v632;
  unsigned int v633;
  int v634;
  int v635;
  int v636;
  unint64_t v637;
  unint64_t v638;
  uint64_t v639;
  unsigned int v640;
  unint64_t v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  uint64_t v650;
  uint64_t v651;
  int v652;
  uint64_t (*v653)(void);

  v3 = v1
     - 2108331205
     + ((v1 - 2108331205) >> 8)
     - ((v1 - 2108331205 + ((v1 - 2108331205) >> 8)) >> 2);
  v4 = v3 - 555083018 + ((v3 - 555083018) >> 15) + ((v3 - 555083018 + ((v3 - 555083018) >> 15)) >> 4);
  v5 = v4 + 1139924436 - ((v4 + 1139924436) >> 10) + ((v4 + 1139924436 - ((v4 + 1139924436) >> 10)) >> 8);
  v6 = STACK[0x6AC0];
  v7 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B9ELL);
  v8 = (int *)STACK[0x6A60];
  v9 = STACK[0x6A60] + 4 * (16 - (v7 & 0xF));
  v10 = v3 ^ v0 ^ v4;
  v11 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778ADELL);
  v12 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B0ELL);
  v13 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778C4ELL);
  v14 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778C26);
  v15 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778AD6);
  v16 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778AEALL);
  v17 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B0ALL);
  v18 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B7ELL);
  v19 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B52);
  v20 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B5ELL);
  v21 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778BBELL);
  v22 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778BA6);
  v23 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778BB6);
  v24 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B8ALL);
  v25 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B6ALL);
  v26 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778BE6);
  v27 = *(_DWORD *)(STACK[0x6AC0] - 0x5403DD36F7778B26);
  LODWORD(STACK[0x6440]) = v10 ^ v5;
  v28 = *(_DWORD *)(v6 - 0x5403DD36F7778B16);
  LODWORD(STACK[0x6A70]) = v14 - v17;
  LODWORD(STACK[0x6A30]) = v23 + v21;
  LODWORD(STACK[0x6A40]) = v17 + v15;
  LODWORD(STACK[0x6A50]) = v27 ^ v13;
  LODWORD(STACK[0x67D0]) = v23 - v22;
  LODWORD(STACK[0x6770]) = v15 - v19;
  v29 = *(_DWORD *)(v6 - 0x5403DD36F7778B3ELL);
  LODWORD(STACK[0x6A80]) = v28 ^ v22;
  v30 = v29 & 0x800000;
  LODWORD(STACK[0x69B0]) = v24 - v21;
  LODWORD(STACK[0x67C0]) = v24 + v19;
  v31 = v29 & 0xFF7FFFFF;
  LODWORD(STACK[0x6840]) = v29 ^ v25;
  v32 = v18 & 0x4000;
  LODWORD(STACK[0x6A20]) = v27 + v12;
  LODWORD(STACK[0x6830]) = v20 + v12;
  LODWORD(STACK[0x6790]) = v25 + v18;
  if (((unsigned __int16)v26 & v18 & 0x4000) != 0)
    v32 = -v32;
  v33 = v32 + v26;
  if ((v30 & v20) != 0)
    v30 = -v30;
  LODWORD(STACK[0x6A10]) = v33 ^ v18 & 0xFFFFBFFF;
  LODWORD(STACK[0x6960]) = v26 + v16;
  v34 = *(_DWORD *)(v6 - 0x5403DD36F7778C2ALL);
  LODWORD(STACK[0x69C0]) = v16 - v34;
  v35 = *(_DWORD *)(v6 - 0x5403DD36F7778AB2);
  LODWORD(STACK[0x6990]) = v28 ^ v13;
  v36 = *(_DWORD *)(v6 - 0x5403DD36F7778B4ELL);
  LODWORD(STACK[0x69F0]) = v36 + v35;
  v37 = *(_DWORD *)(v6 - 0x5403DD36F7778B92);
  LODWORD(STACK[0x67E0]) = v34 ^ v37;
  v38 = *(_DWORD *)(v9 + 4 * (v7 & 0xF));
  LODWORD(STACK[0x6900]) = v37 ^ v7;
  v39 = *(_DWORD *)(v6 - 0x5403DD36F7778C0ELL);
  LODWORD(STACK[0x69D0]) = (v30 + v20) ^ v31;
  v40 = *(_DWORD *)(v6 - 0x5403DD36F7778ABALL);
  LODWORD(STACK[0x6980]) = v7 - v35;
  v41 = *(_DWORD *)(v6 - 0x5403DD36F7778AB6);
  LODWORD(STACK[0x68F0]) = v36 + v39;
  LODWORD(STACK[0x6920]) = v39 + v11;
  LODWORD(STACK[0x69E0]) = v40 ^ v11;
  LODWORD(STACK[0x67A0]) = v40 - v41;
  v42 = *(_DWORD *)(v6 - 0x5403DD36F7778AE2);
  LODWORD(STACK[0x6A00]) = v42 + v41;
  v43 = *(_DWORD *)(v6 - 0x5403DD36F7778BDELL);
  LODWORD(STACK[0x69A0]) = v42 + v43;
  v44 = *(_DWORD *)(v6 - 0x5403DD36F7778ACELL);
  LODWORD(STACK[0x6970]) = v44 ^ v43;
  v45 = *(_DWORD *)(v6 - 0x5403DD36F7778B76);
  v46 = v44 ^ v45;
  v47 = *(_DWORD *)(v6 - 0x5403DD36F7778B4ALL);
  LODWORD(STACK[0x6740]) = v45 ^ v47;
  v48 = *(_DWORD *)(v6 - 0x5403DD36F7778BCALL);
  LODWORD(STACK[0x6890]) = v48 ^ v47;
  v49 = *(_DWORD *)(v6 - 0x5403DD36F7778B6ELL);
  LODWORD(STACK[0x68C0]) = v48 - v49;
  v50 = *(_DWORD *)(v6 - 0x5403DD36F7778B82);
  LODWORD(STACK[0x6930]) = v50 ^ v49;
  v51 = *(_DWORD *)(v6 - 0x5403DD36F7778C46);
  LODWORD(STACK[0x6940]) = v51 ^ v50;
  v52 = *(_DWORD *)(v6 - 0x5403DD36F7778BAELL);
  LODWORD(STACK[0x68A0]) = v51 ^ v52;
  v53 = *(_DWORD *)(v6 - 0x5403DD36F7778AAALL);
  LODWORD(STACK[0x6870]) = v53 ^ v52;
  v54 = *(_DWORD *)(v6 - 0x5403DD36F7778BB2);
  v55 = v53 - v54;
  v56 = *(_DWORD *)(v6 - 0x5403DD36F7778B2ALL);
  LODWORD(STACK[0x6860]) = v54 ^ v56;
  v57 = *(_DWORD *)(v6 - 0x5403DD36F7778C4ALL);
  LODWORD(STACK[0x6880]) = v56 - v57;
  v58 = *(_DWORD *)(v6 - 0x5403DD36F7778AEELL);
  LODWORD(STACK[0x68E0]) = v57 - v58;
  v59 = *(_DWORD *)(v6 - 0x5403DD36F7778BCELL);
  LODWORD(STACK[0x6AA0]) = v58 - v59;
  v60 = *(_DWORD *)(v6 - 0x5403DD36F7778C52);
  LODWORD(STACK[0x6820]) = v60 + v59;
  v61 = *(_DWORD *)(v6 - 0x5403DD36F7778B46);
  LODWORD(STACK[0x6800]) = v60 + v61;
  v62 = *(_DWORD *)(v6 - 0x5403DD36F7778B56);
  LODWORD(STACK[0x6780]) = v61 - v62;
  v63 = *(_DWORD *)(v6 - 0x5403DD36F7778AAELL);
  v64 = *(_DWORD *)(v6 - 0x5403DD36F7778BEALL);
  v65 = *(_DWORD *)(v6 - 0x5403DD36F7778B02);
  LODWORD(STACK[0x6708]) = v65;
  v66 = v63 ^ v62;
  LODWORD(STACK[0x66F8]) = v65 ^ v64;
  LODWORD(STACK[0x6810]) = (v65 ^ v64 ^ v63 ^ v62) + 2 * ((v65 ^ v64) & (v63 ^ v62));
  v67 = *v8;
  v68 = *(_DWORD *)(v6 - 0x5403DD36F7778C16);
  LODWORD(STACK[0x66A0]) = v63 + v68;
  v69 = *(_DWORD *)(v6 - 0x5403DD36F7778C02);
  LODWORD(STACK[0x66B8]) = v68 + v69;
  v70 = *(_DWORD *)(v6 - 0x5403DD36F7778BE2);
  LODWORD(STACK[0x66B0]) = v70 + v69;
  v71 = *(_DWORD *)(v6 - 0x5403DD36F7778AFALL);
  LODWORD(STACK[0x6640]) = v71 ^ v70;
  v72 = *(_DWORD *)(v6 - 0x5403DD36F7778AA6);
  LODWORD(STACK[0x66D8]) = v71 ^ v72;
  v73 = *(_DWORD *)(v6 - 0x5403DD36F7778B32);
  LODWORD(STACK[0x66F0]) = v72 - v73;
  v74 = *(_DWORD *)(v6 - 0x5403DD36F7778B72);
  v75 = v74 ^ v73;
  v76 = *(_DWORD *)(v6 - 0x5403DD36F7778B7ALL);
  LODWORD(STACK[0x6660]) = v74 - v76;
  v77 = *(_DWORD *)(v6 - 0x5403DD36F7778BF6);
  LODWORD(STACK[0x6668]) = v76 + v77;
  v78 = *(_DWORD *)(v6 - 0x5403DD36F7778B8ELL);
  LODWORD(STACK[0x6630]) = v77 - v78;
  v79 = *(_DWORD *)(v6 - 0x5403DD36F7778B1ELL);
  LODWORD(STACK[0x6638]) = v64 - v79;
  v80 = *(_DWORD *)(v6 - 0x5403DD36F7778BC2);
  LODWORD(STACK[0x6690]) = v80 + v79;
  v81 = v78 - v38;
  v82 = *(_DWORD *)(v6 - 0x5403DD36F7778C1ELL);
  LODWORD(STACK[0x66A8]) = v38 - v82;
  v83 = *(_DWORD *)(v6 - 0x5403DD36F7778B86);
  LODWORD(STACK[0x6650]) = v82 ^ v83;
  v84 = *(_DWORD *)(v6 - 0x5403DD36F7778AA2);
  v85 = v84 ^ v83;
  v86 = *(_DWORD *)(v6 - 0x5403DD36F7778AD2);
  LODWORD(STACK[0x6750]) = v86 + v84;
  v87 = *(_DWORD *)(v6 - 0x5403DD36F7778C3ALL);
  v88 = v86 - v87;
  v89 = *(_DWORD *)(v6 - 0x5403DD36F7778C12);
  LODWORD(STACK[0x6688]) = v89 ^ v87;
  v90 = *(_DWORD *)(v6 - 0x5403DD36F7778B06);
  LODWORD(STACK[0x6608]) = v89 ^ v90;
  v91 = *(_DWORD *)(v6 - 0x5403DD36F7778BFALL);
  LODWORD(STACK[0x65F0]) = v90 - v91;
  v92 = *(_DWORD *)(v6 - 0x5403DD36F7778C06);
  LODWORD(STACK[0x6648]) = v80 ^ v92;
  v93 = *(_DWORD *)(v6 - 0x5403DD36F7778AF2);
  v94 = v91 - v93;
  v95 = *(_DWORD *)(v6 - 0x5403DD36F7778AC2);
  v96 = v92 - v95;
  v97 = *(_DWORD *)(v6 - 0x5403DD36F7778AF6);
  LODWORD(STACK[0x65E8]) = v95 ^ v97;
  v98 = *(_DWORD *)(v6 - 0x5403DD36F7778C36);
  LODWORD(STACK[0x6628]) = v98 + v97;
  v99 = *(_DWORD *)(v6 - 0x5403DD36F7778AE6);
  LODWORD(STACK[0x65F8]) = v99 + v98;
  v100 = *(_DWORD *)(v6 - 0x5403DD36F7778BD6);
  v101 = v100 + v99;
  v102 = *(_DWORD *)(v6 - 0x5403DD36F7778BF2);
  LODWORD(STACK[0x6620]) = v100 - v102;
  v103 = *(_DWORD *)(v6 - 0x5403DD36F7778BFELL);
  v104 = v102 ^ v103;
  v105 = *(_DWORD *)(v6 - 0x5403DD36F7778C56);
  LODWORD(STACK[0x65E0]) = v105 ^ v103;
  v106 = *(_DWORD *)(v6 - 0x5403DD36F7778C0ALL);
  v107 = v105 ^ v106;
  v108 = *(_DWORD *)(v6 - 0x5403DD36F7778ABELL);
  LODWORD(STACK[0x6618]) = v108 ^ v106;
  v109 = *(_DWORD *)(v6 - 0x5403DD36F7778B12);
  LODWORD(STACK[0x6698]) = v109 + v108;
  v110 = *(_DWORD *)(v6 - 0x5403DD36F7778AFELL);
  v111 = v109 - v67;
  v112 = v67 + v110;
  v113 = *(_DWORD *)(v6 - 0x5403DD36F7778BBALL);
  v114 = *(_DWORD *)(v6 - 0x5403DD36F7778B2ELL);
  LODWORD(STACK[0x6600]) = v114 ^ v110;
  LODWORD(STACK[0x65A8]) = v114 ^ v113;
  v115 = *(_DWORD *)(v6 - 0x5403DD36F7778AC6);
  v116 = *(_DWORD *)(v6 - 0x5403DD36F7778B36);
  LODWORD(STACK[0x65D8]) = v113 - v116;
  LODWORD(STACK[0x65B8]) = v116 ^ v115;
  v117 = *(_DWORD *)(v6 - 0x5403DD36F7778B3ALL);
  v118 = *(_DWORD *)(v6 - 0x5403DD36F7778B42);
  LODWORD(STACK[0x65A0]) = v118 + v115;
  LODWORD(STACK[0x65C8]) = v118 - v117;
  v119 = *(_DWORD *)(v6 - 0x5403DD36F7778C32);
  v120 = *(_DWORD *)(v6 - 0x5403DD36F7778C3ELL);
  LODWORD(STACK[0x6598]) = v117 ^ v119;
  v121 = v120 + v119;
  v122 = *(_DWORD *)(v6 - 0x5403DD36F7778C42);
  v123 = *(_DWORD *)(v6 - 0x5403DD36F7778BC6);
  LODWORD(STACK[0x6580]) = v120 ^ v123;
  LODWORD(STACK[0x65B0]) = v123 - v122;
  v124 = *(_DWORD *)(v6 - 0x5403DD36F7778B62);
  v125 = *(_DWORD *)(v6 - 0x5403DD36F7778B22);
  v126 = v125 ^ v93;
  v127 = v125 ^ v124;
  v128 = *(_DWORD *)(v6 - 0x5403DD36F7778ADALL);
  v129 = *(_DWORD *)(v6 - 0x5403DD36F7778BAALL);
  LODWORD(STACK[0x65D0]) = v128 ^ v122;
  v130 = v129 ^ v128;
  v131 = *(_DWORD *)(v6 - 0x5403DD36F7778BA2);
  v132 = *(_DWORD *)(v6 - 0x5403DD36F7778B1ALL);
  v133 = v129 - v131;
  v134 = v132 + v131;
  v135 = *(_DWORD *)(v6 - 0x5403DD36F7778BEELL);
  v136 = *(_DWORD *)(v6 - 0x5403DD36F7778BDALL);
  LODWORD(STACK[0x6588]) = v132 + v135;
  LODWORD(STACK[0x67B0]) = v66 + v85;
  LODWORD(STACK[0x68B0]) = v75 + v85;
  LODWORD(STACK[0x68D0]) = v46 + v75;
  v137 = STACK[0x6830];
  LODWORD(STACK[0x6850]) = v46 + LODWORD(STACK[0x6830]);
  LODWORD(STACK[0x67F0]) = v127 ^ v137;
  v138 = STACK[0x67A0];
  LODWORD(STACK[0x6830]) = v127 + LODWORD(STACK[0x67A0]);
  v139 = STACK[0x67E0];
  LODWORD(STACK[0x6720]) = v138 + LODWORD(STACK[0x67E0]);
  LODWORD(STACK[0x6760]) = v88 - v139;
  v140 = v88 ^ v55;
  LODWORD(STACK[0x67A0]) = v88 ^ v55;
  v141 = STACK[0x6780];
  LODWORD(STACK[0x67E0]) = LODWORD(STACK[0x6780]) + v55;
  LODWORD(STACK[0x6780]) = v141 ^ v112;
  v142 = STACK[0x6840];
  LODWORD(STACK[0x66E8]) = LODWORD(STACK[0x6840]) - v112;
  v143 = STACK[0x6740];
  LODWORD(STACK[0x6730]) = v142 + LODWORD(STACK[0x6740]);
  LODWORD(STACK[0x6710]) = v143 + v94;
  LODWORD(STACK[0x6740]) = v136 ^ v135 ^ v94;
  LODWORD(STACK[0x6700]) = v81 - (v136 ^ v135);
  v144 = *(_DWORD *)(v6 - 0x5403DD36F7778C2ELL);
  v145 = *(_DWORD *)(v6 - 0x5403DD36F7778BD2);
  v146 = *(_DWORD *)(v6 - 0x5403DD36F7778B5ALL);
  v147 = *(_DWORD *)(v6 - 0x5403DD36F7778ACALL);
  v148 = *(_DWORD *)(v6 - 0x5403DD36F7778B66);
  v149 = *(_DWORD *)(v6 - 0x5403DD36F7778B96);
  v150 = *(_DWORD *)(v6 - 0x5403DD36F7778C22);
  v151 = *(_DWORD *)(v6 - 0x5403DD36F7778B9ALL);
  LODWORD(STACK[0x6A60]) = v124 - v81 + v140 + LODWORD(STACK[0x6708]);
  v152 = v136 - v149;
  v153 = v149 ^ v148;
  v154 = v147 ^ v146;
  v155 = v151 ^ v146;
  v156 = STACK[0x6800];
  LODWORD(STACK[0x6658]) = LODWORD(STACK[0x66F8]) - LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x6708]) = v121 ^ v156;
  LODWORD(STACK[0x6678]) = v121 - v111;
  v157 = STACK[0x6820];
  LODWORD(STACK[0x6800]) = v111 ^ LODWORD(STACK[0x6820]);
  LODWORD(STACK[0x6530]) = v104 + v157;
  *(_QWORD *)(v2 - 152) = (v104 + v101);
  v158 = STACK[0x6770];
  LODWORD(STACK[0x66D0]) = v101 - LODWORD(STACK[0x6770]);
  LODWORD(STACK[0x6570]) = v133 ^ v158;
  v159 = STACK[0x6900];
  LODWORD(STACK[0x66F8]) = v133 + LODWORD(STACK[0x6900]);
  v160 = (v151 - v144) ^ v159;
  v161 = STACK[0x69B0];
  LODWORD(STACK[0x6680]) = v151 - v144 - LODWORD(STACK[0x69B0]);
  v162 = LODWORD(STACK[0x68F0]) ^ v161;
  v163 = v96;
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x68F0]) ^ v96;
  v164 = STACK[0x66D8];
  LODWORD(STACK[0x66E0]) = LODWORD(STACK[0x66D8]) + v163;
  LODWORD(STACK[0x6770]) = v164 ^ v148 ^ v147;
  LODWORD(STACK[0x69B0]) = v107 ^ v148 ^ v147;
  v165 = STACK[0x6860];
  LODWORD(STACK[0x6610]) = v107 - LODWORD(STACK[0x6860]);
  v166 = STACK[0x6698];
  LODWORD(STACK[0x66D8]) = LODWORD(STACK[0x6698]) ^ v165;
  v167 = STACK[0x6960];
  LODWORD(STACK[0x6670]) = v166 + LODWORD(STACK[0x6960]);
  v168 = STACK[0x67C0];
  LODWORD(STACK[0x6900]) = v167 ^ LODWORD(STACK[0x67C0]);
  v169 = STACK[0x6638];
  LODWORD(STACK[0x6698]) = LODWORD(STACK[0x6638]) ^ v168;
  v170 = STACK[0x67D0];
  LODWORD(STACK[0x6960]) = v169 - LODWORD(STACK[0x67D0]);
  v171 = STACK[0x65E0];
  LODWORD(STACK[0x6638]) = LODWORD(STACK[0x65E0]) ^ v170;
  v172 = v171 ^ LODWORD(STACK[0x6790]);
  v173 = STACK[0x6630];
  LODWORD(STACK[0x67D0]) = LODWORD(STACK[0x6790]) - LODWORD(STACK[0x6630]);
  v174 = LODWORD(STACK[0x6620]) + v173;
  v175 = STACK[0x6920];
  LODWORD(STACK[0x6630]) = LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6920]);
  v176 = STACK[0x6618];
  LODWORD(STACK[0x6620]) = v175 ^ LODWORD(STACK[0x6618]);
  v177 = STACK[0x6870];
  LODWORD(STACK[0x6618]) = v176 ^ LODWORD(STACK[0x6870]);
  v178 = v177 - LODWORD(STACK[0x6890]);
  v179 = LODWORD(STACK[0x6890]) - LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x6920]) = LODWORD(STACK[0x6600]) ^ v153;
  v180 = STACK[0x6608];
  LODWORD(STACK[0x68F0]) = LODWORD(STACK[0x6608]) + v153;
  LODWORD(STACK[0x6870]) = v180 - v126;
  v181 = STACK[0x6640];
  LODWORD(STACK[0x65C0]) = LODWORD(STACK[0x6640]) + v126;
  v182 = v181 - LODWORD(STACK[0x6650]);
  v183 = STACK[0x6990];
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6650]);
  v184 = v183 - (v145 ^ v144);
  v185 = LODWORD(STACK[0x6668]) ^ v145 ^ v144;
  LODWORD(STACK[0x6650]) = LODWORD(STACK[0x6668]) ^ v130;
  v186 = STACK[0x68A0];
  LODWORD(STACK[0x6860]) = LODWORD(STACK[0x68A0]) ^ v130;
  v187 = STACK[0x65A8];
  LODWORD(STACK[0x6600]) = v186 - LODWORD(STACK[0x65A8]);
  v188 = STACK[0x6880];
  LODWORD(STACK[0x65A8]) = v187 + LODWORD(STACK[0x6880]);
  v189 = LODWORD(STACK[0x65A0]) ^ v188;
  LODWORD(STACK[0x6668]) = LODWORD(STACK[0x65A0]) ^ v134;
  v190 = STACK[0x66A0];
  LODWORD(STACK[0x6640]) = v134 - LODWORD(STACK[0x66A0]);
  v191 = STACK[0x65B8];
  LODWORD(STACK[0x6608]) = v190 + LODWORD(STACK[0x65B8]);
  v192 = v191 ^ LODWORD(STACK[0x6628]);
  v193 = STACK[0x6980];
  LODWORD(STACK[0x65A0]) = LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6980]);
  v194 = v145 - v150 + v193;
  v195 = STACK[0x6A30];
  LODWORD(STACK[0x6628]) = v145 - v150 - LODWORD(STACK[0x6A30]);
  v196 = STACK[0x69C0];
  LODWORD(STACK[0x6578]) = v195 ^ LODWORD(STACK[0x69C0]);
  v197 = LODWORD(STACK[0x68C0]) + v196;
  v198 = STACK[0x65F0];
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x68C0]) - LODWORD(STACK[0x65F0]);
  v199 = STACK[0x6970];
  LODWORD(STACK[0x6AC0]) = v198 - LODWORD(STACK[0x6970]);
  v200 = STACK[0x66B8];
  LODWORD(STACK[0x65F0]) = v199 - LODWORD(STACK[0x66B8]);
  v201 = v200 - LODWORD(STACK[0x66B0]);
  v202 = STACK[0x65E8];
  LODWORD(STACK[0x6590]) = LODWORD(STACK[0x66B0]) + LODWORD(STACK[0x65E8]);
  v203 = STACK[0x6648];
  LODWORD(STACK[0x65B8]) = LODWORD(STACK[0x6648]) + v202;
  v204 = STACK[0x6580];
  LODWORD(STACK[0x6568]) = v203 + LODWORD(STACK[0x6580]);
  v205 = STACK[0x65B0];
  LODWORD(STACK[0x6540]) = v204 - LODWORD(STACK[0x65B0]);
  v206 = STACK[0x65D8];
  LODWORD(STACK[0x6538]) = LODWORD(STACK[0x65D8]) + v205;
  v207 = LODWORD(STACK[0x6660]) + v206;
  v208 = STACK[0x6A20];
  LODWORD(STACK[0x6558]) = LODWORD(STACK[0x6A20]) + LODWORD(STACK[0x6660]);
  v209 = STACK[0x6690];
  LODWORD(STACK[0x6560]) = LODWORD(STACK[0x6690]) + v208;
  LODWORD(STACK[0x65D8]) = v209 + v154;
  v210 = STACK[0x69F0];
  LODWORD(STACK[0x65B0]) = LODWORD(STACK[0x69F0]) ^ v154;
  v211 = STACK[0x65F8];
  LODWORD(STACK[0x6548]) = v210 + LODWORD(STACK[0x65F8]);
  LODWORD(STACK[0x66B8]) = v211 + v150;
  v212 = LODWORD(STACK[0x6A10]) + v150;
  v213 = LODWORD(STACK[0x6A10]) - LODWORD(STACK[0x69A0]);
  v214 = STACK[0x68E0];
  LODWORD(STACK[0x6690]) = LODWORD(STACK[0x69A0]) - LODWORD(STACK[0x68E0]);
  v215 = STACK[0x69D0];
  LODWORD(STACK[0x69A0]) = v214 - LODWORD(STACK[0x69D0]);
  v216 = STACK[0x6A40];
  LODWORD(STACK[0x6840]) = v215 + LODWORD(STACK[0x6A40]);
  v217 = STACK[0x6598];
  LODWORD(STACK[0x68E0]) = LODWORD(STACK[0x6598]) ^ v216;
  v218 = v217 - LODWORD(STACK[0x6688]);
  v219 = LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6688]);
  v220 = LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6A70]);
  v221 = STACK[0x6588];
  LODWORD(STACK[0x6598]) = LODWORD(STACK[0x6588]) ^ LODWORD(STACK[0x6A70]);
  v222 = v221 + LODWORD(STACK[0x69E0]);
  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x69E0]) + v155;
  v223 = STACK[0x6930];
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x6930]) ^ v155;
  v224 = STACK[0x6A50];
  LODWORD(STACK[0x69E0]) = LODWORD(STACK[0x6A50]) + v223;
  v225 = v224 - v152;
  v226 = v152 - LODWORD(STACK[0x66A8]);
  v227 = LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x6750]);
  v228 = LODWORD(STACK[0x6940]) + LODWORD(STACK[0x6750]);
  v229 = STACK[0x6A00];
  LODWORD(STACK[0x6930]) = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6940]);
  v230 = STACK[0x65D0];
  LODWORD(STACK[0x6940]) = v229 ^ LODWORD(STACK[0x65D0]);
  v231 = STACK[0x66F0];
  v232 = (v231 ^ v230) + 2 * (v231 & v230);
  LODWORD(STACK[0x6A20]) = v162 + LODWORD(STACK[0x67A0]);
  v233 = *(_QWORD *)(v2 - 152);
  LODWORD(STACK[0x67C0]) = v233 ^ v162;
  LODWORD(STACK[0x69F0]) = v233 ^ v179;
  LODWORD(STACK[0x6990]) = v179 - v160;
  LODWORD(STACK[0x6880]) = v160 - v225;
  LODWORD(STACK[0x6890]) = v220 + v225;
  LODWORD(STACK[0x69D0]) = v220 ^ v197;
  LODWORD(STACK[0x69C0]) = v197 - v174;
  LODWORD(STACK[0x6A10]) = v174 + v226;
  LODWORD(STACK[0x66B0]) = v213 + v226;
  LODWORD(STACK[0x6980]) = v213 ^ v192;
  LODWORD(STACK[0x6648]) = v192 ^ v178;
  v234 = v201 ^ v178;
  v235 = v201 + v222;
  LODWORD(STACK[0x6820]) = v201 + v222;
  v236 = STACK[0x6800];
  LODWORD(STACK[0x68A0]) = LODWORD(STACK[0x6800]) + v222;
  v237 = STACK[0x6770];
  LODWORD(STACK[0x67A0]) = v236 + LODWORD(STACK[0x6770]);
  LODWORD(STACK[0x6550]) = v237 - v227;
  v238 = v228 ^ v227;
  LODWORD(STACK[0x6660]) = v228 ^ v227;
  LODWORD(STACK[0x6790]) = v228 - v172;
  LODWORD(STACK[0x6770]) = v172 + v212;
  LODWORD(STACK[0x68C0]) = v212 + v194;
  v239 = v184 ^ v194;
  v240 = LODWORD(STACK[0x66E8]) + v184;
  LODWORD(STACK[0x6800]) = LODWORD(STACK[0x66E8]) - v182;
  LODWORD(STACK[0x6A40]) = v189 + v182;
  v241 = v189 - LODWORD(STACK[0x6530]);
  v242 = STACK[0x67D0];
  LODWORD(STACK[0x6970]) = LODWORD(STACK[0x6530]) + LODWORD(STACK[0x67D0]);
  v243 = STACK[0x6810];
  LODWORD(STACK[0x65F8]) = LODWORD(STACK[0x6810]) + v242;
  LODWORD(STACK[0x6750]) = v243 + v232;
  LODWORD(STACK[0x67D0]) = v232 - v207;
  v244 = v207 - LODWORD(STACK[0x6700]);
  v245 = STACK[0x6570];
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6570]) ^ LODWORD(STACK[0x6700]);
  v246 = STACK[0x6760];
  LODWORD(STACK[0x65C8]) = v245 + LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x65D0]) = v219 ^ v246;
  v247 = STACK[0x69B0];
  LODWORD(STACK[0x6A00]) = v219 + LODWORD(STACK[0x69B0]);
  v248 = v247 + v185;
  LODWORD(STACK[0x66A0]) = v247 + v185;
  v249 = v218 ^ v185;
  v250 = STACK[0x68F0];
  LODWORD(STACK[0x69B0]) = v218 ^ LODWORD(STACK[0x68F0]);
  v251 = LODWORD(STACK[0x6900]) ^ v250;
  v252 = STACK[0x65E8];
  v253 = LODWORD(STACK[0x6900]) - LODWORD(STACK[0x65E8]);
  LODWORD(STACK[0x68F0]) = v253 - v240 - ((2 * (v253 - v240)) & 0x15625950);
  v254 = v231 - LODWORD(STACK[0x6AA0]);
  v255 = STACK[0x6A80];
  v256 = LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6AA0]);
  v257 = STACK[0x6688];
  LODWORD(STACK[0x6900]) = v252 - LODWORD(STACK[0x6688]);
  v258 = STACK[0x6690];
  LODWORD(STACK[0x6580]) = LODWORD(STACK[0x6690]) + v257;
  LODWORD(v233) = STACK[0x68E0];
  LODWORD(STACK[0x6588]) = v258 ^ LODWORD(STACK[0x68E0]);
  v259 = STACK[0x6AC0];
  LODWORD(STACK[0x6760]) = LODWORD(STACK[0x6AC0]) + v233;
  v260 = STACK[0x6720];
  LODWORD(STACK[0x6AC0]) = v259 - LODWORD(STACK[0x6720]);
  v261 = STACK[0x65E0];
  LODWORD(STACK[0x65E8]) = v260 - LODWORD(STACK[0x65E0]);
  v262 = STACK[0x6680];
  LODWORD(STACK[0x6570]) = v261 ^ LODWORD(STACK[0x6680]);
  v263 = STACK[0x66B8];
  LODWORD(STACK[0x6AA0]) = v262 - LODWORD(STACK[0x66B8]);
  v264 = STACK[0x6638];
  LODWORD(STACK[0x66B8]) = LODWORD(STACK[0x6638]) ^ v263;
  v265 = STACK[0x6538];
  LODWORD(STACK[0x6680]) = v264 + LODWORD(STACK[0x6538]);
  v266 = LODWORD(STACK[0x6590]) + v265;
  v267 = STACK[0x6540];
  LODWORD(STACK[0x6638]) = LODWORD(STACK[0x6590]) - LODWORD(STACK[0x6540]);
  v268 = STACK[0x65A0];
  v269 = v267 - LODWORD(STACK[0x65A0]);
  LODWORD(STACK[0x65E0]) = v269;
  v270 = STACK[0x67B0];
  LODWORD(STACK[0x65A0]) = v268 - LODWORD(STACK[0x67B0]);
  LODWORD(v233) = v270 - LODWORD(STACK[0x6730]);
  v271 = STACK[0x6558];
  LODWORD(STACK[0x6720]) = LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6558]);
  v272 = STACK[0x6620];
  LODWORD(STACK[0x6590]) = v271 ^ LODWORD(STACK[0x6620]);
  v273 = STACK[0x6578];
  LODWORD(STACK[0x6690]) = LODWORD(STACK[0x6578]) + v272;
  v274 = STACK[0x6548];
  LODWORD(STACK[0x6730]) = LODWORD(STACK[0x6548]) ^ v273;
  v275 = STACK[0x6630];
  LODWORD(STACK[0x66A8]) = LODWORD(STACK[0x6630]) + v274;
  v276 = STACK[0x65C0];
  v277 = v275 - LODWORD(STACK[0x65C0]);
  LODWORD(STACK[0x6700]) = v277;
  LODWORD(STACK[0x6620]) = v255 ^ v276;
  v278 = LODWORD(STACK[0x6568]) + v255;
  v279 = STACK[0x6710];
  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x6568]) ^ LODWORD(STACK[0x6710]);
  v280 = STACK[0x65A8];
  LODWORD(STACK[0x6630]) = v279 - LODWORD(STACK[0x65A8]);
  v281 = STACK[0x6618];
  v282 = v280 - LODWORD(STACK[0x6618]);
  LODWORD(STACK[0x6548]) = v282;
  v283 = LODWORD(STACK[0x6560]) ^ v281;
  LODWORD(STACK[0x66E8]) = LODWORD(STACK[0x6560]) + v256;
  v284 = STACK[0x6670];
  LODWORD(STACK[0x67B0]) = v256 - LODWORD(STACK[0x6670]);
  v285 = v284 - LODWORD(STACK[0x6740]);
  v286 = STACK[0x6780];
  LODWORD(STACK[0x6618]) = LODWORD(STACK[0x6740]) + LODWORD(STACK[0x6780]);
  v287 = STACK[0x67F0];
  LODWORD(STACK[0x65C0]) = LODWORD(STACK[0x67F0]) ^ v286;
  v288 = STACK[0x6A30];
  LODWORD(STACK[0x6670]) = v287 - LODWORD(STACK[0x6A30]);
  v289 = STACK[0x6658];
  LODWORD(STACK[0x66F0]) = LODWORD(STACK[0x6658]) + v288;
  v290 = STACK[0x67E0];
  LODWORD(STACK[0x6780]) = v289 ^ LODWORD(STACK[0x67E0]);
  v291 = STACK[0x69A0];
  LODWORD(STACK[0x6A30]) = LODWORD(STACK[0x69A0]) ^ v290;
  v292 = v291 + LODWORD(STACK[0x6610]);
  v293 = LODWORD(STACK[0x6678]) + LODWORD(STACK[0x6610]);
  v294 = STACK[0x6870];
  LODWORD(STACK[0x65A8]) = LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6870]);
  v295 = STACK[0x6600];
  v296 = v294 ^ LODWORD(STACK[0x6600]);
  LODWORD(STACK[0x6810]) = v240 + v296 - 2 * (v240 & v296);
  LODWORD(STACK[0x6A50]) = v248 + v235 - (STACK[0x90C] & (2 * (v248 + v235)));
  v297 = v249 + v238;
  v298 = v249;
  LODWORD(STACK[0x69A0]) = v297 - ((2 * v297) & 0xAB4C1F66);
  v299 = STACK[0x65B8];
  LODWORD(STACK[0x6740]) = v295 - LODWORD(STACK[0x65B8]);
  v300 = v299 - v254;
  v301 = STACK[0x6698];
  LODWORD(STACK[0x6870]) = LODWORD(STACK[0x6698]) ^ v254;
  v302 = LODWORD(STACK[0x65B0]) ^ v301;
  v303 = STACK[0x66D0];
  LODWORD(STACK[0x6678]) = LODWORD(STACK[0x65B0]) - LODWORD(STACK[0x66D0]);
  v304 = LODWORD(STACK[0x66C8]) + v303;
  v305 = LODWORD(STACK[0x66C8]) + LODWORD(STACK[0x6830]);
  v306 = STACK[0x6850];
  LODWORD(STACK[0x6568]) = LODWORD(STACK[0x6850]) + LODWORD(STACK[0x6830]);
  v307 = STACK[0x6930];
  LODWORD(STACK[0x6560]) = v306 - LODWORD(STACK[0x6930]);
  v308 = STACK[0x66F8];
  LODWORD(STACK[0x65B8]) = v307 + LODWORD(STACK[0x66F8]);
  v309 = STACK[0x6608];
  LODWORD(STACK[0x68E0]) = LODWORD(STACK[0x6608]) + v308;
  v310 = STACK[0x6960];
  LODWORD(STACK[0x6610]) = LODWORD(STACK[0x6960]) + v309;
  v311 = STACK[0x6940];
  LODWORD(STACK[0x6600]) = v310 + LODWORD(STACK[0x6940]);
  v312 = STACK[0x65D8];
  LODWORD(STACK[0x65B0]) = LODWORD(STACK[0x65D8]) ^ v311;
  v313 = STACK[0x6650];
  LODWORD(STACK[0x6850]) = v312 - LODWORD(STACK[0x6650]);
  v314 = STACK[0x6598];
  LODWORD(STACK[0x6A80]) = LODWORD(STACK[0x6598]) ^ v313;
  v315 = STACK[0x66D8];
  LODWORD(STACK[0x6540]) = v314 - LODWORD(STACK[0x66D8]);
  v316 = v315 ^ LODWORD(STACK[0x65F0]);
  v317 = LODWORD(STACK[0x65F0]) + LODWORD(STACK[0x6628]);
  v318 = STACK[0x6640];
  LODWORD(STACK[0x65F0]) = LODWORD(STACK[0x6628]) - LODWORD(STACK[0x6640]);
  v319 = LODWORD(STACK[0x69E0]) ^ v318;
  v320 = STACK[0x6708];
  LODWORD(STACK[0x6640]) = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6708]);
  v321 = STACK[0x68B0];
  LODWORD(STACK[0x6698]) = v320 - LODWORD(STACK[0x68B0]);
  v322 = STACK[0x68D0];
  LODWORD(STACK[0x6558]) = LODWORD(STACK[0x68D0]) + v321;
  v323 = STACK[0x6668];
  v324 = v322 - LODWORD(STACK[0x6668]);
  LODWORD(STACK[0x6940]) = v296 - v239;
  LODWORD(STACK[0x68D0]) = v239 - v283;
  LODWORD(STACK[0x68B0]) = v283 ^ v300;
  LODWORD(STACK[0x6710]) = v300 - v244;
  v325 = STACK[0x66E0];
  LODWORD(STACK[0x6960]) = v323 - LODWORD(STACK[0x66E0]);
  LODWORD(STACK[0x66F8]) = v244 + v323 - v325 - 1068694510;
  v326 = v253 + v277 - 829883121;
  v327 = (v326 ^ 0x823F1282) & (2 * (v326 & 0x92BE44D4)) ^ v326 & 0x92BE44D4;
  v328 = ((2 * (v326 ^ 0x831F128A)) ^ 0x2342ACBC) & (v326 ^ 0x831F128A) ^ (2 * (v326 ^ 0x831F128A)) & 0x11A1565E;
  v329 = (v328 ^ 0x1004412) & (4 * v327) ^ v327;
  v330 = ((4 * (v328 ^ 0x10A15242)) ^ 0x46855978) & (v328 ^ 0x10A15242) ^ (4 * (v328 ^ 0x10A15242)) & 0x11A1565C;
  v331 = (v330 ^ 0x815046) & (16 * v329) ^ v329;
  v332 = ((16 * (v330 ^ LODWORD(STACK[0x910]))) ^ 0x1A1565E0) & (v330 ^ LODWORD(STACK[0x910])) ^ (16
                                                                                                * (v330 ^ LODWORD(STACK[0x910]))) & 0x11A15650;
  v333 = v331 ^ 0x11A1565E ^ (v332 ^ 0x1001441E) & (v331 << 8);
  LODWORD(STACK[0x6930]) = v326 ^ (2
                                 * ((v333 << 16) & 0x11A10000 ^ v333 ^ ((v333 << 16) ^ 0x565E0000) & (((v332 ^ LODWORD(STACK[0x918])) << 8) & 0x11A10000 ^ 0x10A10000 ^ (((v332 ^ LODWORD(STACK[0x918])) << 8) ^ LODWORD(STACK[0x914])) & (v332 ^ LODWORD(STACK[0x918])))));
  v334 = STACK[0x6860];
  LODWORD(STACK[0x65D8]) = v325 - LODWORD(STACK[0x6860]);
  v335 = STACK[0x6840];
  v336 = v334 - LODWORD(STACK[0x6840]);
  LODWORD(STACK[0x6658]) = v336;
  v337 = STACK[0x6920];
  v338 = v335 ^ LODWORD(STACK[0x6920]);
  v339 = v266 + v241 - 1159200993;
  LODWORD(STACK[0x6608]) = v339;
  LODWORD(STACK[0x6840]) = v336 ^ v338 ^ -(v336 ^ v338) ^ (v339 - (v336 ^ v338 ^ v339));
  v340 = v285;
  v341 = ((v269 - v285) ^ 0xE779FC5E) - 155245822 + ((2 * (v269 - v285)) & 0xCEF3F8BC);
  v342 = (v341 ^ 0x390F1E6A) & (2 * (v341 & 0xB1AC5F68)) ^ v341 & 0xB1AC5F68;
  v343 = ((2 * (v341 ^ LODWORD(STACK[0x91C]))) ^ 0x5557EA04) & (v341 ^ LODWORD(STACK[0x91C])) ^ (2
                                                                                               * (v341 ^ LODWORD(STACK[0x91C]))) & 0xAAABF502;
  v344 = (v343 ^ 0x3E000) & (4 * v342) ^ v342;
  v345 = ((4 * (v343 ^ 0xAAA81502)) ^ 0xAAAFD408) & (v343 ^ 0xAAA81502) ^ (4 * (v343 ^ 0xAAA81502)) & 0xAAABF500;
  v346 = v344 ^ 0xAAABF502 ^ (v345 ^ 0xAAABD400) & (16 * v344);
  v347 = ((16 * (v345 ^ 0x2102)) ^ 0xAABF5020) & (v345 ^ 0x2102) ^ (16 * (v345 ^ 0x2102)) & 0xAAABF500;
  v348 = (v346 << 8) & 0xAAABF500 ^ v346 ^ (v347 ^ 0xA502) & ((v346 << 8) ^ 0xABF50200);
  LODWORD(STACK[0x6830]) = v341 ^ (2
                                 * ((v348 << 16) & 0x2AAB0000 ^ v348 ^ ((v348 << 16) ^ 0x75020000) & (((v347 ^ 0xA502) << 8) & 0xAAAB0000 ^ 0xA0000 ^ (((v347 ^ 0xA502) << 8) ^ 0xABF50000) & v347)));
  LODWORD(STACK[0x69E0]) = v298 - v337;
  LODWORD(STACK[0x67F0]) = v302 ^ v337;
  LODWORD(STACK[0x66E0]) = v302 - v304;
  LODWORD(STACK[0x67E0]) = v233 + v304;
  v349 = v233 - v293;
  LODWORD(STACK[0x6860]) = v293 ^ v234;
  LODWORD(STACK[0x66D8]) = v234 - v305;
  v350 = (v292 ^ v305) - 362424350;
  v351 = (v350 ^ LODWORD(STACK[0x920])) & (2 * (v350 & 0xE29FC02E)) ^ v350 & 0xE29FC02E;
  v352 = ((2 * (v350 ^ LODWORD(STACK[0x924]))) ^ 0x4645907C) & (v350 ^ LODWORD(STACK[0x924])) ^ (2
                                                                                               * (v350 ^ LODWORD(STACK[0x924]))) & 0xA322C83E;
  v353 = (v352 ^ 0x2300483A) & (4 * v351) ^ v351;
  v354 = ((4 * (v352 ^ 0xA1224802)) ^ 0x8C8B20F8) & (v352 ^ 0xA1224802) ^ (4 * (v352 ^ 0xA1224802)) & 0xA322C83C;
  v355 = (v354 ^ 0x80020026) & (16 * v353) ^ v353;
  v356 = ((16 * (v354 ^ 0x2320C806)) ^ 0x322C83E0) & (v354 ^ 0x2320C806) ^ (16 * (v354 ^ 0x2320C806)) & 0xA322C830;
  v357 = v355 ^ 0xA322C83E ^ (v356 ^ 0x2220801E) & (v355 << 8);
  LODWORD(STACK[0x6708]) = v350 ^ (2
                                 * ((v357 << 16) & 0x23220000 ^ v357 ^ ((v357 << 16) ^ 0x483E0000) & (((v356 ^ 0x8102481E) << 8) & 0x23220000 ^ 0x1220000 ^ (((v356 ^ 0x8102481E) << 8) ^ 0x22C80000) & (v356 ^ 0x8102481E))));
  v358 = ((v319 - LODWORD(STACK[0x6A20])) ^ 0xFB6BBABB)
       + 13206457
       + ((2 * (v319 - LODWORD(STACK[0x6A20]))) & 0xF6D77576);
  v359 = (v358 ^ 0x88892CB) & (2 * (v358 & 0x892C9ACA)) ^ v358 & 0x892C9ACA;
  v360 = ((2 * (v358 ^ 0x891864B)) ^ 0x37A3902) & (v358 ^ 0x891864B) ^ (2 * (v358 ^ 0x891864B)) & 0x81BD1C80;
  v361 = (v360 ^ LODWORD(STACK[0x934])) & (4 * v359) ^ v359;
  v362 = ((4 * (v360 ^ 0x80850481)) ^ LODWORD(STACK[0x928])) & (v360 ^ 0x80850481) ^ (4 * (v360 ^ 0x80850481)) & 0x81BD1C80;
  v363 = v361 ^ 0x81BD1C81 ^ (v362 ^ 0xB41001) & (16 * v361);
  v364 = (16 * (v362 ^ LODWORD(STACK[0x92C]))) & 0x81BD1C80 ^ 0x802C1481 ^ ((16 * (v362 ^ LODWORD(STACK[0x92C]))) ^ 0x1BD1C810) & (v362 ^ LODWORD(STACK[0x92C]));
  v365 = (v363 << 8) & 0x81BD1C00 ^ v363 ^ ((v363 << 8) ^ 0xBD1C8100) & v364;
  LODWORD(STACK[0x6920]) = v358 ^ (2
                                 * ((v365 << 16) & 0x1BD0000 ^ v365 ^ ((v365 << 16) ^ 0x1C810000) & ((v364 << 8) & 0x81BD0000 ^ 0xA10000 ^ ((v364 << 8) ^ LODWORD(STACK[0x930])) & v364)));
  LODWORD(STACK[0x6628]) = v278 + v319;
  LODWORD(STACK[0x66D0]) = v251 + v278;
  v366 = STACK[0x6550];
  v367 = v251 + 37799843 + LODWORD(STACK[0x6550]);
  v368 = (v367 ^ 0x1F95EB1B) & (2 * (v367 & 0x5E15F310)) ^ v367 & 0x5E15F310;
  v369 = ((2 * (v367 ^ 0x37B7491B)) ^ 0xD3457416) & (v367 ^ 0x37B7491B) ^ (2 * (v367 ^ 0x37B7491B)) & 0x69A2BA0A;
  v370 = (v369 ^ 0x40001209) & (4 * v368) ^ v368;
  v371 = ((4 * (v369 ^ 0x28A28A09)) ^ 0xA68AE82C) & (v369 ^ 0x28A28A09) ^ (4 * (v369 ^ 0x28A28A09)) & 0x69A2BA08;
  v372 = (v371 ^ 0x2082A803) & (16 * v370) ^ v370;
  v373 = ((16 * (v371 ^ 0x49201203)) ^ 0x9A2BA0B0) & (v371 ^ 0x49201203) ^ (16 * (v371 ^ 0x49201203)) & 0x69A2BA00;
  v374 = v372 ^ 0x69A2BA0B ^ (v373 ^ 0x822A000) & (v372 << 8);
  LODWORD(STACK[0x6668]) = v367 ^ (2
                                 * ((v374 << 16) & 0x69A20000 ^ v374 ^ ((v374 << 16) ^ 0x3A0B0000) & (((v373 ^ 0x61801A0B) << 8) & 0x69A20000 ^ 0x49000000 ^ (((v373 ^ 0x61801A0B) << 8) ^ 0xA2BA0000) & (v373 ^ 0x61801A0B))));
  v375 = LODWORD(STACK[0x67B0]) ^ LODWORD(STACK[0x67C0]);
  v376 = STACK[0x6A60];
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x67C0]) - LODWORD(STACK[0x6A60]);
  v377 = STACK[0x65A0];
  LODWORD(STACK[0x6650]) = v376 ^ LODWORD(STACK[0x65A0]);
  v378 = v282 + v377 - 1655346063;
  v379 = (v378 ^ 0xBA89EA63) & (2 * (v378 & 0xA291EB72)) ^ v378 & 0xA291EB72;
  v380 = ((2 * (v378 ^ 0xFB8BB823)) ^ 0xB234A6A2) & (v378 ^ 0xFB8BB823) ^ (2 * (v378 ^ 0xFB8BB823)) & 0x591A5350;
  v381 = (v380 ^ 0x51000201) & (4 * v379) ^ v379;
  v382 = ((4 * (v380 ^ LODWORD(STACK[0x938]))) ^ 0x64694D44) & (v380 ^ LODWORD(STACK[0x938])) ^ (4
                                                                                               * (v380 ^ LODWORD(STACK[0x938]))) & 0x591A5350;
  v383 = (v382 ^ 0x40084151) & (16 * v381) ^ v381;
  v384 = ((16 * (v382 ^ LODWORD(STACK[0x93C]))) ^ 0x91A53510) & (v382 ^ LODWORD(STACK[0x93C])) ^ (16
                                                                                                * (v382 ^ LODWORD(STACK[0x93C]))) & 0x591A5350;
  v385 = v383 ^ 0x591A5351 ^ (v384 ^ 0x11001141) & (v383 << 8);
  LODWORD(STACK[0x6A60]) = v378 ^ (2
                                 * ((v385 << 16) & 0x591A0000 ^ v385 ^ ((v385 << 16) ^ 0x53510000) & (((v384 ^ 0x481A4241) << 8) & 0x591A0000 ^ 0x41080000 ^ (((v384 ^ 0x481A4241) << 8) ^ 0x1A530000) & (v384 ^ 0x481A4241))));
  LODWORD(STACK[0x65A0]) = v292 ^ v317;
  v386 = v317 - LODWORD(STACK[0x6800]);
  v387 = LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x6730]);
  v388 = STACK[0x67D0];
  LODWORD(STACK[0x6800]) = LODWORD(STACK[0x6730]) - LODWORD(STACK[0x67D0]);
  v389 = v388 - LODWORD(STACK[0x6620]);
  v390 = STACK[0x65C0];
  LODWORD(STACK[0x6578]) = LODWORD(STACK[0x6620]) + LODWORD(STACK[0x65C0]);
  LODWORD(STACK[0x6620]) = v324 + v390;
  v391 = STACK[0x65B8];
  LODWORD(STACK[0x6730]) = v324 ^ LODWORD(STACK[0x65B8]);
  v392 = v391 - 1142913394 + v338;
  LODWORD(STACK[0x67B0]) = v392;
  v393 = STACK[0x69B0];
  LODWORD(STACK[0x65B8]) = v340 ^ LODWORD(STACK[0x69B0]);
  v394 = v393 + v316;
  v395 = STACK[0x65B0];
  LODWORD(STACK[0x6598]) = v316 + LODWORD(STACK[0x65B0]);
  v396 = STACK[0x6540];
  LODWORD(STACK[0x65B0]) = LODWORD(STACK[0x6540]) ^ v395;
  v397 = STACK[0x65A8];
  LODWORD(STACK[0x65C0]) = v396 - LODWORD(STACK[0x65A8]);
  v398 = STACK[0x6570];
  LODWORD(STACK[0x67D0]) = v397 - LODWORD(STACK[0x6570]);
  v399 = STACK[0x6690];
  LODWORD(STACK[0x65A8]) = v266 + LODWORD(STACK[0x6690]);
  v400 = STACK[0x6890];
  LODWORD(STACK[0x69B0]) = LODWORD(STACK[0x6890]) + v399;
  v401 = STACK[0x69F0];
  v402 = LODWORD(STACK[0x69F0]) + v400;
  LODWORD(STACK[0x6690]) = v402;
  v403 = STACK[0x6590];
  LODWORD(STACK[0x67C0]) = v401 + LODWORD(STACK[0x6590]);
  v404 = STACK[0x6560];
  LODWORD(STACK[0x6590]) = LODWORD(STACK[0x6560]) ^ v403;
  v405 = STACK[0x65F8];
  LODWORD(STACK[0x6560]) = LODWORD(STACK[0x65F8]) - v404;
  v406 = STACK[0x69D0];
  LODWORD(STACK[0x6890]) = LODWORD(STACK[0x69D0]) - v405;
  v407 = v406 ^ LODWORD(STACK[0x6580]);
  v408 = STACK[0x65C8];
  LODWORD(STACK[0x6580]) += LODWORD(STACK[0x65C8]);
  v409 = STACK[0x6558];
  LODWORD(STACK[0x6420]) = LODWORD(STACK[0x6558]) ^ v408;
  LODWORD(STACK[0x65C8]) = v409 + v398;
  v410 = STACK[0x65D0];
  LODWORD(STACK[0x65F8]) = LODWORD(STACK[0x65D0]) - v366;
  v411 = STACK[0x6588];
  v412 = v410 ^ LODWORD(STACK[0x6588]);
  LODWORD(STACK[0x6550]) = v412;
  v413 = v411 ^ LODWORD(STACK[0x6648]);
  v414 = STACK[0x6568];
  v415 = LODWORD(STACK[0x6648]) - 568101700 + LODWORD(STACK[0x6568]) + 98;
  v416 = (v415 ^ 0x8D8731B8) & (2 * (v415 & 0x2D87B1BC)) ^ v415 & 0x2D87B1BC;
  v417 = ((2 * (v415 ^ 0x8D8C7088)) ^ 0x40178268) & (v415 ^ 0x8D8C7088) ^ (2 * (v415 ^ 0x8D8C7088)) & 0xA00BC134;
  v418 = (v417 ^ 0x38024) & (4 * v416) ^ v416;
  v419 = ((4 * (v417 ^ 0xA0084114)) ^ 0x802F04D0) & (v417 ^ 0xA0084114) ^ (4 * (v417 ^ 0xA0084114)) & 0xA00BC134;
  v420 = v418 ^ 0xA00BC134 ^ (v419 ^ 0x800B0004) & (16 * v418);
  v421 = (16 * (v419 ^ 0x2000C124)) & 0xA00BC130 ^ 0xA003C034 ^ ((16 * (v419 ^ 0x2000C124)) ^ 0xBC1340) & (v419 ^ 0x2000C124);
  v422 = (v420 << 8) & 0xA00BC100 ^ v420 ^ ((v420 << 8) ^ 0xBC13400) & v421;
  v423 = v415 ^ (2
               * ((v422 << 16) & 0x200B0000 ^ v422 ^ ((v422 << 16) ^ 0x41340000) & ((v421 << 8) & STACK[0x940] ^ 0x200A0000 ^ ((v421 << 8) ^ 0xBC10000) & v421)));
  v424 = v387 + 1477802916;
  v425 = ((v387 + 1477802916) ^ 0x8EB0A665) & (2 * ((v387 + 1477802916) & 0xCCC53645)) ^ (v387 + 1477802916) & 0xCCC53645;
  v426 = ((2 * (v424 ^ 0x1FB88267)) ^ 0xA6FB6844) & (v424 ^ 0x1FB88267) ^ (2 * (v424 ^ 0x1FB88267)) & 0xD37DB422;
  v427 = (v426 ^ 0x2392000) & (4 * v425) ^ v425;
  v428 = ((4 * (v426 ^ LODWORD(STACK[0x944]))) ^ 0x4DF6D088) & (v426 ^ LODWORD(STACK[0x944])) ^ (4
                                                                                               * (v426 ^ LODWORD(STACK[0x944]))) & 0xD37DB420;
  v429 = (v428 ^ 0x41749000) & (16 * v427) ^ v427;
  v430 = ((16 * (v428 ^ 0x92092422)) ^ 0x37DB4220) & (v428 ^ 0x92092422) ^ (16 * (v428 ^ 0x92092422)) & 0xD37DB420;
  v431 = v429 ^ 0xD37DB422 ^ (v430 ^ 0x13590002) & (v429 << 8);
  LODWORD(v233) = v424 ^ (2
                        * ((v431 << 16) & 0x537D0000 ^ v431 ^ ((v431 << 16) ^ 0x34220000) & (((v430 ^ 0xC024B402) << 8) & 0x537D0000 ^ 0x2490000 ^ (((v430 ^ 0xC024B402) << 8) ^ 0x7DB40000) & (v430 ^ 0xC024B402))));
  LODWORD(STACK[0x6588]) = v233;
  v432 = LODWORD(STACK[0x6660]) + LODWORD(STACK[0x6820]) + 1816585757;
  LODWORD(STACK[0x6820]) = v432;
  v433 = ((v349 - 1234830629) ^ 0x29ABF723) & (2 * ((v349 - 1234830629) & 0xAD83F74A)) ^ (v349 - 1234830629) & 0xAD83F74A;
  v434 = ((2 * ((v349 - 1234830629) ^ 0x33AED7A7)) ^ 0x3C5A41DA) & ((v349 - 1234830629) ^ 0x33AED7A7) ^ (2 * ((v349 - 1234830629) ^ 0x33AED7A7)) & 0x9E2D20EC;
  v435 = (v434 ^ 0x1C28004D) & (4 * v433) ^ v433;
  v436 = ((4 * (v434 ^ LODWORD(STACK[0x948]))) ^ LODWORD(STACK[0x94C])) & (v434 ^ LODWORD(STACK[0x948])) ^ (4 * (v434 ^ LODWORD(STACK[0x948]))) & 0x9E2D20EC;
  v437 = (v436 ^ 0x182400A9) & (16 * v435) ^ v435;
  v438 = ((16 * (v436 ^ 0x86092049)) ^ 0xE2D20ED0) & (v436 ^ 0x86092049) ^ (16 * (v436 ^ 0x86092049)) & 0x9E2D20E0;
  v439 = v437 ^ 0x9E2D20ED ^ (v438 ^ 0x8200002D) & (v437 << 8);
  v440 = (v349 - 1234830629) ^ (2
                              * ((v439 << 16) & 0x1E2D0000 ^ v439 ^ ((v439 << 16) ^ 0x20ED0000) & (((v438 ^ 0x1C2D202D) << 8) & 0x1E2D0000 ^ 0x120D0000 ^ (((v438 ^ 0x1C2D202D) << 8) ^ 0x2D200000) & (v438 ^ 0x1C2D202D))));
  LODWORD(STACK[0x69F0]) = v440;
  v441 = STACK[0x65E8];
  v442 = (LODWORD(STACK[0x65E8]) ^ v414) - 1167149245;
  LODWORD(STACK[0x6660]) = v442;
  v443 = (v441 ^ v414) - ((2 * v442) & 0x3C34A558);
  v413 -= 771830801;
  v444 = (v413 ^ 0x5FCFCDDC) & (2 * (v413 & 0x9FEFC1DE)) ^ v413 & 0x9FEFC1DE;
  v445 = ((2 * (v413 ^ 0x749CCF44)) ^ 0xD6E61D34) & (v413 ^ 0x749CCF44) ^ (2 * (v413 ^ 0x749CCF44)) & 0xEB730E9A;
  v446 = (v445 ^ 0xC2620C10) & (4 * v444) ^ v444;
  v447 = ((4 * (v445 ^ 0x2911028A)) ^ 0xADCC3A68) & (v445 ^ 0x2911028A) ^ (4 * (v445 ^ 0x2911028A)) & 0xEB730E98;
  v448 = (v447 ^ 0xA9400A12) & (16 * v446) ^ v446;
  v449 = ((16 * (v447 ^ 0x42330492)) ^ 0xB730E9A0) & (v447 ^ 0x42330492) ^ (16 * (v447 ^ 0x42330492)) & 0xEB730E90;
  v450 = v448 ^ 0xEB730E9A ^ (v449 ^ 0xA330081A) & (v448 << 8);
  LODWORD(STACK[0x69D0]) = v413 ^ (2
                                 * ((v450 << 16) & 0x6B730000 ^ v450 ^ ((v450 << 16) ^ 0xE9A0000) & (((v449 ^ 0x4843061A) << 8) & 0xEB730000 ^ 0x8710000 ^ (((v449 ^ 0x4843061A) << 8) ^ 0x730E0000) & (v449 ^ 0x4843061A))));
  v451 = (((v440 & 0x800000 ^ 0x40F1000A) & 0xFEFFFFFF | ((((v440 & 0x800000u) >> 23) & 1) << 24)) - 1383217041) ^ 0xEEFEC879;
  LODWORD(STACK[0x6478]) = v233 ^ 0xD4640CAD;
  v452 = v233 ^ 0xD4640CAD ^ (v443 + 1485375983);
  if ((v451 & v452) != 0)
    v451 = -v451;
  v453 = v451 + v452;
  v454 = STACK[0x6760];
  LODWORD(STACK[0x6648]) = LODWORD(STACK[0x6658]) ^ LODWORD(STACK[0x6760]);
  v455 = STACK[0x6790];
  v456 = LODWORD(STACK[0x6790]) ^ v454;
  LODWORD(STACK[0x6658]) = v456;
  v457 = STACK[0x6770];
  LODWORD(STACK[0x6558]) = v455 - LODWORD(STACK[0x6770]);
  v458 = v457 - LODWORD(STACK[0x6680]);
  v459 = STACK[0x6630];
  LODWORD(STACK[0x6568]) = LODWORD(STACK[0x6680]) - LODWORD(STACK[0x6630]);
  v460 = STACK[0x69C0];
  v461 = v459 - LODWORD(STACK[0x69C0]);
  LODWORD(STACK[0x6630]) = v461;
  v462 = v460 ^ LODWORD(STACK[0x65F0]);
  v463 = v441 + LODWORD(STACK[0x6618]);
  v464 = LODWORD(STACK[0x6A70]) - LODWORD(STACK[0x6618]);
  v465 = STACK[0x6638];
  v466 = LODWORD(STACK[0x6638]) + LODWORD(STACK[0x65F0]) + 1630816106;
  LODWORD(STACK[0x6680]) = v466;
  LODWORD(STACK[0x6288]) = v464;
  LODWORD(STACK[0x6760]) = v464 ^ 0x733E613D;
  v467 = v464 ^ 0x733E613D ^ v432 ^ v466 ^ (v456 - 1667525578);
  v468 = LODWORD(STACK[0x6A50]) + 694727555;
  v469 = STACK[0x6610];
  LODWORD(STACK[0x69C0]) = v241 - LODWORD(STACK[0x6610]);
  v470 = STACK[0x6600];
  LODWORD(STACK[0x6570]) = v469 - LODWORD(STACK[0x6600]);
  v471 = STACK[0x65D8];
  v472 = v470 - LODWORD(STACK[0x65D8]);
  v473 = v389 + 860075480;
  LODWORD(STACK[0x6268]) = v472;
  v472 ^= 0xEB4381D8;
  LODWORD(STACK[0x6610]) = v472;
  LODWORD(STACK[0x6480]) = v468 ^ 0x96B9B10E;
  LODWORD(STACK[0x6280]) = v461 - 1508094396;
  LODWORD(STACK[0x6400]) = v402 + 648237981;
  v474 = v467 ^ (v389 + 860075480) ^ v468 ^ 0x96B9B10E ^ (v461 - 1508094396) ^ (v402 + 648237981) ^ (v472 - ((2 * v472) & 0xF7BD8D2) - 2017596311);
  v475 = STACK[0x68A0];
  LODWORD(STACK[0x6540]) = LODWORD(STACK[0x68A0]) + v471;
  v476 = STACK[0x6720];
  LODWORD(STACK[0x6600]) = v475 + LODWORD(STACK[0x6720]);
  v477 = STACK[0x66B0];
  LODWORD(STACK[0x6618]) = v476 - LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x6720]) = v394 - 462583118;
  v478 = v386 - 559596295;
  v479 = v476 - v477 + 882107655;
  LODWORD(STACK[0x6258]) = v479;
  LODWORD(STACK[0x6460]) = v423;
  v480 = v423 ^ 0xFF065127;
  v481 = (LODWORD(STACK[0x6440]) - ((2 * LODWORD(STACK[0x6440])) & 0x9BC55062) - 840783823) ^ v474 ^ (v394 - 462583118) ^ v479 ^ (v386 - 559596295) ^ v392 ^ v423 ^ 0xFF065127 ^ (((2 * (v440 & 0xFF7FFFFF ^ 0xB4C31E8)) | 0x62B71098) - (v440 & 0xFF7FFFFF ^ 0xB4C31E8) - 828082252) ^ v453 ^ 0xD39D936B;
  v482 = v481 - ((2 * v481) & 0x3C34A558);
  v483 = LODWORD(STACK[0x6678]) - LODWORD(STACK[0x65E0]);
  v484 = STACK[0x6990];
  v485 = LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6990]);
  LODWORD(STACK[0x6678]) = v485;
  v486 = LODWORD(STACK[0x6640]) - v484;
  v487 = LODWORD(STACK[0x6640]) + LODWORD(STACK[0x6688]);
  v488 = STACK[0x67A0];
  LODWORD(STACK[0x68A0]) = LODWORD(STACK[0x67A0]) ^ LODWORD(STACK[0x6688]);
  v489 = STACK[0x6980];
  LODWORD(STACK[0x6A50]) = LODWORD(STACK[0x6980]) - v488;
  v490 = STACK[0x6670];
  LODWORD(STACK[0x65F0]) = v489 ^ LODWORD(STACK[0x6670]);
  v491 = LODWORD(STACK[0x6AC0]) + v490;
  LODWORD(STACK[0x6770]) = v487 - 1282427431;
  LODWORD(STACK[0x6688]) = v375 + 623182930;
  v492 = v458 + 1352166253;
  LODWORD(STACK[0x64E8]) = v375;
  LODWORD(STACK[0x62A0]) = v463;
  v493 = v463 ^ 0x26DEFABE;
  LODWORD(STACK[0x67A0]) = v491 ^ 0x7010AF2F;
  v494 = STACK[0x67E0];
  v495 = LODWORD(STACK[0x69A0]) + 1436946355;
  LODWORD(STACK[0x6980]) = v495 ^ 0x835A228D;
  v496 = v491 ^ 0x7010AF2F ^ (v458 + 1352166253) ^ v463 ^ 0x26DEFABE ^ (v487 - 1282427431) ^ v494 ^ (v375 - ((2 * (v375 + 623182930)) & 0x445A0D06) - 950924587) ^ v495 ^ 0x835A228D ^ (v482 - 1642442068);
  v497 = LODWORD(STACK[0x67F0]) ^ 0x57E8F64C;
  LODWORD(STACK[0x62E0]) = v407;
  LODWORD(STACK[0x6670]) = v407 ^ 0x9A08F0E3;
  LODWORD(STACK[0x6790]) = v412 ^ 0x9D5C9322;
  v498 = v407 ^ 0x9A08F0E3 ^ v412 ^ 0x9D5C9322 ^ v497 ^ ((v496 ^ 0x26B9B458)
                                                       - 2 * ((v496 ^ 0x26B9B458) & 0x1E1A52AE ^ v496 & 2)
                                                       - 1642442068);
  v499 = v498 - ((2 * v498) & 0xB438A902);
  v500 = LODWORD(STACK[0x6548]) - LODWORD(STACK[0x6A80]);
  v501 = STACK[0x66A8];
  LODWORD(STACK[0x6640]) = LODWORD(STACK[0x66A0]) + LODWORD(STACK[0x66A8]);
  v502 = STACK[0x6970];
  LODWORD(STACK[0x66A8]) = LODWORD(STACK[0x6970]) - v501;
  v503 = STACK[0x6750];
  v504 = STACK[0x66B8];
  LODWORD(STACK[0x66A0]) = LODWORD(STACK[0x66B8]) ^ v465;
  v505 = STACK[0x6698];
  v506 = v504 ^ LODWORD(STACK[0x6698]);
  v507 = STACK[0x6880];
  v508 = v477 ^ LODWORD(STACK[0x6AA0]);
  LODWORD(STACK[0x66B0]) = v508;
  v509 = v506 - 75742766;
  LODWORD(STACK[0x66B8]) = v506 - 75742766;
  v510 = (v507 ^ v505) + 1505823111;
  v511 = v503 - v502 + 1419693101;
  v512 = LODWORD(STACK[0x65C8]) + 1122609376;
  v513 = v462 + 1167624165;
  v514 = LODWORD(STACK[0x69E0]) - 514260035;
  LODWORD(STACK[0x62D8]) = v500;
  v515 = v500 ^ 0x8E0D01FB;
  v516 = STACK[0x6560];
  LODWORD(STACK[0x6488]) = LODWORD(STACK[0x6560]) + 183747952;
  LODWORD(STACK[0x6698]) = v483;
  v483 -= 1201391906;
  v517 = v500 ^ 0x8E0D01FB ^ v514 ^ v510 ^ v512 ^ v509 ^ (v516 + 183747952) ^ v483 ^ (v462 + 1167624165);
  v518 = LODWORD(STACK[0x67C0]) ^ 0x6C56EAAC;
  LODWORD(STACK[0x64C0]) = v508 - 1526316371;
  v519 = LODWORD(STACK[0x68B0]) - 659778775;
  LODWORD(STACK[0x64E0]) = v519;
  v520 = STACK[0x67D0];
  v521 = v517 ^ v518 ^ (v508 - 1526316371) ^ v511 ^ v519 ^ LODWORD(STACK[0x67D0]);
  v522 = LODWORD(STACK[0x69D0]) ^ 0x8731886B;
  LODWORD(STACK[0x64D0]) = v522;
  v523 = v521 ^ v522 ^ 0xBDD0FEB8 ^ (v499 - 635677567);
  v524 = STACK[0x6810];
  LODWORD(STACK[0x69A0]) = v523;
  v525 = v524 ^ 0xF084AC1;
  LODWORD(STACK[0x6990]) = v524 ^ 0xF084AC1 ^ -(v524 ^ 0xF084AC1) ^ (v523 + (v524 ^ 0xF0F7B53E ^ v523) + 1);
  v526 = STACK[0x66F0];
  v527 = LODWORD(STACK[0x66F0]) - v503;
  LODWORD(STACK[0x6290]) = v493;
  LODWORD(STACK[0x63F0]) = v527;
  LODWORD(STACK[0x65D0]) = v527 ^ 0x12781D8D;
  LODWORD(STACK[0x6750]) = v510;
  v528 = v527 ^ 0x12781D8D ^ v510 ^ ((v491 ^ 0x11F5027C) + 560855909 - v493 + 1);
  v529 = v494 ^ 0x1600D028;
  LODWORD(STACK[0x65C8]) = v486 ^ 0xC6029AFC;
  v530 = v526 ^ 0xF8DC93FF ^ LODWORD(STACK[0x6A10]);
  v531 = LODWORD(STACK[0x6578]) ^ 0x9ACEC1DB;
  LODWORD(STACK[0x6490]) = v525;
  v532 = (v486 ^ 0xC6029AFC) - v485 - 723952556 + (v528 ^ v494 ^ 0x1600D028) - v525;
  v533 = STACK[0x6540];
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x6540]) ^ 0x8CD57B77;
  LODWORD(STACK[0x65E0]) = v530;
  LODWORD(STACK[0x6970]) = v531;
  v534 = v530 - (v533 ^ 0x8CD57B77) + (v532 ^ v531) + 2 * (v532 & v531);
  v535 = LODWORD(STACK[0x6580]) + 839941094;
  v536 = STACK[0x66E8];
  v537 = v507 + LODWORD(STACK[0x66E8]) + 1011567591;
  LODWORD(STACK[0x62A8]) = v492;
  LODWORD(STACK[0x6458]) = v537;
  v538 = (v534 ^ v492) + v537;
  v539 = LODWORD(STACK[0x6730]) ^ 0xF518FD0A;
  LODWORD(STACK[0x6470]) = v539;
  LODWORD(STACK[0x6448]) = v535;
  v540 = v535 - LODWORD(STACK[0x69C0]) - 1205607797 + (v538 ^ v539);
  v541 = LODWORD(STACK[0x6590]) + 81391444;
  v542 = LODWORD(STACK[0x6558]) + 1429901561;
  v543 = LODWORD(STACK[0x66A8]) ^ 0xFFEC2CC8;
  LODWORD(STACK[0x6220]) = v542;
  LODWORD(STACK[0x6218]) = v541;
  LODWORD(STACK[0x64A0]) = v512;
  LODWORD(STACK[0x6468]) = v543;
  v544 = LODWORD(STACK[0x6820])
       + v541
       + v542
       + v512
       + v543
       - (((v468 ^ 0xB004702E) - 649969952) ^ ((v468 ^ 0xF4E2CCF6) - 1650163192) ^ ((v468 ^ 0x721DB722) + 459012564));
  v545 = LODWORD(STACK[0x65C0]) - 2035607183;
  v546 = LODWORD(STACK[0x6598]) ^ 0x3EDBB203;
  LODWORD(STACK[0x6260]) = v478;
  v547 = v544 + v478 - LODWORD(STACK[0x6A50]);
  LODWORD(STACK[0x6450]) = v546;
  LODWORD(STACK[0x65C0]) = v545;
  v548 = v547 + v546 + v545;
  v549 = LODWORD(STACK[0x6620]) ^ 0x3189B796;
  v550 = v520 ^ ((v540 ^ v549) - LODWORD(STACK[0x66F8])) ^ 0x41CEA821;
  v551 = LODWORD(STACK[0x6830]) ^ 0xDA3E3F5;
  LODWORD(STACK[0x66F0]) = v551;
  v552 = v548 - 521308393 + (v550 ^ v551);
  v553 = STACK[0x68C0];
  v554 = LODWORD(STACK[0x68D0]) - 2085613587;
  LODWORD(STACK[0x64B0]) = v536 - LODWORD(STACK[0x68C0]);
  v555 = v536 - v553 - 593773830;
  LODWORD(STACK[0x66E8]) = v554;
  LODWORD(STACK[0x6298]) = v497;
  LODWORD(STACK[0x6230]) = v555;
  v556 = LODWORD(STACK[0x65A8]) ^ 0xE0289ABA;
  LODWORD(STACK[0x6208]) = v556;
  LODWORD(STACK[0x62C0]) = v515;
  v557 = v515 - v556 + (v555 ^ v497 ^ v554 ^ v552);
  v558 = LODWORD(STACK[0x65B8]) - 1838278882;
  v559 = LODWORD(STACK[0x6628]) ^ 0xAA621962;
  LODWORD(STACK[0x6228]) = v558;
  LODWORD(STACK[0x65B8]) = v559;
  LODWORD(STACK[0x6270]) = v473;
  v560 = (v559 ^ v558 ^ v473 ^ v557) + (LODWORD(STACK[0x6588]) ^ 0x4A7E5E01);
  v561 = LODWORD(STACK[0x6570]) + 808860577;
  LODWORD(STACK[0x6880]) = v480;
  LODWORD(STACK[0x65A8]) = v561;
  v562 = v561 ^ v480 ^ 0x929462F3 ^ v560;
  v563 = LODWORD(STACK[0x6600]) ^ 0x38AE11B3;
  v564 = LODWORD(STACK[0x6550]) ^ 0x346C18E;
  LODWORD(STACK[0x65D8]) = v563;
  v565 = LODWORD(STACK[0x68A0]) ^ 0x379BAFEB;
  v566 = v563 + v564 + v565 + v562;
  v567 = LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6A70]);
  v568 = LODWORD(STACK[0x6740]) + LODWORD(STACK[0x6780]);
  v569 = LODWORD(STACK[0x6A40]) + LODWORD(STACK[0x6740]) + 633606264;
  v570 = LODWORD(STACK[0x65F0]) - 1662346972;
  v571 = LODWORD(STACK[0x6420]) ^ 0xF1A3AF6F;
  LODWORD(STACK[0x6438]) = v571;
  LODWORD(STACK[0x6590]) = v570;
  LODWORD(STACK[0x6210]) = v569;
  v572 = STACK[0x6930];
  v573 = v570 - v571 - v569 + (LODWORD(STACK[0x6930]) ^ 0x6E031797) + (v566 ^ LODWORD(STACK[0x6660]));
  v574 = v483 ^ LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x6740]) = v513;
  v575 = STACK[0x6710];
  v576 = (v574 ^ v513 ^ (v573 + 1)) - (LODWORD(STACK[0x6710]) + LODWORD(STACK[0x6670]));
  v577 = LODWORD(STACK[0x68F0]) + 179383464;
  v578 = LODWORD(STACK[0x6850]) ^ v553;
  v579 = LODWORD(STACK[0x6A30]) + LODWORD(STACK[0x6850]);
  LODWORD(STACK[0x62C8]) = v579;
  v579 ^= 0xF283522F;
  v580 = LODWORD(STACK[0x68B0]) + LODWORD(STACK[0x67B0]);
  LODWORD(STACK[0x6238]) = v579;
  v581 = v580
       + v579
       + (((v577 ^ 0xBE294AA5) - 744978079) ^ ((v577 ^ 0xBEBBD229) - 754314771) ^ ((v577 ^ 0x7AF75A8B) + 390502735))
       + (LODWORD(STACK[0x6A60]) ^ 0x4D7AB22F)
       + ((v576 - 553352404) ^ 0x7FFF77FF)
       + ((2 * (v576 - 553352404)) & 0xFFFEEFFE);
  v582 = LODWORD(STACK[0x6A80]) + LODWORD(STACK[0x6870]);
  v583 = STACK[0x6700];
  v584 = LODWORD(STACK[0x6700]) + LODWORD(STACK[0x6870]);
  LODWORD(STACK[0x61DC]) = v584;
  v585 = v584 - 2 * v583;
  v586 = (LODWORD(STACK[0x6840]) + LODWORD(STACK[0x6608])) ^ LODWORD(STACK[0x6608]);
  v587 = STACK[0x6608];
  v588 = v585 - v586 + (LODWORD(STACK[0x69D0]) ^ 0x5D2DDCEA);
  v589 = LODWORD(STACK[0x6640]) - 56180248;
  LODWORD(STACK[0x6588]) = v589;
  v590 = v588 + 1070910229 + ((v581 + 1087969640) ^ v589);
  v591 = v567 - 840996476;
  v592 = LODWORD(STACK[0x66D8]) + 533972359;
  LODWORD(STACK[0x61F8]) = v592;
  LODWORD(STACK[0x61E0]) = v591;
  v593 = v592 ^ v591 ^ v590;
  v594 = LODWORD(STACK[0x6AA0]) ^ 0x4B91EEF8;
  LODWORD(STACK[0x62B8]) = v511;
  LODWORD(STACK[0x6598]) = v594;
  v595 = LODWORD(STACK[0x66E0]) + 1371911498;
  LODWORD(STACK[0x6418]) = v568;
  LODWORD(STACK[0x66A8]) = v568 ^ 0xE5958842;
  LODWORD(STACK[0x6580]) = v595;
  v596 = LODWORD(STACK[0x6760])
       - LODWORD(STACK[0x6618])
       - 882107655
       + (v568 ^ 0xE5958842 ^ v595 ^ (v594 - v516 - 183747952 + ((v593 - v511) ^ v587)));
  v597 = LODWORD(STACK[0x65A0]) + 448942712;
  LODWORD(STACK[0x6200]) = v597;
  HIDWORD(v598) = v597;
  LODWORD(v598) = v597;
  v599 = LODWORD(STACK[0x6630]) - LODWORD(STACK[0x6658]) - LODWORD(STACK[0x66B0]);
  v600 = LODWORD(STACK[0x6648]) ^ 0xBC5A8D99;
  LODWORD(STACK[0x65A0]) = v600;
  v601 = v599 - v600 + 1685747553 + (__ROR4__((v598 >> 29) ^ __ROR4__(v596, 29) ^ 0x8BABBD7A, 3) ^ 0x517577AF);
  v602 = LODWORD(STACK[0x65B0]) - 1196936783;
  v603 = 514260035 - LODWORD(STACK[0x69E0]);
  LODWORD(STACK[0x62D0]) = v518;
  LODWORD(STACK[0x61F0]) = v602;
  v604 = v603 - v518 + LODWORD(STACK[0x6720]) + v602;
  v582 -= 301221521;
  LODWORD(STACK[0x6570]) = v582;
  v605 = STACK[0x6770];
  v606 = STACK[0x65F8];
  v607 = STACK[0x66A0];
  v608 = STACK[0x6650];
  v609 = LODWORD(STACK[0x6650])
       + (((LODWORD(STACK[0x6920]) ^ 0x3553CF8B) - 2085993348) ^ ((LODWORD(STACK[0x6920]) ^ 0x453CC760) - 205173615) ^ ((LODWORD(STACK[0x6920]) ^ 0xF903AB23) + 1341792468))
       + ((v607 - v606 - 658294215 + ((v604 + (v601 ^ v582)) ^ v605)) ^ 0xFF7FD831)
       + ((2 * (v607 - v606 - 658294215 + ((v604 + (v601 ^ v582)) ^ v605))) & 0xFEFFB062);
  v610 = ((LODWORD(STACK[0x6708]) ^ 0xCC2D2203) - 603952566) ^ ((LODWORD(STACK[0x6708]) ^ 0x39B1AA1E) + 698147413) ^ ((LODWORD(STACK[0x6708]) ^ 0x5102D84F) + 1093636102);
  LODWORD(STACK[0x63E8]) = v495;
  v611 = STACK[0x6668];
  v612 = LODWORD(STACK[0x6680])
       - (((v495 ^ 0x6A670005) + 381869432) ^ ((v495 ^ 0x465013F3) + 989187714) ^ ((v495 ^ 0x3DF95388) + 1096584955))
       + (((v611 ^ 0xF276D55B) + 1672249911) ^ ((v611 ^ 0x355135F4) - 1534369126) ^ ((v611 ^ 0x1A7367A9) - 1951846203))
       - v610;
  v613 = LODWORD(STACK[0x6860]) - 159119909;
  LODWORD(STACK[0x6560]) = v613;
  v614 = v612 - 711990086 + ((v609 + 1175181839) ^ v613);
  v615 = LODWORD(STACK[0x6568]) - 972703024;
  LODWORD(STACK[0x61D0]) = v615;
  v616 = LODWORD(STACK[0x66B8]) ^ v615 ^ v614;
  v617 = LODWORD(STACK[0x6AC0]) + LODWORD(STACK[0x68E0]);
  v618 = LODWORD(STACK[0x66D0]) + 461661283;
  v619 = STACK[0x6900];
  v620 = LODWORD(STACK[0x6900]) + LODWORD(STACK[0x68E0]) - 1760529896;
  v621 = -648237981 - LODWORD(STACK[0x6690]);
  LODWORD(STACK[0x61C0]) = v620;
  v622 = v621 - v620;
  v623 = LODWORD(STACK[0x6800]) ^ 0x12B18688;
  LODWORD(STACK[0x6558]) = v623;
  LODWORD(STACK[0x6568]) = v618;
  v624 = v622 + v623 - v618 + LODWORD(STACK[0x6688]) + v616;
  v625 = LODWORD(STACK[0x6A00]) - v619 - 235164136;
  v626 = LODWORD(STACK[0x6940]) - 20093465;
  LODWORD(STACK[0x6578]) = v578;
  LODWORD(STACK[0x61C8]) = v625;
  LODWORD(STACK[0x6550]) = v626;
  LODWORD(STACK[0x66E0]) = v578 ^ 0x66D88161;
  v627 = v625 ^ v626 ^ v578 ^ 0x66D88161 ^ v624;
  LODWORD(STACK[0x6278]) = v529;
  v628 = ((v529 + 482727220) ^ 0x99067381) & (2 * ((v529 + 482727220) & 0xDC577B05)) ^ (v529 + 482727220) & 0xDC577B05;
  v629 = ((2 * ((v529 + 482727220) ^ 0x81825781)) ^ 0xBBAA5908) & ((v529 + 482727220) ^ 0x81825781) ^ (2 * ((v529 + 482727220) ^ 0x81825781)) & 0x5DD52C84;
  v630 = (v629 ^ 0x15800880) & (4 * v628) ^ v628;
  v631 = ((4 * (v629 ^ 0x44552484)) ^ 0x7754B210) & (v629 ^ 0x44552484) ^ (4 * (v629 ^ 0x44552484)) & 0x5DD52C84;
  v632 = (v631 ^ 0x55542000) & (16 * v630) ^ v630;
  v633 = ((16 * (v631 ^ 0x8810C84)) ^ 0xDD52C840) & (v631 ^ 0x8810C84) ^ (16 * (v631 ^ 0x8810C84)) & 0x5DD52C80;
  v634 = v632 ^ 0x5DD52C84 ^ (v633 ^ 0x5D500800) & (v632 << 8);
  v635 = (v634 << 16) & 0x5DD50000 ^ v634 ^ ((v634 << 16) ^ 0x2C840000) & (((v633 ^ 0x852484) << 8) & 0x5DD50000 ^ 0x8D10000 ^ (((v633 ^ 0x852484) << 8) ^ 0x552C0000) & (v633 ^ 0x852484));
  v636 = STACK[0x66C8];
  LODWORD(STACK[0x69D0]) = (LODWORD(STACK[0x69F0]) ^ 0x9183B690) - LODWORD(STACK[0x66C8]) - 1473620706 + v627;
  LODWORD(STACK[0x65B0]) = v565;
  LODWORD(STACK[0x64B8]) = v549;
  v637 = STACK[0x6910];
  v638 = STACK[0xD880];
  v639 = *(_QWORD *)(STACK[0xD880] + 8 * (0xCA439FDC % STACK[0x6910]));
  v640 = ((v549 - v565 + 1159165971) ^ 0xFF7FEB57)
       + ((2 * (v549 - v565 + 1159165971)) & 0xFEFFD6AE)
       - 713242673
       + (((v611 ^ 0xDB51CAFC) + 1250663826) ^ ((v611 ^ 0x4901E21A) - 656689800) ^ ((v611 ^ 0x4F04AFE0) - 555812722));
  v641 = ((((v639 ^ 0x33CA6F14828FF0A8) + 0x439AD82245711CD5) ^ ((v639 ^ 0x9B9D771CD663F97ALL) - 0x14323FD5EE62EAF9) ^ ((v639 ^ 0x7689C6D68A32D70CLL) + 0x6D971E04DCC3B71))
        + 0x5171961894924FF1)
       % STACK[0x6910];
  LODWORD(v639) = (v640 ^ 0xF4088459) & (2 * (v640 & 0xF4A2A551)) ^ v640 & 0xF4A2A551;
  v642 = ((2 * (v640 ^ 0x740C8E59)) ^ 0x15C5610) & (v640 ^ 0x740C8E59) ^ (2 * (v640 ^ 0x740C8E59)) & 0x80AE2B08;
  LODWORD(v639) = (v642 ^ 0x2C0200) & (4 * v639) ^ v639;
  v643 = ((4 * (v642 ^ 0x80A22908)) ^ 0x2B8AC20) & (v642 ^ 0x80A22908) ^ (4 * (v642 ^ 0x80A22908)) & 0x80AE2B08;
  LODWORD(v639) = (v643 ^ 0xA82808) & (16 * v639) ^ v639;
  v644 = ((16 * (v643 ^ 0x80060308)) ^ 0xAE2B080) & (v643 ^ 0x80060308) ^ (16 * (v643 ^ 0x80060308)) & 0x80AE2B00;
  LODWORD(v639) = v639 ^ 0x80AE2B08 ^ (v644 ^ 0xA22008) & ((_DWORD)v639 << 8);
  v645 = (4
        * (((_DWORD)v639 << 16) & 0xAE0000 ^ v639 ^ (((_DWORD)v639 << 16) ^ 0x2B080000) & (((v644 ^ 0x800C0B08) << 8) & 0x80AE0000 ^ 0x840000 ^ (((v644 ^ 0x800C0B08) << 8) ^ 0x2E2B0000) & (v644 ^ 0x800C0B08)))) ^ (2 * v640);
  v646 = (((v645 ^ 0x653BB560) + 1128694946) ^ ((v645 ^ 0x3B115DB4) + 493644918) ^ ((v645 ^ 0xB5F70E56) - 1819656296))
       + 564641020;
  LODWORD(v639) = (v646 ^ 0xED97C365) & (2 * (v646 & 0xEDD7E868)) ^ v646 & 0xEDD7E868;
  v647 = ((2 * (v646 ^ 0x6EB58335)) ^ 0x6C4D6BA) & (v646 ^ 0x6EB58335) ^ (2 * (v646 ^ 0x6EB58335)) & 0x83626B5C;
  LODWORD(v639) = (v647 ^ 0x2404A05) & (4 * v639) ^ v639;
  v648 = ((4 * (v647 ^ 0x81222945)) ^ 0xD89AD74) & (v647 ^ 0x81222945) ^ (4 * (v647 ^ 0x81222945)) & 0x83626B5C;
  LODWORD(v639) = (v648 ^ 0x1002949) & (16 * v639) ^ v639;
  v649 = ((16 * (v648 ^ 0x82624209)) ^ 0x3626B5D0) & (v648 ^ 0x82624209) ^ (16 * (v648 ^ 0x82624209)) & 0x83626B50;
  LODWORD(v639) = v639 ^ 0x83626B5D ^ (v649 ^ 0x222210D) & ((_DWORD)v639 << 8);
  v650 = *(_QWORD *)(v638
                   + 8
                   * (((((*(_QWORD *)(v638 + 8 * v641) ^ 0x1B6C783E9FB7A4E4) - 0x2BB83865B48E86F6) ^ ((*(_QWORD *)(v638 + 8 * v641) ^ 0xD6D3D024DA41FB19) + 0x19F86F800E8726F5) ^ ((*(_QWORD *)(v638 + 8 * v641) ^ 0x136176C49B288123) - 0x23B5369FB011A331))
                     - 0x11F56179F902F1BALL)
                    % STACK[0x6910]));
  STACK[0x6A80] = STACK[0xD880];
  v651 = *(_QWORD *)(v638
                   + 8
                   * (((((v650 ^ 0xB7933FCA784F74EFLL) + 0xC3A6B2FF3B10224) ^ ((v650 ^ 0x6C0C759E0A157540)
                                                                               - 0x285ADE847E14FC73) ^ ((v650 ^ 0x541948AAC84DF71) - 0x41173F90D8855642))
                     - 0x65778A3B1417A762)
                    % v637));
  LODWORD(STACK[0x64C8]) = v577;
  LODWORD(STACK[0x61B0]) = v577 ^ 0x924E3C3A;
  v652 = v646 ^ (2
               * (((_DWORD)v639 << 16) & 0x3620000 ^ v639 ^ (((_DWORD)v639 << 16) ^ 0x6B5D0000) & (((v649 ^ 0x81404A0D) << 8) & 0x3620000 ^ (((v649 ^ 0x81404A0D) << 8) ^ 0x626B0000) & (v649 ^ 0x81404A0D) ^ 0x1000000)));
  LODWORD(v651) = ((((v651 ^ 0xAC7504DBF3053F46) - 0x439EDF4BA292B226) ^ ((v651 ^ 0xE872F25BBA5C9A20)
                                                                            - 0x79929CBEBCB1740) ^ ((v651 ^ 0x9AD9285E97877BB8) - 0x7532F3CEC610F6D8))
                 + 0x3135054EA1670EEDLL)
                % v637;
  LODWORD(STACK[0x61BC]) = v608 - 2061444487;
  LODWORD(STACK[0x6AA0]) = LODWORD(STACK[0x69C0]) + 1205607797;
  LODWORD(STACK[0x6540]) = v607 + 823670033;
  LODWORD(STACK[0x6548]) = v575 + 553352404;
  LODWORD(STACK[0x66D8]) = v586 - 770428133;
  LODWORD(STACK[0x66D0]) = v636 + 1473620706;
  LODWORD(STACK[0x6530]) = v611 ^ 0x6E25A892;
  LODWORD(v639) = LODWORD(STACK[0x6890]) ^ 0x26B5C4AC;
  LODWORD(STACK[0x6A70]) = ((((v651 - ((2 * v651) & 0x10BB6280) + 677228864) ^ 0x9C457142) - 1262495945) ^ (((v651 - ((2 * v651) & 0x10BB6280) + 677228864) ^ 0x9CF319A7) - 1274429484) ^ (((v651 - ((2 * v651) & 0x10BB6280) + 677228864) ^ 0x28EBD9A5) + 1146834))
                         + 118634739;
  v653 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AB0])) - 8);
  LODWORD(STACK[0x66A0]) = LODWORD(STACK[0x6678]) + 723952556;
  LODWORD(STACK[0x6528]) = v606 + 1481964248;
  LODWORD(STACK[0x61E8]) = v585;
  LODWORD(STACK[0x66C8]) = v585 + 300482096;
  LODWORD(STACK[0x62B0]) = v617;
  LODWORD(STACK[0x6538]) = v617 ^ 0x4A2CC5A3;
  LODWORD(STACK[0x61A8]) = v639;
  LODWORD(STACK[0x69E0]) = v639 + (v617 ^ 0x4A2CC5A3);
  LODWORD(STACK[0x68F0]) = v652;
  LODWORD(STACK[0x68E0]) = ((v529 + 482727220) ^ v605 ^ v577 ^ 0x924E3C3A ^ (2 * v635)) >> 1;
  LODWORD(STACK[0x6940]) = 2 * ((v636 + 1299866111 + (v572 ^ 0x11FCE868)) ^ v533);
  return v653();
}

uint64_t sub_100C9B8D0@<X0>(int a1@<W8>)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  int v4;

  v2 = STACK[0x6A70];
  v3 = STACK[0x6AB0];
  LODWORD(STACK[0x6AC0]) = LODWORD(STACK[0x6A70]) < v1;
  if (LODWORD(STACK[0x6AC0]) != (a1 + 10387148) < 0x7B95028)
    v4 = STACK[0x6AC0];
  else
    v4 = a1 + 10387148 < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((15058 * (v4 ^ 1)) ^ v3)) - 8))();
}

uint64_t sub_100C9E710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  v5 = LODWORD(STACK[0x6A20]) - LODWORD(STACK[0x6A00]);
  LODWORD(STACK[0x6410]) = LODWORD(STACK[0x6960]) - LODWORD(STACK[0x6A10]) - 2072910453;
  LODWORD(STACK[0x6700]) = LODWORD(STACK[0x6930]) ^ 0x5E37D898;
  LODWORD(STACK[0x6640]) = LODWORD(STACK[0x6708]) ^ 0xEFD2B7B5;
  v5 += 13122398;
  LODWORD(STACK[0x6780]) = LODWORD(STACK[0x69F0]) ^ 0xF99E43C;
  LODWORD(STACK[0x61A0]) = v5;
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x69D0]) ^ v5;
  LODWORD(STACK[0x6670]) = LODWORD(STACK[0x68F0]) ^ 0xC4065E8D;
  LODWORD(STACK[0x6890]) = LODWORD(STACK[0x68E0]) ^ 0xC214F5CC;
  STACK[0x6AC0] = STACK[0xD880];
  LODWORD(STACK[0x6AB0]) = (((LODWORD(STACK[0x6950]) ^ 0x398A2BA0) - 405035990) ^ ((LODWORD(STACK[0x6950]) ^ 0xAD866C75)
                                                                                 + 1943528445) ^ ((LODWORD(STACK[0x6950]) ^ 0x9004F485)
                                                                                                + 1314224909))
                         + 1204579872;
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * a5))(a1, a2, 0xCD055BFF74085E00);
}

uint64_t sub_100C9E91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  if (LODWORD(STACK[0x6AB0]) < v6 != (v5 + 453695902) < 0x2225AAFA)
    v7 = LODWORD(STACK[0x6AB0]) < v6;
  else
    v7 = (v5 + 453695902) < LODWORD(STACK[0x6AB0]);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((39 * !v7) ^ a5)))();
}

uint64_t sub_100CA1594(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t (*v160)(uint64_t, uint64_t, uint64_t);

  v4 = (a2 - 852) | 0x34Bu;
  v5 = LODWORD(STACK[0x6A30]) - LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x6198]) = LODWORD(STACK[0x6990]) + LODWORD(STACK[0x69A0]);
  STACK[0x6AC0] = v4;
  v6 = (v2 - 0x4D285976B13BDFA0) ^ v4 ^ 0xEF36F29D75080F4ALL;
  v7 = ((v2 - 0x4D285976B13BDFA0) ^ 0xDF3FF69DF708942DLL) & (2 * ((v2 - 0x4D285976B13BDFA0) & 0xDF3FC721E7A8D68DLL)) ^ (v2 - 0x4D285976B13BDFA0) & 0xDF3FC721E7A8D68DLL;
  v8 = ((2 * v6) ^ 0x60126B7925419D50) & v6 ^ (2 * v6) & 0x300935BC92A0CEA8;
  v9 = v8 ^ 0x1009148492A042A8;
  v10 = (v8 ^ 0x2000210800008C00) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0xC024D6F24A833AA0) & v9 ^ (4 * v9) & 0x300935BC92A0CEA8;
  v12 = (v11 ^ 0x14B002800AA0) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x3009210C9020C408)) ^ 0x935BC92A0CEA80) & (v11 ^ 0x3009210C9020C408) ^ (16 * (v11 ^ 0x3009210C9020C408)) & 0x300935BC92A0CEA0;
  v14 = (v13 ^ 0x111880200CA00) & (v12 << 8) ^ v12;
  v15 = (((v13 ^ 0x3008243490A00428) << 8) ^ 0x935BC92A0CEA800) & (v13 ^ 0x3008243490A00428) ^ ((v13 ^ 0x3008243490A00428) << 8) & 0x300935BC92A0CE00;
  v16 = v14 ^ 0x300935BC92A0CEA8 ^ (v15 ^ 0x1349080800000) & (v14 << 16);
  v17 = ((v2 - 0x4D285976B13BDFA0) ^ (2
                                      * ((v16 << 32) & 0x300935BC00000000 ^ v16 ^ ((v16 << 32) ^ 0x12A0CEA800000000) & (((v15 ^ 0x3008012C122046A8) << 16) & 0x300935BC00000000 ^ 0x1251C00000000 ^ (((v15 ^ 0x3008012C122046A8) << 16) ^ 0x35BC92A000000000) & (v15 ^ 0x3008012C122046A8uLL))))) >> 31;
  v18 = v2
      - (((v17 ^ 0x753FD946B17865D0) - 0x87D68987CF3626FLL) ^ ((v17 ^ 0xA7A4075C9EE7A17ALL) + 0x2519497DAC93593BLL) ^ ((v17 ^ 0xD29BDE1B11C48EBBLL) + 0x5026903A23B076FCLL));
  v19 = ((v18 + 0x64C69B4F6130A05CLL) ^ 0x282EB97BDC4C62C2) & (2
                                                               * ((v18 + 0x64C69B4F6130A05CLL) & 0xB00E207BE16C08E3)) ^ (v18 + 0x64C69B4F6130A05CLL) & 0xB00E207BE16C08E3;
  v20 = ((2 * ((v18 + 0x64C69B4F6130A05CLL) ^ 0x6822F94A5E146242)) ^ 0xB059B2637EF0D542) & ((v18
                                                                                               + 0x64C69B4F6130A05CLL) ^ 0x6822F94A5E146242) ^ (2 * ((v18 + 0x64C69B4F6130A05CLL) ^ 0x6822F94A5E146242)) & 0xD82CD931BF786AA0;
  v21 = v20 ^ 0x4824491081082AA1;
  v22 = (v20 ^ 0x800880210E704000) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ 0x60B364C6FDE1AA84) & v21 ^ (4 * v21) & 0xD82CD931BF786AA0;
  v24 = (v23 ^ 0x40204000BD602A80) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x980C993102184021)) ^ 0x82CD931BF786AA10) & (v23 ^ 0x980C993102184021) ^ (16 * (v23 ^ 0x980C993102184021)) & 0xD82CD931BF786AA0;
  v26 = (v25 ^ 0x800C9111B7002A00) & (v24 << 8) ^ v24;
  v27 = (((v25 ^ 0x58204820087840A1) << 8) ^ 0x2CD931BF786AA100) & (v25 ^ 0x58204820087840A1) ^ ((v25 ^ 0x58204820087840A1) << 8) & 0xD82CD931BF786A00;
  v28 = v26 ^ 0xD82CD931BF786AA1 ^ (v27 ^ 0x808113138680000) & (v26 << 16);
  v29 = ((v18 + 0x64C69B4F6130A05CLL) ^ (2
                                       * ((v28 << 32) & 0x582CD93100000000 ^ v28 ^ ((v28 << 32) ^ 0x3F786AA100000000) & (((v27 ^ 0xD024C80087104AA1) << 16) & 0x582CD93100000000 ^ 0xC400100000000 ^ (((v27 ^ 0xD024C80087104AA1) << 16) ^ 0x5931BF7800000000) & (v27 ^ 0xD024C80087104AA1))))) >> 8;
  v30 = v18
      - 0x291DE1ECE0AE336ALL
      + (((v29 ^ 0x67AB3CBED021969) - 0x67C2EEAA68FF9B74) ^ ((v29 ^ 0x9D0ECD2ABAAEDC1DLL) + 0x3496FB4C0ACA200) ^ ((v29 ^ 0x9B4479E30D3359A9) + 0x503DB7D7731244CLL));
  v31 = (v30 ^ 0x5F7AFF9FA28EFB65) & (2 * (v30 & 0x9F7AF81C02ACFB69)) ^ v30 & 0x9F7AF81C02ACFB69;
  v32 = ((2 * (v30 ^ 0x539AEFA7A6972BA7)) ^ 0x99C02F774877A19CLL) & (v30 ^ 0x539AEFA7A6972BA7) ^ (2 * (v30 ^ 0x539AEFA7A6972BA7)) & 0xCCE017BBA43BD0CELL;
  v33 = v32 ^ 0x44201088A4085042;
  v34 = (v32 ^ 0x88C000300033808CLL) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0x33805EEE90EF4338) & v33 ^ (4 * v33) & 0xCCE017BBA43BD0CCLL;
  v36 = (v35 ^ 0x8016AA802B4000) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0xCC600111241090C6)) ^ 0xCE017BBA43BD0CE0) & (v35 ^ 0xCC600111241090C6) ^ (16 * (v35 ^ 0xCC600111241090C6)) & 0xCCE017BBA43BD0C0;
  v38 = (v37 ^ 0xCC0013BA00390000) & (v36 << 8) ^ v36;
  v39 = (((v37 ^ 0xE00401A402D00ELL) << 8) ^ 0xE017BBA43BD0CE00) & (v37 ^ 0xE00401A402D00ELL) ^ ((v37 ^ 0xE00401A402D00ELL) << 8) & 0xCCE017BBA43BD000;
  v40 = v38 ^ 0xCCE017BBA43BD0CELL ^ (v39 ^ 0xC00013A020100000) & (v38 << 16);
  v41 = (v30 ^ (2
              * ((v40 << 32) & 0x4CE017BB00000000 ^ v40 ^ ((v40 << 32) ^ 0x243BD0CE00000000) & (((v39 ^ 0xCE0041B842B10CELL) << 16) & 0x4CE017BB00000000 ^ 0x4840138000000000 ^ (((v39 ^ 0xCE0041B842B10CELL) << 16) ^ 0x17BBA43B00000000) & (v39 ^ 0xCE0041B842B10CELL))))) >> 2;
  v42 = v30
      - 0x7D1EBDDC6C6730DCLL
      + (((v41 ^ 0xBFA395888AC87AB5) + 0x1C31076BF69CBE3ELL) ^ ((v41 ^ 0x20762F3CFEDAB374) - 0x7C1B42207D718803) ^ ((v41 ^ 0x9C6B072BA6A41F7CLL) + 0x3FF995C8DAF0DBF5));
  v43 = (v42 ^ 0x7A6DD47BC022114ELL) & (2 * (v42 & 0x7C6D867BC0321A0FLL)) ^ v42 & 0x7C6D867BC0321A0FLL;
  v44 = ((2 * (v42 ^ 0xAA24DC6D4046214ALL)) ^ 0xAC92B42D00E8768ALL) & (v42 ^ 0xAA24DC6D4046214ALL) ^ (2 * (v42 ^ 0xAA24DC6D4046214ALL)) & 0xD6495A1680743B44;
  v45 = v44 ^ 0x52494A1280140945;
  v46 = (v44 ^ 0x8000100400403000) & (4 * v43) ^ v43;
  v47 = ((4 * v45) ^ 0x5925685A01D0ED14) & v45 ^ (4 * v45) & 0xD6495A1680743B44;
  v48 = (v47 ^ 0x5001481200502900) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x8648120480241241)) ^ 0x6495A1680743B450) & (v47 ^ 0x8648120480241241) ^ (16 * (v47 ^ 0x8648120480241241)) & 0xD6495A1680743B40;
  v50 = (v49 ^ 0x4401000000403000) & (v48 << 8) ^ v48;
  v51 = (((v49 ^ 0x92485A1680340B05) << 8) ^ 0x495A1680743B4500) & (v49 ^ 0x92485A1680340B05) ^ ((v49 ^ 0x92485A1680340B05) << 8) & 0xD6495A1680743B00;
  v52 = v50 ^ 0xD6495A1680743B45 ^ (v51 ^ 0x4048120000300000) & (v50 << 16);
  v53 = v42 ^ (2
             * ((v52 << 32) & 0x56495A1600000000 ^ v52 ^ ((v52 << 32) ^ 0x743B4500000000) & (((v51 ^ 0x9601481680443A45) << 16) & 0x56495A1600000000 ^ 0x4495A0200000000 ^ (((v51 ^ 0x9601481680443A45) << 16) ^ 0x5A16807400000000) & (v51 ^ 0x9601481680443A45))));
  v54 = (((v53 ^ 0x72B3B84BED8400F1) + ((v53 ^ 0x72B3B84BED8400F1) >> 28)) >> 14)
      + (v53 ^ 0x72B3B84BED8400F1)
      + ((v53 ^ 0x72B3B84BED8400F1) >> 28)
      - 2 * (((v53 ^ 0x72B3B84BED8400F1) + ((v53 ^ 0x72B3B84BED8400F1) >> 28)) >> 14);
  v55 = v54 - (v54 >> 2);
  v56 = ((v55 + 0xD909E9C36A654B6) ^ 0x25916D8F788FC896) & (2 * ((v55 + 0xD909E9C36A654B6) & 0xA1844C2F78AFD227)) ^ (v55 + 0xD909E9C36A654B6) & 0xA1844C2F78AFD227;
  v57 = ((2 * ((v55 + 0xD909E9C36A654B6) ^ 0x659175CF899F6CD0)) ^ 0x882A73C1E2617DEELL) & ((v55 + 0xD909E9C36A654B6) ^ 0x659175CF899F6CD0) ^ (2 * ((v55 + 0xD909E9C36A654B6) ^ 0x659175CF899F6CD0)) & 0xC41539E0F130BEF6;
  v58 = v57 ^ 0x4415082011108211;
  v59 = (v57 ^ 0x800031C0E02018A4) & (4 * v56) ^ v56;
  v60 = ((4 * v58) ^ 0x1054E783C4C2FBDCLL) & v58 ^ (4 * v58) & 0xC41539E0F130BEF4;
  v61 = (v60 ^ 0x142180C000BAD0) & (16 * v59) ^ v59;
  v62 = ((16 * (v60 ^ 0xC401186031300423)) ^ 0x41539E0F130BEF70) & (v60 ^ 0xC401186031300423) ^ (16 * (v60 ^ 0xC401186031300423)) & 0xC41539E0F130BEF0;
  v63 = (v62 ^ 0x401118001100AE00) & (v61 << 8) ^ v61;
  v64 = (((v62 ^ 0x840421E0E0301087) << 8) ^ 0x1539E0F130BEF700) & (v62 ^ 0x840421E0E0301087) ^ ((v62 ^ 0x840421E0E0301087) << 8) & 0xC41539E0F130BE00;
  v65 = v63 ^ 0xC41539E0F130BEF7 ^ (v64 ^ 0x41120E030300000) & (v63 << 16);
  v66 = ((v55 + 0xD909E9C36A654B6) ^ (2
                                      * ((v65 << 32) & 0x441539E000000000 ^ v65 ^ ((v65 << 32) ^ 0x7130BEF700000000) & (((v64 ^ 0xC0041900C10008F7) << 16) & 0x441539E000000000 ^ 0x441508C000000000 ^ (((v64 ^ 0xC0041900C10008F7) << 16) ^ 0x39E0F13000000000) & (v64 ^ 0xC0041900C10008F7))))) >> 25;
  v67 = v55
      + 0x340C6D3DE5B3CA8
      + (((v66 ^ 0x8F133EF37AE785BELL) + 0xB0914473A06A3B8) ^ ((v66 ^ 0xCF712F7CF8EF9BE9) + 0x4B6B05C8B80EBDE1) ^ ((v66 ^ 0x406211DB452F091ALL) - 0x3B87C490FA31D0ECLL));
  v68 = (v67 ^ 0x27B1F0962C3430F2) & (2 * (v67 & 0x27B9F9174934B8F0)) ^ v67 & 0x27B9F9174934B8F0;
  v69 = ((2 * (v67 ^ 0x6EE02092AC5C6172)) ^ 0x92B3B30BCAD1B304) & (v67 ^ 0x6EE02092AC5C6172) ^ (2 * (v67 ^ 0x6EE02092AC5C6172)) & 0x4959D985E568D982;
  v70 = v69 ^ 0x4948488425284882;
  v71 = (v69 ^ 0x1800140408100) & (4 * v68) ^ v68;
  v72 = ((4 * v70) ^ 0x2567661795A36608) & v70 ^ (4 * v70) & 0x4959D985E568D980;
  v73 = (v72 ^ 0x141400585204000) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x4818998060489982)) ^ 0x959D985E568D9820) & (v72 ^ 0x4818998060489982) ^ (16 * (v72 ^ 0x4818998060489982)) & 0x4959D985E568D980;
  v75 = (v74 ^ 0x119980444089800) & (v73 << 8) ^ v73;
  v76 = (((v74 ^ 0x48404181A1604182) << 8) ^ 0x59D985E568D98200) & (v74 ^ 0x48404181A1604182) ^ ((v74 ^ 0x48404181A1604182) << 8) & 0x4959D985E568D900;
  v77 = v75 ^ 0x4959D985E568D982 ^ (v76 ^ 0x4959818560480000) & (v75 << 16);
  v78 = (v67 ^ (2
              * ((v77 << 32) & 0x4959D98500000000 ^ v77 ^ ((v77 << 32) ^ 0x6568D98200000000) & (((v76 ^ 0x580085205982) << 16) & 0x4959D98500000000 ^ 0x58188500000000 ^ (((v76 ^ 0x580085205982) << 16) ^ 0x5985E56800000000) & (v76 ^ 0x580085205982))))) >> 15;
  v79 = v67
      - 0x4EDC9189AC995ED9
      + (((v78 ^ 0x566D37D789998E5ALL) - 0x3988CF06CC43A106) ^ ((v78 ^ 0xEDA468A66DF5B77CLL) + 0x7DBE6F88D7D067E0) ^ ((v78 ^ 0xBBC9304616553EECLL) + 0x2BD33768AC70EE50));
  v80 = (v79 ^ 0xC57C20070924295ELL) & (2 * (v79 & 0xE67C2287ADB1405FLL)) ^ v79 & 0xE67C2287ADB1405FLL;
  v81 = ((2 * (v79 ^ 0xD04610C43642948)) ^ 0xD6F08717DDAAD22ELL) & (v79 ^ 0xD04610C43642948) ^ (2
                                                                                                  * (v79 ^ 0xD04610C43642948)) & 0xEB78438BEED56916;
  v82 = v81 ^ 0x2908408822552911;
  v83 = (v81 ^ 0x82700203CC800004) & (4 * v80) ^ v80;
  v84 = ((4 * v82) ^ 0xADE10E2FBB55A45CLL) & v82 ^ (4 * v82) & 0xEB78438BEED56914;
  v85 = (v84 ^ 0xA960020BAA552010) & (16 * v83) ^ v83;
  v86 = ((16 * (v84 ^ 0x4218418044804903)) ^ 0xB78438BEED569170) & (v84 ^ 0x4218418044804903) ^ (16 * (v84 ^ 0x4218418044804903)) & 0xEB78438BEED56910;
  v87 = (v86 ^ 0xA300008AEC540100) & (v85 << 8) ^ v85;
  v88 = (((v86 ^ 0x4878430102816807) << 8) ^ 0x78438BEED5691700) & (v86 ^ 0x4878430102816807) ^ ((v86 ^ 0x4878430102816807) << 8) & 0xEB78438BEED56900;
  v89 = v87 ^ 0xEB78438BEED56917 ^ (v88 ^ 0x6840038AC4410000) & (v87 << 16);
  v90 = (v79 ^ (2
              * ((v89 << 32) & 0x6B78438B00000000 ^ v89 ^ ((v89 << 32) ^ 0x6ED5691700000000) & (((v88 ^ 0x833840012A946817) << 16) & 0x6B78438B00000000 ^ 0x2870010A00000000 ^ (((v88 ^ 0x833840012A946817) << 16) ^ 0x438BEED500000000) & (v88 ^ 0x833840012A946817))))) >> 4;
  v91 = v79
      - (((v90 ^ 0xE2A6364F632CB2CFLL) + 0x1BF7A0E75BBCAE99) ^ ((v90 ^ 0xFE81057FAE552F15) + 0x7D093D796C53343) ^ ((v90 ^ 0x1265F149AA7824FDLL) - 0x14CB981E6D17C755))
      + 0x2513ADE646FAD2EELL;
  v92 = (v91 ^ 0xBF7B887A864B98EBLL) & (2 * (v91 & 0xB87BC972C64812E2)) ^ v91 & 0xB87BC972C64812E2;
  v93 = ((2 * (v91 ^ 0xFF690AFF06DBB8AFLL)) ^ 0x8E25871B8127549ALL) & (v91 ^ 0xFF690AFF06DBB8AFLL) ^ (2 * (v91 ^ 0xFF690AFF06DBB8AFLL)) & 0x4712C38DC093AA4CLL;
  v94 = v93 ^ 0x411240844090AA45;
  v95 = (v93 ^ 0x200030900000008) & (4 * v92) ^ v92;
  v96 = ((4 * v94) ^ 0x1C4B0E37024EA934) & v94 ^ (4 * v94) & 0x4712C38DC093AA4CLL;
  v97 = (v96 ^ 0x40202050002A800) & (16 * v95) ^ v95;
  v98 = ((16 * (v96 ^ 0x4310C188C0910249)) ^ 0x712C38DC093AA4D0) & (v96 ^ 0x4310C188C0910249) ^ (16 * (v96 ^ 0x4310C188C0910249)) & 0x4712C38DC093AA40;
  v99 = (v98 ^ 0x4100008C0012A000) & (v97 << 8) ^ v97;
  v100 = (((v98 ^ 0x612C301C0810A0DLL) << 8) ^ 0x12C38DC093AA4D00) & (v98 ^ 0x612C301C0810A0DLL) ^ ((v98 ^ 0x612C301C0810A0DLL) << 8) & 0x4712C38DC093AA00;
  v101 = v99 ^ 0x4712C38DC093AA4DLL ^ (v100 ^ 0x202818080820000) & (v99 << 16);
  v102 = v91 ^ (2
              * ((v101 << 32) & 0x4712C38D00000000 ^ v101 ^ ((v101 << 32) ^ 0x4093AA4D00000000) & (((v100 ^ 0x4510420D4011A24DLL) << 16) & 0x4712C38D00000000 ^ 0x412030C00000000 ^ (((v100 ^ 0x4510420D4011A24DLL) << 16) ^ 0x438DC09300000000) & (v100 ^ 0x4510420D4011A24DLL))));
  v103 = (((v102 ^ 0x744EB53F7A86BBLL) + 0x1E4674CACE8893DLL) ^ ((v102 ^ 0xC08C2D515C8EF408) - 0x3EE3FB5730E30470) ^ ((v102 ^ 0xC322523E82A06BFDLL) - 0x3D4D8438EECD9B85))
       - 0x5D51C3683377EC14
       + ((((v102 >> 30) ^ 0x2C17DF16591AB10ELL) - 0x624087C2372D7BD2) ^ (((v102 >> 30) ^ 0xDEE858A1B6A0DFEBLL)
                                                                          + 0x6F40FF8A2768EAC9) ^ (((v102 >> 30) ^ 0xF2FF87B7E0D2A98ELL) + 0x4357209C711A9CAELL));
  v104 = (v103 ^ 0x291F61D12994DB50) & (2 * (v103 & 0xA95F04192210E301)) ^ v103 & 0xA95F04192210E301;
  v105 = ((2 * (v103 ^ 0x3B8169F32D949F50)) ^ 0x25BCDBD41F08F8A2) & (v103 ^ 0x3B8169F32D949F50) ^ (2 * (v103 ^ 0x3B8169F32D949F50)) & 0x92DE6DEA0F847C50;
  v106 = v105 ^ 0x9242242A00840451;
  v107 = (v105 ^ 0x9C00C008001800) & (4 * v104) ^ v104;
  v108 = ((4 * v106) ^ 0x4B79B7A83E11F144) & v106 ^ (4 * v106) & 0x92DE6DEA0F847C50;
  v109 = (v108 ^ 0x25825A80E007040) & (16 * v107) ^ v107;
  v110 = ((16 * (v108 ^ 0x9086484201840C11)) ^ 0x2DE6DEA0F847C510) & (v108 ^ 0x9086484201840C11) ^ (16 * (v108 ^ 0x9086484201840C11)) & 0x92DE6DEA0F847C50;
  v111 = (v110 ^ 0xC64CA008044400) & (v109 << 8) ^ v109;
  v112 = (((v110 ^ 0x9218214A07803841) << 8) ^ 0xDE6DEA0F847C5100) & (v110 ^ 0x9218214A07803841) ^ ((v110 ^ 0x9218214A07803841) << 8) & 0x92DE6DEA0F847C00;
  v113 = v111 ^ 0x92DE6DEA0F847C51 ^ (v112 ^ 0x924C680A04040000) & (v111 << 16);
  v114 = (v103 ^ (2
                * ((v113 << 32) & 0x12DE6DEA00000000 ^ v113 ^ ((v113 << 32) ^ 0xF847C5100000000) & (((v112 ^ 0x9205E00B802C51) << 16) & 0x12DE6DEA00000000 ^ 0x1214606A00000000 ^ (((v112 ^ 0x9205E00B802C51) << 16) ^ 0x6DEA0F8400000000) & (v112 ^ 0x9205E00B802C51))))) >> 15;
  v115 = v103
       - (((v114 ^ 0x90400CCD8E9362CBLL) - 0x7BDA3344D710B527) ^ ((v114 ^ 0xA5C8A1CA7DBE4EA8) - 0x4E529E43243D9944) ^ ((v114 ^ 0x3589BED1FDB75653) + 0x21EC7EA75BCB7E41))
       - 0x3A2858E82DAEDF36;
  v116 = (v115 ^ 0xF7CEAC01FE845513) & (2 * (v115 & 0xF7EC30A1F8A6145BLL)) ^ v115 & 0xF7EC30A1F8A6145BLL;
  v117 = ((2 * (v115 ^ 0x971EED41CF885D81)) ^ 0xC1E5BBC06E5C93B4) & (v115 ^ 0x971EED41CF885D81) ^ (2 * (v115 ^ 0x971EED41CF885D81)) & 0x60F2DDE0372E49DALL;
  v118 = v117 ^ 0x201244201122484ALL;
  v119 = (v117 ^ 0x40E0818026080190) & (4 * v116) ^ v116;
  v120 = ((4 * v118) ^ 0x83CB7780DCB92768) & v118 ^ (4 * v118) & 0x60F2DDE0372E49D8;
  v121 = (v120 ^ 0xC2558014280140) & (16 * v119) ^ v119;
  v122 = ((16 * (v120 ^ 0x6030886023064892)) ^ 0xF2DDE0372E49DA0) & (v120 ^ 0x6030886023064892) ^ (16 * (v120 ^ 0x6030886023064892)) & 0x60F2DDE0372E49D0;
  v123 = (v122 ^ 0x20DC0032240900) & (v121 << 8) ^ v121;
  v124 = (((v122 ^ 0x60D201E0050A405ALL) << 8) ^ 0xF2DDE0372E49DA00) & (v122 ^ 0x60D201E0050A405ALL) ^ ((v122 ^ 0x60D201E0050A405ALL) << 8) & 0x60F2DDE0372E4900;
  v125 = v123 ^ 0x60F2DDE0372E49DALL ^ (v124 ^ 0x60D0C02026080000) & (v123 << 16);
  v126 = v115
       - 0x813CF5E0759EBA5
       + (((v115 ^ (2
                  * ((v125 << 32) & 0x60F2DDE000000000 ^ v125 ^ ((v125 << 32) ^ 0x372E49DA00000000) & (((v124 ^ 0x221DC0112601DALL) << 16) & 0x60F2DDE000000000 ^ 0x2012C8C000000000 ^ (((v124 ^ 0x221DC0112601DALL) << 16) ^ 0x5DE0372E00000000) & (v124 ^ 0x221DC0112601DALL))))) >> 2) ^ 0x1D93463865BEA1FBLL)
       - 0x23FC5E4AE6486776;
  v127 = v126 - (v126 >> 25) + ((v126 - (v126 >> 25)) >> 14);
  v128 = v127 + (v127 >> 2);
  LODWORD(v127) = v128 ^ v55;
  v129 = v128
       + 0x7792F09AB7D04740
       - ((v128 + 0x7792F09AB7D04740) >> 28)
       - ((v128 + 0x7792F09AB7D04740 - ((v128 + 0x7792F09AB7D04740) >> 28)) >> 15);
  v130 = (v129 ^ 0xCFD5FFCFE97DDCDFLL) + 0x79EABEFF5E9EFBEELL + ((2 * v129) & 0x9FABFF9FD2FBB9BELL);
  v131 = (v130 ^ 0xB7BF31B227D33733) & (2 * (v130 & 0xB63F4130B7E32733)) ^ v130 & 0xB63F4130B7E32733;
  v132 = ((2 * (v130 ^ 0xDBB9339226177B57)) ^ 0xDB0CE54523E8B8C8) & (v130 ^ 0xDBB9339226177B57) ^ (2 * (v130 ^ 0xDBB9339226177B57)) & 0x6D8672A291F45C64;
  v133 = v132 ^ 0x248212A290144424;
  v134 = (v132 ^ 0x4904000001801840) & (4 * v131) ^ v131;
  v135 = ((4 * v133) ^ 0xB619CA8A47D17190) & v133 ^ (4 * v133) & 0x6D8672A291F45C64;
  v136 = (v135 ^ 0x2400428201D05000) & (16 * v134) ^ v134;
  v137 = ((16 * (v135 ^ 0x4986302090240C64)) ^ 0xD8672A291F45C640) & (v135 ^ 0x4986302090240C64) ^ (16 * (v135 ^ 0x4986302090240C64)) & 0x6D8672A291F45C60;
  v138 = (v137 ^ 0x4806222011444400) & (v136 << 8) ^ v136;
  v139 = (((v137 ^ 0x2580508280B01824) << 8) ^ 0x8672A291F45C6400) & (v137 ^ 0x2580508280B01824) ^ ((v137 ^ 0x2580508280B01824) << 8) & 0x6D8672A291F45C00;
  v140 = v138 ^ 0x6D8672A291F45C64 ^ (v139 ^ 0x402228090540000) & (v138 << 16);
  v141 = (v130 ^ (2
                * ((v140 << 32) & 0x6D8672A200000000 ^ v140 ^ ((v140 << 32) ^ 0x11F45C6400000000) & (((v139 ^ 0x6984502201A01864) << 16) & 0x6D8672A200000000 ^ 0xD04620200000000 ^ (((v139 ^ 0x6984502201A01864) << 16) ^ 0x72A291F400000000) & (v139 ^ 0x6984502201A01864))))) >> 5;
  v142 = v130
       - (((v141 ^ 0x477FE6AE3B9181BELL) - 0x76ADD94B2795934) ^ ((v141 ^ 0x7E71D2095205CFF2) - 0x3E64E933DBED1778) ^ ((v141 ^ 0x3A7FEC86C53412B3) - 0x7A6AD7BC4CDCCA39));
  v143 = v142 + 0x597EE3BD559BBAB8;
  v142 -= 0x1DB48651FEB3C8F3;
  v144 = (v142 ^ 0xD2C62B6F07DE2DC0) & (2 * (v142 & 0xE496A36C461F2DEALL)) ^ v142 & 0xE496A36C461F2DEALL;
  v145 = ((2 * (v142 ^ 0x5BC36FAF03C02440)) ^ 0x7EAB99868BBE1354) & (v142 ^ 0x5BC36FAF03C02440) ^ (2 * (v142 ^ 0x5BC36FAF03C02440)) & 0xBF55CCC345DF09AALL;
  v146 = v145 ^ 0x81544441444108AALL;
  v147 = (v145 ^ 0x36018882009C0100) & (4 * v144) ^ v144;
  v148 = ((4 * v146) ^ 0xFD57330D177C26A8) & v146 ^ (4 * v146) & 0xBF55CCC345DF09A8;
  v149 = (v148 ^ 0xBD550001055C00A0) & (16 * v147) ^ v147;
  v150 = ((16 * (v148 ^ 0x200CCC240830902)) ^ 0xF55CCC345DF09AA0) & (v148 ^ 0x200CCC240830902) ^ (16 * (v148 ^ 0x200CCC240830902)) & 0xBF55CCC345DF09A0;
  v151 = (v150 ^ 0xB554CC0045D00800) & (v149 << 8) ^ v149;
  v152 = (((v150 ^ 0xA0100C3000F010ALL) << 8) ^ 0x55CCC345DF09AA00) & (v150 ^ 0xA0100C3000F010ALL) ^ ((v150 ^ 0xA0100C3000F010ALL) << 8) & 0xBF55CCC345DF0900;
  v153 = v151 ^ 0xBF55CCC345DF09AALL ^ (v152 ^ 0x1544C04145090000) & (v151 << 16);
  v154 = v143
       + 0x6D63395CF1CFAA40
       + (((v142 ^ (2
                  * ((v153 << 32) & 0x3F55CCC300000000 ^ v153 ^ ((v153 << 32) ^ 0x45DF09AA00000000) & (((v152 ^ 0xAA110C8200D601AALL) << 16) & 0x3F55CCC300000000 ^ 0x3314880000000000 ^ (((v152 ^ 0xAA110C8200D601AALL) << 16) ^ 0x4CC345DF00000000) & (v152 ^ 0xAA110C8200D601AALL))))) >> 30) ^ 0xFFFFFFFDBDA35044);
  v155 = v154 + (v154 >> 13) - ((v154 + (v154 >> 13)) >> 8);
  v156 = ((((v155 - ((2 * v155) & 0xBEBE6E42C15550A8) + 0x5F5F372160AAA854) ^ 0xEF202F0162544395)
         + 0x10DFD0FE9DABBC6BLL) ^ (((v155 - ((2 * v155) & 0xBEBE6E42C15550A8) + 0x5F5F372160AAA854) ^ 0xBFB7800803881E63)
                                  + 0x40487FF7FC77E19DLL) ^ (((v155
                                                             - ((2 * v155) & 0xBEBE6E42C15550A8)
                                                             + 0x5F5F372160AAA854) ^ 0xFC898280176F5A2)
                                                           - 0xFC898280176F5A2))
       + 0x13AB725335CC9DC3;
  v157 = v156 + (v156 >> 27) + ((v156 + (v156 >> 27)) >> 12);
  v158 = v3 ^ v127 ^ 0xF5C0BDF4 ^ ((_DWORD)v157 + (v157 >> 4));
  LODWORD(STACK[0x6190]) = v5 + 964966041;
  LODWORD(STACK[0x6710]) = LODWORD(STACK[0x6920]) ^ 0x4906740F;
  LODWORD(STACK[0x6058]) = LODWORD(STACK[0x69B0]) ^ 0x7D20A73;
  if (((*(_BYTE *)(STACK[0x6A90]
                  + ((*(_BYTE *)(STACK[0x6A90]
                               + ((*(_BYTE *)(STACK[0x6A90] + ((*(_BYTE *)(STACK[0x6A90] + 6) + 6) & 0xF)) + 9) & 0xF))
                    + 11) & 0xF))
       + 3) & 0xE) != 0)
    v159 = (*(_BYTE *)(STACK[0x6A90]
                     + ((*(_BYTE *)(STACK[0x6A90]
                                  + ((*(_BYTE *)(STACK[0x6A90] + ((*(_BYTE *)(STACK[0x6A90] + 6) + 6) & 0xF)) + 9) & 0xF))
                       + 11) & 0xF))
          + 3) & 0xF;
  else
    v159 = 1;
  v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a2) - 8);
  STACK[0x6AB0] = v159;
  STACK[0x6A80] = v159 - 1;
  return v160(v158, 1824963060, 3010165419);
}

uint64_t sub_100CA3DCC(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;

  v10 = *(unsigned __int8 *)(STACK[0x6A90] + a7);
  v11 = v10 * a8;
  v12 = a7 + (v11 ^ a3) - (((v11 ^ a3) + a7) >> 16);
  v13 = (v12 ^ 0x7C87F9B9) - 335546368 + (((STACK[0x6AC0] + 8995) ^ 0xF90FC9E0) & (2 * v12));
  v14 = ((2 * (v13 ^ 0x105E8F8A)) ^ LODWORD(STACK[0x23D4])) & (v13 ^ 0x105E8F8A) ^ (2 * (v13 ^ 0x105E8F8A)) & a5;
  v15 = v14 ^ LODWORD(STACK[0x23D0]);
  v16 = (v14 ^ 0x6028148) & (4 * ((v13 ^ 0x167E8F06) & (2 * (v13 & STACK[0x23CC])) ^ v13 & STACK[0x23CC])) ^ (v13 ^ 0x167E8F06) & (2 * (v13 & STACK[0x23CC])) ^ v13 & STACK[0x23CC];
  v17 = ((4 * v15) ^ 0x1C9A0734) & v15 ^ (4 * v15) & a5;
  v18 = (v17 ^ 0x4020109) & (16 * v16) ^ v16;
  v19 = ((16 * (v17 ^ 0x832480C9)) ^ 0x72681CD0) & (v17 ^ 0x832480C9) ^ (16 * (v17 ^ 0x832480C9)) & (a5 - 12);
  v20 = v18 ^ (a5 + 1) ^ (v19 ^ 0x220000D) & (v18 << 8);
  v21 = (v13 ^ (2
              * ((v20 << 16) & 0x7260000 ^ v20 ^ ((v20 << 16) ^ 0x1CD0000) & (((v19 ^ 0x8506810D) << 8) & 0x7260000 ^ 0x1260000 ^ (((v19 ^ 0x8506810D) << 8) ^ 0x26810000) & (v19 ^ 0x8506810D))))) >> 8;
  v22 = v13
      + 206117817
      - (((v21 ^ 0x8861F95A) - 77956315) ^ ((v21 ^ 0xAD24985D) - 568387036) ^ ((v21 ^ 0x25DE5C0A) + 1457905269));
  v23 = v22 + 871962747;
  v24 = (v23 ^ 0xFDDF54A7) & (2 * (v23 & 0xFD9F6404)) ^ v23 & 0xFD9F6404;
  v25 = ((2 * (v23 ^ 0xA6F19CA7)) ^ 0xB6DDF146) & (v23 ^ 0xA6F19CA7) ^ (2 * (v23 ^ 0xA6F19CA7)) & (v9 + 2);
  v26 = v25 ^ LODWORD(STACK[0x23DC]);
  v27 = (v25 ^ 0x134CB880) & (4 * v24) ^ v24;
  v28 = ((4 * v26) ^ 0x6DBBE28C) & v26 ^ (4 * v26) & v9;
  v29 = (v28 ^ 0x492AE080) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x12441823)) ^ LODWORD(STACK[0x23E4])) & (v28 ^ 0x12441823) ^ (16 * (v28 ^ 0x12441823)) & v9;
  v31 = ((v22 + 1723982584) ^ 0xF99F5066) & (2 * ((v22 + 1723982584) & 0xFD9F6404)) ^ (v22 + 1723982584) & 0xFD9F6404;
  v32 = ((2 * ((v22 + 1723982584) ^ 0x828B986E)) ^ 0xFE29F8D4) & ((v22 + 1723982584) ^ 0x828B986E) ^ (2 * ((v22 + 1723982584) ^ 0x828B986E)) & v8;
  v33 = ((4 * (v32 ^ 0x114042A)) ^ 0xFC53F1A8) & (v32 ^ 0x114042A) ^ (4 * (v32 ^ 0x114042A)) & 0x7F14FC68;
  v34 = (v33 ^ 0x7C10F020) & (16 * ((v32 ^ 0x7F00B408) & (4 * v31) ^ v31)) ^ (v32 ^ 0x7F00B408) & (4 * v31) ^ v31;
  v35 = v29 ^ (v9 + 3) ^ (v30 ^ 0x126E8800) & (v29 << 8);
  v36 = ((16 * (v33 ^ 0x3040C42)) ^ 0xF14FC6A0) & (v33 ^ 0x3040C42) ^ (16 * (v33 ^ 0x3040C42)) & 0x7F14FC60;
  v37 = v34 ^ 0x7F14FC6A ^ (v36 ^ 0x7104C400) & (v34 << 8);
  v38 = (v11 - 79370088 - ((-1503147022 * v10) & 0xF689D982) + 1065) ^ LODWORD(STACK[0x23E8]) ^ (v22 + 1723982584) ^ (2 * ((v37 << 16) & 0x7F140000 ^ v37 ^ ((v37 << 16) ^ 0x7C6A0000) & (((v36 ^ 0xE10384A) << 8) & 0x7F140000 ^ 0x6B000000 ^ (((v36 ^ 0xE10384A) << 8) ^ 0x14FC0000) & (v36 ^ 0xE10384A))));
  v39 = ((v30 ^ LODWORD(STACK[0x23E0])) << 8) & 0x5B6E0000 ^ 0x11060000 ^ (((v30 ^ LODWORD(STACK[0x23E0])) << 8) ^ 0x6EF80000) & (v30 ^ LODWORD(STACK[0x23E0]));
  v40 = a7
      + 1888652258
      + v38
      - ((2
        * (a7 + v38 - ((v38 + (_DWORD)a7 - ((v38 + a7) >> 16)) >> 8) - ((v38 + a7) >> 16))) & 0xE12517C4)
      - ((v38 + (_DWORD)a7 - ((v38 + a7) >> 16)) >> 8)
      - ((v38 + a7) >> 16);
  v41 = ((2 * v40) & 0x659194FA ^ 0x610114C0) + (v40 ^ 0x425A419F);
  v42 = v41 - ((2 * v41) & 0xEF4614A0) + 2007173712;
  v43 = (((v42 ^ 0x8AEC382A) + 1964230614) ^ ((v42 ^ 0x45676122) - 1164402978) ^ ((v42 ^ 0xB8285358) + 1205316776))
      - 1435773747;
  v44 = v43 & 0x40000;
  if ((v43 & 0x40000 & v11) != 0)
    v44 = -v44;
  v45 = (LODWORD(STACK[0x23EC]) & (2
                                 * (a7
                                  + ((v44 + v11) ^ v43 & 0xFFFBFFFF)
                                  - ((((v44 + v11) ^ v43 & 0xFFFBFFFF) + a7) >> 16))))
      + ((a7 + ((v44 + v11) ^ v43 & 0xFFFBFFFF) - ((((v44 + v11) ^ v43 & 0xFFFBFFFF) + a7) >> 16)) ^ 0xFDFFE7FC);
  v46 = (v45 + 33560580) >> (a7 & 8) >> (a7 & 8 ^ 8);
  v47 = v45 + (v46 ^ 0x80804808) - ((2 * v46) & 0xFEFF6FEE);
  v48 = ((v47 + 1847130447) ^ 0x26AF188A) & (2 * ((v47 + 1847130447) & 0x462FA12A)) ^ (v47 + 1847130447) & 0x462FA12A;
  v49 = ((2 * ((v47 + 1847130447) ^ 0x2AE918DE)) ^ 0xD98D73E8) & ((v47 + 1847130447) ^ 0x2AE918DE) ^ (2 * ((v47 + 1847130447) ^ 0x2AE918DE)) & a2;
  v50 = v49 ^ 0x24428814;
  v51 = (v49 ^ 0xC8401E4) & (4 * v48) ^ v48;
  v52 = ((4 * v50) ^ 0xB31AE7D0) & v50 ^ (4 * v50) & a2;
  v53 = (v52 ^ 0x2002A1C4) & (16 * v51) ^ v51;
  v54 = ((16 * (v52 ^ 0x4CC41824)) ^ 0xCC6B9F40) & (v52 ^ 0x4CC41824) ^ (16 * (v52 ^ 0x4CC41824)) & (a2 - 4);
  v55 = v53 ^ a2 ^ (v54 ^ 0x4C429900) & (v53 << 8);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8 * (int)((23 * (STACK[0x6A80] != a7)) ^ STACK[0x6AC0]))
                                         - 8))(a1 ^ v23 ^ (2
                                                           * ((v35 << 16) & 0x5B6E0000 ^ v35 ^ ((v35 << 16) ^ 0x78A30000) & v39)) ^ v42 ^ (v47 + 1847130447) ^ (2 * ((v55 << 16) & 0x6CC60000 ^ v55 ^ ((v55 << 16) ^ 0x39F40000) & (((v54 ^ LODWORD(STACK[0x23F0])) << 8) & 0x6CC60000 ^ 0x28460000 ^ (((v54 ^ LODWORD(STACK[0x23F0])) << 8) ^ 0x46B90000) & (v54 ^ LODWORD(STACK[0x23F0]))))) ^ 0x428F4DD0);
}

uint64_t sub_100CA47F8()
{
  int v0;

  LODWORD(STACK[0x6518]) = LODWORD(STACK[0x6A50]) + 2127547893;
  LODWORD(STACK[0x6520]) = LODWORD(STACK[0x69E0]) + LODWORD(STACK[0x6A70]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100CA487C@<X0>(int a1@<W0>, unsigned int a2@<W2>, uint64_t a3@<X5>, int a4@<W7>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;

  v10 = *(unsigned __int8 *)(v7 + a3);
  v11 = v10 * a4;
  v12 = a3 + v6;
  LODWORD(STACK[0x6AC0]) = v5 - 6933;
  v13 = a3 + v6 + ((v10 * a4) ^ a2) - (((_DWORD)a3 + (_DWORD)v6 + ((v10 * a4) ^ a2)) >> ((v5 - 21) ^ 0x6D));
  v14 = (v13 ^ LODWORD(STACK[0x23F4])) + 1877798886 + ((2 * v13) & 0xFBF764FE);
  v15 = ((2 * (v14 ^ 0x1300FC99)) ^ 0x22F4204) & (v14 ^ 0x1300FC99) ^ (2 * (v14 ^ 0x1300FC99)) & (v9 + 2);
  v16 = (v14 ^ 0x13065D9B) & (2 * (v14 & 0x92175D9B)) ^ v14 & 0x92175D9B;
  v17 = v15 ^ 0x8110A102;
  v18 = (v15 ^ 0x1070102) & (4 * v16) ^ v16;
  v19 = ((4 * v17) ^ 0x45E8408) & v17 ^ (4 * v17) & v9;
  v20 = v18 ^ (v9 + 2) ^ (v19 ^ 0x168002) & (16 * v18);
  v21 = (16 * (v19 ^ LODWORD(STACK[0x23F8]))) & v9 ^ 0x8005A102 ^ ((16 * (v19 ^ LODWORD(STACK[0x23F8]))) ^ 0x117A1020) & (v19 ^ LODWORD(STACK[0x23F8]));
  v22 = (v20 << 8) & v9 ^ v20 ^ ((v20 << 8) ^ 0x17A10200) & v21;
  v23 = (v14 ^ (2
              * ((v22 << 16) & 0x1170000 ^ v22 ^ ((v22 << 16) ^ 0x21020000) & ((v21 << 8) & 0x1170000 ^ 0x160000 ^ ((v21 << 8) ^ 0x17A10000) & v21)))) >> 8;
  v24 = v14
      - 2037649466
      - (((v23 ^ 0x26E23B82) - 1959383461) ^ ((v23 ^ 0xBD30E974) + 283442349) ^ ((v23 ^ 0x9B42ECE9) + 915863858));
  v25 = ((v24 + 2046374112) ^ 0x6D9E2AB0) & (2 * ((v24 + 2046374112) & 0x719F333A)) ^ (v24 + 2046374112) & 0x719F333A;
  v26 = ((2 * ((v24 + 2046374112) ^ 0xAC8C0AC4)) ^ 0xBA2673FC) & ((v24 + 2046374112) ^ 0xAC8C0AC4) ^ (2 * ((v24 + 2046374112) ^ 0xAC8C0AC4)) & a5;
  v27 = v26 ^ 0x45110802;
  v28 = (v26 ^ 0x890011FA) & (4 * v25) ^ v25;
  v29 = ((4 * v27) ^ 0x744CE7F8) & v27 ^ (4 * v27) & (a5 - 2);
  v30 = v29 ^ 0x89131806;
  v31 = (v29 ^ 0x540021E6) & (16 * v28) ^ v28;
  v32 = ((16 * v30) ^ 0xD1339FE0) & v30 ^ (16 * v30) & (a5 - 14);
  v33 = v32 ^ 0xC00201E;
  v34 = v31 ^ a5 ^ (v32 ^ 0xD1131900) & (v31 << 8);
  v35 = ((v24 - 1396573347) ^ 0x755EABB3) & (2 * ((v24 - 1396573347) & 0x719F333A)) ^ (v24 - 1396573347) & 0x719F333A;
  v36 = ((2 * ((v24 - 1396573347) ^ 0x54648997)) ^ 0x4BF7755A) & ((v24 - 1396573347) ^ 0x54648997) ^ (2 * ((v24 - 1396573347) ^ 0x54648997)) & 0x25FBBAAC;
  v37 = ((4 * (v36 ^ 0x24088AA5)) ^ 0x97EEEAB4) & (v36 ^ 0x24088AA5) ^ (4 * (v36 ^ 0x24088AA5)) & 0x25FBBAAC;
  v38 = (v37 ^ 0x5EAAAA0) & (16 * ((v36 ^ 0x20F1120D) & (4 * v35) ^ v35)) ^ (v36 ^ 0x20F1120D) & (4 * v35) ^ v35;
  v39 = ((16 * (v37 ^ 0x20111009)) ^ 0x5FBBAAD0) & (v37 ^ 0x20111009) ^ (16 * (v37 ^ 0x20111009)) & 0x25FBBAA0;
  v40 = v38 ^ 0x25FBBAAD ^ (v39 ^ 0x5BBAA00) & (v38 << 8);
  v41 = (v24 - 1396573347) ^ (2
                            * ((v40 << 16) & 0x25FB0000 ^ v40 ^ ((v40 << 16) ^ 0x3AAD0000) & (((v39 ^ 0x2040102D) << 8) & 0x25FB0000 ^ 0x4410000 ^ (((v39 ^ 0x2040102D) << 8) ^ 0x7BBA0000) & (v39 ^ 0x2040102D)))) ^ 0xC8014DB1 ^ (v11 - 1287975983 - ((644336626 * v10) & 0x667617A2));
  v42 = (v34 << 16) & 0x5D130000 ^ v34 ^ ((v34 << 16) ^ 0x39FE0000) & ((v33 << 8) & 0x5D130000 ^ 0x4C020000 ^ ((v33 << 8) ^ 0x13390000) & v33);
  v43 = v12 + v41 - ((v41 + v8 - ((v41 + v8) >> 16)) >> 8) - ((v41 + v8) >> 16);
  v44 = ((2 * v43) & 0x69FE9FBE) + (v43 ^ LODWORD(STACK[0x2400]));
  v45 = v44 + 2110356126;
  v46 = a1 ^ (v24 + 2046374112) ^ (2 * v42) ^ 0x98D89AE4;
  v47 = ((v44 + 2110356126) & v46 & 0x9578335 ^ 0x1000104)
      + ((v44 + 2110356126) & v46 & 0x76A87CCA ^ LODWORD(STACK[0x2404]));
  v48 = v12 + ((v44 - 1332591333) ^ v11) - ((((v44 - 1332591333) ^ v11) + v8) >> 16);
  v49 = (v48 ^ 0x7CDBFFB6) - 612506132 + ((2 * v48) & 0xF9B7FF6C);
  v50 = (v49 ^ 0x7A6D81D) & (2 * (v49 & 0xA7A61A5E)) ^ v49 & 0xA7A61A5E;
  v51 = ((2 * (v49 ^ LODWORD(STACK[0x2408]))) ^ 0x5C898CC6) & (v49 ^ LODWORD(STACK[0x2408])) ^ (2
                                                                                              * (v49 ^ LODWORD(STACK[0x2408]))) & 0xAE44C662;
  v52 = v51 ^ 0xA2444221;
  v53 = (v51 ^ 0xC008040) & (4 * v50) ^ v50;
  v54 = ((4 * v52) ^ 0xB913198C) & v52 ^ (4 * v52) & 0xAE44C660;
  v55 = (v54 ^ 0xA8000003) & (16 * v53) ^ v53;
  v56 = ((16 * (v54 ^ LODWORD(STACK[0x240C]))) ^ 0xE44C6630) & (v54 ^ LODWORD(STACK[0x240C])) ^ (16
                                                                                               * (v54 ^ LODWORD(STACK[0x240C]))) & 0xAE44C660;
  v57 = v55 ^ 0xAE44C663 ^ (v56 ^ 0xA4444600) & (v55 << 8);
  v58 = (v49 ^ (2
              * ((v57 << 16) & 0x2E440000 ^ v57 ^ ((v57 << 16) ^ 0x46630000) & (((v56 ^ 0xA008043) << 8) & 0x2E440000 ^ 0x2A000000 ^ (((v56 ^ 0xA008043) << 8) ^ 0x44C60000) & (v56 ^ 0xA008043))))) >> 8;
  v59 = v49 - (((v58 ^ 0x2606DE1) + 1374318981) ^ ((v58 ^ 0xE3F94A82) - 1334618392) ^ ((v58 ^ 0xE16E88F5) - 1293642607));
  v60 = v46 + v45 + ((2 * v47 - 2) ^ 0x11EF9DE3);
  v61 = ((v59 + 1506279521) ^ 0xC5021B4E) & (2 * ((v59 + 1506279521) & 0xD424986E)) ^ (v59 + 1506279521) & 0xD424986E;
  v62 = ((2 * ((v59 + 1506279521) ^ 0xED020BD6)) ^ 0x724D2770) & ((v59 + 1506279521) ^ 0xED020BD6) ^ (2 * ((v59 + 1506279521) ^ 0xED020BD6)) & 0x392693B8;
  v63 = (v62 ^ 0x38041330) & (4 * v61) ^ v61;
  v64 = ((4 * (v62 ^ 0x9229088)) ^ 0xE49A4EE0) & (v62 ^ 0x9229088) ^ (4 * (v62 ^ 0x9229088)) & 0x392693B8;
  v65 = (v64 ^ 0x200202B8) & (16 * v63) ^ v63;
  v66 = ((16 * (v64 ^ 0x19249118)) ^ 0x92693B80) & (v64 ^ 0x19249118) ^ (16 * (v64 ^ 0x19249118)) & 0x392693B0;
  v67 = v65 ^ 0x392693B8 ^ (v66 ^ 0x10201338) & (v65 << 8);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((87 * (v12 == 15)) ^ v5)) - 4))((v60 + 1612068377 + (~(2 * (v60 + 1)) | 0x3FD393D1)) ^ (v59 + 1506279521) ^ (2 * ((v67 << 16) & 0x39260000 ^ v67 ^ ((v67 << 16) ^ 0x13B80000) & (((v66 ^ 0x29068038) << 8) & 0x39260000 ^ 0x19240000 ^ (((v66 ^ 0x29068038) << 8) ^ 0x26930000) & (v66 ^ 0x29068038)))) ^ 0x857A532B);
}

uint64_t sub_100CA555C(int a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  char v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  LODWORD(STACK[0x6510]) = LODWORD(STACK[0x6A60]) ^ 0x22863444;
  v5 = (((a3 ^ 0xAE5394F4) - ((a3 ^ 0xAE5394F4) >> 10)) ^ 0xFF9BFCFE)
     + 327129054
     + ((2 * ((a3 ^ 0xAE5394F4) - ((a3 ^ 0xAE5394F4) >> 10))) & 0xFF37F9FC);
  v6 = (v5 ^ LODWORD(STACK[0x95C])) & (2 * (v5 & 0xECE46B24)) ^ v5 & 0xECE46B24;
  v7 = ((2 * (v5 ^ 0xC14E181B)) ^ 0x5B54E67E) & (v5 ^ 0xC14E181B) ^ (2 * (v5 ^ 0xC14E181B)) & 0x2DAA733E;
  v8 = v7 ^ 0x24AA1101;
  v9 = (v7 ^ 0x1086031) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0xB6A9CCFC) & v8 ^ (4 * v8) & 0x2DAA733C;
  v11 = (v10 ^ 0x24A84023) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x9023303)) ^ 0xDAA733F0) & (v10 ^ 0x9023303) ^ (16 * (v10 ^ 0x9023303)) & 0x2DAA7330;
  v13 = v11 ^ 0x2DAA733F ^ (v12 ^ 0x8A2330F) & (v11 << 8);
  v14 = (v5 ^ (2
             * ((v13 << 16) & 0x2DAA0000 ^ v13 ^ ((v13 << 16) ^ 0x733F0000) & (((v12 ^ 0x2508400F) << 8) & 0x2DAA0000 ^ 0x5880000 ^ (((v12 ^ 0x2508400F) << 8) ^ 0xAA730000) & (v12 ^ 0x2508400F))))) >> 5;
  v15 = v5
      + 863920085
      + (((v14 ^ 0x93969584) - 574150788) ^ ((v14 ^ 0x4EDF0956) + 9354154) ^ ((v14 ^ 0xDAE6B8B8) - 1799943608));
  v16 = (v15 ^ 0x6F5774B4) & (2 * (v15 & 0x6F6774B9)) ^ v15 & 0x6F6774B9;
  v17 = ((2 * (v15 ^ 0x39DD74C6)) ^ LODWORD(STACK[0x960])) & (v15 ^ 0x39DD74C6) ^ (2 * (v15 ^ 0x39DD74C6)) & 0x56BA007E;
  v18 = v17 ^ 0x528A0001;
  v19 = (v17 ^ 0x430006D) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0x5AE801FC) & v18 ^ (4 * v18) & 0x56BA007C;
  v21 = v19 ^ 0x56BA007F ^ (v20 ^ 0x52A80073) & (16 * v19);
  v22 = (16 * (v20 ^ 0x4120003)) & 0x56BA0070 ^ 0x141A000F ^ ((16 * (v20 ^ 0x4120003)) ^ 0x6BA007F0) & (v20 ^ 0x4120003);
  v23 = (v21 << 8) & 0x56BA0000 ^ v21 ^ ((v21 << 8) ^ 0xBA007F00) & v22;
  v24 = v15 ^ (2
             * ((v23 << 16) & 0x56BA0000 ^ v23 ^ ((v23 << 16) ^ 0x7F0000) & ((v22 << 8) & 0x56BA0000 ^ 0x44BA0000 ^ ((v22 << 8) ^ 0xBA000000) & v22)));
  v25 = ((v24 ^ 0x232C4F1C) + 2037078096) ^ ((v24 ^ 0xF033756D) - 1435213249) ^ ((v24 ^ LODWORD(STACK[0x964]))
                                                                               + 1866422630);
  v26 = ((v25 + 299827909) ^ 0xFE0719EF) & (2 * ((v25 + 299827909) & 0xFF2751EF)) ^ (v25 + 299827909) & 0xFF2751EF;
  v27 = ((2 * ((v25 + 299827909) ^ 0x8A493BF1)) ^ 0xEADCD43C) & ((v25 + 299827909) ^ 0x8A493BF1) ^ (2
                                                                                                  * ((v25 + 299827909) ^ 0x8A493BF1)) & 0x756E6A1E;
  v28 = v27 ^ 0x15222A02;
  v29 = (v27 ^ 0x600C401C) & (4 * v26) ^ v26;
  v30 = ((4 * v28) ^ LODWORD(STACK[0x968])) & v28 ^ (4 * v28) & 0x756E6A1C;
  v31 = (v30 ^ 0x55282810) & (16 * v29) ^ v29;
  v32 = ((16 * (v30 ^ 0x20464206)) ^ 0x56E6A1E0) & (v30 ^ 0x20464206) ^ (16 * (v30 ^ 0x20464206)) & 0x756E6A10;
  v33 = v31 ^ 0x756E6A1E ^ (v32 ^ 0x54662000) & (v31 << 8);
  v34 = v25
      + 285627572
      + ((((v25 + 299827909) ^ (2
                              * ((v33 << 16) & 0x756E0000 ^ v33 ^ ((v33 << 16) ^ 0x6A1E0000) & (((v32 ^ LODWORD(STACK[0x96C])) << 8) & 0x756E0000 ^ 0x11040000 ^ (((v32 ^ LODWORD(STACK[0x96C])) << 8) ^ 0x6E6A0000) & (v32 ^ LODWORD(STACK[0x96C])))))) >> 8) ^ 0xD5E785);
  v35 = v34 - (v34 >> 5) - ((2 * (v34 - (v34 >> 5))) & 0x8EE6B132) + 1198741657;
  v36 = (((v35 ^ 0x7BC7693) - 129791635) ^ ((v35 ^ 0x77B2F918) - 2008217880) ^ ((v35 ^ 0x377DD712) - 930993938))
      - 715686420;
  v37 = v24 ^ v3;
  v38 = v36 - (v36 >> 10) - ((v36 - (v36 >> 10)) >> 7);
  v39 = (v38 ^ 0xA90B9435) + ((v38 ^ 0xA90B9435) >> 11) + (((v38 ^ 0xA90B9435) + ((v38 ^ 0xA90B9435) >> 11)) >> 3);
  v40 = v39 - 1291187229 + (~(2 * v39) | 0x99EBE83B);
  v41 = (((v40 ^ 0xF69099B9) + 158295623) ^ ((v40 ^ 0xB9AFA5D9) + 1179671079) ^ ((v40 ^ 0xFC353782) + 63621246))
      + 1035488911;
  v42 = v41 - (v41 >> 13) - ((v41 - (v41 >> 13)) >> 1);
  v43 = v37 ^ v40;
  v44 = v42 + 1645513498 - ((v42 + 1645513498) >> 14) - ((v42 + 1645513498 - ((v42 + 1645513498) >> 14)) >> 7);
  v45 = v44 - ((2 * v44) & 0xC1635A8A) + 1622256965;
  v46 = (((v45 ^ 0x5FD37CC7) - 1607695559) ^ ((v45 ^ 0x14049FC1) - 335847361) ^ ((v45 ^ 0x2B664E43) - 728124995))
      - 302890716;
  v47 = v46 + (v46 >> 13) + ((v46 + (v46 >> 13)) >> 3);
  v48 = v47 - ((2 * v47) & 0x7AC20406) + 1029767683;
  v49 = v43 ^ v48;
  v50 = (((v48 ^ 0x974E78BD) + 1756464963) ^ ((v48 ^ 0xAD23F642) + 1390152126) ^ ((v48 ^ 0x70C8CFC) - 118263036))
      - 1946965464;
  v51 = ((v50 >> 15) ^ v50) + 2 * ((v50 >> 15) & v50);
  v52 = ((v51 >> 1) ^ v51) + 2 * ((v51 >> 1) & v51);
  v53 = v35 ^ a1 ^ (v42 - ((2 * v42) & 0x4C6D0576) + 641106619) ^ v52;
  v54 = v52
      - 452590049
      - ((v52 - 452590049) >> 12)
      - ((v52 - 452590049 - ((v52 - 452590049) >> 12)) >> 8);
  v55 = v38 ^ v4 ^ v45 ^ (v54 - ((2 * v54) & 0x64DE8B4E) - 1301330521);
  v56 = ((v49 & 0x7F ^ 0x42C20AD0 | 0x48B46FFB) - (v49 & 0x7F ^ 0x42C20AD0 | 0xB74B9004) - 1219784700) ^ 0xA766534;
  LODWORD(STACK[0x6628]) = v56;
  v57 = 16843009 * v56 - 344577244;
  LODWORD(STACK[0x6850]) = v57;
  v58 = (v57 ^ 0x96C5909E) & (2 * (v57 & 0x1489D4DC)) ^ v57 & 0x1489D4DC;
  v59 = ((2 * (v57 ^ 0x97D63086)) ^ 0x6BFC8B4) & (v57 ^ 0x97D63086) ^ (2 * (v57 ^ 0x97D63086)) & 0x835FE45A;
  v60 = v59 ^ LODWORD(STACK[0x970]);
  v61 = (v59 ^ 0x20FC010) & (4 * v58) ^ v58;
  v62 = ((4 * v60) ^ 0xD7F9168) & v60 ^ (4 * v60) & 0x835FE458;
  v63 = (v62 ^ 0x15F8040) & (16 * v61) ^ v61;
  v64 = ((16 * (v62 ^ 0x82006412)) ^ 0x35FE45A0) & (v62 ^ 0x82006412) ^ (16 * (v62 ^ 0x82006412)) & 0x835FE450;
  v65 = v63 ^ 0x835FE45A ^ (v64 ^ 0x15E4400) & (v63 << 8);
  LODWORD(STACK[0x6650]) = 2
                         * ((v65 << 16) & 0x35F0000 ^ v65 ^ ((v65 << 16) ^ 0x645A0000) & (((v64 ^ LODWORD(STACK[0x974])) << 8) & 0x35F0000 ^ 0x1B0000 ^ (((v64 ^ LODWORD(STACK[0x974])) << 8) ^ 0x5FE40000) & (v64 ^ LODWORD(STACK[0x974]))));
  LODWORD(STACK[0x6A60]) = (v49 & 0xFFFFFF80 ^ 0xD283080 | 0x292AF44B)
                         - (v49 & 0xFFFFFF80 ^ 0xD283080 | 0xD6D50BB4)
                         - 690680908;
  LODWORD(STACK[0x6A70]) = (v55 & 0xFFFFFFF8 ^ 0x9CA0A08B) - 1;
  v66 = (v55 & 7 ^ 0xC110040A | 0x305B7A4D) - (v55 & 7 ^ 0xC110040A | 0xCFA485B2) - 811301454;
  LOBYTE(v64) = (v55 ^ LODWORD(STACK[0x97C])) - 1;
  LODWORD(STACK[0x64D8]) = v55;
  LOBYTE(v65) = (v55 ^ (v55 + 5) ^ v64 ^ 3) + 3;
  v67 = STACK[0x978];
  LODWORD(STACK[0x64A8]) = v66;
  v68 = v66 ^ v67;
  v69 = v65 & 7;
  LODWORD(STACK[0x6870]) = v68;
  if (v68)
    v70 = 255;
  else
    v70 = 0;
  LODWORD(STACK[0x66B0]) = v69;
  v71 = v70 << v69;
  v72 = 16843009 * v71;
  LODWORD(STACK[0x66B8]) = (855638016 * v71) & v53 ^ v72;
  v73 = v71 ^ 0x4F;
  if (!v68)
    v73 = -80;
  v74 = (((v73 ^ 0xB0) & (v49 ^ 0x24) ^ v73 & 0xF5 | 0x89)
                        - ((v73 ^ 0xB0) & (v49 ^ 0x24) ^ v73 & 0xF5 | 0x76)
                        + 118) ^ 0x14;
  v75 = (v74 - 2130486268 - ((2 * v74) & 0x11A) + 1417) ^ 0xC9236381;
  LODWORD(STACK[0x6668]) = (((2 * v75) | 0x38DE67A8) - v75 + 1670433836) ^ v72;
  v76 = (((LOBYTE(STACK[0x980]) ^ BYTE1(v49) ^ BYTE2(v49))
                         - ((2 * (LOBYTE(STACK[0x980]) ^ BYTE1(v49) ^ BYTE2(v49))) & 0x2A)
                         - 107) ^ v49);
  LODWORD(STACK[0x6840]) = v49;
  v77 = 16843009 * (v76 ^ HIBYTE(v49) ^ 0xB6) + 1998972402;
  v78 = (v77 ^ LODWORD(STACK[0x984])) & (2 * (v77 & 0x88DA1A0E)) ^ v77 & 0x88DA1A0E;
  v79 = ((2 * (v77 ^ 0x936C8720)) ^ 0x376D3A5C) & (v77 ^ 0x936C8720) ^ (2 * (v77 ^ 0x936C8720)) & 0x1BB69D2E;
  v80 = v79 ^ 0x8928522;
  v81 = (v79 ^ 0xB221D0A) & (4 * v78) ^ v78;
  v82 = ((4 * v80) ^ 0x6EDA74B8) & v80 ^ (4 * v80) & 0x1BB69D2C;
  v83 = (v82 ^ 0xA921426) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x11248906)) ^ 0xBB69D2E0) & (v82 ^ 0x11248906) ^ (16 * (v82 ^ 0x11248906)) & 0x1BB69D20;
  v85 = v83 ^ 0x1BB69D2E ^ (v84 ^ LODWORD(STACK[0x988])) & (v83 << 8);
  v86 = v77 ^ (2
             * ((v85 << 16) & 0x1BB60000 ^ v85 ^ ((v85 << 16) ^ 0x1D2E0000) & (((v84 ^ 0x960D0E) << 8) & 0x1BB60000 ^ 0x9220000 ^ (((v84 ^ 0x960D0E) << 8) ^ 0x369D0000) & (v84 ^ 0x960D0E))));
  LODWORD(STACK[0x6900]) = v53;
  v87 = v53 ^ 0xE6 ^ ((unsigned __int16)(v53 ^ 0x89E6) >> 8) ^ ((v53 ^ 0x1D9689E6) >> 16) ^ HIBYTE(v53) ^ 0x27;
  v88 = STACK[0x6910];
  LODWORD(STACK[0x6638]) = 16843009 * v87;
  LODWORD(STACK[0x6500]) = v86;
  LODWORD(STACK[0x6630]) = v86 ^ (16843009 * v87 - ((33686018 * v87) & 0x75DF3C24) + 988782098);
  v89 = STACK[0xD880];
  v90 = *(_QWORD *)(STACK[0xD880] + 8 * (0xE7F8A04E % v88));
  v91 = *(_QWORD *)(STACK[0xD880]
                  + 8
                  * (((((v90 ^ 0x55C49126135299B7) + 0x409E96FF496AA154) ^ ((v90 ^ 0xF9A2C4AE2FB5C24CLL)
                                                                              - 0x13073C888A720557) ^ ((v90 ^ 0x72B88B56E2398525) + 0x67E28C8FB801BDC2))
                    + 0x347B26F96B54D98CLL)
                   % v88));
  v92 = *(_QWORD *)(STACK[0xD880]
                  + 8
                  * (((((v91 ^ 0x33D10E7FDBD13FFBLL) + 0x368434DBE9CA666FLL) ^ ((v91 ^ 0x9927DD26AA37629CLL)
                                                                              - 0x638D187D67D3C4F6) ^ ((v91 ^ 0x74280D87AF3883B9) + 0x717D37239D23DA2DLL))
                    + 0x24741B85B4D8D01DLL)
                   % v88));
  STACK[0x6AB0] = STACK[0xD880];
  v93 = *(_QWORD *)(v89
                  + 8
                  * (((((v92 ^ 0x4E977B3BE44B8322) - 0x54028AECF98B6476) ^ ((v92 ^ 0xB716669A1E333BE5)
                                                                              + 0x527C68B2FC0C234FLL) ^ ((v92 ^ 0x275FC37F24A66619) - 0x3DCA32A83966814DLL))
                    - 0x3BB4D0F5E9B13251)
                   % v88));
  LODWORD(v93) = ((((v93 ^ 0x7F186D8536F70C68) + 0x9B991F07FFA7D34) ^ ((v93 ^ 0x8EB5E3E7F492AEE3)
                                                                         - 0x7EBE06D42602047) ^ ((v93 ^ 0x2F7350BC1CBB7C55)
                                                                                                 + 0x59D2ACC955B60D0FLL))
                + 0x5780DD546EFD570DLL)
               % v88;
  LODWORD(STACK[0x6A80]) = ((((v93 - ((2 * v93) & 0x333F62AA) - 106974891) ^ LODWORD(STACK[0x98C])) - 1239908407) ^ (((v93 - ((2 * v93) & 0x333F62AA) - 106974891) ^ 0x276B7990) - 781801414) ^ (((v93 - ((2 * v93) & 0x333F62AA) - 106974891) ^ 0x9EE166A4) + 1760343822))
                         + 1824234016;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AC0])))();
}

uint64_t sub_100CA6638@<X0>(int a1@<W8>)
{
  _BOOL4 v1;

  if (LODWORD(STACK[0x6A80]) < 0x7C4DFB1D != (a1 + 1981277062) < 0x7C4DFB1D)
    v1 = LODWORD(STACK[0x6A80]) < 0x7C4DFB1D;
  else
    v1 = (a1 + 1981277062) < LODWORD(STACK[0x6A80]);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((14491 * !v1) ^ LODWORD(STACK[0x6AC0]))))();
}

uint64_t sub_100CA932C(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(STACK[0x64F0]) = LODWORD(STACK[0x6940]) ^ 0x6667F439;
  LODWORD(STACK[0x68D0]) = LODWORD(STACK[0x64D8]) ^ 0x2860432F;
  LODWORD(STACK[0x6498]) = LODWORD(STACK[0x6A60]) ^ 0xC5B95A4B;
  LODWORD(STACK[0x6860]) = ~LODWORD(STACK[0x66B8]);
  LODWORD(STACK[0x64F8]) = LODWORD(STACK[0x6630]) ^ 0xF95AF00E;
  LODWORD(STACK[0x63F8]) = LODWORD(STACK[0x6900]) ^ 0x3589540C;
  STACK[0x6AC0] = STACK[0xD880];
  LODWORD(STACK[0x6A80]) = (((LODWORD(STACK[0x6950]) ^ 0x1FC04EDC) - 1047412394) ^ ((LODWORD(STACK[0x6950]) ^ 0xDA7F2DDE)
                                                                                  + 70165080) ^ ((LODWORD(STACK[0x6950]) ^ 0xC1B7D052)
                                                                                               + 535191516))
                         - 811257567;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3) - 8))();
}

uint64_t sub_100CA94B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  _BOOL4 v9;
  _BOOL4 v10;

  v8 = STACK[0x6A80];
  v9 = LODWORD(STACK[0x6A80]) < 0xA9FE6DFB;
  STACK[0x6AB0] = a3 ^ 0x28D0u;
  v10 = a8 - 1547151772 < v8;
  if (v9 != (a8 - 1547151772) < 0xA9FE6DFB)
    v10 = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((32122 * !v10) ^ a3)) - 8))();
}

uint64_t sub_100CAC164()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t (*v181)(uint64_t, uint64_t, uint64_t);

  v2 = v0 + 0x4CBEAB42A868D6C8;
  v3 = (v2 ^ 0xC123D2AC4A24D7D4) & (2 * (v2 & 0x81A3D0AE68090798)) ^ v2 & 0x81A3D0AE68090798;
  v4 = ((2 * (v2 ^ 0xC36452F89A36DED4)) ^ 0x858F04ADE47FB298) & (v2 ^ 0xC36452F89A36DED4) ^ (2
                                                                                                 * (v2 ^ 0xC36452F89A36DED4)) & 0x42C78256F23FD94CLL;
  v5 = v4 ^ 0x4240825212004944;
  v6 = (v4 ^ 0x870000E02C1000) & (4 * v3) ^ v3;
  v7 = ((4 * v5) ^ 0xB1E095BC8FF6530) & v5 ^ (4 * v5) & 0x42C78256F23FD94CLL;
  v8 = (v7 ^ 0x2060052C03F4100) & (16 * v6) ^ v6;
  v9 = ((16 * (v7 ^ 0x40C182043200984CLL)) ^ 0x2C78256F23FD94C0) & (v7 ^ 0x40C182043200984CLL) ^ (16
                                                                                                  * (v7 ^ 0x40C182043200984CLL)) & 0x42C78256F23FD940;
  v10 = (v9 ^ 0x400046223D9000) & (v8 << 8) ^ v8;
  v11 = (((v9 ^ 0x42878210D002490CLL) << 8) ^ 0xC78256F23FD94C00) & (v9 ^ 0x42878210D002490CLL) ^ ((v9 ^ 0x42878210D002490CLL) << 8) & 0x42C78256F23FD900;
  v12 = v10 ^ 0x42C78256F23FD94CLL ^ (v11 ^ 0x4282025232190000) & (v10 << 16);
  v13 = ((v0 + 0x4CBEAB42A868D6C8) ^ (2
                                      * ((v12 << 32) & 0x42C7825600000000 ^ v12 ^ ((v12 << 32) ^ 0x723FD94C00000000) & (((v11 ^ 0x458004C026914CLL) << 16) & 0x42C7825600000000 ^ 0x4081004000000000 ^ (((v11 ^ 0x458004C026914CLL) << 16) ^ 0x256F23F00000000) & (v11 ^ 0x458004C026914CLL))))) >> 31;
  v14 = v0
      - (((v13 ^ 0x453136E443980FB8) - 0x78E603EE89D8C76DLL) ^ ((v13 ^ 0xE7A5BC920F1CE010) + 0x258D76673AA3D73BLL) ^ ((v13 ^ 0xA2948A774CC346BFLL) + 0x60BC4082797C7196))
      - 0xA20AECC64BC0316;
  v15 = (v14 ^ 0x980BF521ABB67FA5) & (2 * (v14 & 0x9AABF5B1AB267FB4)) ^ v14 & 0x9AABF5B1AB267FB4;
  v16 = ((2 * (v14 ^ 0x8C1FDD42B9FEE68DLL)) ^ 0x2D6851E625B13272) & (v14 ^ 0x8C1FDD42B9FEE68DLL) ^ (2 * (v14 ^ 0x8C1FDD42B9FEE68DLL)) & 0x16B428F312D89938;
  v17 = v16 ^ 0x1294281112488909;
  v18 = (v16 ^ 0x42000C200901030) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0x5AD0A3CC4B6264E4) & v17 ^ (4 * v17) & 0x16B428F312D89938;
  v20 = (v19 ^ 0x129020C002400020) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x424083310989919)) ^ 0x6B428F312D899390) & (v19 ^ 0x424083310989919) ^ (16 * (v19 ^ 0x424083310989919)) & 0x16B428F312D89930;
  v22 = (v21 ^ 0x200083100889100) & (v20 << 8) ^ v20;
  v23 = (((v21 ^ 0x14B420C212500829) << 8) ^ 0xB428F312D8993900) & (v21 ^ 0x14B420C212500829) ^ ((v21 ^ 0x14B420C212500829) << 8) & 0x16B428F312D89900;
  v24 = v22 ^ 0x16B428F312D89939 ^ (v23 ^ 0x1420201210980000) & (v22 << 16);
  v25 = (v14 ^ (2
              * ((v24 << 32) & 0x16B428F300000000 ^ v24 ^ ((v24 << 32) ^ 0x12D8993900000000) & (((v23 ^ 0x29408E102408039) << 16) & 0x16B428F300000000 ^ 0x1604282300000000 ^ (((v23 ^ 0x29408E102408039) << 16) ^ 0x28F312D800000000) & (v23 ^ 0x29408E102408039))))) >> 8;
  v26 = v14
      + 0x1CAA6C526BF54CB5
      + (((v25 ^ 0x4F2C8B5D56115517) + 0x27436B6E2E3EDF7) ^ ((v25 ^ 0x9959E4048B32DFCALL) - 0x2BFEA610C03F98D4) ^ ((v25 ^ 0xD6E78CEDE8AD1D90) - 0x6440CEF9A3A05A8ELL));
  v27 = (v26 ^ 0xAEB60AFF39A5230BLL) & (2 * (v26 & 0x30372AFFBDB50352)) ^ v26 & 0x30372AFFBDB50352;
  v28 = ((2 * (v26 ^ 0x8EBC5FBC68AF252FLL)) ^ 0x7D16EA87AA344CFALL) & (v26 ^ 0x8EBC5FBC68AF252FLL) ^ (2 * (v26 ^ 0x8EBC5FBC68AF252FLL)) & 0xBE8B7543D51A267CLL;
  v29 = v28 ^ 0x82891540550A2205;
  v30 = (v28 ^ 0x600380100458) & (4 * v27) ^ v27;
  v31 = ((4 * v29) ^ 0xFA2DD50F546899F4) & v29 ^ (4 * v29) & 0xBE8B7543D51A267CLL;
  v32 = (v31 ^ 0xBA09550354080060) & (16 * v30) ^ v30;
  v33 = ((16 * (v31 ^ 0x482204081122609)) ^ 0xE8B7543D51A267D0) & (v31 ^ 0x482204081122609) ^ (16 * (v31 ^ 0x482204081122609)) & 0xBE8B7543D51A2670;
  v34 = (v33 ^ 0xA883540151022600) & (v32 << 8) ^ v32;
  v35 = (((v33 ^ 0x160821428418002DLL) << 8) ^ 0x8B7543D51A267D00) & (v33 ^ 0x160821428418002DLL) ^ ((v33 ^ 0x160821428418002DLL) << 8) & 0xBE8B7543D51A2600;
  v36 = v34 ^ 0xBE8B7543D51A267DLL ^ (v35 ^ 0x8A01414110020000) & (v34 << 16);
  v37 = (v26 ^ (2
              * ((v36 << 32) & 0x3E8B754300000000 ^ v36 ^ ((v36 << 32) ^ 0x551A267D00000000) & (((v35 ^ 0x348A3402C518027DLL) << 16) & 0x3E8B754300000000 ^ 0xA88204100000000 ^ (((v35 ^ 0x348A3402C518027DLL) << 16) ^ 0x7543D51A00000000) & (v35 ^ 0x348A3402C518027DLL))))) >> 2;
  v38 = v26
      + 0x621DC2BB688D3D1BLL
      + (((v37 ^ 0xCE55C73DD19DEA34) - 0x2FF6ACE34CE980D0) ^ ((v37 ^ 0xAD62B32B8B63BA32) - 0x4CC1D8F51617D0D6) ^ ((v37 ^ 0x7A7A1628DF1E03ECLL) + 0x64268209BD9596F8));
  v39 = (v38 ^ 0xA74769004D33FE40) & (2 * (v38 & 0xC70772246DBBFF45)) ^ v38 & 0xC70772246DBBFF45;
  v40 = ((2 * (v38 ^ 0xAD4F6D00C742AEC2)) ^ 0xD4903E4955F2A30ELL) & (v38 ^ 0xAD4F6D00C742AEC2) ^ (2 * (v38 ^ 0xAD4F6D00C742AEC2)) & 0x6A481F24AAF95186;
  v41 = v40 ^ 0x2A480124AA095081;
  v42 = (v40 ^ 0x180000F00104) & (4 * v39) ^ v39;
  v43 = ((4 * v41) ^ 0xA9207C92ABE5461CLL) & v41 ^ (4 * v41) & 0x6A481F24AAF95184;
  v44 = (v43 ^ 0x28001C00AAE14000) & (16 * v42) ^ v42;
  v45 = ((16 * (v43 ^ 0x4248032400181183)) ^ 0xA481F24AAF951870) & (v43 ^ 0x4248032400181183) ^ (16 * (v43 ^ 0x4248032400181183)) & 0x6A481F24AAF95180;
  v46 = (v45 ^ 0x20001200AA911000) & (v44 << 8) ^ v44;
  v47 = (((v45 ^ 0x4A480D2400684187) << 8) ^ 0x481F24AAF9518700) & (v45 ^ 0x4A480D2400684187) ^ ((v45 ^ 0x4A480D2400684187) << 8) & 0x6A481F24AAF95100;
  v48 = v46 ^ 0x6A481F24AAF95187 ^ (v47 ^ 0x48080420A8510000) & (v46 << 16);
  v49 = v38 ^ (2
             * ((v48 << 32) & 0x6A481F2400000000 ^ v48 ^ ((v48 << 32) ^ 0x2AF9518700000000) & (((v47 ^ 0x22401B0402A85087) << 16) & 0x6A481F2400000000 ^ 0x6048150400000000 ^ (((v47 ^ 0x22401B0402A85087) << 16) ^ 0x1F24AAF900000000) & (v47 ^ 0x22401B0402A85087))));
  v50 = ((v49 >> 28) ^ 0xE5CBD0701)
      + (v49 ^ 0xE5CBD0701517303FLL)
      - ((((v49 >> 28) ^ 0xE5CBD0701) + (v49 ^ 0xE5CBD0701517303FLL)) >> 14);
  v51 = v50 - (v50 >> 2);
  v52 = v51 + ((v51 - 0x50EB153450A9D923) >> 25) - 0x20EBF0BF058193AFLL;
  v53 = (v52 ^ 0xC6D09B2032873A8CLL) & (2 * (v52 & 0xD000DB8AB4D7BA8CLL)) ^ v52 & 0xD000DB8AB4D7BA8CLL;
  v54 = ((2 * (v52 ^ 0x66D03A3133A56A94)) ^ 0x6DA1C3770EE5A030) & (v52 ^ 0x66D03A3133A56A94) ^ (2 * (v52 ^ 0x66D03A3133A56A94)) & 0xB6D0E1BB8772D018;
  v55 = v54 ^ 0x9250208881125008;
  v56 = (v54 ^ 0xC03306608010) & (4 * v53) ^ v53;
  v57 = ((4 * v55) ^ 0xDB4386EE1DCB4060) & v55 ^ (4 * v55) & 0xB6D0E1BB8772D018;
  v58 = (v57 ^ 0x924080AA05424000) & (16 * v56) ^ v56;
  v59 = ((16 * (v57 ^ 0x2490611182309018)) ^ 0x6D0E1BB8772D0180) & (v57 ^ 0x2490611182309018) ^ (16 * (v57 ^ 0x2490611182309018)) & 0xB6D0E1BB8772D010;
  v60 = (v59 ^ 0x240001B807200000) & (v58 << 8) ^ v58;
  v61 = (((v59 ^ 0x92D0E0038052D018) << 8) ^ 0xD0E1BB8772D01800) & (v59 ^ 0x92D0E0038052D018) ^ ((v59 ^ 0x92D0E0038052D018) << 8) & 0xB6D0E1BB8772D000;
  v62 = v60 ^ 0xB6D0E1BB8772D018 ^ (v61 ^ 0x90C0A18302500000) & (v60 << 16);
  v63 = (v52 ^ (2
              * ((v62 << 32) & 0x36D0E1BB00000000 ^ v62 ^ ((v62 << 32) ^ 0x772D01800000000) & (((v61 ^ 0x261040388522C018) << 16) & 0x36D0E1BB00000000 ^ 0x1640608900000000 ^ (((v61 ^ 0x261040388522C018) << 16) ^ 0x61BB877200000000) & (v61 ^ 0x261040388522C018))))) >> 15;
  v64 = v51
      + ((v51 - 0x50EB153450A9D923) >> 25)
      + 0x4058DC77C6426C10
      + (((v63 ^ 0x76FAC7536658143) - 0x4224680931618958) ^ ((v63 ^ 0x3F4711089FCFC51DLL) - 0x7A0CD57498CBCD06) ^ ((v63 ^ 0x3829DF7C9831303ALL) - 0x7D621B009F353821));
  v65 = (v64 ^ 0x22E630991F32A76CLL) & (2 * (v64 & 0xB406B4D11FB3374CLL)) ^ v64 & 0xB406B4D11FB3374CLL;
  v66 = ((2 * (v64 ^ 0x4AEE303B0350EF64)) ^ 0xFDD109D439C7B050) & (v64 ^ 0x4AEE303B0350EF64) ^ (2 * (v64 ^ 0x4AEE303B0350EF64)) & 0xFEE884EA1CE3D828;
  v67 = v66 ^ 0x228842A04204828;
  v68 = (v66 ^ 0xF00000C018C19000) & (4 * v65) ^ v65;
  v69 = ((4 * v67) ^ 0xFBA213A8738F60A0) & v67 ^ (4 * v67) & 0xFEE884EA1CE3D828;
  v70 = (v69 ^ 0xFAA000A810834020) & (16 * v68) ^ v68;
  v71 = ((16 * (v69 ^ 0x44884420C609808)) ^ 0xEE884EA1CE3D8280) & (v69 ^ 0x44884420C609808) ^ (16 * (v69 ^ 0x44884420C609808)) & 0xFEE884EA1CE3D820;
  v72 = (v71 ^ 0xEE8804A00C218000) & (v70 << 8) ^ v70;
  v73 = (((v71 ^ 0x1060804A10C25828) << 8) ^ 0xE884EA1CE3D82800) & (v71 ^ 0x1060804A10C25828) ^ ((v71 ^ 0x1060804A10C25828) << 8) & 0xFEE884EA1CE3D800;
  v74 = v72 ^ 0xFEE884EA1CE3D828 ^ (v73 ^ 0xE880800800C00000) & (v72 << 16);
  v75 = (v64 ^ (2
              * ((v74 << 32) & 0x7EE884EA00000000 ^ v74 ^ ((v74 << 32) ^ 0x1CE3D82800000000) & (((v73 ^ 0x166804E21C23D028) << 16) & 0x7EE884EA00000000 ^ 0x7A00800800000000 ^ (((v73 ^ 0x166804E21C23D028) << 16) ^ 0x4EA1CE300000000) & (v73 ^ 0x166804E21C23D028))))) >> 4;
  v76 = v64
      - (((v75 ^ 0xADD8B88568F8BCD4) + 0x5E92DD538DEC91EDLL) ^ ((v75 ^ 0x44C7474F12711562) - 0x4872DD66089AC7A5) ^ ((v75 ^ 0xEE1E941F28EEE1C7) + 0x1D54F1C9CDFACD00))
      - 0x450652806B454CB3;
  v77 = (v76 ^ 0xC81F01412A43E968) & (2 * (v76 & 0xED581555426BE949)) ^ v76 & 0xED581555426BE949;
  v78 = ((2 * (v76 ^ 0x1AAF0149AE96FBEALL)) ^ 0xEFEE2839D9FA2546) & (v76 ^ 0x1AAF0149AE96FBEALL) ^ (2 * (v76 ^ 0x1AAF0149AE96FBEALL)) & 0xF7F7141CECFD12A2;
  v79 = v78 ^ 0x10111404240512A1;
  v80 = (v78 ^ 0xE7E0001808F80000) & (4 * v77) ^ v77;
  v81 = ((4 * v79) ^ 0xDFDC5073B3F44A8CLL) & v79 ^ (4 * v79) & 0xF7F7141CECFD12A0;
  v82 = (v81 ^ 0xD7D41010A0F40280) & (16 * v80) ^ v80;
  v83 = ((16 * (v81 ^ 0x2023040C4C091023)) ^ 0x7F7141CECFD12A30) & (v81 ^ 0x2023040C4C091023) ^ (16 * (v81 ^ 0x2023040C4C091023)) & 0xF7F7141CECFD12A0;
  v84 = (v83 ^ 0x7771000CCCD10200) & (v82 << 8) ^ v82;
  v85 = (((v83 ^ 0x80861410202C1083) << 8) ^ 0xF7141CECFD12A300) & (v83 ^ 0x80861410202C1083) ^ ((v83 ^ 0x80861410202C1083) << 8) & 0xF7F7141CECFD1200;
  v86 = v84 ^ 0xF7F7141CECFD12A3 ^ (v85 ^ 0xF714140CEC100000) & (v84 << 16);
  v87 = v76 ^ (2
             * ((v86 << 32) & 0x77F7141C00000000 ^ v86 ^ ((v86 << 32) ^ 0x6CFD12A300000000) & (((v85 ^ 0xE3001000ED10A3) << 16) & 0x77F7141C00000000 ^ 0x63E3100000000000 ^ (((v85 ^ 0xE3001000ED10A3) << 16) ^ 0x141CECFD00000000) & (v85 ^ 0xE3001000ED10A3))));
  v88 = ((((v87 >> 30) ^ 0x461D0749A5A6477BLL) - 0x291F24FF729BB4BDLL) ^ (((v87 >> 30) ^ 0x823FF65C23272EC1)
                                                                        + 0x12C22A150BE522F9) ^ (((v87 >> 30) ^ 0xC422F1147D74F2AELL)
                                                                                                 + 0x54DF2D5D55B6FE98))
      + (((v87 ^ 0xB621D03682665D1DLL) - 0x135AEC3544A03CA8) ^ ((v87 ^ 0xBCC63BFEA0D8C899) - 0x19BD07FD661EA92CLL) ^ ((v87 ^ 0x741A8D0D1F1406BDLL) + 0x2E9E4EF1262D98F8));
  v89 = ((v88 + 0x58EE8E2845FC79C1) ^ 0xF5DDEF55F93ACD1CLL) & (2
                                                               * ((v88 + 0x58EE8E2845FC79C1) & 0xF199F055E238E19DLL)) ^ (v88 + 0x58EE8E2845FC79C1) & 0xF199F055E238E19DLL;
  v90 = ((2 * ((v88 + 0x58EE8E2845FC79C1) ^ 0xF4CD6F5CB90BCD1ELL)) ^ 0xAA93E12B6665906) & ((v88
                                                                                              + 0x58EE8E2845FC79C1) ^ 0xF4CD6F5CB90BCD1ELL) ^ (2 * ((v88 + 0x58EE8E2845FC79C1) ^ 0xF4CD6F5CB90BCD1ELL)) & 0x5549F095B332C82;
  v91 = v90 ^ 0x554810949112481;
  v92 = (v90 ^ 0x20010220800) & (4 * v89) ^ v89;
  v93 = ((4 * v91) ^ 0x15527C256CCCB20CLL) & v91 ^ (4 * v91) & 0x5549F095B332C80;
  v94 = (v93 ^ 0x5501C0148002000) & (16 * v92) ^ v92;
  v95 = ((16 * (v93 ^ 0x4830813330C83)) ^ 0x5549F095B332C830) & (v93 ^ 0x4830813330C83) ^ (16
                                                                                               * (v93 ^ 0x4830813330C83)) & 0x5549F095B332C80;
  v96 = (v95 ^ 0x540900113320800) & (v94 << 8) ^ v94;
  v97 = (((v95 ^ 0x140F0848012483) << 8) ^ 0x549F095B332C8300) & (v95 ^ 0x140F0848012483) ^ ((v95 ^ 0x140F0848012483) << 8) & 0x5549F095B332C00;
  v98 = v96 ^ 0x5549F095B332C83 ^ (v97 ^ 0x414090913200000) & (v96 << 16);
  v99 = v88
      + 0x4A887E7E28355B5FLL
      + ((((v88 + 0x58EE8E2845FC79C1) ^ (2
                                         * ((v98 << 32) & 0x5549F0900000000 ^ v98 ^ ((v98 << 32) ^ 0x5B332C8300000000) & (((v97 ^ 0x140960048132C83) << 16) & 0x5549F0900000000 ^ 0x54840800000000 ^ (((v97 ^ 0x140960048132C83) << 16) ^ 0x1F095B3300000000) & (v97 ^ 0x140960048132C83))))) >> 15) ^ 0xFFFE0DDE53755742);
  v100 = v99 + (v99 >> 2) - ((2 * (v99 + (v99 >> 2))) & 0x8271D3F4E5F5F436) - 0x3EC716058D0505E5;
  v101 = (((v100 ^ 0x4E59F38DF9069F44) - 0x4E59F38DF9069F44) ^ ((v100 ^ 0x4FD250F02FBC9398) - 0x4FD250F02FBC9398) ^ ((v100 ^ 0xC0B34A87A440F6C7) + 0x3F4CB5785BBF0939))
       - 0x62C37450734D6D5BLL;
  v102 = v101 - (v101 >> 25) + ((v101 - (v101 >> 25)) >> 14);
  v103 = v102
       + (v102 >> 2)
       + 0x7792F09AB7D04740
       - ((v102 + (v102 >> 2) + 0x7792F09AB7D04740) >> 28)
       - ((v102 + (v102 >> 2) + 0x7792F09AB7D04740 - ((v102 + (v102 >> 2) + 0x7792F09AB7D04740) >> 28)) >> 15);
  v104 = ((2 * v103) & 0x7FFDA73FF2FBF6F6) + (v103 ^ 0x3FFED39FF97DFB7BLL);
  v105 = ((v104 - 0x1520830121500A62) ^ 0x901DAF7927914EE6) & (2
                                                                 * ((v104 - 0x1520830121500A62) & 0xD521AF6127D20EE7)) ^ (v104 - 0x1520830121500A62) & 0xD521AF6127D20EE7;
  v106 = ((2 * ((v104 - 0x1520830121500A62) ^ 0xB21EA3B926154EE6)) ^ 0xCE7E19B0038E8002) & ((v104
                                                                                                 - 0x1520830121500A62) ^ 0xB21EA3B926154EE6) ^ (2 * ((v104 - 0x1520830121500A62) ^ 0xB21EA3B926154EE6)) & 0x673F0CD801C74000;
  v107 = v106 ^ 0x2101044800414001;
  v108 = (v106 ^ 0x440E088001800000) & (4 * v105) ^ v105;
  v109 = ((4 * v107) ^ 0x9CFC3360071D0004) & v107 ^ (4 * v107) & 0x673F0CD801C74000;
  v110 = (v109 ^ 0x43C004001050000) & (16 * v108) ^ v108;
  v111 = ((16 * (v109 ^ 0x63030C9800C24001)) ^ 0x73F0CD801C740010) & (v109 ^ 0x63030C9800C24001) ^ (16 * (v109 ^ 0x63030C9800C24001)) & 0x673F0CD801C74000;
  v112 = (v111 ^ 0x63300C8000440000) & (v110 << 8) ^ v110;
  v113 = (((v111 ^ 0x40F005801834001) << 8) ^ 0x3F0CD801C7400100) & (v111 ^ 0x40F005801834001) ^ ((v111 ^ 0x40F005801834001) << 8) & 0x673F0CD801C74000;
  v114 = v112 ^ 0x673F0CD801C74001 ^ (v113 ^ 0x270C080001400000) & (v112 << 16);
  v115 = ((v104 - 0x1520830121500A62) ^ (2
                                         * ((v114 << 32) & 0x673F0CD800000000 ^ v114 ^ ((v114 << 32) ^ 0x1C7400100000000) & (((v113 ^ 0x403304D800874001) << 16) & 0x673F0CD800000000 ^ 0x63270C1800000000 ^ (((v113 ^ 0x403304D800874001) << 16) ^ 0xCD801C700000000) & (v113 ^ 0x403304D800874001uLL))))) >> 5;
  v116 = v104
       - (((v115 ^ 0xD5B31951C24E383ALL) + 0x3F1549086302E313) ^ ((v115 ^ 0x4D27D9A48254B7CBLL) - 0x587E7602DCE7931CLL) ^ ((v115 ^ 0x985E4D43C9386B86) + 0x72F81D1A6874B0AFLL))
       + 0x1C9699D893B3B8D9;
  v117 = (v116 ^ 0x89C7686613BCEB4DLL) & (2 * (v116 & 0x8DD770769B3C8B0CLL)) ^ v116 & 0x8DD770769B3C8B0CLL;
  v118 = ((2 * (v116 ^ 0x89C9682623D5E945)) ^ 0x83C30A171D2C492) & (v116 ^ 0x89C9682623D5E945) ^ (2 * (v116 ^ 0x89C9682623D5E945)) & 0x41E1850B8E96248;
  v119 = v118 ^ 0x402085088292249;
  v120 = (v118 ^ 0x1C000030C04000) & (4 * v117) ^ v117;
  v121 = ((4 * v119) ^ 0x10786142E3A58924) & v119 ^ (4 * v119) & 0x41E1850B8E96248;
  v122 = (v121 ^ 0x180040A0A10000) & (16 * v120) ^ v120;
  v123 = ((16 * (v121 ^ 0x406181018486249)) ^ 0x41E1850B8E962490) & (v121 ^ 0x406181018486249) ^ (16 * (v121 ^ 0x406181018486249)) & 0x41E1850B8E96240;
  v124 = (v123 ^ 0x88802000) & (v122 << 8) ^ v122;
  v125 = (((v123 ^ 0x41E185030694249) << 8) ^ 0x1E1850B8E9624900) & (v123 ^ 0x41E185030694249) ^ ((v123 ^ 0x41E185030694249) << 8) & 0x41E1850B8E96200;
  v126 = v124 ^ 0x41E1850B8E96249 ^ (v125 ^ 0x4181010A8600000) & (v124 << 16);
  v127 = v116 ^ (2
               * ((v126 << 32) & 0x41E185000000000 ^ v126 ^ ((v126 << 32) ^ 0x38E9624900000000) & (((v125 ^ 0x6084010892249) << 16) & 0x41E185000000000 ^ 0x40E001000000000 ^ (((v125 ^ 0x6084010892249) << 16) ^ 0x1850B8E900000000) & (v125 ^ 0x6084010892249))));
  v128 = ((v127 ^ 0x7B2720A9D22C4780) + 0x1E54FDFE0754582BLL) ^ ((v127 ^ 0x779F82521D4A57BCLL) + 0x12EC5F05C8324817) ^ ((v127 ^ 0x8943E2AC25885FA2) - 0x13CFC0040F0FBFF7);
  v129 = ((v128 - 0x7946021C192767F8) ^ 0xEE8405844F45D9F8) & (2
                                                                 * ((v128 - 0x7946021C192767F8) & 0xECC524208E61D9FCLL)) ^ (v128 - 0x7946021C192767F8) & 0xECC524208E61D9FCLL;
  v130 = ((2 * ((v128 - 0x7946021C192767F8) ^ 0xBF040DC54346F968)) ^ 0xA78253CB9A4E4128) & ((v128
                                                                                                 - 0x7946021C192767F8) ^ 0xBF040DC54346F968) ^ (2 * ((v128 - 0x7946021C192767F8) ^ 0xBF040DC54346F968)) & 0x53C129E5CD272094;
  v131 = v130 ^ 0x5041282445212094;
  v132 = (v130 ^ 0x300018008060000) & (4 * v129) ^ v129;
  v133 = ((4 * v131) ^ 0x4F04A797349C8250) & v131 ^ (4 * v131) & 0x53C129E5CD272094;
  v134 = (v133 ^ 0x4300218504040000) & (16 * v132) ^ v132;
  v135 = ((16 * (v133 ^ 0x10C10860C9232084)) ^ 0x3C129E5CD2720940) & (v133 ^ 0x10C10860C9232084) ^ (16 * (v133 ^ 0x10C10860C9232084)) & 0x53C129E5CD272090;
  v136 = (v135 ^ 0x10000844C0220000) & (v134 << 8) ^ v134;
  v137 = (((v135 ^ 0x43C121A10D052094) << 8) ^ 0xC129E5CD27209400) & (v135 ^ 0x43C121A10D052094) ^ ((v135 ^ 0x43C121A10D052094) << 8) & 0x53C129E5CD272000;
  v138 = v136 ^ 0x53C129E5CD272094 ^ (v137 ^ 0x410121C505200000) & (v136 << 16);
  v139 = ((((v128 - 0x7946021C192767F8) ^ (2
                                           * ((v138 << 32) & 0x53C129E500000000 ^ v138 ^ ((v138 << 32) ^ 0x4D27209400000000) & (((v137 ^ 0x12C00820C8072094) << 16) & 0x53C129E500000000 ^ 0x520020C000000000 ^ (((v137 ^ 0x12C00820C8072094) << 16) ^ 0x29E5CD2700000000) & (v137 ^ 0x12C00820C8072094))))) >> 30) ^ 0xFFFFFFFCDAEB2473)
       + v128;
  v140 = v139 + ((v139 + 0x737F2204753A7205) >> 13);
  v141 = ((v140 - 0x11BA416590895FD0) ^ 0x31B04B40758B9D80) & (2
                                                                 * ((v140 - 0x11BA416590895FD0) & 0x8539636A05C3D1D5)) ^ (v140 - 0x11BA416590895FD0) & 0x8539636A05C3D1D5;
  v142 = ((2 * ((v140 - 0x11BA416590895FD0) ^ 0x3B800B5474889EA0)) ^ 0x7D72D07CE2969EEALL) & ((v140
                                                                                                 - 0x11BA416590895FD0) ^ 0x3B800B5474889EA0) ^ (2 * ((v140 - 0x11BA416590895FD0) ^ 0x3B800B5474889EA0)) & 0xBEB9683E714B4F74;
  v143 = v142 ^ 0x8289280211494115;
  v144 = (v142 ^ 0x3C20003820020E60) & (4 * v141) ^ v141;
  v145 = ((4 * v143) ^ 0xFAE5A0F9C52D3DD4) & v143 ^ (4 * v143) & 0xBEB9683E714B4F74;
  v146 = (v145 ^ 0xBAA1203841090D50) & (16 * v144) ^ v144;
  v147 = ((16 * (v145 ^ 0x418480630424221)) ^ 0xEB9683E714B4F750) & (v145 ^ 0x418480630424221) ^ (16 * (v145 ^ 0x418480630424221)) & 0xBEB9683E714B4F70;
  v148 = (v147 ^ 0xAA90002610004700) & (v146 << 8) ^ v146;
  v149 = (((v147 ^ 0x14296818614B0825) << 8) ^ 0xB9683E714B4F7500) & (v147 ^ 0x14296818614B0825) ^ ((v147 ^ 0x14296818614B0825) << 8) & 0xBEB9683E714B4F00;
  v150 = v148 ^ 0xBEB9683E714B4F75 ^ (v149 ^ 0xB8282830414B0000) & (v148 << 16);
  v151 = ((v140 - 0x11BA416590895FD0) ^ (2
                                         * ((v150 << 32) & 0x3EB9683E00000000 ^ v150 ^ ((v150 << 32) ^ 0x714B4F7500000000) & (((v149 ^ 0x691400E30000A75) << 16) & 0x3EB9683E00000000 ^ 0x1681083400000000 ^ (((v149 ^ 0x691400E30000A75) << 16) ^ 0x683E714B00000000) & (v149 ^ 0x691400E30000A75))))) >> 8;
  v152 = v140
       - (((v151 ^ 0x5D825C834AB6C01FLL) - 0x7791F728D9504BD8) ^ ((v151 ^ 0x52064E54205979D6) - 0x7815E5FFB3BFF211) ^ ((v151 ^ 0xF1C4BF41408EC86) - 0x250FE05F87EE6741))
       + 0x5FCDFBCA0E92E888;
  v153 = (v152 ^ 0xC8B5A32C7D1108F5) & (2 * (v152 & 0xE92533B179A5AAF5)) ^ v152 & 0xE92533B179A5AAF5;
  v154 = ((2 * (v152 ^ 0x8BDC16C5C124D15)) ^ 0xC331E5BA4B6FCFC0) & (v152 ^ 0x8BDC16C5C124D15) ^ (2 * (v152 ^ 0x8BDC16C5C124D15)) & 0xE198F2DD25B7E7E0;
  v155 = v154 ^ 0x2088124524902020;
  v156 = (v154 ^ 0xC110C0880127C7C0) & (4 * v153) ^ v153;
  v157 = ((4 * v155) ^ 0x8663CB7496DF9F80) & v155 ^ (4 * v155) & 0xE198F2DD25B7E7E0;
  v158 = (v157 ^ 0x8000C25404978780) & (16 * v156) ^ v156;
  v159 = ((16 * (v157 ^ 0x6198308921206060)) ^ 0x198F2DD25B7E7E00) & (v157 ^ 0x6198308921206060) ^ (16 * (v157 ^ 0x6198308921206060)) & 0xE198F2DD25B7E7E0;
  v160 = (v159 ^ 0x18820D001366600) & (v158 << 8) ^ v158;
  v161 = (((v159 ^ 0xE010D20D248181E0) << 8) ^ 0x98F2DD25B7E7E000) & (v159 ^ 0xE010D20D248181E0) ^ ((v159 ^ 0xE010D20D248181E0) << 8) & 0xE198F2DD25B7E700;
  v162 = v160 ^ 0xE198F2DD25B7E7E0 ^ (v161 ^ 0x8090D00525A70000) & (v160 << 16);
  v163 = v152 ^ (2
               * ((v162 << 32) & 0x6198F2DD00000000 ^ v162 ^ ((v162 << 32) ^ 0x25B7E7E000000000) & (((v161 ^ 0x610822D8001007E0) << 16) & 0x6198F2DD00000000 ^ 0x100D24800000000 ^ (((v161 ^ 0x610822D8001007E0) << 16) ^ 0x72DD25B700000000) & (v161 ^ 0x610822D8001007E0))));
  v164 = ((v163 ^ 0x4138DCF383F861A8) + 0x12371D920A114801) ^ ((v163 ^ 0xF74C51174A9970A7) - 0x5BBC6F893C8FA6F0) ^ ((v163 ^ 0xDF419E6FFBAB743ALL) - 0x73B1A0F18DBDA26DLL);
  v165 = ((v164 - 0x16B638876A15467BLL) ^ 0x98E7AEEC918BCF0CLL) & (2
                                                                 * ((v164 - 0x16B638876A15467BLL) & 0x90C7A0CE8413EF4CLL)) ^ (v164 - 0x16B638876A15467BLL) & 0x90C7A0CE8413EF4CLL;
  v166 = ((2 * ((v164 - 0x16B638876A15467BLL) ^ 0x99E6AFED918A8394)) ^ 0x12421E462B32D9B0) & ((v164
                                                                                                 - 0x16B638876A15467BLL) ^ 0x99E6AFED918A8394) ^ (2 * ((v164 - 0x16B638876A15467BLL) ^ 0x99E6AFED918A8394)) & 0x9210F2315996CD8;
  v167 = v166 ^ 0x921012114892448;
  v168 = (v166 ^ 0x60200104810) & (4 * v165) ^ v165;
  v169 = ((4 * v167) ^ 0x24843C8C5665B360) & v167 ^ (4 * v167) & 0x9210F2315996CD8;
  v170 = (v169 ^ 0xC0014012040) & (16 * v168) ^ v168;
  v171 = ((16 * (v169 ^ 0x921032301984C98)) ^ 0x9210F2315996CD80) & (v169 ^ 0x921032301984C98) ^ (16 * (v169 ^ 0x921032301984C98)) & 0x9210F2315996CD0;
  v172 = (v171 ^ 0x22111904C00) & (v170 << 8) ^ v170;
  v173 = (((v171 ^ 0x9210D0204092058) << 8) ^ 0x210F2315996CD800) & (v171 ^ 0x9210D0204092058) ^ ((v171 ^ 0x9210D0204092058) << 8) & 0x9210F2315996C00;
  v174 = v172 ^ 0x9210F2315996CD8 ^ (v173 ^ 0x101030111080000) & (v172 << 16);
  v175 = v164
       + 0x7A11684719FEA8D1
       + ((((v164 - 0x16B638876A15467BLL) ^ (2
                                           * ((v174 << 32) & 0x9210F2300000000 ^ v174 ^ ((v174 << 32) ^ 0x15996CD800000000) & (((v173 ^ 0x8200C22049124D8) << 16) & 0x9210F2300000000 ^ 0xA2200000000 ^ (((v173 ^ 0x8200C22049124D8) << 16) ^ 0xF23159900000000) & (v173 ^ 0x8200C22049124D8))))) >> 27) ^ 0x1010F4D115);
  v176 = v175 + (v175 >> 12) + ((v175 + (v175 >> 12)) >> 4);
  v177 = ((((v176 - ((2 * v176) & 0xD9CE24E4A7E9C0ALL) + 0x6CE7127253F4E05) ^ 0x80C316A8F3FDEFBFLL)
         + 0x7F3CE9570C021041) ^ (((v176 - ((2 * v176) & 0xD9CE24E4A7E9C0ALL) + 0x6CE7127253F4E05) ^ 0xB2A240648B68F577)
                                  + 0x4D5DBF9B74970A89) ^ (((v176
                                                             - ((2 * v176) & 0xD9CE24E4A7E9C0ALL)
                                                             + 0x6CE7127253F4E05) ^ 0x34AF27EB5DAA54CDLL)
                                                           - 0x34AF27EB5DAA54CDLL))
       - 0x3EF05FCBA37A54A3;
  v178 = v177 - (v177 >> 25) + ((v177 - (v177 >> 25)) >> 11);
  LODWORD(v178) = ((((v178 >> 5) ^ v178 ^ 0xD3D1F893) - 1671658053) ^ (((v178 >> 5) ^ v178 ^ 0x322A1EAE) + 2108121992) ^ (((v178 >> 5) ^ v178 ^ 0xE1FBE63D) - 1367958763))
                - 465433064
                + ((((2 * ((v178 >> 5) & v178)) ^ 0x9F5727B8) + 35141537) ^ (((2 * ((v178 >> 5) & v178)) ^ 0x2A14FBA9)
                                                                           - 1218712654) ^ (((2 * ((v178 >> 5) & v178)) ^ 0xB543DC11)
                                                                                          + 671927306));
  LODWORD(v51) = (v178 ^ 0x2CC87080) & (2 * (v178 & 0x2EE164A5)) ^ v178 & 0x2EE164A5;
  LODWORD(v176) = ((2 * (v178 ^ 0x6CCA3888)) ^ 0x8456B85A) & (v178 ^ 0x6CCA3888) ^ (2 * (v178 ^ 0x6CCA3888)) & 0x422B5C2C;
  LODWORD(v99) = v176 ^ 0x42294425;
  LODWORD(v176) = (v176 ^ 0x21008) & (4 * v51) ^ v51;
  LODWORD(v51) = ((4 * v99) ^ 0x8AD70B4) & v99 ^ (4 * v99) & 0x422B5C2C;
  LODWORD(v176) = (v51 ^ 0x295020) & (16 * v176) ^ v176;
  LODWORD(v51) = ((16 * (v51 ^ 0x42020C09)) ^ 0x22B5C2D0) & (v51 ^ 0x42020C09) ^ (16 * (v51 ^ 0x42020C09)) & 0x422B5C00;
  LODWORD(STACK[0x68C0]) = LODWORD(STACK[0x6840]) ^ 0xA5B8E8AC;
  LODWORD(STACK[0x6430]) = LODWORD(STACK[0x6A70]) ^ 0x117A2EAA;
  LODWORD(STACK[0x6398]) = LODWORD(STACK[0x6500]) ^ 0x7B9DB089;
  v179 = v1 ^ 0xA36129E4 ^ v127 ^ v76 ^ v178 ^ (2
                                                                                        * ((v51 ^ 0x2214000) & ((_DWORD)v176 << 8) ^ v176 ^ v86 ^ ((((v51 ^ 0x400A1C2D) << 8) ^ 0x2B5C0000) & (v51 ^ 0x400A1C2D) ^ ((v51 ^ 0x400A1C2D) << 8) & 0x422B0000 ^ 0x2080000) & (((v51 ^ 0x2214000) & ((_DWORD)v176 << 8) ^ v176) << 16)));
  if (((*(_BYTE *)(STACK[0x6A90]
                  + ((*(_BYTE *)(STACK[0x6A90]
                               + ((*(_BYTE *)(STACK[0x6A90] + ((*(_BYTE *)(STACK[0x6A90] + 10) + 5) & 0xF)) + 9) & 0xF))
                    + 7) & 0xF))
       + 12) & 0xE) != 0)
    v180 = (*(_BYTE *)(STACK[0x6A90]
                     + ((*(_BYTE *)(STACK[0x6A90]
                                  + ((*(_BYTE *)(STACK[0x6A90] + ((*(_BYTE *)(STACK[0x6A90] + 10) + 5) & 0xF)) + 9) & 0xF))
                       + 7) & 0xF))
          + 12) & 0xF;
  else
    v180 = 1;
  v181 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6AB0]) - 8);
  STACK[0x6A80] = v180 - 1;
  return v181(2583706316, v179, 1395910137);
}

uint64_t sub_100CAE9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;

  v8 = STACK[0x6AB0];
  LODWORD(STACK[0x6AC0]) = STACK[0x6AB0] - 1958;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((39 * (STACK[0x6A80] == a8)) ^ v8)) - 8))();
}

uint64_t sub_100CB0294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = LODWORD(STACK[0x6AC0]) + 3991;
  LODWORD(STACK[0x6688]) = LODWORD(STACK[0x6668]) ^ 0xD44F31F5;
  v8 = STACK[0x6AD8];
  LODWORD(STACK[0x6960]) = v7;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * v7);
  STACK[0x6AB0] = -209932395;
  STACK[0x6A80] = 1867364737;
  return v9(-467664728, a2, a3, -652466795, a5, a6, a7, 15);
}

uint64_t sub_100CB0380@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, int a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  int v20;
  int v21;
  unint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  unint64_t v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  unint64_t v195;
  unsigned int v196;
  unint64_t v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  uint64_t (*v202)(unint64_t, _QWORD, uint64_t, unint64_t, _QWORD, _QWORD, uint64_t, unint64_t);
  unsigned int v203;
  unint64_t v204;

  LODWORD(STACK[0x69A0]) = a6;
  LODWORD(STACK[0x69D0]) = a5;
  LODWORD(STACK[0x69E0]) = a2;
  STACK[0x69F0] = v19;
  STACK[0x6A00] = v17;
  STACK[0x6A10] = v13;
  STACK[0x6A20] = v14;
  STACK[0x6A30] = a8;
  STACK[0x6A40] = v22;
  STACK[0x6A50] = a4;
  STACK[0x6A60] = v12;
  STACK[0x6A70] = a1;
  v23 = ((*(unsigned __int8 *)(v12 + a7) ^ LODWORD(STACK[0x2480]))
       + (LODWORD(STACK[0x6AC0]) ^ 0x880C7AB7)
       + ((2 * *(unsigned __int8 *)(v12 + a7)) & 0xF4))
      * a3
      - 1430112286;
  v24 = ((2 * (v23 ^ 0xCBCA9E58)) ^ 0xB01471C6) & (v23 ^ 0xCBCA9E58) ^ (2 * (v23 ^ 0xCBCA9E58)) & 0x580A38E2;
  v25 = (v23 ^ 0xCBCA963A) & (2 * (v23 & 0x93C0A6BB)) ^ v23 & 0x93C0A6BB;
  v26 = ((4 * (v24 ^ 0x480A0821)) ^ 0x6028E38C) & (v24 ^ 0x480A0821) ^ (4 * (v24 ^ 0x480A0821)) & 0x580A38E0;
  v27 = (v26 ^ 0x40082083) & (16 * ((v24 ^ 0x100830C1) & (4 * v25) ^ v25)) ^ (v24 ^ 0x100830C1) & (4 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x18021863)) ^ 0x80A38E30) & (v26 ^ 0x18021863) ^ (16 * (v26 ^ 0x18021863)) & 0x580A38E0;
  v29 = v27 ^ 0x580A38E3 ^ (v28 ^ 0x208C3) & (v27 << 8);
  v30 = v23 ^ (2
             * ((v29 << 16) & 0x580A0000 ^ v29 ^ ((v29 << 16) ^ 0x38E30000) & (((v28 ^ 0x580830C3) << 8) & 0x580A0000 ^ 0x50020000 ^ (((v28 ^ 0x580830C3) << 8) ^ 0xA380000) & (v28 ^ 0x580830C3))));
  v31 = ((v30 ^ v10 ^ 0x5265BFCF) - 647225110) ^ ((v30 ^ v10 ^ 0x2D47A22E) - 1504822007) ^ ((v30 ^ v10 ^ 0x6CF2CA9C)
                                                                                          - 402958917);
  v32 = a7 + a4 + v31;
  v33 = v32 ^ LODWORD(STACK[0x2484]);
  v34 = v32 & 0x8E0A920F ^ 0x44248444 ^ (2 * (v32 & 0x8E0A920F)) & v33 ^ ((2 * (v32 & 0x8E0A920F)) & 0x4040404 | 0x800);
  v35 = (2 * v33) & 0x44248C44 ^ 0x44248444 ^ ((2 * v33) ^ 0x88491888) & v33;
  v36 = (4 * v34) & 0x44248C44 ^ v34 ^ ((4 * v34) ^ 0x10923110) & v35;
  v37 = ~(4 * v35) & 0x44248C44 ^ ((4 * v35) ^ 0x10923110) & v35;
  v38 = ((16 * v36) ^ 0x4248C440) & v37;
  v39 = (16 * v37) & 0x44248C40 ^ 0x4240804 ^ ((16 * v37) ^ 0x4248C440) & v37;
  v40 = (16 * v36) & 0x44248C40 ^ v36 ^ v38 ^ 0x44008040 ^ (((16 * v36) & 0x44248C40 ^ v36 ^ v38) << 8) & 0x44248C00 ^ ((((16 * v36) & 0x44248C40 ^ v36 ^ v38) << 8) ^ 0x24080400) & v39;
  v41 = (v32 ^ (2
              * ((v40 << 16) & 0x44240000 ^ v40 ^ ((v40 << 16) ^ 0xC440000) & ((v39 << 8) & 0x44240000 ^ v15 ^ ((v39 << 8) ^ 0x248C0000) & v39)))) >> 16;
  v42 = v31 - (((v41 ^ 0x3506DE58) + 195713053) ^ ((v41 ^ 0x49B7346B) + 1998303792) ^ ((v41 ^ 0x7CB1E478) + 1109221949));
  v43 = a7 + v19 + v42;
  v44 = (v43 ^ 0xDE65AF78) & (2 * (v43 & 0x9E49AF7D)) ^ v43 & 0x9E49AF7D;
  v45 = ((2 * (v43 ^ 0xEAF4B570)) ^ 0xE97A341A) & (v43 ^ 0xEAF4B570) ^ (2 * (v43 ^ 0xEAF4B570)) & 0x74BD1A0C;
  v46 = v45 ^ LODWORD(STACK[0x2488]);
  v47 = v44 ^ 0x74BD1A0D ^ (v45 ^ 0x60281008) & (4 * v44);
  v48 = ((4 * v46) ^ 0xD2F46834) & v46 ^ (4 * v46) & 0x74BD1A0C;
  v49 = v48 & 0x8360ED00 ^ v47 ^ (v48 ^ 0x50B40809) & ((16 * v47) ^ 0xC8B14DD0);
  v50 = ((16 * v48) ^ 0x88206D40) & (v48 ^ 0x50B40809) ^ v48 & 0x8360ED00;
  v51 = v50 & 0x8360ED00 ^ v49 ^ ((v49 << 8) ^ 0x1E72E000) & (v50 ^ 0x20080D);
  v52 = ((v50 << 8) ^ 0xA368ED00) & (v50 ^ 0x20080D) ^ v50 & 0x8360ED00;
  v53 = (v43 ^ (2
              * (v51 ^ v52 & 0x360ED00 ^ ((v51 << 16) ^ 0x996DED00) & (v52 ^ 0x749D0000) ^ ((v51 << 16) ^ 0x996DED00) & 0x74BD0800))) >> 8;
  v54 = v30 ^ 0x4E960E6D;
  v55 = v42 - (((v53 ^ 0x6ECD8427) - 1363635058) ^ ((v53 ^ 0xAE997968) + 1860987331) ^ ((v53 ^ 0xC0238EC4) + 5676655));
  v56 = a7 + v13 + v55;
  LODWORD(STACK[0x69C0]) = v56;
  v57 = (v56 ^ 0x53562A9F) & (2 * (v56 & 0x1010AADF)) ^ v56 & 0x1010AADF;
  v58 = ((2 * (v56 ^ 0x53772E21)) ^ 0x86CF09FC) & (v56 ^ 0x53772E21) ^ (2 * (v56 ^ 0x53772E21)) & 0x436784FE;
  v59 = v58 ^ 0x41208402;
  v60 = (v58 ^ 0x16700FE) & (4 * v57) ^ v57;
  v61 = ((4 * v59) ^ 0xD9E13F8) & v59 ^ (4 * v59) & 0x436784FC;
  v62 = v61 ^ LODWORD(STACK[0x248C]);
  v63 = (v61 ^ 0x10600F6) & (16 * v60) ^ v60;
  v64 = ((16 * v62) ^ 0x36784FE0) & v62 ^ (16 * v62) & 0x436784F0;
  v65 = v64 ^ 0x4107801E;
  v66 = v63 ^ 0x436784FE;
  v67 = v64 ^ 0x260041E;
  v68 = a7 + v17 + v55;
  v69 = v67 & (v63 << 8);
  v70 = (v68 ^ 0x938551BE) & (2 * (v68 & 0x202155BE)) ^ v68 & 0x202155BE;
  v71 = ((2 * (v68 ^ 0xD3C5D8FA)) ^ 0xE7C91A88) & (v68 ^ 0xD3C5D8FA) ^ (2 * (v68 ^ 0xD3C5D8FA)) & 0xF3E48D44;
  v72 = (v71 ^ 0x91A00804) & (4 * v70) ^ v70;
  v73 = ((4 * (v71 ^ 0x10248544)) ^ 0xCF923510) & (v71 ^ 0x10248544) ^ (4 * (v71 ^ 0x10248544)) & 0xF3E48D44;
  v74 = v73 ^ 0x30648844;
  v75 = (v73 ^ LODWORD(STACK[0x2494])) & (16 * v72) ^ v72;
  v76 = v66 ^ v69;
  v77 = ((16 * v74) ^ LODWORD(STACK[0x2490])) & v74 ^ (16 * v74) & 0xF3E48D40;
  v78 = v77 ^ 0xC1A40904;
  v79 = a7 + v11 + v55;
  v80 = v75 ^ 0xF3E48D44 ^ (v77 ^ 0x32408404) & (v75 << 8);
  v81 = (v79 ^ 0xC80453E) & (2 * (v79 & 0x202155BE)) ^ v79 & 0x202155BE;
  v82 = ((2 * (v79 ^ 0xCC0E506)) ^ 0x59C36170) & (v79 ^ 0xCC0E506) ^ (2 * (v79 ^ 0xCC0E506)) & 0x2CE1B0B8;
  v83 = v82 ^ LODWORD(STACK[0x249C]);
  v84 = (v82 ^ 0x24A12030) & (4 * v81) ^ v81;
  v85 = ((4 * v83) ^ 0xB386C2E0) & v83 ^ (4 * v83) & 0x2CE1B0B8;
  v86 = v85 ^ 0xC613018;
  v87 = (v85 ^ LODWORD(STACK[0x2498])) & (16 * v84) ^ v84;
  v88 = (v78 << 8) & 0xF3E40000 ^ 0x13600000 ^ ((v78 << 8) ^ 0xE48D0000) & v78;
  v89 = ((16 * v86) ^ 0xCE1B0B80) & v86 ^ (16 * v86) & 0x2CE1B0B0;
  v90 = v87 ^ 0x2CE1B0B8 ^ (v89 ^ 0xC010038) & (v87 << 8);
  v91 = v18;
  v92 = v79 ^ (2
             * ((v90 << 16) & 0x2CE10000 ^ v90 ^ ((v90 << 16) ^ 0x30B80000) & (((v89 ^ 0x20E0B038) << 8) & 0x2CE10000 ^ 0xC410000 ^ (((v89 ^ 0x20E0B038) << 8) ^ 0x61B00000) & (v89 ^ 0x20E0B038))));
  LODWORD(STACK[0x69B0]) = v92 ^ 0xE905881C;
  v93 = v54;
  v94 = ((v92 ^ 0xE905881C ^ v54 ^ 0xF140F1FB) + 247401989) ^ ((v92 ^ 0xE905881C ^ v54 ^ LODWORD(STACK[0x24A0]))
                                                             - 1096227838) ^ ((v92 ^ 0xE905881C ^ v54 ^ 0x3CF68FC7)
                                                                            - 1022791623);
  v95 = a7 + v9 + v94;
  v96 = v20;
  v97 = ((2 * (v95 ^ LODWORD(STACK[0x24A4]))) ^ 0xAA37713A) & (v95 ^ LODWORD(STACK[0x24A4])) ^ (2
                                                                                              * (v95 ^ LODWORD(STACK[0x24A4]))) & 0xD51BB89C;
  v98 = v97 ^ 0x55088885;
  v99 = (v95 ^ 0x432F4C4C) & (2 * (v95 & 0x922C6C51)) ^ v95 & 0x922C6C51;
  v100 = (v97 ^ 0x80133008) & (4 * v99) ^ v99;
  v101 = ((4 * v98) ^ 0x546EE274) & v98 ^ (4 * v98) & 0xD51BB89C;
  v102 = ((16 * (v101 ^ 0x81111889)) ^ LODWORD(STACK[0x24A8])) & (v101 ^ 0x81111889) ^ (16 * (v101 ^ 0x81111889)) & 0xD51BB890;
  v103 = (v101 ^ 0x540AA010) & (16 * v100) ^ v100;
  v104 = ((v76 << 16) ^ 0x4FE0000) & ((v65 << 8) & 0x43670000 ^ 0x630000 ^ ((v65 << 8) ^ 0x67840000) & v65);
  v105 = (v95 ^ (2
               * (((v103 ^ 0xD51BB89D ^ (v102 ^ LODWORD(STACK[0x24AC])) & (v103 << 8)) << 16) & 0x551B0000 ^ v103 ^ 0xD51BB89D ^ (v102 ^ LODWORD(STACK[0x24AC])) & (v103 << 8) ^ (((v103 ^ 0xD51BB89D ^ (v102 ^ LODWORD(STACK[0x24AC])) & (v103 << 8)) << 16) ^ 0x389D0000) & (((v102 ^ 0x8400300D) << 8) & 0xD51B0000 ^ 0x44030000 ^ (((v102 ^ 0x8400300D) << 8) ^ 0x1BB80000) & (v102 ^ 0x8400300D))))) >> 16;
  v106 = (v76 << 16) & 0x43670000 ^ v76;
  v107 = v94
       - (((v105 ^ 0x593527F5) - 2113889725) ^ ((v105 ^ 0x31A4FA17) - 359577695) ^ ((v105 ^ 0x6891C5CB) - 1281066883));
  v108 = a7 + v21 + v107;
  v109 = ((v80 << 16) ^ 0xD440000) & v88;
  v110 = ((2 * (v108 ^ 0x6DF28DC6)) ^ LODWORD(STACK[0x24B0])) & (v108 ^ 0x6DF28DC6) ^ (2 * (v108 ^ 0x6DF28DC6)) & 0x65001E98;
  v111 = (v108 ^ 0x6CF28B5E) & (2 * (v108 & 0x8F2935F)) ^ v108 & 0x8F2935F;
  v112 = (v110 ^ 0x40001C11) & (4 * v111) ^ v111;
  v113 = ((4 * (v110 ^ 0x25000289)) ^ 0x94007A64) & (v110 ^ 0x25000289) ^ (4 * (v110 ^ 0x25000289)) & 0x65001E98;
  v114 = (v113 ^ 0x4001A09) & (16 * v112) ^ v112;
  v115 = ((16 * (v113 ^ 0x61000499)) ^ 0x5001E990) & (v113 ^ 0x61000499) ^ (16 * (v113 ^ 0x61000499)) & 0x65001E90;
  v116 = v114 ^ 0x65001E99 ^ (v115 ^ 0x40000809) & (v114 << 8);
  v117 = (v108 ^ (2
                * ((v116 << 16) & 0x65000000 ^ v116 ^ ((v116 << 16) ^ 0x1E990000) & (((v115 ^ 0x25001609) << 8) & 0x65000000 ^ 0x65000000 ^ (((v115 ^ 0x25001609) << 8) ^ 0x1E0000) & (v115 ^ 0x25001609u))))) >> 8;
  LODWORD(STACK[0x6990]) = v106 ^ v104;
  v118 = v107
       - (((v117 ^ 0xA27AF666) + 1093718341) ^ ((v117 ^ 0x3501EAAD) - 699675248) ^ ((v117 ^ 0x97B1EE65) + 1962658120));
  v119 = a7 + a9 + v118;
  v120 = (v119 ^ 0xE7E970F5) & (2 * (v119 & 0x878978F5)) ^ v119 & 0x878978F5;
  v121 = ((2 * (v119 ^ 0xEAE901FD)) ^ 0xDAC0F210) & (v119 ^ 0xEAE901FD) ^ (2 * (v119 ^ 0xEAE901FD)) & 0x6D607908;
  v122 = v121 ^ 0x25200908;
  v123 = (v121 ^ LODWORD(STACK[0x24B4])) & (4 * v120) ^ v120;
  v124 = ((4 * v122) ^ 0xB581E420) & v122 ^ (4 * v122) & 0x6D607908;
  v125 = STACK[0x6A80];
  v126 = a7 + STACK[0x6A80] + v118;
  v127 = v124 ^ 0x48601908;
  v128 = (v126 ^ 0xAF10F9E9) & (2 * (v126 & 0xF12F1EA)) ^ v126 & 0xF12F1EA;
  v129 = ((2 * (v126 ^ 0xBF30D87D)) ^ LODWORD(STACK[0x24BC])) & (v126 ^ 0xBF30D87D) ^ (2 * (v126 ^ 0xBF30D87D)) & 0xB0222996;
  v130 = (v124 ^ 0x25006000) & (16 * v123) ^ v123;
  v131 = ((4 * (v129 ^ 0x90222891)) ^ 0xC088A65C) & (v129 ^ 0x90222891) ^ (4 * (v129 ^ 0x90222891)) & 0xB0222994;
  v132 = v131 ^ 0x30220983;
  v133 = (v131 ^ 0x80002003) & (16 * ((v129 ^ 0xA0202101) & (4 * v128) ^ v128)) ^ (v129 ^ 0xA0202101) & (4 * v128) ^ v128;
  v134 = ((16 * v127) ^ 0xD6079080) & v127 ^ (16 * v127) & 0x6D607900;
  v135 = ((16 * v132) ^ 0x2229970) & v132 ^ (16 * v132) & 0xB0222990;
  v136 = (v80 << 16) & 0x73E40000 ^ v80 ^ v109;
  v137 = v135 ^ 0xB0002087;
  v138 = a7 + v16 + v118;
  v139 = (v138 ^ 0x4F18E5EB) & (2 * (v138 & 0xF12F1EA)) ^ v138 & 0xF12F1EA;
  v140 = ((2 * (v138 ^ 0x451CE7FF)) ^ 0x941C2C2A) & (v138 ^ 0x451CE7FF) ^ (2 * (v138 ^ 0x451CE7FF)) & 0x4A0E1614;
  v141 = v140 ^ LODWORD(STACK[0x24C0]);
  v142 = (v140 ^ 0x20C1404) & (4 * v139) ^ v139;
  v143 = v130 ^ 0x6D607908 ^ (v134 ^ 0x44001008) & (v130 << 8);
  v144 = (4 * v141) & 0x4A0E1614 ^ 0x42060601 ^ ((4 * v141) ^ 0x28385854) & v141;
  v145 = v144 & (16 * v142) ^ v142 ^ ((16 * v142) & 0x4A0E1600 | 0x10);
  v146 = v133 ^ 0xB0222997 ^ (v135 ^ 0x220987) & (v133 << 8);
  v147 = (16 * v144) & 0x4A0E1610 ^ 0x4A0E1605 ^ ((16 * v144) ^ 0xA0E16150) & v144;
  v148 = v145 ^ 0x4A0E0605 ^ (v145 << 8) & 0x4A0E1600 ^ ((v145 << 8) ^ 0x1000) & v147;
  v149 = v136 ^ v146;
  v146 <<= 16;
  v150 = ((v143 << 16) ^ 0x79080000) & (((v134 ^ LODWORD(STACK[0x24B8])) << 8) & 0x6D600000 ^ 0xD000000 ^ (((v134 ^ LODWORD(STACK[0x24B8])) << 8) ^ 0x60790000) & (v134 ^ LODWORD(STACK[0x24B8])));
  v151 = ((v148 << 16) ^ 0x16150000) & ((v147 << 8) & 0x4A0E0000 ^ 0x40080000 ^ ((v147 << 8) ^ 0xE160000) & v147);
  v152 = v146 & 0x30220000;
  v153 = (v143 << 16) & 0x6D600000 ^ v143;
  v154 = v138 ^ (2 * ((v148 << 16) & 0x4A0E0000 ^ v148 ^ v151)) ^ 0xF7164D9;
  v155 = (v146 ^ 0x29970000) & ((v137 << 8) & 0x30220000 ^ 0x10020000 ^ ((v137 << 8) ^ 0x22290000) & v137);
  v156 = ((v154 ^ v93 ^ 0x3E9D6F86) - 1050505094) ^ ((v154 ^ v93 ^ 0xFC5A3A3E) + 61195714) ^ ((v154 ^ v93 ^ 0xFF635B1)
                                                                                            - 267793841);
  v157 = a7 + STACK[0x6AB0] + v156;
  v158 = ((2 * (v157 ^ 0x77997858)) ^ 0x5C5B9058) & (v157 ^ 0x77997858) ^ (2 * (v157 ^ 0x77997858)) & 0xAE2DC82C;
  v159 = v158 ^ 0xA2244824;
  v160 = (v157 ^ 0xD5B03870) & (2 * (v157 & 0xD9B4B074)) ^ v157 & 0xD9B4B074;
  v161 = (v158 ^ 0xC018804) & (4 * v160) ^ v160;
  v162 = ((4 * v159) ^ 0xB8B720B0) & v159 ^ (4 * v159) & 0xAE2DC82C;
  v163 = ((16 * (v162 ^ 0x608C80C)) ^ 0xE2DC82C0) & (v162 ^ 0x608C80C) ^ (16 * (v162 ^ 0x608C80C)) & 0xAE2DC820;
  v164 = (v162 ^ LODWORD(STACK[0x24C4])) & (16 * v161) ^ v161 ^ 0xAE2DC82C ^ (v163 ^ 0xA20C802C) & (((v162 ^ LODWORD(STACK[0x24C4])) & (16 * v161) ^ v161) << 8);
  v165 = v153 ^ v150;
  v166 = (v157 ^ (2
                * ((v164 << 16) & 0x2E2D0000 ^ v164 ^ ((v164 << 16) ^ 0x482C0000) & (((v163 ^ 0xC21482C) << 8) & 0x2E2D0000 ^ 0x2250000 ^ (((v163 ^ 0xC21482C) << 8) ^ 0x2DC80000) & (v163 ^ 0xC21482C))))) >> 16;
  v167 = v156
       - (((v166 ^ 0xB0D9C603) - 1981717293) ^ ((v166 ^ LODWORD(STACK[0x24C8])) + 1227282500) ^ ((v166 ^ 0xC0C72926)
                                                                                               - 100693000));
  v168 = a7 + v96 + v167;
  v169 = (v168 ^ 0xBF245F9B) & (2 * (v168 & 0x3FA15FD3)) ^ v168 & 0x3FA15FD3;
  v170 = ((2 * (v168 ^ 0xD86667B9)) ^ 0xCF8E70D4) & (v168 ^ 0xD86667B9) ^ (2 * (v168 ^ 0xD86667B9)) & 0xE7C7386A;
  v171 = ((4 * (v170 ^ 0x2041082A)) ^ 0x9F1CE1A8) & (v170 ^ 0x2041082A) ^ (4 * (v170 ^ 0x2041082A)) & 0xE7C73868;
  v172 = (v171 ^ 0x87042022) & (16 * ((v170 ^ 0xC7863040) & (4 * v169) ^ v169)) ^ (v170 ^ 0xC7863040) & (4 * v169) ^ v169;
  v173 = ((16 * (v171 ^ 0x60C31842)) ^ LODWORD(STACK[0x24D8])) & (v171 ^ 0x60C31842) ^ (16 * (v171 ^ 0x60C31842)) & 0xE7C73860;
  v174 = (v168 ^ (2
                * (((v172 ^ 0xE7C7386A ^ (v173 ^ 0x64430000) & (v172 << 8)) << 16) & 0x67C70000 ^ v172 ^ 0xE7C7386A ^ (v173 ^ 0x64430000) & (v172 << 8) ^ (((v172 ^ 0xE7C7386A ^ (v173 ^ 0x64430000) & (v172 << 8)) << 16) ^ 0x386A0000) & (((v173 ^ 0x8384384A) << 8) & STACK[0x24CC] ^ 0x20C70000 ^ (((v173 ^ 0x8384384A) << 8) ^ 0x47380000) & (v173 ^ 0x8384384A))))) >> 8;
  v175 = v149 ^ v152 ^ v155;
  v176 = v167
       - (((v174 ^ 0x4D2BABB9) - 494939527) ^ ((v174 ^ LODWORD(STACK[0x24D0])) + 1655001029) ^ ((v174 ^ 0x806A3693)
                                                                                              + 792612691));
  v177 = a7 + STACK[0x6A40] + v176;
  v178 = ((2 * (v177 ^ 0xA79886C3)) ^ 0x7B0F6868) & (v177 ^ 0xA79886C3) ^ (2 * (v177 ^ 0xA79886C3)) & 0x3D87B434;
  v179 = v178 ^ 0x4809414;
  v180 = (v178 ^ 0x3C050020) & (4 * ((v177 ^ 0x939EA2E7) & (2 * (v177 & STACK[0x24D4])) ^ v177 & STACK[0x24D4])) ^ (v177 ^ 0x939EA2E7) & (2 * (v177 & STACK[0x24D4])) ^ v177 & STACK[0x24D4];
  v181 = ((4 * v179) ^ 0xF61ED0D0) & v179 ^ (4 * v179) & 0x3D87B434;
  v182 = (v181 ^ 0x34069010) & (16 * v180) ^ v180;
  v183 = ((16 * (v181 ^ 0x9812424)) ^ 0xD87B4340) & (v181 ^ 0x9812424) ^ (16 * (v181 ^ 0x9812424)) & 0x3D87B430;
  v184 = v182 ^ 0x3D87B434 ^ (v183 ^ 0x18030034) & (v182 << 8);
  v185 = LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x69C0]) ^ (2 * LODWORD(STACK[0x6990])) ^ v119 ^ (2 * v165) ^ v177;
  v186 = a7 + v91 + v176;
  v187 = (v186 ^ 0xA43C71CC) & (2 * (v186 & 0x343E65EE)) ^ v186 & 0x343E65EE;
  v188 = ((2 * (v186 ^ 0xEC28B850)) ^ 0xB02DBB7C) & (v186 ^ 0xEC28B850) ^ (2 * (v186 ^ 0xEC28B850)) & 0xD816DDBE;
  v189 = ((v184 << 16) ^ 0x34340000) & (((v183 ^ 0x2584B434) << 8) & 0x3D870000 ^ 0x38030000 ^ (((v183 ^ 0x2584B434) << 8) ^ 0x7B40000) & (v183 ^ 0x2584B434));
  v190 = v188 ^ 0x48124482;
  v191 = (v188 ^ 0x90009938) & (4 * v187) ^ v187;
  v192 = ((4 * v190) ^ 0x605B76F8) & v190 ^ (4 * v190) & 0xD816DDBC;
  v193 = (v192 ^ 0x401254A6) & (16 * v191) ^ v191;
  v194 = ((16 * (v192 ^ 0x98048906)) ^ 0x816DDBE0) & (v192 ^ 0x98048906) ^ (16 * (v192 ^ 0x98048906)) & 0xD816DDB0;
  v195 = STACK[0x6A50];
  v196 = v193 ^ 0xD816DDBE ^ (v194 ^ 0x8004D91E) & (v193 << 8);
  v197 = STACK[0x6A30];
  v198 = (v196 << 16) & 0x58160000 ^ v196 ^ ((v196 << 16) ^ 0x5DBE0000) & (((v194 ^ 0x5812041E) << 8) & 0xD8160000 ^ 0x48020000 ^ (((v194 ^ 0x5812041E) << 8) ^ 0x16DD0000) & (v194 ^ 0x5812041E));
  v199 = v185 ^ (2 * ((v184 << 16) & 0x3D870000 ^ v184 ^ v189));
  v200 = LODWORD(STACK[0x69D0]) ^ v68 ^ v126 ^ (2 * v175) ^ v186 ^ (2 * v198);
  v201 = LODWORD(STACK[0x69E0]) ^ 0x41D005CB ^ LODWORD(STACK[0x69B0]) ^ v154;
  v202 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t, unint64_t, _QWORD, _QWORD, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * ((109 * (a7 == STACK[0x6A30])) ^ LODWORD(STACK[0x6960])));
  v203 = a7 + STACK[0x6A20] + v176;
  v204 = STACK[0x6A70] - 1;
  ++STACK[0x6AB0];
  STACK[0x6A80] = v125 + 1;
  return v202(v204, v201 ^ v203, 1395910137, v195 + 1, v200 ^ 0xDE0D3360, v199 ^ 0x90427359, a7, v197 - 1);
}

uint64_t sub_100CB1BF8(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  unsigned int v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  unsigned int v255;
  unint64_t v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  unint64_t v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  char *v281;
  uint64_t v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  int v293;
  int v294;
  unint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  uint64_t v304;
  uint64_t v305;
  unsigned int v306;
  unint64_t v307;
  uint64_t (*v308)(uint64_t);
  int v309;

  v8 = LODWORD(STACK[0x6650]) ^ LODWORD(STACK[0x6850]);
  v9 = a7 + v7 - a1;
  v10 = (((v9 ^ 0xE7FAAAD1) - 1840764279) ^ ((v9 ^ LODWORD(STACK[0x990])) - 1512476561) ^ ((v9 ^ 0x99C2CE12) - 328184244))
      - ((((v9 >> 10) ^ 0x1B39CA7B) - 957255842) ^ (((v9 >> 10) ^ 0xFC4545D1) + 562946296) ^ (((v9 >> 10) ^ 0xE7571B4F)
                                                                                            + 983547498));
  v11 = ((v10 + 83373796) ^ 0xFCE9CEA3) & (2 * ((v10 + 83373796) & 0xFD09EE32)) ^ (v10 + 83373796) & 0xFD09EE32;
  v12 = ((2 * ((v10 + 83373796) ^ 0x66EB12A3)) ^ 0x37C5F922) & ((v10 + 83373796) ^ 0x66EB12A3) ^ (2
                                                                                                * ((v10 + 83373796) ^ 0x66EB12A3)) & 0x9BE2FC90;
  v13 = v12 ^ 0x88220491;
  v14 = (v12 ^ 0x1040F800) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x6F8BF244) & v13 ^ (4 * v13) & 0x9BE2FC90;
  v16 = (v15 ^ 0xB82F011) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x90600C91)) ^ 0xBE2FC910) & (v15 ^ 0x90600C91) ^ (16 * (v15 ^ 0x90600C91)) & 0x9BE2FC90;
  v18 = v16 ^ 0x9BE2FC91 ^ (v17 ^ 0x9A22C800) & (v16 << 8);
  v19 = ((v10 + 83373796) ^ (2
                           * ((v18 << 16) & 0x1BE20000 ^ v18 ^ ((v18 << 16) ^ 0x7C910000) & (((v17 ^ LODWORD(STACK[0x994])) << 8) & 0x1BE20000 ^ 0x19020000 ^ (((v17 ^ LODWORD(STACK[0x994])) << 8) ^ 0x62FC0000) & (v17 ^ LODWORD(STACK[0x994])))))) >> 5;
  v20 = v10
      + 1779988811
      + (((v19 ^ 0x5F2671B0) - 126317334) ^ ((v19 ^ 0xEBCECECE) + 1284518808) ^ ((v19 ^ 0xB336DFC6) + 342368928));
  v21 = (v20 ^ 0xE74471E0) & (2 * (v20 & 0xF76905E9)) ^ v20 & 0xF76905E9;
  v22 = ((2 * (v20 ^ 0x29467030)) ^ 0xBC5EEBB2) & (v20 ^ 0x29467030) ^ (2 * (v20 ^ 0x29467030)) & 0xDE2F75D8;
  v23 = v22 ^ 0x42211449;
  v24 = (v22 ^ 0x9C0C2180) & (4 * v21) ^ v21;
  v25 = ((4 * v23) ^ 0x78BDD764) & v23 ^ (4 * v23) & 0xDE2F75D8;
  v26 = (v25 ^ 0x582D5549) & (16 * v24) ^ v24;
  v27 = ((16 * (v25 ^ 0x86022099)) ^ 0xE2F75D90) & (v25 ^ 0x86022099) ^ (16 * (v25 ^ 0x86022099)) & 0xDE2F75D0;
  v28 = v26 ^ 0xDE2F75D9 ^ (v27 ^ 0xC2275500) & (v26 << 8);
  v29 = v20 ^ (2
             * ((v28 << 16) & 0x5E2F0000 ^ v28 ^ ((v28 << 16) ^ 0x75D90000) & (((v27 ^ 0x1C082049) << 8) & 0x5E2F0000 ^ 0x500A0000 ^ (((v27 ^ 0x1C082049) << 8) ^ 0x2F750000) & (v27 ^ 0x1C082049))));
  v30 = ((v29 ^ 0xC6C02CDF) + 195829575) ^ ((v29 ^ 0x20F4FEF3) - 308753045) ^ ((v29 ^ 0x5113C77) - 931328017);
  v31 = ((v30 - 1193708281) ^ 0xE62370FE) & (2 * ((v30 - 1193708281) & 0xE60364FF)) ^ (v30 - 1193708281) & 0xE60364FF;
  v32 = ((2 * ((v30 - 1193708281) ^ 0x6E23B1BC)) ^ LODWORD(STACK[0x998])) & ((v30 - 1193708281) ^ 0x6E23B1BC) ^ (2 * ((v30 - 1193708281) ^ 0x6E23B1BC)) & 0x8820D542;
  v33 = v32 ^ 0x88205541;
  v34 = (v32 ^ 0x20C001) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0x2083550C) & v33 ^ (4 * v33) & 0x8820D540;
  v36 = (v35 ^ 0x5500) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x88208043)) ^ 0x820D5430) & (v35 ^ 0x88208043) ^ (16 * (v35 ^ 0x88208043)) & 0x8820D540;
  v38 = v36 ^ 0x8820D543 ^ (v37 ^ 0x80005443) & (v36 << 8);
  v39 = ((v30 - 1193708281) ^ (2
                             * ((v38 << 16) & 0x8200000 ^ v38 ^ ((v38 << 16) ^ 0x55430000) & (((v37 ^ 0x8208143) << 8) & 0x88200000 ^ 0x8200000 ^ (((v37 ^ 0x8208143) << 8) ^ 0x20D50000) & (v37 ^ 0x8208143))))) >> 8;
  v40 = v30
      - 1407651189
      + (((v39 ^ 0x86E29C35) + 20787772) ^ ((v39 ^ 0x294AC5F8) - 1365939209) ^ ((v39 ^ 0xAF5E1B03) + 679589134));
  v41 = (v40 ^ 0x435DF23B) & (2 * (v40 & 0x6B99FABA)) ^ v40 & 0x6B99FABA;
  v42 = ((2 * (v40 ^ 0x176D864B)) ^ 0xF9E8F9E2) & (v40 ^ 0x176D864B) ^ (2 * (v40 ^ 0x176D864B)) & 0x7CF47CF0;
  v43 = v42 ^ 0x4140411;
  v44 = (v42 ^ 0x78E078E0) & (4 * v41) ^ v41;
  v45 = ((4 * v43) ^ 0xF3D1F3C4) & v43 ^ (4 * v43) & 0x7CF47CF0;
  v46 = (v45 ^ 0x70D070C0) & (16 * v44) ^ v44;
  v47 = ((16 * (v45 ^ 0xC240C31)) ^ 0xCF47CF10) & (v45 ^ 0xC240C31) ^ (16 * (v45 ^ 0xC240C31)) & 0x7CF47CF0;
  v48 = v46 ^ 0x7CF47CF1 ^ (v47 ^ 0x4C444C00) & (v46 << 8);
  v49 = (v40 ^ (2
              * ((v48 << 16) & 0x7CF40000 ^ v48 ^ ((v48 << 16) ^ 0x7CF10000) & (((v47 ^ 0x30B030E1) << 8) & 0x7CF40000 ^ 0x8800000 ^ (((v47 ^ 0x30B030E1) << 8) ^ 0x747C0000) & (v47 ^ 0x30B030E1))))) >> 5;
  v50 = v40
      - (((v49 ^ 0x6E6068EC) + 1851681211) ^ ((v49 ^ 0xCC8D8C80) - 860647977) ^ ((v49 ^ 0xA1B16C76) - 1584435935))
      - 1711560306;
  v51 = (v50 ^ 0xD43ED878) & (2 * (v50 & 0xD500DA79)) ^ v50 & 0xD500DA79;
  v52 = ((2 * (v50 ^ LODWORD(STACK[0x99C]))) ^ 0x427F6D06) & (v50 ^ LODWORD(STACK[0x99C])) ^ (2
                                                                                            * (v50 ^ LODWORD(STACK[0x99C]))) & 0xA13FB682;
  v53 = v52 ^ 0xA1009281;
  v54 = (v52 ^ LODWORD(STACK[0x9A4])) & (4 * v51) ^ v51;
  v55 = ((4 * v53) ^ 0x84FEDA0C) & v53 ^ (4 * v53) & 0xA13FB680;
  v56 = (v55 ^ 0x803E9200) & (16 * v54) ^ v54;
  v57 = ((16 * (v55 ^ LODWORD(STACK[0x9A0]))) ^ 0x13FB6830) & (v55 ^ LODWORD(STACK[0x9A0])) ^ (16
                                                                                             * (v55 ^ LODWORD(STACK[0x9A0]))) & 0xA13FB680;
  v58 = v56 ^ 0xA13FB683 ^ (v57 ^ 0x13B2000) & (v56 << 8);
  v59 = v50 ^ (2
             * ((v58 << 16) & 0x213F0000 ^ v58 ^ ((v58 << 16) ^ 0x36830000) & (((v57 ^ 0xA0049683) << 8) & 0x213F0000 ^ 0x90000 ^ (((v57 ^ 0xA0049683) << 8) ^ 0x3FB60000) & (v57 ^ 0xA0049683))));
  v60 = ((v59 ^ 0x7BC1435F) - 795277691) ^ ((v59 ^ 0x870C1B33) + 743726825) ^ ((v59 ^ 0x2BB4EF13) - 2131973431);
  v61 = ((v60 + 944584166) ^ 0x9872F8E3) & (2 * ((v60 + 944584166) & 0xD974FCC8)) ^ (v60 + 944584166) & 0xD974FCC8;
  v62 = ((2 * ((v60 + 944584166) ^ 0x8A33D963)) ^ 0xA68E4B56) & ((v60 + 944584166) ^ 0x8A33D963) ^ (2
                                                                                                  * ((v60 + 944584166) ^ 0x8A33D963)) & 0x534725AA;
  v63 = v62 ^ 0x514124A9;
  v64 = (v62 ^ 0x12060189) & (4 * v61) ^ v61;
  v65 = ((4 * v63) ^ 0x4D1C96AC) & v63 ^ (4 * v63) & 0x534725A8;
  v66 = (v65 ^ 0x410404A3) & (16 * v64) ^ v64;
  v67 = ((16 * (v65 ^ 0x12432103)) ^ 0x34725AB0) & (v65 ^ 0x12432103) ^ (16 * (v65 ^ 0x12432103)) & 0x534725A0;
  v68 = v66 ^ 0x534725AB ^ (v67 ^ 0x1042000B) & (v66 << 8);
  v69 = ((v60 + 944584166) ^ (2
                            * ((v68 << 16) & 0x53470000 ^ v68 ^ ((v68 << 16) ^ 0x25AB0000) & (((v67 ^ 0x4305250B) << 8) & 0x53470000 ^ 0x10420000 ^ (((v67 ^ 0x4305250B) << 8) ^ 0x47250000) & (v67 ^ 0x4305250B))))) >> 10;
  v70 = ((v69 ^ 0x2747B5EB) + 79156714) ^ ((v69 ^ 0xAB713705) - 2004789496) ^ ((v69 ^ 0x8C29FDC3) - 1344692798);
  v71 = v29 ^ a6;
  v72 = v60 - v70;
  v73 = v60 - v70 - 428405331;
  v74 = (v73 ^ 0x2EB841B0) & (2 * (v73 & 0x4F3A4431)) ^ v73 & 0x4F3A4431;
  v75 = ((2 * (v73 ^ 0xAAD8C190)) ^ 0xCBC50B42) & (v73 ^ 0xAAD8C190) ^ (2 * (v73 ^ 0xAAD8C190)) & 0xE5E285A0;
  v76 = v75 ^ 0x242284A1;
  v77 = (v75 ^ 0x41C08521) & (4 * v74) ^ v74;
  v78 = ((4 * v76) ^ 0x978A1684) & v76 ^ (4 * v76) & 0xE5E285A0;
  v79 = (v78 ^ 0x85820481) & (16 * v77) ^ v77;
  v80 = ((16 * (v78 ^ 0x60608121)) ^ 0x5E285A10) & (v78 ^ 0x60608121) ^ (16 * (v78 ^ 0x60608121)) & 0xE5E285A0;
  v81 = v79 ^ 0xE5E285A1 ^ (v80 ^ 0x442000A1) & (v79 << 8);
  v82 = (v73 ^ (2
              * ((v81 << 16) & 0x65E20000 ^ v81 ^ ((v81 << 16) ^ 0x5A10000) & (((v80 ^ 0xA1C285A1) << 8) & 0xE5E20000 ^ 0x5620000 ^ (((v80 ^ 0xA1C285A1) << 8) ^ 0x62850000) & (v80 ^ 0xA1C285A1))))) >> 7;
  v83 = v72
      - (((v82 ^ 0xD1098A7) - 1709878313) ^ ((v82 ^ 0xB45B75D5) + 593411749) ^ ((v82 ^ 0xB85493EC) + 793860254))
      - 353646236;
  v84 = (v83 ^ 0xF2C8BC60) & (2 * (v83 & 0xE0E03E6A)) ^ v83 & 0xE0E03E6A;
  v85 = ((2 * (v83 ^ 0xB208C8A4)) ^ 0xA5D1ED9C) & (v83 ^ 0xB208C8A4) ^ (2 * (v83 ^ 0xB208C8A4)) & 0x52E8F6CE;
  v86 = v85 ^ 0x52281242;
  v87 = (v85 ^ 0x80E088) & (4 * v84) ^ v84;
  v88 = ((4 * v86) ^ 0x4BA3DB38) & v86 ^ (4 * v86) & 0x52E8F6CC;
  v89 = (v88 ^ 0x42A0D206) & (16 * v87) ^ v87;
  v90 = ((16 * (v88 ^ 0x104824C6)) ^ LODWORD(STACK[0x9A8])) & (v88 ^ 0x104824C6) ^ (16 * (v88 ^ 0x104824C6)) & 0x52E8F6C0;
  v91 = v89 ^ 0x52E8F6CE ^ (v90 ^ 0x2886400) & (v89 << 8);
  v92 = v83 ^ (2
             * ((v91 << 16) & 0x52E80000 ^ v91 ^ ((v91 << 16) ^ 0x76CE0000) & (((v90 ^ 0x5060920E) << 8) & 0x52E80000 ^ 0x12080000 ^ (((v90 ^ 0x5060920E) << 8) ^ 0xE8F60000) & (v90 ^ 0x5060920E))));
  v93 = (((v92 ^ 0xD3FA52B8) + 258561776) ^ ((v92 ^ 0xC0F245C2) + 476135830) ^ ((v92 ^ 0x5AA250B9) - 2043587345))
      - 801575168
      + ((((v92 >> 11) ^ 0x481FB580) - 246040012) ^ (((v92 >> 11) ^ 0xA7D13E84) + 513487160) ^ (((v92 >> 11) ^ 0xEFC7BE4C)
                                                                                              + 1452126720));
  v94 = (v93 ^ LODWORD(STACK[0x9AC])) & (2 * (v93 & 0xE14A926F)) ^ v93 & 0xE14A926F;
  v95 = ((2 * (v93 ^ 0x890BD8C2)) ^ 0xD082955A) & (v93 ^ 0x890BD8C2) ^ (2 * (v93 ^ 0x890BD8C2)) & 0x68414AAC;
  v96 = v95 ^ LODWORD(STACK[0x9B4]);
  v97 = (v95 ^ 0x20010009) & (4 * v94) ^ v94;
  v98 = ((4 * v96) ^ 0xA1052AB4) & v96 ^ (4 * v96) & 0x68414AAC;
  v99 = (v98 ^ 0x20010AA9) & (16 * v97) ^ v97;
  v100 = ((16 * (v98 ^ 0x48404009)) ^ LODWORD(STACK[0x9B0])) & (v98 ^ 0x48404009) ^ (16 * (v98 ^ 0x48404009)) & 0x68414AA0;
  v101 = v99 ^ 0x68414AAD ^ (v100 ^ 0xA00) & (v99 << 8);
  v102 = (v93 ^ (2
               * ((v101 << 16) & 0x68410000 ^ v101 ^ ((v101 << 16) ^ 0x4AAD0000) & (((v100 ^ 0x6841402D) << 8) & 0x68410000 ^ 0x28010000 ^ (((v100 ^ 0x6841402D) << 8) ^ 0x414A0000) & (v100 ^ 0x6841402D))))) >> 3;
  v103 = v93
       + 1772896801
       + (((v102 ^ 0x846E1B02) + 1990900314) ^ ((v102 ^ 0x87A46669) + 1969276723) ^ ((v102 ^ 0x17F33D8D) - 449340201));
  v104 = (v103 ^ 0x9EAB6E13) & (2 * (v103 & 0x90A06E90)) ^ v103 & 0x90A06E90;
  v105 = ((2 * (v103 ^ 0x9FEB7613)) ^ 0x1E963106) & (v103 ^ 0x9FEB7613) ^ (2 * (v103 ^ 0x9FEB7613)) & 0xF4B1882;
  v106 = v105 ^ LODWORD(STACK[0x9B8]);
  v107 = (v105 ^ 0x6021000) & (4 * v104) ^ v104;
  v108 = ((4 * v106) ^ 0x3D2C620C) & v106 ^ (4 * v106) & 0xF4B1880;
  v109 = v107 ^ 0xF4B1883 ^ (v108 ^ 0xD080000) & (16 * v107);
  v110 = (16 * (v108 ^ 0x2431883)) & 0xF4B1880 ^ 0xB4A1083 ^ ((16 * (v108 ^ 0x2431883)) ^ 0xF4B18830) & (v108 ^ 0x2431883);
  v111 = (v109 << 8) & 0xF4B1800 ^ v109 ^ ((v109 << 8) ^ 0x4B188300) & v110;
  v112 = v103 ^ (2
               * ((v111 << 16) & 0xF4B0000 ^ v111 ^ ((v111 << 16) ^ 0x18830000) & ((v110 << 8) & 0xF4B0000 ^ 0x4430000 ^ ((v110 << 8) ^ 0x4B180000) & v110)));
  v113 = v71 ^ v112;
  v114 = ((v112 ^ 0xC8DBE9AB) + 1639306484) ^ ((v112 ^ 0x4C63CC3D) - 452071066) ^ ((v112 ^ LODWORD(STACK[0x9BC]))
                                                                                 - 1510586535);
  v115 = ((v114 - 1024162174) ^ 0x4625159) & (2 * ((v114 - 1024162174) & 0xA66B595C)) ^ (v114 - 1024162174) & 0xA66B595C;
  v116 = ((2 * ((v114 - 1024162174) ^ 0x443641F9)) ^ 0xC4BA314A) & ((v114 - 1024162174) ^ 0x443641F9) ^ (2 * ((v114 - 1024162174) ^ 0x443641F9)) & 0xE25D18A4;
  v117 = v116 ^ 0x224508A5;
  v118 = (v116 ^ 0x80180005) & (4 * v115) ^ v115;
  v119 = ((4 * v117) ^ 0x89746294) & v117 ^ (4 * v117) & 0xE25D18A4;
  v120 = v118 ^ 0xE25D18A5 ^ (v119 ^ 0x80540080) & (16 * v118);
  v121 = (16 * (v119 ^ LODWORD(STACK[0x9C0]))) & 0xE25D18A0 ^ 0xC20C10A5 ^ ((16 * (v119 ^ LODWORD(STACK[0x9C0]))) ^ 0x25D18A50) & (v119 ^ LODWORD(STACK[0x9C0]));
  v122 = (v120 << 8) & 0xE25D1800 ^ v120 ^ ((v120 << 8) ^ 0x5D18A500) & v121;
  v123 = v114
       + 1767890911
       + ((((v114 - 1024162174) ^ (2
                                 * ((v122 << 16) & 0x625D0000 ^ v122 ^ ((v122 << 16) ^ 0x18A50000) & ((v121 << 8) & 0x625D0000 ^ 0x22450000 ^ ((v121 << 8) ^ 0x5D180000) & v121)))) >> 13) ^ 0xFFF8E8A4);
  v124 = v123 - (v123 >> 1);
  v125 = v124 + 1645513498;
  v126 = v59 ^ a5 ^ v124;
  v127 = ((2 * (v125 - (v125 >> 14))) & 0xFDD7D776) + ((v125 - (v125 >> 14)) ^ 0x7EEBEBBB);
  v128 = ((v127 - 1073873192) ^ 0xDD46016D) & (2 * ((v127 - 1073873192) & 0xC116156D)) ^ (v127 - 1073873192) & 0xC116156D;
  v129 = ((2 * ((v127 - 1073873192) ^ 0xDF662137)) ^ 0x3CE068B4) & ((v127 - 1073873192) ^ 0xDF662137) ^ (2 * ((v127 - 1073873192) ^ 0xDF662137)) & 0x1E70345A;
  v130 = v129 ^ 0x210144A;
  v131 = (v129 ^ 0xE602012) & (4 * v128) ^ v128;
  v132 = ((4 * v130) ^ 0x79C0D168) & v130 ^ (4 * v130) & 0x1E703458;
  v133 = (v132 ^ 0x18401042) & (16 * v131) ^ v131;
  v134 = ((16 * (v132 ^ 0x6302412)) ^ 0xE70345A0) & (v132 ^ 0x6302412) ^ (16 * (v132 ^ 0x6302412)) & 0x1E703450;
  v135 = v133 ^ 0x1E70345A ^ (v134 ^ 0x600045A) & (v133 << 8);
  v136 = ((v127 - 1073873192) ^ (2
                               * ((v135 << 16) & 0x1E700000 ^ v135 ^ ((v135 << 16) ^ 0x345A0000) & (((v134 ^ 0x1870305A) << 8) & 0x1E700000 ^ 0xE400000 ^ (((v134 ^ 0x1870305A) << 8) ^ 0x70340000) & (v134 ^ 0x1870305A))))) >> 7;
  v137 = v127
       - (((v136 ^ 0x2C2D54E8) + 1970292486) ^ ((v136 ^ 0x5D97F0D2) + 80405312) ^ ((v136 ^ LODWORD(STACK[0x9C4]))
                                                                                 + 692919085))
       + 124493067;
  v138 = (v137 ^ 0xD21FA500) & (2 * (v137 & 0xD2A03651)) ^ v137 & 0xD2A03651;
  v139 = ((2 * (v137 ^ 0xF75FE1A0)) ^ 0x4BFFAFE2) & (v137 ^ 0xF75FE1A0) ^ (2 * (v137 ^ 0xF75FE1A0)) & 0x25FFD7F0;
  v140 = v139 ^ LODWORD(STACK[0x9C8]);
  v141 = (v139 ^ 0x218183D1) & (4 * v138) ^ v138;
  v142 = ((4 * v140) ^ 0x97FF5FC4) & v140 ^ (4 * v140) & 0x25FFD7F0;
  v143 = (v142 ^ 0x5FF57C0) & (16 * v141) ^ v141;
  v144 = ((16 * (v142 ^ 0x20008031)) ^ 0x5FFD7F10) & (v142 ^ 0x20008031) ^ (16 * (v142 ^ 0x20008031)) & 0x25FFD7F0;
  v145 = v143 ^ 0x25FFD7F1 ^ (v144 ^ 0x5FD5700) & (v143 << 8);
  v146 = v137 ^ (2
               * ((v145 << 16) & 0x25FF0000 ^ v145 ^ ((v145 << 16) ^ 0x57F10000) & (((v144 ^ 0x200280E1) << 8) & 0x25FF0000 ^ 0x280000 ^ (((v144 ^ 0x200280E1) << 8) ^ 0x7FD70000) & (v144 ^ 0x200280E1))));
  v147 = ((v146 ^ 0x66045827) + 1242365978) ^ ((v146 ^ 0x7232B68) + 724202327) ^ ((v146 ^ 0xF39AEAFC) - 543968573);
  v148 = v147 + ((v147 - 829697455) >> 13) - 622465248;
  v149 = (v148 ^ 0xEBA5F23C) & (2 * (v148 & 0xF3A5E331)) ^ v148 & 0xF3A5E331;
  v150 = ((2 * (v148 ^ 0xCFEEB23C)) ^ 0x7896A21A) & (v148 ^ 0xCFEEB23C) ^ (2 * (v148 ^ 0xCFEEB23C)) & 0x3C4B510C;
  v151 = v150 ^ LODWORD(STACK[0x9CC]);
  v152 = (v150 ^ 0x18424009) & (4 * v149) ^ v149;
  v153 = ((4 * v151) ^ 0xF12D4434) & v151 ^ (4 * v151) & 0x3C4B510C;
  v154 = (v153 ^ 0x30094000) & (16 * v152) ^ v152;
  v155 = ((16 * (v153 ^ 0xC421109)) ^ 0xC4B510D0) & (v153 ^ 0xC421109) ^ (16 * (v153 ^ 0xC421109)) & 0x3C4B5100;
  v156 = v154 ^ 0x3C4B510D ^ (v155 ^ 0x401100D) & (v154 << 8);
  v157 = (v148 ^ (2
                * ((v156 << 16) & 0x3C4B0000 ^ v156 ^ ((v156 << 16) ^ 0x510D0000) & (((v155 ^ 0x384A410D) << 8) & 0x3C4B0000 ^ 0x340A0000 ^ (((v155 ^ 0x384A410D) << 8) ^ 0x4B510000) & (v155 ^ 0x384A410D))))) >> 3;
  v158 = v148
       + 1472931817
       + (((v157 ^ 0x6F1DE98E) - 1244108258) ^ ((v157 ^ 0x6D7C6422) - 1212553294) ^ ((v157 ^ 0x1705A589) - 843045349));
  v159 = (v158 ^ 0x8B34AF8C) & (2 * (v158 & 0xCC390F91)) ^ v158 & 0xCC390F91;
  v160 = ((2 * (v158 ^ 0x1B46B2AE)) ^ 0xAEFF7A7E) & (v158 ^ 0x1B46B2AE) ^ (2 * (v158 ^ 0x1B46B2AE)) & 0xD77FBD3E;
  v161 = v160 ^ 0x51008501;
  v162 = (v160 ^ 0x6CB90D) & (4 * v159) ^ v159;
  v163 = ((4 * v161) ^ 0x5DFEF4FC) & v161 ^ (4 * v161) & 0xD77FBD3C;
  v164 = (v163 ^ LODWORD(STACK[0x9D0])) & (16 * v162) ^ v162;
  v165 = ((16 * (v163 ^ 0x82010903)) ^ 0x77FBD3F0) & (v163 ^ 0x82010903) ^ (16 * (v163 ^ 0x82010903)) & 0xD77FBD30;
  v166 = v164 ^ 0xD77FBD3F ^ (v165 ^ 0x577B9100) & (v164 << 8);
  v167 = v158 ^ (2
               * ((v166 << 16) & 0x577F0000 ^ v166 ^ ((v166 << 16) ^ 0x3D3F0000) & (((v165 ^ 0x80042C0F) << 8) & 0x577F0000 ^ 0x420000 ^ (((v165 ^ 0x80042C0F) << 8) ^ 0x7FBD0000) & (v165 ^ 0x80042C0F))));
  v168 = v113 ^ v167;
  v169 = ((v167 ^ 0xE77FFAEF) - 727075255) ^ ((v167 ^ 0xFF0ECEDB) - 858226051) ^ ((v167 ^ 0x50C941DB) + 1662979453);
  v170 = ((v169 - 193667189) ^ 0x9C0F0F4C) & (2 * ((v169 - 193667189) & 0xDEAF8F51)) ^ (v169 - 193667189) & 0xDEAF8F51;
  v171 = ((2 * ((v169 - 193667189) ^ 0x985C1B6E)) ^ 0x8DE7287E) & ((v169 - 193667189) ^ 0x985C1B6E) ^ (2 * ((v169 - 193667189) ^ 0x985C1B6E)) & 0x46F3943E;
  v172 = v171 ^ 0x42109401;
  v173 = (v171 ^ 0x4E2000C) & (4 * v170) ^ v170;
  v174 = ((4 * v172) ^ 0x1BCE50FC) & v172 ^ (4 * v172) & 0x46F3943C;
  v175 = (v174 ^ 0x2C21030) & (16 * v173) ^ v173;
  v176 = ((16 * (v174 ^ 0x44318403)) ^ 0x6F3943F0) & (v174 ^ 0x44318403) ^ (16 * (v174 ^ 0x44318403)) & 0x46F39430;
  v177 = v175 ^ 0x46F3943F ^ (v176 ^ 0x46310000) & (v175 << 8);
  v178 = v169
       - 752587044
       + ((((v169 - 193667189) ^ (2
                                * ((v177 << 16) & 0x46F30000 ^ v177 ^ ((v177 << 16) ^ 0x143F0000) & (((v176 ^ 0xC2940F) << 8) & 0x46F30000 ^ 0x4630000 ^ (((v176 ^ 0xC2940F) << 8) ^ 0x73940000) & (v176 ^ 0xC2940F))))) >> 15) ^ 0xB65D);
  v179 = v178 + (v178 >> 1) - ((2 * (v178 + (v178 >> 1))) & 0xCED19508) + 1734920836;
  v180 = ((v179 ^ LODWORD(STACK[0x9D4])) + 1127455280) ^ ((v179 ^ 0x8F0FF1CB) + 1894780469) ^ ((v179 ^ 0x54AB5E9F)
                                                                                             - 1420517023);
  v181 = ((v180 - 2141548178) ^ 0xE917BEA4) & (2 * ((v180 - 2141548178) & 0xCC143F35)) ^ (v180 - 2141548178) & 0xCC143F35;
  v182 = ((2 * ((v180 - 2141548178) ^ 0xE917B486)) ^ 0x4A071766) & ((v180 - 2141548178) ^ 0xE917B486) ^ (2 * ((v180 - 2141548178) ^ 0xE917B486)) & 0x25038BB2;
  v183 = v182 ^ 0x25008891;
  v184 = (v182 ^ LODWORD(STACK[0x9D8])) & (4 * v181) ^ v181;
  v185 = ((4 * v183) ^ 0x940E2ECC) & v183 ^ (4 * v183) & 0x25038BB0;
  v186 = (v185 ^ 0x4020A83) & (16 * v184) ^ v184;
  v187 = ((16 * (v185 ^ 0x21018133)) ^ 0x5038BB30) & (v185 ^ 0x21018133) ^ (16 * (v185 ^ 0x21018133)) & 0x25038BB0;
  v188 = v186 ^ 0x25038BB3 ^ (v187 ^ 0x8B00) & (v186 << 8);
  v189 = ((v180 - 2141548178) ^ (2
                               * ((v188 << 16) & 0x25030000 ^ v188 ^ ((v188 << 16) ^ 0xBB30000) & (((v187 ^ 0x25030083) << 8) & 0x25030000 ^ 0x24000000 ^ (((v187 ^ 0x25030083) << 8) ^ 0x38B0000) & (v187 ^ 0x25030083))))) >> 12;
  v190 = v180
       - (((v189 ^ 0xDD2970F3) - 2021363125) ^ ((v189 ^ 0x6ACC3752) + 811677164) ^ ((v189 ^ LODWORD(STACK[0x9DC]))
                                                                                  - 314571701));
  v191 = v126 ^ v179;
  v192 = (((2 * (v168 & 0x7F ^ LODWORD(STACK[0x9E8]))) & 0x10207C58) - (v168 & 0x7F ^ LODWORD(STACK[0x9E8])) - 1251376685) ^ LODWORD(STACK[0x9E0]);
  v193 = v192 - ((2 * v192) & 0x6B021702) + 2105871233;
  v194 = ((v190 - 1830854819) ^ 0x853625AA) & (2 * ((v190 - 1830854819) & 0x1434B532)) ^ (v190 - 1830854819) & 0x1434B532;
  v195 = ((2 * ((v190 - 1830854819) ^ LODWORD(STACK[0x9E4]))) ^ 0x3257B138) & ((v190 - 1830854819) ^ LODWORD(STACK[0x9E4])) ^ (2 * ((v190 - 1830854819) ^ LODWORD(STACK[0x9E4]))) & 0x992BD89C;
  v196 = v195 ^ 0x89284884;
  v197 = (v195 ^ 0x10039018) & (4 * v194) ^ v194;
  v198 = ((4 * v196) ^ 0x64AF6270) & v196 ^ (4 * v196) & 0x992BD89C;
  v199 = (v198 ^ 0x2B400C) & (16 * v197) ^ v197;
  v200 = ((16 * (v198 ^ 0x9900988C)) ^ 0x92BD89C0) & (v198 ^ 0x9900988C) ^ (16 * (v198 ^ 0x9900988C)) & 0x992BD890;
  v201 = v199 ^ 0x992BD89C ^ (v200 ^ 0x90298800) & (v199 << 8);
  v202 = ((v190 - 1830854819) ^ (2
                               * ((v201 << 16) & 0x192B0000 ^ v201 ^ ((v201 << 16) ^ 0x589C0000) & (((v200 ^ 0x902501C) << 8) & 0x192B0000 ^ 0x10230000 ^ (((v200 ^ 0x902501C) << 8) ^ 0x2BD80000) & (v200 ^ 0x902501C))))) >> 8;
  v203 = v190
       - (((v202 ^ 0x5BF6AF23) + 302595250) ^ ((v202 ^ 0x2CE74FF9) + 1696128108) ^ ((v202 ^ 0x770793DE) + 1056440397))
       + 229118673;
  v204 = (2 * (v203 & 0xE355E255)) & (v203 ^ 0xEE5360F0) ^ v203 & 0xE355E255 ^ ((2 * (v203 & 0xE355E255)) & 0x40280A0 | 0x40000);
  v205 = (2 * (v203 ^ 0xEE5360F0)) & 0xD0682A4 ^ 0x50282A5 ^ ((2 * (v203 ^ 0xEE5360F0)) ^ LODWORD(STACK[0x9EC])) & (v203 ^ 0xEE5360F0);
  v206 = (4 * v204) & 0xD0682A4 ^ v204 ^ ((4 * v204) ^ 0x100000) & v205;
  v207 = (4 * v205) & 0xD0682A4 ^ 0x9048021 ^ ((4 * v205) ^ 0x341A0A94) & v205;
  v208 = (16 * v206) & 0xD0682A0 ^ v206 ^ ((16 * v206) ^ 0x400000) & v207;
  v209 = (16 * v207) & 0xD0682A0 ^ 0xD0680A5 ^ ((16 * v207) ^ 0xD0682A50) & v207;
  v210 = v208 ^ 0x90282A5 ^ (v208 << 8) & 0xD068200 ^ ((v208 << 8) ^ 0x4000000) & v209;
  v211 = v92 ^ a2 ^ v146 ^ v203 ^ (2
                                 * ((v210 << 16) & 0xD060000 ^ v210 ^ ((v210 << 16) ^ 0x2A50000) & ((v209 << 8) & 0xD060000 ^ 0x9040000 ^ ((v209 << 8) ^ 0x6820000) & v209)));
  v212 = 16843009
       * (((v193 ^ 0xE5B0960C) + 1699807977) ^ ((v193 ^ 0x8F8C9969) + 258805134) ^ ((v193 ^ LODWORD(STACK[0x9F0]))
                                                                                  - 1290694552))
       + 1944010276;
  v213 = (v212 ^ 0xDB101F90) & (2 * (v212 & 0xE3511FD9)) ^ v212 & 0xE3511FD9;
  v214 = ((2 * (v212 ^ 0xD9B011B2)) ^ 0x75C21CD6) & (v212 ^ 0xD9B011B2) ^ (2 * (v212 ^ 0xD9B011B2)) & 0x3AE10E6A;
  v215 = v214 ^ 0xA210229;
  v216 = (v214 ^ 0x10E10C41) & (4 * v213) ^ v213;
  v217 = ((4 * v215) ^ 0xEB8439AC) & v215 ^ (4 * v215) & 0x3AE10E68;
  v218 = (v217 ^ 0x2A800820) & (16 * v216) ^ v216;
  v219 = ((16 * (v217 ^ LODWORD(STACK[0x9F4]))) ^ 0xAE10E6B0) & (v217 ^ LODWORD(STACK[0x9F4])) ^ (16
                                                                                                * (v217 ^ LODWORD(STACK[0x9F4]))) & 0x3AE10E60;
  v220 = v218 ^ 0x3AE10E6B ^ (v219 ^ 0x2A00064B) & (v218 << 8);
  v221 = v212 ^ (2
               * ((v220 << 16) & 0x3AE10000 ^ v220 ^ ((v220 << 16) ^ 0xE6B0000) & (((v219 ^ 0x10E1084B) << 8) & 0x3AE10000 ^ 0x1AE10000 ^ (((v219 ^ 0x10E1084B) << 8) ^ 0x610E0000) & (v219 ^ 0x10E1084B))));
  v222 = ((2 * (v168 & 0xFFFFFF80 ^ 0x7109DA00)) & 0xE1D27600) - (v168 & 0xFFFFFF80 ^ 0x7109DA00) - 1894333303;
  v223 = (v222 & 0x99837580 ^ 0x118005D3) + (v222 & 0x667C8A00 ^ 0x2188801);
  v224 = (((2 * (v211 & 7 ^ 3)) | 0x2726AFC) - (v211 & 7 ^ 3) + 1590086274) & 0x3FFFFFFF;
  v225 = (v211 & 0xFFFFFFF8 ^ 0x523478C8)
       + (v211 & 0xFD699088 ^ 0xAD498005)
       - ((v211 & 0xFFFFFFF8 ^ 0x523478C8) & 0xFD699088);
  LODWORD(STACK[0x6A80]) = (v225 & 0x87689740 ^ 0x82680747) + (v225 & 0x789768B8 ^ LODWORD(STACK[0x9F8]));
  v226 = (3 - ((((v211 ^ 2) + 3) ^ v211) ^ ((v211 ^ 1) + 2))) & 7;
  LODWORD(STACK[0x6AB0]) = v226;
  v227 = v224 ^ 0x2139357E;
  if (v224 != 0x2139357E)
    v228 = 255;
  else
    v228 = 0;
  v229 = v228 << v226;
  v230 = -486539264 * v229 - 1381915087;
  v231 = ((((((v230 & 0x52000000u) >> 28) & 1) << 29) | 0x2406001) + 767) ^ (v230 & 0x52000000 | 0x212810A8) ^ ((2 * (v230 & 0x52000000)) | 2) & (v230 ^ 0x71362A66);
  v232 = (2 * (v230 ^ 0x71362A66)) & 0x22000000 ^ 0x20000001 ^ ((2 * (v230 ^ 0x71362A66)) ^ 0x46908452) & (v230 ^ 0x71362A66);
  v233 = (4 * v231) & 0x236873A8 ^ v231 & 0xF648310A ^ ((4 * v231) ^ 0x8DA1CEA4) & v232;
  v234 = (4 * v232) & 0x236873A8 ^ LODWORD(STACK[0x9FC]) ^ ((4 * v232) ^ 0x8DA1CEA4) & v232;
  v235 = (16 * v233) & 0x236873A0 ^ v233 ^ ((16 * v233) ^ 0x36873A90) & v234;
  v236 = (16 * v234) & 0x236873A0 ^ LODWORD(STACK[0xA04]) ^ ((16 * v234) ^ 0x36873A90) & v234;
  v237 = v235 ^ 0x2401380 ^ (v235 << 8) & 0x23687300 ^ ((v235 << 8) ^ 0x68412900) & v236;
  v238 = v230 ^ (2
               * ((v237 << 16) & 0x23680000 ^ v237 ^ ((v237 << 16) ^ 0x73A90000) & ((v236 << 8) & 0x23680000 ^ 0x3080000 ^ ((v236 << 8) ^ 0x68730000) & v236)));
  v239 = 16843009 * v229;
  v240 = 33686018 * v229;
  LODWORD(STACK[0x6618]) = v238 & 0x43BF68F1 ^ (v239 - (v240 & 0x4F997970) - 1479754568) ^ (v238 ^ 0x52DEBE9D) & (v191 ^ LODWORD(STACK[0xA00]));
  v241 = v229 ^ 0xD1D07322;
  if (v224 == 0x2139357E)
    v241 = 774868189;
  v242 = v241 & 0x3A ^ (v241 ^ 0xDDDDDDDD) & (v168 ^ 0xE7) ^ 0x10;
  v243 = (v242 - ((2 * v242) & 0x74) + 91963706) ^ 0xE1BCC32;
  LODWORD(STACK[0x6610]) = ((v243 | 0xCC3BADC5) - (v243 | 0x33C4523A) + 868504122) ^ (v239
                                                                                    - (v240 & 0xDFD63200)
                                                                                    + 1877678336);
  v244 = (1124036262
        - ((v168 ^ BYTE1(v168)) ^ 0x11103BDB)
        + ((2 * ((v168 ^ BYTE1(v168)) ^ 0x11103BDB)) & 0x220022B2)) ^ 0x53EF55AF;
  v245 = ((BYTE2(v168) ^ 0x2F) - ((2 * (BYTE2(v168) ^ 0x2F)) & 0xF6) - 1716779397) ^ 0x9EA50A69;
  LODWORD(STACK[0x69F0]) = v191;
  v246 = LODWORD(STACK[0x6AC0]) ^ 0x973;
  v247 = 16843009
       * ((v245 - ((2 * v245) & 0xA021A64) + 622943538) ^ HIBYTE(v168) ^ (v244 - ((2 * v244) & 0x7402F230) + 979204376) ^ 0x187528C9);
  v248 = (LODWORD(STACK[0x68B0]) - ((2 * LODWORD(STACK[0x64E0])) & 0x4325C45A) - 96504490) ^ v8 ^ 0x3310FE45;
  v249 = 16843009
       * ((((BYTE1(v191) ^ BYTE2(v191) ^ 0xB4) - ((2 * (BYTE1(v191) ^ BYTE2(v191))) & 0x90) - 56) ^ v191) ^ HIBYTE(v191) ^ 0x48);
  LODWORD(STACK[0x64E0]) = v247;
  LODWORD(STACK[0x69E0]) = v249;
  v250 = v249 ^ v247;
  v251 = v249 ^ v247 ^ 0x3A3A3A3A;
  v252 = (uint64_t)*(&off_1015B46D0 + (v246 ^ 0x1E8D));
  v253 = *(_DWORD *)(v252 + 4 * (v251 % 0x101));
  LODWORD(STACK[0x6AC0]) = v248 - (STACK[0xA08] & (2 * v248));
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x6698]) - 1201391906 + ((v253 + 58830541) ^ 0xC42E5DA8);
  v254 = (uint64_t)*(&off_1015B46D0 + v246 - 5897);
  LODWORD(STACK[0x6408]) = v221 ^ 0x8251030F;
  v255 = *(_DWORD *)(v254 + 4 * ((v221 ^ 0x8251030F) % 0x101))
       + (((v221 ^ 0x8251030F) % 0x101 + 1355287221) ^ ((v221 ^ 0x8251030F) % 0x101));
  v256 = (unint64_t)*(&off_1015B46D0 + v246 - 5151);
  LODWORD(STACK[0x6698]) = v8 ^ 0x12821C68;
  v257 = *(_DWORD *)(v256 + 4 * ((v8 ^ 0x12821C68u) % 0x101));
  v258 = ((v224 ^ 0x21393578) - ((2 * (v224 ^ 0x21393578)) & 0x2620294) - 940211894) ^ LODWORD(STACK[0x64A8]);
  LODWORD(STACK[0x6A50]) = LODWORD(STACK[0x64E8])
                         + 623182821
                         + (v257 ^ 0xF06D855B ^ (v257 >> 2) & 0x3930C8D1)
                         + (v255 ^ 0xE405979F);
  LODWORD(STACK[0x64E8]) = v193;
  v259 = ((v193 ^ 0x755FD08C) - 172080023) ^ ((v193 ^ 0x5E798D9B) - 560457344) ^ ((v193 ^ 0x72EA56F1) - 234110442);
  LODWORD(STACK[0x6600]) = v221;
  v260 = (v221 ^ 0x97)
       + (v221 & 0xC1 ^ LODWORD(STACK[0xA10]))
       - ((v221 ^ 0x97) & 0xFFFFFFC1);
  v261 = (v260 & STACK[0xA14] ^ 0x42120) + (v260 ^ 0xCF5A5649) - ((v260 ^ 0xCF5A5649) & 0x200929);
  v262 = v223 - 2;
  v263 = LODWORD(STACK[0x65C8]) + ((v223 - 2) ^ 0x25585F2D) - (v261 ^ 0xC84C7539) + 1;
  v264 = (((v168 ^ 0x97ABEB0B) - 622165852) ^ ((v168 ^ LODWORD(STACK[0xA18])) - 912798548) ^ ((v168 ^ 0x245D7FE3)
                                                                                            + 1763447884))
       + (v263 ^ 0xFDF9FF39)
       + ((2 * v263) & 0xFBF3FE72)
       - 481432843;
  v265 = (v264 ^ 0x2756BD2E) & (2 * (v264 & 0xA456BD8E)) ^ v264 & 0xA456BD8E;
  v266 = ((2 * (v264 ^ 0x67F78C2A)) ^ 0x87426348) & (v264 ^ 0x67F78C2A) ^ (2 * (v264 ^ 0x67F78C2A)) & 0xC3A131A4;
  v267 = (v266 ^ 0x83002000) & (4 * v265) ^ v265;
  v268 = ((4 * (v266 ^ 0x40A110A4)) ^ 0xE84C690) & (v266 ^ 0x40A110A4) ^ (4 * (v266 ^ 0x40A110A4)) & 0xC3A131A4;
  v269 = (v268 ^ 0x2800084) & (16 * v267) ^ v267;
  v270 = ((16 * (v268 ^ 0xC1213124)) ^ 0x3A131A40) & (v268 ^ 0xC1213124) ^ (16 * (v268 ^ 0xC1213124)) & 0xC3A131A0;
  v271 = v269 ^ 0xC3A131A4 ^ (v270 ^ 0x20110A4) & (v269 << 8);
  LODWORD(STACK[0x69C0]) = v264 ^ (2
                                 * ((v271 << 16) & 0x43A10000 ^ v271 ^ ((v271 << 16) ^ 0x31A40000) & (((v270 ^ 0xC1A021A4) << 8) & 0x43A10000 ^ 0x42800000 ^ (((v270 ^ 0xC1A021A4) << 8) ^ 0x21310000) & (v270 ^ 0xC1A021A4))));
  LODWORD(STACK[0x6650]) = v8;
  v272 = STACK[0x6840];
  v273 = (LODWORD(STACK[0x6840]) ^ 0xE1BB9E9F) % 0x101;
  LODWORD(STACK[0x6428]) = ((LODWORD(STACK[0x64C8]) ^ 0xDEFE8AA0) - 1286649498) ^ ((LODWORD(STACK[0x64C8]) ^ 0xA38A8CDA)
                                                                                 - 834973920) ^ ((LODWORD(STACK[0x64C8]) ^ 0x711C47D)
                                                                                               + 1788872633);
  v274 = ((v8 ^ 0x2F) - ((2 * (v8 ^ 0x2F)) & 0xFFFFFFF7) + 1275) ^ 0x4BC;
  v275 = STACK[0x6498];
  v276 = (v274 + LODWORD(STACK[0x6498])) % 0x101;
  v277 = STACK[0x6528];
  v278 = STACK[0x64F8];
  LODWORD(STACK[0x69B0]) = v251;
  LODWORD(STACK[0x64C8]) = v278 ^ v277 ^ v250 ^ ((v251 ^ v278) >> 4);
  v279 = ((v272 ^ 0x27BF29C0) + 970635862) ^ ((v272 ^ 0x3DEE9638) + 596313518) ^ ((v272 ^ 0xFBEA2167) - 443567373);
  v280 = ((2 * (v8 ^ 0xE249E797)) | 0x53C20A7A) - (v8 ^ 0xE249E797);
  v281 = (char *)*(&off_1015B46D0 + (v246 ^ 0x198A)) - 12;
  STACK[0x68B0] = v273;
  v282 = 4 * v273;
  v283 = LODWORD(STACK[0x6658]) - 1667525578 + (__ROR4__(*(_DWORD *)&v281[v282], 26) ^ 0xDD08749E);
  v284 = (((v168 ^ 0xF5DD71A3) - 1197729268) ^ ((v168 ^ 0x751E92A3) + 945813772) ^ ((v168 ^ 0xB7E3D0EB) - 89998524))
       + (v262 ^ 0xA6E305A8 ^ ((v261 ^ 0xC84C7539) - 2084876244 + (~(2 * (v261 ^ 0xC84C7539)) | 0xF8894AF5) + 2650));
  v285 = STACK[0x6870];
  v286 = LODWORD(STACK[0x6870]) | LODWORD(STACK[0x6430]);
  v287 = ((v285 + LODWORD(STACK[0x64C0]) - v227) ^ v286)
       - ((2 * ((v285 + LODWORD(STACK[0x64C0]) - v227) ^ v286)) & 0xB2CD2AAE);
  LODWORD(STACK[0x6A00]) = v274 | v275;
  LODWORD(STACK[0x63B0]) = ((v211 ^ 0xF3DB40C3) - ((2 * (v211 ^ 0xF3DB40C3)) & 0xD8821006) - 331282429) ^ LODWORD(STACK[0x64D0]);
  LODWORD(STACK[0x64C0]) = *(_DWORD *)(v254 + v282);
  LODWORD(STACK[0x6498]) = *(_DWORD *)&v281[4 * v276];
  LODWORD(v282) = STACK[0x64D8];
  LODWORD(v254) = (LODWORD(STACK[0x64D8]) ^ 0x722571D9) + v286;
  v288 = *(_DWORD *)&v281[4 * (((v280 + 1444870851) ^ 0x4BA8E2C2 | v275) % 0x101)];
  v289 = *(_DWORD *)&v281[4 * (v286 % 0x101)];
  LODWORD(STACK[0x6250]) = (v287 + 1499895127) ^ LODWORD(STACK[0x64D8]);
  v290 = v261 & 0x68A5A80B ^ 0x28A18800 ^ (v261 ^ 0x37B38AC4) & (v262 ^ LODWORD(STACK[0xA1C]));
  v291 = LODWORD(STACK[0x64B0]) - 593773830 + (__ROR4__(v288, 26) ^ 0xDD08749E);
  v292 = *(_DWORD *)(v252 + 4 * ((v168 ^ 0x372033EB) % 0x101));
  v293 = *(_DWORD *)(v252 + 4 * ((v282 ^ LODWORD(STACK[0xA20])) % 0x101));
  LODWORD(STACK[0x6430]) = *(_DWORD *)(v252
                                     + 4 * (((((2 * v290) | 0x8A567F0E) - v290 - 1160462215) ^ 0xB2D4C07A) % 0x101));
  LODWORD(STACK[0x64D0]) = (v285 - ((2 * v285) & 0x47FF5E36) + 603959051) ^ LODWORD(STACK[0x6530]) ^ v224 ^ (v258 >> 2) ^ __ROR4__(v289, 26) ^ (v293 + 58830541);
  v294 = LODWORD(STACK[0x64B8]) + ((v292 + 58830541) ^ 0x3BD1A257);
  LODWORD(v252) = STACK[0x68C0];
  LODWORD(STACK[0x6960]) = v168;
  LODWORD(STACK[0x63A0]) = v211;
  v295 = STACK[0x6910];
  v296 = STACK[0xD880];
  v297 = *(_QWORD *)(STACK[0xD880] + 8 * (0xE3409B43 % STACK[0x6910]));
  v298 = *(_QWORD *)(STACK[0xD880]
                   + 8
                   * (((((v297 ^ 0x657810060C3A6D99) - 0x176DC81D25ADED82) ^ ((v297 ^ 0xE64DF8553A0B42B3)
                                                                                + 0x6BA7DFB1EC633D58) ^ ((v297 ^ 0x5DEB368DE8EFF1F4) - 0x2FFEEE96C17871EFLL))
                     - 0x5334F939F0766FDFLL)
                    % STACK[0x6910]));
  v299 = *(_QWORD *)(STACK[0xD880]
                   + 8
                   * (((((v298 ^ 0x4394710C18A71578) - 0x4BF531C56DC3926ELL) ^ ((v298 ^ 0x6832DD5BAF2C8C26)
                                                                                - 0x60539D92DA480B30) ^ ((v298 ^ 0xF578728969554780) + 0x2E6CDBFE3CE3F6ALL))
                     - 0x294061E82D8DCC21)
                    % STACK[0x6910]));
  v300 = (LODWORD(STACK[0x6A80]) - 2) ^ 0xA66F8F6E;
  LODWORD(STACK[0x6850]) = v227;
  v301 = v300 | v227;
  LODWORD(STACK[0x64B8]) = 2 * (v300 | v227);
  v302 = v301 - ((2 * v301) & 0x6CBAB904) + 912088194;
  v303 = STACK[0x6660];
  LODWORD(STACK[0x63D8]) = v211 ^ 0xF3DB40C3;
  LODWORD(STACK[0x6388]) = v302;
  STACK[0x6A60] = v296;
  v304 = *(_QWORD *)(v296
                   + 8
                   * (((((v299 ^ 0xEDBE57CEB0E04082) + 0x19725514DB6790A2) ^ ((v299 ^ 0xBB1BD76BA32AC8AFLL)
                                                                                + 0x4FD7D5B1C8AD188DLL) ^ ((v299 ^ 0x887B5E7BCD1456F3) + 0x7CB75CA1A69386D1))
                     - 0x2A12DC043DC424EALL)
                    % v295));
  LODWORD(STACK[0x64D8]) = v211 ^ 0xF3DB40C3 ^ v303 ^ v302 ^ (32
                                                            * (v302 ^ ((v211 ^ 0xF3DB40C3)
                                                                     - 2
                                                                     * ((v211 ^ 0xF3DB40C3) & 0x25D5C96 ^ v211 & 0x14)
                                                                     + 106781826)));
  v305 = (((2 * v304) & 0x1105F8E28 ^ 0x100010800)
        + ((2 * v304) & 0x110140C20 ^ 0xA7A7F04303434A4)
        - (((2 * v304) & 0x1105F8E28 ^ 0x100010800) & 0x110140C20)) ^ 0x4E3C3E04363574E2;
  LODWORD(v305) = ((((v304 ^ 0x29B868454CCC62C9) - 0x4D71F2012241F0B4) ^ ((v304 ^ 0x9F84466185600ACALL)
                                                                            + 0x4B223DA14126749) ^ ((v304 ^ 0x68E2F0FA9F5D71C9) - 0xC2B6ABEF1D0E3B4))
                 + 0x79FB98965F97A307
                 + ((((((2 * v305) & 0x2082DC9404CLL) - v305 - 0x1A09230C16E4A037) ^ 0xA705E042683ECDB5)
                   + 0x46AED1B34FDCB6BELL) ^ (((((2 * v305) & 0x2082DC9404CLL) - v305 - 0x1A09230C16E4A037) ^ 0x7418260DB20F1EDDLL)
                                            - 0x6A4CE8036A129A2ALL) ^ (((((2 * v305) & 0x2082DC9404CLL)
                                                                       - v305
                                                                       - 0x1A09230C16E4A037) ^ 0x72AD5BBD253740CFLL)
                                                                     - 0x6CF995B3FD2AC438)))
                % v295;
  LODWORD(STACK[0x63C0]) = LODWORD(STACK[0x6AC0]) - 580517188;
  STACK[0x6188] = v256;
  v306 = *(_DWORD *)(v256 + 4 * (v278 % 0x101));
  LODWORD(STACK[0x6A40]) = LODWORD(STACK[0x6A70]) + 1;
  LODWORD(v256) = STACK[0x6A50];
  LODWORD(STACK[0x63C8]) = (2 * LODWORD(STACK[0x6A50]) + 220) & STACK[0xA0C];
  LODWORD(STACK[0x6380]) = v256 + 675068052;
  LODWORD(STACK[0x63B8]) = 1734915863 * v259;
  LODWORD(STACK[0x63D0]) = v301 ^ 0x4402044;
  LODWORD(STACK[0x69A0]) = 416227849 - 1478865339 * v279;
  LODWORD(STACK[0x6360]) = v283 + 1;
  LODWORD(STACK[0x6A30]) = v254 + 1;
  LODWORD(STACK[0x6370]) = v284 + 1;
  LODWORD(STACK[0x6990]) = v291 + 1;
  LODWORD(STACK[0x6390]) = v294 + 1;
  LODWORD(STACK[0x6A20]) = 1072315481
                         * (((v168 ^ v252 ^ 0x6175D35) + 1371742036) ^ ((v168 ^ v252 ^ 0xA6E5434E) - 248446679) ^ ((v168 ^ v252 ^ 0x68E234DB) + 1060533950));
  LODWORD(STACK[0x6A50]) = ((((v305 - ((2 * v305) & 0xB75FD94) - 977600822) ^ 0xD047AA7B) - 618770883) ^ (((v305 - ((2 * v305) & 0xB75FD94) - 977600822) ^ 0xC29B87D7) - 910007407) ^ (((v305 - ((2 * v305) & 0xB75FD94) - 977600822) ^ 0xD766D366) - 599836894))
                         + 1559354337;
  v307 = STACK[0x6AD8];
  LODWORD(STACK[0x6AC0]) = v246;
  v308 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v307 + 8 * v246) - 8);
  LODWORD(STACK[0x6378]) = v285 | (v285 << 6);
  LODWORD(STACK[0x63E0]) = v306;
  LODWORD(STACK[0x6660]) = v306 >> 2;
  LODWORD(STACK[0x64B0]) = 2056678163 * v278;
  LODWORD(STACK[0x64A8]) = 1734915863 * LODWORD(STACK[0x6628]);
  v309 = STACK[0x66B0];
  LODWORD(STACK[0x6368]) = LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x6658]) = LODWORD(STACK[0x65E8]) + 333082164;
  LODWORD(STACK[0x6A10]) = -v309;
  LODWORD(STACK[0x63A8]) = LODWORD(STACK[0x69F0]) ^ 0xEC9840A;
  return v308(879442193);
}

uint64_t sub_100CB5528(unsigned int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;

  v10 = STACK[0x6A50];
  LODWORD(STACK[0x6A80]) = LODWORD(STACK[0x6A50]) < v7;
  v11 = (v9 | ((unint64_t)(v9 < a1) << 32)) + 0x225FA8BDA0975AD3;
  v12 = *(_QWORD *)(STACK[0x6A60]
                  + 8 * ((LODWORD(STACK[0x6AC0]) - 1648885089) + v11)
                  - 0x12FD45F395D57C40);
  v13 = (((v12 ^ 0xBBFC4DCE750C0B06) + 0x4E662AD81602B6D1) ^ ((v12 ^ 0x536DCA19264474E2) - 0x590852F0BAB536CBLL) ^ ((v12 ^ 0x364F59098D96A13ALL) - 0x3C2AC1E01167E313))
      * a6
      + 0x4716E0E683A996D4;
  v14 = (v13 ^ 0xF9D0A9FAB36A7DCELL) & (2 * (v13 & 0xFA18C1FA346A71EFLL)) ^ v13 & 0xFA18C1FA346A71EFLL;
  v15 = ((2 * (v13 ^ 0x49C1A89ED33E7F8CLL)) ^ 0x67B2D2C9CEA81CC6) & (v13 ^ 0x49C1A89ED33E7F8CLL) ^ (2 * (v13 ^ 0x49C1A89ED33E7F8CLL)) & 0xB3D96964E7540E62;
  v16 = ((4 * (v15 ^ 0x9049292421540221)) ^ 0xCF65A5939D50398CLL) & (v15 ^ 0x9049292421540221) ^ (4 * (v15 ^ 0x9049292421540221)) & 0xB3D96964E7540E60;
  v17 = (v16 ^ 0x8341210085500800) & (16 * ((v15 ^ 0x20800040C2000C40) & (4 * v14) ^ v14)) ^ (v15 ^ 0x20800040C2000C40) & (4 * v14) ^ v14;
  v18 = ((16 * (v16 ^ 0x3098486462040663)) ^ 0x3D96964E7540E630) & (v16 ^ 0x3098486462040663) ^ (16 * (v16 ^ 0x3098486462040663)) & 0xB3D96964E7540E60;
  v19 = (((v18 ^ 0x8249692082140843) << 8) ^ 0xD96964E7540E6300) & (v18 ^ 0x8249692082140843) ^ ((v18 ^ 0x8249692082140843) << 8) & 0xB3D96964E7540E00;
  v20 = (v18 ^ 0x3190004465400600) & (v17 << 8) ^ v17 ^ 0xB3D96964E7540E63 ^ (v19 ^ 0x9149606444040000) & (((v18 ^ 0x3190004465400600) & (v17 << 8) ^ v17) << 16);
  v21 = v13 ^ (2
             * ((v20 << 32) & 0x33D9696400000000 ^ v20 ^ ((v20 << 32) ^ 0x67540E6300000000) & (((v19 ^ 0x22900900A3500C63) << 16) & 0x33D9696400000000 ^ 0x1299082000000000 ^ (((v19 ^ 0x22900900A3500C63) << 16) ^ 0x6964E75400000000) & (v19 ^ 0x22900900A3500C63))));
  v22 = v11
      + 0x28347A296955068
      + (((v21 ^ v6 ^ 0xD26D9E302FD7063CLL) + 0xCA0E7D2B74A8B50) ^ ((v21 ^ v6 ^ 0xCC8292D1C39BCE6ALL)
                                                                    + 0x124FEB335B06431ALL) ^ ((v21 ^ v6 ^ 0xC5E50F12168EA57FLL)
                                                                                             + 0x1B2876F08E13280DLL));
  v23 = ((2 * (v22 ^ 0x30C437B97D9EC20ELL)) ^ 0xCB23446E9F2DF2AELL) & (v22 ^ 0x30C437B97D9EC20ELL) ^ (2 * (v22 ^ 0x30C437B97D9EC20ELL)) & 0xE591A2374F96F956;
  v24 = v23 ^ 0x2490A21140920951;
  v25 = (v22 ^ 0x904515AD398EB21CLL) & (2 * (v22 & 0xD555958E32083B59)) ^ v22 & 0xD555958E32083B59;
  v26 = (v23 ^ 0xC10000200800F004) & (4 * v25) ^ v25;
  v27 = ((4 * v24) ^ 0x964688DD3E5BE55CLL) & v24 ^ (4 * v24) & 0xE591A2374F96F954;
  v28 = (v27 ^ 0x840080150E12E150) & (16 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0x6191222241841803)) ^ 0x591A2374F96F9570) & (v27 ^ 0x6191222241841803) ^ (16 * (v27 ^ 0x6191222241841803)) & 0xE591A2374F96F950;
  v30 = (v29 ^ 0x4110223449069100) & (v28 << 8) ^ v28;
  v31 = (((v29 ^ 0xA481800306906807) << 8) ^ 0x91A2374F96F95700) & (v29 ^ 0xA481800306906807) ^ ((v29 ^ 0xA481800306906807) << 8) & 0xE591A2374F96F900;
  v32 = (v22 ^ (2
              * (((v30 ^ 0xE591A2374F96F957 ^ (v31 ^ 0x8180220706900000) & (v30 << 16)) << 32) & 0x6591A23700000000 ^ v30 ^ 0xE591A2374F96F957 ^ (v31 ^ 0x8180220706900000) & (v30 << 16) ^ (((v30 ^ 0xE591A2374F96F957 ^ (v31 ^ 0x8180220706900000) & (v30 << 16)) << 32) ^ 0x4F96F95700000000) & (((v31 ^ 0x641180304906A857) << 16) & 0x6591A23700000000 ^ 0x4580A02100000000 ^ (((v31 ^ 0x641180304906A857) << 16) ^ 0x22374F9600000000) & (v31 ^ 0x641180304906A857))))) >> 32;
  v33 = v22
      - 0x7449475BD33742B7
      + (((v32 ^ 0x40F3EB7A4E04E495) - 0x11B2F3FB80FD08D9) ^ ((v32 ^ 0x718283165F6DCBE0) - 0x20C39B97919427ACLL) ^ ((v32 ^ 0x3171686C843EBEBBLL) - 0x603070ED4AC752F7));
  v34 = (v33 ^ 0x589FF0627ECDFBD3) & (2 * (v33 & 0x9ADFF56B60EDFB92)) ^ v33 & 0x9ADFF56B60EDFB92;
  v35 = ((2 * (v33 ^ 0x7CA1B8B6FE866DF7)) ^ 0xCCFC9BBB3CD72CCALL) & (v33 ^ 0x7CA1B8B6FE866DF7) ^ (2 * (v33 ^ 0x7CA1B8B6FE866DF7)) & 0xE67E4DDD9E6B9664;
  v36 = ((4 * (v35 ^ 0x2202444482289225)) ^ 0x99F9377679AE5994) & (v35 ^ 0x2202444482289225) ^ (4 * (v35 ^ 0x2202444482289225)) & 0xE67E4DDD9E6B9664;
  v37 = (v36 ^ 0x80780554182A1000) & (16 * ((v35 ^ 0xC47C099904430440) & (4 * v34) ^ v34)) ^ (v35 ^ 0xC47C099904430440) & (4 * v34) ^ v34;
  v38 = ((16 * (v36 ^ 0x6606488986418661)) ^ 0x67E4DDD9E6B96650) & (v36 ^ 0x6606488986418661) ^ (16 * (v36 ^ 0x6606488986418661)) & 0xE67E4DDD9E6B9660;
  v39 = (v38 ^ 0x66644DD986290600) & (v37 << 8) ^ v37;
  v40 = (((v38 ^ 0x801A000418429025) << 8) ^ 0x7E4DDD9E6B966500) & (v38 ^ 0x801A000418429025) ^ ((v38 ^ 0x801A000418429025) << 8) & 0xE67E4DDD9E6B9600;
  v41 = v39 ^ 0xE67E4DDD9E6B9665 ^ (v40 ^ 0x664C4D9C0A020000) & (v39 << 16);
  v42 = (v33 ^ (2
              * ((v41 << 32) & 0x667E4DDD00000000 ^ v41 ^ ((v41 << 32) ^ 0x1E6B966500000000) & (((v40 ^ 0x8032004194699265) << 16) & 0x667E4DDD00000000 ^ 0x2222419400000000 ^ (((v40 ^ 0x8032004194699265) << 16) ^ 0x4DDD9E6B00000000) & (v40 ^ 0x8032004194699265))))) >> 16;
  v43 = v33
      + 0x48ABCDBCDB398521
      + (((v42 ^ 0xD93D70167951D9F9) + 0x238DC422A255EA90) ^ ((v42 ^ 0xBADDFC44A1882366) + 0x406D48707A8C1011) ^ ((v42 ^ 0x63E0D6A5BE83A6A5) - 0x66AF9D6E9A786A2CLL));
  v44 = ((2 * (v43 ^ 0x4B86EB92CD92EBA4)) ^ 0x380BA6F00B89D900) & (v43 ^ 0x4B86EB92CD92EBA4) ^ (2 * (v43 ^ 0x4B86EB92CD92EBA4)) & 0x1C05D37805C4EC80;
  v45 = v44 ^ 0x404510804442480;
  v46 = (v43 ^ 0x4782BAC2CD16E7A4) & (2 * (v43 & 0x578338EAC8560724)) ^ v43 & 0x578338EAC8560724;
  v47 = (v44 ^ 0x1801827001800800) & (4 * v46) ^ v46;
  v48 = ((4 * v45) ^ 0x70174DE01713B200) & v45 ^ (4 * v45) & 0x1C05D37805C4EC80;
  v49 = ((16 * (v48 ^ 0xC00921800C44C80)) ^ 0xC05D37805C4EC800) & (v48 ^ 0xC00921800C44C80) ^ (16 * (v48 ^ 0xC00921800C44C80)) & 0x1C05D37805C4EC80;
  v50 = (v49 ^ 0x513000444C800) & (((v48 ^ 0x100541600500A000) & (16 * v47) ^ v47) << 8) ^ (v48 ^ 0x100541600500A000) & (16 * v47) ^ v47;
  v51 = (((v49 ^ 0x1C00C07801802480) << 8) ^ 0x5D37805C4EC8000) & (v49 ^ 0x1C00C07801802480) ^ ((v49 ^ 0x1C00C07801802480) << 8) & 0x1C05D37805C4EC00;
  v52 = v50 ^ 0x1C05D37805C4EC80 ^ (v51 ^ 0x401500004C40000) & (v50 << 16);
  v53 = (v43 ^ (2
              * ((v52 << 32) & 0x1C05D37800000000 ^ v52 ^ ((v52 << 32) ^ 0x5C4EC8000000000) & (((v51 ^ 0x1804837801006C80) << 16) & 0x1C05D37800000000 ^ 0xC05D23800000000 ^ (((v51 ^ 0x1804837801006C80) << 16) ^ 0x537805C400000000) & (v51 ^ 0x1804837801006C80))))) >> 8;
  LODWORD(v43) = v43
               - (((v53 ^ 0xE7822D9A) + 1923532916) ^ ((v53 ^ 0xFD96719) - 1694661903) ^ ((v53 ^ 0xF298955D) + 1740402869))
               - 1612381770;
  LODWORD(v53) = ((2 * (v43 ^ 0xCA403698)) ^ 0xE430127C) & (v43 ^ 0xCA403698) ^ (2 * (v43 ^ 0xCA403698)) & 0x7218093E;
  LODWORD(v51) = (v43 ^ 0xBA503F94) & (2 * (v43 & 0xB8583FA6)) ^ v43 & 0xB8583FA6;
  LODWORD(v49) = v53 ^ 0x12080902;
  LODWORD(v53) = (v53 ^ 0x60000038) & (4 * v51) ^ v51;
  LODWORD(v51) = ((4 * v49) ^ 0xC86024F8) & v49 ^ (4 * v49) & 0x7218093C;
  LODWORD(v53) = (v51 ^ 0x40000020) & (16 * v53) ^ v53;
  LODWORD(v51) = ((16 * (v51 ^ 0x32180906)) ^ 0x218093E0) & (v51 ^ 0x32180906) ^ (16 * (v51 ^ 0x32180906)) & 0x72180930;
  LODWORD(v53) = v43 ^ (2
                      * ((v51 ^ 0x20000100) & ((_DWORD)v53 << 8) ^ v53 ^ 0x7218093E ^ ((((v51 ^ 0x5218081E) << 8) ^ 0x18093E00) & (v51 ^ 0x5218081E) ^ ((v51 ^ 0x5218081E) << 8) & 0x72180900 ^ 0x10080000) & (((v51 ^ 0x20000100) & ((_DWORD)v53 << 8) ^ v53) << 16)));
  LODWORD(STACK[0x6A70]) = (((2 * (v53 ^ 0x8A046FDB)) & 0x2103046 ^ 0x109420D3)
                          + ((2 * (v53 ^ 0x8A046FDB)) & 0x4D038028 ^ 0x41000021)
                          + a4) & (v8 + 400);
  LODWORD(v45) = (v9 ^ 0xEB94C4CF) & (2 * (v9 & 0xCB94C6EF)) ^ v9 & 0xCB94C6EF;
  v54 = ((2 * (v9 ^ 0x7B9C4C07)) ^ LODWORD(STACK[0x24DC])) & (v9 ^ 0x7B9C4C07) ^ (2 * (v9 ^ 0x7B9C4C07)) & 0xB0088AE8;
  v55 = ((4 * (v54 ^ 0x90088A28)) ^ 0xC0222BA0) & (v54 ^ 0x90088A28) ^ (4 * (v54 ^ 0x90088A28)) & 0xB0088AE8;
  v56 = (v55 ^ 0x80000AA8) & (16 * ((v54 ^ 0xA00880C0) & (4 * v45) ^ v45)) ^ (v54 ^ 0xA00880C0) & (4 * v45) ^ v45;
  v57 = ((16 * (v55 ^ 0x30088048)) ^ 0x88AE80) & (v55 ^ 0x30088048) ^ (16 * (v55 ^ 0x30088048)) & 0xB0088AE0;
  LODWORD(v45) = v57 ^ 0xB0000068;
  v58 = v56 ^ 0xB0088AE8 ^ (v57 ^ 0x88A68) & (v56 << 8);
  v59 = v9 ^ (2
            * ((v58 << 16) & 0x30080000 ^ v58 ^ ((v58 << 16) ^ 0xAE80000) & (((_DWORD)v45 << 8) & 0xB0080000 ^ (((_DWORD)v45 << 8) ^ 0x88A0000) & v45 ^ 0x30000000)));
  LODWORD(v43) = (((v59 ^ 0xCD20E904) + 1057025101) ^ ((v59 ^ 0xC6B78B6B) + 882347556) ^ ((v59 ^ LODWORD(STACK[0x24E0]))
                                                                                        + 1378006042))
               + ((2 * (v9 & 1) - 274948278) ^ (2 * (v9 & 1) + 249241386) ^ (((2 * (v9 & 1)) ^ 0xDAA9D93B) + 884131379));
  v60 = (int)v43 - 469499668 < v10;
  if (LODWORD(STACK[0x6A80]) != (v43 - 469499668) < 0x2BD4F66F)
    v60 = STACK[0x6A80];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                                      * ((21 * (v60 ^ 1)) ^ LODWORD(STACK[0x6AC0])))
                                          - 8))(879442193);
}

uint64_t sub_100CB87A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, unint64_t);

  LODWORD(STACK[0x69D0]) = LODWORD(STACK[0x6638]) ^ 0x9C5788FB;
  LODWORD(STACK[0x6A80]) = v3 + 1648893646;
  v4 = ((v3 + 1648893646) ^ 0x3930F2A3) & STACK[0x6660];
  LODWORD(STACK[0x6660]) = LODWORD(STACK[0x6610]) ^ LODWORD(STACK[0xA24]);
  v5 = STACK[0x6850];
  v6 = LODWORD(STACK[0x6378]) ^ LODWORD(STACK[0x65B8]) ^ LODWORD(STACK[0x6850]);
  LODWORD(STACK[0x6A50]) = LODWORD(STACK[0x63E0]) ^ 0xF927AA4 ^ v4;
  LODWORD(STACK[0x6378]) = 2056678163 * LODWORD(STACK[0x69B0]);
  LODWORD(STACK[0x63E0]) = LODWORD(STACK[0x63B8]) + 302223803;
  v7 = LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x6AB0]);
  LODWORD(STACK[0x63B8]) = STACK[0x64B8] & 0xF77FBF76;
  LODWORD(STACK[0x6248]) = LODWORD(STACK[0x6360]) + (__ROR4__(STACK[0x6498], 26) ^ 0x22F78B61);
  v8 = LODWORD(STACK[0x64C0]) + ((STACK[0x68B0] + 1355287221) ^ STACK[0x68B0]);
  LODWORD(STACK[0x69B0]) = LODWORD(STACK[0x6390]) + ((LODWORD(STACK[0x6430]) + 58830541) ^ 0xC42E5DA8);
  LODWORD(STACK[0x6390]) = LODWORD(STACK[0x6960]) ^ 0xB11E80EE;
  STACK[0x6A70] = STACK[0xD880];
  v9 = ((LODWORD(STACK[0x6950]) ^ 0x7E12EB5D) - 1606196011) ^ ((LODWORD(STACK[0x6950]) ^ 0x25361107) - 77095281) ^ ((LODWORD(STACK[0x6950]) ^ 0x5F2C490A) - 2122463612);
  LODWORD(STACK[0x68B0]) = LODWORD(STACK[0x64C8]) ^ LODWORD(STACK[0xA28]);
  LODWORD(STACK[0x6430]) = LODWORD(STACK[0x6370]) * LODWORD(STACK[0xA2C]);
  LODWORD(STACK[0x6498]) = v8 ^ 0xE405979F;
  LODWORD(STACK[0x64C0]) = v7 ^ (LODWORD(STACK[0x6368]) << 7);
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x64D8]) ^ 0xA4C93E71;
  LODWORD(STACK[0x6A60]) = v9 - 1425556659;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8]
                                                                              + 8
                                                                              * (int)((12867 * (v3 < 0xDC837733)) ^ (v3 + 1648880781)));
  LODWORD(STACK[0x64B8]) = v6 ^ (v5 << 6);
  return v10(a1, a2, a3, 0xF6CDC03515BB5000);
}

uint64_t sub_100CB8B5C()
{
  unsigned int v0;
  int v1;
  unsigned int v2;
  int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = STACK[0x6A60];
  v3 = STACK[0x6A80];
  v4 = LODWORD(STACK[0x6A60]) < v0;
  STACK[0x6AC0] = (LODWORD(STACK[0x6A80]) + 1833);
  if (v4 != (v1 + 1358282519) < 0x8560F827)
    v5 = v4;
  else
    v5 = v1 + 1358282519 < v2;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((2046 * !v5) ^ v3)))(879442193);
}

uint64_t sub_100CBBF8C()
{
  unint64_t v0;
  uint64_t (*v1)(void);

  LODWORD(STACK[0x64B0]) ^= LODWORD(STACK[0x65D8]) ^ LODWORD(STACK[0x6378]);
  LODWORD(STACK[0x6A70]) = LODWORD(STACK[0x64A8]) ^ LODWORD(STACK[0x65E0]) ^ LODWORD(STACK[0x63E0]);
  LODWORD(STACK[0x6240]) = LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6820]) ^ (-1478865339 * LODWORD(STACK[0x6A00]));
  LODWORD(STACK[0x69A0]) = LODWORD(STACK[0x6658]) + LODWORD(STACK[0x6430]);
  LODWORD(STACK[0x63E0]) = LODWORD(STACK[0x6990]) + LODWORD(STACK[0x6498]);
  LODWORD(STACK[0x6658]) = LODWORD(STACK[0x6618]) ^ 0x1AAD6BD6;
  LODWORD(STACK[0x6990]) = LODWORD(STACK[0x65A8]) - LODWORD(STACK[0x6AB0]) + LODWORD(STACK[0x66B0]);
  LODWORD(STACK[0x6430]) = LODWORD(STACK[0x64E0]) ^ 0xD58632D1;
  if (((*(_BYTE *)(STACK[0x6A90]
                  + ((*(_BYTE *)(STACK[0x6A90]
                               + ((*(_BYTE *)(STACK[0x6A90] + ((*(_BYTE *)(STACK[0x6A90] + 8) + 2) & 0xF)) + 3) & 0xF))
                    + 10) & 0xF))
       + 6) & 0xE) != 0)
    v0 = (*(_BYTE *)(STACK[0x6A90]
                   + ((*(_BYTE *)(STACK[0x6A90]
                                + ((*(_BYTE *)(STACK[0x6A90] + ((*(_BYTE *)(STACK[0x6A90] + 8) + 2) & 0xF)) + 3) & 0xF))
                     + 10) & 0xF))
        + 6) & 0xF;
  else
    v0 = 1;
  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6AC0]) - 12);
  STACK[0x6A00] = v0;
  STACK[0x6A80] = v0 - 1;
  return v1();
}

uint64_t sub_100CBD49C()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((7995 * (STACK[0x6A80] == v0)) ^ STACK[0x6AC0]))
                            - 12))();
}

uint64_t sub_100CBDEB8()
{
  unint64_t v0;
  unint64_t v1;

  v0 = STACK[0x6AC0];
  LODWORD(STACK[0x6180]) = LODWORD(STACK[0x6A40]) + LODWORD(STACK[0x6A50]);
  LODWORD(STACK[0x6498]) = LODWORD(STACK[0x69C0]) ^ 0x3635348B;
  LODWORD(STACK[0x64A8]) = LODWORD(STACK[0x6A30]) + LODWORD(STACK[0x6A70]);
  LODWORD(STACK[0x64A0]) += LODWORD(STACK[0x6A10]) + LODWORD(STACK[0x6A20]) + LODWORD(STACK[0x6AB0]) + 512822809;
  v1 = STACK[0x6AD8];
  LODWORD(STACK[0x6A60]) = v0 ^ 0x13A4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ 0x13A4)) - 8))();
}

uint64_t sub_100CBDFF0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;

  LODWORD(STACK[0x6A10]) = v5;
  LODWORD(STACK[0x6AC0]) = v7;
  LODWORD(STACK[0x6A80]) = v6;
  STACK[0x6A50] = v2;
  v8 = (LODWORD(STACK[0x6A60]) - 9788) | 0x240;
  v9 = *(unsigned __int8 *)(v1 + v0);
  LODWORD(STACK[0x6A70]) = v8;
  v10 = v0
      + v2
      + ((v9 * (v8 + 1395898294)) ^ v4)
      - ((((v9 * (v8 + 1395898294)) ^ v4) + v3 - ((((v9 * (v8 + 1395898294)) ^ v4) + v3) >> 16)) >> 8)
      - ((((v9 * (v8 + 1395898294)) ^ v4) + v3) >> 16);
  v11 = ((2 * v10) & 0xE7F9CCFA) + (v10 ^ 0x73FCE67D);
  LODWORD(STACK[0x6A30]) = 2 * ((v11 - 562037316) & 0xAD831BC7);
  v12 = ((v11 - 1769048337) ^ 0x5397376F) & (2 * ((v11 - 1769048337) & 0x5B06378E)) ^ (v11 - 1769048337) & 0x5B06378E;
  v13 = ((2 * ((v11 - 1769048337) ^ 0xF39B317F)) ^ 0x513A0DE2) & ((v11 - 1769048337) ^ 0xF39B317F) ^ (2 * ((v11 - 1769048337) ^ 0xF39B317F)) & 0xA89D06F0;
  v14 = ((4 * (v13 ^ 0xA8850211)) ^ 0xA2741BC4) & (v13 ^ 0xA8850211) ^ (4 * (v13 ^ 0xA8850211)) & 0xA89D06F0;
  v15 = (v13 ^ 0x9C0461) & (4 * v12) ^ v12 ^ 0xA89D06F1 ^ (v14 ^ 0xA01402D1) & (16 * ((v13 ^ 0x9C0461) & (4 * v12) ^ v12));
  v16 = (16 * (v14 ^ 0x8890431)) & 0xA89D06F0 ^ LODWORD(STACK[0x2514]) ^ ((16 * (v14 ^ 0x8890431)) ^ 0x89D06F10) & (v14 ^ 0x8890431);
  v17 = (v15 << 8) & 0xA89D0600 ^ v15 ^ ((v15 << 8) ^ 0x9D06F100) & v16;
  v18 = (v11 - 1769048337) ^ (2
                            * ((v17 << 16) & 0x289D0000 ^ v17 ^ ((v17 << 16) ^ 0x6F10000) & ((v16 << 8) & 0xA89D0000 ^ 0x20990000 ^ ((v16 << 8) ^ 0x1D060000) & v16)));
  v19 = ((((2 * v18) ^ 0xC1FFE96B) & 0xB4EFA8CE)
       - (((2 * v18) ^ 0xC1FFE96B) & STACK[0x2518])
       + (((2 * v18) ^ 0xC1FFE96B) & STACK[0x2518] ^ 0x61A4390A)) ^ ((2 * v18) ^ 0xC1FFE96B) & 0xFBFC18A0;
  LODWORD(STACK[0x6A40]) = (v19 & 0x19DE9898 ^ 0x8980E11) + (v19 ^ 0xD567B188) - ((v19 ^ 0xD567B188) & 0x19DE9E98);
  STACK[0x6A20] = v0 + v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((13067 * (STACK[0x6A20] == 15)) ^ LODWORD(STACK[0x6A60])))
                            - 8))();
}

uint64_t sub_100CBEE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  LODWORD(STACK[0x6A80]) = v8;
  LODWORD(STACK[0x6AC0]) = v9;
  LODWORD(STACK[0x63C8]) = LODWORD(STACK[0x6380]) - LODWORD(STACK[0x63C8]);
  LODWORD(STACK[0x6178]) = LODWORD(STACK[0x63B0]) ^ LODWORD(STACK[0x6388]);
  v10 = (v6 ^ 0xAE5394F4) - ((v6 ^ 0xAE5394F4) >> 10) + (((v6 ^ 0xAE5394F4) - ((v6 ^ 0xAE5394F4) >> 10)) >> 5);
  v11 = v10 - ((2 * v10) & 0x6686529C) + 860039502;
  v12 = (((v11 ^ 0xB4FCE670) + 1258494352) ^ ((v11 ^ 0x78655E40) - 2019909184) ^ ((v11 ^ 0xFFDA917E) + 2453122))
      + 6938903;
  v13 = v12 + (v12 >> 8) - ((v12 + (v12 >> 8)) >> 5);
  v14 = v13 - 1914428077 - ((v13 - 1914428077) >> 10) - ((v13 - 1914428077 - ((v13 - 1914428077) >> 10)) >> 7);
  v15 = (v14 ^ 0xA90B9435) + ((v14 ^ 0xA90B9435) >> 11) + (((v14 ^ 0xA90B9435) + ((v14 ^ 0xA90B9435) >> 11)) >> 3);
  LODWORD(STACK[0x6820]) = v15;
  v16 = v15 - ((2 * v15) & 0x6686529C) + 860039502;
  v17 = v15 - 1968291155 - ((v15 - 1968291155) >> 13) - ((v15 - 1968291155 - ((v15 - 1968291155) >> 13)) >> 1);
  v18 = v17 + 1645513498 - ((v17 + 1645513498) >> 14) - ((v17 + 1645513498 - ((v17 + 1645513498) >> 14)) >> 7);
  v19 = v18 - 1925147681 + ((v18 - 1925147681) >> 13) + ((v18 - 1925147681 + ((v18 - 1925147681) >> 13)) >> 3);
  v20 = v19 - ((2 * v19) & 0xEE46420E) + 1998790919;
  v21 = (((v20 ^ 0x146CCD54) - 342674772) ^ ((v20 ^ LODWORD(STACK[0xA34])) - 236696441) ^ ((v20 ^ 0x6D545F2A)
                                                                                         - 1834245930))
      - 977942228;
  v22 = v21 + (v21 >> 15) + ((v21 + (v21 >> 15)) >> 1);
  v23 = v22 - 452590049 - ((v22 - 452590049) >> 12) - ((v22 - 452590049 - ((v22 - 452590049) >> 12)) >> 8);
  v24 = v23 - 1489131086 + ~((2 * v23) & 0x4E7B5362);
  v25 = STACK[0x6700];
  v26 = LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x68C0]);
  LODWORD(STACK[0x6A10]) = v11;
  LODWORD(STACK[0x63B0]) = v20;
  v27 = ((v26 ^ v11 ^ v16 ^ 0xF1196EB7 ^ v20)
       + 1338712882
       - ((2 * (v26 ^ v11 ^ v16 ^ 0xF1196EB7 ^ v20)) & 0x1F9661E0)
       + 3518) ^ v25;
  LODWORD(STACK[0x6A20]) = (4 * v27) & 0x9E0660C0;
  LODWORD(STACK[0x6380]) = (a6 & (2 * v27)) - 808767248;
  v28 = LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6900]) ^ 0x2F1E63F2;
  LODWORD(STACK[0x6A30]) = v28;
  v29 = v13 ^ LODWORD(STACK[0x6710]);
  v30 = (2 * (v29 ^ (v28 - ((2 * v28) & 0x4A7E0306) - 1522597501) ^ v17 ^ v22)) ^ 0x1C19F774;
  v31 = v30 & 0x182B14B8 ^ 0x96B252D9 ^ ((v30 & 0x5738A4D6) - (v30 & 0x40000004) + (v30 & 0x40000004 ^ 0xC082520D));
  v32 = v29 ^ v7 ^ (v17 - ((2 * v17) & 0x355A56A8) - 1699927212) ^ (v22 - ((2 * v22) & 0xA7D2B1AE) + 1407801559) ^ ((v31 | 0x2A69E403) - (v31 | 0xD5961BFC) - 711582724);
  LODWORD(STACK[0x6378]) = (v32 ^ 0xB3B48BCF) & 0x40153413 ^ v32 & 0x10;
  LODWORD(STACK[0x6370]) = (v32 ^ 0xB3B48BCF) - 1072352253;
  v33 = STACK[0x6910];
  v34 = STACK[0xD880];
  v35 = *(_QWORD *)(STACK[0xD880] + 8 * (0xCBD1A1C9 % STACK[0x6910]));
  v36 = LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x6670]);
  LODWORD(STACK[0x6A00]) = v14;
  LODWORD(STACK[0x6388]) = v24;
  v37 = (2 * (v36 ^ v14 ^ v18 ^ v24)) ^ 0xA5D2795;
  v38 = v37 & 0xBE528560 ^ 0x70996095 ^ ((v37 & 0x1000310A ^ 0x987093) + (v37 & 0xE1410404) - 1);
  LODWORD(STACK[0x6360]) = v38;
  LODWORD(STACK[0x6358]) = 2 * v38;
  LODWORD(STACK[0x6368]) = v18 - ((2 * v18) & 0x3A953A34) - 1656054502;
  v39 = *(_QWORD *)(v34
                  + 8
                  * (((((v35 ^ 0x43CB35E182C6215CLL) + 0x58E4DB4CEF7AE174) ^ ((v35 ^ 0xFAD40AF21C88B7D9)
                                                                              - 0x1E041BA08ECB8809) ^ ((v35 ^ 0x67C1E1CD4090485BLL) + 0x7CEE0F602D2C8875))
                    + 0x3A0ECF8C84538584)
                   % v33));
  v40 = *(_QWORD *)(v34
                  + 8
                  * (((((v39 ^ 0xEBA95E408560CFD6) + 0x440B94A1365EC652) ^ ((v39 ^ 0x67FD5F903E123D6BLL)
                                                                              - 0x37A06A8E72D3CB13) ^ ((v39 ^ 0x528ADF0E65AC2C63) - 0x2D7EA10296DDA1BLL))
                    - 0x717C143F0BF7CD78)
                   % v33));
  STACK[0x6A60] = v34;
  v41 = *(_QWORD *)(v34
                  + 8
                  * (((((v40 ^ 0x2C10CD5A090EA447) - 0x431D507E5FA83C16) ^ ((v40 ^ 0x9510D6B37C4BCA08)
                                                                              + 0x5E2B468D512ADA7) ^ ((v40 ^ 0x67DEC537AB9BB091) - 0x8D35813FD3D28C0))
                    - 0x4E2CBC052E1BA5D3)
                   % v33));
  LODWORD(v41) = ((((v41 ^ 0x748CCB651BCABEFDLL) - 0x312B5266D66A153FLL) ^ ((v41 ^ 0x136FE8AE033D9C4FLL)
                                                                          - 0x56C871ADCE9D378DLL) ^ ((v41 ^ 0xB93DFD15C629FC6CLL) + 0x3659BE9F476A852))
                - 0x6486B8221B12C93BLL)
               % v33;
  LODWORD(STACK[0x6A40]) = ((((v41 - ((2 * v41) & 0x2C4DEEBE) - 702089377) ^ 0x73F93503) - 1476538288) ^ (((v41 - ((2 * v41) & 0x2C4DEEBE) - 702089377) ^ 0x26B190A1) - 222988818) ^ (((v41 - ((2 * v41) & 0x2C4DEEBE) - 702089377) ^ 0x836E52FD) + 1466611634))
                         - 272092422;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A70])) - 12))();
}

uint64_t sub_100CBF748@<X0>(unsigned int a1@<W4>, int a2@<W8>)
{
  unsigned int v2;
  _BOOL4 v3;
  int v4;

  v2 = STACK[0x6A40];
  v3 = LODWORD(STACK[0x6A40]) < a1;
  v4 = STACK[0x6A70];
  STACK[0x6A50] = (LODWORD(STACK[0x6A70]) - 7739) | 0x2405u;
  if (v3 == (a2 - 1378035567) < 0xF1EA450E)
    v3 = a2 - 1378035567 < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21 * !v3) ^ v4)) - 12))();
}

uint64_t sub_100CC2868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;

  v4 = LODWORD(STACK[0x6428]) + LODWORD(STACK[0x63D8]) + LODWORD(STACK[0x63D0]) - LODWORD(STACK[0x63B8]);
  v5 = LODWORD(STACK[0x6380]) - LODWORD(STACK[0x6A20]);
  LODWORD(STACK[0x6A20]) = LODWORD(STACK[0x6370]) - 2 * LODWORD(STACK[0x6378]);
  LODWORD(STACK[0x6910]) = LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x6510]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6AC0]) ^ LODWORD(STACK[0x63B0]) ^ v5;
  v6 = (LODWORD(STACK[0x6358]) | 0xD0AA6050) - LODWORD(STACK[0x6360]);
  v7 = LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x6480]) ^ LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x6A80]);
  v8 = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6368]) ^ LODWORD(STACK[0x6388]);
  LODWORD(STACK[0x68F0]) = v4 - 471081479;
  LODWORD(STACK[0x6480]) = v7 ^ v8 ^ (v6 + 397070296);
  v9 = STACK[0x6950];
  STACK[0x6AC0] = STACK[0xD880];
  LODWORD(STACK[0x6A80]) = (((v9 ^ LODWORD(STACK[0xA38])) - 928591946) ^ ((v9 ^ 0xECBECA08) + 854541698) ^ ((v9 ^ 0xFE413964) + 537966318))
                         - 1236603349;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8 * (int)STACK[0x6A50])
                                                                              - 12))(a1, 0x66BAB58D6483EE18, a3, a4, 2426678021);
}

uint64_t sub_100CC2AFC@<X0>(unsigned int a1@<W4>, int a2@<W8>)
{
  unsigned int v2;
  _BOOL4 v3;
  unint64_t v4;

  v2 = STACK[0x6A80];
  v3 = LODWORD(STACK[0x6A80]) < a1;
  v4 = STACK[0x6A50];
  STACK[0x6A60] = STACK[0x6A50] - 1120;
  if (v3 == (a2 + 1284947592) < 0x90A42B05)
    v3 = a2 + 1284947592 < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((570 * !v3) ^ v4)) - 12))();
}

uint64_t sub_100CC592C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  LODWORD(STACK[0x6428]) = LODWORD(STACK[0x69E0]) ^ 0xD41F4401;
  LODWORD(STACK[0x6820]) = LODWORD(STACK[0x6480]) ^ 0xEAE77827;
  v0 = STACK[0x6A90];
  if (((*(_BYTE *)(v0
                  + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + 11) + 14) & 0xF)) + 13) & 0xF)) + 11) & 0xF))
       + 14) & 0xE) != 0)
    v1 = (*(_BYTE *)(v0
                   + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + ((*(_BYTE *)(v0 + 11) + 14) & 0xF)) + 13) & 0xF)) + 11) & 0xF))
        + 14) & 0xF;
  else
    v1 = 1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x6A60]) - 4);
  STACK[0x6AC0] = v1;
  STACK[0x6A40] = v1 - 1;
  return v2(3010165419, 2424442042);
}

uint64_t sub_100CC6AF8(int a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;

  LODWORD(STACK[0x6A80]) = v3;
  v5 = STACK[0x6A60] - 4813;
  v6 = (((2 * *(unsigned __int8 *)(v4 + v1)) & 0xF6) + (*(unsigned __int8 *)(v4 + v1) ^ 0x63D7DD7B)) * v2 - 1599830759;
  LODWORD(STACK[0x6A70]) = v5;
  v7 = (v6 ^ 0xACE41702) & (2 * (v6 & 0x28C50744)) ^ v6 & 0x28C50744;
  v8 = ((2 * (v5 ^ 0xFC6E0F6A ^ v6)) ^ LODWORD(STACK[0x2538])) & (v5 ^ 0xFC6E0F6A ^ v6) ^ (2 * (v5 ^ 0xFC6E0F6A ^ v6)) & 0xD4AB14CE;
  v9 = v8 ^ 0x54A91442;
  v10 = (v8 ^ 0x90810042) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x52AC5338) & v9 ^ (4 * v9) & 0xD4AB14CC;
  v12 = ((16 * (v11 ^ 0x840304C6)) ^ 0x4AB14CE0) & (v11 ^ 0x840304C6) ^ (16 * (v11 ^ 0x840304C6)) & 0xD4AB14C0;
  v13 = (v11 ^ 0x50A81006) & (16 * v10) ^ v10 ^ 0xD4AB14CE ^ (v12 ^ 0x40A1040E) & (((v11 ^ 0x50A81006) & (16 * v10) ^ v10) << 8);
  v14 = v6 ^ (2
            * ((v13 << 16) & 0x54AB0000 ^ v13 ^ ((v13 << 16) ^ 0x14CE0000) & (((v12 ^ 0x940A100E) << 8) & 0x54AB0000 ^ 0x54AB0000 ^ (((v12 ^ 0x940A100E) << 8) ^ 0x2B140000) & (v12 ^ 0x940A100E))));
  v15 = v1
      + (a1 ^ 0xA8872ED8 ^ v14)
      - (((a1 ^ 0xA8872ED8 ^ v14) + (_DWORD)v1 - (((a1 ^ 0xA8872ED8 ^ v14) + v1) >> 16)) >> 8)
      - (((a1 ^ 0xA8872ED8 ^ v14) + v1) >> 16);
  v16 = ((2 * v15) & 0xD1FF7FFC) + (v15 ^ 0x68FFBFFE);
  v17 = ((v16 + 461654595) ^ 0xAD42BC3C) & (2 * ((v16 + 461654595) & 0xAE44C03C)) ^ (v16 + 461654595) & 0xAE44C03C;
  v18 = ((2 * ((v16 + 461654595) ^ 0xA1C2BC5C)) ^ LODWORD(STACK[0x2544])) & ((v16 + 461654595) ^ 0xA1C2BC5C) ^ (2 * ((v16 + 461654595) ^ 0xA1C2BC5C)) & 0xF867C60;
  v19 = (v18 ^ 0xB840440) & (4 * v17) ^ v17;
  v20 = ((4 * (v18 ^ 0x820420)) ^ 0x3E19F180) & (v18 ^ 0x820420) ^ (4 * (v18 ^ 0x820420)) & 0xF867C60;
  v21 = v20 ^ 0x1860C60;
  v22 = (v20 ^ 0xE007000) & (16 * v19) ^ v19;
  v23 = ((16 * v21) ^ 0xF867C600) & v21 ^ (16 * v21) & 0xF867C60;
  v24 = v22 ^ 0xF867C60 ^ (v23 ^ 0x8064460) & (v22 << 8);
  v25 = (v16 + 461654595) ^ (2
                           * ((v24 << 16) & 0xF860000 ^ v24 ^ ((v24 << 16) ^ 0x7C600000) & (((v23 ^ 0x7803860) << 8) & 0xF860000 ^ 0x9820000 ^ (((v23 ^ 0x7803860) << 8) ^ 0x67C0000) & (v23 ^ 0x7803860))));
  LODWORD(STACK[0x6A50]) = ((2 * v25) & 0x45059A24 ^ 0x350589C5) + ((2 * v25) & 0x8000200A ^ 0x8A2009);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((19091 * (STACK[0x6A40] == v1)) ^ STACK[0x6A60]))
                            - 4))();
}

uint64_t sub_100CC8228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  LODWORD(STACK[0x6950]) = LODWORD(STACK[0x64F0]) ^ LODWORD(STACK[0x6550]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6A20]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A70])) - 8))(a1, v8, 1573552225, STACK[0x6AC0] - 1, 1538862587, v7, a7, 686842750);
}

uint64_t sub_100CC82E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unint64_t v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;

  LODWORD(STACK[0x6A00]) = v12;
  LODWORD(STACK[0x6A80]) = v11;
  LODWORD(STACK[0x6A60]) = a6;
  STACK[0x6A40] = v6;
  STACK[0x6A50] = v9;
  v14 = ((*(unsigned __int8 *)(a2 + v7) ^ 0x7D96FEFF) + 2 * *(unsigned __int8 *)(a2 + v7)) * v8 + 380251619;
  v15 = (v14 ^ 0xA582A0D7) & (2 * (v14 & 0x3590B116)) ^ v14 & 0x3590B116;
  v16 = ((2 * (v14 ^ (LODWORD(STACK[0x6A70]) - 998021613))) ^ 0xE22667CA) & (v14 ^ (LODWORD(STACK[0x6A70]) - 998021613)) ^ (2 * (v14 ^ (LODWORD(STACK[0x6A70]) - 998021613))) & 0xF11333E4;
  v17 = ((4 * (v16 ^ 0x11111025)) ^ LODWORD(STACK[0x2574])) & (v16 ^ 0x11111025) ^ (4 * (v16 ^ 0x11111025)) & 0xF11333E4;
  v18 = (v17 ^ 0xC0000381) & (16 * ((v16 ^ 0xE00200C0) & (4 * v15) ^ v15)) ^ (v16 ^ 0xE00200C0) & (4 * v15) ^ v15;
  v19 = ((16 * (v17 ^ LODWORD(STACK[0x2570]))) ^ 0x11333E50) & (v17 ^ LODWORD(STACK[0x2570])) ^ (16
                                                                                               * (v17 ^ LODWORD(STACK[0x2570]))) & 0xF11333E0;
  v20 = v18 ^ 0xF11333E5 ^ (v19 ^ 0x11133200) & (v18 << 8);
  v21 = v14 ^ (2
             * ((v20 << 16) & 0x71130000 ^ v20 ^ ((v20 << 16) ^ 0x33E50000) & (((v19 ^ 0xE00001A5) << 8) & 0x71130000 ^ (((v19 ^ 0xE00001A5) << 8) ^ 0x13330000) & (v19 ^ 0xE00001A5) ^ 0x60000000)));
  LODWORD(STACK[0x69F0]) = v21;
  v22 = STACK[0x6AC0] + v6;
  STACK[0x6A20] = v22;
  v23 = v22 + (a1 ^ 0xB5B4D6DC ^ v21) - (((a1 ^ 0xB5B4D6DC ^ v21) + v10) >> 16);
  v24 = ((2 * v23) & 0x75D77EEE) + (v23 ^ 0xBAEBBF77);
  v25 = (v24 + 1979580400) ^ 0xDFD9C7FF;
  v26 = (2 * ((v24 + 1979580400) & 0xCF164099)) & 0x100C8122 ^ ((v24 + 1979580400) & 0xCF164099 | 0x10C18122) ^ (2 * ((v24 + 1979580400) & 0xCF164099)) & v25;
  v27 = (2 * v25) & 0x10CF8766 ^ 0x10408122 ^ ((2 * v25) ^ 0x219F0ECC) & v25;
  v28 = (4 * v26) & STACK[0x2578] ^ v26 ^ ((4 * v26) ^ 0x43060488) & v27;
  v29 = (4 * v27) & 0x10CF8764 ^ 0x10C18266 ^ ((4 * v27) ^ 0x433E1D98) & v27;
  v30 = (16 * v28) & 0x10CF8760 ^ v28 ^ ((16 * v28) ^ 0xC785220) & v29;
  v31 = (16 * v29) & 0x10CF8760 ^ 0x10078106 ^ ((16 * v29) ^ 0xCF87660) & v29;
  v32 = v30 ^ (v30 << 8) & 0x10CF8700 ^ ((v30 << 8) ^ 0x8F870200) & v31 ^ 0xC70264;
  v33 = ((v24 + 1979580400) ^ (2
                             * ((v32 << 16) & 0x10CF0000 ^ v32 ^ ((v32 << 16) ^ 0x7660000) & ((v31 << 8) & 0x10CF0000 ^ 0x10480000 ^ ((v31 << 8) ^ 0xCF870000) & v31)))) >> 8;
  v34 = v24
      - (((v33 ^ 0xCEBFD0F1) - 1624097779) ^ ((v33 ^ 0x2CFB916) + 1396856300) ^ ((v33 ^ 0xCC9E6CA9) - 1659666347))
      - 1483178239;
  v35 = (v34 ^ 0xCC9F023C) & (2 * (v34 & 0xEEDFAB3C)) ^ v34 & 0xEEDFAB3C;
  v36 = ((2 * (v34 ^ 0x403F522C)) ^ 0x5DC1F220) & (v34 ^ 0x403F522C) ^ (2 * (v34 ^ 0x403F522C)) & 0xAEE0F910;
  v37 = ((4 * (v36 ^ 0xA2200910)) ^ 0xBB83E440) & (v36 ^ 0xA2200910) ^ (4 * (v36 ^ 0xA2200910)) & 0xAEE0F910;
  v38 = (v37 ^ 0xAA80E010) & (16 * ((v36 ^ 0xCC0F000) & (4 * v35) ^ v35)) ^ (v36 ^ 0xCC0F000) & (4 * v35) ^ v35;
  v39 = ((16 * (v37 ^ 0x4601910)) ^ 0xEE0F9100) & (v37 ^ 0x4601910) ^ (16 * (v37 ^ 0x4601910)) & 0xAEE0F910;
  v40 = v38 ^ 0xAEE0F910 ^ (v39 ^ 0xAE009100) & (v38 << 8);
  v41 = v34 ^ (2
             * ((v40 << 16) & 0x2EE00000 ^ v40 ^ ((v40 << 16) ^ 0x79100000) & (((v39 ^ 0xE06810) << 8) & 0x2EE00000 ^ (((v39 ^ 0xE06810) << 8) ^ 0xE0F90000) & (v39 ^ 0xE06810) ^ 0xE000000)));
  LODWORD(STACK[0x6A10]) = v41 ^ 0x9C5445C2;
  LODWORD(STACK[0x6A30]) = -584798477
                         - (v13 & (2 * (v41 ^ 0x9C5445C2)) ^ 0xA1B2BA3C)
                         + ((2 * (v13 & (2 * (v41 ^ 0x9C5445C2)) ^ 0xA1B2BA3C)) & 0x41261064);
  LODWORD(v22) = (((v41 ^ 0x9B8AA172) - 132048048) ^ ((v41 ^ 0x84581837) - 403463669) ^ ((v41 ^ 0xFCCCE059) - 1620616603))
               - 154016001;
  v42 = (v22 ^ 0xEE49E8D8) & (2 * (v22 & 0xEE09CAD9)) ^ v22 & 0xEE09CAD9;
  v43 = ((2 * (v22 ^ 0xE258F878)) ^ 0x18A26542) & (v22 ^ 0xE258F878) ^ (2 * (v22 ^ 0xE258F878)) & 0xC5132A0;
  v44 = ((4 * (v43 ^ LODWORD(STACK[0x2588]))) ^ 0x3144CA84) & (v43 ^ LODWORD(STACK[0x2588])) ^ (4
                                                                                              * (v43 ^ LODWORD(STACK[0x2588]))) & 0xC5132A0;
  v45 = ((16 * (v44 ^ 0xC113021)) ^ LODWORD(STACK[0x2584])) & (v44 ^ 0xC113021) ^ (16 * (v44 ^ 0xC113021)) & 0xC5132A0;
  v46 = (v44 ^ 0x400281) & (16 * ((v43 ^ 0xC102001) & (4 * v42) ^ v42)) ^ (v43 ^ 0xC102001) & (4 * v42) ^ v42 ^ 0xC5132A1 ^ (v45 ^ 0x4112200) & (((v44 ^ 0x400281) & (16 * ((v43 ^ 0xC102001) & (4 * v42) ^ v42)) ^ (v43 ^ 0xC102001) & (4 * v42) ^ v42) << 8);
  LODWORD(v22) = ((2
                 * (v22 ^ 0xD618007D ^ (2
                                      * ((v46 << 16) & 0xC510000 ^ v46 ^ ((v46 << 16) ^ 0x32A10000) & (((v45 ^ 0x84010A1) << 8) & 0xC510000 ^ 0xC410000 ^ (((v45 ^ 0x84010A1) << 8) ^ 0x51320000) & (v45 ^ 0x84010A1)))))) & 0xC505BA2E ^ 0xF34B693)
               - 1;
  LODWORD(STACK[0x69E0]) = (v22 & 0x8504202C ^ 0x1B044001) + (v22 & 0x40019A02 ^ 0x40409A03);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((22581 * (STACK[0x6A20] == 15)) ^ LODWORD(STACK[0x6A70])))
                            - 8))();
}

uint64_t sub_100CC97EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  uint64_t (*v204)(_QWORD);

  LODWORD(STACK[0x6A60]) = a6;
  v12 = LODWORD(STACK[0x6A70]) + 9509;
  LODWORD(STACK[0x6A70]) = v12;
  LODWORD(STACK[0x6AC0]) = v12 - 15;
  v13 = (v6 + v7 - ((v7 + a4 - ((v7 + a4) >> 16)) >> 8) - ((v7 + a4) >> 16) - v8) ^ (v12 - 15) ^ 0xAE53D502;
  v14 = v13 - (v13 >> 10) + ((v13 - (v13 >> 10)) >> 5);
  v15 = v14 - 319327649 - ((2 * v14) & 0xD9EEE4BE);
  v16 = (((v15 ^ 0x6B79FE06) - 1803156998) ^ ((v15 ^ 0x48646E45) - 1214541381) ^ ((v15 ^ 0xCFEAE21C) + 806690276))
      - 1172428248;
  v17 = v16 + (v16 >> 8) - ((v16 + (v16 >> 8)) >> 5);
  v18 = ((v17 - 1602798630) ^ 0xC868E474) & (2 * ((v17 - 1602798630) & 0xED6CE979)) ^ (v17 - 1602798630) & 0xED6CE979;
  v19 = ((2 * ((v17 - 1602798630) ^ 0x8069B686)) ^ 0xDA0ABFFE) & ((v17 - 1602798630) ^ 0x8069B686) ^ (2 * ((v17 - 1602798630) ^ 0x8069B686)) & 0x6D055FFE;
  v20 = v19 ^ 0x25054001;
  v21 = (v19 ^ 0x48000FED) & (4 * v18) ^ v18;
  v22 = ((4 * v20) ^ 0xB4157FFC) & v20 ^ (4 * v20) & 0x6D055FFC;
  v23 = (v22 ^ 0x24055FF0) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x49000003)) ^ 0xD055FFF0) & (v22 ^ 0x49000003) ^ (16 * (v22 ^ 0x49000003)) & 0x6D055FF0;
  v25 = v23 ^ 0x6D055FFF ^ (v24 ^ 0x40055F0F) & (v23 << 8);
  v26 = ((v17 - 1602798630) ^ (2
                             * ((v25 << 16) & 0x6D050000 ^ v25 ^ ((v25 << 16) ^ 0x5FFF0000) & (((v24 ^ 0x2D00000F) << 8) & 0x6D050000 ^ 0x68000000 ^ (((v24 ^ 0x2D00000F) << 8) ^ 0x55F0000) & (v24 ^ 0x2D00000F))))) >> 10;
  v27 = v17
      + 378100754
      - (((v26 ^ 0x28161056) + 1366495720) ^ ((v26 ^ 0x35E07B94) + 1283815974) ^ ((v26 ^ 0x1DDD30D7) + 1689792871))
      + 1282;
  v28 = (v27 ^ 0xEC841CC2) & (2 * (v27 & STACK[0xA3C])) ^ v27 & STACK[0xA3C];
  v29 = ((2 * (v27 ^ 0xC961082)) ^ 0xF87E1CCC) & (v27 ^ 0xC961082) ^ (2 * (v27 ^ 0xC961082)) & 0xFC3F0E66;
  v30 = v29 ^ 0x4010222;
  v31 = (v29 ^ 0xC02D0C00) & (4 * v28) ^ v28;
  v32 = ((4 * v30) ^ 0xF0FC3998) & v30 ^ (4 * v30) & 0xFC3F0E64;
  v33 = (v32 ^ 0xF03C0800) & (16 * v31) ^ v31;
  v34 = ((16 * (v32 ^ 0xC030666)) ^ 0xC3F0E660) & (v32 ^ 0xC030666) ^ (16 * (v32 ^ 0xC030666)) & 0xFC3F0E60;
  v35 = v33 ^ 0xFC3F0E66 ^ (v34 ^ 0xC0300606) & (v33 << 8);
  v36 = (v27 ^ (2
              * ((v35 << 16) & 0xFC3FFFFF ^ v35 ^ ((v35 << 16) ^ 0xE660000) & (((v34 ^ LODWORD(STACK[0xA40])) << 8) & 0xFC3F0000 ^ 0x40310000 ^ (((v34 ^ LODWORD(STACK[0xA40])) << 8) ^ 0x3F0E0000) & (v34 ^ LODWORD(STACK[0xA40])))))) >> 7;
  v37 = v27
      - (((v36 ^ 0x8290366C) + 1600083981) ^ ((v36 ^ LODWORD(STACK[0xA44])) + 2114427684) ^ ((v36 ^ 0x2179F52B)
                                                                                           - 55141556))
      - 599229382;
  v38 = (v37 ^ 0xEB2EFA6F) & (2 * (v37 & 0xF24EFB0F)) ^ v37 & 0xF24EFB0F;
  v39 = ((2 * (v37 ^ 0x4BAA087B)) ^ 0x73C9E6E8) & (v37 ^ 0x4BAA087B) ^ (2 * (v37 ^ 0x4BAA087B)) & 0xB9E4F374;
  v40 = v39 ^ 0x88241114;
  v41 = (v39 ^ 0x1140E060) & (4 * v38) ^ v38;
  v42 = ((4 * v40) ^ 0xE793CDD0) & v40 ^ (4 * v40) & 0xB9E4F374;
  v43 = (v42 ^ 0xA180C154) & (16 * v41) ^ v41;
  v44 = ((16 * (v42 ^ 0x18643224)) ^ 0x9E4F3740) & (v42 ^ 0x18643224) ^ (16 * (v42 ^ 0x18643224)) & 0xB9E4F370;
  v45 = v43 ^ 0xB9E4F374 ^ (v44 ^ LODWORD(STACK[0xA48])) & (v43 << 8);
  v46 = v37 ^ (2
             * ((v45 << 16) & 0x39E40000 ^ v45 ^ ((v45 << 16) ^ 0x73740000) & (((v44 ^ 0x21A0C034) << 8) & 0x39E40000 ^ 0x19040000 ^ (((v44 ^ 0x21A0C034) << 8) ^ 0xE4F30000) & (v44 ^ 0x21A0C034))));
  v47 = ((((v46 >> 11) ^ 0xA14AF966) - 1447119250) ^ (((v46 >> 11) ^ 0xEEF945A0) - 435352916) ^ (((v46 >> 11) ^ 0x4FBAF457)
                                                                                               + 1196342109))
      + (((v46 ^ 0x6D439A) - 1013718523) ^ ((v46 ^ 0x1FFCBF4A) - 603840811) ^ ((v46 ^ 0x55D57502) - 1775512419));
  v48 = ((v47 - 351997319) ^ LODWORD(STACK[0xA4C])) & (2 * ((v47 - 351997319) & STACK[0xA50])) ^ (v47 - 351997319) & STACK[0xA50];
  v49 = ((2 * ((v47 - 351997319) ^ 0xEC18C15A)) ^ 0xDCB6398A) & ((v47 - 351997319) ^ 0xEC18C15A) ^ (2
                                                                                                  * ((v47 - 351997319) ^ 0xEC18C15A)) & 0x6E5B1CC4;
  v50 = v49 ^ 0x22490445;
  v51 = (v49 ^ 0x28521881) & (4 * v48) ^ v48;
  v52 = ((4 * v50) ^ 0xB96C7314) & v50 ^ (4 * v50) & 0x6E5B1CC4;
  v53 = (v52 ^ 0x28481001) & (16 * v51) ^ v51;
  v54 = ((16 * (v52 ^ 0x46130CC1)) ^ 0xE5B1CC50) & (v52 ^ 0x46130CC1) ^ (16 * (v52 ^ 0x46130CC1)) & 0x6E5B1CC0;
  v55 = v53 ^ 0x6E5B1CC5 ^ (v54 ^ 0x64110C85) & (v53 << 8);
  v56 = v47
      + 1833488408
      + ((((v47 - 351997319) ^ (2
                              * ((v55 << 16) & 0x6E5B0000 ^ v55 ^ ((v55 << 16) ^ 0x1CC50000) & (((v54 ^ 0xA4A1085) << 8) & 0x6E5B0000 ^ 0x24430000 ^ (((v54 ^ 0xA4A1085) << 8) ^ 0x5B1C0000) & (v54 ^ 0xA4A1085))))) >> 3) ^ 0x8CEFC82);
  LODWORD(STACK[0x6A40]) = v56;
  v57 = v56 - 1968291155 - ((v56 - 1968291155) >> 13) - ((v56 - 1968291155 - ((v56 - 1968291155) >> 13)) >> 1);
  v58 = ((2 * (v57 + 1645513498 - ((v57 + 1645513498) >> 14))) & 0xB3FFFFFE)
      + ((v57 + 1645513498 - ((v57 + 1645513498) >> 14)) ^ 0x59FFFFFF);
  v59 = ((v58 - 1086853441) ^ 0xF4831D52) & (2 * ((v58 - 1086853441) & 0xE6C81142)) ^ (v58 - 1086853441) & 0xE6C81142;
  v60 = ((2 * ((v58 - 1086853441) ^ 0x7C033FD6)) ^ 0x35965D28) & ((v58 - 1086853441) ^ 0x7C033FD6) ^ (2 * ((v58 - 1086853441) ^ 0x7C033FD6)) & 0x9ACB2E94;
  v61 = v60 ^ 0x8A492294;
  v62 = (v60 ^ 0x10092C84) & (4 * v59) ^ v59;
  v63 = ((4 * v61) ^ 0x6B2CBA50) & v61 ^ (4 * v61) & 0x9ACB2E94;
  v64 = (v63 ^ LODWORD(STACK[0xA54])) & (16 * v62) ^ v62;
  v65 = ((16 * (v63 ^ 0x90C30484)) ^ 0xACB2E940) & (v63 ^ 0x90C30484) ^ (16 * (v63 ^ 0x90C30484)) & 0x9ACB2E90;
  v66 = v64 ^ 0x9ACB2E94 ^ (v65 ^ 0x88822894) & (v64 << 8);
  v67 = ((v58 - 1086853441) ^ (2
                             * ((v66 << 16) & 0x1ACB0000 ^ v66 ^ ((v66 << 16) ^ 0x2E940000) & (((v65 ^ 0x12490694) << 8) & 0x1ACB0000 ^ 0x10C10000 ^ (((v65 ^ 0x12490694) << 8) ^ 0x4B2E0000) & (v65 ^ 0x12490694))))) >> 7;
  v68 = v58
      - (((v67 ^ 0xBF2243F) + 756972279) ^ ((v67 ^ 0xB19C58C6) - 1754266096) ^ ((v67 ^ 0xBBE2C061) - 1659986263))
      - 772829975;
  v69 = (v68 ^ 0xFB655142) & (2 * (v68 & 0xFB71556A)) ^ v68 & 0xFB71556A;
  v70 = ((2 * (v68 ^ 0xBF25F9D6)) ^ 0x88A95978) & (v68 ^ 0xBF25F9D6) ^ (2 * (v68 ^ 0xBF25F9D6)) & 0x4454ACBC;
  v71 = v70 ^ 0x4454A484;
  v72 = (v70 ^ 0x10083C) & (4 * v69) ^ v69;
  v73 = ((4 * v71) ^ LODWORD(STACK[0xA5C])) & v71 ^ (4 * v71) & 0x4454ACBC;
  v74 = (v73 ^ 0x50A0AC) & (16 * v72) ^ v72;
  v75 = ((16 * (v73 ^ 0x44040C0C)) ^ 0x454ACBC0) & (v73 ^ 0x44040C0C) ^ (16 * (v73 ^ 0x44040C0C)) & 0x4454ACB0;
  v76 = v74 ^ 0x4454ACBC ^ (v75 ^ LODWORD(STACK[0xA58])) & (v74 << 8);
  v77 = v68 ^ (2
             * ((v76 << 16) & 0x44540000 ^ v76 ^ ((v76 << 16) ^ 0x2CBC0000) & (((v75 ^ 0x14243C) << 8) & 0x44540000 ^ 0x500000 ^ (((v75 ^ 0x14243C) << 8) ^ 0x54AC0000) & (v75 ^ 0x14243C))));
  v78 = ((v77 ^ 0x255A43BD) + 342606342) ^ ((v77 ^ 0x67A8FF75) + 1452900046) ^ ((v77 ^ 0x3902B0DA) + 137572707);
  v79 = ((v78 - 1761734658) ^ 0x8BB2E4A6) & (2 * ((v78 - 1761734658) & 0xAB80F636)) ^ (v78 - 1761734658) & 0xAB80F636;
  v80 = ((2 * ((v78 - 1761734658) ^ 0xDDB2C8E2)) ^ 0xEC647DA8) & ((v78 - 1761734658) ^ 0xDDB2C8E2) ^ (2 * ((v78 - 1761734658) ^ 0xDDB2C8E2)) & 0x76323ED4;
  v81 = v80 ^ 0x12120254;
  v82 = (v80 ^ 0x64103A84) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ LODWORD(STACK[0xA60])) & v81 ^ (4 * v81) & 0x76323ED4;
  v84 = (v83 ^ 0x50003A44) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0x26320484)) ^ 0x6323ED40) & (v83 ^ 0x26320484) ^ (16 * (v83 ^ 0x26320484)) & 0x76323ED0;
  v86 = v85 ^ 0x14101294;
  v87 = v84 ^ 0x76323ED4 ^ (v85 ^ 0x62222C94) & (v84 << 8);
  v46 ^= 0x78ADA9C1u;
  v88 = v77 ^ 0xCECE7E47;
  v89 = v78
      + 1115620916
      + ((((v78 - 1761734658) ^ (2
                               * ((v87 << 16) & 0x76320000 ^ v87 ^ ((v87 << 16) ^ 0x3ED40000) & ((v86 << 8) & 0x76320000 ^ 0x44000000 ^ ((v86 << 8) ^ 0x323E0000) & v86)))) >> 13) ^ 0x15E24);
  v90 = v89 + (v89 >> 3);
  v91 = v90 + 1318234149 + ((v90 + 1318234149) >> 15) + ((v90 + 1318234149 + ((v90 + 1318234149) >> 15)) >> 1);
  v92 = v91 - 452590049 - ((v91 - 452590049) >> 12) - ((v91 - 452590049 - ((v91 - 452590049) >> 12)) >> 8);
  v93 = v92 - ((2 * v92) & 0x8C36E838) + 1176204316;
  v94 = ((2 * (v88 ^ v46 ^ v93)) ^ 0xB7E20335) & 0xD6164E48 ^ 0x9D98F4D8 ^ (-2
                                                                          - ((~(((2 * (v88 ^ v46 ^ v93)) ^ 0xB7E20335) & 0x1313F467) | 0x9F9990BA)
                                                                           + (((2 * (v88 ^ v46 ^ v93)) ^ 0xB7E20335) & 0x1313F467 | LODWORD(STACK[0xA64]))));
  v95 = LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x6890]);
  v96 = STACK[0x6700];
  v97 = LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x6700]);
  LODWORD(STACK[0x6A10]) = v95;
  v98 = LODWORD(STACK[0x68B0]) ^ v95;
  LODWORD(STACK[0x6A80]) = v15;
  v99 = v98 ^ v15 ^ (v56 - 319327649 - ((2 * v56) & 0xD9EEE4BE));
  LODWORD(STACK[0x6A20]) = v90;
  v100 = STACK[0x64F0];
  v101 = ((v97 ^ 0xCFCB30F0) - 1072352253 - 2 * ((v97 ^ 0xCFCB30F0) & 0x40153407 ^ v97 & 4)) ^ LODWORD(STACK[0x64F0]);
  v102 = LODWORD(STACK[0x63E0]) ^ v11 & (2 * v101);
  LODWORD(STACK[0x69E0]) = (STACK[0x6940] & 0x7363F76 ^ 0x1342734 | 0x5506D98C)
                         + -1426512270
                         - (STACK[0x6940] & 0x7363F76 ^ 0x1342734 | 0xAAF92672);
  LODWORD(STACK[0x6940]) = (v99 ^ v90 ^ 0xF84D4A63) - 2 * ((v99 ^ v90 ^ 0xF84D4A63) & 0x31BC353B ^ (v99 ^ v90) & 0x18);
  LODWORD(STACK[0x6900]) = LODWORD(STACK[0x6690]) - ((2 * LODWORD(STACK[0x6400])) & 0x18244C0E);
  v103 = STACK[0x6710];
  v104 = STACK[0x68D0];
  v105 = LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x6710]) ^ LODWORD(STACK[0x68D0]);
  v106 = v11 & (2 * LODWORD(STACK[0x6930])) ^ v101 ^ (v102 - 1293104855 - ((2 * v102) & 0x65D9969A) + 548) ^ v10 ^ v17 ^ v57 ^ v91 ^ 0x7E91ECD ^ v11 & (2 * (v57 ^ v17 ^ v91));
  v107 = (v106 - 808767248 - ((2 * v106) & 0x9F9661E0)) ^ v96;
  LODWORD(STACK[0x6A00]) = v107;
  LODWORD(STACK[0x69F0]) = (v107 - 1072352253 - ((2 * v107) & 0x802A6806)) ^ v100;
  v108 = (1574958825 - (v11 & (2 * v103) ^ 0x101A02C) + ((2 * (v11 & (2 * v103) ^ 0x101A02C)) & 0x100C)) ^ 0x5D9DFCC9;
  v109 = 33686018 * LODWORD(STACK[0x6628]);
  v110 = v109 & 0x243838C0 ^ 0x921C1C60;
  LODWORD(STACK[0x6A30]) = v104 ^ ((v11 & (2 * v105) ^ 0xC101820A)
                                 - 1708679444
                                 - ((2 * (v11 & (2 * v105) ^ 0xC101820A)) & 0xB4444)
                                 + 2055) & 0xC53FFFFE ^ (v108 - ((2 * v108) & 0x883B647C) + 2115876542) ^ LODWORD(STACK[0x63C8]) ^ v9 ^ v46 ^ v88 ^ v93 ^ (((2 * v94) & 0x94023DE0) - v94 - 1241587441);
  v111 = STACK[0x6658];
  v112 = STACK[0x6688];
  v113 = STACK[0x6850];
  v114 = STACK[0x6AB0];
  v115 = ((((v111 & v110) << v113) ^ ((v112 & v110) >> v114))
        - 2 * ((((v111 & v110) << v113) ^ ((v112 & v110) >> v114)) & 0x3F6CD83F ^ ((v112 & v110) >> v114) & 4)
        + 1064097851) ^ LODWORD(STACK[0x6430]);
  v116 = STACK[0x64E8];
  v117 = (33686018
        * (((v116 ^ LODWORD(STACK[0xA68])) - 1362129846) ^ ((v116 ^ 0x5C251034) - 591100719) ^ ((v116 ^ 0x2BC7037F)
                                                                                              - 1423534180))
        - 1369392134) & 0xF72397A4;
  LODWORD(STACK[0x68E0]) = v115 - ((2 * v115) & 0x99F29A2);
  v118 = STACK[0x6860];
  v119 = STACK[0x6660];
  v120 = STACK[0x6870];
  v121 = STACK[0x66B0];
  v122 = ((STACK[0x6660] & (v117 ^ 0x7B91CBD2)) >> LODWORD(STACK[0x66B0])) ^ (((v117 ^ 0x7B91CBD2) & STACK[0x6860]) << LODWORD(STACK[0x6870]));
  v123 = (v122 - ((2 * v122) & 0x4CDB6582) - 1502760255) ^ LODWORD(STACK[0x69D0]);
  v124 = (((v123 ^ 0x6FAEF139) & 0x98F2FB72) - ((2 * (v123 ^ 0x6FAEF139)) & 0x30C5B0C4) + 980147311) ^ (v123 ^ 0x6FAEF139) & 0x98B2FB72;
  v125 = ((v124 ^ 0x7C2F30C6) - 10835216) ^ ((v124 ^ 0x91BB148A) + 315526820) ^ ((v124 ^ 0xD7FFF823) + 1418355211);
  v126 = v125 - 1355291683;
  v127 = (v126 ^ 0xC7ADD59C) & (2 * (v126 & 0x97A9D5DC)) ^ v126 & 0x97A9D5DC;
  v128 = ((2 * (v126 ^ 0xCBFEDE8C)) ^ 0xB8AE16A0) & (v126 ^ 0xCBFEDE8C) ^ (2 * (v126 ^ 0xCBFEDE8C)) & 0x5C570B50;
  v129 = v128 ^ 0x44510950;
  v130 = (v128 ^ 0x18160200) & (4 * v127) ^ v127;
  v131 = ((4 * v129) ^ 0x715C2D40) & v129 ^ (4 * v129) & 0x5C570B50;
  v132 = v130 ^ 0x5C570B50 ^ (v131 ^ 0x50540940) & (16 * v130);
  v133 = (16 * (v131 ^ 0xC030210)) & 0x5C570B50 ^ 0x18070A50 ^ ((16 * (v131 ^ 0xC030210)) ^ 0xC570B500) & (v131 ^ 0xC030210);
  v134 = (v132 << 8) & 0x5C570B00 ^ v132 ^ ((v132 << 8) ^ 0x570B5000) & v133;
  v135 = (v125 - 1355291683) ^ (2
                              * ((v134 << 16) & 0x5C570000 ^ v134 ^ ((v134 << 16) ^ 0xB500000) & ((v133 << 8) & 0x5C570000 ^ 0x8540000 ^ ((v133 << 8) ^ 0x570B0000) & v133)));
  v136 = v135 & 0xA879DE8B ^ 0xA8504600 ^ (v135 ^ 0x97A1C37C) & (LODWORD(STACK[0x6500]) ^ 0x51F68AAD);
  v137 = 561279083 - v125;
  if (((2 * v136) & 0xD7683872) - v136 != LODWORD(STACK[0xA6C]))
    v126 = v137;
  v138 = (((LODWORD(STACK[0x6500]) ^ 0x5025BE5F) - 733482710) ^ ((LODWORD(STACK[0x6500]) ^ 0x84BD978F) + 14670074) ^ ((LODWORD(STACK[0x6500]) ^ 0x2D177DF6) - 1451937151))
       + 1979456162
       + v126
       + 475;
  LODWORD(STACK[0x63E0]) = v138;
  v139 = (v138 ^ 0x2BD65CAF) & (2 * (v138 & 0xA3C09E0E)) ^ v138 & 0xA3C09E0E;
  v140 = ((2 * (v138 ^ 0x6DD774BB)) ^ 0x9C2FD56A) & (v138 ^ 0x6DD774BB) ^ (2 * (v138 ^ 0x6DD774BB)) & 0xCE17EAB4;
  v141 = v140 ^ 0x42102A95;
  v142 = (v140 ^ 0x8C06C020) & (4 * v139) ^ v139;
  v143 = ((4 * v141) ^ LODWORD(STACK[0xA70])) & v141 ^ (4 * v141) & 0xCE17EAB4;
  v144 = (v143 ^ 0x817AA80) & (16 * v142) ^ v142;
  v145 = ((16 * (v143 ^ LODWORD(STACK[0xA74]))) ^ 0xE17EAB50) & (v143 ^ LODWORD(STACK[0xA74])) ^ (16
                                                                                                * (v143 ^ LODWORD(STACK[0xA74]))) & 0xCE17EAB0;
  v146 = v144 ^ 0xCE17EAB5 ^ (v145 ^ 0xC016AA00) & (v144 << 8);
  LODWORD(STACK[0x68C0]) = (v146 << 16) & 0x4E170000 ^ v146 ^ ((v146 << 16) ^ 0x6AB50000) & (((v145 ^ 0xE0140A5) << 8) & 0x4E170000 ^ 0x48150000 ^ (((v145 ^ 0xE0140A5) << 8) ^ 0x17EA0000) & (v145 ^ 0xE0140A5));
  LODWORD(STACK[0x6690]) = (v123 & 0xFFBFFFFF) - ((2 * v123) & 0xB6013DE8);
  LODWORD(STACK[0x6628]) = (33686018
                          * (((v116 ^ 0x5ABCCC48) - 631416659) ^ ((v116 ^ 0x7EAAB05F) - 28629828) ^ ((v116 ^ 0x7DDA77F1) - 46406890))
                          - 1369392134) & 0x847B89D6;
  LODWORD(STACK[0x6500]) = ((v116 ^ 0x12D0263B) - 1842236704) ^ ((v116 ^ 0x5CEFF466) - 603037565) ^ ((v116 ^ 0x17F3D9BB) - 1760408224);
  v147 = (33686018
        * (((v116 ^ 0xF4BEFAC7) + 1952411172) ^ ((v116 ^ 0x370532E0) - 1209752059) ^ ((v116 ^ 0x9A77C3C1) + 446060326))
        - 1369392134) & 0xD0B2B3AC ^ 0x685959D6;
  v148 = v109 & 0x2006EC4 ^ 0x81003762;
  LODWORD(STACK[0x63D8]) = ((v111 & v147) << v120) + ((v119 & v147) >> v121);
  LODWORD(STACK[0x63B0]) = ((v116 ^ 0xEFA09B7) - 1910792876) ^ ((v116 ^ 0x4592D6E9) - 982302194) ^ ((v116 ^ 0x12A4D4B8)
                                                                                                  - 1840955299);
  LODWORD(STACK[0x63D0]) = ((v119 & (v109 & 0x79F2A53A ^ 0xBCF9529D)) >> v121) | ((v118 & (v109 & 0x79F2A53A ^ 0xBCF9529D)) << v113);
  v149 = ((v116 ^ 0xDEA1A1EB) + 507524368) ^ ((v116 ^ 0x4488E572) + 74019223) ^ ((v116 ^ LODWORD(STACK[0xA80]))
                                                                               + 50650012);
  LODWORD(STACK[0x64F0]) = ((v112 & (v109 & 0x6BC12810 ^ 0xB5E09408)) >> v121)
                         + ((v118 & (v109 & 0x6BC12810 ^ 0xB5E09408)) << v120);
  LODWORD(STACK[0x6388]) = ((v116 ^ 0x4B9D2904) - 881017375) ^ ((v116 ^ 0xC21C2B84) + 1123925857) ^ ((v116 ^ 0xD04D0966) + 1353489795);
  LODWORD(STACK[0x6380]) = ((v116 ^ 0x7ED6BCC4) - 29939679) ^ ((v116 ^ 0xFF30DBD0) + 2144423733) ^ ((v116 ^ 0xD82A6CF2)
                                                                                                  + 1489762327);
  LODWORD(STACK[0x6378]) = ((v116 ^ 0xC2856B0) - 1932934571) ^ ((v116 ^ 0xE350BF1F) + 1672555516) ^ ((v116 ^ 0xB6B4E249) + 911570606);
  LODWORD(STACK[0x6370]) = ((v116 ^ 0x23C03A03) + 589410024) ^ ((v116 ^ 0x2562419) + 45592830) ^ ((v116 ^ 0x785A15FC)
                                                                                                + 2025554201);
  LODWORD(STACK[0x6368]) = ((v116 ^ 0x373C4AF9) + 400416286) ^ ((v116 ^ 0x8FEAB79A) + 252388223) ^ ((v116 ^ 0x11AF685)
                                                                                                  + 33251938);
  LODWORD(STACK[0x6360]) = ((v116 ^ 0x7E685A9) + 117903694) ^ ((v116 ^ 0x2340A6F5) + 597766674) ^ ((v116 ^ LODWORD(STACK[0xA88]))
                                                                                                 + 1032567903);
  v150 = ((v116 ^ 0x1C465F55) + 212323250) ^ ((v116 ^ 0xD98050F3) + 157402136) ^ ((v116 ^ 0xC0A0440) + 216764581);
  v151 = ((v116 ^ LODWORD(STACK[0xA90])) - 1933308234) ^ ((v116 ^ 0x79DF24FC) - 113332199) ^ ((v116 ^ 0x2C36B54B)
                                                                                            - 1395187280);
  v152 = (((v112 & (v109 & 0x42B301BE ^ 0x215980DFu)) >> v121) ^ LODWORD(STACK[0xA94]))
       + (((v118 & (v109 & 0x42B301BE ^ 0x215980DF)) << v113) ^ 0x37FB7F6F)
       + ((2 * ((v112 & (v109 & 0x42B301BE ^ 0x215980DFu)) >> v121)) & 0xDD853BEC)
       + ((2 * ((v118 & (v109 & 0x42B301BE ^ 0x215980DF)) << v113)) & 0x6FF6FEDE)
       + 926803478;
  v153 = (v152 ^ 0x2243F811) & (2 * (v152 & 0xA203FC85)) ^ v152 & 0xA203FC85;
  v154 = STACK[0xA98];
  LODWORD(STACK[0x63C8]) = v152;
  v155 = ((2 * (v152 ^ v154)) ^ 0x80865B3C) & (v152 ^ v154) ^ (2 * (v152 ^ v154)) & 0xC0432D9E;
  v156 = (v155 ^ 0xC042009E) & (4 * v153) ^ v153;
  v157 = ((4 * (v155 ^ 0x40412482)) ^ 0x10CB678) & (v155 ^ 0x40412482) ^ (4 * (v155 ^ 0x40412482)) & 0xC0432D9C;
  v158 = (v157 ^ 0x2410) & (16 * v156) ^ v156;
  v159 = ((16 * (v157 ^ LODWORD(STACK[0xA9C]))) ^ 0x432D9E0) & (v157 ^ LODWORD(STACK[0xA9C])) ^ (16
                                                                                               * (v157 ^ LODWORD(STACK[0xA9C]))) & 0xC0432D90;
  v160 = v158 ^ 0xC0432D9E ^ (v159 ^ 0x2091E) & (v158 << 8);
  LODWORD(STACK[0x6108]) = ((v160 << 16) ^ 0x2D9E0000) & (((v159 ^ 0xC041241E) << 8) & 0xC0430000 ^ 0x420000 ^ (((v159 ^ 0xC041241E) << 8) ^ 0x432D0000) & (v159 ^ 0xC041241E)) ^ v160 ^ ((v160 << 16) & 0x40430000 | 0x10A);
  v161 = (33686018 * v151 - 1369392134) & 0xDC9DE204 ^ 0xEE4EF102;
  v162 = ((v111 & v161) << v120) - ((2 * ((v111 & v161) << v120)) & 0x7FFB2C04) - 1073900030;
  LODWORD(STACK[0x6128]) = v162;
  LODWORD(STACK[0x6120]) = (v162 ^ 0x400269FD) & ((((v119 & v161) >> v114)
                                                 - ((2 * ((v119 & v161) >> v114)) & 0x34235174)
                                                 - 1710118726) ^ 0x5727EA28);
  v163 = ((v116 ^ 0x38A03C73) + 943827096) ^ ((v116 ^ LODWORD(STACK[0xAA0])) + 967202947) ^ ((v116 ^ 0x182BFBF3)
                                                                                           + 415919896);
  v164 = STACK[0x6600];
  v165 = (LODWORD(STACK[0x6600]) ^ 0x7CE860A1) & STACK[0x64F8] ^ STACK[0x6630] & 0xFEB963AE;
  v166 = LODWORD(STACK[0x6630]) ^ (2
                                 * ((v165 & 0x6BEF0727 ^ 0x4B6F0707)
                                  + (v165 ^ 0x249020A8)
                                  - ((v165 ^ 0x249020A8) & 0x6BEF0727))) ^ 0x97947F0C;
  LODWORD(STACK[0x6400]) = ((v119 & v166) >> v121) + ((v166 & v118) << v113);
  LODWORD(STACK[0x6A50]) = LODWORD(STACK[0x63C0]) ^ 0x5F3701B3 ^ v164;
  LODWORD(STACK[0x6630]) = ((LODWORD(STACK[0x69E0]) | 1) ^ 0xAFABA56E) - 1;
  v167 = (LODWORD(STACK[0x6940]) - 1313065693) ^ LODWORD(STACK[0x68B0]);
  LODWORD(STACK[0x6940]) = (4 * v167) & 0x2086044;
  LODWORD(STACK[0x6048]) = (v11 & (2 * v167)) - 1313065693;
  LODWORD(STACK[0x6038]) = LODWORD(STACK[0x6900]) - 1296729692;
  LODWORD(STACK[0x64F8]) = LODWORD(STACK[0x68E0]) + 80712913;
  LODWORD(STACK[0x6118]) = v109 & 0xB5D8B836 ^ 0x5AEC5C1B;
  LODWORD(STACK[0x63C0]) = 2 * LODWORD(STACK[0x68C0]);
  LODWORD(STACK[0x63B8]) = LODWORD(STACK[0x6690]) + 1530961652;
  v168 = LODWORD(STACK[0x6628]) ^ 0xC23DC4EB;
  LODWORD(STACK[0x6158]) = v168;
  LODWORD(STACK[0x6170]) = (v168 & v112) >> v114;
  v169 = v109 & 0x205DC878 ^ 0x902EE43C;
  LODWORD(STACK[0x68E0]) = v169;
  LODWORD(STACK[0x68C0]) = (v111 & v169) << v113;
  v170 = (33686018 * LODWORD(STACK[0x6500]) - 1369392134) & 0x915D9870 ^ 0x48AECC38;
  v171 = v109 & 0xE23EA5C8 ^ 0x711F52E4;
  LODWORD(STACK[0x6358]) = v112 & v171;
  LODWORD(STACK[0x6350]) = (v118 & v171) << v113;
  LODWORD(STACK[0x69E0]) = v148;
  LODWORD(STACK[0x6628]) = (v118 & v148) << v113;
  v172 = (33686018
        * (((v116 ^ 0x9E12BB24) + 519253953) ^ ((v116 ^ 0xA45F0BA1) + 616472390) ^ ((v116 ^ 0x6381BB63) + 1667248008))
        + 778091514) & 0x723F2FEA ^ 0x391F97F5;
  v173 = v109 & 0xE3FA49EE ^ 0xF1FD24F7;
  LODWORD(STACK[0x6150]) = v119 & v173;
  LODWORD(STACK[0x6148]) = (v111 & v173) << v113;
  v174 = (33686018 * LODWORD(STACK[0x63B0]) - 1369392134) & 0x9D5E9A5A ^ 0x4EAF4D2D;
  LODWORD(STACK[0x6140]) = v174;
  LODWORD(STACK[0x6138]) = (v174 & v112) >> v114;
  v175 = v109 & 0x949CD81C ^ 0xCA4E6C0E;
  v176 = (33686018
        * (((v116 ^ 0x3A4417D0) + 983925557) ^ ((v116 ^ 0x835449C5) + 62250274) ^ ((v116 ^ 0x20DC55F3) + 540918040))
        + 778091514) & STACK[0xA78] ^ 0x12036DAD;
  LODWORD(STACK[0x6348]) = v176 & v112;
  LODWORD(STACK[0x6338]) = (v176 & v118) << v113;
  v177 = (33686018
        * (((v116 ^ 0x9F14DEDD) + 536169018) ^ ((v116 ^ 0x1D1E2FC6) + 503298851) ^ ((v116 ^ 0x5BC6FAFD) + 1529310746))
        + 778091514) & STACK[0xA7C] ^ 0xA313D0DF;
  LODWORD(STACK[0x6900]) = v177;
  LODWORD(STACK[0x6330]) = (v177 & v112) >> v114;
  v178 = (33686018 * v149 + 241220602) & 0x1AF6659A ^ 0xD7B32CD;
  v179 = v109 & 0x480F4EB0 ^ 0xA407A758;
  LODWORD(STACK[0x6328]) = v178 & v118;
  LODWORD(STACK[0x6320]) = v119 & v178;
  LODWORD(STACK[0x6130]) = v179;
  LODWORD(STACK[0x6110]) = (v112 & v179) >> v114;
  v180 = (33686018
        * (((v116 ^ 0xB0C7B8C2) + 807808039) ^ ((v116 ^ 0x372A3775) - 1211391086) ^ ((v116 ^ 0xDE218451) + 1589645494))
        - 1369392134) & 0xDD17A300 ^ 0x6E8BD180;
  LODWORD(STACK[0x6300]) = v119 & v180;
  LODWORD(STACK[0x62F8]) = (v111 & v180) << v113;
  v181 = v109 & 0x849C125A ^ 0xC24E092D;
  LODWORD(STACK[0x6340]) = v181;
  LODWORD(STACK[0x62F0]) = (v119 & v181) >> v114;
  v182 = (33686018
        * (((v116 ^ 0xE25FE5CE) + 582906155) ^ ((v116 ^ 0xE1040696) + 568693363) ^ ((v116 ^ 0x1A97E8BE) + 443972699))
        + 778091514) & 0x2AEB620E ^ 0x1575B107;
  LODWORD(STACK[0x62E8]) = v182 & v118;
  LODWORD(STACK[0x6060]) = (v182 & v112) >> v121;
  v183 = (33686018 * LODWORD(STACK[0x6388]) - 1369392134) & 0xB95256A2 ^ 0xDCA92B51;
  LODWORD(STACK[0x6050]) = v111 & v183;
  LODWORD(STACK[0x6040]) = (v183 & v112) >> v121;
  v184 = v109 & 0xD147B26A ^ 0xE8A3D935;
  v185 = v109 & 0xF61C1298 ^ 0xFB0E094C;
  LODWORD(STACK[0x6690]) = (v118 & v185) << v120;
  LODWORD(STACK[0x6388]) = (v119 & v185) >> v114;
  v186 = (33686018 * LODWORD(STACK[0x6380]) - 1369392134) & 0xE26588C2 ^ 0xF132C461;
  LODWORD(STACK[0x60F8]) = v111 & v186;
  LODWORD(STACK[0x60F0]) = v186 & v112;
  v187 = v109 & 0x5F562670 ^ 0x2FAB1338;
  v188 = (33686018 * LODWORD(STACK[0x6378]) - 1369392134) & 0xC4341D88 ^ 0xE21A0EC4;
  LODWORD(STACK[0x6380]) = (v111 & v187) << v113;
  LODWORD(STACK[0x6378]) = (v119 & v187) >> v114;
  v189 = (33686018 * LODWORD(STACK[0x6370]) + 778091514) & 0x48DC927C ^ LODWORD(STACK[0xA84]);
  LODWORD(STACK[0x6030]) = v119 & v189;
  LODWORD(STACK[0x6028]) = (v189 & v118) << v113;
  v190 = v109 & 0x348D234A ^ 0x1A4691A5;
  v191 = v109 & 0x90E9491C ^ 0xC874A48E;
  LODWORD(STACK[0x6318]) = v190;
  LODWORD(STACK[0x6020]) = (v112 & v190) >> v114;
  v192 = (33686018 * LODWORD(STACK[0x6368]) + 241220602) & 0x1E937ABA;
  LODWORD(STACK[0x6310]) = v191;
  LODWORD(STACK[0x6018]) = (v111 & v191) << v120;
  v192 ^= 0x8F49BD5D;
  v193 = (33686018 * LODWORD(STACK[0x6360]) + 778091514) & 0x3C943F32;
  LODWORD(STACK[0x60C8]) = v192 & v118;
  v194 = v193 ^ 0x9E4A1F99;
  LODWORD(STACK[0x60B0]) = (v119 & v192) >> v121;
  v195 = v109 & 0x8EE4F48 ^ 0x47727A4;
  LODWORD(STACK[0x6010]) = v111 & v195;
  LODWORD(STACK[0x6008]) = (v119 & v195) >> v114;
  v196 = v109 & 0xC15A87CE ^ 0xE0AD43E7;
  v197 = (33686018 * v150 + 241220602) & STACK[0xA8C] ^ 0x87B6EB4A;
  LODWORD(STACK[0x5FF8]) = v197 & v118;
  LODWORD(STACK[0x6000]) = (v197 & v112) >> v121;
  v198 = (33686018 * v163 + 778091514) & 0x2F7ED010 ^ 0x97BF6808;
  v199 = v198 & v118;
  v200 = (v198 & v112) >> v114;
  LODWORD(STACK[0x5FB8]) = (2 * v200) & 0xEFF883C;
  LODWORD(STACK[0x6370]) = v200 + 125813790;
  LODWORD(STACK[0x5FD0]) = (2 * (v199 << v113)) & 0x218AAA30;
  LODWORD(STACK[0x5FE0]) = (v199 << v113) - 1866115811;
  LODWORD(STACK[0x6670]) = v109;
  v201 = v109 & 0xDCDD276A ^ LODWORD(STACK[0xAA4]);
  v202 = (v111 & v201) << v120;
  LODWORD(STACK[0x5FB0]) = (2 * v202) & 0x7866E786;
  LODWORD(STACK[0x5FC8]) = v202 - 1137478717;
  v203 = (v119 & v201) >> v121;
  LODWORD(STACK[0x5FD8]) = (2 * v203) & 0x134687EE;
  LODWORD(STACK[0x5FC0]) = v203 + 161694711;
  v204 = (uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6A70])) - 8);
  LODWORD(STACK[0x616C]) = v170;
  LODWORD(STACK[0x6068]) = v170 & v112;
  LODWORD(STACK[0x6160]) = v172;
  LODWORD(STACK[0x6070]) = v119 & v172;
  LODWORD(STACK[0x6368]) = v175;
  LODWORD(STACK[0x6360]) = v111 & v175;
  LODWORD(STACK[0x6A70]) = v184;
  LODWORD(STACK[0x5FE8]) = v118 & v184;
  LODWORD(STACK[0x60E8]) = v188;
  LODWORD(STACK[0x6078]) = v188 & v118;
  LODWORD(STACK[0x6308]) = v194;
  LODWORD(STACK[0x5FF0]) = v194 & v118;
  LODWORD(STACK[0x6088]) = v196;
  LODWORD(STACK[0x6080]) = v119 & v196;
  LODWORD(STACK[0x63B0]) = LODWORD(STACK[0x6428]) ^ LODWORD(STACK[0x6430]);
  return v204(LODWORD(STACK[0x63A8]));
}

uint64_t sub_100CCC34C@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  int v16;
  int v17;
  int v18;
  char v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;

  v18 = STACK[0x6AC0];
  v19 = STACK[0x6870];
  v20 = *((_DWORD *)*(&off_1015B46D0 + v18 - 14957) + ((v18 + 423) ^ v9 ^ 0x43EC) - 2) + 1207852098;
  v21 = v20 ^ (v20 >> 5) ^ (v20 >> 3);
  v22 = v21 ^ (2
             * ((((v21 ^ 0x656A7434) & a3 ^ v21 & 0x530D7BB6) & a4 ^ v6)
              + ((v21 ^ 0x656A7434) & a3 ^ v21 & 0x530D7BB6 ^ 0x40097822)
              - (((v21 ^ 0x656A7434) & a3 ^ v21 & 0x530D7BB6 ^ 0x40097822) & a4))) ^ 0x42237C80;
  v23 = ((v22 & STACK[0x6860]) << LODWORD(STACK[0x6850]))
      - ((2 * ((v22 & STACK[0x6860]) << LODWORD(STACK[0x6850]))) & 0x6EE7C216)
      - 1217142517;
  v24 = ((((v22 & v13) >> v15) + 2138661982 - ((2 * ((v22 & v13) >> v15)) & 0xFEF2C8BC)) ^ 0x2B3803BB) & (v23 ^ 0x488C1EF4) ^ v23 & 0xABBE981A;
  v25 = 4
      * ((v12 ^ LOBYTE(STACK[0x69D0]) ^ ((v9 ^ (2 * (v9 & STACK[0x6698]))) << v19) ^ ((v17 & (v9 ^ (2 * (v9 & STACK[0x6698])))) >> v15)) ^ 0x6Eu);
  *(_DWORD *)(STACK[0xD898] + v25) = a2 ^ a1 ^ 0x3690DDF5 ^ ((v24 & 0x1975BA4E ^ 0x1165B24F) + (v24 & 0xE68A45B1) - 1);
  v26 = *((unsigned __int16 *)*(&off_1015B46D0 + v18 - 16758) + (v9 ^ 0x12) - 4) ^ (unsigned __int16)((v9 ^ 0x35) - 7679);
  *(_DWORD *)(a5 + v25) = v10 ^ v11 ^ 0x6FB7839A ^ (v26 - ((2 * v26) & 0x149C6) - 1243175709);
  v27 = *((_DWORD *)*(&off_1015B46D0 + (v18 ^ 0x4BB6)) + (v9 ^ 0xC1));
  v28 = v27 & 0x894B9FE7 ^ 0x81429883 ^ (v27 ^ 0x813E28B4) & v8;
  v29 = v27 ^ 0xB841E58 ^ (2 * ((v28 | 0x45158B51) - (v28 | 0x3AEA74AE)) + 1976887644);
  v30 = ((v29 & v14) >> LODWORD(STACK[0x6AB0])) ^ v11 ^ ((v29 & v16) << v19);
  *(_DWORD *)(STACK[0xD868] + v25) = v10 ^ v7 ^ (v30 - ((2 * v30) & 0xC4A5E7BC) + 1649603550);
  v31 = *((unsigned __int16 *)*(&off_1015B46D0 + (v18 ^ 0x4BCD)) + (v9 ^ 0x51) - 2);
  *(_DWORD *)(a6 + v25) = a2 ^ a1 ^ 0xB882556C ^ (unsigned __int16)(((v31 >> 2) | ((_WORD)v31 << 14))
                                                                  - ((*((_WORD *)*(&off_1015B46D0 + (v18 ^ 0x4BCD))
                                                                      + (v9 ^ 0x51)
                                                                      - 2) >> 1) & 0x1F04)
                                                                  + 3970);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1011 * (v9 != 255)) ^ v18)) - 8))();
}

uint64_t sub_100CCC6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  char v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  char v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  unsigned int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  int v243;
  int v244;
  int v245;
  unsigned int v246;
  unint64_t v247;
  unint64_t v248;
  int v249;
  unint64_t v250;
  unint64_t v251;
  int v252;
  unint64_t v253;
  int v254;
  int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  int v260;
  int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  uint64_t v322;
  unint64_t v323;

  LODWORD(STACK[0x63A8]) = v7;
  v13 = LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x6038]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x63A0]) ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6A20]) ^ (LODWORD(STACK[0x6048]) - LODWORD(STACK[0x6940]));
  LODWORD(STACK[0x63A0]) = LODWORD(STACK[0x6388]) + LODWORD(STACK[0x6690]);
  v14 = LODWORD(STACK[0x6370]) - LODWORD(STACK[0x5FB8]);
  v15 = LODWORD(STACK[0x5FE0]) - LODWORD(STACK[0x5FD0]);
  v16 = LODWORD(STACK[0x5FC8]) - LODWORD(STACK[0x5FB0]);
  v17 = LODWORD(STACK[0x5FC0]) - LODWORD(STACK[0x5FD8]);
  LODWORD(STACK[0x63F8]) = LODWORD(STACK[0x6638]) ^ v6;
  LODWORD(STACK[0x6398]) = v15 ^ v14;
  LODWORD(STACK[0x6390]) = v16 ^ v17;
  LODWORD(STACK[0x6388]) = LODWORD(STACK[0x6380]) ^ LODWORD(STACK[0x6378]);
  v18 = LODWORD(STACK[0x6630]) ^ STACK[0x6A00] & 0x7363F77;
  LODWORD(STACK[0x6500]) = v11;
  v19 = (v11 - 1846695030) & 0x6E1259FE;
  STACK[0x6690] = v19;
  v20 = v18 ^ v19 ^ 0xFDAB12C2 | STACK[0x69F0] & 0xF8C9C088;
  LODWORD(STACK[0x6940]) = v20;
  v21 = v9;
  LODWORD(STACK[0x6380]) = LODWORD(STACK[0x68C0]) + ((v9 & STACK[0x68E0]) >> a6);
  LODWORD(STACK[0x6378]) = LODWORD(STACK[0x6350]) + (LODWORD(STACK[0x6358]) >> a6);
  v22 = v8;
  LODWORD(STACK[0x6370]) = LODWORD(STACK[0x6628]) + ((v8 & STACK[0x69E0]) >> a6);
  v23 = STACK[0x6870];
  v24 = v10;
  LODWORD(STACK[0x6368]) = (LODWORD(STACK[0x6360]) << LODWORD(STACK[0x6870])) | ((v9 & STACK[0x6368]) >> v10);
  LODWORD(STACK[0x6360]) = LODWORD(STACK[0x6338]) | (LODWORD(STACK[0x6348]) >> a6);
  v25 = v12;
  LODWORD(STACK[0x6358]) = ((v12 & STACK[0x6900]) << v23) + LODWORD(STACK[0x6330]);
  v26 = STACK[0x6850];
  LODWORD(STACK[0x6350]) = (LODWORD(STACK[0x6320]) >> v10) + (LODWORD(STACK[0x6328]) << LODWORD(STACK[0x6850]));
  LODWORD(STACK[0x6348]) = LODWORD(STACK[0x62F8]) ^ (LODWORD(STACK[0x6300]) >> a6);
  LODWORD(STACK[0x6340]) = ((v25 & STACK[0x6340]) << v23) + LODWORD(STACK[0x62F0]);
  LODWORD(STACK[0x6338]) = (LODWORD(STACK[0x62E8]) << v26) | LODWORD(STACK[0x6060]);
  LODWORD(STACK[0x6330]) = (LODWORD(STACK[0x6050]) << v26) + LODWORD(STACK[0x6040]);
  LODWORD(STACK[0x6328]) = ((v9 & STACK[0x6A70]) >> a6) | (LODWORD(STACK[0x5FE8]) << v23);
  LODWORD(STACK[0x6320]) = (LODWORD(STACK[0x6030]) >> v10) + LODWORD(STACK[0x6028]);
  LODWORD(STACK[0x6318]) = ((v25 & STACK[0x6318]) << v23) + LODWORD(STACK[0x6020]);
  LODWORD(STACK[0x6310]) = LODWORD(STACK[0x6018]) + ((v22 & STACK[0x6310]) >> a6);
  LODWORD(STACK[0x6308]) = (LODWORD(STACK[0x5FF0]) << v26) | ((STACK[0x6308] & v22) >> v10);
  LODWORD(STACK[0x6300]) = (LODWORD(STACK[0x6010]) << v23) | LODWORD(STACK[0x6008]);
  LODWORD(STACK[0x62F8]) = LODWORD(STACK[0x6000]) + (LODWORD(STACK[0x5FF8]) << v23);
  v27 = STACK[0x6260];
  v28 = STACK[0x6240];
  v29 = STACK[0x6178];
  v30 = STACK[0x6180];
  v31 = LODWORD(STACK[0x6750]) ^ LODWORD(STACK[0x6740]) ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x6260]) ^ LODWORD(STACK[0x6240]) ^ LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6178]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6180]) ^ LODWORD(STACK[0x6950]) ^ 0x43589C2C ^ v13;
  v32 = STACK[0x6298];
  v33 = STACK[0x6280];
  v34 = STACK[0x6770];
  v35 = STACK[0x6278];
  LODWORD(v19) = LODWORD(STACK[0x6298]) ^ LODWORD(STACK[0x6280]) ^ LODWORD(STACK[0x6770]) ^ LODWORD(STACK[0x6278]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x64A0]) ^ LODWORD(STACK[0x64B8]);
  v36 = STACK[0x6250];
  v37 = STACK[0x6248];
  v38 = LODWORD(STACK[0x64C0]) ^ LODWORD(STACK[0x6250]) ^ LODWORD(STACK[0x6248]) ^ LODWORD(STACK[0x6910]);
  v39 = STACK[0x6A30];
  LODWORD(v19) = LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x66D8]) ^ ((v19 ^ v38 ^ v39 ^ 0x4E91A852)
                                                                  - ((2 * (v19 ^ v38 ^ v39 ^ 0x4E91A852)) & 0x9699CFCE)
                                                                  + 1263331303);
  LODWORD(v19) = LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x66D0]) ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x64A8]) ^ LODWORD(STACK[0x68B0]) ^ v20 ^ (v19 - 1313065693 - ((2 * v19) & 0x63786A46));
  v40 = LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x66E0]) ^ LODWORD(STACK[0x6710]) ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x64D0]) ^ (LODWORD(STACK[0x64B0]) - ((2 * LODWORD(STACK[0x64B0])) & 0xF70DFFAE) + 2072444887) ^ (v31 - (STACK[0xAB4] & (2 * v31)) + 375515725);
  v41 = STACK[0x6600];
  v42 = v40 ^ 0xA53E2314 ^ (2
                          * ((v40 ^ 0x6FA978CB) & (LODWORD(STACK[0x6600]) ^ 0x7871900F) ^ (v40 ^ 0xA53E2314) & 0x7A209300)) ^ 0x5E977DDF;
  v43 = STACK[0x6860];
  LODWORD(STACK[0x62F0]) = ((v42 & STACK[0x6860]) << v26) ^ ((v42 & v9) >> LODWORD(STACK[0x6AB0]));
  v44 = STACK[0x6650];
  v45 = v19 ^ 0x94E33E9D ^ (2
                          * (((v19 ^ 0x9464CA17) & (v44 ^ 0x98869253) ^ 0x8A000C11 ^ (v19 ^ 0xBF66A8C2) & 0x8A048E3B)
                           + 4453445
                           - ((2
                             * ((v19 ^ 0x9464CA17) & (v44 ^ 0x98869253) ^ 0x8A000C11 ^ (v19 ^ 0xBF66A8C2) & 0x8A048E3B)) & 0x87E88A)));
  LODWORD(STACK[0x62E8]) = ((v45 & v25) << v23) + ((v45 & v22) >> v24);
  v46 = STACK[0x6698];
  v47 = v29 ^ (2
             * ((v29 & v46 & 0x67BCF9BB ^ 0x67AC69BB) + (v29 & v46 ^ 0x519244) - ((v29 & v46 ^ 0x519244) & 0x67BCF9BB)));
  v48 = STACK[0x6258];
  v49 = STACK[0x6408];
  LODWORD(STACK[0x68D0]) = ((v21 & (v47 ^ 0xCFDAD7FE)) >> v24) ^ (((v47 ^ 0xCFDAD7FE) & v43) << v26);
  LODWORD(v19) = v48 ^ 0xC7E123D4 ^ (2 * ((v49 & v48 & 0x15C33A95 ^ 0x1C01080) + (v49 & v48 & 0x6A3CC56A ^ 0x6230816B))
                                   - 2);
  LODWORD(STACK[0x6060]) = ((v19 & v22) >> LODWORD(STACK[0x6AB0])) ^ ((v25 & v19) << v23);
  LODWORD(v19) = v27 ^ LODWORD(STACK[0xAB8]) ^ (2
                                              * ((v46 & v27 ^ 0xFA3A4270 | 0xEBECED3)
                                               - (v46 & v27 ^ 0xFA3A4270 | 0x7141312C))
                                              - 494771624);
  LODWORD(v19) = ((v25 & v19) << v23) | ((v22 & v19) >> v24);
  v50 = v19 - ((2 * v19) & 0x3B205CD0);
  LODWORD(v19) = LODWORD(STACK[0x6268]) ^ 0x394383D8 ^ (2
                                                      * ((v41 ^ 0x7F554629) & (LODWORD(STACK[0x6268]) ^ 0x6B4381D8) ^ STACK[0x6268] & 0x7D044526));
  v51 = STACK[0x62E0];
  v52 = v37 ^ (2
             * ((v37 & v46 & 0x2A7D66DB ^ 0x2A3D6653)
              + (v37 & v46 ^ 0x1140888C)
              - ((v37 & v46 ^ 0x1140888C) & 0x2A7D66DB))) ^ 0x767BDCAE;
  v53 = ((v52 & v43) << v26) | ((v52 & v22) >> v24);
  LODWORD(STACK[0x68E0]) = v53 - ((2 * v53) & 0x3B205CD0);
  v54 = v51 ^ 0xBA1891A1 ^ (2 * ((v41 ^ 0x13FF3AAA) & (v51 ^ 0x1A08F0E3) ^ v51 & 0x11AE39A5));
  LODWORD(v19) = ((v21 & v19) >> LODWORD(STACK[0x6AB0])) + ((v19 & v43) << v26);
  LODWORD(STACK[0x6050]) = v19 - ((2 * v19) & 0xCDF9DEF2);
  LODWORD(v19) = ((v25 & v54) << v23) + ((v21 & v54) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6048]) = v19 - ((2 * v19) & 0xCDF9DEF2);
  LODWORD(v19) = v39 & 0x5C7E85CD ^ 0x40648441 ^ (v39 ^ 0x542F893E) & (v41 ^ 0xDE2F86C2);
  LODWORD(v19) = v39 ^ 0xD253A290 ^ (2 * (v19 + 1467224024 - ((2 * v19) & 0x2EE82134)) + 388);
  v55 = LODWORD(STACK[0x6270]) ^ 0x37D56528 ^ (2
                                             * (((2 * (v46 & STACK[0x6270] ^ 0x2080600C)) & 0x92A5ACE)
                                              - (v46 & STACK[0x6270] ^ 0x2080600C))
                                             + 1993712944);
  v56 = v13 & 0xA2CBA5E9 ^ 0x428128 ^ (v13 ^ 0xFE7E2381) & (v44 ^ 0xB049B981);
  v57 = v19 & v43;
  LODWORD(v19) = (v19 & v22) >> v24;
  LODWORD(STACK[0x6AC0]) = ((v57 << v23) ^ v19)
                         + 2 * ((v57 << v23) & v19)
                         + 495988329
                         + ~(2
                           * ((((v57 << v23) ^ v19) + 2 * ((v57 << v23) & v19)) & 0x1D902E69 ^ ((v57 << v23) ^ v19) & 1));
  v58 = v13 ^ 0x1355DA8B ^ (2 * (((2 * v56) | 0x293AB858) - v56) + 1455769512);
  LODWORD(STACK[0x6040]) = ((v21 & v55) >> LODWORD(STACK[0x6AB0])) ^ ((v25 & v55) << v26);
  v59 = ((v58 & v43) << v26) + ((v58 & v22) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6900]) = v59 - ((2 * v59) & 0x2F2E5D64);
  v60 = LODWORD(STACK[0x6680]) ^ 0x79E1A93A ^ (2
                                             * (((2 * (v49 & STACK[0x6680] ^ 0xA2802202)) | 0x3CE1ED3E)
                                              - (v49 & STACK[0x6680] ^ 0xA2802202))
                                             - 1021439294);
  LODWORD(STACK[0x6038]) = ((v21 & v60) >> v24) ^ ((v25 & v60) << v23);
  v61 = v33 ^ 0x1C9754D4 ^ (2
                          * ((v49 & v33 ^ 0xD852004C | 0x5619AA26) - (v49 & v33 ^ 0xD852004C | LODWORD(STACK[0xABC])))
                          + 1405922226);
  LODWORD(STACK[0x68C0]) = ((v61 & v43) << v26) ^ ((v21 & v61) >> LODWORD(STACK[0x6AB0]));
  v62 = LODWORD(STACK[0x6720]) ^ (2 * (v46 & STACK[0x6720]));
  v63 = (v41 ^ 0xE5044F73) & STACK[0x6760];
  v64 = STACK[0x6288];
  LODWORD(STACK[0x6030]) = ((v22 & v62) >> v24) ^ ((v25 & v62) << v23);
  v65 = v28 ^ (2
             * ((v28 & v46 & 0x15E4AA41 ^ 0x15E40A41) + (v28 & v46 ^ 0x1AA00E) - ((v28 & v46 ^ 0x1AA00E) & 0x15E4AA41))) ^ 0x2BFC149E;
  v66 = ((v25 & v65) << v26) | ((v22 & v65) >> v24);
  LODWORD(STACK[0x6890]) = v66 - ((2 * v66) & 0x2F2E5D64);
  v67 = v64 ^ 0x485E3881 ^ (2
                          * ((v64 & 0x67554C7C ^ 0x66414040 ^ v63)
                           - ((2 * (v64 & 0x67554C7C ^ 0x66414040 ^ v63)) & 0x31CA5944))
                          + 835344708);
  LODWORD(STACK[0x6028]) = ((v67 & v43) << v23) ^ ((v21 & v67) >> LODWORD(STACK[0x6AB0]));
  v68 = STACK[0x67E0] & 0xA1635ED5 ^ 0xA00100D4 ^ (v41 ^ 0x23325DDA) & v35;
  v69 = LODWORD(STACK[0x67E0]) ^ 0x419ADDFE ^ (2 * (((2 * v68) & 0x68675380) - v68) + 395881598);
  v70 = LODWORD(STACK[0x67B0]) ^ 0xE2510A26 ^ (2
                                             * ((v46 & STACK[0x67B0] ^ 0x54180A3 | 0x746905B0)
                                              - (v46 & STACK[0x67B0] ^ 0x54180A3 | 0xB96FA4F))
                                             + 388887710);
  v71 = ((v21 & v69) >> LODWORD(STACK[0x6AB0])) + ((v69 & v43) << v26);
  LODWORD(STACK[0x6720]) = v71 - ((2 * v71) & 0x2F2E5D64);
  v72 = ((v25 & v70) << v23) ^ ((v22 & v70) >> v24);
  v73 = v34 ^ (2 * (v46 & v34));
  v74 = LODWORD(STACK[0x62A0]) ^ (2 * ((v41 ^ 0x1E13A946) & STACK[0x6290] ^ STACK[0x62A0] & 0x1C42AA49));
  LODWORD(STACK[0x6020]) = v72 - ((2 * v72) & 0x1E7AF0FA);
  v75 = STACK[0x67F0];
  v76 = ((v25 & v73) << v23) | ((v21 & v73) >> v24);
  LODWORD(STACK[0x6680]) = v76 - ((2 * v76) & 0xEBBED2D2);
  LODWORD(STACK[0x6018]) = (((v74 ^ 0x2E5BAEAE) & v22) >> LODWORD(STACK[0x6AB0])) ^ (((v74 ^ 0x2E5BAEAE) & v43) << v26);
  v77 = v75 ^ (2 * ((v44 ^ 0x248361CA) & v32 ^ v75 & 0x36017DA2));
  v78 = LODWORD(STACK[0x62A8]) ^ 0x8ACC1EAA ^ (2
                                             * (((2 * (v49 & STACK[0x62A8] ^ 0x4104900)) | 0x2EC8CAA)
                                              - (v49 & STACK[0x62A8] ^ 0x4104900))
                                             + 2098426710);
  v79 = ((v78 & v43) << v26) + ((v78 & v22) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6010]) = v79 - ((2 * v79) & 0x36827CFC);
  v80 = v36 & 0x643DB986 ^ 0x3C3800 ^ (v36 ^ 0xD4BC1B71) & (v44 ^ 0x76BFA5EE);
  v81 = v36 ^ 0x8D8E3AED ^ (2 * ((LODWORD(STACK[0xAC0]) | (2 * v80)) - v80) + 785226852);
  v82 = ((v25 & (v77 ^ 0x7BE81E4C)) << v23) | ((v21 & (v77 ^ 0x7BE81E4C)) >> v24);
  LODWORD(STACK[0x6638]) = v82 - ((2 * v82) & 0xEBBED2D2);
  LODWORD(STACK[0x62E0]) = ((v81 & v43) << v26) ^ ((v81 & v22) >> v24);
  v83 = LODWORD(STACK[0x62B8]) ^ (2 * (v49 & STACK[0x62B8]));
  v84 = ((v25 & v83) << v23) | ((v21 & v83) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6008]) = v84 - ((2 * v84) & 0x36827CFC);
  v85 = LODWORD(STACK[0x62D8]) ^ 0xCF98E993 ^ (2
                                             * (((2
                                                * (STACK[0x62D8] & 0x4A60818C ^ 0xA20000C ^ (v41 ^ 0xC8318283) & STACK[0x62C0])) & 0x3E2A149E)
                                              - (STACK[0x62D8] & 0x4A60818C ^ 0xA20000C ^ (v41 ^ 0xC8318283) & STACK[0x62C0]))
                                             + 1104538464);
  LODWORD(STACK[0x62D8]) = (((v30 ^ (2 * (v30 & v46))) & v43) << v26) ^ (((v30 ^ (2 * (v30 & v46))) & v21) >> LODWORD(STACK[0x6AB0]));
  v86 = (v44 ^ 0xE13B39C4) & STACK[0x62D0];
  v87 = STACK[0x67C0];
  v88 = STACK[0x69C0] & 0x26C9FF11 ^ 0xC89C00 ^ (LODWORD(STACK[0x69C0]) ^ 0x2054DEC6) & (v41 ^ 0xA498FC1E);
  v89 = 2 * ((v88 | 0x78EE78AC) - (v88 | 0x7118753)) + 237178534;
  v90 = ((v89 ^ 0xB0CC7558) - 2 * ((v89 ^ 0xB0CC7558) & 0x1661EA4E ^ v89 & 2) + 375515725) ^ LODWORD(STACK[0x6498]);
  v91 = ((v25 & v85) << v23) + ((v85 & v22) >> v24);
  LODWORD(STACK[0x6498]) = v91 - ((2 * v91) & 0x36827CFC);
  v92 = v87 ^ 0x42FB58E ^ (2
                         * (((2 * (v87 & 0xF3B925AC ^ 0x839005AC ^ v86)) & 0x5086EADC)
                          - (v87 & 0xF3B925AC ^ 0x839005AC ^ v86))
                         - 1351019230);
  LODWORD(STACK[0x6A80]) = ((v25 & v90) << v23) + ((v21 & v90) >> v24);
  v93 = STACK[0x67D0];
  LODWORD(STACK[0x6770]) = ((v92 & v43) << v26) ^ ((v22 & v92) >> LODWORD(STACK[0x6AB0]));
  v94 = LODWORD(STACK[0x64A0]) ^ (2 * (STACK[0x64A0] & v49));
  v95 = v93 ^ 0xF7D19E98 ^ (2 * ((v44 ^ 0x3783AD3A) & (v93 ^ 0x3DD0FEB8) ^ v93 & 0x2501B152));
  LODWORD(STACK[0x6A70]) = ((v25 & v94) << v23) + ((v21 & v94) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6760]) = ((v95 & v43) << v26) ^ ((v22 & v95) >> v24);
  v96 = LODWORD(STACK[0x6740]) ^ 0x4B75A864 ^ (2
                                             * ((v46 & STACK[0x6740] ^ 0x52698146 | 0x77D35574)
                                              - (v46 & STACK[0x6740] ^ 0x52698146 | 0x82CAA8B))
                                             + 274289942);
  LODWORD(STACK[0x6A40]) = ((v96 & v43) << v26) ^ ((v22 & v96) >> LODWORD(STACK[0x6AB0]));
  v97 = LODWORD(STACK[0x6488]) ^ 0xD57ECC18 ^ (2
                                             * ((v49 & STACK[0x6488] ^ 0x40302500 | 0x2A8F430C)
                                              - (v49 & STACK[0x6488] ^ 0x40302500 | 0x5570BCF3))
                                             - 1428063770);
  v98 = LODWORD(STACK[0x6750]) ^ 0x228000AA ^ (2
                                             * ((v46 & STACK[0x6750] & LODWORD(STACK[0xAC4]) ^ 0x1400055)
                                              + (v46 & STACK[0x6750] & 0x7E9BF228 ^ 0x10000001))
                                             - 2);
  LODWORD(STACK[0x6750]) = ((v25 & v97) << v23) + ((v21 & v97) >> v24);
  LODWORD(STACK[0x6A60]) = ((v22 & v98) >> v24) ^ ((v98 & v43) << v23);
  v99 = LODWORD(STACK[0x6A50]) ^ (2 * (STACK[0x6A50] & v46));
  v100 = LODWORD(STACK[0x6810]) ^ (2 * ((v41 ^ 0x37A9A825) & STACK[0x6490] ^ STACK[0x6810] & 0x35F8AB2A)) ^ 0x5185EC1;
  LODWORD(STACK[0x6740]) = ((v25 & v100) << v26) ^ ((v21 & v100) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6A50]) = ((v25 & v99) << v26) | ((v21 & v99) >> LODWORD(STACK[0x6AB0]));
  v101 = STACK[0x6950] & LODWORD(STACK[0xAC8]) ^ 0x80107134 ^ (LODWORD(STACK[0x6950]) ^ 0xBD26BFAD) & (v44 ^ 0x92D2EBDC);
  v102 = LODWORD(STACK[0x6950]) ^ 0x222F3AAF ^ (2 * (((2 * v101) & 0x60D7F7DC) - v101) - 1624766430);
  v103 = LODWORD(STACK[0x68F0]) ^ (2 * (STACK[0x68F0] & v49));
  LODWORD(STACK[0x6A30]) = ((v102 & v43) << v26) ^ ((v102 & v21) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6A20]) = ((v25 & v103) << v23) | ((v21 & v103) >> LODWORD(STACK[0x6AB0]));
  v104 = LODWORD(STACK[0x69A0]) ^ (2
                                 * ((STACK[0x69A0] & v49 & 0x141DF2F9 ^ 0x9F279)
                                  + (STACK[0x69A0] & v49 ^ 0x15540884)
                                  - ((STACK[0x69A0] & v49 ^ 0x15540884) & 0x141DF2F9))) ^ 0x293F4FA;
  LODWORD(STACK[0x6A10]) = ((v21 & v104) >> LODWORD(STACK[0x6AB0])) ^ ((v104 & v43) << v23);
  v105 = LODWORD(STACK[0x6910]) ^ (2
                                 * ((LODWORD(STACK[0x6910]) ^ 0x4E023A1D) & (v44 ^ 0x60BD5542) ^ STACK[0x6910] & 0x723F492A)) ^ 0x4A062A0D;
  LODWORD(STACK[0x6A00]) = ((v105 & v22) >> LODWORD(STACK[0x6AB0])) + ((v105 & v43) << v23);
  v106 = v49 & (LODWORD(STACK[0x6920]) ^ 0xB5C75C25) ^ v41 & 0x3CABFFED;
  v107 = LODWORD(STACK[0x6710]) ^ (2
                                 * ((v106 & 0xF942EC6 ^ 0x7942A06)
                                  + (v106 ^ 0x82084C0)
                                  - ((v106 ^ 0x82084C0) & 0xF942EC6)));
  v108 = ((v107 ^ 0x4DE3BCAE) & v43 | STACK[0x66B8] & 0x82E2397F) ^ 0x8220105E;
  LODWORD(STACK[0x69F0]) = (((((2 * v108) & 0x2E343740) - v108 + 1759896671) ^ 0x6827CD7E) << v23) | ((STACK[0x6668] & 0x82715704 ^ LODWORD(STACK[0xAD0]) ^ (v107 ^ 0x4D70D2D5) & v22) >> v24);
  v109 = STACK[0x6708] & 0x4F18F394 ^ LODWORD(STACK[0xACC]) ^ (v44 ^ 0x5D9AEFFC) & (LODWORD(STACK[0x6708]) ^ 0xA49E5052);
  v110 = 2 * (v109 - ((2 * v109) & 0x6024586E)) + 1612994670;
  v111 = ((v110 ^ 0x7035984E) - 2 * ((v110 ^ 0x7035984E) & 0x4B4CE7F6 ^ v110 & 0x10) + 1263331303) ^ LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x69E0]) = ((v25 & v111) << v26) ^ ((v22 & v111) >> v24);
  v112 = LODWORD(STACK[0x64A8]) ^ 0x75227228 ^ (2
                                              * (((2 * (STACK[0x64A8] & v46 ^ 0x42008288)) | 0x71237738)
                                               - (STACK[0x64A8] & v46 ^ 0x42008288))
                                              + 249333960);
  LODWORD(STACK[0x69A0]) = ((v21 & v112) >> LODWORD(STACK[0x6AB0])) | ((v112 & v43) << v26);
  v113 = LODWORD(STACK[0x6990]) ^ 0x133922E8 ^ (2
                                              * ((STACK[0x6990] & v49 ^ 0x2400226 | 0xBDC9352)
                                               - (STACK[0x6990] & v49 ^ 0x2400226 | 0x74236CAD))
                                              - 398010022);
  v114 = STACK[0x6578] & LODWORD(STACK[0xAD4]) ^ 0xC03091C1 ^ (v41 ^ 0x486D90CE) & STACK[0x66E0];
  v115 = LODWORD(STACK[0x6578]) ^ 0xFF226921 ^ (2 * (((2 * v114) | 0x1DAAC940) - v114) + 1649751744);
  LODWORD(STACK[0x69D0]) = ((v21 & v113) >> v24) | ((v113 & v43) << v26);
  LODWORD(STACK[0x69C0]) = ((v25 & v115) << v26) + ((v21 & v115) >> v24);
  v116 = LODWORD(STACK[0x69B0]) ^ (2 * (STACK[0x69B0] & v49));
  LODWORD(STACK[0x6990]) = ((v116 & v21) >> v24) | ((v116 & v43) << v26);
  v117 = LODWORD(STACK[0x66E8]) ^ 0xA787D234 ^ (2
                                              * (((2 * (v49 & STACK[0x66E8] ^ 0xFAD08F0C)) | 0x5226CC2C)
                                               - (v49 & STACK[0x66E8] ^ 0xFAD08F0C))
                                              - 1378274348);
  LODWORD(STACK[0x69B0]) = ((v21 & v117) >> LODWORD(STACK[0x6AB0])) + ((v117 & v43) << v23);
  v118 = STACK[0x64C8] & 0xD4905EAF ^ 0xC0101A80 ^ (LODWORD(STACK[0x64C8]) ^ 0x3A3A3A3A) & (v41 ^ 0x56C15DA0);
  v119 = 2 * (((2 * v118) | 0x76AA1C34) - v118) + 156623820;
  v120 = ((v119 ^ 0x56AA1D60) - 1313065693 - 2 * ((v119 ^ 0x56AA1D60) & 0x31BC353E ^ v119 & 0x1C)) ^ LODWORD(STACK[0x68B0]);
  v121 = STACK[0x6940];
  v122 = (v121 ^ 0x3F66A8C2) & (v44 ^ 0x682C8B9C) ^ v121 & 0x7AAE97F4;
  v123 = ((v120 & v22) >> LODWORD(STACK[0x6AB0])) | ((v120 & v43) << v23);
  LODWORD(STACK[0x6950]) = v123;
  v124 = LODWORD(STACK[0x6588]) ^ (2
                                 * ((v46 & STACK[0x6588] & 0x392DE31A ^ 0x10D831A)
                                  + (v46 & STACK[0x6588] ^ 0x7CA26080)
                                  - ((v46 & STACK[0x6588] ^ 0x7CA26080) & 0x392DE31A))) ^ 0x8B1F0734;
  LODWORD(STACK[0x6630]) = ((v25 & v124) << v26) | ((v21 & v124) >> v24);
  v125 = (((v121 ^ (2 * v122) ^ 0xCB2BA942) & v22) >> v24) + (((v121 ^ (2 * v122) ^ 0xCB2BA942) & v43) << v26);
  LODWORD(STACK[0x6810]) = v125;
  v126 = LODWORD(STACK[0x6590]) ^ 0x7A2EEF4 ^ (2
                                             * (((2 * (v49 & STACK[0x6590] ^ 0x88320440)) | 0x17C6E674)
                                              - (v49 & STACK[0x6590] ^ 0x88320440))
                                             - 398911092);
  v127 = STACK[0x68A0];
  v128 = (v127 & 0x7561CF17 ^ LODWORD(STACK[0xAD8]) ^ (v44 ^ 0x67E3D37F) & STACK[0x65B0] | 0x156EADA2)
       - (v127 & 0x7561CF17 ^ LODWORD(STACK[0xAD8]) ^ (v44 ^ 0x67E3D37F) & STACK[0x65B0] | 0x6A91525D);
  v129 = STACK[0x6800];
  v130 = (((v41 ^ 0xFC5722DE) & STACK[0x6558] ^ v129 & STACK[0xADC]) & 0x22DB2735 ^ 0x22D92725)
       + (((v41 ^ 0xFC5722DE) & STACK[0x6558] ^ v129 & STACK[0xADC]) & 0x5D24D8CA ^ 0x58040041);
  LODWORD(STACK[0x6490]) = ((v25 & v126) << v23) | ((v21 & v126) >> LODWORD(STACK[0x6AB0]));
  LODWORD(v19) = (((v127 ^ 0xFD05E483 ^ (2 * v128 - 719149894)) & v43) << v26)
               + ((v22 & (v127 ^ 0xFD05E483 ^ (2 * v128 - 719149894))) >> v24);
  LODWORD(STACK[0x6940]) = v19;
  v131 = LODWORD(STACK[0x66D0]) ^ (2 * (v46 & STACK[0x66D0]));
  v132 = ((v131 & v43) << v26) | ((v22 & v131) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6800]) = v132;
  v133 = LODWORD(STACK[0x65C0]) ^ 0x8812CD96 ^ (2
                                              * ((v49 & STACK[0x65C0] ^ 0x40028084 | 0x40BE64F)
                                               - (v49 & STACK[0x65C0] ^ 0x40028084 | 0x7BF419B0))
                                              - 135777440);
  LODWORD(STACK[0x6628]) = ((v25 & (v129 ^ 0xC30BC942 ^ (2 * v130 - 2))) << v23) | ((v21 & (v129 ^ 0xC30BC942 ^ (2 * v130 - 2))) >> LODWORD(STACK[0x6AB0]));
  v134 = STACK[0x64D0];
  v135 = v134 & 0x42DB742 ^ 0x82742 ^ (v134 ^ 0xA53E2314) & (v44 ^ 0x16AFAB2A);
  LODWORD(STACK[0x6488]) = ((v25 & v133) << v23) | ((v21 & v133) >> v24);
  v136 = v134 ^ 0xAE201F9E ^ (2 * (((2 * v135) | 0x356340E) - v135) - 55981070);
  LODWORD(STACK[0x6840]) = ((v136 & v25) << v23) | ((v136 & v21) >> LODWORD(STACK[0x6AB0]));
  v137 = LODWORD(STACK[0x66C8]) ^ (2 * (v49 & STACK[0x66C8]));
  v138 = ((v21 & v137) >> v24) + ((v137 & v43) << v26);
  LODWORD(STACK[0x67F0]) = v138;
  v139 = LODWORD(STACK[0x66D8]) ^ 0xA47DE814 ^ (2
                                              * ((v49 & STACK[0x66D8] ^ 0x34A9A242)
                                               - ((2 * (v49 & STACK[0x66D8] ^ 0x34A9A242)) & 0x4D2EAC90))
                                              - 852579184);
  v140 = ((v25 & v139) << v26) + ((v21 & v139) >> v24);
  LODWORD(STACK[0x67E0]) = v140;
  v141 = LODWORD(STACK[0x64B0]) ^ (2
                                 * ((STACK[0x64B0] & v49 & 0x9FCB8E3 ^ 0x1DC38C2)
                                  + (STACK[0x64B0] & v49 ^ 0x8238629)
                                  - ((STACK[0x64B0] & v49 ^ 0x8238629) & 0x9FCB8E3))) ^ 0x3BE7D94;
  v142 = ((v141 & v22) >> LODWORD(STACK[0x6AB0])) | ((v141 & v43) << v23);
  LODWORD(STACK[0x67D0]) = v142;
  v143 = LODWORD(STACK[0x64B8]) ^ 0x3BE4E904 ^ (2
                                              * (((2 * (STACK[0x64B8] & v46 ^ 0x40203800)) & 0x445B66FA)
                                               - (STACK[0x64B8] & v46 ^ 0x40203800))
                                              - 1146840828);
  v144 = ((v21 & v143) >> LODWORD(STACK[0x6AB0])) | ((v143 & v43) << v23);
  v145 = LODWORD(STACK[0x64C0]) ^ (2 * (STACK[0x64C0] & v49));
  v146 = STACK[0x6428];
  v147 = LODWORD(STACK[0x64E0]) ^ LODWORD(STACK[0x6428]) ^ 0xDD76A2EC ^ (v144 + 80712913 - ((2 * v144) & 0x99F29A2));
  LODWORD(STACK[0x67C0]) = v147;
  v148 = ((v25 & v145) << v23) + ((v145 & v22) >> v24);
  v149 = (v44 ^ 0xE09C4914) & (LODWORD(STACK[0x6830]) ^ 0xF1BDB56C) ^ STACK[0x6830] & 0xF21E557C;
  v150 = (v148 + 1064097851 - ((2 * v148) & 0x7ED9B076)) ^ LODWORD(STACK[0x6430]);
  v151 = (2 * v150) & 0x99F29A2;
  v152 = v150 + 80712913 - v151;
  v153 = v150 - v151;
  v154 = LODWORD(STACK[0x66F0]) ^ (2
                                 * ((v149 & 0x1C37FDD8 ^ 0xC21EDD8)
                                  + (v149 ^ LODWORD(STACK[0xAE0]))
                                  - ((v149 ^ LODWORD(STACK[0xAE0])) & 0x1C37FDD8)));
  v155 = STACK[0x6610] & 0x8C4A5D84 ^ 0x88001984 ^ v21 & (v154 ^ 0xC2FFA75);
  v156 = v25 & (v154 ^ 0x918FEAB1) ^ STACK[0x6618] & 0x11EA4D40;
  v157 = ((v152 ^ v146) & 0xF342C0B2 | ((v153 + 349148369) ^ v146) & 0xCBD3F4D)
       - 2 * (((v152 ^ v146) & 0x33004002 | ((v153 + 349148369) ^ v146) & 0x49C0805) ^ ((v153 + 349148369) ^ v146) & 1);
  v158 = ((((v156 ^ 0xFE9FBFFF) - 393246424 + ((2 * v156) | 0x2EE0EDB2)) ^ 0x6B87F99) << v26)
       + (v155 >> LODWORD(STACK[0x6AB0]));
  v159 = v41 & STACK[0xAE8] ^ 0x3C280040 ^ v49 & (LODWORD(STACK[0x6930]) ^ 0xACD6A9A4);
  v160 = (LODWORD(STACK[0xAE4]) | (2 * v159)) - v159;
  v161 = STACK[0x63F8];
  v162 = LODWORD(STACK[0x63F8]) ^ 0xCC131EEF ^ (v158 - ((2 * v158) & 0x874F10F8) + 1135052924);
  LODWORD(STACK[0x67B0]) = v162;
  v163 = v50 + 495988328;
  v164 = (((LODWORD(STACK[0x68D0]) ^ 0x45C508F7) - 1481975455) ^ ((LODWORD(STACK[0x68D0]) ^ 0x4DD065E3) - 1346390923) ^ ((LODWORD(STACK[0x68D0]) ^ 0x8156D14) - 361055100))
       - 2 * (((v50 + 495988328) ^ 0x1D902E68) & STACK[0x68D0])
       + ((((v50 + 495988328) ^ 0xE57AA347) + 444947641) ^ (((v50 + 495988328) ^ 0x8E24C2A7) + 1910193497) ^ (((v50 + 495988328) ^ 0x76CE4F88) - 1993232264));
  v165 = (((2 * v160 - 1190534726) ^ 0x3EA61CDE)
        - 808767248
        - ((2 * ((2 * v160 - 1190534726) ^ 0x3EA61CDE)) & 0x9F9661E0)) ^ LODWORD(STACK[0x6700]);
  LODWORD(STACK[0x6830]) = v161 ^ ((v165 & v22) >> v24) ^ ((v25 & v165) << v23) ^ 0x8FB49693;
  v166 = v123 ^ LODWORD(STACK[0x6A60]) ^ v132 ^ v19 ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6990]) ^ (v164 + 991976656);
  v167 = (v166 ^ LODWORD(STACK[0x6A00]) ^ v125) - ((2 * (v166 ^ LODWORD(STACK[0x6A00]) ^ v125)) & 0xEBBED2D2);
  LODWORD(v19) = LODWORD(STACK[0x62D8]) ^ 0x75DF6969;
  LODWORD(STACK[0x6930]) = v19;
  v168 = v19 ^ LODWORD(STACK[0x6A80]) ^ (v167 + 1977575785);
  v169 = LODWORD(STACK[0x68E0]) + 495988328;
  LODWORD(STACK[0x6920]) = v169;
  v170 = (v168 - ((2 * v168) & 0x3B205CD0) + 495988328) ^ v169;
  v171 = (v170 - ((2 * v170) & 0x3B205CD0) + 495988328) ^ LODWORD(STACK[0x6AC0]);
  v172 = LODWORD(STACK[0x6900]) + 395783858;
  LODWORD(STACK[0x6910]) = v172;
  v173 = (v171 + 395783859 + (~(2 * v171) | 0xD0D1A29B)) ^ v172;
  v174 = LODWORD(STACK[0x68C0]) ^ 0x17972EB2;
  LODWORD(STACK[0x6900]) = v174;
  v175 = (v173 - ((2 * v173) & 0x2F2E5D64) + 395783858) ^ v174;
  v176 = LODWORD(STACK[0x6890]) + 395783858;
  LODWORD(STACK[0x68F0]) = v176;
  LODWORD(v19) = (v175 + 395783859 + (~(2 * v175) | 0xD0D1A29B)) ^ v176;
  v177 = LODWORD(STACK[0x6720]) + 395783858;
  v178 = (v19 - ((2 * v19) & 0x2F2E5D64) + 395783858) ^ v177;
  LODWORD(v19) = LODWORD(STACK[0x6680]) + 1977575785;
  LODWORD(STACK[0x68E0]) = v19;
  v179 = (v178 - ((2 * v178) & 0xEBBED2D2) + 1977575785) ^ v19;
  v180 = LODWORD(STACK[0x6638]) + 1977575785;
  v181 = (v179 - ((2 * v179) & 0xEBBED2D2) + 1977575785) ^ v180;
  v182 = LODWORD(STACK[0x62E0]) ^ 0x75DF6969;
  v183 = LODWORD(STACK[0x6A40]) ^ v182 ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x6A30]) ^ (v181 - ((2 * v181) & 0xEBBED2D2) + 1977575785);
  v184 = v138 ^ v142 ^ v140 ^ v147 ^ (v183 - ((2 * v183) & 0x6F38900C) + 932988934);
  v185 = (v184 - ((2 * v184) & 0x6F38900C) + 932988934) ^ (v157 + 932988934);
  v186 = (v185 - ((2 * v185) & 0x6F38900C) + 932988934) ^ v162;
  LODWORD(STACK[0x64E0]) = v186 - ((2 * v186) & 0x6F38900C);
  v187 = LODWORD(STACK[0x6580]) ^ 0x45AD8C22 ^ (2
                                              * ((v49 & STACK[0x6580] ^ LODWORD(STACK[0xAEC]) | 0x62D2D443)
                                               - (v49 & STACK[0x6580] ^ LODWORD(STACK[0xAEC]) | 0x1D2D2BBC))
                                              + 978999160);
  LODWORD(STACK[0x62E0]) = ((v187 & v43) << v23) ^ ((v187 & v22) >> v24);
  v188 = LODWORD(STACK[0x6570]) ^ 0x75690CAC ^ (2
                                              * ((v46 & STACK[0x6570] ^ 0x848600A8 | LODWORD(STACK[0xAF0]))
                                               - (v46 & STACK[0x6570] ^ 0x848600A8 | 0x41CD7901))
                                              - 2086997502);
  LODWORD(v19) = (v41 ^ 0xD1A307C4) & STACK[0x6438];
  v189 = STACK[0x6420];
  LODWORD(STACK[0x62D8]) = ((v21 & v188) >> LODWORD(STACK[0x6AB0])) + ((v188 & v43) << v26);
  LODWORD(STACK[0x64C0]) = (v46 & STACK[0x6560] & 0x23ADD1FF ^ 0x2A9D0EB)
                         + (v46 & STACK[0x6560] ^ LODWORD(STACK[0xAF4]))
                         - ((v46 & STACK[0x6560] ^ LODWORD(STACK[0xAF4])) & 0x23ADD1FF);
  v190 = v189 ^ 0xB54605ED ^ (2
                            * ((v189 & 0x53F204CB ^ 0x53600441 ^ v19)
                             - ((2 * (v189 & 0x53F204CB ^ 0x53600441 ^ v19)) & 0x4161AA96))
                            + 1096919702);
  LODWORD(STACK[0x6680]) = ((v25 & v190) << v23) | ((v190 & v22) >> v24);
  v191 = LODWORD(STACK[0x6730]) ^ (2
                                 * ((v41 ^ 0x3BB1A4E3) & (LODWORD(STACK[0x6730]) ^ 0x7518FD0A) ^ STACK[0x6730] & 0x39E0A7EC)) ^ 0x9719B71A;
  LODWORD(STACK[0x62D0]) = ((v25 & v191) << v26) ^ ((v21 & v191) >> v24);
  v192 = STACK[0x6650];
  v193 = LODWORD(STACK[0x62C8]) ^ (2
                                 * ((LODWORD(STACK[0x6650]) ^ 0x73478103) & (LODWORD(STACK[0x62C8]) ^ 0x7283522F) ^ STACK[0x62C8] & 0x61C59D6B)) ^ 0x33817279;
  LODWORD(STACK[0x6720]) = ((v25 & v193) << v26) + ((v22 & v193) >> v24);
  v194 = LODWORD(STACK[0x6540]) ^ 0xA17E3D76 ^ (2
                                              * (((2 * (v49 & STACK[0x6540] ^ 0xE49FFC1D)) | 0x6841C54C)
                                               - (v49 & STACK[0x6540] ^ 0xE49FFC1D))
                                              - 1749140812);
  v195 = LODWORD(STACK[0x6548]) ^ LODWORD(STACK[0xAF8]) ^ (2
                                                         * ((v46 & STACK[0x6548] & 0x2835CEEF ^ 0x20000448)
                                                          + (v46 & STACK[0x6548] & 0x57CA3110 ^ 0x470A0111))
                                                         - 2);
  LODWORD(STACK[0x62C8]) = ((v21 & v194) >> LODWORD(STACK[0x6AB0])) ^ ((v194 & v43) << v23);
  LODWORD(STACK[0x62C0]) = ((v195 & v43) << v26) | ((v22 & v195) >> LODWORD(STACK[0x6AB0]));
  v196 = LODWORD(STACK[0x63F0]) ^ (2 * ((v41 ^ 0x1C979780) & STACK[0x65D0] ^ STACK[0x63F0] & 0x1EC6948F)) ^ 0x36F83497;
  LODWORD(STACK[0x62B8]) = ((v25 & v196) << v23) ^ ((v21 & v196) >> v24);
  v197 = LODWORD(STACK[0x62B0]) ^ 0xBDBEBCA5 ^ (2
                                              * (((2
                                                 * (STACK[0x62B0] & 0xCB76114E ^ LODWORD(STACK[0xAFC]) ^ (v41 ^ 0x49271241) & STACK[0x6538])) | 0x651A791E)
                                               - (STACK[0x62B0] & 0xCB76114E ^ LODWORD(STACK[0xAFC]) ^ (v41 ^ 0x49271241) & STACK[0x6538]))
                                              - 1696233758);
  v198 = LODWORD(STACK[0x6518]) ^ (2 * (v46 & STACK[0x6518]));
  LODWORD(STACK[0x62B0]) = ((v198 & v43) << v26) ^ ((v22 & v198) >> v24);
  LODWORD(STACK[0x62A8]) = ((v25 & v197) << v23) | ((v21 & v197) >> LODWORD(STACK[0x6AB0]));
  v199 = STACK[0x66F8];
  v200 = (v49 & v199 & STACK[0xB00] ^ 0x3400000) + (v49 & v199 & 0x74BEC89A ^ 0x54A6481B);
  v201 = LODWORD(STACK[0x6568]) ^ (2 * (v46 & STACK[0x6568]));
  LODWORD(STACK[0x63F0]) = ((v25 & v201) << v23) ^ ((v21 & v201) >> LODWORD(STACK[0x6AB0]));
  v202 = LODWORD(STACK[0x6648]) ^ 0x75EE3F13 ^ (2
                                              * ((STACK[0x6648] & 0xC58C104A ^ 0x41841008 ^ (v192 ^ 0xD70E0C22) & STACK[0x65A0] | 0x21564945)
                                               - (STACK[0x6648] & 0xC58C104A ^ 0x41841008 ^ (v192 ^ 0xD70E0C22) & STACK[0x65A0] | 0x5EA9B6BA))
                                              - 1118605964);
  LODWORD(STACK[0x62A0]) = ((v25 & (v199 ^ 0xAFCC9034 ^ (2 * v200 - 2))) << v23) | ((v21 & (v199 ^ 0xAFCC9034 ^ (2 * v200 - 2))) >> LODWORD(STACK[0x6AB0]));
  v203 = v22;
  LODWORD(STACK[0x6298]) = ((v202 & v43) << v26) | ((v22 & v202) >> v24);
  v204 = STACK[0x6670] & LODWORD(STACK[0xB04]) ^ 0x27F4432F;
  LODWORD(STACK[0x64C8]) = v43 & v204;
  LODWORD(STACK[0x64D0]) = v22 & v204;
  v205 = ((v43 & v204) << v26) | ((v22 & v204) >> LODWORD(STACK[0x6AB0]));
  v206 = v41 & 0xEF4FEA73 ^ (LODWORD(STACK[0x64D8]) ^ 0xD912B6F1) & v49 ^ 0xE2468230;
  v207 = (2 * (((2 * v206) & 0x5A1AE1A0) - v206) - 1511711138) ^ LODWORD(STACK[0x6960]);
  LODWORD(v19) = STACK[0x6618];
  v208 = STACK[0x6618] & 0x62548610 ^ 0x40108010 ^ v25 & (v207 ^ 0x952AFADB);
  v209 = STACK[0x6610];
  v210 = (((((2 * v208) & 0xFC20F6CA) - v208 + 32474266) ^ 0x43FB069A) << v23) | ((STACK[0x6610] & 0xC765650D ^ 0x80202105 ^ (v207 ^ 0x301B19C6) & v21) >> v24);
  v211 = (v41 ^ 0x87C8E2A4) & (LODWORD(STACK[0x63E8]) ^ 0x11CE407E) ^ STACK[0x63E8] & 0x599E1AB;
  v212 = (v211 & 0x7ACB39D1 ^ 0x7A4338D0) + (v211 & 0x534C62E ^ 0x5100009);
  v213 = STACK[0x6480] & 0xA7A4CAF1 ^ 0x8724C850 ^ (LODWORD(STACK[0x6480]) ^ 0x78731AD4) & (v192 ^ 0xB526D699);
  v214 = (2 * v212 - 2) ^ LODWORD(STACK[0x6980]);
  v215 = STACK[0x6618] & 0xDD9D5AA0 ^ 0xC88D08A0 ^ v25 & (v214 ^ 0xB2BFC9B7);
  v216 = STACK[0x6610] & 0xA5E8C373 ^ 0xA520C321 ^ v21 & (v214 ^ 0xCACA5064);
  v217 = LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x6440]) ^ v205 ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6A10]) ^ (((v216 - ((2 * v216) & 0x9890F2F2) + 1279818105) ^ 0x49C8BB19) >> v24) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A70]) ^ ((((v215 | 0xC5DC2707) - (v215 | 0x3A23D8F8) + 975427832) ^ 0x15DC6527) << v23) ^ v210 ^ LODWORD(STACK[0x6A00]);
  v218 = LODWORD(STACK[0x68D0]) ^ 0x1D902E68;
  v219 = (v217 ^ LODWORD(STACK[0x6A30])) - ((2 * (v217 ^ LODWORD(STACK[0x6A30]))) & 0x3B205CD0) + 495988328;
  LODWORD(STACK[0x6890]) = v218;
  LODWORD(STACK[0x68D0]) = v163;
  v220 = ((v219 ^ v218) - ((2 * (v219 ^ v218)) & 0x3B205CD0) + 495988328) ^ v163;
  v221 = (v220 - ((2 * v220) & 0x3B205CD0) + 495988328) ^ LODWORD(STACK[0x6920]);
  v222 = LODWORD(STACK[0x6AC0]) ^ (v221 - ((2 * v221) & 0x3B205CD0) + 495988328);
  LODWORD(STACK[0x68B0]) = v180;
  v223 = (v222 - ((2 * v222) & 0xEBBED2D2) + 1977575785) ^ v180;
  v224 = (v223 - ((2 * v223) & 0x2F2E5D64) + 395783858) ^ LODWORD(STACK[0x6900]);
  v225 = (v224 - ((2 * v224) & 0xEBBED2D2) + 1977575785) ^ LODWORD(STACK[0x6930]);
  LODWORD(STACK[0x68C0]) = v177;
  v226 = (v225 - ((2 * v225) & 0x2F2E5D64) + 395783858) ^ v177;
  v227 = (v226 - ((2 * v226) & 0x2F2E5D64) + 395783858) ^ LODWORD(STACK[0x68F0]);
  LODWORD(STACK[0x68A0]) = v182;
  v228 = (v227 - ((2 * v227) & 0xEBBED2D2) + 1977575785) ^ v182;
  v229 = (v228 - ((2 * v228) & 0xEBBED2D2) + 1977575785) ^ LODWORD(STACK[0x68E0]);
  v230 = LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x67F0]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x6810]) ^ (v229 - ((2 * v229) & 0x2F2E5D64) + 395783858);
  v231 = (v230 - ((2 * v230) & 0x6F38900C) + 932988934) ^ LODWORD(STACK[0x67C0]);
  LODWORD(STACK[0x6730]) = v157 + 932988934;
  v232 = (v231 - ((2 * v231) & 0x6F38900C) + 932988934) ^ (v157 + 932988934);
  v233 = (v232 - ((2 * v232) & 0x6F38900C) + 932988934) ^ LODWORD(STACK[0x6830]);
  v234 = v233 - ((2 * v233) & 0x6F38900C);
  v235 = (2 * (((2 * v213) & 0x19B018C) - v213) + 2120547954) ^ LODWORD(STACK[0x6820]);
  v236 = STACK[0x6668] & 0xA05B5EDC ^ 0x804B10D4 ^ (v235 ^ 0x2A2475D) & v22;
  v237 = ((v235 ^ 0xDD794939) & STACK[0x6860] | STACK[0x66B8] & 0x7F8050B8) ^ 0x50001080;
  v238 = v192 & 0x5EDEC43 ^ 0x1E98442 ^ v46 & (LODWORD(STACK[0x6460]) ^ 0x687FDF97);
  v239 = (2 * (((2 * v238) & 0x71554B98) - v238) + 246068326) ^ LODWORD(STACK[0x6880]);
  v240 = v19 & 0x8E0902FB ^ LODWORD(STACK[0xB08]) ^ v25 & (v239 ^ 0x10E4C46A);
  v241 = v209 & 0x7CF6B48F ^ 0x450140E ^ v21 & (v239 ^ LODWORD(STACK[0xB10]));
  v242 = (((598594047 - v240 + ((2 * v240) | 0xB8A44724) + 2671) ^ 0x5A5323D1) << v26) | ((((STACK[0xB0C] & (2 * v241))
                                                                                          - v241
                                                                                          - 1163513980) ^ 0x96460B0F) >> v24);
  v243 = STACK[0x61BC];
  v244 = v243 ^ (2 * (v49 & v243));
  v245 = STACK[0x6860];
  v246 = ((v244 & v203) >> LODWORD(STACK[0x6AB0])) + ((v244 & STACK[0x6860]) << v23);
  LODWORD(STACK[0x63E8]) = v246;
  v247 = STACK[0x6A90];
  v248 = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6500]) ^ 0x4929));
  v249 = ((*(unsigned __int8 *)(v248 + (*(unsigned __int8 *)(v247 + 8) ^ 0x4ALL)) ^ 0x1C) << 24) | ((*(unsigned __int8 *)(v248 + ((*(unsigned __int8 *)(v247 + 10) - ((2 * *(unsigned __int8 *)(v247 + 10)) & 0xD8u) + 108) ^ 0x96)) ^ 0x22) << 8);
  v250 = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6500]) ^ 0x44C9)) - 8;
  v251 = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x6500]) - 16962) - 12;
  v252 = (*(_BYTE *)(v250 + (*(unsigned __int8 *)(v247 + 3) ^ 0x68)) - 36) ^ 0x19 | (((*(_BYTE *)(v250 + (*(unsigned __int8 *)(v247 + 2) ^ 0x4CLL)) - 36) ^ 0xB2) << 8) | ((*(unsigned __int8 *)(v251 + (*(unsigned __int8 *)(v247 + 1) ^ 0x44)) ^ 0x44) << 16);
  v253 = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x6500]) ^ 0x4A37)) - 12;
  v254 = *(unsigned __int8 *)(v253 + (*(unsigned __int8 *)(v247 + 15) ^ 0x7ALL)) ^ 0x78 | ((*(unsigned __int8 *)(v248 + (*(unsigned __int8 *)(v247 + 13) ^ 0xD9)) ^ 0xDD) << 16);
  LODWORD(STACK[0x64D8]) = (*(_BYTE *)(v250 + (*(unsigned __int8 *)(v247 + 7) ^ 0x34)) - 36) | (*(unsigned __int8 *)(v250 + (*(unsigned __int8 *)(v247 + 4) ^ 0x52)) << 24) | ((*(unsigned __int8 *)(v248 + (*(unsigned __int8 *)(v247 + 5) ^ 0xB5)) ^ 0xF3) << 16) | ((*(unsigned __int8 *)(v248 + (*(unsigned __int8 *)(v247 + 6) ^ 2)) ^ 0x99) << 8);
  v255 = *(unsigned __int8 *)(v251 + (*(unsigned __int8 *)(v247 + 11) ^ 0xCFLL)) ^ 0x14 | v249;
  v256 = *(unsigned __int8 *)(v247 + 12) ^ 0x2FLL;
  STACK[0x6278] = v253;
  LODWORD(v256) = v254 | ((*(unsigned __int8 *)(v253 + v256) ^ 0xD9) << 24);
  v257 = *(unsigned __int8 *)(v247 + 9) ^ 0x41;
  STACK[0x6288] = v250;
  LODWORD(STACK[0x6648]) = v255 & 0xFF00FFFF | (((*(_BYTE *)(v250 + v257) - 36) ^ 0x18) << 16);
  v258 = *(unsigned __int8 *)(v247 + 14) ^ 0x88;
  STACK[0x6290] = v248;
  LODWORD(v258) = *(unsigned __int8 *)(v248 + v258) ^ 0x3E;
  v259 = ~*(_BYTE *)v247;
  STACK[0x6280] = v251;
  LODWORD(v259) = *(unsigned __int8 *)(v251 + v259);
  LODWORD(STACK[0x6640]) = v256 | ((_DWORD)v258 << 8);
  LODWORD(STACK[0x6638]) = v252 | ((v259 ^ 0x73) << 24);
  LODWORD(v248) = STACK[0x64E8];
  LODWORD(v251) = STACK[0x6670];
  LODWORD(v258) = STACK[0x6670] & 0x82C27A06 ^ 0x41613D03;
  LODWORD(STACK[0x64B0]) = v258;
  LODWORD(STACK[0x64B8]) = v21 & v258;
  LODWORD(STACK[0x6270]) = ((v25 & v258) << v26) ^ ((v21 & v258) >> v24);
  v260 = (33686018
        * (((v248 ^ 0xEBC828D3) + 1797897272) ^ ((v248 ^ 0xDC9EE2F4) + 1551857169) ^ ((v248 ^ 0x6E9AC1C1) - 293907162))
        - 1369392134) & 0x82C27A06 ^ 0x41613D03;
  LODWORD(STACK[0x6268]) = ((v260 & v203) >> LODWORD(STACK[0x6AB0])) ^ ((v260 & v245) << v23);
  LODWORD(STACK[0x6260]) = ((v25 & v260) << v23) + ((v260 & v203) >> v24);
  v261 = (33686018
        * (((v248 ^ 0xFDBCDF6) + 255482131) ^ ((v248 ^ 0x597476CB) + 429253168) ^ ((v248 ^ LODWORD(STACK[0xB14]))
                                                                                 + 260187200))
        + 778091514) & 0x22104C9A ^ 0x1108264D;
  LODWORD(STACK[0x64A8]) = v261;
  LODWORD(STACK[0x6258]) = ((v25 & v261) << v23) + ((v261 & v203) >> LODWORD(STACK[0x6AB0]));
  LODWORD(v256) = v251 & 0x22104C9A ^ 0x1108264D;
  LODWORD(STACK[0x6480]) = v256;
  LODWORD(STACK[0x6250]) = ((v25 & v256) << v23) + ((v203 & v256) >> v24);
  LODWORD(STACK[0x64A0]) = ((v248 ^ 0x2655291C) + 649379321) ^ ((v248 ^ 0x5CEF7BD8) + 470740797) ^ ((v248 ^ 0x23765922)
                                                                                                  + 597151175);
  v262 = v251 & 0x225EE0F6 ^ 0x112F707B;
  LODWORD(v258) = (v25 & v262) << v26;
  LODWORD(STACK[0x6248]) = v258 + ((v203 & v262) >> v24);
  LODWORD(STACK[0x6240]) = v258 + ((v21 & v262) >> LODWORD(STACK[0x6AB0]));
  v263 = (LODWORD(STACK[0x6198]) ^ LODWORD(STACK[0x6190]))
       - ((2 * (LODWORD(STACK[0x6198]) ^ LODWORD(STACK[0x6190]))) & 0x2006F328);
  LODWORD(v258) = LODWORD(STACK[0x66E0]) - 2 * (STACK[0x66E0] & 0x2E965FEF ^ STACK[0x6578] & 0xC);
  v264 = LODWORD(STACK[0x61E8]) - 2 * (STACK[0x66C8] & LODWORD(STACK[0xB18]) ^ STACK[0x61DC] & 1);
  LODWORD(v256) = LODWORD(STACK[0x61C0]) ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6218]) ^ LODWORD(STACK[0x6438]) ^ LODWORD(STACK[0x61E0]) ^ LODWORD(STACK[0x6220]) ^ (LODWORD(STACK[0x65F0]) - ((2 * LODWORD(STACK[0x6590])) & 0xEC744592) - 1826309139) ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x6550]) ^ LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x65D0]) ^ LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x61A8]) ^ LODWORD(STACK[0x6570]) ^ LODWORD(STACK[0x65A8]) ^ LODWORD(STACK[0x61A0]) ^ LODWORD(STACK[0x61F8]) ^ LODWORD(STACK[0x6580]) ^ LODWORD(STACK[0x65E0]) ^ LODWORD(STACK[0x6588]) ^ LODWORD(STACK[0x6558]) ^ (LODWORD(STACK[0x65F8]) - ((2 * LODWORD(STACK[0x6528])) & 0xC8E004CA) - 1127940803) ^ LODWORD(STACK[0x6458]) ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x66D0]) ^ LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x65B8]) ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x65C0]) ^ LODWORD(STACK[0x65E8]);
  v265 = LODWORD(STACK[0x61F0]) ^ LODWORD(STACK[0x65B0]) ^ LODWORD(STACK[0x6450]);
  LODWORD(v19) = STACK[0x6560];
  LODWORD(STACK[0x6620]) = LODWORD(STACK[0x6560]) ^ (2 * LODWORD(STACK[0x64C0]));
  LODWORD(v19) = v256 ^ v265 ^ v19 ^ (v258 - 1365876765) ^ (v264 - 1729703796) ^ LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x6200]) ^ LODWORD(STACK[0x6510]) ^ LODWORD(STACK[0x66D8]) ^ LODWORD(STACK[0x6530]) ^ LODWORD(STACK[0x6710]) ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6708]) ^ (v263 - 1878820460);
  v266 = LODWORD(STACK[0x6538]) ^ LODWORD(STACK[0x6598]) ^ v243 ^ LODWORD(STACK[0x6540]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x6470]);
  v267 = STACK[0x66A0];
  LODWORD(v250) = STACK[0x66A8];
  LODWORD(STACK[0x65F8]) = v266 ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x6608]) ^ LODWORD(STACK[0x6468]) ^ LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x6568]) ^ LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x6548]) ^ LODWORD(STACK[0x6518]) ^ LODWORD(STACK[0x65D8]) ^ LODWORD(STACK[0x6238]) ^ LODWORD(STACK[0x65A0]) ^ LODWORD(STACK[0x6700]) ^ ((v19 ^ 0x48181A20) - 808767248 - 2 * ((v19 ^ 0x48181A20) & 0x4FCB30F9 ^ v19 & 9));
  LODWORD(STACK[0x65F0]) = v242 ^ v246 ^ (v236 >> LODWORD(STACK[0x6AB0])) ^ (((((2 * v237) & 0x47EA117E)
                                                                             - v237
                                                                             - 603261120) ^ 0xF38AB778) << v26) ^ LODWORD(STACK[0x67B0]) ^ (v234 + 932988934);
  LODWORD(STACK[0x65E8]) = ((v248 ^ 0x31AEB9D) - 2080669830) ^ ((v248 ^ 0xA4CC836C) + 606934921) ^ ((v248 ^ 0xFE1A6317)
                                                                                                  + 2130442228);
  v268 = ((v41 & 0x5E0A4848 ^ 0x40004040) - ((2 * (v41 & 0x5E0A4848 ^ 0x40004040)) & 0xAC041080) + 2004294754) ^ 0xB602C962;
  v269 = (2 * (((2 * v268) | 0x23D1BF3A) - v268) - 600948538) ^ 0x7B30DDE2;
  LODWORD(STACK[0x6238]) = ((v269 & v245) << v26) + ((v269 & v203) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6230]) = ((v21 & v269) >> LODWORD(STACK[0x6AB0])) + ((v269 & v245) << v23);
  v270 = v251 & 0xBC149090 ^ 0x5E0A4848;
  LODWORD(STACK[0x65E0]) = v270;
  v271 = (v203 & v270) >> v24;
  v272 = v25 & v270;
  LODWORD(STACK[0x65D8]) = v272;
  LODWORD(STACK[0x6228]) = (v272 << v26) | v271;
  v273 = STACK[0x6058];
  v274 = *(_DWORD *)(STACK[0x6188] + 4 * (LODWORD(STACK[0x6058]) % 0x101));
  v275 = *(_DWORD *)(STACK[0x6188] + 4 * (LODWORD(STACK[0x6520]) % 0x101));
  LODWORD(STACK[0x6220]) = v274 ^ 0xF06D855B ^ (v274 >> 2) & 0x3930C8D1;
  LODWORD(STACK[0x6218]) = v275 ^ 0xF927AA4 ^ (v275 >> 2) & 0x3930C8D1;
  v276 = (33686018
        * (((v248 ^ 0xC0AC7019) + 1078846718) ^ ((v248 ^ 0x9D8E35DF) + 493855036) ^ ((v248 ^ 0x4EE4E20) - 2079335739))
        - 1369392134) & 0x928E86BE ^ 0x4947435F;
  LODWORD(STACK[0x65D0]) = v25 & v276;
  LODWORD(STACK[0x6210]) = ((v25 & v276) << v26) | ((v21 & v276) >> v24);
  v277 = v251 & 0x928E86BE ^ 0x4947435F;
  LODWORD(STACK[0x6208]) = ((v203 & v277) >> LODWORD(STACK[0x6AB0])) + ((v245 & v277) << v23);
  LODWORD(STACK[0x6200]) = ((v21 & v277) >> LODWORD(STACK[0x6AB0])) | ((v245 & v277) << v26);
  LODWORD(v259) = ((v248 ^ 0x90022D5A) + 283359679) ^ ((v248 ^ 0xFE0AC9B7) + 2129354068) ^ ((v248 ^ 0x37C4EF0B)
                                                                                          - 1222280208);
  LODWORD(v247) = (33686018
                 * (((v248 ^ 0xE072DF4) - 1897481967) ^ ((v248 ^ 0x4C38D251) - 858175818) ^ ((v248 ^ 0x1BF3F443)
                                                                                           - 1693294424))
                 - 1369392134) & 0x9C82B8E2 ^ 0xCE415C71;
  LODWORD(v253) = v247 & v245;
  LODWORD(STACK[0x65C0]) = v21 & v247;
  LODWORD(STACK[0x61F8]) = ((v21 & v247) >> LODWORD(STACK[0x6AB0])) + ((v247 & v245) << v26);
  LODWORD(v258) = ((v248 ^ 0xB9AB6225) + 961214146) ^ ((v248 ^ 0xCAB7A6E1) + 173421062) ^ ((v248 ^ 0x2AD0CF22)
                                                                                         + 707877831);
  v278 = (33686018
        * (((v248 ^ LODWORD(STACK[0xB20])) + 507862344) ^ ((v248 ^ 0x80A67BC2) + 4714279) ^ ((v248 ^ 0x47CEB987)
                                                                                           - 953209500))
        - 1369392134) & 0xA8828ED4 ^ 0x5441476A;
  v279 = v278 & v245;
  LODWORD(STACK[0x65B0]) = v21 & v278;
  LODWORD(STACK[0x61F0]) = ((v21 & v278) >> v24) | ((v278 & v245) << v26);
  v280 = v251 & 0xA8828ED4 ^ 0x5441476A;
  LODWORD(STACK[0x65B8]) = v25 & v280;
  LODWORD(STACK[0x65C8]) = v203 & v280;
  LODWORD(STACK[0x61E8]) = ((v25 & v280) << v23) | ((v203 & v280) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6598]) = v250 & 0x41CDB75F ^ STACK[0x6418] & 4;
  v267 *= 2;
  v281 = STACK[0x6678];
  LODWORD(STACK[0x6590]) = LODWORD(STACK[0x6678]) - (v267 & 0xCC8B0320);
  LODWORD(STACK[0x65A8]) = v281 - 99275263 - (v267 & 0x9DDD2A8C);
  LODWORD(v248) = v251 & 0xDD720860 ^ 0x6EB90430;
  v282 = v245;
  v283 = (v245 & v248) << v26;
  v284 = (v21 & v248) >> v24;
  v285 = v284 + v283;
  v286 = v25;
  v287 = v25 & v248;
  LODWORD(STACK[0x61E0]) = (v287 << v26) | ((v21 & v248) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x61DC]) = (v287 << v26) | v284;
  LODWORD(v256) = (33686018 * v259 - 1369392134) & 0xDD720860 ^ 0x6EB90430;
  v288 = (v256 & v203) >> LODWORD(STACK[0x6AB0]);
  LODWORD(STACK[0x61D0]) = ((v286 & v256) << v23) + v288;
  v289 = (v256 & v282) << v23;
  LODWORD(STACK[0x61C8]) = v289 + ((v256 & v203) >> v24);
  LODWORD(STACK[0x61C0]) = v288 | v289;
  LODWORD(STACK[0x65A0]) = ((v21 & v256) >> v24) ^ ((v256 & v282) << v26);
  LODWORD(STACK[0x61BC]) = (v287 << v23) | ((v203 & v248) >> LODWORD(STACK[0x6AB0]));
  LODWORD(v248) = (33686018 * v258 + 778091514) & 0x253C369E ^ 0x129E1B4F;
  v290 = (v248 & v282) << v23;
  LODWORD(STACK[0x61B0]) = ((v21 & v248) >> LODWORD(STACK[0x6AB0])) | v290;
  v291 = (v21 & v248) >> v24;
  LODWORD(STACK[0x61A8]) = ((v286 & v248) << v23) | v291;
  LODWORD(STACK[0x61A0]) = v291 + v290;
  LODWORD(STACK[0x6198]) = v291 + ((v248 & v282) << v26);
  LODWORD(v19) = v278 & v203;
  LODWORD(STACK[0x6190]) = ((v286 & v278) << v26) ^ ((v278 & v203) >> v24);
  v292 = v21 & v280;
  LODWORD(STACK[0x6188]) = ((v21 & v280) >> LODWORD(STACK[0x6AB0])) + ((v282 & v280) << v23);
  LODWORD(STACK[0x6180]) = (LODWORD(STACK[0x64D0]) >> v24) ^ (LODWORD(STACK[0x64C8]) << v23);
  LODWORD(STACK[0x6178]) = ((STACK[0x6158] & v282) << v26) ^ LODWORD(STACK[0x6170]) ^ LODWORD(STACK[0x6400]);
  LODWORD(STACK[0x6170]) = ((STACK[0x616C] & v282) << v23) ^ (LODWORD(STACK[0x6068]) >> v24);
  LODWORD(STACK[0x616C]) = LODWORD(STACK[0x6148]) ^ (LODWORD(STACK[0x6150]) >> v24);
  v293 = v286;
  LODWORD(STACK[0x6160]) = ((v286 & STACK[0x6160]) << v23) ^ (LODWORD(STACK[0x6070]) >> v24);
  LODWORD(STACK[0x6158]) = LODWORD(STACK[0x6138]) ^ ((STACK[0x6140] & v282) << v23);
  LODWORD(STACK[0x6150]) = ((v286 & STACK[0x6130]) << v23) ^ LODWORD(STACK[0x6110]);
  LODWORD(STACK[0x6148]) = (LODWORD(STACK[0x60F8]) << v26) ^ (LODWORD(STACK[0x60F0]) >> v24);
  LODWORD(STACK[0x6140]) = ((STACK[0x60E8] & v203) >> v24) ^ (LODWORD(STACK[0x6078]) << v23);
  LODWORD(STACK[0x6138]) = LODWORD(STACK[0x60B0]) ^ (LODWORD(STACK[0x60C8]) << v26);
  LODWORD(STACK[0x6130]) = ((v286 & STACK[0x6088]) << v26) ^ (LODWORD(STACK[0x6080]) >> LODWORD(STACK[0x6AB0]));
  LODWORD(STACK[0x6128]) = LODWORD(STACK[0x6120]) ^ STACK[0x6128] & 0x32C9BD6D;
  LODWORD(STACK[0x6588]) = ((LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0xB2C])) - 495649368) ^ ((LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0xB28]))
                                                                                           + 1696457987) ^ ((LODWORD(STACK[0x66C0]) ^ 0xA72C8225) + 1176003856);
  LODWORD(STACK[0x6120]) = LODWORD(STACK[0x64F8]) ^ LODWORD(STACK[0x6428]);
  v294 = STACK[0x6118];
  LODWORD(STACK[0x6118]) = (v21 & STACK[0x6118]) >> v24;
  LODWORD(STACK[0x6110]) = (v286 & v294) << v23;
  LODWORD(STACK[0x6108]) *= 2;
  LODWORD(STACK[0x6710]) = LODWORD(STACK[0x6060]) ^ 0xE6FCEF79;
  LODWORD(STACK[0x6700]) = LODWORD(STACK[0x6050]) - 419631239;
  LODWORD(STACK[0x6A90]) = LODWORD(STACK[0x6048]) - 419631239;
  LODWORD(STACK[0x66F8]) = LODWORD(STACK[0x6040]) ^ 0xE6FCEF79;
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x6038]) ^ 0x8F3D787D;
  LODWORD(STACK[0x66E0]) = LODWORD(STACK[0x6030]) ^ 0x8F3D787D;
  LODWORD(STACK[0x66F0]) = LODWORD(STACK[0x6028]) ^ 0x8F3D787D;
  LODWORD(STACK[0x66D8]) = LODWORD(STACK[0x6020]) - 1891796867;
  LODWORD(STACK[0x66C8]) = LODWORD(STACK[0x6018]) ^ 0x9B413E7E;
  LODWORD(STACK[0x66E8]) = LODWORD(STACK[0x6010]) - 1690222978;
  LODWORD(STACK[0x66D0]) = LODWORD(STACK[0x6008]) - 1690222978;
  LODWORD(STACK[0x66C0]) = LODWORD(STACK[0x6498]) - 1690222978;
  LODWORD(STACK[0x60F8]) = (LODWORD(STACK[0x64E0]) + 932988934) ^ LODWORD(STACK[0x6830]);
  LODWORD(v248) = LODWORD(STACK[0x6620]) ^ 0x573A1D6;
  v295 = v248 & v282;
  LODWORD(v248) = v203 & v248;
  v296 = v295 << v23;
  v297 = v248 >> LODWORD(STACK[0x6AB0]);
  LODWORD(STACK[0x60F0]) = v296;
  LODWORD(STACK[0x6678]) = v297 ^ v296;
  LODWORD(STACK[0x6620]) = (LODWORD(STACK[0x64D8]) + 1543503872) ^ 0x50;
  LODWORD(STACK[0x60E8]) = (v282 & STACK[0x64B0]) << v26;
  LODWORD(STACK[0x60C8]) = LODWORD(STACK[0x64B8]) >> LODWORD(STACK[0x6AB0]);
  LODWORD(v258) = STACK[0x6480];
  LODWORD(STACK[0x60B0]) = (v282 & STACK[0x6480]) << v26;
  v298 = v21;
  LODWORD(STACK[0x6088]) = (v21 & v258) >> v24;
  LODWORD(v258) = STACK[0x64A8];
  LODWORD(STACK[0x6080]) = (STACK[0x64A8] & v282) << v26;
  LODWORD(STACK[0x6078]) = (v21 & v258) >> LODWORD(STACK[0x6AB0]);
  LODWORD(v251) = (33686018 * LODWORD(STACK[0x64A0]) + 778091514) & 0x225EE0F6 ^ 0x112F707B;
  v299 = (v21 & v251) >> LODWORD(STACK[0x6AB0]);
  v300 = (v251 & v282) << v23;
  LODWORD(STACK[0x6070]) = v300;
  LODWORD(STACK[0x6068]) = v299 | v300;
  LODWORD(STACK[0x6060]) = (v251 & v203) >> v24;
  LODWORD(STACK[0x6058]) = -707661395 * v273;
  LODWORD(STACK[0x6050]) = -707661395 * LODWORD(STACK[0x6520]);
  LODWORD(v250) = STACK[0x6440];
  LODWORD(v256) = STACK[0x65F8];
  LODWORD(STACK[0x6048]) = 953178139 * (LODWORD(STACK[0x6440]) - LODWORD(STACK[0x65F8]));
  LODWORD(v258) = STACK[0x65F0];
  LODWORD(STACK[0x6040]) = 442367143 * (v250 - LODWORD(STACK[0x65F0]));
  v301 = STACK[0x6670];
  LODWORD(v251) = STACK[0x6670] & LODWORD(STACK[0xB1C]) ^ 0xF25E291C;
  v302 = (v282 & v251) << v23;
  v303 = (v298 & v251) >> LODWORD(STACK[0x6AB0]);
  LODWORD(v251) = (33686018 * LODWORD(STACK[0x65E8]) - 1369392134) & STACK[0xB1C] ^ 0xF25E291C;
  v304 = (v286 & v251) << v26;
  v305 = (v251 & v203) >> v24;
  LODWORD(STACK[0x6018]) = LODWORD(STACK[0x65D8]) << v23;
  LODWORD(STACK[0x6010]) = (v298 & STACK[0x65E0]) >> v24;
  LODWORD(STACK[0x6008]) = 697338651 * (v256 - v250);
  LODWORD(STACK[0x6000]) = -1235187815 * v258;
  LODWORD(STACK[0x5FF8]) = LODWORD(STACK[0x65D0]) << v23;
  LODWORD(STACK[0x5FF0]) = (v276 & v203) >> v24;
  LODWORD(v256) = STACK[0x63F0];
  LODWORD(STACK[0x5FE8]) = LODWORD(STACK[0x63F0]) ^ v285;
  v306 = v301;
  v307 = v301 & 0x9C82B8E2 ^ 0xCE415C71;
  LODWORD(v259) = v286 & v307;
  v308 = v298 & v307;
  v309 = (v286 & v307) << v26;
  LODWORD(STACK[0x5FD8]) = v309 | ((v298 & v307) >> v24);
  v310 = v247 & v203;
  v311 = (_DWORD)v253 << v23;
  LODWORD(v253) = STACK[0x6AB0];
  LODWORD(STACK[0x5FC8]) = (v247 & v203 ^ v248) >> LODWORD(STACK[0x6AB0]);
  LODWORD(STACK[0x5FC0]) = (_DWORD)v259 << v23;
  v312 = v203 & v307;
  LODWORD(v258) = v306 & 0x253C369E ^ 0x129E1B4F;
  LODWORD(STACK[0x5FB8]) = (v203 & v258) >> v24;
  LODWORD(v248) = (v203 & v258) >> v253;
  LODWORD(STACK[0x5FA8]) = ((v282 & v258) << v26) | v248;
  v313 = v279 << v23;
  LODWORD(STACK[0x5F98]) = v19 >> v253;
  LODWORD(v247) = LODWORD(STACK[0x65B8]) << v26;
  LODWORD(STACK[0x5F90]) = v247;
  LODWORD(STACK[0x5F88]) = v247 | (v292 >> v24);
  LODWORD(STACK[0x5F80]) = LODWORD(STACK[0x6590]) - 1855183556;
  LODWORD(STACK[0x5F78]) = LODWORD(STACK[0x66A8]) - 2 * LODWORD(STACK[0x6598]) + 1104000859;
  LODWORD(STACK[0x5F70]) = LODWORD(STACK[0x65A8]) + 2801;
  LODWORD(STACK[0x5F68]) = LODWORD(STACK[0x6438]) - ((2 * LODWORD(STACK[0x6438])) & 0x56358D84) - 1424308542;
  LODWORD(STACK[0x5F60]) = LODWORD(STACK[0x65A0]) ^ v256;
  LODWORD(STACK[0x5FE0]) = v309;
  LODWORD(STACK[0x5F58]) = v309 + (v308 >> v253);
  LODWORD(STACK[0x5F50]) = v311 + (v310 >> v24);
  v314 = LODWORD(STACK[0x65C0]) >> v24;
  LODWORD(STACK[0x5FD0]) = v311;
  LODWORD(STACK[0x5F48]) = v314 | v311;
  LODWORD(STACK[0x5F40]) = v312 >> v24;
  LODWORD(STACK[0x5F38]) = v312 >> v253;
  LODWORD(STACK[0x6670]) = (v293 & v258) << v26;
  LODWORD(STACK[0x5FB0]) = v248;
  LODWORD(STACK[0x5F30]) = ((v293 & v258) << v23) | v248;
  LODWORD(STACK[0x5F28]) = LODWORD(STACK[0x65C8]) >> v24;
  v315 = LODWORD(STACK[0x65B0]) >> v253;
  LODWORD(STACK[0x5FA0]) = v313;
  LODWORD(STACK[0x5F20]) = v315 + v313;
  v316 = STACK[0x6610];
  LODWORD(STACK[0x5F18]) = STACK[0x6610] & 0xD415FBB5;
  LODWORD(STACK[0x5F10]) = v316 & 0x66F583EC;
  v317 = STACK[0x6618];
  LODWORD(STACK[0x5F08]) = STACK[0x6618] & 0x64512FE1;
  LODWORD(STACK[0x5F00]) = v317 & 0x1A39E1A4;
  v318 = STACK[0x66B8];
  LODWORD(STACK[0x5EF8]) = STACK[0x66B8] & 0x49580170;
  LODWORD(STACK[0x5EF0]) = v318 & 0xABA72F5B;
  v319 = STACK[0x6668];
  LODWORD(STACK[0x5EE8]) = STACK[0x6668] & 0x5C68F582;
  LODWORD(STACK[0x5EE0]) = v319 & 0x754A541F;
  v320 = STACK[0x6650];
  LODWORD(STACK[0x5ED8]) = LODWORD(STACK[0x6650]) ^ 0x23F7F806;
  LODWORD(STACK[0x5ED0]) = v320 ^ 0x70098D87;
  LODWORD(STACK[0x5EC8]) = v320 ^ 0x69A9D96F;
  v321 = STACK[0x6600];
  LODWORD(STACK[0x5EC0]) = LODWORD(STACK[0x6600]) ^ 0x207CAD4E;
  LODWORD(STACK[0x5EB8]) = v321 ^ 0x3B3D9BA7;
  LODWORD(STACK[0x5EB0]) = v321 & 0xABD586EB;
  LODWORD(STACK[0x5EA8]) = v321 ^ LODWORD(STACK[0xB24]);
  LODWORD(STACK[0x5EA0]) = v321 & 0x66D9AD3E;
  LODWORD(STACK[0x5E98]) = v321 & 0xBDF72F12;
  LODWORD(STACK[0x5E90]) = v321 ^ 0x434B4D72;
  LODWORD(STACK[0x5E88]) = v321 ^ 0xCB1F8F7;
  v322 = *(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6500]));
  LODWORD(STACK[0x6668]) = LODWORD(STACK[0x6588]) + 1091373554;
  HIDWORD(v323) = STACK[0x64F0];
  LODWORD(v323) = STACK[0x64F0];
  LODWORD(STACK[0x5E80]) = v323 >> 7;
  LODWORD(STACK[0x6038]) = v302;
  LODWORD(STACK[0x6030]) = v303;
  LODWORD(STACK[0x5E78]) = v303 + v302;
  LODWORD(STACK[0x6028]) = v304;
  LODWORD(STACK[0x6020]) = v305;
  LODWORD(STACK[0x5E70]) = v304 + v305;
  LODWORD(STACK[0x5E68]) = -1235187815 * v250;
  LODWORD(v19) = STACK[0x63E8];
  LODWORD(STACK[0x5E60]) = 1528711187 * LODWORD(STACK[0x63E8]);
  LODWORD(STACK[0x5E58]) = v19 ^ v250;
  return ((uint64_t (*)(void))(v322 - 8))();
}

uint64_t sub_100CD2394@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, char a4@<W5>, char a5@<W6>, unsigned int a6@<W7>, uint64_t a7@<X8>)
{
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  char v11;
  char v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  unsigned int v43;
  int v44;
  uint64_t v45;
  unsigned int v46;
  int v47;
  unint64_t v48;
  int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  unint64_t v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unint64_t v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  BOOL v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  uint64_t v178;
  BOOL v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  _DWORD *v293;
  unint64_t v294;
  unsigned int v295;
  unint64_t v296;
  _DWORD *v297;
  unint64_t v298;
  unint64_t v299;
  _DWORD *v300;
  uint64_t v301;
  unint64_t v302;
  unint64_t v303;
  _DWORD *v304;
  unsigned int v305;
  uint64_t v306;
  _DWORD *v307;
  uint64_t v308;
  _DWORD *v309;
  uint64_t v310;
  unint64_t v311;
  uint64_t v312;
  unint64_t v313;
  uint64_t v314;
  _DWORD *v315;
  _DWORD *v316;
  int *v317;
  int v318;
  uint64_t v319;
  unsigned int v320;
  _DWORD *v321;
  _DWORD *v322;
  uint64_t v323;
  _DWORD *v324;
  uint64_t v325;
  _DWORD *v326;
  _DWORD *v327;
  _DWORD *v328;
  uint64_t v329;
  _DWORD *v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  unint64_t v334;
  unint64_t v335;
  unint64_t v336;
  _DWORD *v337;
  uint64_t v338;
  _DWORD *v339;
  uint64_t v340;
  _DWORD *v341;
  uint64_t v342;
  _DWORD *v343;
  uint64_t v344;
  unint64_t v345;
  uint64_t v346;
  _DWORD *v347;
  uint64_t v348;
  _DWORD *v349;
  int v350;
  _DWORD *v351;
  uint64_t v352;
  unint64_t v353;
  uint64_t v354;
  unint64_t v355;
  unint64_t v356;
  _DWORD *v357;
  _DWORD *v358;
  unint64_t v359;
  unint64_t v360;
  uint64_t v361;
  _DWORD *v362;
  uint64_t v363;
  unint64_t v364;
  uint64_t v365;
  _DWORD *v366;
  _DWORD *v367;
  uint64_t v368;
  _DWORD *v369;
  uint64_t v370;
  _DWORD *v371;
  _DWORD *v372;
  _DWORD *v373;
  _DWORD *v374;
  uint64_t v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  uint64_t v382;
  uint64_t v383;
  _DWORD *v384;
  uint64_t v385;
  _DWORD *v386;
  uint64_t v387;
  unint64_t v388;
  uint64_t v389;
  unint64_t v390;
  uint64_t v391;
  _DWORD *v392;
  uint64_t v393;
  unint64_t v394;
  uint64_t v395;
  _DWORD *v396;
  uint64_t v397;
  unint64_t v398;
  uint64_t v399;
  _DWORD *v400;
  uint64_t v401;
  _DWORD *v402;
  _DWORD *v403;
  unint64_t v404;
  uint64_t v405;
  _DWORD *v406;
  uint64_t v407;
  _DWORD *v408;
  uint64_t v409;
  unint64_t v410;
  unint64_t v411;
  uint64_t v412;
  unint64_t v413;
  _DWORD *v414;
  uint64_t v415;
  _DWORD *v416;
  uint64_t v417;
  unint64_t v418;
  _DWORD *v419;
  uint64_t v420;
  unint64_t v421;
  unint64_t v422;
  _DWORD *v423;
  _DWORD *v424;
  _DWORD *v425;
  uint64_t v426;
  unint64_t v427;
  uint64_t v428;
  _DWORD *v429;
  _DWORD *v430;
  unint64_t v431;
  uint64_t v432;
  _DWORD *v433;
  uint64_t v434;
  _DWORD *v435;
  unint64_t v436;
  _DWORD *v437;
  int v438;
  unint64_t v439;
  unint64_t v440;
  uint64_t v441;
  _DWORD *v442;
  uint64_t v443;
  unint64_t v444;
  unint64_t v445;
  uint64_t v446;
  _DWORD *v447;
  uint64_t v448;
  _DWORD *v449;
  _DWORD *v450;
  unint64_t v451;
  uint64_t v452;
  _DWORD *v453;
  uint64_t v454;
  unint64_t v455;
  uint64_t v456;
  unint64_t v457;
  uint64_t v458;
  _DWORD *v459;
  int v460;
  uint64_t v461;
  _DWORD *v462;
  uint64_t v463;
  unint64_t v464;
  uint64_t v465;
  unint64_t v466;
  uint64_t v467;
  _DWORD *v468;
  unint64_t v469;
  uint64_t v470;
  _DWORD *v471;
  uint64_t v472;
  uint64_t v473;
  _DWORD *v474;
  uint64_t v475;
  _DWORD *v476;
  uint64_t v477;
  _DWORD *v478;
  uint64_t v479;
  unint64_t v480;
  uint64_t v481;
  _DWORD *v482;
  uint64_t v483;
  _DWORD *v484;
  uint64_t v485;
  unint64_t v486;
  unint64_t v487;
  int v488;
  unint64_t v489;
  uint64_t v490;
  _DWORD *v491;
  uint64_t v492;
  _DWORD *v493;
  uint64_t v494;
  unint64_t v495;
  uint64_t v496;
  _DWORD *v497;
  _DWORD *v498;
  uint64_t v499;
  unint64_t v500;
  uint64_t v501;
  unint64_t v502;
  uint64_t v503;
  unint64_t v504;
  uint64_t v505;
  unint64_t v506;
  uint64_t v507;
  unint64_t v508;
  uint64_t v509;
  _DWORD *v510;
  unint64_t v511;
  unint64_t v512;
  unint64_t v513;
  _DWORD *v514;
  _DWORD *v515;
  uint64_t v516;
  _DWORD *v517;
  uint64_t v518;
  unint64_t v519;
  unint64_t v520;
  _DWORD *v521;
  uint64_t v522;
  _DWORD *v523;
  uint64_t v524;
  _DWORD *v525;
  _DWORD *v526;
  uint64_t v527;
  unint64_t v528;
  uint64_t v529;
  unint64_t v530;
  unint64_t v531;
  _DWORD *v532;
  uint64_t v533;
  _DWORD *v534;
  uint64_t v535;
  _DWORD *v536;
  uint64_t v537;
  unint64_t v538;
  unint64_t v539;
  _DWORD *v540;
  uint64_t v541;
  unint64_t v542;
  uint64_t v543;
  _DWORD *v544;
  uint64_t v545;
  _DWORD *v546;
  uint64_t v547;
  _DWORD *v548;
  uint64_t v549;
  _DWORD *v550;
  uint64_t v551;
  _DWORD *v552;
  int v553;
  unint64_t v554;
  _DWORD *v555;
  _DWORD *v556;
  _DWORD *v557;
  unint64_t v558;
  _DWORD *v559;
  unint64_t v560;
  uint64_t v561;
  _DWORD *v562;
  uint64_t v563;
  _DWORD *v564;
  uint64_t v565;
  _DWORD *v566;
  unint64_t v567;
  unint64_t v568;
  int v569;
  _DWORD *v570;
  uint64_t v571;
  uint64_t v572;
  _DWORD *v573;
  unsigned int v574;
  unint64_t v575;
  unint64_t v576;
  unint64_t v577;
  uint64_t v578;
  _DWORD *v579;
  unint64_t v580;
  _DWORD *v581;
  _DWORD *v582;
  uint64_t v583;
  _DWORD *v584;
  uint64_t v585;
  _DWORD *v586;
  _DWORD *v587;
  int *v588;
  int v589;
  uint64_t v590;
  int v591;
  int *v592;
  int v593;
  _DWORD *v594;
  uint64_t v595;
  _DWORD *v596;
  uint64_t v597;
  _DWORD *v598;
  uint64_t v599;
  unint64_t v600;
  unint64_t v601;
  unint64_t v602;
  _DWORD *v603;
  uint64_t v604;
  unint64_t v605;
  uint64_t v606;
  unint64_t v607;
  uint64_t v608;
  _DWORD *v609;
  uint64_t v610;
  unint64_t v611;
  uint64_t v612;
  _DWORD *v613;
  uint64_t v614;
  _DWORD *v615;
  uint64_t v616;
  _DWORD *v617;
  _DWORD *v618;
  _DWORD *v619;
  uint64_t v620;
  _DWORD *v621;
  _DWORD *v622;
  uint64_t v623;
  uint64_t v624;
  _DWORD *v625;
  _DWORD *v626;
  unint64_t v627;
  unint64_t v628;
  uint64_t v629;
  _DWORD *v630;
  _DWORD *v631;
  _DWORD *v632;
  _DWORD *v633;
  _DWORD *v634;
  _DWORD *v635;
  _DWORD *v636;
  uint64_t v637;
  _DWORD *v638;
  uint64_t v639;
  unint64_t v640;
  unint64_t v641;
  _DWORD *v642;
  int v643;
  uint64_t v644;
  int v645;
  unint64_t v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  unint64_t v650;
  _DWORD *v651;
  _DWORD *v652;
  unint64_t v653;
  _DWORD *v654;
  _DWORD *v655;
  _DWORD *v656;
  unint64_t v657;
  _DWORD *v658;
  _DWORD *v659;
  uint64_t v660;
  _DWORD *v661;
  int v662;
  int v663;
  int v664;
  int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  int v676;
  unsigned int v677;
  int v678;
  int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  unsigned int v691;
  int v692;
  unsigned int v693;
  int v694;
  unsigned int v695;
  unsigned int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  char v701;
  char v702;
  int v703;
  unsigned int v704;
  int v705;
  unsigned int v706;
  char v707;
  unsigned int v708;
  unsigned int v709;
  int v710;
  unsigned int v711;
  unsigned int v712;
  char v713;
  int v714;
  int v715;
  int v716;
  unsigned int v717;
  unsigned int v718;
  int v719;
  int v720;
  int v721;
  int v722;
  unsigned int v723;
  unsigned int v724;
  int v725;
  int v726;
  int v727;
  unsigned int v728;
  int v729;
  unsigned int v730;
  int v731;
  int v732;
  int v733;
  unsigned int v734;
  int v735;
  int v736;
  int v737;
  int v738;
  unsigned int v739;
  unsigned int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  int v746;
  unsigned int v747;
  int v748;
  int v749;
  int v750;
  unsigned int v751;
  unsigned int v752;
  unsigned int v753;
  unint64_t v754;
  unint64_t v755;
  int v756;
  _DWORD *v757;
  uint64_t v758;
  unsigned int v759;
  uint64_t v760;
  _DWORD *v761;
  uint64_t v762;
  unint64_t v763;
  uint64_t v764;
  _DWORD *v765;
  uint64_t v766;
  _DWORD *v767;
  _DWORD *v768;
  uint64_t v769;
  unint64_t v770;
  uint64_t v771;
  _DWORD *v772;
  uint64_t v773;
  unint64_t v774;
  unint64_t v775;
  int *v776;
  int v777;
  _DWORD *v778;
  uint64_t v779;
  _DWORD *v780;
  uint64_t v781;
  unint64_t v782;
  uint64_t v783;
  _DWORD *v784;
  unsigned int v785;
  _DWORD *v786;
  uint64_t v787;
  uint64_t v788;
  _DWORD *v789;
  uint64_t v790;
  unint64_t v791;
  uint64_t v792;
  unint64_t v793;
  uint64_t v794;
  _DWORD *v795;
  _DWORD *v796;
  _DWORD *v797;
  uint64_t v798;
  unint64_t v799;
  uint64_t v800;
  _DWORD *v801;
  uint64_t v802;
  _DWORD *v803;
  uint64_t v804;
  _DWORD *v805;
  uint64_t v806;
  _DWORD *v807;
  uint64_t v808;
  _DWORD *v809;
  uint64_t v810;
  _DWORD *v811;
  uint64_t v812;
  _DWORD *v813;
  uint64_t v814;
  unint64_t v815;
  uint64_t v816;
  _DWORD *v817;
  _DWORD *v818;
  uint64_t v819;
  uint64_t v820;
  _DWORD *v821;
  uint64_t v822;
  _DWORD *v823;
  uint64_t v824;
  _DWORD *v825;
  uint64_t v826;
  _DWORD *v827;
  uint64_t v828;
  unint64_t v829;
  uint64_t v830;
  _DWORD *v831;
  uint64_t v832;
  _DWORD *v833;
  uint64_t v834;
  _DWORD *v835;
  uint64_t v836;
  unint64_t v837;
  uint64_t v838;
  _DWORD *v839;
  uint64_t v840;
  _DWORD *v841;
  uint64_t v842;
  _DWORD *v843;
  uint64_t v844;
  unint64_t v845;
  uint64_t v846;
  _DWORD *v847;
  _DWORD *v848;
  uint64_t v849;
  unsigned int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  int *v854;
  int v855;
  uint64_t v856;
  int *v857;
  uint64_t v858;
  int *v859;
  uint64_t v860;
  int *v861;
  uint64_t v862;
  int *v863;
  uint64_t v864;
  int *v865;
  uint64_t v866;
  int *v867;
  char v868;
  int v869;
  int v870;
  int v871;
  int v872;
  int v873;
  int *v874;
  int v875;
  unint64_t v876;
  int v877;
  int *v878;
  int *v879;
  uint64_t v880;
  unint64_t v881;
  uint64_t v882;
  _DWORD *v883;
  _DWORD *v884;
  int *v885;
  int v886;
  int *v887;
  int v888;
  int *v889;
  int v890;
  uint64_t v891;
  unsigned int v892;
  unsigned int v893;
  unsigned int v894;
  int *v895;
  int v896;
  uint64_t v897;
  int v898;
  int *v899;
  int v900;
  _DWORD *v901;
  unint64_t v902;
  unint64_t v903;
  _DWORD *v904;
  _DWORD *v905;
  _DWORD *v906;
  unint64_t v907;
  _DWORD *v908;
  uint64_t v909;
  _DWORD *v910;
  uint64_t v911;
  int *v912;
  uint64_t v913;
  int *v914;
  uint64_t v915;
  unint64_t v916;
  uint64_t v917;
  unint64_t v918;
  uint64_t v919;
  unsigned int *v920;
  unsigned int v921;
  int v922;
  unsigned int *v923;
  unsigned int v924;
  unint64_t v925;
  unsigned int *v926;
  uint64_t v927;
  unint64_t v928;
  uint64_t v929;
  _DWORD *v930;
  _DWORD *v931;
  unint64_t v932;
  _DWORD *v933;
  unsigned int v934;
  _DWORD *v935;
  _DWORD *v936;
  _DWORD *v937;
  uint64_t v938;
  unint64_t v939;
  uint64_t v940;
  _DWORD *v941;
  uint64_t v942;
  _DWORD *v943;
  uint64_t v944;
  _DWORD *v945;
  _DWORD *v946;
  int *v947;
  int v948;
  uint64_t v949;
  uint64_t v950;
  unint64_t v951;
  int v952;
  _DWORD *v953;
  uint64_t v954;
  _DWORD *v955;
  uint64_t v956;
  _DWORD *v957;
  uint64_t v958;
  _DWORD *v959;
  uint64_t v960;
  unint64_t v961;
  uint64_t v962;
  _DWORD *v963;
  uint64_t v964;
  _DWORD *v965;
  _DWORD *v966;
  _DWORD *v967;
  uint64_t v968;
  _DWORD *v969;
  uint64_t v970;
  _DWORD *v971;
  uint64_t v972;
  _DWORD *v973;
  uint64_t v974;
  _DWORD *v975;
  uint64_t v976;
  unint64_t v977;
  uint64_t v978;
  unint64_t v979;
  unsigned int v980;
  uint64_t v981;
  _DWORD *v982;
  char *v983;
  unint64_t v984;
  char *v985;
  uint64_t v986;
  char *v987;
  uint64_t v988;
  unint64_t v989;
  uint64_t v990;
  unint64_t v991;
  uint64_t v992;
  unint64_t v993;
  uint64_t v994;
  _DWORD *v995;
  uint64_t v996;
  _DWORD *v997;
  _DWORD *v998;
  _DWORD *v999;
  uint64_t v1000;
  unint64_t v1001;
  uint64_t v1002;
  _DWORD *v1003;
  _DWORD *v1004;
  _DWORD *v1005;
  _DWORD *v1006;
  _DWORD *v1007;
  uint64_t v1008;
  unint64_t v1009;
  uint64_t v1010;
  unint64_t v1011;
  int v1012;
  char *v1013;
  char *v1014;
  uint64_t v1015;
  unint64_t v1016;
  uint64_t v1017;
  unint64_t v1018;
  uint64_t v1019;
  _DWORD *v1020;
  uint64_t v1021;
  _DWORD *v1022;
  unint64_t v1023;
  uint64_t v1024;
  unint64_t v1025;
  uint64_t v1026;
  _DWORD *v1027;
  _DWORD *v1028;
  _DWORD *v1029;
  _DWORD *v1030;
  uint64_t v1031;
  unint64_t v1032;
  uint64_t v1033;
  _DWORD *v1034;
  _DWORD *v1035;
  _DWORD *v1036;
  uint64_t v1037;
  _DWORD *v1038;
  uint64_t v1039;
  _DWORD *v1040;
  uint64_t v1041;
  _DWORD *v1042;
  uint64_t v1043;
  _DWORD *v1044;
  unint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  int v1062;
  unint64_t v1063;
  unint64_t v1064;
  unint64_t v1065;
  BOOL v1066;
  int v1067;
  int v1068;
  int v1069;

  STACK[0x6690] = v7;
  LODWORD(STACK[0x6650]) = v7 ^ 0xABB;
  v18 = (((2 * (v9 & ((v7 ^ 0xABB) - 17323) ^ 0xBBC00AF0)) & 0x205E040)
       - (v9 & ((v7 ^ 0xABB) - 17323) ^ 0xBBC00AF0)
       + 2130513879) ^ 0xFB7D1D9E;
  v19 = -634085868 - (v18 | 0xDA349E14) + (v18 | 0x25CB61EB);
  LODWORD(STACK[0x6880]) = ((v9 & 0xFFFFFFF9 ^ 0xE4139888)
                          + (v9 & 0x262EA8F0 ^ 0x22C2072)
                          - ((v9 & 0xFFFFFFF9 ^ 0xE4139888) & 0x262EA8F0)) ^ 0x41C1570C;
  v20 = v9 & 0xFFFFFFFC ^ 0x83FC6773;
  STACK[0x6610] = v20;
  v21 = (v9 & 0xFFFFFFF4 ^ 0x78CB4930) - ((2 * (v9 & 0xFFFFFFF4 ^ 0x78CB4930)) & 0xE14D05E0);
  v22 = -255428591 - (v9 & 0xFFFFFFF6 ^ 0xF54BF884) + ((2 * (v9 & 0xFFFFFFF6 ^ 0xF54BF884)) | 0x1E72FB80);
  v23 = v9;
  v24 = ((v23 & 0xFFFFFFF0 ^ 0x7BBA7510)
       + (v23 & 0x2F80F580 ^ 0x4008087)
       - ((v23 & 0xFFFFFFF0 ^ 0x7BBA7510) & 0x2F80F580)) ^ 0x2A88FC9F;
  v25 = -1982934217 - v24 + ((2 * v24) | 0xEC62535A);
  v26 = (-1070559294 - (v23 & 0xFFFFFFFD ^ 0x3C7152E9) + ((2 * (v23 & 0xFFFFFFFD ^ 0x3C7152E9)) | 0x7F9EE07C)) ^ 0x3F9FFA5A;
  v27 = v26 - ((2 * v26) & 0xC121C48C);
  v28 = (v21 + 1889960691) ^ 0x8B91ACB8;
  STACK[0x6618] = v28;
  v29 = (v22 + 2607) ^ 0x798EE23FLL;
  STACK[0x6608] = v29;
  v30 = STACK[0xD870];
  STACK[0x65D0] = STACK[0xD870];
  v31 = STACK[0x6280];
  v32 = *(unsigned __int8 *)(v31 + (*(unsigned __int8 *)(v30 + v28) ^ 0xF9)) ^ 0x21 | ((*(unsigned __int8 *)(v31 + (*(unsigned __int8 *)(v30 + v29) ^ 0xB5)) ^ 0xE6) << 16);
  v33 = (v25 + 796) ^ 0x8B7F32DA;
  STACK[0x65C8] = v33;
  v34 = STACK[0x6290];
  v35 = *(_BYTE *)(STACK[0x6290] + (*(unsigned __int8 *)(v30 + v33) ^ 0xDDLL));
  LODWORD(STACK[0x6600]) = LODWORD(STACK[0x6668]) < 0x27E879D;
  if ((v35 & 2) != 0)
    v36 = -2;
  else
    v36 = 2;
  STACK[0x65C0] = v19 ^ 0x98771E2DLL;
  v37 = *(unsigned __int8 *)(a7 + (v19 ^ 0x98771E2DLL)) ^ 1;
  v38 = STACK[0x6278];
  LODWORD(v37) = *(unsigned __int8 *)(STACK[0x6278] + v37) ^ 0x7D;
  LODWORD(STACK[0x65F0]) = v23 & 0xFFFFFFF5;
  LODWORD(v37) = (v36 + v35) | ((_DWORD)v37 << 16);
  v39 = v32 | ((*(unsigned __int8 *)(v31 + (*(unsigned __int8 *)(v30 + (v23 & 0xFFFFFFF5 ^ 0x83FC677A)) ^ 0xB3)) ^ 0x45) << 8);
  v40 = *(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v30 + v20) ^ 0x4CLL));
  v41 = (v27 + 1620107846) ^ 0xDF4D5DB9;
  STACK[0x65E0] = v41;
  v42 = STACK[0x6288];
  v43 = v40 & 0xFFFF00FF | (((*(_BYTE *)(STACK[0x6288] + (*(unsigned __int8 *)(v30 + v41) ^ 0xDLL)) - 36) ^ 0x2E) << 8);
  LODWORD(v41) = v37 | ((*(unsigned __int8 *)(v31
                                            + (*(unsigned __int8 *)(v30
                                                                  + (((v23 & 0x7B7EEAC0 ^ 0x337E6001)
                                                                    + (v23 & 0x84811533)
                                                                    - 1) ^ 0xB082077ELL)) ^ 0xF8)) ^ 0xD6) << 24);
  LODWORD(STACK[0x65D8]) = v23 & 0xFFFFFFFB;
  v44 = *(unsigned __int8 *)(v38 + (*(unsigned __int8 *)(v30 + LODWORD(STACK[0x6880])) ^ 0xBCLL)) ^ a2;
  v45 = ((v23 & 0xD0E05698 ^ 0x90C04415) + (v23 & 0x2F1FA960) - 1) ^ 0x133C2363;
  STACK[0x65B0] = v45;
  LODWORD(v45) = (*(_BYTE *)(v42 + (*(unsigned __int8 *)(v30 + v45) ^ 0x4ALL)) - 36) ^ 0xE0 | (v44 << 8) | (((*(unsigned __int8 *)(v42 + (*(unsigned __int8 *)(v30 + ((((2 * (v23 & 0xFFFFFFFB ^ 0x66FFC323)) & 0x234CF126) - (v23 & 0xFFFFFFFB ^ 0x66FFC323) + 1851361132) ^ 0x8B5A2339)) ^ 0x44)) - 36) ^ 0x5C) << 24);
  LODWORD(STACK[0x65B8]) = v23 & 0xFFFFFFFA;
  v46 = (262059752 - (v23 & 0xFFFFFFFA ^ 0x53D4CED2 | 0xF9EB6E8) + (v23 & 0xFFFFFFFA ^ 0x53D4CED2 | 0xF0614917)) ^ 0xD0370F4C;
  v47 = *(unsigned __int8 *)(v31
                           + (*(unsigned __int8 *)(v30
                                                 + ((v46 - (STACK[0x25BC] & (2 * v46)) + 2022682294) ^ 0x88F14148)) ^ 0x19));
  v48 = v23 ^ 0x83FC6772;
  STACK[0x65A0] = v48;
  v49 = v45 | ((v47 ^ 0xB) << 16);
  LODWORD(v45) = v43 | ((*(unsigned __int8 *)(v38 + (*(unsigned __int8 *)(v30 + v48) ^ 4)) ^ 0xC8) << 24);
  v50 = (v23 & 0xFFFFFFFE ^ 0xF3F6F10C | 0xCB7790D) - (v23 & 0xFFFFFFFE ^ 0xF3F6F10C | 0xF34886F2) - 213350670;
  v51 = ((v50 & 0x9272D926 ^ 0x9040C922) + (v50 ^ 0x733308D) - ((v50 ^ 0x733308D) & 0x9272D926)) ^ 0xE9FC06D9;
  STACK[0x65E8] = v51;
  LODWORD(v45) = v45 | ((*(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v30 + v51) ^ 0xCFLL)) ^ 1) << 16);
  LODWORD(STACK[0x65F8]) = v23;
  v52 = (-399832183 - (v23 & 0xFFFFFFF7 ^ 0x7C138884) + ((2 * (v23 & 0xFFFFFFF7 ^ 0x7C138884)) & 0x2FA9DC22) + 1637) ^ 0x17C4FE10;
  STACK[0x6598] = v52;
  v53 = v39 | ((*(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v30 + v52) ^ 0xFBLL)) ^ a1) << 24);
  LODWORD(STACK[0x65A8]) = v23 & 0xFFFFFFF1;
  v54 = *(unsigned __int8 *)(v30
                           + ((((2 * (v23 & 0xFFFFFFF1 ^ 0xDF2A1650)) & 0x2875F42)
                             - (v23 & 0xFFFFFFF1 ^ 0xDF2A1650)
                             - 21213094) ^ 0xA26A2174));
  LODWORD(v52) = STACK[0x5EC0];
  LODWORD(STACK[0x6470]) = v45 ^ 0x4E;
  LODWORD(v41) = v41 & 0xFFFF00FF | (((*(_BYTE *)(v42 + (v54 ^ 5)) - 36) ^ 0x31) << 8);
  LODWORD(v45) = v45 ^ (2 * ((v45 ^ 0x4E) & v52 ^ v45 & 0x222DAE41)) ^ 0xCE;
  v55 = ((v45 & v10) >> v11) | ((v45 & v13) << v12);
  LODWORD(v54) = (v49 & STACK[0x6698] & 0x4F02C3D ^ 0x4D0283D)
               + (v49 & STACK[0x6698] ^ 0x22A14C2)
               - ((v49 & STACK[0x6698] ^ 0x22A14C2) & 0x4F02C3D);
  LODWORD(v52) = (v53 & STACK[0x6698] & 0x2013D922 ^ 0x11D902)
               + (v53 & STACK[0x6698] ^ LODWORD(STACK[0x25C0]))
               - ((v53 & STACK[0x6698] ^ LODWORD(STACK[0x25C0])) & 0x2013D922);
  LODWORD(v45) = STACK[0x5EB8];
  LODWORD(STACK[0x6468]) = v41 ^ 0x6C;
  LODWORD(v41) = v41 ^ (2 * ((v41 ^ 0x6C) & v45 ^ v41 & 0x396C98A8));
  LODWORD(STACK[0x6480]) = v49;
  v56 = (((v49 ^ (2 * (_DWORD)v54) ^ 0xDB471FE) & v14) << a5) + (((v49 ^ (2 * (_DWORD)v54) ^ 0xDB471FE) & a6) >> a4);
  LODWORD(STACK[0x6478]) = v53;
  v57 = (((v53 ^ (2 * (_DWORD)v52) ^ 0x9CA3B206) & v13) << a5) ^ (((v53 ^ (2 * (_DWORD)v52) ^ 0x9CA3B206) & a6) >> a4);
  v58 = (((v41 ^ 0x3C) & v14) << v12) | (((v41 ^ 0x3C) & v10) >> v11);
  LODWORD(v41) = -576326599 * (LODWORD(STACK[0x6940]) - LODWORD(STACK[0x6950]) + v56);
  LODWORD(v41) = -1646141551 * (v41 ^ WORD1(v41) ^ ((v41 ^ WORD1(v41)) >> 8) ^ v58);
  LODWORD(v41) = 1771908771 * ((v41 + WORD1(v41) - ((v41 + WORD1(v41)) >> 8)) ^ v57);
  LODWORD(v41) = 5169589 * (((v41 - WORD1(v41)) ^ ((v41 - WORD1(v41)) >> 8)) - v55);
  LODWORD(STACK[0x6990]) = ((LODWORD(STACK[0x6990]) - (v41 + WORD1(v41))) ^ (v41 + WORD1(v41)))
                         + 2 * ((LODWORD(STACK[0x6990]) - (v41 + WORD1(v41))) & (v41 + WORD1(v41)));
  v59 = STACK[0x6630];
  v60 = STACK[0x6628];
  v61 = (-576326599 * (v56 + v60 - v59)) ^ ((-576326599 * (v56 + v60 - v59)) >> 16);
  v62 = -1646141551 * (v61 ^ (v61 >> 8) ^ v58) + ((-1646141551 * (v61 ^ (v61 >> 8) ^ v58)) >> 16);
  v63 = 1771908771 * ((v62 - (v62 >> 8)) ^ v57);
  v64 = (v63 ^ LODWORD(STACK[0x6A80])) - v63 + 2 * (v63 & STACK[0x6A80]);
  v65 = ((LODWORD(STACK[0x6A40]) - v41) ^ v41) + 2 * ((LODWORD(STACK[0x6A40]) - v41) & v41);
  v66 = __ROR4__((LODWORD(STACK[0x6628]) - LODWORD(STACK[0x6630])) ^ 0xE09074A0, 11) ^ 0x941C120E;
  LODWORD(v48) = 5169589 * (((v63 - HIWORD(v63)) ^ ((v63 - HIWORD(v63)) >> 8)) - v55);
  v67 = STACK[0xD898];
  LODWORD(STACK[0x66B8]) = ((v48 + WORD1(v48)) ^ ((v48 + WORD1(v48)) >> 8)) - STACK[0xD898] + a3;
  v68 = LODWORD(STACK[0x69A0]) - a3;
  if ((a3 & 8) != 0)
    v69 = -8;
  else
    v69 = 8;
  v70 = (v69 + a3) ^ 8;
  v71 = LODWORD(STACK[0x6A70]) + a3 - v70;
  HIDWORD(v73) = v66;
  LODWORD(v73) = v66;
  v72 = v73 >> 21;
  LODWORD(STACK[0x6460]) = v60 - v72;
  LODWORD(STACK[0x6458]) = v72 + v59;
  LODWORD(STACK[0x6590]) = v56;
  v74 = (-576326599 * (v72 + v59 - (v60 - v72) + v56)) ^ ((-576326599 * (v72 + v59 - (v60 - v72) + v56)) >> 16);
  LODWORD(STACK[0x6588]) = v58;
  v75 = -1646141551 * (v74 ^ (v74 >> 8) ^ v58) + ((-1646141551 * (v74 ^ (v74 >> 8) ^ v58)) >> 16);
  LODWORD(STACK[0x6578]) = v57;
  v76 = 1771908771 * ((v75 - (v75 >> 8)) ^ v57) - ((1771908771 * ((v75 - (v75 >> 8)) ^ v57)) >> 16);
  LODWORD(STACK[0x6570]) = v55;
  v77 = 5169589 * ((v76 ^ (v76 >> 8)) - v55) + ((5169589 * ((v76 ^ (v76 >> 8)) - v55)) >> 16);
  STACK[0x6580] = v67;
  LODWORD(STACK[0x6970]) += (v77 ^ (v77 >> 8)) - v67;
  LODWORD(STACK[0x6A80]) = v68 + v70;
  v78 = (-576326599 * (v56 + v72)) ^ ((-576326599 * (v56 + v72)) >> 16);
  v79 = -1646141551 * (v78 ^ (v78 >> 8) ^ v58) + ((-1646141551 * (v78 ^ (v78 >> 8) ^ v58)) >> 16);
  v80 = 1771908771 * ((v79 - (v79 >> 8)) ^ v57) - ((1771908771 * ((v79 - (v79 >> 8)) ^ v57)) >> 16);
  v81 = 5169589 * ((v80 ^ (v80 >> 8)) - v55) + ((5169589 * ((v80 ^ (v80 >> 8)) - v55)) >> 16);
  v82 = (v81 ^ (v81 >> 8)) - v67;
  v83 = (((2 * ((v82 ^ 0x47D2136B) & 0x85A97951)) | 0x9F8D2AFA) - ((v82 ^ 0x47D2136B) & 0x85A97951) + 809069187) ^ (v82 ^ 0x47D2136B) & 0x85A97950;
  LODWORD(STACK[0x6AA0]) += v82;
  v84 = (v82 ^ 0xE2494BFC) & 0x76DF7BF ^ 0x30B9714F ^ (-854602484
                                                     - ((v82 ^ 0xE2494BFC) & 0x26032B1 | 0xCD0FCD0C)
                                                     + ((v82 ^ 0xE2494BFC) & 0x50DC50C | 0x32F032F3));
  LODWORD(STACK[0x6880]) = v84 - ((2 * v84) & 0x4AA52F4C);
  LODWORD(STACK[0x6450]) = v83;
  v85 = v83 == v8;
  v86 = STACK[0x6820];
  if (v83 == v8)
    v87 = STACK[0x6820];
  else
    v87 = v15;
  LODWORD(STACK[0x6A70]) = v87;
  v88 = STACK[0x6980];
  if (v83 == v8)
    v89 = v88;
  else
    v89 = v86;
  *(_QWORD *)(v16 - 152) = v89;
  v90 = STACK[0x6960];
  if (v83 == v8)
    v88 = STACK[0x6960];
  LODWORD(STACK[0x6820]) = v88;
  if (v83 == v8)
    v91 = v15;
  else
    v91 = v90;
  v92 = STACK[0x6790];
  if (v83 == v8)
    v93 = v17;
  else
    v93 = STACK[0x6790];
  LODWORD(STACK[0x6630]) = v93;
  v94 = STACK[0x6780];
  if (v83 != v8)
    v92 = STACK[0x6780];
  LODWORD(STACK[0x6538]) = v92;
  if (v83 == v8)
    v95 = v94;
  else
    v95 = STACK[0x67A0];
  if (v83 == v8)
    v96 = STACK[0x67A0];
  else
    v96 = v17;
  v97 = STACK[0x6AC0];
  v98 = STACK[0x6920];
  if (v85)
    v99 = STACK[0x6920];
  else
    v99 = STACK[0x6AC0];
  LODWORD(STACK[0x6500]) = v99;
  v100 = STACK[0x68D0];
  if (v85)
    v98 = STACK[0x68D0];
  LODWORD(STACK[0x6530]) = v98;
  if (v85)
    v101 = STACK[0x6890];
  else
    v101 = v100;
  if (v85)
    v102 = v97;
  else
    v102 = STACK[0x6890];
  v103 = STACK[0x6A90];
  v104 = STACK[0x6700];
  if (v85)
    v105 = STACK[0x6700];
  else
    v105 = STACK[0x6A90];
  LODWORD(STACK[0x6A40]) = v105;
  v106 = STACK[0x6710];
  if (v85)
    v104 = STACK[0x6710];
  LODWORD(STACK[0x6700]) = v104;
  v107 = STACK[0x66F8];
  if (v85)
    v106 = STACK[0x66F8];
  LODWORD(STACK[0x64F8]) = v106;
  if (v85)
    v108 = v103;
  else
    v108 = v107;
  v109 = STACK[0x6910];
  v110 = STACK[0x6900];
  if (v85)
    v111 = STACK[0x6910];
  else
    v111 = STACK[0x6900];
  LODWORD(STACK[0x69A0]) = v111;
  if (v85)
    v112 = STACK[0x68C0];
  else
    v112 = v109;
  v113 = STACK[0x68F0];
  if (v85)
    v114 = v110;
  else
    v114 = STACK[0x68F0];
  if (!v85)
    v113 = STACK[0x68C0];
  LODWORD(STACK[0x6910]) = v113;
  v115 = STACK[0x66F0];
  v116 = STACK[0x66E0];
  if (v85)
    v117 = STACK[0x66E0];
  else
    v117 = STACK[0x66F0];
  LODWORD(STACK[0x6628]) = v117;
  v118 = STACK[0x6708];
  if (v85)
    v119 = STACK[0x6708];
  else
    v119 = v116;
  if (v85)
    v120 = v115;
  else
    v120 = STACK[0x66D8];
  if (v85)
    v118 = STACK[0x66D8];
  LODWORD(STACK[0x66D8]) = v118;
  v121 = STACK[0x6930];
  v122 = STACK[0x68E0];
  if (v85)
    v123 = STACK[0x6930];
  else
    v123 = STACK[0x68E0];
  LODWORD(STACK[0x6568]) = v123;
  if (v85)
    v124 = v122;
  else
    v124 = STACK[0x68B0];
  if (v85)
    v125 = STACK[0x68A0];
  else
    v125 = v121;
  if (v85)
    v126 = STACK[0x68B0];
  else
    v126 = STACK[0x68A0];
  v127 = STACK[0x66E8];
  v128 = STACK[0x66C8];
  if (v85)
    v129 = STACK[0x66C8];
  else
    v129 = STACK[0x66E8];
  LODWORD(STACK[0x6560]) = v129;
  v130 = STACK[0x66C0];
  if (v85)
    v128 = STACK[0x66C0];
  LODWORD(STACK[0x64B8]) = v128;
  v131 = STACK[0x66D0];
  if (v85)
    v130 = STACK[0x66D0];
  LODWORD(STACK[0x66C8]) = v130;
  if (v85)
    v132 = v127;
  else
    v132 = v131;
  v133 = STACK[0x6A60];
  if (v85)
    v134 = v65;
  else
    v134 = STACK[0x6A60];
  LODWORD(STACK[0x6558]) = v134;
  if (v85)
    v135 = v71;
  else
    v135 = v65;
  LODWORD(STACK[0x64B0]) = v135;
  if (v85)
    v136 = v133;
  else
    v136 = v64;
  if (v85)
    v137 = v64;
  else
    v137 = v71;
  LODWORD(STACK[0x6528]) = v137;
  v138 = STACK[0x6760];
  v139 = STACK[0x6750];
  if (v85)
    v140 = STACK[0x6760];
  else
    v140 = STACK[0x6750];
  LODWORD(STACK[0x6550]) = v140;
  if (v85)
    v141 = v139;
  else
    v141 = STACK[0x6740];
  if (v85)
    v142 = STACK[0x6770];
  else
    v142 = v138;
  if (v85)
    v143 = STACK[0x6740];
  else
    v143 = STACK[0x6770];
  v144 = STACK[0x6A30];
  v145 = STACK[0x6A20];
  if (v85)
    v146 = STACK[0x6A30];
  else
    v146 = STACK[0x6A20];
  LODWORD(STACK[0x6548]) = v146;
  if (v85)
    v147 = STACK[0x6A50];
  else
    v147 = v144;
  if (v85)
    v148 = v145;
  else
    v148 = STACK[0x6A10];
  if (v85)
    v149 = STACK[0x6A10];
  else
    v149 = STACK[0x6A50];
  v150 = STACK[0x69E0];
  v151 = STACK[0x6A80];
  if (v85)
    v152 = STACK[0x69E0];
  else
    v152 = STACK[0x6A80];
  LODWORD(STACK[0x64F0]) = v152;
  v153 = STACK[0x69F0];
  if (v85)
    v150 = STACK[0x69F0];
  LODWORD(STACK[0x6520]) = v150;
  if (v85)
    v154 = STACK[0x6A00];
  else
    v154 = v153;
  if (!v85)
    v151 = STACK[0x6A00];
  LODWORD(STACK[0x64A8]) = v151;
  v155 = STACK[0x69D0];
  v156 = STACK[0x69C0];
  if (v85)
    v157 = STACK[0x69D0];
  else
    v157 = STACK[0x69C0];
  LODWORD(STACK[0x6540]) = v157;
  v158 = STACK[0x6990];
  if (!v85)
    v156 = STACK[0x6990];
  LODWORD(STACK[0x64A0]) = v156;
  v159 = STACK[0x69B0];
  if (!v85)
    v158 = STACK[0x69B0];
  LODWORD(STACK[0x64E8]) = v158;
  if (v85)
    v155 = v159;
  v160 = STACK[0x6810];
  v161 = STACK[0x6940];
  if (v85)
    v162 = STACK[0x6810];
  else
    v162 = STACK[0x6940];
  LODWORD(STACK[0x64E0]) = v162;
  v163 = STACK[0x6950];
  if (v85)
    v160 = STACK[0x6950];
  LODWORD(STACK[0x6518]) = v160;
  v164 = STACK[0x6800];
  if (!v85)
    v161 = STACK[0x6800];
  LODWORD(STACK[0x64D8]) = v161;
  if (!v85)
    v164 = v163;
  v165 = STACK[0x6840];
  v166 = STACK[0x67F0];
  if (v85)
    v167 = STACK[0x6840];
  else
    v167 = STACK[0x67F0];
  LODWORD(STACK[0x64D0]) = v167;
  v168 = STACK[0x67E0];
  if (v85)
    v169 = v166;
  else
    v169 = STACK[0x67E0];
  LODWORD(STACK[0x67F0]) = v169;
  v170 = STACK[0x67D0];
  if (v85)
    v171 = v168;
  else
    v171 = STACK[0x67D0];
  if (!v85)
    v170 = v165;
  LODWORD(STACK[0x6498]) = v170;
  v172 = STACK[0x67C0];
  v173 = STACK[0x6730];
  if (v85)
    v174 = STACK[0x67C0];
  else
    v174 = STACK[0x6730];
  LODWORD(STACK[0x64C8]) = v174;
  v175 = STACK[0x67B0];
  if (!v85)
    v173 = STACK[0x67B0];
  LODWORD(STACK[0x6510]) = v173;
  v176 = STACK[0x6830];
  if (v85)
    v172 = STACK[0x6830];
  LODWORD(STACK[0x64C0]) = v172;
  if (!v85)
    v175 = v176;
  v177 = LODWORD(STACK[0x6880]) + 1699911590;
  LODWORD(STACK[0x6448]) = v177;
  v178 = *(_QWORD *)(v16 - 152);
  v179 = v177 == 1729877018;
  if (v177 == 1729877018)
    v180 = *(_QWORD *)(v16 - 152);
  else
    v180 = v91;
  LODWORD(STACK[0x6980]) = v180;
  if (v177 == 1729877018)
    v181 = v91;
  else
    v181 = v178;
  LODWORD(STACK[0x6880]) = v181;
  v182 = STACK[0x6A70];
  v183 = STACK[0x6820];
  if (v179)
    v184 = STACK[0x6820];
  else
    v184 = STACK[0x6A70];
  LODWORD(STACK[0x6960]) = v184;
  if (v179)
    v185 = v182;
  else
    v185 = v183;
  LODWORD(STACK[0x6820]) = v185;
  v186 = STACK[0x6630];
  if (v179)
    v187 = v95;
  else
    v187 = STACK[0x6630];
  LODWORD(STACK[0x6780]) = v187;
  if (v179)
    v188 = v186;
  else
    v188 = v95;
  LODWORD(STACK[0x6630]) = v188;
  v189 = STACK[0x6538];
  if (v179)
    v190 = STACK[0x6538];
  else
    v190 = v96;
  LODWORD(STACK[0x6790]) = v190;
  if (v179)
    v191 = v96;
  else
    v191 = v189;
  LODWORD(STACK[0x67A0]) = v191;
  v192 = STACK[0x6500];
  if (v179)
    v193 = v101;
  else
    v193 = STACK[0x6500];
  LODWORD(STACK[0x6890]) = v193;
  if (v179)
    v194 = v192;
  else
    v194 = v101;
  LODWORD(STACK[0x6920]) = v194;
  v195 = STACK[0x6530];
  if (v179)
    v196 = v102;
  else
    v196 = STACK[0x6530];
  LODWORD(STACK[0x6AC0]) = v196;
  if (v179)
    v197 = v195;
  else
    v197 = v102;
  LODWORD(STACK[0x68D0]) = v197;
  v198 = STACK[0x6700];
  if (v179)
    v199 = v108;
  else
    v199 = STACK[0x6700];
  LODWORD(STACK[0x6A90]) = v199;
  if (v179)
    v200 = v198;
  else
    v200 = v108;
  LODWORD(STACK[0x6710]) = v200;
  v201 = STACK[0x6A40];
  v202 = STACK[0x64F8];
  if (v179)
    v203 = STACK[0x6A40];
  else
    v203 = STACK[0x64F8];
  LODWORD(STACK[0x6700]) = v203;
  if (v179)
    v204 = v202;
  else
    v204 = v201;
  LODWORD(STACK[0x66F8]) = v204;
  if (v179)
    v205 = v112;
  else
    v205 = v114;
  LODWORD(STACK[0x68C0]) = v205;
  if (v179)
    v206 = v114;
  else
    v206 = v112;
  LODWORD(STACK[0x6900]) = v206;
  v207 = STACK[0x69A0];
  v208 = STACK[0x6910];
  if (v179)
    v209 = STACK[0x6910];
  else
    v209 = STACK[0x69A0];
  LODWORD(STACK[0x68F0]) = v209;
  if (v179)
    v210 = v207;
  else
    v210 = v208;
  LODWORD(STACK[0x6910]) = v210;
  if (v179)
    v211 = v119;
  else
    v211 = v120;
  LODWORD(STACK[0x6708]) = v211;
  if (v179)
    v212 = v120;
  else
    v212 = v119;
  LODWORD(STACK[0x66F0]) = v212;
  v213 = STACK[0x6628];
  v214 = STACK[0x66D8];
  if (v179)
    v215 = STACK[0x6628];
  else
    v215 = STACK[0x66D8];
  LODWORD(STACK[0x66E0]) = v215;
  if (v179)
    v216 = v214;
  else
    v216 = v213;
  LODWORD(STACK[0x66D8]) = v216;
  if (v179)
    v217 = v125;
  else
    v217 = v124;
  LODWORD(STACK[0x68A0]) = v217;
  if (v179)
    v218 = v124;
  else
    v218 = v125;
  LODWORD(STACK[0x68E0]) = v218;
  v219 = STACK[0x6568];
  if (v179)
    v220 = STACK[0x6568];
  else
    v220 = v126;
  LODWORD(STACK[0x6930]) = v220;
  if (v179)
    v221 = v126;
  else
    v221 = v219;
  LODWORD(STACK[0x68B0]) = v221;
  v222 = STACK[0x64B8];
  if (v179)
    v223 = v132;
  else
    v223 = STACK[0x64B8];
  LODWORD(STACK[0x66E8]) = v223;
  if (v179)
    v224 = v222;
  else
    v224 = v132;
  LODWORD(STACK[0x66C0]) = v224;
  v225 = STACK[0x6560];
  v226 = STACK[0x66C8];
  if (v179)
    v227 = STACK[0x66C8];
  else
    v227 = STACK[0x6560];
  LODWORD(STACK[0x66D0]) = v227;
  if (v179)
    v228 = v225;
  else
    v228 = v226;
  LODWORD(STACK[0x66C8]) = v228;
  v229 = STACK[0x64B0];
  if (v179)
    v230 = v136;
  else
    v230 = STACK[0x64B0];
  LODWORD(STACK[0x6A60]) = v230;
  if (v179)
    v231 = v229;
  else
    v231 = v136;
  LODWORD(STACK[0x6A70]) = v231;
  v232 = STACK[0x6558];
  v233 = STACK[0x6528];
  if (v179)
    v234 = STACK[0x6558];
  else
    v234 = STACK[0x6528];
  LODWORD(STACK[0x6A40]) = v234;
  if (v179)
    v235 = v233;
  else
    v235 = v232;
  LODWORD(STACK[0x6A80]) = v235;
  if (v179)
    v236 = v141;
  else
    v236 = v142;
  LODWORD(STACK[0x6750]) = v236;
  if (v179)
    v237 = v142;
  else
    v237 = v141;
  LODWORD(STACK[0x6770]) = v237;
  v238 = STACK[0x6550];
  if (v179)
    v239 = v143;
  else
    v239 = STACK[0x6550];
  LODWORD(STACK[0x6740]) = v239;
  if (v179)
    v240 = v238;
  else
    v240 = v143;
  LODWORD(STACK[0x6760]) = v240;
  if (v179)
    v241 = v147;
  else
    v241 = v148;
  LODWORD(STACK[0x6A50]) = v241;
  if (v179)
    v242 = v148;
  else
    v242 = v147;
  LODWORD(STACK[0x6A20]) = v242;
  v243 = STACK[0x6548];
  if (v179)
    v244 = STACK[0x6548];
  else
    v244 = v149;
  LODWORD(STACK[0x6A30]) = v244;
  if (v179)
    v245 = v149;
  else
    v245 = v243;
  LODWORD(STACK[0x6A10]) = v245;
  v246 = STACK[0x64F0];
  if (v179)
    v247 = STACK[0x64F0];
  else
    v247 = v154;
  LODWORD(STACK[0x69E0]) = v247;
  if (v179)
    v248 = v154;
  else
    v248 = v246;
  LODWORD(STACK[0x6A00]) = v248;
  v249 = STACK[0x6520];
  v250 = STACK[0x64A8];
  if (v179)
    v251 = STACK[0x6520];
  else
    v251 = STACK[0x64A8];
  LODWORD(STACK[0x69F0]) = v251;
  if (v179)
    v252 = v250;
  else
    v252 = v249;
  LODWORD(STACK[0x69A0]) = v252;
  v253 = STACK[0x64A0];
  if (v179)
    v254 = STACK[0x64A0];
  else
    v254 = v155;
  LODWORD(STACK[0x69C0]) = v254;
  if (v179)
    v255 = v155;
  else
    v255 = v253;
  LODWORD(STACK[0x69B0]) = v255;
  v256 = STACK[0x6540];
  v257 = STACK[0x64E8];
  if (v179)
    v258 = STACK[0x64E8];
  else
    v258 = STACK[0x6540];
  LODWORD(STACK[0x6990]) = v258;
  if (v179)
    v259 = v256;
  else
    v259 = v257;
  LODWORD(STACK[0x69D0]) = v259;
  v260 = STACK[0x64E0];
  if (v179)
    v261 = STACK[0x64E0];
  else
    v261 = v164;
  LODWORD(STACK[0x6810]) = v261;
  if (v179)
    v262 = v164;
  else
    v262 = v260;
  LODWORD(STACK[0x6800]) = v262;
  v263 = STACK[0x6518];
  v264 = STACK[0x64D8];
  if (v179)
    v265 = STACK[0x64D8];
  else
    v265 = STACK[0x6518];
  LODWORD(STACK[0x6940]) = v265;
  if (v179)
    v266 = v263;
  else
    v266 = v264;
  LODWORD(STACK[0x6950]) = v266;
  v267 = STACK[0x64D0];
  if (v179)
    v268 = STACK[0x64D0];
  else
    v268 = v171;
  LODWORD(STACK[0x6840]) = v268;
  if (v179)
    v269 = v171;
  else
    v269 = v267;
  LODWORD(STACK[0x67E0]) = v269;
  v270 = STACK[0x67F0];
  v271 = STACK[0x6498];
  if (v179)
    v272 = STACK[0x6498];
  else
    v272 = STACK[0x67F0];
  LODWORD(STACK[0x67D0]) = v272;
  if (v179)
    v273 = v270;
  else
    v273 = v271;
  LODWORD(STACK[0x67F0]) = v273;
  v274 = STACK[0x64C8];
  if (v179)
    v275 = STACK[0x64C8];
  else
    v275 = v175;
  LODWORD(STACK[0x67C0]) = v275;
  if (v179)
    v276 = v175;
  else
    v276 = v274;
  LODWORD(STACK[0x67B0]) = v276;
  v277 = STACK[0x6510];
  v278 = STACK[0x64C0];
  if (v179)
    v279 = STACK[0x6510];
  else
    v279 = STACK[0x64C0];
  LODWORD(STACK[0x6730]) = v279;
  if (v179)
    v280 = v278;
  else
    v280 = v277;
  LODWORD(STACK[0x6830]) = v280;
  v281 = STACK[0x66B8];
  v282 = STACK[0x6570];
  v283 = STACK[0x6588];
  if ((STACK[0x66B8] & 1) != 0)
    v284 = STACK[0x6570];
  else
    v284 = STACK[0x6588];
  v285 = STACK[0x6578];
  if ((v281 & 1) != 0)
  {
    v282 = STACK[0x6590];
  }
  else
  {
    v283 = STACK[0x6578];
    v285 = STACK[0x6590];
  }
  if ((v281 & 2) != 0)
    v286 = v285;
  else
    v286 = v284;
  if ((v281 & 2) != 0)
  {
    v287 = v282;
  }
  else
  {
    v284 = v285;
    v287 = v283;
  }
  if ((v281 & 2) == 0)
    v283 = v282;
  v288 = STACK[0x62C8];
  v289 = LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x62C0]) ^ ((LODWORD(STACK[0x6268]) ^ LODWORD(STACK[0x6720]) ^ v283)
                                                          + 932988934
                                                          - ((2
                                                            * (LODWORD(STACK[0x6268]) ^ LODWORD(STACK[0x6720]) ^ v283)) & 0x6F38900C));
  v290 = LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x60E8]) ^ LODWORD(STACK[0x60C8]) ^ v287;
  v291 = LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x6720]) ^ ((v286 ^ LODWORD(STACK[0x6260]))
                                                                                   + 932988934
                                                                                   - ((2
                                                                                     * (v286 ^ LODWORD(STACK[0x6260]))) & 0x6F38900C)) ^ v280;
  v292 = (v290 + 932988934 - ((2 * v290) & 0x6F38900C)) ^ LODWORD(STACK[0x62C0]) ^ v276;
  v293 = (_DWORD *)(STACK[0x6580] + 4 * HIBYTE(v292));
  v294 = STACK[0x6580]
       + 4
       * (LOBYTE(STACK[0x62C8]) ^ LOBYTE(STACK[0x62C0]) ^ LOBYTE(STACK[0x6720]) ^ ((v286 ^ LOBYTE(STACK[0x6260]))
                                                                                                  + 6
                                                                                                  - ((2 * (v286 ^ LOBYTE(STACK[0x6260]))) & 0xC)) ^ v280);
  v295 = LODWORD(STACK[0x6270]) ^ LODWORD(STACK[0x6720]) ^ ((v288 ^ LODWORD(STACK[0x62C0]) ^ v284)
                                                          + 932988934
                                                          - ((2 * (v288 ^ LODWORD(STACK[0x62C0]) ^ v284)) & 0x6F38900C)) ^ v279;
  v296 = STACK[0x6580] + 4 * BYTE2(v295);
  v297 = (_DWORD *)(STACK[0x6580] + 4 * HIBYTE(v295));
  v298 = STACK[0x6580] + 4 * HIBYTE(v291);
  v299 = STACK[0x6580] + 4 * v295;
  v300 = (_DWORD *)(STACK[0x6580] + 4 * BYTE1(v292));
  v301 = 4 * BYTE2(v292);
  v302 = STACK[0x6580] + v301;
  STACK[0xD898] = (unint64_t)v293;
  LODWORD(v293) = *v293;
  STACK[0xD898] = v294;
  LODWORD(v294) = *(_DWORD *)v294;
  STACK[0xD898] = v296;
  LODWORD(v296) = *(_DWORD *)v296;
  STACK[0xD898] = (unint64_t)v297;
  LODWORD(v297) = *v297;
  STACK[0xD898] = v298;
  LODWORD(v298) = *(_DWORD *)v298;
  STACK[0xD898] = v299;
  LODWORD(v299) = *(_DWORD *)v299;
  STACK[0xD898] = (unint64_t)v300;
  LODWORD(v300) = *v300;
  STACK[0xD898] = v302;
  v303 = v302 - v301;
  LODWORD(v302) = *(_DWORD *)v302;
  v304 = (_DWORD *)(v303 + 4 * BYTE1(v291));
  STACK[0xD898] = (unint64_t)v304;
  LODWORD(v298) = v302 ^ __ROR4__(v298, 24);
  v305 = v289 ^ v275;
  LODWORD(v302) = *v304;
  v306 = 4 * HIBYTE(v305);
  v307 = (_DWORD *)(v303 + v306);
  v308 = 4 * v292;
  v309 = &v307[(unint64_t)v308 / 4 + v306 / 0xFFFFFFFFFFFFFFFCLL];
  v310 = BYTE1(v305);
  v311 = (unint64_t)&v309[v310 + v308 / 0xFFFFFFFFFFFFFFFCLL];
  v312 = 4 * BYTE2(v305);
  v313 = v311 + v312 - v310 * 4;
  v314 = 4 * BYTE1(v295);
  v315 = (_DWORD *)(v313 + v314 - v312);
  STACK[0xD898] = (unint64_t)v307;
  LODWORD(v307) = *v307;
  STACK[0xD898] = (unint64_t)v309;
  LODWORD(v309) = *v309;
  STACK[0xD898] = v311;
  LODWORD(v311) = *(_DWORD *)v311;
  STACK[0xD898] = v313;
  LODWORD(v313) = *(_DWORD *)v313;
  STACK[0xD898] = (unint64_t)v315;
  v316 = &v315[v314 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v315) = *v315;
  v317 = &v316[v305];
  STACK[0xD898] = (unint64_t)v317;
  v318 = *v317;
  v319 = 4 * BYTE2(v291);
  STACK[0xD898] = (unint64_t)v316 + v319;
  v320 = LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x60B0]) ^ LODWORD(STACK[0x6088]) ^ v272 ^ (LODWORD(STACK[0x6AA0]) - v281 + (v298 ^ __ROR4__((_DWORD)v315, 8) ^ __ROR4__(v318, 16)));
  LODWORD(v297) = LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x6258]) ^ __ROR4__((_DWORD)v297, 24) ^ __ROR4__(v302, 8) ^ __ROR4__((_DWORD)v309, 16) ^ v273 ^ v313;
  LODWORD(v319) = LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x6250]) ^ __ROR4__(v299, 16) ^ __ROR4__((_DWORD)v300, 8) ^ __ROR4__((_DWORD)v307, 24) ^ v268 ^ *(_DWORD *)((char *)v316 + v319);
  LODWORD(v311) = LODWORD(STACK[0x6080]) ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x6078]) ^ LODWORD(STACK[0x62A8]) ^ (v293 >> 24) ^ ((_DWORD)v293 << 8) ^ __ROR4__(v294, 16) ^ v296 ^ __ROR4__(v311, 8) ^ v281 ^ LODWORD(STACK[0x6970]) ^ v269;
  v321 = &v316[v320];
  STACK[0xD898] = (unint64_t)v321;
  LODWORD(v294) = *v321;
  v322 = &v316[HIBYTE(v320)];
  STACK[0xD898] = (unint64_t)v322;
  LODWORD(v321) = *v322;
  v323 = 4 * v319;
  v324 = &v316[(unint64_t)v323 / 4];
  v325 = 4 * BYTE1(v311);
  v326 = &v324[(unint64_t)v325 / 4 + v323 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v324;
  LODWORD(v324) = *v324;
  STACK[0xD898] = (unint64_t)v326;
  v327 = &v326[v325 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v326) = *v326;
  v328 = &v327[v311];
  STACK[0xD898] = (unint64_t)v328;
  LODWORD(v299) = *v328;
  v329 = 4 * BYTE1(v319);
  v330 = &v327[(unint64_t)v329 / 4];
  v331 = BYTE2(v311);
  v332 = (unint64_t)&v330[v331 + v329 / 0xFFFFFFFFFFFFFFFCLL];
  v333 = 4 * BYTE2(v319);
  v334 = v332 + v333 - v331 * 4;
  STACK[0xD898] = (unint64_t)v330;
  LODWORD(v330) = *v330;
  STACK[0xD898] = v332;
  LODWORD(v332) = *(_DWORD *)v332;
  STACK[0xD898] = v334;
  v335 = v334 - v333;
  LODWORD(v334) = *(_DWORD *)v334;
  v336 = v335 + 4 * BYTE3(v319);
  STACK[0xD898] = v336;
  LODWORD(v319) = *(_DWORD *)v336;
  v337 = (_DWORD *)(v335 + 4 * (v297 >> 24));
  STACK[0xD898] = (unint64_t)v337;
  LODWORD(v336) = *v337;
  v338 = 4 * v297;
  v339 = (_DWORD *)(v335 + v338);
  v340 = 4 * BYTE1(v297);
  v341 = &v339[(unint64_t)v340 / 4 + v338 / 0xFFFFFFFFFFFFFFFCLL];
  v342 = 4 * BYTE2(v297);
  v343 = &v341[v340 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v342 / 4];
  v344 = BYTE2(v320);
  v345 = (unint64_t)&v343[v344 + v342 / 0xFFFFFFFFFFFFFFFCLL];
  v346 = 4 * BYTE1(v320);
  v347 = (_DWORD *)(v345 - v344 * 4 + v346);
  v348 = 4 * BYTE3(v311);
  v349 = &v347[(unint64_t)v348 / 4 + v346 / 0xFFFFFFFFFFFFFFFCLL];
  v350 = v288 ^ LODWORD(STACK[0x62B0]);
  LODWORD(v299) = v350 ^ LODWORD(STACK[0x6248]) ^ v261 ^ __ROR4__(v299, 16) ^ v334 ^ __ROR4__(v336, 24);
  STACK[0xD898] = (unint64_t)v339;
  LODWORD(v334) = *v339;
  STACK[0xD898] = (unint64_t)v341;
  LODWORD(v339) = *v341;
  STACK[0xD898] = (unint64_t)v343;
  LODWORD(v336) = *v343;
  STACK[0xD898] = v345;
  LODWORD(v345) = *(_DWORD *)v345;
  STACK[0xD898] = (unint64_t)v347;
  LODWORD(v299) = v299 ^ __ROR4__(*v347, 8);
  LODWORD(v294) = v350 ^ LODWORD(STACK[0x6068]) ^ __ROR4__(v294, 16) ^ v265 ^ __ROR4__((_DWORD)v330, 8) ^ v336;
  STACK[0xD898] = (unint64_t)v349;
  v351 = &v349[v348 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v349) = v294 ^ __ROR4__(*v349, 24);
  LODWORD(v319) = v350 ^ LODWORD(STACK[0x6240]) ^ __ROR4__((_DWORD)v326, 8) ^ v266 ^ __ROR4__(v319, 24) ^ __ROR4__(v334, 16) ^ v345;
  LODWORD(v324) = v350 ^ LODWORD(STACK[0x6060]) ^ LODWORD(STACK[0x6070]) ^ __ROR4__((_DWORD)v321, 24) ^ __ROR4__((_DWORD)v324, 16) ^ v262 ^ v332 ^ __ROR4__((_DWORD)v339, 8);
  v352 = v324;
  v353 = (unint64_t)&v351[v352];
  v354 = 4 * BYTE2(v349);
  v355 = v353 + v354 - v352 * 4;
  STACK[0xD898] = v353;
  LODWORD(v353) = *(_DWORD *)v353;
  STACK[0xD898] = v355;
  v356 = v355 - v354;
  LODWORD(v355) = *(_DWORD *)v355;
  STACK[0xD898] = v356;
  LODWORD(v326) = *(_DWORD *)(v356 + 4 * (v324 >> 24));
  v357 = (_DWORD *)(v356 + 4 * (v349 >> 24));
  STACK[0xD898] = (unint64_t)v357;
  LODWORD(v345) = *v357;
  v358 = (_DWORD *)(v356 + 4 * v319);
  STACK[0xD898] = (unint64_t)v358;
  LODWORD(v357) = *v358;
  v359 = v356 + 4 * BYTE1(v299);
  STACK[0xD898] = v359;
  LODWORD(v358) = *(_DWORD *)v359;
  v360 = v356 + 4 * BYTE2(v324);
  STACK[0xD898] = v360;
  LODWORD(v359) = *(_DWORD *)v360;
  STACK[0xD898] = v356;
  LODWORD(v360) = *(_DWORD *)(v356 + 4 * BYTE2(v299));
  v361 = 4 * BYTE1(v324);
  v362 = (_DWORD *)(v356 + v361);
  v363 = BYTE2(v319);
  v364 = (unint64_t)&v362[v363 + v361 / 0xFFFFFFFFFFFFFFFCLL];
  v365 = 4 * BYTE1(v349);
  v366 = (_DWORD *)(v364 + v365 - v363 * 4);
  STACK[0xD898] = (unint64_t)v362;
  LODWORD(v362) = *v362;
  STACK[0xD898] = v364;
  LODWORD(v364) = *(_DWORD *)v364;
  STACK[0xD898] = (unint64_t)v366;
  v367 = &v366[v365 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v359) = v359 ^ __ROR4__(*v366, 8);
  v368 = 4 * BYTE3(v319);
  v369 = &v367[(unint64_t)v368 / 4];
  v370 = 4 * v349;
  v371 = &v369[(unint64_t)v370 / 4 + v368 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v369;
  LODWORD(v359) = v359 ^ __ROR4__(*v369, 24);
  STACK[0xD898] = (unint64_t)v371;
  v372 = &v371[v370 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v371) = *v371;
  v373 = &v372[v299];
  STACK[0xD898] = (unint64_t)v373;
  LODWORD(v369) = *v373;
  v374 = &v372[BYTE1(v319)];
  STACK[0xD898] = (unint64_t)v374;
  LODWORD(v319) = *v374;
  v375 = BYTE3(v299);
  STACK[0xD898] = (unint64_t)&v372[v375];
  v376 = STACK[0x62F0];
  v377 = STACK[0x62E8];
  v378 = STACK[0x60F8];
  v379 = STACK[0x6680];
  v380 = STACK[0x62B8];
  LODWORD(v364) = LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x62B8]) ^ LODWORD(STACK[0x5E78]) ^ LODWORD(STACK[0x69C0]) ^ ((LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x62F0]) ^ LODWORD(STACK[0x60F8]) ^ __ROR4__((_DWORD)v362, 8) ^ v364 ^ __ROR4__((_DWORD)v371, 16) ^ __ROR4__(v372[v375], 24)) + LODWORD(STACK[0x6040]));
  LODWORD(v355) = LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x62B8]) ^ LODWORD(STACK[0x5E70]) ^ LODWORD(STACK[0x69B0]) ^ v355 ^ __ROR4__((_DWORD)v326, 24) ^ __ROR4__((_DWORD)v357, 16) ^ __ROR4__((_DWORD)v358, 8);
  v381 = STACK[0x6410];
  LODWORD(v353) = LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x6058]) ^ LODWORD(STACK[0x6050]) ^ LODWORD(STACK[0x6020]) ^ LODWORD(STACK[0x6028]) ^ LODWORD(STACK[0x62B8]) ^ LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x6990]) ^ __ROR4__(v353, 16) ^ __ROR4__(v345, 24) ^ v360 ^ __ROR4__(v319, 8);
  LODWORD(v319) = LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x62B8]) ^ LODWORD(STACK[0x6038]) ^ LODWORD(STACK[0x6030]);
  v382 = 4 * v364;
  STACK[0xD898] = (unint64_t)v372 + v382;
  LODWORD(v382) = *(_DWORD *)((char *)v372 + v382);
  LODWORD(v319) = v319 ^ LODWORD(STACK[0x69D0]) ^ ((v359 ^ __ROR4__((_DWORD)v369, 16)) + LODWORD(STACK[0x6048]));
  v383 = 4 * BYTE1(v355);
  v384 = &v372[(unint64_t)v383 / 4];
  v385 = 4 * BYTE1(v364);
  v386 = &v384[(unint64_t)v385 / 4 + v383 / 0xFFFFFFFFFFFFFFFCLL];
  v387 = v319;
  v388 = (unint64_t)&v386[v387 + v385 / 0xFFFFFFFFFFFFFFFCLL];
  v389 = 4 * BYTE2(v353);
  v390 = v388 + v389 - v387 * 4;
  v391 = 4 * BYTE1(v319);
  v392 = (_DWORD *)(v390 - v389 + v391);
  v393 = BYTE2(v364);
  v394 = (unint64_t)&v392[v393 + v391 / 0xFFFFFFFFFFFFFFFCLL];
  v395 = 4 * BYTE1(v353);
  v396 = (_DWORD *)(v394 + v395 - v393 * 4);
  v397 = BYTE2(v319);
  v398 = (unint64_t)&v396[v395 / 0xFFFFFFFFFFFFFFFCLL + v397];
  v399 = 4 * BYTE3(v355);
  v400 = (_DWORD *)(v398 + v399 - v397 * 4);
  v401 = 4 * v355;
  v402 = &v400[(unint64_t)v401 / 4 + v399 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v384;
  LODWORD(v384) = *v384;
  STACK[0xD898] = (unint64_t)v386;
  LODWORD(v386) = *v386;
  STACK[0xD898] = v388;
  LODWORD(v388) = *(_DWORD *)v388;
  STACK[0xD898] = v390;
  LODWORD(v390) = *(_DWORD *)v390;
  STACK[0xD898] = (unint64_t)v392;
  LODWORD(v392) = *v392;
  STACK[0xD898] = v394;
  LODWORD(v394) = *(_DWORD *)v394;
  STACK[0xD898] = (unint64_t)v396;
  LODWORD(v396) = *v396;
  STACK[0xD898] = v398;
  LODWORD(v398) = *(_DWORD *)v398;
  STACK[0xD898] = (unint64_t)v400;
  LODWORD(v400) = *v400;
  STACK[0xD898] = (unint64_t)v402;
  v403 = &v402[v401 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v402) = *v402;
  v404 = (unint64_t)&v403[BYTE3(v353)];
  STACK[0xD898] = v404;
  LODWORD(v347) = *(_DWORD *)v404;
  v405 = 4 * BYTE3(v364);
  v406 = &v403[(unint64_t)v405 / 4];
  v407 = 4 * BYTE3(v319);
  v408 = &v406[(unint64_t)v407 / 4 + v405 / 0xFFFFFFFFFFFFFFFCLL];
  v409 = BYTE2(v355);
  v410 = (unint64_t)&v408[v409 + v407 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v406;
  LODWORD(v406) = *v406;
  STACK[0xD898] = (unint64_t)v408;
  LODWORD(v408) = *v408;
  STACK[0xD898] = v410;
  v411 = v410 - v409 * 4;
  LODWORD(v410) = *(_DWORD *)v410;
  v412 = 4 * v353;
  STACK[0xD898] = v411 + v412;
  LODWORD(v404) = v380 ^ LODWORD(STACK[0x62D0]);
  LODWORD(v408) = v404 ^ LODWORD(STACK[0x6238]) ^ LODWORD(STACK[0x6A00]) ^ __ROR4__(v382, 16) ^ __ROR4__((_DWORD)v396, 8) ^ __ROR4__((_DWORD)v408, 24) ^ v410;
  LODWORD(v410) = v404 ^ LODWORD(STACK[0x6010]) ^ LODWORD(STACK[0x6018]) ^ LODWORD(STACK[0x69E0]) ^ ((_DWORD)v392 << 24) ^ (v392 >> 8) ^ v394 ^ __ROR4__((_DWORD)v402, 16) ^ __ROR4__((_DWORD)v347, 24);
  LODWORD(v382) = v404 ^ LODWORD(STACK[0x6230]) ^ LODWORD(STACK[0x69A0]) ^ __ROR4__((_DWORD)v386, 8) ^ __ROR4__(v388, 16) ^ v390 ^ __ROR4__((_DWORD)v400, 24);
  LODWORD(v384) = v404 ^ LODWORD(STACK[0x6228]) ^ LODWORD(STACK[0x69F0]) ^ __ROR4__((_DWORD)v384, 8) ^ v398 ^ __ROR4__((_DWORD)v406, 24) ^ __ROR4__(*(_DWORD *)(v411 + v412), 16);
  v413 = v411 + 4 * BYTE2(v382);
  STACK[0xD898] = v413;
  LODWORD(v412) = *(_DWORD *)v413;
  STACK[0xD898] = v411;
  LODWORD(v413) = *(_DWORD *)(v411 + 4 * BYTE3(v382));
  v414 = (_DWORD *)(v411 + 4 * BYTE3(v410));
  STACK[0xD898] = (unint64_t)v414;
  LODWORD(v388) = *v414;
  v415 = 4 * BYTE1(v384);
  v416 = (_DWORD *)(v411 + v415);
  STACK[0xD898] = (unint64_t)v416;
  v417 = v384;
  HIDWORD(v418) = *v416;
  LODWORD(v418) = *v416;
  v419 = &v416[v417 + v415 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v413) = (v418 >> 8) ^ __ROR4__(v413, 24);
  v420 = 4 * BYTE1(v408);
  v421 = (unint64_t)v419 + v420 - v417 * 4;
  STACK[0xD898] = (unint64_t)v419;
  LODWORD(v412) = v412 ^ __ROR4__(*v419, 16);
  STACK[0xD898] = v421;
  v422 = v421 - v420;
  LODWORD(v420) = *(_DWORD *)v421;
  v423 = (_DWORD *)(v422 + 4 * BYTE2(v408));
  STACK[0xD898] = (unint64_t)v423;
  LODWORD(v421) = *v423;
  HIDWORD(v418) = v420;
  LODWORD(v418) = v420;
  STACK[0xD898] = v422;
  LODWORD(v423) = *(_DWORD *)(v422 + 4 * (v408 >> 24));
  LODWORD(v388) = (v418 >> 8) ^ __ROR4__(v388, 24);
  v424 = (_DWORD *)(v422 + 4 * (v384 >> 24));
  STACK[0xD898] = (unint64_t)v424;
  LODWORD(v412) = v412 ^ __ROR4__((_DWORD)v423, 24);
  LODWORD(v420) = *v424;
  v425 = (_DWORD *)(v422 + 4 * v382);
  STACK[0xD898] = (unint64_t)v425;
  LODWORD(v418) = __ROR4__(*v425, 16);
  v426 = 4 * BYTE2(v410);
  v427 = v422 + v426;
  v428 = 4 * v410;
  v429 = (_DWORD *)(v427 + v428 - v426);
  STACK[0xD898] = v427;
  LODWORD(v427) = v413 ^ *(_DWORD *)v427;
  STACK[0xD898] = (unint64_t)v429;
  v430 = &v429[v428 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v429) = *v429;
  v431 = (unint64_t)&v430[BYTE2(v384)];
  STACK[0xD898] = v431;
  v432 = 4 * BYTE1(v382);
  v433 = &v430[(unint64_t)v432 / 4];
  v434 = 4 * BYTE1(v410);
  v435 = &v433[(unint64_t)v434 / 4 + v432 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v384) = v388 ^ v418 ^ *(_DWORD *)v431;
  STACK[0xD898] = (unint64_t)v433;
  LODWORD(v433) = *v433;
  STACK[0xD898] = (unint64_t)v435;
  v436 = (unint64_t)&v435[v434 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v435) = *v435;
  v437 = (_DWORD *)(v436 + 4 * v408);
  STACK[0xD898] = (unint64_t)v437;
  LODWORD(v412) = v412 ^ __ROR4__((_DWORD)v435, 8);
  LODWORD(v408) = v427 ^ __ROR4__(*v437, 16);
  v438 = STACK[0x6298];
  LODWORD(v427) = LODWORD(STACK[0x62A0]) ^ LODWORD(STACK[0x6298]);
  LODWORD(v384) = v427 ^ LODWORD(STACK[0x6210]) ^ LODWORD(STACK[0x6A20]) ^ (LODWORD(STACK[0x6220])
                                                                          + LODWORD(STACK[0x6218])
                                                                          + (_DWORD)v384
                                                                          + 1);
  LODWORD(v435) = v427 ^ LODWORD(STACK[0x5E68]) ^ LODWORD(STACK[0x6208]) ^ LODWORD(STACK[0x6000]) ^ LODWORD(STACK[0x6A30]) ^ v421 ^ __ROR4__(v420, 24) ^ __ROR4__((_DWORD)v429, 16) ^ __ROR4__((_DWORD)v433, 8);
  v439 = v427 ^ LODWORD(STACK[0x5FF0]) ^ LODWORD(STACK[0x5FF8]) ^ LODWORD(STACK[0x6A10]) ^ ((_DWORD)v408 + LODWORD(STACK[0x6008]));
  LODWORD(v412) = v427 ^ LODWORD(STACK[0x6200]) ^ v376 ^ v377 ^ v378 ^ LODWORD(STACK[0x6A50]) ^ (v412 + v381);
  v440 = v436 + 4 * BYTE2(v435);
  STACK[0xD898] = v440;
  LODWORD(v427) = *(_DWORD *)v440;
  STACK[0xD898] = v436;
  LODWORD(v440) = *(_DWORD *)(v436 + 4 * BYTE1(v439));
  v441 = 4 * (v435 >> 24);
  v442 = (_DWORD *)(v436 + v441);
  STACK[0xD898] = (unint64_t)v442;
  v443 = BYTE2(v384);
  HIDWORD(v418) = *v442;
  LODWORD(v418) = *v442;
  v444 = (unint64_t)&v442[v443 + v441 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = v444;
  v445 = v444 - v443 * 4;
  LODWORD(v444) = *(_DWORD *)v444;
  STACK[0xD898] = v445;
  LODWORD(v444) = v444 ^ __ROR4__(*(_DWORD *)(v445 + ((v439 >> 22) & 0x3FC)), 24);
  v446 = 4 * BYTE1(v412);
  v447 = (_DWORD *)(v445 + v446);
  v448 = 4 * (v384 >> 24);
  v449 = &v447[(unint64_t)v448 / 4 + v446 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v447;
  LODWORD(v427) = v427 ^ __ROR4__(*v447, 8);
  STACK[0xD898] = (unint64_t)v449;
  v450 = &v449[v448 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v449) = *v449;
  v451 = (unint64_t)&v450[v412];
  STACK[0xD898] = v451;
  LODWORD(v427) = v427 ^ __ROR4__((_DWORD)v449, 24);
  LODWORD(v444) = v444 ^ __ROR4__(*(_DWORD *)v451, 16);
  v452 = 4 * BYTE2(v412);
  v453 = &v450[(unint64_t)v452 / 4];
  v454 = BYTE1(v384);
  v455 = (unint64_t)&v453[v454 + v452 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v453;
  LODWORD(v440) = (v418 >> 24) ^ __ROR4__(v440, 8) ^ *v453;
  v456 = 4 * BYTE3(v412);
  v457 = v455 + v456 - v454 * 4;
  v458 = 4 * BYTE1(v435);
  v459 = (_DWORD *)(v457 + v458 - v456);
  STACK[0xD898] = v455;
  LODWORD(v451) = *(_DWORD *)v455;
  STACK[0xD898] = v457;
  LODWORD(v431) = *(_DWORD *)v457;
  STACK[0xD898] = (unint64_t)v459;
  v460 = v444 ^ __ROR4__(*v459, 8);
  v461 = 4 * v384;
  v462 = &v459[v458 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v461 / 4];
  v463 = BYTE2(v439);
  v464 = (unint64_t)&v462[v463 + v461 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v462;
  LODWORD(v398) = v440 ^ __ROR4__(*v462, 16);
  LODWORD(STACK[0x6578]) = v398;
  v465 = 4 * v439;
  v466 = v464 + v465 - v463 * 4;
  v467 = 4 * v435;
  v468 = (_DWORD *)(v466 + v467 - v465);
  STACK[0xD898] = v464;
  LODWORD(v464) = *(_DWORD *)v464;
  STACK[0xD898] = v466;
  LODWORD(v455) = v427 ^ __ROR4__(*(_DWORD *)v466, 16);
  LODWORD(v464) = LODWORD(STACK[0x6AA0]) ^ v281 ^ __ROR4__(v451, 8) ^ __ROR4__(v431, 24) ^ v464;
  STACK[0xD898] = (unint64_t)v468;
  v469 = (unint64_t)v468 - v467;
  LODWORD(v457) = (v464 ^ __ROR4__(*v468, 16)) + LODWORD(STACK[0x6970]) - v281;
  LODWORD(v451) = STACK[0x62D8];
  LODWORD(v431) = LODWORD(STACK[0x63F0]) ^ LODWORD(STACK[0x62D8]);
  LODWORD(v468) = v431 ^ LODWORD(STACK[0x61E0]) ^ LODWORD(STACK[0x6A60]) ^ v460;
  v470 = 4 * (v468 >> 24);
  STACK[0xD898] = v469 + v470;
  LODWORD(v435) = v431 ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x6A80]) ^ v457;
  LODWORD(v470) = *(_DWORD *)(v469 + v470);
  v471 = (_DWORD *)(v469 + 4 * BYTE1(v435));
  STACK[0xD898] = (unint64_t)v471;
  LODWORD(v471) = *v471;
  v472 = 4 * BYTE2(v468);
  STACK[0xD898] = v469 + v472;
  LODWORD(v467) = v398 ^ v451;
  LODWORD(v451) = LODWORD(STACK[0x5FE8]) ^ LODWORD(STACK[0x6A70]) ^ v398 ^ v451;
  LODWORD(v472) = *(_DWORD *)(v469 + v472);
  STACK[0xD898] = v469;
  LODWORD(v398) = *(_DWORD *)(v469 + 4 * (v435 >> 24));
  v473 = 4 * BYTE3(v451);
  v474 = (_DWORD *)(v469 + v473);
  v475 = 4 * v435;
  v476 = &v474[(unint64_t)v475 / 4 + v473 / 0xFFFFFFFFFFFFFFFCLL];
  v477 = 4 * BYTE1(v451);
  v478 = &v476[(unint64_t)v477 / 4 + v475 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v347) = v431 ^ LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x6A40]) ^ v455;
  v479 = BYTE2(v347);
  v480 = (unint64_t)&v478[v477 / 0xFFFFFFFFFFFFFFFCLL + v479];
  v481 = 4 * BYTE1(v468);
  v482 = (_DWORD *)(v480 + v481 - v479 * 4);
  STACK[0xD898] = (unint64_t)v474;
  LODWORD(v474) = *v474;
  STACK[0xD898] = (unint64_t)v476;
  LODWORD(v476) = *v476;
  STACK[0xD898] = (unint64_t)v478;
  LODWORD(v478) = *v478;
  STACK[0xD898] = v480;
  LODWORD(v480) = *(_DWORD *)v480;
  STACK[0xD898] = (unint64_t)v482;
  HIDWORD(v418) = *v482;
  LODWORD(v418) = *v482;
  v483 = 4 * v468;
  v484 = &v482[v481 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v483 / 4];
  v485 = v451;
  v486 = (unint64_t)&v484[v485 + v483 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v484;
  LODWORD(v484) = *v484;
  STACK[0xD898] = v486;
  v487 = v486 - v485 * 4;
  v488 = *(_DWORD *)v486;
  v489 = v487 + 4 * v347;
  STACK[0xD898] = v489;
  LODWORD(v486) = (v418 >> 8) ^ __ROR4__((_DWORD)v474, 24) ^ __ROR4__(*(_DWORD *)v489, 16);
  v490 = 4 * (v347 >> 24);
  v491 = (_DWORD *)(v487 + v490);
  v492 = BYTE2(v435);
  v493 = &v491[v492 + v490 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v491;
  LODWORD(v491) = *v491;
  STACK[0xD898] = (unint64_t)v493;
  LODWORD(v489) = v486 ^ *v493;
  v494 = 4 * BYTE2(v451);
  v495 = (unint64_t)v493 + v494 - v492 * 4;
  v496 = 4 * BYTE1(v347);
  v497 = (_DWORD *)(v495 + v496 - v494);
  LODWORD(v494) = LODWORD(STACK[0x5FD8]) ^ __ROR4__((_DWORD)v471, 8) ^ __ROR4__((_DWORD)v484, 16);
  LODWORD(v418) = __ROR4__((_DWORD)v491, 24);
  STACK[0xD898] = v495;
  LODWORD(v495) = (v494 ^ v418 ^ *(_DWORD *)v495) + 1977575785 - ((2 * (v494 ^ v418 ^ *(_DWORD *)v495)) & 0xEBBED2D2);
  LODWORD(v466) = STACK[0x6678];
  LODWORD(v494) = v438 ^ v466;
  LODWORD(v495) = v438 ^ LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x68A0]) ^ v495;
  LODWORD(v470) = LODWORD(STACK[0x5FC8]) ^ LODWORD(STACK[0x60F0]) ^ v438 ^ __ROR4__(v470, 24) ^ __ROR4__((_DWORD)v476, 16);
  LODWORD(v418) = __ROR4__((_DWORD)v478, 8);
  LODWORD(v470) = LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x5FD0]) ^ ((v470 ^ v418 ^ v480)
                                                                   + 1977575785
                                                                   - ((2 * (v470 ^ v418 ^ v480)) & 0xEBBED2D2));
  LODWORD(v472) = v472 ^ LODWORD(STACK[0x61F8]) ^ __ROR4__(v398, 24) ^ __ROR4__(v488, 16);
  STACK[0xD898] = (unint64_t)v497;
  v498 = &v497[v496 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v418) = __ROR4__(*v497, 8);
  LODWORD(v472) = v438 ^ v466 ^ LODWORD(STACK[0x68E0]) ^ ((v472 ^ v418) + 1977575785 - ((2 * (v472 ^ v418)) & 0xEBBED2D2));
  LODWORD(v471) = v438 ^ v466 ^ LODWORD(STACK[0x5F40]) ^ LODWORD(STACK[0x5FC0]) ^ LODWORD(STACK[0x68B0]) ^ (v489 + 1977575785 - ((2 * v489) & 0xEBBED2D2));
  v499 = BYTE1(v472);
  v500 = (unint64_t)&v498[v499];
  v501 = 4 * v472;
  v502 = v500 + v501 - v499 * 4;
  v503 = 4 * v495;
  v504 = v502 + v503 - v501;
  v505 = 4 * BYTE1(v470);
  v506 = v504 + v505 - v503;
  v507 = 4 * BYTE2(v472);
  v508 = v506 + v507 - v505;
  v509 = 4 * BYTE3(v495);
  v510 = (_DWORD *)(v508 + v509 - v507);
  STACK[0xD898] = v500;
  LODWORD(v500) = *(_DWORD *)v500;
  STACK[0xD898] = v502;
  LODWORD(v502) = *(_DWORD *)v502;
  STACK[0xD898] = v504;
  LODWORD(v504) = *(_DWORD *)v504;
  STACK[0xD898] = v506;
  LODWORD(v506) = *(_DWORD *)v506;
  STACK[0xD898] = v508;
  LODWORD(v508) = *(_DWORD *)v508;
  STACK[0xD898] = (unint64_t)v510;
  v511 = (unint64_t)&v510[v509 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v510) = *v510;
  v512 = v511 + 4 * v470;
  STACK[0xD898] = v512;
  LODWORD(v484) = *(_DWORD *)v512;
  v513 = v511 + 4 * BYTE2(v471);
  STACK[0xD898] = v513;
  LODWORD(v512) = *(_DWORD *)v513;
  v514 = (_DWORD *)(v511 + 4 * BYTE2(v470));
  STACK[0xD898] = (unint64_t)v514;
  LODWORD(v513) = *v514;
  STACK[0xD898] = v511;
  LODWORD(v514) = *(_DWORD *)(v511 + 4 * (v471 >> 24));
  v515 = (_DWORD *)(v511 + 4 * BYTE3(v470));
  STACK[0xD898] = (unint64_t)v515;
  LODWORD(v470) = *v515;
  v516 = 4 * BYTE3(v472);
  v517 = (_DWORD *)(v511 + v516);
  v518 = BYTE1(v495);
  v519 = (unint64_t)&v517[v518 + v516 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v517;
  LODWORD(v517) = *v517;
  STACK[0xD898] = v519;
  v520 = v519 - v518 * 4;
  LODWORD(v519) = *(_DWORD *)v519;
  v521 = (_DWORD *)(v520 + 4 * v471);
  STACK[0xD898] = (unint64_t)v521;
  v522 = 4 * BYTE2(v495);
  v523 = (_DWORD *)(v520 + v522);
  v524 = 4 * BYTE1(v471);
  v525 = &v523[(unint64_t)v524 / 4 + v522 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v504) = LODWORD(STACK[0x61B0]) ^ __ROR4__(v504, 16) ^ __ROR4__(v506, 8) ^ v508;
  LODWORD(v418) = __ROR4__((_DWORD)v514, 24);
  LODWORD(v506) = (v504 ^ v418) + 395783858 - ((2 * (v504 ^ v418)) & 0x2F2E5D64);
  LODWORD(v504) = LODWORD(STACK[0x6720]) ^ v380;
  LODWORD(v506) = v504 ^ LODWORD(STACK[0x6900]) ^ v506;
  LODWORD(v519) = v380 ^ LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x5FB8]) ^ v513 ^ __ROR4__((_DWORD)v517, 24) ^ __ROR4__(v519, 8);
  LODWORD(v418) = __ROR4__(*v521, 16);
  LODWORD(v519) = LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x6720]) ^ ((v519 ^ v418)
                                                                   + 395783858
                                                                   - ((2 * (v519 ^ v418)) & 0x2F2E5D64));
  LODWORD(v500) = LODWORD(STACK[0x61A8]) ^ __ROR4__(v500, 8) ^ __ROR4__((_DWORD)v510, 24);
  LODWORD(v418) = __ROR4__((_DWORD)v484, 16);
  LODWORD(v500) = v504 ^ LODWORD(STACK[0x68F0]) ^ ((v500 ^ v418 ^ v512)
                                                 + 395783858
                                                 - ((2 * (v500 ^ v418 ^ v512)) & 0x2F2E5D64));
  LODWORD(v502) = LODWORD(STACK[0x5FA8]) ^ __ROR4__(v502, 16);
  STACK[0xD898] = (unint64_t)v523;
  LODWORD(v470) = v502 ^ __ROR4__(v470, 24) ^ *v523;
  STACK[0xD898] = (unint64_t)v525;
  v526 = &v525[v524 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v418) = __ROR4__(*v525, 8);
  v527 = BYTE3(v519);
  v528 = (unint64_t)&v526[v527];
  v529 = 4 * v506;
  v530 = v528 + v529 - v527 * 4;
  STACK[0xD898] = v528;
  LODWORD(v528) = *(_DWORD *)v528;
  STACK[0xD898] = v530;
  v531 = v530 - v529;
  LODWORD(v530) = *(_DWORD *)v530;
  v532 = (_DWORD *)(v531 + 4 * BYTE2(v500));
  STACK[0xD898] = (unint64_t)v532;
  LODWORD(v508) = *v532;
  LODWORD(v470) = v504 ^ LODWORD(STACK[0x68C0]) ^ ((v470 ^ v418) + 395783858 - ((2 * (v470 ^ v418)) & 0x2F2E5D64));
  STACK[0xD898] = v531;
  LODWORD(v532) = *(_DWORD *)(v531 + 4 * BYTE3(v470));
  v533 = 4 * v500;
  v534 = (_DWORD *)(v531 + v533);
  v535 = 4 * BYTE1(v500);
  v536 = &v534[(unint64_t)v535 / 4 + v533 / 0xFFFFFFFFFFFFFFFCLL];
  v537 = BYTE2(v519);
  v538 = (unint64_t)&v536[v537 + v535 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v534;
  LODWORD(v534) = *v534;
  STACK[0xD898] = (unint64_t)v536;
  LODWORD(v536) = *v536;
  STACK[0xD898] = v538;
  v539 = v538 - v537 * 4;
  LODWORD(v538) = *(_DWORD *)v538;
  v540 = (_DWORD *)(v539 + 4 * BYTE2(v506));
  STACK[0xD898] = (unint64_t)v540;
  LODWORD(v513) = *v540;
  STACK[0xD898] = v539;
  LODWORD(v540) = *(_DWORD *)(v539 + 4 * v470);
  v541 = 4 * BYTE2(v470);
  v542 = v539 + v541;
  v543 = 4 * v519;
  v544 = (_DWORD *)(v542 + v543 - v541);
  v545 = 4 * BYTE3(v506);
  v546 = &v544[(unint64_t)v545 / 4 + v543 / 0xFFFFFFFFFFFFFFFCLL];
  v547 = 4 * BYTE1(v519);
  v548 = &v546[(unint64_t)v547 / 4 + v545 / 0xFFFFFFFFFFFFFFFCLL];
  v549 = 4 * BYTE1(v506);
  v550 = &v548[(unint64_t)v549 / 4 + v547 / 0xFFFFFFFFFFFFFFFCLL];
  v551 = 4 * BYTE3(v500);
  v552 = &v550[(unint64_t)v551 / 4 + v549 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = v542;
  v553 = *(_DWORD *)v542;
  STACK[0xD898] = (unint64_t)v544;
  LODWORD(v544) = *v544;
  STACK[0xD898] = (unint64_t)v546;
  LODWORD(v546) = *v546;
  STACK[0xD898] = (unint64_t)v548;
  LODWORD(v542) = *v548;
  STACK[0xD898] = (unint64_t)v550;
  LODWORD(v550) = *v550;
  STACK[0xD898] = (unint64_t)v552;
  v554 = (unint64_t)&v552[v551 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v552) = *v552;
  v555 = (_DWORD *)(v554 + 4 * BYTE1(v470));
  STACK[0xD898] = (unint64_t)v555;
  LODWORD(v470) = *v555;
  STACK[0xD898] = v554;
  LODWORD(v554) = v513 ^ LODWORD(STACK[0x61F0]) ^ __ROR4__((_DWORD)v540, 16) ^ __ROR4__(v542, 8);
  LODWORD(v418) = __ROR4__((_DWORD)v552, 24);
  LODWORD(v542) = v379 ^ v466;
  LODWORD(v554) = v379 ^ v466 ^ LODWORD(STACK[0x6920]) ^ ((v554 ^ v418) + 495988328 - ((2 * (v554 ^ v418)) & 0x3B205CD0));
  LODWORD(v530) = LODWORD(STACK[0x61E8]) ^ __ROR4__(v528, 24) ^ __ROR4__(v530, 16);
  LODWORD(v418) = __ROR4__((_DWORD)v536, 8);
  LODWORD(v530) = v379 ^ v466 ^ LODWORD(STACK[0x6890]) ^ ((v530 ^ v418 ^ v553)
                                                        + 495988328
                                                        - ((2 * (v530 ^ v418 ^ v553)) & 0x3B205CD0));
  LODWORD(v470) = v379 ^ __ROR4__((_DWORD)v534, 16) ^ v538 ^ __ROR4__((_DWORD)v546, 24) ^ __ROR4__(v470, 8);
  LODWORD(v528) = v379 ^ LODWORD(STACK[0x5F98]) ^ v508 ^ __ROR4__((_DWORD)v532, 24) ^ __ROR4__((_DWORD)v544, 16);
  LODWORD(v418) = __ROR4__((_DWORD)v550, 8);
  LODWORD(v470) = LODWORD(STACK[0x5F88]) ^ v466 ^ ((LODWORD(STACK[0x68D0]) ^ 0x1D902E68)
                                                 + v470
                                                 + ((2
                                                   * (((2 * (v470 & (LODWORD(STACK[0x68D0]) ^ 0x1D902E68) ^ 0x84030003)) | 0x75F9A64C)
                                                    - (v470 & (LODWORD(STACK[0x68D0]) ^ 0x1D902E68) ^ 0x84030003))
                                                   - 1979295308) ^ 0x820059B5)
                                                 + 1);
  LODWORD(v508) = *(_DWORD *)(STACK[0xD878] + 4 * BYTE3(v470));
  LODWORD(v528) = v466 ^ LODWORD(STACK[0x5FA0]) ^ LODWORD(STACK[0x6AC0]) ^ ((v528 ^ v418)
                                                                          + 495988328
                                                                          - ((2 * (v528 ^ v418)) & 0x3B205CD0));
  v556 = (_DWORD *)(STACK[0xD878] + 4 * BYTE2(v530));
  v557 = (_DWORD *)(STACK[0xD878] + 4 * v470);
  v558 = STACK[0xD878] + 4 * v530;
  v559 = (_DWORD *)(STACK[0xD878] + 4 * BYTE1(v530));
  v560 = STACK[0xD878];
  LODWORD(v532) = *(_DWORD *)(STACK[0xD878] + 4 * BYTE2(v528));
  LODWORD(STACK[0x6628]) = *(_DWORD *)(STACK[0xD878] + 4 * BYTE2(v470));
  LODWORD(v538) = *(_DWORD *)(v560 + 4 * v554);
  v561 = 4 * BYTE1(v528);
  v562 = (_DWORD *)(v560 + v561);
  v563 = 4 * v528;
  v564 = &v562[(unint64_t)v563 / 4 + v561 / 0xFFFFFFFFFFFFFFFCLL];
  v565 = 4 * BYTE2(v554);
  v566 = &v564[(unint64_t)v565 / 4 + v563 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD878] = (unint64_t)v566;
  v567 = (unint64_t)&v566[v565 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(STACK[0x6590]) = *v566;
  v568 = v567 + 4 * BYTE1(v554);
  STACK[0xD878] = v568;
  v569 = *(_DWORD *)v568;
  v570 = (_DWORD *)(v567 + 4 * BYTE1(v470));
  STACK[0xD878] = (unint64_t)v570;
  LODWORD(STACK[0x6580]) = *v570;
  v571 = 4 * BYTE3(v530);
  STACK[0xD878] = v567 + v571;
  LODWORD(v571) = *(_DWORD *)(v567 + v571);
  v572 = 4 * BYTE3(v554);
  STACK[0xD878] = v567 + v572;
  LODWORD(STACK[0x6570]) = *(_DWORD *)(v567 + v572);
  v573 = (_DWORD *)(v567 + 4 * BYTE3(v528));
  STACK[0xD878] = (unint64_t)v573;
  LODWORD(STACK[0x6588]) = *v573;
  STACK[0xD878] = v567;
  LODWORD(v572) = LODWORD(STACK[0x5F78]) ^ LODWORD(STACK[0x6980]) ^ __ROR4__(v508, 16) ^ __ROR4__(*v556, 24);
  LODWORD(v418) = __ROR4__(v538, 8);
  LODWORD(v466) = STACK[0x66A0];
  LODWORD(v572) = v572 ^ v418 ^ *v562 ^ 0xD359D5A8 ^ -(v572 ^ v418 ^ *v562 ^ 0xD359D5A8) ^ (v466
                                                                                          - (v572 ^ v418 ^ *v562 ^ 0xD359D5A8 ^ v466));
  LODWORD(v528) = STACK[0x6420];
  LODWORD(STACK[0x6568]) = LODWORD(STACK[0x6420]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x5F80]) ^ LODWORD(STACK[0x6960]) ^ __ROR4__(*v557, 8) ^ __ROR4__((_DWORD)v532, 24) ^ v569 ^ __ROR4__(v571, 16);
  v574 = v528 ^ 0x7418AF9E ^ (v572 + v466);
  LODWORD(v568) = (v455 + 1558335722 + ((1950575116 - v457) ^ LODWORD(STACK[0x6578]))) ^ v460;
  LODWORD(STACK[0x6560]) = v568;
  LODWORD(STACK[0x6578]) = v568 - 1642442068 - ((2 * v568) & 0x3C34A558);
  LODWORD(v571) = v431 ^ LODWORD(STACK[0x61DC]) ^ LODWORD(STACK[0x6740]) ^ v460;
  LODWORD(v572) = v431 ^ LODWORD(STACK[0x61C0]) ^ LODWORD(STACK[0x6770]) ^ v457;
  LODWORD(v573) = LODWORD(STACK[0x5F60]) ^ LODWORD(STACK[0x6760]) ^ v467;
  LODWORD(v455) = v431 ^ LODWORD(STACK[0x61BC]) ^ LODWORD(STACK[0x6750]) ^ v455;
  v575 = STACK[0xD898] + 4 * BYTE3(v572);
  v576 = STACK[0xD898] + 4 * (v431 ^ LOBYTE(STACK[0x61C0]) ^ LOBYTE(STACK[0x6770]) ^ v457);
  v577 = STACK[0xD898] + 4 * BYTE3(v455);
  v578 = 4 * BYTE2(v572);
  v579 = (_DWORD *)(STACK[0xD898] + v578);
  LODWORD(v570) = *(_DWORD *)v558;
  LODWORD(v457) = *v559;
  LODWORD(v467) = *v564;
  STACK[0xD898] = v575;
  LODWORD(v575) = *(_DWORD *)v575;
  STACK[0xD898] = v576;
  LODWORD(v576) = *(_DWORD *)v576;
  STACK[0xD898] = v577;
  LODWORD(v577) = *(_DWORD *)v577;
  STACK[0xD898] = (unint64_t)v579;
  v580 = (unint64_t)&v579[v578 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v558) = *v579;
  STACK[0xD898] = v580;
  LODWORD(v559) = *(_DWORD *)(v580 + 4 * BYTE1(v573));
  v581 = (_DWORD *)(v580 + 4 * v571);
  STACK[0xD898] = (unint64_t)v581;
  HIDWORD(v418) = (_DWORD)v559;
  LODWORD(v418) = (_DWORD)v559;
  LODWORD(v559) = *v581;
  v582 = (_DWORD *)(v580 + 4 * BYTE2(v455));
  STACK[0xD898] = (unint64_t)v582;
  LODWORD(v576) = (v418 >> 8) ^ __ROR4__(v576, 16) ^ *v582;
  v583 = 4 * (v573 >> 24);
  v584 = (_DWORD *)(v580 + v583);
  v585 = 4 * BYTE1(v455);
  v586 = &v584[(unint64_t)v585 / 4 + v583 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v584;
  LODWORD(v584) = *v584;
  STACK[0xD898] = (unint64_t)v586;
  v587 = &v586[v585 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v586) = *v586;
  v588 = &v587[BYTE3(v571)];
  STACK[0xD898] = (unint64_t)v588;
  v589 = *v588;
  v590 = BYTE2(v571);
  STACK[0xD898] = (unint64_t)&v587[v590];
  HIDWORD(v418) = v589;
  LODWORD(v418) = v589;
  v591 = v587[v590];
  v592 = &v587[BYTE2(v573)];
  STACK[0xD898] = (unint64_t)v592;
  v593 = *v592;
  v594 = &v587[BYTE1(v571)];
  STACK[0xD898] = (unint64_t)v594;
  LODWORD(v571) = *v594;
  v595 = 4 * v455;
  v596 = &v587[(unint64_t)v595 / 4];
  v597 = 4 * v573;
  v598 = &v596[(unint64_t)v597 / 4 + v595 / 0xFFFFFFFFFFFFFFFCLL];
  v599 = BYTE1(v572);
  v600 = (unint64_t)&v598[v599 + v597 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v576) = v494 ^ LODWORD(STACK[0x5F58]) ^ (((v418 >> 24) ^ -(int)(v418 >> 24) ^ (v576 - ((v418 >> 24) ^ v576)))
                                                 + v576);
  LODWORD(v577) = v494 ^ LODWORD(STACK[0x5F50]) ^ __ROR4__(v577, 24) ^ __ROR4__((_DWORD)v559, 16) ^ v593;
  STACK[0xD898] = (unint64_t)v596;
  LODWORD(v559) = *v596;
  STACK[0xD898] = (unint64_t)v598;
  LODWORD(v598) = *v598;
  STACK[0xD898] = v600;
  v601 = v600 - v599 * 4;
  LODWORD(v418) = __ROR4__(*(_DWORD *)v600, 8);
  LODWORD(v600) = (v577 ^ v418) - 1690222978 - ((2 * (v577 ^ v418)) & 0x36827CFC);
  LODWORD(v571) = v494 ^ LODWORD(STACK[0x5F48]) ^ v558 ^ __ROR4__((_DWORD)v584, 24) ^ __ROR4__(v571, 8);
  LODWORD(v418) = __ROR4__((_DWORD)v559, 16);
  LODWORD(v571) = (v571 ^ v418) - 1690222978 - ((2 * (v571 ^ v418)) & 0x36827CFC);
  LODWORD(v575) = LODWORD(STACK[0x5F38]) ^ __ROR4__(v575, 24) ^ __ROR4__((_DWORD)v586, 8) ^ v591;
  LODWORD(v418) = __ROR4__((_DWORD)v598, 16);
  LODWORD(v494) = v494 ^ LODWORD(STACK[0x5FE0]) ^ LODWORD(STACK[0x66C8]) ^ ((v575 ^ v418)
                                                                          - 1690222978
                                                                          - ((2 * (v575 ^ v418)) & 0x36827CFC));
  LODWORD(v571) = v571 ^ LODWORD(STACK[0x66E8]);
  v602 = v601 + 4 * BYTE1(v571);
  STACK[0xD898] = v602;
  LODWORD(v598) = *(_DWORD *)v602;
  v603 = (_DWORD *)(v601 + 4 * BYTE2(v494));
  STACK[0xD898] = (unint64_t)v603;
  LODWORD(v600) = v600 ^ LODWORD(STACK[0x66D0]);
  LODWORD(v602) = *v603;
  STACK[0xD898] = v601;
  LODWORD(v603) = *(_DWORD *)(v601 + 4 * BYTE3(v571));
  v604 = 4 * BYTE3(v600);
  v605 = v601 + v604;
  v606 = 4 * BYTE3(v494);
  v607 = v605 + v606 - v604;
  v608 = 4 * v571;
  v609 = (_DWORD *)(v607 + v608 - v606);
  LODWORD(v576) = (v576 - 1690222978 - ((2 * v576) & 0x36827CFC)) ^ LODWORD(STACK[0x66C0]);
  v610 = BYTE2(v600);
  v611 = (unint64_t)&v609[v608 / 0xFFFFFFFFFFFFFFFCLL + v610];
  v612 = 4 * v576;
  v613 = (_DWORD *)(v611 + v612 - v610 * 4);
  v614 = 4 * BYTE1(v576);
  v615 = &v613[(unint64_t)v614 / 4 + v612 / 0xFFFFFFFFFFFFFFFCLL];
  v616 = 4 * v494;
  v617 = &v615[(unint64_t)v616 / 4 + v614 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = v605;
  LODWORD(v605) = *(_DWORD *)v605;
  STACK[0xD898] = v607;
  LODWORD(v607) = *(_DWORD *)v607;
  STACK[0xD898] = (unint64_t)v609;
  LODWORD(v609) = *v609;
  STACK[0xD898] = v611;
  LODWORD(v611) = *(_DWORD *)v611;
  STACK[0xD898] = (unint64_t)v613;
  LODWORD(v613) = *v613;
  STACK[0xD898] = (unint64_t)v615;
  LODWORD(v615) = *v615;
  STACK[0xD898] = (unint64_t)v617;
  v618 = &v617[v616 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v617) = *v617;
  v619 = &v618[BYTE2(v571)];
  STACK[0xD898] = (unint64_t)v619;
  LODWORD(v571) = *v619;
  v620 = 4 * BYTE2(v576);
  STACK[0xD898] = (unint64_t)v618 + v620;
  HIDWORD(v418) = (_DWORD)v609;
  LODWORD(v418) = (_DWORD)v609;
  LODWORD(v607) = (v418 >> 16) ^ __ROR4__(v607, 24) ^ *(_DWORD *)((char *)v618 + v620);
  v621 = &v618[BYTE1(v494)];
  STACK[0xD898] = (unint64_t)v621;
  LODWORD(v494) = *v621;
  v622 = &v618[BYTE1(v600)];
  STACK[0xD898] = (unint64_t)v622;
  LODWORD(v621) = *v622;
  v623 = 4 * v600;
  STACK[0xD898] = (unint64_t)v618 + v623;
  LODWORD(v418) = __ROR4__((_DWORD)v621, 8);
  LODWORD(v623) = *(_DWORD *)((char *)v618 + v623);
  v624 = BYTE3(v576);
  STACK[0xD898] = (unint64_t)&v618[v624];
  LODWORD(v607) = v504 ^ LODWORD(STACK[0x5FB0]) ^ LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x6708]) ^ ((v607 ^ v418) - 1891796867 - ((2 * (v607 ^ v418)) & 0x1E7AF0FA));
  LODWORD(v571) = v380 ^ LODWORD(STACK[0x61A0]) ^ __ROR4__(v605, 24) ^ __ROR4__((_DWORD)v613, 16) ^ v571;
  LODWORD(v418) = __ROR4__(v494, 8);
  LODWORD(v571) = LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6720]) ^ ((v571 ^ v418)
                                                                   - 1891796867
                                                                   - ((2 * (v571 ^ v418)) & 0x1E7AF0FA));
  LODWORD(v494) = v504 ^ LODWORD(STACK[0x5F30]) ^ v602 ^ __ROR4__((_DWORD)v603, 24) ^ __ROR4__((_DWORD)v615, 8);
  LODWORD(v418) = __ROR4__(v623, 16);
  LODWORD(v494) = (v494 ^ v418) - 1891796867 - ((2 * (v494 ^ v418)) & 0x1E7AF0FA);
  LODWORD(v605) = LODWORD(STACK[0x6720]) ^ LODWORD(STACK[0x6198]) ^ __ROR4__((_DWORD)v598, 8) ^ v611 ^ __ROR4__((_DWORD)v617, 16);
  LODWORD(v418) = __ROR4__(v618[v624], 24);
  LODWORD(v605) = LODWORD(STACK[0x66D8]) ^ v380 ^ ((v605 ^ v418) - 1891796867 - ((2 * (v605 ^ v418)) & 0x1E7AF0FA));
  LODWORD(v494) = v494 ^ LODWORD(STACK[0x66E0]);
  v625 = &v618[BYTE1(v494)];
  v626 = &v618[BYTE3(v607)];
  v627 = (unint64_t)&v618[BYTE2(v605)];
  v628 = (unint64_t)&v618[v605];
  v629 = 4 * v571;
  STACK[0xD898] = (unint64_t)v625;
  LODWORD(v621) = *v625;
  STACK[0xD898] = (unint64_t)v626;
  LODWORD(v626) = *v626;
  STACK[0xD898] = v627;
  LODWORD(v627) = *(_DWORD *)v627;
  STACK[0xD898] = v628;
  LODWORD(v628) = *(_DWORD *)v628;
  STACK[0xD898] = (unint64_t)v618 + v629;
  LODWORD(v504) = *(_DWORD *)((char *)v618 + v629);
  v630 = &v618[BYTE2(v607)];
  STACK[0xD898] = (unint64_t)v630;
  LODWORD(v629) = *v630;
  v631 = &v618[BYTE1(v607)];
  v632 = &v618[BYTE3(v571)];
  v633 = &v618[BYTE3(v494)];
  v634 = &v618[v607];
  v635 = &v618[BYTE1(v605)];
  v636 = &v618[BYTE1(v571)];
  v637 = 4 * BYTE3(v605);
  v638 = &v618[(unint64_t)v637 / 4];
  v639 = BYTE2(v494);
  v640 = (unint64_t)&v638[v639 + v637 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD898] = (unint64_t)v631;
  LODWORD(v620) = *v631;
  STACK[0xD898] = (unint64_t)v632;
  LODWORD(v632) = *v632;
  STACK[0xD898] = (unint64_t)v633;
  LODWORD(v633) = *v633;
  STACK[0xD898] = (unint64_t)v634;
  LODWORD(v634) = *v634;
  STACK[0xD898] = (unint64_t)v635;
  LODWORD(v635) = *v635;
  STACK[0xD898] = (unint64_t)v636;
  LODWORD(v636) = *v636;
  STACK[0xD898] = (unint64_t)v638;
  LODWORD(v638) = *v638;
  STACK[0xD898] = v640;
  v641 = v640 - v639 * 4;
  LODWORD(v640) = *(_DWORD *)v640;
  v642 = (_DWORD *)(v641 + 4 * v494);
  STACK[0xD898] = (unint64_t)v642;
  LODWORD(v494) = *v642;
  v643 = v568 ^ 0x1F2A9A29;
  LODWORD(STACK[0x6558]) = (v568 ^ 0x1F2A9A29) - 1642442068 - ((2 * (v568 ^ 0x1F2A9A29)) & 0x3C34A558);
  v644 = 4 * BYTE2(v571);
  STACK[0xD898] = v641 + v644;
  LODWORD(v567) = STACK[0x6680];
  LODWORD(v504) = LODWORD(STACK[0x6680]) ^ LODWORD(STACK[0x5F28]) ^ __ROR4__(v504, 16) ^ v629 ^ __ROR4__((_DWORD)v633, 24);
  LODWORD(v418) = __ROR4__((_DWORD)v635, 8);
  v645 = STACK[0x6678];
  v646 = LODWORD(STACK[0x5F90]) ^ LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6700]) ^ ((v504 ^ v418)
                                                                                   - 419631239
                                                                                   - ((2
                                                                                     * (v504 ^ v418)) & 0xCDF9DEF2));
  LODWORD(v644) = *(_DWORD *)(v641 + v644);
  STACK[0xD898] = v641;
  LODWORD(v628) = LODWORD(STACK[0x5F20]) ^ __ROR4__(v628, 16) ^ __ROR4__(v620, 8);
  LODWORD(v418) = __ROR4__((_DWORD)v632, 24);
  v647 = v542 ^ LODWORD(STACK[0x6A90]) ^ ((v628 ^ v418 ^ v640) - 419631239 - ((2 * (v628 ^ v418 ^ v640)) & 0xCDF9DEF2));
  LODWORD(v628) = LODWORD(STACK[0x6190]) ^ v567 ^ __ROR4__((_DWORD)v621, 8) ^ __ROR4__((_DWORD)v634, 16);
  LODWORD(v418) = __ROR4__((_DWORD)v638, 24);
  v648 = LODWORD(STACK[0x66F8]) ^ v645 ^ ((v628 ^ v418 ^ v644) - 419631239 - ((2 * (v628 ^ v418 ^ v644)) & 0xCDF9DEF2));
  LODWORD(v644) = LODWORD(STACK[0x6188]) ^ __ROR4__((_DWORD)v626, 24) ^ v627 ^ __ROR4__((_DWORD)v636, 8);
  LODWORD(v418) = __ROR4__(v494, 16);
  v649 = v542 ^ LODWORD(STACK[0x6710]) ^ ((v644 ^ v418) - 419631239 - ((2 * (v644 ^ v418)) & 0xCDF9DEF2));
  v650 = STACK[0xD878];
  v651 = (_DWORD *)(STACK[0xD878] + 4 * HIBYTE(v647));
  v652 = (_DWORD *)(STACK[0xD878] + 4 * BYTE1(v647));
  v653 = STACK[0xD878];
  v654 = (_DWORD *)(STACK[0xD878] + 4 * BYTE2(v648));
  v655 = (_DWORD *)(STACK[0xD878] + 4 * v648);
  v656 = (_DWORD *)(STACK[0xD878] + 4 * v646);
  v657 = STACK[0xD878];
  LODWORD(v644) = *(_DWORD *)(STACK[0xD878] + 4 * BYTE1(v646)) ^ __ROR4__(*(_DWORD *)(STACK[0xD878] + 4 * BYTE2(v647)), 24) ^ __ROR4__(*(_DWORD *)(STACK[0xD878]+ 4 * HIBYTE(v648)), 16);
  v658 = (_DWORD *)(STACK[0xD878] + 4 * BYTE2(v646));
  v659 = (_DWORD *)(STACK[0xD878] + 4 * v649);
  v660 = 4 * HIBYTE(v649);
  v661 = (_DWORD *)(STACK[0xD878] + v660);
  STACK[0xD878] = (unint64_t)v659;
  LODWORD(v418) = __ROR4__(*v659, 8);
  v662 = (v644 ^ v418) - 1642442068 - ((2 * (v644 ^ v418)) & 0x3C34A558);
  v663 = STACK[0x6820];
  LODWORD(v644) = v528 ^ LODWORD(STACK[0x6418]) ^ LODWORD(STACK[0x5F70]) ^ LODWORD(STACK[0x6820]) ^ v457 ^ __ROR4__(STACK[0x6628], 24) ^ __ROR4__(v467, 8) ^ __ROR4__(STACK[0x6570], 16);
  v664 = LODWORD(STACK[0x5F68]) ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x6880]) ^ __ROR4__((_DWORD)v570, 8) ^ __ROR4__(STACK[0x6590], 24) ^ LODWORD(STACK[0x6580]) ^ (LODWORD(STACK[0x6588]) << 16) ^ HIWORD(LODWORD(STACK[0x6588]));
  v665 = STACK[0x6AA0];
  v666 = v644 ^ 0xCDF7D069;
  if ((STACK[0x6AA0] & 1) != 0)
    v667 = LODWORD(STACK[0x6568]) ^ 0x80C94CFD;
  else
    v667 = v574;
  if ((v665 & 1) != 0)
    v668 = v574;
  else
    v668 = v666;
  v669 = v664 ^ 0xBC35A4C0;
  if ((v665 & 1) != 0)
    v670 = v666;
  else
    v670 = v669;
  if ((v665 & 1) == 0)
    v669 = LODWORD(STACK[0x6568]) ^ 0x80C94CFD;
  v671 = *(_DWORD *)(v650 + 4 * BYTE1(v648));
  v672 = *(_DWORD *)(v650 + ((v646 >> 22) & 0x3FC));
  v673 = *(_DWORD *)(v653 + 4 * BYTE2(v649));
  v674 = *(_DWORD *)(v657 + 4 * v647);
  v675 = *(_DWORD *)(v657 + 4 * BYTE1(v649));
  v676 = LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x6438]) ^ 0x6F47D2E7;
  v677 = v676 ^ ((v643 ^ -v643 ^ ((LODWORD(STACK[0x6630]) ^ 0x9E1A52AC)
                                + (LODWORD(STACK[0x6630]) ^ 0xE0D565D6 ^ LODWORD(STACK[0x6578]))
                                + 1))
               + (LODWORD(STACK[0x6630]) ^ 0x9E1A52AC)) ^ *v652 ^ __ROR4__(*v654, 24) ^ __ROR4__(*v656, 8);
  STACK[0xD878] = (unint64_t)v661;
  v678 = v677 ^ __ROR4__(*v661, 16);
  v679 = v676 ^ LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6558]) ^ __ROR4__(*v651, 16) ^ __ROR4__(*v655, 8) ^ v675 ^ __ROR4__(*v658, 24);
  v680 = v676 ^ LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x6558]) ^ v671 ^ __ROR4__(v672, 16) ^ __ROR4__(v673, 24) ^ __ROR4__(v674, 8);
  if ((v665 & 1) != 0)
    v681 = v676 ^ LODWORD(STACK[0x67A0]) ^ v643 ^ v662;
  else
    v681 = v678;
  if ((v665 & 1) != 0)
    v682 = v679;
  else
    v682 = v676 ^ LODWORD(STACK[0x67A0]) ^ v643 ^ v662;
  if ((v665 & 1) != 0)
    v683 = v678;
  else
    v683 = v680;
  if ((v665 & 1) != 0)
    v679 = v680;
  if ((v665 & 2) != 0)
    v684 = v668;
  else
    v684 = v669;
  if ((v665 & 2) != 0)
  {
    v668 = v669;
    v685 = v670;
  }
  else
  {
    v685 = v667;
  }
  if ((v665 & 2) != 0)
    v686 = v667;
  else
    v686 = v670;
  STACK[0xD878] = (unint64_t)&v661[v660 / 0xFFFFFFFFFFFFFFFCLL];
  if ((v665 & 2) != 0)
    v687 = v681;
  else
    v687 = v679;
  if ((v665 & 2) != 0)
  {
    v681 = v679;
    v688 = v682;
  }
  else
  {
    v688 = v683;
  }
  if ((v665 & 2) != 0)
    v682 = v683;
  v689 = v682 ^ v686;
  v690 = v682 ^ v686 ^ v643 ^ v668;
  v691 = v685 + 160808181 * ((LODWORD(STACK[0x6560]) ^ 0xF5D6483F) + (v687 ^ LODWORD(STACK[0x25C4]) ^ v690)) + 160808181;
  v692 = v688 ^ v643;
  v693 = (v689 ^ v681) + 2076478055 * ((v691 ^ 0xEAFCD216) - (v688 ^ v643));
  v694 = v693 ^ v643;
  v695 = v690 ^ (-284110667 * (v681 ^ 0xEAFCD216)) ^ (-284110667 * v694);
  v696 = v668 ^ v684 ^ v681 ^ (-650565667 * v692) ^ (-650565667 * (v691 ^ 0xEAFCD216)) ^ v694;
  v697 = v681 ^ v682 ^ v693;
  v698 = LODWORD(STACK[0x5EB0]) ^ 0x29040641 ^ (LODWORD(STACK[0x6960]) ^ 0x3941E418) & STACK[0x6408];
  v699 = (2 * (v698 - ((2 * v698) & 0x27427AE)) - 2106316882) ^ LODWORD(STACK[0x6960]);
  v700 = STACK[0x6658];
  v701 = STACK[0x6850];
  v702 = STACK[0x6AB0];
  v703 = LODWORD(STACK[0x6980]) ^ (2
                                 * ((LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x25C8])) & STACK[0x5EA8] ^ LODWORD(STACK[0x5EA0])));
  v704 = ((v703 ^ 0xDF6E619F) & STACK[0x6860] | LODWORD(STACK[0x5EF8])) ^ 0x8180040;
  v705 = STACK[0x6688];
  v706 = LODWORD(STACK[0x5EE8]) ^ 0x14403182 ^ (v703 ^ 0xCA5E956D) & STACK[0x6688];
  v707 = STACK[0x66B0];
  v708 = (((v704 + 2111429575 - (STACK[0x25D4] & (2 * v704)) + 1822) ^ LODWORD(STACK[0x25CC])) << v701) | (((((2 * v706) & 0xA274246E) - v706 - 1362760248) ^ 0xEECDEDCA) >> v707);
  v709 = v663 & 0x3175E46E ^ 0xA7550438 ^ (v663 ^ 0x929462F3) & STACK[0x5ED8];
  v710 = (2 * ((STACK[0x25D0] & (2 * v709)) - v709) + 2083737178) ^ v663;
  v711 = LODWORD(STACK[0x5F10]) ^ 0x20B001C4 ^ (v710 ^ 0xE6D067F1) & STACK[0x6660];
  v712 = LODWORD(STACK[0x5F00]) ^ 0x14120 ^ (v710 ^ 0x9A1C05B9) & STACK[0x6658];
  v713 = STACK[0x6870];
  v714 = (((((2 * v712) | 0x4D108F52) - v712 - 646465449) ^ 0x3CA0670D) << v713) | (v711 >> v702);
  v715 = LODWORD(STACK[0x5E98]) ^ 0x39430B10 ^ (LODWORD(STACK[0x6880]) ^ 0x2F634DE1) & STACK[0x6408];
  v716 = (2 * (v715 - ((2 * v715) & 0x5E468424)) - 565803996) ^ LODWORD(STACK[0x6880]);
  v717 = ((v716 ^ 0x9551D9A8) & STACK[0x6860] | LODWORD(STACK[0x5EF0])) ^ 0x3020248;
  v718 = LODWORD(STACK[0x6180]) ^ LODWORD(STACK[0x67B0]) ^ (LODWORD(STACK[0x6810])
                                                          + 932988934
                                                          - ((2 * LODWORD(STACK[0x6810])) & 0x6F38900C)) ^ v708 ^ ((((((v716 ^ 0x4BBCA2EC) & v705 ^ LODWORD(STACK[0x5EE0])) & 0x24735428 ^ LODWORD(STACK[0x25D8])) + ((v716 ^ 0x4BBCA2EC) & v705 ^ LODWORD(STACK[0x5EE0]) ^ 0x132E94F5) - (((v716 ^ 0x4BBCA2EC) & v705 ^ LODWORD(STACK[0x5EE0]) ^ 0x132E94F5) & 0x24735428)) ^ 0x6317D0C8u) >> v702) ^ (((((2 * v717) & 0xCCB5959A) - v717 + 430257458) ^ 0xB1001821) << v701) ^ v714 ^ (((((((v699 ^ 0x221B6228) & v700 ^ LODWORD(STACK[0x5F08])) & 0x384F116E ^ 0x204E102D) + (((v699 ^ 0x221B6228) & v700 ^ LODWORD(STACK[0x5F08])) & 0xC7B0EE91) - 1) ^ 0x204F3BEC) << v701) + ((LODWORD(STACK[0x5F18]) ^ 0x80103985 ^ (v699 ^ 0x925FB67C) & STACK[0x6660]) >> v702));
  v719 = (v718 + 395783858 - ((2 * v718) & 0x2F2E5D64)) ^ LODWORD(STACK[0x6910]);
  v720 = (v719 + 395783858 - ((2 * v719) & 0x2F2E5D64)) ^ LODWORD(STACK[0x6900]);
  v721 = (v720 + 495988328 - ((2 * v720) & 0x3B205CD0)) ^ LODWORD(STACK[0x68D0]);
  v722 = (v721 + 495988328 - ((2 * v721) & 0x3B205CD0)) ^ LODWORD(STACK[0x6AC0]);
  v723 = (v722 + 1977575785 - ((2 * v722) & 0xEBBED2D2)) ^ LODWORD(STACK[0x68B0]);
  v724 = (v723 + 1977575785 - ((2 * v723) & 0xEBBED2D2)) ^ LODWORD(STACK[0x68E0]);
  v725 = (v724 + 495988328 - ((2 * v724) & 0x3B205CD0)) ^ LODWORD(STACK[0x6890]);
  v726 = (v725 + 495988328 - ((2 * v725) & 0x3B205CD0)) ^ LODWORD(STACK[0x6920]);
  v727 = LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x6440]) ^ (v726 + 395783858 - ((2 * v726) & 0x2F2E5D64));
  v728 = (v727 + 1977575785 - ((2 * v727) & 0xEBBED2D2)) ^ LODWORD(STACK[0x68A0]);
  v729 = (v728 + 395783858 - ((2 * v728) & 0x2F2E5D64)) ^ LODWORD(STACK[0x68F0]);
  v730 = LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x67F0]) ^ LODWORD(STACK[0x6A80]) ^ (v729 + 1977575785 - ((2 * v729) & 0xEBBED2D2));
  v731 = LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6A70]) ^ (v730 + 932988934 - ((2 * v730) & 0x6F38900C));
  v732 = LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x67C0]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x6A20]) ^ LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x69F0]) ^ LODWORD(STACK[0x6A60]) ^ LODWORD(STACK[0x69C0]) ^ (v731 + 932988934 - ((2 * v731) & 0x6F38900C));
  v733 = (v732 + 932988934 - ((2 * v732) & 0x6F38900C)) ^ LODWORD(STACK[0x6830]);
  v734 = (60644291 * ((v733 ^ LODWORD(STACK[0x6440])) - LODWORD(STACK[0x63E8]))
        + 1349675203 * (v692 - (v691 ^ 0xEAFCD216))
        + (v696 ^ v695)) ^ LODWORD(STACK[0x6638]);
  v735 = LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x5E60]) ^ (1528711187 * (v733 ^ LODWORD(STACK[0x6440]))) ^ v691;
  v736 = (v697 + 860371041 * (LODWORD(STACK[0x5E58]) - v733)) ^ LODWORD(STACK[0x6640]);
  v737 = LODWORD(STACK[0x5E58]) ^ LODWORD(STACK[0x6648]) ^ v733 ^ v695;
  v738 = v734 ^ (2 * ((v734 ^ 0x20103665) & STACK[0x5ED0] ^ v734 & 0x628B91EF));
  v739 = (v735 ^ 0x7A13EE1A) & STACK[0x5E90] ^ v735 & 0xC11A4E7D;
  v740 = (((v738 ^ 0xE01016AF) & STACK[0x6860]) << v701) ^ (((v738 ^ 0xE01016AF) & STACK[0x6688]) >> v707);
  v741 = v735 ^ (2 * ((v739 & 0x718A6AF4 ^ 0xA2844) + (v739 ^ 0xF3B046B0) - ((v739 ^ 0xF3B046B0) & 0x718A6AF4))) ^ 0xFE432AA2;
  v742 = ((v741 & STACK[0x6660]) >> v702) + ((v741 & STACK[0x6658]) << v713);
  v743 = v737 ^ (2 * ((v737 ^ 0x68039F01) & STACK[0x5EC8] ^ v737 & 0x7B2BC507)) ^ 0xB8049503;
  v744 = ((v743 & STACK[0x6660]) >> v702) | ((v743 & STACK[0x6658]) << v701);
  v745 = (v736 ^ 0x9754856D) & STACK[0x5E88] ^ v736 & 0x8EE0FBF8;
  v746 = v736 ^ 0x2A1FDB25 ^ (2 * ((v745 & STACK[0x25DC] ^ 0x8002008) + (v745 & 0x52E59F54 ^ 0x50E50E45)) - 2);
  v747 = ((v746 & STACK[0x6688]) >> v707) ^ ((v746 & STACK[0x6860]) << v713);
  v748 = v742 ^ LODWORD(STACK[0x6400]) ^ v744 ^ v740;
  v749 = (LODWORD(STACK[0x6178]) ^ v740) + 80712913 - ((2 * (LODWORD(STACK[0x6178]) ^ v740)) & 0x99F29A2);
  v750 = (v749 ^ LODWORD(STACK[0x6428])) + 1064097851 - ((2 * (v749 ^ LODWORD(STACK[0x6428]))) & 0x7ED9B076);
  v751 = LODWORD(STACK[0x6400]) ^ LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x63E0]) ^ LODWORD(STACK[0x63C0]) ^ v742 ^ v744 ^ 0xF085D590 ^ v747;
  v752 = LODWORD(STACK[0x63F8]) ^ LODWORD(STACK[0x6118]) ^ LODWORD(STACK[0x6110]) ^ v744 ^ v747 ^ v748;
  v753 = LODWORD(STACK[0x6120]) ^ v748;
  v754 = STACK[0xD868];
  v755 = STACK[0xD868] + 4 * HIBYTE(v753);
  STACK[0xD868] = v755;
  v756 = *(_DWORD *)v755;
  v757 = (_DWORD *)(v754 + 4 * BYTE2(v751));
  STACK[0xD868] = (unint64_t)v757;
  LODWORD(v755) = *v757;
  v752 ^= 0xB828DE95;
  v758 = 4 * BYTE1(v752);
  STACK[0xD868] = v754 + v758;
  v759 = v750 ^ LODWORD(STACK[0x6430]);
  LODWORD(v758) = *(_DWORD *)(v754 + v758);
  v760 = 4 * v759;
  v761 = (_DWORD *)(v754 + v760);
  v762 = HIBYTE(v751);
  v763 = (unint64_t)&v761[v762 + v760 / 0xFFFFFFFFFFFFFFFCLL];
  v764 = 4 * BYTE2(v752);
  v765 = (_DWORD *)(v763 + v764 - v762 * 4);
  STACK[0xD868] = (unint64_t)v761;
  LODWORD(v761) = *v761;
  STACK[0xD868] = v763;
  LODWORD(v763) = *(_DWORD *)v763;
  STACK[0xD868] = (unint64_t)v765;
  LODWORD(v763) = *v765 ^ __ROR4__(v763, 24);
  v766 = 4 * BYTE1(v759);
  v767 = &v765[(unint64_t)v766 / 4 + v764 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD868] = (unint64_t)v767;
  v768 = &v767[v766 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v767) = *v767;
  v769 = v753;
  STACK[0xD868] = (unint64_t)&v768[v769];
  HIDWORD(v770) = (_DWORD)v767;
  LODWORD(v770) = (_DWORD)v767;
  LODWORD(v767) = v768[v769];
  v771 = 4 * HIBYTE(v752);
  v772 = &v768[(unint64_t)v771 / 4];
  v773 = BYTE2(v759);
  v774 = (unint64_t)&v772[v773 + v771 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD868] = (unint64_t)v772;
  LODWORD(v772) = *v772;
  STACK[0xD868] = v774;
  v775 = v774 - v773 * 4;
  LODWORD(v774) = *(_DWORD *)v774;
  v776 = (int *)(v775 + 4 * BYTE1(v753));
  STACK[0xD868] = (unint64_t)v776;
  v777 = *v776;
  v778 = (_DWORD *)(v775 + 4 * v751);
  STACK[0xD868] = (unint64_t)v778;
  LODWORD(v776) = *v778;
  v779 = 4 * HIBYTE(v759);
  v780 = (_DWORD *)(v775 + v779);
  v781 = BYTE2(v753);
  v782 = (unint64_t)&v780[v781 + v779 / 0xFFFFFFFFFFFFFFFCLL];
  v783 = 4 * BYTE1(v751);
  v784 = (_DWORD *)(v782 + v783 - v781 * 4);
  v785 = LODWORD(STACK[0x6380]) ^ __ROR4__(v756, 24) ^ v755 ^ __ROR4__(v758, 8) ^ __ROR4__((_DWORD)v761, 16);
  STACK[0xD868] = (unint64_t)v780;
  LODWORD(v761) = *v780;
  STACK[0xD868] = v782;
  LODWORD(v782) = *(_DWORD *)v782;
  STACK[0xD868] = (unint64_t)v784;
  v786 = &v784[v783 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v784) = *v784;
  v787 = 4 * v752;
  STACK[0xD868] = (unint64_t)v786 + v787;
  LODWORD(v755) = LODWORD(STACK[0x6378]) ^ ((_DWORD)v772 << 8) ^ (v772 >> 24) ^ v774 ^ __ROR4__(v777, 8) ^ __ROR4__((_DWORD)v776, 16);
  LODWORD(v758) = LODWORD(STACK[0x6170]) ^ __ROR4__((_DWORD)v767, 16) ^ ((v770 >> 8) + v763 - 2 * ((v770 >> 8) & v763));
  LODWORD(v782) = LODWORD(STACK[0x63D8]) ^ __ROR4__((_DWORD)v761, 24) ^ v782;
  LODWORD(v770) = __ROR4__((_DWORD)v784, 8);
  LODWORD(v787) = *(_DWORD *)((char *)v786 + v787);
  v788 = 4 * HIBYTE(v785);
  v789 = &v786[(unint64_t)v788 / 4];
  v790 = BYTE2(v758);
  v791 = (unint64_t)&v789[v790 + v788 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v782) = v782 ^ v770 ^ ((_DWORD)v787 << 16);
  LODWORD(v787) = v782 ^ WORD1(v787);
  v792 = 4 * BYTE1(v755);
  v793 = v791 - v790 * 4 + v792;
  v794 = 4 * v787;
  v795 = (_DWORD *)(v793 + v794 - v792);
  STACK[0xD868] = (unint64_t)v789;
  LODWORD(v789) = *v789;
  STACK[0xD868] = v791;
  LODWORD(v791) = *(_DWORD *)v791;
  STACK[0xD868] = v793;
  LODWORD(v793) = *(_DWORD *)v793;
  STACK[0xD868] = (unint64_t)v795;
  v796 = &v795[v794 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v795) = *v795;
  v797 = &v796[BYTE3(v758)];
  STACK[0xD868] = (unint64_t)v797;
  LODWORD(v772) = *v797;
  v798 = BYTE2(v755);
  v799 = (unint64_t)&v796[v798];
  v800 = 4 * BYTE1(v787);
  v801 = (_DWORD *)(v799 + v800 - v798 * 4);
  v802 = 4 * v785;
  v803 = &v801[v800 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v802 / 4];
  v804 = 4 * BYTE3(v755);
  v805 = &v803[(unint64_t)v804 / 4 + v802 / 0xFFFFFFFFFFFFFFFCLL];
  v806 = 4 * BYTE2(v782);
  v807 = &v805[v804 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v806 / 4];
  v808 = 4 * BYTE1(v785);
  v809 = &v807[(unint64_t)v808 / 4 + v806 / 0xFFFFFFFFFFFFFFFCLL];
  v810 = 4 * v758;
  v811 = &v809[(unint64_t)v810 / 4 + v808 / 0xFFFFFFFFFFFFFFFCLL];
  v812 = 4 * BYTE3(v782);
  v813 = &v811[(unint64_t)v812 / 4 + v810 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v789) = LODWORD(STACK[0x6370]) ^ __ROR4__((_DWORD)v789, 24) ^ v791 ^ __ROR4__(v793, 8) ^ __ROR4__((_DWORD)v795, 16);
  v814 = BYTE2(v785);
  v815 = (unint64_t)&v813[v812 / 0xFFFFFFFFFFFFFFFCLL + v814];
  v816 = 4 * BYTE1(v758);
  v817 = (_DWORD *)(v815 + v816 - v814 * 4);
  STACK[0xD868] = v799;
  LODWORD(v793) = *(_DWORD *)v799;
  STACK[0xD868] = (unint64_t)v801;
  LODWORD(v758) = *v801;
  STACK[0xD868] = (unint64_t)v803;
  LODWORD(v803) = *v803;
  STACK[0xD868] = (unint64_t)v805;
  LODWORD(v795) = *v805;
  STACK[0xD868] = (unint64_t)v807;
  LODWORD(v799) = *v807;
  STACK[0xD868] = (unint64_t)v809;
  LODWORD(v801) = *v809;
  STACK[0xD868] = (unint64_t)v811;
  LODWORD(v805) = *v811;
  STACK[0xD868] = (unint64_t)v813;
  LODWORD(v807) = *v813;
  STACK[0xD868] = v815;
  LODWORD(v815) = *(_DWORD *)v815;
  STACK[0xD868] = (unint64_t)v817;
  v818 = &v817[v816 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v817) = *v817;
  v819 = 4 * v755;
  STACK[0xD868] = (unint64_t)v818 + v819;
  LODWORD(v795) = LODWORD(STACK[0x616C]) ^ __ROR4__((_DWORD)v795, 24) ^ v799 ^ __ROR4__((_DWORD)v801, 8) ^ __ROR4__((_DWORD)v805, 16);
  LODWORD(v819) = *(_DWORD *)((char *)v818 + v819);
  LODWORD(v803) = LODWORD(STACK[0x6160]) ^ __ROR4__((_DWORD)v772, 24) ^ v793 ^ __ROR4__(v758, 8) ^ __ROR4__((_DWORD)v803, 16);
  v820 = 4 * (v789 >> 24);
  STACK[0xD868] = (unint64_t)v818 + v820;
  LODWORD(v815) = LODWORD(STACK[0x6158]) ^ __ROR4__((_DWORD)v807, 24) ^ v815 ^ __ROR4__((_DWORD)v817, 8) ^ __ROR4__(v819, 16);
  LODWORD(v817) = *(_DWORD *)((char *)v818 + v820);
  v821 = &v818[BYTE2(v803)];
  STACK[0xD868] = (unint64_t)v821;
  LODWORD(v820) = *v821;
  v822 = 4 * BYTE1(v795);
  v823 = &v818[(unint64_t)v822 / 4];
  v824 = 4 * v815;
  v825 = &v823[(unint64_t)v824 / 4 + v822 / 0xFFFFFFFFFFFFFFFCLL];
  v826 = 4 * (v803 >> 24);
  v827 = &v825[(unint64_t)v826 / 4 + v824 / 0xFFFFFFFFFFFFFFFCLL];
  v828 = BYTE2(v795);
  v829 = (unint64_t)&v827[v826 / 0xFFFFFFFFFFFFFFFCLL + v828];
  v830 = 4 * BYTE1(v815);
  v831 = (_DWORD *)(v829 + v830 - v828 * 4);
  v832 = 4 * v789;
  v833 = &v831[(unint64_t)v832 / 4 + v830 / 0xFFFFFFFFFFFFFFFCLL];
  v834 = 4 * (v795 >> 24);
  v835 = &v833[v832 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v834 / 4];
  v836 = BYTE2(v815);
  v837 = (unint64_t)&v835[v836 + v834 / 0xFFFFFFFFFFFFFFFCLL];
  v838 = 4 * BYTE1(v789);
  v839 = (_DWORD *)(v837 - v836 * 4 + v838);
  v840 = 4 * v803;
  v841 = &v839[(unint64_t)v840 / 4 + v838 / 0xFFFFFFFFFFFFFFFCLL];
  v842 = 4 * BYTE3(v815);
  v843 = &v841[v840 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v842 / 4];
  v844 = BYTE2(v789);
  v845 = (unint64_t)&v843[v844 + v842 / 0xFFFFFFFFFFFFFFFCLL];
  v846 = 4 * BYTE1(v803);
  v847 = (_DWORD *)(v845 + v846 - v844 * 4);
  STACK[0xD868] = (unint64_t)v823;
  LODWORD(v823) = *v823;
  STACK[0xD868] = (unint64_t)v825;
  LODWORD(v825) = *v825;
  STACK[0xD868] = (unint64_t)v827;
  LODWORD(v827) = *v827;
  STACK[0xD868] = v829;
  LODWORD(v829) = *(_DWORD *)v829;
  STACK[0xD868] = (unint64_t)v831;
  LODWORD(v831) = *v831;
  STACK[0xD868] = (unint64_t)v833;
  LODWORD(v833) = *v833;
  STACK[0xD868] = (unint64_t)v835;
  LODWORD(v835) = *v835;
  STACK[0xD868] = v837;
  LODWORD(v837) = *(_DWORD *)v837;
  STACK[0xD868] = (unint64_t)v839;
  LODWORD(v839) = *v839;
  STACK[0xD868] = (unint64_t)v841;
  LODWORD(v841) = *v841;
  STACK[0xD868] = (unint64_t)v843;
  LODWORD(v843) = *v843;
  STACK[0xD868] = v845;
  LODWORD(v845) = *(_DWORD *)v845;
  STACK[0xD868] = (unint64_t)v847;
  v848 = &v847[v846 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v847) = *v847;
  v849 = v795;
  STACK[0xD868] = (unint64_t)&v848[v849];
  v850 = LODWORD(STACK[0x6360]) ^ __ROR4__((_DWORD)v827, 24) ^ v829 ^ __ROR4__((_DWORD)v831, 8) ^ __ROR4__((_DWORD)v833, 16);
  v851 = LODWORD(STACK[0x6368]) ^ ((_DWORD)v817 << 8) ^ (v817 >> 24) ^ v820 ^ __ROR4__((_DWORD)v823, 8) ^ __ROR4__((_DWORD)v825, 16);
  v852 = LODWORD(STACK[0x63D0]) ^ __ROR4__((_DWORD)v835, 24) ^ v837 ^ __ROR4__((_DWORD)v839, 8) ^ __ROR4__((_DWORD)v841, 16);
  v853 = LODWORD(STACK[0x6358]) ^ __ROR4__((_DWORD)v843, 24) ^ v845 ^ __ROR4__((_DWORD)v847, 8) ^ __ROR4__(v848[v849], 16);
  v854 = &v848[HIBYTE(v851)];
  STACK[0xD868] = (unint64_t)v854;
  v855 = *v854;
  v856 = 4 * BYTE2(v850);
  v857 = &v848[(unint64_t)v856 / 4];
  v858 = 4 * BYTE1(v852);
  v859 = &v857[(unint64_t)v858 / 4 + v856 / 0xFFFFFFFFFFFFFFFCLL];
  v860 = 4 * v853;
  v861 = &v859[(unint64_t)v860 / 4 + v858 / 0xFFFFFFFFFFFFFFFCLL];
  v862 = 4 * HIBYTE(v850);
  v863 = &v861[(unint64_t)v862 / 4 + v860 / 0xFFFFFFFFFFFFFFFCLL];
  v864 = 4 * BYTE2(v852);
  v865 = &v863[(unint64_t)v864 / 4 + v862 / 0xFFFFFFFFFFFFFFFCLL];
  v866 = 4 * BYTE1(v853);
  v867 = &v865[(unint64_t)v866 / 4 + v864 / 0xFFFFFFFFFFFFFFFCLL];
  if ((v851 & 2) != 0)
    v868 = -2;
  else
    v868 = 2;
  STACK[0xD868] = (unint64_t)v857;
  v869 = *v857;
  STACK[0xD868] = (unint64_t)v859;
  v870 = *v859;
  STACK[0xD868] = (unint64_t)v861;
  v871 = *v861;
  STACK[0xD868] = (unint64_t)v863;
  v872 = *v863;
  STACK[0xD868] = (unint64_t)v865;
  v873 = *v865;
  STACK[0xD868] = (unint64_t)v867;
  v874 = &v867[v866 / 0xFFFFFFFFFFFFFFFCLL];
  v875 = *v867;
  v876 = (unint64_t)&v874[(v868 + v851) ^ 2];
  STACK[0xD868] = v876;
  v877 = *(_DWORD *)v876;
  v878 = &v874[HIBYTE(v852)];
  STACK[0xD868] = (unint64_t)v878;
  LODWORD(v876) = *v878;
  v879 = &v874[BYTE2(v853)];
  STACK[0xD868] = (unint64_t)v879;
  LODWORD(v876) = *v879 ^ __ROR4__(v876, 24);
  v880 = BYTE1(v851);
  v881 = (unint64_t)&v874[v880];
  v882 = 4 * v850;
  v883 = (_DWORD *)(v881 + v882 - v880 * 4);
  STACK[0xD868] = v881;
  LODWORD(v881) = v876 ^ __ROR4__(*(_DWORD *)v881, 8);
  STACK[0xD868] = (unint64_t)v883;
  v884 = &v883[v882 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v883) = *v883;
  v885 = &v884[HIBYTE(v853)];
  STACK[0xD868] = (unint64_t)v885;
  LODWORD(v881) = v881 ^ __ROR4__((_DWORD)v883, 16);
  v886 = *v885;
  v887 = &v884[BYTE2(v851)];
  STACK[0xD868] = (unint64_t)v887;
  v888 = *v887;
  v889 = &v884[BYTE1(v850)];
  STACK[0xD868] = (unint64_t)v889;
  v890 = *v889;
  v891 = v852;
  STACK[0xD868] = (unint64_t)&v884[v891];
  v892 = LODWORD(STACK[0x6150]) ^ __ROR4__(v872, 24) ^ v873 ^ __ROR4__(v875, 8) ^ __ROR4__(v877, 16);
  v893 = LODWORD(STACK[0x6350]) ^ __ROR4__(v855, 24) ^ v869 ^ __ROR4__(v870, 8) ^ __ROR4__(v871, 16);
  v894 = LODWORD(STACK[0x6348]) ^ __ROR4__(v886, 24) ^ v888 ^ __ROR4__(v890, 8) ^ __ROR4__(v884[v891], 16);
  v895 = &v884[HIBYTE(v893)];
  STACK[0xD868] = (unint64_t)v895;
  v896 = *v895;
  v897 = 4 * BYTE2(v892);
  STACK[0xD868] = (unint64_t)v884 + v897;
  v898 = __ROR4__(LODWORD(STACK[0x5E80]) ^ __ROR4__(v881, 7) ^ 0x714B4045, 25);
  LODWORD(v897) = *(_DWORD *)((char *)v884 + v897);
  v899 = &v884[((unsigned __int16)(v898 ^ 0x22B8) >> 8)];
  STACK[0xD868] = (unint64_t)v899;
  v900 = *v899;
  v901 = &v884[v894];
  v902 = (unint64_t)&v884[HIBYTE(v892)];
  v903 = (unint64_t)&v884[((v898 ^ 0xA5A022B8) >> 16)];
  v904 = &v884[BYTE1(v894)];
  v905 = &v884[v893];
  STACK[0xD868] = (unint64_t)v901;
  LODWORD(v901) = *v901;
  STACK[0xD868] = v902;
  LODWORD(v902) = *(_DWORD *)v902;
  STACK[0xD868] = v903;
  LODWORD(v903) = *(_DWORD *)v903;
  STACK[0xD868] = (unint64_t)v904;
  LODWORD(v904) = *v904;
  STACK[0xD868] = (unint64_t)v905;
  v906 = v884;
  LODWORD(v905) = *v905;
  v907 = (unint64_t)&v884[(v898 ^ 0xA5A022B8) >> 24];
  STACK[0xD868] = v907;
  LODWORD(v884) = *(_DWORD *)v907;
  v908 = &v906[BYTE2(v894)];
  STACK[0xD868] = (unint64_t)v908;
  LODWORD(v907) = *v908;
  v909 = 4 * BYTE1(v893);
  v910 = &v906[(unint64_t)v909 / 4];
  v911 = 4 * v892;
  v912 = &v910[(unint64_t)v911 / 4 + v909 / 0xFFFFFFFFFFFFFFFCLL];
  v913 = 4 * HIBYTE(v894);
  v914 = &v912[v911 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v913 / 4];
  v915 = BYTE2(v893);
  v916 = (unint64_t)&v914[v915 + v913 / 0xFFFFFFFFFFFFFFFCLL];
  v917 = 4 * BYTE1(v892);
  v918 = v916 - v915 * 4 + v917;
  v919 = 4 * (v898 ^ 0xB8u);
  v920 = (unsigned int *)(v918 + v919 - v917);
  v921 = LODWORD(STACK[0x6340]) ^ __ROR4__(v896, 24) ^ v897 ^ __ROR4__(v900, 8) ^ __ROR4__((_DWORD)v901, 16);
  STACK[0xD868] = (unint64_t)v910;
  LODWORD(v897) = *v910;
  STACK[0xD868] = (unint64_t)v912;
  v922 = *v912;
  STACK[0xD868] = (unint64_t)v914;
  LODWORD(v901) = *v914;
  STACK[0xD868] = v916;
  LODWORD(v916) = LODWORD(STACK[0x6328]) ^ __ROR4__((_DWORD)v901, 24) ^ *(_DWORD *)v916;
  STACK[0xD868] = v918;
  LODWORD(v916) = v916 ^ __ROR4__(*(_DWORD *)v918, 8);
  LODWORD(v918) = LODWORD(STACK[0x6330]) ^ __ROR4__((_DWORD)v884, 24) ^ v907 ^ __ROR4__(v897, 8) ^ __ROR4__(v922, 16);
  LODWORD(v897) = LODWORD(STACK[0x6338]) ^ __ROR4__(v902, 24) ^ v903 ^ __ROR4__((_DWORD)v904, 8) ^ __ROR4__((_DWORD)v905, 16);
  STACK[0xD868] = (unint64_t)v920;
  v923 = &v920[v919 / 0xFFFFFFFFFFFFFFFCLL];
  v924 = *v920;
  v925 = (unint64_t)&v923[HIBYTE(v921)];
  STACK[0xD868] = v925;
  LODWORD(v902) = *(_DWORD *)v925;
  v926 = &v923[BYTE2(v897)];
  STACK[0xD868] = (unint64_t)v926;
  LODWORD(v916) = v916 ^ HIWORD(v924);
  LODWORD(v925) = *v926;
  v927 = BYTE1(v918);
  v928 = (unint64_t)&v923[v927];
  v929 = 4 * v916;
  v930 = (_DWORD *)(v928 + v929 - v927 * 4);
  STACK[0xD868] = v928;
  LODWORD(v928) = *(_DWORD *)v928;
  STACK[0xD868] = (unint64_t)v930;
  v931 = &v930[v929 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v930) = *v930;
  v932 = (unint64_t)&v931[BYTE3(v897)];
  STACK[0xD868] = v932;
  LODWORD(v904) = *(_DWORD *)v932;
  v933 = &v931[BYTE2(v918)];
  STACK[0xD868] = (unint64_t)v933;
  v934 = v916 ^ (v924 << 16);
  LODWORD(v932) = *v933;
  v935 = &v931[BYTE1(v916)];
  STACK[0xD868] = (unint64_t)v935;
  LODWORD(v916) = *v935;
  v936 = &v931[v921];
  STACK[0xD868] = (unint64_t)v936;
  LODWORD(v935) = *v936;
  v937 = &v931[BYTE3(v918)];
  STACK[0xD868] = (unint64_t)v937;
  LODWORD(v936) = *v937;
  v938 = BYTE2(v934);
  v939 = (unint64_t)&v931[v938];
  v940 = 4 * BYTE1(v921);
  v941 = (_DWORD *)(v939 + v940 - v938 * 4);
  v942 = 4 * v897;
  v943 = &v941[(unint64_t)v942 / 4 + v940 / 0xFFFFFFFFFFFFFFFCLL];
  v944 = 4 * HIBYTE(v934);
  v945 = &v943[(unint64_t)v944 / 4 + v942 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD868] = v939;
  LODWORD(v939) = *(_DWORD *)v939;
  STACK[0xD868] = (unint64_t)v941;
  LODWORD(v941) = *v941;
  STACK[0xD868] = (unint64_t)v943;
  LODWORD(v943) = *v943;
  STACK[0xD868] = (unint64_t)v945;
  v946 = &v945[v944 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v945) = *v945;
  v947 = &v946[BYTE2(v921)];
  STACK[0xD868] = (unint64_t)v947;
  v948 = *v947;
  v949 = 4 * BYTE1(v897);
  STACK[0xD868] = (unint64_t)v946 + v949;
  LODWORD(v916) = LODWORD(STACK[0x6148]) ^ __ROR4__((_DWORD)v904, 24) ^ v932 ^ __ROR4__(v916, 8) ^ __ROR4__((_DWORD)v935, 16);
  LODWORD(v949) = *(_DWORD *)((char *)v946 + v949);
  v950 = 4 * v918;
  STACK[0xD868] = (unint64_t)v946 + v950;
  LODWORD(v928) = LODWORD(STACK[0x63A0]) ^ __ROR4__(v902, 24) ^ v925 ^ __ROR4__(v928, 8) ^ __ROR4__((_DWORD)v930, 16);
  LODWORD(v902) = LODWORD(STACK[0x6388]) ^ __ROR4__((_DWORD)v936, 24) ^ v939 ^ __ROR4__((_DWORD)v941, 8) ^ __ROR4__((_DWORD)v943, 16);
  LODWORD(v950) = LODWORD(STACK[0x6140]) ^ __ROR4__((_DWORD)v945, 24) ^ v948 ^ __ROR4__(v949, 8) ^ __ROR4__(*(_DWORD *)((char *)v946 + v950), 16);
  v951 = (unint64_t)&v946[BYTE3(v928)];
  STACK[0xD868] = v951;
  v952 = *(_DWORD *)v951;
  v953 = &v946[BYTE2(v916)];
  STACK[0xD868] = (unint64_t)v953;
  LODWORD(v951) = *v953;
  v954 = 4 * BYTE1(v902);
  v955 = &v946[(unint64_t)v954 / 4];
  v956 = 4 * v950;
  v957 = &v955[(unint64_t)v956 / 4 + v954 / 0xFFFFFFFFFFFFFFFCLL];
  v958 = 4 * BYTE3(v916);
  v959 = &v957[(unint64_t)v958 / 4 + v956 / 0xFFFFFFFFFFFFFFFCLL];
  v960 = BYTE2(v902);
  v961 = (unint64_t)&v959[v960 + v958 / 0xFFFFFFFFFFFFFFFCLL];
  v962 = 4 * BYTE1(v950);
  v963 = (_DWORD *)(v961 - v960 * 4 + v962);
  v964 = 4 * v928;
  v965 = &v963[(unint64_t)v964 / 4 + v962 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD868] = (unint64_t)v955;
  LODWORD(v955) = *v955;
  STACK[0xD868] = (unint64_t)v957;
  LODWORD(v957) = *v957;
  STACK[0xD868] = (unint64_t)v959;
  LODWORD(v959) = *v959;
  STACK[0xD868] = v961;
  LODWORD(v961) = *(_DWORD *)v961;
  STACK[0xD868] = (unint64_t)v963;
  LODWORD(v963) = *v963;
  STACK[0xD868] = (unint64_t)v965;
  v966 = &v965[v964 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v965) = *v965;
  v967 = &v966[BYTE3(v902)];
  STACK[0xD868] = (unint64_t)v967;
  LODWORD(v936) = *v967;
  v968 = 4 * BYTE2(v950);
  v969 = &v966[(unint64_t)v968 / 4];
  v970 = 4 * BYTE1(v928);
  v971 = &v969[(unint64_t)v970 / 4 + v968 / 0xFFFFFFFFFFFFFFFCLL];
  v972 = 4 * v916;
  v973 = &v971[v970 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v972 / 4];
  v974 = 4 * BYTE3(v950);
  v975 = &v973[(unint64_t)v974 / 4 + v972 / 0xFFFFFFFFFFFFFFFCLL];
  v976 = BYTE2(v928);
  v977 = (unint64_t)&v975[v974 / 0xFFFFFFFFFFFFFFFCLL + v976];
  v978 = 4 * BYTE1(v916);
  v979 = v977 + v978 - v976 * 4;
  v980 = LODWORD(STACK[0x6320]) ^ __ROR4__(v952, 24) ^ v951 ^ __ROR4__((_DWORD)v955, 8) ^ __ROR4__((_DWORD)v957, 16);
  LODWORD(v951) = LODWORD(STACK[0x6318]) ^ __ROR4__((_DWORD)v959, 24) ^ v961 ^ __ROR4__((_DWORD)v963, 8) ^ __ROR4__((_DWORD)v965, 16);
  v981 = 4 * v902;
  v982 = (_DWORD *)(v979 + v981 - v978);
  STACK[0xD868] = (unint64_t)v969;
  LODWORD(v902) = *v969;
  STACK[0xD868] = (unint64_t)v971;
  LODWORD(v957) = *v971;
  STACK[0xD868] = (unint64_t)v973;
  LODWORD(v959) = *v973;
  STACK[0xD868] = (unint64_t)v975;
  LODWORD(v961) = LODWORD(STACK[0x6138]) ^ HIBYTE(*v975) ^ (*v975 << 8);
  STACK[0xD868] = v977;
  LODWORD(v977) = v961 ^ *(_DWORD *)v977;
  STACK[0xD868] = v979;
  LODWORD(v977) = v977 ^ __ROR4__(*(_DWORD *)v979, 8);
  STACK[0xD868] = (unint64_t)v982;
  LODWORD(v977) = v977 ^ __ROR4__(*v982, 16);
  LODWORD(v979) = LODWORD(STACK[0x6310]) ^ __ROR4__((_DWORD)v936, 24) ^ v902 ^ __ROR4__((_DWORD)v957, 8) ^ __ROR4__((_DWORD)v959, 16);
  v983 = (char *)v982 - v981;
  v984 = (unint64_t)&v983[4 * HIBYTE(v980)];
  STACK[0xD868] = v984;
  LODWORD(v981) = *(_DWORD *)v984;
  v985 = &v983[4 * BYTE2(v951)];
  STACK[0xD868] = (unint64_t)v985;
  LODWORD(v984) = *(_DWORD *)v985;
  v986 = 4 * BYTE1(v979);
  v987 = &v983[v986];
  v988 = 4 * v977;
  v989 = (unint64_t)&v987[v988 - v986];
  v990 = 4 * BYTE3(v951);
  v991 = v989 + v990 - v988;
  v992 = 4 * BYTE2(v979);
  v993 = v991 - v990 + v992;
  v994 = 4 * BYTE1(v977);
  v995 = (_DWORD *)(v993 + v994 - v992);
  v996 = 4 * v980;
  v997 = &v995[(unint64_t)v996 / 4 + v994 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD868] = (unint64_t)v987;
  LODWORD(v987) = *(_DWORD *)v987;
  STACK[0xD868] = v989;
  LODWORD(v989) = *(_DWORD *)v989;
  STACK[0xD868] = v991;
  LODWORD(v991) = *(_DWORD *)v991;
  STACK[0xD868] = v993;
  LODWORD(v993) = *(_DWORD *)v993;
  STACK[0xD868] = (unint64_t)v995;
  LODWORD(v995) = *v995;
  STACK[0xD868] = (unint64_t)v997;
  v998 = &v997[v996 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v997) = *v997;
  v999 = &v998[BYTE3(v979)];
  STACK[0xD868] = (unint64_t)v999;
  LODWORD(v936) = *v999;
  v1000 = BYTE2(v977);
  v1001 = (unint64_t)&v998[v1000];
  v1002 = 4 * BYTE1(v980);
  v1003 = (_DWORD *)(v1001 + v1002 - v1000 * 4);
  LODWORD(v987) = LODWORD(STACK[0x6308]) ^ __ROR4__(v981, 24) ^ v984 ^ __ROR4__((_DWORD)v987, 8) ^ __ROR4__(v989, 16);
  v1004 = &v1003[v1002 / 0xFFFFFFFFFFFFFFFCLL + v951];
  v1005 = &v1003[v1002 / 0xFFFFFFFFFFFFFFFCLL + BYTE3(v977)];
  STACK[0xD868] = v1001;
  LODWORD(v989) = *(_DWORD *)v1001;
  STACK[0xD868] = (unint64_t)v1003;
  LODWORD(v1001) = *v1003;
  STACK[0xD868] = (unint64_t)v1004;
  LODWORD(v1004) = *v1004;
  STACK[0xD868] = (unint64_t)v1005;
  v1006 = &v1003[v1002 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1005) = *v1005;
  v1007 = &v1003[v1002 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v980)];
  STACK[0xD868] = (unint64_t)v1007;
  v1008 = BYTE1(v951);
  v1009 = (unint64_t)&v1006[v1008];
  v1010 = 4 * v979;
  v1011 = v1009 + v1010 - v1008 * 4;
  LODWORD(v991) = LODWORD(STACK[0x6300]) ^ __ROR4__(v991, 24) ^ v993 ^ __ROR4__((_DWORD)v995, 8) ^ __ROR4__((_DWORD)v997, 16);
  v1012 = LODWORD(STACK[0x62F8]) ^ __ROR4__((_DWORD)v1005, 24) ^ *v1007;
  STACK[0xD868] = v1009;
  LODWORD(v1009) = v1012 ^ __ROR4__(*(_DWORD *)v1009, 8);
  STACK[0xD868] = v1011;
  v1013 = (char *)(v1011 - v1010);
  LODWORD(v1009) = v1009 ^ __ROR4__(*(_DWORD *)v1011, 16);
  LODWORD(v1011) = LODWORD(STACK[0x6130]) ^ __ROR4__((_DWORD)v936, 24) ^ v989 ^ __ROR4__(v1001, 8) ^ __ROR4__((_DWORD)v1004, 16);
  v1014 = &v1013[4 * (v987 >> 24)];
  STACK[0xD868] = (unint64_t)v1014;
  LODWORD(v1010) = *(_DWORD *)v1014;
  v1015 = 4 * BYTE2(v991);
  v1016 = (unint64_t)&v1013[v1015];
  v1017 = 4 * BYTE1(v1011);
  v1018 = v1016 + v1017 - v1015;
  v1019 = 4 * v1009;
  v1020 = (_DWORD *)(v1018 - v1017 + v1019);
  v1021 = 4 * BYTE3(v991);
  v1022 = &v1020[(unint64_t)v1021 / 4 + v1019 / 0xFFFFFFFFFFFFFFFCLL];
  STACK[0xD868] = v1016;
  LODWORD(v1016) = *(_DWORD *)v1016;
  STACK[0xD868] = v1018;
  LODWORD(v1018) = *(_DWORD *)v1018;
  STACK[0xD868] = (unint64_t)v1020;
  HIDWORD(v1023) = *v1020;
  LODWORD(v1023) = *v1020;
  LODWORD(v1020) = (v1023 >> 16) - ((2 * (v1023 >> 16)) & 0x4C89E762);
  v1024 = BYTE2(v1011);
  v1025 = (unint64_t)&v1022[v1021 / 0xFFFFFFFFFFFFFFFCLL + v1024];
  v1026 = 4 * BYTE1(v1009);
  v1027 = (_DWORD *)(v1025 + v1026 - v1024 * 4);
  STACK[0xD868] = (unint64_t)v1022;
  LODWORD(v1022) = *v1022;
  STACK[0xD868] = v1025;
  LODWORD(v1025) = *(_DWORD *)v1025;
  STACK[0xD868] = (unint64_t)v1027;
  v1028 = &v1027[v1026 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1027) = *v1027;
  v1029 = &v1028[v987];
  STACK[0xD868] = (unint64_t)v1029;
  HIDWORD(v1023) = *v1029;
  LODWORD(v1023) = *v1029;
  LODWORD(v1001) = (v1023 >> 16) - ((2 * (v1023 >> 16)) & 0xAAA7B9F0);
  v1030 = &v1028[BYTE3(v1011)];
  STACK[0xD868] = (unint64_t)v1030;
  LODWORD(v1029) = *v1030;
  v1031 = BYTE2(v1009);
  v1032 = (unint64_t)&v1028[v1031];
  v1033 = 4 * BYTE1(v987);
  v1034 = (_DWORD *)(v1032 + v1033 - v1031 * 4);
  STACK[0xD868] = v1032;
  LODWORD(v1032) = *(_DWORD *)v1032;
  STACK[0xD868] = (unint64_t)v1034;
  v1035 = &v1034[v1033 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v1034) = *v1034;
  v1036 = &v1035[v991];
  STACK[0xD868] = (unint64_t)v1036;
  HIDWORD(v1023) = *v1036;
  LODWORD(v1023) = *v1036;
  LODWORD(v975) = (v1023 >> 16) - ((2 * (v1023 >> 16)) & 0x3B55E9F2);
  v1037 = 4 * BYTE3(v1009);
  v1038 = (_DWORD *)((char *)v1035 + v1037);
  v1039 = 4 * BYTE2(v987);
  v1040 = (_DWORD *)((char *)&v1038[(unint64_t)v1039 / 4] - v1037);
  LODWORD(v1037) = LODWORD(STACK[0x6128]) ^ __ROR4__((_DWORD)v1022, 24) ^ v1025 ^ __ROR4__((_DWORD)v1027, 8) ^ (v1001 - 715924232);
  v1041 = 4 * BYTE1(v991);
  v1042 = (_DWORD *)((char *)&v1040[v1039 / 0xFFFFFFFFFFFFFFFCLL] + v1041);
  v1043 = 4 * v1011;
  v1044 = (_DWORD *)((char *)v1042 + v1043 - v1041);
  LODWORD(v1041) = LODWORD(STACK[0x6108]) ^ LODWORD(STACK[0x63C8]) ^ v1016 ^ ((_DWORD)v1010 << 8) & 0xFDFFFF00 ^ __ROR4__(v1010, 24) & 0x20000FF ^ __ROR4__(v1018, 8) ^ ((_DWORD)v1020 - 1505430607);
  STACK[0xD868] = (unint64_t)v1038;
  LODWORD(v1010) = *v1038;
  STACK[0xD868] = (unint64_t)v1040;
  LODWORD(v1018) = *v1040;
  STACK[0xD868] = (unint64_t)v1042;
  LODWORD(v1020) = *v1042;
  STACK[0xD868] = (unint64_t)v1044;
  LODWORD(v1016) = *v1044;
  STACK[0xD868] = (unint64_t)v1044 - v1043;
  HIDWORD(v1023) = v1016;
  LODWORD(v1023) = v1016;
  LODWORD(v1016) = LODWORD(STACK[0x6398]) ^ __ROR4__((_DWORD)v1029, 24) ^ v1032 ^ __ROR4__((_DWORD)v1034, 8) ^ ((_DWORD)v975 - 1649740551);
  v1045 = STACK[0xD888] + 4 * (BYTE3(v1041) ^ 0x84);
  LODWORD(v1027) = LODWORD(STACK[0x6390]) ^ __ROR4__(v1010, 24) ^ v1018 ^ __ROR4__((_DWORD)v1020, 8) ^ ((v1023 >> 16) - ((2 * (v1023 >> 16)) & 0x66B79DBA) - 1285828899);
  LODWORD(v1043) = (-1824624155 - (BYTE2(v1037) ^ 0x89 | 0x933E71E5) + (BYTE2(v1037) ^ 0x89 | 0x6CC18E1A)) ^ 0x2078DA7C;
  LODWORD(v1043) = (LODWORD(STACK[0x25E0]) & (2 * v1043)) - v1043 - 1775591415;
  v1046 = v1045
        + 4 * (v1043 ^ 0xDA93F44A)
        + 4
        * (-2692354954
         - (((BYTE3(v1041) ^ 0x1E619C18B672B5FFLL) + 0x619E63E7E9F7590FLL) ^ ((BYTE3(v1041) ^ 0x32A4F88DE2F4D3BELL)
                                                                            - 0x72A4F88D428EC0B0) ^ ((BYTE3(v1041) ^ 0x2CC56495548666C5) + 0x133A9B6A0B038A35)));
  LODWORD(v1010) = (BYTE1(v1016) ^ LODWORD(STACK[0x25E4]) | 0xAFFF1F73)
                 - (BYTE1(v1016) ^ LODWORD(STACK[0x25E4]) | 0x5000E08C)
                 + 1342234764;
  v1047 = v1046
        + 4 * (v1010 ^ 0x9FEA5F73)
        + 4
        * (-184830002
         - (((v1043 ^ 0x2D9E03553B8559F9) - 0x6D9E0355EA12E581) ^ ((v1043 ^ 0x2AB492187012ED06)
                                                                                   + 0x154B6DE75E7AAE82) ^ ((v1043 ^ 0x72A914D910440B5) + 0x78D56EB2BF6C0333)));
  LODWORD(v1043) = (((2 * (v1027 ^ 0x8D)) & 0x166) - (v1027 ^ 0x8D) - 1641376692) ^ LODWORD(STACK[0x25E8]);
  LODWORD(v1043) = (v1043 | 0xE8BEBB0C) - (v1043 | 0x174144F3) + 390153459;
  v1048 = v1047
        + 4 * (v1043 ^ 0x67B61D48)
        + 4
        * (-2957429966
         - (((v1010 ^ 0x3C020F957E3792B6) + 0x43FDF06AAE64FEF5) ^ ((v1010 ^ 0x256AD486AA22B6CCLL)
                                                                                   + 0x1A952B797A71DA8FLL) ^ ((v1010 ^ 0x1968DB134BFF7B09) - 0x5968DB136453E8B4)));
  v1049 = v1048
        + 4 * (BYTE3(v1037) ^ 0x2A)
        + 4
        * (-3521778412
         - (((v1043 ^ 0x12F6E0E26FE03D7BLL) - 0x12F6E0E2D9BC32DFLL) ^ ((v1043 ^ 0x143599FF3F521E09)
                                                                                   + 0x2BCA660076F1EE53) ^ ((v1043 ^ 0x6C3791D37043E3ALL) + 0x393C86E27EA7CE62)));
  LOWORD(v1043) = ((2 * (BYTE2(v1016) ^ 0xF)) & 0x2A) - (BYTE2(v1016) ^ 0xF) + 19946;
  LODWORD(v1043) = (v1043 & 0x76D ^ 0x4B41920C) + (v1043 & 0x92 ^ 0x62883) - 1;
  v1050 = v1049
        + 4 * (v1043 ^ 0x4B47BF7B)
        + 4
        * (-3002427698
         - (((BYTE3(v1037) ^ 0x165B307319220C47) - 0x165B3073ABD7655FLL) ^ ((BYTE3(v1037) ^ 0xEEA4FCAB58A3012)
                                                                            - 0xEEA4FCA077F590ALL) ^ ((BYTE3(v1037) ^ 0x18B17FB9ACA83C7FLL) - 0x18B17FB91E5D5567)));
  LODWORD(v1010) = (BYTE1(v1027) ^ 0x4C00AFE | 0x51794FE9) - (BYTE1(v1027) ^ 0x4C00AFE | 0xAE86B016) - 1366904810;
  v1051 = v1050
        + 4 * (v1010 ^ 0x55B945E9)
        + 4
        * (-169836282
         - (((v1043 ^ 0x1BD7C4427AE18942) + 0x64283BBDC446B73DLL) ^ ((v1043 ^ 0x1E182927A4B85EDLL)
                                                                                   - 0x1E182923B13446CLL) ^ ((v1043 ^ 0x1A3646D04BEDB3D4) + 0x65C9B92FF54A8DABLL)));
  v1052 = ((v1010 ^ 0x24F71BCC24AB51FLL) + 0x7DB08E43250B3763) ^ ((v1010 ^ 0x1306FF60355B9B72)
                                                                                - 0x1306FF602DE5E6F0) ^ ((v1010 ^ 0x11498EDCA2A86B84) + 0x6EB6712345E9E9FALL);
  LODWORD(v1010) = ((2 * (v1041 ^ 0x9A8908)) | 0x35646714)
                 - (v1041 ^ 0x9A8908)
                 + 1699597430;
  v1053 = v1051 + 4 * (-1292318827 - v1052) + 4 * (v1010 ^ 0x9A28BA9E);
  v1054 = v1053
        + 4
        * (-1065284184
         - (((v1010 ^ LODWORD(STACK[0x25EC]) ^ 0x148CB335E0BD382ELL) + 0x6B734CCA1F42C7D2) ^ ((v1010 ^ LODWORD(STACK[0x25EC]) ^ 0x956F80A3761CF73) + 0x36A907F5C89E308DLL) ^ ((v1010 ^ LODWORD(STACK[0x25EC]) ^ 0x1DDA4B3FE8A20505) - 0x5DDA4B3FE8A20505)))
        + 4 * (BYTE3(v1016) ^ 0xA);
  LODWORD(v1010) = (((2 * (BYTE2(v1027) ^ 0x75)) | 0xF6D98B18) - (BYTE2(v1027) ^ 0x75) + 76757620) ^ LODWORD(STACK[0x25F0]);
  LODWORD(v1010) = v1010 - ((2 * v1010) & 0x5C3B9B4E) + 773705127;
  v1055 = v1054
        + 4
        * (-3733189442
         - (((BYTE3(v1016) ^ 0x3194139E1351B9E3) + 0x4E6BEC61322DB555) ^ ((BYTE3(v1016) ^ 0x111CBB111C9D0462)
                                                                            + 0x6EE344EE3DE108D6) ^ ((BYTE3(v1016) ^ 0x2088A88F0FCCBD8BLL) - 0x2088A88FD14F4EC3)))
        + 4 * (v1010 ^ 0xEBD0C99);
  LODWORD(v1044) = (BYTE1(v1041) ^ 0x58015316 | 0xC4C5D9FD) - (BYTE1(v1041) ^ 0x58015316 | 0x3B3A2602) + 993666562;
  v1056 = v1055
        + 4 * (v1044 ^ 0x9CC48ABD)
        + 4
        * (-2227997349
         - (((v1010 ^ LODWORD(STACK[0x25F4]) ^ 0x179C4B5B14097078) - 0x579C4B5B14097078) ^ ((v1010 ^ LODWORD(STACK[0x25F4]) ^ 0x26911F522684E124) + 0x196EE0ADD97B1EDCLL) ^ ((v1010 ^ LODWORD(STACK[0x25F4]) ^ 0x310D5409B6411BF9) + 0x4EF2ABF649BEE407)));
  LODWORD(v1001) = (236795944
                  - (v1037 ^ 0x88EEEEE3 | 0xE1D3828)
                  + (v1037 ^ 0x88EEEEE3 | 0xF1E2C7D7)) ^ 0xAB8C2890;
  LODWORD(v1001) = (v1001 | 0xA86378E1) - (v1001 | 0x579C871E) + 1469875998;
  v1057 = v1056
        + 4
        * (-3688994
         - (((v1044 ^ 0x317C58CCB5EDB775) - 0x717C58CC291177EALL) ^ ((v1044 ^ 0x34D0C57701AA6BD8)
                                                                                   - 0x34D0C5779D56AB47) ^ ((v1044 ^ 0x5AC9DBB28835610) - 0x45AC9DBBB47F968FLL)))
        + 4 * (v1001 ^ 0x7AE3792F);
  LODWORD(v1027) = v1027 >> 24;
  v1058 = v1057
        + 4 * (v1027 ^ 6)
        + 4
        * (-3540982172
         - (((v1001 ^ 0x1248D3443B57B854) + 0x6DB72CBB6D442719) ^ ((v1001 ^ 0xD4599A07141394FLL)
                                                                                   + 0x32BA665F2752A604) ^ ((v1001 ^ 0x1F0D4AE430F5F834) - 0x5F0D4AE499199887)));
  LODWORD(v1041) = (((2 * (BYTE2(v1041) ^ 0xFA)) & 0x56) - (BYTE2(v1041) ^ 0xFA) + 412045524) ^ 0x808C73FC;
  LODWORD(v1041) = v1041 - ((2 * v1041) & 0x300205B2) + 2068677337;
  v1059 = v1058
        + 4
        * (-678064548
         - (((v1027 ^ 0xDA711AE7F71007DLL) - 0xDA711AE571B71DFLL) ^ ((v1027 ^ 0xD7874F603FD8D4ALL)
                                                                                 + 0x32878B09D4680318) ^ ((v1027 ^ 0xDF65587C8C8D31) + 0x3F209AA7AB19036DLL)))
        + 4 * (v1041 ^ 0xE34EA1CE);
  LODWORD(v1029) = (BYTE1(v1037) ^ 0x4F | 0xCC02F5B8) - (BYTE1(v1037) ^ 0x4F | 0x33FD0A47) + 872221255;
  v1060 = v1059
        + 4
        * (-866558281
         - (((v1041 ^ LODWORD(STACK[0x25F8]) ^ 0x1C5357F554C29625) - 0x5C5357F554C29625) ^ ((v1041 ^ LODWORD(STACK[0x25F8]) ^ 0x2291091E173B0E36) + 0x1D6EF6E1E8C4F1CALL) ^ ((v1041 ^ LODWORD(STACK[0x25F8]) ^ 0x3EC25EEB705F0341) + 0x413DA1148FA0FCBFLL)))
        + 4 * (v1029 ^ 0xCC02F5FD);
  STACK[0xD888] = v1051;
  LODWORD(v1051) = *(_DWORD *)(v1051 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1053;
  LODWORD(v1053) = *(_DWORD *)(v1053 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1054;
  LODWORD(v1054) = *(_DWORD *)(v1054 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1055;
  LODWORD(v1055) = *(_DWORD *)(v1055 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1056;
  LODWORD(v1056) = *(_DWORD *)(v1056 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1057;
  LODWORD(v1057) = *(_DWORD *)(v1057 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1058;
  LODWORD(v1058) = *(_DWORD *)(v1058 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1059;
  LODWORD(v1059) = *(_DWORD *)(v1059 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1060 + 6108;
  LODWORD(v1037) = v1016;
  v1061 = v1060
        + 6108
        + 4 * (v1016 ^ 0xFAu)
        + 4
        * (-1492800885
         - (((v1029 ^ 0x12FDB90CBF999660) - 0x12FDB90C2B6136E8) ^ ((v1029 ^ 0x1DFBEAE73D7B3DCALL)
                                                                                   + 0x62041518567C62BELL) ^ ((v1029 ^ 0xF0653EB4EE05E57) + 0x70F9AC1425E70121)));
  LODWORD(v1049) = LODWORD(STACK[0x63A8]) ^ __ROR4__(*(_DWORD *)(v1049 - 0x7520ADBE5B486666), 16) ^ __ROR4__(*(_DWORD *)(v1050 - 0x7520ADBE5B486666), 24) ^ v1051 ^ __ROR4__(v1053, 8);
  LODWORD(v1045) = *(_DWORD *)(v1045 - 0x7520ADBE5B486666);
  LODWORD(v1060) = LODWORD(STACK[0x63A8]) ^ __ROR4__(v1058, 16) ^ __ROR4__(v1059, 24) ^ *(_DWORD *)(v1060
                                                                                                  - 0x7520ADBE5B484E8ALL);
  LODWORD(v1046) = *(_DWORD *)(v1046 - 0x7520ADBE5B486666);
  STACK[0xD888] = v1061;
  v1062 = STACK[0x63B0];
  LODWORD(v1046) = LODWORD(STACK[0x63B0]) ^ __ROR4__(v1045, 16) ^ __ROR4__(v1046, 24) ^ *(_DWORD *)(v1047
                                                                                                  - 0x7520ADBE5B486666) ^ __ROR4__(*(_DWORD *)(v1048 - 0x7520ADBE5B486666), 8);
  LODWORD(v1047) = v1046 ^ 0x11E5E23E ^ v1049;
  LODWORD(v1060) = v1060 ^ __ROR4__(*(_DWORD *)(v1061 - 0x7520ADBE5B486666), 8) ^ 0x65B29376;
  LODWORD(v1045) = v1060 ^ (v1047 - 1162964617 - ((2 * v1047) & 0x755D22EE));
  v1063 = STACK[0x6690];
  v1064 = STACK[0x65D0];
  *(_BYTE *)(v1064 + STACK[0x6598]) = *((_BYTE *)*(&off_1015B46D0 + (int)(STACK[0x6690] ^ 0x435A))
                                      + (BYTE2(v1045) ^ 8)
                                      - 8) ^ ((BYTE2(v1045) ^ 0x4F) + (BYTE2(v1045) ^ 0x24)) ^ 0xED;
  LODWORD(v1055) = v1062 ^ __ROR4__(v1054, 16) ^ __ROR4__(v1055, 24) ^ v1056 ^ __ROR4__(v1057, 8) ^ 0x3EE5B6D4;
  LODWORD(v1060) = v1060 ^ ((v1049 ^ 0x775F428F ^ v1055) - 1162964617 - ((2 * (v1049 ^ 0x775F428F ^ v1055)) & 0x755D22EE));
  LODWORD(v1050) = STACK[0x65F8];
  LODWORD(v1056) = (((2 * (v1050 & 0xFFFFFFF3 ^ 0x9933A0B1)) & 0x9C02DBC6)
                  - (v1050 & 0xFFFFFFF3 ^ 0x9933A0B1)
                  - 1308716516) ^ 0x75FEA20C;
  *(_BYTE *)(v1064 + ((((2 * (_DWORD)v1056) | 0x55C453B4) - v1056 - 719464922) ^ 0xF42DDE05)) = BYTE2(v1060) ^ 0x84 ^ *((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 16450) + (BYTE2(v1060) ^ 0xB2));
  *(_BYTE *)(v1064 + STACK[0x65C0]) = *((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 16216) + (BYTE1(v1046) ^ 0xE9) - 12) ^ (*((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 16216) + (BYTE1(v1046) ^ 0xE9) - 12) >> 2) & 0x24 ^ 0xFB;
  LODWORD(v1056) = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1063 ^ 0x40B2))
                   + (((((WORD1(v1046) & 0x60) + (BYTE2(v1046) ^ 0x76)) | 0x1000) - ((BYTE2(v1046) ^ 0x76) & 0x60)) ^ 0x103BLL)
                   - 8);
  *(_BYTE *)(v1064 + STACK[0x65A0]) = ((v1056 >> 6) | (4 * v1056)) ^ (*((_BYTE *)*(&off_1015B46D0
                                                                                               + (int)(v1063 ^ 0x40B2))
                                                                                    + (((((WORD1(v1046) & 0x60)
                                                                                        + (BYTE2(v1046) ^ 0x76)) | 0x1000)
                                                                                      - ((BYTE2(v1046) ^ 0x76) & 0x60)) ^ 0x103BLL)
                                                                                    - 8) >> 2) & 0xF ^ 0xD3;
  *(_BYTE *)(v1064 + STACK[0x65B0]) = ((v1060 ^ 0xB5) + (v1060 ^ 0xBB) + 1) ^ 0x42 ^ *((_BYTE *)*(&off_1015B46D0
                                                                                                + (int)(v1063 ^ 0x4FFF))
                                                                                     + (v1060 ^ 0xELL)
                                                                                     - 12);
  *(_BYTE *)(v1064 + STACK[0x6608]) = BYTE1(v1060) ^ 0x26 ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v1063 ^ 0x481F))
                                                            + (BYTE1(v1060) ^ 0xF2));
  LODWORD(v1047) = v1055 ^ (v1047 - ((2 * v1047) & 0xE0F58318) + 1887093132);
  *(_BYTE *)(v1064 + STACK[0x65C8]) = *((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 17457) + (BYTE3(v1047) ^ 0x21) - 4) ^ 0xDA;
  LODWORD(v1055) = (((2 * (LODWORD(STACK[0x65B8]) ^ 0x181013E0)) & 0x59A04230)
                  - (LODWORD(STACK[0x65B8]) ^ 0x181013E0)
                  - 751837466) ^ 0x972FD48F;
  *(_BYTE *)(v1064 + ((v1055 - ((2 * (_DWORD)v1055) & 0x886C4EA0) + 1144399696) ^ 0x9BDA59AELL)) = *((_BYTE *)*(&off_1015B46D0 + (int)(v1063 ^ 0x4C16)) + (BYTE2(v1047) ^ 0xC8)) ^ 0xEA ^ (*((_BYTE *)*(&off_1015B46D0 + (int)(v1063 ^ 0x4C16)) + (BYTE2(v1047) ^ 0xC8)) >> 1) & 0x1D;
  LODWORD(v1055) = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1063 ^ 0x4386)) + (BYTE1(v1047) ^ 0x5DLL));
  v1065 = STACK[0xD870];
  *(_BYTE *)(v1065
           + (((LODWORD(STACK[0x65A8]) ^ LODWORD(STACK[0x2604]))
             - (STACK[0x25FC] & (2 * (LODWORD(STACK[0x65A8]) ^ LODWORD(STACK[0x2604]))))
             - 150304918) ^ 0x1EBC8790)) = ((v1055 >> 5) | (8 * v1055)) ^ 0x75;
  *(_BYTE *)(v1065 + STACK[0x6610]) = *((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 18274) + (BYTE3(v1060) ^ 0x8ELL) - 12) ^ 0xE2 ^ (*((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 18274) + (BYTE3(v1060) ^ 0x8ELL) - 12) >> 2) & 0x26;
  *(_BYTE *)(v1065 + STACK[0x6618]) = *((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 17120) + (BYTE3(v1046) ^ 0x8DLL) - 4) ^ 8;
  LODWORD(v1055) = (((2 * (v1046 ^ 0x2B)) & 0x1D4) - (v1046 ^ 0x2B) - 1031009771) ^ 0xC22E0B0D;
  *(_BYTE *)(v1065 + STACK[0x65E0]) = *((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 17163)
                                      + ((v1055 - ((2 * (_DWORD)v1055) & 0x1000326) - 1413110381) ^ LODWORD(STACK[0x2600]))
                                      - 12) ^ 0xE9;
  *(_BYTE *)(v1065
           + ((((2 * (LODWORD(STACK[0x65D8]) ^ 0xF14A1498)) | 0xD0D224C)
             - (LODWORD(STACK[0x65D8]) ^ 0xF14A1498)
             - 109482278) ^ 0x7430E2C8)) = *((_BYTE *)*(&off_1015B46D0 + (int)(v1063 ^ 0x401B))
                                             + (v1045 ^ 0xA9)) ^ 0xA3;
  *(_BYTE *)(v1065
           + (((LODWORD(STACK[0x65F0]) ^ 0x8EBDCCB0)
             + (v1050 & 0x850A6855 ^ 0x102204F)
             - ((LODWORD(STACK[0x65F0]) ^ 0x8EBDCCB0) & 0x850A6855)) ^ 0x884BC395)) = *((_BYTE *)*(&off_1015B46D0 + (int)(v1063 ^ 0x4F8A))
                                                                                        + (BYTE1(v1045) ^ 0x87)
                                                                                        - 12) ^ 0xB8;
  LODWORD(v1055) = ((v1050 & 0xCBF0A318 ^ 0xC2208217) + (v1050 & 0x340F5CE1) - 1) ^ 0x85800;
  *(_BYTE *)(v1065 + (((v1055 & 0xF2B444FE ^ 0x10840461) + (v1055 & 0xD4BBB01) - 1) ^ 0x5150B900)) = v1047 ^ 0xC ^ ((v1047 ^ 0xC) + 35) ^ *((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 15963) + (v1047 ^ 0x53) - 12) ^ 0xCC;
  *(_BYTE *)(STACK[0xD870] + STACK[0x65E8]) = *((_BYTE *)*(&off_1015B46D0 + (int)v1063 - 17932)
                                              + (BYTE3(v1045) ^ 0xB1)
                                              - 8) ^ 0xE9;
  STACK[0xD888] = v1061
                + 4
                * (-465657934
                 - (((v1037 ^ 0x139B5B52065DA104) + 0x6C64A4ADE2633E50) ^ ((v1037 ^ 0x3F4365B9A48BB03ALL)
                                                                                           + 0xBC9A4640B52F72) ^ ((v1037 ^ 0x2CD83EEBA2D611C4) - 0x6CD83EEBB9177170)));
  LODWORD(v1037) = (((v1050 ^ 0x61D71EF2) - 1641488114) ^ ((v1050 ^ 0x9C62D2D3) + 1671245101) ^ ((v1050 ^ 0x7E49AB53)
                                                                                               - 2118757203))
                 - 804650115;
  LODWORD(v1055) = ((2 * (v1037 ^ 0x4B9D1BC1)) ^ 0xF0DEFF88) & (v1037 ^ 0x4B9D1BC1) ^ (2 * (v1037 ^ 0x4B9D1BC1)) & 0xF86F7FC4;
  LODWORD(v1061) = (v1055 ^ 0xD06A3040) & (4
                                         * ((v1037 ^ 0x2BF953C1) & (2 * (v1037 & LODWORD(STACK[0x2608]))) ^ v1037 & LODWORD(STACK[0x2608]))) ^ (v1037 ^ 0x2BF953C1) & (2 * (v1037 & LODWORD(STACK[0x2608]))) ^ v1037 & LODWORD(STACK[0x2608]);
  LODWORD(v1055) = ((4 * (v1055 ^ 0x8210044)) ^ 0xE1BDFF10) & (v1055 ^ 0x8210044) ^ (4 * (v1055 ^ 0x8210044)) & 0xF86F7FC4;
  LODWORD(v1061) = (v1055 ^ 0xE02D7F00) & (16 * v1061) ^ v1061;
  LODWORD(v1055) = ((16 * (v1055 ^ 0x184200C4)) ^ 0x86F7FC40) & (v1055 ^ 0x184200C4) ^ (16 * (v1055 ^ 0x184200C4)) & 0xF86F7FC0;
  LODWORD(v1061) = v1061 ^ 0xF86F7FC4 ^ (v1055 ^ LODWORD(STACK[0x260C])) & ((_DWORD)v1061 << 8);
  LODWORD(v1037) = v1037 ^ (2
                          * (((_DWORD)v1061 << 16) & 0x786F0000 ^ v1061 ^ (((_DWORD)v1061 << 16) ^ 0x7FC40000) & (((v1055 ^ 0x78080384) << 8) & 0x786F0000 ^ (((v1055 ^ 0x78080384) << 8) ^ 0x6F7F0000) & (v1055 ^ 0x78080384) ^ 0x10000000)));
  LODWORD(v1061) = (((v1037 ^ 0x57C266C7) - 1738185272) ^ ((v1037 ^ 0x717211F3) - 1093332236) ^ ((v1037 ^ 0x9514ECB9)
                                                                                               + 1521741754))
                 - 2038763761;
  v1066 = v1061 >= LODWORD(STACK[0x6668]);
  v1067 = LODWORD(STACK[0x6600]) ^ (v1061 < 0x27E879D);
  v1068 = !v1066;
  if (v1067)
    v1069 = STACK[0x6600];
  else
    v1069 = v1068;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((114 * (v1069 ^ 1)) ^ v1063)) - 4))();
}

uint64_t sub_100CDA1E8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t (*v10)(void);

  v0 = STACK[0x6650];
  v1 = STACK[0x239C];
  v2 = STACK[0x6490];
  if (LODWORD(STACK[0x6450]) == LODWORD(STACK[0x239C]))
    v3 = STACK[0x6490];
  else
    v3 = STACK[0x6458];
  v4 = STACK[0x6488];
  if (LODWORD(STACK[0x6450]) == v1)
    v5 = STACK[0x6488];
  else
    v5 = STACK[0x6460];
  if (LODWORD(STACK[0x6450]) == v1)
  {
    v4 = STACK[0x6458];
    v2 = STACK[0x6460];
  }
  v6 = STACK[0x6448];
  if (LODWORD(STACK[0x6448]) == 1729877018)
    v7 = v3;
  else
    v7 = v5;
  LODWORD(STACK[0x6490]) = v7;
  if (v6 == 1729877018)
    v8 = v4;
  else
    v8 = v2;
  LODWORD(STACK[0x6628]) = v8;
  if (v6 == 1729877018)
    v3 = v5;
  LODWORD(STACK[0x6488]) = v3;
  if (v6 == 1729877018)
    v9 = v2;
  else
    v9 = v4;
  LODWORD(STACK[0x6630]) = v9;
  v10 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 + 1417) + 18718);
  LODWORD(STACK[0x6620]) = STACK[0x6480];
  LODWORD(STACK[0x6640]) = STACK[0x6468];
  LODWORD(STACK[0x6648]) = STACK[0x6478];
  LODWORD(STACK[0x6638]) = STACK[0x6470];
  return v10();
}

uint64_t sub_100CDA3A8()
{
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x6650]) - 12431))
                                                   - ((3 * ((LODWORD(STACK[0x6650]) - 12431) ^ 0x1C27u)) ^ 0x2D77)))(STACK[0xD878]);
}

uint64_t sub_100CDA408()
{
  int v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = (void (*)(uint64_t))STACK[0x5A40];
  ((void (*)(void))STACK[0x5A40])();
  v2(v1 - 0x7520ADBE5B486666);
  v2(STACK[0xD868]);
  v3 = ((uint64_t (*)(unint64_t))v2)(STACK[0xD898]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 + 4184) + 15815))(v3);
}

uint64_t sub_100CDA488()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  STACK[0xD1A8] = v0 - 16;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((((v1 ^ 0x78) + 64) ^ ((v3 ^ 0x7CBFB3FF) + ((2 * v3) & 0xF97F67FE) == 2092938239)) & 1)
                                * v2) ^ v1)))();
}

uint64_t sub_100CDA4F0()
{
  int v0;
  unint64_t v1;
  char *v2;

  v2 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] += 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v1 > (unint64_t)v2) * (((v0 + 1952954644) & 0x8B987BFF) - 25124)) ^ v0))
                            - ((v0 + 5384) ^ 0x43F7)))();
}

uint64_t sub_100CDA5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  char v15;

  v8 = a1 + a3;
  v9 = v8 - v5;
  v12 = (unint64_t)(v8 - v7) >= 0x10;
  v10 = v8 - v4 - 5;
  v11 = v8 - v3 - 3;
  v12 = v12 && v9 >= 0x10;
  v15 = !v12 || v10 < 0x10 || v11 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((1528 * ((v15 ^ ((v6 ^ 0x5F) + 1)) & 1)) ^ v6))
                            - 12))();
}

uint64_t sub_100CDA618@<X0>(int8x16_t *a1@<X8>)
{
  int v1;
  int8x16_t *v2;

  *a1 = veorq_s8(*v2, (int8x16_t)xmmword_1015072A0);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 - 1936540065) & 0x736D4F2F ^ 0x432BLL)))();
}

uint64_t sub_100CDA660@<X0>(int a1@<W5>, char a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(a3 + v7) = *(_BYTE *)(v5 + v7) ^ *(_BYTE *)(v8 + v7) ^ ((v6 + a2) * v7) ^ *(_BYTE *)(v7 + v4 + 5) ^ *(_BYTE *)(v7 + v3 + 3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v7 == 15) * a1) ^ v6)) - 12))();
}

uint64_t sub_100CDA6BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;
  unint64_t v13;
  int v15;

  v6 = a1 + STACK[0x2290];
  v7 = v5 - v6 + 15;
  v8 = v3 - v6 + 15;
  v9 = v2 - v6;
  v10 = v1 - v6;
  v12 = v8 > 0xF
     && v7 >= ((((v4 - 1622592577) ^ 0x9F494212) + 16) ^ (unint64_t)((v4 - 1622592577) & 0x60B6BDED))
     && (unint64_t)(v9 + 20) > 0xF;
  v13 = v10 + 18;
  v15 = v12 && v13 > 0xF;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v4 | (4 * v15))))(16);
}

uint64_t sub_100CDA740@<X0>(int8x16_t *a1@<X8>)
{
  unsigned int v1;
  int8x16_t *v2;

  *a1 = veorq_s8(*v2, (int8x16_t)xmmword_1015072A0);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - (v1 + 3471) + 17195))();
}

uint64_t sub_100CDA770@<X0>(uint64_t a1@<X0>, int a2@<W5>, char a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = a1 + v5;
  v10 = a1 + v4;
  v11 = a1 - 1;
  *(_BYTE *)(a4 + v11) = *(_BYTE *)(v6 + v11) ^ *(_BYTE *)(v8 + v11) ^ (-53 * v11) ^ *(_BYTE *)(v9 + 4) ^ *(_BYTE *)(v10 + 2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((v11 == 0) ^ (3 * (v7 ^ a3))) & 1) * a2) ^ v7))
                            - 4))();
}

uint64_t sub_100CDA7D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  STACK[0xD1A8] = v1 + 16;
  LODWORD(STACK[0xD8DC]) = 0;
  STACK[0xD8D0] = v5;
  STACK[0xD8E0] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ ((a1 == v6) * v4)))
                            - ((509 * (v2 ^ 0x4324) - 5449) | v3)
                            + 5595))();
}

uint64_t sub_100CDA884()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE *v3;
  char *v4;

  v4 = (char *)&STACK[0x1D0C0] + v1;
  *((_BYTE *)&STACK[0x1D0C0] + v0) = *v3;
  v4[17] = v3[1];
  v4[18] = v3[2];
  v4[19] = v3[3];
  v4[20] = v3[4];
  v4[21] = v3[5];
  v4[22] = v3[6];
  v4[23] = v3[7];
  v4[24] = v3[8];
  v4[25] = v3[9];
  v4[26] = v3[10];
  v4[27] = v3[11];
  v4[28] = v3[12];
  v4[29] = v3[13];
  v4[30] = v3[14];
  v4[31] = v3[15];
  *(_QWORD *)v4 = *(_QWORD *)v3;
  *((_QWORD *)v4 + 1) = *((_QWORD *)v3 + 1);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v2))();
}

uint64_t sub_100CDA940()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((v0 ^ 0x2BFF) - 1132) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_100CDA980()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((v0 - 187688146) & 0xB2FB7B4 ^ 0xFFFFF64A) + ((v0 - 24225) | 0x3800))
                                               * (v1 != 0)) ^ v0))
                            - 12))();
}

uint64_t sub_100CDA9D8()
{
  unsigned int v0;
  int v1;
  unsigned int v2;
  _BOOL4 v4;

  v2 = (((3 * (v0 ^ 0x3B97)) ^ 0x7F46A295)
      + (v1 & 0xF ^ 0xA)
      - (((v0 + 551962441) & 0xDF19BF32 ^ 0x18) & (2 * (v1 & 0xF ^ 0xA)))) ^ 0xFF16A60E;
  v4 = (v2 | 0x7D5564BD) - (v2 | 0x82AA9B42) == 2052761971 && v1 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((22 * v4) ^ v0)) - 8))();
}

uint64_t sub_100CDAA8C@<X0>(unsigned __int8 *a1@<X8>)
{
  unsigned int v1;
  int v2;
  char v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  unsigned int v22;

  v2 = a1[15];
  v3 = v2 ^ 0xC;
  v4 = a1[8];
  v5 = 117 * *((_BYTE *)*(&off_1015B46D0 + (int)(v1 - 6727)) + (a1[13] ^ 0x65) - 8);
  STACK[0xD8F0] = 0;
  LOBYTE(v2) = *((_BYTE *)*(&off_1015B46D0 + (int)(v1 - 7686)) + (v2 ^ 0xC ^ -(v2 ^ 0xC) ^ (33 - (v2 ^ 0x2Du))) + 33);
  STACK[0xD8C8] = 0;
  v6 = (uint64_t)*(&off_1015B46D0 + (v1 ^ 0x2C77));
  STACK[0xD8B0] = 0;
  LOBYTE(v2) = v2 ^ v3;
  v7 = *a1;
  v8 = v2 | ((v5 ^ 0xA8) << 16);
  v9 = a1[14];
  LODWORD(STACK[0x6A90]) = (v4 ^ ((v4 ^ 0x4B) + 106) ^ *(_BYTE *)(v6 + (v4 ^ 0x8B) - 12)) ^ 0x80;
  v10 = *((unsigned __int8 *)*(&off_1015B46D0 + (v1 ^ 0x21F5)) + (v7 ^ 0x3A));
  LOBYTE(v4) = *((_BYTE *)*(&off_1015B46D0 + (int)(v1 - 7215)) + (a1[2] ^ 0x78));
  LODWORD(v9) = (*((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1 - 7059)) + (v9 ^ 0xFB) - 12) ^ 0x58) << 8;
  STACK[0xD8C0] = 0;
  v11 = v10 ^ v7;
  v12 = a1[1];
  LODWORD(STACK[0x6930]) = v11;
  STACK[0xD8B8] = 0;
  v13 = (char *)*(&off_1015B46D0 + (int)(v1 - 7359)) + (v12 ^ 0x93);
  STACK[0xD8A0] = 0x21E4892F3905EF28;
  v14 = a1[10];
  v15 = (char *)*(&off_1015B46D0 + (int)(v1 - 8628)) + (v14 ^ 0x42);
  LODWORD(v13) = *(v13 - 12) ^ 6;
  STACK[0xD8E8] = 0;
  LODWORD(STACK[0xD8DC]) = 1774587293;
  LODWORD(v13) = (((v4 + 98) ^ 0x88) << 8) | ((_DWORD)v13 << 16) | ((v11 ^ 0xC) << 24);
  LOBYTE(v4) = (v14 ^ 0x98) + *(v15 - 4);
  v16 = a1[5];
  v17 = a1[7];
  LODWORD(v14) = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1 - 7023)) + (v16 ^ 0x39));
  LODWORD(STACK[0x6A60]) = (v4 + 1) ^ 0xAA;
  LODWORD(v16) = v16 ^ 0xE5 ^ v14;
  v18 = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1 - 7219)) + (a1[4] ^ 0x5FLL));
  LODWORD(v14) = v17 ^ 0x7B ^ *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1 - 8520)) + (v17 ^ 0x8A) - 4);
  LODWORD(v17) = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1 - 8287)) + (a1[6] ^ 0x45) - 12);
  v19 = a1[11];
  LODWORD(v16) = v14 | ((_DWORD)v16 << 16) | ((v18 ^ ((v18 ^ 0xF4) >> 7) ^ ((v18 ^ 0xF4) >> 3) ^ 0xA8) << 24);
  LOBYTE(v14) = *((_BYTE *)*(&off_1015B46D0 + (v1 ^ 0x2D26)) + (a1[9] ^ 0xB2) - 8);
  v20 = v16 | (((v17 ^ 0x4E) & 0x7F ^ (((v17 ^ 0x4E) >> 1) & 0xB | v17 & 0x80) ^ 0x1E) << 8);
  LODWORD(v16) = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1 - 8649)) + (a1[12] ^ 0xC3) - 8);
  LODWORD(v17) = a1[3];
  LODWORD(STACK[0x6A50]) = (v14 - 13) ^ 0xD4 ^ ((16 * v14 + 48) * (v14 - 13));
  LODWORD(v9) = v9 | ((v16 ^ 0xD0) << 24) | v8;
  LODWORD(STACK[0x6A80]) = v9 & 0x1D3D691E ^ v2 & 2;
  LODWORD(STACK[0x6A70]) = v9 - 1656919780;
  LODWORD(v16) = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1 - 9242))
                 + (v17 ^ 0xAA)
                 - 2 * ((v17 ^ 0xAA) & 0xAC)
                 + 168);
  LODWORD(STACK[0x6A40]) = (*((_BYTE *)*(&off_1015B46D0 + (v1 ^ 0x2437)) + (v19 ^ 0x41) - 8) - 95) ^ 0xA1;
  LODWORD(STACK[0x68F0]) = v20;
  LODWORD(STACK[0x6970]) = v20 ^ 0x4B822F0B;
  v21 = (v17 ^ 0xB ^ v16) - ((2 * (v17 ^ 0xB ^ v16)) & 0x142) - 547985503;
  LODWORD(STACK[0x6A30]) = v21;
  v22 = v13 & 0xBF838400 ^ 0x2B800484 ^ (v21 ^ 0x9F2A1CD3) & (v13 ^ 0x6BFC7FFF);
  LODWORD(STACK[0x6AA0]) = ((v22 | 0x578F5607) - (v22 | 0xA870A9F8) - 1469011464) ^ 0x3C7329F1;
  STACK[0x6AC0] = STACK[0xD8D0];
  STACK[0x6AB0] = STACK[0xD8E0];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v1))();
}

uint64_t sub_100CDB000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  _BOOL4 v16;

  v12 = v8 ^ 0x1B ^ (v9 + 23) ^ 0x44;
  v13 = ((2 * ((v9 + 23) & 0xE9)) & 2 | (v9 + 23) & 0xE9) ^ (2 * ((v9 + 23) & 0xE9)) & v12;
  v14 = ((2 * v12) ^ 0x5E) & v12 ^ (2 * v12) & (a6 + 2);
  v15 = ((4 * (v14 ^ v11)) & a6 ^ ((4 * (v14 ^ v11)) ^ 0xBC) & (v14 ^ v11) ^ 0x20) & (16
                                                                                    * ((v14 ^ 0xD) & (4 * v13) ^ v13)) ^ (v14 ^ 0xD) & (4 * v13) ^ v13;
  if (v10 > 0xB59CBDFA != v9 + 1248018950 < 0x4A634205)
    v16 = v10 > 0xB59CBDFA;
  else
    v16 = v9 + 1248018950 < a8;
  *(_BYTE *)(STACK[0x6AB0] + v9) = *(_BYTE *)(STACK[0x6AC0] + v9)
                                 + 119
                                 * ((((v9 + 23) ^ (2 * v15) ^ 0x66) - 18) ^ (((v9 + 23) ^ (2 * v15) ^ 0x90) + 28) ^ (((v9 + 23) ^ (2 * v15) ^ 0x1F) - 107))
                                 + 127;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((26089 * !v16) ^ v8)))();
}

uint64_t sub_100CDB510(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  LODWORD(STACK[0x6940]) = v5;
  v9 = LODWORD(STACK[0x6A40]) | (LODWORD(STACK[0x6A90]) << 24) | (LODWORD(STACK[0x6A60]) << 8) | (LODWORD(STACK[0x6A50]) << 16);
  v10 = STACK[0x1174];
  LODWORD(STACK[0x6960]) = v9;
  LODWORD(STACK[0x6950]) = v9 ^ v10;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4))((a5 + a4 + v7 + v8 + 1870600741));
}

uint64_t sub_100CDB614(unsigned int a1, int a2)
{
  unsigned int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  _BOOL4 v28;

  v17 = *(unsigned __int8 *)(v3 + v2) + ((14 * (v7 ^ 0x2DAF)) ^ 0xA) - 119 * v2;
  v18 = ((v12 + v17 - ((2 * v17) & 0x20)) ^ a2) + 508936351;
  v19 = (v18 ^ 0xCB9D23BB) & (2 * (v18 & v10)) ^ v18 & v10;
  v20 = ((2 * (v18 ^ v5)) ^ 0x788704C8) & (v18 ^ v5) ^ (2 * (v18 ^ v5)) & v14;
  v21 = v20 ^ v8;
  v22 = (v20 ^ 0x18030040) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ v4) & v21 ^ (4 * v21) & v14;
  v24 = v22 ^ v14 ^ (v23 ^ v11) & (16 * v22);
  v25 = (16 * (v23 ^ 0xC418264)) & (v14 - 4) ^ 0x38438024 ^ ((16 * (v23 ^ 0xC418264)) ^ 0xC4382640) & (v23 ^ 0xC418264);
  v26 = (v24 << 8) & (v14 - 100) ^ v24 ^ ((v24 << 8) ^ v9) & v25;
  v27 = v18 ^ (2
             * ((v26 << 16) & v13 ^ v26 ^ ((v26 << 16) ^ v15) & ((v25 << 8) & v13 ^ 0x3C410000 ^ ((v25 << 8) ^ 0x43820000) & v25))) ^ v16;
  v28 = v6 + 3 * (a1 / 3) == v2;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v28 | (16 * v28) | v7)) - 4))(a1 + 1, v27);
}

uint64_t sub_100CDB7AC(uint64_t a1, uint64_t a2)
{
  int v2;

  LODWORD(STACK[0x6A10]) = LODWORD(STACK[0x6A70]) - 2 * LODWORD(STACK[0x6A80]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v2 + 12087)))(a1, a2, 626542643, 39845898, 411338307, 472520126, 1135476736, 5537795);
}

uint64_t sub_100CDB880()
{
  int v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((3804 * (2 * (v1 & 1) + (v1 ^ 1u) < v2 + 16)) ^ (v0 + v3))))();
}

uint64_t sub_100CDB990(uint64_t a1)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(STACK[0x6AD8] + 8 * (v1 + 8443)))(a1, v2 ^ 0xAE610A64);
}

uint64_t sub_100CDB9C4()
{
  int v0;
  char v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((25 * ((v1 & 1) == 0)) ^ (v0 + 19179))))();
}

uint64_t sub_100CDBB78(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  unsigned int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  unsigned int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unint64_t v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  unsigned int v369;
  int v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  int v423;
  int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  int v443;
  int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  int v452;
  int v453;
  int v454;
  unsigned int v455;
  int v456;
  unsigned int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  int v490;
  unsigned int v491;
  int v492;
  unint64_t v493;
  unsigned int v494;
  int v495;
  uint64_t v496;

  v21 = (v18 + 198456713) & 0xF42BBBEF;
  v22 = (v18 + 177812493) & 0xF5669477;
  STACK[0x6AC0] = v22;
  LODWORD(STACK[0x69E0]) = v21;
  v23 = -402653184 * v9 + (((v22 + 1592321799) * v9) >> 5);
  v24 = (v8 * LODWORD(STACK[0x1178])) & 0xFFFFFFF0 | ((-336062047 * v8) >> 28);
  v25 = ((-385524736
        * (((v10 ^ 0xEE47E4EF) - 1076293259) ^ ((v10 ^ 0xD3B48C6E) - 2111145482) ^ ((v10 ^ 0x39ECBEF5) + v15 + 1541))) | ((553271639 * (((v10 ^ 0xC761B3C) + 1575546536) ^ ((v10 ^ 0x74C6BDA9) + a3) ^ ((v21 ^ 0x2D31BC11) + (v10 ^ 0x7CAF70E1))) + 245160304) >> 22))
      + 1936048128;
  v26 = (v11 * a7) & 0xFFFE0000 | ((1226514903 * v11) >> 15);
  LODWORD(v22) = (1721761792 * v24) | ((2110841653 * v24) >> 11);
  v27 = (-1415165952 * ((v25 ^ v23) - (v26 + v24))) | ((-32148279 * ((v25 ^ v23) - (v26 + v24))) >> 21);
  v28 = (-769490944 * v26) | ((-104487867 * v26) >> 17);
  v29 = ((v27 ^ ((-1988100096 * v23) | ((-678409965 * v23) >> 9))) - v22) ^ v28;
  v30 = (-2120529920 * v27) | ((-347065495 * v27) >> 21);
  v31 = (444596224 * v29) | ((1960788533 * v29) >> 9);
  v32 = (-1505366016 * v28) | ((379216991 * v28) >> 20);
  v33 = 114770517 * v31;
  v34 = -1173182464 * v31 - 592980607;
  v35 = (2 * (v34 & 0x23582800)) & 0xFC1FFFFF ^ v34 & 0x23582800 ^ ((2 * (v34 & 0x23582800)) | 2) & (v34 ^ 0x6E43D386);
  v36 = (2 * (v34 ^ 0x6E43D386)) & 0x4D1BF000 ^ 0x45080001 ^ ((2 * (v34 ^ 0x6E43D386)) ^ 0x9A37F202) & (v34 ^ 0x6E43D386);
  v37 = (4 * v35) & 0x4D1BF9F8 ^ v35 ^ ((4 * v35) | 4) & v36;
  v38 = (4 * v36) & 0x4D1BF9F8 ^ 0x49101819 ^ ((4 * v36) ^ 0x346FE604) & v36;
  v39 = (16 * v37) & 0x4D1BF9F0 ^ v37 ^ ((16 * v37) ^ 0x10) & v38;
  v40 = (16 * v38) & 0x4D1BF9F0 ^ LODWORD(STACK[0x1184]) ^ ((16 * v38) ^ 0xD1BF9F90) & v38;
  v41 = v39 ^ (v39 << 8) & 0x4D1BF900 ^ ((v39 << 8) ^ 0x1100) & v40 ^ 0x4D1BE8E8;
  v42 = v34 ^ (2
             * ((v41 << 16) & 0x4D1B0000 ^ v41 ^ ((v41 << 16) ^ 0x79F90000) & ((v40 << 8) & 0x4D1B0000 ^ 0x44020000 ^ ((v40 << 8) ^ 0x1BF90000) & v40)));
  v43 = (v31 ^ (((-1919156384 * v22) | ((-1133715461 * v22) >> 27)) + v30)) + v32;
  v44 = v43 * LODWORD(STACK[0x1180]);
  LODWORD(v22) = v42 & 0x760C2DE2 ^ 0x520420A0 ^ (v42 ^ 0x80A20672) & ((v33 >> 21) ^ 0x89F3D21C);
  LODWORD(v22) = (((((2 * v22) | 0xA16DBECA) - v22 - 1354162021) ^ 0x61B4BB93) + 569913700) ^ (((((2 * v22) | 0xA16DBECA)
                                                                                               - v22
                                                                                               - 1354162021) ^ 0x89602CBB)
                                                                                             - 919820724) ^ (((((2 * v22) | 0xA16DBECA) - v22 - 1354162021) ^ 0x4199B371) + 30751106);
  v45 = (((-1527775232 * v30) | ((623438415 * v30) >> 12)) ^ 0x4FECED77)
      - 105676864
      + ((2 * ((-1527775232 * v30) | ((623438415 * v30) >> 12))) & 0x9FD9DAEE);
  v46 = ((-1216517568 * v32) | ((v32 * LODWORD(STACK[0x117C])) >> 26)) + 2049469641 - v45 + v22 - 2031322741;
  v47 = v46 + 2094;
  v48 = v46 + 1602869305;
  v43 *= -187886304;
  v49 = (v43 & 0xFFFFFFE0 | (v44 >> 27))
      - 2 * ((v43 & 0x5DBAD520 | (v44 >> 27) & 0x5DBAD53D) ^ (v44 >> 27) & 8)
      + 1572525365;
  HIDWORD(v50) = v49 ^ 0x1535;
  LODWORD(v50) = v43;
  LODWORD(v50) = (v50 >> 14) ^ __ROR4__((v48 - ((v47 - 1119574719 + (~(2 * v48) | 0x448A5595)) ^ v49)) ^ (-1572525365- (((v49 ^ 0xF02CD1A1) + 265498207) ^ ((v49 ^ 0x6F410834) - 1866532916) ^ ((v49 ^ 0xC2D70CA0) + 1026093920))), 14) ^ 0xE7AD18B1;
  HIDWORD(v50) = v50;
  v51 = v47
      - 1873536821
      + ((((v50 >> 18) ^ 0x9D495153) - 847485769) ^ (((v50 >> 18) ^ 0x4581F847) + 364170659) ^ (((v50 >> 18) ^ 0x9EE4D0FF)
                                                                                              - 825105125));
  v52 = (v51 ^ 0xBD9862A0) & (2 * (v51 & 0xB91C6B31)) ^ v51 & 0xB91C6B31;
  v53 = ((2 * (v51 ^ 0xEF90A2E0)) ^ 0xAD1993A2) & (v51 ^ 0xEF90A2E0) ^ (2 * (v51 ^ 0xEF90A2E0)) & 0x568CC9D0;
  v54 = v53 ^ 0x52844851;
  v55 = (v53 ^ 0x16048191) & (4 * v52) ^ v52;
  v56 = ((4 * v54) ^ 0x5A332744) & v54 ^ (4 * v54) & 0x568CC9D0;
  v57 = (v56 ^ LODWORD(STACK[0x118C])) & (16 * v55) ^ v55;
  v58 = ((16 * (v56 ^ 0x48CC891)) ^ LODWORD(STACK[0x1188])) & (v56 ^ 0x48CC891) ^ (16 * (v56 ^ 0x48CC891)) & 0x568CC9D0;
  v59 = v57 ^ 0x568CC9D1 ^ (v58 ^ 0x408C89C1) & (v57 << 8);
  v60 = v51 ^ (2
             * ((v59 << 16) & 0x568C0000 ^ v59 ^ ((v59 << 16) ^ 0x49D10000) & (((v58 ^ 0x160040C1) << 8) & 0x568C0000 ^ 0x52040000 ^ (((v58 ^ 0x160040C1) << 8) ^ 0xCC90000) & (v58 ^ 0x160040C1))));
  v61 = v60 ^ (v45 + (v49 ^ 0xA2452ACA) + 1134737130 + v22 - 2031322741);
  v62 = -834474615
      * (((v61 ^ 0x9ADC113B) + 1214669635) ^ ((v61 ^ 0xD7330EDD) + 92896421) ^ ((v61 ^ 0xD8EAE775) + 173053197))
      - 1515739795;
  v63 = (v62 ^ (v16 + 3696)) & (2 * (v62 & 0xB6A573D0)) ^ v62 & 0xB6A573D0;
  v64 = ((2 * (v62 ^ 0xBCA94E19)) ^ LODWORD(STACK[0x1190])) & (v62 ^ 0xBCA94E19) ^ (2 * (v62 ^ 0xBCA94E19)) & 0xA0C3DC8;
  v65 = v64 ^ 0xA040449;
  v66 = (v64 ^ 0x81989) & (4 * v63) ^ v63;
  v67 = ((4 * v65) ^ 0x2830F724) & v65 ^ (4 * v65) & 0xA0C3DC8;
  v68 = (v67 ^ 0x8003509) & (16 * v66) ^ v66;
  v69 = ((16 * (v67 ^ 0x20C08C9)) ^ 0xA0C3DC90) & (v67 ^ 0x20C08C9) ^ (16 * (v67 ^ 0x20C08C9)) & 0xA0C3DC0;
  v70 = v68 ^ 0xA0C3DC9 ^ (v69 ^ 0x1C00) & (v68 << 8);
  v71 = v62 ^ (2
             * ((v70 << 16) & 0xA0C0000 ^ v70 ^ ((v70 << 16) ^ 0x3DC90000) & (((v69 ^ 0xA0C2149) << 8) & 0xA0C0000 ^ (((v69 ^ 0xA0C2149) << 8) ^ 0xC3D0000) & (v69 ^ 0xA0C2149) ^ 0x2000000)));
  v72 = (((v49 ^ 0x1F40C21F) - 524337695) ^ ((v49 ^ 0xE4BFA1C7) + 457203257) ^ ((v49 ^ 0xA645B6ED) + 1505380627))
      + 1511522457
      + (((v71 ^ 0xA15FF061) + 1529719431) ^ ((v71 ^ 0x52A9E869) - 1461996913) ^ ((v71 ^ 0x415B104A) - 1154921810));
  v73 = (v72 ^ 0x30D3EDF4) & (2 * (v72 & 0xBAC381F6)) ^ v72 & 0xBAC381F6;
  v74 = ((2 * (v72 ^ 0x2454EC54)) ^ 0x3D2EDB44) & (v72 ^ 0x2454EC54) ^ (2 * (v72 ^ 0x2454EC54)) & 0x9E976DA2;
  v75 = v74 ^ 0x829124A2;
  v76 = (v74 ^ 0x1C060900) & (4 * v73) ^ v73;
  v77 = ((4 * v75) ^ 0x7A5DB688) & v75 ^ (4 * v75) & 0x9E976DA0;
  v78 = (v77 ^ 0x1A152480) & (16 * v76) ^ v76;
  v79 = ((16 * (v77 ^ 0x84824922)) ^ 0xE976DA20) & (v77 ^ 0x84824922) ^ (16 * (v77 ^ 0x84824922)) & 0x9E976DA0;
  v80 = v78 ^ 0x9E976DA2 ^ (v79 ^ 0x88164800) & (v78 << 8);
  v81 = v72 ^ (2
             * ((v80 << 16) & 0x1E970000 ^ v80 ^ ((v80 << 16) ^ 0x6DA20000) & (((v79 ^ 0x16812582) << 8) & 0x1E970000 ^ 0x8920000 ^ (((v79 ^ 0x16812582) << 8) ^ 0x176D0000) & (v79 ^ 0x16812582))));
  LODWORD(STACK[0x6980]) = v71 ^ 0x58DA518;
  LODWORD(STACK[0x69D0]) = v60;
  v82 = v71 ^ 0x58DA518 ^ v60;
  v83 = (v71 ^ LODWORD(STACK[0x1194])) - 965946002;
  LODWORD(STACK[0x6A60]) = v71;
  LODWORD(v22) = v22 - (((v71 ^ 0xD379862E) + 688643274) ^ v83 ^ ((v71 ^ 0x5DCA01E6) - 1481090302)) + 1852082668;
  v84 = (v22 ^ 0xE9755BD6) & (2 * (v22 & 0xF1791A10)) ^ v22 & 0xF1791A10;
  v85 = ((2 * (v22 ^ 0xA9B56BF6)) ^ 0xB198E3CC) & (v22 ^ 0xA9B56BF6) ^ (2 * (v22 ^ 0xA9B56BF6)) & 0x58CC71E6;
  v86 = v85 ^ LODWORD(STACK[0x1198]);
  v87 = (v85 ^ 0x8860E2) & (4 * v84) ^ v84;
  v88 = ((4 * v86) ^ 0x6331C798) & v86 ^ (4 * v86) & 0x58CC71E4;
  v89 = (v88 ^ 0x40004186) & (16 * v87) ^ v87;
  v90 = ((16 * (v88 ^ 0x18CC3066)) ^ 0x8CC71E60) & (v88 ^ 0x18CC3066) ^ (16 * (v88 ^ 0x18CC3066)) & 0x58CC71E0;
  v91 = v89 ^ 0x58CC71E6 ^ (v90 ^ 0x8C41000) & (v89 << 8);
  v92 = v22 ^ (2
             * ((v91 << 16) & 0x58CC0000 ^ v91 ^ ((v91 << 16) ^ 0x71E60000) & (((v90 ^ LODWORD(STACK[0x119C])) << 8) & 0x58CC0000 ^ 0x108C0000 ^ (((v90 ^ LODWORD(STACK[0x119C])) << 8) ^ v17) & (v90 ^ LODWORD(STACK[0x119C])))));
  LODWORD(v22) = (((v61 ^ 0xA0824CDC) + 1916288678) ^ ((v61 ^ 0x9E900916) + 1277852528) ^ ((v61 ^ 0xAB17BD59)
                                                                                         + 2041433889))
               * LODWORD(STACK[0x11A4])
               + 12747571;
  v93 = 1080785679
      * (((v82 ^ 0x7554B95D) + 1299604862) ^ ((v82 ^ 0x1255A448) + 712472681) ^ ((v82 ^ LODWORD(STACK[0x11A0]))
                                                                               + 2097583357))
      - 719588671;
  v94 = (v93 ^ 0xDF456228) & (2 * (v93 & 0xE0618A89)) ^ v93 & 0xE0618A89;
  v95 = ((2 * (v93 ^ 0x9F06763A)) ^ 0xFECFF966) & (v93 ^ 0x9F06763A) ^ (2 * (v93 ^ 0x9F06763A)) & 0x7F67FCB2;
  v96 = v95 ^ 0x1200491;
  v97 = (v95 ^ 0x2067820) & (4 * v94) ^ v94;
  v98 = ((4 * v96) ^ 0xFD9FF2CC) & v96 ^ (4 * v96) & 0x7F67FCB0;
  v99 = (v98 ^ 0x7D07F080) & (16 * v97) ^ v97;
  v100 = ((16 * (v98 ^ (a4 + 3113))) ^ 0xF67FCB30) & (v98 ^ (a4 + 3113)) ^ (16 * (v98 ^ (a4 + 3113))) & 0x7F67FCB0;
  v101 = v99 ^ 0x7F67FCB3 ^ (v100 ^ 0x7667C800) & (v99 << 8);
  v102 = v93 ^ (2
              * ((v101 << 16) ^ v101 ^ (((v100 ^ 0x9003483) << 8) & 0x7F670000 ^ (((v100 ^ 0x9003483) << 8) ^ 0x67FC0000) & (v100 ^ 0x9003483)) & ~(v101 << 16)));
  v103 = 1531811709 * (((v81 ^ 0x92723DD9) + 1342293469) ^ ((v81 ^ a6) - 564531780) ^ ((v81 ^ 0x10B172D5) - 759002415))
       + 1257097661;
  v104 = (v103 ^ 0xEFBF384A) & (2 * (v103 & 0xEE3E3A6B)) ^ v103 & 0xEE3E3A6B;
  v105 = ((2 * (v103 ^ 0x7FCB0C9C)) ^ 0x23EA6DEE) & (v103 ^ 0x7FCB0C9C) ^ (2 * (v103 ^ 0x7FCB0C9C)) & 0x91F536F6;
  v106 = v105 ^ 0x90151211;
  v107 = (v105 ^ 0x1E020E4) & (4 * v104) ^ v104;
  v108 = ((4 * v106) ^ 0x47D4DBDC) & v106 ^ (4 * v106) & 0x91F536F4;
  v109 = (v108 ^ LODWORD(STACK[0x11A8])) & (16 * v107) ^ v107;
  v110 = ((16 * (v108 ^ 0x90212423)) ^ 0x1F536F70) & (v108 ^ 0x90212423) ^ (16 * (v108 ^ 0x90212423)) & 0x91F536F0;
  v111 = v109 ^ 0x91F536F7 ^ (v110 ^ 0x11512600) & (v109 << 8);
  v112 = v103 ^ (2
               * ((v111 << 16) & 0x11F00000 ^ v111 ^ ((v111 << 16) ^ 0x36F00000) & (((v110 ^ 0x80A41087) << 8) & 0x11F50000 ^ (((v110 ^ 0x80A41087) << 8) ^ 0x75360000) & (v110 ^ 0x80A41087) ^ 0xC00000)));
  LODWORD(STACK[0x6A00]) = v81;
  v113 = -646459392
       * (((v81 ^ 0x7CC6726) - 977297628) ^ ((v81 ^ 0x58B20E1A) - 1698564576) ^ ((v81 ^ 0xC197338E) + 65325964))
       - 525608687;
  v114 = (v113 ^ 0xDF4638AC) & (2 * (v113 & 0xDF96A000)) ^ v113 & 0xDF96A000;
  v115 = (2 * (v113 ^ 0xC64238AC)) & 0x19D48002 ^ 0x8548001 ^ ((2 * (v113 ^ 0xC64238AC)) ^ LODWORD(STACK[0x11B0])) & (v113 ^ 0xC64238AC);
  v116 = (4 * v114) & 0x18D48000 ^ v114 ^ ((4 * v114) | 0xC) & v115;
  v117 = (4 * v115) & 0x19D49E40 ^ a5 ^ ((4 * v115) ^ LODWORD(STACK[0x11AC])) & v115;
  v118 = (16 * v116) & 0x19D49E40 ^ v116 ^ ((16 * v116) ^ 0x30) & v117;
  v119 = (16 * v117) & 0x19D49E40 ^ 0x941A43 ^ ((16 * v117) ^ 0x9D49E430) & v117;
  v120 = v118 ^ 0x19D49C40 ^ (v118 << 8) & 0x19D49E00 ^ ((v118 << 8) ^ 0x300) & v119;
  v121 = (v120 << 16) & 0x19D40000 ^ v120 ^ ((v120 << 16) ^ 0x1E430000) & ((v119 << 8) & 0x19D40000 ^ 0x9400000 ^ ((v119 << 8) ^ 0xD49E0000) & v119);
  LODWORD(STACK[0x6900]) = v82;
  v122 = -2133395938
       * (((v82 ^ 0xCB6250A5) - 213873530) ^ ((v82 ^ 0x1E5EB852) + 645686387) ^ ((v82 ^ 0xF719BD3E) - 818192097))
       - 2008409517;
  v123 = (2 * (v122 & 0xE2B0E040)) & 0xC1404080 ^ v122 & 0xE2B0E040 ^ ((2 * (v122 & 0xE2B0E040)) | 2) & (v122 ^ 0x237893E6);
  v124 = (2 * (v122 ^ 0x237893E6)) & 0xC1C873A4 ^ 0x404810A3 ^ ((2 * (v122 ^ 0x237893E6)) ^ 0x8390E74E) & (v122 ^ 0x237893E6);
  v125 = (4 * v123) & 0xC1C873A4 ^ v123 ^ ((4 * v123) ^ 0xC) & v124;
  v126 = (4 * v124) & 0xC1C873A4 ^ 0xC0C83123 ^ ((4 * v124) ^ 0x721CE9C) & v124;
  v127 = (16 * v125) & 0xC1C873A0 ^ v125 ^ ((16 * v125) ^ 0x70) & v126;
  v128 = (16 * v126) & 0xC1C873A0 ^ 0xC1484187 ^ ((16 * v126) ^ 0x1C873A70) & v126;
  v129 = v127 ^ (v127 << 8) & 0xC1C87300 ^ ((v127 << 8) ^ 0x2700) & v128 ^ 0xC1C85080;
  v130 = (v129 << 16) & 0x41C80000 ^ v129 ^ ((v129 << 16) ^ 0x73A70000) & ((v128 << 8) & 0x41C80000 ^ 0x1880000 ^ ((v128 << 8) ^ 0xC8730000) & v128);
  v131 = (((v92 ^ 0xA023CE2D) + 1679249323) ^ ((v92 ^ 0x12106CEF) - 702222999) ^ ((v92 ^ 0x535A5B1E) - 1754342758))
       * LODWORD(STACK[0x11B4])
       - 2003946513;
  v132 = (v131 ^ 0x83510118) & (2 * (v131 & 0xC865895D)) ^ v131 & 0xC865895D;
  v133 = ((2 * (v131 ^ 0x93D201A0)) ^ 0xB76F11FA) & (v131 ^ 0x93D201A0) ^ (2 * (v131 ^ 0x93D201A0)) & 0x5BB788FC;
  v134 = v133 ^ 0x48908805;
  v135 = (v133 ^ 0x32600F8) & (4 * v132) ^ v132;
  v136 = ((4 * v134) ^ 0x6EDE23F4) & v134 ^ (4 * v134) & 0x5BB788FC;
  v137 = (v136 ^ 0x4A9600F9) & (16 * v135) ^ v135;
  v138 = ((16 * (v136 ^ LODWORD(STACK[0x11B8]))) ^ 0xBB788FD0) & (v136 ^ LODWORD(STACK[0x11B8])) ^ (16
                                                                                                  * (v136 ^ LODWORD(STACK[0x11B8]))) & 0x5BB788F0;
  v139 = v131 ^ (2
               * (((v137 ^ 0x5BB788FD ^ (v138 ^ LODWORD(STACK[0x11BC])) & (v137 << 8)) << 16) & 0x5BB70000 ^ v137 ^ 0x5BB788FD ^ (v138 ^ LODWORD(STACK[0x11BC])) & (v137 << 8) ^ (((v137 ^ 0x5BB788FD ^ (v138 ^ LODWORD(STACK[0x11BC])) & (v137 << 8)) << 16) ^ 0x8FD0000) & (((v138 ^ 0x4087002D) << 8) & 0x5BB70000 ^ 0x48370000 ^ (((v138 ^ 0x4087002D) << 8) ^ 0x37880000) & (v138 ^ 0x4087002D))));
  v140 = (v112 >> 20) & 0x387 ^ 0x20582087 ^ ((v112 >> 20) ^ 0xFFFFF13C) & (v113 ^ (2 * v121) ^ 0xC63D0611);
  v141 = ((v140 | 0x2B5FB747) - (v140 | 0xD4A048B8) - 727693128) ^ 0x1185093B;
  LODWORD(STACK[0x6AB0]) = v92;
  v142 = -1342177280
       * (((v92 ^ 0x96FBA34D) + 1389306571) ^ ((v92 ^ 0x4B641D11) - 1890542441) ^ ((v92 ^ v14) - 121453048));
  v143 = v142 | 0x2EBD1AB;
  v144 = v142 ^ 0x8BCE1D95;
  v145 = (v142 ^ 0xABCE1D95) & (2 * (v142 & 0xB0000000)) ^ v142 & 0xB0000000;
  v146 = ((2 * v144) & 0x20000002 | 1) ^ ((2 * v144) ^ 0x68420494) & v144;
  v147 = (4 * v145 + 4) & v146;
  v148 = (4 * v146) & 0x24306248 ^ 0x24306243 ^ ((4 * v146) ^ 0xD0C60984) & v146;
  v149 = (16 * v147) & 0x3431E240 ^ v147 ^ ((16 * v147) ^ 0xB0) & v148;
  v150 = (16 * v148) & 0x3431E260 ^ 0x3421C04B ^ ((16 * v148) ^ 0x431E26B0) & v148;
  v151 = v145 ^ LODWORD(STACK[0x11C0]) ^ v149 ^ (v149 << 8) & 0x3431E200 ^ ((v149 << 8) ^ 0x2B00) & v150;
  v152 = v143 ^ (2
               * ((v151 << 16) & 0x34310000 ^ v151 ^ ((v151 << 16) ^ 0x626B0000) & ((v150 << 8) & 0x34310000 ^ 0x4110000 ^ ((v150 << 8) ^ 0x31E20000) & v150)));
  v153 = ((v139 >> 4) ^ 0x3D7F4073) & (v152 ^ 0xEACA157C) ^ v152 & 0xC466B606;
  v154 = (v153 & 0x70497703 ^ 0x30097301) + (v153 ^ 0xC0400402) - ((v153 ^ 0xC0400402) & 0x70497703);
  v155 = ((v154 ^ 0x89B3921) - 450991729) ^ ((v154 ^ 0xA8695EC2) + 1173098094) ^ ((v154 ^ 0xAF46FF19) + 1120120759);
  v156 = (((__PAIR64__(v130, v102) >> 31) ^ v122) & 0xB0471379 ^ 0xB0010309)
       + (((__PAIR64__(v130, v102) >> 31) ^ v122) & 0x4FB8EC86 ^ 0xD98E007)
       - 1;
  v157 = ((v156 ^ 0xDC081FF8) + 1333384214) ^ ((v156 ^ LODWORD(STACK[0x11C4])) - 724606311) ^ ((v156 ^ 0xC40F528C)
                                                                                             + 1467914594);
  v158 = v157 + 2062644058;
  v157 = -810062896 - v157;
  LODWORD(v22) = ((-1668055040
                 * (((v61 ^ 0xD96C6768) + 198579474) ^ ((v61 ^ 0x55EFEB92) - 2024433172) ^ ((v61 ^ 0x19867469)
                                                                                          - 885258735))) | (v22 >> 17))
               - v141
               - v155
               + 551292019;
  v159 = v22 ^ v157;
  LODWORD(v22) = v22 & v157;
  v160 = (461818800 * v158) | ((-508007237 * v158 - 2005154013) >> 28);
  HIDWORD(v50) = v159 + 2 * v22;
  LODWORD(v50) = 1626628589 * HIDWORD(v50);
  LODWORD(v22) = v50 >> 2;
  HIDWORD(v50) = ~(v112 >> 20);
  LODWORD(v50) = -444758843 * v141;
  v161 = v50 >> 2;
  v160 -= 2017693136;
  v162 = (v22 ^ (((1610088448 * (v155 + 1382738834)) | ((873786367 * (v155 + 1382738834) - 1868377112) >> 13))
               - 1623195648))
       - v160;
  v163 = v161 * LODWORD(STACK[0x11C8]);
  LODWORD(v22) = (1211629568 * v22) | ((991676679 * v22) >> 13);
  v164 = (1708757586 * v160) | ((-1293104855 * v160) >> 31);
  v165 = ((-1855471097 * (v162 + v161)) >> 3) - ((v162 + v161) << 29);
  v166 = ((((v22 + (v163 >> 30)) ^ (-2065246764 * v161)) + 2 * ((v22 + (v163 >> 30)) & (-2065246764 * v161)) - v165) ^ v164)
       + 2
       * ((((v22 + (v163 >> 30)) ^ (-2065246764 * v161)) + 2 * ((v22 + (v163 >> 30)) & (-2065246764 * v161)) - v165) & v164);
  LODWORD(v22) = (1625292800 * v22) | ((-1082846457 * v22) >> 11);
  v167 = ((723248623 * v165) >> (v163 & 4) >> (v163 & 4 ^ 4)) ^ (-268435456 * v165);
  v168 = (583141481 * v166) >> 9;
  v169 = (880803840 * v166) | v168;
  v170 = ((v22 - v167) ^ 0xFD462DCD) + v169 + 965863005;
  LODWORD(v22) = ((1278083072 * v164) | ((348431895 * v164) >> 15)) - v22 - v167 + v169;
  LODWORD(v50) = __ROR4__(((v170 ^ v22) + 1299183232) ^ 0x734634D, 17) ^ 0x31A6839A;
  HIDWORD(v50) = v50;
  v171 = (v50 >> 15) + 554177189 - ((2 * (v50 >> 15)) & 0x4210254A);
  HIDWORD(v50) = v171 ^ v168 ^ 0x2A5;
  LODWORD(v50) = v169 ^ 0x21081000 ^ v171;
  v172 = v167
       - (((v171 ^ 0x2432F949) - 607320393) ^ ((v171 ^ 0x25A7BF53) - 631750483) ^ ((v171 ^ 0x209D54BF) - 547181759));
  LODWORD(STACK[0x6920]) = v172;
  v173 = v172 + 473396597;
  v174 = 1437566653 * (v172 + 473396597) - 619386674;
  LODWORD(v22) = v22
               - (((v171 ^ 0xEB3051BB) + 349154885) ^ ((v171 ^ 0x81CF88E3) + 2117105437) ^ ((v171 ^ 0x4BF7CBFD)
                                                                                          - 1274530813))
               + 474195689;
  v175 = (v22 ^ 0xB8A26462) & (2 * (v22 & 0xC2B44672)) ^ v22 & 0xC2B44672;
  v176 = ((2 * (v22 ^ 0xB9CA6846)) ^ 0xF6FC5C68) & (v22 ^ 0xB9CA6846) ^ (2 * (v22 ^ 0xB9CA6846)) & 0x7B7E2E34;
  v177 = v176 ^ 0x9022214;
  v178 = (v176 ^ 0x12700800) & (4 * v175) ^ v175;
  v179 = ((4 * v177) ^ 0xEDF8B8D0) & v177 ^ (4 * v177) & 0x7B7E2E34;
  v180 = (v179 ^ 0x69782800) & (16 * v178) ^ v178;
  v181 = ((16 * (v179 ^ LODWORD(STACK[0x11CC]))) ^ 0xB7E2E340) & (v179 ^ LODWORD(STACK[0x11CC])) ^ (16
                                                                                                  * (v179 ^ LODWORD(STACK[0x11CC]))) & 0x7B7E2E30;
  v182 = v180 ^ 0x7B7E2E34 ^ (v181 ^ 0x33622200) & (v180 << 8);
  v183 = v22 ^ (2
              * ((v182 << 16) & 0x7B7E0000 ^ v182 ^ ((v182 << 16) ^ 0x2E340000) & (((v181 ^ LODWORD(STACK[0x11D0])) << 8) & 0x7B7E0000 ^ 0x1500000 ^ (((v181 ^ LODWORD(STACK[0x11D0])) << 8) ^ 0x7E2E0000) & (v181 ^ LODWORD(STACK[0x11D0])))));
  LODWORD(STACK[0x6A80]) = v171;
  LODWORD(v50) = __ROR4__((v50 >> 12) ^ 0xC5DBDED1, 20);
  LODWORD(STACK[0x6A40]) = v50 ^ 0xBDED1C5D;
  LOBYTE(v177) = (99 * (((v183 ^ 0x47) + 37) ^ ((v183 ^ 0xEF) - 115) ^ ((v183 ^ 0xB2) - 46)) - 46) & 0x17;
  LODWORD(STACK[0x6910]) = v183;
  v184 = 786110464
       * (((v183 ^ 0x87A56304) - 2115550616) ^ ((v183 ^ 0x3779B1B6) + 825987286) ^ ((v183 ^ 0xD0FCC8A8) - 692131380))
       - 49377280
       + ((-2077893789
         * (((v183 ^ 0x15142C47) + 324406565) ^ ((v183 ^ 0x3EEF07EF) + 950871693) ^ ((v183 ^ 0x4BDB31B2u) + 1301876946))
         - 562060846) >> 21);
  LODWORD(STACK[0x6A70]) = v173;
  v185 = (50776244 * (v50 ^ 0xBDED1C5D)) | ((-2134789587 * (v50 ^ 0xBDED1C5D)) >> 30);
  LODWORD(v22) = ((-508608512 * v173) | (v174 >> 18)) + 976453632;
  v186 = -632303587
       * (v184 ^ ((v22 ^ (((161480704
                          * (((v171 ^ 0xDE7D7BC2) + 562201662) ^ ((v171 ^ 0xB8730416) + 1200421866) ^ ((v171 ^ 0x47066D71) - 1191603569))) | ((579469389 * (((v171 ^ 0x3448ACBF) - 877178047) ^ ((v171 ^ 0x60040538) - 1610876216) ^ ((v171 ^ 0x7544BB22u) - 1967438626)) - 429941855) >> 11))
                        + 1948254208))
                - v185));
  LOBYTE(v171) = ((-678409965 * v23) >> 9) & 0xE;
  v187 = (2095672224 * v184) | ((1676102493 * v184) >> 27);
  v188 = (552017920 * v185) | ((-1815541959 * v185) >> 19);
  v189 = (v186 << v177 << (v177 ^ 0x17)) ^ (v186 >> 9);
  v190 = 1760412263 * v188;
  v191 = -1033437184 * v188;
  LODWORD(v22) = -1228863488 * v22 + ((1119279137 * v22) >> 21) + v188 - v187 - v189;
  v192 = v189 * LODWORD(STACK[0x11D4]);
  v193 = 3 * v189;
  v194 = (516218880 * v187) | ((-293013977 * v187) >> 19);
  v195 = __PAIR64__(v193, v192) >> 4;
  v196 = ((1190205721 * v22) >> v171 >> (v171 ^ 0xE)) ^ (1684275200 * v22);
  LODWORD(v22) = v191 + HIWORD(v190) - v194 - v195 - v196;
  LODWORD(v22) = ((2 * v22) & 0xD1C6FDFE) + (v22 ^ 0xE8E37EFF);
  v197 = 1045549761 * v22 - 2037759095;
  v198 = (v197 ^ 0x1746D0B7) & (2 * (v197 & 0x5716D038)) ^ v197 & 0x5716D038;
  v199 = ((2 * (v197 ^ 0x114B70B7)) ^ 0x8CBB411E) & (v197 ^ 0x114B70B7) ^ (2 * (v197 ^ 0x114B70B7)) & 0x465DA08E;
  v200 = v199 ^ 0x4244A081;
  v201 = (v199 ^ 0x6192001) & (4 * v198) ^ v198;
  v202 = ((4 * v200) ^ LODWORD(STACK[0x11DC])) & v200 ^ (4 * v200) & 0x465DA08C;
  v203 = (v202 ^ a8) & (16 * v201) ^ v201;
  v204 = ((16 * (v202 ^ LODWORD(STACK[0x11D8]))) ^ LODWORD(STACK[0x11E0])) & (v202 ^ LODWORD(STACK[0x11D8])) ^ (16 * (v202 ^ LODWORD(STACK[0x11D8]))) & 0x465DA080;
  v205 = v203 ^ 0x465DA08F ^ (v204 ^ 0x44580000) & (v203 << 8);
  v206 = v197 ^ (2
               * ((v205 << 16) & 0x465D0000 ^ v205 ^ ((v205 << 16) ^ 0x208F0000) & (((v204 ^ 0x205A00F) << 8) & 0x465D0000 ^ 0x25D0000 ^ (((v204 ^ 0x205A00F) << 8) ^ 0x5DA00000) & (v204 ^ 0x205A00F))));
  v207 = 292722407 * v196;
  v208 = ((2 * ((1195988864 * v195) | ((-460418385 * v195) >> 25))) & 0xEEEEBFFE)
       + (((1195988864 * v195) | ((-460418385 * v195) >> 25)) ^ 0xF7775FFF);
  v209 = ((v22 + 1465887144) ^ 0x3FBC8711) & (2 * ((v22 + 1465887144) & 0xBFBCD759)) ^ (v22 + 1465887144) & 0xBFBCD759;
  HIDWORD(v50) = (7 - v22) ^ (2
                            * ((((2 * ((v22 + 1465887144) ^ 0x3ECC0103)) ^ 0x2E1ACB4) & ((v22 + 1465887144) ^ 0x3ECC0103) ^ 0x608402) & (4 * v209) ^ v209)) ^ 4;
  LODWORD(v50) = v206;
  LODWORD(v22) = (((v50 >> 4) ^ 0xD5EA849B) + 759463784) ^ (((v50 >> 4) ^ 0xA01F84BC) + 1488027457) ^ (((v50 >> 4) ^ 0x584E7935) - 1595899190);
  v210 = 1170889628 * v196 - 1275405013;
  v211 = (2 * (v210 & 0x4C0522D4)) & STACK[0x11E4] ^ v210 & 0x4C0522D4 ^ ((2 * (v210 & 0x4C0522D4)) | 2) & (v210 ^ 0xF61E1055);
  v212 = (2 * (v210 ^ 0xF61E1055)) & 0xBA1B3280 ^ 0x8A091280 ^ ((2 * (v210 ^ 0xF61E1055)) ^ 0x74366500) & (v210 ^ 0xF61E1055);
  v213 = (4 * v211) & 0xBA1B3280 ^ v211 ^ ((4 * v211) | 4) & v212;
  v214 = (4 * v212) & 0xBA1B3280 ^ 0x12133080 ^ ((4 * v212) ^ 0xE86CCA00) & v212;
  v215 = v213 ^ 0xBA1B3281 ^ (16 * v213) & 0xBA1B3280 ^ ((16 * v213) ^ 0x10) & v214;
  v216 = (16 * v214) & 0xBA1B3280 ^ 0x1A081280 ^ ((16 * v214) ^ 0xA1B32800) & v214;
  v217 = (v215 << 8) & 0xBA1B3200 ^ v215 ^ ((v215 << 8) ^ 0x1B328000) & v216;
  v218 = v210 ^ (2
               * ((v217 << 16) & 0x3A1B0000 ^ v217 ^ ((v217 << 16) ^ 0x32800000) & ((v216 << 8) & 0x3A1B0000 ^ 0x20090000 ^ ((v216 << 8) ^ 0x1B320000) & v216)));
  v219 = (v218 ^ 0x16C00022) & ((v207 >> 30) ^ 0x76C002F3) | v218 & 0x893FFD0C;
  v220 = ((v219 ^ 0x553FBA68) + 1740722378) ^ ((v219 ^ 0x262E4726) + 349220232) ^ ((v219 ^ 0xDC6BAB9) + 1060655129);
  v221 = -186909103 - v220 - v22 - 1357333493;
  v222 = v221 + 450232320 * v194 + ((1217924459 * v194) >> 15) + 2142270424 - v208;
  v223 = ((2 * (v222 & 0xF5116211)) & 0x208400 | v222 & 0xF5116211) ^ (2 * (v222 & 0xF5116211)) & (v222 ^ 0xE1E9C70D);
  v224 = ((2 * (v222 ^ 0xE1E9C70D)) ^ 0x29F14A38) & (v222 ^ 0xE1E9C70D) ^ (2 * (v222 ^ 0xE1E9C70D)) & 0x14F8A51C;
  v225 = v224 ^ 0x1408A504;
  v226 = (v224 ^ 0xC02508) & (4 * v223) ^ v223;
  v227 = ((4 * v225) ^ 0x53E29470) & v225 ^ (4 * v225) & 0x14F8A51C;
  v228 = (v227 ^ 0x10E0841C) & (16 * v226) ^ v226;
  v229 = ((16 * (v227 ^ LODWORD(STACK[0x11E8]))) ^ 0x4F8A51C0) & (v227 ^ LODWORD(STACK[0x11E8])) ^ (16
                                                                                                  * (v227 ^ LODWORD(STACK[0x11E8]))) & 0x14F8A510;
  v230 = v228 ^ 0x14F8A51C ^ (v229 ^ 0x488011C) & (v228 << 8);
  v231 = v222 ^ (2
               * ((v230 << 16) & 0x14F80000 ^ v230 ^ ((v230 << 16) ^ 0x251C0000) & (((v229 ^ 0x1070A41C) << 8) & 0x14F80000 ^ 0x4580000 ^ (((v229 ^ 0x1070A41C) << 8) ^ 0xF8A50000) & (v229 ^ 0x1070A41C))));
  v232 = 1191231745 * (v221 + v208) + 1722225435;
  v233 = (v232 ^ 0xCF1A3991) & (2 * (v232 & 0xCE5339D2)) ^ v232 & 0xCE5339D2;
  v234 = ((2 * (v232 ^ 0x539A4A11)) ^ 0x3B92E786) & (v232 ^ 0x539A4A11) ^ (2 * (v232 ^ 0x539A4A11)) & 0x9DC973C2;
  v235 = v234 ^ 0x84491041;
  v236 = (v234 ^ 0x9D807381) & (4 * v233) ^ v233;
  v237 = ((4 * v235) ^ 0x7725CF0C) & v235 ^ (4 * v235) & 0x9DC973C0;
  v238 = (v237 ^ 0x15014300) & (16 * v236) ^ v236;
  v239 = ((16 * (v237 ^ 0x88C830C3)) ^ 0xDC973C30) & (v237 ^ 0x88C830C3) ^ (16 * (v237 ^ 0x88C830C3)) & 0x9DC973C0;
  v240 = v238 ^ 0x9DC973C3 ^ (v239 ^ 0x9C813000) & (v238 << 8);
  v241 = (v240 << 16) & 0x1DC90000 ^ v240 ^ ((v240 << 16) ^ 0x73C30000) & (((v239 ^ LODWORD(STACK[0x11EC])) << 8) & 0x1DC90000 ^ 0x14880000 ^ (((v239 ^ LODWORD(STACK[0x11EC])) << 8) ^ LODWORD(STACK[0x11F0])) & (v239 ^ LODWORD(STACK[0x11EC])));
  v242 = v231 & 0x8000;
  v243 = v231 ^ v232 ^ (2 * v241);
  v244 = v220
       - (((v243 ^ 0xB3FD9533) - 2118551534) ^ ((v243 ^ 0x27ABEA56) + 367986549) ^ ((v243 ^ 0xB4DD4783) - 2036749662))
       + 632729854;
  v245 = (v244 ^ 0x8CCF777A) & (2 * (v244 & 0xA0EF7770)) ^ v244 & 0xA0EF7770;
  v246 = ((2 * (v244 ^ 0x8C1DFFFA)) ^ 0x59E51114) & (v244 ^ 0x8C1DFFFA) ^ (2 * (v244 ^ 0x8C1DFFFA)) & 0x2CF2888A;
  v247 = v246 ^ 0x2412888A;
  v248 = (v246 ^ 0x20E0000A) & (4 * v245) ^ v245;
  v249 = ((4 * v247) ^ 0xB3CA2228) & v247 ^ (4 * v247) & 0x2CF28888;
  v250 = (v249 ^ 0x20C20002) & (16 * v248) ^ v248;
  v251 = ((16 * (v249 ^ 0xC308882)) ^ 0xCF2888A0) & (v249 ^ 0xC308882) ^ (16 * (v249 ^ 0xC308882)) & 0x2CF28880;
  v252 = v250 ^ 0x2CF2888A ^ (v251 ^ 0xC20880A) & (v250 << 8);
  v253 = v244 ^ (2
               * ((v252 << 16) & 0x2CF20000 ^ v252 ^ ((v252 << 16) ^ 0x88A0000) & (((v251 ^ 0x20D2000A) << 8) & 0x2CF20000 ^ 0xC720000 ^ (((v251 ^ 0x20D2000A) << 8) ^ 0x72880000) & (v251 ^ 0x20D2000A))));
  LODWORD(v22) = v22
               - (((v243 ^ 0x1349FE43) + 554505058) ^ ((v243 ^ 0x13208570) + 560228435) ^ ((v243 ^ 0x20E243D5)
                                                                                         + 312913656))
               + 1333162487;
  v254 = 2 * (v22 & 0xEE43E0DF);
  v255 = v254 & (v22 ^ LODWORD(STACK[0x11F4])) ^ v22 & 0xEE43E0DF;
  v256 = ((2 * (v22 ^ 0xE5870B8B)) ^ 0x1789D6A8) & (v22 ^ 0xE5870B8B) ^ (2 * (v22 ^ 0xE5870B8B)) & 0xBC4EB54;
  v257 = v256 ^ (v19 + 2131);
  v258 = (v256 ^ 0x3008200) & (4 * v255) ^ v255;
  v259 = ((4 * v257) ^ 0x2F13AD50) & v257 ^ (4 * v257) & 0xBC4EB54;
  v260 = (v259 ^ 0xB00A954) & (16 * v258) ^ v258;
  v261 = ((16 * (v259 ^ (v12 + 4))) ^ 0xBC4EB540) & (v259 ^ (v12 + 4)) ^ (16 * (v259 ^ (v12 + 4))) & 0xBC4EB50;
  v262 = v260 ^ 0xBC4EB54 ^ (v261 ^ (v13 + 243)) & (v260 << 8);
  v263 = (v22 ^ (2
               * ((v262 << 16) & 0x1840000 ^ v262 ^ ((v262 << 16) ^ 0x21040000) & (((v261 ^ 0x3804A14) << 8) & 0xBC40000 ^ 0x1040000 ^ (((v261 ^ 0x3804A14) << 8) ^ 0x44EB0000) & (v261 ^ 0x3804A14))))) & 0x631E23CE ^ 0x2106234A;
  v264 = (((2 * v263) & 0x86140514) - v263 - 1133234860) ^ 0x9C654796;
  v265 = v264 - ((2 * v264) & 0x68782974) - 1271130949;
  v266 = v243 & 0x70F17272 ^ 0x30E12202 ^ (v243 ^ 0x20813062) & (v242 | 0x70F17272);
  HIDWORD(v50) = v265 ^ 0xBB44;
  LODWORD(v50) = v265 ^ 0x4AC80000;
  v267 = v254 & (v22 ^ 0xED6BFA9E) ^ v22 & 0xEE43E0DF;
  v268 = ((2 * (v22 ^ 0x2DEFBA36)) ^ 0x8758B5D2) & (v22 ^ 0x2DEFBA36) ^ (2 * (v22 ^ 0x2DEFBA36)) & 0xC3AC5AE8;
  v269 = (v268 ^ 0x830800C0) & (4 * v267) ^ v267;
  v270 = ((4 * (v268 ^ 0x40A44A29)) ^ 0xEB16BA4) & (v268 ^ 0x40A44A29) ^ (4 * (v268 ^ 0x40A44A29)) & 0xC3AC5AE8;
  v271 = (v270 ^ 0x2A04AA0) & (16 * v269) ^ v269;
  v272 = ((16 * (v270 ^ 0xC10C1049)) ^ 0x3AC5AE90) & (v270 ^ 0xC10C1049) ^ (16 * (v270 ^ 0xC10C1049)) & 0xC3AC5AE0;
  v273 = v271 ^ 0xC3AC5AE9 ^ (v272 ^ 0x2840A69) & (v271 << 8);
  LODWORD(v22) = (v22 ^ (2
                       * ((v273 << 16) & 0x42200000 ^ v273 ^ ((v273 << 16) ^ 0x4A600000) & (((v272 ^ 0xC1285069) << 8) & 0xC3AC0000 ^ 0x42200000 ^ (((v272 ^ 0xC1285069) << 8) ^ 0xAC5A0000) & (v272 ^ 0xC1285069))))) & 0x9CE1DC31 ^ 0x9C605411;
  LODWORD(v22) = (-588923128 - v22 + ((2 * v22) & 0x3802) + 618) ^ 0x306DD179;
  v274 = ((2 * v22) | 0x711563BC) - v22 - 948613598;
  v275 = ((v231 & 0xEF802AE ^ 0xA280021) + (v231 & 0xF1077D51) - 1) ^ LODWORD(STACK[0x11F8]);
  v276 = ((2 * v275) & 0x130E5452) - v275 - 159853098;
  HIDWORD(v50) = (v50 >> 17) ^ 0x2BAE28EA;
  LODWORD(v50) = HIDWORD(v50);
  v277 = ((v50 >> 15) - ((2 * (v50 >> 15)) & 0xB22489C2) + 1494369505) ^ v274;
  LODWORD(STACK[0x69F0]) = v277;
  v278 = v277 ^ 0x50046E49;
  if (((2 * v266) | 0xCBAE5F98) - v266 == LODWORD(STACK[0x11FC]))
    v279 = 0;
  else
    v279 = -2 * v242;
  v280 = v242
       + (((v243 ^ 0xF47D75DC) - 969303809) ^ ((v243 ^ 0x2ED02AF5) + 479512536) ^ ((v243 ^ 0xFA2667CF) - 933066002))
       + 699817252
       + v279;
  v281 = (v280 ^ 0x83718C57) & (2 * (v280 & 0xC379CD17)) ^ v280 & 0xC379CD17;
  v282 = ((2 * (v280 ^ 0x3C09C71)) ^ 0x8172A2CC) & (v280 ^ 0x3C09C71) ^ (2 * (v280 ^ 0x3C09C71)) & 0xC0B95166;
  v283 = v282 ^ 0x40895122;
  v284 = (v282 ^ 0x40200146) & (4 * v281) ^ v281;
  v285 = ((4 * v283) ^ 0x2E54598) & v283 ^ (4 * v283) & 0xC0B95164;
  v286 = (v285 ^ 0xA14106) & (16 * v284) ^ v284;
  v287 = ((16 * (v285 ^ 0xC0181066)) ^ 0xB951660) & (v285 ^ 0xC0181066) ^ (16 * (v285 ^ 0xC0181066)) & 0xC0B95160;
  v288 = v286 ^ 0xC0B95166 ^ (v287 ^ 0x911006) & (v286 << 8);
  v289 = -1793057357
       * (((v253 ^ 0x3D7152F6) - 422479371) ^ ((v253 ^ 0xE791DE7F) + 1009907070) ^ ((v253 ^ 0x32EEEAED) - 380714512))
       - 1563834643;
  v290 = (v289 ^ 0xD3B06ECC) & (2 * (v289 & 0xDBB16F0E)) ^ v289 & 0xDBB16F0E;
  v291 = ((2 * (v289 ^ 0x65F078C4)) ^ 0x7C822F94) & (v289 ^ 0x65F078C4) ^ (2 * (v289 ^ 0x65F078C4)) & 0xBE4117CA;
  v292 = v291 ^ 0x8241104A;
  v293 = (v291 ^ 0x3C000402) & (4 * v290) ^ v290;
  v294 = ((4 * v292) ^ 0xF9045F28) & v292 ^ (4 * v292) & 0xBE4117C8;
  v295 = (v294 ^ 0xB8001700) & (16 * v293) ^ v293;
  v296 = ((16 * (v294 ^ 0x64100C2)) ^ 0xE4117CA0) & (v294 ^ 0x64100C2) ^ (16 * (v294 ^ 0x64100C2)) & 0xBE4117C0;
  v297 = v295 ^ 0xBE4117CA ^ (v296 ^ 0xA401144A) & (v295 << 8);
  v298 = v289 ^ (2
               * ((v297 << 16) & 0x3E410000 ^ v297 ^ ((v297 << 16) ^ 0x17CA0000) & (((v296 ^ 0x1A40034A) << 8) & 0x3E410000 ^ 0x3E400000 ^ (((v296 ^ 0x1A40034A) << 8) ^ 0x41170000) & (v296 ^ 0x1A40034A))));
  v299 = v280 ^ v276 ^ (2
                      * ((v288 << 16) & 0x40B90000 ^ v288 ^ ((v288 << 16) ^ 0x51660000) & (((v287 ^ LODWORD(STACK[0x1200])) << 8) & 0xC0B90000 ^ 0x40A80000 ^ (((v287 ^ LODWORD(STACK[0x1200])) << 8) ^ 0x39510000) & (v287 ^ LODWORD(STACK[0x1200])))));
  v300 = -471461811
       * (((v299 ^ 0x719B3272) + 341656919) ^ ((v299 ^ 0xA60EFF4B) - 1010268048) ^ ((v299 ^ 0xC2A74D30) - 1486800363))
       + 1377654957;
  v301 = (v300 ^ 0xE66C6D78) & (2 * (v300 & 0x876D6E7D)) ^ v300 & 0x876D6E7D;
  v302 = ((2 * (v300 ^ 0xE06C658A)) ^ 0xCE0217EE) & (v300 ^ 0xE06C658A) ^ (2 * (v300 ^ 0xE06C658A)) & 0x67010BF6;
  v303 = v302 ^ LODWORD(STACK[0x1204]);
  v304 = (v302 ^ 0x60003E5) & (4 * v301) ^ v301;
  v305 = ((4 * v303) ^ 0x9C042FDC) & v303 ^ (4 * v303) & 0x67010BF4;
  v306 = (v305 ^ 0x4000BD3) & (16 * v304) ^ v304;
  v307 = ((16 * (v305 ^ 0x63010023)) ^ 0x7010BF70) & (v305 ^ 0x63010023) ^ (16 * (v305 ^ 0x63010023)) & 0x67010BF0;
  v308 = v306 ^ 0x67010BF7 ^ (v307 ^ 0x60000B87) & (v306 << 8);
  v309 = v300 ^ (2
               * ((v308 << 16) & 0x67000000 ^ v308 ^ ((v308 << 16) ^ 0xB800000) & (((v307 ^ 0x7010087) << 8) & 0x67010000 ^ (((v307 ^ 0x7010087) << 8) ^ 0x10B0000) & (v307 ^ 0x7010087) ^ 0x66666666)));
  v310 = v298 >> 7;
  v311 = (v253 ^ LODWORD(STACK[0x1208])) - 109692136;
  LODWORD(STACK[0x6A90]) = v253;
  v312 = v20 + 1711276032 * (v311 ^ ((v253 ^ 0xE4369FEE) + 1066841325) ^ ((v253 ^ 0x2EEEE99F) - 179387746));
  v313 = (v312 ^ 0xEFB72F73) & (2 * (v312 & STACK[0x120C])) ^ (v312 & STACK[0x120C] | 0xD2420A8) ^ (((((v312 & STACK[0x120C]) >> 25) & 1) << 26) | 0xC140);
  v314 = (2 * (v312 ^ 0xEFB72F73)) & 0xC000000 ^ ((2 * (v312 ^ 0xEFB72F73)) ^ 0x1A490210) & (v312 ^ 0xEFB72F73) ^ 0x4000000;
  v315 = (4 * v313) & 0xC0081A8 ^ v313 ^ ((4 * v313) ^ 0x349387A0) & v314;
  v316 = (4 * v314) & 0xD24E1E8 ^ 0x9246048 ^ ((4 * v314) ^ 0x349387A0) & v314;
  v317 = (16 * v315) & 0xD24E1E0 ^ v315 ^ ((16 * v315) ^ 0x92460480) & v316;
  v318 = (16 * v316) & 0xD24E1E0 ^ 0xD20E168 ^ ((16 * v316) ^ 0xD24E1E80) & v316;
  v319 = v317 ^ (v317 << 8) & 0xD24E100 ^ ((v317 << 8) ^ LODWORD(STACK[0x1210])) & v318 ^ 0x4244120;
  v320 = (v319 << 16) & 0xD240000 ^ v319 ^ ((v319 << 16) ^ 0x61E80000) & ((v318 << 8) & 0xD240000 ^ 0x9040000 ^ ((v318 << 8) ^ 0x24E10000) & v318);
  v321 = 1416700211
       * (((v243 ^ 0x1F8F3249) + 768335724) ^ ((v243 ^ 0x3E83D4B1) + 214382996) ^ ((v243 ^ 0x187DE1E) + 868430653))
       - 810209223;
  v322 = (v321 ^ 0x275F964A) & (2 * (v321 & 0xA65FD488)) ^ v321 & 0xA65FD488;
  v323 = ((2 * (v321 ^ 0x27C0B64A)) ^ 0x33EC584) & (v321 ^ 0x27C0B64A) ^ (2 * (v321 ^ 0x27C0B64A)) & 0x819F62C2;
  v324 = v323 ^ LODWORD(STACK[0x1218]);
  v325 = (v323 ^ 0x11E4000) & (4 * v322) ^ v322;
  v326 = ((4 * v324) ^ 0x67D8B08) & v324 ^ (4 * v324) & 0x819F62C0;
  v327 = (v326 ^ 0x1D0202) & (16 * v325) ^ v325;
  v328 = ((16 * (v326 ^ LODWORD(STACK[0x1214]))) ^ 0x19F62C20) & (v326 ^ LODWORD(STACK[0x1214])) ^ (16
                                                                                                  * (v326 ^ LODWORD(STACK[0x1214]))) & 0x819F62C0;
  v329 = v327 ^ 0x819F62C2 ^ (v328 ^ 0x1962000) & (v327 << 8);
  v330 = v321 ^ (2
               * ((v329 << 16) & 0x19F0000 ^ v329 ^ ((v329 << 16) ^ 0x62C20000) & (((v328 ^ 0x800942C2) << 8) & 0x819F0000 ^ 0x9D0000 ^ (((v328 ^ 0x800942C2) << 8) ^ 0x9F620000) & (v328 ^ 0x800942C2))));
  v331 = -265556435
       - 435139328
       * (((v299 ^ 0x6FE1A483) + 170382248) ^ ((v299 ^ 0x30DCE3EF) + 1427805388) ^ ((v299 ^ 0x4A0FC765) + 801747010));
  v332 = ((2 * (v331 & 0x9A9B3B00)) | 2) & (v331 ^ 0x7A5E2E36) ^ v331 & 0x9A9B3B00 ^ ((2 * (v331 & 0x9A9B3B00)) & 0x20041400 | 0xC00001C0);
  v333 = (2 * (v331 ^ 0x7A5E2E36)) & 0xE0C51400 ^ 0x20451401 ^ ((2 * (v331 ^ 0x7A5E2E36)) ^ 0xC18A2B0A) & (v331 ^ 0x7A5E2E36);
  v334 = (4 * v332) & 0xE0C515E4 ^ v332 ^ ((4 * v332) ^ 0x700) & v333;
  v335 = (4 * v333) & 0xE0C515E4 ^ 0x60C10061 ^ ((4 * v333) ^ 0x83145710) & v333;
  v336 = (16 * v334) & 0xE0C515E0 ^ v334 ^ ((16 * v334) ^ 0x4C50) & v335;
  v337 = (16 * v335) & 0xE0C515E0 ^ 0xE08401A5 ^ ((16 * v335) ^ 0xC515E50) & v335;
  v338 = v336 ^ (v336 << 8) & 0xE0C51500 ^ ((v336 << 8) ^ 0x8500) & v337 ^ 0x20C51060;
  v339 = (v338 << 16) & 0x60C50000 ^ v338 ^ ((v338 << 16) ^ 0x15E50000) & ((v337 << 8) & 0x60C50000 ^ 0x20C00000 ^ ((v337 << 8) ^ 0x45150000) & v337);
  v340 = v310 & STACK[0x121C] ^ 0x1200C000 ^ (v312 ^ (2 * v320) ^ 0x1E1E32D5) & (v310 ^ 0xFEE8997E);
  v341 = ((v340 | 0x48A35ADB) - (v340 | 0xB75CA524) - 1218665180) ^ 0xBF34E544;
  v342 = STACK[0x1220];
  LODWORD(STACK[0x69C0]) = v278;
  LODWORD(STACK[0x6A50]) = v243;
  v343 = -1719664640
       * (((v243 ^ 0x63BA13C3) + 1375665890) ^ ((v243 ^ 0x6681AFB8) + 1422213787) ^ ((v243 ^ 0x25B0849D) + 401893824))
       - 1003318154;
  v344 = (2 * (v343 & 0x9C000002)) & (v343 ^ 0xF59870DE) ^ v343 & 0x9C000002 ^ ((2 * (v343 & 0x9C000002)) & 0x28000004 | 0x1801200);
  v345 = (2 * (v343 ^ 0xF59870DE)) & 0x69000000 ^ 0x28000004 ^ ((2 * (v343 ^ 0xF59870DE)) ^ 0xD3AA24A8) & (v343 ^ 0xF59870DE);
  v346 = (4 * v344) & 0x69D51B50 ^ v344 ^ ((4 * v344) ^ 0x6004800) & v345;
  v347 = (4 * v345) & 0x69D51B54 ^ LODWORD(STACK[0x1224]) ^ ((4 * v345) ^ 0xA7546D50) & v345;
  v348 = (16 * v346) & 0x69D51B50 ^ v346 ^ ((16 * v346) ^ 0x1801A000) & v347;
  v349 = (16 * v347) & 0x69D51B50 ^ 0x60840A14 ^ ((16 * v347) ^ 0x9D51B540) & v347;
  v350 = v348 ^ (v348 << 8) & 0x69D51B00 ^ ((v348 << 8) ^ 0x811A0000) & v349 ^ 0x61440154;
  v351 = v343 ^ (2
               * ((v350 << 16) & 0x69D50000 ^ v350 ^ ((v350 << 16) ^ 0x1B540000) & ((v349 << 8) & 0x69D50000 ^ 0x28C40000 ^ ((v349 << 8) ^ 0xD51B0000) & v349)));
  v352 = v351 & 0x6E4DD95C ^ 0x410945 ^ (v351 ^ 0x80B0A2DD) & ((v330 >> 9) ^ 0x91E0142A);
  v353 = (v278 * v342) & 0xFFFFFFFE | ((121848937 * v278) >> 31);
  v354 = HIBYTE(v309) & 0xE4 ^ 0x2481E084 ^ (v331 ^ 0x498D0002 ^ (2 * v339)) & (HIBYTE(v309) ^ 0xFFFFFFB0);
  v355 = ((v354 | 0x9305D2D7) - (v354 | 0x6CFA2D28) + 1828334888) ^ 0xA492220C;
  v356 = (1718736655 * v355) >> 14;
  v357 = (((((v352 - ((2 * v352) & 0x719E6E62) + 953104177) ^ 0x5F51E02F) + 1033870540) ^ (((v352
                                                                                           - ((2 * v352) & 0x719E6E62)
                                                                                           + 953104177) ^ 0x784A1836)
                                                                                         + 444884179) ^ (((v352 - ((2 * v352) & 0x719E6E62) + 953104177) ^ 0xC26AB9CF) - 1599814356))
        + 2017510093
        + v341) ^ v353 ^ v355;
  HIDWORD(v359) = 3 * v357;
  LODWORD(v359) = -413613645 * v357;
  v358 = v359 >> 3;
  v360 = v358 ^ ((1159842816 * v341) | ((-489600909 * v341) >> 22));
  v361 = (-244056064 * v353) | ((-1040991139 * v353) >> 14);
  v362 = (1547436032 * v355) | v356;
  v363 = v362 * LODWORD(STACK[0x1228]);
  v364 = (-1693351936 * v361) | ((33764899 * v361) >> 17);
  v365 = -335544320 * v358 + ((-484051653 * v358) >> 6);
  v366 = (-1269096448 * (v360 + v361 - v362)) | ((-93478183 * (v360 + v361 - v362)) >> 19);
  v367 = (v363 >> 2) - (v356 << 30);
  v368 = v364 + v367 - v365 + v366;
  v369 = (-686390937 * v368) >> 28;
  v370 = 1902646896 * v368 - 577566720;
  v371 = (v370 ^ 0x9B48FCA2) & (2 * (v370 & 0x226CF800)) ^ v370 & 0x226CF800;
  v372 = ((2 * (v370 ^ 0x9BD81CA2)) ^ 0x7369C940) & (v370 ^ 0x9BD81CA2) ^ (2 * (v370 ^ 0x9BD81CA2)) & 0xB9B4E4A0;
  v373 = v372 ^ 0x889424A2;
  v374 = (v372 ^ 0x1120C000) & (4 * v371) ^ v371;
  v375 = ((4 * v373) ^ 0xE6D39288) & v373 ^ (4 * v373) & 0xB9B4E4A0;
  v376 = (v375 ^ 0xA0908080) & (16 * v374) ^ v374;
  v377 = ((16 * (v375 ^ 0x19246422)) ^ 0x9B4E4A20) & (v375 ^ 0x19246422) ^ (16 * (v375 ^ 0x19246422)) & 0xB9B4E4A0;
  v378 = v376 ^ 0xB9B4E4A2 ^ (v377 ^ 0x99044082) & (v376 << 8);
  v379 = ((1692688513 * v366) >> 18)
       + 404766720 * v366
       - 2 * ((((1692688513 * v366) >> 18) + 404766720 * v366) & 0x74BBEC9F ^ ((1692688513 * v366) >> 18) & 0xA)
       - 189010795;
  v380 = (1632913062 * v365) | ((-1331027117 * v365) >> 31);
  v381 = ((-1162876992 * v367) | ((2129313695 * v367) >> 26)) + v380;
  v382 = v380 + (v379 ^ 0xB44136A);
  v383 = ((v370 ^ (2
                 * ((v378 << 16) & 0x39B40000 ^ v378 ^ ((v378 << 16) ^ 0x64A20000) & (((v377 ^ 0x20B0A482) << 8) & 0x39B40000 ^ 0x9100000 ^ (((v377 ^ 0x20B0A482) << 8) ^ 0x34E40000) & (v377 ^ 0x20B0A482)))) ^ 0x4BB4FEF0) & ~v369 | v369 & 0xFFFFFFFB) ^ 0xA00C2041;
  v384 = v383 - 1759427036 - ((2 * v383) & 0x2E429026) + 495;
  v385 = v384 ^ 0x928E0C79;
  v386 = v379 ^ v381 ^ v384 ^ 0x928E0C79;
  v387 = 452801455 * v382 + 1260940096;
  v388 = (v387 ^ 0x25C8F80E) & (2 * (v387 & 0xA1E8FAAC)) ^ v387 & 0xA1E8FAAC;
  v389 = ((2 * (v387 ^ 0x26982806)) ^ 0xEE1A554) & (v387 ^ 0x26982806) ^ (2 * (v387 ^ 0x26982806)) & 0x8770D2AA;
  v390 = v389 ^ LODWORD(STACK[0x122C]);
  v391 = (v389 ^ 0x670800A) & (4 * v388) ^ v388;
  v392 = ((4 * v390) ^ 0x1DC34AA8) & v390 ^ (4 * v390) & 0x8770D2A8;
  v393 = (v392 ^ 0x54042A0) & (16 * v391) ^ v391;
  v394 = ((16 * (v392 ^ LODWORD(STACK[0x1230]))) ^ 0x770D2AA0) & (v392 ^ LODWORD(STACK[0x1230])) ^ (16
                                                                                                  * (v392 ^ LODWORD(STACK[0x1230]))) & 0x8770D2A0;
  v395 = v393 ^ 0x8770D2AA ^ (v394 ^ 0x700020A) & (v393 << 8);
  v396 = v387 ^ (2
               * ((v395 << 16) & 0x7700000 ^ v395 ^ ((v395 << 16) ^ 0x52AA0000) & (((v394 ^ 0x8070D00A) << 8) & 0x7700000 ^ 0x7200000 ^ (((v394 ^ 0x8070D00A) << 8) ^ 0x70D20000) & (v394 ^ 0x8070D00A))));
  v397 = (((2 * ((v396 ^ 0x2B495FF8) & (v384 ^ 0x7FAD5B7A) ^ v396 & 0x1371FC9C)) ^ 0x682B930)
        + (v384 ^ 0xC795F81E ^ v396)) ^ v386;
  LODWORD(STACK[0x69B0]) = v397;
  v398 = (((v397 ^ 0xB4E7CB7F) + 1352902304) ^ ((v397 ^ 0x66BC2CF5) - 2097659626) ^ ((v397 ^ 0xD8B2A080) + 1022807393))
       + 1358700901;
  v399 = (v398 ^ 0xF30AE828) & (2 * (v398 & 0xF812882D)) ^ v398 & 0xF812882D;
  v400 = ((2 * (v398 ^ 0x332EE838)) ^ 0x9678C02A) & (v398 ^ 0x332EE838) ^ (2 * (v398 ^ 0x332EE838)) & 0xCB3C6014;
  v401 = v400 ^ 0x49042015;
  v402 = (v400 ^ 0x80184000) & (4 * v399) ^ v399;
  v403 = ((4 * v401) ^ 0x2CF18054) & v401 ^ (4 * v401) & 0xCB3C6014;
  v404 = v402 ^ 0xCB3C6015 ^ (v403 ^ 0x8300011) & (16 * v402);
  v405 = (16 * (v403 ^ 0xC30C6001)) & 0xCB3C6010 ^ LODWORD(STACK[0x1238]) ^ ((16 * (v403 ^ 0xC30C6001)) ^ LODWORD(STACK[0x1234])) & (v403 ^ 0xC30C6001);
  v406 = (v404 << 8) & 0xCB3C6000 ^ v404 ^ ((v404 << 8) ^ 0x3C601500) & v405;
  v407 = v398 ^ (2
               * ((v406 << 16) & 0x4B3C0000 ^ v406 ^ ((v406 << 16) ^ 0x60150000) & ((v405 << 8) & 0xCB3C0000 ^ 0x431C0000 ^ ((v405 << 8) ^ 0x3C600000) & v405)));
  v408 = v386 & 0xAFFFF2D1 ^ 0x242A20C1 ^ (v407 ^ 0x51FDBAD6) & (v386 ^ 0xAE9470A);
  v409 = (((v379 ^ 0xF530393D) + 181388995) ^ ((v379 ^ LODWORD(STACK[0x123C])) - 899447138) ^ ((v379 ^ 0x3417ACCA)
                                                                                             - 873966794))
       - (((v407 ^ LODWORD(STACK[0x1240])) - 1721640292) ^ ((v407 ^ 0xFC3E3224) + 1729773259) ^ ((v407 ^ 0x79AC56)
                                                                                               - 1688362823))
       - 1120767119;
  v410 = ((2 * (v409 ^ 0xF1932E70)) ^ 0xDA7920FC) & (v409 ^ 0xF1932E70) ^ (2 * (v409 ^ 0xF1932E70)) & 0x6D3C907E;
  v411 = v410 ^ 0x25049002;
  v412 = (v410 ^ LODWORD(STACK[0x1248])) & (4
                                          * ((v409 ^ 0xD88F3E6C) & (2 * (v409 & STACK[0x1244])) ^ v409 & STACK[0x1244])) ^ (v409 ^ 0xD88F3E6C) & (2 * (v409 & STACK[0x1244])) ^ v409 & STACK[0x1244];
  v413 = ((4 * v411) ^ 0xB4F241F8) & v411 ^ (4 * v411) & 0x6D3C907C;
  v414 = (v413 ^ 0x24300066) & (16 * v412) ^ v412;
  v415 = ((16 * (v413 ^ 0x490C9006)) ^ 0xD3C907E0) & (v413 ^ 0x490C9006) ^ (16 * (v413 ^ 0x490C9006)) & 0x6D3C9070;
  v416 = v414 ^ 0x6D3C907E ^ (v415 ^ 0x4108001E) & (v414 << 8);
  v417 = v409 ^ (2
               * ((v416 << 16) & 0x6D3C0000 ^ v416 ^ ((v416 << 16) ^ 0x107E0000) & (((v415 ^ 0x2C34901E) << 8) & 0x6D3C0000 ^ 0x412C0000 ^ (((v415 ^ 0x2C34901E) << 8) ^ 0x3C900000) & (v415 ^ 0x2C34901E))));
  v418 = v407 ^ 0x64DBF311 ^ v385;
  v419 = 2 * (((2 * v408) | 0x427F2830) - v408) + 1031854032;
  v420 = (((v407 ^ 0x64DBF311 ^ v386 ^ 0xFE1F86D7) - 157312487) ^ ((v407 ^ 0x64DBF311 ^ v386 ^ 0x5BF733B) + 222261237) ^ ((v407 ^ 0x64DBF311 ^ v386 ^ 0x6B9009F0) + 1661998400))
       + 2020763488
       + (((v419 ^ 0x82F23249) + 186158286) ^ ((v419 ^ 0xF5FA901C) + 2081435289) ^ ((v419 ^ 0xE8F14FE7) + 1629221220));
  v421 = (v420 ^ 0x96E55604) & (2 * (v420 & 0xD8C96495)) ^ v420 & 0xD8C96495;
  v422 = ((2 * (v420 ^ 0xA777D626)) ^ 0xFF7D6566) & (v420 ^ 0xA777D626) ^ (2 * (v420 ^ 0xA777D626)) & 0x7FBEB2B2;
  v423 = v422 ^ 0x829291;
  v424 = (v422 ^ 0x67AC2020) & (4 * v421) ^ v421;
  v425 = ((4 * v423) ^ 0xFEFACACC) & v423 ^ (4 * v423) & 0x7FBEB2B0;
  v426 = (v425 ^ 0x7EBA8280) & (16 * v424) ^ v424;
  v427 = ((16 * (v425 ^ 0x1043033)) ^ 0xFBEB2B30) & (v425 ^ 0x1043033) ^ (16 * (v425 ^ 0x1043033)) & 0x7FBEB2B0;
  v428 = v426 ^ 0x7FBEB2B3 ^ (v427 ^ 0x7BAA2200) & (v426 << 8);
  v429 = v420 ^ (2
               * ((v428 << 16) & 0x7FBE0000 ^ v428 ^ ((v428 << 16) ^ 0x32B30000) & (((v427 ^ 0x4149083) << 8) & 0x7FBE0000 ^ 0x410C0000 ^ (((v427 ^ 0x4149083) << 8) ^ 0xBEB20000) & (v427 ^ 0x4149083))));
  v430 = 727348507
       * (((v407 ^ 0x6215CCC7) - 114180054) ^ ((v407 ^ 0x491C0D4B) - 768081498) ^ ((v407 ^ 0xD50B898B) + 1311737190))
       - 1015768613;
  v431 = (v430 ^ 0xA33FAF76) & (2 * (v430 & 0x8BBF2F77)) ^ v430 & 0x8BBF2F77;
  v432 = ((2 * (v430 ^ 0xB21FFFF0)) ^ 0x7341A10E) & (v430 ^ 0xB21FFFF0) ^ (2 * (v430 ^ 0xB21FFFF0)) & 0x39A0D086;
  v433 = v432 ^ 0x8A05081;
  v434 = v431 ^ 0x39A0D087 ^ (v432 ^ 0x31008005) & (4 * v431);
  v435 = (4 * v433) & 0x39A0D084 ^ 0x19209083 ^ ((4 * v433) ^ 0xE683421C) & v433;
  v436 = (16 * v434) & 0x39A0D080 ^ v434 ^ ((16 * v434) ^ 0x9A0D0870) & v435;
  v437 = (16 * v435) & 0x39A0D080 ^ LODWORD(STACK[0x124C]) ^ ((16 * v435) ^ 0x9A0D0870) & v435;
  v438 = v436 ^ (v436 << 8) & 0x39A0D000 ^ ((v436 << 8) ^ 0xA0D08700) & v437 ^ 0x38808000;
  v439 = v430 ^ (2
               * ((v438 << 16) & 0x39A00000 ^ v438 ^ ((v438 << 16) ^ 0x50870000) & ((v437 << 8) & 0x39A00000 ^ 0x19200000 ^ ((v437 << 8) ^ 0x20D00000) & v437)));
  v440 = 603556713
       * (((v418 ^ 0xFBF782CB) + 67665205) ^ ((v418 ^ 0x515F58BB) - 1365203131) ^ ((v418 ^ 0xCE23CAF9) + 836515079))
       - 1045777728;
  v441 = (v440 ^ 0xAD987970) & (2 * (v440 & 0xCD9A7871)) ^ v440 & 0xCD9A7871;
  v442 = ((2 * (v440 ^ 0x3DB81932)) ^ 0xE044C286) & (v440 ^ 0x3DB81932) ^ (2 * (v440 ^ 0x3DB81932)) & 0xF0226142;
  v443 = v442 ^ 0x10222141;
  v444 = (v442 ^ 0x60004001) & (4 * v441) ^ v441;
  v445 = ((4 * v443) ^ 0xC089850C) & v443 ^ (4 * v443) & 0xF0226140;
  v446 = (v445 ^ 0xC0000103) & (16 * v444) ^ v444;
  v447 = ((16 * (v445 ^ 0x30226043)) ^ 0x2261430) & (v445 ^ 0x30226043) ^ (16 * (v445 ^ 0x30226043)) & 0xF0226140;
  v448 = v446 ^ 0xF0226143 ^ (v447 ^ 0x220043) & (v446 << 8);
  v449 = v440 ^ (2
               * ((v448 << 16) & 0x70220000 ^ v448 ^ ((v448 << 16) ^ 0x61430000) & (((v447 ^ 0xF0006143) << 8) & 0x70220000 ^ 0x50020000 ^ (((v447 ^ 0xF0006143) << 8) ^ 0x22610000) & (v447 ^ 0xF0006143))));
  v450 = 1942119947
       * (((v429 ^ 0x835FDB36) - 1125374054) ^ ((v429 ^ 0xE21AD7B) + 831672789) ^ ((v429 ^ 0xCFAE77BE) - 266499310))
       + 70646207;
  v451 = (v450 ^ 0xF09CC451) & (2 * (v450 & 0xFA111542)) ^ v450 & 0xFA111542;
  v452 = ((2 * (v450 ^ LODWORD(STACK[0x1250]))) ^ 0x751BB726) & (v450 ^ LODWORD(STACK[0x1250])) ^ (2
                                                                                                 * (v450 ^ LODWORD(STACK[0x1250]))) & 0x3A8DDB92;
  v453 = v452 ^ LODWORD(STACK[0x1254]);
  v454 = (v452 ^ 0x30089300) & (4 * v451) ^ v451;
  v455 = ((4 * v453) ^ 0xEA376E4C) & v453 ^ (4 * v453) & 0x3A8DDB90;
  v456 = (v455 ^ 0x2A054A13) & (16 * v454) ^ v454;
  v457 = ((16 * (v455 ^ 0x10889193)) ^ 0xA8DDB930) & (v455 ^ 0x10889193) ^ (16 * (v455 ^ 0x10889193)) & 0x3A8DDB90;
  v458 = ((v456 ^ 0x3A8DDB93 ^ (v457 ^ 0x288D9983) & (v456 << 8)) << 16) & 0x3A8D0000 ^ v456 ^ 0x3A8DDB93 ^ (v457 ^ 0x288D9983) & (v456 << 8) ^ (((v456 ^ 0x3A8DDB93 ^ (v457 ^ 0x288D9983) & (v456 << 8)) << 16) ^ 0x5B930000) & (((v457 ^ 0x12004283) << 8) & 0x3A8D0000 ^ 0x32040000 ^ (((v457 ^ 0x12004283) << 8) ^ 0xDDB0000) & (v457 ^ 0x12004283));
  v459 = -365559808
       * (((v407 ^ 0xF40FD74C) + 1865145251) ^ ((v407 ^ 0x98555414) + 57759995) ^ ((v407 ^ 0x9258CB5F) + 159172530))
       - 14010660;
  v460 = (2 * (v459 & 0x93780000)) & 0x4E00000 ^ v459 & 0x93780000 ^ ((2 * (v459 & 0x93780000)) | 8) & (v459 ^ 0x46984DE1);
  v461 = (2 * (v459 ^ 0x46984DE1)) & 0xD5E00000 ^ 0x54200005 ^ ((2 * (v459 ^ 0x46984DE1)) ^ 0xABC20908) & (v459 ^ 0x46984DE1);
  v462 = (4 * v460) & 0xD5E184C4 ^ v460 ^ ((4 * v460) | 0x10) & v461;
  v463 = (4 * v461) & 0xD5E184C4 ^ LODWORD(STACK[0x1258]) ^ ((4 * v461) ^ 0x57861314) & v461;
  v464 = (16 * v462) & 0xD5E184C0 ^ v462 ^ ((16 * v462) ^ 0x40) & v463;
  v465 = (16 * v463) & 0xD5E184C0 ^ 0x81E18085 ^ ((16 * v463) ^ 0x5E184C50) & v463;
  v466 = v464 ^ 0xD5E18081 ^ (v464 << 8) & 0xD5E18400 ^ ((v464 << 8) ^ 0x4400) & v465;
  v467 = (v439 >> 15) & 0x3FAE ^ 0xF9B3F3FD ^ (v459 ^ LODWORD(STACK[0x125C]) ^ (2
                                                                              * ((v466 << 16) & 0x55E10000 ^ v466 ^ ((v466 << 16) ^ 0x4C50000) & ((v465 << 8) & 0x55E10000 ^ 0x14610000 ^ ((v465 << 8) ^ 0x61840000) & v465)))) & ((v439 >> 15) ^ 0xFFFE4C02);
  LODWORD(STACK[0x6A20]) = v418;
  v468 = -1543503872
       * (((v418 ^ 0xF31F5A02) + 216049150) ^ ((v418 ^ 0x3E4FDE96) - 1045421718) ^ ((v418 ^ 0xA9DB941D) + 1445227491))
       + 539633629;
  v469 = (v468 ^ 0xF7C5633) & (2 * (v468 & 0xA0000001)) | v468 & 0xA0000001;
  v470 = (2 * (v468 ^ 0xF7C5633)) & 0xA8000000 ^ 0xA0000000 ^ ((2 * (v468 ^ 0xF7C5633)) ^ 0x59521020) & (v468 ^ 0xF7C5633);
  v471 = v470 & (4 * v469) ^ (v469 | 0xC098610);
  v472 = (4 * v470) & 0xACA98E10 ^ 0xC098610 ^ ((4 * v470) ^ 0xB2A63840) & v470;
  v473 = v471 ^ 0x20280800 ^ (16 * v471) & 0xACA98E10 ^ ((16 * v471) ^ 0xC0986100) & v472;
  v474 = (16 * v472) & 0xACA98E10 ^ 0x24210E10 ^ ((16 * v472) ^ LODWORD(STACK[0x1264])) & v472;
  v475 = (v473 << 8) & 0xACA98E00 ^ v473 ^ ((v473 << 8) ^ 0xA98E1000) & v474;
  v476 = (v475 << 16) & 0x2CA90000 ^ v475 ^ ((v475 << 16) ^ 0xE100000) & ((v474 << 8) & 0x2CA90000 ^ 0x4210000 ^ ((v474 << 8) ^ 0xA98E0000) & v474);
  v477 = 369098752
       * (((v429 ^ LODWORD(STACK[0x1260])) + 37660423) ^ ((v429 ^ 0x91128CF0) - 1365151648) ^ ((v429 ^ 0xEE4FD6AA)
                                                                                             - 772003322))
       + 1498952238;
  v478 = (v477 & 0xA8000002 | 0x4944410 | (2 * (v477 & 0xA8000002)) & 0x50000000) ^ (2 * (v477 & 0xA8000002)) & (v477 ^ 0xD51201A2);
  v479 = ((2 * (v477 ^ 0xD51201A2)) ^ 0xFA4A1080) & (v477 ^ 0xD51201A2) ^ (2 * (v477 ^ 0xD51201A2)) & 0x7C000000;
  v480 = (4 * v478) & 0x70110050 ^ v478 ^ v479 & 0xE0000008 & (4 * v478);
  v481 = (4 * (v479 ^ 0x4000000)) & 0x7DB5CC70 ^ 0x920CC30 ^ ((4 * (v479 ^ 0x4000000)) ^ 0xF6D731C0) & (v479 ^ 0x4000000);
  v482 = (16 * v480) & 0x7DB5CC70 ^ v480 ^ ((16 * v480) ^ 0x48544500) & v481;
  v483 = (16 * v481) & 0x7DB5CC70 ^ 0x24A10870 ^ ((16 * v481) ^ 0xDB5CC700) & v481;
  v484 = v482 ^ LODWORD(STACK[0x1268]) ^ (v482 << 8) & 0x7DB5CC00 ^ ((v482 << 8) ^ 0x91005000) & v483;
  v485 = ((v449 >> 6) ^ 0xFC489514) & (v468 ^ (2 * v476) ^ 0xCFD5FE5B) ^ (v449 >> 6) & 0x3BCC5A7;
  v486 = ((v485 ^ 0x6EB753A2) - 1349035261) ^ ((v485 ^ 0x82C218CC) + 1138888813) ^ ((v485 ^ 0x93823195) + 1386363190);
  v487 = (1830289408 * (v486 + 1657304659)) | ((376974755 * (v486 + 1657304659) + 1598035347) >> 13);
  v488 = -1769481477
       * (((v417 ^ 0x8C918DCC) - 1872215875) ^ ((v417 ^ 0x8E053D92) - 1828917021) ^ ((v417 ^ 0x443A2EAC) + 1489232861))
       + 1127125135;
  v489 = ((v450 ^ (2 * v458)) >> 7) & 0x187DE57 ^ 0xFB7C31EC ^ (v477 ^ (2
                                                                      * ((v484 << 16) & 0x7DB50000 ^ v484 ^ ((v484 << 16) ^ 0x4C700000) & ((v483 << 8) & 0x7DB50000 ^ 0x48310000 ^ ((v483 << 8) ^ 0xB5CC0000) & v483))) ^ 0x31D4749A) & (((v450 ^ (2 * v458)) >> 7) ^ 0xFE8BEEBA);
  if ((((v417 & 0x4000000 ^ 0x6C76DBD) + 121616383) & 0x4000000) != 0)
    v490 = -67108864;
  else
    v490 = 0x4000000;
  LODWORD(STACK[0x6990]) = v490;
  v491 = 427066488
       - 1270949928
       * (((v417 ^ 0xABBD2932) - 1220221885) ^ ((v417 ^ 0x50EF321D) + 1276575598) ^ ((v417 ^ 0xBDFC85DD) - 1593489234))
       + (v488 >> 29);
  HIDWORD(v493) = v467 + v491 + v486 - v489 + 1093176740;
  LODWORD(v493) = -1415791079 * HIDWORD(v493);
  v492 = v493 >> 3;
  v494 = (155855744
        * (((v488 & 0xE0000000 | ((-1375984487 * v491) >> 3)) + v487 - 1399324672 - v492) ^ ((1594952704 * v489) | ((-1193819069 * v489) >> 22)))) & 0x800;
  if ((v494 & (((1447034880 * (v487 - 1399324672)) | ((728709465 * (v487 - 1399324672)) >> 10))
              - ((-1150095360 * v492) | ((2022422319 * v492) >> 20)))) != 0)
    v495 = -v494;
  else
    v495 = v494;
  LODWORD(STACK[0x69A0]) = v495;
  v496 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD8A8] = v496;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4 * (v496 == 0)) | (8 * (v496 == 0)) | v18)) - 12))();
}

uint64_t sub_100CE0FD4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  unint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  uint64_t (*v130)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x68E0]) = LODWORD(STACK[0x6A10]) ^ 0xC61BB312;
  v9 = STACK[0x6A60];
  v10 = STACK[0x6A70];
  v11 = 2 * (STACK[0x6A70] & 0xC2C077E6);
  LODWORD(STACK[0x68B0]) = v11;
  LODWORD(STACK[0x68C0]) = v10 & 0xC2C077E6;
  v12 = ((2 * (v10 ^ 0x7CAFB307)) ^ 0x7CDF89C2) & (v10 ^ 0x7CAFB307) ^ (2 * (v10 ^ 0x7CAFB307)) & 0xBE6FC4E0;
  v13 = v12 ^ 0x82204421;
  v14 = (v12 ^ 0x1C038080) & (4 * (v11 & (v10 ^ 0xF8AF77C7) ^ v10 & 0xC2C077E6)) ^ v11 & (v10 ^ 0xF8AF77C7) ^ v10 & 0xC2C077E6;
  v15 = ((4 * v13) ^ 0xF9BF1384) & v13 ^ (4 * v13) & 0xBE6FC4E0;
  v16 = (v15 ^ 0xB82F0080) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x640C461)) ^ 0xE6FC4E10) & (v15 ^ 0x640C461) ^ (16 * (v15 ^ 0x640C461)) & 0xBE6FC4E0;
  v18 = v16 ^ 0xBE6FC4E1 ^ (v17 ^ 0xA66C4400) & (v16 << 8);
  v19 = v10 ^ (LODWORD(STACK[0x6A40]) - ((2 * LODWORD(STACK[0x6A40])) & 0x65695396) - 1296782901) ^ (2 * ((v18 << 16) & 0x3E6F0000 ^ v18 ^ ((v18 << 16) ^ 0x44E10000) & (((v17 ^ 0x180380E1) << 8) & 0x3E6F0000 ^ 0x102B0000 ^ (((v17 ^ 0x180380E1) << 8) ^ 0x6FC40000) & (v17 ^ 0x180380E1)))) ^ 0x46957EF;
  v20 = (v19 + 554177189 - ((2 * v19) & 0x4210254A)) ^ LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x6860]) = v20 - ((2 * v20) & 0x333B890C) - 1717713786;
  v21 = STACK[0x6A50];
  LODWORD(STACK[0x6890]) = v6 ^ 0xC04C0350;
  HIDWORD(v22) = STACK[0x6A20];
  LODWORD(v22) = STACK[0x6A20];
  LODWORD(STACK[0x68A0]) = LODWORD(STACK[0x6990]) + (v2 ^ 0x46AE9EF2);
  v23 = (((LODWORD(STACK[0x69B0]) ^ 0x7F7A8464) - 1690375803) ^ ((LODWORD(STACK[0x69B0]) ^ 0xD7D7FF62) + 865309315) ^ ((LODWORD(STACK[0x69B0]) ^ 0xA2443C0C) + 1174426093))
      + 2067123041;
  v24 = (v23 ^ LODWORD(STACK[0xDC0])) & (2 * (v23 & 0xCDD8DE31)) ^ v23 & 0xCDD8DE31;
  v25 = ((2 * (v23 ^ 0xEDB9E48D)) ^ 0x40C27578) & (v23 ^ 0xEDB9E48D) ^ (2 * (v23 ^ 0xEDB9E48D)) & 0x20613ABC;
  v26 = v25 ^ 0x20210A84;
  v27 = (v25 ^ 0x403208) & (4 * v24) ^ v24;
  v28 = ((4 * v26) ^ 0x8184EAF0) & v26 ^ (4 * v26) & 0x20613ABC;
  v29 = (v28 ^ 0x2AB0) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x2061100C)) ^ 0x613ABC0) & (v28 ^ 0x2061100C) ^ (16 * (v28 ^ 0x2061100C)) & 0x20613AB0;
  v31 = v29 ^ 0x20613ABC ^ (v30 ^ 0x12A3C) & (v29 << 8);
  LODWORD(STACK[0x6800]) = v23 ^ (2
                                * ((v31 << 16) & 0x20610000 ^ v31 ^ ((v31 << 16) ^ 0x3ABC0000) & (((v30 ^ 0x2060103C) << 8) & 0x20610000 ^ 0x410000 ^ (((v30 ^ 0x2060103C) << 8) ^ 0x613A0000) & (v30 ^ 0x2060103C)))) ^ 0x4B81BE1C;
  v32 = (v22 >> 29) ^ __ROR4__(v1 ^ v2 ^ 0x87DDC19E ^ v6 ^ 0xC04C0350, 29) ^ 0x56611585;
  v33 = v8 & 0xFFFFFF80 | ((772969559 * v7) >> 25);
  v34 = (-935329792 * v3) | ((1747319585 * v3) >> 10);
  v35 = v33 & 0xFFFFF7FF ^ v34 ^ (LODWORD(STACK[0x69A0]) + v4);
  v36 = (-1890058240 * v5) | ((-529124885 * v5) >> 13);
  v37 = (1902641152 * v35) | ((354037293 * v35) >> 13);
  HIDWORD(v22) = (1747319585 * v3) >> 10;
  LODWORD(v22) = -836245011 * v34;
  v38 = (-1942880256 * v33) | ((-1389476327 * v33) >> 15);
  v39 = v38 + (v36 ^ (v22 >> 1)) - v37;
  v40 = (((v36 ^ 0xF9CD5F12 ^ v38) - v37) ^ 0x83C755B4) + v39;
  LODWORD(STACK[0x69B0]) = v40 ^ 0x83472644;
  v41 = (v37 - 2 * (v37 & 0x5506EBEF ^ ((354037293 * v35) >> 13) & 3) + 1426516972) ^ v40 ^ 0x83472644;
  v42 = v38
      - (((v40 ^ 0x78A1AD42) + 68777210) ^ ((v40 ^ 0xE28EB3E7) - 1640600995) ^ ((v40 ^ 0x4C6ED30D) + 819333815))
      + 215051268;
  v43 = (v42 ^ 0x1E07A610) & (2 * (v42 & STACK[0xDC4])) ^ v42 & STACK[0xDC4];
  v44 = ((2 * (v42 ^ 0x246B630)) ^ 0x38C23C40) & (v42 ^ 0x246B630) ^ (2 * (v42 ^ 0x246B630)) & 0x9C611E20;
  v45 = v44 ^ 0x84210220;
  v46 = (v44 ^ 0x1C000220) & (4 * v43) ^ v43;
  v47 = ((4 * v45) ^ 0x71847880) & v45 ^ (4 * v45) & 0x9C611E20;
  v48 = v46 ^ 0x9C611E20 ^ (v47 ^ 0x10001800) & (16 * v46);
  v49 = (16 * (v47 ^ 0x8C610620)) & 0x9C611E20 ^ 0x18601C20 ^ ((16 * (v47 ^ 0x8C610620)) ^ 0xC611E200) & (v47 ^ 0x8C610620);
  v50 = (v48 << 8) & 0x9C611E00 ^ v48 ^ ((v48 << 8) ^ 0x611E2000) & v49;
  v51 = v42 ^ (2
             * ((v50 << 16) & 0x1C610000 ^ v50 ^ ((v50 << 16) ^ 0x1E200000) & ((v49 << 8) & 0x1C610000 ^ 0x1C610000 ^ ((v49 << 8) ^ 0x611E0000) & v49)));
  v52 = v51 ^ 0xDE0C9CFB;
  v53 = v39
      - (((v40 ^ 0xEFE7E37) + 1917233037) ^ ((v40 ^ 0x2C66D2C) + 2122232984) ^ ((v40 ^ 0xDA79DEB3) - 1497299191))
      - 294792639;
  v54 = (v53 ^ 0x382B6DDA) & (2 * (v53 & 0xBC8B41D3)) ^ v53 & 0xBC8B41D3;
  v55 = ((2 * (v53 ^ 0x493B6E5C)) ^ 0xEB605F1E) & (v53 ^ 0x493B6E5C) ^ (2 * (v53 ^ 0x493B6E5C)) & 0xF5B02F8E;
  v56 = v55 ^ 0x14902081;
  v57 = (v55 ^ 0xE0A02F0D) & (4 * v54) ^ v54;
  v58 = ((4 * v56) ^ 0xD6C0BE3C) & v56 ^ (4 * v56) & 0xF5B02F8C;
  v59 = (v58 ^ 0xD4802E00) & (16 * v57) ^ v57;
  v60 = ((16 * (v58 ^ 0x21300183)) ^ 0x5B02F8F0) & (v58 ^ 0x21300183) ^ (16 * (v58 ^ 0x21300183)) & 0xF5B02F80;
  v61 = v59 ^ 0xF5B02F8F ^ (v60 ^ LODWORD(STACK[0xDC8])) & (v59 << 8);
  v62 = v53 ^ (2
             * ((v61 << 16) & 0x75B00000 ^ v61 ^ ((v61 << 16) ^ 0x2F8F0000) & (((v60 ^ 0xA4B0070F) << 8) & 0x75B00000 ^ 0x45900000 ^ (((v60 ^ 0xA4B0070F) << 8) ^ 0x302F0000) & (v60 ^ 0xA4B0070F))));
  v63 = (402513920 * v41) | ((347652079 * v41) >> 19);
  v64 = ((264581912
        * (((v51 ^ 0x37C83677) + 372987252) ^ ((v51 ^ 0x18AEB143) + 962449992) ^ ((v51 ^ 0xB1C31364) - 1875873695))) | ((1106814563 * (((v51 ^ 0x35963E0E) + 342187275) ^ ((v51 ^ 0x2D1D9B61) + 216987750) ^ ((v51 ^ 0x862E313F) - 1478667716)) + 1839545377) >> 29))
      + 1831461128;
  v65 = (1665532429
       * (((v62 ^ 0xEB90909E) + 760180957) ^ ((v62 ^ 0xD4443F41) + 312205060) ^ ((v62 ^ 0x233FB112) - 438283951))
       + 905048752) >> 14;
  v66 = ((137625600
        * (((v62 ^ 0x4D93B7A3) - 1957931038) ^ ((v62 ^ 0xE99EDA79) + 792803900) ^ ((v62 ^ 0xB8E67317) + 2117702486))) | v65)
      - 893386752;
  v67 = -973299328
      * (((v40 ^ 0xF7585371) - 1948218677) ^ ((v40 ^ 0x1CCCA8E2) + 1618243930) ^ ((v40 ^ 0x3DD5363B) + 1097723777))
      - v63
      + ((-2087978685
        * (((v40 ^ 0x2430F917) + 1485316269) ^ ((v40 ^ 0x6872571C) + 348819112) ^ ((v40 ^ 0x9A0363A3) - 423904743))
        - 647214396) >> 25)
      + v64
      - v66
      - 1239064064;
  v68 = -354282113 * v63;
  v69 = (-128790720 * v67) | ((1205947197 * v67) >> 26);
  v70 = -2092024871 * v69;
  HIDWORD(v22) = (347652079 * v41) >> 19;
  LODWORD(v22) = v68;
  v71 = v22 >> 1;
  v72 = -278659072 * v69;
  HIDWORD(v22) = v65;
  LODWORD(v22) = 1181611865 * v66;
  v73 = v22 >> 1;
  HIDWORD(v22) = 786412827 * (((((184549376 * v64) | ((-1031312117 * v64) >> 8)) + v69) ^ v71) - v73);
  LODWORD(v22) = HIDWORD(v22);
  v74 = v22 >> 30;
  v75 = (-1924530176 * v73) | ((-688077147 * v73) >> 15);
  v76 = 1721338511 * v74;
  v77 = v72 & 0xFFFC0000 | (v70 >> 14);
  v78 = v77 ^ ((158728192 * v71) | ((1261896891 * v71) >> 15)) ^ v74;
  v79 = 579982328 - (v74 << 29);
  v80 = (2 * (v79 ^ LODWORD(STACK[0xDCC])) + 679544992) & (v79 ^ LODWORD(STACK[0xDCC])) ^ 0x18;
  v81 = (4 * v80) & 0x1640E458 ^ 0x6406418 ^ ((4 * v80) ^ LODWORD(STACK[0xDD0])) & v80;
  v82 = v81 & 0x780;
  v83 = (16 * v81) & 0x1640E450 ^ 0x1240A058 ^ ((16 * v81) ^ 0x640E4580) & v81;
  v84 = ((v82 << 8) & 0x8000 | 0x402000) ^ (v79 & 0xC0000000 | 0x1600A020 | v82) ^ v83 & ((v82 << 8) ^ 0x47800);
  v85 = v79 ^ (2
             * ((v84 << 16) & 0x16000000 ^ v84 ^ ((v84 << 16) ^ 0x64580000) & ((v83 << 8) & 0x16400000 ^ 0x16000000 ^ ((v83 << 8) ^ 0x40E40000) & v83)));
  v86 = -1383355577 * v75;
  v87 = -1651050547 * v77;
  v88 = v78 - v75;
  v89 = -427819008 * v77;
  v90 = 1566193664 * v75;
  v91 = (v85 ^ LODWORD(STACK[0xDD4])) & ((v76 >> 3) ^ 0x97AF14A8) ^ v85 & 0x6850EB56;
  v92 = v91 ^ 0xDA3A9BDE;
  v93 = ((v89 & 0xFF800000 | (v87 >> 9)) ^ 0x3FD1BAF6)
      - 536941062
      + ((2 * (v89 & 0xFF800000 | (v87 >> 9))) & 0x7FA375EC);
  v94 = v93
      + 950627750
      + (((v91 ^ 0x57904E15) + 1918183989) ^ ((v91 ^ 0xA513BE47) - 2133403033) ^ ((v91 ^ 0xD6C04EA) + 682189004));
  v95 = ((-770023424 * v88) | ((-1306095405 * v88) >> 19))
      - 393234494
      - 2
      * (((-770023424 * v88) & 0x688FC000 | ((-1306095405 * v88) >> 19) & 0x688FC29F) ^ ((-1306095405 * v88) >> 19) & 0x12)
      + 2763;
  v96 = ((v91 ^ 0x3087D09) + 650975529) ^ ((v91 ^ 0x1B1F0936) + 1054502168) ^ ((v91 ^ 0xE7F88087) - 1036131161);
  v97 = (v94 - ((2 * v94 - 2030377386) & 0xD11F851A) - 1408420424) ^ v95;
  v98 = (v90 & 0xFFFFF800 | (v86 >> 21))
      + v93
      - (((v95 ^ 0x7F2CA1D2) - 2133631442) ^ ((v95 ^ 0x1480A022) - 343973922) ^ ((v95 ^ 0x8323C37D) + 2094808195))
      + v96
      - ((((2 * v92) ^ 0xB1C1CC61) - 1963167111) ^ (((2 * v92) ^ 0x233E4FC7) + 402911711) ^ (((2 * v92) ^ 0xD9555D6A)
                                                                                           - 496442508))
      - 1285467980;
  v99 = (v98 ^ 0x98A2D64B) & (2 * (v98 & 0xDAAB140B)) ^ v98 & 0xDAAB140B;
  v100 = ((2 * (v98 ^ 0x98E0D64F)) ^ 0x84978488) & (v98 ^ 0x98E0D64F) ^ (2 * (v98 ^ 0x98E0D64F)) & 0x424BC244;
  v101 = v100 ^ 0x42484244;
  v102 = (v100 ^ 0x8000) & (4 * v99) ^ v99;
  v103 = ((4 * v101) ^ 0x92F0910) & v101 ^ (4 * v101) & 0x424BC244;
  v104 = (v103 ^ 0xB0004) & (16 * v102) ^ v102;
  v105 = ((16 * (v103 ^ LODWORD(STACK[0xDD8]))) ^ 0x24BC2440) & (v103 ^ LODWORD(STACK[0xDD8])) ^ (16
                                                                                                * (v103 ^ LODWORD(STACK[0xDD8]))) & 0x424BC240;
  v106 = v104 ^ 0x424BC244 ^ (v105 ^ 0x80004) & (v104 << 8);
  v107 = v98 ^ (2
              * ((v106 << 16) & 0x424B0000 ^ v106 ^ ((v106 << 16) ^ 0x42440000) & (((v105 ^ 0x4243C204) << 8) & 0x424B0000 ^ 0x90000 ^ (((v105 ^ 0x4243C204) << 8) ^ 0x4BC20000) & (v105 ^ 0x4243C204))));
  v108 = v107 ^ 0x640D5A61;
  v109 = -2108215015
       - 192059783 * v97
       + (((v107 ^ 0x901302C6) + 199337817) ^ ((v107 ^ 0x90074CAA) + 200665397) ^ ((v107 ^ 0xDAA8DEEF) + 1096448882))
       - ((((2 * v108) ^ 0x2E9FD518) - 536516150) ^ (((2 * v108) ^ 0x204B2721) - 288252943) ^ (((2 * v108) ^ 0x73B767FD)
                                                                                             - 1121068243));
  v110 = (v109 ^ 0x9CE40045) & (2 * (v109 & 0x1CC82A64)) ^ v109 & 0x1CC82A64;
  v111 = ((2 * (v109 ^ 0x8C741485)) ^ 0x21787DC2) & (v109 ^ 0x8C741485) ^ (2 * (v109 ^ 0x8C741485)) & 0x90BC3EE0;
  v112 = v111 ^ 0x90840221;
  v113 = (v111 ^ 0xA43881) & (4 * v110) ^ v110;
  v114 = ((4 * v112) ^ 0x42F0FB84) & v112 ^ (4 * v112) & 0x90BC3EE0;
  v115 = (v114 ^ 0xB03A81) & (16 * v113) ^ v113;
  v116 = ((16 * (v114 ^ 0x900C0461)) ^ 0xBC3EE10) & (v114 ^ 0x900C0461) ^ (16 * (v114 ^ 0x900C0461)) & 0x90BC3EE0;
  v117 = v115 ^ 0x90BC3EE1 ^ (v116 ^ 0x802EE1) & (v115 << 8);
  v118 = v109 ^ (2
               * ((v117 << 16) & 0x10BC0000 ^ v117 ^ ((v117 << 16) ^ 0x3EE10000) & (((v116 ^ 0x903C10E1) << 8) & 0x10BC0000 ^ (((v116 ^ 0x903C10E1) << 8) ^ 0x3C3E0000) & (v116 ^ 0x903C10E1) ^ 0x800000)));
  v119 = v118 ^ 0xCB093D6C;
  LODWORD(STACK[0x6830]) = v108;
  LODWORD(STACK[0x6AC0]) = v118 ^ 0xCB093D6C ^ v108;
  v120 = (((v95 ^ 0x11C4313A) - 298070330) ^ ((v95 ^ 0xFCE53DF8) + 52085256) ^ ((v95 ^ 0x5AECE4F) - 95342159))
       + (((v118 ^ 0x50280504) + 1692321688) ^ ((v118 ^ 0x5305D025) + 1743983287) ^ ((v118 ^ 0x1FDD8287) + 724254741))
       - ((((2 * (v118 ^ 0xCB093D6C)) ^ 0xCB7E4A9B) - 791062193) ^ (((2 * (v118 ^ 0xCB093D6C)) ^ 0xC025A038) - 612191250) ^ (((2 * (v118 ^ 0xCB093D6C)) ^ 0xA4A93F37) - 1089590045))
       - 958311664;
  v121 = (v120 ^ 0x89FD9484) & (2 * (v120 & 0xADFDA089)) ^ v120 & 0xADFDA089;
  v122 = ((2 * (v120 ^ 0xD9249594)) ^ 0xE9B26A3A) & (v120 ^ 0xD9249594) ^ (2 * (v120 ^ 0xD9249594)) & 0x74D9351C;
  v123 = v122 ^ 0x14491505;
  v124 = (v122 ^ 0x60900008) & (4 * v121) ^ v121;
  v125 = ((4 * v123) ^ 0xD364D474) & v123 ^ (4 * v123) & 0x74D9351C;
  v126 = (v125 ^ 0x50401419) & (16 * v124) ^ v124;
  v127 = ((16 * (v125 ^ 0x24992109)) ^ 0x4D9351D0) & (v125 ^ 0x24992109) ^ (16 * (v125 ^ 0x24992109)) & 0x74D93510;
  v128 = v126 ^ 0x74D9351D ^ (v127 ^ 0x4491110D) & (v126 << 8);
  LODWORD(STACK[0x6870]) = v120 ^ (2
                                 * ((v128 << 16) & 0x74D90000 ^ v128 ^ ((v128 << 16) ^ 0x351D0000) & (((v127 ^ 0x3048240D) << 8) & 0x74D90000 ^ 0x24C80000 ^ (((v127 ^ 0x3048240D) << 8) ^ 0x59350000) & (v127 ^ 0x3048240D)))) ^ 0x5DB32E77;
  LODWORD(STACK[0x6990]) = v119;
  LODWORD(STACK[0x68D0]) = v119 ^ v92;
  v129 = STACK[0x69E0];
  LODWORD(STACK[0x67F0]) = v41;
  LODWORD(STACK[0x69A0]) = v52;
  LODWORD(STACK[0x6840]) = HIBYTE(v40);
  LODWORD(STACK[0x6820]) = HIBYTE(v21) ^ 0xD60327B;
  v130 = (uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v129) - 12);
  HIDWORD(v22) = v32;
  LODWORD(v22) = v32;
  LODWORD(STACK[0x6810]) = v22 >> 3;
  LODWORD(STACK[0x6850]) = HIBYTE(v9);
  return v130(a1, &off_1015B46D0, 448814475, 53, 4294953252, 4294954407, 4036857974, 1073266342);
}

uint64_t sub_100CE29B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, char a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  char v15;
  char v16;
  char v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;

  v25 = ((2 * (v12 ^ v13)) | ((v12 ^ v13) >> 7) & 1) ^ (a3 + 1936);
  LOBYTE(v25) = (v9 - 39 + v25 - (v15 & (2 * v25)) + a5) ^ a9;
  *(_DWORD *)(a1 + 4 * v13) = v21 ^ v19 ^ v20 ^ v22 ^ v24 ^ v11 ^ v18 ^ v23 ^ v10 ^ a8 ^ (*(_DWORD *)(*(_QWORD *)(a2 + 8 * (v9 + a6)) + 4 * ((((v25 ^ v16) >> 1) | ((_BYTE)v25 << 7)) ^ v17) - 12) + a7);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v14 != 0) * a4) ^ v9)) - 12))();
}

uint64_t sub_100CE2A5C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  LODWORD(STACK[0x6880]) = v3;
  LODWORD(STACK[0x69C0]) = v4;
  LODWORD(STACK[0x69D0]) = v1;
  LODWORD(STACK[0x69E0]) = v2;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD8B0] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((22349 * ((((v0 - 9922) ^ (v5 == 0)) & 1) == 0)) ^ v0))
                            - ((v0 - 1055878105) & 0x3EEF7DE3)
                            + 18747))();
}

uint64_t sub_100CE2B08(uint64_t a1)
{
  unsigned int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(STACK[0x6AD8] + 8 * v1))(a1, 1563545350, 87, 155, LODWORD(STACK[0x6AB0]), LODWORD(STACK[0x6A90]), LODWORD(STACK[0x69A0]), (LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6980])) ^ LODWORD(STACK[0x69B0]));
}

uint64_t sub_100CE2CE8(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;

  v21 = v8 + 3 * (v13 ^ v17) - (v9 & v18);
  v22 = (v21 ^ a8);
  v23 = *((_DWORD *)*(&off_1015B46D0 + (int)(v13 - 16988))
        + (((v19 | (2 * (v22 ^ 0xA7240A))) - (v22 ^ 0xA7240A) + v20) ^ v15)
        - 3)
      + ((((v21 ^ a8) & v11) + (v22 ^ a3) - ((v22 ^ a3) & v11) + 1280) ^ 0x7534FC78)
      + 1;
  v24 = (v8 + 3 * (v13 ^ v17) - (v9 & v18)) ^ 0x78;
  v25 = (v24 + (v21 & a4 ^ v14) - (v24 & a4)) ^ v16;
  *(_DWORD *)(a1 + 4 * ((v12 - (v25 | v12) + (v25 | 0x196F75D4)) ^ 0x1866B5A3u)) = a5 ^ a6 ^ a7 ^ 0xC765320A ^ (v23 - ((a2 + 2260) & (2 * v23)) + 781773805);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((10599 * (v10 == 0)) ^ v13)))();
}

uint64_t sub_100CE2E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x6AB0]) = a8;
  v9 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD8A0] = v9 + 0x21E4892F3905EF28;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 != 0) * (2141 * (v8 ^ 0x142E) - 7275)) ^ v8))
                            - ((7 * (v8 ^ 0x1671u)) ^ 0x1072)))();
}

uint64_t sub_100CE2E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 12))(a1, a2, LODWORD(STACK[0x6AB0]), 188, LODWORD(STACK[0x68D0]), ((LODWORD(STACK[0x6A30]) ^ 0xDF5667A1)- 1346454128+ (((((((LODWORD(STACK[0x6930]) >> 6) - ((LODWORD(STACK[0x6930]) >> 5) & 2) - 1755451499) ^ (4 * (LODWORD(STACK[0x6AA0]) ^ LODWORD(STACK[0x6990])))) >> 2) ^ 0x1E564C68)- 1346454128) ^ 0x6C785D47)) & 0xFFFFFFFE ^ LODWORD(STACK[0x6AC]), a7, 18902);
}

uint64_t sub_100CE3368@<X0>(char a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W7>, int a5@<W8>)
{
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  int v11;
  int v12;
  char v13;
  int v14;
  char v15;
  int v16;
  char v17;
  int v18;
  int v19;
  int v20;
  unsigned __int8 v21;
  int v22;
  unsigned int v23;

  v21 = v8 + ((3 * (v12 ^ v13)) ^ v17) - (v9 & v15);
  v22 = __ROR4__(*((_DWORD *)*(&off_1015B46D0 + (v12 ^ v19))+ ((v16 - ((v21 ^ a1) ^ a5 | v16) + ((v21 ^ a1) ^ a5 | (v14 + 197))) ^ (v14 + 14))- 1), 14);
  v23 = ((v11 & (2 * (v21 ^ a2))) - (v21 ^ a2) - 1579908052) ^ 0xE5C5F428;
  *(_DWORD *)(v7 + 4 * ((v18 - (v23 | v18) + (v23 | 0xC44B91BF)) ^ 0x805AE1BE)) = v5 ^ v6 ^ a3 ^ v22 ^ v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 == 0) * a4) ^ v12)) - 12))();
}

uint64_t sub_100CE344C()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD8C0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((5 * (v0 ^ 0x12EC) + 15079) ^ (49 * (v0 ^ 0x147D))) * (v1 != 0)) ^ v0))
                            - 4))();
}

uint64_t sub_100CE34AC()
{
  int v0;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(2917185961, 1288, 4294953383, 327633780, 17340, 4173, LODWORD(STACK[0x6910]), LODWORD(STACK[0x6890]));
}

uint64_t sub_100CE3780(int a1, unsigned int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  char v14;
  int v15;
  int v16;
  unsigned int v17;

  v17 = *(_DWORD *)(*(_QWORD *)(v11 + 8 * (v15 & v12))
                  + 4 * ((v9 ^ v14) ^ (((v15 + a6) | a2) + a3))
                  - 12);
  *(_DWORD *)(v8 + 4 * v9) = a7 ^ a8 ^ v16 ^ v17 ^ a1 ^ ((a4 & (v17 >> 1) ^ v13) - 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 == 0) * a5) ^ v15)) - 12))();
}

uint64_t sub_100CE37F8()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD8B8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((3671 * ((v0 + 1049224006) & 0xC175F5F7 ^ 0x1072) - 14592) * (v1 != 0)) ^ v0))
                            - 8))();
}

uint64_t sub_100CE3860()
{
  int v0;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(1994774421, 2473533699, 1236769431, 1771518305, 551110227, 3743847547, LODWORD(STACK[0x6900]), LODWORD(STACK[0x69C0]));
}

uint64_t sub_100CE3AB8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  int v15;
  int v16;
  int v17;

  v17 = *(_DWORD *)(*(_QWORD *)(v11 + 8 * (v15 + v13)) + 4 * ((v9 ^ v14) ^ 0x70u) - 12)
      + ((v9 ^ v14) ^ a1)
      + 1;
  *(_DWORD *)(v8 + 4 * v9) = a7 ^ a8 ^ v16 ^ a4 ^ (v17 - ((((v15 + a5) & a6) + a2) & (2 * v17)) + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 == 0) * v12) ^ v15)) - 4))();
}

uint64_t sub_100CE3B38()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD8F0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((((v0 ^ 0x1661) + 3628) ^ (v1 == 0)) & 1) == 0)
                                          * (33 * (v0 ^ 0x1661) - 2857)) ^ v0))
                            - 4))();
}

uint64_t sub_100CE3B90()
{
  int v0;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(10845, 4294948213, 4294950718, 46, LODWORD(STACK[0x6A40]), LODWORD(STACK[0x6A20]), LODWORD(STACK[0x6870]), (((LODWORD(STACK[0x6A50]) ^ LODWORD(STACK[0x6A60])) ^ LODWORD(STACK[0x69D0])) >> 8) ^ 0xC0C1939F);
}

uint64_t sub_100CE3E14(int a1, int a2, int a3, unsigned int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;

  v15 = *(_DWORD *)(*(_QWORD *)(v11 + 8 * (v14 + a3)) + 4 * ((v9 ^ a8) & (v14 + a2) ^ a4) - 4);
  *(_DWORD *)(v8 + 4 * v9) = a5 ^ a6 ^ a7 ^ v15 ^ v13 ^ (v12 + 2314) & (v15 >> 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 == 0) * a1) ^ v14)) - 4))();
}

uint64_t sub_100CE3E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x6AB0]) = a8;
  v9 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD8C8] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((30 * (v9 != 0)) ^ (v8 - 14175)))
                            - ((v8 - 15124) ^ (v8 + 610316324) & 0xDB9F5F5D ^ 0x4B7ELL)))();
}

uint64_t sub_100CE3EF8(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4))(a1, LODWORD(STACK[0x6870]), LODWORD(STACK[0x68D0]), LODWORD(STACK[0x6810]), 1446049362, 23339, 2503214144, 201);
}

uint64_t sub_100CE41A4(uint64_t a1, int a2, int a3, int a4, char a5, int a6, int a7, int a8)
{
  char v8;
  char v9;
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  char v15;
  char v16;
  char v17;
  int v18;
  int v19;
  char v20;
  int v21;
  char v22;
  int v23;

  v22 = v20 ^ v12 ^ v10 & ((v13 + v14) ^ 2);
  v23 = (v9
                        + (((v22 ^ 0xCA) + 27) ^ ((v22 ^ a5) - 125) ^ ((v22 ^ v17) - 58))
                        + ((2 * ((v22 ^ v16) & v8 ^ v22 & v15)) ^ 0xE7));
  *(_DWORD *)(a1 + 4 * (v10 & ((v13 + v14) ^ 0x4702u))) = v18 ^ v19 ^ a4 ^ v21 ^ a3 ^ a2 ^ v23 ^ a7 ^ *((_DWORD *)*(&off_1015B46D0 + (v13 ^ a6)) + (v23 ^ 0x35u) - 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v11 == 0) * a8) ^ v13)) - 4))();
}

uint64_t sub_100CE4274()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD8E8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((((v0 - 18331) | 0x1014) - 2101) * (v1 != 0)) ^ v0))
                            - 12))();
}

uint64_t sub_100CE42C0()
{
  int v0;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))(STACK[0x6AD8] + 8 * (v0 + 15601)))(2165837961, 18564, LODWORD(STACK[0x200]), 2201701142, 5190, STACK[0xD8E8], LODWORD(STACK[0x6A00]), LODWORD(STACK[0x69F0]));
}

uint64_t sub_100CE4624(int a1, int a2, int a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;

  *(_DWORD *)(a6 + 4 * v9) = a7 ^ a3 ^ a8 ^ v14 ^ (v9 ^ v12) & (((v11 + v8 + 3812) | (a1 + 2423)) ^ (a4 + 3838)) ^ *(_DWORD *)(*(_QWORD *)(v13 + 8 * (v8 ^ a2)) + 4 * ((v9 ^ v12) & (((v11 + v8 + 3812) | (a1 + 2423)) ^ (a4 + 3838)) ^ 0x80u) - 12);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v10 == 0) * a5) ^ v8)))();
}

uint64_t sub_100CE4698(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  int v6;
  int v7;
  int v8;

  STACK[0x67E0] = a6;
  STACK[0x6A60] = STACK[0xD8E0];
  STACK[0x67D0] = STACK[0xD8A8];
  STACK[0x67C0] = STACK[0xD8B8];
  STACK[0x67B0] = STACK[0xD8B0];
  STACK[0x67A0] = STACK[0xD8C0];
  STACK[0x6790] = STACK[0xD8C8];
  STACK[0x6780] = STACK[0xD8A0] - 0x21E4892F3905EF28;
  STACK[0x6770] = STACK[0xD8F0];
  v7 = LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x6750]) = v7 ^ 0x51227F9F;
  LODWORD(STACK[0x6760]) = v7;
  LODWORD(STACK[0x6740]) = v7 & 0x26BF0751;
  LODWORD(STACK[0x6730]) = (((v7 ^ 0xB57CBDEC) + 1250116116) ^ ((v7 ^ 0xF5F9CFF2) + 168177678) ^ (((26
                                                                                                  * (v6 ^ (a4 + 3378))) ^ 0xEE58B6F1)
                                                                                                + (v7 ^ 0x11A70D81)))
                         + 424254784;
  v8 = LODWORD(STACK[0x6A80]) ^ 0x210812A5;
  LODWORD(STACK[0x6720]) = v8;
  LODWORD(STACK[0x6710]) = v8 + 1;
  LODWORD(STACK[0x6708]) = LODWORD(STACK[0x6940]) - 72510445;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8
                                                                                          * (v6 ^ a4 ^ (9322 * (v6 != 492952520))))
                                                                              - 8))(1904382802, 4294967290, 337969280, 536887300, 675811855);
}

uint64_t sub_100CE48FC(int a1, int a2, char a3, int a4, char a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  char v13;
  uint64_t v14;
  int v15;
  char v16;
  int v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  char v24;
  int v25;
  int v26;
  int v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  int v34;
  int v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  unsigned __int8 v51;
  unsigned int v52;
  int v53;
  int v54;
  unint64_t v55;
  int v56;
  unint64_t v57;
  unsigned int v58;
  int v59;
  int v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unsigned int v94;
  int v95;
  uint64_t v96;
  unsigned int v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unint64_t v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  uint64_t v115;
  int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  unint64_t v124;
  unsigned int v125;
  unint64_t v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unint64_t v135;
  unint64_t v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  char *v140;
  unsigned int v141;
  unsigned int v142;
  unint64_t v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  char *v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unint64_t v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  int v161;
  unint64_t v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unint64_t v174;
  unint64_t v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unint64_t v179;
  int v180;
  unint64_t v181;
  unint64_t v182;
  unsigned int v183;
  int v184;
  unint64_t v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  unint64_t v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  unsigned int v202;
  unint64_t v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  unint64_t v207;
  unsigned int v208;
  unsigned int v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  unint64_t v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unint64_t v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  unint64_t v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  unint64_t v245;
  unsigned int v246;
  int v247;
  int v248;
  int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  int v259;
  int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  char *v271;
  char *v272;
  char *v273;
  int v274;
  unsigned int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unint64_t v285;
  unint64_t v286;
  unint64_t v287;
  unsigned int v288;
  unint64_t v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  int v299;
  int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  int v413;
  int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  unsigned int v418;
  int v419;
  unsigned int v420;
  int v421;
  unsigned int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  int v426;
  int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  unsigned int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  unsigned __int8 v440;
  int v441;
  __int16 v442;
  __int16 v443;
  __int16 v444;
  int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  unsigned int v457;
  BOOL v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  unsigned int v469;
  int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  int v480;
  unsigned int v481;
  unsigned int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  unsigned int v495;
  int v496;
  unsigned int v497;
  unsigned int v498;
  unsigned int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  int v509;
  int v510;
  unsigned int v511;
  unsigned int v512;
  unsigned int v513;
  unsigned int v514;
  unsigned int v515;
  int v516;
  int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unint64_t v522;
  int v523;
  unsigned int v524;
  int v525;
  int v526;
  int v527;
  unsigned int v528;
  int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  int v535;
  int v536;
  unsigned int v537;
  int v538;
  int v539;
  unsigned int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  int v550;
  int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  unsigned int v562;
  unsigned int v563;
  unint64_t v564;
  int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  unsigned int v574;
  int v575;
  int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  int v581;
  unsigned int v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  int v591;
  int v592;
  int v593;
  unsigned int v594;
  int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  int v600;
  unsigned int v601;
  int v602;
  unsigned int v603;
  int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  int v609;
  unsigned int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  unsigned int v618;
  unsigned int v619;
  int v620;
  unsigned int v621;
  int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  int v644;
  int v645;
  int v646;
  int v647;
  int v648;
  unsigned int v649;
  unsigned int v650;
  unsigned int v651;
  unsigned int v652;
  int v653;
  int v654;
  unsigned int v655;
  int v656;
  int v657;
  int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  int v663;
  int v664;
  unsigned int v665;
  int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  int v670;
  unsigned int v671;
  unsigned int v672;
  int v673;
  int v674;
  unsigned int v675;
  int v676;
  int v677;
  int v678;
  int v679;
  unsigned int v680;
  unsigned int v681;
  unsigned int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  unsigned int v687;
  int v688;
  int v689;
  unsigned int v690;
  unsigned int v691;
  unsigned int v692;
  unsigned int v693;
  unsigned int v694;
  int v695;
  int v696;
  unsigned int v697;
  int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  unsigned int v707;
  unsigned int v708;
  unsigned int v709;
  unsigned int v710;
  unsigned int v711;
  int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  int v717;
  int v718;
  int v719;
  int v720;
  int v721;
  int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  int v727;
  unsigned int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  unsigned int v732;
  unsigned int v733;
  int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  int v739;
  int v740;
  unsigned int v741;
  int v742;
  unsigned int v743;
  int v744;
  unsigned int v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  int v756;
  int v757;
  int v758;
  int v759;
  unsigned int v760;
  int v761;
  int v762;
  unsigned int v763;
  int v764;
  int v765;
  unsigned int v766;
  unsigned int v767;
  unsigned int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  int v774;
  unsigned int v775;
  unsigned int v776;
  unsigned int v777;
  int v778;
  unsigned int v779;
  int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  unsigned int v786;
  int v787;
  int v788;
  unsigned int v789;
  int v790;
  int v791;
  int v792;
  int v793;
  int v794;
  unsigned int v795;
  unsigned int v796;
  int v797;
  unsigned int v798;
  unsigned int v799;
  unsigned int v800;
  unsigned int v801;
  unsigned int v802;
  int v803;
  int v804;
  int v805;
  int v806;
  int v807;
  unsigned int v808;
  int v809;
  int v810;
  unint64_t v811;
  unsigned int v812;
  unsigned int v813;
  unint64_t v814;
  unsigned int v815;
  unsigned int v816;
  int v817;
  unsigned int v818;
  unsigned int v819;
  int v820;
  unsigned int v821;
  uint64_t v822;
  unsigned int v823;
  int v824;
  int v825;
  unsigned int v826;
  unsigned int v827;
  unsigned int v828;
  int v829;
  int v830;
  unsigned int v831;
  unsigned int v832;
  unsigned int v833;
  unsigned int v834;
  unsigned int v835;
  unsigned int v836;
  int v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  unsigned int v841;
  int v842;
  unsigned int v843;
  int v844;
  unsigned int v845;
  unsigned int v846;
  unsigned int v847;
  unsigned int v848;
  int v849;

  LODWORD(STACK[0x6A50]) = v11 > 0x4526BEC;
  v20 = (v15 - 17514) | 0x1052u;
  STACK[0x6AC0] = v20;
  LODWORD(STACK[0x67F0]) = v20 + 9505;
  v21 = (((v17 & v10 ^ 0x38CAFAD1) & 0xD67C0A3A) + (((_DWORD)v20 + 9505 + v8) & v17 ^ v9)) ^ 0x47891A23;
  STACK[0x6A20] = v21;
  LODWORD(STACK[0x6A40]) = v17 & 0xFFFFFFFE;
  LODWORD(v20) = (58975570 - (v17 & 0xFFFFFFFE ^ 0xCB09365E) + ((2 * (v17 & 0xFFFFFFFE ^ 0xCB09365E)) & 0xF8F83558)) ^ 0x23957946;
  v22 = STACK[0x6A60];
  v23 = *(unsigned __int8 *)(STACK[0x6A60]
                           + ((((2 * (_DWORD)v20) & 0x738963C4) - v20 - 969191907) ^ 0x7BE4F162));
  v24 = *(_BYTE *)(STACK[0x6A60] + v21);
  v25 = v17;
  LODWORD(v21) = (((v25 ^ 0x5E) + 55) ^ ((v25 ^ 0xFFFFFFCA) - 93) ^ ((v25 ^ 0xFFFFFFA1) - 54)) + 100;
  v26 = v23 - 115 * v21 - 4 * v21 + 51;
  v27 = ((v25 ^ v12) + 1392718602) ^ ((v25 ^ LODWORD(STACK[0x6BC])) + 2084398718) ^ ((v25 ^ LODWORD(STACK[0x6B8]))
                                                                                   - 2046705729);
  if ((v17 & 0x40) != 0)
    v28 = 11;
  else
    v28 = -117;
  v29 = v27 + v28;
  v30 = (v29 ^ 0xF0) & (2 * (v29 & 0xF4)) ^ v29 & 0xF4;
  v31 = ((2 * (v29 ^ 0x70)) ^ 8) & (v29 ^ 0x70);
  v32 = v29 ^ (2
             * ((4 * (v31 ^ (v13 + 118))) & (v31 ^ (v13 + 118)) & (16 * ((v31 ^ 4) & (4 * v30) ^ v30)) ^ (v31 ^ 4) & (4 * v30) ^ v30));
  v33 = *(_BYTE *)(*(_QWORD *)(v14 + 8 * (v15 ^ 0x4C04))
                 + ((v24 + (((v32 ^ 0x20) + 27) ^ ((v32 ^ 0xEB) - 46) ^ ((v32 ^ 0x7F) + 70)) * v18 - 11) ^ 0x58));
  v34 = (((v33 ^ ((v33 ^ 0xD5) >> 5) ^ ((v33 ^ 0xD5) >> 3)) ^ 0x14) << 8) | ((*(unsigned __int8 *)(*(_QWORD *)(v14 + 8 * (v15 - 14934)) + (v26 ^ 0x7DLL) - 12) ^ (((2 * v26) & 0xB8 ^ 0x20) + (v26 ^ 0x6C)) ^ 0x5E) << 24);
  v35 = (v17 & a2 ^ 0xE4C350A2 | 0x8E7D6CAD) - (v17 & a2 ^ 0xE4C350A2 | a1) + a1;
  v36 = v35 ^ 0x3C7E293Au;
  STACK[0x6A30] = v36;
  v37 = *(_BYTE *)(v22 + v36) + (((v35 ^ 0x8A) + 60) ^ ((v35 ^ 0xF5) + 69) ^ ((v35 ^ 0x45) - 11)) * v18 + 20;
  v38 = ((v17 & 0x6D89645 ^ 0x6C09400) + (v17 & 0xF92769B2 ^ 0x29072803) - 1) ^ 0x7907A93FLL;
  STACK[0x69F0] = v38;
  v39 = *(unsigned __int8 *)(*(_QWORD *)(v14 + 8 * (v15 - 14789))
                           + (((v37 ^ 0x7C) + ((2 * v37) & 0xF8)) ^ 0xB8)
                           - 8);
  v40 = (((v17 ^ 0x8A2B3C4A) + 1976878006) ^ ((v17 ^ 0xBA7AC751) + 1166358703) ^ ((v17 ^ LODWORD(STACK[0x6C0]))
                                                                                - 1720839726))
      - 116683989;
  v41 = -91 * v40 + 72 - 28 * v40;
  v42 = (((2 * (v17 & 0xFFFFFFFB ^ 0x5D08B808)) | 0xE2AD1336) - (v17 & 0xFFFFFFFB ^ 0x5D08B808) - 1901496731) ^ 0xA173DB1B;
  v43 = ((2 * v42) | 0x99C35146) - v42 - 1289857187;
  v44 = ((2 * (v41 ^ 7)) ^ 0xAC) & (v41 ^ 7) ^ (2 * (v41 ^ 7)) & 0xD6;
  v45 = v44 ^ (a3 - 46);
  v46 = v41 & 0xD1 ^ 0xD6 ^ (v44 ^ 0x96) & (4 * (v41 & 0xD1));
  v47 = (v41 ^ (2 * ((16 * v46) ^ v46 ^ ((16 * v46) ^ 0x40) & ((4 * v45) & 0xD0 ^ ((4 * v45) ^ 0x50) & v45)))) & 0x88 | (-91 * ((((v17 ^ 0x4A) - 74) ^ ((v17 ^ 0x51) - 81) ^ ((v17 ^ LOBYTE(STACK[0x6C0])) - 46)) + 43)) & 1;
  v48 = (v41 ^ 0x91) & (2 * (v41 & 0xD1)) ^ v41 & 0xD1;
  v49 = ((2 * (v41 ^ 0x31)) ^ 0xC0) & (v41 ^ 0x31) ^ (2 * (v41 ^ 0x31)) & 0xE0;
  v50 = (v41 ^ (2
              * (((4 * (v49 ^ (a5 + 17))) & 0xE0 ^ 0x80 ^ ((4 * (v49 ^ (a5 + 17))) ^ 0x80) & (v49 ^ (a5 + 17))) & (16 * ((v49 ^ 0xE0) & (4 * v48) ^ v48)) ^ (v49 ^ 0xE0) & (4 * v48) ^ v48))) & 0x7F ^ 0x1C;
  v51 = *(_BYTE *)(*(_QWORD *)(v14 + 8 * (v15 ^ 0x47A7))
                 + ((*(_BYTE *)(v22 + v38)
                                    + (((((((v50 | 0xE6) - (v50 | 0x19) + 25) ^ 0x22) - 27) ^ ((((v50 | 0xE6)
                                                                                               - (v50 | 0x19)
                                                                                               + 25) ^ 0xEF)
                                                                                             + 42) ^ ((((v50 | 0xE6) - (v50 | 0x19) + 25) ^ 0xE6) + 33))
                                      + (((v47 ^ 0x84) - 109) ^ (v47 + 87) ^ ((v47 ^ 0x2B) + 62))
                                      + 114) & 0xF8)
                                    + 124) ^ 0xD9)
                 - 4)
      - 28;
  v52 = (-1979704246 - (v17 & 0xFFFFFFF4 ^ 0x115AEEB0 | 0x8A001C4A) + (v17 & 0xFFFFFFF4 ^ 0x115AEEB0 | 0x75FFE3B5)) ^ 0xEDFFE395;
  v53 = (STACK[0x6C4] & (2 * v52)) - v52 + 629031383;
  v54 = (((v39 >> 7) | (2 * v39)) ^ 0x6B) << 16;
  LODWORD(v43) = *(unsigned __int8 *)(*(_QWORD *)(v14 + 8 * (v15 ^ 0x41C7))
                                    + ((*(_BYTE *)(v22 + (v43 ^ 0x970C571ELL))
                                                       + (((v43 ^ v16) - 88) ^ ((v43 ^ 0x26) + 57) ^ ((v43 ^ 0x81) - 96))
                                                       * v18
                                                       - 13) ^ 0x28)
                                    - 4);
  v55 = ((v17 & 0xFFFFFFF0 ^ 0x2D793F20) - ((2 * (v17 & 0xFFFFFFF0 ^ 0x2D793F20)) & 0xFEEA8200) - 9092858) & 0xFFFFFFF0 ^ 0x84CC6B1F;
  STACK[0x69A0] = v55;
  v56 = *(unsigned __int8 *)(*(_QWORD *)(v14 + 8 * (v15 - 16100))
                           + ((*(_BYTE *)(v22 + v55)
                                              + (((v17 & 0xF0 ^ 0x20) + 6) & 0xF0 ^ 0x1F) * v18
                                              + 124) ^ 0x12)
                           - 4);
  v57 = v53 ^ LODWORD(STACK[0x6C8]);
  STACK[0x6990] = v57;
  v58 = v34 & 0xFF00FF00 | ((v51 ^ 0x75) << 16) | v43 ^ 0xD ^ (v43 >> 4) & 2;
  LODWORD(v43) = *(unsigned __int8 *)(*(_QWORD *)(v14 + 8 * (v15 ^ 0x4C6E))
                                    + ((*(_BYTE *)(v22 + v57)
                                                       + (((v53 ^ 0xDE) + 50) ^ ((v53 ^ 0x9C) + 116) ^ ((v53 ^ 0x3A) - 42))
                                                       * v18
                                                       + 36) ^ 0x82)
                                    - 4);
  v59 = v54 | ((v56 ^ 0x23) << 24);
  v60 = (v43 >> 4) | (16 * v43);
  v61 = v17 ^ 0x56C01535u;
  STACK[0x6A00] = v61;
  LOBYTE(v43) = *(_BYTE *)(v22 + v61);
  v62 = (v60 >> 2) ^ (v60 >> 1);
  LODWORD(STACK[0x6960]) = v17 & 0xFFFFFFF9;
  v63 = (((2 * (v17 & 0xFFFFFFF9 ^ 0x83EF4908)) | 0xF04FD136) - (v17 & 0xFFFFFFF9 ^ 0x83EF4908) - 2015881371) ^ 0x5267CA59;
  v64 = ((2 * v63) & 0x1C6F939A) - v63 + 1908946482;
  LOBYTE(v43) = v43 + (((v17 ^ 0xAD) - 115) ^ ((v17 ^ 0xDD) - 3) ^ ((v17 ^ 0x45) + 101)) * v18 + 27;
  LOBYTE(v53) = v43 & 0x36 | 9;
  LOBYTE(v43) = v43 ^ (2
                     * ((v43 ^ 0x24) & (2
                                      * ((v43 ^ 0x24) & (2
                                                       * ((v43 ^ 0x24) & (2
                                                                        * ((v43 ^ 0x24) & (2
                                                                                         * ((v43 ^ 0x24) & (2 * ((v43 ^ 0x24) & (2 * v53) ^ v53)) ^ v53)) ^ v53)) ^ v53)) ^ v53)) ^ v53));
  v60 ^= 0x21u;
  v65 = (v62 ^ v60) & 0x19;
  v66 = v62 & 0x66666666 ^ v60 & 0xE6;
  LOBYTE(v62) = *(_BYTE *)(v22 + (v64 ^ 0x8EA748CFLL));
  v67 = (v65 | v66) << 24;
  LODWORD(STACK[0x6A10]) = v17 & 0xFFFFFFFD;
  LOBYTE(v62) = *(_BYTE *)(*(_QWORD *)(v14 + 8 * (v15 ^ 0x4D75))
                         + ((v62
                                            + (((v64 ^ 0xF3) - 85) ^ ((v64 ^ 0x8C) - 42) ^ ((v64 ^ 0xB0) - 22)) * v18
                                            - 83) ^ 0x61)
                         - 8)
              + 62;
  LOBYTE(v66) = *(_BYTE *)(v22
                         + ((((2 * (v17 & 0xFFFFFFFD ^ 0x60A9F77C)) | 0xC2D68932)
                           - (v17 & 0xFFFFFFFD ^ 0x60A9F77C)
                           - 1634419865) ^ 0x5702A6D2))
              + ((((((2 * (v17 & 0xFD ^ 0x7C)) | 0x32) - (v17 & 0xFD ^ 0x7C) + 103) ^ 0xE) - 64) ^ (((((2 * (v17 & 0xFD ^ 0x7C)) | 0x32) - (v17 & 0xFD ^ 0x7C) + 103) ^ 0x41)
                                                                                                  - 15) ^ (((((2 * (v17 & 0xFD ^ 0x7C)) | 0x32) - (v17 & 0xFD ^ 0x7C) + 103) ^ 0x9D) + 45))
              * v18
              - 8;
  LOBYTE(v64) = *(_BYTE *)(*(_QWORD *)(v14 + 8 * (v15 ^ 0x47BD)) + (v66 ^ 0x40) - 12);
  v68 = v67 & 0xFF00FFFF | ((((v43 ^ 0x91)
                                             + *(_BYTE *)(*(_QWORD *)(v14 + 8 * (v15 ^ 0x46A6))
                                                        + (v43 ^ 0xFALL)
                                                        - 12)) ^ 0x51) << 16);
  LODWORD(v43) = (((2 * (v17 & 0xFFFFFFF2 ^ 0x97F3BA60)) & 0x33444A00) - (v17 & 0xFFFFFFF2 ^ 0x97F3BA60) + 1717426931) ^ 0x6CD5CAD3;
  v69 = (v43 | LODWORD(STACK[0x6CC])) - (v43 | 0xBB2FD8E4) - 1154492188;
  STACK[0x6920] = v69 ^ 0x8F6B9866;
  LODWORD(v69) = *(unsigned __int8 *)(v22 + (v69 ^ 0x8F6B9866))
               + (((v69 ^ 0xFFFFFF86) + 60) ^ ((v69 ^ 0xFFFFFFD8) + 102) ^ ((v69 ^ 0x38) - 122)) * v18;
  v70 = v59 & 0xFFFFFF00 | v62;
  LODWORD(STACK[0x6930]) = v17 & 0xFFFFFFFC;
  v71 = ((v17 & 0xFFFFFFFC ^ 0x24B197D0) - ((2 * (v17 & 0xFFFFFFFC ^ 0x24B197D0)) & 0xE3E8690) - 2027994296) ^ 0x8F93474A;
  LODWORD(v69) = ((v69 - 64) & 0x12) - ((2 * (_BYTE)v69 - 120) & 4) + (((v69 - 64) ^ 0x55555555) & 0xED);
  v72 = v68 & 0xFFFFFF00 | v66 ^ 0x2C ^ v64;
  LODWORD(v64) = v17 & 0xFFFFFFF8 ^ 0xF8A793C7;
  v73 = (v64 - 1);
  LOBYTE(v66) = *(_BYTE *)(v22 + (((v71 & 0x6514F70) - (v71 | 0x6514F71)) ^ 0x8353366ALL))
              + (((((v71 & 0x70) - (v71 | 0x71)) ^ 0x19) - 38) ^ ((((v71 & 0x70) - (v71 | 0x71)) ^ 0x43) - 124) ^ ((((v71 & 0x70) - (v71 | 0x71)) ^ 0x30) - 15))
              * v18
              - 7;
  LODWORD(STACK[0x69C0]) = v17 & 0xFFFFFFF1;
  v74 = ((v17 & 0xFFFFFFF1 ^ 0x3E0340F1) - ((2 * (v17 & 0xFFFFFFF1 ^ 0x3E0340F1)) & 0x3CD22322) - 1637281379) ^ LODWORD(STACK[0x6D0]);
  LODWORD(v69) = *(unsigned __int8 *)(*(_QWORD *)(v14 + 8 * (v15 - 15511)) + ((v69 + 2) ^ 0xB2) - 4) ^ (v69 - 106) ^ 0xB8;
  v75 = *(unsigned __int8 *)(*(_QWORD *)(v14 + 8 * (v15 ^ 0x41E3)) + (v66 ^ 0xA4) - 12);
  STACK[0x6900] = v73 ^ 0xAE6786F1;
  v76 = v72 | ((_DWORD)v69 << 8);
  LODWORD(v69) = v75 ^ ((v75 ^ 0x78) >> 5) ^ ((v75 ^ 0x78) >> 3);
  v77 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x472A))
      + ((-119 * ((((v64 - 1) ^ 0xEF) + 97) ^ (v64 - 113) ^ (((v64 - 1) ^ 0x9E) + 18))
                         + *(_BYTE *)(v22 + (v73 ^ 0xAE6786F1))
                         - 123) ^ 0xDELL);
  v78 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x4C05))
      + ((*(_BYTE *)(v22 + ((((2 * v74) & 0x1B23D764) - v74 - 227666867) ^ LODWORD(STACK[0x6D4])))
                         + ((((((2 * v74) & 0x64) - v74 + 77) ^ 0xD9) - 15) ^ (((((2 * v74) & 0x64) - v74 + 77) ^ 0xEE)
                                                                             - 56) ^ (((((2 * v74) & 0x64) - v74 + 77) ^ 0x34)
                                                                                    + 30))
                         * v18
                         + 121) ^ 0xFALL);
  LODWORD(STACK[0x68F0]) = v17;
  v79 = a7
      + ((2 * (v17 & 0xFFFFFFF3 ^ LODWORD(STACK[0x6D8]))) & 0x7999C964)
      - (v17 & 0xFFFFFFF3 ^ LODWORD(STACK[0x6D8]))
      + 2033;
  v80 = (v79 & 0xF101C305 ^ (a4 + 768)) + (v79 & 0xEFE3CFA ^ 0x27E1801) - 1;
  LODWORD(v73) = ((STACK[0x6E0] & (2 * (v17 & a8 ^ 0x915A0C44))) - (v17 & a8 ^ 0x915A0C44) - 1442896995) ^ LODWORD(STACK[0x6DC]);
  v81 = ((2 * (_DWORD)v73) | 0xBB1EFA58) - v73 + 577798868;
  v82 = v70 & 0xFFFF00FF | (((*(_BYTE *)(v78 - 8) - 119) ^ 0x6F) << 8);
  LOBYTE(v78) = *(_BYTE *)(*(_QWORD *)(v14 + 8 * (v15 - 15086))
                         + ((*(_BYTE *)(v22 + (v80 ^ 0xEFC34FA))
                                            + (((v80 ^ 0x5E) - 31) ^ ((v80 ^ 0x8F) + 50) ^ ((v80 ^ 0x2B) - 106)) * v18
                                            - 113) ^ 0x91));
  STACK[0x6910] = v81 ^ 0x32704457;
  LOBYTE(v80) = *(_BYTE *)(v22 + (v81 ^ 0x32704457))
              + (((v81 ^ 0x50) - 100) ^ ((v81 ^ 0xBB) + 113) ^ ((v81 ^ 0xBC) + 120)) * v18
              + 119;
  LOBYTE(v81) = (v80 ^ 0x6F) + (v80 ^ 0x46);
  v83 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x4506)) + (v80 ^ 0x9DLL);
  LODWORD(v77) = *(unsigned __int8 *)(v77 - 4);
  v84 = v76 ^ v82;
  v85 = v82 ^ v58;
  LODWORD(v78) = ((((v78 ^ (16 * v78)) ^ 0x4B) << 16) | (((~(_BYTE)v81
                                                                                           + *(_BYTE *)(v83 - 8)) ^ 0x90) << 8) | v77 | ((v69 ^ v19) << 24)) ^ 0xC9;
  LODWORD(v69) = v78 ^ v85;
  LOWORD(v76) = v78 ^ v85 ^ 0xE566;
  LODWORD(v83) = ((((v78 ^ v85) ^ 0x66)
                 + ((v78 ^ v85) ^ 0x66 ^ LODWORD(STACK[0x6E4]))
                 + 1) ^ 0xFFFFFFF8)
               + ((v78 ^ v85) ^ 0x66);
  LODWORD(v81) = v78 ^ v58;
  v86 = v78 ^ v84;
  v87 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x4452)) - 4;
  HIDWORD(v88) = *(_DWORD *)(v87 + 4 * (((v78 ^ v84) >> 16) ^ 0xEAu));
  LODWORD(v88) = HIDWORD(v88);
  LODWORD(v78) = v78 ^ v84 ^ v85;
  v89 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x4CF4)) - 4;
  v90 = *(_DWORD *)(v89 + 4 * (BYTE1(v78) ^ 0x69u));
  v91 = v89;
  STACK[0x6860] = v89;
  v92 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x4D3B)) - 12;
  LODWORD(v81) = v81 ^ v78;
  v93 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x44DA));
  v94 = (*(_DWORD *)(v93 + 4 * (BYTE3(v81) ^ 0x52)) + 552565090) ^ (v88 >> 28) ^ (8 * (v88 >> 28)) & 0xCC2B7E10 ^ v90 ^ *(_DWORD *)(v92 + 4 * (v69 ^ 0xBFu)) ^ v83;
  LOBYTE(v77) = v84 ^ v77;
  HIDWORD(v88) = *(_DWORD *)(v87 + 4 * (BYTE2(v69) ^ 0x92u));
  LODWORD(v88) = HIDWORD(v88);
  v95 = (8 * (v88 >> 28)) & 0xCC2B7E10 ^ (v88 >> 28);
  LODWORD(v83) = *(_DWORD *)(v93 + 4 * (BYTE3(v78) ^ 5)) + 552565090;
  v96 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x405B)) - 8;
  LODWORD(v69) = (*(_DWORD *)(v93 + 4 * (BYTE3(v69) ^ 0xF2)) + 552565090) ^ v78 ^ 0x11163E0F ^ *(_DWORD *)(v92 + 4 * (v78 ^ 0x22u)) ^ (*(_DWORD *)(v96 + 4 * (((v81 ^ 0x360B7140) >> 16) ^ 0x17u)) + 1573948415);
  v97 = v86 ^ 0xAE364779;
  v98 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x46FE));
  STACK[0x6A90] = v98;
  v99 = v69 ^ (*(_DWORD *)(v98 + 4 * (BYTE1(v97) ^ 0xCBu)) + 1440747074);
  v100 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x45DB)) - 4;
  LODWORD(v69) = *(_DWORD *)(v100 + 4 * (HIBYTE(v97) - ((v97 >> 23) & 0x7E) + 63));
  STACK[0x6AB0] = v100;
  v101 = *(_QWORD *)(v14 + 8 * (v15 - 16026));
  STACK[0x68A0] = v101;
  v102 = *(_QWORD *)(v14 + 8 * (v15 - 15096)) - 12;
  v103 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x427C)) - 4;
  v104 = (*(_DWORD *)(v101 + 4 * (BYTE2(v78) ^ 0x4Du)) - 1804976395) ^ (BYTE1(v76) - 1520112775) ^ v69 ^ *(_DWORD *)(v102 + 4 * (BYTE1(v76) ^ 0x82u)) ^ *(_DWORD *)(v103 + 4 * (v81 ^ 0x9Fu));
  v105 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x4026)) - 12;
  LODWORD(v77) = *(_DWORD *)(v105 + 4 * v77);
  LODWORD(v78) = *(_DWORD *)(v102 + 4 * (((unsigned __int16)(v81 ^ 0x7140) >> 8) ^ 0x82u));
  STACK[0x6A70] = v102;
  v106 = v77 ^ 0xCA7F401D ^ (((unsigned __int16)(v81 ^ 0x7140) >> 8) - 1520112775) ^ (8 * (v77 ^ 0xCA7F401D)) ^ v78 ^ (32 * (v77 ^ 0xCA7F401D));
  LODWORD(v88) = __ROR4__(v99, 14) ^ 0x1C4B6175;
  HIDWORD(v88) = v88;
  v107 = v88 >> 18;
  v108 = v106 ^ (v95 + v83 - 2 * (v95 & v83));
  v109 = v107 ^ 0x7926FEC3;
  if (!HIBYTE(v97))
    v109 = 1931703432;
  v110 = (v109 | v107 ^ LODWORD(STACK[0x6E8])) ^ (v107 ^ LODWORD(STACK[0x6E8])) & 0x73237488;
  HIDWORD(v111) = *(_DWORD *)(v87 + 4 * (BYTE2(v104) ^ 0xAu));
  LODWORD(v111) = HIDWORD(v111);
  v112 = *(_DWORD *)(v91 + 4 * (BYTE1(v108) ^ 0xF0u)) ^ (*(_DWORD *)(v93 + 4 * (HIBYTE(v94) ^ 0x4D)) + 552565090) ^ (v111 >> 28) ^ (8 * (v111 >> 28)) & 0xCC2B7E10 ^ *(_DWORD *)(v103 + 4 * (v110 ^ 0x57u));
  v113 = v110 ^ 0x73237488;
  v114 = (v110 ^ 0x73237488) >> 24;
  v115 = *(_QWORD *)(v14 + 8 * (v15 ^ 0x40D6)) - 8;
  HIDWORD(v111) = *(_DWORD *)(v115 + 4 * (BYTE1(v104) ^ 0xEEu));
  LODWORD(v111) = HIDWORD(v111);
  v116 = v111 >> 1;
  v117 = 4 * (3 * v116 - ((2 * v116) & (4 * v116)));
  v118 = (v117 ^ (-4 * (3 * v116 - ((2 * v116) & (4 * v116)))) ^ (v116 - (v117 ^ v116))) + v116;
  v119 = *(_DWORD *)(v93 + 4 * (HIBYTE(v108) ^ 0xCB));
  HIDWORD(v111) = *(_DWORD *)(v87
                            + 4
                            * (((((v94 ^ 0x29771F34) >> 16)
                               + (((v94 ^ 0x29771F34) >> 16) ^ 0xFFFFFF23)
                               + 1) ^ 0xFFFFFFF8)
                             + ((v94 ^ 0x29771F34) >> 16)));
  LODWORD(v111) = HIDWORD(v111);
  v120 = (8 * (v111 >> 28)) & 0xCC2B7E10 ^ (v111 >> 28) ^ *(_DWORD *)(v103 + 4 * (v108 ^ 0xC8u)) ^ v118 ^ *(_DWORD *)(v100 + 4 * ((v114 & 0x40 | 0x3F) ^ v114 & 0xFFFFFFBF));
  HIDWORD(v111) = *(_DWORD *)(v87
                            + 4
                            * ((((HIWORD(v110) | 0xFFFFFF00) + (BYTE2(v110) ^ 0x23) + 1) ^ 0xFFFFFFF8)
                             + (BYTE2(v110) ^ 0x23)));
  LODWORD(v111) = HIDWORD(v111);
  v121 = v111 >> 28;
  HIDWORD(v111) = *(_DWORD *)(v115 + 4 * (BYTE1(v94) ^ 0x29u));
  LODWORD(v111) = HIDWORD(v111);
  v122 = (8 * v121) & 0xCC2B7E10 ^ v121 ^ (v111 >> 1) ^ (((2 * v119) & 0x41DEF2C4) + (v119 ^ 0x20EF7962)) ^ (4 * (v111 >> 1)) ^ (8 * (v111 >> 1));
  LODWORD(v111) = __ROR4__(HIBYTE(v97) ^ 0xF6C43E34 ^ v104, 3) ^ 0xAF53B689;
  HIDWORD(v111) = v111;
  v123 = v111 >> 29;
  LODWORD(STACK[0x68D0]) = v123;
  v124 = (unint64_t)*(&off_1015B46D0 + (v15 ^ 0x41B5));
  STACK[0x6890] = v124;
  v125 = v122 ^ __ROR4__(*(_DWORD *)(v124 + 4 * (v123 ^ 0x8C598AD1)), 28);
  v126 = (unint64_t)*(&off_1015B46D0 + v15 - 17541) - 4;
  v127 = v113 >> 8;
  v128 = (BYTE1(v113) - 57 * ((9 * BYTE1(v113)) >> 9));
  v129 = *(_DWORD *)(v126 + 4 * (HIBYTE(v104) ^ 0x6D)) ^ ((HIBYTE(v104) ^ 0xFB) - 1510119615) ^ (*(_DWORD *)(v96 + 4 * (BYTE2(v108) ^ 0xE5u))
                                                                                                 + 1573948415);
  HIDWORD(v111) = *(_DWORD *)(v115
                            + 4 * ((((v127 - v128) ^ v128) + 2 * ((v127 - v128) & v128)) ^ 0x36));
  LODWORD(v111) = HIDWORD(v111);
  v130 = (v111 >> 1) ^ (8 * (v111 >> 1)) ^ (4 * (v111 >> 1));
  v131 = *(_DWORD *)(v92 + 4 * (v94 ^ 0xEDu)) ^ v94 ^ 0x34 ^ (v130
                                                                                                + v129
                                                                                                - 2 * (v130 & v129));
  v132 = (v112 ^ 0xDBF628B1) >> 24;
  v133 = v132 - 1510119615;
  v134 = *(_DWORD *)(v126 + 4 * (v132 ^ 0x96));
  v135 = v126;
  STACK[0x6840] = v126;
  v136 = v96;
  v137 = *(_DWORD *)(v105 + 4 * (v114 ^ 0xBA ^ v120)) ^ 0xCA7F401D;
  v138 = v134 ^ v133 ^ *(_DWORD *)(v102 + 4 * (((unsigned __int16)(v125 ^ 0x857D) >> 8) ^ 0x82u)) ^ v137 ^ (*(_DWORD *)(v96 + 4 * (BYTE2(v131) ^ 0x54u)) + 1573948415) ^ (8 * v137) ^ (32 * v137) ^ (((unsigned __int16)(v125 ^ 0x857D) >> 8) - 1520112775);
  v139 = *(_DWORD *)(v96 + 4 * (BYTE2(v112) ^ 0xE1u)) + 1573948415;
  v140 = (char *)*(&off_1015B46D0 + (v15 ^ 0x45D6)) - 4;
  v141 = ((HIBYTE(v120) ^ 0x40) - 1213466849) ^ *(_DWORD *)&v140[4 * (HIBYTE(v120) ^ 0xB3)] ^ v125 ^ 0x7D ^ *(_DWORD *)(v92 + 4 * (v125 ^ 0xA4u)) ^ ((v139 | 0x97A64C7) - ((v139 | 0x97A64C7) ^ v139)) ^ (*(_DWORD *)(STACK[0x6A90] + 4 * (BYTE1(v131) ^ 0xD4u)) + 1440747074);
  v142 = (2 * ((HIBYTE(v125) ^ 0x11) & 0x1F) + (HIBYTE(v125) ^ 0xB7ABF70E)) ^ HIBYTE(v125) ^ 0x11 ^ (*(_DWORD *)(v96 + 4 * (BYTE2(v120) ^ 0x36u)) + 1573948415);
  v143 = STACK[0x6A90];
  LODWORD(v126) = *(_DWORD *)(v105 + 4 * (v131 ^ 0x3Fu)) ^ 0xCA7F401D;
  v144 = v142 ^ v126 ^ (8 * v126) ^ (32 * v126) ^ *(_DWORD *)&v140[4 * (HIBYTE(v125) ^ 0xE2)] ^ (*(_DWORD *)(STACK[0x6A90] + 4 * ((unsigned __int16)(v112 ^ 0x28B1) >> 8))
                                                                                               + 1440747074);
  v145 = *(_DWORD *)(v92 + 4 * (v112 ^ 0x68u));
  HIDWORD(v111) = *(_DWORD *)(v87 + 4 * (BYTE2(v125) ^ 0x4Du));
  LODWORD(v111) = HIDWORD(v111);
  LODWORD(v126) = (v111 >> 28) ^ (8 * (v111 >> 28)) & 0xCC2B7E10;
  HIDWORD(v111) = *(_DWORD *)(v115 + 4 * ((BYTE1(v120) ^ 0xB1) - ((2 * (BYTE1(v120) ^ 0xB1)) & 0x6Cu) + 54));
  LODWORD(v111) = HIDWORD(v111);
  v146 = (*(_DWORD *)(v93 + 4 * (HIBYTE(v131) ^ 0x34)) + 552565090) ^ v126 ^ (v111 >> 1) ^ (4 * (v111 >> 1)) ^ (8 * (v111 >> 1)) ^ ((v145 & 0xD252210 | ((v112 ^ 0xE3CCE3AA) + (v112 ^ 0x11163E45 | 0xD252210) + 1) & 4) ^ ((v112 ^ 0xE3CCE3AA) + (v112 ^ 0x11163E45 | 0xD252210) + 1) & 0x1043FFB | v145 & 0xF2DADDEF ^ (v112 ^ 0x11163E45) & 0x10121CEF);
  v147 = (char *)*(&off_1015B46D0 + v15 - 15246) - 4;
  v148 = *(_DWORD *)&v147[4 * (((v146 ^ 0xA9488B18) >> 16) - (((v146 ^ 0xA9488B18) >> 15) & 0xFC))
                        + 504];
  v149 = *(_DWORD *)(v93 + 4 * (HIBYTE(v138) ^ 0x53));
  v150 = (v148 ^ 0xC636EA55)
       + (((v146 ^ 0xA9488B18) >> 16) ^ 0xCBE899E4)
       + ((2 * v148) & 0x8C6DD4AA)
       + 969479596;
  v151 = ((v149 + 552565090) ^ (-552565090 - v149) ^ (v150 - (v150 ^ (v149 + 552565090)))) + v150;
  STACK[0x6850] = v87;
  HIDWORD(v111) = *(_DWORD *)(v87 + 4 * (BYTE2(v138) ^ 0x59u));
  LODWORD(v111) = HIDWORD(v111);
  v152 = (8 * (v111 >> 28)) & 0xCC2B7E10 ^ (v111 >> 28);
  STACK[0x6810] = v105;
  LODWORD(v126) = *(_DWORD *)(v105 + 4 * (HIBYTE(v120) ^ 0xF6 ^ v141)) ^ 0xCA7F401D;
  v153 = STACK[0x6860];
  v154 = v126 ^ *(_DWORD *)(STACK[0x6860] + 4 * (BYTE1(v144) ^ 0xB2u)) ^ (8 * v126) ^ (32 * v126) ^ v151;
  HIDWORD(v111) = *(_DWORD *)(v87 + 4 * (BYTE2(v141) ^ 0x80u));
  LODWORD(v111) = HIDWORD(v111);
  v155 = v111 >> 28;
  v156 = v155 ^ LODWORD(STACK[0x6EC]);
  if (v112 == 0xB1)
    v156 = 428175298;
  v157 = *(_DWORD *)(v93 + 4 * (HIBYTE(v141) ^ 0x97)) + 552565090;
  v158 = v157 & 0x200;
  if (((unsigned __int16)v152 & v157 & 0x200) != 0)
    v158 = -v158;
  v159 = *(_DWORD *)(v153 + 4 * (BYTE1(v146) ^ 0x93u)) ^ v157 & 0xFFFFFDFF ^ *(_DWORD *)(v103
                                                                                         + 4
                                                                                         * (v144 ^ 0x53u)) ^ (v158 + v152);
  v160 = v156 & v155;
  v161 = v146 ^ 0x18 ^ ((HIBYTE(v144) ^ 0x54) - 1510119615) ^ v155 ^ *(_DWORD *)(v135
                                                                                                + 4
                                                                                                * (HIBYTE(v144) ^ 0xC2));
  v162 = *(unsigned int *)(v143 + 4 * (BYTE1(v138) ^ 0xF3u));
  STACK[0x68B0] = v162;
  STACK[0x6820] = v92;
  v163 = v161 ^ (v162 + 1440747074) ^ *(_DWORD *)(v92 + 4 * (v146 ^ 0xC1u));
  STACK[0x6880] = v136;
  v164 = *(_DWORD *)(v136 + 4 * (BYTE2(v144) ^ 0x99u));
  v165 = *(_DWORD *)(v93 + 4 * (HIBYTE(v146) ^ 0xCD));
  STACK[0x6870] = v93;
  v166 = v163 ^ (8 * v160);
  v167 = v164 + 1573948415;
  v168 = *(_DWORD *)(v105 + 4 * (v138 ^ 0x5Fu)) ^ 0xCA7F401D;
  v169 = (v165 + 552565090) ^ v167 ^ *(_DWORD *)(v153 + 4 * (BYTE1(v141) ^ 0xE3u)) ^ v168 ^ (8 * v168) ^ (32 * v168);
  v170 = (v154 ^ 0xECCF8AEu) >> 24;
  v171 = (v170 - 1213466849) & 0x827C8 ^ v170 & 0xC8;
  v172 = (v170 - 1213466849) & 0xB7A3D837 ^ v170 & 0x37;
  v173 = *(_DWORD *)&v140[4 * (v170 ^ 0xF3)];
  v174 = STACK[0x6A70];
  v175 = STACK[0x68A0];
  v176 = (*(_DWORD *)(STACK[0x68A0] + 4 * (BYTE2(v169) ^ 0xB1u)) - 1804976395) ^ *(_DWORD *)(STACK[0x6A70]
                                                                                             + 4
                                                                                             * (((unsigned __int16)(v166 ^ 0x6BE3) >> 8) ^ 0x82u)) ^ (((unsigned __int16)(v166 ^ 0x6BE3) >> 8) - 1520112775) ^ *(_DWORD *)(v103 + 4 * (v159 ^ 0x87u)) ^ (v172 | v171) & v173 ^ (v172 | v171 | v173);
  v177 = (((v159 ^ 0xB2A57D58) >> 16) ^ 0xCBE899E4)
       + *(_DWORD *)&v147[4 * (((v159 ^ 0xB2A57D58) >> 16) ^ 0x7E)];
  v178 = v169 ^ 0x9EB75E7F;
  HIDWORD(v179) = *(_DWORD *)(v115 + 4 * (BYTE1(v159) ^ 0x4Bu));
  LODWORD(v179) = HIDWORD(v179);
  v180 = (HIBYTE(v178) - 1213466849) ^ HIBYTE(v178) ^ (*(_DWORD *)(v136
                                                                 + 4
                                                                 * (((v166 ^ 0x342E6BE3u) >> 16) ^ 0x17u))
                                                     + 1573948415) ^ *(_DWORD *)&v140[4 * (HIBYTE(v178) ^ 0xF3)] ^ (v179 >> 1) ^ *(_DWORD *)(v92 + 4 * (v154 ^ 0x77u)) ^ (4 * (v179 >> 1)) ^ (8 * (v179 >> 1));
  v181 = STACK[0x6890];
  v182 = v153;
  v183 = ((v159 ^ 0xB2A57D58) >> 24) ^ LODWORD(STACK[0x6F0]) ^ (((v159 ^ 0xB2A57D58) >> 24) - 1213466849) ^ *(_DWORD *)&v140[4 * (((v159 ^ 0xB2A57D58) >> 24) ^ 0xF3)] ^ __ROR4__(*(_DWORD *)(STACK[0x6890] + 4 * (v166 ^ 0x4Bu)), 28) ^ *(_DWORD *)(v153 + 4 * (((unsigned __int16)(v169 ^ 0x5E7F) >> 8) ^ 0x18u)) ^ ((((v154 ^ 0xECCF8AEu) >> 16) ^ 0xCBE899E4) + *(_DWORD *)&v147[4 * (((v154 ^ 0xECCF8AEu) >> 16) ^ 0x7E)] + 1);
  HIDWORD(v179) = v154 ^ 0x11163E5A;
  LODWORD(v179) = HIDWORD(v179);
  v184 = (v179 >> 6) ^ __ROR4__(v180 ^ 0x760E5DC6, 6);
  v185 = STACK[0x6AB0];
  v186 = ((v166 ^ 0x342E6BE3u) >> 24) ^ *(_DWORD *)(STACK[0x6AB0] + 4 * (((v166 ^ 0x342E6BE3u) >> 24) ^ 0x3F)) ^ *(_DWORD *)(v182 + 4 * (BYTE1(v154) ^ 0xE0u));
  STACK[0x6800] = v103;
  v187 = v186 ^ (v177 + 1) ^ *(_DWORD *)(v103 + 4 * (v169 ^ 0xA0u)) ^ 0x6F0B17A2;
  v188 = v187 - ((2 * v187) & 0xFFD0BF9E);
  v189 = (v176 ^ 0x9F384ED3) >> 24;
  v190 = (v189 - 1213466849) & 2;
  if ((v190 & v189) != 0)
    v190 = -v190;
  v191 = v188 + 2145935311;
  HIDWORD(v193) = v184 ^ 0xBAB862AE;
  LODWORD(v193) = v184 ^ 0xBAB862AE;
  v192 = v193 >> 26;
  LODWORD(v193) = __ROR4__(v183, 3) ^ 0x36FFEB54;
  HIDWORD(v193) = v193;
  v194 = v193 >> 29;
  v195 = (*(_DWORD *)(v175 + 4 * (BYTE2(v192) ^ 0xF3u)) - 1804976395) ^ (v189 - 1213466849) & 0xB7ABFFFD ^ *(_DWORD *)&v140[4 * (v189 - (((v176 ^ 0x9F384ED3) >> 23) & 0x1E6)) + 972] ^ *(_DWORD *)(v182 + 4 * (BYTE1(v191) ^ 0x18u)) ^ (v190 + v189) ^ __ROR4__(*(_DWORD *)(v181 + 4 * ((v193 >> 29) ^ 0xA8u)), 28);
  v196 = v192 ^ 0x92F52C57;
  HIDWORD(v193) = *(_DWORD *)(v115 + 4 * (BYTE1(v196) ^ 0x36u));
  LODWORD(v193) = HIDWORD(v193);
  v197 = (v193 >> 1) ^ (8 * (v193 >> 1)) ^ (4 * (v193 >> 1)) ^ (*(_DWORD *)(v93 + 4 * (HIBYTE(v194) ^ 0x64))
                                                              + 552565090) ^ (*(_DWORD *)(v175
                                                                                        + 4 * (BYTE2(v176) ^ 0x3Eu))
                                                                            - 1804976395) ^ *(_DWORD *)(v103 + 4 * (v191 ^ 0xDFu));
  v198 = __ROR4__((BYTE1(v176) ^ 0x4E) - 1520112775, 9) ^ 0x6030D9CB ^ __ROR4__(*(_DWORD *)(v174 + 4 * (BYTE1(v176) ^ 0xCCu)), 9);
  v199 = HIBYTE(v196);
  v200 = HIBYTE(v196) - 1213466849;
  if ((v194 & 0xFF0000) != 0)
    v201 = ~(HIBYTE(v196) ^ v200);
  else
    v201 = HIBYTE(v196);
  v202 = *(_DWORD *)(v185 + 4 * (HIBYTE(v191) ^ 0x3F)) ^ HIBYTE(v191) ^ ((BYTE2(v194) ^ 0xCBE899E4)
                                                                         + *(_DWORD *)&v147[4 * (BYTE2(v194) ^ 0x7E)]
                                                                         + 1);
  v203 = STACK[0x6810];
  v204 = *(_DWORD *)(STACK[0x6810] + 4 * (v196 ^ 0xB0u)) ^ 0xCA7F401D;
  v205 = v202 ^ v204 ^ __ROR4__(v198, 23) ^ (8 * v204) ^ (32 * v204);
  v206 = (v197 ^ 0x22FEBE47u) >> (v167 & 0x10) >> (v167 & 0x10 ^ 0x10);
  v207 = STACK[0x6A90];
  v208 = (*(_DWORD *)(STACK[0x6A90] + 4 * (BYTE1(v194) ^ 0xCBu)) + 1440747074) ^ ((BYTE2(v191) ^ 0xCBE899E4)
                                                                                  + *(_DWORD *)&v147[4 * (BYTE2(v191) ^ 0x7E)]
                                                                                  + 1) ^ *(_DWORD *)&v140[4 * (v199 ^ 0xF3)] ^ __ROR4__(*(_DWORD *)(v181 + 4 * ((v176 ^ 0xD3 ^ -(v176 ^ 0xD3) ^ ((v176 ^ 0xFFFFFF84) + 169)) + 168)), 28) ^ (v200 + v199 + 2 * (v201 & v200) - 4 * (v201 & v200));
  v209 = v195 ^ 0x6184218C;
  v210 = STACK[0x6840];
  v211 = STACK[0x6850];
  HIDWORD(v212) = *(_DWORD *)(STACK[0x6850] + 4 * (BYTE2(v208) ^ 0xEEu));
  LODWORD(v212) = HIDWORD(v212);
  v213 = *(_DWORD *)(STACK[0x6840] + 4 * (HIBYTE(v209) ^ 0x96)) ^ (HIBYTE(v209) - 1510119615) ^ (v212 >> 28) ^ (8 * (v212 >> 28)) & 0xCC2B7E10;
  v214 = v205 ^ LODWORD(STACK[0x6F4]);
  STACK[0x6830] = v115;
  HIDWORD(v212) = *(_DWORD *)(v115 + 4 * (BYTE1(v214) ^ 0x89u));
  LODWORD(v212) = HIDWORD(v212);
  v215 = v212 >> 1;
  LODWORD(v212) = HIDWORD(v212);
  v216 = (v212 >> 7) ^ __ROR4__(v213, 6);
  v217 = (((2 * v215) & 0xF762E012 ^ v215) & 0x246DAF42 ^ (2 * v215) & 0xD0F40)
       + (((2 * v215) & 0xF762E012 ^ v215) & 0x1B9250BD ^ (2 * v215) & STACK[0x6F8]);
  HIDWORD(v212) = *(_DWORD *)(v115 + 4 * (BYTE1(v208) ^ 0x93u));
  LODWORD(v212) = HIDWORD(v212);
  v218 = *(_DWORD *)(v210 + 4 * (((v197 ^ 0x22FEBE47u) >> 24) ^ 0x96)) ^ (((v197 ^ 0x22FEBE47u) >> 24) - 1510119615) ^ (v212 >> 1) ^ (4 * (v212 >> 1)) ^ (8 * (v212 >> 1)) ^ __ROR4__(*(_DWORD *)(v181 + 4 * (v214 ^ 0x46u)), 28) ^ (*(_DWORD *)(v175 + 4 * (BYTE2(v195) ^ 0x82u)) - 1804976395);
  v219 = *(_DWORD *)(STACK[0x6820] + 4 * (v208 ^ 0x16u));
  if ((v219 & 0x800) != 0)
    v220 = -2048;
  else
    v220 = 2048;
  v221 = v220 + v219;
  HIDWORD(v223) = *(_DWORD *)(v181 + 4 * (v197 ^ 0xEFu));
  LODWORD(v223) = HIDWORD(v223);
  v222 = v223 >> 28;
  LODWORD(v223) = __ROR4__(v216 ^ 0xE5394D87, 26);
  v224 = (v222 ^ v223 ^ (4 * v217) ^ 0x4E5361F9) - ((2 * (v222 ^ v223 ^ (4 * v217) ^ 0x4E5361F9)) & 0x499CD106);
  v225 = v208 ^ 0x6032A5CF;
  v226 = (((v205 ^ 0x20A3AB08u) >> 24) - 1510119615) ^ (BYTE1(v209) - 1520112775) ^ v225 ^ *(_DWORD *)(v210 + 4 * (((v205 ^ 0x20A3AB08u) >> 24) ^ 0x96)) ^ *(_DWORD *)(STACK[0x6A70] + 4 * (BYTE1(v209) - ((v209 >> 7) & 0x104) + 130)) ^ (*(_DWORD *)(v175 + 4 * (v206 ^ 6u)) - 1804976395) ^ v221;
  v227 = STACK[0x6800];
  v228 = *(_DWORD *)(STACK[0x6800] + 4 * (v195 ^ 0x53u));
  v229 = *(_DWORD *)(v210 + 4 * (HIBYTE(v225) ^ 0x96)) ^ (HIBYTE(v225) - 1510119615) ^ *(_DWORD *)(v182 + 4 * (BYTE1(v197) ^ 0xA6u)) ^ v228 & 0xFFFBFFFF ^ (v228 & 0x40000 | 0x401A5597) ^ (((((v205 ^ 0x20A3AB08u) >> 16) + (((v205 ^ 0x20A3AB08u) >> 16) ^ 0xCBE899E4) + 1) ^ 1) - ((v205 ^ 0x20A3AB08u) >> 16) + *(_DWORD *)&v147[4 * (((v205 ^ 0x20A3AB08u) >> 16) ^ 0x7E)] + 1);
  v230 = v224 + 617506947;
  v231 = v226 ^ 0xA6DEC5A3;
  v232 = (HIBYTE(v230) - 1510119615) ^ (*(_DWORD *)(v175 + 4 * (BYTE2(v229) ^ 0xFEu)) - 1804976395) ^ *(_DWORD *)(STACK[0x6A70] + 4 * (BYTE1(v231) ^ 0x82u)) ^ (BYTE1(v231) - 1520112775) ^ *(_DWORD *)(v210 + 4 * (HIBYTE(v230) ^ 0x96));
  v233 = *(_DWORD *)(v203 + 4 * (v218 ^ 0xE1u)) ^ 0xCA7F401D;
  v234 = v232 + (v233 ^ (32 * v233) ^ (8 * v233)) - 2 * (v232 & (v233 ^ (32 * v233) ^ (8 * v233)));
  v235 = *(_DWORD *)&v140[4 * (HIBYTE(v231) ^ 0xF3)] ^ (HIBYTE(v231) - 1213466849) ^ (*(_DWORD *)(STACK[0x6880]
                                                                                                + 4
                                                                                                * (BYTE2(v218) ^ 0x8Eu))
                                                                                    + 1573948415);
  v236 = ((HIBYTE(v218) ^ 0xFC) - 1213466849) ^ HIBYTE(v218) ^ 0xFC ^ *(_DWORD *)&v140[4 * (HIBYTE(v218) ^ 0xF)] ^ *(_DWORD *)(v182 + 4 * (BYTE1(v229) ^ 0xC3u));
  v237 = v211;
  HIDWORD(v223) = *(_DWORD *)(v211 + 4 * (BYTE2(v230) ^ 0xDCu));
  LODWORD(v223) = HIDWORD(v223);
  v238 = v236 ^ (v223 >> 28) ^ *(_DWORD *)(STACK[0x6800] + 4 * (v226 ^ 0x7Cu)) ^ (8 * (v223 >> 28)) & 0xCC2B7E10;
  v239 = v235 ^ ((v226 ^ 0xA6DEC5A3) >> 24);
  v240 = (v239 ^ 0xFBFFFFFF) + (v239 | 0x4000000);
  v241 = *(_DWORD *)(v207 + 4 * (BYTE1(v230) ^ 0xCBu)) + 1440747074;
  if (((v240 + 1) & v241) != 0)
    v242 = ~v240;
  else
    v242 = v240 + 1;
  v243 = v242 + v241;
  v244 = (v235 | 0xFBFFFFFF) + (v239 ^ 0x4000000);
  HIDWORD(v245) = v229 ^ LODWORD(STACK[0x6FC]);
  LODWORD(v245) = HIDWORD(v245);
  v246 = *(_DWORD *)(v181 + 4 * (__ROR4__((v245 >> 4) & 0xF000000F ^ 0x1CAF27D5, 28) ^ 0xCAF27DF9));
  v247 = ((v243 ^ -v243 ^ (v244 + 1 - v243 + (v244 ^ (v244 + 1) ^ (v243 - (v243 ^ (v244 + 1)))) + 1)) + v244 + 1) ^ ((v246 >> (STACK[0x68B0] & 0x1C) >> (STACK[0x68B0] & 0x1C ^ 0x1C)) | (16 * v246));
  v248 = *(_DWORD *)&v140[4 * (HIBYTE(HIDWORD(v245)) - ((HIDWORD(v245) >> 23) & 0x1E6)) + 972] ^ (HIBYTE(HIDWORD(v245))
                                                                                                - 1213466849
                                                                                                + HIBYTE(HIDWORD(v245))
                                                                                                - 2
                                                                                                * ((HIBYTE(HIDWORD(v245))
                                                                                                  - 1213466849) & HIBYTE(HIDWORD(v245)))) ^ (*(_DWORD *)(STACK[0x6880] + 4 * (BYTE2(v231) ^ 0x17u)) + 1573948415) ^ (*(_DWORD *)(v207 + 4 * (BYTE1(v218) ^ 0x91u)) + 1440747074) ^ __ROR4__(*(_DWORD *)(v181 + 4 * (v230 ^ 0xA8u)), 28);
  v249 = *(_DWORD *)(STACK[0x6870] + 4 * (HIBYTE(v234) ^ 0xD1));
  v250 = v248 ^ 0xD34A8440;
  v251 = *(_DWORD *)(v175 + 4 * (((v248 ^ 0xD34A8440) >> 16) ^ 6u)) - 1804976395;
  v252 = v249 + 552565090 + v251 - 2 * ((v249 + 552565090) & v251);
  v253 = *(_DWORD *)(v175 + 4 * (BYTE2(v234) ^ 0xB5u));
  v254 = ((2 * v253) & 0x28D47DEA) + (v253 ^ 0x946A3EF5);
  v255 = v247 ^ 0x767E3374;
  v256 = (v247 ^ 0x767E3374u) >> 24;
  v257 = *(_DWORD *)(STACK[0x6830] + 4 * (BYTE1(v247) ^ 5u));
  v258 = *(_DWORD *)(v210 + 4 * (HIBYTE(v238) ^ 0x4B)) ^ ((~(v238 >> 23) & 0x82) + (HIBYTE(v238) ^ 0xA5FD679C)) ^ (((unsigned __int16)(v248 ^ 0x8440) >> 8) - 1520112775) ^ *(_DWORD *)(STACK[0x6A70] + 4 * (((unsigned __int16)(v248 ^ 0x8440) >> 8) ^ 0x82u)) ^ v254 ^ *(_DWORD *)(STACK[0x6820] + 4 * (v247 ^ 0xADu));
  HIDWORD(v245) = *(_DWORD *)(STACK[0x6830] + 4 * (BYTE1(v234) ^ 0x47u));
  LODWORD(v245) = HIDWORD(v245);
  v259 = v245 >> 1;
  v260 = (v259 << (((v248 ^ 0xD34A8440) >> 16) & 1) << !((v248 ^ 0xD34A8440) & 0x10000)) ^ v259;
  v261 = (*(_DWORD *)(v175 + 4 * (BYTE2(v238) ^ 0xA6u)) - 1804976395) ^ (v256 - 1510119615) ^ ((4 * v260) & 0x485BCAA8 ^ v259 & 0x485BCAAA | (4 * v260) & 0xB7A43554 ^ v259 & 0xB7A43555) ^ *(_DWORD *)(v210 + 4 * ((((v256 ^ 0x415E2876) + (v256 | 0xBEA1D789) + 1) ^ 0x80) + (v256 & 0x76 ^ 0x16)));
  v262 = *(_DWORD *)(v227 + 4 * (v248 ^ 0x9Fu)) ^ 0x401A5597;
  HIDWORD(v245) = v257;
  LODWORD(v245) = v257;
  v263 = (v262 ^ -v262 ^ (v261 - (v261 ^ v262))) + v261;
  v264 = *(_DWORD *)(v227 + 4 * (v238 ^ 0x90u)) ^ 0x401A5597 ^ (v245 >> 1) ^ (4 * (v245 >> 1)) ^ (8 * (v245 >> 1)) ^ v252;
  HIDWORD(v245) = *(_DWORD *)(v237 + 4 * (BYTE2(v255) ^ 0xDCu));
  LODWORD(v245) = HIDWORD(v245);
  v265 = v245 >> 28;
  v266 = *(_DWORD *)(STACK[0x6AB0] + 4 * (HIBYTE(v250) ^ 0x3F)) ^ HIBYTE(v250) ^ (*(_DWORD *)(v207
                                                                                              + 4
                                                                                              * (BYTE1(v238) ^ 0x4Du))
                                                                                  + 1440747074) ^ v265;
  v267 = (8 * v265) & 0xCC2B7E10;
  v268 = v264 - ((2 * v264) & 0xC304BAFE) + 1635933567;
  v269 = v266 ^ v267 ^ __ROR4__(*(_DWORD *)(v181 + 4 * (v234 ^ 0x8Cu)), 28);
  v270 = *((_DWORD *)*(&off_1015B46D0 + v15 - 16672) + (HIBYTE(v268) ^ 5));
  BYTE2(v260) = BYTE2(v263) ^ 0x8A;
  v271 = (char *)*(&off_1015B46D0 + (v15 ^ 0x45A2)) + ((v255 ^ v258) ^ 0x30);
  v272 = (char *)*(&off_1015B46D0 + v15 - 17435) + 4 * (HIBYTE(v263) ^ 0xF3);
  v273 = (char *)*(&off_1015B46D0 + v15 - 14874) + (v263 ^ 0xE3);
  HIDWORD(v245) = *((_DWORD *)*(&off_1015B46D0 + (v15 ^ 0x4693))
                  + (((unsigned __int16)(v263 ^ 0x1F3C) >> 8) ^ 0xC3u)
                  - 2);
  LODWORD(v245) = HIDWORD(v245);
  v274 = (-1808058136 * v270) ^ (-762878179 * v270) ^ *((_DWORD *)*(&off_1015B46D0 + (v15 ^ 0x46AA))
                                                      + (BYTE2(v269) ^ 0x26u)
                                                      - 1) ^ (v245 >> 7) ^ (16 * (v245 >> 7)) & 0xD81049B0 ^ *(v271 - 12) ^ 0x84 ^ (16 * (*(v271 - 12) ^ 0x84));
  v275 = *((_DWORD *)*(&off_1015B46D0 + v15 - 16856) + (BYTE1(v258) ^ 0xF0u) - 1) ^ 0x1F82F224;
  v276 = *((unsigned __int8 *)*(&off_1015B46D0 + (v15 ^ 0x4D4F)) + (v268 ^ 0xAALL) - 4) ^ *((_DWORD *)*(&off_1015B46D0 + v15 - 16997) + (HIBYTE(v269) ^ 8) - 1) ^ (BYTE2(v260) + 1373660145) ^ v275 ^ (v275 >> 1) & 0x7DB8F41B ^ *((_DWORD *)*(&off_1015B46D0 + v15 - 16729) + (BYTE2(v260) ^ 0x9Au) - 2) ^ 0xA;
  v277 = HIBYTE(v258) ^ BYTE1(v269) ^ *((_DWORD *)*(&off_1015B46D0 + v15 - 16062) + (HIBYTE(v258) ^ 0x45) - 1) ^ *((_DWORD *)*(&off_1015B46D0 + (v15 ^ 0x4119)) + (BYTE1(v269) ^ 0xDFu)) ^ *(v273 - 8) ^ *((_DWORD *)*(&off_1015B46D0 + (v15 ^ 0x4093)) + (BYTE2(v268) ^ 0xD3u) - 1);
  LODWORD(STACK[0x68C0]) = v15;
  HIDWORD(v245) = STACK[0x68E0];
  LODWORD(v245) = STACK[0x68E0];
  v278 = v245 >> 15;
  v279 = v277 ^ 0x5CCAF894 ^ v276 ^ v274;
  v280 = v274 ^ *((_DWORD *)v272 - 3) ^ 0x7AE071AA ^ *((_DWORD *)*(&off_1015B46D0 + v15 - 16828) + (BYTE2(v258) ^ 3u)
                                                                                                 - 2) ^ *((_DWORD *)*(&off_1015B46D0 + (v15 ^ 0x425F)) + (BYTE1(v268) ^ 0xEDu) - 3) ^ v269 ^ 0xAB ^ *((_BYTE *)*(&off_1015B46D0 + v15 - 17453) + (v269 ^ 0xA8) - 4) ^ v279;
  HIDWORD(v245) = v278 ^ 0xB64D;
  LODWORD(v245) = v278 ^ 0xB4200000;
  v281 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6980]);
  v282 = v281 ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6970]) ^ v280 ^ ((v276 ^ v274)
                                                                        + 1266822923
                                                                        - ((2 * (v276 ^ v274)) & 0x97045EEA)
                                                                        + 106);
  LODWORD(v245) = __ROR4__((v245 >> 21) ^ __ROR4__(v279, 4) ^ 0x3AAA5175, 11) ^ 0x633DC6F3;
  HIDWORD(v245) = v245;
  LODWORD(v272) = v281 ^ LODWORD(STACK[0x69B0]);
  v283 = v272 ^ LODWORD(STACK[0x6AA0]) ^ 0x7D6CDE23 ^ v276;
  v284 = v272 ^ LODWORD(STACK[0x6950]) ^ v280;
  v285 = STACK[0x67D0];
  v286 = STACK[0x67C0];
  v287 = STACK[0x67B0];
  v288 = v272 ^ 0x73217D9D ^ ((v245 >> 17) + 16150138 - ((2 * (v245 >> 17)) & 0x1ECDCF4));
  v289 = STACK[0x67E0];
  v290 = *(_DWORD *)(STACK[0x67C0] + 4 * (BYTE2(v282) ^ 0x40u)) ^ *(_DWORD *)(STACK[0x67D0] + 4 * HIBYTE(v283)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * ((1241633902 - (BYTE1(v284) ^ 0xA0A1E311 | 0x4A01D46E) + (BYTE1(v284) ^ 0xA0A1E311 | 0xB5FE2B91)) ^ LODWORD(STACK[0x704]))) ^ *(_DWORD *)(STACK[0x67B0] + 4 * (v272 ^ 0x9Du ^ ((v245 >> 17) + 122 - ((2 * (v245 >> 17)) & 0xF4))));
  LODWORD(v272) = *(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v282) ^ 0x6A)) ^ *(_DWORD *)(STACK[0x67C0]
                                                                                       + 4
                                                                                       * (((BYTE2(v284) ^ 0x10241072)
                                                                                         - ((2
                                                                                           * (BYTE2(v284) ^ 0x10241072)) & 0x20082182)
                                                                                         - 560619583) ^ 0xCEB18F40)) ^ *(_DWORD *)(STACK[0x67B0] + 4 * (v272 ^ LOBYTE(STACK[0x6AA0]) ^ 0x23u ^ v276)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * BYTE1(v288));
  v291 = (BYTE2(v272) ^ 0x15 | 0xDCAC0D23) - (BYTE2(v272) ^ 0x15 | 0x2353F2DC) + 592704220;
  v292 = __ROR4__(*(_DWORD *)(STACK[0x67B0]+ 4* ((-962852268- (v282 ^ 0x819AC086 | 0xC69C0A54)+ (v282 ^ 0x819AC086 | LODWORD(STACK[0x700]))) ^ 0xB8F935B9)) ^ 0x4DDD700F, 21) ^ 0xE836EF5C;
  v293 = *(_DWORD *)(STACK[0x67D0] + 4 * HIBYTE(v288)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * (BYTE1(v282) ^ 0x48u)) ^ __ROR4__(__ROR4__(*(_DWORD *)(STACK[0x67C0] + 4 * BYTE2(v283)), 29) ^ 0xADA89E8D, 3) ^ *(_DWORD *)(STACK[0x67B0] + 4 * (((v284 ^ LODWORD(STACK[0x708])) + (v284 & 0x8F ^ 0x204A1107) - ((v284 ^ LODWORD(STACK[0x708])) & 0x8005808F)) ^ 0x316A558F));
  v294 = *(_DWORD *)(STACK[0x67E0] + 4 * BYTE1(v283)) ^ __ROR4__(v292, 11) ^ *(_DWORD *)(STACK[0x67D0]
                                                                                         + 4 * (HIBYTE(v284) ^ 0xAC)) ^ *(_DWORD *)(STACK[0x67C0] + 4 * BYTE2(v288));
  v295 = (((2 * (v293 ^ 0xA)) | 0x576B89F8) - (v293 ^ 0xA) + 1414150916) ^ 0x6935C668;
  LODWORD(v271) = *(_DWORD *)(STACK[0x67C0]
                            + 4
                            * (((v291 & 0xD0A80F26 ^ 0x20892200)
                              + (v291 ^ 0xDE644D3F)
                              - ((v291 ^ 0xDE644D3F) & 0xF0A96F26)) ^ 0xF2612FA6)) ^ *(_DWORD *)(STACK[0x67D0]
                                                                                               + 4
                                                                                               * (HIBYTE(v290) ^ 0x50)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * (BYTE1(v294) ^ 0xFEu)) ^ *(_DWORD *)(STACK[0x67B0] + 4 * ((642470709 - v295 + ((2 * v295) & 0xB369595E) + 27) ^ 0xE4CB5118));
  v296 = (((2 * (_DWORD)v272) & 0xDA) + (v272 ^ 0xFFFFFF7D) - 75425901) ^ 0xABC15B86;
  v297 = (BYTE1(v293) ^ 0x51) - ((2 * (BYTE1(v293) ^ 0x51)) & 0x52) + 681704233;
  v298 = (((2 * (BYTE2(v290) ^ 0x23)) | 0x8765EDAA) - (BYTE2(v290) ^ 0x23) - 1135802069) ^ 0x43E23EC1;
  HIDWORD(v245) = *(_DWORD *)(STACK[0x67C0] + 4 * (BYTE2(v293) ^ 0x75u));
  LODWORD(v245) = HIDWORD(v245);
  LODWORD(v273) = *(_DWORD *)(STACK[0x67C0] + 4 * (BYTE2(v294) ^ 0xDBu)) ^ *(_DWORD *)(STACK[0x67D0]
                                                                                       + 4
                                                                                       * ((v272 >> 24) ^ 0x6C)) ^ *(_DWORD *)(STACK[0x67B0] + 4 * (v290 ^ 0x81u)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * (((v297 ^ 0x3287321) + 547690502 - ((2 * v297) & 0x4102100C)) ^ 0xB2C90F4u));
  v299 = *(_DWORD *)(STACK[0x67C0] + 4 * ((((2 * v298) | 0x47B31276) - v298 + 1546024645) ^ LODWORD(STACK[0x70C])));
  v300 = ((v294 & 0xBC ^ 0x2D182E7F) - (v294 & 0x43)) ^ 0x2918ADC1;
  v301 = *(_DWORD *)(STACK[0x67B0] + 4 * ((v296 - ((2 * v296) & 0x808085AC) - 849812778) ^ 0x9D18AE56)) ^ __ROR4__((v245 >> 26) ^ __ROR4__(*(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v294) ^ 0xAD)), 26) ^ 0x2482BD7F, 6) ^ *(_DWORD *)(STACK[0x67E0] + 4 * (BYTE1(v290) ^ 0xBFu));
  v302 = *(_DWORD *)(STACK[0x67C0]
                   + 4
                   * ((((v273 >> 16) & 0x2F ^ 0x26189C06)
                     + ((v273 >> 16) & 0xD0 ^ 0x40022081)
                     - 1) ^ 0x661ABC4D));
  v303 = *(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v293) ^ 0xCD)) ^ v299 ^ *(_DWORD *)(STACK[0x67B0]
                                                                                     + 4
                                                                                     * ((((2 * v300) & 0x801068A)
                                                                                       - v300
                                                                                       - 214806342) ^ 0xF732D393)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * ((((v272 >> 8) & 0x52 ^ 0x80C2C841) + ((v272 >> 8) & 0xAD) - 1) ^ 0x80C2C8DC));
  v304 = *(_DWORD *)(STACK[0x67D0] + 4 * ((v271 >> 24) ^ 0xDB));
  v305 = (((v304 ^ 0x53A5AC6B) - 1403366507) ^ ((v304 ^ 0x2037A3DB) - 540517339) ^ ((v304 ^ 0x2FD59F23) - 802529059))
       - (((v304 ^ v302 ^ 0xAD84A28C) + 1383816564) ^ ((v304 ^ v302 ^ 0x6167C2DD) - 1634190045) ^ ((v304 ^ v302 ^ 0xF53ABFF4)
                                                                                                 + 180699148))
       + 1076259987;
  LODWORD(v272) = (v305 ^ 0xF366015A) & (2 * (v305 & 0xE247445B)) ^ v305 & 0xE247445B;
  v306 = ((2 * (v305 ^ LODWORD(STACK[0x714]))) ^ 0xAB4E8B6A) & (v305 ^ LODWORD(STACK[0x714])) ^ (2
                                                                                               * (v305 ^ LODWORD(STACK[0x714]))) & 0xD5A745B4;
  v307 = v306 ^ 0x54A14495;
  v308 = (v306 ^ LODWORD(STACK[0x710])) & (4 * (_DWORD)v272) ^ v272;
  LODWORD(v272) = ((4 * v307) ^ 0x569D16D4) & v307 ^ (4 * v307) & 0xD5A745B4;
  v309 = (v272 ^ 0x54850491) & (16 * v308) ^ v308;
  LODWORD(v272) = ((16 * (v272 ^ 0x81224121)) ^ 0x5A745B50) & (v272 ^ 0x81224121) ^ (16 * (v272 ^ 0x81224121)) & 0xD5A745B0;
  v310 = v309 ^ 0xD5A745B5 ^ (v272 ^ 0x50244100) & (v309 << 8);
  v311 = ((v310 << 16) ^ 0x45B50000) & (((v272 ^ 0x858304A5) << 8) & 0x55A70000 ^ 0x50A20000 ^ (((v272 ^ 0x858304A5) << 8) ^ 0xA7450000) & (v272 ^ 0x858304A5));
  v312 = -957134514
       - (((v302 ^ 0x23D30E02) - 601034242) ^ ((v302 ^ 0xC3BA7D86) + 1011188346) ^ ((v302 ^ 0x85F73CB2) + 2047394638));
  v313 = (v312 ^ 0xDA4E467A) & (2 * (v312 & 0xD36E677C)) ^ v312 & 0xD36E677C;
  LODWORD(v272) = ((2 * (v312 ^ 0xDE9A0642)) ^ 0x1BE8C27C) & (v312 ^ 0xDE9A0642) ^ (2 * (v312 ^ 0xDE9A0642)) & 0xDF4613E;
  v314 = (v272 ^ LODWORD(STACK[0x718])) & (4 * v313) ^ v313;
  LODWORD(v272) = ((4 * (v272 ^ 0x4142102)) ^ 0x37D184F8) & (v272 ^ 0x4142102) ^ (4 * (v272 ^ 0x4142102)) & 0xDF4613C;
  v315 = (v272 ^ LODWORD(STACK[0x71C])) & (16 * v314) ^ v314;
  LODWORD(v272) = ((16 * (v272 ^ 0x8246106)) ^ 0xDF4613E0) & (v272 ^ 0x8246106) ^ (16 * (v272 ^ 0x8246106)) & 0xDF46130;
  v316 = v315 ^ 0xDF4613E ^ (v272 ^ 0xD440100) & (v315 << 8);
  v317 = ((v316 << 16) ^ 0x613E0000) & (((v272 ^ 0xB0601E) << 8) & 0xDF40000 ^ 0x9940000 ^ (((v272 ^ 0xB0601E) << 8) ^ 0xF4610000) & (v272 ^ 0xB0601E));
  LODWORD(v272) = ((HIWORD(v301) & 0x74 ^ 0x9E6ECC61) + (HIWORD(v301) & 0x8B) - 1) ^ 0x587E847D;
  v318 = v312 ^ v302 ^ v305 ^ (2 * ((v316 << 16) & 0xDF40000 ^ v316 ^ v317 ^ v310 ^ (v310 << 16) & 0x55A70000 ^ v311));
  v319 = (((v304 ^ 0x8DC94957) + 1916188329) ^ ((v304 ^ 0xFE6D2504) + 26401532) ^ ((v304 ^ 0x2FE3FCC0) - 803470528))
       - 1970034739
       + (((v318 ^ 0x478F2158) + 879729747) ^ ((v318 ^ 0x5EA9B5D8) + 759761107) ^ ((v318 ^ 0x7415B187) + 133500046));
  v320 = (v319 ^ 0xA2D516B5) & (2 * (v319 & 0xB2E050B8)) ^ v319 & 0xB2E050B8;
  v321 = ((2 * (v319 ^ 0xA35517B5)) ^ LODWORD(STACK[0x720])) & (v319 ^ 0xA35517B5) ^ (2 * (v319 ^ 0xA35517B5)) & 0x11B5470C;
  v322 = (v321 ^ 0x1140605) & (4 * v320) ^ v320;
  v323 = ((4 * (v321 ^ 0x10954105)) ^ 0x46D51C34) & (v321 ^ 0x10954105) ^ (4 * (v321 ^ 0x10954105)) & 0x11B5470C;
  v324 = v323 ^ 0x11204309;
  v325 = (v323 ^ 0x950409) & (16 * v322) ^ v322;
  v326 = ((16 * v324) ^ 0x1B5470D0) & v324 ^ (16 * v324) & 0x11B54700;
  v327 = v325 ^ 0x11B5470D ^ (v326 ^ 0x1114400D) & (v325 << 8);
  v328 = (v327 << 16) & 0x11B50000 ^ v327 ^ ((v327 << 16) ^ 0x470D0000) & (((v326 ^ 0xA1070D) << 8) & 0x11B50000 ^ 0xB00000 ^ (((v326 ^ 0xA1070D) << 8) ^ 0x35470000) & (v326 ^ 0xA1070D));
  LOWORD(v312) = (v303 & 0x1B ^ 0x7908) + (v303 & 0xE4 ^ 0x81) - 1;
  v329 = *(_DWORD *)(STACK[0x67E0]
                   + 4
                   * (((BYTE1(v303) ^ 0xFB) - 1841620666 - ((2 * (BYTE1(v303) ^ 0xFB)) & 0x6C) + 3056) ^ 0x923B2580)) ^ *(_DWORD *)(STACK[0x67D0] + 4 * ((v273 >> 24) ^ 0x60)) ^ *(_DWORD *)(STACK[0x67C0] + 4 * ((((2 * (_DWORD)v272) | 0xB45137E6) - v272 + 634872845) ^ 0x1C38D3B6));
  v330 = *(_DWORD *)(STACK[0x67B0]
                   + 4
                   * ((((2 * (v271 ^ 0x3F)) | 0x84D2BC56) - (v271 ^ 0x3F) - 1114201643) ^ 0x42695E2D));
  v331 = *(_DWORD *)(STACK[0x67B0] + 4 * (((v312 & 0x285 ^ 0x98296E80) + (v312 & 0x17A ^ 0x1808013) - 1) ^ 0x99A9EF04)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * ((((v301 >> 8) & 0xA9) + (BYTE1(v301) ^ 0xFFFFFFF9) + (BYTE1(v301) | 0x66168F56) + 1) ^ 0x66168FE6)) ^ v319 ^ (2 * v328);
  LODWORD(v272) = (((v329 ^ 0x83CCA00) - 138201600) ^ ((v329 ^ 0xC647164F) + 968419761) ^ ((v329 ^ 0x69BF6A95)
                                                                                         - 1774152341))
                - (((v330 ^ v329 ^ LODWORD(STACK[0x728])) - 278910809) ^ ((v330 ^ v329 ^ 0x4DB24523) - 1303528739) ^ ((v330 ^ v329 ^ 0x8AB7DB09) + 1967662327))
                - 144301617;
  v332 = (v272 ^ 0xDAC7435E) & (2 * (v272 & 0xD8C44B98)) ^ v272 & 0xD8C44B98;
  v333 = ((2 * (v272 ^ 0xCB4F447E)) ^ 0x27161FCC) & (v272 ^ 0xCB4F447E) ^ (2 * (v272 ^ 0xCB4F447E)) & 0x138B0FE6;
  v334 = (v333 ^ LODWORD(STACK[0x72C])) & (4 * v332) ^ v332;
  v335 = ((4 * (v333 ^ 0x10890022)) ^ 0x4E2C3F98) & (v333 ^ 0x10890022) ^ (4 * (v333 ^ 0x10890022)) & 0x138B0FE4;
  v336 = (v335 ^ 0x2080F86) & (16 * v334) ^ v334;
  v337 = ((16 * (v335 ^ 0x11830066)) ^ 0x38B0FE60) & (v335 ^ 0x11830066) ^ (16 * (v335 ^ 0x11830066)) & 0x138B0FE0;
  v338 = v336 ^ 0x138B0FE6 ^ (v337 ^ 0x10800E86) & (v336 << 8);
  v339 = (v338 << 16) & 0x138B0000 ^ v338 ^ ((v338 << 16) ^ 0xFE60000) & (((v337 ^ 0x30B0186) << 8) & 0x138B0000 ^ 0x10800000 ^ (((v337 ^ 0x30B0186) << 8) ^ 0xB0F0000) & (v337 ^ 0x30B0186));
  v340 = -800981320
       - (((v330 ^ 0x9E6CCA83) + 1637037437) ^ ((v330 ^ 0x7605A854) - 1980082260) ^ ((v330 ^ 0x98379D7E) + 1741185666));
  v341 = (v340 ^ 0x3E1F719E) & (2 * (v340 & 0xBF5F019F)) ^ v340 & 0xBF5F019F;
  v342 = ((2 * (v340 ^ 0x4E1573A0)) ^ 0xE294E47E) & (v340 ^ 0x4E1573A0) ^ (2 * (v340 ^ 0x4E1573A0)) & 0xF14A723E;
  v343 = (v342 ^ 0xE002103D) & (4 * v341) ^ v341;
  v344 = ((4 * (v342 ^ 0x114A1201)) ^ 0xC529C8FC) & (v342 ^ 0x114A1201) ^ (4 * (v342 ^ 0x114A1201)) & 0xF14A723C;
  v345 = (v344 ^ 0xC1084033) & (16 * v343) ^ v343;
  v346 = ((16 * (v344 ^ LODWORD(STACK[0x734]))) ^ 0x14A723F0) & (v344 ^ LODWORD(STACK[0x734])) ^ (16
                                                                                                * (v344 ^ LODWORD(STACK[0x734]))) & 0xF14A7230;
  v347 = v345 ^ 0xF14A723F ^ (v346 ^ 0x10022200) & (v345 << 8);
  v348 = v340 ^ 0xD83FC64F ^ (2
                            * ((v347 << 16) & 0x714A0000 ^ v347 ^ ((v347 << 16) ^ 0x723F0000) & (((v346 ^ LODWORD(STACK[0x730])) << 8) & 0x714A0000 ^ 0x31080000 ^ (((v346 ^ LODWORD(STACK[0x730])) << 8) ^ 0x4A720000) & (v346 ^ LODWORD(STACK[0x730])))));
  v349 = v348 ^ v272 ^ (2 * v339);
  v350 = ((v273 & 0x11 ^ 0xED941411) - (v273 & 0x11) + (v273 ^ 0x2C)) ^ 0xD901461;
  v351 = ((2 * v350) | 0xA52E6232) - v350;
  v352 = (((v349 ^ 0xB2867BC6) + 882009189) ^ ((v349 ^ 0x8FACB773) + 163096786) ^ ((v349 ^ 0xA01CBB4F) + 638100718))
       - (((v349 ^ v330 ^ 0xB5B67904) + 866281127) ^ ((v349 ^ v330 ^ 0xD4F464D3) + 1390443378) ^ ((v349 ^ v330 ^ 0x8C2A9584)
                                                                                                + 171870759))
       + 2125796297;
  v353 = ((2 * (v352 ^ 0x6FD61E7)) ^ 0xAEB0F46E) & (v352 ^ 0x6FD61E7) ^ (2 * (v352 ^ 0x6FD61E7)) & 0xD7587A36;
  v354 = (v352 ^ 0x85B553C7) & (2 * (v352 & 0xD1A51BD0)) ^ v352 & 0xD1A51BD0;
  v355 = (v353 ^ 0x86107000) & (4 * v354) ^ v354;
  v356 = ((4 * (v353 ^ 0x51480A11)) ^ 0x5D61E8DC) & (v353 ^ 0x51480A11) ^ (4 * (v353 ^ 0x51480A11)) & 0xD7587A34;
  v357 = (v356 ^ 0x55406800) & (16 * v355) ^ v355;
  v358 = ((16 * (v356 ^ 0x82181223)) ^ 0x7587A370) & (v356 ^ 0x82181223) ^ (16 * (v356 ^ 0x82181223)) & 0xD7587A30;
  v359 = v357 ^ 0xD7587A37 ^ (v358 ^ 0x55002207) & (v357 << 8);
  v360 = v330 ^ __ROR4__(((((((v352 & 0xD1A51BD0) >> 4) << 31) | 0x68000000) ^ (v352 << 26)) & 0xFC000000 | ((v352 ^ (2 * ((v359 << 16) & 0x57580000 ^ v359 ^ ((v359 << 16) ^ 0x7A370000) & (((v358 ^ 0x82585807) << 8) & 0x57580000 ^ (((v358 ^ 0x82585807) << 8) ^ 0x587A0000) & (v358 ^ 0x82585807) ^ 0x7000000)))) >> 6)) ^ __ROR4__(v348, 6) ^ 0x148939F5, 26);
  v361 = *(_DWORD *)(STACK[0x67C0]
                   + 4
                   * ((1870499989 - (BYTE2(v303) ^ 0x35822C84) + (STACK[0x724] & (2 * (BYTE2(v303) ^ 0x35822C84))) + 2359) & 0x63FCDFFF ^ 0x42FC95D8)) ^ *(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v301) ^ 0x40)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * (((BYTE1(v271) ^ 0x403C8C9) - 2145566328 - ((2 * (BYTE1(v271) ^ 0x403C8C9)) & 0x29028) + 2444) ^ 0x841E8375)) ^ *(_DWORD *)(STACK[0x67B0] + 4 * ((v351 + 761843431) ^ 0x32933119));
  v362 = ((BYTE1(v273) ^ 0x60) + ((v273 >> 8) & 0xF0 ^ 0x9F3F6590) - ((BYTE1(v273) ^ 0x60) & 0xF0)) ^ 0x393F67E4;
  v363 = ((2 * v362) | 0x91B22C96) - v362;
  v364 = (((v329 ^ 0x2EEEEBD5) - 787409877) ^ ((v329 ^ 0x5B5A36B9) - 1532638905) ^ ((v329 ^ 0xD2706BB6) + 764384330))
       + (((v349 ^ 0xF05211C2) + 1984302689) ^ ((v349 ^ 0x272DD33D) - 1590047584) ^ ((v349 ^ 0x4A49B505) - 866276696))
       + 866085332
       + (((v360 ^ 0x38207227) - 1527407592) ^ ((v360 ^ 0x55E12687) - 919287624) ^ ((v360 ^ 0x81041A68) + 500298841));
  v365 = (v364 ^ 0xEEE15B23) & (2 * (v364 & 0xE8F243B4)) ^ v364 & 0xE8F243B4;
  v366 = ((2 * (v364 ^ 0xFE81DC2B)) ^ 0x2CE73F3E) & (v364 ^ 0xFE81DC2B) ^ (2 * (v364 ^ 0xFE81DC2B)) & 0x16739F9E;
  v367 = v366 ^ 0x12108081;
  v368 = (v366 ^ 0x4431F10) & (4 * v365) ^ v365;
  v369 = ((4 * v367) ^ 0x59CE7E7C) & v367 ^ (4 * v367) & 0x16739F9C;
  v370 = (v369 ^ 0x10421E03) & (16 * v368) ^ v368;
  v371 = ((16 * (v369 ^ 0x6318183)) ^ 0x6739F9F0) & (v369 ^ 0x6318183) ^ (16 * (v369 ^ 0x6318183)) & 0x16739F90;
  v372 = v370 ^ 0x16739F9F ^ (v371 ^ 0x6319900) & (v370 << 8);
  v373 = v364 ^ (2
               * ((v372 << 16) & 0x16730000 ^ v372 ^ ((v372 << 16) ^ 0x1F9F0000) & (((v371 ^ 0x1042060F) << 8) & 0x16730000 ^ 0x4600000 ^ (((v371 ^ 0x1042060F) << 8) ^ 0x739F0000) & (v371 ^ 0x1042060F))));
  v374 = *(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v303) ^ 0x13)) ^ *(_DWORD *)(STACK[0x67B0]
                                                                              + 4 * (v301 ^ 0x9Fu)) ^ *(_DWORD *)(STACK[0x67C0] + 4 * (((STACK[0x738] & (2 * (BYTE2(v271) ^ 0x2941C5EC))) - (BYTE2(v271) ^ 0x2941C5EC) - 459371339) ^ 0xCDDF4981)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * ((v363 - 1222186571) ^ 0xEED91442));
  LODWORD(v272) = ((2 * (v374 & 0x30D2A98E ^ 0x2012A88A)) & 0x40A1531C) - (v374 & 0x30D2A98E ^ 0x2012A88A) + 1504116753;
  LODWORD(v272) = (v272 & 0x2522607C ^ 0x2420007D) + (v272 & 0xDADD9F82) - 1;
  v375 = (-477652727 - (v374 & 0xCF2D5671 ^ 0x4F085010) + ((2 * (v374 & 0xCF2D5671 ^ 0x4F085010)) & 0x1850AC40) + 2258) ^ 0xE3C781DA;
  v376 = (v272 ^ 0xB2F85E1B) & ((((2 * v375) | 0x3AEB90F4) - v375 + 1653225350) ^ 0xD54FAE48) ^ v272 & 0x3F85A9AC;
  v377 = (-1081575641 - (BYTE2(v361) ^ 0x55 | 0xBF887727) + (BYTE2(v361) ^ 0x55 | 0x407788D8)) ^ LODWORD(STACK[0x73C]);
  LODWORD(v273) = ((2 * v377) & 0x2EB2B7A0) - v377;
  v378 = ((HIWORD(v373) & 0x72 ^ 0x385F7C23) + (HIWORD(v373) & 0x8D) - 1) ^ 0x68CD7AF8;
  v379 = (((v331 >> 8) & 0x29 ^ 0xFF77F921) + ((v331 >> 8) & 0xD6 ^ 0x83) - 1) ^ 0xF777EF21;
  v380 = *(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v361) ^ 0x15)) ^ *(_DWORD *)(STACK[0x67C0]
                                                                              + 4
                                                                              * (((v376 ^ 0xA858000) >> 16) ^ 0x21u)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * ((-1343139424 - v379 + ((2 * v379) | 0xA01D4B4A) + 2235) ^ LODWORD(STACK[0x740])));
  v381 = *(_DWORD *)(STACK[0x67E0]
                   + 4
                   * ((442649039 - (BYTE1(v361) ^ 0xAA | 0x1A6249CF) + (BYTE1(v361) ^ 0xAA | 0x659DB630)) ^ 0x659DB698u)) ^ *(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v331) ^ 0x63)) ^ *(_DWORD *)(STACK[0x67B0] + 4 * ((-2042691384 - (v376 ^ 0x343059) + ((2 * (v376 ^ 0x343059)) | 0xF381FE70)) ^ 0x79F4CF08)) ^ *(_DWORD *)(STACK[0x67C0] + 4 * ((((2 * v378) & 0xA0000562) - v378 + 596811086) ^ 0x73009B26));
  LODWORD(v272) = (671617645 - (BYTE1(v373) ^ 0x15 | 0x2808126D) + (BYTE1(v373) ^ 0x15 | 0xD7F7ED92)) ^ 0xD7B7AFD4;
  v382 = (_DWORD)v272 - 1185518663 - (STACK[0x744] & (2 * (_DWORD)v272));
  LODWORD(v272) = (((v381 ^ 0x72B40482) + 1994498250) ^ ((v381 ^ 0xA74085F1) - 1558896197) ^ ((v381 ^ 0x774B753F)
                                                                                            + 1931399541))
                + 150255910;
  v383 = (v272 ^ 0xD0F3B55A) & (2 * (v272 & 0xDAFB3993)) ^ v272 & 0xDAFB3993;
  v384 = ((2 * (v272 ^ 0x54C5C67E)) ^ 0x1C7DFFDA) & (v272 ^ 0x54C5C67E) ^ (2 * (v272 ^ 0x54C5C67E)) & 0x8E3EFFEC;
  v385 = (v384 ^ 0xC3CEEC8) & (4 * v383) ^ v383;
  v386 = ((4 * (v384 ^ 0x82020025)) ^ 0x38FBFFB4) & (v384 ^ 0x82020025) ^ (4 * (v384 ^ 0x82020025)) & 0x8E3EFFEC;
  v387 = (v386 ^ 0x83AFFA9) & (16 * v385) ^ v385;
  v388 = ((16 * (v386 ^ 0x86040049)) ^ 0xE3EFFED0) & (v386 ^ 0x86040049) ^ (16 * (v386 ^ 0x86040049)) & 0x8E3EFFE0;
  v389 = v387 ^ 0x8E3EFFED ^ (v388 ^ 0x822EFE00) & (v387 << 8);
  v390 = ((v389 << 16) ^ 0x7FED0000) & ((((v388 ^ LODWORD(STACK[0x748])) << 8) ^ 0x3EFF0000) & (v388 ^ LODWORD(STACK[0x748])) ^ ((v388 ^ LODWORD(STACK[0x748])) << 8) & 0xE3E0000);
  v391 = 734911820
       - (((v381 ^ 0xB829E2EC) + 1205214484) ^ ((v381 ^ 0x4B4502B2) - 1262813874) ^ ((v381 ^ 0x24F6A92D) - 620144941));
  v392 = (v391 ^ 0xFA07D968) & (2 * (v391 & 0xFC97D941)) ^ v391 & 0xFC97D941;
  v393 = ((2 * (v391 ^ 0x1A0DFB68)) ^ 0xCD344452) & (v391 ^ 0x1A0DFB68) ^ (2 * (v391 ^ 0x1A0DFB68)) & 0xE69A2228;
  v394 = (v393 ^ 0xC4100021) & (4 * v392) ^ v392;
  v395 = ((4 * (v393 ^ 0x228A2229)) ^ LODWORD(STACK[0x754])) & (v393 ^ 0x228A2229) ^ (4 * (v393 ^ 0x228A2229)) & 0xE69A2228;
  v396 = (v395 ^ LODWORD(STACK[0x74C])) & (16 * v394) ^ v394;
  v397 = ((16 * (v395 ^ 0x64922209)) ^ 0x69A22290) & (v395 ^ 0x64922209) ^ (16 * (v395 ^ 0x64922209)) & 0xE69A2220;
  v398 = v396 ^ 0xE69A2229 ^ (v397 ^ 0x60822200) & (v396 << 8);
  LODWORD(v272) = v391 ^ v381 ^ v272 ^ (2
                                                    * (v398 ^ v389 ^ (v389 << 16) & 0xE3E0000 ^ (v398 << 16) & 0x669A0000 ^ ((v398 << 16) ^ 0x22290000) & (((v397 ^ LODWORD(STACK[0x750])) << 8) & 0xE69A0000 ^ 0x64980000 ^ (((v397 ^ LODWORD(STACK[0x750])) << 8) ^ 0x9A220000) & (v397 ^ LODWORD(STACK[0x750]))) ^ v390));
  LODWORD(v272) = (((v272 ^ 0x6E7BF74A) + 2058616758) ^ ((v272 ^ 0x6F05AFE1) + 2077075231) ^ ((v272 ^ 0x79894A82) + 1832993406))
                - 2085320042;
  v399 = (v272 ^ 0x50F65D0B) & (2 * (v272 & 0x9AE69D53)) ^ v272 & 0x9AE69D53;
  v400 = ((2 * (v272 ^ 0x507A578B)) ^ 0x953995B0) & (v272 ^ 0x507A578B) ^ (2 * (v272 ^ 0x507A578B)) & 0xCA9CCAD8;
  v401 = (v400 ^ 0x80188090) & (4 * v399) ^ v399;
  v402 = ((4 * (v400 ^ 0x4A844A48)) ^ 0x2A732B60) & (v400 ^ 0x4A844A48) ^ (4 * (v400 ^ 0x4A844A48)) & 0xCA9CCAD8;
  v403 = (v402 ^ 0xA100A48) & (16 * v401) ^ v401;
  v404 = ((16 * (v402 ^ 0xC08CC098)) ^ 0xA9CCAD80) & (v402 ^ 0xC08CC098) ^ (16 * (v402 ^ 0xC08CC098)) & 0xCA9CCAD0;
  v405 = v403 ^ 0xCA9CCAD8 ^ (v404 ^ 0x888C8800) & (v403 << 8);
  v406 = v272 ^ (2
                             * ((v405 << 16) & 0x4A9C0000 ^ v405 ^ ((v405 << 16) ^ 0x4AD80000) & (((v404 ^ LODWORD(STACK[0x758])) << 8) & 0x4A9C0000 ^ 0x42140000 ^ (((v404 ^ LODWORD(STACK[0x758])) << 8) ^ LODWORD(STACK[0x75C])) & (v404 ^ LODWORD(STACK[0x758])))));
  HIDWORD(v245) = *(_DWORD *)(STACK[0x67B0] + 4 * (v373 ^ 0x61u));
  LODWORD(v245) = HIDWORD(v245);
  v407 = (v245 >> 24) ^ (v380 << 8) ^ (((2 * (HIBYTE(v380) & 0x4C ^ 0x254DE708)) | 0x93B9F07C)
                                     - (HIBYTE(v380) & 0x4C ^ 0x254DE708)
                                     - 1239218238) ^ (((2 * (HIBYTE(v380) & 0xB3 ^ 0x31)) | 0x52F51482)
                                                    - (HIBYTE(v380) & 0xB3 ^ 0x31)
                                                    - 695896641) ^ 0x1C557A06;
  LODWORD(v272) = *(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v373) ^ 0x41)) ^ *(_DWORD *)(STACK[0x67C0]
                                                                                       + 4
                                                                                       * (((_DWORD)v273 + 682009647) ^ 0x2E76A52Fu)) ^ *(_DWORD *)(STACK[0x67B0] + 4 * ((((2 * (v331 ^ 0x1E)) & 0x19A) - (v331 ^ 0x1E) + 562) ^ 0x29Cu)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * (((unsigned __int16)(v376 ^ 0x8000) >> 8) ^ 0x38u));
  v408 = ((v272 ^ 0x7806D76F) + 1933090249) ^ ((v272 ^ LODWORD(STACK[0x760])) + 1891393937) ^ ((v272 ^ 0xF7454900) - 59047000);
  v409 = v408 + 773413660;
  v410 = *(_DWORD *)(STACK[0x67E0] + 4 * ((v382 + 713) ^ 0xB9162C13)) ^ *(_DWORD *)(STACK[0x67C0]
                                                                                    + 4
                                                                                    * ((1247270286
                                                                                      - (BYTE2(v331) ^ 0x94 | 0x4A57D58E)
                                                                                      + (BYTE2(v331) ^ 0x94 | 0xB5A82A71)) ^ 0xB5A82AF6)) ^ *(_DWORD *)(STACK[0x67D0] + 4 * (HIBYTE(v376) ^ 0xCB)) ^ *(_DWORD *)(STACK[0x67B0] + 4 * ((((2 * (v361 ^ 0x45C19A89)) | 0x83FB618A) - (v361 ^ 0x45C19A89) - 1107144901) ^ 0x43C2ACD));
  v411 = (v408 + 773413660) & 0xD1E6A4E4;
  v412 = 2 * v411;
  v413 = ((2 * (v409 ^ LODWORD(STACK[0x764]))) ^ 0x5CC34EAA) & (v409 ^ LODWORD(STACK[0x764])) ^ (2
                                                                                               * (v409 ^ LODWORD(STACK[0x764]))) & 0x2E61A754;
  v414 = v413 ^ 0x2220A155;
  v415 = (v413 ^ 0x2C010645) & (4 * (v412 & (v409 ^ 0xDDC602F1) ^ v411)) ^ v412 & (v409 ^ 0xDDC602F1) ^ v411;
  v416 = ((4 * v414) ^ 0xB9869D54) & v414 ^ (4 * v414) & 0x2E61A754;
  v417 = (v416 ^ 0x28008541) & (16 * v415) ^ v415;
  v418 = ((16 * (v416 ^ 0x6612201)) ^ 0xE61A7550) & (v416 ^ 0x6612201) ^ (16 * (v416 ^ 0x6612201)) & 0x2E61A750;
  v419 = v417 ^ 0x2E61A755 ^ (v418 ^ 0x26002505) & (v417 << 8);
  HIDWORD(v245) = v407;
  LODWORD(v245) = v407;
  v420 = v245 >> 8;
  v421 = (((v408 + 773413660) ^ (2
                                                * ((v419 << 16) & 0x2E610000 ^ v419 ^ ((v419 << 16) ^ 0x27550000) & (((v418 ^ 0x8618205) << 8) & 0x2E610000 ^ 0xE400000 ^ (((v418 ^ 0x8618205) << 8) ^ 0x61A70000) & (v418 ^ 0x8618205))))) >> 16) ^ 0x62000021;
  v422 = 215939119 - v421 + ((2 * v421) & 0xC40001A0);
  v423 = v408 + 773413816;
  if (v408 >= 0xA8C35B64)
  {
    v424 = 146767259;
  }
  else
  {
    v423 = v408 + 773413660;
    v424 = 1610359351;
  }
  v425 = v424 + v423;
  v426 = (BYTE1(v420) ^ 0xCD) + ((v420 >> 8) & 0x75 ^ 0x7BDB1930) - ((BYTE1(v420) ^ 0xCD) & 0x75);
  v427 = (v426 & STACK[0x770] ^ LODWORD(STACK[0x76C]))
       + (v426 ^ LODWORD(STACK[0x768]))
       - ((v426 ^ LODWORD(STACK[0x768])) & 0x300289CC);
  v428 = ((2 * (v409 ^ 0x6DAD8781)) ^ 0x789646CA) & (v409 ^ 0x6DAD8781) ^ (2 * (v409 ^ 0x6DAD8781)) & 0xBC4B2364;
  v429 = (v428 ^ 0x8420205) & (4 * (v412 & (v409 ^ 0xCDE486C1) ^ v411)) ^ v412 & (v409 ^ 0xCDE486C1) ^ v411;
  v430 = ((4 * (v428 ^ LODWORD(STACK[0x774]))) ^ 0xF12C8D94) & (v428 ^ LODWORD(STACK[0x774])) ^ (4
                                                                                               * (v428 ^ LODWORD(STACK[0x774]))) & 0xBC4B2364;
  v431 = (v430 ^ LODWORD(STACK[0x778])) & (16 * v429) ^ v429;
  v432 = ((16 * (v430 ^ 0xC432261)) ^ 0xC4B23650) & (v430 ^ 0xC432261) ^ (16 * (v430 ^ 0xC432261)) & 0xBC4B2360;
  v433 = v431 ^ 0xBC4B2365 ^ (v432 ^ 0x84022225) & (v431 << 8);
  v434 = (v433 << 16) & 0x3C000000 ^ v433 ^ ((v433 << 16) ^ 0x23000000) & (((v432 ^ 0x38490125) << 8) & 0x3C4B0000 ^ 0x34000000 ^ (((v432 ^ 0x38490125) << 8) ^ 0x4B230000) & (v432 ^ 0x38490125));
  v435 = ((2 * (BYTE2(v410) ^ 0x20)) | 0x4754DCAC) - (BYTE2(v410) ^ 0x20) - 598371926;
  v436 = (v435 & 0x5428BDC ^ 0x54080C0) + (v435 ^ 0x62BB6F1D) - ((v435 ^ 0x62BB6F1D) & 0x5428BDC);
  v437 = (v425 ^ 0x6DCA2A08) & (2 * (v425 & 0x71EA82AD)) ^ v425 & 0x71EA82AD;
  v438 = ((2 * (v425 ^ 0xDCA2F5A)) ^ LODWORD(STACK[0x784])) & (v425 ^ 0xDCA2F5A) ^ (2 * (v425 ^ 0xDCA2F5A)) & 0x7C20ADF6;
  v439 = v437 ^ 0x7C20ADF7 ^ (v438 ^ LODWORD(STACK[0x780])) & (4 * v437);
  v440 = v425 ^ (2
               * ((16 * v439) ^ v439 ^ ((16 * v439) ^ 0x70) & ((4 * (v438 ^ 0x11)) & 0xF0 ^ 0x20 ^ ((4 * (v438 ^ 0x11)) ^ 0xD0) & (v438 ^ 0x11))));
  v441 = *(_DWORD *)(v286 + 4 * (BYTE2(v420) ^ 0x49u)) ^ *(_DWORD *)(v289
                                                                     + 4
                                                                     * (((BYTE1(v410) ^ 0xC009899)
                                                                       - ((2 * (BYTE1(v410) ^ 0xC009899)) & 0x1103C)
                                                                       - 1589065186) ^ 0xAD485236)) ^ *(_DWORD *)(v285 + 4 * (((v409 ^ (2 * v434)) >> 24) ^ 0xE9));
  LOWORD(v434) = ((2 * (v409 ^ 0xAAE4)) ^ 0x1C00) & (v409 ^ 0xAAE4) ^ (2 * (v409 ^ 0xAAE4)) & 0xE00;
  v442 = (v434 ^ 0x400) & (4 * (v412 & (v409 ^ 0xA2E4) ^ v411)) ^ v412 & (v409 ^ 0xA2E4) ^ v411;
  LOWORD(v434) = ((4 * (v434 ^ 0x200)) ^ 0x3800) & (v434 ^ 0x200) ^ (4 * (v434 ^ 0x200)) & 0xE00;
  v443 = v442 ^ 0xE00 ^ (v434 ^ 0x800) & (16 * v442);
  v444 = v409 ^ (2
               * ((v443 << 8) & 0xE00 ^ v443 ^ (v443 << 8) & ((16 * (v434 ^ 0x600)) & 0xE00 ^ 0xE00 ^ ((16 * (v434 ^ 0x600)) ^ 0xE000) & (v434 ^ 0x600))));
  v445 = (LODWORD(STACK[0x788]) | (2 * ((812642236 - (v441 & 0x2000)) ^ 0x170FAC9C)))
       - ((812642236 - (v441 & 0x2000)) ^ 0x170FAC9C)
       + 844902757;
  v446 = ((v445 ^ 0x7C9D0FCF) - 1234862726) ^ ((v445 ^ 0x589CBEC8) - 1838887809) ^ ((v445 ^ 0xCEC21CBC) + 70938123);
  v447 = v446 + 127356687;
  v448 = (v447 ^ 0x9928D9D3) & (2 * (v447 & 0xD82CD1E3)) ^ v447 & 0xD82CD1E3;
  v449 = ((2 * (v447 ^ 0xB9785995)) ^ 0xC2A910EC) & (v447 ^ 0xB9785995) ^ (2 * (v447 ^ 0xB9785995)) & 0x61548876;
  v450 = (v449 ^ 0x40000006) & (4 * v448) ^ v448;
  v451 = ((4 * (v449 ^ LODWORD(STACK[0x78C]))) ^ 0x855221D8) & (v449 ^ LODWORD(STACK[0x78C])) ^ (4
                                                                                               * (v449 ^ LODWORD(STACK[0x78C]))) & 0x61548874;
  v452 = v450 ^ 0x61548876 ^ (v451 ^ 0x1500056) & (16 * v450);
  v453 = (16 * (v451 ^ 0x60048826)) & 0x61548870 ^ 0x60140816 ^ ((16 * (v451 ^ 0x60048826)) ^ 0x15488760) & (v451 ^ 0x60048826);
  v454 = (v452 << 8) & 0x61548800 ^ v452 ^ ((v452 << 8) ^ 0x54887600) & v453;
  v455 = *(_DWORD *)(v287
                   + 4
                   * ((((2 * (v406 ^ 9)) & 0xFFFFFFEF) - (v406 ^ 9) + 1288) ^ 0x5E2));
  v456 = (v446 + 127356687) ^ (2
                             * ((v454 << 16) & 0x61540000 ^ v454 ^ ((v454 << 16) ^ 0x8760000) & ((v453 << 8) & 0x61540000 ^ 0x21540000 ^ ((v453 << 8) ^ 0x54880000) & v453)));
  v457 = (v456 ^ 0x9A2DC10F) & (v455 ^ 0x85CCA6F3) ^ v456 & 0xF592595A;
  v458 = (v457 & 0x45DFF11 ^ 0x5DAF01) + (v457 & 0xFBA200EE ^ 0x80000043) == 274591306;
  v459 = 1208945963 - v446;
  if (v458)
    v459 = v446 + 127356687;
  v460 = (((v455 ^ 0xB22A7901) + 1305839359) ^ ((v455 ^ LODWORD(STACK[0x790])) + 545680924) ^ ((v455 ^ 0x1D0D174C)
                                                                                             - 487397196))
       + 1989668705
       + v459;
  v461 = (2 * (v460 & 0xD1F3E22B)) & (v460 ^ 0xD4AB587E) ^ v460 & 0xD1F3E22B ^ ((2 * (v460 & 0xD1F3E22B)) & 0x1408054 | 0x101000);
  v462 = (2 * (v460 ^ 0xD4AB587E)) & 0x558BA54 ^ 0x5488A55 ^ ((2 * (v460 ^ 0xD4AB587E)) ^ 0xAB174AA) & (v460 ^ 0xD4AB587E);
  v463 = (4 * v461) & 0x558BA54 ^ v461 ^ ((4 * v461) ^ 0x404000) & v462;
  v464 = (4 * v462) & 0x558BA54 ^ 0x181201 ^ ((4 * v462) ^ 0x1562E954) & v462;
  v465 = (16 * v463) & 0x558BA50 ^ v463 ^ ((16 * v463) ^ 0x5010000) & v464;
  v466 = (16 * v464) & 0x558BA50 ^ 0x501A05 ^ ((16 * v464) ^ LODWORD(STACK[0x794])) & v464;
  v467 = v465 ^ 0x18AA55 ^ (v465 << 8) & 0x558BA00 ^ ((v465 << 8) ^ 0x50100000) & v466;
  v468 = (v467 << 16) & 0x5580000 ^ v467 ^ ((v467 << 16) ^ 0x3A550000) & ((v466 << 8) & 0x5580000 ^ 0x5400000 ^ ((v466 << 8) ^ 0x58BA0000) & v466);
  v469 = *(_DWORD *)(v289 + 4 * (v427 ^ 0x478C7340u)) ^ *(_DWORD *)(v286 + 4 * (v422 ^ 0x6EDEF8A9)) ^ *(_DWORD *)(v287 + 4 * (((v410 & 0x16 ^ 0xC0000807) - (v410 & 0xE9) + 857461992) ^ LODWORD(STACK[0x77C]))) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v406) ^ 0x9A));
  v470 = *(_DWORD *)(v289
                   + 4 * (((HIBYTE(v444) ^ 0xF) - 2018127556 - ((2 * (HIBYTE(v444) ^ 0xF)) & 0x78)) ^ 0x87B5D18B));
  v471 = *(_DWORD *)(v285 + 4 * (HIBYTE(v410) ^ 0x30));
  v472 = v460 ^ ((v441 & 0xFFFFDFFF ^ 0x3FC2579A) - ((2 * (v441 & 0xFFFFDFFF ^ 0x3FC2579A)) & 0xA437B0DE) - 769927057) ^ (2 * v468);
  v473 = v470 ^ *(_DWORD *)(v287
                          + 4
                          * (((v420 & 0x1C)
                            + (v420 ^ 0x10080D5D)
                            - ((v420 ^ 0x10080D5D) & 0x11C)
                            + 793788416) ^ 0x3F584C04)) ^ v471 ^ *(_DWORD *)(v286 + 4 * (BYTE2(v406) ^ 0xEFu));
  v474 = *(_DWORD *)(v287 + 4 * (v440 ^ 0xA3u)) ^ *(_DWORD *)(v286 + 4 * (v436 ^ 0x44538A7Cu)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v420) ^ 0x76)) ^ *(_DWORD *)(v289 + 4 * (BYTE1(v406) ^ 8u));
  v475 = (((2 * (BYTE1(v474) ^ 0x60)) & 0x9C) - (BYTE1(v474) ^ 0x60) + 1045321905) ^ 0x380F41F1;
  v476 = (BYTE1(v473) ^ 0xA7 | 0xE8E7C379) - (BYTE1(v473) ^ 0xA7 | 0x17183C86) + 387464326;
  v477 = (-1413950358 - (BYTE2(v473) ^ 0x33 | 0xABB8D46A) + (BYTE2(v473) ^ 0x33 | 0x54472B95)) ^ 0x15970396;
  v478 = (HIWORD(v469) & 0xA2 ^ 0xB3EF9F5F) - (HIWORD(v469) & 0x5D);
  v479 = (((v478 & 0x200F8560) + (v478 ^ 0x71CFA56F)) | 0x4100000) - ((v478 ^ 0x71CFA56F) & 0x80203860);
  v480 = *(_DWORD *)(v289
                   + 4
                   * (((v476 & 0xE02587EA ^ 0x11090EE2) + (v476 ^ 0xE2E6C11D) - ((v476 ^ 0xE2E6C11D) & 0xF12D8FEA)) ^ 0xFB2C8DE0)) ^ *(_DWORD *)(v287 + 4 * ((((2 * (v469 ^ 0x2B)) | 0x6FF7B0CC) - (v469 ^ 0x2B) + 1208231834) ^ 0xB7FBD89C)) ^ *(_DWORD *)(v286 + 4 * ((110724323 - (BYTE2(v474) ^ 0x1C1C51A3 | 0x69984E3) + (BYTE2(v474) ^ 0x1C1C51A3 | 0xF9667B1C)) ^ 0xE57A2A1E)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v472) ^ 0x37));
  v481 = *(_DWORD *)(v286
                   + 4
                   * (((HIWORD(v472) & 0xA2) + (BYTE2(v472) ^ 0xFFFFFFE6) + (BYTE2(v472) | 0x8B31565D) + 1) ^ 0x8B31560A)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v469) ^ 0x52)) ^ *(_DWORD *)(v289 + 4 * ((-885846689 - v475 + ((2 * v475) | 0x6999E542)) ^ 0x328DEBB0u)) ^ *(_DWORD *)(v287 + 4 * ((((2 * (v473 ^ 0xEC)) & 0xF6) - (v473 ^ 0xEC) + 2948) ^ 0xB0Du));
  v482 = *(_DWORD *)(v287 + 4 * (v472 ^ 0x27u)) ^ *(_DWORD *)(v286
                                                                               + 4
                                                                               * ((2055125489
                                                                                 - (v477 | 0x7A7EB9F1)
                                                                                 + (v477 | LODWORD(STACK[0x798]))) ^ 0xC4516ECE)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v474) ^ 0x90)) ^ *(_DWORD *)(v289 + 4 * ((-1903148762 - (BYTE1(v469) ^ 0x842E0D7A | 0x8E904126) + (BYTE1(v469) ^ 0x842E0D7A | 0x716FBED9)) ^ 0xF541B3D9));
  v483 = (v284 & 0xE2 ^ 0x32D1361) + (v284 & 0x1D) - 1;
  v484 = (((v480 ^ 0x23260B51) - 589695825) ^ ((v480 ^ 0xF8799C65) + 126247835) ^ ((v480 ^ 0xCC5DE47) - 214294087))
       - (((v483 ^ 0x2C6C8984) + 481210017) ^ ((v483 ^ 0xA93A74D3) - 1711778824) ^ ((v483 ^ 0x867BEEAF) - 1229338228))
       + 419605272;
  v485 = (v484 ^ 0xF014C23F) & (2 * (v484 & 0xF286D338)) ^ v484 & 0xF286D338;
  v486 = ((2 * (v484 ^ 0xB411E66F)) ^ 0x8D2E6AAE) & (v484 ^ 0xB411E66F) ^ (2 * (v484 ^ 0xB411E66F)) & 0x46973556;
  v487 = v486 ^ 0x42911551;
  v488 = (v486 ^ 0x4060000) & (4 * v485) ^ v485;
  v489 = ((4 * v487) ^ 0x1A5CD55C) & v487 ^ (4 * v487) & 0x46973554;
  v490 = (v489 ^ 0x2141543) & (16 * v488) ^ v488;
  v491 = ((16 * (v489 ^ 0x44832003)) ^ 0x69735570) & (v489 ^ 0x44832003) ^ (16 * (v489 ^ 0x44832003)) & 0x46973550;
  v492 = v490 ^ 0x46973557 ^ (v491 ^ 0x40131500) & (v490 << 8);
  v493 = v484 ^ (2
               * ((v492 << 16) & 0x46970000 ^ v492 ^ ((v492 << 16) ^ 0x35570000) & (((v491 ^ 0x6842007) << 8) & 0x46970000 ^ 0x40820000 ^ (((v491 ^ 0x6842007) << 8) ^ 0x17350000) & (v491 ^ 0x6842007))));
  v494 = v493 ^ v483 ^ 0x19;
  v495 = *(_DWORD *)(v286 + 4 * (v479 ^ 0x661F8720)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v473) ^ 0x77)) ^ *(_DWORD *)(v287 + 4 * ((((2 * (v474 ^ 0x3305030)) & 0x600A116) - (v474 ^ 0x3305030) + 1551738484) ^ 0x5F4DF667u)) ^ *(_DWORD *)(v289 + 4 * ((((2 * (BYTE1(v472) ^ 0x10)) | 0xA5620494) - (BYTE1(v472) ^ 0x10) - 1387332170) ^ 0x52B1021A));
  v496 = 2 * ((v493 ^ 0xA1) & (v483 ^ 0x32D13F8) ^ (v483 ^ 0x19) & 0x2000237);
  v497 = (((v494 ^ 0x17D2310A) - 400975018) ^ ((v494 ^ 0x70F0F2C2) - 1891936098) ^ ((v494 ^ 0x138969BF) - 331168799))
       - 1510369736
       + (((v496 ^ 0x6F18823F) + 1240222535) ^ ((v496 ^ 0xDDCBAE77) - 79730929) ^ ((v496 ^ 0xB6D3280A) - 1876434572));
  v498 = (v497 ^ 0xAB29196B) & (2 * (v497 & 0xABB19C63)) ^ v497 & 0xABB19C63;
  v499 = ((2 * (v497 ^ 0xFD6819AF)) ^ 0xADB30B98) & (v497 ^ 0xFD6819AF) ^ (2 * (v497 ^ 0xFD6819AF)) & 0x56D985CC;
  v500 = v499 ^ 0x52488444;
  v501 = (v499 ^ 0x48005C8) & (4 * v498) ^ v498;
  v502 = ((4 * v500) ^ 0x5B661730) & v500 ^ (4 * v500) & 0x56D985CC;
  v503 = (v502 ^ 0x5240050C) & (16 * v501) ^ v501;
  v504 = ((16 * (v502 ^ 0x49980CC)) ^ LODWORD(STACK[0x79C])) & (v502 ^ 0x49980CC) ^ (16 * (v502 ^ 0x49980CC)) & 0x56D985C0;
  v505 = v503 ^ 0x56D985CC ^ (v504 ^ 0x44980400) & (v503 << 8);
  v506 = v497 ^ (2
               * ((v505 << 16) & 0x56D90000 ^ v505 ^ ((v505 << 16) ^ 0x5CC0000) & (((v504 ^ 0x1241810C) << 8) & 0x56D90000 ^ 0x6580000 ^ (((v504 ^ 0x1241810C) << 8) ^ 0xD9850000) & (v504 ^ 0x1241810C))));
  v507 = v506 ^ 0x9633C1AE;
  v508 = *(_DWORD *)(v286
                   + 4
                   * ((1874726305
                     - (~HIWORD(v495) | 0x6FBE0DA1)
                     + (~HIWORD(v495) | 0x9041F25E)) ^ 0x9041F2CB)) ^ *(_DWORD *)(v285
                                                                                                 + 4
                                                                                                 * (HIBYTE(v482) ^ 9)) ^ *(_DWORD *)(v289 + 4 * (((BYTE1(v481) ^ 0xB1C80CB8) - ((2 * (BYTE1(v481) ^ 0xB1C80CB8)) & 0x61900088) - 154533052) ^ 0x47020F2C)) ^ *(_DWORD *)(v287 + 4 * (v506 ^ 0xAEu));
  v509 = *(_DWORD *)(v285 + 4 * ((v506 ^ 0x9633C1AE) >> 24)) ^ *(_DWORD *)(v286
                                                                           + 4
                                                                           * ((((2 * (BYTE2(v482) ^ 0x602A0202)) & 0xC0140036)
                                                                             - (BYTE2(v482) ^ 0x602A0202)
                                                                             - 1780125980) ^ LODWORD(STACK[0x7A0]))) ^ *(_DWORD *)(v289 + 4 * ((((2 * (BYTE1(v495) ^ 0x62)) | 0xD24DD7D8) - (BYTE1(v495) ^ 0x62) + 383325204) ^ 0xE926EB69));
  v510 = *(_DWORD *)(v287
                   + 4
                   * ((((2 * (v495 ^ 0x96)) & 0x16) - (v495 ^ 0x96) + 6132) ^ 0x1702u));
  v511 = *(_DWORD *)(v285 + 4 * (HIBYTE(v495) ^ 0xA9));
  v512 = ((2 * (BYTE2(v481) ^ 0x2A)) | 0xA10119F0) - (BYTE2(v481) ^ 0x2A) + 796881672;
  v513 = *(_DWORD *)(v286
                   + 4
                   * (((v512 & 0xDD7A207F ^ 0xCC500007) + (v512 ^ 0x112AAC78) - ((v512 ^ 0x112AAC78) & 0xDD7A207F)) ^ 0x1CD0005F));
  v514 = *(_DWORD *)(v285 + 4 * (HIBYTE(v481) ^ 0xE8)) ^ v510 ^ *(_DWORD *)(v289
                                                                            + 4
                                                                            * ((-1388007911
                                                                              - (BYTE1(v482) ^ 0x98)
                                                                              + ((2 * (BYTE1(v482) ^ 0x98)) & 0x28)
                                                                              + 2002) ^ 0xAD44B514)) ^ *(_DWORD *)(v286 + 4 * BYTE2(v507));
  v515 = (((8 * v513) & 0x99F6B730 ^ 0x88823410)
        - ((2 * ((8 * v513) & 0x99F6B730 ^ 0x88823410)) & 0x13A02600)
        + 231807945) ^ 0xDD85AEA;
  v516 = v513 ^ v511;
  v517 = ((v513 ^ v511) & 0xCC12919 ^ 0x4AF1294B) - ((2 * ((v513 ^ v511) & 0xCC12919 ^ 0x4AF1294B)) & 0x1C205236);
  v518 = ((((2 * v515) | 0x62FE0AAA) - v515 + 1317075627) ^ 0x56AB9DE9) & ((v513 >> 29) ^ 0xFFFFFFFC) ^ 0x8500140;
  v519 = ((8 * v511) & 0x80808620)
       + 587264
       + ((8 * v511) & 0x99F6B730 ^ 0xF0B6EE3C)
       - (((8 * v511) & 0x99F6B730 ^ 0xF0B6EE3C) & 0xA080C624)
       + 2691;
  v520 = *(_DWORD *)(v287
                   + 4
                   * (((v481 ^ 0x442410E7)
                     - ((2 * (v481 ^ 0x442410E7)) & 0x808204E)
                     - 1654710745) ^ 0xD97B0E6F));
  v521 = ((v519 ^ 0xA945164) & ((v511 >> 29) ^ 0xCA9D516D) | v519 & 0x3562AE90) ^ 0x24608810;
  HIDWORD(v522) = (-2116842401 - (v521 | 0x81D38C5F) + (v521 | 0x7E2C73A0)) ^ 0xFAEAB8D3 ^ (v518
                                                                                          - 835030305
                                                                                          - (STACK[0x7A4] & (2 * v518))
                                                                                          - 2574);
  LODWORD(v522) = HIDWORD(v522);
  v523 = (v517 - 1643073765) & 0x2CC01A6D ^ 0xC00A65 ^ (((v522 >> 3) + 567228788 - ((2 * (v522 >> 3)) & 0x439E72E8)) ^ 0x29871D12) & ((v517 - 1643073765) ^ 0x23DF70AE);
  v524 = (v482 ^ 0xB1041076)
       + (v482 & 0xE4 ^ 0x4C722580)
       - ((v482 ^ 0xB1041076) & 0x810410E4);
  v525 = ((v509 ^ v520) >> 16) ^ 8;
  v526 = ((2 * v525) & 0x12) - v525;
  v527 = (BYTE2(v508) ^ 0xE7) + (HIWORD(v508) & 0x69 ^ 0x508) - ((BYTE2(v508) ^ 0xE7) & 0x69);
  v528 = *(_DWORD *)(v289 + 4 * BYTE1(v507));
  v529 = *(_DWORD *)(v287 + 4 * (v524 ^ 0x7C7225E4));
  v530 = v529 ^ (-1893312952 - (v523 | 0x8F265648) + (v523 | 0x70D9A9B7)) ^ v528;
  v531 = ((v508 ^ 0x406139CC)
        + (v508 & 0xED ^ 0x9F9E8021)
        - ((v508 ^ 0x406139CC) & 0x406131ED)) ^ 0x9F9E88EF;
  v532 = (-1742889266
        - ((v509 ^ v520) ^ 0x69)
        + ((2 * ((v509 ^ v520) ^ 0x69)) | 0xCFC4C264)) ^ 0xC25FA781;
  v533 = ((2 * v532) & 0x61CB246E) - v532;
  v534 = *(_DWORD *)(v289 + 4 * (BYTE1(v508) ^ 0x77u)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v514) ^ 0x8E));
  v535 = v534 ^ *(_DWORD *)(v287 + 4 * (v530 ^ 0xF9u)) ^ *(_DWORD *)(v286
                                                                                      + 4 * ((v526 + 1526) ^ 0x5B2u));
  v536 = ((v535 & 0x26240F06 ^ 0x4240D06)
        + (v535 & 0x24000706 ^ 0x29C1D230)
        - ((v535 & 0x26240F06 ^ 0x4240D06) & 0x24000706)) ^ 0x2FC6D323;
  v537 = (v536 | 0x7F9C223E) - (v536 | 0x8063DDC1);
  v538 = *(_DWORD *)(v285 + 4 * (HIBYTE(v508) ^ 0xC9));
  v539 = *(_DWORD *)(v289 + 4 * (BYTE1(v514) ^ 0xFu));
  v540 = *(_DWORD *)(v286 + 4 * ((((2 * (BYTE2(v530) ^ 0xB5)) & 0x7A) - (BYTE2(v530) ^ 0xB5) + 4290) ^ 0x10A6u)) ^ v538 ^ v539 ^ *(_DWORD *)(v287 + 4 * ((v533 + 1327132104) ^ 0xEAA7ABD9));
  v541 = ((v537 - 2140938815) ^ 0x8040DDD0) & ((((2 * (v535 & 0xD9DBF0F9 ^ LODWORD(STACK[0x7A8]))) | 0x84C0919E)
                                              - (v535 & 0xD9DBF0F9 ^ LODWORD(STACK[0x7A8]))
                                              + 1033877297) ^ 0x1044954B) ^ (v537 - 2140938815) & 0xEDC122BB;
  v542 = (v541 & 0x72B834A3 ^ 0x72B83482) + (v541 & 0x8D47CB5C ^ 0x84400219);
  v543 = *(_DWORD *)(v287 + 4 * (v514 ^ 0x9Eu)) ^ *(_DWORD *)(v286 + 4 * (v527 ^ 0x558u));
  v544 = *(_DWORD *)(v285 + 4 * (((v509 ^ v520) >> 24) ^ 0x17)) ^ *(_DWORD *)(v289
                                                                              + 4
                                                                              * (((BYTE1(v530) ^ 0x60261B58)
                                                                                + ((v530 >> 8) & 0x81 ^ 0x19100081)
                                                                                - ((BYTE1(v530) ^ 0x60261B58) & 0x60261381)) ^ 0x19100893));
  v545 = *(_DWORD *)(v287 + 4 * v531);
  LODWORD(STACK[0x6AB0]) = v545;
  v546 = *(_DWORD *)(v286 + 4 * (BYTE2(v514) ^ 0xEDu));
  v547 = v545 ^ v546 ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v530) ^ 0xA1)) ^ *(_DWORD *)(v289
                                                                                   + 4
                                                                                   * (((((v509 ^ v520) >> 8) & 0xB1 ^ 0x221C0330)
                                                                                     + (((v509 ^ v520) >> 8) & 0x4E ^ 0x40001803)
                                                                                     - 1) ^ 0x621C1B6B));
  LOBYTE(v530) = -1 - (STACK[0x68D0] & 0x10 | 0x61);
  v548 = (v540 ^ 0x5F0E442C) >> (v530 & 0x10) >> (v530 ^ 0x9E);
  v549 = v543 ^ v544;
  v550 = ((v543 ^ v544) >> 16) ^ 0x78;
  v551 = (v550 + (HIWORD(v549) & 0x39 ^ 0xC465201) - (v550 & 0x39)) ^ LODWORD(STACK[0x7AC]);
  v552 = -197034087 - (v551 | 0xF4417F99) + (v551 | 0xBBE8066);
  v553 = (((2 * (v547 ^ 0x74)) & 0x1D8) - (v547 ^ 0x74) - 975050477) ^ 0xA1E16DF5;
  v554 = v542 - 1;
  LOWORD(v542) = ((v542 - 1) ^ 0xD7)
               - 30324
               - ((2 * ((v542 - 1) ^ 0xD7)) & 0x1D4)
               + 606;
  v555 = (v542 & 0xF09 ^ LODWORD(STACK[0x7B0])) + (v542 & 0xF6 ^ LODWORD(STACK[0x7B4]));
  v556 = (((2 * (BYTE2(v547) ^ 0xDE)) & 0x16E) - (BYTE2(v547) ^ 0xDE) + 181675080) ^ 0x46C0240C;
  v557 = *(_DWORD *)(v286 + 4 * (v552 ^ 0xC7B7D0FE)) ^ *(_DWORD *)(v287
                                                                   + 4
                                                                   * ((((2 * v553) & 0x4001114E) - v553 + 1200957272) ^ 0x2395A348)) ^ *(_DWORD *)(v289 + 4 * ((-34017248 - (BYTE1(v540) ^ 0xA1492504 | 0xFDF8F020) + (BYTE1(v540) ^ 0xA1492504 | 0x2070FDF)) ^ 0xA34E2A9F)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v554) ^ 0xDF));
  v558 = ((v549 & 0x11) + (v549 & 0xEE ^ 0x731F6EED) - 1) ^ 0x57794AFE;
  v559 = *(_DWORD *)(v286 + 4 * v548) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v549) ^ 0x41)) ^ *(_DWORD *)(v289 + 4 * (((BYTE1(v547) ^ 0x70) + ((v547 >> 8) & 0x25 ^ 0xAB61AB05) - ((BYTE1(v547) ^ 0x70) & 0x25)) ^ 0xAB61AB81)) ^ *(_DWORD *)(v287 + 4 * ((v555 - 1) ^ 0x58657751u));
  HIDWORD(v522) = *(_DWORD *)(v285 + 4 * (HIBYTE(v547) ^ 0x3F));
  LODWORD(v522) = HIDWORD(v522);
  v560 = v522 >> 12;
  LODWORD(v522) = __ROR4__(*(_DWORD *)(v286 + 4 * (BYTE2(v554) ^ 0x49u)), 12);
  v561 = *(_DWORD *)(v286 + 4 * ((v556 - ((2 * v556) & 0x1820024C) + 1071298854) ^ 0x73CEB90Eu)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v540) ^ 0x5F)) ^ *(_DWORD *)(v287 + 4 * ((603234269 - (v558 | 0x23F49FDD) + (v558 | 0xDC0B6022)) ^ 0xF86D44A1)) ^ *(_DWORD *)(v289 + 4 * (BYTE1(v554) ^ 0xEAu));
  v562 = v520 & 0xD2EED79C ^ LODWORD(STACK[0x7B8]) ^ (v509 ^ 0x752A6146) & (v520 ^ 0x705EFFA9);
  v563 = (-2097159079 - (v562 | 0x82FFE459) + (v562 | 0x7D001BA6)) ^ 0xF102B39B;
  v564 = __PAIR64__(v528, __ROR4__(v560 ^ v522 ^ 0xA199669D, 20));
  v565 = *(_DWORD *)(v287 + 4 * (((v540 & 3 ^ 0x4200202) + (v540 & 0xFC ^ 0xBB180871) - 1) ^ 0xBF380A5E)) ^ v564 ^ *(_DWORD *)(v289 + 4 * (((BYTE1(v549) ^ 0x4502921A) + ((v549 >> 8) & 0x77 ^ 0x1A080565) - ((BYTE1(v549) ^ 0x4502921A) & 0x5000277)) ^ 0x5A0A9517));
  v566 = (((v520 ^ 0x63220AC1) - 1663175361) ^ ((v520 ^ 0x8D244CAF) + 1927000913) ^ ((v520 ^ 0x9E58B9C7) + 1638352441))
       + (((v509 ^ 0x3FE998E6) - 1072273638) ^ ((v509 ^ 0xF7302BB4) + 147838028) ^ ((v509 ^ 0x6F1D0588) - 1864172936))
       + ((((2 * v563) ^ 0x32BD0CCB) + 1618524920) ^ (((2 * v563) ^ 0x27426E9) + 1353814230) ^ (((2 * v563) ^ 0x8C1D848)
                                                                                              + 1510239861))
       - ((((4 * v563) ^ 0xAD20BE9D) + 146427465) ^ (((4 * v563) ^ 0x77885638) - 770529554) ^ (((4 * v563) ^ 0xAAB90C71)
                                                                                             + 254016677))
       - 1751414037;
  v567 = (v566 ^ LODWORD(STACK[0x7BC])) & (2 * (v566 & 0xEB45FB43)) ^ v566 & 0xEB45FB43;
  v568 = ((2 * (v566 ^ 0x136AAC62)) ^ 0xF05EAE42) & (v566 ^ 0x136AAC62) ^ (2 * (v566 ^ 0x136AAC62)) & 0xF82F5720;
  v569 = (v568 ^ 0xF00E0600) & (4 * v567) ^ v567;
  v570 = ((4 * (v568 ^ 0x8215121)) ^ 0xE0BD5C84) & (v568 ^ 0x8215121) ^ (4 * (v568 ^ 0x8215121)) & 0xF82F5720;
  v571 = (v570 ^ 0xE02D5400) & (16 * v569) ^ v569;
  v572 = ((16 * (v570 ^ LODWORD(STACK[0x7C4]))) ^ LODWORD(STACK[0x7C0])) & (v570 ^ LODWORD(STACK[0x7C4])) ^ (16 * (v570 ^ LODWORD(STACK[0x7C4]))) & 0xF82F5720;
  v573 = v571 ^ 0xF82F5721 ^ (v572 ^ 0x80255200) & (v571 << 8);
  v574 = v566 ^ (2
               * ((v573 << 16) & 0x782F0000 ^ v573 ^ ((v573 << 16) ^ 0x57210000) & (((v572 ^ 0x780A0521) << 8) & 0xF82F0000 ^ 0x50280000 ^ (((v572 ^ 0x780A0521) << 8) ^ 0x2F570000) & (v572 ^ 0x780A0521))));
  LODWORD(v564) = v528;
  LODWORD(v564) = __ROR4__((v564 >> 12) ^ __ROR4__(v516, 12) ^ 0x4C46FBB0, 20);
  v575 = (((2 * (v529 ^ v564)) & 0xC179215C ^ 0xC168201C)
        + ((2 * (v529 ^ v564)) & 0x80002050 ^ 0x228248E3)
        - (((2 * (v529 ^ v564)) & 0xC179215C ^ 0xC168201C) & 0x80002050)) & 0xC17BEFFC;
  v576 = (((v529 ^ v564 ^ 0xF4BEB71D) - 202138534) ^ ((v529 ^ v564 ^ LODWORD(STACK[0x7C8])) + 2147334758) ^ ((v529 ^ v564 ^ 0x342F6B8B) + 862077136))
       - (((v575 ^ LODWORD(STACK[0x7CC])) + 235607191) ^ ((v575 ^ 0x2AF009DA) + 148758977) ^ ((v575 ^ 0x7FCBCF6)
                                                                                            + 634475757))
       + 425550689;
  v577 = (v576 ^ 0x22F367C1) & (2 * (v576 & 0xAAFA6814)) ^ v576 & 0xAAFA6814;
  v578 = ((2 * (v576 ^ 0x631337C1)) ^ 0x93D2BFAA) & (v576 ^ 0x631337C1) ^ (2 * (v576 ^ 0x631337C1)) & 0xC9E95FD4;
  v579 = (v578 ^ 0x81C00085) & (4 * v577) ^ v577;
  v580 = ((4 * (v578 ^ 0x48294055)) ^ 0x27A57F54) & (v578 ^ 0x48294055) ^ (4 * (v578 ^ 0x48294055)) & 0xC9E95FD4;
  v581 = (v580 ^ 0x1A15F40) & (16 * v579) ^ v579;
  v582 = ((16 * (v580 ^ 0xC8480081)) ^ 0x9E95FD50) & (v580 ^ 0xC8480081) ^ (16 * (v580 ^ 0xC8480081)) & 0xC9E95FD0;
  v583 = v581 ^ 0xC9E95FD5 ^ (v582 ^ LODWORD(STACK[0x7D0])) & (v581 << 8);
  v584 = v576 ^ (2
               * ((v583 << 16) & 0x49E90000 ^ v583 ^ ((v583 << 16) ^ 0x5FD50000) & (((v582 ^ 0x41680285) << 8) & 0xC9E90000 ^ 0xA00000 ^ (((v582 ^ 0x41680285) << 8) ^ 0x695F0000) & (v582 ^ 0x41680285))));
  v585 = v534 ^ *(_DWORD *)(v286 + 4 * (BYTE2(v574) ^ 0x8Fu)) ^ *(_DWORD *)(v287
                                                                            + 4
                                                                            * ((((v576 ^ (2 * v583)) ^ 0xA84410BE)
                                                                              - (STACK[0x7D4] & (2
                                                                                               * ((v576 ^ (2 * v583)) ^ 0xA84410BE)))
                                                                              + 952746435) ^ 0x908DD1C3));
  v586 = v543 ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v574) ^ 0x7B)) ^ *(_DWORD *)(v289
                                                                            + 4
                                                                            * (((unsigned __int16)(v576 ^ (2 * v583)) >> 8) ^ 0xD7u));
  v587 = *(_DWORD *)(v286 + 4 * (BYTE2(v584) ^ 0xAAu)) ^ v539;
  v588 = (((v538 ^ 0xE8DA4C77) + 388346761) ^ ((v538 ^ 0xC221F41F) + 1037962209) ^ ((v538 ^ 0x76BC28FB) - 1992042747))
       - (((v587 ^ v538 ^ 0xF1235D20) + 249340640) ^ ((v587 ^ v538 ^ 0xC482BCB3) + 998064973) ^ ((v587 ^ v538 ^ 0x92655749)
                                                                                               + 1838852279))
       - 232780683;
  v589 = (v588 ^ 0x8A60E834) & (2 * (v588 & 0xC262CD44)) ^ v588 & 0xC262CD44;
  v590 = ((2 * (v588 ^ 0x8AA57ABC)) ^ 0x918F6FF0) & (v588 ^ 0x8AA57ABC) ^ (2 * (v588 ^ 0x8AA57ABC)) & 0x48C7B7F8;
  v591 = (v590 ^ 0x872730) & (4 * v589) ^ v589;
  v592 = ((4 * (v590 ^ 0x48409008)) ^ 0x231EDFE0) & (v590 ^ 0x48409008) ^ (4 * (v590 ^ 0x48409008)) & 0x48C7B7F8;
  v593 = (v592 ^ 0x697F8) & (16 * v591) ^ v591;
  v594 = ((16 * (v592 ^ 0x48C12018)) ^ 0x8C7B7F80) & (v592 ^ 0x48C12018) ^ (16 * (v592 ^ 0x48C12018)) & 0x48C7B7F0;
  v595 = v593 ^ 0x48C7B7F8 ^ (v594 ^ 0x8433778) & (v593 << 8);
  v596 = ((v595 << 16) ^ 0x37F80000) & (((v594 ^ 0x40848078) << 8) & 0x48C70000 ^ 0x8400000 ^ (((v594 ^ 0x40848078) << 8) ^ 0xC7B70000) & (v594 ^ 0x40848078));
  v597 = 1344242769
       - (((v587 ^ 0x73C460C6) - 1942249670) ^ ((v587 ^ 0x86A6A4C9) + 2035899191) ^ ((v587 ^ 0xEE1E246) - 249684550));
  v598 = (v597 ^ 0xB11D1044) & (2 * (v597 & 0xB45D5566)) ^ v597 & 0xB45D5566;
  v599 = ((2 * (v597 ^ 0x998F32C0)) ^ 0x5BA4CF4C) & (v597 ^ 0x998F32C0) ^ (2 * (v597 ^ 0x998F32C0)) & 0x2DD267A6;
  v600 = (v599 ^ LODWORD(STACK[0x7DC])) & (4 * v598) ^ v598;
  v601 = ((4 * (v599 ^ 0x245220A2)) ^ 0xB7499E98) & (v599 ^ 0x245220A2) ^ (4 * (v599 ^ 0x245220A2)) & 0x2DD267A4;
  v602 = (v601 ^ LODWORD(STACK[0x7E4])) & (16 * v600) ^ v600;
  v603 = ((16 * (v601 ^ LODWORD(STACK[0x7D8]))) ^ 0xDD267A60) & (v601 ^ LODWORD(STACK[0x7D8])) ^ (16
                                                                                                * (v601 ^ LODWORD(STACK[0x7D8]))) & 0x2DD267A0;
  v604 = v602 ^ 0x2DD267A6 ^ (v603 ^ LODWORD(STACK[0x7E0])) & (v602 << 8);
  v605 = v597 ^ v587 ^ v588 ^ (2
                             * ((v604 << 16) & 0x2DD20000 ^ v604 ^ v595 ^ ((v604 << 16) ^ 0x67A60000) & (((v603 ^ 0x20D00586) << 8) & 0x2DD20000 ^ 0x2D900000 ^ (((v603 ^ 0x20D00586) << 8) ^ 0xD2670000) & (v603 ^ 0x20D00586)) ^ (v595 << 16) & 0x48C70000 ^ v596));
  v606 = (((v538 ^ 0x4CEB9FC8) - 1290510280) ^ ((v538 ^ 0x83563186) + 2091503226) ^ ((v538 ^ 0x93FA3EDD) + 1812316451))
       + 940089552
       + (((v605 ^ 0x7BC0A93E) - 345428197) ^ ((v605 ^ 0x420AFC33) - 761038312) ^ ((v605 ^ 0x34D94BDA) - 1536111105));
  v607 = (v606 ^ 0xE66746AE) & (2 * (v606 & 0x868456CF)) ^ v606 & 0x868456CF;
  v608 = ((2 * (v606 ^ 0xEE67E6B6)) ^ 0xD1C760F2) & (v606 ^ 0xEE67E6B6) ^ (2 * (v606 ^ 0xEE67E6B6)) & 0x68E3B078;
  v609 = (v608 ^ 0x32071) & (4 * v607) ^ v607;
  v610 = ((4 * (v608 ^ 0x28209009)) ^ 0xA38EC1E4) & (v608 ^ 0x28209009) ^ (4 * (v608 ^ 0x28209009)) & 0x68E3B078;
  v611 = (v610 ^ 0x20828069) & (16 * v609) ^ v609;
  v612 = ((16 * (v610 ^ 0x48613019)) ^ LODWORD(STACK[0x7E8])) & (v610 ^ 0x48613019) ^ (16 * (v610 ^ 0x48613019)) & 0x68E3B070;
  v613 = v611 ^ 0x68E3B079 ^ (v612 ^ 0x8230069) & (v611 << 8);
  v614 = *(_DWORD *)(v285 + 4 * (HIBYTE(v584) ^ 0xAA));
  v615 = v606 ^ *(_DWORD *)(v287
                          + 4
                          * (((v574 ^ 0x6E)
                            + (v574 & 0xF2 ^ 0x51525290)
                            - ((v574 ^ 0x6E) & 0xF2)) ^ 0x51525225)) ^ (2
                                                                                       * ((v613 << 16) & 0x68E30000 ^ v613 ^ ((v613 << 16) ^ 0x30790000) & (((v612 ^ 0x60C0B069) << 8) & 0x68E30000 ^ 0x8430000 ^ (((v612 ^ 0x60C0B069) << 8) ^ 0x63B00000) & (v612 ^ 0x60C0B069))));
  v616 = (v614 & 0x10000000 | 0x81EA7FF5) ^ ((v614 & 0x10000000) + 2110881819) ^ ((v614 & 0x10000000 ^ 0x1F1C9173)
                                                                                + 1712713368);
  v617 = v616 - 491630697;
  v618 = (v617 ^ 0x32A2DEB0) & (2 * (v617 & 0xB0000004)) ^ v617 & 0xB0000004;
  v619 = ((2 * (v617 ^ 0x32A2DEB0)) ^ 0xDCDDC68) & (v617 ^ 0x32A2DEB0) ^ (2 * (v617 ^ 0x32A2DEB0)) & 0x86E6EE34;
  v620 = (v619 ^ LODWORD(STACK[0x7EC])) & (4 * v618) ^ v618;
  v621 = ((4 * (v619 ^ 0x82222214)) ^ 0x1B9BB8D0) & (v619 ^ 0x82222214) ^ (4 * (v619 ^ 0x82222214)) & 0x86E6EE34;
  v622 = (v621 ^ 0x282A800) & (16 * v620) ^ v620;
  v623 = ((16 * (v621 ^ 0x84644624)) ^ 0x6E6EE340) & (v621 ^ 0x84644624) ^ (16 * (v621 ^ 0x84644624)) & 0x86E6EE30;
  v624 = v622 ^ 0x86E6EE34 ^ (v623 ^ 0x666E200) & (v622 << 8);
  v625 = (v616 - 491630697) ^ (2
                             * ((v624 << 16) & 0x6E60000 ^ v624 ^ ((v624 << 16) ^ 0x6E340000) & ((((v623 ^ 0x80800C34) << 8) ^ 0x66EE0000) & (v623 ^ 0x80800C34) ^ ((v623 ^ 0x80800C34) << 8) & 0x6E60000)));
  v626 = v625 & 0xFE6B19BF ^ 0xAC0A1183 ^ (v625 ^ 0xB5C1ECEC) & (v546 ^ 0x9BF55689);
  v458 = v626 - ((2 * v626) & 0x6401202C) == -129304285;
  v627 = -1262137503 - v616;
  if (v458)
    v627 = v616 - 491630697;
  v628 = (((v546 ^ LODWORD(STACK[0x7F0])) + 1930025121) ^ ((v546 ^ 0x4505F927) - 1158019367) ^ ((v546 ^ 0xAC6D914E)
                                                                                              + 1402105522))
       + 1552991147
       + v627;
  v629 = (v628 ^ 0xB9193FAF) & (2 * (v628 & 0xBD51BC0F)) ^ v628 & 0xBD51BC0F;
  v630 = ((2 * (v628 ^ 0x89B967A1)) ^ 0x69D1B75C) & (v628 ^ 0x89B967A1) ^ (2 * (v628 ^ 0x89B967A1)) & 0x34E8DBAE;
  v631 = (v630 ^ LODWORD(STACK[0x7FC])) & (4 * v629) ^ v629;
  v632 = ((4 * (v630 ^ 0x142848A2)) ^ LODWORD(STACK[0x7F8])) & (v630 ^ 0x142848A2) ^ (4 * (v630 ^ 0x142848A2)) & 0x34E8DBAC;
  v633 = (v632 ^ 0x10A04AA6) & (16 * v631) ^ v631;
  v634 = ((16 * (v632 ^ 0x24489106)) ^ 0x4E8DBAE0) & (v632 ^ 0x24489106) ^ (16 * (v632 ^ 0x24489106)) & 0x34E8DBA0;
  v635 = v633 ^ 0x34E8DBAE ^ (v634 ^ 0x4889A0E) & (v633 << 8);
  v636 = *(_DWORD *)(v289 + 4 * (BYTE1(v574) ^ 0x45u)) ^ LODWORD(STACK[0x6AB0]) ^ (((2
                                                                                     * (v614 & 0xEFFFFFFF ^ 0x13573283)) | 0x2E8FB420)
                                                                                   - (v614 & 0xEFFFFFFF ^ 0x13573283)
                                                                                   + 1756898800) ^ v628 ^ (2 * ((v635 << 16) & 0x34E80000 ^ v635 ^ ((v635 << 16) ^ 0x5BAE0000) & (((v634 ^ LODWORD(STACK[0x7F4])) << 8) & 0x34E80000 ^ 0x14200000 ^ (((v634 ^ LODWORD(STACK[0x7F4])) << 8) ^ 0x68DB0000) & (v634 ^ LODWORD(STACK[0x7F4])))));
  v637 = ((BYTE2(v586) ^ 0x56) + (HIWORD(v586) & 0x4D ^ 0x84113309) - ((BYTE2(v586) ^ 0x56) & 0x4D)) ^ 0xC41135D;
  v638 = *(_DWORD *)(v285 + 4 * (HIBYTE(v585) ^ 0x81)) ^ *(_DWORD *)(v286
                                                                     + 4
                                                                     * ((-1104745309 - v637 + ((2 * v637) & 0xA026B8)) ^ 0x3676CCA7));
  v639 = (((2 * (BYTE2(v636) ^ 0x8F)) & 0xDE) - (BYTE2(v636) ^ 0x8F) - 791423856) ^ 0xB84BF5B1;
  v640 = 184261159 - (v639 | 0xAFB9A27) + (v639 | LODWORD(STACK[0x800]));
  v641 = ((2 * (BYTE1(v615) ^ 0x54)) | 0xC32501E2) - (BYTE1(v615) ^ 0x54) + 510492431;
  v642 = (v641 & 0x9CB3086A ^ 0x1833080B) + (v641 & 0x6100F795);
  v643 = ((v636 ^ 0x65) - ((2 * v636) & 0x20) - 1406891248) ^ 0xAC6E9B10;
  v644 = ((2 * (v615 ^ 0xF1)) & 0x9C) - (v615 ^ 0xF1) + 59554225;
  v645 = *(_DWORD *)(v286
                   + 4
                   * (((HIWORD(v615) & 0xC2) + (BYTE2(v615) ^ 0xE7) - ((BYTE2(v615) ^ 0xE7) & 0xC2) + 34560) ^ 0x876E)) ^ *(_DWORD *)(v287 + 4 * (v585 ^ 0x29u)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v586) ^ 0x41)) ^ *(_DWORD *)(v289 + 4 * ((2069546117 - (BYTE1(v636) ^ 0xF192016A | 0x7B5AC485) + (BYTE1(v636) ^ 0xF192016A | 0x84A53B7A)) ^ LODWORD(STACK[0x804])));
  v646 = v638 ^ *(_DWORD *)(v287 + 4 * ((-1004836081 - (v643 | 0xC41B6B0F) + (v643 | 0x3BE494F0)) ^ 0x3BAE84E1)) ^ *(_DWORD *)(v289 + 4 * ((v642 - 1) ^ 0xF9A1886B));
  v647 = *(_DWORD *)(v286 + 4 * (BYTE2(v585) ^ 0x94u)) ^ *(_DWORD *)(v285 + 4 * (HIBYTE(v636) ^ 0x3B)) ^ *(_DWORD *)(v289 + 4 * ((336584700 - (BYTE1(v586) ^ 0x19640AE2) + ((2 * (BYTE1(v586) ^ 0x19640AE2)) & 0x12C00006)) ^ 0xD6BD564u)) ^ *(_DWORD *)(v287 + 4 * (((v644 ^ 0x1124B9A1) - (v644 & 0x80000E) + (v644 & 0x300E ^ 0x8000400E)) ^ 0x92287024));
  v648 = *(_DWORD *)(v286 + 4 * (v640 ^ 0x9D9C449A)) ^ __ROR4__(__ROR4__(*(_DWORD *)(v285 + 4 * (HIBYTE(v615) ^ 0xEF)), 4) ^ 0x71E0C087, 28) ^ *(_DWORD *)(v289+ 4* ((((2 * (BYTE1(v585) ^ 0x8D2136B)) | 0x1D4D443E)- (BYTE1(v585) ^ 0x8D2136B)+ 1901682145) ^ 0x8674B11E)) ^ *(_DWORD *)(v287 + 4 * ((((2 * (v586 ^ 0x949AEAD3)) & 0x11041E8) - (v586 ^ 0x949AEAD3) - 596193781) ^ 0x48EC2449));
  v649 = ((v647 ^ 0xDBE2F339) - 454984175) ^ ((v647 ^ 0x2D26BA4D) + 304428901) ^ ((v647 ^ 0x36383BA2) + 154908300);
  v650 = (((v559 ^ 0xE2BD88A8) - 283119798) ^ ((v559 ^ 0x67BE6294) + 1780221302) ^ ((v559 ^ 0x25430844) + 685862822))
       - (((v645 ^ 0x25E001A8) - 759096306) ^ ((v645 ^ 0x6391A133) - 1800356713) ^ ((v645 ^ 0xE63142E3) + 286285639))
       + 774705353;
  v651 = (v650 ^ 0x878C34C2) & (2 * (v650 & 0xA72C468B)) ^ v650 & 0xA72C468B;
  v652 = ((2 * (v650 ^ 0x81C4B0C6)) ^ 0x4DD1EC9A) & (v650 ^ 0x81C4B0C6) ^ (2 * (v650 ^ 0x81C4B0C6)) & 0x26E8F64C;
  v653 = v652 ^ LODWORD(STACK[0x808]);
  v654 = (v652 ^ 0x6C82408) & (4 * v651) ^ v651;
  v655 = ((4 * v653) ^ 0x9BA3D934) & v653 ^ (4 * v653) & 0x26E8F64C;
  v656 = (v655 ^ 0x2A0D000) & (16 * v654) ^ v654;
  v657 = ((16 * (v655 ^ 0x24482649)) ^ 0x6E8F64D0) & (v655 ^ 0x24482649) ^ (16 * (v655 ^ 0x24482649)) & 0x26E8F640;
  v658 = v656 ^ 0x26E8F64D ^ (v657 ^ 0x26886400) & (v656 << 8);
  v659 = v650 ^ (2
               * ((v658 << 16) & 0x26E80000 ^ v658 ^ ((v658 << 16) ^ 0x764D0000) & (((v657 ^ 0x60920D) << 8) & 0x26E80000 ^ 0x6080000 ^ (((v657 ^ 0x60920D) << 8) ^ 0xE8F60000) & (v657 ^ 0x60920D))));
  v660 = (((v557 ^ 0x174AEBA6) - 1173482006) ^ ((v557 ^ 0xFE531BEF) + 1394075041) ^ ((v557 ^ 0xDF8121D3) + 1925570461))
       - (((v646 ^ 0x7FB0804D) - 51130913) ^ ((v646 ^ 0x7470CCD2) - 147619518) ^ ((v646 ^ 0x3D589D05) - 1105473385))
       - 1559181207;
  v661 = (v660 ^ 0xC142ED05) & (2 * (v660 & 0xD18ACE48)) ^ v660 & 0xD18ACE48;
  v662 = ((2 * (v660 ^ 0x41466195)) ^ 0x21995FBA) & (v660 ^ 0x41466195) ^ (2 * (v660 ^ 0x41466195)) & 0x90CCAFDC;
  v663 = v662 ^ LODWORD(STACK[0x810]);
  v664 = (v662 ^ LODWORD(STACK[0x80C])) & (4 * v661) ^ v661;
  v665 = ((4 * v663) ^ 0x4332BF74) & v663 ^ (4 * v663) & 0x90CCAFDC;
  v666 = (v665 ^ 0xAF40) & (16 * v664) ^ v664;
  v667 = ((16 * (v665 ^ 0x90CC0089)) ^ 0xCCAFDD0) & (v665 ^ 0x90CC0089) ^ (16 * (v665 ^ 0x90CC0089)) & 0x90CCAFD0;
  v668 = v666 ^ 0x90CCAFDD ^ (v667 ^ 0xC8AD00) & (v666 << 8);
  v669 = v660 ^ (2
               * ((v668 << 16) & 0x10CC0000 ^ v668 ^ ((v668 << 16) ^ 0x2FDD0000) & (((v667 ^ 0x9004020D) << 8) & 0x90CC0000 ^ 0x10400000 ^ (((v667 ^ 0x9004020D) << 8) ^ 0xCCAF0000) & (v667 ^ 0x9004020D))));
  v670 = (((v565 ^ 0x5E18AEFB) + 1859590819) ^ ((v565 ^ 0x181CFFA0) + 684936186) ^ ((v565 ^ 0x1091F994) + 543051214))
       - v649
       - 1704035141;
  v671 = (v670 ^ 0xB5BD1980) & (2 * (v670 & 0x85BE1814)) ^ v670 & 0x85BE1814;
  v672 = ((2 * (v670 ^ 0xB4DD0988)) ^ 0x62C62338) & (v670 ^ 0xB4DD0988) ^ (2 * (v670 ^ 0xB4DD0988)) & 0x3163119C;
  v673 = v672 ^ 0x11211084;
  v674 = (v672 ^ 0x20411014) & (4 * v671) ^ v671;
  v675 = ((4 * v673) ^ 0xC58C4670) & v673 ^ (4 * v673) & 0x3163119C;
  v676 = (v675 ^ 0x100000C) & (16 * v674) ^ v674;
  v677 = ((16 * (v675 ^ LODWORD(STACK[0x814]))) ^ 0x163119C0) & (v675 ^ LODWORD(STACK[0x814])) ^ (16
                                                                                                * (v675 ^ LODWORD(STACK[0x814]))) & 0x31631190;
  v678 = v676 ^ 0x3163119C ^ (v677 ^ 0x1021111C) & (v676 << 8);
  v679 = v670 ^ (2
               * ((v678 << 16) & 0x31630000 ^ v678 ^ ((v678 << 16) ^ 0x119C0000) & (((v677 ^ LODWORD(STACK[0x818])) << 8) & 0x31630000 ^ 0x10620000 ^ (((v677 ^ LODWORD(STACK[0x818])) << 8) ^ 0x63110000) & (v677 ^ LODWORD(STACK[0x818])))));
  v680 = (((v561 ^ 0xB6BD76A5) - 1668150968) ^ ((v561 ^ 0xE2C84739) - 924370724) ^ ((v561 ^ 0x7CA1DEBB) + 1452187994))
       - (((v648 ^ 0x3B927D26) - 649308856) ^ ((v648 ^ 0xB91F3FE5) + 1539381125) ^ ((v648 ^ 0xB455A593) + 1451986419))
       + 571656381;
  v681 = (v680 ^ 0xE8ACF001) & (2 * (v680 & 0xF2CCF115)) ^ v680 & 0xF2CCF115;
  v682 = ((2 * (v680 ^ 0xECA55209)) ^ 0x3CD34638) & (v680 ^ 0xECA55209) ^ (2 * (v680 ^ 0xECA55209)) & 0x1E69A31C;
  v683 = v682 ^ 0x228A104;
  v684 = (v682 ^ 0x1C410018) & (4 * v681) ^ v681;
  v685 = ((4 * v683) ^ 0x79A68C70) & v683 ^ (4 * v683) & 0x1E69A31C;
  v686 = v684 ^ 0x1E69A31C ^ (v685 ^ 0x18208010) & (16 * v684);
  v687 = (16 * (v685 ^ 0x649230C)) & 0x1E69A310 ^ LODWORD(STACK[0x81C]) ^ ((16 * (v685 ^ 0x649230C)) ^ 0xE69A31C0) & (v685 ^ 0x649230C);
  v688 = (v686 << 8) & 0x1E69A300 ^ v686 ^ ((v686 << 8) ^ 0x69A31C00) & v687;
  v689 = v680 ^ (2
               * ((v688 << 16) & 0x1E690000 ^ v688 ^ ((v688 << 16) ^ 0x231C0000) & ((v687 << 8) & 0x1E690000 ^ 0x16480000 ^ ((v687 << 8) ^ 0x69A30000) & v687)));
  v690 = -733235209
       * (((v659 ^ 0xE89F77AD) + 397367637) ^ ((v659 ^ 0x8A8E7C8E) + 1975407224) ^ ((v659 ^ 0x52579313) - 1385710101))
       + 580730138;
  v691 = -1735681447
       - 1727268833
       * (((v679 ^ 0xDD872E91) + 1689967785) ^ ((v679 ^ 0x9232DDFD) + 722415557) ^ ((v679 ^ 0x4624002D) - 15076843));
  v692 = v690 ^ (1938984519
               * (((v669 ^ 0xEA97603) - 1716994771) ^ ((v669 ^ 0xD198EDC0) + 1184442096) ^ ((v669 ^ 0x401E60B)
                                                                                          - 1828704987))
               - 1032743512);
  v693 = (((v689 ^ 0x2152F5D) - 950091168) ^ ((v689 ^ 0xC9F48E8B) + 213869450) ^ ((v689 ^ 0x5D73C2F6) - 1741148171))
       * LODWORD(STACK[0x820])
       + 303011021;
  v694 = v693 + v690;
  v695 = v693 & v690;
  v696 = v691 ^ v693;
  v697 = v691 - v692;
  v698 = v694 - 2 * v695 + v691 - v692 + 1344337041 - (STACK[0x824] & (2 * (v694 - 2 * v695 + v691 - v692)));
  v699 = v697
       - 1562273488
       + (((v698 ^ 0xFB92D120) + 74264288) ^ ((v698 ^ 0x526176F9) - 1382119161) ^ ((v698 ^ 0xF9D35348) + 103591096));
  v700 = v692 - v696 + 1490133347 - ((2 * (v692 - v696)) & 0xB1A342C6);
  v701 = (((v700 ^ 0x68B35501) - 1756583169) ^ ((v700 ^ 0x932D82C2) + 1825733950) ^ ((v700 ^ 0xA34F76A0) + 1555073376))
       + 881818216
       + v699;
  v702 = (v701 ^ 0x9191C11E) & (2 * (v701 & 0xD181825C)) ^ v701 & 0xD181825C;
  v703 = ((2 * (v701 ^ 0x3292C51E)) ^ 0xC6268E84) & (v701 ^ 0x3292C51E) ^ (2 * (v701 ^ 0x3292C51E)) & 0xE3134742;
  v704 = (v703 ^ 0xE3134202) & (4 * v702) ^ v702;
  v705 = ((4 * (v703 ^ 0x21114142)) ^ 0x8C4D1D08) & (v703 ^ 0x21114142) ^ (4 * (v703 ^ 0x21114142)) & 0xE3134740;
  v706 = (v705 ^ 0x80010502) & (16 * v704) ^ v704;
  v707 = ((16 * (v705 ^ 0x63124242)) ^ 0x31347420) & (v705 ^ 0x63124242) ^ (16 * (v705 ^ 0x63124242)) & 0xE3134740;
  v708 = v706 ^ 0xE3134742 ^ (v707 ^ 0x21104442) & (v706 << 8);
  v709 = v700 ^ (v696 + 1490133347 - ((2 * v696) & 0xB1A342C6));
  v710 = v701 ^ (2
               * ((v708 << 16) & 0x63130000 ^ v708 ^ ((v708 << 16) ^ 0x47420000) & (((v707 ^ 0xC2030342) << 8) & 0x63130000 ^ 0x60100000 ^ (((v707 ^ 0xC2030342) << 8) ^ 0x13470000) & (v707 ^ 0xC2030342))));
  v711 = ((2 * ((v700 ^ 0x58D1A163) & v696 ^ 0xF1B1EA1A)) | 0x5C0E955C) - ((v700 ^ 0x58D1A163) & v696 ^ 0xF1B1EA1A);
  v712 = v710 ^ v698;
  v713 = (((v645 ^ 0xB912C1E4) + 1312021570) ^ ((v645 ^ 0xF47FE736) + 56556180) ^ ((v645 ^ 0xED2DC4AA) + 437049616))
       - (((v710 ^ v698 ^ 0x90ACFCB2) + 1507003127) ^ ((v710 ^ v698 ^ 0xF24DECF0) + 993139381) ^ ((v710 ^ v698 ^ 0xA362E80B)
                                                                                                + 1780293200));
  v714 = (((v646 ^ 0x357B5051) - 1237836349) ^ ((v646 ^ 0xBAB25704) + 972102296) ^ ((v646 ^ 0xB951D6CF) + 974297949))
       - (((v710 ^ 0xF90D0573) + 812839736) ^ ((v710 ^ 0xDC570D82) + 355007431) ^ ((v710 ^ 0xB4F90429) + 2105995886))
       + 1801644679;
  v715 = (v714 ^ 0xE519FE8F) & (2 * (v714 & 0xE659F8CE)) ^ v714 & 0xE659F8CE;
  v716 = ((2 * (v714 ^ 0xE12AAE07)) ^ 0xEE6AD92) & (v714 ^ 0xE12AAE07) ^ (2 * (v714 ^ 0xE12AAE07)) & 0x77356C8;
  v717 = v716 ^ LODWORD(STACK[0x828]);
  v718 = (v716 ^ 0x2620400) & (4 * v715) ^ v715;
  v719 = ((4 * v717) ^ 0x1DCD5B24) & v717 ^ (4 * v717) & 0x77356C8;
  v720 = (v719 ^ 0x5415209) & (16 * v718) ^ v718;
  v721 = ((16 * (v719 ^ LODWORD(STACK[0x82C]))) ^ 0x77356C90) & (v719 ^ LODWORD(STACK[0x82C])) ^ (16
                                                                                                * (v719 ^ LODWORD(STACK[0x82C]))) & 0x77356C0;
  v722 = v720 ^ 0x77356C9 ^ (v721 ^ 0x7314400) & (v720 << 8);
  v723 = v714 ^ (2
               * ((v722 << 16) & 0x7730000 ^ v722 ^ ((v722 << 16) ^ 0x56C90000) & (((v721 ^ 0x421249) << 8) & 0x7730000 ^ 0x4210000 ^ (((v721 ^ 0x421249) << 8) ^ 0x73560000) & (v721 ^ 0x421249))));
  v724 = ((v713 + 912265783) ^ 0xF0816099) & (2 * ((v713 + 912265783) & 0xFAD06AD2)) ^ (v713 + 912265783) & 0xFAD06AD2;
  v725 = ((2 * ((v713 + 912265783) ^ 0x5101253D)) ^ 0x57A29FDE) & ((v713 + 912265783) ^ 0x5101253D) ^ (2 * ((v713 + 912265783) ^ 0x5101253D)) & 0xABD14FEE;
  v726 = v725 ^ 0xA8514021;
  v727 = (v725 ^ 0x3900FE9) & (4 * v724) ^ v724;
  v728 = ((4 * v726) ^ 0xAF453FBC) & v726 ^ (4 * v726) & 0xABD14FEC;
  v729 = (v728 ^ 0xAB410FA3) & (16 * v727) ^ v727;
  v730 = ((16 * (v728 ^ 0x904043)) ^ 0xBD14FEF0) & (v728 ^ 0x904043) ^ (16 * (v728 ^ 0x904043)) & 0xABD14FE0;
  v731 = v729 ^ 0xABD14FEF ^ (v730 ^ 0xA9104E0F) & (v729 << 8);
  v732 = (v713 + 912265783) ^ (2
                             * ((v731 << 16) & 0x2BD10000 ^ v731 ^ ((v731 << 16) ^ 0x4FEF0000) & (((v730 ^ 0x2C1010F) << 8) & 0x2BD10000 ^ 0x2A900000 ^ (((v730 ^ 0x2C1010F) << 8) ^ 0xD14F0000) & (v730 ^ 0x2C1010F))));
  v733 = ((2 * v711 - 1544459612) ^ 0xBF6D4168)
       + v709
       - ((2 * (((2 * v711 - 1544459612) ^ 0xBF6D4168) + v709)) & 0x58BCF1E)
       - 2100959345;
  v734 = (v712 ^ 0x4183F849) & (v733 ^ 0x7852CF23) ^ v712 & 0x7A9728AC;
  v735 = ((((2 * v734) ^ 0xE84D33EC) - 2073564461) ^ (((2 * v734) ^ 0xD607F) + 1814542658) ^ (((2 * v734) ^ 0x69460383)
                                                                                            + 91019966))
       + (((v712 ^ v733 ^ 0x9191A7C6) + 1492013443) ^ ((v712 ^ v733 ^ 0x782F8DAC) - 1320125463) ^ ((v712 ^ v733 ^ 0xAAF835AC)
                                                                                                 + 1669841897));
  v736 = (((v648 ^ LODWORD(STACK[0x830])) + 916427672) ^ ((v648 ^ 0x76FFF0DD) - 1809721155) ^ ((v648 ^ 0x9466AC7B)
                                                                                             + 1991803931))
       - v735
       + 1115013037;
  v737 = (v736 ^ 0x9DB2EB02) & (2 * (v736 & 0x91BAE3A2)) ^ v736 & 0x91BAE3A2;
  v738 = ((2 * (v736 ^ 0xBED6EA46)) ^ LODWORD(STACK[0x834])) & (v736 ^ 0xBED6EA46) ^ (2 * (v736 ^ 0xBED6EA46)) & 0x2F6C09E4;
  v739 = v738 ^ 0x21240824;
  v740 = (v738 ^ 0xE480180) & (4 * v737) ^ v737;
  v741 = ((4 * v739) ^ 0xBDB02790) & v739 ^ (4 * v739) & 0x2F6C09E4;
  v742 = v740 ^ 0x2F6C09E4 ^ (v741 ^ 0x2D200184) & (16 * v740);
  v743 = (16 * (v741 ^ 0x24C0864)) & 0x2F6C09E0 ^ 0x92C01A4 ^ ((16 * (v741 ^ 0x24C0864)) ^ 0xF6C09E40) & (v741 ^ 0x24C0864);
  v744 = (v742 << 8) & 0x2F6C0900 ^ v742 ^ ((v742 << 8) ^ 0x6C09E400) & v743;
  v745 = v736 ^ (2
               * ((v744 << 16) & 0x2F6C0000 ^ v744 ^ ((v744 << 16) ^ 0x9E40000) & ((v743 << 8) & 0x2F6C0000 ^ 0x3640000 ^ ((v743 << 8) ^ 0x6C090000) & v743)));
  v746 = v649 + 1999948312 - v699 + v735;
  v747 = (v746 ^ 0xD21255F6) & (2 * (v746 & 0x1A831180)) ^ v746 & 0x1A831180;
  v748 = ((2 * (v746 ^ 0xD31076F6)) ^ LODWORD(STACK[0x838])) & (v746 ^ 0xD31076F6) ^ (2 * (v746 ^ 0xD31076F6)) & 0xC9936776;
  v749 = v748 ^ 0x48912112;
  v750 = (v748 ^ 0x80816712) & (4 * v747) ^ v747;
  v751 = ((4 * v749) ^ 0x264D9DD8) & v749 ^ (4 * v749) & 0xC9936774;
  v752 = (v751 ^ 0x10546) & (16 * v750) ^ v750;
  v753 = ((16 * (v751 ^ 0xC9926226)) ^ 0x99367760) & (v751 ^ 0xC9926226) ^ (16 * (v751 ^ 0xC9926226)) & 0xC9936770;
  v754 = v752 ^ 0xC9936776 ^ (v753 ^ 0x89126700) & (v752 << 8);
  v755 = v746 ^ (2
               * ((v754 << 16) & 0x49930000 ^ v754 ^ ((v754 << 16) ^ 0x67760000) & (((v753 ^ 0x40810016) << 8) & STACK[0x83C] ^ 0x48900000 ^ (((v753 ^ 0x40810016) << 8) ^ 0x13670000) & (v753 ^ 0x40810016))));
  v756 = *(_DWORD *)(STACK[0x6780] + 4 * ((v746 ^ (2 * v754)) ^ 0x6Cu));
  v757 = ((v723 ^ 0x6D) + (v723 & 3 ^ 0x74DF8202) - ((v723 ^ 0x6D) & 3)) ^ 0x244A8133;
  v758 = v757 - ((2 * v757) & 0x10203A4);
  v759 = *(_DWORD *)(STACK[0x6790] + 4 * (HIBYTE(v723) ^ 0xE4)) ^ *(_DWORD *)(STACK[0x67A0]
                                                                              + 4 * (BYTE2(v732) ^ 0xF0u)) ^ v756 ^ *(_DWORD *)(STACK[0x6770] + 4 * (BYTE1(v745) ^ 0xF0u));
  LOWORD(v736) = (v745 ^ 0xEA) + (v745 & 0x31 ^ 0xCC11) - ((v745 ^ 0xEA) & 0x31);
  v760 = ((v736 & 0x3E ^ 0x5207009) + 0x3FFFFFFF) | v736 & 0x7C1 ^ 0xC8158441;
  LOBYTE(v743) = ((v713 + 107) ^ 0x5F) & (2 * ((v713 + 107) & 0x9E)) ^ (v713 + 107) & 0x9E;
  LOBYTE(v756) = ((2 * ((v713 + 107) ^ 0x5B)) ^ 0x8A) & ((v713 + 107) ^ 0x5B) ^ (2 * ((v713 + 107) ^ 0x5B)) & 0xC4;
  v761 = *(_DWORD *)(STACK[0x6790] + 4 * (HIBYTE(v755) ^ 0xB));
  v762 = *(_DWORD *)(STACK[0x67A0] + 4 * (BYTE2(v723) ^ 0x3Du));
  v763 = ((v713 + 107) ^ (2
                                         * (((4 * (v756 ^ 0x45)) & (v756 ^ 0x45) ^ (4 * (v756 ^ 0x45)) & 0xC0) & (16 * ((v756 ^ 0x85) & (4 * v743) ^ v743)) ^ (v756 ^ 0x85) & (4 * v743) ^ v743))) ^ 0xE768A53B;
  v764 = (1551592046 - v763 + ((2 * v763) | 0x4709222E) + 1147) ^ 0x35BCB015;
  v765 = v764 + 203110044 - ((2 * v764) & 0x18368A56);
  v766 = (((v762 ^ 0xB08BCEE8) + 1333014808) ^ ((v762 ^ 0xE5A9F91A) + 441845478) ^ ((v762 ^ 0xF60150C9) + 167685943))
       + (((v762 ^ v761 ^ LODWORD(STACK[0x840])) - 1279914871) ^ ((v762 ^ v761 ^ 0xE449C5C6) + 464927290) ^ ((v762 ^ v761 ^ 0xFF881F6) - 267944438))
       - ((((2 * (v762 ^ v761)) ^ 0xE3879909) + 214633588) ^ (((2 * (v762 ^ v761)) ^ 0xFC76FD20) + 322594907) ^ (((2 * (v762 ^ v761)) ^ 0x50000AA7) - 1085497378))
       + 1519169275;
  v767 = (v766 ^ 0xC068427A) & (2 * (v766 & 0x914D6B7C)) ^ v766 & 0x914D6B7C;
  v768 = ((2 * (v766 ^ 0xC0F080AA)) ^ 0xA37BD7AC) & (v766 ^ 0xC0F080AA) ^ (2 * (v766 ^ 0xC0F080AA)) & 0x51BDEBD6;
  v769 = (v768 ^ 0x139C380) & (4 * v767) ^ v767;
  v770 = ((4 * (v768 ^ 0x50842852)) ^ 0x46F7AF58) & (v768 ^ 0x50842852) ^ (4 * (v768 ^ 0x50842852)) & 0x51BDEBD4;
  v771 = (v770 ^ 0x40B5AB40) & (16 * v769) ^ v769;
  v772 = ((16 * (v770 ^ 0x11084086)) ^ 0x1BDEBD60) & (v770 ^ 0x11084086) ^ (16 * (v770 ^ 0x11084086)) & 0x51BDEBD0;
  v773 = v771 ^ 0x51BDEBD6 ^ (v772 ^ 0x119CA900) & (v771 << 8);
  v774 = ((v773 << 16) ^ 0x6BD60000) & (((v772 ^ 0x40214296) << 8) & 0x51BD0000 ^ 0x40140000 ^ (((v772 ^ 0x40214296) << 8) ^ 0x3DEB0000) & (v772 ^ 0x40214296));
  v775 = 1840154420
       - (((v761 ^ 0xCF57402A) + 816365526) ^ ((v761 ^ 0x530300E) - 87044110) ^ ((v761 ^ 0xCEBCA058) + 826498984));
  v776 = (v775 ^ 0x4D752242) & (2 * (v775 & 0x8D75A850)) ^ v775 & 0x8D75A850;
  v777 = ((2 * (v775 ^ 0x45976242)) ^ 0x91C59424) & (v775 ^ 0x45976242) ^ (2 * (v775 ^ 0x45976242)) & 0xC8E2CA12;
  v778 = (v777 ^ 0xC08812) & (4 * v776) ^ v776;
  v779 = ((4 * (v777 ^ 0x48224A12)) ^ 0x238B2848) & (v777 ^ 0x48224A12) ^ (4 * (v777 ^ 0x48224A12)) & 0xC8E2CA10;
  v780 = (v779 ^ 0x820812) & (16 * v778) ^ v778;
  v781 = ((16 * (v779 ^ 0xC860C212)) ^ 0x8E2CA120) & (v779 ^ 0xC860C212) ^ (16 * (v779 ^ 0xC860C212)) & 0xC8E2CA10;
  v782 = v780 ^ 0xC8E2CA12 ^ (v781 ^ 0x88208012) & (v780 << 8);
  v783 = v775 ^ v761 ^ v766 ^ (2
                             * ((v782 << 16) & 0x48E20000 ^ v782 ^ ((v782 << 16) ^ 0x4A120000) & (((v781 ^ 0x40C24A12) << 8) & 0xC8E20000 ^ 0x8200000 ^ (((v781 ^ 0x40C24A12) << 8) ^ 0xE2CA0000) & (v781 ^ 0x40C24A12)) ^ v773 ^ (v773 << 16) & 0x51BD0000 ^ v774));
  v784 = (((v762 ^ 0x459790C1) - 1167560897) ^ ((v762 ^ 0x9988C1A7) + 1719090777) ^ ((v762 ^ 0x7F3C365D) - 2134652509))
       + 1899555638
       + (((v783 ^ 0x3BED4AFE) + 1030952107) ^ ((v783 ^ 0xCB907E3C) - 854712215) ^ ((v783 ^ LODWORD(STACK[0x844]))
                                                                                  - 812500401));
  v785 = (v784 ^ 0xF1F36D7F) & (2 * (v784 & 0xF1FB6D78)) ^ v784 & 0xF1FB6D78;
  v786 = ((2 * (v784 ^ 0xD2A7F5CF)) ^ 0x46B9316E) & (v784 ^ 0xD2A7F5CF) ^ (2 * (v784 ^ 0xD2A7F5CF)) & 0x235C98B6;
  v787 = v786 ^ 0x21448891;
  v788 = (v786 ^ LODWORD(STACK[0x848])) & (4 * v785) ^ v785;
  v789 = ((4 * v787) ^ 0x8D7262DC) & v787 ^ (4 * v787) & 0x235C98B4;
  v790 = (v789 ^ 0x1500083) & (16 * v788) ^ v788;
  v791 = ((16 * (v789 ^ 0x220C9823)) ^ 0x35C98B70) & (v789 ^ 0x220C9823) ^ (16 * (v789 ^ 0x220C9823)) & 0x235C98B0;
  v792 = v790 ^ 0x235C98B7 ^ (v791 ^ 0x21488800) & (v790 << 8);
  v793 = (v792 << 16) & 0x235C0000 ^ v792 ^ ((v792 << 16) ^ 0x18B70000) & (((v791 ^ 0x2141087) << 8) & 0x235C0000 ^ 0x23440000 ^ (((v791 ^ 0x2141087) << 8) ^ 0x5C980000) & (v791 ^ 0x2141087));
  v794 = LODWORD(STACK[0x6730])
       + (((v759 ^ 0x22C1978A) - 583112586) ^ ((v759 ^ 0x7FE800A9) - 2145910953) ^ ((v759 ^ LODWORD(STACK[0x84C]))
                                                                                  - 1046334719))
       - ((((2 * ((v759 ^ 0x45CB5C8D) & STACK[0x6750] ^ LODWORD(STACK[0x6740]))) ^ 0x6C313A5B) + 743833539) ^ (((2 * ((v759 ^ 0x45CB5C8D) & STACK[0x6750] ^ LODWORD(STACK[0x6740]))) ^ 0x48F9B4AC) + 144535862) ^ (((2 * ((v759 ^ 0x45CB5C8D) & STACK[0x6750] ^ LODWORD(STACK[0x6740]))) ^ 0x248C80D5) + 1692943693));
  v795 = (v794 ^ 0xDA6F0DE7) & (2 * (v794 & 0xDB6E09F7)) ^ v794 & 0xDB6E09F7;
  v796 = ((2 * (v794 ^ 0x6AF31C0F)) ^ 0x633A2BF0) & (v794 ^ 0x6AF31C0F) ^ (2 * (v794 ^ 0x6AF31C0F)) & 0xB19D15F8;
  v797 = (v796 ^ 0x211D11F0) & (4 * v795) ^ v795;
  v798 = ((4 * (v796 ^ 0x90851408)) ^ 0xC67457E0) & (v796 ^ 0x90851408) ^ (4 * (v796 ^ 0x90851408)) & 0xB19D15F8;
  v799 = (v798 ^ 0x801415E0) & (16 * v797) ^ v797;
  v800 = ((16 * (v798 ^ 0x31890018)) ^ 0x19D15F80) & (v798 ^ 0x31890018) ^ (16 * (v798 ^ 0x31890018)) & 0xB19D15F0;
  v801 = v799 ^ 0xB19D15F8 ^ (v800 ^ 0x11911500) & (v799 << 8);
  v802 = (v801 << 16) & 0x319D0000 ^ v801 ^ ((v801 << 16) ^ 0x15F80000) & (((v800 ^ 0xA00C0078) << 8) & STACK[0x850] ^ 0x20880000 ^ (((v800 ^ 0xA00C0078) << 8) ^ 0x1D150000) & (v800 ^ 0xA00C0078));
  v803 = LODWORD(STACK[0x6760]) ^ *(_DWORD *)(STACK[0x6780] + 4 * ((v765 + 3727) ^ 0x7D4BC18Cu)) ^ *(_DWORD *)(STACK[0x67A0] + 4 * (BYTE2(v755) ^ 0x81u)) ^ *(_DWORD *)(STACK[0x6790] + 4 * (HIBYTE(v745) ^ 0x85)) ^ *(_DWORD *)(STACK[0x6770] + 4 * (BYTE1(v723) ^ 0x55u));
  v804 = STACK[0x6A80];
  v805 = *(_DWORD *)(STACK[0x6780] + 4 * ((v758 + 81901010) ^ 0x5474B6D3u));
  v806 = LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x6A80]) ^ *(_DWORD *)(STACK[0x6770] + 4 * (BYTE1(v732) ^ 0xF5u)) ^ *(_DWORD *)(STACK[0x6780] + 4 * (v760 ^ 0xCD35F0F8)) ^ v784 ^ (2 * v793);
  v807 = LODWORD(STACK[0x6760]) ^ LODWORD(STACK[0x6A80]) ^ *(_DWORD *)(STACK[0x6790] + 4 * (HIBYTE(v732) ^ 0xBA)) ^ *(_DWORD *)(STACK[0x67A0] + 4 * (BYTE2(v745) ^ 0xBAu)) ^ *(_DWORD *)(STACK[0x6770] + 4 * (BYTE1(v755) ^ 0xDFu)) ^ v805;
  v808 = (-844506179
        - (((v803 ^ 0xC387F3B8) + 1014500424) ^ ((v803 ^ 0x15B7B818) - 364361752) ^ ((v803 ^ 0xE4666FE3) + 463048733))) ^ (LODWORD(STACK[0x6710]) + (LODWORD(STACK[0x6A80]) ^ LODWORD(STACK[0x854]) ^ v803));
  v809 = (v808 - ((2 * v808) & 0x64AC4886) + 844506179) ^ v803;
  v810 = STACK[0x68C0];
  v811 = STACK[0x6A60];
  *(_BYTE *)(v811 + STACK[0x6920]) = *((_BYTE *)*(&off_1015B46D0 + LODWORD(STACK[0x68C0]) - 15912)
                                     + (((v806 ^ 0x3CCDDB7u) >> 16) ^ 0x47)
                                     - 8) ^ 0x2E;
  v812 = *((unsigned __int8 *)*(&off_1015B46D0 + (v810 ^ 0x4C77))
         + ((((v807 ^ 0xFC9B775F)
            + (v807 ^ 0xE6 ^ LODWORD(STACK[0x858]) | 0x5EE08A09)
            + 1) | (v807 ^ 0xE6 ^ LODWORD(STACK[0x858])) & 0xF6 ^ 0x76) ^ 0x5C800209)
         - 4);
  v813 = v809 + LODWORD(STACK[0x6720]);
  HIDWORD(v814) = ((v812 >> 3) | (32 * v812)) ^ ((((v812 >> 3) | (32 * v812)) & 0xF0) >> 4);
  LODWORD(v814) = v812 << 29;
  *(_BYTE *)(v811 + STACK[0x6900]) = ((((v814 >> 31) ^ 0xDF) >> 1) | (((v814 >> 31) ^ 0xDF) << 7)) ^ 4;
  v815 = v794 ^ v804 ^ (2 * v802);
  *(_BYTE *)(v811 + STACK[0x69F0]) = *((_BYTE *)*(&off_1015B46D0 + (v810 ^ 0x4DB6)) + (HIBYTE(v813) ^ 0x5BLL)) ^ 0xD4;
  v816 = *((unsigned __int8 *)*(&off_1015B46D0 + (v810 ^ 0x4C84)) + (BYTE1(v813) ^ 0x7FLL) - 4);
  v817 = STACK[0x68F0];
  v818 = ((v817 & 0x9A8B311B ^ 0x88823111) + (v817 & STACK[0x860] ^ LODWORD(STACK[0x85C])) - 1) ^ 0xF4DD317F;
  HIDWORD(v814) = v816;
  LODWORD(v814) = (v816 ^ 0xFFFFFFDC) << 24;
  v819 = (LODWORD(STACK[0x6930]) ^ 0x49FEED0) - ((2 * (LODWORD(STACK[0x6930]) ^ 0x49FEED0)) & 0xC06984E0);
  *(_BYTE *)(v811 + STACK[0x6A20]) = (v816 >> 3) ^ (((v816 ^ 0xFFFFFFDC) & 0xC0) >> 6) ^ 0x27 ^ (((v814 >> 26) >> 6) | (4 * (v814 >> 26)));
  *(_BYTE *)(v811 + ((((2 * v818) & 0x35F1AD6A) - v818 - 452515510) ^ 0x8AF870B1)) = ((v807 ^ 0x135E36E6u) >> 24) ^ 0xA8 ^ *((_BYTE *)*(&off_1015B46D0 + v810 - 15272) + (((v807 ^ 0x135E36E6u) >> 24) ^ 0x72));
  v820 = ((v815 ^ 0xB6) + (v815 & 0x8C ^ 0x208) - ((v815 ^ 0xB6) & 0x8C)) ^ 0x277;
  *(_BYTE *)(v811 + ((v819 - 533413261) ^ 0xB26B3994)) = *((_BYTE *)*(&off_1015B46D0 + (v810 ^ 0x4E36))
                                                           + v820
                                                           - ((2 * v820) & 0x134u)
                                                           + 154) ^ 0x28;
  *(_BYTE *)(v811 + STACK[0x6910]) = ((BYTE2(v813) ^ 0xD4) + (BYTE2(v813) ^ 0x91)) ^ 0x36 ^ *((_BYTE *)*(&off_1015B46D0 + v810 - 15578)
                                                                                            + (BYTE2(v813) ^ 0xFDLL)
                                                                                            - 4);
  v821 = *((unsigned __int8 *)*(&off_1015B46D0 + v810 - 16285) + (v806 ^ 0x47) - 4);
  v822 = -1994261030
       - (LODWORD(STACK[0x6960]) ^ 0x892BCA8C | 0x8921FDDA)
       + (LODWORD(STACK[0x6960]) ^ 0x892BCA8C | 0x76DE0225);
  *(_BYTE *)(v811 + STACK[0x69A0]) = ((v821 >> 4) | (16 * v821)) ^ 0xCE;
  *(_BYTE *)(v811 + STACK[0x6990]) = *((_BYTE *)*(&off_1015B46D0 + v810 - 14989)
                                     + (((v813 ^ 0xFFFFFF37) + (v813 ^ 0xC7) + 1) ^ 0xFFFFFFFE)
                                     + (v813 ^ 0xC7)
                                     - 12) ^ 0x97;
  v823 = (((2 * ((735485088 - (v817 & 0x80)) & 0x288010A0 | 0x146D6210)) & 0x785AE520)
        - ((735485088 - (v817 & 0x80)) & 0x288010A0 | 0x146D6210)
        - 2084434846) ^ 0xC3C00123;
  v824 = v823 - 1658494039 - ((2 * v823) & 0x3A4AC742);
  v825 = (v817 & 0x80 ^ 0x142122C0) - ((2 * (v817 & 0x80 ^ 0x142122C0)) & 0x8404580) + 1731117003;
  v826 = (((v817 ^ 0xE3181026) - 927088779) ^ ((v817 ^ 0x1C07149B) + 933411786) ^ ((v817 ^ 0xA9DF1109) - 2105885092))
       - 1530835204
       + (((v825 ^ 0xB470A4EA) + 691995495) ^ ((v825 ^ 0xFB812868) + 1724813285) ^ ((v825 ^ 0xC301EEF6) + 1582188923))
       + 959;
  v827 = (v826 ^ 0xAD952961) & (2 * (v826 & 0xCC192C65)) ^ v826 & 0xCC192C65;
  v828 = ((2 * (v826 ^ 0x3D9531AB)) ^ 0xE3183B9C) & (v826 ^ 0x3D9531AB) ^ (2 * (v826 ^ 0x3D9531AB)) & 0xF18C1DCE;
  v829 = v828 ^ 0x10840442;
  v830 = (v828 ^ 0x6008118C) & (4 * v827) ^ v827;
  v831 = ((4 * v829) ^ 0xC6307738) & v829 ^ (4 * v829) & 0xF18C1DCC;
  v832 = (v831 ^ 0xC0001506) & (16 * v830) ^ v830;
  v833 = ((16 * (v831 ^ LODWORD(STACK[0x864]))) ^ 0x18C1DCE0) & (v831 ^ LODWORD(STACK[0x864])) ^ (16
                                                                                                * (v831 ^ LODWORD(STACK[0x864]))) & 0xF18C1DC0;
  v834 = v832 ^ 0xF18C1DCE ^ (v833 ^ 0x10801C0E) & (v832 << 8);
  v835 = v824 ^ v826 ^ (2
                      * ((v834 << 16) & 0x718C0000 ^ v834 ^ ((v834 << 16) ^ 0x1DCE0000) & (((v833 ^ 0xE10C010E) << 8) & STACK[0x868] ^ 0x71800000 ^ (((v833 ^ 0xE10C010E) << 8) ^ 0xC1D0000) & (v833 ^ 0xE10C010E))));
  *(_BYTE *)(v811 + (v822 ^ 0xA935DD9ELL)) = *((_BYTE *)*(&off_1015B46D0 + v810 - 17383)
                                             + (((unsigned __int16)(v807 ^ 0x36E6) >> 8) ^ 8)) ^ 0x2F ^ (*((_BYTE *)*(&off_1015B46D0 + v810 - 17383) + (((unsigned __int16)(v807 ^ 0x36E6) >> 8) ^ 8)) >> 4) & 0xC;
  *(_BYTE *)(v811 + (v835 ^ 0xEDD30BAD)) = *((_BYTE *)*(&off_1015B46D0 + v810 - 16047)
                                           + (((v806 ^ 0x2D497531u) >> 24) ^ 0x6DLL)
                                           - 12) ^ ((v806 ^ 0x2D497531u) >> 24) ^ 0x4B;
  *(_BYTE *)(v811 + STACK[0x6A00]) = HIBYTE(v815) ^ 0xC4 ^ *((_BYTE *)*(&off_1015B46D0 + (v810 ^ 0x4DF0))
                                                           + (HIBYTE(v815) ^ 0x1BLL));
  v836 = ((2 * (LODWORD(STACK[0x6A40]) ^ 0x6CC064C8)) & 0xA4D1FCAC) - (LODWORD(STACK[0x6A40]) ^ 0x6CC064C8) - 1382612568;
  LODWORD(v822) = ((LODWORD(STACK[0x69C0]) ^ 0x8A41A351)
                 + (v817 & 0x1142EF01 ^ 0x11024C04)
                 - ((LODWORD(STACK[0x69C0]) ^ 0x8A41A351) & 0x1142EF01)) ^ 0xCDC3596B;
  *(_BYTE *)(v811 + STACK[0x6A30]) = *((_BYTE *)*(&off_1015B46D0 + v810 - 15047)
                                     + (((v807 ^ 0x135E36E6u) >> 16) ^ 0x6CLL)
                                     - 4) ^ 0x87;
  *(_BYTE *)(v811
           + (((v836 & 0xF3FD0110 ^ 0x921D0010) + (v836 ^ 0x69E285AB) - ((v836 ^ 0x69E285AB) & 0xF3FD0111)) ^ 0xD88F4EF)) = *((_BYTE *)*(&off_1015B46D0 + (v810 ^ 0x4156)) + (BYTE2(v815) ^ 0x41) - 12) ^ 0x60;
  v837 = ((2 * (LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x86C]))) & 0x4366B830)
       - (LODWORD(STACK[0x6A10]) ^ LODWORD(STACK[0x86C]));
  v838 = (((v817 ^ 0xFDD177B8) + 36603976) ^ ((v817 ^ 0x208E19E6) - 546183654) ^ ((v817 ^ 0x8B9F7B6B) + 1952482453))
       - 2085504315;
  v839 = (v838 ^ 0xDBCF1044) & (2 * (v838 & STACK[0x870])) ^ v838 & STACK[0x870];
  v840 = ((2 * (v838 ^ 0x59DF8044)) ^ 0x15A3B588) & (v838 ^ 0x59DF8044) ^ (2 * (v838 ^ 0x59DF8044)) & 0x8AD1DAC4;
  v841 = v840 ^ 0x8A504A44;
  v842 = (v840 ^ 0x2019044) & (4 * v839) ^ v839;
  v843 = ((4 * v841) ^ 0x2B476B10) & v841 ^ (4 * v841) & 0x8AD1DAC4;
  v844 = (v843 ^ 0xA414A00) & (16 * v842) ^ v842;
  v845 = ((16 * (v843 ^ LODWORD(STACK[0x874]))) ^ 0xAD1DAC40) & (v843 ^ LODWORD(STACK[0x874])) ^ (16
                                                                                                * (v843 ^ LODWORD(STACK[0x874]))) & 0x8AD1DAC0;
  v846 = v844 ^ 0x8AD1DAC4 ^ (v845 ^ 0x88118800) & (v844 << 8);
  v847 = v838 ^ (2
               * ((v846 << 16) & 0xAD10000 ^ v846 ^ ((v846 << 16) ^ 0x5AC40000) & (((v845 ^ 0x2C05284) << 8) & 0xAD10000 ^ 0xA010000 ^ (((v845 ^ 0x2C05284) << 8) ^ 0xD1DA0000) & (v845 ^ 0x2C05284))));
  *(_BYTE *)(v811 + v822) = *((_BYTE *)*(&off_1015B46D0 + (v810 ^ 0x415B))
                                          + (((unsigned __int16)(v806 ^ 0xDDB7) >> 8) ^ 0x2C)
                                          - 2
                                          * ((((unsigned __int16)(v806 ^ 0xDDB7) >> 8) ^ 0x2C) & 0x7Fu)
                                          + 123) ^ 2;
  *(_BYTE *)(v811 + ((v837 + 1582080997) ^ 0x7F6D1133)) = *((_BYTE *)*(&off_1015B46D0 + (v810 ^ 0x4C25))
                                                                          + (BYTE1(v815) ^ 0x80)
                                                                          - 4) ^ 0x93;
  v848 = (((v847 ^ 0x62745A75) + 409362360) ^ ((v847 ^ 0x1D33CCC1) + 1730267396) ^ ((v847 ^ 0xAC6A79BC) - 696746881))
       + 1382918472;
  LODWORD(v822) = LODWORD(STACK[0x6A50]) ^ (v848 < 0xFBAD9413);
  v849 = v848 < LODWORD(STACK[0x6708]);
  if ((_DWORD)v822)
    v849 = STACK[0x6A50];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29 * v849) ^ v810)) - 8))();
}

uint64_t sub_100CEF16C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  int v12;

  v9 = STACK[0x67F0];
  v10 = LODWORD(STACK[0x67F0]) + 3831;
  LODWORD(STACK[0x6950]) = a2 ^ 0xDC4AA70F;
  LODWORD(STACK[0x6970]) = v6 ^ v10 ^ 0x828CE1FF;
  HIDWORD(v11) = a3 ^ 0x30A2;
  LODWORD(v11) = a3 ^ 0xBA6C0000;
  LODWORD(STACK[0x6AA0]) = __ROR4__((v11 >> 14) ^ 0x21BF042F, 18) ^ 0x15FE1717;
  if ((v8 & 0x10000) != 0)
    v12 = -65536;
  else
    v12 = 0x10000;
  LODWORD(STACK[0x68E0]) = (v12 + v8 + 1087549072 - 2 * ((v12 + v8) & 0x40D2AE94 ^ v7 & 4)) ^ 0x6D2C5B27;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v9) - 8))(1904382802, 4294967290, 337969280, 536887300, 675811855, a6, 1127420752, 4294967286);
}

uint64_t sub_100CEF2B8()
{
  int v0;

  v0 = STACK[0x6AC0] + 949;
  LODWORD(STACK[0xD8DC]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))();
}

uint64_t sub_100CEF2DC()
{
  int v0;
  void (*v1)(unint64_t);
  uint64_t v2;

  v1 = (void (*)(unint64_t))STACK[0x5A40];
  ((void (*)(unint64_t))STACK[0x5A40])(STACK[0xD8C8]);
  v1(STACK[0xD8F0]);
  v1(STACK[0xD8B8]);
  v1(STACK[0xD8C0]);
  v1(STACK[0xD8E8]);
  v1(STACK[0xD8A0] - 0x21E4892F3905EF28);
  v1(STACK[0xD8A8]);
  v2 = ((uint64_t (*)(unint64_t))v1)(STACK[0xD8B0]);
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 7157)))(v2);
}

uint64_t sub_100CEF3CC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  STACK[0xD1A8] = v1 - 32;
  STACK[0xC768] = v0 - 16;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v2))();
}

uint64_t sub_100CEF454()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 20821) | 0x1020u) + 4210))(v1);
}

uint64_t sub_100CEF494()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1806)))();
}

uint64_t sub_100CEF4DC()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1134)))();
}

uint64_t sub_100CEF508()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 12563)) - 8))();
}

uint64_t sub_100CEF53C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (LODWORD(STACK[0x1954]) ^ (14185 * (LODWORD(STACK[0x1958]) > 0xD2FC5C37))))
                            - 12))();
}

uint64_t sub_100CEF588()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC958] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 2682)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 - 2682) ^ 0x1176)) - 8))();
}

uint64_t sub_100CEF820@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  STACK[0x9798] = v7;
  STACK[0xD838] = v8;
  STACK[0xD840] = v6;
  STACK[0xD848] = v11;
  LODWORD(STACK[0xD850]) = v10;
  LODWORD(STACK[0xD854]) = v9;
  STACK[0xD858] = v5;
  v12 = STACK[0xC768];
  STACK[0x6B50] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v12 + 16;
  v13 = STACK[0x6AD8];
  STACK[0xD270] = *(_QWORD *)(STACK[0x6AD8] + 8 * a5) - 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                                                  + 8 * ((9406 * ((a5 ^ 0x6350C948u) > 0xAE898FB0)) ^ (a5 + 6909))))(83, a1, 4169, a2, a3, a4, 14990);
}

uint64_t sub_100CEF980()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 4629)) - 4))();
}

uint64_t sub_100CEF9B0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 15462)) - 8))();
}

uint64_t sub_100CEF9E0()
{
  int v0;
  unint64_t v1;

  v0 = STACK[0x6508] - 1748;
  v1 = STACK[0x6AD8];
  STACK[0xA438] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x2468)) - 12))();
}

uint64_t sub_100CEFC60()
{
  int v0;
  unint64_t v1;
  int v2;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] + 9436;
  LODWORD(STACK[0xA014]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 ^ 0x3DA7) + (int)v1 - 1965)) - 12))();
}

uint64_t sub_100CEFCC4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((27831
                                               * (LODWORD(STACK[0xA014]) == (LODWORD(STACK[0x2B38]) | 0x120)
                                                                          - 1926413517)) ^ (STACK[0x6508] + 9132)))
                            - 4))();
}

uint64_t sub_100CEFD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8 * (int)(STACK[0x6508] + 3115))
                                                                     - 8))(a1, a2, a3, 2595713195);
}

uint64_t sub_100CEFD70()
{
  unint64_t v0;
  uint64_t v1;

  v0 = STACK[0x6508];
  v1 = (STACK[0x6508] - 4166) | 0x5104;
  *(_DWORD *)STACK[0x9158] = STACK[0xD69C];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((23678 * ((_DWORD)v0 == 110214184)) ^ ((int)v0 + 9132)))
                            - (v1 ^ 0x5130)))();
}

uint64_t sub_100CEFDE8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((((v0 - 58038710) ^ (STACK[0xD018] == 0x77F08B69E6123757)) & 1) == 0)
                                * ((v0 ^ 0x31FE40A7) - 838734225)) ^ v0)))();
}

uint64_t sub_100CEFE5C()
{
  unsigned int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8 * (int)((2739 * (v0 < 0x998360FD)) ^ (v0 - 838728381)))
                                          - 12))(v1);
}

uint64_t sub_100CEFEBC()
{
  int v0;

  STACK[0xC768] = STACK[0xC768] - 6036 + ((v0 - 1981161380) & 0x7615FFAF);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100CEFF14()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100CEFF44()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((STACK[0x6508] - 1980) ^ 0x1904 ^ (12849
                                                                                 * (STACK[0x6508] == 1926156498))))
                            - 12))();
}

uint64_t sub_100CEFFD8()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 1806)))();
}

uint64_t sub_100CF001C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t))(STACK[0x6AD8] + 8 * v4))(a1, a2, a3, a4, STACK[0xDFD8] - 0xE90B0F4117CC30BLL, STACK[0xB610] - 0x21909F89F1E3F19FLL, STACK[0xB7E0] - 0x3A3257183FC04093, STACK[0xB1D0] + 0x18BED54FE3009DA4);
}

uint64_t sub_100CF0120@<X0>(unsigned int *a1@<X8>)
{
  unsigned int v1;
  int v2;

  LODWORD(STACK[0xE24C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v2 ^ (4 * (((-5 * (v2 ^ 0xA8)) ^ (v1 < *a1)) & 1))))
                            - ((v2 - 11061) ^ 0x1072)))();
}

uint64_t sub_100CF0184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  int v7;
  unsigned int v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v7 ^ 0x37AD)))(a1, a2, a3, a4, a5, a7 + 8, a6, ((2 * v8) & 0x1FEDF3A7CLL)- 0x12FE01A4D66FDB0+ (((v7 + 18299) + 0x795F27F9FF6F52D2) ^ v8));
}

uint64_t sub_100CF01F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;

  v8 = *a6;
  v9 = a8 - 0x782F47DFB2089F8ELL;
  v10 = STACK[0x5698];
  v11 = STACK[0x5690];
  v12 = STACK[0x56A0];
  v13 = (v9 + 2) & 0xF;
  v14 = ((*(unsigned __int8 *)(v8 + v9 + 1) ^ (-127 * ((v9 + 1) & 0xF)) ^ *(unsigned __int8 *)(v10 + ((v9 + 1) & 0xF)) ^ *(unsigned __int8 *)(((v9 + 1) & 0xF) + v11 + 3) ^ *(unsigned __int8 *)(((v9 + 1) & 0xF) + v12 + 1)) << 16) | ((*(unsigned __int8 *)(v10 + (v9 & 0xF)) ^ (-127 * (v9 & 0xF)) ^ *(unsigned __int8 *)(v8 + v9) ^ *(unsigned __int8 *)((v9 & 0xF) + v11 + 3) ^ *(unsigned __int8 *)((v9 & 0xF) + v12 + 1)) << 24) | ((*(unsigned __int8 *)(v8 + v9 + 2) ^ (-127 * v13) ^ *(unsigned __int8 *)(v10 + v13) ^ *(unsigned __int8 *)(v13 + STACK[0x5690] + 3) ^ *(unsigned __int8 *)(v13 + STACK[0x56A0] + 1)) << 8);
  v9 += 3;
  LODWORD(v8) = (*(unsigned __int8 *)(v8 + v9) ^ (-127 * (v9 & 0xF)) ^ *(unsigned __int8 *)(STACK[0x5698] + (v9 & 0xF)) ^ *(unsigned __int8 *)((v9 & 0xF) + STACK[0x5690] + 3) ^ *(unsigned __int8 *)((v9 & 0xF) + STACK[0x56A0] + 1) ^ 0x43F08148) & (v14 ^ 0x4BF89FFF) | v14 & 0xBC0F7E00;
  return a7(a1, a2, a3, a4, a5, ((v8 & 0x7F8FFCC ^ 0x7F0E14C) + (v8 ^ 0x8081E83) - ((v8 ^ 0x8081E83) & 0x7F8FFCC)) ^ 0x81334E7A);
}

uint64_t sub_100CF036C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 869)) - 4))(a1, a2, a3, a4, a5, a3, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2260)), ((v5 + 4) ^ 0x7FFEBFD65B75FEDFLL) + ((2 * (v5 + 4)) & 0xB6EBFDBE) - 0x5E09E58BAAC349DCLL);
}

uint64_t sub_100CF03D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2264) ^ 0x1445)) - 4))(a1, a2, a3, a4, a5, v6, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2264)) - 8, ((v5 + 4) ^ 0xF577EFF6FFFDBBEFLL)+ 0x2C7CEA53B0B4F914+ ((2 * (v5 + 4)) & 0x1FFFB77DELL));
}

uint64_t sub_100CF0448@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 869)) - 4))(a5, a1, a2, a3, a4, v6, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2252)) - 12, ((a6 + 4) ^ 0xFFDDB7FDF556DBFELL)+ 0x2217224CBB5BD905+ ((2 * (a6 + 4)) & 0x1EAADB7FCLL));
}

uint64_t sub_100CF04B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 869)) - 4))(a1, a2, a3, a4, a5, v5, *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 2269)) - 8, a2);
}

uint64_t sub_100CF04E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  v8 = *a6;
  v9 = a8 - 0x21F4DA4AB0B2B503;
  v10 = *(unsigned __int8 *)(STACK[0x5698] + (v9 & 0xF)) ^ *(unsigned __int8 *)(v8 + v9) ^ (-127 * (v9 & 0xF));
  v11 = *(unsigned __int8 *)((v9 & 0xF) + STACK[0x5690] + 3) ^ *(unsigned __int8 *)((v9 & 0xF) + STACK[0x56A0] + 1);
  ++v9;
  LODWORD(v8) = *(unsigned __int8 *)(v8 + v9) ^ (-127 * (v9 & 0xF)) ^ *(unsigned __int8 *)(STACK[0x5698] + (v9 & 0xF)) ^ *(unsigned __int8 *)((v9 & 0xF) + STACK[0x5690] + 3) ^ *(unsigned __int8 *)((v9 & 0xF) + STACK[0x56A0] + 1) | ((v10 ^ v11) << 8);
  return a7(a1, a2, a3, a4, a5, v8 - ((2 * (_DWORD)v8) & 0x392A) - 25451);
}

uint64_t sub_100CF058C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((21
                                * ((((v4 ^ 0xE7187166) + 417828506) ^ ((v4 ^ 0xE0983E4F) + 526893489) ^ ((v4 ^ 0xCAB36154) + 894213804))
                                 - a4 == LODWORD(STACK[0x4C14]) - 1138050871)) | LODWORD(STACK[0x4C10]))))();
}

uint64_t sub_100CF0644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v6 ^ 0xBB35 ^ ((((unsigned __int16)((a6 - v6) | (v6 - a6)) >> ((v6 + 123) ^ 3)) & 1)
                                                             * ((v6 + 968017774) & 0xC64C9ED3 ^ 0xD74))))
                            - 12))();
}

uint64_t sub_100CF06AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t))(STACK[0x6AD8] + 8 * (int)((v5 + 17900) ^ v5)))(a1, a2, a3, a4, 40081, a3, *(_QWORD *)(STACK[0x6AD8] + 8 * v5), (v4 ^ 0xF3FFBF5CEFCB9D9CLL) - 0x7BD0777D3DC2FE0ELL + ((2 * v4) & 0x1DF973B38));
}

uint64_t sub_100CF0714@<X0>(int a1@<W0>, __int16 a2@<W4>, __int16 a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  v10 = STACK[0x6508] - 3695;
  LODWORD(STACK[0xD70C]) = a1;
  LODWORD(STACK[0xD704]) = v8;
  LODWORD(STACK[0xC63C]) = v5;
  LODWORD(STACK[0xD700]) = v6;
  LODWORD(STACK[0xD1C4]) = v7;
  LODWORD(STACK[0xCD3C]) = v9;
  LOWORD(STACK[0xD1C2]) = a3;
  LOWORD(STACK[0xD1CA]) = a2;
  LODWORD(STACK[0xD1CC]) = v4;
  LOWORD(STACK[0xD70A]) = a3;
  LODWORD(STACK[0xB518]) = a4 + 2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((70
                                          * ((((a1 ^ LODWORD(STACK[0x33B0])) + 1690387111) ^ ((a1 ^ 0xCEA7A31C)
                                                                                            + 827874532) ^ ((a1 ^ (v10 | 0x14A0) ^ 0x98AA269F) + 1733677000)) == 2109795832)) ^ LODWORD(STACK[0x33B4])))
                            - 8))();
}

uint64_t sub_100CF07F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int16 a6)
{
  return ((uint64_t (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                     + 8
                                                                                     * (LODWORD(STACK[0x31CC]) ^ (10746 * (a6 == 40093))))
                                                                         - ((LODWORD(STACK[0x31CC]) + 1684367227) & 0x9B9A927E)
                                                                         + 4206))(a1, &off_1015B46D0, a3, 95);
}

uint64_t sub_100CF0860(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unint64_t v21;

  v6 = *(_QWORD *)(STACK[0xE270] + 8);
  v7 = ((2 * v4) & 0x13FF87EF6) + (v4 ^ 0xFDD0358F9FFC3F7BLL) + 0x22FCA706003C085;
  v8 = STACK[0x5618];
  v9 = STACK[0x5620];
  v10 = STACK[0x5628];
  v11 = STACK[0x31CC];
  v12 = ((unint64_t)(*(unsigned __int8 *)(v6 + v7 + 1) ^ (43 * ((v7 + 1) & 0xF)) ^ *(unsigned __int8 *)(v8 + ((v7 + 1) & 0xF)) ^ *(unsigned __int8 *)(((v7 + 1) & 0xF) + v9 + 2) ^ *(unsigned __int8 *)(v10 + ((v7 + 1) & 0xF))) << 48) | ((*(unsigned __int8 *)(v8 + (v7 & 0xF)) ^ *(unsigned __int8 *)(v6 + v7) ^ ((LODWORD(STACK[0x31CC]) ^ v5) * (v7 & 0xF)) ^ *(unsigned __int8 *)((v7 & 0xF) + v9 + 2) ^ *(unsigned __int8 *)(v10 + (v7 & 0xF))) << 56) | ((unint64_t)(*(unsigned __int8 *)(v6 + v7 + 2) ^ (43 * ((v7 + 2) & 0xF)) ^ *(unsigned __int8 *)(v8 + ((v7 + 2) & 0xF)) ^ *(unsigned __int8 *)(((v7 + 2) & 0xF) + v9 + 2) ^ *(unsigned __int8 *)(v10 + ((v7 + 2) & 0xF))) << 40) | ((unint64_t)(*(unsigned __int8 *)(v6 + v7 + 3) ^ (43 * ((v7 + 3) & 0xF)) ^ *(unsigned __int8 *)(v8 + ((v7 + 3) & 0xF)) ^ *(unsigned __int8 *)(((v7 + 3) & 0xF) + v9 + 2) ^ *(unsigned __int8 *)(v10 + ((v7 + 3) & 0xF))) << 32);
  v13 = *(_QWORD *)(a2 + 8 * (LODWORD(STACK[0x31CC]) - 3672)) - 12;
  v14 = *(_QWORD *)(a2 + 8 * (LODWORD(STACK[0x31CC]) ^ 0x1644));
  v15 = *(_QWORD *)(a2 + 8 * (LODWORD(STACK[0x31CC]) - 3998));
  v16 = (v7 + 5) & 0xF;
  v17 = v12 & 0xFFFFFFFF0000FFFFLL | ((unint64_t)(*(_BYTE *)(v6 + v7 + 4) ^ (((v7 + 4) & 0xF) * a4) ^ *(_BYTE *)(v13 + ((v7 + 4) & 0xF)) ^ *(_BYTE *)(v14 + ((v7 + 4) & 0xF)) ^ *(_BYTE *)(((v7 + 4) & 0xF) + v15 - 4 + 5)) << 24) | ((unint64_t)(*(_BYTE *)(v6 + v7 + 5) ^ (v16 * a4) ^ *(_BYTE *)(v13 + v16) ^ *(_BYTE *)(v14 + v16) ^ *(_BYTE *)(v16 + v15 - 4 + 5)) << 16);
  v18 = ((unint64_t)(*(_BYTE *)(v6 + v7 + 6) ^ (((v7 + 6) & 0xF) * a4) ^ *(_BYTE *)(v13 + ((v7 + 6) & 0xF)) ^ *(_BYTE *)(v14 + ((v7 + 6) & 0xF)) ^ *(_BYTE *)(((v7 + 6) & 0xF) + v15 - 4 + 5)) << 8) ^ 0xF8B4B1E5C3DD8036;
  v7 += 7;
  LODWORD(v6) = *(unsigned __int8 *)(v6 + v7);
  v19 = v7 & 0xF;
  v20 = *(unsigned __int8 *)(v14 + v19);
  LODWORD(v6) = v6 ^ (v19 * a4) ^ *(unsigned __int8 *)(v13 + v19);
  LODWORD(v19) = *(unsigned __int8 *)(v19 + v15 - 4 + 5);
  v21 = (v6 ^ v20 ^ v19) & 0xA6 | ((v17 & 0x74B4E1A3C220000 | v18 & (v17 ^ 0xFCBDF5EFDFDFFF76)) ^ 0x89678AF5FE15D86FLL) & ((v6 ^ v20) ^ ~(_BYTE)v19 | 0xFFFFFFFFFFFFFF00);
  *(_QWORD *)STACK[0xE278] = (((v21 ^ 0x899046AD47C4A67FLL) - 0x49F8B48E93FD7AC2) ^ ((v21 ^ 0x5385A582D8A49104)
                                                                                     + 0x6C12A85EF362B247) ^ ((v21 ^ 0xABC6D83FA2A86F22) - 0x6BAE2A1C7691B39FLL))
                           - 0x3AF3FC0E1A34C1ECLL;
  LODWORD(STACK[0xB518]) += 40085
                          + (((LOWORD(STACK[0xD70A]) ^ 0xB66F5931) + 1234216655) ^ ((LOWORD(STACK[0xD70A]) ^ 0x97D750C3)
                                                                                  + 1747496765) ^ ((LOWORD(STACK[0xD70A]) ^ 0x21B89567)
                                                                                                 - 565744999));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v11) - 8))();
}

uint64_t sub_100CF0C34@<X0>(int a1@<W0>, __int16 a2@<W4>, unsigned __int16 a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  _BOOL4 v12;

  v10 = LODWORD(STACK[0x33A4]) - 3271;
  LODWORD(STACK[0xD70C]) = a1;
  LODWORD(STACK[0xB518]) = a4;
  LODWORD(STACK[0xD704]) = v8;
  LODWORD(STACK[0xC63C]) = v5;
  LODWORD(STACK[0xD700]) = v6;
  LODWORD(STACK[0xD1C4]) = v7;
  LODWORD(STACK[0xCD3C]) = v9;
  LOWORD(STACK[0xD1C2]) = a3;
  LOWORD(STACK[0xD1CA]) = a2;
  LODWORD(STACK[0xD1CC]) = v4;
  v12 = v6 != -546425878 || a3 != 40117;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 ^ 0x2D4E) * v12) ^ LODWORD(STACK[0x33A0]))) - 8))();
}

uint64_t sub_100CF0CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 4))(a1, a2, a3, a4, 8154, a6, a7, 4222);
}

uint64_t sub_100CF0D64@<X0>(int a1@<W0>, __int16 a2@<W4>, __int16 a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;

  v10 = STACK[0x6508];
  LODWORD(STACK[0xD70C]) = a1;
  LODWORD(STACK[0xB518]) = a4;
  LODWORD(STACK[0xD704]) = v8;
  LODWORD(STACK[0xD700]) = v6;
  LODWORD(STACK[0xD1C4]) = v7;
  LODWORD(STACK[0xCD3C]) = v9;
  LOWORD(STACK[0xD1C2]) = a3;
  LOWORD(STACK[0xD1CA]) = a2;
  LODWORD(STACK[0xD1CC]) = v4;
  LODWORD(STACK[0xC63C]) = v5 + 2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (LODWORD(STACK[0x33A8]) ^ (4
                                                                   * ((((v8 ^ 0x1EBFA448) - 515875912) ^ ((v8 ^ 0xF8BE2137) + 121757385) ^ ((((_DWORD)v10 + 4803) ^ 0xD4CD77C7) + (v8 ^ 0x2B32AB02)))
                                                                    - LODWORD(STACK[0xE25C]) == LODWORD(STACK[0x33AC])))))
                            - 8))();
}

uint64_t sub_100CF0E4C()
{
  unsigned __int16 v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v1 = STACK[0x2D80];
  v2 = (LODWORD(STACK[0x2D80]) - 8696) | 0x93u;
  v3 = ((uint64_t (*)(_QWORD))STACK[0x5510])(v0) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((2 * v3) | (4 * v3)) ^ v1)) - v2 + 17039))();
}

uint64_t sub_100CF0EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((((v4 - ((2 * v4) & 0x1B7D6) + 2072894443) ^ (v5 + 138428141) ^ 0x73CD5A6B) != 0) * (((v5 + 138428141) | 0x94224203) + 1671250722)) ^ v5))
                                                                                                - 12))(a1, a2, a3, a4, 3723946951, 2623718274, 3194729911);
}

uint64_t sub_100CF0F5C()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((((v1 ^ 0xEA386ECF) + 365423425) ^ 0x2D87) * (v0 < 8)) ^ v1))
                            - 8))();
}

uint64_t sub_100CF0FF0()
{
  int v0;
  int v1;
  char v2;
  char v3;
  BOOL v5;

  v5 = (v0 - 1) > 0xF || ((v0 - 1) & 0xFu) > ((v2 + v3 + (_BYTE)v0 - 1 + 3) & 0xFu);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((31921 * ((v5 ^ (v1 - 1)) & 1)) ^ v1))
                            - 4))();
}

uint64_t sub_100CF1054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v12;
  unint64_t v13;
  int v15;

  v7 = v4 - (v3 + a1);
  v8 = STACK[0x44B8] - (v3 + a1);
  v9 = STACK[0x44C0] - (v3 + a1);
  v10 = ((_BYTE)v5 + (_BYTE)v6 + (_BYTE)v3 + 3) & 0xF;
  v12 = (unint64_t)(v5 + v6 - 0x3FFFED9EC7BFF7FDLL + a2 - a1) > 0xF
     && v7 + v10 >= ((v2 - 365423425) ^ 0xEA384325uLL)
     && v8 + v10 >= ((5 * (v2 ^ 0x28B4u)) ^ 0x21DAuLL);
  v13 = v9 + v10;
  v15 = v12 && v13 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v15 | (v15 << 7) | v2)) - 4))();
}

uint64_t sub_100CF1104()
{
  unsigned int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((v0 < 0x10) ^ (v1 + 53)) & 1)
                                * ((v1 - 193389008) & STACK[0xE04] ^ 0x3B6E)) ^ v1)))();
}

uint64_t sub_100CF1154@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(void);

  STACK[0x6A70] = v5;
  STACK[0x6A80] = v4;
  STACK[0x6AC0] = a1 - 15;
  STACK[0x6AB0] = (v2 + v1 + 14) & 0xFLL;
  STACK[0x6AA0] = (v2 + v1 + 13) & 0xFLL;
  STACK[0x6A90] = (v2 + v1 + (v3 & 0x9EEFAE6F) + 1801179549) & 0xFLL;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8
                                     * (int)(v3 & 0x9EEFAE6F ^ 0x94A44E70 ^ (41046 * ((v3 & 0x9EEFAE6F) == -1637658847))))
                         - 12);
  STACK[0x6A60] = v2 & 0xFFFFFFF0;
  return v6();
}

uint64_t sub_100CF126C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16x4_t v24;
  int8x16x4_t v25;

  v24.val[0].i64[0] = (v20 + v8) & 0xF;
  v24.val[0].i64[1] = STACK[0x6AB0];
  v24.val[1].i64[0] = STACK[0x6AA0];
  v24.val[1].i64[1] = STACK[0x6A90];
  v24.val[2].i64[0] = a3;
  v24.val[2].i64[1] = a4;
  v24.val[3].i64[0] = a5;
  v25.val[0].i64[0] = a7;
  v25.val[0].i64[1] = a8;
  v25.val[1].i64[0] = v13;
  v24.val[3].i64[1] = a6;
  v25.val[1].i64[1] = v14;
  v25.val[2].i64[0] = v15;
  v25.val[2].i64[1] = v16;
  v24.val[0].i64[0] = vqtbl4q_s8(v24, (int8x16_t)xmmword_101507040).u64[0];
  v25.val[3].i64[0] = v17;
  v25.val[3].i64[1] = v18;
  v24.val[0].i64[1] = vqtbl4q_s8(v25, (int8x16_t)xmmword_101507040).u64[0];
  v22 = vrev64q_s8(vmulq_s8(v24.val[0], v21));
  *(int8x16_t *)(v19 + v20) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v12 + ((v20 + v8) & 0xF)), *(int8x16_t *)(STACK[0x6AC0] + v20 + v8)), *(int8x16_t *)(((v20 + v8) & 0xF) + a2 + 3)), *(int8x16_t *)(v11 + ((v20 + v8) & 0xF) + ((v10 - 7560) ^ 0x4292))), vextq_s8(v22, v22, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v10 ^ (4 * (v9 != 0)))) - 12))();
}

uint64_t sub_100CF1348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((STACK[0x6A60] != v4) * (v5 ^ 0x42F4)) ^ v5)) - 12))(a1, a2, a3, a4, 3723946951, 2623718274, 3194729911, 4222);
}

uint64_t sub_100CF13B8()
{
  char v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((((1730 * (v1 ^ 0x4296)) ^ 0x482 ^ (1730 * (v1 ^ 0x4296) + 6558)) * ((v0 & 8) == 0)) | (1730 * (v1 ^ 0x4296)))))();
}

uint64_t sub_100CF1408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12);
  STACK[0x6AC0] = v2 & 0xFFFFFFF8;
  return v7(a1, a2 - 7, a1 - 7, v6 - (v2 & 0xFFFFFFF8) + 8, v5 - 0x3FFFED9EC7BFF7FDLL + v4 + v2 - v6 + 10, v5 - 0x3FFFED9EC7BFF7FDLL + v4 + v2 - v6 + 11, v5 - 0x3FFFED9EC7BFF7FDLL + v4 + v2 - v6 + 12, v5 - 0x3FFFED9EC7BFF7FDLL + v4 + v2 - v6 + 13);
}

uint64_t sub_100CF1494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7, char a8)
{
  uint64_t v8;
  char v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  int8x16_t *v17;
  char v18;
  uint64_t v19;
  int8x8_t v20;
  uint64_t v21;
  int8x16x4_t v23;

  v21 = (v15 + v13);
  v23.val[0].i64[0] = (v21 + v8) & 0xF;
  v23.val[0].i64[1] = (v14 + (_BYTE)v13) & 0xF;
  v23.val[1].i64[0] = (a8 + (_BYTE)v13) & 0xF;
  v23.val[1].i64[1] = (a7 + (_BYTE)v13) & 0xF;
  v23.val[2].i64[0] = (a6 + (_BYTE)v13) & 0xF;
  v23.val[2].i64[1] = (a5 + (_BYTE)v13) & 0xF;
  v23.val[3].i64[0] = (v10 + (_BYTE)v13) & 0xF;
  v23.val[3].i64[1] = (v9 + (_BYTE)v13 + (_BYTE)v11 + v18) & 0xF;
  *(int8x8_t *)(a3 + v21) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v12 + v23.val[0].i64[0]), *(int8x8_t *)(a2 + v21 + v8)), veor_s8(*(int8x8_t *)(v23.val[0].i64[0] + v16 + 3), *(int8x8_t *)(v23.val[0].i64[0] + v19 + 1))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v23, v17[5]), v20)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((28062 * (a4 == v13)) ^ v11)) - 12))();
}

uint64_t sub_100CF1564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (((((v5 + 134749949) | LODWORD(STACK[0xDBC])) + 365419197) * (STACK[0x6AC0] != v4)) ^ v5)))(a1, a2, a3, a4, 3723946951, 2623718274, 3194729911, 4222);
}

uint64_t sub_100CF15DC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((26136 * (v0 == ((v0 + 1755822889) & 0xAD2023A5) - 563049656)) ^ (v0 + 365420239))))();
}

uint64_t sub_100CF1634@<X0>(uint64_t a1@<X0>, unsigned int a2@<W4>, unint64_t a3@<X5>, int a4@<W6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v11 = v7 - 1;
  v12 = v11 + v5;
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(v9 + (v12 & 0xF)) ^ *(_BYTE *)(a5 + v12) ^ *(_BYTE *)((v12 & 0xF) + v10 + 3) ^ (-127 * (v12 & 0xF)) ^ *(_BYTE *)(v8 + (v12 & 0xF) + ((v6 + a4) & a2 ^ a3));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((28 * (v11 == 0)) ^ v6)))();
}

uint64_t sub_100CF169C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned __int16 v3;

  *(_DWORD *)STACK[0xE268] = v3;
  *(_QWORD *)STACK[0xE260] = a1;
  LODWORD(STACK[0xC63C]) = v3 + v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v1 ^ 0x9C62D83B ^ (11464 * (v1 < ((v1 + 1671253235) ^ 0x7047FD5E)))))
                            - 12))();
}

uint64_t sub_100CF1728@<X0>(int a1@<W0>, int a2@<W4>, unsigned __int16 a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  LODWORD(STACK[0xD70C]) = a1;
  LODWORD(STACK[0xB518]) = a4;
  LODWORD(STACK[0xD704]) = v8;
  LODWORD(STACK[0xC63C]) = v5;
  LODWORD(STACK[0xD700]) = v6;
  LODWORD(STACK[0xD1C4]) = v7;
  LOWORD(STACK[0xD1C2]) = a3;
  LOWORD(STACK[0xD1CA]) = a3;
  LODWORD(STACK[0xD1CC]) = v4;
  LODWORD(STACK[0xCD3C]) = v9
                         + 40087
                         + (((a3 ^ 0x242D66EA) - 606955242) ^ ((a3 ^ 0xCC97CEF1) + 862466319) ^ ((a3 ^ ((a2 - 20063) | 0x1000) ^ 0xE8BA2682)
                                                                                               + 390450034));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a2) - 4))();
}

uint64_t sub_100CF17FC@<X0>(int a1@<W0>, int a2@<W4>, __int16 a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  LODWORD(STACK[0xD70C]) = a1;
  LODWORD(STACK[0xB518]) = a4;
  LODWORD(STACK[0xD704]) = v8;
  LODWORD(STACK[0xC63C]) = v5;
  LODWORD(STACK[0xD700]) = v6;
  LODWORD(STACK[0xD1C4]) = v7;
  LODWORD(STACK[0xCD3C]) = v4;
  LOWORD(STACK[0xD1C2]) = a3;
  LOWORD(STACK[0xD1CA]) = a3;
  LODWORD(STACK[0xD1CC]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 | 0x1200)) - (((a2 | 0x1200u) - 406) ^ 0x1072)))();
}

uint64_t sub_100CF1878@<X0>(unsigned __int16 a1@<W5>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  *(_DWORD *)(v3 + 2712) = a2
                         + 40087
                         + (((a1 ^ 0x9F09E2C9) + 1626742071) ^ ((a1 ^ 0xC9D91127)
                                                              + ((v2 + 849717463) & 0xCD5A56FD)
                                                              + 908515421) ^ ((a1 ^ 0x56D06F7B) - 1456500603));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8))();
}

uint64_t sub_100CF1924@<X0>(unint64_t a1@<X7>, unsigned int *a2@<X8>)
{
  unsigned int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v2 < *a2) * ((11 * (v3 ^ 0x163A)) ^ 0x49DA)) ^ v3))
                            - ((v3 - 1542) ^ a1)))();
}

uint64_t sub_100CF1974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  int v7;
  unsigned int v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (v7 ^ 0x365E)))(a1, a2, a3, a4, a5, a7 + 8, a6, (v8 ^ 0x53FBFFD7FEECEF7ELL) + 0x24334807B31BB010 + (((v7 ^ 0x496Eu) + 0x1FDD99490) & (2 * v8)));
}

uint64_t sub_100CF19E8()
{
  return ((uint64_t (*)(void))STACK[0xB6D8])();
}

uint64_t sub_100CF19F8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;

  v3 = *(_QWORD *)(STACK[0xE240] + 8);
  v4 = 2142736129 * ((((v2 - 240) | 0xB1EC5F4D) - (v2 - 240) + ((v2 - 240) & 0x4E13A0B0)) ^ 0xD2B4CB44);
  STACK[0x1D368] = STACK[0x80E8];
  STACK[0x1D350] = v3;
  LODWORD(STACK[0x1D358]) = 1951098397 - v4;
  LODWORD(STACK[0x1D360]) = (a1 - 671148827 - (((a1 + 6) << ((v1 + 77) & 0xED)) & 0xAFFE29C4) + 3) ^ v4;
  LODWORD(STACK[0x1D364]) = v1 - v4 + 7123;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x4918])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4))(v5);
}

uint64_t sub_100CF1B2C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v8 = (((v7 - 12235) ^ a1) - 17) & (v4 + a4);
  LODWORD(v8) = (*(unsigned __int8 *)(STACK[0x5698] + v8) ^ *(unsigned __int8 *)(v5 + a4) ^ *(unsigned __int8 *)(v8 + STACK[0x5690] + 3) ^ *(unsigned __int8 *)(v8 + a2 + 1) ^ (-127 * v8))
              - (*(unsigned __int8 *)(v6 + a4) ^ (-109 * (a4 & 0xF)) ^ *(unsigned __int8 *)(a3 + (a4 & 0xF)) ^ *(unsigned __int8 *)((a4 & 0xF) + STACK[0x4AC0] + 3) ^ *(unsigned __int8 *)(STACK[0x4AB8] + (a4 & 0xF)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((3188
                                          * ((v8 ^ 0xF9FFBF76)
                                           + 798948832
                                           + ((2 * (_DWORD)v8) & 0xF3FF7EEC) == 698269014)) ^ v7))
                            - 4))();
}

uint64_t sub_100CF1C24@<X0>(char a1@<W2>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v4 ^ 0x2D26 ^ (27975
                                                             * (((((a3 + 1 - v4) | (unint64_t)(v3 + v4)) >> ((v4 + a1) ^ a2)) & 1) == 0))))
                            - (v4 ^ 0x4061)
                            + 16445))();
}

uint64_t sub_100CF1C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 + 11065)) - 4))(a1, a2, a3, a4, 8154, a6, a7, 4222);
}

uint64_t sub_100CF1CA8()
{
  STACK[0xC768] -= 32;
  return ((uint64_t (*)(void))STACK[0x8580])();
}

uint64_t sub_100CF1CD8()
{
  char v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 2349) ^ (23053 * (v0 & 1))))
                            - ((STACK[0x6508] - 3534) | 0x405)
                            + 1705))();
}

uint64_t sub_100CF1D10()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2710)) - ((v0 + 2911) ^ 0x1208)))();
}

uint64_t sub_100CF1D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;
  unsigned __int16 v10;

  *(_DWORD *)(v8 + 2632) = v9 + v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v7) - ((887 * (v7 ^ 0x2331u)) ^ 0x1BB4)))(a1, a2, a3, a4, a5, a6, a7, 4222);
}

uint64_t sub_100CF1D8C@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  __int16 v10;
  int v11;

  v11 = STACK[0x6508] + 406;
  LODWORD(STACK[0xD70C]) = a1;
  LODWORD(STACK[0xB518]) = a4;
  LODWORD(STACK[0xD704]) = v8;
  LODWORD(STACK[0xC63C]) = v5;
  LODWORD(STACK[0xD700]) = v6;
  LODWORD(STACK[0xD1C4]) = v7;
  LOWORD(STACK[0xD1C2]) = v10;
  LOWORD(STACK[0xD1CA]) = a2;
  LODWORD(STACK[0xD1CC]) = v4;
  *(_DWORD *)STACK[0xEDD0] = a3;
  LODWORD(STACK[0xCD3C]) = v9
                         + 40085
                         + (((a2 ^ 0x817116F9) + 2123294983) ^ ((a2 ^ 0xE4A2F4E4) + 459082524) ^ ((a2 ^ 0x65D37E88)
                                                                                                - 1708359304));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v11) - 4))();
}

uint64_t sub_100CF1E64@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  *(_DWORD *)(v5 + 952) = v4;
  STACK[0xE260] = v3;
  STACK[0xE250] = a1;
  STACK[0xE268] = v1;
  LODWORD(STACK[0xC63C]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14465 * (a1 != 0)) ^ v2)) - ((v2 - 7010) | v6) + v7))();
}

uint64_t sub_100CF1EE0@<X0>(_DWORD *a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((*a1 | ~v2) & (v2 - *a1) | *a1 & ~v2) >> 31)
                                               * (((v1 - 6870) | 0x218) + 9122)) ^ v1))
                            - (((v1 - 7044) | 0x1042u) ^ 0x107ALL)))();
}

uint64_t sub_100CF1F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  int v7;
  unsigned int v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8] + 8 * (v7 ^ 0x37A6)))(a1, a2, a3, a4, a5, a7 + 8, a6, ((2 * v8) & 0x1DF5FF7DELL) + (v8 ^ 0xC7CDEE2FEFAFFBEFLL) + (((v7 - 178) | 0x4824u) ^ 0xB06159AFC258E9F3));
}

uint64_t sub_100CF1FCC()
{
  return ((uint64_t (*)(void))STACK[0x76B8])();
}

uint64_t sub_100CF1FD4()
{
  int v0;
  int v1;
  unint64_t v2;

  v2 = STACK[0x6508];
  LODWORD(STACK[0xB0BC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v2 - 3960) * (v0 ^ 1)) ^ (v2 + 14077))) - 12))();
}

uint64_t sub_100CF200C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((LODWORD(STACK[0xCAE4]) < 0x52uLL) * ((STACK[0x3158] | 0x1076) ^ 0x1A1)) ^ LODWORD(STACK[0x3160])))
                            - 12))();
}

uint64_t sub_100CF205C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v8 = STACK[0x2AB8] | 0xA9;
  v9 = (v7 ^ 0xFFE7FDC3FBDDDDEFLL)
     + 0x5EBB17FFEEFB7F75
     + (((((_DWORD)v8 + 4776) | 0x2802u) + 0x1F7BB808BLL) & (2 * v7));
  v10 = (v9 ^ 0x4BD22C1FD106285ALL) & (2 * (v9 & 0x41526A29CLL)) ^ v9 & 0x41526A29CLL;
  v11 = ((2 * (v9 ^ 0x4BD22C17D9072C72)) ^ 0x1511085798431DDCLL) & (v9 ^ 0x4BD22C17D9072C72) ^ (2
                                                                                                  * (v9 ^ 0x4BD22C17D9072C72)) & 0x6A8EC62BCC218EEELL;
  v12 = v11 ^ 0x2A82422844208222;
  v13 = (v11 ^ 0x88010CC0) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0x2A3B18AF30863BB8) & v12 ^ (4 * v12) & 0x6A8EC62BCC218EECLL;
  v15 = (v14 ^ 0xAA0A002B00000AA0) & (16 * v13) ^ v13;
  v16 = ((16 * (v14 ^ 0x4084C600CC218446)) ^ 0x28EC62BCC218EEE0) & (v14 ^ 0x4084C600CC218446) ^ (16 * (v14 ^ 0x4084C600CC218446)) & 0xEA8EC62BCC218EE0;
  v17 = (v16 ^ 0xA88C4228C0008E00) & (v15 << 8) ^ v15;
  v18 = (((v16 ^ 0x420284030C21000ELL) << 8) ^ 0x8EC62BCC218EEE00) & (v16 ^ 0x420284030C21000ELL) ^ ((v16 ^ 0x420284030C21000ELL) << 8) & 0xEA8EC62BCC218E00;
  v19 = v9 ^ (2 * (v18 & 0x44218C2000000000 ^ v17 ^ (v18 ^ 0xA86020800000000) & (v17 << 16))) ^ 0x53332A445EE17D8CLL;
  v20 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((int)v8 + 5513)))(a1, a2, a3, a4, v19, 0x58292A32636B72E6, a7, 0x2AB629F33171E5F1);
}

uint64_t sub_100CF22C8()
{
  int v0;
  int v1;
  unint64_t v2;
  unsigned int v3;

  v2 = STACK[0x6508];
  v3 = STACK[0x38A0] & 0xEE1EDFFB;
  LODWORD(STACK[0x9218]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v3 + ((v2 + 1183) | 0x4288) - 42652) * (v0 ^ 1)) ^ LODWORD(STACK[0x389C])))
                            - 8))();
}

uint64_t sub_100CF2324()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((5801
                                          * (((LODWORD(STACK[0x7908]) > ((v0 + 813707396) & 0xCF7FD7FD) - 22365) ^ (v0 - 22)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100CF2394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  unint64_t v9;

  v8 = (v7 - 20247) | 0xB0;
  v9 = STACK[0x6AD8];
  STACK[0xD238] = *(_QWORD *)(STACK[0x6AD8] + 8 * v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (int)(v8 ^ 0x1686 ^ (14914 * ((v8 - 1372555474) < 0x68417830)))))(a1, a2, a3, a4, 0xF26FC0784BC7DF50, 0x58292A32636B72E6, a7, 0x2AB629F33171E5F1);
}

uint64_t sub_100CF2454@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((a1 - 18215) ^ (STACK[0xB950] == 0)) & 1) == 0) * (a1 ^ 0x57A8)) ^ a1))
                            - 8))();
}

uint64_t sub_100CF24A4()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2349)) - 4))(v1);
}

uint64_t sub_100CF24C0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2053 * (STACK[0x89D0] != 0)) ^ (v0 + 5081))) - 8))();
}

uint64_t sub_100CF24F4()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v1);
}

uint64_t sub_100CF2508()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v0 + 2349) ^ 0x263C) * (v1 == -1926392729)) ^ (v0 + 2349)))
                            - 4))();
}

uint64_t sub_100CF253C@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(_QWORD, unint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v5))(LODWORD(STACK[0xD70C]), ((*(_DWORD *)(v4 + 936) + 4) ^ 0x75F6FE5BBDF3F777)- 0x540224110D414274+ (((unint64_t)(*(_DWORD *)(v4 + 936) + 4) << (((v5 ^ 0x47) * v3) ^ 0x77u)) & 0x17BE7EEEELL), STACK[0xEDC0] + 8, LODWORD(STACK[0xEDCC]), LOWORD(STACK[0xD1CA]), a1, *(_QWORD *)(STACK[0x6AD8] + 8 * v2) + a2);
}

uint64_t sub_100CF2638()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] - 4162) ^ (21805 * (v0 == 1926417414))))
                            - (LODWORD(STACK[0x4B08]) ^ 0x107ALL)))();
}

uint64_t sub_100CF268C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xC788] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(v0 ^ 0x144D ^ (((v0 + 673639876) > 0xD644FCBF)
                                                             * ((v0 + 193) ^ 0x3C3C))))
                            - 12))();
}

uint64_t sub_100CF26EC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] - 4162) ^ (6041 * (v0 == -1926392729))))
                            - (LODWORD(STACK[0x4B08]) ^ 0x107ALL)))();
}

uint64_t sub_100CF2738()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v0 - 27124792) & 0x19DE7FB) + 5783) ^ v0)) - 12))();
}

uint64_t sub_100CF279C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X8>)
{
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  STACK[0xA5D0] = v7;
  STACK[0x7EF0] = a6;
  STACK[0x9098] = v8;
  LODWORD(STACK[0xC844]) = -1926392729;
  LODWORD(STACK[0x826C]) = -1926392729;
  STACK[0x7C78] = 0;
  LODWORD(STACK[0xBE5C]) = 0;
  STACK[0x6E10] = 0;
  LODWORD(STACK[0x8F24]) = 1280;
  v9 = STACK[0xC768];
  STACK[0x9A68] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = v9 + 80;
  STACK[0xBC58] = 0;
  LODWORD(STACK[0x8CCC]) = -1926392729;
  STACK[0x9FD8] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 + 4131))
                                                                                                - ((v6 + 21347) ^ 0x5753)))(0x4B0D70AD3A88BE86, a1, a2, a3, a4, a5, 16794642);
}

uint64_t sub_100CF28B4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  v3 = STACK[0x6508];
  v4 = STACK[0x6AD8];
  v5 = STACK[0x3138];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x3134];
  LODWORD(STACK[0xEE50]) = v5;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v2;
  LODWORD(STACK[0xEE60]) = v5 - 6;
  LODWORD(STACK[0xEE64]) = 0;
  *(_QWORD *)(v0 + 792) = &STACK[0xEE18];
  *(_DWORD *)(v0 + 784) = -299994601
                        - 1705718857
                        * ((((v1 - 240) | 0x1B7E7AC2) - (v1 - 240) + ((v1 - 240) & 0xE4818538)) ^ 0x26ECA59B)
                        + v3;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v0 + 788)))(v6);
}

uint64_t sub_100CF297C()
{
  int v0;
  int v1;

  v0 = STACK[0x2AB0] & 0x523D3BF5;
  v1 = STACK[0x6508] - 1030;
  STACK[0x6AC0] = STACK[0xC350];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v1 ^ 0x3DB6 ^ v0)))();
}

uint64_t sub_100CF29E4()
{
  STACK[0xC768] -= 32;
  return ((uint64_t (*)(void))STACK[0xB820])();
}

uint64_t sub_100CF2A10()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;

  v4 = STACK[0x6508];
  v5 = STACK[0x6AD8];
  v6 = STACK[0x3384];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x3380];
  LODWORD(STACK[0xEE50]) = v6;
  STACK[0xEE30] = v3;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = v6 ^ v0;
  LODWORD(STACK[0xEE64]) = 0;
  *(_DWORD *)(v1 + 784) = -299994601
                        - 1705718857
                        * ((((v2 - 240) | 0xAA0D2D6) - (v2 - 240) + ((v2 - 240) & 0xF55F2D28)) ^ 0x37320D8F)
                        + v4;
  *(_QWORD *)(v1 + 792) = &STACK[0xEE18];
  v7 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * *(int *)(v1 + 788)) - 4))(v7);
}

uint64_t sub_100CF2ADC()
{
  unint64_t v0;

  v0 = STACK[0x6508];
  STACK[0x6AC0] = STACK[0xAC08];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(v0 - 986 + 37 * (v0 ^ 0x10B7) + 418)))();
}

uint64_t sub_100CF2B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  BOOL v6;
  int v7;

  STACK[0xA0B0] = v5;
  if (v2)
    v6 = v4 == -1926392729;
  else
    v6 = 1;
  v7 = !v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                        + 8 * ((v7 * ((v3 ^ 0x35) - 5353)) ^ v3))
                                                            - (((v3 - 7093) | 0x1540u) ^ 0x157CLL)))(a1, a2, 831154906);
}

uint64_t sub_100CF2BD4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  int v5;

  if ((((v5 ^ 0x927CF792) + 1837303918) ^ ((v5 ^ 0xB43628FE) + 1271518978) ^ ((v5 ^ 0xAB675E7B ^ (v4 - 1632))
                                                                             + 1419293941))
     - 1926392729 >= 0x14)
    v5 = -1926392717;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((((v5 ^ 0x8CA3C53B) + 1935424197) ^ ((v5 ^ 0x7B69F930) - 2070542640) ^ ((v5 ^ 0x7AE7A86C) - 2062002284))
                                           - 1095237823 == a3)
                                          * a4) ^ v4))
                            - 12))();
}

uint64_t sub_100CF2CC4(uint64_t a1, uint64_t a2, unsigned int a3, int a4, unsigned int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  char v10;
  char v11;
  _BOOL4 v12;
  unsigned int v13;

  v12 = v9 < a3;
  *(_BYTE *)(v5 + v8) ^= v10 ^ (*(_BYTE *)(v6 + v8) - (v11 & (2 * *(_BYTE *)(v6 + v8))) + 117);
  v13 = v8 + 1;
  if (v12 == v13 > a5)
    v12 = v13 + a3 < v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((!v12 * a4) ^ v7)) - 12))();
}

uint64_t sub_100CF2D30()
{
  int v0;
  unint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v0 + 48) ^ 0x2C48) * (v1 > STACK[0x6AC0])) ^ v0))
                            - 4))();
}

uint64_t sub_100CF2D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7, unsigned int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v21 = ((*(_DWORD *)(*v13 + (*v17 & a8)) ^ (v8 + v9)) & 0x7FFFFFFF) * v11;
  v22 = (v21 ^ HIWORD(v21)) * v11;
  v23 = v22 >> (((v10 + a6) | 0x46) ^ 0x6Eu);
  v24 = ((((_DWORD)a5 + (_DWORD)v9) * v11) ^ (((a5 + v9) * v11) >> 16)) * v11;
  *(_BYTE *)(a5 + v9) = *(_BYTE *)(v20 + v23) ^ *(_BYTE *)(v8 + v9) ^ *(_BYTE *)(v19 + v23) ^ *(_BYTE *)(v15 + v23) ^ *(_BYTE *)(v18 + (v24 >> 24)) ^ v24 ^ *(_BYTE *)((v24 >> 24) + v14 + 4) ^ *(_BYTE *)((v24 >> 24) + v16 + 2) ^ (-9 * BYTE3(v24)) ^ v22 ^ (v23 * v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 != 19) * a7) ^ v10)) - 4))();
}

uint64_t sub_100CF2E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;

  v19 = v7 - 1;
  v20 = ((*(_DWORD *)(*v11 + (*v15 & (v5 - 1274 + v9))) ^ (v6 + v19)) & 0x7FFFFFFF) * v8;
  v21 = (v20 ^ HIWORD(v20)) * v8;
  v22 = ((((_DWORD)a5 + (_DWORD)v19) * v8) ^ (((a5 + v19) * v8) >> 16)) * v8;
  *(_BYTE *)(a5 + v19) = *(_BYTE *)(v18 + (v21 >> 24)) ^ *(_BYTE *)(v6 + v19) ^ *(_BYTE *)(v17 + (v21 >> 24)) ^ *(_BYTE *)(v13 + (v21 >> 24)) ^ *(_BYTE *)(v16 + (v22 >> 24)) ^ *(_BYTE *)((v22 >> 24) + v12 + 4) ^ v22 ^ *(_BYTE *)((v22 >> 24) + v14 + 2) ^ v21 ^ (-9 * ((((((_DWORD)a5 + (_DWORD)v19) * v8) ^ (((a5 + v19) * v8) >> 16)) * v8) >> 24)) ^ (BYTE3(v21) * v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((208 * (v19 == 0)) ^ v5)) - 4))();
}

uint64_t sub_100CF2F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v5 + 13713)) - 8))(16042, 6941, 4294967180, STACK[0x45E8], a5, 1772489163, 4294967243);
}

uint64_t sub_100CF2F6C@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, char a6@<W6>, unsigned int a7@<W7>, char a8@<W8>)
{
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _DWORD *v13;
  unsigned int v14;

  v14 = ((*(_DWORD *)(*v12 + (*v13 & a7)) ^ (v8 + v11)) & 0x7FFFFFFF) * a5;
  *(_BYTE *)(a4 + v11) = *(_BYTE *)(a3 + (v11 | (16 * ((((v14 >> ((v9 + a8) ^ a1)) ^ v14) * a5) >> 24)))) ^ *(_BYTE *)(v8 + v11) ^ (((v14 >> ((v9 + a8) ^ a1)) ^ v14) * a6);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v11 == 15) * a2) ^ v10)) - 8))();
}

uint64_t sub_100CF2FE4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 *a5)
{
  int v5;
  char *v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  char v10;
  int v11;
  char v12;
  char *v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  unsigned int v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  char *v45;
  int v46;
  unsigned int v47;
  char *v48;
  unsigned int v49;
  char *v50;
  unsigned int v51;
  int v52;
  int v53;
  uint64_t v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  unint64_t v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unint64_t v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned __int8 v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  char v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  unsigned __int8 v189;
  unsigned int v190;
  unsigned int v191;
  char v192;
  unsigned int v193;
  unsigned int v194;
  char v195;
  unsigned int v196;
  unint64_t v197;
  unsigned __int8 v198;
  int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  char *v252;
  uint64_t v253;
  unsigned int v254;
  int v255;
  int v256;
  char *v257;
  int v258;
  unint64_t v259;
  char *v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unint64_t v265;
  int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned __int8 v275;
  unsigned int v276;
  int v277;
  int v278;
  int v279;
  char *v280;
  char *v281;
  int v282;
  int v283;
  char *v284;
  uint64_t v285;
  char v286;
  _BYTE *v287;
  unint64_t v288;
  int v289;
  int v290;
  unint64_t v291;
  char v292;
  char v293;
  int v294;

  v6 = (char *)*(&off_1015B46D0 + (v5 ^ 0x36F7)) - 4;
  v7 = (uint64_t)*(&off_1015B46D0 + v5 - 15307);
  v8 = v6[a5[6] ^ 0x85];
  v9 = *(_BYTE *)(v7 + (*a5 ^ 0xF2)) - 30;
  v10 = v9 & 0xAE ^ a3;
  LODWORD(STACK[0x6AA0]) = ((((v8 >> 2) | ((_BYTE)v8 << 6)) ^ 0x85) >> 6) | (4
                                                                                            * (((v8 >> 2) | (v8 << 6)) ^ 0xFFFFFF85));
  v11 = v6[a5[14] ^ 0x63];
  v12 = (v9 ^ 0x14) & (2
                     * ((v9 ^ 0x14) & (2
                                     * ((v9 ^ 0x14) & (2 * ((v9 ^ 0x14) & (2 * ((v9 ^ 0x14) & (2 * v10) ^ v10)) ^ v10)) ^ v10)) ^ v10)) ^ v10;
  v13 = (char *)*(&off_1015B46D0 + (v5 ^ 0x3792)) - 4;
  LODWORD(STACK[0x6A90]) = v13[a5[7] ^ 0x4FLL];
  LODWORD(STACK[0x6A80]) = v13[a5[11] ^ 0xA8];
  v14 = a5[1];
  v15 = (((v14 ^ 0xFFFFFFA3) + 88) ^ ((v14 ^ 0x18) - 19) ^ ((v14 ^ 0x45) - 78)) + 76;
  v16 = v15 & 0x1D ^ 0xFFFFFFF4;
  LODWORD(STACK[0x6AB0]) = (v15 ^ 0x34) & (2
                                         * ((v15 ^ 0x34) & (2
                                                          * ((v15 ^ 0x34) & (2
                                                                           * ((v15 ^ 0x34) & (2
                                                                                            * ((v15 ^ 0x34) & (2 * (((2 * v15) & 0x6A ^ 0x28) & (v15 ^ 0x20) ^ v16)) ^ v16)) ^ v16)) ^ v16)) ^ v16)) ^ v16;
  v17 = (char *)*(&off_1015B46D0 + (v5 ^ 0x3DA7)) - 8;
  v18 = v17[v14 ^ 0x63];
  LOBYTE(v14) = *(_BYTE *)(v7 + (a5[4] ^ 0x50)) - 30;
  LOBYTE(v16) = v14 & 0x44 ^ 0x7B;
  v19 = *(_BYTE *)(v7 + (a5[12] ^ 0xDCLL)) - 30;
  v20 = v19 & 0xA ^ 0x5A;
  v21 = *(unsigned __int8 *)(STACK[0x6AC0] + 15) ^ 0x7ELL;
  v22 = ((2 * ((v11 << 8) ^ 0x952992FF)) | 0xBC272FF8) - ((v11 << 8) ^ 0x952992FF) - 1578342396;
  LODWORD(v21) = v13[v21] ^ (v13[v21] >> 2) ^ (v13[v21] >> 1);
  v23 = v6[*(unsigned __int8 *)(STACK[0x6AC0] + 10) ^ 0x98] << 8;
  LODWORD(v13) = v13[*(unsigned __int8 *)(STACK[0x6AC0] + 3)];
  v24 = *(unsigned __int8 *)(STACK[0x6AC0] + 13);
  v25 = v24 ^ 0x6E;
  LOBYTE(v24) = ((v24 ^ 0xD) - 34) ^ ((v24 ^ 0x63) - 76) ^ ((v24 ^ 0x9D) + 78);
  v26 = v24 + 73;
  LOBYTE(v24) = (v24 - 55) & 0x9F;
  v27 = v6[*(unsigned __int8 *)(STACK[0x6AC0] + 2) ^ 0x7BLL];
  LODWORD(v6) = (((v26 ^ v17[v25] ^ (2
                                                    * ((v26 ^ 0x1E) & (2
                                                                     * ((v26 ^ 0x1E) & (2
                                                                                      * ((v26 ^ 0x1E) & (2 * ((v26 ^ 0x1E) & (2 * ((v26 ^ 0x1E) & (2 * ((v26 ^ 0x1E) & (2 * v24) ^ v24)) ^ v24)) ^ v24)) ^ v24)) ^ v24)) ^ v24))) << 16) ^ 0x7595C3EE) & (v21 ^ 0x7FFFEBC6) ^ (v21 & 0x11011111 | 0xA902800);
  LODWORD(v6) = v22 & 0xD036607D ^ 0x20264019 ^ (((v6 | 0x42EF007E) - (v6 & 0x42EF817E)) ^ 0x32D8F513) & (v22 ^ 0xEEC512FC);
  LODWORD(v6) = (v6 | 0x5955BF82) - (v6 | 0xA6AA407D) - 1498791811;
  LODWORD(v21) = (((v27 << 8) ^ 0x6B6C2C6B) & 0xA005A6A ^ 0x70EEE585)
               - ((v27 << 8) ^ 0x6B6C2C6B | 0x8F135AFE)
               - 1894556930;
  LOBYTE(v22) = *(_BYTE *)(v7 + (*(unsigned __int8 *)(STACK[0x6AC0] + 8) ^ 0x3DLL));
  LODWORD(v7) = (v21 & 0xD109A846 ^ 0xC00D8844)
              + (v21 & 0xFF89FFFE ^ 0x13C23003)
              - ((v21 & 0xFF89FFFE ^ 0x13C23003) & 0xD14BA846);
  LOBYTE(v22) = v22 - 30;
  LOBYTE(v21) = v22 & 0x44 ^ 0xFB;
  v28 = *(unsigned __int8 *)(STACK[0x6AC0] + 9);
  v29 = v28 ^ 0x2E;
  LOBYTE(v28) = (((v28 ^ 0x6A) - 66) ^ ((v28 ^ 0xE7) + 49) ^ ((v28 ^ 0x3E) - 22)) - 6;
  LOBYTE(v25) = v28 & 0x7B ^ 0x6F;
  LOBYTE(v28) = v28 ^ v17[v29] ^ (2
                                * ((v28 ^ 0x2C) & (2
                                                 * ((v28 ^ 0x2C) & (2
                                                                  * ((v28 ^ 0x2C) & (2
                                                                                   * ((v28 ^ 0x2C) & (2 * ((v28 ^ 0x2C) & (2 * (((2 * v28) & 0x5A ^ 0x56) & (v28 ^ 0xC) ^ v25)) ^ v25)) ^ v25)) ^ v25)) ^ v25)) ^ v25));
  v30 = ((v23 ^ 0xCBCF) & 0x2F85 | v23 & 0xD000) ^ 0xC04A;
  v31 = *(unsigned __int8 *)(STACK[0x6AC0] + 5);
  LOBYTE(v25) = (((v31 ^ 0x1F) + 83) ^ ((v31 ^ 0xD9) - 107) ^ ((v31 ^ 0xCF) - 125)) + 27;
  v32 = v25 & 0xC8 | 0x16;
  v33 = v17[v31 ^ 0x94];
  v34 = (v9 ^ (2 * v12)) ^ 5u;
  v35 = (uint64_t)*(&off_1015B46D0 + (v5 ^ 0x37CD));
  LODWORD(v17) = *(_DWORD *)(v35 + 4 * v34);
  LODWORD(v34) = ((2 * ((2 * (_DWORD)v17) & 0x139790DE ^ 0x31000D2)) & 0x20E209C)
               - ((2 * (_DWORD)v17) & 0x139790DE ^ 0x31000D2)
               + 986760336;
  LODWORD(v31) = (((v17 ^ 0x512860A0) - 183170805) ^ ((v17 ^ 0xB31351FB) + 388905042) ^ ((v17 ^ 0xCDD6E0A4) + 1777043727))
               - 1347172412
               + (((v34 ^ 0xCBDE92AD) - 1099997826) ^ ((v34 ^ 0xF9F9C923) - 1941436684) ^ ((v34 ^ 0x78BE0ED) + 1916415806));
  LOBYTE(v34) = v33 ^ v25 ^ (2
                           * ((v25 ^ 0x2C) & (2
                                            * ((v25 ^ 0x2C) & (2
                                                             * ((v25 ^ 0x2C) & (2
                                                                              * ((v25 ^ 0x2C) & (2
                                                                                               * ((v25 ^ 0x2C) & (2 * v32) ^ v32)) ^ v32)) ^ v32)) ^ v32)) ^ v32)) ^ 0x60;
  v36 = (v31 ^ 0x745C82B1) & (2 * (v31 & 0x845E0B32)) ^ v31 & 0x845E0B32;
  LODWORD(v25) = ((2 * (v31 ^ 0x7C6C8691)) ^ 0xF0651B46) & (v31 ^ 0x7C6C8691) ^ (2 * (v31 ^ 0x7C6C8691)) & 0xF8328DA2;
  v37 = v25 ^ 0x81284A1;
  LODWORD(v25) = (v25 ^ 0x30200900) & (4 * v36) ^ v36;
  v38 = ((4 * v37) ^ 0xE0CA368C) & v37 ^ (4 * v37) & 0xF8328DA0;
  LODWORD(v25) = (v38 ^ 0xE0020483) & (16 * v25) ^ v25;
  v39 = ((16 * (v38 ^ 0x18308923)) ^ 0x8328DA30) & (v38 ^ 0x18308923) ^ (16 * (v38 ^ 0x18308923)) & 0xF8328DA0;
  LODWORD(v25) = v25 ^ 0xF8328DA3 ^ (v39 ^ 0x80208883) & ((_DWORD)v25 << 8);
  LODWORD(v31) = (16
                * (((_DWORD)v25 << 16) & 0x8320000 ^ v25 ^ (((_DWORD)v25 << 16) ^ 0xDA30000) & (((v39 ^ 0x78120583) << 8) & 0x8320000 ^ 0x8320000 ^ (((v39 ^ 0x78120583) << 8) ^ 0x28D0000) & (v39 ^ 0x78120583)))) ^ (8 * v31);
  LODWORD(v31) = (((v31 ^ 0x4DC8D58D) + 1290342365) ^ ((v31 ^ 0x85BF8BBB) - 2069999125) ^ ((v31 ^ 0xEB8FDD96) - 357693496))
               + 1359300728;
  v40 = (v31 ^ 0xD87FB057) & (2 * (v31 & 0xDA7FA116)) ^ v31 & 0xDA7FA116;
  LODWORD(v25) = ((2 * (v31 ^ 0xE870B073)) ^ 0x641E22CA) & (v31 ^ 0xE870B073) ^ (2 * (v31 ^ 0xE870B073)) & 0x320F1164;
  v41 = v25 ^ 0x12011125;
  LODWORD(v25) = (v25 ^ 0x200E1144) & (4 * v40) ^ v40;
  v42 = ((4 * v41) ^ 0xC83C4594) & v41 ^ (4 * v41) & 0x320F1164;
  LODWORD(v25) = (v42 ^ 0xC0101) & (16 * v25) ^ v25;
  v43 = ((16 * (v42 ^ 0x32031061)) ^ 0x20F11650) & (v42 ^ 0x32031061) ^ (16 * (v42 ^ 0x32031061)) & 0x320F1160;
  LODWORD(v25) = v25 ^ 0x320F1165 ^ (v43 ^ 0x20011025) & ((_DWORD)v25 << 8);
  v44 = v34;
  v45 = (char *)*(&off_1015B46D0 + (v5 ^ 0x34DF)) - 12;
  LODWORD(v25) = ((_DWORD)v25 << 16) & 0x320F0000 ^ v25 ^ (((_DWORD)v25 << 16) ^ 0x11650000) & (((v43 ^ 0x120E0125) << 8) & 0x320F0000 ^ 0x300E0000 ^ (((v43 ^ 0x120E0125) << 8) ^ 0xF110000) & (v43 ^ 0x120E0125));
  v46 = ((unsigned __int16)(((2 * v30) & 0xC21A) - v30 + 7922) >> 8);
  v47 = ((v46 ^ 0xCE) - ((2 * (v46 ^ 0xCE)) & 0xDE) - 457001361) ^ 0xF494F6ED;
  LOBYTE(v41) = v14 ^ (2
                     * ((v14 ^ 0x16) & (2
                                      * ((v14 ^ 0x16) & (2
                                                       * ((v14 ^ 0x16) & (2
                                                                        * ((v14 ^ 0x16) & (2
                                                                                         * ((v14 ^ 0x16) & (2 * ((v14 ^ 0x16) & 0x12 ^ v16)) ^ v16)) ^ v16)) ^ v16)) ^ v16)) ^ v16));
  v48 = (char *)*(&off_1015B46D0 + (v5 ^ 0x3C3B)) - 12;
  v49 = *(_DWORD *)&v45[4 * v44] ^ v17 ^ *(_DWORD *)&v48[4
                                                                     * (((v6 & 0xE3 ^ 0x462)
                                                                       + (v6 & 0x1C ^ 9)
                                                                       - 1) ^ 0x4C9)] ^ v46;
  v50 = (char *)*(&off_1015B46D0 + (v5 ^ 0x3F18)) - 12;
  LODWORD(v17) = *(_DWORD *)&v50[4 * ((((2 * v47) & 0x20A0839C) - v47 - 911305167) ^ 0xD9F8D69D)];
  v51 = *(_DWORD *)(v35 + 4 * (v41 ^ 0xEFu));
  LODWORD(v17) = v49 ^ v17 ^ v31 ^ (2 * v25);
  LODWORD(v25) = (((v51 >> 3) & 0x3FFFFFF ^ 0x22A1B9)
                + ((v51 >> 3) & 0x31E9906 ^ 0x4F1C1806)
                - (((v51 >> 3) & 0x3FFFFFF ^ 0x22A1B9) & 0x31E9906)) ^ 0x5B3C9906;
  v52 = (~v51 << 29) ^ __ROR4__(v51 ^ 0xE49674D, 6) ^ 0x9CC508A5 ^ ((((2 * v25) & 0x27FE21FA) - v25 + 1812000514) ^ 0x63B0D2EB) & ((~*(_BYTE *)(v35 + 4 * (v41 ^ 0xEFu)) << 29) | 0x1FFFFFFF);
  LODWORD(v25) = ((v6 >> 8) & 0xC ^ 0xA1A7AC09) + ((v6 >> 8) & 0xF3) - 1;
  v53 = *(_DWORD *)(v35
                  + 4
                  * ((v22 ^ (2
                                            * ((v22 ^ 0x16) & (2
                                                             * ((v22 ^ 0x16) & (2
                                                                              * ((v22 ^ 0x16) & (2
                                                                                               * ((v22 ^ 0x16) & (2 * ((v22 ^ 0x16) & (2 * ((v22 ^ 0x16) & 0x12 ^ v21)) ^ v21)) ^ v21)) ^ v21)) ^ v21)) ^ v21))) ^ 0x61u));
  LODWORD(v13) = *(_DWORD *)&v50[4
                               * (((v25 & 0xA2003C ^ 0x2405030)
                                 + (v25 ^ 0xDDA7294F)
                                 - ((v25 ^ 0xDDA7294F) & 0x2800053C)) ^ 0x56E2D0DA)] ^ *(_DWORD *)&v45[4 * (v28 ^ 1)] ^ *(_DWORD *)&v48[4 * (v13 ^ (v13 >> 2) ^ (v13 >> 1) ^ 0x45)] ^ __ROR4__(v52, 26) ^ (((2 * (BYTE1(v6) ^ 0x4C12058)) & 0x8800134) - (BYTE1(v6) ^ 0x4C12058) + 1085629797);
  v54 = v35;
  v55 = *(_DWORD *)(v35
                  + 4
                  * ((v19 ^ (2
                                            * ((v19 ^ 0x14) & (2
                                                             * ((v19 ^ 0x14) & (2
                                                                              * ((v19 ^ 0x14) & (2
                                                                                               * ((v19 ^ 0x14) & (2 * ((v19 ^ 0x14) & (2 * v20) ^ v20)) ^ v20)) ^ v20)) ^ v20)) ^ v20))) ^ 0x23u));
  v56 = v53 ^ ((BYTE1(v7) ^ 0x1C131622)
             + ((v7 >> 8) & 0x19 ^ 0xA2ACE119)
             - ((BYTE1(v7) ^ 0x1C131622) & 0x18110219)) ^ (8 * v53) ^ *(_DWORD *)&v50[4
                                                                                    * ((1757542181
                                                                                      - (BYTE1(v7) ^ 0xCC | 0x68C1F725)
                                                                                      + (BYTE1(v7) ^ 0xCC | 0x973E08DA)) ^ 0x973E0898)] ^ *(_DWORD *)&v48[4 * (LODWORD(STACK[0x6A90]) ^ (LODWORD(STACK[0x6A90]) >> 2) ^ (LODWORD(STACK[0x6A90]) >> 1) ^ 0xAD)] ^ *(_DWORD *)&v45[4 * (BYTE2(v6) ^ 0xC6)];
  v57 = *(_DWORD *)&v45[4 * ((v18 ^ v15 ^ (2 * LOBYTE(STACK[0x6AB0]))) ^ 0xA)] ^ LODWORD(STACK[0x6AA0]) ^ v55 ^ (8 * v55) ^ *(_DWORD *)&v50[4 * (LODWORD(STACK[0x6AA0]) ^ 0x8A)] ^ *(_DWORD *)&v48[4 * (LODWORD(STACK[0x6A80]) ^ (LODWORD(STACK[0x6A80]) >> 2) ^ ((LODWORD(STACK[0x6A80]) >> 1) | 0x80) ^ 0xC5)];
  LODWORD(STACK[0x6AB0]) = v17 >> 24;
  v58 = *(_DWORD *)(v35 + 4 * ((v17 >> 24) ^ 5));
  LODWORD(v21) = (v57 ^ 0x87) - ((2 * (v57 ^ 0x87)) & 0x34) + 2002069274;
  LODWORD(v7) = (((2 * (BYTE1(v56) ^ 0xC5)) | 0xC1877E4C) - (BYTE1(v56) ^ 0xC5) + 524042458) ^ 0x62C3B7A7;
  LODWORD(v28) = *(_DWORD *)(v35 + 4 * ((v13 >> 24) ^ 0xE9));
  v59 = (((2 * v28) & 0x800841D4 ^ 0x52492385) + ((2 * v28) & 0x8108002 ^ 0x8008003) - 2) & 0x8858C7FE;
  v60 = v58 ^ (8 * v58) ^ *(_DWORD *)&v45[4
                                        * ((((2 * (BYTE2(v13) ^ 0x28104102)) & 0x200312)
                                          - (BYTE2(v13) ^ 0x28104102)
                                          - 35044746) ^ 0xD5F903BB)] ^ *(_DWORD *)&v48[4
                                                                                     * (((v21 & 0x51011BD3 ^ 0x808053C3)
                                                                                       + (v21 ^ 0x770D2818)
                                                                                       - ((v21 ^ 0x770D2818) & 0x181BD3)) ^ 0xD1C154B7)] ^ *(_DWORD *)&v50[4 * (((_DWORD)v7 - ((2 * (_DWORD)v7) & 0x6BA6BAD4) - 1244439190) ^ 0x37D35592)] ^ ((BYTE1(v56) ^ 0xDE) + ((v56 >> 8) & 0x6F ^ 0xA5164521) - ((BYTE1(v56) ^ 0xDE) & 0x6F));
  LODWORD(v6) = (((v28 ^ 0x2F38894B) - 792234315) ^ ((v28 ^ 0x9DFAD7D) - 165653885) ^ ((v28 ^ 0x4D069522) - 1292277026))
              - (((v59 ^ 0x2A1E2AC6) - 1479698245) ^ ((v59 ^ 0xB64BD7DF) + 999843236) ^ ((v59 ^ 0x141D3E9F) - 1714516764))
              - 468193562;
  v61 = (v6 ^ 0xD8614010) & (2 * (v6 & 0xD1719514)) ^ v6 & 0xD1719514;
  LODWORD(v7) = ((2 * (v6 ^ 0x78436838)) ^ 0x5265FA58) & (v6 ^ 0x78436838) ^ (2 * (v6 ^ 0x78436838)) & 0xA932FD2C;
  LODWORD(v21) = v7 ^ 0xA9120524;
  LODWORD(v7) = (v7 ^ 0x2010F904) & (4 * v61) ^ v61;
  v62 = ((4 * v21) ^ 0xA4CBF4B0) & v21 ^ (4 * v21) & 0xA932FD2C;
  LODWORD(v7) = (v62 ^ 0xA002F42C) & (16 * v7) ^ v7;
  v63 = ((16 * (v62 ^ 0x930090C)) ^ 0x932FD2C0) & (v62 ^ 0x930090C) ^ (16 * (v62 ^ 0x930090C)) & 0xA932FD20;
  LODWORD(v7) = v7 ^ 0xA932FD2C ^ (v63 ^ 0x8122D000) & ((_DWORD)v7 << 8);
  LODWORD(v6) = v6 ^ (2
                                  * (((_DWORD)v7 << 16) & 0x29320000 ^ v7 ^ (((_DWORD)v7 << 16) ^ 0x7D2C0000) & (((v63 ^ 0x28102D2C) << 8) & 0x29320000 ^ 0x9020000 ^ (((v63 ^ 0x28102D2C) << 8) ^ 0x32FD0000) & (v63 ^ 0x28102D2C)))) ^ 0x2A36D6C1;
  v64 = ((HIWORD(v56) & 0x53) + (HIWORD(v56) & 0xAC ^ 0x16E94685) - 1) ^ 0x17E510BA;
  LODWORD(v7) = *(_DWORD *)&v45[4 * ((-254270758 - (v64 | 0xF0D822DA) + (v64 | 0xF27DD25)) ^ 0xE2B8BE5)];
  v65 = (v17 & 0x44 ^ 0x577A2B41) + (v17 & 0xBB) - 1;
  v66 = *(_DWORD *)&v48[4
                      * (((v65 & 0x5072297E ^ 0x8005028) + (v65 ^ 0x577F29D7) - ((v65 ^ 0x577F29D7) & 0x7E)) ^ 0x58777BDD)];
  v67 = ((BYTE1(v57) ^ 0xCF) - ((2 * (BYTE1(v57) ^ 0xCF)) & 0xB2) + 2015235417) ^ 0x201F4551;
  LODWORD(v28) = ((2 * v67) & 0x20021DDE) - v67;
  v68 = *(_DWORD *)(v35 + 4 * (HIBYTE(v56) ^ 0xC));
  v69 = (BYTE1(v57) ^ 0xB4 | 0xAB8690E8) - (BYTE1(v57) ^ 0xB4 | 0x54796F17) + 1417244439;
  v70 = ((HIWORD(v57) & 0xC9 ^ 0xAF941D40) + (HIWORD(v57) & 0x36 ^ 0x21) - 1) ^ 0x14FEDC03;
  v71 = v66 ^ v7 ^ *(_DWORD *)&v50[4
                                 * (((v69 & 0xA3808038 ^ 0x41394010)
                                   + (v69 ^ 0xB286B26A)
                                   - ((v69 ^ 0xB286B26A) & 0xF3B9E038)) ^ 0xEAB9C285)] ^ (v28 - 396467952) ^ v6 ^ (8 * (_DWORD)v6);
  LODWORD(v7) = ((2 * (BYTE1(v17) ^ 0x50)) | 0x9DEAB556) - (BYTE1(v17) ^ 0x50) - 1324702379;
  LOWORD(v66) = (v13 ^ 0x52)
              + (v13 & 0x1E ^ 0xDA0C)
              - ((v13 ^ 0x52) & 0x1E);
  v72 = *(_DWORD *)(v35 + 4 * (HIBYTE(v57) ^ 0x7E));
  LODWORD(v28) = ((2 * (BYTE1(v13) ^ 0x9E)) | 0xB6CDD84C) - (BYTE1(v13) ^ 0x9E) - 1533471782;
  v73 = v68 ^ (8 * v68) ^ *(_DWORD *)&v45[4 * ((-1376604484 - (v70 | 0xADF2AEBC) + (v70 | 0x520D5143)) ^ 0xE96790B7)] ^ *(_DWORD *)&v48[4 * (((v66 & 0x16F ^ 0x90B42567) + (v66 & 0x290 ^ 0x4211) - 1) ^ 0x90B465D8)] ^ ((v7 & 0xD2DF5A8D ^ 0x924B0004) + (v7 ^ 0x4494DA89) - ((v7 ^ 0x4494DA89) & 0xD2DF5A8D));
  v74 = ((v13 >> 8) & 3 ^ 0xAE6CB903) - ((v13 >> 8) & 3) + (BYTE1(v13) ^ 0xF4);
  v75 = v73 ^ *(_DWORD *)&v50[4 * (((BYTE1(v17) ^ 0x76) - ((2 * (BYTE1(v17) ^ 0x76)) & 0x190) + 1224) ^ 0x4B8)];
  v76 = *(_DWORD *)&v50[4 * (((v74 & 0x238 ^ 0x2228C229) + (v74 & 0x1C7) - 1) ^ 0x2228C34B)] ^ v72 ^ (8 * v72) ^ *(_DWORD *)&v48[4 * ((-403002671 - (v56 ^ 0xC024544C) + ((2 * (v56 ^ 0xC024544C)) & 0x888B0) + 2006) ^ 0x27DEE6D6)] ^ ((v28 & 0x6FFA9004 ^ 0x4580000) + (v28 ^ 0x7BA2BCD6) - ((v28 ^ 0x7BA2BCD6) & 0x6FFA9004)) ^ *(_DWORD *)&v45[4 * (((BYTE2(v17) ^ 0x8816D) + ((v17 >> 16) & 0x1C ^ 0xB2914E10) - ((BYTE2(v17) ^ 0x8816D) & 0x801C)) ^ 0xB2994F7A)];
  v77 = v71 ^ 0x6C784C96;
  LODWORD(v21) = *(_DWORD *)(v35
                           + 4
                           * ((35 * (((3926827243u * (unint64_t)(v60 ^ 0x22000000)) >> 32) >> 29)
                             + ((HIBYTE(v60) ^ 0x22)
                                               - 35 * ((235 * (HIBYTE(v60) ^ 0x22)) >> 13))) ^ 0xEE));
  LODWORD(STACK[0x6AA0]) = 1809953048;
  LODWORD(v31) = *(_DWORD *)&v45[4 * (BYTE2(v71) ^ 0xD0)];
  LODWORD(v21) = (((8 * v21) ^ 0x5F0D88A0) + 1809953044 - 2 * (((8 * v21) ^ 0x5F0D88A0) & 0x6BE1B118 ^ (8 * v21) & 8)) ^ v21;
  LODWORD(v21) = (v31 ^ 0x1AE6CB85 ^ -(v31 ^ 0x1AE6CB85) ^ ((v31 ^ 0xCF2810B1 ^ v21) + (v21 ^ 0x2A3124CB) + 1))
               + (v21 ^ 0x2A3124CB);
  v78 = __ROR4__(*(_DWORD *)&v50[4 * (((unsigned __int16)(v75 ^ 0x8FDE) >> 8) ^ 0xFC)], 17);
  LODWORD(v79) = (((v75 ^ 0x657A8FDE) << 7) & 0x7F8000 ^ 0x757DC51F)
               + (v78 ^ 0x13CB8F57)
               - 2 * ((((v75 ^ 0x657A8FDE) << 7) & 0x7F8000 ^ 0x757DC51F) & (v78 ^ 0x13CB8F57));
  HIDWORD(v79) = v79;
  v80 = *(_DWORD *)(v35 + 4 * ((v71 ^ 0x6C784C96u) >> 24));
  v81 = ((v79 >> 15) - 514750478 - ((2 * (v79 >> 15)) & 0xC2A30FE4)) ^ (v21 - 514750478 - ((2 * v21) & 0xC2A30FE4));
  v82 = (v81 + 1752628566 - ((2 * v81) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v76 ^ 0x16)];
  v83 = 8 * v80;
  v84 = (8 * v80) & 0x10;
  LODWORD(STACK[0x6A90]) = 804114943;
  v85 = v80 ^ 0x2FEDD1FF;
  if ((v84 & ~v80) != 0)
    v86 = -v84;
  else
    v86 = (8 * v80) & 0x10;
  v87 = v83 & 0xFFFFFFEF ^ *(_DWORD *)&v45[4 * (BYTE2(v75) ^ 0xD2)] ^ *(_DWORD *)&v50[4
                                                                                    * (((unsigned __int16)(v76 ^ 0x4C35) >> 8) ^ 0xFC)] ^ (((unsigned __int16)(v76 ^ 0x4C35) >> 8) - 321113947 - (((v76 ^ 0x372A4C35u) >> 7) & 0x14A)) ^ 0x2BD60705 ^ (v86 + v85);
  v88 = *(_DWORD *)(v35 + 4 * ((v75 ^ 0x657A8FDEu) >> 24));
  v89 = (v87 + 1752628566 - ((2 * v87) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4
                                                                      * (((v60 & 0x4F ^ 0x12386505)
                                                                        + (v60 & 0xB0 ^ 0x80020221)
                                                                        - 1) ^ 0x923A67CF)];
  v90 = ((v71 ^ 0x27) - ((2 * (v71 ^ 0x27)) & 0xF4) - 47766918) ^ 0x7C65223B;
  v91 = *(_DWORD *)(v35 + 4 * ((v76 ^ 0x372A4C35u) >> 24));
  v92 = *(_DWORD *)&v45[4 * (BYTE2(v76) ^ 0x82)] ^ ((BYTE1(v60) ^ 0xD2)
                                                  - 321113947
                                                  - ((2 * ((v60 >> 8) ^ 0x2215D2)) & 0x14A)) ^ *(_DWORD *)&v50[4 * (BYTE1(v60) ^ 0x2E)] ^ (((8 * v88) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v88) ^ 0x5F0D88A0) & 0x1FAD4E78 ^ (8 * v88) & 0x10));
  v93 = (v92 + 1752628566 - ((2 * v92) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4
                                                                      * (v71 ^ 0x96 ^ -(v71 ^ 0x96) ^ (((v90 - ((2 * v90) & 0x4014C) + 1913813158) ^ 0xCAF878A) + 36))
                                                                      + 140];
  v94 = (v93 + 1809953044 - ((2 * v93) & 0xD7C36228)) ^ v88;
  v95 = *(_DWORD *)&v50[4 * (BYTE1(v77) ^ 0xFC)] ^ *(_DWORD *)&v45[4 * (BYTE2(v60) ^ 0xBD)] ^ (((8 * v91) ^ 0x5F0D88A0)
                                                                                             + 531451498
                                                                                             - ((2
                                                                                               * ((8 * v91) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ (BYTE1(v77) - 321113947 - ((v77 >> 7) & 0x14A));
  v96 = ((2 * (v75 ^ 0x91)) | 0xF156F334) - (v75 ^ 0x91) + 122979942;
  v97 = (v95 + 1752628566 - ((2 * v95) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4
                                                                      * (((v96 & 0xEFCF6F2A ^ 0xAB0B4902)
                                                                        + (v96 ^ 0x44D426E9)
                                                                        - ((v96 ^ 0x44D426E9) & 0xEFCF6F2A)) ^ 0x53B03035)];
  v98 = (v97 + 1809953044 - ((2 * v97) & 0xD7C36228)) ^ v91;
  v99 = *(_DWORD *)(v35 + 4 * (HIBYTE(v82) ^ 0x8A));
  LOBYTE(v96) = v94 ^ 0xB9;
  v100 = (((8 * v99) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v99) ^ 0x5F0D88A0) & 0x1FAD4E78 ^ (8 * v99) & 0x10)) ^ *(_DWORD *)&v45[4 * (BYTE2(v89) ^ 0xBF)];
  v101 = *(_DWORD *)&v50[4 * (((unsigned __int16)(v94 ^ 0x32B9) >> 8) ^ 0xFC)] ^ v99 ^ (((unsigned __int16)(v94 ^ 0x32B9) >> 8) - 321113947 - (((v94 ^ 0x224632B9) >> 7) & 0x14A)) ^ (v100 + 1809953044 - ((2 * v100) & 0xD7C36228));
  v102 = (v101 + 1752628566 - ((2 * v101) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v98 ^ 0xD6)];
  v103 = *(_DWORD *)(v35 + 4 * (HIBYTE(v89) ^ 0xE5));
  LODWORD(STACK[0x6A80]) = 531451512;
  v104 = *(_DWORD *)&v50[4 * (((unsigned __int16)(v98 ^ 0x10F5) >> 8) ^ 0xFC)] ^ (((8 * v103) ^ 0x5F0D88A0)
                                                                                                 + 531451498
                                                                                                 - 2
                                                                                                 * (((8 * v103) ^ 0x5F0D88A0) & 0x1FAD4E78 ^ (8 * v103) & 0x10)) ^ (((unsigned __int16)(v98 ^ 0x10F5) >> 8) - 321113947 - ((v98 >> 7) & 0x14A)) ^ *(_DWORD *)&v45[4 * (BYTE2(v94) ^ 0xEE)];
  v105 = *(_DWORD *)(v35 + 4 * (HIBYTE(v94) ^ 0xCC));
  v106 = (v104 + 1752628566 - ((2 * v104) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v82 ^ 0x5B)];
  v107 = (v106 + 1809953044 - ((2 * v106) & 0xD7C36228)) ^ v103;
  HIDWORD(v108) = v89 ^ 0x3D;
  LODWORD(v108) = (v89 ^ 0x3D) & 0xF8;
  v109 = *(_DWORD *)&v50[4 * (BYTE1(v82) ^ 0x89)] ^ *(_DWORD *)&v45[4 * ((v98 ^ 0xE11510F5) >> 16)] ^ (((8 * v105) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v105) ^ 0x5F0D88A0) & 0x1FAD4E78 ^ (8 * v105) & 0x10)) ^ ((BYTE1(v82) ^ 0x75) - 321113947 - ((2 * ((v82 >> 8) ^ 0x646775)) & 0x14A));
  HIDWORD(v108) = (v108 >> 3) ^ 0xC00000F2;
  LODWORD(v108) = HIDWORD(v108);
  v110 = *(_DWORD *)(v35 + 4 * (HIBYTE(v98) ^ 0xF));
  v111 = (v109 + 1752628566 - ((2 * v109) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4
                                                                         * (((v108 >> 9) >> 20) ^ 0x7B5)];
  v112 = (v111 + 1809953044 - ((2 * v111) & 0xD7C36228)) ^ v105;
  v113 = (((8 * v110) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v110) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ *(_DWORD *)&v45[4 * (BYTE2(v82) ^ 0xCF)];
  v114 = BYTE1(v89);
  v115 = v114 ^ 0x68;
  v116 = (v107 ^ 0x7CB8D64A) - 58574942;
  v117 = v107 ^ 0x7FC51E14 ^ -(v107 ^ 0x7FC51E14);
  v118 = *(_DWORD *)&v50[4 * (v115 ^ -v115 ^ ((v114 ^ 0xFFFFFF6B) + 253)) + 1008];
  v119 = (v117 ^ v116) - 58574943;
  v120 = (v113 - 321113947 - ((2 * v113) & 0xD9B8614A)) ^ v118;
  LOBYTE(v116) = v112 ^ 0x79;
  v121 = v115 ^ 0x40BC0BDA ^ v110 ^ (v120 + 1809953044 - ((2 * v120) & 0xD7C36228));
  v122 = (v121 ^ -v121 ^ ((*(_DWORD *)&v48[4 * v96] ^ 0x6876FD56)
                        - ((v121 + 1752628566 - ((2 * v121) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * v96])))
       + (*(_DWORD *)&v48[4 * v96] ^ 0x6876FD56);
  v123 = *(_DWORD *)(v35 + 4 * (HIBYTE(v102) ^ 0xB3));
  v124 = ((unsigned __int16)(v112 ^ 0xF79) >> 8);
  v125 = *(_DWORD *)&v50[4 * (v124 ^ 0xFC)];
  v126 = (((8 * v123) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v123) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ *(_DWORD *)&v45[4 * (BYTE2(v119) ^ 0xA8)] ^ ((v125 ^ 0xECDC30A5) + (v124 ^ 0x8A3EEAFB) + ((2 * ((v124 ^ 0xA3EEAFB) & (v125 ^ 0x24604B) ^ ((v112 ^ 0xB5050F79) >> 8) & 0xEE)) ^ 0xEF8F7E2B) + 1);
  v127 = (v126 + 1752628566 - ((2 * v126) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v122 ^ 0x23)];
  v128 = *(_DWORD *)(v35 + 4 * (HIBYTE(v119) ^ 0xEE));
  v129 = (v127 + 1809953044 - ((2 * v127) & 0xD7C36228)) ^ v123;
  v130 = *(_DWORD *)(v35 + 4 * ((v112 ^ 0xB5050F79) >> 24));
  v131 = *(_DWORD *)&v45[4 * (BYTE2(v112) ^ 0xAD)] ^ (((8 * v128) ^ 0x5F0D88A0)
                                                    + 531451498
                                                    - ((2 * ((8 * v128) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ *(_DWORD *)&v50[4 * (BYTE1(v122) ^ 0xFC)] ^ (BYTE1(v122) - 321113947 - ((v122 >> 7) & 0x14A));
  v132 = (v131 + 1752628566 - ((2 * v131) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v102 ^ 0xFA)];
  v133 = (v132 + 1809953044 - ((2 * v132) & 0xD7C36228)) ^ v128;
  v134 = *(_DWORD *)(v35 + 4 * (HIBYTE(v122) ^ 0xEE));
  v135 = *(_DWORD *)&v50[4 * (BYTE1(v102) ^ 8)] ^ ((BYTE1(v102) ^ 0xF4)
                                                 - 321113947
                                                 - 2 * (((v102 >> 8) ^ 0x5D2EF4) & 0xAD ^ (v102 >> 8) & 8)) ^ *(_DWORD *)&v45[4 * (BYTE2(v122) ^ 0xA8)] ^ (((8 * v130) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v130) ^ 0x5F0D88A0)) & 0x3F5A9CD0));
  v136 = (v135 + 1752628566 - ((2 * v135) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v119 ^ 0x23)];
  v137 = (((8 * v134) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v134) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ *(_DWORD *)&v45[4 * (BYTE2(v102) ^ 0x86)];
  v138 = (v137 - 321113947 - ((2 * v137) & 0xD9B8614A)) ^ *(_DWORD *)&v50[4 * (BYTE1(v119) ^ 0xFC)] ^ BYTE1(v119);
  v139 = (v130 ^ 0x7FC51E14 ^ (v136 + 1809953044 - ((2 * v136) & 0xD7C36228)))
       - ((2 * (v130 ^ 0x7FC51E14 ^ (v136 + 1809953044 - ((2 * v136) & 0xD7C36228)))) & 0x50619FE0)
       + 674287600;
  v140 = (v138 + 1752628566 - ((2 * v138) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * v116];
  LODWORD(v108) = __ROR4__(v134 ^ 0x7FC51E14 ^ (v140 + 1809953044 - ((2 * v140) & 0xD7C36228)), 20) ^ 0x38B38878;
  HIDWORD(v108) = v108;
  v141 = v108 >> 12;
  v142 = *(_DWORD *)(v35 + 4 * ((v129 ^ 0xEB891DD3) >> 24));
  v143 = (((8 * v142) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v142) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ *(_DWORD *)&v45[4 * (BYTE2(v133) ^ 0x5C)] ^ ((unsigned __int16)((v130 ^ 0x1E14 ^ (v136 - 20204 - ((2 * v136) & 0x6228))) - ((2 * (v130 ^ 0x1E14 ^ (v136 - 20204 - ((2 * v136) & 0x6228)))) & 0x9FE0) - 12304) >> 8);
  v144 = v143 - 321113947 - ((2 * v143) & 0xD9B8614A);
  v145 = *(_DWORD *)&v48[4 * ((v108 >> 12) ^ 0x44)];
  v146 = ((2 * (v145 & 0x4D55F5D5 ^ 0x25269D0A)) | 0x31E41212) - (v145 & 0x4D55F5D5 ^ 0x25269D0A) + 1728968439;
  v147 = ((2 * (v145 & 0xB2AA0A2A ^ 0xA20A0008)) | 0x2018579A) - (v145 & 0xB2AA0A2A ^ 0xA20A0008) + 1878250547;
  v148 = (v147 & 0xC975FF20 ^ 0x4871F421) + (v147 & 0x368A00DE ^ 0x1000009F);
  v149 = v139 ^ 0x23;
  v158 = *(_DWORD *)&v50[4 * (BYTE1(v139) ^ 0xFC)] ^ 0xB61925AF ^ ((v146 & 0x89CD9382 ^ 0x9CC9381)
                                                                 + (v146 & 0x76326C7D)
                                                                 - 1);
  v150 = *(_DWORD *)(v35 + 4 * ((v133 ^ 0x18F4CACB) >> 24)) ^ LODWORD(STACK[0x6A90]);
  LODWORD(v108) = __ROR4__(v150, 16) ^ 0xDAE880F3;
  HIDWORD(v108) = v108;
  v151 = ((v158 ^ (v148 - 2) ^ v144) + 1809953044 - ((2 * (v158 ^ (v148 - 2) ^ v144)) & 0xD7C36228)) ^ v142;
  v152 = (v129 ^ 0xEB891DD3) >> 8;
  v153 = *(_DWORD *)&v50[4 * (((unsigned __int16)(v141 ^ 0x5B67) >> 8) ^ 0xFC)] ^ *(_DWORD *)&v45[4 * ((v139 ^ 0xA80023) >> 16)] ^ (8 * (v108 >> 16) + 531451498 - ((16 * (v108 >> 16)) & 0x3F5A9CD0)) ^ (((unsigned __int16)(v141 ^ 0x5B67) >> 8) - 321113947 - (((v141 ^ 0x150B5B67) >> 7) & 0x14A));
  v154 = (v141 ^ 0x150B5B67) >> 16;
  v155 = *(_DWORD *)&v48[4 * (v129 ^ 0xD3)] ^ v150 ^ (v153 + 1752628566 - ((2 * v153) & 0xD0EDFAAC));
  v156 = HIBYTE(v139) ^ 0xEE;
  v157 = ((v141 ^ 0x150B5B67) >> 16);
  LOBYTE(v158) = v154 + 43;
  if (v157 < 0xD5)
    v158 = (v141 ^ 0x150B5B67) >> 16;
  v159 = *(_DWORD *)(v35 + 4 * v156);
  if (v157 >= 0xD5)
    v157 -= 213;
  if (v157)
    v160 = 0;
  else
    v160 = v158;
  v161 = STACK[0x6A80];
  v162 = (((8 * v159) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v159) ^ 0x5F0D88A0) & STACK[0x6A80] ^ (8 * v159) & 0x10)) ^ *(_DWORD *)&v45[4 * ((v154 - v160) ^ 0xA8)];
  v163 = *(_DWORD *)(v35 + 4 * (HIBYTE(v141) ^ 0xFB));
  v164 = (v162 - 321113947 - ((2 * v162) & 0xD9B8614A)) ^ *(_DWORD *)&v50[4
                                                                        * (((unsigned __int16)(v129 ^ 0x1DD3) >> 8) ^ 0xFC)];
  v165 = *(_DWORD *)&v45[4 * (BYTE2(v129) ^ 0x21)];
  v166 = (v164 + 1752628566 - ((2 * v164) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v133 ^ 0xE8)];
  v167 = (v166 + 1809953044 - ((2 * v166) & 0xD7C36228)) ^ v159;
  LODWORD(STACK[0x6A70]) = v152 ^ v167;
  v168 = BYTE1(v133) ^ 0xCA;
  v169 = v155 ^ 0x2A35380F;
  v170 = (((8 * v163) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v163) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ v165 ^ v168;
  v171 = (v170 - 321113947 - ((2 * v170) & 0xD9B8614A)) ^ *(_DWORD *)&v50[4 * (v168 ^ 0xFC)];
  v172 = (v171 + 1752628566 - ((2 * v171) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * v149];
  v173 = (v172 + 1809953044 - ((2 * v172) & 0xD7C36228)) ^ v163;
  v174 = *(_DWORD *)(v35 + 4 * (HIBYTE(v151) ^ 0xAB));
  v175 = (((8 * v174) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v174) ^ 0x5F0D88A0) & v161 ^ (8 * v174) & 0x10)) ^ *(_DWORD *)&v45[4 * ((v155 ^ 0x2A35380F) >> 16)];
  v176 = *(_DWORD *)(v35 + 4 * (HIBYTE(v155) ^ 0xC4));
  v177 = *(_DWORD *)&v50[4 * (BYTE1(v167) ^ 0xB1)] ^ v174 ^ ((BYTE1(v167) ^ 0x4D)
                                                           - 321113947
                                                           - ((2 * ((v167 >> 8) ^ 0xE49D4D)) & 0x14A)) ^ (v175 + 1809953044 - ((2 * v175) & 0xD7C36228));
  v178 = (v177 + 1752628566 - ((2 * v177) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v173 ^ 0x70)];
  LODWORD(STACK[0x6A90]) = v178;
  v179 = *(_DWORD *)&v45[4 * (BYTE2(v167) ^ 0x35)];
  v180 = *(_DWORD *)(v54 + 4 * (HIBYTE(v167) ^ 0xA));
  v181 = (((8 * v176) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v176) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ ((v173 >> 8) ^ 0xF3D497) & 0xFB ^ (((v173 >> 8) ^ 0xF3D497) & 4 | 0x8A3EEAFB) ^ v179;
  v182 = (v181 - 321113947 - ((2 * v181) & 0xD9B8614A)) ^ *(_DWORD *)&v50[4 * (BYTE1(v173) ^ 0x6B)];
  v183 = *(_DWORD *)&v48[4 * (v151 ^ 0x61)] ^ 0xB2F7A89D;
  v184 = ((v176 ^ 0x2F7AA124 ^ (v182 + 1809953044 - ((2 * v182) & 0xD7C36228))) + (v183 & 0x80000000)) ^ v183 & 0x7FFFFFFF;
  v185 = *(_DWORD *)&v50[4 * (BYTE1(v151) ^ 0xAA)] ^ *(_DWORD *)&v45[4 * (BYTE2(v173) ^ 0x7C)] ^ ((BYTE1(v151) ^ 0x56)
                                                                                                - 321113947
                                                                                                - ((2
                                                                                                  * ((v151 >> 8) ^ 0x459C56)) & 0x14A)) ^ (((8 * v180) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v180) ^ 0x5F0D88A0) & v161 ^ (8 * v180) & 0x10));
  v186 = (v185 + 1752628566 - ((2 * v185) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v169 ^ 0x23)];
  v187 = *(_DWORD *)(v54 + 4 * (HIBYTE(v173) ^ 0x1D));
  v188 = (((8 * v187) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v187) ^ 0x5F0D88A0) & v161 ^ (8 * v187) & 0x10)) ^ *(_DWORD *)&v45[4 * (BYTE2(v151) ^ 0x34)];
  v189 = BYTE1(v184) ^ 0x2B;
  v190 = (v184 ^ 0x63522B45) >> 24;
  v191 = *(_DWORD *)&v50[4 * (BYTE1(v169) ^ 0xFC)] ^ v187 ^ (BYTE1(v169) - 321113947 - ((v169 >> 7) & 0x14A)) ^ (v188 + 1809953044 - ((2 * v188) & 0xD7C36228));
  v192 = v184 ^ 0x45 | 0x9A;
  v193 = *(_DWORD *)&v48[4 * (LODWORD(STACK[0x6A70]) ^ 0x4E)] ^ 0x7FC51E14 ^ (v191
                                                                                             + 1752628566
                                                                                             - ((2 * v191) & 0xD0EDFAAC));
  v194 = v180 ^ 0x2A66C6A ^ (v186 + 1809953044 - ((2 * v186) & 0xD7C36228));
  if (LODWORD(STACK[0x6AB0]) == 5)
    v195 = v184 | 0x65;
  else
    v195 = ~((v184 | 0x65) ^ v192);
  LODWORD(v197) = __ROR4__(v193, 22) ^ 0x6D12717F;
  HIDWORD(v197) = v197;
  v196 = v197 >> 10;
  v198 = v195 & v192;
  v199 = *(_DWORD *)(v54
                   + 4
                   * ((((((v178 ^ 0x41FFA9FB) >> 24) ^ 0x8FE37F5D) + (((v178 ^ 0x41FFA9FB) >> 24) | 0x701C80A2) + 1) ^ 0xA2)
                    + (((v178 ^ 0x41FFA9FB) >> 24) & 0x5D ^ 0x4C)));
  v200 = *(_DWORD *)&v45[4 * (BYTE2(v184) ^ 0xFA)] ^ *(_DWORD *)&v50[4 * (BYTE1(v194) ^ 0xFC)] ^ (BYTE1(v194)
                                                                                                - 321113947
                                                                                                - ((v194 >> 7) & 0x14A)) ^ (((8 * v199) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v199) ^ 0x5F0D88A0) & v161 ^ (8 * v199) & 0x10));
  v201 = (v200 + 1752628566 - ((2 * v200) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * ((v197 >> 10) ^ 0xC4)];
  v202 = (v201 + 1809953044 - ((2 * v201) & 0xD7C36228)) ^ v199;
  v203 = *(_DWORD *)&v45[4 * BYTE2(v194)] & 0x10;
  v204 = (((8 * *(_DWORD *)(v54 + 4 * v190)) ^ 0x5F0D88A0)
        + 1809953044
        - 2
        * (((8 * *(_DWORD *)(v54 + 4 * v190)) ^ 0x5F0D88A0) & STACK[0x6AA0] ^ (8 * *(_DWORD *)(v54 + 4 * v190)) & 8)) ^ *(_DWORD *)(v54 + 4 * v190);
  v205 = v204 ^ 0x2A3124CB;
  v206 = ((*(_DWORD *)&v45[4 * BYTE2(v194)] & 0xFFFFFFEF ^ 0x7803A921)
        + (*(_DWORD *)&v45[4 * BYTE2(v194)] & 0x95C90BED ^ 0x85C802DC)
        - ((*(_DWORD *)&v45[4 * BYTE2(v194)] & 0xFFFFFFEF ^ 0x7803A921) & 0x95C90BED)) ^ 0xD2E5AAB5;
  v207 = -2021213091 - (v206 | 0x8786BC5D) + (v206 | 0x787943A2);
  if ((v204 & v203) != 0)
    v208 = -v203;
  else
    v208 = *(_DWORD *)&v45[4 * BYTE2(v194)] & 0x10;
  v209 = (v208 + v205) ^ v207;
  v210 = v209 & 0x2000000;
  v211 = *(_DWORD *)&v50[4 * (BYTE1(v196) ^ 0x49)] ^ ((BYTE1(v196) ^ 0xB5)
                                                    - 321113947
                                                    - ((2 * ((v196 >> 8) ^ 0xC5C0B5)) & 0x14A)) ^ 0x8A3EEAFB;
  v212 = v209 & 0xFDFFFFFF;
  if ((v211 & v210) != 0)
    v210 = -v210;
  v213 = ((v210 + v211) ^ v212 ^ 0x58FB05A1)
       + 1752628566
       - 2 * (((v210 + v211) ^ v212 ^ 0x58FB05A1) & 0x6876FD5E ^ ((v210 + v211) ^ v212) & 8);
  v214 = *(_DWORD *)(v54 + 4 * HIBYTE(v194));
  v215 = v213 ^ *(_DWORD *)&v48[4 * (v178 ^ 0xFB)];
  v216 = *(_DWORD *)&v45[4 * (BYTE2(v196) ^ 0x68)] ^ *(_DWORD *)&v50[4
                                                                   * (((unsigned __int16)(v178 ^ 0xA9FB) >> 8) ^ 0xFC)] ^ (((unsigned __int16)(v178 ^ 0xA9FB) >> 8) - 321113947 - (((v178 ^ 0x41FFA9FB) >> 7) & 0x14A)) ^ (((8 * v214) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v214) ^ 0x5F0D88A0) & v161 ^ (8 * v214) & 0x10));
  v217 = *(_DWORD *)(v54 + 4 * (HIBYTE(v196) ^ 0x2B));
  v218 = (v216 + 1752628566 - ((2 * v216) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v198 ^ 0x23)];
  v219 = (v218 + 1809953044 - ((2 * v218) & 0xD7C36228)) ^ v214;
  v220 = (((8 * v217) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v217) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ *(_DWORD *)&v45[4 * (BYTE2(LODWORD(STACK[0x6A90])) ^ 0x57)];
  v221 = v189 ^ *(_DWORD *)&v50[4 * (v189 ^ 0xFC)] ^ (v220 - 321113947 - ((2 * v220) & 0xD9B8614A));
  v222 = (v221 + 1752628566 - ((2 * v221) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * v194];
  v223 = (v222 + 1809953044 - ((2 * v222) & 0xD7C36228)) ^ v217;
  v224 = *(_DWORD *)(v54 + 4 * (HIBYTE(v202) ^ 0x75));
  v225 = ((unsigned __int16)(v219 ^ 0xFD5C) >> 8);
  LODWORD(STACK[0x6AB0]) = v225 - 321113947 - (((v219 ^ 0x8586FD5C) >> 7) & 0x14A);
  v226 = (((8 * v224) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v224) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ *(_DWORD *)&v45[4 * (((v215 ^ 0x33834B50) >> 16) ^ 0xA8)];
  LODWORD(STACK[0x6AA0]) = v226 + 1809953044 - ((2 * v226) & 0xD7C36228);
  v227 = *(_DWORD *)&v48[4 * (v223 ^ 0x65)];
  v228 = *(_DWORD *)(v54 + 4 * (HIBYTE(v215) ^ 0xDD));
  v229 = ((v219 ^ 0x8586FD5C) >> 16) & 0x7F;
  v230 = (((v219 ^ 0x8586FD5C) >> 16) ^ 0xFFFFFF7F) + v229;
  v231 = ((2 * v227) & 0xB502AB96 ^ 0x6FFF557B)
       + 1123570466
       + (((v227 ^ 0xC08125C) - 201855580) ^ ((v227 ^ 0x20F9D619) - 553244185) ^ ((v227 ^ 0x44873913) - 1149712659));
  v232 = v230 + 129;
  if (((v230 + 129) & 0xA8) != 0)
    v232 = -129 - v230;
  v233 = *(_DWORD *)(v54 + 4 * (HIBYTE(v219) ^ 0x6B));
  v234 = *(_DWORD *)&v50[4 * (((unsigned __int16)(v223 ^ 0x665) >> 8) ^ 0xFC)] ^ *(_DWORD *)&v45[4 * ((v232 + 168) ^ v229)] ^ (((unsigned __int16)(v223 ^ 0x665) >> 8) - 321113947 - (((v223 ^ 0x9A5C0665) >> 7) & 0x14A)) ^ (((8 * v228) ^ 0x5F0D88A0) + 531451498 - 2 * (((8 * v228) ^ 0x5F0D88A0) & v161 ^ (8 * v228) & 0x10));
  v235 = ((2 * v233) & 0x8818C1D6 ^ 0x7FFFBFFF)
       - 1343352320
       + (((v233 ^ 0xEEE6CCBD) + 286864195) ^ ((v233 ^ 0x8B472138) + 1958272712) ^ ((v233 ^ 0xE405C91) - 239099025));
  v236 = (v234 + 1752628566 - ((2 * v234) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v202 ^ 0x67)];
  v237 = v236 + 1809953044 - ((2 * v236) & 0xD7C36228);
  v238 = *(_DWORD *)&v45[4 * (BYTE2(v223) ^ 0xF4)] ^ ((BYTE1(v202) ^ 0xA4)
                                                    - 321113947
                                                    - 2 * (((v202 >> 8) ^ 0x9B1FA4) & 0xB5 ^ (v202 >> 8) & 0x10)) ^ *(_DWORD *)&v50[4 * (BYTE1(v202) ^ 0x58)];
  v239 = *(_DWORD *)(v54 + 4 * (HIBYTE(v223) ^ 0x74));
  v240 = v238 ^ (8 * v235 + 531451498 - ((16 * v235) & 0x3F5A9CD0));
  v241 = v235 ^ *(_DWORD *)&v48[4 * (v215 ^ 0x73)] ^ (v240 + 1752628566 - ((2 * v240) & 0xD0EDFAAC));
  v242 = v224 ^ *(_DWORD *)&v50[4 * (v225 ^ 0xFC)] ^ 0xA5444BDF ^ v231 ^ LODWORD(STACK[0x6AA0]);
  v243 = (v242 ^ LODWORD(STACK[0x6AB0])) - ((2 * (v242 ^ LODWORD(STACK[0x6AB0]))) & 0xBC6EE036) - 566792165;
  v244 = (((8 * v239) ^ 0x5F0D88A0) + 531451498 - ((2 * ((8 * v239) ^ 0x5F0D88A0)) & 0x3F5A9CD0)) ^ *(_DWORD *)&v45[4 * (BYTE2(v202) ^ 0xB7)] ^ BYTE1(v215) ^ 0x4B;
  v245 = (v244 + 1752628566 - ((2 * v244) & 0xD0EDFAAC)) ^ *(_DWORD *)&v48[4 * (v219 ^ 0x7F)];
  v246 = (v245 - 321113947 - ((2 * v245) & 0xD9B8614A)) ^ *(_DWORD *)&v50[4 * (BYTE1(v215) ^ 0xB7)];
  v247 = (v246 + 1809953044 - ((2 * v246) & 0xD7C36228)) ^ v239;
  v248 = v228 ^ 0xC86C491A ^ v237;
  v249 = v241 ^ 0xD3817180;
  v250 = (v241 ^ 0xD3817180) >> 24;
  v251 = v247 ^ 0xD7B6B200;
  v252 = (char *)*(&off_1015B46D0 + (v5 ^ 0x36EF)) - 4;
  v253 = (uint64_t)*(&off_1015B46D0 + (v5 ^ 0x3F1E));
  v254 = *(_DWORD *)(v253 + 4 * BYTE2(v248)) ^ 0x5162C3C6;
  v255 = (((v254 >> 4) & 0xBB64263) - 21845080 - ((2 * (v254 >> 4)) & 0x15640440)) ^ *(_DWORD *)&v252[4 * (HIBYTE(v243) ^ 0xE)];
  v256 = v255 - 1689666748 - ((2 * v255) & 0x36937688);
  v257 = (char *)*(&off_1015B46D0 + (v5 ^ 0x361F)) - 12;
  v258 = *(_DWORD *)&v257[4 * (v247 ^ 0x11)];
  HIDWORD(v259) = v258 ^ 0x151E;
  LODWORD(v259) = v258 ^ 0x184D0000;
  v260 = (char *)*(&off_1015B46D0 + v5 - 15730) - 8;
  v261 = (v259 >> 13) ^ (v247 << 19) ^ 0x1DA30899;
  v262 = 55 * ((78090315 * (unint64_t)HIBYTE(v248)) >> 32);
  if (1483715975 * HIBYTE(v248) >= 0x4A7904Bu)
    v262 = HIBYTE(v248);
  v263 = *(_DWORD *)(v253 + 4 * BYTE2(v249)) ^ 0x5162C3C6;
  v265 = __PAIR64__(v248, __ROR4__(v261, 19));
  v264 = *(_DWORD *)&v260[4 * (((unsigned __int16)(v241 ^ 0x7180) >> 8) ^ 0xB6)] ^ v254 ^ v256 ^ v265;
  v266 = v263 ^ (v263 >> 4) & 0xBB64263 ^ (v262 - 21845080 - ((2 * v262) & 0x150)) ^ *(_DWORD *)&v252[4 * (v262 ^ 0xE)];
  v267 = (v266 - 1689666748 - ((2 * v266) & 0x36937688)) ^ *(_DWORD *)&v260[4 * BYTE1(v251)];
  v268 = (v267 + 407704862 - ((2 * v267) & 0x309A2A3C)) ^ *(_DWORD *)&v257[4 * (v243 ^ 0x11)];
  LODWORD(v265) = v248 & 0xF0;
  v269 = *(_DWORD *)(v253 + 4 * BYTE2(v251)) ^ 0x5162C3C6;
  v270 = *(_DWORD *)&v252[4 * (v250 ^ 0xE)] ^ 0x65FB10EC ^ *(_DWORD *)&v260[4 * (BYTE1(v243) ^ 0xB6)] ^ (v269 >> 4) & 0xBB64263;
  v271 = v270 + 407704862 - ((2 * v270) & 0x309A2A3C);
  LODWORD(v265) = __ROR4__((v265 >> 4) ^ 0xC36416F5, 28);
  v272 = HIBYTE(v251);
  v273 = v264 ^ HIBYTE(v243);
  v274 = v269 ^ v250 ^ *(_DWORD *)&v257[4 * (v265 ^ 0x36416F4D)] ^ v271;
  v275 = v269 ^ v250 ^ v257[4 * (v265 ^ 0x36416F4D)] ^ v271 ^ v248;
  v276 = *(_DWORD *)(v253 + 4 * (BYTE2(v243) ^ 0x16u)) ^ 0x5162C3C6;
  v277 = (((v276 >> 4) & 0xBB64263) - 21845080 - ((2 * (v276 >> 4)) & 0x15640440)) ^ *(_DWORD *)&v252[4 * (v272 ^ 0xE)];
  v278 = v276 ^ (v249 + 407704862 - ((2 * v241) & 0x3C)) ^ *(_DWORD *)&v260[4 * BYTE1(v248)] ^ *(_DWORD *)&v257[4 * (v241 ^ 0x91)] ^ (v277 - 1689666748 - ((2 * v277) & 0x36937688));
  v279 = v278 ^ v272;
  BYTE2(v276) = BYTE2(v273) ^ 0xA6;
  v280 = (char *)*(&off_1015B46D0 + v5 - 14837) - 12;
  *(_BYTE *)STACK[0x6AC0] = v280[((v273 ^ 0x22A6CF20u) >> 24) ^ 0x73] ^ (((v273 ^ 0x22A6CF20u) >> 24)
                                                                         + (~((v273 ^ 0x22A6CF20u) >> 23) | 0x39)
                                                                         - 28) ^ 0x95;
  v281 = (char *)*(&off_1015B46D0 + (v5 ^ 0x37C6)) - 4;
  v282 = v281[BYTE1(v274) ^ 0xA3];
  HIDWORD(v265) = v282 ^ 0x10;
  LODWORD(v265) = v282 << 24;
  *(_BYTE *)(STACK[0x6AC0] + 10) = (v265 >> 30) ^ (4 * (v265 >> 30)) ^ 0xC2;
  v283 = v281[BYTE1(v264) ^ 0x37];
  HIDWORD(v265) = v283 ^ 0x10;
  LODWORD(v265) = v283 << 24;
  *(_BYTE *)(STACK[0x6AC0] + 2) = (v265 >> 30) ^ (4 * (v265 >> 30)) ^ 0xAB;
  v284 = (char *)*(&off_1015B46D0 + (v5 ^ 0x3D32)) - 4;
  *(_BYTE *)(STACK[0x6AC0] + 11) = v284[v275 ^ 0x74] ^ (((8 * v284[v275 ^ 0x74]) ^ 0xA8)
                                                        - ((2 * ((8 * v284[v275 ^ 0x74]) ^ 0xA8)) & 0x60)
                                                        + 53) ^ 0xFC;
  v285 = (uint64_t)*(&off_1015B46D0 + v5 - 14772);
  *(_BYTE *)(STACK[0x6AC0] + 5) = (*(_BYTE *)(v285 + (BYTE2(v268) ^ 0xF7)) + (BYTE2(v268) ^ 0xCD) + 18) ^ 0xC5;
  LOBYTE(v282) = (v280[((v279 ^ 0xAF40D9CE) >> 24) ^ 0xC2] ^ 0x29 ^ -(v280[((v279 ^ 0xAF40D9CE) >> 24) ^ 0xC2] ^ 0x29) ^ ((((v279 ^ 0xAF40D9CE) >> 24) ^ 0xDD) + ((((v279 ^ 0xAF40D9CE) >> 24) - (((v279 ^ 0xAF40D9CE) >> 23) & 0xC6) - 29) ^ 0xE8 ^ v280[((v279 ^ 0xAF40D9CE) >> 24) ^ 0xC2]) + 1))
               + (((v279 ^ 0xAF40D9CE) >> 24) ^ 0xDD);
  STACK[0xD710] = STACK[0x6AC0];
  *(_BYTE *)(STACK[0x6AC0] + 12) = v282;
  *(_BYTE *)(STACK[0x6AC0] + 13) = ((((v278 ^ v272 ^ 0xAF40D9CE) >> 16) ^ 0x1B)
                                  + *(_BYTE *)(v285 + (((v278 ^ v272 ^ 0xAF40D9CE) >> 16) ^ 0x21))
                                  + 18) ^ 0x63;
  LOBYTE(v273) = ((2 * v284[v273 ^ 0x15]) & 0x96 ^ 0xFD)
               + (((v284[v273 ^ 0x15] ^ 0xAD) + 83) ^ ((v284[v273 ^ 0x15] ^ 0xA5)
                                                                        + 91) ^ ((v284[v273 ^ 0x15] ^ 0x3D)
                                                                               - 61))
               + 1;
  v286 = v273 ^ (8 * v273) ^ 0x41;
  v287 = (_BYTE *)STACK[0xD710];
  v288 = STACK[0xD710];
  v287[3] = v286;
  v287[1] = ((BYTE2(v276) ^ 0x75) + *(_BYTE *)(v285 + (BYTE2(v276) ^ 0x4FLL)) + 18) ^ 0x33;
  if ((v274 & 0x10000000) != 0)
    v289 = -16;
  else
    v289 = 16;
  v287[8] = (v289 + (HIBYTE(v274) ^ 0xAC) - ((2 * (v289 + (HIBYTE(v274) ^ 0xAC))) & 0xC7) - 29) ^ 0x1B ^ v280[(v289 + (HIBYTE(v274) ^ 0xAC)) ^ 0x4DLL];
  v290 = v281[BYTE1(v268) ^ 0x18];
  HIDWORD(v291) = v290 ^ 0x10;
  LODWORD(v291) = v290 << 24;
  v287[6] = (v291 >> 30) ^ (4 * (v291 >> 30)) ^ 0x41;
  v287[4] = (HIBYTE(v268) - ((v268 >> 23) & 0xC6) - 29) ^ 0x23 ^ v280[HIBYTE(v268) ^ 0x72];
  v292 = ((v274 >> 15) & 0xFC ^ 0x58) + (BYTE2(v274) ^ 0x53) + *(_BYTE *)(v285 + (BYTE2(v274) ^ 0x17)) - 108;
  v287[9] = ((v292 + (v292 ^ 0xEE) + 1) ^ 0xFE) + v292;
  v293 = v284[(v268 ^ v243) ^ 0x7DLL];
  v287[7] = v293 ^ (8 * v293) ^ 0xA7;
  v294 = v281[BYTE1(v278) ^ 0x22];
  HIDWORD(v291) = v294 ^ 0x10;
  LODWORD(v291) = v294 << 24;
  v287[14] = (v291 >> 30) ^ (4 * (v291 >> 30)) ^ 0x21;
  LOBYTE(v294) = v284[(v278 ^ v272) ^ 0xA3];
  *(_BYTE *)(v288 + 15) = v294 ^ 0x69 ^ (((8 * v294) ^ 0xA8) - ((2 * ((8 * v294) ^ 0xA8)) & 0x60) + 53);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v5) - 4))(1971553243, 27988, 1772489163);
}

uint64_t sub_100CF665C@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, char a5@<W6>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;

  v11 = ((a4 + v7) * (((v6 + v9) | a6) ^ v8)) ^ ((((_DWORD)a4 + (_DWORD)v7) * (((v6 + v9) | a6) ^ v8)) >> 16);
  *(_BYTE *)(a4 + v7) ^= *(_BYTE *)(*(_QWORD *)(v10 + 8 * (v6 & a1))
                                  + (v7 | (16 * ((v11 * a3) >> 24)))
                                  - 8) ^ (v11 * a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v7 == 15) * a2) ^ v6)) - 4))();
}

uint64_t sub_100CF66C8()
{
  return ((uint64_t (*)(void))STACK[0xA0B0])();
}

uint64_t sub_100CF66E4()
{
  STACK[0xC768] -= 32;
  return ((uint64_t (*)(void))STACK[0xC4B8])();
}

uint64_t sub_100CF6710()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((31349 * (v1 == ((v0 - 2508) ^ 0x8D2D92CD))) ^ (v0 + 4578)))
                            - 12))();
}

uint64_t sub_100CF6750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xAF18] = *(_QWORD *)(STACK[0x6AD8] + 8 * a8) - 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (a8 ^ (528 * (a8 ^ 0x683)) ^ 0x48A3 ^ (12232 * ((a8 + 831008491) > 0x8C510D36)))))(a1, a2, a3, a4, a5, a6, a7, 153);
}

uint64_t sub_100CF680C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 4578) ^ (6516 * (v0 == 1667214383))))
                            - (STACK[0x6508]
                             - 2240)
                            + 1962))();
}

uint64_t sub_100CF6854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = STACK[0x7AC0];
  STACK[0xC870] = 0x3B2B85D6199E010FLL * STACK[0xB6E8] + 0x67F3171B1845AD9FLL;
  v7 = STACK[0x6C78];
  v8 = *(_QWORD *)(v6 - 0x28623712C9340C8ELL);
  v9 = LODWORD(STACK[0xA3F4]);
  v10 = STACK[0xB6E0];
  v11 = LODWORD(STACK[0x7F40]);
  v12 = LOBYTE(STACK[0x8B17]);
  v13 = STACK[0x6AD8];
  STACK[0xA688] = ((a6 - 1607570623) & 0x5FD19D7E) - 4218 + *(_QWORD *)(STACK[0x6AD8] + 8 * a6);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v13 + 8 * (a6 ^ 0x1E2B)) - 4))(v9, v10, v12, v6 - 0x28623712C9340DAALL, v8, 2368574583, v7, v11);
}

uint64_t sub_100CF6A14()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] + 4578) ^ (43 * (v0 == -1926392729))))
                            - (((STACK[0x6508] - 4206) | 0x2250) ^ 0x2254)))();
}

uint64_t sub_100CF6A64@<X0>(int a1@<W8>)
{
  STACK[0xB6E8] = (49 * (a1 ^ 0x220Eu) - 0x8E7EF8B80E34287) * STACK[0xC870] + 0x4836E677AC86958FLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 12))();
}

uint64_t sub_100CF6AD0()
{
  STACK[0xC768] -= 80;
  return ((uint64_t (*)(void))STACK[0xA328])();
}

uint64_t sub_100CF6B04()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)((STACK[0x6508] - 52) ^ (18799 * (v0 == 0xD5001A2161FD024ALL))))
                            - 8))();
}

uint64_t sub_100CF6B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                 + 8 * (int)(STACK[0x6508] + 3115))
                                                                     - 8))(a1, a2, a3, 2595713195);
}

uint64_t sub_100CF6BA4()
{
  uint64_t v0;
  int v1;

  v1 = STACK[0x6508] - 52;
  *(_QWORD *)STACK[0xE2D8] = 0x3B2B85D6199E010FLL * v0 + 0x283834400B3883F9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 8))();
}

uint64_t sub_100CF6BFC()
{
  return ((uint64_t (*)(void))STACK[0xC390])();
}

uint64_t sub_100CF6C10@<X0>(unint64_t a1@<X2>, int a2@<W3>, unint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = (v8 + a2) & v4;
  STACK[0xE2E0] = a3;
  v11 = STACK[0xC768];
  STACK[0xE2E8] = v3 + STACK[0xC768];
  STACK[0xC768] = (((v8 - 1086) | v5) ^ a1) + v11;
  v12 = STACK[0x6AD8];
  v13 = *(_QWORD *)(STACK[0x6AD8] + 8 * v8);
  LODWORD(STACK[0x1D358]) = (v8 + 427180620) ^ v6;
  STACK[0x1D350] = v7;
  STACK[0x1D360] = v13 ^ v6;
  v14 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v9 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8
                                                      * ((*(unsigned __int8 *)STACK[0x49A8] * (v10 ^ 0x1065)) | (v8 + 11590)))
                                          - 8))(v14);
}

uint64_t sub_100CF6CC8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 11820)))();
}

uint64_t sub_100CF6CF4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = STACK[0xC768];
  STACK[0xE2F0] = v1 + STACK[0xC768];
  STACK[0xC768] = v2 + 16;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x5510])(25);
  STACK[0xB118] = v3;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((v3 == 0) * ((((v0 + 1593746196) & 0xEFADF48F) - 1319933102) ^ 0x4FA5)) ^ v0)))();
}

uint64_t sub_100CF6D8C@<X0>(int a1@<W8>)
{
  int v1;

  STACK[0xC768] = STACK[0xC768] - 4230 + 49 * (v1 ^ 0x4F0Du);
  *(_DWORD *)STACK[0x4880] = a1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((5802 * (a1 == -731380499)) ^ v1)))();
}

uint64_t sub_100CF6E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((12673 * ((v5 ^ 0x45AF89BC) != 285313042)) ^ ((v5 ^ 0x45AF89BC) - 1169143160))) - (((v5 ^ 0x45AF89BC) - 1169143271) | 0x82u) + 4474))(3019626478, 22859, -40650, 16994, a5, 21581, 16448, 83);
}

uint64_t sub_100CF6E98(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - (v4 ^ a4) + 21460))();
}

uint64_t sub_100CF6ECC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v9 ^ ((a1 & (2
                                                          * (*(unsigned __int8 *)(v6 + v7)
                                                           - (*(_BYTE *)(v8 + v7) - 3))))
                                                   + ((*(unsigned __int8 *)(v6 + v7)
                                                     - (*(_BYTE *)(v8 + v7) - 3)) ^ v10) == v10)) & 1) == 0)
                                          * (v9 ^ a6)) ^ v9))
                            - 12))();
}

uint64_t sub_100CF6F18(uint64_t a1, unsigned int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((9406 * (v7 + (((v8 ^ a4) + 542) ^ a2) + (((v8 ^ a4) + 542) | a7) + a3 == 20)) ^ v8 ^ a4))
                            - 12))();
}

uint64_t sub_100CF6F58@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v2 ^ 0x53D6) * a1 + 13241) * (a2 == 62)) ^ v2 ^ 0x730E))
                            - (((v2 ^ 0x730Eu) - 4216) ^ v3)))();
}

uint64_t sub_100CF6FA4()
{
  int v0;

  *(_DWORD *)STACK[0x4880] = 731380492;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 14965)) - 12))();
}

uint64_t sub_100CF6FCC()
{
  int v0;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                         + 8
                                                                                         * (((v0 ^ 0x4EACF079)
                                                                                           + 1319947736) ^ v0 ^ (6327 * (v0 != -1384225163)))))(0x10E8C60C20090924, 2694, 0x10E8C60C2008EC3CLL, 7170, 20378, 13170);
}

uint64_t sub_100CF708C(uint64_t a1, char a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v9 = v6 + a3 + (v5 + 2168);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 8 * (v5 ^ a4)) + v9);
  *(_BYTE *)(v8 + v9) = v10;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v10 != ((v5 ^ a2) ^ 0xF6)) * a5) ^ v5)))();
}

uint64_t sub_100CF70D4@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  unint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((v3 - 2774) | 0x50) ^ a2)
                                * ((v5 & (2 * (a3 + 1))) + ((a3 + 1) ^ v4) + a1 > 0x17)) ^ v3)))();
}

uint64_t sub_100CF7114()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((((v0 - 509001975) & 0x1E56BEE8 ^ (v0 - 514)) * (v1 != v2 + 24)) ^ (v0 - 2698))))();
}

uint64_t sub_100CF7158@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((4750 * ((a1 - v1) > 0x50D9C98)) ^ (v2 + a1 - v1 + 3783))))();
}

uint64_t sub_100CF719C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;

  *(_QWORD *)(v2 + 12) = 0x6375646F72702F3ALL;
  *(_DWORD *)(v2 + 20) = 116;
  *(_BYTE *)(v2 + 24) = 0;
  strcpy(v3, "product-id");
  v3[11] = 0;
  v3[12] = 0;
  v4 = (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8 * (v0 - 5634)))(LODWORD(STACK[0x35AC]), v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((2 * v4) & 0x3CDCDFDE) + (v4 ^ 0x1E6E6FEF) == 510554095)
                                          * (((v0 - 5004) | 0x1001) - 6034)) ^ v0))
                            - ((v0 + 1286127638) & 0xB3573377 ^ 0x107ELL)))();
}

uint64_t sub_100CF7270()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v4 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x1B84)))();
  v5 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t))STACK[0x4538])(STACK[0x3A30], v2, v4, STACK[0x3A28]) != 0;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8 * ((v5 * (((v1 - 957538654) & 0x3912D876) - 4211)) ^ v1))
                                         - 12))((v3 - 510554095));
}

uint64_t sub_100CF72EC(int a1)
{
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);
  _BOOL4 v4;

  v3 = *(uint64_t (**)(void))(v1 + 8 * (v2 - 4624));
  LODWORD(STACK[0x6AC0]) = a1;
  v4 = v3() != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26351 * v4) ^ (v2 + 3017)))
                            - ((v2 + 17295) ^ 0x5CE0)))();
}

uint64_t sub_100CF7368()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v1 = ((uint64_t (*)(void))STACK[0x4350])();
  v2 = ((uint64_t (*)(void))STACK[0x42A0])();
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v1
                                           + 2 * (v0 ^ 0x52D7u)
                                           + (v2 ^ 0x28888C00400618A5)
                                           - ((2 * v2) & 0xAEEEE7FF7FF3CEB4) == 0x28888C004006351BLL)
                                          * ((v0 ^ 0x52D7) - 3139)) ^ v0))
                            - 12))();
}

uint64_t sub_100CF73F0()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(void);
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + 20748;
  v4 = ((uint64_t (*)(uint64_t))*(&off_1015B46D0 + (v3 ^ 0x5EE6)))(v0);
  v5 = v2();
  v6 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1015B46D0 + v3 - 23709))(v4, v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((unint64_t)((((_DWORD)v6
                                                                - ((v6 << ((v3 ^ 0x7Au) - 60)) & 0x9C5D0822)
                                                                - 835812335) ^ 0xCE2E8411)
                                                              + 1) > 0x14)
                                          * ((30 * (v3 ^ 0x5E7A)) ^ 0x2535)) ^ v3))
                            - 12))();
}

uint64_t sub_100CF74B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;

  v5 = v4();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x4268])(v0, v3, v1, v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - (v2 + 2211) + 9502))();
}

uint64_t sub_100CF750C@<X0>(int a1@<W8>)
{
  int v1;

  *(_DWORD *)STACK[0x45F0] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((2 * v1) ^ 0x95DALL)))();
}

uint64_t sub_100CF753C()
{
  int v0;

  *(_BYTE *)STACK[0x49A8] = 1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 11820)))();
}

uint64_t sub_100CF755C@<X0>(int a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((2 * (a1 != ((v1 + 16101) ^ 0xD4684BB6))) | (8 * (a1 != ((v1 + 16101) ^ 0xD4684BB6))) | (v1 + 16091))))();
}

uint64_t sub_100CF7598()
{
  int v0;

  *(_DWORD *)STACK[0xE2E0] = *(_DWORD *)STACK[0x45F0];
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * v0))();
}

uint64_t sub_100CF75D8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = 2142736129 * ((((v3 - 240) | 0x66B637C6F280C5A6) - ((v3 - 240) & 0x66B637C6F280C5A6)) ^ 0x1BAD3FCA91D851AFLL);
  *(_QWORD *)(v0 + 800) = *(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 13)) ^ v4;
  *(_QWORD *)(v0 + 784) = STACK[0x4A70];
  *(_DWORD *)(v0 + 792) = (v2 + 427180632) ^ v4;
  ((void (*)(uint64_t))STACK[0x5530])(v3 - 240);
  STACK[0xC768] -= 32;
  return ((uint64_t (*)(_QWORD))STACK[0xC050])(*(_QWORD *)(v1 + 8 * (v2 - 3828)));
}

uint64_t sub_100CF76AC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((21846 * (v0 == ((LODWORD(STACK[0x2950]) | 0x1481) ^ 0xD4683264))) ^ LODWORD(STACK[0x294C])))
                            - (STACK[0x2D08] ^ 0x3704)))();
}

uint64_t sub_100CF7704()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)STACK[0x2D08])
                            - ((STACK[0x2D08] + 1107623889) & 0xBDFAFFAB ^ 0x3681)))();
}

uint64_t sub_100CF7758@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = (((v1 ^ 0xAEE8534E) + 1360506034) ^ ((v1 ^ 0xA4B5DD39) + 1531585223) ^ (((((a1 + 744605421) & 0xD39E12FF)
                                                                               - 762060830) ^ v1)
                                                                             + ((521 * (a1 ^ 0x3696)) ^ 0x2D6C30BF)))
     - 657555921 < 0x52E12C92
    || LODWORD(STACK[0xC5B0]) == -464203777;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((2 * v3) | (16 * v3)) ^ a1)) - 12))();
}

uint64_t sub_100CF782C()
{
  int v0;
  int v1;
  BOOL v2;
  int v3;

  v1 = STACK[0xCEA4];
  STACK[0x82B8] = 0;
  LODWORD(STACK[0x92A4]) = 0;
  if (*(_BYTE *)(STACK[0x9FC8] - 0x55058F428EADA763))
    v2 = v1 == 1;
  else
    v2 = 0;
  v3 = v2;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v3 * (v0 + 10851)) ^ v0)))();
}

uint64_t sub_100CF78CC()
{
  int v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v5 = 1910742433 * ((((v4 - 240) | 0x78F2F6C7) - ((v4 - 240) & 0x78F2F6C7)) ^ 0x375A9E23);
  LODWORD(STACK[0x1D388]) = v5 + v0 + 6836;
  STACK[0x1D358] = STACK[0x1CE8];
  LODWORD(STACK[0x1D370]) = v5 + 408253521;
  LODWORD(STACK[0x1D360]) = (((v2 ^ 0xF73CBDFE) + 147014146) ^ ((v2 ^ 0xA6AEA75F) + 1498503329) ^ ((v2 ^ 0xDCBF8EC6)
                                                                                                 + 591425850))
                          - v5
                          + ((8 * v0) ^ 0xCA6F41BC);
  STACK[0x1D368] = v3;
  STACK[0x1D378] = v1;
  STACK[0x1D380] = STACK[0x1CF0];
  v6 = ((uint64_t (*)(uint64_t))STACK[0x42C8])(v4 - 240);
  LODWORD(STACK[0x92A4]) *= 4;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v6);
}

uint64_t sub_100CF79F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v1 = LODWORD(STACK[0x92A4]);
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7060));
  STACK[0xC5D8] = (v0 + 3346) - 5110 + *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(uint64_t))(v2 - 8))(v1);
}

uint64_t sub_100CF7AA4()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(void))STACK[0x4478])();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3245)) - 8))(v1);
}

uint64_t sub_100CF7AC8()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (LODWORD(STACK[0x2958]) | (16
                                                                   * (((STACK[0x6508] - 51) ^ (v0 == (STACK[0x295C] & 0xAE03BFF ^ 0xD4682E54))) & 1))))
                            - 4))();
}

uint64_t sub_100CF7B24()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 + 10634) + 21567))();
}

uint64_t sub_100CF7B60@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v2;

  v2 = (((v1 ^ 0xAE153935) + 1374340811) ^ ((v1 ^ 0xCF834DC1) + 813478463) ^ ((a1 ^ 0x2C3)
                                                                            + 1185390245
                                                                            + (v1 ^ 0xB9581950 ^ ((a1 - 21185) | 0x1209))))
     - 1503582944 >= 0xCD92A6F1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((8 * v2) | (16 * v2) | a1)) - 12))();
}

uint64_t sub_100CF7C14()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  v2 = (v0 ^ 0x138Cu) * v1;
  v3 = STACK[0x91D4];
  v4 = STACK[0xCB94];
  LODWORD(STACK[0xCD9C]) = -1926392729;
  LODWORD(STACK[0x9F98]) = v3;
  LODWORD(STACK[0xBFB0]) = v4;
  v5 = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  LODWORD(STACK[0xAC30]) = -1926392729;
  return ((uint64_t (*)(void))(v5 - v2 + 1627))();
}

uint64_t sub_100CF7C8C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((31036 * (v0 == (LODWORD(STACK[0x2D14]) ^ 0xD4683809))) ^ LODWORD(STACK[0x2D14])))
                            - ((922 * (STACK[0x6508] ^ 0x1073)) ^ 0x120ELL)))();
}

uint64_t sub_100CF7CEC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2D14]))
                            - ((922 * (LODWORD(STACK[0x2D14]) ^ 0x3CE1u)) ^ 0x120ELL)))();
}

uint64_t sub_100CF7D34(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = STACK[0xC4F8];
  strcpy((char *)&STACK[0x79F2], "false");
  ((void (*)(uint64_t, unint64_t, uint64_t))STACK[0x3E68])(a1, v3, 21);
  v4 = 1655432393
     * ((0x6FD51A682775EDB3 - ((v2 - 240) | 0x6FD51A682775EDB3) + STACK[0x2978]) ^ 0x96D0C6A027A91332);
  STACK[0x1D358] = v4 + 6;
  LODWORD(STACK[0x1D368]) = (v1 - 361) ^ v4;
  STACK[0x1D360] = v3;
  STACK[0x1D370] = (unint64_t)&STACK[0x79F2];
  sub_10111D7B0(v2 - 240);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((50 * (LOBYTE(STACK[0x1D350]) == (((8 * v1) ^ 0x9038) & 0xF8 ^ 0x29))) ^ v1))
                            - 12))();
}

uint64_t sub_100CF7E28()
{
  uint64_t (*v0)(unint64_t *, uint64_t, uint64_t);
  int v1;
  uint64_t v2;

  v0(&STACK[0x79F2], v2, 5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 + 809440173) & 0xCFC0DA78) + 28))();
}

_QWORD *sub_100CF7E7C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  unint64_t v4;

  STACK[0xC768] -= 32;
  *(_DWORD *)(STACK[0x7278] + 12) = v2 - 1120985881;
  v4 = STACK[0x6AD8];
  STACK[0xC050] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12;
  return ((_QWORD *(*)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * ((v3 + 11599) ^ v3)) - 12))(&STACK[0x8424], a1, a2, 19525, 3288435957);
}

uint64_t sub_100CF7F10()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((STACK[0x6508] + 18576) ^ 0x1611) - 8700) * (v0 == -731380499)) ^ (STACK[0x6508] + 16033)))
                            - 12))();
}

uint64_t sub_100CF7F64()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 13847) | 0x4006u) + 22778))();
}

uint64_t sub_100CF7FA8@<X0>(int a1@<W8>)
{
  int v1;
  _BOOL4 v3;

  v3 = (((v1 ^ 0x8F37767) - 150173543) ^ ((v1 ^ 0x59175661) - 1494701665) ^ (((a1 - 22612) | 0x600)
                                                                           + 1993710117
                                                                           + (v1 ^ 0x892A59FF ^ (350 * (a1 ^ 0x5903)))))
     - 657555921 >= 0x6E2CB10D
    && LODWORD(STACK[0x91D4]) != -1926392730;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4 * v3) | (8 * v3)) ^ a1)) - 8))();
}

uint64_t sub_100CF808C()
{
  int v0;

  STACK[0xDA90] = STACK[0x7828];
  STACK[0x8FB0] = 0x6A072866245C401ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v0 ^ 0x68C0E35Bu) > 0x413761A3) * (v0 ^ 0x17B1)) ^ (v0 + 378)))
                            - 12))();
}

uint64_t sub_100CF810C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((501
                                               * ((((STACK[0x6508] + 4236) ^ (v0 == (((STACK[0x6508] + 4236) | 0x1208) ^ 0xD46837E7))) & 1) == 0)) ^ (STACK[0x6508] + 8841)))
                            - 4))();
}

uint64_t sub_100CF8180()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 1365357736) & 0xAE9E3F7F ^ 0x2736)))();
}

uint64_t sub_100CF81CC()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((26579
                                          * ((((v1 ^ 0x8027CA18) + 2144876008) ^ ((v1 ^ (v2 + 2896)) + 84075150) ^ (((v0 - 22) ^ 0x2995) + (v1 ^ 0xA214A945) + 1575700530))
                                           - 1503582944 < 0xCD92A6F1)) ^ v0))
                            - 12))();
}

uint64_t sub_100CF8278()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((46 * (*(_DWORD *)(STACK[0xA2D8] + 760) == 886454269)) ^ v0))
                            - (((v0 - 9240) | 0x890u)
                             + 757)
                            + 3709))();
}

uint64_t sub_100CF82CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;

  STACK[0xE598] = v2;
  v4 = (unint64_t *)((char *)&STACK[0x10000] + v1);
  STACK[0xAB50] = (unint64_t)&STACK[0x10000] + v1;
  STACK[0xC768] = a1 + 128;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5510])(32);
  *v4 = v5 + 0x77F08B69E6123757;
  LOBYTE(STACK[0xE5A7]) = v5 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v5 != 0) * (1481 * (v3 ^ 0xB96) + 19263)) ^ v3)) - 8))();
}

uint64_t sub_100CF8384(uint64_t a1)
{
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 + 8) = 1784467803;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 - 5085 + 13 * (v1 ^ 0x921))) - 8))(a1, 92, 138, 0x880F749619EDC8A9, 81, STACK[0x60C0], STACK[0x60B8]);
}

uint64_t sub_100CF8408()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((LODWORD(STACK[0x2964]) * (v0 == -731380499)) ^ LODWORD(STACK[0x2960])))
                            - (((STACK[0x6508] + 1930) | 0x2668) ^ 0x3E6CLL)))();
}

uint64_t sub_100CF8458()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2130]))
                            - 1997 * (LODWORD(STACK[0x2130]) ^ 0x42B4u)
                            + 15972))();
}

uint64_t sub_100CF84A0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100CF854C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((LODWORD(STACK[0x2970]) * (v0 == -731380499)) ^ (STACK[0x6508] + 6563)))
                            - 8))();
}

uint64_t sub_100CF8594()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x2134]))
                            - (LODWORD(STACK[0x2134]) - 8474)
                            + 2295))();
}

uint64_t sub_100CF85D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  int v6;
  unint64_t v7;

  v7 = STACK[0x7278];
  *(_DWORD *)(v7 + 16) = v6 ^ 0xD8CE7E2F;
  *(_BYTE *)(v7 + 21) |= 1u;
  *(_BYTE *)(v7 + 23) |= 1u;
  *(_BYTE *)(v7 + 24) |= (_BYTE)a6 + 2;
  *(_BYTE *)(v7 + 25) |= 1u;
  *(_BYTE *)(v7 + 27) |= 1u;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7795 * ((a6 ^ 0x33ED6C66u) > 0x13254905)) ^ (a6 + 556)))
                                                                                                - 12))(0x4B0D70AD3A88BE86, a1, a2, a3, a4, a5, 16794642);
}

uint64_t sub_100CF86BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8]
                                                                                + 8
                                                                                * ((31372
                                                                                  * (v3 == ((STACK[0x6508]
                                                                                           - 311906488) & 0x12976BFF)
                                                                                         - 731391697)) ^ LODWORD(STACK[0x296C]))))(a1, a2, a3, STACK[0x4BA8]);
}

uint64_t sub_100CF8724@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100CF8764()
{
  int v0;
  int v1;
  unsigned int v2;
  int v3;

  v2 = ((v1 - 1953249415) & 0xE73EBF7F)
     + 1788979160
     + (((v0 ^ 0x8D3B2EA1) + 1925501279) ^ ((v0 ^ 0x4E3A2917) - 1312434455) ^ ((v0 ^ 0x1BCF7D74 ^ (97 * (v1 ^ 0x8D2D946F)))
                                                                             - 466581913))
     + 2543;
  LOBYTE(STACK[0x708F]) = v2 < 0x91D34EF3;
  if (v2 >= 0x91D34EF3)
    v3 = -1926392729;
  else
    v3 = -1926392730;
  LODWORD(STACK[0xB48C]) = v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)(v1 ^ 0x8D2D8F39 ^ (8731
                                                                               * (((((STACK[0xA054] & 0xFFFFFFFE) - v1) | (v1 - (STACK[0xA054] & 0xFFFFFFFE))) & 0x80000000) == 0))))
                                          - 8))(0x603CE14A0A8FADE1);
}

uint64_t sub_100CF8894()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100CF8A5C@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0xC554]) = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (a1 + 8197 + 14 * (a1 ^ 0x5C0))))();
}

uint64_t sub_100CF8A94@<X0>(unint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v4 = STACK[0x6AD8];
  STACK[0x7660] = *(_QWORD *)(STACK[0x6AD8] + 8 * a2) + v3;
  v5 = STACK[0xC768];
  STACK[0x9688] = (unint64_t)&STACK[0x10000] + STACK[0xC768];
  STACK[0xC768] = (v2 ^ 0x1D2Bu) + v5 - 1341;
  STACK[0xA798] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 + 8811)) - 4))();
}

uint64_t sub_100CF8B00()
{
  int v0;

  LODWORD(STACK[0xA06C]) = -852283779;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 1009 * (v0 ^ 0x5697u) + 23195))();
}

uint64_t sub_100CF8B4C@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((25 * (((a1 < -1926392722) ^ (v1 + 32)) & 1)) ^ v1))
                            - ((v1 + 112534048) ^ 0x6B57CCFLL)))();
}

uint64_t sub_100CF8BA8@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((a1 == ((v1 - 11554) ^ 0x8D2D8829)) * (((v1 - 14663) | 0x54) - 3278)) ^ v1))
                            - 8))();
}

uint64_t sub_100CF8BFC()
{
  int v0;

  LODWORD(STACK[0x71BC]) = -1926392825;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ 0xC31u) + 4206))();
}

uint64_t sub_100CF8C44()
{
  int v0;

  STACK[0xDA98] = STACK[0x7828];
  STACK[0x82B0] = 0x6A072866245C401ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 4697)) - ((v0 + 2464) ^ 0x107ALL)))();
}

uint64_t sub_100CF8CB0()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (v1 + 1099931957) & STACK[0x1D04];
  v4 = v2(v0);
  v5 = ((uint64_t (*)(void))*(&off_1015B46D0 + v1 - 4552))();
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((245
                                          * ((((v1 + 2224) ^ (v4
                                                            + v3
                                                            + (v5 ^ 0x1410901931904040)
                                                            - ((2 * v5) & 0xD7DEDFCD9CDF7F7ELL) == 0x1410901931905CC3)) & 1) == 0)) ^ v1))
                            - 8))();
}

uint64_t sub_100CF8D68()
{
  uint64_t v0;
  int v1;
  _BOOL4 v2;

  v2 = ((unsigned int (*)(uint64_t))*(&off_1015B46D0 + (v1 ^ 0x1420)))(v0) < 0x15;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v2 * (((v1 + 893) | 0x526) ^ 0x7547)) ^ v1)) - 8))();
}

uint64_t sub_100CF8DC8()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v5 = STACK[0xFF8];
  LODWORD(STACK[0x1D370]) = v3 - STACK[0xFF8] + 193336597;
  STACK[0x1D358] = STACK[0xFF0];
  STACK[0x1D350] = v5 + ((v3 + 2211) ^ 0x31A59B01D25C2DC5) * v1 + 0x5B2AE405E3F29086;
  sub_100097FBC(v4 - 240);
  v6 = ((uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))*(&off_1015B46D0 + (v3 ^ 0x1D40)))(v0, STACK[0x1D360], STACK[0x1D368], v2);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 8))(v6);
}

uint64_t sub_100CF8E74()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x4528])(v1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v0) - (v0 ^ 0x252ALL)))(v2);
}

uint64_t sub_100CF8EA0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  ((void (*)(uint64_t))STACK[0x4528])(v2);
  v3 = ((uint64_t (*)(_QWORD))STACK[0x4478])(LODWORD(STACK[0x6AC0]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((8290 * (v1 == ((v0 + 1537144411) & 0xA460FCF7) - 731384713)) ^ v0))
                                          - 8))(v3);
}

uint64_t sub_100CF8F10()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))();
}

uint64_t sub_100CF8F58()
{
  int v0;
  int v1;
  unint64_t v2;

  LODWORD(STACK[0xD724]) = v1;
  v2 = STACK[0x6AD8];
  STACK[0xD1B0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 984)) - 4;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 620)))(5121);
}

uint64_t sub_100CF8FCC@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((21806
                                               * (((a1 == -1926392730) ^ ((v1 & 0x7F) + 48)) & 1)) ^ v1 & 0xF94A9F7F))
                            - (((v1 & 0xF94A9F7F) - 3025) ^ v2)))();
}

uint64_t sub_100CF9030()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3025)) - 8))();
}

uint64_t sub_100CF9054@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;

  LODWORD(STACK[0xAEC4]) = v1;
  LODWORD(STACK[0x8A94]) = a1;
  if (*(_BYTE *)(STACK[0x9580] - 0x55058F428EADA763))
    v5 = -1926392730;
  else
    v5 = -1926392729;
  if (*(_BYTE *)(STACK[0x9580] - 0x55058F428EADA762))
    v6 = (1801922251 - (v5 & 0x10001)) ^ v2;
  else
    v6 = v5;
  LODWORD(STACK[0x6C64]) = v6;
  LODWORD(STACK[0xC8DC]) = 615687302;
  STACK[0xD0A0] = 4;
  v7 = ((uint64_t (*)(unint64_t *, unint64_t *, unint64_t *, _QWORD, _QWORD))STACK[0x49E0])(&STACK[0x1D094], &STACK[0xBDF4], &STACK[0xD0A0], 0, 0);
  v8 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((v3 + 951412806) ^ 0x38B56822)) - 4;
  LODWORD(STACK[0xEE20]) = (v3 + 951412806) ^ 0xE93;
  LODWORD(STACK[0xEE50]) = v3 + 951412806;
  STACK[0xEE30] = v7;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0xEE60]) = (v3 + 951412806) ^ 0x3F;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((v4 - 1391249319 - 2 * ((v4 - 240) & 0xAD133949)) ^ 0x9081E610)
                          + v3;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v9 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v4 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v9);
}

uint64_t sub_100CF9200()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1833399728) ^ 0x92B8D711)) - 12))();
}

uint64_t sub_100CF9238()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1833399728) ^ 0x92B8D711)) - 12))();
}

uint64_t sub_100CF9268@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6508];
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = a1 ^ 0xE57;
  LODWORD(STACK[0xEE50]) = a1;
  STACK[0xEE30] = v1;
  STACK[0xEE58] = 19;
  LODWORD(STACK[0xEE60]) = a1 + 28;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601 - 1705718857 * ((v2 - 240) ^ 0x3D92DF59) + v3;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v5);
}

_QWORD *sub_100CF930C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  unint64_t v4;
  char *v5;
  unint64_t v6;

  v2 = STACK[0x6508] + 12;
  v3 = STACK[0x6508] - 4125;
  LODWORD(STACK[0x81D4]) = STACK[0x71BC];
  STACK[0xBD68] = STACK[0xBA30];
  STACK[0xB968] = STACK[0x7E60];
  STACK[0x8618] = STACK[0xB9C0];
  v4 = STACK[0xC768];
  v5 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x8B48] = (unint64_t)v5;
  STACK[0x8260] = (unint64_t)v5;
  STACK[0xAE98] = (unint64_t)(v5 + 256);
  STACK[0x9A20] = (unint64_t)(v5 + 592);
  STACK[0xC768] = v4 + 688;
  LODWORD(STACK[0x91B4]) = 256;
  LODWORD(STACK[0x981C]) = -852283779;
  v6 = STACK[0x6AD8];
  STACK[0xC050] = *(_QWORD *)(STACK[0x6AD8] + 8 * v3);
  return ((_QWORD *(*)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((v2 ^ 0x3D84) + v3)) - 12))(&STACK[0xCC24], a1, a2, 19525, 3288435957);
}

uint64_t sub_100CF9440()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  _BOOL4 v5;

  v1 = STACK[0x6508];
  v2 = STACK[0x6508] + 1702;
  STACK[0x7788] = 0x214487444AB0E08;
  LODWORD(STACK[0xC524]) = 1784467771;
  STACK[0x8FF0] = *(_QWORD *)STACK[0xC7E8];
  STACK[0x7450] = 0x214487444AB0E08;
  v5 = v0 != 0x55058F428EADAA34 && STACK[0xA790] != 0 && STACK[0xB9E0] != 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((v5 * (v1 + 20331)) ^ v2)))();
}

uint64_t sub_100CF94F8()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x6508] - 1138;
  v1 = (STACK[0x6508] - 4207) | 0x408;
  LODWORD(STACK[0xBEF0]) = 1784467771;
  STACK[0x8CF0] = 0x214487444AB0E08;
  STACK[0xA5E0] = 0xAD7DC3C140BF010;
  v2 = STACK[0x6AD8];
  STACK[0xCF88] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((14010 * ((v1 ^ 0xA7952556 | v0) < 0xE3E583F9)) ^ (v0 - 1378)))
                            - 4))();
}

uint64_t sub_100CF95D4@<X0>(int a1@<W0>, int a2@<W1>, unint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unint64_t v40;
  char *v41;
  _BYTE *v42;

  STACK[0x92F8] = STACK[0x6A90];
  STACK[0x7C58] = STACK[0x6A80];
  STACK[0x7858] = STACK[0x6A60];
  STACK[0xBD40] = STACK[0x6A50];
  STACK[0x9FC8] = v10;
  STACK[0x7118] = STACK[0x6A40];
  LODWORD(STACK[0x7B94]) = v19;
  LODWORD(STACK[0xB8B4]) = STACK[0x6A30];
  STACK[0xBAE0] = STACK[0x6A70];
  STACK[0x9370] = a3;
  v27 = STACK[0x6AC0];
  v28 = (STACK[0x6AC0] + v13) | 1;
  STACK[0x7468] = STACK[0x6A00];
  v29 = *(_DWORD *)(STACK[0x6A10] + (a7 & v18));
  LODWORD(STACK[0xA24C]) = STACK[0x69F0];
  v30 = (a2 + (v29 & 0x7FFFFFFF ^ v11) + v23) * v12;
  v31 = (v30 ^ a6) & (2 * (v30 & (v28 + v14))) ^ v30 & (v28 + v14);
  v32 = ((2 * (v30 ^ v22)) ^ v20) & (v30 ^ v22) ^ (2 * (v30 ^ v22)) & v25;
  v33 = v32 ^ a1;
  v34 = (v32 ^ v15) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ (v26 + 3860)) & v33 ^ (4 * v33) & v25;
  v36 = (v35 ^ a8) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ (v24 + 3032))) ^ v21) & (v35 ^ (v24 + 3032)) ^ (16 * (v35 ^ (v24 + 3032))) & (v25 - 4);
  v38 = v36 ^ (v25 + 1) ^ (v37 ^ 0x8000) & (v36 << 8);
  v39 = v30 ^ (2
             * ((v38 << 16) & 0x300000 ^ v38 ^ ((v38 << 16) ^ a9) & (((v37 ^ (v17 - 1544)) << 8) & 0x300000 ^ (((v37 ^ (v17 - 1544)) << 8) ^ a4) & (v37 ^ (v17 - 1544)) ^ 0x100000)));
  LODWORD(STACK[0xC5B0]) = (((v39 ^ v9) + v16) ^ ((v39 ^ a5) - 623787696) ^ ((v39 ^ 0xD45FFD8C) + 579091861))
                         + 552657343;
  v40 = STACK[0xC768];
  v41 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x9BC0] = (unint64_t)(v41 + 67);
  STACK[0xC768] = v40 + 432;
  LODWORD(STACK[0xCEA4]) = LODWORD(STACK[0x6AA0]) ^ 0x8D2D9467;
  STACK[0x8558] = 0xF71810747F1CCDEFLL * STACK[0x6A20] + 0x4836E677AC86958FLL;
  LODWORD(STACK[0x8434]) = -1926392713;
  STACK[0x8820] = (unint64_t)v41;
  STACK[0x6E08] = (unint64_t)v41;
  STACK[0x7460] = (unint64_t)(v41 + 115);
  LODWORD(STACK[0x722C]) = LODWORD(STACK[0x6AB0]) ^ 0x8D2D9467;
  STACK[0x8B88] = 0x3032385379A144E6;
  STACK[0xA240] = 0;
  LODWORD(STACK[0xA478]) = -1926392729;
  LODWORD(STACK[0x7D54]) = 99754348;
  v42 = sub_10009ABD4(v41 + 115, 0, 0x40uLL);
  STACK[0x8FC0] = 0;
  LODWORD(STACK[0xB8C4]) = -1926392729;
  STACK[0x81E0] = 0x5D226385CE189E8ELL;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)v27) - 8))(v42);
}

uint64_t sub_100CF9910()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (240 * (v1 > 8))))
                            - (((v0 + 667494780) & 0xD836FBBB | 4) ^ (v0 + 9528))))();
}

uint64_t sub_100CF995C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v0 ^ 0x29ED) + 24524) * (v1 == 9)) ^ v0)) - 8))();
}

uint64_t sub_100CF99A4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v1 + v0 - 14748) < 2) * (v0 ^ 0x49D9)) ^ v0))
                            - 8))();
}

uint64_t sub_100CF99F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8]
                                                                                                  + 8 * ((a7 - 2546) ^ 0x462E)))(a1, a2, a3, a4, a5, a6, 44);
}

uint64_t sub_100CF9A24@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = STACK[0x6AD8];
  STACK[0xBB60] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) + v4;
  STACK[0xABB8] = v3;
  v7 = (a2 + v5) | a1;
  v8 = a2 + 786;
  LODWORD(STACK[0xC8B0]) = 1930690922;
  STACK[0xCDE0] = 0xC27AFEAA03E150FLL;
  LODWORD(STACK[0xC2D4]) = 0;
  v9 = ((uint64_t (*)(uint64_t))STACK[0x5510])(20);
  STACK[0xCB10] = v9 + 0xC27AFEAA03E150FLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v9 != 0) * (v7 ^ 0x255A)) ^ v8)) - 12))();
}

uint64_t sub_100CF9ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(STACK[0x6AD8]
                                                                                           + 8
                                                                                           * (v4 ^ 0x297D ^ ((v4 + 4314) | 0x70))))(a1, 13084672, 259613445, a4, &STACK[0xDEA4]);
}

uint64_t sub_100CF9B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v7) - (v7 - 256) + 4206))(49, a2, a3, 696978011, a5, 1644910013, a7, 3597989289);
}

uint64_t sub_100CF9B70@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(void);
  int v3;
  int v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v6 = (v4 - 1643489814);
  v7 = 1772489163 * ((1772489163 * ((_DWORD)a2 + (_DWORD)v6)) ^ ((1772489163 * (a2 + v6)) >> 16));
  v8 = STACK[0x4F88];
  v9 = STACK[0x5120];
  v10 = STACK[0x4F80];
  *(_BYTE *)(a2 + v6 - 0xC27AFEAA03E150FLL) = *(_BYTE *)(STACK[0x4F88] + (v7 >> 24)) ^ HIBYTE(v3) ^ *(_BYTE *)(STACK[0x5120] + (v7 >> 24)) ^ *(_BYTE *)((v7 >> 24) + STACK[0x4F80] + 1) ^ v7 ^ (((1772489163 * ((1772489163 * ((_DWORD)a2 + (_DWORD)v6)) ^ ((1772489163 * (a2 + v6)) >> 16))) >> 24) * v5) ^ a1;
  v11 = a2 + (v6 + 1);
  v12 = 1772489163 * ((1772489163 * (_DWORD)v11) ^ ((1772489163 * v11) >> 16));
  *(_BYTE *)(v11 - 0xC27AFEAA03E150FLL) = *(_BYTE *)(v8 + (v12 >> 24)) ^ BYTE2(v3) ^ *(_BYTE *)(v9 + (v12 >> 24)) ^ *(_BYTE *)((v12 >> 24) + v10 + 1) ^ v12 ^ (55 * ((1772489163 * ((1772489163 * (_DWORD)v11) ^ ((1772489163 * v11) >> 16))) >> 24)) ^ 5;
  v13 = a2 + (v6 + 2);
  v14 = 1772489163 * ((1772489163 * (_DWORD)v13) ^ ((1772489163 * v13) >> 16));
  *(_BYTE *)(v13 - 0xC27AFEAA03E150FLL) = ((BYTE1(v3) ^ 0xB2) + (~(2 * (BYTE1(v3) ^ 0xB2)) | 0xE1) - 112) ^ (-53 * ((-53 * v13) ^ ((1772489163 * v13) >> 16))) ^ *(_BYTE *)(v8 + (v14 >> 24)) ^ *(_BYTE *)(v9 + (v14 >> 24)) ^ (55 * ((1772489163 * ((1772489163 * (_DWORD)v13) ^ ((1772489163 * v13) >> 16))) >> 24)) ^ *(_BYTE *)((v14 >> 24) + v10 + 1) ^ 0x8F;
  v15 = a2 + (v6 + 3);
  v16 = 1772489163 * ((1772489163 * (_DWORD)v15) ^ ((1772489163 * v15) >> 16));
  *(_BYTE *)(v15 - 0xC27AFEAA03E150FLL) = v16 ^ v3 ^ (55
                                                    * ((1772489163
                                                      * ((1772489163 * (_DWORD)v15) ^ ((1772489163 * v15) >> 16))) >> 24)) ^ *(_BYTE *)(v8 + (v16 >> 24)) ^ *(_BYTE *)(v9 + (v16 >> 24)) ^ *(_BYTE *)((v16 >> 24) + v10 + 1) ^ 0x65;
  return v2();
}

uint64_t sub_100CF9CE4()
{
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 4156) ^ 0x114C))
                                          - 8))(49);
}

uint64_t sub_100CF9D50()
{
  int v0;
  int v1;
  unint64_t v2;

  v0 = STACK[0x31A8] & 0x497BF9BD;
  v1 = STACK[0x6508] - 3334;
  v2 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 ^ 0x34D7) + v1)) - 8))();
}

uint64_t sub_100CF9DB4()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 10849)))();
}

uint64_t sub_100CF9DD8()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((STACK[0x6508] - 1270) ^ 0x2160 ^ (4151
                                                                       * (((STACK[0x6508] - 1270) ^ 0x53330CFE) > 0x4ED2A413)))))();
}

uint64_t sub_100CF9E28()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x38D4])) - 8))();
}

uint64_t sub_100CF9E5C@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  char v4;
  int v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v3) - 12);
  v7 = (v5 + a1);
  v8 = 1772489163 * ((1772489163 * ((_DWORD)a2 + (_DWORD)v7)) ^ ((1772489163 * (a2 + v7)) >> 16));
  v9 = STACK[0x4F88];
  v10 = STACK[0x5120];
  v11 = STACK[0x4F80];
  *(_BYTE *)(a2 + v7 - 0xC27AFEAA03E150FLL) = *(_BYTE *)(STACK[0x4F88] + (v8 >> 24)) ^ v4 ^ *(_BYTE *)(STACK[0x5120] + (v8 >> 24)) ^ *(_BYTE *)((v8 >> 24) + STACK[0x4F80] + 1) ^ (-53 * ((-53 * (a2 + v7)) ^ ((1772489163 * (a2 + v7)) >> 16))) ^ (55 * ((1772489163 * ((1772489163 * ((_DWORD)a2 + (_DWORD)v7)) ^ ((1772489163 * (a2 + v7)) >> 16))) >> 24));
  v12 = a2 + (v7 + 1);
  v13 = 1772489163 * ((1772489163 * (_DWORD)v12) ^ ((1772489163 * v12) >> 16));
  *(_BYTE *)(v12 - 0xC27AFEAA03E150FLL) = *(_BYTE *)(v9 + (v13 >> 24)) ^ v2 ^ *(_BYTE *)(v10 + (v13 >> 24)) ^ v13 ^ *(_BYTE *)((v13 >> 24) + v11 + 1) ^ (55 * ((1772489163 * ((1772489163 * (_DWORD)v12) ^ ((1772489163 * v12) >> 16))) >> 24));
  return v6();
}

uint64_t sub_100CF9F1C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1265) ^ 0x42AC)) - 8))();
}

uint64_t sub_100CF9F50()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v0 = LODWORD(STACK[0x318C]) | 0x1989u;
  v1 = STACK[0x6508] - 1115;
  v2 = STACK[0x6AD8];
  STACK[0x7DB0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((1681 * (v1 != 597408296)) | LODWORD(STACK[0x31AC])))
                                          - v0
                                          + 6565))(7041);
}

uint64_t sub_100CF9FD4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((STACK[0x6508] - 3791) ^ 0x7F1D ^ (2211 * (STACK[0x6508] ^ 0x107E))))
                            - 4))();
}

uint64_t sub_100CFA030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((((*(_DWORD *)(a5 + 1336) == 0) ^ (STACK[0x6508] - 1)) & 1)
                                * ((27 * LODWORD(STACK[0x3464])) ^ 0x4400)) ^ LODWORD(STACK[0x3188]))))();
}

uint64_t sub_100CFA088()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((LODWORD(STACK[0x3464]) - 232) ^ 0x15A8 ^ (12204
                                                                                    * ((LODWORD(STACK[0x3464]) + 614982693) < 0x783FC9A1))))
                            - 4))();
}

uint64_t sub_100CFA30C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((73 * (((v2 + 1) ^ (v1 > a1 - 0xC27AFEAA03E1507)) & 1)) ^ v2))
                            - (((v2 - 16392) | 0x2088u) ^ 0x2594)))();
}

uint64_t sub_100CFA368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26612 * ((v6 ^ 0x9B4541C1) != (((v5 + 28009) | 0x6090640C) ^ 0x6090F70D))) ^ v5)) - 4))(a1, a2, 1772489163, 0xF3D850155FC1EAF9, a5, 55, STACK[0x5120], STACK[0x4F88]);
}

uint64_t sub_100CFA3E0()
{
  unsigned int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(v0 ^ 0x6090A2D0 ^ ((v0 > 0x984E6513) * (v0 - 1620048136)))))();
}

uint64_t sub_100CFA428@<X0>(int a1@<W2>, uint64_t a2@<X3>, char a3@<W5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;

  v10 = v7 - 1;
  v11 = (((v10 + (_DWORD)a6 + 8) * a1) ^ (((v10 + a6 + 8) * a1) >> 16)) * a1;
  *(_BYTE *)(v10 + a6 + a2) = *(_BYTE *)(a5 + (v11 >> 24)) ^ *(_BYTE *)(v6 + v10) ^ *(_BYTE *)(a4 + (v11 >> 24)) ^ *(_BYTE *)(v9 + (v11 >> 24) + (v8 ^ 0x55DCu)) ^ v11 ^ ((((((v10 + (_DWORD)a6 + 8) * a1) ^ (((v10 + a6 + 8) * a1) >> 16)) * a1) >> 24) * a3);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((13491 * (v10 == 0)) ^ v8)))();
}

uint64_t sub_100CFA49C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((104
                                          * (((STACK[0x6508] + 107) ^ (STACK[0xA9E0]
                                                                                      - 0x5D3BF0420E08485FLL < STACK[0x4470])) & 1)) ^ LODWORD(STACK[0x31B0])))
                            - ((STACK[0x6508] - 3187) | 0x489C)
                            + 19611))();
}

uint64_t sub_100CFA514@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v10;

  v2 = ((2 * v1) ^ 0xA2C40FBDF1F78A72) + a1;
  v3 = STACK[0x4370] - v2;
  v4 = STACK[0x4368] - v2;
  v5 = STACK[0x4360] - v2;
  v6 = STACK[0x4378] - v2;
  v10 = v3 < 0x10 || v4 < 0x10 || v5 < 0x10 || v6 < 0x10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((485 * v10) ^ v1)) - 8))(4294967247, 1844761970, 2450201599, STACK[0x4468], STACK[0x4460], STACK[0x4458]);
}

uint64_t sub_100CFA5B4(char a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v10 = *(_BYTE *)(a5 + v9);
  v11 = v9 - 1;
  *(_BYTE *)(v7 + v11) = *(_BYTE *)(a6 + v11) ^ *(_BYTE *)(a7 + v11) ^ (v11 * a1) ^ v10 ^ *(_BYTE *)(a4 + v11);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v11 == 0) * (((v8 + a2) & a3) + 10918)) ^ v8)) - 8))();
}

uint64_t sub_100CFA60C(uint64_t a1, int a2, int a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((84
                                          * (a3
                                           + (((v4 ^ 0xD4DA681) + 1260384637) ^ ((v4 ^ 0xD09D05D9) - 1764797915) ^ (a2 + ((86 * (v3 ^ 0x4529) + 1184223779) ^ v4) + 3429)) != -326076094)) ^ v3 ^ 0x6080))
                            - 4))();
}

uint64_t sub_100CFA6D0@<X0>(int a1@<W5>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;

  v11 = v6 < 0xEC907C97;
  v12 = v5 + a3;
  v13 = ((((_DWORD)v12 + 8) * (v4 + 1772479539)) ^ (((v12 + 8) * (v4 + 1772479539)) >> 16)) * a1;
  *(_BYTE *)(v12 + a2) = *(_BYTE *)(v9 + (v13 >> 24)) ^ *(_BYTE *)(v3 + v5) ^ *(_BYTE *)(v8 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v10 + 1) ^ v13 ^ (((((((_DWORD)v12 + 8) * (v4 + 1772479539)) ^ (((v12 + 8) * (v4 + 1772479539)) >> 16)) * a1) >> 24) * v7);
  v14 = v5 + 1;
  if (v11 == v14 > 0x136F8368)
    v11 = v14 - 326075241 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((84 * v11) ^ v4)) - 4))();
}

uint64_t sub_100CFA788()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6883)))();
}

uint64_t sub_100CFA7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((494 * (*(_DWORD *)(a5 + 1340) == ((v6 + v5 + 3617) & 0xD1F4F7F) + (v5 ^ 0xFFFFB85E))) ^ v5)))();
}

uint64_t sub_100CFA834()
{
  int v0;
  uint64_t (*v1)(uint64_t);

  v1 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 7999)) - 4);
  STACK[0x7DB0] = (v0 + 2355) - 6581 + *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 1150));
  return v1(7041);
}

uint64_t sub_100CFA8AC()
{
  int v0;
  uint64_t (*v1)(uint64_t);

  v0 = STACK[0x6508] - 1069;
  v1 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x23FC))
                                       - (STACK[0x6508] ^ 0x1072));
  STACK[0x7DB0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return v1(7041);
}

uint64_t sub_100CFA910@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;

  LODWORD(STACK[0xC20C]) = v4;
  STACK[0xC3C8] = a1;
  LODWORD(STACK[0x9BBC]) = v3;
  STACK[0x8F60] = v5;
  STACK[0x8620] = v2;
  v7 = STACK[0xC768];
  v8 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x7868] = (unint64_t)v8;
  STACK[0x96B8] = (unint64_t)(v8 + 16);
  STACK[0xB678] = (unint64_t)(v8 + 32);
  STACK[0x71D0] = (unint64_t)(v8 + 48);
  STACK[0xA9E0] = (unint64_t)(v8 + 0x5D3BF0420E08489FLL);
  STACK[0xC768] = v7 + 80;
  STACK[0x8998] = 0;
  STACK[0xCAC8] = 0;
  LODWORD(STACK[0x71DC]) = 0;
  STACK[0xB000] = 0;
  STACK[0xA770] = 0;
  LODWORD(STACK[0xAD6C]) = 0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((((v1 - 88) ^ (a1 == v6)) & 1) * ((v1 - 2355) ^ 0x55EC)) ^ v1)))();
}

uint64_t sub_100CFAA40(int a1)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  v2 = v1 | 0x10ELL;
  v3 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((_DWORD)v2 != -1798472072) * a1) ^ ((int)v2 + 2043)))
                            - ((((_DWORD)v2 + 5281) | 0x21BCu) ^ 0x39B4)))();
}

uint64_t sub_100CFAAB0()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 - 11325 + ((v0 + 11576) | 0x928))) - 8))();
}

uint64_t sub_100CFAB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  int v11;

  v4 = a3 - 0x5D3BF0420E0858D5 + (v3 - 15401);
  v5 = v4 - STACK[0x4458];
  v8 = (unint64_t)(v4 - a2) >= 0x10;
  v6 = v4 - STACK[0x4358];
  v7 = v4 - STACK[0x4468];
  v8 = v8 && v5 >= 0x10;
  v11 = !v8 || v6 < ((210 * (v3 ^ 0x4CC1u)) ^ 0x4D0CuLL) || v7 < 0x10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                                                          + 8 * ((387 * v11) ^ v3))
                                                                              - 4))(a1, 4294951770, 6888, 4294967247, -4213);
}

uint64_t sub_100CFABAC(uint64_t a1, int a2, int a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = v10 + a5 + (v9 + a2);
  *(_BYTE *)(v8 + v10) = (v10 * a4) ^ *(_BYTE *)(a7 + v10) ^ *(_BYTE *)(v11 + v10) ^ *(_BYTE *)(a6 + v10) ^ *(_BYTE *)(a8 + v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v12 == 16) * a3) ^ v9)) - 4))();
}

uint64_t sub_100CFAC04@<X0>(uint64_t a1@<X8>)
{
  int v1;

  *(_OWORD *)(a1 - 0x5D3BF0420E08485FLL) = xmmword_1015071E0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - ((v1 - 410813857) & 0x187C71FE) + 4206))();
}

uint64_t sub_100CFAC54()
{
  _OWORD *v0;
  int v1;

  *v0 = xmmword_1015071E0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 5026)) - 8))();
}

uint64_t sub_100CFAC7C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;

  v4 = v1 + 261;
  v5 = STACK[0x71D0];
  v6 = STACK[0xA770] + 4;
  v7 = *(_QWORD *)STACK[0x8F60] + 4;
  v8 = ((LODWORD(STACK[0xAD6C]) - 4) ^ 0x536FB7A9)
     - 302256136
     + (((LODWORD(STACK[0xAD6C]) - 4) << (v1 - 117)) & 0xA6DF6F52);
  v9 = 1655432393 * ((((v3 - 240) | 0x6F9A57A0) - ((v3 - 240) & 0x6F9A57A0)) ^ 0x90B956DE);
  *(_DWORD *)(v2 + 808) = v9 + v1 + 17778;
  *(_DWORD *)(v2 + 796) = v8 ^ v9;
  *(_QWORD *)(v2 + 784) = v7;
  *(_QWORD *)(v2 + 800) = v6;
  *(_QWORD *)(v2 + 816) = v5;
  *(_QWORD *)(v2 + 824) = a1;
  v10 = ((uint64_t (*)(uint64_t))*(&off_1015B46D0 + v1 - 2034))(v3 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 12))(v10);
}

uint64_t sub_100CFAD84()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((STACK[0xB000] != 0) * ((v0 ^ 0x3CA5) + 17703 + ((v0 - 11391) | 0x1022))) ^ v0)))();
}

uint64_t sub_100CFADD0()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 7261)))(v1);
}

uint64_t sub_100CFADF4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((31727 * (STACK[0xA770] != 0)) ^ (v0 + 2221))))();
}

uint64_t sub_100CFAE38@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = STACK[0x6AD8];
  v4 = *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  LODWORD(STACK[0x1D358]) = (v1 + 427180595) ^ (2142736129
                                              * ((v2 - 364820241 - 2 * ((v2 - 240) & 0xEA4149DF)) ^ 0x8919DDD6));
  STACK[0x1D350] = a1;
  STACK[0x1D360] = v4 ^ (2142736129
                       * ((v2 + 0x39DB7E35EA4148EFLL - 2 * ((v2 - 240) & 0x39DB7E35EA4149DFLL)) ^ 0x44C076398919DDD6));
  v5 = ((uint64_t (*)(uint64_t))STACK[0x5530])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(v1 ^ 0x1011 ^ ((v1 + 1893) | 0x1A9))))(v5);
}

uint64_t sub_100CFAEE0()
{
  unsigned int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)((22226 * (STACK[0x8998] != ((v0 - 6483) | 0x1020) + (v0 ^ 0xFFFFFFFFFFFFF623))) ^ v0)))();
}

uint64_t sub_100CFAF38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v3 = STACK[0x6AD8];
  STACK[0xEE18] = ((v1 + 3) ^ 0xFFFFFFFFFFFFEF8ALL) + *(_QWORD *)(STACK[0x6AD8] + 8 * v1);
  STACK[0xEE30] = (a1 ^ 0xDFBACFEBFC7D6FFFLL) + 0x6F57F7DF2FE7FDEDLL + ((2 * a1) & 0xBF759FD7F8FADFFELL);
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((((v2 - 240) | 0x4354BAC3) - (v2 - 240) + ((v2 - 240) & 0xBCAB4538)) ^ 0x7EC6659A)
                          + v1
                          + 3;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(v1 ^ 0x9DA)))(v4);
}

uint64_t sub_100CFB030()
{
  STACK[0xC768] -= 80;
  return ((uint64_t (*)(void))STACK[0x7DB0])();
}

uint64_t sub_100CFB054()
{
  int v0;
  int v1;
  int v2;

  v1 = STACK[0x6508] ^ 0x1066;
  v2 = STACK[0x6508] + 2147;
  LODWORD(STACK[0x710C]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((20085 * (v0 == 177 * v1 - 1926395561)) ^ v2)) - 12))();
}

uint64_t sub_100CFB0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, int a5@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((9737 * (a5 == -2050606517)) ^ (a5 + 4814))) - (a5 + 22083) + 24903))(a1, a2, a3, 577628422, 606767441, 1104152011, a4, 3190810030);
}

uint64_t sub_100CFB128()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((20253
                                          * (((STACK[0x9FB8] == 0xC27AFEAA03E150FLL) ^ (((v0 - 85) | 0xE) - 64)) & 1)) ^ (v0 + 2425)))
                            - 8))();
}

uint64_t sub_100CFB18C()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 ^ 0x2AC0u) + 13095))(v1);
}

uint64_t sub_100CFB1CC()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((2 * (((STACK[0xCD18] == v1) ^ ((v0 + 1) ^ (v0 - 38))) & 1)) & 0xEF | (16 * (((STACK[0xCD18] == v1) ^ ((v0 + 1) ^ (v0 - 38))) & 1))) ^ v0))
                            - 12))();
}

uint64_t sub_100CFB214()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 8999) | 0x820))
                                          - ((((v0 - 8999) | 0x820) - 6182) | 0x1074u)
                                          + 4206))(v1);
}

uint64_t sub_100CFB26C()
{
  return ((uint64_t (*)(void))STACK[0xC118])();
}

uint64_t sub_100CFB27C()
{
  int v0;
  int v1;
  int v2;
  int v3;

  v1 = (STACK[0x6508] - 4212) | 0xB10;
  v2 = STACK[0x6508] + 10305;
  v3 = STACK[0x6508] + 3165;
  LODWORD(STACK[0x9664]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((32336 * (v0 == (v1 ^ 0x8D2D50A2) + v2)) ^ v3)) - 12))();
}

uint64_t sub_100CFB2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ 0x16CC)) - 12))(a1, a2, a3, 577628422, 606767441, 1104152011, a7, 3190810030);
}

uint64_t sub_100CFB348@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (((STACK[0xCB10] == 0xC27AFEAA03E150FLL) * ((2 * a1) ^ 0x7108)) ^ a1)))();
}

uint64_t sub_100CFB394@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  v1 = (a1 ^ 0x28C1) + 10331;
  v2 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v1))(v2);
}

uint64_t sub_100CFB3D0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((58 * (STACK[0xCDE0] != 0xC27AFEAA03E150FLL)) ^ (v0 + 786)))
                            - ((v0 - 408057977) & 0x18527FF3)
                            + 6117))();
}

uint64_t sub_100CFB434()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 898003177) & 0x358673FA))
                                          - ((((v0 - 898003177) & 0x358673FA) + 313) | 0x330u)
                                          + 6117))(v1);
}

uint64_t sub_100CFB494()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 == -1926392729) | (2 * (v1 == -1926392729))) ^ v0))
                            - (((v0 - 2013) | 0x62u) ^ 0x107ALL)))();
}

uint64_t sub_100CFB4D8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;

  v3 = STACK[0xC8B0];
  v4 = (v3 ^ 0xCCCBFC45) & (2 * (((v0 - 1915) ^ 0x8CEBEEE0) & v3)) ^ ((v0 - 1915) ^ 0x8CEBEEE0) & v3;
  v5 = ((2 * (v3 ^ 0xD41F3161)) ^ 0xB1E99FEE) & (v3 ^ 0xD41F3161) ^ (2 * (v3 ^ 0xD41F3161)) & 0x58F4CFF6;
  v6 = (v5 ^ 0x18E08EE1) & (4 * v4) ^ v4;
  v7 = ((4 * (v5 ^ 0x48144011)) ^ 0x63D33FDC) & (v5 ^ 0x48144011) ^ (4 * (v5 ^ 0x48144011)) & 0x58F4CFF4;
  v8 = (v7 ^ 0x40D00FC0) & (16 * v6) ^ v6;
  v9 = ((16 * (v7 ^ 0x1824C023)) ^ 0x8F4CFF70) & (v7 ^ 0x1824C023) ^ (16 * (v7 ^ 0x1824C023)) & 0x58F4CFF0;
  v10 = v8 ^ 0x58F4CFF7 ^ (v9 ^ 0x844CF00) & (v8 << 8);
  v11 = 2142736129 * ((((v2 - 240) | 0x955F3BA) - ((v2 - 240) & 0x955F3BA)) ^ 0x6A0D67B3);
  *(_DWORD *)(v1 + 792) = (LODWORD(STACK[0xC8B0]) ^ (2
                                                   * ((v10 << 16) & 0x58F40000 ^ v10 ^ ((v10 << 16) ^ 0x4FF70000) & (((v9 ^ 0x50B00087) << 8) & 0x58F40000 ^ 0x8300000 ^ (((v9 ^ 0x50B00087) << 8) ^ 0xF4CF0000) & (v9 ^ 0x50B00087)))) ^ 0xD25942C6)
                        - v11;
  *(_DWORD *)(v1 + 796) = v11 + v0 + 9812;
  v12 = ((uint64_t (*)(uint64_t))((char *)*(&off_1015B46D0 + (v0 ^ 0x100F)) - 8))(v2 - 240);
  *(_QWORD *)STACK[0xABB8] = *(_QWORD *)(v1 + 784);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))(v12);
}

uint64_t sub_100CFB6E8()
{
  return ((uint64_t (*)(void))STACK[0xBB60])();
}

uint64_t sub_100CFB700()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = STACK[0x6508];
  LODWORD(STACK[0xBE54]) = v2;
  v4 = STACK[0x81E0];
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (((int)v3 + 1320753020) ^ 0x4EB9378ELL)) - 4;
  LODWORD(STACK[0xEE20]) = (v3 + 1320753020) ^ 0x1EE9;
  LODWORD(STACK[0xEE50]) = (v3 + 1320753020) ^ 0x1002;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v3 + 1320753020;
  STACK[0xEE30] = v4;
  STACK[0xEE58] = 0xC7347E2AAE803569;
  *(_QWORD *)(v0 + 792) = &STACK[0xEE18];
  *(_DWORD *)(v0 + 784) = -299994601
                        - 1705718857 * ((((2 * (v1 - 240)) | 0xBF307A54) - (v1 - 240) + 543670998) ^ 0xE20AE273)
                        + v3;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v0 + 788)))(v6);
}

uint64_t sub_100CFB7F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  v2 = STACK[0x6508];
  v3 = STACK[0x81E0];
  v4 = STACK[0x6508] + 366928398;
  v5 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] + 366931290) ^ 0x15DEEDAC)) - 4;
  LODWORD(STACK[0xEE20]) = v2 + 366930937;
  LODWORD(STACK[0xEE50]) = v4;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = v2 + 366931290;
  STACK[0xEE30] = v3;
  STACK[0xEE58] = 0xD1398C4B817DF4DELL;
  *(_DWORD *)(v0 + 784) = -299994601
                        - 1705718857 * ((((2 * (v1 - 240)) | 0x42E8E584) - (v1 - 240) + 1586203966) ^ 0x9CE6AD9B)
                        + v2;
  *(_QWORD *)(v0 + 792) = &STACK[0xEE18];
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v0 + 788)))(v6);
}

uint64_t sub_100CFB8C8()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  int32x4_t v12;
  int32x4_t v13;
  int32x4_t v14;
  int32x4_t v15;
  int32x4_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int32x4_t v23;
  int8x16_t v24;
  _QWORD *v25;
  unsigned int v26;
  unint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int8x16x4_t v32;

  v0 = 0;
  v1 = STACK[0x6508] + 4443;
  v2 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x33801DD0));
  v3 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                 + ((v2 ^ 0x33801DD1u) & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v2 ^ 0x33801DD1u;
  v4 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v3 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v3;
  v5 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v4 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v4;
  v6 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v5 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v5;
  v7 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v6 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v6;
  v8 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v7 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v7;
  v9 = *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL) + (v8 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56))) ^ v8;
  v10 = STACK[0xBAE0];
  v11 = v9 ^ (864034257 * STACK[0xBAE0]) ^ *(_DWORD *)((qword_1015FB2C8 ^ 0xB51DBFDD563EF1CALL)
                                                     + (v9 & (qword_1015FA6A8 ^ 0xDCF8BB15C9174D56)));
  v12 = vdupq_n_s32(v11);
  v13 = (int32x4_t)xmmword_1015070D0;
  v14 = (int32x4_t)xmmword_1015070E0;
  v15 = (int32x4_t)xmmword_1015070F0;
  v16 = (int32x4_t)xmmword_101507100;
  v17 = *(int8x16_t *)&STACK[0x4660];
  v18 = *(int8x16_t *)&STACK[0x4620];
  v19 = *(int8x16_t *)&STACK[0x4610];
  v20.i64[0] = 0x9393939393939393;
  v20.i64[1] = 0x9393939393939393;
  v21 = *(int8x16_t *)&STACK[0x4650];
  v22 = *(int8x16_t *)&STACK[0x4950];
  v23.i64[0] = 0x1000000010;
  v23.i64[1] = 0x1000000010;
  do
  {
    v24 = *(int8x16_t *)(v10 + v0);
    v32.val[1] = veorq_s8(veorq_s8(vqtbl1q_s8(v24, v21), (int8x16_t)v12), (int8x16_t)vmulq_s32(vaddq_s32(v15, v12), vsubq_s32(v15, v12)));
    v32.val[0] = veorq_s8(veorq_s8(vqtbl1q_s8(v24, v17), (int8x16_t)v12), (int8x16_t)vmulq_s32(vaddq_s32(v16, v12), vsubq_s32(v16, v12)));
    v32.val[2] = veorq_s8(veorq_s8(vqtbl1q_s8(v24, v18), (int8x16_t)v12), (int8x16_t)vmulq_s32(vaddq_s32(v14, v12), vsubq_s32(v14, v12)));
    v32.val[3] = veorq_s8(veorq_s8(vqtbl1q_s8(v24, v19), (int8x16_t)v12), (int8x16_t)vmulq_s32(vaddq_s32(v13, v12), vsubq_s32(v13, v12)));
    *(int8x16_t *)(v10 + v0) = vmulq_s8(vqtbl4q_s8(v32, v22), v20);
    v0 += 16;
    v16 = vaddq_s32(v16, v23);
    v15 = vaddq_s32(v15, v23);
    v14 = vaddq_s32(v14, v23);
    v13 = vaddq_s32(v13, v23);
  }
  while (v0 != 16);
  v25 = (_QWORD *)(v10 + 8);
  v26 = 1;
  for (i = 3; i > 2; --i)
  {
    v28 = 8 * (16777619 * ((v11 + v26) ^ v11) % v26);
    v29 = *(_QWORD *)(v10 + v28) ^ *v25;
    *v25 = v29;
    v30 = *(_QWORD *)(v10 + v28) ^ v29;
    *(_QWORD *)(v10 + v28) = v30;
    *v25 ^= v30;
    v25 += 0xFFFFFFFFLL;
    --v26;
  }
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1) - 12))(0x7FFFFFFF8);
}

uint64_t sub_100CFBAFC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((STACK[0x6508] - 4001) * (v0 == -1926392729)) ^ LODWORD(STACK[0x3910])))
                            - 12))();
}

uint64_t sub_100CFBB3C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((STACK[0x92F8] == 0) * ((LODWORD(STACK[0x321C]) ^ 0x5998) - 863)) | LODWORD(STACK[0x321C])))
                            - ((2 * (LODWORD(STACK[0x321C]) ^ 0x5998u)) ^ 0x6EALL)))();
}

uint64_t sub_100CFBB84()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v0 - 861) | 0x1062) ^ 0x4713) * (STACK[0x7C58] != 0)) ^ (v0 + 13068)))
                            - 12))();
}

uint64_t sub_100CFBBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 - 492386310) & 0x1D5951EF ^ 0x6C64) + v6 - 13626)) - 12))(STACK[0x6E08], a2, a3, a4, a5, a6, 1772495178);
}

uint64_t sub_100CFBC34@<X0>(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (((a2 > a1) * ((283 * (v2 ^ 0x507A)) ^ (v2 - 418912057) & 0x18F7E6FD ^ 0x3C)) ^ v2)))();
}

uint64_t sub_100CFBC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 ^ (((((v8 ^ 0x7C51937D) - 2041149912) ^ ((v8 ^ 0x768109E8) - 1937367885) ^ ((v8 ^ 0x251CA71F) - 551833018)) - 2087346042 == v10 + 3273) * v9))) - 8))(a1, a2, a3, a4, a5, a6, a7, 1772489163);
}

uint64_t sub_100CFBD2C@<X0>(uint64_t a1@<X0>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  _QWORD *v10;
  _DWORD *v11;
  char *v12;
  _BYTE *v13;
  char v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  _BOOL4 v18;

  v12 = (char *)(a4 + v7);
  v13 = (_BYTE *)(a1 + v7);
  v14 = *v12;
  v15 = *(_DWORD *)(*v10 + (*v11 & v8));
  v16 = ((((v15 ^ v12) & 0x7FFFFFFF) * a3) ^ ((((v15 ^ v12) & 0x7FFFFFFF) * a3) >> 16))
      * (v4 ^ (a2 + 2170));
  v17 = ((((v15 ^ v13) & 0x7FFFFFFF) * a3) ^ ((((v15 ^ v13) & 0x7FFFFFFF) * a3) >> 16)) * a3;
  *v13 = *(_BYTE *)(STACK[0x5118] + (v16 >> 24)) ^ v14 ^ *(_BYTE *)((v16 >> 24) + STACK[0x5108] + 1) ^ *(_BYTE *)(STACK[0x5110] + (v16 >> 24)) ^ *(_BYTE *)(STACK[0x5118] + (v17 >> 24)) ^ *(_BYTE *)((v17 >> 24) + STACK[0x5108] + 1) ^ *(_BYTE *)(STACK[0x5110] + (v17 >> 24)) ^ v16 ^ v17 ^ (123 * BYTE3(v16)) ^ (123 * BYTE3(v17));
  v18 = v9 + v7 + 3274 < v5;
  if (v5 < v6 != v7 + 1 > 0xA69F36A8)
    v18 = v5 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((35 * !v18) ^ v4)) - 8))();
}

uint64_t sub_100CFBE40()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((3900 * ((v0 ^ 0x2FCC3D8A) != 602 * (v1 ^ 0x202B) - 4214)) ^ v1))
                            - 8))();
}

uint64_t sub_100CFBE9C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 ^ 0x305Au) + 15024)) - 4))();
}

uint64_t sub_100CFBEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  _QWORD *v6;
  _DWORD *v7;
  unsigned int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v8 = v2 - 1;
  v9 = *(_DWORD *)(*v6 + (*v7 & v5));
  v10 = ((((((_DWORD)a2 + v8) ^ v9) & 0x7FFFFFFF) * v4) ^ (((((a2 + v8) ^ v9) & 0x7FFFFFFF) * v4) >> 16))
      * v4;
  v11 = ((((((_DWORD)a1 + v8) ^ v9) & 0x7FFFFFFF) * v4) ^ (((((a1 + v8) ^ v9) & 0x7FFFFFFF) * v4) >> 16))
      * v4;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(STACK[0x4E38] + (v10 >> 24)) ^ *(_BYTE *)(a2 + v8) ^ *(_BYTE *)((v10 >> 24)
                                                                                                 + STACK[0x4E48]
                                                                                                 + 6) ^ *(_BYTE *)(STACK[0x4E40] + (v10 >> 24)) ^ *(_BYTE *)(STACK[0x4E38] + (v11 >> 24)) ^ *(_BYTE *)((v11 >> 24) + STACK[0x4E48] + 6) ^ *(_BYTE *)(STACK[0x4E40] + (v11 >> 24)) ^ v10 ^ v11 ^ (-19 * BYTE3(v10)) ^ (-19 * BYTE3(v11));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((38 * (v8 != 0)) | (v3 + 14986))) - 4))();
}

uint64_t sub_100CFBFA0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 16896)) - 4))();
}

uint64_t sub_100CFBFCC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1529) ^ 0x2478))
                            - ((STACK[0x6508] - 3188) | 0x90)
                            + 1166))();
}

uint64_t sub_100CFC05C()
{
  unsigned int v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;

  STACK[0x6FE8] = v8;
  LODWORD(STACK[0xD054]) = v5;
  STACK[0xAB28] = v3;
  LODWORD(STACK[0x8710]) = v6;
  STACK[0xAAB0] = v4;
  LODWORD(STACK[0x92B4]) = v2;
  STACK[0x9EF0] = v1;
  LODWORD(STACK[0x6CD4]) = v7;
  v9 = STACK[0xC768];
  v10 = (unint64_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  STACK[0x9D78] = (unint64_t)v10;
  STACK[0xC768] = v9 + (v0 ^ 0x482);
  *v10 = 0;
  v10[1] = 0;
  STACK[0x7E80] = (unint64_t)v10 + 4;
  v11 = STACK[0x6AD8];
  STACK[0x86A0] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (int)(v0 + 8928)) - 8))();
}

uint64_t sub_100CFC12C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a1))();
}

uint64_t sub_100CFC140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1660) ^ 0x2637)) - 12))(STACK[0x8BD0], a2, a3, a4, a5, a6, 1672555516);
}

uint64_t sub_100CFC228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v5 + v2 - 0x283D8DF93248033CLL <= (unint64_t)(a1 + a2)) * v4) ^ v3))
                            - (((v3 ^ 0x7C33u) - 1672581939) ^ 0x9C4ECFBFLL)))();
}

uint64_t sub_100CFC284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * ((21 * (14 * (v4 ^ 0x63C3) - 1080593710 == v5)) ^ v4)))(a1, a2, a3, a4, 1772489163, 3613388764, 4294967229, 146);
}

uint64_t sub_100CFC2EC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 ^ 0x7298) + 15027)) - 12))();
}

uint64_t sub_100CFC30C@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W5>, char a4@<W6>, char a5@<W7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  int v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;

  v15 = v7 - 1;
  v16 = (((a1 + a6 + v15) ^ *(_DWORD *)(*v9 + (*v11 & a3))) & 0x7FFFFFFF) * a2;
  v17 = (v16 ^ HIWORD(v16)) * a2;
  *(_BYTE *)(a1 + a6 + v15) = *(_BYTE *)(v12 + v15 + v6) ^ *(_BYTE *)(v14 + (v17 >> 24)) ^ *(_BYTE *)((v17 >> 24) + v10 + 2) ^ *(_BYTE *)(v13 + (v17 >> 24)) ^ v17 ^ (BYTE3(v17) * a4) ^ a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((30182 * (v15 != 0)) ^ (v8 + 11865))) - 12))();
}

uint64_t sub_100CFC3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  unsigned int v9;

  v9 = ((((v8 + 275049880) ^ v7) - 1178145585) ^ ((v7 ^ 0xF09F80B3) - 437595857) ^ (((((a7 + v8 + 1135) | 0x1050)
                                                                                    - 474239438) ^ v7)
                                                                                  - 154210506))
     - 244581147;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(v8 ^ 0x9C4EF17F ^ (11 * ((((v9 - v8) | (v8 - v9)) & 0x80000000) == 0))))
                            - 12))();
}

uint64_t sub_100CFC498@<X0>(uint64_t a1@<X0>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  _BYTE *v21;
  unsigned int v22;
  unint64_t v23;

  v20 = v7 < v8;
  v21 = (_BYTE *)(a1 + a4 + v6);
  v22 = ((v21 ^ *(_DWORD *)(*v15 + (*v17 & v10))) & 0x7FFFFFFF) * a3;
  v23 = (v22 ^ HIWORD(v22)) * a3;
  if (v20 == v6 + 1 > a2 + 1096)
    v20 = v9 + v6 + 2299 < v7;
  *v21 = *(_BYTE *)(v12 + v6 + v4) ^ *(_BYTE *)(v19 + (v23 >> 24)) ^ *(_BYTE *)(v16 + 7 * (v5 ^ v11)
                                                                                    - 4212
                                                                                    + (v23 >> 24)) ^ *(_BYTE *)(v18 + (v23 >> 24)) ^ v23 ^ (BYTE3(v23) * v13) ^ v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((11 * !v20) | v5)) - 12))();
}

uint64_t sub_100CFC570()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6925))
                            - ((STACK[0x6508] - 3093) | 0x1102)
                            + 5467))();
}

uint64_t sub_100CFC5B0()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x6AB0]) = v1[388];
  v2 = v1[395];
  v3 = v1[396];
  v4 = v1[397];
  v5 = v1[399];
  STACK[0x6AC0] = v1[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 - 157) | 0x210u) + 5842))(v2, v3, v4, v5, STACK[0xE4E8], v1[407], STACK[0xE4F8], v1[409]);
}

uint64_t sub_100CFC64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;

  v4 = STACK[0x8BD0];
  STACK[0x6AC0] = LODWORD(STACK[0xE51C]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x3CA0]))
                                                                                       - 4))(a1, a2, a3, a4, v4);
}

uint64_t sub_100CFC684@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  _DWORD *v2;

  LODWORD(STACK[0x6AB0]) = v2[388];
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a2 + 1261)) - ((a2 - 1534660991) & 0x5B7917DE) + 5842))(v2[395], v2[396], v2[397], v2[399], a1, v2[407], STACK[0xE4F8], v2[409]);
}

uint64_t sub_100CFC71C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((13966 * (v1 == (((v0 - 5808) | 0x1050) ^ 0x8D2D8411))) ^ v0))
                            - 12))();
}

uint64_t sub_100CFC768()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 11297)))();
}

uint64_t sub_100CFC79C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X4>, int a6@<W5>, unint64_t a7@<X6>, int a8@<W7>, unint64_t a9@<X8>)
{
  char v9;
  char v10;
  char v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  unsigned int v23;
  _BOOL4 v24;

  if (v23 > 0x258DDB23 != v16 - 691033731 < (v22 - 630057882))
    v24 = v23 > 0x258DDB23;
  else
    v24 = v16 - 691033731 < v23 - 630053668;
  if (v18 != -1926392729)
    v24 = 0;
  *(_DWORD *)(v20 + 1636) = a8;
  *(_BYTE *)(v20 + 1635) = v19;
  *(_DWORD *)(v20 + 1628) = a6;
  STACK[0xE4F8] = a7;
  *(_DWORD *)(v20 + 1616) = v18;
  STACK[0xE4E8] = a5;
  *(_DWORD *)(v20 + 1600) = STACK[0x6AC0];
  *(_DWORD *)(v20 + 1596) = a4;
  *(_DWORD *)(v20 + 1592) = v21;
  *(_DWORD *)(v20 + 1588) = a3;
  *(_DWORD *)(v20 + 1584) = a2;
  *(_DWORD *)(v20 + 1580) = a1;
  *(_DWORD *)(v20 + 1576) = v17;
  *(_BYTE *)(v20 + 1575) = v11;
  *(_DWORD *)(v20 + 1568) = v15;
  *(_DWORD *)(v20 + 1564) = v12;
  *(_DWORD *)(v20 + 1560) = v14;
  *(_DWORD *)(v20 + 1556) = v13;
  *(_DWORD *)(v20 + 1552) = STACK[0x6AB0];
  STACK[0xE4A8] = a9;
  *(_BYTE *)(v20 + 1539) = v10;
  *(_BYTE *)(v20 + 1538) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((21500 * v24) ^ (v22 + 1632))) - 12))();
}

uint64_t sub_100CFC8A0()
{
  int v0;
  int v1;
  unsigned int v2;
  int v3;
  __int16 v4;
  __int16 v5;

  v2 = (((v0 - 60980062) << (((v1 - 30) ^ 0xF1) + 88)) & 0xFEE7CF7C) + ((v0 - 60980062) ^ 0xFF73E7BE) + 9181250;
  v3 = ((*(unsigned __int8 *)(STACK[0xE498] + v2) ^ 0x92) << ((v1 - 30) ^ 0x50)) | *(unsigned __int8 *)(STACK[0xE498] + v2 + 1) ^ 0x92;
  LOWORD(v3) = (v3 ^ 0x37BB) - 13747 + ((2 * v3) & 0x6F76);
  LODWORD(STACK[0xE510]) = v0 + 1128532174;
  v4 = v3 & 0xC74A ^ 0xA5E9;
  v5 = v3 ^ 0x7DF8;
  LOWORD(STACK[0xE50E]) = v3;
  LODWORD(STACK[0xE514]) = (unsigned __int16)(v3 ^ (2
                                                  * (v5 & (2
                                                         * (v5 & (2
                                                                * (v5 & (2
                                                                       * (v5 & (2
                                                                              * (v5 & (2
                                                                                     * (v5 & (2
                                                                                            * (v5 & (2 * (v5 & (2 * (v5 & (2 * (v5 & (2 * (v5 & (2 * (v5 & (2 * (((2 * (v4 ^ v3 & 0x3AB2)) ^ 0x7160) & v5 ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4)) ^ v4))) ^ 0x8D2D532D;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((241 * ((unsigned __int16)v3 == 520)) ^ (v1 + 14050))))();
}

uint64_t sub_100CFCA44()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v5 = (v1 + 852432694) & 0xCD30B7F6;
  *(_DWORD *)(v3 + 1652) = v2
                         - 1926392729
                         + (((v0 ^ 0x3A4B8586) + 1217997141) ^ ((v0 ^ 0xCC66B32E) - 1095491587) ^ ((v0 ^ v1 ^ 0x57DF ^ v5 ^ 0xF62DF742)
                                                                                                 - 2063639247))
                         + 3;
  v6 = v2
     - 1926392729
     + (((v0 ^ 0x3A4B8586) + 1217997141) ^ ((v0 ^ 0xCC66B32E) - 1095491587) ^ ((v0 ^ v1 ^ 0x57DF ^ v5 ^ 0xF62DF742)
                                                                             - 2063639247))
     + 352974460;
  v7 = v6 < 0x18AC71D8;
  v8 = v6 > v4 + 413954520;
  if (v4 > 0xE7538E27 != v7)
    v8 = v7;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((2218 * !v8) ^ v1)))();
}

uint64_t sub_100CFCB3C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 20679)) - 12))();
}

uint64_t sub_100CFCB54()
{
  int v0;
  int v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((121 * (v0 < (char)((v1 - 23) & 0xA5 ^ 0x95))) ^ (v1 + 17735)))
                                          - ((v1 + 778029945) & 0xD1A066BE ^ 0x42AALL)))(158);
}

uint64_t sub_100CFCBD8()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v0 < -119) ^ (v1 - 38)) & 1) * (v1 ^ 0x2023)) ^ v1))
                            - 8))();
}

uint64_t sub_100CFCC14()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ 0x615B ^ (49 * (v0 > -117))))
                            - (((v1 ^ 0x615B) - 11996) | 0x140u)
                            + 5050))();
}

uint64_t sub_100CFCC58()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((13 * ((v1 + 6854) ^ 0x58B9)) ^ 0x3BF3) * (v0 < -114)) ^ (v1 + 6854)))
                            - ((v1 + 7823) ^ 0x5FE5)))();
}

uint64_t sub_100CFCCA4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (16375 * (v0 < -115))))
                            - ((v1 + 715748818) & 0xD5562F7C)
                            + 1336))();
}

uint64_t sub_100CFCCEC@<X0>(__int16 a1@<W8>)
{
  int v1;
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((19 * (((a1 == 524) ^ (((v1 - 127) ^ 0x66) * v2 + 1)) & 1)) ^ (v1 - 13951)))
                            - 12))();
}

uint64_t sub_100CFCD34()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x6AB0]) = *(_DWORD *)(v1 + 1552);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 ^ 0x159E) + 16448)) - 4))();
}

uint64_t sub_100CFCD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  LODWORD(STACK[0x6AB0]) = v8[388];
  v9 = v8[395];
  v10 = v8[396];
  v11 = v8[397];
  v12 = v8[399];
  STACK[0x6AC0] = v8[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - ((a8 - 1638) | 6u) + 4202))(v9, v10, v11, v12, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100CFCE18@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X4>, int a6@<W5>, unint64_t a7@<X6>, int a8@<W7>, unint64_t a9@<X8>)
{
  char v9;
  char v10;
  char v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  char v18;
  int v19;
  uint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  unsigned int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  LODWORD(STACK[0xB960]) = a8;
  LODWORD(STACK[0xD03C]) = a6;
  STACK[0xA5B0] = a7;
  STACK[0xA2E8] = a5;
  LODWORD(STACK[0xBE58]) = STACK[0x6AC0];
  LODWORD(STACK[0x9E3C]) = a4;
  LODWORD(STACK[0x916C]) = v21;
  LODWORD(STACK[0xA1C0]) = a3;
  LODWORD(STACK[0x750C]) = a2;
  LODWORD(STACK[0xD180]) = a1;
  LODWORD(STACK[0x83BC]) = v16;
  LOBYTE(STACK[0xAE0F]) = v11;
  LODWORD(STACK[0xBFE0]) = v14;
  LODWORD(STACK[0xA6F8]) = v13;
  LODWORD(STACK[0x8074]) = STACK[0x6AB0];
  STACK[0xD138] = a9;
  LOBYTE(STACK[0xB69F]) = v10;
  LOBYTE(STACK[0xBADF]) = v9;
  v22 = STACK[0x9E40] == 0x741361882D57745;
  LODWORD(STACK[0x9300]) = v15;
  LODWORD(STACK[0xA3E4]) = v12;
  v22 = v22 || v12 == -1926392729;
  if (v22)
    v23 = 1926417665;
  else
    v23 = v17;
  if (v15 == -1780616145 || v15 == -1327542884)
    v25 = -1926392729;
  else
    v25 = 1926417665;
  if (v23 == -1926392729)
    v26 = v25;
  else
    v26 = v23;
  v27 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((v19 - 100096294) ^ 0xFA08A7CE)) - 4;
  LODWORD(STACK[0xEE20]) = (v19 - 100096294) ^ 0x1008;
  LODWORD(STACK[0xEE50]) = v19 - 100096294;
  LODWORD(STACK[0xEE60]) = (v19 - 100096294) ^ 0x18;
  LODWORD(STACK[0x1D350]) = -299994601 - 1705718857 * ((v20 - 240) ^ 0x3D92DF59) + v19;
  LOBYTE(STACK[0x7C8F]) = v18;
  STACK[0xEE30] = v26;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v28 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v20 - 240);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * SLODWORD(STACK[0x1D354])))(v28);
}

uint64_t sub_100CFD018()
{
  unsigned __int8 v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((28309 * (v0 == (((STACK[0x6508] + 27) | 0x68) + 7))) ^ LODWORD(STACK[0x3E48])))
                            - 4))();
}

uint64_t sub_100CFD060()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0xB3A8] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(v0 ^ (17 * (v0 ^ 0x2C0)) ^ 0x2649 ^ (148
                                                                                   * ((v0 ^ 0xA9EC6E96) < 0xD157E18E))))
                            - 4))();
}

uint64_t sub_100CFD0D8()
{
  int v0;
  int v1;

  LODWORD(STACK[0x8708]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 == -1926392729) * (v0 - 3792)) ^ (v0 + 8315)))
                            - (v0 - 691)
                            + 3519))();
}

uint64_t sub_100CFD130()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(848);
  STACK[0xA2D8] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((32023 * (((v1 == 0) ^ (((v0 - 122) & 0xFE) + 77)) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_100CFD1A0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 3557) ^ 0x6098)) - 8))();
}

uint64_t sub_100CFD1C8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  unint64_t v4;

  v4 = STACK[0x6AD8];
  STACK[0xAF10] = *(_QWORD *)(STACK[0x6AD8] + 8 * v2) + a2;
  STACK[0xDA58] = a1;
  *(_QWORD *)(a1 + 416) = 0x59A8EEF074315627;
  *(_DWORD *)(a1 + 424) = -1926392729;
  *(_DWORD *)(a1 + 12) = -1926392729;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = -1926392729;
  *(_DWORD *)(a1 + 60) = -1926392729;
  *(_DWORD *)(a1 + 96) = -1926392729;
  STACK[0xD1B0] = *(_QWORD *)(v4 + 8 * (v3 - 953));
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((v3 - 953) ^ 0x1E5F)))(5121);
}

uint64_t sub_100CFD278()
{
  int v0;
  int v1;

  LODWORD(STACK[0xC09C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 == -1926392729) * ((v0 ^ 0x1DB5) + 19077)) ^ v0))
                            - 4))();
}

uint64_t sub_100CFD2BC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  int v8;

  v1 = a1 + 18767;
  v2 = (a1 - 68) | 0x44;
  v3 = 7 * ((a1 + 18767) ^ 0x59BAu);
  v4 = STACK[0xB5A0];
  STACK[0x9200] = STACK[0xB5A0];
  v5 = STACK[0x9C90];
  STACK[0x9768] = STACK[0x9C90];
  if (v4)
    v6 = v5 == 0x54A438AE3561A5ALL;
  else
    v6 = 1;
  v8 = v6 || *(_QWORD *)STACK[0x49D0] == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v8 * (v2 - 4199)) ^ v1)) - v3 + 877))();
}

uint64_t sub_100CFD360()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = LOBYTE(STACK[0x7C8F]);
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 40)) - 4;
  LODWORD(STACK[0xEE20]) = (v0 - 1694288834) ^ 0xEBD;
  LODWORD(STACK[0xEE50]) = v0 - 1694288834;
  STACK[0xEE30] = 0;
  STACK[0xEE58] = v2;
  LODWORD(STACK[0xEE60]) = (v0 - 1694288834) ^ 0x86;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601 - 1705718857 * ((v1 - 240) ^ 0x3D92DF59) + v0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100CFD430()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = LODWORD(STACK[0x9300]);
  v2 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x2EB0]) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x2EA8];
  LODWORD(STACK[0xEE50]) = STACK[0x2EB8];
  STACK[0xEE30] = 2514351151;
  STACK[0xEE58] = v1;
  LODWORD(STACK[0xEE60]) = STACK[0x2EAC];
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((2 * (v0 - 240)) | 0xEA9B13AA) - (v0 - 240) - 1968015829) ^ 0x48DF568C)
                          + STACK[0x6508];
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v3 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v3);
}

uint64_t sub_100CFD504()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((7420
                                          * (((STACK[0x6508] - 123) ^ ((*(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x86CA5F68)) & 0x7FFFFFFF ^ LODWORD(STACK[0x92D4])) == 47229169)) & 1)) ^ LODWORD(STACK[0x27A0])))
                            - 8))();
}

uint64_t sub_100CFD58C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 & 0x11775F57)) - 8))();
}

uint64_t sub_100CFD6C4@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 6)) - 4;
  LODWORD(STACK[0xEE20]) = a1 + 717370441;
  LODWORD(STACK[0xEE50]) = a1 + 717372051;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = a1 + 717370461;
  STACK[0xEE30] = v1;
  STACK[0xEE58] = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((2146324411 - ((v2 - 240) | 0x7FEE4FBB) + ((v2 - 240) | 0x8011B044)) ^ 0xBD836F1D)
                          + a1;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v2 - 240);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x1D354])))(v4);
}

uint64_t sub_100CFD7B0()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x1F8C])))();
}

uint64_t sub_100CFD7C4()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x27A8];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (LODWORD(STACK[0x27A8]) ^ 0x79E0D1A3)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x27A4];
  LODWORD(STACK[0xEE50]) = v2;
  STACK[0xEE30] = v0;
  STACK[0xEE58] = 2368574567;
  LODWORD(STACK[0xEE60]) = v2 ^ 0xF9;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((~((v1 - 240) | 0x5DD8B1C8) + ((v1 - 240) & 0x5DD8B1C8)) ^ 0x9FB5916E)
                          + STACK[0x6508];
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100CFD8A4()
{
  int v0;

  v0 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0xF4720170)) & 0x7FFFFFFF ^ LODWORD(STACK[0xBD54]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((507 * (((v0 - LODWORD(STACK[0x1F78])) | (LODWORD(STACK[0x1F78]) - v0)) >= 0)) ^ LODWORD(STACK[0x1F74])))
                            - 12))();
}

uint64_t sub_100CFD914()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = STACK[0x6508];
  v3 = v0 ^ LODWORD(STACK[0x1C30]) ^ *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x86CA5F68)) & 0x7FFFFFFFu;
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 1555162829) ^ 0xA34E3937)) - 4;
  LODWORD(STACK[0xEE20]) = v2 - 1555163565;
  LODWORD(STACK[0xEE50]) = v2 - 1555162829;
  STACK[0xEE30] = 3156577371;
  STACK[0xEE58] = v3;
  STACK[0xEE60] = ((_DWORD)v2 - 1555162829) ^ 0x28u;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((v1 + 859762459 - 2 * ((v1 - 240) & 0x333EF00B)) ^ 0xEAC2F52)
                          + v2;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * SLODWORD(STACK[0x1D354])))(v5);
}

uint64_t sub_100CFDA30()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (int)(((STACK[0x6508] + 2928) * (v0 == 1)) ^ (STACK[0x6508] - 365)))
                            - 12))();
}

uint64_t sub_100CFDA68@<X0>(int a1@<W8>)
{
  int v1;
  BOOL v2;
  int v3;

  LODWORD(STACK[0x6AC0]) = v1;
  if (STACK[0xB890])
    v2 = LODWORD(STACK[0x7434]) == 16;
  else
    v2 = 0;
  v3 = v2;
  LODWORD(STACK[0x6AB0]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a1) - 12))();
}

uint64_t sub_100CFDB30@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  char v12;
  int v13;
  char v14;
  char v15;
  _QWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  int v21;
  unint64_t v22;
  unsigned int v23;
  unint64_t v24;

  v19 = ((*(_DWORD *)(*v16 + (int)(*v17 & 0xD75FEFDC)) ^ (v1 + v3)) & 0x7FFFFFFF) * v11;
  v20 = ((v19 >> ((a1 + v10) ^ v12)) ^ v19) * v11;
  v21 = *(_DWORD *)(*v16 + (int)(*v17 & 0xEB35F5D4)) ^ (v5 + v3);
  v22 = (((v21 & 0x7FFFFFFF) * v11) ^ (((v21 & 0x7FFFFFFFu) * v11) >> 16)) * v11;
  v23 = ((*(_DWORD *)(*v16 + (*v17 & 0x673A8C74)) ^ (v4 + v3)) & 0x7FFFFFFF) * v11;
  v24 = (v23 ^ HIWORD(v23)) * v11;
  *(_BYTE *)(v7 + v3) = *(_BYTE *)(v6 + v3) ^ *(_BYTE *)(v1 + v3) ^ *(_BYTE *)(*(_QWORD *)(v8 + 8 * (a1 ^ 0x2CBB))
                                                                             + (v20 >> 24)
                                                                             - 8) ^ *(_BYTE *)(*(_QWORD *)(v8 + 8 * (a1 ^ v13))
                                                                                             + (v20 >> 24)
                                                                                             - 4) ^ *(_BYTE *)(*(_QWORD *)(v8 + 8 * (a1 ^ 0x2366)) + (v20 >> 24) - 4) ^ v20 ^ *(_BYTE *)(v9 + (v22 >> 24)) ^ *(_BYTE *)((v22 >> 24) + v18 + 1) ^ (BYTE3(v20) * v15) ^ *(_BYTE *)((v22 >> 24) + v2 + 4) ^ *(_BYTE *)(*(_QWORD *)(v8 + 8 * (a1 - 7258)) + (v24 >> 24)) ^ v22 ^ *(_BYTE *)(*(_QWORD *)(v8 + 8 * (a1 ^ 0x25B9)) - 12 + (v24 >> 24) + 2) ^ (19 * BYTE3(v22)) ^ *(_BYTE *)(*(_QWORD *)(v8 + 8 * (a1 - 7694)) - 8 + (v24 >> 24) + 2) ^ v24 ^ (BYTE3(v24) * v14);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((28261 * (v3 == 15)) ^ a1)) - 12))();
}

uint64_t sub_100CFDCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  if (LODWORD(STACK[0x6AB0]))
    v8 = STACK[0x6AC0];
  else
    v8 = 1926417578;
  LODWORD(STACK[0x6AC0]) = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v7) - 12))(a1, a2, a3, a4, a5, a6, a7, 1456723367);
}

uint64_t sub_100CFDDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  char v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  int v21;

  v18 = (((((v3 + (_DWORD)v5) ^ v7) & 0x7FFFFFFF) * v11) ^ (((((v3 + (_DWORD)v5) ^ v7) & 0x7FFFFFFFu) * v11) >> 16))
      * v11;
  v19 = (*(_BYTE *)(v8 + (v18 >> 24)) ^ *(_BYTE *)(v6 + v5) ^ *(_BYTE *)(a1 + (v18 >> 24) + 2) ^ *(_BYTE *)(a2 + (v18 >> 24) + 2) ^ v18 ^ (BYTE3(v18) * ((a3 + v17) ^ 0xE1)));
  if (((v15 + (v19 ^ v9) + 3675) ^ (v16 + (v19 ^ v12) + 251) ^ (v10 + (v19 ^ v13) + 2729))
     - *(unsigned __int8 *)(v4 + v5)
     + v14)
  {
    v20 = 1;
  }
  else
  {
    v20 = v5 == 15;
  }
  v21 = !v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((32 * v21) | (v21 << 6)) ^ a3)) - 12))();
}

uint64_t sub_100CFDE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;

  v11 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & (a8 + 3857)));
  v12 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * ((v8 | 0x1000) + 6)) - 4;
  LODWORD(STACK[0xEE20]) = ((v8 | 0x1000) - 1418388185) ^ 0x44;
  LODWORD(STACK[0xEE50]) = ((v8 | 0x1000) - 1418388185) ^ 0xF09;
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = (v8 | 0x1000) - 1418388185;
  STACK[0xEE30] = 405075877
                * ((v11 & 0x7FFFFFFF ^ 0xF9AD8121)
                 + 2 * (v11 & 0x7FFFFFFF ^ 0x6527EDE)
                 - 1700032057 * (-693664149 * v9 + 340336649 * (v11 & 0x7FFFFFFF ^ 0x6527EDE)))
                + 671883242;
  STACK[0xEE58] = 266807365;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v10 - 240) | 0x38FA4E68) - ((v10 - 240) & 0x38FA4E68)) ^ 0x5689131)
                          + (v8 | 0x1000);
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v13 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v10 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * SLODWORD(STACK[0x1D354])) - 12))(v13);
}

uint64_t sub_100CFDFBC()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] - 365)) - 12))();
}

uint64_t sub_100CFDFE0()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = STACK[0x6508];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 963206872) ^ 0xC696A100)) - 4;
  LODWORD(STACK[0xEE20]) = v2 - 963203286;
  LODWORD(STACK[0xEE50]) = v2 - 963206872;
  STACK[0xEE30] = 2368574567;
  STACK[0xEE58] = v0;
  STACK[0xEE60] = ((_DWORD)v2 - 963206872) ^ 5u;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((v1 + 1896360540 - 2 * ((v1 - 240) & 0x71082B4C)) ^ 0x4C9AF415)
                          + v2;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100CFE0BC()
{
  uint64_t v0;
  int v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0xF4720170));
  v2 = STACK[0xBD54];
  v3 = STACK[0x6508];
  v4 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x1F80];
  LODWORD(STACK[0xEE50]) = STACK[0x1F84];
  LODWORD(STACK[0xEE60]) = 0;
  LODWORD(STACK[0xEE64]) = STACK[0x1F88];
  STACK[0xEE30] = 3226246041;
  STACK[0xEE58] = v2 ^ 0xC3E5F48B ^ v1 & 0x7FFFFFFF;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((2 * ((v0 - 240) & 0x1B4E2A48) - (v0 - 240) - 458107465) ^ 0xD9230AEE)
                          + v3;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v5 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v5);
}

uint64_t sub_100CFE1C8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_DWORD *)STACK[0x60B8];
  v2 = *(_QWORD *)STACK[0x60C0];
  v3 = *(_DWORD *)(v2 + (int)(v1 & 0xF4720170)) & 0x7FFFFFFF ^ 0xEC5AD01101884851;
  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((473
                                * ((*(_QWORD *)(v2 + (v1 & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL ^ 0x78B6EE6512D51ED0)
                                 + (*(_DWORD *)(v2 + (int)(v1 & 0xF4720170)) & 0x7FFFFFFF ^ 0x3A96F12u)
                                 + (((STACK[0x7608] ^ 0x967C5B6DF49AFCF7) + 0x6983A4920B650309) ^ ((STACK[0x7608] ^ 0x3B079693BEF4F810) - 0x3B079693BEF4F810) ^ ((*(_QWORD *)(v2 + (v1 & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL ^ 0xD5CD239B58BB1A37 ^ STACK[0x7608]) - (*(_QWORD *)(v2 + (v1 & 0x6EDDF9D0)) & 0x7FFFFFFFFFFFFFFFLL ^ 0xD5CD239B58BB1A37)))
                                 + (((v0 ^ 0xB6EACF548E289ECFLL) + 0x491530AB71D76131) ^ ((v0 ^ 0x5AB01F458C09B98CLL)
                                                                                          - 0x5AB01F458C09B98CLL) ^ ((v3 ^ v0) - v3)) >= STACK[0x9E40] - 0x741361882D57745 + (LODWORD(STACK[0x92D4]) ^ 0x2D0A8F1 ^ *(_DWORD *)(v2 + (v1 & STACK[0x1C28])) & 0x7FFFFFFFu))) ^ LODWORD(STACK[0x1C34]))))();
}

uint64_t sub_100CFE394@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  v2 = a1 ^ 0x3A83827F ^ *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0x86CA5F68)) & 0x7FFFFFFFu;
  v3 = STACK[0x6508];
  v4 = STACK[0x6AD8];
  v5 = STACK[0x1654];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 40)) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x1650];
  LODWORD(STACK[0xEE50]) = v5;
  STACK[0xEE30] = 944974478;
  STACK[0xEE58] = v2;
  LODWORD(STACK[0xEE60]) = v5 ^ 0x21;
  LODWORD(STACK[0xEE64]) = 0;
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857
                          * ((-1999451333 - ((v1 - 240) | 0x88D2CB3B) + ((v1 - 240) | 0x772D34C4)) ^ 0x4ABFEB9D)
                          + v3;
  v6 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * SLODWORD(STACK[0x1D354])) - 4))(v6);
}

uint64_t sub_100CFE4A0()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)((STACK[0x6508] - 2381) ^ 0x57E8)) - 4))();
}

uint64_t sub_100CFE52C()
{
  int v0;
  int v1;

  LODWORD(STACK[0x7DF4]) = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 13388)))();
}

uint64_t sub_100CFE550@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = ((a1 + 13891) ^ 0xFFFFFFFFFFFFC648) + *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 + 3426)) - 8))();
}

uint64_t sub_100CFE5A0()
{
  int v0;
  int v1;
  int v2;

  v1 = STACK[0x2F64];
  v2 = STACK[0x6508] + 7810;
  LODWORD(STACK[0x98BC]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((508 * (v0 == (v1 & 0xB59F1FFF ^ 0x8D2D8E88))) ^ v2))
                            - 8))();
}

uint64_t sub_100CFE600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 3432)) - ((STACK[0x6508] - 1421) ^ 0xAE5)))(a1, a2, a3, 577628422, 606767441, 1104152011, a7, 3190810030);
}

uint64_t sub_100CFE668()
{
  int v0;
  int v1;
  int v2;

  v1 = 61 * (STACK[0x3310] ^ 0xA89);
  v2 = STACK[0x6508] + 1992;
  LODWORD(STACK[0x8CFC]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 + 2293) * (v0 == -1926392729)) ^ v2)) - 8))();
}

uint64_t sub_100CFE6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x3310] + 4860)) - ((STACK[0x3310] + 356578077) & 0xEABF6353 ^ 0x615FLL)))(a1, a2, a3, 577628422, 606767441, 1104152011, a7, 3190810030);
}

uint64_t sub_100CFE72C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100CFE77C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((STACK[0x8AC0] != 0xC27AFEAA03E150FLL) * (a1 + 9513)) ^ a1)))();
}

uint64_t sub_100CFE7C4@<X0>(int a1@<W8>)
{
  uint64_t v2;

  v2 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * a1))(v2);
}

uint64_t sub_100CFE7F8()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((57 * (STACK[0xC360] == 0xC27AFEAA03E150FLL)) ^ (v1 + 20518)))
                            - (((v1 + 10549642) | v0) ^ 0xC4FBEE42)))();
}

uint64_t sub_100CFE864()
{
  unsigned int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)((9713 * (v0 < 0x247C424A)) ^ (((v0 + 990127099) ^ 0x3B043C1D)
                                                                                          + v0)))
                                          - 12))(v1);
}

uint64_t sub_100CFE8C4()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((21201
                                * (((STACK[0xB668] == 0xC27AFEAA03E150FLL) ^ (7 * (v0 ^ 0x25) + 1)) & 1)) ^ v0)))();
}

uint64_t sub_100CFE924()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 2313)))(v1);
}

uint64_t sub_100CFE958()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((50 * (STACK[0xC220] == 0xC27AFEAA03E150FLL)) ^ (v0 + 18663)))
                            - 4))();
}

uint64_t sub_100CFE9A4()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * (v0 + 1904)))(v1);
}

uint64_t sub_100CFE9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unint64_t v8;

  v8 = STACK[0x6AD8];
  STACK[0xAF18] = *(_QWORD *)(STACK[0x6AD8] + 8 * a8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)(((a8 + 1687211730) & 0x9B6F7EDB ^ 0x4727) + a8)))(a1, a2, a3, a4, a5, a6, a7, 153);
}

uint64_t sub_100CFEA44()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int8x16_t *v4;
  uint64_t (*v5)(void);

  v3 = STACK[0xC768];
  v4 = (int8x16_t *)((char *)&STACK[0x10000] + STACK[0xC768]);
  v4->i64[0] = 0x71406559857F0410;
  v4->i64[1] = 0x4085380B1BBDCFE3;
  v4[1] = veorq_s8(*v4, (int8x16_t)xmmword_101507250);
  STACK[0xC768] = v3 + 32;
  STACK[0xD1A8] += 32;
  LODWORD(STACK[0xD96C]) = 0;
  STACK[0xD948] = v1;
  STACK[0xD940] = v2;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                     + 8
                                     * (int)(((&v4[1] == (int8x16_t *)v2)
                                            * ((((v0 + 1243761003) ^ 0x4A228072) + 69) ^ (v0 + 1243761003) & 0xB5DD7F8D)) | v0))
                         - 8);
  STACK[0x6A40] = v2;
  return v5();
}

uint64_t sub_100CFEB38()
{
  int v0;
  uint64_t v1;
  _BYTE *v2;
  char *v3;

  v3 = (char *)&STACK[0x1D0C0] + v1;
  *((_BYTE *)&STACK[0x1D0C0] + v1 + 16) = *v2;
  v3[17] = v2[1];
  v3[18] = v2[2];
  v3[19] = v2[3];
  v3[20] = v2[4];
  v3[21] = v2[5];
  v3[22] = v2[6];
  v3[23] = v2[7];
  v3[24] = v2[8];
  v3[25] = v2[9];
  v3[26] = v2[10];
  v3[27] = v2[11];
  v3[28] = v2[12];
  v3[29] = v2[13];
  v3[30] = v2[14];
  v3[31] = v2[15];
  *(_QWORD *)v3 = *(_QWORD *)v2;
  *((_QWORD *)v3 + 1) = *((_QWORD *)v2 + 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - ((v0 + 1) ^ 0x1D8ELL)))();
}

uint64_t sub_100CFEBF4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v0 - 7558) * (v1 == 0)) ^ v0))
                            - (v0 ^ 0x2B34u)
                            + 14009))();
}

uint64_t sub_100CFEC34()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4671 * (v1 ^ 0x1D89) - 362) * (v0 != 0)) ^ v1))
                            - ((v1 - 1724412629) & 0x66C87FFE ^ v2)))();
}

uint64_t sub_100CFEC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  unsigned __int8 *v9;
  char *v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  char *v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  char v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  unsigned int v42;

  v10 = (char *)*(&off_1015B46D0 + (v8 ^ 0x20D6)) - 12;
  v11 = v10[v9[12] ^ 0x94] ^ 0xFFFFFF8B;
  STACK[0xD950] = 0;
  STACK[0xD928] = 0;
  STACK[0xD930] = 0;
  v12 = (v11 >> 6) ^ (v11 >> 4);
  STACK[0xD920] = 0;
  v13 = v12 & 2 ^ v11 & ((v8 - 23) ^ 0x6F);
  v14 = *v9 ^ 2;
  STACK[0xD960] = 0;
  STACK[0xD938] = 0;
  LOBYTE(v11) = v12 ^ v11;
  STACK[0xD958] = 0x56641C0D7A8E5919;
  v15 = v10[v14 - ((2 * v14) & 0xDC) + 110];
  v16 = v9[1];
  v17 = (v13 | v11 & 0xD) ^ 0xD8;
  LODWORD(STACK[0xD96C]) = -528429484;
  v18 = (v15 ^ ((((v15 ^ 0x8B) & 0x80 | (((v15 ^ 0x8B) & 0xC0) >> 2)) ^ v15 & 0x70u) >> 4) ^ 0x27) << 24;
  v19 = (char *)*(&off_1015B46D0 + (int)(v8 - 8510)) - 8;
  LOBYTE(v15) = v19[v16 ^ 0x7D] ^ 0x78;
  v20 = v9[14];
  v21 = v18 & 0xFF00FFFF | (((v15 ^ (v15 >> 4) ^ (v15 >> 2) ^ -(v15 ^ (v15 >> 4) ^ (v15 >> 2)) ^ ((v15 ^ (v15 >> 4) ^ (v15 >> 2) ^ 0x40) - 64))
                                            - 65) << 16);
  v22 = (unint64_t)*(&off_1015B46D0 + (int)(v8 - 9163));
  v23 = (char *)*(&off_1015B46D0 + (v8 ^ 0x2F56)) - 4;
  v24 = v23[v9[15] ^ 0xE6];
  v25 = ((v9[2] ^ 0x26) + (v9[2] ^ 0x5F)) ^ 0x7A ^ *(unsigned __int8 *)(v22 + (v9[2] ^ 0x2CLL));
  v26 = *(unsigned __int8 *)(v22 + (v20 ^ 0x76));
  LODWORD(v16) = ((v20 ^ 5) + (v20 ^ 0x7C));
  v27 = v9[10];
  v28 = v19[v9[9] ^ 0x5ELL];
  v29 = v16 ^ 0xEA ^ v26;
  LOBYTE(v16) = v10[v9[8] ^ 0xD3];
  LODWORD(STACK[0x6AB0]) = (v28 ^ ((v28 ^ 0x78) >> 4) ^ ((v28 ^ 0x78) >> 2)) ^ 0xDB;
  v30 = *(unsigned __int8 *)(v22 + (v27 ^ 0x70));
  v31 = v9[3];
  LODWORD(STACK[0x6A90]) = (v16 ^ ((v16 ^ 0x8B) >> 6) ^ ((v16 ^ 0x8B) >> 4)) ^ 0xB2;
  v32 = v9[6];
  LODWORD(STACK[0x6A80]) = ((v27 ^ 3) + (v27 ^ 0x7A)) ^ 0xCE ^ v30;
  STACK[0x6A00] = v22;
  v33 = v9[11];
  v34 = v19[v9[5] ^ 0xA4];
  LODWORD(v27) = v23[(v31 ^ 0x7D) - 2 * ((v31 ^ 0x7D) & 0x91) + 145] | v21 | (v25 << 8);
  v35 = ((v32 ^ 0x93) + (v32 ^ 0xEA)) ^ *(unsigned __int8 *)(v22 + (v32 ^ a8)) ^ 0x70;
  v36 = v23[v9[7] ^ 0x30];
  v37 = v9[4] ^ 0x65;
  STACK[0x6A20] = (unint64_t)v10;
  LODWORD(v37) = v10[v37];
  v38 = v24 | (v17 << 24) | (v29 << 8);
  v39 = v36 ^ 0x87 | (v35 << 8);
  v40 = v37 ^ ((((((v37 ^ 0x8B) >> ((v37 ^ 0x8B) & 2)) >> ((v37 ^ 0x8B) & 2 ^ 2)) ^ v37 ^ 0x8B) & 0xF0) >> 4) ^ 0xA3;
  STACK[0x69F0] = (unint64_t)v23;
  LODWORD(v37) = v23[v33 ^ 0x37];
  STACK[0x6AC0] = (unint64_t)v9;
  v41 = v9[13];
  v42 = v39 & 0xFF00FFFF | (((v34 ^ ((v34 ^ 0x78) >> 4) ^ ((v34 ^ 0x78) >> 2)) ^ 0x91) << 16) | (v40 << 24);
  LODWORD(STACK[0x6AA0]) = v37 ^ 0x87;
  STACK[0x6A10] = (unint64_t)v19;
  LODWORD(v37) = (v19[v41 ^ 0xC8] ^ ((v19[v41 ^ 0xC8] ^ 0x78) >> 4) ^ ((v19[v41 ^ 0xC8] ^ 0x78) >> 2)) ^ 3;
  LODWORD(STACK[0x6A50]) = (_DWORD)v37 << 16;
  LODWORD(STACK[0x6A70]) = v42;
  LODWORD(STACK[0x6A60]) = -v42;
  LODWORD(STACK[0x6970]) = v27 ^ 0x52;
  LODWORD(STACK[0x6A30]) = (v38 & 0xFF00FFFF | ((_DWORD)v37 << 16)) ^ 0xFA;
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v8))(3373660178, 2816);
}

uint64_t sub_100CFF178@<X0>(int a1@<W0>, int a2@<W1>, char a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  char v10;
  char v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  int v23;
  char v24;
  char v25;
  char v26;
  char v27;
  int v28;
  unsigned int v29;
  unsigned int v30;

  v24 = ((v7 - 92) ^ v22) & (2 * ((v7 - 92) & v11)) ^ (v7 - 92) & v11;
  v25 = ((2 * ((v7 - 92) ^ v10)) ^ (v21 + 127)) & ((v7 - 92) ^ v10) ^ (2 * ((v7 - 92) ^ v10)) & v20 ^ (v19 - 7);
  v26 = v24 ^ v20 ^ (((2 * ((v7 - 92) ^ v10)) ^ (v21 + 127)) & ((v7 - 92) ^ v10) ^ (2 * ((v7 - 92) ^ v10)) & v20 ^ (v17 + 116)) & (4 * v24);
  v27 = (v7 - 92) ^ (2
                   * ((16 * v26) ^ v26 ^ ((16 * v26) ^ 0x20) & ((4 * v25) & (v20 - 10) ^ (v16 + 16) ^ ((4 * v25) ^ 0xE0) & v25)));
  v28 = *(unsigned __int8 *)(a5 + v7);
  *(_BYTE *)(v14 + v7) = v28 + (((v27 ^ a3) - 48) ^ ((v27 ^ 0x6D) - 18) ^ ((v27 ^ 0xCA) + 75)) * v18 - 59;
  v29 = (-257
       * ((((v9
                         + 151638463 * ((_DWORD)v7 + (v28 ^ ((v8 ^ a2) + a6)) + ((2 * v28) & 0xFFFFFFEF) + v13)
                         + v15)
                        * (unint64_t)v12) >> 32) >> 8)
       - a1) ^ a4;
  v30 = ((v29 ^ v6) + 2 * (v29 & v6)) ^ 0x939E0D5C;
  return (*(uint64_t (**)(_QWORD))(STACK[0x6AD8] + 8 * ((41 * (v7 != 63)) ^ v8)))((v23
                                                                                             - (v6
                                                                                              - v30)
                                                                                             - (v30 ^ a4)
                                                                                             + ((a1 - v30) ^ __ROR4__(v30, 29))) ^ (a1 - v30));
}

uint64_t sub_100CFF2F8(int a1, uint64_t a2, int a3)
{
  LODWORD(STACK[0x69C0]) = LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x6A60]) ^ ((LODWORD(STACK[0x6A70]) ^ 0xFFFFCF38 ^ (a3 + 3775))
                                                                            + 156);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a3 ^ (32142 * ((~a1 & 3) != 0)))) - 12))();
}

uint64_t sub_100CFF3A4(char a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a3 ^ 0x4EF4) * ((a1 & 3) != 2)) ^ a3)) - 12))();
}

uint64_t sub_100CFF3F0(uint64_t a1, int a2, int a3)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((57 * (a2 != (((_BYTE)a3 - 64) & 3))) ^ a3)) - 12))();
}

uint64_t sub_100CFF438(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3) - 12))();
}

uint64_t sub_100CFF468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;

  LODWORD(STACK[0x6A80]) = LODWORD(STACK[0x6AA0]) + v7 + a6 + (LODWORD(STACK[0x6AB0]) << 16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v6))(14500029, 2656932971, 1531179741, 3251935503, 20858, 12382, 134217729, 201326624);
}

uint64_t sub_100CFF530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v6 == 15) * a5) ^ v5)))();
}

uint64_t sub_100CFF5C8()
{
  char v0;
  int v1;
  int v2;

  LODWORD(STACK[0x6A60]) = v2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (29557 * (((v0 + 1) & 3) != 0))))
                                                                                       - 12))(3145769, 3708930, 2228358, 55568078, 77152263, 88121082);
}

uint64_t sub_100CFF658()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((28928 * (((v1 == 3) ^ v0 ^ 0x4D) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_100CFF6A4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (430 * (v1 != 2))))
                            - ((v0 - 206) | 0x203u)
                            + 5095))();
}

uint64_t sub_100CFF6F4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))();
}

uint64_t sub_100CFF728(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unint64_t v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  uint64_t v150;

  v20 = (v12 - 563467636) & 0xB3DDCBFF;
  STACK[0x6AC0] = v20;
  v21 = (280647680 * v8) | ((-335407285 * v8) >> 21);
  v22 = 328720256 * v11 + (((v20 ^ 0x106F25C0) * v11) >> 25);
  v23 = -717464176 * v9 + ((-44841511 * v9) >> 28);
  v24 = v23 ^ ((1844594304 * v10) | ((-690232179 * v10) >> 25));
  v25 = (738197504 * (v22 + v21 + v24)) | (((v22 + v21 + v24) * (v17 + 20)) >> 6);
  v26 = (-1604286132 * v22) | ((-1474813357 * v22) >> 30);
  v27 = (1621405993 * v21) >> 27;
  v28 = (345384224 * v21) | v27;
  v29 = (((1811159040 * v23) | ((-626164093 * v23) >> 21)) + v26 - v25) ^ v28;
  v30 = -382730240 * v25 + ((1150463635 * v25) >> 12);
  v31 = (467093504 * v29) | ((1120107241 * v29) >> 21);
  HIDWORD(v33) = v27;
  LODWORD(v33) = 1272829029 * v28;
  v32 = v33 >> 2;
  v34 = v30 ^ ((2101431296 * v26) | ((-312520621 * v26) >> 22));
  v35 = 1028185541 * v32;
  v36 = -728900528 * v32;
  v37 = -562036736 * v30 + ((434069437 * v30) >> 9);
  v38 = (v31 ^ v34) + v32 + 2 * (v31 & v34);
  v39 = (1384120320 * v31) | ((-970905435 * v31) >> 9);
  v40 = ((895959040 * v38) | ((-284633699 * v38) >> 18))
      - 1502496434
      - 2
      * (((895959040 * v38) | ((-284633699 * v38) >> 18)) & 0x2671C357 ^ ((-284633699 * v38) >> 18) & 4)
      + 2565;
  v41 = v40 ^ (v39
             + (v37 ^ (v36 & 0xFFFFFFF0 | (v35 >> 28)))
             - ((2 * (v39 + (v37 ^ (v36 & 0xFFFFFFF0 | (v35 >> 28))))) & 0xAC41572)
             - 2057172295);
  v42 = ((v39 + v37) ^ 0x6E7D63DB) + 976034697 + (v40 ^ 0x598E3CAC);
  v43 = (v42 ^ 0x5B6878D3) & (2 * (v42 & 0x906D409A)) ^ v42 & 0x906D409A;
  v44 = ((2 * (v42 ^ 0x7B3279D7)) ^ 0xD6BE729A) & (v42 ^ 0x7B3279D7) ^ (2 * (v42 ^ 0x7B3279D7)) & 0xEB5F394C;
  LODWORD(v20) = v44 ^ 0x29410945;
  v45 = (v44 ^ 0xC21E0008) & (4 * v43) ^ v43;
  v46 = ((4 * v20) ^ 0xAD7CE534) & v20 ^ (4 * v20) & 0xEB5F394C;
  v47 = (v46 ^ 0xA95C2100) & (16 * v45) ^ v45;
  v48 = ((16 * (v46 ^ 0x42031849)) ^ 0xB5F394D0) & (v46 ^ 0x42031849) ^ (16 * (v46 ^ 0x42031849)) & 0xEB5F3940;
  v49 = v47 ^ 0xEB5F394D ^ (v48 ^ 0xA1531000) & (v47 << 8);
  v50 = v42 ^ v41 ^ (2
                   * ((v49 << 16) & 0x6B5F0000 ^ v49 ^ ((v49 << 16) ^ 0x394D0000) & (((v48 ^ 0x4A0C290D) << 8) & 0x6B5F0000 ^ 0x20460000 ^ (((v48 ^ 0x4A0C290D) << 8) ^ 0x5F390000) & (v48 ^ 0x4A0C290D))));
  v51 = ((2 * v50) & 0x3A70A26A ^ 0x2A30A240) + (v50 ^ 0xAA62AADF);
  v52 = v51 - 1305017465 - ((2 * v51) & 0x646E070E);
  v53 = (v52 ^ 0x19D26101) & (v40 ^ 0x2671C353) ^ v40 & 0x2BE56286;
  v54 = v52 ^ v39;
  LODWORD(STACK[0x6980]) = v41;
  v55 = (v52 ^ v40 ^ 0x6971AFA2)
      + ((2 * (v52 ^ v40)) & 0xFA6EDEEC ^ 0x280C80A8)
      - 1405617878
      + ((((2 * v53) ^ 0xA5C2A1BF) - 2124355109) ^ (((2 * v53) ^ 0x84C21F5) + 753822097) ^ (((2 * v53) ^ 0xE94C044E)
                                                                                          - 840020948));
  v56 = (v55 ^ 0x762FEAFE) & (2 * (v55 & (v18 + 171))) ^ v55 & (v18 + 171);
  v57 = ((2 * (v55 ^ 0x1A7B6B42)) ^ 0xD8A94378) & (v55 ^ 0x1A7B6B42) ^ (2 * (v55 ^ 0x1A7B6B42)) & 0x6C54A1BC;
  v58 = v57 ^ 0x2454A084;
  v59 = (v57 ^ 0x4C00813C) & (4 * v56) ^ v56;
  v60 = ((4 * v58) ^ 0xB15286F0) & v58 ^ (4 * v58) & 0x6C54A1BC;
  v61 = (v60 ^ (v15 + 106)) & (16 * v59) ^ v59;
  v62 = ((16 * (v60 ^ 0x4C04210C)) ^ 0xC54A1BC0) & (v60 ^ 0x4C04210C) ^ (16 * (v60 ^ 0x4C04210C)) & 0x6C54A1B0;
  v63 = v61 ^ 0x6C54A1BC ^ (v62 ^ 0x4440013C) & (v61 << 8);
  v64 = v55 ^ (2
             * ((v63 << 16) & 0x6C540000 ^ v63 ^ ((v63 << 16) ^ 0x21BC0000) & (((v62 ^ 0x2814A03C) << 8) & 0x6C540000 ^ 0x28540000 ^ (((v62 ^ 0x2814A03C) << 8) ^ 0x54A10000) & (v62 ^ 0x2814A03C))));
  v65 = 2009678368
      - 479077571
      * (((v64 ^ 0x3B792442) + 155088661) ^ ((v64 ^ 0x3920C160) + 191337015) ^ ((v64 ^ 0xECF76CA4) - 558874637));
  v66 = (v65 ^ 0xCD23CF93) & (2 * (v65 & 0xED0BCF13)) ^ v65 & 0xED0BCF13;
  v67 = ((2 * (v65 ^ 0xCD375391)) ^ 0x40793904) & (v65 ^ 0xCD375391) ^ (2 * (v65 ^ 0xCD375391)) & 0x203C9C82;
  v68 = v67 ^ (v14 + 3710);
  v69 = (v67 ^ a2) & (4 * v66) ^ v66;
  v70 = ((4 * v68) ^ 0x80F27208) & v68 ^ (4 * v68) & 0x203C9C80;
  v71 = (v70 ^ (a1 + 4057)) & (16 * v69) ^ v69;
  v72 = ((16 * (v70 ^ 0x200C8C82)) ^ 0x3C9C820) & (v70 ^ 0x200C8C82) ^ (16 * (v70 ^ 0x200C8C82)) & 0x203C9C80;
  v73 = v71 ^ 0x203C9C82 ^ (v72 ^ 0x88882) & (v71 << 8);
  v74 = v65 ^ (2
             * ((v73 << 16) & 0x203C0000 ^ v73 ^ ((v73 << 16) ^ 0x1C820000) & (((v72 ^ 0x20341482) << 8) & 0x203C0000 ^ (((v72 ^ 0x20341482) << 8) ^ 0x3C9C0000) & (v72 ^ 0x20341482) ^ 0x200000)));
  v75 = v19
      - 2046293933
      * (((v54 ^ 0x33D39D77) + 1993926226) ^ ((v54 ^ 0x3AF1B0B4) + 2147142547) ^ ((v54 ^ 0xBB152E44) - 31566493));
  v76 = (v75 ^ 0x1DAA6B4E) & (2 * (v75 & 0x9C306A0E)) ^ v75 & 0x9C306A0E;
  v77 = ((2 * (v75 ^ 0x25CAFB46)) ^ 0x73F52290) & (v75 ^ 0x25CAFB46) ^ (2 * (v75 ^ 0x25CAFB46)) & 0xB9FA9148;
  LODWORD(v20) = v77 ^ 0x880A9148;
  v78 = (v77 ^ (v16 + 3206)) & (4 * v76) ^ v76;
  v79 = ((4 * v20) ^ 0xE7EA4520) & v20 ^ (4 * v20) & 0xB9FA9148;
  v80 = v78 ^ 0xB9FA9148 ^ (v79 ^ 0xA1EA0108) & (16 * v78);
  v81 = (16 * (v79 ^ (v13 + 71))) & 0xB9FA9140 ^ 0x20528148 ^ ((16 * (v79 ^ (v13 + 71))) ^ 0x9FA91480) & (v79 ^ (v13 + 71));
  v82 = (v80 << 8) & 0xB9FA9100 ^ v80 ^ ((v80 << 8) ^ 0xFA914800) & v81;
  v83 = v75 ^ (2
             * ((v82 << 16) & 0x39FA0000 ^ v82 ^ ((v82 << 16) ^ 0x11480000) & ((v81 << 8) & 0x39FA0000 ^ 0x16A0000 ^ ((v81 << 8) ^ 0x7A910000) & v81)));
  LODWORD(STACK[0x6AA0]) = v64;
  v84 = 1023410176
      * (((v64 ^ 0x27B2E1D3) + 368423558) ^ ((v64 ^ 0x667B2E81) + 1413250520) ^ ((v64 ^ 0xAF6746D4) - 1658841725))
      - 1632937507;
  LODWORD(v20) = ((2 * (v84 & 0x94000000)) | 2) & (v84 ^ 0xAF1EBA0A) ^ ((2 * (v84 & 0x94000000)) | v84 & 0x94000000);
  v85 = (2 * (v84 ^ 0xAF1EBA0A)) & 0x3A000000 ^ a7 ^ ((2 * (v84 ^ 0xAF1EBA0A)) ^ 0x76942052) & (v84 ^ 0xAF1EBA0A);
  LODWORD(v20) = v20 ^ 0x3B4A1C28 ^ (4 * v20) & 0x3B4A1C28 ^ ((4 * v20) | 4) & v85;
  v86 = (4 * v85) & 0x3B4A1C28 ^ 0x12420C09 ^ ((4 * v85) ^ 0xED2870A4) & v85;
  LODWORD(v20) = (16 * v20) & 0x3B4A1C20 ^ v20 ^ ((16 * v20) ^ 0xB4A1C290) & v86;
  v87 = (16 * v86) & 0x3B4A1C20 ^ 0xB4A1C29 ^ ((16 * v86) ^ 0xB4A1C290) & v86;
  LODWORD(v20) = v20 ^ ((_DWORD)v20 << 8) & 0x3B4A1C00 ^ (((_DWORD)v20 << 8) ^ 0x4A1C2900) & v87 ^ 0x3A080800;
  v88 = v84 ^ (2
             * (((_DWORD)v20 << 16) & 0x3B4A0000 ^ v20 ^ (((_DWORD)v20 << 16) ^ 0x1C290000) & ((v87 << 8) & 0x3B4A0000 ^ 0x31420000 ^ ((v87 << 8) ^ 0x4A1C0000) & v87)));
  v89 = v88 ^ 0xABC76393;
  LODWORD(STACK[0x6AB0]) = v52;
  v74 >>= 8;
  v90 = v74 ^ 0xAD72F6;
  HIDWORD(v33) = v54 ^ 0xBAF484D9;
  LODWORD(v33) = v83;
  v91 = (((v33 >> 1) ^ 0xA4C5CC79) - 1232149508) ^ (((v33 >> 1) ^ 0x28444B36) + 974087349) ^ (((v33 >> 1) ^ 0xD2BB2300)
                                                                                            - 1058009981);
  v92 = v91 - 1215948498;
  v93 = v74 & 0x80F1FB ^ 0x1800009B ^ (v88 ^ 0x37AF9075) & (v74 ^ 0xFF528D08);
  v94 = v90 + ((((2 * v93) & 0x33F3CBBC) - v93 - 435807711) ^ 0xE4069BB3) + 1;
  v95 = (v94 + 2031615458 - ((2 * v94) & 0xF22FFBC4)) ^ v88 ^ 0xABC76393;
  v96 = -2031615458
      - (((v88 ^ 0x23B75954) + 2005910841) ^ ((v88 ^ 0x8A1BE8D7) - 568101700) ^ ((v88 ^ 0x7B7C2FF2) + 793031583));
  LODWORD(STACK[0x69B0]) = v52 ^ v41;
  v97 = (((v95 - (v95 ^ v96)) ^ v96) + 2031615458 - ((2 * ((v95 - (v95 ^ v96)) ^ v96)) & 0xF22FFBC4)) ^ v89;
  v98 = 1140728879 * (v91 - 1215948498) - 867351108;
  v99 = v95 + v90 + v97;
  v100 = v99 ^ (((-1291144640
                * (((v52 ^ 0xF96890A5) + 110587739) ^ ((v52 ^ 0x7B6B4F28) - 2070630184) ^ ((v52 ^ 0x3034DC0A) - 808770570))) | ((-691262775 * (((v52 ^ 0x70928BDE) - 1888652254) ^ ((v52 ^ 0x9E89C69F) + 1635137889) ^ ((v52 ^ 0x5C2C4EC6) - 1546407622)) - 1655051521) >> 26))
              + 168375282
              + v91);
  v101 = ((592273984
         * (((v52 ^ v41 ^ 0x1F251DA8) - 522526120) ^ ((v52 ^ v41 ^ 0x86473260) + 2042154400) ^ ((v52 ^ v41 ^ 0x846E5A5)
                                                                                              - 138864037))) | ((1351431561 * (((v52 ^ v41 ^ 0x1D544DDC) - 492064220) ^ ((v52 ^ v41 ^ 0xC6DBFAB9) + 958661959) ^ ((v52 ^ v41 ^ 0x4AAB7D08) - 1252752648)) - 660478635) >> 26))
       + 679040320;
  v102 = v100 + v101;
  LOBYTE(v90) = ((1241493635 * v102) >> 5) & 0x16;
  HIDWORD(v33) = 3 * v102;
  LODWORD(v33) = 1241493635 * v102;
  v103 = v33 >> 5;
  v104 = 1799757629 * v103;
  v105 = (1946157056 * v99) | ((848894429 * v99) >> 6);
  v106 = ((-273080341 * v101) >> v90 >> (v90 ^ 0x16)) ^ (-461394944 * v101);
  v107 = v106 + (v105 ^ (((1071792880 * v92) | (v98 >> 28)) - 992715840) ^ v103);
  v108 = (2074147501 * v107) >> 30;
  v109 = (-293344588 * v107) | v108;
  v110 = (-2016460800 * v103) | ((1799757629 * v103) >> 18);
  v111 = 1116290368 * v106 + ((-1995823883 * v106) >> 26);
  v112 = ((256007680 * v105) | ((696754479 * v105) >> 23)) - v110 + v111 + v109;
  v113 = (264241152 * (v104 >> 18)) | ((-1844972481 * v110) >> 10);
  v114 = -1407241040 * v112 + ((-1967000757 * v112) >> 28);
  HIDWORD(v33) = v109 + 16 * v108;
  LODWORD(v33) = 182790801 * v109;
  v115 = v33 >> 6;
  v116 = (((388235264 * v111) | ((1381336521 * v111) >> 14)) ^ v113 ^ v115) + v114;
  v117 = (v116 ^ 0xD5F32AA4 ^ (v114 - 1543535915 * (v113 - v115))) + 1655645498;
  LODWORD(v20) = v115 - v117 - 2049856348 - ((2 * (v115 - v117)) & 0xBA35948);
  v118 = v117 ^ v116;
  LODWORD(STACK[0x6990]) = v20;
  v119 = (-1852410328
        * (((v20 ^ 0x1CFA585B) - 486168667) ^ ((v20 ^ 0x764E38AD) - 1984837805) ^ ((v20 ^ 0xEF65CC52) + 278541230))) | ((-1305293115 * (((v20 ^ 0xAF1F7F0E) + 1356890354) ^ ((v20 ^ 0xC3DDEBA5) + 1008866395) ^ ((v20 ^ 0xE913380F) + 384616433)) + 1934479924) >> 29);
  v120 = 372244480 * v117 - ((372244480 * v117) | ((1450209635 * v117) >> 12));
  LODWORD(v20) = 1428025227
               * (((v118 ^ 0x31B03817) + 2105086890) ^ ((v118 ^ 0xEDABD81C) - 1587350621) ^ ((v118 ^ 0xDC1BE00B)
                                                                                           - 1865233482))
               + 2087088022;
  v121 = (v20 ^ 0x12F07CA0) & (2 * (v20 & 0xA2E47EB5)) ^ v20 & 0xA2E47EB5;
  v122 = ((2 * (v20 ^ 0x567808E0)) ^ 0xE938ECAA) & (v20 ^ 0x567808E0) ^ (2 * (v20 ^ 0x567808E0)) & 0xF49C7654;
  v123 = v122 ^ 0x14841255;
  v124 = (v122 ^ 0x80106400) & (4 * v121) ^ v121;
  v125 = ((4 * v123) ^ 0xD271D954) & v123 ^ (4 * v123) & 0xF49C7654;
  v126 = (v125 ^ 0xD0105050) & (16 * v124) ^ v124;
  v127 = ((16 * (v125 ^ 0x248C2601)) ^ 0x49C76550) & (v125 ^ 0x248C2601) ^ (16 * (v125 ^ 0x248C2601)) & 0xF49C7650;
  v128 = v126 ^ 0xF49C7655 ^ (v127 ^ 0x40846405) & (v126 << 8);
  LODWORD(v20) = v20 ^ (2
                      * ((v128 << 16) & 0x749C0000 ^ v128 ^ ((v128 << 16) ^ 0x76550000) & (((v127 ^ 0xB4181205) << 8) & 0x749C0000 ^ 0x60880000 ^ (((v127 ^ 0xB4181205) << 8) ^ 0x1C760000) & (v127 ^ 0xB4181205))));
  LODWORD(STACK[0x69D0]) = v117 ^ v116;
  v129 = 916455272
       - 245366784
       * (((v118 ^ 0xB5870B83) - 112320450) ^ ((v118 ^ 0x31CA469A) + 2097376549) ^ ((v118 ^ 0x844D4D19) - 930847064));
  v130 = (2 * (v129 & 0x92C00008)) & 0x5000010 ^ (v129 & 0x92C00008 | 0x412650D1) ^ (2 * (v129 & 0x92C00008)) & (v129 ^ 0x55EED169);
  v131 = (2 * (v129 ^ 0x55EED169)) & 0xC7000000 ^ 0x41000011 ^ ((2 * (v129 ^ 0x55EED169)) ^ 0x8E512200) & (v129 ^ 0x55EED169);
  v132 = ((4 * v130) ^ (a5 + 829)) & v131 ^ v130 ^ ((4 * v130) & 0xC7084160 | (a3 - 6));
  v133 = (4 * v131) & 0xC72ED1F0 ^ 0xC3049031 ^ ((4 * v131) ^ 0x1CBB47C4) & v131;
  v134 = (16 * v132) & 0xC72ED1F0 ^ v132 ^ ((16 * v132) ^ 0x50C11110) & v133;
  v135 = (16 * v133) & 0xC72ED1F0 ^ 0x8502C0E1 ^ ((16 * v133) ^ 0x72ED1F10) & v133;
  v136 = v134 ^ 0xC622D0F0 ^ (v134 << 8) & 0xC72ED100 ^ ((v134 << 8) ^ (a8 + 224)) & v135;
  LODWORD(STACK[0x69E0]) = v117;
  v137 = v117 + v114;
  v138 = (v136 << 16) & 0x472E0000 ^ v136 ^ ((v136 << 16) ^ 0x51F10000) & ((v135 << 8) & 0x472E0000 ^ 0x412E0000 ^ ((v135 << 8) ^ 0x2ED10000) & v135);
  LODWORD(STACK[0x69A0]) = v137;
  v139 = (-533481952 * v137) | ((-687759951 * v137) >> 27);
  v119 -= 1704029792;
  v140 = (v129 ^ (2 * v138) ^ 0x7359FC3F) & ((v20 >> 11) ^ 0xFFEB816D);
  v141 = (((2 * ((v20 >> 11) & 0x1BA0BA ^ 0x269A018 ^ v140)) | 0x9314E0A8)
        - ((v20 >> 11) & 0x1BA0BA ^ 0x269A018 ^ v140)
        - 1233809492) ^ 0xA677AF9B;
  LODWORD(v20) = (1173275408 * v139) | ((341765169 * v139) >> 28);
  v142 = v141 ^ (372244480 * v117
               - v139
               + ((v120 - ((1450209635 * v117) >> 12) - 2 * (v120 & -((1450209635 * v117) >> 12))) ^ ((1450209635 * v117) >> 12))
               - v119);
  v143 = (658505728 * v141) | ((1597620381 * v141) >> 10);
  v144 = (463925440 * v142) | ((-1200710717 * v142) >> 26);
  v145 = v20 + 35850560 * v119 + ((1544064037 * v119) >> 26) + v144;
  v146 = -704643072 * v144 + ((1212098539 * v144) >> 7);
  v147 = (1169424384 * (v145 ^ v143)) | ((-885845651 * (v145 ^ v143)) >> 14);
  v148 = -2080374784 * v143 + ((1904573665 * v143) >> 6);
  HIDWORD(v33) = -1321279183
               * (((-459317248 * v20) | ((-1425070853 * v20) >> 19)) + v148 + v146 + ~(v147 + 2 * v148))
               - 1321279183;
  LODWORD(v33) = HIDWORD(v33);
  v149 = ((2 * (v33 >> 18)) & 0xF57EBC7E) + ((v33 >> 18) ^ 0xFABF5E3F);
  LODWORD(STACK[0x6A90]) = (a6
                          + v148 * (a4 + 3122)
                          + ((1543720947 * v148) >> 24)
                          + ((-1321205760 * v146) | ((1087390405 * v146) >> 10))
                          - (-260046848 * v147
                           + ((1417321441 * v147) >> 9))
                          + v149
                          + 711) ^ (v149
                                  - 726768193
                                  * (((-1321205760 * v146) | ((1087390405 * v146) >> 10))
                                   - (-260046848 * v147
                                    + ((1417321441 * v147) >> 9)))
                                  + 300135433);
  v150 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD970] = v150;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((3838 * (v150 != 0)) ^ v12)) - 4))();
}

uint64_t sub_100D00F14()
{
  int v0;
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  char v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  char v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  _BOOL4 v201;
  unsigned int v202;
  int v203;
  uint64_t (*v204)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = v0 + 10329;
  v9 = LODWORD(STACK[0x6A80]) ^ 0x3C7B ^ (v0 + 10329);
  v10 = LODWORD(STACK[0x6AA0]) ^ v2;
  v11 = v7 + 2135929627 - v1 + 197;
  v12 = (v11 ^ 0x41EAE9CC) & (2 * (v11 & 0x85F0EDE1)) ^ v11 & 0x85F0EDE1;
  v13 = ((2 * (v11 ^ 0x406B31CC)) ^ 0x8B37B85A) & (v11 ^ 0x406B31CC) ^ (2 * (v11 ^ 0x406B31CC)) & 0xC59BDC2C;
  v14 = v13 ^ 0x44884425;
  v15 = (v13 ^ 0x1039808) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x166F70B4) & v14 ^ (4 * v14) & 0xC59BDC2C;
  v17 = (v16 ^ 0x40B5029) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0xC1908C09)) ^ 0x59BDC2D0) & (v16 ^ 0xC1908C09) ^ (16 * (v16 ^ 0xC1908C09)) & 0xC59BDC20;
  v19 = v17 ^ 0xC59BDC2D ^ (v18 ^ 0x4199C02D) & (v17 << 8);
  v20 = v11 ^ (2
             * ((v19 << 16) & 0x459B0000 ^ v19 ^ ((v19 << 16) ^ 0x5C2D0000) & (((v18 ^ 0x84021C2D) << 8) & 0xC59B0000 ^ 0x44030000 ^ (((v18 ^ 0x84021C2D) << 8) ^ 0x1BDC0000) & (v18 ^ 0x84021C2D))));
  v21 = v3 - v1 - ((2 * (v3 - v1)) & 0xD67F69CA) + 1799337189;
  v22 = (v6 + v1) ^ v4 & 0xDFFFFFFF;
  v23 = -1324068373
      * (((v20 ^ 0x27684BCD) - 1243520134) ^ ((v20 ^ 0xB0E2E6E9) + 577490526) ^ ((v20 ^ 0x115FF89F) - 2083074004))
      + 1690393074;
  v24 = (v23 ^ 0x8965E51E) & (2 * (v23 & 0xD185C85E)) ^ v23 & 0xD185C85E;
  v25 = ((2 * (v23 ^ 0x8B6EE59A)) ^ 0xB5D65B88) & (v23 ^ 0x8B6EE59A) ^ (2 * (v23 ^ 0x8B6EE59A)) & 0x5AEB2DC4;
  v26 = v25 ^ 0x4A292444;
  v27 = (v25 ^ 0x20584) & (4 * v24) ^ v24;
  v28 = ((4 * v26) ^ 0x6BACB710) & v26 ^ (4 * v26) & 0x5AEB2DC4;
  v29 = (v28 ^ 0x4AA82500) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ 0x104308C4)) ^ 0xAEB2DC40) & (v28 ^ 0x104308C4) ^ (16 * (v28 ^ 0x104308C4)) & 0x5AEB2DC0;
  v31 = v29 ^ 0x5AEB2DC4 ^ (v30 ^ 0xAA20C84) & (v29 << 8);
  v32 = STACK[0x6A90];
  v33 = -1977027200
      * (((v20 ^ 0x2D649404) - 1074938703) ^ ((v20 ^ 0xDD893059) + 1325406446) ^ ((v20 ^ 0x7638F1E6) - 458106541))
      - 2120268280;
  v34 = v33 & 0xA1F1E180 ^ 0xF0130FA8 ^ (2 * (v33 & 0xA1F1E180)) & 0x40030300 ^ ((2 * (v33 & 0xA1F1E180)) | 0x10) & (v33 ^ 0x51E2EE58);
  v35 = ((2 * (v33 ^ 0x51E2EE58)) ^ 0xE0261F40) & (v33 ^ 0x51E2EE58) ^ (2 * (v33 ^ 0x51E2EE58)) & 0xF0130F20;
  v36 = v34 ^ v35 & 0xCBA050D0 ^ ((4 * v34) ^ 0xBEC6E58) & (v35 ^ 0xE0020F80);
  v37 = ((4 * v35) ^ 0x4BA86ED8) & (v35 ^ 0xE0020F80) ^ v35 & 0xCBA050D0;
  v38 = v36 ^ v37 & 0xCBA050D8 ^ ((16 * v36) ^ 0xCA90A2D8) & (v37 ^ 0xC0000080);
  v39 = ((16 * v37) ^ 0xCBA058D8) & (v37 ^ 0xC0000080) ^ v37 & 0xCBA050D8;
  v40 = v38 ^ v39 & 0xCBA050D8 ^ ((v38 << 8) ^ 0xD8AFF0D8) & (v39 ^ 0xC00000A0);
  v41 = ((v39 << 8) ^ 0xCBA0D0D8) & (v39 ^ 0xC00000A0) ^ v39 & 0xCBA050D8;
  v42 = v40 ^ v41 & 0x4BA050D8 ^ ((v40 << 16) ^ 0xC48050D8) & (v41 ^ 0x30130000) ^ ((v40 << 16) ^ 0xC48050D8) & 0x70130080;
  v43 = (v23 ^ (2
              * ((v31 << 16) & 0x5A000000 ^ v31 ^ ((v31 << 16) ^ 0x2D000000) & (((v30 ^ 0x50492184) << 8) & 0x5AEB0000 ^ (((v30 ^ 0x50492184) << 8) ^ 0xEB2D0000) & (v30 ^ 0x50492184) ^ 0x10000000)))) >> 25;
  v44 = ((269686784
        * (((v21 ^ 0x9E147900) + 1642825472) ^ ((v21 ^ 0xBA6A4F56) + 1167437994) ^ ((v21 ^ 0x4F4182B3) - 1329693363))) | ((-1430125981 * (((v21 ^ 0x46A91B05) - 1185487621) ^ ((v21 ^ 0x8D9AC012) + 1919238126) ^ ((v21 ^ 0xA00C6FF2) + 1609797646)) + 546750095) >> 21))
      - 1242269696;
  v45 = (738197504 * v22) | ((-2124902133 * v22) >> 6);
  v46 = v43 & 0x5C ^ 0x24B6E0BB ^ (v33 ^ (2 * v42) ^ 0x65611E1B) & (v43 ^ 0xFFFFFFC5);
  v47 = -1432911551 * v46;
  v48 = (((-1830289408 * v32) | ((298898013 * v32) >> 13)) - v44 - v46) ^ v45;
  HIDWORD(v50) = v43 ^ 0x3A;
  LODWORD(v50) = v47;
  v49 = v50 >> 6;
  v51 = (1131537984 * v48) | ((2030946201 * v48) >> 26);
  v52 = 169247520 * v45 + ((-1068452839 * v45) >> 27);
  v53 = v49 ^ v52 ^ (((669253632 * v44) | ((-727905799 * v44) >> 14)) - v51);
  v54 = 1000516576 * v53 + ((-1981999777 * v53) >> 27);
  v55 = (430155080 * v51) | ((-1556843351 * v51) >> 29);
  v56 = (-310229120 * v52) | ((1943733391 * v52) >> 25);
  v57 = (((-1398505472 * v49) | ((731732297 * v49) >> 17)) - v55 - v54) ^ v56;
  v58 = (-95684676 * v55) | ((2123562479 * v55) >> 30);
  v59 = (-338518016 * v54) | ((284122773 * v54) >> 19);
  v60 = -1040187392 * v57 + ((1537632353 * v57) >> 7);
  v61 = v60 + 1735349227 * (v59 ^ v58);
  v62 = 1514809344 * v56 + ((1951091013 * v56) >> 21) - v58 - v59 + v60;
  v63 = 780542453 * v61 - v62;
  v64 = v63 ^ 0x87374A3B;
  v65 = v60 - (v63 ^ 0x87374A3B) - 1845652737 - ((2 * (v60 - (v63 ^ 0x87374A3B))) & 0x23FB25FE);
  v66 = v62 - (v63 ^ 0x87374A3B);
  LODWORD(STACK[0x67D0]) = v63;
  v67 = v63 ^ v59;
  LODWORD(STACK[0x67C0]) = v67;
  LODWORD(STACK[0x6850]) = v65 ^ v67 ^ ((v66 ^ v64) - 1845652737 - ((2 * (v66 ^ v64)) & 0x23FB25FE));
  LOBYTE(v60) = ((v65 ^ v67 ^ ((v66 ^ v64) - 1 - 2 * (v66 ^ v64))) & 0x18 ^ 0x4D) - 1;
  LODWORD(STACK[0x68C0]) = v66;
  LODWORD(STACK[0x6820]) = v65;
  v68 = (-378483712 * (v67 ^ 0x87374A3B)) | ((528112691 * (v67 ^ 0x87374A3B)) >> 22);
  LODWORD(STACK[0x6900]) = v64;
  v69 = -889192448
      * (((v65 ^ 0x5F19D190) - 1595527568) ^ ((v65 ^ 0xEA34DF66) + 365633690) ^ ((v65 ^ 0x24D09C09) - 617651209))
      + ((137579979
        * (((v65 ^ 0xF036BC4B) + 264848309) ^ ((v65 ^ 0x8ADD6BAA) + 1965200470) ^ ((v65 ^ 0xEB16451E) + 350862050))
        + 1243038517) >> 8)
      + 889192448;
  v70 = 2099739026 * v66 + ((-1097614135 * v66) >> 31);
  v71 = 2144104785 * v70;
  v72 = (v68 + 1754966272 * v64 + ((-1855415639 * v64) >> (v60 ^ 0x54) >> (v60 ^ 0x4C))) ^ v69;
  v73 = -2080374784 * v69 + ((-1884444575 * v69) >> 6);
  v74 = (507559936 * (v72 - v70)) | ((1967945987 * (v72 - v70)) >> 18);
  v75 = 629955703 * v73;
  v76 = (-1097614135 * v66) & 0x80000000 | (v71 >> 1);
  v77 = -1918205952 * v68 + ((762780501 * v68) >> 17) + v76 - v73 - v74;
  v78 = 1490177488 * v74 + ((-175299363 * v74) >> 28);
  v79 = -1174279690 * v77 + ((1560343803 * v77) >> 31);
  v80 = (-919425792 * v76) | ((-406244691 * v76) >> 24);
  v81 = -1570635259 * v80;
  v82 = -489096393 * v78;
  v83 = -160563200 * v78;
  v84 = -2126512128 * v80;
  v85 = v80 ^ (v75 >> 22) ^ (v75 << (v10 & 2) << (v10 & 2 ^ 0xA)) ^ v78 ^ v79;
  v86 = (-637620571 * v85) >> 10;
  v87 = v84 + (v81 >> 10);
  v88 = v83 & 0xFFFE0000 | (v82 >> 15);
  v89 = -1455423488 * v85 + 1735559947;
  v90 = (v89 & 0x98800000 | ((((v89 & 0x98800000) >> 23) & 1) << 24)) ^ (v89 ^ 0x970E29CB) & (2 * (v89 & 0x98800000));
  v91 = (2 * (v89 ^ 0x970E29CB)) & 0xF800000 ^ 0x800002 ^ ((2 * (v89 ^ 0x970E29CB)) ^ 0x1F04A240) & (v89 ^ 0x970E29CB);
  v92 = (v90 & 0xF9FFFFFF | (((v90 >> 23) & 3) << 25)) ^ ((4 * v90) | 0xC) & v91;
  v93 = (4 * v91) & 0xF835D3C ^ 0x1820906 ^ ((4 * v91) ^ 0x3E0D74F8) & v91;
  v94 = (16 * v92) & 0xF835D30 ^ v92 ^ ((16 * v92) ^ 0xF0) & v93;
  v95 = (16 * v93) & 0xF835D30 ^ 0x7820C1E ^ ((16 * v93) ^ 0xF835D3E0) & v93;
  v96 = v94 ^ (v94 << 8) & 0xF835D00 ^ ((v94 << 8) ^ 0x3F00) & v95 ^ 0xF834001;
  v97 = v88 ^ v87;
  v98 = ((2 * (-1858943744 * v79 + ((59847365 * v79) >> 24))) & 0x3DEF63EA)
      + ((-1858943744 * v79 + ((59847365 * v79) >> 24)) ^ 0x1EF7B1F5);
  v99 = v88 - 519549429 + v98;
  v100 = ((v89 ^ 0xCC81953E ^ (2
                             * ((v96 << 16) & 0xF830000 ^ v96 ^ ((v96 << 16) ^ 0x5D3E0000) & ((v95 << 8) & 0xF830000 ^ 0xC820000 ^ ((v95 << 8) ^ 0x35D0000) & v95)))) & ~v86 | v86 & 0x31A448) ^ 0x2E41A000;
  v101 = (v100 | 0x18CA80) - (v100 | 0xFFE7357F) - 1624705;
  v102 = v97
       + 2036458304
       - v98
       + (((v101 ^ 0x4FF53EE2) + 822320149) ^ ((v101 ^ 0x6D111D8E) + 333954937) ^ ((v101 ^ 0x5DB3125B) + 591769774))
       + 21;
  v103 = (v102 ^ 0xABF732DD) & (2 * (v102 & 0xA3F43ADE)) ^ v102 & 0xA3F43ADE;
  v104 = ((2 * (v102 ^ 0xAE37227D)) ^ 0x1B863146) & (v102 ^ 0xAE37227D) ^ (2 * (v102 ^ 0xAE37227D)) & 0xDC318A2;
  v105 = v104 ^ 0x44108A1;
  v106 = (v104 ^ 0x9801001) & (4 * v103) ^ v103;
  v107 = ((4 * v105) ^ 0x370C628C) & v105 ^ (4 * v105) & 0xDC318A0;
  v108 = v106 ^ 0xDC318A3 ^ (v107 ^ 0x5000083) & (16 * v106);
  v109 = (16 * (v107 ^ 0x8C31823)) & 0xDC318A0 ^ 0x1C21083 ^ ((16 * (v107 ^ 0x8C31823)) ^ 0xDC318A30) & (v107 ^ 0x8C31823);
  v110 = (v108 << 8) & 0xDC31800 ^ v108 ^ ((v108 << 8) ^ 0xC318A300) & v109;
  v111 = v102 ^ (2
               * ((v110 << 16) & 0xDC30000 ^ v110 ^ ((v110 << 16) ^ 0x18A30000) & ((v109 << 8) & 0xDC30000 ^ 0xCC30000 ^ ((v109 << 8) ^ 0x43180000) & v109)));
  v112 = v111 ^ ((((v99 ^ 0xB5D2667) - 1707120983) ^ ((v99 ^ 0x284C8BD5) - 1188115685) ^ ((v99 ^ 0x10B185A0) - 2116827792))
               - (((v101 ^ 0x5291754C) + 745002939) ^ ((v101 ^ 0xD026E962) - 1362080875) ^ ((v101 ^ 0xFDE0AD19)
                                                                                          - 2095706128))
               - 973551486);
  v113 = v98
       - (((v112 ^ 0x28DE82B6) + 754122402) ^ ((v112 ^ 0x39A20FA3) + 1032745909) ^ ((v112 ^ 0xEAE01D19) - 288595697))
       + 82036679;
  v114 = (v113 ^ 0xD3D4615B) & (2 * (v113 & 0xDBD57260)) ^ v113 & 0xDBD57260;
  v115 = ((2 * (v113 ^ 0x6554215B)) ^ 0x7D02A676) & (v113 ^ 0x6554215B) ^ (2 * (v113 ^ 0x6554215B)) & 0xBE81533A;
  v116 = v115 ^ 0x82815109;
  v117 = (v115 ^ 0x3C000209) & (4 * v114) ^ v114;
  v118 = ((4 * v116) ^ 0xFA054CEC) & v116 ^ (4 * v116) & 0xBE815338;
  v119 = (v118 ^ 0xBA014030) & (16 * v117) ^ v117;
  v120 = ((16 * (v118 ^ 0x4801313)) ^ 0xE81533B0) & (v118 ^ 0x4801313) ^ (16 * (v118 ^ 0x4801313)) & 0xBE815330;
  v121 = v119 ^ 0xBE81533B ^ (v120 ^ 0xA8011300) & (v119 << 8);
  v122 = v113 ^ (2
               * ((v121 << 16) & 0x3E810000 ^ v121 ^ ((v121 << 16) ^ 0x533B0000) & (((v120 ^ 0x1680400B) << 8) & 0x3E810000 ^ 0x3E800000 ^ (((v120 ^ 0x1680400B) << 8) ^ 0x1530000) & (v120 ^ 0x1680400B))));
  v123 = (((v111 ^ 0xB9A63D67) + 2140339402) ^ ((v111 ^ 0x8B3D8F67) + 1292455626) ^ ((v111 ^ 0x99EFB998) + 1608218679))
       - (((v112 ^ 0x92E5E323) - 1765171403) ^ ((v112 ^ 0xBFC2A243) - 1141973419) ^ ((v112 ^ 0xD6BBD16C) - 761811588))
       - 602629494;
  v124 = (v123 ^ 0xA513F61B) & (2 * (v123 & 0xB65B875B)) ^ v123 & 0xB65B875B;
  v125 = ((2 * (v123 ^ 0x8593FE2F)) ^ 0x6790F2E8) & (v123 ^ 0x8593FE2F) ^ (2 * (v123 ^ 0x8593FE2F)) & 0x33C87974;
  v126 = v125 ^ 0x10480914;
  v127 = (v125 ^ 0x23803060) & (4 * v124) ^ v124;
  v128 = ((4 * v126) ^ 0xCF21E5D0) & v126 ^ (4 * v126) & 0x33C87974;
  v129 = (v128 ^ 0x3006154) & (16 * v127) ^ v127;
  v130 = ((16 * (v128 ^ 0x30C81824)) ^ 0x3C879740) & (v128 ^ 0x30C81824) ^ (16 * (v128 ^ 0x30C81824)) & 0x33C87970;
  v131 = v129 ^ 0x33C87974 ^ (v130 ^ 0x30801134) & (v129 << 8);
  v132 = v123 ^ (2
               * ((v131 << 16) & 0x33C80000 ^ v131 ^ ((v131 << 16) ^ 0x79740000) & (((v130 ^ 0x3486834) << 8) & 0x33C80000 ^ 0x33800000 ^ (((v130 ^ 0x3486834) << 8) ^ 0x48790000) & (v130 ^ 0x3486834))));
  LODWORD(STACK[0x6800]) = v101;
  v133 = v112 ^ 0xFBD383E8 ^ v101;
  v134 = -1212753415
       * (((v112 ^ 0xD6BE684D) - 762178469) ^ ((v112 ^ 0x2A5EA946) + 779277650) ^ ((v112 ^ 0x77C5107) + 55586065))
       - 2072421777;
  v135 = (v134 ^ 0xEF747915) & (2 * (v134 & 0xF0654255)) ^ v134 & 0xF0654255;
  v136 = ((2 * (v134 ^ 0x4F3C7937)) ^ 0x7EB276C4) & (v134 ^ 0x4F3C7937) ^ (2 * (v134 ^ 0x4F3C7937)) & 0xBF593B62;
  v137 = v136 ^ 0x81490922;
  v138 = (v136 ^ 0x2501242) & (4 * v135) ^ v135;
  v139 = ((4 * v137) ^ 0xFD64ED88) & v137 ^ (4 * v137) & 0xBF593B60;
  v140 = (v139 ^ 0xBD402900) & (16 * v138) ^ v138;
  v141 = ((16 * (v139 ^ 0x2191262)) ^ 0xF593B620) & (v139 ^ 0x2191262) ^ (16 * (v139 ^ 0x2191262)) & 0xBF593B60;
  v142 = v140 ^ 0xBF593B62 ^ (v141 ^ 0xB5113200) & (v140 << 8);
  HIDWORD(v50) = v112;
  LODWORD(v50) = v134 ^ (2
                       * ((v142 << 16) & 0x3F590000 ^ v142 ^ ((v142 << 16) ^ 0x3B620000) & (((v141 ^ 0xA480942) << 8) & 0xBF590000 ^ 0x26400000 ^ (((v141 ^ 0xA480942) << 8) ^ 0x593B0000) & (v141 ^ 0xA480942)))) ^ 0xF8573490;
  v143 = -1986736491
       * (((v133 ^ 0x1E1BAEE6) + 1626147857) ^ ((v133 ^ 0x41C06717) + 1060554210) ^ ((v133 ^ 0x20C3EB22) + 1580550613))
       - 734126066;
  v144 = (v143 ^ 0x26DA25C2) & (2 * (v143 & 0xB4DAB5D4)) ^ v143 & 0xB4DAB5D4;
  v145 = ((2 * (v143 ^ 0x2E5E6CE2)) ^ 0x3509B26C) & (v143 ^ 0x2E5E6CE2) ^ (2 * (v143 ^ 0x2E5E6CE2)) & 0x9A84D936;
  v146 = v145 ^ 0x8A844912;
  v147 = (v145 ^ 0x18009022) & (4 * v144) ^ v144;
  v148 = ((4 * v146) ^ 0x6A1364D8) & v146 ^ (4 * v146) & 0x9A84D934;
  v149 = (v148 ^ 0xA004006) & (16 * v147) ^ v147;
  v150 = ((16 * (v148 ^ 0x90849926)) ^ 0xA84D9360) & (v148 ^ 0x90849926) ^ (16 * (v148 ^ 0x90849926)) & 0x9A84D930;
  v151 = v149 ^ 0x9A84D936 ^ (v150 ^ 0x88049100) & (v149 << 8);
  v152 = v143 ^ (2
               * ((v151 << 16) & 0x1A840000 ^ v151 ^ ((v151 << 16) ^ 0x59360000) & (((v150 ^ 0x12804816) << 8) & 0x1A840000 ^ 0x1A040000 ^ (((v150 ^ 0x12804816) << 8) ^ 0x4D90000) & (v150 ^ 0x12804816))));
  v153 = ((1862270976
         * (((v122 ^ 0x2536EF17) - 651678088) ^ ((v122 ^ 0xB7139C6E) + 1259166991) ^ ((v122 ^ 0x10F0A76F) - 319920624))) | ((995472239 * (((v122 ^ 0x7BBCBE2D) - 2019393714) ^ ((v122 ^ 0x19CB560B) - 438986900) ^ ((v122 ^ 0xE0A23C30) + 482147665)) + 2020375655) >> 8))
       + 1728053248;
  v154 = -1476395008
       * (((v133 ^ 0x609E1F09) + 510180864) ^ ((v133 ^ 0x7FF332FA) + 17141773) ^ ((v133 ^ 0x60750F20) + 511946199))
       + 1178900146;
  v155 = (2 * v154) & 0x90000000 & (v154 ^ 0xCAD987E0) ^ (v154 & 0xC8000000 | 0x362EEA8);
  v156 = (2 * (v154 ^ 0xCAD987E0) + 75829584) & (v154 ^ 0xCAD987E0) ^ 6;
  v157 = ((4 * v155) ^ 0xC891010) & v156 ^ (v155 & 0xDA604400 | 0x102AAA0);
  v158 = (4 * v156) & 0x362EEA8 ^ 0x2604406 ^ ((4 * v156) ^ 0xC891010) & v156;
  v159 = (16 * v157) & 0x362EE80 ^ v157 ^ ((16 * v157) ^ 0x362EEAE0) & v158;
  v160 = (16 * v158) & 0x362EEA0 ^ 0x140040E ^ ((16 * v158) ^ 0x362EEAE0) & v158;
  v161 = v159 ^ 0x222E4A0 ^ (v159 << 8) & 0x362EE00 ^ ((v159 << 8) ^ 0x40040E00) & v160;
  v162 = v154 ^ (2
               * ((v161 << 16) & 0x3620000 ^ v161 ^ ((v161 << 16) ^ 0x6EAE0000) & ((v160 << 8) & 0x3620000 ^ ((v160 << 8) ^ 0x62EE0000) & v160 ^ 0x1000000)));
  v163 = v162 & 0x5A33EEE2 ^ 0x50118E20 ^ ((v152 >> 5) ^ 0xA042C920) & (v162 ^ 0x74C54BED);
  v164 = (v163 | 0x777FE9F4) - (v163 | 0x8880160B) - 2004871669;
  v165 = -673710238
       - 299302912
       * (((v132 ^ 0x54B98538) - 769791123) ^ ((v132 ^ 0x2E88DDE9) - 1473465410) ^ ((v132 ^ 0xC97A2D62) + 1339966263))
       + ((-1248989655
         * (((v132 ^ 0xC830E9) - 2039718210) ^ ((v132 ^ 0xFE18799E) + 2025592779) ^ ((v132 ^ 0x4D9B3CC4) - 885042543))
         - 1443178536) >> 16)
       + 158;
  v166 = (v164 ^ 0x41805D8C ^ ((v50 >> 2) - v153 - 1995405054 - ((2 * ((v50 >> 2) - v153)) & 0x12211E8E) + 1605)) - v165;
  HIDWORD(v50) = (-1248989655
                * (((v132 ^ 0xC830E9) - 2039718210) ^ ((v132 ^ 0xFE18799E) + 2025592779) ^ ((v132 ^ 0x4D9B3CC4)
                                                                                          - 885042543))
                - 1443178536) >> 16;
  LODWORD(v50) = 1411817041 * v165;
  v167 = (-581856355 * v166) >> 4;
  v168 = v167 - 805306368 * v166;
  v169 = ((868402816
         * (((v164 ^ 0x1BD7F537) - 1515694267) ^ ((v164 ^ 0xD65DFE72) + 1747082242) ^ ((v164 ^ 0x51AD98E) - 1150977026))) | ((-1268284019 * (((v164 ^ 0x23DFC1A5) - 1650433065) ^ ((v164 ^ 0x6F6EC2E3) - 787390319) ^ ((v164 ^ 0x8421D18D) + 979268607)) - 1440756453) >> 25))
       + 266767744;
  v170 = (1776619520 * v165) & 0xFFFF0000 | ((v50 >> 4) >> 16);
  v171 = ((1712652288 * v153) | ((-501914091 * v153) >> 16)) - v170 + v169 + v168;
  v172 = __PAIR64__(v167, 1665925583 * v168) >> 1;
  v173 = (-1739587584 * v171) | ((-126883451 * v171) >> 12);
  v174 = 772784128 * v170 + ((-1461667777 * v170) >> 18);
  HIDWORD(v50) = (1582676129 * v169) >> 20;
  LODWORD(v50) = HIDWORD(v50) + 1535774720 * v169;
  LODWORD(v50) = __ROR4__((v50 >> 6) ^ __ROR4__(v172, 6) ^ 0x189D14B8, 26);
  v175 = 72 * v173;
  v176 = (163536200 * v173) | ((1094183849 * v173) >> 29);
  v177 = (-88488122 * v172) | ((2103239587 * v172) >> 31);
  v178 = (-1631448664 * (((v50 ^ 0x27452E06) + v173) ^ v174)) | ((-1814543819
                                                                * (((v50 ^ 0x27452E06) + v173) ^ v174)) >> 29);
  v179 = ((v176 ^ v177) - 357617163) ^ 0xB66DC320 ^ v178;
  v180 = v178 + (v177 ^ (-1386606592 * v174 + ((-1879386719 * v174) >> 20)) ^ v176) - 2 * v178;
  v181 = v179 - 1769792326 + v180;
  v182 = (v181 ^ 0x1C3505B3) & (2 * (v181 & 0x9E31A83A)) ^ v181 & 0x9E31A83A;
  v183 = ((2 * (v181 ^ 0x147445D3)) ^ 0x148BDBD2) & (v181 ^ 0x147445D3) ^ (2 * (v181 ^ 0x147445D3)) & 0x8A45EDE8;
  v184 = v183 ^ 0x8A442429;
  v185 = (v183 ^ 0x201C5C1) & (4 * v182) ^ v182;
  v186 = ((4 * v184) ^ 0x2917B7A4) & v184 ^ (4 * v184) & 0x8A45EDE8;
  v187 = (v186 ^ 0x805A5A9) & (16 * v185) ^ v185;
  v188 = ((16 * (v186 ^ 0x82404849)) ^ 0xA45EDE90) & (v186 ^ 0x82404849) ^ (16 * (v186 ^ 0x82404849)) & 0x8A45EDE0;
  v189 = v187 ^ 0x8A45EDE9 ^ (v188 ^ 0x8044CC00) & (v187 << 8);
  v190 = v181 ^ (2
               * ((v189 << 16) & 0xA450000 ^ v189 ^ ((v189 << 16) ^ 0x6DE90000) & (((v188 ^ 0xA012169) << 8) & 0xA450000 ^ 0xA000000 ^ (((v188 ^ 0xA012169) << 8) ^ 0x45ED0000) & (v188 ^ 0xA012169))));
  v191 = v190 ^ 0xD567E5AB;
  v192 = v190 ^ 0xD567E5AB ^ (v180 + 1331664451 - ((2 * v180) & 0x9EBF2C86));
  v193 = LODWORD(STACK[0x6A50]) ^ 0x4FF0D4BE;
  LODWORD(STACK[0x6920]) = v192;
  LODWORD(STACK[0x68A0]) = v9;
  v194 = (v8 - 78) & (v9 + 81 + (((v193 ^ v192) + 81) ^ 0xBE)) ^ 0x4B;
  v195 = (125 * v194);
  if (v194 >= 0)
    LOBYTE(v196) = v194;
  else
    v196 = -v194;
  v197 = v10 ^ 0xCDB8ACA9;
  v198 = (((2 * (v197 & 0xE9F42852 ^ 0xE8E42000)) | 0x2FF0A9A0) - (v197 & 0xE9F42852 ^ 0xE8E42000) + 1745333040) ^ 0x56F855C0;
  v199 = (v198 - ((2 * v198) & 0x377CF96C) + 465468599) ^ 0x1B8E7DF7 | ((v197 & 0x160BD7AD ^ 0x100344A1)
                                                                      - ((2 * (v197 & 0x160BD7AD ^ 0x100344A1)) & 0xC118A42)
                                                                      + 237561203) ^ 0x1C2A23F3;
  LODWORD(STACK[0x67F0]) = v199 - 1948434203 - ((2 * v199) & 0x17BA81CA);
  LODWORD(STACK[0x6830]) = v5 - 2049856348 - ((2 * v5) & 0xBA35948);
  LODWORD(STACK[0x6940]) = v20 ^ 0x6D76D74B;
  LODWORD(STACK[0x68E0]) = v190;
  LODWORD(STACK[0x6840]) = v176;
  v200 = v176 + 1331664451 - 2 * (v176 & 0x4F5F964B ^ v175 & 8);
  v201 = v195 < (125 * v194 + v196);
  if (v194 >= 0)
    v201 = v196 <= v195;
  LODWORD(STACK[0x6890]) = v22;
  LODWORD(STACK[0x67E0]) = v22 - ((2 * v22) & 0x1386C2A) - 2137246187;
  LODWORD(STACK[0x68B0]) = v132 ^ 0x795B91AB;
  LODWORD(STACK[0x6880]) = v178 + (v190 ^ 0x65C78C17) + 1;
  LODWORD(STACK[0x6960]) = v191;
  LODWORD(STACK[0x6930]) = v191 ^ v200;
  v202 = STACK[0x6AB0];
  v203 = v196 != 1 || v201;
  v204 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((42 * v203) ^ v8)) - 8);
  LODWORD(STACK[0x6810]) = v202 >> 8;
  LODWORD(STACK[0x6870]) = HIBYTE(v202);
  LODWORD(STACK[0x6860]) = HIBYTE(v1);
  LODWORD(STACK[0x68D0]) = 1235578669 * v32;
  LODWORD(STACK[0x6A70]) = v1;
  LODWORD(STACK[0x6950]) = v1 >> 8;
  LODWORD(STACK[0x6910]) = v112;
  LODWORD(STACK[0x68F0]) = v112 ^ 0xFBD383E8;
  return v204(12181, 5099, v21, 1336672893, 3413440825, 4876, 476, 4294956293);
}

uint64_t sub_100D031F0(unsigned int a1, uint64_t a2, int a3, int a4, int a5)
{
  char v5;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;

  *(_DWORD *)(v11 + 4 * (v8 * v9)) = v12 ^ a5 ^ a3 ^ v10 ^ ((v8 * v9) ^ v5) ^ *(_DWORD *)(v6 + 4 * (((v8 * v9) ^ v5) ^ v13));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((502 * (v8 + 1 == a4 + 256)) ^ v7)) - (v7 ^ a1) + a2))();
}

uint64_t sub_100D03254@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;

  v16 = (a6 + a1) * v9;
  v17 = ((v9 + v16) ^ v7) & (((v6 + a5) | v10) ^ a3);
  v18 = *(_DWORD *)(v8 + 4 * (v17 ^ v15));
  v19 = v14 ^ a2 ^ v11 ^ v12;
  *(_DWORD *)(v13 + 4 * ((a6 + a1) * v9)) = v19 ^ (v16 ^ v7) ^ *(_DWORD *)(v8 + 4 * ((v16 ^ v7) ^ v15));
  *(_DWORD *)(v13 + 4 * ((v9 + v16) & 0xFE)) = v19 ^ v17 ^ v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a6 == 254) * a4) ^ v6)) - 8))();
}

uint64_t sub_100D032DC()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (v0 - 1840777588);
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD938] = v2;
  v3 = *(_QWORD *)(STACK[0x6AD8] + 8 * (((v2 != 0) * (v0 - 3506)) ^ v0));
  STACK[0x6AC0] = v1;
  return ((uint64_t (*)(void))(2454194807u - v1 + v3 + 4))();
}

uint64_t sub_100D03348(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 138)) - 4))(a1, 18226, 1651985782, 14526, 816527851, 1247390908, 67, LODWORD(STACK[0x6AA0]));
}

uint64_t sub_100D0345C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  char v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  char v15;
  int v16;
  int v17;
  char v18;
  unsigned int v19;

  v19 = *(_DWORD *)(*(_QWORD *)(v11 + 8 * (a9 ^ v13))
                  + 4
                  * ((v15 ^ v18 ^ (((v10 * v9) ^ v14) - ((2 * ((v10 * v9) ^ v14)) & 0x8F) + 71)) ^ a7)
                  - 4);
  *(_DWORD *)(a1 + 4 * (v10 * v9)) = a8 ^ v16 ^ v17 ^ v19 ^ a6 ^ a5 & (v19 >> 2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (a9 ^ v12 ^ ((((((a9 + a3) ^ a4) + v10 - a9) | (a9 - (((a9 + a3) ^ a4) + v10))) >= 0)
                                                     * a2)))
                            - 4))();
}

uint64_t sub_100D034F0()
{
  int v0;
  unint64_t v1;
  uint64_t v2;

  v1 = (v0 ^ 0x2D90u) - 1840777904;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD958] = v2 + 0x56641C0D7A8E5919;
  STACK[0x6AC0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(((v2 == 0) * (v1 ^ 0x92480A0B)) ^ v0)) - 8))();
}

uint64_t sub_100D03564(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;
  _BOOL4 v9;
  int v10;

  LODWORD(STACK[0x6AA0]) = v2;
  v3 = (char)((LOBYTE(STACK[0x6A50]) + 11 + (((LOBYTE(STACK[0x6A60]) ^ 0x60 ^ LOBYTE(STACK[0x6930])) + 11) ^ 0x60)) & 0xFE ^ 0xD1);
  v4 = (101
                       * ((LOBYTE(STACK[0x6A50])
                         + 11
                         + (((LOBYTE(STACK[0x6A60]) ^ 0x60 ^ LOBYTE(STACK[0x6930])) + 11) ^ 0x60)) & 0xFE ^ 0xD1));
  if (v3 >= 0)
    LOBYTE(v5) = (LOBYTE(STACK[0x6A50]) + 11 + (((LOBYTE(STACK[0x6A60]) ^ 0x60 ^ LOBYTE(STACK[0x6930])) + 11) ^ 0x60)) & 0xFE ^ 0xD1;
  else
    v5 = -v3;
  v6 = v5;
  v7 = (101
      * ((LOBYTE(STACK[0x6A50])
        + 11
        + (((LOBYTE(STACK[0x6A60]) ^ 0x60 ^ LOBYTE(STACK[0x6930])) + 11) ^ 0x60)) & 0xFE ^ 0xD1)
      + (_BYTE)v5) & 0xFE;
  v8 = v5 <= v4;
  v9 = v7 > v4;
  if (v3 >= 0)
    v10 = v8;
  else
    v10 = v9;
  LODWORD(STACK[0x6A90]) *= 1823809958;
  if (v6 != 1)
    v10 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (14235 * v10))) - 12))(a1, 3934771806, 3934765383, 4294960363, 113, LODWORD(STACK[0x69D0]), LODWORD(STACK[0x68C0]), LODWORD(STACK[0x6920]));
}

uint64_t sub_100D03710@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W7>, char a7@<W8>)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;

  *(_DWORD *)(a1 + 4 * (v9 * a7)) = a5 ^ a4 ^ a2 ^ a6 ^ __ROR4__(*(_DWORD *)(v7+ 4* (((v9 * a7) ^ v12) ^ a3)), 28);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v9 + 1 != ((v8 + 1411) ^ (v11 + 1559))) * v10) ^ v8))
                            - 12))();
}

uint64_t sub_100D0376C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, char a8@<W8>)
{
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  char v12;
  unsigned __int8 v13;
  int v14;
  int v15;

  v13 = (v8 + v10) * a8;
  v14 = a6 ^ a5 ^ a7;
  v15 = __ROR4__(*(_DWORD *)(v9 + 4 * (((a8 + v13) ^ v12) ^ a4)), 28);
  *(_DWORD *)(a1 + 4 * v13) = v14 ^ a2 ^ __ROR4__(*(_DWORD *)(v9 + 4 * ((v13 ^ v12) ^ a4)), 28);
  *(_DWORD *)(a1 + 4 * ((a8 + v13) & 0xFE)) = v14 ^ (v11 + 1514) ^ v15 ^ a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((185 * (v8 == 254)) ^ v11)) - 12))();
}

uint64_t sub_100D037F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v5 = (v4 + a4) | 0x2B20;
  v6 = (v4 - 1219846170) & 0xDAFD4F7F;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD930] = v7;
  STACK[0x6AC0] = v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(((v5 + v6 + 1840761512) * (v7 == 0)) ^ v4)))();
}

uint64_t sub_100D0385C(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  unsigned __int8 v8;
  _BOOL4 v9;
  _BOOL4 v10;
  int v11;

  v2 = LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x68A0]);
  LODWORD(STACK[0x69D0]) = v2;
  v3 = (((v1 - 8372) | 0x2100) ^ 0xFFFFD48E) & (LODWORD(STACK[0x69C0]) + (v2 ^ 0x2BF56870) + 1155762068) ^ 0x75552DB3;
  v4 = (char)(((v1 + 76) ^ 0x8E) & (LOBYTE(STACK[0x69C0]) + (v2 ^ 0x70) - 108) ^ 0xB3);
  v5 = (31 * v3);
  if (v4 >= 0)
    LOBYTE(v6) = v4;
  else
    v6 = -v4;
  v7 = v6;
  v8 = 31 * v3 + v6;
  v9 = v6 <= v5;
  v10 = v5 < v8;
  if (v4 >= 0)
    v11 = v9;
  else
    v11 = v10;
  if (v7 != 1)
    v11 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((84 * v11) ^ v1)) - 8))(a1, 4538);
}

uint64_t sub_100D039A4@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  char v15;
  int v16;
  int v17;

  v17 = *(_DWORD *)(v8 + 4 * (((v10 * a8) ^ v15) ^ v13));
  *(_DWORD *)(a1 + 4 * (((v11 ^ (2 * v9)) + a6) & (v10 * a8))) = v14 ^ a5 ^ v16 ^ v12 ^ (v17 + a3 - (a4 & (2 * v17)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 + 1 == a2 + 2002) * a7) ^ v9)) - 8))();
}

uint64_t sub_100D03A0C@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, char a7@<W8>)
{
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  char v13;
  int v14;
  int v15;
  int v16;
  int v17;

  v15 = *(_DWORD *)(v8 + 4 * (((((v11 ^ 0x76 ^ a3) + v7) * a7) ^ v13) ^ v10));
  v16 = *(_DWORD *)(v8 + 4 * ((((a3 + v7 - 45) * a7) ^ v13) ^ v10));
  v17 = v12 ^ a6 ^ v14 ^ v9;
  *(_DWORD *)(a1 + 4 * (((v11 ^ 0x76 ^ a3) + v7) * a7)) = v17 ^ (v15 + a4 - (a5 & (2 * v15)));
  *(_DWORD *)(a1 + 4 * (((a3 + v7 - 45) * a7) & 0xFE)) = v17 ^ (v16 + a4 - (a5 & (2 * v16)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v7 == 254) * a2) ^ v11)) - 8))();
}

uint64_t sub_100D03AAC()
{
  int v0;
  uint64_t v1;

  STACK[0x6AC0] = (v0 + 10212) ^ 0x92484949;
  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD960] = v1;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v1 != 0) * ((v0 + 10212) ^ 0x7FF6)) ^ v0)))();
}

uint64_t sub_100D03B0C(uint64_t a1)
{
  int v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(STACK[0x6AD8] + 8 * v1))(a1, 3543824822, 16593, 16648, 5296, LODWORD(STACK[0x6990]), LODWORD(STACK[0x69A0]), LODWORD(STACK[0x6850]));
}

uint64_t sub_100D03CB8(uint64_t a1, int a2, unsigned int a3, int a4, int a5, int a6, int a7, int a8)
{
  char v8;
  unsigned __int8 v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;

  HIDWORD(v18) = *(_DWORD *)(*(_QWORD *)(v11 + 8 * (v14 ^ a4))
                           + 4 * (v15 ^ (v14 - 632) ^ (v9 ^ v8) ^ a3)
                           - 8);
  LODWORD(v18) = HIDWORD(v18);
  *(_DWORD *)(a1 + 4 * v9) = v16 ^ a7 ^ v12 ^ a6 ^ a8 ^ v17 ^ v13 ^ (v18 >> 9) ^ a2 ^ ((v18 >> 9) >> 1) & 0x35F3FB30;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v10 == 0) * a5) ^ v14)))();
}

uint64_t sub_100D03D40()
{
  int v0;
  uint64_t v1;

  STACK[0x6AC0] = (v0 - 1840789055);
  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD950] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((69 * (v1 == 0)) ^ v0))
                            - ((v0 - 578356488) & 0x2278E77F ^ 0x233ALL)))();
}

uint64_t sub_100D03DC4(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;
  int v6;

  v2 = (char)((LOBYTE(STACK[0x6A50]) - 69 + (((LOBYTE(STACK[0x69D0]) ^ 0xED) - 69) ^ 0xED)) & 0xFE ^ 0xE7);
  v3 = (121
                       * ((LOBYTE(STACK[0x6A50]) - 69 + (((LOBYTE(STACK[0x69D0]) ^ 0xED) - 69) ^ 0xED)) & 0xFE ^ 0xE7));
  if (v2 >= 0)
    LOBYTE(v4) = (LOBYTE(STACK[0x6A50]) - 69 + (((LOBYTE(STACK[0x69D0]) ^ 0xED) - 69) ^ 0xED)) & 0xFE ^ 0xE7;
  else
    v4 = -v2;
  v5 = v4 <= v3;
  if (v2 < 0)
    v5 = ((121
         * ((LOBYTE(STACK[0x6A50]) - 69 + (((LOBYTE(STACK[0x69D0]) ^ 0xED) - 69) ^ 0xED)) & 0xFE ^ 0xE7)
         + (_BYTE)v4) & 0xFEu) > v3;
  v6 = v4 != 1 || v5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ ((4 * v6) | (v6 << 6)))) - 12))(a1, 4294962225, 28585, 3090093462, 2416803201, 475410607, 28653, 163);
}

uint64_t sub_100D03F40@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, unsigned int a6@<W7>, char a7@<W8>)
{
  int v7;
  char v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  *(_DWORD *)(a1 + 4 * (v11 * a7)) = v14 ^ v12 ^ a5 ^ v13 ^ (*(_DWORD *)(v9
                                                                                          + 4
                                                                                          * (((v11 * a7) ^ v8) ^ a6))
                                                                              + a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v10 - 4002 + v11 + a2 == v7 + 256) * a3) ^ v10))
                            - 12))();
}

uint64_t sub_100D03FA0@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, char a4@<W5>, int a5@<W6>, unsigned int a6@<W7>, char a7@<W8>)
{
  char v7;
  int v8;
  char v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;

  v15 = v13 ^ v11 ^ a3 ^ v12;
  v16 = v15 ^ (*(_DWORD *)(v10 + 4 * (((a7 + a7 * (v7 + v8)) ^ v9) ^ a6)) + a2);
  *(_DWORD *)(a1 + 4 * ((a4 + v8 + v14 - 102 - 6) * a7)) = v15 ^ (*(_DWORD *)(v10
                                                                                               + 4
                                                                                               * ((((a4 + v8 + v14 - 102 - 6) * a7) ^ v9) ^ a6))
                                                                                   + a2);
  *(_DWORD *)(a1 + 4 * ((a7 + a7 * (v7 + v8)) & 0xFE)) = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v8 == 254) * a5) ^ v14)) - 12))();
}

uint64_t sub_100D0402C()
{
  int v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (v0 - 1840777553);
  v2 = STACK[0x12B8];
  STACK[0x6AC0] = v1;
  v3 = v1 ^ v2;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1032);
  STACK[0xD928] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((35 * (v4 == 0)) ^ v0)) - v3 + 3114497391))();
}

uint64_t sub_100D04090(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v2 ^ LODWORD(STACK[0xE00]) ^ (2044 * (v2 > 0x8A286931)))) - 4))(a1, LODWORD(STACK[0x6980]), v1, LODWORD(STACK[0x67F0]), LODWORD(STACK[0x6940]), LODWORD(STACK[0x67E0]), LODWORD(STACK[0x68B0]), LODWORD(STACK[0x6870]));
}

uint64_t sub_100D041EC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v9;
  unsigned __int8 v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;

  v21 = v12 ^ a7 ^ (((a9 + v15) & 0x1F48DBF7) + (v9 ^ a8 ^ v10 ^ v20) + v16) ^ v18 ^ *((_DWORD *)*(&off_1015B46D0
                                                                                                 + (a9 ^ v17))
                                                                                     + (v9 ^ a8 ^ v10 ^ v19)
                                                                                     - 2);
  v22 = a3 ^ v13 ^ a6 ^ a5 ^ v14 ^ (v21 - ((2 * v21) & 0x269D512) - 2127238519);
  *(_DWORD *)(a1 + 4 * v10) = a2 ^ a4 ^ 0xF49EF553 ^ ((v22 ^ 0x9098BE51)
                                                      - 1458956397
                                                      - 2 * ((v22 ^ 0x9098BE51) & 0x290A1EDF ^ v22 & 2)
                                                      + 1866);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((28122 * (v11 == 0)) ^ a9)) - 4))();
}

uint64_t sub_100D042E8()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x5A48])(1028);
  STACK[0xD920] = v1;
  STACK[0x6AC0] = v0 ^ 0x9248112D;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((((((v0 + 9886) ^ (v1 == 0)) & 1) == 0) * (v0 ^ 0x4B72)) ^ v0)))();
}

uint64_t sub_100D04350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned __int8 v9;
  _BOOL4 v10;
  _BOOL4 v11;
  int v12;

  v5 = (char)((v4 - 105) ^ 0xEA ^ (LOBYTE(STACK[0x6A30])
                                 + (((LOBYTE(STACK[0x6A50]) ^ LOBYTE(STACK[0x6930]) ^ 0xA6) + 106) ^ 0xA6)
                                 + ((v4 - 111) | 0x76)
                                 + 115) & 0xFE);
  v6 = (-23
                       * ((v4 - 105) ^ 0xEA ^ (LOBYTE(STACK[0x6A30])
                                             + (((LOBYTE(STACK[0x6A50]) ^ LOBYTE(STACK[0x6930]) ^ 0xA6) + 106) ^ 0xA6)
                                             + ((v4 - 111) | 0x76)
                                             + 115) & 0xFE));
  if (v5 >= 0)
    LOBYTE(v7) = (v4 - 105) ^ 0xEA ^ (LOBYTE(STACK[0x6A30])
                                    + (((LOBYTE(STACK[0x6A50]) ^ LOBYTE(STACK[0x6930]) ^ 0xA6) + 106) ^ 0xA6)
                                    + ((v4 - 111) | 0x76)
                                    + 115) & 0xFE;
  else
    v7 = -v5;
  v8 = v7;
  v9 = -23
     * ((v4 - 105) ^ 0xEA ^ (LOBYTE(STACK[0x6A30])
                           + (((LOBYTE(STACK[0x6A50]) ^ LOBYTE(STACK[0x6930]) ^ 0xA6) + 106) ^ 0xA6)
                           + ((v4 - 111) | 0x76)
                           + 115) & 0xFE)
     + v7;
  v10 = v7 <= v6;
  v11 = v6 < v9;
  if (v5 < 0)
    v10 = v11;
  v12 = v8 != 1 || v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7 * v12) | v4)) - 12))(a1, 1656674234, a3, a4, 1050092, 1237606336, 2223783948, 1683580349);
}

uint64_t sub_100D04554@<X0>(uint64_t a1@<X0>, int a2@<W6>, int a3@<W7>, char a4@<W8>)
{
  unsigned int v4;
  char v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned __int8 v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;

  v21 = (v9 + 47) * a4;
  v22 = LODWORD(STACK[0x6930]) ^ v14 ^ *(_DWORD *)(v6 + 4 * ((v21 ^ v5) ^ v4));
  v23 = ((v7 + 1274821886) ^ v13 ^ v22)
      + 1351944226
      + (((v22 ^ a3) + v10) ^ ((v22 ^ v16) + v17) ^ ((v22 ^ 0xBD6FD829) - 2138550282))
      + 1692;
  v24 = (v23 ^ 0x23A1368C) & (2 * (v23 & v11)) ^ v23 & v11;
  v25 = ((2 * (v23 ^ 0x27A9732C)) ^ LODWORD(STACK[0x1EB8])) & (v23 ^ 0x27A9732C) ^ (2 * (v23 ^ 0x27A9732C)) & v19;
  v26 = ((4 * (v25 ^ 0x84844404)) ^ LODWORD(STACK[0x1EB0])) & (v25 ^ 0x84844404) ^ (4 * (v25 ^ 0x84844404)) & v19;
  v27 = (v26 ^ 0x1005EC) & (16 * ((v25 ^ 0x1801C4) & (4 * v24) ^ v24)) ^ (v25 ^ 0x1801C4) & (4 * v24) ^ v24;
  v28 = ((16 * (v26 ^ a2)) ^ LODWORD(STACK[0x1EAC])) & (v26 ^ a2) ^ (16 * (v26 ^ a2)) & (v19 - 12);
  v29 = v27 ^ v19 ^ (v28 ^ 0x84453C) & (v27 << 8);
  v30 = v8 ^ v13 ^ v23 ^ (2
                        * ((v29 << 16) & v18 ^ v29 ^ ((v29 << 16) ^ 0x45FC0000) & (((v28 ^ 0x8418003C) << 8) & 0x849C0000 ^ 0x980000 ^ (((v28 ^ 0x8418003C) << 8) ^ 0x9C450000) & (v28 ^ 0x8418003C))));
  v31 = (((v22 ^ 0xFD10F2DC) - 1057528575) ^ ((v22 ^ 0x43B651C9) + 2119288342) ^ ((v22 ^ 0x8F748EBB) - 1298982552))
      - 1631660350
      + (((v30 ^ LODWORD(STACK[0x1EB4])) + v20) ^ ((v30 ^ 0x9B5A233) - 1847446221) ^ ((v30 ^ 0xA6F111F8) + 1051100922));
  v32 = (v31 ^ 0xC607C13D) & (2 * (v31 & 0x9657E83D)) ^ v31 & 0x9657E83D;
  v33 = ((2 * (v31 ^ 0xCE88017D)) ^ 0xB1BFD280) & (v31 ^ 0xCE88017D) ^ (2 * (v31 ^ 0xCE88017D)) & v15;
  v34 = ((4 * (v33 ^ 0x48402940)) ^ 0x637FA500) & (v33 ^ 0x48402940) ^ (4 * (v33 ^ 0x48402940)) & v15;
  v35 = (v33 ^ 0x109FC800) & (4 * v32) ^ v32;
  v36 = ((16 * (v34 ^ 0x18804840)) ^ 0x8DFE9400) & (v34 ^ 0x18804840) ^ (16 * (v34 ^ 0x18804840)) & v15;
  v37 = (v34 ^ 0x405FA100) & (16 * v35) ^ v35 ^ v15 ^ (v36 ^ 0x8DE8000) & (((v34 ^ 0x405FA100) & (16 * v35) ^ v35) << 8);
  *(_DWORD *)(a1 + 4 * v21) = v31 ^ (2
                                     * ((v37 << 16) & v12 ^ v37 ^ ((v37 << 16) ^ 0x69400000) & (((v36 ^ 0x50016940) << 8) & v12 ^ 0x160000 ^ (((v36 ^ 0x50016940) << 8) ^ 0x5FE90000) & (v36 ^ 0x50016940)))) ^ 0x6E9A592C;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((5572 * (v9 == 1656674489)) ^ v7)) - 12))();
}

uint64_t sub_100D04934()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((106 * (v0 < (char)(((66 * (v1 ^ 0x9C) - 116) | 0x87) ^ 0x6D))) ^ v1)))();
}

uint64_t sub_100D04978()
{
  int v0;
  int v1;
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((983 * (v0 >= (char)((((v1 ^ 0x3A) * v2) ^ 0x3B) + 64))) ^ v1))
                            - 8))();
}

uint64_t sub_100D049B4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((245 * (v0 >= (char)((v1 + 15) ^ 0xE8))) ^ v1))
                            - ((1010 * (v1 ^ 0x4D7Du)) ^ 0x4708)))();
}

uint64_t sub_100D04A00()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((25 * (v0 < (char)((v1 - 5) ^ ((v1 - 66) | 0x11) ^ 0xBB))) ^ v1)))();
}

uint64_t sub_100D04A44@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v1 ^ 0x5402) - 574) * (a1 == 524)) ^ v1))
                            - ((v1 - 20833) | 0x1004u)
                            + 4206))();
}

uint64_t sub_100D04A8C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x306 ^ (301 * (v0 ^ 0x5DF)))) - 12))();
}

uint64_t sub_100D04AC4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((2 * (v1 & 0x49D86FB7 ^ 0x7392) - 4490) | 0x2944) - 15260) * (v0 < -124)) | v1 & 0x49D86FB7))
                            - 4))();
}

uint64_t sub_100D04B14()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v0 < (char)((v1 + 46) ^ 0xB9)) * ((v1 ^ 0x33D4) - 6065)) ^ v1))
                            - 4))();
}

uint64_t sub_100D04B54@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (54 * (a1 == 536))))
                            - ((v1 - 1174393566) | 0x4380202u)
                            + 3191359222))();
}

uint64_t sub_100D04BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 + 3330)) - 12))(STACK[0xA4D0], a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100D04C7C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (26 * (v0 < -98))))
                            - (((v1 ^ 0x615Au) + 3653) ^ 0x3E0BLL)))();
}

uint64_t sub_100D04CB4()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (85 * (v0 > -101))))
                            - (((v1 ^ 0x4EEu) - 2129) ^ 0x22FBLL)))();
}

uint64_t sub_100D04CEC()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8
                                              * (int)((((v1 + 829870751) & 0xCE8956F7 ^ 0x543B) * (v0 < -99)) ^ v1)))();
}

uint64_t sub_100D04D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _DWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  LODWORD(STACK[0x6AB0]) = v8[388];
  v11 = v8[395];
  v12 = v8[396];
  v13 = v8[397];
  v14 = v8[399];
  STACK[0x6AC0] = v8[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - ((a8 - 65535589) & 0x3E7FFD7) + 5842))(v11, v12, v13, v14, STACK[0xE4E8], a6, v9 + (v10 - 60980060), LODWORD(STACK[0xE508]));
}

uint64_t sub_100D04DEC()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (int)(((((v1 + 12526) ^ 0xFFFFF6E3) + ((v1 + 12526) | 0x905)) * (v0 < -118)) | v1)))();
}

uint64_t sub_100D04E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned __int16 a8@<W8>)
{
  int v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x6AD8] + 8 * ((1007 * ((((v8 - 15700) ^ 0x1271) & 0xFAFD) == a8)) ^ v8)))(a1, a2, a3, a4, a5, a6, a7, (v8 - 15700) | 0x502u);
}

uint64_t sub_100D04E6C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 17961) ^ 0x1589)) - 12))();
}

uint64_t sub_100D04EEC()
{
  int v0;
  int v1;
  _BOOL4 v2;

  v2 = v0 >= (char)(((v1 - 19) ^ 0xB) + v1 - 13);
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((4 * v2) | (8 * v2)) ^ v1)))();
}

uint64_t sub_100D04F20()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((((17 * (v1 ^ 0x4A4E) + 181) | 0xC00) ^ 0x2FB3) * (v0 < -109)) ^ v1))
                            - 12))();
}

uint64_t sub_100D04F5C(int a1)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((((((v2 ^ 0x2292) * a1 - 12772) | 0x401) ^ 0x6AD) * (v1 == -111)) ^ v2)))();
}

uint64_t sub_100D04F9C@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v1 - 15698) ^ 0x5E8) * (a1 == 524)) ^ v1))
                            - (((v1 - 12867) | 0x460u) ^ 0x156FLL)))();
}

uint64_t sub_100D04FF0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 + 3425) ^ v0)) - 12))();
}

uint64_t sub_100D05014()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (v1 | (8 * (((v0 < -122) ^ (v1 - 120 + v1 + 73)) & 1))))
                            - 8))();
}

uint64_t sub_100D05048()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v0 < (char)((v1 - 111) ^ 0x19)) * (((v1 | 0x2400) ^ 0x4F2) - 8918)) ^ (v1 | 0x2400)))
                            - 12))();
}

uint64_t sub_100D0509C@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((56
                                          * ((unsigned __int16)((((190 * (v1 & 0x57FF ^ 0x1299) - 1326) | 0x1072) ^ 0xEDA1)
                                                              + a1) < 0xFFDFu)) ^ v1 & 0x5CEE57FFu))
                            - 12))();
}

uint64_t sub_100D050F8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD))(STACK[0x6AD8] + 8 * (v1 + v2)))(a1, *(unsigned int *)(v3 + 1584));
}

uint64_t sub_100D05120()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((v0 >= (char)(((v1 - 70) & 0xDB) + 23))
                                          * ((v1 - 2107835948) & 0x7DA2FE2B ^ 0x3616)) ^ v1))
                            - 8))();
}

uint64_t sub_100D05180()
{
  int v0;
  unsigned int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v0 < (char)(v1 ^ 0xB1)) * (v1 ^ 0x3617)) ^ v1)))();
}

uint64_t sub_100D051B4()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((((v1 ^ 0x7214) - 15240) ^ 0x604C) * (v0 == -80)) ^ v1)))();
}

uint64_t sub_100D051E8@<X0>(__int16 a1@<W8>)
{
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((484
                                          * ((unsigned __int16)(a1 + v1 - 16501 + ((v1 + 2784) & 0xFEFE) - 30025) > 0xF7FEu)) ^ v1))
                            - 8))();
}

uint64_t sub_100D05240@<X0>(__int16 a1@<W8>)
{
  __int16 v1;
  unsigned int v2;
  unsigned __int16 v3;
  uint64_t v4;

  v3 = (v2 + 11238) & a1 ^ 0x44EC;
  v4 = ((uint64_t (*)(_QWORD))STACK[0x5510])((unsigned __int16)(a1 ^ (2
                                                                              * (v1 & (2
                                                                                     * (v1 & (2
                                                                                            * (v1 & (2 * (v1 & (2 * (v1 & (2 * (v1 & (2 * (v1 & (2 * (v1 & (2 * (v1 & (2 * ((((unsigned __int16)(v1 & (2 * (v1 & (2 * v3) ^ v3))) ^ v3) << ((v2 ^ 0xBC) - 117)) & v1 ^ v3)) ^ v3)) ^ v3)) ^ v3)) ^ v3)) ^ v3)) ^ v3)) ^ v3)) ^ v3)) ^ v3))) ^ 0x86B0u);
  STACK[0xAA00] = v4;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((v4 == 0) | v2)))();
}

uint64_t sub_100D05304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 + 16290)) - 12))(a1, a2, a3, a4, a5, a6, a7, LODWORD(STACK[0xE508]));
}

uint64_t sub_100D05334()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7 * (v0 < (char)((v1 - 117) ^ 0xB))) ^ v1)) - 4))();
}

uint64_t sub_100D05364@<X0>(unsigned __int16 a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((a1 == ((unsigned __int16)(v1 - 6177) ^ 0x1773)) ^ v1)))();
}

uint64_t sub_100D053A4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 36904) - 12))();
}

uint64_t sub_100D0540C()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (137 * (v0 > -108))))
                            - (((v1 ^ 0x5589u) - 2268) ^ 0x2D1FLL)))();
}

uint64_t sub_100D05448@<X0>(unsigned __int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((32133 * (a1 == (unsigned __int16)((v1 ^ 0x3006) - 997))) ^ v1))
                            - ((v1 - 518068356) & 0x1EE0F7EF ^ 0x156BLL)))();
}

uint64_t sub_100D054A4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 4272)) - 12))();
}

uint64_t sub_100D054DC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((82 * (v0 < (char)(((4 * v1) ^ 0x64) + (v1 ^ 0xC7)))) ^ v1))
                            - 12))();
}

uint64_t sub_100D0551C()
{
  unsigned __int8 v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8
                                              * ((28264 * ((((v1 + 34) | 0x42) + 30) == v0)) ^ v1)))();
}

uint64_t sub_100D05558@<X0>(int a1@<W7>, __int16 a2@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((((a1 - 1858355238) & 0x6EC42FDB ^ 0x562)
                                          * ((unsigned __int16)(a2 - 553) < 0xFFDFu)) ^ (a1 + 3672)))
                            - (a1 - 1261)
                            + 4206))();
}

uint64_t sub_100D055B4(uint64_t a1, uint64_t a2)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 + 1281)) - 8))(a1, a2, LODWORD(STACK[0xE4D8]));
}

uint64_t sub_100D055E0()
{
  unsigned __int8 v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((27590 * ((((v1 + 2) | 0x62) + 55) == v0)) ^ v1)))();
}

uint64_t sub_100D0561C@<X0>(int a1@<W7>, __int16 a2@<W8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((((a1 + 2020244113) & 0x8795777F) - 1864) * (a2 == 528)) ^ (a1 + 5686)))
                            - ((a1 + 5686) ^ 0x2B91)))();
}

uint64_t sub_100D05678()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2705)) - 12))();
}

uint64_t sub_100D05700()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((((((v1 ^ 0x668) - 936) ^ 0x76C6) - 18928) * (v0 < -117)) ^ v1 ^ 0x668)))();
}

uint64_t sub_100D05738@<X0>(unsigned __int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((10797 * (a1 == ((unsigned __int16)(v1 - 13459) ^ 0x1773))) ^ v1))
                            - (v1 - 17005)
                            + 1917))();
}

uint64_t sub_100D05784()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 2684)) - 12))();
}

uint64_t sub_100D057F8@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (248 * (a1 == 524))))
                            - ((v1 - 17218) ^ 0x60DLL)))();
}

uint64_t sub_100D05838()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 197) ^ v0 ^ (5604 * (v0 != -1686156304)))) - 12))();
}

uint64_t sub_100D05874()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v0 < (char)(v1 ^ 0xC9)) * (((v1 - 10052) | 0x2281) - 10829)) ^ v1))
                            - 4))();
}

uint64_t sub_100D058B4@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (28288 * (a1 == 528))))
                            - ((v1 ^ 0x3FEAu)
                             - 3540)
                            + 1931))();
}

uint64_t sub_100D058F4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x158A)) - 12))();
}

uint64_t sub_100D05974()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_100D05B10@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = STACK[0x6508] + 1261;
  STACK[0x9E40] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x8F8])) - (v1 ^ 0x156F)))();
}

uint64_t sub_100D05B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x6AB0]) = STACK[0xE4B4];
  v8 = LODWORD(STACK[0xE4D0]);
  v9 = LODWORD(STACK[0xE4D4]);
  v10 = LODWORD(STACK[0xE4D8]);
  v11 = LODWORD(STACK[0xE4E0]);
  STACK[0x6AC0] = LODWORD(STACK[0xE4E4]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - (((a8 - 1233) | 0x644u) ^ 0x16D2)))(v8, v9, v10, v11, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100D05BF0()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((v0 < (char)(v1 ^ 6)) * ((v1 + 89580614) & 0xFAA8FEB5 ^ 0x2CC3)) ^ v1))
                            - 12))();
}

uint64_t sub_100D05C38@<X0>(unsigned __int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((52
                                          * (a1 != (((unsigned __int16)(v1 - 10292) | 0x1102) ^ (unsigned __int16)(v1 - 5414)))) ^ v1))
                            - 12))();
}

uint64_t sub_100D05C84()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v0 - 1645950750) & 0x621B1AFE) + 732) ^ (v0 - 9890)))
                            - 12))();
}

uint64_t sub_100D05CC8()
{
  int v0;
  _QWORD *v1;

  v1 = (_QWORD *)STACK[0x78D8];
  *v1 = 0;
  v1[1] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v0 & 0xD5562F7C ^ 0x1767)) - 12))();
}

uint64_t sub_100D05D94()
{
  unsigned __int8 v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * ((((((_BYTE)v1 - 64) & 0xC3 | 0x14) == v0) * ((v1 - 3484) ^ 0x1487)) ^ v1)))();
}

uint64_t sub_100D05DE0@<X0>(__int16 a1@<W8>)
{
  int v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(_QWORD))STACK[0x5510])((unsigned __int16)(((7 * (v1 ^ 0x2AEE)) ^ 0xF403) + a1));
  STACK[0x8298] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v2 != 0) * (219 * (v1 ^ 0x2B9A) + 19297)) ^ v1)) - 8))();
}

uint64_t sub_100D05E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 + 9682))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 1672555516);
}

uint64_t sub_100D05F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x6AD8]
                                                                      + 8
                                                                      * (int)((((v3 + 760517373) & 0x14733676 ^ 0x24E)
                                                                             * (v3 < 0xD9536F51)) | (v3 + 1103616512))))(a1, a2, a3, *(unsigned int *)(v4 + 1596));
}

uint64_t sub_100D05F8C@<X0>(unsigned __int16 a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((2936 * (((((unsigned __int16)(v1 - 32490) & STACK[0xDF4]) - 832) & 0xFFFE) == a1)) ^ v1)))();
}

uint64_t sub_100D05FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 + 3331)) - 12))(STACK[0x94D0], a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100D060AC@<X0>(unsigned __int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((a1 == (unsigned __int16)(v1 - 11688))
                                               * ((v1 + 387168291) & 0xE8EC1E2E ^ 0x67C)) ^ v1))
                            - 4))();
}

uint64_t sub_100D060FC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((v0 ^ 0xF372335F) < 0x6D81667D)
                                               * ((v0 + 1593995768) & 0xA0FD9877 ^ 0x2B9C)) ^ (v0 + 4251)))
                            - 12))();
}

uint64_t sub_100D06164()
{
  unsigned __int8 v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * (int)(((v0 == (((v1 + 118) & 0xEF) + 34))
                                     * (((v1 + 607425256) & 0xDBCB5F7B) + 22215)) ^ v1)))();
}

uint64_t sub_100D061C0@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (31 * (a1 == 524))))
                            - (((v1 - 4053) | 0x48u) ^ 0x5D4)))();
}

uint64_t sub_100D06204()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ 0x1379)) - 98 * (v0 ^ 0x5F3u) + 4202))();
}

uint64_t sub_100D06240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x6AD8] + 8 * ((((v8 + 9347) ^ v9) * (v7 == -78)) ^ v8)))(a1, a2, a3, a4, a5, a6, a7, (v8 + 9347) ^ 0x52E1u);
}

uint64_t sub_100D06270@<X0>(__int16 a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8 * (int)(((((v1 - 1056425824) | 0x2103E80) ^ 0xC318B123) * (a1 == 524)) ^ v1)))();
}

uint64_t sub_100D062BC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v0 - 16750) ^ 0x10B5)) - 12))();
}

uint64_t sub_100D062F4@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((((v1 ^ 0x63DF) - 19995) | 0x1036) - 2684) ^ 0x524) * (a1 == 524)) ^ v1 ^ 0x63DF))
                            - 4))();
}

uint64_t sub_100D0633C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 4263)) - 12))();
}

uint64_t sub_100D0636C@<X0>(__int16 a1@<W8>)
{
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((((v1 - 10523) | 0x144) + 4265) * (a1 == 536)) ^ v1)))();
}

uint64_t sub_100D063C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 + 3351)) - 12))(STACK[0x9CF8], a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100D06488()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  v3 = (((v0 ^ 0x54F1CCEA) + 639852601) ^ ((v0 ^ 0xB816C9FB) - 893098710) ^ (((v2 - 19334) ^ 0x9E356E74)
                                                                           + (v0 ^ 0xECE7C25B)))
     - 1926392713;
  *(_DWORD *)(v1 + 1656) = v3;
  STACK[0x6AC0] = v3;
  v4 = ((uint64_t (*)(void))STACK[0x5510])();
  STACK[0x8BD0] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((47 * (v4 == 0)) ^ v2)) - 8))();
}

uint64_t sub_100D06530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v4 ^ 0x1088) + 14807))
                                                                                       - 4))(a1, a2, a3, a4, STACK[0xE4E8]);
}

uint64_t sub_100D06574@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8
                                                        * (((((v1 - 16140) | 0x1052) ^ 0x1071) * (a1 != 536)) ^ v1))
                            - (((v1 - 16090) | 0x501u) ^ 0x55FLL)))();
}

uint64_t sub_100D065D0()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 6933)))();
}

uint64_t sub_100D065F8()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (v0 + 10258)))();
}

uint64_t sub_100D06620@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v1 ^ 0x7B9F) - 21653) * (a1 == 524)) ^ v1 ^ 0x7B9F))
                            - (((v1 ^ 0x7B9F) - 21665) | 0x1044u)
                            + 4202))();
}

uint64_t sub_100D0666C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 15922))
                            - ((v0 + 167150508) & 0xF60937F6 ^ 0x107ALL)))();
}

uint64_t sub_100D066BC()
{
  unsigned __int8 v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6AD8]
                              + 8
                              * ((3807 * (v0 == ((v1 ^ 0xFA) + (v1 ^ 0x66) - 122 - 73))) ^ v1 ^ 0x6B66)))();
}

uint64_t sub_100D06704@<X0>(__int16 a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((((v1 & 0x8DE1BFFF) - 13499 + ((2 * (v1 & 0x8DE1BFFF)) ^ 0x5A48))
                                               * (a1 == 536)) ^ v1 & 0x8DE1BFFF))
                            - 4))();
}

uint64_t sub_100D06750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 ^ 0x1719)) - 12))(STACK[0xB5A0], a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100D06820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x6AB0]) = STACK[0xE4B4];
  v8 = LODWORD(STACK[0xE4D0]);
  v9 = LODWORD(STACK[0xE4D4]);
  v10 = LODWORD(STACK[0xE4D8]);
  v11 = LODWORD(STACK[0xE4E0]);
  STACK[0x6AC0] = LODWORD(STACK[0xE4E4]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - (a8 + 371) + 5842))(v8, v9, v10, v11, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100D068C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v8 = (STACK[0x6508] - 3862) | 0x1403;
  v9 = (a8 ^ 0xFC3CC9D678A02CBALL) & (2 * (a8 & 0xF8BEC9E77D2A88BBLL)) ^ a8 & 0xF8BEC9E77D2A88BBLL;
  v10 = ((v8 + 0x69BD007BFF35351FLL) ^ (2 * (a8 ^ 0x4C6049DA82B02DFALL))) & (a8 ^ 0x4C6049DA82B02DFALL) ^ (2 * (a8 ^ 0x4C6049DA82B02DFALL)) & 0xB4DE803DFF9AA540;
  v11 = v10 ^ 0x94428004008AA541;
  v12 = (v10 ^ 0x309C8039FD108000) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0xD37A00F7FE6A9504) & v11 ^ (4 * v11) & 0xB4DE803DFF9AA540;
  v14 = (v13 ^ 0x905A0035FE0A8500) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x2484800801902041)) ^ 0x4DE803DFF9AA5410) & (v13 ^ 0x2484800801902041) ^ (16 * (v13 ^ 0x2484800801902041)) & 0xB4DE803DFF9AA540;
  v16 = (v15 ^ 0x4C8001DF98A0400) & (v14 << 8) ^ v14;
  v17 = (((v15 ^ 0xB01680200610A141) << 8) ^ 0xDE803DFF9AA54100) & (v15 ^ 0xB01680200610A141) ^ ((v15 ^ 0xB01680200610A141) << 8) & 0xB4DE803DFF9AA500;
  v18 = v16 ^ 0xB4DE803DFF9AA541 ^ (v17 ^ 0x9480003D9A800000) & (v16 << 16);
  v19 = a8 ^ (2
            * ((v18 << 32) & 0x34DE803D00000000 ^ v18 ^ ((v18 << 32) ^ 0x7F9AA54100000000) & (((v17 ^ 0x205E8000651AA441) << 16) & 0x34DE803D00000000 ^ 0x34C2002500000000 ^ (((v17 ^ 0x205E8000651AA441) << 16) ^ 0x3DFF9A00000000) & (v17 ^ 0x205E8000651AA441))));
  STACK[0x7BC0] = 0xC0BB366CA9883B07
                * (0x6460796F64EA42B7
                 * (*(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x2D590320)) & 0x7FFFFFFFFFFFFFFFLL ^ 0x622F7F3ED0C6CE64)
                 - 0x373622D1278B637FLL
                 * (((v19 ^ 0x96DE6F29D6767650) - 0x452131740A562CE4) ^ ((v19 ^ 0x1F595C908884CBELL)
                                                                           + 0x2DF5346B2B57E9F6) ^ ((v19 ^ 0x6F1D337E5CE1F8D7) + 0x431D92DC7F3E5D9DLL)))
                - 0x53917322360373A5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x904])))(a1, a2, a3, a4, a5, a6, a7, v8);
}

uint64_t sub_100D06BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x6AB0]) = STACK[0xE4B4];
  v8 = LODWORD(STACK[0xE4D0]);
  v9 = LODWORD(STACK[0xE4D4]);
  v10 = LODWORD(STACK[0xE4D8]);
  v11 = LODWORD(STACK[0xE4E0]);
  STACK[0x6AC0] = LODWORD(STACK[0xE4E4]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - ((a8 + 740928124) & 0xD3D656F6 ^ 0x16D2)))(v8, v9, v10, v11, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100D06CAC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (a1 ^ (STACK[0x6508] + 1261) ^ 0xF6BC89E6790015D0) & (2 * (a1 & 0xF8BEC9E77D2A88BBLL)) ^ a1 & 0xF8BEC9E77D2A88BBLL;
  v2 = ((2 * (a1 ^ 0xB7F588EEF30501B3)) ^ 0x9E9682131C5F1210) & (a1 ^ 0xB7F588EEF30501B3) ^ (2
                                                                                                 * (a1 ^ 0xB7F588EEF30501B3)) & 0x4F4B41098E2F8908;
  v3 = v2 ^ 0x4149410882208908;
  v4 = (v2 ^ 0x60200010E0E8800) & (4 * v1) ^ v1;
  v5 = ((4 * v3) ^ 0x3D2D042638BE2420) & v3 ^ (4 * v3) & 0x4F4B41098E2F8908;
  v6 = (v5 ^ 0xD090000082E0008) & (16 * v4) ^ v4;
  v7 = ((16 * (v5 ^ 0x4242410986018908)) ^ 0xF4B41098E2F89080) & (v5 ^ 0x4242410986018908) ^ (16
                                                                                                  * (v5 ^ 0x4242410986018908)) & 0x4F4B41098E2F8900;
  v8 = (v7 ^ 0x4400000882288008) & (v6 << 8) ^ v6;
  v9 = (((v7 ^ 0xB4B41010C070908) << 8) ^ 0x4B41098E2F890800) & (v7 ^ 0xB4B41010C070908) ^ ((v7 ^ 0xB4B41010C070908) << 8) & 0x4F4B41098E2F8900;
  v10 = v8 ^ 0x4F4B41098E2F8908 ^ (v9 ^ 0x4B4101080E098108) & (v8 << 16);
  v11 = a1 ^ (2
            * ((v10 << 32) & 0x4F4B410900000000 ^ v10 ^ ((v10 << 32) ^ 0xE2F890800000000) & (((v9 ^ 0x40A400180268108) << 16) & 0x4F4B410900000000 ^ 0xE42410000000000 ^ (((v9 ^ 0x40A400180268108) << 16) ^ 0x41098E2F00000000) & (v9 ^ 0x40A400180268108))));
  STACK[0x75B8] = 0x3006E330D8047861
                - 0x2F20C17A330C639BLL
                * (0xBDE978728137B56DLL
                 * (*(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0xFFACB2D8)) & 0x7FFFFFFFFFFFFFFFLL ^ 0x78831053772790C7)
                 + 0x13EFD36796BCC439
                 * (((v11 ^ 0x6928B02ED7413CB4) - 0x543F3849947C4CAALL) ^ ((v11 ^ 0x632C674D8A3319D7)
                                                                           - 0x5E3BEF2AC90E69C9) ^ ((v11 ^ 0x703A9E873C07BFC8) - 0x4D2D16E07F3ACFD6)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x8FC])) - 4))();
}

uint64_t sub_100D06FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x6AB0]) = STACK[0xE4B4];
  v8 = LODWORD(STACK[0xE4D0]);
  v9 = LODWORD(STACK[0xE4D4]);
  v10 = LODWORD(STACK[0xE4D8]);
  v11 = LODWORD(STACK[0xE4E0]);
  STACK[0x6AC0] = LODWORD(STACK[0xE4E4]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - ((a8 - 1654701420) & 0x62A0BEDE) + 5842))(v8, v9, v10, v11, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100D0708C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = (((STACK[0x6508] ^ 0x106F) * v1 - 0x5C13239865DE729) ^ a1) & (2 * (a1 & 0xF8BEC9E77D2A88BBLL)) ^ a1 & 0xF8BEC9E77D2A88BBLL;
  v3 = ((2 * (a1 ^ 0xEA575FC69BE32E2ALL)) ^ 0x25D32C43CD934D22) & (a1 ^ 0xEA575FC69BE32E2ALL) ^ (2
                                                                                                 * (a1 ^ 0xEA575FC69BE32E2ALL)) & 0x12E99621E6C9A690;
  v4 = v3 ^ 0x122892202248A291;
  v5 = (v3 ^ 0x10C19401C6808401) & (4 * v2) ^ v2;
  v6 = ((4 * v4) ^ 0x4BA658879B269A44) & v4 ^ (4 * v4) & 0x12E99621E6C9A690;
  v7 = (v6 ^ 0x2A0100182008201) & (16 * v5) ^ v5;
  v8 = ((16 * (v6 ^ 0x1049862064C92491)) ^ 0x2E99621E6C9A6910) & (v6 ^ 0x1049862064C92491) ^ (16
                                                                                                  * (v6 ^ 0x1049862064C92491)) & 0x12E99621E6C9A690;
  v9 = (v8 ^ 0x289020064882081) & (v7 << 8) ^ v7;
  v10 = (((v8 ^ 0x1060942182418681) << 8) ^ 0xE99621E6C9A69100) & (v8 ^ 0x1060942182418681) ^ ((v8 ^ 0x1060942182418681) << 8) & 0x12E99621E6C9A600;
  v11 = v9 ^ 0x12E99621E6C9A691 ^ (v10 ^ 0x800020C0802691) & (v9 << 16);
  v12 = a1 ^ (2
            * ((v11 << 32) & 0x12E9962100000000 ^ v11 ^ ((v11 << 32) ^ 0x66C9A69100000000) & (((v10 ^ 0x1269960126492691) << 16) & 0x12E9962100000000 ^ 0xC8102000000000 ^ (((v10 ^ 0x1269960126492691) << 16) ^ 0x1621E6C900000000) & (v10 ^ 0x1269960126492691))));
  STACK[0xA420] = 0x7AA9E815DF2B0939
                * (0x4401C8CCF4931509
                 * (*(_QWORD *)(*(_QWORD *)STACK[0x60C0] + (*(_DWORD *)STACK[0x60B8] & 0x554E8850)) & 0x7FFFFFFFFFFFFFFFLL ^ 0x3016727AE55D23CDLL)
                 + 0x9D32C731F5C13A3
                 * (((v12 ^ 0xBE9B09EC81CF56FELL) + 0x3D0A621D75FAE172) ^ ((v12 ^ 0xF1D0E85339EE6C40)
                                                                           + 0x724183A2CDDBDBD0) ^ ((v12 ^ 0x97B508190898FF27) + 0x142463E8FCAD48A9)))
                - 0x5F902CA900D9C2BDLL;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x900])))();
}

uint64_t sub_100D073D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x6AB0]) = STACK[0xE4B4];
  v8 = LODWORD(STACK[0xE4D0]);
  v9 = LODWORD(STACK[0xE4D4]);
  v10 = LODWORD(STACK[0xE4D8]);
  v11 = LODWORD(STACK[0xE4E0]);
  STACK[0x6AC0] = LODWORD(STACK[0xE4E4]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - (a8 + 371) + 5842))(v8, v9, v10, v11, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100D0746C()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 3070)) - 8))();
}

uint64_t sub_100D074A0()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (2 * v0 + 2769)) - 12))();
}

uint64_t sub_100D074C4@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_100D07544()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)((14759 * (LODWORD(STACK[0x8C8]) == 1788802671)) ^ (STACK[0x6508] + 1771)))
                            - 4))();
}

uint64_t sub_100D07590()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 18760)) - 4))();
}

uint64_t sub_100D075BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 ^ 0x1769)) - 12))(STACK[0xAD90], a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100D07844()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 3070)) - 8))();
}

uint64_t sub_100D07884()
{
  int v0;
  int v1;
  int v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  LODWORD(STACK[0x6AB0]) = v3[388];
  v4 = v3[395];
  v5 = v3[396];
  v6 = v3[397];
  v7 = v3[399];
  STACK[0x6AC0] = v3[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 + 1261)) - ((v1 + v0) & (v2 + 4009)) + 5842))(v4, v5, v6, v7, STACK[0xE4E8], v3[407], STACK[0xE4F8], v3[409]);
}

uint64_t sub_100D07918()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 - 6227)) - 4))();
}

uint64_t sub_100D07948@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x6AB0]) = v1[388];
  v2 = v1[395];
  v3 = v1[396];
  v4 = v1[397];
  v5 = v1[399];
  STACK[0x6AC0] = v1[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 1261)) - (a1 + 1632) + 5842))(v2, v3, v4, v5, STACK[0xE4E8], v1[407], STACK[0xE4F8], v1[409]);
}

uint64_t sub_100D079DC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6300)) - 12))();
}

uint64_t sub_100D07A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v6 + 15432))
                                                                                                - ((v6 - 1370588815) & 0x51B1D5F7)
                                                                                                + 20571))(a1, a2, a3, a4, a5, a6, 1772495178);
}

uint64_t sub_100D07A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 ^ 0x170C)) - 12))(STACK[0x8970], a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100D07B3C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 173)) - 8))();
}

uint64_t sub_100D07B64()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x8D0])) - 4))();
}

uint64_t sub_100D07B88()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x6AB0]) = v1[388];
  v2 = v1[395];
  v3 = v1[396];
  v4 = v1[397];
  v5 = v1[399];
  STACK[0x6AC0] = v1[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1261)) - ((v0 + 1632) ^ 0x16D2)))(v2, v3, v4, v5, STACK[0xE4E8], v1[407], STACK[0xE4F8], v1[409]);
}

uint64_t sub_100D07C20()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 173)) - 8))();
}

uint64_t sub_100D07C4C()
{
  unsigned int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x6AB0]) = v1[388];
  v2 = v1[395];
  v3 = v1[396];
  v4 = v1[397];
  v5 = v1[399];
  STACK[0x6AC0] = v1[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v0 + 1261)) - (v0 ^ 0x1072)))(v2, v3, v4, v5, STACK[0xE4E8], v1[407], STACK[0xE4F8], v1[409]);
}

uint64_t sub_100D07CE4()
{
  int v0;

  LODWORD(STACK[0x92D4]) = v0 ^ *(_DWORD *)(*(_QWORD *)STACK[0x60C0]
                                          + (((int)(STACK[0x6508] + 1261) ^ 0xFFFFFFFF86CA4A0BLL) & *(int *)STACK[0x60B8])) & 0x7FFFFFFF ^ 0x8FFD3C96;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x8D8])) - 12))();
}

uint64_t sub_100D07D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x6AB0]) = STACK[0xE4B4];
  v8 = LODWORD(STACK[0xE4D0]);
  v9 = LODWORD(STACK[0xE4D4]);
  v10 = LODWORD(STACK[0xE4D8]);
  v11 = LODWORD(STACK[0xE4E0]);
  STACK[0x6AC0] = LODWORD(STACK[0xE4E4]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - ((a8 - 1299) | 0x686u) + 5842))(v8, v9, v10, v11, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100D07DF8()
{
  int v0;

  LODWORD(STACK[0xBD54]) = v0 ^ 0x8E84FB75 ^ *(_DWORD *)(*(_QWORD *)STACK[0x60C0]
                                                       + (int)(*(_DWORD *)STACK[0x60B8] & 0xF4720170)) & (STACK[0x6508] ^ 0x7FFFEF89);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x8D4])) - 12))();
}

uint64_t sub_100D07E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x6AB0]) = STACK[0xE4B4];
  v8 = LODWORD(STACK[0xE4D0]);
  v9 = LODWORD(STACK[0xE4D4]);
  v10 = LODWORD(STACK[0xE4D8]);
  v11 = LODWORD(STACK[0xE4E0]);
  STACK[0x6AC0] = LODWORD(STACK[0xE4E4]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - (a8 + 371) + 5842))(v8, v9, v10, v11, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100D07F10()
{
  unsigned __int8 v0;
  int v1;
  unint64_t v2;

  v2 = STACK[0x6508];
  LODWORD(STACK[0x6AB0]) = v0 | 0x8D2D9400;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v2 + v1)) - 4))();
}

uint64_t sub_100D07F58@<X0>(int a1@<W8>)
{
  unsigned int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[395];
  v3 = v1[396];
  v4 = v1[397];
  v5 = v1[399];
  STACK[0x6AC0] = v1[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 1261)) - ((a1 + 1612) | 0x14u) + 5842))(v2, v3, v4, v5, STACK[0xE4E8], v1[407], STACK[0xE4F8], v1[409]);
}

uint64_t sub_100D07FE8()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x8CC])))();
}

uint64_t sub_100D08008()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x6AB0]) = v1[388];
  v2 = v1[395];
  v3 = v1[396];
  v4 = v1[397];
  v5 = v1[399];
  STACK[0x6AC0] = v1[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1261)) - (((v0 + 92) | 0x604u) ^ 0x16D2)))(v2, v3, v4, v5, STACK[0xE4E8], v1[407], STACK[0xE4F8], v1[409]);
}

uint64_t sub_100D080A8()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x6508];
  STACK[0x9E40] = (((v0 ^ 0x9A4CF503ED4554E8) + 0x65B30AFC12BAAB18) ^ ((v0 ^ 0xA99CCD4FC3066DC0)
                                                                         + 0x566332B03CF99240) ^ (((((STACK[0x6508] + 908) | 0x161) + 0x33D0384CA36E97ECLL) ^ v0)
                                                                                                  - 0x33D0384CA36EAD4FLL))
                + 0x741361910030BACLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((int)v1 + 9601)) - 8))();
}

uint64_t sub_100D08180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  LODWORD(STACK[0x6AB0]) = STACK[0xE4B4];
  v8 = LODWORD(STACK[0xE4D0]);
  v9 = LODWORD(STACK[0xE4D4]);
  v10 = LODWORD(STACK[0xE4D8]);
  v11 = LODWORD(STACK[0xE4E0]);
  STACK[0x6AC0] = LODWORD(STACK[0xE4E4]);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - 37 * (a8 ^ 0x15FDu) + 5842))(v8, v9, v10, v11, STACK[0xE4E8], LODWORD(STACK[0xE500]), STACK[0xE4F8], LODWORD(STACK[0xE508]));
}

uint64_t sub_100D08228()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 6300)) - 12))();
}

uint64_t sub_100D08250()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x6AB0]) = v1[388];
  v2 = v1[395];
  v3 = v1[396];
  v4 = v1[397];
  v5 = v1[399];
  STACK[0x6AC0] = v1[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 1261)) - ((v0 + 1550) | 0x52u) + 5842))(v2, v3, v4, v5, STACK[0xE4E8], v1[407], STACK[0xE4F8], v1[409]);
}

uint64_t sub_100D082F0()
{
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x8DC])))();
}

uint64_t sub_100D08310()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(STACK[0x6508] + 11369)) - 4))();
}

uint64_t sub_100D0833C()
{
  unsigned int v0;
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  return ((uint64_t (*)(__n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 12))((__n128)vdupq_n_s32(v3), (__n128)vdupq_n_s32(v1), (__n128)vdupq_n_s32(v2 ^ v4));
}

uint64_t sub_100D08360@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned int a3@<W4>, unsigned int a4@<W5>, unsigned int a5@<W6>, unsigned int a6@<W7>, char a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q1>, int8x16_t a10@<Q2>)
{
  unsigned int v10;
  char v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int8x16_t v24;
  int8x16_t v25;
  char v26;
  char v27;
  char v28;
  unsigned __int8 v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int32x4_t v33;
  int32x4_t v34;
  int32x4_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int32x4_t v39;
  int8x16_t v40;
  int32x4_t v41;
  int8x16_t v42;
  int32x4_t v43;
  int32x4_t v44;
  int8x16_t v45;
  int8x16_t v46;
  int32x4_t v47;
  int8x16_t v48;
  int32x4_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int32x4_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int32x4_t v55;
  int32x4_t v56;
  int8x16_t v57;
  int32x4_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int32x4_t v61;
  int8x16_t v62;
  int32x4_t v63;
  int8x16_t v64;
  int32x4_t v65;
  int8x16_t v66;
  int32x4_t v67;
  int8x16_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int8x16_t v73;
  int8x16_t v74;
  int32x4_t v75;
  int8x16_t v76;

  v26 = a2 + v14 + 48;
  v27 = a2 + v14 + 49;
  v28 = a2 + v14 + 50;
  v29 = (((v13 + 120) & 0xE7 ^ LODWORD(STACK[0x1EBC])) + v14) * a7;
  v30.i32[0] = *(_DWORD *)(v12 + 4 * ((v29 ^ v11) ^ v10));
  v30.i32[1] = *(_DWORD *)(v12 + 4 * (((v26 * a7) ^ v11) ^ v10));
  v30.i32[2] = *(_DWORD *)(v12 + 4 * (((v27 * a7) ^ v11) ^ v10));
  v30.i32[3] = *(_DWORD *)(v12 + 4 * (((v28 * a7) ^ v11) ^ v10));
  v31 = veorq_s8(v30, a10);
  v32 = (int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(veorq_s8(a8, (int8x16_t)vdupq_n_s32(0x4BFC7EF5u)), v31), vdupq_n_s32(0x50950EBEu)), (int32x4_t)veorq_s8(veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v31, (int8x16_t)vdupq_n_s32(a6)), vdupq_n_s32(v15)), (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v31, (int8x16_t)vdupq_n_s32(v19)), vdupq_n_s32(v20))), (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v31, (int8x16_t)vdupq_n_s32(0xBD6FD829)), vdupq_n_s32(0x80884FF6))));
  v33 = (int32x4_t)veorq_s8(v32, (int8x16_t)vdupq_n_s32(0x27A9732Cu));
  v34 = (int32x4_t)vandq_s8(v32, (int8x16_t)vdupq_n_s32(v16));
  v35 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)vaddq_s32(v34, v34), veorq_s8(v32, (int8x16_t)vdupq_n_s32(0x23A1368Cu))), (int8x16_t)v34);
  v36 = (int8x16_t)vaddq_s32(v33, v33);
  v37 = (int8x16_t)vdupq_n_s32(v22);
  v38 = veorq_s8(vandq_s8(veorq_s8(v36, (int8x16_t)vdupq_n_s32(0x9388BF8u)), (int8x16_t)v33), vandq_s8(v36, v37));
  v39 = (int32x4_t)veorq_s8(v38, (int8x16_t)vdupq_n_s32(0x84844404));
  v40 = (int8x16_t)vshlq_n_s32(v39, 2uLL);
  v41 = (int32x4_t)veorq_s8(vandq_s8(veorq_s8(v38, (int8x16_t)vdupq_n_s32(0x1801C4u)), (int8x16_t)vshlq_n_s32(v35, 2uLL)), (int8x16_t)v35);
  v42 = veorq_s8(vandq_s8(veorq_s8(v40, (int8x16_t)vdupq_n_s32(0x127117F0u)), (int8x16_t)v39), vandq_s8(v40, v37));
  v43 = (int32x4_t)veorq_s8(v42, (int8x16_t)vdupq_n_s32(a5));
  v44 = (int32x4_t)veorq_s8(vandq_s8(veorq_s8(v42, (int8x16_t)vdupq_n_s32(a3)), (int8x16_t)vshlq_n_s32(v41, 4uLL)), (int8x16_t)v41);
  v45 = (int8x16_t)vshlq_n_s32(v43, 4uLL);
  v46 = veorq_s8(vandq_s8(veorq_s8(v45, (int8x16_t)vdupq_n_s32(a4)), (int8x16_t)v43), vandq_s8(v45, (int8x16_t)vdupq_n_s32(0x849C45F0)));
  v47 = (int32x4_t)veorq_s8(v46, (int8x16_t)vdupq_n_s32(0x8418003C));
  v48 = (int8x16_t)vshlq_n_s32(v47, 8uLL);
  v49 = (int32x4_t)veorq_s8(veorq_s8((int8x16_t)v44, v37), vandq_s8(veorq_s8(v46, (int8x16_t)vdupq_n_s32(0x84453Cu)), (int8x16_t)vshlq_n_s32(v44, 8uLL)));
  v50 = veorq_s8(veorq_s8(vandq_s8(v48, (int8x16_t)vdupq_n_s32(0x849C0000)), v24), vandq_s8(veorq_s8(v48, (int8x16_t)vdupq_n_s32(0x9C450000)), (int8x16_t)v47));
  v51 = (int8x16_t)vshlq_n_s32(v49, 0x10uLL);
  v52 = (int32x4_t)veorq_s8(veorq_s8(vandq_s8(v51, (int8x16_t)vdupq_n_s32(v21)), (int8x16_t)v49), vandq_s8(veorq_s8(v51, (int8x16_t)vdupq_n_s32(0x45FC0000u)), v50));
  v53 = veorq_s8(veorq_s8(veorq_s8(a9, a8), v32), (int8x16_t)vaddq_s32(v52, v52));
  v54 = (int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v31, (int8x16_t)vdupq_n_s32(0xFD10F2DC)), vdupq_n_s32(0xC0F76501)), (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v31, (int8x16_t)vdupq_n_s32(0x43B651C9u)), vdupq_n_s32(0x7E51C616u))), (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v31, (int8x16_t)vdupq_n_s32(0x8F748EBB)), vdupq_n_s32(0xB2931968))), vdupq_n_s32(0x9EBED6C2)), (int32x4_t)veorq_s8(veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v53, (int8x16_t)vdupq_n_s32(0x89A0A247)), vdupq_n_s32(v23)), (int8x16_t)vaddq_s32(
                                                 (int32x4_t)veorq_s8(v53, (int8x16_t)vdupq_n_s32(0x9B5A233u)),
                                                 vdupq_n_s32(0x91E23533))),
                                  (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v53, (int8x16_t)vdupq_n_s32(0xA6F111F8)), vdupq_n_s32(0x3EA686FAu))));
  v55 = (int32x4_t)veorq_s8(v54, (int8x16_t)vdupq_n_s32(0xCE88017D));
  v56 = (int32x4_t)vandq_s8(v54, (int8x16_t)vdupq_n_s32(0x9657E83D));
  v57 = (int8x16_t)vaddq_s32(v55, v55);
  v58 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)vaddq_s32(v56, v56), veorq_s8(v54, (int8x16_t)vdupq_n_s32(0xC607C13D))), (int8x16_t)v56);
  v59 = (int8x16_t)vdupq_n_s32(v18);
  v60 = veorq_s8(vandq_s8(veorq_s8(v57, (int8x16_t)vdupq_n_s32(0xB1BFD280)), (int8x16_t)v55), vandq_s8(v57, v59));
  v61 = (int32x4_t)veorq_s8(v60, (int8x16_t)vdupq_n_s32(0x48402940u));
  v62 = (int8x16_t)vshlq_n_s32(v61, 2uLL);
  v63 = (int32x4_t)veorq_s8(vandq_s8(veorq_s8(v60, (int8x16_t)vdupq_n_s32(0x109FC800u)), (int8x16_t)vshlq_n_s32(v58, 2uLL)), (int8x16_t)v58);
  v64 = veorq_s8(vandq_s8(veorq_s8(v62, (int8x16_t)vdupq_n_s32(0x637FA500u)), (int8x16_t)v61), vandq_s8(v62, v59));
  v65 = (int32x4_t)veorq_s8(v64, (int8x16_t)vdupq_n_s32(0x18804840u));
  v66 = (int8x16_t)vshlq_n_s32(v65, 4uLL);
  v67 = (int32x4_t)veorq_s8(vandq_s8(veorq_s8(v64, (int8x16_t)vdupq_n_s32(0x405FA100u)), (int8x16_t)vshlq_n_s32(v63, 4uLL)), (int8x16_t)v63);
  v68 = veorq_s8(vandq_s8(veorq_s8(v66, (int8x16_t)vdupq_n_s32(0x8DFE9400)), (int8x16_t)v65), vandq_s8(v66, v59));
  v69 = (int32x4_t)veorq_s8(v68, (int8x16_t)vdupq_n_s32(0x50016940u));
  v70 = (int32x4_t)veorq_s8(veorq_s8((int8x16_t)v67, v59), vandq_s8(veorq_s8(v68, (int8x16_t)vdupq_n_s32(0x8DE8040u)), (int8x16_t)vshlq_n_s32(v67, 8uLL)));
  v71 = (int8x16_t)vshlq_n_s32(v69, 8uLL);
  v72 = (int8x16_t)vdupq_n_s32(v17);
  v73 = veorq_s8(veorq_s8(vandq_s8(v71, v72), v25), vandq_s8(veorq_s8(v71, (int8x16_t)vdupq_n_s32(0xDFE90000)), (int8x16_t)v69));
  v74 = (int8x16_t)vshlq_n_s32(v70, 0x10uLL);
  v75 = (int32x4_t)veorq_s8(veorq_s8(vandq_s8(v74, v72), (int8x16_t)v70), vandq_s8(veorq_s8(v74, (int8x16_t)vdupq_n_s32(0x69400000u)), v73));
  v76 = veorq_s8(veorq_s8(v54, (int8x16_t)vdupq_n_s32(0x6E9A592Cu)), (int8x16_t)vaddq_s32(v75, v75));
  *(_DWORD *)(a1 + 4 * v29) = v76.i32[0];
  *(_DWORD *)(a1 + 4 * ((v26 * a7) & 0xFE)) = v76.i32[1];
  *(_DWORD *)(a1 + 4 * (v27 * a7)) = v76.i32[2];
  *(_DWORD *)(a1 + 4 * ((v28 * a7) & 0xFC)) = v76.i32[3];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7604 * (v14 == 252)) ^ v13)) - 12))();
}

uint64_t sub_100D08890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  STACK[0x6AA0] = STACK[0xD940];
  v8 = 638282681
     - (((LODWORD(STACK[0x6910]) ^ 0x6F6976C8) + 1799686880) ^ ((LODWORD(STACK[0x6910]) ^ 0x38F2CFFD) + 1021228011) ^ (((v7 + 198) ^ 0xA82B7982) + (LODWORD(STACK[0x6910]) ^ 0xAC072939)));
  v9 = v8 ^ LODWORD(STACK[0xB30]);
  LODWORD(STACK[0x6830]) = v8;
  v10 = (v8 ^ 0x9D015052) & (2 * (v8 & 0xD9A58063)) ^ v8 & 0xD9A58063;
  v11 = ((2 * v9) ^ 0xCDCDA0E2) & v9 ^ (2 * v9) & 0x66E6D070;
  v12 = v11 ^ LODWORD(STACK[0xB34]);
  v13 = (v11 ^ LODWORD(STACK[0xB40])) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0x9B9B41C4) & v12 ^ (4 * v12) & 0x66E6D070;
  v15 = (v14 ^ 0x2824041) & (16 * v13) ^ v13;
  v16 = ((16 * (v14 ^ 0x64649031)) ^ 0x6E6D0710) & (v14 ^ 0x64649031) ^ (16 * (v14 ^ 0x64649031)) & 0x66E6D070;
  v17 = v15 ^ 0x66E6D071 ^ (v16 ^ 0x66640061) & (v15 << 8);
  LODWORD(STACK[0x6820]) = 2
                         * ((v17 << 16) & 0x66E60000 ^ v17 ^ ((v17 << 16) ^ 0x50710000) & (((v16 ^ 0x82D061) << 8) & 0x66E60000 ^ 0x260000 ^ (((v16 ^ 0x82D061) << 8) ^ LODWORD(STACK[0xB38])) & (v16 ^ 0x82D061)));
  v18 = STACK[0x6A90];
  v19 = STACK[0x6A70];
  LODWORD(STACK[0x6810]) = LODWORD(STACK[0x6A70]) - (STACK[0x6A90] & LODWORD(STACK[0xB3C])) - 481853162;
  LODWORD(STACK[0x6800]) = v19 + 1883243269 - (v18 & 0xE08006B8) + 87;
  LODWORD(STACK[0x67F0]) = v19 - (v18 & 0xF02BB658) + 2014698284;
  STACK[0x6760] = STACK[0xD930];
  STACK[0x67E0] = STACK[0xD928];
  STACK[0x6750] = STACK[0xD938];
  STACK[0x6740] = STACK[0xD970];
  STACK[0x67C0] = STACK[0xD958] - 0x56641C0D7A8E5919;
  STACK[0x67B0] = STACK[0xD960];
  STACK[0x67A0] = STACK[0xD950];
  STACK[0x6790] = STACK[0xD920];
  v20 = STACK[0x6900];
  LODWORD(STACK[0x6780]) = LODWORD(STACK[0x6900]) - 1605367281 - ((2 * LODWORD(STACK[0x6900])) & 0x40A01BFA) + 1006;
  LODWORD(STACK[0x67D0]) = (LODWORD(STACK[0x67D0]) ^ 0x6AE7CDC4) + (v20 | 0x122F7800) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v7))(a1, a2, a3, 31325109, a5, a6, a7, 1287868012);
}

uint64_t sub_100D08C44(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;
  unint64_t v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  int v45;
  unint64_t v46;
  unsigned int v47;
  unint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unint64_t v56;
  unsigned int v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  int v62;
  int v63;
  BOOL v64;
  int v65;
  unsigned int v66;
  int v67;
  unint64_t v68;
  unsigned int v69;
  unsigned int v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unint64_t v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  int v271;
  unsigned int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  char v319;
  char v320;
  char v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  int v326;
  unsigned int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  int v354;
  int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  int v363;
  int v364;
  unsigned int v365;
  int v366;
  int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  int v385;
  unsigned int v386;
  unint64_t v387;
  int v388;
  int v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  int v421;
  unsigned int v422;
  int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  int v432;
  unsigned int v433;
  int v434;
  int v435;
  unsigned int v436;
  int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  int v449;
  unsigned int v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unint64_t v463;
  unint64_t v464;
  unint64_t v465;
  unsigned int v466;
  unint64_t v467;
  int v468;
  unsigned int v469;
  unsigned int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  unsigned int v501;
  int v502;
  unsigned int v503;
  int v504;
  unsigned int v505;
  unsigned int v506;
  int v507;
  char *v508;
  unsigned int v509;
  unsigned __int8 v510;
  unsigned int v511;
  char v512;
  int v513;
  char v514;
  int v515;
  int v516;
  unint64_t v517;
  char *v518;
  unsigned int v519;
  char *v520;
  char *v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  int v526;
  unsigned int v527;
  int v528;
  unsigned int v529;
  int v530;
  char v531;
  unsigned int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  int v542;

  LODWORD(STACK[0x6AC0]) = v9;
  LODWORD(STACK[0x6980]) = v8;
  v14 = (v8 - 9128) | 0x22E2;
  LODWORD(STACK[0x6840]) = v14;
  v15 = 1230899778 - (v9 & 0xFFFFFFF2 ^ 0x37144D92) + ((v14 ^ 0x6D43F1E3) & (2 * (v9 & 0xFFFFFFF2 ^ 0x37144D92))) + 2235;
  LODWORD(STACK[0x6770]) = v8 ^ 0x1466;
  v16 = (-2109432276
       - (v15 ^ ((v8 ^ 0x1466) + 1096671668))
       + ((2 * (v15 ^ ((v8 ^ 0x1466) + 1096671668))) & 0xFB76A73C)
       + 3636) ^ 0x7AFB559FLL;
  STACK[0x69D0] = v16;
  LODWORD(STACK[0x6A30]) = v9 & 0xFFFFFFF9;
  v17 = STACK[0x6AA0];
  LOBYTE(v15) = ((*(_BYTE *)(STACK[0x6AA0]
                           + ((((2 * (v9 & 0xFFFFFFF9 ^ LODWORD(STACK[0x2618]))) & 0x72316D0)
                             - (v9 & 0xFFFFFFF9 ^ LODWORD(STACK[0x2618]))
                             + 2087613585) ^ 0xBAE7F18E))
                - 99
                * ((((2 * (v9 & 0xF9 ^ LOBYTE(STACK[0x2618]))) & 0xD0) - (v9 & 0xF9 ^ LOBYTE(STACK[0x2618])) - 111) ^ 0x8E)) ^ 0xC)
              - 96;
  v18 = STACK[0x6A00];
  v19 = STACK[0x6A10];
  LOBYTE(v14) = *(_BYTE *)(STACK[0x6A10]
                         + ((*(_BYTE *)(STACK[0x6AA0] + v16)
                                            - 99 * (((v9 ^ 0x69) - 37) ^ ((v9 ^ 0x35) - 121) ^ ((v9 ^ 0xBB) + 9))
                                            + 120) ^ 0x27));
  v20 = *(unsigned __int8 *)(STACK[0x6A00] + (v15 ^ 0x52)) ^ (2
                                                                                                * ((v15 ^ 0x21) & (v15 ^ 0x58))
                                                                                                + 121) ^ 0xE4;
  v21 = v9 & 0xFFFFFFFB ^ 0xC7ABBCE7;
  STACK[0x6A90] = v21;
  v22 = (*(_BYTE *)(v17 + v21) - 99 * (v9 & 0xFB ^ 0xE7) - 96) ^ 0x55;
  LODWORD(v21) = ((v14 ^ ((v14 ^ 0x78) >> 4) ^ ((v14 ^ 0x78) >> 2)) ^ 0xDC) << 16;
  v23 = STACK[0x6A20];
  v24 = *(unsigned __int8 *)(STACK[0x6A20] + v22);
  v25 = ((v9 & 0xFFFFFFFA ^ 0x18B6431C) & 0x8BA7E39E) - (v9 & 0xFFFFFFFA ^ 0x18B6431C | 0x8BA7E39F);
  STACK[0x69C0] = v25 ^ 0xAB45E39ALL;
  v26 = ((v9 & STACK[0x2614] ^ 0x40B08B8F) + (v9 & 0x2E077001) - 1) ^ LODWORD(STACK[0x261C]);
  v27 = (v26 | 0x1CF9DFD2) - (v26 | 0xE306202D) - 486137811;
  LODWORD(v22) = ((v24 ^ ((v24 ^ 0x8B) >> 6) ^ ((v24 ^ 0x8B) >> 4) ^ 0x9C) << 24) | (v20 << 8);
  LOBYTE(v20) = *(_BYTE *)(v19
                         + (((*(_BYTE *)(v17 + (v25 ^ 0xAB45E39ALL))
                                             - 99 * ((((v9 & 0xFA ^ 0x1C) & 0x9E) - (v9 & 0xFA ^ 0x1C | 0x9F)) ^ 0x9A)) ^ 0x1F)
                                           - 96));
  STACK[0x69A0] = v27 ^ 0x660C010D;
  v28 = ((v9 & 0xFFFFFFF4 ^ 0xFB75FCD0) - ((2 * (v9 & 0xFFFFFFF4 ^ 0xFB75FCD0)) & 0x64150AE8) - 1307933323) ^ 0x720A127C;
  v29 = ((2 * v28) & 0x13481938) - v28 + 1985737571;
  LOBYTE(v25) = *(_BYTE *)(v17 + (v27 ^ 0x660C010D)) - 99 * (v27 ^ 0xD) - 96;
  LODWORD(v22) = v22 & 0xFF00FFFF | (((v20 ^ ((v20 ^ 0x78) >> 4) ^ ((v20 ^ 0x78) >> 2)) ^ 0x1D) << 16);
  v30 = *(unsigned __int8 *)(v18 + (v25 ^ 0x79));
  v31 = v29 ^ LODWORD(STACK[0x2628]);
  STACK[0x6A50] = v31;
  LOBYTE(v31) = *(_BYTE *)(v17 + v31) - 99 * (v29 ^ 0x55) + 77;
  LODWORD(v21) = v21 | ((v30 ^ ((v25 ^ 0xA) + (v25 ^ 0x73)) ^ 0xE3) << 8);
  LODWORD(STACK[0x6A80]) = v9 & 0xFFFFFFF8;
  v32 = (-892339184 - (v9 & 0xFFFFFFF8 ^ 0x66F31A10 | 0xCACFFC10) + (v9 & 0xFFFFFFF8 ^ 0x66F31A10 | 0x353003EF)) ^ 0x69331BE4;
  v33 = (v32 | LODWORD(STACK[0x2620])) - (v32 | 0x8047D6E4) - 2142775580;
  LODWORD(v25) = (v9 & 0x26E78960 ^ 0xA38961) + (v9 & 0xD9187690 ^ 0xD1087281) - 2;
  LODWORD(v25) = (v25 & 0xFE21F7E0 ^ LODWORD(STACK[0x2624])) + (v25 & (a4 + 3163)) - 1;
  LOBYTE(v29) = *(_BYTE *)(v17 + (v33 ^ 0x82E397E7));
  v34 = STACK[0x69F0];
  LODWORD(v31) = *(unsigned __int8 *)(STACK[0x69F0] + ((((2 * v31) & 0xA6) + (v31 ^ 0x53)) ^ 0x2FLL));
  v35 = v25 ^ 0x8600018B;
  STACK[0x6970] = v35;
  v36 = v22 | *(unsigned __int8 *)(v34 + ((v29 - 99 * (v33 ^ 0xE7) - 96) ^ 0x60));
  v37 = (v9 & 0xFFFFFFF7 ^ 0xEB7620F7) - ((2 * (v9 & 0xFFFFFFF7 ^ 0xEB7620F7)) & 0xF3BA0E6E) + 2044528439;
  v38 = (v9 & 0xFFFFFFFC ^ 0x628A0C44) + (v9 & 0xF82FCA50 ^ 0x9825C210) - ((v9 & 0xFFFFFFFC ^ 0x628A0C44) & 0xF82FCA50);
  LODWORD(v33) = *(unsigned __int8 *)(v34 + ((*(_BYTE *)(v17 + v35) - 99 * (v25 ^ 0x8B) - 96) ^ 0x40));
  STACK[0x6A60] = v38 ^ 0x5D0E7AF3;
  LOBYTE(v25) = *(_BYTE *)(v17 + (v38 ^ 0x5D0E7AF3))
              - 99 * (((v9 & 0xFC ^ 0x44) + (v9 & 0x50 ^ 0x10) - ((v9 & 0xFC ^ 0x44) & 0x50)) ^ 0xF3);
  STACK[0x69B0] = v37 ^ 0x55009B2F;
  v39 = *(unsigned __int8 *)(v34 + ((v25 - 96) ^ 0xDDLL));
  v40 = (*(_BYTE *)(v17 + (v37 ^ 0x55009B2F))
                        - 99 * (((v9 & 0xF7 ^ 0xF7) - ((2 * (v9 & 0xF7 ^ 0xF7)) & 0x6E) + 55) ^ 0x2F)
                        - 96) ^ 0x8FLL;
  v41 = ((v9 & 0x67B7DFB4 ^ 0x7A28C11) + (v9 & 0x98482041) - 1) ^ 0x37BECF08;
  v42 = (308068913 - (v41 | 0x125CC231) + (v41 | 0xEDA33DCE)) ^ LODWORD(STACK[0x262C]);
  STACK[0x6990] = v42;
  LODWORD(v40) = *(unsigned __int8 *)(v23 + v40);
  v43 = v33 | v21;
  v44 = (((v40 | 0xC0) & (v40 ^ 0x8B)) >> 4) ^ ((v40 ^ 0x8B) >> 6);
  LOBYTE(v33) = *(_BYTE *)(v17 + v42) - 99 * (((v9 ^ 0x88) - 105) ^ ((v9 ^ 0x89) - 104) ^ ((v9 ^ 0xE6) - 7)) + 112;
  v45 = *(unsigned __int8 *)(v18 + (v33 ^ 0x52));
  v46 = v9 ^ 0xC7ABBCE7;
  STACK[0x6950] = v46;
  v47 = (v9 & 0x5F261906 ^ 0x47261807) + (v9 & 0xA0D9E6F0 ^ 0x514459) - 2;
  LODWORD(v40) = v31 | ((v40 ^ 0x72 ^ v44) << 24) | ((v45 ^ ((v33 ^ 0x58) + (v33 ^ 0x21)) ^ 0xBB) << 8);
  LODWORD(v31) = *(unsigned __int8 *)(v23
                                    + ((-99
                                                       * ((((v9 ^ 0xC6) + 54) ^ ((v9 ^ 0x99) + 107) ^ ((v9 ^ 0xB8) + 76))
                                                        + 71)
                                                       + *(_BYTE *)(v17 + v46)
                                                       + 52) ^ 0x61));
  LOBYTE(v34) = *(_BYTE *)(v17 + (v47 ^ LODWORD(STACK[0x2630]))) - 99 * (v47 ^ 0xB1);
  LODWORD(v33) = v39 | ((v31 ^ ((v31 ^ 0x8B) >> 6) ^ ((v31 ^ 0x8B) >> 4) ^ 0x1F) << 24);
  LODWORD(STACK[0x6930]) = v9 & 0xFFFFFFFD;
  LODWORD(v31) = (v9 & 0xFFFFFFFD ^ 0xDC274278) - ((2 * (v9 & 0xFFFFFFFD ^ 0xDC274278)) & 0xB69D42C0) - 615603872;
  LOBYTE(v34) = *(_BYTE *)(v19 + ((v34 - 96) ^ 0x45));
  v48 = (v31 & 0xC3DB8544 ^ 0xC00404)
      + (v31 ^ 0xDF3FA162)
      - ((v31 ^ 0xDF3FA162) & 0xC3DB8546);
  LOBYTE(v39) = v34 ^ ((v34 ^ 0x78) >> 4) ^ ((v34 ^ 0x78) >> 2);
  LODWORD(STACK[0x6920]) = v9 & 0xFFFFFFF3;
  LODWORD(v34) = (-1647494192 - (v9 & 0xFFFFFFF3 ^ 0x92823DFF | 0x9DCD3BD0) + (v9 & 0xFFFFFFF3 ^ 0x92823DFF | 0x6232C42F)) ^ 0x8945BC8A;
  LOBYTE(v48) = *(_BYTE *)(v17 + (v48 ^ 0xDC267BDB)) - 99 * (v48 ^ 0xDB);
  LODWORD(STACK[0x6940]) = v9 & 0xFFFFFFFE;
  LODWORD(v40) = v40 & 0xFF00FFFF | ((v39 ^ 6) << 16);
  v49 = (v34 | 0xA4DE37F8) - (v34 | 0x5B21C807) + 1528940551;
  LODWORD(v33) = v33 | ((*(unsigned __int8 *)(v18 + ((v48 - 96) ^ 0x5FLL)) ^ (((v48 - 96) ^ 0x2C) + ((v48 - 96) ^ 0x55)) ^ 0x61) << 8);
  LODWORD(v48) = *(unsigned __int8 *)(v23
                                    + ((*(_BYTE *)(v17 + (v49 ^ 0x1A80CE4D)) - 99 * (v49 ^ 0x4D) - 96) ^ 0xA6));
  LODWORD(v48) = v43 | ((v48 ^ ((v48 ^ 0x8B) >> 6) ^ ((v48 ^ 0x8B) >> 4) ^ 0x6A) << 24);
  v50 = v36 ^ v12;
  LODWORD(v18) = STACK[0x68F0];
  v51 = LODWORD(STACK[0x6830]) ^ v18 ^ LODWORD(STACK[0x6820]) ^ ((((v50 ^ 0x8C3F20DC) + 323075588) ^ ((v50 ^ 0x29C1585) - 1646097573) ^ ((v50 ^ 0x8EA335E3) + 299739965))
                                                               - (((v50 ^ v18 ^ 0x154EC0A) - 1641385258) ^ ((v50 ^ v18 ^ 0xBAF8A7C0) + 629553440) ^ ((v50 ^ v18 ^ 0xBBE35894) + 614319692))
                                                               - 5050596);
  LOBYTE(v39) = *(_BYTE *)(v19
                         + ((*(_BYTE *)(v17
                                                       + (((LODWORD(STACK[0x2634]) | (2 * (v9 & 0xFFFFFFFE ^ 0x25573FC6)))
                                                         - (v9 & 0xFFFFFFFE ^ 0x25573FC6)
                                                         - 1098121628) ^ 0xA38882BD))
                                            - 99
                                            * (((LODWORD(STACK[0x2634]) | (2 * (v9 & 0xFE ^ 0xC6)))
                                              - (v9 & 0xFE ^ 0xC6)
                                              + 100) ^ 0xBD)
                                            - 96) ^ 0xF9));
  v52 = (((v50 ^ LODWORD(STACK[0x2638])) + 1179972634) ^ ((v50 ^ 0xC90C574C) + 1450363284) ^ ((v50 ^ 0x10263D30)
                                                                                            - 1890016272))
      - 1169821079
      + (((v51 ^ 0x46D58DC1) + 1946800533) ^ ((v51 ^ 0xC0F48536) - 232203932) ^ ((v51 ^ 0x12C63B92) + 538601416));
  LODWORD(v33) = v13 ^ LODWORD(STACK[0x68F0]) ^ (v33 & 0xFF00FFFF | (((v39 ^ ((v39 ^ 0x78) >> 4) ^ ((v39 ^ 0x78) >> 2)) ^ 0xD5) << 16));
  LODWORD(v33) = (LODWORD(STACK[0x6A70]) ^ LODWORD(STACK[0x68D0]) ^ ((LODWORD(STACK[0x6800]) ^ 0x8FF0EFFD ^ v33)
                                                                   + (v33 ^ 0x4F135E)
                                                                   + 1))
               + (v33 ^ 0x4F135E);
  v53 = (v18 ^ LODWORD(STACK[0x6810]) ^ v10 ^ v40 ^ 0xE30892F2)
      - 1305017465
      - 2
      * ((v18 ^ LODWORD(STACK[0x6810]) ^ v10 ^ v40 ^ 0xE30892F2) & 0x3237038F ^ (v18 ^ LODWORD(STACK[0x6810]) ^ v10 ^ v40) & 8);
  v54 = LODWORD(STACK[0x6AB0]) ^ 0x34839DC2 ^ (v33 - 1305017465 - ((2 * v33) & 0x646E070E));
  v55 = LODWORD(STACK[0x6AB0]) ^ 0x24677372 ^ ((v52 ^ LODWORD(STACK[0x6A70]))
                                             - 1305017465
                                             - ((2 * (v52 ^ LODWORD(STACK[0x6A70]))) & 0x646E070E));
  v56 = STACK[0x6760];
  v57 = LODWORD(STACK[0x6AB0]) ^ (a8 + 3271) ^ v53;
  v58 = STACK[0x67E0];
  LODWORD(v48) = LODWORD(STACK[0x6AB0]) ^ 0x2BC6C149 ^ ((v18 ^ LODWORD(STACK[0x67F0]) ^ v11 ^ v48 ^ 0x785AC8C8)
                                                      - 1305017465
                                                      - 2
                                                      * ((v18 ^ LODWORD(STACK[0x67F0]) ^ v11 ^ v48 ^ 0x785AC8C8) & 0x32370397 ^ (v18 ^ LODWORD(STACK[0x67F0]) ^ v11 ^ v48) & 0x10));
  v59 = STACK[0x6750];
  v60 = STACK[0x6740];
  v61 = *(_DWORD *)(STACK[0x6740] + 4 * v48);
  v62 = *(_DWORD *)(STACK[0x67E0] + 4 * BYTE3(v48));
  v63 = *(_DWORD *)(STACK[0x6750] + 4 * BYTE1(v48));
  v64 = ((v25 - 97) | (v25 - 96)) == 0;
  v65 = *(_DWORD *)(STACK[0x6760] + 4 * BYTE2(v48)) ^ *(_DWORD *)(STACK[0x67E0] + 4 * HIBYTE(v57));
  v66 = *(_DWORD *)(STACK[0x67E0] + 4 * HIBYTE(v54)) ^ *(_DWORD *)(STACK[0x6760] + 4 * BYTE2(v55)) ^ v61 ^ *(_DWORD *)(STACK[0x6750] + 4 * BYTE1(v57));
  HIDWORD(v68) = *(_DWORD *)(STACK[0x6750] + 4 * BYTE1(v54));
  LODWORD(v68) = HIDWORD(v68);
  v67 = v68 >> 28;
  if (v64)
    LOBYTE(v57) = v55;
  v69 = *(_DWORD *)(STACK[0x67E0] + 4 * HIBYTE(v55)) ^ *(_DWORD *)(STACK[0x6760] + 4 * BYTE2(v57)) ^ v63 ^ *(_DWORD *)(v60 + 4 * v54);
  v70 = *(_DWORD *)(STACK[0x6740] + 4 * v55) ^ __ROR4__(v67 ^ __ROR4__(v65, 28) ^ 0x56E82F48, 4);
  HIDWORD(v71) = *(_DWORD *)(v56 + 4 * BYTE2(v54)) ^ *(_DWORD *)(v59 + 4 * BYTE1(v55)) ^ v62;
  LODWORD(v71) = HIDWORD(v71);
  v72 = (v71 >> 1) ^ __ROR4__(*(_DWORD *)(v60 + 4 * v57), 1);
  HIDWORD(v71) = v72 ^ 0x711238D5;
  LODWORD(v71) = v72;
  v73 = (v71 >> 31) ^ 0xD52DA85E;
  v74 = *(_DWORD *)(v58 + 4 * (HIBYTE(v66) ^ 0x26)) ^ *(_DWORD *)(v59 + 4 * (BYTE1(v70) ^ 0xEDu)) ^ *(_DWORD *)(v60 + 4 * ((v71 >> 31) ^ 0x5Eu));
  v75 = *(_DWORD *)(v56 + 4 * (BYTE2(v66) ^ 0xC4u));
  v76 = ((v75 & 0x20000 ^ 0x786EE09E) + 47543476) ^ (v75 & 0x20000 | 0x82C417CE) ^ ((v75 & 0x20000 ^ 0x2ECAA16E)
                                                                                  + 1416705348);
  v77 = v76 - 2036803791;
  v78 = *(_DWORD *)(v59 + 4 * BYTE1(v73)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v69) ^ 0x16)) ^ *(_DWORD *)(v60 + 4 * (v66 ^ 0xEDu)) ^ *(_DWORD *)(v56 + 4 * (BYTE2(v70) ^ 0x4Au));
  v79 = (v77 ^ 0xFC03D6A5) & (2 * (v77 & 0xFEAB94A1)) ^ v77 & 0xFEAB94A1;
  v80 = ((2 * (v77 ^ 0xC155D6E7)) ^ 0x7FFC848C) & (v77 ^ 0xC155D6E7) ^ (2 * (v77 ^ 0xC155D6E7)) & 0x3FFE4246;
  v81 = (v80 ^ 0x3FFC0004) & (4 * v79) ^ v79;
  v82 = ((4 * (v80 ^ 0x24242)) ^ LODWORD(STACK[0x263C])) & (v80 ^ 0x24242) ^ (4 * (v80 ^ 0x24242)) & 0x3FFE4244;
  v83 = (v82 ^ 0x3FF80000) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x64246)) ^ 0xFFE42460) & (v82 ^ 0x64246) ^ (16 * (v82 ^ 0x64246)) & 0x3FFE4240;
  v85 = v83 ^ 0x3FFE4246 ^ (v84 ^ 0x3FE40000) & (v83 << 8);
  v86 = (v85 << 16) & 0x3FFE0000 ^ v85 ^ ((v85 << 16) ^ 0x42460000) & (((v84 ^ 0x1A4206) << 8) & 0x3FFE0000 ^ 0x1BC0000 ^ (((v84 ^ 0x1A4206) << 8) ^ 0x7E420000) & (v84 ^ 0x1A4206));
  v87 = *(_DWORD *)(v58 + 4 * HIBYTE(v73));
  v88 = (v77 ^ (2 * v86) ^ 0x85DB102D) & (v87 ^ 0x9D35A696) ^ (v77 ^ (2 * v86)) & 0x686FC417;
  v89 = *(_DWORD *)(v58 + 4 * (HIBYTE(v70) ^ 0xA)) ^ *(_DWORD *)(v59 + 4 * (BYTE1(v66) ^ 0x1Cu)) ^ *(_DWORD *)(v56 + 4 * BYTE2(v73));
  v90 = 2081423245 - v76;
  if (v88 == 4915205)
    v90 = v76 - 2036803791;
  v91 = (((v87 ^ 0x18E7E9AE) - 417851822) ^ ((v87 ^ 0x3F22BE89) - 1059241609) ^ ((v87 ^ 0xD29F35A6) + 761317978))
      + 358887605
      + v90;
  v92 = (v91 ^ 0x9EB1944D) & (2 * (v91 & 0xDEA1C66D)) ^ v91 & 0xDEA1C66D;
  v93 = ((2 * (v91 ^ 0x2BF390DD)) ^ 0xEAA4AD60) & (v91 ^ 0x2BF390DD) ^ (2 * (v91 ^ 0x2BF390DD)) & 0xF55256B0;
  v94 = v93 ^ 0x15525290;
  v95 = (v93 ^ 0xE0000020) & (4 * v92) ^ v92;
  v96 = ((4 * v94) ^ 0xD5495AC0) & v94 ^ (4 * v94) & 0xF55256B0;
  v97 = (v96 ^ 0xD5405280) & (16 * v95) ^ v95;
  v98 = ((16 * (v96 ^ 0x20120430)) ^ 0x55256B00) & (v96 ^ 0x20120430) ^ (16 * (v96 ^ 0x20120430)) & 0xF55256B0;
  v99 = v97 ^ 0xF55256B0 ^ (v98 ^ 0x550042B0) & (v97 << 8);
  v100 = *(_DWORD *)(v56 + 4 * (BYTE2(v69) ^ 0xD1u));
  v101 = (v99 << 16) & 0x75520000 ^ v99 ^ ((v99 << 16) ^ 0x56B00000) & (((v98 ^ 0xA05214B0) << 8) & 0xF5520000 ^ 0x25000000 ^ (((v98 ^ 0xA05214B0) << 8) ^ 0x52560000) & (v98 ^ 0xA05214B0));
  LOWORD(v99) = v74 ^ v100;
  v102 = v89 ^ *(_DWORD *)(v60 + 4 * (((v69 & 0x54 ^ 0x4F15) + (v69 & 0xAB) - 1) ^ 0x4FBD));
  v103 = *(_DWORD *)(v59 + 4 * ~(v69 >> 8)) ^ v75 & 0xFFFDFFFF ^ *(_DWORD *)(v60
                                                                                              + 4
                                                                                              * ((-815906348
                                                                                                - (v70 ^ 0x8380A220 | 0xCF5E41D4)
                                                                                                + (v70 ^ 0x8380A220 | 0x30A1BE2B)) ^ 0xB3211C2D)) ^ v91 ^ (2 * v101);
  v104 = (v74 ^ v100 ^ 0xFFF3708A) >> (-(v78 | 0xF) & 0x10 ^ 0x10) >> (-(v78 | 0xF) & 0x10);
  v105 = *(_DWORD *)(v56 + 4 * (BYTE2(v78) ^ 6u));
  v106 = *(_DWORD *)(v58 + 4 * ((v74 ^ ~v100) >> 24));
  v107 = ((2 * ((v106 ^ v105) & 0x6A64E780 ^ 0x80878A1)) & 0x10083840)
       - ((v106 ^ v105) & 0x6A64E780 ^ 0x80878A1)
       - 159652989;
  v108 = (v106 & 0x1120029 ^ 0xA42C501) + (v106 & 0x94891856 ^ 0xD00C0A43) - 1;
  v109 = (v108 & 0x109B12A0 ^ 0x404B0221) + (v108 & 0x85002D5F) - 1;
  v110 = (v109 ^ 0x455B0D62) & (v105 ^ 0xF493E) ^ v109 & 0x808A0B54;
  v111 = (v106 ^ 0x87D15177) & (v105 ^ 0x7F1AFD95) ^ v105 & 0x8D74CC09;
  v112 = (STACK[0x2640] & (v111 >> 6) ^ 0x42C60 | 0x5647EAB2)
       - (STACK[0x2640] & (v111 >> 6) ^ 0x42C60 | 0xA9B8154D)
       - 1447553715;
  v113 = (v112 & 0x60B8F03 ^ 0x200509) + (v112 ^ 0x6E4BFA96) - ((v112 ^ 0x6E4BFA96) & 0x262B8F0B);
  v114 = v113 & 0x6AB71E87 ^ 0x9D69FF7E ^ (v113 ^ 0xE1086070) & ((v111 << 26) ^ 0x6D48E178);
  LODWORD(v115) = (v114 - (STACK[0x2644] & (2 * v114)) + 2125678105) ^ __ROR4__(((v110 ^ 0x820954)+ 1545086261+ ((2 * v110) & 0xB8304A68 ^ 0xFFFFFDD7)) ^ 0xA2873DFD, 6) ^ 0x628CE241;
  HIDWORD(v115) = v115;
  v116 = (v115 >> 26) - ((2 * (v115 >> 26)) & 0x8B7F3860) + 1170185264;
  v117 = (((v107 ^ 0xEBAD7348) + 1571450059) ^ ((v107 ^ 0x5041CE8A) - 431566583) ^ ((v107 ^ 0x25BB4660) - 1816372765))
       - 2142178593
       + (((v116 ^ 0x20E15543) + 203085507) ^ ((v116 ^ 0x8CB26151) - 1605770543) ^ ((v116 ^ 0x1812A6F8) + 887694714));
  v118 = (v117 ^ 0xBE235707) & (2 * (v117 & 0xBEA41794)) ^ v117 & 0xBEA41794;
  v119 = ((2 * (v117 ^ 0xDA2B762F)) ^ 0xC91EC376) & (v117 ^ 0xDA2B762F) ^ (2 * (v117 ^ 0xDA2B762F)) & 0x648F61BA;
  v120 = v119 ^ 0x24812089;
  v121 = (v119 ^ 0x40014039) & (4 * v118) ^ v118;
  v122 = ((4 * v120) ^ 0x923D86EC) & v120 ^ (4 * v120) & 0x648F61B8;
  v123 = (v122 ^ 0xD00B3) & (16 * v121) ^ v121;
  v124 = ((16 * (v122 ^ 0x64826113)) ^ 0x48F61BB0) & (v122 ^ 0x64826113) ^ (16 * (v122 ^ 0x64826113)) & 0x648F61B0;
  v125 = v123 ^ 0x648F61BB ^ (v124 ^ 0x4086010B) & (v123 << 8);
  v126 = (v125 << 16) & 0x648F0000 ^ v125 ^ ((v125 << 16) ^ 0x61BB0000) & (((v124 ^ 0x2409600B) << 8) & 0x648F0000 ^ 0x608E0000 ^ (((v124 ^ 0x2409600B) << 8) ^ 0xF610000) & (v124 ^ 0x2409600B));
  v127 = ((v103 ^ 0x22) - ((2 * v103) & 0x13A) - 1155751267) ^ 0xB99CF39C;
  v128 = (-2114205791 - (v99 ^ 9 | 0x81FBC7A1) + (v99 ^ 9 | 0x7E04385E)) ^ 0x7AA8BC5E;
  v129 = ((2 * v128) | 0x53DADF4A) - v128;
  v130 = *(_DWORD *)(v59 + 4 * (BYTE1(v99) ^ 0x70u));
  v131 = *(_DWORD *)(v60
                   + 4
                   * ((((2 * (v102 ^ 0x857D6431)) & 0x26AC1AA)
                     - (v102 ^ 0x857D6431)
                     + 1187651114) ^ 0xC3B77AEA));
  v132 = *(_DWORD *)(v59 + 4 * (BYTE1(v102) ^ 0xE0u)) ^ v117 ^ *(_DWORD *)(v60
                                                                           + 4
                                                                           * ((v127
                                                                             - ((2 * v127) & 0x10022BA)
                                                                             + 1554947421) ^ 0x5E2ECC5D)) ^ (2 * v126);
  if (v44)
    v133 = v131 ^ 0xA91EF1FD;
  else
    v133 = 1827251356;
  v134 = ((v133 & (v131 ^ 0x3A08AA9E) ^ v131 & 0x8730464B ^ 0x2C4285D5) - 1591831916) ^ ((v133 & (v131 ^ 0x3A08AA9E) ^ v131 & 0x8730464B ^ 0x2FF06325)
                                                                                       - 1565756316) ^ ((v133 & (v131 ^ 0x3A08AA9E) ^ v131 & 0x8730464B ^ 0x1B2E4FA) - 1930497091);
  v135 = *(_DWORD *)(v58 + 4 * (HIBYTE(v102) ^ 0x66));
  v136 = *(_DWORD *)(v59 + 4 * (BYTE1(v103) ^ 0x41u)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v78) ^ 0xB)) ^ *(_DWORD *)(v60 + 4 * ((v129 + 1444057179) ^ 0xAD41EB26)) ^ *(_DWORD *)(v56 + 4 * (BYTE2(v102) ^ 6u));
  v137 = v135 ^ v130 ^ *(_DWORD *)(v56 + 4 * (BYTE2(v103) ^ 0x54u));
  v138 = (((2 * (v131 & 0x14261D28 ^ 0x4040508)) | 0xC0B2B20C) - (v131 & 0x14261D28 ^ 0x4040508) + 531015418) ^ 0xB1513F56;
  v139 = (((((2 * v138) & 0x3AB55DD0) - v138 - 492482281) ^ 0x5713F27E) - 2122459001) ^ (((((2 * v138) & 0x3AB55DD0)
                                                                                         - v138
                                                                                         - 492482281) ^ 0xF25F4C83)
                                                                                       + 607217276) ^ (((((2 * v138) & 0x3AB55DD0) - v138 - 492482281) ^ 0x2E584BA) - 729043389);
  v140 = ((2 * (v78 ^ 0xD6)) & 0xB8) - (v78 ^ 0xD6) + 264644515;
  v141 = v134 + 807053900 + v139;
  v142 = (v141 ^ 0xEC9B0F86) & (2 * (v141 & 0xCEC22FA7)) ^ v141 & 0xCEC22FA7;
  v143 = ((2 * (v141 ^ 0x791B148C)) ^ 0x6FB27656) & (v141 ^ 0x791B148C) ^ (2 * (v141 ^ 0x791B148C)) & 0xB7D93B2A;
  v144 = v143 ^ 0x90490929;
  v145 = (v143 ^ 0x27103200) & (4 * v142) ^ v142;
  v146 = ((4 * v144) ^ 0xDF64ECAC) & v144 ^ (4 * v144) & 0xB7D93B28;
  v147 = (v146 ^ 0x97402820) & (16 * v145) ^ v145;
  v148 = ((16 * (v146 ^ 0x20991303)) ^ 0x7D93B2B0) & (v146 ^ 0x20991303) ^ (16 * (v146 ^ 0x20991303)) & 0xB7D93B20;
  v149 = v147 ^ 0xB7D93B2B ^ (v148 ^ 0x35913200) & (v147 << 8);
  v150 = (v149 << 16) & 0x37D90000 ^ v149 ^ ((v149 << 16) ^ 0x3B2B0000) & (((v148 ^ LODWORD(STACK[0x2648])) << 8) & 0x37D90000 ^ 0x26C00000 ^ (((v148 ^ LODWORD(STACK[0x2648])) << 8) ^ LODWORD(STACK[0x264C])) & (v148 ^ LODWORD(STACK[0x2648])));
  v151 = (((v137 ^ 0x8A2E0461) + 1976695711) ^ ((v137 ^ 0x613F5D2A) - 1631542570) ^ ((v137 ^ 0x333D827F) - 859669119))
       + (((v137 ^ 0x94A198CC) - 663997845) ^ ((v137 ^ 0x990C0744) - 708727325) ^ ((v137 ^ 0x595A06AA) + 362261517))
       + 536531062;
  v152 = (v151 ^ LODWORD(STACK[0x2658])) & (2 * (v151 & 0x9FF7D73A)) ^ v151 & 0x9FF7D73A;
  v153 = ((2 * (v151 ^ 0xE5DF6F35)) ^ 0xF451701E) & (v151 ^ 0xE5DF6F35) ^ (2 * (v151 ^ 0xE5DF6F35)) & 0x7A28B80E;
  v154 = v153 ^ LODWORD(STACK[0x2650]);
  v155 = ((4 * (v153 ^ LODWORD(STACK[0x2654]))) ^ 0xE8A2E03C) & (v153 ^ LODWORD(STACK[0x2654])) ^ (4
                                                                                                 * (v153 ^ LODWORD(STACK[0x2654]))) & 0x7A28B80C;
  v156 = (v155 ^ 0x6820A003) & (16 * (v154 & (4 * v152) ^ v152)) ^ v154 & (4 * v152) ^ v152;
  v157 = ((16 * (v155 ^ 0x12081803)) ^ 0xA28B80F0) & (v155 ^ 0x12081803) ^ (16 * (v155 ^ 0x12081803)) & 0x7A28B800;
  v158 = v156 ^ 0x7A28B80F ^ (v157 ^ 0x2208800F) & (v156 << 8);
  v159 = v151 ^ (2
               * ((v158 << 16) & 0x7A280000 ^ v158 ^ ((v158 << 16) ^ 0x380F0000) & (((v157 ^ 0x5820380F) << 8) & 0x7A280000 ^ 0x52000000 ^ (((v157 ^ 0x5820380F) << 8) ^ 0x28B80000) & (v157 ^ 0x5820380F))));
  v160 = (((v137 ^ 0xDE049FAD) + 570122323) ^ ((v137 ^ 0x6FDF4B3E) - 1876904766) ^ ((v137 ^ 0x69F70FA7) - 1777799079))
       - 415548086
       + (((v159 ^ 0x9B2B2DD3) + 1101670413) ^ ((v159 ^ 0x8D2B213) - 766265395) ^ ((v159 ^ LODWORD(STACK[0x265C]))
                                                                                 - 1389247802));
  v161 = (v160 ^ 0x332922D6) & (2 * (v160 & 0xB22940E4)) ^ v160 & 0xB22940E4;
  v162 = ((2 * (v160 ^ 0x337BA29E)) ^ LODWORD(STACK[0x2660])) & (v160 ^ 0x337BA29E) ^ (2 * (v160 ^ 0x337BA29E)) & 0x8152E27A;
  v163 = (v162 ^ 0x10203A) & (4 * v161) ^ v161;
  v164 = ((4 * (v162 ^ 0x8152220A)) ^ 0x54B89E8) & (v162 ^ 0x8152220A) ^ (4 * (v162 ^ 0x8152220A)) & 0x8152E278;
  v165 = v164 ^ 0x80106212;
  v166 = (v164 ^ 0x1428072) & (16 * v163) ^ v163;
  v167 = ((16 * v165) ^ 0x152E27A0) & v165 ^ (16 * v165) & 0x8152E270;
  v168 = v166 ^ 0x8152E27A ^ (v167 ^ 0x102225A) & (v166 << 8);
  v169 = v160 ^ *(_DWORD *)(v60
                          + 4
                          * (((v140 & 0x802185A ^ 0xB0111818) + (v140 ^ 0x4F8607E7) - ((v140 ^ 0x4F8607E7) & 0x4040185A)) ^ 0xB8133841)) ^ (2 * ((v168 << 16) & 0x1520000 ^ v168 ^ ((v168 << 16) ^ 0x627A0000) & (((v167 ^ 0x8050C05A) << 8) & 0x81520000 ^ 0x1100000 ^ (((v167 ^ 0x8050C05A) << 8) ^ 0x52E20000) & (v167 ^ 0x8050C05A))));
  v170 = *(_DWORD *)(v59 + 4 * (BYTE1(v78) ^ 0xFEu)) ^ *(_DWORD *)(v56 + 4 * v104) ^ v141 ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v103) ^ 0xDA)) ^ (2 * v150);
  v171 = (1944795171 - (v170 ^ 0x7E | 0x73EB3823) + (v170 ^ 0x7E | 0x8C14C7DC)) ^ 0x861484C8;
  v172 = ((BYTE2(v169) ^ 0xC9) + (HIWORD(v169) & 0x9F ^ 0xD468416) - ((BYTE2(v169) ^ 0xC9) & 0xFFFFFF9F)) ^ 0x49DE84FF;
  v173 = ((v132 ^ 0x22) + (v132 & 0x61 ^ 0xD4D10241) - ((v132 ^ 0x22) & 0x61)) ^ 0xDC514061;
  v174 = *(_DWORD *)(v56 + 4 * (BYTE2(v136) ^ 0x22u)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v132) ^ 0x3F)) ^ *(_DWORD *)(v60 + 4 * ((-1268621796 - (v171 | 0xB4625E1C) + (v171 | 0x4B9DA1E3)) ^ 0x419DE2A0)) ^ *(_DWORD *)(v59 + 4 * ((1347240838 - (BYTE1(v169) ^ 0xE4C2E565) + ((2 * (BYTE1(v169) ^ 0xE4C2E565)) & 0x490548F2)) ^ 0xB48FA6CD));
  v175 = *(_DWORD *)(v56 + 4 * ((v172 - ((2 * v172) & 0x81100596) + 1774811851) ^ 0x2D517A42)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v136) ^ 0x15)) ^ *(_DWORD *)(v59 + 4 * (BYTE1(v170) ^ 6u)) ^ *(_DWORD *)(v60 + 4 * ((((2 * v173) | 0x112E1E8A) - v173 + 2003366075) ^ 0x80174D55));
  v176 = *(_DWORD *)(v59 + 4 * (BYTE1(v136) ^ 0x5Du));
  v177 = *(_DWORD *)(v56 + 4 * (BYTE2(v170) ^ 0x65u)) ^ *(_DWORD *)(v59 + 4 * (BYTE1(v132) ^ 0x66u)) ^ *(_DWORD *)(v60 + 4 * ((-490258927 - (v136 ^ 0xD2CA0999 | 0xE2C73E11) + (v136 ^ 0xD2CA0999 | 0x1D38C1EE)) ^ 0xCFF2C86F)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v169) ^ 0x8A));
  v178 = v176 ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v170) ^ 0x3D)) ^ *(_DWORD *)(v56 + 4 * (BYTE2(v132) ^ 0x13u)) ^ *(_DWORD *)(v60 + 4 * (v169 ^ 0x8Eu));
  v179 = (-2120286208 - (v174 ^ 0x13) + ((2 * (v174 ^ 0x13)) & 0x17C) + 65) ^ LODWORD(STACK[0x2664]);
  v180 = *(_DWORD *)(v60 + 4 * ((((2 * v179) & 0x6082F0ACu) - v179 + 1234339753) ^ LODWORD(STACK[0x2668])));
  v181 = *(_DWORD *)(v58 + 4 * (HIBYTE(v174) ^ 0x24)) ^ *(_DWORD *)(v59
                                                                    + 4
                                                                    * ((-1586966738
                                                                      - (BYTE1(v177) ^ 0x21A1BCF1)
                                                                      + ((2 * (BYTE1(v177) ^ 0x21A1BCF1)) & 0x1025860)
                                                                      + 673) ^ 0x80C96D89)) ^ *(_DWORD *)(v60 + 4 * (((v178 ^ 0x414085B6) + (v178 & 0x7A ^ 0x82896848) - ((v178 ^ 0x414085B6) & 0x4000857A)) ^ 0x83C968DA)) ^ *(_DWORD *)(v56 + 4 * (BYTE2(v175) ^ 0xE8u));
  v182 = *(_DWORD *)(v56
                   + 4
                   * ((1388985579 - (BYTE2(v178) ^ 0x90) + (LODWORD(STACK[0x2670]) | (2 * (BYTE2(v178) ^ 0x90))) + 3221) & 0x7FFFFFFFu ^ LODWORD(STACK[0x266C])));
  v183 = *(_DWORD *)(v56
                   + 4 * (((BYTE2(v177) ^ 0x14) - 554739595 - ((2 * (BYTE2(v177) ^ 0x14)) & 0x15A) + 56) ^ 0xDEEF5875)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v175) ^ 0xD3)) ^ *(_DWORD *)(v59 + 4 * (((BYTE1(v178) ^ 0xC7) + ((v178 >> 8) & 0x48 ^ 0x208) - ((BYTE1(v178) ^ 0xC7) & 0x48)) ^ 0x2BC)) ^ v180;
  v184 = *(_DWORD *)(v58 + 4 * (HIBYTE(v177) ^ 0xA0));
  v185 = 2 * ((v184 ^ 0x755A6281) & (v182 ^ 0x78DD174D) ^ v184 & 0x78381527);
  v186 = (((v182 ^ 0xCC361C77) + 868869001) ^ ((v182 ^ 0x9D6D0C2) - 165073090) ^ ((v182 ^ 0x4505CEDF) - 1158008543))
       + (((v184 ^ 0xDB6E183) - 230089091) ^ ((v184 ^ 0x28A6D5BE) - 682022334) ^ ((v184 ^ 0xD04A56BC) + 800434500))
       - (((v185 ^ 0xF8F76C78) + 874108440) ^ ((v185 ^ 0x2B7FE783) - 409903635) ^ ((v185 ^ 0x33B88BF9) - 11128425))
       - 50385827;
  v187 = (v186 ^ 0x271EF2FC) & (2 * (v186 & 0xA61EF2FC)) ^ v186 & 0xA61EF2FC;
  v188 = ((2 * (v186 ^ 0x270F376C)) ^ 0x2238B20) & (v186 ^ 0x270F376C) ^ (2 * (v186 ^ 0x270F376C)) & 0x8111C590;
  v189 = (v188 ^ 0x1018100) & (4 * v187) ^ v187;
  v190 = ((4 * (v188 ^ 0x81104490)) ^ 0x4471640) & (v188 ^ 0x81104490) ^ (4 * (v188 ^ 0x81104490)) & 0x8111C590;
  v191 = (v190 ^ 0x10410) & (16 * v189) ^ v189;
  v192 = ((16 * (v190 ^ 0x8110C190)) ^ 0x111C5900) & (v190 ^ 0x8110C190) ^ (16 * (v190 ^ 0x8110C190)) & 0x8111C590;
  v193 = v192 ^ 0x80018490;
  v194 = v191 ^ 0x8111C590 ^ (v192 ^ 0x1104190) & (v191 << 8);
  v195 = *(_DWORD *)(v58 + 4 * (HIBYTE(v178) ^ 0x82));
  v196 = *(_DWORD *)(v59 + 4 * (BYTE1(v174) ^ 0x26u)) ^ *(_DWORD *)(v60 + 4 * (v175 ^ 0x13u)) ^ v186 ^ (2 * ((v194 << 16) & 0x1110000 ^ v194 ^ ((v194 << 16) ^ 0x45900000) & ((v193 << 8) & 0x81110000 ^ ((v193 << 8) ^ 0x11C50000) & v193 ^ 0x100000)));
  v197 = ((v175 >> 8) & 0x80) + (BYTE1(v175) ^ 0xFFFFFFEC) + (BYTE1(v175) | 0xB717E77F) + 1;
  v198 = v195 ^ *(_DWORD *)(v56
                          + 4
                          * ((1482716902
                            - (BYTE2(v174) ^ LODWORD(STACK[0x2674]))
                            + ((2 * (BYTE2(v174) ^ LODWORD(STACK[0x2674]))) | 0x4F3F1234)) ^ 0x6D8CB9ADu)) ^ *(_DWORD *)(v59 + 4 * (((v197 & 0x84F0E58A ^ 0xE02089) + (v197 & 0x7B0F1A75) - 1) ^ LODWORD(STACK[0x2678])));
  v199 = *(_DWORD *)(v60 + 4 * (v177 ^ 0xFAu));
  v200 = (v198 ^ 0x44BC7B70) & (v199 ^ 0x3A08AA9E) ^ v199 & 0x9C90A044;
  v201 = 2 * ((v200 & 0x57A468D5 ^ 0x572468D1) + (v200 ^ 0x8900004) - ((v200 ^ 0x8900004) & 0x57A468D5));
  v202 = (((v198 ^ 0xAEAAD0A3) + 1364537181) ^ ((v198 ^ 0x865E7392) + 2040630382) ^ ((v198 ^ 0xF0D87805) + 254248955))
       + (((v199 ^ 0xF29B1826) + 224716762) ^ ((v199 ^ 0x60D62004) - 1624645636) ^ ((v199 ^ 0xA84592BC) + 1471835460))
       - (((v201 ^ 0xBD330121) - 981496330) ^ ((v201 ^ 0xC14472F9) - 1190592978) ^ ((v201 ^ 0xF21EE272) - 1974309209))
       + 1843520316;
  v203 = (v202 ^ 0xDA7CE741) & (2 * (v202 & 0x9A78C015)) ^ v202 & 0x9A78C015;
  v204 = ((2 * (v202 ^ 0xDE6CE76B)) ^ 0x88284EFC) & (v202 ^ 0xDE6CE76B) ^ (2 * (v202 ^ 0xDE6CE76B)) & 0x4414277E;
  v205 = v204 ^ 0x44142102;
  v206 = (v204 ^ 0x410217E) & (4 * v203) ^ v203;
  v207 = ((4 * v205) ^ 0x10509DF8) & v205 ^ (4 * v205) & 0x4414277C;
  v208 = (v207 ^ 0x100576) & (16 * v206) ^ v206;
  v209 = ((16 * (v207 ^ 0x44042206)) ^ 0x414277E0) & (v207 ^ 0x44042206) ^ (16 * (v207 ^ 0x44042206)) & 0x44142770;
  v210 = v208 ^ 0x4414277E ^ (v209 ^ 0x4000271E) & (v208 << 8);
  v211 = v202 ^ (2
               * ((v210 << 16) & 0x44140000 ^ v210 ^ ((v210 << 16) ^ 0x277E0000) & (((v209 ^ 0x414001E) << 8) & 0x44140000 ^ 0x40100000 ^ (((v209 ^ 0x414001E) << 8) ^ 0x14270000) & (v209 ^ 0x414001E))));
  v212 = (((v183 >> 15) & 0xA0) + 408312569 + (BYTE2(v183) ^ 0xFFFFFF58) + 183) ^ 0xD9563287;
  v213 = 2008742880 - v212 + ((2 * v212) & 0xDD4A);
  v214 = (-1194921734 - (BYTE1(v196) ^ 0x2F | 0xB8C6F0FA) + (BYTE1(v196) ^ 0x2F | 0x47390F05)) ^ 0x4635AF05;
  v215 = 764991327 - (v214 | 0x2D98D75F) + (v214 | 0xD26728A0);
  v216 = *(_DWORD *)(v59 + 4 * ((((v211 >> 8) & 0x44 ^ 0x441) + ((v211 >> 8) & 0xBB) - 1) ^ 0x4CB));
  v217 = (v211 ^ 0xDAF88B33) >> (((BYTE2(v181) & 0x18 ^ 0xD) - 1) ^ 0xC) >> (((BYTE2(v181) & 0x18 ^ 0xD) - 1) ^ 0x14);
  v218 = -1438522454
       - (((v216 ^ 0x38E91348) - 954798920) ^ ((v216 ^ 0xF7CA97B4) + 137717836) ^ ((v216 ^ 0x62B03F23) - 1655717667));
  v219 = (v218 ^ 0x1236B67) & (2 * (v218 & 0xA82A6077)) ^ v218 & 0xA82A6077;
  v220 = ((2 * (v218 ^ LODWORD(STACK[0x267C]))) ^ 0xD2BB96E0) & (v218 ^ LODWORD(STACK[0x267C])) ^ (2
                                                                                                 * (v218 ^ LODWORD(STACK[0x267C]))) & 0xE95DCB70;
  v221 = (v220 ^ 0xC81DCA60) & (4 * v219) ^ v219;
  v222 = ((4 * (v220 ^ 0x29444910)) ^ 0xA5772DC0) & (v220 ^ 0x29444910) ^ (4 * (v220 ^ 0x29444910)) & 0xE95DCB70;
  v223 = ((16 * (v222 ^ 0x4808C230)) ^ 0x95DCB700) & (v222 ^ 0x4808C230) ^ (16 * (v222 ^ 0x4808C230)) & 0xE95DCB70;
  v224 = (v222 ^ 0xA1550940) & (16 * v221) ^ v221 ^ 0xE95DCB70 ^ (v223 ^ 0x815C8300) & (((v222 ^ 0xA1550940) & (16 * v221) ^ v221) << 8);
  v225 = *(_DWORD *)(v60
                   + 4
                   * ((1916535426
                     - (v211 ^ 0x31412033 | 0x723C0282)
                     + (v211 ^ 0x31412033 | 0x8DC3FD7D)) ^ 0xBC82DD7D)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v181) ^ 0x31)) ^ *(_DWORD *)(v56 + 4 * ((v213 + 1402) ^ 0xB6BB685A)) ^ *(_DWORD *)(v59 + 4 * (v215 ^ 0xD36B88A0));
  v226 = *(_DWORD *)(v56 + 4 * (BYTE2(v196) ^ 0xC5u)) ^ *(_DWORD *)(v58 + 4 * HIBYTE(v183));
  v227 = (-1315334365 - (BYTE2(v181) ^ 0x19 | 0xB1999723) + (BYTE2(v181) ^ 0x19 | 0x4E6668DC)) ^ 0x5F79426F;
  v228 = -1807161835 - (v227 | 0x9448E615) + (v227 | 0x6BB719EA);
  v229 = (((v226 ^ 0xD6F3FA47) + 688653753) ^ ((v226 ^ 0x5C0F7800) - 1544517632) ^ ((v226 ^ 0xFF43E2AC) + 12328276))
       - (((v226 ^ v216 ^ 0x974CD5A7) + 1756572249) ^ ((v226 ^ v216 ^ 0xEFB25D48) + 273523384) ^ ((v226 ^ v216 ^ 0xA0D253DB)
                                                                                                + 1596828709))
       - 1090905865;
  v230 = (v229 ^ 0xDC9D4E86) & (2 * (v229 & 0xDE986CC0)) ^ v229 & 0xDE986CC0;
  v231 = ((2 * (v229 ^ 0x54AD9686)) ^ 0x146BF48C) & (v229 ^ 0x54AD9686) ^ (2 * (v229 ^ 0x54AD9686)) & 0x8A35FA46;
  v232 = (v231 ^ 0x35F842) & (4 * v230) ^ v230;
  v233 = ((4 * (v231 ^ 0x8A140A42)) ^ 0x28D7E918) & (v231 ^ 0x8A140A42) ^ (4 * (v231 ^ 0x8A140A42)) & 0x8A35FA44;
  v234 = (v233 ^ 0x815E800) & (16 * v232) ^ v232;
  v235 = ((16 * (v233 ^ 0x82201246)) ^ 0xA35FA460) & (v233 ^ 0x82201246) ^ (16 * (v233 ^ 0x82201246)) & 0x8A35FA40;
  v236 = v235 ^ 0x8205A06;
  v237 = v234 ^ 0x8A35FA46 ^ (v235 ^ 0x8215A000) & (v234 << 8);
  v238 = v218 ^ v216 ^ v229 ^ (2
                             * ((v224 << 16) & 0x695D0000 ^ v224 ^ ((v224 << 16) ^ 0x4B700000) & (((v223 ^ LODWORD(STACK[0x2680])) << 8) & STACK[0x2684] ^ 0x20140000 ^ (((v223 ^ LODWORD(STACK[0x2680])) << 8) ^ 0x5DCB0000) & (v223 ^ LODWORD(STACK[0x2680]))) ^ v237 ^ (v237 << 16) & 0xA350000 ^ ((v237 << 16) ^ 0x7A460000) & ((v236 << 8) & 0xA350000 ^ 0xA050000 ^ ((v236 << 8) ^ 0x35FA0000) & v236)));
  v239 = (((v226 ^ 0x65E8771D) - 1709733661) ^ ((v226 ^ 0xB37239A4) + 1284359772) ^ ((v226 ^ 0xA3252E52) + 1557844398))
       - 1908711646
       + (((v238 ^ 0x700C338A) - 1471746441) ^ ((v238 ^ 0xB0DBCAED) + 1754339090) ^ ((v238 ^ 0x5B8E2C63) - 2084245088));
  v240 = (v239 ^ 0x2070FA83) & (2 * (v239 & 0xA470F8D0)) ^ v239 & 0xA470F8D0;
  v241 = ((2 * (v239 ^ 0x60F1BBA3)) ^ 0x890286E6) & (v239 ^ 0x60F1BBA3) ^ (2 * (v239 ^ 0x60F1BBA3)) & 0xC4814372;
  v242 = (v241 ^ 0xC4000251) & (4 * v240) ^ v240;
  v243 = ((4 * (v241 ^ LODWORD(STACK[0x2688]))) ^ LODWORD(STACK[0x268C])) & (v241 ^ LODWORD(STACK[0x2688])) ^ (4 * (v241 ^ LODWORD(STACK[0x2688]))) & 0xC4814370;
  v244 = (v243 ^ 0x10153) & (16 * v242) ^ v242;
  v245 = ((16 * (v243 ^ 0xC4804233)) ^ 0x48143730) & (v243 ^ 0xC4804233) ^ (16 * (v243 ^ 0xC4804233)) & 0xC4814370;
  v246 = v244 ^ 0xC4814373 ^ (v245 ^ 0x40000343) & (v244 << 8);
  v247 = (BYTE1(v181) ^ 0xC3) + ((v181 >> 8) & 0x47 ^ 0x1504) - ((BYTE1(v181) ^ 0xC3) & 0x47);
  v248 = v239 ^ *(_DWORD *)(v60 + 4 * (v181 ^ 0x25u)) ^ (2
                                                                          * ((v246 << 16) & 0x44810000 ^ v246 ^ ((v246 << 16) ^ 0x43730000) & (((v245 ^ 0x84814043) << 8) & 0x44810000 ^ 0x44800000 ^ (((v245 ^ 0x84814043) << 8) ^ 0x1430000) & (v245 ^ 0x84814043))));
  v249 = *(_DWORD *)(v60
                   + 4
                   * ((((2 * (v183 ^ 0x3E9C4C89)) | 0xFC40EECA)
                     - (v183 ^ 0x3E9C4C89)
                     + 31426715) ^ 0xC0BC3B70)) ^ *(_DWORD *)(v59 + 4 * (v247 ^ 0x150Fu)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v196) ^ 0x91)) ^ *(_DWORD *)(v56 + 4 * (BYTE2(v211) ^ 0xF8u));
  v250 = (((2 * (v196 ^ 0x81)) & 0x1AE) - (v196 ^ 0x81) - 955154392) ^ LODWORD(STACK[0x2690]);
  v251 = *(_DWORD *)(v58 + 4 * v217) ^ *(_DWORD *)(v56 + 4 * (v228 ^ 0x7AA83303)) ^ *(_DWORD *)(v59 + 4 * ((((v183 >> 8) & 0xE7 ^ 0x60C41806) + ((v183 >> 8) & 0x18 ^ 0x1082111) - 1) ^ 0x61CC39E6)) ^ *(_DWORD *)(v60 + 4 * ((833363317 - (v250 | 0x31AC1D75) + (v250 | 0xCE53E28A)) ^ 0xCE37E3C8));
  v252 = *(_DWORD *)(v58 + 4 * (HIBYTE(v248) ^ 0x8F)) ^ *(_DWORD *)(v56
                                                                    + 4
                                                                    * ((-594193687
                                                                      - (BYTE2(v249) ^ 0x20240960 | 0xDC9552E9)
                                                                      + (BYTE2(v249) ^ 0x20240960 | 0x236AAD16)) ^ 0x34EA456));
  v253 = ((BYTE2(v248) ^ 0x1A) + (HIWORD(v248) & 0x9B ^ 0xFDD5C081) - ((BYTE2(v248) ^ 0x1A) & 0x9B)) ^ 0x4D744C9B;
  v254 = ((2 * (v251 ^ 0xD1)) | 0x47E2C24E) - (v251 ^ 0xD1) - 603021607;
  v255 = *(_DWORD *)(v59 + 4 * ((((v251 >> 8) & 0xF0 ^ 0x28B43C41) + ((v251 >> 8) & 0xF) - 1) ^ 0x28B43CF1));
  v256 = *(_DWORD *)(v58 + 4 * (HIBYTE(v225) ^ 0x18)) ^ *(_DWORD *)(v59
                                                                    + 4
                                                                    * ((-2067030256
                                                                      - (BYTE1(v249) ^ 0x96764EBA | 0x84CB9F10)
                                                                      + (BYTE1(v249) ^ 0x96764EBA | 0x7B3460EF)) ^ 0xED422EE1)) ^ *(_DWORD *)(v60 + 4 * (((v254 & 0x502A1D2E ^ 0xC0081C0D) + (v254 & 0x2FD5E2D1) - 1) ^ 0xE3F97DED)) ^ *(_DWORD *)(v56 + 4 * ((v253 - ((2 * v253) & 0x6103E92E) + 2043278487) ^ 0xC96878B2));
  v257 = ((BYTE2(v225) ^ 0xDC) + (HIWORD(v225) & 0x55 ^ 0x6C667901) - ((BYTE2(v225) ^ 0xDC) & 0x55555555)) ^ 0x92B83DCB;
  v258 = *(_DWORD *)(v60 + 4 * (v225 ^ 0x9Du));
  LODWORD(STACK[0x6870]) = v258;
  v259 = *(_DWORD *)(v56
                   + 4
                   * ((-939359191 - (BYTE2(v251) ^ 0x8004C838 | 0xC8028429) + (BYTE2(v251) ^ 0x8004C838 | 0x37FD7BD6)) ^ 0xB7F9B34E)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v249) ^ 0x5A)) ^ *(_DWORD *)(v59 + 4 * (BYTE1(v225) ^ 0x72u));
  v260 = ((v248 & 0x13) + (v248 & 0xEC ^ 0xBD5AB305) - 1) ^ 0x298F59FB;
  v261 = (199966355 - (BYTE1(v248) ^ 0xC8) + ((2 * (BYTE1(v248) ^ 0xC8)) & 0xD8)) ^ 0x82EC1E0B;
  v262 = ((2 * v261) & 0x60636) - v261;
  v263 = v259 ^ *(_DWORD *)(v60 + 4 * ((v260 - (STACK[0x2698] & (2 * v260)) + 1990557434) ^ LODWORD(STACK[0x2694])));
  v264 = v258 ^ v255 ^ v252;
  v265 = *(_DWORD *)(v56 + 4 * ((((2 * v257) & 0xC0281040) - v257 + 535554015) ^ 0xE135A355));
  v266 = *(_DWORD *)(v60
                   + 4
                   * ((((2 * (v249 ^ 0xA8)) & 0x60) - (v249 ^ 0xA8) + 5071) ^ 0x13AAu));
  LODWORD(STACK[0x6860]) = v266;
  v267 = *(_DWORD *)(v58 + 4 * (HIBYTE(v251) ^ 0x9A)) ^ v265 ^ *(_DWORD *)(v59
                                                                           + 4 * ((v262 + 420258020) ^ 0x900B80E2));
  LODWORD(STACK[0x6880]) = v267;
  v268 = v267 ^ v266;
  v269 = (((unsigned __int16)(v267 ^ v266) >> 8) ^ 0x2B)
       + (((v267 ^ v266) >> 8) & 0x89 ^ 0x480)
       - ((((unsigned __int16)(v267 ^ v266) >> 8) ^ 0x2B) & 0x89);
  v270 = *(_DWORD *)(v56
                   + 4
                   * (((((v264 ^ 0x1BF584AF) >> (BYTE1(v169) & 0x10))
                                       + 347739300
                                       - ((2 * ((v264 ^ 0x1BF584AF) >> (BYTE1(v169) & 0x10))) & 0x29742948)) ^ 0x14BA14A4) >> (BYTE1(v169) & 0x10 ^ 0x10)));
  v271 = *(_DWORD *)(v58 + 4 * (HIBYTE(v256) ^ 3)) ^ *(_DWORD *)(v59 + 4 * (BYTE1(v263) ^ 0x41u));
  LODWORD(STACK[0x6910]) = v271;
  v272 = v271 ^ v270 ^ *(_DWORD *)(v60 + 4 * (v268 ^ 0x75u));
  v273 = (((2 * (BYTE2(v263) ^ 0x23)) & 0x192) - (BYTE2(v263) ^ 0x23) + 730797110) ^ 0x7BC73DE4;
  LODWORD(STACK[0x68C0]) = BYTE1(v256);
  v274 = (BYTE1(v256) ^ 0xF2) - ((2 * (BYTE1(v256) ^ 0xF2)) & 0x3C) - 1105836770;
  v275 = *(_DWORD *)(v58 + 4 * (HIBYTE(v264) ^ 0x1B)) ^ *(_DWORD *)(v59 + 4 * (v269 ^ 0x423));
  v276 = *(_DWORD *)(v56 + 4 * ((v273 + 387888053 - ((2 * v273) & 0x201006DC) + 4025) ^ 0x4756EA6Eu));
  LODWORD(STACK[0x68A0]) = v276;
  v277 = v275 ^ v276;
  v278 = ((v275 ^ v276) & 0x72F8798E ^ 0x70403188)
       - ((2 * ((v275 ^ v276) & 0x72F8798E ^ 0x70403188)) & 0x41C0C30C)
       + 769942502;
  LODWORD(STACK[0x68B0]) = BYTE2(v256);
  v279 = *(_DWORD *)(v56 + 4 * (BYTE2(v256) ^ 0xB2u));
  LODWORD(STACK[0x6890]) = v256;
  v280 = ((2 * (v279 & 0xF52FCC37 ^ 0xA0754E20)) | 0xC8F5C940) - (v279 & 0xF52FCC37 ^ 0xA0754E20);
  v281 = (BYTE1(v264) ^ 0x24) + ((v264 >> 8) & 0x39 ^ 0x1319) - ((BYTE1(v264) ^ 0x24) & 0x39);
  v282 = (v277 & 0x8D078671 ^ 0xD048201 | 0x570479AE) - (v277 & 0x8D078671 ^ 0xD048201 | 0xA8FB8651) - 1459911087;
  v283 = ((v279 & 0xD00380 ^ 0x34728285) + (v279 & 0xA003048) - 1) ^ 0x72F094E8;
  v284 = (((((2 * v283) | 0x3D0CE1BA) - v283 + 1635356451) ^ 0xF40D6A2E) + 335698356) ^ (((((2 * v283) | 0x3D0CE1BA)
                                                                                         - v283
                                                                                         + 1635356451) ^ 0x97703A61)
                                                                                       + 2004814333) ^ (((((2 * v283) | 0x3D0CE1BA) - v283 + 1635356451) ^ 0xBBB934B6) + 1538656044);
  v285 = v282 & STACK[0x269C] ^ *(_DWORD *)(v60
                                          + 4
                                          * (((v256 ^ 0xFFFFFF8F)
                                            + 1752792716
                                            + ((2 * v256) | 0x2F0D02EA)) ^ 0x978681AB)) ^ (((v278 & 0x94D11A14 ^ 0x14511851 | v278 & 0x6B2EE5AA) - 1) ^ 0xBE2AC37) & (v282 ^ 0x2DFB8660);
  v286 = v284
       - (((v279 ^ 0x82A6B95A) + 2103002790) ^ ((v279 ^ 0xE27A3483) + 495307645) ^ ((v279 ^ 0xE0398FB3) + 533098573))
       + 2024580364;
  v287 = (v286 ^ 0xA92B65B4) & (2 * (v286 & 0xCDA30125)) ^ v286 & 0xCDA30125;
  v288 = ((2 * (v286 ^ 0x396965BE)) ^ 0xE994C936) & (v286 ^ 0x396965BE) ^ (2 * (v286 ^ 0x396965BE)) & 0xF4CA649A;
  v289 = (v288 ^ 0x60800010) & (4 * v287) ^ v287;
  v290 = ((4 * (v288 ^ 0x144A2489)) ^ 0xD329926C) & (v288 ^ 0x144A2489) ^ (4 * (v288 ^ 0x144A2489)) & 0xF4CA6498;
  v291 = v289 ^ 0xF4CA649B ^ (v290 ^ 0xD0080000) & (16 * v289);
  v292 = (16 * (v290 ^ 0x24C26493)) & 0xF4CA6490 ^ 0xB048240B ^ ((16 * (v290 ^ 0x24C26493)) ^ 0x4CA649B0) & (v290 ^ 0x24C26493);
  v293 = (v291 << 8) & 0xF4CA6400 ^ v291 ^ ((v291 << 8) ^ 0xCA649B00) & v292;
  v294 = ((v293 << 16) ^ 0x649B0000) & ((v292 << 8) & 0x74CA0000 ^ 0x348A0000 ^ ((v292 << 8) ^ 0x4A640000) & v292);
  v295 = v280 + 461708128;
  v296 = -1667993856
       - (((v295 ^ 0x84E014A9) + 218591286) ^ ((v295 ^ 0xEDB8BEAD) + 1684003378) ^ ((v295 ^ 0xAD7200A6) + 613770299));
  v297 = (v296 ^ 0xA1B45FBE) & (2 * (v296 & 0xB1395F3F)) ^ v296 & 0xB1395F3F;
  v298 = ((2 * (v296 ^ 0xE3C4CD96)) ^ 0xA5FB2552) & (v296 ^ 0xE3C4CD96) ^ (2 * (v296 ^ 0xE3C4CD96)) & 0x52FD92A8;
  v299 = (v298 ^ 0x12E90200) & (4 * v297) ^ v297;
  v300 = ((4 * (v298 ^ 0x520492A9)) ^ 0x4BF64AA4) & (v298 ^ 0x520492A9) ^ (4 * (v298 ^ 0x520492A9)) & 0x52FD92A8;
  v301 = (v300 ^ 0x42F402A0) & (16 * v299) ^ v299;
  v302 = ((16 * (v300 ^ 0x10099009)) ^ 0x2FD92A90) & (v300 ^ 0x10099009) ^ (16 * (v300 ^ 0x10099009)) & 0x52FD92A0;
  v303 = v301 ^ 0x52FD92A9 ^ (v302 ^ 0x2D90229) & (v301 << 8);
  v304 = *(_DWORD *)(v60 + 4 * (v264 ^ 0xAFu));
  v305 = *(_DWORD *)(v58 + 4 * (HIBYTE(v263) ^ 0xA3));
  LODWORD(STACK[0x6850]) = v305;
  v306 = v305 ^ v304 ^ *(_DWORD *)(v56
                                 + 4
                                 * ((-736078517
                                   - (BYTE2(v268) ^ 0xD8781D7C | 0xD420554B)
                                   + (BYTE2(v268) ^ 0xD8781D7C | 0x2BDFAAB4)) ^ 0xF3A7B7BD)) ^ *(_DWORD *)(v59 + 4 * (((v274 & 0x1C0002A3 ^ 0x40A13A81) + (v274 ^ 0x9F4CC52E) - ((v274 ^ 0x9F4CC52E) & 0x5882A3)) ^ 0x7DA33A67));
  v307 = v296 ^ v295 ^ v286 ^ (2
                             * ((v303 << 16) & 0x52FD0000 ^ v303 ^ ((v303 << 16) ^ 0x12A90000) & (((v302 ^ 0x50249029) << 8) & 0x52FD0000 ^ 0x26D0000 ^ (((v302 ^ 0x50249029) << 8) ^ 0xFD920000) & (v302 ^ 0x50249029)) ^ v293 ^ (v293 << 16) & 0x74CA0000 ^ v294));
  v308 = v284
       - 678819290
       + (((v307 ^ 0x3E0C4551) - 855523377) ^ ((v307 ^ LODWORD(STACK[0x26A0])) - 806157548) ^ ((v307 ^ 0x9AEBA401)
                                                                                             + 1776705183));
  v309 = (v308 ^ 0x1041BE24) & (2 * (v308 & 0x8495BC31)) ^ v308 & 0x8495BC31;
  v310 = ((2 * (v308 ^ 0x1141E666)) ^ 0x2BA8B4AE) & (v308 ^ 0x1141E666) ^ (2 * (v308 ^ 0x1141E666)) & 0x95D45A56;
  v311 = (v310 ^ 0x80801A15) & (4 * v309) ^ v309;
  v312 = ((4 * (v310 ^ 0x94544A51)) ^ 0x5751695C) & (v310 ^ 0x94544A51) ^ (4 * (v310 ^ 0x94544A51)) & 0x95D45A54;
  v313 = (v312 ^ 0x15504850) & (16 * v311) ^ v311;
  v314 = ((16 * (v312 ^ 0x80841203)) ^ 0x5D45A570) & (v312 ^ 0x80841203) ^ (16 * (v312 ^ 0x80841203)) & 0x95D45A50;
  v315 = v313 ^ 0x95D45A57 ^ (v314 ^ 0x15440000) & (v313 << 8);
  v316 = (v263 ^ 0x15) + (v263 & 0x98 ^ 0x801D4188) - ((v263 ^ 0x15) & 0x98);
  v317 = *(_DWORD *)(v60
                   + 4
                   * (((v316 & 0x80015743 ^ 0xDC0D342) + (v316 ^ 0x92270415) - ((v316 ^ 0x92270415) & 0x12185743)) ^ 0x8DE39213));
  v318 = *(_DWORD *)(v58 + 4 * (HIBYTE(v268) ^ 0xDB)) ^ *(_DWORD *)(v59 + 4 * (v281 ^ 0x1399u)) ^ v317 ^ v308 ^ (2 * ((v315 << 16) & 0x15D40000 ^ v315 ^ ((v315 << 16) ^ 0x5A570000) & (((v314 ^ 0x80905A07) << 8) & 0x15D40000 ^ 0x1840000 ^ (((v314 ^ 0x80905A07) << 8) ^ 0x545A0000) & (v314 ^ 0x80905A07))));
  LOBYTE(v308) = ((2 * (v272 & 0x56 ^ 0x54)) & 0x66) - (v272 & 0x56 ^ 0x54) - 51;
  v319 = ((v308 ^ 0x83) - 59) ^ ((v308 ^ 0xD1) - 105) ^ ((v308 ^ 0x8F) - 55);
  v320 = v272 ^ 0x85;
  if (LODWORD(STACK[0x6AC0]) == -945046297)
    v320 = 22;
  v321 = (v320 ^ 0xBF) & (v272 ^ LODWORD(STACK[0x26A8])) ^ v320 & STACK[0x26A4];
  v322 = (1538756634 - (BYTE1(v318) ^ 0xC3 | 0x5BB7901A) + (BYTE1(v318) ^ 0xC3 | 0xA4486FE5)) ^ 0xF4897A05;
  v323 = v322 - ((2 * v322) & 0xDDD29E72);
  v324 = *(_DWORD *)(v58 + 4 * (HIBYTE(v272) ^ 0xAB)) ^ *(_DWORD *)(v59 + 4 * (BYTE1(v306) ^ 0xD8u)) ^ *(_DWORD *)(v56 + 4 * (((BYTE2(v285) ^ 0x26) + 92674074 - ((2 * (BYTE2(v285) ^ 0x26)) & 0xFFFFFFFB) + 3811) ^ 0x586263A)) ^ *(_DWORD *)(v60 + 4 * (((v318 ^ 0x146B8021) - ((2 * (v318 ^ 0x146B8021)) & 0x70038) - 1459376868) ^ 0xBD682D1C));
  v325 = *(_DWORD *)(v56 + 4 * (BYTE2(v306) ^ 0x27u)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v285) ^ 0x58)) ^ *(_DWORD *)(v60 + 4 * ((((v321 ^ 0xE9) + 21) ^ ((v321 ^ 0xC5) + 57) ^ ((v321 ^ 0x23) - 33)) + v319 + 114)) ^ *(_DWORD *)(v59 + 4 * ((v323 - 286699719) ^ 0xBE285A38));
  v326 = ((HIWORD(v318) & 0xBD ^ 0x781DD74E) - (HIWORD(v318) & 0x42)) ^ 0x7918C348;
  v327 = ((BYTE1(v285) ^ 0x8F60465E) + ((v285 >> 8) & 0x87 ^ 0x60033181) - ((BYTE1(v285) ^ 0x8F60465E) & 0x88000287)) ^ 0x63C33461;
  v328 = *(_DWORD *)(v56 + 4 * (BYTE2(v272) ^ 0x23u)) ^ *(_DWORD *)(v59
                                                                    + 4
                                                                    * ((v327 - (STACK[0x26B0] & (2 * v327)) + 1202957255) ^ 0x4313EAB3));
  v329 = ((2 * (v306 ^ 0x74)) & 0x1A2) - (v306 ^ 0x74) - 545660882;
  v330 = *(_DWORD *)(v56 + 4 * ((854810679 - (v326 | 0x32F36037) + (v326 | 0xCD0C9FC8)) ^ 0xCC098BC8)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v306) ^ 0x13)) ^ *(_DWORD *)(v60 + 4 * (((v285 ^ 0x4C142482) + (v285 & 0x84 ^ LODWORD(STACK[0x26AC])) - ((v285 ^ 0x4C142482) & 0x40002084)) ^ 0x3E9C4D84)) ^ *(_DWORD *)(v59 + 4 * (BYTE1(v272) ^ 0x1Du));
  v331 = *(_DWORD *)(v58 + 4 * (HIBYTE(v318) ^ 0x25)) ^ v328 ^ *(_DWORD *)(v60
                                                                           + 4
                                                                           * (((v329 & STACK[0x26B4] ^ 0x800223)
                                                                             + (v329 ^ 0x573AC518)
                                                                             - ((v329 ^ 0x573AC518) & 0x8041062B)) ^ 0x5CB2E362));
  v332 = (((v255 ^ 0xD7A337A7) + 677169241) ^ ((v255 ^ 0xB7734CC6) + 1217180474) ^ ((v255 ^ 0xCD43C0BE) + 851197762))
       - (((v255 ^ v252 ^ 0xEFCC8194) + 271810156) ^ ((v255 ^ v252 ^ 0x3BEC7A83) - 1005353603) ^ ((v255 ^ v252 ^ 0xC0C2023)
                                                                                                - 202121251))
       - 573903885;
  v333 = (v332 ^ 0xE7DBE0BD) & (2 * (v332 & 0xF79BF4B8)) ^ v332 & 0xF79BF4B8;
  v334 = ((2 * (v332 ^ 0x87DC28CD)) ^ 0xE08FB8EA) & (v332 ^ 0x87DC28CD) ^ (2 * (v332 ^ 0x87DC28CD)) & 0x7047DC74;
  v335 = (v334 ^ 0x60079075) & (4 * v333) ^ v333;
  v336 = ((4 * (v334 ^ 0x10404415)) ^ 0xC11F71D4) & (v334 ^ 0x10404415) ^ (4 * (v334 ^ 0x10404415)) & 0x7047DC74;
  v337 = (v336 ^ 0x40075040) & (16 * v335) ^ v335;
  v338 = ((16 * (v336 ^ 0x30408C21)) ^ 0x47DC750) & (v336 ^ 0x30408C21) ^ (16 * (v336 ^ 0x30408C21)) & 0x7047DC70;
  v339 = v337 ^ 0x7047DC75 ^ (v338 ^ 0x45C400) & (v337 << 8);
  v340 = -260945660
       - (((v252 ^ 0x7106FCB4) - 1896283316) ^ ((v252 ^ 0x4756FD0B) - 1196883211) ^ ((v252 ^ 0x43EF6154) - 1139761492));
  v341 = (v340 ^ 0x1DCD1680) & (2 * (v340 & 0x99CE5611)) ^ v340 & 0x99CE5611;
  v342 = ((2 * (v340 ^ 0x1F599682)) ^ 0xD2F8126) & (v340 ^ 0x1F599682) ^ (2 * (v340 ^ 0x1F599682)) & 0x8697C092;
  v343 = (v342 ^ 0x4838011) & (4 * v341) ^ v341;
  v344 = ((4 * (v342 ^ 0x82904091)) ^ 0x1A5F024C) & (v342 ^ 0x82904091) ^ (4 * (v342 ^ 0x82904091)) & 0x8697C090;
  v345 = (v344 ^ 0x2170000) & (16 * v343) ^ v343;
  v346 = ((16 * (v344 ^ 0x8480C093)) ^ 0x697C0930) & (v344 ^ 0x8480C093) ^ (16 * (v344 ^ 0x8480C093)) & 0x8697C090;
  v347 = v345 ^ 0x8697C093 ^ (v346 ^ 0x140083) & (v345 << 8);
  v348 = v340 ^ v252 ^ v332 ^ (2
                             * ((v347 << 16) & 0x6970000 ^ v347 ^ v339 ^ ((v347 << 16) ^ 0x40930000) & (((v346 ^ 0x8683C083) << 8) & 0x86970000 ^ 0x170000 ^ (((v346 ^ 0x8683C083) << 8) ^ 0x97C00000) & (v346 ^ 0x8683C083)) ^ (v339 << 16) & 0x70470000 ^ ((v339 << 16) ^ 0x5C750000) & (((v338 ^ 0x70021825) << 8) & 0x70470000 ^ 0x30030000 ^ (((v338 ^ 0x70021825) << 8) ^ 0x47DC0000) & (v338 ^ 0x70021825))));
  v349 = (((v255 ^ 0x7AFE6A88) - 2063493768) ^ ((v255 ^ 0x1273B102) - 309571842) ^ ((v255 ^ 0xC51E6055) + 987865003))
       - 86557239
       + (((v348 ^ LODWORD(STACK[0x26B8])) + 1794294652) ^ ((v348 ^ 0x6BE8F50E) - 2009311609) ^ ((v348 ^ LODWORD(STACK[0x26BC]))
                                                                                               + 1459408380));
  v350 = (v349 ^ 0xFEE1A74F) & (2 * (v349 & 0xFE8A260F)) ^ v349 & 0xFE8A260F;
  v351 = ((2 * (v349 ^ 0xDEF1E74F)) ^ 0x40F78280) & (v349 ^ 0xDEF1E74F) ^ (2 * (v349 ^ 0xDEF1E74F)) & 0x207BC140;
  v352 = (v351 ^ 0x71C100) & (4 * v350) ^ v350;
  v353 = ((4 * (v351 ^ 0x20084140)) ^ 0x81EF0500) & (v351 ^ 0x20084140) ^ (4 * (v351 ^ 0x20084140)) & 0x207BC140;
  v354 = (v353 ^ 0x6B0100) & (16 * v352) ^ v352;
  v355 = ((16 * (v353 ^ 0x2010C040)) ^ 0x7BC1400) & (v353 ^ 0x2010C040) ^ (16 * (v353 ^ 0x2010C040)) & 0x207BC140;
  v356 = v354 ^ 0x207BC140 ^ (v355 ^ 0x380040) & (v354 << 8);
  v357 = v349 ^ LODWORD(STACK[0x6870]) ^ (2
                                        * ((v356 << 16) & 0x207B0000 ^ v356 ^ ((v356 << 16) ^ 0x41400000) & (((v355 ^ LODWORD(STACK[0x26C0])) << 8) & 0x207B0000 ^ 0x3A0000 ^ (((v355 ^ LODWORD(STACK[0x26C0])) << 8) ^ 0x7BC10000) & (v355 ^ LODWORD(STACK[0x26C0])))));
  v358 = ((STACK[0x6860] & 0x200 ^ 0x9DC45311) - 614438747) ^ ((STACK[0x6860] & 0x200 ^ 0x3DD2DA5A) + 2071388656) ^ ((STACK[0x6860] & 0x200 ^ 0xA0168B4B) - 424496897);
  v359 = v358 - 707496420;
  v360 = (v359 ^ 0xEBD60F8C) & (2 * (v359 & 0xE387502E)) ^ v359 & 0xE387502E;
  v361 = ((2 * (v359 ^ 0xAED8AFDC)) ^ 0x9ABFFFE4) & (v359 ^ 0xAED8AFDC) ^ (2 * (v359 ^ 0xAED8AFDC)) & 0x4D5FFFF2;
  v362 = (v361 ^ 0x81FC1E0) & (4 * v360) ^ v360;
  v363 = ((4 * (v361 ^ 0x45400012)) ^ 0x357FFFC8) & (v361 ^ 0x45400012) ^ (4 * (v361 ^ 0x45400012)) & 0x4D5FFFF0;
  v364 = (v363 ^ 0x55FFFC0) & (16 * v362) ^ v362;
  v365 = ((16 * (v363 ^ 0x48000032)) ^ 0xD5FFFF20) & (v363 ^ 0x48000032) ^ (16 * (v363 ^ 0x48000032)) & 0x4D5FFFF0;
  v366 = v364 ^ 0x4D5FFFF2 ^ (v365 ^ 0x455FFFD2) & (v364 << 8);
  v367 = (v358 - 707496420) ^ (2
                             * ((v366 << 16) & 0x4D5F0000 ^ v366 ^ ((v366 << 16) ^ 0x7FF20000) & ((((v365 ^ 0x80000D2) << 8) ^ 0x5FFF0000) & (v365 ^ 0x80000D2) ^ ((v365 ^ 0x80000D2) << 8) & 0x4D5F0000)));
  v368 = 1662839176 - v358;
  if (((v367 ^ 0xE39CAFCA) & (LODWORD(STACK[0x6880]) ^ 0x8BD420CE) ^ v367 & 0x53F8FBFA) == 0x4398ABCA)
    v368 = v359;
  v369 = (((LODWORD(STACK[0x6880]) ^ 0x32770671) - 846661233) ^ ((LODWORD(STACK[0x6880]) ^ 0x2719706) - 40998662) ^ ((LODWORD(STACK[0x6880]) ^ 0xE82A4A43) + 399881661))
       - 418762695
       + v368;
  v370 = (v369 ^ 0xC205FB2C) & (2 * (v369 & 0xD4A9FB29)) ^ v369 & 0xD4A9FB29;
  v371 = ((2 * (v369 ^ 0x62473B2C)) ^ 0x6DDD800A) & (v369 ^ 0x62473B2C) ^ (2 * (v369 ^ 0x62473B2C)) & 0xB6EEC004;
  v372 = (v371 ^ 0x24CC8000) & (4 * v370) ^ v370;
  v373 = ((4 * (v371 ^ 0x92224005)) ^ 0xDBBB0014) & (v371 ^ 0x92224005) ^ (4 * (v371 ^ 0x92224005)) & 0xB6EEC004;
  v374 = v372 ^ 0xB6EEC005 ^ (v373 ^ 0x92AA0000) & (16 * v372);
  v375 = (16 * (v373 ^ 0x2444C001)) & 0xB6EEC000 ^ 0x9002C005 ^ ((16 * (v373 ^ 0x2444C001)) ^ 0x6EEC0050) & (v373 ^ 0x2444C001);
  v376 = (v374 << 8) & 0xB6EEC000 ^ v374 ^ ((v374 << 8) ^ 0xEEC00500) & v375;
  v377 = v369 ^ STACK[0x6860] & 0xFFFFFDFF ^ (2
                                            * ((v376 << 16) & 0x36EE0000 ^ v376 ^ ((v376 << 16) ^ 0x40050000) & ((v375 << 8) & 0xB6EE0000 ^ 0x102E0000 ^ ((v375 << 8) ^ 0xEEC00000) & v375)));
  v378 = (((v357 >> 7) & 0x54) - 1505887530 + (BYTE1(v357) ^ 0xFFFFFFBB)) ^ 0xA25B7F7D;
  v379 = *(_DWORD *)(v60
                   + 4
                   * ((-1089618429
                     - (LODWORD(STACK[0x6890]) ^ 0x20200A4F | 0xBF0DBE03)
                     + (LODWORD(STACK[0x6890]) ^ 0x20200A4F | 0x40F241FC)) ^ 0x60D24B1D)) ^ __ROR4__(__ROR4__(STACK[0x68A0], 15) ^ 0x321C6E95 ^ __ROR4__(*(_DWORD *)(v59 + 4 * (BYTE1(v377) ^ 0x23u)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v357) ^ 0x7D)), 15), 17);
  v380 = ((v377 & 5) + 138460671 + (v377 & 0xFA ^ 0x341B0081)) ^ 0x38DAFFE0;
  v381 = LODWORD(STACK[0x6910]) ^ *(_DWORD *)(v60 + 4 * ((((2 * v380) & 0x900C882) - v380 - 921625666) ^ 0xCD905ABC)) ^ *(_DWORD *)(v56 + 4 * (BYTE2(v357) ^ 0x24u));
  v382 = (-886130354 - (v357 ^ 0x6C | 0xCB2EB94E) + (v357 ^ 0x6C | 0x34D146B1)) ^ 0x3CD37C11;
  v383 = *(_DWORD *)(v56 + 4 * (BYTE2(v377) ^ 0xA5u)) ^ LODWORD(STACK[0x6850]) ^ *(_DWORD *)(v59
                                                                                             + 4
                                                                                             * ((((2
                                                                                                 * (LODWORD(STACK[0x68C0]) ^ 0xA1)) | 0x1A691A0C)
                                                                                               - (LODWORD(STACK[0x68C0]) ^ 0xA1)
                                                                                               + 1925935866) ^ 0x8D348DA1)) ^ *(_DWORD *)(v60 + 4 * ((v382 - (STACK[0x26C4] & (2 * v382)) + 884941618) ^ 0x3CBD19EA));
  v384 = v317 ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v377) ^ 0xF7)) ^ *(_DWORD *)(v56
                                                                           + 4
                                                                           * (((LODWORD(STACK[0x68B0]) ^ 0x60090937)
                                                                             - ((2
                                                                               * (LODWORD(STACK[0x68B0]) ^ 0x60090937)) & 0xC0001346)
                                                                             + 1927474083) ^ 0x12EBE226));
  v385 = HIWORD(v379) & 0x7D ^ 0x396E7448 | HIWORD(v379) & 0x82;
  v386 = *(_DWORD *)(v59 + 4 * ((((2 * v378) & 0xCD0B6E) - v378 - 191880632) ^ 0xF0F6A75F)) ^ v384;
  HIDWORD(v387) = *(_DWORD *)(v56
                            + 4
                            * (((((HIWORD(v379) & 0x7D ^ 0x396E7448) & 0x212441F9 | HIWORD(v379) & 0x80) ^ 0x86000189)
                              + (v385 ^ 0x29E76674)
                              - ((v385 ^ 0x29E76674) & 0x911F9)) ^ 0xB7A4437D));
  LODWORD(v387) = HIDWORD(v387);
  v388 = (BYTE1(v386) ^ 9) - ((v386 >> 7) & 0x6C) - 2126814410;
  v389 = (v388 & 0x3C88 ^ 0x16C81C89) + (v388 & 0x377);
  v390 = (((2 * (v381 ^ 0x79)) | 0xB9548548) - (v381 ^ 0x79) - 1554662052) ^ 0x1C2A02B5;
  v391 = ((2 * v390) & 0x3A0C1D2) - v390;
  v392 = *(_DWORD *)(v59 + 4 * (BYTE1(v383) ^ 0xD8u)) ^ *(_DWORD *)(v60 + 4 * (v386 ^ 0xD4u)) ^ __ROR4__((v387 >> 5) ^ __ROR4__(*(_DWORD *)(v58 + 4 * (HIBYTE(v381) ^ 0xAB)), 5) ^ 0xDFC81F16, 27);
  v393 = (v379 & 0xBB ^ 0x9341C419) + (v379 & 0x44 ^ 0x341005);
  v394 = *(_DWORD *)(v60 + 4 * ((v391 + 2117050134) ^ 0x3EAFDF12)) ^ *(_DWORD *)(v56 + 4 * (BYTE2(v383) ^ 0x27u)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v379) ^ 0x65)) ^ *(_DWORD *)(v59 + 4 * ((v389 - 1) ^ 0x16C83F9Fu));
  v395 = (BYTE2(v386) ^ 0x6C) - ((2 * (BYTE2(v386) ^ 0x6C)) & 0xBBBBBBBB) - 1263423011;
  v396 = *(_DWORD *)(v56
                   + 4
                   * ((-680975861
                     - (BYTE2(v381) ^ 0xCB50B033 | 0xD769220B)
                     + (BYTE2(v381) ^ 0xCB50B033 | LODWORD(STACK[0x26C8]))) ^ 0xE3C66DE4)) ^ *(_DWORD *)(v58 + 4 * (HIBYTE(v386) ^ 0x2A));
  v397 = (((v381 >> 8) & 0xD2 ^ 0x9A9A0083) + ((v381 >> 8) & 0x2D) - 1) ^ 0x98CE189B;
  v398 = ((2 * v397) | 0x9DA54470) - v397;
  v399 = ((v325 ^ 0x5381BBF4) - 614149814) ^ ((v325 ^ 0xAF800C46) + 660956924) ^ ((v325 ^ 0x87365B4F) + 265499123);
  v400 = (((v379 >> 8) & 0x79) + ((v379 >> 8) & 0x86 ^ 0x7361AB85) - 1) ^ 0xB301B9B5;
  v401 = (v383 ^ 0x83443020)
       + (v383 & 0x8C ^ 0x58B8C08C)
       - ((v383 ^ 0x83443020) & 0x8300008C);
  HIDWORD(v387) = v396;
  LODWORD(v387) = v396;
  v402 = *(_DWORD *)(v58 + 4 * (HIBYTE(v383) ^ 0x13)) ^ *(_DWORD *)(v60 + 4 * ((v393 - 1) ^ 0x9375D47A)) ^ *(_DWORD *)(v59 + 4 * ((v398 + 825056712) ^ 0xCC86BA3C)) ^ *(_DWORD *)(v56 + 4 * (((v395 & 0x30800EF1 ^ 0x4A0E4630) + (v395 ^ 0xB48019CF) - ((v395 ^ 0xB48019CF) & 0x218EF1)) ^ 0x7A9E66F9));
  v403 = (v387 >> 2) ^ __ROR4__(*(_DWORD *)(v59 + 4 * ((((2 * v400) & 0x80C00AC2) - v400 - 1768555874) ^ 0x56F5E8DE)), 2);
  v404 = ((v324 ^ 0x8F62B6D4) - 1375721394) ^ ((v324 ^ 0x33E22795) + 310425869) ^ ((v324 ^ 0x7761E47F) + 1443068647);
  v405 = ((v394 ^ 0x653622C6) - 503434811) ^ ((v394 ^ 0xEE2180B7) + 1793692598) ^ ((v394 ^ 0xF0204E8C) + 1961385359);
  v406 = ((v330 ^ 0xA32F06F) - 2098388007) ^ ((v330 ^ LODWORD(STACK[0x26CC])) + 188732775) ^ ((v330 ^ 0x3E6B3E2)
                                                                                            - 1959174058);
  v407 = ((v392 ^ 0x5A9C955C) - 1753088697) ^ ((v392 ^ 0x7B78F379) - 1234855068) ^ ((v392 ^ 0x1306F1C0) - 568616485);
  v408 = v399 - v405 - 855042990;
  v409 = (v408 ^ 0x9C2D34ED) & (2 * (v408 & 0xDEA1A4E9)) ^ v408 & 0xDEA1A4E9;
  v410 = ((2 * (v408 ^ 0xAD6C74FD)) ^ LODWORD(STACK[0x26D0])) & (v408 ^ 0xAD6C74FD) ^ (2 * (v408 ^ 0xAD6C74FD)) & 0x73CDD014;
  v411 = (v410 ^ 0x63C9C010) & (4 * v409) ^ v409;
  v412 = ((4 * (v410 ^ 0x10445014)) ^ 0xCF374050) & (v410 ^ 0x10445014) ^ (4 * (v410 ^ 0x10445014)) & 0x73CDD014;
  v413 = v412 ^ 0x30C89004;
  v414 = (v412 ^ 0x43054010) & (16 * v411) ^ v411;
  v415 = ((16 * v413) ^ 0x3CDD0140) & v413 ^ (16 * v413) & 0x73CDD010;
  v416 = v414 ^ 0x73CDD014 ^ (v415 ^ 0x30CD0000) & (v414 << 8);
  v417 = (v416 << 16) & 0x73CD0000 ^ v416 ^ ((v416 << 16) ^ 0x50140000) & (((v415 ^ 0x4300D014) << 8) & 0x73CD0000 ^ 0x320D0000 ^ (((v415 ^ 0x4300D014) << 8) ^ 0xCDD00000) & (v415 ^ 0x4300D014));
  v418 = v404 - v407 + 365805824;
  v419 = (v418 ^ 0x451EF55D) & (2 * (v418 & 0x8558E659)) ^ v418 & 0x8558E659;
  v420 = ((2 * (v418 ^ 0x4FAF39ED)) ^ LODWORD(STACK[0x26D4])) & (v418 ^ 0x4FAF39ED) ^ (2 * (v418 ^ 0x4FAF39ED)) & 0xCAF7DFB4;
  v421 = (v420 ^ 0xE79B20) & (4 * v419) ^ v419;
  v422 = ((4 * (v420 ^ 0x4A104094)) ^ 0x2BDF7ED0) & (v420 ^ 0x4A104094) ^ (4 * (v420 ^ 0x4A104094)) & 0xCAF7DFB4;
  v423 = (v422 ^ 0xAD75E90) & (16 * v421) ^ v421;
  v424 = ((16 * (v422 ^ 0xC0208124)) ^ 0xAF7DFB40) & (v422 ^ 0xC0208124) ^ (16 * (v422 ^ 0xC0208124)) & 0xCAF7DFB0;
  v425 = v423 ^ 0xCAF7DFB4 ^ (v424 ^ 0x8A75DB00) & (v423 << 8);
  v426 = *(_DWORD *)(v60 + 4 * (v401 ^ 0x58FCF0A7));
  v427 = (v425 << 16) & 0x4AF70000 ^ v425 ^ ((v425 << 16) ^ 0x5FB40000) & (((v424 ^ 0x408204B4) << 8) & 0x4AF70000 ^ 0x8200000 ^ (((v424 ^ 0x408204B4) << 8) ^ 0x77DF0000) & (v424 ^ 0x408204B4));
  LODWORD(v387) = __ROR4__(v403 ^ 0xBA4DFBE0, 30);
  v428 = v408 ^ (2 * v417);
  v429 = v406
       - (((v402 ^ LODWORD(STACK[0x26D8])) - 1901422188) ^ ((v402 ^ 0x1F6FC21) - 1505525162) ^ ((v402 ^ 0xA2DD5E9A)
                                                                                              + 90710255))
       + 151828143;
  v430 = (v429 ^ LODWORD(STACK[0x26E0])) & (2 * (v429 & 0xD8E8409D)) ^ v429 & 0xD8E8409D;
  v431 = ((2 * (v429 ^ 0xE61D520C)) ^ 0x7DEA2522) & (v429 ^ 0xE61D520C) ^ (2 * (v429 ^ 0xE61D520C)) & 0x3EF51290;
  v432 = (v431 ^ 0x24F41001) & (4 * v430) ^ v430;
  v433 = ((4 * (v431 ^ 0x2151291)) ^ 0xFBD44A44) & (v431 ^ 0x2151291) ^ (4 * (v431 ^ 0x2151291)) & 0x3EF51290;
  v434 = v433 ^ 0x4211091;
  v435 = (v433 ^ LODWORD(STACK[0x26DC])) & (16 * v432) ^ v432;
  v436 = ((16 * v434) ^ 0xEF512910) & v434 ^ (16 * v434) & 0x3EF51290;
  v437 = ((v435 ^ 0x3EF51291 ^ (v436 ^ 0x2E510000) & (v435 << 8)) << 16) & 0x3EF50000 ^ v435 ^ 0x3EF51291 ^ (v436 ^ 0x2E510000) & (v435 << 8) ^ (((v435 ^ 0x3EF51291 ^ (v436 ^ 0x2E510000) & (v435 << 8)) << 16) ^ 0x12910000) & (((v436 ^ 0x10A41281) << 8) & 0x3EF50000 ^ 0xAE50000 ^ (((v436 ^ 0x10A41281) << 8) ^ 0x75120000) & (v436 ^ 0x10A41281));
  v438 = ((v426 ^ v387 ^ 0xEA1950CB) - 1095279467) ^ ((v426 ^ v387 ^ 0xAF535D26) - 67284614) ^ ((v426 ^ v387 ^ 0xEE1BFE4D)
                                                                                              - 1162481133);
  v439 = (((v331 ^ 0xED678A83) - 1085870740) ^ ((v331 ^ 0xD8945412) - 1967836165) ^ ((v331 ^ 0x7795C2B3) + 632595804))
       - v438
       + 2136857563;
  v440 = (v439 ^ 0x9C867C) & (2 * (v439 & 0xAA9CC760)) ^ v439 & 0xAA9CC760;
  v441 = ((2 * (v439 ^ LODWORD(STACK[0x26E4]))) ^ 0xDC5397B8) & (v439 ^ LODWORD(STACK[0x26E4])) ^ (2
                                                                                                 * (v439 ^ LODWORD(STACK[0x26E4]))) & 0xEE29CBDC;
  v442 = (v441 ^ 0xCC0943C4) & (4 * v440) ^ v440;
  v443 = ((4 * (v441 ^ 0x22284844)) ^ 0xB8A72F70) & (v441 ^ 0x22284844) ^ (4 * (v441 ^ 0x22284844)) & 0xEE29CBDC;
  v444 = (v443 ^ 0xA8210B4C) & (16 * v442) ^ v442;
  v445 = ((16 * (v443 ^ 0x4608C08C)) ^ 0xE29CBDC0) & (v443 ^ 0x4608C08C) ^ (16 * (v443 ^ 0x4608C08C)) & 0xEE29CBD0;
  v446 = v444 ^ 0xEE29CBDC ^ (v445 ^ 0xE2088900) & (v444 << 8);
  v447 = 1316817931 * (v428 ^ 0xD554460D);
  v448 = 1583007659
       * (v439 ^ (2
                * ((v446 << 16) & 0x6E290000 ^ v446 ^ ((v446 << 16) ^ 0x4BDC0000) & (((v445 ^ 0xC21421C) << 8) & 0xEE290000 ^ 0x46200000 ^ (((v445 ^ 0xC21421C) << 8) ^ 0x29CB0000) & (v445 ^ 0xC21421C)))) ^ 0x871253E2);
  v449 = -679640347 * (v429 ^ (2 * v437) ^ 0x7E9750FE);
  v450 = v447 - 106907679 * (v418 ^ (2 * v427) ^ 0x755F9AAA);
  v451 = v448 + v450;
  v452 = v448 ^ v449;
  v453 = v447 - v449 - v451;
  v454 = v450 - v452;
  v455 = v453 ^ v451;
  v456 = ((v453 ^ v451 ^ v454 ^ 0x5CBC9911) - 2004722275) ^ ((v453 ^ v451 ^ v454 ^ 0x983DB11A) + 1275295128) ^ ((v453 ^ v451 ^ v454 ^ 0xC481280B) + 281013383);
  v457 = v456 + v453;
  v458 = ((2 * (v452 - v454 - v457 - 734083954)) & 0x6F7FFB6E) + ((v452 - v454 - v457 - 734083954) ^ 0xB7BFFDB7);
  v459 = v405 - v457;
  v460 = (((v402 ^ LODWORD(STACK[0x26E8])) + 69518641) ^ ((v402 ^ 0x8DCDA19F) + 712564716) ^ ((v402 ^ 0xA4685F87)
                                                                                            + 64823796))
       - v458
       - 262773166;
  v461 = v407 - v456 - 279750216;
  v462 = v438 - v455 + 503168951 + v458;
  v463 = STACK[0x67A0];
  v464 = STACK[0x67B0];
  v465 = STACK[0x67C0];
  v466 = v459 - 340472700;
  v467 = STACK[0x6790];
  v468 = *(_DWORD *)(STACK[0x6790] + 4 * (v459 - 124));
  v469 = ((((v468 & 0x80000 ^ 0xFFFFC9FB) - 677458874) ^ 0x6A196E73) + 935801026) ^ ((((v468 & 0x80000 ^ 0xFFFFC9FB)
                                                                                     - 677458874) ^ 0xEAFD0347)
                                                                                   - 1222418954) ^ ((((v468 & 0x80000 ^ 0xFFFFC9FB) - 677458874) ^ 0x577AFB75)
                                                                                                  + 178562504);
  v470 = v469 - 1291198627;
  v471 = *(_DWORD *)(STACK[0x67B0] + 4 * HIBYTE(v460)) ^ *(_DWORD *)(STACK[0x67A0] + 4 * BYTE1(v461)) ^ *(_DWORD *)(STACK[0x67C0] + 4 * BYTE2(v462));
  v472 = ((v471 & 0x91062C92 ^ 0x1042402) - ((2 * (v471 & 0x91062C92 ^ 0x1042402)) & 0x22000804) + 904971791) ^ 0x20F8C207;
  v473 = ((LODWORD(STACK[0x26EC]) | (2 * (v471 & 0x22810064 ^ 0x64))) - (v471 & 0x22810064 ^ 0x64) + 1886828232) ^ 0x8FC16DB9;
  v474 = ((((2 * v473) | 0x220238CE) - v473 + 1862198169) ^ 0x4C37C759) & ((-193523217
                                                                          - (v472 | 0xF47711EF)
                                                                          + (v472 | 0xB88EE10)) ^ 0xE403DA0D) ^ (((2 * v473) | 0x220238CE) - v473 + 1862198169) & 0x147CC3EA;
  v475 = (v474 ^ 0x430C348) & ((((v471 & 0x4068C108 ^ 0x136021A1) + 0x7FFFFFFF) & 0x4068C128 | v471 & 0xC101201) ^ 0xB231065E) ^ v474 & STACK[0x26F0];
  v476 = ((v475 ^ 0x87235429) - 1180673567) ^ ((v475 ^ 0x67793919) + 1509569745) ^ ((v475 ^ 0x1FB192C7) + 556965647);
  v477 = (v470 ^ 0xC82007AF) & (2 * (v470 & 0xC2B557AF)) ^ v470 & 0xC2B557AF;
  v478 = ((2 * (v470 ^ 0x4C4028FB)) ^ 0x1DEAFEA8) & (v470 ^ 0x4C4028FB) ^ (2 * (v470 ^ 0x4C4028FB)) & 0x8EF57F54;
  v479 = v478 ^ 0x82150154;
  v480 = (v478 ^ 0x8CE07E00) & (4 * v477) ^ v477;
  v481 = ((4 * v479) ^ 0x3BD5FD50) & v479 ^ (4 * v479) & 0x8EF57F54;
  v482 = v480 ^ 0x8EF57F54 ^ (v481 ^ 0xAD57D50) & (16 * v480);
  v483 = ((16 * (v481 ^ 0x84200204)) ^ 0xEF57F540) & (v481 ^ 0x84200204) ^ (16 * (v481 ^ 0x84200204)) & 0x8EF57F50;
  v484 = v483 & 0xFD076060 ^ v482 ^ (v483 ^ 0x8E557554) & ((v482 << 8) ^ 0x8783460);
  v485 = ((v483 << 8) ^ 0xA8722060) & (v483 ^ 0x8E557554) ^ v483 & 0xFD076060;
  v486 = (v469 - 1291198627) ^ (2
                              * (v485 & 0x7D076060 ^ v484 ^ ((v484 << 16) ^ 0xE2136061) & (v485 ^ 0x2F00000) ^ ((v484 << 16) ^ 0xE2136061) & 0xEF56040));
  v487 = -947162811 - v469;
  if (((v486 ^ 0xDF5FA907) & (v471 ^ 0x73A6B9CD) ^ v486 & 0x455B41E2) == 0x455B0102)
    v487 = v470;
  v488 = ((2 * (v468 & 0xFFF7FFFF ^ 0xD1F2A981)) & 0x55A0EBAA) - (v468 & 0xFFF7FFFF ^ 0xD1F2A981);
  v489 = v476 + 2147293827 + v487;
  v490 = (v489 ^ 0x856F6AE8) & (2 * (v489 & 0x814F4AED)) ^ v489 & 0x814F4AED;
  v491 = ((2 * (v489 ^ 0x87757A60)) ^ 0xC74611A) & (v489 ^ 0x87757A60) ^ (2 * (v489 ^ 0x87757A60)) & 0x63A308C;
  v492 = v491 ^ 0x20A1085;
  v493 = (v491 ^ 0x4302009) & (4 * v490) ^ v490;
  v494 = ((4 * v492) ^ 0x18E8C234) & v492 ^ (4 * v492) & 0x63A308C;
  v495 = v493 ^ 0x63A308D ^ (v494 ^ 0x280009) & (16 * v493);
  v496 = (16 * (v494 ^ 0x6123089)) & 0x63A3080 ^ 0x418300D ^ ((16 * (v494 ^ 0x6123089)) ^ 0x63A308D0) & (v494 ^ 0x6123089);
  v497 = (v495 << 8) & 0x63A3000 ^ v495 ^ ((v495 << 8) ^ 0x3A308D00) & v496;
  v498 = (v497 << 16) & 0x63A0000 ^ v497 ^ ((v497 << 16) ^ 0x308D0000) & ((v496 << 8) & 0x63A0000 ^ 0x40A0000 ^ ((v496 << 8) ^ 0x3A300000) & v496);
  v499 = STACK[0x69E0];
  v500 = LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6960]);
  v501 = v500 ^ *(_DWORD *)(v464 + 4 * HIBYTE(v461)) ^ *(_DWORD *)(STACK[0x67C0] + 4 * BYTE2(v466)) ^ *(_DWORD *)(v467 + 4 * v462) ^ *(_DWORD *)(v463 + 4 * BYTE1(v460));
  v502 = LODWORD(STACK[0x68E0]) ^ (v488 + 1429178922) ^ v489 ^ (2 * v498) ^ 0x4E5C1825;
  v503 = (v502 & 0x122F7800 ^ LODWORD(STACK[0x67D0]) ^ (v502 ^ LODWORD(STACK[0x6900])) & 0xEDD087FF)
       + 2 * ((v502 ^ LODWORD(STACK[0x6900])) & 0xEDD087FF & STACK[0x67D0]);
  v504 = *(_DWORD *)(v465 + 4 * BYTE2(v461));
  v505 = v500 ^ *(_DWORD *)(v464 + 4 * HIBYTE(v466)) ^ *(_DWORD *)(v467 + 4 * v461) ^ *(_DWORD *)(v463 + 4 * BYTE1(v462)) ^ *(_DWORD *)(v465 + 4 * BYTE2(v460));
  v506 = v500 ^ v504 ^ *(_DWORD *)(v464 + 4 * HIBYTE(v462)) ^ *(_DWORD *)(v467 + 4 * v460) ^ *(_DWORD *)(v463 + 4 * BYTE1(v466));
  v507 = STACK[0x6980];
  v508 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x6980]) ^ 0x2C6B)) - 4;
  v509 = v508[BYTE2(v506) ^ 0xD4];
  v510 = v509 & 0x7F;
  v511 = ((v509 >> 7) | (2 * v509)) ^ 0xFFFFFFD4;
  v512 = v509 & 0xD;
  if ((v511 & 4 & v510) != 0)
    v513 = -(v511 & 4);
  else
    LOBYTE(v513) = v511 & 4;
  v514 = v513 + v512;
  v515 = LODWORD(STACK[0x6A30]) ^ 0x13C8D519;
  v516 = STACK[0x6AC0];
  v517 = STACK[0x6AA0];
  *(_BYTE *)(v517 + STACK[0x69D0]) = v514 ^ v511 & 0xFB;
  v518 = (char *)*(&off_1015B46D0 + (v507 ^ 0x28EF)) - 12;
  *(_BYTE *)(v517 + STACK[0x69A0]) = v518[BYTE1(v506) ^ 0x74] ^ 0x98;
  *(_BYTE *)(v517 + ((v515 + (v516 & 0xF3E605F1 ^ 0xE02600E6) - (v515 & 0xF3E605F1)) ^ 0x27856C09)) = v518[BYTE1(v505) ^ 0xFELL] ^ 0x4E;
  v519 = v508[BYTE2(v505) ^ 0xDALL];
  *(_BYTE *)(v517 + STACK[0x69C0]) = ((v519 >> 7) | (2 * v519)) ^ v519 & 0xD ^ 0x49;
  v520 = (char *)*(&off_1015B46D0 + (v507 ^ 0x2BCB)) - 4;
  LOBYTE(v519) = v520[v506 ^ 0xA1];
  *(_BYTE *)(v517 + STACK[0x6970]) = (((v519 ^ 0x40) >> 5) ^ ((v519 ^ 0x40) >> 1))
                                   + (v519 ^ 0xC8)
                                   - 2
                                   * ((((v519 ^ 0x40) >> 5) ^ ((v519 ^ 0x40) >> 1)) & (v519 ^ 0xC8));
  v521 = (char *)*(&off_1015B46D0 + v507 - 9179) - 4;
  LOBYTE(v519) = v521[((((HIBYTE(v506) ^ 0xFFFFFFCF) + (HIBYTE(v506) ^ 0x37) + 1) ^ 0xFFFFFFFE) + (HIBYTE(v506) ^ 0x37)) ^ 0x46];
  v522 = 880305433
       - (((LODWORD(STACK[0x6930]) ^ 0xD723ABBC)
         + (v516 & 0xEDF75730 ^ LODWORD(STACK[0x26F4]))
         - ((LODWORD(STACK[0x6930]) ^ 0xD723ABBC) & 0xEDF75730)) ^ 0x50C4FFC6 | 0x34786519)
       + (((LODWORD(STACK[0x6930]) ^ 0xD723ABBC)
         + (v516 & 0xEDF75730 ^ LODWORD(STACK[0x26F4]))
         - ((LODWORD(STACK[0x6930]) ^ 0xD723ABBC) & 0xEDF75730)) ^ 0x50C4FFC6 | 0xCB879AE6);
  v523 = v503 ^ v499;
  *(_BYTE *)(v517
           + (((LODWORD(STACK[0x6920]) ^ 0x9AF7283)
             - ((2 * (LODWORD(STACK[0x6920]) ^ 0x9AF7283)) & 0x6FD1F404u)
             + 938015242) ^ 0xF9EC3466)) = (-95 * v519) ^ (66 * v519 - 114) ^ 0x6A;
  *(_BYTE *)(v517 + (v522 ^ 0x663C2549)) = v518[BYTE1(v501) ^ 0x56] ^ 0xC3;
  v524 = v508[((v503 ^ v499) >> 16) ^ 0xA0];
  v525 = (((2 * (v516 & 0xFFFFFFF6 ^ 0xD1D73D24)) | 0xC2CC38A4) - (v516 & 0xFFFFFFF6 ^ 0xD1D73D24) - 1634081874) ^ 0x28652442;
  *(_BYTE *)(v517 + ((1518706198 - (v525 | 0x5A859E16) + (v525 | 0xA57A61E9)) ^ 0xFA05D832)) = ((v524 >> 7) | (2 * v524)) ^ v524 & 0xD ^ 0x31;
  *(_BYTE *)(v517 + STACK[0x6A50]) = v520[v523 ^ 0x71] ^ ((v520[v523 ^ 0x71] ^ 0x40) >> 5) ^ ((v520[v523 ^ 0x71] ^ 0x40) >> 1) ^ 0xF9;
  *(_BYTE *)(v517 + STACK[0x6990]) = v518[BYTE1(v523) ^ 0x7ALL] ^ 0x12;
  LOBYTE(v524) = v521[HIBYTE(v523) ^ 0x46];
  *(_BYTE *)(v517 + STACK[0x69B0]) = (-95 * v524) ^ (66 * v524 - 114) ^ 0x26;
  LOBYTE(v524) = v521[HIBYTE(v505) ^ 0xD3];
  *(_BYTE *)(v517 + STACK[0x6A90]) = (-95 * v524) ^ (66 * v524 - 114) ^ 0x99;
  LOBYTE(v524) = v521[HIBYTE(v501) ^ 0x25];
  *(_BYTE *)(v517 + STACK[0x6950]) = (-95 * v524) ^ (66 * v524 - 114) ^ 0xB1;
  *(_BYTE *)(v517
           + ((-534742108
             - (LODWORD(STACK[0x6A80]) ^ 0x444811B8 | 0xE0207BA4)
             + (LODWORD(STACK[0x6A80]) ^ 0x444811B8 | 0x1FDF845B)) ^ 0x9C3C2904)) = v520[v505 ^ 6] ^ ((v520[v505 ^ 6] ^ 0x40) >> 5) ^ ((v520[v505 ^ 6] ^ 0x40) >> 1) ^ 0x17;
  v526 = v501 ^ 0x15;
  v527 = (v501 ^ 0xFFFFFFD0) + v526 + 1;
  if ((v527 & 0x20) != 0)
    v528 = -32;
  else
    v528 = 32;
  v529 = v528 + v527;
  v530 = (((2 * (LODWORD(STACK[0x6940]) ^ 0x7F6211DA)) & 0x5854AE4) - (LODWORD(STACK[0x6940]) ^ 0x7F6211DA) + 2101172877) ^ 0x7E2D0A0F;
  v531 = v520[((v529 ^ 0xFFFFFFDC) + v526) ^ 0x37];
  *(_BYTE *)(v517 + STACK[0x6A60]) = v531 ^ ((v531 ^ 0x40) >> 5) ^ ((v531 ^ 0x40) >> 1) ^ 0xF6;
  v532 = v508[BYTE2(v501) ^ 0x6DLL];
  v533 = (((v516 ^ 0x1102F118) - 285405464) ^ ((v516 ^ 0x461DA157) - 1176346967) ^ ((v516 ^ 0x90B4ECA8) + 1867191128))
       + 642439838;
  v534 = ((2 * (v533 & 0xA160E259)) & 0x428104A2 | v533 & 0xA160E259) ^ (2 * (v533 & 0xA160E259)) & (v533 ^ 0x6FD1F6BA);
  v535 = ((2 * (v533 ^ 0x6FD1F6BA)) ^ 0x9D6229C6) & (v533 ^ 0x6FD1F6BA) ^ (2 * (v533 ^ 0x6FD1F6BA)) & 0xCEB114E2;
  v536 = v535 ^ 0x42911421;
  v537 = (v535 ^ 0xCC1004C1) & (4 * v534) ^ v534;
  v538 = ((4 * v536) ^ 0x3AC4538C) & v536 ^ (4 * v536) & 0xCEB114E0;
  v539 = v537 ^ 0xCEB114E3 ^ (v538 ^ 0xA801083) & (16 * v537);
  v540 = (16 * (v538 ^ 0xC4310463)) & 0xCEB114E0 ^ 0x4A010C3 ^ ((16 * (v538 ^ 0xC4310463)) ^ 0xEB114E30) & (v538 ^ 0xC4310463);
  v541 = (v539 << 8) & 0xCEB11400 ^ v539 ^ ((v539 << 8) ^ 0xB114E300) & v540;
  v542 = v533 ^ (2
               * ((v541 << 16) & 0x4EB10000 ^ v541 ^ ((v541 << 16) ^ 0x14E30000) & ((v540 << 8) & 0x4EB10000 ^ 0x4EA10000 ^ ((v540 << 8) ^ 0x31140000) & v540)));
  *(_BYTE *)(v517 + ((((2 * v530) & 0xF998981C) - v530 - 2093763599) ^ 0x38EA4E4ELL)) = v532 & 9 ^ (((v532 >> 7) | (2 * v532)) ^ 0xB2) & 0x8B | v532 & 4 ^ (((v532 >> 7) | (2 * v532)) ^ 0xB2) & 0x74;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((27
                                          * ((((v542 ^ 0xDBD347E7) - 689451167) ^ ((v542 ^ 0x4E8718D7) + 1135841361) ^ ((v542 ^ 0xA03494AF) - 1392501719))
                                           - 945046297 > 0x3F)) ^ v507))
                            - 12))();
}

uint64_t sub_100D0F7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6840])))(a1, a2, a3, 31325109, a5, a6, a7, 1287868012);
}

uint64_t sub_100D0F830()
{
  int v0;
  unint64_t v1;
  uint64_t (*v2)(void);

  v0 = STACK[0x6770];
  v1 = (LODWORD(STACK[0x6770]) - 1629646156) & 0xF36A3EFF;
  LODWORD(STACK[0xD96C]) = 0;
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v1 ^ 0x92480A77));
  STACK[0x6AC0] = v1;
  return v2();
}

uint64_t sub_100D0F88C()
{
  unint64_t v0;
  unint64_t v1;
  void (*v2)(unint64_t);
  uint64_t v3;

  v1 = STACK[0x6AC0];
  v2 = (void (*)(unint64_t))STACK[0x5A40];
  ((void (*)(unint64_t))STACK[0x5A40])(STACK[0xD920]);
  v2(STACK[0xD958] - 0x56641C0D7A8E5919);
  v2(v0);
  v2(STACK[0xD938]);
  v2(STACK[0xD950]);
  v2(STACK[0xD930]);
  v2(STACK[0xD960]);
  v3 = ((uint64_t (*)(unint64_t))v2)(STACK[0xD928]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * (int)(v1 ^ 0x924803E4 ^ (5137 * ((_DWORD)v1 != -1989575011))))
                                          - 4))(v3);
}

uint64_t sub_100D0F994()
{
  uint64_t v0;
  int v1;

  STACK[0xD1A8] = v0 - 32;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v1)
                                                                                                - 12))(3613388764, 4294953635, 22275, 14002, 4294967243, STACK[0x60B8]);
}

uint64_t sub_100D0FA08(int a1, int a2, int a3, int a4, char a5, _DWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  unsigned int v12;

  v12 = ((*(_DWORD *)(*v10 + (*a6 & a1)) ^ (v11 + v6)) & 0x7FFFFFFF) * v8;
  *(_BYTE *)(v11 + v6) ^= *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v9 + a2))
                                   + (v6 & (v9 ^ a4) | (16 * (((v12 ^ HIWORD(v12)) * v8) >> 24)))
                                   - 12) ^ ((v12 ^ BYTE2(v12)) * a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 == 63) * a3) ^ v9)) - 12))();
}

uint64_t sub_100D0FA88()
{
  STACK[0xC768] -= 32;
  return ((uint64_t (*)(void))STACK[0xAF18])();
}

uint64_t sub_100D0FAEC()
{
  int v0;
  int v1;

  v1 = STACK[0x6508] + 13388;
  LODWORD(STACK[0x7DF4]) = v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((8167 * (v0 == (LODWORD(STACK[0x421C]) ^ 0x8D2DADFC))) ^ v1)))();
}

uint64_t sub_100D0FB4C()
{
  int v0;
  uint64_t v1;

  v0 = STACK[0x421C];
  v1 = ((uint64_t (*)(uint64_t))STACK[0x5510])(101);
  STACK[0x8B88] = v1 + 0x3032385379A144E6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v1 != 0) * (((v0 - 1744894492) & 0x6800D0F6) + 21419)) ^ v0))
                            - 8))();
}

uint64_t sub_100D0FBE4()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6AD8];
  STACK[0x8CA0] = *(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x2A2F ^ (v0 + 13940))) - 8))();
}

uint64_t sub_100D0FC20()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2031 * (STACK[0x8FC0] != 0)) ^ (v0 + 20859))) - 4))();
}

uint64_t sub_100D0FC54()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4))(v1);
}

uint64_t sub_100D0FC70()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((28654 * (STACK[0xA240] != 0)) ^ (v0 + 12011))))();
}

uint64_t sub_100D0FCA4()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * v0))(v1);
}

uint64_t sub_100D0FCBC()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((77
                                          * (((v0 + 37) ^ (STACK[0x8B88] == 0x3032385379A144E6)) & 1)) ^ (v0 + 10533)))
                            - 8))();
}

uint64_t sub_100D0FD10()
{
  int v0;
  uint64_t v1;

  v1 = sub_10009A6DC();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - (v0 - 10533) + 4206))(v1);
}

uint64_t sub_100D0FD58()
{
  STACK[0xC768] -= 432;
  return ((uint64_t (*)(void))STACK[0x72E0])();
}

uint64_t sub_100D0FD80()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (LODWORD(STACK[0x395C]) ^ (11844 * (LODWORD(STACK[0x3960]) < 0x51C68B76))))
                            - (STACK[0x3964] & 0x15A0F7FC ^ 0x57F4)))();
}

uint64_t sub_100D0FDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v7 + 16290)) - 12))(a1, a2, a3, a4, a5, a6, a7, LODWORD(STACK[0xE508]));
}

uint64_t sub_100D0FE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 + 3394)) - 12))(STACK[0xA388], a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100D10090()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 10106)) - 4))();
}

uint64_t sub_100D100C0@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x6AB0]) = v2[388];
  v3 = v2[396];
  v4 = v2[397];
  v5 = v2[399];
  STACK[0x6AC0] = v2[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(a1 + 1261)) - (a1 ^ 0x1072)))(v1, v3, v4, v5, STACK[0xE4E8], v2[407], STACK[0xE4F8], v2[409]);
}

uint64_t sub_100D1015C()
{
  unsigned int v0;

  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)((27477 * (v0 < 0x3D01DDC0)) ^ (v0 + 1021798442))))();
}

uint64_t sub_100D101B8@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x6AB0]) = v1[388];
  v2 = v1[395];
  v3 = v1[396];
  v4 = v1[397];
  v5 = v1[399];
  STACK[0x6AC0] = v1[400];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 1261)) - ((a1 + 1632) ^ 0x16D2)))(v2, v3, v4, v5, STACK[0xE4E8], v1[407], STACK[0xE4F8], v1[409]);
}

uint64_t sub_100D10250()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 + 6391)) - 4))();
}

uint64_t sub_100D1027C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v4 - 18543)) - 12))(a1, a2, a3, a4, &off_1015B46D0, 2356345, 1727129952, 3913170431);
}

uint64_t sub_100D1034C()
{
  BOOL v0;
  int v1;
  uint64_t (*v2)(void);
  unint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)(STACK[0x9FC8] - 0x55058F428EADA764))
    v0 = LODWORD(STACK[0xCEA4]) == 2;
  else
    v0 = 0;
  v1 = !v0;
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((239 * v1) ^ LODWORD(STACK[0x2784]))) - 8);
  v3 = STACK[0x6508];
  v4 = (uint64_t)*(&off_1015B46D0 + (int)(STACK[0x6508] ^ 0x1872));
  STACK[0x6940] = (unint64_t)*(&off_1015B46D0 + SLODWORD(STACK[0x2780])) - 12;
  STACK[0x6900] = (unint64_t)*(&off_1015B46D0 + (int)v3 - 3626) - 8;
  STACK[0x6AA0] = v4 - 12;
  STACK[0x6A40] = v4 + 25;
  return v2();
}

uint64_t sub_100D103FC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = STACK[0x81E0];
  v2 = STACK[0x1F68];
  v3 = STACK[0x6AD8];
  STACK[0xEE18] = *(_QWORD *)(STACK[0x6AD8] + 8 * STACK[0x1F60]) - 4;
  LODWORD(STACK[0xEE20]) = STACK[0x1F5C];
  LODWORD(STACK[0xEE50]) = v2;
  STACK[0xEE30] = 0xC7347E2AAE803569;
  STACK[0xEE58] = v1;
  LODWORD(STACK[0xEE60]) = v2 ^ 0x4C;
  LODWORD(STACK[0xEE64]) = 0;
  LODWORD(STACK[0x1D350]) = -299994601
                          - 1705718857 * ((((v0 - 240) | 0xB9D932C2) - ((v0 - 240) & 0xB9D932C2)) ^ 0x844BED9B)
                          + STACK[0x6508];
  STACK[0x1D358] = (unint64_t)&STACK[0xEE18];
  v4 = ((uint64_t (*)(uint64_t))STACK[0x59F0])(v0 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * SLODWORD(STACK[0x1D354])) - 8))(v4);
}

uint64_t sub_100D104D4()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (int)(((LODWORD(STACK[0xCEA4]) == 1)
                                               * (((STACK[0x6508] - 632) ^ 0xFFFFFFD2) + STACK[0x6508] - 632)) ^ (STACK[0x6508] + 1547)))
                            - 12))();
}

uint64_t sub_100D10518()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  v2 = STACK[0x6E08];
  v3 = STACK[0x8B88];
  v4 = ((LODWORD(STACK[0x8434]) ^ 0xA0891C6E) + 1601627026) ^ ((LODWORD(STACK[0x8434]) ^ 0x8EA7649C) + 1901632356) ^ ((LODWORD(STACK[0x8434]) ^ 0xA303EC95) + 1560023915);
  v5 = 1199091809 * ((2 * ((v1 - 240) & 0xDFE3568) - (v1 - 240) + 1912720020) ^ 0xDD766424);
  STACK[0x1D380] = STACK[0xBAE0];
  STACK[0x1D370] = STACK[0x6AA0];
  LODWORD(STACK[0x1D358]) = v0 - v5 - 960088927;
  LODWORD(STACK[0x1D388]) = v5 + 614354283;
  LODWORD(STACK[0x1D35C]) = v5 + 2036594706;
  LODWORD(STACK[0x1D390]) = ((v0 + 1496188792) & 0xA6D1FAFF ^ 0x9738B0C6) - v5 + v4;
  LODWORD(STACK[0x1D38C]) = 1321482794 - v5;
  STACK[0x1D360] = v2;
  LODWORD(STACK[0x1D394]) = v5 ^ 0x7E51276B;
  STACK[0x1D350] = STACK[0x6A40];
  STACK[0x1D378] = v3;
  v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_1015B46D0 + v0 - 1741) - 4))(v1 - 240);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 8))(v6);
}

uint64_t sub_100D106B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  BOOL v11;
  char v13;
  uint64_t (*v14)(char *, char *, char *, char *, char *, char *);

  STACK[0x68F0] = v1;
  v3 = (STACK[0x6508] - 3062) | 0x1229;
  v4 = ((STACK[0x6508] + 10) | 0x29) - 51;
  v5 = STACK[0x8820];
  LODWORD(STACK[0x7D54]) = 1038978960;
  v6 = STACK[0xBAE0];
  *(_QWORD *)(v5 + 184) = STACK[0xBAE0];
  *(_DWORD *)(v5 + 192) = 16;
  v7 = STACK[0x6E08];
  *(_QWORD *)(v5 + 200) = STACK[0x6E08];
  *(_DWORD *)(v5 + 208) = 16;
  *(_QWORD *)(v5 + 216) = v0;
  *(_DWORD *)(v5 + 224) = 41;
  *(_QWORD *)(v5 + 232) = v2;
  *(_DWORD *)(v5 + 240) = 37;
  v8 = STACK[0x8B88];
  *(_QWORD *)(v5 + 248) = STACK[0x8B88];
  *(_DWORD *)(v5 + 256) = 16;
  v9 = STACK[0xC768];
  v10 = (char *)&STACK[0x10000] + STACK[0xC768];
  STACK[0x9480] = (unint64_t)v10;
  STACK[0x69C0] = (unint64_t)(v10 + 48);
  STACK[0x69B0] = (unint64_t)(v10 + 320);
  STACK[0x69A0] = (unint64_t)(v10 + 1408);
  STACK[0x6A10] = (unint64_t)(v10 + 3824);
  STACK[0x6990] = (unint64_t)(v10 + 4096);
  STACK[0x6A00] = (unint64_t)(v10 + 4368);
  STACK[0x69E0] = (unint64_t)(v10 + 4640);
  STACK[0x6980] = (unint64_t)(v10 + 5968);
  v11 = v8 == 0x3032385379A144E6 || v6 == 0;
  STACK[0x69D0] = v7;
  v13 = v11 || v7 == 0;
  STACK[0xC768] = v9 + 11552;
  v14 = (uint64_t (*)(char *, char *, char *, char *, char *, char *))(*(_QWORD *)(STACK[0x6AD8]
                                                                                           + 8
                                                                                           * ((2631
                                                                                             * (((v4 + 1) ^ v13) & 1)) ^ v3))
                                                                               - 12);
  STACK[0x68E0] = (unint64_t)(v10 + 10768);
  STACK[0x6A80] = 83;
  STACK[0x6A60] = 221;
  STACK[0x6A70] = 185;
  STACK[0x6A50] = 215;
  return v14(v10 + 1680, v10 + 4912, v10 + 8336, v10 + 7280, v10 + 9440, v10 + 1136);
}

uint64_t sub_100D108B0@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;

  STACK[0x6A80] = *(unsigned __int8 *)(v2 + a1) ^ STACK[0x6A80];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((31274 * ((a1 | 1) < v1 - 8820)) ^ v1)) - 12))();
}

uint64_t sub_100D10900()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  STACK[0x6A70] ^= *(unsigned __int8 *)(v4 + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((v0 | 2u) < (v2 ^ 0x42D2u)) * v5) ^ v1)) - 12))();
}

uint64_t sub_100D1093C@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x6A60] ^= *(unsigned __int8 *)(v3 + v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((2730 * ((((v1 - 2645) | 0x4AA) ^ 0x1CED | a1) < 0x25)) ^ v1))
                            - 12))();
}

uint64_t sub_100D10994@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x6A50] ^= *(unsigned __int8 *)(v3 + v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v1 ^ (15991 * (a1 > 0x20)))) - 12))();
}

uint64_t sub_100D109EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  STACK[0x6960] = v18;
  STACK[0x6860] = v17;
  STACK[0x6870] = v16;
  STACK[0x6880] = v15;
  STACK[0x6890] = v14;
  STACK[0x68A0] = v13;
  STACK[0x68B0] = v12;
  STACK[0x68C0] = v11;
  STACK[0x6910] = a8;
  STACK[0x6AB0] = a5;
  STACK[0x61A8] = a4;
  STACK[0x5F08] = a3;
  STACK[0x6AC0] = a2;
  STACK[0x6A90] = a1;
  STACK[0x61A0] = v10;
  STACK[0x5DF8] = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v8))(142, 35, 65, 108);
}

uint64_t sub_100D10A64@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD))(STACK[0x6AD8]
                                           + 8 * ((((a2 + 1) < 0x29) * ((v2 + 2122) ^ 0x2DD1)) ^ v2)))(*(unsigned __int8 *)(v3 + a2) ^ a1);
}

uint64_t sub_100D10A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x6AD8]
                                                                                + 8
                                                                                * (((v6 ^ 0x462D)
                                                                                  * ((a5 + 2) < 0x29)) ^ v5)))(a1, a2, a3, *(unsigned __int8 *)(v7 + a5 + 1) ^ a4);
}

uint64_t sub_100D10ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(STACK[0x6AD8]
                                                                       + 8
                                                                       * ((((v4 + 2122) ^ v6)
                                                                         * ((a4 + 3) < 0x29)) ^ v4)))(a1, a2, *(unsigned __int8 *)(v5 + 2) ^ a3);
}

uint64_t sub_100D10AFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, unint64_t))(STACK[0x6AD8]
                                                              + 8 * (((v4 ^ 0x4A41) * (a3 < 0x25)) ^ v3)))(a1, *(unsigned __int8 *)(v5 + a3 + 3) ^ a2);
}

uint64_t sub_100D10B30(int a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  int v4;

  STACK[0x6970] = a4;
  STACK[0x69F0] = a3;
  STACK[0x6A20] = a2;
  LODWORD(STACK[0x6A30]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v4) - 8))();
}

uint64_t sub_100D10BC4()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((234 * (v0 < 0xC)) ^ v1)) - 8))();
}

uint64_t sub_100D10DB4(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unsigned int a8)
{
  STACK[0x67C0] = a7;
  STACK[0x6920] = a3;
  STACK[0x6930] = a1;
  STACK[0x6950] = a2;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - (((a8 - 4921) | 0x1305) ^ 0x131BLL)))(0);
}

uint64_t sub_100D10E28(unint64_t a1, uint64_t a2, int a3)
{
  int v3;
  BOOL v4;
  unint64_t v5;
  int v6;
  uint64_t (*v7)(unint64_t, uint64_t);

  v4 = a1 >= 0xC;
  v5 = a1 + 4;
  v6 = !v4;
  v7 = (uint64_t (*)(unint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((v6 * v3) ^ a3)) - 12);
  LODWORD(STACK[0x6308]) = 24;
  LODWORD(STACK[0x6318]) = 189;
  LODWORD(STACK[0x6310]) = 230;
  return v7(v5, 158);
}

uint64_t sub_100D1105C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8;

  LODWORD(STACK[0x6318]) ^= *(unsigned __int8 *)(STACK[0x6AA0] + a8);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                                       + 8 * (int)((29167 * ((a8 | 1) < 0x25)) ^ v8))
                                                           - (v8 ^ 0x2BC7)))(a1, a2, a8);
}

uint64_t sub_100D110BC@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;

  LODWORD(STACK[0x6310]) ^= *(unsigned __int8 *)(STACK[0x6AA0] + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 ^ (31872 * ((a1 | 2u) < 0x25))))
                            - ((((v2 + 499258425) & 0xE23DE7DF) + 1223) ^ ((v2 + 196) | 0x20u))))();
}

uint64_t sub_100D11138@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  unsigned int v2;

  LODWORD(STACK[0x6308]) ^= *(unsigned __int8 *)(STACK[0x6AA0] + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v2 ^ (3642 * ((a1 | 3u) < 0x25))))
                            - (v2 ^ 0x27D0)))();
}

uint64_t sub_100D11198(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((4867 * ((a3 | 4u) < (v3 ^ 0x27F9u))) ^ v3)) - 12))();
}

uint64_t sub_100D111D8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((27367 * ((a3 | 5u) < ((v3 + 1227) ^ 0x2C82u))) ^ v3))
                            - ((5 * (v3 ^ 0x2F61u)) ^ 0x2BBDLL)))();
}

uint64_t sub_100D11234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * ((114 * (((-134227940 - a8 + 2551 * (v8 ^ 0x2BB5)) & (a8 - 31)) >= 0)) ^ v8))
                            - ((v8 - 781) | 0x403u)
                            + 11427))();
}

uint64_t sub_100D112A0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, unsigned int a4@<W7>, int a5@<W8>)
{
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                              + 8
                                                              * (((((a5 - 2005) | 0xCA0) ^ 0x2C84) * ((a3 | 7u) < 0x25)) ^ a5))
                                                  - 12))(a1, *(unsigned __int8 *)(STACK[0x6AA0] + ((1629 * (a5 ^ 0x27DF) - 4881) | a4)) ^ a2);
}

uint64_t sub_100D11308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  BOOL v9;
  uint64_t v10;
  char v11;

  v9 = a8 >= 0x1D;
  v10 = a8 - 11423 + 1633 * (v8 ^ 0x1310);
  v11 = !v9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((13515 * ((v11 ^ (v8 - 84)) & 1)) ^ v8)) - 12))(a1, a2, a3, a4, a5, a6, a7, v10);
}

uint64_t sub_100D11364(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t (*v7)(uint64_t);

  LODWORD(STACK[0x5DC0]) = v3;
  LODWORD(STACK[0x5DC8]) = v6;
  LODWORD(STACK[0x5DD0]) = v5;
  LODWORD(STACK[0x5DD8]) = v4;
  LODWORD(STACK[0x5DE0]) = a2;
  v7 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - ((v2 - 4445) ^ 0x1B4ELL));
  LODWORD(STACK[0x5F20]) = 80;
  LODWORD(STACK[0x5F28]) = 181;
  return v7(205);
}

uint64_t sub_100D11414(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((v3 + 1) < 0x29) * ((a3 ^ 0x4E6F) + 10898)) ^ a3))
                            - 4))();
}

uint64_t sub_100D11454@<X0>(unsigned int a1@<W0>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6AD8]
                                                     + 8
                                                     * ((((a2 - 203277651) & 0xC1DFF2D ^ 0x6895)
                                                       * ((v3 + 2) < 0x29)) ^ a2))
                                         - 4))(*(unsigned __int8 *)(a3 - 5) ^ a1);
}

uint64_t sub_100D114A0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a3 ^ (19197 * ((v3 + 3) < 0x29))))
                            - ((a3 + v4) ^ 0x5521)))();
}

uint64_t sub_100D114E0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v3 + 4 < ((a3 - 1499970979) & STACK[0x279C] ^ 0x550Cu)) * v4) ^ a3))
                            - ((a3 + 1399956595) & 0xAC8E5B6E ^ 0x1B28)))();
}

uint64_t sub_100D11548@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  LODWORD(STACK[0x5F28]) ^= *(unsigned __int8 *)(v3 + v2 - 2);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8]
                                                      + 8
                                                      * ((102
                                                        * ((((a2 - 228) ^ ((v2 + 5) < 0x29)) & 1) == 0)) ^ a2))
                                          - 4))(a1);
}

uint64_t sub_100D115C4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  LODWORD(STACK[0x5F20]) ^= *(unsigned __int8 *)(v0 - 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8
                                        * (((((v1 | 0x102) + v3) ^ 0x6AA2) * ((v2 + 6) < 0x29)) ^ (v1 | 0x102)))
                            - 4))();
}

uint64_t sub_100D1161C(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((9944 * ((((a3 - 5673) | v4) ^ 0x5522 | v3) < 0x29)) ^ a3))
                            - 4))();
}

uint64_t sub_100D11660(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14317 * (v3 < 71 * (a3 ^ 0x1A79u) - 21764)) ^ a3))
                            - 4))();
}

uint64_t sub_100D116A8(int a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  unsigned __int8 v13;
  int v14;
  unsigned __int8 v15;
  int v16;
  int v17;
  unsigned __int8 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unsigned __int8 *v90;
  int v91;
  unint64_t v92;
  _QWORD *v93;

  LODWORD(STACK[0x5D60]) = v14;
  LODWORD(STACK[0x5D70]) = a1;
  LODWORD(STACK[0x5D80]) = v17;
  LODWORD(STACK[0x5D88]) = v11;
  LODWORD(STACK[0x5D98]) = v16;
  LODWORD(STACK[0x5DA0]) = a5;
  v19 = (STACK[0x6970] << ((a8 - 15) ^ 0x3Eu)) | ((STACK[0x6A80] | (STACK[0x6A70] << 8))
                                                + (STACK[0x6A50] << 24)
                                                + (STACK[0x6A60] << 16)
                                                + ((unint64_t)LODWORD(STACK[0x6A30]) << 32));
  v20 = (STACK[0x69F0] << 48) + (STACK[0x6A20] << 56) + v19;
  v21 = a4 | (unint64_t)(unsigned __int16)(v13 << 8) | ((unint64_t)v15 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v8 << 24) | ((unint64_t)v10 << 32) | ((unint64_t)v18 << 40);
  v22 = v21 + ((unint64_t)v9 << 48) + (v12 << 56);
  v23 = v22 ^ (v22 >> 26) ^ v20 ^ (v19 << 23) ^ ((v20 ^ (v19 << 23)) >> 17);
  v24 = v23 ^ (v23 << 23);
  v25 = v22 ^ (v21 << 23) ^ ((v22 ^ (v21 << 23)) >> 17) ^ v23 ^ (v23 >> 26);
  v26 = v24 ^ (v24 >> 17) ^ v25 ^ (v25 >> 26);
  v27 = v25 ^ (v25 << 23) ^ ((v25 ^ (v25 << 23)) >> 17) ^ v26 ^ (v26 >> 26);
  v28 = v27 ^ (v27 << 23);
  v29 = v26 ^ (v26 << 23) ^ ((v26 ^ (v26 << 23)) >> 17) ^ v27 ^ (v27 >> 26);
  v30 = v29 ^ (v29 << 23);
  v31 = v28 ^ (v28 >> 17) ^ v29 ^ (v29 >> 26);
  v32 = v31 ^ (v31 << 23);
  v33 = v30 ^ (v30 >> 17) ^ v31 ^ (v31 >> 26);
  v34 = v33 ^ (v33 << 23);
  v35 = v32 ^ (v32 >> 17) ^ v33 ^ (v33 >> 26);
  v36 = v34 ^ (v34 >> 17) ^ v35 ^ (v35 >> 26);
  v37 = v35 ^ (v35 << 23) ^ ((v35 ^ (v35 << 23)) >> 17) ^ v36 ^ (v36 >> 26);
  v38 = v36 ^ (v36 << 23) ^ ((v36 ^ (v36 << 23)) >> 17) ^ v37 ^ (v37 >> 26);
  v39 = v37 ^ (v37 << 23) ^ ((v37 ^ (v37 << 23)) >> 17) ^ v38 ^ (v38 >> 26);
  v40 = v38 ^ (v38 << 23) ^ ((v38 ^ (v38 << 23)) >> 17) ^ v39 ^ (v39 >> 26);
  v41 = v39 ^ (v39 << 23) ^ ((v39 ^ (v39 << 23)) >> 17) ^ v40 ^ (v40 >> 26);
  v42 = v41 ^ (v41 << 23);
  v43 = v40 ^ (v40 << 23) ^ ((v40 ^ (v40 << 23)) >> 17) ^ v41 ^ (v41 >> 26);
  v44 = v42 ^ (v42 >> 17) ^ v43 ^ (v43 >> 26);
  STACK[0x6AA0] = v44;
  v45 = v43 ^ (v43 << 23) ^ ((v43 ^ (v43 << 23)) >> 17) ^ v44 ^ (v44 >> 26);
  STACK[0x6A80] = v45;
  v46 = v44 ^ (v44 << 23);
  v47 = v45 ^ (v45 << 23);
  v48 = v46 ^ (v46 >> 17) ^ v45 ^ (v45 >> 26);
  STACK[0x6A70] = v48;
  v49 = v47 ^ (v47 >> 17) ^ v48 ^ (v48 >> 26);
  STACK[0x6A60] = v49;
  v50 = v48 ^ (v48 << 23) ^ ((v48 ^ (v48 << 23)) >> 17) ^ v49 ^ (v49 >> 26);
  STACK[0x6A50] = v50;
  v51 = v49 ^ (v49 << 23) ^ ((v49 ^ (v49 << 23)) >> 17) ^ v50 ^ (v50 >> 26);
  STACK[0x6A40] = v51;
  v52 = v50 ^ (v50 << 23) ^ ((v50 ^ (v50 << 23)) >> 17) ^ v51 ^ (v51 >> 26);
  v53 = v51 ^ (v51 << 23) ^ ((v51 ^ (v51 << 23)) >> 17) ^ v52 ^ (v52 >> 26);
  v54 = v52 ^ (v52 << 23) ^ ((v52 ^ (v52 << 23)) >> 17) ^ v53 ^ (v53 >> 26);
  STACK[0x6A30] = v54;
  v55 = v53 ^ (v53 << 23) ^ ((v53 ^ (v53 << 23)) >> 17) ^ v54 ^ (v54 >> 26);
  STACK[0x6A20] = v55;
  v56 = v54 ^ (v54 << 23) ^ ((v54 ^ (v54 << 23)) >> 17) ^ v55 ^ (v55 >> 26);
  STACK[0x69F0] = v56;
  v57 = v55 ^ (v55 << 23) ^ ((v55 ^ (v55 << 23)) >> 17) ^ v56 ^ (v56 >> 26);
  STACK[0x6970] = v57;
  v58 = v56 ^ (v56 << 23) ^ ((v56 ^ (v56 << 23)) >> 17) ^ v57 ^ (v57 >> 26);
  STACK[0x68D0] = v58;
  v59 = v57 ^ (v57 << 23) ^ ((v57 ^ (v57 << 23)) >> 17) ^ v58 ^ (v58 >> 26);
  v60 = ((v59 << 23) ^ (-8388608 * v59) ^ (v59 - ((v59 << 23) ^ v59))) + v59;
  v61 = v58 ^ (v58 << 23) ^ ((v58 ^ (v58 << 23)) >> 17) ^ v59 ^ (v59 >> 26);
  STACK[0x6850] = v61;
  v62 = v61 ^ (v61 >> 26) ^ v60 ^ (v60 >> 17);
  v63 = v61 ^ (v61 << 23) ^ ((v61 ^ (v61 << 23)) >> 17) ^ v62 ^ (v62 >> 26);
  v64 = v62 ^ (v62 << 23) ^ ((v62 ^ (v62 << 23)) >> 17) ^ v63 ^ (v63 >> 26);
  v65 = v63 ^ (v63 << 23) ^ ((v63 ^ (v63 << 23)) >> 17) ^ v64 ^ (v64 >> 26);
  v66 = v64 ^ (v64 << 23) ^ ((v64 ^ (v64 << 23)) >> 17) ^ v65 ^ (v65 >> 26);
  v67 = v65 ^ (v65 << 23) ^ ((v65 ^ (v65 << 23)) >> 17) ^ v66 ^ (v66 >> 26);
  v68 = v66 ^ (v66 << 23) ^ ((v66 ^ (v66 << 23)) >> 17) ^ v67 ^ (v67 >> 26);
  v69 = v67 ^ (v67 << 23) ^ ((v67 ^ (v67 << 23)) >> 17) ^ v68 ^ (v68 >> 26);
  v70 = v68 ^ (v68 << 23) ^ ((v68 ^ (v68 << 23)) >> 17) ^ v69 ^ (v69 >> 26);
  v71 = v69 ^ (v69 << 23) ^ ((v69 ^ (v69 << 23)) >> 17) ^ v70 ^ (v70 >> 26);
  v72 = v70 ^ (v70 << 23) ^ ((v70 ^ (v70 << 23)) >> 17) ^ v71 ^ (v71 >> 26);
  v73 = v71 ^ (v71 << 23) ^ ((v71 ^ (v71 << 23)) >> 17) ^ v72 ^ (v72 >> 26);
  v74 = v72 ^ (v72 << 23) ^ ((v72 ^ (v72 << 23)) >> 17) ^ v73 ^ (v73 >> 26);
  v75 = v73 ^ (v73 << 23) ^ ((v73 ^ (v73 << 23)) >> 17) ^ v74 ^ (v74 >> 26);
  v76 = v74 ^ (v74 << 23) ^ ((v74 ^ (v74 << 23)) >> 17) ^ v75 ^ (v75 >> 26);
  v77 = v75 ^ (v75 << 23) ^ ((v75 ^ (v75 << 23)) >> 17) ^ v76 ^ (v76 >> 26);
  v78 = v76 ^ (v76 << 23) ^ ((v76 ^ (v76 << 23)) >> 17) ^ v77 ^ (v77 >> 26);
  STACK[0x6398] = (v77 ^ ((_DWORD)v77 << 23) ^ ((v77 ^ (v77 << 23)) >> 17) ^ v78 ^ (v78 >> 26))
                + v78;
  LODWORD(STACK[0x6388]) = v78 + v77;
  LODWORD(STACK[0x6390]) = v77 + v76;
  LODWORD(STACK[0x6378]) = v76 + v75;
  LODWORD(STACK[0x6380]) = v75 + v74;
  LODWORD(STACK[0x6370]) = v74 + v73;
  LODWORD(STACK[0x6360]) = v73 + v72;
  LODWORD(STACK[0x6358]) = v72 + v71;
  LODWORD(STACK[0x6348]) = v71 + v70;
  LODWORD(STACK[0x6368]) = v70 + v69;
  LODWORD(STACK[0x6350]) = v69 + v68;
  LODWORD(STACK[0x6330]) = v68 + v67;
  LODWORD(STACK[0x6340]) = v67 + v66;
  LODWORD(STACK[0x6320]) = v66 + v65;
  LODWORD(STACK[0x6338]) = v65 + v64;
  LODWORD(STACK[0x6328]) = v64 + v63;
  LODWORD(STACK[0x5E68]) = v63 + v62;
  v79 = STACK[0x6850];
  LODWORD(STACK[0x5E58]) = v62 + STACK[0x6850];
  LODWORD(STACK[0x5E50]) = v79 + v59;
  v80 = STACK[0x68D0];
  LODWORD(STACK[0x5E70]) = v59 + STACK[0x68D0];
  v81 = STACK[0x6970];
  LODWORD(STACK[0x5E48]) = v80 + STACK[0x6970];
  v82 = STACK[0x69F0];
  LODWORD(STACK[0x5E40]) = v81 + STACK[0x69F0];
  v83 = STACK[0x6A20];
  LODWORD(STACK[0x5E30]) = v82 + STACK[0x6A20];
  v84 = STACK[0x6A30];
  LODWORD(STACK[0x5E28]) = v83 + STACK[0x6A30];
  LODWORD(STACK[0x5E20]) = v84 + v53;
  LODWORD(STACK[0x5E38]) = v53 + v52;
  v85 = STACK[0x6A40];
  LODWORD(STACK[0x5E10]) = v52 + STACK[0x6A40];
  v86 = STACK[0x6A50];
  LODWORD(STACK[0x5E60]) = v85 + STACK[0x6A50];
  v87 = STACK[0x6A60];
  LODWORD(STACK[0x5E88]) = v86 + STACK[0x6A60];
  v88 = STACK[0x6A70];
  LODWORD(STACK[0x5E08]) = v87 + STACK[0x6A70];
  v89 = STACK[0x6A80];
  LODWORD(STACK[0x5E18]) = v88 + STACK[0x6A80];
  LODWORD(STACK[0x5E00]) = v89 + STACK[0x6AA0];
  v90 = (unsigned __int8 *)STACK[0x67C0];
  v91 = *(unsigned __int8 *)(STACK[0x67C0] + 12);
  STACK[0x6608] = STACK[0x67C0] + 12;
  LODWORD(STACK[0x6618]) = v91;
  LODWORD(v88) = v90[13];
  STACK[0x6620] = (unint64_t)(v90 + 13);
  LODWORD(STACK[0x6628]) = v88;
  LODWORD(v88) = v90[2];
  STACK[0x6568] = (unint64_t)(v90 + 2);
  LODWORD(STACK[0x6570]) = v88;
  LODWORD(v88) = v90[5];
  STACK[0x6598] = (unint64_t)(v90 + 5);
  LODWORD(STACK[0x65A0]) = v88;
  LODWORD(v88) = v90[14];
  STACK[0x6630] = (unint64_t)(v90 + 14);
  LODWORD(STACK[0x6638]) = v88;
  LODWORD(v88) = v90[1];
  STACK[0x6558] = (unint64_t)(v90 + 1);
  LODWORD(STACK[0x6560]) = v88;
  LODWORD(v88) = v90[3];
  STACK[0x6588] = (unint64_t)(v90 + 3);
  LODWORD(STACK[0x6590]) = v88;
  LODWORD(v88) = v90[7];
  STACK[0x65B8] = (unint64_t)(v90 + 7);
  LODWORD(STACK[0x65C0]) = v88;
  LODWORD(v88) = v90[15];
  STACK[0x6640] = (unint64_t)(v90 + 15);
  LODWORD(STACK[0x6648]) = v88;
  LODWORD(v88) = v90[11];
  STACK[0x65F8] = (unint64_t)(v90 + 11);
  LODWORD(STACK[0x6600]) = v88;
  LODWORD(v88) = v90[8];
  STACK[0x65C8] = (unint64_t)(v90 + 8);
  LODWORD(STACK[0x65D0]) = v88;
  LODWORD(v88) = v90[4];
  STACK[0x6578] = (unint64_t)(v90 + 4);
  LODWORD(STACK[0x6580]) = v88;
  LODWORD(v88) = v90[6];
  STACK[0x65A8] = (unint64_t)(v90 + 6);
  LODWORD(STACK[0x65B0]) = v88;
  LODWORD(v88) = v90[9];
  STACK[0x65D8] = (unint64_t)(v90 + 9);
  LODWORD(STACK[0x65E0]) = v88;
  LODWORD(STACK[0x6550]) = *v90;
  v92 = (unint64_t)(v90 + 10);
  LODWORD(v90) = v90[10];
  STACK[0x65E8] = v92;
  LODWORD(STACK[0x65F0]) = (_DWORD)v90;
  v93 = (_QWORD *)STACK[0x61A0];
  v93[1044] = 0x270000004CLL;
  v93[1042] = 0x5F000000DELL;
  v93[1045] = 0x700000000CLL;
  v93[1043] = 0x8300000056;
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a8) - 8))(51, STACK[0x5F08]);
}

uint64_t sub_100D12200@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3;
  int v4;
  char v5;
  int v6;
  int v7;
  unint64_t v8;
  unsigned int v9;

  v7 = v3;
  v8 = a3 ^ (a3 << 23) ^ v3 ^ ((a3 ^ (unint64_t)(a3 << 23)) >> 17) ^ (v3 >> ((v6 - 69) ^ v5));
  if ((((v8 + v7) >> 4) & 7) == (((_DWORD)v8 + v7) & 7))
    v9 = ((_BYTE)v8 + (_BYTE)v7 + 1) & 7;
  else
    v9 = (v8 + v7) & 7;
  *(_DWORD *)(a2 + 4 * (((v8 + v7) >> 4) & 7)) = *(unsigned __int8 *)(a2 + 4 * v9) ^ *(unsigned __int8 *)(a2 + 4 * (((v8 + v7) >> 4) & 7));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v4 != 0) * a1) ^ v6)) - 8))();
}

uint64_t sub_100D1227C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 12))(8340, 8356, 8344, -16223, 8348, a6, 8360, 165519646);
}

uint64_t sub_100D122E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  unsigned __int8 v33;

  *(_BYTE *)(a6 + v8) = 0;
  v19 = *(_BYTE *)(v15 + v13);
  if (((((v7 + v10) | v17) ^ v11) & v8) == 0)
    v19 = 0;
  *(_BYTE *)(a6 + v8) = v19;
  v20 = *(_BYTE *)(v15 + a1);
  if ((v8 & 2) == 0)
    v20 = 0;
  v21 = v20 ^ v19;
  *(_BYTE *)(a6 + v8) = v21;
  v22 = *(_BYTE *)(v15 + a3);
  if ((v8 & 4) == 0)
    v22 = 0;
  v23 = v22 ^ v21;
  *(_BYTE *)(a6 + v8) = v23;
  v24 = *(_BYTE *)(v15 + a5);
  if ((v8 & 8) == 0)
    v24 = 0;
  v25 = v24 ^ v23;
  *(_BYTE *)(a6 + v8) = v25;
  v26 = *(_BYTE *)(v15 + v18);
  if ((v8 & 0x10) == 0)
    v26 = 0;
  v27 = v26 ^ v25;
  *(_BYTE *)(a6 + v8) = v27;
  v28 = *(_BYTE *)(v15 + a2);
  if ((v8 & 0x20) == 0)
    v28 = 0;
  v29 = v28 ^ v27;
  *(_BYTE *)(a6 + v8) = v29;
  v30 = *(_BYTE *)(v15 + a7);
  if ((v8 & 0x40) == 0)
    v30 = 0;
  v31 = v30 ^ v29;
  *(_BYTE *)(a6 + v8) = v31;
  v32 = *(_BYTE *)(v15 + v12);
  if ((v8 & 0x80) == 0)
    v32 = 0;
  v33 = v31 ^ v9 ^ v32;
  *(_BYTE *)(a6 + v8) = v33;
  *(_BYTE *)(v14 + v33) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v8 == 255) * v16) ^ v7)) - 12))();
}

uint64_t sub_100D123C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;

  v7 = v4 ^ (v4 << 23) ^ ((v4 ^ (unint64_t)(v4 << 23)) >> 17) ^ v6 ^ (v6 >> 26);
  v8 = (v4 ^ ((v4 ^ (unint64_t)(v4 << 23)) >> 17) ^ v6 ^ (v6 >> 26)) + v6;
  v9 = v6 ^ (v6 << 23) ^ ((v6 ^ (v6 << 23)) >> 17) ^ v7 ^ (v7 >> 26);
  v10 = v9 ^ (v9 >> 26) ^ (v7 << ((v5 - 16) & 0xF7)) ^ v7 ^ (((v7 << ((v5 - 16) & 0xF7)) ^ v7) >> 17);
  v11 = (v9 + v7) | (v8 + 95);
  LODWORD(STACK[0x6A80]) = (v10 + v9) & 7;
  v12 = -(v10 + v9) & 7;
  if ((((_DWORD)v10 + (_DWORD)v9) & 7) != 0)
    v13 = 255;
  else
    v13 = 0;
  LODWORD(STACK[0x6AA0]) = v12;
  v14 = v13 << v12;
  LODWORD(STACK[0x5DF0]) = v14;
  v15 = 16843009 * v14;
  if ((((_DWORD)v10 + (_DWORD)v9) & 7) != 0)
    v16 = ~(_BYTE)v14;
  else
    v16 = 0;
  LODWORD(STACK[0x6A30]) = (v16 & v8);
  v17 = v9 ^ (v9 << 23) ^ ((v9 ^ (v9 << 23)) >> 17) ^ v10 ^ (v10 >> 26);
  v18 = v17 ^ (v17 << 23);
  v19 = v10 ^ (v10 << 23) ^ ((v10 ^ (v10 << 23)) >> 17) ^ v17 ^ (v17 >> 26);
  v20 = v19 ^ (v19 << 23);
  v21 = v18 ^ (v18 >> 17) ^ v19 ^ (v19 >> 26);
  v22 = v20 ^ (v20 >> 17) ^ v21 ^ (v21 >> 26);
  v23 = v22 ^ (v22 << 23);
  v24 = v21 ^ (v21 << 23) ^ ((v21 ^ (v21 << 23)) >> 17) ^ v22 ^ (v22 >> 26);
  v25 = v24 ^ (v24 << 23);
  v26 = v23 ^ (v23 >> 17) ^ v24 ^ (v24 >> 26);
  v27 = v26 ^ (v26 << 23);
  v28 = v26 ^ v25 ^ (v25 >> 17) ^ (v26 >> 26);
  v29 = __ROR8__(__ROR8__(v28 ^ (v28 >> 26), 1) ^ __ROR8__(v27 ^ (v27 >> 17), 1), 63);
  v30 = v28 ^ (v28 << 23) ^ ((v28 ^ (v28 << 23)) >> 17) ^ v29 ^ (v29 >> 26);
  v31 = v30 ^ (v30 << 23);
  v32 = v29 ^ (v29 << 23) ^ ((v29 ^ (v29 << 23)) >> 17) ^ v30 ^ (v30 >> 26);
  v33 = v31 ^ (v31 >> 17) ^ v32 ^ (v32 >> 26);
  v34 = v32 ^ (v32 << 23) ^ ((v32 ^ (v32 << 23)) >> 17) ^ v33 ^ (v33 >> 26);
  v35 = v33 ^ (v33 << 23) ^ ((v33 ^ (v33 << 23)) >> 17) ^ v34 ^ (v34 >> 26);
  v36 = v34 ^ (v34 << 23) ^ ((v34 ^ (v34 << 23)) >> 17) ^ v35 ^ (v35 >> 26);
  v37 = v35 ^ (v35 << 23) ^ ((v35 ^ (v35 << 23)) >> 17) ^ v36 ^ (v36 >> 26);
  v38 = v36 ^ (v36 << 23) ^ ((v36 ^ (v36 << 23)) >> 17) ^ v37 ^ (v37 >> 26);
  v39 = v38 ^ (v38 >> 26) ^ v37 ^ (v37 << 23) ^ ((v37 ^ (v37 << 23)) >> 17);
  v40 = v38 ^ (v38 << 23) ^ ((v38 ^ (v38 << 23)) >> 17) ^ v39 ^ (v39 >> 26);
  v41 = v39 ^ (v39 << 23) ^ ((v39 ^ (v39 << 23)) >> 17) ^ v40 ^ (v40 >> 26);
  v42 = v40 ^ (v40 << 23) ^ ((v40 ^ (v40 << 23)) >> 17) ^ v41 ^ (v41 >> 26);
  v43 = v41 ^ (v41 << 23) ^ ((v41 ^ (v41 << 23)) >> 17) ^ v42 ^ (v42 >> 26);
  v44 = v42 ^ (v42 << 23) ^ ((v42 ^ (v42 << 23)) >> 17) ^ v43 ^ (v43 >> 26);
  v45 = v43 ^ (v43 << 23) ^ ((v43 ^ (v43 << 23)) >> 17) ^ v44 ^ (v44 >> 26);
  v46 = v45 ^ (v45 << 23);
  v47 = v44 ^ (v44 << 23) ^ ((v44 ^ (v44 << 23)) >> 17) ^ v45 ^ (v45 >> 26);
  v48 = v47 ^ (v47 << 23);
  v49 = v46 ^ (v46 >> 17) ^ v47 ^ (v47 >> 26);
  LODWORD(STACK[0x6720]) = 16843009 * ((v11 ^ ((unsigned __int16)(v8 - 12449) >> 8)) ^ 0x4F);
  STACK[0x6710] = v48 ^ (v48 >> 17) ^ v49 ^ (v49 >> 26);
  LODWORD(STACK[0x5F18]) = v15;
  LODWORD(STACK[0x6A70]) = ~v15;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v5))(0, 4961, 19516, a4, 4294958256);
}

uint64_t sub_100D126D4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int v15;

  *(_BYTE *)(v12 + a1) = *(_BYTE *)(a6
                                  + ((a1 ^ *(_BYTE *)(*(_QWORD *)(v11 + 8 * (v9 ^ a2))
                                                                     - 8
                                                                     + (((v9 + a8) & v8 ^ (unint64_t)(a5 + 3198)) & ((a1 ^ a7) + a3)))) ^ 0x30u)) ^ v10;
  v13 = a1 == 255;
  v14 = a1 + 1;
  v15 = !v13;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6AD8] + 8 * ((56 * v15) ^ v9)))(v14);
}

uint64_t sub_100D1273C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;

  LODWORD(STACK[0x5EF0]) = (((v6 - 4305) | 0x10CB) ^ 0x16B4) & v8;
  LODWORD(STACK[0x5EE8]) = v8 & 0x7F;
  LODWORD(STACK[0x6A50]) = 16843009 * (v8 & 0x7F);
  LODWORD(STACK[0x66E0]) = 16843009 * v9;
  LODWORD(STACK[0x69F0]) = (16843009 * v9) ^ 0xD7D7D7D7;
  STACK[0x6688] = v7 ^ a6 ^ STACK[0x6710] ^ (STACK[0x6710] >> 26);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * v6))(a1, 489, a2, a3, a4, a5, 1005, 5252);
}

uint64_t sub_100D127F0()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;

  *(_BYTE *)(v4 + v1) = *(_BYTE *)(v6 + (*v5 ^ v5[v1]));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v1 != 255) * ((v0 + v2) ^ v3)) ^ v0)))();
}

uint64_t sub_100D12830@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;
  int v4;
  unint64_t v5;

  STACK[0x6770] = v5;
  LODWORD(STACK[0x6A40]) = v4;
  LODWORD(STACK[0x6A20]) = 16843009 * LODWORD(STACK[0x5EF0]);
  LODWORD(STACK[0x6A60]) = LODWORD(STACK[0x6A30]) ^ LODWORD(STACK[0x5F18]);
  LODWORD(STACK[0x6680]) = v3 ^ 0x864A08C4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * a3)
                                                                              - 12))(24490, a1, 17743, a2, 4294961795);
}

uint64_t sub_100D128D8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v5 = v4 + v1;
  v6 = *(_OWORD *)(v4 + v1 + 64);
  *(_OWORD *)(v5 + 5968) = *(_OWORD *)(v4 + v1 + 48);
  *(_OWORD *)(v5 + 5984) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 == 224) * ((a1 ^ v2) + v3)) ^ a1)) - 12))();
}

uint64_t sub_100D12914()
{
  unsigned int v0;
  int v1;

  LODWORD(STACK[0x6128]) = v1;
  LODWORD(STACK[0x6970]) = v1 ^ 0x7FAC9546;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (int)(v0 ^ 0x48AEF83F ^ (20509 * (v0 < 0x1334721B)))))();
}

uint64_t sub_100D1299C()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;

  v12 = *(unsigned __int8 *)((*(unsigned __int8 *)(v3 + v2) ^ v10) + v7 + v5);
  v13 = *(unsigned __int8 *)((*(unsigned __int8 *)(v3 + v2 + 1) ^ v10) + v7 + v5);
  v14 = v8 + v2;
  *(_BYTE *)(v14 + 3824) = ((v1 + v4) | v6) ^ v11 ^ ((v12 >> 6) | (4 * v12));
  *(_BYTE *)(v14 + 3825) = ((v13 >> 6) | (4 * v13)) ^ v0;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v2 != 254) * v9) ^ v1)))();
}

uint64_t sub_100D12A10@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x6A30]) ^= LODWORD(STACK[0x5F18]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (a1 + 14113)) - 4))();
}

uint64_t sub_100D12A70@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  __int128 v4;
  __int128 v5;
  _OWORD *v6;

  v3 = (__int128 *)(STACK[0x6A10] + v1);
  v4 = *v3;
  v5 = v3[1];
  v6 = (_OWORD *)(v2 + v1);
  *v6 = v4;
  v6[1] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((194 * (((v1 == 224) ^ (a1 - 1)) & 1)) ^ (a1 + 14047)))
                            - 4))();
}

uint64_t sub_100D12AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v9 + v8) = *(_BYTE *)(a6 + *(unsigned __int8 *)(v9 + v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v8 != 255) * a7) ^ v7)) - 8))();
}

uint64_t sub_100D12B04()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v5 = (v0 - 1057732151) & 0x3F0BC6FA ^ 0x46ABLL | v1;
  v6 = *(_BYTE *)((*(unsigned __int8 *)(v4 + v1) ^ 0xADLL) + v3 + 19775);
  v7 = *(_BYTE *)((*(unsigned __int8 *)(v4 + v5) ^ 0xADLL) + v3 + 19775);
  *(_BYTE *)(v2 + v1) = v6 ^ (((2 * v6) ^ 0x10) + 120) ^ 0x81;
  *(_BYTE *)(v2 + v5) = v7 ^ (((2 * v7) ^ 0x10) + 120) ^ 0x81;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26586 * (v1 == 254)) ^ v0)) - 8))();
}

uint64_t sub_100D12BAC@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD *v5;

  v4 = *(_OWORD *)(v2 + a1 + 16);
  v5 = (_OWORD *)(v3 + a1);
  *v5 = *(_OWORD *)(v2 + a1);
  v5[1] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((29 * (a1 + 32 == v1 + 13 - 17847)) ^ v1)) - 4))();
}

uint64_t sub_100D12BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(v8 + v6) = *(_BYTE *)(a6 + *(unsigned __int8 *)(v8 + v6));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 == 255) * (v7 - 14849)) ^ v7)) - 4))();
}

uint64_t sub_100D12C34()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v5 = *(_BYTE *)((*(unsigned __int8 *)(v3 + (v0 | 1)) ^ 0x19) + v2 + 9748);
  *(_BYTE *)(v4 + v0) = *(_BYTE *)((*(unsigned __int8 *)(v3 + v0) ^ 0x19) + v2 + 9748) ^ 0x72;
  *(_BYTE *)(v4 + (v0 | 1)) = v5 ^ (v1 + 113);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((14 * (v0 == 254)) | v1)) - 4))();
}

uint64_t sub_100D12CA8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD *v5;

  v4 = *(_OWORD *)(v3 + a1 + 16);
  v5 = (_OWORD *)(v2 + a1);
  *v5 = *(_OWORD *)(v3 + a1);
  v5[1] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((12010 * (a1 - 14819 + (v1 ^ 0x700Cu) == 256)) ^ v1))
                            - 4))();
}

uint64_t sub_100D12CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(v8 + v6) = *(_BYTE *)(a6 + *(unsigned __int8 *)(v8 + v6));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v6 == 255) * (v7 ^ 0x3A07)) | v7)))();
}

uint64_t sub_100D12D34@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v5 = *(_BYTE *)((*(unsigned __int8 *)(v3 + (a1 | 1)) ^ 0xA1) + v2 + 10005) ^ ((*(_BYTE *)(v3 + (a1 | 1)) ^ 0x61)
                                                                                + (*(_BYTE *)(v3 + (a1 | 1)) ^ 0x20)
                                                                                + 1) ^ 0x5C;
  *(_BYTE *)(v4 + a1) = *(_BYTE *)((*(unsigned __int8 *)(v3 + a1) ^ 0xA1) + v2 + 10005) ^ ((*(_BYTE *)(v3 + a1) ^ 0x20)
                                                                                           + ((v1 - 23) ^ 0x9A ^ *(_BYTE *)(v3 + a1))
                                                                                           + 1) ^ 0x5C;
  *(_BYTE *)(v4 + (a1 | 1)) = v5;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((789 * (a1 != 254)) ^ v1)))();
}

uint64_t sub_100D12DD4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;

  v6 = *(_OWORD *)(v5 + v3 + 16);
  v7 = (_OWORD *)(v4 + v3);
  *v7 = *(_OWORD *)(v5 + v3);
  v7[1] = v6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * (((v3 != 224) * a2) ^ v2)))();
}

uint64_t sub_100D12E08@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;

  *(_BYTE *)(v4 + a3) = *(_BYTE *)(a2 + *(unsigned __int8 *)(v4 + a3));
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((25335 * (a3 + 1 == (v3 + 1892) + a1)) ^ v3)))();
}

uint64_t sub_100D12E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(STACK[0x69E0] + v6) = *(_BYTE *)(a6
                                            + (((v6 ^ 0xDB)
                                                               + *(_BYTE *)(v8
                                                                          + (v6 ^ 0x1A89 ^ (5 * (v7 ^ 0x451E)))
                                                                          + 12572)) ^ 0x8CLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((240 * (v6 == 255)) ^ v7)) - 12))();
}

uint64_t sub_100D12EB8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  *(_BYTE *)(STACK[0x6A00] + a2) = *(_BYTE *)(a1
                                            + (*(unsigned __int8 *)(v3 + (a2 ^ 0xC2) + 14886) ^ 0x31));
  v4 = a2 + 1 == (v2 + 34) - 6503;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((2 * v4) | (32 * v4) | v2)) - 8))();
}

uint64_t sub_100D12F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v10 + v6) = *(_BYTE *)(a6 + (*(unsigned __int8 *)(v9 + (v6 ^ 0xC3) + 7439) ^ 0x53));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 == 255) * v8) ^ v7))
                            - (v7 + 1017)
                            + 7768))();
}

uint64_t sub_100D12F70@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + a2) = *(_BYTE *)(a1
                                 + (v2 ^ 0xCA ^ (*(_BYTE *)(v3
                                                                                            + (a2 ^ 0x31)
                                                                                            + 16945)
                                                                                 + 74) ^ ((*(_BYTE *)(v3 + (a2 ^ 0x31) + 16945) + 74) >> 5) ^ ((*(_BYTE *)(v3 + (a2 ^ 0x31) + 16945) + 74) >> 2) ^ 0xBu));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((18738 * (a2 == 255)) ^ v2)) - 8))();
}

uint64_t sub_100D12FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((16078 * (v6 == -802554910)) ^ 0x15AD)) - 12))(a1, 8196, a3, a4, a5, a6, 10901, 9376);
}

uint64_t sub_100D13050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v10 + v6) = *(_BYTE *)(a6
                                  + (v7 ^ 0xBAu ^ *(_BYTE *)(v9 + (v6 ^ 0xD4) + 19003))) ^ v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((16184 * (v6 == 255)) ^ v7)) - 12))();
}

uint64_t sub_100D130B0@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v6 + a3) = *(_BYTE *)(v5 + *(unsigned __int8 *)(v4 + a3));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((a3 == 255) * ((3 * (v3 ^ a2)) ^ a1)) | v3)) - 12))();
}

uint64_t sub_100D130F0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;

  v6 = *(_OWORD *)(v5 + v0 + 16);
  v7 = (_OWORD *)(v4 + v0);
  *v7 = *(_OWORD *)(v5 + v0);
  v7[1] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((v0 + v2 + ((v1 - 1391733448) & 0x52F45B7E) == 256) * v3) ^ v1))
                            - 12))();
}

uint64_t sub_100D13144(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v9 + v6) = a6[*(unsigned __int8 *)(v10 + (v6 ^ 0x25) + 6670) ^ 0x60] ^ *a6;
  return (*(uint64_t (**)(void))(STACK[0x6AD8] + 8 * ((60 * (v6 + 1 != ((v7 + v8) | a2) - 13718)) ^ v7)))();
}

uint64_t sub_100D131A4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + v1) = *(_BYTE *)(v2 + *(unsigned __int8 *)(v3 + v1));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((35 * (v1 != 255)) ^ a1)) - 12))();
}

uint64_t sub_100D131DC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD *v5;

  v4 = *(_OWORD *)(v3 + v1 + 16);
  v5 = (_OWORD *)(v2 + v1);
  *v5 = *(_OWORD *)(v3 + v1);
  v5[1] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((26169 * (v1 == 224)) ^ a1))
                            - ((a1 + 241311351) ^ 0xE625501)))();
}

uint64_t sub_100D1322C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v6 ^ 0xE625929 ^ (5710 * (v6 < 0xDBD9D286)))) - (((v6 - 241320613) | 0x802) ^ 0x1A62)))(a1, 386, a3, STACK[0x6A10], a5, a6, 1321, -15181);
}

uint64_t sub_100D132B4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  uint64_t v5;
  unsigned __int8 v6;

  v6 = *(_BYTE *)(v5 + ((v3 - 6531) ^ a3) + 3591);
  *(_BYTE *)(a1 + a3) = *(_BYTE *)(a2 + (v6 ^ 0xBCu ^ (((4 * v6) ^ 0x2C) + 68))) ^ v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((248 * (a3 == 255)) ^ v3)) - 8))();
}

uint64_t sub_100D13320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v7 + v4) = *(_BYTE *)(a4 + *(unsigned __int8 *)(v6 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((1933 * (v4 == 255)) ^ v5))
                            - (((v5 - 1674) | 0x8F0u) ^ 0x1CF0)))();
}

uint64_t sub_100D1336C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD *v5;

  v4 = *(_OWORD *)(v3 + v2 + 16);
  v5 = (_OWORD *)(a1 + v2);
  *v5 = *(_OWORD *)(v3 + v2);
  v5[1] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((487 * (v2 != 224)) ^ a2)) - 8))();
}

uint64_t sub_100D133A8@<X0>(int a1@<W1>, _BYTE *a2@<X5>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v6 + v3) = a2[*(_BYTE *)(v3 + v5 + 4104) ^ ((v3 ^ 0x70) + (v3 ^ 2)) ^ 0xD1] ^ *a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v3 == 255) * (((a3 - 183) | a1) ^ v4)) ^ a3)) - 8))();
}

uint64_t sub_100D13414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v13 + v8) = *(_BYTE *)(v12 + *(unsigned __int8 *)(v10 + v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((9869 * (v8 + a8 + (v9 + v11) == 256)) ^ v9))
                            - 8))();
}

uint64_t sub_100D13454@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;

  v6 = *(_OWORD *)(v5 + a1 + 16);
  v7 = (_OWORD *)(v4 + a1);
  *v7 = *(_OWORD *)(v5 + a1);
  v7[1] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * ((((((v1 + v2) | 0x1180u) ^ 0x5F81) + a1 == 256) * v3) ^ v1))
                            - 8))();
}

uint64_t sub_100D134A0(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;

  v11 = (_OWORD *)(v10 + v7);
  *v11 = 0u;
  v11[1] = 0u;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((99 * (v7 != 384)) ^ v8)) - (v8 ^ a1) * a7 + v9))();
}

uint64_t sub_100D134E4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v3 + v1) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v1 == 424) * ((a1 + 1372841386) ^ v2)) ^ a1)) - 12))();
}

uint64_t sub_100D13520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v5 ^ 0x51D40B0C ^ (16316 * (v5 > 0x9E4B3AFC)))) - ((13 * (v5 ^ (v6 + 354))) ^ 0x1569)))(a1, 37, a3, 19788, a5, 19216, STACK[0x6A00], STACK[0x69E0]);
}

uint64_t sub_100D135CC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  unint64_t v12;

  v10 = (char *)(v8 + (v0 & 0xF));
  v11 = *v10;
  LODWORD(v10) = 1772489163 * ((v10 ^ *(_DWORD *)(v2 + v3)) & 0x7FFFFFFF);
  v12 = (v10 ^ (v10 >> 16)) * (v4 + 178 * (v1 ^ 0x157E) - 1304);
  *(_BYTE *)(v9 + v0) = *(_BYTE *)(v5 + (v12 >> 24)) ^ v11 ^ *(_BYTE *)(v6 + (v12 >> 24)) ^ *(_BYTE *)((v12 >> 24) + v7 + 3) ^ v12 ^ (-3 * BYTE3(v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((239 * (v0 == 255)) ^ v1)) - 8))();
}

uint64_t sub_100D1366C@<X0>(int a1@<W4>, unint64_t a2@<X5>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;

  v6 = *(unsigned __int8 *)(v4 + a3);
  if (v6 <= 1)
    v7 = 1;
  else
    v7 = *(unsigned __int8 *)(v4 + a3);
  *(_BYTE *)(v4 + a3) = v6 ^ (2 * *(_BYTE *)(v4 + (v7 ^ a3)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((((((v3 + a1) | 0x4B00u) ^ a2) + a3 == 256) * v5) ^ v3))
                            - 8))();
}

uint64_t sub_100D136C4(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unint64_t v16;

  v14 = (unsigned __int8 *)(v11 + v9);
  *v14 = *(_BYTE *)(v12 + *v14);
  v14[1] = *(_BYTE *)(v13 + v14[1]);
  v15 = v9 + 2;
  *(_BYTE *)(v11 + v15) = *(_BYTE *)(a7 + *(unsigned __int8 *)(v11 + v15));
  v16 = ((((v8 + v10) | a3) ^ a4) & (2 * v9)) + (unint64_t)(v15 ^ 1);
  *(_BYTE *)(v11 + v16) = *(_BYTE *)(a8 + *(unsigned __int8 *)(v11 + v16));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v16 > 0x1AE) * a2) ^ v8)) - 8))();
}

uint64_t sub_100D1373C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;

  v1 = (a1 - 2);
  v2 = *(_QWORD *)(STACK[0x6AD8] + 8 * a1);
  STACK[0x6940] = v1;
  return ((uint64_t (*)(void))(v2 - v1 + 19781))();
}

uint64_t sub_100D13790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _BYTE *a8)
{
  char v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  int v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  int v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  unsigned int v51;
  char v52;
  char v53;
  unint64_t v54;
  uint64_t v55;

  v15 = *(a8 - 15);
  v16 = *(a8 - 14);
  v17 = *(a8 - 13);
  v18 = *(a8 - 12);
  v19 = *(a8 - 11);
  v20 = *(a8 - 10);
  v21 = *(a8 - 9);
  v22 = *(a8 - 8);
  v23 = *(a8 - 16);
  STACK[0x69D0] = v23;
  LOBYTE(v23) = *(_BYTE *)(STACK[0x6960] + v23) ^ *(a8 - 31);
  v24 = *(a8 - 19);
  v25 = *(_BYTE *)(STACK[0x6A10] + v24) ^ *(a8 - 30);
  v26 = *(a8 - 18);
  v27 = *(a8 - 29) ^ *(_BYTE *)(v12 + v26);
  v28 = *(a8 - 17);
  v29 = *(_BYTE *)(STACK[0x6990] + v28) ^ v9 ^ *(a8 - 28);
  v30 = *(a8 - 27) ^ v23;
  v31 = *(a8 - 26) ^ v25;
  v32 = *(a8 - 25) ^ v27;
  v33 = *(_BYTE *)STACK[0x69A0];
  v34 = *(_BYTE *)STACK[0x6A00];
  v35 = *(_BYTE *)STACK[0x69B0];
  LODWORD(STACK[0x68F0]) = v15;
  v36 = *(unsigned __int8 *)STACK[0x69E0];
  *(a8 - 15) = v23 ^ v15 ^ v35;
  LODWORD(STACK[0x6900]) = v16;
  LOBYTE(v23) = v25 ^ v16 ^ v33;
  v37 = *(a8 - 24) ^ v29;
  *(a8 - 14) = v23;
  LODWORD(STACK[0x68E0]) = v17;
  LOBYTE(v23) = v27 ^ v17 ^ v34;
  v38 = *(a8 - 23) ^ v30;
  *(a8 - 13) = v23;
  STACK[0x68D0] = v18;
  LOBYTE(v15) = *(a8 - 22) ^ v31;
  v39 = v35 ^ v14;
  *(a8 - 12) = v29 ^ v18 ^ v36;
  LOBYTE(v23) = v39 ^ v19 ^ v30;
  v40 = *(a8 - 21) ^ v32;
  v41 = v33 ^ v8;
  *(a8 - 11) = v23;
  LOBYTE(v23) = v41 ^ v20 ^ v31;
  v42 = *(a8 - 20) ^ v37;
  v43 = v34 ^ v13;
  *(a8 - 10) = v23;
  *(a8 - 9) = v43 ^ v21 ^ v32;
  v44 = v36 ^ v10;
  v45 = v44 ^ v22 ^ v37;
  LOBYTE(v23) = *(a8 - 7);
  v46 = v39 ^ *(a8 - 3) ^ v24 ^ v38;
  LOBYTE(v24) = *(a8 - 2);
  v47 = *(a8 - 6);
  *(a8 - 8) = v45;
  v48 = v33 ^ v47 ^ v15;
  v49 = v41 ^ v24 ^ v26 ^ v15;
  LOBYTE(v15) = v43 ^ *(a8 - 1) ^ v28;
  LOBYTE(v28) = *(a8 - 5);
  *(a8 - 7) = v35 ^ v23 ^ v38;
  v50 = v34 ^ v28 ^ v40;
  LOBYTE(v15) = v15 ^ v40;
  v51 = v44 ^ *a8 ^ STACK[0x69D0];
  v52 = *(a8 - 4);
  *(a8 - 6) = v48;
  LOBYTE(v44) = v36 ^ v52 ^ v42;
  v53 = v51 ^ v42;
  v54 = STACK[0x6940];
  v55 = STACK[0x6940] + 233;
  *(a8 - 5) = v50;
  *(a8 - 4) = v44;
  *(a8 - 3) = v46;
  *(a8 - 2) = v49;
  *(a8 - 1) = v15;
  *a8 = v53;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (int)(v54 ^ (2 * (v11 != (v55 ^ 0x4E2D))))) - 8))();
}

uint64_t sub_100D139F0@<X0>(char a1@<W1>, char a2@<W3>, char a3@<W4>, char a4@<W5>, char a5@<W6>, char a6@<W8>)
{
  int v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  _BYTE *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v13 = (_BYTE *)STACK[0x61A0];
  v13[2736] = STACK[0x68F0];
  v14 = STACK[0x68D0];
  v13[2737] = STACK[0x6900];
  v13[2738] = STACK[0x68E0];
  v13[2739] = v14;
  v13[2740] = a2;
  v13[2741] = a4;
  v13[2742] = a3;
  v13[2743] = a5;
  v13[2744] = a6;
  v13[2745] = v7;
  v13[2746] = v8;
  v13[2747] = v10;
  v13[2748] = v9;
  v13[2749] = v11;
  v13[2750] = v12;
  v13[2751] = a1;
  v15 = v13[11035];
  v16 = v13[11034];
  v17 = v13[11025];
  v18 = v13[11037];
  v19 = STACK[0x6870];
  STACK[0x6A00] = *(unsigned __int8 *)(STACK[0x6870] + v13[11039]);
  v20 = v13[11027];
  v21 = v13[11029];
  v22 = v13[11030];
  v23 = STACK[0x6880];
  STACK[0x69D0] = *(unsigned __int8 *)(STACK[0x6880] + v13[11026]);
  v24 = STACK[0x6890];
  STACK[0x6A10] = *(unsigned __int8 *)(STACK[0x6890] + v17);
  STACK[0x69C0] = *(unsigned __int8 *)(v19 + v20);
  v25 = STACK[0x6860];
  STACK[0x69E0] = *(unsigned __int8 *)(STACK[0x6860] + v13[11036]);
  v26 = v13[11028];
  v27 = v13[11033];
  STACK[0x69B0] = *(unsigned __int8 *)(v24 + v21);
  v28 = v13[11031];
  v29 = v13[11024];
  STACK[0x6940] = *(unsigned __int8 *)(v25 + v26);
  STACK[0x6990] = *(unsigned __int8 *)(v25 + v29);
  v30 = v13[11038];
  STACK[0x6960] = *(unsigned __int8 *)(v19 + v28);
  STACK[0x6980] = *(unsigned __int8 *)(v23 + v30);
  STACK[0x68F0] = *(unsigned __int8 *)(v23 + v22);
  STACK[0x69A0] = *(unsigned __int8 *)(v19 + v15);
  STACK[0x6900] = *(unsigned __int8 *)(v23 + v16);
  STACK[0x68D0] = *(unsigned __int8 *)(v24 + v27);
  STACK[0x68E0] = *(unsigned __int8 *)(v24 + v18);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(STACK[0x6AD8] + 8 * v6) - 4))((__n128)vdupq_n_s8(STACK[0x6A20]), (__n128)vdupq_n_s32(STACK[0x6A80]), (__n128)vdupq_n_s8(STACK[0x6A30]), (__n128)vdupq_n_s32(STACK[0x6AA0]), (__n128)vdupq_n_s32(STACK[0x69F0]));
}

uint64_t sub_100D13C18(int8x16_t a1, uint32x4_t a2, int8x16_t a3, int32x4_t a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  uint32x4_t v37;
  int8x16x4_t v39;

  v28.i8[0] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 - 8) ^ 0xFLL) + v18 + 16431);
  v28.i8[1] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 - 7) ^ 0xFLL) + v18 + 16431);
  v28.i8[2] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 - 6) ^ 0xFLL) + v18 + 16431);
  v28.i8[3] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 - 5) ^ 0xFLL) + v18 + 16431);
  v28.i8[4] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 - 4) ^ 0xFLL) + v18 + 16431);
  v28.i8[5] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 - 3) ^ 0xFLL) + v18 + 16431);
  v28.i8[6] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 - 2) ^ 0xFLL) + v18 + 16431);
  v28.i8[7] = *(_BYTE *)((*(unsigned __int8 *)(v20 + ((((v13 + v15) | v17) + v16) | v14)) ^ 0xFLL) + v18 + 16431);
  v28.i8[8] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14) ^ 0xFLL) + v18 + 16431);
  v28.i8[9] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 + 1) ^ 0xFLL) + v18 + 16431);
  v28.i8[10] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 + 2) ^ 0xFLL) + v18 + 16431);
  v28.i8[11] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 + 3) ^ 0xFLL) + v18 + 16431);
  v28.i8[12] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 + 4) ^ 0xFLL) + v18 + 16431);
  v28.i8[13] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 + 5) ^ 0xFLL) + v18 + 16431);
  v28.i8[14] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 + 6) ^ 0xFLL) + v18 + 16431);
  v28.i8[15] = *(_BYTE *)((*(unsigned __int8 *)(v21 + v14 + 7) ^ 0xFLL) + v18 + 16431);
  v29 = veorq_s8(veorq_s8(v28, v22), vshlq_n_s8(v28, 5uLL));
  v30 = vandq_s8(v29, a1);
  v31 = veorq_s8(vaddq_s8(v30, v30), v29);
  v32 = (int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v31, v25), a2);
  v33 = (int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v31, v24), a2);
  v34 = (int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v31, v26), a2);
  v35 = (int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v31, v23), a2);
  v36 = vandq_s8(v31, a3);
  v37 = (uint32x4_t)vnegq_s32(a4);
  v39.val[3] = veorq_s8(veorq_s8(v32, a5), (int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v36, v25), v37));
  v39.val[2] = veorq_s8(veorq_s8(v33, a5), (int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v36, v24), v37));
  v39.val[1] = veorq_s8(veorq_s8(v34, a5), (int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v36, v26), v37));
  v39.val[0] = veorq_s8(veorq_s8(v35, a5), (int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v36, v23), v37));
  *(int8x16_t *)(v19 + v14) = vqtbl4q_s8(v39, v27);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v14 == 240) * a13) ^ v13)) - 4))();
}

uint64_t sub_100D13DE4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t (*v15)(void);

  v3 = *(unsigned __int8 *)(v1 + v2);
  v4 = *(unsigned __int8 *)(v1 + STACK[0x6940]);
  v5 = *(unsigned __int8 *)(v1 + STACK[0x6A00]);
  LODWORD(STACK[0x68B0]) = *(unsigned __int8 *)(v1 + STACK[0x69C0]);
  v6 = *(unsigned __int8 *)(v1 + STACK[0x68F0]);
  v7 = *(unsigned __int8 *)(v1 + STACK[0x69B0]);
  v8 = *(unsigned __int8 *)(v1 + STACK[0x6900]);
  v9 = *(unsigned __int8 *)(v1 + STACK[0x68D0]);
  LODWORD(STACK[0x68F0]) = *(unsigned __int8 *)(v1 + STACK[0x69D0]);
  LODWORD(STACK[0x6990]) = *(unsigned __int8 *)(v1 + STACK[0x6990]);
  v10 = *(unsigned __int8 *)(v1 + STACK[0x68E0]);
  LODWORD(STACK[0x6900]) = *(unsigned __int8 *)(v1 + STACK[0x6960]);
  v11 = *(unsigned __int8 *)(v1 + STACK[0x6980]);
  v12 = *(unsigned __int8 *)(v1 + STACK[0x6A10]);
  LODWORD(STACK[0x69C0]) = *(unsigned __int8 *)(v1 + STACK[0x69E0]);
  v13 = *(unsigned __int8 *)(v1 + STACK[0x69A0]);
  STACK[0x69A0] = v5;
  LODWORD(STACK[0x68E0]) = v12 << 8;
  STACK[0x69E0] = v10;
  STACK[0x69D0] = v11;
  LODWORD(STACK[0x69B0]) = (v5 << 24) | ((_DWORD)v10 << 8) | ((_DWORD)v11 << 16);
  LODWORD(STACK[0x6A00]) = v3 | (v8 << 16) | (v9 << 8) | (v13 << 24);
  v14 = v4 | (v6 << 16);
  LODWORD(STACK[0x6940]) = LODWORD(STACK[0x6A30]);
  v15 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v0) - 4);
  LODWORD(STACK[0x6980]) = v14 | (v7 << 8);
  return v15();
}

uint64_t sub_100D13F9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  int v7;
  char v8;
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;

  v18 = 843347715 * *((_DWORD *)*(&off_1015B46D0 + v7 - 11349) + (v15 ^ v16) - 1);
  v19 = STACK[0x6A20];
  v20 = v18 ^ (v18 >> (v7 ^ 0x24)) ^ (v18 >> 1) ^ v13;
  v21 = STACK[0x6A50];
  v22 = STACK[0x6940];
  *(_DWORD *)(STACK[0x6910]
            + 4
            * (((v15 ^ (2 * (v15 & v19))) << v11) ^ v9 ^ (((v15 ^ (2 * (v15 & v19))) & v22) >> v8))) = (((v20 ^ (2 * (v20 & STACK[0x6A50]))) & a3) << v11) ^ v10 ^ (((v20 ^ (2 * (v20 & STACK[0x6A50]))) & v6) >> v8);
  v23 = (unsigned __int16)(*((_WORD *)*(&off_1015B46D0 + (v7 ^ v14)) + (v15 ^ v17) + 767) + (v15 ^ 0xECD5)) ^ 0xFCB3;
  *(_DWORD *)(v12
            + 4
            * (((((v15 ^ (2 * (v15 & v21))) & v22) >> v8) | ((v15 ^ (2 * (v15 & v21))) << v11)) ^ a6)) = (((v23 ^ (2 * (v23 & v19))) & a3) << v11) ^ v9 ^ (((v23 ^ (2 * (v23 & v19))) & v6) >> v8);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((25708 * (v15 == 255)) ^ v7)) - 4))(v6);
}

uint64_t sub_100D140FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v21;
  char v22;
  char v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  unsigned int v49;
  unint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  char v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  char v185;
  BOOL v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  BOOL v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  unint64_t v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  unsigned int v343;
  unint64_t v344;
  int v345;
  int v346;
  unint64_t v347;
  int v348;
  unsigned int v349;
  unint64_t v350;
  unint64_t v351;
  int v352;
  int v353;
  int v354;
  unint64_t v355;
  unsigned int v356;
  char *v357;
  char *v358;
  char *v359;
  unsigned int v360;
  unint64_t v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  unsigned int v370;
  unint64_t v371;
  int v372;
  unint64_t v373;
  unint64_t v374;
  unint64_t v375;
  unint64_t v376;
  unint64_t v377;
  unint64_t v378;
  unint64_t v379;
  unint64_t v380;
  unint64_t v381;
  unint64_t v382;
  unint64_t v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  unsigned int v413;
  unsigned int v414;
  int v415;
  unsigned int v416;
  int v417;
  int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  int v428;
  int v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  uint64_t (*v435)(void);
  unint64_t v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;

  STACK[0x6A10] = v7;
  STACK[0x6530] = v9;
  LODWORD(STACK[0x6528]) = 0;
  LODWORD(STACK[0x6258]) = 0;
  LODWORD(STACK[0x6250]) = 0;
  LODWORD(STACK[0x6520]) = 0;
  LODWORD(STACK[0x6248]) = 0;
  LODWORD(STACK[0x6240]) = 0;
  LODWORD(STACK[0x6518]) = 0;
  LODWORD(STACK[0x6500]) = 0;
  LODWORD(STACK[0x6238]) = 0;
  LODWORD(STACK[0x6510]) = 0;
  LODWORD(STACK[0x64C8]) = 0;
  LODWORD(STACK[0x64F8]) = 0;
  LODWORD(STACK[0x64D0]) = 0;
  LODWORD(STACK[0x64D8]) = 0;
  LODWORD(STACK[0x6230]) = 0;
  LODWORD(STACK[0x6960]) = 0;
  LODWORD(STACK[0x6228]) = 0;
  LODWORD(STACK[0x64E8]) = 0;
  LODWORD(STACK[0x6220]) = 0;
  LODWORD(STACK[0x6218]) = 0;
  LODWORD(STACK[0x6210]) = 0;
  LODWORD(STACK[0x64F0]) = 0;
  LODWORD(STACK[0x64B8]) = 0;
  LODWORD(STACK[0x6208]) = 0;
  LODWORD(STACK[0x6200]) = 0;
  LODWORD(STACK[0x64E0]) = 0;
  LODWORD(STACK[0x64B0]) = 0;
  LODWORD(STACK[0x61F8]) = 0;
  LODWORD(STACK[0x64C0]) = 0;
  LODWORD(STACK[0x61F0]) = 0;
  LODWORD(STACK[0x61E8]) = 0;
  LODWORD(STACK[0x64A8]) = 0;
  LODWORD(STACK[0x61E0]) = 0;
  v15 = LODWORD(STACK[0x6990]) | (LODWORD(STACK[0x68B0]) << 24) | (LODWORD(STACK[0x68F0]) << 16) | LODWORD(STACK[0x68E0]);
  LODWORD(STACK[0x6990]) = v15;
  LODWORD(STACK[0x67B0]) = v8 ^ 0x1E86;
  STACK[0x6610] = (v8 ^ 0x1E86u) + 3365;
  v16 = 33686018 * LODWORD(STACK[0x5EE8]);
  v17 = v16 & 0xE7FCFBFC ^ 0xF3FE7DFE;
  v18 = STACK[0x6A30] & v17;
  v19 = STACK[0x6A30];
  v21 = a3 & v17;
  v22 = v13;
  v23 = v10;
  v24 = 33686018 * LODWORD(STACK[0x5EF0]);
  v25 = v6;
  v26 = v14;
  v27 = LODWORD(STACK[0x69B0]) | LODWORD(STACK[0x69C0]);
  v28 = (v18 >> v10) ^ (v21 << v13) ^ ((((v24 & 0x51FCFBFC ^ 0x28FE7DFE) & a3) << v13)
                                     + (((v24 & 0x51FCFBFC ^ 0x28FE7DFE) & v6) >> v10)) ^ v15 ^ __ROR4__(*(_DWORD *)(v14 + 4 * STACK[0x69A0]), 8) ^ __ROR4__(*(_DWORD *)(v14 + 4 * STACK[0x69D0]), 16) ^ *(_DWORD *)(v14 + 4 * LODWORD(STACK[0x69C0])) ^ __ROR4__(*(_DWORD *)(v14 + 4 * STACK[0x69E0]), 24);
  v29 = (((v24 & 0x5E65B06A ^ 0xAF32D835) & STACK[0x6A30]) >> v10) + (((v24 & 0x5E65B06A ^ 0xAF32D835) & a3) << v22);
  v30 = v16;
  v31 = ((v6 & (v16 & 0x2265B06A ^ 0x9132D835)) >> v10) + ((a3 & (v16 & 0x2265B06A ^ 0x9132D835)) << v22);
  v32 = LODWORD(STACK[0x6980]) | (LODWORD(STACK[0x6900]) << (((v8 ^ 0x86) + 37) ^ 0xDE));
  LODWORD(STACK[0x6810]) = v32;
  v33 = v32 ^ a6 ^ v28;
  v34 = v12;
  v36 = a6 ^ v12;
  v37 = LODWORD(STACK[0x6A00]) ^ a6 ^ v12 ^ v33;
  v38 = v11;
  v39 = v11 ^ v34;
  v40 = v37 ^ v11 ^ v34;
  LODWORD(STACK[0x6980]) = v27;
  v41 = 4 * ((unsigned __int16)(v40 ^ v27) >> 8);
  STACK[0x68F0] = v41;
  v42 = v29 ^ v31 ^ __ROR4__(*(_DWORD *)(v26 + v41), 24);
  v43 = 4 * ((v40 ^ v27) >> 24);
  STACK[0x68E0] = v43;
  v44 = v42 ^ __ROR4__(*(_DWORD *)(v26 + v43), 8);
  v45 = 4 * ((v40 ^ v27) >> 16);
  STACK[0x68D0] = v45;
  v46 = __ROR4__(*(_DWORD *)(v26 + v45), 16);
  v47 = 4 * (v40 ^ v27);
  STACK[0x68C0] = v47;
  v48 = v44 ^ v46 ^ *(_DWORD *)(v26 + v47);
  v49 = v48 ^ v32;
  LODWORD(v50) = (v34 << 12) ^ 0x9BA1091A ^ __ROR4__(v40 ^ v48 ^ v32, 20);
  HIDWORD(v50) = v50;
  LODWORD(v47) = v50 >> 12;
  v51 = v37 ^ v27 ^ 0x6439BA10 ^ v47;
  v52 = 4 * BYTE1(v51);
  STACK[0x68B0] = v52;
  v53 = ((((v24 & 0x581BD26 ^ 0x2C0DE93) & v6) >> v23) | (((v24 & 0x581BD26 ^ 0x2C0DE93) & a3) << v22)) ^ (((v19 & (v16 & 0xA781BD26 ^ 0x53C0DE93)) >> v23) | ((a3 & (v16 & 0xA781BD26 ^ 0x53C0DE93)) << v22)) ^ __ROR4__(*(_DWORD *)(v26 + v52), 24);
  v54 = 4 * BYTE2(v51);
  STACK[0x6860] = v54;
  LODWORD(v50) = __ROR4__(*(_DWORD *)(v26 + v54), 16);
  v55 = v48 ^ v28;
  v56 = 4 * (v37 ^ v27 ^ 0x10 ^ v47);
  STACK[0x6880] = v56;
  LODWORD(v56) = v53 ^ v50 ^ v55 ^ *(_DWORD *)(v26 + v56);
  v57 = 4 * HIBYTE(v51);
  STACK[0x6830] = v57;
  v58 = v56 ^ __ROR4__(*(_DWORD *)(v26 + v57), 8);
  LODWORD(v56) = ((((v24 & 0xD69F278C ^ 0xEB4F93C6) & v25) >> v23) | (((v24 & 0xD69F278C ^ 0xEB4F93C6) & a3) << v22)) ^ (((v19 & (v16 & 0x189F278C ^ 0x8C4F93C6)) >> v23) | ((a3 & (v16 & 0x189F278C ^ 0x8C4F93C6)) << v22));
  LODWORD(STACK[0x6760]) = v47 ^ v34;
  v59 = v49 ^ v34 ^ a6 ^ v58;
  LODWORD(STACK[0x69A0]) = v58;
  LODWORD(STACK[0x67F0]) = v59;
  LODWORD(v54) = LODWORD(STACK[0x6720]) ^ v47 ^ v34 ^ 0x96CB48E2 ^ v59;
  v60 = v36;
  LODWORD(v47) = v51 ^ v36 ^ v54;
  v61 = v54;
  LODWORD(STACK[0x66D8]) = v54;
  v62 = 4 * BYTE2(v47);
  STACK[0x68A0] = v62;
  LODWORD(v56) = v56 ^ __ROR4__(*(_DWORD *)(v26 + v62), 16);
  v63 = 4 * BYTE1(v47);
  STACK[0x6890] = v63;
  v64 = 4 * v47;
  STACK[0x6870] = v64;
  LODWORD(v56) = v56 ^ __ROR4__(*(_DWORD *)(v26 + v63), 24) ^ *(_DWORD *)(v26 + v64);
  v65 = 4 * BYTE3(v47);
  STACK[0x6850] = v65;
  LODWORD(v65) = v56 ^ __ROR4__(*(_DWORD *)(v26 + v65), 8);
  LODWORD(v56) = v49 ^ v34 ^ v38 ^ v65;
  v66 = v51 ^ v34 ^ v56;
  v67 = v30 & 0x6B607DDE ^ 0xB5B03EEF;
  LODWORD(v57) = (v19 & v67) >> v23;
  LODWORD(v63) = v66 >> (v57 & 0x10) >> (v57 & 0x10 ^ 0x10);
  v68 = v57 ^ ((a3 & v67) << v22) ^ ((((v24 & 0x1B607DDE ^ 0x8DB03EEF) & v25) >> v23) | (((v24 & 0x1B607DDE ^ 0x8DB03EEF) & a3) << v22));
  v69 = 4 * v66;
  STACK[0x6840] = v69;
  v70 = v68 ^ *(_DWORD *)(v26 + v69);
  v71 = 4 * HIBYTE(v66);
  STACK[0x6820] = v71;
  LODWORD(v69) = *(_DWORD *)(v26 + 4 * v63);
  LODWORD(v50) = __ROR4__(*(_DWORD *)(v26 + v71), 8);
  LODWORD(STACK[0x6750]) = v65 ^ v58;
  v72 = v70 ^ v50 ^ v65 ^ v58 ^ __ROR4__(v69, 16);
  LODWORD(STACK[0x6900]) = v66;
  v73 = 4 * BYTE1(v66);
  STACK[0x6800] = v73;
  LODWORD(v64) = v72 ^ __ROR4__(*(_DWORD *)(v26 + v73), 24);
  v74 = v56 ^ v61;
  LODWORD(STACK[0x66D0]) = v56 ^ v61;
  v75 = v65 ^ v49;
  LODWORD(STACK[0x69B0]) = v65 ^ v49;
  LODWORD(v65) = v64 ^ v65 ^ v49 ^ v38;
  LODWORD(STACK[0x67A0]) = v65;
  v76 = v60;
  LODWORD(v56) = v65 ^ v60 ^ v74;
  LODWORD(v65) = v66 ^ v38 ^ v56;
  LODWORD(STACK[0x6708]) = v65 ^ v34;
  LODWORD(v73) = ((((v24 & 0x31EDEB4A ^ 0x98F6F5A5) & v19) >> v23) + (((v24 & 0x31EDEB4A ^ 0x98F6F5A5) & a3) << v22)) ^ (((v25 & (v30 & 0x43EDEB4A ^ 0xA1F6F5A5)) >> v23) | ((a3 & (v30 & 0x43EDEB4A ^ 0xA1F6F5A5)) << v22)) ^ __ROR4__(*(_DWORD *)(v26 + 4 * ((unsigned __int16)(v65 ^ v34) >> 8)), 24);
  v77 = 4 * ((v65 ^ v34) >> 16);
  STACK[0x66F0] = v77;
  LODWORD(v73) = v73 ^ __ROR4__(*(_DWORD *)(v26 + v77), 16);
  v78 = 4 * ((v65 ^ v34) >> 24);
  STACK[0x66C0] = v78;
  LODWORD(v50) = __ROR4__(*(_DWORD *)(v26 + v78), 8);
  v79 = 4 * (v65 ^ v34);
  STACK[0x66E8] = v79;
  LODWORD(v79) = *(_DWORD *)(v26 + v79);
  v80 = v64;
  LODWORD(STACK[0x64A0]) = v64;
  LODWORD(v73) = v73 ^ v50 ^ v79 ^ v64;
  LODWORD(v64) = v56 ^ v34;
  LODWORD(STACK[0x66A0]) = v56 ^ v34;
  LODWORD(v56) = v80 ^ v75;
  v81 = v73 ^ v80 ^ v75;
  LODWORD(STACK[0x66C8]) = v81;
  LODWORD(v56) = v64 ^ v56 ^ v73 ^ v34;
  v82 = (v34 - ((v73 ^ v34) & 0x800000)) ^ (v73 ^ v34) & 0xFF7FFFFF;
  LODWORD(STACK[0x69C0]) = v82;
  LODWORD(v65) = v56 ^ v65;
  v83 = 4 * BYTE3(v65);
  STACK[0x67D0] = v83;
  LODWORD(v50) = __ROR4__(*(_DWORD *)(v26 + v83), 8);
  v84 = 4 * v65;
  STACK[0x6790] = v84;
  LODWORD(v73) = (((((v24 & 0xB3B34FAC ^ 0xD9D9A7D6) & v19) >> v23) ^ (((v24 & 0xB3B34FAC ^ 0xD9D9A7D6) & a3) << v22))
                + 2
                * ((((v24 & 0xB3B34FAC ^ 0xD9D9A7D6) & v19) >> v23) & (((v24 & 0xB3B34FAC ^ 0xD9D9A7D6) & a3) << v22))) ^ (((v25 & (v30 & 0xF1B34FAC ^ 0x78D9A7D6)) >> v23) + ((a3 & (v30 & 0xF1B34FAC ^ 0x78D9A7D6)) << v22)) ^ v50 ^ *(_DWORD *)(v26 + v84);
  v85 = 4 * BYTE1(v65);
  STACK[0x6780] = v85;
  LODWORD(v50) = __ROR4__(*(_DWORD *)(v26 + v85), 24);
  v86 = 4 * BYTE2(v65);
  STACK[0x6740] = v86;
  v87 = a6;
  v88 = v56 ^ a6;
  LODWORD(v56) = v73 ^ v50 ^ (*(_DWORD *)(v26 + v86) << 16) ^ HIWORD(*(_DWORD *)(v26 + v86)) ^ v82;
  LODWORD(v73) = v81 ^ v34 ^ v56;
  LODWORD(STACK[0x6678]) = v56;
  BYTE1(v82) = BYTE1(v88) ^ BYTE1(v34);
  LODWORD(STACK[0x6490]) = v88 ^ v34;
  LODWORD(v65) = v65 ^ v88 ^ v34 ^ v73;
  LODWORD(STACK[0x5EF8]) = v76;
  v89 = 4 * ((v65 ^ v76) >> 24);
  STACK[0x66B0] = v89;
  LODWORD(v86) = ((((v24 & 0xE0E8EA62 ^ 0x70747531) & v19) >> v23) | (((v24 & 0xE0E8EA62 ^ 0x70747531) & a3) << v22)) ^ (((v25 & (v30 & 0x92E8EA62 ^ 0xC9747531)) >> v23) | ((a3 & (v30 & 0x92E8EA62 ^ 0xC9747531)) << v22)) ^ __ROR4__(*(_DWORD *)(v26 + v89), 8);
  v90 = 4 * ((v65 ^ v76) >> 16);
  STACK[0x66A8] = v90;
  v91 = 4 * ((unsigned __int16)(v65 ^ v76) >> 8);
  STACK[0x6698] = v91;
  LODWORD(v86) = v86 ^ __ROR4__(*(_DWORD *)(v26 + v90), 16);
  LODWORD(v50) = __ROR4__(*(_DWORD *)(v26 + v91), 24);
  v92 = 4 * (v65 ^ v76);
  STACK[0x6668] = v92;
  LODWORD(v86) = v86 ^ v50 ^ *(_DWORD *)(v26 + v92) ^ v56;
  LODWORD(STACK[0x69D0]) = v73 ^ v88;
  LODWORD(STACK[0x6670]) = v73 ^ v38;
  LODWORD(v56) = v73 ^ v38 ^ v87 ^ v86;
  LODWORD(STACK[0x6730]) = v86;
  LODWORD(v91) = v34;
  v93 = v56 & 0xD40777E7 ^ v34 & 0xD40357E7 | v56 & 0x2BF88818 ^ v34 & 0x21980818;
  LODWORD(STACK[0x6660]) = v93;
  LODWORD(v73) = v56 ^ v73 ^ v88;
  LODWORD(STACK[0x6658]) = v73;
  LODWORD(v56) = v65 ^ v34;
  LODWORD(STACK[0x5EC0]) = v39;
  LODWORD(v65) = v73 ^ v39;
  v94 = v56 ^ v73 ^ v39;
  LODWORD(v92) = v65;
  LODWORD(STACK[0x67E0]) = v65;
  v95 = 4 * BYTE1(v94);
  STACK[0x6548] = v95;
  v96 = 4 * v94;
  LODWORD(v95) = (((v24 & 0xD8BE7190 ^ 0x6C5F38C8) & v25) >> v23) ^ (((v24 & 0xD8BE7190 ^ 0x6C5F38C8) & a3) << v22) ^ (((v19 & (v30 & 0xACBE7190 ^ 0xD65F38C8)) >> v23) + ((a3 & (v30 & 0xACBE7190 ^ 0xD65F38C8)) << v22)) ^ HIBYTE(*(_DWORD *)(v26 + v95)) ^ (*(_DWORD *)(v26 + v95) << 8) ^ *(_DWORD *)(v26 + v96) ^ v86 ^ __ROR4__(*(_DWORD *)(v26 + 4 * BYTE2(v94)), 16);
  v97 = 4 * BYTE3(v94);
  STACK[0x6540] = v97;
  v98 = __PAIR64__(v94, __ROR4__(*(_DWORD *)(v26 + v97), 8));
  LODWORD(v86) = v95 ^ v98;
  LODWORD(v95) = v95 ^ v98 ^ v34 ^ v93;
  LODWORD(STACK[0x6690]) = v86;
  LODWORD(STACK[0x69E0]) = v95;
  LODWORD(v98) = v94;
  LODWORD(v89) = v76 ^ __ROR4__((v98 >> 7) ^ __ROR4__(v95 ^ v92, 7) ^ 0x8CEF21A5, 25) ^ 0x7790D2C6;
  LODWORD(STACK[0x66F8]) = v89;
  v99 = 4 * BYTE1(v89);
  STACK[0x6650] = v99;
  LODWORD(v98) = __ROR4__(*(_DWORD *)(v26 + v99), 24);
  v100 = 4 * v89;
  STACK[0x6470] = v100;
  v101 = 4 * BYTE2(v89);
  STACK[0x66B8] = v101;
  LODWORD(v99) = ((((v24 & 0xC5BEC392 ^ 0xE2DF61C9) & v25) >> v23) + (((v24 & 0xC5BEC392 ^ 0xE2DF61C9) & a3) << v22)) ^ (((v19 & (v30 & 0x19BEC392 ^ 0x8CDF61C9)) >> v23) | ((a3 & (v30 & 0x19BEC392 ^ 0x8CDF61C9)) << v22)) ^ v98 ^ *(_DWORD *)(v26 + v100) ^ (*(_DWORD *)(v26 + v101) << 16) ^ HIWORD(*(_DWORD *)(v26 + v101));
  v102 = 4 * BYTE3(v89);
  STACK[0x6478] = v102;
  LODWORD(STACK[0x6700]) = v99 ^ v86 ^ __ROR4__(*(_DWORD *)(v26 + v102), 8);
  v103 = STACK[0x6910];
  v104 = *(unsigned int *)(STACK[0x6910] + 4 * BYTE1(v82));
  STACK[0x6488] = v104;
  v105 = v94 >> (v104 & 0x10) >> (v104 & 0x10 ^ 0x10);
  v106 = *(_DWORD *)(v103 + 4 * ((v37 ^ v34) >> 16));
  LODWORD(v86) = *(_DWORD *)(v103 + 4 * ((v37 ^ v34) >> 24));
  LODWORD(v101) = STACK[0x1BD0];
  LODWORD(v102) = v24 & 0x57575756 ^ LODWORD(STACK[0x1BD0]);
  v107 = (v102 & a3) << v22;
  LODWORD(v104) = (v102 & v25) >> v23;
  LODWORD(STACK[0x616C]) = v104;
  LODWORD(STACK[0x6170]) = v107;
  LODWORD(STACK[0x6468]) = v104 ^ v107 ^ v106 ^ __ROR4__(v86, 24) ^ __ROR4__(*(_DWORD *)(v103+ 4* ((unsigned __int16)(v37 ^ v34) >> 8)), 8) ^ __ROR4__(*(_DWORD *)(v103+ 4* (v37 ^ v34)), 16);
  LODWORD(v96) = *(_DWORD *)(v103 + v96);
  v108 = v24 & 0xDBDBDBDA ^ 0xEDEDEDED;
  LODWORD(v26) = (v108 & a3) << v22;
  LODWORD(v104) = (v108 & v19) >> v23;
  LODWORD(STACK[0x62C8]) = v104;
  LODWORD(v104) = v104 ^ v26 ^ __ROR4__(v96, 16) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6548]), 8) ^ *(_DWORD *)(v103 + 4 * v105);
  LODWORD(v98) = __ROR4__(*(_DWORD *)(v103 + STACK[0x6540]), 24);
  LOBYTE(v82) = v104 ^ v98;
  LODWORD(STACK[0x6460]) = v104 ^ v98;
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * v33);
  LODWORD(v102) = (v102 & v19) >> v23;
  LODWORD(STACK[0x5E90]) = v102;
  LODWORD(STACK[0x6458]) = (v102 + v107) ^ __ROR4__(v104, 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * HIBYTE(v33)), 24) ^ *(_DWORD *)(v103 + 4 * BYTE2(v33)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v33)), 8);
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * v28);
  LODWORD(v102) = v30 & 0x57575756 ^ v101;
  LODWORD(v105) = (a3 & v102) << v22;
  LODWORD(v96) = (v25 & v102) >> v23;
  LODWORD(STACK[0x5EC8]) = v96;
  v109 = v105;
  LODWORD(STACK[0x5F10]) = v105;
  LODWORD(STACK[0x6448]) = v96 ^ v105 ^ __ROR4__(v104, 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * HIBYTE(v28)), 24) ^ *(_DWORD *)(v103 + 4 * BYTE2(v28)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v28)), 8);
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * v55);
  LODWORD(v86) = v24 & 0xD1D1D1D0 ^ 0xE8E8E8E8;
  LODWORD(STACK[0x6548]) = v86;
  LODWORD(v105) = (v86 & v25) >> v23;
  LODWORD(STACK[0x5E80]) = v105;
  LODWORD(v96) = (v86 & a3) << v22;
  LODWORD(STACK[0x6300]) = v96;
  LODWORD(v105) = v105 | v96;
  LODWORD(STACK[0x5E98]) = v105;
  v110 = LODWORD(STACK[0x6810]) ^ v105;
  LODWORD(STACK[0x6430]) = v110;
  LODWORD(v105) = v24 & 0x2E2E2E2E ^ 0x17171717;
  v111 = (v105 & a3) << v22;
  LODWORD(v101) = ((v105 & v19) >> v23) + v111;
  v112 = 16843009 * (v82 - v110 - 95);
  LODWORD(v86) = v112 ^ (2 * (v112 & STACK[0x6A50]));
  v113 = (v86 & a3) << v22;
  v114 = (v86 & v19) >> v23;
  LODWORD(STACK[0x62E8]) = v101;
  LODWORD(STACK[0x6810]) = v113 ^ v114 ^ v101 ^ __ROR4__(v104, 16) ^ *(_DWORD *)(v103 + 4 * BYTE2(v55)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v55)), 8) ^ __ROR4__(*(_DWORD *)(v103 + 4 * HIBYTE(v55)), 24);
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * BYTE2(v49));
  LODWORD(STACK[0x5DB8]) = v30 & 0x2E2E2E2E;
  LODWORD(v101) = v30 & 0x2E2E2E2E ^ 0x17171717;
  v115 = (a3 & v101) << v22;
  LODWORD(STACK[0x6198]) = v115;
  LODWORD(v96) = (v25 & v101) >> v23;
  LODWORD(STACK[0x6120]) = v96;
  LODWORD(STACK[0x6428]) = v96 ^ v115 ^ v104 ^ __ROR4__(*(_DWORD *)(v103 + 4 * v49), 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * HIBYTE(v49)), 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v49)), 8);
  LODWORD(v104) = LODWORD(STACK[0x6760]) ^ 0x6439BA10;
  LODWORD(v89) = *(_DWORD *)(v103 + 4 * BYTE3(v104));
  v116 = v19;
  LODWORD(v96) = (v19 & v101) >> v23;
  LODWORD(STACK[0x6160]) = v96;
  LODWORD(v101) = (v96 + v115) ^ __ROR4__(v89, 24);
  LODWORD(v98) = __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v104)), 8);
  LODWORD(v89) = *(_DWORD *)(v103 + 4 * BYTE2(v104));
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * v104);
  v117 = (v86 & v25) >> v23;
  v118 = v113 | v117;
  LODWORD(STACK[0x6420]) = v117;
  LODWORD(STACK[0x6438]) = v101 ^ v98 ^ v89 ^ (v113 | v117) ^ __ROR4__(v104, 16);
  LODWORD(v104) = *(_DWORD *)(v103 + STACK[0x68C0]);
  LODWORD(v102) = (v19 & v102) >> v23;
  LODWORD(STACK[0x5EE0]) = v102;
  LODWORD(STACK[0x6418]) = v102 ^ v109 ^ __ROR4__(v104, 16) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x68F0]), 8) ^ *(_DWORD *)(v103 + STACK[0x68D0]) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x68E0]), 24);
  LODWORD(v104) = *(_DWORD *)(v103 + STACK[0x6860]);
  LODWORD(v102) = STACK[0x6A20];
  LODWORD(STACK[0x6450]) = v112;
  LODWORD(v101) = v112 ^ (2 * (v112 & v102));
  LODWORD(v89) = *(_DWORD *)(v103 + STACK[0x6830]);
  LODWORD(v96) = (v105 & v25) >> v23;
  LODWORD(v105) = (v101 & v19) >> v23;
  LOBYTE(v109) = v23;
  v119 = (v101 & a3) << v22;
  LODWORD(STACK[0x5CF8]) = v111;
  LODWORD(STACK[0x5CF0]) = v96;
  LODWORD(v96) = v96 + v111;
  LODWORD(STACK[0x62E0]) = v96;
  v120 = v105;
  LODWORD(STACK[0x6860]) = v105;
  LODWORD(STACK[0x68F0]) = v119 | v105;
  LODWORD(STACK[0x68E0]) = v104 ^ v96 ^ (v119 | v105) ^ __ROR4__(v89, 24) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x68B0]), 8) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6880]), 16);
  LODWORD(v102) = LODWORD(STACK[0x66D8]) ^ v34;
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * BYTE3(v102));
  LODWORD(STACK[0x68B0]) = v102;
  LODWORD(v105) = *(_DWORD *)(v103 + 4 * v102);
  v121 = v24 & 0xB4B4B4B4 ^ 0x5A5A5A5A;
  v122 = (v121 & v116) >> v109;
  LODWORD(STACK[0x5D38]) = v121;
  v123 = (v121 & a3) << v22;
  v124 = v119 ^ v120;
  LODWORD(STACK[0x6880]) = v124;
  LODWORD(STACK[0x66D8]) = v122 + v123;
  LODWORD(STACK[0x6410]) = v124 ^ (v122 + v123) ^ __ROR4__(v104, 24) ^ __ROR4__(v105, 16) ^ (*(_DWORD *)(v103 + 4 * BYTE1(v102)) << 24) ^ (*(_DWORD *)(v103 + 4 * BYTE1(v102)) >> 8);
  LODWORD(v89) = STACK[0x69A0];
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * BYTE1(LODWORD(STACK[0x69A0])));
  LODWORD(STACK[0x6078]) = v122;
  LODWORD(STACK[0x6158]) = v123;
  LODWORD(STACK[0x68C0]) = v114 + v113;
  LODWORD(STACK[0x6408]) = (v114 + v113) ^ (v122 | v123) ^ __ROR4__(v104, 8) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v89)), 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v89), 16);
  LODWORD(v102) = LODWORD(STACK[0x67F0]) ^ v34;
  LODWORD(v86) = v30 & 0xB4B4B4B4 ^ 0x5A5A5A5A;
  LODWORD(STACK[0x6540]) = v86;
  v125 = v25;
  LOBYTE(v34) = v109;
  LODWORD(v96) = (v25 & v86) >> v109;
  LODWORD(v105) = (a3 & v86) << v22;
  v126 = (v101 & v25) >> v109;
  LODWORD(STACK[0x6760]) = v105;
  LODWORD(v101) = v96;
  LODWORD(STACK[0x62D8]) = v96;
  LODWORD(STACK[0x68D0]) = v102;
  LODWORD(STACK[0x67F0]) = v96 ^ v105 ^ v126 ^ v119 ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v102)), 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v102)), 8) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v102), 16);
  LODWORD(v96) = v24 & 0x7B7B7B7A ^ 0xBDBDBDBD;
  LODWORD(STACK[0x6538]) = v96;
  LODWORD(v102) = STACK[0x6750];
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * LODWORD(STACK[0x6750]));
  v127 = (v96 & v25) >> v34;
  v128 = (v96 & a3) << v22;
  LODWORD(STACK[0x62F0]) = v128;
  LODWORD(STACK[0x62A0]) = v127 | v128;
  LODWORD(STACK[0x6830]) = (v127 | v128) ^ __ROR4__(v104, 16) ^ *(_DWORD *)(v103 + 4 * BYTE2(v102)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v102)), 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v102)), 8);
  v129 = v117 + v113;
  LODWORD(STACK[0x63F0]) = v113;
  LODWORD(STACK[0x68A0]) = v129 ^ (v101 | v105) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6850]), 24) ^ *(_DWORD *)(v103 + STACK[0x68A0]) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6870]), 16) ^ (*(_DWORD *)(v103 + STACK[0x6890]) >> 8) ^ (*(_DWORD *)(v103 + STACK[0x6890]) << 24);
  LODWORD(v102) = STACK[0x69B0];
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * HIBYTE(LODWORD(STACK[0x69B0])));
  LODWORD(STACK[0x5D28]) = v30 & 0x7B7B7B7A;
  LODWORD(v105) = v30 & 0x7B7B7B7A ^ 0xBDBDBDBD;
  LODWORD(STACK[0x5E78]) = v105;
  LODWORD(v86) = (a3 & v105) << v22;
  LODWORD(STACK[0x61BC]) = v86;
  LODWORD(v105) = (v116 & v105) >> v34;
  LODWORD(STACK[0x5EB0]) = v105;
  LODWORD(STACK[0x63F8]) = (v105 + v86) ^ __ROR4__(v104, 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v102), 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v102)), 8);
  LODWORD(v102) = STACK[0x66D0];
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * BYTE2(LODWORD(STACK[0x66D0])));
  LODWORD(STACK[0x5D90]) = v127;
  LODWORD(STACK[0x5DA8]) = v127 ^ v128;
  LODWORD(STACK[0x6400]) = v119 ^ v126;
  LODWORD(STACK[0x6890]) = v119 ^ v126 ^ v127 ^ v128 ^ v104 ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v102)), 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v102)), 8) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v102), 16);
  LODWORD(v104) = v30 & 0x3B3B3B3A ^ 0x9D9D9D9D;
  LODWORD(v102) = STACK[0x64A0];
  v130 = *(_DWORD *)(v103 + 4 * LODWORD(STACK[0x64A0]));
  LODWORD(v89) = (v116 & v104) >> v34;
  LODWORD(STACK[0x62D0]) = v89;
  v131 = (a3 & v104) << v22;
  LODWORD(STACK[0x6750]) = v131;
  LODWORD(STACK[0x5D50]) = v89 + v131;
  LODWORD(STACK[0x6440]) = v113 ^ v114;
  LODWORD(STACK[0x6870]) = v113 ^ v114 ^ (v89 + v131) ^ __ROR4__(v130, 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v102)), 24) ^ *(_DWORD *)(v103 + 4 * BYTE2(v102)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v102)), 8);
  v132 = *(_DWORD *)(v103 + STACK[0x6800]);
  LODWORD(STACK[0x5DB0]) = v105 + v86;
  LODWORD(STACK[0x6820]) = v113 ^ v114 ^ (v105 + v86) ^ __ROR4__(v132, 8) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6820]), 24) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6840]), 16);
  LODWORD(v102) = STACK[0x66A0];
  v133 = *(_DWORD *)(v103 + 4 * BYTE1(LODWORD(STACK[0x66A0])));
  LODWORD(v104) = (v125 & v104) >> v34;
  LODWORD(STACK[0x66D0]) = v104;
  LODWORD(v104) = v104 | v131;
  LODWORD(STACK[0x5D48]) = v104;
  LODWORD(STACK[0x6850]) = v104 ^ __ROR4__(v133, 8) ^ *(_DWORD *)(v103 + 4 * BYTE2(v102)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v102), 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v102)), 24);
  LODWORD(v104) = v24 & 0x3B3B3B3A ^ 0x9D9D9D9D;
  v134 = *(_DWORD *)(v103 + STACK[0x66C0]);
  LODWORD(v86) = (v104 & v116) >> v34;
  v135 = a3;
  LODWORD(v105) = (v104 & a3) << v22;
  LODWORD(STACK[0x5D18]) = v86;
  LODWORD(v86) = v86 | v105;
  LODWORD(STACK[0x6118]) = v86;
  LODWORD(v101) = (LODWORD(STACK[0x6708]) >> (a3 & 8) >> (a3 & 8 ^ 8));
  LODWORD(STACK[0x6800]) = v86 ^ __ROR4__(v134, 24) ^ *(_DWORD *)(v103 + STACK[0x66F0]) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x66E8]), 16) ^ (*(_DWORD *)(v103 + 4 * v101) << 24) ^ (*(_DWORD *)(v103 + 4 * v101) >> 8);
  LODWORD(v102) = STACK[0x67A0];
  v136 = *(_DWORD *)(v103 + 4 * BYTE2(LODWORD(STACK[0x67A0])));
  LODWORD(v101) = *(_DWORD *)(v103 + 4 * HIBYTE(LODWORD(STACK[0x67A0])));
  LODWORD(v104) = (v104 & v125) >> v34;
  LODWORD(STACK[0x5F00]) = v105;
  LODWORD(STACK[0x5EB8]) = v104;
  LODWORD(v104) = v104 + v105;
  LODWORD(STACK[0x5EA8]) = v104;
  LODWORD(STACK[0x67A0]) = v136 ^ v104 ^ __ROR4__(v101, 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v102)), 8) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v102), 16);
  LODWORD(STACK[0x61DC]) = v30;
  LODWORD(v102) = v30 & 0x2C2C2C2C ^ 0x16161616;
  LODWORD(STACK[0x64A0]) = v102;
  LODWORD(v96) = STACK[0x69C0];
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * HIBYTE(LODWORD(STACK[0x69C0])));
  v137 = (v116 & v102) >> v34;
  LODWORD(v102) = (a3 & v102) << v22;
  LODWORD(STACK[0x6150]) = v102;
  LODWORD(STACK[0x6070]) = v137 + v102;
  LODWORD(STACK[0x66F0]) = (v137 + v102) ^ __ROR4__(v104, 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v96), 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v96)), 8);
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * BYTE1(LODWORD(STACK[0x66C8])));
  LODWORD(v89) = STACK[0x66C8];
  v138 = *(_DWORD *)(v103 + 4 * LODWORD(STACK[0x66C8]));
  LODWORD(v96) = v24 & 0x2C2C2C2C ^ 0x16161616;
  LODWORD(STACK[0x6498]) = v96;
  LODWORD(v86) = (v96 & v125) >> v34;
  v139 = (v96 & a3) << v22;
  LODWORD(v105) = STACK[0x6678];
  LODWORD(v101) = *(_DWORD *)(v103 + 4 * LODWORD(STACK[0x6678]));
  LODWORD(STACK[0x66E8]) = v86 ^ v139 ^ __ROR4__(v104, 8) ^ __ROR4__(v138, 16) ^ *(_DWORD *)(v103 + 4 * BYTE2(v89)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v89)), 24);
  LODWORD(STACK[0x5DE8]) = v108;
  LODWORD(v96) = (v108 & v125) >> v34;
  LODWORD(STACK[0x5EA0]) = v96;
  v140 = v119 + v126;
  LODWORD(STACK[0x6148]) = v26 | v96;
  LODWORD(STACK[0x6840]) = (v119 + v126) ^ (v26 | v96) ^ __ROR4__(v101, 16) ^ (*(_DWORD *)(v103 + 4 * BYTE1(v105)) >> 8) ^ (*(_DWORD *)(v103 + 4 * BYTE1(v105)) << 24) ^ *(_DWORD *)(v103 + 4 * BYTE2(v105)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v105)), 24);
  LODWORD(v105) = LODWORD(STACK[0x6670]) ^ v91;
  v141 = v30 & 0xDBDBDBDA ^ 0xEDEDEDED;
  LODWORD(v101) = (v141 ^ STACK[0x5F18] & v141) << v22;
  v142 = (v116 & v141) >> v34;
  LODWORD(STACK[0x6190]) = v142;
  v143 = v113 | v114;
  LODWORD(STACK[0x63E0]) = (v113 | v114) ^ (v142 | v101) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v105), 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v105)), 24) ^ (*(_DWORD *)(v103 + 4 * BYTE1(v105)) >> 8) ^ (*(_DWORD *)(v103 + 4 * BYTE1(v105)) << 24);
  LODWORD(v101) = *(_DWORD *)(v103 + STACK[0x67D0]);
  LODWORD(STACK[0x5D40]) = v137;
  LODWORD(STACK[0x66A0]) = v137 ^ v102 ^ __ROR4__(v101, 24) ^ *(_DWORD *)(v103 + STACK[0x6740]) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6780]), 8) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6790]), 16);
  LODWORD(v102) = STACK[0x6490];
  LODWORD(v101) = *(_DWORD *)(v103 + 4 * BYTE2(LODWORD(STACK[0x6490])));
  LODWORD(STACK[0x6110]) = v86;
  LODWORD(STACK[0x6708]) = v139;
  LODWORD(STACK[0x6678]) = v86 + v139;
  LODWORD(STACK[0x6780]) = v101 ^ (v86 + v139) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v102)), 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v102), 16) ^ __ROR4__(STACK[0x6488], 8);
  LODWORD(STACK[0x6790]) = v119 | v126;
  LODWORD(v102) = STACK[0x69D0];
  LODWORD(v101) = *(_DWORD *)(v103 + 4 * BYTE1(LODWORD(STACK[0x69D0])));
  LODWORD(STACK[0x62F8]) = v26;
  LODWORD(v86) = LODWORD(STACK[0x62C8]) | v26;
  LODWORD(STACK[0x6670]) = v86;
  LODWORD(STACK[0x63E8]) = (v119 | v126) ^ v86 ^ __ROR4__(v101, 8) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v102), 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v102)), 24);
  LODWORD(v89) = 67372036 * LODWORD(STACK[0x5EE8]);
  LODWORD(STACK[0x5D68]) = v89;
  LODWORD(STACK[0x67D0]) = (v113 | v114) ^ (((unint64_t)(v125 & ((v30 & 0xDBDBDBDA)
                                                                      - 303174163
                                                                      - (v89 & 0x93939390))) >> v34) | ((v135 & ((v30 & 0xDBDBDBDA) - 303174163 - (v89 & 0x93939390))) << v22)) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6698]), 8) ^ (*(_DWORD *)(v103 + STACK[0x6668]) << 16) ^ HIWORD(*(_DWORD *)(v103 + STACK[0x6668])) ^ *(_DWORD *)(v103 + STACK[0x66A8]) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x66B0]), 24);
  v144 = STACK[0x6730];
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * HIBYTE(LODWORD(STACK[0x6730])));
  LODWORD(v102) = (v135 & v141) << v22;
  LODWORD(STACK[0x6188]) = v102;
  LODWORD(v86) = STACK[0x6660];
  LODWORD(v101) = *(_DWORD *)(v103 + 4 * LODWORD(STACK[0x6660]));
  v145 = v142 ^ v102 ^ __ROR4__(v104, 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v144)), 8) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v144), 16);
  LODWORD(STACK[0x66C8]) = v96 + v26;
  LODWORD(v89) = (v96 + v26) ^ __ROR4__(v101, 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v86)), 8) ^ *(_DWORD *)(v103 + 4 * BYTE2(v86)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v86)), 24);
  v146 = STACK[0x67E0];
  LODWORD(v104) = *(_DWORD *)(v103 + 4 * BYTE1(LODWORD(STACK[0x67E0])));
  LODWORD(v26) = *(_DWORD *)(v103 + 4 * HIBYTE(LODWORD(STACK[0x67E0])));
  LODWORD(v96) = (v125 & v141) >> v34;
  LODWORD(STACK[0x6108]) = v96;
  LODWORD(STACK[0x60F8]) = v96 + v102;
  LODWORD(v101) = (v96 + v102) ^ __ROR4__(v104, 8) ^ __ROR4__(v26, 24) ^ __ROR4__(*(_DWORD *)(v103 + 4* v146), 16);
  v147 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6A40]);
  v148 = *(_DWORD *)(v103 + 4 * ((v147 ^ v91) >> 16));
  LODWORD(v102) = STACK[0x6A50] & 0x6F6F6F6F;
  LODWORD(STACK[0x6488]) = v102;
  LODWORD(v102) = (2 * v102) ^ 0x6F6F6F6F;
  LODWORD(STACK[0x6490]) = v102;
  LODWORD(v104) = (v135 & v102) << LODWORD(STACK[0x6A80]);
  LODWORD(v86) = (v125 & v102) >> v34;
  LODWORD(STACK[0x5D78]) = v86 | v104;
  LODWORD(v96) = v148 ^ (v86 | v104) ^ __ROR4__(*(_DWORD *)(v103 + 4 * ((unsigned __int16)(v147 ^ v91) >> 8)), 8) ^ __ROR4__(*(_DWORD *)(v103 + 4 * (v147 ^ v91)), 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * ((v147 ^ v91) >> 24)), 24);
  LODWORD(v26) = LODWORD(STACK[0x6658]) ^ v147;
  v149 = *(_DWORD *)(v103 + 4 * BYTE3(v26));
  LODWORD(STACK[0x66C0]) = v104;
  LODWORD(STACK[0x6290]) = v86;
  LODWORD(v104) = v86 + v104;
  LODWORD(STACK[0x60F0]) = v104;
  v150 = v104 ^ __ROR4__(v149, 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v26)), 8) ^ *(_DWORD *)(v103 + 4 * BYTE2(v26)) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v26), 16);
  LODWORD(v104) = v24 & 0xDEDEDEDE ^ 0x6F6F6F6F;
  LODWORD(STACK[0x6480]) = v104;
  LODWORD(v102) = STACK[0x6690];
  v151 = *(_DWORD *)(v103 + 4 * BYTE2(LODWORD(STACK[0x6690])));
  LODWORD(v91) = STACK[0x6A30];
  v152 = (v104 & STACK[0x6A30]) >> v34;
  LODWORD(v104) = (v104 & v135) << LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x6740]) = v104;
  LODWORD(STACK[0x6140]) = v152;
  LODWORD(STACK[0x66A8]) = v152 ^ v104 ^ v151 ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE3(v102)), 24) ^ __ROR4__(*(_DWORD *)(v103 + 4 * v102), 16) ^ __ROR4__(*(_DWORD *)(v103 + 4 * BYTE1(v102)), 8);
  LODWORD(STACK[0x6698]) = v152 ^ v104 ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6470]), 16) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6478]), 24) ^ __ROR4__(*(_DWORD *)(v103 + STACK[0x6650]), 8);
  LODWORD(STACK[0x61C0]) = v24;
  v153 = v24 & 0xB7B7B7B6 ^ 0xDBDBDBDB;
  v154 = STACK[0x61DC];
  v155 = STACK[0x61DC] & 0xB7B7B7B6 ^ 0xDBDBDBDB;
  v156 = v119 + LODWORD(STACK[0x6860]);
  LODWORD(STACK[0x6860]) = LODWORD(STACK[0x6410]) ^ *(_DWORD *)(v103
                                                              + 4 * BYTE2(LODWORD(STACK[0x68B0])));
  LODWORD(STACK[0x68B0]) = LODWORD(STACK[0x6408]) ^ *(_DWORD *)(v103
                                                              + 4 * BYTE2(LODWORD(STACK[0x69A0])));
  v157 = LODWORD(STACK[0x67F0]) ^ *(_DWORD *)(v103 + 4 * BYTE2(LODWORD(STACK[0x68D0])));
  LODWORD(v104) = LODWORD(STACK[0x63F8]) ^ *(_DWORD *)(v103 + 4 * BYTE2(LODWORD(STACK[0x69B0])));
  LODWORD(STACK[0x66B0]) = LODWORD(STACK[0x6820]) ^ *(_DWORD *)(v103
                                                              + 4 * BYTE2(LODWORD(STACK[0x6900])));
  LODWORD(STACK[0x69B0]) = LODWORD(STACK[0x66F0]) ^ *(_DWORD *)(v103
                                                              + 4 * BYTE2(LODWORD(STACK[0x69C0])));
  LODWORD(STACK[0x6900]) = LODWORD(STACK[0x63E0]) ^ *(_DWORD *)(v103 + 4 * BYTE2(v105));
  LODWORD(STACK[0x6820]) = LODWORD(STACK[0x66A0]) ^ v143;
  LODWORD(STACK[0x66F0]) = LODWORD(STACK[0x67A0]) ^ v140;
  LODWORD(STACK[0x67F0]) = LODWORD(STACK[0x66E8]) ^ v140;
  LODWORD(STACK[0x6780]) ^= v140;
  LODWORD(STACK[0x67A0]) = LODWORD(STACK[0x63E8]) ^ *(_DWORD *)(v103
                                                              + 4 * BYTE2(LODWORD(STACK[0x69D0])));
  LODWORD(STACK[0x69C0]) = v145 ^ *(_DWORD *)(v103 + 4 * BYTE2(v144));
  v158 = *(_DWORD *)(v103 + 4 * BYTE2(v146));
  v159 = v104 ^ v129;
  v160 = LODWORD(STACK[0x6800]) ^ v129;
  LODWORD(STACK[0x69A0]) = v89 ^ v129;
  LODWORD(STACK[0x68D0]) = v101 ^ v158 ^ v129;
  v161 = LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6430]);
  v162 = LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x5E98]) ^ LODWORD(STACK[0x68F0]);
  v163 = LODWORD(STACK[0x6418]) ^ LODWORD(STACK[0x68F0]);
  LODWORD(STACK[0x67E0]) = v96 ^ LODWORD(STACK[0x68F0]);
  LODWORD(v104) = v154 & 0xD1D1D1D0 ^ 0xE8E8E8E8;
  LODWORD(STACK[0x6478]) = v104;
  v164 = v91;
  LOBYTE(v144) = v34;
  LODWORD(v96) = (v91 & v104) >> v34;
  v165 = v135;
  LODWORD(v104) = (v135 & v104) << LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x5ED8]) = v104;
  LODWORD(STACK[0x5D20]) = v96;
  LODWORD(v104) = v96 ^ v104;
  v166 = LODWORD(STACK[0x6A00]) ^ v104;
  LODWORD(STACK[0x5D58]) = v104;
  v167 = v118 ^ v104 ^ LODWORD(STACK[0x6990]);
  v168 = v166 ^ v118;
  v169 = LODWORD(STACK[0x6448]) ^ v118;
  v170 = v118 ^ LODWORD(STACK[0x6468]);
  LODWORD(STACK[0x68F0]) = v150 ^ v118;
  v171 = STACK[0x6400];
  v172 = LODWORD(STACK[0x6428]) ^ LODWORD(STACK[0x6400]);
  LODWORD(v105) = (STACK[0x6A60] & v155) >> v144;
  v173 = v144;
  LODWORD(STACK[0x5D10]) = v155;
  LODWORD(v104) = (v165 & v155) << LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x6178]) = v105 | v104;
  v174 = LODWORD(STACK[0x5EF8]) ^ (v105 | v104) ^ v171;
  v175 = LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x63F0]) ^ LODWORD(STACK[0x6420]);
  LODWORD(STACK[0x5D00]) = v104;
  v176 = STACK[0x6970];
  LODWORD(STACK[0x5D08]) = v105;
  v177 = v104 ^ v176 ^ v105 ^ LODWORD(STACK[0x6790]);
  v178 = STACK[0x6700];
  LODWORD(v104) = LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x69E0]);
  v179 = v104 ^ v26;
  v180 = v177 ^ v104;
  v181 = LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x6880]);
  v182 = LODWORD(STACK[0x6698]) ^ *(_DWORD *)(v103 + STACK[0x66B8]) ^ LODWORD(STACK[0x6880]);
  v183 = STACK[0x6890];
  v184 = LODWORD(STACK[0x6890]) - (v160 + v163);
  LODWORD(STACK[0x69E0]) = v184;
  v185 = v184 + 67;
  LODWORD(STACK[0x62A8]) = v184 - 432178877;
  v186 = ((v184 - 432178877) & 1) == 0;
  if (((v184 - 432178877) & 1) != 0)
    v187 = v168;
  else
    v187 = v161;
  if ((((_BYTE)v184 + 67) & 1) != 0)
    v188 = v161;
  else
    v188 = v167;
  if ((v185 & 1) != 0)
    v168 = v162;
  else
    v167 = v162;
  LODWORD(STACK[0x5D30]) = v153;
  v189 = (v153 & v165) << LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x5ED0]) = v189;
  v190 = (v153 & v164) >> v173;
  LODWORD(STACK[0x6470]) = v190;
  LODWORD(STACK[0x6298]) = v190 ^ v189;
  v191 = LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x68C0]);
  v192 = v174 ^ v179;
  v193 = v190 ^ v189 ^ v176 ^ LODWORD(STACK[0x66F8]) ^ LODWORD(STACK[0x68C0]) ^ v179;
  if (v186)
    v194 = v169;
  else
    v194 = LODWORD(STACK[0x6458]) ^ v156;
  if (v186)
    v195 = v163;
  else
    v195 = v169;
  if (v186)
    v196 = v170;
  else
    v196 = v163;
  if (v186)
    v197 = LODWORD(STACK[0x6458]) ^ v156;
  else
    v197 = v170;
  v198 = LODWORD(STACK[0x6440]) ^ (v190 + v189) ^ v178;
  v199 = STACK[0x6810];
  if (v186)
    v200 = STACK[0x6810];
  else
    v200 = v172;
  LODWORD(STACK[0x6880]) = v200;
  v201 = STACK[0x6438];
  if (v186)
    v202 = v172;
  else
    v202 = STACK[0x6438];
  LODWORD(STACK[0x68C0]) = v202;
  v203 = STACK[0x68E0];
  if (!v186)
    v201 = STACK[0x68E0];
  LODWORD(STACK[0x6830]) = v201;
  if (v186)
    v199 = v203;
  LODWORD(STACK[0x68E0]) = v199;
  v204 = STACK[0x68B0];
  if (v186)
    v205 = STACK[0x68B0];
  else
    v205 = v157;
  LODWORD(STACK[0x6A00]) = v205;
  v206 = STACK[0x6860];
  if (v186)
    v207 = v157;
  else
    v207 = STACK[0x6860];
  LODWORD(STACK[0x69D0]) = v207;
  v208 = STACK[0x68A0];
  if (!v186)
    v206 = STACK[0x68A0];
  LODWORD(STACK[0x69B0]) = v206;
  if (!v186)
    v208 = v204;
  LODWORD(STACK[0x6980]) = v208;
  if (v186)
    v209 = v181;
  else
    v209 = v159;
  LODWORD(STACK[0x6860]) = v209;
  if (v186)
    v210 = STACK[0x66B0];
  else
    v210 = v181;
  if (v186)
    v211 = v183;
  else
    v211 = STACK[0x66B0];
  if (v186)
    v212 = v159;
  else
    v212 = v183;
  v213 = LODWORD(STACK[0x6850]) ^ v156;
  v214 = STACK[0x66F0];
  if (v186)
    v215 = STACK[0x66F0];
  else
    v215 = LODWORD(STACK[0x6850]) ^ v156;
  LODWORD(STACK[0x68A0]) = v215;
  v216 = STACK[0x6870];
  if (v186)
    v217 = STACK[0x6870];
  else
    v217 = v214;
  if (v186)
    v216 = v160;
  LODWORD(STACK[0x6850]) = v216;
  if (!v186)
    v213 = v160;
  v218 = STACK[0x67F0];
  v219 = STACK[0x6780];
  if (v186)
    v220 = STACK[0x67F0];
  else
    v220 = STACK[0x6780];
  v221 = STACK[0x6820];
  if (!v186)
    v219 = STACK[0x6820];
  LODWORD(STACK[0x6870]) = v219;
  if (!v186)
  {
    v221 = v191;
    v191 = v218;
  }
  LODWORD(STACK[0x6990]) = v191;
  v222 = STACK[0x6900];
  v223 = STACK[0x67A0];
  if (v186)
    v224 = STACK[0x6900];
  else
    v224 = STACK[0x67A0];
  LODWORD(STACK[0x66F8]) = v224;
  v225 = STACK[0x6840];
  if (v186)
    v222 = STACK[0x6840];
  LODWORD(STACK[0x6800]) = v222;
  v226 = STACK[0x67D0];
  if (!v186)
    v223 = STACK[0x67D0];
  LODWORD(STACK[0x6668]) = v223;
  if (v186)
    v225 = v226;
  LODWORD(STACK[0x6698]) = v225;
  v227 = STACK[0x67E0];
  if (v186)
    v228 = v175;
  else
    v228 = STACK[0x67E0];
  v229 = STACK[0x68F0];
  if (!v186)
    v227 = STACK[0x68F0];
  LODWORD(STACK[0x6890]) = v227;
  if (v186)
    v230 = v229;
  else
    v230 = v182;
  if (v186)
    v231 = v182;
  else
    v231 = v175;
  if (v186)
    v232 = v180;
  else
    v232 = v192;
  LODWORD(STACK[0x6438]) = v232;
  if (v186)
    v233 = v198;
  else
    v233 = v180;
  LODWORD(STACK[0x6458]) = v233;
  if (v186)
    v234 = v193;
  else
    v234 = v198;
  LODWORD(STACK[0x6428]) = v234;
  if (v186)
    v235 = v192;
  else
    v235 = v193;
  LODWORD(STACK[0x6440]) = v235;
  v236 = LODWORD(STACK[0x69C0]) ^ v156;
  LODWORD(STACK[0x6180]) = v156;
  if (v186)
    v237 = STACK[0x68D0];
  else
    v237 = v156 ^ LODWORD(STACK[0x6460]);
  if (v186)
    v238 = STACK[0x69A0];
  else
    v238 = STACK[0x68D0];
  if (v186)
    v239 = v236;
  else
    v239 = STACK[0x69A0];
  if (v186)
    v236 = v156 ^ LODWORD(STACK[0x6460]);
  v240 = STACK[0x62A8];
  v241 = (STACK[0x62A8] & 2) == 0;
  if ((STACK[0x62A8] & 2) != 0)
    v242 = v168;
  else
    v242 = v188;
  LODWORD(STACK[0x6658]) = v242;
  if ((v240 & 2) != 0)
    v243 = v188;
  else
    v243 = v168;
  LODWORD(STACK[0x67D0]) = v243;
  if ((v240 & 2) != 0)
    v244 = v167;
  else
    v244 = v187;
  LODWORD(STACK[0x67E0]) = v244;
  if ((v240 & 2) != 0)
    v245 = v187;
  else
    v245 = v167;
  LODWORD(STACK[0x6650]) = v245;
  if ((v240 & 2) != 0)
    v246 = v195;
  else
    v246 = v197;
  LODWORD(STACK[0x6910]) = v246;
  if (v241)
    v247 = v195;
  else
    v247 = v197;
  LODWORD(STACK[0x6690]) = v247;
  if (v241)
    v248 = v196;
  else
    v248 = v194;
  LODWORD(STACK[0x68B0]) = v248;
  if (v241)
    v196 = v194;
  LODWORD(STACK[0x66B8]) = v196;
  v249 = v244 ^ v242 ^ v243 ^ v245;
  LODWORD(STACK[0x6420]) = v249;
  v250 = v246 ^ v196;
  LODWORD(STACK[0x6418]) = v250;
  HIDWORD(v251) = v247;
  LODWORD(v251) = v247;
  v252 = (v251 >> 27) ^ __ROR4__(v249 ^ v250 ^ v248, 27);
  if (v241)
    v253 = STACK[0x6830];
  else
    v253 = STACK[0x6880];
  if (v241)
    v254 = STACK[0x6880];
  else
    v254 = STACK[0x6830];
  LODWORD(STACK[0x6730]) = v254;
  v255 = STACK[0x68C0];
  v256 = STACK[0x68E0];
  if (v241)
    v257 = STACK[0x68C0];
  else
    v257 = STACK[0x68E0];
  LODWORD(STACK[0x67A0]) = v257;
  if (v241)
    v258 = v256;
  else
    v258 = v255;
  if (v241)
    v259 = v212;
  else
    v259 = v210;
  if (v241)
    v260 = v210;
  else
    v260 = v212;
  v261 = STACK[0x6860];
  if (v241)
    v262 = v211;
  else
    v262 = STACK[0x6860];
  LODWORD(STACK[0x69C0]) = v262;
  if (v241)
    v263 = v261;
  else
    v263 = v211;
  if (v241)
    v264 = v221;
  else
    v264 = v220;
  if (v241)
    v265 = v220;
  else
    v265 = v221;
  if (v241)
    v266 = v217;
  else
    v266 = v213;
  LODWORD(STACK[0x68E0]) = v266;
  if (v241)
    v267 = v213;
  else
    v267 = v217;
  LODWORD(STACK[0x6900]) = v267;
  v268 = STACK[0x68A0];
  if (v241)
    v269 = STACK[0x6850];
  else
    v269 = STACK[0x68A0];
  if (!v241)
    v268 = STACK[0x6850];
  LODWORD(STACK[0x69A0]) = v268;
  if (v241)
    v270 = v237;
  else
    v270 = v239;
  if (v241)
    v271 = v239;
  else
    v271 = v237;
  if (v241)
    v272 = STACK[0x6990];
  else
    v272 = STACK[0x6870];
  if (v241)
    v273 = STACK[0x6870];
  else
    v273 = STACK[0x6990];
  LODWORD(STACK[0x6990]) = v273;
  if (v241)
    v274 = v230;
  else
    v274 = v228;
  if (v241)
    v275 = v228;
  else
    v275 = v230;
  v276 = STACK[0x6890];
  if (v241)
    v277 = v231;
  else
    v277 = STACK[0x6890];
  LODWORD(STACK[0x67F0]) = v277;
  if (v241)
  {
    v231 = v276;
    v278 = v238;
  }
  else
  {
    v278 = v236;
  }
  LODWORD(STACK[0x6660]) = v278;
  if (!v241)
    v236 = v238;
  LODWORD(STACK[0x6810]) = v236;
  LODWORD(STACK[0x6468]) = v263 ^ v268;
  LODWORD(STACK[0x66F0]) = v260;
  LODWORD(STACK[0x66E8]) = v272;
  LODWORD(STACK[0x68C0]) = v265;
  LODWORD(STACK[0x66B0]) = v271;
  v279 = v273 ^ v271 ^ v278 ^ v270;
  v280 = v270;
  LODWORD(STACK[0x68A0]) = v270;
  v281 = v231;
  LODWORD(STACK[0x6890]) = v231;
  v282 = v274;
  LODWORD(STACK[0x68D0]) = v274;
  v283 = v262 ^ v259 ^ v263 ^ v268 ^ v260 ^ v266 ^ v267 ^ v269 ^ v272 ^ v265 ^ v264 ^ v279 ^ v236 ^ v275 ^ v231 ^ v274 ^ v277;
  v284 = STACK[0x6438];
  v285 = STACK[0x6428];
  if (v241)
    v286 = STACK[0x6438];
  else
    v286 = STACK[0x6428];
  LODWORD(STACK[0x6860]) = v286;
  v287 = v283 ^ v286;
  v288 = STACK[0x6458];
  v289 = STACK[0x6440];
  if (v241)
    v290 = STACK[0x6458];
  else
    v290 = STACK[0x6440];
  LODWORD(STACK[0x6850]) = v290;
  LODWORD(STACK[0x6460]) = v257 ^ v253;
  LODWORD(STACK[0x6880]) = v258;
  v291 = v287 ^ v290 ^ v254 ^ v257 ^ v253 ^ v258 ^ __ROR4__(v252 ^ 0x3D0A774B, 5);
  v292 = STACK[0x6A00];
  v293 = STACK[0x69B0];
  if (v241)
    v294 = STACK[0x6A00];
  else
    v294 = STACK[0x69B0];
  LODWORD(STACK[0x6820]) = v294;
  if (v241)
    v295 = v293;
  else
    v295 = v292;
  v296 = STACK[0x69D0];
  v297 = STACK[0x6980];
  if (v241)
    v298 = STACK[0x6980];
  else
    v298 = STACK[0x69D0];
  LODWORD(STACK[0x6870]) = v298;
  if (v241)
    v299 = v296;
  else
    v299 = v297;
  LODWORD(STACK[0x6830]) = v299;
  if (v241)
    v300 = STACK[0x6800];
  else
    v300 = STACK[0x6668];
  if (v241)
    v301 = STACK[0x6668];
  else
    v301 = STACK[0x6800];
  LODWORD(STACK[0x6840]) = v301;
  if (v241)
    v302 = v289;
  else
    v302 = v288;
  LODWORD(STACK[0x6800]) = v302;
  v303 = STACK[0x6698];
  if (v241)
    v304 = STACK[0x6698];
  else
    v304 = STACK[0x66F8];
  if (v241)
  {
    v303 = STACK[0x66F8];
    v284 = v285;
  }
  v305 = v303;
  v306 = v304;
  LODWORD(STACK[0x6A00]) = v291 ^ v294 ^ v299 ^ v298 ^ v295 ^ v300 ^ v303 ^ v301 ^ v304;
  v307 = STACK[0x68B0];
  v308 = STACK[0x6690];
  v309 = v263;
  LODWORD(STACK[0x68F0]) = v263;
  v310 = v259;
  LODWORD(STACK[0x6448]) = v259;
  v311 = v308 ^ v307 ^ v259 ^ v263 ^ LODWORD(STACK[0x69C0]) ^ v260 ^ LODWORD(STACK[0x68E0]);
  v312 = LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6900]);
  LODWORD(STACK[0x6780]) = v269;
  v313 = STACK[0x6990];
  LODWORD(STACK[0x6790]) = v264;
  v314 = v265 ^ v313 ^ v264;
  LODWORD(STACK[0x6458]) = v314;
  v315 = v311 ^ v312 ^ v269 ^ v272 ^ v314 ^ v271 ^ v280;
  v316 = v275;
  LODWORD(STACK[0x66A8]) = v275;
  v317 = STACK[0x6660];
  v318 = STACK[0x6810];
  v319 = v315 ^ LODWORD(STACK[0x6660]) ^ v275 ^ v282 ^ LODWORD(STACK[0x6810]) ^ v281;
  v320 = STACK[0x6850];
  v321 = LODWORD(STACK[0x6418]) ^ LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6420]);
  v322 = STACK[0x67F0];
  v323 = STACK[0x6860];
  LODWORD(STACK[0x6438]) = v302 ^ v284;
  v324 = v319 ^ v322 ^ v323 ^ v302 ^ v284 ^ v321;
  v325 = STACK[0x6730];
  v326 = STACK[0x67A0];
  LODWORD(STACK[0x6440]) = LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x67A0]);
  v327 = v253;
  LODWORD(STACK[0x6700]) = v253;
  v328 = STACK[0x6820];
  v329 = v325 ^ v326 ^ v258 ^ v253 ^ LODWORD(STACK[0x6820]);
  v330 = STACK[0x6830];
  LODWORD(STACK[0x66A0]) = v295;
  v331 = STACK[0x6870];
  v332 = STACK[0x6840];
  LODWORD(STACK[0x6668]) = v306;
  LODWORD(STACK[0x6698]) = v305;
  v333 = v324 ^ v329 ^ v330 ^ v295 ^ v331 ^ v332 ^ v306 ^ v305;
  v334 = v264
       + v316
       + LODWORD(STACK[0x67D0])
       + (((v295 ^ (v310 - v309 - v326 - 1612101164)) + v269) ^ LODWORD(STACK[0x67E0]));
  LODWORD(STACK[0x6430]) = v300;
  v335 = v333 ^ v300;
  v336 = v284;
  LODWORD(STACK[0x66F8]) = v284;
  LODWORD(STACK[0x6268]) = v333 ^ v300 ^ 0xFFF64810;
  v337 = v307
       - LODWORD(STACK[0x69E0])
       + 432178877
       + (v300 ^ v320 ^ ((v333 ^ v300 ^ 0xFFF64810 ^ (v334 + v284)) + v306 + v325 - v323));
  v338 = *(_DWORD *)(*(_QWORD *)STACK[0x60C0] + (int)(*(_DWORD *)STACK[0x60B8] & 0xD75FEFDC));
  v339 = 1772489163 * ((v338 ^ STACK[0x67C0]) & 0x7FFFFFFF);
  v340 = 1772489163 * (v339 ^ HIWORD(v339));
  v341 = STACK[0x6950];
  v342 = STACK[0x6920];
  LODWORD(v340) = *(unsigned __int8 *)(STACK[0x6950] + (v340 >> 24)) ^ LODWORD(STACK[0x6550]) ^ *(unsigned __int8 *)(STACK[0x6930] + (v340 >> 24)) ^ *(unsigned __int8 *)(STACK[0x6920] + (v340 >> 24)) ^ v340 ^ (17 * (v340 >> 24));
  v343 = 1772489163 * ((v338 ^ STACK[0x6558]) & 0x7FFFFFFF);
  v344 = 1772489163 * (v343 ^ HIWORD(v343));
  v345 = STACK[0x6450];
  v346 = (v327 ^ LODWORD(STACK[0x68D0]) ^ ((((((((((v337 ^ LODWORD(STACK[0x62A8])) + v308) ^ v322)
                                               + LODWORD(STACK[0x69C0])) ^ v331)
                                             + v313
                                             + LODWORD(STACK[0x66E8])) ^ v330)
                                           + v318
                                           + LODWORD(STACK[0x6450])
                                           + v317) ^ v332)
                                         + LODWORD(STACK[0x6910])
                                         - LODWORD(STACK[0x68E0])
                                         - v328))
       - (v305
        + LODWORD(STACK[0x66F0]));
  v347 = STACK[0x6770];
  LOBYTE(v337) = *(_BYTE *)(STACK[0x6770] + (v340 ^ 0xF2u) + 12058) ^ ((v340 ^ 0x7B) + 102) ^ 0xB2;
  v348 = STACK[0x6A50];
  LOBYTE(v340) = v337 ^ (2 * (v337 & STACK[0x6A50]));
  v349 = 1772489163 * ((v338 ^ STACK[0x6568]) & 0x7FFFFFFF);
  v350 = 1772489163 * (v349 ^ HIWORD(v349));
  v351 = STACK[0x6930];
  LOBYTE(v344) = *(_BYTE *)(STACK[0x6770]
                          + (LODWORD(STACK[0x6560]) ^ *(_BYTE *)(STACK[0x6950] + (v344 >> 24)) ^ *(_BYTE *)(STACK[0x6930] + (v344 >> 24)) ^ *(_BYTE *)(STACK[0x6920] + (v344 >> 24)) ^ v344 ^ (17 * BYTE3(v344)) ^ 0x73)
                          + 11288);
  LOBYTE(v350) = LODWORD(STACK[0x6570]) ^ v350 ^ (17 * BYTE3(v350)) ^ *(_BYTE *)(STACK[0x6950] + (v350 >> 24)) ^ *(_BYTE *)(STACK[0x6930] + (v350 >> 24)) ^ *(_BYTE *)(STACK[0x6920] + (v350 >> 24));
  v352 = STACK[0x62A8];
  LODWORD(STACK[0x6570]) = LODWORD(STACK[0x62A8]) ^ LODWORD(STACK[0x6450]);
  v353 = STACK[0x6800];
  LODWORD(STACK[0x6138]) = v335;
  LODWORD(STACK[0x6260]) = v352 ^ v345 ^ v353 ^ v336 ^ v335 ^ LODWORD(STACK[0x6A00]);
  v354 = STACK[0x6A20];
  HIDWORD(v355) = *(unsigned __int8 *)(v347 + (v350 ^ 0x9Bu) + 15915);
  LODWORD(v355) = (HIDWORD(v355) << 24) - 436207616;
  v356 = 1772489163 * ((v338 ^ STACK[0x6578]) & 0x7FFFFFFF);
  v357 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x67B0]) - 9150) - 12;
  v358 = (char *)*(&off_1015B46D0 + LODWORD(STACK[0x67B0]) - 9063) - 8;
  v359 = (char *)*(&off_1015B46D0 + (LODWORD(STACK[0x67B0]) ^ 0x206D)) - 4;
  LOBYTE(v305) = LODWORD(STACK[0x6580]) ^ v357[(unint64_t)(1772489163 * (v356 ^ HIWORD(v356))) >> 24] ^ v358[((unint64_t)(1772489163 * (v356 ^ HIWORD(v356))) >> 24) + 4] ^ v359[((unint64_t)(1772489163 * (v356 ^ HIWORD(v356))) >> 24) + 6] ^ (-53 * (v356 ^ BYTE2(v356))) ^ (103 * ((1772489163 * (v356 ^ HIWORD(v356))) >> 24)) ^ 9;
  v360 = 1772489163 * ((v338 ^ STACK[0x6588]) & 0x7FFFFFFF);
  v361 = 1772489163 * (v360 ^ HIWORD(v360));
  v362 = LODWORD(STACK[0x6590]) ^ v361;
  v361 >>= 24;
  v363 = v362 ^ v357[v361] ^ v358[v361 + 4] ^ v359[v361 + 6] ^ (103 * v361);
  LODWORD(v350) = (((v355 >> 25) >> 7) & 1 | (2 * (v355 >> 25))) ^ 0x12;
  LOBYTE(v335) = v348;
  LOBYTE(v361) = *(_BYTE *)(v347 + ((2 * (v363 ^ 0x1C)) & 0x20) + (unint64_t)(v363 ^ 0x220Cu)) ^ ((v362 ^ (17 * v361) ^ *(_BYTE *)(v341 + v361) ^ *(_BYTE *)(v351 + v361) ^ *(_BYTE *)(v342 + v361) ^ 0x38) - 104) ^ 0xD5;
  LOBYTE(v313) = STACK[0x6A80];
  v364 = STACK[0x6A30];
  LOBYTE(v356) = STACK[0x6AA0];
  LODWORD(STACK[0x67C0]) = (((v350 ^ (2 * (v350 & v348))) & STACK[0x6A30]) >> v356)
                         + ((v350 ^ (2 * (v350 & v348))) << v313);
  LODWORD(v350) = ((v346 ^ LODWORD(STACK[0x69A0])) + LODWORD(STACK[0x6880])) ^ LODWORD(STACK[0x6890]);
  v365 = v352;
  v366 = STACK[0x6658];
  v367 = LODWORD(STACK[0x6658]) + v365 - LODWORD(STACK[0x68A0]) + LODWORD(STACK[0x6900]);
  v368 = STACK[0x6650];
  LODWORD(STACK[0x61D0]) = v350
                         + v367
                         + LODWORD(STACK[0x6650])
                         + v353
                         - LODWORD(STACK[0x66B0])
                         - LODWORD(STACK[0x68C0])
                         - LODWORD(STACK[0x66B8]);
  LOBYTE(v348) = v354;
  v369 = STACK[0x6A60];
  v370 = 1772489163 * ((v338 ^ STACK[0x6598]) & 0x7FFFFFFF);
  v371 = 1772489163 * (v370 ^ HIWORD(v370));
  LOBYTE(v363) = *(_BYTE *)(v341 + (v371 >> 24));
  LODWORD(STACK[0x6598]) = (((v361 ^ (2 * (v361 & v354))) & STACK[0x6A60]) >> v356)
                         + ((v361 ^ (2 * (v361 & v354))) << v313);
  LOBYTE(v350) = LODWORD(STACK[0x65A0]) ^ v363 ^ *(_BYTE *)(v351 + (v371 >> 24)) ^ *(_BYTE *)(v342 + (v371 >> 24)) ^ v371 ^ (17 * BYTE3(v371)) ^ 0x8A;
  LODWORD(v344) = v344 ^ 0x62 ^ (4 * (_BYTE)v344) & 0x6C ^ (2
                                                                                            * ((v344 ^ 0x62 ^ (4 * v344) & 0x6C) & v354));
  v372 = STACK[0x6A40];
  LODWORD(STACK[0x69E0]) = ((_DWORD)v344 << v313) ^ LODWORD(STACK[0x6A40]) ^ ((v344 & v364) >> v356);
  LOBYTE(v361) = *(_BYTE *)(v347 + v305 + 22874) ^ (8 * *(_BYTE *)(v347 + v305 + 22874)) ^ 0xFE ^ (2 * ((*(_BYTE *)(v347 + v305 + 22874) ^ (8 * *(_BYTE *)(v347 + v305 + 22874)) ^ 0xFE) & v348));
  LODWORD(v344) = 1772489163 * ((v338 ^ STACK[0x65A8]) & 0x7FFFFFFF);
  v373 = 1772489163 * (v344 ^ WORD1(v344));
  LOBYTE(v305) = LODWORD(STACK[0x65B0]) ^ v357[v373 >> 24] ^ v358[(v373 >> 24) + 4] ^ v359[(v373 >> 24) + 6] ^ v373 ^ (103 * BYTE3(v373));
  LOBYTE(v373) = *(_BYTE *)(v347 + v350 + 22356) ^ (4 * *(_BYTE *)(v347 + v350 + 22356)) ^ 0x4B ^ (2 * ((*(_BYTE *)(v347 + v350 + 22356) ^ (4 * *(_BYTE *)(v347 + v350 + 22356)) ^ 0x4B) & v335));
  LODWORD(v350) = 1772489163 * ((v338 ^ STACK[0x65B8]) & 0x7FFFFFFF);
  v374 = 1772489163 * (v350 ^ WORD1(v350));
  v375 = v374 >> 24;
  LODWORD(v374) = LODWORD(STACK[0x65C0]) ^ v357[v374 >> 24] ^ v358[(v374 >> 24) + 4] ^ v374;
  LODWORD(STACK[0x65C0]) = ((v361 & v369) >> v356) + (v361 << v313);
  LODWORD(STACK[0x65B8]) = ((v340 & v369) >> v356) | (v340 << v313);
  LOBYTE(v374) = *(_BYTE *)(v347 + (v374 ^ (103 * v375) ^ v359[v375 + 6] ^ 0x2C) + 8208)
               + (v374 ^ v359[v375 + 6] ^ (103 * v375) ^ 0x3F);
  LODWORD(v340) = 1772489163 * ((v338 ^ STACK[0x65C8]) & 0x7FFFFFFF);
  v376 = 1772489163 * (v340 ^ WORD1(v340));
  LODWORD(v376) = v357[v376 >> 24] ^ LODWORD(STACK[0x65D0]) ^ v358[(v376 >> 24) + 4] ^ v359[(v376 >> 24) + 6] ^ v376 ^ (103 * (v376 >> 24));
  LOBYTE(v305) = *(_BYTE *)(v347 + (v305 ^ 0xF0u) + 14372);
  LODWORD(STACK[0x6A00]) = (v373 << v313) ^ v372 ^ ((v373 & v364) >> v356);
  LOBYTE(v373) = (v374 + 1) ^ 0x56 ^ (2 * (((v374 + 1) ^ 0x56) & v335));
  LOBYTE(v374) = *(_BYTE *)(v347 + (v376 ^ 0xACu) + 768) ^ ((v376 ^ 0x18) + 40) ^ 0xDB;
  LODWORD(v376) = (v305 ^ (16 * v305) & 0x60) ^ 0xC3 ^ (2
                                                                                        * ((v305 ^ (16 * v305) & 0x60 ^ 0xC3) & v348));
  LODWORD(STACK[0x65D0]) = ((v376 & v364) >> v356) + ((_DWORD)v376 << v313);
  LOBYTE(v332) = v374 ^ (2 * (v374 & v348));
  LODWORD(v374) = 1772489163 * ((v338 ^ STACK[0x65D8]) & 0x7FFFFFFF);
  v377 = 1772489163 * (v374 ^ WORD1(v374));
  LODWORD(v377) = LODWORD(STACK[0x65E0]) ^ v357[v377 >> 24] ^ v358[(v377 >> 24) + 4] ^ v359[(v377 >> 24) + 6] ^ v377 ^ (103 * (v377 >> 24));
  LOBYTE(v376) = *(_BYTE *)(v347 + (v377 ^ 0x38u) + 15657);
  LOBYTE(v377) = v377 ^ 0xA7 ^ (v376 - ((2 * v376) & 0xE4) + 114);
  LODWORD(v376) = 1772489163 * ((v338 ^ STACK[0x65E8]) & 0x7FFFFFFF);
  v378 = 1772489163 * (v376 ^ WORD1(v376));
  LOBYTE(v375) = v377 ^ (2 * (v377 & v335));
  LOBYTE(v377) = LODWORD(STACK[0x65F0]) ^ v357[v378 >> 24] ^ v358[(v378 >> 24) + 4] ^ v359[(v378 >> 24) + 6] ^ v378 ^ (103 * BYTE3(v378)) ^ 0x56;
  LODWORD(v378) = 1772489163 * ((v338 ^ STACK[0x65F8]) & 0x7FFFFFFF);
  v379 = 1772489163 * (v378 ^ WORD1(v378));
  LOBYTE(v379) = LODWORD(STACK[0x6600]) ^ v379 ^ v357[v379 >> 24] ^ v358[(v379 >> 24) + 4] ^ (103 * BYTE3(v379)) ^ v359[(v379 >> 24) + 6] ^ 0xE2;
  LOBYTE(v377) = (*(_BYTE *)(v347 + v377 + 6157) + 64) ^ 0x6D;
  LODWORD(STACK[0x69D0]) = (v373 << v313) ^ v372 ^ ((v373 & v369) >> v356);
  LODWORD(STACK[0x6600]) = (((v377 ^ (2 * (v377 & v348))) & v364) >> v356)
                         + ((v377 ^ (2 * (v377 & v348))) << v313);
  LODWORD(v377) = 1772489163 * ((v338 ^ STACK[0x6608]) & 0x7FFFFFFF);
  v380 = 1772489163 * (v377 ^ WORD1(v377));
  LOBYTE(v380) = LODWORD(STACK[0x6618]) ^ *(_BYTE *)(v341 + (v380 >> 24)) ^ *(_BYTE *)(v351 + (v380 >> 24)) ^ *(_BYTE *)(v342 + (v380 >> 24)) ^ v380 ^ (17 * BYTE3(v380)) ^ 0x64;
  LOBYTE(v379) = *(_BYTE *)(v347 + v379 + 23134);
  LODWORD(STACK[0x6618]) = ((v332 & v369) >> v356) | (v332 << v313);
  LODWORD(v379) = (v379 ^ (32 * v379)) ^ 0xD3 ^ (2
                                                                                 * ((v379 ^ (32 * v379) ^ 0xD3) & v335));
  LODWORD(STACK[0x6608]) = ((v379 & v369) >> v356) | ((_DWORD)v379 << v313);
  LOBYTE(v380) = *(_BYTE *)(v347 + v380 + 1537) ^ 0x10;
  LODWORD(v379) = 1772489163 * ((v338 ^ STACK[0x6620]) & 0x7FFFFFFF);
  v381 = 1772489163 * (v379 ^ WORD1(v379));
  LODWORD(v381) = LODWORD(STACK[0x6628]) ^ *(unsigned __int8 *)(v341 + (v381 >> 24)) ^ *(unsigned __int8 *)(v351 + (v381 >> 24)) ^ *(unsigned __int8 *)(v342 + (v381 >> 24)) ^ v381 ^ (17 * (v381 >> 24));
  LODWORD(STACK[0x6628]) = (((v380 ^ (2 * (v380 & v348))) & v364) >> v356) | ((v380 ^ (2 * (v380 & v348))) << v313);
  LOBYTE(v380) = *(_BYTE *)(v347 + (v381 ^ 0xE8u) + 5389);
  LOBYTE(v380) = v381 ^ 0x5D ^ (v380 - ((2 * v380) & 0xA) + 5);
  LODWORD(STACK[0x6620]) = ((v375 & v364) >> v356) | (v375 << v313);
  LODWORD(v381) = 1772489163 * ((v338 ^ STACK[0x6630]) & 0x7FFFFFFF);
  v382 = 1772489163 * (v381 ^ WORD1(v381));
  LODWORD(v382) = *(unsigned __int8 *)(v341 + (v382 >> 24)) ^ LODWORD(STACK[0x6638]) ^ *(unsigned __int8 *)(v351 + (v382 >> 24)) ^ *(unsigned __int8 *)(v342 + (v382 >> 24)) ^ v382 ^ (17 * (v382 >> 24));
  LOBYTE(v373) = v382 ^ 0xF;
  LOBYTE(v382) = *(_BYTE *)(v347 + (v382 ^ 0xD5u) + 8464);
  LOBYTE(v361) = v373 & v382;
  LOBYTE(v382) = v373 ^ v382;
  LODWORD(v373) = 1772489163 * ((v338 ^ STACK[0x6640]) & 0x7FFFFFFF);
  v383 = 1772489163 * (v373 ^ WORD1(v373));
  LOBYTE(v383) = LODWORD(STACK[0x6648]) ^ v357[v383 >> 24] ^ v358[(v383 >> 24) + 4] ^ v359[(v383 >> 24) + 6] ^ v383 ^ (103 * BYTE3(v383)) ^ 0x51;
  v384 = STACK[0x69F0];
  LODWORD(STACK[0x69B0]) = ((v380 ^ (2 * (v380 & v335))) << v313) ^ LODWORD(STACK[0x69F0]) ^ (((v380 ^ (2 * (v380 & v335))) & v369) >> v356);
  LODWORD(v380) = *(unsigned __int8 *)(v347 + v383 + 17202);
  LODWORD(v383) = ((v380 >> 7) | (2 * v380)) ^ v380 & 0x6B ^ 0x3D;
  LODWORD(v380) = (v382 + 2 * v361) ^ 0xDA ^ (2 * (((v382 + 2 * v361) ^ 0xDA) & v335));
  LODWORD(STACK[0x6630]) = ((v380 & v364) >> v356) + ((_DWORD)v380 << v313);
  LODWORD(STACK[0x6980]) = ((v383 ^ (2 * (v383 & v348))) << v313) ^ v384 ^ (((v383 ^ (2 * (v383 & v348))) & v369) >> v356);
  v385 = STACK[0x68E0];
  v386 = STACK[0x66B8];
  v387 = STACK[0x6690];
  LODWORD(v382) = LODWORD(STACK[0x6570]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x68E0]) ^ v366 ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x67E0]) ^ LODWORD(STACK[0x67D0]) ^ v368 ^ LODWORD(STACK[0x66B8]) ^ LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x68F0]);
  v388 = STACK[0x69C0];
  v389 = STACK[0x6448];
  v390 = STACK[0x66F0];
  LODWORD(v375) = STACK[0x6900];
  v391 = STACK[0x66E8];
  v392 = STACK[0x66B0];
  v393 = STACK[0x6660];
  LODWORD(v342) = STACK[0x68A0];
  v394 = STACK[0x66A8];
  v395 = STACK[0x6890];
  LODWORD(v361) = STACK[0x68D0];
  LODWORD(v359) = STACK[0x67F0];
  v396 = STACK[0x6860];
  LODWORD(v351) = STACK[0x6850];
  LODWORD(v380) = STACK[0x68B0];
  LODWORD(v358) = STACK[0x6880];
  v397 = STACK[0x6820];
  LODWORD(v357) = STACK[0x6830];
  v398 = STACK[0x66A0];
  v399 = STACK[0x6870];
  v400 = STACK[0x6430];
  v401 = STACK[0x6698];
  LODWORD(v347) = STACK[0x6840];
  LODWORD(v341) = STACK[0x6668];
  LODWORD(STACK[0x65F8]) = v382 ^ LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x66E8]) ^ LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x6990]) ^ LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x66B0]) ^ LODWORD(STACK[0x6660]) ^ LODWORD(STACK[0x68A0]) ^ LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x66A8]) ^ LODWORD(STACK[0x6890]) ^ LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x67F0]) ^ LODWORD(STACK[0x6860]) ^ LODWORD(STACK[0x6438]) ^ LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6440]) ^ LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x6430]) ^ LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6840]) ^ LODWORD(STACK[0x6668]);
  LODWORD(v382) = v390 ^ v388 ^ v386 ^ v387;
  v402 = v375;
  LODWORD(v382) = v382 ^ LODWORD(STACK[0x6468]) ^ v375;
  LODWORD(v375) = v393;
  LODWORD(v382) = v382 ^ LODWORD(STACK[0x6458]) ^ v393 ^ v394 ^ v361 ^ v359 ^ v380;
  v403 = STACK[0x6730];
  LODWORD(STACK[0x61C8]) = v382 ^ LODWORD(STACK[0x6730]) ^ LODWORD(STACK[0x6800]) ^ LODWORD(STACK[0x6460]) ^ v397 ^ v357 ^ v399 ^ v401 ^ v341;
  LODWORD(v359) = STACK[0x6910];
  LODWORD(v341) = v389;
  LODWORD(v382) = v389 ^ LODWORD(STACK[0x6910]);
  v404 = STACK[0x6780];
  v405 = v392;
  v406 = v391;
  LODWORD(v380) = STACK[0x6810];
  LODWORD(STACK[0x61B0]) = v382 ^ v385 ^ LODWORD(STACK[0x6780]) ^ v391 ^ v392 ^ v342 ^ LODWORD(STACK[0x6810]) ^ v395 ^ v396 ^ LODWORD(STACK[0x66F8]) ^ v351 ^ v358 ^ v398 ^ v347 ^ v400;
  LODWORD(v357) = STACK[0x6A40];
  v407 = LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x6950]) = v407;
  v408 = STACK[0x69F0];
  LODWORD(v347) = v359 ^ LODWORD(STACK[0x69F0]);
  LODWORD(v359) = v386 ^ v357;
  v409 = v390 ^ LODWORD(STACK[0x69F0]);
  LODWORD(v361) = LODWORD(STACK[0x68F0]) ^ v357;
  v410 = v341 ^ LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x6910]) = v387 ^ LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x68F0]) = v361;
  LODWORD(v383) = v387 ^ v408 ^ v361;
  LODWORD(STACK[0x69C0]) = v383;
  LODWORD(v382) = v347 ^ v386 ^ v357 ^ v383 ^ v341 ^ v408 ^ v407 ^ v390 ^ v408;
  v411 = LODWORD(STACK[0x69A0]) ^ v408;
  v412 = v402 ^ v408;
  LODWORD(v341) = v385 ^ v357;
  LODWORD(v351) = v404 ^ v357;
  LODWORD(v382) = v382 ^ v411 ^ v385 ^ v357 ^ v402 ^ v408 ^ v404 ^ v357;
  v413 = LODWORD(STACK[0x6990]) ^ v357;
  v414 = LODWORD(STACK[0x68C0]) ^ v357;
  LODWORD(v342) = v405 ^ v357;
  v415 = v406 ^ v408;
  LODWORD(v358) = LODWORD(STACK[0x6790]) ^ v408;
  LODWORD(v383) = v382 ^ v406 ^ v408 ^ v414 ^ v413 ^ v358 ^ v405 ^ v357;
  v416 = LODWORD(STACK[0x67A0]) ^ v357;
  v417 = LODWORD(STACK[0x6700]) ^ v408;
  LODWORD(v361) = v380 ^ v408;
  v418 = LODWORD(STACK[0x66A8]) ^ v408;
  v419 = LODWORD(STACK[0x68B0]) ^ v357;
  v420 = v403 ^ v408;
  LODWORD(v382) = v375 ^ v408;
  LODWORD(v380) = LODWORD(STACK[0x68A0]) ^ v357;
  LODWORD(STACK[0x6030]) = v361;
  LODWORD(STACK[0x6018]) = v380;
  LODWORD(v361) = v380 ^ v361;
  LODWORD(STACK[0x6930]) = v347;
  LODWORD(STACK[0x6920]) = (_DWORD)v359;
  LODWORD(STACK[0x69A0]) = v361 ^ v359 ^ v347;
  LODWORD(v383) = v361 ^ v418 ^ v419 ^ v403 ^ v408 ^ v416 ^ v417 ^ v383 ^ v375 ^ v408;
  LODWORD(v375) = LODWORD(STACK[0x66A0]) ^ v357;
  v421 = LODWORD(STACK[0x6820]) ^ v357;
  LODWORD(v361) = LODWORD(STACK[0x6830]) ^ v408;
  LODWORD(v380) = LODWORD(STACK[0x6880]) ^ v357;
  v422 = LODWORD(STACK[0x6698]) ^ v408;
  LODWORD(v359) = LODWORD(STACK[0x6870]) ^ v408;
  v423 = v400 ^ v357;
  v424 = LODWORD(STACK[0x6840]) ^ v357;
  LODWORD(STACK[0x67A0]) = v383 ^ v380 ^ v421 ^ v361 ^ v375 ^ v359 ^ v423 ^ v422 ^ v424;
  LODWORD(STACK[0x68E0]) = v410;
  LODWORD(v383) = LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x69C0]) ^ v410;
  LODWORD(STACK[0x6900]) = v409;
  LODWORD(v347) = LODWORD(STACK[0x6950]) ^ v409;
  LODWORD(STACK[0x6080]) = v341;
  LODWORD(STACK[0x60B0]) = v411;
  LODWORD(STACK[0x6088]) = v412;
  LODWORD(STACK[0x6060]) = v351;
  LODWORD(STACK[0x6040]) = v415;
  LODWORD(STACK[0x6050]) = v414;
  LODWORD(STACK[0x6058]) = v413;
  LODWORD(v383) = v383 ^ v347 ^ v341 ^ v411 ^ v412 ^ v351 ^ v415 ^ v414 ^ v413;
  v425 = LODWORD(STACK[0x6890]) ^ v357;
  v426 = LODWORD(STACK[0x68D0]) ^ v408;
  LODWORD(STACK[0x6048]) = v342;
  LODWORD(STACK[0x6038]) = (_DWORD)v358;
  LODWORD(STACK[0x6020]) = v382;
  LODWORD(STACK[0x6028]) = v418;
  LODWORD(STACK[0x6870]) = v425;
  LODWORD(STACK[0x6730]) = v426;
  LODWORD(v383) = v383 ^ v358 ^ v342 ^ v382 ^ v418 ^ v425 ^ v426;
  LODWORD(v382) = LODWORD(STACK[0x67F0]) ^ v357;
  LODWORD(v347) = LODWORD(STACK[0x6860]) ^ v408;
  v427 = LODWORD(STACK[0x66F8]) ^ v357;
  v428 = LODWORD(STACK[0x6800]) ^ v408;
  LODWORD(STACK[0x6698]) = v382;
  LODWORD(STACK[0x6690]) = v347;
  LODWORD(STACK[0x6648]) = v427;
  LODWORD(STACK[0x6640]) = v428;
  LODWORD(v383) = v383 ^ v382 ^ v347 ^ v428 ^ v427;
  LODWORD(v382) = LODWORD(STACK[0x6850]) ^ v357;
  LODWORD(STACK[0x68B0]) = v419;
  LODWORD(STACK[0x6638]) = v382;
  LODWORD(STACK[0x68A0]) = v420;
  LODWORD(v383) = v383 ^ v382 ^ v419 ^ v420;
  LODWORD(v382) = LODWORD(STACK[0x6668]) ^ v408;
  LODWORD(STACK[0x68D0]) = v416;
  LODWORD(STACK[0x68C0]) = v417;
  LODWORD(STACK[0x6890]) = v380;
  LODWORD(STACK[0x6008]) = v421;
  LODWORD(STACK[0x6000]) = v361;
  LODWORD(STACK[0x6010]) = v375;
  LODWORD(STACK[0x6880]) = (_DWORD)v359;
  LODWORD(STACK[0x5FF0]) = v423;
  LODWORD(STACK[0x5FF8]) = v422;
  LODWORD(STACK[0x5FE8]) = v424;
  v429 = v383 ^ v416 ^ v417 ^ v380 ^ v421 ^ v361 ^ v375 ^ v359 ^ v423 ^ v422 ^ v424 ^ v382;
  HIDWORD(v355) = STACK[0x6488];
  LODWORD(v355) = STACK[0x6A50];
  HIDWORD(v355) = v355 >> 30;
  LODWORD(v355) = HIDWORD(v355);
  LODWORD(v361) = STACK[0x6A30];
  LOBYTE(v359) = STACK[0x6AA0];
  LODWORD(STACK[0x5FD0]) = ((STACK[0x6A30] & ((2 * (v355 >> 2)) ^ 0x6F6F6F6F)) >> (char)v359) ^ ((STACK[0x6A70] & ((2 * (v355 >> 2)) ^ 0x6F6F6F6F)) << LODWORD(STACK[0x6A80]));
  LODWORD(STACK[0x69C0]) = LODWORD(STACK[0x65B8]) ^ v408;
  LODWORD(STACK[0x6990]) = LODWORD(STACK[0x67C0]) ^ v408;
  LODWORD(STACK[0x6800]) = LODWORD(STACK[0x6598]) ^ v357;
  LODWORD(STACK[0x67F0]) = LODWORD(STACK[0x65D0]) ^ v408;
  LODWORD(STACK[0x6810]) = LODWORD(STACK[0x65C0]) ^ v408;
  LODWORD(STACK[0x6860]) = LODWORD(STACK[0x6618]) ^ v408;
  LODWORD(STACK[0x69A0]) = LODWORD(STACK[0x6600]) ^ v408;
  LODWORD(STACK[0x6840]) = LODWORD(STACK[0x6608]) ^ v357;
  LODWORD(STACK[0x6820]) = LODWORD(STACK[0x6628]) ^ v357;
  LODWORD(STACK[0x6850]) = LODWORD(STACK[0x6620]) ^ v357;
  LODWORD(STACK[0x6830]) = LODWORD(STACK[0x6630]) ^ v357;
  v430 = STACK[0x6268];
  LODWORD(v375) = LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x6268]);
  LODWORD(STACK[0x6630]) = LODWORD(STACK[0x67E0]) ^ v408;
  LODWORD(STACK[0x6628]) = LODWORD(STACK[0x67D0]) ^ v357;
  LODWORD(STACK[0x6620]) = LODWORD(STACK[0x6658]) ^ v357;
  LODWORD(STACK[0x5FE0]) = v382;
  LODWORD(STACK[0x5FC0]) = LODWORD(STACK[0x67A0]) ^ v382;
  LOBYTE(v427) = v408;
  LODWORD(STACK[0x6618]) = LODWORD(STACK[0x6650]) ^ v408;
  LODWORD(STACK[0x5FB8]) = LODWORD(STACK[0x6470]) | LODWORD(STACK[0x5ED0]);
  LODWORD(v383) = STACK[0x6A60];
  v431 = (STACK[0x6480] & LODWORD(STACK[0x6A60])) >> (char)v359;
  LODWORD(STACK[0x66B0]) = (v361 & STACK[0x6490]) >> (char)v359;
  LODWORD(STACK[0x5FB0]) = -1808575955 * (LODWORD(STACK[0x6260]) ^ 0xA61E1BAA);
  v432 = v383;
  LODWORD(v383) = (v383 & STACK[0x64A0]) >> (char)v359;
  LODWORD(STACK[0x6700]) = (STACK[0x6498] & v361) >> (char)v359;
  LODWORD(v380) = LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x61C8]);
  LODWORD(STACK[0x5FD8]) = v429;
  LODWORD(STACK[0x5FA8]) = 1841870627 * (v380 - v429);
  LODWORD(v347) = (v432 & STACK[0x5E78]) >> (char)v359;
  v433 = (STACK[0x6538] & v361) >> (char)v359;
  v434 = (v361 & STACK[0x6540]) >> (char)v359;
  LODWORD(v361) = (STACK[0x6548] & v361) >> (char)v359;
  LODWORD(v359) = (v432 & STACK[0x6478]) >> (char)v359;
  STACK[0x6668] = (BYTE3(STACK[0x6710]) + 9) & 0xF;
  v435 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x67B0]));
  v436 = STACK[0x9480];
  STACK[0x5FA0] = STACK[0x9480];
  LODWORD(STACK[0x66F8]) = v432;
  LODWORD(STACK[0x66B8]) = v431;
  LODWORD(STACK[0x5F98]) = v431 | LODWORD(STACK[0x6740]);
  v437 = STACK[0x6188];
  LODWORD(STACK[0x66F0]) = LODWORD(STACK[0x6190]) + LODWORD(STACK[0x6188]);
  LODWORD(STACK[0x62B8]) = LODWORD(STACK[0x5EA0]) ^ LODWORD(STACK[0x62F8]);
  LODWORD(STACK[0x66A8]) = LODWORD(STACK[0x6108]) | v437;
  v438 = STACK[0x61D0];
  LODWORD(STACK[0x5F90]) = LODWORD(STACK[0x61D0]) >> 4;
  v439 = STACK[0x6150];
  LODWORD(STACK[0x66E8]) = v383 + LODWORD(STACK[0x6150]);
  LODWORD(STACK[0x6068]) = v383;
  LODWORD(STACK[0x6288]) = v383 | v439;
  LODWORD(STACK[0x5F88]) = -1390809475 * v438;
  LODWORD(v382) = STACK[0x6118] & 0x2000000;
  LODWORD(STACK[0x5F78]) = STACK[0x6118] & 0xFDFFFFFF;
  LODWORD(STACK[0x5F70]) = LODWORD(STACK[0x62D0]) | LODWORD(STACK[0x6750]);
  LODWORD(STACK[0x5F80]) = v382;
  LODWORD(STACK[0x5F68]) = -(int)v382;
  LODWORD(STACK[0x60E8]) = v347;
  LODWORD(STACK[0x5F60]) = v347 | LODWORD(STACK[0x61BC]);
  LODWORD(STACK[0x6270]) = v433;
  LODWORD(STACK[0x6660]) = v433 + LODWORD(STACK[0x62F0]);
  v440 = STACK[0x6760];
  LODWORD(STACK[0x5F58]) = LODWORD(STACK[0x62D8]) + LODWORD(STACK[0x6760]);
  LODWORD(STACK[0x60C8]) = v434;
  LODWORD(STACK[0x62B0]) = v434 | v440;
  LODWORD(STACK[0x6278]) = LODWORD(STACK[0x6120]) | LODWORD(STACK[0x6198]);
  v441 = STACK[0x6170];
  LODWORD(STACK[0x5F50]) = LODWORD(STACK[0x5E90]) | LODWORD(STACK[0x6170]);
  LODWORD(STACK[0x6280]) = LODWORD(STACK[0x5EE0]) | LODWORD(STACK[0x5F10]);
  LODWORD(STACK[0x66A0]) = LODWORD(STACK[0x616C]) + v441;
  v442 = STACK[0x6300];
  LODWORD(STACK[0x5F48]) = LODWORD(STACK[0x5E80]) + LODWORD(STACK[0x6300]);
  LODWORD(STACK[0x62C0]) = v361;
  LODWORD(STACK[0x6658]) = v361 + v442;
  LODWORD(STACK[0x5CE8]) = (_DWORD)v359;
  LODWORD(STACK[0x6650]) = v359 | LODWORD(STACK[0x5ED8]);
  LODWORD(STACK[0x5F40]) = -330965061 * v430;
  LODWORD(STACK[0x6130]) = v357;
  LODWORD(STACK[0x5CE0]) = v427;
  LODWORD(STACK[0x5FC8]) = v375;
  LODWORD(STACK[0x5F38]) = -1808575955 * v375;
  STACK[0x5F30] = v436 + 11488;
  return v435();
}

uint64_t sub_100D18CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6AD8] + 8 * (int)STACK[0x6610]))(a1, a2, a3, a4, a5, a6, a7, 210606517);
}

uint64_t sub_100D18D20(uint64_t a1, int a2)
{
  int v2;
  unint64_t v3;

  LODWORD(STACK[0x6960]) = a2;
  v3 = STACK[0x5FA0];
  *(_QWORD *)(v3 + 11496) = STACK[0x6688];
  *(_QWORD *)(v3 + 11488) = STACK[0x6710];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * v2) - 8))();
}

uint64_t sub_100D18D9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8]
                                        + 8 * (((a1 + 1 == v1) * (((v2 - 1349719893) & 0x50731FA5) - 4308)) ^ v2))
                            - 8))();
}

uint64_t sub_100D18E14()
{
  uint64_t v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((4 * (v0 == 15)) | (16 * (v0 == 15))) ^ v1)) - 8))();
}

uint64_t sub_100D18E84(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;

  v4 = v3
     + 650477278
     - ((v3 + 650477278) >> 12)
     + ((v3 + 650477278 - ((v3 + 650477278) >> 12)) >> 5);
  LODWORD(STACK[0x64A0]) = v4;
  v5 = v4 - 981453883 - ((v4 - 981453883) >> 11) - ((v4 - 981453883 - ((v4 - 981453883) >> 11)) >> 2);
  LODWORD(STACK[0x6498]) = v5;
  LODWORD(STACK[0x6490]) = v5
                         - 1215832170
                         + ((v5 - 1215832170) >> 9)
                         - ((v5 - 1215832170 + ((v5 - 1215832170) >> 9)) >> 1);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v2 - 1798)) - 4))(a1, a2, LODWORD(STACK[0x6A20]), LODWORD(STACK[0x6A70]), LODWORD(STACK[0x6AA0]), STACK[0x61A8], LODWORD(STACK[0x6680]));
}

uint64_t sub_100D18F98@<X0>(__int16 a1@<W2>, int a2@<W3>, char a3@<W4>, uint64_t a4@<X5>, int a5@<W6>, int a6@<W8>)
{
  int v6;
  char v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  char v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;

  v22 = *(_DWORD *)(v8 + 4 * ((v6 ^ v13) + 512)) ^ v15;
  *(_DWORD *)(a4
            + 4 * (((((v6 ^ (2 * (v6 & v10))) & v18) >> a3) | ((v6 ^ (2 * (v6 & v10))) << v7)) ^ v20)) = ((((v22 ^ (2 * (v22 & v10))) & a2) << v7) | (((v22 ^ (2 * (v22 & v10))) & v17) >> a3)) ^ v14;
  v23 = bswap32(*(unsigned __int16 *)(v12 + 2 * ((a6 ^ v9 ^ v6 ^ v21) + 1027)) ^ v16);
  v24 = HIWORD(v23) ^ (2 * (HIWORD(v23) & a1));
  *(_DWORD *)(STACK[0x6AB0]
            + 4 * (((((v6 ^ (2 * (v6 & v10))) & v18) >> a3) | ((v6 ^ (2 * (v6 & v10))) << v7)) ^ v20)) = (((v24 & a2) << v7) | ((v24 & v11) >> a3)) ^ a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v6 == 255) * v19) ^ a6)) - 4))();
}

uint64_t sub_100D1905C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  char v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  char v37;
  char v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  char v47;
  int v48;
  unint64_t v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  char v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  char v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  char v96;
  char v97;
  int v98;
  int v99;
  int v100;
  int v101;
  uint64_t v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  char v128;
  char v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  BOOL v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  int v163;
  char v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  BOOL v178;
  char v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  char v223;
  int v224;
  int v225;
  int v226;
  int v227;
  char v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  unint64_t v293;
  int v294;
  int v295;
  char v296;
  unsigned int v297;
  int v298;
  int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unint64_t v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned int v319;
  int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  int v331;
  unsigned int v332;
  BOOL v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  uint64_t (*v342)(void);

  *(_QWORD *)(v8 - 152) = v7;
  v9 = LODWORD(STACK[0x6810]) << 24;
  LODWORD(STACK[0x6610]) = v6 ^ 0x2127;
  v10 = LODWORD(STACK[0x6830]) << ((v6 ^ 0x27) + 104);
  v11 = LODWORD(STACK[0x69E0]) << 16;
  v12 = (unsigned __int16)(LODWORD(STACK[0x69A0]) << 8) | (LODWORD(STACK[0x6850]) << 16) | (LODWORD(STACK[0x6860]) << 24) | LODWORD(STACK[0x6840]);
  v13 = LODWORD(STACK[0x6980]) | (LODWORD(STACK[0x6820]) << 24);
  v14 = STACK[0x6628];
  v15 = STACK[0x68C0];
  LODWORD(STACK[0x6400]) = v12;
  v16 = v10 & 0xFF00 | v13 & 0xFF00FFFF | (LODWORD(STACK[0x69B0]) << 16);
  v17 = v11 & 0xFFFF00FF | (LODWORD(STACK[0x6990]) << 8) | (LODWORD(STACK[0x69C0]) << 24);
  v18 = v9 & 0xFF000000 | (LODWORD(STACK[0x6A00]) << 16) | LODWORD(STACK[0x69D0]) | (LODWORD(STACK[0x67F0]) << 8);
  v19 = v16 ^ (((-1754315689 * (v15 - v14 - v12)) ^ ((-1754315689 * (v15 - v14 - v12)) >> 16))
             + (((-1754315689 * (v15 - v14 - v12)) ^ ((-1754315689 * (v15 - v14 - v12)) >> 16)) >> 8));
  v20 = v16;
  LODWORD(STACK[0x63F0]) = v16;
  v21 = (-1876760643 * v19) ^ ((-1876760643 * v19) >> 16);
  v22 = v17 & 0xFFFFFF00 | LODWORD(STACK[0x6800]);
  LODWORD(STACK[0x63F8]) = v22;
  v23 = -1793688605 * (v21 - v22 + (v21 >> 8)) - ((-1793688605 * (v21 - v22 + (v21 >> 8))) >> 16);
  LODWORD(STACK[0x63E0]) = v18;
  v24 = 1579312333 * ((v23 - (v23 >> 8)) ^ v18) - ((1579312333 * ((v23 - (v23 >> 8)) ^ v18)) >> 16);
  v25 = v24 - (v24 >> 8);
  v26 = 8 * v25;
  v27 = STACK[0x6880];
  v28 = STACK[0x6950];
  v29 = LODWORD(STACK[0x6880]) - LODWORD(STACK[0x6950]) - v12;
  v30 = -8 * v25;
  LODWORD(STACK[0x6980]) = -8 * v25;
  v31 = -1648500851
      * ((687237059 * v29 + ((687237059 * v29) >> 16)) ^ ((687237059 * v29
                                                                       + ((687237059 * v29) >> 16)) >> 8) ^ v22);
  v32 = 748734063 * ((v31 ^ HIWORD(v31) ^ ((v31 ^ HIWORD(v31)) >> 8)) - v20);
  v33 = -1685476361 * (v32 ^ HIWORD(v32) ^ v18 ^ ((v32 ^ HIWORD(v32)) >> 8))
      + ((-1685476361 * (v32 ^ HIWORD(v32) ^ v18 ^ ((v32 ^ HIWORD(v32)) >> 8))) >> 16);
  v34 = v25 + v33 + (v33 >> 8);
  v35 = v33 + (v33 >> 8);
  if ((v34 & 1) != 0)
    v36 = STACK[0x68B0];
  else
    v36 = STACK[0x6930];
  v37 = v34 + v25;
  v38 = v25;
  LODWORD(STACK[0x6840]) = v25;
  if ((v34 & 1) != 0)
    v39 = STACK[0x6920];
  else
    v39 = STACK[0x6910];
  v40 = STACK[0x6618];
  if ((v37 & 1) != 0)
    v41 = STACK[0x6618];
  else
    v41 = v14;
  LODWORD(STACK[0x69D0]) = v41;
  v42 = STACK[0x6620];
  if ((v37 & 1) != 0)
    v43 = STACK[0x6620];
  else
    v43 = v40;
  LODWORD(STACK[0x6A00]) = v43;
  v44 = STACK[0x6630];
  if ((v37 & 1) == 0)
    v14 = STACK[0x6630];
  LODWORD(STACK[0x69E0]) = v14;
  if ((v37 & 1) == 0)
    v44 = v42;
  LODWORD(STACK[0x69C0]) = v44;
  if ((v37 & 2) != 0)
    v45 = v41;
  else
    v45 = v44;
  LODWORD(STACK[0x6850]) = v45;
  if ((v37 & 2) != 0)
    v46 = v43;
  else
    v46 = v14;
  LODWORD(STACK[0x6860]) = v46;
  v47 = v26 & 0x18;
  HIDWORD(v49) = v45 << (v26 & 0x18);
  LODWORD(v49) = HIDWORD(v49);
  v48 = v49 >> 10;
  if ((v30 & 0x18) != 0)
    v46 = (v46 >> (v30 & 0x18)) + (v46 << (v26 & 0x18));
  LODWORD(STACK[0x67E0]) = v46;
  v50 = __ROR4__(v48 ^ __ROR4__(v45 >> (v30 & 0x18), 10) ^ 0xEFF57DDA, 22) ^ 0xD5F76BBF;
  if ((v30 & 0x18) != 0)
    v51 = v50;
  else
    v51 = v45;
  LODWORD(STACK[0x67B0]) = v51;
  if ((v34 & 2) != 0)
    v52 = v39;
  else
    v52 = v36;
  if ((v34 & 2) != 0)
    v53 = v36;
  else
    v53 = v39;
  v54 = v30 & 0x18;
  LODWORD(STACK[0x6830]) = v53;
  LODWORD(STACK[0x6820]) = v52;
  v55 = ((v29 ^ -v29 ^ (LODWORD(STACK[0x6038]) - (v29 ^ LODWORD(STACK[0x6038])))) + LODWORD(STACK[0x6038])) ^ v29;
  if ((v30 & 0x18) != 0)
    v53 = (v53 << v47) ^ (v53 >> (v30 & 0x18));
  LODWORD(STACK[0x65E0]) = v53;
  if ((v30 & 0x18) != 0)
    v56 = (v52 << v47) ^ (v52 >> (v30 & 0x18));
  else
    v56 = v52;
  LODWORD(STACK[0x65E8]) = v56;
  LODWORD(STACK[0x6990]) = v35;
  v57 = STACK[0x6040];
  if ((v35 & 1) != 0)
    v58 = STACK[0x6040];
  else
    v58 = v55;
  LODWORD(STACK[0x69A0]) = v58;
  v59 = STACK[0x6058];
  if ((v35 & 1) != 0)
    v60 = v55;
  else
    v60 = STACK[0x6058];
  LODWORD(STACK[0x65D8]) = v60;
  v61 = STACK[0x68A0];
  if ((v35 & 1) == 0)
    v61 = STACK[0x6890];
  v62 = STACK[0x6050];
  if ((v35 & 1) != 0)
    v63 = STACK[0x6050];
  else
    v63 = v57;
  LODWORD(STACK[0x65D0]) = v63;
  if ((v35 & 1) != 0)
    v62 = v59;
  LODWORD(STACK[0x6590]) = v62;
  if ((v35 & 1) != 0)
    v64 = v15;
  else
    v64 = STACK[0x68D0];
  if ((v35 & 2) != 0)
    v65 = v61;
  else
    v65 = v64;
  LODWORD(STACK[0x6800]) = v65;
  if ((v35 & 2) != 0)
    v66 = v64;
  else
    v66 = v61;
  if ((v35 & 2) != 0)
    v67 = v58;
  else
    v67 = v62;
  if ((v35 & 2) != 0)
    v68 = v63;
  else
    v68 = v60;
  v69 = (v65 << (v26 & 0x18)) ^ (v65 >> v54);
  if ((v26 & 0x18) == 0)
    v69 = v65;
  LODWORD(STACK[0x6558]) = v69;
  v70 = v37 + v38;
  v71 = STACK[0x6010];
  v72 = STACK[0x6000];
  if (((v37 + v38) & 1) != 0)
    v73 = STACK[0x6010];
  else
    v73 = STACK[0x6000];
  LODWORD(STACK[0x6430]) = v73;
  v74 = STACK[0x5FE8];
  v75 = STACK[0x5FE0];
  if ((v70 & 1) != 0)
    v76 = STACK[0x5FE0];
  else
    v76 = STACK[0x5FE8];
  LODWORD(STACK[0x6428]) = v76;
  v77 = STACK[0x6008];
  if ((v70 & 1) != 0)
    v78 = STACK[0x6008];
  else
    v78 = v27;
  LODWORD(STACK[0x6420]) = v78;
  v79 = STACK[0x5FF8];
  v80 = STACK[0x5FF0];
  if ((v70 & 1) != 0)
    v81 = STACK[0x5FF8];
  else
    v81 = STACK[0x5FF0];
  LODWORD(STACK[0x6410]) = v81;
  if ((v70 & 1) != 0)
    v79 = v74;
  LODWORD(STACK[0x6408]) = v79;
  if ((v70 & 1) == 0)
    v80 = v75;
  LODWORD(STACK[0x63E8]) = v80;
  if ((v70 & 2) != 0)
  {
    v82 = v80;
  }
  else
  {
    v76 = v81;
    v82 = v79;
  }
  if ((v70 & 2) != 0)
    v83 = v78;
  else
    v83 = v73;
  LODWORD(STACK[0x6810]) = v83;
  v84 = __ROR4__(v83, v54);
  if ((v26 & 0x18) == 0)
    v84 = v83;
  LODWORD(STACK[0x6488]) = v84;
  v85 = STACK[0x68E0];
  if ((v37 & 1) != 0)
    v85 = v28;
  LODWORD(STACK[0x69B0]) = v85;
  v86 = STACK[0x68F0];
  if ((v37 & 1) == 0)
    v86 = STACK[0x6900];
  LODWORD(STACK[0x65C8]) = v86;
  if ((v37 & 2) != 0)
    v85 = v86;
  LODWORD(STACK[0x67F0]) = v85;
  v87 = v26;
  if ((v26 & 0x18) != 0)
    v85 = (v85 >> v54) ^ (v85 << (v26 & 0x18));
  LODWORD(STACK[0x6468]) = v85;
  if ((v34 & 1) != 0)
    v88 = STACK[0x6088];
  else
    v88 = STACK[0x60B0];
  if ((v34 & 1) != 0)
    v89 = STACK[0x6060];
  else
    v89 = STACK[0x6088];
  if ((v34 & 1) != 0)
    v90 = STACK[0x60B0];
  else
    v90 = STACK[0x6080];
  if ((v34 & 1) != 0)
    v91 = STACK[0x6080];
  else
    v91 = STACK[0x6060];
  v92 = v82;
  v93 = v82 >> v54;
  if ((v34 & 2) != 0)
    v94 = v90;
  else
    v94 = v89;
  LODWORD(STACK[0x6608]) = v6;
  if ((v34 & 2) != 0)
    v95 = v91;
  else
    v95 = v88;
  v96 = v87 & 0x18;
  v97 = v87;
  LODWORD(STACK[0x63A0]) = v87;
  LODWORD(STACK[0x67D0]) = v92;
  v98 = (v92 << (v87 & 0x18)) ^ v93;
  LODWORD(STACK[0x67C0]) = v76;
  v99 = (v76 << (v87 & 0x18)) + (v76 >> v54);
  v100 = v68;
  LODWORD(STACK[0x6780]) = v68;
  v101 = (v68 << (v87 & 0x18)) ^ (v68 >> v54);
  LODWORD(STACK[0x6600]) = v67;
  v102 = *(_QWORD *)(v8 - 152);
  v103 = (v67 >> v54) ^ (v67 << (v87 & 0x18));
  LODWORD(STACK[0x67A0]) = v94;
  v104 = (v94 >> v54) ^ (v94 << (v87 & 0x18));
  LODWORD(STACK[0x6790]) = v95;
  v105 = (v95 >> v54) ^ (v95 << (v87 & 0x18));
  if ((v87 & 0x18) != 0)
    v92 = v98;
  LODWORD(STACK[0x6418]) = v92;
  if ((v87 & 0x18) != 0)
    v76 = v99;
  LODWORD(STACK[0x6438]) = v76;
  if ((v87 & 0x18) != 0)
    v100 = v101;
  LODWORD(STACK[0x6448]) = v100;
  if ((v87 & 0x18) != 0)
    v106 = v103;
  else
    v106 = v67;
  LODWORD(STACK[0x6440]) = v106;
  if ((v87 & 0x18) != 0)
    v94 = v104;
  LODWORD(STACK[0x6450]) = v94;
  if ((v87 & 0x18) != 0)
    v107 = v105;
  else
    v107 = v95;
  LODWORD(STACK[0x6458]) = v107;
  v108 = STACK[0x6980];
  LODWORD(STACK[0x65F0]) = v66;
  v109 = (v21 | 0xF6AFE739) - ((v21 | 0xF6AFE739) ^ v21) + LODWORD(STACK[0x6870]) - v21;
  if ((v108 & 0x18) != 0)
    v110 = (v66 >> (v108 & 0x18)) + (v66 << v96);
  else
    v110 = v66;
  LODWORD(STACK[0x6480]) = v110;
  if ((v70 & 1) != 0)
    v111 = STACK[0x6880];
  else
    v111 = v71;
  if ((v70 & 1) != 0)
    v112 = v72;
  else
    v112 = v77;
  if ((v34 & 1) != 0)
    v113 = STACK[0x6730];
  else
    v113 = v109;
  v114 = STACK[0x6028];
  if ((v34 & 1) != 0)
  {
    v115 = STACK[0x6910];
  }
  else
  {
    v109 = STACK[0x6028];
    v115 = STACK[0x68B0];
  }
  if ((v34 & 1) != 0)
    v116 = STACK[0x6698];
  else
    v116 = STACK[0x6730];
  if ((v34 & 1) != 0)
    v117 = STACK[0x6930];
  else
    v117 = STACK[0x6920];
  if ((v34 & 1) == 0)
    v114 = STACK[0x6698];
  if ((v70 & 2) != 0)
    v118 = v111;
  else
    v118 = v112;
  if ((v34 & 2) != 0)
    v119 = v89;
  else
    v119 = v90;
  if ((v34 & 2) != 0)
    v120 = v115;
  else
    v120 = v117;
  LODWORD(STACK[0x6598]) = v120;
  if ((v34 & 2) != 0)
    v121 = v117;
  else
    v121 = v115;
  LODWORD(STACK[0x6578]) = v121;
  if ((v34 & 2) != 0)
    v122 = v109;
  else
    v122 = v116;
  if ((v34 & 2) != 0)
    v123 = v116;
  else
    v123 = v109;
  if ((v34 & 2) != 0)
    v124 = v88;
  else
    v124 = v91;
  if ((v34 & 2) != 0)
    v125 = v114;
  else
    v125 = v113;
  if ((v34 & 2) != 0)
    v126 = v113;
  else
    v126 = v114;
  LODWORD(STACK[0x65F8]) = v118;
  v127 = v118 << v96;
  v128 = v108;
  v129 = v108 & 0x18;
  v130 = (v118 >> (v108 & 0x18)) + v127;
  if ((v108 & 0x18) == 0)
    v130 = v118;
  LODWORD(STACK[0x6460]) = v130;
  v131 = STACK[0x6030];
  v132 = STACK[0x6018];
  if ((v37 & 1) != 0)
    v133 = STACK[0x6030];
  else
    v133 = STACK[0x6018];
  v134 = STACK[0x6950];
  if ((v37 & 1) != 0)
  {
    v134 = STACK[0x6900];
    v135 = STACK[0x68E0];
  }
  else
  {
    v135 = STACK[0x68F0];
  }
  if ((v37 & 1) != 0)
  {
    v131 = STACK[0x6048];
    v136 = STACK[0x6020];
  }
  else
  {
    v132 = STACK[0x6020];
    v136 = STACK[0x6048];
  }
  v137 = (v37 & 2) == 0;
  if ((v37 & 2) != 0)
    v138 = v136;
  else
    v138 = v133;
  if (v137)
    v139 = v136;
  else
    v139 = v133;
  v140 = STACK[0x69D0];
  if (!v137)
    v140 = STACK[0x69C0];
  LODWORD(STACK[0x65C0]) = v140;
  v141 = STACK[0x69B0];
  if (v137)
    v141 = STACK[0x65C8];
  LODWORD(STACK[0x69D0]) = v141;
  v142 = STACK[0x6A00];
  if (!v137)
    v142 = STACK[0x69E0];
  LODWORD(STACK[0x65A0]) = v142;
  if (v137)
    v143 = v134;
  else
    v143 = v135;
  LODWORD(STACK[0x69E0]) = v143;
  if (v137)
    v144 = v135;
  else
    v144 = v134;
  if (v137)
    v145 = v131;
  else
    v145 = v132;
  if (!v137)
    v132 = v131;
  v146 = STACK[0x6990];
  v147 = STACK[0x68C0];
  if ((STACK[0x6990] & 1) != 0)
    v147 = STACK[0x6890];
  v148 = STACK[0x68A0];
  if ((v146 & 1) != 0)
    v148 = STACK[0x68D0];
  v149 = STACK[0x6690];
  if ((v146 & 1) != 0)
    v150 = STACK[0x6640];
  else
    v150 = STACK[0x6690];
  if ((v146 & 1) != 0)
    v151 = STACK[0x6648];
  else
    v151 = STACK[0x6640];
  if ((v146 & 1) != 0)
  {
    v152 = STACK[0x6638];
  }
  else
  {
    v149 = STACK[0x6638];
    v152 = STACK[0x6648];
  }
  if ((v146 & 2) != 0)
    v153 = v151;
  else
    v153 = v149;
  LODWORD(STACK[0x69C0]) = v153;
  if ((v146 & 2) != 0)
    v154 = v149;
  else
    v154 = v151;
  LODWORD(STACK[0x69B0]) = v154;
  if ((v146 & 2) != 0)
    v155 = v147;
  else
    v155 = v148;
  LODWORD(STACK[0x6470]) = v155;
  if ((v146 & 2) != 0)
    v147 = v148;
  LODWORD(STACK[0x6478]) = v147;
  if ((v146 & 2) != 0)
    v156 = STACK[0x6590];
  else
    v156 = STACK[0x69A0];
  if ((v146 & 2) != 0)
    v157 = STACK[0x65D8];
  else
    v157 = STACK[0x65D0];
  if ((v146 & 2) != 0)
    v158 = v150;
  else
    v158 = v152;
  LODWORD(STACK[0x69A0]) = v158;
  if ((v146 & 2) != 0)
    v159 = v152;
  else
    v159 = v150;
  LODWORD(STACK[0x63A8]) = v159;
  if ((v70 & 2) != 0)
    v160 = STACK[0x6408];
  else
    v160 = STACK[0x63E8];
  if ((v70 & 2) != 0)
    v161 = v112;
  else
    v161 = v111;
  v162 = STACK[0x6430];
  if ((v70 & 2) == 0)
    v162 = STACK[0x6420];
  LODWORD(STACK[0x6A00]) = v162;
  if ((v70 & 2) != 0)
    v163 = STACK[0x6410];
  else
    v163 = STACK[0x6428];
  v164 = v97 & 0x18;
  v165 = v122;
  LODWORD(STACK[0x65A8]) = v122;
  v166 = (v122 << (v97 & 0x18)) ^ (v122 >> v129);
  v167 = v139;
  LODWORD(STACK[0x65B8]) = v139;
  v168 = (v139 >> v129) ^ (v139 << (v97 & 0x18));
  LODWORD(STACK[0x65C8]) = v132;
  v169 = (v132 >> v129) + (v132 << (v97 & 0x18));
  v170 = v160;
  LODWORD(STACK[0x65D8]) = v160;
  v171 = (v160 >> v129) ^ (v160 << (v97 & 0x18));
  LODWORD(STACK[0x65B0]) = v126;
  v172 = __ROR4__(v126, v129);
  LODWORD(STACK[0x65D0]) = v163;
  v173 = __ROR4__(v163, v129);
  if ((v97 & 0x18) == 0)
    v172 = v126;
  LODWORD(STACK[0x63B0]) = v172;
  if ((v97 & 0x18) == 0)
    v166 = v165;
  LODWORD(STACK[0x63B8]) = v166;
  if ((v97 & 0x18) != 0)
    v174 = v168;
  else
    v174 = v167;
  LODWORD(STACK[0x63C8]) = v174;
  if ((v97 & 0x18) != 0)
    v175 = v169;
  else
    v175 = v132;
  LODWORD(STACK[0x63C0]) = v175;
  if ((v97 & 0x18) != 0)
    v176 = v171;
  else
    v176 = v170;
  LODWORD(STACK[0x63E8]) = v176;
  if ((v97 & 0x18) != 0)
    v177 = v173;
  else
    v177 = v163;
  LODWORD(STACK[0x63D8]) = v177;
  v179 = v128 & 0x18;
  v178 = (v128 & 0x18) == 0;
  v180 = v123;
  LODWORD(STACK[0x6570]) = v123;
  LODWORD(STACK[0x6430]) = (v123 << v164) ^ (v123 >> v179);
  v181 = v125;
  LODWORD(STACK[0x6568]) = v125;
  LODWORD(STACK[0x6428]) = (v125 << v164) ^ (v125 >> v179);
  v182 = v145;
  LODWORD(STACK[0x6588]) = v145;
  LODWORD(STACK[0x6420]) = (v145 << v164) ^ (v145 >> v179);
  v183 = v138;
  LODWORD(STACK[0x6580]) = v138;
  v184 = (v138 << v164) + (v138 >> v179);
  v185 = v157;
  LODWORD(STACK[0x6538]) = v157;
  v186 = (v157 >> v179) ^ (v157 << v164);
  v187 = v156;
  LODWORD(STACK[0x6540]) = v156;
  v188 = (v156 >> v179) + (v156 << v164);
  v189 = v124;
  LODWORD(STACK[0x6550]) = v124;
  v190 = (v124 >> v179) + (v124 << v164);
  LODWORD(STACK[0x6548]) = v119;
  v191 = (v119 << v164) ^ (v119 >> v179);
  v192 = v144;
  LODWORD(STACK[0x6560]) = v144;
  v193 = (v144 << v164) + (v144 >> v179);
  v194 = STACK[0x69D0];
  v195 = (v194 << v164) + (v194 >> v179);
  v196 = STACK[0x69E0];
  v197 = (v196 >> v179) ^ (v196 << v164);
  v198 = v161;
  LODWORD(STACK[0x6590]) = v161;
  v199 = (v161 << v164) ^ (v161 >> v179);
  v200 = STACK[0x6A00];
  v201 = (v200 >> v179) ^ (v200 << v164);
  v202 = LODWORD(STACK[0x6990]) + LODWORD(STACK[0x62A8]);
  v203 = STACK[0x6430];
  if (v178)
    v203 = v180;
  v204 = STACK[0x6428];
  if (v178)
  {
    v204 = v181;
    v205 = v182;
  }
  else
  {
    v205 = STACK[0x6420];
  }
  if (v178)
    v206 = v183;
  else
    v206 = v184;
  if (!v178)
    v185 = v186;
  LODWORD(STACK[0x63D0]) = v185;
  if (v178)
    v207 = v187;
  else
    v207 = v188;
  if (v178)
    v208 = v119;
  else
    v208 = v191;
  LODWORD(STACK[0x6410]) = v208;
  if (v178)
    v209 = v189;
  else
    v209 = v190;
  LODWORD(STACK[0x6408]) = v209;
  if (!v178)
    v196 = v197;
  LODWORD(STACK[0x6428]) = v196;
  if (v178)
    v210 = v192;
  else
    v210 = v193;
  LODWORD(STACK[0x6430]) = v210;
  if (v178)
    v211 = v194;
  else
    v211 = v195;
  LODWORD(STACK[0x6420]) = v211;
  if (v178)
    v212 = v198;
  else
    v212 = v199;
  LODWORD(STACK[0x6990]) = v212;
  if (v178)
    v213 = v200;
  else
    v213 = v201;
  if ((v202 & 1) != 0)
    v214 = STACK[0x6400];
  else
    v214 = STACK[0x63E0];
  if ((v202 & 1) != 0)
    v215 = STACK[0x63E0];
  else
    v215 = STACK[0x63F8];
  if ((v202 & 1) != 0)
    v216 = STACK[0x63F0];
  else
    v216 = STACK[0x6400];
  if ((v202 & 1) != 0)
    v217 = STACK[0x63F8];
  else
    v217 = STACK[0x63F0];
  v218 = v202;
  if ((v202 & 2) != 0)
    v219 = v217;
  else
    v219 = v214;
  if ((v202 & 2) != 0)
  {
    v220 = v216;
  }
  else
  {
    v214 = v217;
    v220 = v215;
  }
  if ((v202 & 2) != 0)
    v221 = v215;
  else
    v221 = v216;
  v222 = STACK[0x6980];
  v223 = STACK[0x6980] & 0x18;
  v224 = (v220 >> v223) ^ (v220 << v164);
  if ((STACK[0x6980] & 0x18) != 0)
    v225 = v224;
  else
    v225 = v220;
  v226 = __ROR4__(v214, v223);
  if ((v222 & 0x18) == 0)
    v226 = v214;
  v227 = STACK[0x63A0];
  v228 = STACK[0x63A0] & 0x18;
  v229 = (LODWORD(STACK[0x69C0]) << v228) + (LODWORD(STACK[0x69C0]) >> v223);
  if ((STACK[0x63A0] & 0x18) == 0)
    v229 = STACK[0x69C0];
  v230 = STACK[0x6180];
  v231 = LODWORD(STACK[0x6180]) ^ LODWORD(STACK[0x6178]) ^ v229 ^ v225;
  v232 = LODWORD(STACK[0x6290]) ^ LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x6180]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v231)), 24);
  v233 = __ROR4__(v221, v223);
  if ((v227 & 0x18) != 0)
    v221 = v233;
  v234 = __ROR4__(STACK[0x69B0], v223);
  if ((v227 & 0x18) == 0)
    v234 = STACK[0x69B0];
  v235 = v230 ^ LODWORD(STACK[0x5FB8]);
  v236 = v235 ^ v234 ^ v221;
  v237 = v232 ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v236)), 8);
  v238 = (LODWORD(STACK[0x69A0]) >> v223) ^ (LODWORD(STACK[0x69A0]) << v228);
  v239 = __ROR4__(v219, v223);
  if ((v227 & 0x18) != 0)
    v219 = v239;
  v240 = STACK[0x63A8];
  v241 = (v240 >> v223) ^ (v240 << v228);
  v242 = v235 ^ v219;
  v243 = v230 ^ LODWORD(STACK[0x6298]) ^ v226;
  if ((v227 & 0x18) == 0)
    v238 = STACK[0x69A0];
  v244 = v243 ^ v238;
  if ((v227 & 0x18) == 0)
    v241 = STACK[0x63A8];
  v245 = v242 ^ v241;
  v246 = v237 ^ *(_DWORD *)(a6 + 4 * BYTE2(v244)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v245), 16);
  v247 = LODWORD(STACK[0x5FD0]) ^ v230 ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v245)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v231), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v244)), 24);
  v248 = v230 ^ LODWORD(STACK[0x5F98]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v245)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v244)), 8) ^ *(_DWORD *)(a6 + 4 * BYTE2(v231)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v236), 16);
  v249 = v230 ^ LODWORD(STACK[0x66C0]) ^ LODWORD(STACK[0x66B0]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v244), 16) ^ *(_DWORD *)(a6 + 4 * BYTE2(v245)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v236)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v231)), 8);
  v250 = v247 ^ *(_DWORD *)(a6 + 4 * BYTE2(v236)) ^ LODWORD(STACK[0x63B0]);
  v251 = v246 ^ v203;
  v252 = v249 ^ LODWORD(STACK[0x63B8]);
  v253 = v230 ^ LODWORD(STACK[0x66C8]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v250)), 24) ^ *(_DWORD *)(a6 + 4 * BYTE2(v252)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * (v246 ^ v203)), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * ((unsigned __int16)(v248 ^ v204) >> 8)), 8);
  v254 = v230 ^ LODWORD(STACK[0x66A8]);
  v255 = v254 ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v251)), 8) ^ *(_DWORD *)(a6
                                                                             + 4
                                                                             * ((v248 ^ v204) >> 16)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v252)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v250), 16);
  v256 = v230 ^ LODWORD(STACK[0x62B8]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v251)), 24) ^ *(_DWORD *)(a6 + 4 * BYTE2(v250)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * (v248 ^ v204)), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v252)), 8) ^ LODWORD(STACK[0x63C8]);
  v257 = v230 ^ LODWORD(STACK[0x66F0]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * ((v248 ^ v204) >> 24)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v252), 16) ^ LODWORD(STACK[0x63C0]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v250)), 8) ^ *(_DWORD *)(a6 + 4 * BYTE2(v251));
  v258 = LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x5FD8]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v256)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * ((unsigned __int16)(v255 ^ v206) >> 8)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v257), 16);
  v259 = LODWORD(STACK[0x62C8]) ^ LODWORD(STACK[0x62F8]) ^ v230;
  v260 = v253 ^ v205;
  v261 = v259 ^ __ROR4__(*(_DWORD *)(a6 + 4 * (v255 ^ v206)), 16) ^ LODWORD(STACK[0x6418]) ^ *(_DWORD *)(a6 + 4 * BYTE2(v256)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v257)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * ((unsigned __int16)(v253 ^ v205) >> 8)), 8);
  v262 = v254 ^ LODWORD(STACK[0x5F38]) ^ LODWORD(STACK[0x5FB0]) ^ LODWORD(STACK[0x63D8]) ^ *(_DWORD *)(a6 + 4 * BYTE2(v257)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v256)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * ((v255 ^ v206) >> 24)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * (v253 ^ v205)), 16);
  v263 = v259 ^ LODWORD(STACK[0x63E8]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v260)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v256), 16) ^ *(_DWORD *)(a6 + 4 * ((v255 ^ v206) >> 16)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v257)), 8);
  v264 = v102 ^ 0xF8535427 ^ LODWORD(STACK[0x64A0]) ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x6490]);
  v265 = LODWORD(STACK[0x6730]) ^ 0xFFF64810 ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x6648]) ^ LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6630]) ^ LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x5FC0]) ^ v264;
  v266 = v258 ^ *(_DWORD *)(a6 + 4 * BYTE2(v260));
  v267 = v264 ^ LODWORD(STACK[0x6268]);
  v268 = v230 ^ LODWORD(STACK[0x6670]) ^ LODWORD(STACK[0x6438]) ^ (v266 + 572148271 * (v267 - v265));
  v269 = v230 ^ LODWORD(STACK[0x6288]) ^ LODWORD(STACK[0x63D0]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v261), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v268)), 24) ^ *(_DWORD *)(a6 + 4 * BYTE2(v263)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v262)), 8);
  v270 = v230 ^ LODWORD(STACK[0x66E8]) ^ v207 ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v263)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v261)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v268), 16);
  v271 = LODWORD(STACK[0x6700]) ^ LODWORD(STACK[0x6708]) ^ v230 ^ LODWORD(STACK[0x6440]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v261)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v262), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v263)), 8);
  v272 = v230 ^ LODWORD(STACK[0x6678]) ^ LODWORD(STACK[0x6448]) ^ *(_DWORD *)(a6 + 4 * BYTE2(v261)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v262)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v268)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v263), 16);
  v273 = v270 ^ *(_DWORD *)(a6 + 4 * BYTE2(v262));
  v274 = v271 ^ *(_DWORD *)(a6 + 4 * BYTE2(v268));
  v275 = LODWORD(STACK[0x5FA8])
       + 642859879 * (v265 - v267)
       + (LODWORD(STACK[0x6260]) ^ 0xA61E1BAA ^ LODWORD(STACK[0x5FC8]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v269)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v272)), 8) ^ *(_DWORD *)(a6+ 4 * BYTE2(v273)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v274), 16));
  v276 = LODWORD(STACK[0x66D0]) ^ LODWORD(STACK[0x6750]) ^ v230 ^ LODWORD(STACK[0x5F88]) ^ LODWORD(STACK[0x5F88]) ^ LODWORD(STACK[0x6408]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v269), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v273)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v274)), 8) ^ *(_DWORD *)(a6 + 4 * BYTE2(v272));
  v277 = LODWORD(STACK[0x62D0]) ^ LODWORD(STACK[0x6750]) ^ v230 ^ LODWORD(STACK[0x6450]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v269)), 8) ^ *(_DWORD *)(a6 + 4 * BYTE2(v274)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v273), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v272)), 24);
  v278 = LODWORD(STACK[0x6410]) ^ v230 ^ v275;
  v279 = STACK[0x5F80];
  if ((v278 & STACK[0x5F80]) != 0)
    v279 = STACK[0x5F68];
  v280 = v230 ^ LODWORD(STACK[0x5F70]) ^ LODWORD(STACK[0x6458]) ^ *(_DWORD *)(a6 + 4 * BYTE2(v269)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v272), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v273)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v274)), 24);
  v281 = (v279 + v278) ^ LODWORD(STACK[0x5F78]);
  v282 = v230 ^ LODWORD(STACK[0x62A0]) ^ LODWORD(STACK[0x6420]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v276)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v281), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v280)), 8) ^ *(_DWORD *)(a6 + 4 * BYTE2(v277));
  v283 = v230 ^ LODWORD(STACK[0x5F60]) ^ LODWORD(STACK[0x6428]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v276), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v277)), 24) ^ *(_DWORD *)(a6 + 4 * BYTE2(v280)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v281)), 8);
  v284 = LODWORD(STACK[0x62F0]) ^ LODWORD(STACK[0x6270]) ^ v230 ^ LODWORD(STACK[0x6430]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v277)), 8) ^ *(_DWORD *)(a6 + 4 * BYTE2(v276)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v280), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v281)), 24);
  v285 = v230 ^ LODWORD(STACK[0x6660]) ^ LODWORD(STACK[0x6468]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v280)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v276)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v277), 16) ^ *(_DWORD *)(a6 + 4 * BYTE2(v281));
  v286 = LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x6760]) ^ v230 ^ LODWORD(STACK[0x6488]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v282)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v285)), 24) ^ *(_DWORD *)(a6 + 4 * BYTE2(v284)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v283), 16);
  v287 = v230 ^ LODWORD(STACK[0x5F58]) ^ LODWORD(STACK[0x6990]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v282), 16) ^ *(_DWORD *)(a6 + 4 * BYTE2(v285)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v284)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v283)), 24);
  v288 = v230 ^ LODWORD(STACK[0x66D8]) ^ v213 ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v282)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v284), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v285)), 8) ^ *(_DWORD *)(a6 + 4 * BYTE2(v283));
  v289 = v230 ^ LODWORD(STACK[0x62B0]) ^ LODWORD(STACK[0x6460]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v285), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v283)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v284)), 24) ^ *(_DWORD *)(a6 + 4 * BYTE2(v282));
  v290 = v230 ^ LODWORD(STACK[0x62E8]) ^ LODWORD(STACK[0x6558]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v287), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v286)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v288)), 8) ^ *(_DWORD *)(a6 + 4 * BYTE2(v289));
  v291 = v230 ^ LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x6480]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v288)), 24) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v286)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v289), 16) ^ *(_DWORD *)(a6 + 4 * BYTE2(v287));
  HIDWORD(v293) = *(_DWORD *)(a6 + 4 * BYTE1(v290));
  LODWORD(v293) = HIDWORD(v293);
  v292 = v293 >> 8;
  HIDWORD(v293) = *(_DWORD *)(a6 + 4 * HIBYTE(v291));
  LODWORD(v293) = HIDWORD(v293);
  v294 = v293 >> 24;
  if ((v292 & 8 & HIBYTE(v293)) != 0)
    v295 = -(v292 & 8);
  else
    v295 = v292 & 8;
  v296 = v227 & 0x18;
  v297 = STACK[0x6470];
  v298 = (v297 << (v227 & 0x18)) + (v297 >> v223);
  if ((v227 & 0x18) == 0)
    v298 = STACK[0x6470];
  v299 = v230 ^ LODWORD(STACK[0x6278]);
  v300 = v299 ^ v298 ^ __ROR4__(*(_DWORD *)(a6 + 4 * v286), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v287)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v289)), 24) ^ *(_DWORD *)(a6 + 4 * BYTE2(v288));
  v301 = __ROR4__(STACK[0x6478], v223);
  if ((v227 & 0x18) == 0)
    v301 = STACK[0x6478];
  v302 = v299 ^ v301 ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v289)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v287)), 24) ^ *(_DWORD *)(a6 + 4 * BYTE2(v286)) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v288), 16);
  v303 = v230 ^ LODWORD(STACK[0x5F50]) ^ LODWORD(STACK[0x65E0]) ^ v292 & 0xFFFFFFF7 ^ *(_DWORD *)(a6 + 4 * BYTE2(v302)) ^ (v295 + v294) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v300), 16);
  v304 = __ROR4__(STACK[0x6578], v223);
  if ((v227 & 0x18) == 0)
    v304 = STACK[0x6578];
  v305 = v230 ^ LODWORD(STACK[0x6280]);
  v306 = v305 ^ v304 ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v300)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v291), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v302)), 24);
  v307 = v230 ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x65E8]) ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v291)), 8) ^ __ROR4__(*(_DWORD *)(a6 + 4 * v302), 16) ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v290)), 24);
  v308 = STACK[0x6598];
  v309 = (v308 << v296) ^ (v308 >> v223);
  if ((v227 & 0x18) == 0)
    v309 = STACK[0x6598];
  v310 = v305 ^ v309 ^ __ROR4__(*(_DWORD *)(a6 + 4 * HIBYTE(v300)), 24) ^ __ROR4__(*(_DWORD *)(a6+ 4 * v290), 16) ^ *(_DWORD *)(a6 + 4 * BYTE2(v291));
  v311 = *(_DWORD *)(a6 + 4 * BYTE2(v290));
  v312 = v310 ^ __ROR4__(*(_DWORD *)(a6 + 4 * BYTE1(v302)), 8);
  v313 = v306 ^ v311;
  v314 = v307 ^ *(_DWORD *)(a6 + 4 * BYTE2(v300));
  v315 = STACK[0x6AB0];
  v316 = v230 ^ LODWORD(STACK[0x5F48]) ^ LODWORD(STACK[0x67B0]) ^ *(_DWORD *)(STACK[0x6AB0]
                                                                            + 4
                                                                            * ((unsigned __int16)(v306 ^ v311) >> 8)) ^ __ROR4__(*(_DWORD *)(STACK[0x6AB0] + 4 * (v307 ^ *(_BYTE *)(a6 + 4 * BYTE2(v300)))), 8) ^ __ROR4__(*(_DWORD *)(STACK[0x6AB0] + 4 * BYTE2(v303)), 24) ^ __ROR4__(*(_DWORD *)(STACK[0x6AB0] + 4 * HIBYTE(v312)), 16);
  v317 = v230 ^ LODWORD(STACK[0x6658]) ^ LODWORD(STACK[0x67E0]) ^ __ROR4__(*(_DWORD *)(STACK[0x6AB0]+ 4 * v313), 8);
  v318 = __ROR4__(STACK[0x65A0], v223);
  if ((v227 & 0x18) == 0)
    v318 = STACK[0x65A0];
  v319 = LODWORD(STACK[0x6300]) ^ LODWORD(STACK[0x62C0]) ^ v230 ^ v318 ^ __ROR4__(*(_DWORD *)(v315 + 4 * HIBYTE(v303)), 16) ^ __ROR4__(*(_DWORD *)(v315 + 4 * BYTE2(v313)), 24) ^ *(_DWORD *)(v315 + 4 * BYTE1(v314)) ^ __ROR4__(*(_DWORD *)(v315 + 4 * v312), 8);
  v320 = v317 ^ __ROR4__(*(_DWORD *)(v315 + 4 * BYTE2(v312)), 24) ^ __ROR4__(*(_DWORD *)(v315 + 4 * HIBYTE(v314)), 16) ^ *(_DWORD *)(v315 + 4 * BYTE1(v303));
  if ((v227 & 0x18) != 0)
    v316 = (v316 << v223) + (v316 >> v296);
  v321 = __ROR4__(v320, v296);
  if ((v227 & 0x18) != 0)
  {
    v320 = v321;
    v319 = (v319 << v223) ^ (v319 >> v296);
  }
  v322 = STACK[0x65C0];
  v323 = (v322 >> (v222 & 0x18)) + (v322 << v296);
  if ((v222 & 0x18) == 0)
    v323 = STACK[0x65C0];
  v324 = v230 ^ LODWORD(STACK[0x6650]) ^ v323 ^ __ROR4__(*(_DWORD *)(v315 + 4 * HIBYTE(v313)), 16) ^ __ROR4__(*(_DWORD *)(v315 + 4 * BYTE2(v314)), 24) ^ __ROR4__(*(_DWORD *)(v315 + 4 * v303), 8) ^ *(_DWORD *)(v315 + 4 * BYTE1(v312));
  v325 = (v324 << (v222 & 0x18)) ^ (v324 >> v296);
  if ((v222 & 0x18) != 0)
    v324 = v325;
  if ((v218 & 1) != 0)
    v326 = v316;
  else
    v326 = v320;
  if ((v218 & 1) != 0)
    v327 = v320;
  else
    v327 = v324;
  if ((v218 & 1) != 0)
    v328 = v319;
  else
    v328 = v316;
  if ((v218 & 1) == 0)
    v324 = v319;
  v329 = v218 + 2 * LODWORD(STACK[0x6840]);
  v330 = LODWORD(STACK[0x6800]) ^ v297 ^ LODWORD(STACK[0x6478]) ^ LODWORD(STACK[0x65F0]) ^ LODWORD(STACK[0x6538]) ^ LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x6780]) ^ LODWORD(STACK[0x6540]) ^ LODWORD(STACK[0x69C0]) ^ v240 ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x69A0]) ^ v308 ^ LODWORD(STACK[0x6820]) ^ LODWORD(STACK[0x6578]) ^ LODWORD(STACK[0x6830]) ^ LODWORD(STACK[0x6548]) ^ LODWORD(STACK[0x6790]) ^ LODWORD(STACK[0x67A0]) ^ LODWORD(STACK[0x6550]) ^ LODWORD(STACK[0x6570]) ^ LODWORD(STACK[0x6568]) ^ LODWORD(STACK[0x65A8]) ^ LODWORD(STACK[0x65B0]) ^ LODWORD(STACK[0x6560]) ^ LODWORD(STACK[0x67F0]) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x65B8]) ^ LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6580]) ^ LODWORD(STACK[0x6588]) ^ LODWORD(STACK[0x6850]) ^ LODWORD(STACK[0x6860]) ^ v322 ^ LODWORD(STACK[0x65A0]) ^ LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x6810]) ^ LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x67C0]) ^ LODWORD(STACK[0x67D0]) ^ LODWORD(STACK[0x65D0]) ^ LODWORD(STACK[0x65D8]);
  v331 = v330 ^ v264;
  v332 = v330 ^ v264 ^ 0xFFF64810;
  v333 = (v329 & 2) == 0;
  if ((v329 & 2) != 0)
    v334 = v328;
  else
    v334 = v327;
  if (v333)
  {
    v327 = v328;
    v335 = v326;
  }
  else
  {
    v335 = v324;
  }
  v336 = v327 + 664341083 * (v332 - v267);
  v337 = -330965061 * (v330 ^ 0xFFF64810);
  LODWORD(STACK[0x6810]) = BYTE1(v336);
  v338 = v331 ^ LODWORD(STACK[0x6138]);
  if (v333)
    v326 = v324;
  v339 = v337 ^ LODWORD(STACK[0x5F40]) ^ v335;
  v340 = v334 + 320208683 * (v264 - v338);
  LODWORD(STACK[0x6850]) = BYTE2(v336);
  LODWORD(STACK[0x6830]) = BYTE2(v339);
  LODWORD(STACK[0x67C0]) = HIBYTE(v336);
  v341 = v267 ^ v332 ^ v326;
  LODWORD(STACK[0x6860]) = (v334 + 43 * (v264 - v338));
  LODWORD(STACK[0x6820]) = BYTE1(v339);
  LODWORD(STACK[0x6800]) = HIBYTE(v339);
  LODWORD(STACK[0x67A0]) = BYTE2(v340);
  LODWORD(STACK[0x6790]) = HIBYTE(v341);
  LODWORD(STACK[0x6840]) = v341;
  LODWORD(STACK[0x67F0]) = HIBYTE(v340);
  LODWORD(STACK[0x6780]) = BYTE1(v341);
  LODWORD(STACK[0x67E0]) = v339;
  LODWORD(STACK[0x67B0]) = BYTE2(v341);
  v342 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6608])) - 8);
  LODWORD(STACK[0x67D0]) = BYTE1(v340);
  return v342();
}

uint64_t sub_100D1B45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((946 * ((LODWORD(STACK[0x6610]) ^ 0x71 ^ (SLODWORD(STACK[0x6960]) < ((LODWORD(STACK[0x6610]) - 24847) | 0x4940) - 18896)) & 1)) ^ LODWORD(STACK[0x6610]))) - 8))(4294967268, 67, 4294967236, 155, LODWORD(STACK[0x6A30]), a6, 157, LODWORD(STACK[0x6A20]));
}

uint64_t sub_100D1B544()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (59 * (v1 == 1))))
                            - ((v0 - 14475) | 0x2680u)
                            + 14274))();
}

uint64_t sub_100D1B59C@<X0>(char a1@<W4>, int a2@<W5>, char a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  char v5;
  int v6;
  char v7;
  int v8;
  char v9;
  int v10;
  char v11;
  unint64_t v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  char v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v39;
  unsigned int v40;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unint64_t v64;
  uint64_t (*v65)(void);

  v12 = STACK[0x6770];
  v13 = ((a5 ^ 0xFFFFD915)
       + *(unsigned __int8 *)(STACK[0x6770] + (LODWORD(STACK[0x6328]) ^ 0x7Cu) + 1024)) ^ v6;
  v14 = v13 ^ (2 * (v13 & a4));
  v15 = *(unsigned __int8 *)(STACK[0x6770] + (LODWORD(STACK[0x6338]) ^ 9u) + 11802) ^ 0x61;
  v16 = STACK[0x6A50];
  v17 = *(unsigned __int8 *)(STACK[0x6770] + (LODWORD(STACK[0x6320]) ^ v5) + 23909);
  v18 = v17 ^ 0x17 ^ ((v8 ^ (2 * v17)) + 104);
  v19 = LODWORD(STACK[0x6340]) ^ 0xFFFFFFA8 ^ *(unsigned __int8 *)(STACK[0x6770]
                                                                 + (LODWORD(STACK[0x6340]) ^ 0xB1u)
                                                                 + 11031);
  v20 = *(unsigned __int8 *)(STACK[0x6770] + (LODWORD(STACK[0x6330]) ^ 0x31u) + 21320);
  v21 = v20 ^ ((v20 ^ 0xCC) >> 4) ^ ((v20 ^ 0xCC) >> 2) ^ 3;
  v22 = LODWORD(STACK[0x6350]) ^ *(unsigned __int8 *)(STACK[0x6770]
                                                    + (LODWORD(STACK[0x6350]) ^ v7)
                                                    + 4875) ^ 3;
  v23 = LODWORD(STACK[0x6368]) ^ 0xFFFFFFF4 ^ *(unsigned __int8 *)(STACK[0x6770]
                                                                 + (LODWORD(STACK[0x6368]) ^ 0xE2u)
                                                                 + 13601);
  v24 = STACK[0x6A60];
  LODWORD(STACK[0x6A00]) = (((v15 ^ (2 * (v15 & STACK[0x6A50]))) & v24) >> v9)
                         + ((v15 ^ (2 * (v15 & STACK[0x6A50]))) << v11);
  v25 = ((v14 & a1) >> v9) | (v14 << v11);
  v26 = ((2 * LODWORD(STACK[0x6348])) ^ 0xFFFFFFA4)
      + *(unsigned __int8 *)(v12 + (LODWORD(STACK[0x6348]) ^ 0xDBu) + 14116);
  LODWORD(STACK[0x69E0]) = (((v19 ^ (2 * (v19 & a4))) & v24) >> v9) | ((v19 ^ (2 * (v19 & a4))) << v11);
  LOBYTE(v19) = (((v22 ^ (2 * (v22 & v16))) & a1) >> v9) + ((v22 ^ (2 * (v22 & v16))) << v11);
  v27 = ((v23 ^ (2 * (v23 & v16))) << v11) | (((v23 ^ (2 * (v23 & v16))) & v24) >> v9);
  v28 = ((v18 ^ (2 * (v18 & v16))) << v11) ^ v10 ^ (((v18 ^ (2 * (v18 & v16))) & a1) >> v9);
  v29 = (v26 + 121) ^ 0xFFFFFFAC ^ (2 * (((v26 + 121) ^ 0xFFFFFFAC) & a4));
  v30 = LODWORD(STACK[0x6358]) ^ 0x39 ^ *(unsigned __int8 *)(v12
                                                           + ((2 * (LODWORD(STACK[0x6358]) ^ 0x8F)) & 0x6E)
                                                           + (unint64_t)(LODWORD(STACK[0x6358]) ^ 0x47B8u));
  v31 = v30 ^ (2 * (v30 & a4));
  v32 = ((v29 & a1) >> v9) | (v29 << v11);
  v33 = *(unsigned __int8 *)(v12 + (LODWORD(STACK[0x6360]) ^ a3) + 2051);
  v34 = v33 ^ 0xFFFFFFAE ^ ((2 * (v33 ^ 0x15)) | 4);
  v35 = ((v21 ^ (2 * (v21 & a4))) << v11) | (((v21 ^ (2 * (v21 & a4))) & v24) >> v9);
  v36 = *(unsigned __int8 *)(v12 + (LODWORD(STACK[0x6370]) ^ 0xF6u) + 17973) - 26;
  v37 = v36 ^ ((v36 & 0xF0) >> 4) ^ 0x30 ^ (2
                                                           * ((v36 ^ ((v36 & 0xF0) >> 4) ^ 0x30) & a4));
  v39 = *(unsigned __int8 *)(v12 + (LODWORD(STACK[0x6380]) ^ 0xFAu) + 9234);
  v40 = v39 ^ 0x2B ^ (((2 * v39) ^ 0xFFFFFF9C) - 44);
  v42 = (v31 << v11) ^ LODWORD(STACK[0x6130]) ^ ((v31 & a1) >> v9);
  v43 = (v37 << v11) ^ v10 ^ ((v37 & a1) >> v9);
  v44 = ((v34 ^ (2 * (v34 & v16))) << v11) ^ v10 ^ (((v34 ^ (2 * (v34 & v16))) & v24) >> v9);
  LOBYTE(v37) = (((v40 ^ (2 * (v40 & v16))) & v24) >> v9) + ((v40 ^ (2 * (v40 & v16))) << v11);
  v45 = *(unsigned __int8 *)(v12 + (LODWORD(STACK[0x6378]) ^ 0xF4u) + 2821);
  v46 = v45 ^ (32 * (v45 ^ 0xFFFFFFDF)) ^ (8 * (v45 ^ 0xFFFFFFDF)) ^ 0xE;
  v47 = *(unsigned __int8 *)(v12 + (LODWORD(STACK[0x6390]) ^ 0x41u) + 20288) ^ 0x7B;
  v48 = ((v46 ^ (2 * (v46 & v16))) << v11) | (((v46 ^ (2 * (v46 & v16))) & v24) >> v9);
  v49 = *(unsigned __int8 *)(v12 + (LODWORD(STACK[0x6388]) ^ 0xFAu) + 1281);
  v50 = v49 ^ 0xFFFFFFAE ^ (((2 * v49) ^ 0xFFFFFFF8) - 116);
  LOBYTE(v47) = (((v47 ^ (2 * (v47 & a4))) & a1) >> v9) + ((v47 ^ (2 * (v47 & a4))) << v11);
  v51 = (*(unsigned __int8 *)(v12 + (STACK[0x6398] ^ 0xEBLL)) >> 4) | (16
                                                                                      * *(unsigned __int8 *)(v12 + (STACK[0x6398] ^ 0xEBLL)));
  v52 = ((v50 ^ (2 * (v50 & v16))) << v11) | (((v50 ^ (2 * (v50 & v16))) & a1) >> v9);
  v53 = v51 ^ (v51 >> 5) ^ (v51 >> 2) ^ 0x78;
  LOBYTE(v53) = (((v53 ^ (2 * (v53 & a4))) & v24) >> v9) + ((v53 ^ (2 * (v53 & a4))) << v11);
  v54 = v25 ^ LODWORD(STACK[0x6A40]);
  v55 = LODWORD(STACK[0x6A00]) ^ v10;
  v56 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6A40]);
  v57 = v27 ^ LODWORD(STACK[0x6A40]);
  v58 = v32 ^ v10;
  v59 = v35 ^ LODWORD(STACK[0x6A40]);
  v60 = v19 ^ v10;
  v61 = v37 ^ LODWORD(STACK[0x6A40]);
  v62 = v48 ^ LODWORD(STACK[0x6A40]);
  v63 = v47 ^ v10;
  v64 = v53 ^ LODWORD(STACK[0x6A40]);
  v65 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a5);
  LODWORD(STACK[0x6258]) = STACK[0x67C0];
  LODWORD(STACK[0x6250]) = STACK[0x67B0];
  LODWORD(STACK[0x6248]) = STACK[0x6780];
  LODWORD(STACK[0x6240]) = STACK[0x6790];
  LODWORD(STACK[0x6238]) = STACK[0x67A0];
  LODWORD(STACK[0x6230]) = STACK[0x6860];
  LODWORD(STACK[0x6228]) = STACK[0x6830];
  LODWORD(STACK[0x6220]) = a2;
  LODWORD(STACK[0x6218]) = STACK[0x67D0];
  LODWORD(STACK[0x6210]) = STACK[0x67E0];
  LODWORD(STACK[0x6208]) = STACK[0x6820];
  LODWORD(STACK[0x6200]) = STACK[0x6850];
  LODWORD(STACK[0x61F8]) = STACK[0x67F0];
  LODWORD(STACK[0x61F0]) = STACK[0x6840];
  LODWORD(STACK[0x61E8]) = STACK[0x6800];
  LODWORD(STACK[0x61E0]) = STACK[0x6810];
  LODWORD(STACK[0x6830]) = v52 ^ v10;
  LODWORD(STACK[0x6388]) = v52 ^ v10;
  LODWORD(STACK[0x6380]) = v61;
  LODWORD(STACK[0x6840]) = v61;
  LODWORD(STACK[0x6390]) = v63;
  LODWORD(STACK[0x69B0]) = v63;
  LODWORD(STACK[0x6990]) = v28;
  LODWORD(STACK[0x6320]) = v28;
  LODWORD(STACK[0x6820]) = v62;
  LODWORD(STACK[0x6378]) = v62;
  LODWORD(STACK[0x6368]) = v57;
  LODWORD(STACK[0x67F0]) = v57;
  STACK[0x6398] = v64;
  LODWORD(STACK[0x6980]) = v64;
  LODWORD(STACK[0x6810]) = v59;
  LODWORD(STACK[0x6330]) = v59;
  LODWORD(STACK[0x69A0]) = v43;
  LODWORD(STACK[0x6370]) = v43;
  LODWORD(STACK[0x6860]) = v42;
  LODWORD(STACK[0x6358]) = v42;
  LODWORD(STACK[0x6340]) = v56;
  LODWORD(STACK[0x6800]) = v56;
  LODWORD(STACK[0x6328]) = v54;
  LODWORD(STACK[0x69C0]) = v54;
  LODWORD(STACK[0x69D0]) = v58;
  LODWORD(STACK[0x6348]) = v58;
  LODWORD(STACK[0x6338]) = v55;
  LODWORD(STACK[0x69E0]) = v55;
  LODWORD(STACK[0x6850]) = v44;
  LODWORD(STACK[0x6360]) = v44;
  LODWORD(STACK[0x6350]) = v60;
  LODWORD(STACK[0x6A00]) = v60;
  return v65();
}

uint64_t sub_100D1BE5C()
{
  int v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (v0 ^ (5767 * (v3 == 0))))
                            - ((v2 + v0 + 2070) & (v1 + 1374))
                            + 10909))();
}

uint64_t sub_100D1BEB8@<X0>(int a1@<W0>, unsigned int a2@<W1>, char a3@<W3>, char a4@<W4>, int a5@<W5>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  char v8;
  int v9;
  char v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  BOOL v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  uint64_t (*v56)(void);

  v11 = (a7 + 3365);
  v12 = STACK[0x5E88];
  STACK[0x6610] = v11;
  v13 = (v11 ^ 0x3EC2) + (v12 ^ a3);
  v14 = STACK[0x6770];
  v15 = LODWORD(STACK[0x5E00]) ^ 0x44 ^ *(unsigned __int8 *)(STACK[0x6770]
                                                           + (LODWORD(STACK[0x5E00]) ^ 0x8Fu)
                                                           + 5901);
  v16 = STACK[0x6A50];
  LODWORD(v11) = *(unsigned __int8 *)((LODWORD(STACK[0x5E18]) ^ 0x55u) + STACK[0x6770] + 10261);
  v17 = ((v15 ^ (2 * (v15 & v16))) << v10) ^ LODWORD(STACK[0x6130]) ^ (((v15 ^ (2 * (v15 & v16))) & a4) >> v8);
  v18 = v11 ^ (16 * v11) ^ 0x6F ^ (2 * ((v11 ^ (16 * v11) ^ 0x6F) & a6));
  LODWORD(v11) = *(unsigned __int8 *)((LODWORD(STACK[0x5E08]) ^ 0x4Du) + STACK[0x6770] + 13858) ^ a1;
  LODWORD(v13) = v12 ^ *(unsigned __int8 *)(STACK[0x6770] + v13);
  v19 = STACK[0x6A60];
  LODWORD(STACK[0x6A00]) = ((v18 & STACK[0x6A60]) >> v8) | (v18 << v10);
  v20 = v13 ^ 0xFFFFFFFB ^ (2 * ((v13 ^ 0xFFFFFFFB) & a6));
  v21 = ((v11 ^ (2 * (v11 & v16))) << v10) | (((v11 ^ (2 * (v11 & v16))) & a4) >> v8);
  LODWORD(v13) = LODWORD(STACK[0x5E60]) ^ ((LODWORD(STACK[0x5E60]) ^ 3) + 77) ^ *(unsigned __int8 *)(v14 + (LODWORD(STACK[0x5E60]) ^ 0x17u) + 11545) ^ 0x1C;
  LODWORD(v13) = v13 ^ (2 * (v13 & a6));
  v22 = ((v20 & v19) >> v8) ^ v9 ^ (v20 << v10);
  LODWORD(v11) = *(unsigned __int8 *)((LODWORD(STACK[0x5E10]) ^ 0xFu) + v14 + 15143) ^ 0x13;
  v23 = v11 ^ (2 * (v11 & v16));
  LODWORD(v11) = LODWORD(STACK[0x5E38]) ^ 0x13 ^ *(unsigned __int8 *)(v14
                                                                    + (LODWORD(STACK[0x5E38]) ^ 0x7Fu)
                                                                    + 22095);
  v25 = STACK[0x6A40];
  v26 = ((v23 << v10) ^ LODWORD(STACK[0x6A40])) ^ ((v23 & a4) >> v8);
  v27 = ((LODWORD(STACK[0x5E20]) ^ v7)
       + *(unsigned __int8 *)(v14 + (LODWORD(STACK[0x5E20]) ^ 0x87u) + 20802)
       + 1) ^ 0xFFFFFFEF;
  v28 = *(unsigned __int8 *)((LODWORD(STACK[0x5E28]) ^ 0x38u) + v14 + 10518) ^ 0x54;
  v29 = v28 ^ (2 * (v28 & v16));
  v30 = (((v27 ^ (2 * (v27 & a6))) & v19) >> v8) + ((v27 ^ (2 * (v27 & a6))) << v10);
  v31 = *(unsigned __int8 *)((LODWORD(STACK[0x5E30]) ^ 0x40u) + v14 + 16173);
  v32 = (17 * v31) ^ 0x37 ^ (34 * v31 + 44);
  v33 = v32 ^ (2 * (v32 & a6));
  v34 = (((_DWORD)v13 << v10) ^ v9) ^ ((v13 & v19) >> v8);
  v35 = v29 == 0;
  v36 = (v29 << v10) | ((v29 & v19) >> v8);
  LODWORD(v13) = *(unsigned __int8 *)((LODWORD(STACK[0x5E40]) ^ 0x29u) + v14 + 18488) ^ 0xFFFFFF82;
  v37 = *(unsigned __int8 *)((LODWORD(STACK[0x5E48]) ^ a2) + v14 + 15399) ^ 0xFFFFFFEF;
  v38 = v37 ^ (2 * (v37 & v16));
  v39 = (((v13 ^ (2 * (v13 & a6))) << v10) ^ v9) ^ (((v13 ^ (2 * (v13 & a6))) & a4) >> v8);
  v40 = (v33 << v10) | ((v33 & a4) >> v8);
  v41 = (-29 * *(_BYTE *)((LODWORD(STACK[0x5E70]) ^ 0xCu) + v14 + 1794));
  v42 = ((v11 ^ (2 * (v11 & v16))) << v10) | (((v11 ^ (2 * (v11 & v16))) & a4) >> v8);
  LODWORD(v11) = (-29 * *(unsigned __int8 *)((LODWORD(STACK[0x5E70]) ^ 0xCu) + v14 + 1794)) ^ (v41 >> 7) ^ (v41 >> 3) ^ 0xFFFFFFAD;
  v43 = ((v38 & v19) >> v8) ^ LODWORD(STACK[0x6A40]) ^ (v38 << v10);
  v44 = ((v11 ^ (2 * (v11 & a6))) << v10) | (((v11 ^ (2 * (v11 & a6))) & a4) >> v8);
  LODWORD(v11) = *(unsigned __int8 *)((LODWORD(STACK[0x5E50]) ^ 0x38u) + v14 + 8977) ^ 0x3A;
  v45 = *(unsigned __int8 *)((LODWORD(STACK[0x5E58]) ^ 0xB0u) + v14 + 4361);
  v47 = ((v45 >> 1) | (v45 << 7)) ^ 0xFFFFFFBA ^ (2 * ((v45 >> 1) | (v45 << 7))) & 0xFF80 ^ (2
                                                                                           * ((((v45 >> 1) | (v45 << 7)) ^ 0xFFFFFFBA) & a6));
  v48 = (*(unsigned __int8 *)((LODWORD(STACK[0x5E68]) ^ 0x12u) + v14 + 4618) + 83) ^ 0x7E;
  v49 = ((v11 ^ (2 * (v11 & v16))) << v10) | (((v11 ^ (2 * (v11 & v16))) & v19) >> v8);
  LODWORD(v11) = ((v47 & a4) >> v8) | (v47 << v10);
  v50 = (v11 | LODWORD(STACK[0x5CE0])) ^ v11 & v9;
  v51 = ((v48 ^ (2 * (v48 & v16))) << v10) | (((v48 ^ (2 * (v48 & v16))) & v19) >> v8);
  v52 = LODWORD(STACK[0x6A00]) ^ v9;
  v53 = v21 ^ LODWORD(STACK[0x6A40]);
  if (v35)
    v54 = 0;
  else
    v54 = v36;
  v55 = v30 ^ v25;
  v56 = *(uint64_t (**)(void))(STACK[0x6AD8] + 8 * a7);
  LODWORD(STACK[0x6528]) = STACK[0x6810];
  LODWORD(STACK[0x6520]) = STACK[0x67A0];
  LODWORD(STACK[0x6518]) = STACK[0x6790];
  LODWORD(STACK[0x6500]) = STACK[0x6780];
  LODWORD(STACK[0x6510]) = STACK[0x67C0];
  LODWORD(STACK[0x64C8]) = STACK[0x67E0];
  LODWORD(STACK[0x64F8]) = STACK[0x6800];
  LODWORD(STACK[0x64D0]) = STACK[0x67F0];
  LODWORD(STACK[0x64D8]) = STACK[0x67D0];
  LODWORD(STACK[0x64E8]) = STACK[0x67B0];
  LODWORD(STACK[0x64F0]) = STACK[0x6830];
  LODWORD(STACK[0x64B8]) = STACK[0x6820];
  LODWORD(STACK[0x64E0]) = STACK[0x6850];
  LODWORD(STACK[0x64B0]) = STACK[0x6840];
  LODWORD(STACK[0x64C0]) = a5;
  LODWORD(STACK[0x64A8]) = STACK[0x6860];
  LODWORD(STACK[0x5E70]) = v44 ^ v9;
  LODWORD(STACK[0x6820]) = v44 ^ v9;
  LODWORD(STACK[0x5E38]) = v42 ^ v9;
  LODWORD(STACK[0x67F0]) = v42 ^ v9;
  LODWORD(STACK[0x5E60]) = v34;
  LODWORD(STACK[0x6810]) = v34;
  LODWORD(STACK[0x69A0]) = v39;
  LODWORD(STACK[0x5E40]) = v39;
  LODWORD(STACK[0x6990]) = v53;
  LODWORD(STACK[0x5E08]) = v53;
  LODWORD(STACK[0x6980]) = v51 ^ v25;
  LODWORD(STACK[0x5E68]) = v51 ^ v25;
  LODWORD(STACK[0x5E88]) = v22;
  LODWORD(STACK[0x6800]) = v22;
  LODWORD(STACK[0x6850]) = v40 ^ v25;
  LODWORD(STACK[0x5E30]) = v40 ^ v25;
  LODWORD(STACK[0x69C0]) = v17;
  LODWORD(STACK[0x5E00]) = v17;
  LODWORD(STACK[0x69B0]) = v49 ^ v25;
  LODWORD(STACK[0x5E50]) = v49 ^ v25;
  LODWORD(STACK[0x5E18]) = v52;
  LODWORD(STACK[0x69E0]) = v52;
  LODWORD(STACK[0x6830]) = v50;
  LODWORD(STACK[0x5E58]) = v50;
  LODWORD(STACK[0x69D0]) = v55;
  LODWORD(STACK[0x5E20]) = v55;
  LODWORD(STACK[0x6840]) = v43;
  LODWORD(STACK[0x5E48]) = v43;
  LODWORD(STACK[0x6860]) = v54 ^ v9;
  LODWORD(STACK[0x5E28]) = v54 ^ v9;
  LODWORD(STACK[0x6A00]) = v26;
  LODWORD(STACK[0x5E10]) = v26;
  return v56();
}

uint64_t sub_100D1C748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  unsigned int v13;
  char v14;
  char v15;
  unsigned int v16;
  unsigned int v17;
  int v18;

  v16 = (v9 + 2116161574) & 0x81DDEF7C;
  LODWORD(STACK[0x6AB0]) = v16;
  v17 = *(unsigned __int16 *)(v10 + 2 * ((v16 ^ 0x4874) + (v8 ^ 0x35)));
  LOWORD(v17) = ((v17 >> 13) | (8 * v17)) ^ (*(_WORD *)(v10 + 2 * ((v16 ^ 0x4874) + (v8 ^ 0x35))) >> 1) & 0xD40 ^ 0x81CC;
  v18 = (unsigned __int16)v17 ^ (2 * (v17 & (unsigned __int16)a8));
  *(_DWORD *)(STACK[0x6A90]
            + 4 * (((((v8 ^ (2 * (v8 & a8))) & v13) >> v12) + ((v8 ^ (2 * (v8 & a8))) << v15)) ^ v14)) = ((v18 & STACK[0x6A70]) << v15) ^ v11 ^ ((v18 & a5) >> v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * ((7973 * (v8 == 255)) ^ v9)) - 4))();
}

uint64_t sub_100D1C824(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  char v10;
  int v11;
  unsigned int v12;
  char v13;
  unint64_t v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v35;
  unsigned __int8 v36;
  int v37;
  unsigned int v38;
  unsigned __int8 v39;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  char v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  uint64_t v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  unint64_t v65;
  unsigned __int8 v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unint64_t v72;
  unsigned int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int v84;
  int v85;
  int v86;
  unint64_t v87;
  unint64_t v88;
  int v89;
  unsigned int v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  unint64_t v94;
  int v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  unint64_t v102;
  unsigned int v103;
  int v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  int v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  int v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  int v126;
  int v127;
  unint64_t v128;
  unint64_t v129;
  int v130;
  unint64_t v131;
  int v132;
  unint64_t v133;
  int v134;
  unint64_t v135;
  int v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  int v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  int v171;
  unint64_t v172;
  unint64_t v173;
  int v174;
  unsigned int v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  int v182;
  unint64_t v183;
  unsigned int v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  int v188;
  unint64_t v189;
  unsigned int v190;
  unint64_t v191;
  unint64_t v192;
  __int128 v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t v198;
  int v199;
  uint64_t v200;
  unint64_t v201;
  int v202;
  unint64_t v203;
  unsigned int v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  int v213;
  unint64_t v214;
  unint64_t v215;
  unint64_t v216;
  unint64_t v217;
  unint64_t v218;
  int v219;
  int v220;
  unint64_t v221;
  unint64_t v222;
  unint64_t v223;
  unint64_t v224;
  unint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  int v230;
  unint64_t v231;
  unint64_t v232;
  unsigned int v233;
  unsigned int v234;
  unint64_t v235;
  int v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  unint64_t v248;
  int v249;
  unint64_t v250;

  LODWORD(STACK[0x5E88]) = a6;
  v14 = STACK[0x6770];
  v15 = ((LODWORD(STACK[0x6318]) ^ 0xFFFFFFAC)
       + *(unsigned __int8 *)(STACK[0x6770] + (LODWORD(STACK[0x6318]) ^ 0x63u) + 13086)
       + 1) ^ 0xFFFFFFE3;
  v16 = STACK[0x6A50];
  v17 = *(unsigned __int8 *)(STACK[0x6770] + (LODWORD(STACK[0x6308]) ^ 0xD4u) + 23646);
  v18 = (*(unsigned __int8 *)(STACK[0x6770] + (LODWORD(STACK[0x6310]) ^ 0xC6u) + 3847) - 92) ^ 0xFFFFFF89;
  v19 = v17 ^ ((v17 ^ 0x30) >> 5) ^ ((v17 ^ 0x30) >> 3) ^ 0xFFFFFFFE;
  v20 = STACK[0x6770] + (LODWORD(STACK[0x5DC0]) ^ 0x34u);
  v21 = LODWORD(STACK[0x5DC8]) ^ 0x3D ^ *(unsigned __int8 *)(STACK[0x6770]
                                                           + (LODWORD(STACK[0x5DC8]) ^ 0xEBu)
                                                           + 17458);
  v22 = v21 ^ (2 * (v21 & a8));
  v23 = *(unsigned __int8 *)(STACK[0x6770] + (LODWORD(STACK[0x5DD0]) ^ 0x4Cu) + 7183) ^ 0xFFFFFFFC;
  v24 = v23 ^ (2 * (v23 & a8));
  v25 = STACK[0x6770] + (LODWORD(STACK[0x5DD8]) ^ 0xB5u);
  v26 = STACK[0x6770] + (LODWORD(STACK[0x5D60]) ^ 0xD5u);
  LODWORD(v20) = ((*(unsigned __int8 *)(v20 + 16689) >> 7) | (2 * *(unsigned __int8 *)(v20 + 16689))) ^ 0x7B;
  v27 = (*(_BYTE *)(STACK[0x6770] + (LODWORD(STACK[0x5DE0]) ^ 6u) + 23390) - 25) ^ 0x41;
  LODWORD(v25) = *(unsigned __int8 *)(v25 + 3335) ^ (16 * *(unsigned __int8 *)(v25 + 3335)) ^ a3;
  v28 = STACK[0x6770] + (LODWORD(STACK[0x5D70]) ^ 0x17u);
  v29 = (v27 ^ (2 * (v27 & STACK[0x6A50])));
  v30 = STACK[0x6A60];
  v31 = ((v29 & STACK[0x6A60]) >> v10) ^ LODWORD(STACK[0x6130]);
  LODWORD(STACK[0x69C0]) = v31 + (v29 << v13) - 2 * (v31 & (v29 << v13));
  LODWORD(v26) = (-43 * *(unsigned __int8 *)(v26 + 14629)) ^ 7;
  LODWORD(v26) = v26 ^ (2 * (v26 & v16));
  LODWORD(v28) = (*(unsigned __int8 *)(v28 + 6927) + 44) ^ 0x7E;
  v32 = STACK[0x5D88];
  v33 = (((v15 ^ (2 * (v15 & v16))) & a5) >> v10) + ((v15 ^ (2 * (v15 & v16))) << v13);
  LOBYTE(v29) = v30;
  v35 = STACK[0x6A40];
  LODWORD(STACK[0x69E0]) = ((((v18 ^ (2 * (v18 & a8))) & v30) >> v10) | ((v18 ^ (2 * (v18 & a8))) << v13)) ^ LODWORD(STACK[0x6A40]);
  v36 = ((v19 ^ (2 * (v19 & v16))) << v13) ^ v12 ^ (((v19 ^ (2 * (v19 & v16))) & v30) >> v10);
  v37 = ((v22 & a5) >> v10) + (v22 << v13);
  v38 = (((v25 ^ (2 * (v25 & a8))) & a5) >> v10)
      + ((v25 ^ (2 * (v25 & a8))) << v13);
  v39 = ((((v20 ^ (2 * (v20 & v16))) & a5) >> v10) | ((v20 ^ (2
                                                                                           * (v20 & v16))) << v13)) ^ v35;
  LODWORD(STACK[0x69B0]) = v33 ^ v12;
  LODWORD(v25) = v26 & v30;
  v41 = a5;
  LODWORD(v20) = (v24 & v30) >> v10;
  v42 = v24 << v13;
  v43 = (LODWORD(STACK[0x5D80]) ^ v8)
      + LODWORD(STACK[0x5D80])
      + *(unsigned __int8 *)(v14 + (LODWORD(STACK[0x5D80]) ^ 0x28u) + 512);
  v44 = (_DWORD)v26 << v13;
  v45 = v32 ^ 0xFFFFFFDE ^ *(unsigned __int8 *)(v14 + (v32 ^ 0x6Fu) + 7695);
  v46 = v45 ^ (2 * (v45 & a8));
  v47 = v25 >> v10;
  LODWORD(v25) = (v46 & a5);
  LODWORD(v26) = (((v28 ^ (2 * (v28 & a8))) & a5) >> v10) | ((v28 ^ (2
                                                                                                  * (v28 & a8))) << v13);
  LODWORD(v28) = v46 << v13;
  LODWORD(STACK[0x6A00]) = v26 ^ v35;
  v48 = (v43 - 127) ^ 0xFFFFFFA2 ^ (2 * (((v43 - 127) ^ 0xFFFFFFA2) & v16));
  v49 = v10;
  LOBYTE(v46) = v35;
  LOBYTE(v25) = v28 ^ v35 ^ (v25 >> v10);
  LODWORD(v28) = (*(unsigned __int8 *)(v14 + (LODWORD(STACK[0x5F28]) ^ v9) + 17716) + 28) ^ 0xFFFFFFB6;
  LODWORD(STACK[0x69D0]) = (((v48 & v29) >> v10) | (v48 << v13)) ^ v12;
  v50 = v28 ^ (2 * (v28 & a8));
  v51 = *(unsigned __int8 *)(v14 + (LODWORD(STACK[0x5F20]) ^ 0xDCu) + 9491);
  v52 = v38 ^ v12;
  v53 = LODWORD(STACK[0x69C0]);
  v54 = ((v37 ^ v35) << 24) | (v36 << 16);
  v55 = ((v50 & v29) >> v10) + (v50 << v13);
  LOBYTE(v35) = (v47 | v44) ^ v12;
  v56 = ((v51 >> 5) | (8 * v51)) ^ 0xFFFFFFC0 ^ (2 * ((((v51 >> 5) | (8 * v51)) ^ 0xFFFFFFC0) & v16));
  v57 = v56 << v13;
  v58 = v41;
  v59 = (v56 & v41) >> v10;
  v60 = v39;
  LOBYTE(v41) = (v59 | v57) ^ v46;
  v61 = (*(unsigned __int8 *)(v14 + (LODWORD(STACK[0x5DA0]) ^ 6u) + 20032)
       + (LODWORD(STACK[0x5DA0]) ^ 0x55)) ^ 0x73;
  v62 = __ROR4__(__ROR4__(v16 & 0x5FEF2D9D, 15) ^ 0xEDCB7D86, 16);
  v63 = STACK[0x6A70];
  v64 = v61 ^ (2 * (v61 & v16));
  v65 = v14 + (LODWORD(STACK[0x5D98]) ^ 0xADu);
  LOBYTE(v14) = v64 & v29;
  v66 = v42 ^ v12 ^ v20;
  LODWORD(v20) = *(unsigned __int8 *)(v65 + 5132) ^ 0xFFFFFFD7;
  v67 = (v58 & (v62 ^ 0xA269C056)) >> v10;
  LODWORD(v65) = LODWORD(STACK[0x69B0]);
  v68 = v64 << v13;
  v69 = v20 & a8;
  v70 = v54 & 0xFFFF00FF | (LODWORD(STACK[0x69E0]) << 8);
  v71 = v14;
  v72 = STACK[0x6A90];
  LODWORD(STACK[0x69E0]) = *(_DWORD *)(STACK[0x6A90] + 4 * v35);
  v73 = v58;
  v74 = (v52 << 56) | (v53 << 48) | ((unint64_t)v66 << 32) | (v60 << 40);
  LODWORD(v20) = (((v20 ^ (2 * v69)) & v58) >> v10)
               + ((v20 ^ (2 * v69)) << LODWORD(STACK[0x6A80]));
  v75 = (v25 << 16) | (LODWORD(STACK[0x69D0]) << 24) | v35 | (LODWORD(STACK[0x6A00]) << 8);
  v76 = v70 & 0xFFFFFF00 | v65;
  v77 = (v55 ^ v12);
  STACK[0x6A00] = v77;
  v78 = STACK[0x61C0];
  v79 = STACK[0x6A40];
  v80 = (((v71 >> v10) | v68) ^ LODWORD(STACK[0x6A40]));
  v81 = *(_DWORD *)(v72 + 4 * BYTE2(v76));
  v82 = v12;
  v83 = ((v63 & (v62 ^ 0xA269C056)) << LODWORD(STACK[0x6A80])) ^ v12 ^ v67;
  v84 = STACK[0x61C0] & 0xCB476EAA ^ 0x65A3B755;
  v85 = STACK[0x61DC];
  v86 = v84 & v63;
  HIDWORD(v87) = *(_DWORD *)(v72 + ((v76 >> 22) & 0x3FC));
  LODWORD(v87) = HIDWORD(v87);
  v88 = ((unint64_t)v41 << 40) | (v80 << 48);
  LODWORD(v80) = v84 & STACK[0x6A60];
  v89 = *(_DWORD *)(v72 + 4 * BYTE1(v76));
  v90 = STACK[0x6A60];
  v91 = v88 | ((unint64_t)(v20 ^ v12) << 56);
  v92 = (v74 | (v87 >> 16) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v65), 8) ^ v89 ^ __ROR4__(v81, 24)) ^ ((v86 << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ (v80 >> v49) | (unint64_t)(v83 << 32));
  v93 = *(_DWORD *)(v72 + ((v75 >> 22) & 0x3FC));
  v94 = (v75 | (v77 << 32) | v91) ^ ((((STACK[0x6A60] & (v85 & 0x3410E036 ^ 0x9A08701B)) >> v49) | ((v63 & (v85 & 0x3410E036 ^ 0x9A08701B)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((((v78 & 0x52E7A618 ^ 0xA973D30C) & v73) >> v49) + (((v78 & 0x52E7A618 ^ 0xA973D30C) & v63) << LODWORD(STACK[0x6A80]))) ^ v12) << 32));
  HIDWORD(v87) = *(_DWORD *)(v72 + 4 * BYTE2(v75));
  LODWORD(v87) = HIDWORD(v87);
  v95 = v87 >> 24;
  v96 = v92 ^ (v92 << 24);
  v97 = *(_DWORD *)(v72 + 4 * BYTE1(v75));
  v98 = STACK[0x61DC] & 0x7968A518 ^ 0xBCB4528C;
  LODWORD(v83) = v73 & v98;
  v99 = LODWORD(STACK[0x6A60]) ^ 0x11222428 ^ STACK[0x61C0] & 0x19BA37A8;
  v100 = v63 & v98;
  v101 = v83 >> v49;
  if (!LODWORD(STACK[0x6A80]))
    v99 = STACK[0x5F18];
  v102 = v96 ^ (((v63 & (v85 & 0x2D686E30 ^ 0x96B43718)) << LODWORD(STACK[0x6A80])) ^ v12 ^ ((v73 & (v85 & 0x2D686E30 ^ 0x96B43718)) >> v49) | ((unint64_t)((((v78 & 0x4EE6B548 ^ 0x27735AA4) & v90) >> v49) ^ v79 ^ (((v78 & 0x4EE6B548 ^ 0x27735AA4) & v63) << LODWORD(STACK[0x6A80]))) << 32)) ^ (v96 >> 16) ^ v94 ^ (v94 >> 24);
  v103 = v73;
  v104 = v95 ^ __ROR4__(STACK[0x69E0], 8) ^ v97;
  v105 = (((v73 & (v85 & 0x81E6010C ^ 0x40F30086)) >> v49) | ((v63 & (v85 & 0x81E6010C ^ 0x40F30086)) << LODWORD(STACK[0x6A80]))) ^ v79;
  v106 = STACK[0x6A40];
  v107 = (((v78 & 0xC697083E ^ 0xE34B841F) & v90) >> v49) ^ v12 ^ (((v78 & 0xC697083E ^ 0xE34B841F) & v63) << LODWORD(STACK[0x6A80]));
  v108 = (v104 ^ __ROR4__(v93, 16) | ((unint64_t)STACK[0x6A00] << 32) | v91) ^ ((((v99 & (STACK[0x61C0] & 0x19BA37A8 ^ 0xCDD1BD4u)) >> v49) + (((STACK[0x61C0] & 0x19BA37A8 ^ 0xCDD1BD4) & v63) << LODWORD(STACK[0x6A80]))) ^ v12 | ((unint64_t)((v100 << LODWORD(STACK[0x6A80])) ^ v79 ^ v101) << 32));
  HIDWORD(v109) = *(_DWORD *)(v72 + 4 * BYTE2(v102));
  LODWORD(v109) = HIDWORD(v109);
  v110 = v108 ^ (v108 << 24) ^ (((((v78 & 0xBB96A346 ^ 0xDDCB51A3) & v90) >> v49)
                               + (((v78 & 0xBB96A346 ^ 0xDDCB51A3) & v63) << LODWORD(STACK[0x6A80]))) ^ v12 | ((unint64_t)((((v73 & (v85 & 0x8BDF4B74 ^ 0x45EFA5BA)) >> v49) | ((v63 & (v85 & 0x8BDF4B74 ^ 0x45EFA5BA)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32)) ^ ((v108 ^ (v108 << 24)) >> 16) ^ v102 ^ (v107 | (v105 << 32)) ^ ((v102 ^ (v107 | (v105 << 32))) >> 24);
  v111 = (v102 & 0xFFFFFFFF00000000 | (v109 >> 24) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v102)), 16) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v102), 8) ^ *(_DWORD *)(v72 + 4 * BYTE1(v102))) ^ ((((v78 & 0xA4C06746 ^ 0xD26033A3) & v90) >> v49) ^ v12 ^ (((v78 & 0xA4C06746 ^ 0xD26033A3) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)(((v63 & (v85 & 0x88687404 ^ 0x44343A02)) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v73 & (v85 & 0x88687404 ^ 0x44343A02)) >> v49)) << 32));
  v112 = (((v73 & (v85 & 0x87E78948 ^ 0xC3F3C4A4)) >> v49)
        + ((v63 & (v85 & 0x87E78948 ^ 0xC3F3C4A4)) << LODWORD(STACK[0x6A80]))) ^ v12 | ((unint64_t)(((((v78 & 0xC0CA3702 ^ 0x60651B81) & v90) >> v49) | (((v78 & 0xC0CA3702 ^ 0x60651B81) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32);
  v113 = *(_DWORD *)(v72 + 4 * BYTE1(v110)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v110), 8) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v110)), 24);
  v114 = v111 ^ (v111 << 24) ^ ((((v73 & (v85 & 0x28A677EE ^ 0x94533BF7)) >> v49)
                               + ((v63 & (v85 & 0x28A677EE ^ 0x94533BF7)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((((v78 & 0xC16F540 ^ 0x860B7AA0) & v90) >> v49) + (((v78 & 0xC16F540 ^ 0x860B7AA0) & v63) << LODWORD(STACK[0x6A80]))) ^ v12) << 32)) ^ ((v111 ^ (v111 << 24)) >> 16) ^ v110 ^ v112 ^ ((v110 ^ v112) >> 24);
  LODWORD(v109) = __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v110)), 16);
  v115 = ((((v78 & 0x8AA55F82 ^ 0xC552AFC1) & v90) >> v49)
        + (((v78 & 0x8AA55F82 ^ 0xC552AFC1) & v63) << LODWORD(STACK[0x6A80]))) ^ v12 | ((unint64_t)(((v63 & (v85 & 0x2C657F1E ^ 0x9632BF8F)) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v73 & (v85 & 0x2C657F1E ^ 0x9632BF8F)) >> v49)) << 32);
  v116 = (v110 & 0xFFFFFFFF00000000 | v113 ^ v109) ^ v115 ^ (((v110 & 0xFFFFFFFF00000000 | v113 ^ v109) ^ v115) << 24);
  v117 = v114 ^ (((((v78 & 0x7FCEB7C4 ^ 0x3FE75BE2) & v90) >> v49)
                + (((v78 & 0x7FCEB7C4 ^ 0x3FE75BE2) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((v63 & (v85 & 0x7F522CF4 ^ 0x3FA9167A)) << LODWORD(STACK[0x6A80])) ^ v12 ^ ((v73 & (v85 & 0x7F522CF4 ^ 0x3FA9167A)) >> v49)) << 32));
  HIDWORD(v109) = *(_DWORD *)(v72 + 4 * v114);
  LODWORD(v109) = HIDWORD(v109);
  LODWORD(v115) = v85 & STACK[0x1BD4] ^ 0x984CCA11;
  LODWORD(v110) = (v73 & v115) >> v49;
  v118 = v116 ^ (((v63 & (v85 & 0x359C6B20 ^ 0x1ACE3590)) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v90 & (v85 & 0x359C6B20 ^ 0x1ACE3590)) >> v49) | ((unint64_t)(((((v78 & 0x45D34E9A ^ 0x22E9A74D) & v73) >> v49) | (((v78 & 0x45D34E9A ^ 0x22E9A74D) & v63) << LODWORD(STACK[0x6A80]))) ^ v12) << 32)) ^ (v116 >> 16) ^ v117 ^ (v117 >> 24);
  v119 = (v114 & 0xFFFFFFFF00000000 | (v109 >> 8) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v114)), 24) ^ *(_DWORD *)(v72 + 4 * BYTE1(v114)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v114)), 16)) ^ ((v110 | ((v63 & v115) << LODWORD(STACK[0x6A80]))) ^ v12 | ((unint64_t)(((((v78 & 0x1FF17D9A ^ LODWORD(STACK[0x1BD8])) & v63) << LODWORD(STACK[0x6A80])) + (((v78 & 0x1FF17D9A ^ LODWORD(STACK[0x1BD8])) & v90) >> v49)) ^ LODWORD(STACK[0x6A40])) << 32));
  v120 = (((v90 & (v85 & 0x13858798 ^ LODWORD(STACK[0x1BDC]))) >> v49) | ((v63 & (v85 & 0x13858798 ^ LODWORD(STACK[0x1BDC]))) << LODWORD(STACK[0x6A80]))) ^ v12 | ((unint64_t)(((((v78 & 0x57E4056E ^ 0xABF202B7) & v73) >> v49) | (((v78 & 0x57E4056E ^ 0xABF202B7) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32);
  HIDWORD(v109) = *(_DWORD *)(v72 + 4 * BYTE2(v118));
  LODWORD(v109) = HIDWORD(v109);
  v121 = v119 ^ (v119 << 24) ^ ((((v90 & (v85 & 0x92E706D8 ^ 0x4973836C)) >> v49) | ((v63 & (v85 & 0x92E706D8 ^ 0x4973836C)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((((v78 & 0x8952D6D2 ^ 0xC4A96B69) & v73) >> v49) | (((v78 & 0x8952D6D2 ^ 0xC4A96B69) & v63) << LODWORD(STACK[0x6A80]))) ^ v12) << 32)) ^ ((v119 ^ (v119 << 24)) >> 16) ^ v118 ^ v120 ^ ((v118 ^ v120) >> 24);
  v122 = *(_DWORD *)(v72 + 4 * (v121 >> (v110 & 0x10) >> (v110 & 0x10 ^ 0x10)));
  v123 = (v118 & 0xFFFFFFFF00000000 | (v109 >> 24) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v118), 8) ^ *(_DWORD *)(v72 + 4 * BYTE1(v118)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v118)), 16)) ^ ((((v73 & (v85 & 0x17DDB370 ^ 0xBEED9B8)) >> v49) | ((v63 & (v85 & 0x17DDB370 ^ 0xBEED9B8)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)((((v78 & 0x3E461B3A ^ 0x9F230D9D) & v63) << LODWORD(STACK[0x6A80])) ^ v12 ^ (((v78 & 0x3E461B3A ^ 0x9F230D9D) & v90) >> v49)) << 32));
  v124 = v121 ^ ((((v78 & 0x2192BAE0 ^ 0x90C95D70) & v90) >> v49) ^ v12 ^ (((v78 & 0x2192BAE0 ^ 0x90C95D70) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)((((v73 & (v85 & 0xCE5F0A66 ^ 0x672F8533)) >> v49) + ((v63 & (v85 & 0xCE5F0A66 ^ 0x672F8533)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32));
  v125 = v123 ^ (v123 << 24) ^ ((((v78 & 0xC0130F0E ^ 0x60098787) & v63) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ (((v78 & 0xC0130F0E ^ 0x60098787) & v90) >> v49) | ((unint64_t)((((v73 & (v85 & 0x2BD0A844 ^ 0x95E85422)) >> v49) + ((v63 & (v85 & 0x2BD0A844 ^ 0x95E85422)) << LODWORD(STACK[0x6A80]))) ^ v12) << 32)) ^ ((v123 ^ (v123 << 24)) >> 16) ^ v124 ^ (v124 >> 24);
  v126 = STACK[0x61DC];
  LODWORD(v120) = (((v78 & 0x4B3D17A4 ^ 0x259E8BD2) & v73) >> v49) | (((v78 & 0x4B3D17A4 ^ 0x259E8BD2) & v63) << LODWORD(STACK[0x6A80]));
  v127 = STACK[0x5EF0];
  v128 = (v121 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v72 + 4 * BYTE1(v121)) ^ __ROR4__(v122, 24)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v121), 8) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v121)), 16)) ^ ((((v90 & (v85 & 0x52F31380 ^ LODWORD(STACK[0x1BE0]))) >> v49) + ((v63 & (v85 & 0x52F31380 ^ LODWORD(STACK[0x1BE0]))) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(v120 ^ LODWORD(STACK[0x6A40])) << 32));
  v129 = v125 & 0xFFFFFFFF00000000;
  v130 = *(_DWORD *)(v72 + 4 * v125);
  v131 = (((v78 & v11 ^ 0x9AF317EA) & v103) >> v49) ^ v82 ^ (((v78 & v11 ^ 0x9AF317EA) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)((((v90 & (v85 & 0x83C54750 ^ 0xC1E2A3A8)) >> v49) + ((v63 & (v85 & 0x83C54750 ^ 0xC1E2A3A8)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32);
  LODWORD(v107) = *(_DWORD *)(v72 + 4 * BYTE3(v125));
  LODWORD(v116) = *(_DWORD *)(v72 + 4 * BYTE2(v125));
  v132 = *(_DWORD *)(v72 + 4 * BYTE1(v125));
  v133 = v128 ^ (v128 << 24) ^ ((((((131586 * v127) & 0x1B9066 ^ 0xDC833) & v103) >> v49) | ((((131586 * v127) & 0x1B9066 ^ 0xDC833) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((v63 & (v85 & 0xE93E4A4A ^ 0xF49F2525)) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v90 & (v85 & 0xE93E4A4A ^ 0xF49F2525)) >> v49)) << 32)) ^ ((v128 ^ (v128 << 24)) >> 16) ^ v125 ^ v131 ^ ((v125 ^ v131) >> 24);
  HIDWORD(v109) = v107;
  LODWORD(v109) = v107;
  LODWORD(v119) = (v109 >> 16) ^ __ROR4__(v130, 8) ^ v132;
  LODWORD(v109) = __ROR4__(v116, 24);
  LODWORD(v128) = v78 & 0x6C2421D4 ^ 0x361210EA;
  LODWORD(v116) = v128 & v90;
  v134 = v128 & v63;
  LODWORD(v128) = *(_DWORD *)(v72 + 4 * v133);
  v135 = (v129 | v119 ^ v109) ^ ((((v103 & (v85 & 0x4994C146 ^ 0x24CA60A3)) >> v49)
                                                            + ((v63 & (v85 & 0x4994C146 ^ 0x24CA60A3)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((((v78 & 0x21A0878 ^ 0x10D043C) & v90) >> v49) + (((v78 & 0x21A0878 ^ 0x10D043C) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v136 = *(_DWORD *)(v72 + 4 * BYTE3(v133));
  v137 = v133 ^ ((v116 >> v49) ^ v82 ^ (v134 << LODWORD(STACK[0x6A80])) | ((unint64_t)(((v63 & (v85 & 0xEE4A47AE ^ 0x772523D7)) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v103 & (v85 & 0xEE4A47AE ^ 0x772523D7)) >> v49)) << 32));
  v138 = v133 & 0xFFFFFFFF00000000;
  LODWORD(v107) = *(_DWORD *)(v72 + 4 * BYTE1(v133));
  HIDWORD(v109) = *(_DWORD *)(v72 + 4 * BYTE2(v133));
  LODWORD(v109) = HIDWORD(v109);
  v139 = v135 ^ (v135 << 24) ^ ((((v103 & (v85 & 0x7202D48 ^ 0x39016A4)) >> v49)
                               + ((v63 & (v85 & 0x7202D48 ^ 0x39016A4)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v78 & 0x6BDAE706 ^ 0x35ED7383) & v90) >> v49) ^ LODWORD(STACK[0x6A40]) ^ (((v78 & 0x6BDAE706 ^ 0x35ED7383) & v63) << LODWORD(STACK[0x6A80]))) << 32)) ^ ((v135 ^ (v135 << 24)) >> 16) ^ v137 ^ (v137 >> 24);
  v140 = (v138 | (v109 >> 24) ^ __ROR4__(v128, 8) ^ v107 ^ __ROR4__(v136, 16)) ^ (((v63 & (v85 & 0x9FFE42C ^ 0x4FFF216)) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v90 & (v85 & 0x9FFE42C ^ 0x4FFF216)) >> v49) | ((unint64_t)((((v78 & 0x6B2330BA ^ 0xB591985D) & v103) >> v49) ^ v82 ^ (((v78 & 0x6B2330BA ^ 0xB591985D) & v63) << LODWORD(STACK[0x6A80]))) << 32));
  HIDWORD(v109) = *(_DWORD *)(v72
                            + 4
                            * (v135 ^ (((v103 & (v85 & 0x7202D48 ^ 0x39016A4)) >> v49)
                                                      + ((v63 & (v85 & 0x48 ^ 0xA4)) << LODWORD(STACK[0x6A80]))) ^ v82 ^ ((v135 ^ ((_DWORD)v135 << 24)) >> 16) ^ v137 ^ BYTE3(v137)));
  LODWORD(v109) = HIDWORD(v109);
  v141 = v139 ^ (((((v78 & 0x6ABD56F4 ^ 0xB55EAB7A) & v90) >> v49)
                + (((v78 & 0x6ABD56F4 ^ 0xB55EAB7A) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)((((v103 & (v85 & STACK[0x1BE4] ^ 0x5DADAD59)) >> v49) + ((v63 & (v85 & STACK[0x1BE4] ^ 0x5DADAD59)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v142 = v139 & 0xFFFFFFFF00000000 | (v109 >> 8) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v139)), 24) ^ *(_DWORD *)(v72 + 4 * BYTE1(v139)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v139)), 16);
  v143 = v140 ^ (v140 << 24) ^ ((((v103 & (v85 & 0xCDC2E1E0 ^ 0xE6E170F0)) >> v49)
                               + ((v63 & (v85 & 0xCDC2E1E0 ^ 0xE6E170F0)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((((v78 & 0x885221CE ^ 0xC42910E7) & v90) >> v49) | (((v78 & 0x885221CE ^ 0xC42910E7) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32)) ^ ((v140 ^ (v140 << 24)) >> 16) ^ v141 ^ (v141 >> 24);
  HIDWORD(v109) = (LODWORD(STACK[0x6A20]) >> 2) & 0x28E0098;
  LODWORD(v109) = HIDWORD(v109);
  v144 = ((((v78 & 0xA8CE4AFA ^ 0x5467257D) & v90) >> v49)
        + (((v78 & 0xA8CE4AFA ^ 0x5467257D) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((v63 & (v85 & 0xFFFF377C ^ 0x7FFF9BBE)) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v103 & (v85 & 0xFFFF377C ^ 0x7FFF9BBE)) >> v49)) << 32);
  v145 = (((((2 * (v109 >> 30)) ^ 0xA380260) & v103) >> v49)
        + ((((2 * (v109 >> 30)) ^ 0xA380260) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((v63 & (v85 & 0xCD0CA190 ^ 0x668650C8)) << LODWORD(STACK[0x6A80])) ^ v82 ^ ((v90 & (v85 & 0xCD0CA190 ^ 0x668650C8)) >> v49)) << 32);
  v146 = (((v103 & (v85 & 0x1FFD74AA ^ 0x8FFEBA55)) >> v49)
        + ((v63 & (v85 & 0x1FFD74AA ^ 0x8FFEBA55)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]);
  v147 = v72;
  v148 = v142 ^ v144 ^ ((v142 ^ v144) << 24) ^ (v146 | ((unint64_t)(((((v78 & 0x4EDE11C0 ^ 0xA76F08E0) & v63) << LODWORD(STACK[0x6A80])) | (((v78 & 0x4EDE11C0 ^ 0xA76F08E0) & v90) >> v49)) ^ v82) << 32)) ^ ((v142 ^ v144 ^ ((v142 ^ v144) << 24)) >> 16) ^ v143 ^ v145 ^ ((v143 ^ v145) >> 24);
  v149 = (v143 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v72 + 4 * BYTE1(v143)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v143)), 24)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v143)), 16) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v143), 8)) ^ ((((v103 & (v126 & 0xD0BD739E ^ 0xE85EB9CF)) >> v49) + ((v63 & (v126 & 0xD0BD739E ^ 0xE85EB9CF)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0x8199AC7E ^ 0xC0CCD63F) & v90) >> v49) + (((v78 & 0x8199AC7E ^ 0xC0CCD63F) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32));
  v150 = v148 ^ (((((v78 & 0xCFE021C0 ^ 0x67F010E0) & v90) >> v49) | (((v78 & 0xCFE021C0 ^ 0x67F010E0) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)((((v103 & (v126 & 0x3325347A ^ 0x99929A3D)) >> v49) + ((v63 & (v126 & 0x3325347A ^ 0x99929A3D)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v151 = v149 ^ (v149 << 24) ^ (((((v78 & 0x44044844 | 0x33C2363A) ^ v78 & 0x23802430) & v63) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((((v78 & 0x44044844 | 0x33C2363A) ^ v78 & 0x23802430) & v90) >> v49) | ((unint64_t)((((v103 & (v126 & 0x4ECA4448 ^ 0x27652224)) >> v49) + ((v63 & (v126 & 0x4ECA4448 ^ 0x27652224)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32)) ^ ((v149 ^ (v149 << 24)) >> 16) ^ v150 ^ (v150 >> 24);
  v152 = (v148 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v72 + 4 * BYTE1(v148)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v148)), 24)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v148), 8) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v148)), 16)) ^ ((((v103 & (v126 & 0xEEC53D58 ^ 0xF7629EAC)) >> v49) | ((v63 & (v126 & 0xEEC53D58 ^ 0xF7629EAC)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)((((v78 & 0x22AEBCA2 ^ 0x11575E51) & v90) >> v49) ^ v82 ^ (((v78 & 0x22AEBCA2 ^ 0x11575E51) & v63) << LODWORD(STACK[0x6A80]))) << 32));
  v153 = (((v78 & 0x695D20A2 ^ 0xB4AE9051) & v103) >> v49) ^ v82 ^ (((v78 & 0x695D20A2 ^ 0xB4AE9051) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)((((v90 & (v126 & 0x82676768 ^ 0xC133B3B4)) >> v49) + ((v63 & (v126 & 0x82676768 ^ 0xC133B3B4)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32);
  v154 = v152 ^ (v152 << 24) ^ (((((v78 & 0x23AF606A ^ 0x91D7B035) & v103) >> v49) | (((v78 & 0x23AF606A ^ 0x91D7B035) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((v63 & (v126 & 0x9502E59E ^ 0xCA8172CF)) << LODWORD(STACK[0x6A80])) ^ v82 ^ ((v90 & (v126 & 0x9502E59E ^ 0xCA8172CF)) >> v49)) << 32)) ^ ((v152 ^ (v152 << 24)) >> 16) ^ v151 ^ v153 ^ ((v151 ^ v153) >> 24);
  v155 = (v151 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v72 + 4 * BYTE1(v151)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v151)), 24)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v151)), 16) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v151), 8)) ^ ((((v90 & (v126 & 0xF936166C ^ 0xFC9B0B36)) >> v49) + ((v63 & (v126 & 0xF936166C ^ 0xFC9B0B36)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v78 & 0x92D3AE12 ^ 0xC969D709) & v103) >> v49) ^ LODWORD(STACK[0x6A40]) ^ (((v78 & 0x92D3AE12 ^ 0xC969D709) & v63) << LODWORD(STACK[0x6A80]))) << 32));
  v156 = ((v63 & (v126 & 0x5F07B3E0 ^ LODWORD(STACK[0x1BE8]))) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v90 & (v126 & 0x5F07B3E0 ^ LODWORD(STACK[0x1BE8]))) >> v49) | ((unint64_t)((((v78 & 0xB9ACAFDC ^ 0x5CD657EE) & v103) >> v49) ^ v82 ^ (((v78 & 0xB9ACAFDC ^ 0x5CD657EE) & v63) << LODWORD(STACK[0x6A80]))) << 32);
  v157 = v155 ^ (v155 << 24) ^ ((((v78 & 0xE26D3F94 ^ 0x71369FCA) & v103) >> v49) ^ v82 ^ (((v78 & 0xE26D3F94 ^ 0x71369FCA) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)((((v90 & (v126 & 0xAD95806E ^ 0xD6CAC037)) >> v49) | ((v63 & (v126 & 0xAD95806E ^ 0xD6CAC037)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32)) ^ ((v155 ^ (v155 << 24)) >> 16) ^ v154 ^ v156 ^ ((v154 ^ v156) >> 24);
  HIDWORD(v109) = *(_DWORD *)(v72 + 4 * v154);
  LODWORD(v109) = HIDWORD(v109);
  v158 = (v154 & 0xFFFFFFFF00000000 | (v109 >> 8) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v154)), 16) ^ *(_DWORD *)(v72 + 4 * BYTE1(v154)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v154)), 24)) ^ ((((v78 & 0xA424B7A2 ^ 0xD2125BD1) & v103) >> v49) ^ LODWORD(STACK[0x6A40]) ^ (((v78 & 0xA424B7A2 ^ 0xD2125BD1) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)((((v90 & (v126 & 0xE6084DA8 ^ 0xF30426D4)) >> v49) + ((v63 & (v126 & 0xE6084DA8 ^ 0xF30426D4)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  LODWORD(v154) = *(_DWORD *)(v72 + 4 * BYTE3(v157));
  v159 = v157 ^ ((((v78 & 0xF93F54D2 ^ 0x7C9FAA69) & v63) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ (((v78 & 0xF93F54D2 ^ 0x7C9FAA69) & v90) >> v49) | ((unint64_t)((((v103 & (v126 & 0xA90AC9E ^ 0x548564F)) >> v49) + ((v63 & (v126 & 0xA90AC9E ^ 0x548564F)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v160 = *(_DWORD *)(v72 + 4 * BYTE2(v157));
  LODWORD(v156) = *(_DWORD *)(v72 + 4 * BYTE1(v157)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v157), 8);
  v161 = v157 & 0xFFFFFFFF00000000;
  v162 = v158 ^ (v158 << 24) ^ ((((v90 & (v126 & 0xED13ED9A ^ 0x7689F6CD)) >> v49)
                               + ((v63 & (v126 & 0xED13ED9A ^ 0x7689F6CD)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0x9B8F1C6C ^ 0x4DC78E36) & v103) >> v49) | (((v78 & 0x9B8F1C6C ^ 0x4DC78E36) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32)) ^ ((v158 ^ (v158 << 24)) >> 16) ^ v159 ^ (v159 >> 24);
  v163 = (v161 | v156 ^ __ROR4__(v154, 16) ^ __ROR4__(v160, 24)) ^ ((((v90 & (v126 & 0x96118BFC ^ 0x4B08C5FE)) >> v49)
                                                                                 + ((v63 & (v126 & 0x96118BFC ^ 0x4B08C5FE)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40]) | ((unint64_t)(((((v78 & 0x8618C748 ^ 0xC30C63A4) & v103) >> v49) | (((v78 & 0x8618C748 ^ 0xC30C63A4) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v164 = ((((v78 & 0xA831E2C ^ 0x85418F16) & v103) >> v49)
        + (((v78 & 0xA831E2C ^ 0x85418F16) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v90 & (v126 & 0x9121C86C ^ 0x4890E436)) >> v49) | ((v63 & (v126 & 0x9121C86C ^ 0x4890E436)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32);
  v165 = v163 ^ (v163 << 24) ^ (((((v78 & 0xCC2B242 ^ 0x86615921) & v90) >> v49)
                               + (((v78 & 0xCC2B242 ^ 0x86615921) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v103 & (v126 & 0x94922FDC ^ 0xCA4917EE)) >> v49) | ((v63 & (v126 & 0x94922FDC ^ 0xCA4917EE)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32)) ^ ((v163 ^ (v163 << 24)) >> 16) ^ v162 ^ v164 ^ ((v162 ^ v164) >> 24);
  v166 = v162 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v72
                                                                + 4
                                                                * ((unsigned __int16)(v158 ^ (((v90 & (v126 & 0xED13ED9A ^ 0x7689F6CD)) >> v49) + (((unsigned __int16)v63 & (v126 & 0xED9A ^ 0xF6CD)) << LODWORD(STACK[0x6A80]))) ^ v82 ^ ((v158 ^ ((_DWORD)v158 << 24)) >> 16) ^ v159 ^ (v159 >> 24)) >> 8)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * (v158 ^ (((v90 & (v126 & 0xED13ED9A ^ 0x7689F6CD)) >> v49) + ((v63 & (v126 & 0x9A ^ 0xCD)) << LODWORD(STACK[0x6A80]))) ^ v82 ^ ((v158 ^ ((_DWORD)v158 << 24)) >> 16) ^ v159 ^ BYTE3(v159))), 8)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * ((v158 ^ ((_DWORD)v158 << 24) ^ (((v90 & (v126 & 0xED13ED9A ^ 0x7689F6CD)) >> v49) + ((v63 & (v126 & 0xED13ED9A ^ 0x7689F6CD)) << LODWORD(STACK[0x6A80]))) ^ v82 ^ ((v158 ^ (v158 << 24)) >> 16) ^ v159 ^ (v159 >> 24)) >> 16)), 24) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v162)), 16);
  v167 = (((v103 & (v126 & STACK[0x1BF0] ^ 0x9662A4CD)) >> v49) | ((v63 & (v126 & STACK[0x1BF0] ^ 0x9662A4CD)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & STACK[0x1C24] ^ 0x3DCDBFFA) & v90) >> v49) | (((v78 & STACK[0x1C24] ^ 0x3DCDBFFA) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32);
  v168 = v165 ^ (((((v78 & 0xA8DBB4C2 ^ 0x546DDA61) & v90) >> v49)
                + (((v78 & 0xA8DBB4C2 ^ 0x546DDA61) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v103 & (v126 & STACK[0x1BEC] ^ 0xF72F824C)) >> v49) + ((v63 & (v126 & STACK[0x1BEC] ^ 0xF72F824C)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32));
  v169 = v166 ^ v167 ^ ((v166 ^ v167) << 24) ^ ((((v103 & (v126 & 0x8976AC28 ^ 0xC4BB5614)) >> v49) | ((v63 & (v126 & 0x8976AC28 ^ 0xC4BB5614)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v78 & 0x716801FE ^ LODWORD(STACK[0x1BF4])) & v90) >> v49) ^ LODWORD(STACK[0x6A40]) ^ (((v78 & 0x716801FE ^ LODWORD(STACK[0x1BF4])) & v63) << LODWORD(STACK[0x6A80]))) << 32)) ^ ((v166 ^ v167 ^ ((v166 ^ v167) << 24)) >> 16) ^ v168 ^ (v168 >> 24);
  v170 = (v165 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v72 + 4 * BYTE1(v165)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v165)), 16)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v165), 8) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v165)), 24)) ^ ((((v78 & 0xF86F466E ^ 0x7C37A337) & v103) >> v49) ^ LODWORD(STACK[0x6A40]) ^ (((v78 & 0xF86F466E ^ 0x7C37A337) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)((((v90 & (v126 & 0xF16850D8 ^ 0xF8B4286C)) >> v49) + ((v63 & (v126 & 0xF16850D8 ^ 0xF8B4286C)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v171 = *(_DWORD *)(v72 + 4 * BYTE2(v169));
  LODWORD(v138) = *(_DWORD *)(v72 + 4 * BYTE1(v169));
  v172 = v169 ^ ((((v90 & (v126 & 0xED31A60E ^ LODWORD(STACK[0x1BF8]))) >> v49)
                + ((v63 & (v126 & 0xED31A60E ^ LODWORD(STACK[0x1BF8]))) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0x61BB6026 ^ 0xB0DDB013) & v103) >> v49) + (((v78 & 0x61BB6026 ^ 0xB0DDB013) & v63) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6A40])) << 32));
  LODWORD(v159) = *(_DWORD *)(v72 + 4 * v169);
  v173 = v170 ^ (v170 << 24) ^ ((((v78 & 0x56AE47DE ^ 0xAB5723EF) & v90) >> v49) ^ v82 ^ (((v78 & 0x56AE47DE ^ 0xAB5723EF) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)(((v63 & (v126 & 0xA29771C6 ^ 0x514BB8E3)) << LODWORD(STACK[0x6A80])) ^ LODWORD(STACK[0x6A40]) ^ ((v103 & (v126 & 0xA29771C6 ^ 0x514BB8E3)) >> v49)) << 32)) ^ ((v170 ^ (v170 << 24)) >> 16) ^ v172 ^ (v172 >> 24);
  LODWORD(v116) = *(_DWORD *)(v72 + 4 * BYTE3(v169));
  LODWORD(v170) = STACK[0x61DC] & 0x2AD8C7AA ^ 0x956C63D5;
  v174 = v63 & v170;
  v175 = (v90 & v170) >> v49;
  LODWORD(STACK[0x6A00]) = v169 ^ (((v90 & (STACK[0x61DC] & 0xED31A60E ^ LODWORD(STACK[0x1BF8]))) >> v49)
                                 + ((v63 & (STACK[0x61DC] & 0xED31A60E ^ LODWORD(STACK[0x1BF8]))) << LODWORD(STACK[0x6A80]))) ^ v82 ^ ((((v78 & 0xD61FF4E8 ^ 0x6B0FFA74) & v103) >> v49) | (((v78 & 0xD61FF4E8 ^ 0x6B0FFA74) & v63) << LODWORD(STACK[0x6A80]))) ^ v173;
  v176 = v173 & 0xFFFFFFFF00000000;
  v177 = (v169 & 0xFFFFFFFF00000000 | v138 ^ __ROR4__(v171, 24) ^ __ROR4__(v159, 8) ^ __ROR4__(v116, 16)) ^ (((((v78 & 0x3180E61E ^ 0x18C0730F) & v103) >> v49) | (((v78 & 0x3180E61E ^ 0x18C0730F) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((v174 << LODWORD(STACK[0x6A80])) ^ v106 ^ v175) << 32));
  v178 = v173 ^ (((v63 & (v126 & 0x550789C2 ^ 0xAA83C4E1)) << LODWORD(STACK[0x6A80])) ^ v106 ^ ((v103 & (v126 & 0x550789C2 ^ 0xAA83C4E1)) >> v49) | ((unint64_t)(((((v78 & 0x77E52C80 ^ 0xBBF29640) & v90) >> v49) + (((v78 & 0x77E52C80 ^ 0xBBF29640) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v179 = v177 ^ (v177 << 24) ^ (((((v78 & 0xAC647B94 ^ 0xD6323DCA) & v63) << LODWORD(STACK[0x6A80])) | (((v78 & 0xAC647B94 ^ 0xD6323DCA) & v90) >> v49)) ^ v82 | ((unint64_t)((((v103 & (v126 & 0x696E084A ^ 0x34B70425)) >> v49) + ((v63 & (v126 & 0x696E084A ^ 0x34B70425)) << LODWORD(STACK[0x6A80]))) ^ v106) << 32)) ^ ((v177 ^ (v177 << 24)) >> 16) ^ v178 ^ (v178 >> 24);
  LODWORD(v178) = v173 ^ ((v63 & (v126 & 0x550789C2 ^ 0xAA83C4E1)) << LODWORD(STACK[0x6A80])) ^ v106 ^ ((v103 & (v126 & 0x550789C2 ^ 0xAA83C4E1)) >> v49) ^ (((v103 & (v126 & 0xF99080F2 ^ 0xFCC84079)) >> v49) | ((v63 & (v126 & 0xF99080F2 ^ 0xFCC84079)) << LODWORD(STACK[0x6A80])));
  HIDWORD(v109) = *(_DWORD *)(v72 + 4 * BYTE2(v173));
  LODWORD(v109) = HIDWORD(v109);
  v180 = (v109 >> 24) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v173), 8) ^ *(_DWORD *)(v72 + 4 * BYTE1(v173)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v173)), 16);
  LODWORD(v173) = *(_DWORD *)(v72 + 4 * v179);
  v181 = (((v78 & 0x237E2BBE ^ 0x11BF15DF) & v63) << LODWORD(STACK[0x6A80])) ^ v106 ^ (((v78 & 0x237E2BBE ^ 0x11BF15DF) & v90) >> v49) | ((unint64_t)(((v63 & (v126 & 0xDE3D7B92 ^ 0x6F1EBDC9)) << LODWORD(STACK[0x6A80])) ^ v82 ^ ((v103 & (v126 & 0xDE3D7B92 ^ 0x6F1EBDC9)) >> v49)) << 32);
  LODWORD(v138) = (((v78 & 0xF0599BA2 ^ LODWORD(STACK[0x1BFC])) & v103) >> v49) | (((v78 & 0xF0599BA2 ^ LODWORD(STACK[0x1BFC])) & v63) << LODWORD(STACK[0x6A80]));
  v182 = *(_DWORD *)(v72 + 4 * BYTE2(v179));
  LODWORD(STACK[0x69E0]) = v178 ^ v179;
  v183 = (v176 | v180) ^ v181;
  v184 = v106;
  v185 = v179 ^ ((((v90 & (v126 & 0xF52D802A ^ 0x7A96C015)) >> v49) | ((v63 & (v126 & 0xF52D802A ^ 0x7A96C015)) << LODWORD(STACK[0x6A80]))) ^ v106 | ((unint64_t)(v138 ^ v82) << 32));
  HIDWORD(v109) = v182;
  LODWORD(v109) = v182;
  LODWORD(v161) = v126 & 0xA33DED4 ^ 0x519EF6A;
  v186 = v183 ^ (v183 << 24) ^ ((((v103 & (v126 & 0x5D6C64BA ^ 0x2EB6325D)) >> v49)
                               + ((v63 & (v126 & 0x5D6C64BA ^ 0x2EB6325D)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0x2667289C ^ 0x9333944E) & v90) >> v49) + (((v78 & 0x2667289C ^ 0x9333944E) & v63) << LODWORD(STACK[0x6A80]))) ^ v106) << 32)) ^ ((v183 ^ (v183 << 24)) >> 16) ^ v185 ^ (v185 >> 24);
  v187 = v179 & 0xFFFFFFFF00000000 | (v109 >> 24) ^ __ROR4__(v173, 8) ^ *(_DWORD *)(v72
                                                                                                  + 4 * BYTE1(v179)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v179)), 16);
  HIDWORD(v109) = (v90 & v161) >> v49;
  LODWORD(v109) = HIDWORD(v109);
  v188 = (((v63 & v161) << LODWORD(STACK[0x6A80])) ^ (2 * (v109 >> 1))) & 0xFFFFFFFE | (((v109 >> 1) & 0x80000000) == 0);
  LODWORD(v179) = v78 & 0xF37F26F6 ^ 0xF9BF937B;
  LODWORD(STACK[0x69D0]) = v185 ^ ((((v78 & 0xF61DECF8 ^ 0x7B0EF67C) & v63) << LODWORD(STACK[0x6A80]))
                                 + (((v78 & 0xF61DECF8 ^ 0x7B0EF67C) & v90) >> v49)) ^ v186;
  LODWORD(v138) = (v179 & v63) << LODWORD(STACK[0x6A80]);
  v189 = ((((v78 & 0xEE44B1A ^ 0x8772258D) & v103) >> v49) | (((v78 & 0xEE44B1A ^ 0x8772258D) & v63) << LODWORD(STACK[0x6A80]))) ^ v106 | ((unint64_t)(LODWORD(STACK[0x66E0]) ^ 0xD7D7D7D6 ^ v188) << 32);
  v190 = v179 & v103;
  LODWORD(v179) = *(_DWORD *)(v72 + 4 * v186);
  v191 = v187 ^ v189;
  v192 = v186 ^ (((v63 & (v126 & 0xCD96DD40 ^ 0x66CB6EA0)) << LODWORD(STACK[0x6A80])) ^ v82 ^ ((v90 & (v126 & 0xCD96DD40 ^ 0x66CB6EA0)) >> v49) | ((unint64_t)(((v190 >> v49) + (_DWORD)v138) ^ v106) << 32));
  *((_QWORD *)&v193 + 1) = v191;
  *(_QWORD *)&v193 = v191 ^ (v191 << 24);
  v194 = (v193 >> 20) ^ 0xD0F0E3B09B743800 ^ __ROR8__(v193, 36) & 0xFFFFF0000FFFFFFFLL;
  v195 = (((((v78 & 0x257F569E ^ 0x92BFAB4F) & v90) >> v49)
         + (((v78 & 0x257F569E ^ 0x92BFAB4F) & v63) << LODWORD(STACK[0x6A80]))) ^ v106 | ((unint64_t)((((v103 & (v126 & 0xC220AE38 ^ 0xE110571C)) >> v49) | ((v63 & (v126 & 0xC220AE38 ^ 0xE110571C)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32)) ^ v192 ^ (v192 >> 24) ^ (v194 << 20) ^ 0x3B09B743800D0F0ELL;
  v196 = v195 ^ (v194 >> 44);
  LODWORD(v194) = *(_DWORD *)(v72 + 4 * BYTE1(v186));
  LODWORD(STACK[0x69B0]) = (__ROR8__(v192 << 29, 33) >> 60) ^ (((v90 & (v126 & 0xC85D8104 ^ 0xE42EC082)) >> v49) | ((v63 & (v126 & 0xC85D8104 ^ 0xE42EC082)) << LODWORD(STACK[0x6A80])));
  LODWORD(v192) = (v78 & 0xE167C2AE) - ((67372036 * v127) & 0xC047800C) - 256646825;
  v197 = (v186 & 0xFFFFFFFF00000000 | v194 ^ __ROR4__(v179, 8) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v186)), 24) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v186)), 16)) ^ ((((v90 & (v126 & STACK[0x1C00] ^ 0x208854E7)) >> v49)+ ((v63 & (v126 & STACK[0x1C00] ^ 0x208854E7)) << LODWORD(STACK[0x6A80]))) ^ v106 | ((unint64_t)(((((v78 & 0xC7661B96 ^ 0xE3B30DCB) & v103) >> v49) | (((v78 & 0xC7661B96 ^ 0xE3B30DCB) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v198 = v196 ^ ((((v192 & v90) >> v49) | ((v192 & v63) << LODWORD(STACK[0x6A80]))) ^ v106 | ((unint64_t)((((v103 & ((131586 * LODWORD(STACK[0x5EE8])) & 0xE79BC6 ^ 0x80F3CDE3)) >> v49) + ((v63 & ((131586 * LODWORD(STACK[0x5EE8])) & 0xE79BC6 ^ 0x80F3CDE3)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v199 = *(_DWORD *)(v72 + 4 * BYTE2(v196));
  v200 = (((v78 & 0xE30080BC ^ 0xF180405E) & v63) << LODWORD(STACK[0x6A80])) ^ v106 ^ (((v78 & 0xE30080BC ^ 0xF180405E) & v90) >> v49);
  LODWORD(v180) = *(_DWORD *)(v72 + 4 * v196);
  LODWORD(v194) = v78 & 0xCDE27916 ^ 0xE6F13C8B;
  LODWORD(v116) = ((v103 & (v126 & 0x7CB67004 ^ 0xBE5B3802)) >> v49)
                + ((v63 & (v126 & 0x7CB67004 ^ 0xBE5B3802)) << LODWORD(STACK[0x6A80]));
  LODWORD(v192) = *(_DWORD *)(v72 + 4 * BYTE3(v195));
  LODWORD(v195) = v194 & v103;
  LODWORD(v194) = (v194 & v63) << LODWORD(STACK[0x6A80]);
  v201 = v196 & 0xFFFFFFFF00000000;
  LODWORD(v161) = v195 >> v49;
  STACK[0x69C0] = v196;
  v202 = *(_DWORD *)(v72 + 4 * BYTE1(v196));
  DWORD1(v193) = v180;
  LODWORD(v193) = v180;
  v203 = v197 ^ (v197 << 24) ^ (v200 | ((unint64_t)(v116 ^ v82) << 32)) ^ ((v197 ^ (v197 << 24)) >> 16) ^ v198 ^ (v198 >> 24);
  LODWORD(v180) = v126 & 0x5D9F1102 ^ 0x2ECF8881;
  LODWORD(v196) = v90;
  v204 = (v90 & v180) >> v49;
  LODWORD(v180) = (v63 & v180) << LODWORD(STACK[0x6A80]);
  LODWORD(STACK[0x69A0]) = v198 ^ (v161 | v194) ^ v197 ^ ((_DWORD)v197 << 24) ^ v200 ^ ((v197 ^ (v197 << 24)) >> 16) ^ v198 ^ (v198 >> 24);
  v205 = (v201 | ((unint64_t)v193 >> 8) ^ __ROR4__(v199, 24) ^ v202 ^ __ROR4__(v192, 16)) ^ (((((v78 & 0x3B1C382C ^ 0x1D8E1C16) & v103) >> v49) | (((v78 & 0x3B1C382C ^ 0x1D8E1C16) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((v204 | v180) ^ v184) << 32));
  LODWORD(v116) = *(_DWORD *)(v72 + 4 * v203);
  v206 = v203 ^ ((((v103 & (v126 & 0x34DC46DC ^ 0x1A6E236E)) >> v49) | ((v63 & (v126 & 0x34DC46DC ^ 0x1A6E236E)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0xC93AAD2C ^ 0xE49D5696) & v90) >> v49) | (((v78 & 0xC93AAD2C ^ 0xE49D5696) & v63) << LODWORD(STACK[0x6A80]))) ^ v184) << 32));
  LODWORD(v161) = *(_DWORD *)(v72 + 4 * BYTE3(v203));
  v207 = v205 ^ (v205 << 24) ^ ((((v103 & (v126 & 0x56919BCE ^ 0xAB48CDE7)) >> v49)
                               + ((v63 & (v126 & 0x56919BCE ^ 0xAB48CDE7)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0x8494B404 ^ 0xC24A5A02) & v90) >> v49) | (((v78 & 0x8494B404 ^ 0xC24A5A02) & v63) << LODWORD(STACK[0x6A80]))) ^ v184) << 32)) ^ ((v205 ^ (v205 << 24)) >> 16) ^ v206 ^ (v206 >> 24);
  v208 = v203 & 0xFFFFFFFF00000000;
  LODWORD(v180) = *(_DWORD *)(v72 + 4 * BYTE2(v203));
  LODWORD(v206) = (((v78 & 0xF6914444 ^ 0xFB48A222) & v90) >> v49) ^ (((v78 & 0xF6914444 ^ 0xFB48A222) & v63) << LODWORD(STACK[0x6A80])) ^ v203 ^ (((v103 & (v126 & 0x34DC46DC ^ 0x1A6E236E)) >> v49) | ((v63 & (v126 & 0x34DC46DC ^ 0x1A6E236E)) << LODWORD(STACK[0x6A80]))) ^ v82;
  LODWORD(v203) = *(_DWORD *)(v72 + 4 * BYTE1(v203));
  DWORD1(v193) = v161;
  LODWORD(v193) = v161;
  LODWORD(STACK[0x6950]) = v206 ^ v207;
  v209 = (v208 | ((unint64_t)v193 >> 16) ^ __ROR4__(v116, 8) ^ v203 ^ __ROR4__(v180, 24)) ^ ((((v103 & (v126 & 0xFFE18050 ^ 0x7FF0C028)) >> v49) + ((v63 & (v126 & 0xFFE18050 ^ 0x7FF0C028)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0xA9B0D214 ^ 0x54D8690A) & v63) << LODWORD(STACK[0x6A80])) | (((v78 & 0xA9B0D214 ^ 0x54D8690A) & v90) >> v49)) ^ v184) << 32));
  v210 = v207 ^ (((((v78 & 0x5C2C413A ^ 0xAE16209D) & v103) >> v49)
                + (((v78 & 0x5C2C413A ^ 0xAE16209D) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((v63 & (v126 & STACK[0x1C04] ^ 0x1FA41EA4)) << LODWORD(STACK[0x6A80])) ^ v184 ^ ((v90 & (v126 & STACK[0x1C04] ^ 0x1FA41EA4)) >> v49)) << 32));
  v211 = v209 ^ (v209 << 24) ^ ((((v103 & (v126 & 0x3D752C10 ^ 0x1EBA9608)) >> v49)
                               + ((v63 & (v126 & 0x3D752C10 ^ 0x1EBA9608)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v78 & 0x8A90AB72 ^ LODWORD(STACK[0x1C08])) & v90) >> v49) ^ v184 ^ (((v78 & 0x8A90AB72 ^ LODWORD(STACK[0x1C08])) & v63) << LODWORD(STACK[0x6A80]))) << 32)) ^ ((v209 ^ (v209 << 24)) >> 16) ^ v210 ^ (v210 >> 24);
  v212 = (v207 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v72 + 4 * BYTE1(v207)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * v207), 8)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v207)), 16) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE2(v207)), 24)) ^ ((((v103 & (v126 & 0x6A009006 ^ 0x35004803)) >> v49) + ((v63 & (v126 & 0x6A009006 ^ 0x35004803)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0x81B5B98C ^ 0xC0DADCC6) & v63) << LODWORD(STACK[0x6A80])) + (((v78 & 0x81B5B98C ^ 0xC0DADCC6) & v90) >> v49)) ^ v184) << 32));
  v213 = *(_DWORD *)(v72 + 4 * v211);
  v214 = v211 ^ ((((v90 & (v126 & 0xC10E00F0 ^ 0xE0870078)) >> v49)
                + ((v63 & (v126 & 0xC10E00F0 ^ 0xE0870078)) << LODWORD(STACK[0x6A80]))) ^ v184 | ((unint64_t)(((((v78 & 0x1B8C69F6 ^ 0xDC634FB) & v103) >> v49) | (((v78 & 0x1B8C69F6 ^ 0xDC634FB) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v215 = (((v78 & 0xE4E0A744 ^ 0x727053A2) & v90) >> v49) ^ v82 ^ (((v78 & 0xE4E0A744 ^ 0x727053A2) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)(((v63 & (v126 & 0x5059A0EE ^ 0x282CD077)) << LODWORD(STACK[0x6A80])) ^ v184 ^ ((v103 & (v126 & 0x5059A0EE ^ 0x282CD077)) >> v49)) << 32);
  DWORD1(v193) = *(_DWORD *)(v72 + 4 * BYTE2(v211));
  LODWORD(v193) = DWORD1(v193);
  STACK[0x6990] = v214;
  v216 = v212 ^ (v212 << 24) ^ v215 ^ ((v212 ^ (v212 << 24)) >> 16) ^ v214 ^ (v214 >> 24);
  v217 = (v211 & 0xFFFFFFFF00000000 | ((unint64_t)v193 >> 24) ^ __ROR4__(v213, 8) ^ *(_DWORD *)(v72 + 4 * BYTE1(v211)) ^ __ROR4__(*(_DWORD *)(v72 + 4 * BYTE3(v211)), 16)) ^ ((((v103 & (v126 & 0x7DD95C6 ^ 0x3EECAE3)) >> v49) + ((v63 & (v126 & 0x7DD95C6 ^ 0x3EECAE3)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)(((((v78 & 0xFF54754C ^ 0x7FAA3AA6) & v90) >> v49) | (((v78 & 0xFF54754C ^ 0x7FAA3AA6) & v63) << LODWORD(STACK[0x6A80]))) ^ v184) << 32));
  LOBYTE(v127) = v49;
  LODWORD(v161) = *(_DWORD *)(v72 + 4 * BYTE3(v216));
  LODWORD(v180) = *(_DWORD *)(v72 + 4 * BYTE2(v216));
  v218 = v216 ^ ((((v78 & 0xCDC5A56A ^ 0x66E2D2B5) & v103) >> v49) ^ v184 ^ (((v78 & 0xCDC5A56A ^ 0x66E2D2B5) & v63) << LODWORD(STACK[0x6A80])) | ((unint64_t)((((v90 & (v126 & 0xF7A0FC36 ^ 0x7BD07E1B)) >> v49) + ((v63 & (v126 & 0xF7A0FC36 ^ 0x7BD07E1B)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v219 = *(_DWORD *)(v72 + 4 * v216);
  v220 = *(_DWORD *)(v72 + 4 * BYTE1(v216));
  v221 = ((((v78 & 0x79D277E4 ^ 0x3CE93BF2) & v63) << LODWORD(STACK[0x6A80])) | (((v78 & 0x79D277E4 ^ 0x3CE93BF2) & v90) >> v49)) ^ v184 | ((unint64_t)((((v103 & (v126 & 0x9B452FC2 ^ 0x4DA297E1)) >> v49) + ((v63 & (v126 & 0x9B452FC2 ^ 0x4DA297E1)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32);
  STACK[0x6980] = v216;
  DWORD1(v193) = v180;
  LODWORD(v193) = v180;
  v222 = v217 ^ (v217 << 24) ^ v221 ^ ((v217 ^ (v217 << 24)) >> 16) ^ v218 ^ (v218 >> 24);
  v223 = v216 & 0xFFFFFFFF00000000 | ((unint64_t)v193 >> 24) ^ __ROR4__(v161, 16) ^ v220 ^ __ROR4__(v219, 8);
  LODWORD(v216) = v78;
  v224 = v223 ^ ((((v90 & (v126 & 0x8F35766C ^ 0x479ABB36)) >> v49)
                + ((v63 & (v126 & 0x8F35766C ^ 0x479ABB36)) << LODWORD(STACK[0x6A80]))) ^ v184 | ((unint64_t)((((v78 & 0x669123CA ^ 0xB34891E5) & v103) >> v49) ^ v82 ^ (((v78 & 0x669123CA ^ 0xB34891E5) & v63) << LODWORD(STACK[0x6A80]))) << 32));
  v225 = v222 ^ ((((v103 & (v126 & 0xFDBD454E ^ 0xFEDEA2A7)) >> v49)
                + ((v63 & (v126 & 0xFDBD454E ^ 0xFEDEA2A7)) << LODWORD(STACK[0x6A80]))) ^ v184 | ((unint64_t)(((((v78 & 0x6A63AE7E ^ 0x3531D73F) & v90) >> v49) | (((v78 & 0x6A63AE7E ^ 0x3531D73F) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v226 = v224 ^ (v224 << 24) ^ ((((v90 & (v126 & 0xAF1621DC ^ 0xD78B10EE)) >> v127) | ((v63 & (v126 & 0xAF1621DC ^ 0xD78B10EE)) << LODWORD(STACK[0x6A80]))) ^ v184 | ((unint64_t)(((((v78 & 0xC98E2DA4 ^ 0x64C716D2) & v103) >> v127) | (((v78 & 0xC98E2DA4 ^ 0x64C716D2) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32)) ^ ((v224 ^ (v224 << 24)) >> 16) ^ v225 ^ (v225 >> 24);
  v227 = (v222 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v147 + 4 * BYTE1(v222)) ^ __ROR4__(*(_DWORD *)(v147 + 4 * v222), 8)) ^ __ROR4__(*(_DWORD *)(v147 + 4 * BYTE2(v222)), 24) ^ __ROR4__(*(_DWORD *)(v147 + 4 * BYTE3(v222)), 16)) ^ ((((v90 & (v126 & 0x42B05718 ^ 0xA1582B8C)) >> v127) + ((v63 & (v126 & 0x42B05718 ^ 0xA1582B8C)) << LODWORD(STACK[0x6A80]))) ^ v184 | ((unint64_t)((((v78 & 0x7FDDE410 ^ 0xBFEEF208) & v103) >> v127) ^ v82 ^ (((v78 & 0x7FDDE410 ^ 0xBFEEF208) & v63) << LODWORD(STACK[0x6A80]))) << 32));
  LODWORD(v161) = v78 & 0xC732D3C0 ^ 0x639969E0;
  LODWORD(v225) = (v161 & v103) >> v127;
  LODWORD(v180) = (v161 & v63) << LODWORD(STACK[0x6A80]);
  v228 = v226 ^ (((v63 & (v126 & 0xAEB8B296 ^ 0x575C594B)) << LODWORD(STACK[0x6A80])) ^ v82 ^ ((v103 & (v126 & 0xAEB8B296 ^ 0x575C594B)) >> v127) | ((unint64_t)(((((v78 & STACK[0x1C0C] ^ 0xF9EDE1ED) & v90) >> v127) + (((v78 & STACK[0x1C0C] ^ 0xF9EDE1ED) & v63) << LODWORD(STACK[0x6A80]))) ^ v184) << 32));
  v229 = v227 ^ (v227 << 24) ^ (((v63 & (v126 & STACK[0x1C10] ^ 0xBE6DC736)) << LODWORD(STACK[0x6A80])) ^ v184 ^ ((v90 & (v126 & STACK[0x1C10] ^ 0xBE6DC736)) >> v127) | ((unint64_t)(((_DWORD)v225 + (_DWORD)v180) ^ v82) << 32)) ^ ((v227 ^ (v227 << 24)) >> 16) ^ v228 ^ (v228 >> 24);
  v230 = *(_DWORD *)(v147 + 4 * BYTE1(v226)) ^ __ROR4__(*(_DWORD *)(v147 + 4 * v226), 8) ^ __ROR4__(*(_DWORD *)(v147 + 4 * BYTE2(v226)), 24);
  LODWORD(v227) = v126;
  LODWORD(v193) = __ROR4__(*(_DWORD *)(v147 + 4 * BYTE3(v226)), 16);
  v231 = (((v103 & (v126 & 0xE9A68BA8 ^ 0xF4D345D4)) >> v127) | ((v63 & (v126 & 0xE9A68BA8 ^ 0xF4D345D4)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((((((v216 & 0x796ED788 ^ 0x3CB76BC4) & v63) << LODWORD(STACK[0x6A80])) + (((v216 & 0x796ED788 ^ 0x3CB76BC4) & v90) >> v127)) ^ v184) << 32);
  v232 = (v226 & 0xFFFFFFFF00000000 | v230 ^ v193) ^ v231 ^ (((v226 & 0xFFFFFFFF00000000 | v230 ^ v193) ^ v231) << 24);
  v233 = v126 & 0xEC10901C ^ 0xF608480E;
  v234 = (v103 & v233) >> v127;
  v235 = v229 ^ (((((v78 & 0x7714F95E ^ 0x3B8A7CAF) & v196) >> v127) | (((v78 & 0x7714F95E ^ 0x3B8A7CAF) & v63) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v103 & (v126 & 0xAAEC700A ^ 0x55763805)) >> v127) + ((v63 & (v126 & 0xAAEC700A ^ 0x55763805)) << LODWORD(STACK[0x6A80]))) ^ v184) << 32));
  v236 = (v63 & v233) << LODWORD(STACK[0x6A80]);
  DWORD1(v193) = *(_DWORD *)(v147 + 4 * BYTE2(v229));
  LODWORD(v193) = DWORD1(v193);
  v237 = v232 ^ ((((v103 & (v126 & 0x13358CD8 ^ 0x899AC66C)) >> v127) | ((v63 & (v126 & 0x13358CD8 ^ 0x899AC66C)) << LODWORD(STACK[0x6A80]))) ^ v184 | ((((((v216 & 0x62443C48 ^ 0x31221E24) & v196) >> v127) | (((v216 & 0x62443C48 ^ 0x31221E24) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32)) ^ (v232 >> 16) ^ v235 ^ (v235 >> 24);
  LODWORD(v231) = ((unint64_t)v193 >> 24) ^ __ROR4__(*(_DWORD *)(v147 + 4 * v229), 8) ^ *(_DWORD *)(v147 + 4 * BYTE1(v229));
  LODWORD(v193) = __ROR4__(*(_DWORD *)(v147 + 4 * BYTE3(v229)), 16);
  v238 = (((v103 & (v227 & 0x172A581C ^ 0x8B952C0E)) >> v127)
        + ((v63 & (v227 & 0x172A581C ^ 0x8B952C0E)) << LODWORD(STACK[0x6A80]))) ^ v82 | ((unint64_t)((((v216 & STACK[0x1C14] ^ 0x950072D6) & v196) >> v127) ^ v184 ^ (((v216 & STACK[0x1C14] ^ 0x950072D6) & v63) << LODWORD(STACK[0x6A80]))) << 32);
  v239 = (((v196 & (v227 & 0x14204AB2 ^ 0x8A102559)) >> v127) | ((v63 & (v227 & 0x14204AB2 ^ 0x8A102559)) << LODWORD(STACK[0x6A80]))) ^ v82;
  LODWORD(STACK[0x6960]) = v235 ^ (v234 + v236);
  v240 = (v229 & 0xFFFFFFFF00000000 | v231 ^ v193) ^ v238;
  v241 = v237 ^ ((((v216 & 0xE51152A6 ^ 0xF288A953) & v103) >> v127) ^ v184 ^ (((v216 & 0xE51152A6 ^ 0xF288A953) & v63) << LODWORD(STACK[0x6A80])) | (v239 << 32));
  v242 = v240 ^ (v240 << 24) ^ ((((v216 & 0x30E987D2 ^ 0x9874C3E9) & v103) >> v127) ^ v184 ^ (((v216 & 0x30E987D2 ^ 0x9874C3E9) & v63) << LODWORD(STACK[0x6A80])) | ((((v63 & (v227 & 0xC6B521DE ^ 0x635A90EF)) << LODWORD(STACK[0x6A80])) ^ v82 ^ ((v196 & (v227 & 0xC6B521DE ^ 0x635A90EF)) >> v127)) << 32)) ^ ((v240 ^ (v240 << 24)) >> 16) ^ v241 ^ (v241 >> 24);
  DWORD1(v193) = *(_DWORD *)(v147 + 4 * v237);
  LODWORD(v193) = DWORD1(v193);
  LODWORD(v235) = v241 ^ (((v103 & (v227 & 0x1FA28746 ^ 0x8FD143A3)) >> v127) | ((v63 & (v227 & 0x1FA28746 ^ 0x8FD143A3)) << LODWORD(STACK[0x6A80]))) ^ v242;
  v243 = (v237 & 0xFFFFFFFF00000000 | ((unint64_t)v193 >> 8) ^ __ROR4__(*(_DWORD *)(v147+ 4 * BYTE2(v237)), 24) ^ *(_DWORD *)(v147 + 4 * BYTE1(v237)) ^ __ROR4__(*(_DWORD *)(v147 + 4 * BYTE3(v237)), 16)) ^ ((((v196 & (v227 & 0x2F5E3C34 ^ 0x17AF1E1A)) >> v127) + ((v63 & (v227 & 0x2F5E3C34 ^ 0x17AF1E1A)) << LODWORD(STACK[0x6A80]))) ^ v82 | (((((v216 & 0xD1F168EA ^ 0xE8F8B475) & v103) >> v127) ^ v184 ^ (((v216 & 0xD1F168EA ^ 0xE8F8B475) & v63) << LODWORD(STACK[0x6A80]))) << 32));
  v244 = v242 ^ ((((v216 & 0xD2952176 ^ 0xE94A90BB) & v196) >> v127) ^ v184 ^ (((v216 & 0xD2952176 ^ 0xE94A90BB) & v63) << LODWORD(STACK[0x6A80])) | (((((v103 & ((v227 & 0x42220010 | 0xA1DDE00F) ^ v227 & 0x199C00E)) >> v127) + ((v63 & ((v227 & 0x42220010 | 0xA1DDE00F) ^ v227 & 0x199C00E)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v245 = v243 ^ (v243 << 24) ^ ((((v196 & (v227 & 0x6922E20E ^ 0x34917107)) >> v127)
                               + ((v63 & (v227 & 0x6922E20E ^ 0x34917107)) << LODWORD(STACK[0x6A80]))) ^ v184 | ((((((v216 & 0x86BCFF0C ^ 0x435E7F86) & v103) >> v127) + (((v216 & 0x86BCFF0C ^ 0x435E7F86) & v63) << LODWORD(STACK[0x6A80]))) ^ v82) << 32)) ^ ((v243 ^ (v243 << 24)) >> 16) ^ v244 ^ (v244 >> 24);
  v246 = (v242 & 0xFFFFFFFF00000000 | (*(_DWORD *)(v147 + 4 * BYTE1(v242)) ^ __ROR4__(*(_DWORD *)(v147 + 4 * v242), 8)) ^ __ROR4__(*(_DWORD *)(v147 + 4 * BYTE2(v242)), 24) ^ __ROR4__(*(_DWORD *)(v147 + 4 * BYTE3(v242)), 16)) ^ ((((v216 & 0xC1DAE4AA ^ 0x60ED7255) & v103) >> v127) ^ v82 ^ (((v216 & 0xC1DAE4AA ^ 0x60ED7255) & v63) << LODWORD(STACK[0x6A80])) | (((((v196 & (v227 & 0xF31A17C8 ^ 0xF98D0BE4)) >> v127) + ((v63 & (v227 & 0xF31A17C8 ^ 0xF98D0BE4)) << LODWORD(STACK[0x6A80]))) ^ v184) << 32));
  LODWORD(v193) = __ROR4__(*(_DWORD *)(v147+ 4* ((v243 ^ ((_DWORD)v243 << 24) ^ (((v196 & (v227 & 0x6922E20E ^ 0x34917107)) >> v127)+ ((v63 & (v227 & 0x6922E20E ^ 0x34917107)) << LODWORD(STACK[0x6A80]))) ^ v184 ^ ((v243 ^ (v243 << 24)) >> 16) ^ v244 ^ (v244 >> 24)) >> 16)), 24);
  v247 = v245 ^ (((((v216 & 0xE5B7D5C0 ^ 0x72DBEAE0) & v196) >> v127)
                + (((v216 & 0xE5B7D5C0 ^ 0x72DBEAE0) & v63) << LODWORD(STACK[0x6A80]))) ^ v184 | (((((v103 & (v227 & 0xD298AB12 ^ 0x694C5589)) >> v127) | ((v63 & (v227 & 0xD298AB12 ^ 0x694C5589)) << LODWORD(STACK[0x6A80]))) ^ v82) << 32));
  v248 = v246 ^ (v246 << 24) ^ (((v103 & (v227 & 0x61A8B4DA ^ 0xB0D45A6D)) >> v127)
                              + ((v63 & (v227 & 0x61A8B4DA ^ 0xB0D45A6D)) << LODWORD(STACK[0x6A80]))) ^ v82 ^ ((v246 ^ (v246 << 24)) >> 16) ^ v247 ^ (v247 >> 24);
  v249 = v244 ^ (((v103 & (v227 & 0xF7AF81A2 ^ LODWORD(STACK[0x1C18]))) >> v127)
               + ((v63 & (v227 & 0xF7AF81A2 ^ LODWORD(STACK[0x1C18]))) << LODWORD(STACK[0x6A80])));
  LODWORD(v244) = ((v196 & (v227 & 0xDE501A16 ^ LODWORD(STACK[0x1C1C]))) >> v127) ^ ((v63 & (v227 & 0xDE501A16 ^ LODWORD(STACK[0x1C1C]))) << LODWORD(STACK[0x6A80])) ^ v243 ^ ((_DWORD)v243 << 24) ^ (((v196 & (v227 & 0x6922E20E ^ 0x34917107)) >> v127) + ((v63 & (v227 & 0x6922E20E ^ 0x34917107)) << LODWORD(STACK[0x6A80]))) ^ v184 ^ ((v243 ^ (v243 << 24)) >> 16) ^ v244 ^ (v244 >> 24) ^ ((((v216 & 0xE5B7D5C0 ^ 0x72DBEAE0) & v196) >> v127) + (((v216 & 0xE5B7D5C0 ^ 0x72DBEAE0) & v63) << LODWORD(STACK[0x6A80]))) ^ v184 ^ v248;
  LODWORD(v247) = (((v103 & (v227 & 0xE62CEE3E ^ 0xF316771F)) >> v127) | ((v63 & (v227 & 0xE62CEE3E ^ 0xF316771F)) << LODWORD(STACK[0x6A80]))) ^ v184 ^ v193 ^ (*(_DWORD *)(v147 + 4 * v245) >> 8) ^ *(_DWORD *)(v147 + 4 * BYTE1(v245));
  LODWORD(v248) = v248 ^ ((v63 & (v227 & 0xD8B839DA ^ 0xEC5C1CED)) << LODWORD(STACK[0x6A80])) ^ v82 ^ ((v196 & (v227 & 0xD8B839DA ^ 0xEC5C1CED)) >> v127);
  LODWORD(v193) = __ROR4__(*(_DWORD *)(v147 + 4 * BYTE3(v245)), 16);
  v250 = v247 ^ v193 ^ (((v103 & (v227 & 0xD8EBF6D0 ^ 0xEC75FB68)) >> v127)
                                                  + ((v63 & (v227 & 0xD8EBF6D0 ^ 0xEC75FB68)) << LODWORD(STACK[0x6A80]))) ^ v82 ^ (((v196 & (v227 & 0x844BA1E0 ^ 0x4225D0F0)) >> v127) | ((v63 & (v227 & 0x844BA1E0 ^ 0x4225D0F0)) << LODWORD(STACK[0x6A80]))) ^ ((unint64_t)(v247 ^ v193) >> 16);
  LODWORD(STACK[0x6A00]) = v235;
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x6AB0])) - 8))(((_DWORD)v235 << 24) | ((v249 ^ v245) << 16) | (v244 << 8) | (v250 ^ BYTE3(v248)), (LODWORD(STACK[0x6AB0]) - 18803));
}

uint64_t sub_100D20D10@<X0>(unsigned int a1@<W4>, int a2@<W5>, uint64_t a3@<X7>, char a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  char v10;
  int v11;
  int v12;
  char v13;
  int v14;

  v14 = *(unsigned __int16 *)(STACK[0x6A10] + 2 * (v5 ^ v9)) ^ v6;
  *(_DWORD *)(a3
            + 4
            * (((((v5 ^ (2 * (v5 & STACK[0x6A50]))) & a1) >> v10)
                               + ((v5 ^ (2 * (v5 & STACK[0x6A50]))) << v13)) ^ a4)) = ((((v14 ^ (2
                                                                                               * (v14 & STACK[0x6A20]))) & v8) >> v10)
                                                                                     + (((v14 ^ (2
                                                                                               * (v14 & STACK[0x6A20]))) & v12) << v13)) ^ v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6AD8] + 8 * (((v4 == v5) * v7) ^ a2)) - 8))();
}

uint64_t sub_100D20DA0@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X7>, int a4@<W8>)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  char v12;
  unsigned __int8 v13;
  char v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  char v18;
  int v19;
  char v20;
  int v21;
  unsigned int v22;
  unsigned __int8 v23;
  unint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unint64_t v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  unint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  BOOL v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  int v183;
  uint64_t v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  BOOL v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v246;
  int v247;
  uint64_t v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  unint64_t v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  int v341;
  int v342;
  unsigned int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  unsigned int v360;
  int v361;
  int v362;
  unsigned int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  int v379;
  int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  int v388;
  int v389;
  unsigned int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  unsigned int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  int v461;
  unsigned int v462;
  int v463;
  unsigned int v464;
  uint64_t v465;
  int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  BOOL v505;
  int v506;
  int v507;
  int v508;
  uint64_t v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  unsigned int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  int v602;
  unsigned int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  int v626;
  int v627;
  int v628;
  int v629;
  int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  int v640;
  int v641;
  int v642;
  int v643;
  int v644;
  int v645;
  int v646;
  int v647;
  int v648;
  int v649;
  int v650;
  int v651;
  int v652;
  int v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  int v661;
  int v662;
  int v663;
  int v664;
  int v665;
  int v666;
  int v667;
  int v668;
  int v669;
  int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  int v676;
  int v677;
  int v678;
  int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  int v702;
  int v703;
  int v704;
  int v705;
  int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  int v714;
  unsigned int v715;
  int v716;
  int v717;
  uint64_t v718;
  int v719;
  int v720;
  int v721;
  int v722;
  unsigned int v723;
  int v724;
  int v725;
  int v726;
  int v727;
  int v728;
  int v729;
  int v730;
  int v731;
  int v732;
  int v733;
  int v734;
  int v735;
  int v736;
  int v737;
  int v738;
  unsigned int v739;
  unsigned int v740;
  int v741;
  int v742;
  int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  int v750;
  int v751;
  int v752;
  int v753;
  int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  int v759;
  int v760;
  int v761;
  int v762;
  int v763;
  int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  int v774;
  int v775;
  int v776;
  int v777;
  int v778;
  int v779;
  int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  int v785;
  int v786;
  int v787;
  int v788;
  int v789;
  int v790;
  unsigned int v791;
  int v792;
  int v793;
  int v794;
  unsigned int v795;
  int v796;
  unsigned int v797;
  int v798;
  int v799;
  unsigned int v800;
  int v801;
  int v802;
  uint64_t v803;
  unsigned int v804;
  int v805;
  int v806;
  int v807;
  unsigned int v808;
  int v809;
  int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  int v815;
  int v816;
  int v817;
  int v818;
  unsigned int v819;
  int v820;
  int v821;
  int v822;
  uint64_t (*v823)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v824;
  unint64_t v825;
  int v826;
  unint64_t v827;

  v19 = v9 ^ STACK[0x69C0];
  v20 = STACK[0x6990] ^ STACK[0x6980];
  v21 = v10 + (LODWORD(STACK[0x6960]) ^ v12);
  LODWORD(STACK[0x6060]) = LODWORD(STACK[0x5CF0]) | LODWORD(STACK[0x5CF8]);
  v22 = STACK[0x6A60];
  v23 = v20 ^ (((STACK[0x6A60] & v8) >> v14) | ((v16 & v8) << v18));
  LODWORD(STACK[0x63F8]) = a2 + 4477;
  v25 = 17 * ((a2 + 4477) ^ 0x599Eu);
  STACK[0x63F0] = v25;
  v26 = (v25 ^ 0x3AA0) & v19 | v7;
  LODWORD(STACK[0x6690]) = v26;
  v27 = v6 + v23;
  LODWORD(STACK[0x6640]) = v27;
  v28 = STACK[0x61DC];
  v29 = STACK[0x61C0];
  v30 = *(_DWORD *)(a3 + 4 * v4);
  LODWORD(STACK[0x6618]) = v30;
  HIDWORD(v32) = *(_DWORD *)(a3 + 4 * LODWORD(STACK[0x6A00]));
  LODWORD(v32) = HIDWORD(v32);
  v31 = v32 >> 8;
  LODWORD(STACK[0x6630]) = v31;
  v33 = *(_DWORD *)(a3 + 4 * v5);
  LODWORD(STACK[0x6628]) = v33;
  HIDWORD(v32) = *(_DWORD *)(a3 + 4 * v13);
  LODWORD(v32) = HIDWORD(v32);
  v34 = v32 >> 24;
  LODWORD(STACK[0x6620]) = v34;
  v35 = (((v29 & 0xE7FCFBFC ^ 0xF3FE7DFE) & v16) << v18) ^ (((v29 & 0xE7FCFBFC ^ 0xF3FE7DFE) & v11) >> v14) ^ (((v22 & (v28 & 0x51FCFBFC ^ 0x28FE7DFE)) >> v14) + ((v16 & (v28 & 0x51FCFBFC ^ 0x28FE7DFE)) << v18)) ^ __ROR4__(v30, 16) ^ v31 ^ v33 ^ v34 ^ v26;
  LODWORD(STACK[0x68B0]) = a1;
  LODWORD(STACK[0x6698]) = v21;
  v36 = v21 ^ a4 ^ a1;
  v37 = STACK[0x6970];
  v38 = v27 ^ LODWORD(STACK[0x6970]);
  v39 = v35 ^ v38;
  LODWORD(STACK[0x68E0]) = v35;
  LODWORD(v25) = v35 ^ v38 ^ v36;
  LODWORD(STACK[0x69C0]) = v25 ^ v37;
  v40 = ((((v29 & 0x2265B06A ^ 0x9132D835) & v22) >> v14) + (((v29 & 0x2265B06A ^ 0x9132D835) & v16) << v18)) ^ (((v11 & (v28 & 0x5E65B06A ^ 0xAF32D835)) >> v14) + ((v16 & (v28 & 0x5E65B06A ^ 0xAF32D835)) << v18)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((v25 ^ v37) >> 16)), 16) ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((v25 ^ v37) >> 24)), 8) ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((unsigned __int16)(v25 ^ v37) >> 8)), 24) ^ *(_DWORD *)(a3 + 4 * (v25 ^ v37));
  v41 = v35 ^ v38 ^ v15;
  LODWORD(STACK[0x6A00]) = v41;
  v42 = STACK[0x5EC0];
  v43 = v21 ^ LODWORD(STACK[0x5EC0]) ^ v41;
  LODWORD(STACK[0x69A0]) = v43;
  v44 = v40 ^ v38;
  LODWORD(STACK[0x69B0]) = v44;
  v45 = v44 ^ v43;
  v46 = v45 ^ v25;
  v47 = v45;
  LODWORD(STACK[0x6910]) = v45;
  v48 = ((((v29 & 0xA781BD26 ^ 0x53C0DE93) & v11) >> v14) | (((v29 & 0xA781BD26 ^ 0x53C0DE93) & v16) << v18)) ^ (((v22 & (v28 & 0x581BD26 ^ 0x2C0DE93)) >> v14) | ((v16 & (v28 & 0x581BD26 ^ 0x2C0DE93)) << v18)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v46)), 16) ^ *(_DWORD *)(a3 + 4 * (v45 ^ v25)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v46)), 24) ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v46)), 8);
  v49 = v28;
  v50 = v48 ^ v36;
  v51 = (unint64_t)*(unsigned int *)(a3 + 4 * ((v48 ^ v36) >> 24)) << 24;
  v52 = ((((v29 & 0x189F278C ^ 0x8C4F93C6) & v11) >> v14) | (((v29 & 0x189F278C ^ 0x8C4F93C6) & v16) << v18)) ^ (((v22 & (v49 & 0xD69F278C ^ 0xEB4F93C6)) >> v14) | ((v16 & (v49 & 0xD69F278C ^ 0xEB4F93C6)) << v18)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((unsigned __int16)(v48 ^ v36) >> 8)), 24);
  LODWORD(v32) = __ROR4__(*(_DWORD *)(a3 + 4 * ((v48 ^ v36) >> 16)), 16);
  v53 = v40 ^ v35;
  LODWORD(STACK[0x6960]) = v53;
  v54 = v48 ^ v39;
  v55 = v48 ^ v53;
  LODWORD(STACK[0x69E0]) = v48 ^ v36;
  v56 = v52 ^ v32 ^ *(_DWORD *)(a3 + 4 * (v48 ^ v36)) ^ v48 ^ v53 ^ (HIDWORD(v51) & 0x258904 | v51 & 0x48000000 | HIDWORD(v51) & 0xDA76FB | v51 & 0xB7000000);
  v57 = v47 ^ v15 ^ v48 ^ v39;
  LODWORD(STACK[0x69D0]) = v57;
  v58 = v56 ^ v54 ^ v57;
  LODWORD(STACK[0x6920]) = v58 ^ a4;
  v59 = v50 ^ v42 ^ v58 ^ a4;
  v60 = (((v29 & 0x6B607DDE ^ 0xB5B03EEF) & v16) << v18) ^ (((v29 & 0x6B607DDE ^ 0xB5B03EEF) & v11) >> v14) ^ (((v22 & (v49 & 0x1B607DDE ^ 0x8DB03EEF)) >> v14) | ((v16 & (v49 & 0x1B607DDE ^ 0x8DB03EEF)) << v18)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v59)), 24) ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v59)), 8) ^ *(_DWORD *)(a3 + 4 * (v50 ^ v42 ^ v58 ^ a4));
  LODWORD(v32) = __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v59)), 16);
  v61 = ((((v29 & 0x43EDEB4A ^ 0xA1F6F5A5) & v22) >> v14) | (((v29 & 0x43EDEB4A ^ 0xA1F6F5A5) & v16) << v18)) ^ (((v11 & (v49 & 0x31EDEB4A ^ 0x98F6F5A5)) >> v14) + ((v16 & (v49 & 0x31EDEB4A ^ 0x98F6F5A5)) << v18));
  v62 = v37;
  v63 = v56 ^ v54 ^ v37;
  LODWORD(STACK[0x68D0]) = v63;
  v64 = v60 ^ v32 ^ v56;
  v65 = v63 ^ v64;
  v66 = v58 ^ v15 ^ v65;
  v67 = v65;
  LODWORD(STACK[0x6890]) = v65;
  v68 = v66 ^ a4 ^ v59;
  v69 = v68 ^ v37;
  v70 = v61 ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v69)), 8) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v69)), 24) ^ *(_DWORD *)(a3 + 4 * (v68 ^ v37)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v69)), 16);
  LODWORD(STACK[0x68C0]) = v70;
  v71 = ((((v29 & 0xF1B34FAC ^ 0x78D9A7D6) & STACK[0x6A70]) << v18)
       + (((v29 & 0xF1B34FAC ^ 0x78D9A7D6) & v22) >> LODWORD(STACK[0x6AA0]))) ^ (((v11 & (v49 & 0xB3B34FAC ^ 0xD9D9A7D6)) >> LODWORD(STACK[0x6AA0]))
                                                                               + ((STACK[0x6A70] & (v49 & 0xB3B34FAC ^ 0xD9D9A7D6)) << v18));
  v72 = v58;
  LODWORD(STACK[0x68A0]) = v58;
  v73 = v70 ^ v64;
  v74 = v70 ^ v64 ^ v58 ^ v68;
  LODWORD(STACK[0x6990]) = v74 ^ v15;
  v75 = v71 ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((v74 ^ v15) >> 16)), 16) ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((unsigned __int16)(v74 ^ v15) >> 8)), 24) ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((v74 ^ v15) >> 24)), 8) ^ *(_DWORD *)(a3 + 4 * (v74 ^ v15));
  LODWORD(v25) = ((((v29 & 0x92E8EA62 ^ 0xC9747531) & STACK[0x6A70]) << v18) | (((v29 & 0x92E8EA62 ^ 0xC9747531) & v22) >> LODWORD(STACK[0x6AA0]))) ^ (((v11 & (v49 & 0xE0E8EA62 ^ 0x70747531)) >> LODWORD(STACK[0x6AA0])) | ((STACK[0x6A70] & (v49 & 0xE0E8EA62 ^ 0x70747531)) << v18));
  v76 = v75 ^ v73;
  v77 = v67 ^ a4;
  v78 = v75 ^ v67 ^ a4;
  LODWORD(STACK[0x6980]) = v78;
  v79 = v77 ^ v72 ^ v75 ^ v73;
  LODWORD(STACK[0x6950]) = v75 ^ v73;
  LODWORD(STACK[0x6638]) = v79;
  v80 = v79 ^ a4 ^ v74;
  LODWORD(STACK[0x6940]) = v80 ^ v37;
  LODWORD(v25) = v25 ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((v80 ^ v37) >> 16)), 16) ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((v80 ^ v37) >> 24)), 8) ^ *(_DWORD *)(a3 + 4 * (v80 ^ v37));
  LODWORD(v32) = __ROR4__(*(_DWORD *)(a3 + 4 * ((unsigned __int16)(v80 ^ v37) >> 8)), 24);
  v81 = v79 ^ a4 ^ v37;
  LODWORD(STACK[0x6930]) = v81;
  v82 = a4 ^ v15 ^ v81 ^ v80;
  v83 = ((v22 & (v49 & 0xD8BE7190 ^ 0x6C5F38C8)) >> LODWORD(STACK[0x6AA0])) ^ ((STACK[0x6A70] & (v49 & 0xD8BE7190 ^ 0x6C5F38C8)) << v18) ^ ((((v29 & 0xACBE7190 ^ 0xD65F38C8) & v11) >> LODWORD(STACK[0x6AA0])) + (((v29 & 0xACBE7190 ^ 0xD65F38C8) & STACK[0x6A70]) << v18));
  v84 = v25 ^ v32 ^ v76;
  LODWORD(STACK[0x6900]) = v84;
  v85 = v84 ^ v42 ^ v78;
  v86 = v82 ^ v85;
  v87 = v83 ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((v82 ^ v85) >> 24)), 8) ^ *(_DWORD *)(a3
                                                                                                 + 4
                                                                                                 * (v82 ^ v84 ^ v42 ^ v78));
  LODWORD(v32) = __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v86)), 16);
  LODWORD(STACK[0x68F0]) = v86;
  v88 = v87 ^ v32 ^ v84 ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v86)), 24);
  LODWORD(v25) = ((((v29 & 0x19BEC392 ^ 0x8CDF61C9) & v11) >> LODWORD(STACK[0x6AA0])) | (((v29 & 0x19BEC392 ^ 0x8CDF61C9) & STACK[0x6A70]) << v18)) ^ (((v22 & (v49 & 0xC5BEC392 ^ 0xE2DF61C9)) >> LODWORD(STACK[0x6AA0])) + ((STACK[0x6A70] & (v49 & 0xC5BEC392 ^ 0xE2DF61C9)) << v18));
  v89 = v88 ^ v79;
  v90 = v42;
  v91 = v86 ^ v42 ^ v88 ^ v79;
  LODWORD(STACK[0x6AB0]) = v91;
  LODWORD(v25) = v25 ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v91)), 24) ^ *(_DWORD *)(a3
                                                                                    + 4
                                                                                    * (v86 ^ v42 ^ v88 ^ v79)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v91)), 16);
  LODWORD(v32) = __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v91)), 8);
  LODWORD(STACK[0x6610]) = v25 ^ v32;
  LODWORD(STACK[0x6608]) = ((v85 ^ v15 ^ v88 ^ v79 ^ v25 ^ v32) & 0x94B030D ^ v37 & 0x10B030D | v37 & 0xF4905CF2) ^ (v85 ^ v15 ^ v88 ^ v79 ^ v25 ^ v32) & 0xF6B4FCF2;
  LODWORD(STACK[0x6880]) = LODWORD(STACK[0x6160]) ^ LODWORD(STACK[0x6198]) ^ v46;
  LODWORD(STACK[0x65F8]) = v55 ^ (LODWORD(STACK[0x60C8]) + LODWORD(STACK[0x6760]));
  v92 = v22;
  v93 = (LODWORD(STACK[0x5D28]) ^ v22 ^ 0x42424242) + (v22 | LODWORD(STACK[0x5E78]));
  v94 = (STACK[0x5D38] & v22) >> LODWORD(STACK[0x6AA0]);
  LODWORD(STACK[0x65C0]) = v94;
  LOBYTE(v79) = (v94 + LOBYTE(STACK[0x6158])) ^ v90 ^ v54;
  LODWORD(STACK[0x6588]) = (v94 + LODWORD(STACK[0x6158])) ^ v90 ^ v54;
  LODWORD(STACK[0x6870]) = v56 ^ (LODWORD(STACK[0x6270]) | LODWORD(STACK[0x62F0]));
  LODWORD(STACK[0x65D0]) = v64 ^ (LODWORD(STACK[0x5D18]) + LODWORD(STACK[0x5F00]));
  LODWORD(STACK[0x65B8]) = (v66 ^ v37) + LODWORD(STACK[0x5EA8]) - 2 * ((v66 ^ v37) & STACK[0x5EA8]);
  v95 = STACK[0x61BC];
  LODWORD(STACK[0x65D8]) = LODWORD(STACK[0x5EB0]) ^ LODWORD(STACK[0x61BC]) ^ v59;
  v96 = STACK[0x5D00];
  LODWORD(STACK[0x6648]) = ((v11 & STACK[0x5D10]) >> LODWORD(STACK[0x6AA0])) | LODWORD(STACK[0x5D00]);
  LODWORD(STACK[0x65A8]) = LODWORD(STACK[0x5D08]) + v96;
  v97 = STACK[0x5F10];
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x5EE0]) ^ LODWORD(STACK[0x5F10]) ^ LODWORD(STACK[0x68E0]);
  LODWORD(v25) = LODWORD(STACK[0x5E80]) ^ LODWORD(STACK[0x6300]);
  LODWORD(STACK[0x65E8]) = v25;
  v98 = STACK[0x66C0];
  v99 = LODWORD(STACK[0x6290]) ^ LODWORD(STACK[0x66C0]) ^ v88;
  LODWORD(STACK[0x68E0]) = v99;
  v100 = 16843009 * (v99 - v79 - 34);
  v101 = 2 * (v100 & STACK[0x6A50]);
  LODWORD(STACK[0x6600]) = v101;
  v102 = v101 ^ v100;
  v103 = ((v101 ^ v100) & STACK[0x6A70]) << v18;
  v104 = ((v101 ^ v100) & v22) >> LODWORD(STACK[0x6AA0]);
  v105 = LODWORD(STACK[0x68B0]) ^ v25;
  v106 = v104 ^ v103;
  v107 = (v104 ^ v103) & 0x2000;
  if ((v107 & v105) != 0)
    v107 = -v107;
  v108 = (v107 + v105) ^ v106 & 0xFFFFDFFF;
  v109 = v101 & 0xFDFFFFFE;
  v110 = v101 & 0x2000000;
  if ((v101 & 0x2000000 & v100) != 0)
    v110 = -v110;
  v111 = v100;
  v112 = LODWORD(STACK[0x69C0]) ^ (LODWORD(STACK[0x5EC8]) | v97) ^ (((((v110 + v100) ^ v109) & v22) >> LODWORD(STACK[0x6AA0]))
                                                                  + ((((v110 + v100) ^ v109) & STACK[0x6A70]) << v18));
  v113 = STACK[0x6170];
  v114 = LODWORD(STACK[0x5E90]) ^ LODWORD(STACK[0x6170]) ^ LODWORD(STACK[0x69A0]);
  LODWORD(STACK[0x69C0]) = LODWORD(STACK[0x6278]) ^ LODWORD(STACK[0x6960]);
  LODWORD(STACK[0x69B0]) ^= LODWORD(STACK[0x62E8]) ^ v62;
  LODWORD(STACK[0x69A0]) = LODWORD(STACK[0x62E0]) ^ LODWORD(STACK[0x5EF8]) ^ LODWORD(STACK[0x6910]);
  v115 = LODWORD(STACK[0x62A0]) ^ v62 ^ LODWORD(STACK[0x6920]);
  v116 = STACK[0x69F0];
  LODWORD(STACK[0x6890]) ^= LODWORD(STACK[0x5D48]) ^ LODWORD(STACK[0x69F0]);
  v117 = LODWORD(STACK[0x5D50]) ^ v69;
  v118 = ((v93 + 1) >> LODWORD(STACK[0x6AA0])) | v95;
  v119 = STACK[0x68D0];
  LODWORD(STACK[0x6580]) = LODWORD(STACK[0x68D0]) ^ v118;
  LODWORD(STACK[0x6960]) = LODWORD(STACK[0x5D40]) ^ LODWORD(STACK[0x6150]) ^ v119 ^ LODWORD(STACK[0x68C0]);
  v120 = LODWORD(STACK[0x66E8]) ^ v62 ^ LODWORD(STACK[0x68A0]);
  v121 = STACK[0x6708];
  LODWORD(STACK[0x6910]) = v73 ^ (LODWORD(STACK[0x6110]) | LODWORD(STACK[0x6708]));
  LODWORD(STACK[0x6920]) = v120 ^ v73;
  LODWORD(STACK[0x68A0]) = LODWORD(STACK[0x6610]) ^ v88;
  v122 = v88 ^ v85;
  LODWORD(STACK[0x68D0]) = LODWORD(STACK[0x60F8]) ^ v62 ^ v85;
  v123 = LODWORD(STACK[0x6190]) ^ LODWORD(STACK[0x6188]);
  LODWORD(STACK[0x65F0]) = v123;
  LODWORD(STACK[0x68C0]) = LODWORD(STACK[0x6638]) ^ v123 ^ v85;
  v124 = (v102 & v11) >> LODWORD(STACK[0x6AA0]);
  LODWORD(STACK[0x6638]) = v124;
  v125 = LODWORD(STACK[0x616C]) | v113;
  LODWORD(STACK[0x6610]) = v125;
  v126 = v124 | v103;
  v127 = (v124 | v103) ^ v62 ^ v125 ^ LODWORD(STACK[0x6A00]);
  v128 = LODWORD(STACK[0x66B0]) | v98;
  LODWORD(STACK[0x6058]) = v128;
  LODWORD(STACK[0x6A00]) = (v124 | v103) ^ v62 ^ v128 ^ v89;
  v129 = STACK[0x6A20];
  LODWORD(STACK[0x6730]) = v111;
  v130 = v111 ^ (2 * (v111 & v129));
  LODWORD(STACK[0x6598]) = v130;
  v131 = v92;
  v132 = (v130 & v92) >> LODWORD(STACK[0x6AA0]);
  v133 = (v130 & STACK[0x6A70]) << v18;
  v134 = (v130 & v11) >> LODWORD(STACK[0x6AA0]);
  v135 = v132;
  v136 = v132 ^ v133 ^ LODWORD(STACK[0x65E0]);
  v137 = v132 ^ v133;
  v138 = v134 | v133;
  v139 = v133;
  v140 = v115 ^ v126;
  v141 = v106 ^ v117;
  LODWORD(STACK[0x6570]) = v140 - 432178877 - (v106 ^ v117) - v112;
  v142 = (((_BYTE)v140 + 67 - (v106 ^ v117) - (_BYTE)v112) & 1) == 0;
  if ((((_BYTE)v140 + 67 - (v106 ^ v117) - (_BYTE)v112) & 1) != 0)
    v143 = v127;
  else
    v143 = v136;
  LODWORD(STACK[0x6578]) = v143;
  if ((((_BYTE)v140 + 67 - (v106 ^ v117) - (_BYTE)v112) & 1) != 0)
    v144 = v136;
  else
    v144 = v112;
  LODWORD(STACK[0x6568]) = v144;
  if ((((_BYTE)v140 + 67 - (v106 ^ v117) - (_BYTE)v112) & 1) != 0)
    v127 = v114 ^ v138;
  LODWORD(STACK[0x6558]) = v127;
  if ((((_BYTE)v140 + 67 - (v106 ^ v117) - (_BYTE)v112) & 1) != 0)
    v145 = v112;
  else
    v145 = v114 ^ v138;
  LODWORD(STACK[0x6550]) = v145;
  v146 = LODWORD(STACK[0x6140]) ^ LODWORD(STACK[0x6740]);
  v147 = STACK[0x6740];
  LODWORD(STACK[0x65E0]) = v146;
  v148 = (v104 + v103) ^ v62;
  v149 = v104 + v103;
  LODWORD(STACK[0x6450]) = v146 ^ v116 ^ v122 ^ v148;
  v150 = LODWORD(STACK[0x6298]) ^ v148;
  v151 = LODWORD(STACK[0x6A40]) ^ v62 ^ LODWORD(STACK[0x65A8]);
  v152 = STACK[0x6608];
  LODWORD(STACK[0x6430]) = LODWORD(STACK[0x6608]) ^ v150;
  v153 = v134 ^ v139;
  LODWORD(STACK[0x6608]) = v151 ^ LODWORD(STACK[0x6AB0]) ^ v134 ^ v139 ^ v152;
  v154 = LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x5E98]);
  v155 = LODWORD(STACK[0x5D20]) + LODWORD(STACK[0x5ED8]);
  v156 = v137 ^ v155 ^ LODWORD(STACK[0x6640]);
  LODWORD(STACK[0x6138]) = v137;
  v157 = v126;
  LODWORD(STACK[0x65C8]) = v126;
  v158 = v154 ^ v126;
  LODWORD(STACK[0x6050]) = v155;
  v159 = LODWORD(STACK[0x6698]) ^ v155 ^ v138;
  if (v142)
    v160 = v158;
  else
    v160 = v156;
  LODWORD(STACK[0x6548]) = v160;
  if (v142)
    v161 = v156;
  else
    v161 = v159;
  LODWORD(STACK[0x6448]) = v161;
  if (v142)
    v162 = v108;
  else
    v162 = v158;
  LODWORD(STACK[0x6440]) = v162;
  if (!v142)
    v159 = v108;
  LODWORD(STACK[0x6438]) = v159;
  v163 = (STACK[0x5D30] & v131) >> LODWORD(STACK[0x6AA0]);
  LODWORD(STACK[0x6470]) = v163;
  v164 = LODWORD(STACK[0x5ED0]) + v163;
  LODWORD(STACK[0x65A8]) = v164;
  v165 = v164 ^ v62 ^ v122;
  v166 = LODWORD(STACK[0x6158]) | LODWORD(STACK[0x65C0]);
  LODWORD(STACK[0x60B0]) = v166;
  v167 = LODWORD(STACK[0x69D0]) ^ v166;
  v168 = LODWORD(STACK[0x65F8]) ^ v138;
  v169 = v135;
  LODWORD(STACK[0x6498]) = v135;
  v170 = v167 ^ (v135 + v139);
  v171 = v135 + v139;
  LODWORD(STACK[0x65A0]) = v171;
  v172 = v103;
  v173 = (v103 | v104) ^ LODWORD(STACK[0x6588]);
  v174 = v103 | v104;
  v175 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x62B0]) ^ v157;
  if (v142)
    v176 = LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x62B0]) ^ v157;
  else
    v176 = v168;
  LODWORD(STACK[0x6460]) = v176;
  if (v142)
    v177 = v170;
  else
    v177 = v175;
  LODWORD(STACK[0x65F8]) = v177;
  if (v142)
    v178 = v173;
  else
    v178 = v170;
  LODWORD(STACK[0x6458]) = v178;
  if (!v142)
    v168 = v173;
  LODWORD(STACK[0x65C0]) = v168;
  LODWORD(STACK[0x6538]) = v153;
  v179 = v153 ^ LODWORD(STACK[0x69C0]);
  LODWORD(STACK[0x65B0]) = v106;
  v180 = v106 ^ LODWORD(STACK[0x6880]);
  v181 = LODWORD(STACK[0x69B0]) ^ v106;
  v182 = LODWORD(STACK[0x69A0]) ^ v138;
  if (v142)
    v183 = LODWORD(STACK[0x69A0]) ^ v138;
  else
    v183 = v106 ^ LODWORD(STACK[0x6880]);
  LODWORD(STACK[0x69D0]) = v183;
  if (!v142)
    v180 = v179;
  LODWORD(STACK[0x69B0]) = v180;
  if (v142)
    v184 = v179;
  else
    v184 = v181;
  if (v142)
    v185 = v181;
  else
    v185 = v182;
  *(_QWORD *)(v17 - 152) = v184;
  LODWORD(STACK[0x69C0]) = v185;
  v186 = LODWORD(STACK[0x6890]) ^ v172;
  v187 = v172;
  LODWORD(STACK[0x6468]) = v172;
  v188 = STACK[0x6638];
  v189 = v186 ^ LODWORD(STACK[0x6638]);
  LODWORD(STACK[0x64A0]) = v139;
  v190 = v134 + v139;
  v191 = (v134 + v139) ^ LODWORD(STACK[0x65B8]);
  v192 = v190;
  LODWORD(STACK[0x6560]) = v190;
  v193 = LODWORD(STACK[0x65D0]) ^ v171;
  if (v142)
    v194 = v141;
  else
    v194 = LODWORD(STACK[0x65D0]) ^ v171;
  LODWORD(STACK[0x6880]) = v194;
  if (!v142)
    v193 = v189;
  LODWORD(STACK[0x6428]) = v193;
  if (v142)
    v195 = v191;
  else
    v195 = v141;
  LODWORD(STACK[0x6420]) = v195;
  if (v142)
    v196 = v189;
  else
    v196 = v191;
  LODWORD(STACK[0x65D0]) = v196;
  v197 = v138;
  v198 = LODWORD(STACK[0x6870]) ^ v138;
  v199 = v149;
  LODWORD(STACK[0x6490]) = v149;
  v200 = v169 | v139;
  if (v142)
    v201 = v149 ^ LODWORD(STACK[0x6580]);
  else
    v201 = v140;
  if (v142)
    v202 = v140;
  else
    v202 = LODWORD(STACK[0x65D8]) ^ v200;
  if (v142)
    v203 = v198;
  else
    v203 = v149 ^ LODWORD(STACK[0x6580]);
  if (v142)
    v204 = LODWORD(STACK[0x65D8]) ^ v200;
  else
    v204 = v198;
  v205 = STACK[0x68A0];
  v206 = v165 ^ v138 ^ LODWORD(STACK[0x68A0]);
  v207 = STACK[0x6648];
  LODWORD(STACK[0x6590]) = v174;
  v208 = v205 ^ v207 ^ v174;
  v209 = LODWORD(STACK[0x62C8]) + LODWORD(STACK[0x62F8]);
  v210 = LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6148]) ^ (v188 + v187);
  v211 = v188 + v187;
  LODWORD(STACK[0x6488]) = v211;
  v212 = LODWORD(STACK[0x6930]) ^ v209 ^ v149;
  v213 = v137 ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6980]);
  v214 = LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x66A8]) ^ v197;
  if (v142)
    v215 = v212;
  else
    v215 = LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x66A8]) ^ v197;
  if (v142)
  {
    v216 = v210;
  }
  else
  {
    v214 = v210;
    v216 = v137 ^ LODWORD(STACK[0x66F0]) ^ LODWORD(STACK[0x6980]);
  }
  if (!v142)
    v213 = v212;
  v217 = LODWORD(STACK[0x6700]) ^ v121;
  LODWORD(STACK[0x6480]) = v217;
  v218 = LODWORD(STACK[0x6960]) ^ v199;
  if (v142)
    v219 = LODWORD(STACK[0x6990]) ^ v217 ^ v153;
  else
    v219 = LODWORD(STACK[0x6910]) ^ v192;
  if (v142)
    v220 = LODWORD(STACK[0x6910]) ^ v192;
  else
    v220 = LODWORD(STACK[0x6960]) ^ v199;
  if (v142)
  {
    v221 = LODWORD(STACK[0x6920]) ^ v174;
  }
  else
  {
    v218 = LODWORD(STACK[0x6920]) ^ v174;
    v221 = LODWORD(STACK[0x6990]) ^ v217 ^ v153;
  }
  v222 = LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x62B8]);
  LODWORD(STACK[0x6048]) = v209;
  v223 = LODWORD(STACK[0x6900]) ^ v209 ^ v211;
  v224 = v200;
  LODWORD(STACK[0x6540]) = v200;
  v225 = LODWORD(STACK[0x68D0]) ^ v200;
  LODWORD(STACK[0x6478]) = v197;
  v226 = LODWORD(STACK[0x68C0]) ^ v197;
  v227 = v222 ^ v174;
  if (v142)
    v228 = LODWORD(STACK[0x68C0]) ^ v197;
  else
    v228 = v227;
  if (v142)
    v226 = v225;
  else
    v227 = v223;
  if (v142)
    v229 = v223;
  else
    v229 = v225;
  v230 = LODWORD(STACK[0x66B8]) + v147;
  LODWORD(STACK[0x6040]) = v230;
  v231 = LODWORD(STACK[0x6AB0]) ^ v230 ^ v224;
  if (v142)
    v232 = STACK[0x6450];
  else
    v232 = STACK[0x6A00];
  if (v142)
    v233 = v197 ^ LODWORD(STACK[0x68E0]);
  else
    v233 = STACK[0x6450];
  if (v142)
    v234 = LODWORD(STACK[0x6AB0]) ^ v230 ^ v224;
  else
    v234 = v197 ^ LODWORD(STACK[0x68E0]);
  if (v142)
  {
    v231 = STACK[0x6A00];
    v235 = v206;
  }
  else
  {
    v235 = STACK[0x6430];
  }
  v236 = STACK[0x6608];
  if (v142)
    v237 = STACK[0x6430];
  else
    v237 = STACK[0x6608];
  if (v142)
  {
    v238 = v208;
  }
  else
  {
    v236 = v208;
    v238 = v206;
  }
  v239 = (STACK[0x6570] & 2) == 0;
  v240 = STACK[0x6578];
  v241 = STACK[0x6550];
  if ((STACK[0x6570] & 2) != 0)
    v242 = STACK[0x6550];
  else
    v242 = STACK[0x6578];
  LODWORD(STACK[0x69A0]) = v242;
  if (v239)
    v243 = v241;
  else
    v243 = v240;
  LODWORD(STACK[0x6930]) = v243;
  v244 = STACK[0x6568];
  v246 = STACK[0x6558];
  if (v239)
    v247 = STACK[0x6558];
  else
    v247 = STACK[0x6568];
  LODWORD(STACK[0x6A00]) = v247;
  v248 = *(_QWORD *)(v17 - 152);
  if (v239)
    v249 = v244;
  else
    v249 = v246;
  LODWORD(STACK[0x69E0]) = v249;
  v250 = STACK[0x69D0];
  if (v239)
    v251 = v248;
  else
    v251 = STACK[0x69D0];
  LODWORD(STACK[0x68F0]) = v251;
  if (v239)
    LODWORD(v248) = v250;
  LODWORD(STACK[0x6608]) = v248;
  v252 = STACK[0x69C0];
  v253 = STACK[0x69B0];
  if (v239)
    v254 = STACK[0x69B0];
  else
    v254 = STACK[0x69C0];
  LODWORD(STACK[0x6AB0]) = v254;
  if (v239)
    v255 = v252;
  else
    v255 = v253;
  LODWORD(STACK[0x6950]) = v255;
  if (v239)
    v256 = v219;
  else
    v256 = v218;
  LODWORD(STACK[0x6980]) = v256;
  if (!v239)
    v218 = v219;
  LODWORD(STACK[0x6960]) = v218;
  v257 = STACK[0x6448];
  v258 = STACK[0x6440];
  if (v239)
    v259 = STACK[0x6440];
  else
    v259 = STACK[0x6448];
  LODWORD(STACK[0x61D0]) = v259;
  if (v239)
    v260 = v257;
  else
    v260 = v258;
  LODWORD(STACK[0x69B0]) = v260;
  v261 = STACK[0x6548];
  v262 = STACK[0x6438];
  if (v239)
    v263 = STACK[0x6438];
  else
    v263 = STACK[0x6548];
  LODWORD(STACK[0x61B0]) = v263;
  if (v239)
    v264 = v261;
  else
    v264 = v262;
  LODWORD(STACK[0x68C0]) = v264;
  v265 = STACK[0x65F8];
  v266 = STACK[0x65C0];
  if (v239)
    v267 = STACK[0x65C0];
  else
    v267 = STACK[0x65F8];
  LODWORD(STACK[0x6130]) = v267;
  if (v239)
    v268 = v265;
  else
    v268 = v266;
  LODWORD(STACK[0x6910]) = v268;
  if (v239)
    v269 = v203;
  else
    v269 = v202;
  LODWORD(STACK[0x69D0]) = v269;
  if (v239)
    v270 = v202;
  else
    v270 = v203;
  LODWORD(STACK[0x65D8]) = v270;
  if (v239)
    v271 = v201;
  else
    v271 = v204;
  LODWORD(STACK[0x6900]) = v271;
  if (v239)
    v272 = v204;
  else
    v272 = v201;
  LODWORD(STACK[0x65C0]) = v272;
  if (v239)
    v273 = v216;
  else
    v273 = v215;
  LODWORD(STACK[0x6890]) = v273;
  if (v239)
    v274 = v215;
  else
    v274 = v216;
  LODWORD(STACK[0x6588]) = v274;
  if (v239)
    v275 = v232;
  else
    v275 = v234;
  LODWORD(STACK[0x6580]) = v275;
  if (v239)
    v276 = v234;
  else
    v276 = v232;
  LODWORD(STACK[0x6990]) = v276;
  v277 = STACK[0x6880];
  v278 = STACK[0x65D0];
  if (v239)
    v279 = STACK[0x6880];
  else
    v279 = STACK[0x65D0];
  LODWORD(STACK[0x65B8]) = v279;
  if (v239)
    v280 = v278;
  else
    v280 = v277;
  LODWORD(STACK[0x65D0]) = v280;
  v281 = STACK[0x6428];
  v282 = STACK[0x6420];
  if (v239)
    v283 = STACK[0x6428];
  else
    v283 = STACK[0x6420];
  LODWORD(STACK[0x69C0]) = v283;
  if (v239)
    v284 = v282;
  else
    v284 = v281;
  LODWORD(STACK[0x68A0]) = v284;
  if (v239)
    v285 = v213;
  else
    v285 = v214;
  LODWORD(STACK[0x6548]) = v285;
  if (v239)
    v286 = v214;
  else
    v286 = v213;
  LODWORD(STACK[0x61A8]) = v286;
  if (v239)
    v287 = v226;
  else
    v287 = v227;
  LODWORD(STACK[0x6570]) = v287;
  if (v239)
    v288 = v227;
  else
    v288 = v226;
  LODWORD(STACK[0x6870]) = v288;
  if (v239)
    v289 = v229;
  else
    v289 = v228;
  LODWORD(STACK[0x6180]) = v289;
  if (v239)
    v290 = v228;
  else
    v290 = v229;
  LODWORD(STACK[0x6940]) = v290;
  v291 = STACK[0x6460];
  v292 = STACK[0x6458];
  if (v239)
    v293 = STACK[0x6460];
  else
    v293 = STACK[0x6458];
  LODWORD(STACK[0x65F8]) = v293;
  if (v239)
    v294 = v292;
  else
    v294 = v291;
  LODWORD(STACK[0x61C8]) = v294;
  if (v239)
    v295 = v220;
  else
    v295 = v221;
  LODWORD(STACK[0x68D0]) = v295;
  if (v239)
    v296 = v221;
  else
    v296 = v220;
  LODWORD(STACK[0x68E0]) = v296;
  if (v239)
    v297 = v236;
  else
    v297 = v235;
  LODWORD(STACK[0x6568]) = v297;
  if (v239)
    v298 = v235;
  else
    v298 = v236;
  LODWORD(STACK[0x6550]) = v298;
  if (v239)
    v299 = v238;
  else
    v299 = v237;
  LODWORD(STACK[0x6880]) = v299;
  if (v239)
    v300 = v237;
  else
    v300 = v238;
  LODWORD(STACK[0x6558]) = v300;
  if (v239)
    v301 = v233;
  else
    v301 = v231;
  LODWORD(STACK[0x6578]) = v301;
  if (v239)
    v302 = v231;
  else
    v302 = v233;
  LODWORD(STACK[0x6920]) = v302;
  v303 = STACK[0x61C0];
  v304 = STACK[0x6A30];
  v305 = STACK[0x61DC];
  v306 = STACK[0x6A60];
  v307 = ((((STACK[0x61C0] & 0xCAADBCC8 ^ 0x6556DE64) & STACK[0x6A30]) >> LODWORD(STACK[0x6AA0]))
        + (((STACK[0x61C0] & 0xCAADBCC8 ^ 0x6556DE64) & STACK[0x6A70]) << LODWORD(STACK[0x6A80]))) ^ (((STACK[0x6A60] & (STACK[0x61DC] & 0x7CADBCC8 ^ 0xBE56DE64)) >> LODWORD(STACK[0x6AA0])) + ((STACK[0x6A70] & (STACK[0x61DC] & 0x7CADBCC8 ^ 0xBE56DE64)) << LODWORD(STACK[0x6A80]))) ^ LODWORD(STACK[0x6690]) ^ HIWORD(LODWORD(STACK[0x6618])) ^ (LODWORD(STACK[0x6618]) << 16) ^ LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6630]) ^ LODWORD(STACK[0x6628]);
  v308 = STACK[0x6640];
  v309 = STACK[0x5EF8];
  v310 = LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x5EF8]) ^ v307;
  v311 = v307;
  LODWORD(STACK[0x6460]) = v307;
  v312 = STACK[0x6970];
  v313 = v303;
  v314 = (((v303 & 0x4C38AF70 ^ 0xA61C57B8) & v306) >> LODWORD(STACK[0x6AA0]))
       + (((v303 & 0x4C38AF70 ^ 0xA61C57B8) & STACK[0x6A70]) << LODWORD(STACK[0x6A80]));
  v315 = ((v304 & (v305 & 0x3038AF70 ^ 0x981C57B8)) >> LODWORD(STACK[0x6AA0])) | ((STACK[0x6A70] & (v305 & 0x3038AF70 ^ 0x981C57B8)) << LODWORD(STACK[0x6A80]));
  LODWORD(v317) = (LODWORD(STACK[0x6970]) << 7) ^ __ROR4__(v310, 25) ^ 0x19E95ED3;
  HIDWORD(v317) = v317;
  v316 = v317 >> 7;
  v318 = LODWORD(STACK[0x6698]) ^ LODWORD(STACK[0x6970]) ^ v316;
  v319 = v309 ^ LODWORD(STACK[0x68B0]) ^ 0x5233D2BD;
  v320 = v318 ^ LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x6630]) = v320;
  v321 = v314 ^ v315 ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((unsigned __int16)(v319 ^ v320) >> 8)), 24) ^ __ROR4__(*(_DWORD *)(a3 + 4 * ((v319 ^ v320) >> 24)), 8);
  v322 = *(_DWORD *)(a3 + 4 * ((v319 ^ v320) >> 16));
  LODWORD(STACK[0x6618]) = v319 ^ v320;
  v323 = v321 ^ __ROR4__(v322, 16) ^ *(_DWORD *)(a3 + 4 * (v319 ^ v320)) ^ v311;
  LODWORD(STACK[0x6628]) = v316 ^ 0x5233D2BD;
  v324 = v323;
  LODWORD(STACK[0x6458]) = v323;
  v325 = (v316 ^ 0x5233D2BD) + (v323 ^ v312) - 2 * ((v316 ^ 0x5233D2BD) & (v323 ^ v312));
  v326 = v304;
  v327 = (((v313 & 0x60206F5E ^ LODWORD(STACK[0x1C20])) & v306) >> LODWORD(STACK[0x6AA0])) ^ (((v313 & 0x60206F5E ^ LODWORD(STACK[0x1C20])) & STACK[0x6A70]) << LODWORD(STACK[0x6A80])) ^ (((v304 & (v305 & 0xC2206F5E ^ 0x611037AF)) >> LODWORD(STACK[0x6AA0])) + ((STACK[0x6A70] & (v305 & 0xC2206F5E ^ 0x611037AF)) << LODWORD(STACK[0x6A80])));
  v328 = STACK[0x69F0];
  v329 = LODWORD(STACK[0x6720]) ^ v328 ^ v320 ^ v319 ^ v320 ^ 0xA0C1204F ^ v325 ^ v328;
  v330 = v325 ^ LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x6410]) = v330;
  v331 = v327 ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v329)), 24) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v329)), 16) ^ v324 ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v329)), 8) ^ *(_DWORD *)(a3 + 4 * v329);
  v332 = ((((v313 & 0xDCE8BE9C ^ 0x6E745F4E) & v306) >> LODWORD(STACK[0x6AA0])) | (((v313 & 0xDCE8BE9C ^ 0x6E745F4E) & STACK[0x6A70]) << LODWORD(STACK[0x6A80]))) ^ (((v304 & (v305 & 0x12E8BE9C ^ 0x9745F4E)) >> LODWORD(STACK[0x6AA0])) | ((STACK[0x6A70] & (v305 & 0x12E8BE9C ^ 0x9745F4E)) << LODWORD(STACK[0x6A80])));
  LODWORD(STACK[0x6620]) = v318 ^ 0x5233D2BD;
  v333 = v318 ^ 0x5233D2BD ^ v331 ^ v312 ^ v329 ^ v328;
  v334 = v318 ^ 0x5233D2BD ^ v331;
  LODWORD(STACK[0x6428]) = v334;
  v335 = v332 ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v333)), 16) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v333)), 24) ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v333)), 8) ^ *(_DWORD *)(a3 + 4 * (v318 ^ 0xBDu ^ v331 ^ (v312 ^ v329 ^ v328)));
  v336 = v335 ^ v325;
  v337 = STACK[0x5EC0];
  v338 = v336 ^ LODWORD(STACK[0x5EC0]) ^ v329 ^ v328;
  v339 = (*(_DWORD *)(a3 + 4 * BYTE1(v338)) << (*(_DWORD *)(a3 + 4 * BYTE1(v338)) & 8) << (*(_DWORD *)(a3 + 4 * BYTE1(v338)) & 8 ^ 8))
       + HIBYTE(*(_DWORD *)(a3 + 4 * BYTE1(v338)));
  v340 = ((v304 & (v305 & 0x3C9F2CD8 ^ 0x9E4F966C)) >> LODWORD(STACK[0x6AA0])) ^ ((STACK[0x6A70] & (v305 & 0x3C9F2CD8 ^ 0x9E4F966C)) << LODWORD(STACK[0x6A80])) ^ ((((v313 & 0x4C9F2CD8 ^ 0xA64F966C) & v306) >> LODWORD(STACK[0x6AA0])) + (((v313 & 0x4C9F2CD8 ^ 0xA64F966C) & STACK[0x6A70]) << LODWORD(STACK[0x6A80]))) ^ *(_DWORD *)(a3 + 4 * (v336 ^ LODWORD(STACK[0x5EC0]) ^ v329 ^ v328)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v338)), 8);
  LODWORD(STACK[0x6448]) = v331;
  v341 = v335 ^ v331;
  LODWORD(STACK[0x6438]) = v335 ^ v331;
  v342 = v340 ^ v335 ^ v331 ^ v339 ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v338)), 16);
  v343 = ((((v313 & 0x12836E40 ^ 0x941B720) & v306) >> LODWORD(STACK[0x6AA0])) | (((v313 & 0x12836E40 ^ 0x941B720) & STACK[0x6A70]) << LODWORD(STACK[0x6A80]))) ^ (((v304 & (v305 & 0x60836E40 ^ 0x3041B720)) >> LODWORD(STACK[0x6AA0])) | ((STACK[0x6A70] & (v305 & 0x60836E40 ^ 0x3041B720)) << LODWORD(STACK[0x6A80])));
  v344 = v331 ^ LODWORD(STACK[0x6A40]) ^ v330;
  LODWORD(STACK[0x6430]) = v344;
  v345 = v337;
  v346 = v344 ^ v337 ^ v341;
  LODWORD(STACK[0x6440]) = v346;
  v347 = v336 ^ v334;
  v348 = v346 ^ v312 ^ v342;
  v349 = v347 ^ v337 ^ v338 ^ v348;
  v350 = v343 ^ *(_DWORD *)(a3 + 4 * (v347 ^ v337 ^ v338 ^ v348)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v349)), 8) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v349)), 24) ^ v342 ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v349)), 16);
  v351 = v326;
  v352 = (((v313 & 0x3B38CA6A ^ 0x1D9C6535) & STACK[0x6A70]) << LODWORD(STACK[0x6A80])) ^ (((v313 & 0x3B38CA6A ^ 0x1D9C6535) & v306) >> LODWORD(STACK[0x6AA0])) ^ (((v326 & (v305 & 0x7938CA6A ^ 0xBC9C6535)) >> LODWORD(STACK[0x6AA0])) + ((STACK[0x6A70] & (v305 & 0x7938CA6A ^ 0xBC9C6535)) << LODWORD(STACK[0x6A80])));
  v353 = v348 ^ v328;
  v354 = v348 ^ v328 ^ v347;
  LODWORD(STACK[0x63A0]) = v347;
  LODWORD(STACK[0x6408]) = v354;
  v355 = v354 ^ LODWORD(STACK[0x6A40]) ^ v349;
  v356 = STACK[0x6A40];
  v357 = v350;
  LODWORD(STACK[0x63E8]) = v350;
  v358 = v350 ^ v356;
  v359 = v358 ^ v348 ^ v328;
  LODWORD(STACK[0x6420]) = v359;
  v360 = v355 ^ v359;
  v361 = v352 ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v360)), 8) ^ v357 ^ *(_DWORD *)(a3
                                                                                     + 4
                                                                                     * (v355 ^ v359)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v360)), 16) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v360)), 24);
  v362 = v305;
  v363 = (((v313 & 0x7372DB0 ^ 0x39B96D8) & v326 ^ v306 & (v305 & 0x75372DB0 ^ 0xBA9B96D8)) >> LODWORD(STACK[0x6AA0])) ^ (((v313 & 0x7372DB0 ^ 0x39B96D8 ^ v305 & 0x75372DB0 ^ 0xBA9B96D8) & STACK[0x6A70]) << LODWORD(STACK[0x6A80]));
  v364 = v358 ^ v347;
  v365 = v358 ^ v348 ^ v361;
  LODWORD(STACK[0x6400]) = v365;
  v366 = v361;
  LODWORD(STACK[0x63C8]) = v361;
  v367 = v365 ^ v328;
  v368 = v367 ^ v358 ^ v347;
  LODWORD(STACK[0x63E0]) = v368;
  v369 = v367;
  LODWORD(STACK[0x63A8]) = v367;
  v370 = v368 ^ v360;
  v371 = v368 ^ v360 ^ v345;
  LODWORD(STACK[0x6450]) = v371;
  v372 = v362;
  v373 = v351;
  v374 = ((v351 & (v362 & 0x7E5E0D0 ^ 0x83F2F068)) >> LODWORD(STACK[0x6AA0]))
       + ((STACK[0x6A70] & (v362 & 0x7E5E0D0 ^ 0x83F2F068)) << LODWORD(STACK[0x6A80]));
  v375 = v313;
  v376 = v306;
  v377 = (((v313 & 0x73E5E0D0 ^ 0x39F2F068) & STACK[0x6A70]) << LODWORD(STACK[0x6A80])) ^ (((v313 & 0x73E5E0D0 ^ 0x39F2F068) & v306) >> LODWORD(STACK[0x6AA0])) ^ v374;
  v378 = v363 ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v371)), 16) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v371)), 24) ^ *(_DWORD *)(a3 + 4 * v371) ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v371)), 8) ^ v366;
  LODWORD(STACK[0x6418]) = v378 ^ v364;
  v379 = v378 ^ v364 ^ v328;
  v380 = v379 ^ v370;
  v381 = v380 ^ v312;
  v382 = v377 ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE2(v381)), 16) ^ __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v381)), 8) ^ *(_DWORD *)(a3 + 4 * (v380 ^ v312)) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v381)), 24);
  v383 = v372 & 0xE036D50A ^ 0x701B6A85;
  v384 = (STACK[0x6A70] & v383) << LODWORD(STACK[0x6A80]);
  v385 = (v306 & v383) >> LODWORD(STACK[0x6AA0]);
  LODWORD(STACK[0x63D8]) = v382 ^ v369;
  v386 = v382 ^ v369 ^ v379;
  LODWORD(STACK[0x63C0]) = v386;
  v387 = v380 ^ LODWORD(STACK[0x6A40]) ^ v386;
  v388 = *(_DWORD *)(a3 + 4 * BYTE2(v387));
  v389 = *(_DWORD *)(a3 + 4 * (v380 ^ LOBYTE(STACK[0x6A40]) ^ v386));
  v390 = (((v375 & 0x3C36D50A ^ 0x1E1B6A85) & STACK[0x6A70]) << LODWORD(STACK[0x6A80])) ^ (((v375 & 0x3C36D50A ^ 0x1E1B6A85) & v373) >> LODWORD(STACK[0x6AA0])) ^ (v385 + v384) ^ __ROR4__(*(_DWORD *)(a3 + 4 * BYTE1(v387)), 24);
  LODWORD(v317) = __ROR4__(*(_DWORD *)(a3 + 4 * HIBYTE(v387)), 8);
  LODWORD(STACK[0x63B0]) = v382 ^ v378;
  LODWORD(STACK[0x63D0]) = v390 ^ v317 ^ v382 ^ v378 ^ __ROR4__(v388, 16) ^ v389;
  LODWORD(STACK[0x63B8]) = v308 ^ LODWORD(STACK[0x5D58]);
  v391 = LODWORD(STACK[0x5CE8]) + LODWORD(STACK[0x5ED8]);
  v392 = LODWORD(STACK[0x5DB8]) + 387389207 - (STACK[0x5D68] & 0xC0C0C0C);
  LODWORD(STACK[0x6640]) = ((v376 & v392) >> LODWORD(STACK[0x6AA0])) | ((STACK[0x6A70] & v392) << LODWORD(STACK[0x6A80]));
  v393 = LODWORD(STACK[0x5D90]) + LODWORD(STACK[0x62F0]);
  LODWORD(STACK[0x6470]) |= LODWORD(STACK[0x5ED0]);
  v394 = LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x6468]);
  v395 = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x6690]);
  v396 = LODWORD(STACK[0x6698]) ^ v391;
  LODWORD(STACK[0x6698]) = LODWORD(STACK[0x6280]) ^ LODWORD(STACK[0x6460]);
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x62C0]) ^ LODWORD(STACK[0x6300]) ^ LODWORD(STACK[0x68B0]);
  v397 = LODWORD(STACK[0x6600]) + LODWORD(STACK[0x6730]) - 2 * (STACK[0x6600] & LODWORD(STACK[0x6730]));
  v398 = STACK[0x6410];
  LODWORD(STACK[0x68B0]) = LODWORD(STACK[0x62E0]) ^ v312 ^ ((v397 & STACK[0x6A70]) << LODWORD(STACK[0x6A80])) ^ ((v397 & v376) >> LODWORD(STACK[0x6AA0])) ^ LODWORD(STACK[0x6410]);
  LODWORD(STACK[0x6398]) = (LODWORD(STACK[0x6160]) | LODWORD(STACK[0x6198])) ^ LODWORD(STACK[0x6458]);
  v399 = LODWORD(STACK[0x62E8]) ^ v329;
  LODWORD(STACK[0x6458]) = LODWORD(STACK[0x66D8]) ^ v312 ^ LODWORD(STACK[0x6428]);
  v400 = v312;
  v401 = LODWORD(STACK[0x62B0]) ^ v312 ^ LODWORD(STACK[0x6430]);
  LODWORD(STACK[0x6460]) = LODWORD(STACK[0x62D8]) ^ LODWORD(STACK[0x6760]) ^ v333;
  LODWORD(STACK[0x6468]) = LODWORD(STACK[0x5DB0]) ^ LODWORD(STACK[0x6438]);
  v402 = LODWORD(STACK[0x5EB8]) ^ LODWORD(STACK[0x5F00]) ^ v342;
  v403 = STACK[0x6478];
  LODWORD(STACK[0x6638]) = LODWORD(STACK[0x6478]) ^ LODWORD(STACK[0x60B0]) ^ LODWORD(STACK[0x6448]);
  LODWORD(STACK[0x6690]) = v402 ^ v403;
  v404 = LODWORD(STACK[0x5DA8]) ^ LODWORD(STACK[0x6440]);
  v405 = v393 ^ v338;
  v406 = LODWORD(STACK[0x62D0]) ^ LODWORD(STACK[0x6750]);
  v407 = v406 ^ v312 ^ v353;
  v408 = STACK[0x69F0];
  v409 = LODWORD(STACK[0x69F0]) ^ v312;
  v410 = v409 ^ LODWORD(STACK[0x5EA8]) ^ LODWORD(STACK[0x6408]);
  v411 = LODWORD(STACK[0x6480]) ^ LODWORD(STACK[0x63E8]);
  v412 = LODWORD(STACK[0x6480]) ^ v364;
  v413 = STACK[0x6488];
  LODWORD(STACK[0x6478]) = v396 ^ LODWORD(STACK[0x6488]);
  LODWORD(STACK[0x6480]) = v413 ^ v399;
  LODWORD(STACK[0x6488]) = v412 ^ v413;
  v414 = LODWORD(STACK[0x6288]) ^ v312 ^ LODWORD(STACK[0x6420]);
  v415 = v406 ^ v349;
  v416 = LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x5F18]);
  if (LODWORD(STACK[0x5DF0]) == 255)
    v416 = 0;
  v417 = STACK[0x6498] & LODWORD(STACK[0x64A0]);
  LODWORD(STACK[0x6498]) ^= LODWORD(STACK[0x66E8]) ^ v360 ^ ((v416 & STACK[0x6598]) << LODWORD(STACK[0x6A80]));
  v418 = LODWORD(STACK[0x5EB0]) | LODWORD(STACK[0x61BC]);
  v419 = STACK[0x6490];
  LODWORD(STACK[0x64A0]) = v401 ^ LODWORD(STACK[0x6490]);
  LODWORD(STACK[0x6600]) = v407 ^ v419;
  LODWORD(STACK[0x6038]) = v418;
  v420 = v419 ^ v418 ^ LODWORD(STACK[0x63A0]);
  LODWORD(STACK[0x6440]) = LODWORD(STACK[0x5EA0]) ^ LODWORD(STACK[0x62F8]) ^ LODWORD(STACK[0x63C8]);
  v421 = LODWORD(STACK[0x62B8]) ^ v400 ^ LODWORD(STACK[0x63E0]);
  LODWORD(STACK[0x6598]) = LODWORD(STACK[0x66F0]) ^ v400 ^ LODWORD(STACK[0x6400]);
  v422 = LODWORD(STACK[0x6148]) ^ v400 ^ LODWORD(STACK[0x63A8]) ^ v378;
  v423 = LODWORD(STACK[0x65F0]) ^ v378;
  v424 = v394 ^ v395;
  LODWORD(STACK[0x6490]) = v394 ^ v411;
  LODWORD(STACK[0x65F0]) = v394 ^ LODWORD(STACK[0x5D78]) ^ v400 ^ LODWORD(STACK[0x63C0]);
  v425 = v400 ^ (LODWORD(STACK[0x6140]) | LODWORD(STACK[0x6740]));
  v426 = LODWORD(STACK[0x5EE0]) + LODWORD(STACK[0x5F10]);
  v427 = STACK[0x6538];
  v428 = LODWORD(STACK[0x6538]) ^ LODWORD(STACK[0x66A0]) ^ LODWORD(STACK[0x6628]);
  LODWORD(STACK[0x6030]) = v426;
  v429 = v427 ^ v426 ^ LODWORD(STACK[0x6618]);
  v430 = v427 ^ LODWORD(STACK[0x6398]);
  LODWORD(STACK[0x6970]) = v421 ^ v427;
  LODWORD(STACK[0x6628]) = v427 ^ LODWORD(STACK[0x60F0]) ^ LODWORD(STACK[0x63B0]);
  v431 = STACK[0x6560];
  LODWORD(STACK[0x6538]) = LODWORD(STACK[0x6560]) ^ v404;
  LODWORD(STACK[0x6448]) = v431 ^ v405;
  LODWORD(STACK[0x6438]) = v422 ^ v431;
  v432 = LODWORD(STACK[0x6190]) | LODWORD(STACK[0x6188]);
  LODWORD(STACK[0x6618]) = v431 ^ v432 ^ v381;
  v433 = v431 ^ LODWORD(STACK[0x65A8]);
  v434 = LODWORD(STACK[0x63B8]) ^ LODWORD(STACK[0x65A0]);
  v435 = LODWORD(STACK[0x65A0]) - 2 * v417;
  v436 = LODWORD(STACK[0x6458]) ^ LODWORD(STACK[0x65A0]);
  v437 = v415 ^ LODWORD(STACK[0x65A0]);
  v438 = LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x6540]);
  v439 = v414 ^ LODWORD(STACK[0x6540]);
  v440 = LODWORD(STACK[0x6470]) ^ v408 ^ LODWORD(STACK[0x6540]);
  LODWORD(STACK[0x65E8]) = LODWORD(STACK[0x65E0]) ^ LODWORD(STACK[0x65A0]) ^ v387;
  v441 = v440 ^ v387;
  v442 = LODWORD(STACK[0x66C8]) ^ LODWORD(STACK[0x6A40]) ^ LODWORD(STACK[0x6418]);
  v443 = STACK[0x63D0];
  v444 = LODWORD(STACK[0x63D0]) ^ LODWORD(STACK[0x6418]);
  v445 = STACK[0x65C8];
  v446 = LODWORD(STACK[0x6460]) ^ LODWORD(STACK[0x65C8]);
  v447 = v410 ^ LODWORD(STACK[0x65C8]);
  LODWORD(STACK[0x65E0]) = LODWORD(STACK[0x6440]) ^ LODWORD(STACK[0x65C8]);
  LODWORD(STACK[0x65A8]) = v441 ^ v444;
  v448 = STACK[0x6648];
  LODWORD(STACK[0x65C8]) = v445 ^ LODWORD(STACK[0x6648]) ^ v444;
  v449 = LODWORD(STACK[0x6128]) ^ LODWORD(STACK[0x6610]) ^ LODWORD(STACK[0x6630]);
  v450 = STACK[0x6590];
  v451 = LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x6468]);
  LODWORD(STACK[0x6028]) = v432;
  LODWORD(STACK[0x6630]) = v450 ^ v432 ^ LODWORD(STACK[0x6450]);
  v452 = v449 ^ 0x2D9F47FB ^ v450;
  v453 = LODWORD(STACK[0x65B0]) ^ LODWORD(STACK[0x6698]);
  v454 = LODWORD(STACK[0x65B0]) ^ v423;
  v455 = LODWORD(STACK[0x65B0]) ^ v442;
  v456 = v409 ^ v448 ^ LODWORD(STACK[0x65B0]);
  v457 = LODWORD(STACK[0x63D8]) ^ LODWORD(STACK[0x6A40]);
  LODWORD(STACK[0x6610]) = v450 ^ v425 ^ v457;
  v458 = v433 ^ v443;
  v459 = v456 ^ v457 ^ v443;
  v460 = v420;
  v461 = -432178877 - v429 + v420 - v437;
  LODWORD(STACK[0x6178]) = v461;
  v462 = STACK[0x6478];
  if ((v461 & 1) != 0)
    v463 = STACK[0x6478];
  else
    v463 = v434;
  LODWORD(STACK[0x65A0]) = v463;
  if ((v461 & 1) == 0)
    v434 = v424;
  LODWORD(STACK[0x6648]) = v434;
  if ((v461 & 1) != 0)
    v464 = v424;
  else
    v464 = v438;
  LODWORD(STACK[0x6470]) = v464;
  if ((v461 & 1) != 0)
    v465 = v438;
  else
    v465 = v462;
  if ((v461 & 1) != 0)
    v466 = v429;
  else
    v466 = v452;
  *(_QWORD *)(v17 - 152) = v465;
  LODWORD(STACK[0x6458]) = v466;
  if ((v461 & 1) != 0)
    v467 = v452;
  else
    v467 = v428;
  LODWORD(STACK[0x6540]) = v467;
  if ((v461 & 1) != 0)
    v468 = v453;
  else
    v468 = v429;
  LODWORD(STACK[0x65B0]) = v468;
  if ((v461 & 1) == 0)
    v428 = v453;
  v469 = LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6640]) ^ v398 ^ v435;
  if ((v461 & 1) != 0)
    v470 = v430;
  else
    v470 = STACK[0x6480];
  if ((v461 & 1) != 0)
    v471 = STACK[0x68B0];
  else
    v471 = v430;
  if ((v461 & 1) != 0)
    v472 = STACK[0x6480];
  else
    v472 = v469;
  if ((v461 & 1) == 0)
    v469 = STACK[0x68B0];
  v473 = STACK[0x6488];
  v474 = STACK[0x6498];
  if ((v461 & 1) != 0)
    v475 = STACK[0x6498];
  else
    v475 = STACK[0x6488];
  LODWORD(STACK[0x68B0]) = v475;
  if ((v461 & 1) == 0)
    v473 = v439;
  LODWORD(STACK[0x6698]) = v473;
  v476 = STACK[0x6490];
  if ((v461 & 1) != 0)
    v474 = STACK[0x6490];
  LODWORD(STACK[0x6640]) = v474;
  if ((v461 & 1) != 0)
    v476 = v439;
  LODWORD(STACK[0x6590]) = v476;
  if ((v461 & 1) != 0)
    v477 = v446;
  else
    v477 = v436;
  v478 = STACK[0x64A0];
  if ((v461 & 1) != 0)
  {
    v479 = STACK[0x6638];
  }
  else
  {
    v436 = STACK[0x64A0];
    v479 = v446;
  }
  if ((v461 & 1) == 0)
    v478 = STACK[0x6638];
  v480 = v460;
  if ((v461 & 1) != 0)
  {
    v481 = STACK[0x6448];
  }
  else
  {
    v460 = STACK[0x6538];
    v481 = v480;
  }
  if ((v461 & 1) != 0)
    v482 = v451;
  else
    v482 = STACK[0x6448];
  if ((v461 & 1) != 0)
    v483 = STACK[0x6538];
  else
    v483 = v451;
  if ((v461 & 1) != 0)
    v484 = v437;
  else
    v484 = v447;
  if ((v461 & 1) != 0)
    v485 = v447;
  else
    v485 = STACK[0x6600];
  if ((v461 & 1) != 0)
    v486 = STACK[0x6600];
  else
    v486 = STACK[0x6690];
  if ((v461 & 1) != 0)
    v437 = STACK[0x6690];
  v487 = STACK[0x65A8];
  if ((v461 & 1) != 0)
    v488 = v458;
  else
    v488 = STACK[0x65A8];
  LODWORD(STACK[0x6620]) = v488;
  v489 = STACK[0x65C8];
  if ((v461 & 1) != 0)
    v490 = v487;
  else
    v490 = STACK[0x65C8];
  LODWORD(STACK[0x6468]) = v490;
  if ((v461 & 1) == 0)
    v489 = v459;
  LODWORD(STACK[0x6560]) = v489;
  if ((v461 & 1) != 0)
    v491 = v459;
  else
    v491 = v458;
  if ((v461 & 1) != 0)
    v492 = v454;
  else
    v492 = STACK[0x6618];
  if ((v461 & 1) != 0)
    v493 = STACK[0x6618];
  else
    v493 = v455;
  LODWORD(STACK[0x6478]) = v493;
  v494 = STACK[0x6438];
  if ((v461 & 1) != 0)
    v495 = v455;
  else
    v495 = STACK[0x6438];
  if ((v461 & 1) == 0)
    v494 = v454;
  LODWORD(STACK[0x6448]) = v494;
  v496 = STACK[0x6970];
  v497 = STACK[0x6630];
  if ((v461 & 1) != 0)
    v498 = STACK[0x6630];
  else
    v498 = STACK[0x6970];
  v499 = STACK[0x65E0];
  if ((v461 & 1) != 0)
    v497 = STACK[0x65E0];
  else
    v496 = LODWORD(STACK[0x6138]) ^ LODWORD(STACK[0x6598]);
  if ((v461 & 1) != 0)
    v499 = LODWORD(STACK[0x6138]) ^ LODWORD(STACK[0x6598]);
  v500 = STACK[0x6628];
  v501 = STACK[0x65E8];
  if ((v461 & 1) != 0)
    v502 = STACK[0x6628];
  else
    v502 = STACK[0x65E8];
  LODWORD(STACK[0x6480]) = v502;
  v503 = STACK[0x6610];
  if ((v461 & 1) != 0)
    v500 = STACK[0x6610];
  LODWORD(STACK[0x6460]) = v500;
  v504 = STACK[0x65F0];
  if ((v461 & 1) != 0)
    v503 = STACK[0x65F0];
  LODWORD(STACK[0x63E8]) = v503;
  if ((v461 & 1) != 0)
    v504 = v501;
  v505 = (v461 & 2) == 0;
  v506 = STACK[0x65A0];
  v507 = STACK[0x6470];
  if (v505)
    v508 = STACK[0x65A0];
  else
    v508 = STACK[0x6470];
  LODWORD(STACK[0x65E8]) = v508;
  v509 = *(_QWORD *)(v17 - 152);
  if (v505)
    v510 = v507;
  else
    v510 = v506;
  LODWORD(STACK[0x6630]) = v510;
  v511 = STACK[0x6648];
  if (v505)
    v512 = STACK[0x6648];
  else
    v512 = v509;
  LODWORD(STACK[0x6600]) = v512;
  if (!v505)
    LODWORD(v509) = v511;
  LODWORD(STACK[0x65E0]) = v509;
  v513 = STACK[0x6458];
  if (v505)
    v514 = v428;
  else
    v514 = STACK[0x6458];
  LODWORD(STACK[0x65C8]) = v514;
  if (v505)
    v428 = v513;
  LODWORD(STACK[0x6638]) = v428;
  v515 = STACK[0x65B0];
  v516 = STACK[0x6540];
  if (v505)
    v517 = STACK[0x6540];
  else
    v517 = STACK[0x65B0];
  LODWORD(STACK[0x6408]) = v517;
  if (v505)
    v516 = v515;
  LODWORD(STACK[0x6628]) = v516;
  if (v505)
    v518 = v472;
  else
    v518 = v471;
  LODWORD(STACK[0x6690]) = v518;
  if (v505)
    v519 = v471;
  else
    v519 = v472;
  LODWORD(STACK[0x6400]) = v519;
  if (v505)
    v520 = v470;
  else
    v520 = v469;
  LODWORD(STACK[0x6618]) = v520;
  if (v505)
    v521 = v469;
  else
    v521 = v470;
  LODWORD(STACK[0x6648]) = v521;
  if (v505)
    v522 = v478;
  else
    v522 = v477;
  LODWORD(STACK[0x6418]) = v522;
  if (v505)
    v478 = v477;
  LODWORD(STACK[0x65B0]) = v478;
  if (v505)
    v523 = v436;
  else
    v523 = v479;
  LODWORD(STACK[0x6610]) = v523;
  if (v505)
    v524 = v479;
  else
    v524 = v436;
  if (v505)
    v525 = v481;
  else
    v525 = v483;
  LODWORD(STACK[0x6410]) = v525;
  if (v505)
    v526 = v483;
  else
    v526 = v481;
  LODWORD(STACK[0x65A0]) = v526;
  if (v505)
    v527 = v460;
  else
    v527 = v482;
  LODWORD(STACK[0x65A8]) = v527;
  if (v505)
    v528 = v482;
  else
    v528 = v460;
  LODWORD(STACK[0x65F0]) = v528;
  if (v505)
    v529 = v486;
  else
    v529 = v484;
  LODWORD(STACK[0x6438]) = v529;
  if (v505)
    v530 = v484;
  else
    v530 = v486;
  LODWORD(STACK[0x6598]) = v530;
  v531 = STACK[0x68B0];
  v532 = STACK[0x6590];
  if (v505)
    v533 = STACK[0x68B0];
  else
    v533 = STACK[0x6590];
  LODWORD(STACK[0x6450]) = v533;
  if (v505)
    v534 = v532;
  else
    v534 = v531;
  LODWORD(STACK[0x68B0]) = v534;
  v535 = STACK[0x6698];
  v536 = STACK[0x6640];
  if (v505)
    v537 = STACK[0x6640];
  else
    v537 = STACK[0x6698];
  LODWORD(STACK[0x6458]) = v537;
  if (v505)
    v538 = v535;
  else
    v538 = v536;
  LODWORD(STACK[0x6440]) = v538;
  if (v505)
    v539 = v495;
  else
    v539 = v492;
  LODWORD(STACK[0x6490]) = v539;
  if (v505)
    v540 = v492;
  else
    v540 = v495;
  LODWORD(STACK[0x6488]) = v540;
  if (v505)
    v541 = v437;
  else
    v541 = v485;
  LODWORD(STACK[0x6640]) = v541;
  if (v505)
    v542 = v485;
  else
    v542 = v437;
  LODWORD(STACK[0x6590]) = v542;
  if (v505)
    v543 = v497;
  else
    v543 = v496;
  LODWORD(STACK[0x6470]) = v543;
  if (v505)
    v544 = v496;
  else
    v544 = v497;
  LODWORD(STACK[0x64A0]) = v544;
  if (v505)
    v545 = v499;
  else
    v545 = v498;
  LODWORD(STACK[0x6498]) = v545;
  if (v505)
    v546 = v498;
  else
    v546 = v499;
  LODWORD(STACK[0x6538]) = v546;
  v547 = STACK[0x6468];
  if (v505)
    v548 = v491;
  else
    v548 = STACK[0x6468];
  LODWORD(STACK[0x6430]) = v548;
  if (v505)
    v549 = v547;
  else
    v549 = v491;
  LODWORD(STACK[0x6468]) = v549;
  v550 = STACK[0x6478];
  v551 = STACK[0x6448];
  if (v505)
    v552 = STACK[0x6478];
  else
    v552 = STACK[0x6448];
  LODWORD(STACK[0x6970]) = v552;
  if (v505)
    v553 = v551;
  else
    v553 = v550;
  LODWORD(STACK[0x6478]) = v553;
  v554 = STACK[0x6620];
  v555 = STACK[0x6560];
  if (v505)
    v556 = STACK[0x6560];
  else
    v556 = STACK[0x6620];
  LODWORD(STACK[0x6420]) = v556;
  if (v505)
    v557 = v554;
  else
    v557 = v555;
  LODWORD(STACK[0x6428]) = v557;
  v558 = STACK[0x6460];
  if (v505)
    v559 = v504;
  else
    v559 = STACK[0x6460];
  LODWORD(STACK[0x6448]) = v559;
  if (v505)
    v560 = v558;
  else
    v560 = v504;
  LODWORD(STACK[0x6460]) = v560;
  v561 = STACK[0x6480];
  v562 = STACK[0x63E8];
  if (v505)
    v563 = STACK[0x6480];
  else
    v563 = STACK[0x63E8];
  LODWORD(STACK[0x6620]) = v563;
  if (v505)
    v561 = v562;
  LODWORD(STACK[0x6480]) = v561;
  v564 = STACK[0x65D0];
  v565 = LODWORD(STACK[0x65D0]) ^ LODWORD(STACK[0x68A0]);
  LODWORD(STACK[0x6560]) = v565;
  v566 = STACK[0x6608];
  v567 = STACK[0x68F0];
  v568 = STACK[0x68C0];
  v569 = STACK[0x61B0];
  v570 = STACK[0x6930];
  v571 = STACK[0x6130];
  v572 = STACK[0x6910];
  v573 = STACK[0x65F8];
  v574 = STACK[0x65C0];
  v575 = v565 ^ LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x6608]) ^ LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x69B0]) ^ LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x6130]) ^ LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x65D8]) ^ LODWORD(STACK[0x65C0]);
  v576 = STACK[0x65B8];
  v577 = LODWORD(STACK[0x69C0]) ^ LODWORD(STACK[0x65B8]) ^ LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x68E0]);
  LODWORD(STACK[0x63E0]) = v577;
  v578 = v575 ^ v577 ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x6980]) ^ LODWORD(STACK[0x6890]);
  v579 = STACK[0x6588];
  v580 = STACK[0x6548];
  v581 = LODWORD(STACK[0x61A8]) ^ LODWORD(STACK[0x6180]);
  LODWORD(STACK[0x63E8]) = v581;
  v582 = v581 ^ LODWORD(STACK[0x6570]);
  LODWORD(STACK[0x63D8]) = v582;
  v583 = STACK[0x6580];
  v584 = STACK[0x6550];
  v585 = STACK[0x6558];
  v586 = STACK[0x6568];
  v587 = v582 ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x6940]) ^ LODWORD(STACK[0x6580]) ^ LODWORD(STACK[0x6578]) ^ LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x6990]) ^ v578 ^ v580 ^ v579 ^ LODWORD(STACK[0x6550]) ^ LODWORD(STACK[0x6880]) ^ LODWORD(STACK[0x6558]) ^ LODWORD(STACK[0x6568]);
  LODWORD(STACK[0x6088]) = v587;
  v588 = v524;
  LODWORD(STACK[0x6540]) = v524;
  v589 = STACK[0x6178];
  v590 = LODWORD(STACK[0x6178]) + v588 + (v583 ^ 0xF06FF7F3);
  v591 = STACK[0x6400];
  v592 = v573;
  v593 = ((((((v557 ^ (v590 - LODWORD(STACK[0x6400]))) + v568) ^ v573) - v528) ^ v563) + v556) ^ v586;
  v594 = v586;
  v595 = STACK[0x6730];
  v596 = STACK[0x6408];
  v587 ^= 0xFFF64810;
  LODWORD(STACK[0x6698]) = v587;
  v597 = v585;
  v598 = v567 + v585 - v564 - v566;
  v599 = v589;
  v600 = STACK[0x6538];
  v601 = v598 + v584 + v589 - LODWORD(STACK[0x6538]);
  v602 = STACK[0x64A0];
  LODWORD(STACK[0x63D0]) = v601
                         + LODWORD(STACK[0x64A0])
                         + LODWORD(STACK[0x6970])
                         + LODWORD(STACK[0x6430])
                         + ((((v579 - v595 + v571 - v572 + v525 + v593) ^ v596) + v576 + v587) ^ v574);
  v603 = v595 ^ 0xFFF64810 ^ v580 ^ v576 ^ v566 ^ v568 ^ LODWORD(STACK[0x69B0]) ^ v569 ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x69A0]) ^ v570 ^ LODWORD(STACK[0x6A00]) ^ v567 ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6AB0]) ^ v571;
  v604 = STACK[0x69D0];
  v605 = STACK[0x65D8];
  v606 = STACK[0x69C0];
  v607 = v603 ^ v572 ^ LODWORD(STACK[0x61C8]) ^ v592 ^ LODWORD(STACK[0x69D0]) ^ LODWORD(STACK[0x6900]) ^ LODWORD(STACK[0x65D8]) ^ v574 ^ LODWORD(STACK[0x69C0]);
  v608 = LODWORD(STACK[0x6560]) ^ LODWORD(STACK[0x68D0]) ^ LODWORD(STACK[0x6960]) ^ LODWORD(STACK[0x68E0]) ^ LODWORD(STACK[0x6980]);
  v609 = STACK[0x6890];
  v610 = LODWORD(STACK[0x63D8]) ^ LODWORD(STACK[0x6940]);
  LODWORD(STACK[0x63C0]) = v610;
  v611 = STACK[0x6578];
  v612 = v610 ^ LODWORD(STACK[0x6870]) ^ LODWORD(STACK[0x6578]) ^ LODWORD(STACK[0x6580]) ^ LODWORD(STACK[0x6920]) ^ LODWORD(STACK[0x6990]) ^ v608 ^ v609 ^ v579 ^ v607;
  v613 = STACK[0x6880];
  v614 = LODWORD(STACK[0x6880]) ^ v584 ^ v597 ^ v594 ^ v599 ^ LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x6648]) ^ LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x6600]);
  v615 = STACK[0x65E8];
  v616 = v612 ^ v614 ^ LODWORD(STACK[0x65E8]);
  v617 = STACK[0x6630];
  v618 = STACK[0x65E0];
  v619 = STACK[0x65C8];
  v620 = STACK[0x6628];
  v621 = STACK[0x6618];
  v622 = STACK[0x6418];
  v623 = STACK[0x65B0];
  v624 = STACK[0x65A0];
  v625 = v616 ^ LODWORD(STACK[0x65E0]) ^ LODWORD(STACK[0x6630]) ^ LODWORD(STACK[0x65C8]) ^ v596 ^ LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x6628]) ^ v591 ^ LODWORD(STACK[0x6618]) ^ LODWORD(STACK[0x6418]) ^ LODWORD(STACK[0x6610]) ^ LODWORD(STACK[0x6540]) ^ LODWORD(STACK[0x65B0]) ^ LODWORD(STACK[0x65A0]);
  v626 = STACK[0x65A8];
  v627 = STACK[0x6438];
  v628 = STACK[0x6590];
  v629 = STACK[0x6598];
  v630 = STACK[0x6498];
  v631 = STACK[0x6470];
  v632 = v625 ^ LODWORD(STACK[0x65A8]) ^ LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x65F0]) ^ LODWORD(STACK[0x6438]) ^ LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x68B0]) ^ LODWORD(STACK[0x6440]) ^ LODWORD(STACK[0x6450]) ^ LODWORD(STACK[0x6458]) ^ LODWORD(STACK[0x6498]) ^ v602 ^ v600 ^ LODWORD(STACK[0x6470]);
  v633 = STACK[0x6490];
  v634 = STACK[0x6478];
  v635 = STACK[0x6488];
  v636 = STACK[0x6460];
  v637 = STACK[0x6480];
  LODWORD(STACK[0x63B8]) = v632 ^ LODWORD(STACK[0x6478]) ^ LODWORD(STACK[0x6490]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6488]) ^ LODWORD(STACK[0x6460]) ^ LODWORD(STACK[0x6480]) ^ LODWORD(STACK[0x6448]) ^ LODWORD(STACK[0x6620]) ^ LODWORD(STACK[0x6430]);
  v638 = LODWORD(STACK[0x63D0]) ^ v619;
  v639 = (v620 + v627 - v621 + v617 + v638) ^ LODWORD(STACK[0x6A00]);
  v640 = v630 + v624 + LODWORD(STACK[0x69B0]) - v605 - LODWORD(STACK[0x6468]) + v604;
  v641 = v609;
  v642 = v635 + LODWORD(STACK[0x69E0]);
  v643 = ((v640 + v639) ^ v609) - v642;
  v644 = v633 ^ v618 ^ v637;
  v645 = STACK[0x61B0];
  v646 = LODWORD(STACK[0x61A8]) + LODWORD(STACK[0x69A0]) - LODWORD(STACK[0x61B0]) - v606 + v629 - v623;
  v647 = STACK[0x61C8];
  v648 = STACK[0x6638];
  v649 = v626;
  v650 = LODWORD(STACK[0x6570]) - v611;
  v651 = v622;
  v652 = v634 - v613;
  v653 = STACK[0x6180];
  v654 = v631 - v615;
  v655 = STACK[0x61D0];
  v656 = LODWORD(STACK[0x61D0]) + LODWORD(STACK[0x6940]) + v628;
  v657 = ((((((((((((v644 ^ v643) + v646) ^ LODWORD(STACK[0x61C8])) + LODWORD(STACK[0x6638])) ^ v626) + v650) ^ v622)
            + v652) ^ LODWORD(STACK[0x6180]))
          + v654) ^ LODWORD(STACK[0x6960]))
        - v656) ^ LODWORD(STACK[0x6980]);
  v658 = STACK[0x68E0];
  v659 = LODWORD(STACK[0x68E0]) + LODWORD(STACK[0x6AB0]);
  v660 = LODWORD(STACK[0x6870]) - v659 + v657;
  if ((STACK[0x6870] & 0x40000) != 0)
    v661 = -262144;
  else
    v661 = 0x40000;
  v662 = v661 + LODWORD(STACK[0x6870]);
  if (LODWORD(STACK[0x6620]) >= 0xBFC486F9)
    v663 = LODWORD(STACK[0x6620]) + 1077639431;
  else
    v663 = STACK[0x6620];
  if (LODWORD(STACK[0x6620]) >= 0xBFC486F9)
    v664 = -1077639431;
  else
    v664 = 0;
  LODWORD(STACK[0x6870]) = v664;
  v142 = v663 == 0;
  v665 = STACK[0x6438];
  v666 = STACK[0x6A00];
  v667 = (v644 ^ (((v640
                  + ((LODWORD(STACK[0x6630])
                    + LODWORD(STACK[0x6628])
                    - LODWORD(STACK[0x6618])
                    + LODWORD(STACK[0x6438])
                    + v638) ^ LODWORD(STACK[0x6A00]))) ^ v641)
                - v642))
       + v646;
  v668 = v647;
  v669 = v651;
  v670 = (((((((v667 ^ v647) + v648) ^ v649) + v650) ^ v651) + v652) ^ v653) + v654;
  v671 = STACK[0x6960];
  v672 = v662 ^ 0x40000;
  v673 = STACK[0x6980];
  LODWORD(STACK[0x63B0]) = v662 ^ 0x40000;
  v674 = v636 ^ LODWORD(STACK[0x6648]);
  v675 = STACK[0x6A40];
  v676 = v674 ^ ((v662 ^ 0x40000) - v659 + (((v670 ^ v671) - v656) ^ v673));
  v677 = STACK[0x6440];
  v678 = STACK[0x6600];
  v679 = STACK[0x6930];
  v680 = LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x6600]) ^ LODWORD(STACK[0x6930]);
  v681 = v680 ^ ((((((v674 ^ v660) + LODWORD(STACK[0x6900])) ^ LODWORD(STACK[0x68B0])) + LODWORD(STACK[0x6690])) ^ LODWORD(STACK[0x6920]))
               + LODWORD(STACK[0x6440]));
  v682 = STACK[0x6900];
  v683 = STACK[0x6920];
  v684 = v680 ^ (((((v676 + LODWORD(STACK[0x6900])) ^ LODWORD(STACK[0x68B0])) + LODWORD(STACK[0x6690])) ^ LODWORD(STACK[0x6920]))
               + LODWORD(STACK[0x6440]));
  v685 = STACK[0x6990];
  v686 = STACK[0x68D0];
  v687 = STACK[0x6458];
  v688 = STACK[0x6448];
  v689 = LODWORD(STACK[0x6990])
       + LODWORD(STACK[0x68D0])
       - LODWORD(STACK[0x6178])
       - LODWORD(STACK[0x6458])
       + LODWORD(STACK[0x6448]);
  v690 = v684 + v689;
  v691 = STACK[0x6548];
  v692 = (v681 + v689) ^ LODWORD(STACK[0x6548]);
  v693 = STACK[0x6950];
  v694 = STACK[0x6450];
  v695 = STACK[0x6610];
  v696 = LODWORD(STACK[0x6950]) - LODWORD(STACK[0x68A0]) - LODWORD(STACK[0x6450]) - LODWORD(STACK[0x6610]);
  LODWORD(STACK[0x63D8]) = v692 + v696;
  LODWORD(STACK[0x63D0]) = (v690 ^ v691) + v696;
  v697 = v693 ^ LODWORD(STACK[0x6730]) ^ v645 ^ LODWORD(STACK[0x68C0]);
  v698 = STACK[0x69B0];
  v699 = STACK[0x69A0];
  v700 = v666 ^ v679;
  v701 = STACK[0x69E0];
  v702 = v697 ^ LODWORD(STACK[0x69B0]) ^ v655 ^ LODWORD(STACK[0x69A0]) ^ v700 ^ LODWORD(STACK[0x69E0]) ^ LODWORD(STACK[0x68F0]);
  v703 = STACK[0x6608];
  v704 = STACK[0x6130];
  v705 = v702 ^ LODWORD(STACK[0x6608]) ^ LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x6130]) ^ v668 ^ LODWORD(STACK[0x6910]);
  v706 = LODWORD(STACK[0x65F8]) ^ LODWORD(STACK[0x69D0]);
  LODWORD(STACK[0x63C8]) = v706;
  v707 = STACK[0x65D8];
  v708 = v706 ^ v682 ^ LODWORD(STACK[0x65D8]);
  v709 = STACK[0x65C0];
  v710 = LODWORD(STACK[0x6560]) ^ LODWORD(STACK[0x65B8]) ^ v686 ^ v671 ^ v658 ^ v673 ^ v705 ^ v708 ^ LODWORD(STACK[0x65C0]) ^ LODWORD(STACK[0x69C0]);
  v711 = STACK[0x6890];
  v712 = STACK[0x6588];
  v713 = STACK[0x6578];
  v714 = STACK[0x6580];
  v715 = STACK[0x6880];
  v716 = LODWORD(STACK[0x63C0]) ^ LODWORD(STACK[0x6578]) ^ LODWORD(STACK[0x6580]) ^ v683 ^ v685 ^ LODWORD(STACK[0x6880]) ^ v710 ^ LODWORD(STACK[0x6890]) ^ v691 ^ LODWORD(STACK[0x6588]) ^ LODWORD(STACK[0x6550]) ^ LODWORD(STACK[0x6558]) ^ LODWORD(STACK[0x6568]) ^ v672 ^ LODWORD(STACK[0x6178]) ^ LODWORD(STACK[0x6400]) ^ LODWORD(STACK[0x65E0]) ^ v678;
  v717 = STACK[0x6A80];
  v718 = LODWORD(STACK[0x6A70]);
  v719 = STACK[0x6AA0];
  v720 = v716 ^ LODWORD(STACK[0x65E8]) ^ LODWORD(STACK[0x6630]) ^ LODWORD(STACK[0x65C8]) ^ LODWORD(STACK[0x6408]) ^ LODWORD(STACK[0x6638]) ^ LODWORD(STACK[0x6628]) ^ LODWORD(STACK[0x6648]) ^ LODWORD(STACK[0x6690]) ^ LODWORD(STACK[0x6618]) ^ v669 ^ v695 ^ LODWORD(STACK[0x65B0]) ^ LODWORD(STACK[0x6540]) ^ LODWORD(STACK[0x65A0]) ^ LODWORD(STACK[0x65A8]) ^ LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x65F0]) ^ v665 ^ LODWORD(STACK[0x6590]) ^ LODWORD(STACK[0x6598]) ^ LODWORD(STACK[0x6640]) ^ LODWORD(STACK[0x68B0]) ^ v677 ^ v694 ^ v687 ^ LODWORD(STACK[0x6498]) ^ LODWORD(STACK[0x64A0]);
  v721 = STACK[0x6620];
  v722 = STACK[0x6870];
  if (!v142)
    v722 = STACK[0x6620];
  LODWORD(STACK[0x6870]) = v722;
  v723 = STACK[0x6430];
  v724 = v720 ^ LODWORD(STACK[0x6538]) ^ LODWORD(STACK[0x6470]) ^ LODWORD(STACK[0x6478]) ^ LODWORD(STACK[0x6490]) ^ LODWORD(STACK[0x6970]) ^ LODWORD(STACK[0x6488]) ^ LODWORD(STACK[0x6460]) ^ LODWORD(STACK[0x6480]) ^ v688 ^ v721 ^ LODWORD(STACK[0x6430]);
  v725 = LODWORD(STACK[0x6420]) ^ LODWORD(STACK[0x6468]) ^ LODWORD(STACK[0x6428]);
  LODWORD(STACK[0x6410]) = LODWORD(STACK[0x63B8]) ^ v725;
  LODWORD(STACK[0x6408]) = v724 ^ v725;
  v726 = v703;
  v727 = v698 ^ v701 ^ v703 ^ v704;
  v728 = STACK[0x6900];
  v729 = v707;
  v730 = v709;
  v731 = v711;
  v732 = v712;
  v733 = v711 ^ v712 ^ LODWORD(STACK[0x61A8]);
  v734 = STACK[0x6570];
  v735 = LODWORD(STACK[0x6A00]) + v675 - 2 * (STACK[0x6A00] & v675);
  v736 = STACK[0x6990];
  v737 = v714;
  LODWORD(STACK[0x6400]) = v727 ^ LODWORD(STACK[0x6900]) ^ v707 ^ v709 ^ LODWORD(STACK[0x63E0]) ^ v733 ^ LODWORD(STACK[0x6570]) ^ v713 ^ v714 ^ LODWORD(STACK[0x6990]);
  v738 = LODWORD(STACK[0x6A60]) >> v719;
  v739 = (_DWORD)v718 << v717;
  v740 = ((v715 & ((_DWORD)v718 << v717)) >> v717) | ((v715 & v738) << v719);
  *(_QWORD *)(v17 - 152) = v718;
  v741 = STACK[0x6A20];
  v742 = STACK[0x69F0];
  v743 = LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x69F0]);
  LODWORD(STACK[0x6020]) = v743;
  v744 = LODWORD(STACK[0x63E8]) ^ v743;
  v745 = LODWORD(STACK[0x68C0]) ^ v675;
  LODWORD(STACK[0x6630]) = v698 ^ v675;
  LODWORD(STACK[0x6628]) = v745;
  v746 = v744 ^ v745 ^ v698 ^ v675;
  v747 = LODWORD(STACK[0x61D0]) ^ v742;
  v748 = LODWORD(STACK[0x6930]) ^ v675;
  LODWORD(STACK[0x6620]) = v699 ^ v675;
  LODWORD(STACK[0x6018]) = v747;
  LODWORD(STACK[0x6618]) = v748;
  v749 = v746 ^ v747 ^ v699 ^ v675 ^ v748;
  v750 = LODWORD(STACK[0x69E0]) ^ v675;
  LODWORD(STACK[0x6080]) = v726 ^ v742;
  v751 = LODWORD(STACK[0x68F0]) ^ v675;
  v752 = LODWORD(STACK[0x6950]) ^ v742;
  LODWORD(STACK[0x6610]) = v750;
  LODWORD(STACK[0x6608]) = v751;
  LODWORD(STACK[0x6600]) = v752;
  v753 = v749 ^ v750 ^ v751 ^ v752 ^ v726 ^ v742;
  v754 = LODWORD(STACK[0x65F8]) ^ v675;
  LODWORD(STACK[0x6690]) = v754;
  v755 = LODWORD(STACK[0x61C8]) ^ v675;
  v756 = LODWORD(STACK[0x6AB0]) ^ v675;
  LODWORD(STACK[0x6008]) = v704 ^ v675;
  LODWORD(STACK[0x65F8]) = v756;
  LODWORD(STACK[0x6010]) = v755;
  v757 = v756 ^ v704 ^ v675 ^ v755;
  v758 = LODWORD(STACK[0x6910]) ^ v675;
  LODWORD(STACK[0x65F0]) = v758;
  v759 = v753 ^ v757 ^ v758 ^ v754;
  v760 = LODWORD(STACK[0x69D0]) ^ v742;
  v761 = LODWORD(STACK[0x69C0]) ^ v675;
  v762 = LODWORD(STACK[0x65D0]) ^ v675;
  LODWORD(STACK[0x65E8]) = v760;
  LODWORD(STACK[0x65C8]) = v728 ^ v742;
  LODWORD(STACK[0x65D8]) = v729 ^ v675;
  LODWORD(STACK[0x65C0]) = v730 ^ v742;
  LODWORD(STACK[0x65E0]) = v761;
  LODWORD(STACK[0x65D0]) = v762;
  v763 = v759 ^ v760 ^ v728 ^ v742 ^ v729 ^ v675 ^ v730 ^ v742 ^ v761 ^ v762;
  v764 = LODWORD(STACK[0x68A0]) ^ v742;
  v765 = LODWORD(STACK[0x68E0]) ^ v675;
  v766 = LODWORD(STACK[0x65B8]) ^ v675;
  v767 = v731 ^ v675;
  v768 = LODWORD(STACK[0x68D0]) ^ v675;
  LODWORD(STACK[0x65B8]) = v764;
  LODWORD(STACK[0x65A8]) = v766;
  LODWORD(STACK[0x65A0]) = v768;
  v769 = STACK[0x6960];
  LODWORD(STACK[0x6598]) = LODWORD(STACK[0x6960]) ^ v742;
  LODWORD(STACK[0x65B0]) = v765;
  v770 = STACK[0x6980];
  LODWORD(STACK[0x6590]) = LODWORD(STACK[0x6980]) ^ v742;
  LODWORD(STACK[0x69E0]) = v767;
  v771 = v763 ^ v764 ^ v766 ^ v768 ^ v769 ^ v742 ^ v765 ^ v770 ^ v742 ^ v767;
  v772 = v736 ^ v742;
  v773 = STACK[0x6548];
  LODWORD(STACK[0x69D0]) = v732 ^ v675;
  LODWORD(STACK[0x69B0]) = v773 ^ v675;
  LODWORD(STACK[0x69C0]) = v734 ^ v742;
  v774 = STACK[0x6940];
  v775 = LODWORD(STACK[0x6940]) ^ v742;
  LODWORD(STACK[0x6578]) = v713 ^ v675;
  LODWORD(STACK[0x6580]) = v737 ^ v742;
  v776 = STACK[0x6920];
  LODWORD(STACK[0x6570]) = LODWORD(STACK[0x6920]) ^ v742;
  LODWORD(STACK[0x6588]) = v772;
  v777 = STACK[0x63B0];
  LODWORD(STACK[0x6648]) = v735;
  LODWORD(STACK[0x6990]) = v777 ^ v675;
  v778 = v771 ^ v732 ^ v675 ^ v773 ^ v675 ^ v734 ^ v742 ^ v774 ^ v742 ^ v713 ^ v675 ^ v737 ^ v742 ^ v776 ^ v742 ^ v772 ^ v735 ^ v777 ^ v675;
  v779 = STACK[0x61C0];
  v780 = STACK[0x61C0] & (4 * ((v740 ^ (2 * (v740 & v741))) & v741)) ^ v740 ^ (2 * (v740 & v741));
  v781 = v723;
  v782 = (v723 & ((_DWORD)v718 << v717)) >> v717;
  v783 = STACK[0x6A30];
  v784 = v782 + ((v781 & (LODWORD(STACK[0x6A30]) >> v719)) << v719);
  v785 = STACK[0x6A50];
  v786 = v784 ^ (2 * (v784 & STACK[0x6A50]));
  v787 = 4 * (v741 & STACK[0x61C0]);
  v788 = v787 & (16 * (v780 & v741)) & STACK[0x61C0] ^ v780;
  v789 = STACK[0x61DC];
  v790 = STACK[0x61DC] & (4 * (v786 & STACK[0x6A50])) ^ v786;
  v791 = ((STACK[0x6550] & ((_DWORD)v718 << v717)) >> v717) ^ ((STACK[0x6550] & v738) << v719);
  v792 = v791 ^ (2 * (v791 & v741));
  v793 = 4 * (STACK[0x6A50] & LODWORD(STACK[0x61DC]));
  LODWORD(STACK[0x5FF8]) = v793 & (16 * (v790 & STACK[0x6A50])) & STACK[0x61DC] ^ v790;
  v794 = v779 & (4 * (v792 & v741)) ^ v792;
  v795 = ((STACK[0x6420] & ((_DWORD)v718 << v717)) >> v717) | ((STACK[0x6420] & (v783 >> v719)) << v719);
  v796 = v789 & (4 * ((v795 ^ (2 * (v795 & v785))) & v785)) ^ v795 ^ (2 * (v795 & v785));
  v797 = ((STACK[0x6558] & ((_DWORD)v718 << v717)) >> v717) ^ ((STACK[0x6558] & (v783 >> v719)) << v719);
  v798 = v789 & (4 * ((v797 ^ (2 * (v797 & v785))) & v785)) ^ v797 ^ (2 * (v797 & v785));
  v799 = v787 & (16 * (v794 & v741)) & v779 ^ v794;
  v800 = ((STACK[0x6468] & ((_DWORD)v718 << v717)) >> v717) ^ ((STACK[0x6468] & v738) << v719);
  v801 = v779 & (4 * ((v800 ^ (2 * (v800 & v741))) & v741)) ^ v800 ^ (2 * (v800 & v741));
  LODWORD(STACK[0x5FE8]) = v793 & (16 * (v796 & v785)) & v789 ^ v796;
  v802 = STACK[0x6568];
  LODWORD(STACK[0x6640]) = v738;
  v803 = *(_QWORD *)(v17 - 152);
  v804 = ((v802 & v739) >> v717) + ((v802 & v738) << v719);
  LODWORD(STACK[0x5FE0]) = v787 & (16 * (v801 & v741)) & v779 ^ v801;
  v805 = v779 & (4 * ((v804 ^ (2 * (v804 & v741))) & v741)) ^ v804 ^ (2 * (v804 & v741));
  v806 = v787 & (16 * (v805 & v741)) & v779 ^ v805;
  LODWORD(STACK[0x6638]) = v739;
  v807 = STACK[0x6428];
  LODWORD(STACK[0x6568]) = v783 >> v719;
  v808 = ((v807 & (v783 >> v719)) << v719) | ((v807 & v739) >> v717);
  v809 = v789 & (4 * ((v808 ^ (2 * (v808 & v785))) & v785)) ^ v808 ^ (2 * (v808 & v785));
  v810 = v793 & (16 * (v798 & v785)) & v789 ^ v798;
  LODWORD(STACK[0x5FC8]) = v793 & (16 * (v809 & v785)) & v789 ^ v809;
  LODWORD(STACK[0x6000]) = v788;
  LODWORD(STACK[0x5FC0]) = (((v788 ^ (2 * (v788 & v785))) & v803) << v717) | (((v788 ^ (2 * (v788 & v785))) & v783) >> v719);
  LODWORD(STACK[0x5FF0]) = v799;
  LODWORD(STACK[0x5FB8]) = (((v799 ^ (2 * (v799 & v741))) & v803) << v717)
                         + (((v799 ^ (2 * (v799 & v741))) & v783) >> v719);
  LODWORD(STACK[0x5FB0]) = (LODWORD(STACK[0x6418]) ^ v742) + (LODWORD(STACK[0x6438]) ^ v742);
  LODWORD(STACK[0x5FA8]) = LODWORD(STACK[0x62C0]) | LODWORD(STACK[0x6300]);
  LODWORD(STACK[0x5FA0]) = LODWORD(STACK[0x5EC8]) + LODWORD(STACK[0x5F10]);
  v811 = LODWORD(STACK[0x68C0]) ^ LODWORD(STACK[0x61B0]) ^ LODWORD(STACK[0x61D0]) ^ LODWORD(STACK[0x6A00]) ^ LODWORD(STACK[0x69A0]) ^ LODWORD(STACK[0x6930]) ^ LODWORD(STACK[0x68F0]) ^ LODWORD(STACK[0x6950]) ^ LODWORD(STACK[0x6AB0]) ^ LODWORD(STACK[0x61C8]) ^ LODWORD(STACK[0x6910]) ^ LODWORD(STACK[0x63C8]) ^ LODWORD(STACK[0x6560]) ^ v769 ^ v770;
  v812 = STACK[0x6180];
  v813 = v811 ^ v773 ^ LODWORD(STACK[0x6180]) ^ v774 ^ v776 ^ v777 ^ 0x45C3C48E;
  v814 = STACK[0x6400];
  v815 = (LODWORD(STACK[0x6400]) ^ 0x45C3C48E ^ v778) - v813;
  v816 = v778 ^ v813;
  v817 = STACK[0x63D0];
  v818 = STACK[0x63D8];
  LODWORD(STACK[0x5F98]) = (1199782617 * LODWORD(STACK[0x63D8])) ^ (1199782617 * LODWORD(STACK[0x63D0]));
  v819 = (v814 ^ 0xBA3C3B71) + v816;
  LODWORD(STACK[0x5F90]) = LODWORD(STACK[0x5EB8]) | LODWORD(STACK[0x5F00]);
  LODWORD(STACK[0x5F88]) = ((STACK[0x5DE8] & v783) >> v719) ^ ((STACK[0x5DE8] & v803) << v717);
  LODWORD(STACK[0x5F80]) = LODWORD(STACK[0x6410]) ^ LODWORD(STACK[0x6088]);
  LODWORD(STACK[0x5F78]) = LODWORD(STACK[0x6408]) ^ LODWORD(STACK[0x6698]);
  LODWORD(STACK[0x5F70]) = LODWORD(STACK[0x64A0]) ^ v742;
  LODWORD(STACK[0x5F68]) = LODWORD(STACK[0x6470]) ^ v742;
  LODWORD(STACK[0x5F60]) = LODWORD(STACK[0x6870]) ^ v675;
  v820 = LODWORD(STACK[0x6970]) ^ v675;
  LODWORD(STACK[0x6560]) = LODWORD(STACK[0x6440]) ^ v675;
  LODWORD(STACK[0x6558]) = LODWORD(STACK[0x6450]) ^ v742;
  v821 = LODWORD(STACK[0x6540]) ^ v742;
  LODWORD(STACK[0x6550]) = LODWORD(STACK[0x6458]) ^ v675;
  LODWORD(STACK[0x5F50]) = LODWORD(STACK[0x6448]) ^ v675;
  LODWORD(STACK[0x6548]) = LODWORD(STACK[0x68B0]) ^ v742;
  LODWORD(STACK[0x5F48]) = LODWORD(STACK[0x6488]) ^ v742;
  LODWORD(STACK[0x5F40]) = LODWORD(STACK[0x6538]) ^ v742;
  LODWORD(STACK[0x5F38]) = LODWORD(STACK[0x6478]) ^ v742;
  LODWORD(STACK[0x5F30]) = LODWORD(STACK[0x6480]) ^ v675;
  LODWORD(STACK[0x5F28]) = LODWORD(STACK[0x6490]) ^ v675;
  LODWORD(STACK[0x5F20]) = LODWORD(STACK[0x6460]) ^ v742;
  LODWORD(STACK[0x5F18]) = LODWORD(STACK[0x6498]) ^ v742;
  LODWORD(STACK[0x5FD0]) = v810;
  v822 = v810 ^ (2 * (v810 & v785));
  LODWORD(STACK[0x5F10]) = (v822 & STACK[0x6A60]) >> v719;
  LODWORD(STACK[0x5F08]) = (v822 & v803) << v717;
  LODWORD(STACK[0x5F58]) = v820;
  LODWORD(STACK[0x5F00]) = v821 ^ v820;
  LODWORD(STACK[0x5EF8]) = 831575401 * v818;
  LODWORD(STACK[0x5EF0]) = 1563118941 * v815;
  LODWORD(STACK[0x5EE8]) = 831575401 * v817;
  LODWORD(STACK[0x5EE0]) = 1457838453 * v819 + 1457838453;
  v823 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6AD8] + 8 * SLODWORD(STACK[0x63F8])) - 8);
  v824 = STACK[0x9480];
  STACK[0x5ED8] = STACK[0x9480];
  LODWORD(STACK[0x6540]) = LODWORD(STACK[0x61A8]) ^ v675;
  LODWORD(STACK[0x6538]) = v812 ^ v675;
  LODWORD(STACK[0x5FD8]) = v806;
  LODWORD(STACK[0x5ED0]) = v806 & v785;
  LODWORD(STACK[0x69A0]) = v775;
  LODWORD(STACK[0x5EC8]) = v775 ^ LODWORD(STACK[0x6690]);
  v825 = v824 + 9376;
  LODWORD(STACK[0x5EC0]) = LODWORD(STACK[0x60E8]) + LODWORD(STACK[0x61BC]);
  LODWORD(STACK[0x5EB8]) = LODWORD(STACK[0x66D0]) + LODWORD(STACK[0x6750]);
  LODWORD(v824) = STACK[0x6708];
  v826 = STACK[0x6700];
  LODWORD(STACK[0x5EB0]) = LODWORD(STACK[0x6700]) | LODWORD(STACK[0x6708]);
  LODWORD(STACK[0x5EA8]) = v826 + v824;
  LODWORD(STACK[0x64A0]) = 3;
  HIDWORD(v827) = STACK[0x6080];
  LODWORD(v827) = STACK[0x6080];
  LODWORD(STACK[0x5EA0]) = v827 >> 23;
  HIDWORD(v827) = STACK[0x6138];
  LODWORD(v827) = STACK[0x6138];
  LODWORD(STACK[0x5E98]) = v827 >> 23;
  STACK[0x5E90] = v825;
  return v823(4294942958, 24386, 2253007571, 6044, -12117, 1338371435, 251, 39);
}

