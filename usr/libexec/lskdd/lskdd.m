uint64_t sub_100004CC8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  NSObject *global_queue;

  v0 = objc_autoreleasePoolPush();
  v1 = objc_msgSend(objc_alloc((Class)NSBackgroundActivityScheduler), "initWithIdentifier:", CFSTR("com.apple.lskdd"));
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setPreregistered:", 1);
    objc_msgSend(v2, "scheduleWithBlock:", &stru_1015B41E0);
    v3 = 0;
  }
  else
  {
    v3 = 4294924645;
  }
  objc_autoreleasePoolPop(v0);
  global_queue = dispatch_get_global_queue(33, 0);
  dispatch_async(global_queue, &stru_1015B4180);
  return v3;
}

uint64_t sub_100004D58()
{
  void *v0;
  id v1;
  void *v2;

  v0 = objc_autoreleasePoolPush();
  v1 = objc_msgSend(objc_alloc((Class)NSBackgroundActivityScheduler), "initWithIdentifier:", CFSTR("com.apple.lskdd"));
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setPreregistered:", 1);
    objc_msgSend(v2, "scheduleWithBlock:", &stru_1015B41C0);
    objc_autoreleasePoolPop(v0);
    return 0;
  }
  else
  {
    objc_autoreleasePoolPop(v0);
    return 4294924645;
  }
}

void sub_100004DE0(id a1, id a2)
{
  (*((void (**)(id, uint64_t))a2 + 2))(a2, 1);
}

void sub_100004DF0(id a1, id a2)
{
  sub_1005F015C();
  (*((void (**)(id, uint64_t))a2 + 2))(a2, 1);
}

id sub_100004FD8(uint64_t a1, uint64_t a2)
{
  if (a2)
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  else
    return objc_msgSend(*(id *)(a1 + 32), "processDownloadedAsset:then:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_100004FF8(uint64_t a1, const void **a2)
{
  _Block_object_assign((void *)(a1 + 32), a2[4], 3);
  _Block_object_assign((void *)(a1 + 40), a2[5], 3);
  _Block_object_assign((void *)(a1 + 48), a2[6], 7);
}

void sub_100005044(const void **a1)
{
  _Block_object_dispose(a1[6], 7);
  _Block_object_dispose(a1[5], 3);
  _Block_object_dispose(a1[4], 3);
}

uint64_t sub_100005184(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100005190(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 7);
}

void sub_1000051A0(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 32), 7);
}

id sub_1000051AC(uint64_t a1, void *a2, unint64_t a3)
{
  id v4;
  id result;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  if (a3 > 9 || ((1 << a3) & 0x205) == 0)
    return (id)(*(uint64_t (**)(_QWORD, unint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a3);
  v4 = objc_msgSend(a2, "results");
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)v11;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v8);
        if (objc_msgSend(v9, "state") == (id)1 || objc_msgSend(v9, "state") == (id)4)
          objc_msgSend(*(id *)(a1 + 32), "downloadAsset::then:", *(unsigned __int8 *)(a1 + 48), v9, *(_QWORD *)(a1 + 40));
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      result = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      v6 = result;
    }
    while (result);
  }
  return result;
}

void sub_100005330(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 3);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 7);
}

void sub_10000536C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 7);
  _Block_object_dispose(*(const void **)(a1 + 32), 3);
}

id sub_100005464(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "queryCertificateRevocationList:::", *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), *(_QWORD *)(a1 + 40));
}

void sub_100005550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);
  _Unwind_Resume(a1);
}

uint64_t sub_100005570(uint64_t result, int a2)
{
  int v2;

  if (a2)
    v2 = -42650;
  else
    v2 = 0;
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = v2;
  return result;
}

void sub_10000558C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 8);
}

void sub_10000559C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 32), 8);
}

id sub_100005630(uint64_t a1)
{
  id result;

  result = objc_alloc_init(*(Class *)(a1 + 32));
  qword_1015FA5B8 = (uint64_t)result;
  return result;
}

void sub_100005650(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 3);
}

void sub_100005660(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 32), 3);
}

uint64_t sub_1000056A8()
{
  void *v0;
  id v1;
  id v2;

  v0 = objc_autoreleasePoolPush();
  v1 = +[CertificateRevocationList getCertificateRevocationListObject](CertificateRevocationList, "getCertificateRevocationListObject");
  if (v1)
  {
    v2 = objc_msgSend(v1, "fetchCertificateRevocationList::", 1, 0);
    objc_autoreleasePoolPop(v0);
    return (uint64_t)v2;
  }
  else
  {
    objc_autoreleasePoolPop(v0);
    return 4294924391;
  }
}

uint64_t sub_100005710()
{
  _QWORD v1[5];
  char v2;
  _QWORD v3[3];
  int v4;

  v3[0] = 0;
  v3[1] = v3;
  v3[2] = 0x2020000000;
  v4 = 0;
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3254779904;
  v1[2] = sub_1000057A8;
  v1[3] = &unk_1015B4360;
  v1[4] = v3;
  v2 = 0;
  if (qword_1015FA5C8 != -1)
    dispatch_once(&qword_1015FA5C8, v1);
  _Block_object_dispose(v3, 8);
  return 0;
}

void sub_1000057A8(uint64_t a1)
{
  char v2;
  void *v3;
  NSObject *global_queue;
  _QWORD block[4];
  char v6;

  v2 = *(_BYTE *)(a1 + 40);
  v3 = objc_autoreleasePoolPush();
  global_queue = dispatch_get_global_queue(2, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100005964;
  block[3] = &unk_1015B43C0;
  v6 = v2;
  dispatch_async(global_queue, block);
  objc_autoreleasePoolPop(v3);
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
}

uint64_t sub_100005838()
{
  _QWORD v1[5];
  char v2;
  _QWORD v3[3];
  int v4;

  v3[0] = 0;
  v3[1] = v3;
  v3[2] = 0x2020000000;
  v4 = 0;
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3254779904;
  v1[2] = sub_1000058D4;
  v1[3] = &unk_1015B4360;
  v1[4] = v3;
  v2 = 1;
  if (qword_1015FA5D0 != -1)
    dispatch_once(&qword_1015FA5D0, v1);
  _Block_object_dispose(v3, 8);
  return 0;
}

void sub_1000058D4(uint64_t a1)
{
  char v2;
  void *v3;
  NSObject *global_queue;
  _QWORD block[4];
  char v6;

  v2 = *(_BYTE *)(a1 + 40);
  v3 = objc_autoreleasePoolPush();
  global_queue = dispatch_get_global_queue(2, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100005964;
  block[3] = &unk_1015B43C0;
  v6 = v2;
  dispatch_async(global_queue, block);
  objc_autoreleasePoolPop(v3);
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
}

void sub_100005964(uint64_t a1)
{
  NSDictionary *v1;
  void *v2;
  dispatch_queue_t v3;
  NSObject *v4;
  dispatch_time_t v5;
  _QWORD v6[6];
  _QWORD v7[6];
  uint64_t v8;
  _UNKNOWN **v9;

  v7[0] = 0;
  v7[1] = v7;
  v7[2] = 0x3052000000;
  v7[3] = sub_100005AE4;
  v7[4] = sub_100005AF4;
  v7[5] = 0;
  if (*(_BYTE *)(a1 + 32))
  {
    v8 = kMAOptionsSDCRTAttestation;
    v9 = &off_1015F48A0;
    v1 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1);
  }
  else
  {
    v1 = 0;
  }
  v2 = objc_autoreleasePoolPush();
  v3 = dispatch_queue_create("NotifyHandlerQueue", 0);
  v4 = dispatch_semaphore_create(0);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3254779904;
  v6[2] = sub_100005B00;
  v6[3] = &unk_1015B4390;
  v6[4] = v4;
  v6[5] = v7;
  MAEIssueDCRTWithCompletion(v3, v1, v6);
  v5 = dispatch_time(0, 100000000000);
  dispatch_semaphore_wait(v4, v5);
  objc_autoreleasePoolPop(v2);
  _Block_object_dispose(v7, 8);
}

void sub_100005ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100005AE4(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_100005AF4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

intptr_t sub_100005B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = a3;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100005B14(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 3);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
}

void sub_100005B50(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  _Block_object_dispose(*(const void **)(a1 + 32), 3);
}

uint64_t sub_100005B80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  char v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v2 = *(&off_1015B46D0
       + (byte_1014341E8[(byte_1012F6FDC[(-31
                                                                                        * (qword_1015F8FA8 ^ 0xC0 ^ qword_1015F8458))
                                                                      - 12] ^ 0x68)
                                                      - 8] ^ (-31 * (qword_1015F8FA8 ^ 0xC0 ^ qword_1015F8458)))
       + 1763);
  v3 = (*v2 - qword_1015F8FA8) ^ (unint64_t)&v7;
  qword_1015F8FA8 = 396727777 * v3 + 0x4FB3C7470DEC97C0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = 2142736129
     * (((~(unint64_t)&v8 | 0x6B6FDD98438B6F7ALL) + ((unint64_t)&v8 | 0x94902267BC749085)) ^ 0xE98B2A6BDF2C048DLL);
  v8 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F8FA8) ^ 0xC0)) ^ byte_101506BC0[byte_1014340E0[(-31 * ((qword_1015F8458 - qword_1015F8FA8) ^ 0xC0))] ^ 0x6D])
                   + 130)
       + 4203) ^ v4;
  v9 = v4 ^ 0x8B395632;
  v12 = a2;
  v10 = a1;
  v5 = -31 * (qword_1015F8FA8 ^ 0xC0 ^ *(_DWORD *)v2);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101506EC4[(byte_1014343E8[v5 - 8] ^ 0xA3) - 4] ^ v5)
                                                     + 2055)
                                           - 8))(&v8);
  return v11;
}

uint64_t sub_100005D68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  _BYTE v8[8];
  unint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v2 = *(&off_1015B46D0
       + (byte_101506DC0[byte_1014342E0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         - qword_1015F92A8) ^ 0xC0))] ^ 0xCD] ^ (-31 * ((qword_1015F8458 - qword_1015F92A8) ^ 0xC0)))
       + 1607);
  v3 = (unint64_t)&v8[*v2 ^ qword_1015F92A8];
  qword_1015F92A8 = (396727777 * v3) ^ 0x6790357934740FC0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 + qword_1015F92A8) ^ 0xC0)) ^ byte_101506EC0[byte_1014343E0[(-31 * ((qword_1015F8458 + qword_1015F92A8) ^ 0xC0))] ^ 0x7A])
                   + 175)
       + 4222);
  v5 = 2142736129
     * ((-2 - ((~(unint64_t)&v9 | 0x89183E12A18B1879) + ((unint64_t)&v9 | 0x76E7C1ED5E74E786))) ^ 0xF403361EC2D38C70);
  v10 = v5 ^ 0x8B395632;
  v9 = v4 ^ v5;
  v11 = a1;
  v13 = a2;
  v6 = -31 * ((*(_DWORD *)v2 - qword_1015F92A8) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101506EC4[(byte_1014343E8[v6 - 8] ^ 0x79) - 4] ^ v6)
                                                     + 2122)
                                           - 8))(&v9);
  return v12;
}

uint64_t sub_100005F54(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  _BYTE v8[8];
  unint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v2 = *(&off_1015B46D0
       + (byte_1012F70D0[byte_101595E0C[(-31
                                                                                       * ((qword_1015F8458
                                                                                         + qword_1015F97A0) ^ 0xC0))
                                                                     - 12] ^ 0x19] ^ (-31
                                                                                    * ((qword_1015F8458 + qword_1015F97A0) ^ 0xC0)))
       + 1663);
  v3 = (unint64_t)&v8[*v2 ^ qword_1015F97A0];
  qword_1015F97A0 = 396727777 * v3 - 0x6790357934740FC0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F97A0) ^ 0xC0)) ^ byte_1012F70D0[byte_101595E00[(-31 * ((qword_1015F8458 - qword_1015F97A0) ^ 0xC0))] ^ 0x19])
                   + 242)
       + 4224);
  v5 = 2142736129
     * ((2 * ((unint64_t)&v9 & 0x313965C1FC567018) - (_QWORD)&v9 + 0x4EC69A3E03A98FE4) ^ 0x33DD923260F11BEDLL);
  v10 = v5 ^ 0x8B395632;
  v9 = v4 ^ v5;
  v13 = a2;
  v11 = a1;
  v6 = -31 * ((*(_DWORD *)v2 - qword_1015F97A0) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101506EC4[(byte_1014343E8[v6 - 8] ^ 0x7A) - 4] ^ v6)
                                                     + 2033)
                                           - 8))(&v9);
  return v12;
}

#error "100006138: too big function (funcsize=0)"

uint64_t sub_100027E68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  _BYTE v7[8];
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v2 = *(&off_1015B46D0
       + (byte_1014341E8[(byte_1012F6FDC[(-31
                                                                                        * (qword_1015F9298 ^ 0xC0 ^ qword_1015F8458))
                                                                      - 12] ^ 0x48)
                                                      - 8] ^ (-31 * (qword_1015F9298 ^ 0xC0 ^ qword_1015F8458)))
       + 1718);
  qword_1015F9298 = 396727777 * ((unint64_t)&v7[*v2 ^ qword_1015F9298] ^ 0x6790357934740FC0);
  *v2 = qword_1015F9298;
  v3 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 + qword_1015F9298) ^ 0xC0)) ^ byte_101506EC0[byte_1014343E0[(-31 * ((qword_1015F8458 + qword_1015F9298) ^ 0xC0))] ^ 0x79])
                   + 264)
       + 4206);
  v4 = 2142736129
     * ((((unint64_t)&v8 ^ 0xB3B96523F2F73967 | 0x2E6BFB4C609EB266)
       - (((unint64_t)&v8 ^ 0xB3B96523F2F73967) & 0x2E6BFB4C609EB266)) ^ 0xE0C99663F1311F08);
  v9 = v4 ^ 0x8B395632;
  v8 = v3 ^ v4;
  v12 = a2;
  v10 = a1;
  v5 = -31 * ((*(_DWORD *)v2 + qword_1015F9298) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_1012F70D0[byte_101595E0C[v5 - 12] ^ 0x19] ^ v5)
                                                     + 2100)
                                           - 8))(&v8);
  return v11;
}

#error "100028048: too big function (funcsize=0)"

void sub_100046CA0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0x2F68] = 12;
  STACK[0x2258] = 0xED416E02C40911A7;
  STACK[0x3000] = 0xED416E02C40911A7;
  STACK[0x3108] = STACK[0x2E70];
  STACK[0x2F28] = 0x9885F1124BC7CC3ELL;
  STACK[0x2340] = 0xB80F971D6E21637;
  STACK[0x1490] = 1;
  STACK[0x1270] = 0x9885F1124BC7CC3ELL;
  STACK[0x1488] = 1;
  STACK[0x1B18] = STACK[0x3200];
  STACK[0x1B00] = v4;
  STACK[0x1AE8] = STACK[0x3170];
  STACK[0x3128] = STACK[0x2E78];
  STACK[0x3120] = STACK[0x2E80];
  STACK[0x1AD8] = STACK[0x35F0];
  STACK[0x3118] = STACK[0x2E98];
  STACK[0x3110] = STACK[0x2E88];
  STACK[0x1AC8] = a3;
  STACK[0x1AC0] = STACK[0x3208];
  STACK[0x3168] = STACK[0x2E90];
  STACK[0x1AB8] = STACK[0x3A98];
  STACK[0x1AB0] = STACK[0x3880];
  STACK[0x35F0] = STACK[0x2AF8];
  STACK[0x3160] = STACK[0x2B00];
  STACK[0x1AA0] = STACK[0x3688];
  STACK[0x1A88] = v5;
  STACK[0x1A80] = v3;
  STACK[0x3688] = STACK[0x2B08];
  STACK[0x2FD0] = 0xA5BD2A44DFCFB1E0;
  STACK[0x1480] = 1;
  STACK[0x1478] = 1;
  STACK[0x2F78] = 0x9885F1124BC7CC3ELL;
  STACK[0x2338] = 0x9D5AE439802CEBDELL;
  STACK[0x2330] = 0x81B94091555AD743;
  STACK[0x2250] = 0xCE5A8E0833DEE99BLL;
  STACK[0x2248] = 0xF46C712DF895FD54;
  STACK[0x2240] = 0x27DFCE527AEBCFBLL;
  STACK[0x2F88] = 0x9885F1124BC7CC3ELL;
  STACK[0x2328] = 0x1E8A73F945587479;
  STACK[0x2F80] = 0x9885F1124BC7CC3ELL;
  STACK[0x1470] = 1;
  STACK[0x2F48] = 0xF46C712DF895FD54;
  STACK[0x1468] = 1;
  STACK[0x2F60] = 0x27DFCE527AEBCFBLL;
  STACK[0x2230] = 0x6AE5647AB33C03ABLL;
  STACK[0x2320] = 0xB324A784C8AF7A54;
  STACK[0x2220] = 0xDCC6BCCA6BD77A8ELL;
  STACK[0x1260] = 0x9885F1124BC7CC3ELL;
  STACK[0x2F38] = 0x9885F1124BC7CC3ELL;
  STACK[0x2F70] = 0x9885F1124BC7CC3ELL;
  STACK[0x2318] = 0xE78B417F8D651888;
  STACK[0x2310] = 0xC2402DFDA2AB72A8;
  STACK[0x2308] = 0x2BBFDD9288B66314;
  STACK[0x1460] = 1;
  STACK[0x2FC8] = 0xFCFA6EA6C0D497DALL;
  STACK[0x1458] = 1;
  STACK[0x2300] = 0xD64FA1ED1D1ACE75;
  STACK[0x2FC0] = 0xDCC6BCCA6BD77A8ELL;
  STACK[0x2218] = 0xF4B69BD627974E45;
  STACK[0x2210] = 0x63D2F477A2CBA3B7;
  STACK[0x1450] = 1;
  STACK[0x2F40] = 0x9885F1124BC7CC3ELL;
  STACK[0x2F30] = 0x9885F1124BC7CC3ELL;
  STACK[0x22F8] = 0x30AEEE9AFE3372E6;
  STACK[0x2F50] = 0xF4B69BD627974E45;
  STACK[0x1448] = 1;
  STACK[0x1440] = 1;
  STACK[0x2208] = 0xA5BD2A44DFCFB1E0;
  STACK[0x1258] = 0x9885F1124BC7CC3ELL;
  STACK[0x2F58] = 0x9885F1124BC7CC3ELL;
  STACK[0x22F0] = 0xB4DCABD233309F4BLL;
  STACK[0x1268] = 0x9885F1124BC7CC3ELL;
  STACK[0x2238] = 0xFCFA6EA6C0D497DALL;
  STACK[0x2228] = 0xCF796F9F4B547971;
  JUMPOUT(0x1000438C4);
}

void sub_1000470F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0x2F68] = 13;
  STACK[0x2258] = STACK[0x3200];
  STACK[0x3000] = STACK[0x22F8];
  STACK[0x3108] = STACK[0x2E70];
  STACK[0x2F28] = STACK[0x1260];
  STACK[0x2FD0] = STACK[0x2328];
  STACK[0x2F78] = 0x9885F1124BC7CC3ELL;
  STACK[0x2250] = STACK[0x35F0];
  STACK[0x2248] = STACK[0x3208];
  STACK[0x2240] = STACK[0x3880];
  STACK[0x2F88] = STACK[0x1258];
  STACK[0x2F80] = 0x9885F1124BC7CC3ELL;
  STACK[0x3128] = STACK[0x2E78];
  STACK[0x3120] = STACK[0x2E80];
  STACK[0x3118] = STACK[0x2E98];
  STACK[0x2230] = v3;
  STACK[0x2220] = v5;
  STACK[0x3110] = STACK[0x2E88];
  STACK[0x3168] = STACK[0x2E90];
  STACK[0x35F0] = STACK[0x2AF8];
  STACK[0x2218] = STACK[0x3688];
  STACK[0x2210] = v4;
  STACK[0x3160] = STACK[0x2B00];
  STACK[0x2208] = STACK[0x3A98];
  STACK[0x3688] = STACK[0x2B08];
  STACK[0x2238] = STACK[0x3170];
  STACK[0x2228] = a3;
  STACK[0x2F48] = STACK[0x2330];
  STACK[0x2F60] = STACK[0x2318];
  STACK[0x2F38] = 0x9885F1124BC7CC3ELL;
  STACK[0x2F70] = 0x9885F1124BC7CC3ELL;
  STACK[0x2FC8] = STACK[0x22F0];
  STACK[0x2FC0] = STACK[0x2338];
  STACK[0x2F40] = STACK[0x1270];
  STACK[0x2F30] = 0x9885F1124BC7CC3ELL;
  STACK[0x2F50] = STACK[0x2320];
  STACK[0x2F58] = 0x9885F1124BC7CC3ELL;
  JUMPOUT(0x1000438C4);
}

void sub_100047274(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  LODWORD(STACK[0x3A88]) = 14;
  LODWORD(STACK[0x2D74]) = STACK[0x2ABC];
  STACK[0x3A80] = STACK[0x1490];
  STACK[0x30B0] = STACK[0x2E18];
  STACK[0x3A78] = STACK[0x1440];
  STACK[0x2E68] = STACK[0x1458];
  STACK[0x30B8] = STACK[0x2E10];
  STACK[0x2340] = STACK[0x35F0];
  STACK[0x30C0] = STACK[0x2E08];
  STACK[0x2E60] = STACK[0x1470];
  STACK[0x30C8] = STACK[0x2E00];
  STACK[0x3B20] = STACK[0x1258];
  STACK[0x3A68] = STACK[0x1468];
  STACK[0x30D0] = STACK[0x2DF8];
  STACK[0x2338] = v5;
  STACK[0x2330] = STACK[0x3208];
  STACK[0x3B08] = 0x9885F1124BC7CC3ELL;
  STACK[0x2328] = STACK[0x3A98];
  STACK[0x2320] = STACK[0x3688];
  STACK[0x30D8] = STACK[0x2DF0];
  STACK[0x30E0] = STACK[0x2DE8];
  STACK[0x2318] = STACK[0x3880];
  STACK[0x2310] = v4;
  STACK[0x2308] = v3;
  STACK[0x3A98] = STACK[0x2DE0];
  STACK[0x2300] = a3;
  STACK[0x3688] = STACK[0x2A58];
  STACK[0x22F8] = STACK[0x3200];
  STACK[0x22F0] = STACK[0x3170];
  STACK[0x2EA0] = STACK[0x2DD0];
  STACK[0x2E50] = STACK[0x1270];
  STACK[0x3A48] = STACK[0x1480];
  STACK[0x2BB8] = STACK[0x1488];
  STACK[0x3A90] = 0x9885F1124BC7CC3ELL;
  STACK[0x3A40] = STACK[0x1448];
  STACK[0x3B28] = STACK[0x1260];
  STACK[0x2BB0] = STACK[0x1460];
  STACK[0x2E58] = STACK[0x1478];
  STACK[0x3AF0] = 0x9885F1124BC7CC3ELL;
  STACK[0x2BA8] = STACK[0x1450];
  STACK[0x3AE8] = 0x9885F1124BC7CC3ELL;
  STACK[0x3B00] = 0x9885F1124BC7CC3ELL;
  STACK[0x3AD0] = STACK[0x1268];
  STACK[0x3B18] = 0x9885F1124BC7CC3ELL;
  JUMPOUT(0x10005B8F8);
}

void sub_100047414(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  _BOOL4 v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v16;
  int v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  _BOOL4 v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  _BOOL4 v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _BOOL4 v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  _BOOL4 v38;
  int v39;
  unint64_t v40;
  _BOOL4 v41;
  unint64_t v42;
  unint64_t v43;
  _BOOL4 v44;
  unint64_t v45;
  _BOOL4 v46;
  _BOOL4 v47;
  unint64_t v48;
  _BOOL8 v49;
  unint64_t v50;
  unint64_t v51;
  _BOOL4 v52;
  _BOOL4 v53;
  _BOOL4 v54;
  unint64_t v55;
  _BOOL4 v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _BOOL4 v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _BOOL4 v65;
  unint64_t v66;
  _BOOL4 v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _BOOL4 v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _BOOL4 v77;
  int v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _BOOL4 v82;
  BOOL v83;
  unint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  unint64_t v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  _BOOL4 v123;
  unint64_t v124;
  _BOOL4 v125;
  uint64_t v126;
  unint64_t v127;
  _BOOL4 v128;
  unint64_t v129;
  _BOOL4 v130;
  uint64_t v131;
  unint64_t v132;
  _BOOL4 v133;
  unint64_t v134;
  _BOOL4 v135;
  uint64_t v136;
  unint64_t v137;
  _BOOL4 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;

  v6 = STACK[0x1590];
  v7 = STACK[0x12E8];
  v8 = STACK[0x12E8] + STACK[0x1590] > 0xFFFFFFFFFFFFFFCALL;
  STACK[0x3B28] = STACK[0x12E8] + STACK[0x1590];
  v9 = __CFADD__(v7, v6) || v8;
  LODWORD(STACK[0x3B20]) = v9;
  v10 = STACK[0x1588];
  v11 = STACK[0x12E0];
  v12 = STACK[0x12E0] + STACK[0x1588] > 0xFFFFFFFFFFFFFFD0;
  STACK[0x3B18] = STACK[0x12E0] + STACK[0x1588];
  v13 = __CFADD__(v11, v10) || v12;
  LODWORD(STACK[0x3B08]) = v13;
  v14 = STACK[0x12F0];
  v15 = STACK[0x1560];
  v16 = STACK[0x1560] + STACK[0x12F0] > 0xFFFFFFFFFFFFFFDELL;
  STACK[0x3B00] = STACK[0x1560] + STACK[0x12F0];
  v17 = __CFADD__(v15, v14) || v16;
  LODWORD(STACK[0x3AF0]) = v17;
  v18 = __CFADD__(STACK[0x1580], STACK[0x1348]) || STACK[0x1580] + STACK[0x1348] == -1;
  STACK[0x3A10] = v18 + STACK[0x1580] + STACK[0x1348];
  v19 = STACK[0x12D8];
  v20 = STACK[0x1568];
  v21 = STACK[0x1568] + STACK[0x12D8] > 0xFFFFFFFFFFFFFFF6;
  STACK[0x3AE8] = STACK[0x1568] + STACK[0x12D8];
  v22 = __CFADD__(v20, v19) || v21;
  LODWORD(STACK[0x3AD0]) = v22;
  v23 = STACK[0x1310];
  v24 = STACK[0x1598];
  v25 = STACK[0x1598] + STACK[0x1310] > 0xFFFFFFFFFFFFFFCALL;
  STACK[0x3AB0] = STACK[0x1598] + STACK[0x1310];
  v26 = __CFADD__(v24, v23) || v25;
  LODWORD(STACK[0x3AA0]) = v26;
  v27 = STACK[0x15B8];
  v28 = STACK[0x12F8];
  v29 = STACK[0x15B8] + STACK[0x12F8] > 0xFFFFFFFFFFFFFFD0;
  STACK[0x3A88] = STACK[0x15B8] + STACK[0x12F8];
  v30 = __CFADD__(v27, v28) || v29;
  LODWORD(STACK[0x3A80]) = v30;
  v31 = STACK[0x15F0];
  v32 = STACK[0x1338];
  v33 = v3;
  v34 = STACK[0x15F0] + STACK[0x1338] > 0xFFFFFFFFFFFFFFD2;
  STACK[0x3AC8] = STACK[0x15F0] + STACK[0x1338];
  v35 = __CFADD__(v31, v32) || v34;
  LODWORD(STACK[0x3AA8]) = v35;
  v36 = STACK[0x1358];
  v37 = STACK[0x15A0];
  v38 = STACK[0x15A0] + STACK[0x1358] > 0xFFFFFFFFFFFFFFEELL;
  STACK[0x3A90] = STACK[0x15A0] + STACK[0x1358];
  v39 = __CFADD__(v37, v36) || v38;
  LODWORD(STACK[0x3A78]) = v39;
  v40 = STACK[0x1350] + STACK[0x1608];
  v41 = __CFADD__(STACK[0x1350], STACK[0x1608]) || STACK[0x1350] + STACK[0x1608] > 0xFFFFFFFFFFFFFFF0;
  LODWORD(STACK[0x3A68]) = v41;
  v42 = v4;
  v43 = STACK[0x12D0] + STACK[0x1600];
  v44 = __CFADD__(STACK[0x12D0], STACK[0x1600]) || STACK[0x12D0] + STACK[0x1600] > 0xFFFFFFFFFFFFFFF6;
  v45 = STACK[0x12B0] + STACK[0x15E0];
  v46 = __CFADD__(STACK[0x12B0], STACK[0x15E0]) || STACK[0x12B0] + STACK[0x15E0] > 0xFFFFFFFFFFFFFFFCLL;
  v47 = STACK[0x15D0] + STACK[0x12B8] > 0xFFFFFFFFFFFFFFFALL;
  v48 = STACK[0x15D0] + STACK[0x12B8];
  if (__CFADD__(STACK[0x15D0], STACK[0x12B8]))
    v47 = 1;
  v49 = __CFADD__(STACK[0x15D8], STACK[0x1300]) || STACK[0x15D8] + STACK[0x1300] == -1;
  STACK[0x3150] = v49 + STACK[0x15D8] + STACK[0x1300];
  v50 = STACK[0x18E0] + STACK[0x19D8];
  v51 = v5;
  v52 = __CFADD__(STACK[0x18E0], STACK[0x19D8]) || STACK[0x18E0] + STACK[0x19D8] > 0xFFFFFFFFFFFFFFEELL;
  v53 = __CFADD__(STACK[0x1908], STACK[0x1A00]) || STACK[0x1908] + STACK[0x1A00] > 0xFFFFFFFFFFFFFFFALL;
  v54 = STACK[0x19E8] + STACK[0x1930] > 0xFFFFFFFFFFFFFFFCLL;
  if (__CFADD__(STACK[0x19E8], STACK[0x1930]))
    v54 = 1;
  v55 = STACK[0x18F8] + STACK[0x19B0];
  v56 = __CFADD__(STACK[0x18F8], STACK[0x19B0]);
  v57 = STACK[0x18E8] + STACK[0x19B8];
  LODWORD(v58) = __CFADD__(STACK[0x18E8], STACK[0x19B8]);
  v59 = STACK[0x1920] + STACK[0x19C0];
  v60 = __CFADD__(STACK[0x1920], STACK[0x19C0]);
  if (v54)
    v61 = 3;
  else
    v61 = 0;
  v62 = v61 + STACK[0x19E8] + STACK[0x1930];
  if (v57 == -1)
    v58 = 1;
  else
    v58 = v58;
  v63 = v58 + v57;
  v64 = STACK[0x1918] + STACK[0x19E0];
  v65 = __CFADD__(STACK[0x1918], STACK[0x19E0]);
  v66 = STACK[0x18F0] + STACK[0x19C8];
  v67 = __CFADD__(STACK[0x18F0], STACK[0x19C8]);
  if (v64 > 0xFFFFFFFFFFFFFFF6)
    v65 = 1;
  if (v59 > 0xFFFFFFFFFFFFFFDELL)
    v60 = 1;
  if (v55 > 0xFFFFFFFFFFFFFFF0)
    v56 = 1;
  if (v53)
    v68 = 5;
  else
    v68 = 0;
  v69 = v68 + STACK[0x1908] + STACK[0x1A00];
  if (v65)
    v70 = 9;
  else
    v70 = 0;
  v71 = v70 + v64;
  v72 = STACK[0x1910] + STACK[0x19F0];
  v73 = __CFADD__(STACK[0x1910], STACK[0x19F0]);
  if (v56)
    v74 = 15;
  else
    v74 = 0;
  v75 = v74 + v55;
  v76 = STACK[0x1900] + STACK[0x19D0];
  v77 = __CFADD__(STACK[0x1900], STACK[0x19D0]);
  v78 = v76 > 0xFFFFFFFFFFFFFFD8 || v77;
  if (v60)
    v79 = 33;
  else
    v79 = 0;
  v80 = v79 + v59;
  v81 = STACK[0x1928] + STACK[0x19F8];
  v82 = __CFADD__(STACK[0x1928], STACK[0x19F8]);
  v83 = a3 >= v63;
  v84 = a3 - v63;
  v85 = !v83;
  STACK[0x1208] = v84 - v85;
  v86 = v66 > 0xFFFFFFFFFFFFFFCALL || v67;
  if (v81 > 0xFFFFFFFFFFFFFFD2)
    v82 = 1;
  if (v52)
    v87 = 17;
  else
    v87 = 0;
  v88 = v87 + v50;
  v89 = v72 > 0xFFFFFFFFFFFFFFD0 || v73;
  if (v78)
    v90 = 39;
  else
    v90 = 0;
  v83 = v42 >= v62;
  v91 = v42 - v62;
  v92 = v90 + v76;
  v93 = -3;
  if (v83)
    v93 = 0;
  STACK[0x11F8] = v91 + v93;
  if (v89)
    v94 = 47;
  else
    v94 = 0;
  v95 = !v82;
  v96 = v94 + v72;
  if (v95)
    v97 = 0;
  else
    v97 = 45;
  v83 = v51 >= v69;
  v98 = v51 - v69;
  v99 = v97 + v81;
  v100 = -5;
  if (v83)
    v100 = 0;
  v83 = STACK[0x35F0] >= v71;
  v101 = STACK[0x35F0] - v71;
  STACK[0x11D8] = v98 + v100;
  v102 = -9;
  if (v83)
    v102 = 0;
  STACK[0x11E0] = v101 + v102;
  if (v86)
    v103 = 53;
  else
    v103 = 0;
  v83 = v33 >= v75;
  v104 = v33 - v75;
  v105 = v103 + v66;
  v106 = -15;
  if (v83)
    v106 = 0;
  v83 = STACK[0x3200] >= v88;
  v107 = STACK[0x3200] - v88;
  STACK[0x1200] = v104 + v106;
  v108 = -17;
  if (v83)
    v108 = 0;
  v83 = STACK[0x3880] >= v80;
  v109 = STACK[0x3880] - v80;
  STACK[0x11A8] = v107 + v108;
  v110 = -33;
  if (v83)
    v110 = 0;
  v83 = STACK[0x3208] >= v99;
  v111 = STACK[0x3208] - v99;
  STACK[0x1248] = v109 + v110;
  v112 = -45;
  if (v83)
    v112 = 0;
  v83 = STACK[0x3170] >= v92;
  v113 = STACK[0x3170] - v92;
  STACK[0x11F0] = v111 + v112;
  v114 = -39;
  if (v83)
    v114 = 0;
  v83 = STACK[0x3A98] >= v96;
  v115 = STACK[0x3A98] - v96;
  STACK[0x11B0] = v113 + v114;
  v116 = -47;
  if (v83)
    v116 = 0;
  STACK[0x11E8] = v115 + v116;
  if (v46)
    v117 = 3;
  else
    v117 = 0;
  STACK[0x3A00] = v117 + v45;
  if (v44)
    v118 = 9;
  else
    v118 = 0;
  STACK[0x39E8] = v118 + v43;
  if (v47)
    v119 = 5;
  else
    v119 = 0;
  v83 = STACK[0x3688] >= v105;
  v120 = STACK[0x3688] - v105;
  STACK[0x2D78] = v119 + v48;
  v121 = -53;
  if (v83)
    v121 = 0;
  STACK[0x11B8] = v120 + v121;
  v122 = STACK[0x15C8] + STACK[0x1320];
  v123 = __CFADD__(STACK[0x15C8], STACK[0x1320]);
  v124 = STACK[0x1308] + STACK[0x15F8];
  v125 = __CFADD__(STACK[0x1308], STACK[0x15F8]);
  if (LODWORD(STACK[0x3A68]))
    v126 = 15;
  else
    v126 = 0;
  STACK[0x2CE0] = v126 + v40;
  v127 = STACK[0x12C0] + STACK[0x15C0];
  v128 = __CFADD__(STACK[0x12C0], STACK[0x15C0]);
  if (v124 > 0xFFFFFFFFFFFFFFD8)
    v125 = 1;
  v129 = STACK[0x1578] + STACK[0x1340];
  v130 = __CFADD__(STACK[0x1578], STACK[0x1340]);
  if (v125)
    v131 = 39;
  else
    v131 = 0;
  STACK[0x39F8] = v131 + v124;
  if (v122 > 0xFFFFFFFFFFFFFFDELL)
    v123 = 1;
  v132 = STACK[0x1318] + STACK[0x15A8];
  v133 = __CFADD__(STACK[0x1318], STACK[0x15A8]);
  v134 = STACK[0x1330] + STACK[0x15E8];
  v135 = __CFADD__(STACK[0x1330], STACK[0x15E8]);
  if (v127 > 0xFFFFFFFFFFFFFFFCLL)
    v128 = 1;
  if (LODWORD(STACK[0x3A80]))
    v136 = 47;
  else
    v136 = 0;
  STACK[0x39F0] = v136 + STACK[0x3A88];
  v137 = STACK[0x12C8] + STACK[0x1570];
  v138 = __CFADD__(STACK[0x12C8], STACK[0x1570]);
  if (v123)
    v139 = 33;
  else
    v139 = 0;
  STACK[0x3A18] = v139 + v122;
  if (LODWORD(STACK[0x3A78]))
    v140 = 17;
  else
    v140 = 0;
  v95 = LODWORD(STACK[0x3AA0]) == 0;
  STACK[0x3A08] = v140 + STACK[0x3A90];
  if (v95)
    v141 = 0;
  else
    v141 = 53;
  STACK[0x39B8] = v141 + STACK[0x3AB0];
  if (v128)
    v142 = 3;
  else
    v142 = 0;
  STACK[0x39B0] = v142 + v127;
  v143 = v129 > 0xFFFFFFFFFFFFFFFALL || v130;
  if (LODWORD(STACK[0x3AA8]))
    v144 = 45;
  else
    v144 = 0;
  STACK[0x3A38] = v144 + STACK[0x3AC8];
  if (v143)
    v145 = 5;
  else
    v145 = 0;
  STACK[0x39D8] = v145 + v129;
  v146 = v137 > 0xFFFFFFFFFFFFFFF0 || v138;
  if (v132 > 0xFFFFFFFFFFFFFFD8)
    v133 = 1;
  if (LODWORD(STACK[0x3AD0]))
    v147 = 9;
  else
    v147 = 0;
  STACK[0x2CF0] = v147 + STACK[0x3AE8];
  if (v134 > 0xFFFFFFFFFFFFFFD2)
    v135 = 1;
  if (LODWORD(STACK[0x3AF0]))
    v148 = 33;
  else
    v148 = 0;
  STACK[0x39C0] = v148 + STACK[0x3B00];
  if (v146)
    v149 = 15;
  else
    v149 = 0;
  STACK[0x2CE8] = v149 + v137;
  if (v135)
    v150 = 45;
  else
    v150 = 0;
  v151 = STACK[0x3B08];
  STACK[0x39E0] = v150 + v134;
  if (v151)
    v152 = 47;
  else
    v152 = 0;
  STACK[0x39A8] = v152 + STACK[0x3B18];
  if (v133)
    v153 = 39;
  else
    v153 = 0;
  v154 = STACK[0x3B20];
  STACK[0x39A0] = v153 + v132;
  if (v154)
    v155 = 53;
  else
    v155 = 0;
  STACK[0x39C8] = v155 + STACK[0x3B28];
  STACK[0x37C8] = STACK[0x3470];
  STACK[0x37D0] = STACK[0x3658];
  STACK[0x2D68] = STACK[0x2E30];
  STACK[0x37D8] = STACK[0x3668];
  STACK[0x3238] = STACK[0x3288];
  LODWORD(STACK[0x37C0]) = STACK[0x3258];
  STACK[0x3948] = STACK[0x35D0];
  STACK[0x3240] = STACK[0x3348];
  STACK[0x3978] = STACK[0x3648];
  STACK[0x3230] = STACK[0x3340];
  STACK[0x38B0] = STACK[0x34F8];
  STACK[0x3960] = STACK[0x35C8];
  STACK[0x3950] = STACK[0x35C0];
  STACK[0x3138] = STACK[0x34E8];
  STACK[0x3018] = STACK[0x2BC0];
  STACK[0x2C70] = STACK[0x2930];
  STACK[0x37E0] = STACK[0x32D0];
  STACK[0x3958] = STACK[0x35D8];
  STACK[0x3068] = STACK[0x33D0];
  STACK[0x30A0] = STACK[0x2BC8];
  STACK[0x3760] = STACK[0x3660];
  STACK[0x3690] = STACK[0x3480];
  STACK[0x3980] = STACK[0x3628];
  STACK[0x2D30] = STACK[0x33C0];
  STACK[0x3098] = STACK[0x3418];
  STACK[0x37E8] = STACK[0x32C8];
  STACK[0x3130] = STACK[0x34F0];
  STACK[0x2D60] = STACK[0x2E28];
  STACK[0x37F0] = STACK[0x3678];
  STACK[0x3060] = STACK[0x3410];
  STACK[0x37F8] = STACK[0x3468];
  STACK[0x30A8] = STACK[0x34D8];
  STACK[0x2D58] = STACK[0x2CF8];
  STACK[0x3968] = STACK[0x35E8];
  STACK[0x3768] = STACK[0x3330];
  STACK[0x3800] = STACK[0x32B8];
  STACK[0x3698] = STACK[0x3460];
  STACK[0x36A0] = STACK[0x3300];
  STACK[0x36A8] = STACK[0x3458];
  STACK[0x2C68] = STACK[0x2938];
  STACK[0x2C60] = STACK[0x2940];
  STACK[0x3988] = STACK[0x3630];
  STACK[0x2FF8] = STACK[0x3400];
  STACK[0x3148] = STACK[0x34D0];
  STACK[0x36B0] = STACK[0x3358];
  STACK[0x2C58] = STACK[0x2948];
  STACK[0x3808] = STACK[0x32B0];
  STACK[0x3100] = STACK[0x3408];
  STACK[0x2D50] = STACK[0x2D00];
  STACK[0x3970] = STACK[0x35B8];
  STACK[0x36C0] = STACK[0x3450];
  STACK[0x3770] = STACK[0x3650];
  STACK[0x36B8] = STACK[0x3280];
  STACK[0x3810] = STACK[0x3350];
  STACK[0x2D90] = STACK[0x33E8];
  STACK[0x3990] = STACK[0x35B0];
  STACK[0x36D0] = STACK[0x3440];
  STACK[0x3778] = STACK[0x3478];
  STACK[0x36C8] = STACK[0x3448];
  STACK[0x2FE8] = STACK[0x33C8];
  STACK[0x2D18] = STACK[0x33E0];
  STACK[0x3818] = STACK[0x3328];
  STACK[0x36D8] = STACK[0x3438];
  STACK[0x2C50] = STACK[0x2950];
  STACK[0x2C48] = STACK[0x2958];
  STACK[0x3090] = STACK[0x33F8];
  STACK[0x3780] = STACK[0x3320];
  STACK[0x36E0] = STACK[0x3670];
  STACK[0x3788] = STACK[0x3640];
  STACK[0x3790] = STACK[0x32A8];
  STACK[0x2D88] = STACK[0x33D8];
  STACK[0x2FE0] = STACK[0x33F0];
  STACK[0x3938] = STACK[0x35A8];
  STACK[0x2FF0] = STACK[0x33B8];
  STACK[0x3828] = STACK[0x3498];
  STACK[0x36E8] = STACK[0x32F8];
  STACK[0x36F0] = STACK[0x3278];
  STACK[0x36F8] = STACK[0x3318];
  STACK[0x3020] = STACK[0x2BD0];
  STACK[0x3700] = STACK[0x3430];
  STACK[0x3928] = STACK[0x35A0];
  STACK[0x3798] = STACK[0x3490];
  STACK[0x3010] = STACK[0x2BD8];
  STACK[0x3940] = STACK[0x3598];
  STACK[0x38B8] = STACK[0x3590];
  STACK[0x3930] = STACK[0x3588];
  STACK[0x3830] = STACK[0x3270];
  STACK[0x38F0] = STACK[0x3638];
  STACK[0x3918] = STACK[0x3580];
  STACK[0x3920] = STACK[0x3578];
  STACK[0x2C28] = STACK[0x33A0];
  STACK[0x38C0] = STACK[0x3570];
  STACK[0x38C8] = STACK[0x3568];
  STACK[0x3838] = STACK[0x3310];
  STACK[0x38D0] = STACK[0x3560];
  STACK[0x38D8] = STACK[0x3558];
  STACK[0x3888] = STACK[0x3620];
  STACK[0x3890] = STACK[0x34A8];
  STACK[0x2D28] = STACK[0x3398];
  STACK[0x3748] = STACK[0x35E0];
  STACK[0x38E0] = STACK[0x3550];
  STACK[0x38F8] = STACK[0x3548];
  STACK[0x3900] = STACK[0x3540];
  STACK[0x3898] = STACK[0x32A0];
  STACK[0x37A0] = STACK[0x3298];
  STACK[0x3140] = STACK[0x34C8];
  STACK[0x37A8] = STACK[0x3308];
  STACK[0x2D20] = STACK[0x3390];
  STACK[0x38A8] = STACK[0x3538];
  STACK[0x2D80] = STACK[0x3388];
  STACK[0x38E8] = STACK[0x3530];
  STACK[0x38A0] = STACK[0x3608];
  STACK[0x3750] = STACK[0x3428];
  STACK[0x37B0] = STACK[0x3488];
  STACK[0x3908] = STACK[0x3528];
  STACK[0x37B8] = STACK[0x3680];
  STACK[0x3758] = STACK[0x3420];
  STACK[0x3910] = STACK[0x3520];
  STACK[0x2D48] = STACK[0x2E38];
  STACK[0x3228] = STACK[0x3618];
  STACK[0x3220] = STACK[0x3268];
  STACK[0x3178] = STACK[0x32F0];
  STACK[0x3180] = STACK[0x32E8];
  STACK[0x2C20] = STACK[0x3380];
  STACK[0x3188] = STACK[0x32E0];
  STACK[0x2C40] = STACK[0x2968];
  STACK[0x2C10] = STACK[0x3378];
  STACK[0x3880] = STACK[0x2978];
  STACK[0x3190] = STACK[0x32D8];
  STACK[0x2C38] = STACK[0x2970];
  STACK[0x3198] = STACK[0x3260];
  STACK[0x2E20] = STACK[0x3370];
  STACK[0x31B8] = STACK[0x3600];
  STACK[0x31A0] = STACK[0x3338];
  STACK[0x31C0] = STACK[0x3290];
  STACK[0x31C8] = STACK[0x35F8];
  STACK[0x3158] = STACK[0x34B8];
  STACK[0x2D40] = STACK[0x2E40];
  STACK[0x2D38] = STACK[0x2E48];
  STACK[0x2C30] = STACK[0x2980];
  STACK[0x31D0] = STACK[0x3250];
  STACK[0x3210] = STACK[0x3508];
  STACK[0x2FD8] = STACK[0x33B0];
  STACK[0x2C18] = STACK[0x33A8];
  STACK[0x31D8] = STACK[0x32C0];
  STACK[0x3218] = STACK[0x3500];
  STACK[0x31A8] = STACK[0x3248];
  STACK[0x31E0] = STACK[0x3610];
  STACK[0x3998] = 19;
  JUMPOUT(0x100065BFCLL);
}

void sub_100047FCC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;
  unint64_t v7;
  unint64_t v8;
  _BOOL4 v9;
  unint64_t v10;
  _BOOL4 v11;
  _BOOL4 v12;
  unint64_t v13;
  unint64_t v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v19;
  unint64_t v20;
  _BOOL4 v21;
  unint64_t v22;
  _BOOL4 v23;
  unint64_t v24;
  _BOOL4 v25;
  unint64_t v26;
  unint64_t v27;
  _BOOL4 v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _BOOL4 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;

  v6 = STACK[0x18F0] + STACK[0x1D38] > 0xFFFFFFFFFFFFFFCALL;
  v7 = STACK[0x18F0] + STACK[0x1D38];
  if (__CFADD__(STACK[0x18F0], STACK[0x1D38]))
    v6 = 1;
  v8 = STACK[0x1D18] + STACK[0x1900];
  v9 = __CFADD__(STACK[0x1D18], STACK[0x1900]) || STACK[0x1D18] + STACK[0x1900] > 0xFFFFFFFFFFFFFFD8;
  v10 = STACK[0x1920] + STACK[0x1D40];
  v11 = __CFADD__(STACK[0x1920], STACK[0x1D40]) || STACK[0x1920] + STACK[0x1D40] > 0xFFFFFFFFFFFFFFDELL;
  v12 = STACK[0x1918] + STACK[0x1D58] > 0xFFFFFFFFFFFFFFF6;
  v13 = STACK[0x1918] + STACK[0x1D58];
  if (__CFADD__(STACK[0x1918], STACK[0x1D58]))
    v12 = 1;
  v15 = v3;
  v16 = __CFADD__(STACK[0x18E8], STACK[0x1D50]) || STACK[0x18E8] + STACK[0x1D50] == -1;
  v17 = v16 + STACK[0x18E8] + STACK[0x1D50];
  v18 = STACK[0x1D20] + STACK[0x1930];
  v19 = __CFADD__(STACK[0x1D20], STACK[0x1930]);
  v20 = STACK[0x18F8] + STACK[0x1D30];
  v21 = __CFADD__(STACK[0x18F8], STACK[0x1D30]);
  if (v18 > 0xFFFFFFFFFFFFFFFCLL)
    v19 = 1;
  v22 = STACK[0x1D28] + STACK[0x1908];
  v23 = __CFADD__(STACK[0x1D28], STACK[0x1908]);
  if (v20 > 0xFFFFFFFFFFFFFFF0)
    v21 = 1;
  v24 = STACK[0x18E0] + STACK[0x1D48];
  v25 = __CFADD__(STACK[0x18E0], STACK[0x1D48]);
  v26 = v4;
  v27 = STACK[0x1D10] + STACK[0x1928];
  v28 = __CFADD__(STACK[0x1D10], STACK[0x1928]);
  if (v22 > 0xFFFFFFFFFFFFFFFALL)
    v23 = 1;
  v29 = !v19;
  v30 = 3;
  if (v29)
    v30 = 0;
  v31 = v30 + v18;
  v32 = STACK[0x1910] + STACK[0x1D60];
  v33 = __CFADD__(STACK[0x1910], STACK[0x1D60]);
  v29 = !v23;
  v34 = 5;
  if (v29)
    v34 = 0;
  v29 = !v21;
  v35 = v34 + v22;
  v36 = 15;
  if (v29)
    v36 = 0;
  v37 = v36 + v20;
  v38 = v27 > 0xFFFFFFFFFFFFFFD2 || v28;
  v39 = a3 >= v17;
  v40 = a3 - v17;
  v41 = !v39;
  STACK[0x1160] = v40 - v41;
  v42 = v24 > 0xFFFFFFFFFFFFFFEELL || v25;
  v29 = !v11;
  v43 = 33;
  if (v29)
    v43 = 0;
  v44 = v43 + v10;
  v45 = 45;
  if (!v38)
    v45 = 0;
  v46 = v45 + v27;
  v47 = v32 > 0xFFFFFFFFFFFFFFD0 || v33;
  v29 = v42 == 0;
  v48 = 17;
  if (v29)
    v48 = 0;
  v29 = !v9;
  v49 = v48 + v24;
  v50 = 39;
  if (v29)
    v50 = 0;
  v29 = !v6;
  v51 = v50 + v8;
  v52 = 53;
  if (v29)
    v52 = 0;
  v53 = v52 + v7;
  v54 = 9;
  if (!v12)
    v54 = 0;
  v55 = v54 + v13;
  v56 = 47;
  if (!v47)
    v56 = 0;
  v57 = v26 - v31;
  v58 = v56 + v32;
  v59 = -3;
  if (v26 >= v31)
    v59 = 0;
  v60 = v5 - v35;
  v61 = -5;
  if (v5 >= v35)
    v61 = 0;
  v39 = v15 >= v37;
  v62 = v15 - v37;
  v63 = -15;
  if (v39)
    v63 = 0;
  v39 = STACK[0x35F0] >= v55;
  v64 = STACK[0x35F0] - v55;
  v65 = -9;
  if (v39)
    v65 = 0;
  v39 = STACK[0x3170] >= v51;
  v66 = STACK[0x3170] - v51;
  v67 = -39;
  if (v39)
    v67 = 0;
  v39 = STACK[0x3208] >= v46;
  v68 = STACK[0x3208] - v46;
  v69 = -45;
  if (v39)
    v69 = 0;
  v39 = STACK[0x3200] >= v49;
  v70 = STACK[0x3200] - v49;
  v71 = -17;
  if (v39)
    v71 = 0;
  v39 = STACK[0x3880] >= v44;
  v72 = STACK[0x3880] - v44;
  v73 = -33;
  if (v39)
    v73 = 0;
  v39 = STACK[0x3688] >= v53;
  v74 = STACK[0x3688] - v53;
  v75 = -53;
  if (v39)
    v75 = 0;
  v39 = STACK[0x3A98] >= v58;
  v76 = STACK[0x3A98] - v58;
  STACK[0x1190] = v57 + v59;
  STACK[0x1158] = v60 + v61;
  STACK[0x1188] = v62 + v63;
  STACK[0x1178] = v64 + v65;
  STACK[0x1168] = v72 + v73;
  v77 = -47;
  if (v39)
    v77 = 0;
  STACK[0x11A0] = v76 + v77;
  STACK[0x1150] = v68 + v69;
  STACK[0x1170] = v70 + v71;
  STACK[0x1180] = v74 + v75;
  STACK[0x1198] = v66 + v67;
  STACK[0x2F68] = 21;
  STACK[0x3000] = 0x34B9D46858BE76EBLL;
  STACK[0x3108] = STACK[0x2E70];
  STACK[0x2F28] = STACK[0x10E0];
  STACK[0x2FD0] = 0x97B89D4EA264A1B3;
  STACK[0x2F78] = STACK[0x1110];
  STACK[0x2F88] = STACK[0x10E8];
  STACK[0x2F80] = STACK[0x10F8];
  STACK[0x3128] = STACK[0x2E78];
  STACK[0x3120] = STACK[0x2E80];
  STACK[0x3118] = STACK[0x2E98];
  STACK[0x3110] = STACK[0x2E88];
  STACK[0x3168] = STACK[0x2E90];
  STACK[0x35F0] = STACK[0x2AF8];
  STACK[0x3160] = STACK[0x2B00];
  STACK[0x3688] = STACK[0x2B08];
  STACK[0x2F48] = 0x6EBA58B5908087BFLL;
  STACK[0x2F60] = 0x32E284E124F24A81;
  STACK[0x2F38] = STACK[0x10D8];
  STACK[0x2F70] = STACK[0x1120];
  STACK[0x2FC8] = 0xDDB22C380449E0BALL;
  STACK[0x2FC0] = 0xD4A6F4CF55C46B4CLL;
  STACK[0x2F40] = STACK[0x10F0];
  STACK[0x2F30] = STACK[0x1108];
  STACK[0x2F50] = 0xF7C854F0B7BCE901;
  STACK[0x2F58] = STACK[0x1118];
  JUMPOUT(0x1000438C4);
}

void sub_100048408(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0x5F8] = v4;
  STACK[0x5F0] = a3;
  STACK[0x37C8] = STACK[0x3470];
  STACK[0x37D0] = STACK[0x3658];
  STACK[0x2D68] = STACK[0x2E30];
  STACK[0x37D8] = STACK[0x3668];
  STACK[0x3238] = STACK[0x3288];
  LODWORD(STACK[0x37C0]) = STACK[0x3258];
  STACK[0x3948] = STACK[0x35D0];
  STACK[0x3240] = STACK[0x3348];
  STACK[0x3978] = STACK[0x3648];
  STACK[0x3230] = STACK[0x3340];
  STACK[0x38B0] = STACK[0x34F8];
  STACK[0x3960] = STACK[0x35C8];
  STACK[0x3950] = STACK[0x35C0];
  STACK[0x3138] = STACK[0x34E8];
  STACK[0x3018] = STACK[0x2BC0];
  STACK[0x2C70] = STACK[0x2930];
  STACK[0x37E0] = STACK[0x32D0];
  STACK[0x3958] = STACK[0x35D8];
  STACK[0x3068] = STACK[0x33D0];
  STACK[0x30A0] = STACK[0x2BC8];
  STACK[0x3760] = STACK[0x3660];
  STACK[0x3690] = STACK[0x3480];
  STACK[0x3980] = STACK[0x3628];
  STACK[0x5B0] = STACK[0x35F0];
  STACK[0x2D30] = STACK[0x33C0];
  STACK[0x3098] = STACK[0x3418];
  STACK[0x37E8] = STACK[0x32C8];
  STACK[0x3130] = STACK[0x34F0];
  STACK[0x2D60] = STACK[0x2E28];
  STACK[0x37F0] = STACK[0x3678];
  STACK[0x3060] = STACK[0x3410];
  STACK[0x37F8] = STACK[0x3468];
  STACK[0x30A8] = STACK[0x34D8];
  STACK[0x2D58] = STACK[0x2CF8];
  STACK[0x3968] = STACK[0x35E8];
  STACK[0x3768] = STACK[0x3330];
  STACK[0x3800] = STACK[0x32B8];
  STACK[0x3698] = STACK[0x3460];
  STACK[0x36A0] = STACK[0x3300];
  STACK[0x36A8] = STACK[0x3458];
  STACK[0x2C68] = STACK[0x2938];
  STACK[0x2C60] = STACK[0x2940];
  STACK[0x3988] = STACK[0x3630];
  STACK[0x2FF8] = STACK[0x3400];
  STACK[0x3148] = STACK[0x34D0];
  STACK[0x36B0] = STACK[0x3358];
  STACK[0x2C58] = STACK[0x2948];
  STACK[0x3808] = STACK[0x32B0];
  STACK[0x3100] = STACK[0x3408];
  STACK[0x2D50] = STACK[0x2D00];
  STACK[0x3970] = STACK[0x35B8];
  STACK[0x530] = STACK[0x3688];
  STACK[0x36C0] = STACK[0x3450];
  STACK[0x3770] = STACK[0x3650];
  STACK[0x36B8] = STACK[0x3280];
  STACK[0x508] = v5;
  STACK[0x3810] = STACK[0x3350];
  STACK[0x2D90] = STACK[0x33E8];
  STACK[0x3990] = STACK[0x35B0];
  STACK[0x36D0] = STACK[0x3440];
  STACK[0x3778] = STACK[0x3478];
  STACK[0x36C8] = STACK[0x3448];
  STACK[0x4C0] = STACK[0x3170];
  STACK[0x2FE8] = STACK[0x33C8];
  STACK[0x2D18] = STACK[0x33E0];
  STACK[0x3818] = STACK[0x3328];
  STACK[0x36D8] = STACK[0x3438];
  STACK[0x2C50] = STACK[0x2950];
  STACK[0x2C48] = STACK[0x2958];
  STACK[0x3090] = STACK[0x33F8];
  STACK[0x3780] = STACK[0x3320];
  STACK[0x36E0] = STACK[0x3670];
  STACK[0x3788] = STACK[0x3640];
  STACK[0x3790] = STACK[0x32A8];
  STACK[0x2D88] = STACK[0x33D8];
  STACK[0x2FE0] = STACK[0x33F0];
  STACK[0x3938] = STACK[0x35A8];
  STACK[0x2FF0] = STACK[0x33B8];
  STACK[0x3828] = STACK[0x3498];
  STACK[0x36E8] = STACK[0x32F8];
  STACK[0x36F0] = STACK[0x3278];
  STACK[0x36F8] = STACK[0x3318];
  STACK[0x3020] = STACK[0x2BD0];
  STACK[0x3700] = STACK[0x3430];
  STACK[0x3928] = STACK[0x35A0];
  STACK[0x3798] = STACK[0x3490];
  STACK[0x3010] = STACK[0x2BD8];
  STACK[0x3940] = STACK[0x3598];
  STACK[0x458] = v3;
  STACK[0x38B8] = STACK[0x3590];
  STACK[0x3930] = STACK[0x3588];
  STACK[0x3830] = STACK[0x3270];
  STACK[0x38F0] = STACK[0x3638];
  STACK[0x3918] = STACK[0x3580];
  STACK[0x3920] = STACK[0x3578];
  STACK[0x2C28] = STACK[0x33A0];
  STACK[0x38C0] = STACK[0x3570];
  STACK[0x38C8] = STACK[0x3568];
  STACK[0x3838] = STACK[0x3310];
  STACK[0x38D0] = STACK[0x3560];
  STACK[0x38D8] = STACK[0x3558];
  STACK[0x3888] = STACK[0x3620];
  STACK[0x3890] = STACK[0x34A8];
  STACK[0x2D28] = STACK[0x3398];
  STACK[0x3748] = STACK[0x35E0];
  STACK[0x38E0] = STACK[0x3550];
  STACK[0x38F8] = STACK[0x3548];
  STACK[0x3900] = STACK[0x3540];
  STACK[0x3898] = STACK[0x32A0];
  STACK[0x37A0] = STACK[0x3298];
  STACK[0x3140] = STACK[0x34C8];
  STACK[0x37A8] = STACK[0x3308];
  STACK[0x2D20] = STACK[0x3390];
  STACK[0x38A8] = STACK[0x3538];
  STACK[0x2D80] = STACK[0x3388];
  STACK[0x38E8] = STACK[0x3530];
  STACK[0x38A0] = STACK[0x3608];
  STACK[0x3750] = STACK[0x3428];
  STACK[0x37B0] = STACK[0x3488];
  STACK[0x3908] = STACK[0x3528];
  STACK[0x420] = STACK[0x3880];
  STACK[0x37B8] = STACK[0x3680];
  STACK[0x3758] = STACK[0x3420];
  STACK[0x3910] = STACK[0x3520];
  STACK[0x2D48] = STACK[0x2E38];
  STACK[0x3228] = STACK[0x3618];
  STACK[0x3220] = STACK[0x3268];
  STACK[0x3178] = STACK[0x32F0];
  STACK[0x3180] = STACK[0x32E8];
  STACK[0x2C20] = STACK[0x3380];
  STACK[0x3188] = STACK[0x32E0];
  STACK[0x2C40] = STACK[0x2968];
  STACK[0x2C10] = STACK[0x3378];
  STACK[0x3880] = STACK[0x2978];
  STACK[0x3F0] = STACK[0x3200];
  STACK[0x3190] = STACK[0x32D8];
  STACK[0x2C38] = STACK[0x2970];
  STACK[0x3198] = STACK[0x3260];
  STACK[0x2E20] = STACK[0x3370];
  STACK[0x31B8] = STACK[0x3600];
  STACK[0x31A0] = STACK[0x3338];
  STACK[0x31C0] = STACK[0x3290];
  STACK[0x31C8] = STACK[0x35F8];
  STACK[0x3158] = STACK[0x34B8];
  STACK[0x2D40] = STACK[0x2E40];
  STACK[0x2D38] = STACK[0x2E48];
  STACK[0x2C30] = STACK[0x2980];
  STACK[0x4A0] = STACK[0x3A98];
  STACK[0x31D0] = STACK[0x3250];
  STACK[0x3210] = STACK[0x3508];
  STACK[0x2FD8] = STACK[0x33B0];
  STACK[0x2C18] = STACK[0x33A8];
  STACK[0x31D8] = STACK[0x32C0];
  STACK[0x3218] = STACK[0x3500];
  STACK[0x31A8] = STACK[0x3248];
  STACK[0x4D0] = STACK[0x3208];
  STACK[0x31E0] = STACK[0x3610];
  STACK[0x3998] = 22;
  STACK[0x39E0] = STACK[0x1D10];
  STACK[0x3A18] = 0x8DB13C47EC9C5060;
  STACK[0x2D78] = 0xF435247866A89D6ALL;
  STACK[0x39D8] = STACK[0x1D28];
  STACK[0x39F8] = 0x4F32EF6C4CA22D86;
  STACK[0x3A38] = 0x85D9DC5E933D8215;
  STACK[0x2CF0] = STACK[0x1D58];
  STACK[0x3A08] = 0xDE63DAE4FC78A846;
  STACK[0x39C0] = STACK[0x1D40];
  STACK[0x2CE8] = STACK[0x1D30];
  STACK[0x3A10] = STACK[0x1D50];
  STACK[0x3A00] = 0x2EE818AC82F341C6;
  STACK[0x39E8] = 0x21BAADC71E2E67AELL;
  STACK[0x39B8] = 0x77BBC4BB7B718F6ELL;
  STACK[0x39B0] = STACK[0x1D20];
  STACK[0x39F0] = 0x8EA56294FB27789DLL;
  STACK[0x3150] = 0x1BD1E5A80B860D97;
  STACK[0x2CE0] = 0xB597BB10BF49CF5;
  STACK[0x39C8] = STACK[0x1D38];
  STACK[0x39A8] = STACK[0x1D60];
  STACK[0x39A0] = STACK[0x1D18];
  JUMPOUT(0x100065BFCLL);
}

void sub_100048A48(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0x37C8] = STACK[0x3470];
  STACK[0x37D0] = STACK[0x3658];
  STACK[0x2D68] = STACK[0x2E30];
  STACK[0x37D8] = STACK[0x3668];
  STACK[0x3238] = STACK[0x3288];
  LODWORD(STACK[0x37C0]) = STACK[0x3258];
  STACK[0x3948] = STACK[0x35D0];
  STACK[0x3240] = STACK[0x3348];
  STACK[0x3978] = STACK[0x3648];
  STACK[0x3230] = STACK[0x3340];
  STACK[0x5D8] = STACK[0x3A98];
  STACK[0x38B0] = STACK[0x34F8];
  STACK[0x3960] = STACK[0x35C8];
  STACK[0x3950] = STACK[0x35C0];
  STACK[0x3138] = STACK[0x34E8];
  STACK[0x3018] = STACK[0x2BC0];
  STACK[0x2C70] = STACK[0x2930];
  STACK[0x37E0] = STACK[0x32D0];
  STACK[0x3958] = STACK[0x35D8];
  STACK[0x3068] = STACK[0x33D0];
  STACK[0x30A0] = STACK[0x2BC8];
  STACK[0x3760] = STACK[0x3660];
  STACK[0x3690] = STACK[0x3480];
  STACK[0x3980] = STACK[0x3628];
  STACK[0x5B8] = a3;
  STACK[0x2D30] = STACK[0x33C0];
  STACK[0x3098] = STACK[0x3418];
  STACK[0x37E8] = STACK[0x32C8];
  STACK[0x3130] = STACK[0x34F0];
  STACK[0x2D60] = STACK[0x2E28];
  STACK[0x37F0] = STACK[0x3678];
  STACK[0x3060] = STACK[0x3410];
  STACK[0x37F8] = STACK[0x3468];
  STACK[0x30A8] = STACK[0x34D8];
  STACK[0x2D58] = STACK[0x2CF8];
  STACK[0x3968] = STACK[0x35E8];
  STACK[0x3768] = STACK[0x3330];
  STACK[0x3800] = STACK[0x32B8];
  STACK[0x3698] = STACK[0x3460];
  STACK[0x36A0] = STACK[0x3300];
  STACK[0x36A8] = STACK[0x3458];
  STACK[0x2C68] = STACK[0x2938];
  STACK[0x2C60] = STACK[0x2940];
  STACK[0x3988] = STACK[0x3630];
  STACK[0x540] = STACK[0x35F0];
  STACK[0x2FF8] = STACK[0x3400];
  STACK[0x3148] = STACK[0x34D0];
  STACK[0x36B0] = STACK[0x3358];
  STACK[0x2C58] = STACK[0x2948];
  STACK[0x3808] = STACK[0x32B0];
  STACK[0x3100] = STACK[0x3408];
  STACK[0x2D50] = STACK[0x2D00];
  STACK[0x3970] = STACK[0x35B8];
  STACK[0x36C0] = STACK[0x3450];
  STACK[0x3770] = STACK[0x3650];
  STACK[0x36B8] = STACK[0x3280];
  STACK[0x3810] = STACK[0x3350];
  STACK[0x2D90] = STACK[0x33E8];
  STACK[0x3990] = STACK[0x35B0];
  STACK[0x36D0] = STACK[0x3440];
  STACK[0x3778] = STACK[0x3478];
  STACK[0x4D8] = v3;
  STACK[0x36C8] = STACK[0x3448];
  STACK[0x2FE8] = STACK[0x33C8];
  STACK[0x2D18] = STACK[0x33E0];
  STACK[0x3818] = STACK[0x3328];
  STACK[0x36D8] = STACK[0x3438];
  STACK[0x2C50] = STACK[0x2950];
  STACK[0x2C48] = STACK[0x2958];
  STACK[0x4B0] = STACK[0x3170];
  STACK[0x3090] = STACK[0x33F8];
  STACK[0x3780] = STACK[0x3320];
  STACK[0x36E0] = STACK[0x3670];
  STACK[0x3788] = STACK[0x3640];
  STACK[0x3790] = STACK[0x32A8];
  STACK[0x2D88] = STACK[0x33D8];
  STACK[0x2FE0] = STACK[0x33F0];
  STACK[0x3938] = STACK[0x35A8];
  STACK[0x2FF0] = STACK[0x33B8];
  STACK[0x3828] = STACK[0x3498];
  STACK[0x36E8] = STACK[0x32F8];
  STACK[0x36F0] = STACK[0x3278];
  STACK[0x36F8] = STACK[0x3318];
  STACK[0x3020] = STACK[0x2BD0];
  STACK[0x3700] = STACK[0x3430];
  STACK[0x3928] = STACK[0x35A0];
  STACK[0x3798] = STACK[0x3490];
  STACK[0x460] = STACK[0x3200];
  STACK[0x3010] = STACK[0x2BD8];
  STACK[0x3940] = STACK[0x3598];
  STACK[0x38B8] = STACK[0x3590];
  STACK[0x3930] = STACK[0x3588];
  STACK[0x3830] = STACK[0x3270];
  STACK[0x448] = STACK[0x3880];
  STACK[0x38F0] = STACK[0x3638];
  STACK[0x3918] = STACK[0x3580];
  STACK[0x3920] = STACK[0x3578];
  STACK[0x2C28] = STACK[0x33A0];
  STACK[0x38C0] = STACK[0x3570];
  STACK[0x38C8] = STACK[0x3568];
  STACK[0x3838] = STACK[0x3310];
  STACK[0x38D0] = STACK[0x3560];
  STACK[0x38D8] = STACK[0x3558];
  STACK[0x3888] = STACK[0x3620];
  STACK[0xF18] = STACK[0x3688];
  STACK[0x3890] = STACK[0x34A8];
  STACK[0x2D28] = STACK[0x3398];
  STACK[0x3748] = STACK[0x35E0];
  STACK[0x38E0] = STACK[0x3550];
  STACK[0x38F8] = STACK[0x3548];
  STACK[0x3900] = STACK[0x3540];
  STACK[0x3898] = STACK[0x32A0];
  STACK[0x37A0] = STACK[0x3298];
  STACK[0x3140] = STACK[0x34C8];
  STACK[0x37A8] = STACK[0x3308];
  STACK[0x2D20] = STACK[0x3390];
  STACK[0x38A8] = STACK[0x3538];
  STACK[0x2D80] = STACK[0x3388];
  STACK[0x38E8] = STACK[0x3530];
  STACK[0x38A0] = STACK[0x3608];
  STACK[0x3750] = STACK[0x3428];
  STACK[0x37B0] = STACK[0x3488];
  STACK[0x3908] = STACK[0x3528];
  STACK[0x37B8] = STACK[0x3680];
  STACK[0x3758] = STACK[0x3420];
  STACK[0x3910] = STACK[0x3520];
  STACK[0x2D48] = STACK[0x2E38];
  STACK[0x3228] = STACK[0x3618];
  STACK[0x3220] = STACK[0x3268];
  STACK[0x3178] = STACK[0x32F0];
  STACK[0x3180] = STACK[0x32E8];
  STACK[0x2C20] = STACK[0x3380];
  STACK[0x3188] = STACK[0x32E0];
  STACK[0x2C40] = STACK[0x2968];
  STACK[0x2C10] = STACK[0x3378];
  STACK[0x3F8] = v4;
  STACK[0x3880] = STACK[0x2978];
  STACK[0x3190] = STACK[0x32D8];
  STACK[0x2C38] = STACK[0x2970];
  STACK[0x3198] = STACK[0x3260];
  STACK[0x2E20] = STACK[0x3370];
  STACK[0x31B8] = STACK[0x3600];
  STACK[0x31A0] = STACK[0x3338];
  STACK[0x31C0] = STACK[0x3290];
  STACK[0x31C8] = STACK[0x35F8];
  STACK[0x3158] = STACK[0x34B8];
  STACK[0x2D40] = STACK[0x2E40];
  STACK[0x2D38] = STACK[0x2E48];
  STACK[0x2C30] = STACK[0x2980];
  STACK[0x31D0] = STACK[0x3250];
  STACK[0x4E0] = STACK[0x3208];
  STACK[0x3210] = STACK[0x3508];
  STACK[0x2FD8] = STACK[0x33B0];
  STACK[0x2C18] = STACK[0x33A8];
  STACK[0x31D8] = STACK[0x32C0];
  STACK[0x3218] = STACK[0x3500];
  STACK[0x31A8] = STACK[0x3248];
  STACK[0x4C8] = v5;
  STACK[0x31E0] = STACK[0x3610];
  STACK[0x3998] = 25;
  STACK[0x39E0] = STACK[0x10F0];
  STACK[0x3A18] = 0x8DB13C47EC9C5060;
  STACK[0x2D78] = 0xF435247866A89D6ALL;
  STACK[0x39D8] = STACK[0x1120];
  STACK[0x39F8] = 0x4F32EF6C4CA22D86;
  STACK[0x3A38] = 0x85D9DC5E933D8215;
  STACK[0x2CF0] = STACK[0x1118];
  STACK[0x3A08] = 0xDE63DAE4FC78A846;
  STACK[0x39C0] = STACK[0x10F8];
  STACK[0x2CE8] = STACK[0x1100];
  STACK[0x3A10] = STACK[0x1108];
  STACK[0x3A00] = 0x2EE818AC82F341C6;
  STACK[0x39E8] = 0x21BAADC71E2E67AELL;
  STACK[0x39B8] = 0x77BBC4BB7B718F6ELL;
  STACK[0x39B0] = STACK[0x10D8];
  STACK[0x39F0] = 0x8EA56294FB27789DLL;
  STACK[0x3150] = 0x1BD1E5A80B860D97;
  STACK[0x2CE0] = 0xB597BB10BF49CF5;
  STACK[0x39C8] = STACK[0x1110];
  STACK[0x39A8] = STACK[0x10E8];
  STACK[0x39A0] = STACK[0x1128];
  JUMPOUT(0x100065BFCLL);
}

void sub_100049088(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v6 = STACK[0x3A98] - STACK[0x910];
  v7 = -47;
  if (STACK[0x3A98] >= STACK[0x910])
    v7 = 0;
  v8 = v5 - STACK[0x848];
  v9 = -5;
  if (v5 >= STACK[0x848])
    v9 = 0;
  v10 = v4 - STACK[0x960];
  v11 = -3;
  if (v4 >= STACK[0x960])
    v11 = 0;
  v12 = STACK[0x3200] - STACK[0x880];
  v13 = v3;
  v14 = -17;
  if (STACK[0x3200] >= STACK[0x880])
    v14 = 0;
  v15 = STACK[0x3208] - STACK[0x8A8];
  v16 = -45;
  if (STACK[0x3208] >= STACK[0x8A8])
    v16 = 0;
  STACK[0xE68] = (__PAIR128__(a3 - STACK[0x940], a3) - STACK[0x940]) >> 64;
  v17 = STACK[0x35F0] - STACK[0x8C8];
  v18 = -9;
  if (STACK[0x35F0] >= STACK[0x8C8])
    v18 = 0;
  v19 = v13 >= STACK[0x818];
  v20 = v13 - STACK[0x818];
  v21 = -15;
  if (v19)
    v21 = 0;
  v22 = STACK[0x3170] - STACK[0x858];
  v23 = -39;
  if (STACK[0x3170] >= STACK[0x858])
    v23 = 0;
  v24 = STACK[0x3688] - STACK[0x810];
  v25 = -53;
  if (STACK[0x3688] >= STACK[0x810])
    v25 = 0;
  v19 = STACK[0x3880] >= STACK[0x868];
  v26 = STACK[0x3880] - STACK[0x868];
  STACK[0xE90] = v6 + v7;
  STACK[0xE80] = v10 + v11;
  STACK[0xE78] = v12 + v14;
  STACK[0xEA0] = v8 + v9;
  STACK[0xE70] = v15 + v16;
  STACK[0xE98] = v20 + v21;
  STACK[0xEB0] = v24 + v25;
  v27 = -33;
  if (v19)
    v27 = 0;
  STACK[0xEA8] = v22 + v23;
  STACK[0xE60] = v17 + v18;
  STACK[0xE88] = v26 + v27;
  STACK[0x3AB0] = 30;
  STACK[0x2F20] = STACK[0xFD8];
  STACK[0x2D08] = STACK[0x11E0];
  STACK[0x2F18] = STACK[0x1018];
  STACK[0x3AC8] = STACK[0x11B8];
  STACK[0x2CD8] = STACK[0xFF0];
  STACK[0x3AA0] = STACK[0x1080];
  STACK[0x2B48] = STACK[0x2530];
  STACK[0x2F10] = STACK[0xFE0];
  STACK[0x2CD0] = STACK[0x11E8];
  STACK[0x2B40] = STACK[0x2538];
  STACK[0x2B38] = STACK[0x2540];
  STACK[0x2B30] = STACK[0x2548];
  STACK[0x2B28] = STACK[0x2550];
  STACK[0x2B20] = STACK[0x2558];
  STACK[0x3170] = STACK[0x2560];
  STACK[0x3A98] = STACK[0x2570];
  STACK[0x3688] = STACK[0x2578];
  STACK[0x2EF0] = STACK[0x1248];
  STACK[0x2F08] = STACK[0xFA0];
  STACK[0x3AA8] = STACK[0x11B0];
  STACK[0x2EC8] = STACK[0x11D8];
  STACK[0x2EF8] = STACK[0x1070];
  STACK[0x2ED8] = STACK[0x11F0];
  STACK[0x2F00] = STACK[0x1068];
  STACK[0x2EE0] = STACK[0x1078];
  STACK[0x2EE8] = STACK[0x1090];
  STACK[0x2EB8] = STACK[0x1208];
  STACK[0x2ED0] = STACK[0x11A8];
  STACK[0x2EB0] = STACK[0x1200];
  STACK[0x2EC0] = STACK[0xF98];
  STACK[0x2EA8] = STACK[0x11F8];
  JUMPOUT(0x100076360);
}

void sub_1000492B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BOOL4 v12;
  int v13;
  _BOOL4 v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v19;
  int v20;
  unint64_t v21;
  _BOOL4 v22;
  uint64_t v23;
  unint64_t v25;
  unint64_t v26;
  _BOOL4 v27;
  int v28;
  _BOOL4 v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _BOOL4 v34;
  int v35;
  unint64_t v36;
  BOOL v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BOOL4 v43;
  int v44;
  unint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _BOOL4 v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  _BOOL4 v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _BOOL4 v58;
  unint64_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _BOOL4 v65;
  unint64_t v66;
  _BOOL4 v67;
  _BOOL4 v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _BOOL4 v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  _BOOL4 v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  _BOOL4 v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  int v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;

  v6 = STACK[0x3688] + STACK[0x488];
  v7 = __CFADD__(STACK[0x3688], STACK[0x488]);
  if (v6 > 0xFFFFFFFFFFFFFFCALL)
    v7 = 1;
  v8 = !v7;
  v9 = 53;
  if (v8)
    v9 = 0;
  v10 = v9 + v6;
  STACK[0x3AC8] = v9 + v6;
  v11 = STACK[0x1E00];
  v12 = v9 + v6 + STACK[0x1E00] > 0xFFFFFFFFFFFFFFCALL;
  STACK[0x3B28] = v10 + STACK[0x1E00];
  v13 = __CFADD__(v10, v11) || v12;
  LODWORD(STACK[0x3B20]) = v13;
  v14 = STACK[0x3880] + STACK[0x470] > 0xFFFFFFFFFFFFFFDELL;
  v15 = STACK[0x3880] + STACK[0x470];
  if (__CFADD__(STACK[0x3880], STACK[0x470]))
    v14 = 1;
  if (v14)
    v16 = 33;
  else
    v16 = 0;
  v17 = v16 + v15;
  v18 = STACK[0x1978];
  v19 = v16 + v15 + STACK[0x1978] > 0xFFFFFFFFFFFFFFDELL;
  STACK[0x3B18] = v17 + STACK[0x1978];
  v20 = __CFADD__(v17, v18) || v19;
  LODWORD(STACK[0x3B08]) = v20;
  v21 = STACK[0x3170] + STACK[0x5C0];
  v22 = __CFADD__(STACK[0x3170], STACK[0x5C0]);
  if (v21 > 0xFFFFFFFFFFFFFFD8)
    v22 = 1;
  if (v22)
    v23 = 39;
  else
    v23 = 0;
  v25 = v23 + v21;
  v26 = STACK[0x1970];
  v27 = v23 + v21 + STACK[0x1970] > 0xFFFFFFFFFFFFFFD8;
  STACK[0x3AF0] = v25 + STACK[0x1970];
  v28 = __CFADD__(v25, v26) || v27;
  LODWORD(STACK[0x3AE8]) = v28;
  v29 = STACK[0x3200] + STACK[0x3B0] > 0xFFFFFFFFFFFFFFEELL;
  v30 = STACK[0x3200] + STACK[0x3B0];
  if (__CFADD__(STACK[0x3200], STACK[0x3B0]))
    v29 = 1;
  if (v29)
    v31 = 17;
  else
    v31 = 0;
  v32 = v31 + v30;
  v33 = STACK[0x1988];
  v34 = v31 + v30 + STACK[0x1988] > 0xFFFFFFFFFFFFFFEELL;
  STACK[0x3B00] = v32 + STACK[0x1988];
  v35 = __CFADD__(v32, v33) || v34;
  LODWORD(STACK[0x3AD0]) = v35;
  v36 = STACK[0x3A98];
  v37 = __CFADD__(v3, STACK[0x3A0]);
  v38 = v3 + STACK[0x3A0];
  v39 = v37;
  if (v38 > 0xFFFFFFFFFFFFFFF0)
    v39 = 1;
  if (v39)
    v40 = 15;
  else
    v40 = 0;
  v41 = v40 + v38;
  v42 = STACK[0x19A8];
  v43 = v40 + v38 + STACK[0x19A8] > 0xFFFFFFFFFFFFFFF0;
  STACK[0x3AB0] = v41 + STACK[0x19A8];
  v44 = __CFADD__(v41, v42) || v43;
  LODWORD(STACK[0x3AA8]) = v44;
  v45 = v5 + STACK[0x5E0];
  v46 = __CFADD__(v5, STACK[0x5E0]);
  if (v45 > 0xFFFFFFFFFFFFFFFALL)
    v46 = 1;
  if (v46)
    v47 = 5;
  else
    v47 = 0;
  v48 = v47 + v45;
  v49 = STACK[0x1998];
  v50 = v47 + v45 + STACK[0x1998] > 0xFFFFFFFFFFFFFFFALL;
  v51 = v48 + STACK[0x1998];
  v52 = __CFADD__(v48, STACK[0x1998]) || v50;
  v53 = STACK[0x35F0] + STACK[0x3A8];
  v54 = __CFADD__(STACK[0x35F0], STACK[0x3A8]);
  if (v53 > 0xFFFFFFFFFFFFFFF6)
    v54 = 1;
  if (v54)
    v55 = 9;
  else
    v55 = 0;
  v56 = v55 + v53;
  v57 = STACK[0x1968];
  v58 = v55 + v53 + STACK[0x1968] > 0xFFFFFFFFFFFFFFF6;
  v59 = v56 + STACK[0x1968];
  if (__CFADD__(v56, STACK[0x1968]))
    v58 = 1;
  v60 = v4 + STACK[0x548] > 0xFFFFFFFFFFFFFFFCLL;
  v37 = __CFADD__(v4, STACK[0x548]);
  v61 = v4 + STACK[0x548];
  if (v37)
    v60 = 1;
  if (v60)
    v62 = 3;
  else
    v62 = 0;
  v63 = v62 + v61;
  v64 = STACK[0x1980];
  v65 = v62 + v61 + STACK[0x1980] > 0xFFFFFFFFFFFFFFFCLL;
  v66 = v63 + STACK[0x1980];
  if (__CFADD__(v63, STACK[0x1980]))
    v65 = 1;
  v67 = STACK[0x3208] + STACK[0x578] > 0xFFFFFFFFFFFFFFD2;
  if (__CFADD__(STACK[0x3208], STACK[0x578]))
    v67 = 1;
  v68 = v36 + STACK[0x478] > 0xFFFFFFFFFFFFFFD0;
  v69 = v36 + STACK[0x478];
  if (__CFADD__(v36, STACK[0x478]))
    v68 = 1;
  v70 = a3 + STACK[0x4E8];
  LODWORD(v71) = __CFADD__(a3, STACK[0x4E8]);
  if (v70 == -1)
    v71 = 1;
  else
    v71 = v71;
  v72 = v71 + v70;
  v73 = STACK[0x1960];
  v37 = STACK[0x1960] >= v71 + v70;
  v74 = STACK[0x1960] - (v71 + v70);
  v75 = !v37;
  v76 = v74 - v75;
  v77 = 47;
  if (!v68)
    v77 = 0;
  v8 = !v67;
  v78 = v77 + v69;
  if (v8)
    v79 = 0;
  else
    v79 = 45;
  v80 = v79 + STACK[0x3208] + STACK[0x578];
  v37 = v64 >= v63;
  v81 = v64 - v63;
  v82 = -3;
  if (v37)
    v82 = 0;
  v83 = v82 + v81;
  v37 = v49 >= v48;
  v84 = v49 - v48;
  v85 = -5;
  if (v37)
    v85 = 0;
  STACK[0x1420] = v85 + v84;
  v37 = v33 >= v32;
  v86 = v33 - v32;
  v87 = -17;
  if (v37)
    v87 = 0;
  STACK[0x3000] = v87 + v86;
  v88 = STACK[0x19A0];
  v89 = -45;
  if (STACK[0x19A0] >= v80)
    v89 = 0;
  v90 = v89 + STACK[0x19A0] - v80;
  v91 = -9;
  if (v57 >= v56)
    v91 = 0;
  v92 = v91 + v57 - v56;
  v37 = v42 >= v41;
  v93 = v42 - v41;
  v94 = -15;
  if (v37)
    v94 = 0;
  STACK[0x1418] = v94 + v93;
  v37 = v26 >= v25;
  v95 = v26 - v25;
  v96 = -39;
  if (v37)
    v96 = 0;
  v97 = v96 + v95;
  v98 = v72 + v73;
  v99 = __CFADD__(v72, v73);
  v100 = -33;
  if (v18 >= v17)
    v100 = 0;
  v101 = v100 + v18 - v17;
  v102 = -53;
  if (STACK[0x1E00] >= STACK[0x3AC8])
    v102 = 0;
  v103 = v102 + STACK[0x1E00] - STACK[0x3AC8];
  if (v52)
    v104 = 5;
  else
    v104 = 0;
  v105 = v104 + v51;
  v106 = v80 + v88;
  v107 = __CFADD__(v80, v88);
  v108 = v98 == -1 || v99;
  v109 = v108 + v98;
  v110 = STACK[0x1990];
  v111 = -47;
  if (STACK[0x1990] >= v78)
    v111 = 0;
  v112 = v111 + STACK[0x1990] - v78;
  v113 = 9;
  if (!v58)
    v113 = 0;
  v114 = v113 + v59;
  if (v65)
    v115 = 3;
  else
    v115 = 0;
  v116 = v115 + v66;
  v117 = 15;
  if (!LODWORD(STACK[0x3AA8]))
    v117 = 0;
  v118 = v117 + STACK[0x3AB0];
  v119 = v78 + v110;
  v120 = __CFADD__(v78, v110);
  if (LODWORD(STACK[0x3B08]))
    v121 = 33;
  else
    v121 = 0;
  v122 = v121 + STACK[0x3B18];
  v123 = 39;
  if (!LODWORD(STACK[0x3AE8]))
    v123 = 0;
  v124 = v123 + STACK[0x3AF0];
  if (v106 > 0xFFFFFFFFFFFFFFD2)
    v107 = 1;
  v125 = v119 > 0xFFFFFFFFFFFFFFD0 || v120;
  if (v107)
    v126 = 45;
  else
    v126 = 0;
  v127 = v126 + v106;
  v128 = 17;
  if (!LODWORD(STACK[0x3AD0]))
    v128 = 0;
  v129 = v128 + STACK[0x3B00];
  v130 = 53;
  if (!LODWORD(STACK[0x3B20]))
    v130 = 0;
  v8 = v125 == 0;
  v131 = v130 + STACK[0x3B28];
  v132 = 47;
  if (v8)
    v132 = 0;
  STACK[0x3108] = STACK[0x2E70];
  STACK[0x3128] = STACK[0x2E78];
  STACK[0x3120] = STACK[0x2E80];
  STACK[0x3118] = STACK[0x2E98];
  STACK[0x3110] = STACK[0x2E88];
  STACK[0x3168] = STACK[0x2E90];
  STACK[0x35F0] = STACK[0x2AF8];
  STACK[0x3160] = STACK[0x2B00];
  STACK[0x3688] = STACK[0x2B08];
  STACK[0x2F68] = 41;
  STACK[0xC30] = v112;
  STACK[0x2FD0] = v112;
  STACK[0xC08] = v92;
  STACK[0xC28] = v83;
  STACK[0x23E0] = v131;
  STACK[0x2F78] = v131;
  STACK[0x2F28] = v129;
  STACK[0x23A8] = v129;
  STACK[0x2F88] = v132 + v119;
  STACK[0x23A0] = v132 + v119;
  STACK[0xC20] = v90;
  STACK[0x2F48] = v90;
  STACK[0x23C8] = v116;
  STACK[0x2F38] = v116;
  STACK[0x23D8] = v105;
  STACK[0x2F70] = v105;
  STACK[0x2398] = v124;
  STACK[0x2F60] = v101;
  STACK[0xC00] = v101;
  STACK[0xC18] = v97;
  STACK[0x2FC8] = v97;
  STACK[0x2F80] = v122;
  STACK[0x2390] = v122;
  STACK[0x2FC0] = STACK[0x1420];
  STACK[0x23D0] = v127;
  STACK[0x2F40] = v127;
  STACK[0xBF8] = v76;
  STACK[0x23C0] = v109;
  STACK[0x2F30] = v109;
  STACK[0x2F50] = v103;
  STACK[0xBF0] = v103;
  STACK[0x2F58] = v114;
  STACK[0x23B0] = v114;
  STACK[0x23B8] = v118;
  STACK[0xC10] = STACK[0x3000];
  JUMPOUT(0x1000438C4);
}

void sub_100049820(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  _BOOL4 v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v17;
  unint64_t v18;
  _BOOL4 v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  _BOOL4 v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v32;
  unint64_t v33;
  _BOOL4 v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  _BOOL4 v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  _BOOL4 v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _BOOL4 v71;
  uint64_t v72;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v6 = STACK[0x1D78];
  v7 = 2 * STACK[0x1D78] > 0xFFFFFFFFFFFFFFD0 || v6 < 0;
  v8 = 47;
  if (!v7)
    v8 = 0;
  v9 = v8 + 2 * STACK[0x1D78];
  v10 = v9 + v6 > 0xFFFFFFFFFFFFFFD0;
  STACK[0x2BB0] = a3;
  v11 = __CFADD__(v9, v6);
  v12 = v9 + v6;
  v13 = STACK[0x1DB0];
  v14 = 2 * STACK[0x1DB0];
  v15 = v11 || v10;
  if (v14 > 0xFFFFFFFFFFFFFFD8 || v13 < 0)
    v17 = 39;
  else
    v17 = 0;
  v18 = v17 + v14;
  v19 = v18 + v13 > 0xFFFFFFFFFFFFFFD8;
  v11 = __CFADD__(v18, v13);
  v20 = v18 + v13;
  v21 = STACK[0x1DB8];
  v22 = 2 * STACK[0x1DB8];
  if (v11)
    v19 = 1;
  v23 = v22 > 0xFFFFFFFFFFFFFFDELL || v21 < 0;
  STACK[0x3218] = v5;
  if (v23)
    v24 = 33;
  else
    v24 = 0;
  v25 = v24 + v22;
  v26 = v25 + v21 > 0xFFFFFFFFFFFFFFDELL;
  v11 = __CFADD__(v25, v21);
  v27 = v25 + v21;
  v28 = STACK[0x1D68];
  v29 = 2 * STACK[0x1D68];
  v30 = v11 || v26;
  if (v29 > 0xFFFFFFFFFFFFFFD2 || v28 < 0)
    v32 = 45;
  else
    v32 = 0;
  v33 = v32 + v29;
  v34 = v33 + v28 > 0xFFFFFFFFFFFFFFD2;
  v11 = __CFADD__(v33, v28);
  v35 = v33 + v28;
  STACK[0x3008] = v3;
  v36 = STACK[0x1D80];
  v37 = 2 * STACK[0x1D80];
  if (v11)
    v34 = 1;
  if (v37 > 0xFFFFFFFFFFFFFFEELL || v36 < 0)
    v39 = 17;
  else
    v39 = 0;
  v40 = v39 + v37;
  v41 = v40 + v36 > 0xFFFFFFFFFFFFFFEELL;
  v11 = __CFADD__(v40, v36);
  v42 = v40 + v36;
  if (v11)
    v41 = 1;
  v43 = __ROR8__(STACK[0x1DA0], 63);
  LODWORD(v44) = v43 + STACK[0x1DA0] == -1;
  v11 = __CFADD__(v43, STACK[0x1DA0]);
  v45 = v43 + STACK[0x1DA0];
  if (v11)
    v44 = 1;
  else
    v44 = v44;
  v46 = STACK[0x1D98];
  if (2 * STACK[0x1D98] > 0xFFFFFFFFFFFFFFFALL || v46 < 0)
    v48 = 5;
  else
    v48 = 0;
  v49 = v48 + 2 * STACK[0x1D98];
  v50 = v49 + v46 > 0xFFFFFFFFFFFFFFFALL;
  v11 = __CFADD__(v49, v46);
  v51 = v49 + v46;
  if (v11)
    v50 = 1;
  v52 = STACK[0x1D88];
  if (2 * STACK[0x1D88] > 0xFFFFFFFFFFFFFFFCLL || v52 < 0)
    v54 = 3;
  else
    v54 = 0;
  v55 = v54 + 2 * STACK[0x1D88];
  v11 = __CFADD__(v55, v52);
  v56 = v55 + v52;
  STACK[0x3210] = v4;
  v57 = STACK[0x1D90];
  v58 = 2 * STACK[0x1D90];
  v59 = v11;
  if (v58 > 0xFFFFFFFFFFFFFFF0 || v57 < 0)
    v61 = 15;
  else
    v61 = 0;
  v62 = v61 + v58;
  v11 = __CFADD__(v62, v57);
  v63 = v62 + v57;
  v64 = STACK[0x1D70];
  v65 = 2 * STACK[0x1D70];
  v66 = v11;
  if (v65 > 0xFFFFFFFFFFFFFFF6 || v64 < 0)
    v68 = 9;
  else
    v68 = 0;
  v69 = v68 + v65;
  STACK[0x928] = v44 + v45;
  v70 = v69 + v64;
  v71 = __CFADD__(v69, v64);
  if (v56 > 0xFFFFFFFFFFFFFFFCLL)
    v59 = 1;
  v72 = STACK[0x1DA8];
  if (2 * STACK[0x1DA8] > 0xFFFFFFFFFFFFFFCALL || v72 < 0)
    v74 = 53;
  else
    v74 = 0;
  v75 = v74 + 2 * STACK[0x1DA8];
  if (v63 > 0xFFFFFFFFFFFFFFF0)
    v66 = 1;
  if (v70 > 0xFFFFFFFFFFFFFFF6)
    v71 = 1;
  if (v50)
    v76 = 5;
  else
    v76 = 0;
  if (v71)
    v77 = 9;
  else
    v77 = 0;
  STACK[0x8B8] = v76 + v51;
  if (v59)
    v78 = 3;
  else
    v78 = 0;
  STACK[0x898] = v78 + v56;
  v79 = v75 + v72;
  v80 = __CFADD__(v75, v72);
  STACK[0x890] = v77 + v70;
  if (v66)
    v81 = 15;
  else
    v81 = 0;
  STACK[0x888] = v81 + v63;
  if (v30)
    v82 = 33;
  else
    v82 = 0;
  STACK[0x8F8] = v82 + v27;
  if (v19)
    v83 = 39;
  else
    v83 = 0;
  v84 = v79 > 0xFFFFFFFFFFFFFFCALL || v80;
  if (v34)
    v85 = 45;
  else
    v85 = 0;
  STACK[0x8D8] = v85 + v35;
  if (v41)
    v86 = 17;
  else
    v86 = 0;
  STACK[0x8D0] = v86 + v42;
  STACK[0x8C0] = v83 + v20;
  if (v15)
    v87 = 47;
  else
    v87 = 0;
  STACK[0x938] = v87 + v12;
  if (v84)
    v88 = 53;
  else
    v88 = 0;
  STACK[0x8E0] = v88 + v79;
  STACK[0xA28] = STACK[0x3200];
  STACK[0xA18] = STACK[0x35F0];
  STACK[0xA08] = STACK[0x3208];
  STACK[0xA00] = STACK[0x3170];
  STACK[0x2B48] = STACK[0x2530];
  STACK[0x2B40] = STACK[0x2538];
  STACK[0x2B38] = STACK[0x2540];
  STACK[0x2B30] = STACK[0x2548];
  STACK[0x2B28] = STACK[0x2550];
  STACK[0x2B20] = STACK[0x2558];
  STACK[0x3170] = STACK[0x2560];
  STACK[0x9B0] = STACK[0x3218];
  STACK[0x9A8] = STACK[0x3880];
  STACK[0x998] = STACK[0x3A98];
  STACK[0x990] = STACK[0x3210];
  STACK[0x3A98] = STACK[0x2570];
  STACK[0x9F8] = STACK[0x3688];
  STACK[0x9F0] = STACK[0x2BB0];
  STACK[0x9E8] = STACK[0x3008];
  STACK[0x3688] = STACK[0x2578];
  STACK[0x3AB0] = 42;
  STACK[0x2F20] = STACK[0x1B98];
  STACK[0x2D08] = 0x661C765BF4208041;
  STACK[0x2F18] = STACK[0x1BA0];
  STACK[0x3AC8] = 0xF7C854F0B7BCE901;
  STACK[0x2CD8] = STACK[0x1BB0];
  STACK[0x3AA0] = STACK[0x1BA8];
  STACK[0x2F10] = STACK[0x1B88];
  STACK[0x2CD0] = 0x97B89D4EA264A1B3;
  STACK[0x2EF0] = 0x32E284E124F24A81;
  STACK[0x2F08] = STACK[0x1BB8];
  STACK[0x3AA8] = 0xDDB22C380449E0BALL;
  STACK[0x2EC8] = 0xD4A6F4CF55C46B4CLL;
  STACK[0x2EF8] = STACK[0x1BC8];
  STACK[0x2ED8] = 0x6EBA58B5908087BFLL;
  STACK[0x2F00] = STACK[0x1B90];
  STACK[0x2EE0] = STACK[0x1B80];
  STACK[0x2EE8] = STACK[0x1BD0];
  STACK[0x2EB8] = 0x5B8FBBD5E48BD14FLL;
  STACK[0x2ED0] = 0x34B9D46858BE76EBLL;
  STACK[0x2EB0] = 0x87E85B6E5A109AFALL;
  STACK[0x2EC0] = STACK[0x1BC0];
  JUMPOUT(0x1000718A4);
}

void sub_10004BDBC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  int v9;
  unint64_t v10;
  _BOOL4 v11;
  unint64_t v12;
  unint64_t v13;
  _BOOL4 v14;
  unint64_t v15;
  unint64_t v16;
  _BOOL4 v17;
  unint64_t v18;
  _BOOL4 v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL4 v22;
  unint64_t v23;
  unint64_t v24;
  _BOOL4 v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL4 v32;
  unint64_t v33;
  unint64_t v34;
  _BOOL4 v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  _BOOL4 v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v6 = STACK[0x560];
  v7 = STACK[0x27B0];
  v8 = STACK[0x560] + STACK[0x27B0] > 0xFFFFFFFFFFFFFFD0;
  STACK[0x3B28] = STACK[0x560] + STACK[0x27B0];
  v9 = __CFADD__(v6, v7) || v8;
  LODWORD(STACK[0x3B20]) = v9;
  STACK[0x2BB0] = a3;
  v10 = STACK[0x410];
  v11 = STACK[0x410] + STACK[0x2A30] > 0xFFFFFFFFFFFFFFD2;
  v12 = STACK[0x410] + STACK[0x2A30];
  if (__CFADD__(STACK[0x410], STACK[0x2A30]))
    v11 = 1;
  STACK[0x3008] = v3;
  v13 = STACK[0x400];
  v14 = STACK[0x400] + STACK[0x2A48] > 0xFFFFFFFFFFFFFFD8;
  v15 = STACK[0x400] + STACK[0x2A48];
  if (__CFADD__(STACK[0x400], STACK[0x2A48]))
    v14 = 1;
  v16 = STACK[0x480];
  v17 = STACK[0x27C0] + STACK[0x480] > 0xFFFFFFFFFFFFFFDELL;
  v18 = STACK[0x27C0] + STACK[0x480];
  if (__CFADD__(STACK[0x27C0], STACK[0x480]))
    v17 = 1;
  v19 = STACK[0x408] + STACK[0x27B8] > 0xFFFFFFFFFFFFFFEELL;
  v20 = STACK[0x408] + STACK[0x27B8];
  if (__CFADD__(STACK[0x408], STACK[0x27B8]))
    v19 = 1;
  v21 = STACK[0x5E8];
  v22 = STACK[0x2A50] + STACK[0x5E8] > 0xFFFFFFFFFFFFFFF6;
  v23 = STACK[0x2A50] + STACK[0x5E8];
  if (__CFADD__(STACK[0x2A50], STACK[0x5E8]))
    v22 = 1;
  v24 = STACK[0x3D0];
  v25 = STACK[0x3D0] + STACK[0x2A40] > 0xFFFFFFFFFFFFFFFCLL;
  v26 = STACK[0x3D0] + STACK[0x2A40];
  if (__CFADD__(STACK[0x3D0], STACK[0x2A40]))
    v25 = 1;
  STACK[0x3218] = v5;
  v27 = STACK[0x468];
  v28 = STACK[0x2A38] + STACK[0x468];
  LODWORD(v29) = __CFADD__(STACK[0x2A38], STACK[0x468]);
  v30 = STACK[0x440];
  v31 = STACK[0x2A20] + STACK[0x440];
  v32 = __CFADD__(STACK[0x2A20], STACK[0x440]);
  v33 = STACK[0x4A8];
  STACK[0x3210] = v4;
  v34 = STACK[0x2A28] + v33;
  v35 = __CFADD__(STACK[0x2A28], v33);
  if (v28 == -1)
    v29 = 1;
  else
    v29 = v29;
  STACK[0x10B8] = v29 + v28;
  v36 = v34 > 0xFFFFFFFFFFFFFFFALL || v35;
  v37 = STACK[0x438];
  v38 = STACK[0x438] + STACK[0x27A8];
  v39 = __CFADD__(STACK[0x438], STACK[0x27A8]);
  v40 = !v25;
  v41 = 3;
  if (v40)
    v41 = 0;
  STACK[0xFE8] = v41 + v26;
  v42 = 5;
  if (!v36)
    v42 = 0;
  STACK[0xFF8] = v42 + v34;
  v43 = v31 > 0xFFFFFFFFFFFFFFF0 || v32;
  v40 = !v22;
  v44 = 9;
  if (v40)
    v44 = 0;
  STACK[0x1000] = v44 + v23;
  v45 = 15;
  if (!v43)
    v45 = 0;
  STACK[0x10B0] = v45 + v31;
  v40 = !v19;
  v46 = 17;
  if (v40)
    v46 = 0;
  STACK[0x10D0] = v46 + v20;
  v40 = !v17;
  v47 = 33;
  if (v40)
    v47 = 0;
  STACK[0xF88] = v47 + v18;
  v48 = v38 > 0xFFFFFFFFFFFFFFCALL || v39;
  v40 = !v14;
  v49 = 39;
  if (v40)
    v49 = 0;
  v40 = !v11;
  STACK[0x1030] = v49 + v15;
  v50 = 45;
  if (v40)
    v50 = 0;
  STACK[0x1048] = v50 + v12;
  STACK[0x3A10] = (__PAIR128__(STACK[0x21B0] - v27, STACK[0x21B0]) - v27) >> 64;
  v51 = 53;
  if (!v48)
    v51 = 0;
  v52 = STACK[0x3B20];
  STACK[0x1088] = v51 + v38;
  v53 = 47;
  if (!v52)
    v53 = 0;
  STACK[0x1020] = v53 + STACK[0x3B28];
  v54 = -3;
  if (STACK[0x21D8] >= v24)
    v54 = 0;
  STACK[0x39B0] = STACK[0x21D8] - v24 + v54;
  v55 = -5;
  if (STACK[0x21C0] >= v33)
    v55 = 0;
  STACK[0x39D8] = STACK[0x21C0] - v33 + v55;
  v56 = -9;
  if (STACK[0x21E0] >= v21)
    v56 = 0;
  STACK[0x2CF0] = STACK[0x21E0] - v21 + v56;
  v57 = -15;
  if (STACK[0x21E8] >= v30)
    v57 = 0;
  STACK[0x2CE8] = STACK[0x21E8] - v30 + v57;
  v58 = -33;
  if (STACK[0x21F0] >= v16)
    v58 = 0;
  STACK[0x39C0] = STACK[0x21F0] - v16 + v58;
  v59 = -39;
  if (STACK[0x21F8] >= v13)
    v59 = 0;
  STACK[0x39A0] = STACK[0x21F8] - v13 + v59;
  v60 = -47;
  if (STACK[0x21D0] >= v6)
    v60 = 0;
  STACK[0x39A8] = STACK[0x21D0] - v6 + v60;
  v61 = -45;
  if (STACK[0x21B8] >= v10)
    v61 = 0;
  STACK[0x39E0] = STACK[0x21B8] - v10 + v61;
  v62 = -53;
  if (STACK[0x21C8] >= v37)
    v62 = 0;
  STACK[0x39C8] = STACK[0x21C8] - v37 + v62;
  STACK[0x37C8] = STACK[0x3470];
  STACK[0x37D0] = STACK[0x3658];
  STACK[0x2D68] = STACK[0x2E30];
  STACK[0x37D8] = STACK[0x3668];
  STACK[0x3238] = STACK[0x3288];
  LODWORD(STACK[0x37C0]) = STACK[0x3258];
  STACK[0x3948] = STACK[0x35D0];
  STACK[0x3240] = STACK[0x3348];
  STACK[0x3978] = STACK[0x3648];
  STACK[0x3230] = STACK[0x3340];
  STACK[0x38B0] = STACK[0x34F8];
  STACK[0x5A0] = STACK[0x3218];
  STACK[0x3960] = STACK[0x35C8];
  STACK[0x3950] = STACK[0x35C0];
  STACK[0x3138] = STACK[0x34E8];
  STACK[0x3018] = STACK[0x2BC0];
  STACK[0x2C70] = STACK[0x2930];
  STACK[0x37E0] = STACK[0x32D0];
  STACK[0x3958] = STACK[0x35D8];
  STACK[0x3068] = STACK[0x33D0];
  STACK[0x30A0] = STACK[0x2BC8];
  STACK[0x3760] = STACK[0x3660];
  STACK[0x3690] = STACK[0x3480];
  STACK[0x3980] = STACK[0x3628];
  STACK[0x2D30] = STACK[0x33C0];
  STACK[0x3098] = STACK[0x3418];
  STACK[0x37E8] = STACK[0x32C8];
  STACK[0x3130] = STACK[0x34F0];
  STACK[0x2D60] = STACK[0x2E28];
  STACK[0x37F0] = STACK[0x3678];
  STACK[0x3060] = STACK[0x3410];
  STACK[0x37F8] = STACK[0x3468];
  STACK[0x30A8] = STACK[0x34D8];
  STACK[0x2D58] = STACK[0x2CF8];
  STACK[0x3968] = STACK[0x35E8];
  STACK[0x3768] = STACK[0x3330];
  STACK[0x3800] = STACK[0x32B8];
  STACK[0x3698] = STACK[0x3460];
  STACK[0x36A0] = STACK[0x3300];
  STACK[0x36A8] = STACK[0x3458];
  STACK[0x518] = STACK[0x3210];
  STACK[0x2C68] = STACK[0x2938];
  STACK[0x500] = STACK[0x2BB0];
  STACK[0x2C60] = STACK[0x2940];
  STACK[0x3988] = STACK[0x3630];
  STACK[0x2FF8] = STACK[0x3400];
  STACK[0x4F8] = STACK[0x3880];
  STACK[0x3148] = STACK[0x34D0];
  STACK[0x36B0] = STACK[0x3358];
  STACK[0x2C58] = STACK[0x2948];
  STACK[0x3808] = STACK[0x32B0];
  STACK[0x3100] = STACK[0x3408];
  STACK[0x2D50] = STACK[0x2D00];
  STACK[0x3970] = STACK[0x35B8];
  STACK[0x36C0] = STACK[0x3450];
  STACK[0x3770] = STACK[0x3650];
  STACK[0x36B8] = STACK[0x3280];
  STACK[0x3810] = STACK[0x3350];
  STACK[0x2D90] = STACK[0x33E8];
  STACK[0x3990] = STACK[0x35B0];
  STACK[0x36D0] = STACK[0x3440];
  STACK[0x3778] = STACK[0x3478];
  STACK[0x498] = STACK[0x3200];
  STACK[0x36C8] = STACK[0x3448];
  STACK[0x2FE8] = STACK[0x33C8];
  STACK[0x2D18] = STACK[0x33E0];
  STACK[0x3818] = STACK[0x3328];
  STACK[0x36D8] = STACK[0x3438];
  STACK[0x2C50] = STACK[0x2950];
  STACK[0x2C48] = STACK[0x2958];
  STACK[0x3090] = STACK[0x33F8];
  STACK[0x3780] = STACK[0x3320];
  STACK[0x36E0] = STACK[0x3670];
  STACK[0x3788] = STACK[0x3640];
  STACK[0x3790] = STACK[0x32A8];
  STACK[0x2D88] = STACK[0x33D8];
  STACK[0x2FE0] = STACK[0x33F0];
  STACK[0x3938] = STACK[0x35A8];
  STACK[0x2FF0] = STACK[0x33B8];
  STACK[0x3828] = STACK[0x3498];
  STACK[0x36E8] = STACK[0x32F8];
  STACK[0x36F0] = STACK[0x3278];
  STACK[0x36F8] = STACK[0x3318];
  STACK[0x3020] = STACK[0x2BD0];
  STACK[0x3700] = STACK[0x3430];
  STACK[0x3928] = STACK[0x35A0];
  STACK[0x3798] = STACK[0x3490];
  STACK[0x3010] = STACK[0x2BD8];
  STACK[0x3940] = STACK[0x3598];
  STACK[0x38B8] = STACK[0x3590];
  STACK[0x3930] = STACK[0x3588];
  STACK[0x3830] = STACK[0x3270];
  STACK[0x38F0] = STACK[0x3638];
  STACK[0x3918] = STACK[0x3580];
  STACK[0x3920] = STACK[0x3578];
  STACK[0x430] = STACK[0x3208];
  STACK[0x2C28] = STACK[0x33A0];
  STACK[0x38C0] = STACK[0x3570];
  STACK[0x38C8] = STACK[0x3568];
  STACK[0x3838] = STACK[0x3310];
  STACK[0x38D0] = STACK[0x3560];
  STACK[0x38D8] = STACK[0x3558];
  STACK[0x3888] = STACK[0x3620];
  STACK[0x418] = STACK[0x3170];
  STACK[0x3890] = STACK[0x34A8];
  STACK[0x2D28] = STACK[0x3398];
  STACK[0x3748] = STACK[0x35E0];
  STACK[0x38E0] = STACK[0x3550];
  STACK[0x38F8] = STACK[0x3548];
  STACK[0x3900] = STACK[0x3540];
  STACK[0x3898] = STACK[0x32A0];
  STACK[0x37A0] = STACK[0x3298];
  STACK[0x3140] = STACK[0x34C8];
  STACK[0x37A8] = STACK[0x3308];
  STACK[0x2D20] = STACK[0x3390];
  STACK[0x38A8] = STACK[0x3538];
  STACK[0x2D80] = STACK[0x3388];
  STACK[0x38E8] = STACK[0x3530];
  STACK[0x38A0] = STACK[0x3608];
  STACK[0x3750] = STACK[0x3428];
  STACK[0x37B0] = STACK[0x3488];
  STACK[0x3908] = STACK[0x3528];
  STACK[0x37B8] = STACK[0x3680];
  STACK[0x3758] = STACK[0x3420];
  STACK[0x3910] = STACK[0x3520];
  STACK[0x2D48] = STACK[0x2E38];
  STACK[0x3228] = STACK[0x3618];
  STACK[0x3E8] = STACK[0x3688];
  STACK[0x3220] = STACK[0x3268];
  STACK[0x3178] = STACK[0x32F0];
  STACK[0x3180] = STACK[0x32E8];
  STACK[0x2C20] = STACK[0x3380];
  STACK[0x3188] = STACK[0x32E0];
  STACK[0x2C40] = STACK[0x2968];
  STACK[0x2C10] = STACK[0x3378];
  STACK[0x3880] = STACK[0x2978];
  STACK[0x3190] = STACK[0x32D8];
  STACK[0x2C38] = STACK[0x2970];
  STACK[0x3198] = STACK[0x3260];
  STACK[0x2E20] = STACK[0x3370];
  STACK[0x31B8] = STACK[0x3600];
  STACK[0x31A0] = STACK[0x3338];
  STACK[0x31C0] = STACK[0x3290];
  STACK[0x31C8] = STACK[0x35F8];
  STACK[0x3158] = STACK[0x34B8];
  STACK[0x3C0] = STACK[0x35F0];
  STACK[0x2D40] = STACK[0x2E40];
  STACK[0x3B8] = STACK[0x3A98];
  STACK[0x2D38] = STACK[0x2E48];
  STACK[0x2C30] = STACK[0x2980];
  STACK[0x31D0] = STACK[0x3250];
  STACK[0x3210] = STACK[0x3508];
  STACK[0x2FD8] = STACK[0x33B0];
  STACK[0x2C18] = STACK[0x33A8];
  STACK[0x31D8] = STACK[0x32C0];
  STACK[0x3218] = STACK[0x3500];
  STACK[0x31A8] = STACK[0x3248];
  STACK[0x490] = STACK[0x3008];
  STACK[0x31E0] = STACK[0x3610];
  STACK[0x3998] = 83;
  STACK[0x3A18] = 0x32E284E124F24A81;
  STACK[0x2D78] = 0xD4A6F4CF55C46B4CLL;
  STACK[0x39F8] = 0xDDB22C380449E0BALL;
  STACK[0x3A38] = 0x6EBA58B5908087BFLL;
  STACK[0x3A08] = 0x34B9D46858BE76EBLL;
  STACK[0x3A00] = 0xA299ED451E059C13;
  STACK[0x39E8] = 0x661C765BF4208041;
  STACK[0x39B8] = 0xF7C854F0B7BCE901;
  STACK[0x39F0] = 0x97B89D4EA264A1B3;
  STACK[0x3150] = 0x5B8FBBD5E48BD14FLL;
  STACK[0x2CE0] = 0x87E85B6E5A109AFALL;
  JUMPOUT(0x100065BFCLL);
}

void sub_10004EAD8()
{
  STACK[0x3648] = STACK[0x1860];
  STACK[0x3B28] = STACK[0x15E8];
  STACK[0x3B20] = STACK[0x1850];
  STACK[0x3B18] = STACK[0x1608];
  STACK[0x3B08] = STACK[0x15F8];
  STACK[0x38B0] = STACK[0x3678];
  STACK[0x3B00] = STACK[0x18D0];
  STACK[0x3138] = STACK[0x3658];
  STACK[0x3AF0] = STACK[0x1830];
  STACK[0x3AE8] = STACK[0x1350];
  STACK[0x3AD0] = STACK[0x1338];
  STACK[0x3AC8] = STACK[0x1340];
  STACK[0x3AA0] = STACK[0x1358];
  STACK[0x3130] = STACK[0x3498];
  STACK[0x3A90] = STACK[0x1310];
  STACK[0x3A88] = STACK[0x1330];
  STACK[0x30A8] = STACK[0x3640];
  STACK[0x3A80] = STACK[0x15F0];
  STACK[0x3A78] = STACK[0x18C8];
  STACK[0x3A68] = STACK[0x15B0];
  STACK[0x3A48] = STACK[0x1600];
  STACK[0x3A40] = STACK[0x1348];
  STACK[0x3680] = STACK[0x15C0];
  STACK[0x3148] = STACK[0x3620];
  STACK[0x3678] = STACK[0x1320];
  STACK[0x3670] = STACK[0x1858];
  STACK[0x3658] = STACK[0x15A8];
  STACK[0x3640] = STACK[0x1840];
  STACK[0x3638] = STACK[0x17F8];
  STACK[0x3620] = STACK[0x1308];
  STACK[0x3618] = STACK[0x1848];
  STACK[0x3610] = STACK[0x18C0];
  STACK[0x3608] = STACK[0x1590];
  STACK[0x3600] = STACK[0x1578];
  STACK[0x35F8] = STACK[0x1810];
  STACK[0x35F0] = STACK[0x1328];
  STACK[0x35E8] = STACK[0x1818];
  STACK[0x35E0] = STACK[0x12F8];
  STACK[0x35D8] = STACK[0x1300];
  STACK[0x35D0] = STACK[0x1588];
  STACK[0x35C8] = STACK[0x17F0];
  STACK[0x35C0] = STACK[0x12E0];
  STACK[0x35B8] = STACK[0x12E8];
  STACK[0x35B0] = STACK[0x15C8];
  STACK[0x35A8] = STACK[0x12D8];
  STACK[0x35A0] = STACK[0x1570];
  STACK[0x3598] = STACK[0x12D0];
  STACK[0x3590] = STACK[0x17E8];
  STACK[0x3140] = STACK[0x3350];
  STACK[0x3660] = STACK[0x12F0];
  STACK[0x3588] = STACK[0x1838];
  STACK[0x3580] = STACK[0x1580];
  STACK[0x3578] = STACK[0x15E0];
  STACK[0x3570] = STACK[0x12B8];
  STACK[0x3568] = STACK[0x15D8];
  STACK[0x3560] = STACK[0x12C8];
  STACK[0x3558] = STACK[0x17E0];
  STACK[0x3550] = STACK[0x12C0];
  STACK[0x3548] = STACK[0x17D8];
  STACK[0x3540] = STACK[0x15B8];
  STACK[0x3538] = STACK[0x1568];
  STACK[0x3530] = STACK[0x12B0];
  STACK[0x3528] = STACK[0x17D0];
  STACK[0x3158] = STACK[0x3650];
  STACK[0x3650] = STACK[0x1598];
  STACK[0x3520] = STACK[0x15A0];
  STACK[0x3518] = STACK[0x1560];
  STACK[0x3510] = STACK[0x1800];
  STACK[0x3508] = STACK[0x1808];
  STACK[0x3668] = STACK[0x1828];
  STACK[0x3500] = STACK[0x15D0];
  LODWORD(STACK[0x34F8]) = STACK[0xEF4];
  STACK[0x34F0] = STACK[0x1318];
  STACK[0x34E8] = STACK[0x1820];
  STACK[0x39F0] = STACK[0xE90];
  STACK[0x3128] = STACK[0xDC8];
  STACK[0x3418] = STACK[0xE98];
  STACK[0x3410] = STACK[0xEB0];
  STACK[0x3400] = STACK[0xE78];
  STACK[0x3408] = STACK[0xE80];
  STACK[0x33E8] = STACK[0xDE0];
  STACK[0x3A18] = STACK[0xE88];
  STACK[0x33E0] = STACK[0xE18];
  STACK[0x33F8] = STACK[0xE68];
  STACK[0x33D8] = STACK[0xDF8];
  STACK[0x33F0] = STACK[0xEA8];
  STACK[0x3A38] = STACK[0xE70];
  STACK[0x3168] = STACK[0xE00];
  STACK[0x3170] = STACK[0xE08];
  STACK[0x39E8] = STACK[0xE60];
  STACK[0x2D78] = STACK[0xEA0];
  JUMPOUT(0x10004EDD4);
}

void sub_100052FDC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;

  STACK[0x3AB0] = 33;
  LODWORD(STACK[0x3110]) = 71;
  LODWORD(STACK[0xEF4]) = 70;
  v0 = STACK[0xEA0];
  v1 = STACK[0x1758];
  STACK[0x3118] = STACK[0x1758];
  STACK[0x3108] = STACK[0x1B08];
  STACK[0x35D0] = STACK[0x3948];
  STACK[0x3000] = STACK[0x3978];
  v2 = STACK[0xE88];
  STACK[0x2FD0] = STACK[0xE88];
  STACK[0x2F20] = v1;
  STACK[0x3128] = STACK[0x3678];
  v3 = STACK[0xE60];
  STACK[0x2D08] = STACK[0xE60];
  STACK[0x35C8] = STACK[0x3960];
  STACK[0x35C0] = STACK[0x3950];
  STACK[0x3170] = STACK[0x3658];
  STACK[0x35D8] = STACK[0x3958];
  v4 = STACK[0xE90];
  STACK[0x2FC8] = STACK[0xE90];
  v5 = STACK[0xDD8];
  STACK[0x2FC0] = STACK[0xDD8];
  STACK[0x2F88] = STACK[0x3980];
  v6 = STACK[0xDC8];
  STACK[0x2F80] = STACK[0xDC8];
  v7 = STACK[0xE98];
  STACK[0x2F78] = STACK[0xE98];
  v8 = STACK[0x3498];
  STACK[0x3130] = STACK[0x3498];
  v9 = STACK[0xEB0];
  STACK[0x2F70] = STACK[0xEB0];
  STACK[0x3160] = STACK[0x3640];
  v10 = STACK[0x1768];
  STACK[0x2F18] = STACK[0x1768];
  STACK[0x35E8] = STACK[0x3968];
  STACK[0x2F68] = STACK[0x1AC8];
  STACK[0x2F60] = STACK[0x1B18];
  STACK[0x3AC8] = v9;
  v11 = STACK[0x1750];
  STACK[0x2CD8] = STACK[0x1750];
  STACK[0x2F58] = STACK[0x1AA0];
  STACK[0x2F50] = STACK[0x1AD8];
  STACK[0x2F48] = STACK[0x3988];
  v12 = STACK[0xDF0];
  STACK[0x2F40] = STACK[0xDF0];
  v13 = STACK[0xE78];
  STACK[0x2F38] = STACK[0xE78];
  v14 = STACK[0x3620];
  STACK[0x3120] = STACK[0x3620];
  v15 = STACK[0x1720];
  STACK[0x3AA0] = STACK[0x1720];
  v16 = STACK[0xE80];
  STACK[0x2F30] = STACK[0xE80];
  STACK[0x2F28] = STACK[0x1B00];
  v17 = STACK[0xEA8];
  STACK[0x2B48] = STACK[0xEA8];
  STACK[0x35B8] = STACK[0x3970];
  STACK[0x2B40] = STACK[0x1AD0];
  v18 = STACK[0xDE0];
  STACK[0x2B38] = STACK[0xDE0];
  v19 = STACK[0x1730];
  STACK[0x2F10] = STACK[0x1730];
  STACK[0x3638] = v8;
  STACK[0x2CD0] = v4;
  v20 = STACK[0x1760];
  STACK[0x2B30] = STACK[0x1760];
  STACK[0x2EF0] = v2;
  STACK[0x35B0] = STACK[0x3990];
  STACK[0x2B28] = v2;
  v21 = STACK[0xE18];
  STACK[0x2B20] = STACK[0xE18];
  STACK[0x2AF0] = v11;
  v22 = STACK[0x1738];
  STACK[0x2F08] = STACK[0x1738];
  v23 = STACK[0x34A8];
  v24 = STACK[0xE68];
  STACK[0x2AE8] = STACK[0xE68];
  STACK[0x3AA8] = v17;
  STACK[0x2AE0] = v18;
  v25 = STACK[0xDF8];
  STACK[0x2AD8] = STACK[0xDF8];
  STACK[0x2AD0] = STACK[0x1AE0];
  STACK[0x2AC8] = v17;
  STACK[0x2AC0] = STACK[0x1AC0];
  STACK[0x28F8] = v19;
  v26 = STACK[0x3208];
  STACK[0x35A8] = STACK[0x3938];
  v27 = STACK[0xE70];
  STACK[0x28F0] = STACK[0xE70];
  STACK[0x28E8] = STACK[0x1A98];
  STACK[0x28E0] = v4;
  STACK[0x28D8] = v25;
  STACK[0x28D0] = v9;
  v28 = STACK[0x1728];
  STACK[0x28C8] = STACK[0x1728];
  STACK[0x2EC8] = v0;
  STACK[0x28C0] = STACK[0x1AB0];
  STACK[0x28B8] = v21;
  STACK[0x35A0] = STACK[0x3928];
  STACK[0x28B0] = STACK[0x1AE8];
  STACK[0x2EF8] = v28;
  STACK[0x28A8] = v22;
  v29 = STACK[0x3200];
  STACK[0x28A0] = v3;
  STACK[0x3598] = STACK[0x3940];
  STACK[0x2890] = v16;
  STACK[0x3590] = STACK[0x38B8];
  STACK[0x3588] = STACK[0x3930];
  STACK[0x2ED8] = v27;
  v30 = STACK[0xDE8];
  STACK[0x2888] = STACK[0xDE8];
  STACK[0x2880] = v10;
  STACK[0x2898] = STACK[0x38F0];
  STACK[0x3580] = STACK[0x3918];
  STACK[0x3578] = STACK[0x3920];
  STACK[0x2F00] = v20;
  v31 = STACK[0xE10];
  STACK[0x2878] = STACK[0xE10];
  v32 = STACK[0x1718];
  STACK[0x2870] = STACK[0x1718];
  STACK[0x2868] = v31;
  STACK[0x2860] = v24;
  STACK[0x2EE0] = STACK[0x1748];
  STACK[0x3570] = STACK[0x38C0];
  STACK[0x3568] = STACK[0x38C8];
  STACK[0x3560] = STACK[0x38D0];
  STACK[0x3558] = STACK[0x38D8];
  v33 = STACK[0x1740];
  STACK[0x2EE8] = STACK[0x1740];
  v34 = STACK[0xDD0];
  STACK[0x2858] = STACK[0xDD0];
  STACK[0x3550] = STACK[0x38E0];
  STACK[0x3548] = STACK[0x38F8];
  STACK[0x2EB8] = v24;
  STACK[0x3540] = STACK[0x3900];
  STACK[0x2850] = v7;
  STACK[0x2848] = v33;
  v35 = STACK[0x3350];
  STACK[0x3150] = STACK[0x3350];
  STACK[0x2840] = v30;
  STACK[0x3538] = STACK[0x38A8];
  v36 = STACK[0xE00];
  STACK[0x2838] = STACK[0xE00];
  v37 = STACK[0x3358];
  STACK[0x3168] = STACK[0x3358];
  STACK[0x3530] = STACK[0x38E8];
  STACK[0x3528] = STACK[0x3908];
  STACK[0x3520] = STACK[0x3910];
  STACK[0x2830] = STACK[0x3660];
  STACK[0x2828] = v15;
  STACK[0x2ED0] = v13;
  STACK[0x2820] = STACK[0x1B20];
  STACK[0x2EB0] = v7;
  STACK[0x2818] = STACK[0x1AB8];
  STACK[0x2810] = STACK[0xE08];
  STACK[0x2808] = v13;
  STACK[0x3518] = v26;
  STACK[0x2800] = v36;
  STACK[0x27F8] = STACK[0x1AF0];
  STACK[0x27F0] = v12;
  STACK[0x27E8] = v5;
  STACK[0x27E0] = v6;
  STACK[0x27D8] = v34;
  STACK[0x27D0] = STACK[0x1B10];
  STACK[0x2EC0] = v32;
  STACK[0x27C8] = STACK[0x1A90];
  STACK[0x3680] = v37;
  STACK[0x2EA8] = v16;
  STACK[0x3510] = v29;
  STACK[0x3630] = v23;
  STACK[0x3508] = STACK[0x3210];
  STACK[0x3628] = v14;
  STACK[0x3500] = STACK[0x3218];
  STACK[0x3648] = v35;
  if ((STACK[0x292C] & 0x20) == 0)
  {
    STACK[0x3110] = STACK[0x3948];
    STACK[0x3648] = STACK[0x3978];
    STACK[0x3100] = STACK[0x3960];
    STACK[0x30A0] = STACK[0x3958];
    STACK[0x3628] = STACK[0x3980];
    STACK[0x3630] = STACK[0x3988];
    STACK[0x3998] = STACK[0x3970];
    STACK[0x2F00] = STACK[0x3928];
    STACK[0x3108] = STACK[0x3940];
    STACK[0x3880] = STACK[0x38B8];
    STACK[0x3120] = STACK[0x3930];
    STACK[0x3638] = STACK[0x38F0];
    STACK[0x3118] = STACK[0x3918];
    STACK[0x3018] = STACK[0x3920];
    STACK[0x2F40] = STACK[0x38C0];
    STACK[0x2FD8] = STACK[0x38C8];
    STACK[0x2FD0] = STACK[0x38D0];
    STACK[0x2FC8] = STACK[0x38D8];
    STACK[0x2F88] = STACK[0x38E0];
    STACK[0x2F80] = STACK[0x38F8];
    STACK[0x2F78] = STACK[0x3900];
    STACK[0x2F70] = STACK[0x38A8];
    STACK[0x2F60] = STACK[0x38E8];
    STACK[0x2F58] = STACK[0x3908];
    STACK[0x2F50] = STACK[0x3910];
    STACK[0x2F48] = v26;
    STACK[0x3680] = STACK[0x3210];
    STACK[0x2F38] = STACK[0x3218];
    LODWORD(STACK[0x3AC8]) = 89;
    v38 = STACK[0xE78];
    v39 = STACK[0xE90];
    STACK[0x39F0] = STACK[0xE90];
    v40 = STACK[0xEA0];
    STACK[0x2D78] = STACK[0xEA0];
    STACK[0x34F8] = STACK[0x3678];
    v41 = STACK[0xE70];
    STACK[0x3A38] = STACK[0xE70];
    STACK[0x34E8] = STACK[0x3658];
    STACK[0x33D0] = v39;
    v42 = STACK[0xDC8];
    STACK[0x3128] = STACK[0xDC8];
    v43 = STACK[0xDD8];
    STACK[0x2F10] = STACK[0xDD8];
    STACK[0x33C0] = v42;
    v44 = STACK[0xE98];
    STACK[0x3418] = STACK[0xE98];
    v45 = STACK[0x3498];
    STACK[0x34F0] = STACK[0x3498];
    v46 = STACK[0xEB0];
    STACK[0x3410] = STACK[0xEB0];
    v47 = STACK[0xDE8];
    STACK[0x2F18] = STACK[0xDE8];
    v48 = STACK[0x3350];
    STACK[0x3140] = STACK[0x3350];
    v49 = STACK[0xE10];
    STACK[0x3AA8] = STACK[0xE10];
    v50 = STACK[0x3640];
    STACK[0x34D8] = STACK[0x3640];
    STACK[0x39C8] = v46;
    v51 = STACK[0x3650];
    STACK[0x3158] = STACK[0x3650];
    STACK[0x3060] = v47;
    v52 = STACK[0x3620];
    STACK[0x3148] = STACK[0x3620];
    STACK[0x3000] = v42;
    STACK[0x39E0] = v41;
    STACK[0x3400] = v38;
    STACK[0x2CE8] = v44;
    STACK[0x34D0] = v52;
    v53 = STACK[0xE80];
    STACK[0x3408] = STACK[0xE80];
    STACK[0x2F68] = STACK[0x3668];
    v54 = STACK[0xE88];
    STACK[0x3A18] = STACK[0xE88];
    v55 = STACK[0xDD0];
    STACK[0x3AB0] = STACK[0xDD0];
    v56 = STACK[0xDE0];
    STACK[0x33E8] = STACK[0xDE0];
    STACK[0x2CE0] = v44;
    v57 = STACK[0xDF0];
    STACK[0x2F08] = STACK[0xDF0];
    STACK[0x2FC0] = v56;
    STACK[0x33C8] = v54;
    v58 = STACK[0xE18];
    STACK[0x33E0] = STACK[0xE18];
    STACK[0x34C0] = STACK[0x34A8];
    v59 = STACK[0xE68];
    STACK[0x33F8] = STACK[0xE68];
    STACK[0x3130] = v45;
    v60 = STACK[0xDF8];
    STACK[0x33D8] = STACK[0xDF8];
    v61 = STACK[0x3358];
    STACK[0x2AF0] = STACK[0x3358];
    v62 = STACK[0xEA8];
    STACK[0x33F0] = STACK[0xEA8];
    STACK[0x3A00] = v53;
    STACK[0x33B8] = v41;
    STACK[0x3138] = STACK[0x3658];
    STACK[0x3A10] = v59;
    STACK[0x3098] = v55;
    STACK[0x2FE8] = v57;
    STACK[0x38B0] = STACK[0x3678];
    STACK[0x30A8] = v50;
    v63 = STACK[0xE60];
    STACK[0x2CF0] = STACK[0xE60];
    STACK[0x3150] = v59;
    STACK[0x33A0] = v49;
    v64 = STACK[0xE00];
    STACK[0x3168] = STACK[0xE00];
    STACK[0x3398] = v55;
    STACK[0x3A08] = v38;
    STACK[0x39F8] = v62;
    STACK[0x39B0] = v53;
    STACK[0x34C8] = v48;
    STACK[0x39A8] = v39;
    STACK[0x3390] = v47;
    STACK[0x3388] = v64;
    STACK[0x3360] = v61;
    v65 = STACK[0xE08];
    STACK[0x3170] = STACK[0xE08];
    STACK[0x34E0] = STACK[0x3660];
    STACK[0x39D8] = v40;
    STACK[0x3380] = v65;
    STACK[0x39A0] = v62;
    STACK[0x39E8] = v63;
    STACK[0x39B8] = v46;
    STACK[0x3378] = v57;
    STACK[0x39C0] = v54;
    STACK[0x3370] = v43;
    STACK[0x3020] = v60;
    STACK[0x3090] = v49;
    STACK[0x3010] = v65;
    STACK[0x34B8] = v51;
    STACK[0x2F28] = v56;
    STACK[0x3368] = STACK[0x3668];
    STACK[0x2FF0] = v58;
    STACK[0x2F30] = v64;
    STACK[0x33B0] = v63;
    STACK[0x33A8] = v40;
    STACK[0x2F20] = v58;
    JUMPOUT(0x1000772C4);
  }
  JUMPOUT(0x10004F2B8);
}

void sub_100053BC4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;

  STACK[0x3AB0] = 33;
  LODWORD(STACK[0x3110]) = 69;
  LODWORD(STACK[0x37C0]) = 68;
  v0 = STACK[0x1B28];
  v1 = STACK[0x1758];
  STACK[0x3118] = STACK[0x1758];
  STACK[0x3108] = STACK[0x1B08];
  STACK[0x35D0] = STACK[0x3948];
  STACK[0x3000] = STACK[0x3978];
  v2 = STACK[0x1DC8];
  STACK[0x2FD0] = STACK[0x1DC8];
  STACK[0x2F20] = v1;
  STACK[0x3128] = STACK[0x3678];
  v3 = STACK[0x1B40];
  STACK[0x2D08] = STACK[0x1B40];
  STACK[0x35C8] = STACK[0x3960];
  STACK[0x35C0] = STACK[0x3950];
  STACK[0x3170] = STACK[0x3658];
  STACK[0x35D8] = STACK[0x3958];
  v4 = STACK[0xED0];
  STACK[0x2FC8] = STACK[0xED0];
  v5 = STACK[0xF08];
  STACK[0x2FC0] = STACK[0xF08];
  STACK[0x2F88] = STACK[0x3980];
  v6 = STACK[0xF10];
  STACK[0x2F80] = STACK[0xF10];
  v7 = STACK[0xEC0];
  STACK[0x2F78] = STACK[0xEC0];
  STACK[0x3130] = STACK[0x3638];
  v8 = STACK[0x1B48];
  STACK[0x2F70] = STACK[0x1B48];
  STACK[0x3160] = STACK[0x3640];
  v9 = STACK[0x1768];
  STACK[0x2F18] = STACK[0x1768];
  STACK[0x35E8] = STACK[0x3968];
  STACK[0x2F68] = STACK[0x1AC8];
  STACK[0x2F60] = STACK[0x1B18];
  STACK[0x3AC8] = v8;
  v10 = STACK[0x1750];
  STACK[0x2CD8] = STACK[0x1750];
  STACK[0x2F58] = STACK[0x1AA0];
  STACK[0x2F50] = STACK[0x1AD8];
  STACK[0x2F48] = STACK[0x3988];
  v11 = STACK[0x1DD0];
  STACK[0x2F40] = STACK[0x1DD0];
  v12 = STACK[0xEE8];
  STACK[0x2F38] = STACK[0xEE8];
  STACK[0x3120] = STACK[0x3628];
  v13 = STACK[0x1720];
  STACK[0x3AA0] = STACK[0x1720];
  v14 = STACK[0x1B38];
  STACK[0x2F30] = STACK[0x1B38];
  STACK[0x2F28] = STACK[0x1B00];
  v15 = STACK[0x1B30];
  STACK[0x2B48] = STACK[0x1B30];
  STACK[0x35B8] = STACK[0x3970];
  STACK[0x2B40] = STACK[0x1AD0];
  v16 = STACK[0xEF8];
  STACK[0x2B38] = STACK[0xEF8];
  v17 = STACK[0x1730];
  STACK[0x2F10] = STACK[0x1730];
  STACK[0x2CD0] = v4;
  v18 = STACK[0x1760];
  STACK[0x2B30] = STACK[0x1760];
  STACK[0x2EF0] = v2;
  STACK[0x35B0] = STACK[0x3990];
  STACK[0x2B28] = v2;
  v19 = STACK[0xF00];
  STACK[0x2B20] = STACK[0xF00];
  STACK[0x2AF0] = v10;
  v20 = STACK[0x1738];
  STACK[0x2F08] = STACK[0x1738];
  v21 = STACK[0xEB8];
  STACK[0x2AE8] = STACK[0xEB8];
  STACK[0x3AA8] = v15;
  STACK[0x2AE0] = v16;
  v22 = STACK[0x1B78];
  STACK[0x2AD8] = STACK[0x1B78];
  STACK[0x2AD0] = STACK[0x1AE0];
  STACK[0x2AC8] = v15;
  STACK[0x2AC0] = STACK[0x1AC0];
  STACK[0x28F8] = v17;
  v23 = STACK[0x3208];
  STACK[0x35A8] = STACK[0x3938];
  v24 = STACK[0xEC8];
  STACK[0x28F0] = STACK[0xEC8];
  STACK[0x28E8] = STACK[0x1A98];
  STACK[0x28E0] = v4;
  STACK[0x28D8] = v22;
  STACK[0x28D0] = v8;
  v25 = STACK[0x1728];
  STACK[0x28C8] = STACK[0x1728];
  STACK[0x2EC8] = v0;
  STACK[0x28C0] = STACK[0x1AB0];
  STACK[0x28B8] = v19;
  STACK[0x35A0] = STACK[0x3928];
  STACK[0x28B0] = STACK[0x1AE8];
  STACK[0x2EF8] = v25;
  STACK[0x28A8] = v20;
  v26 = STACK[0x3200];
  STACK[0x28A0] = v3;
  STACK[0x3598] = STACK[0x3940];
  STACK[0x2890] = v14;
  STACK[0x3590] = STACK[0x38B8];
  STACK[0x3588] = STACK[0x3930];
  STACK[0x2ED8] = v24;
  v27 = STACK[0x1B50];
  STACK[0x2888] = STACK[0x1B50];
  STACK[0x2880] = v9;
  STACK[0x2898] = STACK[0x38F0];
  STACK[0x3580] = STACK[0x3918];
  STACK[0x3578] = STACK[0x3920];
  STACK[0x2F00] = v18;
  v28 = STACK[0x1B70];
  STACK[0x2878] = STACK[0x1B70];
  v29 = STACK[0x1718];
  STACK[0x2870] = STACK[0x1718];
  STACK[0x2868] = v28;
  STACK[0x2860] = v21;
  STACK[0x2EE0] = STACK[0x1748];
  STACK[0x3570] = STACK[0x38C0];
  STACK[0x3568] = STACK[0x38C8];
  STACK[0x3560] = STACK[0x38D0];
  STACK[0x3558] = STACK[0x38D8];
  v30 = STACK[0x1740];
  STACK[0x2EE8] = STACK[0x1740];
  v31 = STACK[0x1B60];
  STACK[0x2858] = STACK[0x1B60];
  STACK[0x3550] = STACK[0x38E0];
  STACK[0x3548] = STACK[0x38F8];
  STACK[0x2EB8] = v21;
  STACK[0x3540] = STACK[0x3900];
  STACK[0x2850] = v7;
  STACK[0x2848] = v30;
  STACK[0x3150] = STACK[0x3648];
  STACK[0x2840] = v27;
  STACK[0x3538] = STACK[0x38A8];
  v32 = STACK[0x1B68];
  STACK[0x2838] = STACK[0x1B68];
  STACK[0x3168] = STACK[0x3680];
  STACK[0x3530] = STACK[0x38E8];
  STACK[0x3528] = STACK[0x3908];
  STACK[0x3520] = STACK[0x3910];
  STACK[0x2830] = STACK[0x3660];
  STACK[0x2828] = v13;
  STACK[0x2ED0] = v12;
  STACK[0x2820] = STACK[0x1B20];
  STACK[0x2EB0] = v7;
  STACK[0x2818] = STACK[0x1AB8];
  STACK[0x2810] = STACK[0x1B58];
  STACK[0x2808] = v12;
  STACK[0x3518] = v23;
  STACK[0x2800] = v32;
  STACK[0x27F8] = STACK[0x1AF0];
  STACK[0x27F0] = v11;
  STACK[0x27E8] = v5;
  STACK[0x27E0] = v6;
  STACK[0x27D8] = v31;
  STACK[0x27D0] = STACK[0x1B10];
  STACK[0x2EC0] = v29;
  STACK[0x27C8] = STACK[0x1A90];
  STACK[0x2EA8] = v14;
  STACK[0x3510] = v26;
  STACK[0x3508] = STACK[0x3210];
  STACK[0x3500] = STACK[0x3218];
  if ((STACK[0x292C] & 0x40) == 0)
  {
    STACK[0x38B0] = STACK[0x3678];
    STACK[0x18D0] = STACK[0xF10];
    STACK[0x3148] = STACK[0x3628];
    STACK[0x2D90] = STACK[0xEF8];
    STACK[0x18C8] = STACK[0xF00];
    STACK[0x2D88] = STACK[0x1B78];
    STACK[0x39F8] = STACK[0x1B30];
    STACK[0x3140] = STACK[0x3648];
    STACK[0x18C0] = STACK[0x1B50];
    STACK[0x3160] = STACK[0x3660];
    STACK[0x2F68] = STACK[0x3668];
    STACK[0x2CF0] = STACK[0x1B40];
    JUMPOUT(0x10004C768);
  }
  JUMPOUT(0x10004F2B8);
}

void sub_1000548D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;

  STACK[0x3AB0] = 33;
  LODWORD(STACK[0x3110]) = 90;
  LODWORD(STACK[0xC5C]) = 89;
  v0 = STACK[0x1A20];
  v1 = STACK[0x1758];
  STACK[0x3118] = STACK[0x1758];
  STACK[0x3108] = STACK[0x1B08];
  STACK[0x35D0] = STACK[0x3948];
  STACK[0x3000] = STACK[0x3978];
  v2 = STACK[0x1A50];
  STACK[0x2FD0] = STACK[0x1A50];
  STACK[0x2F20] = v1;
  v3 = STACK[0x1A48];
  STACK[0x2D08] = STACK[0x1A48];
  STACK[0x35C8] = STACK[0x3960];
  STACK[0x35C0] = STACK[0x3950];
  STACK[0x35D8] = STACK[0x3958];
  v4 = STACK[0xE58];
  STACK[0x2FC8] = STACK[0xE58];
  v5 = STACK[0x1A40];
  STACK[0x2FC0] = STACK[0x1A40];
  STACK[0x2F88] = STACK[0x3980];
  v6 = STACK[0xE50];
  STACK[0x2F80] = STACK[0xE50];
  v7 = STACK[0xE40];
  STACK[0x2F78] = STACK[0xE40];
  v8 = STACK[0xE20];
  STACK[0x2F70] = STACK[0xE20];
  v9 = STACK[0x1768];
  STACK[0x2F18] = STACK[0x1768];
  STACK[0x35E8] = STACK[0x3968];
  STACK[0x2F68] = STACK[0x1AC8];
  STACK[0x2F60] = STACK[0x1B18];
  STACK[0x3AC8] = v8;
  v10 = STACK[0x1750];
  STACK[0x2CD8] = STACK[0x1750];
  STACK[0x2F58] = STACK[0x1AA0];
  STACK[0x2F50] = STACK[0x1AD8];
  STACK[0x2F48] = STACK[0x3988];
  v11 = STACK[0x1A18];
  STACK[0x2F40] = STACK[0x1A18];
  v12 = STACK[0xE30];
  STACK[0x2F38] = STACK[0xE30];
  STACK[0x3640] = STACK[0x3160];
  v13 = STACK[0x1720];
  STACK[0x3AA0] = STACK[0x1720];
  v14 = STACK[0xE48];
  STACK[0x2F30] = STACK[0xE48];
  STACK[0x2F28] = STACK[0x1B00];
  v15 = STACK[0x1A30];
  STACK[0x2B48] = STACK[0x1A30];
  STACK[0x35B8] = STACK[0x3970];
  STACK[0x2B40] = STACK[0x1AD0];
  v16 = STACK[0x1A28];
  STACK[0x2B38] = STACK[0x1A28];
  v17 = STACK[0x1730];
  STACK[0x2F10] = STACK[0x1730];
  STACK[0x3638] = STACK[0x3130];
  STACK[0x2CD0] = v4;
  v18 = STACK[0x1760];
  STACK[0x2B30] = STACK[0x1760];
  STACK[0x2EF0] = v2;
  STACK[0x35B0] = STACK[0x3990];
  STACK[0x2B28] = v2;
  v19 = STACK[0x1A60];
  STACK[0x2B20] = STACK[0x1A60];
  STACK[0x2AF0] = v10;
  v20 = STACK[0x1738];
  STACK[0x2F08] = STACK[0x1738];
  v21 = STACK[0xE28];
  STACK[0x2AE8] = STACK[0xE28];
  STACK[0x3AA8] = v15;
  STACK[0x2AE0] = v16;
  v22 = STACK[0x1A08];
  STACK[0x2AD8] = STACK[0x1A08];
  STACK[0x2AD0] = STACK[0x1AE0];
  STACK[0x2AC8] = v15;
  STACK[0x2AC0] = STACK[0x1AC0];
  STACK[0x28F8] = v17;
  STACK[0x35A8] = STACK[0x3938];
  v23 = STACK[0xE38];
  STACK[0x28F0] = STACK[0xE38];
  STACK[0x28E8] = STACK[0x1A98];
  STACK[0x28E0] = v4;
  STACK[0x28D8] = v22;
  STACK[0x28D0] = v8;
  v24 = STACK[0x1728];
  STACK[0x28C8] = STACK[0x1728];
  STACK[0x2EC8] = v0;
  STACK[0x28C0] = STACK[0x1AB0];
  STACK[0x28B8] = v19;
  STACK[0x35A0] = STACK[0x3928];
  STACK[0x28B0] = STACK[0x1AE8];
  STACK[0x2EF8] = v24;
  STACK[0x28A8] = v20;
  STACK[0x28A0] = v3;
  STACK[0x3598] = STACK[0x3940];
  STACK[0x2890] = v14;
  STACK[0x3590] = STACK[0x38B8];
  STACK[0x3658] = STACK[0x3170];
  STACK[0x3588] = STACK[0x3930];
  STACK[0x2ED8] = v23;
  v25 = STACK[0x1A70];
  STACK[0x2888] = STACK[0x1A70];
  STACK[0x2880] = v9;
  v26 = STACK[0x3660];
  STACK[0x2898] = STACK[0x38F0];
  STACK[0x3580] = STACK[0x3918];
  STACK[0x3578] = STACK[0x3920];
  STACK[0x2F00] = v18;
  v27 = STACK[0x1A10];
  STACK[0x2878] = STACK[0x1A10];
  v28 = STACK[0x1718];
  STACK[0x2870] = STACK[0x1718];
  STACK[0x2868] = v27;
  STACK[0x2860] = v21;
  STACK[0x2EE0] = STACK[0x1748];
  STACK[0x3570] = STACK[0x38C0];
  STACK[0x3568] = STACK[0x38C8];
  STACK[0x3560] = STACK[0x38D0];
  STACK[0x3558] = STACK[0x38D8];
  v29 = STACK[0x1740];
  STACK[0x2EE8] = STACK[0x1740];
  v30 = STACK[0x1A58];
  STACK[0x2858] = STACK[0x1A58];
  STACK[0x3550] = STACK[0x38E0];
  STACK[0x3548] = STACK[0x38F8];
  STACK[0x2EB8] = v21;
  STACK[0x3540] = STACK[0x3900];
  STACK[0x2850] = v7;
  STACK[0x2848] = v29;
  STACK[0x2840] = v25;
  STACK[0x3538] = STACK[0x38A8];
  v31 = STACK[0x1A68];
  STACK[0x2838] = STACK[0x1A68];
  STACK[0x3530] = STACK[0x38E8];
  STACK[0x3528] = STACK[0x3908];
  STACK[0x3520] = STACK[0x3910];
  STACK[0x2830] = v26;
  STACK[0x2828] = v13;
  STACK[0x2ED0] = v12;
  STACK[0x2820] = STACK[0x1B20];
  STACK[0x2EB0] = v7;
  STACK[0x2818] = STACK[0x1AB8];
  STACK[0x2810] = STACK[0x1A38];
  STACK[0x2808] = v12;
  STACK[0x3678] = STACK[0x3128];
  STACK[0x3518] = STACK[0x3208];
  STACK[0x2800] = v31;
  STACK[0x27F8] = STACK[0x1AF0];
  STACK[0x27F0] = v11;
  STACK[0x27E8] = v5;
  STACK[0x27E0] = v6;
  v32 = STACK[0x35F0];
  STACK[0x27D8] = v30;
  STACK[0x27D0] = STACK[0x1B10];
  STACK[0x2EC0] = v28;
  v33 = STACK[0x3008];
  STACK[0x27C8] = STACK[0x1A90];
  STACK[0x3680] = STACK[0x3168];
  STACK[0x2EA8] = v14;
  STACK[0x3510] = STACK[0x3200];
  STACK[0x3630] = v32;
  STACK[0x3508] = STACK[0x3210];
  STACK[0x3628] = STACK[0x3120];
  STACK[0x3500] = STACK[0x3218];
  STACK[0x3648] = STACK[0x3150];
  if ((STACK[0x292C] & 0x10) == 0)
  {
    STACK[0x2D68] = STACK[0x2E30];
    STACK[0x2E18] = STACK[0x30B0];
    STACK[0x3018] = STACK[0x2BC0];
    STACK[0x2C70] = STACK[0x2930];
    STACK[0x30A0] = STACK[0x2BC8];
    STACK[0x2E10] = STACK[0x30B8];
    STACK[0x2D60] = STACK[0x2E28];
    STACK[0x2E08] = STACK[0x30C0];
    STACK[0x2D58] = STACK[0x2CF8];
    STACK[0x2E00] = STACK[0x30C8];
    STACK[0x2C68] = STACK[0x2938];
    STACK[0x2C60] = STACK[0x2940];
    STACK[0x2C58] = STACK[0x2948];
    STACK[0x2DF8] = STACK[0x30D0];
    STACK[0x2D50] = STACK[0x2D00];
    STACK[0x2C50] = STACK[0x2950];
    STACK[0x2C48] = STACK[0x2958];
    STACK[0x2DF0] = STACK[0x30D8];
    STACK[0x3020] = STACK[0x2BD0];
    STACK[0x2DE8] = STACK[0x30E0];
    STACK[0x3010] = STACK[0x2BD8];
    STACK[0x2DE0] = STACK[0x3A98];
    v34 = STACK[0x3168];
    STACK[0x15E8] = STACK[0x3168];
    STACK[0x15F0] = v34;
    STACK[0x2D48] = STACK[0x2E38];
    STACK[0x2DD8] = v33;
    v35 = STACK[0x3128];
    STACK[0x38B0] = STACK[0x3128];
    STACK[0x15C0] = v35;
    STACK[0x15E0] = v35;
    v36 = STACK[0x3150];
    STACK[0x3140] = STACK[0x3150];
    STACK[0x1580] = v36;
    STACK[0x15D8] = v36;
    STACK[0x2C40] = STACK[0x2968];
    STACK[0x2A58] = STACK[0x3688];
    STACK[0x3880] = STACK[0x2978];
    STACK[0x2C38] = STACK[0x2970];
    v37 = STACK[0x3170];
    STACK[0x3138] = STACK[0x3170];
    STACK[0x1588] = v37;
    STACK[0x15B8] = v37;
    v38 = STACK[0x3660];
    STACK[0x1600] = STACK[0x3660];
    STACK[0x1568] = v38;
    v39 = STACK[0x3650];
    STACK[0x15F8] = STACK[0x3650];
    STACK[0x15A8] = v39;
    STACK[0x3158] = v39;
    v40 = STACK[0x3120];
    STACK[0x15B0] = STACK[0x3120];
    STACK[0x3148] = v40;
    STACK[0x15A0] = v40;
    STACK[0x2D40] = STACK[0x2E40];
    STACK[0x2D38] = STACK[0x2E48];
    STACK[0x2C30] = STACK[0x2980];
    v41 = STACK[0x3668];
    STACK[0x1590] = STACK[0x3668];
    STACK[0x1598] = v41;
    v42 = STACK[0x3160];
    STACK[0x30A8] = STACK[0x3160];
    STACK[0x1578] = v42;
    STACK[0x15D0] = v42;
    STACK[0x2DD0] = STACK[0x2EA0];
    LODWORD(STACK[0xEF4]) = 91;
    STACK[0x3998] = 15;
    v43 = STACK[0x1A10];
    STACK[0x1860] = STACK[0x1A10];
    v44 = STACK[0x1A40];
    STACK[0x1850] = STACK[0x1A40];
    v45 = STACK[0xE38];
    STACK[0x39E0] = STACK[0xE38];
    STACK[0x1608] = v32;
    v46 = STACK[0x1A50];
    STACK[0x3A18] = STACK[0x1A50];
    v47 = STACK[0xE50];
    STACK[0x18D0] = STACK[0xE50];
    STACK[0x1830] = v44;
    v48 = STACK[0xE40];
    STACK[0x1350] = STACK[0xE40];
    v49 = STACK[0xE58];
    STACK[0x3068] = STACK[0xE58];
    STACK[0x1338] = v45;
    v50 = STACK[0x1A20];
    STACK[0x1340] = STACK[0x1A20];
    STACK[0x2D30] = v47;
    STACK[0x3098] = v48;
    v51 = STACK[0xE30];
    STACK[0x1358] = STACK[0xE30];
    v52 = STACK[0xE20];
    STACK[0x3060] = STACK[0xE20];
    STACK[0x1310] = v52;
    STACK[0x2D78] = v50;
    STACK[0x1330] = v45;
    STACK[0x39D8] = v50;
    v53 = STACK[0x1A60];
    STACK[0x18C8] = STACK[0x1A60];
    v54 = STACK[0x1A30];
    STACK[0x39F8] = STACK[0x1A30];
    v55 = STACK[0xE28];
    STACK[0x1348] = STACK[0xE28];
    STACK[0x2FF8] = v51;
    STACK[0x1320] = v46;
    v56 = STACK[0xE48];
    STACK[0x3100] = STACK[0xE48];
    v57 = STACK[0x1A58];
    STACK[0x1858] = STACK[0x1A58];
    STACK[0x3A38] = v45;
    v58 = STACK[0x1A48];
    STACK[0x2CF0] = STACK[0x1A48];
    v59 = STACK[0x1A28];
    STACK[0x2D90] = STACK[0x1A28];
    v60 = STACK[0x1A38];
    STACK[0x1840] = STACK[0x1A38];
    STACK[0x3A08] = v51;
    STACK[0x17F8] = v59;
    STACK[0x2FE8] = v46;
    STACK[0x2D18] = v53;
    STACK[0x1308] = v54;
    STACK[0x3090] = v55;
    v61 = STACK[0x1A68];
    STACK[0x1848] = STACK[0x1A68];
    v62 = STACK[0x1A70];
    STACK[0x18C0] = STACK[0x1A70];
    STACK[0x39C0] = v46;
    STACK[0x1810] = v57;
    STACK[0x1328] = v51;
    v63 = STACK[0x1A08];
    STACK[0x2D88] = STACK[0x1A08];
    STACK[0x2FE0] = v54;
    STACK[0x2CE8] = v48;
    STACK[0x3A10] = v55;
    STACK[0x2FF0] = v45;
    STACK[0x1818] = v47;
    STACK[0x12F8] = v49;
    STACK[0x1300] = v55;
    STACK[0x3A00] = v56;
    STACK[0x39E8] = v58;
    STACK[0x17F0] = v43;
    STACK[0x12E0] = v49;
    STACK[0x12E8] = v52;
    STACK[0x2C28] = v43;
    v64 = STACK[0x3130];
    STACK[0x15C8] = STACK[0x3130];
    STACK[0x12D8] = v58;
    STACK[0x2D28] = v57;
    STACK[0x1570] = STACK[0x35F0];
    STACK[0x12D0] = v58;
    STACK[0x17E8] = v61;
    STACK[0x2D20] = v62;
    STACK[0x2D80] = v61;
    STACK[0x39B8] = v52;
    STACK[0x12F0] = v46;
    v65 = STACK[0x1A18];
    STACK[0x1838] = STACK[0x1A18];
    STACK[0x39B0] = v56;
    STACK[0x12B8] = v50;
    STACK[0x2C20] = v60;
    STACK[0x12C8] = v48;
    STACK[0x39F0] = v49;
    STACK[0x2C10] = v65;
    STACK[0x17E0] = v59;
    STACK[0x12C0] = v56;
    STACK[0x17D8] = v62;
    STACK[0x2E20] = v44;
    STACK[0x3150] = v55;
    STACK[0x12B0] = v56;
    STACK[0x17D0] = v60;
    STACK[0x2CE0] = v48;
    STACK[0x1560] = v64;
    STACK[0x1800] = v63;
    STACK[0x1808] = v63;
    STACK[0x39C8] = v52;
    STACK[0x39A8] = v49;
    STACK[0x2FD8] = v58;
    STACK[0x2C18] = v50;
    STACK[0x1828] = v53;
    STACK[0x1318] = v54;
    STACK[0x1820] = v65;
    STACK[0x39A0] = v54;
    JUMPOUT(0x100065BFCLL);
  }
  JUMPOUT(0x10004F2B8);
}

void sub_1000550A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;

  v13 = v12;
  v14 = ((a12 & 0x876DDF7E) - 91) & (*(unsigned __int8 *)(STACK[0x3AB8] + STACK[0x1FB8]) ^ LODWORD(STACK[0x292C]));
  LODWORD(STACK[0xC5C]) = 97;
  STACK[0x3AB0] = 33;
  LODWORD(STACK[0x3110]) = 98;
  v15 = STACK[0x1A20];
  v16 = STACK[0x1758];
  STACK[0x3118] = STACK[0x1758];
  STACK[0x3108] = STACK[0x1B08];
  STACK[0x35D0] = STACK[0x3948];
  STACK[0x3000] = STACK[0x3978];
  v17 = STACK[0x1A50];
  STACK[0x2FD0] = STACK[0x1A50];
  STACK[0x2F20] = v16;
  v18 = STACK[0x1A48];
  STACK[0x2D08] = STACK[0x1A48];
  STACK[0x35C8] = STACK[0x3960];
  STACK[0x35C0] = STACK[0x3950];
  STACK[0x35D8] = STACK[0x3958];
  v19 = STACK[0xE58];
  STACK[0x2FC8] = STACK[0xE58];
  v20 = STACK[0x1A40];
  STACK[0x2FC0] = STACK[0x1A40];
  STACK[0x2F88] = STACK[0x3980];
  v21 = STACK[0xE50];
  STACK[0x2F80] = STACK[0xE50];
  v22 = STACK[0xE40];
  STACK[0x2F78] = STACK[0xE40];
  v23 = STACK[0xE20];
  STACK[0x2F70] = STACK[0xE20];
  v24 = STACK[0x1768];
  STACK[0x2F18] = STACK[0x1768];
  STACK[0x35E8] = STACK[0x3968];
  STACK[0x2F68] = STACK[0x1AC8];
  STACK[0x2F60] = STACK[0x1B18];
  STACK[0x3AC8] = v23;
  v25 = STACK[0x1750];
  STACK[0x2CD8] = STACK[0x1750];
  STACK[0x2F58] = STACK[0x1AA0];
  STACK[0x2F50] = STACK[0x1AD8];
  STACK[0x2F48] = STACK[0x3988];
  v26 = STACK[0x1A18];
  STACK[0x2F40] = STACK[0x1A18];
  v27 = STACK[0xE30];
  STACK[0x2F38] = STACK[0xE30];
  STACK[0x3640] = STACK[0x3160];
  v28 = STACK[0x1720];
  STACK[0x3AA0] = STACK[0x1720];
  v29 = STACK[0xE48];
  STACK[0x2F30] = STACK[0xE48];
  STACK[0x2F28] = STACK[0x1B00];
  v30 = STACK[0x1A30];
  STACK[0x2B48] = STACK[0x1A30];
  STACK[0x35B8] = STACK[0x3970];
  STACK[0x2B40] = STACK[0x1AD0];
  v31 = STACK[0x1A28];
  STACK[0x2B38] = STACK[0x1A28];
  v32 = STACK[0x1730];
  STACK[0x2F10] = STACK[0x1730];
  STACK[0x3638] = STACK[0x3130];
  STACK[0x2CD0] = v19;
  v33 = STACK[0x1760];
  STACK[0x2B30] = STACK[0x1760];
  STACK[0x2EF0] = v17;
  STACK[0x35B0] = STACK[0x3990];
  STACK[0x2B28] = v17;
  v34 = STACK[0x1A60];
  STACK[0x2B20] = STACK[0x1A60];
  STACK[0x2AF0] = v25;
  v35 = STACK[0x1738];
  STACK[0x2F08] = STACK[0x1738];
  v36 = STACK[0xE28];
  STACK[0x2AE8] = STACK[0xE28];
  STACK[0x3AA8] = v30;
  STACK[0x2AE0] = v31;
  v37 = STACK[0x1A08];
  STACK[0x2AD8] = STACK[0x1A08];
  STACK[0x2AD0] = STACK[0x1AE0];
  STACK[0x2AC8] = v30;
  STACK[0x2AC0] = STACK[0x1AC0];
  STACK[0x28F8] = v32;
  STACK[0x35A8] = STACK[0x3938];
  v38 = STACK[0xE38];
  STACK[0x28F0] = STACK[0xE38];
  STACK[0x28E8] = STACK[0x1A98];
  STACK[0x28E0] = v19;
  STACK[0x28D8] = v37;
  STACK[0x28D0] = v23;
  v39 = STACK[0x1728];
  STACK[0x28C8] = STACK[0x1728];
  STACK[0x2EC8] = v15;
  STACK[0x28C0] = STACK[0x1AB0];
  STACK[0x28B8] = v34;
  STACK[0x35A0] = STACK[0x3928];
  STACK[0x28B0] = STACK[0x1AE8];
  STACK[0x2EF8] = v39;
  STACK[0x28A8] = v35;
  STACK[0x28A0] = v18;
  STACK[0x3598] = STACK[0x3940];
  STACK[0x2890] = v29;
  STACK[0x3590] = STACK[0x38B8];
  STACK[0x3658] = STACK[0x3170];
  STACK[0x3588] = STACK[0x3930];
  STACK[0x2ED8] = v38;
  v40 = STACK[0x1A70];
  STACK[0x2888] = STACK[0x1A70];
  STACK[0x2880] = v24;
  STACK[0x2898] = STACK[0x38F0];
  STACK[0x3580] = STACK[0x3918];
  STACK[0x3578] = STACK[0x3920];
  STACK[0x2F00] = v33;
  v41 = STACK[0x1A10];
  STACK[0x2878] = STACK[0x1A10];
  v42 = STACK[0x1718];
  STACK[0x2870] = STACK[0x1718];
  STACK[0x2868] = v41;
  STACK[0x2860] = v36;
  STACK[0x2EE0] = STACK[0x1748];
  STACK[0x3570] = STACK[0x38C0];
  STACK[0x3568] = STACK[0x38C8];
  STACK[0x3560] = STACK[0x38D0];
  STACK[0x3558] = STACK[0x38D8];
  v43 = STACK[0x1740];
  STACK[0x2EE8] = STACK[0x1740];
  v44 = STACK[0x1A58];
  STACK[0x2858] = STACK[0x1A58];
  STACK[0x3550] = STACK[0x38E0];
  STACK[0x3548] = STACK[0x38F8];
  STACK[0x2EB8] = v36;
  STACK[0x3540] = STACK[0x3900];
  STACK[0x2850] = v22;
  STACK[0x2848] = v43;
  STACK[0x2840] = v40;
  STACK[0x3538] = STACK[0x38A8];
  v45 = STACK[0x1A68];
  STACK[0x2838] = STACK[0x1A68];
  STACK[0x3530] = STACK[0x38E8];
  STACK[0x3528] = STACK[0x3908];
  STACK[0x3520] = STACK[0x3910];
  STACK[0x2830] = STACK[0x3660];
  STACK[0x2828] = v28;
  STACK[0x2ED0] = v27;
  STACK[0x2820] = STACK[0x1B20];
  STACK[0x2EB0] = v22;
  STACK[0x2818] = STACK[0x1AB8];
  STACK[0x2810] = STACK[0x1A38];
  STACK[0x2808] = v27;
  STACK[0x3678] = STACK[0x3128];
  STACK[0x3518] = STACK[0x3208];
  STACK[0x2800] = v45;
  STACK[0x27F8] = STACK[0x1AF0];
  STACK[0x27F0] = v26;
  STACK[0x27E8] = v20;
  STACK[0x27E0] = v21;
  STACK[0x27D8] = v44;
  STACK[0x27D0] = STACK[0x1B10];
  STACK[0x2EC0] = v42;
  STACK[0x27C8] = STACK[0x1A90];
  STACK[0x3680] = STACK[0x3168];
  STACK[0x2EA8] = v29;
  STACK[0x3510] = STACK[0x3200];
  STACK[0x3630] = v13;
  STACK[0x3508] = STACK[0x3210];
  STACK[0x3628] = STACK[0x3120];
  STACK[0x3500] = STACK[0x3218];
  STACK[0x3648] = STACK[0x3150];
  if ((_BYTE)v14)
  {
    STACK[0x33D0] = STACK[0xE58];
    STACK[0x33C0] = STACK[0xE50];
    STACK[0x3418] = STACK[0xE40];
    STACK[0x3410] = STACK[0xE20];
    STACK[0x3400] = STACK[0xE30];
    STACK[0x3408] = STACK[0xE48];
    STACK[0x33E8] = STACK[0x1A28];
    STACK[0x33C8] = STACK[0x1A50];
    STACK[0x33E0] = STACK[0x1A60];
    STACK[0x33F8] = STACK[0xE28];
    STACK[0x33D8] = STACK[0x1A08];
    STACK[0x33F0] = STACK[0x1A30];
    STACK[0x33B8] = STACK[0xE38];
    STACK[0x33A0] = STACK[0x1A10];
    STACK[0x3398] = STACK[0x1A58];
    STACK[0x3390] = STACK[0x1A70];
    STACK[0x3388] = STACK[0x1A68];
    STACK[0x3380] = STACK[0x1A38];
    STACK[0x3378] = STACK[0x1A18];
    STACK[0x3370] = STACK[0x1A40];
    STACK[0x33B0] = STACK[0x1A48];
    STACK[0x33A8] = STACK[0x1A20];
    JUMPOUT(0x10007A29CLL);
  }
  JUMPOUT(0x10004F2B8);
}

void sub_1000554A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;

  LODWORD(STACK[0xEF4]) = 91;
  STACK[0x3AB0] = 33;
  LODWORD(STACK[0x3110]) = 93;
  v6 = STACK[0xEA0];
  v7 = STACK[0xE78];
  STACK[0x3118] = STACK[0xE78];
  v8 = STACK[0xDE0];
  STACK[0x3108] = STACK[0xDE0];
  STACK[0x35D0] = STACK[0x3948];
  STACK[0x3000] = STACK[0x3978];
  v9 = STACK[0xE88];
  STACK[0x2FD0] = STACK[0xE88];
  STACK[0x2F20] = v7;
  STACK[0x3128] = STACK[0x3678];
  v10 = STACK[0xE60];
  STACK[0x2D08] = STACK[0xE60];
  STACK[0x35C8] = STACK[0x3960];
  STACK[0x35C0] = STACK[0x3950];
  STACK[0x3170] = STACK[0x3658];
  STACK[0x35D8] = STACK[0x3958];
  v11 = STACK[0xE90];
  STACK[0x2FC8] = STACK[0xE90];
  v12 = STACK[0xDD8];
  STACK[0x2FC0] = STACK[0xDD8];
  STACK[0x2F88] = STACK[0x3980];
  v13 = STACK[0xDC8];
  STACK[0x2F80] = STACK[0xDC8];
  v14 = STACK[0xE98];
  STACK[0x2F78] = STACK[0xE98];
  v15 = STACK[0x3498];
  STACK[0x3130] = STACK[0x3498];
  v16 = STACK[0xEB0];
  STACK[0x2F70] = STACK[0xEB0];
  STACK[0x3160] = STACK[0x3640];
  v17 = STACK[0xE80];
  STACK[0x2F18] = STACK[0xE80];
  STACK[0x35E8] = STACK[0x3968];
  v18 = STACK[0x3350];
  STACK[0x2F68] = STACK[0x3350];
  v19 = STACK[0x3620];
  STACK[0x2F60] = STACK[0x3620];
  STACK[0x3AC8] = v16;
  STACK[0x2CD8] = v6;
  STACK[0x2F58] = STACK[0x3668];
  STACK[0x2F50] = STACK[0x3660];
  STACK[0x2F48] = STACK[0x3988];
  v20 = STACK[0xDF0];
  STACK[0x2F40] = STACK[0xDF0];
  STACK[0x2F38] = v7;
  STACK[0x3120] = v19;
  v21 = STACK[0xEA8];
  STACK[0x3AA0] = STACK[0xEA8];
  STACK[0x2F30] = v17;
  STACK[0x2F28] = STACK[0x3678];
  STACK[0x2B48] = v21;
  STACK[0x35B8] = STACK[0x3970];
  v22 = STACK[0xE08];
  STACK[0x2B40] = STACK[0xE08];
  STACK[0x2B38] = v8;
  v23 = STACK[0xE70];
  STACK[0x2F10] = STACK[0xE70];
  STACK[0x3638] = v15;
  STACK[0x2CD0] = v11;
  STACK[0x2B30] = v16;
  STACK[0x2EF0] = v9;
  STACK[0x35B0] = STACK[0x3990];
  STACK[0x2B28] = v9;
  v24 = STACK[0xE18];
  STACK[0x2B20] = STACK[0xE18];
  STACK[0x2AF0] = v6;
  STACK[0x2F08] = v9;
  v25 = STACK[0xE68];
  STACK[0x2AE8] = STACK[0xE68];
  STACK[0x3AA8] = v21;
  STACK[0x2AE0] = v8;
  v26 = STACK[0xDF8];
  STACK[0x2AD8] = STACK[0xDF8];
  STACK[0x2AD0] = v26;
  STACK[0x2AC8] = v21;
  v27 = STACK[0x3358];
  STACK[0x2AC0] = STACK[0x3358];
  STACK[0x28F8] = v23;
  STACK[0x35A8] = STACK[0x3938];
  STACK[0x28F0] = v23;
  STACK[0x28E8] = v13;
  STACK[0x28E0] = v11;
  STACK[0x28D8] = v26;
  STACK[0x28D0] = v16;
  STACK[0x28C8] = v14;
  STACK[0x2EC8] = v6;
  STACK[0x28C0] = v15;
  STACK[0x28B8] = v24;
  STACK[0x35A0] = STACK[0x3928];
  STACK[0x28B0] = STACK[0x3650];
  STACK[0x2EF8] = v14;
  STACK[0x28A8] = v9;
  STACK[0x28A0] = v10;
  STACK[0x3598] = STACK[0x3940];
  STACK[0x2890] = v17;
  STACK[0x3590] = STACK[0x38B8];
  STACK[0x3588] = STACK[0x3930];
  STACK[0x2ED8] = v23;
  v28 = STACK[0xDE8];
  STACK[0x2888] = STACK[0xDE8];
  STACK[0x2880] = v17;
  STACK[0x2898] = STACK[0x38F0];
  STACK[0x3580] = STACK[0x3918];
  STACK[0x3578] = STACK[0x3920];
  STACK[0x2F00] = v16;
  v29 = STACK[0xE10];
  STACK[0x2878] = STACK[0xE10];
  STACK[0x2870] = v10;
  STACK[0x2868] = v29;
  STACK[0x2860] = v25;
  STACK[0x2EE0] = v25;
  STACK[0x3570] = STACK[0x38C0];
  STACK[0x3568] = STACK[0x38C8];
  STACK[0x3560] = STACK[0x38D0];
  STACK[0x3558] = STACK[0x38D8];
  STACK[0x2EE8] = v11;
  v30 = STACK[0xDD0];
  STACK[0x2858] = STACK[0xDD0];
  STACK[0x3550] = STACK[0x38E0];
  STACK[0x3548] = STACK[0x38F8];
  STACK[0x2EB8] = v25;
  STACK[0x3540] = STACK[0x3900];
  STACK[0x2850] = v14;
  STACK[0x2848] = v11;
  STACK[0x3150] = v18;
  STACK[0x2840] = v28;
  STACK[0x3538] = STACK[0x38A8];
  v31 = STACK[0xE00];
  STACK[0x2838] = STACK[0xE00];
  STACK[0x3168] = v27;
  STACK[0x3530] = STACK[0x38E8];
  STACK[0x3528] = STACK[0x3908];
  STACK[0x3520] = STACK[0x3910];
  STACK[0x2830] = STACK[0x3660];
  STACK[0x2828] = v21;
  STACK[0x2ED0] = v7;
  STACK[0x2820] = v29;
  STACK[0x2EB0] = v14;
  STACK[0x2818] = STACK[0x3658];
  STACK[0x2810] = v22;
  STACK[0x2808] = v7;
  STACK[0x3518] = v5;
  STACK[0x2800] = v31;
  STACK[0x27F8] = v31;
  STACK[0x27F0] = v20;
  STACK[0x27E8] = v12;
  STACK[0x27E0] = v13;
  STACK[0x27D8] = v30;
  STACK[0x27D0] = v24;
  STACK[0x2EC0] = v10;
  STACK[0x27C8] = v30;
  STACK[0x3680] = v27;
  STACK[0x2EA8] = v17;
  STACK[0x3510] = a5;
  STACK[0x3630] = STACK[0x34A8];
  STACK[0x3508] = STACK[0x3210];
  STACK[0x3628] = v19;
  v32 = STACK[0x34A8];
  STACK[0x3500] = STACK[0x3218];
  STACK[0x3648] = v18;
  if ((STACK[0x292C] & 8) != 0)
  {
    STACK[0x3110] = STACK[0x3948];
    STACK[0x3648] = STACK[0x3978];
    STACK[0x3100] = STACK[0x3960];
    STACK[0x30A0] = STACK[0x3958];
    STACK[0x3628] = STACK[0x3980];
    STACK[0x3630] = STACK[0x3988];
    STACK[0x3998] = STACK[0x3970];
    STACK[0x3108] = STACK[0x3940];
    STACK[0x3880] = STACK[0x38B8];
    STACK[0x3120] = STACK[0x3930];
    STACK[0x3638] = STACK[0x38F0];
    STACK[0x3118] = STACK[0x3918];
    STACK[0x3018] = STACK[0x3920];
    STACK[0x2F40] = STACK[0x38C0];
    STACK[0x2FD8] = STACK[0x38C8];
    STACK[0x2FD0] = STACK[0x38D0];
    STACK[0x2FC8] = STACK[0x38D8];
    STACK[0x2F88] = STACK[0x38E0];
    STACK[0x2F80] = STACK[0x38F8];
    STACK[0x2F78] = STACK[0x3900];
    STACK[0x2F70] = STACK[0x38A8];
    STACK[0x2F60] = STACK[0x38E8];
    STACK[0x2F58] = STACK[0x3908];
    STACK[0x2F50] = STACK[0x3910];
    STACK[0x2F48] = v5;
    STACK[0x3680] = STACK[0x3210];
    STACK[0x2F38] = STACK[0x3218];
    LODWORD(STACK[0x3AC8]) = 92;
    v33 = STACK[0xE90];
    STACK[0x39F0] = STACK[0xE90];
    v34 = STACK[0xEA0];
    STACK[0x2D78] = STACK[0xEA0];
    STACK[0x34F8] = STACK[0x3678];
    v35 = STACK[0xE70];
    STACK[0x3A38] = STACK[0xE70];
    STACK[0x34E8] = STACK[0x3658];
    STACK[0x33D0] = v33;
    STACK[0x3128] = STACK[0x1A98];
    v36 = STACK[0xDC8];
    STACK[0x33C0] = STACK[0xDC8];
    v37 = STACK[0xE98];
    STACK[0x3418] = STACK[0xE98];
    STACK[0x34F0] = STACK[0x3498];
    v38 = STACK[0xEB0];
    STACK[0x3410] = STACK[0xEB0];
    STACK[0x3140] = STACK[0x1AC8];
    STACK[0x3AA8] = STACK[0x1B20];
    STACK[0x34D8] = STACK[0x3640];
    STACK[0x39C8] = STACK[0x1760];
    STACK[0x3158] = STACK[0x1AE8];
    v39 = STACK[0xDE8];
    STACK[0x3148] = STACK[0x1B18];
    STACK[0x3000] = v36;
    STACK[0x39E0] = STACK[0x1730];
    v40 = STACK[0xE78];
    STACK[0x3400] = STACK[0xE78];
    STACK[0x2CE8] = STACK[0x1728];
    STACK[0x34D0] = STACK[0x3620];
    v41 = STACK[0xE80];
    STACK[0x3408] = STACK[0xE80];
    v42 = STACK[0xE88];
    STACK[0x3A18] = STACK[0xE88];
    v43 = STACK[0xDD0];
    STACK[0x3AB0] = STACK[0xDD0];
    v44 = STACK[0xDE0];
    STACK[0x33E8] = STACK[0xDE0];
    STACK[0x2CE0] = v37;
    STACK[0x2FC0] = STACK[0x1B08];
    STACK[0x33C8] = v42;
    v45 = STACK[0xE18];
    STACK[0x33E0] = STACK[0xE18];
    STACK[0x34C0] = v32;
    v46 = STACK[0xE68];
    STACK[0x33F8] = STACK[0xE68];
    STACK[0x3130] = STACK[0x1AB0];
    STACK[0x33D8] = STACK[0xDF8];
    v47 = STACK[0xEA8];
    STACK[0x33F0] = STACK[0xEA8];
    STACK[0x3A00] = v41;
    STACK[0x33B8] = v35;
    STACK[0x3138] = STACK[0x1AB8];
    STACK[0x3A10] = STACK[0x1748];
    STACK[0x3098] = STACK[0x1A90];
    v48 = STACK[0xDF0];
    STACK[0x2FE8] = STACK[0xDF0];
    STACK[0x38B0] = STACK[0x1B00];
    STACK[0x30A8] = STACK[0x1A88];
    STACK[0x2CF0] = STACK[0x1718];
    STACK[0x3150] = v46;
    v49 = STACK[0xE10];
    STACK[0x33A0] = STACK[0xE10];
    STACK[0x3168] = STACK[0x1AF0];
    STACK[0x3398] = v43;
    STACK[0x3A08] = v40;
    STACK[0x39F8] = v47;
    STACK[0x39B0] = STACK[0x1768];
    STACK[0x34C8] = STACK[0x3350];
    STACK[0x39A8] = STACK[0x1740];
    STACK[0x3390] = v39;
    v50 = STACK[0xE00];
    STACK[0x3388] = STACK[0xE00];
    STACK[0x3360] = STACK[0x3358];
    v51 = STACK[0xDD8];
    STACK[0x3170] = STACK[0x1AD0];
    STACK[0x34E0] = STACK[0x3660];
    STACK[0x39D8] = STACK[0x1750];
    v52 = STACK[0xE08];
    STACK[0x3380] = STACK[0xE08];
    STACK[0x39A0] = STACK[0x1720];
    v53 = STACK[0xE60];
    STACK[0x39E8] = STACK[0xE60];
    STACK[0x39B8] = v38;
    STACK[0x3378] = v48;
    STACK[0x39C0] = STACK[0x1738];
    STACK[0x3370] = v51;
    STACK[0x3020] = STACK[0x1AE0];
    STACK[0x3090] = v49;
    STACK[0x3010] = v52;
    STACK[0x34B8] = STACK[0x3650];
    STACK[0x2F28] = v44;
    STACK[0x3368] = STACK[0x3668];
    STACK[0x2FF0] = v45;
    STACK[0x2F30] = v50;
    STACK[0x33B0] = v53;
    STACK[0x33A8] = v34;
    STACK[0x2F20] = STACK[0x1B10];
    JUMPOUT(0x1000772C4);
  }
  JUMPOUT(0x10004F2B8);
}

void sub_10005581C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  LODWORD(STACK[0x3A88]) = 51;
  LODWORD(STACK[0x3258]) = 102;
  STACK[0x3AB0] = 33;
  LODWORD(STACK[0x3110]) = 103;
  LODWORD(STACK[0x37C0]) = 101;
  v0 = STACK[0x1B28];
  v1 = STACK[0xEE8];
  STACK[0x3118] = STACK[0xEE8];
  v2 = STACK[0xEF8];
  STACK[0x3108] = STACK[0xEF8];
  v3 = STACK[0x1B30];
  STACK[0x35D0] = STACK[0x1B30];
  STACK[0x3000] = STACK[0x3648];
  v4 = STACK[0x1DC8];
  STACK[0x2FD0] = STACK[0x1DC8];
  STACK[0x2F20] = v1;
  STACK[0x3128] = STACK[0x34F8];
  v5 = STACK[0x1B40];
  STACK[0x2D08] = STACK[0x1B40];
  v6 = STACK[0xED0];
  STACK[0x35C8] = STACK[0xED0];
  v7 = STACK[0x1B78];
  STACK[0x35C0] = STACK[0x1B78];
  STACK[0x3170] = STACK[0x34E8];
  v8 = STACK[0x1B60];
  STACK[0x35D8] = STACK[0x1B60];
  STACK[0x2FC8] = STACK[0x33D0];
  v9 = STACK[0xF08];
  STACK[0x2FC0] = STACK[0xF08];
  v10 = STACK[0x3628];
  STACK[0x2F88] = STACK[0x3628];
  STACK[0x2F80] = STACK[0x33C0];
  STACK[0x2F78] = STACK[0x3418];
  STACK[0x3130] = STACK[0x34F0];
  STACK[0x2F70] = STACK[0x3410];
  STACK[0x3160] = STACK[0x34D8];
  v11 = STACK[0x1B38];
  STACK[0x2F18] = STACK[0x1B38];
  STACK[0x35E8] = v4;
  STACK[0x2F68] = STACK[0x3648];
  STACK[0x2F60] = v10;
  v12 = STACK[0x1B48];
  STACK[0x3AC8] = STACK[0x1B48];
  STACK[0x2CD8] = v0;
  STACK[0x2F58] = STACK[0x3668];
  STACK[0x2F50] = STACK[0x3660];
  STACK[0x2F48] = STACK[0x3630];
  v13 = STACK[0x1DD0];
  STACK[0x2F40] = STACK[0x1DD0];
  STACK[0x2F38] = STACK[0x3400];
  STACK[0x3120] = STACK[0x34D0];
  STACK[0x3AA0] = v3;
  STACK[0x2F30] = STACK[0x3408];
  STACK[0x2F28] = STACK[0x3678];
  STACK[0x2B48] = v3;
  v14 = STACK[0x1B68];
  STACK[0x35B8] = STACK[0x1B68];
  v15 = STACK[0x1B58];
  STACK[0x2B40] = STACK[0x1B58];
  STACK[0x2B38] = STACK[0x33E8];
  v16 = STACK[0xEC8];
  STACK[0x2F10] = STACK[0xEC8];
  STACK[0x2CD0] = v6;
  STACK[0x2B30] = v12;
  STACK[0x2EF0] = v4;
  STACK[0x35B0] = STACK[0x3660];
  STACK[0x2B28] = STACK[0x33C8];
  STACK[0x2B20] = STACK[0x33E0];
  STACK[0x2AF0] = v0;
  STACK[0x2F08] = v4;
  STACK[0x2AE8] = STACK[0x33F8];
  STACK[0x3AA8] = v3;
  STACK[0x2AE0] = v2;
  STACK[0x2AD8] = STACK[0x33D8];
  STACK[0x2AD0] = v7;
  STACK[0x2AC8] = STACK[0x33F0];
  v17 = STACK[0x3680];
  STACK[0x2AC0] = STACK[0x3680];
  STACK[0x28F8] = v16;
  STACK[0x35A8] = v15;
  STACK[0x28F0] = STACK[0x33B8];
  v18 = STACK[0xF10];
  STACK[0x28E8] = STACK[0xF10];
  STACK[0x28E0] = v6;
  STACK[0x28D8] = v7;
  STACK[0x28D0] = v12;
  v19 = STACK[0xEC0];
  STACK[0x28C8] = STACK[0xEC0];
  STACK[0x2EC8] = v0;
  v20 = STACK[0x3638];
  STACK[0x28C0] = STACK[0x3638];
  v21 = STACK[0xF00];
  STACK[0x28B8] = STACK[0xF00];
  STACK[0x35A0] = v12;
  v22 = STACK[0x3650];
  STACK[0x28B0] = STACK[0x3650];
  STACK[0x2EF8] = v19;
  STACK[0x28A8] = v4;
  STACK[0x28A0] = v5;
  STACK[0x3598] = v21;
  STACK[0x2890] = v11;
  STACK[0x3590] = v16;
  STACK[0x3588] = v18;
  STACK[0x2ED8] = v16;
  v23 = STACK[0x1B50];
  STACK[0x2888] = STACK[0x1B50];
  STACK[0x2880] = v11;
  STACK[0x2898] = v20;
  STACK[0x3580] = STACK[0x3668];
  STACK[0x3578] = v22;
  STACK[0x2F00] = v12;
  STACK[0x2878] = STACK[0x33A0];
  STACK[0x2870] = v5;
  v24 = STACK[0x1B70];
  STACK[0x2868] = STACK[0x1B70];
  v25 = STACK[0xEB8];
  STACK[0x2860] = STACK[0xEB8];
  STACK[0x2EE0] = v25;
  STACK[0x3570] = v23;
  STACK[0x3568] = v19;
  STACK[0x3560] = v25;
  STACK[0x3558] = v0;
  STACK[0x2EE8] = v6;
  STACK[0x2858] = STACK[0x3398];
  STACK[0x3550] = v9;
  STACK[0x3548] = v11;
  STACK[0x2EB8] = v25;
  STACK[0x3540] = v5;
  STACK[0x2850] = v19;
  STACK[0x2848] = v6;
  STACK[0x3150] = STACK[0x34C8];
  STACK[0x2840] = STACK[0x3390];
  STACK[0x3538] = STACK[0x3678];
  STACK[0x2838] = STACK[0x3388];
  STACK[0x3168] = STACK[0x3360];
  STACK[0x3530] = v2;
  STACK[0x3528] = v13;
  STACK[0x3520] = v24;
  STACK[0x2830] = STACK[0x34E0];
  STACK[0x2828] = v3;
  STACK[0x2ED0] = v1;
  STACK[0x2820] = v24;
  STACK[0x2EB0] = v19;
  STACK[0x2818] = STACK[0x3658];
  STACK[0x2810] = STACK[0x3380];
  STACK[0x2808] = v1;
  STACK[0x3518] = v1;
  STACK[0x2800] = v14;
  STACK[0x27F8] = v14;
  STACK[0x27F0] = STACK[0x3378];
  STACK[0x27E8] = STACK[0x3370];
  STACK[0x27E0] = v18;
  STACK[0x27D8] = v8;
  STACK[0x27D0] = v21;
  STACK[0x2EC0] = v5;
  STACK[0x27C8] = v8;
  v26 = STACK[0x3640];
  STACK[0x2EA8] = v11;
  STACK[0x3510] = STACK[0x3658];
  STACK[0x3508] = v17;
  STACK[0x3500] = v26;
  if ((STACK[0x292C] & 0x40) != 0)
  {
    LODWORD(STACK[0x2D74]) = STACK[0x2ABC];
    v27 = STACK[0x2238];
    STACK[0x3470] = STACK[0x2238];
    v28 = STACK[0x1B68];
    STACK[0x3288] = STACK[0x1B68];
    v29 = STACK[0xEE8];
    STACK[0x3A80] = STACK[0xEE8];
    v30 = STACK[0x1B30];
    STACK[0x35D0] = STACK[0x1B30];
    STACK[0x3348] = STACK[0x2338];
    v31 = STACK[0xEF8];
    STACK[0x3340] = STACK[0xEF8];
    v32 = STACK[0xED0];
    STACK[0x35C8] = STACK[0xED0];
    v33 = STACK[0x1B78];
    STACK[0x35C0] = STACK[0x1B78];
    v34 = STACK[0x1B48];
    STACK[0x3A78] = STACK[0x1B48];
    v35 = STACK[0x2228];
    STACK[0x32D0] = STACK[0x2228];
    v36 = STACK[0x1B60];
    STACK[0x35D8] = STACK[0x1B60];
    v37 = STACK[0xEB8];
    STACK[0x2E68] = STACK[0xEB8];
    v38 = STACK[0xF10];
    STACK[0x3480] = STACK[0xF10];
    v39 = STACK[0x2230];
    STACK[0x32C8] = STACK[0x2230];
    v40 = STACK[0xEC0];
    STACK[0x2E60] = STACK[0xEC0];
    v41 = STACK[0x1B38];
    STACK[0x3468] = STACK[0x1B38];
    v42 = STACK[0x1DC8];
    STACK[0x35E8] = STACK[0x1DC8];
    STACK[0x3330] = v30;
    STACK[0x32B8] = v42;
    v43 = STACK[0xF00];
    STACK[0x3460] = STACK[0xF00];
    STACK[0x3300] = v33;
    STACK[0x3458] = STACK[0x2330];
    STACK[0x3358] = STACK[0x1488];
    v44 = STACK[0x2208];
    STACK[0x3B20] = STACK[0x2208];
    STACK[0x3A68] = v32;
    STACK[0x32B0] = v32;
    STACK[0x35B8] = v28;
    STACK[0x3450] = STACK[0x2308];
    STACK[0x3280] = STACK[0x22F8];
    STACK[0x3350] = STACK[0x1458];
    STACK[0x35B0] = STACK[0x3660];
    v45 = STACK[0xF08];
    STACK[0x3440] = STACK[0xF08];
    v46 = STACK[0x1B40];
    STACK[0x3478] = STACK[0x1B40];
    STACK[0x3448] = STACK[0x22F0];
    v47 = STACK[0x2220];
    STACK[0x3B08] = STACK[0x2220];
    STACK[0x3328] = v47;
    STACK[0x3438] = STACK[0x2340];
    STACK[0x3320] = v29;
    v48 = STACK[0x2210];
    v49 = STACK[0x2248];
    STACK[0x3670] = STACK[0x2248];
    STACK[0x2E50] = v49;
    STACK[0x32A8] = v37;
    v50 = STACK[0x1B58];
    STACK[0x35A8] = STACK[0x1B58];
    STACK[0x3498] = STACK[0x1480];
    STACK[0x3A48] = v42;
    v51 = STACK[0x1DD0];
    STACK[0x32F8] = STACK[0x1DD0];
    v52 = STACK[0xEC8];
    STACK[0x2BB8] = STACK[0xEC8];
    STACK[0x3278] = STACK[0x1440];
    STACK[0x3318] = v40;
    v53 = STACK[0x1B50];
    STACK[0x3430] = STACK[0x1B50];
    STACK[0x35A0] = v34;
    STACK[0x3490] = STACK[0x3648];
    v54 = STACK[0x2218];
    STACK[0x3A90] = STACK[0x2218];
    STACK[0x3598] = v43;
    STACK[0x3590] = v52;
    STACK[0x3A40] = v30;
    STACK[0x3588] = v38;
    STACK[0x3270] = STACK[0x1478];
    STACK[0x3580] = STACK[0x3668];
    STACK[0x3578] = STACK[0x3650];
    v55 = STACK[0x2258];
    STACK[0x3B28] = STACK[0x2258];
    STACK[0x3570] = v53;
    STACK[0x3568] = v40;
    STACK[0x3310] = v44;
    STACK[0x3560] = v37;
    v56 = STACK[0x1B28];
    STACK[0x3558] = STACK[0x1B28];
    STACK[0x2BB0] = v41;
    STACK[0x3620] = STACK[0x1490];
    STACK[0x34A8] = STACK[0x1470];
    v57 = STACK[0x1B70];
    STACK[0x35E0] = STACK[0x1B70];
    STACK[0x3550] = v45;
    STACK[0x3548] = v41;
    STACK[0x3540] = v46;
    STACK[0x32A0] = v48;
    STACK[0x2E58] = v56;
    STACK[0x3298] = v52;
    STACK[0x3308] = v56;
    STACK[0x3538] = STACK[0x3678];
    STACK[0x3530] = v31;
    STACK[0x3608] = STACK[0x1468];
    STACK[0x3428] = STACK[0x2300];
    STACK[0x3488] = STACK[0x3630];
    STACK[0x3528] = v51;
    STACK[0x3AF0] = v39;
    STACK[0x3420] = STACK[0x2328];
    STACK[0x3520] = v57;
    STACK[0x3618] = STACK[0x3628];
    STACK[0x2BA8] = v46;
    STACK[0x3268] = STACK[0x1450];
    STACK[0x32F0] = STACK[0x2310];
    STACK[0x32E8] = v50;
    STACK[0x32E0] = v36;
    STACK[0x3518] = v29;
    STACK[0x32D8] = STACK[0x2318];
    STACK[0x3260] = STACK[0x2320];
    STACK[0x3AE8] = v35;
    STACK[0x3600] = STACK[0x1460];
    v58 = STACK[0x2250];
    STACK[0x3338] = STACK[0x2250];
    STACK[0x3290] = v34;
    STACK[0x35F8] = STACK[0x1448];
    STACK[0x3510] = STACK[0x3658];
    STACK[0x3250] = v55;
    STACK[0x3508] = STACK[0x3680];
    v59 = STACK[0x2240];
    STACK[0x32C0] = STACK[0x2240];
    STACK[0x3500] = STACK[0x3640];
    STACK[0x3248] = v54;
    STACK[0x3B00] = v58;
    STACK[0x3AD0] = v27;
    STACK[0x3B18] = v59;
    STACK[0x3610] = STACK[0x3638];
    JUMPOUT(0x10005B8F8);
  }
  JUMPOUT(0x10004F2B8);
}

void sub_100055B90()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;

  STACK[0x3AB0] = 33;
  LODWORD(STACK[0x3110]) = 108;
  LODWORD(STACK[0x37C0]) = 107;
  v0 = STACK[0x1B28];
  v1 = STACK[0x2258];
  STACK[0x3118] = STACK[0x2258];
  STACK[0x3108] = STACK[0x22F8];
  v2 = STACK[0x1B30];
  STACK[0x35D0] = STACK[0x1B30];
  STACK[0x3000] = STACK[0x3648];
  v3 = STACK[0x1DC8];
  STACK[0x2FD0] = STACK[0x1DC8];
  STACK[0x2F20] = v1;
  STACK[0x3128] = STACK[0x34F8];
  v4 = STACK[0x1B40];
  STACK[0x2D08] = STACK[0x1B40];
  v5 = STACK[0xED0];
  STACK[0x35C8] = STACK[0xED0];
  v6 = STACK[0x1B78];
  STACK[0x35C0] = STACK[0x1B78];
  STACK[0x3170] = STACK[0x34E8];
  v7 = STACK[0x1B60];
  STACK[0x35D8] = STACK[0x1B60];
  STACK[0x2FC8] = STACK[0x33D0];
  v8 = STACK[0xF08];
  STACK[0x2FC0] = STACK[0xF08];
  STACK[0x2F88] = STACK[0x3628];
  STACK[0x2F80] = STACK[0x33C0];
  STACK[0x2F78] = STACK[0x3418];
  STACK[0x3130] = STACK[0x34F0];
  STACK[0x2F70] = STACK[0x3410];
  STACK[0x3160] = STACK[0x34D8];
  v9 = STACK[0x2210];
  STACK[0x2F18] = STACK[0x2210];
  STACK[0x35E8] = v3;
  STACK[0x2F68] = STACK[0x1458];
  STACK[0x2F60] = STACK[0x1490];
  v10 = STACK[0x1B48];
  STACK[0x3AC8] = STACK[0x1B48];
  v11 = STACK[0x2220];
  STACK[0x2CD8] = STACK[0x2220];
  STACK[0x2F58] = STACK[0x1440];
  STACK[0x2F50] = STACK[0x1450];
  STACK[0x2F48] = STACK[0x3630];
  v12 = STACK[0x1DD0];
  STACK[0x2F40] = STACK[0x1DD0];
  STACK[0x2F38] = STACK[0x3400];
  STACK[0x3120] = STACK[0x34D0];
  v13 = STACK[0x2238];
  STACK[0x3AA0] = STACK[0x2238];
  STACK[0x2F30] = STACK[0x3408];
  STACK[0x2F28] = STACK[0x1460];
  STACK[0x2B48] = v2;
  v14 = STACK[0x1B68];
  STACK[0x35B8] = STACK[0x1B68];
  STACK[0x2B40] = STACK[0x2330];
  STACK[0x2B38] = STACK[0x33E8];
  v15 = STACK[0x2248];
  STACK[0x2F10] = STACK[0x2248];
  STACK[0x2CD0] = v5;
  v16 = STACK[0x2218];
  STACK[0x2B30] = STACK[0x2218];
  STACK[0x2EF0] = v3;
  STACK[0x35B0] = STACK[0x3660];
  STACK[0x2B28] = STACK[0x33C8];
  STACK[0x2B20] = STACK[0x33E0];
  STACK[0x2AF0] = v11;
  v17 = STACK[0x2240];
  STACK[0x2F08] = STACK[0x2240];
  STACK[0x2AE8] = STACK[0x33F8];
  STACK[0x3AA8] = v2;
  v18 = STACK[0xEF8];
  STACK[0x2AE0] = STACK[0xEF8];
  STACK[0x2AD8] = STACK[0x33D8];
  STACK[0x2AD0] = STACK[0x2328];
  STACK[0x2AC8] = STACK[0x33F0];
  STACK[0x2AC0] = STACK[0x1488];
  STACK[0x28F8] = v15;
  STACK[0x35A8] = STACK[0x1B58];
  STACK[0x28F0] = STACK[0x33B8];
  STACK[0x28E8] = STACK[0x22F0];
  STACK[0x28E0] = v5;
  STACK[0x28D8] = v6;
  STACK[0x28D0] = v10;
  v19 = STACK[0x2230];
  STACK[0x28C8] = STACK[0x2230];
  STACK[0x2EC8] = v0;
  STACK[0x28C0] = STACK[0x1480];
  v20 = STACK[0xF00];
  STACK[0x28B8] = STACK[0xF00];
  STACK[0x35A0] = v10;
  STACK[0x28B0] = STACK[0x1448];
  STACK[0x2EF8] = v19;
  STACK[0x28A8] = v17;
  STACK[0x28A0] = v4;
  STACK[0x3598] = v20;
  v21 = STACK[0x1B38];
  STACK[0x2890] = STACK[0x1B38];
  v22 = STACK[0xEC8];
  STACK[0x3590] = STACK[0xEC8];
  v23 = STACK[0xF10];
  STACK[0x3588] = STACK[0xF10];
  STACK[0x2ED8] = v22;
  v24 = STACK[0x1B50];
  STACK[0x2888] = STACK[0x1B50];
  STACK[0x2880] = v9;
  STACK[0x2898] = STACK[0x3638];
  STACK[0x3580] = STACK[0x3668];
  STACK[0x3578] = STACK[0x3650];
  STACK[0x2F00] = v16;
  STACK[0x2878] = STACK[0x33A0];
  v25 = STACK[0x2250];
  STACK[0x2870] = STACK[0x2250];
  v26 = STACK[0x1B70];
  STACK[0x2868] = STACK[0x1B70];
  v27 = STACK[0xEB8];
  STACK[0x2860] = STACK[0xEB8];
  STACK[0x2EE0] = STACK[0x2228];
  STACK[0x3570] = v24;
  v28 = STACK[0xEC0];
  STACK[0x3568] = STACK[0xEC0];
  STACK[0x3560] = v27;
  STACK[0x3558] = v0;
  v29 = STACK[0x2208];
  STACK[0x2EE8] = STACK[0x2208];
  STACK[0x2858] = STACK[0x3398];
  STACK[0x3550] = v8;
  STACK[0x3548] = v21;
  STACK[0x2EB8] = v27;
  STACK[0x3540] = v4;
  STACK[0x2850] = v28;
  STACK[0x2848] = v29;
  STACK[0x3150] = STACK[0x34C8];
  STACK[0x2840] = STACK[0x3390];
  STACK[0x3538] = STACK[0x3678];
  STACK[0x2838] = STACK[0x3388];
  STACK[0x3168] = STACK[0x3360];
  STACK[0x3530] = v18;
  STACK[0x3528] = v12;
  STACK[0x3520] = v26;
  STACK[0x2830] = STACK[0x34E0];
  STACK[0x2828] = v13;
  v30 = STACK[0xEE8];
  STACK[0x2ED0] = STACK[0xEE8];
  STACK[0x2820] = STACK[0x2310];
  STACK[0x2EB0] = v28;
  STACK[0x2818] = STACK[0x1468];
  STACK[0x2810] = STACK[0x3380];
  STACK[0x2808] = v30;
  STACK[0x3518] = v30;
  STACK[0x2800] = v14;
  STACK[0x27F8] = STACK[0x2320];
  STACK[0x27F0] = STACK[0x3378];
  STACK[0x27E8] = STACK[0x3370];
  STACK[0x27E0] = v23;
  STACK[0x27D8] = v7;
  STACK[0x27D0] = STACK[0x2340];
  STACK[0x2EC0] = v25;
  STACK[0x27C8] = STACK[0x2300];
  STACK[0x2EA8] = v21;
  STACK[0x3510] = STACK[0x3658];
  STACK[0x3508] = STACK[0x3680];
  STACK[0x3500] = STACK[0x3640];
  if ((STACK[0x292C] & 8) == 0)
  {
    LODWORD(STACK[0x3AC8]) = 109;
    v31 = STACK[0xEE8];
    v32 = STACK[0x1B30];
    STACK[0x3110] = STACK[0x1B30];
    v33 = STACK[0xED0];
    STACK[0x39F0] = STACK[0xED0];
    v34 = STACK[0x1B28];
    STACK[0x2D78] = STACK[0x1B28];
    STACK[0x3100] = v33;
    v35 = STACK[0x1B78];
    STACK[0x2FF8] = STACK[0x1B78];
    v36 = STACK[0xEC8];
    STACK[0x3A38] = STACK[0xEC8];
    v37 = STACK[0x3648];
    STACK[0x3350] = STACK[0x3648];
    v38 = STACK[0x1B60];
    STACK[0x30A0] = STACK[0x1B60];
    v39 = STACK[0xF10];
    STACK[0x3128] = STACK[0xF10];
    v40 = STACK[0xF08];
    STACK[0x2F10] = STACK[0xF08];
    v41 = STACK[0x3628];
    STACK[0x3620] = STACK[0x3628];
    v42 = STACK[0x1B50];
    STACK[0x2F18] = STACK[0x1B50];
    STACK[0x3140] = v37;
    v43 = STACK[0x1B70];
    STACK[0x3AA8] = STACK[0x1B70];
    v44 = STACK[0x1B48];
    STACK[0x39C8] = STACK[0x1B48];
    STACK[0x3158] = STACK[0x3650];
    STACK[0x3060] = v42;
    STACK[0x3148] = v41;
    v45 = STACK[0x1DC8];
    STACK[0x2FE0] = STACK[0x1DC8];
    STACK[0x3000] = v39;
    STACK[0x39E0] = v36;
    v46 = STACK[0xEC0];
    STACK[0x2CE8] = STACK[0xEC0];
    v47 = STACK[0x1B68];
    STACK[0x3998] = STACK[0x1B68];
    STACK[0x3A18] = v45;
    STACK[0x3AB0] = v38;
    STACK[0x2CE0] = v46;
    STACK[0x3068] = STACK[0x3660];
    v48 = STACK[0x1DD0];
    STACK[0x2F08] = STACK[0x1DD0];
    v49 = STACK[0xEF8];
    STACK[0x2FC0] = STACK[0xEF8];
    STACK[0x34A8] = STACK[0x3630];
    v50 = STACK[0x3638];
    STACK[0x3130] = STACK[0x3638];
    v51 = STACK[0x3680];
    v52 = STACK[0x1B58];
    v53 = STACK[0x1B38];
    STACK[0x3A00] = STACK[0x1B38];
    STACK[0x3138] = STACK[0x3658];
    v54 = STACK[0xEB8];
    STACK[0x3A10] = STACK[0xEB8];
    STACK[0x3098] = v38;
    STACK[0x3498] = v50;
    v55 = STACK[0xF00];
    STACK[0x3108] = STACK[0xF00];
    STACK[0x2FE8] = v48;
    STACK[0x38B0] = STACK[0x3678];
    v56 = STACK[0x3640];
    STACK[0x30A8] = STACK[0x3640];
    STACK[0x3880] = v36;
    STACK[0x3120] = v39;
    v57 = STACK[0x1B40];
    STACK[0x2CF0] = STACK[0x1B40];
    STACK[0x3118] = STACK[0x3668];
    STACK[0x3150] = v54;
    STACK[0x3168] = v47;
    STACK[0x2F40] = v42;
    STACK[0x2FD8] = v46;
    STACK[0x2FD0] = v54;
    STACK[0x2FC8] = v34;
    STACK[0x3A08] = v31;
    STACK[0x39F8] = v32;
    STACK[0x2F88] = v40;
    STACK[0x39B0] = v53;
    STACK[0x2F80] = v53;
    STACK[0x2F78] = v57;
    STACK[0x39A8] = v33;
    STACK[0x2F70] = STACK[0x3678];
    STACK[0x2F60] = v49;
    STACK[0x2F58] = v48;
    STACK[0x3170] = v52;
    STACK[0x2F50] = v43;
    STACK[0x39D8] = v34;
    STACK[0x39A0] = v32;
    STACK[0x2F48] = v31;
    STACK[0x39E8] = v57;
    STACK[0x39B8] = v44;
    STACK[0x39C0] = v45;
    STACK[0x3020] = v35;
    STACK[0x3090] = v43;
    STACK[0x3010] = v52;
    STACK[0x2F28] = v49;
    STACK[0x2FF0] = v55;
    STACK[0x2F30] = v47;
    STACK[0x3358] = v51;
    STACK[0x2F38] = v56;
    STACK[0x2F20] = v55;
    JUMPOUT(0x1000772C4);
  }
  JUMPOUT(0x10004F2B8);
}

void sub_100079B7C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;

  v1 = STACK[0x3168];
  v2 = STACK[0x3120];
  v3 = STACK[0x3128];
  v4 = STACK[0x3160];
  v5 = STACK[0x3150];
  v6 = STACK[0x3130];
  v7 = 24;
  if ((STACK[0x292C] & 4) != 0)
    v7 = 187;
  if ((*(unsigned __int8 *)(STACK[0x3AB8] + v7) ^ 0x61 ^ ((*(unsigned __int8 *)(STACK[0x3AB8] + v7) ^ 0x61u) >> 4)) == 0x34)
  {
    STACK[0x3470] = STACK[0x1A30];
    v8 = v5;
    v9 = STACK[0xE58];
    v10 = STACK[0x1A08];
    STACK[0x35D8] = STACK[0x1A58];
    v11 = STACK[0x1A50];
    v12 = v0;
    v13 = STACK[0x1A68];
    v14 = STACK[0x1A38];
    v15 = STACK[0xE20];
    v16 = STACK[0x1A60];
    v17 = STACK[0xE38];
    v18 = STACK[0xE50];
    v19 = v6;
    v20 = STACK[0x1A70];
    v21 = STACK[0xE40];
    v22 = STACK[0xE28];
    STACK[0x3B08] = STACK[0x1A20];
    v23 = STACK[0x1A40];
    v24 = STACK[0xE48];
    v25 = STACK[0x1A48];
    v26 = STACK[0x1A28];
    v27 = STACK[0x1A18];
    STACK[0x35E0] = STACK[0x1A10];
    STACK[0x3A80] = STACK[0xE30];
    STACK[0x3658] = STACK[0x3170];
    STACK[0x3640] = v4;
    STACK[0x3670] = v17;
    STACK[0x3A78] = v15;
    STACK[0x3478] = v25;
    STACK[0x3678] = v3;
    STACK[0x32F8] = v27;
    STACK[0x3680] = v1;
    STACK[0x3638] = v6;
    STACK[0x3630] = v12;
    STACK[0x3628] = v2;
    LODWORD(STACK[0x3A88]) = 51;
    LODWORD(STACK[0x3258]) = 111;
    LODWORD(STACK[0x2D74]) = STACK[0x2ABC];
    v28 = STACK[0x3470];
    STACK[0x35D0] = STACK[0x3470];
    STACK[0x2E68] = v22;
    STACK[0x2E60] = v21;
    STACK[0x3330] = v28;
    STACK[0x32B8] = v11;
    STACK[0x3300] = v10;
    STACK[0x3358] = v1;
    STACK[0x3B20] = v9;
    STACK[0x3A68] = v9;
    STACK[0x32B0] = v9;
    STACK[0x35B8] = v13;
    STACK[0x3280] = v26;
    STACK[0x3350] = v5;
    v29 = STACK[0x3660];
    STACK[0x35B0] = STACK[0x3660];
    STACK[0x3440] = v23;
    STACK[0x3448] = v18;
    STACK[0x3648] = v5;
    v30 = STACK[0x3B08];
    STACK[0x3328] = STACK[0x3B08];
    STACK[0x3438] = v16;
    v31 = STACK[0x3A80];
    STACK[0x3320] = STACK[0x3A80];
    STACK[0x2E50] = v17;
    STACK[0x32A8] = v22;
    STACK[0x35A8] = v14;
    STACK[0x3498] = v6;
    STACK[0x3A48] = v11;
    STACK[0x2BB8] = v17;
    v32 = STACK[0x3668];
    STACK[0x3278] = STACK[0x3668];
    STACK[0x3318] = v21;
    STACK[0x3430] = v20;
    STACK[0x35A0] = v15;
    STACK[0x3490] = v8;
    STACK[0x3A90] = v15;
    STACK[0x3460] = v16;
    STACK[0x3598] = v16;
    STACK[0x3590] = v17;
    STACK[0x3A40] = v28;
    STACK[0x3480] = v18;
    STACK[0x3588] = v18;
    v33 = STACK[0x3640];
    STACK[0x3270] = STACK[0x3640];
    STACK[0x3580] = v32;
    v34 = v14;
    v35 = STACK[0x3650];
    STACK[0x3578] = STACK[0x3650];
    STACK[0x3B28] = v31;
    STACK[0x3348] = v20;
    STACK[0x3570] = v20;
    STACK[0x3568] = v21;
    STACK[0x35C8] = v9;
    STACK[0x3310] = v9;
    STACK[0x3560] = v22;
    STACK[0x3558] = v30;
    STACK[0x2BB0] = v24;
    STACK[0x3620] = v2;
    STACK[0x34A8] = v12;
    STACK[0x3450] = v23;
    STACK[0x3550] = v23;
    STACK[0x3548] = v24;
    STACK[0x3540] = v25;
    STACK[0x3468] = v24;
    STACK[0x32A0] = v24;
    STACK[0x2E58] = v30;
    STACK[0x3298] = v17;
    STACK[0x3308] = v30;
    STACK[0x3538] = v3;
    STACK[0x3340] = v26;
    STACK[0x3530] = v26;
    v36 = STACK[0x3658];
    STACK[0x3608] = STACK[0x3658];
    v37 = STACK[0x35D8];
    STACK[0x3428] = STACK[0x35D8];
    STACK[0x3488] = v12;
    STACK[0x3528] = v27;
    STACK[0x32C8] = v21;
    STACK[0x3AF0] = v21;
    STACK[0x35C0] = v10;
    STACK[0x3420] = v10;
    v38 = STACK[0x35E0];
    STACK[0x3520] = STACK[0x35E0];
    STACK[0x3618] = v2;
    STACK[0x2BA8] = v25;
    STACK[0x3268] = v29;
    STACK[0x32F0] = v38;
    STACK[0x3458] = v34;
    STACK[0x32E8] = v34;
    STACK[0x32E0] = v37;
    STACK[0x3518] = v31;
    STACK[0x32D8] = v27;
    STACK[0x3288] = v13;
    STACK[0x3260] = v13;
    STACK[0x32D0] = v22;
    STACK[0x3AE8] = v22;
    STACK[0x3600] = v3;
    STACK[0x3338] = v25;
    STACK[0x3290] = v15;
    STACK[0x35F8] = v35;
    STACK[0x3510] = v36;
    STACK[0x3250] = v31;
    STACK[0x3508] = STACK[0x3680];
    STACK[0x32C0] = v11;
    STACK[0x3500] = v33;
    STACK[0x3248] = v15;
    STACK[0x3B00] = v25;
    STACK[0x3AD0] = v28;
    STACK[0x35E8] = v11;
    STACK[0x3B18] = v11;
    STACK[0x3610] = v19;
    JUMPOUT(0x10005B8F4);
  }
  LODWORD(STACK[0xC5C]) = 109;
  LODWORD(STACK[0x3A88]) = 51;
  LODWORD(STACK[0x3258]) = 110;
  LODWORD(STACK[0x2D74]) = STACK[0x2ABC];
  v39 = STACK[0x2238];
  STACK[0x3470] = STACK[0x2238];
  v40 = STACK[0x3170];
  STACK[0x3658] = STACK[0x3170];
  v41 = STACK[0x1A68];
  STACK[0x3288] = STACK[0x1A68];
  v42 = STACK[0xE30];
  STACK[0x3A80] = STACK[0xE30];
  v43 = STACK[0x1A30];
  STACK[0x35D0] = STACK[0x1A30];
  STACK[0x3348] = STACK[0x2338];
  v44 = v5;
  STACK[0x3648] = v5;
  v45 = STACK[0x1A28];
  STACK[0x3340] = STACK[0x1A28];
  v46 = STACK[0xE58];
  STACK[0x35C8] = STACK[0xE58];
  v47 = STACK[0x1A08];
  STACK[0x35C0] = STACK[0x1A08];
  v48 = STACK[0xE20];
  STACK[0x3A78] = STACK[0xE20];
  v49 = STACK[0x2228];
  STACK[0x32D0] = STACK[0x2228];
  v50 = STACK[0x1A58];
  STACK[0x35D8] = STACK[0x1A58];
  STACK[0x3628] = v2;
  STACK[0x3678] = v3;
  STACK[0x3630] = v0;
  STACK[0x3640] = v4;
  STACK[0x3490] = v44;
  STACK[0x3638] = v6;
  STACK[0x3538] = v3;
  STACK[0x3488] = v0;
  STACK[0x3680] = v1;
  STACK[0x3618] = v2;
  STACK[0x3510] = v40;
  STACK[0x3508] = v1;
  STACK[0x3500] = v4;
  STACK[0x3610] = v6;
  v51 = STACK[0xE28];
  STACK[0x2E68] = STACK[0xE28];
  v52 = STACK[0xE50];
  STACK[0x3480] = STACK[0xE50];
  v53 = STACK[0x2230];
  STACK[0x32C8] = STACK[0x2230];
  v54 = STACK[0xE40];
  STACK[0x2E60] = STACK[0xE40];
  v55 = STACK[0xE48];
  STACK[0x3468] = STACK[0xE48];
  v56 = STACK[0x1A50];
  STACK[0x35E8] = STACK[0x1A50];
  STACK[0x3330] = v43;
  STACK[0x32B8] = v56;
  v57 = STACK[0x1A60];
  STACK[0x3460] = STACK[0x1A60];
  STACK[0x3300] = v47;
  STACK[0x3458] = STACK[0x2330];
  STACK[0x3358] = STACK[0x1488];
  v58 = STACK[0x2208];
  STACK[0x3B20] = STACK[0x2208];
  STACK[0x3A68] = v46;
  STACK[0x32B0] = v46;
  STACK[0x35B8] = v41;
  STACK[0x3450] = STACK[0x2308];
  STACK[0x3280] = STACK[0x22F8];
  STACK[0x3350] = STACK[0x1458];
  STACK[0x35B0] = STACK[0x3660];
  v59 = STACK[0x1A40];
  STACK[0x3440] = STACK[0x1A40];
  v60 = STACK[0x1A48];
  STACK[0x3478] = STACK[0x1A48];
  STACK[0x3448] = STACK[0x22F0];
  v61 = STACK[0x2220];
  STACK[0x3B08] = STACK[0x2220];
  STACK[0x3328] = v61;
  STACK[0x3438] = STACK[0x2340];
  STACK[0x3320] = v42;
  v62 = STACK[0x2210];
  v63 = STACK[0x2248];
  STACK[0x3670] = STACK[0x2248];
  STACK[0x2E50] = v63;
  STACK[0x32A8] = v51;
  v64 = STACK[0x1A38];
  STACK[0x35A8] = STACK[0x1A38];
  STACK[0x3498] = STACK[0x1480];
  STACK[0x3A48] = v56;
  v65 = STACK[0x1A18];
  STACK[0x32F8] = STACK[0x1A18];
  v66 = STACK[0xE38];
  STACK[0x2BB8] = STACK[0xE38];
  STACK[0x3278] = STACK[0x1440];
  STACK[0x3318] = v54;
  v67 = STACK[0x1A70];
  STACK[0x3430] = STACK[0x1A70];
  STACK[0x35A0] = v48;
  v68 = STACK[0x2218];
  STACK[0x3A90] = STACK[0x2218];
  STACK[0x3598] = v57;
  STACK[0x3590] = v66;
  STACK[0x3A40] = v43;
  STACK[0x3588] = v52;
  STACK[0x3270] = STACK[0x1478];
  STACK[0x3580] = STACK[0x3668];
  STACK[0x3578] = STACK[0x3650];
  v69 = STACK[0x2258];
  STACK[0x3B28] = STACK[0x2258];
  STACK[0x3570] = v67;
  STACK[0x3568] = v54;
  STACK[0x3310] = v58;
  STACK[0x3560] = v51;
  v70 = STACK[0x1A20];
  STACK[0x3558] = STACK[0x1A20];
  STACK[0x2BB0] = v55;
  STACK[0x3620] = STACK[0x1490];
  STACK[0x34A8] = STACK[0x1470];
  v71 = STACK[0x1A10];
  STACK[0x35E0] = STACK[0x1A10];
  STACK[0x3550] = v59;
  STACK[0x3548] = v55;
  STACK[0x3540] = v60;
  STACK[0x32A0] = v62;
  STACK[0x2E58] = v70;
  STACK[0x3298] = v66;
  STACK[0x3308] = v70;
  STACK[0x3530] = v45;
  STACK[0x3608] = STACK[0x1468];
  STACK[0x3428] = STACK[0x2300];
  STACK[0x3528] = v65;
  STACK[0x3AF0] = v53;
  STACK[0x3420] = STACK[0x2328];
  STACK[0x3520] = v71;
  STACK[0x2BA8] = v60;
  STACK[0x3268] = STACK[0x1450];
  STACK[0x32F0] = STACK[0x2310];
  STACK[0x32E8] = v64;
  STACK[0x32E0] = v50;
  STACK[0x3518] = v42;
  STACK[0x32D8] = STACK[0x2318];
  STACK[0x3260] = STACK[0x2320];
  STACK[0x3AE8] = v49;
  STACK[0x3600] = STACK[0x1460];
  v72 = STACK[0x2250];
  STACK[0x3338] = STACK[0x2250];
  STACK[0x3290] = v48;
  STACK[0x35F8] = STACK[0x1448];
  STACK[0x3250] = v69;
  v73 = STACK[0x2240];
  STACK[0x32C0] = STACK[0x2240];
  STACK[0x3248] = v68;
  STACK[0x3B00] = v72;
  STACK[0x3AD0] = v39;
  STACK[0x3B18] = v73;
  JUMPOUT(0x10005B8F8);
}

void sub_100079C50()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;

  v2 = STACK[0x3168];
  v3 = STACK[0x3120];
  v4 = STACK[0x3128];
  v5 = STACK[0x3160];
  v6 = STACK[0x3150];
  v7 = v1;
  v8 = STACK[0x3A98];
  v9 = STACK[0x3688];
  v10 = STACK[0x3650];
  v11 = STACK[0x3130];
  v12 = STACK[0x292C];
  STACK[0x38F0] = STACK[0x3130];
  if ((v12 & 1) == 0)
  {
    STACK[0x3948] = STACK[0x1A30];
    STACK[0x3960] = STACK[0xE58];
    STACK[0x3950] = STACK[0x1A08];
    STACK[0x3958] = STACK[0x1A58];
    STACK[0x3968] = STACK[0x1A50];
    STACK[0x34A8] = v0;
    STACK[0x3970] = STACK[0x1A68];
    STACK[0x3938] = STACK[0x1A38];
    STACK[0x3928] = STACK[0xE20];
    STACK[0x3940] = STACK[0x1A60];
    STACK[0x38B8] = STACK[0xE38];
    STACK[0x38C0] = STACK[0x1A70];
    STACK[0x38C8] = STACK[0xE40];
    STACK[0x38D0] = STACK[0xE28];
    STACK[0x38D8] = STACK[0x1A20];
    STACK[0x38E0] = STACK[0x1A40];
    STACK[0x38F8] = STACK[0xE48];
    STACK[0x3900] = STACK[0x1A48];
    STACK[0x38E8] = STACK[0x1A28];
    STACK[0x3908] = STACK[0x1A18];
    STACK[0x3910] = STACK[0x1A10];
    STACK[0x3208] = STACK[0xE30];
    STACK[0x3658] = STACK[0x3170];
    STACK[0x3358] = v2;
    JUMPOUT(0x100079D40);
  }
  STACK[0x2D68] = STACK[0x2E30];
  STACK[0x2E18] = STACK[0x30B0];
  STACK[0x38B0] = STACK[0x34F8];
  STACK[0x3138] = STACK[0x34E8];
  STACK[0x3018] = STACK[0x2BC0];
  STACK[0x2C70] = STACK[0x2930];
  STACK[0x3068] = STACK[0x33D0];
  STACK[0x30A0] = STACK[0x2BC8];
  STACK[0x2E10] = STACK[0x30B8];
  STACK[0x2D30] = STACK[0x33C0];
  STACK[0x3098] = STACK[0x3418];
  STACK[0x3130] = STACK[0x34F0];
  STACK[0x2D60] = STACK[0x2E28];
  STACK[0x3060] = STACK[0x3410];
  STACK[0x2E08] = STACK[0x30C0];
  STACK[0x30A8] = STACK[0x34D8];
  STACK[0x2D58] = STACK[0x2CF8];
  STACK[0x2E00] = STACK[0x30C8];
  STACK[0x2C68] = STACK[0x2938];
  STACK[0x2C60] = STACK[0x2940];
  STACK[0x1608] = v0;
  STACK[0x3988] = v0;
  STACK[0x2FF8] = STACK[0x3400];
  STACK[0x3148] = STACK[0x34D0];
  STACK[0x2C58] = STACK[0x2948];
  STACK[0x2DF8] = STACK[0x30D0];
  STACK[0x3100] = STACK[0x3408];
  STACK[0x2D50] = STACK[0x2D00];
  STACK[0x2D90] = STACK[0x33E8];
  v13 = STACK[0x3660];
  STACK[0x1600] = STACK[0x3660];
  STACK[0x3990] = v13;
  STACK[0x2FE8] = STACK[0x33C8];
  STACK[0x2D18] = STACK[0x33E0];
  STACK[0x2C50] = STACK[0x2950];
  STACK[0x2C48] = STACK[0x2958];
  STACK[0x35F0] = STACK[0x34C0];
  STACK[0x3090] = STACK[0x33F8];
  STACK[0x2D88] = STACK[0x33D8];
  STACK[0x2FE0] = STACK[0x33F0];
  STACK[0x2FF0] = STACK[0x33B8];
  STACK[0x2DF0] = STACK[0x30D8];
  STACK[0x3020] = STACK[0x2BD0];
  STACK[0x2DE8] = STACK[0x30E0];
  STACK[0x3010] = STACK[0x2BD8];
  STACK[0x15F8] = v10;
  STACK[0x3920] = v10;
  STACK[0x2C28] = STACK[0x33A0];
  STACK[0x2D28] = STACK[0x3398];
  STACK[0x2DE0] = v8;
  STACK[0x3140] = STACK[0x34C8];
  STACK[0x2D20] = STACK[0x3390];
  STACK[0x2D80] = STACK[0x3388];
  STACK[0x2D48] = STACK[0x2E38];
  STACK[0x2DD8] = v7;
  STACK[0x38A8] = v4;
  STACK[0x15E0] = v4;
  STACK[0x2C20] = STACK[0x3380];
  STACK[0x3978] = v6;
  STACK[0x15D8] = v6;
  STACK[0x2C40] = STACK[0x2968];
  STACK[0x2A58] = v9;
  STACK[0x2C10] = STACK[0x3378];
  STACK[0x3880] = STACK[0x2978];
  STACK[0x2C38] = STACK[0x2970];
  STACK[0x2E20] = STACK[0x3370];
  STACK[0x15B8] = STACK[0x3170];
  STACK[0x3158] = STACK[0x34B8];
  v14 = STACK[0x3668];
  STACK[0x3918] = STACK[0x3668];
  STACK[0x1598] = v14;
  STACK[0x3980] = v3;
  STACK[0x15A0] = v3;
  STACK[0x2D40] = STACK[0x2E40];
  STACK[0x2D38] = STACK[0x2E48];
  STACK[0x2C30] = STACK[0x2980];
  STACK[0x15F0] = v2;
  STACK[0x3210] = v2;
  STACK[0x2FD8] = STACK[0x33B0];
  STACK[0x2C18] = STACK[0x33A8];
  STACK[0x3218] = v5;
  STACK[0x15D0] = v5;
  STACK[0x2DD0] = STACK[0x2EA0];
  LODWORD(STACK[0xEF4]) = 114;
  LODWORD(STACK[0xC5C]) = 113;
  STACK[0x3998] = 15;
  v15 = STACK[0x1A10];
  STACK[0x1860] = STACK[0x1A10];
  STACK[0x15E8] = STACK[0x1488];
  v16 = STACK[0x1A40];
  STACK[0x1850] = STACK[0x1A40];
  v17 = STACK[0x2248];
  STACK[0x39E0] = STACK[0x2248];
  v18 = STACK[0x1A30];
  STACK[0x3948] = STACK[0x1A30];
  v19 = STACK[0x1A50];
  STACK[0x3A18] = STACK[0x1A50];
  STACK[0x18D0] = STACK[0x22F0];
  v20 = STACK[0xE58];
  STACK[0x3960] = STACK[0xE58];
  v21 = STACK[0x1A08];
  STACK[0x3950] = STACK[0x1A08];
  STACK[0x1830] = STACK[0x2308];
  v22 = STACK[0x1A58];
  STACK[0x3958] = STACK[0x1A58];
  v23 = STACK[0xE40];
  STACK[0x1350] = STACK[0xE40];
  v24 = STACK[0xE38];
  STACK[0x1338] = STACK[0xE38];
  v25 = STACK[0x2220];
  STACK[0x1340] = STACK[0x2220];
  v26 = STACK[0xE30];
  STACK[0x1358] = STACK[0xE30];
  v27 = STACK[0xE20];
  STACK[0x1310] = STACK[0xE20];
  v28 = STACK[0x1A20];
  STACK[0x2D78] = STACK[0x1A20];
  STACK[0x1330] = v17;
  STACK[0x39D8] = v25;
  v29 = STACK[0x1A60];
  STACK[0x18C8] = STACK[0x1A60];
  STACK[0x15B0] = STACK[0x1490];
  STACK[0x3968] = v19;
  STACK[0x39F8] = v18;
  v30 = STACK[0x2228];
  STACK[0x1348] = STACK[0x2228];
  STACK[0x15C0] = STACK[0x1460];
  STACK[0x1320] = v19;
  STACK[0x1858] = v22;
  v31 = STACK[0x1A68];
  STACK[0x3970] = STACK[0x1A68];
  STACK[0x3A38] = v24;
  STACK[0x15A8] = STACK[0x1448];
  v32 = STACK[0x2250];
  STACK[0x2CF0] = STACK[0x2250];
  STACK[0x1840] = STACK[0x2330];
  STACK[0x3A08] = v26;
  STACK[0x17F8] = STACK[0x22F8];
  STACK[0x1308] = v18;
  STACK[0x1848] = v31;
  STACK[0x18C0] = STACK[0x2338];
  STACK[0x1590] = STACK[0x1440];
  STACK[0x1578] = STACK[0x1478];
  v33 = STACK[0x2240];
  STACK[0x39C0] = STACK[0x2240];
  STACK[0x1810] = STACK[0x2300];
  STACK[0x1328] = STACK[0x2258];
  v34 = STACK[0x2230];
  STACK[0x2CE8] = STACK[0x2230];
  v35 = STACK[0x1A38];
  STACK[0x3938] = STACK[0x1A38];
  STACK[0x3A10] = v30;
  v36 = STACK[0xE50];
  STACK[0x1818] = STACK[0xE50];
  STACK[0x12F8] = v20;
  v37 = STACK[0xE28];
  STACK[0x1300] = STACK[0xE28];
  v38 = STACK[0xE48];
  STACK[0x3A00] = STACK[0xE48];
  v39 = STACK[0x1A48];
  STACK[0x39E8] = STACK[0x1A48];
  STACK[0x3928] = v27;
  STACK[0x3940] = v29;
  STACK[0x1588] = STACK[0x1468];
  STACK[0x38B8] = v24;
  STACK[0x3930] = v36;
  STACK[0x17F0] = STACK[0x2310];
  v40 = STACK[0x2208];
  STACK[0x12E0] = STACK[0x2208];
  v41 = STACK[0x2218];
  STACK[0x12E8] = STACK[0x2218];
  STACK[0x15C8] = v11;
  STACK[0x12D8] = v32;
  v42 = STACK[0x1A70];
  STACK[0x38C0] = STACK[0x1A70];
  STACK[0x38C8] = v23;
  STACK[0x38D0] = v37;
  STACK[0x38D8] = v28;
  STACK[0x1570] = STACK[0x1470];
  STACK[0x12D0] = v39;
  STACK[0x38E0] = v16;
  STACK[0x38F8] = v38;
  STACK[0x3900] = v39;
  STACK[0x17E8] = STACK[0x2320];
  v43 = STACK[0x1A28];
  STACK[0x38E8] = STACK[0x1A28];
  STACK[0x39B8] = v27;
  v44 = STACK[0x1A18];
  STACK[0x3908] = STACK[0x1A18];
  STACK[0x3910] = v15;
  STACK[0x12F0] = v33;
  STACK[0x1838] = STACK[0x2318];
  STACK[0x1580] = STACK[0x1458];
  v45 = STACK[0x2210];
  STACK[0x39B0] = STACK[0x2210];
  STACK[0x12B8] = v28;
  STACK[0x12C8] = v34;
  STACK[0x39F0] = v20;
  STACK[0x17E0] = v43;
  STACK[0x12C0] = v45;
  STACK[0x17D8] = v42;
  STACK[0x1568] = STACK[0x1450];
  STACK[0x3150] = v37;
  STACK[0x12B0] = v38;
  STACK[0x17D0] = v35;
  STACK[0x2CE0] = v23;
  STACK[0x1560] = STACK[0x1480];
  STACK[0x1800] = v21;
  STACK[0x1808] = STACK[0x2328];
  STACK[0x39C8] = v41;
  STACK[0x39A8] = v40;
  STACK[0x1828] = STACK[0x2340];
  v46 = STACK[0x2238];
  STACK[0x1318] = STACK[0x2238];
  STACK[0x1820] = v44;
  STACK[0x39A0] = v46;
  JUMPOUT(0x100065BFCLL);
}

void sub_10007B538()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;

  v1 = STACK[0x3A98];
  v2 = STACK[0x3688];
  v3 = STACK[0x3680];
  v4 = STACK[0x3638];
  v5 = STACK[0x3630];
  v6 = STACK[0x3650];
  if ((STACK[0x292C] & 0x80) == 0)
  {
    LODWORD(STACK[0x3A88]) = 51;
    LODWORD(STACK[0x3258]) = 101;
    LODWORD(STACK[0x2D74]) = STACK[0x2ABC];
    v7 = STACK[0x1B30];
    STACK[0x3470] = STACK[0x1B30];
    v8 = STACK[0x1B68];
    STACK[0x3288] = STACK[0x1B68];
    v9 = STACK[0xEE8];
    STACK[0x3A80] = STACK[0xEE8];
    STACK[0x35D0] = v7;
    v10 = STACK[0x1B50];
    STACK[0x3348] = STACK[0x1B50];
    v11 = STACK[0xEF8];
    STACK[0x3340] = STACK[0xEF8];
    v12 = STACK[0xED0];
    STACK[0x35C8] = STACK[0xED0];
    v13 = STACK[0x1B78];
    STACK[0x35C0] = STACK[0x1B78];
    v14 = STACK[0x1B48];
    STACK[0x3A78] = STACK[0x1B48];
    v15 = STACK[0xEB8];
    STACK[0x32D0] = STACK[0xEB8];
    v16 = STACK[0x1B60];
    STACK[0x35D8] = STACK[0x1B60];
    v17 = v16;
    STACK[0x2E68] = v15;
    v18 = STACK[0xF10];
    STACK[0x3480] = STACK[0xF10];
    v19 = STACK[0xEC0];
    STACK[0x32C8] = STACK[0xEC0];
    STACK[0x2E60] = v19;
    v20 = STACK[0x1B38];
    STACK[0x3468] = STACK[0x1B38];
    v21 = STACK[0x1DC8];
    STACK[0x35E8] = STACK[0x1DC8];
    STACK[0x3330] = v7;
    STACK[0x32B8] = v21;
    v22 = STACK[0xF00];
    STACK[0x3460] = STACK[0xF00];
    STACK[0x3300] = v13;
    v23 = STACK[0x1B58];
    STACK[0x3458] = STACK[0x1B58];
    v24 = v3;
    STACK[0x3358] = v3;
    STACK[0x3B20] = v12;
    STACK[0x3A68] = v12;
    STACK[0x32B0] = v12;
    STACK[0x35B8] = v8;
    v25 = STACK[0xF08];
    STACK[0x3450] = STACK[0xF08];
    STACK[0x3280] = v11;
    STACK[0x3350] = STACK[0x3648];
    STACK[0x35B0] = STACK[0x3660];
    STACK[0x3440] = v25;
    v26 = STACK[0x1B40];
    STACK[0x3448] = v18;
    v27 = STACK[0x1B28];
    STACK[0x3B08] = STACK[0x1B28];
    STACK[0x3328] = v27;
    STACK[0x3438] = v22;
    STACK[0x3320] = v9;
    STACK[0x3A08] = v20;
    v28 = STACK[0xEC8];
    STACK[0x3670] = STACK[0xEC8];
    STACK[0x2E50] = v28;
    STACK[0x32A8] = v15;
    STACK[0x35A8] = v23;
    STACK[0x3478] = v26;
    STACK[0x3498] = v4;
    STACK[0x3A48] = v21;
    v29 = STACK[0x1DD0];
    STACK[0x32F8] = STACK[0x1DD0];
    STACK[0x2BB8] = v28;
    STACK[0x3278] = STACK[0x3668];
    STACK[0x3318] = v19;
    STACK[0x3430] = v10;
    STACK[0x35A0] = v14;
    STACK[0x3490] = STACK[0x3648];
    STACK[0x3A90] = v14;
    STACK[0x3598] = v22;
    STACK[0x3590] = v28;
    STACK[0x3A40] = v7;
    STACK[0x3588] = v18;
    v30 = STACK[0x3640];
    STACK[0x3270] = STACK[0x3640];
    STACK[0x3580] = STACK[0x3668];
    v31 = v6;
    STACK[0x3578] = v6;
    STACK[0x3B28] = v9;
    STACK[0x3570] = v10;
    STACK[0x3568] = v19;
    STACK[0x3310] = v12;
    STACK[0x3560] = v15;
    STACK[0x3558] = v27;
    STACK[0x2BB0] = v20;
    v32 = STACK[0x3628];
    STACK[0x3620] = STACK[0x3628];
    STACK[0x34A8] = v5;
    v33 = STACK[0x1B70];
    STACK[0x35E0] = STACK[0x1B70];
    STACK[0x3550] = v25;
    STACK[0x3548] = v20;
    STACK[0x3540] = v26;
    STACK[0x32A0] = v20;
    v34 = STACK[0x3658];
    STACK[0x2E58] = v27;
    STACK[0x3298] = v28;
    STACK[0x3308] = v27;
    v35 = STACK[0x3678];
    STACK[0x3538] = STACK[0x3678];
    STACK[0x3530] = v11;
    STACK[0x3608] = v34;
    STACK[0x3428] = v17;
    STACK[0x3488] = v5;
    STACK[0x3528] = v29;
    STACK[0x3AF0] = v19;
    STACK[0x3420] = v13;
    STACK[0x3520] = v33;
    STACK[0x3618] = v32;
    STACK[0x2BA8] = v26;
    STACK[0x3268] = STACK[0x3660];
    STACK[0x32F0] = v33;
    STACK[0x32E8] = v23;
    STACK[0x32E0] = v17;
    STACK[0x3518] = v9;
    STACK[0x32D8] = v29;
    STACK[0x3260] = v8;
    STACK[0x3AE8] = v15;
    STACK[0x3600] = v35;
    STACK[0x3338] = v26;
    STACK[0x3290] = v14;
    STACK[0x35F8] = v31;
    STACK[0x3510] = v34;
    STACK[0x3250] = v9;
    STACK[0x3508] = v24;
    STACK[0x32C0] = v21;
    STACK[0x3500] = v30;
    STACK[0x3248] = v14;
    STACK[0x3B00] = v26;
    STACK[0x3AD0] = v7;
    STACK[0x3B18] = v21;
    STACK[0x3610] = v4;
    JUMPOUT(0x10005B8F8);
  }
  STACK[0x2D68] = STACK[0x2E30];
  STACK[0x2E18] = STACK[0x30B0];
  STACK[0x38B0] = STACK[0x34F8];
  STACK[0x3138] = STACK[0x34E8];
  STACK[0x3018] = STACK[0x2BC0];
  STACK[0x2C70] = STACK[0x2930];
  STACK[0x3068] = STACK[0x33D0];
  STACK[0x30A0] = STACK[0x2BC8];
  STACK[0x2E10] = STACK[0x30B8];
  STACK[0x2D30] = STACK[0x33C0];
  STACK[0x3098] = STACK[0x3418];
  STACK[0x3130] = STACK[0x34F0];
  STACK[0x2D60] = STACK[0x2E28];
  STACK[0x3060] = STACK[0x3410];
  STACK[0x2E08] = STACK[0x30C0];
  STACK[0x30A8] = STACK[0x34D8];
  STACK[0x2D58] = STACK[0x2CF8];
  STACK[0x2E00] = STACK[0x30C8];
  STACK[0x2C68] = STACK[0x2938];
  STACK[0x2C60] = STACK[0x2940];
  STACK[0x1608] = v5;
  STACK[0x3988] = v5;
  STACK[0x2FF8] = STACK[0x3400];
  STACK[0x3148] = STACK[0x34D0];
  STACK[0x2C58] = STACK[0x2948];
  STACK[0x2DF8] = STACK[0x30D0];
  STACK[0x3100] = STACK[0x3408];
  STACK[0x2D50] = STACK[0x2D00];
  STACK[0x2D90] = STACK[0x33E8];
  v36 = STACK[0x3660];
  STACK[0x1600] = STACK[0x3660];
  STACK[0x3990] = v36;
  STACK[0x2FE8] = STACK[0x33C8];
  STACK[0x2D18] = STACK[0x33E0];
  STACK[0x2C50] = STACK[0x2950];
  STACK[0x2C48] = STACK[0x2958];
  STACK[0x3090] = STACK[0x33F8];
  STACK[0x2D88] = STACK[0x33D8];
  STACK[0x2FE0] = STACK[0x33F0];
  STACK[0x2FF0] = STACK[0x33B8];
  STACK[0x2DF0] = STACK[0x30D8];
  STACK[0x3020] = STACK[0x2BD0];
  STACK[0x2DE8] = STACK[0x30E0];
  STACK[0x3010] = STACK[0x2BD8];
  STACK[0x15F8] = v6;
  STACK[0x3920] = v6;
  STACK[0x2C28] = STACK[0x33A0];
  STACK[0x38F0] = v4;
  STACK[0x15C8] = v4;
  STACK[0x2D28] = STACK[0x3398];
  STACK[0x2DE0] = v1;
  STACK[0x3140] = STACK[0x34C8];
  STACK[0x2D20] = STACK[0x3390];
  STACK[0x2D80] = STACK[0x3388];
  STACK[0x2D48] = STACK[0x2E38];
  STACK[0x2DD8] = v0;
  v37 = STACK[0x3678];
  STACK[0x38A8] = STACK[0x3678];
  STACK[0x15E0] = v37;
  STACK[0x2C20] = STACK[0x3380];
  v38 = STACK[0x3648];
  STACK[0x3978] = STACK[0x3648];
  STACK[0x15D8] = v38;
  STACK[0x2C40] = STACK[0x2968];
  STACK[0x2A58] = v2;
  STACK[0x2C10] = STACK[0x3378];
  STACK[0x3880] = STACK[0x2978];
  STACK[0x2C38] = STACK[0x2970];
  STACK[0x2E20] = STACK[0x3370];
  STACK[0x15B8] = STACK[0x3658];
  STACK[0x3158] = STACK[0x34B8];
  v39 = STACK[0x3668];
  STACK[0x3918] = STACK[0x3668];
  STACK[0x1598] = v39;
  v40 = STACK[0x3628];
  STACK[0x3980] = STACK[0x3628];
  STACK[0x15A0] = v40;
  STACK[0x2D40] = STACK[0x2E40];
  STACK[0x2D38] = STACK[0x2E48];
  STACK[0x2C30] = STACK[0x2980];
  STACK[0x15F0] = v3;
  STACK[0x3210] = v3;
  STACK[0x2FD8] = STACK[0x33B0];
  STACK[0x2C18] = STACK[0x33A8];
  v41 = STACK[0x3640];
  STACK[0x3218] = STACK[0x3640];
  STACK[0x15D0] = v41;
  STACK[0x2DD0] = STACK[0x2EA0];
  LODWORD(STACK[0xEF4]) = 100;
  STACK[0x3998] = 15;
  LODWORD(STACK[0x37C0]) = 99;
  v42 = STACK[0x1B70];
  STACK[0x1860] = STACK[0x1B70];
  STACK[0x15E8] = STACK[0x1488];
  v43 = STACK[0xF08];
  STACK[0x1850] = STACK[0xF08];
  v44 = STACK[0x2248];
  STACK[0x39E0] = STACK[0x2248];
  v45 = STACK[0x1B30];
  STACK[0x3948] = STACK[0x1B30];
  v46 = STACK[0x1DC8];
  STACK[0x3A18] = STACK[0x1DC8];
  STACK[0x18D0] = STACK[0x22F0];
  v47 = STACK[0xED0];
  STACK[0x3960] = STACK[0xED0];
  v48 = STACK[0x1B78];
  STACK[0x3950] = STACK[0x1B78];
  STACK[0x1830] = STACK[0x2308];
  v49 = STACK[0x1B60];
  STACK[0x3958] = STACK[0x1B60];
  v50 = STACK[0xEC0];
  STACK[0x1350] = STACK[0xEC0];
  v51 = STACK[0xEC8];
  STACK[0x1338] = STACK[0xEC8];
  v52 = STACK[0x2220];
  STACK[0x1340] = STACK[0x2220];
  v53 = STACK[0xEE8];
  STACK[0x1358] = STACK[0xEE8];
  v54 = STACK[0x1B48];
  STACK[0x1310] = STACK[0x1B48];
  v55 = STACK[0x1B28];
  STACK[0x2D78] = STACK[0x1B28];
  STACK[0x1330] = v44;
  STACK[0x39D8] = v52;
  v56 = STACK[0xF00];
  STACK[0x18C8] = STACK[0xF00];
  STACK[0x15B0] = STACK[0x1490];
  STACK[0x3968] = v46;
  STACK[0x39F8] = v45;
  v57 = STACK[0x2228];
  STACK[0x1348] = STACK[0x2228];
  STACK[0x15C0] = STACK[0x1460];
  STACK[0x1320] = v46;
  STACK[0x1858] = v49;
  v58 = STACK[0x1B68];
  STACK[0x3970] = STACK[0x1B68];
  STACK[0x3A38] = v51;
  STACK[0x15A8] = STACK[0x1448];
  v59 = STACK[0x2250];
  STACK[0x2CF0] = STACK[0x2250];
  STACK[0x1840] = STACK[0x2330];
  STACK[0x3A08] = v53;
  STACK[0x17F8] = STACK[0x22F8];
  STACK[0x1308] = v45;
  STACK[0x1848] = v58;
  STACK[0x18C0] = STACK[0x2338];
  STACK[0x1590] = STACK[0x1440];
  STACK[0x1578] = STACK[0x1478];
  v60 = STACK[0x2240];
  STACK[0x39C0] = STACK[0x2240];
  STACK[0x1810] = STACK[0x2300];
  STACK[0x1328] = STACK[0x2258];
  v61 = STACK[0x2230];
  STACK[0x2CE8] = STACK[0x2230];
  v62 = STACK[0x1B58];
  STACK[0x3938] = STACK[0x1B58];
  STACK[0x3A10] = v57;
  v63 = STACK[0xF10];
  STACK[0x1818] = STACK[0xF10];
  STACK[0x12F8] = v47;
  v64 = STACK[0xEB8];
  STACK[0x1300] = STACK[0xEB8];
  v65 = STACK[0x1B38];
  STACK[0x3A00] = STACK[0x1B38];
  v66 = STACK[0x1B40];
  STACK[0x39E8] = STACK[0x1B40];
  STACK[0x3928] = v54;
  STACK[0x3940] = v56;
  STACK[0x1588] = STACK[0x1468];
  STACK[0x38B8] = v51;
  STACK[0x3930] = v63;
  STACK[0x17F0] = STACK[0x2310];
  v67 = STACK[0x2208];
  STACK[0x12E0] = STACK[0x2208];
  v68 = STACK[0x2218];
  STACK[0x12E8] = STACK[0x2218];
  STACK[0x12D8] = v59;
  v69 = STACK[0x1B50];
  STACK[0x38C0] = STACK[0x1B50];
  STACK[0x38C8] = v50;
  STACK[0x38D0] = v64;
  STACK[0x38D8] = v55;
  STACK[0x1570] = STACK[0x1470];
  STACK[0x12D0] = v66;
  STACK[0x38E0] = v43;
  STACK[0x38F8] = v65;
  STACK[0x3900] = v66;
  STACK[0x17E8] = STACK[0x2320];
  v70 = STACK[0xEF8];
  STACK[0x38E8] = STACK[0xEF8];
  STACK[0x39B8] = v54;
  v71 = STACK[0x1DD0];
  STACK[0x3908] = STACK[0x1DD0];
  STACK[0x3910] = v42;
  STACK[0x12F0] = v60;
  STACK[0x1838] = STACK[0x2318];
  STACK[0x1580] = STACK[0x1458];
  v72 = STACK[0x2210];
  STACK[0x39B0] = STACK[0x2210];
  STACK[0x12B8] = v55;
  STACK[0x12C8] = v61;
  STACK[0x39F0] = v47;
  STACK[0x17E0] = v70;
  STACK[0x12C0] = v72;
  STACK[0x17D8] = v69;
  STACK[0x1568] = STACK[0x1450];
  STACK[0x3150] = v64;
  STACK[0x12B0] = v65;
  STACK[0x17D0] = v62;
  STACK[0x2CE0] = v50;
  STACK[0x1560] = STACK[0x1480];
  STACK[0x1800] = v48;
  STACK[0x1808] = STACK[0x2328];
  STACK[0x39C8] = v68;
  STACK[0x39A8] = v67;
  STACK[0x1828] = STACK[0x2340];
  v73 = STACK[0x2238];
  STACK[0x1318] = STACK[0x2238];
  STACK[0x1820] = v71;
  STACK[0x39A0] = v73;
  JUMPOUT(0x100065BFCLL);
}

void sub_10007B7CC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;

  LODWORD(STACK[0x3A88]) = 51;
  LODWORD(STACK[0x3258]) = 105;
  LODWORD(STACK[0x2D74]) = STACK[0x2ABC];
  v0 = STACK[0x1B30];
  STACK[0x3470] = STACK[0x1B30];
  v1 = STACK[0x1B68];
  STACK[0x3288] = STACK[0x1B68];
  v2 = STACK[0xEE8];
  STACK[0x3A80] = STACK[0xEE8];
  STACK[0x35D0] = v0;
  v3 = STACK[0x1B50];
  STACK[0x3348] = STACK[0x1B50];
  v4 = STACK[0xEF8];
  STACK[0x3340] = STACK[0xEF8];
  v5 = STACK[0xED0];
  STACK[0x35C8] = STACK[0xED0];
  v6 = STACK[0x1B78];
  STACK[0x35C0] = STACK[0x1B78];
  v7 = STACK[0x1B48];
  STACK[0x3A78] = STACK[0x1B48];
  v8 = STACK[0xEB8];
  STACK[0x32D0] = STACK[0xEB8];
  v9 = STACK[0x1B60];
  STACK[0x35D8] = STACK[0x1B60];
  STACK[0x2E68] = v8;
  v10 = STACK[0xF10];
  STACK[0x3480] = STACK[0xF10];
  v11 = STACK[0xEC0];
  STACK[0x32C8] = STACK[0xEC0];
  STACK[0x2E60] = v11;
  v12 = STACK[0x1B38];
  STACK[0x3468] = STACK[0x1B38];
  v13 = STACK[0x1DC8];
  STACK[0x35E8] = STACK[0x1DC8];
  STACK[0x3330] = v0;
  STACK[0x32B8] = v13;
  v14 = STACK[0xF00];
  STACK[0x3460] = STACK[0xF00];
  STACK[0x3300] = v6;
  v15 = STACK[0x1B58];
  STACK[0x3458] = STACK[0x1B58];
  v16 = STACK[0x3680];
  STACK[0x3358] = STACK[0x3680];
  STACK[0x3B20] = v5;
  STACK[0x3A68] = v5;
  STACK[0x32B0] = v5;
  STACK[0x35B8] = v1;
  v17 = STACK[0xF08];
  STACK[0x3450] = STACK[0xF08];
  STACK[0x3280] = v4;
  STACK[0x3350] = STACK[0x3648];
  STACK[0x35B0] = STACK[0x3660];
  STACK[0x3440] = v17;
  v18 = STACK[0x1B40];
  STACK[0x3478] = STACK[0x1B40];
  STACK[0x3448] = v10;
  v19 = STACK[0x1B28];
  STACK[0x3B08] = STACK[0x1B28];
  STACK[0x3328] = v19;
  STACK[0x3438] = v14;
  STACK[0x3320] = v2;
  v20 = STACK[0xEC8];
  STACK[0x3670] = STACK[0xEC8];
  STACK[0x2E50] = v20;
  STACK[0x32A8] = v8;
  STACK[0x35A8] = v15;
  v21 = STACK[0x3638];
  STACK[0x3498] = STACK[0x3638];
  STACK[0x3A48] = v13;
  v22 = STACK[0x1DD0];
  STACK[0x32F8] = STACK[0x1DD0];
  STACK[0x2BB8] = v20;
  STACK[0x3278] = STACK[0x3668];
  STACK[0x3318] = v11;
  STACK[0x3430] = v3;
  STACK[0x35A0] = v7;
  STACK[0x3490] = STACK[0x3648];
  STACK[0x3A90] = v7;
  STACK[0x3598] = v14;
  STACK[0x3590] = v20;
  STACK[0x3A40] = v0;
  STACK[0x3588] = v10;
  v23 = STACK[0x3640];
  STACK[0x3270] = STACK[0x3640];
  STACK[0x3580] = STACK[0x3668];
  v24 = STACK[0x3650];
  STACK[0x3578] = STACK[0x3650];
  STACK[0x3B28] = v2;
  STACK[0x3570] = v3;
  STACK[0x3568] = v11;
  STACK[0x3310] = v5;
  STACK[0x3560] = v8;
  STACK[0x3558] = v19;
  STACK[0x2BB0] = v12;
  v25 = STACK[0x3628];
  STACK[0x3620] = STACK[0x3628];
  v26 = STACK[0x3630];
  STACK[0x34A8] = STACK[0x3630];
  v27 = STACK[0x1B70];
  STACK[0x35E0] = STACK[0x1B70];
  STACK[0x3550] = v17;
  STACK[0x3548] = v12;
  STACK[0x3540] = v18;
  STACK[0x32A0] = v12;
  v28 = STACK[0x3658];
  STACK[0x2E58] = v19;
  STACK[0x3298] = v20;
  STACK[0x3308] = v19;
  v29 = STACK[0x3678];
  STACK[0x3538] = STACK[0x3678];
  STACK[0x3530] = v4;
  STACK[0x3608] = v28;
  STACK[0x3428] = v9;
  STACK[0x3488] = v26;
  STACK[0x3528] = v22;
  STACK[0x3AF0] = v11;
  STACK[0x3420] = v6;
  STACK[0x3520] = v27;
  STACK[0x3618] = v25;
  STACK[0x2BA8] = v18;
  STACK[0x3268] = STACK[0x3660];
  STACK[0x32F0] = v27;
  STACK[0x32E8] = v15;
  STACK[0x32E0] = v9;
  STACK[0x3518] = v2;
  STACK[0x32D8] = v22;
  STACK[0x3260] = v1;
  STACK[0x3AE8] = v8;
  STACK[0x3600] = v29;
  STACK[0x3338] = v18;
  STACK[0x3290] = v7;
  STACK[0x35F8] = v24;
  STACK[0x3510] = v28;
  STACK[0x3250] = v2;
  STACK[0x3508] = v16;
  STACK[0x32C0] = v13;
  STACK[0x3500] = v23;
  STACK[0x3248] = v7;
  STACK[0x3B00] = v18;
  STACK[0x3AD0] = v0;
  STACK[0x3B18] = v13;
  STACK[0x3610] = v21;
  JUMPOUT(0x10005B8F8);
}

void sub_10007BA38()
{
  BOOL v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v0 = (STACK[0x292C] & 0x10) == 0;
  v1 = STACK[0x1B68];
  v2 = STACK[0x2320];
  if ((STACK[0x292C] & 0x10) == 0)
    v2 = STACK[0x1B68];
  STACK[0x3260] = v2;
  if (v0)
    v3 = 107;
  else
    v3 = 106;
  LODWORD(STACK[0x3258]) = v3;
  v4 = STACK[0x1470];
  if (v0)
    v4 = STACK[0x3630];
  STACK[0x34A8] = v4;
  v5 = STACK[0x1B40];
  v6 = STACK[0x2250];
  if (v0)
    v6 = STACK[0x1B40];
  STACK[0x3338] = v6;
  v7 = STACK[0x1B30];
  v8 = STACK[0x2238];
  if (v0)
    v8 = STACK[0x1B30];
  STACK[0x3470] = v8;
  v9 = STACK[0x1468];
  if (v0)
    v9 = STACK[0x3658];
  STACK[0x3608] = v9;
  v10 = STACK[0x2340];
  v11 = STACK[0xF00];
  if (v0)
    v10 = STACK[0xF00];
  STACK[0x3438] = v10;
  v12 = STACK[0xF10];
  v13 = STACK[0x22F0];
  if (v0)
    v13 = STACK[0xF10];
  STACK[0x3448] = v13;
  v14 = STACK[0xED0];
  if (v0)
    v15 = STACK[0xED0];
  else
    v15 = STACK[0x2208];
  v16 = STACK[0x1B48];
  v17 = STACK[0x2218];
  if (v0)
    v17 = STACK[0x1B48];
  STACK[0x3A90] = v17;
  v18 = STACK[0xEB8];
  v19 = STACK[0x2228];
  if (v0)
    v19 = STACK[0xEB8];
  STACK[0x32D0] = v19;
  v20 = STACK[0x1DC8];
  v21 = STACK[0x2240];
  if (v0)
    v21 = STACK[0x1DC8];
  STACK[0x32C0] = v21;
  v22 = STACK[0x1DD0];
  v23 = STACK[0x2318];
  if (v0)
    v23 = STACK[0x1DD0];
  STACK[0x32D8] = v23;
  v24 = STACK[0x1B58];
  v25 = STACK[0x2330];
  if (v0)
    v25 = STACK[0x1B58];
  STACK[0x3458] = v25;
  v26 = STACK[0x1B70];
  v27 = STACK[0x2310];
  if (v0)
    v27 = STACK[0x1B70];
  STACK[0x32F0] = v27;
  v28 = STACK[0xF08];
  v29 = STACK[0x2308];
  if (v0)
    v29 = STACK[0xF08];
  STACK[0x3450] = v29;
  v30 = STACK[0xEF8];
  v31 = STACK[0x22F8];
  if (v0)
    v31 = STACK[0xEF8];
  STACK[0x3280] = v31;
  v32 = STACK[0x1450];
  if (v0)
    v32 = STACK[0x3660];
  STACK[0x3268] = v32;
  v33 = STACK[0x1B28];
  if (v0)
    v34 = STACK[0x1B28];
  else
    v34 = STACK[0x2220];
  v35 = STACK[0x1B60];
  v36 = STACK[0x2300];
  if (v0)
    v36 = STACK[0x1B60];
  STACK[0x3428] = v36;
  v37 = STACK[0xEC8];
  if (v0)
    v38 = STACK[0xEC8];
  else
    v38 = STACK[0x2248];
  STACK[0x3670] = v38;
  v39 = STACK[0x1448];
  v40 = STACK[0x3650];
  if (v0)
    v39 = STACK[0x3650];
  STACK[0x35F8] = v39;
  v41 = STACK[0x1480];
  if (v0)
    v41 = STACK[0x3638];
  STACK[0x3498] = v41;
  v42 = STACK[0xEC0];
  if (v0)
    v43 = STACK[0xEC0];
  else
    v43 = STACK[0x2230];
  v44 = STACK[0x1478];
  if (v0)
    v44 = STACK[0x3640];
  STACK[0x3270] = v44;
  v45 = STACK[0x1488];
  if (v0)
    v45 = STACK[0x3680];
  STACK[0x3358] = v45;
  v46 = STACK[0x1B50];
  v47 = STACK[0x2338];
  if (v0)
    v47 = STACK[0x1B50];
  STACK[0x3348] = v47;
  v48 = STACK[0x1B78];
  v49 = STACK[0x2328];
  if (v0)
    v49 = STACK[0x1B78];
  STACK[0x3420] = v49;
  v50 = STACK[0x1B38];
  v51 = STACK[0x2210];
  if (v0)
    v51 = STACK[0x1B38];
  STACK[0x3A08] = v51;
  v52 = STACK[0x1440];
  if (v0)
    v52 = STACK[0x3668];
  STACK[0x3278] = v52;
  v53 = STACK[0x1458];
  if (v0)
    v53 = STACK[0x3648];
  STACK[0x3350] = v53;
  v54 = STACK[0x1460];
  if (v0)
    v54 = STACK[0x3678];
  STACK[0x3600] = v54;
  v55 = STACK[0x1490];
  v56 = STACK[0x3628];
  if (v0)
    v55 = STACK[0x3628];
  STACK[0x3620] = v55;
  v57 = STACK[0x2258];
  v58 = STACK[0xEE8];
  if (v0)
    v57 = STACK[0xEE8];
  STACK[0x3B28] = v57;
  LODWORD(STACK[0x3A88]) = 51;
  LODWORD(STACK[0x2D74]) = STACK[0x2ABC];
  STACK[0x3288] = v1;
  STACK[0x3A80] = v58;
  STACK[0x35D0] = v7;
  STACK[0x3340] = v30;
  STACK[0x35C8] = v14;
  STACK[0x35C0] = v48;
  STACK[0x3A78] = v16;
  STACK[0x35D8] = v35;
  STACK[0x2E68] = v18;
  STACK[0x3480] = v12;
  STACK[0x2E60] = v42;
  STACK[0x3468] = v50;
  STACK[0x35E8] = v20;
  STACK[0x3330] = v7;
  STACK[0x32B8] = v20;
  STACK[0x3460] = v11;
  STACK[0x3300] = v48;
  STACK[0x3A68] = v14;
  STACK[0x32B0] = v14;
  STACK[0x35B8] = v1;
  STACK[0x35B0] = STACK[0x3660];
  STACK[0x3440] = v28;
  STACK[0x3478] = v5;
  STACK[0x3B08] = v34;
  STACK[0x3328] = v34;
  STACK[0x3320] = v58;
  STACK[0x2E50] = v38;
  STACK[0x32A8] = v18;
  STACK[0x35A8] = v24;
  STACK[0x3A48] = v20;
  STACK[0x32F8] = v22;
  STACK[0x2BB8] = v37;
  STACK[0x3318] = v42;
  STACK[0x3430] = v46;
  STACK[0x35A0] = v16;
  STACK[0x3490] = STACK[0x3648];
  STACK[0x3598] = v11;
  STACK[0x3590] = v37;
  STACK[0x3A40] = v7;
  STACK[0x3588] = v12;
  STACK[0x3580] = STACK[0x3668];
  STACK[0x3578] = v40;
  STACK[0x3570] = v46;
  STACK[0x3568] = v42;
  STACK[0x3B20] = v15;
  STACK[0x3310] = v15;
  STACK[0x3560] = v18;
  STACK[0x3558] = v33;
  STACK[0x2BB0] = v50;
  STACK[0x35E0] = v26;
  STACK[0x3550] = v28;
  STACK[0x3548] = v50;
  STACK[0x3540] = v5;
  STACK[0x32A0] = STACK[0x3A08];
  STACK[0x2E58] = v33;
  STACK[0x3298] = v37;
  STACK[0x3308] = v33;
  STACK[0x3538] = STACK[0x3678];
  STACK[0x3530] = v30;
  STACK[0x3488] = STACK[0x3630];
  STACK[0x3528] = v22;
  STACK[0x32C8] = v43;
  STACK[0x3AF0] = v43;
  STACK[0x3520] = v26;
  STACK[0x3618] = v56;
  STACK[0x2BA8] = v5;
  STACK[0x32E8] = v24;
  STACK[0x32E0] = v35;
  STACK[0x3518] = v58;
  STACK[0x3AE8] = STACK[0x32D0];
  STACK[0x3290] = v16;
  STACK[0x3510] = STACK[0x3658];
  STACK[0x3250] = STACK[0x3B28];
  STACK[0x3508] = STACK[0x3680];
  STACK[0x3500] = STACK[0x3640];
  STACK[0x3248] = STACK[0x3A90];
  STACK[0x3B00] = STACK[0x3338];
  STACK[0x3AD0] = STACK[0x3470];
  STACK[0x3B18] = STACK[0x32C0];
  STACK[0x3610] = STACK[0x3638];
  JUMPOUT(0x10005B8F8);
}

void sub_10007BDF8()
{
  STACK[0x3470] = STACK[0x1B30];
  STACK[0x35D8] = STACK[0x1B60];
  STACK[0x3B08] = STACK[0x1B28];
  STACK[0x35E0] = STACK[0x1B70];
  STACK[0x3A80] = STACK[0xEE8];
  JUMPOUT(0x10007BE7CLL);
}

unint64_t sub_100097FBC(unint64_t result)
{
  unint64_t v1;

  v1 = 0x1FA96F22E91D7CCBLL
     * (*(_QWORD *)result
      - 1132842119 * ((result - 2 * (result & 0x9F680DFD957AD157) - 0x6097F2026A852EA9) ^ 0xC808B3176CEF6218))
     - 0x57EF8EE594878242;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t sub_100098028(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t (*v12)(void);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  char v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  _BYTE *v105;
  unsigned int v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  int v112;
  uint64_t v113;
  int v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  unint64_t *v123;
  uint64_t v124;
  _BYTE v125[8];

  v2 = 0x6790357934740FC0;
  v3 = *(&off_1015B46D0
       + (byte_101506DC0[byte_1014342E0[(-31
                                                                                       * (qword_1015F97C0 ^ 0xC0 ^ qword_1015F8458))] ^ 0x63] ^ (-31 * (qword_1015F97C0 ^ 0xC0 ^ qword_1015F8458)))
       + 1774);
  v4 = (unint64_t)&v125[qword_1015F97C0 + *v3];
  qword_1015F97C0 = 396727777 * v4 - 0x6790357934740FC0;
  *v3 = 396727777 * (v4 ^ 0x6790357934740FC0);
  if (!result)
    return result;
  v122 = result;
  v123 = (unint64_t *)(result - 16);
  v121 = (_QWORD *)((char *)*(&off_1015B46D0
                            + ((-31 * ((qword_1015F8458 + qword_1015F97C0) ^ 0xC0)) ^ byte_101506DC0[byte_1014342E0[(-31 * ((qword_1015F8458 + qword_1015F97C0) ^ 0xC0))] ^ 0xCD])
                            + 988)
                  - 12);
  v124 = *v121 ^ *(_QWORD *)(result - 16 + (*(_QWORD *)(result - 8) & 0xFFFFFFFFFFFFFFF8));
  if ((*(_BYTE *)(v124 + 0x370) & 2) != 0)
  {
    v5 = (unsigned int *)(v124 + 884);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(1u, v5));
    if (v6)
    {
      v7 = 0;
      v1 = 1;
      while (1)
      {
        if (!*v5)
        {
          do
            v8 = __ldaxr(v5);
          while (__stlxr(1u, v5));
          if (!v8)
            break;
        }
        if ((++v7 & 0x3F) == 0)
          ((void (*)(void))*(&off_1015B46D0
                           + ((-31 * ((*(_DWORD *)v3 + qword_1015F97C0) ^ 0xC0)) ^ byte_101506EC0[byte_1014343E0[(-31 * ((*(_DWORD *)v3 + qword_1015F97C0) ^ 0xC0))] ^ 0x79])
                           + 341))();
      }
    }
  }
  result = (uint64_t)v123;
  v9 = *(_QWORD *)(v122 - 8);
  v10 = v9 & 0xFFFFFFFFFFFFFFF8;
  v11 = (char *)v123 + (v9 & 0xFFFFFFFFFFFFFFF8);
  v12 = (uint64_t (*)(void))*(&off_1015B46D0
                           + ((-31 * ((*(_DWORD *)v3 + qword_1015F97C0) ^ 0xC0)) ^ byte_101506EC0[byte_1014343E0[(-31 * ((*(_DWORD *)v3 + qword_1015F97C0) ^ 0xC0))] ^ 0x79])
                           + 912);
  if ((v9 & 1) != 0)
  {
    v14 = v124;
    goto LABEL_19;
  }
  v13 = *v123;
  v14 = v124;
  if ((v9 & 3) == 0)
  {
    v25 = v10 + v13 + 32;
    result = ((uint64_t (*)(char *, uint64_t))v12)((char *)v123 - v13, v25);
    if (!(_DWORD)result)
      *(_QWORD *)(v124 + 856) -= v25;
    goto LABEL_120;
  }
  result = (uint64_t)v123 - v13;
  v10 += v13;
  if ((unint64_t *)((char *)v123 - v13) != *(unint64_t **)(v124 + 32))
  {
    if (v13 <= 0xFF)
    {
      v15 = *(_QWORD *)(result + 16);
      v16 = *(_QWORD *)(result + 24);
      if (v16 == v15)
      {
        *(_DWORD *)v124 &= ~(1 << (v13 >> 3));
      }
      else
      {
        *(_QWORD *)(v15 + 24) = v16;
        *(_QWORD *)(v16 + 16) = v15;
      }
      goto LABEL_19;
    }
    v41 = *(_QWORD *)(result + 48);
    v42 = *(_QWORD **)(result + 24);
    if (v42 == (_QWORD *)result)
    {
      v49 = (_QWORD *)(result + 40);
      v50 = *(_QWORD **)(result + 40);
      if (v50 || (v49 = (_QWORD *)(result + 32), (v50 = *(_QWORD **)(result + 32)) != 0))
      {
        do
        {
          do
          {
            v51 = v49;
            v42 = v50;
            v49 = v50 + 5;
            v50 = (_QWORD *)v50[5];
          }
          while (v50);
          v49 = v42 + 4;
          v50 = (_QWORD *)v42[4];
        }
        while (v50);
        *v51 = 0;
        if (!v41)
          goto LABEL_19;
      }
      else
      {
        v42 = 0;
        if (!v41)
          goto LABEL_19;
      }
    }
    else
    {
      v43 = *(_QWORD *)(result + 16);
      *(_QWORD *)(v43 + 24) = v42;
      v42[2] = v43;
      if (!v41)
        goto LABEL_19;
    }
    v52 = v124 + 8 * *(unsigned int *)(result + 56);
    if (result == *(_QWORD *)(v52 + 600))
    {
      *(_QWORD *)(v52 + 600) = v42;
      if (!v42)
      {
        *(_DWORD *)(v124 + 4) &= ~(1 << *(_DWORD *)(result + 56));
        goto LABEL_19;
      }
    }
    else
    {
      v53 = 40;
      if (*(_QWORD *)(v41 + 32) == result)
        v53 = 32;
      *(_QWORD *)(v41 + v53) = v42;
      if (!v42)
        goto LABEL_19;
    }
    v42[6] = v41;
    v59 = *(_QWORD *)(result + 32);
    if (v59)
    {
      v42[4] = v59;
      *(_QWORD *)(v59 + 48) = v42;
    }
    v60 = *(_QWORD *)(result + 40);
    if (v60)
    {
      v42[5] = v60;
      *(_QWORD *)(v60 + 48) = v42;
    }
    goto LABEL_19;
  }
  if ((~*((_DWORD *)v11 + 2) & 3) == 0)
  {
    *(_QWORD *)(v124 + 8) = v10;
    *((_QWORD *)v11 + 1) &= ~1uLL;
    *(_QWORD *)(result + 8) = v10 | 1;
    *(_QWORD *)v11 = v10;
    goto LABEL_120;
  }
LABEL_19:
  v17 = *((_QWORD *)v11 + 1);
  if ((v17 & 2) != 0)
  {
    *((_QWORD *)v11 + 1) = v17 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)(result + 8) = v10 | 1;
    *(_QWORD *)(result + v10) = v10;
LABEL_26:
    if (v10 <= 0xFF)
    {
      v20 = v10 >> 3;
      v21 = v14 + ((2 * v10) & 0x7FFFFFFF0) + 72;
      v22 = 1 << v20;
      if ((*(_DWORD *)v14 & v22) != 0)
      {
        v23 = *(_QWORD *)(v21 + 16);
      }
      else
      {
        *(_DWORD *)v14 |= v22;
        v23 = v21;
      }
      *(_QWORD *)(v21 + 16) = result;
      *(_QWORD *)(v23 + 24) = result;
      *(_QWORD *)(result + 16) = v23;
      *(_QWORD *)(result + 24) = v21;
      goto LABEL_120;
    }
    if (v10 >> 24)
    {
      v24 = 31;
    }
    else
    {
      v34 = (((v10 >> 8) + 1048320) >> 16) & 8;
      v35 = (v10 >> 8) << v34;
      v36 = (v35 << (((v35 + 520192) >> 16) & 4) << ((((v35 << (((v35 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
          - (((v35 + 520192) >> 16) & 4 | v34 | (((v35 << (((v35 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
      v24 = ((v10 >> (v36 + 21)) & 1 | (2 * v36)) + 28;
    }
    *(_DWORD *)(result + 56) = v24;
    v37 = (_BYTE *)(result + 32);
    v38 = -(result + 32) & 7;
    switch(v38)
    {
      case 1u:
        goto LABEL_55;
      case 2u:
        goto LABEL_54;
      case 3u:
        goto LABEL_53;
      case 4u:
        goto LABEL_52;
      case 5u:
        goto LABEL_51;
      case 6u:
        goto LABEL_50;
      case 7u:
        *v37 = 0;
        v37 = (_BYTE *)(result + 33);
LABEL_50:
        *v37++ = 0;
LABEL_51:
        *v37++ = 0;
LABEL_52:
        *v37++ = 0;
LABEL_53:
        *v37++ = 0;
LABEL_54:
        *v37++ = 0;
LABEL_55:
        *v37++ = 0;
        break;
      default:
        break;
    }
    v39 = (uint64_t *)(v14 + 8 * v24 + 600);
    v40 = 16 - v38;
    v69 = v40;
    v68 = v40 & 7;
    switch(v69)
    {
      case 0:
        goto LABEL_131;
      case 1:
        goto LABEL_130;
      case 2:
        goto LABEL_129;
      case 3:
        goto LABEL_128;
      case 4:
        goto LABEL_127;
      case 5:
        goto LABEL_126;
      case 6:
        goto LABEL_125;
      case 7:
        *v37++ = 0;
LABEL_125:
        *v37++ = 0;
LABEL_126:
        *v37++ = 0;
LABEL_127:
        *v37++ = 0;
LABEL_128:
        *v37++ = 0;
LABEL_129:
        *v37++ = 0;
LABEL_130:
        *v37 = 0;
LABEL_131:
        v70 = *(_DWORD *)(v14 + 4);
        if ((v70 & (1 << v24)) == 0)
        {
          *(_DWORD *)(v14 + 4) = v70 | (1 << v24);
          *v39 = result;
          *(_QWORD *)(result + 48) = v39;
          goto LABEL_140;
        }
        v71 = *v39;
        if (v24 == 31)
          LOBYTE(v72) = 0;
        else
          v72 = 57 - (v24 >> 1);
        v73 = v10 << v72;
        while (1)
        {
          v74 = v71;
          if ((*(_QWORD *)(v71 + 8) & 0xFFFFFFFFFFFFFFF8) == v10)
            break;
          v75 = v71 + 8 * (v73 >> 63);
          v77 = *(_QWORD *)(v75 + 32);
          v76 = (uint64_t *)(v75 + 32);
          v71 = v77;
          v73 *= 2;
          if (!v77)
          {
            *v76 = result;
            *(_QWORD *)(result + 48) = v74;
LABEL_140:
            *(_QWORD *)(result + 16) = result;
            *(_QWORD *)(result + 24) = result;
            goto LABEL_142;
          }
        }
        v78 = *(_QWORD *)(v71 + 16);
        *(_QWORD *)(v78 + 24) = result;
        *(_QWORD *)(v71 + 16) = result;
        *(_QWORD *)(result + 16) = v78;
        *(_QWORD *)(result + 24) = v71;
        *(_QWORD *)(result + 48) = 0;
LABEL_142:
        v79 = *(_QWORD *)(v14 + 56) - 1;
        *(_QWORD *)(v14 + 56) = v79;
        if (v79)
          goto LABEL_120;
        v45 = 0;
        break;
      default:
        __asm { BR              X16 }
        return result;
    }
LABEL_144:
    v80 = *(_QWORD *)(v14 + 904);
    if (!v80 || (*(_DWORD *)(v80 + 24) & 9) != 1)
    {
      v81 = 0;
      goto LABEL_159;
    }
    v81 = 0;
    result = *(_QWORD *)v80;
    v82 = *(_QWORD *)(v80 + 8);
    v83 = *(_QWORD *)v80 + 16;
    if ((v83 & 0xF) != 0)
      v84 = -(int)v83 & 0xFLL;
    else
      v84 = 0;
    v85 = result + v84;
    v86 = *(_QWORD *)(result + v84 + 8);
    v87 = v86 & 0xFFFFFFFFFFFFFFF8;
    if ((v86 & 3) != 1 || result + v84 + (v86 & 0xFFFFFFFFFFFFFFF8) < result + v82 - 80)
    {
LABEL_159:
      *(_QWORD *)(v14 + 56) = 4095;
      if (v1 + v81)
        v93 = 0;
      else
        v93 = v45;
      if ((v93 & 1) != 0 && *(_QWORD *)v2 > *(_QWORD *)(v14 + 48))
        *(_QWORD *)(v14 + 48) = -1;
      goto LABEL_120;
    }
    v89 = *(_QWORD *)(v80 + 16);
    if (v85 == *(_QWORD *)(v14 + 32))
    {
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(v14 + 8) = 0;
      goto LABEL_182;
    }
    v90 = *(_QWORD *)(v85 + 48);
    v91 = *(_QWORD **)(v85 + 24);
    if (v91 == (_QWORD *)v85)
    {
      v94 = (_QWORD *)(v85 + 40);
      v95 = *(_QWORD **)(v85 + 40);
      if (v95 || (v94 = (_QWORD *)(v85 + 32), (v95 = *(_QWORD **)(v85 + 32)) != 0))
      {
        do
        {
          do
          {
            v96 = v94;
            v91 = v95;
            v94 = v95 + 5;
            v95 = (_QWORD *)v95[5];
          }
          while (v95);
          v94 = v91 + 4;
          v95 = (_QWORD *)v91[4];
        }
        while (v95);
        *v96 = 0;
        if (!v90)
          goto LABEL_182;
      }
      else
      {
        v91 = 0;
        if (!v90)
          goto LABEL_182;
      }
    }
    else
    {
      v92 = *(_QWORD *)(v85 + 16);
      *(_QWORD *)(v92 + 24) = v91;
      v91[2] = v92;
      if (!v90)
        goto LABEL_182;
    }
    v97 = v14 + 8 * *(unsigned int *)(v85 + 56);
    if (v85 == *(_QWORD *)(v97 + 600))
    {
      *(_QWORD *)(v97 + 600) = v91;
      if (!v91)
      {
        *(_DWORD *)(v14 + 4) &= ~(1 << *(_DWORD *)(v85 + 56));
        goto LABEL_182;
      }
    }
    else
    {
      v98 = 40;
      if (*(_QWORD *)(v90 + 32) == v85)
        v98 = 32;
      *(_QWORD *)(v90 + v98) = v91;
      if (!v91)
      {
LABEL_182:
        result = v12();
        if ((_DWORD)result)
        {
          if (v86 >= 0x100)
          {
            if (v86 >> 24)
            {
              v101 = 31;
            }
            else
            {
              v102 = (((v86 >> 8) + 1048320) >> 16) & 8;
              v103 = (v86 >> 8) << v102;
              v104 = (v103 << (((v103 + 520192) >> 16) & 4) << ((((v103 << (((v103 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                   - (((v103 + 520192) >> 16) & 4 | v102 | (((v103 << (((v103 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
              v101 = ((v87 >> (v104 + 21)) & 1 | (2 * v104)) + 28;
            }
          }
          else
          {
            v101 = 0;
          }
          *(_DWORD *)(v85 + 56) = v101;
          v105 = (_BYTE *)(v85 + 32);
          v106 = -(v85 + 32) & 7;
          switch(v106)
          {
            case 1u:
              goto LABEL_196;
            case 2u:
              goto LABEL_195;
            case 3u:
              goto LABEL_194;
            case 4u:
              goto LABEL_193;
            case 5u:
              goto LABEL_192;
            case 6u:
              goto LABEL_191;
            case 7u:
              *v105 = 0;
              v105 = (_BYTE *)(v85 + 33);
LABEL_191:
              *v105++ = 0;
LABEL_192:
              *v105++ = 0;
LABEL_193:
              *v105++ = 0;
LABEL_194:
              *v105++ = 0;
LABEL_195:
              *v105++ = 0;
LABEL_196:
              *v105++ = 0;
              break;
            default:
              break;
          }
          v107 = (uint64_t *)(v14 + 8 * v101 + 600);
          v108 = 16 - v106;
          v110 = v108;
          v109 = v108 & 7;
          switch(v110)
          {
            case 0:
              goto LABEL_207;
            case 1:
              goto LABEL_206;
            case 2:
              goto LABEL_205;
            case 3:
              goto LABEL_204;
            case 4:
              goto LABEL_203;
            case 5:
              goto LABEL_202;
            case 6:
              goto LABEL_201;
            case 7:
              *v105++ = 0;
LABEL_201:
              *v105++ = 0;
LABEL_202:
              *v105++ = 0;
LABEL_203:
              *v105++ = 0;
LABEL_204:
              *v105++ = 0;
LABEL_205:
              *v105++ = 0;
LABEL_206:
              *v105 = 0;
LABEL_207:
              v111 = *(_DWORD *)(v14 + 4);
              v112 = 1 << v101;
              if ((v111 & (1 << v101)) == 0)
              {
                v81 = 0;
                *(_DWORD *)(v14 + 4) = v111 | v112;
                *v107 = v85;
                *(_QWORD *)(v85 + 48) = v107;
                goto LABEL_216;
              }
              v113 = *v107;
              if (v101 == 31)
                LOBYTE(v114) = 0;
              else
                v114 = 57 - (v101 >> 1);
              v115 = v87 << v114;
              while (1)
              {
                v116 = v113;
                if ((*(_QWORD *)(v113 + 8) & 0xFFFFFFFFFFFFFFF8) == v87)
                  break;
                v117 = v113 + 8 * (v115 >> 63);
                v119 = *(_QWORD *)(v117 + 32);
                v118 = (uint64_t *)(v117 + 32);
                v113 = v119;
                v115 *= 2;
                if (!v119)
                {
                  v81 = 0;
                  *v118 = v85;
                  *(_QWORD *)(v85 + 48) = v116;
LABEL_216:
                  *(_QWORD *)(v85 + 16) = v85;
                  *(_QWORD *)(v85 + 24) = v85;
                  goto LABEL_159;
                }
              }
              v81 = 0;
              v120 = *(_QWORD *)(v113 + 16);
              *(_QWORD *)(v120 + 24) = v85;
              *(_QWORD *)(v116 + 16) = v85;
              *(_QWORD *)(v85 + 16) = v120;
              *(_QWORD *)(v85 + 24) = v116;
              *(_QWORD *)(v85 + 48) = 0;
              break;
            default:
              __asm { BR              X15 }
              return result;
          }
        }
        else
        {
          *(_QWORD *)(v14 + 856) -= v82;
          *(_QWORD *)(v14 + 904) = v89;
          v81 = v82;
        }
        goto LABEL_159;
      }
    }
    v91[6] = v90;
    v99 = *(_QWORD *)(v85 + 32);
    if (v99)
    {
      v91[4] = v99;
      *(_QWORD *)(v99 + 48) = v91;
    }
    v100 = *(_QWORD *)(v85 + 40);
    if (v100)
    {
      v91[5] = v100;
      *(_QWORD *)(v100 + 48) = v91;
    }
    goto LABEL_182;
  }
  if (v11 == *(char **)(v14 + 40))
  {
    v2 = v14 + 16;
    v26 = *(_QWORD *)(v14 + 16) + v10;
    *(_QWORD *)(v14 + 16) = v26;
    *(_QWORD *)(v14 + 40) = result;
    *(_QWORD *)(result + 8) = v26 | 1;
    if (result == *(_QWORD *)(v14 + 32))
    {
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(v14 + 8) = 0;
    }
    if (v26 <= *(_QWORD *)(v14 + 48))
      goto LABEL_120;
    v27 = *(_QWORD *)(v14 + 40);
    if (!v27)
      goto LABEL_120;
    if (*(_QWORD *)v2 >= 0x51uLL)
    {
      v1 = ((unint64_t)(*(_QWORD *)v2 + v121[2] - 81) / v121[2] - 1) * v121[2];
      v28 = v14 + 888;
      v29 = (unint64_t *)(v14 + 888);
      do
      {
        if (*v29 <= v27 && *v29 + v29[1] > v27)
          break;
        v29 = (unint64_t *)v29[2];
      }
      while (v29);
      if ((v29[3] & 9) == 1)
      {
        v30 = v29[1];
        v31 = v30 - v1;
        if (v30 >= v1)
        {
          v32 = *v29;
          v33 = *v29 + v30;
          while (v28 < v32 || v28 >= v33)
          {
            v28 = *(_QWORD *)(v28 + 16);
            if (!v28)
            {
              result = ((uint64_t (*)(unint64_t, unint64_t))v12)(v32 + v31, ((unint64_t)(*(_QWORD *)v2 + v121[2] - 81) / v121[2] - 1) * v121[2]);
              v45 = 1;
              if (v1)
              {
                if ((_DWORD)result)
                {
                  v1 = 0;
                }
                else
                {
                  v29[1] -= v1;
                  *(_QWORD *)(v14 + 856) -= v1;
                  v63 = *(_QWORD *)(v14 + 40);
                  v64 = *(_QWORD *)(v14 + 16) - v1;
                  if (((v63 + 16) & 0xF) != 0)
                    v65 = -((_DWORD)v63 + 16) & 0xFLL;
                  else
                    v65 = 0;
                  v66 = v63 + v65;
                  v67 = v64 - v65;
                  *(_QWORD *)(v14 + 40) = v66;
                  *(_QWORD *)(v14 + 16) = v67;
                  *(_QWORD *)(v66 + 8) = v67 | 1;
                  *(_QWORD *)(v63 + v64 + 8) = 80;
                  *(_QWORD *)(v14 + 48) = v121[4];
                }
              }
              goto LABEL_144;
            }
          }
        }
      }
    }
    v1 = 0;
    v45 = 1;
    goto LABEL_144;
  }
  if (v11 == *(char **)(v14 + 32))
  {
    v44 = *(_QWORD *)(v14 + 8) + v10;
    *(_QWORD *)(v14 + 8) = v44;
    *(_QWORD *)(v14 + 32) = result;
    *(_QWORD *)(result + 8) = v44 | 1;
    *(_QWORD *)(result + v44) = v44;
    goto LABEL_120;
  }
  v10 += v17 & 0xFFFFFFFFFFFFFFF8;
  if (v17 <= 0xFF)
  {
    v19 = *((_QWORD *)v11 + 2);
    v18 = *((_QWORD *)v11 + 3);
    if (v18 == v19)
    {
      *(_DWORD *)v14 &= ~(1 << (v17 >> 3));
    }
    else
    {
      *(_QWORD *)(v19 + 24) = v18;
      *(_QWORD *)(v18 + 16) = v19;
    }
    goto LABEL_105;
  }
  v46 = *((_QWORD *)v11 + 6);
  v47 = (char *)*((_QWORD *)v11 + 3);
  if (v47 == v11)
  {
    v54 = v11 + 40;
    v55 = (_QWORD *)*((_QWORD *)v11 + 5);
    if (v55 || (v54 = v11 + 32, (v55 = (_QWORD *)*((_QWORD *)v11 + 4)) != 0))
    {
      do
      {
        do
        {
          v56 = v54;
          v47 = (char *)v55;
          v54 = v55 + 5;
          v55 = (_QWORD *)v55[5];
        }
        while (v55);
        v54 = v47 + 32;
        v55 = (_QWORD *)*((_QWORD *)v47 + 4);
      }
      while (v55);
      *v56 = 0;
      if (!v46)
        goto LABEL_105;
    }
    else
    {
      v47 = 0;
      if (!v46)
        goto LABEL_105;
    }
  }
  else
  {
    v48 = *((_QWORD *)v11 + 2);
    *(_QWORD *)(v48 + 24) = v47;
    *((_QWORD *)v47 + 2) = v48;
    if (!v46)
      goto LABEL_105;
  }
  v57 = v14 + 8 * *((unsigned int *)v11 + 14);
  if (v11 == *(char **)(v57 + 600))
  {
    *(_QWORD *)(v57 + 600) = v47;
    if (!v47)
    {
      *(_DWORD *)(v14 + 4) &= ~(1 << *((_DWORD *)v11 + 14));
      goto LABEL_105;
    }
    goto LABEL_99;
  }
  v58 = 40;
  if (*(char **)(v46 + 32) == v11)
    v58 = 32;
  *(_QWORD *)(v46 + v58) = v47;
  if (v47)
  {
LABEL_99:
    *((_QWORD *)v47 + 6) = v46;
    v61 = *((_QWORD *)v11 + 4);
    if (v61)
    {
      *((_QWORD *)v47 + 4) = v61;
      *(_QWORD *)(v61 + 48) = v47;
    }
    v62 = *((_QWORD *)v11 + 5);
    if (v62)
    {
      *((_QWORD *)v47 + 5) = v62;
      *(_QWORD *)(v62 + 48) = v47;
    }
  }
LABEL_105:
  *(_QWORD *)(result + 8) = v10 | 1;
  *(_QWORD *)(result + v10) = v10;
  if (result != *(_QWORD *)(v14 + 32))
    goto LABEL_26;
  *(_QWORD *)(v14 + 8) = v10;
LABEL_120:
  if ((*(_BYTE *)(v14 + 880) & 2) != 0)
    atomic_store(0, (unsigned int *)(v14 + 884));
  return result;
}

uint64_t sub_100098D40(uint64_t *a1)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[8];

  v2 = (uint64_t *)*(&off_1015B46D0
                  + (byte_101595D04[(byte_101506CC8[(-31 * (qword_1015F8FB8 ^ 0xC0 ^ qword_1015F8458))
                                                                                 - 8] ^ 0xF6)
                                                                 - 4] ^ (-31 * (qword_1015F8FB8 ^ 0xC0 ^ qword_1015F8458)))
                  + 1696);
  v3 = (unint64_t)&v9[*v2 - qword_1015F8FB8];
  v4 = 396727777 * (v3 - 0x6790357934740FC0);
  v5 = 396727777 * (v3 ^ 0x6790357934740FC0);
  qword_1015F8FB8 = v4;
  *v2 = v5;
  v6 = ((uint64_t (*)(uint64_t))*(&off_1015B46D0
                                         + (byte_101506DC0[byte_1014342E0[(-31 * ((v5 + qword_1015F8FB8) ^ 0xC0))] ^ 0x63] ^ (-31 * ((v5 + qword_1015F8FB8) ^ 0xC0)))
                                         + 642))(16);
  if (v6)
    v7 = 0;
  else
    v7 = 0xFFFFFFFFLL;
  *a1 = v6;
  return v7;
}

double sub_100098E4C(uint64_t a1, __int128 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  if (a3)
  {
    if (a3 < 8
      || a3 - 1 > 0xF
      || (~(_DWORD)a4 & 0xFu) < (((_BYTE)a3 - 1) & 0xFu)
      || (unint64_t)a2 - a1 - (a4 & 0xF) < 0x20)
    {
      v4 = a4;
      v5 = a2;
      goto LABEL_4;
    }
    v6 = a3;
    if (a3 >= 0x20)
    {
      v7 = a3 & 0xFFFFFFE0;
      v8 = (__int128 *)(a1 + (a4 & 0xF));
      v9 = *v8;
      v10 = v8[1];
      *a2 = *v8;
      a2[1] = v10;
      if (v7 == a3)
        return *(double *)&v9;
      if ((a3 & 0x18) == 0)
      {
        a3 -= v7;
        v5 = (__int128 *)((char *)a2 + v7);
        v4 = a4 + v7;
        goto LABEL_4;
      }
    }
    else
    {
      v7 = 0;
    }
    v4 = a4 + (a3 & 0xFFFFFFF8);
    v5 = (__int128 *)((char *)a2 + (a3 & 0xFFFFFFF8));
    a3 -= a3 & 0xFFFFFFF8;
    v11 = (_QWORD *)((char *)a2 + v7);
    v12 = v7 + a4;
    v13 = v7 - (v6 & 0xFFFFFFF8);
    do
    {
      *(_QWORD *)&v9 = *(_QWORD *)(a1 + (v12 & 0xF));
      *v11++ = v9;
      v12 += 8;
      v13 += 8;
    }
    while (v13);
    if ((v6 & 0xFFFFFFF8) == v6)
      return *(double *)&v9;
    do
    {
LABEL_4:
      *(_BYTE *)v5 = *(_BYTE *)(a1 + (v4 & 0xF));
      v5 = (__int128 *)((char *)v5 + 1);
      ++v4;
      --a3;
    }
    while (a3);
  }
  return *(double *)&v9;
}

_QWORD *sub_100098F38(_QWORD *result, char *a2, int a3, uint64_t a4)
{
  char v4;

  for (; a3; --a3)
  {
    v4 = *a2++;
    *(_BYTE *)(*result + (a4++ & 0xF)) = v4;
  }
  return result;
}

uint64_t sub_100098F5C(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unsigned __int8 v3;
  _BYTE v4[8];

  v1 = *(&off_1015B46D0
       + (byte_1012F70D0[byte_101595E0C[(-31
                                                                                       * ((qword_1015F8458
                                                                                         + qword_1015F97B8) ^ 0xC0))
                                                                     - 12] ^ 0xD7] ^ (-31
                                                                                    * ((qword_1015F8458 + qword_1015F97B8) ^ 0xC0)))
       + 1585);
  v2 = (unint64_t)&v4[*v1 ^ qword_1015F97B8];
  qword_1015F97B8 = 396727777 * v2 + 0x6790357934740FC0;
  *v1 = 396727777 * (v2 ^ 0x6790357934740FC0);
  if (result)
  {
    v3 = -31 * ((*(_DWORD *)v1 - qword_1015F97B8) ^ 0xC0);
    return ((uint64_t (*)(void))((char *)*(&off_1015B46D0
                                        + (byte_101506EC4[(byte_1014343E8[v3 - 8] ^ 0xA3)
                                                                                       - 4] ^ v3)
                                        + 1505)
                              - 12))();
  }
  return result;
}

uint64_t sub_100099048(_QWORD *a1)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t (*v4)(uint64_t);
  _BYTE *v5;
  _QWORD *v6;
  _BYTE *v7;
  _QWORD *v8;
  _BYTE *v9;
  _QWORD *v10;
  _BYTE *v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  _BYTE *v15;
  _QWORD *v16;
  _BYTE *v17;
  _QWORD *v18;
  _BYTE *v19;
  _QWORD *v20;
  _BYTE *v21;
  _QWORD *v22;
  _BYTE *v23;
  _QWORD *v24;
  _BYTE *v25;
  _QWORD *v26;
  _BYTE *v27;
  _QWORD *v28;
  _BYTE *v29;
  _QWORD *v30;
  _BYTE *v31;
  _QWORD *v32;
  _BYTE *v33;
  _QWORD *v34;
  _BYTE *v35;
  char v37;

  v2 = (unint64_t *)*(&off_1015B46D0
                           + (byte_1014341E8[(byte_1012F6FDC[(-31 * ((qword_1015F8458 + qword_1015F92B8) ^ 0xC0))
                                                                                          - 12] ^ 0xB4)
                                                                          - 8] ^ (-31
                                                                                * ((qword_1015F8458 + qword_1015F92B8) ^ 0xC0)))
                           + 1752);
  v3 = 396727777 * ((*v2 + qword_1015F92B8) ^ (unint64_t)&v37 ^ 0x6790357934740FC0);
  qword_1015F92B8 = v3;
  *v2 = v3;
  v4 = (uint64_t (*)(uint64_t))*(&off_1015B46D0
                                        + (byte_101506BC0[byte_1014340E0[(-31 * ((v3 + qword_1015F92B8) ^ 0xC0))] ^ 0x6D] ^ (-31 * ((v3 + qword_1015F92B8) ^ 0xC0)))
                                        + 419);
  v5 = (_BYTE *)v4(24);
  if (!v5)
    goto LABEL_18;
  v6 = v5;
  *a1 = v5;
  sub_10009ABD4(v5, 0, 0x10uLL);
  v7 = (_BYTE *)v4(24);
  if (!v7)
    goto LABEL_18;
  v8 = v7;
  *v6 = v7;
  sub_10009ABD4(v7, 0, 0x10uLL);
  v9 = (_BYTE *)v4(24);
  if (!v9)
    goto LABEL_18;
  v10 = v9;
  *v8 = v9;
  sub_10009ABD4(v9, 0, 0x10uLL);
  v11 = (_BYTE *)v4(24);
  if (!v11)
    goto LABEL_18;
  v12 = v11;
  *v10 = v11;
  sub_10009ABD4(v11, 0, 0x10uLL);
  v13 = (_BYTE *)v4(24);
  if (!v13)
    goto LABEL_18;
  v14 = v13;
  *v12 = v13;
  sub_10009ABD4(v13, 0, 0x10uLL);
  v15 = (_BYTE *)v4(24);
  if (!v15)
    goto LABEL_18;
  v16 = v15;
  *v14 = v15;
  sub_10009ABD4(v15, 0, 0x10uLL);
  v17 = (_BYTE *)v4(24);
  if (!v17)
    goto LABEL_18;
  v18 = v17;
  *v16 = v17;
  sub_10009ABD4(v17, 0, 0x10uLL);
  v19 = (_BYTE *)v4(24);
  if (!v19)
    goto LABEL_18;
  v20 = v19;
  *v18 = v19;
  sub_10009ABD4(v19, 0, 0x10uLL);
  v21 = (_BYTE *)v4(24);
  if (!v21)
    goto LABEL_18;
  v22 = v21;
  *v20 = v21;
  sub_10009ABD4(v21, 0, 0x10uLL);
  v23 = (_BYTE *)v4(24);
  if (!v23)
    goto LABEL_18;
  v24 = v23;
  *v22 = v23;
  sub_10009ABD4(v23, 0, 0x10uLL);
  v25 = (_BYTE *)v4(24);
  if (!v25)
    goto LABEL_18;
  v26 = v25;
  *v24 = v25;
  sub_10009ABD4(v25, 0, 0x10uLL);
  v27 = (_BYTE *)v4(24);
  if (!v27)
    goto LABEL_18;
  v28 = v27;
  *v26 = v27;
  sub_10009ABD4(v27, 0, 0x10uLL);
  v29 = (_BYTE *)v4(24);
  if (!v29)
    goto LABEL_18;
  v30 = v29;
  *v28 = v29;
  sub_10009ABD4(v29, 0, 0x10uLL);
  v31 = (_BYTE *)v4(24);
  if (!v31)
    goto LABEL_18;
  v32 = v31;
  *v30 = v31;
  sub_10009ABD4(v31, 0, 0x10uLL);
  v33 = (_BYTE *)v4(24);
  if (!v33)
    goto LABEL_18;
  v34 = v33;
  *v32 = v33;
  sub_10009ABD4(v33, 0, 0x10uLL);
  v35 = (_BYTE *)v4(24);
  if (v35)
  {
    *v34 = v35;
    sub_10009ABD4(v35, 0, 0x10uLL);
    return 0;
  }
  else
  {
LABEL_18:
    ((void (*)(_QWORD))*(&off_1015B46D0
                                  + ((-31 * ((*(_DWORD *)v2 + qword_1015F92B8) ^ 0xC0)) ^ byte_101506BC0[byte_1014340E0[(-31 * ((*(_DWORD *)v2 + qword_1015F92B8) ^ 0xC0))] ^ 0x6D])
                                  + 2137))(*a1);
    *a1 = 0;
    return 0xFFFFFFFFLL;
  }
}

uint64_t *sub_1000993B0(uint64_t *result, _BYTE *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t *v6;
  uint64_t v7;
  BOOL v8;

  for (; a3; --a3)
  {
    v4 = result[1];
    if (v4)
      v5 = v4 == a4;
    else
      v5 = 1;
    v6 = result;
    if (!v5)
    {
      v6 = result;
      do
      {
        v6 = (uint64_t *)*v6;
        v7 = v6[1];
        if (v7)
          v8 = v7 == a4;
        else
          v8 = 1;
      }
      while (!v8);
    }
    *a2++ = *((_BYTE *)v6 + 16);
    ++a4;
  }
  return result;
}

uint64_t *sub_1000993FC(uint64_t *result, char *a2, int a3, uint64_t a4)
{
  char v4;
  uint64_t *v5;
  uint64_t v6;
  BOOL v7;

  for (; a3; --a3)
  {
    v4 = *a2;
    v5 = result;
    do
    {
      v5 = (uint64_t *)*v5;
      v6 = v5[1];
      if (v6)
        v7 = v6 == a4;
      else
        v7 = 1;
    }
    while (!v7);
    if (!v6)
      v5[1] = a4;
    *((_BYTE *)v5 + 16) = v4;
    ++a2;
    ++a4;
  }
  return result;
}

_QWORD *sub_100099440(_QWORD *result)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  unsigned __int8 v4;
  char v5;

  v1 = *(&off_1015B46D0
       + (byte_1014341E8[(byte_1012F6FDC[(-31
                                                                                        * ((qword_1015F8458
                                                                                          + qword_1015F8588) ^ 0xC0))
                                                                      - 12] ^ 0x68)
                                                      - 8] ^ (-31 * ((qword_1015F8458 + qword_1015F8588) ^ 0xC0)))
       + 1763);
  v2 = (unint64_t)&v5 ^ qword_1015F8588 ^ *v1;
  qword_1015F8588 = 396727777 * v2 + 0x4FB3C7470DEC97C0;
  *v1 = 396727777 * (v2 ^ 0x6790357934740FC0);
  if (result)
  {
    do
    {
      v3 = (_QWORD *)*result;
      v4 = -31 * (qword_1015F8588 ^ *(_DWORD *)v1 ^ 0xC0);
      ((void (*)(void))((char *)*(&off_1015B46D0
                                + (byte_1012F70D0[byte_101595E0C[v4 - 12] ^ 0x19] ^ v4)
                                + 1550)
                      - 12))();
      result = v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_10009956C(uint64_t *a1)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[8];

  v2 = (uint64_t *)*(&off_1015B46D0
                  + (byte_1012F70D0[byte_101595E0C[(-31
                                                                                                  * ((qword_1015F8458 - qword_1015F97B0) ^ 0xC0))
                                                                                - 12] ^ 0xD7] ^ (-31
                                                                                               * ((qword_1015F8458
                                                                                                 - qword_1015F97B0) ^ 0xC0)))
                  + 1585);
  v3 = (unint64_t)&v9[*v2 - qword_1015F97B0];
  v4 = 396727777 * v3 - 0x6790357934740FC0;
  v5 = 396727777 * (v3 ^ 0x6790357934740FC0);
  qword_1015F97B0 = v4;
  *v2 = v5;
  v6 = ((uint64_t (*)(uint64_t))*(&off_1015B46D0
                                         + (byte_101595D04[(byte_101506CC8[(-31 * (qword_1015F97B0 ^ 0xC0 ^ v5)) - 8] ^ 0x40)
                                                                                        - 4] ^ (-31
                                                                                              * (qword_1015F97B0 ^ 0xC0 ^ v5)))
                                         + 497))(16);
  if (v6)
    v7 = 0;
  else
    v7 = 0xFFFFFFFFLL;
  *a1 = v6;
  return v7;
}

uint64_t sub_100099674(uint64_t result, _BYTE *a2, int a3, uint64_t a4)
{
  uint64_t v4;

  if (a3)
  {
    v4 = result + a4 * (result | 1);
    do
    {
      *a2++ = *(_BYTE *)(result + (v4 & 0xF));
      v4 += result | 1;
      --a3;
    }
    while (a3);
  }
  return result;
}

_QWORD *sub_10009969C(_QWORD *result, char *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (a3)
  {
    v4 = *result | 1;
    v5 = *result + v4 * a4;
    do
    {
      v6 = *a2++;
      *(_BYTE *)(*result + (v5 & 0xF)) = v6;
      v5 += v4;
      --a3;
    }
    while (a3);
  }
  return result;
}

uint64_t sub_1000996CC(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unsigned __int8 v3;
  char v4;

  v1 = *(&off_1015B46D0
       + (byte_101506BC4[(byte_1014340EC[(-31
                                                                                        * (qword_1015F8FC8 ^ 0xC0 ^ qword_1015F8458))
                                                                      - 12] ^ 0x6D)
                                                      - 4] ^ (-31 * (qword_1015F8FC8 ^ 0xC0 ^ qword_1015F8458)))
       + 1551);
  v2 = (*v1 + qword_1015F8FC8) ^ (unint64_t)&v4;
  qword_1015F8FC8 = 396727777 * v2 + 0x6790357934740FC0;
  *v1 = 396727777 * (v2 ^ 0x6790357934740FC0);
  if (result)
  {
    v3 = -31 * ((*(_DWORD *)v1 + qword_1015F8FC8) ^ 0xC0);
    return ((uint64_t (*)(void))((char *)*(&off_1015B46D0
                                        + (byte_1014341E8[(byte_1012F6FDC[v3 - 12] ^ 0xB4)
                                                                                       - 8] ^ v3)
                                        + 1639)
                              - 12))();
  }
  return result;
}

uint64_t sub_1000997BC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  unsigned __int8 v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t i;
  _QWORD *v14;
  char v15;
  int v16;
  _BYTE *v17;
  int v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t *v25;
  unsigned int v26;
  char v27;

  v1 = a1;
  v2 = (uint64_t *)*(&off_1015B46D0
                  + (byte_1014341E0[byte_1012F6FD0[(-31
                                                                                                  * (qword_1015F8580 ^ 0xC0 ^ qword_1015F8458))] ^ 0x48] ^ (-31 * (qword_1015F8580 ^ 0xC0 ^ qword_1015F8458)))
                  + 1718);
  v3 = (*v2 - qword_1015F8580) ^ (unint64_t)&v27;
  v4 = (396727777 * v3) ^ 0x6790357934740FC0;
  v5 = 396727777 * (v3 ^ 0x6790357934740FC0);
  qword_1015F8580 = v4;
  *v2 = v5;
  v26 = *(&off_1015B46D0
                      + ((-31 * ((v5 + qword_1015F8580) ^ 0xC0)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * ((v5 + qword_1015F8580) ^ 0xC0))] ^ 0xB4])
                      + 2317) ^ a1;
  v6 = (uint64_t (*)(uint64_t))*(&off_1015B46D0
                                        + ((-31 * (qword_1015F8580 ^ 0xC0 ^ *(_DWORD *)v2)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * (qword_1015F8580 ^ 0xC0 ^ *(_DWORD *)v2))] ^ 0xBE])
                                        + 397);
  v7 = v6(256);
  v8 = -31 * ((*(_DWORD *)v2 + qword_1015F8580) ^ 0xC0);
  v9 = (void (*)(void))((char *)*(&off_1015B46D0
                                + (byte_1012F70D0[byte_101595E0C[v8 - 12] ^ 0x19] ^ v8)
                                + 1550)
                      - 12);
  if (v7)
  {
    v10 = v7;
    v11 = 0;
    v25 = v1;
    *v1 = v7;
    v12 = v7 + 2;
    for (i = 1; ; ++i)
    {
      v26 = v12 + v11 + v26 * &v26;
      v14 = (_QWORD *)(v10 + v11);
      *(_BYTE *)(v10 + v11 + 8) = v26 & 3;
      v15 = v26;
      v16 = (v12 + v11) & 3;
      v17 = (_BYTE *)v6(~(-2 << ((v12 + v11) & 3)));
      if (!v17)
        break;
      if (v16)
      {
        v18 = -1 << v16;
        if ((-1 << v16) >= 0xFFFFFFFE)
          v18 = -2;
        *v17 = ((v15 * v15) ^ 1) & 1;
        if (v16 != 1)
        {
          v19 = (((v15 * v15) ^ 1) * ((v15 * v15) ^ 1)) ^ 1;
          v17[1] = v19 & 1;
          v20 = (v19 * v19) ^ 1;
          v17[2] = v20 & 1;
          if (v18 != -4)
          {
            v21 = (v20 * v20) ^ 1;
            v17[3] = v21 & 1;
            v22 = (v21 * v21) ^ 1;
            v17[4] = v22 & 1;
            if (v18 != -6)
            {
              v17[5] = (v22 & 1) == 0;
              v17[6] = (v22 & 1) != 0;
            }
          }
        }
      }
      *(_QWORD *)(v10 + v11) = v17;
      v11 += 16;
      if (v11 == 256)
        return 0;
    }
    *v14 = 0;
    v1 = v25;
    do
    {
      if (*v14)
        v9();
      v14 -= 2;
    }
    while (i-- > 1);
    v7 = v10;
  }
  ((void (*)(uint64_t))v9)(v7);
  *v1 = 0;
  return 0xFFFFFFFFLL;
}

uint64_t sub_100099A9C(uint64_t result, _BYTE *a2, int a3, char a4)
{
  int v5;
  uint64_t v7;

  if (a3)
  {
    v5 = a3;
    v7 = result;
    do
    {
      result = sub_100099FCC(*(_QWORD *)(v7 + 16 * (a4 & 0xF)), 0, *(unsigned __int8 *)(v7 + 16 * (a4 & 0xF) + 8));
      *a2++ = result;
      ++a4;
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_100099AF8(uint64_t result, unsigned __int8 *a2, int a3, char a4)
{
  _QWORD *v4;
  unint64_t v5;
  int v7;
  _QWORD *v9;
  unsigned int v10;
  _BYTE v11[8];

  v4 = *(&off_1015B46D0
       + (byte_101595D04[(byte_101506CC8[(-31
                                                                                        * ((qword_1015F8458
                                                                                          + qword_1015F8FD0) ^ 0xC0))
                                                                      - 8] ^ 0xF6)
                                                      - 4] ^ (-31 * ((qword_1015F8458 + qword_1015F8FD0) ^ 0xC0)))
       + 1696);
  v5 = (unint64_t)&v11[*v4 - qword_1015F8FD0];
  qword_1015F8FD0 = 396727777 * v5 - 0x6790357934740FC0;
  *v4 = 396727777 * (v5 ^ 0x6790357934740FC0);
  if (a3)
  {
    v7 = a3;
    v9 = (_QWORD *)result;
    do
    {
      v10 = *a2++;
      result = ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))((char *)*(&off_1015B46D0
                                                                                 + (byte_101506DC0[byte_1014342E0[(-31 * ((*(_DWORD *)v4 - qword_1015F8FD0) ^ 0xC0))] ^ 0xCD] ^ (-31 * ((*(_DWORD *)v4 - qword_1015F8FD0) ^ 0xC0)))
                                                                                 + 1079)
                                                                       - 8))(*(_QWORD *)(*v9 + 16 * (a4 & 0xF)), 0, *(unsigned __int8 *)(*v9 + 16 * (a4 & 0xF) + 8), v10);
      ++a4;
      --v7;
    }
    while (v7);
  }
  return result;
}

_QWORD *sub_100099C68(_QWORD *result)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t (*v5)(_QWORD *);
  char v6;

  v1 = *(&off_1015B46D0
       + (byte_101506DC0[byte_1014342E0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         - qword_1015F92C8) ^ 0xC0))] ^ 0xCD] ^ (-31 * ((qword_1015F8458 - qword_1015F92C8) ^ 0xC0)))
       + 1607);
  v2 = (*v1 + qword_1015F92C8) ^ (unint64_t)&v6;
  qword_1015F92C8 = 396727777 * v2 - 0x6790357934740FC0;
  *v1 = 396727777 * (v2 ^ 0x6790357934740FC0);
  if (result)
  {
    v3 = result;
    v4 = -31 * (qword_1015F92C8 ^ 0xC0 ^ *(_DWORD *)v1);
    v5 = (uint64_t (*)(_QWORD *))((char *)*(&off_1015B46D0
                                                    + (byte_1012F70D0[byte_101595E0C[v4 - 12] ^ 0x19] ^ v4)
                                                    + 1550)
                                          - 12);
    v5((_QWORD *)*result);
    v5((_QWORD *)v3[2]);
    v5((_QWORD *)v3[4]);
    v5((_QWORD *)v3[6]);
    v5((_QWORD *)v3[8]);
    v5((_QWORD *)v3[10]);
    v5((_QWORD *)v3[12]);
    v5((_QWORD *)v3[14]);
    v5((_QWORD *)v3[16]);
    v5((_QWORD *)v3[18]);
    v5((_QWORD *)v3[20]);
    v5((_QWORD *)v3[22]);
    v5((_QWORD *)v3[24]);
    v5((_QWORD *)v3[26]);
    v5((_QWORD *)v3[28]);
    v5((_QWORD *)v3[30]);
    return (_QWORD *)v5(v3);
  }
  return result;
}

uint64_t sub_100099E3C(uint64_t result, unsigned int a2, int a3, char a4)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  int v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  BOOL v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  int v16;
  uint64_t v17;
  unsigned __int8 v18;
  char *v19;
  char v20;
  char v21;

  v4 = result;
  v5 = *(&off_1015B46D0
       + (byte_101595D04[(byte_101506CC8[(-31
                                                                                        * ((qword_1015F8458
                                                                                          + qword_1015F8590) ^ 0xC0))
                                                                      - 8] ^ 0xF6)
                                                      - 4] ^ (-31 * ((qword_1015F8458 + qword_1015F8590) ^ 0xC0)))
       + 1696);
  v6 = (*v5 - qword_1015F8590) ^ (unint64_t)&v21;
  qword_1015F8590 = 396727777 * v6 - 0x6790357934740FC0;
  *v5 = 396727777 * (v6 ^ 0x6790357934740FC0);
  if (a3)
  {
    v7 = &v20 ^ a2;
    v8 = v7 ^ a4;
    v9 = v7 + a4;
    if ((a4 & 1) != 0)
      v9 = v8;
    v10 = *(unsigned __int8 *)(result + a2);
    v11 = v9 ^ a4;
    if (*(_BYTE *)(result + a2))
    {
      v11 = 0;
      v12 = 0;
    }
    else
    {
      v12 = v9;
    }
    v13 = v10 == 1;
    if (v10 == 1)
      v14 = a4 - v9;
    else
      v14 = v11;
    if (v13)
      v15 = v9;
    else
      v15 = v12;
    v16 = 2 * a2;
    v17 = (a3 - 1);
    v18 = -31 * (qword_1015F8590 ^ 0xC0 ^ *(_DWORD *)v5);
    v19 = (char *)*(&off_1015B46D0
                  + (byte_1014341E8[(byte_1012F6FDC[v18 - 12] ^ 0xBA) - 8] ^ v18)
                  + 1146)
        - 8;
    ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD))v19)(result, (2 * a2) | 1, v17, v14);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))v19)(v4, (v16 + 2), v17, v15);
  }
  else
  {
    *(_BYTE *)(result + a2) = a4;
  }
  return result;
}

uint64_t sub_100099FCC(uint64_t a1, unsigned int a2, int a3)
{
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  unsigned __int8 v9;

  if (a3)
  {
    v5 = 2 * a2;
    v6 = (a3 - 1);
    v7 = sub_100099FCC(a1, (2 * a2) | 1, v6);
    v8 = sub_100099FCC(a1, (v5 + 2), v6);
    v9 = v8 ^ v7;
    if (*(_BYTE *)(a1 + a2))
      v9 = *(_BYTE *)(a1 + a2);
    if (*(_BYTE *)(a1 + a2) == 1)
      return (v8 + v7);
    else
      return v9;
  }
  else
  {
    return *(unsigned __int8 *)(a1 + a2);
  }
}

uint64_t sub_10009A058()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[8];

  v0 = (uint64_t *)*(&off_1015B46D0
                  + (byte_1014341E8[(byte_1012F6FDC[(-31 * ((qword_1015F8458 + qword_1015F8578) ^ 0xC0))
                                                                                 - 12] ^ 0xB4)
                                                                 - 8] ^ (-31
                                                                       * ((qword_1015F8458 + qword_1015F8578) ^ 0xC0)))
                  + 1752);
  v1 = (unint64_t)&v5[qword_1015F8578 + *v0];
  v2 = 396727777 * v1 + 0x6790357934740FC0;
  v3 = 396727777 * (v1 ^ 0x6790357934740FC0);
  qword_1015F8578 = v2;
  *v0 = v3;
  return ((uint64_t (*)(void))*(&off_1015B46D0
                             + (byte_101506DC0[byte_1014342E0[(-31 * (qword_1015F8578 ^ 0xC0 ^ v3))] ^ 7] ^ (-31 * (qword_1015F8578 ^ 0xC0 ^ v3)))
                             + 408))();
}

unint64_t sub_10009A12C(uint64_t a1, unsigned int a2, int a3)
{
  __objc2_class_ro *v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  __objc2_class_ro *v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  char base_meths;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unsigned __int8 v25;
  unsigned int v26;
  unsigned int i;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int j;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  _QWORD *v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  uint64_t v43;
  unsigned int v44;
  _QWORD *v45;
  int v46;
  _DWORD *v47;
  unsigned int v48;
  _BYTE v49[12];

  v3 = &CertificateRevocationList__metaData;
  v4 = *(&off_1015B46D0
       + (byte_1012F70D0[byte_101595E0C[(-31
                                                                                       * ((qword_1015F8458
                                                                                         - qword_1015F97A8) ^ 0xC0))
                                                                     - 12] ^ 0xD7] ^ (-31
                                                                                    * ((qword_1015F8458 - qword_1015F97A8) ^ 0xC0)))
       + 1585);
  v5 = (unint64_t)&v49[qword_1015F97A8 + 4 + *v4];
  qword_1015F97A8 = 396727777 * v5 - 0x6790357934740FC0;
  v47 = v4;
  *v4 = 396727777 * (v5 ^ 0x6790357934740FC0);
  if ((unint64_t)(a1 - 16777217) >= 0xFFFFFFFFFF000000)
  {
    v43 = (a1 >> 4) + 1;
    while (1)
    {
      v9 = v3;
      v10 = -31 * (qword_1015F97A8 ^ *v47 ^ 0xC0);
      v11 = ((uint64_t (*)(uint64_t))*(&off_1015B46D0
                                              + (byte_1014341E8[(byte_1012F6FDC[v10 - 12] ^ 0xBE)
                                                                                             - 8] ^ v10)
                                              + 397))(16 * v43 + 31);
      if (!v11)
        break;
      v12 = v11;
      v3 = v9;
      base_meths = (char)v9[15].base_meths;
      v14 = *(_QWORD *)*(&off_1015B46D0
                       + (byte_101506DC0[byte_1014342E0[(-31 * (qword_1015F97A8 ^ 0xC0 ^ base_meths))] ^ 0xCD] ^ (-31 * (qword_1015F97A8 ^ 0xC0 ^ base_meths)))
                       + 1514);
      v15 = v11 + ((v14 - v11) & 0xF);
      v16 = v15 + 16;
      v17 = *(_QWORD *)*(&off_1015B46D0
                       + (byte_101506EC0[byte_1014343E0[(-31
                                                                                         * ((base_meths - qword_1015F97A8) ^ 0xC0))] ^ 0x7A] ^ (-31 * ((base_meths - qword_1015F97A8) ^ 0xC0)))
                       - 57);
      v6 = v17 + ((v15 + 16 - v14) & 0xFFFFFFFFFFFFFFF0);
      if (v6)
        v18 = v6 + a1 >= v6;
      else
        v18 = 0;
      if (v18)
      {
        v19 = qword_1015F97A8;
        v20 = (char)v3[15].base_meths;
        v21 = (uint64_t)*(&off_1015B46D0
                       + ((-31 * ((v20 - v19) ^ 0xC0)) ^ byte_101506EC0[byte_1014343E0[(-31 * ((v20 - v19) ^ 0xC0))] ^ 0x79])
                       + 1994);
        v22 = *(_QWORD *)(v21 - 4);
        v23 = (unint64_t *)*(&off_1015B46D0
                                  + (byte_101595D00[byte_101506CC0[(-31 * ((v20 + v19) ^ 0xC0))] ^ 0x40] ^ (-31 * ((v20 + v19) ^ 0xC0)))
                                  + 628);
        v24 = *v23;
        if (v22 == *v23)
        {
          v24 = v16 + 16 * v43 + 16;
          v22 = v15 + 16;
        }
        if (v16 <= v22)
          v22 = v15 + 16;
        *(_QWORD *)(v21 - 4) = v22;
        if (v16 + 16 * v43 + 16 >= v24)
          v24 = v16 + 16 * v43 + 16;
        *v23 = v24;
        if (!((v24 - v22) >> 60))
        {
          v48 = v43;
          v49[0] = (v14 - v11) & 0xF;
          v25 = v14 + a3 + v17;
          v26 = a2 / 0x21;
          for (i = a3 & 0xFFFE | 1; ; i /= v29)
          {
            v28 = i <= v26 ? i : a2 / 0x21 + 1;
            v29 = i <= v26 ? a2 / 0x21 + 1 : i;
            do
            {
              v30 = v29;
              v29 = v28;
              v28 = v30 % v28;
            }
            while (v28);
            if (v29 == 1)
              break;
          }
          for (j = a3 | 1; ; j /= v33)
          {
            v32 = j >= v43 ? v43 : j;
            v33 = j <= v43 ? v43 : j;
            do
            {
              v34 = v33;
              v33 = v32;
              v32 = v34 % v32;
            }
            while (v32);
            if (v33 == 1)
              break;
          }
          v44 = a2 / 0x21 + 1;
          v46 = v25;
          v35 = v25 % v44;
          *(_BYTE *)(v15 + 8) = v35;
          v36 = *(&off_1015B46D0
                + ((-31 * ((LOBYTE(v3[15].base_meths) + qword_1015F97A8) ^ 0xC0)) ^ byte_101595D00[byte_101506CC0[(-31 * ((LOBYTE(v3[15].base_meths) + qword_1015F97A8) ^ 0xC0))] ^ 0x40])
                + 1555);
          if (((*(uint64_t (**)(uint64_t))(*v36 + 32 * v35))(v15) & 0x80000000) == 0)
          {
            v45 = v36;
            if (!v48)
            {
LABEL_43:
              (*(void (**)(uint64_t, unsigned int *, uint64_t, uint64_t))(*v45
                                                                                + 32 * *(unsigned __int8 *)(v15 + 8)
                                                                                + 16))(v15, &v48, 4, 16);
              (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(*v45
                                                                         + 32 * *(unsigned __int8 *)(v15 + 8)
                                                                         + 16))(v15, v49, 1, 20);
              return v6;
            }
            v37 = 0;
            v38 = j % v48;
            while (1)
            {
              v39 = (v46 + i) % v44;
              *(_BYTE *)(v16 + 16 * v38 + 8) = v39;
              v46 = v39;
              if (((*(uint64_t (**)(void))(*v45 + 32 * v39))() & 0x80000000) != 0)
                break;
              v38 = (v38 + j) % v48;
              if (++v37 >= v48)
                goto LABEL_43;
            }
            if (v37)
            {
              v40 = -v37;
              do
              {
                v38 = (v38 - j) % v48;
                (*(void (**)(_QWORD))(*v45 + 32 * *(unsigned __int8 *)(v16 + 16 * v38 + 8) + 24))(*(_QWORD *)(v16 + 16 * v38));
                v18 = __CFADD__(v40++, 1);
              }
              while (!v18);
            }
          }
        }
        if (v15)
          ((void (*)(uint64_t))((char *)*(&off_1015B46D0
                                                  + ((-31
                                                                                   * ((*v47 + qword_1015F97A8) ^ 0xC0)) ^ byte_101506DC0[byte_1014342E0[(-31 * ((*v47 + qword_1015F97A8) ^ 0xC0))] ^ 0xCD])
                                                  + 1494)
                                        - 12))(v12);
        return 0;
      }
    }
  }
  return 0;
}

uint64_t sub_10009A6DC()
{
  unint64_t *v0;
  unint64_t v1;
  char v3;

  v0 = (unint64_t *)*(&off_1015B46D0
                           + (byte_101506DC0[byte_1014342E0[(-31 * ((qword_1015F8458 + qword_1015F92C0) ^ 0xC0))] ^ 0xCD] ^ (-31 * ((qword_1015F8458 + qword_1015F92C0) ^ 0xC0)))
                           + 1607);
  v1 = 396727777 * ((*v0 - qword_1015F92C0) ^ (unint64_t)&v3 ^ 0x6790357934740FC0);
  qword_1015F92C0 = v1;
  *v0 = v1;
  return ((uint64_t (*)(void))((char *)*(&off_1015B46D0
                                      + ((-31 * ((v1 - qword_1015F92C0) ^ 0xC0)) ^ byte_101506DC0[byte_1014342E0[(-31 * ((v1 - qword_1015F92C0) ^ 0xC0))] ^ 0xCD])
                                      + 1494)
                            - 12))();
}

uint64_t sub_10009A7A4(uint64_t result)
{
  _QWORD *v1;
  char v2;
  char v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE v10[12];

  v1 = *(&off_1015B46D0
       + (byte_1012F70D0[byte_101595E0C[(-31
                                                                                       * ((qword_1015F8458
                                                                                         - qword_1015F8FC0) ^ 0xC0))
                                                                     - 12] ^ 0x19] ^ (-31
                                                                                    * ((qword_1015F8458 - qword_1015F8FC0) ^ 0xC0)))
       + 1663);
  qword_1015F8FC0 = 396727777 * ((unint64_t)&v10[*v1 - qword_1015F8FC0 + 4] ^ 0x6790357934740FC0);
  *v1 = qword_1015F8FC0;
  if (result)
  {
    v2 = qword_1015F8FC0;
    v3 = qword_1015F8458;
    v4 = *(_QWORD *)*(&off_1015B46D0
                    + (byte_1014341E8[(byte_1012F6FDC[(-31 * ((v3 - v2) ^ 0xC0))
                                                                                   - 12] ^ 0x48)
                                                                   - 8] ^ (-31 * ((v3 - v2) ^ 0xC0)))
                    + 1625)
       + ((result
         - *(_QWORD *)*(&off_1015B46D0
                      + (byte_101506EC0[byte_1014343E0[(-31 * (v2 ^ 0xC0 ^ v3))] ^ 0xA3] ^ (-31 * (v2 ^ 0xC0 ^ v3)))
                      - 35)) & 0xFFFFFFFFFFFFFFF0);
    v5 = *(&off_1015B46D0
         + ((-31 * ((v3 + v2) ^ 0xC0)) ^ byte_101506EC0[byte_1014343E0[(-31 * ((v3 + v2) ^ 0xC0))] ^ 0x7A])
         + 1522);
    v6 = v4 - 16;
    (*(void (**)(_QWORD, int *, uint64_t, uint64_t))(*v5 + 32 * *(unsigned __int8 *)(v4 - 8) + 8))(*(_QWORD *)(v4 - 16), &v9, 4, 16);
    (*(void (**)(_QWORD, _BYTE *, uint64_t, uint64_t))(*v5 + 32 * *(unsigned __int8 *)(v4 - 8) + 8))(*(_QWORD *)(v4 - 16), v10, 1, 20);
    if ((v9 & 0x80000000) == 0)
    {
      v7 = (unsigned __int8 *)(v4 - 8);
      v8 = -1;
      do
      {
        (*(void (**)(_QWORD))(*v5 + 32 * *v7 + 24))(*((_QWORD *)v7 - 1));
        ++v8;
        v7 += 16;
      }
      while (v8 < v9);
    }
    return ((uint64_t (*)(unint64_t))((char *)*(&off_1015B46D0
                                                               + (byte_101506DC0[byte_1014342E0[(-31 * (qword_1015F8FC0 ^ *(_BYTE *)v1 ^ 0xC0))] ^ 0x63] ^ (-31 * (qword_1015F8FC0 ^ *(_BYTE *)v1 ^ 0xC0)))
                                                               + 1661)
                                                     - 12))(v6 - v10[0]);
  }
  return result;
}

char *sub_10009AA14(char *result, char *a2, unint64_t a3)
{
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  BOOL v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
      return (char *)((uint64_t (*)(void))((char *)&loc_10009AAE8 + 4 * byte_1011CB128[a3 & 7]))();
  }
  else
  {
    v3 = -(int)result & 7;
    switch((int)v3)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        v4 = *result++;
        *a2++ = v4;
LABEL_6:
        v5 = *result++;
        *a2++ = v5;
LABEL_7:
        v6 = *result++;
        *a2++ = v6;
LABEL_8:
        v7 = *result++;
        *a2++ = v7;
LABEL_9:
        v8 = *result++;
        *a2++ = v8;
LABEL_10:
        v9 = *result++;
        *a2++ = v9;
LABEL_11:
        v10 = *result++;
        *a2++ = v10;
        break;
      default:
        break;
    }
    v11 = a3 >= v3;
    v12 = a3 - v3;
    if (!v11)
      v12 = 0;
    v13 = v12 & 7;
    switch(v13)
    {
      case 0uLL:
        return result;
      case 1uLL:
        goto LABEL_24;
      case 2uLL:
        goto LABEL_23;
      case 3uLL:
        goto LABEL_22;
      case 4uLL:
        goto LABEL_21;
      case 5uLL:
        goto LABEL_20;
      case 6uLL:
        goto LABEL_19;
      case 7uLL:
        v14 = *result++;
        *a2++ = v14;
LABEL_19:
        v15 = *result++;
        *a2++ = v15;
LABEL_20:
        v16 = *result++;
        *a2++ = v16;
LABEL_21:
        v17 = *result++;
        *a2++ = v17;
LABEL_22:
        v18 = *result++;
        *a2++ = v18;
LABEL_23:
        v19 = *result++;
        *a2++ = v19;
LABEL_24:
        *a2 = *result;
        break;
      default:
        result = (char *)((uint64_t (*)(void))((char *)&loc_10009AB34 + 4 * byte_1011CB137[(v13 >> 3) & 7]))();
        break;
    }
  }
  return result;
}

_BYTE *sub_10009ABD4(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_10009AC64 + 4 * byte_1011CB14E[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_10009ACC8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  _BYTE v7[8];
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v2 = *(&off_1015B46D0
       + (byte_1014341E8[(byte_1012F6FDC[(-31
                                                                                        * (qword_1015F9798 ^ 0xC0 ^ qword_1015F8458))
                                                                      - 12] ^ 0x48)
                                                      - 8] ^ (-31 * (qword_1015F9798 ^ 0xC0 ^ qword_1015F8458)))
       + 1718);
  v3 = (unint64_t)&v7[*v2 ^ qword_1015F9798];
  qword_1015F9798 = 396727777 * (v3 - 0x6790357934740FC0);
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = 2142736129
     * ((((unint64_t)&v8 ^ 0xC0926241AA846800) & 0xCFD3F677BA966ACALL | ((unint64_t)&v8 ^ 0x8010005088001) & 0x302C098845699535) ^ 0xBD816B4DCCD47C08);
  v8 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F9798) ^ 0xC0)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * ((qword_1015F8458 - qword_1015F9798) ^ 0xC0))] ^ 0xB4])
                   + 331)
       + 4221) ^ v4;
  v12 = a2;
  v10 = a1;
  v9 = v4 ^ 0x8B395632;
  v5 = -31 * (qword_1015F9798 ^ 0xC0 ^ *(_DWORD *)v2);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101506EC4[(byte_1014343E8[v5 - 8] ^ 0x7A) - 4] ^ v5)
                                                     + 2033)
                                           - 8))(&v8);
  return v11;
}

#error "10009AEC8: too big function (funcsize=0)"

uint64_t sub_1000BA0B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  char v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v2 = *(&off_1015B46D0
       + (byte_101506DC0[byte_1014342E0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         + qword_1015F8FB0) ^ 0xC0))] ^ 0xCD] ^ (-31 * ((qword_1015F8458 + qword_1015F8FB0) ^ 0xC0)))
       + 1607);
  v3 = (*v2 - qword_1015F8FB0) ^ (unint64_t)&v7;
  qword_1015F8FB0 = 396727777 * v3 + 0x6790357934740FC0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = 2142736129 * ((unint64_t)&v8 ^ 0x7D1B080C63589409);
  v8 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F8FB0) ^ 0xC0)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * ((qword_1015F8458 - qword_1015F8FB0) ^ 0xC0))] ^ 0xBA])
                   + 253)
       + 4198) ^ v4;
  v9 = v4 ^ 0x8B395632;
  v10 = a1;
  v12 = a2;
  v5 = -31 * ((*(_DWORD *)v2 - qword_1015F8FB0) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101595D04[(byte_101506CC8[v5 - 8] ^ 0xF6) - 4] ^ v5)
                                                     + 2133)
                                           - 8))(&v8);
  return v11;
}

uint64_t sub_1000BA264(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  _DWORD v4[2];
  unint64_t *v5;
  uint64_t vars0;

  v1 = result;
  v2 = *(_DWORD *)(result + 12)
     + 1910742433 * ((result - 2054164082 - 2 * (result & 0x858FF18E)) ^ 0xCA27996A)
     + 503756542;
  if (*(_DWORD *)(*(_QWORD *)result - 0x108C66E0C4940CDBLL) >= (unint64_t)(*(_DWORD *)(result + 12)
                                                                                 + 1910742433
                                                                                 * (((int)result
                                                                                   - 2054164082
                                                                                   - 2 * (result & 0x858FF18E)) ^ 0xCA27996A)
                                                                                 + 1348539785))
  {
    v3 = -1926392730;
  }
  else
  {
    v4[0] = v2
          - 509340803
          * ((&vars0 - 750937390 - 2 * ((&vars0 - 40) & 0xD33D9AFA)) ^ 0x1F4AA27C)
          - 1141240268;
    v5 = &STACK[0x243272AB8A09BE55];
    result = ((uint64_t (*)(_DWORD *))*(&off_1015B46D0 + v2 + 844783435))(v4);
    v3 = v4[1];
  }
  *(_DWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t sub_1000BA52C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  char v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v2 = *(&off_1015B46D0
       + (byte_101506EC4[(byte_1014343E8[(-31
                                                                                        * ((qword_1015F8458
                                                                                          + qword_1015F8FA0) ^ 0xC0))
                                                                      - 8] ^ 0xA3)
                                                      - 4] ^ (-31 * ((qword_1015F8458 + qword_1015F8FA0) ^ 0xC0)))
       + 1618);
  v3 = qword_1015F8FA0 - (_QWORD)&v7 + *v2;
  qword_1015F8FA0 = 396727777 * v3 + 0x4FB3C7470DEC97C0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = 2142736129
     * ((((unint64_t)&v8 | 0x7516D5511C44F4FLL)
       - ((unint64_t)&v8 | 0xF8AE92AAEE3BB0B0)
       - 0x7516D5511C44F50) ^ 0x7A4A6559729CDB46);
  v8 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F8FA0) ^ 0xC0)) ^ byte_101506DC0[byte_1014342E0[(-31 * ((qword_1015F8458 - qword_1015F8FA0) ^ 0xC0))] ^ 7])
                   + 119)
       + 4215) ^ v4;
  v9 = v4 ^ 0x8B395632;
  v12 = a2;
  v10 = a1;
  v5 = -31 * ((*(_DWORD *)v2 + qword_1015F8FA0) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101595D04[(byte_101506CC8[v5 - 8] ^ 0x40) - 4] ^ v5)
                                                     + 2066)
                                           - 8))(&v8);
  return v11;
}

uint64_t sub_1000BA710(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  char v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v2 = *(&off_1015B46D0
       + (byte_101506BC4[(byte_1014340EC[(-31
                                                                                        * ((qword_1015F8458
                                                                                          - qword_1015F92A0) ^ 0xC0))
                                                                      - 12] ^ 0x6D)
                                                      - 4] ^ (-31 * ((qword_1015F8458 - qword_1015F92A0) ^ 0xC0)))
       + 1551);
  qword_1015F92A0 = 396727777 * ((*v2 + qword_1015F92A0) ^ (unint64_t)&v7 ^ 0x6790357934740FC0);
  *v2 = qword_1015F92A0;
  v3 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 + qword_1015F92A0) ^ 0xC0)) ^ byte_1012F70D0[byte_101595E00[(-31 * ((qword_1015F8458 + qword_1015F92A0) ^ 0xC0))] ^ 0x19])
                   + 242)
       + 4176);
  v4 = 2142736129
     * ((~(unint64_t)&v8 & 0xF609A7A93BF2D4 | (unint64_t)&v8 & 0xFF09F65856C40D2BLL) ^ 0x7DED01ABCA6366DDLL);
  v9 = v4 ^ 0x8B395632;
  v8 = v3 ^ v4;
  v12 = a2;
  v10 = a1;
  v5 = -31 * (qword_1015F92A0 ^ 0xC0 ^ *(_DWORD *)v2);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101595D04[(byte_101506CC8[v5 - 8] ^ 0xF6) - 4] ^ v5)
                                                     + 2133)
                                           - 8))(&v8);
  return v11;
}

uint64_t sub_1000BA8E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v2 = *(&off_1015B46D0
       + (byte_101506EC0[byte_1014343E0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         - qword_1015F8570) ^ 0xC0))] ^ 0x79] ^ (-31 * ((qword_1015F8458 - qword_1015F8570) ^ 0xC0)))
       + 1685);
  v3 = qword_1015F8570 - (_QWORD)&v6 + *v2;
  qword_1015F8570 = 396727777 * (v3 - 0x6790357934740FC0);
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = 2142736129
     * ((~(unint64_t)&v7 & 0x1FA44E64F10748D4 | (unint64_t)&v7 & 0xE05BB19B0EF8B72BLL) ^ 0x62BF4668925FDCDDLL);
  v7 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F8570) ^ 0xC0)) ^ byte_101506DC0[byte_1014342E0[(-31 * ((qword_1015F8458 - qword_1015F8570) ^ 0xC0))] ^ 7])
                   + 119)
       + 4209) ^ v4;
  v11 = a2;
  v9 = a1;
  v8 = v4 ^ 0x8B395632;
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + ((-31
                                                                                      * ((*(_DWORD *)v2 + qword_1015F8570) ^ 0xC0)) ^ byte_101506EC0[byte_1014343E0[(-31 * ((*(_DWORD *)v2 + qword_1015F8570) ^ 0xC0))] ^ 0x7A])
                                                     + 2033)
                                           - 8))(&v7);
  return v10;
}

uint64_t sub_1000BAAB4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  unsigned __int8 *v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  signed int v12;
  _BOOL4 v13;
  uint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  unsigned __int8 *v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unint64_t v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  uint64_t v61;
  int v62;
  unsigned int v63;
  char *v64;
  int v65;
  char *v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned __int8 v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unint64_t v128;
  unsigned int v129;
  int v130;
  unsigned __int8 v131;
  unsigned int v132;
  unsigned int v133;
  char *v134;
  char *v135;
  unsigned int v136;
  uint64_t v137;
  unsigned int v138;
  char *v139;
  int v140;
  unint64_t v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  char *v148;
  int v149;
  char *v150;
  unsigned int v151;
  char *v152;
  unsigned int v153;
  int v154;
  char *v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  unint64_t v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  uint64_t v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  uint64_t v194;
  unsigned int v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  int v203;
  int v204;
  unint64_t v205;
  unint64_t v206;
  int v207;
  uint64_t v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  int v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  int v221;
  int v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  int v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unsigned int v241;
  unint64_t v242;
  unint64_t v243;
  unsigned int v244;
  unint64_t v245;
  int v246;
  uint64_t v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  uint64_t v262;
  unsigned int v263;
  unsigned __int8 *v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  uint64_t v277;
  uint64_t v278;
  int v279;
  int v280;
  int v281;
  unsigned int v282;
  unint64_t v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  uint64_t v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  unsigned __int8 v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  unint64_t v332;
  unint64_t v333;
  unint64_t v334;
  unint64_t v335;
  unint64_t v336;
  unint64_t v337;
  unint64_t v338;
  int v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  unint64_t v343;
  unint64_t v344;
  int v345;
  int v346;
  unint64_t v347;
  unint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  unint64_t v352;
  int v353;
  int v354;
  int v355;
  unint64_t v356;
  unint64_t v357;
  uint64_t v358;
  uint64_t v359;
  unint64_t v360;
  unint64_t v361;
  unint64_t v362;
  unint64_t v363;
  unint64_t v364;
  unint64_t v365;
  unint64_t v366;
  unint64_t v367;
  unint64_t v368;
  unint64_t v369;
  unint64_t v370;
  unint64_t v371;
  unint64_t v372;
  unint64_t v373;
  int v374;
  unint64_t v375;
  unint64_t v376;
  int v377;
  unint64_t v378;
  int v379;
  uint64_t v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  unsigned int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  unint64_t v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  int v404;
  int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  int v422;
  int v423;
  BOOL v424;
  int v425;
  int v426;
  int v427;
  int v428;
  unsigned __int8 v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  uint64_t v434;
  int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  unsigned int v443;
  char *v444;
  char *v445;
  unsigned int v446;
  unsigned int v447;
  char *v448;
  unsigned int v449;
  unsigned int v450;
  char *v451;
  unsigned int v452;
  int v453;
  int v454;
  unsigned int v455;
  int v456;
  int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  int i;
  uint64_t v467;
  unsigned int v468;
  unsigned __int8 v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  int v476;
  unsigned __int8 v477;
  unsigned int v478;
  unsigned int v479;
  int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  _DWORD *v485;
  uint64_t v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  uint64_t v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  _DWORD *v503;
  _DWORD *v504;
  _DWORD *v505;
  _DWORD *v506;
  _DWORD *v507;
  _DWORD *v508;
  unsigned int v509;
  unsigned int v510;
  unsigned int v511;
  unsigned int v512;
  _DWORD *v513;
  _DWORD *v514;
  _DWORD *v515;
  unsigned int v516;
  unsigned int v517;
  unsigned int v518;
  int v519;
  _DWORD *v520;
  _DWORD *v521;
  unsigned int v522;
  unsigned int v523;
  unint64_t v524;
  int v525;
  unsigned int v526;
  _DWORD *v527;
  _DWORD *v528;
  unsigned int v529;
  unsigned int v530;
  _DWORD *v531;
  _DWORD *v532;
  _DWORD *v533;
  unsigned int v534;
  unsigned int v535;
  _DWORD *v536;
  _DWORD *v537;
  unsigned int v538;
  int v539;
  unsigned int v540;
  uint64_t v541;
  int v542;
  int v543;
  unsigned int v544;
  char *v545;
  char *v546;
  unsigned int v547;
  int v548;
  char *v549;
  _BOOL4 v550;
  unsigned int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  void (*v555)(uint64_t);
  int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  uint64_t v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  int v567;
  unsigned int v568;
  int v569;
  int v570;
  int v571;
  unsigned int v572;
  unsigned int v573;
  int v574;
  int v575;
  unsigned int v576;
  int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  int v592;
  unsigned int v593;
  int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  int v598;
  unsigned int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  unsigned int v604;
  unsigned int v605;
  int v606;
  unsigned int v607;
  unsigned int v608;
  unsigned int v609;
  unsigned int v610;
  int v611;
  unsigned int v612;
  unsigned int v613;
  int v614;
  int v615;
  unsigned int v616;
  unsigned int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  unsigned int v622;
  unsigned int v623;
  unsigned int v624;
  int v625;
  int v626;
  unsigned int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  unsigned int v631;
  unsigned int v632;
  int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  int v646;
  int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  unsigned int v651;
  unsigned int v652;
  int v653;
  unsigned int v654;
  unsigned int v655;
  int v656;
  int v657;
  unsigned int v658;
  int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  unsigned int v663;
  unsigned int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  unsigned int v672;
  int v673;
  int v674;
  unsigned int v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  int v679;
  int v680;
  unsigned int v681;
  int v682;
  int v683;
  unsigned int v684;
  int v685;
  char *v686;
  int v687;
  unsigned int v688;
  char *v689;
  int v690;
  int v691;
  int v692;
  char *v693;
  int v694;
  unsigned int v695;
  unsigned int v696;
  unsigned int v697;
  unsigned int v698;
  int v699;
  unsigned int v700;
  int v701;
  unsigned int v702;
  int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  unsigned int v708;
  char *v709;
  unsigned int v710;
  int v711;
  int v712;
  int v713;
  unsigned int v714;
  int v715;
  int v716;
  int v717;
  unsigned int v718;
  int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  uint64_t v725;
  int v726;
  uint64_t v727;
  unsigned int v728;
  int v729;
  uint64_t v730;
  int v731;
  unsigned int v732;
  int v733;
  uint64_t v734;
  unsigned int v735;
  uint64_t v736;
  int v737;
  uint64_t v738;
  int v739;
  uint64_t v740;
  int v741;
  unsigned int v742;
  uint64_t v743;
  int v744;
  unsigned int v745;
  uint64_t v746;
  unsigned int v747;
  int v748;
  unsigned int v749;
  uint64_t v750;
  unsigned int v751;
  uint64_t v752;
  int v753;
  unsigned int v754;
  uint64_t v755;
  int v756;
  int v757;
  unsigned int v758;
  uint64_t v759;
  unsigned int v760;
  int v761;
  uint64_t v762;
  int v763;
  unsigned int v764;
  char v765;
  unsigned __int8 *v766;
  unsigned int v767;
  int v768;
  char v769;
  uint64_t v770;
  int v771;
  unsigned int v772;
  uint64_t v773;
  int v774;
  int v775;
  int v776;
  int v777;
  int v778;
  unsigned int v779;
  int v780;
  char v781;
  unsigned int v782;
  unint64_t v783;
  char v784;
  int v785;
  int v786;
  char v787;
  unsigned int v788;
  unsigned int v789;
  unsigned __int8 v790;
  uint64_t v791;
  int v792;
  __int16 v793;
  char v794;

  v3 = result;
  v4 = 1651633301 * ((result - 840239032 - 2 * (result & 0xCDEAF848)) ^ 0xDDE2BEE8);
  v5 = *(unsigned __int8 **)(result + 40);
  v6 = *(_DWORD *)result + v4;
  v7 = (*(_DWORD *)(result + 24) - v4 - 1588176012) | 0xD046019;
  v8 = ((v7 - 1880043698) ^ 0x304D8FAC) * v6;
  v9 = v8 + 755417573;
  if (v8 != -1095750450)
  {
    v10 = 0;
    v11 = v7 + 33559362;
    v12 = v7 - 230612531;
    result = (uint64_t)&off_1015B46D0;
    a2 = 214;
    a3 = 340332876;
    do
    {
      v13 = v9 < 0xEBB6EEB3;
      v14 = *(_QWORD *)(v3 + 16) + v10;
      v15 = *(_BYTE *)(v14 - 0x214487444AB0E08);
      v16 = (1772489163 * v14) ^ ((1772489163 * v14) >> 16);
      v7 = v11 & 0xFDFFECBD;
      v5[v10] = *((_BYTE *)*(&off_1015B46D0 + v12) + (v10 & 0xF | (16 * ((1772489163 * v16) >> 24))) - 12) ^ v15 ^ (v16 * (v11 & 0xBD ^ 0xD6));
      if (v13 == ++v10 > 0x1449114C)
        LOBYTE(v13) = v10 - 340332877 < v9;
    }
    while (v13);
  }
  v17 = *(_QWORD *)(v3 + 32);
  v18 = (unsigned __int8 *)(v17 - 0x2DE7CEABEFC9A247);
  if (v17 == 0x2DE7CEABEFC9A247)
  {
    v19 = -42900;
  }
  else
  {
    if (v18 == v5)
    {
      v790 = *v5;
      v791 = *(_QWORD *)(v17 - 0x2DE7CEABEFC9A246);
      v792 = *(_DWORD *)(v17 - 0x2DE7CEABEFC9A23ELL);
      v793 = *(_WORD *)(v17 - 0x2DE7CEABEFC9A23ALL);
      v794 = *(_BYTE *)(v17 - 0x2DE7CEABEFC9A238);
      v18 = &v790;
    }
    v19 = -42900;
    if (v5)
    {
      v20 = *(unsigned __int8 **)(v3 + 8);
      if (v20)
      {
        v21 = v8 + 2107786801;
        v22 = ((2 * (v21 ^ 0x243B8113)) ^ 0xCF2C1824) & (v21 ^ 0x243B8113) ^ (2 * (v21 ^ 0x243B8113)) & 0xE7960C12;
        v23 = ((((v7 - 776992556) & 0x7FF53B9E) + 1137008769) ^ v21) & (2 * (v21 & 0xC3AD8D01)) ^ v21 & 0xC3AD8D01;
        v24 = v23 ^ 0xE7960C12 ^ (v22 ^ 0x27040812) & (4 * v23);
        v25 = (4 * (v22 ^ 0x20920412)) & 0xE7960C10 ^ 0x61860C12 ^ ((4 * (v22 ^ 0x20920412)) ^ 0x9E583048) & (v22 ^ 0x20920412);
        v26 = (16 * v24) & 0xE7960C10 ^ v24 ^ ((16 * v24) ^ 0x7960C120) & v25;
        v27 = (16 * v25) & 0xE7960C10 ^ 0x86960C12 ^ ((16 * v25) ^ 0x7960C120) & v25;
        v28 = (v26 << 8) & 0xE7960C00 ^ v26 ^ ((v26 << 8) ^ 0x960C1200) & v27;
        v29 = v21 ^ (2
                   * ((v28 << 16) & 0x67960000 ^ v28 ^ ((v28 << 16) ^ 0xC120000) & ((v27 << 8) & 0xE7960000 ^ 0x61920000 ^ ((v27 << 8) ^ 0x160C0000) & v27)));
        v30 = v7 + 2131633027;
        if (((v29 ^ 2) & 0xA) + ((v7 - 230614012) ^ v29 & 5) != 38 || v29 == -894593755)
        {
          v19 = -42899;
        }
        else
        {
          v766 = v18;
          v32 = v30 ^ 0xC0812860;
          v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_1015B46D0 + (int)(v7 - 230613763));
          v34 = v33(1032, a2, a3);
          v35 = ((uint64_t (*)(uint64_t))v33)(1028);
          v36 = v35;
          v19 = -42885;
          if (v34 && v35)
          {
            v773 = v34;
            v770 = v35;
            v563 = v3;
            v37 = 0;
            v38 = (v30 - 634193822) | 0x10458004;
            v39 = *((_BYTE *)*(&off_1015B46D0 + (v38 ^ 0x774584E9)) + (v20[3] ^ 0x49) - 4);
            v40 = v38 - 2001043438;
            v41 = *((unsigned __int8 *)*(&off_1015B46D0 + (v38 ^ 0x7745861F)) + (v20[9] ^ 0x48) - 4);
            v42 = *((unsigned __int8 *)*(&off_1015B46D0 + (v38 ^ 0x7745838A)) + (v20[8] ^ 0x15) - 4) | ((((v41 >> 3) | (32 * v41)) ^ 0x49) << 16) | ((*((unsigned __int8 *)*(&off_1015B46D0 + (v38 ^ 0x774580B9)) + (v20[10] ^ 0xCFLL) - 4) ^ 0xBB) << 8) | ((v20[1] ^ 0xFFFFFF85 ^ ((v20[1] ^ 0xFFFFFF85) - 37) ^ 0xBA ^ *((unsigned __int8 *)*(&off_1015B46D0 + (v38 ^ 0x7745886E)) + (v20[1] ^ 0x16))) << 24);
            v43 = *((unsigned __int8 *)*(&off_1015B46D0 + (v38 ^ 0x7745843E)) + (v20[13] ^ 0x1FLL) - 4);
            v44 = *((unsigned __int8 *)*(&off_1015B46D0 + v38 - 2001042735) + (v20[2] ^ 0xA0) - 8) | (unint64_t)(unsigned __int16)((v39 ^ ((v39 ^ 0x9F) >> 4) ^ ((v39 ^ 0x9F) >> (((v30 + 98) | 4) ^ 7)) ^ 0x8E) << 8) | ((*((unsigned __int8 *)*(&off_1015B46D0 + v38 - 2001042729) + (v20[15] ^ 0x49) - 12) ^ 0x40) << 24) | ((unint64_t)((((v43 >> 7) | (2 * v43)) ^ (((v43 >> 7) | (2 * v43)) >> 5) ^ (((v43 >> 7) | (2 * v43)) >> 1)) ^ 0x6Bu) << 16);
            v45 = *((unsigned __int8 *)*(&off_1015B46D0 + v38 - 2001041084) + (*v20 ^ 0xA5) - 8);
            v46 = *((unsigned __int8 *)*(&off_1015B46D0 + v38 - 2001043363) + (v20[6] ^ 0x60) - 8);
            v47 = ((((v20[7] ^ 0x40) + 113) ^ 0x59 ^ *((unsigned __int8 *)*(&off_1015B46D0 + v38 - 2001041029)
                                                     + (v20[7] ^ 0xE2)
                                                     - 8)) << 24) | ((((v46 >> 5) | (8 * v46)) ^ 0x7C) << 8);
            v48 = ((v20[14] ^ 0xB6 ^ *((unsigned __int8 *)*(&off_1015B46D0 + v38 - 2001042364) + (v20[14] ^ 0xBFLL) - 8)) << 8) | ((((v45 >> 1) | (v45 << 7)) ^ (8 * ((v45 >> 1) | (v45 << 7))) ^ (4 * (v45 >> 1)) ^ 0x13) << 24) | ((v20[4] ^ 0x87 ^ *((unsigned __int8 *)*(&off_1015B46D0 + v38 - 2001041984) + (v20[4] ^ 0xD7) - 8)) << 16);
            v49 = *((unsigned __int8 *)*(&off_1015B46D0 + (v38 ^ 0x7745859D)) + (v20[12] ^ 0x9ELL));
            v50 = v20[11];
            v51 = v47 & 0xFF00FFFF | ((((v49 >> 5) | (8 * v49)) ^ 0xDC) << 16);
            v52 = v20[5] ^ 0x4FLL;
            v53 = v38;
            LOBYTE(v52) = *((_BYTE *)*(&off_1015B46D0 + (v38 ^ 0x77458211)) + v52 - 4);
            v54 = v48 & 0xFFFFFF00 | v52 ^ 0x65 ^ (8 * (_BYTE)v52) & 0x68;
            LODWORD(v52) = (*((unsigned __int8 *)*(&off_1015B46D0 + (v38 ^ 0x77458481)) + (v50 ^ 0x7D) - 12) ^ ((v50 ^ 0x12) + (v50 ^ 0xD8) + 1) ^ 0x31 | v51) ^ v44 ^ 0xA8 ^ v54;
            v55 = v44 ^ 0xA8 ^ v42;
            v56 = v52 ^ v55;
            v57 = ((v52 ^ v55) >> 24) ^ 0x2F;
            v44 ^= 0x4B0FFB79uLL;
            v58 = (uint64_t)*(&off_1015B46D0 + v38 - 2001042612);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE2(v44));
            LODWORD(v60) = HIDWORD(v60);
            v59 = v60 >> 4;
            LODWORD(v50) = v52 ^ 0x9EA44E98;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * ((unsigned __int16)(v52 ^ 0x4E98) >> 8));
            LODWORD(v60) = HIDWORD(v60);
            LODWORD(v52) = v60 >> 4;
            v785 = v40;
            v61 = (uint64_t)*(&off_1015B46D0 + v40 + 2356);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * v50);
            LODWORD(v60) = HIDWORD(v60);
            v62 = v60 >> 4;
            v63 = v55 ^ 0x5DD17DB5 ^ v54;
            v64 = (char *)*(&off_1015B46D0 + v40 + 633) - 8;
            v65 = v59 ^ __ROR4__((*(_DWORD *)(v61 + 4 * v57) + 117624315) ^ 0xDDE565BA, 24) ^ (8 * v59 - 1765317368) ^ __ROR4__(*(_DWORD *)&v64[4 * v63] ^ 0x50365BC5, 16);
            v66 = (char *)*(&off_1015B46D0 + (v53 ^ 0x77458018)) - 4;
            v67 = v65 ^ __ROR4__(v52 ^ 0xEFA9BE11 ^ (8 * v52 - 1765317368), 8);
            v751 = v29;
            v68 = *(_DWORD *)&v64[4 * BYTE2(v63)];
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * v44);
            LODWORD(v60) = HIDWORD(v60);
            v69 = (*(_DWORD *)(v61 + 4 * (BYTE2(v56) ^ 0xABu)) + 117624315) ^ __ROR4__(*(_DWORD *)&v66[4 * HIBYTE(v63)] ^ 0x4C804500, 24) ^ __ROR4__((*(_DWORD *)(v61 + 4 * BYTE1(v44))+ 117624315) ^ 0xDDE565BA, 8);
            v70 = *(_DWORD *)&v64[4 * BYTE2(v50)] ^ __ROR4__(*(_DWORD *)&v66[(v44 >> 22) & 0x3FFFFFFFFFCLL] ^ 0x4C804500, 24) ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE1(v63)], 8) ^ __ROR4__((*(_DWORD *)(v61 + 4 * (v56 ^ 0xDFu)) + 117624315) ^ 0xDDE565BA, 16) ^ 0x3152F075;
            v71 = v69 ^ __ROR4__(v62 ^ 0xEFA9BE11 ^ (8 * v62 - 1765317368), 16) ^ 0x488C3021;
            LODWORD(v50) = v68 ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE3(v50)] ^ 0x4C804500, 24) ^ __ROR4__(*(_DWORD *)&v66[4 * (BYTE1(v56) ^ 0x10)], 8) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 16) ^ 0x4FFF0AA3;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE1(v71));
            LODWORD(v60) = HIDWORD(v60);
            v72 = (*(_DWORD *)(v61 + 4 * BYTE2(v50)) + 117624315) ^ __ROR4__(*(_DWORD *)&v66[4 * HIBYTE(v70)] ^ 0x4C804500, 24) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 8);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (v67 ^ 0xBEu));
            LODWORD(v60) = HIDWORD(v60);
            LODWORD(v44) = v72 ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 16);
            v73 = *(_DWORD *)&v66[4 * (HIBYTE(v67) ^ 0x97)] ^ 0x4C804500;
            v74 = BYTE2(v67) ^ 0xBF;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * HIBYTE(v71));
            LODWORD(v60) = HIDWORD(v60);
            LODWORD(v52) = (8 * (v60 >> 4) - 1765317368) ^ __ROR4__(__ROR4__(HIDWORD(v60), 16) ^ 0xA54BF11, 20) ^ 0xA458AEB4;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * v70);
            LODWORD(v60) = HIDWORD(v60);
            v75 = *(_DWORD *)&v64[4 * BYTE2(v71)] ^ __ROR4__((*(_DWORD *)(v61 + 4 * BYTE3(v50)) + 117624315) ^ 0xDDE565BA, 24) ^ __ROR4__(*(_DWORD *)&v64[4 * (BYTE1(v67) ^ 0xC1)] ^ 0x50365BC5, 8) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4)- 1765317368), 16);
            v76 = *(_DWORD *)&v64[4 * BYTE1(v50)] ^ 0x50365BC5;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * v74);
            LODWORD(v60) = HIDWORD(v60);
            LODWORD(v50) = (v60 >> 4) ^ __ROR4__(*(_DWORD *)&v64[4 * BYTE1(v70)] ^ 0x50365BC5, 8) ^ (8 * (v60 >> 4) - 1765317368) ^ __ROR4__(v52, 24) ^ __ROR4__((*(_DWORD *)(v61 + 4 * v50) + 117624315) ^ 0xDDE565BA, 16) ^ 0x64A9CEDF;
            v77 = (*(_DWORD *)(v61 + 4 * BYTE2(v70)) + 117624315) ^ __ROR4__(v73, 24) ^ __ROR4__(v76, 8) ^ __ROR4__(*(_DWORD *)&v64[4 * v71] ^ 0x50365BC5, 16) ^ 0x975C3502;
            v78 = (*(_DWORD *)(v61 + 4 * ((v75 ^ 0x1843D3E7u) >> 16)) + 117624315) ^ __ROR4__(*(_DWORD *)&v64[4 * (BYTE3(v44) ^ 0x74)] ^ 0x50365BC5, 24) ^ __ROR4__(*(_DWORD *)&v64[4 * BYTE1(v50)] ^ 0x50365BC5, 8) ^ __ROR4__(*(_DWORD *)&v66[4 * v77] ^ 0x4C804500, 16);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * v50);
            LODWORD(v60) = HIDWORD(v60);
            v79 = *(_DWORD *)&v66[4 * (BYTE2(v44) ^ 0xFC)] ^ __ROR4__(*(_DWORD *)&v64[4 * HIBYTE(v77)] ^ 0x50365BC5, 24) ^ __ROR4__((*(_DWORD *)(v61 + 4 * ((unsigned __int16)(v75 ^ 0xD3E7) >> 8)) + 117624315) ^ 0xDDE565BA, 8) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 16);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE2(v77));
            LODWORD(v60) = HIDWORD(v60);
            v80 = (v60 >> 4) ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE3(v50)] ^ 0x4C804500, 24) ^ (8 * (v60 >> 4) - 1765317368) ^ __ROR4__(*(_DWORD *)&v64[4 * (BYTE1(v44) ^ 0x33)] ^ 0x50365BC5, 8) ^ __ROR4__(*(_DWORD *)&v66[4 * (v75 ^ 0xE3)] ^ 0x4C804500, 16);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * ((v75 ^ 0x1843D3E7u) >> 24));
            LODWORD(v60) = HIDWORD(v60);
            v81 = (*(_DWORD *)(v61 + 4 * BYTE2(v50)) + 117624315) ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE1(v77)], 8) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 24) ^ __ROR4__(*(_DWORD *)&v64[4 * (((v44 ^ 0xFFFFFF16) + (v44 ^ 0xE5) + 1) ^ 0xFFFFFFF8) + 4 * (v44 ^ 0xE5)] ^ 0x50365BC5, 16);
            LOBYTE(v75) = v78 ^ 0x79;
            v82 = BYTE1(v79) ^ 0x1F;
            v83 = v81 ^ 0xF385578A;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * ((unsigned __int16)(v81 ^ 0x578A) >> 8));
            LODWORD(v60) = HIDWORD(v60);
            v84 = (*(_DWORD *)(v61 + 4 * ((v78 ^ 0x3F0EB679u) >> 16)) + 117624315) ^ __ROR4__((*(_DWORD *)(v61 + 4 * ((v79 ^ 0x575A1FB0u) >> 24)) + 117624315) ^ 0xDDE565BA, 24) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 8);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * ((unsigned __int16)(v80 ^ 0xE51E) >> 8));
            LODWORD(v60) = HIDWORD(v60);
            v85 = (v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (v79 ^ 0xB0u));
            LODWORD(v60) = HIDWORD(v60);
            v86 = v84 ^ __ROR4__(__ROR4__(__ROR4__(*(_DWORD *)&v66[4 * (v80 ^ 0x1E)], 31) ^ 0x8D367733, 1) ^ 0x8A1B7E99, 16);
            LODWORD(v52) = *(_DWORD *)&v64[4 * ((v80 ^ 0x3323E51Eu) >> 24)];
            LODWORD(v44) = *(_DWORD *)&v66[4 * BYTE2(v83)] ^ __ROR4__(*(_DWORD *)&v64[4 * ((v78 ^ 0x3F0EB679u) >> 24)] ^ 0x50365BC5, 24) ^ __ROR4__(v85, 8) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 16) ^ 0xFDF643C3;
            LODWORD(v52) = *(_DWORD *)&v64[4 * (BYTE2(v79) ^ 0x56)] ^ __ROR4__(*(_DWORD *)&v66[4 * (BYTE1(v78) ^ 0xB2)], 8) ^ __ROR4__(v52- ((2 * v52) & 0xA06CB78A)+ 1345739717, 24);
            v87 = *(_DWORD *)(v61 + 4 * (BYTE2(v80) ^ 0xE7u)) + 117624315;
            v88 = v52 ^ __ROR4__(*(_DWORD *)&v66[4 * v83] ^ 0x4C804500, 16) ^ 0x1FF34926;
            v89 = v86 ^ 0xB4540535;
            v90 = v87 ^ __ROR4__((*(_DWORD *)(v61 + 4 * HIBYTE(v83)) + 117624315) ^ 0xDDE565BA, 24) ^ __ROR4__(*(_DWORD *)&v64[4 * v82] ^ 0x50365BC5, 8) ^ __ROR4__((*(_DWORD *)(v61 + 4 * v75) + 117624315) ^ 0xDDE565BA, 16) ^ 0xAFB970D;
            LODWORD(v60) = __ROR4__(*(_DWORD *)(v58 + 4 * BYTE1(v88)), 21) ^ 0x667F44D5;
            HIDWORD(v60) = v60;
            v91 = (v60 >> 15) ^ 0x660372EF ^ (((8 * (v60 >> 15)) ^ 0x4D5667F0) - 1765317368);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (HIBYTE(v86) ^ 4));
            LODWORD(v60) = HIDWORD(v60);
            v92 = *(_DWORD *)&v64[4 * BYTE2(v44)] ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 24);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE1(v90));
            LODWORD(v60) = HIDWORD(v60);
            v93 = v92 ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 8);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * v88);
            LODWORD(v60) = HIDWORD(v60);
            v94 = v93 ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 16);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE1(v44));
            LODWORD(v60) = HIDWORD(v60);
            v95 = *(_DWORD *)&v66[4 * BYTE2(v89)] ^ __ROR4__(*(_DWORD *)&v64[4 * HIBYTE(v88)] ^ 0x50365BC5, 24) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 8);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * v90);
            LODWORD(v60) = HIDWORD(v60);
            v96 = v95 ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 16);
            LODWORD(v52) = *(_DWORD *)&v64[4 * BYTE2(v90)] ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE3(v44)] ^ 0x4C804500, 24);
            v97 = *(_DWORD *)&v64[4 * HIBYTE(v90)];
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE2(v88));
            LODWORD(v60) = HIDWORD(v60);
            v98 = v60 >> 4;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * v44);
            LODWORD(v60) = HIDWORD(v60);
            v99 = v52 ^ __ROR4__((*(_DWORD *)(v61 + 4 * v89) + 117624315) ^ 0xDDE565BA, 16) ^ __ROR4__(v91, 8) ^ 0x7B6E56C7;
            LODWORD(v44) = 8 * v98 - 1765317368;
            v100 = v98 ^ __ROR4__(v97 ^ 0x50365BC5, 24);
            BYTE1(v98) = BYTE1(v94) ^ 0x4C;
            LODWORD(v52) = v100 ^ v44 ^ __ROR4__((*(_DWORD *)(v61 + 4 * BYTE1(v89)) + 117624315) ^ 0xDDE565BA, 8) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 16);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * HIBYTE(v99));
            LODWORD(v60) = HIDWORD(v60);
            v101 = (v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (BYTE1(v52) ^ 0x85u));
            LODWORD(v60) = HIDWORD(v60);
            LODWORD(v44) = (*(_DWORD *)(v61 + 4 * BYTE2(v99)) + 117624315) ^ __ROR4__(*(_DWORD *)&v64[4* ((v94 ^ 0xDA064C28) >> 24)] ^ 0x50365BC5, 24) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 8);
            v102 = v96 ^ 0xBA780B6D;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (v96 ^ 0xDDu));
            LODWORD(v60) = HIDWORD(v60);
            LODWORD(v44) = v44 ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 16);
            v103 = *(_DWORD *)&v64[4 * (BYTE2(v94) ^ 0xA)] ^ __ROR4__(*(_DWORD *)&v64[4 * ((v96 ^ 0xBA780B6D) >> 24)] ^ 0x50365BC5, 24) ^ __ROR4__(*(_DWORD *)&v64[4 * BYTE1(v99)] ^ 0x50365BC5, 8) ^ __ROR4__((*(_DWORD *)(v61+ 4* (v52 ^ 0xCDu))+ 117624315) ^ 0xDDE565BA, 16);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (BYTE3(v52) ^ 0x50));
            LODWORD(v60) = HIDWORD(v60);
            v104 = (v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE2(v102));
            LODWORD(v60) = HIDWORD(v60);
            v105 = (*(_DWORD *)(v61 + 4 * (BYTE2(v52) ^ 0x48u)) + 117624315) ^ __ROR4__(*(_DWORD *)&v64[4 * BYTE1(v102)] ^ 0x50365BC5, 8) ^ __ROR4__(v101, 24) ^ __ROR4__((*(_DWORD *)(v61 + 4 * (v94 ^ 0x28u)) + 117624315) ^ 0xDDE565BA, 16) ^ 0x2F9E5C82;
            v106 = (8 * (v60 >> 4) - 1765317368) ^ (v60 >> 4) ^ __ROR4__(v104, 24) ^ __ROR4__((*(_DWORD *)(v61+ 4 * BYTE1(v98))+ 117624315) ^ 0xDDE565BA, 8) ^ __ROR4__(*(_DWORD *)&v66[4 * v99] ^ 0x4C804500, 16);
            BYTE2(v68) = BYTE2(v44) ^ 0xA4;
            BYTE2(v101) = BYTE2(v103) ^ 0x1A;
            v107 = v106 ^ 0x4DD894DB;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (v44 ^ 0xC8u));
            LODWORD(v60) = HIDWORD(v60);
            v108 = *(_DWORD *)&v64[4 * (BYTE2(v106) ^ 0xD4)] ^ __ROR4__((*(_DWORD *)(v61 + 4 * HIBYTE(v105)) + 117624315) ^ 0xDDE565BA, 24) ^ __ROR4__(*(_DWORD *)&v64[4* ((unsigned __int16)(v103 ^ 0xC5BF) >> 8)] ^ 0x50365BC5, 8);
            v109 = (v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * ((v44 ^ 0xF2A4ADC8) >> 24));
            LODWORD(v60) = HIDWORD(v60);
            v110 = (v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (BYTE1(v44) ^ 0x1Du));
            LODWORD(v60) = HIDWORD(v60);
            LODWORD(v52) = (v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368);
            LODWORD(v44) = *(_DWORD *)&v64[4 * BYTE2(v105)] ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE1(v107)], 8) ^ __ROR4__(v110, 24) ^ __ROR4__(*(_DWORD *)&v66[4 * (v103 ^ 0xBF)] ^ 0x4C804500, 16) ^ 0xD42E7BD1;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE2(v68));
            LODWORD(v60) = HIDWORD(v60);
            v111 = (v60 >> 4) ^ __ROR4__(*(_DWORD *)&v66[4 * (HIBYTE(v103) ^ 0x29)] ^ 0x4C804500, 24) ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE1(v105)], 8) ^ (8 * (v60 >> 4) - 1765317368) ^ __ROR4__(*(_DWORD *)&v66[4 * v107] ^ 0x4C804500, 16) ^ 0x2D71B172;
            v112 = (*(_DWORD *)(v61 + 4 * BYTE2(v101)) + 117624315) ^ __ROR4__(*(_DWORD *)&v66[4 * HIBYTE(v107)] ^ 0x4C804500, 24) ^ __ROR4__(*(_DWORD *)&v64[4* v105] ^ 0x50365BC5, 16) ^ __ROR4__(v52, 8);
            v113 = v108 ^ __ROR4__(v109, 16);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * (BYTE1(v112) ^ 0x6Eu));
            LODWORD(v60) = HIDWORD(v60);
            v114 = *(_DWORD *)&v66[4 * (BYTE2(v112) ^ 0x78)] ^ __ROR4__(*(_DWORD *)&v64[4 * (HIBYTE(v113) ^ 0xCA)] ^ 0x50365BC5, 24) ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE1(v111)], 8) ^ __ROR4__(*(_DWORD *)&v64[4 * v44] ^ 0x50365BC5, 16) ^ 0x1CE090E1;
            v115 = (*(_DWORD *)(v61 + 4 * (BYTE2(v113) ^ 0x45u)) + 117624315) ^ __ROR4__(*(_DWORD *)&v64[4 * BYTE3(v44)] ^ 0x50365BC5, 24) ^ __ROR4__(*(_DWORD *)&v66[4 * v111] ^ 0x4C804500, 16) ^ __ROR4__((v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368), 8) ^ 0xFFF07975;
            v116 = *(_DWORD *)&v66[4 * BYTE2(v44)] ^ __ROR4__((*(_DWORD *)(v61 + 4 * HIBYTE(v111)) + 117624315) ^ 0xDDE565BA, 24) ^ __ROR4__(*(_DWORD *)&v66[4 * (BYTE1(v113) ^ 0x3A)], 8) ^ __ROR4__(*(_DWORD *)&v66[4 * (v112 ^ 0xCC)] ^ 0x4C804500, 16) ^ 0x207160BD;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE2(v111));
            LODWORD(v60) = HIDWORD(v60);
            v117 = (v60 >> 4) ^ __ROR4__((*(_DWORD *)(v61+ 4* (((v112 ^ 0x4F7CDEC8u) >> (BYTE1(v56) & 0x18 ^ 0x10) >> (BYTE1(v56) & 0x18 ^ 8)) ^ 0xC4u))+ 117624315) ^ 0xDDE565BA, 24) ^ (8 * (v60 >> 4) - 1765317368) ^ __ROR4__((*(_DWORD *)(v61 + 4 * BYTE1(v44))+ 117624315) ^ 0xDDE565BA, 8) ^ __ROR4__(*(_DWORD *)&v64[4* (v113 ^ 0xF7)] ^ 0x50365BC5, 16) ^ 0x4F5CE4F9;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE1(v117));
            LODWORD(v60) = HIDWORD(v60);
            v118 = (v60 >> 4) ^ 0xEFA9BE11 ^ (8 * (v60 >> 4) - 1765317368);
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE2(v114));
            LODWORD(v60) = HIDWORD(v60);
            LODWORD(v44) = (v60 >> 4) ^ __ROR4__(*(_DWORD *)&v66[4 * HIBYTE(v115)] ^ 0x4C804500, 24) ^ (8 * (v60 >> 4) - 1765317368);
            v119 = *(_DWORD *)(v61 + 4 * HIBYTE(v116)) + 117624315;
            v120 = *(_DWORD *)(v61 + 4 * BYTE1(v114)) + 117624315;
            LODWORD(v61) = (*(_DWORD *)(v61 + 4 * BYTE1(v116)) + 117624315) ^ 0xDDE565BA;
            LODWORD(v52) = v120 ^ 0xDDE565BA;
            HIDWORD(v60) = *(_DWORD *)(v58 + 4 * BYTE2(v115));
            LODWORD(v60) = HIDWORD(v60);
            v121 = (v60 >> 4) ^ __ROR4__(v119 ^ 0xDDE565BA, 24) ^ (8 * (v60 >> 4) - 1765317368);
            v122 = *(_DWORD *)&v66[4 * v117] ^ 0x4C804500;
            LODWORD(v58) = *(_DWORD *)(v58 + 4 * BYTE2(v116));
            v123 = v116;
            v124 = *(_DWORD *)&v64[4 * v115];
            v125 = *(_DWORD *)&v64[4 * HIBYTE(v114)] ^ 0x50365BC5;
            v126 = *(_DWORD *)&v64[4 * v123] ^ 0x50365BC5;
            v127 = *(_DWORD *)&v64[4 * v114] ^ 0x50365BC5;
            LODWORD(v44) = v44 ^ __ROR4__(v126, 16);
            v128 = __PAIR64__(v58, __ROR4__(v118, 8));
            LOWORD(v64) = v44 ^ v128;
            v129 = v44 ^ v128 ^ 0x287B131B;
            LODWORD(v128) = v58;
            v130 = (v128 >> 4) ^ __ROR4__(*(_DWORD *)&v66[4 * HIBYTE(v117)] ^ 0x4C804500, 24) ^ __ROR4__(*(_DWORD *)&v66[4 * BYTE1(v115)], 8) ^ (8 * (v128 >> 4) - 1765317368);
            LODWORD(v128) = __ROR4__(v127, 16);
            v131 = v130 ^ v128;
            v132 = v130 ^ v128 ^ 0x8FB8F508;
            v133 = *(_DWORD *)&v66[4 * BYTE2(v117)] ^ __ROR4__(v125, 24) ^ __ROR4__(v61, 8) ^ __ROR4__(v124 ^ 0x50365BC5, 16);
            v134 = (char *)*(&off_1015B46D0 + (v53 ^ 0x77458A17)) - 8;
            v135 = (char *)*(&off_1015B46D0 + (v53 ^ 0x77458503)) - 4;
            LODWORD(v52) = v121 ^ __ROR4__(v52, 8);
            LODWORD(v128) = __ROR4__(v122, 16);
            v779 = ((unsigned __int16)(v52 ^ v128) >> 8) ^ 0x6A;
            v136 = v52 ^ v128 ^ 0xDF0C6F5C;
            v137 = (uint64_t)*(&off_1015B46D0 + v40);
            v138 = (((v52 ^ v128) ^ 0xB1) - 25131) ^ 0xFFFFB445 ^ *(unsigned __int16 *)(v137 + 2 * ((v52 ^ v128) ^ 0x3Du));
            HIDWORD(v128) = ((v131 ^ 0xE5) - 25131) ^ 0xFFFFB445 ^ *(unsigned __int16 *)(v137 + 2 * (v131 ^ 0x69u));
            LODWORD(v128) = WORD2(v128) & 0xFF00;
            v139 = (char *)*(&off_1015B46D0 + v40 + 1068) - 12;
            v140 = (*(unsigned __int16 *)&v139[2 * (BYTE1(v133) ^ 0xEA)] | (((HIBYTE(v136) - 25131) ^ 0xB445 ^ *(unsigned __int16 *)(v137 + 2 * (HIBYTE(v136) ^ 0x8C))) << 16)) ^ (((unsigned __int16)((BYTE2(v129) ^ 0xFFC9) + 9331 + *(_WORD *)&v134[2 * (BYTE2(v129) ^ 0xBB)]) ^ 0xAF5) << 8) ^ (v128 >> 8);
            v141 = __PAIR64__(v138, __ROR4__(*(unsigned __int16 *)&v139[2 * (v64 ^ 0x1E)] ^ 0x655A, 8));
            v142 = (*(unsigned __int16 *)&v139[2 * v779] | ((((HIBYTE(v133) ^ 0xFFBE)
                                                            + 9331
                                                            + *(unsigned __int16 *)&v134[2 * (HIBYTE(v133) ^ 0xCC)]) ^ 0xAF5) << 16)) ^ v141 ^ ((*(_WORD *)&v135[2 * (BYTE2(v132) ^ 0x5A)] ^ BYTE2(v132) ^ 0x297) << 8);
            LODWORD(v141) = v138 & 0xFF00;
            v143 = ((unsigned __int16)(*(_WORD *)&v134[2 * (BYTE1(v132) ^ 0x8D)] - BYTE1(v132) + 9330) | ((HIBYTE(v129) ^ 0x2BC ^ *(_WORD *)&v135[2 * (HIBYTE(v129) ^ 0x71)]) << 16)) ^ (((unsigned __int16)((BYTE2(v133) ^ 0xFF68) + 9331 + *(_WORD *)&v134[2 * (BYTE2(v133) ^ 0x1A)]) ^ 0xAF5) << 8) ^ v142 ^ (v141 >> 8);
            LODWORD(v44) = v143 ^ (((unsigned __int16)((BYTE2(v136) ^ 0xFFC9)
                                                     + 9331
                                                     + *(_WORD *)&v134[2 * (BYTE2(v136) ^ 0xBB)]) ^ 0xAF5) << 8) ^ (*(unsigned __int16 *)(v137 + 2 * (BYTE1(v64) ^ 0x72u)) ^ (unsigned __int16)((BYTE1(v64) ^ 0xFE) - 25131) | (((HIBYTE(v132) - 25131) ^ 0xB445 ^ *(unsigned __int16 *)(v137 + 2 * (HIBYTE(v132) ^ 0x8C))) << 16));
            HIDWORD(v141) = v133 ^ 0x283 ^ *(unsigned __int16 *)&v135[2
                                                                                     * (v133 ^ 0x4E)];
            LODWORD(v141) = WORD2(v141) & 0xFF00;
            v144 = v140 ^ v143;
            v780 = v140 ^ v143 ^ 0x655A;
            v145 = v780 ^ v142;
            v146 = v140 ^ v142;
            v147 = v44 ^ (v141 >> 8);
            LODWORD(v52) = v146 ^ v147;
            v744 = v146 ^ v147 ^ 0x655A;
            v753 = v145 ^ v744;
            v148 = (char *)*(&off_1015B46D0 + v785 + 1404) - 8;
            v149 = 10559 * *(unsigned __int16 *)&v148[2 * (HIBYTE(v147) ^ 0xC9)];
            v782 = v147;
            v150 = (char *)*(&off_1015B46D0 + v785 + 1967) - 8;
            v151 = *(unsigned __int16 *)&v150[2 * (BYTE2(v44) ^ 0x35)];
            LOWORD(v147) = 10559
                         * *(_WORD *)&v148[2
                                         * ((v44 ^ ((unsigned __int16)(WORD2(v141) & 0xFF00) >> 8)) ^ 0x6E)];
            HIDWORD(v141) = v149 ^ ((unsigned __int16)v149 >> 5) ^ ((unsigned __int16)v149 >> 3) ^ 0xFFFF98BA;
            LODWORD(v141) = WORD2(v141) & 0xFF00;
            LODWORD(v139) = v53;
            v152 = (char *)*(&off_1015B46D0 + (v53 ^ 0x77458714)) - 8;
            v774 = v753 ^ (unsigned __int16)(v147 ^ ((unsigned __int16)v147 >> 5) ^ ((unsigned __int16)v147 >> 3)) ^ (v141 >> 8) ^ ((v151 ^ 0xB385 ^ (v151 >> 2) & 0x3EB6) << 16) ^ (((unsigned __int16)(*(_WORD *)&v152[2 * (BYTE1(v44) ^ 0x8D)] - 657) ^ 0xCE9F) << 8);
            v760 = v774 ^ 0xA93CCF05 ^ v144;
            v756 = v760 ^ 0x67B7989E ^ v52;
            LODWORD(v52) = v756 ^ 0xCF11A45B ^ v782;
            v153 = (unsigned __int16)(10559 * *(_WORD *)&v148[2 * (BYTE3(v52) ^ 0xD)]);
            HIDWORD(v141) = (10559 * *(unsigned __int16 *)&v148[2 * (BYTE3(v52) ^ 0xD)]) ^ (v153 >> 5) ^ (v153 >> 3) ^ 0xFFFF98BA;
            LODWORD(v141) = WORD2(v141) & 0xFF00;
            v771 = v52 ^ 0x257A3ED4;
            v154 = 10559 * *(unsigned __int16 *)&v148[2 * (BYTE2(v52) ^ 0x52)];
            LOWORD(v52) = 10559 * *(_WORD *)&v148[2 * (BYTE1(v52) ^ 0x16)];
            LODWORD(v52) = (v141 >> 8) ^ (unsigned __int16)((10559
                                                           * *(_WORD *)&v148[2
                                                                           * (v756 ^ 0x5B ^ v782 ^ 0xFC)]) ^ ((unsigned __int16)(10559 * *(_WORD *)&v148[2 * (v756 ^ 0x5B ^ v782 ^ 0xFC)]) >> 5) ^ ((unsigned __int16)(10559 * *(_WORD *)&v148[2 * (v756 ^ 0x5B ^ v782 ^ 0xFC)]) >> 3)) ^ 0x98BA ^ ((v154 ^ ((unsigned __int16)v154 >> 5) ^ ((unsigned __int16)v154 >> 3) ^ 0x98BA) << 16) ^ (((unsigned __int16)(v52 ^ ((unsigned __int16)v52 >> 5) ^ ((unsigned __int16)v52 >> 3)) ^ 0x98BA) << 8);
            v786 = v52 ^ v774 ^ 0xA93CCF05;
            LODWORD(v135) = v52 ^ v144;
            v731 = v52 ^ v144 ^ 0x1484C00C;
            v652 = v731 ^ v756 ^ 0xCF11A45B;
            LODWORD(v52) = *(unsigned __int16 *)&v150[2 * (((v652 ^ v771) >> 16) ^ 0x4F)];
            HIDWORD(v141) = (*(unsigned __int16 *)&v152[2 * (((v652 ^ v771) >> 24) ^ 0x2F)] - 657) ^ 0xFFFFCE9F;
            LODWORD(v141) = WORD2(v141) & 0xFF00;
            v155 = (char *)*(&off_1015B46D0 + (int)(v139 ^ 0x77458204)) - 4;
            v156 = *(unsigned __int16 *)&v155[2 * ((v652 ^ v771) ^ 0x32)] ^ (v141 >> 8) ^ ((v52 ^ 0xB385 ^ (v52 >> 2) & 0x3EB6) << 16) ^ ((*(unsigned __int16 *)&v155[2 * (((unsigned __int16)(v652 ^ v771) >> 8) ^ 0xF8)] ^ 0x7ABD) << 8) ^ v786 ^ 0x7ABD;
            v642 = v156 ^ v756 ^ 0xCF11A45B;
            v157 = v642 ^ 0x6A11A4EC ^ v652 ^ v771;
            v158 = (unsigned __int16)(10559 * *(_WORD *)&v148[2 * (HIBYTE(v157) ^ 0xE1)]);
            HIDWORD(v141) = (10559 * *(unsigned __int16 *)&v148[2 * (HIBYTE(v157) ^ 0xE1)]) ^ (v158 >> 5) ^ (v158 >> 3) ^ 0xFFFF98BA;
            LODWORD(v141) = WORD2(v141) & 0xFF00;
            LODWORD(v52) = (v141 >> 8) ^ ((*(unsigned __int16 *)&v155[2 * (BYTE2(v157) ^ 0xB1)] ^ 0x7ABD) << 16) ^ (unsigned __int16)((10559 * *(_WORD *)&v148[2 * (v642 ^ 0xEC ^ (v652 ^ v771) ^ 0xC4)]) ^ ((unsigned __int16)(10559 * *(_WORD *)&v148[2 * (v642 ^ 0xEC ^ (v652 ^ v771) ^ 0xC4)]) >> 5) ^ ((unsigned __int16)(10559 * *(_WORD *)&v148[2 * (v642 ^ 0xEC ^ (v652 ^ v771) ^ 0xC4)]) >> 3)) ^ 0x98BA ^ (((unsigned __int16)((10559 * *(_WORD *)&v148[2 * (BYTE1(v157) ^ 0x8C)]) ^ ((unsigned __int16)(10559 * *(_WORD *)&v148[2 * (BYTE1(v157) ^ 0x8C)]) >> 5) ^ ((unsigned __int16)(10559 * *(_WORD *)&v148[2 * (BYTE1(v157) ^ 0x8C)]) >> 3)) ^ 0x98BA) << 8);
            v682 = (int)v135;
            v621 = v52 ^ v135;
            v159 = v52 ^ v135 ^ 0xA384C00C;
            v160 = v159 ^ v652 ^ v771;
            v747 = v160;
            v161 = *(unsigned __int16 *)&v150[2 * (HIBYTE(v160) ^ 7)];
            LOWORD(v44) = 10559 * *(_WORD *)&v148[2 * (v160 ^ 0xBA)];
            HIDWORD(v141) = v161 ^ 0xFFFFB385 ^ (v161 >> 2) & 0x3EB6;
            LODWORD(v141) = WORD2(v141) & 0xFF00;
            v629 = v156;
            v777 = v52 ^ v156;
            LODWORD(v52) = (unsigned __int16)(v44 ^ ((unsigned __int16)v44 >> 5) ^ ((unsigned __int16)v44 >> 3)) ^ 0x98BA ^ v52 ^ v156 ^ (v141 >> 8);
            LOWORD(v44) = 10559
                        * *(_WORD *)&v148[2 * (((unsigned __int16)(v160 ^ 0xA4EC) >> 8) ^ 0xD4)];
            LODWORD(v134) = (((unsigned __int16)(v44 ^ ((unsigned __int16)v44 >> 5) ^ ((unsigned __int16)v44 >> 3)) ^ 0x98BA) << 8) ^ (((*(unsigned __int16 *)&v152[2 * (((v160 ^ 0xC911A4EC) >> 16) ^ 0xC9)] - 657) ^ 0xCE9F) << 16) ^ v52;
            v162 = v159 ^ v642 ^ 0x6A11A4EC;
            v163 = v134 ^ v159;
            v164 = v134 ^ v159 ^ 0x1C000000;
            LODWORD(v52) = v162 ^ 0xA622FC7E ^ v164;
            v165 = v52 ^ v747 ^ 0xD7335892;
            v166 = (((*(unsigned __int16 *)&v152[2
                                               * (((v52 ^ v747 ^ 0x7B335892) >> 16) ^ 0xEB)]
                    - 657) ^ 0xCE9F) << 16) ^ ((*(unsigned __int16 *)&v155[2
                                                                         * (((unsigned __int16)(v52 ^ v747 ^ 0x5892) >> 8) ^ 0xA0)] ^ 0x7ABD) << 8) ^ __ROR4__(*(unsigned __int16 *)&v155[2 * (((v52 ^ v747) >> 24) ^ 0x77)] ^ 0x7ABD, 8) ^ (unsigned __int16)(*(_WORD *)&v152[2 * ((v52 ^ v747) ^ 0x79)] - 657) ^ 0xCE9F ^ v134;
            v768 = v164 ^ v166;
            LODWORD(v52) = v164 ^ v166 ^ v52;
            v167 = v165 ^ v52;
            LODWORD(v50) = v52;
            v719 = v52;
            v728 = v139 ^ 0x8907FA02;
            LODWORD(v52) = (((*(unsigned __int16 *)&v152[2 * (BYTE2(v167) ^ 0xEB)] - 657) ^ 0xCE9F) << 16) ^ __ROR4__(*(unsigned __int16 *)&v155[2 * (HIBYTE(v167) ^ 0xB7)] ^ 0x7ABD, 8) ^ (((unsigned __int16)(*(_WORD *)&v152[2 * (BYTE1(v167) ^ 0xEB)] - 657) ^ 0xCE9F) << 8) ^ (unsigned __int16)(*(_WORD *)&v152[2 * (v167 ^ 0xEB)] - 657) ^ 0xCE9F;
            LODWORD(v58) = v52 ^ v164;
            v168 = v52 ^ v164 ^ 0xA8000000;
            v676 = v165;
            v169 = v168 ^ v165;
            v170 = *(unsigned __int16 *)&v150[2 * (((v168 ^ v165) >> 16) ^ 0x7C)];
            v618 = v52 ^ v166;
            LODWORD(v139) = (unsigned __int16)(*(_WORD *)&v152[2 * ((v168 ^ v165) ^ 0xEB)] - 657) ^ 0xCE9F ^ ((*(unsigned __int16 *)&v155[2 * (((unsigned __int16)(v168 ^ v165) >> 8) ^ 0xA0)] ^ 0x7ABD) << 8) ^ v52 ^ v166 ^ __ROR4__(*(unsigned __int16 *)&v155[2 * (((v168 ^ v165) >> 24) ^ 0x70)] ^ 0x7ABD, 8) ^ ((v170 ^ 0xB385 ^ (v170 >> 2) & 0x3EB6) << 16);
            v625 = v168 ^ v50;
            v171 = v168 ^ v50 ^ 0x17000000;
            v741 = v58;
            v172 = v139 ^ v58;
            LODWORD(v61) = v139 ^ v58 ^ 0x73000000;
            v633 = v61 ^ v171;
            v687 = v169;
            LODWORD(v135) = v61 ^ v171 ^ v169;
            LOWORD(v58) = (10559 * *(_WORD *)&v148[2 * (BYTE2(v135) ^ 0x28)]) ^ ((unsigned __int16)(10559
                                                                                                  * *(_WORD *)&v148[2 * (BYTE2(v135) ^ 0x28)]) >> 5) ^ ((unsigned __int16)(10559 * *(_WORD *)&v148[2 * (BYTE2(v135) ^ 0x28)]) >> 3) ^ 0x98BA;
            LODWORD(v64) = *(unsigned __int16 *)&v150[2 * ((v61 ^ v171 ^ v169) ^ 0x7C)] ^ 0x7CE7;
            LODWORD(v148) = 10559 * *(unsigned __int16 *)&v148[2 * ((v135 >> 24) ^ 0xCA)];
            LODWORD(v52) = v135 ^ 0xE2000000;
            LODWORD(v135) = *(unsigned __int16 *)&v150[2 * (BYTE1(v135) ^ 0x7C)];
            v659 = (int)v139;
            HIDWORD(v141) = v148 ^ ((unsigned __int16)v148 >> 5) ^ ((unsigned __int16)v148 >> 3) ^ 0xFFFF98BA;
            LODWORD(v141) = WORD2(v141) & 0xFF00;
            LODWORD(v50) = v139 ^ (((unsigned __int16)v135 ^ 0xB385 ^ (v135 >> 2) & 0x3EB6) << 8) ^ ((v64 >> 2) & 0x3EB6 ^ (unsigned __int16)v64 | ((unsigned __int16)v58 << 16)) ^ 0xAF000000 ^ (v141 >> 8);
            LODWORD(v148) = v50 ^ v171;
            v173 = v50 ^ v171 ^ v52;
            LODWORD(v58) = *(unsigned __int16 *)&v150[2 * (HIBYTE(v173) ^ 0x2C)];
            v709 = v152;
            HIDWORD(v141) = v58 ^ 0xFFFFB385 ^ (v58 >> 2) & 0x3EB6;
            LODWORD(v141) = WORD2(v141) & 0xFF00;
            LODWORD(v152) = (unsigned __int16)(*(_WORD *)&v152[2 * (v173 ^ 0xB9)] - 657) ^ 0xCE9F ^ ((*(_WORD *)&v150[2 * (((unsigned __int16)(v173 ^ 0xD152) >> 8) ^ 0x7C)] ^ 0xB385 ^ (*(_WORD *)&v150[2 * (((unsigned __int16)(v173 ^ 0xD152) >> 8) ^ 0x7C)] >> 2) & 0x3EB6) << 8) ^ ((*(unsigned __int16 *)&v155[2 * (BYTE2(v173) ^ 0xA0)] ^ 0x7ABD) << 16) ^ (v141 >> 8);
            v174 = v173 ^ 0x2AC8B1D5;
            LODWORD(v137) = (v760 ^ 0x3EE08FDE ^ v771) - 1120617599;
            v175 = (v163 ^ 0xCD2094F5 ^ v173 ^ 0x2AC8B1D5) - 879939666;
            v715 = v774 ^ 0x685C1340;
            LODWORD(v139) = v157 ^ 0xC9D3719B;
            v176 = v50 ^ v61 ^ 0xB028C311;
            v177 = v176 - (v157 ^ 0xC9D3719B) - 388831203;
            LODWORD(v155) = v176 - (v774 ^ 0x685C1340) - 1105764649;
            v717 = v172 ^ 0x331E98B3;
            v656 = v163 ^ 0x32DF6B0A;
            v178 = (v172 ^ 0x331E98B3) - (v163 ^ 0x32DF6B0A) - 352959731;
            LODWORD(v58) = v148 ^ 0x5603BE62;
            v179 = v786 ^ 0xFC71CAFF ^ v50 ^ v61;
            v646 = v52;
            v775 = v175 ^ v178;
            v180 = v175 ^ v179 ^ v753 ^ v155;
            v721 = v180 ^ 0xF1165D79;
            v606 = (int)v152;
            v181 = v61 ^ v152 ^ 0x30000000;
            v737 = v52 ^ v179 ^ v175 ^ v178 ^ 0xD5D59972 ^ v181;
            v679 = (int)v134;
            v673 = v179 ^ v137 ^ v760 ^ 0x67B7989E;
            LODWORD(v152) = v756 ^ v178 ^ 0xFA967DD0 ^ v177;
            v724 = v175 ^ v134 ^ v642 ^ 0x6A11A4EC ^ 0x44A0E44C;
            v757 = (int)v155;
            v182 = (v751 >> 3) ^ 0x1955B2A4;
            v739 = v181;
            v690 = v166 ^ 0x71A01CC5;
            v735 = v181 ^ v148 ^ 0xB46012B5;
            v754 = (v166 ^ 0x71A01CC5) - 1200107315 + v735;
            v705 = v782 ^ v137 ^ v155 ^ 0x9BBE6D28 ^ v754;
            v183 = 1963532079 - (v162 ^ 0x65DD7DF3) - (v148 ^ 0x5603BE62);
            LODWORD(v134) = v183 ^ v174 ^ v175;
            v707 = (int)v152;
            v726 = (int)v134;
            v184 = 2 * ((v180 ^ 0x1A5AED70 ^ (v737 + 580175667)) + (_DWORD)v134) - 1345392478;
            LODWORD(v148) = (((v673 ^ 0x303774CD) - v724 - v152 - 1466738842) >> 1) + 2122436203;
            v185 = 2 * ((_DWORD)v134 - (_DWORD)v152 + ((v705 + 269731074) ^ 0x57BDFAE6)) + 1649053408;
            v783 = v182;
            v186 = (*(_QWORD *)&v5[8
                                 * ((*(_QWORD *)&v5[8
                                                  * ((*(_QWORD *)&v5[8
                                                                   * ((*(_QWORD *)&v5[8
                                                                                    * (0x5ABEE9DC % v182)]
                                                                     + 4094196783)
                                                                    % v182)]
                                                    + 901127185)
                                                   % v182)]
                                   + 1637722393)
                                  % v182)]
                  + 3045185208)
                 % v182;
            v611 = v50;
            LODWORD(v44) = v719 ^ 0xDEF98FF0;
            v187 = (v728 - 1064471087) & 0x5B7B5DEE;
            v761 = v179;
            v188 = v177 ^ v179;
            v692 = v177 ^ v179 ^ v715;
            v763 = v137;
            v694 = v139 ^ v137;
            v716 = v178;
            v699 = v178 ^ v162 ^ 0x65DD7DF3;
            v189 = v177 ^ v58;
            HIDWORD(v141) = v50 ^ 0x4600D152 ^ v179 ^ v137;
            LODWORD(v141) = HIDWORD(v141);
            v190 = v141 >> 19;
            v720 = v175;
            v703 = v44 ^ v175;
            v697 = v747 ^ 0x9F29CB48 ^ v183;
            v711 = (int)v148;
            v191 = v148 ^ 0x56F73070;
            v713 = v184;
            v192 = v184 ^ 0x521BD545;
            v748 = v176 - (_DWORD)v139 - 388831203;
            v701 = v167 ^ 0x1280A5F2 ^ v177;
            v614 = v185;
            v193 = v185 ^ 0x6814DEF6;
            if (v186 <= 1)
              v194 = 1;
            else
              v194 = v186;
            v195 = v194;
            v196 = 0xEE8C91ED02B121E3;
            v197 = -1;
            v198 = 0x9C30CE9D2493D7CBLL;
            do
            {
              v199 = *(_QWORD *)&v5[8 * v37];
              *(_QWORD *)&v5[8 * v37] = v199 ^ (v187 + 0x1A1A1A19FFCECC56);
              v199 *= 0xBBF77BF575ABB937;
              v200 = v199 ^ v198;
              v201 = (v199 ^ v198) + v37;
              v202 = v200
                   + HIDWORD(v201)
                   - ((v201 + HIDWORD(v201) - ((v201 + HIDWORD(v201)) >> 16)) >> 8)
                   - ((v201 + HIDWORD(v201)) >> 16);
              v203 = (v37 + v202) ^ v192;
              v204 = (v37 + v202 - 2124902158) ^ v191;
              v205 = v196 + 1;
              v206 = v196 + 1 + v202;
              v207 = v206 ^ v193;
              v208 = v206 ^ v199;
              v209 = (unint64_t)(v208 + v37) >> 32;
              v210 = v208 + v37 + v209;
              v211 = v210 >> 16;
              v212 = (v210 - (v210 >> 16)) >> 8;
              v213 = v37 + v208 + v209 - v212 - v211;
              v192 = v203 ^ v213;
              v191 = v204 ^ (v213 - 2124902158);
              ++v37;
              v198 = v196 + v208 + v209 - v212 - v211 + 1;
              v193 = v207 ^ v198;
              ++v197;
              ++v196;
            }
            while (v194 != v37);
            v685 = v761 ^ v690;
            v691 = v183 ^ v176 ^ v720;
            v688 = v687 ^ v720 ^ 0x86A49099;
            v671 = v629 ^ v183 ^ 0x14B8ECEB;
            v669 = v786 ^ v763 ^ 0xA9068DB8;
            v666 = v673 ^ 0xB2D5E9F4;
            v674 = v676 ^ v763 ^ ((v187 ^ 0x429163E6) - 1242147191);
            v663 = v682 ^ v720 ^ 0x81BA5862;
            v683 = v659 ^ v748 ^ 0x2C9BE7EA;
            v601 = v720 ^ v679 ^ 0x4EC592E1;
            v603 = v188;
            v660 = v744 ^ v183 ^ v188 ^ 0xDDAC5409;
            v214 = ((unint64_t)(v208 + v197) >> 32)
                 - ((v208
                   + v197
                   + ((unint64_t)(v208 + v197) >> 32)
                   - ((v208 + v197 + ((unint64_t)(v208 + v197) >> 32)) >> 16)) >> 8)
                 - ((v208 + v197 + ((unint64_t)(v208 + v197) >> 32)) >> 16)
                 + v208
                 + v205;
            v215 = ((v187 ^ 0x429163E6) - 1538018883) & 0xB7F7ABAF;
            v677 = __ROR4__(v190 ^ 0x54EBFBA4, 13) ^ 0x8D149AAC;
            v680 = v763 ^ v646 ^ 0x326A89D6;
            do
            {
              v216 = 8 * v195;
              v217 = *(_QWORD *)&v5[v216];
              *(_QWORD *)&v5[v216] = v217 ^ 0x1A1A1A1A1A1A1A1ALL;
              v218 = v217 * (v215 - 0x4408840B3F79D258);
              v219 = (v218 ^ v214) + v195 + (((v218 ^ v214) + v195) >> 32);
              v220 = v219 - (v219 >> 16) - ((v219 - (v219 >> 16)) >> 8);
              LODWORD(v217) = v220 ^ v192;
              v221 = (v220 - 2124902158) ^ v191;
              v220 -= 0x11736E12FD4EDE1CLL;
              v222 = v220 ^ v193;
              v223 = (v220 ^ v218) + v195 + (((v220 ^ v218) + v195) >> 32);
              v224 = v223 - (v223 >> 16) - ((v223 - (v223 >> 16)) >> 8);
              ++v195;
              v192 = v217 ^ v224;
              v191 = v221 ^ (v224 - 2124902158);
              v214 = v224 - 0x11736E12FD4EDE1CLL;
              v193 = v222 ^ (v224 + 45162980);
            }
            while (v182 > v195);
            v225 = 0;
            v226 = v215 + 1077504580;
            v647 = v720 ^ v656;
            v657 = v189 ^ v757;
            v639 = v652 ^ v771 ^ v763 ^ 0xCA4035A7;
            v636 = v652 ^ v763 ^ 0xB7B2B004;
            v653 = v763 ^ v618 ^ 0x5D2D3C38;
            v745 = v183;
            v643 = v642 ^ v183 ^ 0xEBA6BC0D;
            v650 = v625 ^ v754 ^ 0x800A6352 ^ v226;
            v227 = v224
                 + 0x30F42E5A53BC3810
                 - ((v224 + 0x30F42E5A53BC3810) >> 25)
                 - ((v224 + 0x30F42E5A53BC3810 - ((v224 + 0x30F42E5A53BC3810) >> 25)) >> 14);
            v228 = v227 - (v227 >> 1);
            v229 = v228
                 + 0x665F2C50DB1F3BF0
                 + ((v228 + 0x665F2C50DB1F3BF0) >> 25)
                 - ((v228 + 0x665F2C50DB1F3BF0 + ((v228 + 0x665F2C50DB1F3BF0) >> 25)) >> 8);
            v230 = v229 - (v229 >> 7);
            v231 = v230
                 + 0x18D8D4CDA2C9C2CELL
                 + ((v230 + 0x18D8D4CDA2C9C2CELL) >> 28)
                 + ((v230 + 0x18D8D4CDA2C9C2CELL + ((v230 + 0x18D8D4CDA2C9C2CELL) >> 28)) >> 8);
            v232 = v231 - (v231 >> 6);
            v233 = v232
                 + 0x35C69DED3FD95F61
                 - ((v232 + 0x35C69DED3FD95F61) >> 26)
                 - ((v232 + 0x35C69DED3FD95F61 - ((v232 + 0x35C69DED3FD95F61) >> 26)) >> 15);
            v234 = v233 + (v233 >> 2);
            LODWORD(v228) = v234 ^ v228;
            v235 = v234
                 + 0x257D8C8046399EB4
                 + ((v234 + 0x257D8C8046399EB4) >> 31)
                 - ((v234 + 0x257D8C8046399EB4 + ((v234 + 0x257D8C8046399EB4) >> 31)) >> 15);
            v236 = v235 - (v235 >> 8);
            LODWORD(v230) = v236 ^ v230;
            v237 = v236
                 + 0x10C9A6535F2766FDLL
                 + ((v236 + 0x10C9A6535F2766FDLL) >> 26)
                 + ((v236 + 0x10C9A6535F2766FDLL + ((v236 + 0x10C9A6535F2766FDLL) >> 26)) >> 10);
            v238 = v237 + (v237 >> 7);
            v239 = v238
                 + 0x3FFDA1313F482AA9
                 - ((v238 + 0x3FFDA1313F482AA9) >> 28)
                 - ((v238 + 0x3FFDA1313F482AA9 - ((v238 + 0x3FFDA1313F482AA9) >> 28)) >> 14);
            v240 = v239 - (v239 >> 1);
            v241 = v228 ^ v192 ^ v240;
            v242 = (v240 ^ 0xCCD380E836083C7DLL)
                 + ((v240 ^ 0xCCD380E836083C7DLL) >> 31)
                 - (((v240 ^ 0xCCD380E836083C7DLL) + ((v240 ^ 0xCCD380E836083C7DLL) >> 31)) >> 11);
            v243 = v242 - (v242 >> 4);
            v244 = v230 ^ v191 ^ v243;
            v245 = (v243 ^ 0x1ECED716DD7BB7C0)
                 - ((v243 ^ 0x1ECED716DD7BB7C0) >> 27)
                 + (((v243 ^ 0x1ECED716DD7BB7C0) - ((v243 ^ 0x1ECED716DD7BB7C0) >> 27)) >> 13);
            v246 = v238 ^ v232 ^ v193 ^ ((v245 >> 1) + v245);
            if (((v766[(v766[(v766[(v766[4] + 12) & 0xF] + 7) & 0xF] + 3) & 0xF] + 10) & 0xE) != 0)
              v247 = (v766[(v766[(v766[(v766[4] + 12) & 0xF] + 7) & 0xF] + 3) & 0xF] + 10) & 0xF;
            else
              v247 = 1;
            v248 = -1;
            v249 = (v226 + 1625094636) & 0xBFF61562;
            v250 = -1035202978;
            do
            {
              v251 = v225;
              v252 = -2088513753 * v766[v225];
              v253 = v252 ^ v250;
              v254 = (v253 + v225) >> 16;
              v255 = (v253 + v225 - v254 + ((v253 + (_DWORD)v225 - v254) >> 8)) ^ v241;
              v256 = v225 - 391892955;
              v257 = (v225 - 391892955 + v253 - v254 + ((v253 + (_DWORD)v225 - v254) >> 8)) ^ v244;
              v258 = v225 - 1156162776 + v253 + v249 + ((v253 + (_DWORD)v225 - v254) >> 8) - v254;
              v259 = v258 ^ v246;
              v260 = v258 ^ v252;
              ++v225;
              v261 = (v260 + v251) >> 16;
              v244 = v257 ^ (v256 + v260 - v261 + ((v260 + v251 - v261) >> 8));
              v241 = v255 ^ (v260 + v251 - v261 + ((v260 + v251 - v261) >> 8));
              v250 = v251 - 783785910 + v260 - v261 + ((v260 + v251 - v261) >> 8);
              v246 = v259 ^ v250;
              ++v248;
            }
            while (v247 != v225);
            v262 = 0;
            v263 = v249 - 11620569;
            v634 = v633 ^ v761 ^ 0xAD2A55A9 ^ (v249 - 11620569);
            v626 = v731 ^ v629 ^ v761 ^ 0x2C542C82;
            v630 = v621 ^ v745 ^ 0xA1C54E90;
            v264 = v766;
            v265 = 1596893764;
            v266 = v247 + 1596893764;
            v267 = v247 - 1;
            v268 = v247 - 1774268232;
            v269 = v247 - 623454905;
            v270 = v247 - 1567935486;
            v271 = v225
                 - 783785910
                 + v260
                 + ((v260 + v248 - ((v260 + v248) >> 16)) >> 8)
                 - ((v260 + v248) >> 16)
                 - 1;
            v272 = 1774268232;
            v273 = 1567935486;
            v274 = -412775034;
            v275 = 523729445;
            v276 = 623454905;
            v277 = 3511181386;
            v278 = 3903074341;
            v732 = v263 + 20028996;
            v787 = v263 - 65;
            v279 = v247;
            do
            {
              v280 = -2088513753 * v264[v247];
              v281 = v280 ^ v271;
              v282 = (v281 + v279) >> 16;
              v283 = (unint64_t)(v281 + v279 - v282) >> 8;
              v284 = (v247 + v262 + v281 - v282 + v283) ^ v241;
              v285 = (v247 + v278 + v281 - v282 + v283) ^ v244;
              v286 = v247 + v277 + v281 - v282 + v283;
              v287 = v286 ^ v246;
              v288 = v286 ^ v280;
              v289 = ((v286 ^ v280) + v279) >> 16;
              v290 = v288 + (((_DWORD)v247 + (_DWORD)v262 - v289 + v288) >> v787);
              v241 = v284 ^ (v247 + v262 - v289 + v290);
              v244 = v285 ^ (v247 + v278 - v289 + v290);
              v271 = v247 + v277 - v289 + v290;
              v246 = v287 ^ v271;
              ++v265;
              ++v266;
              ++v267;
              ++v268;
              ++v269;
              --v272;
              ++v270;
              --v273;
              --v274;
              --v275;
              --v276;
              ++v279;
              ++v277;
              ++v278;
              ++v262;
              ++v264;
            }
            while (v247 + v262 != 16);
            v291 = 0;
            v788 = v732 - 2128477980;
            v622 = v768 ^ v761 ^ 0x832CFBA9;
            v292 = (v288 + v267) >> 16;
            v293 = v290
                 + (((_DWORD)v247 - v292 + v290 + v265 + ((v290 + v266 - v292) >> 8)) >> (v732 + 123))
                 + ((v290 + v266 - v292) >> 8);
            v294 = (v247 + v265 + v293 - v292) ^ v241;
            v295 = (v293 + v269 - v292) >> 11;
            v296 = v293 + ((v293 + v269 - v295 - v292) >> 6);
            v297 = (v247 + v296 - v295 - v292 - v276) ^ v244;
            v298 = (v296 + v268 - v295 - v292) >> 14;
            v299 = v296 + ((v296 + v268 - v298 - v295 - v292) >> 8);
            v300 = v247 + v299 - v298 - v295 - v292 - v272;
            v301 = v299 + v270;
            v302 = (v299 + v270 - v298 - v295 - v292) >> 10;
            v303 = (v299 + v270 - v302 - v298 - v295 - v292) >> 1;
            v304 = v299 + v303;
            v305 = v294 ^ (v247 + v304 - v302 - v298 - v295 - v292 - v273);
            v306 = v301 + v303 - v302 - v298 - v295 - v292 + 1044206041;
            v307 = v306 >> 13;
            v308 = (v306 >> 13) + v306;
            v309 = v304 + v307 + (v308 >> 1);
            v619 = v757 ^ v717;
            v310 = v297 ^ (v247 + v309 - v302 - v298 - v295 - v292 - v275);
            v311 = v247
                 + v309
                 + (((v308 >> 1) + v308 + 936504479) >> 13)
                 - v302
                 - v298
                 - v295
                 - v292
                 - (((((v308 >> 1) + v308 + 936504479) >> 13) + (v308 >> 1) + v308 + 936504479) >> 6)
                 - v274;
            v312 = (v311 ^ 0x95394B70)
                 + ((v311 ^ 0x95394B70) >> 11)
                 - (((v311 ^ 0x95394B70) + ((v311 ^ 0x95394B70) >> 11)) >> 5);
            v313 = v305 ^ v312;
            v314 = v312
                 + 437756968
                 + ((v312 + 437756968) >> 15)
                 + ((v312 + 437756968 + ((v312 + 437756968) >> 15)) >> 5);
            v315 = v310 ^ v314;
            v595 = v300 ^ v246 ^ v311 ^ ((v314 ^ 0x2FC5FE8A)
                                       + ((v314 ^ 0x2FC5FE8A) >> 9)
                                       - (((v314 ^ 0x2FC5FE8A) + ((v314 ^ 0x2FC5FE8A) >> 9)) >> 8));
            v316 = v595 & 7 ^ 6;
            v317 = -v316;
            if (v316)
              v318 = 255;
            else
              v318 = 0;
            v769 = v317 & 7;
            v319 = v318 << (v317 & 7);
            v320 = 16843009 * v319;
            v321 = (-1627389952 * v319) & v315;
            if (v316)
              v322 = ~(_BYTE)v319;
            else
              v322 = 0;
            v323 = v313 & v322;
            v324 = ((*(_QWORD *)&v5[8
                                  * (((*(_QWORD *)&v5[8
                                                    * (((*(_QWORD *)&v5[8
                                                                      * (((*(_QWORD *)&v5[8
                                                                                        * (0xE3980420
                                                                                         % v783)] ^ 0x1A1A1A1A1A1A1A1AuLL)
                                                                        + 238880774)
                                                                       % v783)] ^ 0x1A1A1A1A1A1A1A1AuLL)
                                                      + 3086072040u)
                                                     % v783)] ^ 0x1A1A1A1A1A1A1A1AuLL)
                                    + 401687624)
                                   % v783)] ^ 0x1A1A1A1A1A1A1A1AuLL)
                  + 3165195916u)
                 % v783;
            v325 = v614 ^ 0xB7BDBF86;
            v326 = v711 ^ 0x895E5100;
            v733 = v320 ^ ~v321;
            v327 = v713 ^ 0x8DB2B435;
            if (v324 <= 1)
              v328 = 1;
            else
              v328 = v324;
            v329 = -1;
            v330 = 0xEE8C91ED02B121E3;
            v331 = 0x9C30CE9D2493D7CBLL;
            do
            {
              v332 = 0xBBF77BF575ABB937 * (*(_QWORD *)&v5[8 * v291] ^ 0x1A1A1A1A1A1A1A1ALL);
              v333 = v332 ^ v331;
              v334 = (v333 + v291) >> 32;
              v335 = v333 + v291 + v334;
              v336 = v335 >> 16;
              v337 = v333 - ((v335 - (v335 >> 16)) >> ((v788 + 114) ^ 0xEB));
              LODWORD(v335) = v291 + v334 - (v335 >> 16) + v337;
              v338 = v291 - 0x11736E12FD4EDE1CLL + v334 - v336 + v337;
              v339 = v338 ^ v325;
              v340 = v338 ^ v332;
              v341 = (v340 + v291) >> 32;
              v342 = v340 + v291 + v341;
              v343 = v342 >> 16;
              v344 = (v342 - (v342 >> 16)) >> 8;
              v345 = v291 + v340 + v341 - v344 - v343;
              v327 ^= v335 ^ v345;
              v326 ^= (v335 - 2124902158) ^ (v345 - 2124902158);
              ++v291;
              v331 = v330 + v340 + v341 - v344 - v343 + 1;
              v325 = v339 ^ v331;
              ++v329;
              ++v330;
            }
            while (v328 != v291);
            v346 = (v788 + 24812105) & 0x66B35FD7;
            v615 = v777 ^ v761 ^ 0x594C817A;
            v729 = v320 ^ v323;
            v718 = ((v346 + 16692079)
                  * (v315 ^ 0xA7 ^ ((unsigned __int16)(v315 ^ 0xB4A7) >> 8) ^ ((v315 ^ 0x5A45B4A7) >> 16) ^ HIBYTE(v315) ^ 0xDB)) ^ 0x81818181;
            v347 = v340 + v329;
            v348 = HIDWORD(v347)
                 - ((v347 + HIDWORD(v347) - ((v347 + HIDWORD(v347)) >> 16)) >> 8)
                 - ((v347 + HIDWORD(v347)) >> 16)
                 + v340
                 + v330;
            v349 = (v346 - 2080460170) | 0x58741820u;
            do
            {
              v350 = (*(_QWORD *)&v5[8 * v328] ^ 0x1A1A1A1A1A1A1A1ALL) * (v349 - 0x4408840B66C95EF1);
              v351 = (v350 ^ v348) + v328 + (((v350 ^ v348) + v328) >> 32);
              v352 = v351 - (v351 >> 16) - ((v351 - (v351 >> 16)) >> 8);
              v353 = v352 ^ v327;
              v354 = (v352 - 2124902158) ^ v326;
              v352 -= 0x11736E12FD4EDE1CLL;
              v355 = v352 ^ v325;
              v356 = (v352 ^ v350) + v328 + (((v352 ^ v350) + v328) >> 32);
              v357 = v356 - (v356 >> 16) - ((v356 - (v356 >> 16)) >> 8);
              v327 = v353 ^ v357;
              v326 = v354 ^ (v357 - 2124902158);
              v348 = v357 - 0x11736E12FD4EDE1CLL;
              v325 = v355 ^ (v357 + 45162980);
              LODWORD(v328) = v328 + 1;
            }
            while (v328 < v783);
            v358 = 0;
            v359 = ((_DWORD)v349 + 1763110921) | 0x8800800A;
            v608 = v780 ^ v754 ^ v775 ^ 0xEBC3C8BE;
            v360 = v357 + v359 + 0x30F42E59862FAFD5 - ((v357 + v359 + 0x30F42E59862FAFD5) >> 25);
            v361 = v360 - (v360 >> 14) - ((v360 - (v360 >> 14)) >> 1);
            v362 = v361
                 + 0x665F2C50DB1F3BF0
                 + ((v361 + 0x665F2C50DB1F3BF0) >> 25)
                 - ((v361 + 0x665F2C50DB1F3BF0 + ((v361 + 0x665F2C50DB1F3BF0) >> 25)) >> 8);
            v363 = v362 - (v362 >> 7);
            v364 = v363
                 + 0x18D8D4CDA2C9C2CELL
                 + ((v363 + 0x18D8D4CDA2C9C2CELL) >> 28)
                 + ((v363 + 0x18D8D4CDA2C9C2CELL + ((v363 + 0x18D8D4CDA2C9C2CELL) >> 28)) >> 8);
            v365 = v364 - (v364 >> 6);
            v366 = v365
                 + 0x35C69DED3FD95F61
                 - ((v365 + 0x35C69DED3FD95F61) >> 26)
                 - ((v365 + 0x35C69DED3FD95F61 - ((v365 + 0x35C69DED3FD95F61) >> 26)) >> 15);
            v367 = v366 + (v366 >> 2);
            LODWORD(v361) = v367 ^ v361;
            v368 = v367
                 + 0x257D8C8046399EB4
                 + ((v367 + 0x257D8C8046399EB4) >> 31)
                 - ((v367 + 0x257D8C8046399EB4 + ((v367 + 0x257D8C8046399EB4) >> 31)) >> 15);
            v369 = v368 - (v368 >> 8);
            LODWORD(v363) = v369 ^ v363;
            v370 = v369
                 + 0x10C9A6535F2766FDLL
                 + ((v369 + 0x10C9A6535F2766FDLL) >> 26)
                 + ((v369 + 0x10C9A6535F2766FDLL + ((v369 + 0x10C9A6535F2766FDLL) >> 26)) >> 10);
            v371 = v370 + (v370 >> 7);
            v372 = v371
                 + 0x3FFDA1313F482AA9
                 - ((v371 + 0x3FFDA1313F482AA9) >> 28)
                 - ((v371 + 0x3FFDA1313F482AA9 - ((v371 + 0x3FFDA1313F482AA9) >> 28)) >> 14);
            v373 = v372 - (v372 >> 1);
            v374 = v361 ^ v327 ^ v373;
            v375 = (v373 ^ 0xCCD380E836083C7DLL)
                 + ((v373 ^ 0xCCD380E836083C7DLL) >> 31)
                 - (((v373 ^ 0xCCD380E836083C7DLL) + ((v373 ^ 0xCCD380E836083C7DLL) >> 31)) >> 11);
            v376 = v375 - (v375 >> 4);
            v377 = v363 ^ v326 ^ v376;
            v378 = (v376 ^ 0x1ECED716DD7BB7C0)
                 - ((v376 ^ 0x1ECED716DD7BB7C0) >> 27)
                 + (((v376 ^ 0x1ECED716DD7BB7C0) - ((v376 ^ 0x1ECED716DD7BB7C0) >> 27)) >> 13);
            v379 = v371 ^ v365 ^ v325 ^ ((v378 >> 1) + v378);
            if (((v766[(v766[(v766[v766[2] & 0xF] + 2) & 0xF] + 11) & 0xF] - 1) & 0xE) != 0)
              v380 = (v766[(v766[(v766[v766[2] & 0xF] + 2) & 0xF] + 11) & 0xF] - 1) & 0xF;
            else
              v380 = 1;
            v381 = v359 + 454535146;
            v382 = -1;
            v383 = v359 - 1848139691;
            v384 = -1035202978;
            do
            {
              v385 = v358;
              v386 = -2088513753 * v766[v358];
              v387 = v386 ^ v384;
              v388 = (v387 + v358) >> 16;
              v389 = (v387 + v358 - v388 + ((v387 + (_DWORD)v358 - v388) >> 8)) ^ v374;
              v390 = (v381 + v358 + v387 - v388 + ((v387 + (_DWORD)v358 - v388) >> 8)) ^ v377;
              v391 = v358 - 783785910;
              v392 = v358 - 783785910 + v387 - v388 + ((v387 + (_DWORD)v358 - v388) >> 8);
              v393 = v392 ^ v379;
              v394 = v392 ^ v386;
              v395 = (v394 + v358) >> 16;
              v396 = (unint64_t)(v394 + (_DWORD)v358 - v395) >> 8;
              v374 = v389 ^ (v394 + v358 - v395 + ((v394 + (_DWORD)v358 - v395) >> 8));
              ++v358;
              v377 = v390 ^ (v385 - 391892955 + v394 - v395 + v396);
              v384 = v391 + v394 - v395 + v396;
              v379 = v393 ^ v384;
              ++v382;
            }
            while (v380 != v358);
            v397 = v358
                 - 783785910
                 + v394
                 + ((v394 + v382 - ((v394 + v382) >> 16)) >> 8)
                 - ((v394 + v382) >> 16)
                 - 1;
            v398 = (v383 + 1954784859) & 0x7FFFF7FD;
            v399 = 16843009 * (v313 & 0xFE ^ 0x26);
            do
            {
              v400 = -2088513753 * v766[v380];
              v401 = (v400 ^ v397) + v380 - (((v400 ^ v397) + v380) >> 16);
              v402 = v401 + (v401 >> 8);
              v403 = v402 ^ v374;
              v404 = (v402 - 391892955) ^ v377;
              v402 -= 783785910;
              v405 = v402 ^ v379;
              v406 = (v402 ^ v400) + v380 - (((v402 ^ v400) + v380) >> 16);
              v407 = (v406 >> (v398 ^ 0xE1)) + v406;
              v374 = v403 ^ v407;
              v377 = v404 ^ (v407 - 391892955);
              v397 = v407 - 783785910;
              LODWORD(v380) = 2 * (v380 & 1) + (v380 ^ 1);
              v379 = v405 ^ (v407 - 783785910);
            }
            while (v380 < 0x10);
            v408 = 0;
            v409 = (v398 + 702033654) & 0xB7E3FBA6;
            v410 = (v409 ^ 0x6A8D5BC3) + v407 + (((v409 ^ 0x6A8D5BC3) + v407) >> 8);
            v411 = v410 + (v410 >> 8);
            v412 = v411
                 + 2074618627
                 - ((v411 + 2074618627) >> 11)
                 + ((v411 + 2074618627 - ((v411 + 2074618627) >> 11)) >> 6);
            v413 = v412
                 - 1150813327
                 - ((v412 - 1150813327) >> 14)
                 + ((v412 - 1150813327 - ((v412 - 1150813327) >> 14)) >> 8);
            v414 = v413
                 + 206332746
                 - ((v413 + 206332746) >> 10)
                 + ((v413 + 206332746 - ((v413 + 206332746) >> 10)) >> 1);
            v415 = v414
                 + 1044206041
                 + ((v414 + 1044206041) >> 13)
                 + ((v414 + 1044206041 + ((v414 + 1044206041) >> 13)) >> 1);
            v416 = v415
                 + 936504479
                 + ((v415 + 936504479) >> 13)
                 - ((v415 + 936504479 + ((v415 + 936504479) >> 13)) >> 6);
            v417 = (v416 ^ 0x95394B70)
                 + ((v416 ^ 0x95394B70) >> 11)
                 - (((v416 ^ 0x95394B70) + ((v416 ^ 0x95394B70) >> 11)) >> 5);
            v418 = v417
                 + 437756968
                 + ((v417 + 437756968) >> 15)
                 + ((v417 + 437756968 + ((v417 + 437756968) >> 15)) >> 5);
            v419 = v411 ^ v374 ^ v414 ^ v417;
            v420 = v412 ^ v377 ^ v415 ^ v418;
            v789 = 16843009 * (v419 & 0xFE ^ 0x56);
            v421 = v413 ^ v379 ^ v416 ^ ((v418 ^ 0x2FC5FE8A)
                                       + ((v418 ^ 0x2FC5FE8A) >> 9)
                                       - (((v418 ^ 0x2FC5FE8A) + ((v418 ^ 0x2FC5FE8A) >> 9)) >> 8));
            v422 = v421 & 7 ^ 6;
            v423 = -v422;
            v784 = v421 & 7 ^ 6;
            v424 = v422 == 0;
            if (v422)
              v425 = 255;
            else
              v425 = 0;
            v781 = v423 & 7;
            v426 = v425 << (v423 & 7);
            v427 = 16843009 * v426;
            v428 = (1895825408 * v426) & v420;
            if (v424)
              v429 = 0;
            else
              v429 = ~(_BYTE)v426;
            v778 = v427 ^ v419 & v429;
            v430 = v420 ^ 0xA7 ^ ((unsigned __int16)(v420 ^ 0xB4A7) >> 8) ^ ((v420 ^ 0x5A45B4A7u) >> 16) ^ ((v420 ^ 0x5A45B4A7u) >> 24);
            v598 = v420 ^ v315;
            v712 = (16843009 * (v430 - ((2 * v430) & 0xB8) + 92)) ^ 0x5C5C5C5C;
            v776 = v427 ^ ~v428;
            v714 = (16843009
                  * (v313 ^ 0x80 ^ ((unsigned __int16)(v313 ^ 0x3B80) >> 8) ^ ((v313 ^ 0x3A813B80) >> 16) ^ HIBYTE(v313) ^ 0xAB)) ^ 0x91919191;
            v431 = v409 + 734395125;
            v432 = v419 ^ v420 ^ 0xA59A8DBE;
            do
            {
              v433 = *((_DWORD *)*(&off_1015B46D0 + (int)(v409 ^ 0x35A3F281)) + ((v409 - 899936612) ^ v408)) ^ ((v408 ^ 0xF0993819) + (v408 ^ 0x1B) + 1) ^ 0x12140247;
              v434 = 4
                   * (((v408 ^ ((v408 & v789) >> 1)) << v784) ^ v718 ^ v313 ^ 0x80 ^ ((unsigned __int16)(v313 ^ 0x3B80) >> 8) ^ ((v313 ^ 0x3A813B80) >> 16) ^ HIBYTE(v313) ^ 0x3A ^ (((v408 ^ ((v408 & v789) >> 1)) & v778) >> v769));
              *(_DWORD *)(v773 + v434) = v432 ^ ((((v433 ^ ((v433 & v399) >> 1)) & v729) >> v781) | (((v433 ^ ((v433 & v399) >> 1)) & v776) << v316));
              *(_DWORD *)(v770 + v434) = v313 ^ v315 ^ 0xCCCFA9F7 ^ (unsigned __int16)(*(_WORD *)&v709[2 * (v408++ ^ 0xEB)]
                                                                                     - 657);
            }
            while (v408 != 256);
            v435 = v771 ^ v603 ^ v313 ^ v419;
            v570 = v606 ^ v611;
            v710 = ((v409 - 883093637)
                  * (v419 ^ 0x80 ^ ((unsigned __int16)(v419 ^ 0x3B80) >> 8) ^ ((v419 ^ 0x3A813B80) >> 16) ^ HIBYTE(v419) ^ 0xD0)) ^ 0xEAEAEAEA;
            v436 = v741 ^ v745 ^ 0x645FC081 ^ (-1190661847 * v598);
            v742 = v721 ^ ((v399 & v721) >> 1);
            v580 = v608 ^ ((v789 & v608) >> 1);
            v579 = v660 ^ ((v789 & v660) >> 1);
            v437 = v705 ^ ((v399 & v705) >> 1);
            v438 = 16843009 * (v313 & 0xFE ^ 0x26);
            v439 = v733;
            v609 = ((v778 & v437) >> v769) + ((v733 & v437) << v316);
            v722 = v692 ^ ((v438 & v692) >> 1);
            v661 = v666 ^ ((v789 & v666) >> 1);
            v440 = v707 ^ ((v789 & v707) >> 1);
            v441 = v435 ^ 0xCBD4603B ^ (((v435 ^ 0xCBD4603B) & v438) >> 1);
            v667 = ((v778 & v441) >> v769) | ((v441 & v733) << v784);
            v612 = v663 ^ ((v789 & v663) >> 1);
            v442 = v729;
            v584 = ((v776 & (v636 ^ ((v438 & v636) >> 1))) << v316) + ((v729 & (v636 ^ ((v438 & v636) >> 1))) >> v769);
            v585 = v669 ^ ((v438 & v669) >> 1);
            v590 = ((v778 & (v639 ^ ((v789 & v639) >> 1))) >> v781) | (((v639 ^ ((v789 & v639) >> 1)) & v733) << v784);
            v640 = ((v776 & (v626 ^ ((v789 & v626) >> 1))) << v316) | ((v778 & (v626 ^ ((v789 & v626) >> 1))) >> v781);
            v593 = ((v776 & (v643 ^ ((v438 & v643) >> 1))) << v316) | ((v778 & (v643 ^ ((v438 & v643) >> 1))) >> v781);
            v587 = (((v694 ^ ((v789 & v694) >> 1)) & v733) << v784) + (((v694 ^ ((v789 & v694) >> 1)) & v729) >> v769);
            v695 = ((v776 & (v615 ^ ((v789 & v615) >> 1))) << v316) | ((v778 & (v615 ^ ((v789 & v615) >> 1))) >> v781);
            v599 = ((v733 & (v630 ^ ((v438 & v630) >> 1))) << v784) + ((v729 & (v630 ^ ((v438 & v630) >> 1))) >> v769);
            v582 = v699 ^ ((v438 & v699) >> 1);
            v588 = v697 ^ ((v789 & v697) >> 1);
            v637 = (1014773265 * ((v595 ^ 0xDFA96170) - v421) + v601) ^ (((1014773265 * ((v595 ^ 0xDFA96170) - v421)
                                                                         + v601) & v438) >> 1);
            v644 = ((v778 & (v647 ^ ((v789 & v647) >> 1))) >> v769) + (((v647 ^ ((v789 & v647) >> 1)) & v733) << v784);
            v631 = ((v776 & (v685 ^ ((v789 & v685) >> 1))) << v316) + (((v685 ^ ((v789 & v685) >> 1)) & v729) >> v781);
            v627 = ((v778 & (v622 ^ ((v438 & v622) >> 1))) >> v769) | ((v733 & (v622 ^ ((v438 & v622) >> 1))) << v784);
            v604 = v703 ^ ((v789 & v703) >> 1);
            v648 = v701 ^ ((v438 & v701) >> 1);
            v664 = ((v778 & (v653 ^ ((v438 & v653) >> 1))) >> v769) + ((v733 & (v653 ^ ((v438 & v653) >> 1))) << v316);
            v654 = ((v776 & (v436 ^ ((v436 & v789) >> 1))) << v784) + (((v436 ^ ((v436 & v789) >> 1)) & v729) >> v781);
            v623 = ((v776 & (v688 ^ ((v438 & v688) >> 1))) << v316) | ((v729 & (v688 ^ ((v438 & v688) >> 1))) >> v781);
            v607 = ((v776 & (v683 ^ ((v789 & v683) >> 1))) << v316) | ((v778 & (v683 ^ ((v789 & v683) >> 1))) >> v769);
            v616 = ((v776 & (v634 ^ ((v438 & v634) >> 1))) << v316) + ((v778 & (v634 ^ ((v438 & v634) >> 1))) >> v769);
            v596 = ((v776 & (v677 ^ ((v789 & v677) >> 1))) << v784) + (((v677 ^ ((v789 & v677) >> 1)) & v729) >> v769);
            v700 = ((v778 & (v691 ^ ((v438 & v691) >> 1))) >> v781) | ((v733 & (v691 ^ ((v438 & v691) >> 1))) << v316);
            v698 = ((v776 & (v726 ^ ((v438 & v726) >> 1))) << v784) + ((v778 & (v726 ^ ((v438 & v726) >> 1))) >> v769);
            v443 = ((v729 & (v720 ^ ((v438 & v720) >> 1))) >> v781) + ((v733 & (v720 ^ ((v438 & v720) >> 1))) << v316);
            v708 = ((v776 & (v763 ^ ((v789 & v763) >> 1))) << v784) + ((v778 & (v763 ^ ((v789 & v763) >> 1))) >> v769);
            v706 = (((v761 ^ ((v789 & v761) >> 1)) & v729) >> v781) | (((v761 ^ ((v789 & v761) >> 1)) & v733) << v316);
            v704 = ((v776 & (v745 ^ ((v438 & v745) >> 1))) << v784) + ((v778 & (v745 ^ ((v438 & v745) >> 1))) >> v769);
            v758 = ((v776 & (v757 ^ ((v789 & v757) >> 1))) << v784) ^ (((v757 ^ ((v789 & v757) >> 1)) & v729) >> v781);
            v702 = ((v778 & (v748 ^ ((v438 & v748) >> 1))) >> v769) + ((v733 & (v748 ^ ((v438 & v748) >> 1))) << v316);
            v749 = ((v778 & (v716 ^ ((v438 & v716) >> 1))) >> v781) | ((v733 & (v716 ^ ((v438 & v716) >> 1))) << v784);
            v764 = ((v776 & (v754 ^ ((v789 & v754) >> 1))) << v316) + (((v754 ^ ((v789 & v754) >> 1)) & v729) >> v769);
            v444 = (char *)*(&off_1015B46D0 + (int)(v431 ^ 0x6169E636)) - 4;
            v445 = (char *)*(&off_1015B46D0 + (int)(v409 - 899935484)) - 4;
            v446 = v445[v766[3] ^ 0x65];
            v447 = v409 + 556991979;
            v448 = (char *)*(&off_1015B46D0 + (int)(v431 ^ 0x6169E88D)) - 4;
            v449 = v445[v766[11] ^ 0xAALL];
            v450 = v445[v766[14] ^ 0x30];
            v451 = (char *)*(&off_1015B46D0 + (int)(v409 - 899934082)) - 8;
            v452 = ((((v446 >> 1) | ((_BYTE)v446 << 7)) ^ (((v446 >> 1) | ((_BYTE)v446 << 7)) >> 5) ^ (((v446 >> 1) | ((_BYTE)v446 << 7)) >> 1)) ^ 0xC7 | ((v766[2] ^ 0x39 ^ v444[v766[2] ^ 0x2BLL]) << 8)) & 0xFF00FFFF | (((v448[v766[1] ^ 0x83] + 78) ^ 0x37) << 16) | ((v451[*v766 ^ 0xA4] ^ 0x24) << 24);
            v453 = (((v449 >> 1) | ((_BYTE)v449 << 7)) ^ (((v449 >> 1) | ((_BYTE)v449 << 7)) >> 5) ^ (((v449 >> 1) | ((_BYTE)v449 << 7)) >> 1)) ^ 0x4F | ((v766[9] ^ 0x8C ^ v444[v766[9] ^ 0x29]) << 16) | ((v766[8] ^ 0xDB ^ v444[v766[8] ^ 0xEALL]) << 24);
            v693 = v444;
            v689 = v448;
            v454 = ((v766[5] ^ 0xD1 ^ v444[v766[5] ^ 0x7ALL]) << 16) | (((v448[v766[6] ^ 0xE1] + 78) ^ 0x58) << 8) | v766[7] ^ 0xAC ^ v444[v766[7] ^ 0xB4] | ((v766[4] ^ v444[v766[4] ^ 0x65] ^ 0x1C) << 24);
            v455 = v445[v766[15] ^ 0xADLL];
            v456 = ((v766[12] ^ 0x36 ^ v444[v766[12] ^ 0xA5]) << 24) | (((((v450 >> 1) | ((_BYTE)v450 << 7)) ^ (((v450 >> 1) | ((_BYTE)v450 << 7)) >> 5) ^ (((v450 >> 1) | ((_BYTE)v450 << 7)) >> 1)) ^ 0x6A) << 8) | (((v455 >> 1) | ((_BYTE)v455 << 7)) ^ (((v455 >> 1) | ((_BYTE)v455 << 7)) >> 5) ^ (((v455 >> 1) | ((_BYTE)v455 << 7)) >> 1)) ^ 0x25;
            LOBYTE(v455) = (v445[~v766[10]] >> 1) | (v445[~v766[10]] << 7);
            LOBYTE(v455) = v455 ^ (v455 >> 5) ^ (v455 >> 1) ^ 0xE2;
            v686 = v451;
            v457 = v456 | ((v451[v766[13] ^ 0x18] ^ 0xBA) << 16);
            v458 = (((v452 ^ ((v452 & v789) >> 1)) & v733) << v784) ^ (((v452 ^ ((v452 & v789) >> 1)) & v729) >> v781);
            v459 = v454 ^ 0xF2 ^ (((v454 ^ 0xF2) & v438) >> 1);
            v460 = ((v459 & v776) << v316) | ((v459 & v778) >> v769);
            v461 = (v453 & 0xFFFF00FF | (v455 << 8)) ^ (((v453 & 0xFFFF00FF | (v455 << 8)) & v438) >> 1);
            v462 = ((v461 & v733) << v784) | ((v461 & v729) >> v769);
            v463 = (((v457 ^ ((v457 & v789) >> 1)) & v778) >> v781) ^ (((v457 ^ ((v457 & v789) >> 1)) & v776) << v316);
            v767 = v438;
            v464 = v438 >> 1;
            v684 = ((v776 & ((v789 >> 1) & 0x3B7358B3 ^ 0x76E6B166)) << v316)
                 + ((v778 & ((v789 >> 1) & 0x3B7358B3 ^ 0x76E6B166)) >> v769);
            v578 = ((v733 & (v464 & 0x739B69A ^ 0xE736D35)) << v316) ^ ((v729 & (v464 & 0x739B69A ^ 0xE736D35)) >> v769) ^ v590;
            v576 = (((((v789 >> 1) & 0x5BDC7675 ^ 0xB7B8ECEB) & v729) >> v781) | ((((v789 >> 1) & 0x5BDC7675 ^ 0xB7B8ECEB) & v733) << v316)) ^ (((v733 & (v671 ^ ((v438 & v671) >> 1))) << v784) + ((v729 & (v671 ^ ((v438 & v671) >> 1))) >> v769));
            v573 = (((v776 & (v464 & 0x464AF24F ^ 0x8C95E49F)) << v784)
                  + ((v778 & (v464 & 0x464AF24F ^ 0x8C95E49F)) >> v769)) ^ v593;
            v572 = (((v729 & (v464 & 0x5EA0C74E ^ 0xBD418E9C)) >> v781)
                  + ((v733 & (v464 & 0x5EA0C74E ^ 0xBD418E9C)) << v316)) ^ v599;
            v568 = ((v776 & ((v789 >> 1) & 0x720D49ED ^ 0xE41A93DA) ^ v776 & v588) << v784) ^ ((v778 & v588) >> v781) ^ ((v778 & ((v789 >> 1) & 0x720D49ED ^ 0xE41A93DA)) >> v769);
            v566 = ((v776 & (v674 ^ ((v789 & v674) >> 1))) << v784) ^ (((v674 ^ ((v789 & v674) >> 1)) & v729) >> v781) ^ (((v778 & ((v789 >> 1) & 0x7684255 ^ 0xED084AB)) >> v781) | ((((v789 >> 1) & 0x7684255 ^ 0xED084AB) & v733) << v316));
            v564 = ((v778 & v648) >> v781) ^ ((v776 & v648) << v784) ^ (((((v789 >> 1) & 0x2C052F9 ^ 0x580A5F2) & v733) << v316)
                                                                      + ((((v789 >> 1) & 0x2C052F9 ^ 0x580A5F2) & v729) >> v769));
            v562 = ((v776 & ((v789 >> 1) & 0x7E5A6538 ^ 0xFCB4CA71)) << v316) ^ ((v778 & ((v789 >> 1) & 0x7E5A6538 ^ 0xFCB4CA71)) >> v769) ^ v654;
            v561 = v664 ^ (((v729 & (v464 & 0x4F169E1C ^ 0x9E2D3C38)) >> v781) | ((v733 & (v464 & 0x4F169E1C ^ 0x9E2D3C38)) << v784));
            v559 = (((v778 & (v650 ^ ((v789 & v650) >> 1))) >> v769) | (((v650 ^ ((v789 & v650) >> 1)) & v733) << v784)) ^ (((((v789 >> 1) & 0x592A4B40 ^ 0xB2549681) & v733) << v316) + ((((v789 >> 1) & 0x592A4B40 ^ 0xB2549681) & v729) >> v769));
            v560 = (((v680 ^ ((v789 & v680) >> 1) ^ v464 & 0x193544EB ^ 0x326A89D6) & v733) << v784) ^ ((v442 & (v464 & 0x193544EB ^ 0x326A89D6)) >> v769) ^ (((v680 ^ ((v789 & v680) >> 1)) & v442) >> v781);
            v557 = ((v778 & ((v789 >> 1) & 0x510F4C59 ^ 0xA21E98B3) ^ v729 & (v619 ^ ((v438 & v619) >> 1))) >> v781) ^ ((v733 & (v619 ^ ((v438 & v619) >> 1))) << v784) ^ ((v776 & ((v789 >> 1) & 0x510F4C59 ^ 0xA21E98B3)) << v316);
            v558 = (((v657 ^ ((v789 & v657) >> 1) ^ v464 & 0x301B798 ^ 0x6036F30) & v733) << v316) ^ ((v442 & (v464 & 0x301B798 ^ 0x6036F30)) >> v769) ^ (((v657 ^ ((v789 & v657) >> 1)) & v442) >> v781);
            v681 = (((v751 ^ 0xD72C2447) + 1061884953) ^ ((v751 ^ 0xC5AB87CF) + 768391057) ^ ((v751 ^ 0xD82A36AD)
                                                                                            + 810354419))
                 - 1924394723;
            v678 = (((((v789 >> 1) & 0x2423B6F4 ^ 0x48476DE8) & v733) << v784) | ((((v789 >> 1) & 0x2423B6F4 ^ 0x48476DE8) & v729) >> v769)) ^ ((v580 & v733) << v316) ^ v712 ^ v443 ^ ((v778 & v580) >> v769) ^ v749 ^ (((v776 & ((v438 >> 1) & 0x6F19C2D2 ^ 0xDE3385A4)) << v316) | ((v778 & ((v438 >> 1) & 0x6F19C2D2 ^ 0xDE3385A4)) >> v769)) ^ v764;
            v675 = ((v442 & v742) >> v781) ^ (((((v789 >> 1) & 0x5EB02101 ^ 0xBD604202) & v442) >> v781)
                                            + ((((v789 >> 1) & 0x5EB02101 ^ 0xBD604202) & v733) << v784));
            v672 = ((v733 & ((v438 >> 1) & 0x1314A132 ^ 0x26294264)) << v316) ^ v714 ^ v718 ^ ((v778 & ((v789 >> 1) & 0x3D7B85B7 ^ 0x7AF70B6E)) >> v781) ^ ((v778 & ((v438 >> 1) & 0x1314A132 ^ 0x26294264)) >> v769) ^ ((v776 & ((v789 >> 1) & 0x3D7B85B7 ^ 0x7AF70B6E)) << v784) ^ v609 ^ v758 ^ v708 ^ v764;
            v670 = ((v579 & v442) >> v781) ^ (((v733 & (v464 & 0x95ECA84 ^ 0x12BD9508)) << v316)
                                            + ((v442 & (v464 & 0x95ECA84 ^ 0x12BD9508)) >> v769)) ^ v712 ^ v706 ^ ((v776 & v579) << v784) ^ v702 ^ (((v776 & ((v789 >> 1) & 0x51E0AEF9 ^ 0xA3C15DF2)) << v784) + ((((v789 >> 1) & 0x51E0AEF9 ^ 0xA3C15DF2) & v442) >> v781)) ^ v704;
            v668 = v667 ^ (((v776 & (v464 & 0xA3E80A5 ^ 0x147D014B)) << v784) | ((v729 & (v464 & 0xA3E80A5 ^ 0x147D014B)) >> v769));
            v665 = ((v661 & v729) >> v781) ^ ((v776 & v661) << v784);
            v662 = ((v733 & v722) << v316) ^ (((v729 & (v464 & 0x60B06E22 ^ 0xC160DC45)) >> v781) | ((v733 & (v464 & 0x60B06E22 ^ 0xC160DC45)) << v784));
            v658 = v443 ^ (((v729 & (v464 & 0x4A9F4C37 ^ 0x953E986E)) >> v781)
                         + ((v733 & (v464 & 0x4A9F4C37 ^ 0x953E986E)) << v316)) ^ ((v778 & v612) >> v781) ^ ((v776 & v612) << v784);
            v655 = ((v778 & (v464 & 0x47AA1641 ^ 0x8F542C82)) >> v769) ^ v706 ^ ((v776 & (v464 & 0x47AA1641 ^ 0x8F542C82)) << v784) ^ v640;
            v651 = ((v733 & v582 ^ v776 & ((v789 >> 1) & 0x6BFFC0C6 ^ 0xD7FF818D)) << v316) ^ ((v442 & v582 ^ ((v789 >> 1) & 0x6BFFC0C6 ^ 0xD7FF818D) & v442) >> v769) ^ v749;
            v649 = (((v778 & (v464 & 0x792640BD ^ 0xF24C817A)) >> v781) | ((v733 & (v464 & 0x792640BD ^ 0xF24C817A)) << v784)) ^ v706 ^ v695;
            v645 = v443 ^ (((((v789 >> 1) & 0x4B6FB585 ^ 0x96DF6B0A) & v729) >> v781) | ((((v789 >> 1) & 0x4B6FB585 ^ 0x96DF6B0A) & v733) << v784)) ^ v644;
            v641 = ((v637 & v729) >> v781) ^ v443 ^ ((v776 & v637) << v316) ^ (((v776 & (v464 & 0x2AE2C970 ^ 0x55C592E1)) << v316)
                                                                             + ((v778 & (v464 & 0x2AE2C970 ^ 0x55C592E1)) >> v769));
            v638 = (((v778 & (v724 ^ ((v438 & v724) >> 1))) >> v769) + ((v733 & (v724 ^ ((v438 & v724) >> 1))) << v316)) ^ v443 ^ (((v776 & (v464 & 0x29410C19 ^ 0x52821832)) << v784) | ((v729 & (v464 & 0x29410C19 ^ 0x52821832)) >> v769));
            v635 = v627 ^ v706 ^ (((v776 & ((v789 >> 1) & 0x1C167DD4 ^ 0x382CFBA9)) << v316) | ((v778 & ((v789 >> 1) & 0x1C167DD4 ^ 0x382CFBA9)) >> v781));
            v632 = v706 ^ (((v733 & (v464 & 0x39500E62 ^ 0x72A01CC5)) << v784) | ((v729 & (v464 & 0x39500E62 ^ 0x72A01CC5)) >> v769)) ^ v631;
            v696 = v443;
            v624 = (((v776 & (v464 & 0x2B52484C ^ 0x56A49099)) << v784) | ((v778 & (v464 & 0x2B52484C ^ 0x56A49099)) >> v781)) ^ v443 ^ v623;
            v628 = ((v604 & v729) >> v769) ^ ((v604 & v733) << v316) ^ v443 ^ (((v776 & (v464 & 0x64FCC7F8 ^ 0xC9F98FF0)) << v784) | ((v778 & (v464 & 0x64FCC7F8 ^ 0xC9F98FF0)) >> v781));
            v620 = v559 ^ v764;
            v617 = (((v778 & (v464 & 0x455570F0 ^ 0x8AAAE1E0)) >> v781)
                  + ((v733 & (v464 & 0x455570F0 ^ 0x8AAAE1E0)) << v784)) ^ v706 ^ v616;
            v613 = (((v776 & ((v789 >> 1) & 0x62CDF3F5 ^ 0xC59BE7EA)) << v316)
                  + ((((v789 >> 1) & 0x62CDF3F5 ^ 0xC59BE7EA) & v729) >> v769)) ^ v702 ^ v607;
            v765 = v316;
            v610 = ((v729 & (v464 & 0x69140921 ^ 0xD2281243)) >> v769) ^ ((v733 & (v464 & 0x69140921 ^ 0xD2281243)) << v316);
            v605 = (((v776 & (v464 & 0x48950563 ^ 0x912A0AC6)) << v316) | ((v778 & (v464 & 0x48950563 ^ 0x912A0AC6)) >> v781)) ^ v758;
            v600 = v558 ^ v702 ^ v758;
            v602 = v557 ^ v758;
            v597 = (((v776 & ((v789 >> 1) & 0x4B1B1EF9 ^ 0x96363DF3)) << v784)
                  + ((v778 & ((v789 >> 1) & 0x4B1B1EF9 ^ 0x96363DF3)) >> v781)) ^ v596;
            v594 = v761 ^ v737;
            v465 = 0;
            v591 = (v778 & v722) >> v769;
            v592 = (v776 & v742) << v784;
            v589 = ((v776 & v440) << v316) ^ ((v440 & v729) >> v781) ^ (((v778 & ((v789 >> 1) & 0x78DA408C ^ 0xF1B48119)) >> v781) | ((((v789 >> 1) & 0x78DA408C ^ 0xF1B48119) & v733) << v316)) ^ v749 ^ v702;
            v586 = ((v733 & v585) << v316) ^ ((v729 & v585) >> v769) ^ ((v778 & ((v789 >> 1) & 0xF0346DC ^ 0x1E068DB8)) >> v781) ^ ((v776 & ((v789 >> 1) & 0xF0346DC ^ 0x1E068DB8)) << v784) ^ v708;
            v583 = v576 ^ v704;
            v581 = (((((v789 >> 1) & 0x616ABB ^ 0xC2D577) & v729) >> v781) | ((((v789 >> 1) & 0x616ABB ^ 0xC2D577) & v733) << v316)) ^ v587 ^ v708;
            v577 = v568 ^ v704;
            v575 = v566 ^ v708;
            v574 = v564 ^ v702;
            v571 = v570 ^ v714 ^ v718;
            v569 = v712 ^ v739 ^ v710;
            v567 = v714 ^ v735 ^ v718;
            for (i = v729; ; v458 = ((v554 & i) >> v769) | ((v554 & v439) << v784))
            {
              v772 = v465;
              v467 = v465;
              v762 = v465 | 8;
              v755 = v465 | 9;
              v565 = (v447 - 157763454) & 0xFEDC7FCC;
              v723 = (v447 + 2028513414) & 0xBCC5EF6A;
              v740 = v465 | 0xFLL;
              v468 = v445[v5[v740] ^ 0x86];
              v469 = (v468 >> 1) | ((_BYTE)v468 << 7);
              v750 = v465 | 0xBLL;
              v470 = v445[v5[v750] ^ 0xADLL];
              v759 = v465 | 0xALL;
              v471 = v445[v5[v759] ^ 0x56];
              v472 = (((v5[v755] ^ v693[v565 ^ 0xF4 ^ v5[v755]]) ^ 0xFB) << ((v447 - 122) & 0x6A ^ 0x72)) & 0xFFFFFF00 | ((v686[v5[v762] ^ 0xEFLL] ^ 0x9D) << 24) | (((v470 >> 1) | ((_BYTE)v470 << 7)) ^ (((v470 >> 1) | ((_BYTE)v470 << 7)) >> 5) ^ (((v470 >> 1) | ((_BYTE)v470 << 7)) >> 1)) ^ 0x2A;
              LOBYTE(v470) = (v471 >> 1) | ((_BYTE)v471 << 7);
              v473 = v472 & 0xFFFF00FF | (((v470 ^ (v470 >> 5) ^ (v470 >> 1)) ^ 0x1E) << 8);
              v738 = v465 | 6;
              v725 = v465 | 0xELL;
              v746 = v465 | 1;
              v730 = v465 | 4;
              v743 = v465 | 0xDLL;
              v736 = v465 | 0xCLL;
              v474 = v445[v5[v736] ^ 0xA0];
              v752 = v465 | 3;
              v475 = v445[v5[v752] ^ 0xD9];
              v476 = (v469 ^ (v469 >> 5) ^ (v469 >> 1)) ^ 0x44 | ((v5[v467 | 0xE] ^ 0x7B ^ v693[v5[v467 | 0xE] ^ 0x74]) << 8) | ((v686[v5[v743] ^ 0xBLL] ^ 0x7B) << 16) | ((((v474 >> 1) | (v474 << 7)) ^ (((v474 >> 1) | ((_BYTE)v474 << 7)) >> 5) ^ ~(((v474 >> 1) | ((_BYTE)v474 << 7)) >> 1)) << 24);
              v477 = (v475 >> 1) | ((_BYTE)v475 << 7);
              v734 = v465 | 7;
              v727 = v465 | 2;
              v478 = v5[v734] ^ 0x93 ^ v693[v5[v734] ^ 0x25] | (((v689[v5[v738] ^ 0xD6] + 78) ^ 0x95) << 8) | (((v689[v5[v467 | 5] ^ 0x64] + 78) ^ 0xA0) << 16) | (((v689[v5[v467 | 4] ^ 0xF5] + 78) ^ 0xFFFFFFF3) << 24);
              v479 = v445[v5[v727] ^ 0x8CLL];
              v480 = ((v477 ^ (v477 >> 5) ^ (v477 >> 1)) | ((v686[v5[v746] ^ 0x6CLL] ^ 0xC9) << 16) | (((v689[v5[v465] ^ 0x47] + 78) ^ 0xC6) << 24) | (((((v479 >> 1) | ((_BYTE)v479 << 7)) ^ (((v479 >> 1) | ((_BYTE)v479 << 7)) >> 5) ^ (((v479 >> 1) | ((_BYTE)v479 << 7)) >> 1)) ^ 0xFB) << 8)) ^ 0x56;
              v481 = v678 ^ v710 ^ v460 ^ ((((v478 ^ ((v478 & v789) >> 1)) & v776) << v765)
                                         + (((v478 ^ ((v478 & v789) >> 1)) & v778) >> v781));
              v482 = v718 ^ v714 ^ v675 ^ v696 ^ v706 ^ v592 ^ v605 ^ v458 ^ ((((v480 ^ ((v480 & v767) >> 1)) & v439) << v784)
                                                                            + (((v480 ^ ((v480 & v767) >> 1)) & i) >> v769));
              v483 = v670 ^ v710 ^ v462 ^ (((v473 ^ ((v473 & v767) >> 1)) & v776) << v765) ^ (((v473 ^ ((v473 & v767) >> 1)) & v778) >> v781);
              v484 = v672 ^ v463 ^ (((v476 ^ ((v476 & v789) >> 1)) & v439) << v784) ^ (((v476 ^ ((v476 & v789) >> 1)) & i) >> v769);
              v485 = (_DWORD *)(v773 + 4 * BYTE2(v481));
              v486 = 4 * HIBYTE(v481);
              v487 = v589 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v483)), 24) ^ __ROR4__(*(_DWORD *)(v773+ 4* v481), 16) ^ *(_DWORD *)(v773 + 4 * BYTE2(v484)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v482)), 8);
              v488 = v702 ^ v706 ^ v668 ^ *(_DWORD *)(v773 + 4 * BYTE2(v482)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v484)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v481)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v483), 16);
              v489 = v708 ^ v706 ^ v665 ^ v684 ^ *(_DWORD *)(v773 + 4 * BYTE2(v483)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v484)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v482), 16) ^ __ROR4__(*(_DWORD *)(v773 + v486), 24);
              v490 = v702 ^ v706 ^ v662 ^ v591 ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v483)), 8) ^ *v485 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v482)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v484), 16);
              v491 = 4 * BYTE1(v489);
              v492 = v658 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v489)), 24) ^ __ROR4__(*(_DWORD *)(v773+ 4* v490), 16) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v488)), 8) ^ *(_DWORD *)(v773 + 4 * BYTE2(v487));
              v493 = (((v776 & ((v789 >> 1) & 0x39C0F44B ^ 0x7381E896)) << v784) | ((v778 & ((v789 >> 1) & 0x39C0F44B ^ 0x7381E896)) >> v769)) ^ v584 ^ v708 ^ *(_DWORD *)(v773 + 4 * BYTE2(v488)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v487)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v490)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v489), 16);
              v494 = v586 ^ *(_DWORD *)(v773 + 4 * BYTE2(v489)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v490)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v487)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v488), 16);
              v495 = v578 ^ v708 ^ *(_DWORD *)(v773 + 4 * BYTE2(v490)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v488)), 24) ^ __ROR4__(*(_DWORD *)(v773+ 4* v487), 16);
              v497 = __ROR4__(*(_DWORD *)(v773 + v491), 8);
              v496 = v495 ^ v497;
              v498 = *(_DWORD *)(v773 + 4 * ((v495 ^ v497) >> 16));
              v499 = v583 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v494)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v493)), 8) ^ *(_DWORD *)(v773 + 4 * BYTE2(v492)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * (v495 ^ v497)), 16);
              v500 = v655 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v492)), 24) ^ __ROR4__(*(_DWORD *)(v773+ 4* ((unsigned __int16)(v495 ^ v497) >> 8)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v494), 16) ^ *(_DWORD *)(v773 + 4 * BYTE2(v493));
              v501 = v581 ^ *(_DWORD *)(v773 + 4 * BYTE2(v494)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v492)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v493), 16) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v496)), 24);
              v502 = v573 ^ v704 ^ v498 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v493)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v494)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v492), 16);
              v503 = (_DWORD *)(v773 + 4 * v499);
              v504 = (_DWORD *)(v773 + 4 * HIBYTE(v501));
              v505 = (_DWORD *)(v773 + 4 * BYTE2(v499));
              v506 = (_DWORD *)(v773 + 4 * v502);
              v507 = (_DWORD *)(v773 + 4 * HIBYTE(v499));
              v508 = (_DWORD *)(v773 + 4 * BYTE2(v502));
              v509 = v651 ^ *(_DWORD *)(v773 + 4 * BYTE2(v501)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v499)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v502)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v500), 16);
              v510 = v649 ^ *(_DWORD *)(v773 + 4 * BYTE2(v500)) ^ __ROR4__(*v507, 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v502)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v501), 16);
              v511 = v572 ^ v704 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v500)), 24) ^ __ROR4__(*v503, 16) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v501)), 8) ^ *v508;
              v512 = v577 ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v500)), 8) ^ __ROR4__(*v504, 24) ^ *v505 ^ __ROR4__(*v506, 16);
              v513 = (_DWORD *)(v773 + 4 * v511);
              v514 = (_DWORD *)(v773 + 4 * BYTE1(v511));
              v515 = (_DWORD *)(v773 + 4 * BYTE1(v510));
              LODWORD(v503) = v645 ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v512)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v511)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v510), 16) ^ *(_DWORD *)(v773 + 4 * BYTE2(v509));
              v516 = v641 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v510)), 24) ^ *(_DWORD *)(v773 + 4 * BYTE2(v511)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v509)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v512), 16);
              v517 = v575 ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v512)), 24) ^ __ROR4__(*v514, 8) ^ *(_DWORD *)(v773 + 4 * BYTE2(v510)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v509), 16);
              v518 = v638 ^ *(_DWORD *)(v773 + 4 * BYTE2(v512)) ^ __ROR4__(*v513, 16) ^ __ROR4__(*v515, 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v509)), 24);
              v519 = *(_DWORD *)(v773 + 4 * BYTE2(v517));
              LODWORD(v513) = *(_DWORD *)(v773 + 4 * HIBYTE(v518));
              LODWORD(v514) = *(_DWORD *)(v773 + 4 * v518);
              LODWORD(v507) = *(_DWORD *)(v773 + 4 * HIBYTE(v517));
              v520 = (_DWORD *)(v773 + 4 * BYTE1(v503));
              v521 = (_DWORD *)(v773 + 4 * v517);
              v522 = v635 ^ *(_DWORD *)(v773 + 4 * BYTE2(v518)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v517)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * (v503 >> 24)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v516), 16);
              v523 = v632 ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v518)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v516)), 24) ^ __ROR4__(*v521, 16) ^ *(_DWORD *)(v773 + 4 * BYTE2(v503));
              v524 = v628 ^ v519 ^ __ROR4__(*(_DWORD *)(v773 + 4 * v503), 16) ^ __ROR4__((_DWORD)v513, 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v516)), 8);
              v525 = v574 ^ __ROR4__((_DWORD)v514, 16) ^ __ROR4__((_DWORD)v507, 24) ^ *(_DWORD *)(v773
                                                                                                + 4 * BYTE2(v516));
              LODWORD(v503) = *(_DWORD *)(v773 + ((v524 >> 22) & 0x3FC));
              v526 = __ROR4__(*v520, 8);
              v527 = (_DWORD *)(v773 + 4 * ((v525 ^ v526) >> 16));
              v528 = (_DWORD *)(v773 + 4 * v524);
              LODWORD(v520) = v562 ^ v704 ^ __ROR4__(*(_DWORD *)(v773 + 4 * v523), 16) ^ __ROR4__(*(_DWORD *)(v773 + 4 * ((unsigned __int16)(v525 ^ v526) >> 8)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v522)), 24) ^ *(_DWORD *)(v773 + 4 * BYTE2(v524));
              LODWORD(v524) = v561 ^ v708 ^ *(_DWORD *)(v773 + 4 * BYTE2(v522)) ^ __ROR4__(*(_DWORD *)(v773+ 4 * BYTE1(v524)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v523)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * (v525 ^ v526)), 16);
              v529 = v624 ^ *(_DWORD *)(v773 + 4 * BYTE2(v523)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v522)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * ((v525 ^ v526) >> 24)), 24) ^ __ROR4__(*v528, 16);
              v530 = v620 ^ __ROR4__((_DWORD)v503, 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v523)), 8) ^ *v527 ^ __ROR4__(*(_DWORD *)(v773 + 4 * v522), 16);
              v531 = (_DWORD *)(v773 + 4 * BYTE1(v529));
              v532 = (_DWORD *)(v773 + 4 * HIBYTE(v529));
              v533 = (_DWORD *)(v773 + 4 * (v520 >> 24));
              v534 = v617 ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v524)), 8) ^ *(_DWORD *)(v773 + 4 * BYTE2(v529)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v530)), 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v520), 16);
              v535 = v613 ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v530)), 8) ^ *(_DWORD *)(v773 + 4 * BYTE2(v520)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v529), 16) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE3(v524)), 24);
              LODWORD(v520) = v560 ^ v708 ^ *(_DWORD *)(v773 + 4 * BYTE2(v524)) ^ __ROR4__(*v532, 24) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v520)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v530), 16);
              LODWORD(v527) = v602 ^ __ROR4__(*(_DWORD *)(v773 + 4 * v524), 16) ^ __ROR4__(*v531, 8) ^ __ROR4__(*v533, 24) ^ *(_DWORD *)(v773 + 4 * BYTE2(v530));
              LODWORD(v505) = *(_DWORD *)(v773 + 4 * v527);
              v536 = (_DWORD *)(v773 + 4 * BYTE2(v520));
              v537 = (_DWORD *)(v773 + 4 * v520);
              LODWORD(v514) = *(_DWORD *)(v773 + 4 * BYTE2(v527));
              LODWORD(v491) = *(_DWORD *)(v773 + 4 * (v520 >> 24));
              LODWORD(v520) = v704 ^ v696 ^ v610 ^ v700 ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v520)), 8) ^ *(_DWORD *)(v773 + 4 * BYTE2(v534)) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v535), 16) ^ __ROR4__(*(_DWORD *)(v773 + 4 * (v527 >> 24)), 24);
              LODWORD(v527) = v704 ^ v696 ^ ((v778 & ((v789 >> 1) & 0x3D643043 ^ 0x7AC86087)) >> v781) ^ ((v776 & ((v789 >> 1) & 0x3D643043 ^ 0x7AC86087)) << v784) ^ v698 ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v527)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * v534), 16) ^ *(_DWORD *)(v773 + 4 * BYTE2(v535)) ^ __ROR4__(v491, 24);
              LODWORD(v524) = v600 ^ *v536 ^ __ROR4__((_DWORD)v505, 16) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v535)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v534)), 24);
              v538 = v708 ^ v706 ^ v597 ^ HIWORD(*v537) ^ v514 ^ (*v537 << 16) ^ __ROR4__(*(_DWORD *)(v773 + 4 * BYTE1(v534)), 8) ^ __ROR4__(*(_DWORD *)(v773 + 4 * HIBYTE(v535)), 24);
              LODWORD(v537) = *(_DWORD *)(v770 + 4 * HIBYTE(v538));
              LODWORD(v533) = *(_DWORD *)(v770 + 4 * v524);
              LODWORD(v532) = *(_DWORD *)(v770 + 4 * BYTE2(v527));
              LODWORD(v514) = *(_DWORD *)(v770 + 4 * BYTE2(v520));
              v539 = *(_DWORD *)(v770 + 4 * BYTE3(v524));
              v540 = v569 ^ __ROR4__(*(_DWORD *)(v770 + 4 * BYTE2(v524)), 24) ^ __ROR4__(*(_DWORD *)(v770+ 4* v538), 8) ^ __ROR4__(*(_DWORD *)(v770 + 4 * (v520 >> 24)), 16) ^ *(_DWORD *)(v770 + 4 * BYTE1(v527));
              v541 = (uint64_t)*(&off_1015B46D0 + (int)(v447 - 1456928120));
              v542 = *(_DWORD *)(v770 + 4 * BYTE1(v524));
              LODWORD(v524) = *(_DWORD *)(v770 + 4 * BYTE1(v520));
              v543 = *(_DWORD *)(v770 + 4 * BYTE2(v538));
              LODWORD(v536) = *(_DWORD *)(v770 + 4 * v527);
              LODWORD(v507) = *(_DWORD *)(v770 + 4 * BYTE1(v538));
              LODWORD(v520) = *(_DWORD *)(v770 + 4 * v520);
              LODWORD(v515) = *(_DWORD *)(v770 + 4 * (v527 >> 24));
              v5[v467 | 5] = (*(_BYTE *)(v541 + (BYTE2(v540) ^ 0x11)) + (BYTE2(v540) ^ 0x5B) + 1) ^ 0x4F;
              v544 = v720 ^ v716 ^ v594 ^ v712 ^ v710 ^ __ROR4__((_DWORD)v533, 8) ^ v524 ^ __ROR4__(v543, 24) ^ __ROR4__((_DWORD)v515, 16);
              v545 = (char *)*(&off_1015B46D0 + (int)(v447 ^ 0x56D6F1CE)) - 12;
              v5[v725] = v545[BYTE1(v544) ^ 3] ^ ((BYTE1(v544) ^ 0xC) + (BYTE1(v544) ^ 0x17)) ^ 0xF7;
              v546 = (char *)*(&off_1015B46D0 + (int)(v447 ^ 0x56D6F6B0)) - 4;
              v5[v740] = (v546[v544 ^ 0x99] - 7) ^ 0x86;
              v547 = v567 ^ __ROR4__((_DWORD)v532, 24) ^ __ROR4__(v539, 16) ^ v507 ^ __ROR4__((_DWORD)v520, 8);
              v548 = v571 ^ __ROR4__((_DWORD)v537, 16) ^ __ROR4__((_DWORD)v514, 24) ^ v542 ^ __ROR4__((_DWORD)v536, 8);
              v5[v755] = (v546[BYTE2(v547) ^ 0xA2] - 7) ^ 0x5B;
              v5[v750] = ((v547 ^ 0xED) + *(_BYTE *)(v541 + (v547 ^ 0xA7)) + 1) ^ 0x73;
              v549 = (char *)*(&off_1015B46D0 + (int)(v447 - 1456926423)) - 4;
              v5[v738] = (v549[BYTE1(v540) ^ 0x7FLL] + 28) ^ 0x9E;
              v5[v730] = (v549[HIBYTE(v540) ^ 0xF9] + 28) ^ 0x2D;
              v5[v759] = (v546[((unsigned __int16)(v547 ^ 0x3202) >> 8) ^ 0x21] - 7) ^ 0x95;
              v5[v467] = ((((v548 ^ 0xF745CF46) >> 24) ^ 0xA7) + (((v548 ^ 0xF745CF46) >> 24) ^ 0xBC)) ^ 0x8A ^ v545[((v548 ^ 0xF745CF46) >> 24) ^ 0xA8];
              v5[v746] = (v546[BYTE2(v548) ^ 0xF9] - 7) ^ 0x17;
              v5[v736] = (v549[HIBYTE(v544) ^ 0x46] + 28) ^ 0x8E;
              v5[v727] = ((((unsigned __int16)(v548 ^ 0xCF46) >> 8) ^ 0x4B)
                        + *(_BYTE *)(v541 + (((unsigned __int16)(v548 ^ 0xCF46) >> 8) ^ 1))
                        + 1) ^ 0x67;
              v5[v743] = (v549[BYTE2(v544) ^ 0x75] ^ 1) + 28;
              v5[v734] = (v549[v540 ^ 0xB7] + 28) ^ 0xAA;
              v5[v752] = ((v548 ^ 0xF9) + *(_BYTE *)(v541 + (v548 ^ 0xB3)) + 1) ^ 0xDC;
              v36 = v770;
              v5[v762] = ((((v547 ^ 0x88C23202) >> 24) ^ 0x81)
                        + *(_BYTE *)(v541 + (((v547 ^ 0x88C23202) >> 24) ^ 0xCBLL))
                        + 1) ^ 0x58;
              v550 = v772 - 1340688728 < v681;
              if (v681 < 0xB016B698 != v772 - 1340688728 < 0xB016B698)
                v550 = v681 < 0xB016B698;
              if (!v550)
                break;
              v447 = v723 - 900634609;
              v465 = v772 - 1456928609 + v723 - 900634609;
              v551 = v544 ^ 0xC14A66F4 ^ (((v544 ^ 0xC14A66F4) & v789) >> 1);
              v463 = ((v551 & v439) << v765) ^ ((v551 & i) >> v769);
              v552 = v547 ^ 0x267A0DB5 ^ (((v547 ^ 0x267A0DB5) & v767) >> 1);
              v462 = ((v552 & v778) >> v781) | ((v552 & v776) << v784);
              v553 = v540 ^ 0x53D6E041 ^ (((v540 ^ 0x53D6E041) & v767) >> 1);
              v460 = ((v553 & v778) >> v781) | ((v553 & v776) << v765);
              v554 = v548 ^ 0x9F7FD056 ^ (((v548 ^ 0x9F7FD056) & v789) >> 1);
            }
            v19 = 0;
            v3 = v563;
            v34 = v773;
            v32 = v565;
          }
          v555 = (void (*)(uint64_t))*(&off_1015B46D0 + (int)(v32 - 1280060751));
          v555(v34);
          result = ((uint64_t (*)(uint64_t))v555)(v36);
        }
      }
    }
  }
  if ((v19 ^ 0x5226DFBF) + ((2 * v19) & 0xA44DBF7E) == 1378279359)
    v556 = 1624777124;
  else
    v556 = 1624777104;
  *(_DWORD *)(v3 + 4) = v556;
  return result;
}

uint64_t sub_1000C0F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  _DWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  char v21;
  unsigned int v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  char *v30;
  unsigned __int8 v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned __int8 v35;
  char *v36;
  char v37;
  char v38;
  int v39;
  unsigned int v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  char *v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  char *v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unint64_t v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  char *v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned __int8 v113;
  unsigned __int8 v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  BOOL v229;
  int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  unint64_t v238;
  unint64_t v239;
  int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  int v274;
  unint64_t v275;
  unint64_t v276;
  unint64_t v277;
  unint64_t v278;
  unint64_t v279;
  unint64_t v280;
  unint64_t v281;
  unint64_t v282;
  unint64_t v283;
  unint64_t v284;
  unint64_t v285;
  int v286;
  unint64_t v287;
  unint64_t v288;
  unint64_t v289;
  int v290;
  unint64_t v291;
  unint64_t v292;
  unint64_t v293;
  unint64_t v294;
  int v295;
  unint64_t v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  int v303;
  int v304;
  unsigned __int8 v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  int v310;
  int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  unsigned int v321;
  int v322;
  int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  int v344;
  unint64_t v345;
  int v346;
  unint64_t v347;
  unint64_t v348;
  int v349;
  unint64_t v350;
  unint64_t v351;
  BOOL v352;
  unsigned int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  unsigned int v358;
  int v359;
  unint64_t v360;
  unint64_t v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  int v374;
  unint64_t v375;
  unint64_t v376;
  int v377;
  unint64_t v378;
  unint64_t v379;
  int v380;
  unint64_t v381;
  uint64_t v382;
  int v383;
  int v384;
  int v385;
  unint64_t v386;
  unint64_t v387;
  unint64_t v388;
  unint64_t v389;
  unint64_t v390;
  unint64_t v391;
  int v392;
  unint64_t v393;
  unint64_t v394;
  unint64_t v395;
  unint64_t v396;
  unint64_t v397;
  unint64_t v398;
  unsigned int v399;
  int v400;
  unint64_t v401;
  unint64_t v402;
  unsigned int v403;
  unint64_t v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  unsigned int v417;
  int v418;
  int v419;
  unsigned __int8 v420;
  int v421;
  unsigned int v422;
  int v423;
  char *v424;
  int v425;
  unsigned int v426;
  unint64_t v427;
  unint64_t v428;
  unint64_t v429;
  int v430;
  unint64_t v431;
  unint64_t v432;
  unint64_t v433;
  unint64_t v434;
  unint64_t v435;
  unint64_t v436;
  unint64_t v437;
  unint64_t v438;
  unint64_t v439;
  unint64_t v440;
  unint64_t v441;
  unint64_t v442;
  int v443;
  int v444;
  unint64_t v445;
  unint64_t v446;
  unint64_t v447;
  int v448;
  int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  signed int v453;
  int v454;
  unsigned int v455;
  char *v456;
  int v457;
  unsigned int v458;
  int v459;
  int v460;
  int v461;
  int v462;
  unsigned int v463;
  int v464;
  uint64_t v465;
  int v466;
  int v467;
  int v468;
  int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  int v473;
  int v474;
  unsigned int v475;
  unsigned int v476;
  int v477;
  unsigned int v478;
  char v479;
  int v480;
  unsigned int v481;
  int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  unsigned int v487;
  int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  unint64_t v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  char v507;
  unsigned int v508;
  int v509;
  unsigned int v510;
  char v511;
  int v512;
  int v513;
  unsigned int v514;
  unsigned int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  unsigned int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  int v533;
  uint64_t v534;
  unsigned int v535;
  unsigned int v536;
  int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  int v542;
  unsigned int v543;
  unsigned int v544;
  int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  unsigned int v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  unsigned int v574;
  unsigned int v575;
  unsigned int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  unsigned int v605;
  int v606;
  unsigned int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  BOOL v613;
  int v614;
  int v615;
  int v616;
  int v617;
  unsigned int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  int v626;
  int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  unsigned int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  unsigned int v654;
  unsigned int v655;
  unsigned int v656;
  unsigned int v657;
  unsigned int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  unsigned int v663;
  unsigned int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  unsigned int v682;
  unsigned int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  _DWORD *v688;
  uint64_t v689;
  _DWORD *v690;
  _DWORD *v691;
  int v692;
  int v693;
  uint64_t v694;
  _DWORD *v695;
  int v696;
  _DWORD *v697;
  _DWORD *v698;
  int v699;
  int v700;
  unsigned int v701;
  unsigned int v702;
  int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  int v708;
  unsigned int v709;
  unsigned int v710;
  unsigned int v711;
  int v712;
  _DWORD *v713;
  _DWORD *v714;
  int v715;
  _DWORD *v716;
  _DWORD *v717;
  _DWORD *v718;
  _DWORD *v719;
  int v720;
  unsigned int v721;
  int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  int v727;
  unsigned int v728;
  uint64_t v729;
  unsigned int v730;
  unint64_t v731;
  int v732;
  unsigned int v733;
  unint64_t v734;
  int v735;
  unsigned int v736;
  unint64_t v737;
  _DWORD *v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  int v742;
  unsigned int v743;
  _DWORD *v744;
  unsigned int v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  _DWORD *v749;
  _DWORD *v750;
  _DWORD *v751;
  _DWORD *v752;
  _DWORD *v753;
  uint64_t v754;
  uint64_t v755;
  int v756;
  int v757;
  unsigned int v758;
  int v759;
  unsigned int v760;
  int v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  _DWORD *v765;
  _DWORD *v766;
  uint64_t v767;
  _DWORD *v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  _DWORD *v772;
  _DWORD *v773;
  _DWORD *v774;
  unsigned int v775;
  _DWORD *v776;
  _DWORD *v777;
  _DWORD *v778;
  _DWORD *v779;
  _DWORD *v780;
  uint64_t v781;
  uint64_t v782;
  _DWORD *v783;
  uint64_t v784;
  _DWORD *v785;
  unsigned int v786;
  _DWORD *v787;
  _DWORD *v788;
  _DWORD *v789;
  uint64_t v790;
  _DWORD *v791;
  uint64_t v792;
  _DWORD *v793;
  _DWORD *v794;
  uint64_t v795;
  _DWORD *v796;
  uint64_t v797;
  _DWORD *v798;
  uint64_t v799;
  _DWORD *v800;
  uint64_t v801;
  _DWORD *v802;
  _DWORD *v803;
  unsigned int v804;
  unsigned int v805;
  unsigned int v806;
  int v807;
  _DWORD *v808;
  _DWORD *v809;
  _DWORD *v810;
  _DWORD *v811;
  int v812;
  uint64_t v813;
  _DWORD *v814;
  _DWORD *v815;
  _DWORD *v816;
  unsigned int v817;
  _DWORD *v818;
  int v819;
  int v820;
  int v821;
  unsigned int v822;
  int v823;
  unsigned int v824;
  int v825;
  unsigned int v826;
  _DWORD *v827;
  unsigned int v828;
  unsigned __int8 v829;
  int v830;
  _DWORD *v831;
  _DWORD *v832;
  _DWORD *v833;
  _DWORD *v834;
  unsigned int v835;
  _DWORD *v836;
  _DWORD *v837;
  _DWORD *v838;
  int v839;
  int v840;
  int v841;
  unsigned int v842;
  int v843;
  int v844;
  unsigned int v845;
  unsigned int v846;
  unint64_t v847;
  int v848;
  unsigned int v849;
  unsigned int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  unsigned int v854;
  unsigned int v855;
  unsigned int v856;
  unsigned int v857;
  unsigned int v858;
  unsigned int v859;
  unsigned int v860;
  unsigned int v861;
  int v862;
  int v863;
  int v864;
  int v865;
  int v866;
  unsigned int v867;
  int v868;
  unsigned int v869;
  int v870;
  int v871;
  unsigned int v872;
  unsigned int v873;
  unsigned int v874;
  unsigned int v875;
  unsigned int v876;
  unsigned int v877;
  unsigned int v878;
  unsigned int v879;
  unsigned int v880;
  int v881;
  int v882;
  int v883;
  unsigned int v884;
  unsigned int v885;
  unsigned int v886;
  unsigned int v887;
  int v888;
  unsigned int v889;
  unsigned int v890;
  int v891;
  unsigned int v892;
  unsigned int v893;
  unsigned int v894;
  unsigned int v895;
  unsigned int v896;
  unint64_t v897;
  unsigned int v898;
  unsigned int v899;
  unsigned int v900;
  unsigned int v901;
  int v902;
  unsigned int v903;
  _DWORD *v904;
  unsigned int v905;
  _DWORD *v906;
  _DWORD *v907;
  _DWORD *v908;
  _DWORD *v909;
  _DWORD *v910;
  _DWORD *v911;
  _DWORD *v912;
  unsigned int v913;
  unsigned int v914;
  unsigned int v915;
  int v916;
  unsigned int v917;
  _DWORD *v918;
  unsigned int v919;
  int v920;
  int v921;
  unsigned int v922;
  unsigned int v923;
  unsigned int v924;
  _DWORD *v925;
  unsigned int v926;
  _DWORD *v927;
  unsigned int v928;
  unsigned int v929;
  unsigned int v930;
  _DWORD *v931;
  _DWORD *v932;
  int v933;
  _DWORD *v934;
  _DWORD *v935;
  unsigned int v936;
  int v937;
  unsigned int v938;
  int v939;
  unsigned int v940;
  int v941;
  unint64_t v942;
  int v943;
  int v944;
  uint64_t v945;
  unsigned int v946;
  unsigned int v947;
  unsigned int v948;
  unsigned int v949;
  void (*v950)(uint64_t, uint64_t);
  uint64_t result;
  int v952;
  int v953;
  int v954;
  int v955;
  unsigned int v956;
  int v957;
  unsigned int v958;
  int v959;
  unsigned int v960;
  int v961;
  int v962;
  unsigned int v963;
  int v964;
  unsigned int v965;
  int v966;
  unsigned int v967;
  int v968;
  unsigned int v969;
  int v970;
  unsigned int v971;
  int v972;
  unsigned int v973;
  int v974;
  unsigned int v975;
  int v976;
  unsigned int v977;
  int v978;
  int v979;
  int v980;
  unsigned int v981;
  int v982;
  unsigned int v983;
  int v984;
  unsigned int v985;
  unsigned int v986;
  unsigned int v987;
  int v988;
  int v989;
  int v990;
  int v991;
  int v992;
  int v993;
  int v994;
  int v995;
  unsigned int v996;
  unsigned int v997;
  unsigned int v998;
  int v999;
  int v1000;
  unsigned int v1001;
  unsigned int v1002;
  unsigned int v1003;
  unsigned int v1004;
  unsigned int v1005;
  int v1006;
  unsigned int v1007;
  unsigned int v1008;
  unsigned int v1009;
  int v1010;
  unsigned int v1011;
  int v1012;
  unsigned int v1013;
  int v1014;
  unsigned int v1015;
  unsigned int v1016;
  unsigned int v1017;
  unsigned int v1018;
  unsigned int v1019;
  char v1020;
  int v1021;
  unsigned int v1022;
  int v1023;
  unsigned int v1024;
  unsigned int v1025;
  unsigned int v1026;
  unsigned int v1027;
  unsigned int v1028;
  int v1029;
  unsigned int v1030;
  int v1031;
  unsigned int v1032;
  unsigned int v1033;
  unsigned int v1034;
  unsigned int v1035;
  unsigned int v1036;
  unsigned int v1037;
  int v1038;
  unsigned int v1039;
  int v1040;
  unsigned int v1041;
  unsigned int v1042;
  unsigned int v1043;
  int v1044;
  unsigned int v1045;
  int v1046;
  unsigned int v1047;
  unsigned int v1048;
  unsigned int v1049;
  unsigned int v1050;
  unsigned int v1051;
  unsigned int v1052;
  int v1053;
  int v1054;
  unsigned int v1055;
  unsigned int v1056;
  unsigned int v1057;
  unsigned int v1058;
  unsigned int v1059;
  int v1060;
  unsigned int v1061;
  unsigned int v1062;
  unsigned int v1063;
  unsigned int v1064;
  unsigned int v1065;
  unsigned int v1066;
  unsigned int v1067;
  unsigned int v1068;
  unsigned int v1069;
  unsigned int v1070;
  unsigned int v1071;
  unsigned int v1072;
  int v1073;
  unsigned int v1074;
  unsigned int v1075;
  int v1076;
  unsigned int v1077;
  int v1078;
  int v1079;
  int v1080;
  int v1081;
  unsigned int v1082;
  unsigned int v1083;
  unsigned int v1084;
  int v1085;
  unsigned int v1086;
  int v1087;
  int v1088;
  unsigned int v1089;
  int v1090;
  unsigned int v1091;
  char *v1092;
  int v1093;
  unsigned int v1094;
  _DWORD *v1095;
  int v1096;
  int v1097;
  int v1098;
  unsigned int v1099;
  int v1100;
  int v1101;
  int v1102;
  int v1103;
  unsigned int v1104;
  int v1105;
  int v1106;
  int v1107;
  unsigned int v1108;
  int v1109;
  unsigned int v1110;
  unsigned int v1111;
  int v1112;
  unsigned int v1113;
  int v1114;
  unsigned int v1115;
  int v1116;
  int v1117;
  int v1118;
  int v1119;
  unsigned int v1120;
  int v1121;
  unsigned int v1122;
  unsigned int v1123;
  unsigned int v1124;
  int v1125;
  unsigned int v1126;
  unsigned int v1127;
  unsigned int v1128;
  int v1129;
  unsigned int v1130;
  unsigned int v1131;
  int v1132;
  int v1133;
  unsigned int v1134;
  int v1135;
  unsigned int v1136;
  unsigned int v1137;
  unsigned int v1138;
  int v1139;
  unsigned int v1140;
  int v1141;
  int v1142;
  unsigned int v1143;
  int v1144;
  int v1145;
  unsigned int v1146;
  unsigned int v1147;
  unsigned int v1148;
  int v1149;
  int v1150;
  int v1151;
  unsigned int v1152;
  int v1153;
  unsigned int v1154;
  int v1155;
  int v1156;
  unsigned int v1157;
  signed int v1158;
  int v1159;
  unint64_t v1160;
  int v1161;
  unsigned int v1162;
  int v1163;
  int v1164;
  int v1165;
  unsigned int v1166;
  unsigned int v1167;
  unsigned int v1168;
  unsigned int v1169;
  unsigned int v1170;
  unsigned int v1171;
  unsigned int v1172;
  uint64_t v1173;
  unsigned int v1174;
  int v1175;
  int v1176;
  unsigned int v1177;
  unsigned int v1178;
  int v1179;
  unsigned int v1180;
  int v1181;
  int v1182;
  int v1183;
  unsigned int v1184;
  unsigned int v1185;
  unsigned int v1186;
  unsigned int v1187;
  unint64_t v1188;
  unsigned int v1189;
  int v1190;
  unsigned int v1191;
  unint64_t v1192;
  unint64_t v1193;
  unsigned int v1194;
  unsigned int v1195;
  unsigned int v1196;
  unint64_t v1197;
  unsigned int v1198;
  unsigned int v1199;
  unsigned int v1200;
  int v1201;
  unint64_t v1202;
  unsigned int v1203;
  int v1204;
  unsigned int v1205;
  int v1206;
  int v1207;
  unsigned int v1208;
  unsigned int v1209;
  unsigned int v1210;
  unsigned int v1211;
  unsigned int v1212;
  int v1213;
  unsigned int v1214;
  unsigned int v1215;
  unsigned int v1216;
  int v1217;
  unsigned int v1218;
  unsigned int v1219;
  unsigned int v1220;
  unsigned int v1221;
  int v1222;
  unsigned int v1223;
  unsigned int v1224;
  unsigned int v1225;
  int v1226;
  int v1227;
  unsigned int v1228;
  unsigned int v1229;
  int v1230;
  int v1231;
  unsigned int v1232;
  int v1233;
  int v1234;
  unsigned int v1235;
  unsigned int v1236;
  int v1237;
  int v1238;
  int v1239;
  unsigned int v1240;
  unsigned int v1241;
  int v1242;
  int v1243;
  unsigned int v1244;
  unsigned int v1245;
  unsigned int v1246;
  unsigned int v1247;
  int v1248;
  int v1249;
  int v1250;
  unsigned int v1251;
  unsigned int v1252;
  int v1253;
  int v1254;
  unsigned int v1255;
  int v1256;
  unsigned int v1257;
  unsigned int v1258;
  int v1259;
  unsigned int v1260;
  int v1261;
  int v1262;
  unsigned int v1263;
  unsigned int v1264;
  unsigned int v1265;
  unsigned int v1266;
  int v1267;
  int v1268;
  unsigned int v1269;
  int v1270;
  unint64_t v1271;
  int v1272;
  unsigned int v1273;
  unsigned int v1274;
  unsigned int v1275;
  int v1276;
  int v1277;
  int v1278;
  unsigned int v1279;
  unsigned int v1280;
  int v1281;
  int v1282;
  int v1283;
  int v1284;
  unsigned int v1285;
  unsigned int v1286;
  unsigned int v1287;
  int v1288;
  int v1289;
  unsigned int v1290;
  unsigned int v1291;
  unsigned int v1292;
  int v1293;
  unsigned __int8 v1294;
  unsigned int v1295;
  unsigned int v1296;
  unsigned int v1297;
  unsigned int v1298;
  uint64_t v1299;
  unsigned int v1300;
  int v1301;
  unsigned int v1302;
  unsigned int v1303;
  int v1304;
  int v1305;
  int v1306;
  unsigned int v1307;
  unsigned int v1308;
  _DWORD *v1309;
  int v1310;
  int v1311;
  unsigned int v1312;
  unsigned int v1313;
  int v1314;
  int v1315;
  unsigned int v1316;
  unsigned int v1317;
  _DWORD *v1318;
  unsigned int v1319;
  unsigned int v1320;
  unsigned int v1321;
  unsigned int v1322;
  int v1323;
  unsigned int v1324;
  unsigned int v1325;
  unsigned int v1326;
  unsigned int v1327;
  _DWORD *v1328;
  int v1329;
  int v1330;
  unsigned int v1331;
  unsigned int v1332;
  int v1333;
  unsigned int v1334;
  unsigned int v1335;
  unsigned int v1336;
  unsigned int v1337;
  unsigned int v1338;
  unsigned int v1339;
  int v1340;
  unsigned int v1341;
  unsigned int v1342;
  unsigned int v1343;
  _DWORD *v1344;
  int v1345;
  int v1346;
  unsigned int v1347;
  unsigned int v1348;
  unsigned int v1349;
  int v1350;
  unsigned __int8 v1351;
  unsigned int v1352;
  unsigned int v1353;
  unsigned int v1354;
  int v1355;
  unsigned int v1356;
  int v1357;
  unsigned int v1358;
  unsigned int v1359;
  int v1360;
  unsigned int v1361;
  unsigned int v1362;
  unsigned int v1363;
  unsigned int v1364;
  int v1365;
  unsigned int v1366;
  int v1367;
  unsigned int v1368;
  unsigned int v1369;
  int v1370;
  unsigned int v1371;
  unsigned int v1372;
  unsigned int v1373;
  int v1374;
  int v1375;
  unsigned int v1376;
  unsigned int v1377;
  int v1378;
  int v1379;
  unsigned int v1380;
  unsigned int v1381;
  int v1382;
  unsigned int v1383;
  unsigned int v1384;
  unsigned int v1385;
  unsigned int v1386;
  unsigned int v1387;
  unsigned int v1388;
  unsigned int v1389;
  int v1390;
  unsigned int v1391;
  unsigned int v1392;
  int v1393;
  unsigned int v1394;
  unsigned int v1395;
  unsigned int v1396;
  int v1397;
  unsigned int v1398;
  unsigned int v1399;
  unsigned int v1400;
  int v1401;
  unsigned int v1402;
  unsigned int v1403;
  unsigned int v1404;
  int v1405;
  unsigned int v1406;
  unsigned int v1407;
  int v1408;
  unsigned int v1409;
  unsigned int v1410;
  unsigned int v1411;
  unsigned int v1412;
  int v1413;
  unsigned int v1414;
  unsigned int v1415;
  int v1416;
  int v1417;
  unsigned int v1418;
  unsigned int v1419;
  unsigned int v1420;
  unsigned int v1421;
  unsigned int v1422;
  int v1423;
  unsigned int v1424;
  unsigned int v1425;
  unsigned int v1426;
  unsigned int v1427;
  unsigned int v1428;
  unsigned int v1429;
  int v1430;
  int v1431;
  unsigned int v1432;
  unsigned int v1433;
  int v1434;
  int v1435;
  unsigned int v1436;
  unsigned int v1437;
  int v1438;
  int v1439;
  unsigned int v1440;
  unsigned int v1441;
  unsigned int v1442;
  int v1443;
  _DWORD *v1444;
  int v1445;
  unint64_t v1446;
  int v1447;
  int v1448;
  unsigned int v1449;
  unsigned int v1450;
  unsigned int v1451;
  char *v1452;
  unsigned int v1453;
  int v1454;
  int v1455;
  int v1456;
  char *v1457;
  int v1458;
  int v1459;
  char *v1460;
  unsigned int v1461;
  int v1462;
  int v1463;
  unsigned int v1464;
  unsigned int v1465;
  unsigned int v1466;
  unsigned int v1467;
  int v1468;
  int v1469;
  int v1470;
  unsigned int v1471;
  unsigned int v1472;
  unsigned int v1473;
  unsigned int v1474;
  int v1475;
  unsigned int v1476;
  int v1477;
  int v1478;
  int v1479;
  int v1480;
  unsigned int v1481;
  unsigned int v1482;
  int v1483;
  unsigned int v1484;
  unsigned int v1485;
  int v1486;
  unsigned int v1487;
  unsigned int v1488;
  int v1489;
  int v1490;
  int v1491;
  int v1492;
  unint64_t v1493;
  unsigned int v1494;
  unsigned int v1495;
  unint64_t v1496;
  unsigned int v1497;
  unsigned int v1498;
  unint64_t v1499;
  int v1500;
  int v1501;
  unint64_t v1502;
  int v1503;
  int v1504;
  unint64_t v1505;
  int v1506;
  int v1507;
  int v1508;
  unint64_t v1509;
  int v1510;
  int v1511;
  unsigned int v1512;
  unint64_t v1513;
  int v1514;
  int v1515;
  int v1516;
  unint64_t v1517;
  unsigned int v1518;
  uint64_t v1519;
  _DWORD *v1520;
  int v1521;
  unsigned int v1522;
  int v1523;
  char v1524;
  int v1525;
  int v1526;
  uint64_t v1527;
  unsigned int v1528;
  unsigned int v1529;
  unsigned int v1530;
  unsigned int v1531;
  unsigned int v1532;
  unsigned int v1533;
  unsigned int v1534;
  _DWORD *v1535;
  int v1536;
  int v1537;
  unint64_t v1538;
  int v1539;
  int v1540;
  unint64_t v1541;
  unsigned int v1542;
  int v1543;
  unsigned int v1544;
  unsigned int v1545;
  int v1546;
  unsigned int v1547;
  unsigned int v1548;
  int v1549;
  unsigned int v1550;
  unsigned int v1551;
  int v1552;
  int v1553;
  int v1554;
  int v1555;
  unsigned int v1556;
  unsigned __int8 *v1557;
  unsigned int v1558;
  unsigned int v1559;
  unsigned int v1560;
  int v1561;
  int v1562;
  unsigned int v1563;
  int v1564;
  unsigned int v1565;
  unsigned int v1566;
  uint64_t v1567;
  int v1568;
  unsigned int v1569;
  unsigned int v1570;
  unsigned int v1571;
  char v1572;
  unsigned int v1573;
  int v1574;
  int v1575;
  unsigned int v1576;
  unsigned int v1577;
  int v1578;
  unsigned int v1579;
  unsigned int v1580;
  int v1581;
  int v1582;
  int v1583;
  int v1584;
  unsigned int v1585;
  int v1586;
  char v1587;
  int v1588;
  int v1589;
  int v1590;
  int v1591;
  int v1592;
  int v1593;
  int v1594;
  int v1595;
  unsigned int v1596;
  char *v1597;
  unsigned int v1598;
  unint64_t v1599;
  int v1600;
  int v1601;
  unsigned __int8 v1602;
  unsigned __int8 v1603;
  unsigned __int8 v1604;
  unsigned __int8 v1605;
  unsigned __int8 v1606;
  unsigned __int8 v1607;
  unsigned __int8 v1608;
  unsigned __int8 v1609;
  unsigned __int8 v1610;
  unsigned __int8 v1611;
  unsigned __int8 v1612;
  unsigned __int8 v1613;
  unsigned __int8 v1614;
  unsigned __int8 v1615;
  unsigned __int8 v1616;
  unsigned __int8 v1617;

  v1 = a1;
  v2 = 0;
  v3 = *(_DWORD *)(a1 + 24) + 192761461 * ((((2 * a1) | 0xC7CFBFA8) - a1 - 1676140500) ^ 0xEA7A337E);
  v4 = v3 ^ 0xC0528D89;
  v5 = *(&off_1015B46D0 + v3 + 1542814347);
  v6 = (uint64_t)*(&off_1015B46D0 + (int)(v3 ^ 0xA40A80EC));
  v9 = *(_QWORD *)(v6 - 4);
  v7 = (_QWORD *)(v6 - 4);
  v8 = v9;
  v10 = *v5 & (v4 - 1243210192);
  v11 = v4 + 692471779;
  v12 = v4 - 120;
  v13 = v4 ^ 0x64580850;
  do
  {
    v14 = 1772489163 * (((v2 + *(_QWORD *)a1) ^ *(_DWORD *)(v8 + v10)) & 0x7FFFFFFF);
    v15 = (v14 >> v12) ^ v14;
    v16 = (uint64_t)*(&off_1015B46D0 + v13);
    *(&v1602 + v2) = *(_BYTE *)(v16 + (v2 | (16 * ((1772489163 * v15) >> 24)))) ^ *(_BYTE *)(*(_QWORD *)a1 + v2) ^ (-53 * v15);
    ++v2;
  }
  while (v2 != 16);
  v17 = 0;
  v18 = (v11 + 2122952117) | 0xC205AE59;
  do
  {
    v20 = *(unsigned __int8 **)(v1 + 8);
    v19 = *(_QWORD *)(v1 + 16);
    v21 = *(_BYTE *)(v19 + v17);
    LODWORD(v19) = 1772489163 * ((*(_DWORD *)(*v7 + (*v5 & 0x1A3E29B8)) ^ (v17 + v19)) & (v18 ^ 0xB1D25086));
    v20[v17] = *(_BYTE *)(v16 + (v17 | (16 * ((1772489163 * (v19 ^ WORD1(v19))) >> 24)))) ^ v21 ^ (-53 * (v19 ^ BYTE2(v19)));
    ++v17;
  }
  while (v17 != 16);
  v22 = v18 + 1274187975;
  v1596 = (v18 + 1274187975) ^ 0xBE2AC641;
  v23 = (uint64_t (*)(uint64_t))*(&off_1015B46D0 + (int)(v18 + 835867041));
  v24 = v23(1032);
  v25 = v23(1028);
  v27 = v25;
  v28 = -42885;
  v1567 = v24;
  if (v24 && v25)
  {
    v1173 = v1;
    v29 = 0;
    v1168 = (v22 | 0x8005190F) + 264033470;
    v30 = (char *)*(&off_1015B46D0 + (int)((v22 | 0x8005190F) + 1708828405)) - 8;
    v31 = v30[v1617 ^ 0x54] ^ 0x79 ^ ((v30[v1617 ^ 0x54] ^ 0x79) << 7) ^ (16
                                                                                             * (v30[v1617 ^ 0x54] ^ 0x79));
    v32 = *((unsigned __int8 *)*(&off_1015B46D0 + (int)((v22 | 0x8005190F) + 1708828949)) + (v1612 ^ 0xF7) - 4);
    v1460 = (char *)*(&off_1015B46D0 + (int)((v22 | 0x8005190F) + 1708828949)) - 4;
    v1579 = v22 | 0x8005190F;
    v1452 = (char *)*(&off_1015B46D0 + (int)((v22 | 0x8005190F) ^ 0x9A2558DE)) - 12;
    v33 = (((v32 >> 3) | (32 * v32)) ^ 0x4A) << 8;
    v34 = v1452[v1614 ^ 0xEALL] ^ (12 * v1452[v1614 ^ 0xEALL]);
    v35 = v1452[v1615 ^ 0xC8] ^ (12 * v1452[v1615 ^ 0xC8]);
    v36 = (char *)*(&off_1015B46D0 + (int)((v22 | 0x8005190F) + 1708830073)) - 4;
    v37 = v30[v1616 ^ 0x70];
    v38 = ((v37 ^ 0x79) << 7) ^ (16 * (v37 ^ 0x79));
    v39 = ((v35 ^ 0x40) << 16) | (((v37 ^ 0x4E ^ -(v37 ^ 0x4E) ^ (v38 + (v37 ^ 0xB1 ^ v38) + 1)) + v38) << 8) | v31 ^ 0x78 | ((v34 ^ 0xA6) << 24);
    v40 = v33 & 0xFF00FF00 | (((v1452[v1611 ^ 0x22] ^ (12 * v1452[v1611 ^ 0x22])) ^ 0xD8) << 16) | (v36[v1613 ^ 0x9CLL] + 71) | ((v30[v1610 ^ 0xD8] ^ ((v30[v1610 ^ 0xD8] ^ 0x79) << 7) ^ (16 * (v30[v1610 ^ 0xD8] ^ 0x79)) ^ 0xDB) << 24);
    v1457 = v36;
    v41 = (char *)*(&off_1015B46D0 + (int)((v22 | 0x8005190F) + 1708829327)) - 12;
    v42 = (((v30[v1604 ^ 0x3ELL] ^ ((((v22 | 0xF) - 66) ^ v30[v1604 ^ 0x3ELL]) << 7) ^ (16 * (((v22 | 0xF) - 66) ^ v30[v1604 ^ 0x3ELL] ^ 4))) ^ 0xB) << 8) | (((v36[v1603 ^ 0x25] + 71) ^ 0x4D) << 16) | (((v36[v1602 ^ 0x26] + 71) ^ 0x1E) << 24) | (v36[v1605 ^ 0x8ELL] + 71) ^ 0x8B;
    v43 = *(_DWORD *)&v41[4 * (v31 ^ 0x2A)] ^ 0x64602CEE;
    v1576 = (v22 | 0x8005190F) + 1708828405;
    v44 = (uint64_t)*(&off_1015B46D0 + (int)((v22 | 0x8005190F) + 1708829453));
    v45 = *(_DWORD *)&v41[4 * (v35 ^ 0x20)];
    v46 = (uint64_t)*(&off_1015B46D0 + (int)((v22 | 0x8005190F) ^ 0x9A255BEF));
    v47 = v42 ^ __ROR4__(v45 ^ (16 * v45) ^ 0x8D47815A, 16) ^ (17 * v43 - ((32 * v43) & (2 * v43))) ^ __ROR4__(*(_DWORD *)(v46 + 4 * (v34 ^ 0x38u)) ^ 0xB9E35785, 8);
    v48 = __ROR4__(*(_DWORD *)(v44 + 4 * (((unsigned __int16)(v39 ^ 0xC3F5) >> 8) ^ 0xEAu)) ^ ((unsigned __int16)(v39 ^ 0xC3F5) >> 8) ^ 0x921658A1, 24);
    v49 = v40;
    v1545 = v40;
    v1555 = (((v1452[v1608 ^ 0x37] ^ (12 * v1452[v1608 ^ 0x37])) ^ 0xCD) << 8) | (((v30[v1607 ^ 0xF4] ^ ((v30[v1607 ^ 0xF4] ^ 0x79) << 7) ^ (16 * (v30[v1607 ^ 0xF4] ^ 0x79))) ^ 0x4B) << 16) | ((v30[v1606 ^ 0x87] ^ ((v30[v1606 ^ 0x87] ^ 0x79) << 7) ^ (16 * (v30[v1606 ^ 0x87] ^ 0x79)) ^ 0x1C) << 24) | ((v1460[v1609 ^ 0x96] >> 3) | (32 * v1460[v1609 ^ 0x96])) ^ 0xCC;
    v1592 = v47 ^ v48 ^ v1555;
    v50 = v47 ^ v48;
    v1562 = v47 ^ v48;
    v1569 = v39 ^ 0xECC7C3F5;
    v1573 = v40 ^ 0xB67E0A1A ^ v1592;
    v51 = v1573 ^ v39 ^ 0xECC7C3F5;
    LODWORD(v36) = v39 ^ 0xECC7C3F5;
    v1582 = v51 ^ 0x15C400CE;
    v52 = (char *)*(&off_1015B46D0 + (int)(v1576 + 855)) - 12;
    v53 = *(_DWORD *)&v52[4 * (((v51 ^ 0x15C400CE) >> 24) ^ 0xC6)] ^ ((v51 ^ 0x15C400CE) >> 24) ^ 0x78 ^ ((((v51 ^ 0x15C400CE) >> 24) ^ 0x78) - 219238213) ^ 0x3370062B;
    v54 = v51 ^ 0x69;
    v55 = BYTE2(v51) ^ 0xB6;
    v56 = *(_DWORD *)&v41[4 * (BYTE1(v51) ^ 0xA7)];
    v57 = *(_DWORD *)&v41[4 * v54] ^ 0x64602CEE;
    v58 = v57 ^ __ROR4__(v56 ^ (16 * v56) ^ 0x8D47815A, 24) ^ (16 * v57) ^ __ROR4__(*(_DWORD *)(v46 + 4 * v55) ^ 0xB9E35785, 16) ^ __ROR4__(v53, 8);
    v59 = v58 ^ v1555;
    v60 = v58 ^ v1555 ^ v36;
    v61 = (v58 ^ ((v1460[v1609 ^ 0x96] >> 3) | (32 * v1460[v1609 ^ 0x96])) ^ 0xCC ^ v36);
    v1519 = v27;
    v62 = v52;
    LODWORD(v36) = *(_DWORD *)&v41[4 * (HIBYTE(v60) ^ 0xE8)];
    v63 = __ROR4__(v36 ^ (16 * (_DWORD)v36) ^ 0x8D47815A, 8);
    v64 = v58 ^ v50;
    v65 = *(_DWORD *)&v52[4 * (v61 ^ 0xDD)] ^ __ROR4__(*(_DWORD *)(v46 + 4 * (BYTE2(v60) ^ 0x82u)) ^ 0xB9E35785, 16) ^ v63 ^ v58 ^ v50 ^ v61 ^ 0x63 ^ ((v61 ^ 0x63) - 219238213);
    v66 = __ROR4__(*(_DWORD *)&v52[4 * (BYTE1(v60) ^ 0x40)] ^ BYTE1(v60) ^ 0xFE ^ ((BYTE1(v60) ^ 0xFE) - 219238213) ^ 0x3370062B, 24);
    v1445 = v59 ^ 0x4FF0861B;
    v1558 = v59 ^ 0x887E0A1A ^ v65 ^ v66;
    v67 = v65 ^ v66;
    v1536 = v65 ^ v66;
    v68 = v64 ^ v49;
    v69 = v64 ^ v49 ^ 0xEC4A8CCF ^ v1558;
    v70 = v69 ^ v60 ^ 0x4FF0861B;
    v1551 = v69 ^ v60 ^ 0xD5808030;
    v71 = *(_DWORD *)&v62[4 * (BYTE1(v70) ^ 0xC0)] ^ BYTE1(v70) ^ 0x7E ^ ((BYTE1(v70) ^ 0x7E) - 219238213) ^ 0x3370062B;
    v72 = *(_DWORD *)&v41[4 * (BYTE2(v70) ^ 0xD7)];
    v73 = *(_DWORD *)(v46
                    + 4
                    * ((v64 ^ v49) ^ 0xCF ^ v1558 ^ v60 ^ 0x42u)) ^ __ROR4__(v72 ^ (16 * v72) ^ 0x8D47815A, 16) ^ __ROR4__(*(_DWORD *)(v44 + 4 * (HIBYTE(v1551) ^ 0xEA)) ^ HIBYTE(v1551) ^ 0x921658A1, 8) ^ __ROR4__(v71, 24);
    v74 = v73 ^ v1445;
    v1477 = v73 ^ v1445 ^ v69;
    v1515 = v73 ^ v1445;
    v1530 = v69;
    v75 = v1477 ^ v1551 ^ 0xFC9351AE;
    v76 = 232 * (v75 / 0x52FDBBE8);
    if (v75 % 0x52FDBBE8)
      LOBYTE(v76) = v1477 ^ v1551 ^ 0xAE;
    v1525 = v73 ^ v67;
    v1431 = *(_DWORD *)&v62[4 * (v76 ^ 0xC6)] ^ __ROR4__(*(_DWORD *)(v46+ 4* (((unsigned __int16)(v1477 ^ v1551) >> 8) ^ 0x23u)) ^ 0xB9E35785, 24) ^ __ROR4__(*(_DWORD *)&v41[4* (((v1477 ^ v1551) >> 24) ^ 0x5B)] ^ (16 * *(_DWORD *)&v41[4 * (((v1477 ^ v1551) >> 24) ^ 0x5B)]) ^ 0x8D47815A, 8) ^ v73 ^ v67 ^ __ROR4__(*(_DWORD *)(v44 + 4 * (BYTE2(v75) ^ 0xEAu)) ^ BYTE2(v75) ^ 0x921658A1, 16) ^ v76 ^ 0x78 ^ ((v76 ^ 0x78) - 219238213);
    v77 = v1431 ^ 0x3B1DDDAF ^ v69;
    v1521 = v77 ^ 0x3370062B;
    v78 = v77 ^ 0x3370062B ^ v75;
    v79 = *(_DWORD *)&v41[4 * (BYTE2(v78) ^ 0xD7)];
    v80 = v78 ^ 0x7570062B;
    v81 = *(_DWORD *)&v41[4 * (HIBYTE(v78) ^ 0xD2)];
    v82 = *(_DWORD *)(v46 + 4 * (v77 ^ 0x2B ^ v75 ^ 0x59u)) ^ __ROR4__(v79 ^ (16 * v79) ^ 0x8D47815A, 16) ^ __ROR4__(v81 ^ (16 * v81) ^ 0x8D47815A, 8);
    HIDWORD(v83) = *(_DWORD *)&v62[4 * (BYTE1(v80) ^ 0xC6)] ^ BYTE1(v80) ^ 0x78 ^ ((BYTE1(v80) ^ 0x78) - 219238213) ^ 0x3370062B;
    LODWORD(v83) = HIDWORD(v83);
    v84 = (v82 ^ v1431 ^ 0x3B1DDDAF ^ 0xBD9351AE ^ -(v82 ^ v1431 ^ 0x3B1DDDAF ^ 0xBD9351AE) ^ ((v83 >> 24)
                                                                                             + (v82 ^ v1431 ^ 0x3B1DDDAF ^ (v83 >> 24) ^ 0x426CAE51)
                                                                                             + 1))
        + (v83 >> 24);
    v1501 = v1431 ^ 0x3B1DDDAF ^ v74;
    v1511 = v84 ^ v1501 ^ 0x66E35785;
    v85 = v77 ^ 0x46000000 ^ v1511;
    v1491 = v80;
    v1507 = v85 ^ v80;
    v1504 = v85;
    v86 = v85 ^ v80 ^ 0xDC70062B;
    v87 = *(_DWORD *)(v44 + 4 * ((v77 ^ v1511 ^ v80) ^ 0xC1u)) ^ __ROR4__(*(_DWORD *)(v46+ 4* (((v85 ^ v80) >> 16) ^ 2u)) ^ 0xB9E35785, 16) ^ v84 ^ (v77 ^ v1511 ^ v80) ^ 0x2B ^ __ROR4__(*(_DWORD *)(v44 + 4 * (HIBYTE(v86) ^ 0xEA)) ^ HIBYTE(v86) ^ 0x921658A1, 8) ^ __ROR4__(*(_DWORD *)(v44 + 4 * (BYTE1(v86) ^ 0xEAu)) ^ BYTE1(v86) ^ 0x921658A1, 24) ^ 0xE304C38F;
    v88 = v87 ^ v84 ^ v1501;
    v1498 = v87;
    v89 = v88 ^ 0xBA9351AE ^ v80;
    v1495 = v88 ^ 0xBA9351AE;
    v90 = (char *)*(&off_1015B46D0 + (int)(v1576 + 855)) - 12;
    v1557 = v20;
    v91 = v87 ^ v88 ^ 0xAE ^ v1491 ^ 0x56 ^ ((v88 ^ 0xAE ^ v1491 ^ 0x56)
                                                                             - 219238213) ^ *(_DWORD *)&v62[4 * (v88 ^ 0xAE ^ v1491 ^ 0xE8)] ^ __ROR4__(*(_DWORD *)(v44 + 4 * (((v89 ^ 0x42129B2E) >> 24) ^ 0xEA)) ^ ((v89 ^ 0x42129B2E) >> 24) ^ 0x921658A1, 8) ^ __ROR4__(*(_DWORD *)(v44 + 4 * (((v89 ^ 0x42129B2E) >> 16) ^ 0xEAu)) ^ ((v89 ^ 0x42129B2E) >> 16) ^ 0x921658A1, 16);
    LODWORD(v83) = __ROR4__(*(_DWORD *)&v62[4 * (((unsigned __int16)(v89 ^ 0x9B2E) >> 8) ^ 0xC6)] ^ ((unsigned __int16)(v89 ^ 0x9B2E) >> 8) ^ 0x78 ^ ((((unsigned __int16)(v89 ^ 0x9B2E) >> 8) ^ 0x78) - 219238213) ^ 0x3370062B, 24);
    v92 = v91 ^ v83 ^ v88;
    v93 = v91 ^ v83;
    v94 = v88 ^ 0xBA9351AE ^ v85;
    v95 = v92 ^ 0x1BE35785 ^ v94;
    v1489 = v92 ^ 0x1BE35785;
    v96 = v95 ^ v89 ^ 0x42129B2E;
    v1360 = v89 ^ 0x42129B2E;
    v97 = ((v95 ^ v1360) >> 24) ^ 0xE6 ^ ((((v95 ^ v1360) >> 24) ^ 0xE6) - 219238213) ^ *(_DWORD *)&v62[4 * (((v95 ^ v1360) >> 24) ^ 0x58)];
    v98 = v96 ^ 0x9E629D05;
    v99 = *(_DWORD *)&v62[4 * (BYTE2(v96) ^ 0xA4)] ^ BYTE2(v96) ^ 0x1A ^ ((BYTE2(v96) ^ 0x1A) - 219238213) ^ 0x3370062B;
    v100 = *(_DWORD *)&v41[4
                         * ((((((v95 ^ v89 ^ 0x2E) ^ 0xFFFFFFB4)
                             + ((v95 ^ v89 ^ 0x2E) ^ 5)
                             + 1) ^ 0xFFFFFFFC)
                           + ((v95 ^ v89 ^ 0x2E) ^ 5)) ^ 0xE9)];
    v1484 = v95 ^ 0xDC000000;
    v101 = *(_DWORD *)&v41[4 * (BYTE1(v96) ^ 0x3A)];
    v102 = v100 ^ 0x64602CEE ^ (16 * (v100 ^ 0x64602CEE)) ^ __ROR4__(v101 ^ (16 * v101) ^ 0x8D47815A, 24) ^ v93 ^ __ROR4__(v99, 16) ^ __ROR4__((v97 ^ -v97 ^ ((v97 ^ 0xCC8FF9D4) + 862979628)) + 862979627, 8);
    v103 = v102 ^ v92 ^ 0x1BE35785;
    v104 = v103 ^ 0xE3629D05 ^ v1484;
    v1449 = v98;
    v1481 = v104 ^ v98 ^ 0x8E47FE51;
    v105 = *(_DWORD *)&v62[4 * (BYTE2(v1481) ^ 0xC6)] ^ BYTE2(v1481) ^ 0x78 ^ ((BYTE2(v1481) ^ 0x78) - 219238213) ^ 0x3370062B;
    v106 = *(_DWORD *)(v44 + 4 * ((v104 ^ v98) ^ 0xBBu)) ^ __ROR4__(*(_DWORD *)(v46+ 4* (((unsigned __int16)(v104 ^ v98) >> 8) ^ 0x8Cu)) ^ 0xB9E35785, 24) ^ v102 ^ (v104 ^ v98) ^ 0x51 ^ __ROR4__(*(_DWORD *)(v44 + 4 * (HIBYTE(v1481) ^ 0xEA)) ^ HIBYTE(v1481) ^ 0x921658A1, 8);
    LODWORD(v83) = __ROR4__(v105, 16);
    v1329 = v42 ^ 0x570414CF;
    v107 = v106 ^ v83 ^ v103 ^ 0xE3629D05;
    v108 = v107 ^ 0x2351A6F0 ^ v104;
    v1566 = (v93 ^ 0x9B5C716C ^ v108) + 825385027;
    v1408 = v1477 ^ 0x27A63225;
    v1338 = v1592 ^ 0xEA666397;
    v109 = v106 ^ v83 ^ 0xD2F0CDB1;
    v1478 = v109;
    v1420 = v104 ^ 0xFEB1D6F1;
    v1440 = (v104 ^ 0xFEB1D6F1) - v1408 - 384922890;
    v1593 = v107 ^ 0x1ED5AEE5;
    v1463 = v94 ^ 0x36907DB3;
    v1435 = (v92 ^ 0x2EAF9B59 ^ v104) + 514296385;
    LODWORD(v83) = __ROR4__(__ROR4__(v68 ^ 0xF98E8C24, 10) ^ 0x7679507C, 22);
    v1345 = v1431 ^ 0x3CC36147;
    v1471 = v108 ^ 0xB3C3F644;
    v110 = (v108 ^ 0xB3C3F644) - (v1431 ^ 0x3CC36147) - 463761884;
    v1319 = v84 ^ 0x9D9053E4;
    v1428 = ((2 * (v93 ^ v60 ^ 0x3C62E669)) & 0xE2EDEA2E ^ 0x402D0A00) + (v93 ^ v60 ^ 0x3C62E669 ^ 0xD9E9723F);
    v1432 = ((v108 ^ 0xB3C3F644) + (v94 ^ 0x36907DB3)) ^ 0x6EF4F200;
    v1416 = v107 ^ 0x2351A6F0 ^ v98;
    v1382 = v103 ^ 0x5FB1D6F1;
    v1374 = v102 ^ 0x5FB1D6F1;
    v1424 = ((v108 ^ 0xB3C3F644) - (v102 ^ 0x5FB1D6F1)) ^ 0xBB034A7A;
    v1323 = v64 ^ 0x679EF2E5;
    v111 = (v1555 ^ 0x235F7D81) + 284766159 + (v64 ^ 0x8A1CEC73);
    v1071 = (v1555 ^ 0x235F7D81) - (v84 ^ 0x9D9053E4) + 2053914055;
    v1401 = v110 ^ v1071 ^ v83 ^ 0x83179140;
    v1393 = v110 ^ v1071 ^ v60 ^ 0x3C62E669;
    v1389 = v110 ^ v1071 ^ v64 ^ 0x8A1CEC73;
    v1378 = v1445 ^ 0x73926072 ^ v110 ^ v1071;
    v112 = v1460[v1607 ^ 0x33];
    v1073 = (v83 ^ 0x83179140) + 1649603906 + v109;
    v1066 = ((v103 ^ 0x5FB1D6F1) + (v1555 ^ 0x235F7D81)) ^ 0x846ECF50;
    v1590 = v1073 ^ v1066;
    v1365 = v1073 ^ v1066 ^ v89 ^ 0x42129B2E;
    v113 = v1452[v1616 ^ 0xCLL] ^ (12 * v1452[v1616 ^ 0xCLL]);
    v1092 = v30;
    v114 = (v1460[v1617 ^ 1] >> 3) | (32 * v1460[v1617 ^ 1]);
    v115 = v1457[v1614 ^ 0xACLL] + 71;
    v116 = (v114 ^ 0x75 | ((v115 ^ 0x6D) << 24) | (((v1457[v1615 ^ 0x9BLL] + 71) ^ 0x9E) << 16) | ((v113 ^ 0x76) << 8)) ^ 0xECC7C3F5;
    v117 = *(_DWORD *)&v41[4 * (v113 ^ 0x12)];
    v118 = *(_DWORD *)(v46 + 4 * (v114 ^ 0xF2u)) ^ ((v1452[v1605 ^ 0x67] ^ ((((v1457[v1604 ^ 0x96] + 71) ^ 0xBB) << 8) | (4 * ((3 * v1452[v1605 ^ 0x67]) & 0x3F))) ^ 0xC0) & 0xFF00FFFF | ((v30[v1602 ^ 0x7BLL] ^ ((v30[v1602 ^ 0x7BLL] ^ 0x79) << 7) ^ (16 * (v30[v1602 ^ 0x7BLL] ^ 0x79)) ^ 0xC2) << 24) | (((v1452[v1603 ^ 0xD2] ^ (12 * v1452[v1603 ^ 0xD2])) ^ 0x4E) << 16)) ^ __ROR4__(v117 ^ (16 * v117) ^ 0x8D47815A, 24) ^ __ROR4__(*(_DWORD *)(v46 + 4 * (v115 ^ 0xF3u)) ^ 0xB9E35785, 8) ^ __ROR4__(*(_DWORD *)&v90[4 * (BYTE2(v116) ^ 0xC6)] ^ BYTE2(v116) ^ 0x78 ^ ((BYTE2(v116) ^ 0x78) - 219238213) ^ 0x3370062B, 16) ^ 0xD1;
    v119 = v118 ^ ((v1452[v1609 ^ 0xFELL] ^ (12 * v1452[v1609 ^ 0xFELL])) ^ 0xDE | ((((v112 >> 3) | (32 * v112)) ^ 0x7C) << 16) | (((v30[v1608 ^ 0x5ELL] ^ ((v30[v1608 ^ 0x5ELL] ^ 0x79) << 7) ^ (16 * (v30[v1608 ^ 0x5ELL] ^ 0x79))) ^ 0xE0) << 8) | ((v30[v1606 ^ 0x54] ^ ((v30[v1606 ^ 0x54] ^ 0x79) << 7) ^ (16 * (v30[v1606 ^ 0x54] ^ 0x79)) ^ 1) << 24));
    v120 = ((((v30[v1612 ^ 0x38] ^ ((v30[v1612 ^ 0x38] ^ 0x79) << 7) ^ (16 * (v30[v1612 ^ 0x38] ^ 0x79))) ^ 0xA2) << 8) | (((v1452[v1611 ^ 0x7CLL] ^ (12 * v1452[v1611 ^ 0x7CLL])) ^ 0x72) << 16) | ((((v1460[v1610 ^ 0x2ALL] >> 3) | (32 * v1460[v1610 ^ 0x2ALL])) ^ 0x21) << 24) | ((v1460[v1613 ^ 0x1BLL] >> 3) | (32 * v1460[v1613 ^ 0x1BLL]))) ^ 0x7B ^ v119;
    v121 = v120 ^ v116;
    v122 = *(_DWORD *)&v90[4 * (BYTE2(v121) ^ 0xBA)] ^ BYTE2(v121) ^ 4 ^ ((BYTE2(v121) ^ 4) - 219238213) ^ 0x3370062B;
    v123 = v121 ^ 0xB57C3E5F;
    v124 = *(_DWORD *)(v44 + 4 * (((unsigned __int16)(v121 ^ 0x3E5F) >> 8) ^ 0xEAu)) ^ ((unsigned __int16)(v121 ^ 0x3E5F) >> 8) ^ 0x921658A1;
    v125 = *(_DWORD *)(v46 + 4 * (HIBYTE(v121) ^ 0xC7)) ^ 0xB9E35785;
    v126 = *(_DWORD *)&v41[4 * (v121 ^ 0xF8)] ^ 0x64602CEE;
    v127 = v126 ^ __ROR4__(v125, 8) ^ (16 * v126) ^ v118 ^ __ROR4__(v124, 24) ^ __ROR4__(v122, 16) ^ 0x99DAF008;
    v128 = v127 ^ v119;
    v129 = v128 ^ v120;
    v130 = v128 ^ v120 ^ v123;
    v131 = v130 ^ 0xED819946;
    v130 ^= 0x6356484Cu;
    v132 = *(_DWORD *)(v44 + 4 * (v131 ^ 0xE0u)) ^ __ROR4__(*(_DWORD *)(v46 + 4 * (BYTE2(v131) ^ 0xA5u)) ^ 0xB9E35785, 16) ^ v127 ^ v130 ^ __ROR4__(*(_DWORD *)(v44 + 4 * (HIBYTE(v130) ^ 0xEA)) ^ HIBYTE(v130) ^ 0x921658A1, 8) ^ __ROR4__(*(_DWORD *)&v90[4 * (BYTE1(v131) ^ 0x17)] ^ BYTE1(v131) ^ 0xA9 ^ ((BYTE1(v131) ^ 0xA9) - 219238213) ^ 0x3370062B, 24) ^ 0x73841079;
    v129 ^= 0x5D56484Cu;
    v133 = v128 ^ 0xD62A7613 ^ v132;
    v134 = v129 ^ v130 ^ v133;
    v135 = v134 ^ 0x3E000000;
    v136 = (((v134 ^ 0x3E000000u) >> 24) ^ -((v134 ^ 0x3E000000u) >> 24) ^ ((((v134 ^ 0x3E000000u) >> 24) ^ 0xFFFFFFC0)
                                                                          + 64))
         + 63;
    v137 = *(_DWORD *)&v90[4 * (BYTE1(v134) ^ 0xC6)] ^ BYTE1(v134) ^ 0x78 ^ ((BYTE1(v134) ^ 0x78) - 219238213) ^ 0x3370062B;
    v138 = *(_DWORD *)(v46 + 4 * (BYTE2(v134) ^ 0x72u)) ^ 0xB9E35785;
    v139 = *(_DWORD *)&v41[4 * (v134 ^ 0xA7)] ^ 0x64602CEE;
    v140 = v139 ^ __ROR4__(v138, 16) ^ (16 * v139) ^ v132 ^ __ROR4__(v137, 24) ^ __ROR4__(*(_DWORD *)(v44 + 4 * (v136 ^ 0xD5)) ^ v136 ^ 0x9216589E, 8);
    v141 = v129 ^ v140;
    v142 = *(_DWORD *)&v41[4 * (((v141 ^ v135) >> 16) ^ 0x82)];
    v143 = *(_DWORD *)&v41[4 * ((v141 ^ v135) ^ 0xF3)] ^ 0x64602CEE;
    v144 = v143 ^ __ROR4__(v142 ^ (16 * v142) ^ 0x8D47815A, 16) ^ (16 * v143) ^ __ROR4__(*(_DWORD *)(v46+ 4* (((unsigned __int16)(v141 ^ v135) >> 8) ^ 0x11u)) ^ 0xB9E35785, 24) ^ __ROR4__(*(_DWORD *)&v90[4 * (((v141 ^ v135) >> 24) ^ 0x88)] ^ ((v141 ^ v135) >> 24) ^ 0x36 ^ ((((v141 ^ v135) >> 24) ^ 0x36) - 219238213) ^ 0x3370062B, 8);
    v145 = v133 ^ 0xAF256354 ^ v144;
    v146 = v145 ^ v135;
    v147 = *(_DWORD *)&v41[4 * (((unsigned __int16)(v146 ^ 0x6354) >> 8) ^ 0xC4)];
    v1598 = v146 ^ 0xEF000000;
    v148 = v141 ^ 0x4E256354 ^ v145;
    v1486 = *(_DWORD *)(v44 + 4 * (v146 ^ 0xEAu)) ^ __ROR4__(v147 ^ (16 * v147) ^ 0x8D47815A, 24) ^ v140 ^ v144 ^ v146 ^ __ROR4__(*(_DWORD *)(v44 + 4 * (BYTE2(v146) ^ 0xEAu)) ^ BYTE2(v146) ^ 0x921658A1, 16) ^ __ROR4__(*(_DWORD *)&v90[4 * (((v146 ^ 0x4E256354u) >> 24) ^ 0x67)] ^ ((v146 ^ 0x4E256354u) >> 24) ^ 0xD9 ^ ((((v146 ^ 0x4E256354u) >> 24) ^ 0xD9) - 219238213) ^ 0x3370062B, 8) ^ 0x4C21A0DB;
    v149 = v1486 ^ v145;
    v1350 = v1486 ^ v145;
    v1370 = v1486 ^ v145 ^ v148;
    v150 = v1370 ^ v146 ^ 0xEF000000;
    v1282 = v150 ^ 0x3637F87A;
    v151 = ((v150 ^ 0x637F87A) >> 16);
    v152 = v1486 ^ __ROR4__(*(_DWORD *)(v46 + 4 * (HIBYTE(v150) ^ 0x44)) ^ 0xB9E35785, 8);
    LODWORD(v83) = __ROR4__(*(_DWORD *)(v44 + 4 * (v151 ^ 0xEAu)) ^ v151 ^ 0x921658A1, 16);
    v153 = *(_DWORD *)&v41[4 * ((v1370 ^ v146) ^ 0xDD)] ^ 0x64602CEE;
    v154 = ((v153 ^ (16 * v153) ^ -(v153 ^ (16 * v153)) ^ ((v152 ^ v83) - (v152 ^ v83 ^ v153 ^ (16 * v153))))
          + (v152 ^ v83)) ^ __ROR4__(*(_DWORD *)(v46+ 4* (((unsigned __int16)(v1370 ^ v146 ^ 0xF87A) >> 8) ^ 0x72u)) ^ 0xB9E35785, 24);
    v155 = v154 ^ v148;
    v156 = *(_DWORD *)&v41[4 * (((unsigned __int16)(v155 ^ v1282) >> 8) ^ 0x3C)];
    v1474 = v155 ^ v1282 ^ 0x45129B2E;
    v1597 = v90;
    v1299 = v46;
    v1276 = v154;
    v1588 = *(_DWORD *)&v90[4 * ((v155 ^ v1282) ^ 0xE8)] ^ __ROR4__(v156 ^ (16 * v156) ^ 0x8D47815A, 24) ^ __ROR4__(*(_DWORD *)(v46+ 4* ((BYTE2(v155) ^ BYTE2(v1282)) ^ 0x60u)) ^ 0xB9E35785, 16) ^ v154 ^ (v155 ^ v1282) ^ 0x56 ^ (((v155 ^ v1282) ^ 0x56) - 219238213) ^ __ROR4__(*(_DWORD *)(v44 + 4 * (HIBYTE(v1474) ^ 0xEA)) ^ HIBYTE(v1474) ^ 0x921658A1, 8) ^ 0xB629D05;
    v1245 = v155 ^ 0xD937F87A;
    v1242 = v149 ^ v154 ^ 0x30000000;
    v157 = v1588 ^ v1242 ^ v155 ^ 0xD937F87A;
    v158 = v157 ^ v1474;
    v159 = v157;
    v1265 = v157;
    v160 = *(_DWORD *)&v41[4 * (((v157 ^ v1474) >> 16) ^ 0xA7)];
    v161 = *(_DWORD *)&v41[4 * (HIBYTE(v158) ^ 0x78)];
    v162 = *(_DWORD *)&v41[4 * (BYTE1(v158) ^ 0xA7)];
    v1252 = v158 ^ 0xDF000000;
    v1468 = *(_DWORD *)&v90[4 * (v158 ^ 0xC6)] ^ __ROR4__(v160 ^ (16 * v160) ^ 0x8D47815A, 16) ^ __ROR4__(v161 ^ (16 * v161) ^ 0x8D47815A, 8) ^ __ROR4__(v162 ^ (16 * v162) ^ 0x8D47815A, 24) ^ v158 ^ 0x78 ^ ((v158 ^ 0x78) - 219238213);
    v1249 = v1468 ^ v1242;
    v1254 = v1468 ^ v1242 ^ v159;
    v1294 = v1254 ^ v158;
    v1585 = v1254 ^ v158 ^ 0xDF000000 ^ 0xCC55657F;
    v1397 = *(_DWORD *)(v46 + 4 * (((v1254 ^ v158 ^ 0xDF000000) >> 16) ^ 0x27u));
    v1412 = *(_DWORD *)(v44 + 4 * (((unsigned __int16)(v1254 ^ v158 ^ 0x657F) >> 8) ^ 0xEAu)) ^ ((unsigned __int16)(v1254 ^ v158 ^ 0x657F) >> 8) ^ 0x921658A1;
    v163 = v110 ^ v111 ^ v1432;
    v164 = v163 ^ v1329;
    v165 = v163 ^ v1569 ^ 0xFD8A98CE;
    v1068 = v111;
    v166 = v1432 ^ v111 ^ v110;
    v167 = v166 ^ v1545 ^ 0xE84E9800;
    v1063 = (v93 ^ 0xEAE470C2 ^ v1416) - 1910950179;
    v1054 = (v60 ^ 0x3C62E669) + 1548775227 + (v107 ^ 0x1ED5AEE5);
    v168 = v1063 ^ v1054;
    v1238 = v1063 ^ v1054;
    v169 = v110 ^ v1428;
    v1570 = v110 ^ v1428 ^ 0xDBAEBAC3;
    v170 = v1570 ^ v1491;
    v171 = (v1570 ^ v1491)
         - ((*(&off_1015B46D0 + (int)(v1579 ^ 0x9A255ACB)) - 8) ^ v1365 ^ 0x74AA2D5F ^ v1063 ^ v1054 ^ v1319);
    if ((v171 & 0x8000000) != 0)
      v172 = -134217728;
    else
      v172 = 0x8000000;
    if ((v171 & 1) != 0)
      v173 = v166 ^ v1555 ^ 0x235F7D81;
    else
      v173 = v164;
    v1492 = v173;
    if ((v171 & 1) == 0)
      v164 = v165;
    v1546 = v164;
    if ((v171 & 1) == 0)
      v165 = v167;
    v1466 = v165;
    if ((v171 & 1) != 0)
      v174 = v167;
    else
      v174 = v166 ^ v1555 ^ 0x235F7D81;
    v1314 = v174;
    v175 = v1329 - 449740433 + v1338;
    v176 = v1573 ^ 0x49DC6943 ^ v1424 ^ v1440;
    if ((v171 & 1) != 0)
      v177 = v1424 ^ v1440 ^ v1338;
    else
      v177 = v1562 ^ 0x34B386D8 ^ v1424 ^ v1440;
    v1288 = v177;
    if ((v171 & 1) != 0)
      v178 = v1562 ^ 0x34B386D8 ^ v1424 ^ v1440;
    else
      v178 = v1582 ^ 0x5C18698D ^ v1424 ^ v1440;
    v1455 = v178;
    if ((v171 & 1) != 0)
      v179 = v1582 ^ 0x5C18698D ^ v1424 ^ v1440;
    else
      v179 = v1573 ^ 0x49DC6943 ^ v1424 ^ v1440;
    v1270 = v179;
    if ((v171 & 1) == 0)
      v176 = v1424 ^ v1440 ^ v1338;
    v1357 = v176;
    v1038 = v1323 ^ v1593;
    v180 = v110 ^ v1323 ^ v1593;
    v181 = v180 ^ 0xE2367E54 ^ v1558;
    v182 = v180 ^ 0xE2367E54 ^ v1530;
    v183 = v1551 ^ 0x7846787F ^ v180;
    v184 = v1536 ^ 0x25B8F255 ^ v180;
    v1051 = v1329 - 449740433 + v1338;
    v1552 = v1435 ^ v175 ^ v1408;
    v1559 = v1525 ^ 0xE028BE24 ^ v1435 ^ v175;
    v1563 = v1515 ^ 0xBDD6340E ^ v1435 ^ v175;
    v185 = v75 ^ 0xDB35638B ^ v1435 ^ v175;
    v186 = v169 ^ v1345;
    if ((v171 & 1) != 0)
      v187 = v170;
    else
      v187 = v1521 ^ 0xAEDEBCE8 ^ v169;
    if ((v171 & 1) != 0)
      v188 = v169 ^ v1345;
    else
      v188 = v170;
    v1346 = v188;
    if ((v171 & 1) != 0)
      v189 = v1501 ^ 0x613DEB6D ^ v169;
    else
      v189 = v186;
    if ((v171 & 1) != 0)
      v190 = v1521 ^ 0xAEDEBCE8 ^ v169;
    else
      v190 = v1501 ^ 0x613DEB6D ^ v169;
    v1339 = v190;
    v191 = v1360 ^ v1507;
    v192 = v168 ^ 0x41E055CF ^ v1504;
    v193 = v168 ^ 0x41E055CF ^ v1511;
    if ((v171 & 1) != 0)
      v194 = v1063 ^ v1054 ^ v1319;
    else
      v194 = v168 ^ 0x41E055CF ^ v1507;
    v1540 = v194;
    if ((v171 & 1) != 0)
      v195 = v168 ^ 0x41E055CF ^ v1507;
    else
      v195 = v168 ^ 0x41E055CF ^ v1504;
    if ((v171 & 1) != 0)
      v196 = v193;
    else
      v196 = v1063 ^ v1054 ^ v1319;
    if ((v171 & 1) != 0)
      v197 = v192;
    else
      v197 = v193;
    v1537 = v197;
    v1583 = v1432 ^ v1424;
    v198 = v1432 ^ v1424 ^ 0xCBFD1A2D;
    v1531 = v198;
    if ((v171 & 1) != 0)
      v199 = v198 ^ v1449;
    else
      v199 = v1484 ^ 0x899F8728 ^ v1432 ^ v1424;
    v1512 = v199;
    if ((v171 & 1) != 0)
      v200 = v93 ^ 0x289F8728 ^ v1432 ^ v1424;
    else
      v200 = v198 ^ v1449;
    v1526 = v200;
    if ((v171 & 1) != 0)
      v201 = v1484 ^ 0x899F8728 ^ v1432 ^ v1424;
    else
      v201 = v198 ^ v1489;
    v1522 = v201;
    if ((v171 & 1) != 0)
      v202 = v198 ^ v1489;
    else
      v202 = v93 ^ 0x289F8728 ^ v1432 ^ v1424;
    v1508 = v202;
    v203 = v1566 ^ v1428;
    v204 = v1566 ^ v1428 ^ v1382;
    v205 = (v172 + v171) ^ 0x8000000;
    v1574 = v1566 ^ v1428 ^ 0x70F628A0;
    if ((v171 & 1) != 0)
      v206 = v1566 ^ v1428 ^ v1420;
    else
      v206 = v1566 ^ v1428 ^ v1382;
    v1516 = v206;
    if ((v171 & 1) != 0)
      v207 = v205 + (v1566 ^ v1428 ^ 0x70F628A0 ^ v1481) - v171;
    else
      v207 = v1566 ^ v1428 ^ v1420;
    if ((v171 & 1) != 0)
      v208 = v1566 ^ v1428 ^ v1374;
    else
      v208 = v205 + (v1566 ^ v1428 ^ 0x70F628A0 ^ v1481) - v171;
    if ((v171 & 1) == 0)
      v204 = v1566 ^ v1428 ^ v1374;
    v1164 = v191;
    v1156 = v191 ^ 0x3AF6EF9D;
    v1556 = v110;
    v1163 = v1566 ^ v191 ^ 0x3AF6EF9D;
    v209 = v110 ^ v1163;
    v210 = v110 ^ v1163 ^ v1416 ^ v171 ^ 0x3D840815 ^ v205;
    v211 = v1378;
    if ((v171 & 1) != 0)
      v212 = v1378;
    else
      v212 = v1389;
    if ((v171 & 1) != 0)
      v213 = v1389;
    else
      v213 = v1393;
    if ((v171 & 1) != 0)
      v214 = v1393;
    else
      v214 = v1401;
    if ((v171 & 1) != 0)
    {
      v211 = v1401;
      v215 = v182;
    }
    else
    {
      v215 = v181;
    }
    v1334 = v215;
    if ((v171 & 1) != 0)
    {
      v216 = v183;
    }
    else
    {
      v181 = v184;
      v216 = v182;
    }
    if ((v171 & 1) != 0)
      v217 = v184;
    else
      v217 = v183;
    v1330 = v217;
    if ((v171 & 1) != 0)
      v218 = v1590 ^ v1463;
    else
      v218 = v1590 ^ 0xEAE07B98 ^ v1495;
    if ((v171 & 1) != 0)
      v219 = v1590 ^ 0xEAE07B98 ^ v1495;
    else
      v219 = v1590 ^ 0xEAE07B98 ^ v1498;
    v1324 = v219;
    if ((v171 & 1) != 0)
      v220 = v1590 ^ 0xEAE07B98 ^ v1498;
    else
      v220 = v1365 ^ 0xA8F2E0B6;
    if ((v171 & 1) != 0)
      v221 = v1365 ^ 0xA8F2E0B6;
    else
      v221 = v1590 ^ v1463;
    v1320 = v221;
    v222 = v209 ^ v1593;
    if ((v171 & 1) != 0)
      v223 = v209 ^ v1593;
    else
      v223 = v209 ^ v1478;
    if ((v171 & 1) != 0)
      v222 = v209 ^ v1471;
    v1310 = v222;
    if ((v171 & 1) != 0)
      v224 = v210;
    else
      v224 = v209 ^ v1471;
    if ((v171 & 1) != 0)
      v225 = v209 ^ v1478;
    else
      v225 = v210;
    v1305 = v225;
    v226 = v1559;
    if ((v171 & 1) != 0)
      v227 = v1563;
    else
      v227 = v1559;
    if ((v171 & 1) != 0)
    {
      v228 = v1552;
    }
    else
    {
      v226 = v185;
      v185 = v1552;
      v228 = v1563;
    }
    v229 = (v171 & 2) == 0;
    if ((v171 & 2) != 0)
      v230 = v195;
    else
      v230 = v196;
    v1553 = v230;
    if ((v171 & 2) != 0)
      v231 = v196;
    else
      v231 = v195;
    v1010 = v231;
    if ((v171 & 2) != 0)
      v232 = v187;
    else
      v232 = v189;
    v1421 = v232;
    if ((v171 & 2) != 0)
      v233 = v189;
    else
      v233 = v187;
    v1017 = v233;
    v1020 = v171;
    if ((v171 & 2) != 0)
      v234 = v207;
    else
      v234 = v204;
    if ((v171 & 2) != 0)
      v207 = v204;
    v1014 = v207;
    if ((v171 & 2) != 0)
      v235 = v224;
    else
      v235 = v223;
    if ((v171 & 2) == 0)
      v223 = v224;
    v1165 = v223;
    v236 = v1468 ^ v1588;
    HIDWORD(v238) = (-1176283259 - (v1397 & 0x80)) ^ v1397 & 0xFFFFFF7F;
    LODWORD(v238) = HIDWORD(v238);
    v237 = v238 >> 19;
    v239 = __PAIR64__(v1412, __ROR4__(v1468 ^ v1588 ^ *(_DWORD *)(v1299 + 4 * (v1294 ^ 0xDu)) ^ __ROR4__(*(_DWORD *)&v1597[4* (HIBYTE(v1585) ^ 0xC6)] ^ HIBYTE(v1585) ^ 0x78 ^ ((HIBYTE(v1585) ^ 0x78) - 219238213) ^ 0x3370062B, 8), 3));
    v240 = v237 ^ v239 ^ 0x8741A055;
    LODWORD(v239) = v1412;
    v241 = v239 >> 24;
    HIDWORD(v239) = v240;
    LODWORD(v239) = v240;
    v1594 = (v241 ^ -v241 ^ ((v241 ^ 0xB261ACFD ^ (v239 >> 29)) + ((v239 >> 29) ^ 0x4D9E5302) + 1))
          + ((v239 >> 29) ^ 0x4D9E5302);
    v242 = v1486 ^ v1238;
    v243 = v1474 ^ v1590;
    v244 = (*(&off_1015B46D0 + (int)(v1579 ^ 0x9A255ACB)) - 8) ^ v1474 ^ v1590 ^ v1486 ^ v1238;
    v245 = v244 ^ 0x3554B28;
    v246 = v244 ^ 0x20F2793E;
    if ((v171 & 2) != 0)
      v247 = v1546;
    else
      v247 = v1314;
    v1564 = v247;
    if ((v171 & 2) != 0)
      v248 = v1314;
    else
      v248 = v1546;
    v1413 = v248;
    v249 = v1288;
    if ((v171 & 2) != 0)
      v250 = v1270;
    else
      v250 = v1288;
    v1479 = v250;
    if (v229)
      v249 = v1270;
    v1390 = v249;
    if (v229)
      v251 = v181;
    else
      v251 = v216;
    v1560 = v251;
    if (v229)
      v252 = v216;
    else
      v252 = v181;
    v1464 = v252;
    if (v229)
      v253 = v227;
    else
      v253 = v185;
    v1402 = v253;
    if (v229)
      v254 = v185;
    else
      v254 = v227;
    v1547 = v254;
    if (v229)
      v255 = v1512;
    else
      v255 = v1508;
    v1409 = v255;
    if (v229)
      v256 = v1508;
    else
      v256 = v1512;
    v1482 = v256;
    if (v229)
      v257 = v208;
    else
      v257 = v1516;
    v1315 = v257;
    if (v229)
      v258 = v1516;
    else
      v258 = v208;
    v1405 = v258;
    v259 = v1492;
    if (v229)
      v260 = v1492;
    else
      v260 = v1466;
    if (v229)
      v259 = v1466;
    v1472 = v259;
    if (v229)
      v261 = v211;
    else
      v261 = v213;
    v1487 = v261;
    if (v229)
      v262 = v213;
    else
      v262 = v211;
    v1450 = v262;
    if (v229)
      v263 = v212;
    else
      v263 = v214;
    if (v229)
      v264 = v214;
    else
      v264 = v212;
    v1398 = v264;
    if (v229)
      v265 = v228;
    else
      v265 = v226;
    v1008 = v265;
    if (v229)
      v266 = v226;
    else
      v266 = v228;
    v1394 = v266;
    v267 = v1540;
    if (v229)
      v268 = v1540;
    else
      v268 = v1537;
    v1475 = v268;
    if (v229)
      v267 = v1537;
    v1006 = v267;
    if (v229)
      v269 = v218;
    else
      v269 = v220;
    v1300 = v269;
    if (v229)
      v270 = v220;
    else
      v270 = v218;
    v1059 = v270;
    if (v229)
      v271 = v1522;
    else
      v271 = v1526;
    v1295 = v271;
    if (v229)
      v272 = v1526;
    else
      v272 = v1522;
    v1386 = v272;
    v273 = v1570 ^ v1598;
    v1417 = v234;
    v1523 = (v250 - v234 + 1624893667) ^ 0x7FB049C8;
    v1012 = v235;
    v1383 = v263;
    v1379 = ((v260 - v245) ^ v245) + 2 * ((v260 - v245) & v245);
    v274 = 2 * (((((v235 + 494906981) ^ 0x448989E) + v263) ^ 0x4C36C591) - v1379) - 94081858;
    v1183 = v274;
    v1527 = *((_QWORD *)v1557 + 1);
    v1493 = 0x8FCF2785E5235517 * v1527;
    v275 = 0x8FCF2785E5235517 * *(_QWORD *)v1557;
    v276 = (v275 ^ 0xC224B08FC46F62E4) + ((v275 ^ 0xC224B08FC46F62E4) >> 32);
    v1496 = v276 + (v276 >> 16) - ((v276 + (v276 >> 16)) >> 8);
    v277 = ((v1496 + 0x21620C6C92345536) ^ v275) + (((v1496 + 0x21620C6C92345536) ^ v275) >> 32);
    v1509 = v277 + (v277 >> 16) - ((v277 + (v277 >> 16)) >> 8);
    v278 = ((v1509 + 0x21620C6C92345536) ^ v275) + (((v1509 + 0x21620C6C92345536) ^ v275) >> 32);
    v1499 = v278 + (v278 >> 16) - ((v278 + (v278 >> 16)) >> 8);
    v279 = ((v1499 + 0x21620C6C92345536) ^ (0x8FCF2785E5235517 * v1527))
         + 1
         + ((((v1499 + 0x21620C6C92345536) ^ (0x8FCF2785E5235517 * v1527)) + 1) >> 32);
    v1502 = v279 + (v279 >> 16) - ((v279 + (v279 >> 16)) >> 8);
    v280 = ((v1502 + 0x21620C6C92345536) ^ (0x8FCF2785E5235517 * v1527))
         + 1
         + ((((v1502 + 0x21620C6C92345536) ^ (0x8FCF2785E5235517 * v1527)) + 1) >> 32);
    v1505 = v280 + (v280 >> 16) - ((v280 + (v280 >> 16)) >> 8);
    v281 = ((v1505 + 0x21620C6C92345536) ^ (0x8FCF2785E5235517 * v1527))
         + 1
         + ((((v1505 + 0x21620C6C92345536) ^ (0x8FCF2785E5235517 * v1527)) + 1) >> 32);
    v1513 = v281 + (v281 >> 16) - ((v281 + (v281 >> 16)) >> 8);
    v1469 = (v1509 - 1842064074) ^ (v1496 - 1842064074) ^ (v1499 - 1842064074) ^ (v1502 - 1842064074) ^ (v1505 - 1842064074);
    v282 = ((v1513 + 0x21620C6C92345536) ^ 0xD86A6A793E2287F2)
         - (((v1513 + 0x21620C6C92345536) ^ 0xD86A6A793E2287F2) >> 26);
    v1541 = v282 + (v282 >> 10) + ((v282 + (v282 >> 10)) >> 8);
    v283 = v1541
         + 0x26F3FAD07034F49ALL
         + ((v1541 + 0x26F3FAD07034F49ALL) >> 26)
         - ((v1541 + 0x26F3FAD07034F49ALL + ((v1541 + 0x26F3FAD07034F49ALL) >> 26)) >> 14);
    v284 = v283 + (v283 >> 4);
    v1289 = v283 + (v283 >> 4);
    v285 = v284
         + 0x18E249FE2F38F8B5
         + ((v284 + 0x18E249FE2F38F8B5) >> 28)
         + ((v284 + 0x18E249FE2F38F8B5 + ((v284 + 0x18E249FE2F38F8B5) >> 28)) >> 10);
    v286 = v285 + (v285 >> 5);
    v1271 = v285 + (v285 >> 5);
    v287 = (v1271 ^ 0x1492EB966698478ELL)
         - ((v1271 ^ 0x1492EB966698478ELL) >> 24)
         + (((v1271 ^ 0x1492EB966698478ELL) - ((v1271 ^ 0x1492EB966698478ELL) >> 24)) >> 9);
    v1538 = v287 + (v287 >> 8);
    v288 = v1538
         + 0x36E54AFE208E5818
         + ((v1538 + 0x36E54AFE208E5818) >> 25)
         + ((v1538 + 0x36E54AFE208E5818 + ((v1538 + 0x36E54AFE208E5818) >> 25)) >> 12);
    v1599 = v288 + (v288 >> 5);
    v289 = v1599
         + 0x26E66F40D35202B4
         + ((v1599 + 0x26E66F40D35202B4) >> 28)
         - ((v1599 + 0x26E66F40D35202B4 + ((v1599 + 0x26E66F40D35202B4) >> 28)) >> 10);
    v290 = v289 + (v289 >> 7);
    v1160 = v289 + (v289 >> 7);
    v291 = v1160
         - 0x7A496A8AFDCE60DALL
         - ((v1160 - 0x7A496A8AFDCE60DALL) >> 25)
         - ((v1160 - 0x7A496A8AFDCE60DALL - ((v1160 - 0x7A496A8AFDCE60DALL) >> 25)) >> 15);
    v1517 = v291 - (v291 >> 3);
    LODWORD(v281) = v274 ^ v1469 ^ (v1513 - 1842064074);
    v292 = (v1517 ^ 0xBD31851BA83DB393)
         - ((v1517 ^ 0xBD31851BA83DB393) >> ((v274 ^ v1469 ^ (v1513 + 54)) & 0x19) >> ((v274 ^ v1469 ^ (v1513 + 54)) & 0x19 ^ 0x19));
    v293 = v292 - (v292 >> 11) - ((v292 - (v292 >> 11)) >> 8);
    v294 = (v293 ^ 0x34AF72F20BE63089)
         - ((v293 ^ 0x34AF72F20BE63089) >> 28)
         + (((v293 ^ 0x34AF72F20BE63089) - ((v293 ^ 0x34AF72F20BE63089) >> 28)) >> 8);
    v295 = v290 ^ v286 ^ v281 ^ (v294 - (v294 >> 8));
    v296 = *(_QWORD *)v1557 ^ 0xBFBFBFBFBFBFBFBFLL;
    v1446 = (v276 >> (v296 & 0x10) >> (v296 & 0x10 ^ 0x10)) + v276;
    v297 = v1238 ^ v1370 ^ 0xABA7AB9E;
    v298 = v1238 ^ v1282 ^ 0x9D9053E4;
    v299 = v1238 ^ v1350 ^ 0x44A7AB9E;
    v300 = v242 ^ 0xABA7AB9E;
    v301 = v1590 ^ v1242 ^ 0xEBD783E2;
    v302 = v1590 ^ v1245 ^ 0x34D783E2;
    v303 = v1590 ^ v1276 ^ 0x2E07B98;
    v1088 = v246;
    v1085 = v273;
    v304 = v246 + v273 + 1;
    v305 = (v295 + 1) & 7;
    v1591 = v305;
    v306 = v1357;
    if (v229)
      v306 = v1455;
    v1375 = v306;
    v307 = v1346;
    if (!v229)
      v307 = v1339;
    v1361 = v307;
    v308 = v1334;
    if (!v229)
      v308 = v1330;
    v1004 = v308;
    v309 = v1324;
    if (v229)
      v309 = v1320;
    v1371 = v309;
    v310 = v1305;
    if (!v229)
      v310 = v1310;
    v1082 = v310;
    v1571 = v295 | 0xFFFFFFF8;
    if ((v295 | 0xFFFFFFF8) == 0xFFFFFFFF)
      v311 = 0;
    else
      v311 = -1;
    v1234 = v311 << v305;
    if ((v295 | 0xFFFFFFF8) == 0xFFFFFFFF)
      LOBYTE(v312) = 0;
    else
      v312 = ~(v311 << v305);
    v1351 = v312;
    if ((v304 & 1) != 0)
      v313 = v302;
    else
      v313 = v301;
    if ((v304 & 1) != 0)
      v314 = v301;
    else
      v314 = v303;
    v1228 = v314;
    if ((v304 & 1) != 0)
      v315 = v243 ^ 0xA8F2E0B6;
    else
      v315 = v302;
    v1366 = v315;
    if ((v304 & 1) != 0)
      v316 = v303;
    else
      v316 = v243 ^ 0xA8F2E0B6;
    v317 = v1583 ^ v1265 ^ 0x14FD1A2D;
    v318 = v1249 ^ 0x1355657F;
    v319 = v203 ^ v236 ^ 0x20862E8B;
    v320 = v203 ^ v1249 ^ 0x63A34DDF;
    v321 = v203 ^ v1254 ^ 0xBCA34DDF;
    if ((v304 & 1) != 0)
      v322 = v320;
    else
      v322 = v319;
    v1283 = v322;
    if ((v304 & 1) != 0)
    {
      v320 = v321;
      v323 = v1574 ^ v1585;
    }
    else
    {
      v323 = v321;
    }
    v1277 = v323;
    if ((v304 & 1) != 0)
      v324 = v319;
    else
      v324 = v1574 ^ v1585;
    v325 = v209 ^ 0xF1A16B41 ^ v318 ^ v1594;
    v326 = v209 ^ 0xF1A16B41 ^ v1594;
    v327 = v1254 ^ v318 ^ v1594 ^ 0x3DF40E3E ^ v209;
    if ((v304 & 1) != 0)
      v328 = v298;
    else
      v328 = v297;
    if ((v304 & 1) != 0)
      v329 = v300;
    else
      v329 = v298;
    v1266 = v329;
    if ((v304 & 1) != 0)
      v330 = v299;
    else
      v330 = v300;
    if ((v304 & 1) != 0)
      v331 = v297;
    else
      v331 = v299;
    v1260 = v331;
    if ((v304 & 1) != 0)
      v332 = v1583 ^ v1588 ^ v1242 ^ 0x88D87979;
    else
      v332 = v1531 ^ v1588;
    if ((v304 & 1) != 0)
      v333 = v317;
    else
      v333 = v1583 ^ v1588 ^ v1242 ^ 0x88D87979;
    v1255 = v333;
    if ((v304 & 1) != 0)
    {
      v317 = v1531 ^ v1252;
      v334 = v1531 ^ v1588;
    }
    else
    {
      v334 = v1531 ^ v1252;
    }
    v1253 = v334;
    if ((v304 & 1) != 0)
      v335 = v327;
    else
      v335 = v325;
    if ((v304 & 1) != 0)
      v336 = v327 ^ v1585;
    else
      v336 = v327;
    v1250 = v336;
    if ((v304 & 1) != 0)
      v337 = v326;
    else
      v337 = v327 ^ v1585;
    if ((v304 & 1) != 0)
      v326 = v325;
    v1246 = v326;
    v1586 = 2 * (v1523 - v1300) - 171375428;
    *(_QWORD *)v1557 = v296;
    *((_QWORD *)v1557 + 1) = v1527 ^ 0xBFBFBFBFBFBFBFBFLL;
    v1206 = (v1509 + 1226451611) ^ (v1496 + 1226451611) ^ (v1499 + 1226451611) ^ (v1502 + 1226451611) ^ (v1505 + 1226451611) ^ (v1513 + 1226451611) ^ v1599 ^ v284 ^ v293;
    v1201 = v1509 ^ v1496 ^ v1499 ^ v1502 ^ v1505;
    v1243 = v1201 ^ v1513 ^ v1541 ^ v1538 ^ v1517;
    v338 = v1243 ^ v1586;
    v339 = v1243 ^ v1586 ^ 0x8BAEC074;
    v340 = v339 & 0xFE ^ 0x46;
    v341 = (v1243 ^ (2 * (v1523 - v1300) - 68)) ^ 0xE ^ ((v1243 ^ v1586 ^ 0xC20CAB0E) >> 16) ^ ((unsigned __int16)(v1243 ^ (2 * (v1523 - v1300) + 1212) ^ 0xAB0E) >> 8) ^ ((v1243 ^ v1586) >> 24) ^ 0x9A;
    v342 = 2 * (((v1315 ^ (v1295 + 1069612573)) + 909082677) ^ v1553);
    v343 = v1206 ^ v342;
    v344 = (v1206 ^ v342) ^ 0xEA ^ ((unsigned __int16)(v1206 ^ v342 ^ 0xA0EA) >> 8) ^ ((v343 ^ 0xB672A0EA) >> 16) ^ HIBYTE(v343) ^ 0x1B;
    v345 = v1446 - (v1446 >> 8);
    v346 = v345 - 1842064074;
    v347 = ((v345 + 0x21620C6C92345536) ^ v275) + (((v345 + 0x21620C6C92345536) ^ v275) >> 32);
    v348 = v347 + (v347 >> 16) - ((v347 + (v347 >> 16)) >> 8);
    v349 = v348 - 1842064074;
    v350 = ((v348 + 0x21620C6C92345536) ^ v275) + (((v348 + 0x21620C6C92345536) ^ v275) >> 32);
    v351 = v350 + (v350 >> 16) - ((v350 + (v350 >> 16)) >> 8);
    v1447 = v304;
    v352 = (v304 & 2) == 0;
    if ((v304 & 2) != 0)
      v353 = v313;
    else
      v353 = v316;
    v1045 = v353;
    if (v352)
      v316 = v313;
    v1049 = v316;
    if (v352)
      v354 = v320;
    else
      v354 = v324;
    v1031 = v354;
    if (v352)
      v355 = v324;
    else
      v355 = v320;
    v1029 = v355;
    if (v352)
      v356 = v335;
    else
      v356 = v337;
    v1079 = v356;
    if (v352)
      v357 = v337;
    else
      v357 = v335;
    v1076 = v357;
    v358 = v343 ^ 0xBB8DAF5A;
    v1239 = (16843009 * v341) ^ 0x58585858;
    v359 = v351 - 1842064074;
    v360 = ((v351 + 0x21620C6C92345536) ^ v1493) + 1 + ((((v351 + 0x21620C6C92345536) ^ v1493) + 1) >> 32);
    v361 = v360 + (v360 >> 16) - ((v360 + (v360 >> 16)) >> 8);
    v362 = (v348 + 1226451611) ^ (v345 + 1226451611) ^ (v351 + 1226451611) ^ (v361 + 1226451611);
    if (v352)
      v363 = v330;
    else
      v363 = v328;
    v1057 = v363;
    if (v352)
      v364 = v328;
    else
      v364 = v330;
    v1047 = v364;
    if (v352)
      v365 = v1228;
    else
      v365 = v1366;
    v1043 = v365;
    if (v352)
      v366 = v1366;
    else
      v366 = v1228;
    v1041 = v366;
    if (v352)
      v367 = v317;
    else
      v367 = v332;
    v1034 = v367;
    if (v352)
      v368 = v332;
    else
      v368 = v317;
    v1036 = v368;
    v1180 = v295 ^ 0xFE17E580;
    v369 = 16843009 * v1234;
    v1001 = v358;
    v370 = (184549376 * v1234) & v358;
    v371 = v369 ^ v339 & v1351;
    v1139 = v369 ^ v370;
    v1589 = v369 ^ ~v370;
    v372 = 16843009 * v344;
    v373 = (16843009 * v341) ^ 0xF5F5F5F5 ^ v372;
    v1235 = v372 ^ 0xADADADAD;
    v374 = v361 - 1842064074;
    v375 = ((v361 + 0x21620C6C92345536) ^ v1493) + 1 + ((((v361 + 0x21620C6C92345536) ^ v1493) + 1) >> 32);
    v376 = v375 + (v375 >> 16) - ((v375 + (v375 >> 16)) >> 8);
    v377 = v376 - 1842064074;
    v378 = ((v376 + 0x21620C6C92345536) ^ v1493) + 1 + ((((v376 + 0x21620C6C92345536) ^ v1493) + 1) >> 32);
    v379 = v378 + (v378 >> 16) - ((v378 + (v378 >> 16)) >> 8);
    v380 = v379 - 1842064074;
    v381 = ((v379 + 0x21620C6C92345536) ^ 0xD86A6A793E2287F2)
         - (((v379 + 0x21620C6C92345536) ^ 0xD86A6A793E2287F2) >> 26);
    v382 = (((v381 + (v381 >> 10)) >> 8) ^ (v381 + (v381 >> 10)))
         + 2 * (((v381 + (v381 >> 10)) >> 8) & (v381 + (v381 >> 10)));
    v383 = v348 ^ v345 ^ v351 ^ v361 ^ v376;
    v384 = v379 + 1226451611;
    v385 = v383 ^ v379 ^ v382;
    v386 = v382
         + 0x26F3FAD07034F49ALL
         + ((unint64_t)(v382 + 0x26F3FAD07034F49ALL) >> 26)
         - ((v382 + 0x26F3FAD07034F49ALL + ((unint64_t)(v382 + 0x26F3FAD07034F49ALL) >> 26)) >> 14);
    v387 = v386 + (v386 >> 4);
    v388 = v387
         + 0x18E249FE2F38F8B5
         + ((v387 + 0x18E249FE2F38F8B5) >> 28)
         + ((v387 + 0x18E249FE2F38F8B5 + ((v387 + 0x18E249FE2F38F8B5) >> 28)) >> 10);
    v389 = v388 + (v388 >> 5);
    v390 = (v389 ^ 0x1492EB966698478ELL)
         - ((v389 ^ 0x1492EB966698478ELL) >> 24)
         + (((v389 ^ 0x1492EB966698478ELL) - ((v389 ^ 0x1492EB966698478ELL) >> 24)) >> 9);
    v391 = v390 + (v390 >> 8);
    v392 = v385 ^ v391;
    v393 = v391
         + 0x36E54AFE208E5818
         + ((v391 + 0x36E54AFE208E5818) >> 25)
         + ((v391 + 0x36E54AFE208E5818 + ((v391 + 0x36E54AFE208E5818) >> 25)) >> 12);
    v394 = v393 + (v393 >> 5);
    LODWORD(v387) = v394 ^ v387;
    v395 = v394
         + 0x26E66F40D35202B4
         + ((v394 + 0x26E66F40D35202B4) >> 28)
         - ((v394 + 0x26E66F40D35202B4 + ((v394 + 0x26E66F40D35202B4) >> 28)) >> 10);
    v396 = v395 + (v395 >> 7);
    v397 = v396
         - 0x7A496A8AFDCE60DALL
         - ((v396 - 0x7A496A8AFDCE60DALL) >> 25)
         - ((v396 - 0x7A496A8AFDCE60DALL - ((v396 - 0x7A496A8AFDCE60DALL) >> 25)) >> 15);
    v398 = v397 - (v397 >> 3);
    v399 = v392 ^ v398 ^ v1586;
    v400 = v362 ^ (v376 + 1226451611) ^ v384;
    v401 = (v398 ^ 0xBD31851BA83DB393)
         - ((v398 ^ 0xBD31851BA83DB393) >> 25)
         - (((v398 ^ 0xBD31851BA83DB393) - ((v398 ^ 0xBD31851BA83DB393) >> 25)) >> 11);
    v402 = v401 - (v401 >> 8);
    v403 = v400 ^ v387 ^ v402 ^ v342;
    v404 = (v402 ^ 0x34AF72F20BE63089)
         - ((v402 ^ 0x34AF72F20BE63089) >> 28)
         + (((v402 ^ 0x34AF72F20BE63089) - ((v402 ^ 0x34AF72F20BE63089) >> 28)) >> 8);
    LODWORD(v404) = v349 ^ v346 ^ v359 ^ v374 ^ v377 ^ v380 ^ v389 ^ v396 ^ (v404 - (v404 >> 8)) ^ 0xF6128D9F;
    v405 = v399 ^ 0x83ABA86B;
    v406 = (v399 ^ 0x83ABA86B) & 0xFE ^ 0x58;
    v407 = v1183 ^ v404;
    v408 = -(v1183 ^ v404) & 7;
    v409 = v1283;
    if (v352)
      v409 = v1277;
    v1023 = v409;
    v410 = v1260;
    if (v352)
      v410 = v1266;
    v1027 = v410;
    v411 = v1253;
    if (v352)
      v411 = v1255;
    v1025 = v411;
    v412 = v1246;
    if (!v352)
      v412 = v1250;
    v1061 = v412;
    v413 = v407 & 7;
    if ((v407 & 7) != 0)
      v414 = 255;
    else
      v414 = 0;
    v415 = v414 << v408;
    v416 = 16843009 * v415;
    v996 = v403 ^ 0xB388C745;
    v417 = (-1459617792 * v415) & (v403 ^ 0xB388C745);
    v418 = v416 ^ v417;
    v419 = v416 ^ ~v417;
    if ((v407 & 7) != 0)
      v420 = ~(_BYTE)v415;
    else
      v420 = 0;
    v421 = v405 & v420 ^ v416;
    v1229 = v399;
    v1158 = v1579 ^ 0x9A255961;
    v1367 = v1571 ^ ~v413 ^ v1564 ^ (2 * (v1571 ^ ~v413));
    v422 = 16843009 * v406;
    v423 = __ROR4__((16843008 * v406) ^ v1450 ^ (16843009 * v406), 14);
    v1532 = v373;
    v1154 = *((_DWORD *)*(&off_1015B46D0 + (int)(v1576 + 2323)) + v373 % 0x101) + ((v373 % 0x101) ^ 0x529F2120);
    v424 = (char *)*(&off_1015B46D0 + (int)(v1579 ^ 0x9A255BE3)) - 8;
    v425 = -954171053 * *(_DWORD *)&v424[4 * (v407 & 7)];
    v986 = (v1472 ^ -v1472 ^ ((v425 ^ 0x17CB407) + (v425 ^ v1472 ^ 0xFE834BF8) + 1)) + (v425 ^ 0x17CB407);
    v999 = (1344623729 * v1591) ^ v1475;
    v1220 = (v405 & 0xFFFFFF01 | (2 * (v422 >> 1))) ^ 0xEE464700;
    v426 = (16843009 * v340) >> 1;
    v1212 = (v339 & 0xFFFFFF01 | (2 * (v340 >> 1))) ^ 0xE6432F01;
    v992 = 16843009
         * (((v403 ^ 0xBE77C8F5) >> 16) ^ HIBYTE(v403) ^ v403 ^ 0xF5 ^ ((unsigned __int16)(v403 ^ 0xC8F5) >> 8) ^ 0xF0);
    v994 = 16843009
         * (v399 ^ 0x11 ^ ((unsigned __int16)(v399 ^ 0xC311) >> 8) ^ ((v399 ^ 0xCA09C311) >> 16) ^ HIBYTE(v399) ^ 0x82);
    v1565 = 16843009 * v340;
    v990 = *(_DWORD *)&v424[4 * (16843009 * v340 % 0x101)];
    v1224 = v994 ^ v992 ^ 0x6060606;
    v988 = *(_DWORD *)&v424[4 * (v1224 % 0x101)];
    v1217 = v399 ^ 0x6DEDEF33;
    v1145 = *(_DWORD *)&v424[4 * ((v399 ^ 0x6DEDEF33) % 0x101)];
    v1143 = v1361 - (v338 ^ 0x6DEDEF33);
    v984 = (1413731989 * (v338 ^ 0x6DEDEF33)) ^ v1482;
    v982 = (((v1479 + 100128955 * v1212) ^ (-100128955 * (v338 ^ 0x6DEDEF33)))
          + 2 * ((v1479 + 100128955 * v1212) & (-100128955 * (v338 ^ 0x6DEDEF33)))) ^ v338;
    v1352 = v1487 ^ 0x904BBD6B ^ (1255731509 * (v407 ^ v1180));
    v1362 = (16843008 * v340) ^ __ROR4__(((v340 << 18) & 0x7FC0000 | ((v340 >> 1) << 27) | ((16843009 * v340) >> 14)) ^ v423 ^ 0xEF3250EA, 18) ^ 0x943ABBCC;
    v1152 = v403 ^ 0xEE0E2034;
    v427 = __ROR8__(((0xE793C2F291AA8B80 * v1527) | (v1493 >> 57)) ^ __ROR8__(v1505 + 0x21620C6C92345536, 57) ^ 0x6BF75A40AF03CC0ALL, 7);
    v428 = (v427 ^ 0x14D7EEB4815E0798) + 1 + (((v427 ^ 0x14D7EEB4815E0798) + 1) >> 32);
    v429 = v428 + (v428 >> 16) - ((v428 + (v428 >> 16)) >> 8);
    v980 = v1469 ^ (v429 - 1842064074) ^ ((v1469 ^ (v429 - 1842064074)) >> 2) & 0x3DA0B395;
    v430 = (v1509 + 1226451611) ^ (v1496 + 1226451611) ^ (v1499 + 1226451611) ^ (v1502 + 1226451611) ^ (v1505 + 1226451611);
    v976 = v1201 ^ v429 ^ ((v1201 ^ v429) >> 2) & 0x3DA0B395;
    v978 = v430 ^ (v429 + 1226451611) ^ ((v430 ^ (v429 + 1226451611)) >> 2) & 0x3DA0B395;
    v431 = ((v429 + 0x21620C6C92345536) ^ 0xD86A6A793E2287F2)
         - (((v429 + 0x21620C6C92345536) ^ 0xD86A6A793E2287F2) >> 26);
    v432 = v431 + (v431 >> 10) + ((v431 + (v431 >> 10)) >> 8);
    v974 = (v432 >> 2) & 0x3DA0B395 ^ v432;
    v433 = v432
         + 0x26F3FAD07034F49ALL
         + ((v432 + 0x26F3FAD07034F49ALL) >> 26)
         - ((v432 + 0x26F3FAD07034F49ALL + ((v432 + 0x26F3FAD07034F49ALL) >> 26)) >> 14);
    v1202 = v433 + (v433 >> 4);
    v434 = v1202
         + 0x18E249FE2F38F8B5
         + ((v1202 + 0x18E249FE2F38F8B5) >> 28)
         + ((v1202 + 0x18E249FE2F38F8B5 + ((v1202 + 0x18E249FE2F38F8B5) >> 28)) >> 10);
    v435 = v434 + (v434 >> 5);
    v436 = (v435 ^ 0x1492EB966698478ELL)
         - ((v435 ^ 0x1492EB966698478ELL) >> 24)
         + (((v435 ^ 0x1492EB966698478ELL) - ((v435 ^ 0x1492EB966698478ELL) >> 24)) >> 9);
    v1197 = v436 + (v436 >> 8);
    v437 = v1197
         + 0x36E54AFE208E5818
         + ((v1197 + 0x36E54AFE208E5818) >> 25)
         + ((v1197 + 0x36E54AFE208E5818 + ((v1197 + 0x36E54AFE208E5818) >> 25)) >> 12);
    v1193 = v437 + (v437 >> 5);
    v438 = v1193
         + 0x26E66F40D35202B4
         + ((v1193 + 0x26E66F40D35202B4) >> 28)
         - ((v1193 + 0x26E66F40D35202B4 + ((v1193 + 0x26E66F40D35202B4) >> 28)) >> 10);
    v439 = v438 + (v438 >> 7);
    LODWORD(v435) = v439 ^ v435;
    v440 = v439
         - 0x7A496A8AFDCE60DALL
         - ((v439 - 0x7A496A8AFDCE60DALL) >> 25)
         - ((v439 - 0x7A496A8AFDCE60DALL - ((v439 - 0x7A496A8AFDCE60DALL) >> 25)) >> 15);
    v1192 = v440 - (v440 >> 3);
    v441 = (v1192 ^ 0xBD31851BA83DB393)
         - ((v1192 ^ 0xBD31851BA83DB393) >> 25)
         - (((v1192 ^ 0xBD31851BA83DB393) - ((v1192 ^ 0xBD31851BA83DB393) >> 25)) >> 11);
    v1188 = v441 - (v441 >> 8);
    v442 = (v1188 ^ 0x34AF72F20BE63089)
         - ((v1188 ^ 0x34AF72F20BE63089) >> 28)
         + (((v1188 ^ 0x34AF72F20BE63089) - ((v1188 ^ 0x34AF72F20BE63089) >> 28)) >> 8);
    v1148 = v442 - (v442 >> 8);
    v1150 = v435 ^ (v435 >> 2) & 0x3DA0B395;
    v1528 = v1206 ^ 0x6C49BCB2;
    v443 = v1180 ^ v1183;
    v444 = v1469 ^ (v1513 - 1842064074) ^ (2 * (v1469 ^ (v1513 - 1842064074))) & 0xDF33B7BE;
    v972 = v430 ^ (v1513 + 1226451611) ^ (2 * (v430 ^ (v1513 + 1226451611))) & 0xDF33B7BE;
    v968 = (2 * v1496) & 0xDF33B7BE ^ v1496 ^ (((v1509 << 20) & 0x6F99DBDF00000 ^ (v1509 << 19)) >> 19) ^ v1499 ^ (2 * v1499) & 0xDF33B7BE ^ v1502 ^ (2 * v1502) & 0xDF33B7BE ^ v1505 ^ (2 * v1505) & 0xDF33B7BE ^ v1513 ^ (2 * v1513) & 0xDF33B7BE;
    v970 = (2 * v1599) & 0xDF33B7BE ^ v1599;
    v966 = (2 * v1517) & 0xDF33B7BE ^ v1517;
    v445 = (v1517 ^ 0xBD31851BA83DB393)
         - ((v1517 ^ 0xBD31851BA83DB393) >> 25)
         - (((v1517 ^ 0xBD31851BA83DB393) - ((v1517 ^ 0xBD31851BA83DB393) >> 25)) >> 11);
    v446 = v445 - (v445 >> 8);
    v964 = (2 * v446) & 0xDF33B7BE ^ v446;
    v447 = (v446 ^ 0x34AF72F20BE63089)
         - ((v446 ^ 0x34AF72F20BE63089) >> 28)
         + (((v446 ^ 0x34AF72F20BE63089) - ((v446 ^ 0x34AF72F20BE63089) >> 28)) >> 8);
    v1600 = v426 & 0x51F5122 ^ 0xA3EA245;
    v1518 = (v422 >> 1) & 0x6E868745 ^ 0xDD0D0E8A;
    v1497 = (v422 >> 1) & 0x62433C78 ^ 0xC48678F1;
    v1514 = v426 & 0x10656E29 ^ 0x20CADC52;
    v1207 = (v422 >> 1) & 0x21A1C3F6 ^ 0x434387EC;
    v1181 = v426 & 0x2898A106 ^ 0x5131420D;
    v1510 = (v422 >> 1) & 0x38CF1676 ^ 0x719E2CED;
    v1494 = v426 & 0x45F33F2E ^ 0x8BE67E5D;
    v1141 = v426 & 0x25C909C4 ^ 0x4B921389;
    v1506 = v426 & 0x11A05331 ^ 0x2340A662;
    v448 = ~v1571;
    v1162 = ((v421 & ((v422 >> 1) & 0x6E18A403 ^ 0xDC314806)) >> v1591)
          + ((((v422 >> 1) & 0x6E18A403 ^ 0xDC314806) & ~v1139) << ~(_BYTE)v1571);
    v1178 = (v422 >> 1) & 0x7FA5EA02 ^ 0xFF4BD405;
    v1503 = v426 & 0x14CC3667 ^ 0x29986CCF;
    v1490 = (v422 >> 1) & 0x39E38B26 ^ 0x73C7164C;
    v1488 = v426 & 0x51C7023F ^ 0xA38E047E;
    v1485 = (v422 >> 1) & 0x4A133742 ^ 0x94266E84;
    v1112 = (v426 & 0x2010420 | 0x49000C0) ^ v426 & 0x40000C0 | (v426 & 0x20402000 | 0x480E5900) ^ v426 & 0xE0800;
    v1176 = v426 & 0x1340693F ^ 0x2680D27F;
    v1483 = (v422 >> 1) & 0x3258BDD6 ^ 0x64B17BAD;
    v1107 = v426 & 0xE32DA18 ^ 0x1C65B431;
    v1110 = (v422 >> 1) & 0x6583FD97 ^ 0xCB07FB2E;
    v1500 = v426 & 0x2CB64E82 ^ 0x596C9D04;
    v1480 = v426 & 0x2ABF1A2C ^ 0x557E3458;
    v1167 = ((((v422 >> 1) & 0x479E8706 ^ 0x8F3D0E0D) & ~v418) << (v407 & 7))
          + ((((v422 >> 1) & 0x479E8706 ^ 0x8F3D0E0D) & v371) >> v408);
    v1476 = v426 & 0x66A0FDC1 ^ 0xCD41FB83;
    v1473 = (v422 >> 1) & 0x46D07BF8 ^ 0x8DA0F7F0;
    v1105 = (v422 >> 1) & 0x338CA931 ^ 0x67195262;
    v1174 = v426 & 0x4763FA04 ^ 0x8EC7F409;
    v1467 = (v422 >> 1) & 0x6C2A10D0 ^ 0xD85421A1;
    v1096 = v426 & 0x1C90825 ^ 0x392104B;
    v1470 = (v422 >> 1) & 0x189A221C ^ 0x31344438;
    v957 = v426 & 0x11982023 ^ 0x23304047;
    v449 = (v422 >> 1) & 0x690761A ^ 0xD20EC35;
    v1170 = ((v421 & (v426 & 0x52CFD851 ^ 0xA59FB0A3)) >> v408) ^ (((v426 & 0x52CFD851 ^ 0xA59FB0A3) & ~v1139) << ~(_BYTE)v1571);
    v1580 = v426;
    LODWORD(v435) = v426 & 0x354184D5 ^ 0x6A8309AA;
    v1172 = (((v426 & 0xCAE4E82 ^ 0x195C9D04) & ~v418) << (v407 & 7)) | ((v421 & (v426 & 0xCAE4E82 ^ 0x195C9D04)) >> v1591);
    v1171 = ((((v422 >> 1) & 0x59FC4214 ^ 0xB3F88428) & v371) >> v408) ^ ((((v422 >> 1) & 0x59FC4214 ^ 0xB3F88428) & ~v1139) << ~(_BYTE)v1571);
    v1577 = v422 >> 1;
    v450 = (v422 >> 1) & 0x6520F683;
    v451 = v450 ^ 0xCA41ED07;
    v1184 = v443;
    v1272 = v1464 ^ v444 ^ v1271 ^ (2 * v1371) & 0xDF33B7BE ^ (2 * v1271) & 0xDF33B7BE ^ v1160 ^ (2 * v1160) & 0xDF33B7BE ^ v443 ^ (2 * (v447 - (v447 >> 8))) & 0xDF33B7BE ^ (v447 - (v447 >> 8)) ^ 0x22346680 ^ (2 * (v443 ^ v1371)) & 0xDF33B7BE;
    v452 = v1168 ^ 0xE0B5D5D5;
    v453 = v1168 ^ 0xA9E22CED;
    v454 = v1152 ^ v1229 ^ 0x69FE890F;
    v455 = v422;
    v456 = (char *)*(&off_1015B46D0 + v1158) - 4;
    v961 = *(_DWORD *)&v456[4 * (v422 % 0x101)];
    v960 = v422 % 0x101 + 1622067078;
    v962 = v1165 - v1591 + v408;
    v958 = v1154 + 1;
    v954 = *(_DWORD *)&v456[4 * (v1220 % 0x101)];
    v955 = *(_DWORD *)&v456[4 * ~v1571];
    v959 = v1150 ^ v1148;
    v956 = v1148 >> 2;
    v1123 = (v371 & v1600) >> v1591;
    v1153 = (v1518 & ~v1139) << v413;
    v1120 = (v421 & v1497) >> v1591;
    v1155 = (v1514 & ~v418) << v413;
    v1116 = (v1207 & ~v1139) << v413;
    v1115 = (v421 & v1181) >> v1591;
    v1159 = (v1510 & ~v1139) << ~(_BYTE)v1571;
    HIDWORD(v427) = (v371 & v1141) >> v408;
    LODWORD(v427) = HIDWORD(v427);
    v1117 = v427 >> 25;
    v1122 = (v421 & v1178) >> v408;
    v1161 = (v1503 & ~v1139) << v413;
    v1119 = (v1490 & ~v418) << ~(_BYTE)v1571;
    v457 = (v422 >> 1) & 0x3A7D33DB ^ 0x74FA67B6;
    v1118 = (v457 & ~v418) << ~(_BYTE)v1571;
    v1121 = (v1488 & ~v1139) << v413;
    v1127 = (v1485 & v371) >> v408;
    v1126 = (v421 & v1176) >> v1591;
    v1130 = (v1483 & v371) >> v408;
    v1129 = (v1107 & ~v418) << ~(_BYTE)v1571;
    v1166 = (v421 & v1500) >> v1591;
    v1125 = (v1480 & ~v418) << v413;
    v458 = (v422 >> 1) & 0x42FDE686 ^ 0x85FBCD0D;
    v1124 = (v458 & v371) >> v1591;
    v1128 = (v371 & v1476) >> v408;
    v459 = v413;
    v1132 = (v1174 & ~v418) << v413;
    v1134 = (v1467 & v371) >> v1591;
    v1133 = (v1096 & ~v418) << ~(_BYTE)v1571;
    v1169 = (v371 & v957) >> v1591;
    v1151 = v449;
    v1131 = (v449 & v371) >> v1591;
    v1149 = v435;
    v1138 = (v371 & v435) >> v1591;
    v460 = v450 ^ 0x25201280 ^ v421;
    if ((v1565 & 0x81C1180) == 0)
      v460 = v421;
    v1147 = v451;
    v1137 = (v460 & v451) >> v408;
    v1003 = v1212 + v1143;
    v1136 = v1532 ^ ((v1532 & v1565) >> 1);
    v1135 = (v1136 & ~v1139) << v448;
    v953 = -954171053 * v1145;
    v1098 = v1600 & ~v418;
    v1099 = v1207 & v371;
    v1100 = v1181 & ~v418;
    v1101 = v1141 & ~v418;
    v1102 = v1178 & ~v1139;
    v1104 = v457 & v371;
    v1182 = v1112 & ~v1139;
    v1146 = v421 & v1112;
    v1103 = v1176 & ~v418;
    v1108 = v421 & v1107;
    v1177 = v1110 & v371;
    v1144 = v1110 & ~v1139;
    v1109 = v458 & ~v1139;
    v1142 = v957 & ~v1139;
    v1179 = v1105 & ~v1139;
    v461 = v371;
    v1140 = v1105 & v371;
    v1111 = v421 & v1174;
    v1113 = v421 & v1096;
    v1097 = v1494 & ~v418;
    v1175 = v1506 & ~v418;
    v1106 = v1473 & ~v418;
    v1114 = v1470 & ~v418;
    v1601 = v1235 ^ v1239;
    do
    {
      v462 = *((_DWORD *)*(&off_1015B46D0 + v453) + (v29 ^ 0xB3u) - 3);
      v463 = v462 ^ ((v462 ^ 0x2A07493Au) >> 6) ^ ((v462 ^ 0x2A07493Au) >> 4) ^ 0x5EBD4918;
      v464 = v452 ^ v29 ^ 0x4957FBA0;
      v465 = 4
           * (((((v29 ^ ((v29 & v455) >> 1)) & v371) >> v408) | ((v29 ^ ((v29 & v455) >> 1)) << v459)) ^ v1601);
      *(_DWORD *)(v1567 + v465) = v454 ^ ((((v463 ^ ((v463 & v1565) >> 1)) & v421) >> v1591) | (((v463 ^ ((v463 & v1565) >> 1)) & v419) << v448));
      v466 = *(_DWORD *)&v1597[4 * (v29++ ^ 0xC6)];
      *(_DWORD *)(v1519 + v465) = v454 ^ 0x3370062B ^ v464 ^ (v464 - 219238213) ^ v466;
    }
    while (v29 != 256);
    v467 = v1305;
    if ((v1020 & 2) == 0)
      v467 = v1310;
    v1311 = v999 ^ (1344623729 * v408);
    v1000 = v984 ^ (1413731989 * v1212);
    v1230 = v982 ^ v1229;
    v468 = v955 ^ v986 ^ (1622067077 - v1571);
    v469 = v1455;
    if ((v1020 & 2) == 0)
      v469 = v1357;
    v1213 = v469;
    v470 = v1334;
    if ((v1020 & 2) != 0)
    {
      v471 = v1346;
    }
    else
    {
      v470 = v1330;
      v471 = v1339;
    }
    v1208 = 513592277 * (v408 - v1591) + v470;
    v472 = v1324;
    if ((v1020 & 2) != 0)
      v472 = v1320;
    v998 = v472;
    v473 = v1012 ^ v978 ^ v1202 ^ (v1202 >> 2) & 0x3DA0B395;
    v474 = v1193 ^ (v1193 >> 2) & 0x3DA0B395;
    v1340 = v974 ^ v1197 ^ (v1197 >> 2) & 0x3DA0B395;
    v1306 = v968 ^ v1300 ^ v1541 ^ (2 * v1541) & 0xDF33B7BE ^ v1538 ^ (2 * v1538) & 0xDF33B7BE ^ v1243 ^ (2 * v1243) & 0xDF33B7BE ^ v966;
    v1456 = v1235 ^ v1239;
    v475 = v1266;
    if ((v1447 & 2) == 0)
      v475 = v1260;
    v1013 = v475;
    v476 = v1255;
    if ((v1447 & 2) == 0)
      v476 = v1253;
    v983 = v476;
    v477 = v1283;
    if ((v1447 & 2) != 0)
      v477 = v1277;
    v979 = v477;
    v478 = v1250;
    if ((v1447 & 2) != 0)
      v478 = v1246;
    v1198 = v478;
    v479 = v459;
    v1256 = v459 ^ v448 ^ v1014;
    v1194 = v1217 + v467 - v1220;
    v1261 = v1217 ^ v1008 ^ (32 * v1217) ^ v1220 ^ (32 * v1220);
    v1539 = v994 ^ 0x48484848;
    v987 = v954 ^ v953 ^ v1315 ^ v1565 ^ v455 ^ (v1220 % 0x101 + 1622067078) ^ 0x8FC8AC;
    v480 = v468 ^ 0x1F37CAB;
    v1278 = v961 ^ v1295 ^ v960 ^ 0x8FC8AC ^ (-954171053 * v990);
    v1301 = (-954171053 * v988) ^ v1006 ^ v958 ^ 0x675BB87D;
    v1284 = v1224 ^ v1532 ^ v1010 ^ (v1532 >> 5) ^ (v1224 >> 5);
    v1021 = v473 ^ v474 ^ v1528 ^ (v1528 >> 2) & 0x3DA0B395 ^ v1532 ^ v1224 ^ (16 * (v1224 ^ v1532)) ^ (v1188 >> 2) & 0x3DA0B395 ^ v1188 ^ 0x75499FB6;
    v1267 = v1017 ^ v1547 ^ (v1547 >> 2) & 0x3DA0B395 ^ v976 ^ v1340 ^ v1547 ^ v1243 ^ 0x8BAEC074 ^ ((v1547 ^ v1243 ^ 0x8BAEC074) >> 2) & 0x3DA0B395 ^ v1001 ^ v996 ^ (v1192 >> 2) & 0x3DA0B395 ^ v1192 ^ 0xA30B187E;
    v1185 = v980 ^ v1184 ^ (v1184 >> 2) & 0x3DA0B395 ^ v962 ^ v959 ^ v956 & 0x3DA0B395 ^ 0xC3975480;
    v481 = v1004 ^ (2 * v1560) & 0xDF33B7BE ^ v972 ^ v1289 ^ (2 * v1289) & 0xDF33B7BE ^ v970 ^ v1528 ^ (2 * (v1528 ^ v1560)) & 0xDF33B7BE ^ v964 ^ 0xB45A8D96;
    v482 = v419;
    v1533 = ((v419 & (v1424 ^ ((v1565 & v1424) >> 1))) << v459) + ((v371 & (v1424 ^ ((v1565 & v1424) >> 1))) >> v408);
    v1240 = ((v421 & (v1063 ^ ((v455 & v1063) >> 1))) >> v1591) + ((v1589 & (v1063 ^ ((v455 & v1063) >> 1))) << v448);
    v1429 = ((v421 & (v1428 ^ ((v455 & v1428) >> 1))) >> v408) | ((v1589 & (v1428 ^ ((v455 & v1428) >> 1))) << v459);
    v1542 = ((v419 & (v1556 ^ ((v1565 & v1556) >> 1))) << v448) | ((v371 & (v1556 ^ ((v1565 & v1556) >> 1))) >> v1591);
    v1203 = ((v419 & (v1071 ^ ((v1565 & v1071) >> 1))) << v448) ^ ((v371 & (v1071 ^ ((v1565 & v1071) >> 1))) >> v408);
    v1244 = v1066 ^ ((v455 & v1066) >> 1);
    v1072 = ((v1589 & (v1068 ^ ((v1565 & v1068) >> 1))) << v459) | ((v371 & (v1068 ^ ((v1565 & v1068) >> 1))) >> v1591);
    v1218 = ((v419 & (v1038 ^ ((v455 & v1038) >> 1))) << v448) + ((v421 & (v1038 ^ ((v455 & v1038) >> 1))) >> v408);
    v1433 = ((v419 & (v1432 ^ ((v455 & v1432) >> 1))) << v459) ^ (((v1432 ^ ((v455 & v1432) >> 1)) & v371) >> v1591);
    v1236 = ((v421 & (v1054 ^ ((v1565 & v1054) >> 1))) >> v408) ^ ((v1589 & (v1054 ^ ((v1565 & v1054) >> 1))) << v448);
    v1225 = ((v1589 & (v1435 ^ ((v455 & v1435) >> 1))) << v459) + (((v1435 ^ ((v455 & v1435) >> 1)) & v371) >> v408);
    v1221 = ((v419 & (v1051 ^ ((v455 & v1051) >> 1))) << v448) + (((v1051 ^ ((v455 & v1051) >> 1)) & v371) >> v408);
    v1529 = ((v419 & (v1073 ^ ((v1565 & v1073) >> 1))) << v448) | ((v421 & (v1073 ^ ((v1565 & v1073) >> 1))) >> v1591);
    v1189 = ((v421 & (v1440 ^ ((v455 & v1440) >> 1))) >> v1591) + ((v1589 & (v1440 ^ ((v455 & v1440) >> 1))) << v448);
    v1247 = ((v419 & (v1566 ^ ((v1565 & v1566) >> 1))) << v459) + ((v371 & (v1566 ^ ((v1565 & v1566) >> 1))) >> v408);
    v1425 = ((v421 & (v1256 ^ ((v1256 & v1565) >> 1))) >> v408) | ((v1589 & (v1256 ^ ((v1256 & v1565) >> 1))) << v448);
    v1358 = ((v1589 & (v1386 ^ ((v1565 & v1386) >> 1))) << v459) ^ ((v371 & (v1386 ^ ((v1565 & v1386) >> 1))) >> v1591);
    v1347 = ((v421 & (v1421 ^ ((v455 & v1421) >> 1))) >> v1591) + ((v1589 & (v1421 ^ ((v455 & v1421) >> 1))) << v448);
    v1341 = ((v1589 & (v1402 ^ ((v1565 & v1402) >> 1))) << v448) + ((v371 & (v1402 ^ ((v1565 & v1402) >> 1))) >> v1591);
    v1335 = ((v419 & (v1208 ^ ((v1208 & v1565) >> 1))) << v459) | ((v421 & (v1208 ^ ((v1208 & v1565) >> 1))) >> v408);
    v1074 = (((v1362 ^ ((v1362 & v1565) >> 1)) & v371) >> v408) ^ (((v1362 ^ ((v1362 & v1565) >> 1)) & v1589) << v448);
    v483 = ((v419 & (v1398 ^ ((v1565 & v1398) >> 1))) << v448) + ((v371 & (v1398 ^ ((v1565 & v1398) >> 1))) >> v1591);
    v1069 = ((v421 & (v1383 ^ ((v455 & v1383) >> 1))) >> v408) | ((v1589 & (v1383 ^ ((v455 & v1383) >> 1))) << v448);
    v484 = ((v419 & (v1390 ^ ((v1565 & v1390) >> 1))) << v448) ^ ((v421 & (v1390 ^ ((v1565 & v1390) >> 1))) >> v408);
    v1064 = v484;
    v1436 = ((v419 & (v1379 ^ ((v1565 & v1379) >> 1))) << v479) + ((v371 & (v1379 ^ ((v1565 & v1379) >> 1))) >> v408);
    v485 = (v1565 & v1413) >> 1;
    v486 = v1413 & 0x10000;
    if ((v485 & v1413 & 0x10000) != 0)
      v486 = -v486;
    v1441 = ((v419 & ((v486 + v485) ^ v1413 & 0xFFFEFFFF)) << v479) | ((v421 & ((v486 + v485) ^ v1413 & 0xFFFEFFFF)) >> v408);
    v1055 = ((v421 & (v1230 ^ ((v455 & v1230) >> 1))) >> v1591) | ((v1589 & (v1230 ^ ((v455 & v1230) >> 1))) << v448);
    v487 = (v480 & v1565) >> 1;
    v488 = v480 & 0x800;
    if (((unsigned __int16)v487 & v480 & 0x800) != 0)
      v488 = -v488;
    v1325 = ((v419 & ((v488 + v487) ^ v480 & 0xFFFFF7FF)) << v448) | ((((v488 + v487) ^ v480 & 0xFFFFF7FF) & v371) >> v1591);
    v489 = (((v1367 ^ ((v1367 & v455) >> 1)) & v1589) << v448) | (((v1367 ^ ((v1367 & v455) >> 1)) & v421) >> v1591);
    v1052 = ((v1589 & (v1213 ^ ((v455 & v1213) >> 1))) << v479) | (((v1213 ^ ((v455 & v1213) >> 1)) & v371) >> v1591);
    v1039 = ((v419 & (v1375 ^ ((v1565 & v1375) >> 1))) << v448) + ((v421 & (v1375 ^ ((v1565 & v1375) >> 1))) >> v1591);
    v1015 = ((v371 & (v1560 ^ ((v1565 & v1560) >> 1))) >> v408) ^ ((v1589 & (v1560 ^ ((v1565 & v1560) >> 1))) << v479);
    v1018 = (((v1352 ^ ((v1352 & v455) >> 1)) & v1589) << v479) | (((v1352 ^ ((v1352 & v455) >> 1)) & v371) >> v408);
    v490 = (((v1272 ^ ((v1272 & v1565) >> 1)) & v1589) << v479) ^ (((v1272 ^ ((v1272 & v1565) >> 1)) & v421) >> v1591);
    v1002 = v490;
    v1009 = ((v482 & (v1261 ^ ((v1261 & v1565) >> 1))) << v448) ^ (((v1261 ^ ((v1261 & v1565) >> 1)) & v371) >> v1591);
    v1011 = (((v481 ^ ((v481 & v1565) >> 1)) & v1589) << v448) | (((v481 ^ ((v481 & v1565) >> 1)) & v371) >> v1591);
    v491 = v1565;
    v1005 = ((v482 & (v1394 ^ ((v455 & v1394) >> 1))) << v448) + ((v421 & (v1394 ^ ((v455 & v1394) >> 1))) >> v408);
    v1007 = ((v421 & (v1547 ^ ((v1565 & v1547) >> 1))) >> v408) ^ ((v1589 & (v1547 ^ ((v1565 & v1547) >> 1))) << v448);
    v1465 = v452;
    v1596 = v452 + 1521650217;
    v1251 = v992 ^ 0xEA44C84F ^ (v452 + 1521650217);
    v993 = v1251 ^ v1539 ^ v1441;
    v995 = v1456 ^ v1436;
    v989 = v1456 ^ v489;
    v991 = v1251 ^ v1539 ^ v1325;
    v492 = v1052 ^ v1341 ^ v1015 ^ (((v1362 ^ ((v1362 & v1565) >> 1)) & v371) >> v408) ^ (((v1362 ^ ((v1362 & v1565) >> 1)) & v1589) << v448) ^ v1018 ^ (((v421 & (v1230 ^ ((v455 & v1230) >> 1))) >> v1591) | ((v1589 & (v1230 ^ ((v455 & v1230) >> 1))) << v448)) ^ (((v421 & (v1383 ^ ((v455 & v1383) >> 1))) >> v408) | ((v1589 & (v1383 ^ ((v455 & v1383) >> 1))) << v448)) ^ v1007 ^ v1347 ^ v1039 ^ v484 ^ v483 ^ v1335 ^ v1009 ^ v1005 ^ v993 ^ v1456 ^ v1436 ^ v1456 ^ v489 ^ v991 ^ v1011;
    v493 = v421;
    v997 = ((v421 & (v471 ^ ((v455 & v471) >> 1))) >> v408) + ((v1589 & (v471 ^ ((v455 & v471) >> 1))) << v448);
    v1321 = ((v482 & (v1409 ^ ((v1565 & v1409) >> 1))) << v448) | ((v421 & (v1409 ^ ((v1565 & v1409) >> 1))) >> v408);
    v1316 = ((v482 & (v1278 ^ ((v1278 & v1565) >> 1))) << v448) + ((v421 & (v1278 ^ ((v1278 & v1565) >> 1))) >> v1591);
    v494 = v455;
    v1331 = ((v493 & (v1405 ^ ((v455 & v1405) >> 1))) >> v408) ^ ((v1589 & (v1405 ^ ((v455 & v1405) >> 1))) << v448);
    v1326 = ((v493 & (v1417 ^ ((v455 & v1417) >> 1))) >> v408) + ((v1589 & (v1417 ^ ((v455 & v1417) >> 1))) << v448);
    v1290 = ((v482 & (v1267 ^ ((v1267 & v1565) >> 1))) << v448) ^ (((v1267 ^ ((v1267 & v1565) >> 1)) & v371) >> v408);
    v985 = ((v1589 & (v1003 ^ ((v455 & v1003) >> 1))) << v448) ^ (((v1003 ^ ((v455 & v1003) >> 1)) & v371) >> v1591);
    v981 = ((v493 & (v1553 ^ ((v455 & v1553) >> 1))) >> v408) + ((v1589 & (v1553 ^ ((v455 & v1553) >> 1))) << v479);
    v977 = ((v493 & (v1301 ^ ((v1301 & v455) >> 1))) >> v1591) | (((v1301 ^ ((v1301 & v455) >> 1)) & v1589) << v479);
    v963 = (((v1284 ^ ((v1284 & v1565) >> 1)) & v493) >> v408) + (((v1284 ^ ((v1284 & v1565) >> 1)) & v1589) << v448);
    v973 = (((v1311 ^ ((v1311 & v1565) >> 1)) & v1589) << v448) | (((v1311 ^ ((v1311 & v1565) >> 1)) & v371) >> v1591);
    v975 = ((v482 & (v998 ^ ((v1565 & v998) >> 1))) << v448) | ((v493 & (v998 ^ ((v1565 & v998) >> 1))) >> v408);
    v969 = ((v482 & (v1306 ^ ((v1306 & v455) >> 1))) << v448) ^ (((v1306 ^ ((v1306 & v455) >> 1)) & v371) >> v1591);
    v971 = ((v482 & (v1000 ^ ((v455 & v1000) >> 1))) << v479) + (((v1000 ^ ((v455 & v1000) >> 1)) & v371) >> v408);
    v967 = ((v482 & (v1371 ^ ((v455 & v1371) >> 1))) << v479) ^ ((v493 & (v1371 ^ ((v455 & v1371) >> 1))) >> v408);
    v965 = ((v493 & (v1059 ^ ((v455 & v1059) >> 1))) >> v1591) + ((v1589 & (v1059 ^ ((v455 & v1059) >> 1))) << v448);
    v495 = (((v987 ^ ((v987 & v455) >> 1)) & v482) << v479) ^ (((v987 ^ ((v987 & v455) >> 1)) & v493) >> v408);
    v1437 = v1358 ^ v985 ^ v973 ^ v1331 ^ v1326 ^ v981 ^ v1425 ^ v965 ^ v977 ^ v1321 ^ v975 ^ v971 ^ v967 ^ v963 ^ v1316 ^ v969 ^ v1290 ^ v495 ^ ((v492 ^ v490) + v997 - 2 * ((v492 ^ v490) & v997));
    v496 = ((v1589 & (v1029 ^ ((v1565 & v1029) >> 1))) << v448) ^ ((v371 & (v1029 ^ ((v1565 & v1029) >> 1))) >> v1591);
    v1030 = ((v482 & (v1023 ^ ((v494 & v1023) >> 1))) << v479) | (((v1023 ^ ((v494 & v1023) >> 1)) & v371) >> v1591);
    v1032 = ((v482 & (v1031 ^ ((v491 & v1031) >> 1))) << v479) + ((v371 & (v1031 ^ ((v491 & v1031) >> 1))) >> v1591);
    v1024 = ((v482 & (v979 ^ ((v491 & v979) >> 1))) << v479) | ((v371 & (v979 ^ ((v491 & v979) >> 1))) >> v1591);
    v497 = ((v482 & (v983 ^ ((v494 & v983) >> 1))) << v448) | ((v493 & (v983 ^ ((v494 & v983) >> 1))) >> v408);
    HIDWORD(v498) = v998;
    LODWORD(v498) = v998;
    v499 = v1386 ^ v1256 ^ v481 ^ v1301 ^ __ROR4__((v498 >> 12) ^ __ROR4__(v1383 ^ v1390 ^ v1547 ^ v471 ^ v1371 ^ v1059 ^ v1379 ^ v1003 ^ v1230 ^ v1000 ^ v480 ^ v1278 ^ v1261 ^ v1352 ^ v1272, 12) ^ 0x81810B44, 20) ^ 0xA25C7E6D;
    v1548 = (((v499 ^ ((v499 & v494) >> 1)) & v371) >> v1591) + (((v499 ^ ((v499 & v494) >> 1)) & v1589) << v448);
    v500 = ((v455 & v1034) >> (v1548 & 1) >> !(v1548 & 1)) ^ v1034;
    v1391 = ((v500 & v1589) << v479) | ((v500 & v371) >> v1591);
    v1387 = ((v1589 & (v1025 ^ ((v494 & v1025) >> 1))) << v479) + (((v1025 ^ ((v494 & v1025) >> 1)) & v371) >> v408);
    v1384 = ((v493 & (v1036 ^ ((v491 & v1036) >> 1))) >> v1591) + ((v1589 & (v1036 ^ ((v491 & v1036) >> 1))) << v448);
    v1353 = ((v482 & (v1045 ^ ((v491 & v1045) >> 1))) << v479) | ((v371 & (v1045 ^ ((v491 & v1045) >> 1))) >> v408);
    v1302 = ((v1589 & (v1041 ^ ((v491 & v1041) >> 1))) << v448) | ((v371 & (v1041 ^ ((v491 & v1041) >> 1))) >> v1591);
    v1380 = ((v493 & (v1049 ^ ((v491 & v1049) >> 1))) >> v408) | ((v1589 & (v1049 ^ ((v491 & v1049) >> 1))) << v479);
    v1372 = ((v1589 & (v1043 ^ ((v494 & v1043) >> 1))) << v479) ^ (((v1043 ^ ((v494 & v1043) >> 1)) & v371) >> v1591);
    v501 = ((v482 & (v1027 ^ ((v494 & v1027) >> 1))) << v479) | ((v493 & (v1027 ^ ((v494 & v1027) >> 1))) >> v408);
    v1279 = ((v482 & (v1047 ^ ((v494 & v1047) >> 1))) << v479) + (((v1047 ^ ((v494 & v1047) >> 1)) & v371) >> v1591);
    v1296 = ((v482 & (v1013 ^ ((v491 & v1013) >> 1))) << v448) ^ ((v371 & (v1013 ^ ((v491 & v1013) >> 1))) >> v408);
    v502 = v1565;
    v503 = v482;
    v504 = ((v482 & (v1057 ^ ((v491 & v1057) >> 1))) << v448) | ((v371 & (v1057 ^ ((v491 & v1057) >> 1))) >> v1591);
    v505 = v1402 ^ v1553 ^ v1413 ^ v1560 ^ v1213 ^ v1394 ^ v1375 ^ v1398 ^ v1409 ^ v1421 ^ v1417 ^ v1405 ^ v1362 ^ v1306 ^ v1311 ^ v1208 ^ v1267 ^ v1367 ^ v1284 ^ v987 ^ 0xB2E83675;
    v1442 = (((v505 ^ ((v505 & v491) >> 1)) & v493) >> v408) ^ (((v505 ^ ((v505 & v491) >> 1)) & v482) << v479);
    v506 = v1460[v1557[10] ^ 0x7BLL];
    v507 = v1452[v1557[11] ^ 0xB2];
    v508 = v1460[v1557[4] ^ 0x9CLL];
    v509 = (v507 ^ (12 * v507)) ^ 0xC0 | ((((v506 >> 3) | (32 * v506)) ^ 0x2E) << 8);
    v510 = v1460[v1557[2] ^ 0xD3];
    v511 = v1092[v1557[14] ^ 0x4FLL];
    v512 = ((((v508 >> 3) | (32 * v508)) ^ 0x93) << 24) | (((v1457[v1557[6] ^ 0x86] + 71) ^ 0xEA) << 8);
    v513 = (((v511 ^ ((v511 ^ 0x79) << 7) ^ (16 * (v511 ^ 0x79))) ^ 0xDC) << 8) | (((v1457[v1557[13] ^ 0xB4] + 71) ^ 0xE3) << 16);
    v514 = v509 & 0xFF00FFFF | (((v1457[v1557[8] ^ 0x8DLL] + 71) ^ 0x66666666) << 24) | (((v1457[v1557[9] ^ 0xCFLL] + 71) ^ 0x6B) << 16);
    LOBYTE(v509) = v1092[v1557[1] ^ 0xC0];
    v515 = v1460[*v1557 ^ 0x1ALL];
    v516 = ((((v510 >> 3) | (32 * v510)) ^ 0xBB) << 8) | (((v509 ^ (16 * ((v509 ^ 0x79 ^ (8 * (v509 ^ 0x79))) & 8 | (v509 ^ 0x79) & 7))) ^ 0x55) << 16) | ((((v515 >> 3) | (32 * v515)) ^ 0xA8) << 24);
    v517 = v1460[v1557[7] ^ 0xBLL];
    v518 = v1460[v1557[5] ^ 0xDLL];
    v519 = (v512 & 0xFF00FF00 | ((v517 >> 3) | (32 * v517)) | ((((v518 >> 3) | (32 * v518)) ^ 0x83) << 16)) ^ 0x2A;
    v520 = v516 & 0xFFFFFF00 | (v1457[v1557[3] ^ 0x1FLL] + 71) ^ 0x25;
    v521 = v1092[v1557[12] ^ 0x79];
    v1451 = v494;
    v522 = v513 & 0xFFFFFF00 | (v1457[v1557[15] ^ 0xB5] + 71) ^ 0x8E | ((((v521 ^ 0x79) << 7) ^ (16 * (v521 ^ 0x79)) ^ ((v521 ^ 0x79 ^ -(v521 ^ 0x79) ^ ((v521 ^ 0xBD) + 60)) + 59)) << 24);
    v523 = v514 ^ 0xDB ^ (((v514 ^ 0xDB) & v494) >> 1);
    v1572 = ~(_BYTE)v1571;
    v524 = (((v522 ^ ((v522 & v502) >> 1)) & v1589) << v448) | (((v522 ^ ((v522 & v502) >> 1)) & v461) >> v1591);
    v1524 = v408;
    v525 = ((((v520 ^ ((v520 & v494) >> 1)) & v503) << v479) | (((v520 ^ ((v520 & v494) >> 1)) & v493) >> v1591)) ^ (((v461 & (v1580 & 0x55474600 ^ 0xAA8E8C01)) >> v408) + ((v1589 & (v1580 & 0x55474600 ^ 0xAA8E8C01)) << v448));
    v1584 = v493;
    v1595 = v461;
    v526 = ((v503 & (v1577 & 0x6F6AF2A7 ^ 0xDED5E54F)) << v479) ^ ((v493 & (v1577 & 0x6F6AF2A7 ^ 0xDED5E54F)) >> v1591) ^ (((v519 ^ ((v519 & v502) >> 1)) & v461) >> v408) ^ (((v519 ^ ((v519 & v502) >> 1)) & v1589) << v448);
    v1575 = v503;
    v1587 = v479;
    v527 = ((v523 & v493) >> v408) ^ (((v493 & (v1577 & 0xAE2004A ^ 0x15C40094)) >> v408)
                                    + ((v1589 & (v1577 & 0xAE2004A ^ 0x15C40094)) << v448)) ^ ((v523 & v503) << v479);
    v528 = ((v503 & (v1580 & 0x7663E1FA ^ 0xECC7C3F5)) << v479) ^ ((v461 & (v1580 & 0x7663E1FA ^ 0xECC7C3F5)) >> v1591) ^ v524;
    v529 = v496;
    v530 = v497 + v496;
    v531 = (1827449145 * (v526 + v530)) ^ ((1827449145 * (v526 + v530)) >> 16);
    v532 = 658922119 * (v528 + (v531 ^ (v531 >> 8))) - ((658922119 * (v528 + (v531 ^ (v531 >> 8)))) >> 16);
    v533 = v532 & 0x2000;
    v534 = v1567;
    v535 = v532 >> 8;
    if (((unsigned __int16)v533 & (v532 >> 8)) != 0)
      v533 = -v533;
    v536 = -1185646693 * (((v533 + v535) ^ v532 & 0xFFFFDFFF) + v525);
    v537 = ((v1335 - v536) ^ v536) + 2 * ((v1335 - v536) & v536);
    v538 = (v536 ^ HIWORD(v536)) + v527 - ((v536 ^ HIWORD(v536)) >> 8);
    v539 = v495;
    v540 = (1827449145 * (v495 + v1358 + v526)) ^ ((1827449145 * (v495 + v1358 + v526)) >> 16);
    v541 = 658922119 * (v528 + (v540 ^ (v540 >> 8))) - ((658922119 * (v528 + (v540 ^ (v540 >> 8)))) >> 16);
    v542 = ((v541 ^ (v541 >> 8)) + v1021 - 2 * ((v541 ^ (v541 >> 8)) & v1021)) ^ v541 ^ (v541 >> 8);
    v1050 = v525;
    v543 = (-1185646693 * ((v535 ^ v532) + v525)) ^ ((-1185646693 * ((v535 ^ v532) + v525)) >> 16);
    v544 = -250669251 * (v543 + v527 - (v543 >> 8)) - ((-250669251 * (v543 + v527 - (v543 >> 8))) >> 16);
    v545 = v544 - v1567 - (v544 >> 8);
    v546 = (v526 ^ v530) + 2 * (v526 & v530);
    v1048 = v546 - v530;
    v547 = 658922119
         * (v528
          + ((1827449145 * v546) ^ ((1827449145 * v546) >> 16) ^ (((1827449145 * v546) ^ ((1827449145 * v546) >> 16)) >> 8)));
    v548 = -1185646693 * (((v547 - HIWORD(v547)) ^ ((v547 - HIWORD(v547)) >> 8)) + v525);
    v549 = -250669251 * ((v548 ^ HIWORD(v548)) + v527 - ((v548 ^ HIWORD(v548)) >> 8));
    v1554 = v1447
          - v1567
          + -250669251 * v538
          - ((-250669251 * v538) >> 16)
          - ((-250669251 * v538 - ((-250669251 * v538) >> 16)) >> 8);
    v1060 = v1085 - v1567 + v1088 + v549 - HIWORD(v549) - ((v549 - HIWORD(v549)) >> 8);
    v551 = v993;
    v550 = v995;
    if ((v545 & 1) != 0)
      v552 = v995;
    else
      v552 = v993;
    v1458 = v552;
    if ((v545 & 1) == 0)
      v551 = v991;
    v1268 = v551;
    if ((v545 & 1) != 0)
      v550 = v989;
    v1093 = v550;
    if ((v545 & 1) != 0)
      v553 = v991;
    else
      v553 = v989;
    v1262 = v553;
    v554 = v1064;
    if ((v545 & 1) != 0)
      v555 = v1039;
    else
      v555 = v1064;
    v1453 = v555;
    v556 = v1052;
    if ((v545 & 1) == 0)
      v554 = v1052;
    v1336 = v554;
    v557 = v1055;
    if ((v545 & 1) == 0)
      v556 = v1055;
    v1368 = v556;
    if ((v545 & 1) == 0)
      v557 = v1039;
    v1089 = v557;
    v558 = v1069;
    v559 = v1018;
    if ((v545 & 1) != 0)
      v560 = v1018;
    else
      v560 = v1069;
    v1422 = v560;
    v561 = v1074;
    if ((v545 & 1) == 0)
      v558 = v1074;
    v1312 = v558;
    if ((v545 & 1) != 0)
      v559 = v483;
    v1257 = v559;
    if ((v545 & 1) == 0)
      v561 = v483;
    v1307 = v561;
    v562 = v1015;
    if ((v545 & 1) != 0)
      v563 = v1011;
    else
      v563 = v1015;
    v1414 = v563;
    if ((v545 & 1) == 0)
      v562 = v537;
    v1410 = v562;
    if ((v545 & 1) == 0)
      v537 = v1002;
    v1231 = v537;
    if ((v545 & 1) != 0)
      v564 = v1002;
    else
      v564 = v1011;
    v1285 = v564;
    v565 = v1341;
    v566 = v1005;
    if ((v545 & 1) != 0)
      v567 = v1341;
    else
      v567 = v1005;
    v1406 = v567;
    if ((v545 & 1) == 0)
      v566 = v1007;
    v1418 = v566;
    if ((v545 & 1) != 0)
      v565 = v1009;
    v1403 = v565;
    if ((v545 & 1) != 0)
      v568 = v1007;
    else
      v568 = v1009;
    v1214 = v568;
    v569 = v997;
    if ((v545 & 1) != 0)
      v570 = v1290;
    else
      v570 = v997;
    v1399 = v570;
    v571 = v1347;
    if ((v545 & 1) == 0)
      v569 = v1347;
    v1395 = v569;
    if ((v545 & 1) == 0)
      v571 = v985;
    v1209 = v571;
    if ((v545 & 1) != 0)
      v572 = v985;
    else
      v572 = v1290;
    v1291 = v572;
    v573 = v963;
    if ((v545 & 1) != 0)
      v574 = v973;
    else
      v574 = v963;
    v1363 = v574;
    v575 = v977;
    if ((v545 & 1) == 0)
      v573 = v977;
    v1376 = v573;
    v576 = v981;
    if ((v545 & 1) == 0)
      v575 = v981;
    v1037 = v575;
    if ((v545 & 1) == 0)
      v576 = v973;
    v1273 = v576;
    if ((v545 & 1) != 0)
      v577 = v504;
    else
      v577 = v501;
    v1461 = v577;
    if ((v545 & 1) != 0)
      v578 = v501;
    else
      v578 = v1279;
    v1026 = v578;
    if ((v545 & 1) != 0)
      v579 = v1279;
    else
      v579 = v1296;
    v1348 = v579;
    if ((v545 & 1) != 0)
      v580 = v1296;
    else
      v580 = v504;
    v581 = v975;
    if ((v545 & 1) != 0)
      v582 = v969;
    else
      v582 = v975;
    if ((v545 & 1) == 0)
      v581 = v965;
    v1042 = v581;
    if ((v545 & 1) != 0)
      v583 = v965;
    else
      v583 = v967;
    if ((v545 & 1) != 0)
      v584 = v967;
    else
      v584 = v969;
    if ((v545 & 1) != 0)
      v585 = v1353;
    else
      v585 = v1302;
    v1342 = v585;
    if ((v545 & 1) != 0)
      v586 = v1302;
    else
      v586 = v1380;
    v1022 = v586;
    if ((v545 & 1) != 0)
      v587 = v1372;
    else
      v587 = v1353;
    if ((v545 & 1) != 0)
      v588 = v1380;
    else
      v588 = v1372;
    v589 = v1316;
    if ((v545 & 1) != 0)
      v590 = v1316;
    else
      v590 = v971;
    v1035 = v590;
    if ((v545 & 1) != 0)
      v591 = v971;
    else
      v591 = v1358;
    if ((v545 & 1) != 0)
      v592 = v1358;
    else
      v592 = v1321;
    if ((v545 & 1) != 0)
    {
      v589 = v1321;
      v593 = v1387;
    }
    else
    {
      v593 = v1384;
    }
    v1019 = v593;
    if ((v545 & 1) != 0)
      v594 = v1391;
    else
      v594 = v1387;
    if ((v545 & 1) != 0)
      v595 = v497;
    else
      v595 = v1391;
    if ((v545 & 1) != 0)
      v596 = v1384;
    else
      v596 = v497;
    if ((v545 & 1) != 0)
      v597 = v1326;
    else
      v597 = v539;
    v1016 = v597;
    if ((v545 & 1) != 0)
      v598 = v539;
    else
      v598 = v1425;
    v1028 = v598;
    if ((v545 & 1) != 0)
      v599 = v1425;
    else
      v599 = v1331;
    if ((v545 & 1) != 0)
      v600 = v1331;
    else
      v600 = v1326;
    if ((v545 & 1) != 0)
      v601 = v529;
    else
      v601 = v1030;
    v1426 = v601;
    if ((v545 & 1) != 0)
      v602 = v1024;
    else
      v602 = v529;
    v1354 = v602;
    if ((v545 & 1) != 0)
      v603 = v1032;
    else
      v603 = v1024;
    if ((v545 & 1) != 0)
      v604 = v1030;
    else
      v604 = v1032;
    v605 = v1194;
    if ((v545 & 1) != 0)
      v606 = v1194;
    else
      v606 = v542;
    if ((v545 & 1) != 0)
      v605 = v1185;
    v1033 = v605;
    if ((v545 & 1) != 0)
      v607 = v1082;
    else
      v607 = v1185;
    if ((v545 & 1) != 0)
      v608 = v542;
    else
      v608 = v1082;
    v609 = v1076;
    if ((v545 & 1) != 0)
      v610 = v1076;
    else
      v610 = v1198;
    v1040 = v610;
    if ((v545 & 1) != 0)
      v611 = v1198;
    else
      v611 = v1079;
    if ((v545 & 1) != 0)
      v612 = v1079;
    else
      v612 = v1061;
    if ((v545 & 1) != 0)
      v609 = v1061;
    v1561 = v545 + v1447;
    v613 = (v545 & 2) == 0;
    if ((v545 & 2) != 0)
      v614 = v1268;
    else
      v614 = v1093;
    v1044 = v614;
    if ((v545 & 2) != 0)
      v615 = v1093;
    else
      v615 = v1268;
    v1046 = v615;
    v616 = v1262;
    if (v613)
      v617 = v1262;
    else
      v617 = v1458;
    v1053 = v617;
    if (v613)
    {
      v616 = v1458;
      v618 = v1336;
    }
    else
    {
      v618 = v1089;
    }
    v1056 = v618;
    if (v613)
      v619 = v1089;
    else
      v619 = v1336;
    v1062 = v619;
    if (v613)
      v620 = v1368;
    else
      v620 = v1453;
    v1065 = v620;
    if (v613)
      v621 = v1453;
    else
      v621 = v1368;
    v1058 = v621;
    if (v613)
      v622 = v1257;
    else
      v622 = v1312;
    v1075 = v622;
    if (v613)
      v623 = v1312;
    else
      v623 = v1257;
    v1067 = v623;
    if (v613)
      v624 = v1307;
    else
      v624 = v1422;
    v1070 = v624;
    if (v613)
      v625 = v1422;
    else
      v625 = v1307;
    v1077 = v625;
    if (v613)
      v626 = v1414;
    else
      v626 = v1231;
    v1080 = v626;
    if (v613)
      v627 = v1231;
    else
      v627 = v1414;
    v1090 = v627;
    if (v613)
      v628 = v1285;
    else
      v628 = v1410;
    v1086 = v628;
    if (v613)
      v629 = v1410;
    else
      v629 = v1285;
    v1083 = v629;
    if (v613)
      v630 = v1214;
    else
      v630 = v1406;
    v1094 = v630;
    if (v613)
      v631 = v1406;
    else
      v631 = v1214;
    v1186 = v631;
    if (v613)
      v632 = v1418;
    else
      v632 = v1403;
    v1199 = v632;
    if (v613)
      v633 = v1403;
    else
      v633 = v1418;
    v1195 = v633;
    if (v613)
      v634 = v1209;
    else
      v634 = v1399;
    v1232 = v634;
    if (v613)
      v635 = v1399;
    else
      v635 = v1209;
    v1258 = v635;
    if (v613)
      v636 = v1395;
    else
      v636 = v1291;
    v1215 = v636;
    if (v613)
      v637 = v1291;
    else
      v637 = v1395;
    v1210 = v637;
    if (v613)
      v638 = v1363;
    else
      v638 = v1037;
    v1269 = v638;
    if (v613)
      v639 = v1037;
    else
      v639 = v1363;
    v1263 = v639;
    if (v613)
      v640 = v1273;
    else
      v640 = v1376;
    v1280 = v640;
    if (v613)
      v641 = v1376;
    else
      v641 = v1273;
    v1274 = v641;
    if (v613)
      v642 = v1026;
    else
      v642 = v580;
    v1364 = v642;
    if (v613)
      v643 = v580;
    else
      v643 = v1026;
    v1369 = v643;
    if (v613)
      v644 = v583;
    else
      v644 = v582;
    v1286 = v644;
    if (v613)
      v645 = v582;
    else
      v645 = v583;
    v1297 = v645;
    if (v613)
      v646 = v1348;
    else
      v646 = v1461;
    v1373 = v646;
    if (v613)
      v647 = v1461;
    else
      v647 = v1348;
    v1359 = v647;
    if (v613)
      v648 = v584;
    else
      v648 = v1042;
    v1303 = v648;
    if (v613)
      v649 = v1042;
    else
      v649 = v584;
    v1292 = v649;
    if (v613)
      v650 = v587;
    else
      v650 = v1022;
    v1388 = v650;
    if (v613)
      v651 = v1022;
    else
      v651 = v587;
    v1381 = v651;
    if (v613)
      v652 = v588;
    else
      v652 = v1342;
    v1385 = v652;
    if (v613)
      v653 = v1342;
    else
      v653 = v588;
    v1377 = v653;
    if (v613)
      v654 = v591;
    else
      v654 = v589;
    v1322 = v654;
    if (!v613)
      v589 = v591;
    v1317 = v589;
    if (v613)
      v655 = v1035;
    else
      v655 = v592;
    v1308 = v655;
    if (v613)
      v656 = v592;
    else
      v656 = v1035;
    v1313 = v656;
    if (v613)
      v657 = v595;
    else
      v657 = v1019;
    v1396 = v657;
    if (v613)
      v658 = v1019;
    else
      v658 = v595;
    v1392 = v658;
    if (v613)
      v659 = v596;
    else
      v659 = v594;
    v1404 = v659;
    if (v613)
      v660 = v594;
    else
      v660 = v596;
    v1400 = v660;
    if (v613)
      v661 = v1016;
    else
      v661 = v599;
    v1327 = v661;
    if (v613)
      v662 = v599;
    else
      v662 = v1016;
    v1343 = v662;
    if (v613)
      v663 = v1028;
    else
      v663 = v600;
    v1332 = v663;
    if (v613)
      v664 = v600;
    else
      v664 = v1028;
    v1337 = v664;
    if (v613)
      v665 = v603;
    else
      v665 = v1426;
    v1407 = v665;
    if (v613)
      v666 = v1426;
    else
      v666 = v603;
    v1411 = v666;
    if (v613)
      v667 = v607;
    else
      v667 = v606;
    v1349 = v667;
    if (v613)
      v607 = v606;
    v1427 = v607;
    if (v613)
      v668 = v1354;
    else
      v668 = v604;
    v1419 = v668;
    if (v613)
      v669 = v604;
    else
      v669 = v1354;
    v1415 = v669;
    if (v613)
      v670 = v1033;
    else
      v670 = v608;
    v1355 = v670;
    if (v613)
      v671 = v608;
    else
      v671 = v1033;
    v1423 = v671;
    if (v613)
      v672 = v609;
    else
      v672 = v611;
    v1459 = v672;
    if (v613)
      v673 = v611;
    else
      v673 = v609;
    v1454 = v673;
    if (v613)
      v674 = v612;
    else
      v674 = v1040;
    v1448 = v674;
    if (v613)
      v675 = v1040;
    else
      v675 = v612;
    v1462 = v675;
    v676 = v1048;
    if ((v1554 & 1) != 0)
      v677 = v527;
    else
      v677 = v1048;
    if ((v1554 & 1) != 0)
    {
      v678 = v528;
    }
    else
    {
      v676 = v1050;
      v678 = v527;
    }
    if ((v1554 & 1) != 0)
      v679 = v1050;
    else
      v679 = v528;
    if ((v1554 & 2) != 0)
      v680 = v677;
    else
      v680 = v679;
    if ((v1554 & 2) != 0)
    {
      v677 = v679;
      v681 = v676;
    }
    else
    {
      v681 = v678;
    }
    if ((v1554 & 2) != 0)
      v676 = v678;
    v682 = v1577 & 0x7EC54C67 ^ 0xFD8A98CE;
    v683 = v1580;
    v684 = v1542 ^ v1072 ^ (((v1575 & v682) << v1572) | ((v1584 & v682) >> v1591)) ^ v1433 ^ v616 ^ v680;
    v685 = v1433 ^ v1072 ^ (((v1589 & ((v683 & 0x2454421 | 0xFD8A98CE) ^ v683 & 0x7C800846)) << v1587)
                          + ((v1595 & ((v683 & 0x2454421 | 0xFD8A98CE) ^ v683 & 0x7C800846)) >> v1524)) ^ v1542 ^ v1044 ^ v676;
    v686 = v1433 ^ v1072 ^ (((v1589 & v682) << v1587) + ((v682 & v1595) >> v1591)) ^ v1542 ^ v1046 ^ v681;
    v687 = v1542 ^ v1072 ^ (((v1575 & (v683 & 0x7EC54C67 ^ 0xFD8A98CE)) << v1572)
                          + ((v1584 & (v683 & 0x7EC54C67 ^ 0xFD8A98CE)) >> v1524)) ^ v1433 ^ v1053 ^ v677;
    v688 = (_DWORD *)(v1567 + 4 * BYTE1(v684));
    v689 = v1567 + 4 * HIBYTE(v685);
    v690 = (_DWORD *)(v1567 + 4 * HIBYTE(v687));
    v691 = (_DWORD *)(v1567 + 4 * v685);
    v692 = *(_DWORD *)(v1567 + 4 * BYTE2(v687));
    v693 = *(_DWORD *)(v1567 + 4 * BYTE2(v685)) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v687)), 8);
    v694 = v1567 + 4 * BYTE1(v685);
    v695 = (_DWORD *)(v1567 + 4 * v684);
    v696 = v693 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * HIBYTE(v684)), 24);
    v697 = (_DWORD *)(v1567 + 4 * BYTE2(v684));
    v698 = (_DWORD *)(v1567 + 4 * v687);
    v699 = v696 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v686), 16);
    v700 = v1580 & 0x2E0C34C6 ^ 0x5C18698D;
    v701 = (v1595 & v700) >> v1524;
    v702 = v1533 ^ v1189 ^ (((v1575 & v700) << v1572) | v701) ^ *(_DWORD *)(v1567 + 4 * BYTE2(v686)) ^ __ROR4__(*v688, 8) ^ __ROR4__(*v690, 24) ^ __ROR4__(*v691, 16) ^ v1561 ^ v1056 ^ v1554;
    v703 = v1577 & 0x2E0C34C6 ^ 0x5C18698D;
    v704 = (v1584 & v703) >> v1591;
    LODWORD(v698) = v1533 ^ v1189 ^ ((v1589 & v703) << v1587) ^ v704 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * HIBYTE(v686)), 24) ^ __ROR4__(*(_DWORD *)v694, 8) ^ *v697 ^ __ROR4__(*v698, 16) ^ v1058;
    v705 = v1533 ^ v1189 ^ (((v1575 & v703) << v1572) + v704) ^ v1062 ^ (v1060 + 1 + v699 - v1554);
    v706 = v1533 ^ v1189 ^ ((v1589 & v700) << v1587) ^ v701 ^ __ROR4__(*(_DWORD *)v689, 24) ^ v692 ^ __ROR4__(*v695, 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v686)), 8) ^ v1065;
    v1190 = *(_DWORD *)(v1567 + 4 * BYTE2(v702));
    v707 = v1580 & 0x39C93039 ^ 0x73926072;
    v708 = (v1575 & v707) << v1572;
    v709 = v1203 ^ v1542 ^ (v708 + ((v1595 & v707) >> v1591)) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v702)), 8) ^ __ROR4__(*(_DWORD *)(v1567+ 4 * HIBYTE(v705)), 24) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v698), 16) ^ *(_DWORD *)(v1567 + 4 * BYTE2(v706)) ^ v1067;
    LODWORD(v690) = v1577 & 0x39C93039 ^ 0x73926072;
    LODWORD(v691) = (v1589 & v690) << v1587;
    LODWORD(v688) = v1203 ^ v1542 ^ (((v1584 & v690) >> v1524) + (_DWORD)v691) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v706)), 8) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * (v698 >> 24)), 24) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v702), 16) ^ v1070 ^ *(_DWORD *)(v1567 + 4 * BYTE2(v705));
    v710 = v1203 ^ v1542 ^ (v691 | ((v690 & v1595) >> v1524)) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v706), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * HIBYTE(v702)), 24) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v705)), 8) ^ *(_DWORD *)(v1567 + 4 * BYTE2(v698)) ^ v1075;
    v711 = v1203 ^ v1542 ^ (v708 | ((v1584 & v707) >> v1591)) ^ v1190 ^ __ROR4__(*(_DWORD *)(v1567+ 4 * HIBYTE(v706)), 24) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v698)), 8) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v705), 16) ^ v1077;
    LODWORD(v689) = *(_DWORD *)(v1567 + 4 * BYTE1(v711));
    v712 = *(_DWORD *)(v1567 + 4 * v711);
    LODWORD(v694) = *(_DWORD *)(v1567 + 4 * HIBYTE(v711));
    v713 = (_DWORD *)(v1567 + 4 * BYTE2(v709));
    v714 = (_DWORD *)(v1567 + 4 * (v688 >> 24));
    LODWORD(v690) = *(_DWORD *)(v1567 + 4 * BYTE2(v711)) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v688), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * HIBYTE(v709)), 24);
    v715 = *(_DWORD *)(v1567 + 4 * v710);
    v716 = (_DWORD *)(v1567 + 4 * BYTE1(v709));
    v717 = (_DWORD *)(v1567 + 4 * BYTE2(v688));
    v718 = (_DWORD *)(v1567 + 4 * BYTE1(v688));
    v719 = (_DWORD *)(v1567 + 4 * HIBYTE(v710));
    LODWORD(v690) = (v690 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v710)), 8))
                  + (__ROR4__(*((_DWORD *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957F8D0)) + v1437 % 0x101 - 1), 6) ^ 0x930C33C8)
                  + (*((_DWORD *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957FF9F)) + (v1548 ^ v1442) % 0x101 - 2) ^ 0x78357580);
    v720 = (v1565 >> 1) & 0x3C233C3F ^ 0x7846787F;
    v721 = v1218 ^ v1542 ^ ((v1584 & v720) >> v1591) ^ ((v1575 & v720) << v1572) ^ __ROR4__(v694, 24) ^ v1080 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v709), 16) ^ __ROR4__(*v718, 8) ^ *(_DWORD *)(v1567 + 4 * BYTE2(v710));
    v722 = v1577 & 0x3C233C3F ^ 0x7846787F;
    LODWORD(v694) = v1218 ^ v1542 ^ ((v1589 & v722) << v1587) ^ ((v722 & v1595) >> v1524) ^ v1083 ^ ((_DWORD)v690 + 1);
    v723 = v1218 ^ v1542 ^ ((v1584 & v722) >> v1591) ^ ((v1575 & v722) << v1587) ^ __ROR4__(v712, 16) ^ v1086 ^ __ROR4__(*v716, 8) ^ *v717 ^ __ROR4__(*v719, 24);
    LODWORD(v689) = v1218 ^ v1542 ^ (((v1595 & v720) >> v1524) | ((v1589 & v720) << v1572)) ^ __ROR4__(v689, 8) ^ *v713 ^ v1090 ^ __ROR4__(*v714, 24) ^ __ROR4__(v715, 16);
    v724 = v1580 & 0x6D9AB1C5 ^ 0xDB35638B;
    v725 = v1221 ^ v1225 ^ ((v1595 & v724) >> v1524) ^ ((v1575 & v724) << v1587) ^ v1094 ^ *(_DWORD *)(v1567 + 4 * BYTE2(v689)) ^ (*(_DWORD *)(v1567 + 4 * BYTE1(v694)) >> 8) ^ (*(_DWORD *)(v1567 + 4 * BYTE1(v694)) << 24) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v721), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * HIBYTE(v723)), 24);
    LODWORD(v714) = v1577 & 0x6D9AB1C5 ^ 0xDB35638B;
    LODWORD(v713) = v1221 ^ v1225 ^ ((v1589 & v714) << v1572) ^ ((v1584 & v714) >> v1591) ^ v1186 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v689), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v723)), 8) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE3(v694)), 24) ^ *(_DWORD *)(v1567 + 4 * BYTE2(v721));
    LODWORD(v719) = v1221 ^ v1225 ^ (((v1584 & v724) >> v1524) + ((v1589 & v724) << v1572)) ^ v1195 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * (v1218 ^ v1542 ^ ((v1589 & v722) << v1587) ^ ((v722 & v1595) >> v1524) ^ v1083 ^ ((_BYTE)v690 + 1))), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * HIBYTE(v721)), 24) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v689)), 8) ^ *(_DWORD *)(v1567 + 4 * BYTE2(v723));
    v726 = v1221 ^ v1225 ^ ((v714 & v1595) >> v1591) ^ ((v1575 & v714) << v1587) ^ v1199 ^ *(_DWORD *)(v1567 + 4 * BYTE2(v694)) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v723), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v721)), 8);
    v727 = __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE3(v689)), 24);
    v1226 = *(_DWORD *)(v1567 + 4 * v719);
    v1204 = *(_DWORD *)(v1567 + 4 * (v713 >> 24));
    LODWORD(v694) = *(_DWORD *)(v1567 + 4 * BYTE2(v719));
    v1222 = *(_DWORD *)(v1567 + 4 * BYTE1(v713));
    LODWORD(v717) = *(_DWORD *)(v1567 + 4 * HIBYTE(v725));
    LODWORD(v697) = v719 >> 24;
    v728 = v1577 & 0x6DD75D61 ^ 0xDBAEBAC3;
    LODWORD(v689) = v1542 ^ v1429 ^ (((v1575 & v728) << v1572) + ((v1584 & v728) >> v1524)) ^ v1210 ^ *(_DWORD *)(v1567 + 4 * BYTE2(v713)) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v725), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v719)), 8);
    v729 = v1567;
    LODWORD(v689) = v689 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * ((v726 ^ v727) >> 24)), 24);
    v730 = v1580 & 0x6DD75D61 ^ 0xDBAEBAC3;
    LODWORD(v713) = v1542 ^ v1429 ^ (((v1589 & v730) << v1587) + ((v1595 & v730) >> v1591)) ^ v1215 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v713), 16) ^ *(_DWORD *)(v729 + 4 * BYTE2(v725)) ^ __ROR4__(*(_DWORD *)(v729 + 4 * v697), 24) ^ __ROR4__(*(_DWORD *)(v729 + 4 * ((unsigned __int16)(v726 ^ v727) >> 8)), 8);
    v731 = v1542 ^ v1429 ^ (((v1575 & v730) << v1587) | ((v1584 & v730) >> v1524)) ^ v1232 ^ v694 ^ __ROR4__(v1204, 24) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * (v726 ^ v727)), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v725)), 8);
    v732 = (v1577 & 0x6DD75D61 ^ -(v1577 & 0x6DD75D61) ^ (-609305917 - v728)) - 609305917;
    v733 = ((v732 & v1589) << v1572) ^ ((v732 & v1595) >> v1591) ^ v1542 ^ v1429 ^ v1442 ^ v1548 ^ v1437 ^ v1258 ^ *(_DWORD *)(v1567 + 4 * ((v726 ^ v727) >> 16)) ^ __ROR4__(v1226, 16) ^ __ROR4__(v1222, 8) ^ __ROR4__((_DWORD)v717, 24);
    HIDWORD(v734) = *(_DWORD *)(v1567 + 4 * BYTE1(v733));
    LODWORD(v734) = HIDWORD(v734);
    v735 = (v734 >> 8) ^ __ROR4__(*(_DWORD *)(v1567 + ((v731 >> 22) & 0x3FC)), 24);
    HIDWORD(v734) = *(_DWORD *)(v1567 + 4 * HIBYTE(v733));
    LODWORD(v734) = HIDWORD(v734);
    v1233 = *(_DWORD *)(v729 + 4 * BYTE2(v733)) ^ __ROR4__(*(_DWORD *)(v729 + 4 * v731), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v689)), 8) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * (v713 >> 24)), 24);
    v1259 = (v734 >> 24) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v713), 16) ^ __ROR4__(*(_DWORD *)(v1567 + 4 * BYTE1(v731)), 8) ^ *(_DWORD *)(v1567 + 4 * BYTE2(v689));
    v1568 = (v735 ^ __ROR4__(*(_DWORD *)(v1567 + 4 * v689), 16) ^ *(_DWORD *)(v1567
                                                                                               + 4 * BYTE2(v713)))
          + v1060
          + 1
          - v1554;
    v1543 = v1554 ^ v1561 ^ *(_DWORD *)(v534 + 4 * BYTE2(v731)) ^ __ROR4__(*(_DWORD *)(v534 + 4 * v733), 16) ^ __ROR4__(*(_DWORD *)(v534 + 4 * BYTE3(v689)), 24) ^ __ROR4__(*(_DWORD *)(v534+ 4 * BYTE1(v713)), 8);
    LODWORD(v690) = v1236 ^ v1240;
    v1241 = v1580 & 0x4EC829F2 ^ 0x9D9053E4;
    LODWORD(v689) = (v1595 & v1241) >> v1591;
    v1237 = (v1589 & v1241) << v1587;
    LODWORD(v714) = v690 ^ (v1237 | v689) ^ v1263;
    v1223 = ((v1451 & 0x9D9053E4) >> 1) ^ 0x9D9053E4;
    v1264 = (v1584 & v1223) >> v1524;
    v1227 = (v1575 & v1223) << v1572;
    LODWORD(v734) = __ROR4__(__ROR4__(v1451 & 0x9D9053E4, 5) ^ 0xC2903733, 28);
    v1443 = (int)v690;
    v736 = v690 ^ (((v1575 & (v734 ^ 0xB49320D8)) << v1572) | ((v1584 & (v734 ^ 0xB49320D8)) >> v1524)) ^ v1274;
    v737 = v690 ^ (v1227 | v1264) ^ v1269 ^ v1543;
    v1219 = v690 ^ v1237 ^ v689;
    v1549 = *(_DWORD *)(v534 + 4 * BYTE2(v737));
    v1438 = *(_DWORD *)(v534 + 4 * BYTE1(v737));
    LODWORD(v729) = v1219 ^ v1280 ^ v1568;
    v738 = (_DWORD *)(v534 + 4 * (v690 ^ (v1227 | v1264) ^ v1269 ^ v1543));
    LODWORD(v714) = v714 ^ v1233;
    LODWORD(v716) = *(_DWORD *)(v534 + ((v737 >> 22) & 0x3FC));
    LODWORD(v737) = v736 ^ v1259;
    v739 = v534 + 4 * ((unsigned __int16)(v736 ^ v1259) >> 8);
    v740 = v534;
    v741 = 4 * BYTE3(v729);
    v742 = *(_DWORD *)(v534 + 4 * (v1219 ^ v1280 ^ v1568));
    v1281 = (v1589 & v1244) << v1587;
    LODWORD(v689) = v1580 & 0x5479705B ^ 0xA8F2E0B6;
    v1216 = (v1575 & v689) << v1587;
    v743 = v1529 ^ ((v1584 & v1244) >> v1591) ^ v1281;
    v1275 = v1595 & v689;
    v1211 = (v1595 & v689) >> v1591;
    LODWORD(v694) = v743 ^ v1211 ^ v1216 ^ v1286 ^ *(_DWORD *)(v534 + 4 * BYTE2(v729)) ^ __ROR4__((_DWORD)v716, 24) ^ __ROR4__(*(_DWORD *)(v534 + 4 * v737), 16) ^ __ROR4__(*(_DWORD *)(v534 + 4 * BYTE1(v714)), 8);
    LODWORD(v716) = v1577 & 0x5479705B ^ 0xA8F2E0B6;
    v1191 = (v1589 & v716) << v1572;
    v1287 = v1584 & v716;
    v1187 = (v1584 & v716) >> v1524;
    v1196 = v1575 & v716;
    LODWORD(v713) = v743 ^ (((v1575 & v716) << v1572) | v1187) ^ v1297 ^ __ROR4__(v1438, 8) ^ __ROR4__(*(_DWORD *)(v534 + 4 * (v714 >> 24)), 24) ^ *(_DWORD *)(v534 + 4 * BYTE2(v737)) ^ __ROR4__(v742, 16);
    v1205 = v1589 & v689;
    LODWORD(v689) = v743 ^ (((v1589 & v689) << v1587) | v1211) ^ v1303 ^ v1549 ^ __ROR4__(*(_DWORD *)(v534 + 4 * v714), 16) ^ __ROR4__(*(_DWORD *)(v534 + 4 * BYTE1(v729)), 8);
    LODWORD(v734) = __ROR4__(*(_DWORD *)(v534 + 4 * BYTE3(v737)), 24);
    LODWORD(v729) = v689 ^ v734;
    LODWORD(v717) = *(_DWORD *)(v534 + 4 * (v689 ^ v734));
    LODWORD(v738) = v743 ^ (v1187 | v1191) ^ v1292 ^ __ROR4__(*v738, 16) ^ *(_DWORD *)(v534 + 4 * BYTE2(v714)) ^ __ROR4__(*(_DWORD *)v739, 8) ^ __ROR4__(*(_DWORD *)(v534 + v741), 24);
    HIDWORD(v734) = *(_DWORD *)(v534 + 4 * v694);
    LODWORD(v734) = HIDWORD(v734);
    LODWORD(v716) = v734 >> 16;
    HIDWORD(v734) = *(_DWORD *)(v534 + 4 * (v738 >> 24));
    LODWORD(v734) = HIDWORD(v734);
    LODWORD(v716) = (v734 >> 24) + (_DWORD)v716 - 2 * ((v734 >> 24) & v716);
    v744 = (_DWORD *)(v534 + 4 * BYTE2(v713));
    v745 = v1580 & 0x65FE8D16 ^ 0xCBFD1A2D;
    v746 = v1577 & 0x65FE8D16 ^ 0xCBFD1A2D;
    LODWORD(v689) = v1533 ^ v1433;
    v1304 = (v1575 & v745) << v1587;
    v1298 = v1595 & v745;
    v1534 = v1533 ^ v1433 ^ (v1304 | ((v1595 & v745) >> v1524)) ^ v1308 ^ __ROR4__(*(_DWORD *)(v740+ 4 * (v713 >> 24)), 24) ^ __ROR4__(*(_DWORD *)(v740 + 4 * BYTE1(v694)), 8) ^ __ROR4__(*(_DWORD *)(v740 + 4 * v738), 16) ^ *(_DWORD *)(v534 + 4 * BYTE2(v729));
    v1293 = (v1589 & v746) << v1572;
    v1200 = v1584 & v746;
    v1091 = v1584 & v745;
    v1087 = v1589 & v745;
    v1078 = v689;
    v747 = v689 ^ (((v1584 & v745) >> v1591) | ((v1589 & v745) << v1572)) ^ v1317 ^ __ROR4__(*(_DWORD *)(v534+ 4* v713), 16) ^ *(_DWORD *)(v534 + 4 * BYTE2(v694)) ^ __ROR4__(*(_DWORD *)(v534 + 4 * BYTE3(v729)), 24) ^ __ROR4__(*(_DWORD *)(v534 + 4 * BYTE1(v738)), 8);
    v1084 = v746 & v1595;
    v1081 = v1575 & v746;
    LODWORD(v734) = __ROR4__(*(_DWORD *)(v534 + 4 * BYTE1(v729)), 8);
    v748 = v689 ^ (((v1575 & v746) << v1587) + ((v746 & v1595) >> v1524)) ^ v1322 ^ v716 ^ v734 ^ *v744;
    LODWORD(v714) = v689 ^ (((v1584 & v746) >> v1591) + v1293) ^ v1313 ^ __ROR4__((_DWORD)v717, 16) ^ __ROR4__(*(_DWORD *)(v740 + 4 * BYTE1(v713)), 8) ^ __ROR4__(*(_DWORD *)(v740 + 4 * BYTE3(v694)), 24) ^ *(_DWORD *)(v534 + 4 * BYTE2(v738));
    v749 = (_DWORD *)(v534
                    + 4
                    * (v689 ^ (((v1575 & v746) << v1587)
                                              + ((v746 & v1595) >> v1524)) ^ v1322 ^ v716 ^ v734 ^ *(_BYTE *)v744));
    v750 = (_DWORD *)(v534 + 4 * v714);
    v751 = (_DWORD *)(v534 + 4 * BYTE1(v747));
    v752 = (_DWORD *)(v534 + 4 * v747);
    v753 = (_DWORD *)(v534 + 4 * BYTE2(v1534));
    v754 = 4 * (v714 >> 24);
    v755 = v534 + v754;
    v756 = v1247 ^ v1429;
    v757 = v1577 & 0x387B1450 ^ 0x70F628A0;
    v758 = (v1584 & v757) >> v1591;
    v1439 = v1247 ^ v1429 ^ (v758 + ((v1589 & v757) << v1572));
    LODWORD(v739) = v1439 ^ v1327 ^ __ROR4__(*(_DWORD *)(v740 + 4 * HIBYTE(v748)), 24) ^ __ROR4__(*v750, 16) ^ __ROR4__(*v751, 8) ^ *v753;
    v759 = v1580 & 0x387B1450 ^ 0x70F628A0;
    v1434 = (v1575 & v759) << v1587;
    v760 = (v1595 & v759) >> v1524;
    LODWORD(v694) = v1247 ^ v1429 ^ (v1434 | v760) ^ v1332 ^ *(_DWORD *)(v740 + 4 * BYTE2(v748)) ^ __ROR4__(*v752, 16) ^ __ROR4__(*(_DWORD *)(v740 + 4 * BYTE1(v1534)), 8) ^ __ROR4__(*(_DWORD *)(v740 + v754), 24);
    v1333 = (v1575 & v757) << v1572;
    v761 = v1247 ^ v1429;
    LODWORD(v749) = v1247 ^ v1429 ^ v758 ^ v1333 ^ v1337 ^ *(_DWORD *)(v740 + 4 * BYTE2(v747)) ^ __ROR4__(*v749, 16) ^ __ROR4__(*(_DWORD *)(v740 + 4 * BYTE1(v714)), 8) ^ __ROR4__(*(_DWORD *)(v740 + 4 * HIBYTE(v1534)), 24);
    v1248 = (v1589 & v759) << v1587;
    LODWORD(v689) = v756 ^ (v760 & 0x113966F7 ^ v1248 & 0x913966F0 | v1248 & 0x6EC69900 ^ v760 & 0x6EC69908) ^ v1343 ^ *(_DWORD *)(v755 - v754 + 4 * BYTE2(v714)) ^ __ROR4__(*(_DWORD *)(v755 - v754 + 4 * v1534), 16) ^ __ROR4__(*(_DWORD *)(v755 - v754 + 4 * BYTE1(v748)), 8) ^ __ROR4__(*(_DWORD *)(v755 - v754 + 4 * HIBYTE(v747)), 24);
    v1535 = (_DWORD *)(v1519 + 4 * (v749 >> 24));
    v762 = v1519 + 4 * BYTE2(v694);
    v763 = 4 * BYTE3(v739);
    v1520 = (_DWORD *)(v1519 + v763);
    v764 = 4 * v689;
    v765 = &v1520[(unint64_t)v764 / 4 + v763 / 0xFFFFFFFFFFFFFFFCLL];
    v766 = &v765[v764 / 0xFFFFFFFFFFFFFFFCLL];
    v1578 = v766[v694];
    v1581 = v766[v739];
    v767 = 4 * BYTE3(v694);
    v768 = &v766[(unint64_t)v767 / 4];
    v769 = 4 * BYTE2(v749);
    v1344 = &v768[(unint64_t)v769 / 4 + v767 / 0xFFFFFFFFFFFFFFFCLL];
    v770 = 4 * BYTE1(v689);
    v1328 = &v1344[(unint64_t)v770 / 4 + v769 / 0xFFFFFFFFFFFFFFFCLL];
    v771 = 4 * v749;
    v772 = &v1328[(unint64_t)v771 / 4 + v770 / 0xFFFFFFFFFFFFFFFCLL];
    v773 = &v772[v771 / 0xFFFFFFFFFFFFFFFCLL];
    v1318 = &v773[BYTE2(v689)];
    v1309 = &v773[BYTE2(v739)];
    v1095 = &v773[BYTE1(v694)];
    v1430 = v1566 ^ v1156 ^ v1556;
    v1157 = v1430 ^ 0xF1A16B41;
    v1550 = v1430 ^ 0xF1A16B41 ^ v1349 ^ __ROR4__(*v765, 8) ^ __ROR4__(*v768, 16) ^ v773[BYTE1(v749)];
    v774 = v773;
    v1356 = v1430 ^ 0xF1A16B41 ^ v1355 ^ __ROR4__(*(_DWORD *)v762, 24) ^ __ROR4__(*v772, 8) ^ __ROR4__(v773[BYTE3(v689)], 16) ^ v773[BYTE1(v739)];
    LODWORD(v694) = v1219 ^ v1369 ^ v1233;
    LODWORD(v768) = v1443 ^ (v1227 + v1264) ^ v1373 ^ v1259;
    v775 = v1443 ^ (v1227 + ((v1223 & v1595) >> v1524)) ^ v1364 ^ v1543;
    LODWORD(v749) = v1443 ^ (((v1584 & v1241) >> v1591) | v1237) ^ v1359 ^ v1568;
    LODWORD(v762) = *(_DWORD *)(v740 + 4 * BYTE1(v775));
    LODWORD(v765) = *(_DWORD *)(v740 + 4 * BYTE2(v749));
    LODWORD(v772) = *(_DWORD *)(v740
                              + 4 * (v1443 ^ (((v1584 & v1241) >> v1591) | v1237) ^ v1359 ^ v1568));
    v776 = (_DWORD *)(v740 + 4 * (v768 >> 24));
    v777 = (_DWORD *)(v740 + 4 * BYTE2(v694));
    LODWORD(v752) = *(_DWORD *)(v740 + 4 * (v749 >> 24));
    v778 = (_DWORD *)(v740 + 4 * (v1443 ^ (v1227 + ((v1223 & v1595) >> v1524)) ^ v1364 ^ v1543));
    v779 = (_DWORD *)(v740 + 4 * (v1443 ^ (v1227 + v1264) ^ v1373 ^ v1259));
    LODWORD(v713) = *(_DWORD *)(v740 + 4 * HIBYTE(v775));
    v1544 = ((((-1043763876 - v1233) ^ 0xDD9BC1C6) + v1259) ^ 0x5D5951F7) - v1543;
    LODWORD(v689) = *(_DWORD *)(v740 + 4 * BYTE1(v694));
    v780 = (_DWORD *)(v740 + 4 * BYTE1(v749));
    v781 = v740 + 4 * BYTE1(v768);
    v782 = 4 * BYTE3(v694);
    v783 = (_DWORD *)(v740 + v782);
    v784 = 4 * BYTE2(v775);
    v785 = &v783[(unint64_t)v784 / 4 + v782 / 0xFFFFFFFFFFFFFFFCLL];
    v786 = v743 ^ v1191 ^ v1187 ^ v1377 ^ v765 ^ __ROR4__(*v779, 16) ^ __ROR4__((_DWORD)v713, 24) ^ __ROR4__(v689, 8);
    LODWORD(v689) = v743 ^ (v1216 + v1211) ^ v1381 ^ __ROR4__(*v776, 24) ^ __ROR4__(*v780, 8) ^ *v785 ^ __ROR4__(v785[v784 / 0xFFFFFFFFFFFFFFFCLL + (v1219 ^ v1369 ^ v1233)], 16);
    LODWORD(v762) = (v1196 << v1587) ^ v1281 ^ ((v1584 & v1244 ^ v1287) >> v1591) ^ v1529 ^ v1385 ^ __ROR4__(v762, 8) ^ __ROR4__((_DWORD)v772, 16) ^ __ROR4__(*v783, 24) ^ v785[v784 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v768)];
    LODWORD(v781) = v743 ^ ((v1275 >> v1524) | (v1205 << v1572)) ^ v1388 ^ *v777 ^ __ROR4__((_DWORD)v752, 24) ^ __ROR4__(*v778, 16) ^ __ROR4__(*(_DWORD *)v781, 8);
    LODWORD(v783) = v689 >> (v1337 & 0x10) >> (v1337 & 0x10 ^ 0x10);
    LODWORD(v694) = v785[v784 / 0xFFFFFFFFFFFFFFFCLL + BYTE3(v689)];
    v787 = &v785[v784 / 0xFFFFFFFFFFFFFFFCLL + BYTE3(v781)];
    v788 = &v785[v784 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v762)];
    v789 = &v785[v784 / 0xFFFFFFFFFFFFFFFCLL];
    LODWORD(v765) = v785[v784 / 0xFFFFFFFFFFFFFFFCLL + v689];
    LODWORD(v772) = v785[v784 / 0xFFFFFFFFFFFFFFFCLL + BYTE3(v762)];
    v790 = 4 * v781;
    v791 = &v789[(unint64_t)v790 / 4];
    v792 = 4 * v762;
    v793 = &v791[(unint64_t)v792 / 4 + v790 / 0xFFFFFFFFFFFFFFFCLL];
    v794 = &v793[v792 / 0xFFFFFFFFFFFFFFFCLL];
    LODWORD(v689) = v794[BYTE1(v689)];
    v795 = 4 * v783;
    v796 = &v794[(unint64_t)v795 / 4];
    v797 = 4 * v786;
    v798 = &v796[(unint64_t)v797 / 4 + v795 / 0xFFFFFFFFFFFFFFFCLL];
    v799 = 4 * HIBYTE(v786);
    v800 = &v798[v797 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v799 / 4];
    v801 = 4 * BYTE1(v786);
    v802 = &v800[(unint64_t)v801 / 4 + v799 / 0xFFFFFFFFFFFFFFFCLL];
    v803 = &v802[v801 / 0xFFFFFFFFFFFFFFFCLL];
    HIDWORD(v734) = *v800;
    LODWORD(v734) = *v800;
    LODWORD(v765) = (v734 >> 24) ^ __ROR4__((_DWORD)v765, 16);
    LODWORD(v734) = __ROR4__(v803[BYTE1(v762)], 8);
    v804 = v1078 ^ ((v1091 >> v1524) | (v1087 << v1587)) ^ v1392 ^ __ROR4__((_DWORD)v772, 24) ^ __ROR4__(*v791, 16) ^ *v796 ^ __ROR4__(*v802, 8);
    LODWORD(v765) = v1078 ^ ((v1081 << v1572) + (v1084 >> v1591)) ^ v1396 ^ ((v765 ^ v734)
                                                                           + v803[BYTE2(v781)]
                                                                           - 2
                                                                           * ((v765 ^ v734) & v803[BYTE2(v781)]));
    v805 = v1078 ^ ((v1200 >> v1524) | v1293) ^ v1400 ^ __ROR4__(v694, 24) ^ __ROR4__(*v793, 16) ^ v803[BYTE2(v786)] ^ __ROR4__(v803[BYTE1(v781)], 8);
    v806 = v1078 ^ (v1298 >> v1591) ^ v1304 ^ v1404 ^ *v788 ^ __ROR4__(*v787, 24) ^ (v689 >> 8) ^ ((_DWORD)v689 << (v1554 & 0x18) << (v1554 & 0x18 ^ 0x18)) ^ __ROR4__(*v798, 16);
    v807 = v803[HIBYTE(v805)];
    v808 = &v803[BYTE1(v765)];
    HIDWORD(v734) = v803[v765];
    LODWORD(v734) = HIDWORD(v734);
    LODWORD(v781) = (v734 >> 16) ^ __ROR4__(v803[HIBYTE(v806)], 24);
    v809 = &v803[BYTE2(v805)];
    v810 = &v803[v765 >> 24];
    v811 = &v803[BYTE2(v806)];
    v812 = v803[BYTE2(v765)];
    v813 = 4 * v804;
    v814 = &v803[(unint64_t)v813 / 4];
    v815 = &v814[v805 + v813 / 0xFFFFFFFFFFFFFFFCLL];
    v816 = &v814[v813 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v804)];
    v817 = v781 ^ __ROR4__(v814[v813 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v805)], 8);
    v818 = &v814[v813 / 0xFFFFFFFFFFFFFFFCLL];
    v819 = v814[v813 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v804)];
    v820 = v817 & 0x40000000;
    if ((v817 & 0x40000000 & v819) != 0)
      v820 = -v820;
    v821 = v820 + v819;
    v822 = v761 ^ (((v1584 & v759) >> v1524) | v1248) ^ v1407 ^ *v809;
    v823 = v1439 ^ v1415 ^ __ROR4__(v807, 24) ^ v812 ^ __ROR4__(*v814, 16);
    v825 = __ROR4__(v818[BYTE1(v806)], 8);
    v824 = v823 ^ v825;
    v826 = v761 ^ (v1434 + ((v1595 & v759) >> v1524)) ^ v1419 ^ v817 & 0xBFFFFFFF ^ v821;
    v827 = &v773[(v823 ^ v825)];
    v828 = v761 ^ ((v757 & v1595) >> v1591) ^ v1333 ^ v1411 ^ *v811 ^ HIBYTE(*v810) ^ (*v810 << 8) ^ __ROR4__(*v815, 16);
    v830 = __ROR4__(*v816, 8);
    v829 = BYTE1(v828) ^ BYTE1(v830);
    v831 = &v773[((v828 ^ v830) >> 16)];
    v832 = &v773[BYTE1(v826)];
    v833 = &v773[(v828 ^ v830)];
    v834 = &v773[(v828 ^ v830) >> 24];
    v1444 = v818;
    v835 = v822 ^ __ROR4__(*v808, 8) ^ __ROR4__(v818[v806], 16) ^ __ROR4__(v818[HIBYTE(v804)], 24);
    v836 = &v773[BYTE1(v835)];
    v837 = &v773[BYTE2(v835)];
    v838 = &v773[BYTE2(v826)];
    v839 = v1157 ^ v1423 ^ __ROR4__(*v1520, 16) ^ __ROR4__(v1578, 8) ^ __ROR4__(*v1344, 24) ^ *v1328;
    v840 = v1157 ^ v1427 ^ __ROR4__(*v1535, 16) ^ __ROR4__(v1581, 8) ^ __ROR4__(*v1318, 24) ^ *v1095;
    v841 = v1550 ^ __ROR4__(*v1309, 24);
    if ((v1561 & 1) != 0)
      v842 = v1356;
    else
      v842 = v841;
    if ((v1561 & 1) != 0)
      v843 = v841;
    else
      v843 = v839;
    if ((v1561 & 1) != 0)
      v844 = v839;
    else
      v844 = v840;
    if ((v1561 & 1) != 0)
      v845 = v840;
    else
      v845 = v1356;
    v846 = (v1544 ^ 0x8DC0DBB2) + v1568;
    LODWORD(v847) = v774[BYTE1(v824)] ^ __ROR4__(v774[HIBYTE(v826)], 16) ^ __ROR4__(*v833, 8);
    HIDWORD(v847) = v847;
    v848 = v1430 ^ v1448 ^ v846 ^ v774[v829] ^ __ROR4__(v774[HIBYTE(v835)], 16) ^ __ROR4__(v774[v826], 8) ^ __ROR4__(v774[BYTE2(v824)], 24) ^ 0x1E70311C;
    v849 = v846 ^ 0xF259A053;
    v850 = v1163 ^ v1556 ^ v1454 ^ v846 ^ 0xF259A053 ^ __ROR4__(v774[HIBYTE(v824)], 16) ^ __ROR4__(v774[v835], 8) ^ __ROR4__(*v831, 24) ^ *v832 ^ 0xEC29914F;
    v851 = v1163 ^ v1556 ^ v1459 ^ v846 ^ 0xF259A053 ^ __ROR4__((v847 >> 29) ^ __ROR4__(*v837, 21) ^ 0xCFF6F6BE, 3) ^ 0x35D74F98;
    v852 = v1164 ^ v1566 ^ v1556 ^ v1462 ^ v846 ^ 0xF259A053 ^ __ROR4__(*v827, 8) ^ HIWORD(*v834) ^ (*v834 << 16) ^ *v836 ^ (*v838 << 8) ^ HIBYTE(*v838) ^ 0xD6DF7ED2;
    if ((v1561 & 1) != 0)
      v853 = v848;
    else
      v853 = v850;
    if ((v1561 & 1) != 0)
    {
      v848 = v851;
      v854 = v852;
    }
    else
    {
      v854 = v851;
    }
    if ((v1561 & 1) != 0)
      v852 = v850;
    if ((v1561 & 2) != 0)
      v855 = v843;
    else
      v855 = v845;
    if ((v1561 & 2) != 0)
      v856 = v845;
    else
      v856 = v843;
    if ((v1561 & 2) != 0)
      v857 = v842;
    else
      v857 = v844;
    if ((v1561 & 2) != 0)
    {
      v842 = v844;
      v858 = v852;
    }
    else
    {
      v858 = v848;
    }
    if ((v1561 & 2) != 0)
    {
      v859 = v854;
    }
    else
    {
      v848 = v852;
      v859 = v853;
    }
    if ((v1561 & 2) == 0)
      v853 = v854;
    v860 = v842 + 631175329 * ((v855 ^ 0xE27705F1) + (v859 ^ v849)) + 631175329;
    v861 = v857 + 1905839451 * ((v848 ^ 0xE27705F1) + (v860 ^ v849)) + 1905839451;
    v862 = v855 ^ v848 ^ v860 ^ v849;
    v863 = v861 ^ v849;
    v864 = v861 ^ v849 ^ v856 ^ v858;
    v865 = v864 ^ 0x1D88FA0E ^ v853;
    v866 = (v859 ^ v860 ^ 0x1D88FA0E ^ v865 ^ v862) + 1809711751 * (v864 - (v853 ^ v849));
    v867 = v861 + 181794997 * ((v846 ^ 0xEFD15A5D) - (v866 ^ v848));
    v868 = v1117 ^ __ROR4__(v1101 << v1587, 25) ^ 0x27FC550A;
    v869 = ((v1584 & v1136) >> v1591) ^ v1135;
    v870 = v865 ^ v867;
    v871 = v870 ^ v849;
    v872 = (v864 ^ 0x1D88FA0E)
         + 423671159 * ((v859 ^ 0xE27705F1) + (v863 ^ v865 ^ v862 ^ 0x1D88FA0E ^ v870))
         + 423671159;
    v873 = v863 ^ v865 ^ v862 ^ 0xA7C802D7;
    v874 = v871 ^ 0xE687D9FA ^ (((v871 ^ 0xE687D9FA) & v1451) >> 1);
    v875 = ((v874 & v1575) << v1587) + ((v874 & v1595) >> v1591);
    v876 = v873 ^ v871 ^ (((v873 ^ v871) & v1565) >> 1);
    v877 = ((v876 & v1584) >> v1524) | ((v876 & v1589) << v1572);
    v878 = v866 ^ 0x4C77847 ^ (((v866 ^ 0x4C77847) & v1451) >> 1);
    v879 = ((v878 & v1584) >> v1524) | ((v878 & v1589) << v1587);
    v880 = v872 ^ 0xC8F1513A ^ (((v872 ^ 0xC8F1513A) & v1565) >> 1);
    v881 = v875 ^ v877;
    v882 = v877 ^ v879;
    v883 = v879 ^ v869;
    v884 = ((v880 & v1595) >> v1591) ^ v869 ^ ((v880 & v1575) << v1572);
    v885 = v1153 ^ v1539 ^ ((v1584 & v1518) >> v1524) ^ v1251 ^ v882;
    v886 = v1456 ^ ((v1098 << v1572) + v1123) ^ v883 ^ v881;
    v887 = ((v1595 & v1514) >> v1524) ^ v1539 ^ v1155 ^ v1251 ^ v882 ^ v883 ^ v881;
    v888 = v1456 ^ (v1120 + ((v1589 & v1497) << v1572)) ^ v881;
    LOWORD(v881) = v885 ^ v884;
    v889 = v888 ^ v884;
    v890 = v818[HIBYTE(v886)];
    v891 = v818[((v885 ^ v884) >> 16)];
    v892 = v818[BYTE2(v889)] ^ ((v1100 << v1572) + v1115) ^ __ROR4__(v818[(v885 ^ v884) >> 24], 24) ^ __ROR4__(v818[BYTE1(v887)], 8) ^ __ROR4__(v818[v886], 16);
    v893 = v891 ^ ((v1099 >> v1524) + v1116) ^ (v890 << 8) ^ HIBYTE(v890) ^ __ROR4__(v818[BYTE1(v889)], 8) ^ __ROR4__(v818[v887], 16);
    v894 = ((v1510 & v1595) >> v1524) ^ v1159 ^ v818[BYTE2(v887)] ^ __ROR4__(v818[HIBYTE(v889)], 24) ^ __ROR4__(v818[BYTE1(v886)], 8) ^ __ROR4__(v818[v881], 16);
    v895 = v818[HIBYTE(v893)];
    v897 = __PAIR64__(v868, __ROR4__(v818[v889], 16));
    v896 = v818[BYTE2(v886)] ^ ((v1097 << v1587) | ((v1584 & v1494) >> v1591)) ^ __ROR4__(v818[HIBYTE(v887)], 24) ^ __ROR4__(v818[BYTE1(v881)], 8) ^ v897;
    v898 = v818[HIBYTE(v892)];
    LODWORD(v897) = v868;
    v28 = 0;
    v899 = (v897 >> 7) ^ HIBYTE(v895) ^ v818[BYTE2(v892)] ^ (v895 << 8) ^ __ROR4__(v818[BYTE1(v894)], 8) ^ __ROR4__(v818[v896], 16) ^ 0x144FF8AA;
    v900 = v818[BYTE2(v894)] ^ v1162 ^ (v898 << 8) ^ HIBYTE(v898) ^ __ROR4__(v818[BYTE1(v896)], 8) ^ __ROR4__(v818[v893], 16);
    v901 = (v1175 << v1572) ^ ((v1595 & v1506) >> v1591) ^ (v818[HIBYTE(v894)] << 8) ^ v818[BYTE2(v896)] ^ HIBYTE(v818[HIBYTE(v894)]) ^ __ROR4__(v818[BYTE1(v893)], 8);
    v902 = v818[v894];
    LODWORD(v897) = __ROR4__(v818[v892], 16);
    v903 = v901 ^ v897;
    v904 = &v818[((unsigned __int16)(v901 ^ v897) >> 8)];
    v905 = v818[BYTE2(v893)] ^ (v1122 | (v1102 << v1587)) ^ __ROR4__(v818[HIBYTE(v896)], 24) ^ __ROR4__(v818[BYTE1(v892)], 8) ^ __ROR4__(v902, 16);
    v906 = &v818[v905];
    v907 = &v818[BYTE1(v905)];
    v908 = &v818[BYTE2(v905)];
    v909 = &v818[v900];
    v910 = &v1444[HIBYTE(v905)];
    v911 = &v1444[BYTE1(v900)];
    v912 = &v1444[v903];
    v913 = (v1119 + ((v1584 & v1490) >> v1524)) ^ __ROR4__(v1444[HIBYTE(v900)], 24) ^ v1444[BYTE2(v903)];
    v914 = v1161 ^ ((v1595 & v1503) >> v1591) ^ v1444[BYTE2(v900)] ^ __ROR4__(v1444[HIBYTE(v899)], 24) ^ __ROR4__(*v904, 8) ^ __ROR4__(*v906, 16);
    v915 = v913 ^ __ROR4__(*v907, 8) ^ __ROR4__(v1444[v899], 16);
    v916 = *v908 ^ (v1118 | (v1104 >> v1524)) ^ __ROR4__(v1444[HIBYTE(v903)], 24) ^ __ROR4__(v1444[BYTE1(v899)], 8);
    LODWORD(v897) = __ROR4__(*v909, 16);
    v917 = v916 ^ v897;
    v918 = &v1444[((unsigned __int16)(v916 ^ v897) >> 8)];
    LODWORD(v906) = v1444[BYTE2(v899)] ^ (((v1584 & v1488) >> v1591) | v1121) ^ __ROR4__(*v910, 24) ^ __ROR4__(*v911, 8);
    LODWORD(v897) = __ROR4__(*v912, 16);
    v919 = (v1146 >> v1591) ^ (v1182 << v1572) ^ __ROR4__(v1444[HIBYTE(v915)], 24) ^ v1444[BYTE2(v917)] ^ __ROR4__(v1444[(BYTE1(v906) ^ BYTE1(v897))], 8) ^ __ROR4__(v1444[v914], 16);
    LODWORD(v918) = (((v1575 & v1485) << v1587) | v1127) ^ __ROR4__(v1444[HIBYTE(v914)], 24) ^ v1444[BYTE2(v915)] ^ __ROR4__(*v918, 8) ^ __ROR4__(v1444[(v906 ^ v897)], 16);
    LODWORD(v904) = (v1130 | ((v1589 & v1483) << v1572)) ^ __ROR4__(v1444[(v906 ^ v897) >> 24], 24) ^ v1444[BYTE2(v914)] ^ __ROR4__(v1444[BYTE1(v915)], 8) ^ __ROR4__(v1444[v917], 16);
    LODWORD(v906) = v1444[((v906 ^ v897) >> 16)] ^ ((v1103 << v1587) | v1126) ^ (v1444[HIBYTE(v917)] << 8) ^ HIBYTE(v1444[HIBYTE(v917)]) ^ __ROR4__(v1444[BYTE1(v914)], 8) ^ __ROR4__(v1444[v915], 16);
    v920 = v1167 ^ __ROR4__(v1444[v904 >> 24], 24) ^ v1444[BYTE2(v918)];
    v921 = v1166 ^ ((v1589 & v1500) << v1572) ^ v1444[BYTE2(v904)];
    v922 = v1444[BYTE2(v919)] ^ (v1129 + (v1108 >> v1524)) ^ __ROR4__(v1444[v918 >> 24], 24) ^ __ROR4__(v1444[BYTE1(v906)], 8) ^ __ROR4__(v1444[v904], 16);
    LODWORD(v904) = (v1144 << v1587) ^ (v1177 >> v1591) ^ __ROR4__(v1444[HIBYTE(v919)], 24) ^ v1444[BYTE2(v906)] ^ __ROR4__(v1444[BYTE1(v904)], 8) ^ __ROR4__(v1444[v918], 16);
    LODWORD(v911) = v920 ^ __ROR4__(v1444[BYTE1(v919)], 8);
    LODWORD(v918) = v921 ^ __ROR4__(v1444[v906 >> 24], 24) ^ __ROR4__(v1444[BYTE1(v918)], 8);
    LODWORD(v897) = __ROR4__(v1444[v919], 16);
    LOBYTE(v919) = v918 ^ v897;
    v923 = v1444[v906];
    v924 = v911 ^ HIWORD(v923);
    v925 = &v1444[BYTE1(v924)];
    v926 = v924 ^ (v923 << 16);
    v927 = &v1444[BYTE1(v922)];
    LODWORD(v908) = v1444[BYTE2(v922)] ^ ((v1106 << v1572) | ((v1584 & v1473) >> v1591));
    v928 = (v1125 + ((v1584 & v1480) >> v1524)) ^ __ROR4__(v1444[HIBYTE(v922)], 24) ^ v1444[BYTE2(v904)] ^ __ROR4__(v1444[((unsigned __int16)((unsigned __int16)v918 ^ v897) >> 8)], 8) ^ __ROR4__(v1444[(v911 ^ BYTE2(v923))], 16);
    v929 = v1444[((v918 ^ v897) >> 16)] ^ ((v1109 << v1572) + v1124) ^ __ROR4__(v1444[v904 >> 24], 24) ^ __ROR4__(*v925, 8) ^ __ROR4__(v1444[v922], 16);
    LODWORD(v918) = (((v1589 & v1476) << v1587) | v1128) ^ __ROR4__(v1444[(v918 ^ v897) >> 24], 24) ^ v1444[BYTE2(v926)] ^ __ROR4__(*v927, 8) ^ __ROR4__(v1444[v904], 16);
    LODWORD(v906) = v1444[HIBYTE(v926)];
    v930 = v1444[v919];
    LODWORD(v906) = v908 ^ __ROR4__((_DWORD)v906, 24);
    LODWORD(v897) = __ROR4__(v1444[BYTE1(v904)], 8);
    LODWORD(v908) = v906 ^ v897 ^ HIWORD(v930);
    v931 = &v1444[BYTE1(v908)];
    LODWORD(v908) = v908 ^ (v930 << 16);
    v932 = &v1444[BYTE2(v908)];
    v933 = v1444[BYTE1(v928)];
    v934 = &v1444[v908 >> 24];
    v935 = &v1444[BYTE2(v928)];
    LODWORD(v904) = v1444[BYTE2(v918)] ^ (v1132 + (v1111 >> v1591)) ^ __ROR4__(v1444[HIBYTE(v929)], 24) ^ __ROR4__(*v931, 8) ^ __ROR4__(v1444[v928], 16);
    v936 = (v1140 >> v1524) ^ (v1179 << v1572) ^ __ROR4__(v1444[HIBYTE(v928)], 24) ^ v1444[BYTE2(v929)] ^ __ROR4__(v1444[BYTE1(v918)], 8) ^ __ROR4__(v1444[(v906 ^ v897 ^ BYTE2(v930))], 16);
    v937 = v1444[v918];
    LODWORD(v918) = *v932 ^ (((v1589 & v1467) << v1587) | v1134) ^ __ROR4__(v1444[v918 >> 24], 24) ^ __ROR4__(v933, 8) ^ __ROR4__(v1444[v929], 16);
    LODWORD(v906) = *v935 ^ (v1133 | (v1113 >> v1524)) ^ __ROR4__(*v934, 24) ^ __ROR4__(v1444[BYTE1(v929)], 8) ^ __ROR4__(v937, 16);
    v938 = ((v1114 << v1572) | ((v1584 & v1470) >> v1524)) ^ __ROR4__(v1444[HIBYTE(v936)], 24) ^ v1444[BYTE2(v904)] ^ __ROR4__(v1444[BYTE1(v918)], 8) ^ __ROR4__(v1444[v906], 16);
    LODWORD(v931) = v1444[v918 >> 24];
    v939 = v1444[v904];
    LODWORD(v932) = v1444[v918];
    LODWORD(v918) = (v1142 << v1587) ^ v1169 ^ __ROR4__(v1444[v904 >> 24], 24) ^ v1444[BYTE2(v918)] ^ __ROR4__(v1444[BYTE1(v906)], 8) ^ __ROR4__(v1444[v936], 16);
    LODWORD(v935) = v1170 ^ __ROR4__(v1444[v906 >> 24], 24) ^ v1444[BYTE2(v936)] ^ __ROR4__(v1444[BYTE1(v904)], 8) ^ __ROR4__((_DWORD)v932, 16);
    LODWORD(v904) = (((v1575 & v1151) << v1587) + v1131) ^ __ROR4__((_DWORD)v931, 24) ^ v1444[BYTE2(v906)] ^ __ROR4__(v1444[BYTE1(v936)], 8);
    LODWORD(v897) = __ROR4__(v939, 16);
    v940 = v904 ^ v897;
    LODWORD(v906) = v1444[BYTE2(v918)];
    LODWORD(v911) = v1444[((unsigned __int16)((unsigned __int16)v904 ^ v897) >> 8)];
    v941 = v1444[v935];
    LODWORD(v907) = v1444[((v904 ^ v897) >> 16)] ^ __ROR4__(v1444[v918 >> 24], 24) ^ __ROR4__(v1444[BYTE1(v935)], 8);
    v942 = __PAIR64__(v1171, __ROR4__(v1444[v938], 16));
    LODWORD(v907) = v907 ^ v942;
    LODWORD(v925) = v1444[BYTE2(v935)];
    v943 = v1444[v935 >> 24];
    v944 = v1444[BYTE2(v938)];
    LODWORD(v935) = v1444[BYTE1(v918)];
    v945 = (uint64_t)v1444;
    LODWORD(v942) = v1171;
    LODWORD(v918) = v925 ^ (((v1589 & v1149) << v1572) + v1138) ^ __ROR4__(v1444[HIBYTE(v940)], 24) ^ __ROR4__(v1444[BYTE1(v938)], 8) ^ __ROR4__(v1444[v918], 16);
    v946 = v906 ^ v1172 ^ __ROR4__(v1444[HIBYTE(v938)], 24) ^ __ROR4__(v941, 16) ^ (bswap32(v911 & 0x800FF) | (v911 >> 8) & 0xFFFFF7FF);
    LODWORD(v906) = __ROR4__((v942 >> 7) ^ __ROR4__((_DWORD)v907, 7) ^ 0x304E1949, 25) ^ 0x270CA498;
    LODWORD(v935) = (v1137 + ((v1575 & v1147) << v1587)) ^ __ROR4__(v943, 24) ^ v944 ^ __ROR4__((_DWORD)v935, 8) ^ __ROR4__(v1444[v940], 16);
    LODWORD(v911) = v774[BYTE1(v918)];
    LODWORD(v907) = v774[v906 >> 24];
    LODWORD(v932) = v774[BYTE2(v918)];
    LODWORD(v931) = v1601 ^ __ROR4__(v774[v935 >> 24], 16) ^ __ROR4__(v774[BYTE2(v946)], 24) ^ v774[BYTE1(v906)] ^ __ROR4__(v774[v918], 8) ^ 0x1604284C;
    LODWORD(v918) = v1251 ^ v1539 ^ __ROR4__(v774[v918 >> 24], 16) ^ __ROR4__(v774[BYTE2(v935)], 24) ^ v774[BYTE1(v946)] ^ __ROR4__(v774[v906], 8) ^ 0x64C9E943;
    LODWORD(v906) = v1601 ^ __ROR4__(v774[HIBYTE(v946)], 16) ^ __ROR4__(v774[BYTE2(v906)], 24) ^ v911 ^ __ROR4__(v774[v935], 8);
    v27 = (uint64_t)v774;
    LODWORD(v904) = v1601 ^ __ROR4__((_DWORD)v907, 16) ^ __ROR4__((_DWORD)v932, 24) ^ v774[BYTE1(v935)] ^ __ROR4__(v774[v946], 8) ^ 0x9A6FFCE2;
    v947 = v918 ^ v904;
    LODWORD(v904) = v906 ^ 0x33FF3E44 ^ v904;
    v1557[8] = (*((_BYTE *)*(&off_1015B46D0 + (int)(v1465 - 1230502708))
                + ((v931 ^ v904) ^ 0xCCLL))
              + (v931 ^ v904 ^ 0x91)
              - 41) ^ 0x53;
    v1557[10] = *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957FCDD))
                + (((unsigned __int16)((unsigned __int16)v931 ^ (unsigned __int16)v904) >> 8) ^ 0x5DLL)
                - 4) ^ 0x1C;
    v948 = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1465 - 1230502017))
           + (((v931 ^ v904) >> 24) ^ 0x62)
           - 4);
    v1557[1] = ((v948 >> 7) | (2 * v948)) ^ 0x4C;
    v1557[15] = *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957F9D7)) + ((v906 >> 24) ^ 0xDBLL) - 8) ^ 0x75;
    v1557[9] = (*((_BYTE *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957F89A))
                + (((v931 ^ v904) >> 16) ^ 0xDBLL))
              + 58) ^ 0x9B;
    v949 = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1465 - 1230501389))
           + (((unsigned __int16)(v947 ^ (unsigned __int16)v931) >> 8) ^ 0x27)
           - 8);
    v1557[14] = ((v949 >> 1) | ((_BYTE)v949 << 7)) ^ (*((_BYTE *)*(&off_1015B46D0 + (int)(v1465 - 1230501389))
                                                      + (((unsigned __int16)(v947 ^ (unsigned __int16)v931) >> 8) ^ 0x27)
                                                      - 8) >> 5) & 0xFD ^ 0x8C;
    LOBYTE(v949) = *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957FC35)) + (BYTE1(v906) ^ 0x22) - 4) + 6;
    v1557[3] = v949 ^ (2 * v949 * v949) ^ 0x49;
    v1557[2] = v906 ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 - 1230501534))
                                       + (v906 ^ 0xB2)
                                       - 4) ^ 0x7E;
    LODWORD(v935) = 57
                  * *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v1465 - 1230501230))
                    + (((v918 ^ v904) >> 24) ^ 0x2BLL));
    v1557[7] = v935 ^ 0x24 ^ (v935 >> 3) & 8;
    *v1557 = ((v947 ^ v931) >> 24) ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 - 1230501205))
                                                   + (((v947 ^ v931) >> 24) ^ 0x80)
                                                   - 12) ^ 0xC0;
    v1557[11] = *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 - 1230502611))
                + ((v918 ^ v904) ^ 0xEFLL)) ^ 0x1B;
    v26 = v1465;
    v1557[12] = *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957F173))
                + (((v918 ^ v904) >> 16) ^ 0x26)
                - 4) ^ 0x86;
    v1557[13] = *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957F84E)) + (BYTE2(v906) ^ 0xCCLL) - 12) ^ 0x31;
    v1557[6] = *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 - 1230501834))
               + (((unsigned __int16)((unsigned __int16)v918 ^ (unsigned __int16)v904) >> 8) ^ 0x54)
               - 12) ^ 0x36;
    v1557[4] = ((((v947 ^ v931) >> 16) ^ 0x21) + (((v947 ^ v931) >> 16) ^ 5) + 1) ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 - 1230502130)) + (((v947 ^ v931) >> 16) ^ 0x27)) ^ 0xF7;
    v1557[5] = *((_BYTE *)*(&off_1015B46D0 + (int)(v1465 ^ 0x4957FEE9))
               + ((v947 ^ v931) ^ 0xEDLL)
               - 4) ^ 0x3C;
    v1 = v1173;
  }
  else
  {
    v945 = v24;
  }
  v950 = (void (*)(uint64_t, uint64_t))*(&off_1015B46D0 + (int)(v1596 ^ 0xA40A8470));
  v950(v27, v26);
  result = ((uint64_t (*)(uint64_t))v950)(v945);
  if ((v28 ^ 0x9FFF3FFF) + ((2 * v28) & 0x3FFE30F6) == -1610661889)
    v952 = -1926392729;
  else
    v952 = 1926392715;
  *(_DWORD *)(v1 + 28) = v952;
  return result;
}

uint64_t sub_1000C9D80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unsigned __int8 v4;
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v2 = *(&off_1015B46D0
       + (byte_101506DC0[byte_1014342E0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         + qword_1015F8F98) ^ 0xC0))] ^ 7] ^ (-31 * ((qword_1015F8458 + qword_1015F8F98) ^ 0xC0)))
       + 1540);
  qword_1015F8F98 = 396727777 * (((*v2 ^ qword_1015F8F98) - (_QWORD)&v6) ^ 0x6790357934740FC0);
  *v2 = qword_1015F8F98;
  v3 = 2142736129 * ((unint64_t)&v7 ^ 0x7D1B080C63589409);
  v7 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F8F98) ^ 0xC0)) ^ byte_101506DC0[byte_1014342E0[(-31 * ((qword_1015F8458 - qword_1015F8F98) ^ 0xC0))] ^ 0x63])
                   + 353)
       + 4168) ^ v3;
  v8 = v3 ^ 0x8B395632;
  v9 = a1;
  v11 = a2;
  v4 = -31 * (qword_1015F8F98 ^ 0xC0 ^ *(_DWORD *)v2);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101595D04[(byte_101506CC8[v4 - 8] ^ 0xF6) - 4] ^ v4)
                                                     + 2133)
                                           - 8))(&v7);
  return v10;
}

uint64_t sub_1000C9F2C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  _BYTE v8[8];
  unint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v2 = *(&off_1015B46D0
       + (byte_1014341E8[(byte_1012F6FDC[(-31
                                                                                        * ((qword_1015F8458
                                                                                          + qword_1015F9788) ^ 0xC0))
                                                                      - 12] ^ 0x48)
                                                      - 8] ^ (-31 * ((qword_1015F8458 + qword_1015F9788) ^ 0xC0)))
       + 1718);
  v3 = (unint64_t)&v8[*v2 - qword_1015F9788];
  qword_1015F9788 = (396727777 * v3) ^ 0x6790357934740FC0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F9788) ^ 0xC0)) ^ byte_1012F70D0[byte_101595E00[(-31 * ((qword_1015F8458 - qword_1015F9788) ^ 0xC0))] ^ 0xD7])
                   + 164)
       + 4212);
  v5 = 2142736129
     * ((((unint64_t)&v9 | 0xF17F35237597CA02)
       - ((unint64_t)&v9 | 0xE80CADC8A6835FDLL)
       + 0xE80CADC8A6835FDLL) ^ 0x8C643D2F16CF5E0BLL);
  v10 = v5 ^ 0x8B395632;
  v9 = v4 ^ v5;
  v11 = a1;
  v13 = a2;
  v6 = -31 * ((*(_DWORD *)v2 + qword_1015F9788) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101506EC4[(byte_1014343E8[v6 - 8] ^ 0x79) - 4] ^ v6)
                                                     + 2122)
                                           - 8))(&v9);
  return v12;
}

uint64_t sub_1000CA118(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  _BYTE v8[8];
  unint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v2 = *(&off_1015B46D0
       + (byte_101506DC0[byte_1014342E0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         + qword_1015F8568) ^ 0xC0))] ^ 0x63] ^ (-31 * ((qword_1015F8458 + qword_1015F8568) ^ 0xC0)))
       + 1774);
  v3 = (unint64_t)&v8[*v2 ^ qword_1015F8568];
  qword_1015F8568 = 396727777 * v3 - 0x6790357934740FC0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F8568) ^ 0xC0)) ^ byte_1012F70D0[byte_101595E00[(-31 * ((qword_1015F8458 - qword_1015F8568) ^ 0xC0))] ^ 0xD7])
                   + 164)
       + 4204);
  v5 = 2142736129
     * ((((unint64_t)&v9 | 0x411EEDC20CC4B784) - ((unint64_t)&v9 & 0x411EEDC20CC4B784)) ^ 0x3C05E5CE6F9C238DLL);
  v10 = v5 ^ 0x8B395632;
  v13 = a2;
  v11 = a1;
  v9 = v4 ^ v5;
  v6 = -31 * (qword_1015F8568 ^ 0xC0 ^ *(_DWORD *)v2);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101506EC4[(byte_1014343E8[v6 - 8] ^ 0x7A) - 4] ^ v6)
                                                     + 2033)
                                           - 8))(&v9);
  return v12;
}

uint64_t sub_1000CA2EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  _BYTE v8[8];
  unint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v2 = *(&off_1015B46D0
       + (byte_101506EC4[(byte_1014343E8[(-31
                                                                                        * ((qword_1015F8458
                                                                                          - qword_1015F8F90) ^ 0xC0))
                                                                      - 8] ^ 0xA3)
                                                      - 4] ^ (-31 * ((qword_1015F8458 - qword_1015F8F90) ^ 0xC0)))
       + 1618);
  v3 = (unint64_t)&v8[*v2 ^ qword_1015F8F90];
  qword_1015F8F90 = 396727777 * (v3 - 0x6790357934740FC0);
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F8F90) ^ 0xC0)) ^ byte_101595D00[byte_101506CC0[(-31 * ((qword_1015F8458 - qword_1015F8F90) ^ 0xC0))] ^ 0x40])
                   + 208)
       + 4191);
  v5 = 2142736129
     * ((((unint64_t)&v9 | 0x4C8CC41AE651DBF5) - (_QWORD)&v9 + ((unint64_t)&v9 & 0xB3733BE519AE2408)) ^ 0x3197CC1685094FFCLL);
  v10 = v5 ^ 0x8B395632;
  v9 = v4 ^ v5;
  v13 = a2;
  v11 = a1;
  v6 = -31 * ((*(_DWORD *)v2 - qword_1015F8F90) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101595D04[(byte_101506CC8[v6 - 8] ^ 0x40) - 4] ^ v6)
                                                     + 2066)
                                           - 8))(&v9);
  return v12;
}

uint64_t sub_1000CA4D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  _BYTE v8[8];
  unint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v2 = *(&off_1015B46D0
       + (byte_101506DC0[byte_1014342E0[(-31
                                                                                       * (qword_1015F9790 ^ 0xC0 ^ qword_1015F8458))] ^ 0x63] ^ (-31 * (qword_1015F9790 ^ 0xC0 ^ qword_1015F8458)))
       + 1774);
  v3 = (unint64_t)&v8[*v2 - qword_1015F9790];
  qword_1015F9790 = 396727777 * v3 + 0x6790357934740FC0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * (qword_1015F9790 ^ 0xC0 ^ qword_1015F8458)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * (qword_1015F9790 ^ 0xC0 ^ qword_1015F8458))] ^ 0xBA])
                   + 253)
       + 4193);
  v5 = 2142736129
     * ((2 * ((unint64_t)&v9 & 0x68FC32C1B7E8E5B8) - (_QWORD)&v9 + 0x1703CD3E48171A41) ^ 0x6A18C5322B4F8E48);
  v10 = v5 ^ 0x8B395632;
  v9 = v4 ^ v5;
  v13 = a2;
  v11 = a1;
  v6 = -31 * ((*(_DWORD *)v2 + qword_1015F9790) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_1014341E8[(byte_1012F6FDC[v6 - 12] ^ 0xBA) - 8] ^ v6)
                                                     + 2111)
                                           - 8))(&v9);
  return v12;
}

uint64_t sub_1000CA6B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v2 = *(&off_1015B46D0
       + (byte_1014341E0[byte_1012F6FD0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         + qword_1015F9290) ^ 0xC0))] ^ 0xB4] ^ (-31 * ((qword_1015F8458 + qword_1015F9290) ^ 0xC0)))
       + 1752);
  v3 = (*v2 ^ qword_1015F9290) - (_QWORD)&v7;
  qword_1015F9290 = 396727777 * v3 - 0x6790357934740FC0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * (qword_1015F9290 ^ 0xC0 ^ qword_1015F8458)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * (qword_1015F9290 ^ 0xC0 ^ qword_1015F8458))] ^ 0xBE])
                   + 108)
       + 4213);
  v5 = 2142736129
     * ((~(unint64_t)&v8 & 0xC0E9B5549E62677 | (unint64_t)&v8 & 0xF3F164AAB619D988) ^ 0x711593592ABEB27ELL);
  v9 = v5 ^ 0x8B395632;
  v10 = a1;
  v12 = a2;
  v8 = v4 ^ v5;
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + ((-31
                                                                                      * ((*(_DWORD *)v2 - qword_1015F9290) ^ 0xC0)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * ((*(_DWORD *)v2 - qword_1015F9290) ^ 0xC0))] ^ 0xB4])
                                                     + 2189)
                                           - 8))(&v8);
  return v11;
}

uint64_t sub_1000CA880(uint64_t result)
{
  _DWORD *v1;
  int v2;
  unsigned int v3;
  int v4;
  _DWORD v5[2];
  unint64_t *v6;
  uint64_t vars0;

  v1 = (_DWORD *)result;
  v2 = (1705718857 * ((((2 * result) | 0xA7E577E8) - result + 739066892) ^ 0xEE6064AD)) ^ *(_DWORD *)(result + 16);
  if (*(_DWORD *)(*(_QWORD *)(result + 8) - 0x576041FBB328C53ALL) >= (v2 ^ 0xE450B827))
  {
    v4 = -1926392730;
  }
  else
  {
    v3 = v2 ^ 0xC6B8E49E;
    v5[0] = v3
          - 509340803
          * ((((&vars0 - 40) | 0x14581774) - ((&vars0 - 40) & 0x14581774)) ^ 0xD82F2FF2)
          + 1723290352;
    v6 = &STACK[0x243272AB8A09BE55];
    result = ((uint64_t (*)(_DWORD *))*(&off_1015B46D0 + (int)(v3 - 585653241)))(v5);
    v4 = v5[1];
  }
  *v1 = v4;
  return result;
}

#error "1000CAB50: too big function (funcsize=0)"

uint64_t sub_10012B4C8(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned __int8 *v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unsigned int v31;
  char v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned __int8 v38;
  char v39;
  int v40;
  unsigned __int8 v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  __int16 v48;
  char *v49;
  uint64_t v50;
  char *v51;
  unsigned int v52;
  int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  int v57;
  int v58;
  unsigned int v59;
  unint64_t v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  unsigned int v120;
  char *v121;
  unsigned int v122;
  char *v123;
  char *v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  char v137;
  char *v138;
  int v139;
  char *v140;
  unsigned int v141;
  char *v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  char *v151;
  unsigned int v152;
  char *v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unint64_t v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  int v208;
  int v209;
  char v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  BOOL v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  int v327;
  unsigned int v328;
  int v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  unsigned int v334;
  int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  unsigned int v357;
  int v358;
  int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unint64_t v379;
  unsigned int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  int v399;
  int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  uint64_t v409;
  uint64_t v410;
  unsigned int v411;
  uint64_t v412;
  uint64_t v413;
  unint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  unint64_t v418;
  int v419;
  unint64_t v420;
  int v421;
  unint64_t v422;
  unint64_t v423;
  unint64_t v424;
  int v425;
  unint64_t v426;
  int v427;
  uint64_t v428;
  unint64_t v429;
  uint64_t v430;
  unint64_t v431;
  unint64_t v432;
  unint64_t v433;
  unint64_t v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  unsigned int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  unsigned int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  int v461;
  int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unint64_t v468;
  int v469;
  uint64_t v470;
  int v471;
  int v472;
  int v473;
  uint64_t v474;
  uint64_t v475;
  unint64_t v476;
  unint64_t v477;
  int v478;
  int v479;
  int v480;
  unint64_t v481;
  unint64_t v482;
  int v483;
  int v484;
  int v485;
  unint64_t v486;
  unint64_t v487;
  uint64_t v488;
  int v489;
  unsigned int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  unint64_t v498;
  unint64_t v499;
  unint64_t v500;
  unint64_t v501;
  unint64_t v502;
  unint64_t v503;
  unint64_t v504;
  unint64_t v505;
  unint64_t v506;
  unint64_t v507;
  unint64_t v508;
  unint64_t v509;
  unint64_t v510;
  unint64_t v511;
  int v512;
  unint64_t v513;
  unint64_t v514;
  int v515;
  unint64_t v516;
  int v517;
  unsigned int v518;
  int v519;
  int v520;
  int v521;
  uint64_t v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  unint64_t v528;
  unint64_t v529;
  unint64_t v530;
  int v531;
  int v532;
  int v533;
  int v534;
  unint64_t v535;
  unsigned int v536;
  int v537;
  int v538;
  int v539;
  unint64_t v540;
  uint64_t v541;
  unsigned int v542;
  unsigned int v543;
  int v544;
  int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  int v562;
  unsigned __int8 *v563;
  uint64_t v564;
  uint64_t v565;
  int v566;
  int v567;
  unsigned int v568;
  int v569;
  int v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  unint64_t v577;
  unint64_t v578;
  int v579;
  int v580;
  int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  unint64_t v587;
  unint64_t v588;
  unint64_t v589;
  int v590;
  int v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  int v597;
  int v598;
  int v599;
  unint64_t v600;
  unint64_t v601;
  unint64_t v602;
  uint64_t v603;
  unsigned int v604;
  int v605;
  int v606;
  unsigned int v607;
  unsigned int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  int v612;
  unsigned int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  int v618;
  int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  int v623;
  int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  int v629;
  unsigned int v630;
  unsigned int v631;
  unsigned int v632;
  unsigned int v633;
  int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  unsigned __int8 v659;
  int v660;
  unsigned int v661;
  unsigned int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  uint64_t v666;
  uint64_t v667;
  unint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  unint64_t v672;
  unint64_t v673;
  unint64_t v674;
  unint64_t v675;
  unint64_t v676;
  unint64_t v677;
  unint64_t v678;
  unint64_t v679;
  int v680;
  unint64_t v681;
  int v682;
  unint64_t v683;
  unint64_t v684;
  unint64_t v685;
  unint64_t v686;
  unint64_t v687;
  unint64_t v688;
  int v689;
  int v690;
  int v691;
  uint64_t v692;
  int v693;
  uint64_t v694;
  unint64_t v695;
  unint64_t v696;
  unint64_t v697;
  unsigned int v698;
  int v699;
  int v700;
  unsigned int v701;
  unint64_t v702;
  unint64_t v703;
  unint64_t v704;
  unint64_t v705;
  unint64_t v706;
  unint64_t v707;
  unint64_t v708;
  unsigned int v709;
  unsigned int v710;
  unint64_t v711;
  unint64_t v712;
  unint64_t v713;
  int v714;
  int v715;
  int v716;
  unint64_t v717;
  unint64_t v718;
  int v719;
  int v720;
  int v721;
  unint64_t v722;
  unint64_t v723;
  uint64_t v724;
  int v725;
  int v726;
  unint64_t v727;
  unint64_t v728;
  unint64_t v729;
  unint64_t v730;
  unint64_t v731;
  unint64_t v732;
  unint64_t v733;
  unint64_t v734;
  unint64_t v735;
  unint64_t v736;
  unint64_t v737;
  unint64_t v738;
  unint64_t v739;
  unint64_t v740;
  int v741;
  unint64_t v742;
  unint64_t v743;
  int v744;
  unint64_t v745;
  int v746;
  uint64_t v747;
  int v748;
  unsigned int v749;
  int v750;
  int v751;
  int v752;
  int v753;
  unint64_t v754;
  unsigned int v755;
  int v756;
  int v757;
  int v758;
  int v759;
  int v760;
  int v761;
  unint64_t v762;
  int v763;
  int v764;
  int v765;
  int v766;
  unint64_t v767;
  uint64_t v768;
  int v769;
  int v770;
  uint64_t v771;
  int v772;
  int v773;
  int v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  unsigned __int8 *v781;
  uint64_t v782;
  uint64_t v783;
  int v784;
  int v785;
  int v786;
  int v787;
  unint64_t v788;
  unint64_t v789;
  int v790;
  int v791;
  int v792;
  int v793;
  int v794;
  int v795;
  unint64_t v796;
  unint64_t v797;
  unint64_t v798;
  int v799;
  uint64_t v800;
  int v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  int v808;
  int v809;
  unint64_t v810;
  unint64_t v811;
  unint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  unsigned int v819;
  unsigned int v820;
  unsigned int v821;
  unsigned int v822;
  unsigned int v823;
  int v824;
  int v825;
  unsigned int v826;
  unsigned int v827;
  unsigned int v828;
  unsigned int v829;
  int v830;
  int v831;
  int v832;
  int v833;
  unsigned int v834;
  unsigned int v835;
  int v836;
  int v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  unsigned int v841;
  unsigned int v842;
  unsigned int v843;
  int v844;
  unsigned int v845;
  unsigned int v846;
  unsigned int v847;
  unsigned int v848;
  int v849;
  unsigned int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  int v854;
  unsigned int v855;
  unsigned int v856;
  unsigned int v857;
  unsigned int v858;
  unsigned int v859;
  unsigned int v860;
  unsigned int v861;
  unsigned int v862;
  unsigned int v863;
  unsigned int v864;
  int v865;
  int v866;
  int v867;
  int v868;
  int v869;
  int v870;
  char *v871;
  unsigned int v872;
  char *v873;
  unint64_t v874;
  int v875;
  int v876;
  unsigned int v877;
  int v878;
  int v879;
  unsigned int v880;
  unsigned int v881;
  unsigned int v882;
  unsigned int v883;
  uint64_t v884;
  unsigned __int8 v885;
  unsigned int v886;
  int v887;
  unint64_t v888;
  int v889;
  unsigned int v890;
  int v891;
  unsigned int v892;
  unsigned int v893;
  uint64_t v894;
  int v895;
  int v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  unint64_t v900;
  unint64_t v901;
  unint64_t v902;
  unint64_t v903;
  unint64_t v904;
  unint64_t v905;
  unint64_t v906;
  unint64_t v907;
  unsigned int v908;
  int v909;
  unint64_t v910;
  int v911;
  unint64_t v912;
  unint64_t v913;
  int v914;
  unint64_t v915;
  int v916;
  unint64_t v917;
  unint64_t v918;
  unint64_t v919;
  unint64_t v920;
  unint64_t v921;
  int v922;
  unint64_t v923;
  int v924;
  int v925;
  int v926;
  int v927;
  unsigned int v928;
  uint64_t v929;
  uint64_t v930;
  unint64_t v931;
  unint64_t v932;
  unint64_t v933;
  unint64_t v934;
  int v935;
  int v936;
  unsigned int v937;
  int v938;
  int v939;
  unint64_t v940;
  unint64_t v941;
  unsigned int v942;
  int v943;
  int v944;
  unint64_t v945;
  unint64_t v946;
  uint64_t v947;
  int v948;
  int v949;
  unint64_t v950;
  unint64_t v951;
  unint64_t v952;
  unint64_t v953;
  unint64_t v954;
  unint64_t v955;
  unint64_t v956;
  unint64_t v957;
  unint64_t v958;
  unint64_t v959;
  unint64_t v960;
  unint64_t v961;
  int v962;
  unint64_t v963;
  unint64_t v964;
  int v965;
  unint64_t v966;
  unint64_t v967;
  int v968;
  unint64_t v969;
  int v970;
  int v971;
  unsigned __int8 *v972;
  uint64_t v973;
  int v974;
  unsigned int v975;
  char v976;
  unsigned int v977;
  int v978;
  int v979;
  unint64_t v980;
  unsigned int v981;
  unsigned int v982;
  unsigned int v983;
  unint64_t v984;
  unsigned int v985;
  unsigned int v986;
  int v987;
  unint64_t v988;
  unsigned int v989;
  unsigned int v990;
  uint64_t v991;
  int v992;
  int v993;
  int v994;
  int v995;
  int v996;
  int v997;
  unsigned int v998;
  int v999;
  uint64_t v1000;
  uint64_t v1001;
  int v1002;
  int v1003;
  int v1004;
  int v1005;
  int v1006;
  int v1007;
  int v1008;
  int v1009;
  unsigned int v1010;
  unsigned int v1011;
  unsigned int v1012;
  unint64_t v1013;
  unsigned int v1014;
  unsigned int v1015;
  int v1016;
  int v1017;
  unsigned int v1018;
  unint64_t v1019;
  int v1020;
  unint64_t v1021;
  unint64_t v1022;
  uint64_t v1023;
  unint64_t v1024;
  unint64_t v1025;
  unsigned int v1026;
  unint64_t v1027;
  unint64_t v1028;
  unsigned int v1029;
  int v1030;
  unsigned int v1031;
  unsigned int v1032;
  int v1033;
  int v1034;
  unsigned int v1035;
  int v1036;
  unsigned int v1037;
  int v1038;
  unsigned int v1039;
  unsigned int v1040;
  int v1041;
  unsigned int v1042;
  unsigned int v1043;
  int v1044;
  unsigned int v1045;
  int v1046;
  unsigned int v1047;
  int v1048;
  int v1049;
  unsigned int v1050;
  unsigned int v1051;
  unsigned int v1052;
  int v1053;
  unsigned int v1054;
  unsigned int v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  unint64_t v1060;
  unint64_t v1061;
  unint64_t v1062;
  unint64_t v1063;
  unint64_t v1064;
  unint64_t v1065;
  unint64_t v1066;
  unint64_t v1067;
  unint64_t v1068;
  int v1069;
  unint64_t v1070;
  unint64_t v1071;
  unint64_t v1072;
  unint64_t v1073;
  unint64_t v1074;
  unint64_t v1075;
  unint64_t v1076;
  int v1077;
  unint64_t v1078;
  unint64_t v1079;
  unint64_t v1080;
  unint64_t v1081;
  unint64_t v1082;
  unint64_t v1083;
  int v1084;
  uint64_t v1085;
  uint64_t v1086;
  uint64_t v1087;
  int v1088;
  unint64_t v1089;
  unint64_t v1090;
  unint64_t v1091;
  int v1092;
  int v1093;
  int v1094;
  unint64_t v1095;
  unint64_t v1096;
  int v1097;
  int v1098;
  int v1099;
  int v1100;
  unint64_t v1101;
  unint64_t v1102;
  uint64_t v1103;
  int v1104;
  unint64_t v1105;
  unint64_t v1106;
  unint64_t v1107;
  unint64_t v1108;
  unint64_t v1109;
  unint64_t v1110;
  unint64_t v1111;
  unint64_t v1112;
  int v1113;
  unint64_t v1114;
  unint64_t v1115;
  int v1116;
  unint64_t v1117;
  unint64_t v1118;
  int v1119;
  unint64_t v1120;
  unint64_t v1121;
  int v1122;
  unint64_t v1123;
  unint64_t v1124;
  int v1125;
  unint64_t v1126;
  int v1127;
  uint64_t v1128;
  int v1129;
  int v1130;
  int v1131;
  uint64_t v1132;
  int v1133;
  int v1134;
  unint64_t v1135;
  unsigned int v1136;
  int v1137;
  int v1138;
  unsigned int v1139;
  unsigned int v1140;
  int v1141;
  unint64_t v1142;
  unsigned int v1143;
  unint64_t v1144;
  uint64_t v1145;
  int v1146;
  int v1147;
  int v1148;
  int v1149;
  int v1150;
  int v1151;
  unsigned int v1152;
  unsigned __int8 *v1153;
  int v1154;
  uint64_t v1155;
  uint64_t v1156;
  int v1157;
  uint64_t v1158;
  int v1159;
  int v1160;
  int v1161;
  unint64_t v1162;
  int v1163;
  uint64_t v1164;
  int v1165;
  int v1166;
  int v1167;
  uint64_t v1168;
  uint64_t v1169;
  uint64_t v1170;
  unint64_t v1171;
  int v1172;
  int v1173;
  unsigned int v1174;
  int v1175;
  unint64_t v1176;
  unint64_t v1177;
  unint64_t v1178;
  uint64_t v1179;
  int v1180;
  int v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  int v1185;
  unsigned int v1186;
  unsigned int v1187;
  unsigned int v1188;
  unsigned int v1189;
  unsigned int v1190;
  unsigned int v1191;
  int v1192;
  unsigned int v1193;
  int v1194;
  int v1195;
  int v1196;
  int v1197;
  unsigned int v1198;
  int v1199;
  unsigned int v1200;
  int v1201;
  int v1202;
  unsigned int v1203;
  int v1204;
  unsigned int v1205;
  unsigned int v1206;
  int v1207;
  unsigned int v1208;
  int v1209;
  unsigned int v1210;
  unsigned int v1211;
  unsigned int v1212;
  unsigned int v1213;
  int v1214;
  unsigned int v1215;
  unsigned int v1216;
  unsigned int v1217;
  unsigned int v1218;
  int v1219;
  unsigned int v1220;
  unsigned int v1221;
  unsigned int v1222;
  unsigned int v1223;
  unsigned int v1224;
  int v1225;
  unsigned int v1226;
  unsigned int v1227;
  unsigned int v1228;
  unsigned int v1229;
  int v1230;
  unsigned int v1231;
  unsigned int v1232;
  int v1233;
  int v1234;
  int v1235;
  unsigned int v1236;
  uint64_t v1237;
  unsigned int v1238;
  int v1239;
  unsigned int v1240;
  unsigned int v1241;
  unsigned int v1242;
  unsigned int v1243;
  unsigned int v1244;
  unsigned int v1245;
  unsigned int v1246;
  unsigned int v1247;
  unsigned int v1248;
  unsigned int v1249;
  unsigned int v1250;
  unsigned int v1251;
  unsigned int v1252;
  unsigned int v1253;
  int v1254;
  unsigned int v1255;
  int v1256;
  unsigned int v1257;
  unsigned int v1258;
  unint64_t v1259;
  unsigned int v1260;
  int v1261;
  int v1262;
  int v1263;
  int v1264;
  int v1265;
  unsigned int v1266;
  uint64_t v1267;
  char *v1268;
  char *v1269;
  unsigned int v1270;
  int v1271;
  int v1272;
  int v1273;
  unsigned int v1274;
  unsigned int v1275;
  unsigned int v1276;
  unsigned int v1277;
  unsigned int v1278;
  unsigned int v1279;
  unsigned int v1280;
  int v1281;
  unsigned int v1282;
  int v1283;
  int v1284;
  unsigned int v1285;
  unsigned int v1286;
  unsigned int v1287;
  unsigned int v1288;
  unsigned int v1289;
  int v1290;
  int v1291;
  unsigned int v1292;
  unsigned int v1293;
  unsigned int v1294;
  int v1295;
  int v1296;
  int v1297;
  int v1298;
  int v1299;
  unsigned int v1300;
  unsigned int v1301;
  int v1302;
  int v1303;
  int v1304;
  unsigned int v1305;
  int v1306;
  unsigned int v1307;
  unsigned int v1308;
  int v1309;
  unsigned int v1310;
  unsigned int v1311;
  int v1312;
  unsigned int v1313;
  int v1314;
  unsigned int v1315;
  unsigned int v1316;
  int v1317;
  int v1318;
  int v1319;
  unsigned int v1320;
  int v1321;
  unsigned int v1322;
  unsigned int v1323;
  int v1324;
  int v1325;
  unsigned int v1326;
  unsigned __int8 *v1327;
  char v1328;
  char v1329;
  unsigned int v1330;
  int v1331;
  int v1332;
  char v1333;
  char v1334;
  int v1335;
  int i;
  int v1337;
  int v1338;
  int v1339;
  unsigned int v1340;
  int v1341;
  unsigned int v1342;
  unsigned int v1343;
  unsigned int v1344;
  unsigned int v1345;
  unsigned int v1346;
  unsigned int v1347;
  unsigned int v1348;
  int v1349;
  unsigned int v1350;
  unsigned int v1351;
  unsigned int v1352;
  unsigned int v1353;
  BOOL v1354;
  unsigned int v1355;
  unsigned int v1356;
  unsigned int v1357;
  unsigned int v1358;
  unsigned int v1359;
  unsigned int v1360;
  unsigned int v1361;
  unsigned int v1362;
  unsigned int v1363;
  unsigned int v1364;
  unsigned int v1365;
  unsigned int v1366;
  unsigned int v1367;
  unsigned int v1368;
  unsigned int v1369;
  unsigned int v1370;
  unsigned int v1371;
  unsigned int v1372;
  unsigned int v1373;
  unsigned int v1374;
  unsigned int v1375;
  unsigned int v1376;
  unsigned int v1377;
  unsigned int v1378;
  unsigned int v1379;
  unsigned int v1380;
  unsigned int v1381;
  unint64_t v1382;
  int v1383;
  unsigned int v1384;
  unsigned int v1385;
  unsigned int v1386;
  unsigned int v1387;
  unsigned int v1388;
  unsigned int v1389;
  unsigned int v1390;
  unsigned int v1391;
  unsigned int v1392;
  unsigned int v1393;
  unsigned int v1394;
  unsigned int v1395;
  unsigned int v1396;
  unsigned int v1397;
  unsigned int v1398;
  unsigned int v1399;
  unsigned int v1400;
  unsigned int v1401;
  unsigned int v1402;
  unsigned int v1403;
  unsigned int v1404;
  unsigned int v1405;
  unsigned int v1406;
  unsigned int v1407;
  unsigned int v1408;
  unsigned int v1409;
  unsigned int v1410;
  unsigned int v1411;
  unsigned int v1412;
  int v1413;
  int v1414;
  int v1415;
  int v1416;
  int v1417;
  int v1418;
  int v1419;
  int v1420;
  unsigned int v1421;
  unsigned int v1422;
  unsigned int v1423;
  unsigned int v1424;
  unsigned int v1425;
  unsigned int v1426;
  unsigned int v1427;
  unsigned int v1428;
  unsigned int v1429;
  unsigned int v1430;
  unsigned int v1431;
  unsigned int v1432;
  unsigned int v1433;
  unsigned int v1434;
  unsigned int v1435;
  unsigned int v1436;
  unsigned int v1437;
  unsigned int v1438;
  unsigned int v1439;
  unsigned int v1440;
  unsigned int v1441;
  unsigned int v1442;
  unsigned int v1443;
  unsigned int v1444;
  unsigned int v1445;
  unsigned int v1446;
  unsigned int v1447;
  unsigned int v1448;
  unsigned int v1449;
  unsigned int v1450;
  unsigned int v1451;
  unsigned int v1452;
  unsigned int v1453;
  unsigned int v1454;
  unsigned int v1455;
  unsigned int v1456;
  unsigned int v1457;
  unsigned int v1458;
  unsigned int v1459;
  unsigned int v1460;
  unsigned int v1461;
  unsigned int v1462;
  unsigned int v1463;
  unsigned int v1464;
  unsigned int v1465;
  unsigned int v1466;
  unsigned int v1467;
  unsigned int v1468;
  unsigned int v1469;
  unsigned int v1470;
  int v1471;
  int v1472;
  int v1473;
  int v1474;
  int v1475;
  int v1476;
  unsigned int v1477;
  unsigned int v1478;
  int v1479;
  int v1480;
  int v1481;
  unsigned int v1482;
  unsigned int v1483;
  unsigned int v1484;
  unsigned int v1485;
  unsigned int v1486;
  unsigned int v1487;
  unsigned int v1488;
  unsigned int v1489;
  unsigned int v1490;
  unsigned int v1491;
  int v1492;
  unint64_t v1493;
  int v1494;
  _DWORD *v1495;
  _DWORD *v1496;
  int v1497;
  int v1498;
  int v1499;
  unsigned int v1500;
  int v1501;
  unsigned int v1502;
  unsigned int v1503;
  int v1504;
  unsigned int v1505;
  _DWORD *v1506;
  _DWORD *v1507;
  int v1508;
  int v1509;
  unsigned int v1510;
  unsigned int v1511;
  unsigned int v1512;
  unsigned int v1513;
  unsigned int v1514;
  int v1515;
  unint64_t v1516;
  int v1517;
  int v1518;
  int v1519;
  unint64_t v1520;
  _DWORD *v1521;
  int v1522;
  unsigned int v1523;
  unsigned int v1524;
  unsigned int v1525;
  int v1526;
  int v1527;
  int v1528;
  int v1529;
  uint64_t v1530;
  uint64_t v1531;
  unsigned int v1532;
  unsigned int v1533;
  unsigned int v1534;
  int v1535;
  int v1536;
  int v1537;
  unsigned int v1538;
  unsigned int v1539;
  int v1540;
  unsigned int v1541;
  _DWORD *v1542;
  int v1543;
  unsigned int v1544;
  int v1545;
  _DWORD *v1546;
  int v1547;
  int v1548;
  unint64_t v1549;
  int v1550;
  int v1551;
  uint64_t v1552;
  unsigned int v1553;
  unsigned int v1554;
  unsigned int v1555;
  unsigned int v1556;
  unsigned int v1557;
  unsigned int v1558;
  unsigned int v1559;
  unsigned int v1560;
  _DWORD *v1561;
  uint64_t v1562;
  _DWORD *v1563;
  int v1564;
  unsigned int v1565;
  int v1566;
  unsigned int v1567;
  int v1568;
  unint64_t v1569;
  uint64_t v1570;
  int v1571;
  int v1572;
  int v1573;
  int v1574;
  unsigned int v1575;
  int v1576;
  int v1577;
  _DWORD *v1578;
  _DWORD *v1579;
  _DWORD *v1580;
  int v1581;
  int v1582;
  uint64_t v1583;
  int v1584;
  int v1585;
  unsigned int v1586;
  unsigned int v1587;
  unsigned int v1588;
  unsigned int v1589;
  unsigned int v1590;
  _DWORD *v1591;
  _DWORD *v1592;
  int v1593;
  unsigned int v1594;
  unsigned int v1595;
  unsigned int v1596;
  unsigned int v1597;
  _DWORD *v1598;
  _DWORD *v1599;
  uint64_t v1600;
  unsigned int v1601;
  int v1602;
  int v1603;
  int v1604;
  _DWORD *v1605;
  _DWORD *v1606;
  unsigned int v1607;
  int v1608;
  int v1609;
  _DWORD *v1610;
  _DWORD *v1611;
  int v1612;
  uint64_t v1613;
  uint64_t v1614;
  _DWORD *v1615;
  unsigned int v1616;
  unsigned int v1617;
  unsigned int v1618;
  int v1619;
  _DWORD *v1620;
  uint64_t v1621;
  _DWORD *v1622;
  _DWORD *v1623;
  _DWORD *v1624;
  _DWORD *v1625;
  _DWORD *v1626;
  uint64_t v1627;
  _DWORD *v1628;
  _DWORD *v1629;
  _DWORD *v1630;
  _DWORD *v1631;
  _DWORD *v1632;
  _DWORD *v1633;
  _DWORD *v1634;
  uint64_t v1635;
  _DWORD *v1636;
  int v1637;
  int v1638;
  int v1639;
  int v1640;
  int v1641;
  int v1642;
  int v1643;
  int v1644;
  int v1645;
  int v1646;
  int v1647;
  int v1648;
  int v1649;
  int v1650;
  int v1651;
  int v1652;
  int v1653;
  int v1654;
  int v1655;
  int v1656;
  int v1657;
  int v1658;
  int v1659;
  unsigned int v1660;
  int v1661;
  unsigned int v1662;
  int v1663;
  unsigned int v1664;
  unsigned int v1665;
  char *v1666;
  unsigned int v1667;
  int v1668;
  unsigned int v1669;
  unsigned int v1670;
  char *v1671;
  char v1672;
  char *v1673;
  char v1674;
  unsigned int v1676;
  unsigned int v1677;
  unsigned int v1678;
  unsigned int v1679;
  unsigned int v1680;
  unsigned int v1681;
  unsigned int v1682;
  unsigned int v1683;
  unsigned int v1684;
  unsigned int v1685;
  unsigned int v1686;
  unsigned int v1687;
  unsigned int v1688;
  unsigned int v1689;
  unsigned int v1690;
  unsigned int v1691;
  unsigned int v1692;
  void (*v1693)(uint64_t);
  int v1694;
  uint64_t v1695;
  unsigned int v1696;
  unsigned int v1697;
  unsigned int v1698;
  unsigned int v1699;
  unsigned int v1700;
  unsigned int v1701;
  unsigned int v1702;
  int v1703;
  unsigned int v1704;
  int v1705;
  unsigned int v1706;
  int v1707;
  int v1708;
  int v1709;
  unsigned int v1710;
  int v1711;
  int v1712;
  int v1713;
  int v1714;
  int v1715;
  int v1716;
  int v1717;
  int v1718;
  int v1719;
  int v1720;
  int v1721;
  int v1722;
  int v1723;
  unsigned int v1724;
  int v1725;
  int v1726;
  unsigned int v1727;
  unsigned int v1728;
  unsigned int v1729;
  unsigned int v1730;
  int v1731;
  int v1732;
  int v1733;
  int v1734;
  int v1735;
  int v1736;
  unsigned int v1737;
  unsigned int v1738;
  unsigned int v1739;
  int v1740;
  int v1741;
  int v1742;
  int v1743;
  int v1744;
  unsigned int v1745;
  int v1746;
  unsigned int v1747;
  unsigned int v1748;
  unsigned int v1749;
  unsigned int v1750;
  int v1751;
  unsigned int v1752;
  unsigned int v1753;
  unsigned int v1754;
  unsigned int v1755;
  char *v1756;
  unsigned int v1757;
  char *v1758;
  int v1759;
  char *v1760;
  int v1761;
  int v1762;
  uint64_t v1763;
  int v1764;
  int v1765;
  int v1766;
  int v1767;
  unsigned int v1768;
  int v1769;
  unsigned int v1770;
  int v1771;
  unsigned int v1772;
  unsigned int v1773;
  int v1774;
  unsigned int v1775;
  unsigned int v1776;
  int v1777;
  unsigned int v1778;
  unsigned int v1779;
  unsigned int v1780;
  int v1781;
  unsigned int v1782;
  unsigned int v1783;
  unsigned __int8 *v1784;
  int v1785;
  unsigned int v1786;
  int v1787;
  unsigned int v1788;
  unsigned int v1789;
  int v1790;
  unsigned int v1791;
  unsigned int v1792;
  unsigned int v1793;
  unsigned int v1794;
  unsigned int v1795;
  unsigned int v1796;
  int v1797;
  int v1798;
  unsigned int v1799;
  unsigned int v1800;
  unsigned int v1801;
  unsigned int v1802;
  unsigned int v1803;
  unsigned int v1804;
  unsigned int v1805;
  int v1806;
  unsigned int v1807;
  int v1808;
  int v1809;
  int v1810;
  unsigned int v1811;
  unsigned int v1812;
  int v1813;
  int v1814;
  int v1815;
  unsigned int v1816;
  int v1817;
  unsigned int v1818;
  unsigned int v1819;
  int v1820;
  int v1821;
  int v1822;
  unsigned int v1823;
  int v1824;
  unsigned int v1825;
  int v1826;
  unsigned int v1827;
  unsigned int v1828;
  int v1829;
  int v1830;
  unsigned int v1831;
  unsigned int v1832;
  int v1833;
  int v1834;
  unsigned int v1835;
  unsigned int v1836;
  unsigned int v1837;
  unsigned int v1838;
  unsigned int v1839;
  unsigned int v1840;
  unsigned int v1841;
  int v1842;
  unsigned int v1843;
  int v1844;
  unsigned int v1845;
  unsigned int v1846;
  unsigned int v1847;
  unsigned int v1848;
  int v1849;
  int v1850;
  unsigned int v1851;
  unsigned int v1852;
  unsigned int v1853;
  unsigned int v1854;
  unsigned int v1855;
  unsigned int v1856;
  int v1857;
  unsigned int v1858;
  unsigned int v1859;
  unsigned int v1860;
  int v1861;
  int v1862;
  unsigned int v1863;
  unsigned int v1864;
  int v1865;
  unsigned int v1866;
  unsigned int v1867;
  unsigned int v1868;
  int v1869;
  int v1870;
  unsigned int v1871;
  unsigned int v1872;
  int v1873;
  int v1874;
  unsigned int v1875;
  int v1876;
  unsigned int v1877;
  unsigned int v1878;
  int v1879;
  int v1880;
  unsigned int v1881;
  unsigned int v1882;
  unsigned int v1883;
  unsigned int v1884;
  unsigned int v1885;
  unsigned int v1886;
  unsigned int v1887;
  unsigned int v1888;
  int v1889;
  int v1890;
  unsigned int v1891;
  uint64_t v1892;
  int v1893;
  int v1894;
  int v1895;
  unsigned int v1896;
  unsigned int v1897;
  int v1898;
  unsigned int v1899;
  unsigned int v1900;
  unsigned int v1901;
  _DWORD *v1902;
  int v1903;
  int v1904;
  unsigned int v1905;
  unsigned int v1906;
  unsigned int v1907;
  uint64_t v1908;
  int v1909;
  unsigned int v1910;
  uint64_t v1911;
  unsigned int v1912;
  unsigned int v1913;
  uint64_t v1914;
  int v1915;
  unsigned int v1916;
  uint64_t v1917;
  int v1918;
  unsigned int v1919;
  uint64_t v1920;
  int v1921;
  unsigned int v1922;
  uint64_t v1923;
  int v1924;
  uint64_t v1925;
  unsigned int v1926;
  unsigned int v1927;
  uint64_t v1928;
  unsigned int v1929;
  unsigned int v1930;
  uint64_t v1931;
  int v1932;
  unsigned int v1933;
  uint64_t v1934;
  int v1935;
  unsigned int v1936;
  uint64_t v1937;
  int v1938;
  unsigned int v1939;
  uint64_t v1940;
  int v1941;
  int v1942;
  uint64_t v1943;
  unsigned int v1944;
  unsigned int v1945;
  uint64_t v1946;
  unsigned int v1947;
  unsigned int v1948;
  uint64_t v1949;
  unsigned int v1950;
  unsigned int v1951;
  uint64_t v1952;
  int v1953;
  unsigned int v1954;
  unsigned int v1955;
  unsigned int v1956;
  int v1957;
  unsigned int v1958;
  unsigned int v1959;
  unsigned int v1960;
  int v1961;
  unsigned int v1962;
  unsigned int v1963;
  unsigned int v1964;
  unsigned int v1965;
  int v1966;
  unsigned int v1967;
  unsigned int v1968;
  int v1969;
  int v1970;
  int v1971;
  int v1972;
  int v1973;
  uint64_t v1974;
  int v1975;
  int v1976;
  unsigned int v1977;
  unsigned int v1978;
  int v1979;
  int v1980;
  int v1981;
  int v1982;
  unsigned int v1983;
  unsigned int v1984;
  unsigned int v1985;
  unsigned int v1986;
  int v1987;
  int v1988;
  unsigned int v1989;
  int v1990;
  unsigned int v1991;
  unsigned int v1992;
  int v1993;
  int v1994;
  unsigned int v1995;
  unsigned int v1996;
  unsigned int v1997;
  unsigned int v1998;
  unsigned int v1999;
  int v2000;
  unsigned int v2001;
  unsigned int v2002;
  unsigned int v2003;
  unsigned int v2004;
  char *v2005;
  int v2006;
  unsigned int v2007;
  unsigned int v2008;
  int v2009;
  int v2010;
  int v2011;
  unsigned int v2012;
  int v2013;
  int v2014;
  unsigned __int8 *v2015;
  unsigned int v2016;
  int v2017;
  unsigned int v2018;
  unsigned int v2019;
  unsigned int v2020;
  int v2021;
  int v2022;
  unsigned int v2023;
  int v2024;
  int v2025;
  int v2026;
  unsigned int v2027;
  int v2028;
  int v2029;
  int v2030;
  int v2031;
  int v2032;
  int v2033;
  int v2034;
  unsigned int v2035;
  int v2036;
  unsigned int v2037;
  unsigned int v2038;
  unsigned int v2039;
  int v2040;
  char *v2041;
  int v2042;
  int v2043;
  int v2044;
  int v2045;
  int v2046;
  unsigned int v2047;
  int v2048;
  unsigned int v2049;
  unsigned int v2050;
  int v2051;
  int v2052;
  unsigned int v2053;
  unsigned int v2054;
  int v2055;
  unsigned int v2056;
  unsigned int v2057;
  unsigned int v2058;
  unsigned int v2059;
  unsigned int v2060;
  unsigned int v2061;
  unsigned int v2062;
  int v2063;
  int v2064;
  unsigned int v2065;
  unsigned int v2066;
  int v2067;
  int v2068;
  unsigned int v2069;
  unsigned int v2070;
  int v2071;
  unsigned int v2072;
  unsigned int v2073;
  int v2074;
  unsigned int v2075;
  unsigned int v2076;
  int v2077;
  int v2078;
  int v2079;
  unsigned int v2080;
  unsigned int v2081;
  int v2082;
  unsigned int v2083;
  unsigned int v2084;
  int v2085;
  unsigned int v2086;
  unsigned int v2087;
  int v2088;
  unsigned int v2089;
  unsigned int v2090;
  int v2091;
  unsigned int v2092;
  int v2093;
  unsigned int v2094;
  unsigned int v2095;
  int v2096;
  int v2097;
  unsigned int v2098;
  unsigned int v2099;
  int v2100;
  int v2101;
  unsigned int v2102;
  unsigned int v2103;
  unsigned int v2104;
  int v2105;
  unsigned int v2106;
  unsigned int v2107;
  unsigned int v2108;
  unsigned int v2109;
  unsigned int v2110;
  unsigned int v2111;
  unsigned int v2112;
  int v2113;
  unsigned int v2114;
  int v2115;
  int v2116;
  unsigned int v2117;
  int v2118;
  unsigned int v2119;
  unsigned int v2120;
  unsigned int v2121;
  int v2122;
  unsigned int v2123;
  unsigned int v2124;
  int v2125;
  unsigned int v2126;
  unsigned int v2127;
  int v2128;
  unsigned int v2129;
  int v2130;
  unsigned int v2131;
  unsigned int v2132;
  int v2133;
  unsigned int v2134;
  unsigned int v2135;
  int v2136;
  unsigned int v2137;
  int v2138;
  unsigned int v2139;
  int v2140;
  int v2141;
  int v2142;
  unsigned int v2143;
  int v2144;
  int v2145;
  unsigned int v2146;
  int v2147;
  int v2148;
  int v2149;
  unsigned int v2150;
  unsigned int v2151;
  int v2152;
  int v2153;
  unsigned int v2154;
  unsigned int v2155;
  int v2156;
  unsigned int v2157;
  unsigned int v2158;
  int v2159;
  unsigned int v2160;
  unsigned int v2161;
  unsigned int v2162;
  unsigned int v2163;
  int v2164;
  unsigned int v2165;
  unsigned int v2166;
  int v2167;
  unsigned int v2168;
  int v2169;
  unsigned int v2170;
  unsigned int v2171;
  int v2172;
  int v2173;
  int v2174;
  unsigned int v2175;
  int v2176;
  int v2177;
  unsigned int v2178;
  int v2179;
  int v2180;
  unsigned int v2181;
  int v2182;
  unsigned int v2183;
  unsigned int v2184;
  unsigned int v2185;
  int v2186;
  int v2187;
  int v2188;
  int v2189;
  unsigned int v2190;
  int v2191;
  int v2192;
  int v2193;
  int v2194;
  unsigned int v2195;
  unsigned int v2196;
  unsigned int v2197;
  int v2198;
  int v2199;
  unsigned int v2200;
  char *v2201;
  unsigned int v2202;
  int v2203;
  int v2204;
  unsigned int v2205;
  unsigned int v2206;
  unsigned int v2207;
  unsigned int v2208;
  unsigned int v2209;
  unsigned int v2210;
  unsigned int v2211;
  int v2212;
  int v2213;
  unsigned int v2214;
  int v2215;
  int v2216;
  unsigned int v2217;
  unsigned int v2218;
  unsigned int v2219;
  int v2220;
  unsigned int v2221;
  int v2222;
  int v2223;
  unsigned int v2224;
  unsigned int v2225;
  int v2226;
  int v2227;
  int v2228;
  unsigned int v2229;
  unsigned int v2230;
  unsigned int v2231;
  int v2232;
  unint64_t v2233;
  unsigned int v2234;
  int v2235;
  int v2236;
  unsigned int v2237;
  unsigned int v2238;
  unsigned int v2239;
  int v2240;
  int v2241;
  int v2242;
  unsigned int v2243;
  int v2244;
  unsigned int v2245;
  unsigned int v2246;
  unsigned int v2247;
  int v2248;
  unsigned int v2249;
  int v2250;
  int v2251;
  int v2252;
  int v2253;
  unsigned int v2254;
  unsigned int v2255;
  int v2256;
  unsigned int v2257;
  int v2258;
  unsigned int v2259;
  int v2260;
  unsigned int v2261;
  unsigned int v2262;
  int v2263;
  int v2264;
  int v2265;
  int v2266;
  unsigned int v2267;
  int v2268;
  int v2269;
  int v2270;
  int v2271;
  unsigned int v2272;
  int v2273;
  char v2274;
  int v2275;
  unsigned int v2276;
  int v2277;
  int v2278;
  unsigned int v2279;
  unsigned int v2280;
  unsigned int v2281;
  int v2282;
  int v2283;
  int v2284;
  int v2285;
  int v2286;
  unsigned int v2287;
  int v2288;
  unsigned int v2289;
  int v2290;
  uint64_t v2291;
  uint64_t v2292;
  int v2293;
  int v2294;
  int v2295;
  int v2296;
  int v2297;
  int v2298;
  unsigned int v2299;
  int v2300;
  int v2301;
  unsigned int v2302;
  int v2303;
  uint64_t v2304;
  unsigned int v2305;
  uint64_t v2306;
  unsigned int v2307;
  int v2308;
  _BYTE v2309[48];

  v1 = result;
  v2 = 1063133693 * ((2 * (result & 0x7516574B) - result - 1964398412) ^ 0x4FE815DA);
  v3 = *(_DWORD *)(result + 28) ^ v2;
  v4 = *(unsigned __int8 **)(result + 32);
  v5 = *(_DWORD *)(result + 24) - v2;
  v6 = v5 - 1851441763;
  if (v5 != 2034437679)
  {
    v7 = 0;
    result = 4111971379;
    do
    {
      v8 = v6 < 0xAE84BCC;
      v9 = *(_QWORD *)(v1 + 16) + v7;
      v4[v7] = *((_BYTE *)*(&off_1015B46D0 + v3 + 1277031471)
               + (v7 & 0xF | (16
                            * ((1772489163 * ((1772489163 * (_DWORD)v9) ^ ((1772489163 * v9) >> 16))) >> 24)))) ^ *(_BYTE *)(v9 - 0xC27AFEAA03E150FLL) ^ (-53 * ((-53 * v9) ^ ((1772489163 * v9) >> 16)));
      if (v8 == ++v7 > 0xF517B433)
        LOBYTE(v8) = v7 + 182995916 < v6;
    }
    while (v8);
  }
  v10 = *(_QWORD *)v1;
  v11 = (unsigned __int8 *)(*(_QWORD *)v1 - 0x5D3BF0420E08485FLL);
  if (*(_QWORD *)v1 == 0x5D3BF0420E08485FLL)
  {
    v12 = -42900;
  }
  else
  {
    if (v11 == v4)
    {
      v2309[0] = *v4;
      v2309[1] = *(_BYTE *)(v10 - 0x5D3BF0420E08485ELL);
      v2309[2] = *(_BYTE *)(v10 - 0x5D3BF0420E08485DLL);
      v2309[3] = *(_BYTE *)(v10 - 0x5D3BF0420E08485CLL);
      v2309[4] = *(_BYTE *)(v10 - 0x5D3BF0420E08485BLL);
      v2309[5] = *(_BYTE *)(v10 - 0x5D3BF0420E08485ALL);
      v2309[6] = *(_BYTE *)(v10 - 0x5D3BF0420E084859);
      v2309[7] = *(_BYTE *)(v10 - 0x5D3BF0420E084858);
      v2309[8] = *(_BYTE *)(v10 - 0x5D3BF0420E084857);
      v2309[9] = *(_BYTE *)(v10 - 0x5D3BF0420E084856);
      v2309[10] = *(_BYTE *)(v10 - 0x5D3BF0420E084855);
      v2309[11] = *(_BYTE *)(v10 - 0x5D3BF0420E084854);
      v2309[12] = *(_BYTE *)(v10 - 0x5D3BF0420E084853);
      v2309[13] = *(_BYTE *)(v10 - 0x5D3BF0420E084852);
      v2309[14] = *(_BYTE *)(v10 - 0x5D3BF0420E084851);
      v2309[15] = *(_BYTE *)(v10 - 0x5D3BF0420E084850);
      v11 = v2309;
    }
    v12 = -42900;
    if (v4)
    {
      v13 = *(unsigned __int8 **)(v1 + 40);
      if (v13)
      {
        v1784 = v4;
        v14 = v5 - 1264436541;
        v15 = ((2 * (v14 ^ 0xC0958AF8)) ^ 0x251E7BEC) & (v14 ^ 0xC0958AF8) ^ (2 * (v14 ^ 0xC0958AF8)) & 0x128F3DF6;
        v16 = ((4 * (v15 ^ 0x12810412)) ^ 0x4A3CF7D8) & (v15 ^ 0x12810412) ^ (4 * (v15 ^ 0x12810412)) & 0x128F3DF4;
        v17 = (v14 ^ 0xC090A6EC) & (2 * (v14 & 0xD21AB70E)) ^ v14 & 0xD21AB70E;
        result = 311377392;
        v18 = ((16 * (v16 ^ 0x10830826)) ^ 0x28F3DF60) & (v16 ^ 0x10830826) ^ (16 * (v16 ^ 0x10830826)) & 0x128F3DF0;
        v19 = (v16 ^ 0x20C35C0) & (16 * ((v15 ^ 0xE3860) & (4 * v17) ^ v17)) ^ (v15 ^ 0xE3860) & (4 * v17) ^ v17;
        v20 = v19 ^ 0x128F3DF6 ^ (v18 ^ 0x831D00) & (v19 << 8);
        v21 = v14 ^ (2
                   * ((v20 << 16) & 0x128F0000 ^ v20 ^ ((v20 << 16) ^ 0x3DF60000) & (((v18 ^ 0x120C2096) << 8) & 0x128F0000 ^ 0x10820000 ^ (((v18 ^ 0x120C2096) << 8) ^ 0xF3D0000) & (v18 ^ 0x120C2096))));
        v22 = v3 + 711814250;
        if (((v3 + 1277029369) & v21 ^ 0xFFFFFFFD) + ((2 * v21) & 0x10) != -1 || v21 == -704066334)
        {
          v12 = -42899;
        }
        else
        {
          v2015 = v11;
          v24 = v3 + 287258817;
          v25 = (uint64_t (*)(uint64_t))*(&off_1015B46D0 + v3 + 1277029636);
          v26 = v25(1032);
          v27 = v25(1032);
          v12 = -42885;
          if (v26 && v27)
          {
            v2291 = v26;
            v1974 = v27;
            v1695 = v1;
            v28 = (v22 - 1584900749) & 0x973DFFBF;
            v2111 = v28 + 476544759;
            v29 = v28 - 387306882;
            v30 = *((_BYTE *)*(&off_1015B46D0 + (int)(v28 - 387305275)) + (v13[11] ^ 0xCLL) - 4);
            v31 = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v28 - 387305901)) + (v13[5] ^ 0xBFLL) - 8);
            v32 = *((_BYTE *)*(&off_1015B46D0 + (int)(v28 ^ 0x1715D6F9)) + (v13[14] ^ 0xEELL) - 12) + 15;
            v33 = (((v31 >> 7) | (2 * v31)) >> ((((v22 + 115) & 0xBF) - 9) ^ 0xAE)) & 0xC ^ ((v31 >> 7) | (2 * v31)) | (((v32 ^ (16 * v32) ^ (2 * v32)) ^ 0xD8) << 8) | (((*((unsigned __int8 *)*(&off_1015B46D0 + (int)(v28 - 387306882)) + (*v13 ^ 0xELL) - 8) + (*v13 ^ 0x4E)) ^ 0xE9) << 24);
            v34 = v28;
            v35 = *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v28 - 387304427))
                  + (((v13[4] ^ -v13[4] ^ (46 - (v13[4] ^ 0x2Eu))) + 46) ^ 0xEFLL)
                  - 8);
            v36 = v33 & 0xFF00FFFF | ((((v35 >> 6) | (4 * v35)) ^ 0xD9 ^ ((16 * ((v35 >> 6) | (4 * v35))) | 0x20)) << 16);
            v37 = v28;
            v1955 = v21;
            v38 = ((v13[2] ^ 0xEF) + (v13[2] ^ 0x68) + 1) ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v28 - 387304970))
                                                            + (v13[2] ^ 0x51)
                                                            - 12);
            v39 = *((_BYTE *)*(&off_1015B46D0 + (int)(v28 ^ 0x1715D7F8))
                  + ((v13[12] - ((2 * v13[12]) & 0x92u) + 73) ^ 0xBALL)
                  - 12);
            v40 = (v30 ^ ((v30 ^ 0x5C) >> 5) ^ ((v30 ^ 0x5C) >> 4)) ^ 0x8B | ((*((unsigned __int8 *)*(&off_1015B46D0 + (int)(v28 ^ 0x1715DC36)) + (v13[7] ^ 0x8BLL) - 4) ^ v13[7]) << 24) | (((v13[6] ^ ((v13[6] ^ 0xDD) + 6)) ^ 0xA9 ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v28 ^ 0x1715D65F)) + (v13[6] ^ 0xDLL))) << 8) | (((v39 ^ (8 * v39)) ^ 0xF2) << 16);
            v41 = *((_BYTE *)*(&off_1015B46D0 + (int)(v28 - 387304733)) + (v13[15] ^ 0xA8) - 8) ^ v13[15];
            v42 = ((*((unsigned __int8 *)*(&off_1015B46D0 + (int)(v34 ^ 0x1715DD1A)) + (v13[3] ^ 0x2ALL) - 4) ^ 0x75) << 8) | ((((v13[13] ^ 0xB1) + *((_BYTE *)*(&off_1015B46D0 + (int)(v34 ^ 0x1715DDA1)) + (v13[13] ^ 0xF2)) + 1) ^ 0xA8) << 16) | ((v41 ^ 0xDC) << 24) | v38 ^ 0xCB;
            v43 = v42 ^ v36 ^ v40;
            v44 = (((*((_BYTE *)*(&off_1015B46D0 + (int)(v28 - 387305858)) + (v13[9] ^ 0x9CLL)) - 91) ^ 0x5B) << 16) | ((((v13[1] ^ 0x75) + (v13[1] ^ 0x19)) ^ *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v29 + 389)) + (v13[1] ^ 0x52) - 4) ^ 0x78) << 24) | ((v13[10] ^ 0xAB ^ ((v13[10] ^ 0xAB) + 86) ^ 0x92 ^ *((_BYTE *)*(&off_1015B46D0 + (int)(v28 ^ 0x1715D714)) + (v13[10] ^ 0x2ELL) - 8)) << 8) | *((unsigned __int8 *)*(&off_1015B46D0 + (int)(v29 + 2613)) + (v13[8] ^ 0xABLL) - 8) ^ 3;
            v45 = v44 ^ v42 ^ v36;
            v46 = v40 ^ v36 ^ v44;
            v47 = v46 ^ 0x1D72CF2D;
            v48 = (((*((unsigned __int8 *)*(&off_1015B46D0 + (int)(v34 ^ 0x1715DD1A)) + (v13[3] ^ 0x2ALL) - 4) ^ 0x75) << 8) | v38 ^ 0xCB) ^ 0x47D0;
            v2299 = (v22 - 1584900749) & 0x973DFFBF;
            v49 = (char *)*(&off_1015B46D0 + (int)(v37 ^ 0x1715D14E)) - 4;
            v50 = v41 ^ 0xEAu;
            v51 = (char *)*(&off_1015B46D0 + (int)(v29 + 1903)) - 12;
            v52 = *(_DWORD *)&v49[4 * (((v43 ^ 0xCFD81A93) >> 16) ^ 0x62)] ^ __ROR4__(*(_DWORD *)&v51[4 * v50] ^ 0xC41F4BEA, 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (BYTE1(v45) ^ 0xDE)] ^ 0xC41F4BEA, 8) ^ __ROR4__(*(_DWORD *)&v49[4 * ((v40 ^ v36 ^ v44) ^ 0x4F)] ^ v46 ^ 0x98A3B269, 16);
            v53 = *(_DWORD *)&v51[4 * (HIBYTE(v46) ^ 0x7B)] ^ 0x75AAB03F;
            v54 = (uint64_t)*(&off_1015B46D0 + (int)(v29 + 747));
            v2294 = *(_DWORD *)&v49[4 * (((v42 ^ 0x50B847D0u) >> 16) ^ 0x62)] ^ ((v42 ^ 0x50B847D0u) >> 16) ^ __ROR4__(*(_DWORD *)&v51[4 * (BYTE1(v43) ^ 0x7C)] ^ 0xC41F4BEA, 8) ^ __ROR4__(v53 - ((2 * v53) & 0x636BF7AA) - 1313473579, 24);
            v55 = v45 ^ 0x98A3B264 ^ *(_DWORD *)&v49[4 * ((v44 ^ v42 ^ v36) ^ 0x42)];
            v56 = (uint64_t)*(&off_1015B46D0 + (int)(v2299 ^ 0x1715DD1D));
            v57 = *(_DWORD *)(v56 + 4 * ((v42 ^ v36 ^ v40) ^ 0x41u));
            v58 = v43 ^ 0x93;
            v59 = v57 & 0xFF7FFFFF ^ (v58 + 825631077) ^ (45797084 - (v57 & 0x800000));
            HIDWORD(v60) = v59 ^ v58;
            LODWORD(v60) = v59;
            v61 = (-86989265 * *(_DWORD *)(v54 + 4 * BYTE2(v47))) ^ __ROR4__((-86989265* *(_DWORD *)(v54+ 4 * ((v45 ^ 0x45BEB820u) >> 24))) ^ 0x527EE3E4, 24) ^ __ROR4__(HIBYTE(v48) ^ (HIBYTE(v48) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (HIBYTE(v48) ^ 0xD2u)), 8) ^ (v60 >> 16);
            HIDWORD(v60) = v38 ^ 0x1B ^ *(_DWORD *)&v49[4 * (v38 ^ 0x79)] ^ 0x98A3B244;
            LODWORD(v60) = HIDWORD(v60);
            v62 = (((v45 ^ 0x45BEB820u) >> 16) + 825631077) ^ ((v45 ^ 0x45BEB820u) >> 16) ^ *(_DWORD *)(v56 + 4 * (((v45 ^ 0x45BEB820u) >> 16) ^ 0xD2u)) ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * ((v43 ^ 0xCFD81A93) >> 24))) ^ 0x527EE3E4, 24) ^ __ROR4__(BYTE1(v47) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (BYTE1(v47) ^ 0x62)], 8) ^ (v60 >> 16);
            v63 = (-86989265
                 * *(_DWORD *)(v54
                             + 4
                             * (((v62 ^ 0x23EFD196u) >> (BYTE2(v60) & 0x10) >> (BYTE2(v60) & 0x10 ^ 0x10)) ^ 0x7Fu))) ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * (HIBYTE(v52) ^ 0xA6))) ^ 0x527EE3E4, 24);
            LODWORD(v60) = __ROR4__(v55, 16);
            v64 = v2294 ^ v60;
            v65 = v63 ^ __ROR4__(*(_DWORD *)&v49[4 * (((unsigned __int16)(v61 ^ 0x923D) >> 8) ^ 0x62)] ^ ((unsigned __int16)(v61 ^ 0x923D) >> 8) ^ 0x98A3B244, 8) ^ __ROR4__(v64 ^ 0xCB ^ ((v64 ^ 0xCB) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * ((v2294 ^ v60) ^ 0x19u)), 16);
            v66 = *(_DWORD *)&v51[4 * (BYTE2(v52) ^ 7)] ^ __ROR4__(((v64 ^ 0xD3FD0DCB) >> 24) ^ (((v64 ^ 0xD3FD0DCB) >> 24)+ 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (((v64 ^ 0xD3FD0DCB) >> 24) ^ 0xD2)), 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (BYTE1(v62) ^ 0xB7)] ^ 0xC41F4BEA, 8) ^ __ROR4__(v61 ^ 0x3D ^ ((v61 ^ 0x3D) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (v61 ^ 0xEFu)), 16);
            LOBYTE(v64) = v52 ^ BYTE2(v43) ^ 0xD8;
            v67 = *(_DWORD *)&v51[4 * (((v2294 ^ v60) >> 16) ^ 0x9B)] ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * (HIBYTE(v61) ^ 0xBC))) ^ 0x527EE3E4, 24) ^ __ROR4__(BYTE1(v52) ^ 0x98A3B2B6 ^ *(_DWORD *)&v49[4 * (BYTE1(v52) ^ 0x90)], 8) ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * (v62 ^ 0xE9u))) ^ 0x527EE3E4, 16);
            v68 = *(_DWORD *)&v51[4 * (BYTE2(v61) ^ 0xDD)] ^ __ROR4__(((v62 ^ 0x23EFD196u) >> 24) ^ (((v62 ^ 0x23EFD196u) >> 24)+ 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (((v62 ^ 0x23EFD196u) >> 24) ^ 0xD2)), 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (v64 ^ 0xC5)] ^ 0xC41F4BEA, 16);
            LODWORD(v60) = __ROR4__(BYTE1(v64) ^ 0xD ^ ((BYTE1(v64) ^ 0xD) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (BYTE1(v64) ^ 0xDFu)), 8);
            LOWORD(v58) = v68 ^ v60;
            v69 = v68 ^ v60 ^ 0xA7AE331;
            BYTE1(v64) = BYTE1(v66) ^ 0x42;
            v70 = (-86989265 * *(_DWORD *)(v54 + 4 * (BYTE2(v69) ^ 0x7Fu))) ^ __ROR4__((-86989265* *(_DWORD *)(v54+ 4* ((v65 ^ 0xF405CB2F) >> 24))) ^ 0x527EE3E4, 24) ^ __ROR4__((-86989265* *(_DWORD *)(v54 + 4 * ((unsigned __int16)(v67 ^ 0x5A08) >> 8))) ^ 0x527EE3E4, 8) ^ __ROR4__(((v66 ^ 0xAD)+ 1313473579+ (v66 ^ 0xAD)- 2* ((v66 ^ 0xAD)+ 1313473579)) ^ 0x75AAB03F ^ *(_DWORD *)&v51[4 * (v66 ^ 0xCB)], 16);
            v71 = ((v65 ^ 0xF405CB2F) >> 16);
            v72 = *(_DWORD *)&v49[4 * (v71 ^ 0x62)] ^ __ROR4__(((v66 ^ 0xB42442AD) >> 24) ^ (((v66 ^ 0xB42442AD) >> 24)+ 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (((v66 ^ 0xB42442AD) >> 24) ^ 0xD2)), 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (BYTE1(v58) ^ 0x85)] ^ 0xC41F4BEA, 8) ^ __ROR4__(v67 ^ 8 ^ ((v67 ^ 8)+ 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (v67 ^ 0xDAu)), 16);
            v73 = (-86989265 * *(_DWORD *)(v54 + 4 * ((v66 ^ 0xB42442AD) >> 16))) ^ __ROR4__(((v67 ^ 0x983E5A08) >> 24) ^ (((v67 ^ 0x983E5A08) >> 24) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (((v67 ^ 0x983E5A08) >> 24) ^ 0xD2)), 24) ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * (((unsigned __int16)(v65 ^ 0xCB2F) >> 8) ^ 0x7Fu))) ^ 0x527EE3E4, 8) ^ __ROR4__(*(_DWORD *)&v51[4 * (v58 ^ 0x57)] ^ 0xC41F4BEA, 16);
            v74 = (-86989265 * *(_DWORD *)(v54 + 4 * ((v67 ^ 0x983E5A08) >> 16))) ^ __ROR4__(HIBYTE(v69) ^ (HIBYTE(v69) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (HIBYTE(v69) ^ 0xD2)), 24) ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * BYTE1(v64))) ^ 0x527EE3E4, 8) ^ __ROR4__(*(_DWORD *)&v51[4 * (v65 ^ 0x49)] ^ 0xC41F4BEA, 16);
            v75 = *(_DWORD *)(v54 + 4 * ((v74 ^ 0x54F88EE3) >> 16));
            LOBYTE(v64) = v72 ^ v71;
            v76 = v72 ^ v71 ^ 0x1CC2CD05;
            LODWORD(v60) = ((-695914120 * v75) | ((-86989265 * v75) >> 29)) ^ __ROR4__(((v70 ^ 0xBF85E20u) >> 24) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (((v70 ^ 0xBF85E20u) >> 24) ^ 0x62)], 21) ^ 0x4132D14F;
            HIDWORD(v60) = v60;
            v77 = (v60 >> 3) ^ __ROR4__(*(_DWORD *)&v51[4 * (v64 ^ 0x63)] ^ 0xC41F4BEA, 16) ^ __ROR4__(*(_DWORD *)(v56 + 4 * (BYTE1(v73) ^ 0x76u)) ^ BYTE1(v73) ^ 0xA4 ^ ((BYTE1(v73) ^ 0xA4) + 825631077) ^ 0x2BACEDC, 8);
            v78 = (-86989265 * *(_DWORD *)(v54 + 4 * ((v70 ^ 0xBF85E20u) >> 16))) ^ __ROR4__(HIBYTE(v76) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (HIBYTE(v76) ^ 0x62)], 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (v73 ^ 0xDE)] ^ 0xC41F4BEA, 16) ^ __ROR4__(*(_DWORD *)(v56 + 4 * (((unsigned __int16)(v74 ^ 0x8EE3) >> 8) ^ 0xD2u)) ^ ((unsigned __int16)(v74 ^ 0x8EE3) >> 8) ^ (((unsigned __int16)(v74 ^ 0x8EE3) >> 8) + 825631077) ^ 0x2BACEDC, 8);
            v79 = *(_DWORD *)(v56 + 4 * (BYTE2(v76) ^ 0xD2u)) ^ (BYTE2(v76) + 825631077) ^ __ROR4__(*(_DWORD *)&v51[4 * (HIBYTE(v73) ^ 0x67)] ^ 0xC41F4BEA, 24) ^ __ROR4__(((unsigned __int16)(v70 ^ 0x5E20) >> 8) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (((unsigned __int16)(v70 ^ 0x5E20) >> 8) ^ 0x62)], 8) ^ __ROR4__(v74 ^ 0xE3 ^ ((v74 ^ 0xE3) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (v74 ^ 0x31u)), 16);
            v80 = (-86989265 * *(_DWORD *)(v54 + 4 * (BYTE2(v73) ^ 0xC0u))) ^ __ROR4__((-86989265* *(_DWORD *)(v54+ 4* (HIBYTE(v74) ^ 0x2B))) ^ 0x527EE3E4, 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (BYTE1(v72) ^ 0xAB)] ^ 0xC41F4BEA, 8) ^ __ROR4__(v70 ^ 0x20 ^ ((v70 ^ 0x20) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (v70 ^ 0xF2u)), 16);
            LOWORD(v74) = v79 ^ BYTE2(v76) ^ 0x9046;
            v81 = v78 ^ 0x603C6A32;
            v82 = *(_DWORD *)&v49[4 * (((v80 ^ 0x89F1DBDB) >> 16) ^ 0x62)] ^ __ROR4__(*(_DWORD *)&v51[4 * (HIBYTE(v77) ^ 0x2F)] ^ 0xC41F4BEA, 24) ^ __ROR4__(v78 ^ 0x32 ^ ((v78 ^ 0x32) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (v78 ^ 0xE0u)), 16) ^ ((v80 ^ 0x89F1DBDB) >> 16) ^ __ROR4__(*(_DWORD *)(v56 + 4 * (BYTE1(v74) ^ 0xD2u)) ^ BYTE1(v74) ^ (BYTE1(v74) + 825631077) ^ 0x2BACEDC, 8);
            v83 = ((v77 ^ 0x4953E873) >> 16);
            v84 = *(_DWORD *)(v56 + 4 * (v83 ^ 0xD2u)) ^ (v83 + 825631077) ^ __ROR4__(*(_DWORD *)&v51[4 * (HIBYTE(v78) ^ 6)] ^ 0xC41F4BEA, 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (BYTE1(v80) ^ 0xBD)] ^ 0xC41F4BEA, 8) ^ __ROR4__(*(_DWORD *)&v51[4 * ((v74 & 0x4F | (v79 ^ BYTE2(v76)) & 0xB0) ^ 0x66)] ^ 0xC41F4BEA, 16);
            v85 = (-86989265 * *(_DWORD *)(v54 + 4 * (BYTE2(v81) - ((v81 >> 15) & 0xFE) + 127))) ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * (HIBYTE(v79) ^ 0x4F))) ^ 0x527EE3E4, 24) ^ __ROR4__(((unsigned __int16)(v77 ^ 0xE873) >> 8) ^ (((unsigned __int16)(v77 ^ 0xE873) >> 8) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (((unsigned __int16)(v77 ^ 0xE873) >> 8) ^ 0xD2u)), 8) ^ __ROR4__(v80 ^ 0xDB ^ ((v80 ^ 0xDB) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (v80 ^ 9u)), 16);
            v86 = *(_DWORD *)&v51[4 * (BYTE2(v79) ^ 0xB4)] ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * (HIBYTE(v80) ^ 0xF6))) ^ 0x527EE3E4, 24) ^ __ROR4__(BYTE1(v81) ^ (BYTE1(v81) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (BYTE1(v81) ^ 0xD2u)), 8) ^ __ROR4__((-86989265* *(_DWORD *)(v54+ 4* (v77 ^ 0xCu))) ^ 0x527EE3E4, 16);
            LOBYTE(v75) = v84 ^ v83;
            v87 = v84 ^ v83 ^ 0x8277F11D;
            v88 = *(_DWORD *)&v51[4 * (BYTE2(v86) ^ 0xA2)] ^ __ROR4__(((v82 ^ 0xEBC6B454) >> 24) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (((v82 ^ 0xEBC6B454) >> 24) ^ 0x62)], 24) ^ __ROR4__(v87 ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (v75 ^ 0x7F)], 16) ^ __ROR4__(*(_DWORD *)(v56+ 4* ((((v85 ^ 0x746BD2) >> 8) & 1 | 0xD2) ^ ((v85 ^ 0x746BD2) >> 8) & 0xFE)) ^ ((unsigned __int16)(v85 ^ 0x6BD2) >> 8) ^ (((unsigned __int16)(v85 ^ 0x6BD2) >> 8) + 825631077) ^ 0x2BACEDC, 8);
            v89 = (-86989265 * *(_DWORD *)(v54 + 4 * ((v82 ^ 0xEBC6B454) >> 16))) ^ __ROR4__(HIBYTE(v87) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (HIBYTE(v87) ^ 0x62)], 24) ^ __ROR4__(v85 ^ 0x98A3B296 ^ *(_DWORD *)&v49[4 * (v85 ^ 0xB0)], 16) ^ __ROR4__(*(_DWORD *)&v49[4 * (((unsigned __int16)(v86 ^ 0x96E0) >> 8) ^ 0x62)] ^ (((((unsigned __int16)(v86 ^ 0x96E0) >> 8) + (((unsigned __int16)(v86 ^ 0x96E0) >> 8) ^ 0x367684CE) + 1) ^ 0xFFFFFFFE) + ((unsigned __int16)(v86 ^ 0x96E0) >> 8)) ^ 0x512AC975, 8);
            v90 = *(_DWORD *)&v51[4 * (BYTE2(v84) ^ 0x11)] ^ __ROR4__(HIBYTE(v85) ^ (HIBYTE(v85) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (HIBYTE(v85) ^ 0xD2)), 24) ^ __ROR4__(((unsigned __int16)(v82 ^ 0xB454) >> 8) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (((unsigned __int16)(v82 ^ 0xB454) >> 8) ^ 0x62)], 8) ^ __ROR4__(*(_DWORD *)&v51[4* (v86 ^ 0x86)] ^ 0xC41F4BEA, 16);
            v91 = *(_DWORD *)&v51[4 * (v82 ^ 0x32)];
            v92 = (v88 & 0x20000 | 0x27B0B5AB) ^ v88 & 0xFFFDFFFF;
            v93 = (((v85 ^ 0x746BD2) >> 16) + 825631077) ^ ((v85 ^ 0x746BD2) >> 16) ^ *(_DWORD *)(v56 + 4 * (((v85 ^ 0x746BD2) >> 16) ^ 0xD2u)) ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * ((v86 ^ 0x8AC496E0) >> 24))) ^ 0x527EE3E4, 24) ^ __ROR4__(BYTE1(v87) ^ (BYTE1(v87) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (BYTE1(v87) ^ 0xD2u)), 8) ^ __ROR4__((v91 - ((2 * v91) & 0xEB55607E) + 1974120511) ^ 0xB1B5FBD5, 16);
            v94 = *(_DWORD *)(v56 + 4 * (((unsigned __int16)(v90 ^ 0xC02C) >> 8) ^ 0xD2u)) ^ ((unsigned __int16)(v90 ^ 0xC02C) >> 8) ^ (((unsigned __int16)(v90 ^ 0xC02C) >> 8) + 825631077) ^ 0x2BACEDC;
            v95 = ((v92 ^ 0xB1B584D5) >> 16);
            v96 = *(_DWORD *)&v49[4 * (v95 ^ 0x62)] ^ __ROR4__(((v89 ^ 0xD9A5DF85) >> 24) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (((v89 ^ 0xD9A5DF85) >> 24) ^ 0x62)], 24) ^ __ROR4__(v90 ^ 0x2C ^ ((v90 ^ 0x2C)+ 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (v90 ^ 0xFEu)), 16) ^ __ROR4__(*(_DWORD *)(v56+ 4* (((unsigned __int16)(v93 ^ 0x52CE) >> 8) ^ 0xD2u)) ^ ((unsigned __int16)(v93 ^ 0x52CE) >> 8) ^ (((unsigned __int16)(v93 ^ 0x52CE) >> 8) + 825631077) ^ 0x2BACEDC, 8);
            v97 = *(_DWORD *)&v51[4 * (BYTE2(v89) ^ 0xC3)] ^ __ROR4__(((v90 ^ 0x7825C02Cu) >> 24) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (((v90 ^ 0x7825C02Cu) >> 24) ^ 0x62)], 24) ^ __ROR4__((-86989265* *(_DWORD *)(v54+ 4* ((unsigned __int16)(v92 ^ 0x84D5) >> 8))) ^ 0x527EE3E4, 8) ^ __ROR4__((-86989265* *(_DWORD *)(v54+ 4* (v93 ^ 0xB1u))) ^ 0x527EE3E4, 16);
            v98 = *(_DWORD *)&v51[4 * (BYTE2(v90) ^ 0x43)] ^ __ROR4__(((v93 ^ 0xD9E752CE) >> 24) ^ (((v93 ^ 0xD9E752CE) >> 24)+ 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (((v93 ^ 0xD9E752CE) >> 24) ^ 0xD2)), 24);
            v99 = (-86989265 * *(_DWORD *)(v54 + 4 * ((v93 ^ 0xD9E752CE) >> 16))) ^ __ROR4__(*(_DWORD *)&v51[4 * (HIBYTE(v92) ^ 0xD7)] ^ 0xC41F4BEA, 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (v89 ^ 0xE3)] ^ 0xC41F4BEA, 16) ^ __ROR4__(v94, 8) ^ 0x4E23EF8C;
            v100 = v98 ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * (BYTE1(v89) ^ 0xDFu))) ^ 0x527EE3E4, 8) ^ __ROR4__(v92 ^ 0xD5 ^ ((v92 ^ 0xD5) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (v92 ^ 7u)), 16);
            v101 = v100 ^ 0xF8390BA5;
            v102 = v96 ^ v95 ^ 0x8F60F902;
            v103 = *(_DWORD *)&v51[4 * (BYTE2(v100) ^ 0x5F)] ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * HIBYTE(v99))) ^ 0x527EE3E4, 24) ^ __ROR4__(*(_DWORD *)&v51[4* ((v96 ^ v95) ^ 0x64)] ^ 0xC41F4BEA, 16) ^ __ROR4__(*(_DWORD *)(v56+ 4* (((unsigned __int16)(v97 ^ 0xEFCD) >> 8) ^ 0xD2u)) ^ ((unsigned __int16)(v97 ^ 0xEFCD) >> 8) ^ (((unsigned __int16)(v97 ^ 0xEFCD) >> 8) + 825631077) ^ 0x2BACEDC, 8);
            v104 = *(_DWORD *)&v49[4 * (BYTE2(v99) ^ 0x62)] ^ BYTE2(v99) ^ __ROR4__(*(_DWORD *)&v51[4 * (HIBYTE(v96) ^ 0xE9)] ^ 0xC41F4BEA, 24);
            v105 = *(_DWORD *)&v49[4 * (BYTE1(v101) ^ 0x62)] ^ 0x98A3B244;
            v106 = ((v105 ^ BYTE1(v101)) << (v2294 & 0x18 ^ 0x10) << (v2294 & 0x18 ^ 8)) | (v105 >> 8);
            v107 = ((v106 ^ -v106 ^ ((v104 ^ 0xC9897B31) + (v104 ^ 0x367684CE ^ v106) + 1)) + (v104 ^ 0xC9897B31)) ^ __ROR4__(v97 ^ 0x98A3B289 ^ *(_DWORD *)&v49[4 * (v97 ^ 0xAF)], 16);
            v108 = *(_DWORD *)&v49[4 * (BYTE2(v102) ^ 0x62)] ^ __ROR4__(((v97 ^ 0xF724EFCD) >> 24) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (((v97 ^ 0xF724EFCD) >> 24) ^ 0x62)], 24) ^ __ROR4__(BYTE1(v99) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (BYTE1(v99) ^ 0x62)], 8) ^ __ROR4__((-86989265* *(_DWORD *)(v54+ 4 * v101)) ^ 0x527EE3E4, 16);
            v109 = (-86989265 * *(_DWORD *)(v54 + 4 * (BYTE2(v97) ^ 0x5Bu))) ^ __ROR4__(HIBYTE(v101) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (HIBYTE(v101) ^ 0x62)], 24) ^ __ROR4__((-86989265* *(_DWORD *)(v54 + 4 * BYTE1(v102))) ^ 0x527EE3E4, 8);
            LODWORD(v60) = __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * v99)) ^ 0x527EE3E4, 16);
            v110 = v109 ^ v60 ^ 0x4810E37;
            v111 = v108 ^ BYTE2(v102);
            v112 = *(_DWORD *)&v51[4 * ((BYTE2(v109) ^ BYTE2(v60)) ^ 0xE7)] ^ __ROR4__((-86989265* *(_DWORD *)(v54 + 4 * (HIBYTE(v103) ^ 0xE6))) ^ 0x527EE3E4, 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (BYTE1(v108) ^ 3)] ^ 0xC41F4BEA, 8) ^ __ROR4__(*(_DWORD *)&v51[4 * (v107 ^ 0xC9)] ^ 0xC41F4BEA, 16);
            BYTE2(v79) = BYTE2(v103) ^ 0xEE;
            v113 = v111 ^ 0xAA6065DC;
            v114 = *(_DWORD *)&v49[4 * (((v111 ^ 0xAA6065DC) >> 24) ^ 0x62)];
            v115 = *(_DWORD *)(v56 + 4 * (((v103 ^ 0x99EE5032) >> 16) ^ 0xD2u)) ^ (((v103 ^ 0x99EE5032) >> 16) + 825631077) ^ __ROR4__(((v107 ^ 0xD39DADAF) >> 24) ^ (((v107 ^ 0xD39DADAF) >> 24) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (((v107 ^ 0xD39DADAF) >> 24) ^ 0xD2)), 24) ^ __ROR4__(*(_DWORD *)&v51[4 * (v111 ^ 0xBA)] ^ 0xC41F4BEA, 16) ^ __ROR4__(*(_DWORD *)(v56 + 4 * (BYTE1(v110) ^ 0xD2u)) ^ BYTE1(v110) ^ (BYTE1(v110) + 825631077) ^ 0x2BACEDC, 8);
            v116 = (-86989265 * *(_DWORD *)(v54 + 4 * ((v107 ^ 0xD39DADAF) >> 16))) ^ __ROR4__(HIBYTE(v113) ^ 0x98A3B244 ^ v114, 24) ^ __ROR4__(((unsigned __int16)(v103 ^ 0x5032) >> 8) ^ 0x98A3B244 ^ *(_DWORD *)&v49[4 * (((unsigned __int16)(v103 ^ 0x5032) >> 8) ^ 0x62)], 8) ^ __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * ((v109 ^ v60) ^ 0x37u))) ^ 0x527EE3E4, 16);
            v117 = (-86989265 * *(_DWORD *)(v54 + 4 * BYTE2(v113))) ^ __ROR4__(HIBYTE(v110) ^ (HIBYTE(v110) + 825631077) ^ 0x2BACEDC ^ *(_DWORD *)(v56 + 4 * (HIBYTE(v110) ^ 0xD2)), 24);
            LODWORD(v60) = __ROR4__((-86989265 * *(_DWORD *)(v54 + 4 * (BYTE1(v107) ^ 0xD2u))) ^ 0x527EE3E4, 8);
            v118 = ((((v117 ^ v60) + (v117 ^ v60 ^ 0x859D5DA7) + 1) ^ 0xFFFFFFF0) + (v117 ^ v60)) ^ __ROR4__(v103 ^ 0x98A3B276 ^ *(_DWORD *)&v49[4 * (v103 ^ 0x50)], 16);
            v119 = (uint64_t)*(&off_1015B46D0 + (int)(v29 + 2665));
            v120 = *(unsigned __int16 *)(v119 + 2 * (HIBYTE(v112) ^ 0xF3));
            v121 = (char *)*(&off_1015B46D0 + (int)(v29 + 49)) - 12;
            LOWORD(v53) = *(_WORD *)&v121[2 * (BYTE1(v116) ^ 0xF6)];
            v122 = *(unsigned __int16 *)(v119 + 2 * ((v115 ^ BYTE2(v79)) ^ 0xDCu));
            HIDWORD(v60) = ((v122 >> 14) | (4 * v122)) ^ 0x48B6;
            LODWORD(v60) = WORD2(v60) & 0xFF00;
            v123 = (char *)*(&off_1015B46D0 + (int)(v29 + 2199)) - 4;
            v124 = (char *)*(&off_1015B46D0 + (int)(v29 + 924)) - 4;
            LODWORD(v121) = (*(unsigned __int16 *)&v123[2 * (BYTE1(v112) ^ 0xE8)] | (((*(unsigned __int16 *)&v121[2 * (HIBYTE(v116) ^ 0xA1)]
                                                                                     + 16559) ^ 0x8826) << 16)) ^ ((*(unsigned __int16 *)&v123[2 * (BYTE2(v115) ^ 0x6E)] ^ 0xF447) << 8) ^ __ROR4__(*(unsigned __int16 *)&v124[2 * (v118 ^ 0x13)] ^ 0x2426, 8);
            v125 = HIBYTE(v115) ^ 0x2A;
            v126 = *(unsigned __int16 *)(v119 + 2 * (BYTE1(v115) ^ 0x7Bu));
            v127 = ((((v120 >> 14) | (4 * v120)) ^ 0x48B6) << 16) ^ ((*(unsigned __int16 *)&v123[2
                                                                                               * (BYTE2(v118) ^ 0x5A)] ^ 0xF447) << 8) ^ (unsigned __int16)(((2 * v53) & 0x815E) + (v53 ^ 0x40AF)) ^ 0x8826 ^ (v60 >> 8) ^ 0x181B7AFE;
            v128 = ((unsigned __int16)((v126 >> 14) | (4 * v126)) ^ 0x48B6 | ((*(_WORD *)&v124[2 * (HIBYTE(v118) ^ 0x2E)] ^ 0x2426) << 16)) ^ ((*(unsigned __int16 *)&v123[2 * (BYTE2(v116) ^ 0x1C)] ^ 0xF447) << 8) ^ __ROR4__(*(unsigned __int16 *)&v124[2 * (v112 ^ 0xA5)] ^ 0x2426, 8);
            v129 = (*(unsigned __int16 *)&v124[2 * (BYTE1(v118) ^ 0x2E)] | ((*(unsigned __int16 *)&v123[2 * v125] ^ 0xF447) << 16)) ^ ((*(unsigned __int16 *)&v123[2 * (BYTE2(v112) ^ 0xDC)] ^ 0xF447) << 8) ^ v127 ^ __ROR4__(*(unsigned __int16 *)&v123[2 * (v116 ^ 6)] ^ 0xF447, 8) ^ v128;
            v130 = v129 ^ 0x46B6E5BB;
            v131 = v121 ^ v129 ^ 0x46B6E5BB ^ v127;
            v2246 = v131;
            v132 = v128 ^ 0x5404663F ^ v121 ^ v129 ^ 0x46B6E5BB;
            v2206 = v132;
            v133 = (v129 ^ 0x2C5BD654u) >> 24;
            v134 = v129 ^ 0x2C5BD654;
            v2220 = v129 ^ 0x2C5BD654;
            v135 = v128 ^ 0xA795692D;
            v2231 = v128 ^ 0xA795692D;
            v136 = v133 - 1;
            v137 = v129;
            v2027 = v129;
            if ((v129 & 0x1000000) == 0)
              v136 = v133 + 1;
            v138 = (char *)*(&off_1015B46D0 + (int)(v29 + 2112)) - 12;
            v139 = *(_DWORD *)&v138[4 * (v136 ^ 0x7F)];
            v2193 = BYTE2(v130);
            v140 = (char *)*(&off_1015B46D0 + (int)(v29 + 1323)) - 4;
            v141 = *(_DWORD *)&v140[4 * (BYTE2(v130) ^ 0xBB)] ^ (((v130 >> 15) & 0x1FE ^ 0xF4) - 1399184575) ^ 0xFF39D8AA;
            v142 = (char *)*(&off_1015B46D0 + (int)(v2299 ^ 0x1715D04A)) - 8;
            v143 = *(_DWORD *)&v142[4 * (BYTE1(v130) ^ 2)] - 507852888;
            v2167 = v130;
            v144 = *(_DWORD *)&v138[4 * (v130 ^ 0x91)] ^ 0xD8A38CA1;
            v145 = v144 ^ (v144 >> 7) ^ (v144 >> 4) ^ v135 ^ __ROR4__(v139 ^ ((v139 ^ 0xD8A38CA1) >> 7) ^ ((v139 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 8) ^ __ROR4__(v143 ^ (v143 >> 4) ^ (v143 >> 1) ^ 0x6CD80665, 24);
            v146 = __ROR4__(v141, 16);
            v2225 = v131 ^ 0xF3910F12;
            v2295 = v145 ^ v146 ^ v132;
            v147 = v145 ^ v146;
            v2263 = v145 ^ v146;
            v148 = v2295 ^ v131 ^ 0xF3910F12 ^ v134;
            v2211 = v2295 ^ v131 ^ 0xF3910F12;
            v149 = *(_DWORD *)&v142[4 * (BYTE2(v148) ^ 0xD3)] - 507852888;
            v150 = v149 ^ (v149 >> 4) ^ (v149 >> 1);
            v151 = v142;
            v152 = *(_DWORD *)&v142[4 * (BYTE1(v148) ^ 0x3C)] - 507852888;
            v2288 = v148 ^ 0x48E20D4D;
            v153 = (char *)*(&off_1015B46D0 + (int)(v29 + 2257)) - 12;
            v154 = *(_DWORD *)&v138[4 * ((v2295 ^ v131 ^ 0x12 ^ v134) ^ 0x33)] ^ 0xD8A38CA1;
            v155 = v154 ^ (v154 >> 7) ^ (v154 >> 4) ^ __ROR4__(v150 ^ 0x6CD80665, 16) ^ __ROR4__(v152 ^ (v152 >> 4) ^ (v152 >> 1) ^ 0x6CD80665, 24) ^ __ROR4__(*(_DWORD *)&v153[4 * (((v148 ^ 0x48E20D4D) >> 24) ^ 0xF7)] ^ ((v148 ^ 0x48E20D4D) >> 24) ^ 0xDFDF6AFE, 8);
            v156 = v155 ^ v132 ^ v2211;
            v2198 = v155 ^ v132;
            v2281 = v156 ^ 0xD6C98874;
            v157 = v156 ^ 0xD6C98874 ^ v148;
            v158 = *(_DWORD *)&v138[4 * (BYTE2(v157) ^ 0x98)];
            v2273 = v155 ^ v147;
            v2215 = v157 ^ 0x25E6C711;
            v2235 = *(_DWORD *)&v153[4 * (v157 ^ 0xE6)] ^ __ROR4__((v158- ((2 * v158) & 0xB1471942)- 660370271) ^ ((v158- ((2 * v158) & 0xB1471942)- 660370271) >> 7) ^ ((v158 - ((2 * v158) & 0xB1471942) - 660370271) >> 4) ^ 0xAF2758FA, 16) ^ v155 ^ v147 ^ v157 ^ 0x11 ^ __ROR4__(*(_DWORD *)&v153[4 * (HIBYTE(v157) ^ 0xD2)] ^ HIBYTE(v157) ^ 0xDFDF6ADB, 8) ^ __ROR4__(*(_DWORD *)&v153[4 * (BYTE1(v157) ^ 0x30)] ^ BYTE1(v157) ^ 0xDFDF6A39, 24);
            v2268 = v156 ^ 0xFEA1AD2 ^ v155 ^ v132 ^ 0x722B1FA3 ^ v2235 ^ 0x6A35EAB6;
            v159 = v155 ^ v132 ^ 0x722B1FA3 ^ v2235 ^ 0x6A35EAB6;
            v2203 = v159;
            v160 = v2268 ^ v157 ^ 0x25E6C711;
            v161 = *(_DWORD *)&v138[4 * (BYTE2(v160) ^ 0x59)];
            v2182 = *(_DWORD *)&v140[4 * ((v2268 ^ v2215) ^ 0xAC)] ^ __ROR4__(v161 ^ ((v161 ^ 0xD8A38CA1) >> 7) ^ ((v161 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 16) ^ v2235 ^ 0x6A35EAB6 ^ (((2 * (v2268 ^ v2215)) ^ 0xDA) - 1399184575) ^ __ROR4__(*(_DWORD *)&v140[4 * (((v2268 ^ v2215) >> 24) ^ 0xE2)] ^ (((2 * ((v2268 ^ v2215) >> 24)) ^ 0x46) - 1399184575) ^ 0xFF39D8AA, 8) ^ __ROR4__(*(_DWORD *)&v140[4 * (((unsigned __int16)(v2268 ^ v2215) >> 8) ^ 0xE)] ^ ((((v2268 ^ v2215) >> 7) & 0x1FE ^ 0x19E) - 1399184575) ^ 0xFF39D8AA, 24);
            v2240 = v156 ^ 0x3AC912EE ^ v2182;
            v162 = v2240 ^ v160 ^ 0x551E8050;
            v163 = (((2 * (v2240 ^ v160)) ^ 0x18E) - 1399184575) ^ *(_DWORD *)&v140[4 * ((v2240 ^ v160) ^ 6)] ^ __ROR4__(*(_DWORD *)&v153[4 * (HIBYTE(v162) ^ 0xF7)] ^ HIBYTE(v162) ^ 0xDFDF6AFE, 8) ^ __ROR4__(*(_DWORD *)&v153[4 * (BYTE2(v162) ^ 0xF7)] ^ BYTE2(v162) ^ 0xDFDF6AFE, 16) ^ __ROR4__(*(_DWORD *)&v153[4 * (BYTE1(v162) ^ 0xF7)] ^ BYTE1(v162) ^ 0xDFDF6AFE, 24);
            v164 = v163 ^ v159;
            v165 = v163 ^ v159 ^ 0x810450C6 ^ v2240;
            v166 = v165 ^ v162;
            v2041 = v140;
            v167 = (v165 ^ v162 ^ 0x5B0450C6) >> 24;
            HIDWORD(v168) = *(_DWORD *)&v153[4 * (v167 ^ 0xF7)];
            LODWORD(v168) = HIDWORD(v168);
            v2186 = v163 ^ v2182;
            v169 = v163 ^ v2182 ^ (v165 ^ v162) ^ *(_DWORD *)&v153[4
                                                                                  * ((v165 ^ v162) ^ 0x31)] ^ __ROR4__((v167 | ((v168 >> 16) << 16)) ^ ((v168 >> 16) >> 16) ^ 0xDFDF6AFE, 8) ^ __ROR4__(*(_DWORD *)&v140[4 * (((v165 ^ v162) >> 16) ^ 0x52)] ^ ((((v165 ^ v162) >> 15) & 0x1FE ^ 0x126) - 1399184575) ^ 0xFF39D8AA, 16) ^ __ROR4__(*(_DWORD *)&v140[4 * (((unsigned __int16)(v166 ^ 0x50C6) >> 8) ^ 0x56)] ^ ((((v166 ^ 0x5B0450C6u) >> 7) & 0x1FE ^ 0x12E) - 1399184575) ^ 0xFF39D8AA, 24);
            v170 = v169 ^ v163 ^ v159 ^ 0x810450C6;
            v171 = v170 ^ 0x5DC5BAAE ^ v165;
            v172 = v171 ^ v165 ^ v162 ^ 0x5B0450C6;
            v173 = ((v172 ^ 0x882758FA) >> (v137 & 8) >> (v137 & 8 ^ 8));
            v174 = *(_DWORD *)&v153[4 * ((v171 ^ v165 ^ v162 ^ 0xC6) ^ 0xD)] ^ v169 ^ v172 ^ 0xFA ^ __ROR4__(*(_DWORD *)&v153[4 * (((v172 ^ 0x882758FA) >> 24) ^ 0xF7)] ^ ((v172 ^ 0x882758FA) >> 24) ^ 0xDFDF6AFE, 8) ^ __ROR4__(*(_DWORD *)&v153[4 * (((v172 ^ 0x882758FA) >> 16) ^ 0xF7)] ^ ((v172 ^ 0x882758FA) >> 16) ^ 0xDFDF6AFE, 16) ^ __ROR4__(*(_DWORD *)&v153[4 * (v173 ^ 0xF7)] ^ v173 ^ 0xDFDF6AFE, 24) ^ 0xBCFC62AB;
            v2172 = v174 ^ v170 ^ 0x5DC5BAAE;
            v2190 = v174;
            v175 = v171 ^ 0x5B0450C6 ^ v2172 ^ 0x29DB3A97;
            LODWORD(v142) = v175 ^ v172 ^ 0x882758FA;
            v2176 = v175;
            v176 = *(_DWORD *)&v151[4 * ((v175 ^ v172 ^ 0xFA) ^ 0xD)];
            LODWORD(v140) = (v176 - 507852888) ^ ((v176 - 507852888) >> 4) ^ ((v176 - 507852888) >> 1) ^ v174 ^ __ROR4__(*(_DWORD *)&v153[4 * (((v142 ^ 0xD323083C) >> 24) ^ 0xF7)] ^ ((v142 ^ 0xD323083C) >> 24) ^ 0xDFDF6AFE, 8) ^ __ROR4__(*(_DWORD *)&v153[4 * (((unsigned __int16)((unsigned __int16)v142 ^ 0x83C) >> 8) ^ 0xF7)] ^ ((unsigned __int16)((unsigned __int16)v142 ^ 0x83C) >> 8) ^ 0xDFDF6AFE, 24);
            v177 = *(_DWORD *)&v151[4 * (BYTE2(v142) ^ 0x12)] - 507852888;
            HIDWORD(v168) = v177 ^ (v177 >> 4) ^ (v177 >> 1) ^ 0x6CD80665;
            LODWORD(v168) = HIDWORD(v168);
            v178 = (v140 ^ 0x7BFC626D ^ -(v140 ^ 0x7BFC626D) ^ ((v168 >> 16)
                                                                                          + ((v168 >> 16) ^ 0x84039D92 ^ v140)
                                                                                          + 1))
                 + (v168 >> 16);
            LODWORD(v140) = v178 ^ v2172 ^ 0x29DB3A97;
            v179 = v140 ^ v175 ^ v142 ^ 0xD323083C;
            v2066 = v140 ^ v175;
            v180 = v179 ^ 0x9EFF5E9F;
            v181 = *(_DWORD *)&v151[4 * (BYTE2(v179) ^ 0xCE)] - 507852888;
            v182 = *(_DWORD *)&v153[4 * (v179 ^ 0x68)] ^ __ROR4__(v181 ^ (v181 >> 4) ^ (v181 >> 1) ^ 0x6CD80665, 16) ^ v178 ^ v179 ^ 0x9F ^ __ROR4__(*(_DWORD *)&v153[4 * (HIBYTE(v180) ^ 0xF7)] ^ HIBYTE(v180) ^ 0xDFDF6AFE, 8) ^ __ROR4__(*(_DWORD *)&v153[4 * (BYTE1(v180) ^ 0xF7)] ^ BYTE1(v180) ^ 0xDFDF6AFE, 24);
            v2062 = v140 ^ v171 ^ 0x5B0450C6 ^ v2172 ^ 0x29DB3A97 ^ 0xF22758FA ^ v140 ^ 0xBB23083C ^ v182 ^ 0xBCFC62C2;
            v183 = v140 ^ 0xBB23083C ^ v182 ^ 0xBCFC62C2;
            v2053 = v183;
            v184 = v2062 ^ v179 ^ 0x9EFF5E9F;
            v2201 = (char *)*(&off_1015B46D0 + (int)(v2299 ^ 0x1715D04A)) - 8;
            v185 = *(_DWORD *)&v151[4 * (HIBYTE(v184) ^ 0x5D)] - 507852888;
            v186 = v185 ^ (v185 >> 4) ^ (v185 >> 1);
            v2005 = v138;
            v187 = *(_DWORD *)&v138[4 * (BYTE2(v184) ^ 0xA6)];
            v188 = *(_DWORD *)&v151[4 * (BYTE1(v184) ^ 0x37)] - 507852888;
            v189 = *(_DWORD *)&v138[4 * ((v2062 ^ v179 ^ 0x9F) ^ 0x1B)] ^ 0xD8A38CA1;
            v190 = v189 ^ (v189 >> 7) ^ (v189 >> 4) ^ __ROR4__(v186 ^ 0x6CD80665, 8) ^ __ROR4__(v187 ^ ((v187 ^ 0xD8A38CA1) >> 7) ^ ((v187 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 16) ^ __ROR4__(v188 ^ (v188 >> 4) ^ (v188 >> 1) ^ 0x6CD80665, 24) ^ v182 ^ 0xBCFC62C2;
            v2163 = v2211 ^ 0xE577A2FA;
            v2147 = v160 ^ 0x37C43ECB;
            v1953 = (v160 ^ 0x37C43ECB) - (v165 ^ 0x76396BA0) - 1703223195;
            LODWORD(v151) = v140 ^ 0x5DF3DB22;
            v2057 = v140 ^ 0x5DF3DB22;
            v1944 = (v2246 ^ 0xC0B8FDCE ^ v140 ^ 0x5DF3DB22) - 662898838;
            v2155 = v2240 ^ v160 ^ 0xFFBC0501;
            v191 = (v164 ^ 0xF2637B99 ^ v190) - 1353146628;
            v1947 = (v165 ^ 0x6616E621 ^ v179 ^ 0x9EFF5E9F) - 488519898;
            v1976 = v182 ^ 0x24098A3A;
            v2247 = v2198 ^ 0xF1907A6D;
            v2018 = v169 ^ 0xEF42BF1B;
            v2135 = v2172 ^ 0xD259A1ED;
            LODWORD(v140) = (v2172 ^ 0xD259A1ED) - (v169 ^ 0xEF42BF1B) - 112146010;
            v1987 = v172 ^ 0x53BEDD1F;
            v192 = v142 ^ 0x28A19346;
            v1950 = (v2182 ^ 0x3560F2C2 ^ v142 ^ 0x28A19346) + 1230695831;
            v1982 = v190 ^ 0x1B9867AA;
            v193 = ((v190 ^ 0x1B9867AA) - (v171 ^ 0x53BEDD1F)) ^ 0x1A3C58AD;
            v194 = ((v184 ^ 0x2D2B002) + v2155) ^ 0x4B2E0F07;
            v195 = (v164 ^ 0x1604E3CC) - 1751447873 + (v142 ^ 0x28A19346);
            HIDWORD(v168) = v195;
            LODWORD(v168) = v195;
            v196 = (v168 >> 21) ^ __ROR4__(v193 ^ v157 ^ 0x25E6C711, 21) ^ 0x58578989;
            v197 = v2182 ^ 0xCA9F0D3D;
            v2049 = 162555434 - *(&off_1015B46D0 + (int)(v2299 ^ 0x1715D1BF));
            v198 = v183 ^ v190;
            v199 = (v2211 ^ 0xE577A2FA) - 505251773 + (v170 ^ 0x557F3777);
            v1929 = v2235 ^ 0x94BEBC7C ^ v198;
            v2179 = v1929 ^ v199 ^ v164 ^ 0x1604E3CC;
            v2173 = v1929 ^ v199 ^ v166 ^ 0x76396BA0;
            v2152 = v1929 ^ v199 ^ v165 ^ 0x76396BA0;
            v2125 = v2186 ^ 0x76396BA0 ^ v1929 ^ v199;
            v200 = (v184 ^ 0x2D2B002) + (v2198 ^ 0xF1907A6D);
            v201 = v200 ^ 0x99E8051;
            v1926 = v191;
            v1915 = (v2155 ^ v178 ^ 0x5DF3DB22) + 2131724833;
            v202 = v200 ^ v191 ^ v1915;
            v2121 = v202 ^ v2231 ^ 0x837A30A5;
            v2115 = v202 ^ v2225 ^ 0x3AB7728D;
            v1921 = v201;
            v203 = v201 ^ v191 ^ v1915;
            v2104 = v203 ^ v2220 ^ 0xEA0A607A;
            v2099 = v203 ^ v2206 ^ 0xAD0277E5;
            v204 = (v166 ^ 0x76396BA0) - 2128651171 + (v182 ^ 0x24098A3A);
            v1780 = v195;
            v205 = v199;
            v206 = v195 ^ v199;
            v1938 = (int)v140;
            v1912 = ((_DWORD)v151 + v1987) ^ 0x99E7127F;
            v2183 = v1912 ^ v140;
            v207 = v1912 ^ v140 ^ v170 ^ 0x557F3777;
            v208 = v1944 ^ v199;
            v1779 = v199;
            v209 = v1944 ^ v199 ^ v178 ^ 0x5DF3DB22;
            v210 = (v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207;
            v211 = v2288 ^ 0xAD95AFB7 ^ v195 ^ v199;
            v212 = v2295 ^ 0x3C54305C ^ v195 ^ v199;
            if ((v210 & 1) != 0)
              v213 = v2288 ^ 0xAD95AFB7 ^ v195 ^ v199;
            else
              v213 = v195 ^ v199 ^ v2163;
            v2289 = v213;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v214 = v195 ^ v199 ^ v2163;
            else
              v214 = v2295 ^ 0x3C54305C ^ v195 ^ v199;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v215 = v2263 ^ 0x7B5C27C3 ^ v206;
            else
              v215 = v211;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) == 0)
              v212 = v2263 ^ 0x7B5C27C3 ^ v206;
            v2212 = v212;
            v216 = __ROR4__(v196, 11) ^ 0x33943FF9;
            v1935 = v193;
            v2045 = v193 ^ v195;
            v217 = v2281 ^ 0x6FBBFF54 ^ v193 ^ v195;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v218 = v193 ^ v195 ^ v2247;
            else
              v218 = v193 ^ v195 ^ v2273 ^ 0x6051E586;
            v2093 = v218;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v219 = v2281 ^ 0x6FBBFF54 ^ v193 ^ v195;
            else
              v219 = v193 ^ v195 ^ v2247;
            v2187 = v219;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v217 = v216;
            v2088 = v217;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v220 = v193 ^ v195 ^ v2273 ^ 0x6051E586;
            else
              v220 = v216;
            v2159 = v220;
            v221 = v206 ^ v1953;
            v222 = v2062 ^ v206 ^ v1953 ^ v198;
            v223 = v198 ^ 0x1B9867AA;
            v1924 = (v2273 ^ 0x6051E586) + 1772655082 + (v198 ^ 0x1B9867AA);
            v2022 = v1924 ^ v1947;
            v2037 = v1924 ^ v1947 ^ 0x83E36631;
            v224 = v2268 ^ 0x37C43ECB ^ v1924 ^ v1947;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v225 = v2037 ^ v2203;
            else
              v225 = v2235 ^ 0x68D2DC41 ^ v1924 ^ v1947;
            v2085 = v225;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v226 = v2268 ^ 0x37C43ECB ^ v1924 ^ v1947;
            else
              v226 = v2037 ^ v2203;
            v2256 = v226;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v224 = v1924 ^ v1947 ^ v2147;
            v2082 = v224;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v227 = v2235 ^ 0x68D2DC41 ^ v1924 ^ v1947;
            else
              v227 = v1924 ^ v1947 ^ v2147;
            v2248 = v227;
            v1918 = v204;
            v2033 = v194 ^ v204;
            v228 = v194 ^ v204 ^ v2155;
            v229 = v2240 ^ 0x4B9B5DFB ^ v194 ^ v204;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v230 = v197 ^ v2203 ^ v204 ^ v194;
            else
              v230 = v197 ^ v194 ^ v204;
            v2156 = v230;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v231 = v2240 ^ 0x4B9B5DFB ^ v194 ^ v204;
            else
              v231 = v197 ^ v2203 ^ v204 ^ v194;
            v2148 = v231;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v232 = v197 ^ v194 ^ v204;
            else
              v232 = v228;
            v2144 = v232;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v229 = v228;
            v2140 = v229;
            v1932 = v194;
            v2078 = v194 ^ v1950;
            v233 = v194 ^ v1950 ^ v2135;
            v234 = v2190 ^ 0x17AA9D1 ^ v194 ^ v1950;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v235 = v194 ^ v1950 ^ v2135;
            else
              v235 = v2190 ^ 0x17AA9D1 ^ v194 ^ v1950;
            v2136 = v235;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) == 0)
              v234 = v194 ^ v1950 ^ v192;
            v2074 = v234;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v236 = v2176 ^ 0x28A19346 ^ v194 ^ v1950;
            else
              v236 = v233;
            v2071 = v236;
            if ((((v2049 - v209 + (v197 ^ v2203 ^ v204 ^ v194)) ^ v207) & 1) != 0)
              v237 = v194 ^ v1950 ^ v192;
            else
              v237 = v2176 ^ 0x28A19346 ^ v194 ^ v1950;
            v2130 = v237;
            v238 = v2066 ^ 0x8ED0D31E;
            v2009 = v1947 ^ v205;
            v239 = v222 ^ 0x774061CF;
            v240 = v222 ^ v184 ^ 0x1B9867AA;
            v241 = v1976 ^ v1947 ^ v205;
            v2000 = v1947 ^ v205 ^ 0x6E0AB667;
            if ((v210 & 1) != 0)
              v242 = v1976 ^ v1947 ^ v205;
            else
              v242 = v184 ^ 0x2D2B002 ^ v1947 ^ v205;
            if ((v210 & 1) != 0)
              v241 = v2000 ^ v2053;
            v2241 = v241;
            if ((v210 & 1) != 0)
              v243 = v184 ^ 0x2D2B002 ^ v1947 ^ v205;
            else
              v243 = v1947 ^ v205 ^ 0x2D2B002 ^ v2062;
            v2191 = v243;
            if ((v210 & 1) != 0)
              v244 = v1947 ^ v205 ^ 0x2D2B002 ^ v2062;
            else
              v244 = v2000 ^ v2053;
            v245 = v2183 ^ v1987;
            v246 = v2183 ^ v171 ^ 0x53BEDD1F;
            v2164 = v208;
            v247 = v208 ^ v2057;
            v2013 = v206 ^ v1953;
            v248 = v223 ^ v221;
            v1993 = v208 ^ 0x102F8D81;
            v1977 = v207;
            if ((v210 & 1) != 0)
              v249 = v2183 ^ v171 ^ 0x53BEDD1F;
            else
              v249 = v207;
            v2067 = v249;
            if ((v210 & 1) != 0)
              v246 = v2183 ^ v1987;
            v2236 = v246;
            v1879 = v2183 ^ v2018;
            if ((v210 & 1) != 0)
              v245 = v2183 ^ v2018;
            v2063 = v245;
            v250 = v238 ^ v208;
            v251 = v2104;
            if ((v210 & 1) == 0)
              v251 = v2115;
            v2058 = v251;
            v252 = v2121;
            if ((v210 & 1) != 0)
              v252 = v2099;
            v2054 = v252;
            v253 = v2152;
            if ((v210 & 1) != 0)
            {
              v254 = v2125;
            }
            else
            {
              v253 = v2179;
              v254 = v2173;
            }
            v1865 = v208 ^ 0x102F8D81 ^ v180;
            v1861 = v250;
            if ((v210 & 1) != 0)
              v250 = v208 ^ 0x102F8D81 ^ v180;
            v2300 = v250;
            v1972 = v209;
            v1873 = v247;
            if ((v210 & 1) != 0)
              v255 = v247;
            else
              v255 = v209;
            v2296 = v255;
            v1903 = v239;
            v1894 = v240;
            if ((v210 & 1) != 0)
              v256 = v240;
            else
              v256 = v239;
            v2282 = v256;
            v1890 = v1982 ^ v221;
            v1869 = v248;
            if ((v210 & 1) != 0)
              v257 = v248;
            else
              v257 = v1982 ^ v221;
            v2216 = v257;
            v2274 = v210;
            v258 = (v210 & 2) == 0;
            if ((v210 & 2) != 0)
              v259 = v214;
            else
              v259 = v215;
            v2264 = v259;
            if ((v210 & 2) != 0)
              v214 = v215;
            v2269 = v214;
            if ((v210 & 2) != 0)
              v260 = v254;
            else
              v260 = v253;
            v2204 = v260;
            if ((v210 & 2) != 0)
              v261 = v253;
            else
              v261 = v254;
            v2199 = v261;
            if ((v210 & 2) != 0)
              v262 = v244;
            else
              v262 = v242;
            v1969 = v262;
            if ((v210 & 2) != 0)
              v263 = v242;
            else
              v263 = v244;
            v2177 = v263;
            v264 = *(_DWORD *)&v2005[4 * (HIBYTE(v2027) ^ 0x52)];
            v265 = *(_DWORD *)&v2005[4 * (v2193 ^ 0x93)];
            v266 = *(_DWORD *)&v2201[4 * (v2167 ^ 0xDE)] - 507852888;
            v267 = v266 ^ v2231 ^ (v266 >> 4) ^ (v266 >> 1) ^ __ROR4__(BYTE1(v2220) ^ 0xDFDF6AFE ^ *(_DWORD *)&v153[4 * (BYTE1(v2220) ^ 0xF7)], 24) ^ __ROR4__(v264 ^ ((v264 ^ 0xD8A38CA1) >> 7) ^ ((v264 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 8) ^ __ROR4__(v265 ^ ((v265 ^ 0xD8A38CA1) >> 7) ^ ((v265 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 16);
            v268 = v2206 ^ v2220 ^ v2225 ^ v267;
            v269 = *(_DWORD *)&v2041[4 * (BYTE1(v268) ^ 5)] ^ (((v268 >> 7) & 0x1FE ^ 0x188) - 1399184575) ^ 0xFF39D8AA;
            v270 = *(_DWORD *)&v2201[4 * (BYTE2(v268) ^ 0x2C)] - 507852888;
            v271 = v268 ^ 0x8B1D53D2;
            v272 = *(_DWORD *)&v2201[4 * ((v2206 ^ v2220 ^ v2225 ^ v267) ^ 0xE3)] - 507852888;
            v273 = v272 ^ (v272 >> 4) ^ (v272 >> 1) ^ __ROR4__(v270 ^ (v270 >> 4) ^ (v270 >> 1) ^ 0x6CD80665, 16) ^ __ROR4__(*(_DWORD *)&v153[4 * (HIBYTE(v271) ^ 0xF7)] ^ HIBYTE(v271) ^ 0xDFDF6AFE, 8) ^ __ROR4__(v269, 24);
            v274 = v273 ^ v267;
            v275 = v273 ^ v267 ^ v2225;
            v276 = v274;
            v2232 = v274;
            v277 = v275 ^ v271;
            v278 = v275 ^ v271 ^ 0x1536D6EB;
            v279 = v273 ^ v2206;
            v280 = *(_DWORD *)&v2201[4 * (BYTE2(v278) ^ 0xCA)] - 507852888;
            v281 = v277 ^ 0xBBCD4228;
            v2221 = v277 ^ 0xBBCD4228;
            v2226 = v279;
            v282 = *(_DWORD *)&v2005[4 * (BYTE1(v278) ^ 0xEA)];
            v283 = *(_DWORD *)&v2005[4 * (HIBYTE(v277) ^ 0xC5)];
            v284 = *(_DWORD *)&v2041[4 * (v278 ^ 0x95)] ^ __ROR4__(v280 ^ (v280 >> 4) ^ (v280 >> 1) ^ 0x6CD80665, 16) ^ __ROR4__(v282 ^ ((v282 ^ 0xD8A38CA1) >> 7) ^ ((v282 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 24) ^ __ROR4__(v283 ^ ((v283 ^ 0xD8A38CA1) >> 7) ^ ((v283 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 8) ^ v276 ^ (((2 * v278) ^ 0xA8) - 1399184575) ^ 0x1536D6EB;
            v2207 = v275 ^ 0xCC15444D;
            v285 = v284 ^ v279;
            v2194 = v284;
            v286 = v284 ^ v279 ^ v2207;
            v287 = v286 ^ v281;
            v288 = *(_DWORD *)&v2005[4 * (((v286 ^ v281) >> 24) ^ 0xE7)];
            v289 = v286 ^ v281 ^ 0x99E9C950;
            v290 = *(_DWORD *)&v2201[4 * (((v286 ^ v281 ^ 0xBC0F0E41) >> 16) ^ 0xD7)] - 507852888;
            v291 = *(_DWORD *)&v2005[4 * ((v286 ^ v281) ^ 0x2E)] ^ 0xD8A38CA1;
            v292 = v291 ^ (v291 >> 7) ^ (v291 >> 4) ^ __ROR4__(v288 ^ ((v288 ^ 0xD8A38CA1) >> 7) ^ ((v288 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 8) ^ __ROR4__(v290 ^ (v290 >> 4) ^ (v290 >> 1) ^ 0x6CD80665, 16) ^ v284 ^ __ROR4__(*(_DWORD *)&v2041[4 * (BYTE1(v289) ^ 0x56)] ^ (((v289 >> 7) & 0x1FE ^ 0x12E) - 1399184575) ^ 0xFF39D8AA, 24);
            v2168 = v286 ^ 0xEE31CF35;
            v1988 = v284 ^ v279 ^ 0x4708179F;
            v2028 = v292 ^ v1988;
            v293 = v292 ^ v1988 ^ v286 ^ 0xEE31CF35;
            v294 = *(_DWORD *)&v2201[4 * (((v293 ^ v289) >> 24) ^ 0x80)] - 507852888;
            v295 = *(_DWORD *)&v2041[4 * ((v293 ^ v289) ^ 0xAC)] ^ __ROR4__(v294 ^ (v294 >> 4) ^ (v294 >> 1) ^ 0x6CD80665, 8) ^ (((2* (v293 ^ v289)) ^ 0xDA)- 1399184575) ^ __ROR4__(*(_DWORD *)&v153[4 * (((v293 ^ v289) >> 16) ^ 0xD0)] ^ ((v293 ^ v289) >> 16) ^ 0xDFDF6AD9, 16) ^ __ROR4__(*(_DWORD *)&v2041[4 * (((unsigned __int16)(v293 ^ v289) >> 8) ^ 0xE)] ^ ((((v293 ^ v289) >> 7) & 0x1FE ^ 0x19E) - 1399184575) ^ 0xFF39D8AA, 24);
            v296 = v287 ^ v284 ^ v279 ^ v295;
            v297 = v296 ^ 0x181E8050;
            v296 ^= 0x4CE1DECFu;
            v298 = *(_DWORD *)&v2201[4 * (BYTE2(v297) ^ 0xCE)] - 507852888;
            v299 = *(_DWORD *)&v2201[4 * (BYTE1(v297) ^ 0x6F)] - 507852888;
            v300 = *(_DWORD *)&v2041[4 * (v297 ^ 0xC9)] ^ __ROR4__(v298 ^ (v298 >> 4) ^ (v298 >> 1) ^ 0x6CD80665, 16) ^ __ROR4__(v299 ^ (v299 >> 4) ^ (v299 >> 1) ^ 0x6CD80665, 24) ^ v292 ^ __ROR4__(*(_DWORD *)&v153[4 * (HIBYTE(v296) ^ 0xF7)] ^ HIBYTE(v296) ^ 0xDFDF6AFE, 8) ^ (((2 * v297) ^ 0x10) - 1399184575);
            v301 = v300 ^ v295;
            v302 = v300 ^ v285;
            v303 = v301 ^ v293;
            v304 = v301 ^ v293 ^ v296;
            v305 = v304 ^ 0xAAE1DECF;
            v306 = *(_DWORD *)&v2041[4 * (v304 ^ 0x99)];
            v307 = (2 * (v304 ^ 0xCF)) ^ 0x12E | v306 & 0x2000000;
            v308 = *(_DWORD *)&v2005[4 * (BYTE1(v304) ^ 0xA0)];
            v309 = *(_DWORD *)&v2201[4 * (HIBYTE(v304) ^ 0x9B)] - 507852888;
            v310 = v306 & 0xFDFFFFFF ^ __ROR4__(v308 ^ ((v308 ^ 0xD8A38CA1) >> 7) ^ ((v308 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 24) ^ __ROR4__(v309 ^ (v309 >> 4) ^ (v309 >> 1) ^ 0x6CD80665, 8) ^ v301 ^ (v307 - 1399184575) ^ __ROR4__(*(_DWORD *)&v2041[4 * (BYTE2(v305) ^ 0x56)] ^ (((v305 >> 15) & 0x1FE ^ 0x12E) - 1399184575) ^ 0xFF39D8AA, 16);
            v1965 = v303 ^ 0xE5D80665;
            v311 = v310 ^ v302 ^ 0xBE9C950;
            v312 = v311 ^ v303 ^ 0xE5D80665;
            v313 = v312 ^ v305 ^ 0xC3E1DECF;
            v314 = *(_DWORD *)&v2005[4 * (((v312 ^ v305) >> 16) ^ 0x9F)];
            v315 = *(_DWORD *)&v153[4 * ((v312 ^ v305) ^ 0x38)] ^ __ROR4__(v314 ^ ((v314 ^ 0xD8A38CA1) >> 7) ^ ((v314 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B, 16) ^ v310 ^ (v312 ^ v305) ^ 0xCF ^ __ROR4__(*(_DWORD *)&v153[4 * (BYTE1(v313) ^ 0xF7)] ^ BYTE1(v313) ^ 0xDFDF6AFE, 24) ^ __ROR4__(*(_DWORD *)&v2041[4 * (((v312 ^ v305) >> 24) ^ 0x95)] ^ (((2 * ((v312 ^ v305) >> 24)) ^ 0xA8) - 1399184575) ^ 0xFF39D8AA, 8) ^ 0x2BE2E292;
            v316 = v312 ^ 0x8CD80665;
            v1957 = v315 ^ v311;
            v317 = v315 ^ v311 ^ v312 ^ 0x8CD80665;
            v318 = v317 ^ v313 ^ 0xDE23083C;
            v319 = *(_DWORD *)&v2201[4 * (((v317 ^ v313) >> 16) ^ 0x12)] - 507852888;
            v320 = *(_DWORD *)&v2041[4
                                   * ((v315 ^ v310 ^ v302 ^ 0x50 ^ v312 ^ 0x65 ^ v312 ^ v305 ^ 0xCF) ^ 0x6A)] ^ __ROR4__(v319 ^ (v319 >> 4) ^ (v319 >> 1) ^ 0x6CD80665, 16) ^ (((2 * (v315 ^ v310 ^ v302 ^ 0x50 ^ v312 ^ 0x65 ^ v312 ^ v305 ^ 0xCF)) ^ 0x156) - 1399184575) ^ __ROR4__(*(_DWORD *)&v153[4 * (BYTE1(v318) ^ 0xF7)] ^ BYTE1(v318) ^ 0xDFDF6AFE, 24) ^ __ROR4__(*(_DWORD *)&v2041[4 * (HIBYTE(v318) ^ 0x56)] ^ (((2 * HIBYTE(v318)) ^ 0x12E) - 1399184575) ^ 0xFF39D8AA, 8);
            v321 = v310 ^ v302 ^ 0x59D011FA ^ v320;
            v1983 = v317 ^ 0xE4D80665 ^ v321;
            v322 = v1983 ^ v317 ^ v313;
            v323 = *(_DWORD *)&v2041[4 * (BYTE1(v322) ^ 0x56)] ^ (((v322 >> 7) & 0x1FE ^ 0x12E) - 1399184575) ^ 0xFF39D8AA;
            v324 = *(_DWORD *)&v2041[4 * (BYTE2(v322) ^ 0x56)] ^ (((v322 >> 15) & 0x1FE ^ 0x12E) - 1399184575) ^ 0xFF39D8AA;
            v325 = *(_DWORD *)&v2005[4 * (HIBYTE(v322) ^ 0x63)];
            v326 = v325 ^ ((v325 ^ 0xD8A38CA1) >> 7) ^ ((v325 ^ 0xD8A38CA1) >> 4) ^ 0x7784D45B;
            v327 = v322 ^ 0x1D000000;
            v328 = *(_DWORD *)&v2005[4
                                   * ((v1983 ^ v315 ^ v310 ^ v302 ^ 0x50 ^ v312 ^ 0x65 ^ v312 ^ v305 ^ 0xCF) ^ 0x7E)] ^ 0xD8A38CA1;
            v329 = v320 ^ v315;
            v330 = v315 ^ v2164;
            v1961 = v330 ^ 0xDED5B72;
            v331 = v2049 + (v330 ^ 0xF212A48D) + (v2028 ^ 0x6C5DDBCE ^ v2033);
            v332 = v2226 ^ 0x326F24F2;
            v2034 = v2221 ^ 0x2BF3508 ^ v2045;
            v2227 = v2232 ^ 0x6051E586 ^ v2045;
            v2029 = v2207 ^ 0x7567336D ^ v2045;
            v2222 = v332 ^ v2045;
            v333 = v1988 ^ 0x2ADABE9B ^ v2022;
            v334 = v2168 ^ 0xF43B6054 ^ v2022;
            v335 = v2194 ^ 0x5D02B8FE ^ v2022;
            v336 = v2037 ^ v289;
            v337 = v328 ^ (v328 >> 7) ^ (v328 >> 4) ^ __ROR4__(v326, 8) ^ v329 ^ __ROR4__(v324, 16) ^ __ROR4__(v323, 24);
            v338 = v317 ^ 0xDE23083C ^ v337;
            v339 = v302 ^ v2183;
            v340 = v1953 ^ v327 ^ 0x3AFB0E59 ^ v338;
            v341 = v2058;
            if ((v210 & 2) == 0)
              v341 = v2054;
            v1837 = v341;
            v342 = v2289;
            if ((v210 & 2) != 0)
              v342 = v2212;
            v1989 = v342;
            if ((v210 & 2) != 0)
              v343 = v2088;
            else
              v343 = v2093;
            if (v258)
              v344 = v2187;
            else
              v344 = v2159;
            if (v258)
              v345 = v2082;
            else
              v345 = v2085;
            v346 = v2256;
            if (v258)
              v346 = v2248;
            v1842 = v346;
            v347 = v2156;
            if (!v258)
              v347 = v2140;
            v2195 = v347;
            v348 = v2148;
            if (v258)
              v348 = v2144;
            v1941 = v348;
            if (v258)
              v349 = v2063;
            else
              v349 = v2067;
            v350 = v2074;
            if (v258)
              v350 = v2071;
            v2169 = v350;
            v351 = v2136;
            if (v258)
              v351 = v2130;
            v1833 = v351;
            v352 = v2296;
            if (!v258)
              v352 = v2300;
            v1876 = v352;
            v353 = v2241;
            if (v258)
              v353 = v2191;
            v354 = v2282;
            if (v258)
              v354 = v2216;
            v1909 = v354;
            if ((v340 & 0x10 & v1780) != 0)
              v355 = -(v340 & 0x10);
            else
              v355 = v340 & 0x10;
            v1857 = v339;
            v1853 = v331 + 1;
            v356 = v339 ^ 0x1557144F ^ (v331 + 1);
            if ((v356 & 1) != 0)
              v357 = v334;
            else
              v357 = v333;
            v2050 = v357;
            if ((v356 & 1) != 0)
              v358 = v333;
            else
              v358 = v335;
            v2042 = v358;
            if ((v356 & 1) != 0)
              v359 = v335;
            else
              v359 = v336;
            v2046 = v359;
            if ((v356 & 1) != 0)
              v360 = v336;
            else
              v360 = v334;
            v2038 = v360;
            v361 = v2183 ^ v305 ^ 0xDB9985E5;
            v2023 = v2183 ^ v301 ^ 0xC05F03D0;
            v2019 = v2183 ^ v1965 ^ 0x94A05D4F;
            v362 = v2078 ^ v313 ^ 0xFB829B7A;
            v363 = v2078 ^ v310 ^ 0xB27DC5E5;
            v364 = v2078 ^ v316 ^ 0xB4BB43D0;
            v2006 = v2078 ^ v311 ^ 0x775A9D1F;
            v365 = v1993 ^ v318;
            v366 = v2164 ^ v317 ^ 0xCE0C85BD;
            v367 = v2164 ^ v1957 ^ 0x81355D17;
            v368 = v2009 ^ 0xAD29BE5B ^ v1983;
            v369 = v2000 ^ v327;
            v370 = v2009 ^ 0x97D2B002 ^ v321;
            if ((v356 & 1) != 0)
              v371 = v2009 ^ 0xAD29BE5B ^ v1983;
            else
              v371 = v2009 ^ 0x97D2B002 ^ v321;
            v2001 = v371;
            if ((v356 & 1) != 0)
            {
              v372 = v2009 ^ 0x54F1B83E ^ v329;
            }
            else
            {
              v370 = v2009 ^ 0x54F1B83E ^ v329;
              v372 = v369;
            }
            v2010 = v372;
            if ((v356 & 1) != 0)
              v373 = v369;
            else
              v373 = v368;
            v374 = v1779 ^ v340 & 0xFFFFFFEF ^ 0xED673935 ^ (v355 + v1780);
            v375 = v2013 ^ v321 ^ 0x2E443109;
            v376 = v2013 ^ 0xD79C376C ^ v338;
            v377 = v337 ^ v375;
            v378 = v2013 ^ 0xD79C376C ^ v337;
            v2165 = v343;
            v1817 = v345;
            v379 = (v1955 >> 3) ^ 0x1AC1199C;
            v380 = v2264 - v2269 + (v353 ^ 0xE3BC2E6B) - 375683879;
            v1994 = v344;
            v381 = 2 * ((v345 ^ 0x7C08E964 ^ (v343 + 1912673614)) + v344) - 1740108968;
            v1808 = v353;
            v2184 = v349;
            v382 = 2 * (v2204 - v353 + v349) - 115686082;
            v2233 = v379;
            v383 = (*(_QWORD *)&v1784[8
                                    * ((*(_QWORD *)&v1784[8
                                                        * ((*(_QWORD *)&v1784[8
                                                                            * ((*(_QWORD *)&v1784[8
                                                                                                * (0x5EDACDFB
                                                                                                 % v379)]
                                                                              + 1752298786)
                                                                             % v379)]
                                                          + 1899360640)
                                                         % v379)]
                                      + 4029639829)
                                     % v379)]
                  + 2329569067)
                 % v379;
            v384 = v2111 - 218965014;
            if ((v356 & 1) != 0)
              v385 = v2227;
            else
              v385 = v2034;
            if ((v356 & 1) != 0)
              v386 = v2222;
            else
              v386 = v2227;
            v1849 = v386;
            if ((v356 & 1) != 0)
              v387 = v2029;
            else
              v387 = v2222;
            if ((v356 & 1) != 0)
              v388 = v2023;
            else
              v388 = v361;
            v2112 = v388;
            v389 = v2019;
            if ((v356 & 1) != 0)
              v389 = v361;
            v1820 = v389;
            v1796 = v363;
            if ((v356 & 1) != 0)
              v390 = v363;
            else
              v390 = v362;
            if ((v356 & 1) != 0)
              v391 = v362;
            else
              v391 = v2078 ^ v316 ^ 0xB4BB43D0;
            v1825 = v391;
            if ((v356 & 1) == 0)
              v364 = v2006;
            v1793 = v366;
            if ((v356 & 1) != 0)
              v392 = v365;
            else
              v392 = v366;
            if ((v356 & 1) != 0)
              v393 = v1961;
            else
              v393 = v365;
            v2079 = v393;
            v1789 = v367;
            if ((v356 & 1) != 0)
              v394 = v367;
            else
              v394 = v1961;
            v1782 = v376;
            if ((v356 & 1) != 0)
              v395 = v374;
            else
              v395 = v376;
            if ((v356 & 1) != 0)
              v396 = v378;
            else
              v396 = v374;
            v1813 = v377;
            if ((v356 & 1) != 0)
              v397 = v377;
            else
              v397 = v378;
            v2014 = v356;
            v2208 = v380 >> 1;
            v398 = (v380 >> 1) ^ 0xD2F81E09;
            v2223 = v382;
            v2228 = v381;
            v399 = v381 ^ 0x207E5794;
            v400 = v382 ^ 0x6753559A;
            v1785 = v385;
            if ((v356 & 2) != 0)
              v401 = v385;
            else
              v401 = v387;
            v1966 = v401;
            v402 = v2050;
            if ((v356 & 2) != 0)
              v402 = v2046;
            v1984 = v402;
            v403 = v2038;
            if ((v356 & 2) == 0)
              v403 = v2042;
            v1962 = v403;
            if ((v356 & 2) != 0)
              v404 = v364;
            else
              v404 = v390;
            v1882 = v404;
            if ((v356 & 2) != 0)
              v405 = v394;
            else
              v405 = v392;
            v1886 = v405;
            v1846 = v370;
            v1828 = v373;
            if ((v356 & 2) != 0)
              v406 = v373;
            else
              v406 = v370;
            v1899 = v406;
            v407 = v2001;
            if ((v356 & 2) == 0)
              v407 = v2010;
            v1958 = v407;
            v1804 = v395;
            v1800 = v397;
            if ((v356 & 2) != 0)
              v408 = v395;
            else
              v408 = v397;
            v1906 = v408;
            v409 = 0;
            if (v383 <= 1)
              v410 = 1;
            else
              v410 = v383;
            v411 = v410;
            v412 = -1;
            v413 = 0x737EEF981D5834C6;
            v414 = 0xE20F7F25B710E4C6;
            do
            {
              v415 = *(_QWORD *)&v1784[8 * v409];
              *(_QWORD *)&v1784[8 * v409] = v415 ^ 0xA7A7A7A7A7A7A7A7;
              v416 = 0x2BE525818B19F5B7 * v415;
              v417 = (0x2BE525818B19F5B7 * v415) ^ v414;
              v418 = v417
                   + ((unint64_t)(v417 + v409) >> 32)
                   + ((v417 + v409 + ((unint64_t)(v417 + v409) >> 32)) >> 16)
                   - ((v417
                     + v409
                     + ((unint64_t)(v417 + v409) >> 32)
                     + ((v417 + v409 + ((unint64_t)(v417 + v409) >> 32)) >> 16)) >> 8);
              v419 = (v409 + v418) ^ v399;
              LODWORD(v417) = (v409 + v418 + 246159971) ^ v400;
              v420 = v413 + v418;
              v421 = v420 ^ v398;
              v422 = (v420 ^ (0x2BE525818B19F5B7 * v415))
                   + ((v409 + (v420 ^ (0x2BE525818B19F5B7 * v415))) >> (v384 ^ 0xB4));
              v423 = (v422 + v409) >> 16;
              v424 = (v422 + v409 + v423) >> 8;
              v425 = v409 + v423 - v424 + v422;
              v426 = v409 + 0x737EEF981D5834C6 + v423 - v424 + v422;
              v427 = v421 ^ v426;
              v428 = v426 ^ v416;
              v429 = (v426 ^ v416) + v409;
              LODWORD(v416) = v409 + v428;
              v430 = v409 + 1;
              v431 = HIDWORD(v429);
              v432 = v429 + HIDWORD(v429);
              v433 = v432 >> 16;
              v434 = (v432 + (v432 >> 16)) >> 8;
              LODWORD(v416) = v416 + v431 + v433 - v434;
              v399 = v419 ^ v425 ^ v416;
              v400 = v417 ^ (v425 + 246159971) ^ (v416 + 246159971);
              v414 = v413 + v428 + v431 + v433 - v434;
              v398 = v427 ^ v414;
              ++v413;
              ++v412;
              v409 = v430;
            }
            while (v410 != v430);
            v435 = (v384 - 376433932) | 0x68610462;
            if ((v2274 & 1) != 0)
              v436 = v2121;
            else
              v436 = v2104;
            if ((v2274 & 1) != 0)
              v437 = v2115;
            else
              v437 = v2099;
            if ((v2274 & 1) != 0)
              v438 = v2179;
            else
              v438 = v2125;
            if ((v2274 & 1) != 0)
              v439 = v2173;
            else
              v439 = v2152;
            if ((v2274 & 1) != 0)
              v440 = v1977;
            else
              v440 = v1879;
            if ((v2274 & 1) != 0)
              v441 = v1972;
            else
              v441 = v1865;
            v442 = v1861;
            if ((v2274 & 1) != 0)
            {
              v443 = v1903;
            }
            else
            {
              v442 = v1873;
              v443 = v1869;
            }
            v444 = v1894;
            if ((v2274 & 1) != 0)
              v444 = v1890;
            v445 = v2058;
            if ((v2274 & 2) != 0)
              v445 = v2054;
            v1978 = v445;
            v446 = v2093;
            if ((v2274 & 2) == 0)
              v446 = v2088;
            v2116 = v446;
            v447 = v2085;
            if ((v2274 & 2) != 0)
              v447 = v2082;
            v1874 = v447;
            v448 = v2074;
            if ((v2274 & 2) != 0)
              v448 = v2071;
            v2122 = v448;
            v449 = v2067;
            if ((v2274 & 2) != 0)
              v449 = v2063;
            v2174 = v449;
            v450 = (v435 - 1661612955) ^ v1857;
            v2094 = v436;
            v2089 = v437;
            if ((v2274 & 2) != 0)
              v451 = v437;
            else
              v451 = v436;
            v1997 = v451;
            v2068 = v438;
            if ((v2274 & 2) != 0)
              v452 = v439;
            else
              v452 = v438;
            v2180 = v452;
            v453 = v2236;
            v2105 = v440;
            if ((v2274 & 2) != 0)
              v453 = v440;
            v2100 = v453;
            if ((v2274 & 2) != 0)
              v454 = v442;
            else
              v454 = v441;
            v2153 = v454;
            if ((v2274 & 2) != 0)
              v455 = v443;
            else
              v455 = v444;
            v1904 = v455;
            if ((v356 & 1) != 0)
              v456 = v2034;
            else
              v456 = v2029;
            if ((v356 & 1) != 0)
              v457 = v2006;
            else
              v457 = v1796;
            v458 = v1793;
            if ((v356 & 1) == 0)
              v458 = v1789;
            v2126 = v458;
            if ((v356 & 1) != 0)
              v459 = v1782;
            else
              v459 = v1813;
            if ((v356 & 1) != 0)
              v460 = v2019;
            else
              v460 = (v435 - 1661612955) ^ v1857;
            v461 = v2023;
            if ((v356 & 1) != 0)
              v461 = (v435 - 1661612955) ^ v1857;
            v462 = v1785;
            if ((v356 & 2) != 0)
              v462 = v387;
            v1870 = v462;
            if ((v356 & 2) != 0)
              v463 = v390;
            else
              v463 = v364;
            v2075 = v463;
            if ((v356 & 2) != 0)
              v464 = v392;
            else
              v464 = v394;
            v2086 = v464;
            v465 = v2010;
            if ((v356 & 2) == 0)
              v465 = v2001;
            v2083 = v465;
            if ((v356 & 2) != 0)
              v466 = v396;
            else
              v466 = v459;
            v2020 = v466;
            if ((v356 & 2) != 0)
              v467 = v459;
            else
              v467 = v396;
            v2035 = v467;
            v468 = v428 + v412;
            v469 = v435 - 605871378;
            v470 = ((v468 + HIDWORD(v468)) >> 16)
                 + HIDWORD(v468)
                 - ((v468 + HIDWORD(v468) + ((v468 + HIDWORD(v468)) >> 16)) >> 8)
                 + v428
                 + v413
                 - 1;
            if ((v356 & 2) != 0)
              v471 = v1849;
            else
              v471 = v456;
            v1862 = v471;
            if ((v356 & 2) != 0)
              v472 = v1820;
            else
              v472 = v461;
            v2055 = v472;
            v473 = v2112;
            v2024 = v460;
            if ((v356 & 2) == 0)
              v473 = v460;
            v2064 = v473;
            do
            {
              v474 = 8 * v411;
              v475 = *(_QWORD *)&v1784[v474];
              *(_QWORD *)&v1784[v474] = v475 ^ 0xA7A7A7A7A7A7A7A7;
              v475 *= 0x2BE525818B19F5B7;
              v476 = (v475 ^ v470) + v411 + (((v475 ^ v470) + (unint64_t)v411) >> 32);
              v477 = v476 + (v476 >> 16) - ((v476 + (v476 >> 16)) >> (v469 + 48));
              v478 = v477 ^ v399;
              v479 = (v477 + 246159971) ^ v400;
              v477 += 0x737EEF981D5834C6;
              v480 = v477 ^ v398;
              v481 = (v477 ^ v475) + v411 + (((v477 ^ v475) + v411) >> 32);
              v482 = v481 + (v481 >> 16) - ((v481 + (v481 >> 16)) >> 8);
              v483 = v478 ^ v482;
              v484 = v479 ^ (v482 + 246159971);
              v482 += 0x737EEF981D5834C6;
              v485 = v480 ^ v482;
              v486 = (v482 ^ v475) + v411 + (((v482 ^ v475) + v411) >> 32);
              v487 = v486 + (v486 >> 16) - ((v486 + (v486 >> 16)) >> 8);
              v399 = v483 ^ v487;
              ++v411;
              v400 = v484 ^ (v487 + 246159971);
              v470 = v487 + 0x737EEF981D5834C6;
              v398 = v485 ^ (v487 + 492319942);
            }
            while (v2233 > v411);
            v488 = 0;
            v489 = v469 + 1063354500;
            v490 = v2289;
            if ((v2274 & 2) == 0)
              v490 = v2212;
            v2007 = v490;
            v491 = v2187;
            if ((v2274 & 2) == 0)
              v491 = v2159;
            v1858 = v491;
            v492 = v2156;
            if ((v2274 & 2) == 0)
              v492 = v2140;
            v2157 = v492;
            v493 = v2148;
            if ((v2274 & 2) != 0)
              v493 = v2144;
            v1814 = v493;
            v494 = v2136;
            if ((v2274 & 2) != 0)
              v494 = v2130;
            v2160 = v494;
            if ((v2274 & 2) != 0)
              v442 = v441;
            v2188 = v442;
            if ((v2274 & 2) == 0)
              v444 = v443;
            v1895 = v444;
            v2290 = v450 ^ v1853;
            if ((v356 & 2) != 0)
              v495 = v456;
            else
              v495 = v1849;
            v1850 = v495;
            v496 = v2042;
            if ((v356 & 2) == 0)
              v496 = v2038;
            v1866 = v496;
            if ((v356 & 2) == 0)
              v461 = v1820;
            v2043 = v461;
            v497 = v1804;
            if ((v356 & 2) != 0)
              v497 = v1800;
            v1891 = v497;
            v498 = ((v487 - 0x106EAC299B004876) >> (v489 ^ 0x44u)) + v487 - 0x106EAC299B004876;
            v499 = v498 + (v498 >> 12) + ((v498 + (v498 >> 12)) >> 7);
            v500 = v499
                 + 0x92C0881E4A486A5
                 - ((v499 + 0x92C0881E4A486A5) >> 27)
                 + ((v499 + 0x92C0881E4A486A5 - ((v499 + 0x92C0881E4A486A5) >> 27)) >> 8);
            v501 = v500 - (v500 >> 2);
            v502 = v501
                 + 0x10F4E8E510077900
                 - ((v501 + 0x10F4E8E510077900) >> 30)
                 - ((v501 + 0x10F4E8E510077900 - ((v501 + 0x10F4E8E510077900) >> 30)) >> 14);
            v503 = v502 + (v502 >> 5);
            v504 = (v503 ^ 0x28A3172F9CFB7582)
                 - ((v503 ^ 0x28A3172F9CFB7582) >> 27)
                 - (((v503 ^ 0x28A3172F9CFB7582) - ((v503 ^ 0x28A3172F9CFB7582) >> 27)) >> 15);
            v505 = v504 + (v504 >> 2);
            LODWORD(v499) = v505 ^ v499;
            v506 = v505
                 - 0x488AE95DB30FE039
                 - ((v505 - 0x488AE95DB30FE039) >> 29)
                 - ((v505 - 0x488AE95DB30FE039 - ((v505 - 0x488AE95DB30FE039) >> 29)) >> 9);
            v507 = v506 + (v506 >> 3);
            LODWORD(v501) = v507 ^ v501;
            v508 = v507
                 + 0x639ECA0BD2CB9EF4
                 + ((v507 + 0x639ECA0BD2CB9EF4) >> 28)
                 + ((v507 + 0x639ECA0BD2CB9EF4 + ((v507 + 0x639ECA0BD2CB9EF4) >> 28)) >> 15);
            v509 = v508 + (v508 >> 1);
            v510 = v509
                 - 0x29E6B8B45C839658
                 - ((v509 - 0x29E6B8B45C839658) >> 26)
                 - ((v509 - 0x29E6B8B45C839658 - ((v509 - 0x29E6B8B45C839658) >> 26)) >> 10);
            v511 = v510 + (v510 >> 7);
            v512 = v499 ^ v399 ^ v511;
            v513 = (v511 ^ 0xE7D1C221D1DDD068)
                 + ((v511 ^ 0xE7D1C221D1DDD068) >> 29)
                 - (((v511 ^ 0xE7D1C221D1DDD068) + ((v511 ^ 0xE7D1C221D1DDD068) >> 29)) >> 11);
            v514 = v513 + (v513 >> 6);
            v515 = v501 ^ v400 ^ v514;
            v516 = v514
                 - 0x44DDEF16F6D431ELL
                 + ((v514 - 0x44DDEF16F6D431ELL) >> 28)
                 + ((v514 - 0x44DDEF16F6D431ELL + ((v514 - 0x44DDEF16F6D431ELL) >> 28)) >> 11);
            v517 = v516 - (v516 >> 5);
            if ((v356 & 2) != 0)
              v518 = v457;
            else
              v518 = v1825;
            v2059 = v518;
            v519 = v509 ^ v503;
            v520 = v2079;
            if ((v356 & 2) != 0)
              v520 = v2126;
            v2072 = v520;
            v521 = v519 ^ v398 ^ v517;
            if (((v2015[(v2015[(v2015[(v2015[4] + 12) & 0xF] + 11) & 0xF] + 12) & 0xF] + 14) & 0xE) != 0)
              v522 = (v2015[(v2015[(v2015[(v2015[4] + 12) & 0xF] + 11) & 0xF] + 12) & 0xF] + 14) & 0xF;
            else
              v522 = 1;
            v523 = (v489 - 257804124) | 0x608002A8;
            v524 = -1;
            v525 = -1103724202;
            do
            {
              v526 = 1540573109 * v2015[v488];
              v527 = v526 ^ v525;
              v528 = (v527 + v488);
              v529 = v528 >> 16;
              v530 = (unint64_t)(v528 + WORD1(v528)) >> 8;
              LODWORD(v528) = (v527 + v488 + ((v527 + v488) >> 16) + v530) ^ v512;
              v531 = (v488 - 1391465294 + v527 + v529 + v530) ^ v515;
              v532 = v488 + 1512036708 + v527 + v529 + v530;
              v533 = v532 ^ v521;
              v534 = v532 ^ v526;
              v535 = (unint64_t)(v534 + v488) >> 16;
              v536 = v534 + ((v534 + (_DWORD)v488 + ((v534 + v488) >> 16)) >> (v523 ^ 0xA0));
              LODWORD(v528) = v528 ^ (v488 + v535 + v536);
              LODWORD(v529) = v531 ^ (v488 - 1391465294 + v535 + v536);
              v537 = v488 + 1512036708 + v535 + v536;
              v538 = v533 ^ v537;
              v539 = v537 ^ v526;
              v540 = (unint64_t)(v539 + (_DWORD)v488 + ((v539 + v488) >> 16)) >> 8;
              v512 = v528 ^ (v539 + v488 + ((v539 + v488) >> 16) + v540);
              v515 = v529 ^ (v488 - 1391465294 + v539 + ((v539 + v488) >> 16) + v540);
              v525 = v488 + 1512036708 + v539 + ((v539 + v488) >> 16) + v540;
              ++v488;
              v521 = v538 ^ v525;
              ++v524;
            }
            while (v522 != v488);
            v541 = 0;
            v542 = (v523 + 183620875) & 0xFEFEADED;
            v543 = v2094;
            if ((v2274 & 2) == 0)
              v543 = v2089;
            v2137 = v543;
            v544 = v2068;
            if ((v2274 & 2) == 0)
              v544 = v439;
            v2149 = v544;
            v545 = v2300;
            if ((v2274 & 2) != 0)
              v545 = v2296;
            v2141 = v545;
            v546 = v2282;
            if ((v2274 & 2) != 0)
              v546 = v2216;
            v1880 = v546;
            v547 = v2050;
            if ((v356 & 2) == 0)
              v547 = v2046;
            v1854 = v547;
            if ((v356 & 2) != 0)
              v548 = v1825;
            else
              v548 = v457;
            v2047 = v548;
            v549 = v1846;
            if ((v356 & 2) == 0)
              v549 = v1828;
            v2069 = v549;
            v550 = v522 - 532045919;
            v551 = v522 - 504131691;
            v552 = v522 - 767900776;
            v553 = v522 - 1;
            v554 = v522 + 1874745934;
            v555 = ((v539 + v524) >> 16)
                 + 1512036708
                 + v488
                 + v539
                 + ((v539 + v524 + ((v539 + v524) >> 16)) >> 8)
                 - 1;
            v556 = 532045919;
            v557 = 4087978573;
            v2301 = 1252935720;
            v558 = 1818166303;
            v559 = 144641654;
            v560 = 3372896262;
            v561 = 2420221362;
            v562 = 504131691;
            v2217 = (v542 + 1065182880) | 0xC1010612;
            v563 = v2015;
            v564 = 2903502002;
            v565 = 1512036708;
            v566 = v522;
            v567 = 767900776;
            do
            {
              v2297 = v550;
              v568 = v563[v522] * (v2217 ^ 0xB4E451E6);
              v569 = v568 ^ v555;
              v570 = v554;
              v571 = v561;
              v572 = v560;
              v573 = v557;
              v574 = v559;
              v575 = v558;
              v576 = v522;
              v577 = (v569 + v566);
              v578 = v577 + WORD1(v577);
              v577 >>= 16;
              v578 >>= 8;
              v579 = v576 + v541;
              v580 = (v576 + v541 + v569 + v577 + v578) ^ v512;
              v581 = v576 + v564;
              v582 = (v576 + v564 + v569 + v577 + v578) ^ v515;
              v583 = v576 + v565;
              v584 = v576 + v565 + v569 + v577 + v578;
              v585 = v584 ^ v521;
              v586 = v584 ^ v568;
              v587 = (v586 + v566);
              v588 = v587 >> 16;
              v589 = (unint64_t)(v587 + WORD1(v587)) >> 8;
              v590 = v580 ^ (v576 + v541 + v586 + v588 + v589);
              v591 = v582 ^ (v576 + v564 + v586 + v588 + v589);
              v522 = v576;
              v592 = v575;
              v593 = v574;
              v594 = v573;
              v595 = v572;
              v596 = v571;
              LODWORD(v571) = v570;
              v597 = v583 + v586 + v588 + v589;
              v598 = v585 ^ v597;
              v599 = v597 ^ v568;
              v600 = (v599 + v566);
              v601 = v600 >> 16;
              v602 = (unint64_t)(v600 + WORD1(v600)) >> 8;
              v512 = v590 ^ (v579 + v599 + v601 + v602);
              v515 = v591 ^ (v581 + v599 + v601 + v602);
              v555 = v583 + v599 + v601 + v602;
              v521 = v598 ^ v555;
              v550 = v2297 + 1;
              ++v551;
              ++v552;
              ++v553;
              --v556;
              v554 = v571 + 1;
              v557 = v594 - 1;
              --v2301;
              v558 = v592 - 1;
              v559 = v593 - 1;
              v560 = v595 - 1;
              v561 = v596 - 1;
              --v562;
              --v567;
              ++v566;
              ++v565;
              ++v564;
              ++v541;
              ++v563;
            }
            while (v522 + v541 != 16);
            v603 = 0;
            v604 = v2217 + 1852459178;
            v605 = v2236;
            if ((v2274 & 2) == 0)
              v605 = v2105;
            v2145 = v605;
            v606 = v2079;
            if ((v2014 & 2) == 0)
              v606 = v2126;
            v2080 = v606;
            v607 = (v599 + v553) >> 16;
            v608 = (v599 + v553 + v607) >> 8;
            v609 = v599 + v552 + v607 + v608;
            v610 = v609 >> 10;
            v611 = (v609 - (v609 >> 10)) >> 7;
            v612 = (v522 + v599 + v608 + v607 + v611 - v610 - v567) ^ v512;
            v613 = v599 + v2217;
            v614 = v599 + v2217 + v551 + v608 + v607 + v611;
            v615 = (v614 - v610) >> 12;
            v616 = v613 + v611 + v608 + v607 + v615;
            v617 = (v614 + v615 - v610) >> 2;
            v618 = (v522 + v616 - v617 - v610 - v562) ^ v515;
            v619 = v616 + v550;
            v620 = (v616 + v550 - v617 - v610) >> 12;
            v621 = v616 + v620;
            v622 = (v619 + v620 - v617 - v610) >> 4;
            v623 = v522 + v621 - v622 - v617 - v610 - v556;
            v624 = v621 + v554;
            v625 = (v624 - v622 - v617 - v610) >> 10;
            v626 = v624 + v625 - v622 - v617 - v610;
            v627 = v613 + v625 + v620 + v615 + v611 + v608 + (v626 >> 6) + v607;
            v628 = v627 - v622 - v617 - v610;
            v629 = v612 ^ (v522 + v628 - v561);
            v630 = (v626 >> 6) + v626 - 952674900;
            v631 = v630 >> 12;
            v632 = v630 - (v630 >> 12);
            v633 = v632 >> 3;
            v634 = v618 ^ (v522 + v628 - (v632 >> 3) - v631 - v560);
            v635 = v632 - (v632 >> 3) - 715082311;
            v636 = v627 + (v635 >> 14);
            v637 = (v635 >> 14) + v635;
            v638 = v637 >> 6;
            v639 = v522 + v636 - v622 - v617 - v610 - (v637 >> 6) - (v632 >> 3) - v631 - v557;
            v640 = v637 - (v637 >> 6) - 351630377;
            v641 = v636 + (v640 >> 15);
            v642 = (v640 >> 15) + v640;
            v643 = v642 >> 6;
            v644 = v641 - v622 - v617 - v610 - (v642 >> 6) - v638 - v633;
            v645 = v629 ^ (v522 + v644 - v631 - v559);
            v646 = v642 - (v642 >> 6) - 1673524649;
            v647 = v646 >> 8;
            v648 = v646 - (v646 >> 8);
            v649 = v648 >> 8;
            v650 = v634 ^ (v522 + v644 - (v648 >> 8) - v631 - v647 - v558);
            v651 = v648 - (v648 >> 8) + 565230583;
            v652 = v651 >> 8;
            v653 = v641 + ((v651 - (v651 >> 8)) >> 1) - v622;
            v654 = v645 & 0xFE;
            v2131 = v645 & 0xFFFFFF01;
            v2213 = v623 ^ v521 ^ v639 ^ (v522
                                        + v653
                                        - v617
                                        - v610
                                        - v643
                                        - v638
                                        - v633
                                        - v649
                                        - v631
                                        - v647
                                        - v652
                                        - v2301);
            v1778 = v2213 & 7 ^ 4;
            if (v1778)
              v655 = 255;
            else
              v655 = 0;
            v2298 = ((v2213 ^ 3) + 1) & 7;
            v656 = v655 << (((v2213 ^ 3) + 1) & 7);
            v657 = 16843009 * v656;
            v658 = 1358954496 * v656;
            if (v1778)
              v659 = ~(_BYTE)v656;
            else
              v659 = 0;
            v2302 = v645 & v659;
            v660 = 16843009
                 * (v645 ^ 0x74 ^ ((unsigned __int16)(v645 ^ 0x9E74) >> 8) ^ ((v645 ^ 0xCBD39E74) >> 16) ^ HIBYTE(v645) ^ 0x8F);
            v2218 = v650;
            v661 = ((*(_QWORD *)&v1784[8
                                     * (((*(_QWORD *)&v1784[8
                                                          * (((*(_QWORD *)&v1784[8
                                                                               * (((*(_QWORD *)&v1784[8 * (0x55EEED85 % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                                                                 + 3299647547u)
                                                                                % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                                            + 3900317375u)
                                                           % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                       + 519340286)
                                      % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                  + 215119524)
                 % v2233;
            v662 = v2223 ^ 0xAD80037E;
            v663 = v2228 ^ 0xEAAD0170;
            v2237 = v645;
            v2106 = v645 ^ 0xFEA7F364;
            v664 = (v604 - 2112475144) & 0xB9FFFFEB;
            v665 = v2208 ^ 0x182B48ED;
            if (v661 <= 1)
              v666 = 1;
            else
              v666 = v661;
            v667 = 0x737EEF981D5834C4;
            v668 = 0xE6FDDF303AB0698ALL;
            v669 = -1;
            v670 = 0x737EEF981D5834C6;
            v671 = 0x737EEF981D5834C6;
            v672 = 0xE20F7F25B710E4C6;
            do
            {
              v673 = 0x2BE525818B19F5B7 * (*(_QWORD *)&v1784[8 * v603] ^ 0xA7A7A7A7A7A7A7A7);
              v674 = v673 ^ v672;
              v675 = (v673 ^ v672) + v603;
              v676 = HIDWORD(v675);
              v677 = v675 + HIDWORD(v675);
              v678 = v677 >> 16;
              v679 = v674 - ((v677 + (v677 >> 16)) >> (v664 ^ 0xE9));
              LODWORD(v677) = v603 + v676 + (v677 >> 16) + v679;
              v680 = v677 ^ v663;
              LODWORD(v677) = (v677 + 246159971) ^ v662;
              v681 = v603 + 0x737EEF981D5834C6 + v676 + v678 + v679;
              v682 = v681 ^ v665;
              v683 = v681 ^ v673;
              v684 = (v681 ^ v673) + v603;
              v685 = HIDWORD(v684);
              v686 = v684 + HIDWORD(v684);
              v687 = v686 >> 16;
              v688 = (v686 + (v686 >> 16)) >> 8;
              v689 = v603 + v685 + v687 + v683 - v688;
              v690 = v680 ^ v689;
              v691 = v677 ^ (v689 + 246159971);
              v692 = v670 + v685 + v687 + v683 - v688;
              v693 = v682 ^ v692;
              v694 = 2 * (v692 & v673);
              ++v603;
              v695 = v683 + v671 + v685 + v673 + v687;
              v696 = v683
                   + ((v695 - v688 - v694) >> 32)
                   + ((v695 + ((v695 - v688 - v694) >> 32) - v688 - v694) >> 16)
                   - ((v695
                     + ((v695 - v688 - v694) >> 32)
                     + ((v695 + ((v695 - v688 - v694) >> 32) - v688 - v694) >> 16)
                     - v688
                     - v694) >> 8)
                   - v688
                   - v694;
              LODWORD(v695) = v671 + v685 + v673 + v687 + v696;
              v663 = v690 ^ v695;
              v662 = v691 ^ (v695 + 246159971);
              v697 = v668 + v685 + v673 + v687 + v696;
              v672 = v697 + 2;
              v665 = v693 ^ (v697 + 2);
              v668 += 2;
              v667 += 2;
              ++v669;
              v671 += 2;
              ++v670;
            }
            while (v666 != v603);
            v698 = v664 + 45203961;
            v699 = v2241;
            if ((v2274 & 2) != 0)
              v699 = v2191;
            v2011 = v699;
            v2242 = v654 ^ 0x64;
            v700 = 16843009 * (v654 ^ 0x64);
            v1973 = v657 ^ ~(v658 & v650);
            v701 = (v698 ^ 0x9D6851DB)
                 * (v650 ^ 0xE8 ^ ((unsigned __int16)(v650 ^ 0x5DE8) >> 8) ^ ((v650 ^ 0xC0855DE8) >> 16) ^ HIBYTE(v650) ^ 0x2D);
            v2051 = v660 ^ 0x44444444;
            v702 = (v683 + v669) >> 32;
            v703 = v683 + v669 + v702;
            v704 = v703 >> 16;
            v705 = v683 + v667 + v702 + v673 + (v703 >> 16);
            v706 = (v703 + (v703 >> 16)) >> 8;
            v707 = (v705 - v706 - v694) >> 32;
            v708 = v673
                 + v668
                 + v683
                 + v707
                 + v704
                 + v702
                 + ((v705 + v707 - v706 - v694) >> 16)
                 - ((v705 + v707 + ((v705 + v707 - v706 - v694) >> 16) - v706 - v694) >> 8)
                 - v706
                 - v694;
            v709 = v698 - 459567458;
            v710 = v698 + 1916979593;
            do
            {
              v711 = 0x2BE525818B19F5B7 * (*(_QWORD *)&v1784[8 * v666] ^ 0xA7A7A7A7A7A7A7A7);
              v712 = (v711 ^ v708) + v666 + (((v711 ^ v708) + v666) >> 32);
              v713 = v712 + (v712 >> 16) - ((v712 + (v712 >> 16)) >> 8);
              v714 = v713 ^ v663;
              v715 = (v710 + v713) ^ v662;
              v713 += 0x737EEF981D5834C6;
              v716 = v713 ^ v665;
              v717 = (v713 ^ v711) + v666 + (((v713 ^ v711) + v666) >> 32);
              v718 = v717 + (v717 >> 16) - ((v717 + (v717 >> 16)) >> 8);
              v719 = v714 ^ v718;
              v720 = v715 ^ (v718 + 246159971);
              v718 += 0x737EEF981D5834C6;
              v721 = v716 ^ v718;
              v722 = (v718 ^ v711) + v666 + (((v718 ^ v711) + v666) >> 32);
              v723 = v722 + (v722 >> 16) - ((v722 + (v722 >> 16)) >> 8);
              v663 = v719 ^ v723;
              LODWORD(v666) = v666 + 1;
              v662 = v720 ^ (v723 + 246159971);
              v708 = v723 + 0x737EEF981D5834C6;
              v665 = v721 ^ (v723 + 492319942);
            }
            while (v2233 > v666);
            v1783 = v700;
            v724 = 0;
            v725 = (v709 + 2117791810) & 0x67DBFFCF;
            v726 = v2256;
            if ((v2274 & 2) != 0)
              v726 = v2248;
            v1847 = v726;
            v1764 = v2302 ^ v657;
            v2257 = v2213 ^ 0xFEA7F364;
            v727 = v723
                 - 0x106EAC299B004876
                 + ((v723 - 0x106EAC299B004876) >> 24)
                 + ((v723 - 0x106EAC299B004876 + ((v723 - 0x106EAC299B004876) >> 24)) >> 12);
            v728 = v727 + (v727 >> 7);
            v729 = v728 + 0x92C0881E4A486A5 - ((v728 + 0x92C0881E4A486A5) >> (v725 - 111));
            v730 = v729 + (v729 >> 8) - ((v729 + (v729 >> 8)) >> 2);
            v731 = v730
                 + 0x10F4E8E510077900
                 - ((v730 + 0x10F4E8E510077900) >> 30)
                 - ((v730 + 0x10F4E8E510077900 - ((v730 + 0x10F4E8E510077900) >> 30)) >> 14);
            v732 = v731 + (v731 >> 5);
            v733 = (v732 ^ 0x28A3172F9CFB7582)
                 - ((v732 ^ 0x28A3172F9CFB7582) >> 27)
                 - (((v732 ^ 0x28A3172F9CFB7582) - ((v732 ^ 0x28A3172F9CFB7582) >> 27)) >> 15);
            v734 = v733 + (v733 >> 2);
            LODWORD(v728) = v734 ^ v728;
            v735 = v734
                 - 0x488AE95DB30FE039
                 - ((v734 - 0x488AE95DB30FE039) >> 29)
                 - ((v734 - 0x488AE95DB30FE039 - ((v734 - 0x488AE95DB30FE039) >> 29)) >> 9);
            v736 = v735 + (v735 >> 3);
            LODWORD(v730) = v736 ^ v730;
            v737 = v736
                 + 0x639ECA0BD2CB9EF4
                 + ((v736 + 0x639ECA0BD2CB9EF4) >> 28)
                 + ((v736 + 0x639ECA0BD2CB9EF4 + ((v736 + 0x639ECA0BD2CB9EF4) >> 28)) >> 15);
            v738 = v737 + (v737 >> 1);
            v739 = v738
                 - 0x29E6B8B45C839658
                 - ((v738 - 0x29E6B8B45C839658) >> 26)
                 - ((v738 - 0x29E6B8B45C839658 - ((v738 - 0x29E6B8B45C839658) >> 26)) >> 10);
            v740 = v739 + (v739 >> 7);
            v741 = v728 ^ v663 ^ v740;
            v742 = (v740 ^ 0xE7D1C221D1DDD068)
                 + ((v740 ^ 0xE7D1C221D1DDD068) >> 29)
                 - (((v740 ^ 0xE7D1C221D1DDD068) + ((v740 ^ 0xE7D1C221D1DDD068) >> 29)) >> 11);
            v743 = v742 + (v742 >> 6);
            v744 = v730 ^ v662 ^ v743;
            v745 = v743
                 - 0x44DDEF16F6D431ELL
                 + ((v743 - 0x44DDEF16F6D431ELL) >> 28)
                 + ((v743 - 0x44DDEF16F6D431ELL + ((v743 - 0x44DDEF16F6D431ELL) >> 28)) >> 11);
            v746 = v738 ^ v732 ^ v665 ^ (v745 - (v745 >> 5));
            if (((v2015[(v2015[(v2015[(v2015[5] + 8) & 0xF] - 1) & 0xF] + 9) & 0xF] + 6) & 0xE) != 0)
              v747 = (v2015[(v2015[(v2015[(v2015[5] + 8) & 0xF] - 1) & 0xF] + 9) & 0xF] + 6) & 0xF;
            else
              v747 = 1;
            v748 = -1;
            v749 = v725 ^ 0xD4F9DB9C;
            v750 = -1103724202;
            do
            {
              v751 = v724;
              v752 = 1540573109 * v2015[v724];
              v753 = v752 ^ v750;
              v754 = (unint64_t)(v753 + v724) >> 16;
              v755 = v753 + ((v753 + (_DWORD)v724 + ((v753 + v724) >> 16)) >> (v749 - 14));
              v756 = (v724 + v754 + v755) ^ v741;
              v757 = v724 - 1391465294;
              v758 = (v724 - 1391465294 + v754 + v755) ^ v744;
              v759 = v724 + 1512036708;
              v760 = v724 + 1512036708 + v754 + v755;
              LODWORD(v754) = v760 ^ v746;
              v761 = v760 ^ v752;
              v762 = (unint64_t)(v761 + (_DWORD)v724 + ((v761 + v724) >> 16)) >> 8;
              v763 = v756 ^ (v761 + v724 + ((v761 + v724) >> 16) + v762);
              v764 = v758 ^ (v724 - 1391465294 + v761 + ((v761 + v724) >> 16) + v762);
              v765 = v724 + 1512036708 + v761 + ((v761 + v724) >> 16) + v762;
              LODWORD(v754) = v754 ^ v765;
              v766 = v765 ^ v752;
              ++v724;
              v767 = (unint64_t)(v766 + v751 + ((v766 + v751) >> 16)) >> 8;
              v741 = v763 ^ (v766 + v751 + ((v766 + v751) >> 16) + v767);
              v744 = v764 ^ (v757 + v766 + ((v766 + v751) >> 16) + v767);
              v750 = v759 + v766 + ((v766 + v751) >> 16) + v767;
              v746 = v754 ^ v750;
              ++v748;
            }
            while (v747 != v724);
            v768 = 0;
            v2249 = v701;
            v2095 = v660 ^ v701 ^ 0xA9A9A9A9;
            v769 = v747 - 1;
            v770 = v747 - 767900776;
            v771 = 3499152292;
            v772 = v747 - 795815004;
            v773 = v747 + 1610976849;
            v774 = ((v766 + v748) >> 16)
                 + 1512036708
                 + v724
                 + v766
                 + ((v766 + v748 + ((v766 + v748) >> 16)) >> 8)
                 - 1;
            v775 = 2683990447;
            v776 = 3636665347;
            v777 = 56780362;
            v2303 = 408410739;
            v778 = 2081935388;
            v779 = 1516704805;
            v780 = 805401437;
            v2275 = (v749 + 1546263786) | 0x6D024855;
            v781 = v2015;
            v782 = 2903502002;
            v783 = 1512036708;
            v784 = v747;
            v785 = 767900776;
            do
            {
              v2283 = v770;
              v786 = 1540573109 * v781[v747];
              v787 = v786 ^ v774;
              v788 = (v787 + v784);
              v789 = v788 + WORD1(v788);
              v788 >>= 16;
              v789 >>= 8;
              v790 = v747 + v768;
              v791 = (v747 + v768 + v787 + v788 + v789) ^ v741;
              v792 = v747 + v782;
              v793 = (v747 + v782 + v787 + v788 + v789) ^ v744;
              v794 = v747 + v783;
              LODWORD(v789) = v747 + v783 + v787 + v788 + v789;
              v795 = v789 ^ v746;
              LODWORD(v789) = v789 ^ v786;
              v796 = (v789 + v784);
              v797 = v796 >> 16;
              v798 = (unint64_t)(v796 + WORD1(v796)) >> 8;
              v799 = v791 ^ (v747 + v768 + v789 + v797 + v798);
              v800 = v771;
              v801 = v773;
              v802 = v775;
              v803 = v776;
              v804 = v777;
              v805 = v778;
              v806 = v779;
              v807 = v747;
              v808 = v793 ^ (v747 + v780 + v789 + v2275 + v797 + v798);
              LODWORD(v789) = v794 + v789 + v797 + v798;
              LODWORD(v798) = v795 ^ v789;
              v809 = v789 ^ v786;
              v810 = (v809 + v784);
              v811 = v810 >> 16;
              v812 = (unint64_t)(v810 + WORD1(v810)) >> 8;
              v741 = v799 ^ (v790 + v809 + v811 + v812);
              v744 = v808 ^ (v792 + v809 + v811 + v812);
              v747 = v807;
              v813 = v806;
              v814 = v805;
              v815 = v804;
              v816 = v803;
              v817 = v802;
              LODWORD(v802) = v801;
              v774 = v794 + v809 + v811 + v812;
              v746 = v798 ^ v774;
              ++v769;
              v770 = v2283 + 1;
              --v785;
              v771 = v800 + 1;
              ++v772;
              v773 = v802 + 1;
              v775 = v817 - 1;
              v776 = v816 - 1;
              v777 = v815 - 1;
              --v2303;
              v778 = v814 - 1;
              v779 = v813 - 1;
              ++v784;
              ++v783;
              ++v782;
              ++v768;
              ++v780;
              ++v781;
            }
            while (v747 + v768 != 16);
            v818 = 0;
            v819 = (v809 + v769) >> 16;
            v820 = (v809 + v769 + v819) >> 8;
            v821 = v809 + v770 + v819 + v820;
            v822 = v821 >> 10;
            v823 = (v821 - (v821 >> 10)) >> 7;
            v824 = ((v2275 + 1243182715) ^ 0x39C80D80) + v809;
            v825 = v747 + v809 + v820 + v819 + v823 - v822 - v785;
            v826 = v824 + v770 + v820 + v819 + v823;
            v827 = (v826 - v822) >> 12;
            v828 = v824 + v823 + v820 + v819 + v827;
            v829 = (v826 + v827 - v822) >> 2;
            v830 = v747 + v828 - v829 - v822;
            v831 = (v830 - v785) ^ v744;
            v832 = v828 + v772;
            v833 = ((v832 - v829 - v822) >> 12) + v771;
            v834 = (v832 - v829 - v822) >> 12;
            v835 = (v832 + v834 - v829 - v822) >> 4;
            v836 = v830 - v835 + v833;
            v837 = v825 ^ v741;
            v838 = v824 + v773 + v827 + v823 + v820 + v819 + v834;
            v839 = (v838 - v835 - v829 - v822) >> 10;
            v840 = v824 + v839 + v834 + v827 + v823 + v820;
            v841 = v838 + v839 - v835 - v829 - v822;
            v842 = v840 + (v841 >> 6) + v819;
            v843 = v842 - v835 - v829 - v822;
            v844 = v837 ^ (v747 + v843 - v775);
            v845 = (v841 >> 6) + v841 - 952674900;
            v846 = v845 >> 12;
            v847 = v845 - (v845 >> 12);
            v848 = v847 >> 3;
            v849 = v831 ^ (v747 + v843 - (v847 >> 3) - v846 - v776);
            v850 = v847 - (v847 >> 3) - 715082311;
            v851 = v842 + (v850 >> 14);
            v852 = (v850 >> 14) + v850;
            v853 = v852 >> 6;
            v854 = v747 + v851 - v835 - v829 - v822 - (v852 >> 6) - (v847 >> 3) - v846 - v777;
            v855 = v852 - (v852 >> 6) - 351630377;
            v856 = v851 + (v855 >> 15);
            v857 = (v855 >> 15) + v855;
            v858 = v857 >> 6;
            v859 = v856 - v835 - v829 - v822 - (v857 >> 6) - v853 - v848;
            v860 = v844 ^ (v747 + v859 - v846 - v2303);
            v861 = v857 - (v857 >> 6) - 1673524649;
            v862 = v861 >> 8;
            v863 = v861 - (v861 >> 8);
            v864 = v849 ^ (v747 + v859 - (v863 >> 8) - v846 - v862 - v778);
            v1797 = v836 ^ v746 ^ v854 ^ (v747
                                        + v856
                                        + ((v863 - (v863 >> 8) + 565230583 - ((v863 - (v863 >> 8) + 565230583) >> 8)) >> 1)
                                        - v835
                                        - v829
                                        - v822
                                        - v858
                                        - v853
                                        - v848
                                        - (v863 >> 8)
                                        - v846
                                        - v862
                                        - ((v863 - (v863 >> 8) + 565230583) >> 8)
                                        - v779);
            v865 = -v1797 & 7;
            if ((v1797 & 7) != 0)
              v866 = 255;
            else
              v866 = 0;
            v1781 = -v1797 & 7;
            v867 = v866 << v865;
            v868 = (v866 << v865);
            v869 = 16843009 * v868;
            v870 = 2030043136 * v868;
            v1829 = (269488144 * v2242) ^ v2137;
            v871 = (char *)*(&off_1015B46D0 + (v2275 ^ 0x7D0E71E7)) - 4;
            v1790 = __ROR4__(*(_DWORD *)&v871[4 * v1778], 6) ^ 0xA1BA14;
            v1774 = 16843009
                  * (v860 ^ 0x74 ^ ((unsigned __int16)(v860 ^ 0x9E74) >> 8) ^ ((v860 ^ 0xCBD39E74) >> 16) ^ HIBYTE(v860) ^ 0xFB);
            v2030 = 16843009
                  * (v864 ^ 0xE8 ^ ((unsigned __int16)(v864 ^ 0x5DE8) >> 8) ^ ((v864 ^ 0xC0855DE8) >> 16) ^ HIBYTE(v864) ^ 0xB5);
            v872 = v1774 ^ 0x45454545 ^ v2030;
            v873 = (char *)*(&off_1015B46D0 + v2275 - 2098100108) - 12;
            HIDWORD(v874) = *(_DWORD *)&v873[4 * (v2095 % 0x101)];
            LODWORD(v874) = HIDWORD(v874);
            v875 = v860 & 0xFE ^ 0x80;
            v1771 = 269488144 * v875;
            v1821 = 1811235775 * (v2242 - v875);
            v876 = v1876
                 + ((v874 >> 19) ^ 0x2C0483F0 ^ ((v874 >> 19) >> 1) & 0x329D9AE2)
                 + (*((_DWORD *)*(&off_1015B46D0 + v2275 - 2098099911) + v872 % 0x101 - 3) ^ 0xD8B9F760);
            v1769 = 1169789635 * (v2095 - v872);
            v877 = (v1783 & 0xFE | v2131) ^ 0xFEA7F300;
            v2284 = (134608595 * v2106) ^ v1969;
            v878 = *(_DWORD *)&v873[4 * (v877 % 0x101)];
            v879 = v2106 ^ v1941;
            v880 = v2106 % 0x101;
            v1777 = 16843009 * v875;
            v1877 = (16843009 * v875) >> 1;
            v881 = (v860 & 0xFFFFFF01 | (2 * (v875 >> 1))) ^ 0x3474A500;
            v882 = v860 ^ 0x3474A580;
            v1970 = 110385207 * (v881 - (v860 ^ 0x3474A580));
            v1765 = 52387487 * (v872 - v2095);
            v2127 = 802609131 * ((v2237 ^ 0xCAD356E4) - v860);
            v883 = ((*(_QWORD *)&v1784[8
                                     * (((*(_QWORD *)&v1784[8
                                                          * (((*(_QWORD *)&v1784[8
                                                                               * (((*(_QWORD *)&v1784[8 * (0x9830A437 % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                                                                 + 3836772336u)
                                                                                % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                                            + 532348673)
                                                           % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                       + 297095824)
                                      % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                  + 1565776207)
                 % v2233;
            v884 = (v2275 - 751052108) | 0x84010002;
            v2107 = v864;
            v1942 = v870 & v864 ^ v869;
            if ((v1797 & 7) != 0)
              v885 = ~(_BYTE)v867;
            else
              v885 = 0;
            v2002 = v860;
            v2132 = v860 & v885;
            v1761 = v1837 & 0x2000 | (v1778 << 8);
            v886 = v1837 & 0xFFFFDFFF;
            v2096 = v2298 ^ v2100;
            v2101 = *(_DWORD *)&v871[4 * v880];
            v2192 = v1797 & 7;
            HIDWORD(v888) = *(_DWORD *)&v871[4 * (v1797 & 7)];
            LODWORD(v888) = HIDWORD(v888);
            v887 = v888 >> 6;
            v1838 = v2116 - v1783;
            v889 = v876 + 1;
            v2117 = v1833 - v2257;
            v2243 = (v1778 | v2213 & 0xFFFFFFF8) ^ 0xFEA7F360;
            v2142 = v2257 ^ v2141 ^ v2243;
            v2138 = v879 ^ v877;
            HIDWORD(v888) = v878;
            LODWORD(v888) = v878;
            v890 = v888 >> 19;
            v891 = v2208 ^ 0x294368DB;
            v892 = v2228 ^ 0x8E8509D5;
            v893 = v2223 ^ 0xC8AC8AD8;
            if (v883 <= 1)
              v894 = 1;
            else
              v894 = v883;
            v895 = -2074219889 * v881;
            v896 = (-2074219889 * v881) ^ v889;
            v2090 = v882;
            v1794 = v882 >> 6;
            v1805 = v881;
            v1801 = v881 >> 6;
            v1786 = v890;
            v2276 = v890 >> 1;
            v897 = -1;
            v898 = 0x39BF77CC0EAC1A63;
            v899 = 0x737EEF981D5834C6;
            v900 = 0xE20F7F25B710E4C6;
            do
            {
              v901 = (*(_QWORD *)&v1784[8 * v818] ^ 0xA7A7A7A7A7A7A7A7) * (v884 ^ 0x2BE525815F52A1BCLL);
              v902 = v901 ^ v900;
              v903 = (v901 ^ v900) + v818;
              v904 = HIDWORD(v903);
              v905 = v903 + HIDWORD(v903);
              v906 = v905 >> 16;
              v907 = (v905 + (v905 >> 16)) >> 8;
              v908 = v898 + v902 + v904 + v906 - v907;
              v909 = ((v818 + v902 + v904 + v906 - v907) >> 1) & 0x554DFDBB ^ (v818
                                                                                           + v902
                                                                                           + v904
                                                                                           + v906
                                                                                           - v907) ^ v892;
              v910 = v899 + v902 + v904 + v906 - v907;
              v911 = (v910 >> 1) & 0x554DFDBB ^ v910 ^ v891;
              v912 = v910 ^ v901;
              v913 = v912
                   + ((v912 + v818) >> 32)
                   + ((v912 + v818 + ((v912 + v818) >> 32)) >> 16)
                   - ((v912 + v818 + ((v912 + v818) >> 32) + ((v912 + v818 + ((v912 + v818) >> 32)) >> 16)) >> 8);
              v914 = v909 ^ ((v818 + v913) >> 1) & 0x554DFDBB ^ (v818 + v913);
              LODWORD(v902) = ((v898 + v913) >> 1) & 0x554DFDBB ^ (v898 + v913);
              v915 = v899 + v913;
              v916 = (v908 >> 1) & 0x554DFDBB ^ v908 ^ v893 ^ v902;
              v917 = v915 ^ v901;
              LODWORD(v915) = v911 ^ (v915 >> 1) & 0x554DFDBB ^ v915;
              v918 = (v917 + v818) >> 32;
              v919 = v917 + v818 + v918;
              v920 = v919 >> 16;
              v921 = (v919 + (v919 >> 16)) >> 8;
              LODWORD(v919) = v818 + v917 + v918 + (v919 >> 16) - v921;
              v892 = v914 ^ (v919 >> 1) & 0x554DFDBB ^ v919;
              v922 = ((v898 + v917 + v918 + v920 - v921) >> 1) & 0x554DFDBB ^ (v898
                                                                                           + v917
                                                                                           + v918
                                                                                           + v920
                                                                                           - v921);
              v923 = v899 + v917 + v918 + v920;
              v900 = v923 - v921;
              v893 = v916 ^ v922;
              ++v818;
              v891 = v915 ^ ((v923 - v921) >> 1) & 0x554DFDBB ^ (v923 - v921);
              ++v899;
              ++v898;
              ++v897;
            }
            while (v894 != v818);
            v924 = (v884 + 1573318201) | 0x40089830;
            v2039 = v2249 ^ 0xEDEDEDED;
            v925 = v1778 ^ v886 ^ v1761 ^ v2192;
            v1830 = (v1829 ^ v1783 ^ v1771 ^ v1777) + v1821;
            v926 = v889 ^ ~v876 ^ (v895 - v896);
            v1822 = v1769 + v2188;
            v927 = 134608595 * v877;
            v1772 = v2122 + 1 + v1790 + v1970 + v1765 + (v887 ^ 0x8D449F9F ^ v924);
            v2031 = v2030 ^ 0x75757575;
            v928 = (((2 * ((v869 & 0xDAC0A821) + 304466577)) & 0xD9846046)
                  + (((v869 & 0xDAC0A821) + 304466577) ^ 0xEDDA356F)) | v869;
            v1971 = ~v1942;
            v1839 = v1777 + v1838;
            v1834 = v2257 ^ v2264 ^ v2243;
            v929 = ((v917 + v897 + ((v917 + v897) >> 32)) >> 16)
                 + ((v917 + v897) >> 32)
                 - ((v917 + v897 + ((v917 + v897) >> 32) + ((v917 + v897 + ((v917 + v897) >> 32)) >> 16)) >> 8)
                 + v917
                 + v899
                 - 1;
            v930 = v924 ^ 0x278738C7u;
            v1826 = v925 ^ (v2192 << 8);
            HIDWORD(v931) = v2101;
            LODWORD(v931) = v2101;
            v1766 = v931 >> 6;
            do
            {
              v932 = (*(_QWORD *)&v1784[8 * v894] ^ 0xA7A7A7A7A7A7A7A7) * (v930 + 0x2BE52581357C1304);
              v933 = (v932 ^ v929) + v894 + (((v932 ^ v929) + v894) >> 32);
              v934 = v933 + (v933 >> 16) - ((v933 + (v933 >> 16)) >> 8);
              v935 = v934 + 246159971;
              v936 = (v934 >> 1) & 0x554DFDBB ^ v934 ^ v892;
              v937 = ((v934 + 246159971) >> 1) & 0x554DFDBB;
              v934 += 0x737EEF981D5834C6;
              v938 = v937 ^ v935 ^ v893;
              v939 = (v934 >> 1) & 0x554DFDBB ^ v934 ^ v891;
              v940 = (v934 ^ v932) + v894 + (((v934 ^ v932) + v894) >> 32);
              v941 = v940 + (v940 >> 16) - ((v940 + (v940 >> 16)) >> 8);
              v942 = v941 + 246159971;
              v943 = v936 ^ (v941 >> 1) & 0x554DFDBB ^ v941;
              v941 += 0x737EEF981D5834C6;
              v944 = v939 ^ (v941 >> 1) & 0x554DFDBB ^ v941;
              v945 = (v941 ^ v932) + v894 + (((v941 ^ v932) + v894) >> 32);
              v946 = v945 + (v945 >> 16) - ((v945 + (v945 >> 16)) >> 8);
              v892 = v943 ^ (v946 >> 1) & 0x554DFDBB ^ v946;
              LODWORD(v894) = v894 + 1;
              v929 = v946 + 0x737EEF981D5834C6;
              v893 = v938 ^ (v942 >> 1) & 0x554DFDBB ^ v942 ^ ((v946 + 246159971) >> 1) & 0x554DFDBB ^ (v946 + 246159971);
              v891 = v944 ^ ((v946 + 492319942) >> 1) & 0x554DFDBB ^ (v946 + 492319942);
            }
            while (v894 < v2233);
            v947 = 0;
            v948 = v930 ^ 0xA87D6E84;
            v949 = v2269 - v869;
            v2189 = v2132 ^ v869;
            v1843 = 99948425 * ((v1797 & 7) - v1778) + v1842;
            v2133 = (v926 + v895) ^ (-2074219889 * v882);
            v2123 = v2243 + v2117;
            v2102 = v2127 + v1817;
            v950 = v946
                 - 0x106EAC299B004876
                 + ((v946 - 0x106EAC299B004876) >> 24)
                 + ((v946 - 0x106EAC299B004876 + ((v946 - 0x106EAC299B004876) >> 24)) >> 12);
            v951 = v950 + (v950 >> 7);
            v952 = ((v951 + 0x92C0881E4A486A5 - ((v951 + 0x92C0881E4A486A5) >> 27)) >> (v948 ^ 0x3Fu))
                 + v951
                 + 0x92C0881E4A486A5
                 - ((v951 + 0x92C0881E4A486A5) >> 27);
            v953 = v952 - (v952 >> 2);
            v954 = v953
                 + 0x10F4E8E510077900
                 - ((v953 + 0x10F4E8E510077900) >> 30)
                 - ((v953 + 0x10F4E8E510077900 - ((v953 + 0x10F4E8E510077900) >> 30)) >> 14);
            v955 = v954 + (v954 >> 5);
            v956 = (v955 ^ 0x28A3172F9CFB7582)
                 - ((v955 ^ 0x28A3172F9CFB7582) >> 27)
                 - (((v955 ^ 0x28A3172F9CFB7582) - ((v955 ^ 0x28A3172F9CFB7582) >> 27)) >> 15);
            v957 = v956 + (v956 >> 2);
            LODWORD(v951) = v957 ^ v951;
            v958 = v957
                 - 0x488AE95DB30FE039
                 - ((v957 - 0x488AE95DB30FE039) >> 29)
                 - ((v957 - 0x488AE95DB30FE039 - ((v957 - 0x488AE95DB30FE039) >> 29)) >> 9);
            v959 = v958 + (v958 >> 3);
            LODWORD(v953) = v959 ^ v953;
            v960 = v959
                 + 0x639ECA0BD2CB9EF4
                 + ((v959 + 0x639ECA0BD2CB9EF4) >> 28)
                 + ((v959 + 0x639ECA0BD2CB9EF4 + ((v959 + 0x639ECA0BD2CB9EF4) >> 28)) >> 15);
            v961 = v960 + (v960 >> 1);
            v962 = (v961 >> 1) & 0x554DFDBB ^ v961;
            v963 = v961
                 - 0x29E6B8B45C839658
                 - ((v961 - 0x29E6B8B45C839658) >> 26)
                 - ((v961 - 0x29E6B8B45C839658 - ((v961 - 0x29E6B8B45C839658) >> 26)) >> 10);
            v964 = v963 + (v963 >> 7);
            v965 = v951 ^ v964 ^ v892 ^ ((v951 ^ v964) >> 1) & 0x554DFDBB;
            v966 = (v964 ^ 0xE7D1C221D1DDD068)
                 + ((v964 ^ 0xE7D1C221D1DDD068) >> 29)
                 - (((v964 ^ 0xE7D1C221D1DDD068) + ((v964 ^ 0xE7D1C221D1DDD068) >> 29)) >> 11);
            v967 = v966 + (v966 >> 6);
            v968 = v965;
            v969 = v967
                 - 0x44DDEF16F6D431ELL
                 + ((v967 - 0x44DDEF16F6D431ELL) >> 28)
                 + ((v967 - 0x44DDEF16F6D431ELL + ((v967 - 0x44DDEF16F6D431ELL) >> 28)) >> 11);
            v970 = v953 ^ (v953 >> 1) & 0x554DFDBB ^ v893 ^ v967 ^ (v967 >> 1) & 0x554DFDBB;
            v971 = v955 ^ v891 ^ (v955 >> 1) & 0x554DFDBB ^ v962 ^ ((v969
                                                                                 - (v969 >> 5)) >> 1) & 0x554DFDBB ^ (v969 - (v969 >> 5));
            v972 = v2015;
            if (((v2015[(v2015[(v2015[(v2015[15] + 12) & 0xF] + 8) & 0xF] + 12) & 0xF] + 2) & 0xE) != 0)
              v973 = (v2015[(v2015[(v2015[(v2015[15] + 12) & 0xF] + 8) & 0xF] + 12) & 0xF] + 2) & 0xF;
            else
              v973 = 1;
            v2304 = v973;
            v974 = -1;
            v975 = (v948 - 40078812) & 0x95E75BAF;
            v976 = ((v948 + 36) & 0xAF) - 3;
            v977 = -1103724202;
            do
            {
              v978 = 1540573109 * v2015[v947];
              v979 = v978 ^ v977;
              v980 = (unint64_t)(v979 + v947) >> 16;
              v981 = v979 + ((v979 + (_DWORD)v947 + ((v979 + v947) >> 16)) >> v976);
              v982 = v947 + v980 + v981;
              v983 = v947 - 1391465294 + v980 + v981;
              LODWORD(v980) = v947 + 1512036708 + v980 + v981;
              v984 = (unint64_t)((v980 ^ v978)
                                      + (_DWORD)v947
                                      + (((v980 ^ v978) + v947) >> 16)) >> 8;
              v985 = (v980 ^ v978) + v947 + (((v980 ^ v978) + v947) >> 16) + v984;
              v986 = v947
                   - 1391465294
                   + (v980 ^ v978)
                   + (((v980 ^ v978) + v947) >> 16)
                   + v984;
              LODWORD(v984) = v947
                            + 1512036708
                            + (v980 ^ v978)
                            + (((v980 ^ v978) + v947) >> 16)
                            + v984;
              v987 = v984 ^ v978;
              v988 = (unint64_t)(v987 + (_DWORD)v947 + ((v987 + v947) >> 16)) >> 8;
              v989 = v947 - 1391465294 + v987 + ((v987 + v947) >> 16) + v988;
              v970 ^= v983 ^ (v983 >> 1) & 0x554DFDBB ^ v986 ^ (v986 >> 1) & 0x554DFDBB ^ v989 ^ (v989 >> 1) & 0x554DFDBB;
              v990 = v987 + v947 + ((v987 + v947) >> 16) + v988;
              v977 = v947 + 1512036708 + v987 + ((v987 + v947) >> 16) + v988;
              v971 ^= v980 ^ (v980 >> 1) & 0x554DFDBB ^ v984 ^ (v984 >> 1) & 0x554DFDBB ^ v977 ^ (v977 >> 1) & 0x554DFDBB;
              v968 ^= v982 ^ (v982 >> 1) & 0x554DFDBB ^ v985 ^ (v985 >> 1) & 0x554DFDBB ^ v990 ^ (v990 >> 1) & 0x554DFDBB;
              ++v947;
              ++v974;
            }
            while (v2304 != v947);
            v991 = 0;
            v992 = v971;
            v2270 = v970;
            v1818 = v928 + v949;
            v2118 = v1781 + v1808 - v2298;
            v2128 = v2284 ^ v927;
            v1762 = (v975 - 1590083369) & v2276;
            v993 = v2304 - 1;
            v994 = v2304 - 767900776;
            v995 = v2304 - 785734168;
            v996 = v2304 - 813648396;
            v997 = v2304 + 1593143457;
            v998 = v987
                 + ((v987 + v974) >> 16)
                 + 1512036708
                 + ((v987 + v974 + ((v987 + v974) >> 16)) >> 8)
                 + v947
                 - 1;
            v999 = -767900776;
            v1809 = (v975 + 1862259078) | 0xA08902C;
            v1000 = 2903502002;
            v1001 = 1512036708;
            v2265 = 1534538197;
            v2258 = 2099768780;
            v2250 = 426244131;
            v1002 = 74613754;
            v1003 = -640468557;
            v1004 = -1593143457;
            v1005 = 813648396;
            v1006 = 785734168;
            v1007 = v2304;
            v1008 = v968;
            do
            {
              v2285 = v1008;
              v1009 = 1540573109 * v972[v2304];
              v1010 = v2304 + v991 + (v1009 ^ v998) + (((v1009 ^ v998) + v1007) >> 16);
              v1011 = ((v1010 >> 8) ^ v1010) + 2 * ((v1010 >> 8) & v1010);
              v1012 = v1011 + 1512036708;
              v1013 = (unint64_t)((v1012 ^ v1009) + v1007 + (((v1012 ^ v1009) + v1007) >> 16)) >> 8;
              v1014 = v2304 + v991 + (v1012 ^ v1009) + (((v1012 ^ v1009) + v1007) >> 16) + v1013;
              v1015 = v2304 + v1000 + (v1012 ^ v1009) + (((v1012 ^ v1009) + v1007) >> 16) + v1013;
              LODWORD(v1013) = v2304 + v1001 + (v1012 ^ v1009) + (((v1012 ^ v1009) + v1007) >> 16) + v1013;
              v1016 = (v1015 >> 1) & 0x554DFDBB;
              v1017 = v1013 ^ v1009;
              v1018 = (v1011 - 1391465294) ^ v2270 ^ ((v1011 - 1391465294) >> 1) & 0x554DFDBB ^ v1015;
              v1019 = (v1017 + v1007);
              v1020 = v1018 ^ v1016;
              v1021 = v1019 >> 16;
              v1022 = (unint64_t)(v1019 + WORD1(v1019)) >> 8;
              v2270 = v1020 ^ (v2304 + v1000 + v1017 + v1021 + v1022) ^ ((v2304
                                                                                      + v1000
                                                                                      + v1017
                                                                                      + v1021
                                                                                      + v1022) >> 1) & 0x554DFDBB;
              v998 = v2304 + v1001 + v1017 + v1021 + v1022;
              v1008 = v1011 ^ v2285 ^ (v1809 + 1256276478) & (v1011 >> 1) ^ v1014 ^ (v1014 >> 1) & 0x554DFDBB ^ (v2304 + v991 + v1017 + v1021 + v1022) ^ ((v2304 + v991 + v1017 + v1021 + v1022) >> 1) & 0x554DFDBB;
              v992 ^= v1012 ^ (v1012 >> 1) & 0x554DFDBB ^ v1013 ^ (v1013 >> 1) & 0x554DFDBB ^ v998 ^ (v998 >> 1) & 0x554DFDBB;
              ++v1007;
              ++v991;
              ++v999;
              ++v993;
              ++v994;
              ++v995;
              --v1006;
              ++v996;
              --v1005;
              ++v997;
              --v1004;
              --v1003;
              --v1002;
              --v2250;
              --v2258;
              --v2265;
              ++v1001;
              ++v1000;
              ++v972;
            }
            while (v2304 + v991 != 16);
            v2286 = v1008;
            v1023 = 0;
            v2097 = v2096 ^ v1781;
            v2091 = v2090 ^ v1814 ^ v1794 ^ v1805 ^ v1801;
            v1024 = (v1017 + v993);
            v1025 = v1024 >> 16;
            v1026 = WORD1(v1024);
            v1027 = v1024 + WORD1(v1024);
            v1028 = v1027 >> 8;
            v1029 = (v1809 - 1265549822) & 0xED5FDFE1;
            v1030 = v1017
                  - (((_DWORD)v2304 + v1017 + (_DWORD)v1025 + v999 + (v1027 >> 8)) >> (((v1809 + 2) & 0xE1) + 105));
            LODWORD(v1027) = v1027 >> 8;
            v1031 = (v1030 + v994 + (_DWORD)v1027 + v1026) >> 7;
            v1810 = v2304 + v1028 + v1025 + v999 + v1030 + v1031;
            LODWORD(v1025) = v1030 + v1031 + v995 + v1027 + v1026;
            v1032 = v1025 >> 12;
            v1033 = v1030 + v1031 + v1027 + v1026 + (v1025 >> 12);
            LODWORD(v1028) = (v1025 + (v1025 >> 12)) >> 2;
            v1034 = v2304 + v1033 - v1028 - v1006;
            v1035 = (v1033 + v996 - v1028) >> 12;
            v1036 = v1033 + v1035;
            v1037 = (v1033 + v996 + v1035 - v1028) >> 4;
            v1038 = v2304 + v1036 - v1037 - v1028 - v1005;
            v1039 = (v1036 + v997 - v1037 - v1028) >> 10;
            LODWORD(v1025) = v1036 + v997 + v1039;
            v1040 = (v1025 - v1037 - v1028) >> 6;
            LODWORD(v1027) = v1030 + v1039 + v1035 + v1032 + v1031 + v1040 + v1027 + v1026;
            v1041 = v1027 - v1037 - v1028;
            v1806 = v2304 + v1041 - v1004;
            LODWORD(v1025) = v1025 + v1040 - v1037 - v1028 - 952674900;
            v1042 = v1025 >> 12;
            LODWORD(v1025) = v1025 - (v1025 >> 12);
            v1043 = v1025 >> 3;
            v1759 = v1034;
            v1044 = v2304 + v1041 - (v1025 >> 3) - v1042 - v1003;
            LODWORD(v1025) = v1025 - (v1025 >> 3) - 715082311;
            LODWORD(v1027) = v1027 + (v1025 >> 14);
            LODWORD(v1025) = (v1025 >> 14) + v1025;
            v1045 = v1025 >> 6;
            v1046 = v2304 + v1027 - v1037 - v1028 - (v1025 >> 6) - v1043 - v1042 - v1002;
            LODWORD(v1025) = v1025 - (v1025 >> 6) - 351630377;
            LODWORD(v1027) = v1027 + (v1025 >> 15);
            LODWORD(v1025) = (v1025 >> 15) + v1025;
            v1047 = v1025 >> 6;
            v1048 = v1027 - v1037 - v1028 - (v1025 >> 6) - v1045 - v1043;
            v1802 = v2304 + v1048 - v1042 - v2250;
            v2244 = v1046;
            v2251 = v1038;
            v1049 = v1046 ^ v1038;
            LODWORD(v1025) = v1025 - (v1025 >> 6) - 1673524649;
            v1050 = v1025 >> 8;
            LODWORD(v1025) = v1025 - (v1025 >> 8);
            v1051 = v2304 + v1048 - (v1025 >> 8) - v1042 - v1050 - v2258;
            v2259 = (v1044 ^ v1034 ^ v1051) >> 1;
            v2305 = v2304
                  + v1027
                  + (((_DWORD)v1025
                    - (v1025 >> 8)
                    + 565230583
                    - ((v1025 - (v1025 >> 8) + 565230583) >> 8)) >> 1)
                  - v1037
                  - v1028
                  - v1047
                  - v1045
                  - v1043
                  - (v1025 >> 8)
                  - v1042
                  - v1050
                  - ((v1025 - (v1025 >> 8) + 565230583) >> 8)
                  - v2265;
            v1757 = (v1049 ^ v2305) >> 1;
            v1791 = v2208 ^ v2213 ^ 0xD021C33;
            v1052 = v2228 ^ 0xCD41C789;
            v1053 = __ROR4__(__ROR4__(v2223, 22) ^ 0x531EF69E, 10) ^ 0x216C022A;
            v1054 = ((*(_QWORD *)&v1784[8
                                      * (((*(_QWORD *)&v1784[8
                                                           * (((*(_QWORD *)&v1784[8
                                                                                * (((*(_QWORD *)&v1784[8 * (0x61402612 % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                                                                  + 28529979)
                                                                                 % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                                             + 1352885497)
                                                            % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                                        + 3806761840u)
                                       % v2233)] ^ 0xA7A7A7A7A7A7A7A7)
                   + 1696700549)
                  % v2233;
            v1055 = v2208 ^ 0xF1D6CA04;
            if (v1054 <= 1)
              v1056 = 1;
            else
              v1056 = v1054;
            v1057 = -1;
            v1058 = 0x39BF77CC0EAC1A63;
            v1059 = 0x737EEF981D5834C6;
            v1060 = 0xE20F7F25B710E4C6;
            do
            {
              v1061 = 0x2BE525818B19F5B7 * (*(_QWORD *)&v1784[8 * v1023] ^ 0xA7A7A7A7A7A7A7A7);
              v1062 = v1061 ^ v1060;
              v1063 = (v1061 ^ v1060) + v1023;
              v1064 = HIDWORD(v1063);
              v1065 = v1063 + HIDWORD(v1063);
              v1066 = v1065 >> 16;
              v1067 = v1065 + (v1065 >> 16);
              v1068 = v1067 >> 8;
              LODWORD(v1067) = ((v1067 - (v1067 >> 8)) << ((v1029 - 56) ^ 0x6B)) & 0xCED7E450 ^ (v1067 - (v1067 >> 8)) ^ v1052;
              v1069 = (4 * (v1058 + v1062 + v1064 + v1066 - v1068)) & 0xCED7E450 ^ (v1058 + v1062 + v1064 + v1066 - v1068);
              v1070 = v1059 + v1062 + v1064 + v1066 - v1068;
              LODWORD(v1064) = v1069 + v1053 - 2 * (v1069 & v1053);
              v1071 = ((v1070 ^ v1061) + v1023) >> 32;
              v1072 = (v1070 ^ v1061) + v1023 + v1071;
              v1073 = v1072 >> 16;
              v1074 = (v1070 ^ v1061) + (v1072 >> 16);
              v1075 = (v1072 + (v1072 >> 16)) >> 8;
              v1076 = v1074 - v1075;
              v1077 = v1023 + v1071;
              LODWORD(v1066) = v1058 + v1071 + v1076;
              LODWORD(v1067) = v1067 ^ (v1077
                                      + ((4 * (v1077 + v1076)) & 0xCED7E450 ^ -((4 * (v1077 + v1076)) & 0xCED7E450) ^ (v1077 - ((4 * (v1077 + v1076)) & 0xCED7E450 ^ (v1077 + v1076)) + v1076))
                                      + (v1070 ^ v1061)
                                      + v1073
                                      - v1075);
              v1078 = v1059 + v1071 + v1076;
              LODWORD(v1064) = (4 * v1066) & 0xCED7E450 ^ v1066 ^ v1064;
              LODWORD(v1075) = (4 * v1078) & 0xCED7E450 ^ v1078;
              v1079 = v1078 ^ v1061;
              v1080 = (v1079 + v1023) >> 32;
              v1081 = v1079 + v1023 + v1080;
              v1082 = v1081 >> 16;
              v1083 = (v1081 + (v1081 >> 16)) >> 8;
              LODWORD(v1070) = (4 * v1070) & 0xCED7E450 ^ v1070 ^ v1055 ^ v1075;
              v1052 = v1067 ^ (4 * (v1023 + v1079 + v1080 + v1082 - v1083)) & 0xCED7E450 ^ (v1023
                                                                                          + v1079
                                                                                          + v1080
                                                                                          + v1082
                                                                                          - v1083);
              ++v1023;
              v1053 = v1064 ^ (4 * (v1058 + v1079 + v1080 + v1082 - v1083)) & 0xCED7E450 ^ (v1058
                                                                                          + v1079
                                                                                          + v1080
                                                                                          + v1082
                                                                                          - v1083);
              v1060 = v1059 + v1079 + v1080 + v1082 - v1083;
              v1055 = v1070 ^ (4 * v1060) & 0xCED7E450 ^ v1060;
              ++v1059;
              ++v1058;
              ++v1057;
            }
            while (v1056 != v1023);
            v1084 = v2112;
            if ((v2014 & 2) != 0)
              v1084 = v2024;
            v1815 = v1084;
            v2025 = v1774 ^ 0x30303030;
            v2209 = v1989 ^ v2218 ^ (v2102 >> 1) & 0x554DFDBB ^ ((v2218 ^ v2223 ^ v2102) >> 1) & 0x554DFDBB ^ v2270 ^ v1759 ^ v1044 ^ v1051 ^ v2259 & 0x554DFDBB ^ 0xBEF677CB;
            v1085 = ((v1079 + v1057 + ((v1079 + v1057) >> 32)) >> 16)
                  + ((v1079 + v1057) >> 32)
                  - ((v1079 + v1057 + ((v1079 + v1057) >> 32) + ((v1079 + v1057 + ((v1079 + v1057) >> 32)) >> 16)) >> 8)
                  + v1079
                  + v1059
                  - 1;
            v1086 = (v1029 + 1046592467) & 0xDDDCFFBB;
            v1087 = 2099768780;
            v1088 = 74613754;
            do
            {
              v1089 = (*(_QWORD *)&v1784[8 * v1056] ^ 0xA7A7A7A7A7A7A7A7)
                    * (v1086 ^ 0x2BE5258143856087);
              v1090 = (v1089 ^ v1085) + v1056 + (((v1089 ^ v1085) + v1056) >> 32);
              v1091 = v1090 + (v1090 >> 16) - ((v1090 + (v1090 >> 16)) >> 8);
              v1092 = (4 * v1091) & 0xCED7E450 ^ v1091 ^ v1052;
              v1093 = (4 * (v1091 + 246159971)) & 0xCED7E450 ^ (v1091 + 246159971) ^ v1053;
              v1091 += 0x737EEF981D5834C6;
              v1094 = (4 * v1091) & 0xCED7E450 ^ v1091 ^ v1055;
              v1095 = (v1091 ^ v1089) + v1056 + (((v1091 ^ v1089) + v1056) >> 32);
              v1096 = v1095 + (v1095 >> 16) - ((v1095 + (v1095 >> 16)) >> 8);
              v1097 = v1092 ^ (4 * v1096) & 0xCED7E450 ^ v1096;
              v1098 = (4 * (v1096 + 246159971)) & 0xCED7E450 ^ (v1096 + 246159971);
              v1096 += 0x737EEF981D5834C6;
              v1099 = v1093 ^ v1098;
              v1100 = v1094 ^ (4 * v1096) & 0xCED7E450 ^ v1096;
              v1101 = (v1096 ^ v1089) + v1056 + (((v1096 ^ v1089) + v1056) >> 32);
              v1102 = v1101 + (v1101 >> 16) - ((v1101 + (v1101 >> 16)) >> 8);
              v1052 = v1097 ^ (4 * v1102) & 0xCED7E450 ^ v1102;
              LODWORD(v1056) = v1056 + 1;
              v1085 = v1102 + 0x737EEF981D5834C6;
              v1053 = v1099 ^ (4 * (v1102 + 246159971)) & 0xCED7E450 ^ (v1102 + 246159971);
              v1055 = v1100 ^ (4 * (v1102 + 492319942)) & 0xCED7E450 ^ (v1102 + 492319942);
            }
            while (v2233 > v1056);
            v1103 = 0;
            v1104 = v1086 - 169022763;
            v1990 = v2298 ^ v1978 ^ (v2298 << 8) ^ v1781 ^ (v1781 << 8);
            v2113 = (v1791 >> 1) & 0x554DFDBB ^ v1766 ^ v1786 ^ v1797 ^ v1772 ^ v1762 ^ v992 ^ v2251 ^ v2244 ^ v2305 ^ (v1029 - 1460657126) & v1757 ^ 0x588018CB;
            v1105 = ((v1102 - 0x106EAC299B004876) >> (((v1029 - 45) & 0xBB) - 24)) + v1102 - 0x106EAC299B004876;
            v1106 = v1105 + (v1105 >> 12) + ((v1105 + (v1105 >> 12)) >> 7);
            v1107 = v1106
                  + 0x92C0881E4A486A5
                  - ((v1106 + 0x92C0881E4A486A5) >> 27)
                  + ((v1106 + 0x92C0881E4A486A5 - ((v1106 + 0x92C0881E4A486A5) >> 27)) >> 8);
            v1108 = v1107 - (v1107 >> 2);
            v1109 = v1108
                  + 0x10F4E8E510077900
                  - ((v1108 + 0x10F4E8E510077900) >> 30)
                  - ((v1108 + 0x10F4E8E510077900 - ((v1108 + 0x10F4E8E510077900) >> 30)) >> 14);
            v1110 = v1109 + (v1109 >> 5);
            v1111 = (v1110 ^ 0x28A3172F9CFB7582)
                  - ((v1110 ^ 0x28A3172F9CFB7582) >> 27)
                  - (((v1110 ^ 0x28A3172F9CFB7582) - ((v1110 ^ 0x28A3172F9CFB7582) >> 27)) >> 15);
            v1112 = v1111 + (v1111 >> 2);
            v1113 = (4 * v1112) & 0xCED7E450 ^ v1112;
            v1114 = v1112
                  - 0x488AE95DB30FE039
                  - ((v1112 - 0x488AE95DB30FE039) >> 29)
                  - ((v1112 - 0x488AE95DB30FE039 - ((v1112 - 0x488AE95DB30FE039) >> 29)) >> 9);
            v1115 = v1114 + (v1114 >> 3);
            v1116 = (4 * v1115) & 0xCED7E450 ^ v1115;
            v1117 = v1115
                  + 0x639ECA0BD2CB9EF4
                  + ((v1115 + 0x639ECA0BD2CB9EF4) >> 28)
                  + ((v1115 + 0x639ECA0BD2CB9EF4 + ((v1115 + 0x639ECA0BD2CB9EF4) >> 28)) >> 15);
            v1118 = v1117 + (v1117 >> 1);
            v1119 = (4 * v1118) & 0xCED7E450 ^ v1118;
            v1120 = v1118
                  - 0x29E6B8B45C839658
                  - ((v1118 - 0x29E6B8B45C839658) >> 26)
                  - ((v1118 - 0x29E6B8B45C839658 - ((v1118 - 0x29E6B8B45C839658) >> 26)) >> 10);
            v1121 = v1120 + (v1120 >> 7);
            v1122 = v1106 ^ v1052 ^ (4 * v1106) & 0xCED7E450 ^ v1113 ^ (4 * v1121) & 0xCED7E450 ^ v1121;
            v1123 = (v1121 ^ 0xE7D1C221D1DDD068)
                  + ((v1121 ^ 0xE7D1C221D1DDD068) >> 29)
                  - (((v1121 ^ 0xE7D1C221D1DDD068) + ((v1121 ^ 0xE7D1C221D1DDD068) >> 29)) >> 11);
            v1124 = v1123 + (v1123 >> 6);
            v1125 = v1108 ^ v1053 ^ (4 * v1108) & 0xCED7E450 ^ v1116 ^ (4 * v1124) & 0xCED7E450 ^ v1124;
            v1126 = v1124
                  - 0x44DDEF16F6D431ELL
                  + ((v1124 - 0x44DDEF16F6D431ELL) >> 28)
                  + ((v1124 - 0x44DDEF16F6D431ELL + ((v1124 - 0x44DDEF16F6D431ELL) >> 28)) >> 11);
            v1127 = v1110 ^ v1055 ^ (4 * v1110) & 0xCED7E450 ^ v1119 ^ (4 * (v1126 - (v1126 >> 5))) & 0xCED7E450 ^ (v1126 - (v1126 >> 5));
            if (((v2015[(v2015[(v2015[(*v2015 + 13) & 0xF] + 14) & 0xF] + 2) & 0xF] + 13) & 0xE) != 0)
              v1128 = (v2015[(v2015[(v2015[(*v2015 + 13) & 0xF] + 14) & 0xF] + 2) & 0xF] + 13) & 0xF;
            else
              v1128 = 1;
            v2306 = v1128;
            v1129 = -1;
            v1130 = v1104 - 926610419;
            v1131 = -1103724202;
            v1132 = 426244131;
            v1133 = -1593143457;
            do
            {
              v1134 = 1540573109 * v2015[v1103];
              v1135 = (unint64_t)((v1134 ^ v1131) + v1103) >> 16;
              v1136 = (v1134 ^ v1131)
                    + (((v1134 ^ v1131) + (_DWORD)v1103 + (((v1134 ^ v1131) + v1103) >> 16)) >> (v1130 ^ 0x1A));
              v1137 = v1103 + (((v1134 ^ v1131) + v1103) >> 16) + v1136;
              v1138 = v1103 - 1391465294 + v1135 + v1136;
              LODWORD(v1135) = v1103 + 1512036708 + v1135 + v1136;
              v1139 = (v1135 ^ v1134 ^ v1103) + 2 * ((v1135 ^ v1134) & v1103);
              v1140 = v1139 + HIWORD(v1139) + ((v1139 + HIWORD(v1139)) >> 8);
              v1141 = (v1140 + 1512036708) ^ v1134;
              v1142 = (v1141 + v1103);
              v1143 = v1137 ^ v1122 ^ (4 * v1137) & 0xCED7E450;
              v1144 = (unint64_t)(v1142 + WORD1(v1142)) >> 8;
              v1122 = v1143 ^ v1140 ^ (4 * v1140) & 0xCED7E450 ^ (v1103 + v1141 + WORD1(v1142) + v1144) ^ (4 * (v1103 + v1141 + WORD1(v1142) + v1144)) & 0xCED7E450;
              v1142 >>= 16;
              v1131 = v1103 + 1512036708 + v1141 + v1142 + v1144;
              v1125 ^= v1138 ^ (4 * v1138) & 0xCED7E450 ^ (v1140 - 1391465294) ^ (4 * (v1140 - 1391465294)) & 0xCED7E450 ^ (v1103 - 1391465294 + v1141 + v1142 + v1144) ^ (4 * (v1103 - 1391465294 + v1141 + v1142 + v1144)) & 0xCED7E450;
              v1127 ^= v1135 ^ (4 * v1135) & 0xCED7E450 ^ (v1140 + 1512036708) ^ (4 * (v1140 + 1512036708)) & 0xCED7E450 ^ v1131 ^ (4 * v1131) & 0xCED7E450;
              ++v1103;
              ++v1129;
            }
            while (v1128 != v1103);
            v1145 = 0;
            v1146 = v1127;
            v1147 = v1128 - 767900776;
            v1148 = v1128 - 1;
            v1149 = v1128 - 785734168;
            v1150 = v1128 - 813648396;
            v1151 = v1128 + 1593143457;
            v1152 = ((v1141 + v1129) >> 16)
                  + 1512036708
                  + v1103
                  + v1141
                  + ((v1141 + v1129 + ((v1141 + v1129) >> 16)) >> 8)
                  - 1;
            v1153 = v2015;
            v1154 = v1128;
            v1155 = 767900776;
            v1156 = 2903502002;
            v1157 = 1534538197;
            v1158 = 1512036708;
            v1159 = -640468557;
            v1160 = 813648396;
            v2271 = 785734168;
            do
            {
              v2277 = v1146;
              v2252 = v1148;
              v2260 = v1150;
              v2266 = v1149;
              v1161 = 1540573109 * v1153[v2306];
              v1162 = (unint64_t)((v1161 ^ v1152) + v1154 + (((v1161 ^ v1152) + v1154) >> 16)) >> 8;
              v1163 = v2306 + v1145 + (v1161 ^ v1152) + (((v1161 ^ v1152) + v1154) >> 16) + v1162;
              v1164 = v1156;
              v1165 = v2306 + v1156;
              v1166 = v1165 + (v1161 ^ v1152) + (((v1161 ^ v1152) + v1154) >> 16) + v1162;
              v1167 = v2306 + v1158 + (v1161 ^ v1152) + (((v1161 ^ v1152) + v1154) >> 16) + v1162;
              v1168 = v1132;
              v1169 = v1087;
              v1170 = v1155;
              v1171 = (unint64_t)((v1167 ^ v1161) + v1154 + (((v1167 ^ v1161) + v1154) >> 16)) >> 8;
              v1172 = v2306 + v1145 + (v1167 ^ v1161) + (((v1167 ^ v1161) + v1154) >> 16) + v1171;
              v1173 = v1165 + (v1167 ^ v1161) + (((v1167 ^ v1161) + v1154) >> 16) + v1171;
              LODWORD(v1171) = v2306 + v1158 + (v1167 ^ v1161) + (((v1167 ^ v1161) + v1154) >> 16) + v1171;
              v1174 = v1166 ^ v1125 ^ (4 * v1166) & 0xCED7E450;
              v1175 = v1171 ^ v1161;
              v1176 = (v1171 ^ v1161) + v1154;
              v1177 = v1176 >> 16;
              v1178 = (unint64_t)(v1176 + WORD1(v1176)) >> 8;
              v1125 = v1174 ^ v1173 ^ (4 * v1173) & 0xCED7E450 ^ (v1165 + v1175 + v1177 + v1178) ^ (4
                                                                                                  * (v1165 + v1175 + v1177 + v1178)) & 0xCED7E450;
              v1179 = v1164;
              v1180 = v2306 + v1145 + v1175 + v1177 + v1178;
              v1152 = v2306 + v1158 + v1175 + v1177 + v1178;
              v1181 = v1163 ^ v1122 ^ (v1130 + 1200183358) & (4 * v1163) ^ v1172;
              LODWORD(v1178) = (4 * v1172) & 0xCED7E450;
              v1182 = v1170;
              v1183 = v1169;
              v1184 = v1168;
              v1122 = v1181 ^ v1178 ^ v1180 ^ (4 * v1180) & 0xCED7E450;
              v1146 = v1167 ^ v2277 ^ (4 * v1167) & 0xCED7E450 ^ v1171 ^ (4 * v1171) & 0xCED7E450 ^ v1152 ^ (4 * v1152) & 0xCED7E450;
              ++v1154;
              ++v1145;
              ++v1147;
              v1148 = v2252 + 1;
              v1155 = v1182 - 1;
              v1149 = v2266 + 1;
              --v2271;
              v1150 = v2260 + 1;
              --v1160;
              ++v1151;
              --v1133;
              --v1159;
              --v1088;
              v1132 = v1184 - 1;
              v1087 = v1183 - 1;
              --v1157;
              ++v1158;
              v1156 = v1179 + 1;
              ++v1153;
            }
            while (v2306 + v1145 != 16);
            v2278 = v1146;
            v1185 = 0;
            v2253 = v1130 + 1573975643;
            v1186 = (v1175 + v1148) >> 16;
            v1187 = (v1175 + v1148 + v1186) >> 8;
            v1188 = v1175 + v1147 + v1186 + v1187;
            v1189 = v1188 >> 10;
            v1190 = (v1188 - (v1188 >> 10)) >> 7;
            v1191 = v1175 + v1187 + v1186 + v1190;
            v1192 = v2306 + v1191 - v1189 - v1155;
            v1193 = (v1191 + v1149 - v1189) >> 12;
            v1194 = v1175 - ((v2306 + v1191 + v1193 - v1189 - v2271) >> (v1130 - 16));
            v1195 = v1194 + v1193 + v1190 + v1187 + v1186;
            v1196 = v2306 + v1195 - v1189 - v2271;
            v1197 = v1195 + v1150;
            v1198 = (v1195 + v1150 - v1189) >> 12;
            v1199 = v1195 + v1198;
            v1200 = (v1197 + v1198 - v1189) >> 4;
            v1201 = v2306 + v1199 - v1200 - v1189 - v1160;
            v1202 = v1199 + v1151;
            v1203 = (v1202 - v1200 - v1189) >> 10;
            v1204 = v1202 + v1203;
            v1205 = v1194 + v1203 + v1198 + v1193 + v1190;
            v1206 = (v1204 - v1200 - v1189) >> 6;
            v1207 = v1205 + v1206 + v1187 + v1186;
            v1208 = v1207 - v1200 - v1189;
            v1209 = v2306 + v1208 - v1133;
            v1210 = v1204 + v1206 - v1200 - v1189 - 952674900;
            v1211 = v1210 >> 12;
            v1212 = v1210 - (v1210 >> 12);
            v1213 = v1212 >> 3;
            v1214 = v2306 + v1208 - (v1212 >> 3) - v1211 - v1159;
            v1215 = v1212 - (v1212 >> 3) - 715082311;
            v1216 = v1207 + (v1215 >> 14);
            v1217 = (v1215 >> 14) + v1215;
            v1218 = v1217 >> 6;
            v1219 = v2306 + v1216 - v1200 - v1189 - (v1217 >> 6) - v1213 - v1211 - v1088;
            v1220 = v1217 - (v1217 >> 6) - 351630377;
            v1221 = v1216 + (v1220 >> 15);
            v1222 = (v1220 >> 15) + v1220;
            v1223 = v1222 >> 6;
            v1224 = v1221 - v1200 - v1189 - (v1222 >> 6) - v1218 - v1213;
            v1225 = v2306 + v1224 - v1211 - v1132;
            v1226 = v1222 - (v1222 >> 6) - 1673524649;
            v1227 = v1226 >> 8;
            v1228 = v1226 - (v1226 >> 8);
            v1229 = v1228 >> 8;
            v1230 = v2306 + v1224 - (v1228 >> 8) - v1211 - v1227 - v1087;
            v1231 = v1228 - (v1228 >> 8) + 565230583;
            v1232 = v1221 + ((v1231 - (v1231 >> 8)) >> 1) - v1200 - v1189;
            v1979 = v1219;
            v1233 = v1219 ^ v1201;
            v1787 = v1225;
            v1798 = 4 * (v1209 ^ v1192 ^ v1225);
            v1234 = v2306 + v1232 - v1223 - v1218 - v1213 - v1229 - v1211 - v1227 - (v1231 >> 8) - v1157;
            v1235 = (v2253 - 237257335) & 0x6DE5FB3D;
            do
            {
              v1236 = ((v1185 ^ 0x142EAAEA)
                     + *((_DWORD *)*(&off_1015B46D0 + (int)(v2253 ^ 0xE51F8B79))
                       + (v1185 ^ 0x44E13B65 ^ v1235)
                       - 1)
                     + 1) ^ 0xB36C733B;
              v1237 = 4
                    * (((v1185 ^ ((v1185 & v1783) >> 1)) << v2192) ^ v2039 ^ v2051 ^ (((v1185 ^ ((v1185 & v1783) >> 1)) & v2189) >> v2298));
              *(_DWORD *)(v2291 + v1237) = v2002 ^ v2107 ^ 0xD70206D1 ^ ((((v1236 ^ ((v1236 & v1777) >> 1)) & v1973) << v1778) | (((v1236 ^ ((v1236 & v1777) >> 1)) & v1764) >> v1781));
              v1238 = *(_DWORD *)&v2201[4 * (v1185++ ^ 0x31)] - 507852888;
              *(_DWORD *)(v1974 + v1237) = v2237 ^ v2218 ^ v1238 ^ (v1238 >> 4) ^ (v1238 >> 1) ^ 0x9D2F0760;
            }
            while (v1185 != 256);
            v1239 = v1201 ^ v1979 ^ v1234;
            v1767 = (v2253 - 237257335) & 0x6DE5FB3D;
            v1980 = v1235 - 1989786079;
            v2261 = v1994 ^ v2228 ^ v2237 ^ v2228 ^ v2286 ^ v1810 ^ v1806 ^ v1802 ^ ((v1810 ^ v2237 ^ v2228 ^ v1806 ^ v1802) >> 1) & 0x554DFDBB ^ (v1235 - 1989786079) ^ 0x70B1F69E;
            v1811 = v2011 ^ (4 * v2184) & 0xCED7E450 ^ v2237 ^ (4 * (v2228 ^ v2184 ^ v2237)) & 0xCED7E450 ^ v1192 ^ v1122 ^ v1209 ^ v1787 ^ v1798 & 0xCED7E450 ^ 0x6DEED44D;
            v1240 = v2007 ^ (4 * v2165) & 0xCED7E450 ^ (4 * (v2223 ^ v2165 ^ v2218)) & 0xCED7E450 ^ v2107 ^ v1125 ^ v1196 ^ v1214 ^ v1230 ^ (4 * (v1214 ^ v1196 ^ v1230)) & 0xCED7E450 ^ 0xA73D82A9;
            v2108 = v2213 ^ (4 * v1791) & 0xCED7E450 ^ v1822 ^ v2278 ^ v1239 ^ (4 * (v1233 ^ v1234)) & 0xCED7E450 ^ 0x6DEED44D;
            v1241 = v2195 ^ v1858 ^ v2149 ^ v2157 ^ v2145 ^ v2184 ^ v2169 ^ v2177 ^ v1834 ^ v1839 ^ v2118 ^ v2097 ^ v1990 ^ v1826 ^ v1818 ^ v1240 ^ v2261 ^ 0xF868FACD;
            v2307 = (((v1241 ^ ((v1241 & v1783) >> 1)) & v2189) >> v2298) ^ (((v1241 ^ ((v1241 & v1783) >> 1)) & v1971) << v1778);
            v1242 = v1997 ^ v2165 ^ v1874 ^ v2180 ^ v2204 ^ v2199 ^ v2174 ^ v2160 ^ v1847 ^ v2153 ^ v2138 ^ v2128 ^ v2123 ^ v2142 ^ v2102 ^ v1830 ^ v2091 ^ v2133 ^ v1843 ^ v2209 ^ v2113 ^ v1811 ^ v2108 ^ 0xF868FACD;
            v1823 = (((v1242 ^ ((v1242 & v1777) >> 1)) & v1973) << v2192)
                  + (((v1242 ^ ((v1242 & v1777) >> 1)) & v1764) >> v1781);
            v2008 = v2039 ^ v2051 ^ (((v1826 ^ ((v1826 & v1783) >> 1)) & v1764) >> v2298) ^ (((v1826 ^ ((v1826 & v1783) >> 1)) & v1973) << v2192);
            v2287 = v2031 ^ v2025 ^ (((v1971 & (v1830 ^ ((v1830 & v1777) >> 1))) << v2192)
                                   + ((v2189 & (v1830 ^ ((v1830 & v1777) >> 1))) >> v2298));
            v2003 = v2031 ^ v2025 ^ ((((v1990 ^ ((v1990 & v1783) >> 1)) & v1971) << v1778)
                                   + (((v1990 ^ ((v1990 & v1783) >> 1)) & v1764) >> v1781));
            v1998 = v2039 ^ v2051 ^ (((v2189 & (v1997 ^ ((v1777 & v1997) >> 1))) >> v2298)
                                   + (((v1997 ^ ((v1777 & v1997) >> 1)) & v1973) << v2192));
            v2279 = (((v1240 ^ ((v1240 & v1777) >> 1)) & v2189) >> v2298) | (((v1240 ^ ((v1240 & v1777) >> 1)) & v1973) << v1778);
            v1995 = (((v1818 ^ ((v1818 & v1783) >> 1)) & v1764) >> v2298) ^ (((v1818 ^ ((v1818 & v1783) >> 1)) & v1973) << v2192);
            v2272 = (((v2209 ^ ((v2209 & v1777) >> 1)) & v2189) >> v1781) | (((v2209 ^ ((v2209 & v1777) >> 1)) & v1971) << v1778);
            v1991 = ((v1971 & (v1834 ^ ((v1777 & v1834) >> 1))) << v1778)
                  + (((v1834 ^ ((v1777 & v1834) >> 1)) & v1764) >> v2298);
            v2267 = ((v1971 & (v2165 ^ ((v1777 & v2165) >> 1))) << v2192) ^ (((v2165 ^ ((v1777 & v2165) >> 1)) & v1764) >> v2298);
            v1807 = ((v2189 & (v1850 ^ ((v1783 & v1850) >> 1))) >> v1781) ^ ((v1973 & (v1850 ^ ((v1783 & v1850) >> 1))) << v1778);
            v2262 = (((v2261 ^ ((v2261 & v1777) >> 1)) & v2189) >> v2298) | (((v2261 ^ ((v2261 & v1777) >> 1)) & v1971) << v2192);
            v1803 = ((v1764 & (v1966 ^ ((v1783 & v1966) >> 1))) >> v1781) | ((v1973 & (v1966 ^ ((v1783 & v1966) >> 1))) << v1778);
            v2254 = (((v1839 ^ ((v1839 & v1777) >> 1)) & v1764) >> v1781) | (((v1839 ^ ((v1839 & v1777) >> 1)) & v1973) << v2192);
            v1967 = ((v1971 & (v1862 ^ ((v1783 & v1862) >> 1))) << v1778) ^ ((v2189 & (v1862 ^ ((v1783 & v1862) >> 1))) >> v2298);
            v2245 = ((v1971 & (v1858 ^ ((v1777 & v1858) >> 1))) << v2192) ^ ((v2189 & (v1858 ^ ((v1777 & v1858) >> 1))) >> v2298);
            v1799 = ((v1764 & (v1870 ^ ((v1783 & v1870) >> 1))) >> v1781) ^ ((v1973 & (v1870 ^ ((v1783 & v1870) >> 1))) << v1778);
            v2238 = ((v1973 & (v1874 ^ ((v1783 & v1874) >> 1))) << v2192) ^ ((v1764 & (v1874 ^ ((v1783 & v1874) >> 1))) >> v2298);
            v1963 = ((v1971 & (v1962 ^ ((v1777 & v1962) >> 1))) << v1778) ^ ((v2189 & (v1962 ^ ((v1777 & v1962) >> 1))) >> v1781);
            v2234 = (((v1847 ^ ((v1777 & v1847) >> 1)) & v1973) << v2192) ^ (((v1847 ^ ((v1777 & v1847) >> 1)) & v1764) >> v2298);
            v1795 = ((v1971 & (v1984 ^ ((v1783 & v1984) >> 1))) << v1778) | ((v2189 & (v1984 ^ ((v1783 & v1984) >> 1))) >> v1781);
            v2229 = ((v2189 & (v2102 ^ ((v2102 & v1783) >> 1))) >> v2298)
                  + (((v2102 ^ ((v2102 & v1783) >> 1)) & v1973) << v1778);
            v2224 = ((v1971 & (v1843 ^ ((v1843 & v1783) >> 1))) << v1778)
                  + (((v1843 ^ ((v1843 & v1783) >> 1)) & v1764) >> v1781);
            v1792 = ((v1971 & (v1866 ^ ((v1777 & v1866) >> 1))) << v2192) | (((v1866 ^ ((v1777 & v1866) >> 1)) & v1764) >> v1781);
            v1243 = v2195 ^ ((v1777 & v2195) >> 1);
            v1788 = ((v2189 & (v1854 ^ ((v1777 & v1854) >> 1))) >> v2298) ^ (((v1854 ^ ((v1777 & v1854) >> 1)) & v1973) << v2192);
            v2219 = (((v1243 & v1764) >> v2298) ^ -((v1243 & v1764) >> v2298) ^ (((v1971 & v1243) << v1778)
                                                                               - (((v1971 & v1243) << v1778) ^ ((v1243 & v1764) >> v2298))))
                  + ((v1971 & v1243) << v1778);
            v1985 = ((v2189 & (v2091 ^ ((v2091 & v1777) >> 1))) >> v1781)
                  + (((v2091 ^ ((v2091 & v1777) >> 1)) & v1973) << v1778);
            v2214 = ((v2189 & (v2157 ^ ((v1777 & v2157) >> 1))) >> v1781) ^ (((v2157 ^ ((v1777 & v2157) >> 1)) & v1973) << v1778);
            v2210 = ((v1973 & (v2138 ^ ((v2138 & v1783) >> 1))) << v1778) | ((v1764 & (v2138 ^ ((v2138 & v1783) >> 1))) >> v2298);
            v2196 = ((v1973 & (v2180 ^ ((v1783 & v2180) >> 1))) << v1778)
                  + ((v1764 & (v2180 ^ ((v1783 & v2180) >> 1))) >> v2298);
            v2205 = ((v1971 & (v2204 ^ ((v1783 & v2204) >> 1))) << v1778) ^ ((v1764 & (v2204 ^ ((v1783 & v2204) >> 1))) >> v1781);
            v2202 = ((v1971 & (v2149 ^ ((v1783 & v2149) >> 1))) << v2192)
                  + ((v2189 & (v2149 ^ ((v1783 & v2149) >> 1))) >> v1781);
            v1244 = ((v1973 & (v2199 ^ ((v1783 & v2199) >> 1))) << v1778) ^ ((v1764 & (v2199 ^ ((v1783 & v2199) >> 1))) >> v2298);
            v2200 = ((v1971 & (v2145 ^ ((v1783 & v2145) >> 1))) << v1778) | ((v1764 & (v2145 ^ ((v1783 & v2145) >> 1))) >> v2298);
            v2181 = ((v2189 & (v2055 ^ ((v1777 & v2055) >> 1))) >> v1781) ^ (((v2055 ^ ((v1777 & v2055) >> 1)) & v1973) << v2192);
            v1245 = ((v1971 & (v2174 ^ ((v1783 & v2174) >> 1))) << v2192) | ((v2189 & (v2174 ^ ((v1783 & v2174) >> 1))) >> v1781);
            v2175 = (((v2064 ^ ((v1777 & v2064) >> 1)) & v1973) << v1778) ^ (((v2064 ^ ((v1777 & v2064) >> 1)) & v1764) >> v2298);
            v1246 = ((v1971 & (v2097 ^ ((v2097 & v1783) >> 1))) << v2192) ^ ((v2189 & (v2097 ^ ((v2097 & v1783) >> 1))) >> v2298);
            v2166 = (((v2043 ^ ((v1777 & v2043) >> 1)) & v1764) >> v1781) | (((v2043 ^ ((v1777 & v2043) >> 1)) & v1973) << v1778);
            v1247 = (((v2184 ^ ((v1777 & v2184) >> 1)) & v1764) >> v1781) ^ (((v2184 ^ ((v1777 & v2184) >> 1)) & v1973) << v1778);
            v1248 = v2160 ^ ((v1777 & v2160) >> 1);
            v2161 = ((v1971 & (v1815 ^ ((v1783 & v1815) >> 1))) << v2192) ^ ((v2189 & (v1815 ^ ((v1783 & v1815) >> 1))) >> v2298);
            v2158 = ((v1973 & (v2047 ^ ((v1783 & v2047) >> 1))) << v2192)
                  + ((v1764 & (v2047 ^ ((v1783 & v2047) >> 1))) >> v2298);
            v1249 = ((v1971 & v1248) << v1778) ^ ((v2189 & v1248) >> v1781);
            v1250 = ((v1764 & (v2169 ^ ((v1783 & v2169) >> 1))) >> v1781)
                  + ((v1973 & (v2169 ^ ((v1783 & v2169) >> 1))) << v1778);
            v2146 = ((v1971 & (v2075 ^ ((v1777 & v2075) >> 1))) << v2192) | ((v2189 & (v2075 ^ ((v1777 & v2075) >> 1))) >> v2298);
            v1251 = ((v1971 & (v2123 ^ ((v1777 & v2123) >> 1))) << v1778) | (((v2123 ^ ((v1777 & v2123) >> 1)) & v1764) >> v2298);
            v2139 = ((v2189 & (v2059 ^ ((v1783 & v2059) >> 1))) >> v1781)
                  + ((v1973 & (v2059 ^ ((v1783 & v2059) >> 1))) << v2192);
            v1252 = v2133 ^ ((v2133 & v1783) >> 1);
            v2134 = ((v2189 & (v1882 ^ ((v1777 & v1882) >> 1))) >> v1781) | (((v1882 ^ ((v1777 & v1882) >> 1)) & v1973) << v1778);
            v1253 = (((v2113 ^ ((v2113 & v1783) >> 1)) & v1764) >> v2298)
                  + (((v2113 ^ ((v2113 & v1783) >> 1)) & v1971) << v2192);
            v1254 = (v1252 & v1973) << v1778;
            v1255 = (v2189 & v1252) >> v2298;
            v1256 = v1254 & 1;
            if ((v1255 & v1254 & 1) != 0)
              v1256 = -v1256;
            v1257 = (((v2108 ^ ((v2108 & v1783) >> 1)) & v1971) << v1778) ^ (((v2108 ^ ((v2108 & v1783) >> 1)) & v2189) >> v2298);
            v2114 = ((v1971 & (v2086 ^ ((v1777 & v2086) >> 1))) << v2192) ^ (((v2086 ^ ((v1777 & v2086) >> 1)) & v1764) >> v1781);
            v2109 = (((v2080 ^ ((v1777 & v2080) >> 1)) & v1764) >> v1781) ^ (((v2080 ^ ((v1777 & v2080) >> 1)) & v1973) << v2192);
            v2103 = ((v1971 & (v1886 ^ ((v1777 & v1886) >> 1))) << v2192) ^ ((v2189 & (v1886 ^ ((v1777 & v1886) >> 1))) >> v2298);
            v1258 = ((v1971 & (v2153 ^ ((v1783 & v2153) >> 1))) << v1778) ^ ((v1764 & (v2153 ^ ((v1783 & v2153) >> 1))) >> v2298);
            v2087 = ((v2189 & (v2072 ^ ((v1777 & v2072) >> 1))) >> v1781)
                  + (((v2072 ^ ((v1777 & v2072) >> 1)) & v1973) << v2192);
            v2076 = ((v1971 & (v1899 ^ ((v1783 & v1899) >> 1))) << v1778) | ((v2189 & (v1899 ^ ((v1783 & v1899) >> 1))) >> v1781);
            v2073 = ((v1971 & (v2083 ^ ((v1783 & v2083) >> 1))) << v1778)
                  + ((v1764 & (v2083 ^ ((v1783 & v2083) >> 1))) >> v1781);
            HIDWORD(v1259) = v1998;
            LODWORD(v1259) = v1998;
            v2060 = (((v2069 ^ ((v1777 & v2069) >> 1)) & v1764) >> v1781) ^ (((v2069 ^ ((v1777 & v2069) >> 1)) & v1973) << v2192);
            v2056 = ((v1971 & (v1958 ^ ((v1783 & v1958) >> 1))) << v2192) ^ ((v1764 & (v1958 ^ ((v1783 & v1958) >> 1))) >> v2298);
            v2185 = v1244;
            v2154 = ((v1764 & (v2169 ^ ((v1783 & v2169) >> 1))) >> v1781)
                  + ((v1973 & (v2169 ^ ((v1783 & v2169) >> 1))) << v1778);
            v1959 = v1247;
            v2098 = (((v2142 ^ ((v2142 & v1783) >> 1)) & v1764) >> v1781)
                  + (((v2142 ^ ((v2142 & v1783) >> 1)) & v1973) << v1778);
            v2081 = ((v2189 & (v2177 ^ ((v1777 & v2177) >> 1))) >> v2298)
                  + (((v2177 ^ ((v1777 & v2177) >> 1)) & v1973) << v2192);
            v2065 = ((v2189 & (v2128 ^ ((v1777 & v2128) >> 1))) >> v1781) | (((v2128 ^ ((v1777 & v2128) >> 1)) & v1973) << v1778);
            v2143 = ((v1971 & (v2123 ^ ((v1777 & v2123) >> 1))) << v1778) | (((v2123 ^ ((v1777 & v2123) >> 1)) & v1764) >> v2298);
            v2178 = v1245;
            v2170 = v1246;
            v2150 = v1249;
            v2070 = ((v1971 & (v2118 ^ ((v2118 & v1783) >> 1))) << v1778)
                  + ((v2189 & (v2118 ^ ((v2118 & v1783) >> 1))) >> v2298);
            v2092 = v1258;
            v2124 = (v1256 + v1255) ^ v1254 & 0xFFFFFFFE;
            v2129 = v1253;
            v2084 = (((v1811 ^ ((v1811 & v1777) >> 1)) & v1764) >> v2298) | (((v1811 ^ ((v1811 & v1777) >> 1)) & v1973) << v2192);
            v2119 = v1257;
            v1887 = v2196 ^ v2210 ^ v1244 ^ v1250 ^ v2238 ^ v2254 ^ v1247 ^ v2098 ^ v2234 ^ v2229 ^ v1985 ^ v2214 ^ v2081 ^ v2065 ^ v1251 ^ v2245 ^ v1991 ^ v2267 ^ v2224 ^ v2205 ^ v2202 ^ v2200 ^ v1245 ^ v1246 ^ v1249 ^ v2070 ^ v1258 ^ v2124 ^ v2219 ^ __ROR4__((v1259 >> 8) ^ __ROR4__(v2008 ^ v2287 ^ v2003, 8) ^ 0x65CADAD1, 24) ^ v1995 ^ v2272 ^ v1253 ^ v2084 ^ v2279 ^ v1257 ^ v2262 ^ 0xCADAD165;
            v1260 = (v2025 ^ -v2025 ^ (v2020 - (v2025 ^ v2020))) + v2020;
            v1883 = ((v2189 & (v1915 ^ ((v1783 & v1915) >> 1))) >> v1781) ^ ((v1973 & (v1915 ^ ((v1783 & v1915) >> 1))) << v1778);
            v1261 = v2051 ^ v1906;
            v1262 = v2051 ^ v1904;
            v1263 = v2051 ^ v2035;
            v2052 = v2051 ^ v1909 ^ v2039;
            v2048 = v1261 ^ v2039;
            v2044 = v1262 ^ v2039;
            v2036 = v1263 ^ v2039;
            v1264 = v2025 ^ v1880;
            v1265 = v2025 ^ v1891;
            v2026 = v2025 ^ v1895 ^ v2031;
            v2040 = v1264 ^ v2031;
            v2021 = v2031 ^ v1260;
            v2032 = v1265 ^ v2031;
            v1776 = ((v1971 & (v1780 ^ ((v1777 & v1780) >> 1))) << v2192)
                  + (((v1780 ^ ((v1777 & v1780) >> 1)) & v1764) >> v2298);
            v1916 = ((v1971 & (v1912 ^ ((v1777 & v1912) >> 1))) << v2192)
                  + (((v1912 ^ ((v1777 & v1912) >> 1)) & v1764) >> v2298);
            v1775 = ((v2189 & (v1779 ^ ((v1783 & v1779) >> 1))) >> v1781)
                  + ((v1973 & (v1779 ^ ((v1783 & v1779) >> 1))) << v1778);
            v1945 = ((v1971 & (v1944 ^ ((v1783 & v1944) >> 1))) << v1778) ^ ((v1764 & (v1944 ^ ((v1783 & v1944) >> 1))) >> v1781);
            v1927 = ((v2189 & (v1926 ^ ((v1777 & v1926) >> 1))) >> v2298) | (((v1926 ^ ((v1777 & v1926) >> 1)) & v1973) << v2192);
            v1773 = ((v1971 & (v1947 ^ ((v1783 & v1947) >> 1))) << v1778)
                  + ((v2189 & (v1947 ^ ((v1783 & v1947) >> 1))) >> v1781);
            v1948 = (((v1918 ^ ((v1777 & v1918) >> 1)) & v1973) << v2192) | (((v1918 ^ ((v1777 & v1918) >> 1)) & v1764) >> v2298);
            v1933 = ((v2189 & (v1932 ^ ((v1783 & v1932) >> 1))) >> v2298)
                  + ((v1973 & (v1932 ^ ((v1783 & v1932) >> 1))) << v1778);
            v1922 = ((v1971 & (v1921 ^ ((v1777 & v1921) >> 1))) << v2192)
                  + (((v1921 ^ ((v1777 & v1921) >> 1)) & v1764) >> v1781);
            v1939 = ((v2189 & (v1938 ^ ((v1783 & v1938) >> 1))) >> v2298)
                  + ((v1973 & (v1938 ^ ((v1783 & v1938) >> 1))) << v1778);
            v1266 = v1935 ^ ((v1777 & v1935) >> 1);
            v1936 = ((v2189 & (v1929 ^ ((v1783 & v1929) >> 1))) >> v2298)
                  + ((v1973 & (v1929 ^ ((v1783 & v1929) >> 1))) << v2192);
            v1930 = ((v1971 & v1266) << v2192) | ((v1266 & v1764) >> v1781);
            v1951 = ((v1971 & (v1950 ^ ((v1777 & v1950) >> 1))) << v1778) | ((v2189 & (v1950 ^ ((v1777 & v1950) >> 1))) >> v1781);
            v1770 = ((v1973 & (v1924 ^ ((v1783 & v1924) >> 1))) << v2192) | ((v1764 & (v1924 ^ ((v1783 & v1924) >> 1))) >> v2298);
            v1267 = (uint64_t)*(&off_1015B46D0 + (v1767 ^ 0x44E13F50));
            v1268 = (char *)*(&off_1015B46D0 + v1767 - 1155610583) - 12;
            v1269 = (char *)*(&off_1015B46D0 + (v1767 ^ 0x44E13380u)) - 8;
            v1758 = v1269;
            v1760 = v1268;
            v1270 = (*(_BYTE *)(v1267 + (v2015[15] ^ 0x67)) + 39) | (((*(_BYTE *)(v1267 + (v2015[13] ^ 4)) + 39) ^ 0x3F) << 16) | (((*(_BYTE *)(v1267 + (v2015[14] ^ 0x14)) + 39) ^ 0xFB) << 8) | (((*(unsigned __int8 *)(v1267 + (v2015[12] ^ 0xB3)) + 39) ^ 0xFFFFFFBF) << 24);
            v1271 = v1269[v2015[3] ^ 0x42] ^ 0x13 | (((*(_BYTE *)(v1267 + (v2015[1] ^ 0x81))
                                                                                         + 39) ^ 0xD0) << 16) | ((v1268[*v2015 ^ 0xA0] ^ 0x56) << 24) | (((*(_BYTE *)(v1267 + (v2015[2] ^ 0x70)) + 39) ^ 0xB0) << 8);
            v1763 = v1267;
            v1272 = ((v1269[v2015[4] ^ 0x73] ^ 0x7E) << 24) | (((*(_BYTE *)(v1267 + (v2015[5] ^ 0x57)) + 39) ^ 0x54) << 16) | (((*(_BYTE *)(v1267 + (v2015[6] ^ 0xDLL)) + 39) ^ 0x38) << 8) | (*(_BYTE *)(v1267 + (v2015[7] ^ 0x60)) + 39) ^ 0x74;
            v1756 = (char *)*(&off_1015B46D0 + v1767 - 1155611235) - 12;
            v1273 = v1268[v2015[11] ^ 0x4ELL] | (((*(_BYTE *)(v1267
                                                                                              + (v2015[10] ^ 0x3BLL))
                                                                                   + 39) ^ 1) << 8) | ((v1268[v2015[9] ^ 0x61] ^ 0x42) << 16) | ((v1756[v2015[8] ^ 0x6FLL] ^ 0x44444444) << 24);
            v1274 = (((v1271 ^ ((v1271 & v1783) >> 1)) & v2189) >> v1781) ^ (((v1271 ^ ((v1271 & v1783) >> 1)) & v1971) << v1778);
            v1275 = v1273 ^ 0xB8 ^ (((v1273 ^ 0xB8) & v1777) >> 1);
            v1896 = (((v1272 ^ ((v1272 & v1777) >> 1)) & v1973) << v2192) ^ (((v1272 ^ ((v1272 & v1777) >> 1)) & v1764) >> v2298);
            v1900 = ((v1275 & v1971) << v2192) + ((v1275 & v1764) >> v2298);
            v1276 = v1270 ^ 0x20 ^ (((v1270 ^ 0x20) & v1783) >> 1);
            v1905 = ((v1276 & v2189) >> v1781) + ((v1276 & v1973) << v1778);
            v1755 = ((v1971 & (v1877 & 0x15425A6F ^ 0x2A84B4DE)) << v2192)
                  + ((v2189 & (v1877 & 0x15425A6F ^ 0x2A84B4DE)) >> v1781);
            v1754 = ((v1971 & (v1877 & 0x11EA22CE ^ 0x23D4459D)) << v1778) ^ (((v1877 & 0x11EA22CE ^ 0x23D4459D) & v1764) >> v1781);
            v1277 = v1877 & 0x7505303D ^ 0xEA0A607A;
            v1278 = ((v1277 & v1973) << v2192) + ((v1277 & v1764) >> v1781);
            v1279 = (v1783 >> 1) & 0x7505303D ^ 0xEA0A607A;
            v1913 = ((v1971 & v1277) << v1778) | ((v2189 & v1277) >> v2298);
            v1280 = (v1783 >> 1) & 0x56CAD7DB ^ 0xAD95AFB7;
            v1281 = (v1973 & v1280) << v2192;
            v1282 = v1764 & v1280;
            v1752 = v1281 + (v1282 >> v1781);
            v1753 = v1281 + (v1282 >> v2298);
            v1768 = v1877 & 0x56CAD7DB ^ 0xAD95AFB7;
            v1751 = v1877 & 0x56CAD7DB ^ v2189 ^ 0x524A5048;
            v1283 = v1877 & 0x15F9A84 ^ 0x2BF3508;
            v1284 = (v1783 >> 1) & 0x15F9A84 ^ 0x2BF3508;
            v1285 = (v1764 & v1284) >> v1781;
            v1910 = v1285 + ((v1973 & v1284) << v1778);
            v1907 = ((v1971 & v1284) << v1778) + v1285;
            v1286 = v1877 & 0x41F1B318 ^ 0x83E36631;
            v1287 = (v1783 >> 1) & 0x41F1B318 ^ 0x83E36631;
            v1750 = ((v1971 & v1286) << v2192) | ((v1286 & v1764) >> v1781);
            v1288 = (v1783 >> 1) & 0x555142A8 | 0xAAA28551;
            v2016 = ((v2189 & v1288) >> v2298) | ((v1973 & v1288) << v1778);
            v1289 = v1877 & 0x555142A8 | 0xAAA28551;
            v1749 = ((v2189 & v1289) >> v2298) | ((v1289 & v1973) << v2192);
            v1919 = ((v1971 & v1288) << v1778) + ((v1764 & v1288) >> v1781);
            v1290 = (v1783 >> 1) & 0x169E9DB3 ^ 0x2D3D3B66;
            v1871 = ((v2189 & v1290) >> v2298) | ((v1973 & v1290) << v1778);
            v1291 = v1877 & 0x169E9DB3 ^ 0x2D3D3B66;
            v1867 = ((v1971 & v1291) << v2192) + ((v1291 & v1764) >> v1781);
            v1859 = ((v1971 & v1290) << v1778) | ((v2189 & v1290) >> v1781);
            v1855 = ((v1291 & v1973) << v2192) | ((v1291 & v1764) >> v2298);
            v1292 = v1877 & 0x6DCCC2F2 ^ 0xDB9985E5;
            v1293 = v1877 & 0x7DC14DBD ^ 0xFB829B7A;
            v1863 = ((v1971 & v1293) << v2192) | ((v2189 & v1293) >> v2298);
            v1294 = (v1783 >> 1) & 0x7DC14DBD ^ 0xFB829B7A;
            v1851 = ((v1764 & v1294) >> v1781) + ((v1973 & v1294) << v1778);
            v1295 = (v1783 >> 1) & 0x817C6C0 ^ 0x102F8D81;
            v1296 = v1877 & 0x817C6C0 ^ 0x102F8D81;
            v1297 = v1877 & 0x37055B33 ^ 0x6E0AB667;
            v1298 = (v1783 >> 1) & 0x37055B33 ^ 0x6E0AB667;
            v1840 = ((v1973 & v1295) << v2192) + ((v1764 & v1295) >> v1781);
            v1835 = ((v1971 & v1296) << v1778) | ((v2189 & v1296) >> v2298);
            v1831 = ((v1971 & v1295) << v2192) | ((v1764 & v1295) >> v2298);
            LODWORD(v1267) = (v1973 & v1295) << v1778;
            HIDWORD(v1259) = (v1764 & v1295) >> v2298;
            LODWORD(v1259) = HIDWORD(v1259);
            v1844 = ((v2189 & v1295) >> v1781) | v1267;
            v1299 = (v1259 >> 10) ^ __ROR4__(v1267, 10) ^ 0x49CD2632;
            v1748 = ((v1971 & v1297) << v2192) | ((v1297 & v1764) >> v2298);
            v1956 = (((v1955 ^ 0xD1C9FC78) - 1947032203) ^ ((v1955 ^ 0xD1FEC219) - 1949983978) ^ ((v1955 ^ 0xD63FF283)
                                                                                                - 1945850992))
                  - 1754493228;
            v1747 = v1927 ^ v1883 ^ ((v1764 & v1279) >> v1781) ^ ((v1973 & v1279) << v2192) ^ v1922;
            v1746 = v1927 ^ v1883 ^ v1278 ^ v1922;
            v1744 = v1927 ^ v1883 ^ v1913 ^ v1922;
            v1745 = v1927 ^ v1883 ^ (((v1971 & v1279) << v1778) + ((v2189 & v1279) >> v2298)) ^ v1922;
            v1300 = (v2189 & v1283) >> v2298;
            v1743 = v1776 ^ v1930 ^ v1300 ^ ((v1971 & v1283) << v2192);
            v1742 = v1776 ^ v1930 ^ v1910;
            v1741 = v1776 ^ v1930 ^ v1907;
            v1740 = v1776 ^ v1930 ^ (v1300 + ((v1283 & v1973) << v2192));
            v1739 = ((v1286 & v1973) << v1778) ^ ((v1286 & v1764) >> v2298);
            v1738 = (((v1971 & v1287) << v2192) + ((v2189 & v1287) >> v1781)) ^ v1770 ^ v1773 ^ v1823 ^ v2307 ^ v1887;
            v1737 = ((v1973 & v1287) << v1778) ^ ((v2189 & v1287) >> v2298);
            v1736 = v1775 ^ v1936 ^ v1859 ^ (-1196776747 * (v2307 ^ v1823)) ^ (-1196776747 * v1887);
            v1735 = v1775 ^ v1936 ^ v1871;
            v1734 = v1775 ^ v1936 ^ v1867;
            v1733 = v1775 ^ v1936 ^ v1855;
            v1301 = ((v1783 & 0xDB9985E4) >> 1) ^ 0xDB9985E5;
            LODWORD(v1267) = v1764 & v1301;
            v1302 = v1973 & v1301;
            v1303 = v1302 << v1778;
            v1304 = v1302 << v2192;
            v1305 = v1293 & v1764;
            v1306 = v1293 & v1973;
            v1307 = v1305 >> v2298;
            v1308 = v1305 >> v1781;
            v1309 = v1306 << v2192;
            v1310 = v1308 + (v1306 << v1778);
            v1311 = v1308 + v1309;
            v1312 = v1307 ^ v1309;
            v1313 = (v2189 & v1296) >> v1781;
            LODWORD(v1268) = (v1971 & v1296) << v2192;
            v1314 = ((v1296 & v1973) << v1778) ^ v1313;
            v1315 = v1268 | v1313;
            v1316 = ((v1296 & v1764) >> v2298) ^ v1268;
            LODWORD(v1268) = (v2189 & v1297) >> v1781;
            v1317 = (v1297 & v1973) << v2192;
            v1729 = v1317 ^ v1268;
            v1730 = v1268 | v1317;
            v1318 = (v1971 & v1298) << v1778;
            LODWORD(v1268) = (v1764 & v1298) >> v2298;
            v1727 = v1268 ^ v1318;
            v1728 = v1318 | v1268;
            v1319 = (v1971 & v1294) << v1778;
            LODWORD(v1268) = v1319 | ((v2189 & v1294) >> v1781);
            v1320 = (v2189 & v1294) >> v2298;
            v1321 = v1320 ^ ((v1971 & v1294) << v2192);
            HIDWORD(v1259) = v1299;
            LODWORD(v1259) = v1299;
            v1322 = v1963;
            v1726 = v1951 ^ v1933 ^ v1863;
            v1724 = v1951 ^ v1933 ^ v1268;
            v1725 = v1951 ^ v1933 ^ v1851;
            v1722 = v1951 ^ v1933 ^ v1321;
            v1723 = v1951 ^ v1933 ^ v1312;
            v1721 = v1951 ^ v1933 ^ v1310;
            v1720 = v1951 ^ v1933 ^ (v1319 + v1320);
            v1323 = v1967;
            v1719 = v1951 ^ v1933 ^ v1311;
            v1718 = v1945 ^ v1775 ^ v1831;
            v1717 = v1945 ^ v1775 ^ v1314;
            v1324 = ~v1942;
            v1325 = v1980;
            v1715 = v1945 ^ v1775 ^ v1316;
            v1716 = v1945 ^ v1775 ^ v1844;
            v1714 = v1945 ^ v1775 ^ v1840;
            v1713 = v1945 ^ v1775 ^ v1835;
            v1711 = v1945 ^ v1775 ^ (v1259 >> 22);
            v1712 = v1945 ^ v1775 ^ v1315;
            v1710 = ((v1973 & v1298) << v1778) ^ ((v2189 & v1298) >> v1781);
            v1709 = v1953 ^ 0x7B4061CF;
            v1708 = v1953 ^ 0x7001115B;
            v1706 = ((v2189 & v1768) >> v1781) ^ ((~v1942 & v1768) << v1778);
            v1707 = (~v1942 & v1768) << v1778;
            v1705 = v1933 ^ v1948 ^ v2016;
            v1704 = v1933 ^ v1948 ^ ((v1289 & v1764) >> v1781) ^ ((v1971 & v1289) << v2192);
            v1731 = v1933 ^ v1948;
            v1703 = v1933 ^ v1948 ^ v1919;
            v1702 = v1916 ^ v1939 ^ v1303 ^ (v1267 >> v1781);
            v1701 = v1916 ^ v1939 ^ (((v1292 ^ v1942 & v1292) << v2192) + ((v2189 & v1292) >> v2298));
            v1700 = v1916 ^ v1939 ^ (((v1971 & ((v1877 & 0x6DCCC2F2) - (v1777 & 0x931101C0) - 610695707)) << v1778)
                                   + ((v2189 & ((v1877 & 0x6DCCC2F2) - (v1777 & 0x931101C0) - 610695707)) >> v2298));
            v1699 = v1916 ^ v1939 ^ (v1304 + (v1267 >> v1781));
            v1698 = v1916 ^ v1939 ^ (v1304 + (v1267 >> v2298));
            v1326 = 0;
            v1697 = v1916 ^ v1939 ^ (((v1971 & v1292) << v1778) + ((v2189 & v1292) >> v1781));
            v1732 = v1916 ^ v1939;
            v1696 = v1916 ^ v1939 ^ (((v1292 & v1764) >> v1781) + ((v1292 & v1973) << v1778));
            v2017 = v2290;
            v1327 = v1784;
            v26 = v2291;
            v1328 = v2298;
            v1329 = v1778;
            v1330 = v1783;
            v1331 = v1973;
            v1332 = v1764;
            v1333 = v2192;
            v1334 = v1781;
            v1335 = v1777;
            for (i = v2189; ; i = v2189)
            {
              v2292 = v26;
              v1981 = v1325;
              v2012 = v1326;
              v1949 = v1326 + 5;
              v1954 = (v1325 + 834833627) | 0xEC60000C;
              v1952 = v1326 + 6;
              v1937 = v1326;
              v1943 = v1326 + 1;
              v1923 = v1326 + 11;
              v1892 = v1327[v1923] ^ 0xFLL;
              v1920 = v1326 + 9;
              v1940 = v1326 + 4;
              v1946 = v1326 + 8;
              v1337 = ((v1758[v1327[v1949] ^ 0xDELL] ^ 0x7B) << (((v1325 - 37) | 0xC) - 44)) | ((v1760[v1327[v1952] ^ 0xB1] ^ 0xCF) << 8) | ((v1758[v1327[v1940] ^ 0x1CLL] ^ 0x6D) << 24);
              v1925 = v1326 + 3;
              v1911 = v1326 + 14;
              v1931 = v1326 + 13;
              v1917 = v1326 + 12;
              v1934 = v1326 + 7;
              v1338 = v1758[v1327[v1934] ^ 0xC8] ^ 0xF2;
              v1908 = v1326 + 15;
              v1339 = v1756[v1327[v1908] ^ 0xBDLL] ^ 0xD2 | (((*(_BYTE *)(v1763 + (v1327[v1911] ^ 0xC1))
                                                                                               + 39) ^ 0x39) << 8) | (((*(_BYTE *)(v1763 + (v1327[v1931] ^ 0x4ALL)) + 39) ^ 0x85) << 16) | ((v1758[v1327[v1917] ^ 0xC7] ^ 0xB8) << 24);
              v1928 = v1326 + 2;
              v1340 = v1758[v1327[v1925] ^ 0x69] ^ 0xFB | ((v1760[v1327[v1326] ^ 0xDCLL] ^ 0xFFFFFF83) << 24) | ((v1760[v1327[v1943] ^ 0x4ALL] ^ 0xAA) << 16) | ((v1758[v1327[v1928] ^ 0x69] ^ 0xFB) << 8);
              v1914 = v1326 + 10;
              v1341 = v1758[v1892] ^ 0xAB | ((v1756[v1327[v1920] ^ 0x84] ^ 0xA1) << 16) | ((v1756[v1327[v1946] ^ 0xADLL] ^ 0x16) << 24) | ((v1758[v1327[v1914] ^ 0xCDLL] ^ 0xBD) << 8);
              v1342 = (v1337 | v1338) ^ (((v1337 | v1338) & v1330) >> 1);
              v1897 = v1896 ^ v1755 ^ ((v1342 & v1332) >> v1328) ^ ((v1342 & v1324) << v1329);
              v1343 = v1754 ^ v1900 ^ ((((v1341 ^ ((v1341 & v1330) >> 1)) & v1332) >> v1328) | (((v1341 ^ ((v1341 & v1330) >> 1)) & v1331) << v1333));
              v1901 = v1905 ^ (((v2189 & ((v1783 >> 1) & 0x5F4D243 ^ 0xBE9A487)) >> v2298)
                             + ((v1973 & ((v1783 >> 1) & 0x5F4D243 ^ 0xBE9A487)) << v2192)) ^ ((((v1339 ^ ((v1339 & v1335) >> 1)) & v1324) << v1329) | (((v1339 ^ ((v1339 & v1335) >> 1)) & i) >> v1334));
              v1968 = v1323;
              v1964 = v1322;
              v1888 = v1274 ^ (((v1973 & ((v1783 >> 1) & 0x6777AF73 ^ 0xCEEF5EE7)) << v1778)
                             + ((v1764 & ((v1783 >> 1) & 0x6777AF73 ^ 0xCEEF5EE7)) >> v2298)) ^ (((v1340 ^ ((v1340 & v1335) >> 1)) & i) >> v1334) ^ (((v1340 ^ ((v1340 & v1335) >> 1)) & v1331) << v1333);
              v1344 = 251105081 * (v1323 + v1322 - v1888) + ((251105081 * (v1323 + v1322 - v1888)) >> 16);
              v1345 = -1176710553 * ((v1344 ^ (v1344 >> 8)) + v1897)
                    + ((-1176710553 * ((v1344 ^ (v1344 >> 8)) + v1897)) >> 16);
              v1346 = 251105081 * (v2238 + v2254 - v1888) + ((251105081 * (v2238 + v2254 - v1888)) >> 16);
              v1347 = -1176710553 * ((v1346 ^ (v1346 >> 8)) + v1897)
                    + ((-1176710553 * ((v1346 ^ (v1346 >> 8)) + v1897)) >> 16);
              v1348 = -1274370807 * (v1347 - v1901 + (v1347 >> 8))
                    + ((-1274370807 * (v1347 - v1901 + (v1347 >> 8))) >> 16);
              v1884 = v1343;
              v1349 = (v1348 - (v1348 >> 8)) ^ v1343;
              v1350 = v2196
                    - ((((44885153 * v1349 + ((44885153 * v1349) >> 16)) ^ 0xA9FDB134)
                      + ((44885153 * v1349 + ((44885153 * v1349) >> 16)) | 0x56024ECB)
                      + 1) | (44885153 * v1349 + ((44885153 * v1349) >> 16)))
                    + 44885153 * v1349
                    + ((44885153 * v1349) >> 16);
              v1351 = -1274370807 * (v1345 - v1901 + (v1345 >> 8))
                    + ((-1274370807 * (v1345 - v1901 + (v1345 >> 8))) >> 16);
              v1352 = 44885153 * ((v1351 - (v1351 >> 8)) ^ v1343)
                    + ((44885153 * ((v1351 - (v1351 >> 8)) ^ v1343)) >> 16);
              v2017 = v2017
                    - v26
                    + ((2 * ((v1352 >> 8) & v1352)) ^ (v1352 >> 8) ^ v1352)
                    + 2 * ((2 * ((v1352 >> 8) & v1352)) & ((v1352 >> 8) ^ v1352));
              v1353 = v1352 + (v1352 >> 8);
              v2308 = v1353 - v26;
              v1354 = ((v1353 - (_DWORD)v26) & 1) == 0;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1355 = v2287;
              else
                v1355 = v2008;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1356 = v2008;
              else
                v1356 = v1998;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1357 = v2003;
              else
                v1357 = v2287;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1358 = v1998;
              else
                v1358 = v2003;
              v1359 = v2279;
              v1360 = v1991;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1361 = v2279;
              else
                v1361 = v1991;
              v1852 = v1361;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1359 = v1995;
              v2280 = v1359;
              if (((v1353 - (_DWORD)v26) & 1) == 0)
                v1360 = v2272;
              v1848 = v1360;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1362 = v2272;
              else
                v1362 = v1995;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1363 = v2254;
              else
                v1363 = v2262;
              v1878 = v1363;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1364 = v2245;
              else
                v1364 = v2254;
              v2255 = v1364;
              v1365 = v2267;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1366 = v2267;
              else
                v1366 = v2245;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1365 = v2262;
              v1868 = v1365;
              v1368 = v2229;
              v1367 = v2234;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1369 = v2229;
              else
                v1369 = v2234;
              v1996 = v1369;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1368 = v2224;
              v1992 = v1368;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1370 = v2238;
              else
                v1370 = v2224;
              v2230 = v1370;
              if (((v1353 - (_DWORD)v26) & 1) == 0)
                v1367 = v2238;
              v2239 = v1367;
              v1371 = v2214;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1372 = v2214;
              else
                v1372 = v1985;
              v2197 = v1372;
              v1373 = v2210;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1371 = v2210;
              v1864 = v1371;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1373 = v2219;
              v1875 = v1373;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1374 = v1985;
              else
                v1374 = v2219;
              v1375 = v2205;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1376 = v2205;
              else
                v1376 = v1350;
              v1999 = v1376;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1375 = v2202;
              v1986 = v1375;
              if (((v1353 - (_DWORD)v26) & 1) == 0)
                v1350 = v2185;
              v1860 = v1350;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1377 = v2185;
              else
                v1377 = v2202;
              v1856 = v1377;
              v1378 = v2178;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1379 = v2178;
              else
                v1379 = v2200;
              v2004 = v1379;
              v1380 = v2170;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1378 = v2170;
              v1881 = v1378;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1380 = v1959;
              v2171 = v1380;
              if (((v1353 - (_DWORD)v26) & 1) != 0)
                v1381 = v2200;
              else
                v1381 = v1959;
              HIDWORD(v1382) = v2150;
              LODWORD(v1382) = v2150;
              v1383 = v1353 ^ __ROR4__((v1382 >> 21) ^ __ROR4__(v1353, 21) ^ 0x75A6F58E, 11);
              v1384 = v2166;
              if (v1354)
                v1385 = v2166;
              else
                v1385 = v2161;
              if (v1354)
                v1384 = v2175;
              v2151 = v1384;
              v1386 = v2181;
              if (v1354)
                v1387 = v2181;
              else
                v1387 = v2175;
              if (v1354)
                v1386 = v2161;
              v2162 = v1386;
              v1388 = v1383 ^ 0xB1CEB4DE;
              v1389 = v2129;
              if (v1354)
                v1390 = v2129;
              else
                v1390 = v1388;
              v1845 = v1390;
              if (v1354)
                v1389 = v2143;
              v1836 = v1389;
              if (v1354)
                v1391 = v2154;
              else
                v1391 = v2143;
              if (v1354)
                v1392 = v1388;
              else
                v1392 = v2154;
              if (v1354)
                v1393 = v2139;
              else
                v1393 = v2134;
              v1960 = v1393;
              v1394 = v2158;
              if (v1354)
                v1395 = v2134;
              else
                v1395 = v2158;
              if (!v1354)
                v1394 = v2146;
              v1832 = v1394;
              if (v1354)
                v1396 = v2146;
              else
                v1396 = v2139;
              v1397 = v2124;
              v1398 = v2119;
              if (v1354)
                v1399 = v2124;
              else
                v1399 = v2119;
              v1841 = v1399;
              if (!v1354)
                v1398 = v2098;
              v2120 = v1398;
              if (v1354)
                v1397 = v2092;
              v1816 = v1397;
              if (v1354)
                v1400 = v2098;
              else
                v1400 = v2092;
              if (v1354)
                v1401 = v2109;
              else
                v1401 = v2103;
              v1872 = v1401;
              if (v1354)
                v1402 = v2103;
              else
                v1402 = v2087;
              v1403 = v2114;
              if (v1354)
                v1404 = v2114;
              else
                v1404 = v2109;
              if (v1354)
                v1403 = v2087;
              v2110 = v1403;
              v1405 = v2084;
              if (v1354)
                v1406 = v2084;
              else
                v1406 = v2081;
              v1819 = v1406;
              if (v1354)
                v1405 = v2065;
              v1827 = v1405;
              if (v1354)
                v1407 = v2070;
              else
                v1407 = v2065;
              if (v1354)
                v1408 = v2081;
              else
                v1408 = v2070;
              v1409 = v2073;
              if (v1354)
                v1410 = v2073;
              else
                v1410 = v2060;
              v1812 = v1410;
              if (v1354)
              {
                v1409 = v2076;
                v1411 = v2060;
              }
              else
              {
                v1411 = v2056;
              }
              v2061 = v1411;
              if (v1354)
                v1412 = v2056;
              else
                v1412 = v2076;
              if (v1354)
                v1413 = v2026;
              else
                v1413 = v2040;
              v2077 = v1413;
              if (v1354)
                v1414 = v2052;
              else
                v1414 = v2026;
              if (v1354)
                v1415 = v2044;
              else
                v1415 = v2052;
              if (v1354)
                v1416 = v2040;
              else
                v1416 = v2044;
              v1417 = v2048;
              v1418 = v2036;
              if (v1354)
                v1419 = v2036;
              else
                v1419 = v2048;
              v1824 = v1419;
              v1420 = v2032;
              if (v1354)
              {
                v1418 = v2032;
                v1420 = v2021;
              }
              else
              {
                v1417 = v2021;
              }
              if ((v2308 & 2) != 0)
                v1421 = v1356;
              else
                v1421 = v1357;
              v2287 = v1421;
              if ((v2308 & 2) != 0)
              {
                v1356 = v1357;
                v1422 = v1355;
              }
              else
              {
                v1422 = v1358;
              }
              if ((v2308 & 2) != 0)
              {
                v1423 = v1852;
              }
              else
              {
                v1358 = v1355;
                v1423 = v1362;
              }
              if ((v2308 & 2) != 0)
              {
                v1424 = v2280;
              }
              else
              {
                v1362 = v1852;
                v1424 = v1848;
              }
              v2272 = v1424;
              if ((v2308 & 2) != 0)
                v1425 = v1848;
              else
                v1425 = v2280;
              v2279 = v1425;
              if ((v2308 & 2) != 0)
                v1426 = v1878;
              else
                v1426 = v1366;
              v2245 = v1426;
              if ((v2308 & 2) != 0)
                v1427 = v1366;
              else
                v1427 = v1878;
              v2262 = v1427;
              if ((v2308 & 2) != 0)
                v1428 = v2255;
              else
                v1428 = v1868;
              v2267 = v1428;
              if ((v2308 & 2) != 0)
                v1429 = v1868;
              else
                v1429 = v2255;
              v2254 = v1429;
              if ((v2308 & 2) != 0)
                v1430 = v1996;
              else
                v1430 = v2230;
              v2224 = v1430;
              if ((v2308 & 2) != 0)
                v1431 = v2230;
              else
                v1431 = v1996;
              v2234 = v1431;
              if ((v2308 & 2) != 0)
                v1432 = v2239;
              else
                v1432 = v1992;
              v2229 = v1432;
              if ((v2308 & 2) != 0)
                v1433 = v1992;
              else
                v1433 = v2239;
              v2238 = v1433;
              if ((v2308 & 2) != 0)
                v1434 = v1374;
              else
                v1434 = v1864;
              if ((v2308 & 2) != 0)
                v1435 = v1864;
              else
                v1435 = v1374;
              v2214 = v1434;
              v2219 = v1435;
              v1436 = v2197;
              if ((v2308 & 2) != 0)
                v1437 = v2197;
              else
                v1437 = v1875;
              v2210 = v1437;
              if ((v2308 & 2) != 0)
              {
                v1436 = v1875;
                v1438 = v1860;
              }
              else
              {
                v1438 = v1986;
              }
              v2205 = v1438;
              if ((v2308 & 2) != 0)
                v1439 = v1986;
              else
                v1439 = v1860;
              v2185 = v1439;
              if ((v2308 & 2) != 0)
                v1440 = v1999;
              else
                v1440 = v1856;
              v2202 = v1440;
              if ((v2308 & 2) != 0)
                v1441 = v1856;
              else
                v1441 = v1999;
              v2196 = v1441;
              if ((v2308 & 2) != 0)
                v1442 = v1381;
              else
                v1442 = v1881;
              v2178 = v1442;
              if ((v2308 & 2) != 0)
              {
                v1381 = v1881;
                v1443 = v2171;
              }
              else
              {
                v1443 = v2004;
              }
              v2200 = v1443;
              if ((v2308 & 2) != 0)
                v1444 = v2004;
              else
                v1444 = v2171;
              v2170 = v1444;
              if ((v2308 & 2) != 0)
                v1445 = v1387;
              else
                v1445 = v1385;
              v2166 = v1445;
              if ((v2308 & 2) != 0)
                v1446 = v1385;
              else
                v1446 = v1387;
              v2181 = v1446;
              if ((v2308 & 2) != 0)
                v1447 = v2162;
              else
                v1447 = v2151;
              v2175 = v1447;
              if ((v2308 & 2) != 0)
                v1448 = v2151;
              else
                v1448 = v2162;
              v2161 = v1448;
              if ((v2308 & 2) != 0)
                v1449 = v1391;
              else
                v1449 = v1845;
              v2129 = v1449;
              if ((v2308 & 2) != 0)
                v1450 = v1845;
              else
                v1450 = v1391;
              v2154 = v1450;
              if ((v2308 & 2) != 0)
                v1451 = v1392;
              else
                v1451 = v1836;
              v2143 = v1451;
              if ((v2308 & 2) != 0)
                v1452 = v1836;
              else
                v1452 = v1392;
              v2150 = v1452;
              if ((v2308 & 2) != 0)
                v1453 = v1395;
              else
                v1453 = v1396;
              v2146 = v1453;
              if ((v2308 & 2) != 0)
                v1454 = v1396;
              else
                v1454 = v1395;
              v2134 = v1454;
              if ((v2308 & 2) != 0)
                v1455 = v1960;
              else
                v1455 = v1832;
              v2158 = v1455;
              if ((v2308 & 2) != 0)
                v1456 = v1832;
              else
                v1456 = v1960;
              v2139 = v1456;
              if ((v2308 & 2) != 0)
                v1457 = v1841;
              else
                v1457 = v1400;
              v2098 = v1457;
              if ((v2308 & 2) != 0)
                v1458 = v1400;
              else
                v1458 = v1841;
              v2124 = v1458;
              if ((v2308 & 2) != 0)
                v1459 = v2120;
              else
                v1459 = v1816;
              v2092 = v1459;
              if ((v2308 & 2) != 0)
                v1460 = v1816;
              else
                v1460 = v2120;
              v2119 = v1460;
              if ((v2308 & 2) != 0)
                v1461 = v1404;
              else
                v1461 = v1402;
              v2103 = v1461;
              if ((v2308 & 2) != 0)
                v1462 = v1402;
              else
                v1462 = v1404;
              v2114 = v1462;
              if ((v2308 & 2) != 0)
                v1463 = v1872;
              else
                v1463 = v2110;
              v2087 = v1463;
              if ((v2308 & 2) != 0)
                v1464 = v2110;
              else
                v1464 = v1872;
              v2109 = v1464;
              if ((v2308 & 2) != 0)
                v1465 = v1407;
              else
                v1465 = v1819;
              v2084 = v1465;
              if ((v2308 & 2) != 0)
                v1466 = v1819;
              else
                v1466 = v1407;
              v2070 = v1466;
              if ((v2308 & 2) != 0)
                v1467 = v1408;
              else
                v1467 = v1827;
              v2065 = v1467;
              if ((v2308 & 2) != 0)
                v1468 = v1827;
              else
                v1468 = v1408;
              v2081 = v1468;
              if ((v2308 & 2) != 0)
                v1469 = v1412;
              else
                v1469 = v1812;
              v2073 = v1469;
              if ((v2308 & 2) != 0)
                v1470 = v1812;
              else
                v1470 = v1412;
              v2056 = v1470;
              if ((v2308 & 2) != 0)
                v1471 = v1414;
              else
                v1471 = v1416;
              v2040 = v1471;
              if ((v2308 & 2) != 0)
                v1472 = v1416;
              else
                v1472 = v1414;
              v2052 = v1472;
              if ((v2308 & 2) != 0)
                v1473 = v1415;
              else
                v1473 = v2077;
              v2026 = v1473;
              if ((v2308 & 2) != 0)
                v1474 = v2077;
              else
                v1474 = v1415;
              v2044 = v1474;
              if ((v2308 & 2) != 0)
                v1475 = v1418;
              else
                v1475 = v1417;
              v2048 = v1475;
              if ((v2308 & 2) != 0)
                v1476 = v1417;
              else
                v1476 = v1418;
              v2032 = v1476;
              if ((v2308 & 2) != 0)
                v1477 = v2061;
              else
                v1477 = v1409;
              v2076 = v1477;
              if ((v2308 & 2) != 0)
                v1478 = v1409;
              else
                v1478 = v2061;
              v2060 = v1478;
              if ((v2308 & 2) != 0)
                v1479 = v1420;
              else
                v1479 = v1824;
              v2036 = v1479;
              if ((v2308 & 2) != 0)
                v1480 = v1824;
              else
                v1480 = v1420;
              v2021 = v1480;
              v1481 = v2308 + v2014;
              v1482 = v1888;
              v1483 = v1897;
              if (((v2308 + v2014) & 1) != 0)
                v1484 = v1897;
              else
                v1484 = v1888;
              v1485 = v1884;
              if ((v1481 & 1) != 0)
              {
                v1483 = v1884;
                v1485 = v1901;
              }
              else
              {
                v1482 = v1901;
              }
              if ((v1481 & 2) != 0)
                v1486 = v1485;
              else
                v1486 = v1484;
              if ((v1481 & 2) != 0)
              {
                v1487 = v1482;
              }
              else
              {
                v1484 = v1485;
                v1487 = v1483;
              }
              if ((v1481 & 2) != 0)
                v1482 = v1483;
              v2003 = v1422;
              v1488 = v1746 ^ v1422 ^ v1484;
              v2008 = v1358;
              v1489 = v1745 ^ v1358 ^ v1486;
              v1490 = v1747 ^ v2287 ^ v1487;
              v1998 = v1356;
              v1491 = v1744 ^ v1356 ^ v1482;
              v1492 = *(_DWORD *)(v2292 + 4 * BYTE2(v1488)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1491)), 8);
              HIDWORD(v1493) = *(_DWORD *)(v2292 + 4 * BYTE1(v1490));
              LODWORD(v1493) = HIDWORD(v1493);
              v1494 = (v1493 >> 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1488), 16);
              HIDWORD(v1493) = *(_DWORD *)(v2292 + 4 * HIBYTE(v1488));
              LODWORD(v1493) = HIDWORD(v1493);
              v1495 = (_DWORD *)(v2292 + 4 * BYTE1(v1488));
              v1496 = (_DWORD *)(v2292 + 4 * v1491);
              HIDWORD(v1493) = (v1493 >> 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1489)), 8);
              LODWORD(v1493) = HIDWORD(v1493);
              v1497 = v1494 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1489));
              v1498 = v1492 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1489), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1490)), 24);
              v1499 = *(_DWORD *)(v2292 + 4 * HIBYTE(v1489));
              v1995 = v1423;
              v1500 = v1776 ^ v1775 ^ v1706 ^ v1423 ^ (v1481 + v1498 - v2017);
              v1501 = v2308 + v2290;
              v2290 += v2308;
              v1991 = v1362;
              v1502 = v1776 ^ v1775 ^ v1752 ^ v1362 ^ ((v1497 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1491)), 24))
                                                     - v1481
                                                     + v2290);
              v1503 = v1776 ^ v1775 ^ v1753 ^ __ROR4__((v1493 >> 5) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1490), 21) ^ 0x30AC04FE, 27) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1491)) ^ v2272 ^ 0x15809FC6;
              v1504 = v1751;
              if (!(_DWORD)v1892)
                v1504 = v2189;
              v1505 = v1776 ^ v1775 ^ (((v1504 & v1768) >> v2298) + v1707) ^ __ROR4__(*v1495, 8) ^ __ROR4__(*v1496, 16) ^ __ROR4__(v1499, 24) ^ v2279 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1490));
              v1506 = (_DWORD *)(v2292 + 4 * HIBYTE(v1503));
              v1507 = (_DWORD *)(v2292 + 4 * BYTE2(v1503));
              v1508 = v1743 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1502)), 24) ^ *(_DWORD *)(v2292
                                                                                                 + 4 * BYTE2(v1505)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1500)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1503), 16);
              v1509 = v1742 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1500)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1503)), 8) ^ __ROR4__(*(_DWORD *)(v2292+ 4* v1502), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1505)), 24);
              v1510 = v1741 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1502)), 8) ^ __ROR4__(*(_DWORD *)(v2292+ 4 * HIBYTE(v1500)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1505), 16) ^ v2262 ^ *v1507;
              v1511 = v1740 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1500), 16) ^ __ROR4__(*v1506, 24) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1502)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1505)), 8) ^ v2254;
              v1512 = v1773 ^ v1770 ^ v1739 ^ v2229 ^ *(_DWORD *)(v2292 + 4 * ((v1508 ^ v2245) >> 16)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1511)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * (BYTE1(v1509) ^ BYTE1(v2267))), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1510), 16);
              v1513 = v1738 ^ *(_DWORD *)(v2292 + 4 * ((v1509 ^ v2267) >> 16)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1511), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * ((v1508 ^ v2245) >> 24)), 24) ^ v2224 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1510)), 8);
              LODWORD(v1506) = v1773 ^ v1770 ^ v1750 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1510)), 24) ^ v2234 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * (v1509 ^ v2267)), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * (BYTE1(v1508) ^ BYTE1(v2245))), 8) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1511));
              v1514 = v1773 ^ v1770 ^ v1737 ^ v2238 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1510)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * ((v1509 ^ v2267) >> 24)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * (v1508 ^ v2245)), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1511)), 8);
              HIDWORD(v1516) = *(_DWORD *)(v2292 + 4 * HIBYTE(v1514));
              LODWORD(v1516) = HIDWORD(v1516);
              v1515 = v1516 >> 24;
              HIDWORD(v1516) = *(_DWORD *)(v2292 + 4 * v1513);
              LODWORD(v1516) = HIDWORD(v1516);
              v1517 = ((v1516 >> 16) + v1515 - 2 * ((v1516 >> 16) & v1515)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1512)), 8);
              v1518 = (v1517 ^ -v1517 ^ (*(_DWORD *)(v2292 + 4 * BYTE2(v1506))
                                       - (*(_DWORD *)(v2292 + 4 * BYTE2(v1506)) ^ v1517)))
                    + *(_DWORD *)(v2292 + 4 * BYTE2(v1506));
              v1520 = __PAIR64__(v1436, __ROR4__(*(_DWORD *)(v2292 + 4 * v1514), 16));
              v1519 = *(_DWORD *)(v2292 + 4 * BYTE2(v1512)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1513)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * (v1506 >> 24)), 24) ^ v1520;
              v1521 = (_DWORD *)(v2292 + 4 * BYTE1(v1506));
              v1985 = v1436;
              LODWORD(v1520) = v1436;
              v1522 = (v1520 >> 11) ^ __ROR4__(v1519, 11);
              v1523 = v1705 ^ v2214 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1514)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1512)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1506), 16) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1513));
              LODWORD(v1506) = (v1731 ^ v2219 ^ v1518) + v1749 - 2 * ((v1731 ^ v2219 ^ v1518) & v1749);
              v1524 = v1703 ^ v2210 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1513)), 24) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1514)) ^ __ROR4__(*v1521, 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1512), 16);
              LODWORD(v1520) = __ROR4__(v1522 ^ 0xCB97B9C1, 21);
              v1525 = v1704 ^ v1520 ^ 0xBDCE0E5C;
              v1526 = *(_DWORD *)(v2292 + 4 * BYTE2(v1524));
              v1527 = *(_DWORD *)(v2292 + 4 * BYTE1(v1524));
              v1528 = *(_DWORD *)(v2292 + 4 * BYTE1(v1506));
              v1529 = *(_DWORD *)(v2292 + 4 * v1524);
              v1530 = 4 * (v1506 >> 24);
              v1531 = v2292 + v1530;
              v1532 = v1735 ^ v2185 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1524)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1525)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1523), 16) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1506));
              LODWORD(v1506) = v1734 ^ v2205 ^ __ROR4__(v1527, 8) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1523)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * ((v1731 ^ v2219 ^ v1518) + v1749 - 2 * ((v1731 ^ v2219 ^ v1518) & v1749))), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1525)), 24);
              v1533 = v1736 ^ v2196 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1525)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1523)), 8) ^ __ROR4__(v1529, 16) ^ __ROR4__(*(_DWORD *)(v2292 + v1530), 24);
              v1534 = v1733 ^ v2202 ^ v1526 ^ __ROR4__(v1528, 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1523)), 24) ^ __ROR4__(*(_DWORD *)(v2292+ 4* ((v1704 ^ v1520) ^ 0x5Cu)), 16);
              HIDWORD(v1520) = *(_DWORD *)(v2292 + 4 * v1532);
              LODWORD(v1520) = HIDWORD(v1520);
              v1535 = (v1520 >> 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1533)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1534)), 8) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1506));
              v1536 = *(_DWORD *)(v2292 + 4 * BYTE2(v1534)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * (v1506 >> 24)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1532)), 8) ^ __ROR4__(*(_DWORD *)(v2292+ 4* v1533), 16);
              v1537 = *(_DWORD *)(v2292 + 4 * BYTE2(v1533)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1532)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1506)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1534), 16);
              v1898 = (*(_DWORD *)(v1531 - v1530 + 4 * BYTE2(v1532)) ^ __ROR4__(*(_DWORD *)(v1531- v1530+ 4 * HIBYTE(v1534)), 24) ^ __ROR4__(*(_DWORD *)(v1531- v1530+ 4 * BYTE1(v1533)), 8) ^ __ROR4__(*(_DWORD *)(v1531 - v1530 + 4 * v1506), 16))+ v1481- v1501;
              v1538 = v1699 ^ v2178 ^ v1536;
              v1959 = v1381;
              v1539 = v1702 ^ v1381 ^ v1537;
              v1889 = v1537;
              v1540 = *(_DWORD *)(v2292 + 4 * BYTE2(v1538)) ^ __ROR4__(*(_DWORD *)(v2292+ 4* (v1702 ^ v1381 ^ v1537)), 16);
              v1541 = v1701 ^ v2170 ^ v1898;
              v1542 = (_DWORD *)(v2292 + 4 * HIBYTE(v1541));
              v2014 += v2308;
              v1543 = v1535 - v1481 + v2017;
              v1544 = v1700 ^ v2200 ^ v1543;
              HIDWORD(v1520) = *(_DWORD *)(v2292 + 4 * HIBYTE(v1544));
              LODWORD(v1520) = HIDWORD(v1520);
              v1545 = v1520 >> 24;
              v1546 = (_DWORD *)(v2292 + 4 * HIBYTE(v1538));
              v1547 = v1540 & 0x2000000;
              if ((v1545 & v1540 & 0x2000000) != 0)
                v1547 = -v1547;
              v1548 = v1547 + v1545;
              HIDWORD(v1549) = *v1546;
              LODWORD(v1549) = *v1546;
              v1550 = (v1549 >> 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1539)), 8);
              HIDWORD(v1549) = *(_DWORD *)(v2292 + 4 * (v1700 ^ v2200 ^ v1543));
              LODWORD(v1549) = HIDWORD(v1549);
              v1551 = v1549 >> 16;
              v1552 = (v1549 >> 16) & 0x8000;
              if ((v1552 & v1550) != 0)
                LODWORD(v1552) = -(int)v1552;
              v1553 = v1726 ^ v2154 ^ v1551 & 0xFFFF7FFF ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1541)) ^ (v1552 + v1550);
              v1554 = v1725 ^ v2150 ^ v1540 & 0xFDFFFFFF ^ v1548 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1541)), 8);
              v1555 = v1724 ^ v2129 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1544)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1538)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1539)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * (v1701 ^ v2170 ^ v1898)), 16);
              v1556 = v1723 ^ v2143 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1539)) ^ __ROR4__(*v1542, 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1544)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * (v1699 ^ v2178 ^ v1536)), 16);
              v1557 = v1718 ^ v2098 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1555)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1554)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1556)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1553), 16);
              v1558 = v1717 ^ v2092 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1554)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1553)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1556), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1555)), 24);
              v1559 = v1716 ^ v2124 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1553)) ^ __ROR4__(*(_DWORD *)(v2292+ 4* v1555), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1554)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1556)), 8);
              v1560 = v1715 ^ v2119 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1554), 16) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1555)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1553)), 24) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1556));
              v1561 = (_DWORD *)(v2292 + 4 * BYTE1(v1560));
              v1562 = v2292;
              v1563 = (_DWORD *)(v2292 + 4 * BYTE1(v1557));
              v1564 = v1773 ^ v1775 ^ v1729 ^ v2084 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1560)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1559)), 24) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1558), 16);
              v1565 = v1773 ^ v1775 ^ v1728 ^ v2070 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1560), 16) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1558)) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1559)), 8) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * HIBYTE(v1557)), 24);
              v1566 = v1773 ^ v1775 ^ v1730;
              v1567 = v1566 ^ v2081 ^ __ROR4__(*(_DWORD *)(v2292 + 4 * BYTE1(v1558)), 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * v1559), 16) ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1557)) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1560)), 24);
              v1568 = v1773 ^ v1775 ^ v1727;
              v1569 = v1568 ^ v2065 ^ *(_DWORD *)(v2292 + 4 * BYTE2(v1559)) ^ __ROR4__(*(_DWORD *)(v2292+ 4* v1557), 16) ^ __ROR4__(*v1561, 8) ^ __ROR4__(*(_DWORD *)(v2292 + 4 * HIBYTE(v1558)), 24);
              v1570 = v1974;
              v1571 = *(_DWORD *)(v1974 + 4 * BYTE1(v1567));
              v1572 = *(_DWORD *)(v1974 + ((v1569 >> 22) & 0x3FC));
              v1573 = *(_DWORD *)(v1974 + 4 * BYTE2(v1569));
              v2293 = *(_DWORD *)(v1974 + 4 * BYTE1(v1565));
              v1574 = *(_DWORD *)(v1974 + 4 * BYTE1(v1569));
              v1576 = __ROR4__(*v1563, 8);
              v1575 = v1564 ^ v1576;
              v1577 = *(_DWORD *)(v1974 + 4 * (v1564 ^ v1576));
              v1902 = (_DWORD *)(v1974 + 4 * BYTE2(v1567));
              v1975 = *(_DWORD *)(v1974 + 4 * HIBYTE(v1575));
              v1578 = (_DWORD *)(v1570 + 4 * BYTE2(v1575));
              v1579 = (_DWORD *)(v1570 + 4 * BYTE1(v1575));
              v1580 = (_DWORD *)(v1570 + 4 * v1569);
              v1893 = v1780 ^ v1779;
              v1581 = v1780 ^ v1779 ^ v1709;
              v1582 = v1581 ^ v2040 ^ __ROR4__(v1573, 24) ^ __ROR4__(*(_DWORD *)(v1570 + 4 * v1567), 8) ^ *v1579 ^ __ROR4__(*(_DWORD *)(v1570 + 4 * HIBYTE(v1565)), 16);
              v1583 = v1570;
              v1584 = v1581 ^ v2026 ^ v1574 ^ __ROR4__(v1577, 8) ^ __ROR4__(*(_DWORD *)(v1570 + 4 * BYTE2(v1565)), 24) ^ __ROR4__(*(_DWORD *)(v1570 + 4 * HIBYTE(v1567)), 16);
              v1585 = v1581 ^ v2044 ^ v1571 ^ __ROR4__(v1572, 16) ^ __ROR4__(*v1578, 24) ^ __ROR4__(*(_DWORD *)(v1570 + 4 * v1565), 8);
              v1586 = v1698 ^ v2161 ^ v1537;
              v1587 = ((v1783 & 0xDB9985E4) >> (v1586 & 1) >> !(v1586 & 1)) ^ 0xDB9985E5;
              v1588 = v1696 ^ v2181 ^ v1543;
              v1885 = (v1543 ^ 0x956C8849) - v1536;
              v1589 = v1732 ^ v2175 ^ v1536 ^ (((v1587 & v1971) << v2192) + ((v1587 & v2189) >> v2298));
              v1590 = v1697 ^ v2166 ^ v1898;
              v1591 = (_DWORD *)(v1562 + 4 * HIBYTE(v1589));
              v1592 = (_DWORD *)(v1562 + 4 * BYTE2(v1589));
              v1593 = *(_DWORD *)(v1562 + 4 * v1589);
              v1594 = v1722 ^ v2134 ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1589)), 8) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * HIBYTE(v1586)), 24) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * (v1697 ^ v2166 ^ v1898)), 16) ^ *(_DWORD *)(v1562 + 4 * BYTE2(v1588));
              v1595 = v1721 ^ v2146 ^ *(_DWORD *)(v1562 + 4 * BYTE2(v1590)) ^ __ROR4__(*v1591, 24) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * v1588), 16) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1586)), 8);
              v1596 = v1720 ^ v2158 ^ __ROR4__(*(_DWORD *)(v1562 + 4 * HIBYTE(v1588)), 24) ^ *v1592 ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1590)), 8) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * (v1698 ^ v2161 ^ v1537)), 16);
              v1597 = v1719 ^ v2139 ^ *(_DWORD *)(v1562 + 4 * BYTE2(v1586)) ^ __ROR4__(v1593, 16) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1588)), 8) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * HIBYTE(v1590)), 24);
              v1598 = (_DWORD *)(v1562 + 4 * HIBYTE(v1596));
              v1599 = (_DWORD *)(v1562 + 4 * BYTE2(v1596));
              v1600 = 4 * v1596;
              v1601 = v1714 ^ v2103 ^ __ROR4__(*(_DWORD *)(v1562 + 4 * HIBYTE(v1597)), 24) ^ *(_DWORD *)(v1562 + 4 * BYTE2(v1594)) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1596)), 8) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * v1595), 16);
              LODWORD(v1591) = v1713 ^ v2114 ^ *(_DWORD *)(v1562 + 4 * BYTE2(v1595)) ^ __ROR4__(*v1598, 24) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1597)), 8) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * v1594), 16);
              LODWORD(v1598) = v1712 ^ v2109 ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1594)), 8) ^ __ROR4__(*(_DWORD *)(v1562 + v1600), 16) ^ *(_DWORD *)(v1562 + 4 * BYTE2(v1597)) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * HIBYTE(v1595)), 24);
              v1602 = v1711 ^ v2087 ^ __ROR4__(*(_DWORD *)(v1562 + 4 * BYTE1(v1595)), 8) ^ *v1599 ^ __ROR4__(*(_DWORD *)(v1562 + 4 * v1597), 16);
              v1603 = __ROR4__(*(_DWORD *)(v1562 + 4 * HIBYTE(v1594)), 24);
              LODWORD(v1570) = *(_DWORD *)(v1562 + 4 * BYTE2(v1591));
              v1604 = *(_DWORD *)(v1562 + 4 * BYTE1(v1601));
              v1605 = (_DWORD *)(v1562 + 4 * BYTE1(v1598));
              v1606 = (_DWORD *)(v1562 + 4 * v1598);
              v1607 = v1602 ^ v1603 ^ 0x3498C927;
              v1608 = *(_DWORD *)(v1562 + 4 * HIBYTE(v1607));
              LODWORD(v1599) = *(_DWORD *)(v1562 + 4 * BYTE2(v1601));
              v1609 = *(_DWORD *)(v1562 + 4 * ((v1602 ^ v1603) ^ 0x27u));
              v1610 = (_DWORD *)(v1562 + 4 * BYTE2(v1607));
              v1611 = (_DWORD *)(v1562 + 4 * HIBYTE(v1601));
              v1612 = *(_DWORD *)(v1562 + 4 * v1601);
              v1613 = v1562 + 4 * BYTE1(v1607);
              v1614 = 4 * BYTE1(v1591);
              v1615 = (_DWORD *)(v1562 + v1614);
              v1616 = v1773 ^ v1775 ^ v1710 ^ v2073 ^ v1599 ^ __ROR4__(*(_DWORD *)(v1562+ 4 * v1591), 16) ^ __ROR4__(*(_DWORD *)(v1562+ 4* (v1598 >> 24)), 24) ^ __ROR4__(*(_DWORD *)v1613, 8);
              v1617 = v1773 ^ v1775 ^ v1748 ^ v2076 ^ __ROR4__(v1604, 8) ^ *(_DWORD *)(v1562 + 4 * BYTE2(v1598)) ^ __ROR4__(v1609, 16) ^ __ROR4__(*(_DWORD *)(v1562 + 4 * (v1591 >> 24)), 24);
              v1618 = v1568 ^ v2060 ^ __ROR4__(*v1606, 16) ^ *v1610 ^ __ROR4__(*v1611, 24) ^ __ROR4__(*v1615, 8);
              LODWORD(v1613) = v1566 ^ v2056 ^ v1570 ^ __ROR4__(*v1605, 8) ^ __ROR4__(v1608, 24);
              v1619 = __ROR4__(v1612, 16);
              BYTE1(v1598) = BYTE1(v1613) ^ BYTE1(v1619);
              v1620 = (_DWORD *)(v1583 + 4 * HIBYTE(v1616));
              v1621 = 4 * HIBYTE(v1617);
              v1622 = (_DWORD *)(v1583 + v1621);
              v1623 = &v1622[(v1613 ^ v1619) + v1621 / 0xFFFFFFFFFFFFFFFCLL];
              v1624 = &v1622[v1621 / 0xFFFFFFFFFFFFFFFCLL + v1617];
              v1625 = &v1622[v1621 / 0xFFFFFFFFFFFFFFFCLL + ((v1613 ^ v1619) >> 16)];
              v1626 = &v1622[v1621 / 0xFFFFFFFFFFFFFFFCLL + ((v1613 ^ v1619) >> 24)];
              v1627 = 4 * BYTE1(v1617);
              v1628 = &v1622[v1621 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1627 / 4];
              v1629 = &v1628[BYTE1(v1598) + v1627 / 0xFFFFFFFFFFFFFFFCLL];
              v1630 = &v1628[v1627 / 0xFFFFFFFFFFFFFFFCLL];
              v1631 = &v1628[v1627 / 0xFFFFFFFFFFFFFFFCLL + v1618];
              v1632 = &v1628[v1627 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v1618)];
              v1633 = &v1628[v1627 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v1616)];
              v1634 = &v1628[v1627 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v1618)];
              v1635 = 4 * v1616;
              v1636 = &v1628[v1627 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v1635 / 4];
              v1637 = v1581 ^ v2052 ^ v2293 ^ __ROR4__(*v1902, 24) ^ __ROR4__(v1975, 16) ^ __ROR4__(*v1580, 8);
              if ((v2290 & 1) != 0)
                v1638 = v1582;
              else
                v1638 = v1585;
              if ((v2290 & 1) != 0)
                v1639 = v1584;
              else
                v1639 = v1582;
              if ((v2290 & 1) != 0)
                v1640 = v1637;
              else
                v1640 = v1584;
              if ((v2290 & 1) == 0)
                v1585 = v1637;
              v1641 = (v1889 ^ (v1885 + 1412182386 + v1898)) - 2036773446;
              v27 = (uint64_t)&v1636[v1635 / 0xFFFFFFFFFFFFFFFCLL];
              v1642 = v1893 ^ v1708 ^ v2032 ^ v1641 ^ __ROR4__(*v1625, 24) ^ *v1628 ^ __ROR4__(*v1636, 8) ^ __ROR4__(v1636[v1635 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v1618)], 16);
              v1643 = v1893 ^ v1708 ^ v2021 ^ v1641 ^ __ROR4__(*v1620, 16) ^ __ROR4__(*v1624, 8) ^ *v1629 ^ __ROR4__(*v1632, 24);
              v1644 = v1893 ^ v1708 ^ v2048 ^ v1641 ^ __ROR4__(*v1622, 16) ^ __ROR4__(*v1623, 8) ^ __ROR4__(v1630[BYTE2(v1616)], 24) ^ *v1634;
              v1645 = v1893 ^ v1708 ^ v2036 ^ v1641 ^ __ROR4__(*v1626, 16) ^ __ROR4__(*v1631, 8) ^ *v1633 ^ __ROR4__(v1636[v1635 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v1617)], 24);
              v1646 = (v2290 & 1) != 0 ? v1643 : v1642;
              v1647 = (v2290 & 1) != 0 ? v1644 : v1643;
              if ((v2290 & 1) != 0)
                v1644 = v1645;
              else
                v1642 = v1645;
              v1648 = (v2290 & 2) != 0 ? v1640 : v1638;
              v1649 = (v2290 & 2) != 0 ? v1638 : v1640;
              v1650 = (v2290 & 2) != 0 ? v1585 : v1639;
              v1651 = (v2290 & 2) != 0 ? v1639 : v1585;
              v1327 = v1784;
              v1652 = (v2290 & 2) != 0 ? v1646 : v1644;
              v1653 = (v2290 & 2) != 0 ? v1644 : v1646;
              v1654 = (v2290 & 2) != 0 ? v1642 : v1647;
              v1655 = (v2290 & 2) != 0 ? v1647 : v1642;
              v1656 = v1651 + 1265537869 * ((v1641 ^ 0xB417094) - (v1655 ^ v1648));
              v1657 = v1649 ^ v1641 ^ v1652 ^ v1656;
              v1658 = v1657 ^ v1654 ^ v1641 ^ v1650;
              v1659 = v1648 ^ v1641 ^ v1653 ^ v1658;
              v1660 = v1654 ^ 0xF4BE8F6B;
              v1661 = (v1641 ^ 0xB417094) + 1;
              v1662 = v1658 + 2109551455 * (v1661 + (v1654 ^ 0xF4BE8F6B ^ v1657));
              v1663 = v1656 ^ v1653 ^ v1662;
              v1664 = (v1659 ^ 0xB417094) + 899529087 * ((v1652 ^ 0xF4BE8F6B) + (v1663 ^ 0xB417094)) + 899529087;
              v1665 = v1662 + 251708707 * ((v1641 ^ 0xB417094) - (v1664 ^ v1655));
              v1666 = (char *)*(&off_1015B46D0 + v1981 + 834176559) - 12;
              v1784[v1920] = v1666[BYTE2(v1665) ^ 0x9BLL] ^ (4 * v1666[BYTE2(v1665) ^ 0x9BLL]) ^ 0x67;
              v1784[v1923] = v1666[v1665 ^ 0xD2] ^ (4 * v1666[v1665 ^ 0xD2]);
              v1667 = v1664 ^ (1349560853 * (v1653 ^ 0xB417094)) ^ (1349560853 * (v1665 ^ v1641));
              v1784[v1911] = v1666[BYTE1(v1667) ^ 0xF0] ^ (4 * v1666[BYTE1(v1667) ^ 0xF0]) ^ 0x34;
              v1668 = v1663 ^ v1641;
              v1669 = v1652 ^ v1655 ^ v1657 ^ v1659 ^ v1668;
              v1670 = (v1668 ^ 0xB417094) + 1200987655 * (v1661 + (v1660 ^ v1669));
              v1671 = (char *)*(&off_1015B46D0 + (int)(v1981 ^ 0xCE478159)) - 8;
              v1784[v1925] = v1671[v1670 ^ 0xCELL] ^ (16 * v1671[v1670 ^ 0xCELL]) ^ 0xB5;
              v1784[v1908] = v1666[v1667 ^ 0xC7] ^ (4 * v1666[v1667 ^ 0xC7]) ^ 0xAA;
              v1672 = v1666[HIBYTE(v1667) ^ 0xD0];
              v1784[v1917] = v1672 ^ (4 * v1672) ^ 3;
              v1673 = (char *)*(&off_1015B46D0 + (int)(v1981 ^ 0xCE4785EC)) - 4;
              v1674 = v1673[(BYTE1(v1665) ^ 0x8E ^ -(BYTE1(v1665) ^ 0x8E) ^ ((BYTE1(v1665) ^ 0xFFFFFF39) + 73)) + 72];
              v1784[v1914] = v1674 ^ 0x6F ^ (((4 * v1674) ^ 0x8C) - 104);
              v1784[v1937] = *((_BYTE *)*(&off_1015B46D0 + v1981 + 834174682) + (HIBYTE(v1670) ^ 0x8ALL) - 4) ^ 0xE6;
              v1784[v1931] = v1671[BYTE2(v1667) ^ 6] ^ (16 * v1671[BYTE2(v1667) ^ 6]) ^ 0xE;
              v1784[v1949] = v1671[BYTE2(v1669) ^ 0x5CLL] ^ (16 * v1671[BYTE2(v1669) ^ 0x5CLL]) ^ 0xC;
              v1784[v1943] = v1666[BYTE2(v1670) ^ 0xB2] ^ (4 * v1666[BYTE2(v1670) ^ 0xB2]) ^ 0xF1;
              v1784[v1928] = v1673[BYTE1(v1670) ^ 0xF9] ^ 0x3B ^ (((4 * v1673[BYTE1(v1670) ^ 0xF9]) ^ 0x8C) - 104);
              LOBYTE(v1671) = v1671[HIBYTE(v1669) ^ 0xCALL];
              v1784[v1940] = v1671 ^ (16 * (_BYTE)v1671) ^ 0x76;
              v1784[v1952] = v1666[BYTE1(v1669) ^ 0x4DLL] ^ (4 * v1666[BYTE1(v1669) ^ 0x4DLL]) ^ 0x85;
              LOBYTE(v1671) = v1666[HIBYTE(v1665) ^ 0xFDLL];
              v1784[v1946] = v1671 ^ (4 * (_BYTE)v1671) ^ 0xF4;
              v1784[v1934] = v1666[v1669 ^ 0x5FLL] ^ (4 * v1666[v1669 ^ 0x5FLL]) ^ 1;
              v26 = (uint64_t)&v1615[v1614 / 0xFFFFFFFFFFFFFFFCLL];
              if (!(v1956 < 0x23A024C3 != v2012 + 597697747 < 0x23A024C3
                   ? v1956 < 0x23A024C3
                   : v2012 + 597697747 < v1956))
                break;
              v1974 = v27;
              v1325 = (v1954 - 610602231) | 0x6428010;
              v1335 = v1777;
              v1676 = v1667 ^ 0x95B68273 ^ (((v1667 ^ 0x95B68273) & v1777) >> 1);
              v1324 = v1971;
              v1328 = v2298;
              v1905 = ((v1676 & v1971) << v1778) + ((v1676 & v1764) >> v2298);
              v1677 = (v1325 + 1123279273) ^ v1665 ^ ((((v1325 + 1123279273) ^ v1665) & v1783) >> 1);
              v1334 = v1781;
              v1900 = ((v1677 & v2189) >> v1781) + ((v1677 & v1973) << v2192);
              v1678 = v1669 ^ 0x4F6CB653 ^ (((v1669 ^ 0x4F6CB653) & v1783) >> 1);
              v1896 = ((v1678 & v1971) << v2192) ^ ((v1678 & v1764) >> v2298);
              v1679 = v1670 ^ 0x7E7FF19A ^ (((v1670 ^ 0x7E7FF19A) & v1777) >> 1);
              v1274 = ((v1679 & v1973) << v1778) | ((v1679 & v2189) >> v1781);
              v1680 = v1964;
              v1681 = v1795;
              if ((v2308 & 1) != 0)
                v1682 = v1795;
              else
                v1682 = v1964;
              v1683 = v1792;
              if ((v2308 & 1) != 0)
              {
                v1681 = v1792;
                v1683 = v1788;
              }
              else
              {
                v1680 = v1788;
              }
              v1684 = v1807;
              v1685 = v1803;
              if ((v2308 & 1) != 0)
                v1686 = v1803;
              else
                v1686 = v1807;
              v1687 = v1968;
              if ((v2308 & 1) != 0)
              {
                v1685 = v1968;
                v1687 = v1799;
              }
              else
              {
                v1684 = v1799;
              }
              if ((v2308 & 2) != 0)
                v1322 = v1683;
              else
                v1322 = v1682;
              if ((v2308 & 2) == 0)
                v1682 = v1683;
              v1792 = v1682;
              if ((v2308 & 2) != 0)
                v1688 = v1680;
              else
                v1688 = v1681;
              v1795 = v1688;
              if ((v2308 & 2) != 0)
                v1689 = v1681;
              else
                v1689 = v1680;
              v1788 = v1689;
              if ((v2308 & 2) != 0)
                v1690 = v1687;
              else
                v1690 = v1686;
              v1807 = v1690;
              if ((v2308 & 2) != 0)
                v1323 = v1686;
              else
                v1323 = v1687;
              if ((v2308 & 2) != 0)
                v1691 = v1684;
              else
                v1691 = v1685;
              v1803 = v1691;
              if ((v2308 & 2) != 0)
                v1692 = v1685;
              else
                v1692 = v1684;
              v1799 = v1692;
              v1326 = v2012 + 16;
              v1329 = v1778;
              v1330 = v1783;
              v1331 = v1973;
              v1332 = v1764;
              v1333 = v2192;
            }
            v12 = 0;
            v24 = v1954 - 661176677;
            v1 = v1695;
          }
          v1693 = (void (*)(uint64_t))*(&off_1015B46D0 + (int)(v24 ^ 0xC5014EA6));
          v1693(v27);
          result = ((uint64_t (*)(uint64_t))v1693)(v26);
        }
      }
    }
  }
  if ((v12 ^ 0x79FB2FE1) + ((2 * v12) & 0xF3F65FC2) == 2046504929)
    v1694 = -1926392729;
  else
    v1694 = 1926392715;
  *(_DWORD *)(v1 + 8) = v1694;
  return result;
}

uint64_t sub_100136EF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  char v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v2 = *(&off_1015B46D0
       + (byte_101506BC4[(byte_1014340EC[(-31
                                                                                        * (qword_1015F8558 ^ 0xC0 ^ qword_1015F8458))
                                                                      - 12] ^ 0x6D)
                                                      - 4] ^ (-31 * (qword_1015F8558 ^ 0xC0 ^ qword_1015F8458)))
       + 1551);
  v3 = qword_1015F8558 - (_QWORD)&v8 + *v2;
  qword_1015F8558 = 396727777 * v3 + 0x4FB3C7470DEC97C0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * ((qword_1015F8458 - qword_1015F8558) ^ 0xC0)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * ((qword_1015F8458 - qword_1015F8558) ^ 0xC0))] ^ 0xBE])
                   + 108)
       + 4127);
  v5 = 2142736129
     * ((((unint64_t)&v9 ^ 0x6A3EE9E9DB2877FCLL)
       - 2 * (((unint64_t)&v9 ^ 0x6A3EE9E9DB2877FCLL) & 0x9F466195AC1F0677)
       - 0x60B99E6A53E0F989) ^ 0x88638070146FE582);
  v10 = v5 ^ 0x8B395632;
  v11 = a1;
  v13 = a2;
  v9 = v4 ^ v5;
  v6 = -31 * ((*(_DWORD *)v2 + qword_1015F8558) ^ 0xC0);
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_1014341E8[(byte_1012F6FDC[v6 - 12] ^ 0xBA) - 8] ^ v6)
                                                     + 2111)
                                           - 8))(&v9);
  return v12;
}

uint64_t sub_1001370E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v2 = *(&off_1015B46D0
       + (byte_1014341E0[byte_1012F6FD0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         + qword_1015F92B0) ^ 0xC0))] ^ 0xBE] ^ (-31 * ((qword_1015F8458 + qword_1015F92B0) ^ 0xC0)))
       + 1529);
  v3 = (*v2 + qword_1015F92B0) ^ (unint64_t)&v6;
  qword_1015F92B0 = 396727777 * v3 + 0x6790357934740FC0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = 2142736129
     * ((2 * ((unint64_t)&v7 & 0x39D7354055BE3EE0) - (_QWORD)&v7 - 0x39D7354055BE3EE1) ^ 0xBB33C2B3C9195516);
  v7 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * (qword_1015F92B0 ^ 0xC0 ^ qword_1015F8458)) ^ byte_1012F70D0[byte_101595E00[(-31 * (qword_1015F92B0 ^ 0xC0 ^ qword_1015F8458))] ^ 0x19])
                   + 242)
       + 4182) ^ v4;
  v9 = a1;
  v11 = a2;
  v8 = v4 ^ 0x8B395632;
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + ((-31
                                                                                      * (qword_1015F92B0 ^ 0xC0 ^ *(_DWORD *)v2)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * (qword_1015F92B0 ^ 0xC0 ^ *(_DWORD *)v2))] ^ 0x48])
                                                     + 2155)
                                           - 8))(&v7);
  return v10;
}

uint64_t sub_1001372C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  char v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v2 = *(&off_1015B46D0
       + (byte_1014341E8[(byte_1012F6FDC[(-31
                                                                                        * ((qword_1015F8458
                                                                                          - qword_1015F8560) ^ 0xC0))
                                                                      - 12] ^ 0xB4)
                                                      - 8] ^ (-31 * ((qword_1015F8458 - qword_1015F8560) ^ 0xC0)))
       + 1752);
  v3 = qword_1015F8560 ^ (unint64_t)&v6 ^ *v2;
  qword_1015F8560 = 396727777 * v3 + 0x4FB3C7470DEC97C0;
  *v2 = 396727777 * (v3 ^ 0x6790357934740FC0);
  v4 = 2142736129
     * ((((unint64_t)&v7 | 0xB96A948AC8885D14)
       - ((unint64_t)&v7 | 0x46956B753777A2EBLL)
       + 0x46956B753777A2EBLL) ^ 0xC4719C86ABD0C91DLL);
  v7 = *((_QWORD *)*(&off_1015B46D0
                   + ((-31 * (qword_1015F8560 ^ 0xC0 ^ qword_1015F8458)) ^ byte_1012F70D0[byte_101595E00[(-31 * (qword_1015F8560 ^ 0xC0 ^ qword_1015F8458))] ^ 0xD7])
                   + 164)
       + 4195) ^ v4;
  v8 = v4 ^ 0x8B395632;
  v9 = a1;
  v11 = a2;
  ((void (*)(unint64_t *))((char *)*(&off_1015B46D0
                                                     + (byte_101506DC0[byte_1014342E0[(-31 * (qword_1015F8560 ^ 0xC0 ^ *(_DWORD *)v2))] ^ 7] ^ (-31 * (qword_1015F8560 ^ 0xC0 ^ *(_DWORD *)v2)))
                                                     + 1977)
                                           - 8))(&v7);
  return v10;
}

#error "1001374A0: too big function (funcsize=0)"

#error "10016C2BC: too big function (funcsize=0)"

void sub_1001ACE64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;

  v6 = v4 + 1269 * ((BYTE1(a4) - 75) ^ 0x3E);
  LOBYTE(STACK[0xD82]) = a4;
  v7 = *(unsigned __int8 *)(v5 + v6 - 10304 * (((1667301 * (unint64_t)v6) >> 32) >> 2));
  LOBYTE(STACK[0xE30]) = BYTE2(a4);
  LOBYTE(STACK[0xDE1]) = HIBYTE(a4);
  LOBYTE(STACK[0xD33]) = 85 * (((v7 >> 7) | (2 * v7)) ^ (2 * ((v7 >> 7) | (2 * v7))) ^ 0xCC);
  JUMPOUT(0x1001ABD94);
}

void sub_1001ACED4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  unsigned int v6;

  LOBYTE(STACK[0xD82]) = a4;
  v6 = v4 + 1269 * ((BYTE1(a4) + 124) ^ 0x96);
  LOBYTE(v6) = *(_BYTE *)(v5 + v6 - 10304 * (((1667301 * (unint64_t)v6) >> 32) >> 2));
  LOBYTE(STACK[0xD92]) = HIBYTE(a4);
  LOBYTE(STACK[0xDE1]) = HIBYTE(a4);
  LOBYTE(STACK[0xE40]) = 0;
  LOBYTE(STACK[0xD43]) = 0;
  LOBYTE(STACK[0xD33]) = v6 ^ 0x7B;
  LOBYTE(STACK[0xDF1]) = 0;
  LOBYTE(STACK[0xE30]) = BYTE2(a4);
  JUMPOUT(0x1001ABD94);
}

void sub_1001ACF48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unint64_t v40;
  int v41;
  int v42;
  unint64_t v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  unint64_t v54;
  int v55;
  unsigned int v56;
  unint64_t v57;
  int v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  unint64_t v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unsigned __int8 *v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unint64_t v87;
  unint64_t v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unsigned int v96;
  int v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  int v120;
  unint64_t v121;
  unint64_t v122;
  int v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unsigned int v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  int v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unsigned int v154;
  uint64_t v155;
  unsigned int v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  int v166;
  unsigned int v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unsigned int v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unsigned int v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  __int128 v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unint64_t v208;
  int v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  unint64_t v213;
  unsigned int v214;
  int v215;
  unint64_t v216;
  unint64_t v217;
  int v218;
  int v219;
  unsigned __int8 v220;
  int v221;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unsigned int v232;
  unint64_t v233;
  unint64_t v234;
  unsigned int v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  int v243;
  int v244;
  unsigned int v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  unint64_t v254;
  unsigned int v255;
  unsigned int v256;
  unsigned __int8 v257;
  int v258;
  int v259;
  uint64_t v260;
  int v261;
  int v262;
  int v263;
  unint64_t v264;
  int v265;
  uint64_t v266;
  int v267;
  unsigned int v268;
  int v269;
  uint64_t v270;
  int v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  int v279;
  int v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  uint64_t v287;
  int v288;
  int v289;
  unsigned int v290;
  int v291;
  unint64_t v292;
  int v293;
  uint64_t v294;
  int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  char v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  char v320;
  int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  unsigned int v331;
  int v332;
  unint64_t v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  unsigned int v357;
  char v358;
  int v359;
  char v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  unint64_t v384;
  unint64_t v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unint64_t v390;
  unsigned int v391;
  unint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  unint64_t v396;
  uint64_t v397;
  unsigned int v398;
  uint64_t v399;
  unsigned int v400;
  uint64_t v401;
  unsigned int v402;
  uint64_t v403;
  unsigned int v404;
  uint64_t v405;
  unsigned int v406;
  uint64_t v407;
  unsigned int v408;
  uint64_t v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  uint64_t v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  uint64_t v419;
  unsigned int v420;
  int v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  int v425;
  uint64_t v426;
  unsigned int v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  unsigned int v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unint64_t v442;
  unint64_t v443;
  unint64_t v444;
  unsigned int v445;
  unint64_t v446;
  int v447;
  unint64_t v448;
  unint64_t v449;
  unsigned int v450;
  unint64_t v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  uint64_t v464;
  unsigned int v465;
  uint64_t v466;
  unint64_t v467;
  uint64_t v468;
  uint64_t v469;
  int v470;
  uint64_t v471;
  unint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  unint64_t v477;
  uint64_t v478;
  uint64_t v479;
  unint64_t v480;
  unsigned int v481;
  unint64_t v482;
  unsigned int v483;
  unsigned int v484;
  uint64_t v485;
  unint64_t v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  int v493;
  uint64_t v494;
  unint64_t v495;
  int v496;
  unint64_t v497;
  unint64_t v498;
  unint64_t v499;
  unint64_t v500;
  unint64_t v501;
  uint64_t v502;
  unint64_t v503;
  uint64_t v504;
  unint64_t v505;
  unsigned int v506;
  uint64_t v507;
  uint64_t v508;
  int v509;
  uint64_t v510;
  uint64_t v511;
  unint64_t v512;
  uint64_t v513;
  uint64_t v514;
  unint64_t v515;
  uint64_t v516;
  unint64_t v517;
  unint64_t v518;
  unint64_t v519;
  unint64_t v520;
  unint64_t v521;
  unsigned int v522;
  unsigned int v523;
  uint64_t v524;
  int v525;
  unint64_t v526;
  unsigned int v527;
  uint64_t v528;
  uint64_t v529;
  int v530;
  uint64_t v531;
  uint64_t v532;
  int v533;
  unint64_t v534;
  unint64_t v535;
  uint64_t v536;
  char v537;
  unsigned int v538;
  uint64_t v539;
  unsigned int v540;
  char v541;
  unsigned __int8 v542;
  unsigned int v543;
  uint64_t v544;
  unsigned int v545;
  unint64_t v546;
  unsigned int v547;
  uint64_t v548;
  unint64_t v549;
  unsigned __int8 v550;
  unsigned int v551;
  unint64_t v552;
  unint64_t v553;
  unsigned __int8 v554;
  unsigned __int8 v555;
  unsigned __int8 v556;
  int v557;
  unsigned __int8 v558;
  unsigned int v559;
  unsigned int v560;
  int v561;
  unsigned int v562;
  int v563;
  unsigned __int8 v564;
  int v565;
  int v566;
  int v567;
  uint64_t v568;
  int v569;
  unsigned int v570;
  int v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  unsigned int v576;
  uint64_t v577;
  uint64_t v578;
  unsigned int v579;
  uint64_t v580;
  unint64_t v581;
  unint64_t v582;
  unint64_t v583;
  uint64_t v584;
  unint64_t v585;
  uint64_t v586;
  unint64_t v587;
  unint64_t v588;
  char v589;
  unsigned int v590;
  int v591;
  int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned __int8 v595;
  uint64_t v596;
  unsigned int v597;
  uint64_t v598;
  unsigned int v599;
  unsigned int v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  unint64_t v608;
  uint64_t v609;
  unint64_t v610;
  uint64_t v611;
  unint64_t v612;
  uint64_t v613;
  unint64_t v614;
  unint64_t v615;
  unint64_t v616;
  uint64_t v617;
  uint64_t v618;
  unint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  unint64_t v623;
  uint64_t v624;
  uint64_t v625;
  unint64_t v626;
  unint64_t v627;
  uint64_t v628;
  unint64_t v629;
  unint64_t v630;
  unint64_t v631;
  uint64_t v632;
  unint64_t v633;
  unint64_t v634;
  unint64_t v635;
  uint64_t v636;
  unsigned int v637;
  uint64_t v638;
  unsigned int v639;
  unint64_t v640;
  unint64_t v641;
  unint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  unint64_t v648;
  unint64_t v649;
  unint64_t v650;
  uint64_t v651;
  unint64_t v652;
  unint64_t v653;
  unint64_t v654;
  unint64_t v655;
  int v656;
  uint64_t v657;
  int v658;
  unint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  unint64_t v668;
  unint64_t v669;
  unint64_t v670;
  uint64_t v671;
  unint64_t v672;
  unint64_t v673;
  unint64_t v674;
  int v675;
  int v676;
  uint64_t v677;
  uint64_t v678;
  unint64_t v679;
  uint64_t v680;
  unint64_t v681;
  unint64_t v682;
  unint64_t v683;
  uint64_t v684;
  uint64_t v685;
  unint64_t v686;
  uint64_t v687;
  uint64_t v688;
  unint64_t v689;
  unint64_t v690;
  unint64_t v691;
  uint64_t v692;
  uint64_t v693;
  int v694;
  unint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  unint64_t v701;
  unint64_t v702;
  unint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  unint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  unint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  unint64_t v715;
  uint64_t v716;
  unint64_t v717;
  unint64_t v718;
  uint64_t v719;
  unint64_t v720;
  unint64_t v721;
  uint64_t v722;
  unint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  unint64_t v728;
  uint64_t v729;
  uint64_t v730;
  unint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  unint64_t v735;
  unint64_t v736;
  unint64_t v737;
  unint64_t v738;
  unint64_t v739;
  unint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  unint64_t v747;
  uint64_t v748;
  uint64_t v749;
  unint64_t v750;
  uint64_t v751;
  uint64_t v752;
  unint64_t v753;
  unint64_t v754;
  uint64_t v755;
  uint64_t v756;
  unint64_t v757;
  uint64_t v758;
  unint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  unint64_t v763;
  uint64_t v764;
  unint64_t v765;
  uint64_t v766;
  uint64_t v767;
  unint64_t v768;
  uint64_t v769;
  unint64_t v770;
  unint64_t v771;
  int v772;
  unint64_t v773;
  unint64_t v774;
  uint64_t v775;
  int v776;
  unint64_t v777;
  int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  unsigned int v783;
  int v784;
  unsigned int v785;
  unsigned int v786;
  int v787;
  int v788;
  int v789;
  unsigned int v790;
  int v791;
  int v792;
  int v793;
  unsigned int v794;
  int v795;
  unsigned int v796;
  unsigned int v797;
  unsigned int v798;
  int v799;
  int v800;
  unsigned int v801;
  int v802;
  unsigned int v803;
  int v804;
  unint64_t v805;
  unsigned int v806;
  int v807;
  unsigned int v808;
  int v809;
  unsigned __int8 v810;
  int v811;
  int v812;
  unsigned int v813;
  unsigned int v814;
  unsigned int v815;
  unsigned int v816;
  unsigned int v817;
  unsigned int v818;
  int v819;
  int v820;
  unsigned int v821;
  unsigned int v822;
  int v823;
  int v824;
  int v825;
  int v826;
  unsigned int v827;
  unsigned int v828;
  unsigned int v829;
  unsigned int v830;
  int v831;
  unsigned int v832;
  int v833;
  unsigned int v834;
  unsigned int v835;
  char v836;
  int v837;
  unsigned int v838;
  int v839;
  int v840;
  int v841;
  unsigned int v842;
  unsigned int v843;
  unsigned int v844;
  unsigned int v845;
  unsigned int v846;
  int v847;
  unsigned int v848;
  unsigned int v849;
  unsigned int v850;
  int v851;
  unsigned int v852;
  unsigned int v853;
  unsigned int v854;
  unsigned int v855;
  int v856;
  int v857;
  int v858;
  int v859;
  int v860;
  int v861;
  int v862;
  unsigned int v863;
  unsigned int v864;
  int v865;
  int v866;
  int v867;
  unsigned int v868;
  unsigned int v869;
  int v870;
  int v871;
  unsigned int v872;
  int v873;
  int v874;
  unsigned int v875;
  unsigned int v876;
  unsigned __int8 v877;
  unint64_t v878;
  unsigned int v879;
  unsigned int v880;
  unsigned int v881;
  unsigned int v882;
  unint64_t v883;
  unint64_t v884;
  unint64_t v885;
  unint64_t v886;
  unsigned int v887;
  unint64_t v888;
  unint64_t v889;
  unsigned int v890;
  unint64_t v891;
  int v892;
  int v893;
  int v894;
  int v895;
  unint64_t v896;
  unint64_t v897;
  int v898;
  char v899;
  unint64_t v900;
  unsigned __int8 v901;
  int v902;
  unsigned int v903;
  char v904;
  unint64_t v905;
  char v906;
  unsigned int v907;
  unsigned int v908;
  _BYTE *v909;
  unsigned __int8 v910;
  unsigned int v911;
  char v912;
  unsigned int v913;
  unsigned int v914;
  unsigned int v915;
  int v916;
  unsigned int v917;

  v6 = LODWORD(STACK[0xBD8]) + 866796121;
  STACK[0x8F8] = 0;
  STACK[0x960] = 0;
  STACK[0xC90] = 0;
  STACK[0x968] = 0;
  v7 = 0;
  STACK[0xC88] = 0;
  LODWORD(v8) = 0;
  STACK[0x910] = 0;
  LODWORD(STACK[0x900]) = 0;
  LODWORD(STACK[0x8E0]) = 0;
  STACK[0x978] = 0;
  LODWORD(STACK[0x8E8]) = 0;
  STACK[0xBC0] = 0;
  STACK[0x8D0] = 0;
  LODWORD(STACK[0x798]) = 0;
  STACK[0xBB8] = 0;
  STACK[0x8F0] = 0;
  STACK[0x950] = 0;
  STACK[0x958] = 0;
  LOBYTE(STACK[0xD82]) = a4;
  LOBYTE(STACK[0xE30]) = BYTE2(a4);
  LOBYTE(STACK[0xD33]) = BYTE1(a4);
  v9 = *(unsigned __int8 *)(v5 + (1269 * ((BYTE3(a4) - 75) ^ v6 ^ 0xBD49F2EF) + 4891995) % 0x2840);
  LOBYTE(STACK[0xDF1]) = 0;
  v10 = 85 * (((v9 >> 7) | (2 * v9)) ^ 0xFFFFFFE4);
  LOBYTE(STACK[0xE40]) = 0;
  LOBYTE(STACK[0xDE1]) = v10;
  LOBYTE(STACK[0xD92]) = BYTE3(a4);
  LOBYTE(STACK[0xD43]) = 0;
  LOBYTE(STACK[0xE50]) = 0;
  LOBYTE(STACK[0xE01]) = 0;
  LOBYTE(STACK[0xD53]) = 0;
  LOBYTE(STACK[0xD63]) = 0;
  LOBYTE(STACK[0xE11]) = 0;
  LOBYTE(STACK[0xD14]) = 0;
  LOBYTE(STACK[0xDA2]) = 0;
  LOBYTE(STACK[0xDB2]) = 0;
  v11 = (((BYTE2(a4) - 29) ^ 0x95 ^ *(_BYTE *)(v5
                                                              + (1269
                                                                             * ((BYTE2(a4) - 29) ^ 0x42)
                                                                             - 10304
                                                                             * ((416826
                                                                               * (unint64_t)(1269
                                                                                                  * ((BYTE2(a4) - 29) ^ 0x42u))) >> 32)))) >> 1) | ((((a4 >> 16) - 29) ^ 0xFFFFFF95 ^ *(unsigned __int8 *)(v5 + (1269 * ((BYTE2(a4) - 29) ^ 0x42) - 10304 * ((416826 * (unint64_t)(1269 * ((BYTE2(a4) - 29) ^ 0x42u))) >> 32)))) << 7);
  v12 = 1269 * ((BYTE3(a4) - 29) ^ 0x42);
  STACK[0x8D8] = (((BYTE3(a4) - 29) ^ 0x95 ^ *(_BYTE *)(v5
                                                                       + (v12
                                                                                      - 10304
                                                                                      * ((416826 * (unint64_t)v12) >> 32)))) >> 1) | ((((a4 >> 24) - 29) ^ 0xFFFFFF95 ^ *(unsigned __int8 *)(v5 + (v12 - 10304 * ((416826 * (unint64_t)v12) >> 32)))) << 7);
  LODWORD(STACK[0x90C]) = (((v10 + 124) ^ 0x2C) + 69) ^ 0x4D ^ *(unsigned __int8 *)(v5
                                                                                  + 1269
                                                                                  * ((v10 + 124) ^ 0x14)
                                                                                  + 9216747
                                                                                  - 10304
                                                                                  * (((1667301 * (unint64_t)(1269 * ((v10 + 124) ^ 0x14u) + 9216747)) >> 32) >> 2));
  LODWORD(STACK[0x890]) = -1585085552;
  STACK[0x948] = a4 >> 8;
  LODWORD(v13) = a4;
  STACK[0xB18] = (unint64_t)&STACK[0x1BB0];
  LODWORD(v14) = 12;
  LODWORD(STACK[0x940]) = 1;
  LODWORD(STACK[0x92C]) = 4;
  LODWORD(STACK[0x920]) = 3;
  STACK[0x930] = 15;
  STACK[0x8B8] = 8;
  LODWORD(STACK[0x8C8]) = 2;
  STACK[0x8C0] = 14;
  LODWORD(v15) = 7;
  STACK[0x8B0] = 6;
  LODWORD(STACK[0x918]) = 13;
  LODWORD(STACK[0x8A0]) = 9;
  STACK[0x8A8] = 10;
  STACK[0x898] = 5;
  LODWORD(STACK[0x938]) = 11;
LABEL_2:
  v16 = v6 - 808178307;
  LODWORD(STACK[0xC00]) = STACK[0xCA0];
  v17 = (unsigned __int8 *)STACK[0xCA8];
  while (1)
  {
    LODWORD(STACK[0xC50]) = v7;
    v18 = *v17 ^ v8;
    LODWORD(STACK[0xC18]) = v16 ^ 0x3FFEB8EC;
    LODWORD(STACK[0xC80]) = v18;
    v19 = 1089 * ((v18 ^ ((v16 ^ 0xEC) + 108)) ^ 0x3B1);
    v20 = (unint64_t)*(&off_1015B46D0 + v16 + 1927407781) - 4;
    v21 = (*(_QWORD *)(v20 + 8 * (v19 - 1568 * ((2739138 * (unint64_t)v19) >> 32))) ^ ((v18 ^ 0xFFFFFF81) + (v18 ^ ((v16 ^ 0x3FFEB8EC) - 651813524))) ^ 0x20)
        - 29;
    v22 = *(unsigned __int8 *)(v5
                             + (1269 * (v21 ^ 0x42)
                                            - 10304
                                            * ((416826 * (unint64_t)(1269 * (v21 ^ 0x42u))) >> 32))) ^ v21 ^ 0xFFFFFF95;
    v23 = v17[1] ^ LODWORD(STACK[0x940]) ^ ((v22 >> 1) | (v22 << 7));
    LODWORD(STACK[0x940]) = v23;
    v24 = v4
        + 1269
        * (((LODWORD(STACK[0x8C8]) ^ 0xB6 ^ *(_QWORD *)(v20
                                                                       + 8
                                                                       * (1089
                                                                                      * (v23 ^ 0x8A)
                                                                                      - 1568
                                                                                      * ((2739138
                                                                                        * (unint64_t)(1089 * (v23 ^ 0x8Au))) >> 32))))
                           - 75) ^ 0x3E);
    v25 = *(unsigned __int8 *)(v5 + v24 - 10304 * (((1667301 * (unint64_t)v24) >> 32) >> 2));
    v26 = (85 * (((v25 >> 7) | (2 * v25)) ^ (2 * ((v25 >> 7) | (2 * v25))) ^ 0xFFFFFFCC)) ^ v17[2];
    v27 = ((85 * (((v25 >> 7) | (2 * v25)) ^ (2 * ((v25 >> 7) | (2 * v25))) ^ 0xCC)) ^ v17[2]);
    STACK[0xC10] = v27;
    LODWORD(STACK[0x8C8]) = v26;
    LODWORD(v27) = (LODWORD(STACK[0x920]) ^ ((v26 ^ 0xFFFFFF81) + (v26 ^ 0xFFFFFFDB)) ^ *(_QWORD *)(v20
                                                                                                  + 8 * (1089 * (v27 ^ 0x36A) - 1568 * ((2739138 * (unint64_t)(1089 * (v27 ^ 0x36A))) >> 32))) ^ 0x20)
                 - 29;
    v28 = v17[4] ^ LODWORD(STACK[0x92C]);
    LODWORD(v27) = (v27 ^ 0x35)
                 + *(unsigned __int8 *)(v5
                                      + 1269 * (v27 ^ 0xE8)
                                      + 2610333
                                      - 10304
                                      * (((1667301
                                                       * (unint64_t)(1269 * (v27 ^ 0xE8u)
                                                                          + 2610333)) >> 32) >> 2));
    v29 = ((v27 >> 1) | ((_DWORD)v27 << 7)) ^ v17[3];
    LODWORD(STACK[0xC78]) = v29;
    v30 = *(_QWORD *)(v20
                                     + 8
                                     * (1089 * (v29 ^ 0xD8)
                                                    - 1568
                                                    * ((2739138
                                                      * (unint64_t)(1089 * (v29 ^ 0xD8u))) >> 32))) ^ v28;
    LODWORD(v27) = v17[5] ^ STACK[0x898];
    LODWORD(STACK[0xC60]) = v30;
    LODWORD(v27) = v27 ^ ((v30 ^ 0x37) + (v30 ^ 0x6D)) ^ *(_QWORD *)(v20
                                                                   + 8
                                                                   * (1089 * (v30 ^ 0x3DC)
                                                                                  - 1568
                                                                                  * ((2739138
                                                                                    * (unint64_t)(1089 * (v30 ^ 0x3DCu))) >> 32)));
    LODWORD(STACK[0xC70]) = v27;
    v31 = v17[8] ^ STACK[0x8B8];
    LODWORD(v27) = v17[6] ^ STACK[0x8B0] ^ *(_QWORD *)(v20
                                                                   + 8
                                                                   * (1089 * (v27 ^ 0xAA)
                                                                                  - 1568
                                                                                  * ((2739138
                                                                                    * (unint64_t)(1089 * (v27 ^ 0xAAu))) >> 32)));
    LODWORD(STACK[0xC58]) = v27;
    LODWORD(v27) = v17[7] ^ v15 ^ *(_QWORD *)(v20
                                                          + 8
                                                          * (1089 * (v27 ^ 0x3C)
                                                                         - 1568
                                                                         * ((2739138
                                                                           * (unint64_t)(1089
                                                                                              * (v27 ^ 0x3Cu))) >> 32)));
    LODWORD(STACK[0xC48]) = v27;
    v32 = *(_QWORD *)(v20
                                     + 8
                                     * (1089 * (v27 ^ 0x3C)
                                                    - 1568
                                                    * ((2739138
                                                      * (unint64_t)(1089 * (v27 ^ 0x3Cu))) >> 32))) ^ v31;
    v33 = v17[9] ^ LODWORD(STACK[0x8A0]) ^ ((v32 ^ 0x37) + (v32 ^ 0x6D)) ^ *(_QWORD *)(v20
                                                                                     + 8
                                                                                     * (1089 * (v32 ^ 0x3DC) - 1568 * ((2739138 * (unint64_t)(1089 * (v32 ^ 0x3DCu))) >> 32)));
    LODWORD(STACK[0xC40]) = v33;
    LODWORD(v27) = 1269 * ((v17[10] + 124) ^ 0x96) + 977130;
    LODWORD(v27) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v33 ^ 0xAA)
                                            - 1568
                                            * ((2739138 * (unint64_t)(1089 * (v33 ^ 0xAAu))) >> 32))) ^ STACK[0x8A8] ^ *(unsigned __int8 *)(v5 + v27 - 10304 * (((1667301 * (unint64_t)v27) >> 32) >> 2));
    LODWORD(STACK[0xC38]) = v27 ^ 0xDD;
    LODWORD(v27) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v27 ^ 0x3A7)
                                            - 1568
                                            * ((2739138 * (unint64_t)(1089 * (v27 ^ 0x3A7u))) >> 32))) ^ LODWORD(STACK[0x938]) ^ ((v27 ^ 0x4C) + (v27 ^ 0x16));
    v34 = v17[12] ^ v14;
    LODWORD(v27) = 1269 * (((v27 >> 5) | (8 * v27)) ^ 0x87) + 2937735;
    v35 = v17[15] ^ STACK[0x930];
    LODWORD(v27) = (37
                  * (*(unsigned __int8 *)(v5
                                        + v27
                                        - 10304
                                        * (((1667301 * (unint64_t)v27) >> 32) >> 2)) ^ 0x34)) ^ v17[11];
    LODWORD(STACK[0x938]) = v27;
    LODWORD(v27) = v34 ^ *(_QWORD *)(v20
                                   + 8
                                   * (1089 * (v27 ^ 0x8A)
                                                  - 1568
                                                  * ((2739138 * (unint64_t)(1089 * (v27 ^ 0x8Au))) >> 32)));
    LODWORD(STACK[0xC30]) = v27;
    v36 = *(_QWORD *)(v20
                                     + 8
                                     * (1089 * (v27 ^ 0x3C)
                                                    - 1568
                                                    * ((2739138
                                                      * (unint64_t)(1089 * (v27 ^ 0x3Cu))) >> 32))) ^ v17[13] ^ LODWORD(STACK[0x918]);
    LODWORD(v27) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v36 ^ 0x3DC)
                                            - 1568 * ((2739138 * (unint64_t)(1089 * (v36 ^ 0x3DCu))) >> 32))) ^ STACK[0x8C0] ^ v17[14] ^ ((v36 ^ 0xFFFFFF37) + (v36 ^ 0x6D));
    LODWORD(STACK[0xC28]) = v27;
    v37 = *(_QWORD *)(v20
                                     + 8
                                     * (1089 * (v27 ^ 0xAA)
                                                    - 1568
                                                    * ((2739138
                                                      * (unint64_t)(1089 * (v27 ^ 0xAAu))) >> 32))) ^ v35;
    v38 = ((v37 ^ 0x37) + (v37 ^ 0x6D)) ^ v13 ^ *(_QWORD *)(v20
                                                          + 8
                                                          * (1089 * (v37 ^ 0x3DC)
                                                                         - 1568
                                                                         * ((2739138
                                                                           * (unint64_t)(1089 * (v37 ^ 0x3DCu))) >> 32)));
    LODWORD(v27) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v38 ^ 0x34A)
                                            - 1568
                                            * ((2739138 * (unint64_t)(1089 * (v38 ^ 0x34Au))) >> 32))) ^ STACK[0x948] ^ ((v38 ^ 0xFFFFFFA1) + (v38 ^ 0xFFFFFFFB));
    v39 = (v27 ^ 0xFFFFFFA1) + (v27 ^ 0xFFFFFFFB);
    v40 = v27 ^ 0x20;
    STACK[0x948] = v40;
    LODWORD(v40) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v40 ^ 0x36A)
                                            - 1568
                                            * ((2739138 * (unint64_t)(1089 * (v40 ^ 0x36Au))) >> 32))) ^ v11 ^ v39;
    LODWORD(STACK[0xC20]) = v40;
    LODWORD(v40) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v40 ^ 0xAA)
                                            - 1568
                                            * ((2739138 * (unint64_t)(1089 * (v40 ^ 0xAAu))) >> 32))) ^ LODWORD(STACK[0x90C]);
    v41 = (v40 ^ 0x37) + (v40 ^ 0x6D);
    LODWORD(v40) = v40 ^ 0xFFFFFFB6;
    LODWORD(STACK[0x90C]) = v40;
    LODWORD(v40) = v40;
    STACK[0xC08] = v40;
    LODWORD(v40) = (*(_QWORD *)(v20
                              + 8
                              * (1089 * (v40 ^ 0x36A)
                                             - 1568
                                             * ((2739138 * (unint64_t)(1089 * (v40 ^ 0x36A))) >> 32))) ^ v41 ^ 0x20)
                 + 124;
    v42 = *(unsigned __int8 *)(v5
                             + 1269 * (v40 ^ 0x14)
                             + 9216747
                             - 10304
                             * (((1667301
                                              * (unint64_t)(1269 * (v40 ^ 0x14u) + 9216747)) >> 32) >> 2)) ^ STACK[0x8D8] ^ ((v40 ^ 0x2C) + 69);
    LODWORD(v40) = 1269
                 * (((*(_QWORD *)(v20
                                                 + 8
                                                 * (1089 * (v42 ^ 0xC7)
                                                                - 1568
                                                                * ((2739138
                                                                  * (unint64_t)(1089
                                                                                     * (v42 ^ 0xC7u))) >> 32))) ^ 0xB6)
                                    - 75) ^ 0x3E)
                 + 1958067;
    LODWORD(v40) = *(unsigned __int8 *)(v5
                                      + v40
                                      - 10304
                                      * (((1667301 * (unint64_t)v40) >> 32) >> 2));
    v43 = (85
         * (((v40 >> 7) | (2 * (_DWORD)v40)) ^ (2 * ((v40 >> 7) | (2 * (_DWORD)v40))) ^ 0xFFFFFFCC)) ^ STACK[0x968];
    STACK[0x968] = v43;
    LODWORD(v40) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v43 ^ 0x8A)
                                            - 1568
                                            * ((2739138 * (unint64_t)(1089 * (v43 ^ 0x8Au))) >> 32))) ^ STACK[0x958];
    STACK[0x958] = v40 ^ 0xFFFFFFB6;
    LODWORD(v40) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v40 ^ 0x3DC)
                                            - 1568
                                            * ((2739138 * (unint64_t)(1089 * (v40 ^ 0x3DCu))) >> 32))) ^ STACK[0x950] ^ ((v40 ^ 0x37) + (v40 ^ 0x6D));
    STACK[0x950] = v40 ^ 0x20;
    v44 = *(_QWORD *)(v20
                    + 8
                    * (1089 * (v40 ^ 0x34A)
                                   - 1568
                                   * ((2739138 * (unint64_t)(1089 * (v40 ^ 0x34Au))) >> 32))) ^ STACK[0x8F8] ^ ((v40 ^ 0xFFFFFFA1) + (v40 ^ 0xFFFFFFFB));
    LODWORD(v40) = *(_QWORD *)(v20
                             + 8
                             * (1089 * (v44 ^ 0xAA)
                                            - 1568
                                            * ((2739138 * (unint64_t)(1089 * (v44 ^ 0xAAu))) >> 32))) ^ LODWORD(STACK[0x8E0]);
    v45 = 1089
        * ((*(_QWORD *)(v20
                                       + 8
                                       * (1089 * (v44 ^ 0xAA)
                                                      - 1568
                                                      * ((2739138
                                                        * (unint64_t)(1089 * (v44 ^ 0xAAu))) >> 32))) ^ LOBYTE(STACK[0x8E0])) ^ 0x3DC);
    v46 = *(_QWORD *)(v20 + 8 * (v45 - 1568 * ((2739138 * (unint64_t)v45) >> 32))) ^ LODWORD(STACK[0x8E8]) ^ ((v40 ^ 0x37) + (v40 ^ 0x6D));
    v47 = *(_QWORD *)(v20
                    + 8
                    * (1089 * (v46 ^ 0x34A)
                                   - 1568
                                   * ((2739138 * (unint64_t)(1089 * (v46 ^ 0x34Au))) >> 32))) ^ LODWORD(STACK[0x900]) ^ ((v46 ^ 0xFFFFFFFB) + (v46 ^ 0xFFFFFFA1));
    v48 = 1269
        * (((*(_QWORD *)(v20
                                        + 8
                                        * (1089 * (v47 ^ 0xAA)
                                                       - 1568
                                                       * ((2739138
                                                         * (unint64_t)(1089 * (v47 ^ 0xAAu))) >> 32))) ^ 0xB6)
                           + 124) ^ 0x14)
        + 9216747;
    v49 = *(unsigned __int8 *)(STACK[0xBD0]
                             + v48
                             - 10304 * (((1667301 * (unint64_t)v48) >> 32) >> 2)) ^ STACK[0x910] ^ ((((*(_QWORD *)(v20 + 8 * (1089 * (v47 ^ 0xAA) - 1568 * ((2739138 * (unint64_t)(1089 * (v47 ^ 0xAAu))) >> 32))) ^ 0xB6) + 124) ^ 0x2C) + 69);
    v50 = 1089
        * ((*(_BYTE *)(STACK[0xBD0]
                                      + v48
                                      - 10304 * (((1667301 * (unint64_t)v48) >> 32) >> 2)) ^ STACK[0x910] ^ ((((*(_QWORD *)(v20 + 8 * (1089 * (v47 ^ 0xAA) - 1568 * ((2739138 * (unint64_t)(1089 * (v47 ^ 0xAAu))) >> 32))) ^ 0xB6) + 124) ^ 0x2C) + 69)) ^ 0xC7);
    v51 = *(_QWORD *)(v20 + 8 * (v50 - 1568 * ((2739138 * (unint64_t)v50) >> 32))) ^ STACK[0x8F0];
    v52 = STACK[0x960] ^ 0xFFFFFFB6 ^ *(_QWORD *)(v20
                                                + 8
                                                * (1089 * (v51 ^ 0x3C)
                                                               - 1568
                                                               * ((2739138
                                                                 * (unint64_t)(1089
                                                                                    * (v51 ^ 0x3Cu))) >> 32)));
    v53 = 1269 * (((v52 >> 5) | (8 * v52)) ^ 0x86) + 2937735;
    v54 = 37
        * (*(unsigned __int8 *)(STACK[0xBD0]
                              + v53
                              - 10304 * (((1667301 * (unint64_t)v53) >> 32) >> 2)) ^ 0x34u);
    STACK[0x960] = v54;
    v55 = *(_QWORD *)(v20
                    + 8
                    * (1089 * (v54 ^ 0x8A)
                                   - 1568
                                   * ((2739138 * (unint64_t)(1089 * (v54 ^ 0x8Au))) >> 32))) ^ STACK[0x8D0];
    v56 = 1089
        * ((*(_QWORD *)(v20
                                       + 8
                                       * (1089 * (v54 ^ 0x8A)
                                                      - 1568
                                                      * ((2739138
                                                        * (unint64_t)(1089 * (v54 ^ 0x8Au))) >> 32))) ^ STACK[0x8D0]) ^ 0x3DC);
    v57 = v55 ^ 0xFFFFFFB6;
    STACK[0xB70] = v20;
    LOBYTE(v54) = ((v55 ^ 0x37) + (v55 ^ 0x6D)) ^ *(_QWORD *)(v20
                                                            + 8
                                                            * (v56
                                                                           - 1568
                                                                           * ((2739138 * (unint64_t)v56) >> 32)));
    v58 = (8 * (v54 & 0x1F)) | (v54 >> 5);
    v5 = STACK[0xBD0];
    LODWORD(v54) = (37
                  * (*(unsigned __int8 *)(STACK[0xBD0]
                                        + 1269 * (v58 ^ 0x45)
                                        + 8564481
                                        - 10304
                                        * (((1667301 * (unint64_t)(1269 * (v58 ^ 0x45u) + 8564481)) >> 32) >> 2)) ^ v58 ^ 0xB)) ^ LODWORD(STACK[0xC80]);
    LODWORD(v54) = 1269 * (((v54 >> 5) | (8 * v54)) ^ 0x86) + 2937735;
    LODWORD(STACK[0x920]) = LODWORD(STACK[0xC78]) ^ 0x52;
    LODWORD(STACK[0x92C]) = LODWORD(STACK[0xC60]) ^ 0xB6;
    v59 = v32 ^ 0xB6u;
    LODWORD(STACK[0x918]) = v36 ^ 0xB6;
    STACK[0x930] = v37 ^ 0xB6u;
    v13 = v38 ^ 0x20u;
    v60 = LODWORD(STACK[0xC20]) ^ 0x20;
    v61 = v44 ^ 0x20u;
    v62 = v47 ^ 0x20;
    v15 = LODWORD(STACK[0xC48]) ^ 0xFFFFFFB6;
    v8 = 37
       * (*(unsigned __int8 *)(v5
                             + v54
                             - 10304 * (((1667301 * (unint64_t)v54) >> 32) >> 2)) ^ 0x34u);
    v63 = LODWORD(STACK[0xC58]) ^ 0xFFFFFFB6;
    v14 = LODWORD(STACK[0xC30]) ^ 0xFFFFFFB6;
    v64 = LODWORD(STACK[0xC70]) ^ 0x20u;
    v65 = v42 ^ 0x4Du;
    v66 = LODWORD(STACK[0xC40]) ^ 0x20;
    v67 = LODWORD(STACK[0xC28]) ^ 0x20u;
    v68 = LODWORD(STACK[0xC38]) ^ 0x10u;
    v69 = v40 ^ 0xFFFFFFB6;
    STACK[0x8D0] = v57;
    v70 = v57;
    LODWORD(v20) = STACK[0xC50];
    STACK[0x910] = v49 ^ 0x4Du;
    LODWORD(STACK[0x900]) = v62;
    STACK[0x8F8] = v61;
    STACK[0x8F0] = v51 ^ 0xFFFFFFB6;
    LODWORD(STACK[0x8E8]) = v46 ^ 0x20;
    LODWORD(STACK[0x8E0]) = v69;
    STACK[0x8D8] = v65;
    STACK[0x8C0] = v67;
    STACK[0x8B8] = v59;
    STACK[0x8B0] = v63;
    STACK[0x8A8] = v68;
    LODWORD(STACK[0x8A0]) = v66;
    STACK[0x898] = v64;
    if ((v20 & 1) != 0)
      break;
    v7 = 0;
    v71 = LODWORD(STACK[0xC18]) - 651813428;
    v16 = (LODWORD(STACK[0xC18]) - 836144623) | 0xC140603;
    v72 = STACK[0x978] + 1927405709 + v16;
    v17 += 16;
    STACK[0x978] = v72;
    v4 = 1958067;
    v11 = v60;
    if (v72 >= LODWORD(STACK[0xC00]))
    {
      STACK[0x768] = v8;
      STACK[0x778] = v15;
      STACK[0x780] = v14;
      v73 = (v71 + 802765508) & 0xCDBFAFAD;
      v74 = STACK[0x950];
      LODWORD(v75) = LOBYTE(STACK[0xDF1]);
      v76 = LOBYTE(STACK[0xDE1]);
      v77 = LOBYTE(STACK[0xD14]) - 29;
      v78 = (unint64_t)STACK[0x948] << (((v71 - 60) & 0xADu) - 125);
      v79 = (STACK[0x8F8] << 56) | ((unint64_t)LODWORD(STACK[0x900]) << 32) | ((unint64_t)STACK[0x910] << 24);
      v80 = ((unint64_t)LODWORD(STACK[0x90C]) << 32) | (v13 << 56);
      LODWORD(STACK[0xB68]) = LOBYTE(STACK[0xE01]);
      LODWORD(v81) = LOBYTE(STACK[0xE40]);
      v82 = &v17[-STACK[0x978]];
      STACK[0xCA8] = (unint64_t)v82;
      LODWORD(v8) = LOBYTE(STACK[0xDA2]);
      v83 = LOBYTE(STACK[0xE50]);
      v84 = LOBYTE(STACK[0xD33]);
      LODWORD(STACK[0xAF8]) = LOBYTE(STACK[0xD92]);
      v85 = LOBYTE(STACK[0xD53]);
      v86 = v11;
      LODWORD(v87) = LOBYTE(STACK[0xD82]);
      LODWORD(v17) = LOBYTE(STACK[0xDB2]);
      v88 = v80 & 0xFFFFFFFF0000FFFFLL | ((unint64_t)STACK[0x968] << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)STACK[0x8D8] << 24) | v78;
      v89 = LOBYTE(STACK[0xE30]);
      v90 = LODWORD(STACK[0x8E8]);
      v95 = v79 & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)STACK[0x8F0] << 16);
      LOBYTE(v91) = STACK[0xD63];
      v92 = *(unsigned __int8 *)(v5
                               + 1269 * (v77 ^ 0xE8)
                               + 2610333
                               - 10304
                               * (((1667301
                                                * (unint64_t)(1269 * (v77 ^ 0xE8u) + 2610333)) >> 32) >> 2))
          + (v77 ^ 0x35);
      STACK[0xB00] = LOBYTE(STACK[0xD43]);
      LODWORD(STACK[0x770]) = v86;
      v93 = (v95 & 0xFFFFFFFFFFFF00FFLL | (v90 << 40) | ((unint64_t)STACK[0x960] << 8) | v70) ^ ((unint64_t)LODWORD(STACK[0x8E0]) << 48);
      STACK[0xBE0] = v93;
      STACK[0x760] = v93 ^ 0x13A75FA896742C70;
      v94 = v74 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)STACK[0x958] << 8) | v88 ^ ((unint64_t)v86 << 40);
      STACK[0xBD8] = v94;
      STACK[0x758] = v94 ^ 0xDB8F598617DC0588;
      LODWORD(v15) = ((v92 >> 1) | (v92 << 7)) ^ 0x52;
      LODWORD(v95) = LOBYTE(STACK[0xE11]);
      v96 = v73;
      STACK[0x978] = 0;
      goto LABEL_21;
    }
  }
  v97 = LODWORD(STACK[0xC18]) - 1693878621;
  v98 = ((unint64_t)(v46 ^ 0x20u) << 40) | ((unint64_t)(v49 ^ 0x4Du) << 24) | ((unint64_t)v69 << 48);
  v99 = (unint64_t)STACK[0x948] << (LOBYTE(STACK[0xC18]) - 63);
  STACK[0xCA8] = (unint64_t)v17;
  v100 = v98 | ((unint64_t)v62 << 32);
  v101 = STACK[0xC08] << 32;
  STACK[0x788] = v13;
  v102 = v101 & 0xFFFFFFFF00000000 | (v13 << 56) | (unsigned __int16)(STACK[0x958] << 8) | ((unint64_t)STACK[0x968] << 16) & 0xFFFFFFFF00FFFF00 | ((unint64_t)v65 << 24) | STACK[0x950] | v99;
  LODWORD(STACK[0x770]) = v60;
  v103 = v102 + ((unint64_t)v60 << 40);
  v104 = v103 ^ STACK[0xBD8];
  v105 = v103 ^ STACK[0x758];
  v106 = (LODWORD(STACK[0x92C]) << 24) | ((unint64_t)LODWORD(STACK[0x920]) << 32);
  v107 = v100 & 0xFFFFFFFFFF0000FFLL | (v61 << 56) | ((unint64_t)(v51 ^ 0xB6u) << 16) | ((unint64_t)STACK[0x960] << 8) | v57;
  v108 = (LODWORD(STACK[0x918]) << 16) | ((unint64_t)v67 << 8);
  STACK[0x778] = v15;
  STACK[0x768] = v8;
  v109 = v106 & 0xFFFFFFFFFFFF0000 | v15 | (v8 << 56) | ((unint64_t)v63 << 8);
  v110 = v107 ^ STACK[0x760];
  v111 = v108 | STACK[0x930];
  STACK[0x780] = v14;
  v112 = v107 ^ STACK[0xBE0];
  v113 = (v109 & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)v64 << 16))
       + ((unint64_t)LODWORD(STACK[0x940]) << 48);
  v114 = v111 & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v14 << 24) | ((unint64_t)v66 << 48) | (v59 << 56) | (v68 << 40) | ((unint64_t)LODWORD(STACK[0x938]) << 32);
  v115 = v113 ^ (STACK[0xC10] << 40);
  v116 = STACK[0xC88] ^ ((unint64_t)LODWORD(STACK[0xB7C]) << 40) ^ ((STACK[0xB48] << 56) | (unsigned __int16)(STACK[0xB30] << 8) | ((unint64_t)STACK[0xB38] << 16) & 0xFFFFFFFF00FFFF00 | ((unint64_t)LODWORD(STACK[0xB58]) << 48) | ((unint64_t)LODWORD(STACK[0xB68]) << 32) | ((unint64_t)STACK[0xB28] << 24) | STACK[0xB90]);
  v117 = LODWORD(STACK[0xB50]);
  STACK[0xBB8] ^= v114;
  STACK[0xBB0] = v116 ^ v114;
  v118 = STACK[0xB40] | (unint64_t)(v117 << 48) | ((unint64_t)LODWORD(STACK[0xB80]) << 32);
  v119 = LODWORD(STACK[0xB88]);
  STACK[0xBC0] ^= v115;
  STACK[0xBA8] = ((v118 & 0xFFFFFFFF000000FFLL | (unsigned __int16)(STACK[0xB60] << 8) | (v119 << 40) | ((unint64_t)STACK[0xC68] << 24) | ((unint64_t)STACK[0xB00] << 16))
                + (STACK[0xB20] << 56)) ^ STACK[0xC90] ^ v115;
  STACK[0x760] = v110;
  STACK[0xBA0] = v110 ^ 0xDBF9E9D8493CB8D8;
  STACK[0x758] = v105;
  STACK[0xB98] = v105 ^ 0x9E5B9BB8183D979BLL;
  LODWORD(STACK[0xB10]) = STACK[0xCA0];
  STACK[0xB08] = 8 * STACK[0x978];
  STACK[0xBE0] = v112;
  STACK[0xBD8] = v104;
  while (1)
  {
    v120 = 0;
    v96 = (v97 + 1003856365) & 0xFFDFEFAD;
    v121 = STACK[0xBB8];
    STACK[0xBF8] = STACK[0xBB8];
    v122 = STACK[0xBC0];
    STACK[0xBF0] = STACK[0xBC0];
    do
    {
      v123 = 0;
      STACK[0xBB8] = v121;
      LODWORD(STACK[0xBC8]) = v120;
      STACK[0xBC0] = v122;
      LODWORD(STACK[0xBE8]) = v96 ^ 0xC0BBD71E;
      v124 = STACK[0xBF0];
      v125 = STACK[0xBA0];
      v126 = STACK[0xB98];
      v127 = STACK[0xBF8];
      v122 = 0;
      v121 = 0;
      do
      {
        STACK[0xC50] = v127;
        STACK[0xC88] = v121;
        STACK[0xC90] = v122;
        LODWORD(STACK[0xC80]) = v123;
        v128 = HIDWORD(v126);
        v129 = HIDWORD(v124);
        STACK[0xC60] = v124;
        v130 = v124;
        STACK[0xC78] = ((uint64_t)(v126 << 63) >> 63) & v124;
        STACK[0xC58] = ((HIDWORD(v126) & 0x80000) * (unint64_t)HIDWORD(v124)) ^ ((HIDWORD(v126) & 0x100000)
                                                                                      * (unint64_t)HIDWORD(v124)) ^ ((HIDWORD(v126) & 0x200000) * (unint64_t)HIDWORD(v124));
        STACK[0xC40] = (v126 & 8) * v124;
        STACK[0xC48] = (v126 & 0x200) * v124;
        STACK[0xC30] = (v126 & 0x10) * v124;
        STACK[0xC70] = ((HIDWORD(v126) & 0x10000000) * (unint64_t)HIDWORD(v124)) ^ ((HIDWORD(v126) & 0x20000000)
                                                                                         * (unint64_t)HIDWORD(v124)) ^ ((HIDWORD(v126) & 0x40000000) * (unint64_t)HIDWORD(v124));
        STACK[0xC38] = (v126 & 0x80) * (unint64_t)v124;
        STACK[0xC28] = (v126 & 0x20) * v124;
        STACK[0xC20] = (v126 & 0x40) * v124;
        STACK[0xC18] = ((WORD2(v126) & 0x200) * (unint64_t)HIDWORD(v124)) ^ ((WORD2(v126) & 0x100)
                                                                                  * (unint64_t)HIDWORD(v124)) ^ HIDWORD(v124) & ((uint64_t)(v126 << 31) >> 63) ^ ((BYTE4(v126) & 2) * (unint64_t)HIDWORD(v124)) ^ ((BYTE4(v126) & 4) * (unint64_t)HIDWORD(v124)) ^ ((BYTE4(v126) & 8) * (unint64_t)HIDWORD(v124)) ^ ((BYTE4(v126) & 0x10) * (unint64_t)HIDWORD(v124));
        STACK[0xC10] = (v126 & 0x100) * v124;
        STACK[0xC08] = (v126 & 0x400) * v124;
        STACK[0xC00] = (v126 & 0x1000) * v124;
        STACK[0xC68] = (v126 & 0x20000000) * v124;
        v131 = STACK[0xC18] ^ ((BYTE4(v126) & 0x80) * (unint64_t)HIDWORD(v124));
        v132 = STACK[0xC58] ^ ((HIDWORD(v126) & 0x400000) * (unint64_t)HIDWORD(v124)) ^ ((HIDWORD(v126) & 0x800000)
                                                                                              * (unint64_t)HIDWORD(v124));
        v133 = ((v126 & 4) * v124) ^ ((v126 & 2) * v124) ^ STACK[0xC40] ^ STACK[0xC30] ^ STACK[0xC28] ^ STACK[0xC20] ^ STACK[0xC38] ^ STACK[0xC10] ^ STACK[0xC48] ^ STACK[0xC08] ^ ((v126 & 0x800) * v130) ^ STACK[0xC00] ^ ((v126 & 0x2000) * v124) ^ ((v126 & 0x4000) * v124) ^ (((unsigned __int16)v126 & 0x8000) * (unint64_t)v130) ^ ((v126 & 0x10000) * v130);
        STACK[0xC58] = (LODWORD(STACK[0xBE8]) - 1296337140) & 0x8DBFBFED;
        v134 = HIDWORD(v125);
        v135 = HIDWORD(STACK[0xC50]);
        v136 = ((v126 & 0x80000000) * (unint64_t)v124) ^ ((v126 & 0x40000000)
                                                                                           * v124) ^ STACK[0xC78];
        v137 = v131 ^ ((BYTE4(v126) & 0x40) * (unint64_t)HIDWORD(v124));
        v138 = ((WORD2(v126) & 0x800) * (unint64_t)HIDWORD(v124)) ^ ((WORD2(v126) & 0x1000)
                                                                          * (unint64_t)HIDWORD(v124)) ^ ((WORD2(v126) & 0x2000) * (unint64_t)HIDWORD(v124)) ^ ((WORD2(v126) & 0x4000) * (unint64_t)HIDWORD(v124)) ^ ((WORD2(v126) & 0x8000) * (unint64_t)HIDWORD(v124)) ^ ((HIDWORD(v126) & 0x10000) * (unint64_t)HIDWORD(v124));
        v139 = v132 ^ ((HIDWORD(v126) & 0x1000000) * (unint64_t)HIDWORD(v124));
        v140 = ((v126 & 0x800000) * v130) ^ ((v126 & 0x1000000) * v130) ^ ((v126 & 0x2000000) * v130) ^ ((v126 & 0x4000000) * v130) ^ ((v126 & 0x8000000) * v130) ^ ((v126 & 0x10000000) * v130) ^ STACK[0xC68];
        v142 = STACK[0xC50];
        v143 = STACK[0xC50];
        v144 = v139 ^ ((HIDWORD(v126) & 0x2000000) * (unint64_t)v129);
        v145 = ((uint64_t)(v125 << 63) >> 63) & v142;
        STACK[0xC78] = v145;
        v146 = (v142 * (v125 & 0x20)) ^ (v142 * (v125 & 0x10)) ^ (v142
                                                                                            * (v125 & 8)) ^ (v142 * (v125 & 4)) ^ (v142 * (v125 & 2)) ^ v145;
        STACK[0xC68] = v146;
        v147 = v133 ^ ((v126 & 0x20000) * v130) ^ ((v126 & 0x40000) * v130) ^ ((v126 & 0x80000) * v130) ^ ((v126 & 0x100000) * v130) ^ ((v126 & 0x200000) * v130) ^ ((v126 & 0x400000) * v130) ^ v140;
        v148 = STACK[0xC58];
        v149 = HIDWORD(v126) ^ v126;
        v150 = v144 ^ ((HIDWORD(v126) & 0x4000000) * (unint64_t)v129);
        v151 = v129 ^ STACK[0xC60];
        v152 = v147 ^ v136;
        v153 = (v142 * (v125 & 0x20000000)) ^ (v142 * (v125 & 0x40000000)) ^ (v142 * (v125 & 0x10000000)) ^ (v142 * (v125 & 0x8000000)) ^ (v142 * (v125 & 0x4000000)) ^ (v142 * (v125 & 0x2000000)) ^ (v142 * (v125 & 0x1000000)) ^ (v142 * (v125 & 0x800000)) ^ (v142 * (v125 & 0x400000)) ^ (v142 * (v125 & 0x200000)) ^ (v142 * (v125 & 0x100000)) ^ (v142 * (v125 & 0x80000)) ^ (v142 * (v125 & 0x40000)) ^ (v142 * (v125 & 0x20000)) ^ (v142 * (v125 & 0x10000)) ^ (v142 * (unint64_t)((unsigned __int16)v125 & 0x8000)) ^ (v142 * (v125 & 0x2000)) ^ (v142 * (v125 & 0x1000)) ^ (v142 * (v125 & 0x4000)) ^ (v142 * (v125 & 0x800)) ^ (v142 * (v125 & 0x400)) ^ (v142 * (v125 & 0x200)) ^ (v142 * (v125 & 0x100)) ^ (v142 * (unint64_t)(v125 & 0x80)) ^ (v142 * (v125 & 0x40)) ^ v146;
        v154 = v129 ^ LODWORD(STACK[0xC60]);
        if (((HIDWORD(v126) ^ v126) & 1) != 0)
          v155 = v129 ^ LODWORD(STACK[0xC60]);
        else
          v155 = 0;
        v156 = v135 ^ v129;
        v141 = (v135 * (unint64_t)(HIDWORD(v125) & 0x400000)) ^ (v135
                                                                                    * (unint64_t)(HIDWORD(v125) & 0x800000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x1000000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x2000000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x4000000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x8000000));
        v157 = v135 & ((uint64_t)(v125 << 31) >> 63) ^ (v135 * (unint64_t)(BYTE4(v125) & 2)) ^ (v135 * (unint64_t)(BYTE4(v125) & 4)) ^ (v135 * (unint64_t)(BYTE4(v125) & 8)) ^ (v135 * (unint64_t)(BYTE4(v125) & 0x10)) ^ (v135 * (unint64_t)(BYTE4(v125) & 0x20)) ^ (v135 * (unint64_t)(BYTE4(v125) & 0x40)) ^ (v135 * (unint64_t)(BYTE4(v125) & 0x80)) ^ (v135 * (unint64_t)(WORD2(v125) & 0x100)) ^ (v135 * (unint64_t)(WORD2(v125) & 0x200)) ^ (v135 * (unint64_t)(WORD2(v125) & 0x400)) ^ (v135 * (unint64_t)(WORD2(v125) & 0x800)) ^ (v135 * (unint64_t)(WORD2(v125) & 0x1000)) ^ (v135 * (unint64_t)(WORD2(v125) & 0x2000)) ^ (v135 * (unint64_t)(WORD2(v125) & 0x4000)) ^ (v135 * (unint64_t)(WORD2(v125) & 0x8000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x10000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x20000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x40000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x80000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x100000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x200000)) ^ v141 ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x10000000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x20000000)) ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x40000000));
        v158 = ((v149 & 0x800) * (unint64_t)v154) ^ ((v149 & 0x400) * (unint64_t)v154) ^ v155 ^ (v151 * (unint64_t)((HIDWORD(v126) ^ v126) & 2)) ^ (v151 * (unint64_t)(v149 & 4)) ^ (v151 * (unint64_t)(v149 & 8)) ^ (v151 * (unint64_t)(v149 & 0x10)) ^ (v151 * (unint64_t)((HIDWORD(v126) ^ v126) & 0x20)) ^ (v151 * (unint64_t)(v149 & 0x40)) ^ (v151 * (unint64_t)(v149 & 0x80)) ^ ((v149 & 0x100) * (unint64_t)v154) ^ ((v149 & 0x200) * (unint64_t)v154) ^ ((v149 & 0x1000) * (unint64_t)v154) ^ ((v149 & 0x2000) * (unint64_t)v154) ^ ((v149 & 0x4000) * (unint64_t)v154) ^ (((unsigned __int16)v149 & 0x8000) * (unint64_t)v154) ^ ((v149 & 0x10000) * (unint64_t)v154) ^ ((v149 & 0x20000) * (unint64_t)v154) ^ ((v149 & 0x40000) * (unint64_t)v154) ^ ((v149 & 0x80000) * (unint64_t)v154);
        v159 = (((v128 ^ v134) & 0x100000)
              * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x80000)
                                                                              * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x1000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x4000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x8000) * (unint64_t)(v135 ^ v129)) ^ ((v135 ^ v129) * (unint64_t)((v128 ^ v134) & 1)) ^ ((v135 ^ v129) * (unint64_t)((v128 ^ v134) & 2)) ^ ((v135 ^ v129) * (unint64_t)((v128 ^ v134) & 4)) ^ ((v135 ^ v129) * (unint64_t)((v128 ^ v134) & 8)) ^ ((v135 ^ v129) * (unint64_t)((v128 ^ v134) & 0x10)) ^ ((v135 ^ v129) * (unint64_t)((v128 ^ v134) & 0x40)) ^ ((v135 ^ v129) * (unint64_t)((v128 ^ v134) & 0x20)) ^ ((v135 ^ v129) * (unint64_t)((v128 ^ v134) & 0x80)) ^ (((v128 ^ v134) & 0x100) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x200) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x400) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x800) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x2000) * (unint64_t)(v135 ^ v129));
        v160 = (((v128 ^ v134) & 0x20000)
              * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x10000)
                                                                              * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x40000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x200000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x400000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x800000) * (unint64_t)(v135 ^ v129));
        v161 = v137 ^ ((WORD2(v126) & 0x400) * (unint64_t)v129) ^ ((HIDWORD(v126) & (STACK[0xC58] + 1986023539))
                                                                                      * (unint64_t)v129) ^ v138 ^ ((HIDWORD(v126) & 0x20000) * (unint64_t)v129) ^ ((HIDWORD(v126) & 0x40000) * (unint64_t)v129) ^ v150 ^ ((HIDWORD(v126) & 0x8000000) * (unint64_t)v129);
        v162 = v157 ^ (v135 * (unint64_t)(HIDWORD(v125) & 0x80000000));
        v163 = v153 ^ (v142 * (unint64_t)(v125 & 0x80000000));
        v164 = v157 ^ v153;
        v165 = (((v128 ^ v134) & 0x1000000)
              * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x2000000)
                                                                              * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x10000000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x4000000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x20000000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x8000000) * (unint64_t)(v135 ^ v129)) ^ (((v128 ^ v134) & 0x40000000) * (unint64_t)(v135 ^ v129));
        LODWORD(v126) = v126 ^ v125;
        LODWORD(v125) = HIDWORD(v125) ^ v125;
        v166 = v143;
        v167 = v143 ^ STACK[0xC60];
        v168 = v158 ^ ((v149 & 0x100000) * (unint64_t)v154) ^ ((v149 & 0x200000) * (unint64_t)v154) ^ ((v149 & 0x400000) * (unint64_t)v154) ^ ((v149 & 0x800000) * (unint64_t)v154) ^ ((v149 & 0x1000000) * (unint64_t)v154) ^ ((v149 & 0x2000000) * (unint64_t)v154);
        v169 = v161 ^ STACK[0xC70];
        v170 = ((v126 & 0x1000000) * v167) ^ ((v126 & 0x800000) * v167) ^ (((unsigned __int16)v126 & 0x8000)
                                                                         * (unint64_t)v167) ^ ((v126 & 0x4000) * v167) ^ (v167 * (v126 & 2)) ^ (v167 * (v126 & 8)) ^ (v167 * (v126 & 1)) ^ (v167 * (v126 & 4)) ^ (v167 * (v126 & 0x10)) ^ (v167 * (v126 & 0x20)) ^ (v167 * (v126 & 0x40)) ^ (v167 * (unint64_t)(v126 & 0x80)) ^ ((v126 & 0x100) * v167) ^ ((v126 & 0x200) * v167) ^ ((v126 & 0x400) * v167) ^ ((v126 & 0x800) * v167) ^ ((v126 & 0x1000) * v167) ^ ((v126 & 0x2000) * v167) ^ ((v126 & 0x10000) * v167) ^ ((v126 & 0x20000) * v167);
        v171 = v168 ^ ((v149 & 0x4000000) * (unint64_t)v154) ^ ((v149 & 0x8000000) * (unint64_t)v154) ^ ((v149 & 0x20000000) * (unint64_t)v154) ^ ((v149 & 0x10000000) * (unint64_t)v154) ^ ((v149 & 0x40000000) * (unint64_t)v154);
        v172 = v170 ^ ((v126 & 0x40000) * v167) ^ ((v126 & 0x80000) * v167) ^ ((v126 & 0x100000) * v167) ^ ((v126 & 0x200000) * v167) ^ ((v126 & 0x400000) * v167) ^ ((v126 & 0x2000000) * v167) ^ ((v126 & 0x4000000) * v167) ^ ((v126 & 0x8000000) * v167) ^ ((v126 & 0x10000000) * v167) ^ ((v126 & 0x20000000) * v167) ^ ((v126 & 0x40000000) * v167);
        v173 = v142 ^ v135;
        v174 = (v173 * (v125 & 0x100000)) ^ ((v125 & 0x200000) * v173) ^ (v173 * (v125 & 2)) ^ (v173 * (v125 & 1)) ^ (v173 * (v125 & 4)) ^ (v173 * (v125 & 8)) ^ (v173 * (v125 & 0x10)) ^ (v173 * (v125 & 0x20)) ^ (v173 * (v125 & 0x40)) ^ (v173 * (unint64_t)(v125 & 0x80)) ^ (v173 * (v125 & 0x100)) ^ (v173 * (v125 & 0x200)) ^ (v173 * (v125 & 0x400)) ^ (v173 * (v125 & 0x800)) ^ (v173 * (v125 & 0x1000)) ^ (v173 * (v125 & 0x2000)) ^ ((v125 & 0x4000) * v173) ^ (v173 * (unint64_t)((unsigned __int16)v125 & 0x8000)) ^ ((v125 & 0x10000) * v173) ^ (v173 * (v125 & 0x20000));
        v175 = v159 ^ v160 ^ v165;
        v176 = v174 ^ ((v125 & 0x40000) * v173) ^ ((v125 & 0x80000) * v173) ^ (v173 * (v125 & 0x400000)) ^ ((v125 & 0x800000) * v173) ^ (v173 * (v125 & 0x1000000)) ^ ((v125 & 0x2000000) * v173) ^ (v173 * (v125 & 0x4000000)) ^ ((v125 & 0x8000000) * v173) ^ ((v125 & 0x10000000) * v173) ^ (v173 * (v125 & 0x20000000)) ^ ((v125 & 0x40000000) * v173);
        v177 = v166 ^ v151 ^ v135;
        v178 = (((v149 ^ v125) & 0x8000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x10000)
                                                                                  * (unint64_t)v177) ^ (v177 * (unint64_t)((v149 ^ v125) & 2)) ^ (v177 * (unint64_t)((v149 ^ v125) & 1)) ^ (v177 * (unint64_t)((v149 ^ v125) & 4)) ^ (v177 * (unint64_t)((v149 ^ v125) & 8)) ^ (v177 * (unint64_t)((v149 ^ v125) & 0x10)) ^ (v177 * (unint64_t)((v149 ^ v125) & 0x20)) ^ (v177 * (unint64_t)((v149 ^ v125) & 0x40)) ^ (v177 * (unint64_t)((v149 ^ v125) & 0x80)) ^ (((v149 ^ v125) & 0x100) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x200) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x400) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x800) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x1000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x2000) * (unint64_t)v177);
        v179 = v178 ^ (((v149 ^ v125) & 0x4000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x20000)
                                                                                         * (unint64_t)v177) ^ (((v149 ^ v125) & 0x40000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x80000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x100000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x200000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x400000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x800000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x1000000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x2000000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x4000000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x8000000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x10000000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x20000000) * (unint64_t)v177) ^ (((v149 ^ v125) & 0x40000000) * (unint64_t)v177);
        v180 = v175 ^ (((HIDWORD(v126) ^ HIDWORD(v125)) & 0x80000000) * (unint64_t)v156);
        v181 = v172 ^ ((v126 & 0x80000000) * (unint64_t)v167);
        LODWORD(v175) = v164 ^ v172 ^ v175;
        v182 = 2 * v152;
        v183 = v169 ^ ((v128 & 0x80000000) * (unint64_t)v129);
        v184 = v152 ^ v169 ^ v171;
        v185 = v176 ^ ((v125 & 0x80000000) * (unint64_t)v173);
        v176 <<= 33;
        v186 = (v164 << 33) ^ (2 * v163) ^ v176;
        LODWORD(v175) = v152 ^ v169 ^ v175 ^ v171;
        v187 = (2 * v152) ^ (v163 >> 31) ^ (2 * v162) ^ v176;
        v188 = v152 >> 31;
        v189 = v179 ^ (((v149 ^ v125) & 0x80000000) * (unint64_t)v177);
        v190 = v175 ^ v179;
        v191 = 2 * v183;
        v183 >>= 31;
        v192 = v187 ^ (v162 >> 31) ^ (v185 >> 31);
        *((_QWORD *)&v193 + 1) = v184;
        *(_QWORD *)&v193 = v180;
        v194 = (v171 ^ ((v149 & 0x80000000) * (unint64_t)v154)) >> 31;
        v195 = (v163 >> 31) ^ STACK[0xC88] ^ v182 ^ v188 ^ v191 ^ v183 ^ (2 * v162) ^ ((v162 ^ v181) >> 31) ^ (v185 >> 31) ^ (2 * v180) ^ (v193 >> 31) ^ v194 ^ v186 ^ (v189 >> 31) ^ (v186 >> 1) ^ (v186 >> 2) ^ (v186 >> 7);
        v196 = v192 ^ (2 * (v181 ^ v163));
        v197 = (STACK[0xC68] << 58) ^ (STACK[0xC78] << 63);
        v198 = v195 ^ (v192 << 63) ^ (v196 << 62);
        v124 = STACK[0xBD8];
        v122 = v197 ^ STACK[0xC90] ^ (v197 >> 1) ^ (v197 >> 2) ^ (v197 >> 7) ^ v188 ^ v191 ^ v183 ^ v194 ^ v196 ^ (v190 << 33) ^ ((v196 ^ (unint64_t)(v190 << 33)) >> 2) ^ ((v196 ^ (unint64_t)(v190 << 33)) >> 1) ^ ((v196 ^ (unint64_t)(v190 << 33)) >> 7);
        v121 = v198 ^ (v196 << 57);
        v123 = 1;
        v125 = STACK[0xBF8];
        v126 = STACK[0xBF0];
        v127 = STACK[0xBE0];
      }
      while ((STACK[0xC80] & 1) == 0);
      v120 = 1;
      STACK[0xBF8] = STACK[0xBB0];
      STACK[0xBF0] = STACK[0xBA8];
      v96 = v148;
    }
    while ((STACK[0xBC8] & 1) == 0);
    if (LODWORD(STACK[0x798]) != ((v148 - 8) ^ 0xA5))
    {
      STACK[0xC88] = v121;
      STACK[0xC90] = v122;
      v199 = 0;
      v200 = (v148 + 1314100984) ^ 0xDB0FFD8C;
      v201 = LOBYTE(STACK[0xDE1]);
      v202 = LOBYTE(STACK[0xD82]) - 29;
      v203 = LOBYTE(STACK[0xD43]);
      v204 = LOBYTE(STACK[0xD33]) + 124;
      v205 = (((LOBYTE(STACK[0xD82]) - 29) ^ 0xE8u) * (v200 - 217888308) + 2610333) % 0x5080;
      v206 = LOBYTE(STACK[0xE50]);
      STACK[0xB90] = LOBYTE(STACK[0xE11]);
      v207 = LOBYTE(STACK[0xE30]);
      v208 = LOBYTE(STACK[0xD14]);
      if (v205 >> 6 >= 0xA1)
        v205 -= 10304;
      STACK[0xC68] = LOBYTE(STACK[0xD92]);
      v5 = STACK[0xBD0];
      v209 = *(unsigned __int8 *)(STACK[0xBD0] + v205);
      LODWORD(STACK[0xB58]) = LOBYTE(STACK[0xD53]);
      v210 = LOBYTE(STACK[0xDB2]);
      v211 = LOBYTE(STACK[0xDA2]);
      v212 = LOBYTE(STACK[0xD63]);
      v213 = LOBYTE(STACK[0xDF1]);
      v214 = (v206 - 29) ^ 0xFFFFFF95 ^ *(unsigned __int8 *)(v5
                                                           + (1269 * ((v206 - 29) ^ 0x42)
                                                                          - 10304
                                                                          * ((416826
                                                                            * (unint64_t)(1269
                                                                                               * ((v206 - 29) ^ 0x42u))) >> 32)));
      v215 = (v214 >> 1) | (v214 << 7);
      v216 = LOBYTE(STACK[0xE40]);
      v217 = (((v209 + (v202 ^ 0x35)) >> 1) | ((v209 + (v202 ^ 0x35)) << 7)) ^ 0x52u;
      v218 = ((v204 ^ 0x2C) + 69) ^ 0x4D ^ *(unsigned __int8 *)(v5
                                                              + 1269 * (v204 ^ 0x14)
                                                              + 9216747
                                                              - 10304
                                                              * (((1667301
                                                                               * (unint64_t)(1269 * (v204 ^ 0x14u)
                                                                                                  + 9216747)) >> 32) >> 2));
      v219 = LOBYTE(STACK[0xE01]);
      goto LABEL_22;
    }
    v5 = STACK[0xBD0];
    if (LODWORD(STACK[0xB10]) > STACK[0x978])
      break;
    v97 = v148 - 1001755035;
    STACK[0xBB0] = v121 ^ STACK[0xB08];
    LODWORD(STACK[0x798]) = 1;
    STACK[0xBA8] = v122;
  }
  STACK[0xC88] = v121;
  STACK[0xC90] = v122;
  LODWORD(STACK[0x798]) = 0;
  v82 = (unsigned __int8 *)STACK[0xCA8];
  v95 = STACK[0xB90];
  v81 = STACK[0xB60];
  v85 = STACK[0xB58];
  v84 = STACK[0xB50];
  v13 = STACK[0x788];
  v76 = STACK[0xB80];
  v83 = STACK[0xB7C];
  v8 = STACK[0xB48];
  v91 = STACK[0xB38];
  v75 = STACK[0xB40];
  v15 = STACK[0xB30];
  v17 = (unsigned __int8 *)STACK[0xB28];
  v87 = STACK[0xB20];
  v89 = STACK[0xB88];
LABEL_21:
  STACK[0x788] = v13;
  v200 = (v96 + 73288716) & 0x7EFEBF6F;
  v220 = v82[13];
  v221 = v82[2] + 124;
  v222 = v200 + 1269 * (v221 ^ 0x14) - 208672830;
  STACK[0xB90] = v82[15] ^ v95;
  v223 = (v221 ^ 0x2C) + 69;
  v218 = v82[1] ^ v84;
  v224 = v82[11] + 124;
  v201 = v82[3] ^ v76;
  v225 = v82[9];
  v226 = (v89 ^ v223 ^ 0x4D ^ *(unsigned __int8 *)(v5 + v222 % 0x2840)) + 124;
  STACK[0xC68] = v82[4] ^ LODWORD(STACK[0xAF8]);
  LODWORD(STACK[0xB58]) = v225 ^ v85;
  v217 = *v82 ^ v87;
  v216 = v82[6] ^ v81;
  v227 = 1269 * (((v220 ^ v91) - 75) ^ 0xE9) + 4891995;
  v203 = v82[5] ^ STACK[0xB00];
  v213 = v82[7] ^ v75;
  v228 = *(unsigned __int8 *)(v5 + v227 - 10304 * (((1667301 * (unint64_t)v227) >> 32) >> 2));
  v211 = v82[8] ^ v8;
  v208 = v82[14] ^ v15;
  v210 = v82[12] ^ v17;
  v215 = v82[10] ^ v83;
  v219 = LODWORD(STACK[0xB68]) ^ ((v224 ^ 0x2C) + 69) ^ 0x4D ^ *(unsigned __int8 *)(v5
                                                                                  + 1269
                                                                                  * (v224 ^ 0x14)
                                                                                  + 9216747
                                                                                  - 10304
                                                                                  * (((1667301 * (unint64_t)(1269 * (v224 ^ 0x14u) + 9216747)) >> 32) >> 2));
  v207 = ((v226 ^ 0x2C) + 69) ^ 0x4D ^ *(unsigned __int8 *)(v5
                                                          + 1269 * (v226 ^ 0x14)
                                                          + 9216747
                                                          - 10304
                                                          * (((1667301
                                                                           * (unint64_t)(1269
                                                                                              * (v226 ^ 0x14u)
                                                                                              + 9216747)) >> 32) >> 2));
  v212 = 85 * (((v228 >> 7) | (2 * v228)) ^ 0xFFFFFFE4);
  v199 = 1;
LABEL_22:
  LODWORD(STACK[0xC80]) = v199;
  v229 = (v200 - 1160870735) & 0xBBFEFFFF;
  v230 = STACK[0xBC0];
  STACK[0x808] = STACK[0xBC0] >> (v200 + 7);
  STACK[0x800] = v230 >> 24;
  v231 = STACK[0xBB8];
  STACK[0x7F8] = STACK[0xBB8] >> 8;
  STACK[0x7F0] = HIBYTE(v230);
  STACK[0x7E8] = v231 >> 24;
  STACK[0x7E0] = v230 >> 16;
  v232 = 1269 * ((BYTE4(v230) - 75) ^ 0x3E) + 1958067;
  STACK[0x7D8] = HIBYTE(v231);
  STACK[0x7D0] = v232 - 10304 * (((1667301 * (unint64_t)v232) >> 32) >> 2);
  STACK[0x7C8] = HIWORD(v231);
  STACK[0x7C0] = v230 >> 40;
  STACK[0x7B8] = HIDWORD(v231);
  STACK[0x7B0] = v231 >> 16;
  v233 = v231 >> 40;
  v234 = v229;
  STACK[0x7A8] = v233;
  STACK[0x7A0] = v230 >> 8;
  LODWORD(STACK[0xC70]) = 1;
  v235 = v219;
  v236 = v213;
  v237 = v208;
  v238 = STACK[0xC68];
  v239 = v203;
  while (1)
  {
    STACK[0xC30] = v234;
    v240 = (v234 - 1000414962) | 0x90044110;
    LODWORD(STACK[0xBF8]) = v240;
    LODWORD(STACK[0xB50]) = v218;
    v241 = (v240 + (((v217 ^ v218) + 124) ^ 0x2C) + 77) ^ *(unsigned __int8 *)(v5
                                                                             + 1269
                                                                             * (((v217 ^ v218) + 124) ^ 0x14)
                                                                             + 9216747
                                                                             - 10304
                                                                             * (((1667301
                                                                                              * (unint64_t)(1269 * (((v217 ^ v218) + 124) ^ 0x14u) + 9216747)) >> 32) >> 2));
    LODWORD(STACK[0xC48]) = v241;
    v242 = 1269
         * ((((v201 ^ v207 ^ 0x4D ^ v241) >> 5) | (8 * (v201 ^ v207 ^ 0x4D ^ v241))) ^ 0x86)
         + 2937735;
    v243 = *(unsigned __int8 *)(v5 + v242 - 10304 * (((1667301 * (unint64_t)v242) >> 32) >> 2));
    STACK[0xB20] = v217;
    v244 = 37 * (v243 ^ 0x34);
    v245 = 1089 * (v218 ^ 0x18B);
    v246 = STACK[0xB70];
    v247 = *(_QWORD *)(STACK[0xB70]
                     + 8
                     * (1089 * (v217 ^ 0x36A)
                                    - 1568
                                    * ((2739138 * (unint64_t)(1089 * (v217 ^ 0x36Au))) >> 32)));
    v248 = *(_QWORD *)(STACK[0xB70] + 8 * (v245 - 1568 * ((2739138 * (unint64_t)v245) >> 32)));
    v249 = v238;
    LODWORD(STACK[0xAE0]) = v244;
    v250 = v244 ^ v238;
    LODWORD(STACK[0xBA8]) = v250;
    v251 = v250 ^ v239;
    v252 = v247 ^ ((v217 ^ 0xFFFFFFDB) + (v217 ^ 0xFFFFFF81));
    LODWORD(STACK[0xBE8]) = v251;
    LODWORD(STACK[0xA40]) = v251 ^ v216;
    LODWORD(v247) = v251 ^ v216 ^ v236;
    LODWORD(STACK[0xB10]) = v247;
    v253 = v201;
    v254 = v238;
    v255 = 1089 * (v207 ^ 0x368)
         - 1568 * ((2739138 * (unint64_t)(1089 * (v207 ^ 0x368u))) >> 32);
    LODWORD(STACK[0xB88]) = v207;
    v256 = (v207 ^ 0xFFFFFF83) + (v207 ^ 0xFFFFFFD9);
    LODWORD(STACK[0xB80]) = v253;
    v257 = v253 ^ 0x89;
    LODWORD(STACK[0xC78]) = v215;
    LODWORD(STACK[0xAD8]) = v247 ^ v211;
    v258 = v247 ^ v211 ^ v215;
    LODWORD(STACK[0xC18]) = v258;
    v259 = v258 ^ v235;
    v260 = *(_QWORD *)(v246 + 8 * v255);
    LODWORD(STACK[0xC10]) = v259;
    v261 = v259 ^ v210;
    LODWORD(STACK[0xC00]) = v261;
    LODWORD(STACK[0xA48]) = v261 ^ v212;
    v262 = v261 ^ v212 ^ v237;
    LODWORD(STACK[0xBF0]) = v262;
    LODWORD(v247) = v262 ^ STACK[0xB90];
    LODWORD(v260) = ((v260 ^ v256) >> 5) | (8 * (v260 ^ v256));
    v263 = v252 ^ v248;
    LODWORD(v248) = 1089 * (v239 ^ 0x36F);
    v264 = *(_QWORD *)(v246
                     + 8
                     * (1089 * v257
                                    - 1568 * ((2739138 * (unint64_t)(1089 * v257)) >> 32)));
    v265 = *(unsigned __int8 *)(v5
                              + 1269 * (v260 ^ 0x45)
                              + 8564481
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v260 ^ 0x45u) + 8564481)) >> 32) >> 2));
    v266 = *(_QWORD *)(v246
                     + 8
                     * (1089 * (v249 ^ 0x36E)
                                    - 1568 * ((2739138 * (unint64_t)(1089 * (v249 ^ 0x36Eu))) >> 32)));
    STACK[0xC68] = v254;
    v267 = (v254 ^ 0xFFFFFF85) + (v254 ^ 0xFFFFFFDF);
    LODWORD(v260) = v265 ^ v260 ^ 0xB;
    v268 = v239 ^ 0xFFFFFFDE;
    LODWORD(STACK[0xAF0]) = v239;
    LODWORD(v254) = v239 ^ 0xFFFFFF84;
    LODWORD(STACK[0xC50]) = v263;
    LODWORD(STACK[0xC58]) = v247;
    v269 = v263 ^ (37 * v260) ^ v247;
    v270 = *(_QWORD *)(v246
                     + 8 * (v248 - 1568 * ((2739138 * (unint64_t)v248) >> 32)));
    LODWORD(STACK[0xC60]) = v269;
    STACK[0xC20] = v264;
    STACK[0xB60] = v216;
    v271 = *(_QWORD *)(v246
                     + 8
                     * (1089 * (v216 ^ 0x36C)
                                    - 1568
                                    * ((2739138 * (unint64_t)(1089 * (v216 ^ 0x36Cu))) >> 32))) ^ ((v216 ^ 0xFFFFFF87) + (v216 ^ 0xFFFFFFDD));
    LODWORD(v266) = v266 ^ v267 ^ v269 ^ v264;
    STACK[0xB40] = v236;
    LODWORD(STACK[0xC08]) = v266;
    LODWORD(v247) = v270 ^ (v254 + v268) ^ v266;
    LODWORD(STACK[0xAD0]) = v247;
    v272 = ((v271 ^ v247) >> 5) | (8 * (v271 ^ v247));
    LODWORD(v270) = 1269 * (((v236 ^ 7) - 75) ^ 0x3E) + 1958067;
    v273 = STACK[0xB58];
    LODWORD(v266) = LODWORD(STACK[0xB58]);
    v274 = *(unsigned __int8 *)(v5
                              + 1269 * (v272 ^ 0x44)
                              + 8564481
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v272 ^ 0x44u) + 8564481)) >> 32) >> 2));
    v275 = *(unsigned __int8 *)(v5
                              + v270
                              - 10304 * (((1667301 * (unint64_t)v270) >> 32) >> 2));
    LODWORD(STACK[0xB68]) = v235;
    STACK[0xB28] = v210;
    LODWORD(v254) = 1089
                  * ((85 * (((v275 >> 7) | (2 * v275)) ^ (2 * ((v275 >> 7) | (2 * v275))) ^ 0xCC)) ^ 0x18A);
    v276 = *(_QWORD *)(v246
                     + 8
                     * (1089 * (v266 ^ 0x18B)
                                    - 1568 * ((2739138 * (unint64_t)(1089 * (v266 ^ 0x18B))) >> 32)));
    v277 = *(_QWORD *)(v246
                     + 8 * (v254 - 1568 * ((2739138 * (unint64_t)v254) >> 32)));
    v278 = *(_QWORD *)(v246
                     + 8
                     * (1089 * (v211 ^ 0x36A)
                                    - 1568
                                    * ((2739138 * (unint64_t)(1089 * (v211 ^ 0x36Au))) >> 32)));
    LODWORD(v247) = LODWORD(STACK[0xC78]) ^ 0x368;
    v279 = v274 ^ v272 ^ 0xA;
    STACK[0xB48] = v211;
    v280 = (v211 ^ 0xFFFFFF81) + (v211 ^ 0xFFFFFFDB);
    v281 = 37 * v279;
    v282 = *(_QWORD *)(v246
                     + 8
                     * (1089 * v247
                                    - 1568 * ((2739138 * (unint64_t)(1089 * v247)) >> 32)));
    v283 = *(_QWORD *)(v246
                     + 8
                     * (1089 * (v235 ^ 0x189)
                                    - 1568
                                    * ((2739138 * (unint64_t)(1089 * (v235 ^ 0x189u))) >> 32)));
    LODWORD(STACK[0xB7C]) = v215;
    LODWORD(STACK[0xC40]) = v281;
    LODWORD(v276) = v281 ^ v277 ^ v276 ^ v280 ^ v278;
    LODWORD(STACK[0xB00]) = v276;
    LODWORD(v282) = v282 ^ ((v215 ^ 0xFFFFFF83) + (v215 ^ 0xFFFFFFD9)) ^ v276;
    LODWORD(STACK[0xB98]) = v282;
    v284 = 1269 * (((v210 ^ 4) - 75) ^ 0xE9) + 4891995;
    v285 = *(unsigned __int8 *)(v5 + v284 - 10304 * (((1667301 * (unint64_t)v284) >> 32) >> 2));
    LODWORD(v283) = *(unsigned __int8 *)(v5
                                       + (1269 * (((v283 ^ 0xB6 ^ v282) - 29) ^ 0x42)
                                                      - 10304
                                                      * ((416826
                                                        * (unint64_t)(1269
                                                                           * (((v283 ^ 0xB6 ^ v282) - 29) ^ 0x42u))) >> 32))) ^ ((v283 ^ 0xFFFFFFB6 ^ v282) - 29) ^ 0xFFFFFF95;
    STACK[0xB38] = v212;
    v286 = 1089 * ((85 * (((v285 >> 7) | (2 * v285)) ^ 0xE4)) ^ 0x8A);
    STACK[0xB30] = v237;
    v287 = *(_QWORD *)(v246 + 8 * (v286 - 1568 * ((2739138 * (unint64_t)v286) >> 32)));
    v288 = (v283 >> 1) | ((_DWORD)v283 << 7);
    v289 = *(_QWORD *)(v246
                     + 8
                     * (1089 * (v237 ^ 0x26C)
                                    - 1568
                                    * ((2739138 * (unint64_t)(1089 * (v237 ^ 0x26Cu))) >> 32))) ^ ((v237 ^ 0xDD) + (v237 ^ 0xFFFFFF87));
    v290 = 1089 * (STACK[0xB90] ^ 0x18D);
    v291 = v288 ^ v287 ^ *(_QWORD *)(v246
                                   + 8
                                   * (1089 * (v212 ^ 0x36F)
                                                  - 1568
                                                  * ((2739138
                                                    * (unint64_t)(1089 * (v212 ^ 0x36Fu))) >> 32))) ^ ((v212 ^ 0xFFFFFF84) + (v212 ^ 0xDE));
    v292 = v291 ^ v289 ^ *(_QWORD *)(v246
                                                 + 8
                                                 * (v290
                                                                - 1568 * ((2739138 * (unint64_t)v290) >> 32)));
    STACK[0xC38] = v292;
    v293 = v292 ^ v273;
    v294 = *(unsigned __int8 *)(v5
                              + 1269 * ((v292 ^ v273) ^ 0xDF)
                              + 2284200
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * ((v292 ^ v273) ^ 0xDFu)
                                                                  + 2284200)) >> 32) >> 2)) ^ 4;
    v295 = STACK[0xC80];
    LODWORD(STACK[0xC28]) = v292 ^ v273;
    if ((v295 & 1) != 0 && (STACK[0xC70] & 1) != 0)
    {
      v296 = LODWORD(STACK[0xBF8]) + 422889697;
      v297 = 1269 * (((v293 ^ 0x4C) - 75) ^ 0x3E) + 1958067;
      v298 = *(unsigned __int8 *)(v5 + v297 - 10304 * (((1667301 * (unint64_t)v297) >> 32) >> 2));
      LODWORD(STACK[0xC78]) = (((((((LOBYTE(STACK[0xBF8]) - 31) ^ 0x3A) + (v293 ^ 0xD4)) ^ 0x35)
                                                + *(_BYTE *)(v5
                                                           + 1269
                                                           * ((((LOBYTE(STACK[0xBF8]) - 31) ^ 0x3A)
                                                                              + (v293 ^ 0xD4)) ^ 0xE8)
                                                           + 2610333
                                                           - 10304
                                                           * (((1667301
                                                                            * (unint64_t)(1269
                                                                                               * ((((LOBYTE(STACK[0xBF8]) - 31) ^ 0x3A) + (v293 ^ 0xD4)) ^ 0xE8u)
                                                                                               + 2610333)) >> 32) >> 2))) >> 1) | (((((v296 ^ 0x3A) + (v293 ^ 0xFFFFFFD4)) ^ 0x35) + *(unsigned __int8 *)(v5 + 1269 * ((((LOBYTE(STACK[0xBF8]) - 31) ^ 0x3A) + (v293 ^ 0xD4)) ^ 0xE8) + 2610333 - 10304 * (((1667301 * (unint64_t)(1269 * ((((LOBYTE(STACK[0xBF8]) - 31) ^ 0x3A) + (v293 ^ 0xD4)) ^ 0xE8u) + 2610333)) >> 32) >> 2))) << 7)) ^ 0x52;
      v299 = (v293 ^ 0x24) - 29;
      v300 = *(unsigned __int8 *)(v5
                                + (1269 * (v299 ^ 0x42)
                                               - 10304
                                               * ((416826 * (unint64_t)(1269 * (v299 ^ 0x42u))) >> 32)));
      v301 = ((v298 >> 7) | (2 * v298)) ^ (2 * ((v298 >> 7) | (2 * v298)));
      LODWORD(STACK[0xC30]) = 2 * v293 + (v293 ^ 0x3F) - 127;
      v302 = 1269 * (((v293 ^ 0xB9) - 75) ^ 0xE9) + 4891995;
      v303 = *(unsigned __int8 *)(v5 + v302 - 10304 * (((1667301 * (unint64_t)v302) >> 32) >> 2));
      v304 = 85 * (((v303 >> 7) | (2 * v303)) ^ 0xFFFFFFE4);
      v305 = ((v299 ^ 0x95 ^ v300) >> 1) | ((v299 ^ 0xFFFFFF95 ^ v300) << 7);
      v306 = v293 ^ 0x7A;
      v307 = v293 ^ 0xFFFFFFD8;
      v308 = v293 ^ 0xB4;
      v309 = v293 ^ 0xFFFFFF88;
      v310 = v293 ^ 2;
      v311 = v293 ^ 0xFFFFFFD0;
      v312 = v293 ^ 0xFFFFFFAE;
      v313 = v293 ^ 0x19;
      v314 = STACK[0xC38] ^ 0xFFFFFFE5;
      v315 = v293 ^ 0xFFFFFF87;
    }
    else
    {
      v296 = (STACK[0xC30] - 1478091922) ^ 0xDAD27191;
      v316 = (v293 ^ (STACK[0xC30] - 1478091922) ^ 0xDAD271C0) - 29;
      v317 = 1269 * ((v293 + 124) ^ 0x96) + 977130;
      v318 = 1269 * (((v293 ^ (STACK[0xC30] + 110) ^ 0xC0) - 29) ^ 0x42);
      v319 = (v293 ^ 0x29) - 29;
      v320 = *(_BYTE *)(v5 + v317 - 10304 * (((1667301 * (unint64_t)v317) >> 32) >> 2));
      v321 = *(unsigned __int8 *)(v5 + (v318 - 10304 * ((416826 * (unint64_t)v318) >> 32)));
      LODWORD(STACK[0xC30]) = v293 ^ 0xFFFFFFC7;
      v322 = *(unsigned __int8 *)(v5
                                + 1269 * (v319 ^ 0xE8)
                                + 2610333
                                - 10304
                                * (((1667301
                                                 * (unint64_t)(1269 * (v319 ^ 0xE8u) + 2610333)) >> 32) >> 2));
      LODWORD(STACK[0xC78]) = ((v321 ^ v316 ^ 0x95) >> 1) | ((v321 ^ v316 ^ 0xFFFFFF95) << 7);
      v304 = v293 ^ 0xFFFFFFF1;
      v312 = v293 ^ 0xFFFFFFDD;
      v323 = 1269 * (((v293 ^ 0x26) - 75) ^ 0x3E) + 1958067;
      v324 = *(unsigned __int8 *)(v5 + v323 - 10304 * (((1667301 * (unint64_t)v323) >> 32) >> 2));
      v309 = (((v322 + (v319 ^ 0x35)) >> 1) | ((v322 + (v319 ^ 0x35)) << 7)) ^ 0x52;
      v305 = v293 ^ 0x7A;
      v301 = ((v324 >> 7) | (2 * v324)) ^ (2 * ((v324 >> 7) | (2 * v324)));
      v308 = v320 ^ 0x7B;
      v314 = STACK[0xC38] ^ 0x56;
      v306 = v293 ^ 0xFFFFFF8D;
      v313 = v293 ^ 0x46;
      v310 = v293 ^ 0xFFFFFF87;
      v307 = v293 ^ 0x43;
      v315 = v293 ^ 0x27;
      v311 = v293 ^ 0xFFFFFFE6;
    }
    v325 = STACK[0xB88];
    LODWORD(STACK[0xA20]) = v288;
    LODWORD(STACK[0xAA0]) = v288 ^ ~(_DWORD)v287;
    LODWORD(STACK[0xA18]) = LODWORD(STACK[0xC60]) ^ ~STACK[0xC20];
    LODWORD(STACK[0xA10]) = LODWORD(STACK[0xC50]) ^ ~LODWORD(STACK[0xC58]);
    LODWORD(STACK[0xBF8]) = v291;
    LODWORD(STACK[0xBB0]) = v291 ^ ~v289;
    LODWORD(STACK[0xB08]) = LODWORD(STACK[0xC40]) ^ ~(_DWORD)v277;
    LODWORD(STACK[0xB58]) = LODWORD(STACK[0xC48]) ^ ~v325;
    v326 = v296 - 1853311874;
    v327 = v296 ^ 0x2E96D6CB;
    v328 = 85 * (((v296 ^ 0x2E96D6CB) - 70) ^ v301);
    v329 = LODWORD(STACK[0xC70]) | v295 ^ v326;
    LODWORD(STACK[0xC20]) = v293 ^ 0x38;
    if ((v329 & 1) != 0)
    {
      LOBYTE(v330) = v293 ^ 0x38;
      v331 = v304;
      v332 = STACK[0xB50];
      v333 = STACK[0xB28];
      LODWORD(STACK[0xA70]) = v315;
      v334 = STACK[0xC78];
      LODWORD(STACK[0xC50]) = v313;
      LOBYTE(v293) = v312;
      LODWORD(STACK[0xA98]) = v305;
    }
    else
    {
      v326 = v327 - 1560943803;
      v328 = (v328 ^ LODWORD(STACK[0x9D8])) - 29;
      v335 = 1269 * ((v328 ^ (v327 + 69)) ^ 0xBF) + 2610333;
      v336 = (v305 ^ LODWORD(STACK[0x9D0])) - 29;
      LOBYTE(v328) = *(_BYTE *)(v5 + v335 - 10304 * (((1667301 * (unint64_t)v335) >> 32) >> 2))
                   + (v328 ^ 0x35);
      v337 = 1269 * (((LODWORD(STACK[0xC30]) ^ LODWORD(STACK[0x9B8])) - 75) ^ 0x3E) + 1958067;
      LODWORD(STACK[0xC50]) = v313 ^ LODWORD(STACK[0x9C8]);
      v338 = v304 ^ LODWORD(STACK[0x9C0]);
      v339 = LODWORD(STACK[0xC78]) ^ LODWORD(STACK[0x9E0]);
      v311 ^= LODWORD(STACK[0x970]);
      v309 ^= LODWORD(STACK[0x9A8]);
      v340 = *(unsigned __int8 *)(v5 + v337 - 10304 * (((1667301 * (unint64_t)v337) >> 32) >> 2));
      v341 = v336 ^ 0xFFFFFF95 ^ *(unsigned __int8 *)(v5
                                                    + (1269 * (v336 ^ 0x42)
                                                                   - 10304
                                                                   * ((416826
                                                                     * (unint64_t)(1269
                                                                                        * (v336 ^ 0x42u))) >> 32)));
      LODWORD(STACK[0xA98]) = (v341 >> 1) | (v341 << 7);
      v330 = v293 ^ 0x38 ^ LODWORD(STACK[0x9F8]);
      v308 ^= STACK[0xA00];
      LOBYTE(v328) = ((v328 >> 1) | ((_BYTE)v328 << 7)) ^ 0x52;
      v293 = v312 ^ LODWORD(STACK[0x9B0]);
      v306 ^= LODWORD(STACK[0x998]);
      v307 ^= LODWORD(STACK[0x9E8]);
      LODWORD(STACK[0xA70]) = v315 ^ LODWORD(STACK[0x9A0]);
      v310 ^= LODWORD(STACK[0x990]);
      v314 ^= LODWORD(STACK[0x9F0]);
      LODWORD(STACK[0xC30]) = 85 * (((v340 >> 7) | (2 * v340)) ^ (2 * ((v340 >> 7) | (2 * v340))) ^ 0xFFFFFFCC);
      v331 = v338;
      v332 = STACK[0xB50];
      v333 = STACK[0xB28];
      v334 = v339;
    }
    LODWORD(STACK[0xAE8]) = v310;
    v342 = v326 + 660995251;
    LODWORD(STACK[0x988]) = v342;
    LODWORD(STACK[0x980]) = v342 ^ 0x23CF73A7;
    v343 = 1269 * (((v308 ^ 0xF5) - 75) ^ ((v342 ^ 0xA7) + 60)) + 4891995;
    v344 = *(unsigned __int8 *)(v5 + v343 - 10304 * (((1667301 * (unint64_t)v343) >> 32) >> 2));
    v345 = 1269 * ((85 * (((v344 >> 7) | (2 * v344)) ^ 0xE4)) ^ 0x82) + 2284200;
    v346 = (v311 ^ 0x36)
         + (v311 ^ 0x75)
         + *(unsigned __int8 *)(v5
                              + 1269 * (v311 ^ 0xDA)
                              + 7176195
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v311 ^ 0xDAu) + 7176195)) >> 32) >> 2));
    v347 = (((v307 ^ 0x1E)
           + (v307 ^ 0x5D)
           + *(unsigned __int8 *)(v5
                                + 1269 * (v307 ^ 0xF2)
                                + 7176195
                                - 10304
                                * (((1667301
                                                 * (unint64_t)(1269 * (v307 ^ 0xF2u) + 7176195)) >> 32) >> 2))
           + 1) ^ 2)
         - 29;
    LODWORD(STACK[0xBC8]) = v347;
    LODWORD(STACK[0xAC8]) = 1269 * (v347 ^ 0xE8)
                          + 2610333
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v347 ^ 0xE8u) + 2610333)) >> 32) >> 2);
    LODWORD(STACK[0xAC0]) = 1269 * (v310 ^ 0xB4)
                          + 7176195
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v310 ^ 0xB4u) + 7176195)) >> 32) >> 2);
    LODWORD(STACK[0xAB8]) = 1269 * (v330 ^ 0xA0)
                          + 2284200
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v330 ^ 0xA0u) + 2284200)) >> 32) >> 2);
    LODWORD(STACK[0xC78]) = v334;
    LODWORD(STACK[0xAB0]) = 1269 * (v334 ^ 0x2F)
                          + 7176195
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v334 ^ 0x2Fu) + 7176195)) >> 32) >> 2);
    LODWORD(STACK[0xAA8]) = 1269 * (v293 ^ 0x28)
                          + 2284200
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v293 ^ 0x28u) + 2284200)) >> 32) >> 2);
    LODWORD(STACK[0xA88]) = 1269 * (v309 ^ 0xEF)
                          + 2284200
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v309 ^ 0xEFu) + 2284200)) >> 32) >> 2);
    LODWORD(STACK[0xBA0]) = v314;
    v348 = 1269 * (v314 ^ 0x4A)
         + 7176195
         - 10304
         * (((1667301 * (unint64_t)(1269 * (v314 ^ 0x4Au) + 7176195)) >> 32) >> 2);
    LODWORD(STACK[0xA90]) = 1269 * (v306 ^ 0xB0)
                          + 2284200
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v306 ^ 0xB0u) + 2284200)) >> 32) >> 2);
    v349 = 1269 * (((v328 ^ 3) - 75) ^ 0x3E) + 1958067;
    v350 = *(unsigned __int8 *)(v5 + v349 - 10304 * (((1667301 * (unint64_t)v349) >> 32) >> 2));
    v351 = 1269 * (LODWORD(STACK[0xC50]) ^ 0xC9) + 7176195;
    LODWORD(STACK[0xA80]) = v351 - 10304 * (((1667301 * (unint64_t)v351) >> 32) >> 2);
    v352 = 85 * (((v350 >> 7) | (2 * v350)) ^ (2 * ((v350 >> 7) | (2 * v350))) ^ 0xFFFFFFCC);
    LODWORD(STACK[0xAF8]) = v352;
    LODWORD(STACK[0xA78]) = 1269 * (v352 ^ 0x9C)
                          + 7176195
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v352 ^ 0x9Cu) + 7176195)) >> 32) >> 2);
    v353 = 1269 * (LODWORD(STACK[0xA98]) ^ 0x52) + 2284200;
    LODWORD(STACK[0xA68]) = v353 - 10304 * (((1667301 * (unint64_t)v353) >> 32) >> 2);
    LODWORD(STACK[0xB50]) = v331;
    v354 = 1269 * (v331 ^ 0x7F)
         + 7176195
         - 20608
         * (((1667301 * (unint64_t)(1269 * (v331 ^ 0x7Fu) + 7176195)) >> 32) >> 3);
    if (v354 >> 6 >= 0xA1)
      v354 -= 10304;
    v355 = ((LOBYTE(STACK[0xC30]) ^ 0x32) >> 5) | (8 * (LODWORD(STACK[0xC30]) ^ 0x32));
    v356 = 1269 * (LODWORD(STACK[0xA70]) ^ 0x21) + 2284200;
    LODWORD(STACK[0xA58]) = v356 - 10304 * (((1667301 * (unint64_t)v356) >> 32) >> 2);
    v357 = 1269 * (STACK[0xB20] ^ 0xA1) + 2284200;
    v358 = *(_BYTE *)(v5 + v345 - 10304 * (((1667301 * (unint64_t)v345) >> 32) >> 2));
    v359 = 37
         * (v355 ^ 0xA ^ *(unsigned __int8 *)(v5
                                            + 1269 * (v355 ^ 0x44)
                                            + 8564481
                                            - 10304
                                            * (((1667301
                                                             * (unint64_t)(1269 * (v355 ^ 0x44u)
                                                                                + 8564481)) >> 32) >> 2)));
    LODWORD(STACK[0xB28]) = v359;
    v360 = *(_BYTE *)(v5 + v357 - 10304 * (((1667301 * (unint64_t)v357) >> 32) >> 2));
    LODWORD(STACK[0xA50]) = 1269 * (v359 ^ 0x9C)
                          + 7176195
                          - 10304
                          * (((1667301
                                           * (unint64_t)(1269 * (v359 ^ 0x9Cu) + 7176195)) >> 32) >> 2);
    v361 = 1269 * (((v358 ^ v360 ^ 0xA4) - 75) ^ 0xE9) + 4891995;
    v362 = v361 - 10304 * (((1667301 * (unint64_t)v361) >> 32) >> 2);
    v363 = ((v346 + 1) ^ ((v332 ^ 0xFFFFFFA1)
                        + (v332 ^ 0xFFFFFFE2)
                        + *(unsigned __int8 *)(v5
                                             + 1269 * (v332 ^ 0x4D)
                                             + 7176195
                                             - 10304
                                             * (((1667301
                                                              * (unint64_t)(1269
                                                                                 * (v332 ^ 0x4Du)
                                                                                 + 7176195)) >> 32) >> 2))
                        + 1) ^ 0xFFFFFFE2)
         - 29;
    LODWORD(STACK[0xC30]) = v363;
    v364 = 1269 * (v363 ^ 0x42)
         - 10304 * ((416826 * (unint64_t)(1269 * (v363 ^ 0x42u))) >> 32);
    v365 = *(unsigned __int8 *)(v5
                              + 1269 * (((LOBYTE(STACK[0xB88]) ^ 0xD2) - 29) ^ 0xE8)
                              + 2610333
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269
                                                                  * (((LOBYTE(STACK[0xB88]) ^ 0xD2) - 29) ^ 0xE8u)
                                                                  + 2610333)) >> 32) >> 2))
         + (((LODWORD(STACK[0xB88]) ^ 0xFFFFFFD2) - 29) ^ 0x35);
    v366 = (v365 >> 1) | (v365 << 7);
    LODWORD(STACK[0xB88]) = v366;
    v367 = 1269 * (STACK[0xC68] ^ 0xDC) + 7176195;
    v368 = v367 - 10304 * (((1667301 * (unint64_t)v367) >> 32) >> 2);
    v369 = 1269 * (LODWORD(STACK[0xB80]) ^ 0xC3) + 7176195;
    v370 = v369 - 10304 * (((1667301 * (unint64_t)v369) >> 32) >> 2);
    v371 = 1269 * (LODWORD(STACK[0xAF0]) ^ 0xDD) + 2284200;
    v372 = v371 - 10304 * (((1667301 * (unint64_t)v371) >> 32) >> 2);
    v373 = 1269 * (STACK[0xB60] ^ 0x84) + 7176195;
    v374 = (((STACK[0xB60] ^ 0x68)
           + (STACK[0xB60] ^ 0x2B)
           + *(unsigned __int8 *)(v5 + v373 - 10304 * (((1667301 * (unint64_t)v373) >> 32) >> 2))
           + 1) ^ 0xFFFFFFE7)
         - 29;
    LODWORD(STACK[0xB20]) = v374;
    v375 = 1269 * (v374 ^ 0xE8)
         + 2610333
         - 10304
         * (((1667301 * (unint64_t)(1269 * (v374 ^ 0xE8u) + 2610333)) >> 32) >> 2);
    v376 = 1269 * (STACK[0xB40] ^ 0xBF) + 2284200;
    v377 = v376 - 10304 * (((1667301 * (unint64_t)v376) >> 32) >> 2);
    v378 = 1269 * (LODWORD(STACK[0xB7C]) ^ 0xB3) + 7176195;
    v379 = 1269 * (STACK[0xB48] ^ 0xD3) + 2284200;
    v380 = v379 - 10304 * (((1667301 * (unint64_t)v379) >> 32) >> 2);
    v381 = 1269 * (LODWORD(STACK[0xB68]) ^ 0xD0) + 2284200;
    LOBYTE(v374) = ((v333 ^ 0xB2)
                  + (v333 ^ 0xF1)
                  + *(_BYTE *)(STACK[0xBD0]
                             + 1269 * (v333 ^ 0x5E)
                             + 7176195
                             - 10304
                             * (((1667301
                                              * (unint64_t)(1269 * (v333 ^ 0x5Eu) + 7176195)) >> 32) >> 2))
                  + 1) ^ 0x54;
    v382 = 1269 * (((v374 >> 5) | (8 * v374)) ^ 0x86) + 2937735;
    v383 = v382 - 10304 * (((1667301 * (unint64_t)v382) >> 32) >> 2);
    v384 = STACK[0xC38];
    v385 = v294 & 0xFFFFFFFFFFFFFEFFLL | (((STACK[0xC38] >> 1) & 1) << 8);
    v386 = 1269 * (STACK[0xB30] ^ 0x6A) + 2284200;
    v387 = 1269 * (STACK[0xB38] ^ 0xCD) + 2284200;
    v388 = 1269 * (STACK[0xB90] ^ 0x65) + 2284200;
    LODWORD(STACK[0xB68]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xAC8]));
    LODWORD(STACK[0xA60]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xAB8]));
    LODWORD(STACK[0xA3C]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xAC0]));
    LODWORD(STACK[0xA70]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xAB0]));
    LODWORD(STACK[0xA98]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xAA8]));
    LODWORD(STACK[0xAC0]) = *(unsigned __int8 *)(STACK[0xBD0] + v348);
    LODWORD(STACK[0xA90]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xA90]));
    LODWORD(STACK[0xB40]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xA88]));
    LODWORD(STACK[0xAC8]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xA80]));
    LODWORD(STACK[0xA28]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xA78]));
    LODWORD(STACK[0xA68]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xA68]));
    LODWORD(STACK[0xAF0]) = *(unsigned __int8 *)(STACK[0xBD0] + v354);
    LODWORD(STACK[0xB38]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xA58]));
    LODWORD(STACK[0xB30]) = *(unsigned __int8 *)(STACK[0xBD0] + LODWORD(STACK[0xA50]));
    v389 = *(unsigned __int8 *)(STACK[0xBD0] + v362);
    LODWORD(STACK[0xB90]) = *(unsigned __int8 *)(STACK[0xBD0] + v364);
    LODWORD(STACK[0xB60]) = *(unsigned __int8 *)(STACK[0xBD0]
                                               + 1269 * (v366 ^ 0xCE)
                                               + 7176195
                                               - 10304
                                               * (((1667301
                                                                * (unint64_t)(1269
                                                                                   * (v366 ^ 0xCEu)
                                                                                   + 7176195)) >> 32) >> 2));
    LODWORD(STACK[0xA38]) = *(unsigned __int8 *)(STACK[0xBD0] + v368);
    LODWORD(STACK[0xA50]) = *(unsigned __int8 *)(STACK[0xBD0] + v370);
    LODWORD(STACK[0xA80]) = *(unsigned __int8 *)(STACK[0xBD0] + v372);
    LODWORD(STACK[0xA78]) = *(unsigned __int8 *)(STACK[0xBD0] + v375);
    LODWORD(STACK[0xA30]) = *(unsigned __int8 *)(STACK[0xBD0]
                                               + v378
                                               - 10304 * (((1667301 * (unint64_t)v378) >> 32) >> 2));
    LODWORD(STACK[0xA88]) = *(unsigned __int8 *)(STACK[0xBD0] + v377);
    v390 = STACK[0xBD0];
    LODWORD(STACK[0xAB8]) = *(unsigned __int8 *)(STACK[0xBD0] + v380);
    LODWORD(STACK[0xB48]) = *(unsigned __int8 *)(v390
                                               + v381
                                               - 10304 * (((1667301 * (unint64_t)v381) >> 32) >> 2));
    LODWORD(STACK[0xA58]) = *(unsigned __int8 *)(v390 + v383);
    LODWORD(STACK[0xAB0]) = *(unsigned __int8 *)(v390
                                               + v387
                                               - 10304 * (((1667301 * (unint64_t)v387) >> 32) >> 2));
    LODWORD(STACK[0xC38]) = *(unsigned __int8 *)(v390
                                               + v386
                                               - 10304 * (((1667301 * (unint64_t)v386) >> 32) >> 2));
    v391 = (((_DWORD)v384 << 7) & 0x100u) >> 3;
    v392 = STACK[0xB70];
    v393 = *(_QWORD *)(STACK[0xB70]
                     + 8
                     * (1089 * (v385 ^ 0x72)
                                    - 1568 * ((2739138 * (unint64_t)(1089 * (v385 ^ 0x72))) >> 32)));
    LODWORD(STACK[0xAA8]) = *(unsigned __int8 *)(v390
                                               + v388
                                               - 10304 * (((1667301 * (unint64_t)v388) >> 32) >> 2));
    v394 = 0x101010101010101 * v294;
    v395 = v394 ^ 0x3A811183EE2092B6;
    *(&STACK[0x1AB0] + (v391 | 0x1F)) = v394 ^ 0x3A811183EE2092B6 ^ v393;
    v396 = v394 ^ 0x9248C5AC0D468820;
    *(&STACK[0x1AB0] + (v391 ^ 0x3F)) = v394 ^ 0x9248C5AC0D468820 ^ ((v385 ^ 0xCBB50F2B87304979)
                                                                     + (v385 ^ 0x123)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v385 ^ 0x292) - 1568 * ((2739138 * (unint64_t)(1089 * (v385 ^ 0x292))) >> 32)));
    v397 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xA10]) >> 7) & 1) << 8);
    v398 = ((2 * LODWORD(STACK[0xA10])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v398 | 0x11)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v397 ^ 2)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v397 ^ 2))) >> 32)));
    *(&STACK[0x1AB0] + (v398 ^ 0x31)) = v396 ^ ((v397 ^ 0xCBB50F2B87304909) + (v397 ^ 0x153)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v397 ^ 0x2E2) - 1568 * ((2739138 * (unint64_t)(1089 * (v397 ^ 0x2E2))) >> 32)));
    v399 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xA40]) >> 2) & 1) << 8);
    v400 = ((LODWORD(STACK[0xA40]) << 6) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v400 | 6)) = v396 ^ (((v399 | 0xEB) ^ v294 & 0xEB ^ 0xCBB50F2B8730485ALL)
                                           + ((v399 | 0xEB) ^ v294 & 0xEB)) ^ *(_QWORD *)(v392 + 8 * (1089 * ((v399 | 0xEB) ^ v294 & 0xEB ^ 0x3B1) - 1568 * ((2739138 * (unint64_t)(1089 * ((v399 | 0xEB) ^ v294 & 0xEB ^ 0x3B1))) >> 32)));
    *(&STACK[0x1AB0] + (v400 ^ 0x26)) = v396 ^ ((v399 ^ 0xCBB50F2B873049B1) + (v399 ^ 0x1EB)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v399 ^ 0x25A) - 1568 * ((2739138 * (unint64_t)(1089 * (v399 ^ 0x25A))) >> 32)));
    v401 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xA48]) >> 3) & 1) << 8);
    v402 = ((32 * LODWORD(STACK[0xA48])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v402 | 0xD)) = v395 ^ *(_QWORD *)(v392
                                                        + 8
                                                        * (1089 * (v401 ^ 0xE2)
                                                                       - 1568
                                                                       * ((2739138
                                                                         * (unint64_t)(1089
                                                                                            * (v401 ^ 0xE2))) >> 32)));
    *(&STACK[0x1AB0] + (v402 ^ 0x2D)) = v396 ^ ((v401 ^ 0xCBB50F2B873049E9) + (v401 ^ 0x1B3)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v401 ^ 0x202) - 1568 * ((2739138 * (unint64_t)(1089 * (v401 ^ 0x202))) >> 32)));
    v403 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xC40]) >> 2) & 1) << 8);
    v404 = ((LODWORD(STACK[0xC40]) << 6) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v404 | 0x16)) = v396 ^ ((v403 ^ 0xCBB50F2B87304831) + (v403 ^ 0x6B)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v403 ^ 0x3DA) - 1568 * ((2739138 * (unint64_t)(1089 * (v403 ^ 0x3DA))) >> 32)));
    *(&STACK[0x1AB0] + (v404 ^ 0x36)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v403 ^ 0x13A)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v403 ^ 0x13A))) >> 32)));
    v405 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xAE0]) >> 5) & 1) << 8);
    v406 = ((8 * LODWORD(STACK[0xAE0])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v406 | 3)) = v396 ^ ((v405 ^ 0xCBB50F2B87304899) + (v405 ^ 0xC3)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v405 ^ 0x372) - 1568 * ((2739138 * (unint64_t)(1089 * (v405 ^ 0x372))) >> 32)));
    *(&STACK[0x1AB0] + (v406 ^ 0x23)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v405 ^ 0x192)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v405 ^ 0x192))) >> 32)));
    v407 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xAD8]) >> 7) & 1) << 8);
    v408 = ((2 * LODWORD(STACK[0xAD8])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v408 | 9)) = v395 ^ *(_QWORD *)(v392
                                                      + 8
                                                      * (1089 * (v407 ^ 0xC2)
                                                                     - 1568
                                                                     * ((2739138
                                                                       * (unint64_t)(1089
                                                                                          * (v407 ^ 0xC2))) >> 32)));
    *(&STACK[0x1AB0] + (v408 ^ 0x29)) = v396 ^ ((v407 ^ 0xCBB50F2B873049C9) + (v407 ^ 0x193)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v407 ^ 0x222) - 1568 * ((2739138 * (unint64_t)(1089 * (v407 ^ 0x222))) >> 32)));
    v409 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xC48]) >> 7) & 1) << 8);
    v410 = ((2 * LODWORD(STACK[0xC48])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v410 | 1)) = v396 ^ ((v409 ^ 0xCBB50F2B87304889) + (v409 ^ 0xD3)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v409 ^ 0x362) - 1568 * ((2739138 * (unint64_t)(1089 * (v409 ^ 0x362))) >> 32)));
    *(&STACK[0x1AB0] + (v410 ^ 0x21)) = v396 ^ ((v409 ^ 0xCBB50F2B87304989) + (v409 ^ 0x1D3)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v409 ^ 0x262) - 1568 * ((2739138 * (unint64_t)(1089 * (v409 ^ 0x262))) >> 32)));
    LODWORD(v409) = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xAD0]) >> 3) & 1) << 8);
    v411 = ((32 * LODWORD(STACK[0xAD0])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v411 | 0x15)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v409 ^ 0x22)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v409 ^ 0x22))) >> 32)));
    *(&STACK[0x1AB0] + (v411 ^ 0x35)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v409 ^ 0x122)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v409 ^ 0x122))) >> 32)));
    LODWORD(v409) = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xA20]) >> 5) & 1) << 8);
    v412 = ((8 * LODWORD(STACK[0xA20])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v412 | 0x1B)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v409 ^ 0x52)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v409 ^ 0x52))) >> 32)));
    *(&STACK[0x1AB0] + (v412 ^ 0x3B)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v409 ^ 0x152)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v409 ^ 0x152))) >> 32)));
    STACK[0x1AB0] = v396 ^ ((v294 ^ 0xDB) + (v294 ^ 0xCBB50F2B87304881)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v294 ^ 0x36A) - 1568 * ((2739138 * (unint64_t)(1089 * (v294 ^ 0x36A))) >> 32)));
    STACK[0x1BB0] = v395 ^ *(_QWORD *)(v392
                                     + 8
                                     * (1089 * (v294 ^ 0x18A)
                                                    - 1568
                                                    * ((2739138 * (unint64_t)(1089 * (v294 ^ 0x18A))) >> 32)));
    v413 = STACK[0xA18];
    LODWORD(v409) = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xA18]) >> 5) & 1) << 8);
    STACK[0x1B70] = v396 ^ ((v294 ^ 0xCBB50F2B87304841) + (v294 ^ 0x1B)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v294 ^ 0x3AA) - 1568 * ((2739138 * (unint64_t)(1089 * (v294 ^ 0x3AA))) >> 32)));
    STACK[0x1C70] = v396 ^ ((v294 ^ 0x11B) + (v294 ^ 0xCBB50F2B87304941)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v294 ^ 0x2AA) - 1568 * ((2739138 * (unint64_t)(1089 * (v294 ^ 0x2AA))) >> 32)));
    v414 = ((8 * v413) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v414 | 0x13)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v409 ^ 0x12)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v409 ^ 0x12))) >> 32)));
    *(&STACK[0x1AB0] + (v414 ^ 0x33)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v409 ^ 0x112)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v409 ^ 0x112))) >> 32)));
    v415 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xB10]) >> 1) & 1) << 8);
    v416 = ((LODWORD(STACK[0xB10]) << 7) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v416 | 7)) = v396 ^ ((v415 ^ 0xCBB50F2B873048B9) + (v415 ^ 0xE3)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v415 ^ 0x352) - 1568 * ((2739138 * (unint64_t)(1089 * (v415 ^ 0x352))) >> 32)));
    *(&STACK[0x1AB0] + (v416 ^ 0x27)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v415 ^ 0x1B2)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v415 ^ 0x1B2))) >> 32)));
    LODWORD(v415) = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xBA8]) >> 4) & 1) << 8);
    v417 = ((16 * LODWORD(STACK[0xBA8])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v417 | 4)) = v395 ^ *(_QWORD *)(v392
                                                      + 8
                                                      * (1089 * (v415 ^ 0xAA)
                                                                     - 1568
                                                                     * ((2739138
                                                                       * (unint64_t)(1089
                                                                                          * (v415 ^ 0xAA))) >> 32)));
    *(&STACK[0x1AB0] + (v417 ^ 0x24)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v415 ^ 0x1AA)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v415 ^ 0x1AA))) >> 32)));
    LODWORD(v415) = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xC58]) >> 1) & 1) << 8);
    v418 = ((LODWORD(STACK[0xC58]) << 7) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v418 | 0xF)) = v395 ^ *(_QWORD *)(v392
                                                        + 8
                                                        * (1089 * (v415 ^ 0xF2)
                                                                       - 1568
                                                                       * ((2739138
                                                                         * (unint64_t)(1089
                                                                                            * (v415 ^ 0xF2))) >> 32)));
    *(&STACK[0x1AB0] + (v418 ^ 0x2F)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v415 ^ 0x1F2)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v415 ^ 0x1F2))) >> 32)));
    v419 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xB00]) >> 7) & 1) << 8);
    v420 = ((2 * LODWORD(STACK[0xB00])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v420 | 0x19)) = v396 ^ ((v419 ^ 0xCBB50F2B87304849) + (v419 ^ 0x13)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v419 ^ 0x3A2) - 1568 * ((2739138 * (unint64_t)(1089 * (v419 ^ 0x3A2))) >> 32)));
    *(&STACK[0x1AB0] + (v420 ^ 0x39)) = v396 ^ ((v419 ^ 0xCBB50F2B87304949)
                                              + (v419 ^ 0x113)) ^ *(_QWORD *)(v392
                                                                                          + 8
                                                                                          * (1089 * (v419 ^ 0x2A2) - 1568 * ((2739138 * (unint64_t)(1089 * (v419 ^ 0x2A2))) >> 32)));
    v421 = STACK[0xBE8];
    v422 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xBE8]) >> 3) & 1) << 8);
    STACK[0x1AF0] = v396 ^ ((v294 ^ 0x9B) + (v294 ^ 0xCBB50F2B873048C1)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v294 ^ 0x32A) - 1568 * ((2739138 * (unint64_t)(1089 * (v294 ^ 0x32A))) >> 32)));
    STACK[0x1BF0] = v396 ^ ((v294 ^ 0x19B) + (v294 ^ 0xCBB50F2B873049C1)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v294 ^ 0x22A) - 1568 * ((2739138 * (unint64_t)(1089 * (v294 ^ 0x22A))) >> 32)));
    LODWORD(v419) = ((32 * v421) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v419 | 5)) = v396 ^ ((v422 ^ 0xCBB50F2B873048A9) + (v422 ^ 0xF3)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v422 ^ 0x342) - 1568 * ((2739138 * (unint64_t)(1089 * (v422 ^ 0x342))) >> 32)));
    *(&STACK[0x1AB0] + (v419 ^ 0x25)) = v395 ^ *(_QWORD *)(v392
                                                                       + 8
                                                                       * (1089 * (v422 ^ 0x1A2)
                                                                                      - 1568
                                                                                      * ((2739138
                                                                                        * (unint64_t)(1089 * (v422 ^ 0x1A2))) >> 32)));
    v423 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xB98]) >> 6) & 1) << 8);
    LODWORD(v422) = ((4 * LODWORD(STACK[0xB98])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v422 | 0x1A)) = v396 ^ ((v423 ^ 0xCBB50F2B87304851) + (v423 ^ 0xB)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v423 ^ 0x3BA) - 1568 * ((2739138 * (unint64_t)(1089 * (v423 ^ 0x3BA))) >> 32)));
    *(&STACK[0x1AB0] + (v422 ^ 0x3A)) = v396 ^ ((v423 ^ 0xCBB50F2B87304951)
                                                            + (v423 ^ 0x10B)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v423 ^ 0x2BA) - 1568 * ((2739138 * (unint64_t)(1089 * (v423 ^ 0x2BA))) >> 32)));
    v424 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xAA0]) >> 4) & 1) << 8);
    LODWORD(v422) = ((16 * LODWORD(STACK[0xAA0])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v422 | 0x1C)) = v395 ^ *(_QWORD *)(v392
                                                                       + 8
                                                                       * (1089 * (v424 ^ 0x6A)
                                                                                      - 1568
                                                                                      * ((2739138
                                                                                        * (unint64_t)(1089 * (v424 ^ 0x6A))) >> 32)));
    *(&STACK[0x1AB0] + (v422 ^ 0x3C)) = v396 ^ ((v424 ^ 0xCBB50F2B87304961)
                                                            + (v424 ^ 0x13B)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v424 ^ 0x28A) - 1568 * ((2739138 * (unint64_t)(1089 * (v424 ^ 0x28A))) >> 32)));
    LODWORD(v424) = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xBF0]) >> 2) & 1) << 8);
    LODWORD(v422) = ((LODWORD(STACK[0xBF0]) << 6) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v422 | 0xE)) = v395 ^ *(_QWORD *)(v392
                                                                      + 8
                                                                      * (1089 * (v424 ^ 0xFA)
                                                                                     - 1568
                                                                                     * ((2739138
                                                                                       * (unint64_t)(1089 * (v424 ^ 0xFA))) >> 32)));
    *(&STACK[0x1AB0] + (v422 ^ 0x2E)) = v395 ^ *(_QWORD *)(v392
                                                                       + 8
                                                                       * (1089 * (v424 ^ 0x1FA)
                                                                                      - 1568
                                                                                      * ((2739138
                                                                                        * (unint64_t)(1089 * (v424 ^ 0x1FA))) >> 32)));
    v425 = STACK[0xC00];
    v426 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xC00]) >> 4) & 1) << 8);
    STACK[0x1B30] = v395 ^ *(_QWORD *)(v392
                                     + 8
                                     * (1089 * (v294 ^ 0xA)
                                                    - 1568
                                                    * ((2739138 * (unint64_t)(1089 * (v294 ^ 0xA))) >> 32)));
    STACK[0x1C30] = v396 ^ ((v294 ^ 0x15B) + (v294 ^ 0xCBB50F2B87304901)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v294 ^ 0x2EA) - 1568 * ((2739138 * (unint64_t)(1089 * (v294 ^ 0x2EA))) >> 32)));
    v427 = ((16 * v425) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v427 | 0xC)) = v395 ^ *(_QWORD *)(v392
                                                        + 8
                                                        * (1089 * (v426 ^ 0xEA)
                                                                       - 1568
                                                                       * ((2739138
                                                                         * (unint64_t)(1089
                                                                                            * (v426 ^ 0xEA))) >> 32)));
    *(&STACK[0x1AB0] + (v427 ^ 0x2C)) = v396 ^ ((v426 ^ 0xCBB50F2B873049E1) + (v426 ^ 0x1BB)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v426 ^ 0x20A) - 1568 * ((2739138 * (unint64_t)(1089 * (v426 ^ 0x20A))) >> 32)));
    v428 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xC60]) >> 6) & 1) << 8);
    LODWORD(v426) = ((4 * LODWORD(STACK[0xC60])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v426 | 0x12)) = v395 ^ *(_QWORD *)(v392
                                                                       + 8
                                                                       * (1089 * (v428 ^ 0x1A)
                                                                                      - 1568
                                                                                      * ((2739138
                                                                                        * (unint64_t)(1089 * (v428 ^ 0x1A))) >> 32)));
    *(&STACK[0x1AB0] + (v426 ^ 0x32)) = v396 ^ ((v428 ^ 0xCBB50F2B87304911)
                                                            + (v428 ^ 0x14B)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v428 ^ 0x2FA) - 1568 * ((2739138 * (unint64_t)(1089 * (v428 ^ 0x2FA))) >> 32)));
    v429 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xC08]) >> 4) & 1) << 8);
    LODWORD(v426) = ((16 * LODWORD(STACK[0xC08])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v426 | 0x14)) = v396 ^ ((v429 ^ 0xCBB50F2B87304821) + (v429 ^ 0x7B)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v429 ^ 0x3CA) - 1568 * ((2739138 * (unint64_t)(1089 * (v429 ^ 0x3CA))) >> 32)));
    *(&STACK[0x1AB0] + (v426 ^ 0x34)) = v395 ^ *(_QWORD *)(v392
                                                                       + 8
                                                                       * (1089 * (v429 ^ 0x12A)
                                                                                      - 1568
                                                                                      * ((2739138
                                                                                        * (unint64_t)(1089 * (v429 ^ 0x12A))) >> 32)));
    LODWORD(v429) = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xB08]) >> 1) & 1) << 8);
    LODWORD(v426) = ((LODWORD(STACK[0xB08]) << 7) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v426 | 0x17)) = v395 ^ *(_QWORD *)(v392
                                                                       + 8
                                                                       * (1089 * (v429 ^ 0x32)
                                                                                      - 1568
                                                                                      * ((2739138
                                                                                        * (unint64_t)(1089 * (v429 ^ 0x32))) >> 32)));
    *(&STACK[0x1AB0] + (v426 ^ 0x37)) = v395 ^ *(_QWORD *)(v392
                                                                       + 8
                                                                       * (1089 * (v429 ^ 0x132)
                                                                                      - 1568
                                                                                      * ((2739138
                                                                                        * (unint64_t)(1089 * (v429 ^ 0x132))) >> 32)));
    v430 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xC10]) >> 5) & 1) << 8);
    LODWORD(v426) = ((8 * LODWORD(STACK[0xC10])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v426 | 0xB)) = v396 ^ ((v430 ^ 0xCBB50F2B873048D9) + (v430 ^ 0x83)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v430 ^ 0x332) - 1568 * ((2739138 * (unint64_t)(1089 * (v430 ^ 0x332))) >> 32)));
    *(&STACK[0x1AB0] + (v426 ^ 0x2B)) = v396 ^ ((v430 ^ 0xCBB50F2B873049D9)
                                                            + (v430 ^ 0x183)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v430 ^ 0x232) - 1568 * ((2739138 * (unint64_t)(1089 * (v430 ^ 0x232))) >> 32)));
    v431 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xB58]) >> 6) & 1) << 8);
    LODWORD(v426) = ((4 * LODWORD(STACK[0xB58])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v426 | 2)) = v396 ^ ((v431 ^ 0xCBB50F2B87304891) + (v431 ^ 0xCB)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v431 ^ 0x37A) - 1568 * ((2739138 * (unint64_t)(1089 * (v431 ^ 0x37A))) >> 32)));
    *(&STACK[0x1AB0] + (v426 ^ 0x22)) = v396 ^ ((v431 ^ 0xCBB50F2B87304991)
                                                            + (v431 ^ 0x1CB)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v431 ^ 0x27A) - 1568 * ((2739138 * (unint64_t)(1089 * (v431 ^ 0x27A))) >> 32)));
    v432 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xBF8]) >> 3) & 1) << 8);
    LODWORD(v426) = ((32 * LODWORD(STACK[0xBF8])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v426 | 0x1D)) = v396 ^ ((v432 ^ 0xCBB50F2B87304869) + (v432 ^ 0x33)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v432 ^ 0x382) - 1568 * ((2739138 * (unint64_t)(1089 * (v432 ^ 0x382))) >> 32)));
    *(&STACK[0x1AB0] + (v426 ^ 0x3D)) = v396 ^ ((v432 ^ 0xCBB50F2B87304969)
                                                            + (v432 ^ 0x133)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v432 ^ 0x282) - 1568 * ((2739138 * (unint64_t)(1089 * (v432 ^ 0x282))) >> 32)));
    v433 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xBB0]) >> 2) & 1) << 8);
    v434 = ((LODWORD(STACK[0xBB0]) << 6) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v434 | 0x1E)) = v396 ^ ((v433 ^ 0xCBB50F2B87304871) + (v433 ^ 0x2B)) ^ *(_QWORD *)(v392 + 8 * (1089 * (v433 ^ 0x39A) - 1568 * ((2739138 * (unint64_t)(1089 * (v433 ^ 0x39A))) >> 32)));
    *(&STACK[0x1AB0] + (v434 ^ 0x3E)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v433 ^ 0x17A)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089
                                                                                             * (v433 ^ 0x17A))) >> 32)));
    v435 = v294 & 0xFFFFFEFF | (((LODWORD(STACK[0xC18]) >> 6) & 1) << 8);
    v436 = ((4 * LODWORD(STACK[0xC18])) & 0x100u) >> 3;
    *(&STACK[0x1AB0] + (v436 | 0xA)) = v395 ^ *(_QWORD *)(v392
                                                        + 8
                                                        * (1089 * (v435 ^ 0xDA)
                                                                       - 1568
                                                                       * ((2739138
                                                                         * (unint64_t)(1089 * (v435 ^ 0xDAu))) >> 32)));
    *(&STACK[0x1AB0] + (v436 ^ 0x2A)) = v395 ^ *(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v435 ^ 0x1DA)
                                                                        - 1568
                                                                        * ((2739138
                                                                          * (unint64_t)(1089 * (v435 ^ 0x1DAu))) >> 32)));
    LODWORD(v395) = 1269 * ((85 * (((v389 >> 7) | (2 * v389)) ^ 0xE4) - 75) ^ 0x3E) + 1958067;
    LODWORD(v396) = 1269
                  * ((((LODWORD(STACK[0xA28])
                                       + (LODWORD(STACK[0xAF8]) ^ 0x70)
                                       + (LODWORD(STACK[0xAF8]) ^ 0x33)
                                       + 1) ^ ((LODWORD(STACK[0xB7C]) ^ 0x5F)
                                             + (LODWORD(STACK[0xB7C]) ^ 0x1C)
                                             + LODWORD(STACK[0xA30])
                                             + 1) ^ 0xD2)
                                     - 75) ^ 0xE9)
                  + 4891995;
    v437 = v396 - 10304 * (((1667301 * (unint64_t)v396) >> 32) >> 2);
    v438 = ((LODWORD(STACK[0xAE8]) ^ 0x58) + (LODWORD(STACK[0xAE8]) ^ 0x1B) + LODWORD(STACK[0xA3C]) + 1) ^ ((STACK[0xC68] ^ 0x30) + (STACK[0xC68] ^ 0x73) + LODWORD(STACK[0xA38]) + 1) ^ 0x3B;
    v439 = 1269 * (((v438 >> 5) | (8 * v438)) ^ 0x86) + 2937735;
    v440 = 1269
         * (((LODWORD(STACK[0xA60]) ^ ((LODWORD(STACK[0xB80]) ^ 0x2F)
                                                      + (LODWORD(STACK[0xB80]) ^ 0x6C)
                                                      + LODWORD(STACK[0xA50])
                                                      + 1) ^ 0x27)
                            - 75) ^ 0x3E)
         + 1958067;
    v441 = v440 - 10304 * (((1667301 * (unint64_t)v440) >> 32) >> 2);
    LOBYTE(v375) = (LODWORD(STACK[0xA68]) ^ (37 * (LODWORD(STACK[0xA58]) ^ 0x34)) ^ 0xBB) + 124;
    v442 = v390;
    LODWORD(v395) = *(unsigned __int8 *)(v390
                                       + v395
                                       - 10304
                                       * (((1667301 * (unint64_t)v395) >> 32) >> 2));
    v443 = ((LODWORD(STACK[0xA90]) ^ LODWORD(STACK[0xA88]) ^ 0xA9) & 0xFFFF00FF | (((LODWORD(STACK[0xA98]) ^ ((((LOBYTE(STACK[0xB20]) ^ 0x35) + LOBYTE(STACK[0xA78])) >> 1) | (((LOBYTE(STACK[0xB20]) ^ 0x35) + LOBYTE(STACK[0xA78])) << 7))) ^ 0xBF) << 8) | ((((LODWORD(STACK[0xC78]) ^ 0xC3) + LODWORD(STACK[0xC78]) + LODWORD(STACK[0xA70]) - 127) ^ LODWORD(STACK[0xA80]) ^ 0x9B) << 16)) ^ 0xB7;
    v444 = STACK[0xB18];
    v445 = 1089 * (*(unsigned __int8 *)(STACK[0xB18] + (v443 >> 16)) ^ 0x7D) + 1395009;
    LODWORD(v395) = 1089
                  * (*(unsigned __int8 *)(STACK[0xB18]
                                        + (85
                                                          * (((v395 >> 7) | (2 * v395)) ^ (2 * ((v395 >> 7) | (2 * v395))) ^ 0xCC))) ^ 0x78)
                  + 1115136;
    v446 = v442;
    v447 = (*(unsigned __int8 *)(v446 + v441) >> 7) | (2 * *(unsigned __int8 *)(v446 + v441));
    v448 = v442;
    v449 = ((LODWORD(STACK[0xB30]) + (LODWORD(STACK[0xB28]) ^ 0x70) + (LODWORD(STACK[0xB28]) ^ 0x33) + 1) ^ LODWORD(STACK[0xAA8]) ^ 0x1D | ((((LODWORD(STACK[0xB50]) ^ 0x93) + (LODWORD(STACK[0xB50]) ^ 0xD0) + LODWORD(STACK[0xAF0]) + 1) ^ LODWORD(STACK[0xC38]) ^ 0x16) << 8) | ((LODWORD(STACK[0xB38]) ^ LODWORD(STACK[0xAB0]) ^ 0x33) << 16)) ^ 0x61u;
    v450 = 1089
         * (*(unsigned __int8 *)(STACK[0xB18]
                               + (((LODWORD(STACK[0xB30])
                                                   + (LODWORD(STACK[0xB28]) ^ 0x70)
                                                   + (LODWORD(STACK[0xB28]) ^ 0x33)
                                                   + 1) ^ LOBYTE(STACK[0xAA8]) ^ 0x1D) ^ 0x61u)) ^ 0xCF)
         + 1395009;
    v451 = (LODWORD(STACK[0xAB8]) ^ LODWORD(STACK[0xB40]) | ((((LODWORD(STACK[0xBA0]) ^ 0xA6)
                                                             + (LODWORD(STACK[0xBA0]) ^ 0xE5)
                                                             + LODWORD(STACK[0xAC0])
                                                             + 1) ^ 0xD6) << 24) | ((((LODWORD(STACK[0xC50]) ^ 0x25) + (LODWORD(STACK[0xC50]) ^ 0x66) + LODWORD(STACK[0xAC8]) + 1) ^ LODWORD(STACK[0xB48]) ^ 0xDB) << 8)) ^ 0x8Cu;
    v452 = v450 - 1568 * (((5478275 * (unint64_t)v450) >> 32) >> 1);
    v453 = 1089 * (*(unsigned __int8 *)(STACK[0xB18] + (v451 >> 24)) ^ 0xD) + 1395009;
    LODWORD(v442) = 1089
                  * (*(unsigned __int8 *)(STACK[0xB18]
                                        + (85
                                                          * (((*(_BYTE *)(v442 + v437) >> 7) | (2
                                                                                              * *(_BYTE *)(v442 + v437))) ^ 0xE4))) ^ 0x21)
                  + 1115136;
    v454 = v442 - 1568 * (((5478275 * (unint64_t)v442) >> 32) >> 1);
    LODWORD(v442) = 1269
                  * (((*(_BYTE *)(STACK[0xB18]
                                                 + ((unsigned __int16)(((LODWORD(STACK[0xB30]) + (LODWORD(STACK[0xB28]) ^ 0x70) + (LODWORD(STACK[0xB28]) ^ 0x33) + 1) ^ LOWORD(STACK[0xAA8]) ^ 0x1D | ((((LODWORD(STACK[0xB50]) ^ 0x93) + (LODWORD(STACK[0xB50]) ^ 0xD0) + LODWORD(STACK[0xAF0]) + 1) ^ LOWORD(STACK[0xC38]) ^ 0x16) << 8)) ^ 0x61) >> 8)) ^ 0x8F)
                                     - 75) ^ 0x3E)
                  + 1958067;
    v455 = 1089
         * (*(unsigned __int8 *)(STACK[0xB18]
                               + (37
                                                 * (*(_BYTE *)(v446
                                                             + v439
                                                             - 10304
                                                             * (((1667301 * (unint64_t)v439) >> 32) >> 2)) ^ 0x34))) ^ 0xA8)
         + 1115136;
    LODWORD(STACK[0xC78]) = v455 - 1568 * (((5478275 * (unint64_t)v455) >> 32) >> 1);
    v456 = *(unsigned __int8 *)(v446
                              + v442
                              - 10304 * (((1667301 * (unint64_t)v442) >> 32) >> 2));
    v457 = 1089 * ((85 * (((v456 >> 7) | (2 * v456)) ^ (2 * ((v456 >> 7) | (2 * v456))) ^ 0xCC)) ^ 6)
         + 1115136;
    v458 = *(unsigned __int8 *)(v444 + (85 * (v447 ^ (2 * v447) ^ 0xCC)));
    LODWORD(STACK[0xC68]) = v457 - 1568 * (((5478275 * (unint64_t)v457) >> 32) >> 1);
    v459 = 1089 * (*(unsigned __int8 *)(v444 + v451) ^ 0xD4) + 1115136;
    LODWORD(v449) = 1089 * (*(unsigned __int8 *)(v444 + (v449 >> 16)) ^ 0x53) + 1395009;
    v460 = 1089
         * (*(unsigned __int8 *)(v444
                               + (((((LOBYTE(STACK[0xBC8]) ^ 0x35)
                                                                     + LOBYTE(STACK[0xB68])) >> 1) | (((LOBYTE(STACK[0xBC8]) ^ 0x35) + LOBYTE(STACK[0xB68])) << 7)) ^ (LODWORD(STACK[0xB60]) + (LODWORD(STACK[0xB88]) ^ 0x22) + (LODWORD(STACK[0xB88]) ^ 0x61) + 1) ^ 0xAC)) ^ 0x40)
         + 1115136;
    v461 = 1089 * (*(unsigned __int8 *)(v444 + v443) ^ 3) + 1395009;
    LODWORD(v446) = v460 - 1568 * (((5478275 * (unint64_t)v460) >> 32) >> 1);
    v462 = v461 - 1568 * (((5478275 * (unint64_t)v461) >> 32) >> 1);
    v463 = 1089
         * (*(unsigned __int8 *)(v444
                               + (((v375 ^ 0x2C) + 69) ^ 0x4Du ^ *(_BYTE *)(v448
                                                                                           + 1269
                                                                                           * (v375 ^ 0x14)
                                                                                           + 9216747
                                                                                           - 10304
                                                                                           * (((1667301 * (unint64_t)(1269 * (v375 ^ 0x14u) + 9216747)) >> 32) >> 2)))) ^ 0xE0)
         + 1395009;
    LODWORD(v426) = v463 - 1568 * (((5478275 * (unint64_t)v463) >> 32) >> 1);
    v464 = *(_QWORD *)(v392 + 8 * (v445 - 1568 * (((5478275 * (unint64_t)v445) >> 32) >> 1)));
    v465 = 1089
         * (*(unsigned __int8 *)(v444
                               + (((LOBYTE(STACK[0xB90]) ^ LOBYTE(STACK[0xC30]) ^ 0x95) >> 1) | ((LOBYTE(STACK[0xB90]) ^ LOBYTE(STACK[0xC30]) ^ 0x95) << 7))) ^ 0x4A)
         + 1395009;
    LODWORD(v443) = 1089 * (*(unsigned __int8 *)(v444 + BYTE1(v443)) ^ 0x82) + 1395009;
    LODWORD(v451) = 1089 * (*(unsigned __int8 *)(v444 + BYTE1(v451)) ^ 0xA7) + 1395009;
    v466 = *(_QWORD *)(v392 + 8 * v452) ^ 0x35DD20B67B57E3F8;
    v467 = v464 ^ (4 * (v464 ^ 0x35DD20B67B57E3F8) * (v464 ^ 0x35DD20B67B57E3F8));
    v468 = *(_QWORD *)(v392 + 8 * (v453 - 1568 * (((5478275 * (unint64_t)v453) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v469 = *(_QWORD *)(v392
                     + 8
                     * (v449
                      - 1568 * (((5478275 * (unint64_t)v449) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v470 = (v467 >> 8) ^ (*(_QWORD *)(v392 + 8 * v454) >> 16);
    v471 = *(_QWORD *)(v392 + 8 * v462) ^ 0x35DD20B67B57E3F8;
    v472 = v470 ^ ((v466 ^ (unint64_t)(4 * v466 * v466)) >> 24) ^ 0x40CF033A ^ *(_DWORD *)(v392 + 8 * (v395 - 1568 * (((5478275 * (unint64_t)v395) >> 32) >> 1)) + 4);
    STACK[0xC60] = v472;
    v473 = *(_QWORD *)(v392 + 8 * v426) ^ 0x35DD20B67B57E3F8;
    STACK[0xC58] = v473 * v473;
    v474 = *(_QWORD *)(v392 + 8 * (v465 - 1568 * (((5478275 * (unint64_t)v465) >> 32) >> 1)));
    v475 = v469 ^ (4 * v469 * v469);
    v476 = v474 ^ 0x35DD20B67B57E3F8;
    v477 = v471 ^ (4 * v471 * v471);
    v478 = *(_QWORD *)(v392
                     + 8
                     * (v443
                      - 1568 * (((5478275 * (unint64_t)v443) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v479 = *(_QWORD *)(v392
                     + 8
                     * (v451
                      - 1568 * (((5478275 * (unint64_t)v451) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v480 = (*(_QWORD *)(v392 + 8 * v446) >> 8) ^ (*(_QWORD *)(v392 + 8 * (v459 - 1568 * (((5478275 * (unint64_t)v459) >> 32) >> 1))) >> 24) ^ (v477 >> 16) ^ 0x20310DF2 ^ HIDWORD(v475);
    LODWORD(v475) = 1269 * ((BYTE1(v480) - 75) ^ 0x3E) + 1958067;
    v481 = 1089
         * (*(unsigned __int8 *)(v444
                               + (*(unsigned __int8 *)(v448
                                                     + 1269 * ((BYTE3(v472) + 124) ^ 0x96)
                                                     + 977130
                                                     - 10304
                                                     * (((1667301
                                                                      * (unint64_t)(1269
                                                                                         * ((BYTE3(v472) + 124) ^ 0x96u)
                                                                                         + 977130)) >> 32) >> 2)) ^ 0x7BLL)) ^ 0x10)
         + 1115136;
    v482 = (*(_QWORD *)(v392 + 8 * LODWORD(STACK[0xC68])) >> 16) ^ *(_DWORD *)(v392
                                                                                             + 8
                                                                                             * LODWORD(STACK[0xC78])
                                                                                             + 4) ^ (*(_QWORD *)(v392 + 8 * (1089 * (v458 ^ 0xC) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v458 ^ 0xCu) + 1115136)) >> 32) >> 1))) >> 24) ^ ((v468 ^ (unint64_t)(4 * v468 * v468)) >> 8) ^ 0x81FF1B4A;
    LODWORD(v442) = 1089 * (*(unsigned __int8 *)(v444 + BYTE2(v482)) ^ 0x5F) + 1395009;
    LOBYTE(v468) = *(_BYTE *)(v444 + BYTE2(v480));
    LODWORD(STACK[0xC78]) = v481 - 1568 * (((5478275 * (unint64_t)v481) >> 32) >> 1);
    LOBYTE(v458) = (v468 ^ 0xE7) - 29;
    LODWORD(v468) = *(unsigned __int8 *)(v448
                                       + v475
                                       - 10304
                                       * (((1667301 * (unint64_t)v475) >> 32) >> 2));
    LOBYTE(v458) = *(_BYTE *)(v448
                            + 1269 * (v458 ^ 0xE8)
                            + 2610333
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269 * (v458 ^ 0xE8u) + 2610333)) >> 32) >> 2))
                 + (v458 ^ 0x35);
    v483 = 1089 * (((v458 >> 1) | ((_BYTE)v458 << 7)) ^ 0x54) + 1115136;
    LODWORD(v443) = v483 - 1568 * (((5478275 * (unint64_t)v483) >> 32) >> 1);
    v484 = 1089 * (*(unsigned __int8 *)(v444 + (v482 >> 24)) ^ 0xE5) + 1115136;
    LODWORD(STACK[0xC68]) = v484 - 1568 * (((5478275 * (unint64_t)v484) >> 32) >> 1);
    LODWORD(v475) = 1089 * (*(unsigned __int8 *)(v444 + (v480 >> 24)) ^ 0x24) + 1115136;
    v485 = *(_QWORD *)(v392
                     + 8
                     * (v442
                      - 1568 * (((5478275 * (unint64_t)v442) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v486 = ((v476 ^ (unint64_t)(4 * v476 * v476)) >> 24) ^ ((v473 ^ (4 * STACK[0xC58])) >> 16) ^ ((v478 ^ (unint64_t)(4 * v478 * v478)) >> 32) ^ ((v479 ^ (unint64_t)(4 * v479 * v479)) >> 8) ^ 0x1B731498;
    LODWORD(v451) = 1089 * (*(unsigned __int8 *)(v444 + BYTE2(v486)) ^ 0x10) + 1115136;
    LOBYTE(v462) = ((*(_BYTE *)(v444 + (v486 >> 24)) ^ 0x7F) >> 5) | (8
                                                                                     * (*(_BYTE *)(v444 + (v486 >> 24)) ^ 0x7F));
    LODWORD(v476) = v451 - 1568 * (((5478275 * (unint64_t)v451) >> 32) >> 1);
    LODWORD(v480) = 1089 * (*(unsigned __int8 *)(v444 + v480) ^ 0x46) + 1395009;
    LODWORD(v451) = 1089
                  * ((37
                                     * (v462 ^ 0xA ^ *(_BYTE *)(v448
                                                              + 1269 * (v462 ^ 0x44)
                                                              + 8564481
                                                              - 10304
                                                              * (((1667301
                                                                               * (unint64_t)(1269 * (v462 ^ 0x44u)
                                                                                                  + 8564481)) >> 32) >> 2)))) ^ 6)
                  + 1115136;
    v487 = 1089 * (*(unsigned __int8 *)(v444 + STACK[0xC60]) ^ 0xC5) + 1395009;
    LODWORD(v478) = v480 - 1568 * (((5478275 * (unint64_t)v480) >> 32) >> 1);
    LODWORD(v480) = 1269 * (((*(_BYTE *)(v444 + v486) ^ 0xBF) + 124) ^ 0x96) + 977130;
    LOBYTE(v459) = *(_BYTE *)(v444 + BYTE1(STACK[0xC60])) ^ 0x67;
    v488 = 1269 * (((v459 >> 5) | (8 * v459)) ^ 0x86) + 2937735;
    LODWORD(v486) = 1089 * (*(unsigned __int8 *)(v444 + BYTE1(v486)) ^ 0x87) + 1395009;
    LODWORD(v480) = 1089
                  * (*(unsigned __int8 *)(v448
                                        + v480
                                        - 10304
                                        * (((1667301 * (unint64_t)v480) >> 32) >> 2)) ^ 0x7D)
                  + 1115136;
    LODWORD(v479) = *(unsigned __int8 *)(v444 + BYTE1(v482));
    v489 = *(unsigned __int8 *)(v444
                              + (85
                                                * (((v468 >> 7) | (2 * v468)) ^ (2
                                                                                             * ((v468 >> 7) | (2 * v468))) ^ 0xCC)));
    LODWORD(v442) = 1089 * (*(unsigned __int8 *)(v444 + v482) ^ 0x1D)
                  + 1115136
                  - 1568
                  * (((5478275
                                   * (unint64_t)(1089
                                                      * (*(unsigned __int8 *)(v444 + v482) ^ 0x1Du)
                                                      + 1115136)) >> 32) >> 1);
    v490 = *(_QWORD *)(v392 + 8 * v478);
    LODWORD(v472) = 1089 * (*(unsigned __int8 *)(v444 + BYTE2(STACK[0xC60])) ^ 0xF8) + 1395009;
    v491 = *(_QWORD *)(v392 + 8 * (v487 - 1568 * (((5478275 * (unint64_t)v487) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v443) = ((v485 ^ (unint64_t)(4 * v485 * v485)) >> 8) ^ (*(_QWORD *)(v392 + 8 * v443) >> 16);
    v492 = *(_QWORD *)(v392
                     + 8
                     * (v486
                      - 1568 * (((5478275 * (unint64_t)v486) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v482) = 1089
                  * ((37
                                     * (*(_BYTE *)(v448
                                                 + v488
                                                 - 10304
                                                 * (((1667301 * (unint64_t)v488) >> 32) >> 2)) ^ 0x34)) ^ 6)
                  + 1115136;
    v493 = *(_DWORD *)(v392 + 8 * LODWORD(STACK[0xC68]) + 4) ^ (*(_QWORD *)(v392
                                                                            + 8
                                                                            * (v475
                                                                             - 1568
                                                                             * (((5478275
                                                                                              * (unint64_t)v475) >> 32) >> 1))) >> 8);
    v494 = *(_QWORD *)(v392
                     + 8
                     * (v472
                      - 1568 * (((5478275 * (unint64_t)v472) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v495 = v491 ^ (4 * v491 * v491);
    v496 = v493 ^ (*(_QWORD *)(v392
                             + 8
                             * (v451
                              - 1568 * (((5478275 * (unint64_t)v451) >> 32) >> 1))) >> 16);
    v497 = (v492 ^ (unint64_t)(4 * v492 * v492)) >> 24;
    v498 = v443 ^ (*(_QWORD *)(v392 + 8 * v476) >> 24) ^ LODWORD(STACK[0x890]) ^ *(_DWORD *)(v392 + 8 * LODWORD(STACK[0xC78]) + 4);
    LODWORD(v492) = 1089
                  * ((37
                                     * (((v489 >> 5) | (8 * v489)) ^ 0xA ^ *(_BYTE *)(v448
                                                                                    + 1269
                                                                                    * (((v489 >> 5) | (8 * v489)) ^ 0x44)
                                                                                    + 8564481
                                                                                    - 10304
                                                                                    * (((1667301 * (unint64_t)(1269 * (((v489 >> 5) | (8 * v489)) ^ 0x44u) + 8564481)) >> 32) >> 2)))) ^ 6)
                  + 1115136;
    LODWORD(v451) = 1269 * ((v498 - 75) ^ 0xE9) + 4891995;
    LODWORD(v476) = v492 - 1568 * (((5478275 * (unint64_t)v492) >> 32) >> 1);
    LODWORD(v492) = v451 - 10304 * (((1667301 * (unint64_t)v451) >> 32) >> 2);
    v499 = (*(_QWORD *)(v392
                                    + 8
                                    * (1089 * (v479 ^ 0x80)
                                     + 1115136
                                     - 1568
                                     * (((5478275
                                                      * (unint64_t)(1089 * (v479 ^ 0x80) + 1115136)) >> 32) >> 1))) >> 8) ^ v497 ^ (*(_QWORD *)(v392 + 8 * v476) >> 16) ^ 0x6186D7C5 ^ ((v494 ^ (unint64_t)(4 * v494 * v494)) >> 32);
    LODWORD(v491) = 1269 * ((*(_BYTE *)(v444 + (v499 >> 24)) - 75) ^ 0xE9) + 4891995;
    v500 = v495 >> 24;
    LODWORD(v486) = v491 - 10304 * (((1667301 * (unint64_t)v491) >> 32) >> 2);
    LOBYTE(v495) = *(_BYTE *)(v444 + BYTE1(v498)) - 29;
    v501 = (v490 ^ 0x35DD20B67B57E3F8 ^ (4 * (v490 ^ 0x35DD20B67B57E3F8) * (v490 ^ 0x35DD20B67B57E3F8uLL))) >> 8;
    v502 = *(_QWORD *)(v392
                     + 8
                     * (v480
                      - 1568 * (((5478275 * (unint64_t)v480) >> 32) >> 1))) >> 16;
    LODWORD(v491) = 1269 * ((*(_BYTE *)(v444 + BYTE2(v498)) - 75) ^ 0x3E) + 1958067;
    v503 = v496 ^ 0xBDFAF309 ^ v500;
    LODWORD(v497) = *(unsigned __int8 *)(v448 + v492);
    LODWORD(v492) = v491 - 10304 * (((1667301 * (unint64_t)v491) >> 32) >> 2);
    STACK[0xC78] = 85 * (((v497 >> 7) | (2 * (_DWORD)v497)) ^ 0xE4);
    LODWORD(v491) = 1089 * (*(unsigned __int8 *)(v444 + BYTE2(v503)) ^ 0x72) + 1395009;
    LODWORD(v442) = *(_DWORD *)(v392 + 8 * v442 + 4);
    v504 = *(_QWORD *)(v392
                     + 8
                     * (v482
                      - 1568 * (((5478275 * (unint64_t)v482) >> 32) >> 1))) >> 24;
    LODWORD(STACK[0xC60]) = v491 - 1568 * (((5478275 * (unint64_t)v491) >> 32) >> 1);
    LODWORD(v498) = 1089 * (*(unsigned __int8 *)(v444 + (v498 >> 24)) ^ 0xD1) + 1395009;
    LODWORD(v442) = v502 ^ v501 ^ v442 ^ 0x5AB57B60;
    LODWORD(v501) = v498 - 1568 * (((5478275 * (unint64_t)v498) >> 32) >> 1);
    LOBYTE(v491) = (*(_BYTE *)(v444 + BYTE1(v503)) >> 5) | (8 * *(_BYTE *)(v444 + BYTE1(v503)));
    v505 = v442 ^ v504;
    LODWORD(v502) = 1269 * (((*(_BYTE *)(v444 + (v442 ^ v504)) ^ 0x2F) - 75) ^ 0xE9)
                  + 4891995;
    LODWORD(STACK[0xC68]) = *(unsigned __int8 *)(v444 + BYTE2(v505));
    LODWORD(v502) = *(unsigned __int8 *)(v448
                                       + v502
                                       - 10304
                                       * (((1667301 * (unint64_t)v502) >> 32) >> 2));
    v506 = 1089 * (*(unsigned __int8 *)(v444 + BYTE1(v499)) ^ 0x40) + 1395009;
    LOBYTE(v446) = (*(_BYTE *)(v448 + v486) >> 7) | (2 * *(_BYTE *)(v448 + v486));
    LOBYTE(v497) = (*(_BYTE *)(v444 + (v503 >> 24)) ^ 0x8A) - 29;
    LOBYTE(v480) = *(_BYTE *)(v448
                            + 1269 * (v495 ^ 0xE8)
                            + 2610333
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269 * (v495 ^ 0xE8u) + 2610333)) >> 32) >> 2))
                 + (v495 ^ 0x35);
    LODWORD(v502) = 1089 * ((85 * (((v502 >> 7) | (2 * v502)) ^ 0xE4)) ^ 6) + 1115136;
    LODWORD(v492) = (*(unsigned __int8 *)(v448 + v492) >> 7) | (2
                                                                            * *(unsigned __int8 *)(v448
                                                                                                 + v492));
    LODWORD(v479) = 1089 * (*(unsigned __int8 *)(v444 + BYTE1(v505)) ^ 0xC6) + 1395009;
    v507 = *(_QWORD *)(v392 + 8 * v501) ^ 0x35DD20B67B57E3F8;
    v508 = *(_QWORD *)(v392 + 8 * LODWORD(STACK[0xC60])) ^ 0x35DD20B67B57E3F8;
    LOBYTE(v482) = *(_BYTE *)(v448
                            + 1269 * (v497 ^ 0xE8)
                            + 2610333
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269 * (v497 ^ 0xE8u) + 2610333)) >> 32) >> 2))
                 + (v497 ^ 0x35);
    LOBYTE(v495) = (v482 >> 1) | ((_BYTE)v482 << 7);
    v509 = *(unsigned __int8 *)(v444 + v503);
    LOBYTE(v482) = 37
                 * (v491 ^ 0xA ^ *(_BYTE *)(v448
                                          + 1269 * (v491 ^ 0x44)
                                          + 8564481
                                          - 10304
                                          * (((1667301
                                                           * (unint64_t)(1269 * (v491 ^ 0x44u)
                                                                              + 8564481)) >> 32) >> 2)));
    LODWORD(v491) = 1089 * (v495 ^ 0x54)
                  + 1115136
                  - 1568
                  * (((5478275 * (unint64_t)(1089 * (v495 ^ 0x54u) + 1115136)) >> 32) >> 1);
    v510 = *(_QWORD *)(v392 + 8 * (v506 - 1568 * (((5478275 * (unint64_t)v506) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v503) = 1089 * (*(unsigned __int8 *)(v444 + STACK[0xC78]) ^ 0x7E) + 1395009;
    LODWORD(v494) = *(_DWORD *)(v392
                              + 8
                              * (v502
                               - 1568 * (((5478275 * (unint64_t)v502) >> 32) >> 1))
                              + 4);
    v511 = *(_QWORD *)(v392
                     + 8
                     * (v479
                      - 1568 * (((5478275 * (unint64_t)v479) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v502) = 1089 * (*(unsigned __int8 *)(v444 + BYTE2(v499)) ^ 0x9A) + 1115136;
    LODWORD(v497) = 1089 * ((85 * (v446 ^ 0xE4)) ^ 0x7B) + 1115136;
    v512 = *(_QWORD *)(v392
                     + 8
                     * (v502
                      - 1568 * (((5478275 * (unint64_t)v502) >> 32) >> 1)));
    v513 = *(_QWORD *)(v392
                     + 8
                     * (v503
                      - 1568 * (((5478275 * (unint64_t)v503) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v502) = v497 - 1568 * (((5478275 * (unint64_t)v497) >> 32) >> 1);
    LODWORD(v480) = 1089 * (((v480 >> 1) | ((_BYTE)v480 << 7)) ^ 0x21) + 1395009;
    v514 = *(_QWORD *)(v392
                     + 8
                     * (v480
                      - 1568 * (((5478275 * (unint64_t)v480) >> 32) >> 1)));
    LODWORD(v492) = 1089 * ((85 * (v492 ^ (2 * v492) ^ 0xCC)) ^ 0xE0) + 1115136;
    v515 = v514 ^ 0x35DD20B67B57E3F8 ^ (4 * (v514 ^ 0x35DD20B67B57E3F8) * (v514 ^ 0x35DD20B67B57E3F8));
    LODWORD(v514) = (v512 >> 16) ^ *(_DWORD *)(v392 + 8 * v491 + 4) ^ ((v511 ^ (unint64_t)(4 * v511 * v511)) >> 8) ^ 0xF875CBDF ^ ((v513 ^ (unint64_t)(4 * v513 * v513)) >> 24);
    v516 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (*(unsigned __int8 *)(v444 + v499) ^ 0xF1)
                      + 1395009
                      - 1568
                      * (((5478275
                                       * (unint64_t)(1089
                                                          * (*(unsigned __int8 *)(v444 + v499) ^ 0xF1u)
                                                          + 1395009)) >> 32) >> 1)));
    LOBYTE(v491) = *((_BYTE *)&STACK[0x1AB0] + BYTE2(v514)) - 29;
    v517 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v482 ^ 0xD7)
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v482 ^ 0xD7u) + 1115136)) >> 32) >> 1)));
    v518 = ((v508 ^ (unint64_t)(4 * v508 * v508)) >> 24) ^ ((v507 ^ (unint64_t)(4 * v507 * v507)) >> 16) ^ ((v510 ^ (unint64_t)(4 * v510 * v510)) >> 8) ^ 0x2C334531 ^ v494;
    v519 = (*(_QWORD *)(v392 + 8 * v502) >> 16) ^ (*(_QWORD *)(v392 + 8 * (1089 * (LODWORD(STACK[0xC68]) ^ 0x9F) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC68]) ^ 0x9Fu) + 1115136)) >> 32) >> 1))) >> 8) ^ *(_DWORD *)(v392 + 8 * (1089 * (v509 ^ 0x39) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v509 ^ 0x39u) + 1115136)) >> 32) >> 1)) + 4) ^ 0x83C6F83C ^ (v515 >> 24);
    v520 = (*(_QWORD *)(v392
                                    + 8
                                    * (v492
                                     - 1568
                                     * (((5478275 * (unint64_t)v492) >> 32) >> 1))) >> 8) ^ (v517 >> 16) ^ (*(_QWORD *)(v392 + 8 * (1089 * (*(unsigned __int8 *)(v444 + (v505 >> 24)) ^ 0x46) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (*(unsigned __int8 *)(v444 + (v505 >> 24)) ^ 0x46u) + 1115136)) >> 32) >> 1))) >> 24) ^ ((v516 ^ (4 * (v516 ^ 0x35DD20B67B57E3F8) * (v516 ^ 0x35DD20B67B57E3F8uLL))) >> 32) ^ 0x7CECCFD8;
    v521 = v520 >> 24;
    LOBYTE(v496) = (v491 ^ 0x74)
                 - ((2 * (v491 ^ 0x74)) & 0x83)
                 + *(_BYTE *)(v448
                            + 1269 * (v491 ^ 0xE8)
                            + 2610333
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269 * (v491 ^ 0xE8u) + 2610333)) >> 32) >> 2))
                 + 65;
    LODWORD(v510) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v519));
    LODWORD(v511) = *((unsigned __int8 *)&STACK[0x1AB0]
                    + ((WORD1(*(_QWORD *)(v392 + 8 * v502)) ^ BYTE1(*(_QWORD *)(v392 + 8 * (1089 * (LODWORD(STACK[0xC68]) ^ 0x9F) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC68]) ^ 0x9Fu) + 1115136)) >> 32) >> 1)))) ^ *(_BYTE *)(v392 + 8 * (1089 * (v509 ^ 0x39) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v509 ^ 0x39u) + 1115136)) >> 32) >> 1)) + 4)) ^ 0x3Cu ^ BYTE3(v515)));
    LOBYTE(v492) = *((_BYTE *)&STACK[0x1AB0] + v520) - 29;
    LODWORD(v505) = 1269 * ((BYTE3(v514) - 75) ^ 0x3E) + 1958067;
    LOBYTE(v507) = *(_BYTE *)(v448
                            + (1269 * (v492 ^ 0x42)
                                           - 10304
                                           * ((416826 * (unint64_t)(1269 * (v492 ^ 0x42u))) >> 32)));
    LODWORD(v502) = *(unsigned __int8 *)(v448
                                       + v505
                                       - 10304
                                       * (((1667301 * (unint64_t)v505) >> 32) >> 2));
    LODWORD(v491) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v518));
    LODWORD(STACK[0xC68]) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v520));
    LODWORD(v510) = 1269 * (((v510 >> 5) | (8 * v510)) ^ 0x86) + 2937735;
    LODWORD(v515) = v510 - 10304 * (((1667301 * (unint64_t)v510) >> 32) >> 2);
    LOBYTE(v446) = 85
                 * (((v502 >> 7) | (2 * v502)) ^ (2 * ((v502 >> 7) | (2 * v502))) ^ 0xCC);
    LOBYTE(v502) = (*((_BYTE *)&STACK[0x1AB0] + (v518 >> 24)) >> 5) | (8 * *((_BYTE *)&STACK[0x1AB0] + (v518 >> 24)));
    LOBYTE(v507) = v492 ^ 0x95 ^ v507;
    LODWORD(v510) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v518));
    LODWORD(v513) = 1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v519 >> 24)) - 75) ^ 0x3E) + 1958067;
    LOBYTE(v492) = *((_BYTE *)&STACK[0x1AB0] + BYTE2(v520));
    LOBYTE(v479) = *((_BYTE *)&STACK[0x1AB0] + BYTE1(v519));
    LODWORD(v520) = v513 - 10304 * (((1667301 * (unint64_t)v513) >> 32) >> 2);
    LODWORD(v513) = *((unsigned __int8 *)&STACK[0x1AB0] + v446);
    LOBYTE(v515) = *(_BYTE *)(v448 + v515);
    LODWORD(STACK[0xC78]) = *((unsigned __int8 *)&STACK[0x1AB0] + v521);
    LODWORD(v446) = 1089 * (v511 ^ 0xF2)
                  + 1395009
                  - 1568
                  * (((5478275 * (unint64_t)(1089 * (v511 ^ 0xF2) + 1395009)) >> 32) >> 1);
    v522 = *(unsigned __int8 *)(v448 + v520);
    LOBYTE(v520) = 37
                 * (v502 ^ 0xA ^ *(_BYTE *)(v448
                                          + 1269 * (v502 ^ 0x44)
                                          + 8564481
                                          - 10304
                                          * (((1667301
                                                           * (unint64_t)(1269 * (v502 ^ 0x44u)
                                                                              + 8564481)) >> 32) >> 2)));
    v523 = 1089 * (((v496 >> 1) | ((_BYTE)v496 << 7)) ^ 0x51) + 1395009;
    LODWORD(STACK[0xC60]) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v514));
    v524 = *(_QWORD *)(v392 + 8 * (v523 - 1568 * (((5478275 * (unint64_t)v523) >> 32) >> 1)));
    v525 = *((unsigned __int8 *)&STACK[0x1AB0] + v518);
    LOBYTE(v511) = *((_BYTE *)&STACK[0x1AB0] + v514);
    v526 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v491 ^ 0xD4)
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v491 ^ 0xD4) + 1115136)) >> 32) >> 1)));
    LOBYTE(v491) = v515 ^ 0x34;
    LODWORD(v515) = 1089 * (v513 ^ 0x1A) + 1115136;
    LOBYTE(v513) = ((v479 ^ 0xE7) >> 5) | (8 * (v479 ^ 0xE7));
    LODWORD(v507) = 1089 * (((v507 >> 1) | ((_BYTE)v507 << 7)) ^ 3) + 1395009;
    v528 = *(_QWORD *)(v392 + 8 * v446) ^ 0x35DD20B67B57E3F8;
    STACK[0xC58] = (v524 ^ (4 * (v524 ^ 0x35DD20B67B57E3F8) * (v524 ^ 0x35DD20B67B57E3F8uLL))) >> 16;
    v529 = *(_QWORD *)(v392
                     + 8
                     * (v507
                      - 1568 * (((5478275 * (unint64_t)v507) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v517) = 1089
                  * ((37
                                     * (v513 ^ 0xA ^ *(_BYTE *)(v448
                                                              + 1269 * (v513 ^ 0x44)
                                                              + 8564481
                                                              - 10304
                                                              * (((1667301
                                                                               * (unint64_t)(1269 * (v513 ^ 0x44u)
                                                                                                  + 8564481)) >> 32) >> 2)))) ^ 6)
                  + 1115136;
    LODWORD(v491) = 1089 * ((37 * v491) ^ 5) + 1395009;
    LODWORD(v492) = 1269 * (((v492 ^ 0x25) + 124) ^ 0x96) + 977130;
    v530 = (v526 >> 8) ^ ((v528 ^ (unint64_t)(4 * v528 * v528)) >> 24) ^ ((v529 ^ (unint64_t)(4 * v529 * v529)) >> 32);
    v531 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v510 ^ 0xAF)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v510 ^ 0xAF) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v532 = *(_QWORD *)(v392
                     + 8
                     * (v491
                      - 1568 * (((5478275 * (unint64_t)v491) >> 32) >> 1)));
    LODWORD(v529) = 1089
                  * (*(unsigned __int8 *)(v448
                                        + v492
                                        - 10304
                                        * (((1667301 * (unint64_t)v492) >> 32) >> 2)) ^ 0x54)
                  + 1395009;
    v533 = (*(_QWORD *)(v392
                      + 8
                      * (v517
                       - 1568 * (((5478275 * (unint64_t)v517) >> 32) >> 1))) >> 24) ^ *(_DWORD *)(v392 + 8 * (1089 * (LODWORD(STACK[0xC68]) ^ 0xB0) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC68]) ^ 0xB0u) + 1115136)) >> 32) >> 1)) + 4) ^ (*(_QWORD *)(v392 + 8 * (v515 - 1568 * (((5478275 * (unint64_t)v515) >> 32) >> 1))) >> 16);
    LOBYTE(v517) = v511 ^ 0x97;
    v534 = (v531 ^ (unint64_t)(4 * v531 * v531)) >> 8;
    LOBYTE(v531) = v517 + 124;
    LODWORD(v517) = 1269 * ((v517 + 124) ^ 0x14) + 9216747;
    v535 = (v532 ^ (4 * (v532 ^ 0x35DD20B67B57E3F8) * (v532 ^ 0x35DD20B67B57E3F8uLL))) >> 24;
    v536 = *(_QWORD *)(v392
                     + 8
                     * (v529
                      - 1568 * (((5478275 * (unint64_t)v529) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v537 = *(_BYTE *)(v448
                    + v517
                    - 10304 * (((1667301 * (unint64_t)v517) >> 32) >> 2)) ^ ((v531 ^ 0x2C) + 69);
    v538 = 1089 * (v520 ^ 0xE) + 1115136;
    LODWORD(v517) = 1269 * (((LOBYTE(STACK[0xC78]) ^ 0x29) + 124) ^ 0x14) + 9216747;
    v539 = v536 ^ (4 * v536 * v536);
    v540 = v517 - 10304 * (((1667301 * (unint64_t)v517) >> 32) >> 2);
    if ((v537 & 0x20) != 0)
      v541 = -32;
    else
      v541 = 32;
    v542 = (v541 + v537) ^ 0x6B;
    v543 = 1089
         * (((((LOBYTE(STACK[0xC78]) ^ 0x29) + 124) ^ 0x2C) + 69) ^ 0x62 ^ *(unsigned __int8 *)(v448 + v540))
         + 1395009;
    v544 = *(_QWORD *)(v392 + 8 * (v543 - 1568 * (((5478275 * (unint64_t)v543) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v527 = 85 * (((v522 >> 7) | (2 * v522)) ^ (2 * ((v522 >> 7) | (2 * v522))) ^ 0xFFFFFFCC);
    v545 = 1269 * ((((v527 ^ 0xBF) >> 5) | (8 * (v527 ^ 0xBF))) ^ 0x86) + 2937735;
    v546 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v525 ^ 0x47)
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v525 ^ 0x47u) + 1115136)) >> 32) >> 1)));
    v547 = v533 ^ v534 ^ 0x2CDE4994;
    v548 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (LODWORD(STACK[0xC60]) ^ 0xB6)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC60]) ^ 0xB6u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v549 = STACK[0xC58] ^ v530 ^ 0xE988AA3;
    v550 = *((_BYTE *)&STACK[0x1AB0] + (v533 ^ v534 ^ 0x94)) - 29;
    v551 = 1089
         * ((37
                            * (*(_BYTE *)(v448
                                        + v545
                                        - 10304 * (((1667301 * (unint64_t)v545) >> 32) >> 2)) ^ 0x34)) ^ 6)
         + 1115136;
    v552 = (*(_QWORD *)(v392
                                    + 8
                                    * (v538 - 1568 * (((5478275 * (unint64_t)v538) >> 32) >> 1))) >> 8) ^ HIDWORD(v539) ^ v535 ^ (*(_QWORD *)(v392 + 8 * (1089 * v542 + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * v542 + 1115136)) >> 32) >> 1))) >> 16) ^ 0x782405BE;
    v553 = ((v544 ^ (unint64_t)(4 * v544 * v544)) >> 16) ^ (v546 >> 24) ^ ((v548 ^ (unint64_t)(4 * v548 * v548)) >> 32) ^ 0xD6243FAA ^ (*(_QWORD *)(v392 + 8 * (v551 - 1568 * (((5478275 * (unint64_t)v551) >> 32) >> 1))) >> 8);
    v554 = v550 ^ 0x95 ^ *(_BYTE *)(v448
                                  + (1269 * (v550 ^ 0x42)
                                                 - 10304 * ((416826 * (unint64_t)(1269 * (v550 ^ 0x42u))) >> 32)));
    v555 = *((_BYTE *)&STACK[0x1AB0] + BYTE1(v547)) + 124;
    v556 = (v554 >> 1) | (v554 << 7);
    LODWORD(v546) = v555 ^ 0x14;
    LODWORD(v548) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v553));
    v557 = *((unsigned __int8 *)&STACK[0x1AB0] + v552);
    v558 = (*((_BYTE *)&STACK[0x1AB0] + (v553 >> 24)) - 29) ^ 0x95 ^ *(_BYTE *)(v448
                                                                              + (1269
                                                                                             * ((*((_BYTE *)&STACK[0x1AB0] + (v553 >> 24)) - 29) ^ 0x42)
                                                                                             - 10304
                                                                                             * ((416826
                                                                                               * (unint64_t)(1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v553 >> 24)) - 29) ^ 0x42u))) >> 32)));
    v559 = ((v549 >> 8) + 227) ^ 0xFFFFFF95 ^ *(unsigned __int8 *)(v448
                                                                               + (1269
                                                                                              * ((BYTE1(v549) - 29) ^ 0x42)
                                                                                              - 10304
                                                                                              * ((416826
                                                                                                * (unint64_t)(1269 * ((BYTE1(v549) - 29) ^ 0x42u))) >> 32)));
    v560 = 1269 * ((HIBYTE(v547) - 29) ^ 0xE8) + 2610333;
    v561 = *(unsigned __int8 *)(v448 + v560 - 10304 * (((1667301 * (unint64_t)v560) >> 32) >> 2))
         + ((HIBYTE(v547) + 227) ^ 0x35);
    LODWORD(v544) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v549)) ^ 0xD2) + 1115136;
    v562 = v544 - 1568 * (((5478275 * (unint64_t)v544) >> 32) >> 1);
    v563 = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v553));
    v564 = (v555 ^ 0x2C) + 69;
    v565 = *((unsigned __int8 *)&STACK[0x1AB0] + (v552 >> 24));
    LODWORD(v544) = *((unsigned __int8 *)&STACK[0x1AB0] + v553);
    v566 = *((unsigned __int8 *)&STACK[0x1AB0] + (STACK[0xC58] ^ v530 ^ 0xA3));
    v567 = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v547));
    v568 = ((v561 >> 1) | ((_BYTE)v561 << 7));
    LOBYTE(v561) = (BYTE1(v552) - 29) ^ 0x95 ^ *(_BYTE *)(v448
                                                        + (1269
                                                                       * ((BYTE1(v552) - 29) ^ 0x42)
                                                                       - 10304
                                                                       * ((416826
                                                                         * (unint64_t)(1269
                                                                                            * ((BYTE1(v552) - 29) ^ 0x42u))) >> 32)));
    v569 = v564 ^ 0xE9 ^ *(unsigned __int8 *)(v448
                                            + 1269 * (_DWORD)v546
                                            + 9216747
                                            - 10304
                                            * (((1667301
                                                             * (unint64_t)(1269 * v546 + 9216747)) >> 32) >> 2));
    LOBYTE(v546) = (v561 >> 1) | ((_BYTE)v561 << 7);
    v570 = 1089 * v569 + 1395009;
    v571 = *((unsigned __int8 *)&STACK[0x1AB0] + v546);
    LODWORD(v552) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v552)) ^ 0x5E) + 1395009;
    v572 = *(_QWORD *)(v392
                     + 8
                     * (v552
                      - 1568 * (((5478275 * (unint64_t)v552) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v573 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v563 ^ 0x46)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v563 ^ 0x46u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v574 = *(_QWORD *)(v392 + 8 * (v570 - 1568 * (((5478275 * (unint64_t)v570) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v572) = (*(_QWORD *)(v392
                               + 8
                               * (1089 * (v556 ^ 0xED)
                                + 1115136
                                - 1568
                                * (((5478275 * (unint64_t)(1089 * (v556 ^ 0xEDu) + 1115136)) >> 32) >> 1))) >> 24) ^ (*(_QWORD *)(v392 + 8 * v562) >> 16) ^ ((v572 ^ (unint64_t)(4 * v572 * v572)) >> 32) ^ ((v573 ^ (unint64_t)(4 * v573 * v573)) >> 8);
    v575 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (((v558 >> 1) | (v558 << 7)) ^ 0xF3)
                      + 1395009
                      - 1568
                      * (((5478275
                                       * (unint64_t)(1089
                                                          * (((v558 >> 1) | (v558 << 7)) ^ 0xF3u)
                                                          + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v576 = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + (v549 >> 24)) ^ 0x80) + 1115136;
    v577 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v557 ^ 0xCE)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v557 ^ 0xCEu) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LOBYTE(v568) = (*((_BYTE *)&STACK[0x1AB0] + (v568 ^ 0x52)) ^ 0x18) - 29;
    v578 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v544 ^ 0x45)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v544 ^ 0x45) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v579 = *(_DWORD *)(v392
                     + 8
                     * (1089 * (v565 ^ 0xD8)
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v565 ^ 0xD8u) + 1115136)) >> 32) >> 1))
                     + 4) ^ (*(_QWORD *)(v392
                                       + 8
                                       * (v576 - 1568 * (((5478275 * (unint64_t)v576) >> 32) >> 1))) >> 16) ^ ((v574 ^ (unint64_t)(4 * v574 * v574)) >> 24) ^ ((v575 ^ (unint64_t)(4 * v575 * v575)) >> 8);
    LOBYTE(v568) = v568 ^ 0x95 ^ *(_BYTE *)(v448
                                          + (1269 * (v568 ^ 0x42)
                                                         - 10304
                                                         * ((416826
                                                           * (unint64_t)(1269 * (v568 ^ 0x42u))) >> 32)));
    v580 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v548 ^ 0x96)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v548 ^ 0x96) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v549) = 1089
                  * (*((unsigned __int8 *)&STACK[0x1AB0]
                     + ((v559 >> 1) | ((_BYTE)v559 << 7))) ^ 0x8E)
                  + 1115136;
    v581 = v572 ^ 0xB76C1B0A;
    LODWORD(v568) = 1089 * (((v568 >> 1) | ((_BYTE)v568 << 7)) ^ 6) + 1115136;
    v582 = v580 ^ (4 * v580 * v580);
    v583 = v579 ^ 0x660CEBFF;
    v584 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v571 ^ 0x74)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v571 ^ 0x74u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v572) = 1269 * (((v581 >> 5) & 0xF8 | ((unsigned __int16)v572 >> 13)) ^ 0x86) + 2937735;
    v585 = (*(_QWORD *)(v392
                                    + 8
                                    * (1089 * (v566 ^ 0x31)
                                     + 1115136
                                     - 1568
                                     * (((5478275 * (unint64_t)(1089 * (v566 ^ 0x31u) + 1115136)) >> 32) >> 1))) >> 8) ^ (*(_QWORD *)(v392 + 8 * (1089 * (v567 ^ 0x25) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v567 ^ 0x25u) + 1115136)) >> 32) >> 1))) >> 16) ^ ((v577 ^ (unint64_t)(4 * v577 * v577)) >> 24) ^ 0xF9FDFDC1 ^ ((v578 ^ (unint64_t)(4 * v578 * v578)) >> 32);
    v586 = *(_QWORD *)(v392
                     + 8
                     * (v568
                      - 1568 * (((5478275 * (unint64_t)v568) >> 32) >> 1))) >> 24;
    v587 = (v584 ^ (unint64_t)(4 * v584 * v584)) >> 32;
    LOBYTE(v573) = *((_BYTE *)&STACK[0x1AB0] + v585);
    LOBYTE(v572) = *(_BYTE *)(v448
                            + v572
                            - 10304 * (((1667301 * (unint64_t)v572) >> 32) >> 2));
    LOBYTE(v574) = *((_BYTE *)&STACK[0x1AB0] + (v583 >> 24));
    LODWORD(v584) = (*(_QWORD *)(v392
                               + 8
                               * (v549
                                - 1568 * (((5478275 * (unint64_t)v549) >> 32) >> 1))) >> 16) ^ (v582 >> 8);
    LODWORD(STACK[0xC60]) = *((unsigned __int8 *)&STACK[0x1AB0] + ~(_BYTE)v579);
    v588 = v586 ^ v584 ^ v587 ^ 0x34D909BA;
    LODWORD(STACK[0xC58]) = *((unsigned __int8 *)&STACK[0x1AB0] + (v588 >> 24));
    LODWORD(v586) = 1269 * (((v581 >> 13) & 0xF8 | (v581 >> 21) & 7) ^ 0x86) + 2937735;
    v589 = *((_BYTE *)&STACK[0x1AB0] + BYTE2(v585));
    LOBYTE(v559) = 37 * (v572 ^ 0x34);
    LODWORD(v572) = 1269 * ((v573 - 29) ^ 0xE8) + 2610333;
    LOBYTE(v575) = *((_BYTE *)&STACK[0x1AB0] + (v581 >> 24)) - 29;
    LOBYTE(v578) = *(_BYTE *)(v448
                            + v572
                            - 10304 * (((1667301 * (unint64_t)v572) >> 32) >> 2))
                 + ((v573 - 29) ^ 0x35);
    LOBYTE(v567) = *((_BYTE *)&STACK[0x1AB0] + BYTE2(v588)) - 75;
    LOBYTE(v562) = 37
                 * (*(_BYTE *)(v448
                             + v586
                             - 10304 * (((1667301 * (unint64_t)v586) >> 32) >> 2)) ^ 0x34);
    LODWORD(STACK[0xC68]) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v588));
    LOBYTE(v563) = v575 ^ 0x95 ^ *(_BYTE *)(v448
                                          + (1269 * (v575 ^ 0x42)
                                                         - 10304
                                                         * ((416826
                                                           * (unint64_t)(1269 * (v575 ^ 0x42u))) >> 32)));
    LOBYTE(v586) = (v578 >> 1) | ((_BYTE)v578 << 7);
    v590 = *(unsigned __int8 *)(v448
                              + 1269 * (v567 ^ 0x3E)
                              + 1958067
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v567 ^ 0x3Eu) + 1958067)) >> 32) >> 2));
    LODWORD(v573) = (v590 >> 7) | (2 * v590);
    LODWORD(v575) = *((unsigned __int8 *)&STACK[0x1AB0] + v588);
    v591 = *((unsigned __int8 *)&STACK[0x1AB0] + v562);
    v592 = *((unsigned __int8 *)&STACK[0x1AB0] + v559) ^ 0xAA;
    LODWORD(v578) = *((unsigned __int8 *)&STACK[0x1AB0] + (v585 >> 24));
    LODWORD(STACK[0xC78]) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v585));
    v593 = 1269 * (((v583 >> 13) & 0xF8 | (v579 >> 21) & 7) ^ 0x86) + 2937735;
    LOBYTE(v574) = ((v574 ^ 0x95) >> 5) | (8 * (v574 ^ 0x95));
    v594 = v593 - 10304 * (((1667301 * (unint64_t)v593) >> 32) >> 2);
    v595 = ((v589 ^ 0x44) >> 5) | (8 * (v589 ^ 0x44));
    LODWORD(v549) = 1089
                  * ((37
                                     * (v574 ^ 0xA ^ *(_BYTE *)(v448
                                                              + 1269 * (v574 ^ 0x44)
                                                              + 8564481
                                                              - 10304
                                                              * (((1667301
                                                                               * (unint64_t)(1269 * (v574 ^ 0x44u)
                                                                                                  + 8564481)) >> 32) >> 2)))) ^ 6)
                  + 1115136;
    v596 = *(_QWORD *)(v392
                     + 8
                     * (1089 * v592
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v592 + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v597 = 1089
         * ((37
                            * (v595 ^ 0xA ^ *(_BYTE *)(v448
                                                     + 1269 * (v595 ^ 0x44)
                                                     + 8564481
                                                     - 10304
                                                     * (((1667301
                                                                      * (unint64_t)(1269 * (v595 ^ 0x44u)
                                                                                         + 8564481)) >> 32) >> 2)))) ^ 0x2F)
         + 1395009;
    v598 = *(_QWORD *)(v392 + 8 * (v597 - 1568 * (((5478275 * (unint64_t)v597) >> 32) >> 1)));
    v599 = 1269 * (((LODWORD(STACK[0xC60]) ^ 0xF3) - 75) ^ 0x3E) + 1958067;
    v600 = *(unsigned __int8 *)(v448 + v599 - 10304 * (((1667301 * (unint64_t)v599) >> 32) >> 2));
    LOBYTE(v584) = 85 * (v573 ^ (2 * v573) ^ 0xCC);
    LODWORD(v573) = 1089
                  * ((85 * (((v600 >> 7) | (2 * v600)) ^ (2 * ((v600 >> 7) | (2 * v600))) ^ 0xCC)) ^ 0x2F)
                  + 1395009;
    v601 = *(_QWORD *)(v392
                     + 8
                     * (v573
                      - 1568 * (((5478275 * (unint64_t)v573) >> 32) >> 1)));
    v602 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v575 ^ 0xBB)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v575 ^ 0xBB) + 1395009)) >> 32) >> 1)));
    v603 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v578 ^ 0xE5)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v578 ^ 0xE5) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v572) = ((v596 ^ (unint64_t)(4 * v596 * v596)) >> 32) ^ (*(_QWORD *)(v392
                                                                                      + 8
                                                                                      * (1089
                                                                                       * (LODWORD(STACK[0xC58]) ^ 0x2E)
                                                                                       + 1115136
                                                                                       - 1568
                                                                                       * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC58]) ^ 0x2Eu) + 1115136)) >> 32) >> 1))) >> 24) ^ ((v598 ^ (4 * (v598 ^ 0x35DD20B67B57E3F8) * (v598 ^ 0x35DD20B67B57E3F8uLL))) >> 16);
    v604 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v591 ^ 0xD3)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v591 ^ 0xD3u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v588) = 1089 * (((v563 >> 1) | ((_BYTE)v563 << 7)) ^ 0x74) + 1395009;
    v605 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v586 ^ 0x9F)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v586 ^ 0x9Fu) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v606 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (LODWORD(STACK[0xC68]) ^ 0x62)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC68]) ^ 0x62u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v602) = ((v603 ^ (unint64_t)(4 * v603 * v603)) >> 24) ^ ((v602 ^ (4
                                                                                   * (v602 ^ 0x35DD20B67B57E3F8)
                                                                                   * (v602 ^ 0x35DD20B67B57E3F8uLL))) >> 32);
    v607 = *(_QWORD *)(v392
                     + 8
                     * (v588
                      - 1568 * (((5478275 * (unint64_t)v588) >> 32) >> 1)));
    LODWORD(v585) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v583)) ^ 0x15) + 1395009;
    v608 = v606 ^ (4 * v606 * v606);
    LODWORD(v604) = v602 ^ ((v604 ^ (unint64_t)(4 * v604 * v604)) >> 8);
    v609 = *(_QWORD *)(v392
                     + 8
                     * (v585
                      - 1568 * (((5478275 * (unint64_t)v585) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v606) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v581) ^ 0xC0) + 1395009;
    v610 = v604 ^ 0x89900028 ^ ((v601 ^ (4
                                                                   * (v601 ^ 0x35DD20B67B57E3F8)
                                                                   * (v601 ^ 0x35DD20B67B57E3F8uLL))) >> 16);
    LODWORD(v585) = *((unsigned __int8 *)&STACK[0x1AB0]
                    + (v604 ^ 0x28u ^ ((v601 ^ (4
                                                                                              * (v601 ^ 0x7B57E3F8)
                                                                                              * (v601 ^ 0x7B57E3F8))) >> 16)));
    v611 = *(_QWORD *)(v392
                     + 8
                     * (v606
                      - 1568 * (((5478275 * (unint64_t)v606) >> 32) >> 1)));
    v612 = (v608 >> 24) ^ ((v605 ^ (unint64_t)(4 * v605 * v605)) >> 16) ^ ((v607 ^ (4 * (v607 ^ 0x35DD20B67B57E3F8) * (v607 ^ 0x35DD20B67B57E3F8uLL))) >> 32) ^ ((v609 ^ (unint64_t)(4 * v609 * v609)) >> 8) ^ 0xB44614FC;
    LODWORD(v605) = 1089 * (v584 ^ 0x12)
                  + 1115136
                  - 1568
                  * (((5478275 * (unint64_t)(1089 * (v584 ^ 0x12u) + 1115136)) >> 32) >> 1);
    v613 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (LODWORD(STACK[0xC78]) ^ 0xE8)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC78]) ^ 0xE8u) + 1395009)) >> 32) >> 1)));
    LODWORD(v584) = 1089
                  * (*((unsigned __int8 *)&STACK[0x1AB0] + (37 * (*(_BYTE *)(v448 + v594) ^ 0x34))) ^ 0x9C)
                  + 1115136;
    v614 = *(_QWORD *)(v392
                     + 8
                     * (v584
                      - 1568 * (((5478275 * (unint64_t)v584) >> 32) >> 1)));
    v615 = v572 ^ 0x832468EF ^ (*(_QWORD *)(v392
                                                                      + 8
                                                                      * (v549
                                                                       - 1568
                                                                       * (((5478275
                                                                                        * (unint64_t)v549) >> 32) >> 1))) >> 8);
    LODWORD(v549) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v615));
    LOBYTE(v607) = *(_BYTE *)(v448
                            + 1269 * ((*((_BYTE *)&STACK[0x1AB0] + v612) - 29) ^ 0xE8)
                            + 2610333
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269
                                                                * ((*((_BYTE *)&STACK[0x1AB0]
                                                                                     + v612)
                                                                                   - 29) ^ 0xE8u)
                                                                + 2610333)) >> 32) >> 2))
                 + ((*((_BYTE *)&STACK[0x1AB0] + v612) - 29) ^ 0x35);
    v616 = ((v611 ^ 0x35DD20B67B57E3F8 ^ (4
                                                        * (v611 ^ 0x35DD20B67B57E3F8)
                                                        * (v611 ^ 0x35DD20B67B57E3F8uLL))) >> 16) ^ (*(_QWORD *)(v392 + 8 * v605) >> 8) ^ ((v613 ^ (4 * (v613 ^ 0x35DD20B67B57E3F8) * (v613 ^ 0x35DD20B67B57E3F8uLL))) >> 32) ^ 0xCCE3644 ^ (v614 >> 24);
    LODWORD(v572) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + (v615 >> 24)) ^ 0xE5) + 1395009;
    v617 = *(_QWORD *)(v392
                     + 8
                     * (v572
                      - 1568 * (((5478275 * (unint64_t)v572) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LOBYTE(v600) = (v607 >> 1) | ((_BYTE)v607 << 7);
    LODWORD(v613) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v612));
    LODWORD(v572) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v616));
    v618 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v585 ^ 0x29)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v585 ^ 0x29) + 1395009)) >> 32) >> 1)));
    LODWORD(v607) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v616));
    LODWORD(v601) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + (v612 >> 24)) ^ 0xF7) + 1395009;
    LODWORD(v585) = *((unsigned __int8 *)&STACK[0x1AB0] + (v610 >> 24));
    LODWORD(v608) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + (v616 >> 24)) ^ 0xA7) + 1395009;
    v619 = v618 ^ 0x35DD20B67B57E3F8 ^ (4 * (v618 ^ 0x35DD20B67B57E3F8) * (v618 ^ 0x35DD20B67B57E3F8));
    v620 = *(_QWORD *)(v392
                     + 8
                     * (v601
                      - 1568 * (((5478275 * (unint64_t)v601) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v621 = *(_QWORD *)(v392
                     + 8
                     * (v608
                      - 1568 * (((5478275 * (unint64_t)v608) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v622 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v610)) ^ 0x61)
                      + 1395009
                      - 1568
                      * (((5478275
                                       * (unint64_t)(1089
                                                          * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v610)) ^ 0x61u)
                                                          + 1395009)) >> 32) >> 1)));
    v623 = HIDWORD(v619);
    LODWORD(v616) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v616) ^ 0x7C) + 1115136;
    LODWORD(v612) = 1269 * (((*((_BYTE *)&STACK[0x1AB0] + BYTE1(v612)) ^ 0x5E) - 75) ^ 0xE9) + 4891995;
    v624 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v600 ^ 0x33)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v600 ^ 0x33u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v625 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v615) ^ 0xB3)
                      + 1395009
                      - 1568
                      * (((5478275
                                       * (unint64_t)(1089
                                                          * (*((unsigned __int8 *)&STACK[0x1AB0] + v615) ^ 0xB3u)
                                                          + 1395009)) >> 32) >> 1)));
    LODWORD(v621) = ((v617 ^ (unint64_t)(4 * v617 * v617)) >> 24) ^ ((v620 ^ (unint64_t)(4 * v620 * v620)) >> 8) ^ ((v621 ^ (unint64_t)(4 * v621 * v621)) >> 16);
    LODWORD(v612) = *(unsigned __int8 *)(v448
                                       + v612
                                       - 10304
                                       * (((1667301 * (unint64_t)v612) >> 32) >> 2));
    v626 = (v624 ^ (unint64_t)(4 * v624 * v624)) >> 32;
    LOBYTE(v624) = (85 * (((v612 >> 7) | (2 * v612)) ^ 0xE4)) ^ 6;
    LODWORD(v610) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v610)) ^ 0x52) + 1395009;
    LODWORD(v617) = v607 ^ 0x86;
    v627 = (v625 ^ (4 * (v625 ^ 0x35DD20B67B57E3F8) * (v625 ^ 0x35DD20B67B57E3F8uLL))) >> 16;
    LODWORD(v615) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v615)) ^ 0x1D) + 1115136;
    LODWORD(v625) = *(_DWORD *)(v392
                              + 8
                              * (1089 * (_DWORD)v617
                               + 1115136
                               - 1568
                               * (((5478275 * (unint64_t)(1089 * v617 + 1115136)) >> 32) >> 1))
                              + 4);
    v628 = *(_QWORD *)(v392
                     + 8
                     * (v610
                      - 1568 * (((5478275 * (unint64_t)v610) >> 32) >> 1)));
    v629 = v623 ^ v621 ^ 0xD52083FC;
    LODWORD(v616) = (*(_QWORD *)(v392
                               + 8
                               * (v616
                                - 1568 * (((5478275 * (unint64_t)v616) >> 32) >> 1))) >> 8) ^ v626;
    v630 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v572 ^ 0xFA)
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v572 ^ 0xFA) + 1115136)) >> 32) >> 1)));
    v631 = v625 ^ (*(_QWORD *)(v392
                                                         + 8
                                                         * (v615
                                                          - 1568
                                                          * (((5478275
                                                                           * (unint64_t)v615) >> 32) >> 1))) >> 8) ^ (*(_QWORD *)(v392 + 8 * (1089 * v624 + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * v624 + 1115136)) >> 32) >> 1))) >> 24) ^ 0xF5F366B3 ^ ((v628 ^ (4 * (v628 ^ 0x35DD20B67B57E3F8) * (v628 ^ 0x35DD20B67B57E3F8)) ^ 0x73AEE9380000uLL) >> 16);
    v632 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v613 ^ 0xF1)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v613 ^ 0xF1) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v633 = v616 ^ v627 ^ 0x8FD19074 ^ ((v622 ^ 0x35DD20B67B57E3F8 ^ (4 * (v622 ^ 0x35DD20B67B57E3F8) * (v622 ^ 0x35DD20B67B57E3F8uLL))) >> 24);
    LOBYTE(v623) = (*((_BYTE *)&STACK[0x1AB0] + BYTE2(v631)) - 29) ^ 0x95 ^ *(_BYTE *)(v448
                                                                                     + (1269 * ((*((_BYTE *)&STACK[0x1AB0] + BYTE2(v631)) - 29) ^ 0x42) - 10304 * ((416826 * (unint64_t)(1269 * ((*((_BYTE *)&STACK[0x1AB0] + BYTE2(v631)) - 29) ^ 0x42u))) >> 32)));
    v634 = (*(_QWORD *)(v392
                                    + 8
                                    * (1089 * (v549 ^ 0xF7)
                                     + 1115136
                                     - 1568
                                     * (((5478275
                                                      * (unint64_t)(1089 * (v549 ^ 0xF7) + 1115136)) >> 32) >> 1))) >> 16) ^ (v630 >> 8) ^ ((v632 ^ (unint64_t)(4 * v632 * v632)) >> 32) ^ 0x4E7E761B ^ (*(_QWORD *)(v392 + 8 * (1089 * (v585 ^ 0xB6) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v585 ^ 0xB6) + 1115136)) >> 32) >> 1))) >> 24);
    LOBYTE(v549) = (v623 >> 1) | ((_BYTE)v623 << 7);
    LODWORD(v612) = *((unsigned __int8 *)&STACK[0x1AB0] + (v633 >> 24));
    LODWORD(v616) = *((unsigned __int8 *)&STACK[0x1AB0]
                    + ((v616 ^ v627) ^ 0x74 ^ ((v622 ^ 0x7B57E3F8 ^ (4
                                                                                                  * (v622 ^ 0x7B57E3F8)
                                                                                                  * (v622 ^ 0x7B57E3F8))) >> 24)));
    LODWORD(v621) = 1269
                  * (((*((_BYTE *)&STACK[0x1AB0] + (v634 >> 24)) >> 5) | (8
                                                                                         * *((_BYTE *)&STACK[0x1AB0]
                                                                                           + (v634 >> 24)))) ^ 0x86)
                  + 2937735;
    LODWORD(v632) = 1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v631 >> 24)) - 75) ^ 0xE9) + 4891995;
    v635 = v629 >> 24;
    LODWORD(v630) = v632 - 10304 * (((1667301 * (unint64_t)v632) >> 32) >> 2);
    LODWORD(v632) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v629));
    LOBYTE(v624) = *(_BYTE *)(v448
                            + v621
                            - 10304 * (((1667301 * (unint64_t)v621) >> 32) >> 2));
    LODWORD(v628) = *((unsigned __int8 *)&STACK[0x1AB0] + v634);
    LOBYTE(v600) = (*(_BYTE *)(v448 + v630) >> 7) | (2 * *(_BYTE *)(v448 + v630));
    LOBYTE(v630) = (*((_BYTE *)&STACK[0x1AB0] + BYTE1(v634)) >> 5) | (8 * *((_BYTE *)&STACK[0x1AB0] + BYTE1(v634)));
    LODWORD(v621) = *((unsigned __int8 *)&STACK[0x1AB0] + v631);
    LODWORD(v623) = *((unsigned __int8 *)&STACK[0x1AB0] + v629) ^ 0x2F;
    LODWORD(STACK[0xC78]) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v633));
    LODWORD(v625) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v629));
    v636 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v612 ^ 0x37)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v612 ^ 0x37) + 1395009)) >> 32) >> 1)));
    v637 = 1089 * (v616 ^ 0x1D) + 1115136;
    LODWORD(v616) = 1089 * ((37 * (v624 ^ 0x34)) ^ 0x93) + 1395009;
    v638 = *(_QWORD *)(v392
                     + 8
                     * (v616
                      - 1568 * (((5478275 * (unint64_t)v616) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v639 = 1089 * ((85 * (v600 ^ 0xE4)) ^ 0x60) + 1115136;
    v640 = (v638 ^ (unint64_t)(4 * v638 * v638)) >> 8;
    v641 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v628 ^ 0xD5)
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v628 ^ 0xD5) + 1115136)) >> 32) >> 1)));
    v642 = *(_QWORD *)(v392 + 8 * (v639 - 1568 * (((5478275 * (unint64_t)v639) >> 32) >> 1)));
    v643 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v632 ^ 0xA)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v632 ^ 0xA) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v644 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v621 ^ 0xBE)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v621 ^ 0xBE) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v630) = 1089
                  * ((37
                                     * (v630 ^ 0xA ^ *(_BYTE *)(v448
                                                              + 1269 * (v630 ^ 0x44)
                                                              + 8564481
                                                              - 10304
                                                              * (((1667301
                                                                               * (unint64_t)(1269 * (v630 ^ 0x44u)
                                                                                                  + 8564481)) >> 32) >> 2)))) ^ 0xB6)
                  + 1115136;
    LODWORD(v633) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v633)) ^ 0x47) + 1395009;
    LODWORD(v634) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v634)) ^ 8) + 1395009;
    LODWORD(v612) = *(_DWORD *)(v392
                              + 8
                              * (1089 * (v549 ^ 0x4D)
                               + 1115136
                               - 1568
                               * (((5478275
                                                * (unint64_t)(1089 * (v549 ^ 0x4Du) + 1115136)) >> 32) >> 1))
                              + 4) ^ (*(_QWORD *)(v392
                                                + 8
                                                * (1089 * (_DWORD)v623
                                                 + 1115136
                                                 - 1568
                                                 * (((5478275
                                                                  * (unint64_t)(1089 * v623 + 1115136)) >> 32) >> 1))) >> 16) ^ ((v636 ^ 0x35DD20B67B57E3F8 ^ (4 * (v636 ^ 0x35DD20B67B57E3F8) * (v636 ^ 0x35DD20B67B57E3F8uLL))) >> 24);
    v645 = *(_QWORD *)(v392
                     + 8
                     * (v633
                      - 1568 * (((5478275 * (unint64_t)v633) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v636) = *(_DWORD *)(v392
                              + 8 * (v637 - 1568 * (((5478275 * (unint64_t)v637) >> 32) >> 1))
                              + 4) ^ (v641 >> 16) ^ (v642 >> 8) ^ ((v643 ^ (unint64_t)(4 * v643 * v643)) >> 24);
    v646 = *(_QWORD *)(v392
                     + 8
                     * (v634
                      - 1568 * (((5478275 * (unint64_t)v634) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v549) = (*(_QWORD *)(v392
                               + 8
                               * (1089 * (v625 ^ 0x23)
                                + 1115136
                                - 1568
                                * (((5478275
                                                 * (unint64_t)(1089 * (v625 ^ 0x23) + 1115136)) >> 32) >> 1))) >> 16) ^ ((v644 ^ (unint64_t)(4 * v644 * v644)) >> 32) ^ ((v645 ^ (unint64_t)(4 * v645 * v645)) >> 24);
    v647 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v635) ^ 0x37)
                      + 1395009
                      - 1568
                      * (((5478275
                                       * (unint64_t)(1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v635) ^ 0x37u)
                                                          + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v635) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v631)) ^ 0x52) + 1395009;
    v648 = v549 ^ 0x51B127EB ^ (*(_QWORD *)(v392
                                                                      + 8
                                                                      * (v630
                                                                       - 1568
                                                                       * (((5478275
                                                                                        * (unint64_t)v630) >> 32) >> 1))) >> 8);
    v649 = (v646 ^ (unint64_t)(4 * v646 * v646)) >> 32;
    v650 = (v647 ^ (unint64_t)(4 * v647 * v647)) >> 8;
    v651 = *(_QWORD *)(v392
                     + 8
                     * (v635
                      - 1568 * (((5478275 * (unint64_t)v635) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LOBYTE(v646) = *((_BYTE *)&STACK[0x1AB0] + ((v636 ^ 0xADEFC500uLL) >> 24));
    LODWORD(v616) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v648));
    v652 = (v651 ^ (unint64_t)(4 * v651 * v651)) >> 24;
    v653 = v612 ^ 0xA09EE4CB ^ v640;
    v654 = (*(_QWORD *)(v392
                                    + 8
                                    * (1089 * (LODWORD(STACK[0xC78]) ^ 0xE5)
                                     + 1115136
                                     - 1568
                                     * (((5478275
                                                      * (unint64_t)(1089 * (LODWORD(STACK[0xC78]) ^ 0xE5u)
                                                                         + 1115136)) >> 32) >> 1))) >> 16) ^ v649 ^ v650 ^ v652 ^ 0x68F2AD6D;
    LODWORD(v612) = ((WORD1(*(_QWORD *)(v392
                                                       + 8
                                                       * (1089 * (LODWORD(STACK[0xC78]) ^ 0xE5)
                                                        + 1115136
                                                        - 1568
                                                        * (((5478275
                                                                         * (unint64_t)(1089
                                                                                            * (LODWORD(STACK[0xC78]) ^ 0xE5u)
                                                                                            + 1115136)) >> 32) >> 1)))) ^ v649 ^ v650 ^ v652 ^ 0x6D)
                                    - 75) ^ 0xE9;
    LODWORD(v649) = *((unsigned __int8 *)&STACK[0x1AB0] + ((v636 ^ 0xADEFC500) >> 16));
    LODWORD(v650) = *(unsigned __int8 *)(v448
                                       + 1269 * (_DWORD)v612
                                       + 4891995
                                       - 10304
                                       * (((1667301
                                                        * (unint64_t)(1269 * v612 + 4891995)) >> 32) >> 2));
    LODWORD(v632) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v654));
    LOBYTE(v642) = (v650 >> 7) | (2 * v650);
    LOBYTE(v625) = (*((_BYTE *)&STACK[0x1AB0] + (v648 >> 24)) - 29) ^ 0x95 ^ *(_BYTE *)(v448
                                                                                      + (1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v648 >> 24)) - 29) ^ 0x42) - 10304 * ((416826 * (unint64_t)(1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v648 >> 24)) - 29) ^ 0x42u))) >> 32)));
    LODWORD(STACK[0xC78]) = *((unsigned __int8 *)&STACK[0x1AB0] + v653);
    LODWORD(v650) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v653));
    LOBYTE(v641) = v642 ^ 0xE4;
    LODWORD(v642) = 1269 * ((BYTE2(v654) - 29) ^ 0xE8) + 2610333;
    v655 = v653 >> 24;
    v656 = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v653));
    LODWORD(v652) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v648));
    LODWORD(v653) = *((unsigned __int8 *)&STACK[0x1AB0] + v636);
    LODWORD(v636) = 1269
                  * ((((v636 ^ 0xADEFC500) >> 5) & 0xF8 | ((unsigned __int16)(v636 ^ 0xC500) >> 13)) ^ 0x86)
                  + 2937735;
    LODWORD(v647) = *((unsigned __int8 *)&STACK[0x1AB0]
                    + ((((((BYTE2(v654) - 29) ^ 0x35)
                                                          + *(_BYTE *)(v448
                                                                     + v642
                                                                     - 10304
                                                                     * (((1667301
                                                                                      * (unint64_t)v642) >> 32) >> 2))) >> 1) | ((((BYTE2(v654) - 29) ^ 0x35) + *(_BYTE *)(v448 + v642 - 10304 * (((1667301 * (unint64_t)v642) >> 32) >> 2))) << 7)) ^ 0x52));
    v657 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v656 ^ 0xC4)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v656 ^ 0xC4u) + 1395009)) >> 32) >> 1)));
    LODWORD(v643) = v649 ^ 0xED;
    LODWORD(v649) = 1269
                  * (((*((_BYTE *)&STACK[0x1AB0] + (85 * v641)) ^ 0xAB) + 124) ^ 0x96)
                  + 977130;
    v658 = *(unsigned __int8 *)(v448
                              + v649
                              - 10304 * (((1667301 * (unint64_t)v649) >> 32) >> 2));
    LODWORD(v649) = *((unsigned __int8 *)&STACK[0x1AB0] + v655);
    v659 = v657 ^ 0x35DD20B67B57E3F8 ^ (4 * (v657 ^ 0x35DD20B67B57E3F8) * (v657 ^ 0x35DD20B67B57E3F8));
    v660 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v616 ^ 0x5E)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v616 ^ 0x5E) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LOBYTE(v616) = *((_BYTE *)&STACK[0x1AB0]
                   + (37
                                     * (*(_BYTE *)(v448
                                                 + v636
                                                 - 10304
                                                 * (((1667301 * (unint64_t)v636) >> 32) >> 2)) ^ 0x34)));
    LODWORD(v636) = 1089
                  * (*(unsigned __int8 *)(v448
                                        + 1269 * (((v646 ^ 0x93) + 124) ^ 0x96)
                                        + 977130
                                        - 10304
                                        * (((1667301
                                                         * (unint64_t)(1269
                                                                            * (((v646 ^ 0x93) + 124) ^ 0x96u)
                                                                            + 977130)) >> 32) >> 2)) ^ 0x54)
                  + 1395009;
    v661 = *(_QWORD *)(v392
                     + 8
                     * (v636
                      - 1568 * (((5478275 * (unint64_t)v636) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v625) = 1269 * (((((v625 >> 1) | ((_BYTE)v625 << 7)) ^ 0xA1) - 75) ^ 0xE9)
                  + 4891995;
    LODWORD(v646) = *(_DWORD *)(v392
                              + 8
                              * (1089 * (_DWORD)v643
                               + 1115136
                               - 1568
                               * (((5478275 * (unint64_t)(1089 * v643 + 1115136)) >> 32) >> 1))
                              + 4) ^ ((v660 ^ (unint64_t)(4 * v660 * v660)) >> 8) ^ (v659 >> 24);
    LODWORD(v625) = *(unsigned __int8 *)(v448
                                       + v625
                                       - 10304
                                       * (((1667301 * (unint64_t)v625) >> 32) >> 2));
    v662 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v650 ^ 0xF1)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v650 ^ 0xF1) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v625) = 1089 * ((85 * (((v625 >> 7) | (2 * v625)) ^ 0xE4)) ^ 0x2F) + 1395009;
    v663 = *(_QWORD *)(v392
                     + 8
                     * (v625
                      - 1568 * (((5478275 * (unint64_t)v625) >> 32) >> 1)));
    v664 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v649 ^ 0x6D)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v649 ^ 0x6D) + 1395009)) >> 32) >> 1)));
    LODWORD(v612) = *((unsigned __int8 *)&STACK[0x1AB0] + (v654 >> 24)) ^ 0x4F;
    v665 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v653 ^ 0x1E)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v653 ^ 0x1E) + 1395009)) >> 32) >> 1)));
    v666 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (_DWORD)v612
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v612 + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v667 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (LODWORD(STACK[0xC78]) ^ 3)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC78]) ^ 3u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v647) = (*(_QWORD *)(v392
                               + 8
                               * (1089 * (v647 ^ 0x8D)
                                + 1115136
                                - 1568
                                * (((5478275
                                                 * (unint64_t)(1089 * (v647 ^ 0x8D) + 1115136)) >> 32) >> 1))) >> 24) ^ ((v664 ^ (4 * (v664 ^ 0x35DD20B67B57E3F8) * (v664 ^ 0x35DD20B67B57E3F8uLL))) >> 32);
    v668 = (v666 ^ (unint64_t)(4 * v666 * v666)) >> 32;
    v669 = ((v663 ^ (4 * (v663 ^ 0x35DD20B67B57E3F8) * (v663 ^ 0x35DD20B67B57E3F8uLL))) >> 16) ^ v647 ^ ((v665 ^ (4 * (v665 ^ 0x35DD20B67B57E3F8) * (v665 ^ 0x35DD20B67B57E3F8uLL))) >> 8) ^ 0xB23FBFB5;
    LODWORD(v648) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v648) ^ 0x74) + 1395009;
    LOBYTE(v647) = *(_BYTE *)(v448
                            + 1269 * (((v616 ^ 0xFD) - 29) ^ 0xE8)
                            + 2610333
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269 * (((v616 ^ 0xFD) - 29) ^ 0xE8u)
                                                                + 2610333)) >> 32) >> 2))
                 + (((v616 ^ 0xFD) - 29) ^ 0x35);
    v670 = (*(_QWORD *)(v392
                                    + 8
                                    * (1089 * (v652 ^ 0x68)
                                     + 1115136
                                     - 1568
                                     * (((5478275
                                                      * (unint64_t)(1089 * (v652 ^ 0x68) + 1115136)) >> 32) >> 1))) >> 8) ^ (*(_QWORD *)(v392 + 8 * (1089 * (v632 ^ 0x5B) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v632 ^ 0x5B) + 1115136)) >> 32) >> 1))) >> 16) ^ ((v662 ^ (unint64_t)(4 * v662 * v662)) >> 24) ^ 0x5250F16 ^ ((v661 ^ (unint64_t)(4 * v661 * v661)) >> 32);
    LODWORD(v647) = 1089 * (((v647 >> 1) | ((_BYTE)v647 << 7)) ^ 0x54) + 1115136;
    LODWORD(v650) = *((unsigned __int8 *)&STACK[0x1AB0]
                    + ((BYTE1(*(_QWORD *)(v392
                                                         + 8
                                                         * (1089 * (v652 ^ 0x68)
                                                          + 1115136
                                                          - 1568
                                                          * (((5478275
                                                                           * (unint64_t)(1089
                                                                                              * (v652 ^ 0x68)
                                                                                              + 1115136)) >> 32) >> 1)))) ^ WORD1(*(_QWORD *)(v392 + 8 * (1089 * (v632 ^ 0x5B) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v632 ^ 0x5B) + 1115136)) >> 32) >> 1)))) ^ ((v662 ^ (4 * (_DWORD)v662 * (_DWORD)v662)) >> 24)) ^ 0x16u ^ ((v661 ^ (unint64_t)(4 * v661 * v661)) >> 32)));
    v671 = *(_QWORD *)(v392
                     + 8
                     * (v648
                      - 1568 * (((5478275 * (unint64_t)v648) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v672 = v669 >> 24;
    v673 = v646 ^ 0xDD779DBE ^ (*(_QWORD *)(v392
                                                                      + 8
                                                                      * (1089 * (v658 ^ 0x7D)
                                                                       + 1115136
                                                                       - 1568
                                                                       * (((5478275
                                                                                        * (unint64_t)(1089 * (v658 ^ 0x7Du) + 1115136)) >> 32) >> 1))) >> 16);
    LODWORD(v652) = *((unsigned __int8 *)&STACK[0x1AB0] + v673);
    LODWORD(v636) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v673));
    v674 = (*(_QWORD *)(v392
                                    + 8
                                    * (v647
                                     - 1568
                                     * (((5478275 * (unint64_t)v647) >> 32) >> 1))) >> 16) ^ v668 ^ ((v667 ^ (unint64_t)(4 * v667 * v667)) >> 8) ^ ((v671 ^ (unint64_t)(4 * v671 * v671)) >> 24) ^ 0x80E1EADE;
    LOBYTE(v647) = *((_BYTE *)&STACK[0x1AB0] + BYTE2(v670)) ^ 0x4A;
    LODWORD(v581) = *((unsigned __int8 *)&STACK[0x1AB0] + (v673 >> 24));
    LODWORD(v632) = ((v650 >> 5) | (8 * v650)) ^ 0x86;
    LODWORD(STACK[0xC78]) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v669));
    LODWORD(v650) = *((unsigned __int8 *)&STACK[0x1AB0] + (v670 >> 24));
    LODWORD(v663) = 1269 * v632 + 2937735;
    LOBYTE(v661) = (v647 >> 5) | (8 * v647);
    LODWORD(v632) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v674));
    LODWORD(v647) = *((unsigned __int8 *)&STACK[0x1AB0] + (v674 >> 24));
    LODWORD(v659) = *((unsigned __int8 *)&STACK[0x1AB0] + v669);
    LOBYTE(v662) = *(_BYTE *)(v448
                            + v663
                            - 10304 * (((1667301 * (unint64_t)v663) >> 32) >> 2));
    LODWORD(v663) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v669));
    LODWORD(v669) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v674));
    v675 = *((unsigned __int8 *)&STACK[0x1AB0] + v672);
    LODWORD(v672) = 1089 * (2 * (v652 & 1) + (v652 ^ 0x529));
    LODWORD(v652) = v672 - 1568 * (((5478275 * (unint64_t)v672) >> 32) >> 1);
    LODWORD(v672) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v673));
    LODWORD(v673) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v670));
    v676 = *((unsigned __int8 *)&STACK[0x1AB0] + v674);
    LOBYTE(v670) = v662 ^ 0x34;
    v677 = *(_QWORD *)(v392 + 8 * v652) ^ 0x35DD20B67B57E3F8;
    LODWORD(v674) = 1089
                  * ((37
                                     * (v661 ^ 0xA ^ *(_BYTE *)(v448
                                                              + 1269 * (v661 ^ 0x44)
                                                              + 8564481
                                                              - 10304
                                                              * (((1667301
                                                                               * (unint64_t)(1269 * (v661 ^ 0x44u)
                                                                                                  + 8564481)) >> 32) >> 2)))) ^ 6)
                  + 1115136;
    v678 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v675 ^ 0xAC)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v675 ^ 0xACu) + 1395009)) >> 32) >> 1)));
    LODWORD(v660) = 1089 * (v650 ^ 0xC5) + 1115136;
    v679 = (v678 ^ (4 * (v678 ^ 0x35DD20B67B57E3F8) * (v678 ^ 0x35DD20B67B57E3F8uLL))) >> 8;
    v680 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v659 ^ 0xBA)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v659 ^ 0xBA) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v678) = v660 - 1568 * (((5478275 * (unint64_t)v660) >> 32) >> 1);
    LODWORD(v660) = v632 ^ 0xF7;
    LODWORD(v632) = *(_DWORD *)(v392 + 8 * v678 + 4);
    LODWORD(v663) = 1269 * (((v663 >> 5) | (8 * v663)) ^ 6) + 2937735;
    v681 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (_DWORD)v660
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v660 + 1115136)) >> 32) >> 1)));
    LODWORD(v660) = 1089 * (v672 ^ 0xDC) + 1395009;
    v682 = v681 >> 16;
    LODWORD(v681) = v660 - 1568 * (((5478275 * (unint64_t)v660) >> 32) >> 1);
    LOBYTE(v660) = *(_BYTE *)(v448
                            + v663
                            - 10304 * (((1667301 * (unint64_t)v663) >> 32) >> 2));
    v683 = (v680 ^ (unint64_t)(4 * v680 * v680)) >> 8;
    v684 = *(_QWORD *)(v392 + 8 * v681) ^ 0x35DD20B67B57E3F8;
    LODWORD(v674) = ((v677 ^ (unint64_t)(4 * v677 * v677)) >> 24) ^ (*(_QWORD *)(v392
                                                                                      + 8
                                                                                      * (1089 * (v676 ^ 0x16)
                                                                                       + 1115136
                                                                                       - 1568
                                                                                       * (((5478275 * (unint64_t)(1089 * (v676 ^ 0x16u) + 1115136)) >> 32) >> 1))) >> 16) ^ *(_DWORD *)(v392 + 8 * (v674 - 1568 * (((5478275 * (unint64_t)v674) >> 32) >> 1)) + 4);
    v685 = *(_QWORD *)(v392
                     + 8
                     * (1089 * ((37 * (v660 ^ 0x34)) ^ 0x2F)
                      + 1395009
                      - 1568
                      * (((5478275
                                       * (unint64_t)(1089 * ((37 * (v660 ^ 0x34)) ^ 0x2Fu)
                                                          + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v670) = 1089 * ((37 * v670) ^ 0x34) + 1395009;
    v686 = v674 ^ v679 ^ 0x9C971A32;
    v687 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v647 ^ 0x2F)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v647 ^ 0x2F) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v688 = *(_QWORD *)(v392
                     + 8
                     * (v670
                      - 1568 * (((5478275 * (unint64_t)v670) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v689 = v688 ^ (4 * v688 * v688);
    v690 = v682 ^ v632 ^ ((v684 ^ (unint64_t)(4 * v684 * v684)) >> 24) ^ 0x82DA36B6 ^ v683;
    LODWORD(v632) = (*(_QWORD *)(v392
                               + 8
                               * (1089 * (v581 ^ 0x97)
                                + 1115136
                                - 1568
                                * (((5478275
                                                 * (unint64_t)(1089 * (v581 ^ 0x97) + 1115136)) >> 32) >> 1))) >> 8) ^ (*(_QWORD *)(v392 + 8 * (1089 * (v673 ^ 0x2D) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v673 ^ 0x2D) + 1115136)) >> 32) >> 1))) >> 16);
    v691 = (*(_QWORD *)(v392
                                    + 8
                                    * (1089 * (v669 ^ 0x42)
                                     + 1115136
                                     - 1568
                                     * (((5478275
                                                      * (unint64_t)(1089 * (v669 ^ 0x42) + 1115136)) >> 32) >> 1))) >> 24) ^ *(_DWORD *)(v392 + 8 * (1089 * (v636 ^ 0xE3) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v636 ^ 0xE3) + 1115136)) >> 32) >> 1)) + 4) ^ (v689 >> 8) ^ 0xF1FFFF9 ^ ((v685 ^ (unint64_t)(4 * v685 * v685)) >> 16);
    LODWORD(v647) = ((v687 ^ (unint64_t)(4 * v687 * v687)) >> 32) ^ v632 ^ (*(_QWORD *)(v392
                                                                                             + 8
                                                                                             * (1089
                                                                                              * (LODWORD(STACK[0xC78]) ^ 0x90)
                                                                                              + 1115136
                                                                                              - 1568
                                                                                              * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC78]) ^ 0x90u) + 1115136)) >> 32) >> 1))) >> 24) ^ 0x7DEA7EE5;
    LOBYTE(v669) = *((_BYTE *)&STACK[0x1AB0] + v690) + 124;
    LODWORD(v685) = 1269 * ((BYTE1(v647) + 124) ^ 0x14) + 9216747;
    LOBYTE(v682) = (*((_BYTE *)&STACK[0x1AB0] + (v690 >> 24)) - 29) ^ 0x95 ^ *(_BYTE *)(v448
                                                                                      + (1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v690 >> 24)) - 29) ^ 0x42) - 10304 * ((416826 * (unint64_t)(1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v690 >> 24)) - 29) ^ 0x42u))) >> 32)));
    LOBYTE(v674) = (v682 >> 1) | ((_BYTE)v682 << 7);
    LOBYTE(v636) = *((_BYTE *)&STACK[0x1AB0] + BYTE2(v691));
    LODWORD(v632) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v686));
    LODWORD(v661) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v686) ^ 0xB5) + 1395009;
    v692 = *(_QWORD *)(v392
                     + 8
                     * (v661
                      - 1568 * (((5478275 * (unint64_t)v661) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v684) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v690)) ^ 0x7E) + 1115136;
    LODWORD(v683) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + (v691 >> 24)) ^ 0x1E) + 1395009;
    LODWORD(v681) = 1089
                  * (*((unsigned __int8 *)&STACK[0x1AB0]
                     + (((*(_BYTE *)(v448
                                                                     + (1269
                                                                                    * ((v647 - 29) ^ 0x42)
                                                                                    - 10304
                                                                                    * ((416826
                                                                                      * (unint64_t)(1269 * ((v647 - 29) ^ 0x42u))) >> 32))) ^ (v647 - 29) ^ 0x95) >> 1) | ((*(_BYTE *)(v448 + (1269 * ((v647 - 29) ^ 0x42) - 10304 * ((416826 * (unint64_t)(1269 * ((v647 - 29) ^ 0x42u))) >> 32))) ^ (v647 - 29) ^ 0x95) << 7))) ^ 0xA6)
                  + 1115136;
    v693 = *(_QWORD *)(v392
                     + 8
                     * (v683
                      - 1568 * (((5478275 * (unint64_t)v683) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v687) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v691) ^ 0x9D) + 1115136;
    LODWORD(v660) = v687 - 1568 * (((5478275 * (unint64_t)v687) >> 32) >> 1);
    v694 = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v686));
    LODWORD(v631) = *((unsigned __int8 *)&STACK[0x1AB0]
                    + (*(_BYTE *)(v448
                                + v685
                                - 10304 * (((1667301 * (unint64_t)v685) >> 32) >> 2)) ^ (((BYTE1(v647) + 124) ^ 0x2C) + 69) ^ 0x4Du));
    LODWORD(v687) = *((unsigned __int8 *)&STACK[0x1AB0] + (v686 >> 24));
    LODWORD(v686) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v690));
    LODWORD(v682) = *((unsigned __int8 *)&STACK[0x1AB0]
                    + (37
                                      * (((v647 >> 21) & 0xF8 | (v647 >> 29)) ^ 0xA ^ *(_BYTE *)(v448 + 1269 * (((v647 >> 21) & 0xF8 | (v647 >> 29)) ^ 0x44) + 8564481 - 10304 * (((1667301 * (unint64_t)(1269 * (((v647 >> 21) & 0xF8 | (v647 >> 29)) ^ 0x44) + 8564481)) >> 32) >> 2)))));
    v695 = (v693 ^ (unint64_t)(4 * v693 * v693)) >> 16;
    v696 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v674 ^ 0x6E)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v674 ^ 0x6Eu) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v691) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v691)) ^ 0xFC) + 1395009;
    v697 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v631 ^ 0xEB)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v631 ^ 0xEB) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v698 = *(_QWORD *)(v392
                     + 8
                     * (v691
                      - 1568 * (((5478275 * (unint64_t)v691) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v689) = ((v669 ^ 0x2C) + 69) ^ 0xC5 ^ *(unsigned __int8 *)(v448
                                                                                      + 1269
                                                                                      * (v669 ^ 0x14)
                                                                                      + 9216747
                                                                                      - 10304
                                                                                      * (((1667301 * (unint64_t)(1269 * (v669 ^ 0x14u) + 9216747)) >> 32) >> 2));
    v699 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v647)) ^ 0xC6)
                      + 1395009
                      - 1568
                      * (((5478275
                                       * (unint64_t)(1089
                                                          * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v647)) ^ 0xC6u)
                                                          + 1395009)) >> 32) >> 1)));
    v700 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v682 ^ 0x5D)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v682 ^ 0x5D) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v695) = ((v692 ^ (unint64_t)(4 * v692 * v692)) >> 32) ^ (*(_QWORD *)(v392
                                                                                      + 8
                                                                                      * (v684
                                                                                       - 1568
                                                                                       * (((5478275 * (unint64_t)v684) >> 32) >> 1))) >> 8) ^ (*(_QWORD *)(v392 + 8 * (v681 - 1568 * (((5478275 * (unint64_t)v681) >> 32) >> 1))) >> 24) ^ 0xFFBB2AAA ^ v695;
    v701 = ((v696 ^ (unint64_t)(4 * v696 * v696)) >> 24) ^ *(_DWORD *)(v392
                                                                                          + 8 * v660
                                                                                          + 4) ^ (*(_QWORD *)(v392 + 8 * (1089 * (v694 ^ 0x18) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v694 ^ 0x18u) + 1115136)) >> 32) >> 1))) >> 16) ^ ((v697 ^ (unint64_t)(4 * v697 * v697)) >> 8) ^ 0xD3F6C35;
    LODWORD(v696) = 1269 * (((v636 ^ 0x49) - 29) ^ 0xE8) + 2610333;
    LOBYTE(v636) = *(_BYTE *)(v448
                            + v696
                            - 10304 * (((1667301 * (unint64_t)v696) >> 32) >> 2))
                 + (((v636 ^ 0x49) - 29) ^ 0x35);
    LODWORD(v636) = 1089 * (((v636 >> 1) | ((_BYTE)v636 << 7)) ^ 0x54) + 1115136;
    v702 = *(_QWORD *)(v392
                     + 8
                     * (v636
                      - 1568 * (((5478275 * (unint64_t)v636) >> 32) >> 1)));
    LODWORD(v636) = ((v698 ^ (unint64_t)(4 * v698 * v698)) >> 24) ^ (*(_QWORD *)(v392
                                                                                      + 8
                                                                                      * (1089 * (_DWORD)v689
                                                                                       + 1115136
                                                                                       - 1568
                                                                                       * (((5478275 * (unint64_t)(1089 * v689 + 1115136)) >> 32) >> 1))) >> 16) ^ (*(_QWORD *)(v392 + 8 * (1089 * (v632 ^ 0xF6) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v632 ^ 0xF6) + 1115136)) >> 32) >> 1))) >> 8) ^ ((v699 ^ (4 * (v699 ^ 0x35DD20B67B57E3F8) * (v699 ^ 0x35DD20B67B57E3F8uLL))) >> 32) ^ 0x5C126A36;
    LODWORD(v698) = 1269 * ((BYTE3(v695) + 124) ^ 0x14) + 9216747;
    LOBYTE(v684) = *(_BYTE *)(v448
                            + v698
                            - 10304 * (((1667301 * (unint64_t)v698) >> 32) >> 2));
    LODWORD(v698) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v636));
    v703 = *(_DWORD *)(v392
                     + 8
                     * (1089 * (v686 ^ 0x90)
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v686 ^ 0x90) + 1115136)) >> 32) >> 1))
                     + 4) ^ (*(_QWORD *)(v392
                                                     + 8
                                                     * (1089 * (v687 ^ 0x11)
                                                      + 1115136
                                                      - 1568
                                                      * (((5478275
                                                                       * (unint64_t)(1089
                                                                                          * (v687 ^ 0x11)
                                                                                          + 1115136)) >> 32) >> 1))) >> 24) ^ ((v700 ^ (unint64_t)(4 * v700 * v700)) >> 16) ^ 0x6583958F ^ (v702 >> 8);
    LODWORD(v699) = 1269 * ((BYTE3(v636) - 75) ^ 0x3E) + 1958067;
    LODWORD(v632) = 1269
                  * (((*((_BYTE *)&STACK[0x1AB0] + v701) >> 5) | (8
                                                                                                  * *((_BYTE *)&STACK[0x1AB0] + v701))) ^ 0x86)
                  + 2937735;
    LODWORD(v702) = *(unsigned __int8 *)(v448
                                       + v699
                                       - 10304
                                       * (((1667301 * (unint64_t)v699) >> 32) >> 2));
    LODWORD(v685) = (v695 >> 5) | (8 * (v695 & 0x1F));
    LODWORD(v700) = 1269 * ((BYTE1(v695) + 124) ^ 0x14) + 9216747;
    LODWORD(v692) = v700 - 10304 * (((1667301 * (unint64_t)v700) >> 32) >> 2);
    LODWORD(v700) = (v703 >> 5) & 0xF8 | ((unsigned __int16)v703 >> 13);
    LOBYTE(v689) = (((*((_BYTE *)&STACK[0x1AB0] + (v701 >> 24)) + 124) ^ 0x2C) + 69) ^ 0xE6 ^ *(_BYTE *)(v448 + 1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v701 >> 24)) + 124) ^ 0x14) + 9216747 - 10304 * (((1667301 * (unint64_t)(1269 * ((*((_BYTE *)&STACK[0x1AB0] + (v701 >> 24)) + 124) ^ 0x14u) + 9216747)) >> 32) >> 2));
    LOBYTE(v687) = ((v695 >> 5) | (8 * (v695 & 0x1F))) ^ 0xA ^ *(_BYTE *)(v448
                                                                                         + 1269
                                                                                         * (v685 ^ 0x44)
                                                                                         + 8564481
                                                                                         - 10304
                                                                                         * (((1667301 * (unint64_t)(1269 * (v685 ^ 0x44) + 8564481)) >> 32) >> 2));
    LODWORD(v696) = 1089
                  * (*((unsigned __int8 *)&STACK[0x1AB0]
                     + ((((BYTE3(v695) + 124) ^ 0x2C) + 69) ^ 0x4Du ^ v684)) ^ 0xFF)
                  + 1395009;
    LODWORD(v684) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v703));
    LOBYTE(v702) = *((_BYTE *)&STACK[0x1AB0]
                   + (85
                                     * (((v702 >> 7) | (2 * v702)) ^ (2
                                                                                  * ((v702 >> 7) | (2 * v702))) ^ 0xCC)));
    LOBYTE(v694) = 37
                 * (*(_BYTE *)(v448
                             + v632
                             - 10304 * (((1667301 * (unint64_t)v632) >> 32) >> 2)) ^ 0x34);
    LOBYTE(v692) = *(_BYTE *)(v448 + v692);
    LOBYTE(v689) = (v689 - 29) ^ 0x95 ^ *(_BYTE *)(v448
                                                 + (1269 * ((v689 - 29) ^ 0x42)
                                                                - 10304
                                                                * ((416826
                                                                  * (unint64_t)(1269
                                                                                     * ((v689 - 29) ^ 0x42u))) >> 32)));
    LODWORD(v689) = 1089 * (((v689 >> 1) | ((_BYTE)v689 << 7)) ^ 6) + 1115136;
    v704 = *(_QWORD *)(v392
                     + 8
                     * (v696
                      - 1568 * (((5478275 * (unint64_t)v696) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v685) = v689 - 1568 * (((5478275 * (unint64_t)v689) >> 32) >> 1);
    v705 = v704 ^ (4 * v704 * v704);
    LODWORD(v704) = *((unsigned __int8 *)&STACK[0x1AB0] + v636);
    LODWORD(v689) = *((unsigned __int8 *)&STACK[0x1AB0] + v703);
    LODWORD(v696) = *((unsigned __int8 *)&STACK[0x1AB0] + (v703 >> 24));
    LOBYTE(v681) = *(_BYTE *)(v448
                            + 1269 * (v700 ^ 0x44)
                            + 8564481
                            - 10304
                            * (((1667301 * (unint64_t)(1269 * (v700 ^ 0x44) + 8564481)) >> 32) >> 2));
    LOBYTE(v699) = ((BYTE1(v695) + 124) ^ 0x2C) + 69;
    LODWORD(STACK[0xC78]) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v636));
    LOBYTE(v703) = *((_BYTE *)&STACK[0x1AB0] + BYTE2(v695));
    LODWORD(v695) = v698 ^ 0x2B;
    LODWORD(v698) = v684 ^ 4;
    LOBYTE(v684) = v700 ^ 0xA ^ v681;
    LODWORD(v681) = 1089 * (v694 ^ 0x81)
                  + 1395009
                  - 1568
                  * (((5478275 * (unint64_t)(1089 * (v694 ^ 0x81u) + 1395009)) >> 32) >> 1);
    LOBYTE(v700) = v702 ^ 0x9A;
    LOBYTE(v702) = v699 ^ 0x4D ^ v692;
    v706 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (_DWORD)v695
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v695 + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v707 = v706 ^ (4 * v706 * v706);
    v708 = *(_QWORD *)(v392 + 8 * v685) >> 8;
    LODWORD(v699) = *((unsigned __int8 *)&STACK[0x1AB0] + (37 * v684));
    v709 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (_DWORD)v698
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v698 + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v710 = *(_QWORD *)(v392 + 8 * v681) ^ 0x35DD20B67B57E3F8;
    v711 = v710 ^ (4 * v710 * v710);
    LOBYTE(v710) = 37
                 * (((v700 >> 5) | (8 * v700)) ^ 0xA ^ *(_BYTE *)(v448
                                                                                 + 1269
                                                                                 * (((v700 >> 5) | (8 * v700)) ^ 0x44)
                                                                                 + 8564481
                                                                                 - 10304
                                                                                 * (((1667301
                                                                                                  * (unint64_t)(1269 * (((v700 >> 5) | (8 * v700)) ^ 0x44u) + 8564481)) >> 32) >> 2)));
    v712 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v696 ^ 0x73)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v696 ^ 0x73) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v687) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + (37 * v687)) ^ 0x2E) + 1395009;
    LOBYTE(v681) = v703 ^ 0xC6;
    LODWORD(v703) = 1089 * (v704 ^ 0xAC)
                  + 1115136
                  - 1568
                  * (((5478275 * (unint64_t)(1089 * (v704 ^ 0xAC) + 1115136)) >> 32) >> 1);
    v713 = *(_QWORD *)(v392
                     + 8
                     * (v687
                      - 1568 * (((5478275 * (unint64_t)v687) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v700) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v701)) ^ 0xA6) + 1115136;
    LODWORD(v702) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + v702) ^ 0xB5) + 1115136;
    v714 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v689 ^ 0x93)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v689 ^ 0x93) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v685) = 1269 * (((v681 >> 5) | (8 * v681)) ^ 0x86) + 2937735;
    LODWORD(v713) = (v711 >> 24) ^ ((v712 ^ (unint64_t)(4 * v712 * v712)) >> 8) ^ ((v713 ^ (unint64_t)(4 * v713 * v713)) >> 16);
    LODWORD(v712) = 1089
                  * ((37
                                     * (*(_BYTE *)(v448
                                                 + v685
                                                 - 10304
                                                 * (((1667301 * (unint64_t)v685) >> 32) >> 2)) ^ 0x34)) ^ 6)
                  + 1115136;
    LODWORD(v698) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v701)) ^ 0xE1) + 1395009;
    v715 = *(_QWORD *)(v392
                     + 8
                     * (v712
                      - 1568 * (((5478275 * (unint64_t)v712) >> 32) >> 1)));
    v716 = *(_QWORD *)(v392
                     + 8
                     * (v698
                      - 1568 * (((5478275 * (unint64_t)v698) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v717 = (*(_QWORD *)(v392
                                    + 8
                                    * (v700
                                     - 1568
                                     * (((5478275 * (unint64_t)v700) >> 32) >> 1))) >> 24) ^ *(_DWORD *)(v392 + 8 * v703 + 4) ^ (*(_QWORD *)(v392 + 8 * (v702 - 1568 * (((5478275 * (unint64_t)v702) >> 32) >> 1))) >> 16) ^ 0xEA860378 ^ ((v714 ^ (unint64_t)(4 * v714 * v714)) >> 8);
    v718 = v713 ^ 0x35BDF5C ^ *(_DWORD *)(v392
                                                      + 8
                                                      * (1089 * (v710 ^ 6)
                                                       + 1115136
                                                       - 1568
                                                       * (((5478275
                                                                        * (unint64_t)(1089
                                                                                           * (v710 ^ 6u)
                                                                                           + 1115136)) >> 32) >> 1))
                                                      + 4);
    v719 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (LODWORD(STACK[0xC78]) ^ 0xC3)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC78]) ^ 0xC3u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v710) = (v715 >> 24) ^ ((v716 ^ (unint64_t)(4 * v716 * v716)) >> 32);
    v720 = v708 ^ HIDWORD(v705) ^ (v707 >> 16) ^ ((v709 ^ (unint64_t)(4 * v709 * v709)) >> 24) ^ 0xBFBB8273;
    LOBYTE(v703) = *((_BYTE *)&STACK[0x1AB0] + BYTE2(v717)) + 124;
    v721 = v710 ^ ((v719 ^ (unint64_t)(4 * v719 * v719)) >> 8) ^ 0xD7338AC5 ^ (*(_QWORD *)(v392 + 8 * (1089 * (v699 ^ 5) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v699 ^ 5) + 1115136)) >> 32) >> 1))) >> 16);
    LODWORD(v710) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v721)) - 29;
    LODWORD(v710) = (v710 ^ 0x35)
                  + *(unsigned __int8 *)(v448
                                       + 1269 * (v710 ^ 0xE8)
                                       + 2610333
                                       - 10304
                                       * (((1667301
                                                        * (unint64_t)(1269 * (v710 ^ 0xE8u)
                                                                           + 2610333)) >> 32) >> 2));
    LODWORD(STACK[0xC60]) = (v710 >> 1) | ((_DWORD)v710 << 7);
    LODWORD(STACK[0xC68]) = *((unsigned __int8 *)&STACK[0x1AB0] + (v717 >> 24));
    LOBYTE(v701) = *(_BYTE *)(v448
                            + 1269 * (v703 ^ 0x14)
                            + 9216747
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269 * (v703 ^ 0x14u) + 9216747)) >> 32) >> 2));
    LODWORD(STACK[0xC78]) = *((unsigned __int8 *)&STACK[0x1AB0] + v721);
    LOBYTE(v709) = v717 - 29;
    LODWORD(v715) = 1269 * ((*((_BYTE *)&STACK[0x1AB0] + BYTE2(v718)) - 75) ^ 0x3E) + 1958067;
    LODWORD(v715) = *(unsigned __int8 *)(v448
                                       + v715
                                       - 10304
                                       * (((1667301 * (unint64_t)v715) >> 32) >> 2));
    LOBYTE(v707) = *(_BYTE *)(v448
                            + (1269 * ((v717 - 29) ^ 0x42)
                                           - 10304
                                           * ((416826 * (unint64_t)(1269 * ((v717 - 29) ^ 0x42u))) >> 32)));
    LODWORD(v702) = (v715 >> 7) | (2 * v715);
    LODWORD(v717) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v717)) ^ 0xB) + 1395009;
    LOBYTE(v709) = ((v709 ^ 0x95 ^ v707) >> 1) | ((v709 ^ 0x95 ^ v707) << 7);
    LODWORD(v715) = 1269
                  * ((((*((_BYTE *)&STACK[0x1AB0] + (v720 >> 24)) ^ 0xB0) >> 5) | (8 * (*((_BYTE *)&STACK[0x1AB0] + (v720 >> 24)) ^ 0xB0))) ^ 0x86)
                  + 2937735;
    LODWORD(v681) = v717 - 1568 * (((5478275 * (unint64_t)v717) >> 32) >> 1);
    LODWORD(v717) = 1089
                  * ((37
                                     * (*(_BYTE *)(v448
                                                 + v715
                                                 - 10304
                                                 * (((1667301 * (unint64_t)v715) >> 32) >> 2)) ^ 0x34)) ^ 6)
                  + 1115136;
    LODWORD(v660) = v717 - 1568 * (((5478275 * (unint64_t)v717) >> 32) >> 1);
    LODWORD(v700) = 1089 * (*((unsigned __int8 *)&STACK[0x1AB0] + (v718 >> 24)) ^ 0xB4) + 1115136;
    LODWORD(v711) = v700 - 1568 * (((5478275 * (unint64_t)v700) >> 32) >> 1);
    LOBYTE(v700) = ((*((_BYTE *)&STACK[0x1AB0] + v718) ^ 0x4B) >> 5) | (8 * (*((_BYTE *)&STACK[0x1AB0] + v718) ^ 0x4B));
    LODWORD(v715) = *((unsigned __int8 *)&STACK[0x1AB0] + v720);
    LODWORD(v717) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v718));
    LOBYTE(v705) = *((_BYTE *)&STACK[0x1AB0] + (v721 >> 24));
    LODWORD(v721) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v721));
    LOBYTE(v707) = v700 ^ 0xA ^ *(_BYTE *)(v448
                                         + 1269 * (v700 ^ 0x44)
                                         + 8564481
                                         - 10304
                                         * (((1667301
                                                          * (unint64_t)(1269 * (v700 ^ 0x44u)
                                                                             + 8564481)) >> 32) >> 2));
    LODWORD(v713) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE2(v720));
    LODWORD(v700) = *((unsigned __int8 *)&STACK[0x1AB0] + BYTE1(v720));
    LODWORD(STACK[0xC58]) = *((unsigned __int8 *)&STACK[0x1AB0] + v709);
    LOBYTE(v699) = LODWORD(STACK[0xC60]) ^ 0x27;
    LODWORD(STACK[0xC60]) = *(_DWORD *)(v392 + 8 * v660 + 4);
    LODWORD(v709) = 1089 * v699 + 1115136;
    v722 = *(_QWORD *)(v392 + 8 * v681) ^ 0x35DD20B67B57E3F8;
    LOBYTE(v699) = 85 * (v702 ^ (2 * v702) ^ 0xCC);
    LODWORD(v702) = 1089 * ((37 * v707) ^ 0x2F) + 1395009;
    v723 = (v722 ^ (unint64_t)(4 * v722 * v722)) >> 16;
    LODWORD(v703) = 1269 * (((((v703 ^ 0x2C) + 69) ^ 0xAB ^ v701) - 75) ^ 0xE9) + 4891995;
    v724 = *(_QWORD *)(v392
                     + 8
                     * (v702
                      - 1568 * (((5478275 * (unint64_t)v702) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v703) = *(unsigned __int8 *)(v448
                                       + v703
                                       - 10304
                                       * (((1667301 * (unint64_t)v703) >> 32) >> 2));
    LOBYTE(v722) = ((v703 >> 7) | (2 * v703)) ^ 0xE4;
    LODWORD(v703) = (*(_QWORD *)(v392 + 8 * v711) >> 8) ^ (*(_QWORD *)(v392
                                                                                     + 8
                                                                                     * (v709
                                                                                      - 1568
                                                                                      * (((5478275 * (unint64_t)v709) >> 32) >> 1))) >> 24) ^ v723;
    LODWORD(v723) = 1089 * ((85 * v722) ^ 0x2F) + 1395009;
    LODWORD(v709) = 1269 * (((v705 ^ 0xD9) - 75) ^ 0xE9) + 4891995;
    LODWORD(v709) = *(unsigned __int8 *)(v448
                                       + v709
                                       - 10304
                                       * (((1667301 * (unint64_t)v709) >> 32) >> 2));
    v725 = *(_QWORD *)(v392
                     + 8
                     * (v723
                      - 1568 * (((5478275 * (unint64_t)v723) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v726 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v715 ^ 0x97)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v715 ^ 0x97) + 1395009)) >> 32) >> 1)));
    LODWORD(v715) = 1089 * ((85 * (((v709 >> 7) | (2 * v709)) ^ 0xE4)) ^ 6) + 1115136;
    v727 = v726 ^ 0x35DD20B67B57E3F8;
    v728 = (v724 ^ (unint64_t)(4 * v724 * v724)) >> 32;
    v729 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (LODWORD(STACK[0xC78]) ^ 0xB8)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC78]) ^ 0xB8u) + 1395009)) >> 32) >> 1)));
    v730 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (LODWORD(STACK[0xC68]) ^ 0x1D)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC68]) ^ 0x1Du) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v731 = (v729 ^ (4 * (v729 ^ 0x35DD20B67B57E3F8) * (v729 ^ 0x35DD20B67B57E3F8uLL))) >> 8;
    LODWORD(v729) = v699 ^ 0x7D;
    v732 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v713 ^ 0x4B)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v713 ^ 0x4B) + 1395009)) >> 32) >> 1)));
    LODWORD(v631) = (*(_QWORD *)(v392
                               + 8
                               * (v715
                                - 1568 * (((5478275 * (unint64_t)v715) >> 32) >> 1))) >> 16) ^ ((v725 ^ (unint64_t)(4 * v725 * v725)) >> 8) ^ ((v727 ^ (unint64_t)(4 * v727 * v727)) >> 24) ^ 0xEEC68C7 ^ v728;
    v733 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v721 ^ 0xBB)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v721 ^ 0xBB) + 1395009)) >> 32) >> 1)));
    v734 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (_DWORD)v729
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v729 + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v735 = v733 ^ 0x35DD20B67B57E3F8 ^ (4 * (v733 ^ 0x35DD20B67B57E3F8) * (v733 ^ 0x35DD20B67B57E3F8));
    v736 = (*(_QWORD *)(v392
                                    + 8
                                    * (1089 * (v700 ^ 0x6B)
                                     + 1115136
                                     - 1568
                                     * (((5478275
                                                      * (unint64_t)(1089 * (v700 ^ 0x6B) + 1115136)) >> 32) >> 1))) >> 16) ^ v731 ^ ((v730 ^ (unint64_t)(4 * v730 * v730)) >> 32) ^ 0x2BB16028 ^ (*(_QWORD *)(v392 + 8 * (1089 * (v717 ^ 0xF3) + 1115136 - 1568 * (((5478275 * (unint64_t)(1089 * (v717 ^ 0xF3) + 1115136)) >> 32) >> 1))) >> 24);
    v737 = STACK[0xB18];
    LODWORD(v720) = *(unsigned __int8 *)(STACK[0xB18] + BYTE2(v631));
    v738 = v703 ^ 0x470D85FB ^ LODWORD(STACK[0xC60]);
    LODWORD(v707) = *(unsigned __int8 *)(STACK[0xB18] + (v738 >> 24));
    LODWORD(v713) = (BYTE3(v631) + 227) ^ 0xFFFFFF95 ^ *(unsigned __int8 *)(v448
                                                                          + (1269
                                                                                         * ((BYTE3(v631) - 29) ^ 0x42)
                                                                                         - 10304
                                                                                         * ((416826
                                                                                           * (unint64_t)(1269 * ((BYTE3(v631) - 29) ^ 0x42u))) >> 32)));
    LOBYTE(v721) = *(_BYTE *)(STACK[0xB18] + ((v713 >> 1) | ((_BYTE)v713 << 7))) + 124;
    LODWORD(v700) = 1269 * ((*(_BYTE *)(STACK[0xB18] + BYTE2(v736)) + 124) ^ 0x96) + 977130;
    v739 = (*(_QWORD *)(v392
                                    + 8
                                    * (1089 * (LODWORD(STACK[0xC58]) ^ 0x3D)
                                     + 1115136
                                     - 1568
                                     * (((5478275
                                                      * (unint64_t)(1089 * (LODWORD(STACK[0xC58]) ^ 0x3Du)
                                                                         + 1115136)) >> 32) >> 1))) >> 8) ^ (v735 >> 16) ^ ((v732 ^ (4 * (v732 ^ 0x35DD20B67B57E3F8) * (v732 ^ 0x35DD20B67B57E3F8uLL))) >> 24) ^ 0x2409EA4D ^ ((v734 ^ (unint64_t)(4 * v734 * v734)) >> 32);
    LOBYTE(v735) = *(_BYTE *)(STACK[0xB18] + BYTE1(v739)) - 29;
    LODWORD(v713) = *(unsigned __int8 *)(v448
                                       + 1269 * (v721 ^ 0x14)
                                       + 9216747
                                       - 10304
                                       * (((1667301
                                                        * (unint64_t)(1269 * (v721 ^ 0x14u)
                                                                           + 9216747)) >> 32) >> 2));
    LODWORD(v717) = *(unsigned __int8 *)(v448
                                       + v700
                                       - 10304
                                       * (((1667301 * (unint64_t)v700) >> 32) >> 2));
    v740 = v739 >> 24;
    LODWORD(v730) = 1269 * ((BYTE1(v738) + 124) ^ 0x96) + 977130;
    v741 = *(unsigned __int8 *)(v448
                              + v730
                              - 10304 * (((1667301 * (unint64_t)v730) >> 32) >> 2));
    LODWORD(v731) = *(unsigned __int8 *)(STACK[0xB18] + BYTE1(v736));
    LODWORD(STACK[0xC78]) = *(unsigned __int8 *)(STACK[0xB18] + v739);
    LODWORD(v660) = *(unsigned __int8 *)(v737 + BYTE2(v739));
    LOBYTE(v739) = *(_BYTE *)(v448
                            + 1269 * (v735 ^ 0xE8)
                            + 2610333
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269 * (v735 ^ 0xE8u) + 2610333)) >> 32) >> 2))
                 + (v735 ^ 0x35);
    LODWORD(v735) = v720 ^ 0x15;
    LOBYTE(v720) = (v739 >> 1) | ((_BYTE)v739 << 7);
    LODWORD(v739) = 1089 * v735 + 1115136;
    LODWORD(v705) = *(unsigned __int8 *)(v737 + v740);
    LODWORD(v740) = *(unsigned __int8 *)(v737 + (v741 ^ 0x7B));
    v742 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v707 ^ 0xC8)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v707 ^ 0xC8) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v721) = v713 ^ ((v721 ^ 0x2C) + 69) ^ 0x5B;
    LODWORD(v713) = 1089 * (v717 ^ 0x10)
                  + 1395009
                  - 1568
                  * (((5478275 * (unint64_t)(1089 * (v717 ^ 0x10) + 1395009)) >> 32) >> 1);
    LODWORD(v717) = 1089 * (v660 ^ 0x41)
                  + 1115136
                  - 1568
                  * (((5478275 * (unint64_t)(1089 * (v660 ^ 0x41) + 1115136)) >> 32) >> 1);
    v743 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v731 ^ 0xE2)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v731 ^ 0xE2) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    v744 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v705 ^ 0xD)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v705 ^ 0xD) + 1395009)) >> 32) >> 1)));
    v745 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (_DWORD)v721
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v721 + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v727) = 1089 * (*(unsigned __int8 *)(v737 + v738) ^ 0x9B) + 1115136;
    v746 = *(_QWORD *)(v392 + 8 * v713) ^ 0x35DD20B67B57E3F8;
    v747 = v745 ^ (4 * v745 * v745);
    LODWORD(v745) = 1089 * (*(unsigned __int8 *)(v737 + (v736 >> 24)) ^ 0x47) + 1115136;
    LODWORD(v707) = v745 - 1568 * (((5478275 * (unint64_t)v745) >> 32) >> 1);
    LODWORD(v745) = *(unsigned __int8 *)(v737
                                       + ((((v736 + 124) ^ 0x2C) + 69) ^ 0x4Du ^ *(_BYTE *)(v448 + 1269 * ((v736 + 124) ^ 0x14) + 9216747 - 10304 * (((1667301 * (unint64_t)(1269 * ((v736 + 124) ^ 0x14u) + 9216747)) >> 32) >> 2))));
    LODWORD(v736) = ((v742 ^ (unint64_t)(4 * v742 * v742)) >> 8) ^ ((v743 ^ (unint64_t)(4 * v743 * v743)) >> 24) ^ (*(_QWORD *)(v392 + 8 * (v739 - 1568 * (((5478275 * (unint64_t)v739) >> 32) >> 1))) >> 16);
    LODWORD(v729) = 1089 * (*(unsigned __int8 *)(v737 + v631) ^ 0xA5) + 1115136;
    v748 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (LODWORD(STACK[0xC78]) ^ 0xEA)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (LODWORD(STACK[0xC78]) ^ 0xEAu) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v703) = 1269 * (((*(_BYTE *)(v737 + BYTE2(v738)) ^ 0xDB) - 75) ^ 0x3E) + 1958067;
    LODWORD(v703) = *(unsigned __int8 *)(v448
                                       + v703
                                       - 10304
                                       * (((1667301 * (unint64_t)v703) >> 32) >> 2));
    v749 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v740 ^ 0x23)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v740 ^ 0x23) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v742) = *(_DWORD *)(v392
                              + 8
                              * (v729
                               - 1568 * (((5478275 * (unint64_t)v729) >> 32) >> 1))
                              + 4);
    v750 = (v747 >> 16) ^ ((v746 ^ (unint64_t)(4 * v746 * v746)) >> 24) ^ (*(_QWORD *)(v392 + 8 * (v727 - 1568 * (((5478275 * (unint64_t)v727) >> 32) >> 1))) >> 8) ^ ((v744 ^ 0x35DD20B67B57E3F8 ^ (4 * (v744 ^ 0x35DD20B67B57E3F8) * (v744 ^ 0x35DD20B67B57E3F8uLL))) >> 32) ^ 0xCC7AF649;
    LODWORD(v739) = 1089
                  * ((85
                                     * (((v703 >> 7) | (2 * v703)) ^ (2
                                                                                  * ((v703 >> 7) | (2 * v703))) ^ 0xCC)) ^ 0x2F)
                  + 1395009;
    v751 = *(_QWORD *)(v392
                     + 8
                     * (v739
                      - 1568 * (((5478275 * (unint64_t)v739) >> 32) >> 1)));
    LODWORD(v738) = 1089 * (*(unsigned __int8 *)(v737 + BYTE1(v631)) ^ 0x91) + 1115136;
    LODWORD(v736) = v736 ^ 0xDCB4FCA0 ^ *(_DWORD *)(v392 + 8 * v717 + 4);
    v752 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v720 ^ 0x5A)
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v720 ^ 0x5Au) + 1115136)) >> 32) >> 1))) >> 8;
    v753 = *(_QWORD *)(v392
                     + 8
                     * (v738
                      - 1568 * (((5478275 * (unint64_t)v738) >> 32) >> 1)));
    v754 = v742 ^ (*(_QWORD *)(v392 + 8 * v707) >> 8) ^ ((v749 ^ (unint64_t)(4 * v749 * v749)) >> 24) ^ 0x4BB6017C ^ ((v748 ^ (unint64_t)(4 * v748 * v748)) >> 16);
    v755 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v745 ^ 0x29)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v745 ^ 0x29) + 1395009)) >> 32) >> 1)));
    LOBYTE(v720) = ((*(_BYTE *)(v737 + v750) - 29) ^ 0x35)
                 + *(_BYTE *)(v448
                            + 1269 * ((*(_BYTE *)(v737 + v750) - 29) ^ 0xE8)
                            + 2610333
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269
                                                                * ((*(_BYTE *)(v737
                                                                                              + v750)
                                                                                   - 29) ^ 0xE8u)
                                                                + 2610333)) >> 32) >> 2));
    LOBYTE(v745) = (v720 >> 1) | ((_BYTE)v720 << 7);
    LODWORD(v720) = 1269
                  * (((*(_BYTE *)(v737 + v754) >> 5) | (8
                                                                                        * *(_BYTE *)(v737 + v754))) ^ 0x86)
                  + 2937735;
    LODWORD(v705) = *(unsigned __int8 *)(v737
                                       + ((unsigned __int16)(v742 ^ (*(_QWORD *)(v392 + 8 * v707) >> 8) ^ ((v749 ^ (unint64_t)(4 * v749 * v749)) >> 24) ^ 0x17C ^ ((v748 ^ (4 * (_DWORD)v748 * (_DWORD)v748)) >> 16)) >> 8));
    LODWORD(v746) = (v753 >> 24) ^ ((v751 ^ (4 * (v751 ^ 0x35DD20B67B57E3F8) * (v751 ^ 0x35DD20B67B57E3F8uLL))) >> 16) ^ ((v755 ^ 0x35DD20B67B57E3F8 ^ (4 * (v755 ^ 0x35DD20B67B57E3F8) * (v755 ^ 0x35DD20B67B57E3F8uLL))) >> 32) ^ 0x883696D9 ^ v752;
    LODWORD(v755) = 1269 * ((BYTE3(v746) - 75) ^ 0xE9) + 4891995;
    LODWORD(v755) = *(unsigned __int8 *)(v448
                                       + v755
                                       - 10304
                                       * (((1667301 * (unint64_t)v755) >> 32) >> 2));
    LOBYTE(v743) = 85 * (((v755 >> 7) | (2 * v755)) ^ 0xE4);
    LODWORD(v755) = *(unsigned __int8 *)(v737 + BYTE2(v754));
    LOBYTE(v748) = (*(_BYTE *)(v737 + BYTE1(v746)) - 29) ^ 0x95 ^ *(_BYTE *)(v448
                                                                           + (1269
                                                                                          * ((*(_BYTE *)(v737 + BYTE1(v746)) - 29) ^ 0x42)
                                                                                          - 10304
                                                                                          * ((416826
                                                                                            * (unint64_t)(1269 * ((*(_BYTE *)(v737 + BYTE1(v746)) - 29) ^ 0x42u))) >> 32)));
    LODWORD(v700) = 1089 * (*(unsigned __int8 *)(v737 + BYTE2(v736)) ^ 0xC7) + 1395009;
    LOBYTE(v742) = 37
                 * (*(_BYTE *)(v448
                             + v720
                             - 10304 * (((1667301 * (unint64_t)v720) >> 32) >> 2)) ^ 0x34);
    v756 = *(_QWORD *)(v392
                     + 8
                     * (v700
                      - 1568 * (((5478275 * (unint64_t)v700) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v700) = v745 ^ 0xA5;
    LOBYTE(v745) = (v748 >> 1) | ((_BYTE)v748 << 7);
    LOBYTE(v752) = (*(_BYTE *)(v737 + BYTE2(v746)) >> 5) | (8 * *(_BYTE *)(v737 + BYTE2(v746)));
    LODWORD(v744) = *(unsigned __int8 *)(v737 + v746);
    LODWORD(v746) = 1089 * (*(unsigned __int8 *)(v737 + v743) ^ 0x54) + 1115136;
    LODWORD(v743) = v746 - 1568 * (((5478275 * (unint64_t)v746) >> 32) >> 1);
    LODWORD(v746) = 1089 * (*(unsigned __int8 *)(v737 + BYTE1(v750)) ^ 0x2E) + 1395009;
    v757 = v754 >> 24;
    v758 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v742 ^ 0x38)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v742 ^ 0x38u) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LOBYTE(v748) = v752 ^ 0xA ^ *(_BYTE *)(v448
                                         + 1269 * (v752 ^ 0x44)
                                         + 8564481
                                         - 10304
                                         * (((1667301
                                                          * (unint64_t)(1269 * (v752 ^ 0x44u)
                                                                             + 8564481)) >> 32) >> 2));
    LODWORD(v742) = v744 ^ 0x50;
    v759 = v758 ^ (4 * v758 * v758);
    LODWORD(v720) = 1089 * (v705 ^ 0x23)
                  + 1395009
                  - 1568
                  * (((5478275 * (unint64_t)(1089 * (v705 ^ 0x23) + 1395009)) >> 32) >> 1);
    v760 = *(_QWORD *)(v392
                     + 8
                     * (v746
                      - 1568 * (((5478275 * (unint64_t)v746) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v752) = 1089 * v742 + 1395009;
    v761 = v760 ^ (4 * v760 * v760);
    LODWORD(v753) = v752 - 1568 * (((5478275 * (unint64_t)v752) >> 32) >> 1);
    LODWORD(v752) = *(unsigned __int8 *)(v737 + BYTE2(v750));
    LODWORD(v707) = *(unsigned __int8 *)(v737
                                       + (37
                                                         * (((v736 >> 21) & 0xF8 | (v736 >> 29)) ^ 0xA ^ *(_BYTE *)(v448 + 1269 * (((v736 >> 21) & 0xF8 | (v736 >> 29)) ^ 0x44) + 8564481 - 10304 * (((1667301 * (unint64_t)(1269 * (((v736 >> 21) & 0xF8 | (v736 >> 29)) ^ 0x44) + 8564481)) >> 32) >> 2)))));
    LODWORD(v760) = *(unsigned __int8 *)(v737 + (v750 >> 24));
    v762 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (_DWORD)v700
                      + 1115136
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v700 + 1115136)) >> 32) >> 1))) >> 8;
    LOBYTE(v749) = *(_BYTE *)(v737 + v757);
    LODWORD(v757) = 1089 * (v755 ^ 0x3C) + 1395009;
    LODWORD(v755) = ((v756 ^ (unint64_t)(4 * v756 * v756)) >> 32) ^ (v759 >> 16) ^ (*(_QWORD *)(v392 + 8 * v743) >> 24);
    v763 = (*(_QWORD *)(v392 + 8 * v753) ^ (4
                                                          * (*(_QWORD *)(v392 + 8 * v753) ^ 0x35DD20B67B57E3F8)
                                                          * (*(_QWORD *)(v392 + 8 * v753) ^ 0x35DD20B67B57E3F8uLL))) >> 16;
    LODWORD(v753) = *(unsigned __int8 *)(v737 + v736) ^ 0xD2;
    v764 = *(_QWORD *)(v392
                     + 8
                     * (v757
                      - 1568 * (((5478275 * (unint64_t)v757) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v743) = 1089 * (v745 ^ 0x70) + 1115136;
    v765 = v764 ^ (4 * v764 * v764);
    LODWORD(v720) = (*(_QWORD *)(v392
                               + 8
                               * (1089 * (v707 ^ 0xC1)
                                + 1115136
                                - 1568
                                * (((5478275
                                                 * (unint64_t)(1089 * (v707 ^ 0xC1) + 1115136)) >> 32) >> 1))) >> 24) ^ ((*(_QWORD *)(v392 + 8 * v720) ^ (4 * (*(_QWORD *)(v392 + 8 * v720) ^ 0x35DD20B67B57E3F8) * (*(_QWORD *)(v392 + 8 * v720) ^ 0x35DD20B67B57E3F8uLL))) >> 8) ^ v763;
    v766 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (_DWORD)v753
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * v753 + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v763) = 1089 * ((37 * v748) ^ 0xFC) + 1115136;
    LODWORD(v746) = 1269
                  * ((((*(_BYTE *)(v737 + BYTE1(v736)) ^ 0x71) >> 5) | (8 * (*(_BYTE *)(v737 + BYTE1(v736)) ^ 0x71))) ^ 0x86)
                  + 2937735;
    LODWORD(v762) = v762 ^ v755 ^ 0x6452F1AC;
    LODWORD(v755) = *(_DWORD *)(v392
                              + 8
                              * (v763
                               - 1568 * (((5478275 * (unint64_t)v763) >> 32) >> 1))
                              + 4);
    LODWORD(v746) = 1089
                  * ((37
                                     * (*(_BYTE *)(v448
                                                 + v746
                                                 - 10304
                                                 * (((1667301 * (unint64_t)v746) >> 32) >> 2)) ^ 0x34)) ^ 6)
                  + 1115136;
    LODWORD(v765) = (*(_QWORD *)(v392
                               + 8
                               * (1089 * (v752 ^ 0x97)
                                + 1115136
                                - 1568
                                * (((5478275
                                                 * (unint64_t)(1089 * (v752 ^ 0x97) + 1115136)) >> 32) >> 1))) >> 16) ^ (v765 >> 24) ^ *(_DWORD *)(v392 + 8 * (v743 - 1568 * (((5478275 * (unint64_t)v743) >> 32) >> 1)) + 4);
    v767 = *(_QWORD *)(v392
                     + 8
                     * (1089 * (v760 ^ 0xA6)
                      + 1395009
                      - 1568
                      * (((5478275 * (unint64_t)(1089 * (v760 ^ 0xA6) + 1395009)) >> 32) >> 1))) ^ 0x35DD20B67B57E3F8;
    LODWORD(v760) = 1269 * ((((v749 ^ 0xDE) >> 5) | (8 * (v749 ^ 0xDE))) ^ 0x86)
                  + 2937735;
    LOBYTE(v749) = *(_BYTE *)(v448
                            + v760
                            - 10304 * (((1667301 * (unint64_t)v760) >> 32) >> 2));
    v768 = v765 ^ ((v766 ^ (unint64_t)(4 * v766 * v766)) >> 8) ^ 0x5E1229C7;
    v769 = *(_QWORD *)(v392
                     + 8
                     * (v746
                      - 1568 * (((5478275 * (unint64_t)v746) >> 32) >> 1))) >> 8;
    LODWORD(v749) = 1089 * ((37 * (v749 ^ 0x34)) ^ 6) + 1115136;
    v770 = *(_QWORD *)(v392
                     + 8
                     * (v749
                      - 1568 * (((5478275 * (unint64_t)v749) >> 32) >> 1)));
    v771 = v448;
    v772 = *(unsigned __int8 *)(v737 + (v768 >> 24));
    v773 = HIDWORD(v761) ^ v720 ^ 0x326E1A7E;
    LODWORD(v765) = (*(unsigned __int8 *)(v737 + BYTE2(v768)) >> 5) | (8 * *(unsigned __int8 *)(v737 + BYTE2(v768)));
    v774 = (v767 ^ (unint64_t)(4 * v767 * v767)) >> 16;
    LODWORD(v767) = 1269 * ((BYTE3(v762) + 124) ^ 0x96) + 977130;
    LODWORD(v755) = v769 ^ (v770 >> 24) ^ v755;
    v775 = *(unsigned __int8 *)(v448
                              + v767
                              - 10304 * (((1667301 * (unint64_t)v767) >> 32) >> 2));
    v776 = *(unsigned __int8 *)(v737 + (v773 >> 24));
    LODWORD(v767) = (v762 >> 5) & 0xF8 | ((unsigned __int16)v762 >> 13);
    LODWORD(v705) = *(unsigned __int8 *)(v737 + v768);
    LODWORD(v748) = *(unsigned __int8 *)(v737 + v773);
    LODWORD(STACK[0xBC8]) = *(unsigned __int8 *)(v737 + BYTE2(v773));
    v777 = v755 ^ 0xA52748E9 ^ v774;
    LODWORD(v774) = *(unsigned __int8 *)(v771
                                       + 1269 * (v765 ^ 0x44)
                                       + 8564481
                                       - 10304
                                       * (((1667301
                                                        * (unint64_t)(1269 * (v765 ^ 0x44u)
                                                                           + 8564481)) >> 32) >> 2));
    LODWORD(v761) = *(unsigned __int8 *)(v737 + v762);
    LODWORD(STACK[0xBB0]) = *(unsigned __int8 *)(v737 + (v775 ^ 0x7B));
    LODWORD(v765) = v765 ^ 0xA ^ v774;
    LOBYTE(v775) = v767 ^ 0xA ^ *(_BYTE *)(v771
                                         + 1269 * (v767 ^ 0x44)
                                         + 8564481
                                         - 10304
                                         * (((1667301
                                                          * (unint64_t)(1269 * (v767 ^ 0x44)
                                                                             + 8564481)) >> 32) >> 2));
    LODWORD(v757) = *(unsigned __int8 *)(v737 + BYTE2(v777));
    LODWORD(v774) = (v748 - 29) ^ 0xFFFFFF95 ^ *(unsigned __int8 *)(v771
                                                                  + (1269
                                                                                 * ((v748 - 29) ^ 0x42)
                                                                                 - 10304
                                                                                 * ((416826
                                                                                   * (unint64_t)(1269 * ((v748 - 29) ^ 0x42u))) >> 32)));
    LODWORD(v762) = 1269 * ((BYTE2(v762) - 75) ^ 0xE9) + 4891995;
    LODWORD(v762) = *(unsigned __int8 *)(v771
                                       + v762
                                       - 10304
                                       * (((1667301 * (unint64_t)v762) >> 32) >> 2));
    LODWORD(v767) = (v774 >> 1) | ((_DWORD)v774 << 7);
    v778 = *(unsigned __int8 *)(v737 + BYTE1(v777));
    LODWORD(STACK[0xBE8]) = *(unsigned __int8 *)(v737 + v777);
    LODWORD(v774) = *(unsigned __int8 *)(v737 + (v777 >> 24));
    LODWORD(v763) = *(unsigned __int8 *)(v737 + (37 * v775));
    LODWORD(v773) = *(unsigned __int8 *)(v737 + BYTE1(v773));
    LODWORD(v775) = *(unsigned __int8 *)(v737 + (85 * (((v762 >> 7) | (2 * v762)) ^ 0xE4)));
    v779 = STACK[0xC80];
    LODWORD(STACK[0xC58]) = *(unsigned __int8 *)(v737 + BYTE1(v768));
    LODWORD(STACK[0xC50]) = v773;
    LODWORD(STACK[0xC48]) = v705;
    LODWORD(STACK[0xC40]) = v772;
    LODWORD(STACK[0xC38]) = v774;
    LODWORD(STACK[0xC30]) = v767;
    LODWORD(STACK[0xC18]) = v775;
    LODWORD(STACK[0xC10]) = v761;
    LODWORD(STACK[0xC08]) = v757;
    LODWORD(STACK[0xC00]) = v763;
    LODWORD(STACK[0xBF8]) = v776;
    LODWORD(STACK[0xBF0]) = v778;
    LODWORD(STACK[0xBA8]) = 37 * v765;
    if ((v779 & 1) != 0)
    {
      v780 = STACK[0xC20];
      if ((STACK[0xC70] & 1) != 0)
      {
        v781 = LODWORD(STACK[0x980]) ^ 0x305216AF;
        v782 = STACK[0xC28];
        v783 = (LODWORD(STACK[0xC28]) ^ 0xFFFFFFA7) + 124;
        v784 = ((LODWORD(STACK[0xC28]) ^ LOBYTE(STACK[0x980]) ^ 0x7A) + 124) ^ 0x96;
        LODWORD(STACK[0xBA0]) = LODWORD(STACK[0xC28]) ^ 0xFFFFFFF5;
        v785 = 1269 * (((v782 ^ 0xE2) + 124) ^ 0x96) + 977130;
        v786 = v782 ^ 0x14;
        v787 = *(unsigned __int8 *)(v771
                                  + 1269 * (((v782 ^ 0x44) - 29) ^ 0xE8)
                                  + 2610333
                                  - 10304
                                  * (((1667301
                                                   * (unint64_t)(1269
                                                                      * (((v782 ^ 0x44) - 29) ^ 0xE8u)
                                                                      + 2610333)) >> 32) >> 2))
             + (((v782 ^ 0x44) - 29) ^ 0x35);
        v788 = *(unsigned __int8 *)(v771 + v785
                                         - 10304 * (((1667301 * (unint64_t)v785) >> 32) >> 2));
        v789 = *(unsigned __int8 *)(v771
                                  + 1269 * v784
                                  + 977130
                                  - 10304
                                  * (((1667301 * (unint64_t)(1269 * v784 + 977130)) >> 32) >> 2));
        v790 = 1269 * (((v782 ^ 0x15) - 75) ^ 0xE9) + 4891995;
        LODWORD(STACK[0xC68]) = v782 ^ 0xFFFFFFDA;
        v791 = ((v787 >> 1) | (v787 << 7)) ^ 0x52;
        v792 = *(unsigned __int8 *)(v771
                                  + 1269 * (v783 ^ 0x14)
                                  + 9216747
                                  - 10304
                                  * (((1667301
                                                   * (unint64_t)(1269 * (v783 ^ 0x14u) + 9216747)) >> 32) >> 2));
        v793 = (v783 ^ 0x2C) + 69;
        v794 = *(unsigned __int8 *)(v771 + v790
                                         - 10304 * (((1667301 * (unint64_t)v790) >> 32) >> 2));
        LODWORD(STACK[0xB98]) = v782 ^ 0x5C;
        LOBYTE(v795) = v782 ^ 0x21;
        v796 = 85 * (((v794 >> 7) | (2 * v794)) ^ 0xFFFFFFE4);
        v797 = v782 ^ 0xFFFFFFBE;
        v798 = v788 ^ 0x7B;
        v799 = v782 ^ 0x63;
        LODWORD(STACK[0xC60]) = v789 ^ 0x7B;
        v800 = v782 ^ 5;
        v801 = v793 ^ 0x4D ^ v792;
        LODWORD(STACK[0xC78]) = v782 ^ 0xFFFFFFE8;
        LOBYTE(v780) = v782 ^ 0x56;
        LOBYTE(v802) = v782 ^ 0x3F;
        goto LABEL_43;
      }
      LODWORD(STACK[0x9F0]) = 0;
      LODWORD(STACK[0x9E8]) = 0;
      LODWORD(STACK[0x9F8]) = 0;
      LODWORD(STACK[0x9E0]) = 0;
      LODWORD(STACK[0x9D8]) = 0;
      LODWORD(STACK[0x9C8]) = 0;
      LODWORD(STACK[0x9D0]) = 0;
      LODWORD(STACK[0x9C0]) = 0;
      LODWORD(v805) = 0;
      LODWORD(STACK[0x9B8]) = 0;
      LODWORD(STACK[0x9B0]) = 0;
      STACK[0xA00] = 0;
      LODWORD(STACK[0x9A0]) = 0;
      LODWORD(STACK[0x990]) = 0;
      LODWORD(STACK[0x998]) = 0;
      LODWORD(STACK[0x9A8]) = 0;
      v803 = STACK[0x980];
    }
    else
    {
      v803 = (LODWORD(STACK[0x988]) + 898569125) & 0xA9BFBFFD;
      v804 = (*(unsigned __int8 *)(v771 + STACK[0x7D0]) >> 7) | (2 * *(unsigned __int8 *)(v771 + STACK[0x7D0]));
      LODWORD(STACK[0x9F8]) = 85 * (v804 ^ (2 * v804) ^ (v803 + 31));
      LODWORD(STACK[0x9F0]) = STACK[0x7C8];
      LODWORD(STACK[0x9E8]) = STACK[0x7C0];
      LODWORD(STACK[0x9E0]) = STACK[0x7E0];
      LODWORD(STACK[0x9D8]) = STACK[0x7A8];
      LODWORD(STACK[0x9C8]) = STACK[0x7B8];
      LODWORD(STACK[0x9D0]) = STACK[0x7E8];
      LODWORD(STACK[0x9C0]) = STACK[0x7F8];
      v805 = STACK[0x808];
      LODWORD(STACK[0x9B8]) = STACK[0xBB8];
      LODWORD(STACK[0x9B0]) = STACK[0x7A0];
      STACK[0xA00] = STACK[0x7F0];
      LODWORD(STACK[0x9A0]) = STACK[0x7B0];
      LODWORD(STACK[0x990]) = STACK[0x800];
      LODWORD(STACK[0x998]) = STACK[0xBC0];
      LODWORD(STACK[0x9A8]) = STACK[0x7D8];
      v780 = STACK[0xC20];
    }
    v781 = (v803 + 396724565) | 0x18888000;
    v806 = v803 ^ 0xDE801CFB;
    v807 = STACK[0xC28];
    v808 = *(unsigned __int8 *)(v771
                              + ((v781 ^ 0xB9D059B1)
                               + 1269 * (((LODWORD(STACK[0xC28]) ^ 0x7C) - 75) ^ 0x3E))
                              % 0x2840);
    v809 = ((LODWORD(STACK[0xC28]) ^ v803 ^ 0xFB ^ 0xE3) + 124) ^ 0x96;
    v801 = LODWORD(STACK[0xC28]) ^ 0xFFFFFFF8;
    v810 = ((LOBYTE(STACK[0xC28]) ^ 0xA7) >> 5) | (8 * (LOBYTE(STACK[0xC28]) ^ 0xA7));
    LODWORD(STACK[0xC78]) = LODWORD(STACK[0xC28]) ^ 9;
    v800 = 85 * (((v808 >> 7) | (2 * v808)) ^ (2 * ((v808 >> 7) | (2 * v808))) ^ 0xFFFFFFCC);
    v795 = v807 ^ 0x13;
    v811 = *(unsigned __int8 *)(v771
                              + 1269 * v809
                              + 977130
                              - 10304
                              * (((1667301 * (unint64_t)(1269 * v809 + 977130)) >> 32) >> 2));
    v802 = v807 ^ 0x41;
    v786 = v807 ^ 0xFFFFFFEE;
    v796 = v807 ^ 0xFFFFFFB7;
    v812 = *(unsigned __int8 *)(v771
                              + 1269 * (v810 ^ 0x86)
                              + 2937735
                              - 10304
                              * (((1667301 * (unint64_t)(1269 * (v810 ^ 0x86u) + 2937735)) >> 32) >> 2));
    v791 = v807 ^ 0x58;
    v798 = v807 ^ 0xFFFFFFF1;
    LODWORD(STACK[0xC60]) = v807 ^ 0x17;
    v797 = v811 ^ 0x7B;
    v813 = v807 ^ 0xFFFFFFCC;
    LODWORD(STACK[0xC68]) = v807 ^ 0x2D;
    v799 = 37 * (v812 ^ 0x34);
    LODWORD(STACK[0x970]) = v805;
    if ((v779 & 1) != 0)
    {
      LODWORD(STACK[0xBA0]) = STACK[0xC78];
      LODWORD(STACK[0xB98]) = v813;
    }
    else
    {
      v814 = 1269
           * ((((LOBYTE(STACK[0x9E0]) ^ v791) >> 5) | (8
                                                                                       * (LOBYTE(STACK[0x9E0]) ^ v791))) ^ 0x86)
           + 2937735;
      v781 = v806 + 1655571884;
      v786 ^= LODWORD(STACK[0x9D8]);
      v798 ^= STACK[0xA00];
      v800 ^= LODWORD(STACK[0x9E8]);
      v795 ^= LODWORD(STACK[0x990]);
      v796 ^= LODWORD(STACK[0x9C8]);
      v797 ^= LODWORD(STACK[0x9F8]);
      v815 = 1269 * ((v806 - 24) ^ ((v799 ^ LODWORD(STACK[0x9B0])) - 75)) + 1958067;
      v816 = *(unsigned __int8 *)(v771 + v815 - 10304 * (((1667301 * (unint64_t)v815) >> 32) >> 2));
      v817 = 1269 * (((LODWORD(STACK[0x9B8]) ^ LODWORD(STACK[0xC68])) - 75) ^ 0xE9) + 4891995;
      v818 = *(unsigned __int8 *)(v771 + v817 - 10304 * (((1667301 * (unint64_t)v817) >> 32) >> 2));
      v819 = STACK[0xC78];
      LODWORD(STACK[0xBA0]) = LODWORD(STACK[0x9C0]) ^ LODWORD(STACK[0xC78]);
      v801 ^= LODWORD(STACK[0x9F0]);
      v820 = *(unsigned __int8 *)(v771 + v814 - 10304 * (((1667301 * (unint64_t)v814) >> 32) >> 2));
      v802 ^= LODWORD(STACK[0x998]);
      LOBYTE(v780) = v805 ^ v780;
      LODWORD(STACK[0xC78]) = LODWORD(STACK[0x9A0]) ^ v819;
      LODWORD(STACK[0xB98]) = LODWORD(STACK[0x9D0]) ^ v813;
      LODWORD(STACK[0xC60]) ^= LODWORD(STACK[0x9A8]);
      v791 = 37 * (v820 ^ 0x34);
      v799 = 85 * (((v816 >> 7) | (2 * v816)) ^ (2 * ((v816 >> 7) | (2 * v816))) ^ 0xFFFFFFCC);
      LODWORD(STACK[0xC68]) = 85 * (((v818 >> 7) | (2 * v818)) ^ 0xFFFFFFE4);
    }
LABEL_43:
    LODWORD(STACK[0xB88]) = v781;
    v821 = (v781 + 1329394571) | 0x80950320;
    LODWORD(STACK[0xB7C]) = v821;
    v822 = (((v798 ^ 0xFFFFFFBE)
           + (v821 ^ v798 ^ 0x50)
           + *(unsigned __int8 *)(v771
                                + 1269 * (v798 ^ 0x52)
                                + 7176195
                                - 10304
                                * (((1667301
                                                 * (unint64_t)(1269 * (v798 ^ 0x52u) + 7176195)) >> 32) >> 2))
           + 1) ^ 0x43)
         - 29;
    v823 = (v822 ^ 0x35)
         + *(unsigned __int8 *)(v771
                              + 1269 * (v822 ^ 0xE8)
                              + 2610333
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v822 ^ 0xE8u) + 2610333)) >> 32) >> 2));
    LOBYTE(v821) = (((v780 ^ 0x7D)
                   + (v780 ^ 0x3E)
                   + *(_BYTE *)(v771
                              + 1269 * (v780 ^ 0x91)
                              + 7176195
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v780 ^ 0x91u) + 7176195)) >> 32) >> 2))
                   + 1) ^ 0x6F)
                 + 124;
    v824 = (v823 >> 1) | (v823 << 7);
    v825 = *(unsigned __int8 *)(v771
                              + 1269 * (((v800 ^ 0x4C) - 29) ^ 0xE8)
                              + 2610333
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269
                                                                  * (((v800 ^ 0x4C) - 29) ^ 0xE8u)
                                                                  + 2610333)) >> 32) >> 2))
         + (((v800 ^ 0x4C) - 29) ^ 0x35);
    v826 = (v825 >> 1) | (v825 << 7);
    v827 = ((*(unsigned __int8 *)(v771
                                + 1269 * (v826 ^ 0xCE)
                                + 7176195
                                - 10304
                                * (((1667301
                                                 * (unint64_t)(1269 * (v826 ^ 0xCEu) + 7176195)) >> 32) >> 2))
           + (v826 ^ 0x22)
           + (v826 ^ 0x61)
           + 1) ^ 0xFFFFFFCC)
         + 124;
    v828 = 1269 * (v795 ^ 0x78)
         + 2284200
         - 10304
         * (((1667301 * (unint64_t)(1269 * (v795 ^ 0x78u) + 2284200)) >> 32) >> 2);
    v829 = (v797 ^ 0xFFFFFFD4)
         + (v797 ^ 0xFFFFFF97)
         + *(unsigned __int8 *)(v771
                              + 1269 * (v797 ^ 0x38)
                              + 7176195
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v797 ^ 0x38u) + 7176195)) >> 32) >> 2));
    LODWORD(STACK[0xC28]) = (v791 ^ 0x2A)
                          + (v791 ^ 0x69)
                          + *(unsigned __int8 *)(v771
                                               + 1269 * (v791 ^ 0xC6)
                                               + 7176195
                                               - 10304
                                               * (((1667301
                                                                * (unint64_t)(1269
                                                                                   * (v791 ^ 0xC6u)
                                                                                   + 7176195)) >> 32) >> 2));
    v830 = (((v799 ^ 0xFFFFFF93)
           + (v799 ^ 0xFFFFFFD0)
           + *(unsigned __int8 *)(v771
                                + 1269 * (v799 ^ 0x7F)
                                + 7176195
                                - 10304
                                * (((1667301
                                                 * (unint64_t)(1269 * (v799 ^ 0x7Fu) + 7176195)) >> 32) >> 2))
           + 1) ^ 0x54)
         - 29;
    v831 = (v830 ^ 0x35)
         + *(unsigned __int8 *)(v771
                              + 1269 * (v830 ^ 0xE8)
                              + 2610333
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v830 ^ 0xE8u) + 2610333)) >> 32) >> 2));
    v832 = ((v831 >> 1) | (v831 << 7)) ^ 0xFFFFFFB6;
    v833 = (v832 >> 5) | (8 * v832);
    v834 = 1269 * (v802 ^ 4)
         + 2284200
         - 10304
         * (((1667301 * (unint64_t)(1269 * (v802 ^ 4u) + 2284200)) >> 32) >> 2);
    v835 = ((LODWORD(STACK[0xC60]) ^ 0xFFFFFFA6) - 29) ^ 0xFFFFFF95 ^ *(unsigned __int8 *)(STACK[0xBD0]
                                                                                         + (1269 * (((LOBYTE(STACK[0xC60]) ^ 0xA6) - 29) ^ 0x42) - 10304 * ((416826 * (unint64_t)(1269 * (((LOBYTE(STACK[0xC60]) ^ 0xA6) - 29) ^ 0x42u))) >> 32)));
    LOBYTE(v835) = (v835 >> 1) | ((_BYTE)v835 << 7);
    v836 = *(_BYTE *)(STACK[0xBD0]
                    + 1269 * (v835 ^ 0x9C)
                    + 7176195
                    - 10304
                    * (((1667301 * (unint64_t)(1269 * (v835 ^ 0x9Cu) + 7176195)) >> 32) >> 2))
         + (v835 ^ 0x70)
         + (v835 ^ 0x33);
    v837 = (v801 ^ 0x61)
         + (v801 ^ 0x22)
         + *(unsigned __int8 *)(STACK[0xBD0]
                              + 1269 * (v801 ^ 0x8D)
                              + 7176195
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v801 ^ 0x8Du) + 7176195)) >> 32) >> 2));
    v838 = (v786 ^ 0xFFFFFFA7)
         + (v786 ^ 0xFFFFFFE4)
         + *(unsigned __int8 *)(STACK[0xBD0]
                              + 1269 * (v786 ^ 0x4B)
                              + 7176195
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v786 ^ 0x4Bu) + 7176195)) >> 32) >> 2));
    v839 = *(unsigned __int8 *)(STACK[0xBD0]
                              + 1269 * (v833 ^ 0x44)
                              + 8564481
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v833 ^ 0x44u) + 8564481)) >> 32) >> 2));
    v840 = v833 ^ 0xA;
    v5 = STACK[0xBD0];
    v841 = v839 ^ v840;
    v842 = 1269
         * (((((v796 ^ 0x90)
                              + (v796 ^ 0xD3)
                              + *(_BYTE *)(STACK[0xBD0]
                                         + 1269 * (v796 ^ 0x7C)
                                         + 7176195
                                         - 10304
                                         * (((1667301
                                                          * (unint64_t)(1269 * (v796 ^ 0x7Cu)
                                                                             + 7176195)) >> 32) >> 2))
                              + 1) ^ 0x54)
                            + 124) ^ 0x96)
         + 977130;
    v843 = v842 - 10304 * (((1667301 * (unint64_t)v842) >> 32) >> 2);
    v844 = 1269 * (LODWORD(STACK[0xBA0]) ^ 0x9B) + 7176195;
    LODWORD(STACK[0xC60]) = (LODWORD(STACK[0xBA0]) ^ 0x77)
                          + (LODWORD(STACK[0xBA0]) ^ 0x34)
                          + *(unsigned __int8 *)(STACK[0xBD0]
                                               + v844
                                               - 10304 * (((1667301 * (unint64_t)v844) >> 32) >> 2));
    v845 = 1269 * (LODWORD(STACK[0xB98]) ^ 0x39) + 2284200;
    v846 = v845 - 10304 * (((1667301 * (unint64_t)v845) >> 32) >> 2);
    LOBYTE(v845) = *(_BYTE *)(v5
                            + 1269 * (v821 ^ 0x14)
                            + 9216747
                            - 10304
                            * (((1667301
                                             * (unint64_t)(1269 * (v821 ^ 0x14u) + 9216747)) >> 32) >> 2)) ^ ((v821 ^ 0x2C) + 69) ^ LODWORD(STACK[0xBC8]);
    v847 = v824 ^ LODWORD(STACK[0xBB0]);
    v848 = 1269 * (LODWORD(STACK[0xC78]) ^ 0x2B) + 2284200;
    v849 = v848 - 10304 * (((1667301 * (unint64_t)v848) >> 32) >> 2);
    v850 = 1269 * (LODWORD(STACK[0xC68]) ^ 0x53) + 2284200;
    LODWORD(STACK[0xC20]) = v850 - 10304 * (((1667301 * (unint64_t)v850) >> 32) >> 2);
    LODWORD(STACK[0xC78]) = ((v847 ^ 0x60) + 32) ^ *(unsigned __int8 *)(v5
                                                                      + 1269 * (v847 ^ 0xE4)
                                                                      + 12687462
                                                                      - 10304
                                                                      * (((1667301
                                                                                       * (unint64_t)(1269 * (v847 ^ 0xE4u) + 12687462)) >> 32) >> 2));
    v851 = *(unsigned __int8 *)(v5
                              + 1269 * (v827 ^ 0x14)
                              + 9216747
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v827 ^ 0x14u) + 9216747)) >> 32) >> 2)) ^ ((v827 ^ 0x2C) + 69) ^ LODWORD(STACK[0xBA8]);
    v852 = 1269
         * (((((v845 ^ 0x76) + 127) ^ *(_BYTE *)(v5
                                                                + 1269 * (v845 ^ 0xBD)
                                                                + 7913484
                                                                - 10304
                                                                * (((1667301
                                                                                 * (unint64_t)(1269 * (v845 ^ 0xBDu) + 7913484)) >> 32) >> 2)) ^ 0x9F)
                            - 75) ^ 0xE9)
         + 4891995;
    v853 = *(unsigned __int8 *)(v5 + v852 - 10304 * (((1667301 * (unint64_t)v852) >> 32) >> 2));
    v854 = 1269 * ((((85 * (((v853 >> 7) | (2 * v853)) ^ 0xE4)) ^ 0xE1) - 75) ^ 0xE9) + 4891995;
    v855 = *(unsigned __int8 *)(v5 + v854 - 10304 * (((1667301 * (unint64_t)v854) >> 32) >> 2));
    LODWORD(STACK[0xC68]) = (v855 >> 7) | (2 * v855);
    v856 = ((v851 >> 5) | (8 * v851)) ^ 9 ^ *(unsigned __int8 *)(v5
                                                                                + 1269
                                                                                * (((v851 >> 5) | (8 * v851)) ^ 0x47)
                                                                                + 8564481
                                                                                - 10304
                                                                                * (((1667301
                                                                                                 * (unint64_t)(1269 * (((v851 >> 5) | (8 * v851)) ^ 0x47u) + 8564481)) >> 32) >> 2));
    v857 = *(unsigned __int8 *)(v5
                              + 1269 * ((LOBYTE(STACK[0xBE8]) - 29) ^ 0xE8)
                              + 2610333
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269
                                                                  * ((LOBYTE(STACK[0xBE8]) - 29) ^ 0xE8u)
                                                                  + 2610333)) >> 32) >> 2))
         + ((LODWORD(STACK[0xBE8]) - 29) ^ 0x35);
    v858 = 37 * v856;
    v859 = ((v829 + 1) ^ ((v857 >> 1) | (v857 << 7)) ^ 0x3F) - 29;
    v860 = *(unsigned __int8 *)(v5 + v828) ^ LODWORD(STACK[0xBF8]);
    v861 = (v859 ^ 0x35)
         + *(unsigned __int8 *)(v5
                              + 1269 * (v859 ^ 0xE8)
                              + 2610333
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v859 ^ 0xE8u) + 2610333)) >> 32) >> 2));
    v862 = (v861 >> 1) | (v861 << 7);
    v863 = (((v860 ^ 0xFFFFFFFD) + 32) ^ 0xFFFFFFD6 ^ *(unsigned __int8 *)(v5
                                                                         + 1269 * (v860 ^ 0x79)
                                                                         + 12687462
                                                                         - 10304
                                                                         * (((1667301
                                                                                          * (unint64_t)(1269 * (v860 ^ 0x79u) + 12687462)) >> 32) >> 2)))
         - 29;
    v864 = *(unsigned __int8 *)(v5
                              + (1269 * (v863 ^ 0x42)
                                             - 10304
                                             * ((416826 * (unint64_t)(1269 * (v863 ^ 0x42u))) >> 32))) ^ v863 ^ 0xFFFFFF95;
    LODWORD(STACK[0xBF8]) = (v864 >> 1) | (v864 << 7);
    v865 = (LODWORD(STACK[0xC10]) >> 5) | (8 * LODWORD(STACK[0xC10]));
    v866 = (37
          * (v865 ^ 0xA ^ *(unsigned __int8 *)(v5
                                             + 1269 * (v865 ^ 0x44)
                                             + 8564481
                                             - 10304
                                             * (((1667301
                                                              * (unint64_t)(1269
                                                                                 * (v865 ^ 0x44u)
                                                                                 + 8564481)) >> 32) >> 2)))) ^ *(unsigned __int8 *)(v5 + v834);
    v867 = (v837 + 1) ^ LODWORD(STACK[0xC08]);
    v868 = 1269 * (((LODWORD(STACK[0xC48]) ^ (v836 + 1) ^ 0xC7) - 75) ^ 0xE9) + 4891995;
    v869 = *(unsigned __int8 *)(v5 + v868 - 10304 * (((1667301 * (unint64_t)v868) >> 32) >> 2));
    v870 = (v838 + 1) ^ LODWORD(STACK[0xC00]);
    v871 = *(unsigned __int8 *)(v5 + v843) ^ LODWORD(STACK[0xC30]);
    v872 = (((v870 ^ 0xFFFFFFA3) + 127) ^ *(unsigned __int8 *)(v5
                                                             + 1269 * (v870 ^ 0x68)
                                                             + 7913484
                                                             - 10304
                                                             * (((1667301
                                                                              * (unint64_t)(1269
                                                                                                 * (v870 ^ 0x68u)
                                                                                                 + 7913484)) >> 32) >> 2)) ^ 0x1C)
         - 29;
    LOBYTE(v837) = *(_BYTE *)(v5 + v849) ^ LODWORD(STACK[0xC18]);
    v873 = *(unsigned __int8 *)(v5 + v846) ^ LODWORD(STACK[0xC38]);
    v874 = (v872 ^ 0x35)
         + *(unsigned __int8 *)(v5
                              + 1269 * (v872 ^ 0xE8)
                              + 2610333
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v872 ^ 0xE8u) + 2610333)) >> 32) >> 2));
    v875 = *(unsigned __int8 *)(v5
                              + 1269 * (v862 ^ 0x7B)
                              + 7913484
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v862 ^ 0x7Bu) + 7913484)) >> 32) >> 2)) ^ ((v862 ^ 0xFFFFFFB0) + 127) ^ 0xFFFFFFE4;
    v876 = 1269
         * (((((v837 ^ 0xEE) + 127) ^ 0x29 ^ *(_BYTE *)(v5
                                                                       + 1269 * (v837 ^ 0x25)
                                                                       + 7913484
                                                                       - 10304
                                                                       * (((1667301
                                                                                        * (unint64_t)(1269 * (v837 ^ 0x25u) + 7913484)) >> 32) >> 2)))
                            - 75) ^ 0x3E)
         + 1958067;
    v877 = *(_BYTE *)(v5 + LODWORD(STACK[0xC20])) ^ LODWORD(STACK[0xC58]);
    v878 = (((LODWORD(STACK[0xC28]) + 1) ^ LODWORD(STACK[0xC40]) ^ 0xFFFFFF9D) + 127) ^ 0x6C ^ *(unsigned __int8 *)(v5 + 1269 * (((LOBYTE(STACK[0xC28]) + 1) ^ LOBYTE(STACK[0xC40])) ^ 0x56) + 7913484 - 10304 * (((1667301 * (unint64_t)(1269 * (((LOBYTE(STACK[0xC28]) + 1) ^ LOBYTE(STACK[0xC40])) ^ 0x56u) + 7913484)) >> 32) >> 2));
    v879 = *(unsigned __int8 *)(v5 + v876 - 10304 * (((1667301 * (unint64_t)v876) >> 32) >> 2));
    v880 = 1269
         * (((((v877 ^ 0x82) + 32) ^ 0xD6 ^ *(_BYTE *)(v5
                                                                      + 1269 * (v877 ^ 6)
                                                                      + 12687462
                                                                      - 10304
                                                                      * (((1667301
                                                                                       * (unint64_t)(1269 * (v877 ^ 6u) + 12687462)) >> 32) >> 2)))
                            - 75) ^ 0xE9)
         + 4891995;
    v881 = *(unsigned __int8 *)(v5 + v880 - 10304 * (((1667301 * (unint64_t)v880) >> 32) >> 2));
    v235 = ((v871 ^ 0xFFFFFFD6) + 127) ^ 0x3B ^ *(unsigned __int8 *)(v5
                                                                   + 1269 * (v871 ^ 0x1D)
                                                                   + 7913484
                                                                   - 10304
                                                                   * (((1667301
                                                                                    * (unint64_t)(1269 * (v871 ^ 0x1Du) + 7913484)) >> 32) >> 2));
    v882 = 85 * (((v869 >> 7) | (2 * v869)) ^ 0xFFFFFFE4);
    v883 = *(unsigned __int8 *)(v5
                              + 1269 * (v866 ^ 0x65)
                              + 12687462
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v866 ^ 0x65u) + 12687462)) >> 32) >> 2)) ^ ((v866 ^ 0xFFFFFFE1) + 32) ^ 0x45;
    v884 = (((37 * v841) ^ LODWORD(STACK[0xBF0]) ^ 5) + 127) ^ 0xFFFFFFD4 ^ *(unsigned __int8 *)(v5
                                                                                               + 1269
                                                                                               * (((37 * v841) ^ LOBYTE(STACK[0xBF0])) ^ 0xCE)
                                                                                               + 7913484
                                                                                               - 10304
                                                                                               * (((1667301 * (unint64_t)(1269 * (((37 * v841) ^ LOBYTE(STACK[0xBF0])) ^ 0xCEu) + 7913484)) >> 32) >> 2));
    v885 = *(unsigned __int8 *)(v5
                              + 1269 * (v882 ^ 0x7A)
                              + 7913484
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v882 ^ 0x7Au) + 7913484)) >> 32) >> 2)) ^ ((v882 ^ 0xFFFFFFB1) + 127) ^ 0xFFFFFFD6;
    v207 = *(unsigned __int8 *)(v5
                              + 1269 * (v858 ^ 0x7A)
                              + 7913484
                              - 10304
                              * (((1667301
                                               * (unint64_t)(1269 * (v858 ^ 0x7Au) + 7913484)) >> 32) >> 2)) ^ ((v858 ^ 0xFFFFFFB1) + 127) ^ 0xFFFFFFB8;
    v886 = ((v873 ^ 0xFFFFFFCD) + 127) ^ 0x35 ^ *(unsigned __int8 *)(v5
                                                                   + 1269 * (v873 ^ 6)
                                                                   + 7913484
                                                                   - 10304
                                                                   * (((1667301
                                                                                    * (unint64_t)(1269 * (v873 ^ 6u) + 7913484)) >> 32) >> 2));
    v887 = 1269 * (((LODWORD(STACK[0xC78]) ^ 0xE0) + 124) ^ 0x96) + 977130;
    v888 = (((LODWORD(STACK[0xC60]) + 1) ^ LODWORD(STACK[0xC50]) ^ 0xFFFFFFB8) + 127) ^ 0x28 ^ *(unsigned __int8 *)(v5 + 1269 * (((LOBYTE(STACK[0xC60]) + 1) ^ LOBYTE(STACK[0xC50])) ^ 0x73) + 7913484 - 10304 * (((1667301 * (unint64_t)(1269 * (((LOBYTE(STACK[0xC60]) + 1) ^ LOBYTE(STACK[0xC50])) ^ 0x73u) + 7913484)) >> 32) >> 2));
    v215 = ((v874 >> 1) | (v874 << 7)) ^ 0x52;
    v218 = 85 * (LODWORD(STACK[0xC68]) ^ 0xFFFFFFE4);
    v889 = (85 * (((v881 >> 7) | (2 * v881)) ^ 0xFFFFFFE4)) ^ 0x14;
    v238 = LODWORD(STACK[0xBF8]) ^ 0x71u;
    v217 = *(unsigned __int8 *)(v5 + v887 - 10304 * (((1667301 * (unint64_t)v887) >> 32) >> 2)) ^ 0x7Bu;
    v890 = ((v867 ^ 0xFFFFFFBA) + 127) ^ *(unsigned __int8 *)(v5
                                                            + 1269 * (v867 ^ 0x71)
                                                            + 7913484
                                                            - 10304
                                                            * (((1667301
                                                                             * (unint64_t)(1269
                                                                                                * (v867 ^ 0x71u)
                                                                                                + 7913484)) >> 32) >> 2)) ^ 0xFFFFFFF7;
    v891 = 85 * (((v879 >> 7) | (2 * v879)) ^ (2 * ((v879 >> 7) | (2 * v879))) ^ 0xFFFFFFCC);
    v892 = STACK[0xC80];
    STACK[0xB90] = v889;
    LODWORD(STACK[0xB58]) = v890;
    if ((v892 & 1) != 0)
    {
      v895 = STACK[0xB7C];
      v896 = v884;
      LODWORD(STACK[0xB88]) = v207;
      STACK[0xB40] = v883;
      STACK[0xB48] = v885;
      LODWORD(STACK[0xB68]) = v235;
      LODWORD(STACK[0xB80]) = v875;
      v14 = STACK[0x780];
      v15 = STACK[0x778];
      if ((STACK[0xC70] & 1) == 0)
      {
        v899 = v889;
        v900 = STACK[0xC90];
        v901 = ((unsigned __int16)WORD2(STACK[0xC90]) >> 8) - 29;
        v902 = (STACK[0xC90] >> 37) & 7 | (STACK[0xC90] >> 29) & 0xF8;
        v903 = 1269 * (((LODWORD(STACK[0x810]) ^ WORD1(STACK[0xC90])) - 75) ^ 0x3E) + 1958067;
        v904 = v886;
        v905 = STACK[0xC88];
        v906 = v238;
        v907 = 1269 * ((HIWORD(STACK[0xC88]) - 75) ^ 0xE9) + 4891995;
        v908 = 1269 * (((LODWORD(STACK[0x818]) ^ HIDWORD(STACK[0xC88])) - 75) ^ 0xE9) + 4891995;
        v909 = (_BYTE *)STACK[0xA08];
        *(v909 - 16) = LODWORD(STACK[0x828]) ^ HIBYTE(STACK[0xC90]);
        *(v909 - 15) = LODWORD(STACK[0x850]) ^ BYTE6(v900);
        v910 = *(_BYTE *)(v5
                        + 1269 * (v901 ^ 0xE8)
                        + 2610333
                        - 10304
                        * (((1667301 * (unint64_t)(1269 * (v901 ^ 0xE8u) + 2610333)) >> 32) >> 2))
             + (v901 ^ 0x35);
        *(v909 - 14) = LODWORD(STACK[0x844]) ^ 0x52 ^ ((v910 >> 1) | (v910 << 7));
        *(v909 - 13) = (37
                      * (v902 ^ 0xA ^ *(_BYTE *)(v5
                                               + 1269 * (v902 ^ 0x44)
                                               + 8564481
                                               - 10304
                                               * (((1667301
                                                                * (unint64_t)(1269 * (v902 ^ 0x44u) + 8564481)) >> 32) >> 2)))) ^ LODWORD(STACK[0x870]);
        *(v909 - 12) = LODWORD(STACK[0x868]) ^ BYTE3(v900);
        v911 = *(unsigned __int8 *)(v5 + v903 - 10304 * (((1667301 * (unint64_t)v903) >> 32) >> 2));
        LOBYTE(v902) = LODWORD(STACK[0x824]) ^ HIBYTE(v905);
        v912 = LODWORD(STACK[0x848]) ^ v900;
        *(v909 - 10) = LODWORD(STACK[0x858]) ^ BYTE1(v900);
        *(v909 - 9) = v912;
        *(v909 - 8) = v902;
        *(v909 - 11) = 85 * (((v911 >> 7) | (2 * v911)) ^ (2 * ((v911 >> 7) | (2 * v911))) ^ 0xCC);
        v913 = *(unsigned __int8 *)(v5 + v907 - 10304 * (((1667301 * (unint64_t)v907) >> 32) >> 2));
        *(v909 - 6) = LODWORD(STACK[0x860]) ^ BYTE5(v905);
        *(v909 - 7) = (85 * (((v913 >> 7) | (2 * v913)) ^ 0xE4)) ^ LODWORD(STACK[0x888]);
        v914 = *(unsigned __int8 *)(v5 + v908 - 10304 * (((1667301 * (unint64_t)v908) >> 32) >> 2));
        v909[14] = v888;
        v909[3] = STACK[0xB80];
        v909[2] = STACK[0xB88];
        v915 = LODWORD(STACK[0x880]) ^ BYTE3(v905);
        v916 = LODWORD(STACK[0x838]) ^ v905;
        v917 = LODWORD(STACK[0x878]) ^ WORD1(v905);
        *(v909 - 2) = LOBYTE(STACK[0x834]) ^ BYTE1(v905);
        *(v909 - 1) = v916;
        v909[12] = v904;
        v909[6] = v896;
        v909[7] = STACK[0xB40];
        v909[10] = v215;
        *v909 = v217;
        v909[15] = v899;
        *(v909 - 4) = v915;
        *(v909 - 5) = 85 * (((v914 >> 7) | (2 * v914)) ^ 0xE4);
        v909[1] = v218;
        *(v909 - 3) = v917;
        v909[9] = v890;
        v909[8] = STACK[0xB48];
        v909[11] = STACK[0xB68];
        v909[5] = v878;
        v909[13] = v891;
        v909[4] = v906;
        sub_10009A6DC();
        JUMPOUT(0x10016C7B4);
      }
      v6 = (v895 + 57233495) | 0x3040F202;
      STACK[0xB00] = v878;
      v897 = STACK[0x790];
      *(_BYTE *)(v897 + 5) = v878;
      *(_BYTE *)(v897 + 9) = v890;
      *(_BYTE *)(v897 + 4) = v238;
      *(_BYTE *)(v897 + 8) = STACK[0xB48];
      LODWORD(STACK[0xB50]) = v218;
      *(_BYTE *)(v897 + 1) = v218;
      STACK[0xB30] = v888;
      *(_BYTE *)(v897 + 14) = v888;
      *(_BYTE *)(v897 + 15) = v889;
      STACK[0xB28] = v886;
      *(_BYTE *)(v897 + 12) = v886;
      *(_BYTE *)(v897 + 3) = STACK[0xB80];
      STACK[0xB60] = v896;
      *(_BYTE *)(v897 + 6) = v896;
      LODWORD(STACK[0xB7C]) = v215;
      *(_BYTE *)(v897 + 10) = v215;
      STACK[0x978] = STACK[0x978] + 16;
      *(_BYTE *)(v897 + 11) = STACK[0xB68];
      *(_BYTE *)(v897 + 2) = STACK[0xB88];
      STACK[0xB20] = v217;
      *(_BYTE *)v897 = v217;
      STACK[0xB38] = v891;
      *(_BYTE *)(v897 + 13) = v891;
      *(_BYTE *)(v897 + 7) = STACK[0xB40];
      STACK[0x790] = v897 + 16;
      STACK[0xC68] = v238;
      LODWORD(v897) = (v238 >> 5) | (8 * v238);
      v898 = *(unsigned __int8 *)(v5
                                + 1269 * (v897 ^ 0x44)
                                + 8564481
                                - 10304
                                * (((1667301
                                                 * (unint64_t)(1269 * (v897 ^ 0x44u) + 8564481)) >> 32) >> 2));
      STACK[0xCA8] += 16;
      LODWORD(STACK[0xAF8]) = 37 * (v897 ^ v6 ^ v898 ^ 0xC);
      v7 = 1;
      v4 = 1958067;
      v11 = STACK[0x770];
      v13 = STACK[0x788];
      v8 = STACK[0x768];
      goto LABEL_2;
    }
    LODWORD(STACK[0xC70]) = 0;
    v234 = (LODWORD(STACK[0xB88]) - 906197288);
    v893 = (v878 >> 5) | (8 * v878);
    v894 = *(unsigned __int8 *)(v5 + ((v234 ^ 0x834890DB) + 1269 * (v893 ^ 0x44))
                                   % 0x2840);
    STACK[0xA08] += 16;
    LODWORD(STACK[0xC80]) = 1;
    LODWORD(STACK[0x888]) = v890;
    LODWORD(STACK[0x870]) = v875;
    LODWORD(STACK[0x868]) = v238;
    LODWORD(STACK[0x850]) = v218;
    LODWORD(STACK[0x880]) = v886;
    LODWORD(STACK[0x878]) = v891;
    LODWORD(STACK[0x858]) = v884;
    LODWORD(STACK[0x860]) = v215;
    LODWORD(STACK[0x844]) = v207;
    LODWORD(STACK[0x848]) = v883;
    LODWORD(STACK[0x828]) = v217;
    LODWORD(STACK[0x818]) = v235;
    LODWORD(STACK[0x838]) = v889;
    LODWORD(STACK[0x834]) = v888;
    LODWORD(STACK[0x810]) = 37 * (v893 ^ 0xA ^ v894);
    v239 = 37 * (v893 ^ 0xA ^ v894);
    LODWORD(STACK[0x824]) = v885;
    v211 = v885;
    v236 = v883;
    v210 = v886;
    v201 = v875;
    v216 = v884;
    v212 = v891;
    v237 = v888;
  }
}

void sub_1001B8AC8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1910742433 * ((((2 * a1) | 0x2F02C07E) - a1 + 1753128897) ^ 0xD82908DB));
  __asm { BR              X10 }
}

uint64_t sub_1001B8B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((a2 == *(_QWORD *)(a1 + 8)) ^ (v2 + 96)) & 1)
                                               * (((v2 + 73483578) & 0xFB9EFDDF) - 21571)) ^ (v2 + 7089)))
                            - 8))();
}

uint64_t sub_1001B8BE0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 112) = *(_BYTE *)a1;
  *(_QWORD *)(v3 - 111) = *(_QWORD *)(a1 + 1);
  *(_DWORD *)(v3 - 103) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v3 - 99) = *(_WORD *)(a1 + 13);
  *(_BYTE *)(v3 - 97) = *(_BYTE *)(a1 + 15);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((15194 * (v1 + 1892809311 < ((v1 + 796453690) & 0xD08757DF) + 1894702105)) ^ (v1 + 1215)))
                            - 8))();
}

uint64_t sub_1001B8C68(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v5;

  if (v3)
    v4 = *(_QWORD *)(a1 + 32) == 0;
  else
    v4 = 1;
  v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4 * v5) | (16 * v5) | v1)) - ((v1 - 21530) | 0x1100u) + 4453))();
}

uint64_t sub_1001B8CA8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL4 v11;

  v5 = *(_DWORD *)(a1 + 20);
  v6 = v5 ^ v1;
  v7 = ((v5 ^ v1) ^ (2 * ((v5 ^ v1 ^ 4) & (2 * ((v5 ^ v1) & 0x36)) ^ (v5 ^ v1) & 0x36))) & 0xF;
  *(_DWORD *)(v4 - 128) = v2 + 18880;
  v8 = (v7 ^ 0xFFFFFFF7) - 599205254 + ((v7 << ((v2 - 64) ^ 0x30)) & 0xC);
  v9 = (v8 & 0x800EE ^ 0x20800084) + (v8 ^ 0x8A4CB27B) - ((v8 ^ 0x8A4CB27B) & 0x100400EE);
  v11 = v6 != 312186826 && v9 == 1720215778;
  return (*(uint64_t (**)(void))(v3 + 8 * ((225 * v11) ^ v2)))();
}

uint64_t sub_1001B8D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unsigned __int8 *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v32 - 176) = a1;
  v33 = a3[14];
  v34 = a3[13];
  *(_QWORD *)(v32 - 136) = v29;
  v35 = *(_DWORD *)(v32 - 128);
  v36 = *(_QWORD *)(a2 + 8 * (v35 ^ 0x5F3B)) - 4;
  v37 = *(_QWORD *)(a2 + 8 * (v35 ^ 0x5236)) - 12;
  v38 = *(_QWORD *)(a2 + 8 * (v35 - 21777)) - 8;
  v39 = *(_QWORD *)(a2 + 8 * (v35 - 20583)) - 12;
  v40 = (a3[15] ^ 0x2C ^ *(unsigned __int8 *)(v38 + (a3[15] ^ 0x1ELL)) | ((*(unsigned __int8 *)(v36 + (v33 ^ 0x5F)) ^ 0xB1) << 8)) & 0xFF00FFFF | (((*(_BYTE *)(v39 + 255 - (v34 ^ 0x38u)) - 72) ^ 0xCA) << 16);
  v41 = (((*(_BYTE *)(v39 + (a3[9] ^ 0x96)) - 72) ^ 0x97) << 16) | ((*(unsigned __int8 *)(v36 + (a3[10] ^ 0xB8)) ^ 0xA9) << 8);
  v42 = ((a3[8] ^ 0xCCCCCCCC) + *(unsigned __int8 *)(v37 + (a3[8] ^ 0xE1)) + 1) ^ 3;
  *(_DWORD *)(v32 - 160) = v41;
  *(_DWORD *)(v32 - 168) = v42 << 24;
  v43 = (v42 << 24) - (v41 & 0xFFFFFF | (v42 << 24));
  v44 = -v41 & 0x8000;
  *(_DWORD *)(v32 - 188) = v44;
  *(_DWORD *)(v32 - 184) = v43;
  *(_DWORD *)(v32 - 192) = v43 & v44;
  *(_DWORD *)(v32 - 200) = -v41 & 0xFFFF7FFF;
  v45 = a3[5];
  v46 = *(unsigned __int8 *)(v36 + (a3[6] ^ 0x42));
  v47 = a3[11] ^ *(unsigned __int8 *)(v38 + (a3[11] ^ 0x72)) ^ 0x40;
  *(_DWORD *)(v32 - 208) = v47;
  *(_DWORD *)(v32 - 216) = v47 & 8;
  *(_DWORD *)(v32 - 144) = (v46 ^ 0xF0) << 8;
  LOBYTE(v46) = *(_BYTE *)(v39 + (v45 ^ 7)) - 72;
  v48 = a3[4];
  v49 = v48 ^ 0xFE;
  *(_DWORD *)(v32 - 152) = a3[7] ^ 0x89 ^ *(unsigned __int8 *)(v38 + (a3[7] ^ 0xBBLL));
  LOBYTE(v47) = (v48 ^ 0xD3) + *(_BYTE *)(v37 + (v48 ^ 0xFE)) + 1;
  v50 = a3[12];
  *(_DWORD *)(v32 - 220) = v46 ^ 0x15;
  v51 = a3[3];
  *(_DWORD *)(v32 - 232) = v47 ^ 0x5E;
  v52 = (v50 ^ 0x24) + *(unsigned __int8 *)(v37 + (v50 ^ 9)) + 1;
  LODWORD(v51) = v51 ^ 0x46 ^ *(unsigned __int8 *)(v38 + (v51 ^ 0x6C));
  *(_DWORD *)(v32 - 240) = v51 - ((2 * v51) & 0xFA) + 1154405245;
  *(_DWORD *)(v32 - 244) = ((v40 | ((v52 - ((2 * v52) & 0xFFFFFFBF)) << 24)) - 553648128) ^ 0x96;
  LODWORD(a28) = v30;
  v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * v35) - 12);
  *(_QWORD *)(v32 - 120) = v31;
  return v53(70, v50, 3784660847, v49, 137, 1421137434, 766278721, 3813393251, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1001B9134()
{
  unsigned int v0;
  char v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  _BOOL4 v12;

  v7 = ((v0 + 117) ^ 0xB) & (2 * ((v0 + 117) & 0x8B)) ^ (v0 + 117) & 0x8B;
  v8 = ((2 * ((v0 + 117) ^ 0x19)) ^ 0x24) & ((v0 + 117) ^ 0x19) ^ (2 * ((v0 + 117) ^ 0x19)) & v1;
  v9 = (v0 + 117) ^ (2
                   * ((16 * (v7 ^ v1 ^ v8 & (4 * v7))) & 0x10 ^ v7 ^ v1 ^ v8 & (4 * v7) ^ ((16
                                                                                          * (v7 ^ v1 ^ v8 & (4 * v7))) ^ 0x20) & ((4 * (v8 ^ 0x92)) & (v1 - 2) ^ 0x92 ^ ((4 * (v8 ^ 0x92)) ^ 0x48) & (v8 ^ 0x92))));
  v10 = *(_QWORD *)(v5 - 120);
  v11 = (((v9 ^ 0x19) + 66) ^ ((v9 ^ 0xFB) - 92) ^ ((v9 ^ 0x4D) + 22)) + 32;
  *(_BYTE *)(v6 + v0) = *(_BYTE *)(*(_QWORD *)(v5 - 136) + v0) + v11 - 106 * v11 + 69;
  if (v4 < 0x857C9CE != v0 + v2 < 0x857C9CE)
    v12 = v4 < 0x857C9CE;
  else
    v12 = v0 + v2 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v12 * v3) ^ *(_DWORD *)(v5 - 128))) - 12))();
}

uint64_t sub_1001B94A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;

  v30 = *(_DWORD *)(v28 - 188);
  v29 = *(_DWORD *)(v28 - 184);
  v31 = v29 ^ v30;
  v32 = v29 - v30;
  if (*(_DWORD *)(v28 - 192))
    v31 = v32;
  v33 = (*(_DWORD *)(v28 - 200) ^ *(_DWORD *)(v28 - 160) ^ v31) + *(_DWORD *)(v28 - 168);
  *(_DWORD *)(v28 - 220) = (v33 & 0x1DC53BF7 ^ *(_DWORD *)(v28 - 208) & 0xFFFFFFF7 | v33 & 0xE23AC408 ^ *(_DWORD *)(v28 - 216)) ^ 0xC9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * v26))(a1, a2, a3, 105, ((v26 + 586576488) & 0xDD0957FF) + 514067575, 9850, *(_QWORD *)(v27 + 8 * v26), a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1001B9588(uint64_t a1, uint64_t a2, unsigned int a3, char a4, int a5, int a6)
{
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v11
                                                             + 8
                                                             * (((v7
                                                                + 3
                                                                * (((v8 * (unint64_t)v9) >> 32) >> 1) == v6)
                                                               * a6) ^ v10)))(a1, a2, a5 + ((*(_BYTE *)(v12 + v6) + v6 * a4 - 109) ^ a3));
}

uint64_t sub_1001B95D0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v4 - 232) = v1 + v0 + *(_DWORD *)(v4 - 152) + *(_DWORD *)(v4 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v2 + 7200)) - 8))(30395);
}

uint64_t sub_1001B9654(int a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 == 15) * a1) ^ v2)) - 8))();
}

uint64_t sub_1001B96D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  uint64_t v36;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * ((7304 * ((a3 & 1) == ((v35 - 17375) | 0x1080) - 6096)) ^ v35)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1001B972C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 12))();
}

uint64_t sub_1001B9750(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unint64_t v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unint64_t v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  int v148;
  uint64_t (*v149)(uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  *(_QWORD *)(v40 - 168) = 0x3236244B02E53B45;
  v41 = 19 * (v37 ^ 0x173Bu);
  if (a3 == (a3 | 0xFFFFFFFE))
    v42 = 127;
  else
    v42 = 1946733895 * (a3 - (a3 | 0xFFFFFFFE));
  HIDWORD(v43) = v42 & (1946733895 * (a3 - (a3 | 0xFFFFFFFE)));
  LODWORD(v43) = 1946733895 * (a3 - (a3 | 0xFFFFFFFE));
  *(_QWORD *)(v40 - 152) = v41;
  v44 = (1811939328 * v35) | ((1470204635 * v35) >> 6);
  v45 = (1865456752 * v36) | ((-1494021689 * v36) >> 28);
  v46 = ((v41 ^ 0x74201171) * v38) | (((((v37 ^ 0x173B) + 5197) ^ 0x294A0699u) * v38) >> 11);
  v47 = v46 ^ ((v43 >> 7) - v44 - v45);
  v48 = (-35389440 * v47) | ((1214889849 * v47) >> 14);
  v49 = ((379247599 * v46) >> 2) - (v46 << 30);
  v50 = (-386711821 * v45) >> 5;
  v51 = (-1744830464 * v45) | v50;
  v52 = v49 ^ v51 ^ (((754335744 * v44) | ((-1439910951 * v44) >> 18)) - v48);
  v53 = (-969627693 * v49) >> 9;
  v54 = (495943064 * v48) | ((-1011748941 * v48) >> 29);
  v55 = (-1065353216 * v52) | ((509404545 * v52) >> 9);
  v56 = (-377487360 * v49) | v53;
  v57 = (v54 + (__PAIR64__(v50, 1518262497 * v51) >> 4) + v55) ^ v56;
  v58 = -948309097 * v57;
  v57 *= -281120032;
  v59 = ((2 * ((-1923499512 * v55) | ((-1851050175 * v55) >> 29))) & 0xEFC7D7FC)
      + (((-1923499512 * v55) | ((-1851050175 * v55) >> 29)) ^ 0xF7E3EBFE);
  v60 = ((-779091968 * v54) | ((-1870103271 * v54) >> 12)) - 136057858;
  v61 = v57 & 0x80;
  HIDWORD(v43) = v53;
  LODWORD(v43) = 1182127981 * v56;
  v62 = v43 >> 2;
  v63 = v57 & 0xFFFFFFE0 | (v58 >> 27);
  v64 = 1132573521 * (v60 - v59);
  if ((v64 & v61) != 0)
    v61 = -v61;
  v65 = v60 + v62 + v63 - 2 * v63 - v59;
  v66 = ((v61 + v64) ^ v63 & 0xFFFFFF7F) - v65 + 1798138556;
  v67 = v63 - 1463353465 * v66;
  v68 = v59 - 1463353465 * v66 + 1828664832;
  v69 = (v68 ^ 0x93589EFA) & (2 * (v68 & 0x9B1CDE02)) ^ v68 & 0x9B1CDE02;
  v70 = ((2 * (v68 ^ 0x936882FA)) ^ 0x10E8B9F0) & (v68 ^ 0x936882FA) ^ (2 * (v68 ^ 0x936882FA)) & 0x8745CF8;
  v71 = (v70 ^ 0x601C10) & (4 * v69) ^ v69;
  v72 = ((4 * (v70 ^ 0x8144408)) ^ 0x21D173E0) & (v70 ^ 0x8144408) ^ (4 * (v70 ^ 0x8144408)) & 0x8745CF8;
  v73 = (v72 ^ 0x5050E0) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x8240C18)) ^ 0x8745CF80) & (v72 ^ 0x8240C18) ^ (16 * (v72 ^ 0x8240C18)) & 0x8745CF0;
  v75 = v73 ^ 0x8745CF8 ^ (v74 ^ 0x444C00) & (v73 << 8);
  v76 = v68 ^ (2
             * ((v75 << 16) & 0x8740000 ^ v75 ^ ((v75 << 16) ^ 0x5CF80000) & (((v74 ^ 0x8301078) << 8) & 0x8740000 ^ 0x8200000 ^ (((v74 ^ 0x8301078) << 8) ^ 0x745C0000) & (v74 ^ 0x8301078))));
  *(_DWORD *)(v40 - 188) = 1463353465 * v66;
  *(_DWORD *)(v40 - 136) = v65;
  if ((v67 & 0x1000) != 0)
    v78 = -4096;
  else
    v78 = 4096;
  *(_DWORD *)(v40 - 144) = v78;
  v79 = -1176706035
      * (((v76 ^ 0x1D311293) - 1649231032) ^ ((v76 ^ 0x35DE243) - 2082583656) ^ ((v76 ^ 0x85789722) + 100351735))
      + 655046675;
  v80 = (v79 ^ 0xF5288BEA) & (2 * (v79 & 0xE62093F2)) ^ v79 & 0xE62093F2;
  v81 = ((2 * (v79 ^ 0xF5288A2E)) ^ 0x261033B8) & (v79 ^ 0xF5288A2E) ^ (2 * (v79 ^ 0xF5288A2E)) & 0x130819DC;
  v82 = (v81 ^ 0x1198) & (4 * v80) ^ v80;
  v83 = ((4 * (v81 ^ 0x11080844)) ^ 0x4C206770) & (v81 ^ 0x11080844) ^ (4 * (v81 ^ 0x11080844)) & 0x130819DC;
  v84 = (v83 ^ 0x140) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0x1308188C)) ^ 0x30819DC0) & (v83 ^ 0x1308188C) ^ (16 * (v83 ^ 0x1308188C)) & 0x130819D0;
  v86 = v84 ^ 0x130819DC ^ (v85 ^ 0x10001900) & (v84 << 8);
  v87 = (v79 ^ (2
              * ((v86 << 16) & 0x13080000 ^ v86 ^ ((v86 << 16) ^ 0x19DC0000) & (((v85 ^ 0x308001C) << 8) & 0x13080000 ^ 0x13000000 ^ (((v85 ^ 0x308001C) << 8) ^ 0x8190000) & (v85 ^ 0x308001C))))) >> 8;
  *(_DWORD *)(v40 - 128) = v76;
  v88 = 218103808
      * (((v76 ^ 0x89ACCF0D) + 154101466) ^ ((v76 ^ 0x887C92B7) + 150944612) ^ ((v76 ^ 0x9AC43A48) + 440898461))
      + 409395150;
  v89 = (v88 ^ 0xE89EA6EF) & (2 * (v88 & 0xEC000000)) ^ v88 & 0xEC000000;
  v90 = (2 * (v88 ^ 0x209EA6EF)) & 0xCC000000 ^ 0x44000005 ^ ((2 * (v88 ^ 0x209EA6EF)) ^ 0x98080920) & (v88 ^ 0x209EA6EF);
  v91 = (4 * v89) & v90 ^ v89 ^ ((v89 >> 28 << 30) | 0x6024C);
  v92 = (4 * v90) & 0xCC0786DC ^ 0xCC018489 ^ ((4 * v90) ^ 0x30181924) & v90;
  v93 = (16 * v91) & 0xCC0786D0 ^ v91 ^ ((16 * v91) ^ 0x602520) & v92;
  v94 = (16 * v92) & 0xCC0786D0 ^ 0xC07820D ^ ((16 * v92) ^ 0xC0786DD0) & v92;
  v95 = v93 ^ (v93 << 8) & 0xCC078600 ^ ((v93 << 8) ^ 0x6065200) & v94 ^ 0xC807828F;
  v96 = (v87 ^ 0xFF1DDF5E) & (v88 ^ (2
                                   * ((v95 << 16) & 0x4C070000 ^ v95 ^ ((v95 << 16) ^ 0x6DD0000) & ((v94 << 8) & 0x4C070000 ^ 0x48010000 ^ ((v94 << 8) ^ 0x7860000) & v94))) ^ 0x36A620CA) ^ v87 & 0xC5F2BD;
  v97 = ((v96 & 0xBBD54151 ^ 0x9A910140) + (v96 ^ 0x21445215) - ((v96 ^ 0x21445215) & 0xBBD54151)) ^ 0xD06B3EA6;
  v77 = (1463353465 * v66) ^ v65;
  v98 = ((1155530752
        * (((v77 ^ 0x82005A9B) + 415854575) ^ ((v77 ^ 0xC32B9868) + 1508027678) ^ ((v77 ^ 0x412BC2F3) - 605882489))) | ((869261863 * (((v77 ^ 0x445DFB6B) - 560673249) ^ ((v77 ^ 0xF265C009) + 1756165501) ^ ((v77 ^ 0xB6383B62) + 753995288)) + 230469382) >> 11))
      - 524288000;
  v99 = 1627597031 * v98;
  v100 = (-778629408 * v67) | ((1317845111 * v67) >> 27);
  v101 = v98 + v100 + (v97 ^ ((293601280 * v66) | ((-1280083421 * v66) >> 9)));
  HIDWORD(v103) = v99;
  LODWORD(v103) = v99;
  v102 = v103 >> 31;
  v104 = (-1300496384 * v101) | ((-1355338593 * v101) >> 14);
  v105 = (24898488 * v100) | ((-533758601 * v100) >> 29);
  v106 = 146411520 * v97 - (v105 + v102) + ((-2025813087 * v97) >> 20) - v104;
  v107 = (1560748032 * v104) | ((1638066233 * v104) >> 19);
  v108 = (-994051520 * v106) | ((1595080681 * v106) >> 26);
  v109 = (-1565935424 * v102) | ((109749987 * v102) >> 26);
  v110 = (v107 ^ ((-1272452096 * v105) | ((-1209202181 * v105) >> 22))) - (v109 + v108);
  v111 = (853110400 * v107) | ((1080406749 * v107) >> 25);
  v112 = (-1379860480 * v108) | ((-576541247 * v108) >> 16);
  v113 = (-1444115712 * v110) | ((-609620853 * v110) >> 24);
  v114 = v111 ^ ((-166723584 * v109) | ((-1329303711 * v109) >> 12)) ^ v112 ^ v113;
  v115 = (v113 - 822093207 * (v112 + v111) - 2 * v113 - 775218824) ^ v114;
  *(_DWORD *)(v40 - 216) = v115;
  v116 = -1175313583 * v115 - 612228514;
  v117 = (v116 ^ 0x6799920) & (2 * (v116 & 0x247DDDA2)) ^ v116 & 0x247DDDA2;
  v118 = ((2 * (v116 ^ 0x4EC99B64)) ^ 0xD5688D8C) & (v116 ^ 0x4EC99B64) ^ (2 * (v116 ^ 0x4EC99B64)) & 0x6AB446C6;
  v119 = v118 ^ 0x2A944242;
  v120 = (v118 ^ 0x200480) & (4 * v117) ^ v117;
  v121 = ((4 * v119) ^ 0xAAD11B18) & v119 ^ (4 * v119) & 0x6AB446C4;
  v122 = (v121 ^ 0x2A900200) & (16 * v120) ^ v120;
  v123 = ((16 * (v121 ^ 0x402444C6)) ^ 0xAB446C60) & (v121 ^ 0x402444C6) ^ (16 * (v121 ^ 0x402444C6)) & 0x6AB446C0;
  v124 = v122 ^ 0x6AB446C6 ^ (v123 ^ 0x2A044400) & (v122 << 8);
  v125 = v116 ^ (2
               * ((v124 << 16) & 0x6AB40000 ^ v124 ^ ((v124 << 16) ^ 0x46C60000) & (((v123 ^ 0x40B00286) << 8) & 0x6AB40000 ^ 0x4AB00000 ^ (((v123 ^ 0x40B00286) << 8) ^ 0x34460000) & (v123 ^ 0x40B00286))));
  v126 = v113
       - (((v125 ^ 0xC43ADDE5) - 1943602457) ^ ((v125 ^ 0x77209B8) + 1332620988) ^ ((v125 ^ 0xB7558473) - 11951247))
       + 1722704460;
  v127 = (v126 ^ 0x9453C4D8) & (2 * (v126 & 0xD55314E2)) ^ v126 & 0xD55314E2;
  v128 = ((2 * (v126 ^ 0x9EF1E59C)) ^ 0x9745E2FC) & (v126 ^ 0x9EF1E59C) ^ (2 * (v126 ^ 0x9EF1E59C)) & 0x4BA2F17E;
  v129 = v128 ^ 0x48A21102;
  v130 = (v128 ^ 0x300E018) & (4 * v127) ^ v127;
  v131 = ((4 * v129) ^ 0x2E8BC5F8) & v129 ^ (4 * v129) & 0x4BA2F17C;
  v132 = (v131 ^ 0xA82C160) & (16 * v130) ^ v130;
  v133 = ((16 * (v131 ^ 0x41203006)) ^ 0xBA2F17E0) & (v131 ^ 0x41203006) ^ (16 * (v131 ^ 0x41203006)) & 0x4BA2F170;
  v134 = v132 ^ 0x4BA2F17E ^ (v133 ^ 0xA221100) & (v132 << 8);
  v135 = v126 ^ (2
               * ((v134 << 16) & 0x4BA20000 ^ v134 ^ ((v134 << 16) ^ 0x717E0000) & (((v133 ^ 0x4180E01E) << 8) & 0x4BA20000 ^ 0x49020000 ^ (((v133 ^ 0x4180E01E) << 8) ^ 0x22F10000) & (v133 ^ 0x4180E01E))));
  v136 = v125 ^ 0xB7E3D8FC ^ (v114 - ((2 * v114) & 0x87FD11A4) - 1006729006);
  LODWORD(a35) = v125;
  v137 = v112
       - (((v125 ^ 0xB54E6E85) - 44938873) ^ ((v125 ^ 0x94E5ADDB) - 587625767) ^ ((v125 ^ 0x55B69370) + 497726580))
       + 1392196385;
  v138 = (v137 ^ 0xE1653BEC) & (2 * (v137 & 0xE9063C0D)) ^ v137 & 0xE9063C0D;
  v139 = ((2 * (v137 ^ 0x316D33E4)) ^ 0xB0D61FD2) & (v137 ^ 0x316D33E4) ^ (2 * (v137 ^ 0x316D33E4)) & 0xD86B0FE8;
  v140 = v139 ^ 0x48290029;
  v141 = (v139 ^ 0x80000040) & (4 * v138) ^ v138;
  v142 = ((4 * v140) ^ 0x61AC3FA4) & v140 ^ (4 * v140) & 0xD86B0FE8;
  v143 = (v142 ^ 0x40280FA0) & (16 * v141) ^ v141;
  v144 = ((16 * (v142 ^ 0x98430049)) ^ 0x86B0FE90) & (v142 ^ 0x98430049) ^ (16 * (v142 ^ 0x98430049)) & 0xD86B0FE0;
  v145 = v143 ^ 0xD86B0FE9 ^ (v144 ^ 0x80200E00) & (v143 << 8);
  v146 = v137 ^ (2
               * ((v145 << 16) & 0x586B0000 ^ v145 ^ ((v145 << 16) ^ 0xFE90000) & (((v144 ^ 0x584B0169) << 8) & 0xD86B0000 ^ 0x10600000 ^ (((v144 ^ 0x584B0169) << 8) ^ 0x6B0F0000) & (v144 ^ 0x584B0169))));
  *(_DWORD *)(v40 - 208) = v146;
  v147 = v135 ^ v146;
  *(_DWORD *)(v40 - 192) = v136;
  v148 = v136 & 0x20000000;
  *(_DWORD *)(v40 - 256) = v147;
  if ((v147 & v136 & 0x20000000) != 0)
    v148 = -v148;
  *(_DWORD *)(v40 - 200) = v148;
  v149 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8 * (v37 - 5814));
  *(_QWORD *)(v40 - 184) = v149;
  v150 = v149(1028, 3628597248);
  *(_QWORD *)(v40 - 160) = v150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((12275 * (v150 != 0)) ^ v37)) - 4))(v150, v151, v152, 0, 0, v153, 0, v154, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1001BA698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  char v24;
  int v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  int v61;
  unint64_t v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  char v153;
  unsigned int v154;
  int v155;
  _BOOL4 v156;
  BOOL v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  int v165;
  uint64_t v167;
  int v168;

  v28 = 1762612177
      * (((v25 ^ 0xED211304) + 79741617) ^ ((v25 ^ 0xB3141871) + 1526057414) ^ ((v25 ^ 0x9E67FD6B) + 2005282016))
      + 1759194213;
  v29 = *(_DWORD *)(v27 - 208);
  v30 = 143219265
      * (((v29 ^ 0xE2C1C9FF) + 451410269) ^ ((v29 ^ 0x230153C7) - 618175643) ^ ((v29 ^ 0x88C2B9E7) + 1894025541))
      + 1516947612;
  v31 = (v30 ^ 0x96AC0207) & (2 * (v30 & 0xA6AD52A7)) ^ v30 & 0xA6AD52A7;
  v32 = ((2 * (v30 ^ 0xD2F4824D)) ^ 0xE8B3A1D4) & (v30 ^ 0xD2F4824D) ^ (2 * (v30 ^ 0xD2F4824D)) & 0x7459D0EA;
  v33 = v32 ^ 0x1448502A;
  v34 = (v32 ^ 0x20118080) & (4 * v31) ^ v31;
  v35 = ((4 * v33) ^ 0xD16743A8) & v33 ^ (4 * v33) & 0x7459D0E8;
  v36 = (v35 ^ 0x504140A0) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x24189042)) ^ 0x459D0EA0) & (v35 ^ 0x24189042) ^ (16 * (v35 ^ 0x24189042)) & 0x7459D0E0;
  v38 = v36 ^ 0x7459D0EA ^ (v37 ^ 0x44190000) & (v36 << 8);
  v39 = v30 ^ (2
             * ((v38 << 16) & 0x74500000 ^ v38 ^ ((v38 << 16) ^ 0x50E00000) & (((v37 ^ 0x3040D04A) << 8) & 0x74590000 ^ 0x24000000 ^ (((v37 ^ 0x3040D04A) << 8) ^ 0x59D00000) & (v37 ^ 0x3040D04A))));
  v40 = *(_DWORD *)(v27 - 192);
  v41 = 507756111 * v40;
  v42 = v39 >> 21;
  v43 = 502429696 * v40;
  v44 = 1255278592
      * (((v29 ^ 0x19DE1C40) - 503829276) ^ ((v29 ^ 0x2A845BFD) - 761107617) ^ ((v29 ^ 0x7A586462) - 2105649982))
      - 880215608;
  v45 = (2 * (v44 & 0xF5511800)) & 0xE0021000 ^ v44 & 0xF5511800 ^ ((2 * (v44 & 0xF5511800)) | 0x10) & (v44 ^ 0x11164236);
  v46 = (2 * (v44 ^ 0x11164236)) & 0xE447500C ^ 0x24414002 ^ ((2 * (v44 ^ 0x11164236)) ^ 0xC88EB81C) & (v44 ^ 0x11164236);
  v47 = (4 * v45) & 0xE4475C0C ^ v45 ^ ((4 * v45) | 0x20) & v46;
  v48 = (4 * v46) & 0xE4475C0C ^ 0x64420C06 ^ ((4 * v46) ^ 0x911D7038) & v46;
  v49 = (16 * v47) & 0xE4475C00 ^ v47 ^ ((16 * v47) ^ 0x80) & v48;
  v50 = (16 * v48) & 0xE4475C00 ^ 0xA0021C0E ^ ((16 * v48) ^ 0x4475C0E0) & v48;
  v51 = v49 ^ 0xE4475406 ^ (v49 << 8) & 0xE4475C00 ^ ((v49 << 8) ^ 0x800) & v50;
  v52 = (v44 ^ (2
              * ((v51 << 16) & 0x64470000 ^ v51 ^ ((v51 << 16) ^ 0x5C0E0000) & ((v50 << 8) & 0xE4470000 ^ 0x20030000 ^ ((v50 << 8) ^ 0x475C0000) & v50))) ^ 0xE0E8984A) & (v42 ^ 0xFFFFF88A) ^ v42 & 0x191;
  v53 = ((v52 & 0xA42A88F8 ^ 0x42A08E8) + (v52 ^ 0xAA048011) - ((v52 ^ 0xAA048011) & 0xA42A88F8)) ^ 0x5B153797;
  v54 = v43 & 0xFFFFF800 | (v41 >> 21);
  v55 = (v28 << v28 << ((-47 * (((v25 ^ 4) - 79) ^ ((v25 ^ 0x71) - 58) ^ ((v25 ^ 0x6B) - 32)) + 101) & 0x1F ^ 0x1F)) | (v28 >> 1);
  v56 = v55
      + v54
      + (v53 ^ ((-521060352 * *(_DWORD *)(v27 - 216)) | ((-362576955 * *(_DWORD *)(v27 - 216)) >> 18)));
  v57 = (-822104267 * v54) >> 6;
  v58 = (1053032448 * v56) | ((1582436273 * v56) >> 14);
  v59 = (-738197504 * v54) | v57;
  v60 = (2004144128 * v55) | ((755464013 * v55) >> 20);
  v61 = 827258979 * v60;
  LODWORD(v62) = (__PAIR64__(v57, v59) >> 1) ^ __ROR4__(v60 + 1934622720 * v53 + ((-761125067 * v53) >> 12) + v58, 1);
  HIDWORD(v62) = v62;
  v63 = (-826771456 * v58) | ((-1038493937 * v58) >> 21);
  v64 = (-1577320448 * v59) | ((-504469377 * v59) >> 14);
  v65 = (-539860092 * (v62 >> 31)) | ((-134965023 * (v62 >> 31)) >> 30);
  v66 = -532451737 * v63;
  v67 = 460535808 * v63;
  HIDWORD(v62) = v61;
  LODWORD(v62) = v61;
  v68 = ((v62 >> 31) - v63 - v65) ^ v64;
  v69 = (-1283260416 * v65) | ((-1780239485 * v65) >> 16);
  v70 = (-1761607680 * v68) | ((2121555607 * v68) >> 8);
  v71 = (v67 & 0xFFFFF800 | (v66 >> 21)) + v69;
  v72 = v70 ^ (((-181141504 * v64) | ((-1769013939 * v64) >> 14)) + v71);
  v73 = (v70 ^ (-781254609 * v71)) - v72 - 1931153862;
  v74 = v70 - v73 - ((2 * (v70 - v73)) & 0x1E3D6B56) + 253670827;
  v75 = 1258703791 * (v73 ^ v72);
  HIDWORD(v62) = 1985392953 * (v69 - v73);
  LODWORD(v62) = HIDWORD(v62);
  v76 = v62 >> 31;
  v77 = (1479695736 * (v73 ^ v72)) | (v75 >> 29);
  v78 = ((1325137920
        * (((v74 ^ 0xB459ABF6) + 1269191690) ^ ((v74 ^ 0x11F1E213) - 301064723) ^ ((v74 ^ 0xAAB6FC4E) + 1430848434))) | ((537007039 * (((v74 ^ 0xEA884466) + 360168346) ^ ((v74 ^ 0x204E7672) - 542013042) ^ ((v74 ^ 0xC5D887BF) + 975665217)) + 1522219925) >> 14))
      - 296484864;
  v79 = (v76 ^ ((-1520628484 * v73) | ((-1453898945 * v73) >> 30))) - v77 - v78;
  v80 = (751549489 * v79) >> 28;
  v81 = (1673154186 * v78) | ((-1310906555 * v78) >> 31);
  v82 = (-860110064 * v79) | v80;
  v83 = ((-1796854569 * v77) >> 3) - (v75 >> 29 << 29);
  v84 = v82 ^ ((-402653184 * v76) | ((1440497725 * v76) >> 5));
  v82 *= -1955445927;
  v85 = (173702144 * (v84 + v83 - v81)) | ((1875023519 * (v84 + v83 - v81)) >> 22);
  v86 = (-1879048192 * v80) | (v82 >> 4);
  v87 = (1211105280 * v83) | ((601633923 * v83) >> 12);
  v88 = ((v86 ^ ((52428800 * v81) | ((-377014247 * v81) >> 11))) - v85) ^ v87;
  HIDWORD(v62) = 17 * (v82 >> 4);
  LODWORD(v62) = -1182103855 * v86;
  v89 = v62 >> 6;
  v90 = (1962210304 * v85) | ((626867517 * v85) >> 22);
  v91 = (-1149239296 * v88) | ((-516488329 * v88) >> 9);
  v92 = ((-1342177280 * v87) | ((-2004206533 * v87) >> 4)) + v89 - v90 + v91;
  v93 = (v89 - v90 + 916105881 + v91) ^ v92 ^ 0x8F44F5E2;
  v94 = v90 - (v93 - 544089113) - ((2 * (v90 - (v93 - 544089113))) & 0x68BF5DFE) - 1268797697;
  HIDWORD(a21) = v91;
  v95 = (v93 - 544089113) ^ v91;
  v96 = v93 - 544089113 + v92 - 2 * (v93 - 544089113);
  HIDWORD(v167) = v94;
  v97 = (((v94 ^ 0xBB3F2B2F) + 1153488081) ^ ((v94 ^ 0x9385595A) + 1819977382) ^ ((v94 ^ 0x9CE5DC8A) + 1662657398))
      + 132266687;
  LODWORD(v167) = v96 - ((2 * v96) & 0x40399410) - 1608726008;
  HIDWORD(v62) = 9 * v95;
  LODWORD(v62) = -177743447 * v95;
  v98 = v62 >> 5;
  v99 = (-1280828046 * v97 + 1631605875 * ((1525718458 * v97) ^ 0x80000000)) | ((1873729333
                                                                               * (((v94 ^ 0x371BC663) - 924567139) ^ ((v94 ^ 0xAAC92717) + 1429657833) ^ ((v94 ^ 0x298D4F8B) - 697126795))
                                                                               + 907633611) >> 7);
  v100 = ((1281336896
         * (((v167 ^ 0x40356263) - 1077240419) ^ ((v167 ^ 0xDC4F6121) + 598777567) ^ ((v167 ^ 0x3C66C94A) - 1013369162))) | ((1362198169 * (((v167 ^ 0xDCE6C760) + 588855456) ^ ((v167 ^ 0x7E8EE1CB) - 2123293131) ^ ((v167 ^ 0x274ECA3) - 41217187)) + 271363784) >> 26))
       + 187412992;
  v101 = ((((-805306368 * (v93 - 544089113)) | ((1683913581 * (v93 - 544089113)) >> 4)) + v99) ^ v98) - v100;
  HIDWORD(v62) = 3 * v100;
  LODWORD(v62) = 664345667 * v100;
  v102 = v62 >> 6;
  v103 = ((-1996344897 * v98) >> 6) - ((-177743447 * v95) >> 5 << 26);
  v104 = (-964905944 * v101) | ((953128581 * v101) >> 29);
  v105 = ((((976224256 * v99) | ((218743715 * v99) >> 12)) + v104) ^ v103) + v102;
  v106 = (-122546341 * v105) >> 21;
  v107 = ((-1590090253 * v104) >> (v24 & 0x14) >> (v24 & 0x14 ^ 0x14)) - 1839255552 * v104;
  v108 = (-1866803200 * v105) | v106;
  v109 = (209888941 * v102) >> 9;
  v110 = (1451229184 * v102) | v109;
  v111 = ((-671088640 * v103) | ((1431142523 * v103) >> 5)) - v110 + v108 + v107;
  v112 = (-1879048192 * v106) | ((-720848135 * v108) >> 4);
  v113 = (1234727848 * v107) | ((1228082805 * v107) >> 29);
  v114 = ((-610531481 * v111) >> 2) - (v111 << 30);
  HIDWORD(v62) = v109;
  LODWORD(v62) = -500881277 * v110;
  v115 = v114 ^ (v113 - v112 + 271030923) ^ 0x6A82FCD;
  v116 = (v113 ^ (v62 >> 1) ^ v112) + v114;
  v117 = v116 + v115 - 969889363;
  v168 = (v116 ^ -v116 ^ (v117 - (v117 ^ v116))) + v117;
  v118 = (-1610612736 * (v114 - v117)) | ((547149829 * (v114 - v117)) >> 3);
  HIDWORD(v62) = v112 - v117;
  LODWORD(v62) = 1457509443 * (v112 - v117);
  v119 = v62 >> 1;
  v120 = (v119 ^ ((-1875993856 * v117) | ((1670393499 * v117) >> 24))) + v118;
  LOBYTE(v110) = ((v119 ^ ((1670393499 * v117) >> 24)) + ((547149829 * (v114 - v117)) >> 3)) & 7;
  v121 = ((-1787671785 * v168) << v110 << (v110 ^ 7)) ^ ((-1787671785 * v168) >> 25);
  v122 = (-585867264 * (v120 - v121)) | ((-1862342493 * (v120 - v121)) >> 19);
  v123 = (-41418752 * v118) | ((-1495662671 * v118) >> 13);
  v124 = (-923926528 * v121) | ((-881793929 * v121) >> 15);
  v125 = ((-784775168 * v119) | ((-512088279 * v119) >> 21)) - v122;
  v126 = -1551077289 * v124;
  v127 = (-310046720 * v122) | ((-484517807 * v122) >> 20);
  v128 = (263746560 * (v124 ^ v123 ^ v125)) | ((-842797539 * (v124 ^ v123 ^ v125)) >> 22);
  v129 = (729808896 * v124) | ((-1551077289 * v124) >> 9);
  v130 = 566505735 * v129;
  v131 = ((1098907648 * v123) | ((2133063299 * v123) >> 9)) + v129 - v127 - v128;
  v132 = (1826619392 * v127) | ((190958439 * v127) >> 11);
  v133 = ((-632061952 * v128) | ((2098312359 * v128) >> 17))
       - 2 * (((-632061952 * v128) | ((2098312359 * v128) >> 17)) & 0x56D18697 ^ ((2098312359 * v128) >> 17) & 0x12)
       - 690911611;
  v134 = v133 ^ (v132 - ((2 * v132) & 0xADA30D0A) - 690911611);
  v135 = ((-132159632 * v131) | ((-1350437257 * v131) >> 28))
       - 2 * (((-132159632 * v131) & 0x76E4E30 | ((-1350437257 * v131) >> 28) & 0x76E4E3D) ^ (-132159632 * v131) & 0x10)
       - 2022814163;
  v136 = ((v130 >> 3) - (v126 >> 9 << 29) - v132 + (v133 ^ 0x292E797A) + 1) ^ v135;
  v137 = (((v136 ^ 0xB4C17E06) + 2017500808) ^ ((v136 ^ 0x6F412538) - 1547647558) ^ ((v136 ^ 0x5CEE1513) - 1871710829))
       + 1291095179 * ((33709095 * v134 - ((67418190 * v134) & 0xEDC9C5A) - 2022814163) ^ v135)
       - 206986701;
  v138 = (v137 ^ 0xC1E452CE) & (2 * (v137 & 0xE5F64208)) ^ v137 & 0xE5F64208;
  v139 = ((2 * (v137 ^ 0xC0E8D2DE)) ^ 0x4A3D21AC) & (v137 ^ 0xC0E8D2DE) ^ (2 * (v137 ^ 0xC0E8D2DE)) & 0x251E90D6;
  v140 = (v139 ^ 0x180000) & (4 * v138) ^ v138;
  v141 = ((4 * (v139 ^ 0x25029052)) ^ 0x947A4358) & (v139 ^ 0x25029052) ^ (4 * (v139 ^ 0x25029052)) & 0x251E90D4;
  v142 = (v141 ^ 0x41A0040) & (16 * v140) ^ v140;
  v143 = ((16 * (v141 ^ 0x21049086)) ^ 0x51E90D60) & (v141 ^ 0x21049086) ^ (16 * (v141 ^ 0x21049086)) & 0x251E90D0;
  v144 = v142 ^ 0x251E90D6 ^ (v143 ^ 0x1080000) & (v142 << 8);
  v145 = v137 ^ (2
               * ((v144 << 16) & 0x251E0000 ^ v144 ^ ((v144 << 16) ^ 0x10D60000) & (((v143 ^ 0x24169096) << 8) & 0x251E0000 ^ 0x210E0000 ^ (((v143 ^ 0x24169096) << 8) ^ 0x1E900000) & (v143 ^ 0x24169096))));
  v146 = (*(_DWORD *)(v27 - 240) ^ v145 ^ 0x16F5E8F2 ^ v26 ^ 0x87E7C92A) - 13493756;
  v147 = ((2 * (v146 ^ 0xA27B98FD)) ^ 0xFBB72D0) & (v146 ^ 0xA27B98FD) ^ (2 * (v146 ^ 0xA27B98FD)) & 0x7DDB968;
  v148 = 4 * (v147 ^ 0x448928);
  v149 = (v148 ^ 0x1F76E5A0) & (v147 ^ 0x448928);
  v150 = v148 & 0x7DDB968;
  v151 = (v146 ^ 0xA13799D5) & (2 * (v146 & 0xA5A62195)) ^ v146 & 0xA5A62195;
  v152 = (v146 ^ (2
                * ((v150 ^ 0x754A120 ^ v149) & (16 * ((v147 ^ 0x7990040) & (4 * v151) ^ v151)) ^ (v147 ^ 0x7990040) & (4 * v151) ^ v151)) ^ 0xA7362195)
       + *(_DWORD *)(v27 - 244);
  v153 = (v152 - ((2 * v152) & 0xD0) - 24) | 1;
  v154 = (-113 * v153);
  if (v153 >= 0)
    LOBYTE(v155) = v153;
  else
    v155 = -v153;
  v156 = v155 <= v154;
  v157 = ((-113 * v153 + (_BYTE)v155) & 0xFEu) > v154;
  v158 = (((v135 ^ 0xCCF2BF6D) + 856506515) ^ ((v135 ^ 0xDE39D1AD) + 566636115) ^ ((v135 ^ 0x95A520ED) + 1784340243))
       - (((v145 ^ 0xC221C937) + 724295227) ^ ((v145 ^ 0x6EF76BB2) - 2013430592) ^ ((v145 ^ 0x331C121) - 365177299))
       - 637641739;
  v159 = (v158 ^ 0xF61C66E3) & (2 * (v158 & 0xF45D66E2)) ^ v158 & 0xF45D66E2;
  v160 = ((2 * (v158 ^ 0x3E362323)) ^ 0x94D68B82) & (v158 ^ 0x3E362323) ^ (2 * (v158 ^ 0x3E362323)) & 0xCA6B45C0;
  v161 = (v160 ^ 0x80420180) & (4 * v159) ^ v159;
  v162 = ((4 * (v160 ^ 0x4A294441)) ^ 0x29AD1704) & (v160 ^ 0x4A294441) ^ (4 * (v160 ^ 0x4A294441)) & 0xCA6B45C0;
  v163 = (v162 ^ 0x8290500) & (16 * v161) ^ v161 ^ 0xCA6B45C1 ^ (((16 * (v162 ^ 0xC24240C1)) ^ 0xA6B45C10) & (v162 ^ 0xC24240C1) ^ (16 * (v162 ^ 0xC24240C1)) & 0xCA6B45C0 ^ 0x82204400) & (((v162 ^ 0x8290500) & (16 * v161) ^ v161) << 8);
  v164 = v157;
  if (v153 >= 0)
    v164 = v156;
  v165 = v164 ^ 1;
  if (v155 != 1)
    v165 = 0;
  LODWORD(a24) = v73 >> 8;
  LODWORD(a23) = v73 ^ v72;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v27 - 120) + 8 * ((17668 * v165) ^ v26)) - 12))((v163 << 16) & 0x4A6B0000, 1248526336, (v163 << 16) ^ 0x45C10000, *(_QWORD *)(v27 - 120), *(_QWORD *)(v27 - 160), 1077515280, 3662905344, 3026169599, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           v167,
           a23,
           a24);
}

uint64_t sub_1001BBB2C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  char v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v12 = (a3 + v8) * v5;
  v13 = v11 ^ v9 ^ v3 ^ v10;
  v14 = v13 ^ *(_DWORD *)(v7 + 4 * (((v5 + v12) ^ v6) ^ 0x98u));
  *(_DWORD *)(a2 + 4 * v12) = v13 ^ *(_DWORD *)(v7
                                                                 + 4
                                                                 * ((v12 ^ v6) ^ (v4 - 5288)));
  *(_DWORD *)(a2 + 4 * ((v5 + v12) & 0xFE)) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((17788 * (a3 != 254)) ^ v4)) - 12))();
}

uint64_t sub_1001BBBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  char v6;
  char v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;

  *(_DWORD *)(a5 + 4 * (v11 * v6)) = v13 ^ v10 ^ v5 ^ v12 ^ *(_DWORD *)(v8
                                                                                         + 4
                                                                                         * (((v11 * v6) ^ v7) ^ 0x98u));
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (int)((120 * (v11 + 1 == v9 + 256)) ^ v14)) - (v14 ^ 0x1534)))();
}

uint64_t sub_1001BBC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v7;
  _BOOL4 v8;

  v7 = 95 * (v4 ^ 0x404Cu);
  v8 = (*(uint64_t (**)(uint64_t))(v5 - 184))(1032) != 0;
  *(_QWORD *)(v5 - 152) = v7;
  return (*(uint64_t (**)(void))(a4 + 8 * (int)((v8 * ((v4 - 12018) ^ 0x17 ^ v7)) ^ v4)))();
}

uint64_t sub_1001BBC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  unsigned int v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v51 = (((v44 ^ 0xB564E1B4) + 2045051190) ^ ((v44 ^ 0x14C0F7D0) - 666822830) ^ ((v44 ^ 0x26CA5849) - 364136247))
      - (((a27 ^ 0x718495ED) - 1735490847) ^ ((a27 ^ 0xC8DE09FA) + 567549688) ^ ((a27 ^ 0x16BDFFB3) - 4724545))
      + 1409709749;
  v52 = ((2 * (v51 ^ 0x19DCDD51)) ^ 0x7E572432) & (v51 ^ 0x19DCDD51) ^ (2 * (v51 ^ 0x19DCDD51)) & 0xBF2B9218;
  v53 = ((2 * ((v48 + 1316395618) ^ 0x1075CFB4)) ^ 0x2DD1C62) & ((v48 + 1316395618) ^ 0x1075CFB4) ^ (2 * ((v48 + 1316395618) ^ 0x1075CFB4)) & 0x816E8E30;
  v54 = 4 * (v53 ^ 0x81228211);
  v55 = ((4 * (v52 ^ 0x81289209)) ^ 0xFCAE4864) & (v52 ^ 0x81289209) ^ (4 * (v52 ^ 0x81289209)) & 0xBF2B9218;
  v56 = ((v48 + 1316395618) ^ 0x10534DB4) & (2 * ((v48 + 1316395618) & 0x911B4185)) ^ (v48 + 1316395618) & 0x911B4185;
  v57 = (v54 ^ 0x5BA38C4) & (v53 ^ 0x81228211);
  v58 = v54 & 0x816E8E30;
  v59 = (v51 ^ 0x14F64F41) & (2 * (v51 & 0xA6F74F48)) ^ v51 & 0xA6F74F48;
  v60 = v57 ^ v58;
  v61 = ((16 * (v55 ^ 0x3019219)) ^ 0xF2B92190) & (v55 ^ 0x3019219) ^ (16 * (v55 ^ 0x3019219)) & 0xBF2B9210;
  v62 = (v53 ^ 0x4C0C20) & (4 * v56) ^ v56 ^ 0x816E8E31 ^ (v60 ^ 0x12A0800) & (16 * ((v53 ^ 0x4C0C20) & (4 * v56) ^ v56));
  v63 = (v55 ^ 0xBC2A0000) & (16 * ((v52 ^ 0x3E030000) & (4 * v59) ^ v59)) ^ (v52 ^ 0x3E030000) & (4 * v59) ^ v59;
  v64 = (16 * (v60 ^ 0x80448631)) & 0x816E8E30 ^ 0x81060C21 ^ ((16 * (v60 ^ 0x80448631)) ^ 0x16E8E310) & (v60 ^ 0x80448631);
  v65 = v63 ^ 0xBF2B9219 ^ (v61 ^ 0xB2290000) & (v63 << 8);
  v66 = (v62 << 8) & 0x816E8E00 ^ v62 ^ ((v62 << 8) ^ 0x6E8E3100) & v64;
  v67 = *(_DWORD *)(v50 - 232) ^ 0x2B058157;
  v68 = a44 ^ *(_DWORD *)(v50 - 136) ^ *(_DWORD *)(v50 - 128);
  v69 = *(_DWORD *)(v50 - 256) ^ 0x8950D5C1;
  LODWORD(v74) = HIBYTE(*(_DWORD *)(v50 - 188));
  *(_DWORD *)(v50 - 256) = v68;
  HIDWORD(v72) = v68 ^ 0x7F7C562B;
  HIDWORD(a16) = *(_DWORD *)(v50 - 192) & 0xDFFFFFFF;
  LODWORD(v71) = *(_DWORD *)(v50 - 200) + v69;
  LODWORD(v72) = (a31 - ((2 * a31) & 0x1E3D6B56) + 253670827) ^ v45 ^ v46;
  HIDWORD(v73) = HIBYTE(HIDWORD(a32));
  *(_DWORD *)(v50 - 136) = HIDWORD(a30) ^ a32 ^ v47 ^ a29;
  HIDWORD(v71) = v51 ^ (2
                      * ((v65 << 16) & 0x3F2B0000 ^ v65 ^ ((v65 << 16) ^ 0x12190000) & (((v61 ^ 0xD029209) << 8) & 0x3F2B0000 ^ 0x14290000 ^ (((v61 ^ 0xD029209) << 8) ^ 0x2B920000) & (v61 ^ 0xD029209)))) ^ 0x2997B4E8;
  HIDWORD(v74) = HIDWORD(a31) ^ a28;
  LODWORD(v73) = (v48 + 1316395618) ^ (2
                                     * ((v66 << 16) & 0x16E0000 ^ v66 ^ ((v66 << 16) ^ 0xE310000) & ((v64 << 8) & 0x16E0000 ^ 0x1600000 ^ ((v64 << 8) ^ 0x6E8E0000) & v64)));
  *(_QWORD *)(v50 - 200) = a1;
  LODWORD(a21) = v67;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 120) + 8 * (v49 + 12256)))(2454257744, 604142720, 3643670336, 641859728, 2416541504, 1689779456, 604208384, 1263534080, a9, a10, a11, a12, a13, a14, a15, a16, v71, v72, v73,
           v74,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1001BC168()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 - 120) + 8 * (((v1 == 0) * v2) ^ v0)))();
}

uint64_t sub_1001BC228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  int v27;
  char v28;
  uint64_t v29;
  int v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unsigned int v36;
  int v37;
  _BOOL4 v38;
  _BOOL4 v39;
  BOOL v40;
  int v41;
  uint64_t (*v42)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t);

  v30 = *(_DWORD *)(v29 - 240);
  v31 = (v30 & 0x40) + (v30 & 0x52 ^ 0x5B) - ((v30 & 0x52 ^ 0x5B) & 0x48) - 92;
  v32 = v28 & (v30 ^ 0x7D) ^ v30 & 0x17;
  v33 = ((2 * ((v28 ^ 0xA0) & 0xAC ^ 0x20)) | 0x6C) - ((v28 ^ 0xA0) & 0xAC ^ 0x20) - 54;
  v34 = (((v28 ^ 0xA0) & 0x52 ^ (((v27 - 96) ^ v31) + (v31 & 0x51 ^ 0x18) - (((v27 - 96) ^ v31) & 0x50)) ^ 0xCB | (((2 * (v30 & 0xAC ^ 0x2C)) | 0xCA) - (v30 & 0xAC ^ 0x2C) + 27) ^ 0x1D ^ ((v33 & 0xDA ^ 0x4B | v33 & 0x24) - 1))
       + ((2 * (v32 - (v32 & 0xF3) + (v32 & 0xF3 ^ 0xF3))) ^ 0xCC)) ^ 0x3F;
  v35 = 29 * v34;
  v36 = (29 * v34);
  if (v34 >= 0)
    LOBYTE(v37) = v34;
  else
    v37 = -v34;
  v38 = v36 > (v35 - v37);
  v39 = v36 < (v35 + v37);
  if (v34 < 0)
    v38 = v39;
  v40 = v37 >= 2u;
  v41 = !v38;
  if (v40)
    v41 = 0;
  v42 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v29 - 120) + 8 * (v27 ^ (8 * v41)))
                                                                                           - 12);
  return v42(v42, a27, a3, a4, a5, *(_QWORD *)(v29 - 200), a7);
}

uint64_t sub_1001BC49C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v12 = (v2 + v4) * v3;
  v13 = *(_DWORD *)(v7 + 4 * (((v3 + v12) ^ v6) ^ 0xAEu));
  v14 = v11 ^ a2 ^ v10;
  *(_DWORD *)(a1 + 4 * v12) = v14 ^ (53 * (v8 ^ 0x1FF8)) ^ 0x6CEA3174 ^ *(_DWORD *)(v7 + 4 * ((v12 ^ v6) ^ 0xAEu));
  *(_DWORD *)(a1 + 4 * ((v3 + v12) & 0xFE)) = v14 ^ v5 ^ v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((20301 * (v2 == 254)) ^ v8)) - 12))();
}

uint64_t sub_1001BC530@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;

  *(_DWORD *)(a1 + 4 * (v8 * v3)) = v11 ^ a2 ^ v5 ^ v10 ^ *(_DWORD *)(v7
                                                                                       + 4
                                                                                       * (((v8 * v3) ^ v6) & ((v2 ^ 0x5EA4) - 16228) ^ 0xAEu));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((20293 * (v8 + 1 == v4 + 256)) ^ v2)) - 12))();
}

uint64_t sub_1001BC598()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  *(_QWORD *)(v2 - 152) = v1 ^ 0x5112u;
  v3 = *(uint64_t (**)(void))(v0
                           + 8
                           * ((((((*(uint64_t (**)(uint64_t))(v2 - 184))(1032) == 0) ^ v1) & 1)
                             * (((v1 - 14679) | 0x2003) ^ 0x20AF)) ^ v1));
  return v3();
}

uint64_t sub_1001BC608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unint64_t v25;

  v21 = *(_DWORD *)(v20 - 256);
  v22 = a19 & 0xD5E96777 ^ 0xD1890605 ^ (a18 ^ 0x2A169888) & (v21 ^ 0x64EB980D);
  v23 = ((2 * v22) & 0x817F493A) - v22 + 1061182306;
  v24 = (a18 ^ 0x887577C2) & (v21 ^ 0x9B1467F2) ^ a19 & 0x887577C2;
  HIDWORD(v25) = *(_DWORD *)(v20 - 136);
  LODWORD(v25) = HIDWORD(v25);
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v20 - 120) + 8 * v19) - 8))(v23 ^ ((v24 & 0x89D69F9C ^ 0x89C28D9C) + (v24 ^ 0x143240) - ((v24 ^ 0x143240) & 0x89D69F9C)) ^ 0x8A4D3E8F, 6289, (v25 >> 23));
}

uint64_t sub_1001BC790(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unint64_t v24;

  v23 = (((v20 + 321) | v10) + v11) & v8;
  LODWORD(v24) = a3 ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(a8 + 8 * v12) + 4 * (v22 ^ v21 ^ v17 ^ v23 ^ 0x1E) - 4) ^ v22 ^ v21 ^ v17 ^ v23 ^ v13, 23) ^ v14;
  HIDWORD(v24) = v24;
  *(_DWORD *)(v19 + 4 * v23) = a1 ^ ((v24 >> 9) - (v15 & (2 * (v24 >> 9))) + v16);
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * (((v9 == 0) * a2) ^ v20)) - 8))();
}

uint64_t sub_1001BC808()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v3 = 47 * (v0 ^ 0x390Fu);
  *(_QWORD *)(v2 - 152) = v3;
  v4 = (v3 - 4449) | 0x4848;
  v5 = (*(uint64_t (**)(uint64_t))(v2 - 184))(1028) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v4 ^ 0x485A) * v5) ^ v0)) - 12))();
}

uint64_t sub_1001BC878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,int a32)
{
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;

  *(_QWORD *)(v34 - 144) = v32;
  HIDWORD(v35) = a31;
  LODWORD(v35) = a31;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v34 - 120) + 8 * v33) - 8))(*(_DWORD *)(v34 - 128) ^ a32 ^ 0x8B41C738, 197, (v35 >> 3));
}

uint64_t sub_1001BC958(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned __int8 v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  int v19;
  unint64_t v20;

  LODWORD(v20) = a3 ^ __ROR4__(v13+ *(_DWORD *)(*(_QWORD *)(a7 + 8 * v12)+ 4* (((v18 + v8 - 2 * (v8 & v18)) ^ v10)- (v11 & (2 * ((v18 + v8 - 2 * (v8 & v18)) ^ v10)))+ 232)- 4), 3) ^ v14;
  HIDWORD(v20) = v20;
  *(_DWORD *)(a8 + 4 * v8) = a1 ^ ((v20 >> 29) - (v15 & (2 * (v20 >> 29))) + v16);
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (((v9 == 0) * a2) ^ v19)) - 8))();
}

uint64_t sub_1001BC9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  *(_QWORD *)(v10 - 152) = (v8 - 5395) ^ 0x354Eu;
  *(_QWORD *)(v10 - 128) = a8;
  v11 = (*(uint64_t (**)(uint64_t))(v10 - 184))(1028) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((32465 * ((v11 ^ (v8 - 19)) & 1)) ^ v8)) - 12))();
}

uint64_t sub_1001BCA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33,uint64_t a34,uint64_t a35,uint64_t a36,unsigned int a37)
{
  char v37;
  int v38;
  uint64_t v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned __int8 v44;
  _BOOL4 v45;
  _BOOL4 v46;
  int v47;

  v40 = (char)((*(_BYTE *)(v39 - 244) + 115 + ((((v38 - 82) & 0xFB ^ 0x9A) + (((v37 ^ 0x7F) + 115) ^ 0x62)) ^ 0x62)) & 0xFE ^ (((v38 - 70) & 0xEF) + 94));
  v41 = (-65
                        * ((*(_BYTE *)(v39 - 244)
                          + 115
                          + ((((v38 - 82) & 0xFB ^ 0x9A) + (((v37 ^ 0x7F) + 115) ^ 0x62)) ^ 0x62)) & 0xFE ^ (((v38 - 70) & 0xEF) + 94)));
  if (v40 >= 0)
    LOBYTE(v42) = (*(_BYTE *)(v39 - 244) + 115 + ((((v38 - 82) & 0xFB ^ 0x9A) + (((v37 ^ 0x7F) + 115) ^ 0x62)) ^ 0x62)) & 0xFE ^ (((v38 - 70) & 0xEF) + 94);
  else
    v42 = -v40;
  v43 = v42;
  v44 = v42
      - 65
      * ((*(_BYTE *)(v39 - 244) + 115 + ((((v38 - 82) & 0xFB ^ 0x9A) + (((v37 ^ 0x7F) + 115) ^ 0x62)) ^ 0x62)) & 0xFE ^ (((v38 - 70) & 0xEF) + 94));
  v45 = v42 <= v41;
  v46 = v41 < v44;
  if (v40 >= 0)
    v46 = v45;
  v47 = !v46;
  if (v43 != 1)
    v47 = 0;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v39 - 120) + 8 * ((3287 * v47) ^ v38)) - 12))(a33, a2, a3, a1, a37, a23, a29, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1001BCB80@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v12 = (v7 + v5) * a5;
  v13 = ((a5 + v12) ^ v10);
  v14 = *(_DWORD *)(v9 + 4 * (v13 ^ (((v8 + 5479) | 2) - 14665)));
  v15 = a3 ^ a2 ^ v6 ^ a4;
  *(_DWORD *)(a1 + 4 * ((v7 + v5) * a5)) = v15 ^ (v12 ^ v10) ^ *(_DWORD *)(v9 + 4 * ((v12 ^ v10) ^ 9u));
  *(_DWORD *)(a1 + 4 * ((a5 + v12) & 0xFE)) = v15 ^ v13 ^ v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((2817 * (v7 != 254)) ^ v8)) - 12))();
}

uint64_t sub_1001BCC14@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, char a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;

  *(_DWORD *)(a1 + 4 * (v9 * a5)) = a3 ^ a2 ^ (v6 - 2354) ^ a4 ^ ((v7 - 5015) | 0x2900) ^ ((v9 * a5) ^ v10) ^ *(_DWORD *)(v8 + 4 * (((v9 * a5) ^ v10) ^ 9u));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((2006 * (v9 + 1 != v5 + 256)) ^ v7)) - 12))();
}

uint64_t sub_1001BCC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 - 152) = (v4 - 10209);
  *(_QWORD *)(v6 - 136) = a4;
  v7 = (*(uint64_t (**)(uint64_t))(v6 - 184))(1028);
  *(_QWORD *)(v6 - 168) = v7 + 0x3236244B02E53B45;
  *(_QWORD *)(v6 - 256) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((v4 ^ (v7 == 0)) & 1) == 0) * (v4 + 9101)) ^ v4)) - 12))();
}

uint64_t sub_1001BCD0C()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 232) ^= 0xE8u;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 - 120) + 8 * (v0 ^ 0xF3E)))();
}

uint64_t sub_1001BCDD4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  unsigned __int8 v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  unsigned int v14;

  v14 = *(_DWORD *)(*(_QWORD *)(a1 + 8 * v6) + 4 * (v12 ^ (v3 ^ v13) ^ v5) - 4) + v7;
  *(_DWORD *)(a2 + 4 * v3) = v8 ^ v14 ^ (v14 >> 7) ^ (v14 >> 4) ^ v9;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v4 == 0) * v10) ^ a3)))();
}

uint64_t sub_1001BCE2C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (v1 - 1607);
  v4 = *(_QWORD *)(v0
                 + 8
                 * ((((*(uint64_t (**)(uint64_t))(v2 - 184))(1032) == 0) * ((v1 + 1336) ^ 0x1C98)) ^ v1));
  *(_QWORD *)(v2 - 152) = v3;
  return ((uint64_t (*)(void))(v4 - v3 + 4461))();
}

uint64_t sub_1001BCE88()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 - 120) + 8 * v0) - 8))(2149289195);
}

uint64_t sub_1001BCF88@<X0>(int a1@<W0>, uint64_t a2@<X4>, int a3@<W5>, uint64_t a4@<X6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;

  v24 = *(_DWORD *)(*(_QWORD *)(a2 + 8 * v9) + 4 * (v6 ^ a6 ^ v15 ^ v8 ^ (a1 * v7))) ^ 0x1A92B9F9;
  v25 = (((4 * v24 + 927537504) ^ v24) - 718938222 - ((2 * ((4 * v24 + 927537504) ^ v24)) & 0xAA4BBF24)) ^ v17;
  v26 = (v25 + 1813416385 - (v11 & (2 * v25))) ^ v22;
  v27 = (v26 + v10 - (v20 & (2 * v26))) ^ v19;
  v28 = (v27 + a5 - (v21 & (2 * v27))) ^ v23;
  *(_DWORD *)(a4 + 4 * (a1 * v7)) = v12 ^ (v28 + v18 - (a3 & (2 * v28)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * (((2 * (a1 & 1) + (a1 ^ 1u) >= 0x801B8DEB) * v13) ^ v14)) - 8))();
}

uint64_t sub_1001BD064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  uint64_t v37;
  BOOL v38;

  *(_QWORD *)(v37 - 208) = a7;
  v38 = (*(uint64_t (**)(uint64_t))(v37 - 184))(1032) == 0;
  *(_QWORD *)(v37 - 152) = a36 ^ 0x6A1u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v36 + 8 * ((19147 * ((v38 ^ a36 ^ 0xA1) & 1)) ^ a36))
                            - (a36 ^ 0x5443u)
                            + 17295))();
}

uint64_t sub_1001BD0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  int v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v24 - 120) + 8 * v23) - 4))(2335506418, 4006198052, 144384622, 473193619, (v23 - 16199), *(_DWORD *)(v24 - 192) ^ a23 ^ a18, 58109568, 53);
}

uint64_t sub_1001BD2DC(int a1, int a2, int a3, unsigned int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;

  v22 = (v11 ^ v13) & (v8 + 133) ^ a1 ^ (v9 - ((v15 | ~((v11 ^ v13) & v8)) + ((v11 ^ v13) & v8 | v14)));
  v23 = ((a2 | (2 * v22)) - v22 + a3) ^ v10;
  v24 = *(_DWORD *)(*(_QWORD *)(v20 + 8 * a5) + 4 * (v23 ^ a4) - 8);
  *(_DWORD *)(v21 + 4 * v11) = a6 ^ v23 ^ a7 ^ (v24 + v17 - (v19 & (2 * v24)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * (((v12 == 0) * a8) ^ v16)) - 4))();
}

uint64_t sub_1001BD368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *(_QWORD *)(v33 + 8 * a8);
  *(_DWORD *)(v35 - 192) = a33 + 1787387904;
  *(_QWORD *)(v35 - 184) = v34;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 - 4))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1001BD548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  unsigned __int8 v52;
  uint64_t v53;
  int v54;
  char v55;
  uint64_t v56;
  unsigned __int8 v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  char v78;
  char v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  int v183;
  char v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  char v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  int v248;
  int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unint64_t v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  int v365;
  int v366;
  unsigned int v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  int v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  unsigned int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  int v428;
  unsigned int v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  int v440;
  int v441;
  unsigned int v442;
  int v443;
  int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  int v459;
  int v460;
  int v461;
  unsigned int v462;
  uint64_t v463;
  unsigned int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  unsigned int v473;
  int v474;
  unsigned int v475;
  int v476;
  int v477;
  unsigned int v478;
  int v479;
  int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  int v484;
  unsigned int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  uint64_t v491;
  int v492;
  int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  int v505;
  unsigned int v506;
  int v507;
  unsigned int v508;
  int v509;
  unsigned int v510;
  unsigned int v511;
  unsigned int v512;
  unsigned int v513;
  unsigned int v514;
  unsigned int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  int v523;
  unsigned int v524;
  int v525;
  unsigned int v526;
  unsigned int v527;
  int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  int v532;
  unsigned int v533;
  int v534;
  int v535;
  unsigned int v536;
  unsigned int v537;
  int v538;
  int v539;
  int v540;
  unsigned int v541;
  int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  int v547;
  int v548;
  unsigned int v549;
  int v550;
  int v551;
  unsigned int v552;
  unsigned int v553;
  unint64_t v554;
  int v555;
  int v556;
  unsigned int v557;
  unsigned int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  unsigned int v563;
  int v564;
  unsigned int v565;
  int v566;
  unsigned int v567;
  int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  int v573;
  int v574;
  int v575;
  unsigned int v576;
  int v577;
  int v578;
  int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  unsigned int v595;
  unsigned int v596;
  int v597;
  int v598;
  unsigned int v599;
  int v600;
  int v601;
  int v602;
  unsigned int v603;
  unsigned int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  unsigned int v609;
  int v610;
  int v611;
  int v612;
  unsigned int v613;
  unsigned int v614;
  int v615;
  unsigned int v616;
  int v617;
  int v618;
  unsigned int v619;
  int v620;
  int v621;
  unsigned int v622;
  int v623;
  unsigned int v624;
  int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  unsigned int v629;
  uint64_t v630;
  int v631;
  unsigned int v632;
  uint64_t v633;
  unsigned int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  int v640;
  int v641;
  int v642;
  int v643;
  int v644;
  int v645;
  int v646;
  uint64_t v647;
  int v648;
  int v649;
  unsigned int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  unsigned int v654;
  int v655;
  unsigned int v656;
  unsigned int v657;
  int v658;
  int v659;
  unsigned int v660;
  char *v661;
  unsigned int v662;
  char *v663;
  unsigned int v664;
  char v665;
  unsigned int v666;
  uint64_t v667;
  uint64_t v668;
  unsigned int v669;
  int v670;
  int v671;
  int v672;
  unsigned int v673;
  int v674;
  int v675;
  int v676;
  uint64_t v677;
  int v678;
  int v679;
  unsigned int v680;
  unsigned int v681;
  unsigned int v682;
  int v683;
  unsigned int v684;
  unsigned int v685;
  int v686;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  char v702;
  uint64_t v703;

  v48 = HIDWORD(a14) & 0x2E2337F;
  v49 = (v45 - 550249909);
  v50 = (v45 - 550249901);
  *(_QWORD *)(v46 - 216) = v50;
  LODWORD(v50) = *(unsigned __int8 *)(a45 + v50);
  *(_QWORD *)(v46 - 152) = v48;
  LODWORD(v48) = v45 * (v48 - 8);
  LODWORD(v50) = v48 + v50 - 98;
  v703 = (v45 - 550249906);
  v51 = v45;
  v52 = v48 + *(_BYTE *)(a45 + v703);
  v53 = (v45 - 550249905);
  *(_QWORD *)(v46 - 232) = v53;
  v54 = *(unsigned __int8 *)(a41 + (v50 ^ 0xCBLL));
  v52 -= 111;
  v55 = *(_BYTE *)(a40 + (v52 ^ 0x4DLL));
  LODWORD(v53) = v48 + *(unsigned __int8 *)(a45 + v53) - 6;
  v56 = (v49 + 7);
  *(_QWORD *)(v46 - 240) = v56;
  LODWORD(v50) = v54 + (v50 ^ 0xE6);
  v696 = (v49 + 9);
  v57 = v55 ^ v52;
  LOBYTE(v54) = (v48 + *(_BYTE *)(a45 + v56) + 53) ^ 0xB1 ^ *(_BYTE *)(a40
                                                                     + ((v48
                                                                                        + *(_BYTE *)(a45 + v56)
                                                                                        + 53) ^ 0x29));
  v58 = v51;
  v59 = 2 * (v51 & 0xDF33DA4B);
  LODWORD(v56) = v59 & (v51 ^ 0x9F33D162) ^ v51 & 0xDF33DA4B;
  v60 = v51 & 0xDF33DA4B;
  v61 = ((2 * (v51 ^ 0xA9304164)) ^ 0xEC07365E) & (v51 ^ 0xA9304164) ^ (2 * (v51 ^ 0xA9304164)) & 0x76039B2E;
  v62 = v51 ^ (2
             * (((4 * (v61 ^ 0x12008921)) & 0x76039B2C ^ ((4 * (v61 ^ 0x12008921)) ^ 0x580E6CB0) & (v61 ^ 0x12008921) ^ 0x20) & (16 * ((v61 ^ 0x6603120C) & (4 * v56) ^ v56)) ^ (v61 ^ 0x6603120C) & (4 * v56) ^ v56));
  v698 = (v49 + 10);
  v699 = (v49 + 15);
  v63 = v54 | ((((v53 ^ 0x7C)
                                + *(unsigned __int8 *)(a41 + (v53 ^ 0x51))
                                + 1) ^ 0xB4) << 24);
  LOBYTE(v54) = (v48 + *(_BYTE *)(a45 + v699) + 125) ^ 0xC6;
  v64 = *(unsigned __int8 *)(a45 + v49)
      + 105 * (((v62 ^ 0xFFFFFF9D) - 29) ^ ((v62 ^ 0x5E) + 34) ^ ((v62 ^ 0xFFFFFF88) - 8))
      - 42;
  v65 = v64;
  LODWORD(v53) = (v54 - ((2 * v54) & 0x55) - 86) ^ *(unsigned __int8 *)(a40
                                                                                       + ((v48 + *(_BYTE *)(a45 + v699) + 125) ^ 0x5ELL));
  v66 = v64 ^ 0x8D;
  v67 = *(unsigned __int8 *)(a42 + ((v48 + *(_BYTE *)(a45 + (v49 + 2)) + 40) ^ 0x2CLL)) ^ 0x2A;
  v68 = v67 << 8;
  v69 = ((((_DWORD)v50 + 1) ^ 0x37) << 24) | (((*(_BYTE *)(a39
                                                                          + ((v48
                                                                                             + *(_BYTE *)(a45 + v696)
                                                                                             + 7) ^ 0xELL))
                                                               + 56) ^ 0x19) << 16) | ((*(unsigned __int8 *)(a42 + ((((2 * (v48 + *(_BYTE *)(a45 + v698) - 35)) & 0x26) + ((v48 + *(_BYTE *)(a45 + v698) - 35) ^ 0x93)) ^ 0xC8)) ^ 0x63) << 8);
  v70 = (-256 * v67) & 0x890A7400;
  LODWORD(v56) = ((-256 * v67) ^ 0x890A7481) + ((-256 * v67) | 0x76F58B7E);
  v71 = v58;
  HIDWORD(a30) = v60;
  LODWORD(a31) = v59;
  HIDWORD(a34) = 2 * v58;
  LOBYTE(v50) = (2 * v58) ^ (4
                           * ((((2 * (v58 ^ 0x2A)) ^ 0xC2) & (v58 ^ 0x2A) ^ 0x41) & (4 * (v59 & (v58 ^ 0x2A) ^ v60)) ^ v59 & (v58 ^ 0x2A) ^ v60));
  v72 = v57 | (((*(unsigned __int8 *)(a41 + (v65 ^ 0xA0)) + v66 + 1) ^ 0xC0) << 24);
  v73 = v72 ^ 0x7F;
  v74 = v72 & 0xFFFF00FF | ((*(_BYTE *)(a42
                                      + ((v48 + *(_BYTE *)(a45 + (v49 + 2)) + 40) ^ 0x2CLL)) ^ 0x2A) << 8);
  LODWORD(v65) = ((2 * (v71 ^ 0x47AF6108)) ^ 0x31397686) & (v71 ^ 0x47AF6108) ^ (2 * (v71 ^ 0x47AF6108)) & 0x989CBB42;
  v75 = (v65 ^ 0x10183200) & (4 * (v59 & (v71 ^ 0xDFABD10A) ^ v60)) ^ v59 & (v71 ^ 0xDFABD10A) ^ v60;
  LODWORD(v65) = ((4 * (v65 ^ 0x88848941)) ^ 0x6272ED0C) & (v65 ^ 0x88848941) ^ (4 * (v65 ^ 0x88848941)) & 0x989CBB40;
  v76 = (v65 ^ 0x10A900) & (16 * v75) ^ v75;
  LODWORD(v65) = ((16 * (v65 ^ 0x988C1243)) ^ 0x89CBB430) & (v65 ^ 0x988C1243) ^ (16 * (v65 ^ 0x988C1243)) & 0x989CBB40;
  v701 = (v49 + 5);
  HIDWORD(a26) = v58;
  LODWORD(v50) = (v58 ^ (2
                       * (((v76 ^ 0x989CBB43 ^ (v65 ^ 0x8888B000) & (v76 << 8)) << 16) & 0x189C0000 ^ v76 ^ 0x989CBB43 ^ (v65 ^ 0x8888B000) & (v76 << 8) ^ (((v76 ^ 0x989CBB43 ^ (v65 ^ 0x8888B000) & (v76 << 8)) << 16) ^ 0x3B430000) & (((v65 ^ 0x10140B43) << 8) & 0x189C0000 ^ (((v65 ^ 0x10140B43) << 8) ^ 0x1CBB0000) & (v65 ^ 0x10140B43) ^ 0x40000))) ^ 0xDE0AACC0)
               + (((v50 & 0x12 ^ 2) - (v50 & 8) + 72) ^ 0x58);
  v77 = v63 & 0xFF00FFFF | (((*(_BYTE *)(a39
                                                        + ((v48 + *(_BYTE *)(a45 + v701) + 99) ^ 0x27))
                                             - 72) ^ 0xC7) << 16);
  LOBYTE(v76) = v48 + *(_BYTE *)(a45 + (v49 + 11));
  LOBYTE(v65) = *(_BYTE *)(a45 + v50) + 105 * v50;
  v78 = v76 - 39;
  v79 = *(_BYTE *)(a40 + ((v76 - 39) ^ 0xB2));
  v80 = v69 & 0xFFFFFF00 | (((v76 + 89) ^ (-89 - v76) ^ (v79 - (v79 ^ (v76 + 89)))) + v79);
  v697 = (v49 + 12);
  v81 = ((v73 + (v74 ^ 0xFFFFFF80) + 1) & 0x890A7481 ^ v70 | (v73 + (v74 ^ 0xFFFFFF80) + 1) & 0x76F58B7E ^ (v56 + 1)) ^ v68;
  v82 = *(unsigned __int8 *)(a41 + ((v48 + *(_BYTE *)(a45 + v697) + 66) ^ 0xD3))
      + ((v48 + *(unsigned __int8 *)(a45 + v697) + 66) ^ 0xFE);
  LOBYTE(v76) = ((v71 + 15) ^ 0x58) & (2 * ((v71 + 15) & 0x42)) ^ (v71 + 15) & 0x42;
  LOBYTE(v70) = ((2 * ((v71 + 15) ^ 0xD8)) ^ 0x34) & ((v71 + 15) ^ 0xD8) ^ (2 * ((v71 + 15) ^ 0xD8)) & 0x9A;
  LOBYTE(v76) = v76 ^ 0x9A ^ (v70 ^ 0x10) & (4 * v76);
  LOBYTE(v56) = (v58 + 15) ^ (2
                            * ((16 * v76) & 0x10 ^ v76 ^ ((16 * v76) ^ 0x20) & ((4 * (v70 ^ 0x8A)) & 0x98 ^ 0x92 ^ ((4 * (v70 ^ 0x8A)) ^ 0x68) & (v70 ^ 0x8A))));
  v700 = (v49 + 6);
  v695 = (v49 + 1);
  LOBYTE(v76) = v48 + *(_BYTE *)(a45 + v695);
  v693 = v49;
  v694 = (v49 + 14);
  LOBYTE(v48) = *(_BYTE *)(a42 + ((v48 + *(_BYTE *)(a45 + v694) + 20) ^ 0x3FLL));
  v83 = v77 | ((*(unsigned __int8 *)(a42
                                   + ((*(_BYTE *)(a45 + v700)
                                                      + 105 * (((v56 ^ 0x3F) + 94) ^ (-99 - v56) ^ ((v56 ^ 0xB6) - 43))
                                                      - 10) ^ 0xFALL)) ^ 0x2B) << 8);
  LODWORD(v56) = v53 & 0xFF00FFFF | ((71 - *(_BYTE *)(a39 + ((v65 - 109) ^ 0x99))) << 16) | (((v82 + 1) ^ 0xFE) << 24);
  v84 = a32 ^ *(_DWORD *)(v46 - 188) ^ HIDWORD(a32);
  LODWORD(v53) = v84 ^ a21 ^ 0x6C1593EE ^ (v83 + 721781079 - ((2 * v83) & 0x560B037E) + 104);
  v85 = (*(_BYTE *)(a39 + ((v76 - 65) ^ 0xEFLL)) - 72) ^ 0xD7;
  v86 = v84 ^ *(_DWORD *)(v46 - 220) ^ v80;
  LOBYTE(v80) = v86 ^ 0xDD;
  v87 = v84 ^ a44 ^ (v85 << 16) ^ 0x9307B59A ^ (v81 + v73);
  LODWORD(v56) = v84 ^ *(_DWORD *)(v46 - 244) ^ 0x20A37F27 ^ (v56 & 0xFFFF00FF | (((v48 ^ -(char)v48 ^ ((v48 ^ 0x97) + 105))
                                                                                                  + 104) << 8));
  LODWORD(v65) = BYTE1(v56);
  v88 = BYTE3(v56);
  v89 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * BYTE2(v53)) ^ *(_DWORD *)(v47
                                                                           + 4
                                                                           * ((unsigned __int16)(v86 ^ 0x47DD) >> 8)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * HIBYTE(v87)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * v56);
  v90 = *(_DWORD *)(v47 + 4 * BYTE1(v87));
  LODWORD(v56) = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v86) ^ 0x7B)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                              + 4 * BYTE2(v56));
  v91 = v90 & 0x9BDDB498 ^ 0xF1A07C43;
  v92 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * BYTE2(v87));
  v93 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((v86 ^ 0x7B7147DD) >> 16)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * BYTE3(v53)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * v87) ^ 0x333D01A7 ^ *(_DWORD *)(v47 + 4 * v65);
  v94 = v90 & 0x159FF867 ^ 0x4884805 ^ (v56 ^ 0x26C574CD) & (v90 ^ 0xD5120352);
  v95 = 912843608
      - ((v56 ^ v90) & 0x64224B67 ^ 0xE2017361 | 0x3668E358)
      + ((v56 ^ v90) & 0x64224B67 ^ 0xE2017361 | 0xC9971CA7);
  v96 = (((((2 * v94) & 0xD08D2A08) - v94 - 1749456133) & 0x93851498 ^ 0x14065435)
       + ((((2 * v94) & 0xD08D2A08) - v94 - 1749456133) & 0x858A000 ^ 0x100001)
       - 2) ^ 0x15CDD83E;
  LODWORD(v56) = (v91 - 1) & 0x13580490 ^ 0x125A0530 ^ (v56 ^ 0x9BDD3480) & ((v91 - 1) ^ 0xFB6DC8CA);
  v97 = (v96 - ((2 * v96) & 0x321F0020) - 1657814416) ^ (v56 - ((2 * v56) & 0xA56197E4) - 760165390);
  v98 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * v88);
  LODWORD(v56) = (((v92 ^ 0x4721F59B) - 1193407899) ^ ((v92 ^ 0x6DCA7AAE) - 1841986222) ^ ((v92 ^ 0xC72EE0A2) + 953229150))
               - (((v98 ^ v92 ^ 0x6B4FA620) - 1800381984) ^ ((v98 ^ v92 ^ 0xE58BE00E) + 443817970) ^ ((v98 ^ v92 ^ 0x4261357B) - 1113666939))
               + 1949478875;
  LODWORD(v65) = (v56 ^ 0x28CD4E77) & (2 * (v56 & 0xACED4C67)) ^ v56 & 0xACED4C67;
  v99 = ((2 * (v56 ^ 0x39CDDEB3)) ^ 0x2A4125A8) & (v56 ^ 0x39CDDEB3) ^ (2 * (v56 ^ 0x39CDDEB3)) & 0x952092D4;
  v100 = (v97 ^ 0xA975EBC7) & (v95 ^ 0x5D3174E9) ^ v97 & 0xED58EFB0;
  v101 = ((4 * (v99 ^ 0x95209254)) ^ 0x54824B50) & (v99 ^ 0x95209254) ^ (4 * (v99 ^ 0x95209254)) & 0x952092D4;
  LODWORD(v65) = (v101 ^ 0x14000254) & (16 * ((v99 ^ 0x80) & (4 * v65) ^ v65)) ^ (v99 ^ 0x80) & (4 * v65) ^ v65;
  v102 = ((16 * (v101 ^ 0x81209084)) ^ 0x52092D40) & (v101 ^ 0x81209084) ^ (16 * (v101 ^ 0x81209084)) & 0x952092D0;
  LODWORD(v65) = v65 ^ 0x952092D4 ^ (v102 ^ 0x10000094) & ((_DWORD)v65 << 8);
  v103 = 171257445
       - (((v98 ^ 0xFDD81D15) + 36168427) ^ ((v98 ^ 0xD48FA582) + 728783486) ^ ((v98 ^ 0x837A455) - 137864277));
  v104 = (v103 ^ 0x8468A6D5) & (2 * (v103 & 0xD46AB4D9)) ^ v103 & 0xD46AB4D9;
  v105 = ((2 * (v103 ^ 0xCBC86C7)) ^ 0xB1AC643C) & (v103 ^ 0xCBC86C7) ^ (2 * (v103 ^ 0xCBC86C7)) & 0xD8D6321E;
  v106 = (v105 ^ 0x9084200C) & (4 * v104) ^ v104;
  v107 = ((4 * (v105 ^ 0x48521202)) ^ 0x6358C878) & (v105 ^ 0x48521202) ^ (4 * (v105 ^ 0x48521202)) & 0xD8D6321C;
  v108 = (v107 ^ 0x40500010) & (16 * v106) ^ v106;
  v109 = (((_DWORD)v65 << 16) ^ 0x12D40000) & (((v102 ^ 0x85209294) << 8) & 0x15200000 ^ 0x15200000 ^ (((v102 ^ 0x85209294) << 8) ^ 0x20920000) & (v102 ^ 0x85209294));
  v110 = ((16 * (v107 ^ 0x98863206)) ^ 0x8D6321E0) & (v107 ^ 0x98863206) ^ (16 * (v107 ^ 0x98863206)) & 0xD8D63210;
  v111 = v108 ^ 0xD8D6321E ^ (v110 ^ 0x88422000) & (v108 << 8);
  LODWORD(v65) = (v111 << 16) & 0x58D60000 ^ v111 ^ v65 ^ ((v111 << 16) ^ 0x321E0000) & (((v110 ^ 0x5094121E) << 8) & 0xD8D60000 ^ 0x8C40000 ^ (((v110 ^ 0x5094121E) << 8) ^ 0xD6320000) & (v110 ^ 0x5094121E)) ^ ((_DWORD)v65 << 16) & 0x15200000;
  v112 = *(_DWORD *)(v47 + 4 * BYTE1(v53));
  v113 = ((v100 & 0x8447C921 ^ 0x84074901) + (v100 ^ 0x605886A0) - ((v100 ^ 0x605886A0) & 0x8447C921)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * v53);
  v114 = (((v92 ^ 0xE9CD033D) + 372440259) ^ ((v92 ^ 0xF7DC301) - 259900161) ^ ((v92 ^ 0xB75AFAB) - 192262059))
       + 418810789
       + (((v103 ^ v98 ^ v56 ^ (2 * (v65 ^ v109)) ^ 0xA9CCAC1D) + 681015469) ^ ((v103 ^ v98 ^ v56 ^ (2 * (v65 ^ v109)) ^ 0x46AA5B8D)
                                                                              - 940470467) ^ ((v103 ^ v98 ^ v56 ^ (2 * (v65 ^ v109)) ^ 0x2D405278)
                                                                                            - 1407482166));
  v115 = (v114 ^ 0xCC097A56) & (2 * (v114 & 0x91517298)) ^ v114 & 0x91517298;
  v116 = ((2 * (v114 ^ 0xCC893A56)) ^ 0xBBB0919C) & (v114 ^ 0xCC893A56) ^ (2 * (v114 ^ 0xCC893A56)) & 0x5DD848CE;
  v117 = v116 ^ 0x44484842;
  v118 = (v116 ^ 0x9800080) & (4 * v115) ^ v115;
  v119 = ((4 * v117) ^ 0x77612338) & v117 ^ (4 * v117) & 0x5DD848CC;
  v120 = (v119 ^ 0x55400000) & (16 * v118) ^ v118;
  v121 = ((16 * (v119 ^ 0x89848C6)) ^ 0xDD848CE0) & (v119 ^ 0x89848C6) ^ (16 * (v119 ^ 0x89848C6)) & 0x5DD848C0;
  v122 = v120 ^ 0x5DD848CE ^ (v121 ^ 0x5D800800) & (v120 << 8);
  v123 = *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * v80) ^ v112 ^ v114 ^ (2
                                                                                         * ((v122 << 16) & 0x5DD80000 ^ v122 ^ ((v122 << 16) ^ 0x48CE0000) & (((v121 ^ 0x58400E) << 8) & 0x5DD80000 ^ 0x5900000 ^ (((v121 ^ 0x58400E) << 8) ^ 0xD8480000) & (v121 ^ 0x58400E))));
  v124 = ((BYTE1(v113) ^ 0x28) - ((2 * (BYTE1(v113) ^ 0x28)) & 0xDE) - 66499473) ^ 0xBE234C6B;
  v125 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v113) ^ 0xC4));
  v126 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v89) ^ 0x3E)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                      + 4 * BYTE2(v93)) ^ *(_DWORD *)(v47 + 4 * ((v124 - ((2 * v124) & 0x84100E4A) + 1468641061) ^ 0x15A3AFF4));
  v127 = ((v123 ^ 0x3D) + (v123 & 0xC3 ^ 0xD81708C2) - ((v123 ^ 0x3D) & 0xFFFFFFC3)) ^ 0x10132893;
  v128 = 467622541
       - (((v125 ^ 0x4E2FBDD0) - 1311751632) ^ ((v125 ^ 0x4B34B379) - 1261745017) ^ ((v125 ^ 0x247B126B) - 612045419));
  v129 = (BYTE2(v123) ^ 0xD8) - ((2 * (BYTE2(v123) ^ 0xD8)) & 0x1A) + 1882039565;
  v130 = (v129 & 0x4004825D ^ 0xC000040) + (v129 ^ 0x52278F3D) - ((v129 ^ 0x52278F3D) & 0x2208025D);
  v131 = *(_DWORD *)(v47
                   + 4
                   * ((1690588538 - (BYTE1(v123) ^ 0x3C | 0x64C4557A) + (BYTE1(v123) ^ 0x3C | 0x9B3BAA85)) ^ 0x9B3BAA44)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (((BYTE2(v113) ^ 0x26040415) - ((2 * (BYTE2(v113) ^ 0x26040415)) & 0x4000006C) - 1332078538) ^ 0x969E1C17)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * HIBYTE(v93)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((-350041761 - (v89 ^ 0x96905A | 0xEB22C95F) + (v89 ^ 0x96905A | 0x14DD36A0)) ^ 0x144BA6D3));
  LODWORD(v65) = ((2 * (v128 ^ 0xB50373B6)) ^ 0xEF87F60E) & (v128 ^ 0xB50373B6) ^ (2 * (v128 ^ 0xB50373B6)) & 0x77C3FB06;
  v132 = 2 * (v128 & 0xC2C088B1);
  v133 = (v65 ^ 0x7026204) & (4 * (v132 & (v128 ^ 0xB08262B4) ^ v128 & 0xC2C088B1)) ^ v132 & (v128 ^ 0xB08262B4) ^ v128 & 0xC2C088B1;
  LODWORD(v65) = ((4 * (v65 ^ 0x10400901)) ^ 0xDF0FEC1C) & (v65 ^ 0x10400901) ^ (4 * (v65 ^ 0x10400901)) & 0x77C3FB04;
  v134 = (v65 ^ 0x5703E800) & (16 * v133) ^ v133;
  LODWORD(v65) = ((16 * (v65 ^ 0x20C01303)) ^ 0x7C3FB070) & (v65 ^ 0x20C01303) ^ (16 * (v65 ^ 0x20C01303)) & 0x77C3FB00;
  v135 = v126 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((((2 * v127) | 0xEA24C2D2) - v127 + 183344791) ^ 0x3D1641CD));
  v136 = v134 ^ 0x77C3FB07 ^ (v65 ^ 0x7403B000) & (v134 << 8);
  v137 = (v128 ^ (2
                * ((v136 << 16) ^ v136 ^ (v136 << 16) & (((v65 ^ 0x3C04B07) << 8) & 0x77C30000 ^ (((v65 ^ 0x3C04B07) << 8) ^ 0x43FB0000) & (v65 ^ 0x3C04B07))))) & 0x1000000;
  v138 = ((v137 ^ 0xCF0B5742) - 765715565) ^ ((v137 ^ 0x7F27248E) + 1651533919) ^ ((v137 ^ 0xB12C73CC) - 1401209059);
  v139 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (v130 ^ 0x4C06A854u));
  v140 = (((v139 ^ 0xC38D0AD2) + 1014166830) ^ ((v139 ^ 0x39F0B71F) - 972076831) ^ ((v139 ^ 0x17B8D25A) - 397988442))
       - (((v125 ^ v139 ^ 0x7B21F7E0) - 2065823712) ^ ((v125 ^ v139 ^ 0xF96B7095) + 110399339) ^ ((v125 ^ v139 ^ 0x4EEFF420)
                                                                                                - 1324348448))
       + 1999197012;
  v141 = (v140 ^ 0xA1E4A2CF) & (2 * (v140 & 0xA9F6A8EE)) ^ v140 & 0xA9F6A8EE;
  v142 = ((2 * (v140 ^ 0xA1ADA213)) ^ 0x10B615FA) & (v140 ^ 0xA1ADA213) ^ (2 * (v140 ^ 0xA1ADA213)) & 0x85B0AFC;
  v143 = (v142 ^ 0x1200F8) & (4 * v141) ^ v141;
  v142 ^= 0x8490A05u;
  v144 = 4 * v142;
  v145 = ((4 * v142) ^ 0x216C2BF4) & v142;
  v146 = v138 + 648847502;
  v147 = (v146 ^ 0x3CFA4A04) & (2 * (v146 & 0x4000001)) | v146 & 0x4000001;
  v148 = ((2 * (v146 ^ 0x15DA4B06)) ^ 0x524CB34E) & (v146 ^ 0x15DA4B06) ^ (2 * (v146 ^ 0x15DA4B06)) & 0xA92659A6;
  v149 = (v148 ^ 4) & (4 * v147) | v147;
  v150 = ((4 * (v148 ^ 0xA92248A1)) ^ 0xA499669C) & (v148 ^ 0xA92248A1) ^ (4 * (v148 ^ 0xA92248A1)) & 0xA92659A4;
  v151 = (v150 ^ 0xA0004080) & (16 * v149) ^ v149;
  v152 = ((16 * (v150 ^ 0x9261923)) ^ 0x92659A70) & (v150 ^ 0x9261923) ^ (16 * (v150 ^ 0x9261923)) & 0xA92659A0;
  v153 = v151 ^ 0xA92659A7 ^ (v152 ^ 0x80241800) & (v151 << 8);
  v154 = v145 ^ v144 & 0x85B0AFC;
  v155 = (v138 + 648847502) ^ (2
                             * ((v153 << 16) & 0x29260000 ^ v153 ^ ((v153 << 16) ^ 0x59A70000) & (((v152 ^ 0x29024187) << 8) & 0x29260000 ^ 0x9260000 ^ (((v152 ^ 0x29024187) << 8) ^ 0x26590000) & (v152 ^ 0x29024187))));
  v156 = (v155 ^ 0xFCFCA1EF) & (v125 ^ 0xD0DF4A04) ^ v155 & 0xF1BF56C6;
  v157 = (v154 ^ 0x480AE0) & (16 * v143) ^ v143;
  v158 = v132 & (v128 ^ 0xD0B48CA8) ^ v128 & 0xC2C088B1;
  v159 = ((2 * (v128 ^ 0x55348DA8)) ^ 0x2FE80A32) & (v128 ^ 0x55348DA8) ^ (2 * (v128 ^ 0x55348DA8)) & 0x97F40518;
  v160 = (v159 ^ 0x7000000) & (4 * v158) ^ v158;
  v161 = ((4 * (v159 ^ 0x90140509)) ^ 0x5FD01464) & (v159 ^ 0x90140509) ^ (4 * (v159 ^ 0x90140509)) & 0x97F40518;
  v162 = (v161 ^ 0x17D00400) & (16 * v160) ^ v160;
  v163 = ((16 * (v154 ^ 0x8130009)) ^ 0x85B0AFD0) & (v154 ^ 0x8130009) ^ (16 * (v154 ^ 0x8130009)) & 0x85B0AF0;
  v164 = ((16 * (v161 ^ 0x80240119)) ^ 0x7F405190) & (v161 ^ 0x80240119) ^ (16 * (v161 ^ 0x80240119)) & 0x97F40510;
  v165 = v162 ^ 0x97F40519 ^ (v164 ^ 0x17400100) & (v162 << 8);
  v166 = v157 ^ 0x85B0AFD ^ (v163 ^ 0x100A2D) & (v157 << 8);
  v167 = v128 ^ (2
               * ((v165 << 16) & 0x17740000 ^ v165 ^ ((v165 << 16) ^ 0x5190000) & (((v164 ^ 0x80B40409) << 8) & 0x97F40000 ^ (((v164 ^ 0x80B40409) << 8) ^ 0x74050000) & (v164 ^ 0x80B40409) ^ 0x3F00000)));
  v168 = ((v167 & 0x4C082D29 ^ 0x40000909) + (v167 & 0xB2F7D2D6 ^ 0x122010C1) - 1) ^ 0x54089D2A;
  v169 = v168 - ((2 * v168) & 0x2E2A9FA8);
  *(_DWORD *)(v46 - 220) = *(_DWORD *)(v46 - 192) < 0x7D24F7CAu;
  v170 = 1599814192 - v138;
  if ((v156 & 0xCF7EA366 ^ 0xCE7EA126) + (v156 ^ 0x21814240) - ((v156 ^ 0x21814240) & 0xCF7EA366) == 507765216)
    v170 = v146;
  v171 = (((v125 ^ 0x4938270) - 76776048) ^ ((v125 ^ 0x7FB84BBD) - 2142784445) ^ ((v125 ^ 0x5A4BD50F) - 1514919183))
       - 354927054
       + v170;
  v172 = (v171 ^ 0xF35BFC30) & (2 * (v171 & 0xF383F131)) ^ v171 & 0xF383F131;
  v173 = ((2 * (v171 ^ 0x7159FE32)) ^ 0x5B41E06) & (v171 ^ 0x7159FE32) ^ (2 * (v171 ^ 0x7159FE32)) & 0x82DA0F02;
  v174 = (v173 ^ 0x100C00) & (4 * v172) ^ v172;
  v175 = ((4 * (v173 ^ 0x824A0101)) ^ 0xB683C0C) & (v173 ^ 0x824A0101) ^ (4 * (v173 ^ 0x824A0101)) & 0x82DA0F00;
  v176 = (v175 ^ 0x2480C00) & (16 * v174) ^ v174;
  v177 = ((16 * (v175 ^ 0x80920303)) ^ 0x2DA0F030) & (v175 ^ 0x80920303) ^ (16 * (v175 ^ 0x80920303)) & 0x82DA0F00;
  v178 = v176 ^ 0x82DA0F03 ^ (v177 ^ 0x800000) & (v176 << 8);
  v179 = (v169 + 387272660) ^ v140 ^ v171 ^ (2
                                           * ((v166 << 16) & 0x85B0000 ^ v166 ^ ((v166 << 16) ^ 0xAFD0000) & (((v163 ^ 0x84B002D) << 8) & 0x85B0000 ^ 0x510000 ^ (((v163 ^ 0x84B002D) << 8) ^ 0x5B0A0000) & (v163 ^ 0x84B002D)) ^ v178 ^ (v178 << 16) & 0x2DA0000 ^ ((v178 << 16) ^ 0xF030000) & (((v177 ^ 0x825A0F03) << 8) & 0x82DA0000 ^ 0xD00000 ^ (((v177 ^ 0x825A0F03) << 8) ^ 0xDA0F0000) & (v177 ^ 0x825A0F03))));
  v180 = (((v139 ^ 0x1A6E83F6) - 443450358) ^ ((v139 ^ 0x8121D7FA) + 2128488454) ^ ((v139 ^ 0x768A3B9B) - 1988770715))
       + 1077515280
       + (((v179 ^ 0xB2C786F3) + 227925431) ^ ((v179 ^ 0xBC32199E) + 56640220) ^ ((v179 ^ 0xA20184FA) + 492036032))
       - 937;
  v181 = (v180 ^ 0xDDE5DC18) & (2 * (v180 & 0x99E59E5D)) ^ v180 & 0x99E59E5D;
  v182 = *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * v93) ^ *(_DWORD *)(v47 + 4 * (BYTE1(v89) ^ 0x1Bu)) ^ v180;
  v183 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (BYTE2(v89) ^ 0xC4u)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                                                                                      + 4
                                                                                      * (((v113 & 0x8C ^ 0xC4298309)
                                                                                        + (v113 & 0x73)
                                                                                        - 1) ^ 0xC429832E));
  v184 = v78 & 0x18;
  v185 = ((2 * (v180 ^ 0xEF2DEC2A)) ^ 0xED90E4EE) & (v180 ^ 0xEF2DEC2A) ^ (2 * (v180 ^ 0xEF2DEC2A)) & 0x76C87276;
  v186 = v183 ^ *(_DWORD *)(v47 + 4 * BYTE1(v93)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v123) ^ 0x66));
  v187 = v185 ^ 0x12481211;
  v188 = (v78 & 0x18) - ((2 * v78) & 0x10) + 79;
  v189 = (v185 ^ 0x64806064) & (4 * v181) ^ v181;
  v190 = *(_DWORD *)(*(_QWORD *)(v46 - 144)
                   + 4
                   * ((v135 ^ 0x682284EFu) >> (v188 & 0x10) >> (v188 & 0x68 ^ 0x48) >> (v184 ^ 0x18))) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((((2 * (BYTE2(v131) ^ 0xC5)) | 0xF6FFE7D6) - (BYTE2(v131) ^ 0xC5) + 75500565) ^ 0xFB7FF338)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((((2 * (v186 ^ 0x2028574B)) | 0x46918A5E) - (v186 ^ 0x2028574B) - 591971631) ^ 0x36092EEu));
  v191 = ((4 * v187) ^ 0xDB21C9DC) & v187 ^ (4 * v187) & 0x76C87274;
  v192 = ((2 * (BYTE1(v135) ^ 0x1D)) & 0x86) - (BYTE1(v135) ^ 0x1D);
  v193 = (((2 * (BYTE2(v186) ^ 0x2DB1D283)) & 0x1620188) - (BYTE2(v186) ^ 0x2DB1D283) - 284894661) ^ 0x42250B47;
  v194 = v189 ^ 0x76C87277 ^ (v191 ^ 0x52004050) & (16 * v189);
  LOWORD(v189) = (v131 & 9) + (v131 & 0xF6 ^ 0x1A1);
  v195 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v131) ^ 0x5D)) ^ *(_DWORD *)(v47
                                                                                       + 4
                                                                                       * (((BYTE1(v186) ^ 7)
                                                                                         + ((v186 >> 8) & 0x22 ^ 0x1720)
                                                                                         - ((BYTE1(v186) ^ 7) & 0x22222222)) ^ 0x17A9)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (v135 ^ 0xEFu));
  v196 = *(_DWORD *)(*(_QWORD *)(v46 - 136)
                   + 4
                   * (((BYTE2(v135) ^ 0x12501422) - ((2 * (BYTE2(v135) ^ 0x12501422)) & 0x202009C8) - 1313438236) ^ 0xA3E691E4)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v186) ^ 0xDC));
  v197 = *(_DWORD *)(v47 + 4 * (BYTE1(v131) ^ 0xC8u));
  v198 = (((2 * (v197 & 0x40000000)) ^ 0xC028D410) + (v197 & 0x40000000)) | 0x34172A6A;
  v199 = ((v198 ^ 0xCC63F292) - 814221888) ^ ((v198 ^ 0xA6CAEE10) - 1512117954) ^ ((v198 ^ 0x9E96E2F8) - 1652365866);
  v200 = v199 + 2016333378;
  v201 = (v200 ^ 0x9A80BB56) & (2 * (v200 & 0x90A53826)) ^ v200 & 0x90A53826;
  v202 = ((16 * (v191 ^ 0x24C83223)) ^ 0x6C872770) & (v191 ^ 0x24C83223) ^ (16 * (v191 ^ 0x24C83223)) & 0x76C87270;
  v203 = (v202 << 8) ^ 0xD35D810;
  v204 = v202 & 0x8D17A810;
  v202 ^= 0x64802217u;
  v205 = v204 ^ v194 ^ v202 & ((v194 << 8) ^ 0x4565DF10);
  v206 = ((2 * (v200 ^ 0xBAC29B16)) ^ 0x54CF46E0) & (v200 ^ 0xBAC29B16) ^ (2 * (v200 ^ 0xBAC29B16)) & 0x2A67A370;
  v207 = (v206 ^ 0x50020) & (4 * v201) ^ v201;
  v208 = ((4 * (v206 ^ 0x2A20A110)) ^ 0xA99E8DC0) & (v206 ^ 0x2A20A110) ^ (4 * (v206 ^ 0x2A20A110)) & 0x2A67A370;
  v209 = (v208 ^ 0x28068140) & (16 * v207) ^ v207;
  v210 = ((16 * (v208 ^ 0x2612230)) ^ 0xA67A3700) & (v208 ^ 0x2612230) ^ (16 * (v208 ^ 0x2612230)) & 0x2A67A370;
  v211 = v209 ^ 0x2A67A370 ^ (v210 ^ 0x22622300) & (v209 << 8);
  v212 = v203 & v202 ^ v204;
  v213 = (v199 + 2016333378) ^ (2
                              * ((v211 << 16) & 0x2A670000 ^ v211 ^ ((v211 << 16) ^ 0x23700000) & (((v210 ^ 0x8058070) << 8) & 0x2A670000 ^ 0x8440000 ^ (((v210 ^ 0x8058070) << 8) ^ 0x67A30000) & (v210 ^ 0x8058070))));
  v214 = v213 & 0x19F2DF39 ^ 0x9F21931 ^ (v213 ^ 0x80AA7E86) & (v196 ^ 0xD557AC6C);
  v215 = ((2 * (v197 & 0xBFFFFFFF ^ 0x32EDFD97)) & 0x20ADBC4E) - (v197 & 0xBFFFFFFF ^ 0x32EDFD97);
  v216 = *(_DWORD *)(*(_QWORD *)(v46 - 136)
                   + 4 * ((-961261372 - (v193 | 0xC6B450C4) + (v193 | 0x394BAF3B)) ^ 0xB9DBAC2B)) ^ *(_DWORD *)(v47 + 4 * ((v192 + 700) ^ 0x225u)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (((_WORD)v189 - 1) & 0x3FF ^ 0x192u));
  v217 = (v205 << 16) ^ 0xDF70A810;
  v218 = 1720107250 - v199;
  if ((v214 | 0x939AB5B) - (v214 | 0xF6C654A4) == 161716166)
    v218 = v200;
  v219 = v212 & 0xD17A810 ^ v205 ^ v217 & (v212 ^ 0x72C80000);
  v220 = (((v196 ^ 0x7760B69A) - 2002826906) ^ ((v196 ^ 0x643E08F9) - 1681787129) ^ ((v196 ^ 0xDFFBCD36) + 537146058))
       - 1243239050
       + v218;
  v221 = (v220 ^ 0x1652FC34) & (2 * (v220 & 0xA764FE45)) ^ v220 & 0xA764FE45;
  v222 = ((2 * (v220 ^ 0x181A18BE)) ^ 0x7EFDCDF6) & (v220 ^ 0x181A18BE) ^ (2 * (v220 ^ 0x181A18BE)) & 0xBF7EE6FA;
  v223 = v182 ^ (2 * (v219 ^ v217 & 0x76C82010));
  v224 = ((4 * (v222 ^ 0x81022209)) ^ 0xFDFB9BEC) & (v222 ^ 0x81022209) ^ (4 * (v222 ^ 0x81022209)) & 0xBF7EE6F8;
  v225 = (v224 ^ 0xBD7A82E0) & (16 * ((v222 ^ 0x3E34C030) & (4 * v221) ^ v221)) ^ (v222 ^ 0x3E34C030) & (4 * v221) ^ v221;
  v226 = ((16 * (v224 ^ 0x2046413)) ^ 0xF7EE6FB0) & (v224 ^ 0x2046413) ^ (16 * (v224 ^ 0x2046413)) & 0xBF7EE6F0;
  v227 = v225 ^ 0xBF7EE6FB ^ (v226 ^ 0xB76E6600) & (v225 << 8);
  v228 = v190 ^ *(_DWORD *)(v47 + 4 * (BYTE1(v223) ^ 0xA5u));
  v229 = v216 ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v223) ^ 0x73));
  v230 = *(_DWORD *)(*(_QWORD *)(v46 - 136)
                   + 4
                   * ((2083336629 - (BYTE2(v223) ^ 0x512103F | 0x7C2D31B5) + (BYTE2(v223) ^ 0x512103F | 0x83D2CE4A)) ^ 0x86C0DE76)) ^ v195;
  v231 = (v215 + 1873355224) ^ v220 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                                                + 4
                                                * ((((2 * (v223 ^ 0x5F)) | 0xFB27397C)
                                                  - (v223 ^ 0x5F)
                                                  - 2106825918) ^ 0x7D939C6F)) ^ (2
                                                                                * ((v227 << 16) & 0x3F7E0000 ^ v227 ^ ((v227 << 16) ^ 0x66FB0000) & (((v226 ^ 0x810804B) << 8) & 0x3F7E0000 ^ 0x1180000 ^ (((v226 ^ 0x810804B) << 8) ^ 0x7EE60000) & (v226 ^ 0x810804B))));
  v232 = ((unsigned __int16)((v215 + 8664) ^ v220 ^ *(_WORD *)(*(_QWORD *)(v46 - 128)
                                                                              + 4
                                                                              * ((((2 * (v223 ^ 0x5F)) | 0xFB27397C)
                                                                                - (v223 ^ 0x5F)
                                                                                - 2106825918) ^ 0x7D939C6F)) ^ (2 * v227)) >> 8) ^ 0x4C90CA1B;
  v233 = (((2 * (BYTE1(v229) ^ 0x3A)) | 0xF69CDE4E) - (BYTE1(v229) ^ 0x3A) + 78745817) ^ 0xF948ED3E;
  v234 = v232 | 0x65C29E47;
  v235 = v232 | 0x9A3D61B8;
  v236 = (1736865859 - (BYTE2(v229) ^ 0x96 | 0x67867843) + (BYTE2(v229) ^ 0x96 | 0x987987BC)) ^ 0xAF899B8;
  v237 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4
                                            * (((HIWORD(v230) & 0xDE ^ 0xB0F) + (HIWORD(v230) & 0x21) - 1) ^ 0xB1E));
  v238 = -1707253320 - v235 + v234;
  v239 = ((v231 ^ 0x69) - ((2 * (v231 ^ 0x69)) & 0xB0) - 1414239912) ^ 0xF34785C;
  v240 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v228) ^ 0x1B));
  v241 = (v240 ^ 0x4E269EFF) & (v237 ^ 0xEDC56F97) ^ v237 & 0x6F46823D;
  v242 = 2 * ((v241 & 0x1A9D5C87 ^ 0x189D5C82) + (v241 & 0x6562A378 ^ 0x5428221)) - 2;
  v243 = (((2 * (BYTE2(v231) ^ 0x96)) & 0x77777777) - (BYTE2(v231) ^ 0x96) + 1636647236) ^ 0xB9414164;
  v244 = (((v237 ^ 0xDF85CF17) + 544878825) ^ ((v237 ^ 0x8D5ECAEF) + 1923167505) ^ ((v237 ^ 0xBF1E6A6F) + 1088525713))
       + (((v240 ^ 0xA878F191) + 1468468847) ^ ((v240 ^ 0xA3A00AAA) + 1549792598) ^ ((v240 ^ 0x2AB8E7F9) - 716761081))
       - (((v242 ^ 0xA4B56194) - 1950407973) ^ ((v242 ^ 0x934E5DDF) - 1136386414) ^ ((v242 ^ 0xD6CC8525) - 104413588))
       - 560142254;
  v245 = (v244 ^ 0xFCE45D89) & (2 * (v244 & 0xFEC69E28)) ^ v244 & 0xFEC69E28;
  v246 = ((2 * (v244 ^ 0xE5E545D9)) ^ 0x3647B7E2) & (v244 ^ 0xE5E545D9) ^ (2 * (v244 ^ 0xE5E545D9)) & 0x1B23DBF0;
  v247 = (v246 ^ 0x120291E0) & (4 * v245) ^ v245;
  v248 = ((4 * (v246 ^ 0x9204811)) ^ 0x6C8F6FC4) & (v246 ^ 0x9204811) ^ (4 * (v246 ^ 0x9204811)) & 0x1B23DBF0;
  v249 = (v248 ^ 0x8034BC0) & (16 * v247) ^ v247;
  v250 = ((16 * (v248 ^ 0x13209031)) ^ 0xB23DBF10) & (v248 ^ 0x13209031) ^ (16 * (v248 ^ 0x13209031)) & 0x1B23DBF0;
  v251 = v249 ^ 0x1B23DBF1 ^ (v250 ^ 0x12219B00) & (v249 << 8);
  v252 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((((2 * v236) | 0xC52C5C84) - v236 - 1654009410) ^ 0xF017301A)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v230) ^ 0x40)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((((2 * (v228 ^ 0x5221506D)) | 0x979BBE0) - (v228 ^ 0x5221506D) - 79486448) ^ 0x569D8DF0u)) ^ *(_DWORD *)(v47 + 4 * (v238 ^ 0x295254E2));
  v253 = ((2 * (BYTE1(v230) ^ 0x63C0200A)) & 0x40800022) - (BYTE1(v230) ^ 0x63C0200A);
  v254 = (((2 * (BYTE1(v228) ^ 0x6A)) & 0x5C) - (BYTE1(v228) ^ 0x6A) - 713034287) ^ 0xFCFCFD75;
  v255 = *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((((2 * v239) | 0xF377A19A) - v239 - 2042351821) ^ 0xDD3BC1CE)) ^ *(_DWORD *)(v47 + 4 * ((-1456605316 - (v233 | 0xA92DF77C) + (v233 | 0x56D20883)) ^ 0x54D48A43)) ^ v244;
  v256 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v229) ^ 0x8D)) ^ *(_DWORD *)(v47
                                                                                       + 4
                                                                                       * ((v254
                                                                                         - (a14 & (2 * v254))
                                                                                         + 307371452) ^ 0x3BD115F5)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (v230 ^ 0x25u)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((((2 * v243) & 0x10083E44) - v243 + 1425596637) ^ 0x8C34E0CB));
  v257 = (((v252 ^ 0xEA907E4C) + 1648696640) ^ ((v252 ^ 0x38DFA453) - 1341470943) ^ ((v252 ^ 0xB4626830) + 1018628932))
       + 482707281;
  v258 = ((v250 ^ 0x90240E1) << 8) & 0x1B230000 ^ 0x18200000 ^ (((v250 ^ 0x90240E1) << 8) ^ 0x23DB0000) & (v250 ^ 0x90240E1);
  v259 = (v257 ^ 0xC05CA7F8) & (2 * (v257 & 0x941CA7FD)) ^ v257 & 0x941CA7FD;
  v260 = ((2 * (v257 ^ 0xC045AC98)) ^ 0xA8B216CA) & (v257 ^ 0xC045AC98) ^ (2 * (v257 ^ 0xC045AC98)) & 0x54590B64;
  v261 = (v260 ^ 0x100240) & (4 * v259) ^ v259;
  v262 = ((4 * (v260 ^ 0x54490925)) ^ 0x51642D94) & (v260 ^ 0x54490925) ^ (4 * (v260 ^ 0x54490925)) & 0x54590B64;
  v263 = (v262 ^ 0x50400900) & (16 * v261) ^ v261;
  v264 = ((16 * (v262 ^ 0x4190261)) ^ 0x4590B650) & (v262 ^ 0x4190261) ^ (16 * (v262 ^ 0x4190261)) & 0x54590B60;
  v265 = ((v251 << 16) ^ 0x5BF10000) & v258;
  v266 = v263 ^ 0x54590B65 ^ (v264 ^ 0x44100200) & (v263 << 8);
  v267 = (v251 << 16) & 0x1B230000 ^ v251;
  v268 = ((HIWORD(v228) & 0xAE ^ 0x3FF0F) - (HIWORD(v228) | 0x1FFFAE) + 2097150) ^ 0x3FF50;
  v269 = 815266818
       - (((v252 ^ 0x62946885) - 1653893253) ^ ((v252 ^ 0x5058BE75) - 1347993205) ^ ((v252 ^ 0x34C59B8A) - 885365642));
  v270 = (v269 ^ 0xEC1EB451) & (2 * (v269 & 0xC95EB684)) ^ v269 & 0xC95EB684;
  v271 = ((2 * (v269 ^ 0x6CA6BD59)) ^ 0x4BF017BA) & (v269 ^ 0x6CA6BD59) ^ (2 * (v269 ^ 0x6CA6BD59)) & 0xA5F80BDC;
  v272 = (v271 ^ 0x1F00210) & (4 * v270) ^ v270;
  v273 = ((4 * (v271 ^ 0xA4080845)) ^ 0x97E02F74) & (v271 ^ 0xA4080845) ^ (4 * (v271 ^ 0xA4080845)) & 0xA5F80BDC;
  v274 = (v273 ^ 0x85E00B40) & (16 * v272) ^ v272;
  v275 = ((16 * (v273 ^ 0x20180089)) ^ 0x5F80BDD0) & (v273 ^ 0x20180089) ^ (16 * (v273 ^ 0x20180089)) & 0xA5F80BD0;
  v276 = v267 ^ v265;
  v277 = v274 ^ 0xA5F80BDD ^ (v275 ^ 0x5800900) & (v274 << 8);
  v278 = ((v229 ^ 0xBE) + (v229 & 0xCD ^ 0xCF804841) - ((v229 ^ 0xBE) & 0xCD)) ^ 0xFB417AC5;
  v279 = ((2 * v278) | 0xA88F7682) - v278;
  v280 = v255 ^ (2 * v276);
  v281 = v269 ^ v252 ^ v257 ^ (2
                             * (v277 ^ v266 ^ (v266 << 16) & 0x54590000 ^ (v277 << 16) & 0x25F80000 ^ ((v277 << 16) ^ 0xBDD0000) & (((v275 ^ 0xA078020D) << 8) & 0xA5F80000 ^ 0x5F00000 ^ (((v275 ^ 0xA078020D) << 8) ^ 0xF80B0000) & (v275 ^ 0xA078020D)) ^ ((v266 << 16) ^ 0xB650000) & (((v264 ^ 0x10490925) << 8) & 0x54590000 ^ 0x4500000 ^ (((v264 ^ 0x10490925) << 8) ^ 0x590B0000) & (v264 ^ 0x10490925))));
  v282 = (((v281 ^ 0x830D1C26) - 817161207) ^ ((v281 ^ 0x9EF94F3A) - 759214315) ^ ((v281 ^ 0xA6CF0E6F) - 360116670))
       - 1448735334;
  v283 = (v282 ^ 0xFEA74533) & (2 * (v282 & 0xFEB795B2)) ^ v282 & 0xFEB795B2;
  v284 = ((2 * (v282 ^ 0xD6856D13)) ^ 0x5065F142) & (v282 ^ 0xD6856D13) ^ (2 * (v282 ^ 0xD6856D13)) & 0x2832F8A0;
  v285 = ((4 * (v284 ^ 0x281208A1)) ^ 0xA0CBE284) & (v284 ^ 0x281208A1) ^ (4 * (v284 ^ 0x281208A1)) & 0x2832F8A0;
  v286 = (v285 ^ 0x2002E080) & (16 * ((v284 ^ 0x20F000) & (4 * v283) ^ v283)) ^ (v284 ^ 0x20F000) & (4 * v283) ^ v283;
  v287 = ((16 * (v285 ^ HIDWORD(a13))) ^ 0x832F8A10) & (v285 ^ HIDWORD(a13)) ^ (16 * (v285 ^ HIDWORD(a13))) & 0x2832F8A0;
  v288 = v286 ^ 0x2832F8A1 ^ (v287 ^ 0x228800) & (v286 << 8);
  v289 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * v268) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                                                                      + 4 * ((v279 + 733496511) ^ 0xE08689C0)) ^ *(_DWORD *)(v47 + 4 * ((v253 - 742556946) ^ 0xB07D5AE6)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v231) ^ 0x53));
  v290 = v282 ^ (2
               * ((v288 << 16) & 0x28320000 ^ v288 ^ ((v288 << 16) ^ 0x78A10000) & (((v287 ^ 0x281070A1) << 8) & 0x28320000 ^ 0x8020000 ^ (((v287 ^ 0x281070A1) << 8) ^ 0x32F80000) & (v287 ^ 0x281070A1))));
  LOWORD(v276) = ((2 * (BYTE2(v289) ^ 0x7A)) & 0xFA) - (BYTE2(v289) ^ 0x7A) + 4226;
  v291 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v280) ^ 0xED)) ^ *(_DWORD *)(v47
                                                                                       + 4
                                                                                       * (((BYTE1(v256) ^ 0xAB)
                                                                                         + ((v256 >> 8) & 0xD5 ^ 0x554)
                                                                                         - ((BYTE1(v256) ^ 0xAB) & 0xD5)) ^ 0x59D)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (((v289 ^ 0xA8) - ((2 * (v289 ^ 0xA8)) & 0x112) + 649) ^ 0x201u)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (BYTE2(v290) ^ 0x92u));
  v292 = *(_DWORD *)(*(_QWORD *)(v46 - 136)
                   + 4 * (((HIWORD(v280) & 0xB9 ^ 0xA0702C10) + (HIWORD(v280) & 0x46 ^ 0x4000007) - 1) ^ 0xA4702CBB));
  v293 = (489104069
        - (v290 ^ 0x84200790 | 0x1D2722C5)
        + (v290 ^ 0x84200790 | 0xE2D8DD3A)) ^ 0xE7EADE7B;
  HIDWORD(v294) = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v290) ^ 0xFE)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                                + 4
                                                                                                * (((HIWORD(v256) & 0x99 ^ 0x6B640099)
                                                                                                  + (BYTE2(v256) ^ 0x80822104)
                                                                                                  - ((BYTE2(v256) ^ 0x80822104) & 0x22199)) ^ 0xEBE4008C));
  LODWORD(v294) = HIDWORD(v294);
  v295 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v256) ^ 0x12)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                       + 4
                                                                                       * (((v276 & 0xF84 ^ 0x5C0E701)
                                                                                         + (v276 & 0x107B)
                                                                                         - 1) ^ 0x5C0F7CCu)) ^ *(_DWORD *)(v47 + 4 * ((((v280 >> 8) & 0x4E ^ 0x50D) + ((v280 >> 8) & 0xB1) - 1) ^ 0x554));
  v296 = __ROR4__((v294 >> 6) ^ __ROR4__(*(_DWORD *)(v47+ 4* (((BYTE1(v289) ^ 0x216600E0)- ((2 * (BYTE1(v289) ^ 0x216600E0)) & 0x4C01EE)- 1808277257) ^ 0xB551E09B)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)+ 4* (((v280 ^ 0x40298)- (a13 & (2 * (v280 ^ 0x40298)))+ 2080206322) ^ 0x7BF96F7A)), 6) ^ 0xF1F0B7B6, 26) ^ 0x7D107415;
  v297 = *(_DWORD *)(v47 + 4 * (BYTE1(v290) ^ 0x64u)) ^ v292 ^ *(_DWORD *)(*(_QWORD *)(v46 - 144)
                                                                           + 4 * (HIBYTE(v289) ^ 0x43)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (v256 ^ 0x9Du));
  v298 = v295 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((((2 * v293) & 0x3C56946A) - v293 - 506153526) ^ 0x60C6B1EB));
  v299 = (BYTE1(v298) ^ 0x4B) + ((v298 >> 8) & 0x98 ^ 0x2B209790) - ((BYTE1(v298) ^ 0x4B) & 0x98);
  v300 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * BYTE2(v296));
  v301 = v299 ^ 0x28B9F7EC;
  v302 = (v297 & 0xFF0000 ^ 0x80000) + (v297 & 0xFB0000 ^ 0xF0F34BDF) - ((v297 & 0xFF0000 ^ 0x80000) & 0xFFFBFFFF);
  v303 = v299 & 0x2000954E ^ 0x54420002;
  if ((v302 & 0xBDD0000 ^ 0xE314100B | v302 & 0x14220000) == 0xF3FF100B)
    v304 = -1030141318;
  else
    v304 = v300 ^ 0xD0A3DA12;
  v305 = v300 & 0xC2994AFA ^ 0xC20048C0 ^ v304 & (v300 ^ 0xEDC56F97);
  v306 = v301 & 0x100554E;
  v307 = (((((2 * v305) & 0x2060C604) - v305 - 271606531) ^ 0xD14F20E5) - 860773940) ^ (((((2 * v305) & 0x2060C604)
                                                                                        - v305
                                                                                        - 271606531) ^ 0xEE391F60)
                                                                                      - 205021617) ^ (((((2 * v305) & 0x2060C604) - v305 - 271606531) ^ 0xD238A12A) - 809099259);
  v308 = v307 + 450203923;
  v309 = v303 + v301;
  v310 = v300 & 0xFFFFFF7F ^ 0x6B00BA6F;
  v311 = v310 + (v300 & 0xF339264E ^ 0x90390480);
  v312 = v309 - v306;
  v313 = ((2 * ((v311 - (v310 & 0xF339264E)) ^ 0x8B6A74C4)) | 0xCD22C058) - ((v311 - (v310 & 0xF339264E)) ^ 0x8B6A74C4);
  v314 = (v308 ^ 0xF07A2F43) & (2 * (v308 & 0xF47A4F6B)) ^ v308 & 0xF47A4F6B;
  v315 = ((2 * (v308 ^ 0x309E3195)) ^ 0x89C8FDFC) & (v308 ^ 0x309E3195) ^ (2 * (v308 ^ 0x309E3195)) & 0xC4E47EFE;
  v316 = (v315 ^ 0x80C07CFC) & (4 * v314) ^ v314;
  v317 = ((4 * (v315 ^ 0x44240202)) ^ 0x1391FBF8) & (v315 ^ 0x44240202) ^ (4 * (v315 ^ 0x44240202)) & 0xC4E47EFC;
  v318 = (v317 ^ 0x807AF0) & (16 * v316) ^ v316;
  v319 = ((16 * (v317 ^ 0xC4640406)) ^ 0x4E47EFE0) & (v317 ^ 0xC4640406) ^ (16 * (v317 ^ 0xC4640406)) & 0xC4E47EF0;
  v320 = v318 ^ 0xC4E47EFE ^ (v319 ^ 0x44446E00) & (v318 << 8);
  v321 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v291) ^ 0x9E));
  v322 = (v307 + 450203923) ^ (2
                             * ((v320 << 16) & 0x44E40000 ^ v320 ^ ((v320 << 16) ^ 0x7EFE0000) & (((v319 ^ 0x80A0101E) << 8) & 0x44E40000 ^ (((v319 ^ 0x80A0101E) << 8) ^ 0x647E0000) & (v319 ^ 0x80A0101E) ^ 0x800000)));
  v323 = v322 & 0xAE4DD867 ^ 0x2E454007 ^ (v322 ^ 0xF47AB297) & (v321 ^ 0x8F2DC4A5);
  v324 = (-678531609 - (v297 ^ 0x94 | 0xD78E6DE7) + (v297 ^ 0x94 | 0x28719218)) ^ 0x38778298;
  v325 = *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((((2 * v324) & 0x7F08E710) - v324 - 1065644937) ^ 0xD07D9C77));
  v326 = ((v325 & 0x9479402C ^ 0x4594028) - ((2 * (v325 & 0x9479402C ^ 0x4594028)) & 0x8E08018) + 1869759247) ^ 0x2D11410B;
  v327 = ((2 * v326) | 0x6E98616) - v326;
  v328 = -63582185 - v307;
  if ((v323 | 0x398A12CE) - (v323 | 0xC675ED31) == -317598307)
    v328 = v308;
  v329 = (((v321 ^ 0x4FEA72DB) - 1340764891) ^ ((v321 ^ 0xE8F3EE77) + 386666889) ^ ((v321 ^ 0x8679806E) + 2038857618))
       + 1950305369
       + v328;
  v330 = (v329 ^ 0x1D1A5F90) & (2 * (v329 & 0xA19B1FD4)) ^ v329 & 0xA19B1FD4;
  v331 = ((2 * (v329 ^ 0x5E2C5318)) ^ 0xFF6E9998) & (v329 ^ 0x5E2C5318) ^ (2 * (v329 ^ 0x5E2C5318)) & 0xFFB74CCC;
  v332 = (v331 ^ 0x8E240880) & (4 * v330) ^ v330;
  v333 = ((4 * (v331 ^ 0x914444)) ^ 0xFEDD3330) & (v331 ^ 0x914444) ^ (4 * (v331 ^ 0x914444)) & 0xFFB74CCC;
  v334 = (v333 ^ 0xFE950000) & (16 * v332) ^ v332;
  v335 = ((16 * (v333 ^ 0x1224CCC)) ^ 0xFB74CCC0) & (v333 ^ 0x1224CCC) ^ (16 * (v333 ^ 0x1224CCC)) & 0xFFB74CC0;
  v336 = *(_DWORD *)(*(_QWORD *)(v46 - 136)
                   + 4 * ((((2 * (BYTE2(v298) ^ 0xF)) | 0xAFF9BB12) - (BYTE2(v298) ^ 0xF) - 1476189577) ^ 0x57FCDDA3)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (((v291 & 0x46 ^ 0x81C4B345) + (v291 & 0xB9) - 1) ^ 0x81C4B347)) ^ *(_DWORD *)(v47 + 4 * (BYTE1(v297) ^ 0xF6u)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * HIBYTE(v296));
  v337 = v334 ^ 0xFFB74CCC ^ (v335 ^ 0xFB344C00) & (v334 << 8);
  v338 = *(_DWORD *)(v47 + 4 * (BYTE1(v291) ^ 0x99u)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                    + 4 * (BYTE2(v297) ^ 0x18u)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * v296) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v298) ^ 0x15));
  v339 = (v313 + 426680276) ^ ((v325 & 0x6B86BFD3 ^ 0xB06B213)
                             - ((2 * (v325 & 0x6B86BFD3 ^ 0xB06B213)) & 0x55013A86)
                             - 1096245917) ^ *(_DWORD *)(v47 + 4 * (v312 ^ 0x76DBB546u)) ^ (v327 - 57983755) ^ v329;
  v340 = *(_DWORD *)(*(_QWORD *)(v46 - 128)
                   + 4
                   * (((((v298 & 0x25) + (v298 ^ 0xEA008465)) | 0x14E40000)
                     - ((v298 ^ 0xEA008465) & 0xA008025)) ^ 0xF4E4040E)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v297) ^ 0x50)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (((BYTE2(v291) ^ 0x6C) + (HIWORD(v291) & 0x42 ^ 0x3139CC02) - ((BYTE2(v291) ^ 0x6C) & 0x42)) ^ 0x3139CCC8)) ^ *(_DWORD *)(v47 + 4 * BYTE1(v296));
  v341 = (HIWORD(v338) & 0x81 ^ 0xC85F301) + (HIWORD(v338) & 0x7E ^ 0x4F) - 1;
  v342 = v339 ^ (2
               * ((v337 << 16) & 0x7FB70000 ^ v337 ^ ((v337 << 16) ^ 0x4CCC0000) & (((v335 ^ 0x483000C) << 8) & 0x7FB70000 ^ 0x48B30000 ^ (((v335 ^ 0x483000C) << 8) ^ 0xB74C0000) & (v335 ^ 0x483000C))));
  v343 = ((2 * (BYTE2(v340) ^ 0xF)) & 0xFFFFFFF7) - (BYTE2(v340) ^ 0xF) - 1927063292;
  v344 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v342) ^ 0x2D)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                       + 4
                                                                                       * (((HIWORD(v336) & 0x7C ^ 0xB9D8CB05)
                                                                                         + (HIWORD(v336) & 0x83)
                                                                                         - 1) ^ 0xB9D8CBB0));
  v345 = ((2 * (v336 ^ 0x6C)) & 0xA0) - (v336 ^ 0x6C);
  v346 = *(_DWORD *)(*(_QWORD *)(v46 - 128)
                   + 4
                   * ((((2 * (v342 ^ 0xE6)) | 0x39178618) - (v342 ^ 0xE6) + 1668562164) ^ 0x9C8BC3E3)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (((v341 & 0x52A ^ 0x61022C2B) + (v341 & 0x2D5 ^ 0x808850C1) - 1) ^ 0xE18A7F3C)) ^ *(_DWORD *)(v47 + 4 * (((BYTE1(v340) ^ 0x1002436) + ((v340 >> 8) & 0x35 ^ 0xE2335B01) - ((BYTE1(v340) ^ 0x1002436) & 0x435)) ^ 0xE3337B65)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v336) ^ 0xC9));
  v347 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v338) ^ 0xDA)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                       + 4
                                                                                       * (((v343 & 0x2087F ^ 0x40008021)
                                                                                         + (v343 ^ 0x23CF7E5E)
                                                                                         - ((v343 ^ 0x23CF7E5E) & 0xA208087F)) ^ 0x4CE6AFA3));
  HIDWORD(a16) = *(_DWORD *)(v47
                           + 4
                           * (((BYTE1(v338) ^ 0xFFFFFF5D) + 1210889555 + ((2 * BYTE1(v338)) | 0x6FA6955C)) ^ 0xB7D34AD1));
  v348 = (v344 & 0xA2940104 ^ 0xAF7054D) + (v344 & 0x15001032 ^ 0x14000001) - 2;
  v349 = *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (((v340 & 0xED ^ 0x1D3) - (v340 & 0x12)) ^ 0x143));
  v350 = (((2 * (v344 & 0x486BEEC9 ^ 0xCAD81E7)) & 0x101096C2) - (v344 & 0x486BEEC9 ^ 0xCAD81E7) - 990399346) ^ 0x8C730519;
  v351 = *(_DWORD *)(v47 + 4 * (BYTE1(v342) ^ 0xCFu));
  HIDWORD(v691) = v351 ^ v347;
  v352 = (((v347 ^ 0x6642868F) - 1715635855) ^ ((v347 ^ 0x8404E965) + 2080052891) ^ ((v347 ^ 0x2EE31CBF) - 786635967))
       - (((v351 ^ v347 ^ 0x80FBF097) + 2130972521) ^ ((v351 ^ v347 ^ 0x74E7A18E) - 1961337230) ^ ((v351 ^ v347 ^ 0x1254DEE1)
                                                                                                 - 307551969))
       + 513631553;
  v353 = (v352 ^ 0xC7BE7D5F) & (2 * (v352 & 0xC7BF7E1C)) ^ v352 & 0xC7BF7E1C;
  v354 = v349 ^ HIDWORD(a16) ^ v348 & 0x4101094 ^ ((1878148067 - (v350 | 0x6FF243E3) + (v350 | 0x900DBC1C)) ^ 0x27A24746) & (v348 & 0xB7B511FE ^ 0x6DCEEFA7);
  v355 = ((2 * (v352 ^ 0xC1F27947)) ^ 0xC9A0EB6) & (v352 ^ 0xC1F27947) ^ (2 * (v352 ^ 0xC1F27947)) & 0x64D075A;
  v356 = (v355 ^ 0x4080010) & (4 * v353) ^ v353;
  v357 = ((4 * (v355 ^ 0x2450149)) ^ 0x19341D6C) & (v355 ^ 0x2450149) ^ (4 * (v355 ^ 0x2450149)) & 0x64D0758;
  v358 = ((16 * (v357 ^ 0x6490213)) ^ 0x64D075B0) & (v357 ^ 0x6490213) ^ (16 * (v357 ^ 0x6490213)) & 0x64D0750;
  v359 = (v357 ^ 0x40553) & (16 * v356) ^ v356 ^ 0x64D075B ^ (v358 ^ 0x4400500) & (((v357 ^ 0x40553) & (16 * v356) ^ v356) << 8);
  v360 = ((v358 ^ 0x20D024B) << 8) & 0x64D0000 ^ 0x2480000 ^ (((v358 ^ 0x20D024B) << 8) ^ 0x4D070000) & (v358 ^ 0x20D024B);
  v361 = -265589801
       - (((v351 ^ 0xF7AF2433) + 139516877) ^ ((v351 ^ 0x6EB7DC8) - 116096456) ^ ((v351 ^ 0xDBA9A556) + 609639082));
  v362 = (v361 ^ 0xF2E4D679) & (2 * (v361 & 0xE4E6977C)) ^ v361 & 0xE4E6977C;
  v363 = ((2 * (v361 ^ 0xFA61D881)) ^ 0x3D0E9FFA) & (v361 ^ 0xFA61D881) ^ (2 * (v361 ^ 0xFA61D881)) & 0x1E874FFC;
  v364 = (v363 ^ 0x14060FF0) & (4 * v362) ^ v362;
  v365 = ((4 * (v363 ^ 0x2814005)) ^ 0x7A1D3FF4) & (v363 ^ 0x2814005) ^ (4 * (v363 ^ 0x2814005)) & 0x1E874FFC;
  v366 = (v365 ^ 0x1A050FE0) & (16 * v364) ^ v364;
  v367 = ((16 * (v365 ^ 0x4824009)) ^ 0xE874FFD0) & (v365 ^ 0x4824009) ^ (16 * (v365 ^ 0x4824009)) & 0x1E874FF0;
  v368 = v366 ^ 0x1E874FFD ^ (v367 ^ 0x8044F00) & (v366 << 8);
  v369 = (((2 * (BYTE1(v336) ^ 0x7C)) | 0xBD154408) - (BYTE1(v336) ^ 0x7C) + 561339900) ^ 0x96BA22D5;
  v370 = v361 ^ v351 ^ v352 ^ (2
                             * ((v368 << 16) & 0x1E870000 ^ v368 ^ v359 ^ ((v368 << 16) ^ 0x4FFD0000) & (((v367 ^ 0x1683002D) << 8) & 0x1E870000 ^ 0x18800000 ^ (((v367 ^ 0x1683002D) << 8) ^ 0x874F0000) & (v367 ^ 0x1683002D)) ^ (v359 << 16) & 0x64D0000 ^ ((v359 << 16) ^ 0x75B0000) & v360));
  v371 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v340) ^ 0x8C)) ^ *(_DWORD *)(v47
                                                                                       + 4
                                                                                       * ((-152715915
                                                                                         - (v369 | 0xF6E5BD75)
                                                                                         + (v369 | 0x91A428A)) ^ 0x412AC280));
  v372 = (((v347 ^ 0x94595249) + 1806085559) ^ ((v347 ^ 0x2C1FE4D6) - 740287702) ^ ((v347 ^ 0x74E3C5CA) - 1961084362))
       + 1967548268
       + (((v370 ^ 0xC540C915) + 2020190874) ^ ((v370 ^ 0x4AF3BE95) - 136651494) ^ ((v370 ^ 0xA60BF301) + 455250062));
  v373 = (v372 ^ 0x8AADA0D2) & (2 * (v372 & 0xC2CD24DB)) ^ v372 & 0xC2CD24DB;
  v374 = ((2 * (v372 ^ 0x8A3FE842)) ^ 0x91E59932) & (v372 ^ 0x8A3FE842) ^ (2 * (v372 ^ 0x8A3FE842)) & 0x48F2CC98;
  v375 = (v374 ^ 0x608010) & (4 * v373) ^ v373;
  HIDWORD(v688) = BYTE2(v346);
  v376 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (BYTE2(v342) ^ 0x3Fu)) ^ v371 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                                                                                              + 4
                                                                                              * (v338 ^ 0xFEu));
  v377 = *(_DWORD *)(*(_QWORD *)(v46 - 136)
                   + 4
                   * (((BYTE2(v346) ^ 0x64) + 1922205000 - ((2 * (BYTE2(v346) ^ 0x64)) & 0x108) + 60) ^ 0x72928548u)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v354) ^ 0x3D));
  v378 = (BYTE1(v354) ^ 0xFFFFFFD1) + 1281643139 + ((2 * BYTE1(v354)) | 0x67375AFC);
  v379 = (v354 ^ 0xE03AD86D | 0x6FD99447)
       - (v354 ^ 0xE03AD86D | 0x90266BB8)
       - 1876530248;
  v380 = ((4 * (v374 ^ 0x48124489)) ^ 0x23CB3264) & (v374 ^ 0x48124489) ^ (4 * (v374 ^ 0x48124489)) & 0x48F2CC98;
  v381 = ((HIWORD(v354) & 0xFB ^ 0x8BBF2EEF) - (HIWORD(v354) & 4)) ^ 0x89BD0EA8;
  v382 = ((16 * (v380 ^ 0x4830CC99)) ^ 0x8F2CC990) & (v380 ^ 0x4830CC99) ^ (16 * (v380 ^ 0x4830CC99)) & 0x48F2CC90;
  v383 = (((2 * (BYTE1(v376) ^ 0x48)) | 0xB3603C84) - (BYTE1(v376) ^ 0x48) + 642769342) ^ 0x8DF49C06;
  *(_DWORD *)(v46 - 244) = v376;
  HIDWORD(v689) = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v346) ^ 0x85));
  HIDWORD(a19) = *(_DWORD *)(v47 + 4 * ((v383 - ((2 * v383) & 0xAA377B6C) + 1427881398) ^ 0x15F3F36));
  v384 = *(_DWORD *)(*(_QWORD *)(v46 - 128)
                   + 4 * (((v379 & 0x8A6003E7 ^ 0x501013A2) + (v379 & 0x5834C18 ^ 0x83C419) - 1) ^ 0xDF709B33)) ^ HIDWORD(v689) ^ HIDWORD(a19);
  LODWORD(v689) = v346;
  LODWORD(v690) = v346;
  LODWORD(v691) = *(_DWORD *)(*(_QWORD *)(v46 - 136)
                            + 4 * (((HIWORD(v376) & 5) + (HIWORD(v376) & 0xFA ^ 0x23B) - 1) ^ 0x283));
  v385 = *(_DWORD *)(v47 + 4 * (v378 ^ 0xB39BAD47)) ^ v691 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                                                                         + 4
                                                                         * (((v346 ^ 0x8A72B9)
                                                                           - ((2 * (v346 ^ 0x8A72B9)) & 0x100C48A)
                                                                           - 1932171451) ^ 0x8C5F15C1));
  v386 = (v380 ^ 0xC20000) & (16 * v375) ^ v375 ^ 0x48F2CC99 ^ (v382 ^ 0x820C800) & (((v380 ^ 0xC20000) & (16 * v375) ^ v375) << 8);
  HIDWORD(v690) = BYTE1(v346);
  v387 = *(_DWORD *)(v47
                   + 4
                   * ((888105530 - (BYTE1(v346) ^ 0xAE | 0x34EF6A3A) + (BYTE1(v346) ^ 0xAE | 0x4B1095C5)) ^ 0x4B10955Cu));
  LODWORD(v692) = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v376) ^ 0xD3));
  v388 = v692 ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((v381 - ((2 * v381) & 0x404016A) - 1499998283) ^ 0xA495F7F5));
  v389 = (((v387 ^ 0xD1D517BE) + 774563906) ^ ((v387 ^ 0xD1859DB3) + 779772493) ^ ((v387 ^ 0x2ABD76A0) - 717059744))
       - (((v387 ^ v388 ^ 0xDED80A5) - 233668773) ^ ((v387 ^ v388 ^ 0x68DC7CB3) - 1759280307) ^ ((v387 ^ v388 ^ 0x837973EE)
                                                                                               + 2089192466))
       - 2107735321;
  v390 = (v389 ^ 0xF904C9CF) & (2 * (v389 & 0xC246E9CE)) ^ v389 & 0xC246E9CE;
  v391 = ((2 * (v389 ^ 0xF9880A4B)) ^ 0x779DC70A) & (v389 ^ 0xF9880A4B) ^ (2 * (v389 ^ 0xF9880A4B)) & 0x3BCEE384;
  v392 = ((v382 ^ 0x40D20409) << 8) & 0x48F20000 ^ 0x8320000 ^ (((v382 ^ 0x40D20409) << 8) ^ 0x72CC0000) & (v382 ^ 0x40D20409);
  v393 = (v391 ^ 0x130CC300) & (4 * v390) ^ v390;
  v394 = ((4 * (v391 ^ 0x8422085)) ^ 0xEF3B8E14) & (v391 ^ 0x8422085) ^ (4 * (v391 ^ 0x8422085)) & 0x3BCEE384;
  v395 = ((v386 << 16) ^ 0x4C990000) & v392;
  v396 = ((16 * (v394 ^ 0x10C46181)) ^ 0xBCEE3850) & (v394 ^ 0x10C46181) ^ (16 * (v394 ^ 0x10C46181)) & 0x3BCEE380;
  v397 = (v394 ^ 0x2B0A8200) & (16 * v393) ^ v393 ^ 0x3BCEE385 ^ (v396 ^ 0x38CE2000) & (((v394 ^ 0x2B0A8200) & (16 * v393) ^ v393) << 8);
  v398 = ((v397 << 16) ^ 0x63850000) & (((v396 ^ 0x300C385) << 8) & 0x3BCE0000 ^ 0x310C0000 ^ (((v396 ^ 0x300C385) << 8) ^ 0x4EE30000) & (v396 ^ 0x300C385));
  v399 = 2075194379
       - (((v388 ^ 0x4FF3DBFF) - 1341381631) ^ ((v388 ^ 0xE5406BD9) + 448762919) ^ ((v388 ^ 0x6616C373) - 1712767859));
  v400 = (v399 ^ 0xB70D981A) & (2 * (v399 & 0xB7A998A0)) ^ v399 & 0xB7A998A0;
  v401 = ((2 * (v399 ^ 0x991EA95A)) ^ 0x5D6E63F4) & (v399 ^ 0x991EA95A) ^ (2 * (v399 ^ 0x991EA95A)) & 0x2EB731FA;
  v402 = (v401 ^ 0xC262180) & (4 * v400) ^ v400;
  HIDWORD(v692) = (v386 << 16) & 0x48F20000 ^ v386 ^ v395;
  v403 = *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((v345 + 1455) ^ 0x509u));
  v702 = v372 ^ v403;
  v404 = v372 ^ v403 ^ (2 * HIDWORD(v692));
  v405 = ((4 * (v401 ^ 0x2291100A)) ^ 0xBADCC7E8) & (v401 ^ 0x2291100A) ^ (4 * (v401 ^ 0x2291100A)) & 0x2EB731F8;
  v406 = (v405 ^ 0x2A9401E0) & (16 * v402) ^ v402;
  v407 = ((16 * (v405 ^ 0x4233012)) ^ 0xEB731FA0) & (v405 ^ 0x4233012) ^ (16 * (v405 ^ 0x4233012)) & 0x2EB731F0;
  v408 = v406 ^ 0x2EB731FA ^ (v407 ^ 0x2A331100) & (v406 << 8);
  v409 = v399 ^ v388 ^ v389 ^ (2
                             * ((v408 << 16) & 0x2EB70000 ^ v408 ^ ((v408 << 16) ^ 0x31FA0000) & (((v407 ^ 0x484205A) << 8) & 0x2EB70000 ^ 0x8860000 ^ (((v407 ^ 0x484205A) << 8) ^ 0xB7310000) & (v407 ^ 0x484205A)) ^ v397 ^ (v397 << 16) & 0x3BCE0000 ^ v398));
  LODWORD(v688) = *(_DWORD *)(*(_QWORD *)(v46 - 128)
                            + 4
                            * ((((2 * (v376 ^ 0x80A4047B)) & 0x4009D4)
                              - (v376 ^ 0x80A4047B)
                              - 1148892395) ^ 0x3B214F3D));
  v410 = v377 ^ v688 ^ *(_DWORD *)(*(_QWORD *)(v46 - 200) + 4 * (BYTE1(v404) ^ 0x95u));
  v411 = v385 ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v404) ^ 0x7D));
  v412 = (v404 & 0xAB) + (v404 & 0x54 ^ 0x7B7EC051) - 1;
  v413 = (((v387 ^ 0xB219FE4) - 186752996) ^ ((v387 ^ 0xBD8105A0) + 1115617888) ^ ((v387 ^ 0x9C4D66E9) + 1672648983))
       + 420803801
       + (((v409 ^ 0x8597D8CF) - 1713953924) ^ ((v409 ^ 0xE16CE7D1) - 47440794) ^ ((v409 ^ 0xF12E99DB) - 311532944));
  v414 = (v413 ^ 0xF3B095B) & (2 * (v413 & 0x8843AA62)) ^ v413 & 0x8843AA62;
  v415 = ((2 * (v413 ^ 0x1FBB1D1F)) ^ 0x2FF16EFA) & (v413 ^ 0x1FBB1D1F) ^ (2 * (v413 ^ 0x1FBB1D1F)) & 0x97F8B77C;
  v416 = v384 ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                          + 4
                          * (((BYTE2(v404) ^ 0xD7) + (HIWORD(v404) & 0x6A ^ 0x4FF28) - ((BYTE2(v404) ^ 0xD7) & 0x6A)) ^ 0x4FFC4));
  v417 = (v415 ^ 0x3102218) & (4 * v414) ^ v414;
  v418 = ((4 * (v415 ^ 0x90089105)) ^ 0x5FE2DDF4) & (v415 ^ 0x90089105) ^ (4 * (v415 ^ 0x90089105)) & 0x97F8B77C;
  v419 = (v410 ^ 0xA9) + (v410 & 0x7C ^ 0xB54) - ((v410 ^ 0xA9) & 0x7C);
  v420 = (v385 ^ *(_BYTE *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v404) ^ 0x7D))) ^ 0x69;
  v421 = v420 + (v411 & 0x95 ^ 0x1B1F4694) - (v420 & 0x95);
  v422 = v413 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                          + 4
                          * (((v412 & 0x5940CDD4 ^ 0x80010C80) + (v412 ^ 0x7F56E37C) - ((v412 ^ 0x7F56E37C) & 0x204DD4)) ^ 0xDD49EE50));
  v423 = (v421 & 0x100409F ^ 0x24A08802) + (v421 ^ 0x5B4C62DD) - ((v421 ^ 0x5B4C62DD) & 0x40009F);
  v424 = ((BYTE1(v410) ^ 0xEF) - ((2 * (BYTE1(v410) ^ 0xEF)) & 0x9E) + 862364495) ^ 0x32D6A24B;
  v425 = 1665433139 - (v424 | 0x63447E33) + (v424 | 0x9CBB81CC);
  v426 = (v384 ^ *(_BYTE *)(*(_QWORD *)(v46 - 136)
                                           + 4
                                           * (((BYTE2(v404) ^ 0xD7)
                                             + (HIWORD(v404) & 0x6A ^ 0x4FF28)
                                             - ((BYTE2(v404) ^ 0xD7) & 0x6A)) ^ 0x4FFC4))) ^ 0x7127D0;
  v427 = v426 + (v416 & 2 ^ 0xDB801002) - (v426 & 0x100102);
  v428 = v344 ^ HIDWORD(a16);
  v429 = (((v344 ^ HIDWORD(a16) ^ 0x85BB3998) + 2051327592) ^ ((v344 ^ HIDWORD(a16) ^ 0x7224CB31) - 1915013937) ^ ((v344 ^ HIDWORD(a16) ^ 0x11D77D51) - 299334993))
       - (((v349 ^ v344 ^ HIDWORD(a16) ^ 0x732C5638) - 1932285496) ^ ((v349 ^ v344 ^ HIDWORD(a16) ^ 0xC3218AF)
                                                                    - 204609711) ^ ((v349 ^ v344 ^ HIDWORD(a16) ^ 0x791703ED)
                                                                                  - 2031551469));
  v430 = (v418 ^ 0x17E09560) & (16 * v417) ^ v417;
  v431 = v429 + 985340012;
  v432 = ((v429 + 985340012) ^ 0x11342809) & (2 * ((v429 + 985340012) & 0xA5842A12)) ^ (v429 + 985340012) & 0xA5842A12;
  v433 = ((16 * (v418 ^ 0x80182209)) ^ 0x7F8B77D0) & (v418 ^ 0x80182209) ^ (16 * (v418 ^ 0x80182209)) & 0x97F8B770;
  v434 = ((2 * (v431 ^ 0x18347829)) ^ 0x7B60A476) & (v431 ^ 0x18347829) ^ (2 * (v431 ^ 0x18347829)) & 0xBDB0523A;
  v435 = (v434 ^ 0x38200010) & (4 * v432) ^ v432;
  v436 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v410) ^ 0xDE)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                       + 4 * (BYTE2(v416) ^ 0x99u));
  v437 = ((4 * (v434 ^ 0x84905209)) ^ 0xF6C148EC) & (v434 ^ 0x84905209) ^ (4 * (v434 ^ 0x84905209)) & 0xBDB05238;
  v438 = (v437 ^ 0xB4804020) & (16 * v435) ^ v435;
  v439 = ((16 * (v437 ^ 0x9301213)) ^ 0xDB0523B0) & (v437 ^ 0x9301213) ^ (16 * (v437 ^ 0x9301213)) & 0xBDB05230;
  v440 = *(_DWORD *)(*(_QWORD *)(v46 - 200) + 4 * (BYTE1(v416) ^ 0x9Bu)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                       + 4
                                                                                       * (((BYTE2(v410) ^ 0xFFFFFFF1)
                                                                                         - 567985374
                                                                                         + ((2 * BYTE2(v410)) | 0x43B589BE)) ^ 0x21DAC4E9));
  v441 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v416) ^ 0x5D)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                                                                                       + 4 * (BYTE2(v411) ^ 0xA9u));
  v442 = v438 ^ 0xBDB0523B ^ (v439 ^ 0x99000200) & (v438 << 8);
  v443 = v441 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (v419 ^ 0xB40u));
  v444 = ((v442 << 16) ^ 0x523B0000) & (((v439 ^ 0x24B0500B) << 8) & 0x3DB00000 ^ 0xDA00000 ^ (((v439 ^ 0x24B0500B) << 8) ^ 0x30520000) & (v439 ^ 0x24B0500B));
  v445 = -1738499054
       - (((v349 ^ 0x15914D1E) - 361843998) ^ ((v349 ^ 0x420AACBC) - 1107995836) ^ ((v349 ^ 0xB7DA2320) + 1210440928));
  v446 = (v445 ^ 0xC61D3D69) & (2 * (v445 & 0x875DA16C)) ^ v445 & 0x875DA16C;
  v447 = ((2 * (v445 ^ 0xC6353FB9)) ^ 0x82D13DAA) & (v445 ^ 0xC6353FB9) ^ (2 * (v445 ^ 0xC6353FB9)) & 0x41689ED4;
  v448 = (v447 ^ 0x400C80) & (4 * v446) ^ v446;
  v449 = ((4 * (v447 ^ 0x41288255)) ^ 0x5A27B54) & (v447 ^ 0x41288255) ^ (4 * (v447 ^ 0x41288255)) & 0x41689ED4;
  v450 = v436 ^ *(_DWORD *)(*(_QWORD *)(v46 - 200) + 4 * (BYTE1(v411) ^ 0x71u));
  v451 = (v449 ^ 0x1201A40) & (16 * v448) ^ v448;
  v452 = ((16 * (v449 ^ 0x40488481)) ^ 0x1689ED50) & (v449 ^ 0x40488481) ^ (16 * (v449 ^ 0x40488481)) & 0x41689ED0;
  v453 = v451 ^ 0x41689ED5 ^ (v452 ^ 0x88C00) & (v451 << 8);
  v454 = (v453 << 16) & 0x41680000 ^ v453 ^ ((v453 << 16) ^ 0x1ED50000) & (((v452 ^ 0x41601285) << 8) & 0x41680000 ^ 0x1600000 ^ (((v452 ^ 0x41601285) << 8) ^ 0x689E0000) & (v452 ^ 0x41601285)) ^ v442 ^ (v442 << 16) & 0x3DB00000 ^ v444;
  v455 = v430 ^ 0x97F8B77D ^ (v433 ^ 0x17883700) & (v430 << 8);
  v456 = (((v349 ^ 0x96F7B251) + 1762151855) ^ ((v349 ^ 0xD0DD79BD) + 790791747) ^ ((v349 ^ 0xA66B096E) + 1502934674))
       - (((v428 ^ 0xFDCE907D) + 36794243) ^ ((v428 ^ 0x950F5117) + 1794158313) ^ ((v428 ^ 0x8E894E92) + 1903604078))
       - (((v445 ^ v349 ^ v431 ^ (2 * v454) ^ 0x78453E16) + 1176912421) ^ ((v445 ^ v349 ^ v431 ^ (2 * v454) ^ 0x98B798A)
                                                                         + 937952697) ^ ((v445 ^ v349 ^ v431 ^ (2 * v454) ^ 0x6A0797BC)
                                                                                       + 1415900047))
       - 1842443172;
  v457 = (v456 ^ 0x8D64493C) & (2 * (v456 & 0x8D755241)) ^ v456 & 0x8D755241;
  v458 = ((2 * (v456 ^ 0x874E493E)) ^ 0x147636FE) & (v456 ^ 0x874E493E) ^ (2 * (v456 ^ 0x874E493E)) & 0xA3B1B7E;
  v459 = (v458 ^ 0x32120C) & (4 * v457) ^ v457;
  v460 = ((4 * (v458 ^ 0xA090901)) ^ 0x28EC6DFC) & (v458 ^ 0xA090901) ^ (4 * (v458 ^ 0xA090901)) & 0xA3B1B7C;
  v461 = (v460 ^ 0x8280970) & (16 * v459) ^ v459;
  v462 = ((v433 ^ 0x8070802D) << 8) & HIDWORD(a12) ^ 0x7480000 ^ (((v433 ^ 0x8070802D) << 8) ^ 0x78B70000) & (v433 ^ 0x8070802D);
  v463 = *(_QWORD *)(v46 - 256);
  v464 = ((16 * (v460 ^ 0x2131203)) ^ 0xA3B1B7F0) & (v460 ^ 0x2131203) ^ (16 * (v460 ^ 0x2131203)) & 0xA3B1B70;
  v465 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v411) ^ 2)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 200)
                                                                                    + 4 * (v425 ^ 0x9D0B80C6)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (v427 ^ 0xDBE13600));
  v466 = v461 ^ 0xA3B1B7F ^ (v464 ^ 0x2311300) & (v461 << 8);
  v467 = ((v466 << 16) ^ 0x1B7F0000) & (((v464 ^ 0x80A080F) << 8) & 0xA3B0000 ^ (((v464 ^ 0x80A080F) << 8) ^ 0x3B1B0000) & (v464 ^ 0x80A080F) ^ 0x200000);
  v468 = ((v455 << 16) ^ 0x377D0000) & v462;
  v469 = 1950095740
       - (((v428 ^ 0x62A8210A) - 1655185674) ^ ((v428 ^ 0x502D09F2) - 1345128946) ^ ((v428 ^ 0xD4CDA700) + 724719872));
  v470 = (v469 ^ 0x947A5629) & (2 * (v469 & 0xA57B568C)) ^ v469 & 0xA57B568C;
  v471 = ((2 * (v469 ^ 0xDC5AF221)) ^ 0xF243495A) & (v469 ^ 0xDC5AF221) ^ (2 * (v469 ^ 0xDC5AF221)) & 0x7921A4AC;
  v472 = (v471 ^ 0x30010000) & (4 * v470) ^ v470;
  v473 = ((4 * (v471 ^ 0x920A4A5)) ^ 0xE48692B4) & (v471 ^ 0x920A4A5) ^ (4 * (v471 ^ 0x920A4A5)) & 0x7921A4AC;
  v474 = (v473 ^ 0x600080A0) & (16 * v472) ^ v472;
  v475 = ((16 * (v473 ^ 0x19212409)) ^ 0x921A4AD0) & (v473 ^ 0x19212409) ^ (16 * (v473 ^ 0x19212409)) & 0x7921A4A0;
  v476 = v474 ^ 0x7921A4AD ^ (v475 ^ 0x1000002D) & (v474 << 8);
  v477 = v469 ^ v428 ^ v456 ^ (2
                             * ((v476 << 16) & 0x79210000 ^ v476 ^ ((v476 << 16) ^ 0x24AD0000) & (((v475 ^ 0x6921A42D) << 8) & 0x79210000 ^ 0x58010000 ^ (((v475 ^ 0x6921A42D) << 8) ^ 0x21A40000) & (v475 ^ 0x6921A42D)) ^ v466 ^ (v466 << 16) & 0xA3B0000 ^ v467));
  v478 = v422 ^ (2 * ((v455 << 16) & 0x17F80000 ^ v455 ^ v468));
  v479 = (BYTE2(v478) ^ 0xFC) - ((2 * (BYTE2(v478) ^ 0xFC)) & 0x10A);
  v480 = ((unsigned __int16)(v422 ^ (2 * (v455 ^ v468))) >> 8) ^ 0xF4;
  v481 = (((v349 ^ 0xF2345B25) + 231449819) ^ ((v349 ^ 0x56126676) - 1444046454) ^ ((v349 ^ 0x4467FFD1) - 1147666385))
       - 1023575748
       + (((v477 ^ 0xE46BE0B2) - 784398710) ^ ((v477 ^ 0x90CB4989) - 1516261453) ^ ((v477 ^ 0x8E75DAA) + 1035189138));
  v482 = (v481 ^ 0x9735B453) & (2 * (v481 & 0xD431369B)) ^ v481 & 0xD431369B;
  v483 = ((2 * (v481 ^ 0xB775F945)) ^ 0xC6899FBC) & (v481 ^ 0xB775F945) ^ (2 * (v481 ^ 0xB775F945)) & 0x6344CFDE;
  v484 = (v483 ^ 0x40008E9E) & (4 * v482) ^ v482;
  v485 = ((4 * (v483 ^ 0x21444042)) ^ 0x8D133F78) & (v483 ^ 0x21444042) ^ (4 * (v483 ^ 0x21444042)) & 0x6344CFDC;
  v486 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v478) ^ 0xB8)) ^ v440 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                                                                                              + 4
                                                                                              * (v423 ^ 0x65B3ECAFu));
  v487 = (v485 ^ 0x1000F50) & (16 * v484) ^ v484;
  v485 ^= 0x6244C086u;
  v488 = 16 * v485;
  v489 = ((16 * v485) ^ 0x344CFDE0) & v485;
  v490 = v450 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * ((v422 ^ (2 * (v455 ^ v468))) ^ 0x58u));
  v491 = *(_QWORD *)(v46 - 200);
  v492 = v489 ^ v488 & 0x6344CFD0;
  v493 = v487 ^ 0x6344CFDE ^ (v492 ^ 0x2044CD00) & (v487 << 8);
  v494 = (693812035 - (v480 | 0x295ABB43) + (v480 | 0xD6A544BC)) ^ 0x96BC54BD;
  v495 = v481 ^ (2
               * ((v493 << 16) & 0x63440000 ^ v493 ^ ((v493 << 16) ^ 0x4FDE0000) & (((v492 ^ 0x4300021E) << 8) & 0x63440000 ^ 0x23000000 ^ (((v492 ^ 0x4300021E) << 8) ^ 0x44CF0000) & (v492 ^ 0x4300021E))));
  v496 = HIDWORD(v691) ^ v403;
  v497 = (((2 * (HIDWORD(v688) ^ 0xD3)) & 0x19A) - (HIDWORD(v688) ^ 0xD3) + 1152469298) ^ 0x4521026A;
  v498 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((v497 - ((2 * v497) & 0x209510) + 978406024) ^ 0x3BC101ABu));
  v499 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v495) ^ 0xD8));
  v500 = *(_DWORD *)(v491 + 4 * ((-741992431 - (v494 | 0xD3C61811) + (v494 | 0x2C39E7EE)) ^ 0x6C20F7E0)) ^ v443;
  v501 = v465 ^ *(_DWORD *)(*(_QWORD *)(v46 - 136)
                          + 4
                          * ((((2 * ((v479 - 903982715) ^ 0xEA12416F)) & 0x400815F8)
                            - ((v479 - 903982715) ^ 0xEA12416F)
                            + 126571779) ^ 0x27874506));
  v502 = (((v498 ^ 0xCE632888) + 832362360) ^ ((v498 ^ 0xAEC7A79E) + 1362647138) ^ ((v498 ^ 0x8D61E081) + 1922965375))
       - (((v498 ^ v499 ^ 0xBE65F5E3) + 1100614173) ^ ((v498 ^ v499 ^ 0x8831D470) + 2010000272) ^ ((v498 ^ v499 ^ 0xFAF152C6)
                                                                                                 + 84847930))
       + 1180697445;
  v503 = (v502 ^ 0x903FFED9) & (2 * (v502 & 0xDABFF8DD)) ^ v502 & 0xDABFF8DD;
  v504 = ((2 * (v502 ^ 0xB4283EFB)) ^ 0xDD2F8C4C) & (v502 ^ 0xB4283EFB) ^ (2 * (v502 ^ 0xB4283EFB)) & 0x6E97C626;
  v505 = (v504 ^ 0x4C078404) & (4 * v503) ^ v503;
  v506 = ((4 * (v504 ^ 0x22904222)) ^ 0xBA5F1898) & (v504 ^ 0x22904222) ^ (4 * (v504 ^ 0x22904222)) & 0x6E97C624;
  v507 = (v506 ^ 0x2A170000) & (16 * v505) ^ v505;
  v508 = ((16 * (v506 ^ 0x4480C626)) ^ 0xE97C6260) & (v506 ^ 0x4480C626) ^ (16 * (v506 ^ 0x4480C626)) & 0x6E97C620;
  v509 = v507 ^ 0x6E97C626 ^ (v508 ^ 0x68144200) & (v507 << 8);
  v510 = ((v509 << 16) ^ 0x46260000) & (((v508 ^ 0x6838406) << 8) & 0x6E970000 ^ 0x68110000 ^ (((v508 ^ 0x6838406) << 8) ^ 0x97C60000) & (v508 ^ 0x6838406));
  v511 = -210060267
       - (((v499 ^ 0x789F771A) - 2023716634) ^ ((v499 ^ 0xA286FA61) + 1568212383) ^ ((v499 ^ 0xFB7991B9) + 75918919));
  v512 = (v511 ^ 0xE335B688) & (2 * (v511 & 0xEB252729)) ^ v511 & 0xEB252729;
  v513 = ((2 * (v511 ^ 0x213DB888)) ^ 0x94313F42) & (v511 ^ 0x213DB888) ^ (2 * (v511 ^ 0x213DB888)) & 0xCA189FA0;
  v514 = (v513 ^ 0x80101D00) & (4 * v512) ^ v512;
  v515 = ((4 * (v513 ^ 0x4A0880A1)) ^ 0x28627E84) & (v513 ^ 0x4A0880A1) ^ (4 * (v513 ^ 0x4A0880A1)) & 0xCA189FA0;
  v516 = (v515 ^ 0x8001E80) & (16 * v514) ^ v514;
  v517 = ((16 * (v515 ^ 0xC2188121)) ^ 0xA189FA10) & (v515 ^ 0xC2188121) ^ (16 * (v515 ^ 0xC2188121)) & 0xCA189FA0;
  v518 = v516 ^ 0xCA189FA1 ^ (v517 ^ 0x80089A00) & (v516 << 8);
  v519 = v511 ^ v499 ^ v502 ^ (2
                             * ((v518 << 16) & 0x4A180000 ^ v518 ^ ((v518 << 16) ^ 0x1FA10000) & (((v517 ^ 0x4A1005A1) << 8) & 0xCA180000 ^ 0x42000000 ^ (((v517 ^ 0x4A1005A1) << 8) ^ 0x189F0000) & (v517 ^ 0x4A1005A1)) ^ v509 ^ (v509 << 16) & 0x6E970000 ^ v510));
  v520 = (((v498 ^ 0xECF6E169) + 319364759) ^ ((v498 ^ 0x438194A8) - 1132565672) ^ ((v498 ^ 0x42B21A56) - 1118968406))
       - 606144475
       + (((v519 ^ 0x9B873B71) - 757754468) ^ ((v519 ^ 0x4D965A1C) + 80016631) ^ ((v519 ^ 0x17F91155) + 1588314048));
  v521 = (v520 ^ 0x48A3DA1F) & (2 * (v520 & 0x892B989F)) ^ v520 & 0x892B989F;
  v522 = ((2 * (v520 ^ 0x4AB0DB2D)) ^ 0x87368764) & (v520 ^ 0x4AB0DB2D) ^ (2 * (v520 ^ 0x4AB0DB2D)) & 0xC39B43B2;
  v523 = (v522 ^ 0x1120220) & (4 * v521) ^ v521;
  v524 = ((4 * (v522 ^ 0x40894092)) ^ 0xE6D0EC8) & (v522 ^ 0x40894092) ^ (4 * (v522 ^ 0x40894092)) & 0xC39B43B0;
  v525 = (v524 ^ 0x2090280) & (16 * v523) ^ v523;
  v526 = ((16 * (v524 ^ 0xC1924132)) ^ 0x39B43B20) & (v524 ^ 0xC1924132) ^ (16 * (v524 ^ 0xC1924132)) & 0xC39B43B0;
  v527 = v525 ^ 0xC39B43B2 ^ (v526 ^ 0x1900300) & (v525 << 8);
  v528 = ((2 * (BYTE2(v496) ^ 0x2A)) & 0x48) - (BYTE2(v496) ^ 0x2A) + 1543188955;
  v529 = *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (v495 ^ 0xD0u)) ^ HIDWORD(a19) ^ HIDWORD(v689) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (((v528 & 0xA121CFB ^ 0x20000C21) + (v528 ^ 0x5F5FF2DA) - ((v528 ^ 0x5F5FF2DA) & 0x9CFB)) ^ 0x2EB65FE9u));
  v530 = (v690 ^ 0xDA) + (v689 & 0xE5 ^ 0xDC841025) - ((v690 ^ 0xDA) & 0xE5);
  v531 = (v530 & 0x4000048D ^ 0x38A489) + (v530 ^ 0x5A045026) - ((v530 ^ 0x5A045026) & 0x8080048D);
  v532 = *(_DWORD *)(v491
                   + 4
                   * (((BYTE1(v496) ^ 0x45D5081)
                     + ((v496 >> 8) & 0xCD ^ 0xD922A94C)
                     - ((BYTE1(v496) ^ 0x45D5081) & 0x41000CD)) ^ 0xD96FF9EB)) ^ v688 ^ v520;
  v533 = ((v527 << 16) ^ 0x43B20000) & (((v526 ^ 0xC20B4092) << 8) & 0x439B0000 ^ 0x40980000 ^ (((v526 ^ 0xC20B4092) << 8) ^ 0x1B430000) & (v526 ^ 0xC20B4092));
  v534 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (((HIDWORD(v691) ^ v403) >> 24) ^ 0x59)) ^ v691 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (v531 ^ 0x4638E4A9)) ^ *(_DWORD *)(v491 + 4 * ((269314504 - (BYTE1(v495) ^ 0x60 | 0x100D69C8) + (BYTE1(v495) ^ 0x60 | 0x2FF29637)) ^ 0x2FF2966Eu));
  v535 = (v527 << 16) & 0x439B0000 ^ v527;
  v536 = (2003765404 - (HIDWORD(v690) ^ 0xF3 | 0x776F089C) + (HIDWORD(v690) ^ 0xF3 | 0x8890F763)) ^ 0xC9925563;
  v537 = v536 - ((2 * v536) & 0xED4BEAF8);
  v538 = (((2 * (BYTE2(v495) ^ 0xA9)) & 0x6C) - (BYTE2(v495) ^ 0xA9) + 90135241) ^ 0x5DF1AC8;
  v539 = ((2 * v538) & 0x7EE) - v538;
  v540 = (v496 & 0x81) - 2078351105 + (v496 & 0x7E ^ 0x8400879);
  v541 = ((v534 ^ 0xB0771F0D) + 1334370547) ^ ((v534 ^ 0xA6CAA36A) + 1496669334) ^ ((v534 ^ 0x10B4F11D) - 280293661);
  if ((v534 & 1) != 0)
    v542 = 605779610;
  else
    v542 = 605779612;
  v543 = v542 + 456007680 + v541;
  v544 = (v543 ^ 0x943FA49F) & (2 * (v543 & 0xC6BFB6DF)) ^ v543 & 0xC6BFB6DF;
  v545 = ((2 * (v543 ^ 0x9C15ED2D)) ^ 0xB554B7E4) & (v543 ^ 0x9C15ED2D) ^ (2 * (v543 ^ 0x9C15ED2D)) & 0x5AAA5BF2;
  v546 = v535 ^ v533;
  v547 = ((4 * (v545 ^ 0x4AAA4812)) ^ 0x6AA96FC8) & (v545 ^ 0x4AAA4812) ^ (4 * (v545 ^ 0x4AAA4812)) & 0x5AAA5BF0;
  v548 = (v547 ^ 0x4AA84BC0) & (16 * ((v545 ^ 0x100013E0) & (4 * v544) ^ v544)) ^ (v545 ^ 0x100013E0) & (4 * v544) ^ v544;
  v549 = ((16 * (v547 ^ 0x10021032)) ^ 0xAAA5BF20) & (v547 ^ 0x10021032) ^ (16 * (v547 ^ 0x10021032)) & 0x5AAA5BF0;
  v550 = v548 ^ 0x5AAA5BF2 ^ (v549 ^ 0xAA01B00) & (v548 << 8);
  v551 = v543 ^ (2
               * ((v550 << 16) & 0x5AAA0000 ^ v550 ^ ((v550 << 16) ^ 0x5BF20000) & (((v549 ^ 0x500A40D2) << 8) & 0x5AAA0000 ^ 0x50A00000 ^ (((v549 ^ 0x500A40D2) << 8) ^ 0x2A5B0000) & (v549 ^ 0x500A40D2))));
  v552 = v532 ^ (2 * v546);
  v553 = *(_DWORD *)(v491 + 4 * ((v537 + 1990587772) ^ 0x37A757B8)) ^ v692 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                                                                                         + 4 * (v540 ^ 0x8C5EE9C1)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((v539 - 408461304) ^ 0xE727208C));
  HIDWORD(v554) = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v552) ^ 0x9B));
  LODWORD(v554) = HIDWORD(v554);
  v555 = (BYTE1(v552) ^ 0x54) - ((2 * (BYTE1(v552) ^ 0x54)) & 0xF0) - 142115208;
  v556 = ((2 * (v552 ^ 5)) | 0x47048434) - (v552 ^ 5) + 1551744486;
  v557 = (v556 & 0x71B909C4 ^ 0x713809C0) + (v556 ^ 0x82C3423C) - ((v556 ^ 0x82C3423C) & 0x71B909C4);
  v558 = v551 ^ 0xC20F3D51;
  v559 = *(_DWORD *)(v491 + 4 * ((unsigned __int16)(v551 ^ 0x3D51) >> 8)) ^ __ROR4__((v554 >> 3) ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * (BYTE2(v529) ^ 0x99u)), 3) ^ 0x70D00FA1, 29);
  v560 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v529) ^ 0x5D)) ^ *(_DWORD *)(v491
                                                                                       + 4
                                                                                       * ((794952521
                                                                                         - (BYTE1(v553) ^ 0xD7 | 0x2F620349)
                                                                                         + (BYTE1(v553) ^ 0xD7 | 0xD09DFCB6)) ^ 0xD09DFCD1)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((v551 ^ 0xC20F3D51) >> 16));
  v561 = ((2 * (BYTE2(v552) ^ 0xF2)) & 0x84) - (BYTE2(v552) ^ 0xF2);
  v562 = v559 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128)
                          + 4
                          * ((((2 * v553) | 0x373F967E) - v553 + 1684026561) ^ 0x9B9FCB07));
  v563 = ((v490 ^ 0x1E5E131E) + 595685347) ^ ((v490 ^ 0x47CF1FD4) + 2047894313) ^ ((v490 ^ 0xB4FBB9B1) - 1994078898);
  v564 = v560 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (v557 ^ 0x50F809DC));
  v565 = ((v500 ^ 0xE2A6BE8C) + 1858419426) ^ ((v500 ^ 0xD3464273) + 1596311071) ^ ((v500 ^ 0x871A9F2C) + 192486210);
  v566 = *(_DWORD *)(*(_QWORD *)(v46 - 136)
                   + 4
                   * (((BYTE2(v553) ^ 0x6B070359) - ((2 * (BYTE2(v553) ^ 0x6B070359)) & 0x6020398) + 323038668) ^ 0x78462E8Cu)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * (((((v529 & 0x1F ^ 0x727E6B17) & 0x3D9 | v529 & 0xC0) ^ 0x406450D0) + (((v529 & 0x1F ^ 0x727E6B17) & 0x26 | v529 & 0x20) ^ 0x21012805) - 1) ^ 0x61657B11)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * HIBYTE(v558)) ^ *(_DWORD *)(v491 + 4 * (((v555 & 0xB083058D ^ 0x8008005) + (v555 ^ 0xF79B27B8) - ((v555 ^ 0xF79B27B8) & 0x10598D)) ^ 0xB88F8494));
  v567 = ((v486 ^ 0x9A469364) + 711304520) ^ ((v486 ^ 0x6CF486F) - 1226015155) ^ ((v486 ^ 0xFFC379F1) + 1340100563);
  v568 = *(_DWORD *)(*(_QWORD *)(v46 - 144) + 4 * (HIBYTE(v553) ^ 0xD7)) ^ *(_DWORD *)(v491
                                                                                       + 4 * (BYTE1(v529) ^ 0x9Bu));
  v569 = ((v501 ^ 0x1522F60A) - 438697359) ^ ((v501 ^ 0xE6EBDA09) + 370355828) ^ ((v501 ^ 0x419373BB) - 1318352958);
  v570 = v565
       - (((v564 ^ 0x9F6B7767) + 1802985407) ^ ((v564 ^ 0x8208AD1A) + 1981056452) ^ ((v564 ^ 0xAB99B9AE) + 1602589048))
       + 752629688;
  v571 = (v570 ^ 0x831BD36B) & (2 * (v570 & 0x8B83E403)) ^ v570 & 0x8B83E403;
  v572 = ((2 * (v570 ^ 0x8519936F)) ^ 0x1D34EED8) & (v570 ^ 0x8519936F) ^ (2 * (v570 ^ 0x8519936F)) & 0xE9A776C;
  v573 = (v572 ^ 0xC102008) & (4 * v571) ^ v571;
  v574 = ((4 * (v572 ^ 0x28A1124)) ^ 0x3A69DDB0) & (v572 ^ 0x28A1124) ^ (4 * (v572 ^ 0x28A1124)) & 0xE9A776C;
  v575 = (v574 ^ 0xA085520) & (16 * v573) ^ v573;
  v576 = ((16 * (v574 ^ 0x492224C)) ^ 0xE9A776C0) & (v574 ^ 0x492224C) ^ (16 * (v574 ^ 0x492224C)) & 0xE9A7760;
  v577 = v568 ^ *(_DWORD *)(*(_QWORD *)(v46 - 128) + 4 * v558);
  v578 = v575 ^ 0xE9A776C ^ (v576 ^ 0x8827600) & (v575 << 8);
  v579 = *(_DWORD *)(*(_QWORD *)(v46 - 136) + 4 * ((v561 + 3005) ^ 0xBEBu)) ^ v577;
  v580 = v563
       - (((v562 ^ 0x8E9100D2) - 1496450796) ^ ((v562 ^ 0xEFD1E0B3) - 947054221) ^ ((v562 ^ 0xAAA2811) + 586600913))
       + 564296592;
  v581 = (v580 ^ 0xF1E5A92D) & (2 * (v580 & 0xF505CD89)) ^ v580 & 0xF505CD89;
  v582 = ((2 * (v580 ^ 0xF3ED222D)) ^ 0xDD1DF48) & (v580 ^ 0xF3ED222D) ^ (2 * (v580 ^ 0xF3ED222D)) & 0x6E8EFA4;
  v583 = (v582 ^ 0x4004E00) & (4 * v581) ^ v581;
  v584 = ((4 * (v582 ^ 0x22820A4)) ^ 0x1BA3BE90) & (v582 ^ 0x22820A4) ^ (4 * (v582 ^ 0x22820A4)) & 0x6E8EFA4;
  v585 = ((v576 ^ 0x618012C) << 8) & 0xE9A0000 ^ 0x4880000 ^ (((v576 ^ 0x618012C) << 8) ^ 0x1A770000) & (v576 ^ 0x618012C);
  v586 = ((16 * (v584 ^ 0x4484124)) ^ 0x6E8EFA40) & (v584 ^ 0x4484124) ^ (16 * (v584 ^ 0x4484124)) & 0x6E8EFA0;
  v587 = (v584 ^ 0x2A0AE80) & (16 * v583) ^ v583 ^ 0x6E8EFA4 ^ (v586 ^ 0x688EA00) & (((v584 ^ 0x2A0AE80) & (16 * v583) ^ v583) << 8);
  v588 = (v587 << 16) & 0x6E80000 ^ v587 ^ ((v587 << 16) ^ 0x6FA40000) & (((v586 ^ 0x6005A4) << 8) & 0x6E80000 ^ (((v586 ^ 0x6005A4) << 8) ^ 0x68EF0000) & (v586 ^ 0x6005A4) ^ 0x6000000);
  v589 = v569
       - (((v566 ^ 0xE21858B5) - 1216138327) ^ ((v566 ^ 0x1019DF4) + 1419441898) ^ ((v566 ^ 0x51439AF9) + 81326565))
       + 931336059;
  v590 = (v589 ^ 0x99832B6F) & (2 * (v589 & 0xDD2B434E)) ^ v589 & 0xDD2B434E;
  v591 = ((2 * (v589 ^ 0x1BC12B6F)) ^ 0x8DD4D042) & (v589 ^ 0x1BC12B6F) ^ (2 * (v589 ^ 0x1BC12B6F)) & 0xC6EA6820;
  v592 = (v591 ^ 0x84C00000) & (4 * v590) ^ v590;
  v593 = ((4 * (v591 ^ 0x422A2821)) ^ 0x1BA9A084) & (v591 ^ 0x422A2821) ^ (4 * (v591 ^ 0x422A2821)) & 0xC6EA6820;
  v594 = (v593 ^ 0x2A82000) & (16 * v592) ^ v592;
  v595 = ((16 * (v593 ^ 0xC4424821)) ^ 0x6EA68210) & (v593 ^ 0xC4424821) ^ (16 * (v593 ^ 0xC4424821)) & 0xC6EA6820;
  v596 = v594 ^ 0xC6EA6821 ^ (v595 ^ 0x46A20000) & (v594 << 8);
  v597 = ((v578 << 16) ^ 0x776C0000) & v585;
  v598 = (v578 << 16) & 0xE9A0000 ^ v578;
  v599 = ((v596 << 16) ^ 0x68210000) & (((v595 ^ 0x80486821) << 8) & 0x46EA0000 ^ 0x4820000 ^ (((v595 ^ 0x80486821) << 8) ^ 0x6A680000) & (v595 ^ 0x80486821));
  v600 = (v596 << 16) & 0x46EA0000 ^ v596;
  v601 = ((v579 ^ 0x8E2F5F3) - 1806194441) ^ ((v579 ^ 0x31DE43E6) - 1385488668) ^ ((v579 ^ 0x5A7614EF) - 960280085);
  v602 = v567 - v601 - 1389953488;
  v603 = (v602 ^ 0xE8CC0866) & (2 * (v602 & 0xF0EC8887)) ^ v602 & 0xF0EC8887;
  v604 = ((2 * (v602 ^ 0x9D5186E)) ^ 0xF27321D2) & (v602 ^ 0x9D5186E) ^ (2 * (v602 ^ 0x9D5186E)) & 0xF93990E8;
  v605 = (v604 ^ 0xC0300000) & (4 * v603) ^ v603;
  v606 = ((4 * (v604 ^ 0x9089029)) ^ 0xE4E643A4) & (v604 ^ 0x9089029) ^ (4 * (v604 ^ 0x9089029)) & 0xF93990E8;
  v607 = (v606 ^ 0xE02000A0) & (16 * v605) ^ v605;
  v608 = ((16 * (v606 ^ 0x19199049)) ^ 0x93990E90) & (v606 ^ 0x19199049) ^ (16 * (v606 ^ 0x19199049)) & 0xF93990E0;
  v609 = v607 ^ 0xF93990E9 ^ (v608 ^ 0x91190000) & (v607 << 8);
  v610 = v602 ^ (2
               * ((v609 << 16) & 0x79390000 ^ v609 ^ ((v609 << 16) ^ 0x10E90000) & (((v608 ^ 0x68209069) << 8) & 0x79390000 ^ 0x40290000 ^ (((v608 ^ 0x68209069) << 8) ^ 0x39900000) & (v608 ^ 0x68209069))));
  v611 = 978103281 * (v570 ^ (2 * (v598 ^ v597)) ^ 0x7F53149F);
  v612 = 1956340293 * (v589 ^ (2 * (v600 ^ v599)) ^ 0x17D900BC);
  v613 = v611 + 1675840517 * (v580 ^ (2 * v588) ^ 0x2AA5F707);
  v614 = -1043016975 * (v610 ^ 0xBF91E171);
  v615 = v611 - v612;
  v616 = v612 - v614;
  v617 = v614 ^ v613;
  v618 = v615 - v617;
  v619 = v613 - v616;
  v620 = v617 - (v615 - v617);
  v621 = v619 - v620 + 43900868 - ((2 * (v619 - v620)) & 0x53BBF88);
  v622 = v616 - v619;
  v623 = v621 ^ v618;
  v624 = (((v562 ^ 0xF104CEC5) - 648530171) ^ ((v562 ^ 0x9B0F2C6B) - 1286351445) ^ ((v562 ^ 0x1E12ADE) + 700306208))
       - (((v621 ^ 0xFB104DC0) + 82817600) ^ ((v621 ^ 0x5F8E5CBA) - 1603165370) ^ ((v621 ^ 0xA603CEBE) + 1509699906));
  v625 = ((2
         * (((2 * ((v623 ^ 0x29DDFC4) & v622 ^ 0x22010262)) & 0x607F3938) - ((v623 ^ 0x29DDFC4) & v622 ^ 0x22010262))
         + 528533190) ^ 0x5B82C202)
       + ((v622 - ((2 * v622) & 0x2FF8725A) + 402405677) ^ 0x1561E6E9 ^ v623);
  v626 = (((v566 ^ 0x3CB5D0A9) + 1764670389) ^ ((v566 ^ 0x8DAC2D0A) - 667466216) ^ ((v566 ^ 0x343A21B) + 1457047815))
       - v625
       - 929849610;
  v627 = (((v564 ^ 0x6D0B5643) - 1726513509) ^ ((v564 ^ 0x729BCA9E) - 2037915064) ^ ((v564 ^ 0xA96AFF0E) + 1568069592))
       - (((v623 ^ 0xA7A8DA53) + 1295434566) ^ ((v623 ^ 0xBFF9F8CA) + 1432871389) ^ ((v623 ^ 0x1ACCFD5D) - 263003060))
       + 819839258;
  v628 = v620 - v625;
  v629 = v601 - v628 + 536059505;
  v630 = *(_QWORD *)(v46 - 160);
  v631 = a12 ^ *(_DWORD *)(v630 + 4 * ((unsigned __int16)(v624 - 5124) >> 8)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 208) + 4 * HIBYTE(v626)) ^ *(_DWORD *)(v463 + 4 * ((((v564 ^ 0x43) - 101) ^ ((v564 ^ 0x9E) + 72) ^ ((v564 ^ 0xE) - 40)) - (((v623 ^ 0x53) + 70) ^ ((v623 ^ 0xCA) - 35) ^ ((v623 ^ 0x5D) + 76)) + 26)) ^ *(_DWORD *)(*(_QWORD *)(v46 - 184) + 4 * (v629 >> (v628 & 0x10) >> (v628 & 0x10 ^ 0x10)));
  v632 = (v631 - 1006729006 - ((2 * v631) & 0x87FD11A4)) ^ a38;
  v633 = (uint64_t)*(&off_1015B46D0 + SHIDWORD(a10));
  v634 = *(unsigned __int8 *)(v633 + (BYTE2(v632) ^ 0x34));
  v635 = *(_DWORD *)(*(_QWORD *)(v46 - 208) + 4 * ((v624 - 512955396) >> 24));
  v636 = *(_DWORD *)(*(_QWORD *)(v46 - 184) + 4 * BYTE2(v627));
  v637 = *(_DWORD *)(v463 + 4 * v629);
  v638 = *(_DWORD *)(v630 + 4 * BYTE1(v626));
  v639 = *(_DWORD *)(*(_QWORD *)(v46 - 208) + 4 * HIBYTE(v627));
  v640 = *(_DWORD *)(*(_QWORD *)(v46 - 184) + 4 * ((v624 - 512955396) >> 16));
  v641 = *(_DWORD *)(*(_QWORD *)(v46 - 184) + 4 * BYTE2(v626));
  v642 = *(_DWORD *)(v463 + 4 * (v624 - 4));
  v643 = *(_DWORD *)(v630 + 4 * BYTE1(v627));
  LODWORD(v630) = *(_DWORD *)(v630 + 4 * BYTE1(v629));
  v644 = *(_DWORD *)(v463 + 4 * v626);
  v645 = *(_DWORD *)(*(_QWORD *)(v46 - 208) + 4 * HIBYTE(v629));
  *(_BYTE *)(a45 + v696) = ((v634 >> 5) | (8 * v634)) ^ (2 * v634) & 0x1A ^ 0x90;
  v646 = v635 ^ HIDWORD(a31) ^ v636 ^ v638;
  v647 = *(_QWORD *)(v46 - 208);
  v648 = v646 ^ v637;
  v649 = a12 ^ v640 ^ v643 ^ v644;
  v650 = -1021299810
       - (((v648 ^ 0x5A9414B5) - 1519654069) ^ ((v648 ^ 0xC1632953) + 1050465965) ^ ((v648 ^ 0xC252A42F) + 1034771409));
  v651 = (v650 ^ 0xFBB9AA59) & (2 * (v650 & 0xE33A3299)) ^ v650 & 0xE33A3299;
  v652 = ((2 * (v650 ^ 0x39ADEE79)) ^ 0xB52FB9C0) & (v650 ^ 0x39ADEE79) ^ (2 * (v650 ^ 0x39ADEE79)) & 0xDA97DCE0;
  v653 = (v652 ^ 0xD20198C0) & (4 * v651) ^ v651;
  v654 = ((4 * (v652 ^ 0x4A904420)) ^ 0x6A5F7380) & (v652 ^ 0x4A904420) ^ (4 * (v652 ^ 0x4A904420)) & 0xDA97DCE0;
  v655 = (v654 ^ 0x4A175080) & (16 * v653) ^ v653;
  v656 = ((16 * (v654 ^ 0x90808C60)) ^ 0xA97DCE00) & (v654 ^ 0x90808C60) ^ (16 * (v654 ^ 0x90808C60)) & 0xDA97DCE0;
  v657 = v655 ^ 0xDA97DCE0 ^ (v656 ^ 0x8815CC00) & (v655 << 8);
  v658 = v650 ^ v648 ^ (HIDWORD(a15)
                      - (((v648 ^ a19 ^ 0x62E9BA46) + 1045281403) ^ ((v648 ^ a19 ^ 0x9C6B710D) - 1060146894) ^ ((v648 ^ a19 ^ 0x34BD0F65) + 1746472794))) ^ (2 * ((v657 << 16) & 0x5A970000 ^ v657 ^ ((v657 << 16) ^ 0x5CE00000) & (((v656 ^ 0x528210E0) << 8) & HIDWORD(a11) ^ 0x48030000 ^ (((v656 ^ 0x528210E0) << 8) ^ 0x97DC0000) & (v656 ^ 0x528210E0))));
  v659 = (((v658 ^ 0x3DACDA24) - 688852903) ^ ((v658 ^ 0x8BFC78DB) + 1621119656) ^ ((v658 ^ 0x8E0B06F) - 474179052))
       + a15;
  v660 = (v659 - ((2 * v659 - 1247096210) & 0x87FD11A4) - 1630277111) ^ a38;
  v661 = (char *)*(&off_1015B46D0 + (int)a10) - 4;
  *(_BYTE *)(a45 + v693) = v661[HIBYTE(v660) ^ 9] ^ 0xB7;
  v662 = ((v649 ^ v645) - 1006729006 - ((2 * (v649 ^ v645)) & 0x87FD11A4)) ^ a38;
  v663 = (char *)*(&off_1015B46D0 + SHIDWORD(a9)) - 4;
  *(_BYTE *)(a45 + v694) = v663[BYTE1(v662) ^ 0xD2] ^ 0x86 ^ (v663[BYTE1(v662) ^ 0xD2] >> 1) & 0x56;
  *(_BYTE *)(a45 + v698) = (*(_DWORD *)(v46 - 244) ^ 0x53)
                         - (((*(_DWORD *)(v46 - 244) ^ 0x6B) + 53) ^ ((*(_DWORD *)(v46 - 244) ^ 0x49) + 23) ^ ((*(_DWORD *)(v46 - 244) ^ 0x71) + 47))
                         + (v663[BYTE1(v632) ^ 0xA6] ^ (v663[BYTE1(v632) ^ 0xA6] >> 1) & 0x56 ^ 0xF9)
                         + 13;
  v664 = *(unsigned __int8 *)(v633 + (BYTE2(v662) ^ 0xE4));
  *(_BYTE *)(a45 + (v693 + 13)) = ((v664 >> 5) | (8 * v664)) ^ (2 * v664) & 0x1A ^ 0x6B;
  v665 = ((2 * (v702 ^ ~(2 * BYTE4(v692)))) & 4 | 0xD9) - (~(_BYTE)v404 & 0x1A);
  v666 = *(unsigned __int8 *)(v633 + (BYTE2(v660) ^ 0xC8));
  *(_BYTE *)(a45 + v695) = ((v666 >> 5) | (8 * v666)) ^ (2 * v666) & 0x1A ^ 0x60;
  HIDWORD(v554) = (((v662 ^ 0x1E) << ((v665 ^ 0x3E) & 2) << ((v665 ^ 0x3E) & 0x1C ^ 4) << (v665 ^ 0xC1)) | (v662 >> 6)) ^ 0x480B54B;
  LODWORD(v554) = HIDWORD(v554);
  v667 = (uint64_t)*(&off_1015B46D0 + (int)a16 - 3518);
  v668 = *(_QWORD *)(v46 - 128);
  v669 = a11 ^ v639 ^ v641 ^ v630 ^ v642;
  *(_BYTE *)(a45 + v699) = ((v662 ^ 0xE3) + (v662 ^ 0x1E) + 1) ^ 0x86 ^ *(_BYTE *)(v667
                                                                                 + ((v554 >> 26) ^ 0x202D5215));
  LOWORD(v641) = (v669 & 0x8F ^ 0x8D07) + (v669 & 0x70 ^ 0x21) - 1;
  v670 = HIDWORD(a26);
  v671 = HIDWORD(a30);
  v672 = a31;
  *(_BYTE *)(a45 + v703) = *(_BYTE *)(v667 + (v660 ^ 0x6DLL)) ^ ((v660 ^ 0x44) + (v660 ^ 0xB9) + 1) ^ 0x5B;
  v673 = ((2 * (HIDWORD(a26) ^ 0xE8D005D5)) ^ 0x6FC7BF3C) & (HIDWORD(a26) ^ 0xE8D005D5) ^ (2
                                                                                         * (HIDWORD(a26) ^ 0xE8D005D5)) & 0x37E3DF9E;
  v674 = v673 ^ 0x10204082;
  v675 = (v673 ^ 0x25E39B9C) & (4 * (a31 & (HIDWORD(a26) ^ 0xDEB39143) ^ HIDWORD(a30))) ^ a31 & (HIDWORD(a26) ^ 0xDEB39143) ^ HIDWORD(a30);
  LODWORD(v630) = ((4 * v674) ^ 0xDF8F7E78) & v674;
  v676 = (4 * v674) & 0x37E3DF9C;
  v677 = *(_QWORD *)(v46 - 136);
  LODWORD(v630) = v630 ^ v676;
  v678 = (v630 ^ 0x17835E10) & (16 * v675) ^ v675;
  LODWORD(v630) = ((16 * (v630 ^ 0x20608186)) ^ 0x7E3DF9E0) & (v630 ^ 0x20608186) ^ (16 * (v630 ^ 0x20608186)) & 0x37E3DF90;
  *(_BYTE *)(a45 + *(_QWORD *)(v46 - 240)) = ((v669 ^ 0x92) + (v669 ^ 0x6F) + 1) ^ 0xB3 ^ *(_BYTE *)(v667 + (((v641 & 0x213 ^ 0x87298202) + (v641 & 0x1EC ^ 0x8520DCD) - 1) ^ 0x8F7B8E52));
  v679 = v678 ^ 0x37E3DF9E ^ (v630 ^ 0x3621D900) & (v678 << 8);
  *(_BYTE *)(a45 + v697) = v661[HIBYTE(v662) ^ 0x34] ^ 0x50;
  *(_BYTE *)(a45
           + (HIDWORD(a26) ^ (2
                            * ((v679 << 16) & 0x37E30000 ^ v679 ^ ((v679 << 16) ^ 0x5F9E0000) & (((v630 ^ 0x1C2061E) << 8) & 0x37E30000 ^ 0x14200000 ^ (((v630 ^ 0x1C2061E) << 8) ^ 0xE3DF0000) & (v630 ^ 0x1C2061E)))) ^ 0x9FF06575)
           + (~(HIDWORD(a34) ^ (4 * HIDWORD(a26))) & 4)) = v663[(BYTE1(v660) ^ 0x3B ^ -(BYTE1(v660) ^ 0x3B) ^ ((BYTE1(v660) ^ 0xFFFFFF39) + 254))
                                                              + 253] ^ 0x75 ^ (v663[(BYTE1(v660) ^ 0x3B ^ -(BYTE1(v660) ^ 0x3B) ^ ((BYTE1(v660) ^ 0xFFFFFF39) + 254)) + 253] >> 1) & 0x56;
  *(_BYTE *)(a45 + *(_QWORD *)(v46 - 232)) = v661[HIBYTE(v669) ^ 0xD3] ^ 0xD2;
  v680 = ((2 * (v670 ^ 0x5034CDE)) ^ 0xB4612D2A) & (v670 ^ 0x5034CDE) ^ (2 * (v670 ^ 0x5034CDE)) & 0xDA309694;
  v681 = (v680 ^ 0x92000080) & (4 * (v672 & (v670 ^ 0x9F23D84A) ^ v671)) ^ v672 & (v670 ^ 0x9F23D84A) ^ v671;
  v682 = ((4 * (v680 ^ 0x4A109295)) ^ 0x68C25A54) & (v680 ^ 0x4A109295) ^ (4 * (v680 ^ 0x4A109295)) & 0xDA309694;
  v683 = (v682 ^ 0x48001210) & (16 * v681) ^ v681;
  v684 = ((16 * (v682 ^ 0x92308481)) ^ 0xA3096950) & (v682 ^ 0x92308481) ^ (16 * (v682 ^ 0x92308481)) & 0xDA309690;
  v685 = v683 ^ 0xDA309695 ^ (v684 ^ 0x82000000) & (v683 << 8);
  LODWORD(v630) = ((HIDWORD(a34) ^ (4
                                  * ((((2 * (v670 ^ 0xED2D0E5A)) ^ 0x243DA822) & (v670 ^ 0xED2D0E5A) | 1) & (4 * (v672 & (v670 ^ 0xDF2B9A4A) ^ v671)) ^ v672 & (v670 ^ 0xDF2B9A4A) ^ v671))) & 0x14 | (2 * (v670 & 1))) ^ 0x31CA94;
  *(_BYTE *)(a45
           + (HIDWORD(a26) ^ (2
                            * ((v685 << 16) & 0x5A300000 ^ v685 ^ ((v685 << 16) ^ 0x16950000) & (((v684 ^ 0x58309685) << 8) & 0xDA300000 ^ 0x4A200000 ^ (((v684 ^ 0x58309685) << 8) ^ 0x30960000) & (v684 ^ 0x58309685)))) ^ 0x4F72F76A)
           + ((-1735474065 - (v630 | 0x988EC46F) + (v630 | 0x67713B90)) ^ 0x6740F112)) = ((v632 ^ 0x96) + (v632 ^ 0x6B) + 1) ^ 0x47 ^ *(_BYTE *)(v667 + (v632 ^ 0xBFLL));
  LODWORD(v633) = *(unsigned __int8 *)(v633 + (BYTE2(v669) ^ 0x1CLL));
  *(_BYTE *)(a45 + v701) = ((v633 >> 5) | (8 * v633)) ^ (2 * v633) & 0x1A ^ 0x13;
  *(_BYTE *)(a45 + v700) = v663[BYTE1(v669) ^ 0x26] ^ 0x63 ^ (v663[BYTE1(v669) ^ 0x26] >> 1) & 0x56;
  *(_BYTE *)(a45 + *(_QWORD *)(v46 - 216)) = v661[HIBYTE(v632) ^ 0xB9] ^ 0x73;
  v686 = (HIDWORD(a26) + 1549324837) < *(_DWORD *)(v46 - 192);
  if (*(_DWORD *)(v46 - 220) != (HIDWORD(a26) + 1549324837) < 0x7D24F7CA)
    v686 = *(_DWORD *)(v46 - 220);
  *(_DWORD *)(v46 - 244) = v662 ^ 0x77CA3C97;
  *(_DWORD *)(v46 - 220) = v632 ^ 0x6B538743;
  LODWORD(v691) = v669 ^ 0xE33A3773;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v46 - 120) + 8 * (int)((12360 * v686) ^ a16)) - 4))(71, 1332934506, 2559493231, v677, v668, a16, v647, HIDWORD(a34), a9, a10, a11, a12, a13, a14, a15, a16, v688, v689, a19,
           v690,
           v691,
           v692,
           v693,
           v694,
           v695,
           a26,
           v696,
           v697,
           v698,
           a30,
           a31,
           a32,
           v699,
           a34,
           v700,
           v701);
}

uint64_t sub_1001C525C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v16;
  uint64_t v17;

  v11 = *(_QWORD *)(v9 - 152);
  v12 = (void (*)(uint64_t))*(&off_1015B46D0 + (int)v11 - 3840);
  v16 = v7;
  v17 = v8;
  v12(v10);
  v12(v16);
  v12(*(_QWORD *)(v9 - 160));
  v12(a5);
  v12(a4);
  v12(v17);
  v12(a7);
  v12(*(_QWORD *)(v9 - 168) - 0x3236244B02E53B45);
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v9 - 120) + 8 * (int)v11))(*(_QWORD *)(v9 - 176));
}

_DWORD *sub_1001C52E8(_DWORD *result)
{
  int v1;

  *result = (v1 ^ 0x6AFFFF7F) - 11283486 + ((2 * v1) & 0xD5FFFEFE);
  return result;
}

uint64_t sub_1001C534C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) - 2142736129 * (((a1 | 0x683F36E0) - a1 + (a1 & 0x97C0C91F)) ^ 0xB67A2E9);
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1015B46D0 + (v1 ^ 0x3F2E)) + v1) - 4))();
}

uint64_t sub_1001C53C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((*(_DWORD *)(a1 + 8) + v2 < 2125669331) * ((30 * (v3 ^ 0x3EFD)) ^ 0x1568)) ^ (v3 + 5946)))
                            - 12))();
}

uint64_t sub_1001C5414@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v3 - 5517) * (v1 >= v2 + 4)) | v3)) - (v3 ^ 0x44EBu) + 20855))();
}

uint64_t sub_1001C544C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((240 * (((v1 < v2 + 7) ^ (((v3 - 60) ^ 0xF9) + 1)) & 1)) ^ v3))
                            - 4))();
}

uint64_t sub_1001C548C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((v3 ^ 0x653D) + 4221) ^ (2147 * (v3 ^ 0x653D))) * (v1 < v2 + 10)) ^ v3)))();
}

uint64_t sub_1001C54C4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((46 * (v1 != ((v2 - 2077823487) & 0x7BD93F7D) + 2125653383)) ^ v2))
                            - 8))();
}

uint64_t sub_1001C551C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v3 ^ 0x77D) - 14632) * (v1 < v2 + 27)) ^ v3 ^ 0x6EA1)) - 4))();
}

uint64_t sub_1001C5554@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8
                                             * ((v1 < v2 + 2125654689) | (8 * (v1 < v2 + 2125654689)) | (v2 - 278)))
                            - (v2 - 10354)
                            + 4290))();
}

uint64_t sub_1001C5598@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (46 * (v1 > v2 + 18)))) - (((v3 - 130) | 0x2E01u) ^ 0x3E4DLL)))();
}

uint64_t sub_1001C55E8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v3 + 17515) ^ (997 * (v1 < v2))))
                            - ((v3 - 1576090826) & 0x5DF137FF)
                            - ((v3 + 1219509591) & 0xB74FBDDE)
                            + 8584))();
}

uint64_t sub_1001C564C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((46 * (((v1 == v2 - 157) ^ (v3 + 47)) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_1001C56A0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((v1 < (int)((v2 + 1538128054) & 0xA451DED7 ^ 0x7EB33322))
                                * (((v2 - 6452) | 0xA62) ^ 0x2A0D)) ^ v2)))();
}

uint64_t sub_1001C56F8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((46 * (((v1 <= ((v3 + 11647) ^ (v2 - 1569))) ^ (v3 + 1)) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_1001C5744@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v1 - 11647)) - 8))();
}

_QWORD *sub_1001C5768(_QWORD *result)
{
  uint64_t v1;

  *result = v1;
  return result;
}

uint64_t sub_1001C5770@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((46 * (v1 != (v2 ^ 0x2E83) + 2125653380)) ^ v2)) - 8))();
}

uint64_t sub_1001C57B4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * (((v1 >= ((2 * v2) ^ 0x7EB34788)) * ((v2 ^ 0x22ED) - 4186)) ^ v2)))();
}

uint64_t sub_1001C57F0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((46
                                          * (((v3 + 1) ^ (v1 == ((19 * (v3 ^ 0x1381)) ^ (v2 - 1578)))) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_1001C5844@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((((19 * ((v3 + 715746943) & 0xD556BEFF ^ 0x3D02)) ^ 0x3E6B) * (v1 != v2)) ^ v3))
                            - 8))();
}

uint64_t sub_1001C58A0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((13 * (v1 < ((v2 - 6560) ^ 0x10C5) + v2 + 2125658494)) ^ v2)))();
}

uint64_t sub_1001C58DC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((46 * (((v1 - v2) | (v2 - v1)) >> 31)) ^ (v2 - 2125665054)))
                            - 8))();
}

uint64_t sub_1001C592C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v3 + 4292) ^ (46 * (v1 > v2 + 11))))
                            - (v3 + 15939)
                            - ((v3 + 15939) ^ 0xFFFFFFFFFFFFFF86)))();
}

uint64_t sub_1001C5980@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((46 * (((v1 == v2 + 20) ^ v3 ^ 0x83) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_1001C59C4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (46 * (v1 != v2 + 34))))
                            - (v3 + 11647)
                            + 15933))();
}

void sub_1001C5A08(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1872284299 * ((2 * (a1 & 0x5099C89E) - a1 + 795228001) ^ 0xC17988C);
  __asm { BR              X9 }
}

uint64_t sub_1001C5AB8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 - 120)
                              + 8
                              * (int)(((((v1 + 1747436769) ^ 0x97D82233) + ((v1 + 1747436769) & 0x97D838AF))
                                     * (*(_QWORD *)(a1 + 56) - 0x78A340174FA5BE1FLL == v2)) ^ (v1 + 7482))))();
}

uint64_t sub_1001C5B1C()
{
  int v0;
  _BYTE *v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 112) = *v1;
  *(_BYTE *)(v2 - 111) = v1[1];
  *(_BYTE *)(v2 - 110) = v1[2];
  *(_BYTE *)(v2 - 109) = v1[3];
  *(_BYTE *)(v2 - 108) = v1[4];
  *(_BYTE *)(v2 - 107) = v1[5];
  *(_BYTE *)(v2 - 106) = v1[6];
  *(_BYTE *)(v2 - 105) = v1[7];
  *(_BYTE *)(v2 - 104) = v1[8];
  *(_BYTE *)(v2 - 103) = v1[9];
  *(_BYTE *)(v2 - 102) = v1[10];
  *(_BYTE *)(v2 - 101) = v1[11];
  *(_BYTE *)(v2 - 100) = v1[12];
  *(_BYTE *)(v2 - 99) = v1[13];
  *(_BYTE *)(v2 - 98) = v1[14];
  *(_BYTE *)(v2 - 97) = v1[15];
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 - 120) + 8 * (v0 ^ 0x6827A7BF)))();
}

uint64_t sub_1001C5BC8(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 - 120)
                                        + 8 * ((3372 * (**(_DWORD **)(a1 + 24) == ((v1 + 10665) ^ 0x5A4C))) ^ v1))
                            - 12))();
}

uint64_t sub_1001C5C04()
{
  int v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  LODWORD(STACK[0x23C]) = (*(_DWORD *)(v2 + 4) ^ 0x7FD3BFF9)
                        - 1120088320
                        + ((*(_DWORD *)(v2 + 4) << (v1 ^ 0x4D)) & 0xFFA77FF2);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 - 120) + 8 * v0) - 12))();
}

uint64_t sub_1001C5C50(_QWORD *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v6;

  if (v2)
    v4 = a1[2] == 0;
  else
    v4 = 1;
  v6 = v4 || *a1 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 - 120)
                                        + 8
                                        * (((((v1 ^ v6) & 1) == 0) * (((v1 - 2076778067) & 0x7BC8F726) - 13055)) ^ v1))
                            - 12))();
}

uint64_t sub_1001C5CB0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  int v4;
  BOOL v6;

  v4 = *(_DWORD *)(a1 + 32) - a2;
  v6 = v4 == 2105080784 || (v4 & 0xE ^ 0xD) - (v4 & 1) != 13;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 - 120)
                                        + 8 * ((28997 * ((v6 ^ (v2 + 80 + v2 + 1)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_1001C5D18@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  uint64_t v17;

  *(_QWORD *)(v3 - 136) = v1;
  v4 = a1 | 0xA;
  v5 = ((a1 | 0xA) - 3962) | 0x2220u;
  v6 = ((a1 | 0xA) - 1896194939) & 0x7105D7EE;
  v7 = *(uint64_t (**)(uint64_t))(v2 + 8 * ((a1 | 0xA) ^ 0x2160));
  v8 = v7(1028);
  v9 = v7(1028);
  STACK[0x3B0] = v8;
  STACK[0x3B8] = v9;
  if (v8)
    v15 = v9 == 0;
  else
    v15 = 1;
  v16 = !v15;
  v17 = *(_QWORD *)(*(_QWORD *)(v3 - 120) + 8 * ((1961 * v16) ^ v4));
  STACK[0x228] = v5;
  *(_QWORD *)(v3 - 152) = v6;
  LODWORD(STACK[0x230]) = -42885;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 - ((v5 + 8646) ^ v6)))(v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1001C5DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  unsigned __int8 *v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  unsigned __int8 v68;
  int v69;
  char v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  BOOL v90;
  char v91;
  char v92;
  unsigned int v93;
  int v94;
  uint64_t v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned __int8 v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  uint64_t v139;
  char *v140;
  int v141;
  char *v142;
  unsigned __int16 v143;
  int v144;
  int v145;
  int v146;
  unsigned __int16 v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  char *v153;
  uint64_t v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  char *v163;
  char *v164;
  int v165;
  unsigned int v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unint64_t v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  char *v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  unint64_t v186;
  unsigned int v187;
  int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  char *v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  unsigned int v223;
  int v224;
  int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  unsigned int v253;
  int v254;
  int v255;
  int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unint64_t v271;
  int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  int v281;
  int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  int v359;
  int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  int v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  int v390;
  int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  int v397;
  int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  int v402;
  int v403;
  int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  int v410;
  int v411;
  unsigned int v412;
  int v413;
  int v414;
  int v415;
  unsigned int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  int v423;
  int v424;
  unsigned int v425;
  int v426;
  int v427;
  unsigned int v428;
  int v429;
  int v430;
  int v431;
  unsigned int v432;
  int v433;
  int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  unsigned int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  unsigned int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  unsigned int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  BOOL v498;
  unsigned int v499;
  unsigned int v500;
  int v501;
  int v502;
  unint64_t v503;
  int v504;
  int v505;
  uint64_t v506;
  int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  unint64_t v511;
  unint64_t v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  unsigned int v518;
  unsigned int v519;
  int v520;
  int v521;
  unsigned int v522;
  int v523;
  unsigned int v524;
  unsigned int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  int v535;
  int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  int v541;
  int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  unsigned int v547;
  int v548;
  int v549;
  unsigned int v550;
  unsigned int v551;
  int v552;
  unsigned int v553;
  unsigned int v554;
  int v555;
  unsigned int v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  unsigned int v561;
  int v562;
  unsigned int v563;
  int v564;
  int v565;
  unsigned int v566;
  int v567;
  int v568;
  int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  int v574;
  unsigned int v575;
  unsigned int v576;
  int v577;
  int v578;
  int v579;
  unsigned int v580;
  unsigned int v581;
  int v582;
  int v583;
  uint64_t v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  int v588;
  int v589;
  unsigned int v590;
  int v591;
  int v592;
  int v593;
  unsigned int v594;
  int v595;
  unsigned int v596;
  int v597;
  int v598;
  unsigned int v599;
  unsigned int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  int v622;
  BOOL v623;
  unsigned int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  int v644;
  unint64_t v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  int v649;
  unsigned int v650;
  int v651;
  int v652;
  int v653;
  uint64_t v654;
  unint64_t v655;
  int v656;
  unint64_t v657;
  uint64_t v658;
  unsigned int v659;
  unsigned int v660;
  uint64_t (*v661)(uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v662;
  unsigned int v663;
  int v664;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  int v671;

  STACK[0x338] = v63;
  v66 = *(_QWORD *)(v65 - 152);
  v67 = v66;
  v68 = *(_BYTE *)(*(_QWORD *)(v64 + 8 * (v66 ^ 0x512B)) + (v60[11] ^ 0x8FLL) - 12) + 41;
  v69 = *(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * (v66 ^ 0x5571)) + (v60[5] ^ 0xD1) - 8) ^ (((2 * v60[5]) ^ 0x68) + 11) ^ 0xB4 | ((*(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * (v66 ^ 0x55FB)) + (v60[14] ^ 0x14) - 12) ^ 0x9C) << 8) | ((*(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * ((int)v66 - 19950)) + (*v60 ^ 0xE9) - 8) ^ 0xC9) << 24) | ((v60[4] ^ 0x25 ^ *(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * (v66 ^ 0x5CF3)) + (v60[4] ^ 0x4FLL) - 12)) << 16);
  v70 = *(_BYTE *)(*(_QWORD *)(v64 + 8 * (v66 ^ 0x57FF)) + (v60[10] ^ 0xECLL) - 8);
  v71 = *(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * ((int)v66 - 21711)) + (v60[15] ^ 0x26) - 8);
  v72 = *(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * (v66 ^ 0x54B2)) + (v60[8] ^ 0x74) - 4) | (((*(_BYTE *)(*(_QWORD *)(v64 + 8 * ((int)v66 - 19607)) + (v60[9] ^ 0xEDLL)) - 76) ^ 0x15) << 16) | ((v60[1] ^ 0xE6 ^ *(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * ((int)v66 - 19363)) + (v60[1] ^ 0x45) - 8)) << 24) | ((((113 * v70) ^ (-30 * v70 - 78)) ^ 0xC8) << 8);
  v73 = ((*(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * ((int)v66 - 19656)) + (v60[13] ^ 0x5DLL)) ^ 0x88) << 16) | ((((v60[3] ^ 0xC3) + (v60[3] ^ 0xED) + *(_BYTE *)(*(_QWORD *)(v64 + 8 * (v67 ^ 0x52CAu)) + (v60[3] ^ 0xCLL)) + 2) ^ 0x8C) << 8) | ((v71 ^ ((v71 ^ 0x5C) >> 4) ^ ((v71 ^ 0x5C) >> 1) ^ 0x43) << 24) | (*(_BYTE *)(*(_QWORD *)(v64 + 8 * (v67 - 19820)) + (v60[2] ^ 1) - 4) - 36) ^ 0x68;
  v74 = v73 ^ v69 ^ ((((*(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * (int)(*(_QWORD *)(v65 - 152) - 20263))
                                           + (v60[7] ^ 0x90))
                      + 47) ^ 0xAE) << 24) | (((*(_BYTE *)(*(_QWORD *)(v64 + 8 * (v67 ^ 0x5211u))
                                                                          + (v60[12] ^ 0x92)
                                                                          - 12)
                                                               + 51) ^ 0x65) << 16) | ((*(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * (v67 ^ 0x52D0u)) + (v60[6] ^ 0x48)) ^ 0x4E) << 8) | v68 ^ 0xB1);
  v75 = v73 ^ v69 ^ v72;
  v76 = v73 ^ v72 ^ v74;
  v77 = v74 ^ 0x63CE8C94;
  v78 = v73 ^ 0xC6C5881D;
  v79 = *(_QWORD *)(v64 + 8 * (v67 ^ 0x5E4Au));
  v80 = *(_QWORD *)(v65 - 152);
  v81 = *(_QWORD *)(v64 + 8 * (v67 - 21378)) - 8;
  v82 = *(_DWORD *)(v81
                  + 4
                  * (((unsigned __int16)(v73 ^ v69 ^ (((*(unsigned __int8 *)(*(_QWORD *)(v64 + 8 * (v67 ^ 0x52D0u))
                                                                                            + (v60[6] ^ 0x48)) ^ 0x4E) << 8) | v68 ^ 0xB1)) >> 8) ^ 0xC8u)) ^ 0xC6E829FB;
  v83 = (*(_DWORD *)(v79 + 4 * ((v73 ^ 0xC6C5881D) >> 16)) + 818486191) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (HIBYTE(v76) ^ 0xC9)) ^ 0xC6E829FB, 24) ^ ((v82 >> (v68 & 8) >> (v68 & 8 ^ 8)) + (v82 << 24)) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (v75 ^ 0x6Cu)) + 818486191) ^ 0x6FE94FBE, 16);
  v84 = *(_DWORD *)(v81 + 4 * (BYTE2(v76) ^ 0x11u)) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (HIBYTE(v75) ^ 0x22)) ^ 0xC6E829FB, 24);
  v85 = *(_QWORD *)(v64 + 8 * ((int)v80 - 21527)) - 12;
  v86 = *(_DWORD *)(v81 + 4 * ((unsigned __int16)(v73 ^ 0x881D) >> 8)) ^ 0xC6E829FB;
  *(_QWORD *)(v65 - 128) = v61;
  v87 = v84 ^ __ROR4__(v86, 8) ^ __ROR4__(*(_DWORD *)(v85 + 4 * v77) ^ 0x676C671E, 16);
  v88 = *(_DWORD *)(v85 + 4 * (BYTE2(v75) ^ 0xB4u)) ^ __ROR4__((*(_DWORD *)(v79 + 4 * HIBYTE(v77)) + 818486191) ^ 0x6FE94FBE, 24);
  v89 = v73 ^ 0x1D;
  LODWORD(STACK[0x2CC]) = v62;
  v90 = v89 >= 0xAD;
  if (v89 >= 0xAD)
    v89 -= 173;
  v91 = v78 + 83;
  if (!v90)
    v91 = v73 ^ 0x1D;
  if (v89)
    v92 = 0;
  else
    v92 = v91;
  v93 = *(_DWORD *)(v81 + 4 * BYTE2(v77)) ^ __ROR4__((*(_DWORD *)(v79 + 4 * HIBYTE(v78)) + 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (BYTE1(v75) ^ 0xD8u)) ^ 0x676C671E, 8) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (v76 ^ 0xB9u)) ^ 0x676C671E, 16) ^ 0x30514CC6;
  v94 = v88 ^ __ROR4__(*(_DWORD *)(v85 + 4 * (BYTE1(v76) ^ 5u)) ^ 0x676C671E, 8) ^ __ROR4__((*(_DWORD *)(v79+ 4 * ((v78 - v92) ^ 0x7Au))+ 818486191) ^ 0x6FE94FBE, 16);
  v95 = *(_QWORD *)(v64 + 8 * (v80 ^ 0x57E0));
  v96 = *(_DWORD *)(v95 + 4 * (BYTE2(v94) ^ 0xEEu)) ^ __ROR4__(*(_DWORD *)(v85 + 4 * HIBYTE(v93)) ^ 0x676C671E, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * ((unsigned __int16)(v87 ^ 0xCB6C) >> 8)) ^ 0x676C671E, 8) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (v83 ^ 0xF9u)) ^ 0xC6E829FB, 16);
  v97 = v94 ^ 0x5040D30D;
  v98 = *(_DWORD *)(v81 + 4 * BYTE2(v93)) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (HIBYTE(v83) ^ 0xDA)) ^ 0xC6E829FB, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * ((unsigned __int16)(v94 ^ 0xD30D) >> 8)) ^ 0x676C671E, 8) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (v87 ^ 0x6Cu)) ^ 0x676C671E, 16);
  v99 = *(_DWORD *)(v95 + 4 * (BYTE2(v83) ^ 0x31u)) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (HIBYTE(v87) ^ 0xC1)) ^ 0x676C671E, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * BYTE1(v93)) ^ 0x676C671E, 8) ^ __ROR4__(*(_DWORD *)(v95+ 4* (v94 ^ 0xA3u)) ^ 0x26B51CC2, 16);
  v100 = (*(_DWORD *)(v79 + 4 * ((v87 ^ 0x479CB6C) >> 16)) + 818486191) ^ __ROR4__((*(_DWORD *)(v79 + 4 * HIBYTE(v97))+ 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (BYTE1(v83) ^ 0x4Eu)) ^ 0x676C671E, 8) ^ __ROR4__(*(_DWORD *)(v81 + 4 * v93) ^ 0xC6E829FB, 16);
  v101 = (*(_DWORD *)(v79 + 4 * (BYTE2(v100) ^ 0x73u)) + 818486191) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (HIBYTE(v96) ^ 0x78)) ^ 0x26B51CC2, 24) ^ __ROR4__(*(_DWORD *)(v95+ 4 * (BYTE1(v99) ^ 0x90u)) ^ 0x26B51CC2, 8) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (v98 ^ 0xA8u)) ^ 0x26B51CC2, 16);
  v102 = *(_DWORD *)(v81 + 4 * ((v96 ^ 0xD6AAFD67) >> 16)) ^ __ROR4__((*(_DWORD *)(v79+ 4* ((v98 ^ 0x544B9806u) >> 24))+ 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (BYTE1(v100) ^ 0x5Eu)) ^ 0x26B51CC2, 8) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (v99 ^ 0x2Cu)) ^ 0x26B51CC2, 16);
  v103 = (*(_DWORD *)(v79 + 4 * ((v98 ^ 0x544B9806u) >> 16)) + 818486191) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (HIBYTE(v99) ^ 5))+ 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * ((unsigned __int16)(v96 ^ 0xFD67) >> 8)) ^ 0x676C671E, 8) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (v100 ^ 0xA5u)) + 818486191) ^ 0x6FE94FBE, 16);
  v104 = *(_DWORD *)(v85 + 4 * (BYTE2(v99) ^ 0x7Cu));
  HIDWORD(v105) = *(_DWORD *)(v95 + 4 * (HIBYTE(v100) ^ 0x30)) ^ 0x26B51CC2;
  LODWORD(v105) = HIDWORD(v105);
  v106 = (v104 ^ 0x20622672 ^ -(v104 ^ 0x20622672) ^ ((v105 >> 24) + (v104 ^ 0xDF9DD98D ^ (v105 >> 24)) + 1))
       + (v105 >> 24);
  HIDWORD(v105) = *(_DWORD *)(v81 + 4 * ((unsigned __int16)(v98 ^ 0x9806) >> 8)) ^ 0xC6E829FB;
  LODWORD(v105) = HIDWORD(v105);
  v107 = (v105 >> 8) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (v96 ^ 0x67u)) + 818486191) ^ 0x6FE94FBE, 16) ^ 0x6AABE53E ^ v106;
  v108 = *(_DWORD *)(v85 + 4 * ((v101 ^ 0x444C82DA) >> 16)) ^ __ROR4__(*(_DWORD *)(v85+ 4* (HIBYTE(v102) ^ 0x51)) ^ 0x676C671E, 24) ^ __ROR4__((*(_DWORD *)(v79 + 4 * BYTE1(v107))+ 818486191) ^ 0x6FE94FBE, 8) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (v103 ^ 0x18u)) ^ 0x676C671E, 16);
  v109 = (*(_DWORD *)(v79 + 4 * ((v102 ^ 0x9471BF6B) >> 16)) + 818486191) ^ __ROR4__(*(_DWORD *)(v85 + 4 * ((v103 ^ 0x48A37618u) >> 24)) ^ 0x676C671E, 24) ^ __ROR4__((*(_DWORD *)(v79 + 4 * ((unsigned __int16)(v101 ^ 0x82DA) >> 8)) + 818486191) ^ 0x6FE94FBE, 8) ^ __ROR4__(*(_DWORD *)(v85 + 4 * v107) ^ 0x676C671E, 16);
  v110 = (*(_DWORD *)(v79 + 4 * ((v103 ^ 0x48A37618u) >> 16)) + 818486191) ^ __ROR4__(*(_DWORD *)(v81 + 4 * HIBYTE(v107)) ^ 0xC6E829FB, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * ((unsigned __int16)(v102 ^ 0xBF6B) >> 8)) ^ 0x676C671E, 8);
  v111 = *(_DWORD *)(v85 + 4 * BYTE2(v107)) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (HIBYTE(v101) ^ 0x81)) ^ 0x676C671E, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (BYTE1(v103) ^ 0xB3u)) ^ 0x676C671E, 8) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (v102 ^ 0x6Bu)) ^ 0x676C671E, 16) ^ 0x5903E560;
  v112 = v110 ^ __ROR4__(*(_DWORD *)(v85 + 4 * (v101 ^ 0x1Fu)) ^ 0x676C671E, 16);
  v113 = (*(_DWORD *)(v79 + 4 * (BYTE2(v112) ^ 0x1Fu)) + 818486191) ^ __ROR4__(*(_DWORD *)(v81 + 4 * HIBYTE(v111)) ^ 0xC6E829FB, 24) ^ __ROR4__((*(_DWORD *)(v79+ 4* (BYTE1(v109) ^ 0x65u))+ 818486191) ^ 0x6FE94FBE, 8) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (v108 ^ 0x7Fu)) ^ 0x26B51CC2, 16);
  v114 = *(_DWORD *)(v85 + 4 * BYTE2(v111)) ^ __ROR4__(*(_DWORD *)(v85 + 4 * ((v108 ^ 0xD7FFD0D1) >> 24)) ^ 0x676C671E, 24) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (BYTE1(v112) ^ 2u)) ^ 0xC6E829FB, 8) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (v109 ^ 0xE3u)) ^ 0x676C671E, 16);
  v115 = *(_DWORD *)(v95
                   + 4 * (((v108 ^ 0xD7FFD0D1) >> 16) - (((v108 ^ 0xD7FFD0D1) >> 15) & 0x15C) + 174)) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (HIBYTE(v109) ^ 0xCE)) ^ 0x26B51CC2, 24) ^ __ROR4__(*(_DWORD *)(v81 + 4 * BYTE1(v111)) ^ 0xC6E829FB, 8) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (v112 ^ 0x29u)) ^ 0x26B51CC2, 16);
  v116 = *(_DWORD *)(v81 + 4 * (BYTE2(v109) ^ 0xB4u)) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (HIBYTE(v112) ^ 0x3B)) ^ 0xC6E829FB, 24) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (BYTE1(v108) ^ 0x94u)) ^ 0xC6E829FB, 8) ^ __ROR4__(*(_DWORD *)(v81 + 4 * v111) ^ 0xC6E829FB, 16);
  v117 = v113 ^ 0xD6;
  v118 = v114 ^ 0x942087F6;
  v119 = *(_DWORD *)(v81 + 4 * (BYTE2(v116) ^ 0xDAu)) ^ __ROR4__(*(_DWORD *)(v81+ 4* ((((v113 ^ 0xB41444D6) >> 24) ^ -((v113 ^ 0xB41444D6) >> 24) ^ ((((v113 ^ 0xB41444D6) >> 24) ^ 0xFFFFFFBB) + 69))+ 68)) ^ 0xC6E829FB, 24) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (BYTE1(v115) ^ 0x59u)) ^ 0x26B51CC2, 8) ^ __ROR4__(((v114 ^ 0xF6)- ((2 * (v114 ^ 0x942087F6)) & 0x12A)+ (v114 ^ 0x1A3C0C9C)+ 1) ^ 0x3C8910A9 ^ *(_DWORD *)(v95 + 4 * (v114 ^ 0x58u)), 16);
  v120 = (*(_DWORD *)(v79 + 4 * (BYTE2(v113) ^ 0x6Eu)) + 818486191) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (HIBYTE(v114) ^ 0x3A)) ^ 0x26B51CC2, 24) ^ __ROR4__(*(_DWORD *)(v95+ 4* (BYTE1(v116) ^ 0xECu)) ^ 0x26B51CC2, 8) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (v115 ^ 0xD2u))+ 818486191) ^ 0x6FE94FBE, 16);
  v121 = *(_DWORD *)(v85 + 4 * BYTE2(v118)) ^ __ROR4__((*(_DWORD *)(v79 + 4 * ((v115 ^ 0x3132F7D2u) >> 24)) + 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__(*(_DWORD *)(v81+ 4* ((unsigned __int16)(v113 ^ 0x44D6) >> 8)) ^ 0xC6E829FB, 8);
  v122 = *(_DWORD *)(v81 + 4 * (HIBYTE(v116) ^ 0xD8));
  v123 = v121 ^ __ROR4__((*(_DWORD *)(v79 + 4 * (v116 ^ 0xA4u)) + 818486191) ^ 0x6FE94FBE, 16);
  v124 = (*(_DWORD *)(v79 + 4 * (BYTE2(v115) ^ 0x32u)) + 818486191) ^ __ROR4__(v122 ^ 0xC6E829FB, 24) ^ __ROR4__(*(_DWORD *)(v85 + 4 * BYTE1(v118)) ^ 0x676C671E, 8) ^ __ROR4__((*(_DWORD *)(v79 + 4 * v117) + 818486191) ^ 0x6FE94FBE, 16);
  v125 = *(_DWORD *)(v81 + 4 * ((v124 ^ 0x28F57E21) >> 16)) ^ __ROR4__((*(_DWORD *)(v79+ 4* ((v119 ^ 0x9339117u) >> 24))+ 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (BYTE1(v123) ^ 0x9Eu)) ^ 0x26B51CC2, 8) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (v120 ^ 0xD6u)) ^ 0xC6E829FB, 16);
  v126 = (*(_DWORD *)(v79 + 4 * (BYTE2(v119) ^ 0x49u)) + 818486191) ^ __ROR4__(*(_DWORD *)(v85+ 4 * ((v120 ^ 0x7976C4D6u) >> 24)), 24) ^ __ROR4__(*(_DWORD *)(v85+ 4* ((unsigned __int16)(v124 ^ 0x7E21) >> 8)) ^ 0x676C671E, 8) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (v123 ^ 0xEBu))+ 818486191) ^ 0x6FE94FBE, 16);
  v127 = *(_DWORD *)(v95 + 4 * (BYTE2(v120) ^ 0xD8u)) ^ __ROR4__((*(_DWORD *)(v79 + 4 * ((v123 ^ 0x1F8530EBu) >> 24))+ 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__((*(_DWORD *)(v79+ 4* ((unsigned __int16)(v119 ^ 0x9117) >> 8))+ 818486191) ^ 0x6FE94FBE, 8) ^ __ROR4__(*(_DWORD *)(v85+ 4* (v124 ^ 0xE4u)) ^ 0x676C671E, 16);
  v128 = *(_DWORD *)(v95 + 4 * (BYTE2(v123) ^ 0x2Bu)) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (HIBYTE(v124) ^ 0x86)) ^ 0x26B51CC2, 24) ^ __ROR4__(*(_DWORD *)(v81+ 4* ((unsigned __int16)(v120 ^ 0xC4D6) >> 8)) ^ 0xC6E829FB, 8) ^ __ROR4__((*(_DWORD *)(v79+ 4* (v119 ^ 0x17u))+ 818486191) ^ 0x6FE94FBE, 16);
  v129 = *(_DWORD *)(v85 + 4 * ((v128 ^ 0x3B06A0C4) >> 16)) ^ __ROR4__(*(_DWORD *)(v81+ 4* (HIBYTE(v125) ^ 0xC1)) ^ 0xC6E829FB, 24) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (BYTE1(v127) ^ 0xEBu)) ^ 0xC6E829FB, 8) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (v126 ^ 0x3Cu)) ^ 0xC6E829FB, 16);
  v130 = *(_DWORD *)(v95 + 4 * (BYTE2(v125) ^ 0xCCu)) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (HIBYTE(v126) ^ 0x6A)) + 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__(*(_DWORD *)(v95+ 4 * (v127 ^ 0xF3u)), 16) ^ __ROR4__(*(_DWORD *)(v95+ 4* (((unsigned __int16)(v128 ^ 0xA0C4) >> 8) ^ 0xAEu)) ^ (((unsigned __int16)(v128 ^ 0xA0C4) >> 8) - (((v128 ^ 0x3B06A0C4) >> 7) & 0x12A) + (((unsigned __int16)(v128 ^ 0xA0C4) >> 8) ^ 0x1A3C0C6A) + 1) ^ 0x3C8910A9, 8);
  v131 = *(_DWORD *)(v85 + 4 * (BYTE2(v126) ^ 0xB6u)) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (HIBYTE(v127) ^ 0x17)) ^ 0xC6E829FB, 24) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (BYTE1(v125) ^ 0x82u))+ 818486191) ^ 0x6FE94FBE, 8) ^ __ROR4__(((v128 ^ 0xC4)- ((2 * (v128 ^ 0x3B06A0C4)) & 0x12A)+ (v128 ^ 0x1A3C0CAE)+ 1) ^ 0x3C8910A9 ^ *(_DWORD *)(v95 + 4 * (v128 ^ 0x6Au)), 16);
  v132 = *(_DWORD *)(v95 + 4 * (BYTE2(v127) ^ 0x21u)) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (HIBYTE(v128) ^ 0x95)) ^ 0x26B51CC2, 24) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (BYTE1(v126) ^ 0x47u)) ^ 0xC6E829FB, 8);
  LODWORD(v105) = __ROR4__(*(_DWORD *)(v95 + 4 * (v125 ^ 0xDEu)) ^ 0x26B51CC2, 16);
  LOWORD(v126) = v132 ^ v105;
  v133 = v132 ^ v105 ^ 0x8CC2DD4F;
  v134 = *(_DWORD *)(v85 + 4 * BYTE2(v133)) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (HIBYTE(v129) ^ 0x4F)) + 818486191) ^ 0x6FE94FBE, 24) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (BYTE1(v131) ^ 0x41u)) + 818486191) ^ 0x6FE94FBE, 8) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (v130 ^ 0xF0u)) ^ 0xC6E829FB, 16);
  v135 = *(_DWORD *)(v85 + 4 * (BYTE2(v129) ^ 0xF7u)) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (HIBYTE(v130) ^ 0x81)) ^ 0x676C671E, 24) ^ __ROR4__(*(_DWORD *)(v95 + 4 * (BYTE1(v126) ^ 0x73u)) ^ 0x26B51CC2, 8) ^ __ROR4__(*(_DWORD *)(v95+ 4* (v131 ^ 0x3Du)) ^ 0x26B51CC2, 16);
  v136 = *(_DWORD *)(v95 + 4 * (BYTE2(v130) ^ 0x22u)) ^ __ROR4__(*(_DWORD *)(v81 + 4 * (HIBYTE(v131) ^ 0xE3)) ^ 0xC6E829FB, 24) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (BYTE1(v129) ^ 0x73u))+ 818486191) ^ 0x6FE94FBE, 8) ^ __ROR4__(*(_DWORD *)(v81+ 4* (v126 ^ 0xBu)) ^ 0xC6E829FB, 16);
  v137 = (*(_DWORD *)(v79 + 4 * HIBYTE(v133)) + 818486191) ^ 0x6FE94FBE;
  v138 = ((v137 >> (v129 & 0x18) >> (v129 & 0x18 ^ 0x18)) | (v137 << 8)) ^ *(_DWORD *)(v95 + 4 * (BYTE2(v131) ^ 0x18u)) ^ __ROR4__((*(_DWORD *)(v79 + 4 * (BYTE1(v130) ^ 0x15u)) + 818486191) ^ 0x6FE94FBE, 8) ^ __ROR4__(*(_DWORD *)(v85 + 4 * (v129 ^ 0xA4u)) ^ 0x676C671E, 16);
  v139 = *(_QWORD *)(v65 - 152);
  v140 = (char *)*(&off_1015B46D0 + (int)v139 - 19369) - 8;
  v141 = v139;
  v142 = (char *)*(&off_1015B46D0 + (int)v139 - 20442) - 12;
  v143 = *(_WORD *)&v142[2 * (BYTE2(v138) ^ 0x49)];
  v144 = *(unsigned __int16 *)&v142[2 * (v135 ^ 0x82)];
  HIDWORD(v105) = v144 ^ 0x4D42 ^ (11550 * (v144 ^ 0x7878));
  LODWORD(v105) = WORD2(v105) & 0xFF00;
  v145 = ((v143 ^ 0x4D42 ^ (unsigned __int16)(11550 * (v143 ^ 0x7878))) << 8) ^ (((*(unsigned __int16 *)&v140[2 * (((v134 ^ 0xB069333u) >> 24) ^ 0xA5)]
                                                                                 - ((v134 ^ 0xB069333u) >> 24)
                                                                                 - 12312) ^ 0x93DD) << 16) ^ (unsigned __int16)((BYTE1(v136) ^ 0xFF07) - 12311 + *(_WORD *)&v140[2 * (BYTE1(v136) ^ 0x5D)]) ^ 0x93DD ^ (v105 >> 8);
  v146 = *(unsigned __int16 *)&v142[2 * (HIBYTE(v135) ^ 0x8D)];
  LOWORD(v95) = *(_WORD *)&v142[2 * (BYTE1(v138) ^ 0xC2)] ^ 0x7878;
  v147 = *(_WORD *)&v142[2 * (BYTE2(v134) ^ 0x79)];
  v148 = ((v147 ^ 0x4D42 ^ (unsigned __int16)(11550 * (v147 ^ 0x7878))) << 8) ^ ((v146 ^ 0x4D42 ^ (11550
                                                                                                 * (v146 ^ 0x78787878))) << 16);
  v149 = *(unsigned __int16 *)&v142[2 * (v136 ^ 0xEE)];
  HIDWORD(v105) = v149 ^ 0x4D42 ^ (11550 * (v149 ^ 0x7878));
  LODWORD(v105) = WORD2(v105) & 0xFF00;
  v150 = v148 ^ (unsigned __int16)((11550 * v95) ^ v95) ^ (v105 >> 8);
  v151 = v138 ^ 0x4C;
  v152 = HIBYTE(v138) ^ 0x59;
  v153 = (char *)*(&off_1015B46D0 + v141 - 20021) - 4;
  v154 = (uint64_t)*(&off_1015B46D0 + v141 - 20017);
  LODWORD(v140) = ((unsigned __int16)(*(_WORD *)&v140[2
                                                    * (((unsigned __int16)(v134 ^ 0x9333) >> 8) ^ 0xA5)]
                                    - ((unsigned __int16)(v134 ^ 0x9333) >> 8)
                                    - 12312) | (((unsigned __int16)(*(_WORD *)&v153[2 * (HIBYTE(v136) ^ 0xC0)] + 16985) ^ 0xB6D4) << 16)) ^ (((unsigned __int16)(*(_WORD *)&v153[2 * (BYTE2(v135) ^ 0x70)] + 16985) ^ 0xB6D4) << 8) ^ __ROR4__(*(unsigned __int16 *)(v154 + 2 * v151) ^ 0xE7D3, 8);
  LOWORD(v135) = *(_WORD *)&v142[2 * (BYTE1(v135) ^ 0x20)] ^ 0x7878;
  v155 = *(unsigned __int16 *)(v154 + 2 * (v134 ^ 0x53u)) ^ 0xE7D3;
  v156 = v150 ^ v145 ^ (((*(unsigned __int16 *)&v153[2 * v152] + 16985) ^ 0xB6D4) << 16) ^ ((*(unsigned __int16 *)(v154 + 2 * (BYTE2(v136) ^ 0x67u)) ^ 0xE7D3) << 8);
  v157 = v140 ^ v145;
  v158 = v140 ^ v150 ^ v145;
  LODWORD(v140) = v140 ^ v150;
  v159 = v156 ^ (unsigned __int16)((11550 * v135) ^ v135);
  LODWORD(v142) = v159 ^ (v155 << 24);
  v160 = v142 ^ (v155 >> 8);
  v161 = v157 ^ v160 ^ 0x91E387A1;
  *(_DWORD *)(v65 - 144) = v161;
  v162 = v140 ^ v157 ^ v160;
  *(_DWORD *)(v65 - 164) = v162;
  *(_DWORD *)(v65 - 196) = BYTE1(v159);
  v163 = (char *)*(&off_1015B46D0 + v141 - 21137) - 8;
  LODWORD(v140) = *(_DWORD *)&v163[4 * (BYTE1(v159) ^ 0xC9)] + 1697124714;
  v164 = (char *)*(&off_1015B46D0 + v141 - 20711) - 12;
  *(_DWORD *)(v65 - 200) = BYTE2(v156);
  v165 = *(_DWORD *)&v164[4 * (BYTE2(v156) ^ 0x68)];
  *(_DWORD *)(v65 - 204) = v142 >> 24;
  HIDWORD(v105) = v140 ^ 0xEE9C6244 ^ (v140 >> 3) & 0x5E20625;
  LODWORD(v105) = HIDWORD(v105);
  LODWORD(v140) = v105 >> 24;
  LODWORD(v105) = __ROR4__(*(_DWORD *)&v164[4 * ((v142 >> 24) ^ 0x49)] ^ 0x16450C34, 8);
  LODWORD(STACK[0x438]) = v160;
  LODWORD(STACK[0x448]) = (v142 ^ BYTE1(v155));
  v166 = *(_DWORD *)&v163[4 * ((v142 ^ BYTE1(v155)) ^ 0x74)] + 1697124714;
  *(_DWORD *)(v65 - 212) = v158;
  *(_DWORD *)(v65 - 208) = v162 ^ 0x6C57223E;
  v167 = v140 ^ v105 ^ v166 ^ (v166 >> 3) & 0x5E20625 ^ v162 ^ 0x6C57223E ^ __ROR4__((v165 ^ -v165 ^ ((v165 ^ 0xE9BAF3CB) + 373623861))+ 373623860, 16);
  LODWORD(v140) = v158 ^ 0xDA535288 ^ v167;
  v168 = v167;
  *(_DWORD *)(v65 - 184) = v167;
  *(_DWORD *)(v65 - 216) = (_DWORD)v140;
  v169 = v140 ^ v161;
  LODWORD(v140) = v140 ^ v161 ^ v142 ^ (v155 >> 8);
  v170 = v169;
  *(_DWORD *)(v65 - 220) = v169;
  v171 = (unint64_t)*(&off_1015B46D0 + v141 - 19779);
  HIDWORD(v105) = *(_DWORD *)(v171
                            + 4
                            * (((unsigned __int16)((unsigned __int16)v140 ^ 0x8382) >> 8) ^ 0xF5u)) ^ 0x2D91FBB8;
  LODWORD(v105) = HIDWORD(v105);
  v172 = (v105 >> 24) ^ __ROR4__(*(_DWORD *)(v171 + 4 * ((v140 >> 24) ^ 0x35)) ^ 0x2D91FBB8, 8);
  v173 = *(_DWORD *)&v163[4 * (((v140 ^ 0x96CB8382) >> 16) ^ 0x73)] + 1697124714;
  v174 = v140 ^ 0xD9820520;
  *(_DWORD *)(v65 - 188) = v140 ^ 0xD9820520;
  v175 = (((v140 ^ 0x20200C4D)
         + (v140 & 0xFE ^ 0x540060B2)
         - ((v140 ^ 0x20200C4D) & 0x202004FE)) ^ 0xF84E0411)
       + (v140 ^ 0x41);
  v176 = *((_DWORD *)*(&off_1015B46D0 + v141 - 20716) + (v140 ^ 0xDAu) - 2);
  v177 = (char *)*(&off_1015B46D0 + v141 - 20716) - 8;
  v178 = v172 ^ __ROR4__(v173 ^ 0xEE9C6244 ^ (v173 >> 3) & 0x5E20625, 16) ^ ((v175 ^ v176) + 2 * (v175 & v176));
  *(_DWORD *)(v65 - 160) = v158 ^ 0x89581F65;
  LODWORD(v140) = v178 ^ v158 ^ 0x89581F65;
  v179 = (int)v140;
  *(_DWORD *)(v65 - 176) = (_DWORD)v140;
  v180 = v140 ^ v170 ^ v174;
  v181 = v140 ^ v170;
  *(_DWORD *)(v65 - 224) = v181;
  v182 = v180 ^ 0xED435B38;
  v183 = v178 ^ v168;
  HIDWORD(v105) = ((BYTE2(v182) ^ 0x55) + (BYTE2(v182) ^ 0xAC4E6CB6) + *(_DWORD *)&v177[4 * (BYTE2(v182) ^ 0xCE)]) ^ 0x96EF801A;
  LODWORD(v105) = HIDWORD(v105);
  v184 = v105 >> 16;
  v185 = v183 & 0x20000000;
  LODWORD(STACK[0x450]) = v183;
  if ((v184 & v183 & 0x20000000) != 0)
    v185 = -v185;
  HIDWORD(v186) = *(_DWORD *)&v164[4 * (((unsigned __int16)(v180 ^ 0x1E6A) >> 8) ^ 0x83)] ^ 0x16450C34;
  LODWORD(v186) = HIDWORD(v186);
  v187 = (v186 >> 24) ^ __ROR4__(*(_DWORD *)(v171 + 4 * (HIBYTE(v180) ^ 0x62)) ^ 0x2D91FBB8, 8) ^ v183 & 0xDFFFFFFF ^ ((v180 ^ 0x6D) + (v180 ^ 0xAC4E6C8E) + *(_DWORD *)&v177[4 * (v180 ^ 0xF6)]) ^ (v185 + v184);
  v188 = v179 ^ 0xFA44144 ^ v187;
  v189 = v188 ^ v181;
  *(_DWORD *)(v65 - 228) = v188;
  v190 = v188 ^ v181 ^ v182;
  HIDWORD(v186) = *(_DWORD *)&v164[4 * (HIBYTE(v190) ^ 0x9D)] ^ 0x16450C34;
  LODWORD(v186) = HIDWORD(v186);
  v191 = (v186 >> 8) ^ __ROR4__(*(_DWORD *)&v164[4 * (((unsigned __int16)(v190 ^ 0xB091) >> 8) ^ 0x3C)] ^ 0x16450C34, 24);
  v192 = v190 ^ 0xE82A6290;
  *(_DWORD *)(v65 - 240) = v190 ^ 0xE82A6290;
  v193 = v164;
  v194 = v191 ^ __ROR4__(*(_DWORD *)&v164[4 * (((v190 ^ 0x4545B091) >> 16) ^ 0xF2)] ^ 0x16450C34, 16) ^ v187 ^ ((v190 ^ 0x48) + (((v190 ^ 0x34 | 0x1A81171D) - (v190 ^ 0x34 | 0xE57EE8E2) - 444667678) ^ 0xB6CF7B82) + *(_DWORD *)&v177[4 * (v190 ^ 0xD3)]);
  *(_DWORD *)(v65 - 232) = v189 ^ 0x17E17F35;
  v195 = v194 ^ v179 ^ 0xFA44144 ^ v187;
  LODWORD(STACK[0x44C]) = v195;
  *(_DWORD *)(v65 - 252) = v194;
  v196 = ((v195 ^ 0xDDA0ED11) - 2 * ((v195 ^ 0xDDA0ED11) & 0x2FFBA6BD ^ v195 & 4) - 1342462279) ^ v189 ^ 0x17E17F35;
  v197 = (v196 - ((2 * v196) & 0x66B6511A) - 1285871475) ^ v192;
  v198 = *(_DWORD *)&v163[4
                        * (((unsigned __int16)((v196 - ((2 * v196) & 0x511A) + 10381) ^ v192) >> 8) ^ 0x28)]
       + 1697124714;
  v199 = *(_DWORD *)(v171 + 4 * (((v196 - ((2 * v196) & 0x1A) - 115) ^ v192) ^ 0x95u)) ^ __ROR4__(*(_DWORD *)&v193[4 * (BYTE2(v197) ^ 0x29)] ^ 0x16450C34, 16) ^ __ROR4__(v198 ^ 0xEE9C6244 ^ (v198 >> 3) & 0x5E20625, 24);
  LODWORD(v186) = __ROR4__(((HIBYTE(v197) ^ 0xAC4E6C20) + (HIBYTE(v197) ^ 0xC3) + *(_DWORD *)&v177[4 * (HIBYTE(v197) ^ 0x58)]) ^ 0x96EF801A, 8);
  v200 = v194 ^ 0xC2CD2FED ^ ((v199 ^ v186) - ((2 * (v199 ^ v186)) & 0xD3EFA0A8) - 369635244);
  LODWORD(STACK[0x478]) = v196;
  HIDWORD(v186) = v196 ^ 0x24000000;
  LODWORD(v186) = v196 ^ 0x80000000;
  LODWORD(STACK[0x46C]) = v195 ^ 0xDDA0ED11;
  v201 = (v195 ^ 0xDDA0ED11) - ((2 * (v195 ^ 0xDDA0ED11)) & 0x1C0BA200) - 1912221440;
  v202 = v200 ^ v201;
  v203 = v200;
  LODWORD(STACK[0x45C]) = v200;
  *(_DWORD *)(v65 - 256) = v197;
  LODWORD(v186) = (v186 >> 30) ^ __ROR4__(v200 ^ v201 ^ 0x7584138B, 30) ^ 0x1F2AA6F;
  HIDWORD(v186) = v186;
  v204 = v186 >> 2;
  LODWORD(STACK[0x47C]) = v204 ^ 0x320C3A6;
  v205 = v204 ^ 0x320C3A6 ^ (v197 - ((2 * v197) & 0x86B8D27A) - 1017353923);
  v206 = *(_DWORD *)&v163[4 * (HIBYTE(v205) ^ 0xB)] + 1697124714;
  HIDWORD(v186) = v206 ^ 0xEE9C6244 ^ (v206 >> 3) & 0x5E20625;
  LODWORD(v186) = HIDWORD(v186);
  v207 = (v186 >> 8) ^ __ROR4__(*(_DWORD *)(v171+ 4* (((unsigned __int16)(v204 ^ 0xC3A6 ^ (v197- ((2 * v197) & 0xD27A)+ 26941)) >> 8) ^ 0x49u)) ^ 0x2D91FBB8, 24);
  v208 = *(_DWORD *)&v163[4 * (BYTE2(v205) ^ 0x82)] + 1697124714;
  v209 = v205 ^ 0x49B06F46;
  LODWORD(STACK[0x470]) = v205 ^ 0x49B06F46;
  v210 = v207 ^ __ROR4__(v208 ^ 0xEE9C6244 ^ (v208 >> 3) & 0x5E20625, 16) ^ ((v205 ^ 0xDF)
                                                                           + *(_DWORD *)&v177[4
                                                                                            * (v205 ^ 0x44)]
                                                                           + ((((2 * (v205 ^ 0x63)) | 0x3AD8948)
                                                                             - (v205 ^ 0x63)
                                                                             + 2116631388) ^ 0x2D98A8FB));
  v211 = v210 - ((2 * v210) & 0x1C0BA200) - 1912221440;
  v212 = v201 ^ 0x1B69BC91 ^ v211;
  LODWORD(STACK[0x474]) = v212;
  v213 = v212 ^ v204;
  v214 = v212 ^ v204 ^ 0xAE910581;
  LODWORD(STACK[0x454]) = v213;
  v215 = (v214 - 2 * (v214 & 0x6A9AA9DE ^ v213 & 0x12) - 358962740) ^ v209;
  v216 = ((v214 - 2 * (v214 & 0xDE ^ v213 & 0x12) - 52) ^ v209);
  v217 = ((v216 ^ 0x6B | 0x903561B3) - (v216 ^ 0x6B | 0x6FCA9E4C) + 1875549772) ^ 0xD070A332;
  v218 = (v216 ^ 0xDF)
       + *(_DWORD *)&v177[4 * (v216 ^ 0x44)]
       + ((((2 * v217) | 0x18D062FA) - v217 - 208155005) ^ 0xE0639FAB);
  LODWORD(STACK[0x464]) = v215;
  HIDWORD(v186) = *(_DWORD *)&v193[4 * (((HIBYTE(v215) ^ 0x70) - ((2 * (HIBYTE(v215) ^ 0x70)) & 0x9C) + 78) ^ 0x88)] ^ 0x16450C34;
  LODWORD(v186) = HIDWORD(v186);
  v219 = (v186 >> 8) ^ __ROR4__(*(_DWORD *)(v171 + 4 * (BYTE1(v215) ^ 0x49u)) ^ 0x2D91FBB8, 24) ^ __ROR4__(((BYTE2(v215) ^ 0xAC4E6C9C) + (BYTE2(v215) ^ 0x7F) + *(_DWORD *)&v177[4 * (BYTE2(v215) ^ 0xE4)]) ^ 0x96EF801A, 16) ^ v218;
  v220 = v214 - 2 * (v214 & 0x15E708FF ^ v213 & 0xA) + 367462645;
  v221 = v219 ^ v202 ^ 0x7584138B;
  LODWORD(STACK[0x458]) = v221 ^ 0x12CDCE7F;
  v222 = v221 ^ 0x12CDCE7F ^ v220;
  LODWORD(STACK[0x468]) = v222 ^ 0x4350040F;
  v223 = v222 ^ 0x4350040F ^ v215;
  v224 = v223 ^ 0x30BF8415;
  v225 = *(_DWORD *)&v177[4 * (((unsigned __int16)(v223 ^ 0x8415) >> 8) ^ 0xCE)];
  STACK[0x3E0] = (unint64_t)v177;
  LODWORD(STACK[0x43C]) = v223;
  v226 = ((v223 ^ 0x8395429F) >> 16) ^ 0xA5;
  v227 = *(_DWORD *)&v193[4 * (HIBYTE(v223) ^ 0xF6)];
  *(_QWORD *)(v65 - 248) = v193;
  HIDWORD(v186) = *(_DWORD *)(v171 + 4 * v226) ^ 0x2D91FBB8;
  LODWORD(v186) = HIDWORD(v186);
  v228 = *(_DWORD *)&v163[4
                        * ((v219 ^ v202 ^ 0x8B) ^ 0x7F ^ v220 ^ 0xF ^ v215 ^ 0xBD)]
       + 1697124714;
  v229 = v211 ^ v203;
  v230 = v219 ^ v211 ^ v203;
  LODWORD(STACK[0x460]) = v230;
  v231 = (v186 >> 16) ^ __ROR4__(v227 ^ 0x16450C34, 8) ^ v228 ^ (v228 >> 3) & 0x5E20625 ^ v230 ^ __ROR4__(((BYTE1(v224) ^ 0x55)+ (BYTE1(v224) ^ 0xAC4E6CB6)+ v225) ^ 0x96EF801A, 24);
  if (v187 >= 0xA127F81F)
    v232 = -1591216097;
  else
    v232 = 0;
  v233 = v187 + 1591216097;
  if (v187 < 0xA127F81F)
    v233 = v187;
  if (v233)
    v234 = v187;
  else
    v234 = v232;
  LODWORD(STACK[0x444]) = v231 ^ 0x6A50CAED;
  v235 = v231 ^ 0x6A50CAED ^ v221;
  v236 = v202 ^ 0x7BEC84B3;
  LODWORD(STACK[0x434]) = v202 ^ 0x7BEC84B3;
  v237 = (((v202 ^ 0x8EE0108C) + 183724993) ^ ((v202 ^ 0x10B1C4EA) - 1801273433) ^ ((v202 ^ 0x9E2CE9B5) + 440374010))
       + 824067693
       + (((v235 ^ 0xB090281E) + 1326573681) ^ ((v235 ^ 0xA82A8A3A) + 1470843477) ^ ((v235 ^ 0x8CCFAD59) + 1934519608));
  v238 = (v237 ^ 0x38E4F28) & (2 * (v237 & 0x4B2F4FA8)) ^ v237 & 0x4B2F4FA8;
  v239 = ((2 * (v237 ^ 0x97C84D38)) ^ 0xB9CE0520) & (v237 ^ 0x97C84D38) ^ (2 * (v237 ^ 0x97C84D38)) & 0xDCE70290;
  v240 = (v239 ^ 0x18C60000) & (4 * v238) ^ v238;
  v241 = ((4 * (v239 ^ 0x44210290)) ^ 0x739C0A40) & (v239 ^ 0x44210290) ^ (4 * (v239 ^ 0x44210290)) & 0xDCE70290;
  v242 = v240 ^ 0xDCE70290 ^ (v241 ^ 0x50840200) & (16 * v240);
  v243 = (16 * (v241 ^ 0x8C630090)) & 0xDCE70290 ^ 0x10870290 ^ ((16 * (v241 ^ 0x8C630090)) ^ 0xCE702900) & (v241 ^ 0x8C630090);
  v244 = (v242 << 8) & 0xDCE70200 ^ v242 ^ ((v242 << 8) ^ 0xE7029000) & v243;
  v245 = v237 ^ (2
               * ((v244 << 16) & 0x5CE70000 ^ v244 ^ ((v244 << 16) ^ 0x2900000) & ((v243 << 8) & 0xDCE70000 ^ 0x18E50000 ^ ((v243 << 8) ^ 0xE7020000) & v243)));
  LODWORD(STACK[0x440]) = v234;
  v246 = v235;
  LODWORD(STACK[0x428]) = v235;
  v247 = (((v234 ^ 0x6C04A622) + 1477246836) ^ ((v234 ^ 0x48BA59DB) + 2092040331) ^ ((v234 ^ 0x1C4E4087) + 675682775))
       - (((v235 ^ 0x25FE9A01) - 629187984) ^ ((v235 ^ 0x1BDC658D) - 463624732) ^ ((v235 ^ 0xAA57F0F1) + 1440100512))
       - 1090718558;
  v248 = (v247 ^ 0x3DD87ACB) & (2 * (v247 & 0x3E1C78EC)) ^ v247 & 0x3E1C78EC;
  v249 = ((2 * (v247 ^ 0x35D08B9B)) ^ 0x1799E6EE) & (v247 ^ 0x35D08B9B) ^ (2 * (v247 ^ 0x35D08B9B)) & 0xBCCF376;
  v250 = (v249 ^ 0x80E260) & (4 * v248) ^ v248;
  v251 = ((4 * (v249 ^ 0x8441111)) ^ 0x2F33CDDC) & (v249 ^ 0x8441111) ^ (4 * (v249 ^ 0x8441111)) & 0xBCCF374;
  v252 = (v251 ^ 0xB00C140) & (16 * v250) ^ v250;
  v253 = ((16 * (v251 ^ 0xCC3223)) ^ 0xBCCF3770) & (v251 ^ 0xCC3223) ^ (16 * (v251 ^ 0xCC3223)) & 0xBCCF370;
  v254 = v252 ^ 0xBCCF377 ^ (v253 ^ 0x8CC3300) & (v252 << 8);
  v255 = v247 ^ (2
               * ((v254 << 16) & 0xBCC0000 ^ v254 ^ ((v254 << 16) ^ 0x73770000) & (((v253 ^ 0x300C007) << 8) & 0xBCC0000 ^ 0x30C0000 ^ (((v253 ^ 0x300C007) << 8) ^ 0x4CF30000) & (v253 ^ 0x300C007))));
  LODWORD(STACK[0x378]) = v255;
  LODWORD(STACK[0x210]) = v245;
  LODWORD(STACK[0x2C0]) = v245 ^ 0x679D37AD;
  v256 = v245 ^ 0x679D37AD ^ v236;
  LODWORD(STACK[0x430]) = v256;
  v257 = ((((v256 & 0x200000 ^ 0xFBBC26F9) - 1572896) ^ 0xB50C6A66) - 316415839) ^ ((((v256 & 0x200000 ^ 0xFBBC26F9)
                                                                                    - 1572896) ^ 0x4670B35)
                                                                                  + 1548255732) ^ ((((v256 & 0x200000 ^ 0xFBBC26F9) - 1572896) ^ 0x4AEF478A)
                                                                                                 + 314625357);
  LODWORD(STACK[0x42C]) = v257;
  v258 = v257 - 1050107186;
  v259 = (v258 ^ 0x1AC3B859) & (2 * (v258 & 0x9AEBB112)) ^ v258 & 0x9AEBB112;
  v260 = ((2 * (v258 ^ 0x2E52D85D)) ^ 0x6972D29E) & (v258 ^ 0x2E52D85D) ^ (2 * (v258 ^ 0x2E52D85D)) & 0xB4B9694E;
  v261 = (v260 ^ 0x20304008) & (4 * v259) ^ v259;
  v262 = ((4 * (v260 ^ 0x94892941)) ^ 0xD2E5A53C) & (v260 ^ 0x94892941) ^ (4 * (v260 ^ 0x94892941)) & 0xB4B9694C;
  v263 = (v262 ^ 0x90A12100) & (16 * v261) ^ v261;
  v264 = ((16 * (v262 ^ 0x24184843)) ^ 0x4B9694F0) & (v262 ^ 0x24184843) ^ (16 * (v262 ^ 0x24184843)) & 0xB4B96940;
  v265 = v263 ^ 0xB4B9694F ^ (v264 ^ 0x900001) & (v263 << 8);
  v266 = v258 ^ (2
               * ((v265 << 16) & 0x34B90000 ^ v265 ^ ((v265 << 16) ^ 0x694F0000) & (((v264 ^ 0xB429690F) << 8) & 0x34B90000 ^ 0x4900000 ^ (((v264 ^ 0xB429690F) << 8) ^ 0x39690000) & (v264 ^ 0xB429690F))));
  v498 = ((v266 ^ 0xB38B638C) & (v255 ^ 0xAA570673) ^ v266 & 0x855A9871) == -2130051072;
  v267 = STACK[0x438];
  *(_DWORD *)(v65 - 192) = LODWORD(STACK[0x438]) ^ 0x49952DCD;
  LODWORD(STACK[0x3EC]) = (v267 & 0x32 ^ 0x232) - (v267 & 0x32) + (LODWORD(STACK[0x448]) ^ 0xC0);
  v268 = v246 ^ 0xAC2328B3;
  v269 = v246 ^ 0xAC2328B3 ^ v222;
  v270 = v269 ^ v224;
  HIDWORD(v271) = ((v269 ^ v224) >> 24) ^ 0x56;
  LODWORD(v271) = HIDWORD(v271);
  v272 = (HIBYTE(v270) ^ 0x56)
       + *(_DWORD *)&v177[4 * (HIBYTE(v270) ^ 0xCD)]
       + (((((v271 >> 6) ^ 0xDCC09BC0uLL) >> 26) | (((v271 >> 6) ^ 0xDCC09BC0) << 6)) ^ 0x9C689CD4);
  v273 = *(_DWORD *)&v163[4 * (((unsigned __int16)(v269 ^ v224) >> 8) ^ 0xEE)] + 1697124714;
  STACK[0x3F0] = v171;
  v274 = *(_DWORD *)(v171 + 4 * ((v269 ^ v224) ^ 0x1Fu)) ^ __ROR4__(*(_DWORD *)(v171+ 4* (((v269 ^ v224) >> 16) ^ 0x4Au)) ^ 0x2D91FBB8, 16) ^ __ROR4__(v273 ^ 0xEE9C6244 ^ (v273 >> 3) & 0x5E20625, 24) ^ v231 ^ __ROR4__(v272 ^ 0x96EF801A, 8) ^ 0x3FEBFF78;
  v275 = v274 ^ (v268 - ((2 * v268) & 0x7FD7FEF0) + 1072430968);
  LODWORD(STACK[0x438]) = v274;
  v276 = v275 ^ 0xB2B6A4CE ^ v224;
  STACK[0x3D8] = (unint64_t)v163;
  v277 = *(_DWORD *)&v163[4
                        * (((unsigned __int16)(v274 ^ (v268 - ((2 * v268) & 0xFEF0) - 136) ^ 0xA4CE ^ v224 ^ 0x801A) >> 8) ^ 0xD3)]
       + 1697124714;
  v278 = *(_DWORD *)&v163[4
                        * ((v274 ^ (v268 - ((2 * v268) & 0xF0) + 120)) ^ 0xCE ^ v224 ^ 0x10)]
       + 1697124714;
  v279 = (v278 >> 3) & 0x5E20625 ^ __ROR4__(v277 ^ 0xEE9C6244 ^ (v277 >> 3) & 0x5E20625, 24);
  v280 = *(_DWORD *)&v163[4 * (((v276 ^ 0x73EF801A) >> 16) ^ 0xD6)] + 1697124714;
  LODWORD(v271) = __ROR4__(v280 ^ 0xEE9C6244 ^ (v280 >> 3) & 0x5E20625, 16);
  v281 = (v279 ^ v271) - ((2 * (v279 ^ v271)) & 0x7FD7FEF0) + 1072430968;
  HIDWORD(v271) = *(_DWORD *)&v193[4 * (HIBYTE(v276) ^ 0x9A)] ^ 0x16450C34;
  LODWORD(v271) = HIDWORD(v271);
  v282 = v271 >> 8;
  v283 = v282 ^ v278 ^ v274 ^ v281;
  v284 = v269 ^ 0xEA7FFC21 ^ v275 ^ 0xB2B6A4CE;
  LODWORD(STACK[0x420]) = v284;
  v285 = v275 ^ 0xB2B6A4CE ^ v283;
  LODWORD(STACK[0x418]) = v285;
  v286 = (((v270 ^ 0xBC1D6031) + 1299955726) ^ ((v270 ^ 0x6F13A022) - 1636499425) ^ ((v270 ^ 0xE89DA14D) + 435880306))
       + (((*(_DWORD *)(v65 - 164) ^ 0xE430984D) - 1164337743) ^ ((*(_DWORD *)(v65 - 164) ^ 0xE6FD508C) - 1202432654) ^ ((*(_DWORD *)(v65 - 164) ^ 0xE628E387) - 1199446405));
  v287 = (((*(_DWORD *)(v65 - 184) ^ 0xE059594C) - 103857085) ^ ((*(_DWORD *)(v65 - 184) ^ 0x1FE1B1B8) + 108506295) ^ ((*(_DWORD *)(v65 - 184) ^ 0xEB3BE7EE) - 223479071))
       - (((v180 ^ 0xD5DD526C) + 1830016557) ^ ((v180 ^ 0xA99305E0) + 291340705) ^ ((v180 ^ 0xC3CCB6B) - 1259188436));
  v288 = ((*(_DWORD *)(v65 - 176) ^ 0x9B79BC52) + 2049537705) ^ ((*(_DWORD *)(v65 - 176) ^ 0x9F1EEA71) + 2119049356) ^ ((*(_DWORD *)(v65 - 176) ^ 0x2239AE38) - 1016503101);
  v289 = v180 ^ 0x47317BBF;
  LODWORD(STACK[0x448]) = v283;
  v290 = (((v180 ^ 0x30E6E81E) - 2010616737) ^ ((v180 ^ 0xA475BE2D) + 482032238) ^ ((v180 ^ 0xE4E1CAD4) + 1546604181))
       - (((v283 ^ 0x26BFEC0E) + 1766009835) ^ ((v283 ^ 0x4DC27B37) + 37666004) ^ ((v283 ^ 0xB6A92919) - 111808770))
       + 287404052;
  v291 = (v290 ^ 0x3C42EC8C) & (2 * (v290 & 0xB84AF109)) ^ v290 & 0xB84AF109;
  v292 = ((2 * (v290 ^ 0x6C57CC9E)) ^ 0xA83A7B2E) & (v290 ^ 0x6C57CC9E) ^ (2 * (v290 ^ 0x6C57CC9E)) & 0xD41D3D96;
  v293 = (v292 ^ 0x80180804) & (4 * v291) ^ v291;
  v294 = ((4 * (v292 ^ 0x54050491)) ^ 0x5074F65C) & (v292 ^ 0x54050491) ^ (4 * (v292 ^ 0x54050491)) & 0xD41D3D94;
  v295 = (v294 ^ 0x50143410) & (16 * v293) ^ v293;
  v296 = ((16 * (v294 ^ 0x84090983)) ^ 0x41D3D970) & (v294 ^ 0x84090983) ^ (16 * (v294 ^ 0x84090983)) & 0xD41D3D90;
  v297 = v295 ^ 0xD41D3D97 ^ (v296 ^ 0x40111987) & (v295 << 8);
  LODWORD(STACK[0x400]) = v290 ^ (2
                                * ((v297 << 16) & 0x541D0000 ^ v297 ^ ((v297 << 16) ^ 0x3D970000) & (((v296 ^ 0x940C2487) << 8) & 0x541D0000 ^ (((v296 ^ 0x940C2487) << 8) ^ 0x1D3D0000) & (v296 ^ 0x940C2487) ^ 0x40000000)));
  v298 = v288 - v282 + 336249291;
  v299 = (v298 ^ 0xA8FAC033) & (2 * (v298 & 0x28F8E4B2)) ^ v298 & 0x28F8E4B2;
  v300 = ((2 * (v298 ^ 0xE90BC153)) ^ 0x83E64BC2) & (v298 ^ 0xE90BC153) ^ (2 * (v298 ^ 0xE90BC153)) & 0xC1F325E0;
  v301 = (v300 ^ 0x81E201C0) & (4 * v299) ^ v299;
  v302 = ((4 * (v300 ^ 0x40112421)) ^ 0x7CC9784) & (v300 ^ 0x40112421) ^ (4 * (v300 ^ 0x40112421)) & 0xC1F325E0;
  v303 = (v302 ^ 0x1C00580) & (16 * v301) ^ v301;
  v304 = ((16 * (v302 ^ 0xC0332061)) ^ 0x1F325E10) & (v302 ^ 0xC0332061) ^ (16 * (v302 ^ 0xC0332061)) & 0xC1F325E0;
  v305 = v303 ^ 0xC1F325E1 ^ (v304 ^ 0x1320400) & (v303 << 8);
  v306 = v298 ^ (2
               * ((v305 << 16) & 0x41F30000 ^ v305 ^ ((v305 << 16) ^ 0x25E10000) & (((v304 ^ 0xC0C121E1) << 8) & 0x41F30000 ^ 0xD20000 ^ (((v304 ^ 0xC0C121E1) << 8) ^ 0x73250000) & (v304 ^ 0xC0C121E1))));
  v307 = v287 + 684451500;
  v308 = ((v287 + 684451500) ^ 0x3E1C1A17) & (2 * ((v287 + 684451500) & 0x3F5C5A94)) ^ (v287 + 684451500) & 0x3F5C5A94;
  v309 = ((2 * ((v287 + 684451500) ^ 0x5A34AF3F)) ^ 0xCAD1EB56) & ((v287 + 684451500) ^ 0x5A34AF3F) ^ (2 * ((v287 + 684451500) ^ 0x5A34AF3F)) & 0x6568F5AA;
  v310 = (v309 ^ 0x4040E000) & (4 * v308) ^ v308;
  v311 = ((4 * (v309 ^ 0x252814A9)) ^ 0x95A3D6AC) & (v309 ^ 0x252814A9) ^ (4 * (v309 ^ 0x252814A9)) & 0x6568F5A8;
  v312 = (v311 ^ 0x520D4A3) & (16 * v310) ^ v310;
  v313 = ((16 * (v311 ^ 0x60482103)) ^ 0x568F5AB0) & (v311 ^ 0x60482103) ^ (16 * (v311 ^ 0x60482103)) & 0x6568F5A0;
  v314 = v312 ^ 0x6568F5AB ^ (v313 ^ 0x44085000) & (v312 << 8);
  LODWORD(STACK[0x2B8]) = v307 ^ (2
                                * ((v314 << 16) & 0x65680000 ^ v314 ^ ((v314 << 16) ^ 0x75AB0000) & (((v313 ^ 0x2160A50B) << 8) & 0x65680000 ^ 0x5080000 ^ (((v313 ^ 0x2160A50B) << 8) ^ 0x68F50000) & (v313 ^ 0x2160A50B))));
  v315 = STACK[0x44C];
  v316 = (((v276 ^ 0x98A711D) + 557213525) ^ ((v276 ^ 0xCAF80F98) - 498853422) ^ ((v276 ^ 0xEF92F718) - 953228974))
       - (((v315 ^ 0xC1851FA) - 25746874) ^ ((v315 ^ 0xF081F91F) + 49187489) ^ ((v315 ^ 0xF452D76B) + 104703189));
  v317 = (((v315 ^ 0x9647FB11) + 1680378031) ^ ((v315 ^ 0x334667D4) - 1054272404) ^ ((v315 ^ 0xADCAE34B) + 1604686069))
       - (((v275 ^ 0xC91EF6D0) + 1473236828) ^ ((v275 ^ 0xE0E92734) + 2117607104) ^ ((v275 ^ 0xB7A1FCB7) + 695256381))
       - 176682668;
  v318 = (v317 ^ 0xB8C4F787) & (2 * (v317 & 0xBD1607A6)) ^ v317 & 0xBD1607A6;
  v319 = ((2 * (v317 ^ 0x92C4F2C7)) ^ 0x5FA5EAC2) & (v317 ^ 0x92C4F2C7) ^ (2 * (v317 ^ 0x92C4F2C7)) & 0x2FD2F560;
  v320 = v318 ^ 0x2FD2F561 ^ (v319 ^ 0xC802000) & (4 * v318);
  v321 = ((4 * (v319 ^ 0x20521521)) ^ 0xBF4BD584) & (v319 ^ 0x20521521) ^ (4 * (v319 ^ 0x20521521)) & 0x2FD2F560;
  v322 = v321 & 0x190A0718 ^ v320 ^ (v321 ^ 0x2F42D501) & ((16 * v320) ^ 0xE4255108);
  v323 = ((16 * v321) ^ 0xED275718) & (v321 ^ 0x2F42D501) ^ v321 & 0x190A0718;
  v324 = v323 & 0x190A0718 ^ v322 ^ ((v322 << 8) ^ 0xC9FA6618) & (v323 ^ 0x9020561);
  v325 = ((v323 << 8) ^ 0x1B0F0718) & (v323 ^ 0x9020561) ^ v323 & 0x190A0718;
  v326 = v317 ^ (2
               * (v324 ^ v325 & 0x190A0718 ^ ((v324 << 16) ^ 0xEC6B0718) & (v325 ^ 0x26D00000) ^ ((v324 << 16) ^ 0xEC6B0718) & 0x2FD20500));
  v327 = STACK[0x450];
  v328 = (((v327 ^ 0xF71443CF) + 622037202) ^ ((v327 ^ 0x5EDD8163) - 1931851138) ^ ((v327 ^ 0x677C16F8) - 1250173465))
       - (((v229 ^ 0xBEAB4A14) + 311467876) ^ ((v229 ^ 0x161DC8E6) - 1171907182) ^ ((v229 ^ 0x2A12636B) - 2044086755))
       - 914783039;
  v329 = (v328 ^ 0x385A2397) & (2 * (v328 & 0xBD408BD6)) ^ v328 & 0xBD408BD6;
  v330 = ((2 * (v328 ^ 0x505B301F)) ^ 0xDA377792) & (v328 ^ 0x505B301F) ^ (2 * (v328 ^ 0x505B301F)) & 0xED1BBBC8;
  v331 = (v330 ^ 0xC8023380) & (4 * v329) ^ v329;
  v332 = ((4 * (v330 ^ 0x25088849)) ^ 0xB46EEF24) & (v330 ^ 0x25088849) ^ (4 * (v330 ^ 0x25088849)) & 0xED1BBBC8;
  v333 = (v332 ^ 0xA40AAB00) & (16 * v331) ^ v331;
  v334 = ((16 * (v332 ^ 0x491110C9)) ^ 0xD1BBBC90) & (v332 ^ 0x491110C9) ^ (16 * (v332 ^ 0x491110C9)) & 0xED1BBBC0;
  v335 = v333 ^ 0xED1BBBC9 ^ (v334 ^ 0xC11BB800) & (v333 << 8);
  LODWORD(STACK[0x2BC]) = v328 ^ (2
                                * ((v335 << 16) & 0x6D1B0000 ^ v335 ^ ((v335 << 16) ^ 0x3BC90000) & (((v334 ^ 0x2C000349) << 8) & 0x6D1B0000 ^ 0x64000000 ^ (((v334 ^ 0x2C000349) << 8) ^ 0x1BBB0000) & (v334 ^ 0x2C000349))));
  v336 = (v285 - ((2 * v285) & 0x6E87CEB0) + 927197016) ^ v289;
  v337 = (((v336 ^ 0xB75A4CA1) - 972739946) ^ ((v336 ^ 0xAED1F2F8) - 544303923) ^ ((v336 ^ 0x98CEFBC1) - 376332810))
       + 1562846688;
  v338 = (v337 ^ 0x33535280) & (2 * (v337 & 0xB39204A8)) ^ v337 & 0xB39204A8;
  v339 = ((2 * (v337 ^ 0x75535A80)) ^ 0x8D82BC50) & (v337 ^ 0x75535A80) ^ (2 * (v337 ^ 0x75535A80)) & 0xC6C15E28;
  v340 = (v339 ^ 0x84801400) & (4 * v338) ^ v338;
  v341 = ((4 * (v339 ^ 0x42414228)) ^ 0x1B0578A0) & (v339 ^ 0x42414228) ^ (4 * (v339 ^ 0x42414228)) & 0xC6C15E28;
  v342 = (v341 ^ 0x2015820) & (16 * v340) ^ v340;
  v343 = ((16 * (v341 ^ 0xC4C00608)) ^ 0x6C15E280) & (v341 ^ 0xC4C00608) ^ (16 * (v341 ^ 0xC4C00608)) & 0xC6C15E20;
  v344 = v342 ^ 0xC6C15E28 ^ (v343 ^ 0x44014200) & (v342 << 8);
  LODWORD(STACK[0x2B4]) = v337 ^ (2
                                * ((v344 << 16) & 0x46C10000 ^ v344 ^ ((v344 << 16) ^ 0x5E280000) & (((v343 ^ 0x82C01C28) << 8) & 0x46C10000 ^ 0x6810000 ^ (((v343 ^ 0x82C01C28) << 8) ^ 0x415E0000) & (v343 ^ 0x82C01C28))));
  v345 = STACK[0x43C];
  v346 = (((v276 ^ 0x81FC59CA) - 1455403132) ^ ((v276 ^ 0x606E42F5) + 1221743805) ^ ((v276 ^ 0xCD7292A2) - 439450388))
       - (((v345 ^ 0x9D8816FE) + 1156815039) ^ ((v345 ^ 0xFE8F7BF3) + 670365108) ^ ((v345 ^ 0xB5F55A95) + 1821299926))
       + 1381133663;
  v347 = (v346 ^ 0xB6902E01) & (2 * (v346 & 0xB8DAACA5)) ^ v346 & 0xB8DAACA5;
  v348 = ((2 * (v346 ^ 0x97A5364B)) ^ 0x5EFF35DC) & (v346 ^ 0x97A5364B) ^ (2 * (v346 ^ 0x97A5364B)) & 0x2F7F9AEE;
  v349 = (v348 ^ 0x67F108C) & (4 * v347) ^ v347;
  v350 = ((4 * (v348 ^ 0x21008A22)) ^ 0xBDFE6BB8) & (v348 ^ 0x21008A22) ^ (4 * (v348 ^ 0x21008A22)) & 0x2F7F9AEC;
  v351 = (v350 ^ 0x2D7E0AA0) & (16 * v349) ^ v349;
  v352 = ((16 * (v350 ^ 0x2019046)) ^ 0xF7F9AEE0) & (v350 ^ 0x2019046) ^ (16 * (v350 ^ 0x2019046)) & 0x2F7F9AE0;
  v353 = v351 ^ 0x2F7F9AEE ^ (v352 ^ 0x27798A00) & (v351 << 8);
  v354 = v346 ^ (2
               * ((v353 << 16) & 0x2F7F0000 ^ v353 ^ ((v353 << 16) ^ 0x1AEE0000) & (((v352 ^ 0x806100E) << 8) & 0x2F7F0000 ^ 0x650000 ^ (((v352 ^ 0x806100E) << 8) ^ 0x7F9A0000) & (v352 ^ 0x806100E))));
  v355 = (v285 - ((2 * v285) & 0x85DC0F32) + 1122895769) ^ v284;
  v356 = STACK[0x428];
  v357 = (v355 ^ 0x76800308)
       - (((v269 ^ 0x8F924E2E) + 1218009137) ^ ((v269 ^ 0x8A52B6F0) + 1297719535) ^ ((v269 ^ 0x3E539980) - 111636577))
       - 2131954245;
  v358 = (v357 ^ 0x604C03FF) & (2 * (v357 & 0x4A8E43FC)) ^ v357 & 0x4A8E43FC;
  v359 = ((2 * (v357 ^ 0x70440057)) ^ 0x75948756) & (v357 ^ 0x70440057) ^ (2 * (v357 ^ 0x70440057)) & 0x3ACA43AA;
  v360 = (v359 ^ 0x30000300) & (4 * v358) ^ v358;
  v361 = ((4 * (v359 ^ 0xA4A40A9)) ^ 0xEB290EAC) & (v359 ^ 0xA4A40A9) ^ (4 * (v359 ^ 0xA4A40A9)) & 0x3ACA43A8;
  v362 = (v361 ^ 0x2A0802A0) & (16 * v360) ^ v360;
  v363 = ((16 * (v361 ^ 0x10C24103)) ^ 0xACA43AB0) & (v361 ^ 0x10C24103) ^ (16 * (v361 ^ 0x10C24103)) & 0x3ACA43A0;
  v364 = v362 ^ 0x3ACA43AB ^ (v363 ^ 0x2880020B) & (v362 << 8);
  v365 = v357 ^ (2
               * ((v364 << 16) & 0x3ACA0000 ^ v364 ^ ((v364 << 16) ^ 0x43AB0000) & (((v363 ^ 0x124A410B) << 8) & 0x3ACA0000 ^ 0x30880000 ^ (((v363 ^ 0x124A410B) << 8) ^ 0x4A430000) & (v363 ^ 0x124A410B))));
  LODWORD(STACK[0x2B0]) = v365;
  v366 = (((v356 ^ 0x556D27FC) - 1427314797) ^ ((v356 ^ 0xE2C4C962) + 491063565) ^ ((v356 ^ 0x23DCE1E3) - 597876338))
       - (((v345 ^ 0x2B5F249B) - 232477988) ^ ((v345 ^ 0x1D3EF687) - 1002080056) ^ ((v345 ^ 0xE093E584) + 971533253))
       + 1374391009;
  v367 = (v366 ^ 0xC8EACB8B) & (2 * (v366 & 0xED0C132A)) ^ v366 & 0xED0C132A;
  v368 = ((2 * (v366 ^ 0xD0EACFDF)) ^ 0x7BCDB9EA) & (v366 ^ 0xD0EACFDF) ^ (2 * (v366 ^ 0xD0EACFDF)) & 0x3DE6DCF4;
  v369 = (v368 ^ 0x384098E0) & (4 * v367) ^ v367;
  v370 = ((4 * (v368 ^ 0x4224415)) ^ 0xF79B73D4) & (v368 ^ 0x4224415) ^ (4 * (v368 ^ 0x4224415)) & 0x3DE6DCF4;
  v371 = (v370 ^ 0x358250C0) & (16 * v369) ^ v369;
  v372 = ((16 * (v370 ^ 0x8648C21)) ^ 0xDE6DCF50) & (v370 ^ 0x8648C21) ^ (16 * (v370 ^ 0x8648C21)) & 0x3DE6DCF0;
  v373 = v371 ^ 0x3DE6DCF5 ^ (v372 ^ 0x1C64CC00) & (v371 << 8);
  v374 = v366 ^ (2
               * ((v373 << 16) & 0x3DE60000 ^ v373 ^ ((v373 << 16) ^ 0x5CF50000) & (((v372 ^ 0x218210A5) << 8) & 0x3DE60000 ^ 0x19220000 ^ (((v372 ^ 0x218210A5) << 8) ^ 0x66DC0000) & (v372 ^ 0x218210A5))));
  LODWORD(STACK[0x414]) = *(_DWORD *)(v65 - 184) ^ 0x9E350335;
  v375 = *(_DWORD *)(v65 - 164) ^ 0xA156FA02;
  LODWORD(STACK[0x424]) = v289 ^ 0xFC24E3A0;
  LODWORD(STACK[0x41C]) = v327 ^ 0x5D2D0AC;
  LODWORD(STACK[0x208]) = v326;
  v376 = v326 ^ 0xF08B6D1;
  LODWORD(STACK[0x410]) = LODWORD(STACK[0x440]) ^ v326 ^ 0xF08B6D1 ^ 0x19C45BB5;
  LODWORD(STACK[0x440]) = *(_DWORD *)(v65 - 176) ^ 0xED39FCE3;
  *(_DWORD *)(v65 - 176) = v315 ^ 0x7A8D41E6;
  v377 = 146799374 - LODWORD(STACK[0x42C]);
  if (v498)
    v377 = v258;
  v378 = STACK[0x378];
  v379 = (((LODWORD(STACK[0x378]) ^ 0xDC40A1F1) - 334219350) ^ ((LODWORD(STACK[0x378]) ^ 0x5D4FD95C) + 1830506245) ^ ((LODWORD(STACK[0x378]) ^ 0xAE02E6AF) - 1638502152))
       - 2146958226
       + v377;
  v380 = (v379 ^ 0xF3EA3660) & (2 * (v379 & 0xFB8AA449)) ^ v379 & 0xFB8AA449;
  v381 = ((2 * (v379 ^ 0x44EE3E70)) ^ 0x7EC93472) & (v379 ^ 0x44EE3E70) ^ (2 * (v379 ^ 0x44EE3E70)) & 0xBF649A38;
  v382 = (v381 ^ 0x3E401020) & (4 * v380) ^ v380;
  v383 = ((4 * (v381 ^ 0x81248A09)) ^ 0xFD9268E4) & (v381 ^ 0x81248A09) ^ (4 * (v381 ^ 0x81248A09)) & 0xBF649A38;
  v384 = (v383 ^ 0xBD000820) & (16 * v382) ^ v382;
  v385 = ((16 * (v383 ^ 0x2649219)) ^ 0xF649A390) & (v383 ^ 0x2649219) ^ (16 * (v383 ^ 0x2649219)) & 0xBF649A30;
  v386 = v384 ^ 0xBF649A39 ^ (v385 ^ 0xB6408200) & (v384 << 8);
  v387 = (((2 * (STACK[0x430] & 0xFFDFFFFF ^ 0x2648D257)) | 0x233074A)
        - (STACK[0x430] & 0xFFDFFFFF ^ 0x2648D257)
        + 2129034331) ^ v379 ^ (2
                              * ((v386 << 16) & 0x3F640000 ^ v386 ^ ((v386 << 16) ^ 0x1A390000) & (((v385 ^ 0x9241829) << 8) & 0x3F640000 ^ 0x1B640000 ^ (((v385 ^ 0x9241829) << 8) ^ 0x649A0000) & (v385 ^ 0x9241829)))) ^ 0x6C7924EC;
  LODWORD(STACK[0x430]) = v229 ^ 0xA670C7FD;
  v388 = v276 ^ LODWORD(STACK[0x46C]);
  v389 = v388 ^ 0xD93C9B5E;
  v390 = STACK[0x454];
  LODWORD(STACK[0x40C]) = LODWORD(STACK[0x454]) ^ v388 ^ 0xD93C9B5E ^ 0xF6142DC9;
  LODWORD(STACK[0x43C]) = v345 ^ 0x2848EA42;
  LODWORD(STACK[0x46C]) = v269 ^ 0xAB8B08C2;
  LODWORD(STACK[0x404]) = v356 ^ 0x46D66E1;
  LODWORD(STACK[0x3FC]) = v270 ^ v388 ^ 0x72B7939C;
  LODWORD(STACK[0x408]) = v275 ^ v376 ^ 0x9D4CC28A;
  LODWORD(STACK[0x3D4]) = v286 - 2 * ((v286 - 1466540720) & 0x44B743F ^ v286 & 0xC) + 752996739;
  LODWORD(STACK[0x2C8]) = v316;
  v391 = 2 * (v316 - 261506378);
  LODWORD(STACK[0x2C4]) = v391;
  v392 = v316 - (v391 & 0xB2DE5C16) + 1238952129;
  LODWORD(STACK[0x238]) = v286 - 1466540720;
  v393 = v286 - 2 * ((v286 - 1466540720) & 0x7697B2FD ^ v286 & 4) + 523112521;
  HIDWORD(a60) = v286;
  LODWORD(STACK[0x218]) = v316 - 261506378;
  v394 = (v316 - 261506378) ^ v388 ^ 0xD93C9B5E;
  v395 = v394 ^ (v286 - 2 * ((v286 - 1466540720) & 0x188092DD ^ v286 & 4) - 1055461335) ^ 0x5AB839E1;
  v396 = v388 ^ 0xD93C9B5E ^ (v286 - 1466540720);
  *(_DWORD *)(v65 - 184) = v396;
  LODWORD(STACK[0x3D0]) = v396 ^ v392 ^ 0xB003381B ^ LODWORD(STACK[0x448]);
  v397 = STACK[0x478];
  LODWORD(STACK[0x20C]) = v306;
  v398 = v354 ^ 0x62EC9826;
  v399 = v390 ^ v397 ^ 0xCDEF818B ^ v306 ^ 0x9EEA624D;
  v400 = v354 ^ 0x62EC9826 ^ v399 ^ *(_DWORD *)(v65 - 144);
  LODWORD(STACK[0x3C8]) = v400;
  v401 = v378 ^ 0xCFAB69A7;
  v402 = v365 ^ 0x60E2B1AA;
  v403 = v354 ^ 0x62EC9826 ^ v399 ^ v375;
  v404 = v354 ^ 0x62EC9826 ^ v399 ^ *(_DWORD *)(v65 - 192);
  v405 = v365 ^ 0x60E2B1AA ^ v378 ^ 0xCFAB69A7;
  v406 = v405 ^ LODWORD(STACK[0x458]);
  LODWORD(STACK[0x3C4]) = v404;
  v407 = *(&off_1015B46D0 + (int)(*(_QWORD *)(v65 - 152) - 19579)) - 12;
  LODWORD(STACK[0x3CC]) = v407;
  v408 = (v404 ^ 0x89D5F7C6 ^ v406)
       - v407
       + (((v400 ^ 0xBD17901B) + 591445864) ^ ((v400 ^ 0x8387BEED) + 500208018) ^ ((v400 ^ 0xC52FD58C) + 1534655217));
  LODWORD(STACK[0x3A4]) = v276 ^ 0xE3DE99D;
  LODWORD(STACK[0x3AC]) = v394;
  v409 = v395 ^ v355;
  v410 = v394 ^ v393 ^ v276 ^ 0x683EE279 ^ v355;
  v411 = LODWORD(STACK[0x47C]) ^ 0x65766C9F;
  v412 = v365 ^ 0x60E2B1AA ^ LODWORD(STACK[0x2B8]) ^ 0xADC701C8;
  v413 = v412 ^ 0x44463F66 ^ v397;
  v414 = v412 ^ 0x44463F66 ^ *(_DWORD *)(v65 - 256);
  LODWORD(STACK[0x200]) = v354;
  v415 = *(_DWORD *)(v65 - 160) ^ v354 ^ 0x229A0E11 ^ v399;
  v416 = *(_DWORD *)(v65 - 188) ^ 0xBACC6C90;
  if ((((v404 ^ 0xC6 ^ v406)
       - (_BYTE)v407
       + ((((v400 ^ 0x1B) + 104) ^ ((v400 ^ 0xED) - 110)) ^ ((v400 ^ 0x8C) - 15))) & 1) != 0)
    v417 = v404 ^ 0x29CD65F8;
  else
    v417 = v403;
  LODWORD(STACK[0x454]) = v417;
  if ((v408 & 1) != 0)
    v418 = v400 ^ 0x61A8D083;
  else
    v418 = v404 ^ 0x29CD65F8;
  *(_DWORD *)(v65 - 164) = v418;
  if ((v408 & 1) != 0)
    v419 = v415;
  else
    v419 = v400 ^ 0x61A8D083;
  LODWORD(STACK[0x450]) = v419;
  if ((v408 & 1) != 0)
    v415 = v403;
  *(_DWORD *)(v65 - 188) = v415;
  v420 = STACK[0x470];
  v421 = v374 ^ 0x1BD05E70 ^ LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x434]) ^ 0x959146B3;
  v422 = LODWORD(STACK[0x414]) ^ v421;
  v423 = v416 ^ v421;
  v424 = *(_DWORD *)(v65 - 216) ^ 0x62BEF106 ^ v421;
  v425 = *(_DWORD *)(v65 - 220) ^ 0xECE0086C ^ v421;
  if ((v408 & 1) != 0)
    v426 = v423;
  else
    v426 = LODWORD(STACK[0x414]) ^ v421;
  LODWORD(STACK[0x47C]) = v426;
  if ((v408 & 1) != 0)
    v427 = v422;
  else
    v427 = v424;
  if ((v408 & 1) == 0)
    v424 = v425;
  LODWORD(STACK[0x478]) = v424;
  if ((v408 & 1) != 0)
    v428 = v425;
  else
    v428 = v423;
  v671 = LODWORD(STACK[0x2BC]) ^ 0x5D9EDD75;
  v429 = LODWORD(STACK[0x424]) ^ v398 ^ v671;
  v430 = LODWORD(STACK[0x41C]) ^ v398 ^ v671;
  v431 = LODWORD(STACK[0x440]) ^ v398 ^ v671;
  v432 = *(_DWORD *)(v65 - 224) ^ 0xD887642B ^ v398 ^ v671;
  v433 = v376;
  v434 = v402 ^ v376;
  v435 = *(_DWORD *)(v65 - 240) ^ 0xAB165103 ^ v434;
  v436 = *(_DWORD *)(v65 - 232) ^ 0x54DD4CA6 ^ v434;
  v437 = *(_DWORD *)(v65 - 228) ^ 0xCDED949F ^ v434;
  v438 = *(_DWORD *)(v65 - 176) ^ v412;
  v439 = *(_DWORD *)(v65 - 252) ^ 0xAF2DACF7 ^ v412;
  if ((v408 & 1) != 0)
    v440 = v439;
  else
    v440 = v438;
  LODWORD(STACK[0x44C]) = v440;
  if ((v408 & 1) != 0)
    v441 = v414;
  else
    v441 = v439;
  LODWORD(STACK[0x458]) = v441;
  if ((v408 & 1) != 0)
    v442 = v438;
  else
    v442 = v413;
  LODWORD(STACK[0x42C]) = v442;
  if ((v408 & 1) != 0)
    v443 = v413;
  else
    v443 = v414;
  LODWORD(STACK[0x448]) = v443;
  v444 = v401 ^ LODWORD(STACK[0x2C0]);
  v445 = v411 ^ v444;
  v446 = v420 ^ 0x7975EAFE ^ v444;
  v447 = LODWORD(STACK[0x45C]) ^ 0x1AC054B8 ^ v444;
  if ((v408 & 1) != 0)
    v448 = v387;
  else
    v448 = v445;
  *(_DWORD *)(v65 - 220) = v448;
  if ((v408 & 1) != 0)
  {
    v449 = v447;
  }
  else
  {
    v445 = v446;
    v449 = v387;
  }
  if ((v408 & 1) != 0)
    v450 = v446;
  else
    v450 = v447;
  *(_DWORD *)(v65 - 232) = v450;
  v451 = LODWORD(STACK[0x474]) ^ 0xCFB7AE6D;
  v452 = LODWORD(STACK[0x464]) ^ 0x949F47E7;
  v453 = v406 ^ 0x7EFFE6B8;
  v454 = LODWORD(STACK[0x468]) ^ 0x58622CC8;
  v455 = LODWORD(STACK[0x460]) ^ 0x29DDA8DD;
  LODWORD(STACK[0x3A8]) = v405;
  v456 = LODWORD(STACK[0x43C]) ^ v405;
  v457 = v454 ^ v405;
  if ((v408 & 1) != 0)
    v458 = v453;
  else
    v458 = v457;
  LODWORD(STACK[0x440]) = v458;
  if ((v408 & 1) != 0)
    v459 = v457;
  else
    v459 = v456;
  LODWORD(STACK[0x428]) = v459;
  if ((v408 & 1) != 0)
    v453 = v455 ^ v405;
  LODWORD(STACK[0x424]) = v453;
  if ((v408 & 1) != 0)
    v460 = v456;
  else
    v460 = v455 ^ v405;
  LODWORD(STACK[0x43C]) = v460;
  v461 = LODWORD(STACK[0x420]) ^ 0xE787532C;
  v462 = LODWORD(STACK[0x444]) ^ 0x70A82071;
  *(_DWORD *)(v65 - 240) = v401 ^ v389;
  v463 = LODWORD(STACK[0x46C]) ^ v401 ^ v389;
  v464 = LODWORD(STACK[0x404]) ^ v401 ^ v389;
  v465 = LODWORD(STACK[0x3FC]) ^ v401;
  v466 = v462 ^ v401 ^ v389;
  if ((v408 & 1) != 0)
    v467 = LODWORD(STACK[0x404]) ^ v401 ^ v389;
  else
    v467 = LODWORD(STACK[0x46C]) ^ v401 ^ v389;
  *(_DWORD *)(v65 - 216) = v467;
  if ((v408 & 1) != 0)
    v468 = v466;
  else
    v468 = v464;
  LODWORD(STACK[0x420]) = v468;
  if ((v408 & 1) != 0)
    v469 = v465;
  else
    v469 = v466;
  *(_DWORD *)(v65 - 224) = v469;
  if ((v408 & 1) != 0)
    v470 = v463;
  else
    v470 = v465;
  LODWORD(STACK[0x41C]) = v470;
  v471 = LODWORD(STACK[0x438]) ^ 0x8360B22B;
  v472 = v394 ^ LODWORD(STACK[0x3D4]) ^ 0x31B6999B ^ LODWORD(STACK[0x418]);
  if ((v408 & 1) != 0)
    v473 = v409;
  else
    v473 = v410;
  LODWORD(STACK[0x46C]) = v473;
  v474 = STACK[0x3D0];
  if ((v408 & 1) != 0)
    v475 = v410;
  else
    v475 = STACK[0x3D0];
  LODWORD(STACK[0x418]) = v475;
  if ((v408 & 1) != 0)
    v476 = v474;
  else
    v476 = v472;
  LODWORD(STACK[0x444]) = v476;
  if ((v408 & 1) != 0)
    v477 = v472;
  else
    v477 = v409;
  LODWORD(STACK[0x414]) = v477;
  v478 = STACK[0x2B4];
  v479 = LODWORD(STACK[0x2B4]) ^ 0x21C78FD9;
  v480 = LODWORD(STACK[0x410]) ^ LODWORD(STACK[0x2B0]);
  v481 = STACK[0x400];
  LODWORD(STACK[0x224]) = v389;
  HIDWORD(v670) = v481 ^ 0xCC1A6FAF;
  v482 = v481 ^ 0xCC1A6FAF ^ v389;
  v483 = LODWORD(STACK[0x430]) ^ v482;
  v484 = LODWORD(STACK[0x40C]) ^ v481;
  v485 = LODWORD(STACK[0x408]) ^ v478;
  LODWORD(STACK[0x204]) = v433;
  v486 = v479 ^ v433;
  *(_DWORD *)(v65 - 256) = v479 ^ v433;
  v487 = LODWORD(STACK[0x3A4]) ^ v479 ^ v433;
  LODWORD(STACK[0x3D0]) = v429;
  if ((v408 & 1) != 0)
    v429 = v432;
  LODWORD(STACK[0x410]) = v429;
  if ((v408 & 1) != 0)
    v432 = v431;
  *(_DWORD *)(v65 - 228) = v432;
  LODWORD(STACK[0x3A0]) = v430;
  if ((v408 & 1) != 0)
    v488 = v430;
  else
    v488 = v431;
  LODWORD(STACK[0x408]) = v488;
  LODWORD(STACK[0x394]) = v436;
  if ((v408 & 1) != 0)
    v489 = v436;
  else
    v489 = v435;
  LODWORD(STACK[0x40C]) = v489;
  if ((v408 & 1) != 0)
    v490 = v435;
  else
    v490 = v480;
  LODWORD(STACK[0x384]) = v490;
  LODWORD(STACK[0x388]) = v437;
  if ((v408 & 1) != 0)
    v491 = v480;
  else
    v491 = v437;
  LODWORD(STACK[0x404]) = v491;
  v492 = v451 ^ v482;
  v493 = v461 ^ v486;
  LODWORD(STACK[0x350]) = v487;
  if ((v408 & 1) != 0)
    v494 = v493;
  else
    v494 = v487;
  if ((v408 & 1) != 0)
    v493 = v485;
  LODWORD(STACK[0x438]) = v493;
  v495 = v471 ^ v486;
  LODWORD(STACK[0x330]) = v471 ^ v486;
  if ((v408 & 1) == 0)
    v495 = v485;
  LODWORD(STACK[0x3FC]) = v408;
  v496 = v408 ^ (2 * v408);
  LODWORD(STACK[0x358]) = v484;
  LODWORD(STACK[0x348]) = v492;
  if ((v408 & 1) == 0)
    v492 = v484;
  LODWORD(STACK[0x434]) = v492;
  LODWORD(STACK[0x374]) = v483;
  LODWORD(STACK[0x340]) = v452 ^ v482;
  if ((v408 & 1) != 0)
    v497 = v452 ^ v482;
  else
    v497 = v483;
  LODWORD(STACK[0x430]) = v497;
  *(_DWORD *)(v65 - 176) = v496;
  v498 = (v496 & 2) == 0;
  if ((v496 & 2) != 0)
    v499 = v427;
  else
    v499 = v428;
  LODWORD(STACK[0x460]) = v499;
  if (v498)
    v500 = v427;
  else
    v500 = v428;
  LODWORD(STACK[0x45C]) = v500;
  if (v498)
    v501 = v449;
  else
    v501 = v445;
  *(_DWORD *)(v65 - 252) = v501;
  if (v498)
    v502 = v445;
  else
    v502 = v449;
  LODWORD(STACK[0x3A4]) = v502;
  v503 = STACK[0x3D8];
  v504 = *(_DWORD *)(STACK[0x3D8] + 4 * (*(_DWORD *)(v65 - 204) ^ 0x27u));
  if (v498)
    v505 = v494;
  else
    v505 = v495;
  LODWORD(STACK[0x3D4]) = v505;
  if (!v498)
    v495 = v494;
  LODWORD(STACK[0x468]) = v495;
  v506 = *(_QWORD *)(v65 - 248);
  v507 = *(_DWORD *)(v506 + 4 * (LODWORD(STACK[0x3EC]) ^ 0x2E8u)) ^ *(_DWORD *)(v65 - 208) ^ __ROR4__((v504 + 1697124714) ^ 0xEE9C6244 ^ ((v504 + 1697124714) >> 3) & 0x5E20625, 8) ^ __ROR4__(((*(_DWORD *)(v65 - 200) ^ 0xFB) + (*(_DWORD *)(v65 - 200) ^ 0xAC4E6C18) + *(_DWORD *)(STACK[0x3E0] + 4 * (*(_DWORD *)(v65 - 200) ^ 0x60u))) ^ 0x96EF801A, 16) ^ __ROR4__(((*(_DWORD *)(v65 - 196) ^ 0x34) + (*(_DWORD *)(v65 - 196) ^ 0xAC4E6CD7) + *(_DWORD *)(STACK[0x3E0] + 4 * (*(_DWORD *)(v65 - 196) ^ 0xAFu))) ^ 0x96EF801A, 24);
  v508 = ((v507 ^ *(_DWORD *)(v65 - 160)) - ((2 * (v507 ^ *(_DWORD *)(v65 - 160))) & 0x94DD5F66) + 1248767923) ^ *(_DWORD *)(v65 - 144);
  v509 = (v508 - ((2 * v508) & 0x8C769822) - 969192431) ^ *(_DWORD *)(v65 - 192);
  v510 = v509 ^ 0xD40214E6;
  v511 = STACK[0x3F0];
  HIDWORD(v512) = *(_DWORD *)(STACK[0x3F0]
                            + 4
                            * (((unsigned __int16)((v508 - ((2 * v508) & 0x9822) + 19473) ^ *(_WORD *)(v65 - 192) ^ 0xA585) >> 8) ^ 0x3Eu)) ^ 0x2D91FBB8;
  LODWORD(v512) = HIDWORD(v512);
  v513 = (v512 >> 24) ^ __ROR4__(*(_DWORD *)(v506 + 4 * (HIBYTE(v509) ^ 0x12)) ^ 0x16450C34, 8) ^ *(_DWORD *)(STACK[0x3F0] + 4 * (v509 ^ 0x69u)) ^ __ROR4__(*(_DWORD *)(STACK[0x3F0] + 4 * (((v509 ^ 0x4D1EA585) >> 16) ^ 0x93u)) ^ 0x2D91FBB8, 16);
  v514 = v508 ^ 0x1CFD87D2;
  v515 = *(_DWORD *)(v65 - 212);
  v516 = v513 ^ v515;
  v517 = v513 ^ v515 ^ v514;
  v518 = *(_DWORD *)(v503 + 4 * (((unsigned __int16)(v510 ^ v517) >> 8) ^ 0x60u)) + 1697124714;
  v519 = *(_DWORD *)(v503 + 4 * (((v510 ^ v517) >> 16) ^ 0x1Eu)) + 1697124714;
  v520 = *(_DWORD *)(STACK[0x3F0] + 4 * ((v510 ^ v517) ^ 0xB8u)) ^ v507 ^ __ROR4__(*(_DWORD *)(STACK[0x3F0] + 4 * (((v510 ^ v517) >> 24) ^ 0xCE)) ^ 0x2D91FBB8, 8) ^ __ROR4__(v518 ^ 0xEE9C6244 ^ (v518 >> 3) & 0x5E20625, 24) ^ __ROR4__(v519 ^ 0xEE9C6244 ^ (v519 >> 3) & 0x5E20625, 16);
  v521 = v515 ^ 0x51E32257 ^ v520;
  v522 = v510 ^ v521;
  v523 = *(_DWORD *)(v506 + 4 * (v522 ^ 0x73u)) ^ __ROR4__(*(_DWORD *)(v506 + 4 * (BYTE1(v522) ^ 0x42u)) ^ 0x16450C34, 24) ^ __ROR4__(((HIBYTE(v522) ^ 0xAC4E6CF7)+ (HIBYTE(v522) ^ 0x14)+ *(_DWORD *)(STACK[0x3E0]+ 4 * (HIBYTE(v522) ^ 0x8F))) ^ 0x96EF801A, 8) ^ __ROR4__(((BYTE2(v522) ^ 0x4D)+ (BYTE2(v522) ^ 0xAC4E6CAE)+ *(_DWORD *)(STACK[0x3E0]+ 4* ((HIWORD(v522) & 0x80 | (BYTE2(v522) ^ 0x4D) & 0x7F) ^ 0x9B))) ^ 0x96EF801A, 16);
  v524 = v513 ^ v515 ^ v517 ^ v521 ^ 0x92FBA6E2 ^ v523;
  v525 = v524 ^ v522;
  v526 = v525 ^ 0x171A9053;
  v525 ^= 0xC64139E2;
  v527 = *(_DWORD *)(v503 + 4 * (BYTE2(v526) ^ 0xF3u));
  v528 = v520 ^ v513 ^ *(_DWORD *)(STACK[0x3F0] + 4 * (v526 ^ 0x3Eu)) ^ __ROR4__(*(_DWORD *)(STACK[0x3F0] + 4 * (BYTE1(v526) ^ 0x26u)) ^ 0x2D91FBB8, 24) ^ __ROR4__((((v527 + 1697124714) ^ (-1697124714 - v527) ^ (((v527 + 1697124714) ^ 0x11639DBB) - 291741115)) - 291741116) ^ ((v527 + 1697124714) >> 3) & 0x5E20625, 16) ^ __ROR4__(((HIBYTE(v525) ^ 0x55) + (HIBYTE(v525) ^ 0xAC4E6CB6) + *(_DWORD *)(STACK[0x3E0] + 4 * (HIBYTE(v525) ^ 0xCE))) ^ 0x96EF801A, 8);
  v529 = v516 ^ 0x489DAC8F ^ v528;
  v530 = v529 ^ v524;
  v531 = v529 ^ v524 ^ v525;
  v532 = *(_DWORD *)(v503 + 4 * (HIBYTE(v531) ^ 0xA8)) + 1697124714;
  v533 = *(_DWORD *)(v503 + 4 * (v531 ^ 0x2Au)) + 1697124714;
  v534 = v533 ^ __ROR4__(*(_DWORD *)(STACK[0x3F0] + 4 * (((v531 ^ 0xAE4C82) >> 16) ^ 0x8Fu)) ^ 0x2D91FBB8, 16) ^ __ROR4__(v532 ^ 0xEE9C6244 ^ (v532 >> 3) & 0x5E20625, 8) ^ (v533 >> 3) & 0x5E20625 ^ v523 ^ v528 ^ __ROR4__(((((unsigned __int16)(v531 ^ 0x4C82) >> 8) ^ 0xAC4E6CB6) + (((unsigned __int16)(v531 ^ 0x4C82) >> 8) ^ 0x55) + *(_DWORD *)(STACK[0x3E0] + 4 * (((unsigned __int16)(v531 ^ 0x4C82) >> 8) ^ 0xCEu))) ^ 0x96EF801A, 24);
  v535 = v534 ^ 0x1A7A53E0;
  v536 = v534 ^ 0x1A7A53E0 ^ (v529 - ((2 * v529) & 0x34F4A7C0) + 444224480);
  v537 = v530 ^ 0xC2364204 ^ v536;
  v538 = v537 ^ ((v531 ^ 0xAE4C82) - 2 * ((v531 ^ 0xAE4C82) & 0x18FE04FF ^ v531 & 0x14) + 419300587);
  v539 = *(_DWORD *)(v503
                   + 4
                   * (v530 ^ 4 ^ v536 ^ ((v531 ^ 0x82)
                                                                                          - 2
                                                                                          * (v531 ^ 0x82 ^ v531 & 0x14)
                                                                                          - 21) ^ 0x39u))
       + 1697124714;
  v540 = *(_DWORD *)(v503 + 4 * (BYTE1(v538) ^ 0x3Bu)) + 1697124714;
  v541 = v538 ^ 0x3835B1A5;
  v542 = (v539 >> 3) & 0x5E20625 ^ v539 ^ __ROR4__(*(_DWORD *)(v506 + 4 * (BYTE2(v538) ^ 0xADu)) ^ 0x16450C34, 16) ^ __ROR4__(*(_DWORD *)(STACK[0x3F0] + 4 * (HIBYTE(v538) ^ 0x35)) ^ 0x2D91FBB8, 8) ^ __ROR4__(v540 ^ 0xEE9C6244 ^ (v540 >> 3) & 0x5E20625, 24) ^ v534;
  v543 = v542 ^ 0xA7CE0AC7;
  v544 = v536 ^ v542 ^ 0xA7CE0AC7;
  v545 = ((v544 ^ v537 ^ 0xD65B9DBD) - ((2 * (v544 ^ v537 ^ 0xD65B9DBD)) & 0x4BC4468) - 2107760076) ^ v538 ^ 0x3835B1A5;
  v546 = ((unsigned __int16)(((v544 ^ v537 ^ 0x9DBD) - ((2 * (v544 ^ v537 ^ 0x9DBD)) & 0x4468) + 8756) ^ v538 ^ 0xB1A5) >> 8);
  v547 = (v546 ^ 0xAC4E6C25) + (v546 ^ 0xC6) + *(_DWORD *)(STACK[0x3E0] + 4 * (v546 ^ 0x5Du));
  v548 = (((v544 ^ v537 ^ 0xBD) - ((2 * (v544 ^ v537 ^ 0xBD)) & 0x68) + 52) ^ v541);
  HIDWORD(v512) = *(_DWORD *)(STACK[0x3F0] + 4 * (HIBYTE(v545) ^ 0xD0)) ^ 0x2D91FBB8;
  LODWORD(v512) = HIDWORD(v512);
  v549 = (v512 >> 8) ^ __ROR4__(*(_DWORD *)(STACK[0x3F0] + 4 * (BYTE2(v545) ^ 0xE4u)) ^ 0x2D91FBB8, 16) ^ v542 ^ ((v548 ^ 0xC4) + *(_DWORD *)(STACK[0x3E0] + 4 * (v548 ^ 0x5Fu)) + (((v548 ^ 0x2A80C69) - ((2 * (v548 ^ 0x2A80C69)) & 0x540116E) - 1414096201) ^ 0x550FAF9)) ^ __ROR4__(v547 ^ 0x96EF801A, 24) ^ 0x915D5DF2;
  v550 = v549 ^ v544 ^ v544 ^ v537 ^ 0x9782585B;
  v551 = ((v550 ^ 0x26EB534B) - ((2 * (v550 ^ 0x26EB534B)) & 0x255BC610) + 313385736) ^ v545 ^ 0x4DC67099;
  v552 = ((unsigned __int16)(((v550 ^ 0x534B) - ((2 * (v550 ^ 0x534B)) & 0xC610) - 7416) ^ v545 ^ 0x7099) >> 8);
  v553 = (v552 ^ 0x1E) + (v552 ^ 0xAC4E6CFD) + *(_DWORD *)(STACK[0x3E0] + 4 * (v552 ^ 0x85u));
  v554 = v551 ^ 0x8A9E9DBA;
  v555 = *(_DWORD *)(STACK[0x3F0]
                   + 4 * ((((v550 ^ 0x4B) - ((2 * (v550 ^ 0x4B)) & 0x10) + 8) ^ v545 ^ 0x99) ^ 0x60u)) ^ __ROR4__(*(_DWORD *)(v506 + 4 * (BYTE2(v551) ^ 0xEEu)) ^ 0x16450C34, 16) ^ __ROR4__((*(_DWORD *)(STACK[0x3E0] + 4 * (HIBYTE(v551) ^ 0x5B)) + 2 * ((HIBYTE(v551) ^ 0xC0) & (HIBYTE(v551) ^ 0x2C4E6C23)) - 1404146461) ^ 0x96EF801A, 8);
  LODWORD(v512) = __ROR4__(v553 ^ 0x96EF801A, 24);
  v556 = v550 ^ 0xA1C39617;
  v557 = (v555 ^ v512) - 1856152078 + (~(2 * (v555 ^ v512)) | 0xDD45441B) + 1;
  v558 = v549 ^ 0xA09D070A ^ v557;
  v559 = v557 ^ v544;
  v560 = v559 ^ 0x8D378029;
  v561 = v559 ^ 0x8D378029 ^ v550 ^ 0xA1C39617;
  v562 = ((unsigned __int16)(v559 ^ 0x8029 ^ v550 ^ 0x9617 ^ v554) >> 8);
  v563 = (v562 ^ 0xB2) + (v562 ^ 0xAC4E6C51) + *(_DWORD *)(STACK[0x3E0] + 4 * (v562 ^ 0x29u));
  *(_DWORD *)(v65 - 144) = v561 ^ v554 ^ 0xC7C749E0;
  v564 = *(_DWORD *)(v506
                   + 4 * (v559 ^ 0x29 ^ v550 ^ 0x17 ^ v554 ^ 0x15u)) ^ __ROR4__(*(_DWORD *)(v506 + 4 * (((v561 ^ v554) >> 24) ^ 0xA0)) ^ 0x16450C34, 8) ^ __ROR4__(*(_DWORD *)(v511 + 4 * (((v561 ^ v554 ^ 0x82F2C26) >> 16) ^ 0x48u)) ^ 0x2D91FBB8, 16);
  LODWORD(v512) = __ROR4__(v563 ^ 0x96EF801A, 24);
  v565 = ((v564 ^ v512) - ((2 * (v564 ^ v512)) & 0xD2B08334) - 380092006) ^ v558;
  v566 = v559 ^ 0x4104E128 ^ (v565 - ((2 * v565) & 0xEB627E5E) + 1974550319);
  v567 = STACK[0x2C4];
  v568 = STACK[0x2C8];
  *(_DWORD *)(v65 - 192) = LODWORD(STACK[0x2C8]) - (STACK[0x2C4] & 0x534FB7E2) - 1710123353;
  *(_DWORD *)(v65 - 160) = v568 - (v567 & 0x7C7C4304) - 1364730824;
  v569 = v568 - 1285977870 + (~v567 | 0x7A206389);
  v570 = LODWORD(STACK[0x3C4]) ^ 0xC478E67F;
  v571 = LODWORD(STACK[0x3C4]) ^ 0xB3DA4E01;
  v572 = (LODWORD(STACK[0x3C8]) ^ 0xFBBFFB7A) - LODWORD(STACK[0x3CC]) - 1947038140;
  LODWORD(STACK[0x2E4]) = (2 * v571) & 0x7488088C;
  LODWORD(STACK[0x2E0]) = v571 - 1169947578;
  v573 = v537 ^ 0x8BECF855 ^ v482;
  v574 = v536 ^ 0x4974F6D3 ^ v482;
  v575 = v541 ^ 0xAB274D1B ^ v482;
  v576 = v535 ^ 0xD4F954E6 ^ v482;
  v577 = LODWORD(STACK[0x3A8]) ^ v544;
  v578 = v545 ^ 0x3F7EED11 ^ LODWORD(STACK[0x3A8]);
  v579 = v543 ^ 0x2BBD7E2A ^ LODWORD(STACK[0x3A8]);
  v580 = v544 ^ v537 ^ 0xE92570AC ^ LODWORD(STACK[0x3A8]);
  v581 = v556 ^ 0xF4880FF2;
  v582 = *(_DWORD *)(v65 - 240);
  v583 = v549 ^ 0x605C56C4 ^ v582;
  LODWORD(v584) = v549 ^ v544 ^ 0x4BF9CF92 ^ v582;
  v585 = v581 ^ v582;
  v586 = v554 ^ 0xF93E5714 ^ v582;
  v587 = v558 ^ 0x8C379901;
  v588 = *(_DWORD *)(v65 - 144);
  v589 = *(_DWORD *)(v65 - 256);
  v590 = v588 ^ 0xC69D41F7 ^ v589;
  v591 = v561 ^ 0x1EECDE42 ^ v589;
  v592 = v560 ^ 0xCEC50F1 ^ v589;
  v593 = v587 ^ v589;
  v594 = LODWORD(STACK[0x3AC]) ^ LODWORD(STACK[0x238]) ^ v565 ^ 0xFD4F1049;
  v595 = *(_DWORD *)(v65 - 184);
  v596 = v595 ^ *(_DWORD *)(v65 - 192) ^ v566 ^ 0x86342AA3;
  v597 = v595 ^ v566 ^ v561;
  v598 = v597 ^ v588 ^ v569 ^ 0x350DA0DC;
  v599 = v597 ^ *(_DWORD *)(v65 - 160) ^ 0xE8F3E156;
  LODWORD(STACK[0x324]) = v572;
  v600 = (v570 ^ v577) + v572;
  if (v498)
    v601 = STACK[0x450];
  else
    v601 = STACK[0x454];
  v602 = STACK[0x47C];
  if (!v498)
    v602 = STACK[0x478];
  *(_DWORD *)(v65 - 212) = v602;
  v603 = *(_DWORD *)(v65 - 188);
  if (!v498)
    v603 = *(_DWORD *)(v65 - 164);
  v604 = STACK[0x410];
  if (v498)
    v604 = STACK[0x408];
  *(_DWORD *)(v65 - 208) = v604;
  v605 = STACK[0x40C];
  if (!v498)
    v605 = STACK[0x404];
  LODWORD(STACK[0x470]) = v605;
  v606 = STACK[0x42C];
  if (!v498)
    v606 = STACK[0x458];
  *(_DWORD *)(v65 - 256) = v606;
  v607 = STACK[0x430];
  if (v498)
    v607 = STACK[0x434];
  LODWORD(STACK[0x3AC]) = v607;
  v608 = *(_DWORD *)(v65 - 220);
  if (!v498)
    v608 = *(_DWORD *)(v65 - 232);
  LODWORD(STACK[0x39C]) = v608;
  v609 = STACK[0x424];
  if (v498)
  {
    v610 = STACK[0x43C];
  }
  else
  {
    v609 = STACK[0x428];
    v610 = STACK[0x440];
  }
  v611 = STACK[0x41C];
  if (v498)
  {
    v612 = *(_DWORD *)(v65 - 216);
  }
  else
  {
    v611 = STACK[0x420];
    v612 = *(_DWORD *)(v65 - 224);
  }
  v613 = STACK[0x418];
  if (!v498)
    v613 = STACK[0x414];
  HIDWORD(v669) = v613;
  v614 = STACK[0x444];
  if (v498)
    v614 = STACK[0x46C];
  if ((v600 & 1) != 0)
    v615 = v596;
  else
    v615 = v594;
  LODWORD(STACK[0x3F0]) = v615;
  if ((v600 & 1) != 0)
    v596 = v599;
  else
    v594 = v598;
  if ((v600 & 1) != 0)
    v599 = v598;
  LODWORD(STACK[0x3EC]) = v599;
  LODWORD(STACK[0x318]) = v573;
  if ((v600 & 1) != 0)
    v616 = v575;
  else
    v616 = v573;
  if ((v600 & 1) != 0)
    v575 = v576;
  *(_DWORD *)(v65 - 184) = v575;
  LODWORD(STACK[0x310]) = v574;
  if ((v600 & 1) != 0)
    v617 = v574;
  else
    v617 = v576;
  LODWORD(STACK[0x2AC]) = v577;
  v618 = v577 ^ 0x4BB0E7D6;
  LODWORD(STACK[0x30C]) = v578;
  LODWORD(STACK[0x300]) = v580;
  if ((v600 & 1) != 0)
    v619 = v578;
  else
    v619 = v580;
  LODWORD(STACK[0x3E0]) = v619;
  LODWORD(STACK[0x2FC]) = v579;
  LODWORD(STACK[0x2A8]) = v618;
  if ((v600 & 1) == 0)
    v618 = v579;
  LODWORD(STACK[0x3D8]) = v618;
  LODWORD(STACK[0x2F0]) = v585;
  LODWORD(STACK[0x2EC]) = v584;
  if ((v600 & 1) != 0)
    v584 = v585;
  else
    v584 = v584;
  LODWORD(STACK[0x2F8]) = v583;
  LODWORD(STACK[0x2E8]) = v586;
  if ((v600 & 1) != 0)
    v620 = v583;
  else
    v620 = v586;
  LODWORD(STACK[0x390]) = v590;
  LODWORD(STACK[0x368]) = v591;
  if ((v600 & 1) != 0)
    v621 = v590;
  else
    v621 = v591;
  LODWORD(STACK[0x2DC]) = v621;
  LODWORD(STACK[0x364]) = v592;
  LODWORD(STACK[0x360]) = v593;
  if ((v600 & 1) != 0)
    v622 = v592;
  else
    v622 = v593;
  LODWORD(STACK[0x2D0]) = v622;
  LODWORD(STACK[0x3CC]) = v600;
  v623 = (v600 & 2) == 0;
  if ((v600 & 2) != 0)
    v624 = v616;
  else
    v624 = v617;
  LODWORD(v666) = v624;
  if ((v600 & 2) == 0)
    v617 = v616;
  HIDWORD(v666) = v617;
  if ((v600 & 2) != 0)
    v625 = v594;
  else
    v625 = v596;
  LODWORD(v669) = v625;
  if ((v600 & 2) != 0)
    v594 = v596;
  LODWORD(v670) = v594;
  LODWORD(STACK[0x3C4]) = v611;
  LODWORD(STACK[0x3A8]) = v609;
  v626 = (((LODWORD(STACK[0x45C]) ^ 0xB91F2653) + 1189140909) ^ ((LODWORD(STACK[0x45C]) ^ 0x2A7FE75D) - 713025373) ^ ((LODWORD(STACK[0x45C]) ^ 0x9B186E31) + 1692897743))
       - 1798364522;
  v627 = (v626 ^ 0x9E656927) & (2 * (v626 & 0xDE717137)) ^ v626 & 0xDE717137;
  v628 = ((2 * (v626 ^ 0x1E878B0B)) ^ 0x81EDF478) & (v626 ^ 0x1E878B0B) ^ (2 * (v626 ^ 0x1E878B0B)) & 0xC0F6FA3C;
  v629 = (v628 ^ 0x80C4C038) & (4 * v627) ^ v627;
  v630 = ((4 * (v628 ^ 0x40120A04)) ^ 0x3DBE8F0) & (v628 ^ 0x40120A04) ^ (4 * (v628 ^ 0x40120A04)) & 0xC0F6FA3C;
  v631 = (v630 ^ 0xD2E830) & (16 * v629) ^ v629;
  v632 = ((16 * (v630 ^ 0xC024120C)) ^ 0xF6FA3C0) & (v630 ^ 0xC024120C) ^ (16 * (v630 ^ 0xC024120C)) & 0xC0F6FA30;
  v633 = v631 ^ 0xC0F6FA3C ^ (v632 ^ 0x66A200) & (v631 << 8);
  v634 = v626 ^ (2
               * ((v633 << 16) & 0x40F60000 ^ v633 ^ ((v633 << 16) ^ 0x7A3C0000) & (((v632 ^ 0xC090583C) << 8) & 0x40F60000 ^ (((v632 ^ 0xC090583C) << 8) ^ 0x76FA0000) & (v632 ^ 0xC090583C) ^ 0x40000)));
  LODWORD(STACK[0x3C8]) = v603;
  v635 = (((v609 ^ 0x5BF48601) - 1542751745) ^ ((v609 ^ 0xD45CF49F) + 732105569) ^ ((v609 ^ 0xCB582DE1) + 883413535))
       + (((v611 ^ 0x9787D3C0) + 1154078973) ^ ((v611 ^ 0xEEE03E88) + 1034827189) ^ ((v611 ^ 0x4BD3832E) - 1734506477))
       + (((v603 ^ 0x47B5F618) - 1203107352) ^ ((v603 ^ 0x6C375DC5) - 1815567813) ^ ((v603 ^ 0xB1958024) + 1315602396))
       - 16480058;
  v636 = (v635 ^ 0xF78CCB71) & (2 * (v635 & 0xF7CCE071)) ^ v635 & 0xF7CCE071;
  v637 = ((2 * (v635 ^ 0x53958BB3)) ^ 0x48B2D784) & (v635 ^ 0x53958BB3) ^ (2 * (v635 ^ 0x53958BB3)) & 0xA4596BC2;
  v638 = (v637 ^ 0x100380) & (4 * v636) ^ v636;
  v639 = ((4 * (v637 ^ 0xA4492842)) ^ 0x9165AF08) & (v637 ^ 0xA4492842) ^ (4 * (v637 ^ 0xA4492842)) & 0xA4596BC0;
  v640 = (v639 ^ 0x80412B00) & (16 * v638) ^ v638;
  v641 = ((16 * (v639 ^ 0x241840C2)) ^ 0x4596BC20) & (v639 ^ 0x241840C2) ^ (16 * (v639 ^ 0x241840C2)) & 0xA4596BC0;
  v642 = v640 ^ 0xA4596BC2 ^ (v641 ^ 0x4102800) & (v640 << 8);
  v643 = v635 ^ (2
               * ((v642 << 16) & 0x24590000 ^ v642 ^ ((v642 << 16) ^ 0x6BC20000) & (((v641 ^ 0xA04943C2) << 8) & 0xA4590000 ^ 0x24100000 ^ (((v641 ^ 0xA04943C2) << 8) ^ 0x596B0000) & (v641 ^ 0xA04943C2))));
  LODWORD(STACK[0x474]) = v612;
  v644 = LODWORD(STACK[0x2CC]) >> 3;
  *(_DWORD *)(v65 - 204) = v644;
  v645 = v644 ^ 0xFAF1F7Au;
  LODWORD(STACK[0x398]) = v601;
  v646 = (((v634 ^ 0xFDAD02F8) + 1240696837) ^ ((v634 ^ 0x1375B0FD) - 1490339326) ^ ((v634 ^ 0x70F679A3) - 995560608))
       - (((v601 ^ 0xDBF33885) + 604817275) ^ ((v601 ^ 0x54853D7F) - 1418018175) ^ ((v601 ^ 0x15612E03) - 358690307))
       + 1361059989;
  v647 = (v646 ^ 0xC85D6BD6) & (2 * (v646 & 0xEA587217)) ^ v646 & 0xEA587217;
  v648 = ((2 * (v646 ^ 0xCC4DCFFC)) ^ 0x4C2B7BD6) & (v646 ^ 0xCC4DCFFC) ^ (2 * (v646 ^ 0xCC4DCFFC)) & 0x2615BDEA;
  v649 = (v648 ^ 0x118C0) & (4 * v647) ^ v647;
  v650 = ((4 * (v648 ^ 0x22148429)) ^ 0x9856F7AC) & (v648 ^ 0x22148429) ^ (4 * (v648 ^ 0x22148429)) & 0x2615BDE8;
  v651 = (v650 ^ 0x14B5A0) & (16 * v649) ^ v649;
  v652 = ((16 * (v650 ^ 0x26010843)) ^ 0x615BDEB0) & (v650 ^ 0x26010843) ^ (16 * (v650 ^ 0x26010843)) & 0x2615BDE0;
  v653 = v651 ^ 0x2615BDEB ^ (v652 ^ 0x20119C00) & (v651 << 8);
  v654 = *(_QWORD *)(v65 - 136);
  v655 = (*(_QWORD *)(v654 + 8 * (0xDC231EDA % v645)) + 2772897518) % v645;
  v656 = (4
        * ((v653 << 16) & 0x26150000 ^ v653 ^ ((v653 << 16) ^ 0x3DEB0000) & (((v652 ^ 0x604214B) << 8) & 0x26150000 ^ 0x22000000 ^ (((v652 ^ 0x604214B) << 8) ^ 0x15BD0000) & (v652 ^ 0x604214B)))) ^ (2 * (v646 ^ *(_DWORD *)(v65 - 212)));
  HIDWORD(v668) = v614;
  LODWORD(STACK[0x38C]) = v610;
  v657 = *(_QWORD *)(v654
                   + 8
                   * ((*(_QWORD *)(v654 + 8 * ((*(_QWORD *)(v654 + 8 * v655) + 2551718642) % v645)) + 2304171561)
                    % v645))
       + 2938811241;
  *(_QWORD *)(v65 - 240) = v645;
  LODWORD(v657) = v657 % v645 - ((2 * (v657 % v645)) & 0x852AC8A) + 1680430661;
  *(_DWORD *)(v65 - 160) = (((v657 ^ 0x2B769702) + 1507985666) ^ ((v657 ^ 0x65FBF6F3) + 393177329) ^ ((v657 ^ 0x2AA437B4) + 1479584184))
                         - 755411114;
  v658 = *(_QWORD *)(v65 - 152);
  *(_QWORD *)(v65 - 144) = ((_DWORD)v658 - 16366) | 0xA02u;
  v659 = v643 >> 1;
  v660 = 2
       * ((v610 ^ 0x3B0FA080)
        + (v614 ^ 0x45116E95 ^ ((((v612 ^ 0x280BA70F) - 131048989) ^ ((v612 ^ 0xF7335740) + 654879150) ^ ((v612 ^ 0xE2C82971) + 854841245))
                              + 1271577853)));
  LODWORD(STACK[0x464]) = v660 + 2;
  *(_DWORD *)(v65 - 200) = v656;
  *(_DWORD *)(v65 - 196) = v660 + 1870937848;
  *(_DWORD *)(v65 - 192) = v659;
  v661 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v65 - 120) + 8 * v658) - 4);
  v662 = STACK[0x3E0];
  if (v623)
    v662 = STACK[0x3D8];
  LODWORD(v667) = v662;
  LODWORD(STACK[0x380]) = v584;
  LODWORD(STACK[0x37C]) = v620;
  if (v623)
    v663 = v620;
  else
    v663 = v584;
  HIDWORD(v667) = v663;
  v664 = STACK[0x3F0];
  if (v623)
    v664 = STACK[0x3EC];
  LODWORD(v668) = v664;
  return v661(v584, 0xD44F0E2FC723B26CLL, v645, 0xD5FE1725597B7830, 0x13AF0E7908943CE8, v659 ^ 0x8965F2C1, 0x8DF94173DF193781, v654, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           v666,
           v667,
           a59,
           a60,
           v668,
           v669,
           v670);
}

uint64_t sub_1001CB370@<X0>(uint64_t a1@<X7>, unsigned int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  _BOOL4 v6;

  v5 = 8 * ((a2 | ((unint64_t)(a2 < v4) << 32)) + 0x38AAD30E52302227) + 0x3AA9678CDAB7E280;
  *(_QWORD *)(*(_QWORD *)(v3 - 128) + v5) = *(_QWORD *)(a1 + v5) ^ 0x3131313131313131;
  v6 = a2 - 683786731 < v2;
  if (v2 < 0xE9B71F9D != a2 - 683786731 < 0xE9B71F9D)
    v6 = v2 < 0xE9B71F9D;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 - 120)
                                        + 8 * ((3964 * !v6) ^ *(_QWORD *)(v3 - 152)))
                            - 4))();
}

uint64_t sub_1001CD278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;

  v3 = (STACK[0x3FC] & 1) == 0;
  v4 = STACK[0x3D0];
  if ((STACK[0x3FC] & 1) == 0)
    v4 = STACK[0x3A0];
  LODWORD(STACK[0x3FC]) = v4;
  v5 = STACK[0x394];
  if (!v3)
    v5 = STACK[0x388];
  LODWORD(STACK[0x328]) = v5;
  if (v3)
    v6 = STACK[0x348];
  else
    v6 = STACK[0x374];
  if (v3)
    v7 = STACK[0x340];
  else
    v7 = STACK[0x358];
  if (v3)
    v8 = STACK[0x330];
  else
    v8 = STACK[0x350];
  v9 = (LODWORD(STACK[0x2E0]) - LODWORD(STACK[0x2E4])) ^ LODWORD(STACK[0x2AC]);
  v10 = (*(_DWORD *)(v2 - 176) & 2) == 0;
  v11 = *(_DWORD *)(v2 - 164);
  if ((*(_DWORD *)(v2 - 176) & 2) != 0)
    v11 = *(_DWORD *)(v2 - 188);
  LODWORD(STACK[0x388]) = v11;
  v12 = STACK[0x410];
  if (!v10)
    v12 = STACK[0x408];
  LODWORD(STACK[0x3D0]) = v12;
  v13 = STACK[0x40C];
  if (v10)
    v13 = STACK[0x404];
  LODWORD(STACK[0x410]) = v13;
  v14 = STACK[0x458];
  if (!v10)
    v14 = STACK[0x42C];
  LODWORD(STACK[0x374]) = v14;
  v15 = STACK[0x428];
  if (!v10)
    v15 = STACK[0x424];
  LODWORD(STACK[0x408]) = v15;
  v16 = STACK[0x420];
  if (!v10)
    v16 = STACK[0x41C];
  LODWORD(STACK[0x41C]) = v16;
  v17 = STACK[0x418];
  if (v10)
    v17 = STACK[0x414];
  LODWORD(STACK[0x418]) = v17;
  v18 = v9 ^ 0xCDE6AC38;
  v19 = STACK[0x44C];
  if (v10)
    v19 = STACK[0x448];
  LODWORD(STACK[0x458]) = v19;
  *(_DWORD *)(v2 - 152) = v18 + LODWORD(STACK[0x324]);
  LODWORD(STACK[0x42C]) = v6;
  LODWORD(STACK[0x424]) = v7;
  if (v10)
    v20 = v6;
  else
    v20 = v7;
  LODWORD(STACK[0x3A0]) = v20;
  v21 = STACK[0x438];
  LODWORD(STACK[0x358]) = v8;
  if (!v10)
    v21 = v8;
  LODWORD(STACK[0x428]) = v21;
  v22 = STACK[0x3CC];
  v23 = STACK[0x318];
  if ((STACK[0x3CC] & 1) == 0)
    v23 = STACK[0x310];
  *(_DWORD *)(v2 - 188) = v23;
  v24 = STACK[0x30C];
  if ((v22 & 1) != 0)
    v24 = STACK[0x2FC];
  LODWORD(STACK[0x420]) = v24;
  v25 = STACK[0x300];
  if ((v22 & 1) == 0)
    v25 = STACK[0x2A8];
  LODWORD(STACK[0x40C]) = v25;
  *(_DWORD *)(v2 - 164) = (((*(_DWORD *)(v2 - 204) ^ 0x7DB2C74E) - 1430152699) ^ ((*(_DWORD *)(v2 - 204) ^ 0x548CB911)
                                                                                - 2080381860) ^ ((*(_DWORD *)(v2 - 204) ^ 0x26916125)
                                                                                               - 236831632))
                        + 1261849715;
  v26 = *(_QWORD *)(v2 - 144);
  *(_QWORD *)(v2 - 160) = ((_DWORD)v26 + 513000500) & 0xE16C3EFB;
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(v2 - 120) + 8 * (int)v26))(a1, a2, 0xD93C52325EE500D0, 0xE07456464BB43C00, 0xD163110102FCEC00);
}

uint64_t sub_1001CD574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unint64_t v12;
  _BOOL4 v13;

  v11 = *(_DWORD *)(v9 - 164);
  v12 = 8 * ((v8 | ((unint64_t)(v8 < v10) << 32)) + 0xD6D2A30AED24B72) - 0x6B6951860A5967D8;
  *(_QWORD *)(*(_QWORD *)(v9 - 128) + v12) = *(_QWORD *)(a8 + v12) ^ (*(_QWORD *)(v9 - 160) + 0x3131313131310EFFLL);
  if (v11 < 0x24128EA4 != v8 + 295283996 < 0x24128EA4)
    v13 = v11 < 0x24128EA4;
  else
    v13 = v11 > v8 + 295283996;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v9 - 120) + 8 * (int)((18529 * !v13) ^ *(_QWORD *)(v9 - 144))))();
}

uint64_t sub_1001CF490()
{
  uint64_t v0;
  BOOL v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  v1 = (*(_DWORD *)(v0 - 176) & 2) == 0;
  v2 = STACK[0x454];
  if ((*(_DWORD *)(v0 - 176) & 2) != 0)
    v2 = STACK[0x450];
  LODWORD(STACK[0x394]) = v2;
  v3 = *(_DWORD *)(v0 - 228);
  if (!v1)
    v3 = STACK[0x3FC];
  LODWORD(STACK[0x404]) = v3;
  v4 = STACK[0x44C];
  if (!v1)
    v4 = STACK[0x448];
  LODWORD(STACK[0x44C]) = v4;
  if (v1)
    v5 = STACK[0x384];
  else
    v5 = STACK[0x328];
  LODWORD(STACK[0x414]) = v5;
  v6 = STACK[0x434];
  if (v1)
    v6 = STACK[0x430];
  LODWORD(STACK[0x454]) = v6;
  v7 = STACK[0x440];
  if (!v1)
    v7 = STACK[0x43C];
  LODWORD(STACK[0x430]) = v7;
  v8 = STACK[0x438];
  if (v1)
    v8 = STACK[0x358];
  LODWORD(STACK[0x434]) = v8;
  if (((*(_BYTE *)(STACK[0x338]
                  + (*(_BYTE *)(STACK[0x338]
                              + ((*(_BYTE *)(STACK[0x338] + ((*(_BYTE *)(STACK[0x338] + 1) + 1) & 0xF)) + 9) & 0xF)) & 0xF))
       + 3) & 0xE) != 0)
    v9 = (*(_BYTE *)(STACK[0x338]
                   + (*(_BYTE *)(STACK[0x338]
                               + ((*(_BYTE *)(STACK[0x338] + ((*(_BYTE *)(STACK[0x338] + 1) + 1) & 0xF)) + 9) & 0xF)) & 0xF))
        + 3) & 0xF;
  else
    v9 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, unint64_t))(*(_QWORD *)(v0 - 120)
                                                                                        + 8
                                                                                        * (int)*(_QWORD *)(v0 - 160)))(v9 - 1, 108, 3467965834, 0, 0x8385DC190DE8958ELL);
}

uint64_t sub_1001CF720(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 - 120) + 8 * (int)(((a1 == a4) * a2) ^ *(_QWORD *)(v4 - 160))))();
}

uint64_t sub_1001CF814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  BOOL v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  uint64_t (*v67)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v61 = (*(_DWORD *)(v60 - 176) & 2) == 0;
  v62 = STACK[0x47C];
  if ((*(_DWORD *)(v60 - 176) & 2) == 0)
    v62 = STACK[0x478];
  LODWORD(STACK[0x390]) = v62;
  if (v61)
    v63 = v57;
  else
    v63 = v56;
  LODWORD(STACK[0x448]) = v63;
  v64 = STACK[0x42C];
  if (v61)
    v64 = STACK[0x424];
  LODWORD(STACK[0x450]) = v64;
  v65 = STACK[0x46C];
  if (v61)
    v65 = STACK[0x444];
  LODWORD(STACK[0x478]) = v65;
  if ((STACK[0x3CC] & 2) != 0)
    v66 = v59;
  else
    v66 = v58;
  HIDWORD(a53) = v66;
  v67 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v60 - 120) + 8 * v54) - 4);
  *(_DWORD *)(v60 - 144) = v54 - 17899;
  return v67((v53 - 1), (v53 - 1537669606), 0, 669089652, 1537669606, (v54 - 1578795386), 14916, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1001CF92C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 - 120)
                                                                                        + 8
                                                                                        * (((v7 + a3 == 15) * a7) ^ v8))
                                                                            - 4))((a1 + 1), (a2 + 1), a3 + 1, a4 - 1, a5 - 1);
}

uint64_t sub_1001CFA64@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  BOOL v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  BOOL v95;
  int v96;
  int v97;
  uint64_t v98;
  char v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  char v112;
  int v113;
  int v114;
  char v115;
  int v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v51 = (*(_DWORD *)(v50 - 176) & 2) == 0;
  v52 = *(_DWORD *)(v50 - 228);
  if ((*(_DWORD *)(v50 - 176) & 2) == 0)
    v52 = STACK[0x3FC];
  LODWORD(STACK[0x3F0]) = v52;
  v53 = *(_DWORD *)(v50 - 216);
  if (v51)
    v53 = *(_DWORD *)(v50 - 224);
  LODWORD(STACK[0x46C]) = v53;
  v54 = v49 + a2;
  v55 = v49 + a1;
  v56 = HIWORD(v55);
  v57 = (v55 + HIWORD(v55)) >> 8;
  v58 = v54 + v56 + v57;
  v59 = v58 >> 10;
  v60 = (v58 - (v58 >> 10)) >> 3;
  v61 = v49 + v57 + v56 + v60;
  v62 = v41 + v61 - v59 - a4;
  v63 = v61 + v47;
  v64 = (v63 - v59) >> 8;
  v65 = v61 + v64;
  v66 = (v63 + v64 - v59) >> 2;
  v67 = v41 + v65 - v66 - v59 - a3;
  v68 = v49
      + ((v65 + v46 + ((v65 + v46 - v66 - v59) >> 12) - v66 - v59) >> 5)
      + ((v65 + v46 - v66 - v59) >> 12)
      + v64
      + v60
      + v57
      + v56;
  v69 = v41 + v68 - v66 - v59 - v48;
  v70 = v41
      + v68
      - ((v68 + a5 - ((v68 + a5 - v66 - v59) >> 9) - v66 - v59) >> 4)
      - ((v68 + a5 - v66 - v59) >> 9)
      - v66
      - v59
      - v45;
  v71 = v62 ^ v44 ^ v70;
  v72 = (v70 ^ 0xCB63B48D) + ((v70 ^ 0xCB63B48D) >> 12) - (((v70 ^ 0xCB63B48D) + ((v70 ^ 0xCB63B48D) >> 12)) >> 4);
  v73 = v72 + 584225879;
  v74 = v67 ^ v43 ^ v72;
  v75 = v73 - (v73 >> 15) - ((v73 - (v73 >> 15)) >> 8);
  v76 = v75 - 1821985441 + ((v75 - 1821985441) >> 9) + ((v75 - 1821985441 + ((v75 - 1821985441) >> 9)) >> 1);
  v77 = v71 ^ v76;
  v78 = v76 + 112518238 + ((v76 + 112518238) >> 15) + ((v76 + 112518238 + ((v76 + 112518238) >> 15)) >> 5);
  v79 = v74 ^ v78;
  v80 = v69 ^ v42 ^ v75 ^ (v78
                         - 1055017364
                         + ((v78 - 1055017364) >> 12)
                         - ((v78 - 1055017364 + ((v78 - 1055017364) >> 12)) >> 2));
  v81 = ((2 * (v77 & 0x7F ^ 0x4F)) | 0xEFADB8FA) - (v77 & 0x7F ^ 0x4F) + 136913795;
  LODWORD(STACK[0x424]) = v81;
  v82 = 16843009
      * (((v81 ^ 0x9BE3FEE6) - 1986959146) ^ ((v81 ^ 0x329B9E65) + 552142935) ^ ((v81 ^ 0x5EAEBCD3) + 1289497313))
      - 777626092;
  v83 = (v82 ^ 0xE696E3E6) & (2 * (v82 & 0xF606F388)) ^ v82 & 0xF606F388;
  v84 = ((2 * (v82 ^ 0x469244E6)) ^ 0x61296EDC) & (v82 ^ 0x469244E6) ^ (2 * (v82 ^ 0x469244E6)) & 0xB094B76E;
  v85 = v84 ^ 0x90949122;
  v86 = (v84 ^ 0x20000640) & (4 * v83) ^ v83;
  v87 = ((4 * v85) ^ 0xC252DDB8) & v85 ^ (4 * v85) & 0xB094B76C;
  v88 = (v87 ^ 0x80109520) & (16 * v86) ^ v86;
  v89 = ((16 * (v87 ^ 0x30842246)) ^ 0x94B76E0) & (v87 ^ 0x30842246) ^ (16 * (v87 ^ 0x30842246)) & 0xB094B760;
  v90 = v88 ^ 0xB094B76E ^ (v89 ^ 0x3600) & (v88 << 8);
  LODWORD(STACK[0x340]) = v82 ^ (2
                               * ((v90 << 16) & 0x30940000 ^ v90 ^ ((v90 << 16) ^ 0x376E0000) & (((v89 ^ 0xB094810E) << 8) & 0x30940000 ^ (((v89 ^ 0xB094810E) << 8) ^ 0x14B70000) & (v89 ^ 0xB094810E) ^ 0x20000000)));
  v91 = ((v77 & 0x5CF01380 ^ 0x1C0003D7) + (v77 & 0xA30FEC00 ^ 0xA308AC01) - 2) ^ 0xBD98AFD6;
  v92 = (v80 ^ 5) + 1;
  LODWORD(STACK[0x440]) = v80 & 7;
  v93 = v80 & 7 ^ 0x3043475B;
  *(_DWORD *)(v50 - 216) = v92;
  v94 = v92 & 7;
  *(_DWORD *)(v50 - 224) = v80;
  LODWORD(STACK[0x444]) = v93;
  v95 = v93 == 809715545;
  if (v93 == 809715545)
    v96 = 0;
  else
    v96 = 255;
  LODWORD(STACK[0x358]) = v94;
  v97 = v96 << v94;
  v98 = (((2 * (v80 & 0xFFFFFFF8 ^ 0xCD12C5E0)) & 0xC69BBA80) - (v80 & 0xFFFFFFF8 ^ 0xCD12C5E0) - 1666047300) ^ 0x10B0E6BD;
  v99 = v97 ^ 0xA0;
  v100 = ((2 * (v97 ^ 0xA9)) | 0xBC7ED9A2) - (v97 ^ 0xA9) - 1581214929;
  v101 = ((v100 & 0xB6424394 ^ 0xA0400004) + (v100 ^ 0x5E3E6FD1) - ((v100 ^ 0x5E3E6FD1) & 0xB6424394)) ^ 0xB643403D;
  v102 = 16843009 * v101 - 1164969303;
  LODWORD(STACK[0x42C]) = v102;
  v103 = (v102 ^ 0x2477D117) & (2 * (v102 & 0x45700557)) ^ v102 & 0x45700557;
  v104 = ((2 * (v102 ^ 0x2CF7D9B5)) ^ 0xD30FB9C4) & (v102 ^ 0x2CF7D9B5) ^ (2 * (v102 ^ 0x2CF7D9B5)) & 0x6987DCE2;
  v105 = v104 ^ 0x28804422;
  v106 = (v104 ^ 0x10018C0) & (4 * v103) ^ v103;
  v107 = ((4 * v105) ^ 0xA61F7388) & v105 ^ (4 * v105) & 0x6987DCE0;
  v108 = (v107 ^ 0x20075080) & (16 * v106) ^ v106;
  v109 = ((16 * (v107 ^ 0x49808C62)) ^ 0x987DCE20) & (v107 ^ 0x49808C62) ^ (16 * (v107 ^ 0x49808C62)) & 0x6987DCE0;
  v110 = v108 ^ 0x6987DCE2 ^ (v109 ^ 0x805CC00) & (v108 << 8);
  v111 = ((v110 << 16) ^ 0x5CE20000) & (((v109 ^ 0x618210C2) << 8) & 0x69870000 ^ 0x68030000 ^ (((v109 ^ 0x618210C2) << 8) ^ 0x7DC0000) & (v109 ^ 0x618210C2));
  if (v95)
    v112 = 95;
  else
    v112 = v99;
  v113 = (v110 << 16) & 0x69870000 ^ v110 ^ v111;
  v114 = 1593835520 * v101;
  v115 = ((v112 ^ 0x5F) & (v77 ^ 0x3A) ^ v112 & 0x3A | 0x31) - ((v112 ^ 0x5F) & (v77 ^ 0x3A) ^ v112 & 0x3A | 0xCE);
  LODWORD(STACK[0x3EC]) = (((v115 & 1) + ((v115 - 50) ^ 0x17245C2B)) | 0xA8430200)
                        - (((v115 - 50) ^ 0x17245C2B) & 0x16205801);
  *(_DWORD *)(v50 - 164) = v77;
  v116 = (~(_BYTE)v77 ^ BYTE1(v77) ^ ((v77 ^ 0xDC72D3FF) >> 16)) ^ HIBYTE(v77) ^ 0x6C;
  v117 = *(_QWORD *)(v50 - 240);
  v118 = *(_QWORD *)(v50 - 128);
  v119 = *(_QWORD *)(v118 + 8 * (0x557273CB % v117));
  v120 = *(_QWORD *)(v118
                   + 8
                   * (((((v119 ^ 0x96ACFDD0DF925682) - 0x4BE02707EBA777B7) ^ ((v119 ^ 0x12C974183F91D74BLL)
                                                                                + 0x307A5130F45B0982) ^ ((v119 ^ 0xB554B8F9D132B0F8) - 0x6818622EE50791CDLL))
                     - 0x138214193E5D61B2)
                    % v117));
  v121 = *(_QWORD *)(v118
                   + 8
                   * (((((v120 ^ 0x4144FEECD0FD827) + 0x5D52A24FAA57CDALL) ^ ((v120 ^ 0x1A7BBAA0C1FEFC19)
                                                                              + 0x1BBADF6AF65458E8) ^ ((v120 ^ 0x2F5EC47F3DC0150FuLL) + 0x2E9FA1B50A6AB1F2))
                     - 0x30F054FA14097413)
                    % v117));
  v122 = *(_QWORD *)(v118
                   + 8
                   * (((((v121 ^ 0xC86730AAA4216EEBLL) + 0x1C8FDA02243E63FFLL) ^ ((v121 ^ 0x1698DEA27D5C11CBLL)
                                                                                - 0x3D8FCBF502BCE321) ^ ((v121 ^ 0xEFCEDF39E84C4E11) + 0x3B26359168534305))
                     + 0x1A262466E7587E30)
                    % v117));
  LODWORD(v122) = ((((v122 ^ 0x5FBA1354FC60C8FCLL) + 0x705281E943BCC211) ^ ((v122 ^ 0x5071DB3AF623A985)
                                                                            + 0x7F99498749FFA36ALL) ^ ((v122 ^ 0x3EFAF95F3B725048uLL) + 0x11126BE284AE5AA5))
                 - 0x1ED9A38C8A754FE3)
                % v117;
  *(_DWORD *)(v50 - 160) = ((((v122 - ((2 * v122) & 0x1728BD4) - 2135341590) ^ 0xA746FBB0) - 622190500) ^ (((v122 - ((2 * v122) & 0x1728BD4) - 2135341590) ^ 0xDFEFC7F5) - 1572660193) ^ (((v122 - ((2 * v122) & 0x1728BD4) - 2135341590) ^ 0xF81079AF) - 2051235259))
                         - 267363543;
  LODWORD(STACK[0x43C]) = v91;
  LODWORD(STACK[0x3E0]) = (2 * v91) & 0xD7B24600;
  LODWORD(STACK[0x384]) = 2 * v113;
  LODWORD(STACK[0x3D8]) = v114 & v79;
  *(_DWORD *)(v50 - 228) = v79;
  v123 = 16843009
       * (v79 ^ 0xCC ^ ((unsigned __int16)(v79 ^ 0x86CC) >> 8) ^ ((v79 ^ 0xA41B86CC) >> 16) ^ HIBYTE(v79) ^ 0xC0);
  v124 = *(_DWORD *)(v50 - 200) ^ 0xC579EEDB;
  LODWORD(v122) = *(_DWORD *)(v50 - 144);
  v125 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v50 - 120) + 8 * (int)v122) - 4);
  *(_QWORD *)(v50 - 136) = (v122 + 14663);
  LODWORD(STACK[0x40C]) = v98;
  LODWORD(STACK[0x37C]) = 2 * v98;
  LODWORD(STACK[0x2AC]) = 16843009 * v116;
  LODWORD(STACK[0x3FC]) = v123;
  LODWORD(STACK[0x47C]) = v123 ^ (16843009 * v116);
  return v125(v98, v124, 0x967A4AC17794A0C8, 0x901BB7FE97036380, 0x8B0713C0D45379A4, 0x83CC02EDDF630548, 0x71EA5AFAA2F095EELL, v118, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1001D0594@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  int v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  _BOOL4 v147;
  unint64_t v148;

  v17 = *(_DWORD *)(v16 - 160);
  v18 = (v13 | ((unint64_t)(v13 < v15) << 32)) + 0x67B850ADB395BEF7;
  v19 = 0x8DF94173DF193781
      * (((*(_QWORD *)(a7 + 8 * v18 - 0x3DC2856EA1CD5B58) ^ 0x60FFDDB92AB2DCEBLL) - 0x153F2203A28E906DLL) ^ ((*(_QWORD *)(a7 + 8 * v18 - 0x3DC2856EA1CD5B58) ^ 0x2303CC758043431) + (*(_QWORD *)(v16 - 136) ^ 0x880F3C822FC7CAA4)) ^ ((*(_QWORD *)(a7 + 8 * v18 - 0x3DC2856EA1CD5B58) ^ 0x53FED04F4387D9EBLL) - 0x263E2FF5CBBB956DLL))
      + 0x69F0811B577FCAB8;
  v20 = ((2 * (v19 ^ 0x5F9852D809929798)) ^ 0x2D04139EEF7E91CELL) & (v19 ^ 0x5F9852D809929798) ^ (2 * (v19 ^ 0x5F9852D809929798)) & (v10 + 230);
  v21 = (v19 ^ 0xCD9852D67D899F7ELL) & (2 * (v19 & 0xC91A5B177E2DDF7FLL)) ^ v19 & 0xC91A5B177E2DDF7FLL;
  v22 = v20 ^ 0x9282084110814821;
  v23 = (v20 ^ 0x400008E613E00C4) & (4 * v21) ^ v21;
  v24 = ((4 * v22) ^ 0x5A08273DDEFD239CLL) & v22 ^ (4 * v22) & (v10 + 228);
  v25 = (v24 ^ 0x1200010D56BD0080) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0x848208C221024863)) ^ 0x68209CF77BF48E70) & (v24 ^ 0x848208C221024863) ^ (16 * (v24 ^ 0x848208C221024863)) & (v10 + 224);
  v27 = (v26 ^ 0x8C773B40800) & (v25 << 8) ^ v25;
  v28 = (((v26 ^ 0x96820108040B4087) << 8) ^ 0x8209CF77BF48E700) & (v26 ^ 0x96820108040B4087) ^ ((v26 ^ 0x96820108040B4087) << 8) & v10;
  v29 = v27 ^ (v10 + 231) ^ (v28 ^ 0x8200094737080000) & (v27 << 16);
  v30 = v19 ^ (2
             * ((v29 << 32) & 0x168209CF00000000 ^ v29 ^ ((v29 << 32) ^ 0x77BF48E700000000) & (((v28 ^ 0x1482008840B708E7) << 16) & 0x168209CF00000000 ^ 0x1600084000000000 ^ (((v28 ^ 0x1482008840B708E7) << 16) ^ 0x9CF77BF00000000) & (v28 ^ 0x1482008840B708E7))));
  v31 = v18
      + 0x5B16AF01DC897DB9
      + (((v30 ^ a8 ^ 0x7DF515AEE8EEC861) - 0x2157B3603AA7578FLL) ^ ((v30 ^ a8 ^ 0x2C2D21625B941045)
                                                                     - 0x708F87AC89DD8FABLL) ^ ((v30 ^ a8 ^ 0x98C26DCB22299695)
                                                                                              + 0x3B9F34FA0F9FF685));
  v32 = (v31 ^ 0x92CAEA9948578AB2) & (2 * (v31 & 0xD2EA00199257A83BLL)) ^ v31 & 0xD2EA00199257A83BLL;
  v33 = ((2 * (v31 ^ 0x33CAEA99485B9AB4)) ^ 0xC241D501B418651ELL) & (v31 ^ 0x33CAEA99485B9AB4) ^ (2 * (v31 ^ 0x33CAEA99485B9AB4)) & 0xE120EA80DA0C328ELL;
  v34 = v33 ^ 0x21202A804A041281;
  v35 = (v33 ^ 0xC00000009008200CLL) & (4 * v32) ^ v32;
  v36 = ((4 * v34) ^ 0x8483AA036830CA3CLL) & v34 ^ (4 * v34) & 0xE120EA80DA0C328CLL;
  v37 = ((16 * (v36 ^ 0x61204080920C3083)) ^ 0x120EA80DA0C328F0) & (v36 ^ 0x61204080920C3083) ^ (16 * (v36 ^ 0x61204080920C3083)) & 0xE120EA80DA0C3280;
  v38 = (v37 ^ 0xA80080002000) & (((v36 ^ 0x8000AA0048000200) & (16 * v35) ^ v35) << 8) ^ (v36 ^ 0x8000AA0048000200) & (16 * v35) ^ v35;
  v39 = (((v37 ^ 0xE12042805A0C120FLL) << 8) ^ 0x20EA80DA0C328F00) & (v37 ^ 0xE12042805A0C120FLL) ^ ((v37 ^ 0xE12042805A0C120FLL) << 8) & 0xE120EA80DA0C3200;
  v40 = v38 ^ 0xE120EA80DA0C328FLL ^ (v39 ^ 0x2020808008000000) & (v38 << 16);
  v41 = (v31 ^ (2
              * ((v40 << 32) & 0x6120EA8000000000 ^ v40 ^ ((v40 << 32) ^ 0x5A0C328F00000000) & (((v39 ^ 0xC1006A00D20C308FLL) << 16) & 0x6120EA8000000000 ^ 0x120208000000000 ^ (((v39 ^ 0xC1006A00D20C308FLL) << 16) ^ 0x6A80DA0C00000000) & (v39 ^ 0xC1006A00D20C308FLL))))) >> 32;
  v42 = v31
      - 0x7BE755F91B5A0727
      + (((v41 ^ 0xD1EE9D2463F3E302) - 0x5FE1E8DF39049921) ^ ((v41 ^ 0xB4A9A441F39F2EDCLL) - 0x3AA6D1BAA96854FFLL) ^ ((v41 ^ 0x6547396500C75DC6) + 0x14B7B361A5CFD81BLL));
  v43 = (v42 ^ 0x9ED48E0E734E9D99) & (2 * (v42 & 0xDCE0CC0E780E999DLL)) ^ v42 & 0xDCE0CC0E780E999DLL;
  v44 = ((2 * (v42 ^ 0x96D4161AA3438FB9)) ^ 0x9469B429B69A2C48) & (v42 ^ 0x96D4161AA3438FB9) ^ (2 * (v42 ^ 0x96D4161AA3438FB9)) & v12;
  v45 = v44 ^ 0x4A144A1449451224;
  v46 = (v44 ^ 0x100080080400) & (4 * v43) ^ v43;
  v47 = ((4 * v45) ^ 0x28D368536D345890) & v45 ^ (4 * v45) & v12;
  v48 = (v47 ^ 0x810481049041000) & (16 * v46) ^ v46;
  v49 = ((16 * (v47 ^ 0x4224920492490624)) ^ 0xA34DA14DB4D16240) & (v47 ^ 0x4224920492490624) ^ (16 * (v47 ^ 0x4224920492490624)) & (v12 - 4);
  v50 = (((v49 ^ 0x48305A104B0C1424) << 8) ^ 0x34DA14DB4D162400) & (v49 ^ 0x48305A104B0C1424) ^ ((v49 ^ 0x48305A104B0C1424) << 8) & (v12 - 36);
  v51 = (v49 ^ 0x204800490410200) & (v48 << 8) ^ v48 ^ v12 ^ (v50 ^ 0x10101049040000) & (((v49 ^ 0x204800490410200) & (v48 << 8) ^ v48) << 16);
  v52 = (v42 ^ (2
              * ((v51 << 32) & 0x4A34DA1400000000 ^ v51 ^ ((v51 << 32) ^ 0x5B4D162400000000) & (((v50 ^ 0x4A24CA0492491224) << 16) & 0x4A34DA1400000000 ^ 0x20001000000000 ^ (((v50 ^ 0x4A24CA0492491224) << 16) ^ 0x5A14DB4D00000000) & (v50 ^ 0x4A24CA0492491224))))) >> 16;
  v53 = v42
      - (((v52 ^ 0x7EC39FE8DB9FADF4) - 0x75CE5AB705572BBLL) ^ ((v52 ^ 0xE3CE66ADCA8AFCA1) + 0x65AEE3119EBFDC12) ^ ((v52 ^ 0x9D0D25C44D3A9FC1) + 0x1B6DA078190FBF72))
      + 0x8BD1A971D745A55;
  v54 = (v53 ^ 0x58F6403550218D6DLL) & (2 * (v53 & 0x5A840AB462B52D6DLL)) ^ v53 & 0x5A840AB462B52D6DLL;
  v55 = ((2 * (v53 ^ 0xCCFE407515218DA5)) ^ 0x2CF49582EF294190) & (v53 ^ 0xCCFE407515218DA5) ^ (2 * (v53 ^ 0xCCFE407515218DA5)) & a2;
  v56 = ((4 * (v55 ^ 0x920A4A411094A048)) ^ 0x59E92B05DE528320) & (v55 ^ 0x920A4A411094A048) ^ (4 * (v55 ^ 0x920A4A411094A048)) & a2;
  v57 = (v56 ^ 0x10680A0156108000) & (16 * ((v55 ^ 0x430008007000080) & (4 * v54) ^ v54)) ^ (v55 ^ 0x430008007000080) & (4 * v54) ^ v54;
  v58 = ((16 * (v56 ^ 0x861240C0218420C8)) ^ 0x67A4AC17794A0C80) & (v56 ^ 0x861240C0218420C8) ^ (16 * (v56 ^ 0x861240C0218420C8)) & (a2 - 8);
  v59 = (v58 ^ 0x620080171000000) & (v57 << 8) ^ v57;
  v60 = (((v58 ^ 0x905A42C00694A048) << 8) ^ 0x7A4AC17794A0C800) & (v58 ^ 0x905A42C00694A048) ^ ((v58 ^ 0x905A42C00694A048) << 8) & (a2 - 200);
  v61 = v59 ^ a2 ^ (v60 ^ 0x124A404114800000) & (v59 << 16);
  v62 = (((v53 ^ (2
                * ((v61 << 32) & 0x167A4AC100000000 ^ v61 ^ ((v61 << 32) ^ 0x7794A0C800000000) & (((v60 ^ 0x84300A80631420C8) << 16) & 0x167A4AC100000000 ^ 0x143A084100000000 ^ (((v60 ^ 0x84300A80631420C8) << 16) ^ 0x4AC1779400000000) & (v60 ^ 0x84300A80631420C8))))) >> 8) ^ 0xFFA5AF6149726393)
      + v53;
  v30 ^= 0x5C3AD8F91FCBC611uLL;
  v63 = ((v62 + 0x47B61ED352EBF4C8) ^ 0x711E05AF088E87BALL) & (2
                                                               * ((v62 + 0x47B61ED352EBF4C8) & 0x7400562E4888C63CLL)) ^ (v62 + 0x47B61ED352EBF4C8) & 0x7400562E4888C63CLL;
  v64 = ((2 * ((v62 + 0x47B61ED352EBF4C8) ^ 0xB11E89FB999E8FE2)) ^ 0x8A3DBFABA22C93BCLL) & ((v62
                                                                                               + 0x47B61ED352EBF4C8) ^ 0xB11E89FB999E8FE2) ^ (2 * ((v62 + 0x47B61ED352EBF4C8) ^ 0xB11E89FB999E8FE2)) & v9;
  v65 = v64 ^ 0x4502405451124842;
  v66 = (v64 ^ 0x8000998100040190) & (4 * v63) ^ v63;
  v67 = ((4 * v65) ^ 0x147B7F5744592778) & v65 ^ (4 * v65) & (v9 - 2);
  v68 = ((16 * (v67 ^ 0xC104808091064886)) ^ 0x51EDFD5D11649DE0) & (v67 ^ 0xC104808091064886) ^ (16 * (v67 ^ 0xC104808091064886)) & (v9 - 14);
  v69 = (v68 ^ 0x410CDD5511040900) & (((v67 ^ 0x41A5F5540100140) & (16 * v66) ^ v66) << 8) ^ (v67 ^ 0x41A5F5540100140) & (16 * v66) ^ v66;
  v70 = (((v68 ^ 0x84120280C012401ELL) << 8) ^ 0x1EDFD5D11649DE00) & (v68 ^ 0x84120280C012401ELL) ^ ((v68 ^ 0x84120280C012401ELL) << 8) & (v9 - 222);
  v71 = (v62 + 0x47B61ED352EBF4C8) ^ (2
                                      * (((v69 ^ v9 ^ (v70 ^ 0x41ED5D110000000) & (v69 << 16)) << 32) & 0x451EDFD500000000 ^ v69 ^ v9 ^ (v70 ^ 0x41ED5D110000000) & (v69 << 16) ^ (((v69 ^ v9 ^ (v70 ^ 0x41ED5D110000000) & (v69 << 16)) << 32) ^ 0x511649DE00000000) & (((v70 ^ 0xC1000A04C11601DELL) << 16) & 0x451EDFD500000000 ^ 0xA0EC100000000 ^ (((v70 ^ 0xC1000A04C11601DELL) << 16) ^ 0x5FD5D11600000000) & (v70 ^ 0xC1000A04C11601DELL))));
  v72 = v18
      + 0x5764DE8178F8FA58
      + (((v71 ^ v30 ^ 0x769F621F56AA37C6) - 0x33018C6F8A302DEALL) ^ ((v71 ^ v30 ^ 0x5C5E9EACB06FC1F7)
                                                                      - 0x19C070DC6CF5DBDBLL) ^ ((v71 ^ v30 ^ 0xC3F0076082F92B11)
                                                                                               + 0x799116EFA19CCEC3));
  v73 = (v72 ^ 0xE91DE5766262242CLL) & (2 * (v72 & 0xED91E6746B742149)) ^ v72 & 0xED91E6746B742149;
  v74 = ((2 * (v72 ^ 0x283FADD626C264BCLL)) ^ 0x8B5C97449B6C8BEALL) & (v72 ^ 0x283FADD626C264BCLL) ^ (2 * (v72 ^ 0x283FADD626C264BCLL)) & v8;
  v75 = v74 ^ 0x44A248A244924415;
  v76 = (v74 ^ 0x800C030009200160) & (4 * v73) ^ v73;
  v77 = ((4 * v75) ^ 0x16B92E8936D917D4) & v75 ^ (4 * v75) & v8;
  v78 = (v77 ^ 0x4A80A80049005D0) & (16 * v76) ^ v76;
  v79 = ((16 * (v77 ^ 0xC106412249264021)) ^ 0x5AE4BA24DB645F50) & (v77 ^ 0xC106412249264021) ^ (16 * (v77 ^ 0xC106412249264021)) & (v8 - 4);
  v80 = (((v79 ^ 0x850A4182049200A5) << 8) ^ 0xAE4BA24DB645F500) & (v79 ^ 0x850A4182049200A5) ^ ((v79 ^ 0x850A4182049200A5) << 8) & (v8 - 244);
  v81 = (v79 ^ 0x40A40A2049244500) & (v78 << 8) ^ v78 ^ (v8 + 1) ^ (v80 ^ 0x840A020004040000) & (((v79 ^ 0x40A40A2049244500) & (v78 << 8) ^ v78) << 16);
  v82 = (v72 ^ (2
              * ((v81 << 32) & 0x45AE4BA200000000 ^ v81 ^ ((v81 << 32) ^ 0x4DB645F500000000) & (((v80 ^ 0x41A449A249B200F5) << 16) & 0x45AE4BA200000000 ^ 0x40C020000000000 ^ (((v80 ^ 0x41A449A249B200F5) << 16) ^ 0x4BA24DB600000000) & (v80 ^ 0x41A449A249B200F5))))) >> 32;
  v83 = v72
      - 0x626CF666CD9D2602
      + (((v82 ^ 0x7BD10473BCD25E1BLL) - 0x3730D3AA3E3061D1) ^ ((v82 ^ 0x1A041F26A85E8A7DLL) - 0x56E5C8FF2ABCB5B7) ^ ((v82 ^ 0x61D51B55F90D2616) - 0x2D34CC8C7BEF19DCLL));
  v84 = (v83 ^ 0x1CFA22222F745485) & (2 * (v83 & 0x9CE0B4B4A8751505)) ^ v83 & 0x9CE0B4B4A8751505;
  v85 = ((2 * (v83 ^ 0xCFB034A3F767685)) ^ 0x20376FFD2E06C700) & (v83 ^ 0xCFB034A3F767685) ^ (2
                                                                                                  * (v83 ^ 0xCFB034A3F767685)) & a3;
  v86 = v85 ^ 0x9008900291012080;
  v87 = (v85 ^ 0x327F402004000) & (4 * v84) ^ v84;
  v88 = ((4 * v86) ^ 0x406EDFFA5C0D8E00) & v86 ^ (4 * v86) & a3;
  v89 = (v88 ^ 0xA97FA14010200) & (16 * v87) ^ v87;
  v90 = ((16 * (v88 ^ 0x9011200483026180)) ^ 0x1BB7FE970363800) & (v88 ^ 0x9011200483026180) ^ (16 * (v88 ^ 0x9011200483026180)) & a3;
  v91 = (v90 ^ 0x1B37E810022000) & (v89 << 8) ^ v89;
  v92 = (((v90 ^ 0x9000801687014380) << 8) ^ 0x1BB7FE9703638000) & (v90 ^ 0x9000801687014380) ^ ((v90 ^ 0x9000801687014380) << 8) & (a3 - 128);
  v93 = v91 ^ a3 ^ (v92 ^ 0x1013B69603030000) & (v91 << 16);
  v94 = (v83 ^ (2
              * ((v93 << 32) & 0x101BB7FE00000000 ^ v93 ^ ((v93 << 32) ^ 0x1703638000000000) & (((v92 ^ 0x8008016894006380) << 16) & 0x101BB7FE00000000 ^ 0x120FC00000000 ^ (((v92 ^ 0x8008016894006380) << 16) ^ 0x37FE970300000000) & (v92 ^ 0x8008016894006380))))) >> 16;
  v95 = v83
      - (((v94 ^ 0xD348BE53C13A19E4) - 0x15047972834FF1FALL) ^ ((v94 ^ 0x4F4BDE56682140E6) + 0x76F8E688D5AB5708) ^ ((v94 ^ 0x9C03FCD43552DF71) - 0x5A4F3BF57727376FLL))
      - 0x468044301CCD36ALL;
  v96 = ((2 * (v95 ^ 0xB87BE8DB64E71013)) ^ 0xC50F6BBB51C4D422) & (v95 ^ 0xB87BE8DB64E71013) ^ (2 * (v95 ^ 0xB87BE8DB64E71013)) & v11;
  v97 = (v95 ^ 0x98FB58D6ECE57013) & (2 * (v95 & 0xDAFC5D06CC057A02)) ^ v95 & 0xDAFC5D06CC057A02;
  v98 = v96 ^ 0x22809444A8222A11;
  v99 = (v96 ^ 0x4003201900004000) & (4 * v97) ^ v97;
  v100 = ((4 * v98) ^ 0x8A1ED776A389A844) & v98 ^ (4 * v98) & v11;
  v101 = ((16 * (v100 ^ 0x6081208908624211)) ^ 0x287B5DDA8E26A110) & (v100 ^ 0x6081208908624211) ^ (16 * (v100 ^ 0x6081208908624211)) & v11;
  v102 = (v101 ^ 0x200315D888222000) & (((v100 ^ 0x2069554A0802800) & (16 * v99) ^ v99) << 8) ^ (v100 ^ 0x2069554A0802800) & (16 * v99) ^ v99;
  v103 = (((v101 ^ 0x4284A00520C04A01) << 8) ^ 0x87B5DDA8E26A1100) & (v101 ^ 0x4284A00520C04A01) ^ ((v101 ^ 0x4284A00520C04A01) << 8) & (v11 - 16);
  v104 = v102 ^ (v11 + 1) ^ (v103 ^ 0x2859588A0620000) & (v102 << 16);
  v105 = (((v95 ^ (2
                 * ((v104 << 32) & 0x6287B5DD00000000 ^ v104 ^ ((v104 << 32) ^ 0x28E26A1100000000) & (((v103 ^ 0x6002205508806A11) << 16) & 0x6287B5DD00000000 ^ 0x4202151D00000000 ^ (((v103 ^ 0x6002205508806A11) << 16) ^ 0x35DDA8E200000000) & (v103 ^ 0x6002205508806A11))))) >> 8) ^ 0xFFA1088960623E51)
       + v95;
  v106 = ((v105 + 0x41586618184F02B1) ^ 0xF0D7593BCD6774E9) & (2
                                                                 * ((v105 + 0x41586618184F02B1) & 0xFAD6613BEC7604E8)) ^ (v105 + 0x41586618184F02B1) & 0xFAD6613BEC7604E8;
  v107 = ((2 * ((v105 + 0x41586618184F02B1) ^ 0xE4F3593E85C77DF9)) ^ 0x3C4A700AD362F222) & ((v105
                                                                                                 + 0x41586618184F02B1) ^ 0xE4F3593E85C77DF9) ^ (2 * ((v105 + 0x41586618184F02B1) ^ 0xE4F3593E85C77DF9)) & v14;
  v108 = ((4 * (v107 ^ 0x225080528910911)) ^ 0x7894E015A6C5E444) & (v107 ^ 0x225080528910911) ^ (4 * (v107 ^ 0x225080528910911)) & v14;
  v109 = (v108 ^ 0x1804200520816000) & (16 * ((v107 ^ 0x1C00000041203000) & (4 * v106) ^ v106)) ^ (v107 ^ 0x1C00000041203000) & (4 * v106) ^ v106;
  v110 = ((16 * (v108 ^ 0x621180049301911)) ^ 0xE25380569B179110) & (v108 ^ 0x621180049301911) ^ (16 * (v108 ^ 0x621180049301911)) & v14;
  v111 = (v110 ^ 0x201000409111100) & (v109 << 8) ^ v109;
  v112 = (((v110 ^ 0x1C24380160A06801) << 8) ^ 0x25380569B1791100) & (v110 ^ 0x1C24380160A06801) ^ ((v110 ^ 0x1C24380160A06801) << 8) & (v14 - 16);
  v113 = v111 ^ (v14 + 1) ^ (v112 ^ 0x420000121310000) & (v111 << 16);
  LODWORD(v108) = v62 - 15403975;
  v114 = (v105 + 0x41586618184F02B1) ^ (2
                                        * ((v113 << 32) & 0x1E25380500000000 ^ v113 ^ ((v113 << 32) ^ 0x69B1791100000000) & (((v112 ^ 0x1A05380448806811) << 16) & 0x1E25380500000000 ^ 0x620100400000000 ^ (((v112 ^ 0x1A05380448806811) << 16) ^ 0x380569B100000000) & (v112 ^ 0x1A05380448806811))));
  v115 = v18
       - 0x68A01213CAC77641
       + (((v114 ^ v30 ^ 0x3438331097C5616FLL) + 0x6F98FA56C28EC8D6) ^ ((v114 ^ v30 ^ 0x18B3B2936D45BF09)
                                                                        + 0x43137BD5380E16B4) ^ ((v114 ^ v30 ^ 0x6F75614E4B0CA00CLL)
                                                                                                 + 0x34D5A8081E4709B7));
  v116 = (v115 ^ 0xC861C79091B5E2E1) & (2 * (v115 & 0xE88997DA11C5F305)) ^ v115 & 0xE88997DA11C5F305;
  v117 = ((2 * (v115 ^ 0x9963CD20B33566EBLL)) ^ 0xE3D4B5F545E12BDCLL) & (v115 ^ 0x9963CD20B33566EBLL) ^ (2 * (v115 ^ 0x9963CD20B33566EBLL)) & a6;
  v118 = v117 ^ 0x102A4A0AA2109422;
  v119 = (v117 ^ 0x604010F00020000CLL) & (4 * v116) ^ v116;
  v120 = ((4 * v118) ^ 0xC7A96BEA8BC257B8) & v118 ^ (4 * v118) & (a6 - 2);
  v121 = ((16 * (v120 ^ 0x3042101020308046)) ^ 0x1EA5AFAA2F095EE0) & (v120 ^ 0x3042101020308046) ^ (16 * (v120 ^ 0x3042101020308046)) & (a6 - 14);
  v122 = (v121 ^ 0x10A00AAA22001400) & (((v120 ^ 0x41A84AEA82C015A0) & (16 * v119) ^ v119) << 8) ^ (v120 ^ 0x41A84AEA82C015A0) & (16 * v119) ^ v119;
  v123 = (((v121 ^ 0x614A505080F0810ELL) << 8) ^ 0xEA5AFAA2F095EE00) & (v121 ^ 0x614A505080F0810ELL) ^ ((v121 ^ 0x614A505080F0810ELL) << 8) & (a6 - 238);
  v124 = (v115 ^ (2
                * (((v122 ^ a6 ^ (v123 ^ 0x604A5AA2A0900000) & (v122 << 16)) << 32) & 0x71EA5AFA00000000 ^ v122 ^ a6 ^ (v123 ^ 0x604A5AA2A0900000) & (v122 << 16) ^ (((v122 ^ a6 ^ (v123 ^ 0x604A5AA2A0900000) & (v122 << 16)) << 32) ^ 0x22F095EE00000000) & (((v123 ^ 0x11A00058026011EELL) << 16) & 0x71EA5AFA00000000 ^ 0x2100580A00000000 ^ (((v123 ^ 0x11A00058026011EELL) << 16) ^ 0x5AFAA2F000000000) & (v123 ^ 0x11A00058026011EELL))))) >> 32;
  v125 = v115
       - 0x477C92B108132E2ELL
       + (((v124 ^ 0x5F4644D5E01E506CLL) - 0xAA716FB564806C8) ^ ((v124 ^ 0x44207948542F762DLL) - 0x11C12B66E2792089) ^ ((v124 ^ 0x1B663D9DFEAC25BALL) - 0x4E876FB348FA731ELL));
  v126 = (v125 ^ 0x5E67E3AC6B76613) & (2 * (v125 & 0x85E77CBA16A47692)) ^ v125 & 0x85E77CBA16A47692;
  v127 = ((2 * (v125 ^ 0xEE06F7AC2F70F37)) ^ 0x160E2781A8A6F34ALL) & (v125 ^ 0xEE06F7AC2F70F37) ^ (2 * (v125 ^ 0xEE06F7AC2F70F37)) & a4;
  v128 = ((4 * (v127 ^ 0x89011040545108A5)) ^ 0x2C1C4F03514DE694) & (v127 ^ 0x89011040545108A5) ^ (4 * (v127 ^ 0x89011040545108A5)) & a4;
  v129 = (v128 ^ 0x804030050416080) & (16 * ((v127 ^ 0x206038080027000) & (4 * v126) ^ v126)) ^ (v127 ^ 0x206038080027000) & (4 * v126) ^ v126;
  v130 = ((16 * (v128 ^ 0x830310C084121921)) ^ 0xB0713C0D45379A50) & (v128 ^ 0x830310C084121921) ^ (16 * (v128 ^ 0x830310C084121921)) & (a4 - 4);
  v131 = (v130 ^ 0x8001100044131800) & (v129 << 8) ^ v129;
  v132 = (((v130 ^ 0xB0603C0904061A5) << 8) ^ 0x713C0D45379A500) & (v130 ^ 0xB0603C0904061A5) ^ ((v130 ^ 0xB0603C0904061A5) << 8) & (a4 - 164);
  v133 = v131 ^ (a4 + 1) ^ (v132 ^ 0x30300C050510000) & (v131 << 16);
  v134 = (v125 ^ (2
                * ((v133 << 32) & 0xB0713C000000000 ^ v133 ^ ((v133 << 32) ^ 0x545379A500000000) & (((v132 ^ 0x88041300840258A5) << 16) & 0xB0713C000000000 ^ 0x807038000000000 ^ (((v132 ^ 0x88041300840258A5) << 16) ^ 0x13C0D45300000000) & (v132 ^ 0x88041300840258A5))))) >> 16;
  v135 = v125
       - (((v134 ^ 0x2476FBD62714B24) - 0x5B1EE79E6AB1AB7DLL) ^ ((v134 ^ 0x778301595A44868) - 0x5E21B8369D64A831) ^ ((v134 ^ 0x53FCC478FEEBD4ELL) - 0x5C664464872E5D17))
       - 0x7516C46DDDE781DELL;
  v136 = v108 ^ a1 ^ (v105 + 1751466190);
  v137 = (v135 ^ 0x212125135BD29B55) & (2 * (v135 & 0xA1A5255B83909A15)) ^ v135 & 0xA1A5255B83909A15;
  v138 = ((2 * (v135 ^ 0x226927B65CF39F5DLL)) ^ 0x79805DBBEC60A90) & (v135 ^ 0x226927B65CF39F5DLL) ^ (2 * (v135 ^ 0x226927B65CF39F5DLL)) & a5;
  v139 = v138 ^ 0x8044022441210548;
  v140 = (v138 ^ 0x38800C81E420000) & (4 * v137) ^ v137;
  v141 = ((4 * v139) ^ 0xF300BB77D8C1520) & v139 ^ (4 * v139) & a5;
  v142 = ((16 * (v141 ^ 0x80CC004882630048)) ^ 0x3CC02EDDF6305480) & (v141 ^ 0x80CC004882630048) ^ (16 * (v141 ^ 0x80CC004882630048)) & (a5 - 8);
  v143 = (v142 ^ 0xC002CDD6200400) & (((v141 ^ 0x30002A55D000500) & (16 * v140) ^ v140) << 8) ^ (v141 ^ 0x30002A55D000500) & (16 * v140) ^ v140;
  v144 = (((v142 ^ 0x830C002009430148) << 8) ^ 0xCC02EDDF63054800) & (v142 ^ 0x830C002009430148) ^ ((v142 ^ 0x830C002009430148) << 8) & (a5 - 72);
  v145 = v143 ^ a5 ^ (v144 ^ 0x800000CD43010000) & (v143 << 16);
  v146 = (v145 << 32) & 0x3CC02ED00000000 ^ v145 ^ ((v145 << 32) ^ 0x5F63054800000000) & (((v144 ^ 0x3CC02209C620548) << 16) & 0x3CC02ED00000000 ^ 0x100008C00000000 ^ (((v144 ^ 0x3CC02209C620548) << 16) ^ 0x2EDDF6300000000) & (v144 ^ 0x3CC02209C620548));
  v147 = v13 - 863892296 < v17;
  v148 = (((v135 ^ (unint64_t)(2 * v146)) >> 8) ^ 0xFF5F42DFEFC2A96FLL) + v135;
  if (v17 < 0xED25F92B != v13 - 863892296 < 0xED25F92B)
    v147 = v17 < 0xED25F92B;
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v16 - 120)
                                                             + 8 * ((18626 * !v147) ^ *(_DWORD *)(v16 - 144)))
                                                 - 4))((v148 + 535847137), v136 ^ (v148 + 535847137));
}

uint64_t sub_1001D2514()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  v1 = *(_DWORD *)(v0 - 220);
  if ((*(_DWORD *)(v0 - 176) & 2) == 0)
    v1 = *(_DWORD *)(v0 - 232);
  LODWORD(STACK[0x420]) = v1;
  LODWORD(STACK[0x438]) = *(_DWORD *)(v0 - 192) ^ 0xC6A2510E;
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x43C]) - 338091233;
  LODWORD(STACK[0x37C]) &= 0xC70591A2;
  v2 = LODWORD(STACK[0x384]) ^ LODWORD(STACK[0x42C]);
  *(_DWORD *)(v0 - 232) = LODWORD(STACK[0x358]) ^ 0xF0BF779;
  *(_DWORD *)(v0 - 176) = v2;
  LODWORD(STACK[0x2E4]) = v2 ^ LODWORD(STACK[0x3D8]);
  v3 = *(_QWORD *)(v0 - 136);
  *(_QWORD *)(v0 - 144) = ((_DWORD)v3 + 1356313102) & 0xAF284FF4;
  *(_DWORD *)(v0 - 160) = *(_DWORD *)(v0 - 164) ^ 0xD1FBD5C9;
  LODWORD(STACK[0x43C]) = *(_DWORD *)(v0 - 224) ^ 0xFEB30449;
  *(_DWORD *)(v0 - 220) = LODWORD(STACK[0x47C]) ^ 0x7070707;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 120) + 8 * (int)v3))();
}

uint64_t sub_1001D26EC()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  _BOOL4 v3;

  if (v1 < 0x9A8EB751 != (v0 + 2045430494) < 0x9A8EB751)
    v3 = v1 < 0x9A8EB751;
  else
    v3 = v1 > v0 + 2045430494;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 - 120) + 8 * (int)((19 * !v3) ^ *(_QWORD *)(v2 - 136))))();
}

uint64_t sub_1001D4684()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 144);
  LODWORD(STACK[0x42C]) = *(_DWORD *)(v0 - 164) ^ 0x57747CA4;
  LODWORD(STACK[0x3D8]) = LODWORD(STACK[0x380]) - LODWORD(STACK[0x3E0]);
  *(_DWORD *)(v0 - 136) = ((v1 - 61) ^ 0x9C7D789F) + LODWORD(STACK[0x37C]) - LODWORD(STACK[0x40C]);
  LODWORD(STACK[0x40C]) = LODWORD(STACK[0x2AC]) ^ 0x63636363;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 - 120) + 8 * (int)v1) - 12))();
}

uint64_t sub_1001D48BC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 - 120) + 8 * (((v2 != v1) * v3) ^ v0)) - 12))();
}

uint64_t sub_1001D49B4()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD);
  int v4;

  LODWORD(STACK[0x384]) = LODWORD(STACK[0x340]) ^ 0x4008428D;
  v3 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 - 120)
                                                                                  + 8 * (v0 - 949));
  LODWORD(STACK[0x2E0]) = *(_DWORD *)(v2 - 176) ^ LODWORD(STACK[0x3EC]);
  v4 = (v0 - 3281) | 0x1088;
  *(_DWORD *)(v2 - 144) = v4;
  return v3((v1 - 669089652), 2716195095, 528591210, 0, (v0 - 956), v4 ^ 0x36C1u);
}

uint64_t sub_1001D4A9C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v6 - 120) + 8 * ((11 * (v5 + a4 != 15)) ^ a5)))((a1 + 1));
}

uint64_t sub_1001D4BD8@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W7>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  char *v99;
  uint64_t v100;
  int v101;
  unsigned int v102;
  unint64_t v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  uint64_t v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  unint64_t v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int v210;

  v15 = a3 + v8;
  v16 = HIWORD(v15);
  v17 = (v15 + HIWORD(v15)) >> 8;
  v18 = a3 + v10 + HIWORD(v15) + v17;
  v19 = v18 >> 10;
  v20 = (v18 - (v18 >> 10)) >> 3;
  v21 = a3 + v17 + v16 + v20;
  v22 = v21 + a1;
  v23 = (v22 - v19) >> 8;
  v24 = (v22 + v23 - v19) >> 2;
  v25 = v21 + v23;
  v26 = a3
      + ((v25 + v11 + ((v25 + v11 - v24 - v19) >> 12) - v24 - v19) >> 5)
      + ((v25 + v11 - v24 - v19) >> 12)
      + v23
      + v20
      + v17
      + v16;
  v27 = v13
      + v26
      - ((v26 + v9 - ((v26 + v9 - v24 - v19) >> 9) - v24 - v19) >> 4)
      - ((v26 + v9 - v24 - v19) >> 9)
      - v24
      - v19
      - v12;
  v28 = (v27 ^ 0xCB63B48D) + ((v27 ^ 0xCB63B48D) >> 12) - (((v27 ^ 0xCB63B48D) + ((v27 ^ 0xCB63B48D) >> 12)) >> 4);
  v29 = v28 + 584225879 - ((v28 + 584225879) >> 15) - ((v28 + 584225879 - ((v28 + 584225879) >> 15)) >> 8);
  v30 = v29 - 1821985441 + ((v29 - 1821985441) >> 9) + ((v29 - 1821985441 + ((v29 - 1821985441) >> 9)) >> 1);
  v31 = v30 + 112518238 + ((v30 + 112518238) >> 15) + ((v30 + 112518238 + ((v30 + 112518238) >> 15)) >> 5);
  v32 = (v13 + v26 - v24 - v19 - a2) ^ v7 ^ v29 ^ (v31
                                                 - 1055017364
                                                 + ((v31 - 1055017364) >> 12)
                                                 - ((v31 - 1055017364 + ((v31 - 1055017364) >> 12)) >> 2));
  v33 = -(v32 ^ 7);
  v34 = v33 & 7;
  LODWORD(STACK[0x3EC]) = 1570137905
                        * (((v34 ^ 0x4DBBBE8B) + 808310807) ^ (v34 - 2120706402) ^ ((v34 ^ 0x8338C01B) - 22108537))
                        - 329725502;
  v35 = STACK[0x358];
  v36 = 1570137905
      * (((v35 ^ 0x49CABC67) - 1187072798) ^ ((v35 ^ 0x5DC7BDAD) - 1389120212) ^ ((v35 ^ 0x140D01CA) - 453441203))
      + 279370301;
  v37 = v13;
  v38 = (v13 + v21 - v19 - v6) ^ v5 ^ v27 ^ v30;
  v39 = 16843009
      * (((v38 & 0x7F ^ 0xB6CC910E) - 848401433) ^ ((v38 & 0x7F ^ 0xC6511257) - 1108088640) ^ ((v38 & 0x7F ^ 0x709D8376)
                                                                                             + 188709279))
      - 2026907967;
  v40 = (v39 ^ 0x87486666) & (2 * (v39 & 0x976A6677)) ^ v39 & 0x976A6677;
  v41 = ((2 * (v39 ^ 0xA5DC22A6)) ^ 0x656C89A2) & (v39 ^ 0xA5DC22A6) ^ (2 * (v39 ^ 0xA5DC22A6)) & 0x32B644D0;
  v42 = (v41 ^ 0x20200080) & (4 * v40) ^ v40;
  v43 = ((4 * (v41 ^ 0x12924451)) ^ 0xCAD91344) & (v41 ^ 0x12924451) ^ (4 * (v41 ^ 0x12924451)) & 0x32B644D0;
  v44 = (v43 ^ 0x2900040) & (16 * v42) ^ v42;
  v45 = ((16 * (v43 ^ 0x30264491)) ^ 0x2B644D10) & (v43 ^ 0x30264491) ^ (16 * (v43 ^ 0x30264491)) & 0x32B644D0;
  v46 = v44 ^ 0x32B644D1 ^ (v45 ^ 0x222444C1) & (v44 << 8);
  v47 = v39 ^ (2
             * ((v46 << 16) & 0x32B60000 ^ v46 ^ ((v46 << 16) ^ 0x44D10000) & (((v45 ^ 0x109200C1) << 8) & 0x32B60000 ^ 0xB20000 ^ (((v45 ^ 0x109200C1) << 8) ^ 0x36440000) & (v45 ^ 0x109200C1))));
  v48 = ((v38 & 0x698C2000 ^ 0x41840079 | v38 & 0x9673DF80) - 1) ^ 0x4184F278;
  v49 = v48 - ((2 * v48) & 0xCE915E00) - 414666962;
  v50 = (v47 ^ 0x802004F5) + (v47 & 0x28 ^ 0x234FCB08) - ((v47 ^ 0x802004F5) & 0x28);
  v51 = (((v50 ^ 0x70798EFC) - 1662040880) ^ ((v50 ^ 0xC3B3A94E) + 790979454) ^ ((v50 ^ 0x10A5E8BA) - 63757686))
      - 134453847;
  v52 = (v51 ^ 0x370A451A) & (2 * (v51 & 0xB80A951B)) ^ v51 & 0xB80A951B;
  v53 = ((2 * (v51 ^ 0x70A473A)) ^ 0x7E01A442) & (v51 ^ 0x70A473A) ^ (2 * (v51 ^ 0x70A473A)) & 0xBF00D220;
  v54 = (v53 ^ 0x21008201) & (4 * v52) ^ v52;
  v55 = ((4 * (v53 ^ 0x81005221)) ^ 0xFC034884) & (v53 ^ 0x81005221) ^ (4 * (v53 ^ 0x81005221)) & 0xBF00D220;
  v56 = v54 ^ 0xBF00D221 ^ (v55 ^ 0xBC004000) & (16 * v54);
  v57 = (16 * (v55 ^ 0x3009221)) & 0xBF00D220 ^ 0xF00D021 ^ ((16 * (v55 ^ 0x3009221)) ^ 0xF00D2210) & (v55 ^ 0x3009221);
  v58 = (v56 << 8) & 0xBF00D200 ^ v56 ^ ((v56 << 8) ^ 0xD22100) & v57;
  *(_DWORD *)(v14 - 176) = v51;
  v59 = v51 ^ (2
             * ((v58 << 16) & 0x3F000000 ^ v58 ^ ((v58 << 16) ^ 0x52210000) & ((v57 << 8) & 0x3F000000 ^ ((v57 << 8) ^ 0xD20000) & v57 ^ 0x3F000000)));
  v60 = (v59 ^ 0x1DF4CEA6) & (v49 ^ 0x500A6FD5) ^ v59 & 0x81AC9F84;
  v61 = ((v60 ^ 0x1178502B) - 1352692736) ^ ((v60 ^ 0xC1A392BE) + 2139375979) ^ ((v60 ^ 0x2E80B3EE) - 1868076997);
  LODWORD(STACK[0x368]) = v61;
  v62 = ((LODWORD(STACK[0x420]) ^ 0xF89785D0) + 124287536) ^ ((LODWORD(STACK[0x420]) ^ 0x252075AE) - 622884270) ^ ((LODWORD(STACK[0x420]) ^ 0xC055D11E) + 1068117730);
  LODWORD(STACK[0x318]) = v38 ^ 0xC91152AF;
  LODWORD(STACK[0x37C]) = v62 + 1824251699 * (v61 - (v38 ^ 0xC91152AF));
  LODWORD(STACK[0x364]) = (((LODWORD(STACK[0x434]) ^ 0x4CD0DC6F) - 1288756335) ^ ((LODWORD(STACK[0x434]) ^ 0x3DB5C04A)
                                                                                - 1035321418) ^ ((LODWORD(STACK[0x434]) ^ 0x3FD01AB1)
                                                                                               - 1070602929))
                        + 1434835051
                        * ((((LODWORD(STACK[0x424]) ^ 0xDFB3824B) - 842984327) ^ ((LODWORD(STACK[0x424]) ^ 0x3470C5CB)
                                                                                + 637686777) ^ ((LODWORD(STACK[0x424]) ^ 0x1C159BD0)
                                                                                              + 241634788))
                         - (((v38 & 0x7F ^ 0xB3B98C21) - 937724214) ^ ((v38 & 0x7F ^ 0x1A32D5) + 2075707454) ^ ((v38 & 0x7F ^ 0xB3A3BEDB) - 939441100)));
  v63 = STACK[0x340];
  v64 = ((2 * (LODWORD(STACK[0x340]) ^ 0xE1A82012)) | 0xFBEA1672)
      - (LODWORD(STACK[0x340]) ^ 0xE1A82012)
      - 2113211193;
  v65 = (((v64 ^ 0xFF842704) + 964899258) ^ ((v64 ^ 0x4A087F37) - 1945146997) ^ ((v64 ^ 0x29D1734C) - 271161870))
      - 1029337155;
  v66 = (v65 ^ 0xC293B0E9) & (2 * (v65 & 0xE3003280)) ^ v65 & 0xE3003280;
  v67 = ((2 * (v65 ^ 0xC093D0E9)) ^ 0x4727C4D2) & (v65 ^ 0xC093D0E9) ^ (2 * (v65 ^ 0xC093D0E9)) & 0x2393E268;
  v68 = (v67 ^ 0x1C000) & (4 * v66) ^ v66;
  v69 = ((4 * (v67 ^ 0x20902229)) ^ 0x8E4F89A4) & (v67 ^ 0x20902229) ^ (4 * (v67 ^ 0x20902229)) & 0x2393E268;
  v70 = (v69 ^ 0x2038020) & (16 * v68) ^ v68;
  v71 = ((16 * (v69 ^ 0x21906249)) ^ 0x393E2690) & (v69 ^ 0x21906249) ^ (16 * (v69 ^ 0x21906249)) & 0x2393E260;
  v72 = v70 ^ 0x2393E269 ^ (v71 ^ 0x21122200) & (v70 << 8);
  v73 = v65 ^ (2
             * ((v72 << 16) & 0x23930000 ^ v72 ^ ((v72 << 16) ^ 0x62690000) & (((v71 ^ 0x281C069) << 8) & 0x23930000 ^ 0x20110000 ^ (((v71 ^ 0x281C069) << 8) ^ 0x13E20000) & (v71 ^ 0x281C069))));
  v74 = STACK[0x3D8];
  v75 = (v73 ^ 0x1FDA09AD) & (LODWORD(STACK[0x3D8]) ^ 0x239C3B9B) ^ v73 & 0xF2439A7B;
  v76 = *(_DWORD *)(v14 - 164);
  LODWORD(STACK[0x328]) = (((LODWORD(STACK[0x3D0]) ^ 0x7A964665) - 2056668773) ^ ((LODWORD(STACK[0x3D0]) ^ 0x1710AE0D)
                                                                                - 386969101) ^ ((LODWORD(STACK[0x3D0]) ^ 0xEB45345E)
                                                                                              + 347786146))
                        + 188893039
                        * ((((v75 ^ 0x9F9982D3) - 1686039425) ^ ((v75 ^ 0xBCD03601) - 1194811219) ^ ((v75 ^ 0xCEF44304) - 890448470))
                         - (((v76 ^ 0x4D10D0A1) + 1662319256) ^ ((v76 ^ 0x4F1920E4) + 1629293267) ^ ((v76 ^ 0xC5608D27) - 345725166)));
  v77 = (v37 + v25 - v24 - v19 - v4) ^ a4 ^ v28 ^ v31;
  LODWORD(STACK[0x2E8]) = (((LODWORD(STACK[0x410]) ^ 0x6F7084EB) - 1869645035) ^ ((LODWORD(STACK[0x410]) ^ 0x3FE59867)
                                                                                - 1072011367) ^ ((LODWORD(STACK[0x410]) ^ 0xB4106D58)
                                                                                               + 1273991848))
                        - 1374950657 * (v77 ^ *(_DWORD *)(v14 - 228));
  v78 = (v32 ^ 7 ^ v33 ^ ((v32 ^ 0x36EEAD57) - 921611600)) - 921611601;
  v79 = ((2 * (v32 ^ 0xD817E29B)) & 0x49568) - ((v32 ^ 0xD817E29B) & 0x22966EB6);
  LODWORD(STACK[0x434]) = v79 - 1094961909;
  v80 = (v79 - 1094961909) ^ (v32 ^ 0xD817E29B) & 0x22966EB1;
  LODWORD(STACK[0x330]) = v80 ^ 0xF441B535;
  v81 = v34 ^ 0x82699962;
  if ((v80 ^ 0xF441B535) == 0x4AFD803A)
    v82 = 0;
  else
    v82 = 255;
  LODWORD(STACK[0x3D0]) = v81;
  v83 = v81 & 6 ^ 2;
  LODWORD(STACK[0x410]) = v33;
  LODWORD(STACK[0x350]) = v33 & 1;
  LODWORD(STACK[0x348]) = v83;
  v84 = v82 << (v33 & 1) << v83;
  v85 = 16843009 * v84 + 732235407;
  v86 = (v85 ^ 0x821AF960) & (2 * (v85 & 0xD45AF971)) ^ v85 & 0xD45AF971;
  LODWORD(STACK[0x360]) = v85;
  v87 = ((2 * (v85 ^ 0xAAF3960)) ^ 0xBDEB8022) & (v85 ^ 0xAAF3960) ^ (2 * (v85 ^ 0xAAF3960)) & 0xDEF5C010;
  v88 = (v87 ^ 0x90E18000) & (4 * v86) ^ v86;
  v89 = ((4 * (v87 ^ 0x42144011)) ^ 0x7BD70044) & (v87 ^ 0x42144011) ^ (4 * (v87 ^ 0x42144011)) & 0xDEF5C010;
  v90 = v88 ^ 0xDEF5C011 ^ (v89 ^ 0x5AD50000) & (16 * v88);
  v91 = (16 * (v89 ^ 0x8420C011)) & 0xDEF5C010 ^ 0x10A1C001 ^ ((16 * (v89 ^ 0x8420C011)) ^ 0xEF5C0110) & (v89 ^ 0x8420C011);
  v92 = (v90 << 8) & 0xDEF5C000 ^ v90 ^ ((v90 << 8) ^ 0xF5C01100) & v91;
  LODWORD(STACK[0x310]) = (v92 << 16) & 0x5EF50000 ^ v92 ^ ((v92 << 16) ^ 0x40110000) & ((v91 << 8) & 0xDEF50000 ^ 0xA350000 ^ ((v91 << 8) ^ 0x75C00000) & v91);
  LODWORD(STACK[0x2F0]) = 956301312 * v84;
  v93 = v84 ^ 0xAD9D36C6;
  if ((v80 ^ 0xF441B535) == 0x4AFD803A)
    v93 = 1382205753;
  v94 = v93 & 0xCDC1A538 ^ 0x997DD0DF ^ (v93 ^ 0x5262C939) & (v38 ^ 0xCDC1A538);
  v95 = (((2 * v94) | 0x3ADB1602) - v94 + 1653765375) ^ 0xCB18316C;
  LODWORD(STACK[0x324]) = ((v95 & 0x3BA4A053) - ((2 * v95) & 0x210140A6) + 1355866747) & 0xFFBFE3FF ^ v95 & 0x3BA4A0AC;
  LODWORD(STACK[0x3E0]) = v38;
  v96 = 16843009
      * ((~(_BYTE)v38 ^ ((unsigned __int16)(v38 ^ 0xD3FF) >> 8) ^ ((v38 ^ 0xDC72D3FF) >> 16)) ^ HIBYTE(v38) ^ 0x62);
  v97 = 16843009
      * (v77 ^ 0xCC ^ ((unsigned __int16)(v77 ^ 0x86CC) >> 8) ^ ((v77 ^ 0xA41B86CC) >> 16) ^ HIBYTE(v77) ^ 0xAE);
  LODWORD(STACK[0x2A4]) = v97;
  LODWORD(STACK[0x420]) = LODWORD(STACK[0x384]) ^ LODWORD(STACK[0x38C]) ^ v47 ^ 0xD3E53D87 ^ ((v47 ^ 0xD3E53D87 ^ LODWORD(STACK[0x384])) >> 3);
  LODWORD(STACK[0x2EC]) = ((LODWORD(STACK[0x3D4]) ^ 0x311CB299) - 823964313) ^ ((LODWORD(STACK[0x3D4]) ^ 0xEF3F2417)
                                                                              + 281074665) ^ ((LODWORD(STACK[0x3D4]) ^ 0x9096901A)
                                                                                            + 1869180902);
  v98 = *(_DWORD *)(v14 - 144);
  v99 = (char *)*(&off_1015B46D0 + v98 - 13864) - 12;
  v100 = (uint64_t)*(&off_1015B46D0 + v98 - 12540);
  v101 = STACK[0x440];
  v102 = LODWORD(STACK[0x440]) ^ 2;
  LODWORD(STACK[0x248]) = v102;
  LODWORD(STACK[0x384]) = *(_DWORD *)&v99[4 * v102] ^ 0xC1B6B68 ^ (*(_DWORD *)&v99[4 * v102] >> 2) & 0x3A399798;
  HIDWORD(v103) = *(_DWORD *)(v100 + 4 * v34 - 8);
  LODWORD(v103) = HIDWORD(v103);
  LODWORD(STACK[0x29C]) = (v103 >> 23) ^ ((v103 >> 23) << 6) ^ (8 * (v103 >> 23)) ^ 0x73C14CBC;
  LODWORD(v100) = ((v101 ^ 0x98A418A6) + 1461231619) ^ (v101 - 272580955) ^ ((v101 ^ 0x129BA4) - 810671359);
  v104 = (-1448326573 * v100 - ((1398314150 * v100 - 1837647946) & 0x89E0BEFE) + 237779802) ^ LODWORD(STACK[0x408]);
  LODWORD(STACK[0x408]) = v96;
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x47C]) ^ LODWORD(STACK[0x39C]) ^ (LODWORD(STACK[0x47C]) >> 3) ^ v97 ^ v96 ^ ((((v97 ^ v96) >> 3) ^ 0x16969696) - ((2 * (((v97 ^ v96) >> 3) ^ 0x16969696)) & 0x2277A192) + 1899745481);
  LODWORD(v100) = ((v35 ^ 0x1F2F6862) - 270835483) ^ ((v35 ^ 0x895829) - 260222800) ^ ((v35 ^ 0x1FA6304B) - 279824178);
  v105 = -919262493
       * (((v97 ^ v96 ^ 0xE89ADDCD) + 991678521) ^ ((v97 ^ v96 ^ 0x42CB9DEF) - 1857384421) ^ ((v97 ^ v96 ^ 0x1EE5F496)
                                                                                            - 849020572))
       + 2122506853;
  v106 = *(_DWORD *)(v14 - 220);
  v107 = -919262493 * v106 - 2014155411;
  v108 = v97 ^ v96 ^ 0xB4B4B4B4;
  LODWORD(STACK[0x260]) = v34;
  *(_DWORD *)(v14 - 220) = ((v34 ^ 0xB81CEB06) - 980775524) ^ ((v34 ^ 0x7489ACAC) + 153078322) ^ ((v34 ^ 0xCC9547AA)
                                                                                                - 1325194952);
  v109 = *((_DWORD *)*(&off_1015B46D0 + (v98 ^ 0x30BF)) + v106 % 0x101);
  v110 = v104 ^ (-1448326573
               * (((v80 ^ 0x8FEF089D) - 2075049384) ^ ((v80 ^ 0xDE18A877) - 710483266) ^ ((v80 ^ 0xEF4B95E5) - 453648592))
               + 137975502);
  v111 = *(_DWORD *)&v99[4 * (v108 % 0x101)] ^ 0x94755A55;
  v112 = ((LODWORD(STACK[0x41C]) ^ 0xCA91B506) + 896420602) ^ ((LODWORD(STACK[0x41C]) ^ 0x204C42DB) - 541868763) ^ ((LODWORD(STACK[0x41C]) ^ 0xAEDBC1D4) + 1361329708);
  LODWORD(STACK[0x47C]) = v80 ^ LODWORD(STACK[0x444]) ^ (v110 + 809715545 - ((2 * v110) & 0x60868EB2));
  v113 = ((LODWORD(STACK[0x3AC]) ^ 0xFE1EE356) + 31530154) ^ ((LODWORD(STACK[0x3AC]) ^ 0x3CFE931E) - 1023316766) ^ ((LODWORD(STACK[0x3AC]) ^ 0xA418CE05) + 1541878267);
  LODWORD(STACK[0x2DC]) = v47;
  v114 = ((v47 ^ 0x4E0263A) + 687531075) ^ ((v47 ^ 0xFC559BB0) - 800106039) ^ ((v47 ^ 0xB93525F) + 663326760);
  v115 = (v36 ^ 0x71222CF) & (2 * (v36 & 0x971B32EC)) ^ v36 & 0x971B32EC;
  v116 = ((2 * (v36 ^ 0x21364797)) ^ 0x6C5AEAF6) & (v36 ^ 0x21364797) ^ (2 * (v36 ^ 0x21364797)) & 0xB62D757A;
  v117 = v116 ^ 0x92251509;
  v118 = (v116 ^ 0x24084070) & (4 * v115) ^ v115;
  v119 = ((4 * v117) ^ 0xD8B5D5EC) & v117 ^ (4 * v117) & 0xB62D7578;
  v120 = (v119 ^ 0x90255560) & (16 * v118) ^ v118;
  v121 = ((16 * (v119 ^ 0x26082013)) ^ 0x62D757B0) & (v119 ^ 0x26082013) ^ (16 * (v119 ^ 0x26082013)) & 0xB62D7570;
  v122 = v120 ^ 0xB62D757B ^ (v121 ^ 0x22055500) & (v120 << 8);
  v123 = (v122 << 16) & 0x362D0000 ^ v122 ^ ((v122 << 16) ^ 0x757B0000) & (((v121 ^ 0x9428204B) << 8) & 0x362D0000 ^ 0x12080000 ^ (((v121 ^ 0x9428204B) << 8) ^ 0x2D750000) & (v121 ^ 0x9428204B));
  v124 = v113
       + (((v63 ^ 0xA3F39C70) + 470032643) ^ ((v63 ^ 0x49E5DBD) - 1150689072) ^ ((v63 ^ 0x504A5C99) - 272768532))
       - v114
       + 441166747;
  v125 = (v124 ^ 0xDB5C9C38) & (2 * (v124 & 0xE3192039)) ^ v124 & 0xE3192039;
  v126 = ((2 * (v124 ^ 0xD95CDC1A)) ^ 0x748BF846) & (v124 ^ 0xD95CDC1A) ^ (2 * (v124 ^ 0xD95CDC1A)) & 0x3A45FC22;
  v127 = (v126 ^ 0x10018000) & (4 * v125) ^ v125;
  v128 = ((4 * (v126 ^ 0xA440421)) ^ 0xE917F08C) & (v126 ^ 0xA440421) ^ (4 * (v126 ^ 0xA440421)) & 0x3A45FC20;
  v129 = (v128 ^ 0x2805F000) & (16 * v127) ^ v127;
  v130 = ((16 * (v128 ^ 0x12400C23)) ^ 0xA45FC230) & (v128 ^ 0x12400C23) ^ (16 * (v128 ^ 0x12400C23)) & 0x3A45FC20;
  v131 = v129 ^ 0x3A45FC23 ^ (v130 ^ 0x2045C000) & (v129 << 8);
  v132 = ((v131 << 16) ^ 0x7C230000) & (((v130 ^ 0x1A003C03) << 8) & 0x3A450000 ^ 0x3A010000 ^ (((v130 ^ 0x1A003C03) << 8) ^ 0x45FC0000) & (v130 ^ 0x1A003C03)) ^ v131 ^ ((v131 << 16) & 0x3A450000 | 0xCC01);
  v133 = (v105 ^ 0xFF823195) & (2 * (v105 & 0xFFCB0415)) ^ v105 & 0xFFCB0415;
  v134 = ((2 * (v105 ^ 0x80843195)) ^ 0xFE9E6B00) & (v105 ^ 0x80843195) ^ (2 * (v105 ^ 0x80843195)) & 0x7F4F3580;
  v135 = ((4 * (v134 ^ 0x1411480)) ^ 0xFD3CD600) & (v134 ^ 0x1411480) ^ (4 * (v134 ^ 0x1411480)) & 0x7F4F3580;
  v136 = (v134 ^ 0x7E0C2000) & (4 * v133) ^ v133 ^ 0x7F4F3580 ^ (v135 ^ 0x7D0C1400) & (16
                                                                                     * ((v134 ^ 0x7E0C2000) & (4 * v133) ^ v133));
  v137 = (16 * (v135 ^ 0x2432180)) & 0x7F4F3580 ^ 0xB0C2580 ^ ((16 * (v135 ^ 0x2432180)) ^ 0xF4F35800) & (v135 ^ 0x2432180);
  v138 = (v136 << 8) & 0x7F4F3500 ^ v136 ^ ((v136 << 8) ^ 0x4F358000) & v137;
  v139 = (v138 << 16) & 0x7F4F0000 ^ v138 ^ ((v138 << 16) ^ 0x35800000) & ((v137 << 8) & 0x7F4F0000 ^ 0x304A0000 ^ ((v137 << 8) ^ 0x4F350000) & v137);
  LODWORD(STACK[0x30C]) = ((v49 ^ 0xBAB22317) + 491960955) ^ ((v49 ^ 0x66A73AE7) - 1052269685) ^ ((v49 ^ 0xF24C165E)
                                                                                                + 1437372212);
  v140 = (v107 ^ 0x7A4DC05B) & (2 * (v107 & 0x780D9293)) ^ v107 & 0x780D9293;
  v141 = ((2 * (v107 ^ 0x1A56E07D)) ^ 0xC4B6E5DC) & (v107 ^ 0x1A56E07D) ^ (2 * (v107 ^ 0x1A56E07D)) & 0x625B72EE;
  v142 = (v141 ^ 0x401240CC) & (4 * v140) ^ v140;
  v143 = ((4 * (v141 ^ 0x22491222)) ^ 0x896DCBB8) & (v141 ^ 0x22491222) ^ (4 * (v141 ^ 0x22491222)) & 0x625B72EC;
  v144 = (v143 ^ 0x4942A0) & (16 * v142) ^ v142;
  v145 = ((16 * (v143 ^ 0x62123046)) ^ 0x25B72EE0) & (v143 ^ 0x62123046) ^ (16 * (v143 ^ 0x62123046)) & 0x625B72E0;
  v146 = v144 ^ 0x625B72EE ^ (v145 ^ 0x20132200) & (v144 << 8);
  LODWORD(STACK[0x300]) = ((LODWORD(STACK[0x430]) ^ 0x303D6A4A) - 809331274) ^ ((LODWORD(STACK[0x430]) ^ 0x90C01EE5)
                                                                              + 1866457371) ^ ((LODWORD(STACK[0x430]) ^ 0xE40D2BD0)
                                                                                             + 468898864);
  LODWORD(STACK[0x430]) = v36 ^ LODWORD(STACK[0x3C4]) ^ (2 * v123) ^ LODWORD(STACK[0x3EC]);
  v147 = *(_DWORD *)(v14 - 136);
  v148 = v147 & 0x5E743D9 ^ 0xFA1CFFAF ^ (v147 ^ 0xE018B402) & (v101 ^ 0xFA18BC24);
  LODWORD(STACK[0x3D4]) = v107 ^ LODWORD(STACK[0x404]) ^ (2
                                                        * ((v146 << 16) & 0x625B0000 ^ v146 ^ ((v146 << 16) ^ 0x72EE0000) & (((v145 ^ 0x4248500E) << 8) & 0x625B0000 ^ 0x20090000 ^ (((v145 ^ 0x4248500E) << 8) ^ 0x5B720000) & (v145 ^ 0x4248500E)))) ^ v105 ^ (2 * v139);
  v149 = v78 & 0xEE0DA580 ^ 0x60080105 ^ (v78 & 0xFFFFFFF8 ^ 0x77FFFFFF) & (v80 ^ 0xAF4E6F75);
  v150 = (v149 - ((2 * v149) & 0xA11DE5AA) + 1351545557) ^ 0x2174A9AA;
  LODWORD(STACK[0x3C4]) = *(_DWORD *)(v14 - 160) ^ LODWORD(STACK[0x414]) ^ (16 * *(_DWORD *)(v14 - 160)) ^ v75 ^ (((16 * v75) ^ 0xDBDF7D60) - ((2 * ((16 * v75) ^ 0xDBDF7D60)) & 0x4861BC20) + 607182355);
  v151 = v78 & 0xFFFFFFF8 ^ 0x7FFFFFFF;
  v152 = v78 & 0x89CEB790 ^ 0x88CB294 ^ v151 & (v80 ^ 0xC88D7D65);
  v153 = (((2 * v152) | 0xC18FA744) - v152 - 1623708578) ^ 0x1E7A295C;
  v154 = LODWORD(STACK[0x37C]) + 1469821683;
  v155 = (v154 ^ 0x74241D59) & (2 * (v154 & 0x66311D5D)) ^ v154 & 0x66311D5D;
  v156 = ((2 * (v154 ^ 0xFC260DE3)) ^ 0x342E217C) & (v154 ^ 0xFC260DE3) ^ (2 * (v154 ^ 0xFC260DE3)) & 0x9A1710BE;
  v157 = (v156 ^ 0x1004003C) & (4 * v155) ^ v155;
  v158 = ((4 * (v156 ^ 0x8A111082)) ^ 0x685C42F8) & (v156 ^ 0x8A111082) ^ (4 * (v156 ^ 0x8A111082)) & 0x9A1710BC;
  v159 = (v158 ^ 0x81400B0) & (16 * v157) ^ v157;
  v160 = ((16 * (v158 ^ 0x92031006)) ^ 0xA1710BE0) & (v158 ^ 0x92031006) ^ (16 * (v158 ^ 0x92031006)) & 0x9A1710B0;
  v161 = v159 ^ 0x9A1710BE ^ (v160 ^ 0x80110000) & (v159 << 8);
  LODWORD(STACK[0x37C]) = v154 ^ (2
                                * ((v161 << 16) & 0x1A170000 ^ v161 ^ ((v161 << 16) ^ 0x10BE0000) & (((v160 ^ 0x1A06101E) << 8) & 0x1A170000 ^ 0x8070000 ^ (((v160 ^ 0x1A06101E) << 8) ^ 0x17100000) & (v160 ^ 0x1A06101E))));
  LODWORD(STACK[0x3EC]) = (((v78 ^ 7) << 8) - (((v78 ^ 7) << 9) & 0xE48A0400) + 1917125295) ^ v78 ^ v153 ^ (v153 << 8) ^ v124 ^ (2 * v132);
  v162 = *(_DWORD *)&v99[4
                       * (((((v74 ^ 0xD77AEF39) - 486398469) ^ ((v74 ^ 0x6AF9F0D0) + 1585527316) ^ ((v74 ^ 0x93A341F6)
                                                                                                  - 1478784202))
                         - 928539229
                         + v65)
                        % 0x101)];
  v163 = *(_DWORD *)&v99[4 * ((v76 ^ 0xC7697D62) % 0x101)] ^ 0x94755A55;
  v164 = LODWORD(STACK[0x364])
       + (v162 ^ 0xF3E49497 ^ (v162 >> 2) & 0x3A399798)
       + ((((v163 >> 2) & 0x3A399798 ^ v163 ^ 0xEBFDB77) - 1655333557) ^ (((v163 >> 2) & 0x3A399798 ^ v163 ^ 0xBCEA96C1)
                                                                        + 788582653) ^ (((v163 >> 2) & 0x3A399798 ^ v163 ^ 0xA226A1B)
                                                                                      - 1714934745))
       - 1763733197;
  v165 = (v164 ^ 0xF8758999) & (2 * (v164 & 0xFA742D9D)) ^ v164 & 0xFA742D9D;
  v166 = ((2 * (v164 ^ 0xB815CBA1)) ^ 0x84C3CC78) & (v164 ^ 0xB815CBA1) ^ (2 * (v164 ^ 0xB815CBA1)) & 0x4261E63C;
  v167 = (v166 ^ 0x41C438) & (4 * v165) ^ v165;
  v168 = ((4 * (v166 ^ 0x42202204)) ^ 0x98798F0) & (v166 ^ 0x42202204) ^ (4 * (v166 ^ 0x42202204)) & 0x4261E63C;
  v169 = (v168 ^ 0x18030) & (16 * v167) ^ v167;
  v170 = ((16 * (v168 ^ 0x4260660C)) ^ 0x261E63C0) & (v168 ^ 0x4260660C) ^ (16 * (v168 ^ 0x4260660C)) & 0x4261E630;
  v171 = v169 ^ 0x4261E63C ^ (v170 ^ 0x2006200) & (v169 << 8);
  LODWORD(STACK[0x41C]) = v164 ^ (2
                                * ((v171 << 16) & 0x42610000 ^ v171 ^ ((v171 << 16) ^ 0x663C0000) & (((v170 ^ 0x4061843C) << 8) & 0x42610000 ^ 0x2010000 ^ (((v170 ^ 0x4061843C) << 8) ^ 0x61E60000) & (v170 ^ 0x4061843C))));
  v172 = *(_DWORD *)(v14 - 224);
  LODWORD(STACK[0x39C]) = v172 ^ LODWORD(STACK[0x388]) ^ v147 & 0xE048CC39 ^ (v147 ^ 0x5B33042) & (v101 ^ 0x1FB733C4);
  v173 = LODWORD(STACK[0x478]) + (v172 ^ 0x3896829D);
  LODWORD(STACK[0x290]) = v78 ^ 7;
  v174 = LODWORD(STACK[0x328]) - (v78 ^ 7) + 886247603 + v150;
  v175 = (v174 ^ 0x43F50B12) & (2 * (v174 & 0x63C5939A)) ^ v174 & 0x63C5939A;
  v176 = ((2 * (v174 ^ 0x17C2926)) ^ 0xC5737578) & (v174 ^ 0x17C2926) ^ (2 * (v174 ^ 0x17C2926)) & 0x62B9BABC;
  v177 = (v176 ^ 0x301038) & (4 * v175) ^ v175;
  v178 = ((4 * (v176 ^ 0x22888A84)) ^ 0x8AE6EAF0) & (v176 ^ 0x22888A84) ^ (4 * (v176 ^ 0x22888A84)) & 0x62B9BABC;
  v179 = (v178 ^ 0x2A0AAA0) & (16 * v177) ^ v177;
  v180 = ((16 * (v178 ^ 0x6019100C)) ^ 0x2B9BABC0) & (v178 ^ 0x6019100C) ^ (16 * (v178 ^ 0x6019100C)) & 0x62B9BAB0;
  v181 = v179 ^ 0x62B9BABC ^ (v180 ^ 0x2299AA00) & (v179 << 8);
  LODWORD(STACK[0x38C]) = v174 ^ (2
                                * ((v181 << 16) & 0x62B90000 ^ v181 ^ ((v181 << 16) ^ 0x3ABC0000) & (((v180 ^ 0x4020103C) << 8) & 0x62B90000 ^ 0x42010000 ^ (((v180 ^ 0x4020103C) << 8) ^ 0x39BA0000) & (v180 ^ 0x4020103C))));
  v182 = (uint64_t)*(&off_1015B46D0 + (v98 ^ 0x3EB7));
  v183 = *(_DWORD *)(v182 + 4 * (v80 ^ 0xBEBC350F));
  v184 = *(_DWORD *)(v182 + 4 * ((LODWORD(STACK[0x368]) - 1081911984) % 0x101u));
  LODWORD(v182) = v151 & (v80 ^ 0xC4A83341);
  v185 = STACK[0x318];
  v186 = *(_DWORD *)&v99[4 * (LODWORD(STACK[0x318]) % 0x101)];
  LODWORD(STACK[0x2FC]) = v78;
  LODWORD(STACK[0x2F8]) = v182 ^ (v78 & 0x85EBF9B0 | 0x7A14064E);
  v187 = *(_QWORD *)(v14 - 240);
  LODWORD(STACK[0x478]) = __ROR4__(v183, 31) ^ 0x15B3FA94;
  v188 = v112
       + (v109 ^ 0xE558CFA6 ^ (v109 >> 4) & 0x2EB5E3E)
       + (v186 ^ 0xC1B6B68 ^ (v186 >> 2) & 0x3A399798)
       + ((((v111 >> 2) & 0x3A399798 ^ v111 ^ 0xF5F70FD9) + 927860301) ^ (((v111 >> 2) & 0x3A399798 ^ v111 ^ 0x3483D59C)
                                                                        - 163914742) ^ (((v111 >> 2) & 0x3A399798 ^ v111 ^ 0x7903FDE8)
                                                                                      - 1145375618))
       + 1076554610
       + (__ROR4__(v184, 31) ^ 0x15B3FA94);
  v189 = (2 * (v188 & 0x890D1C60 ^ 0xD652414)) & 0x2000 ^ v188 & 0x890D1C60 ^ 0xD652414 ^ ((2
                                                                                          * (v188 & 0x890D1C60 ^ 0xD652414)) ^ 0x1ACA4828) & (v188 ^ 0x84683874);
  v190 = (2 * (v188 ^ 0x84683874)) & 0xD652414 ^ 0x5252414 ^ ((2 * (v188 ^ 0x84683874)) ^ 0x1ACA4828) & (v188 ^ 0x84683874);
  v191 = (4 * v189) & 0xD652414 ^ v189 ^ ((4 * v189) ^ 0x35949050) & v190;
  v192 = (4 * v190) & 0xD652414 ^ 0x8612404 ^ ((4 * v190) ^ 0x35949050) & v190;
  v193 = (16 * v191) & 0xD652410 ^ v191 ^ ((16 * v191) ^ 0x86124040) & v192;
  v194 = (16 * v192) & 0xD652410 ^ 0x9252414 ^ ((16 * v192) ^ 0xD6524140) & v192;
  v195 = v193 ^ (v193 << 8) & 0xD652400 ^ ((v193 << 8) ^ 0x61240400) & v194 ^ 0x200410;
  v196 = ((v194 << 8) ^ 0x65241400) & v194 ^ (v194 << 8) & 0xD652400;
  LODWORD(STACK[0x414]) = v188 ^ (2
                                * (v195 ^ v196 & 0x74260900 ^ ((v195 << 16) ^ 0x50320948) & (v196 ^ 0x8410000) ^ ((v195 << 16) ^ 0x50320948) & 0xD650000));
  v197 = LODWORD(STACK[0x2E8]) + 1426803602;
  v198 = (v197 ^ 0xF60B378E) & (2 * (v197 & 0xE642270F)) ^ v197 & 0xE642270F;
  v199 = ((2 * (v197 ^ 0x3E0B759C)) ^ 0xB092A526) & (v197 ^ 0x3E0B759C) ^ (2 * (v197 ^ 0x3E0B759C)) & 0xD8495292;
  v200 = (v199 ^ 0x90000000) & (4 * v198) ^ v198;
  v201 = ((4 * (v199 ^ 0x48495291)) ^ 0x61254A4C) & (v199 ^ 0x48495291) ^ (4 * (v199 ^ 0x48495291)) & 0xD8495290;
  v202 = (v201 ^ 0x40014203) & (16 * v200) ^ v200;
  v203 = ((16 * (v201 ^ 0x98481093)) ^ 0x84952930) & (v201 ^ 0x98481093) ^ (16 * (v201 ^ 0x98481093)) & 0xD8495290;
  v204 = v202 ^ 0xD8495293 ^ (v203 ^ 0x80010000) & (v202 << 8);
  LODWORD(STACK[0x3AC]) = v197 ^ (2
                                * ((v204 << 16) & 0x58490000 ^ v204 ^ ((v204 << 16) ^ 0x52930000) & (((v203 ^ 0x58485283) << 8) & 0x58490000 ^ 0x10090000 ^ (((v203 ^ 0x58485283) << 8) ^ 0x49520000) & (v203 ^ 0x58485283))));
  v205 = *(_QWORD *)(v14 - 128);
  v206 = *(_QWORD *)(v205 + 8 * (0x43107D67 % v187));
  v207 = *(_QWORD *)(v205
                   + 8
                   * (((((v206 ^ 0xBFD6360B45757320) + 0x4FB3A721972E1492) ^ ((v206 ^ 0x81BBDE6D5483D9AELL)
                                                                                + 0x71DE4F4786D8BE20) ^ ((v206 ^ 0xF5CD95720C79BBFLL) - 0xC6B7820D6303F1))
                     + 0x3EAB5FE4E3800F72)
                    % v187));
  v208 = *(_QWORD *)(v205
                   + 8
                   * (((((v207 ^ 0x8F2CABE7243E7B5FLL) + 0x7712BD0DDEA4E82ALL) ^ ((v207 ^ 0xBC956DC07C332F77)
                                                                                + 0x44AB7B2A86A9BC02) ^ ((v207 ^ 0x288F716693C6519) - 0x5491E036C590990))
                     + 0x36F0D82462A2AAD7)
                    % v187));
  v209 = *(_QWORD *)(v205
                   + 8
                   * (((((v208 ^ 0x59F071BE9E54C974) + 0x14B66BC947A694ELL) ^ ((v208 ^ 0x569D91C8A218AF9ALL)
                                                                               + 0xE2686CAA8360FA4) ^ ((v208 ^ 0x3E5CD1470D7D57DFuLL) + 0x66E7C6450753F7E7))
                     - 0x698A2632E33A88F5)
                    % v187));
  LODWORD(v209) = ((((v209 ^ 0xF6D2B7FD242B1682) - 0x2C04C8782714F744) ^ ((v209 ^ 0xEB93091C400C0696)
                                                                            - 0x314576994333E750) ^ ((v209 ^ 0x2C708FD055162125) + 0x9590FAAA9D63F1DLL))
                 - 0x1418B14AEC7B9995)
                % v187;
  *(_DWORD *)(v14 - 160) = ((((v209 - ((2 * v209) & 0x2665C446) + 1395843619) ^ 0xC72706B4) + 2132334418) ^ (((v209 - ((2 * v209) & 0x2665C446) + 1395843619) ^ 0xF1E66929) + 1239005389) ^ (((v209 - ((2 * v209) & 0x2665C446) + 1395843619) ^ 0x65F38DBE) - 573809572))
                         - 366371106;
  v210 = STACK[0x358];
  LODWORD(STACK[0x368]) = LODWORD(STACK[0x358]) ^ 0xFFFFFFAD;
  LODWORD(STACK[0x328]) = 2 * LODWORD(STACK[0x310]);
  LODWORD(STACK[0x3D8]) = v77;
  LODWORD(STACK[0x364]) = STACK[0x2F0] & v77;
  LODWORD(v99) = *(_DWORD *)&v99[4 * v210];
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x2EC]) + 1320486550;
  LODWORD(STACK[0x2D0]) = -(int)v100;
  LODWORD(STACK[0x2E8]) = v172 ^ 0xC7697D62;
  LODWORD(STACK[0x2EC]) = -v185;
  LODWORD(STACK[0x310]) = v173 + 1;
  LODWORD(STACK[0x2F0]) = LODWORD(STACK[0x42C]) ^ LODWORD(STACK[0x3F0]);
  LODWORD(STACK[0x404]) = LODWORD(STACK[0x2A4]) ^ 0xE32FDD80;
  *(_QWORD *)(v14 - 136) = v98 ^ 0x219Fu;
  LODWORD(STACK[0x3F0]) = (_DWORD)v99;
  LODWORD(STACK[0x28C]) = v99 >> 2;
  LODWORD(STACK[0x318]) = v148;
  LODWORD(STACK[0x2A0]) = -v148;
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(v14 - 120) + 8 * v98))(0xD44F0E2FC723B26CLL);
}

uint64_t sub_1001D7490()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 + 1993388688 < v1;
  if (v1 < 0xD536D2A5 != (v0 + 1993388688) < 0xD536D2A5)
    v3 = v1 < 0xD536D2A5;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 - 120) + 8 * ((2436 * !v3) ^ *(_DWORD *)(v2 - 144))))();
}

uint64_t sub_1001D9A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;
  int v44;

  v44 = LODWORD(STACK[0x328]) ^ LODWORD(STACK[0x360]);
  LODWORD(STACK[0x328]) = v44;
  LODWORD(STACK[0x2A8]) = LODWORD(STACK[0x324]) ^ v44;
  LODWORD(STACK[0x29C]) += LODWORD(STACK[0x388])
                         + LODWORD(STACK[0x384])
                         + LODWORD(STACK[0x478])
                         + (LODWORD(STACK[0x3F0]) ^ 0xC1B6B68 ^ STACK[0x28C] & 0x3A399798);
  LODWORD(STACK[0x478]) = LODWORD(STACK[0x47C]) ^ 0x978C9EE2;
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x3D4]) ^ 0x7E64626A;
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x3C4]) ^ 0xEB67640A;
  LODWORD(STACK[0x274]) = LODWORD(STACK[0x3EC]) ^ 0xB26CF7E2;
  LODWORD(STACK[0x324]) = LODWORD(STACK[0x39C]) ^ 0xC9F31A4;
  LODWORD(STACK[0x28C]) = LODWORD(STACK[0x38C]) ^ 0xBC56F626;
  LODWORD(STACK[0x360]) = -341245853 * LODWORD(STACK[0x290]);
  LODWORD(STACK[0x384]) = LODWORD(STACK[0x3AC]) ^ 0xCB26E098;
  LODWORD(STACK[0x3F0]) = LODWORD(STACK[0x408]) ^ 0xBEBEBEBE;
  *(_DWORD *)(v43 - 160) = (((*(_DWORD *)(v43 - 204) ^ 0xF1CBE6B) - 663755998) ^ ((*(_DWORD *)(v43 - 204) ^ 0x70EA4CA5)
                                                                                - 1483140624) ^ ((*(_DWORD *)(v43 - 204) ^ 0x7059EDB4)
                                                                                               - 1490374401))
                         - 46743979;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v43 - 120) + 8 * (int)*(_QWORD *)(v43 - 136)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1001D9BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  int v7;

  *(_DWORD *)(v6 - 144) = v5 < 0xD6130086;
  v7 = a5 + 2007818353 < v5;
  if (*(_DWORD *)(v6 - 144) != (a5 + 2007818353) < 0xD6130086)
    v7 = *(_DWORD *)(v6 - 144);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 - 120) + 8
                                                                * (int)((12837 * (v7 ^ 1)) ^ *(_QWORD *)(v6 - 136)))
                            - 12))();
}

uint64_t sub_1001DC1E0()
{
  uint64_t v0;
  int v1;

  LODWORD(STACK[0x264]) = LODWORD(STACK[0x420]) ^ 0x786DC4E4;
  LODWORD(STACK[0x30C]) += LODWORD(STACK[0x300])
                         + LODWORD(STACK[0x2E8])
                         + LODWORD(STACK[0x2A0])
                         + LODWORD(STACK[0x2EC])
                         + *(_DWORD *)(v0 - 176)
                         + 1933663702;
  LODWORD(STACK[0x418]) = LODWORD(STACK[0x41C]) ^ 0x161A1F94;
  LODWORD(STACK[0x300]) = -341245853 * LODWORD(STACK[0x2F8]);
  LODWORD(STACK[0x284]) = LODWORD(STACK[0x2F0]) ^ LODWORD(STACK[0x3E0]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 - 120) + 8 * v1) - 8))(0xFFFFFFFFLL);
}

uint64_t sub_1001DC4C4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4 + 8 * (((a2 == v2) * v3) ^ v5)) - 8))((a1 + 1));
}

uint64_t sub_1001DC5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v54;

  v52 = (v49 - 527) | 0x208;
  *(_DWORD *)(v51 - 220) = LODWORD(STACK[0x380]) ^ 0x2ABE77A3;
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x37C]) ^ 0xCBBFEF00;
  LODWORD(STACK[0x230]) = LODWORD(STACK[0x414]) ^ 0xD565AEA;
  v53 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v51 - 120) + 8 * v49) - (v52 ^ 0x3A88));
  *(_DWORD *)(v51 - 136) = v48 - 528591210;
  *(_QWORD *)(v51 - 184) = v52;
  v54 = 814 * (v52 ^ 0x3A94);
  *(_DWORD *)(v51 - 176) = v54;
  *(_DWORD *)(v51 - 188) = v54 ^ 0x5C79AA0D;
  return v53(528591210, (v48 - 1), (v48 - 1537669606), 669089652, 1537669606, a6, v50, 1551492701, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1001DC73C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  *(_QWORD *)(v9 - 160) = v7;
  *(_DWORD *)(v9 - 144) = v8;
  v10 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 - 120)
                                                                                      + 8
                                                                                      * (int)((31 * (v6 + a6 != 15)) ^ *(_QWORD *)(v9 - 184)))
                                                                          - 4);
  ++*(_DWORD *)(v9 - 136);
  return v10(a1 - 1, (a2 + 1), (a3 + 1), a4 - 1, a5 - 1);
}

uint64_t sub_1001DC920(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(void);

  *(_DWORD *)(v13 - 160) = v8;
  LODWORD(STACK[0x2F8]) = v7;
  LODWORD(STACK[0x214]) = LODWORD(STACK[0x430]) ^ 0x6BC4B983;
  v15 = v11 + a3;
  v16 = v11 + a2;
  v17 = HIWORD(v16);
  v18 = (v16 + HIWORD(v16)) >> 8;
  v19 = v15 + v17 + v18;
  v20 = v19 >> 10;
  v21 = (v19 - (v19 >> 10)) >> 3;
  v22 = v11 + v18 + v17 + v21;
  v23 = v6 + v22 - v20 - a5;
  v24 = v22 + v10;
  v25 = (v24 - v20) >> 8;
  v26 = v22 + v25;
  v27 = (v24 + v25 - v20) >> 2;
  v28 = v6 + v26 - v27 - v20 - a4;
  v29 = LODWORD(STACK[0x284]) ^ 0xB6952A5F;
  v30 = v11
      + ((v26 + *(_DWORD *)(v13 - 136) + ((v26 + *(_DWORD *)(v13 - 136) - v27 - v20) >> 12) - v27 - v20) >> 5)
      + ((v26 + *(_DWORD *)(v13 - 136) - v27 - v20) >> 12)
      + v25
      + v21
      + v18
      + v17;
  v31 = v6 + v30 - v27 - v20 - a1;
  v32 = v6
      + v30
      - ((v30 + v12 - ((v30 + v12 - v27 - v20) >> 9) - v27 - v20) >> 4)
      - ((v30 + v12 - v27 - v20) >> 9)
      - v27
      - v20
      - v9;
  STACK[0x290] = v23;
  STACK[0x278] = v32;
  v33 = v32 ^ v23;
  v34 = (v32 ^ 0xCB63B48D)
      + ((v32 ^ 0xCB63B48D) >> 12)
      - (((v32 ^ 0xCB63B48D) + ((v32 ^ 0xCB63B48D) >> 12)) >> 4);
  LODWORD(v32) = v34
               + 584225879
               - ((v34 + 584225879) >> 15)
               - ((v34 + 584225879 - ((v34 + 584225879) >> 15)) >> 8);
  v35 = v32 - 1821985441;
  STACK[0x2F0] = v31;
  LODWORD(STACK[0x2EC]) = v32;
  LODWORD(v32) = v32 ^ v31;
  LODWORD(v31) = v35 + (v35 >> 9) + ((v35 + (v35 >> 9)) >> 1);
  v36 = v31
      + 112518238
      + ((v31 + 112518238) >> 15)
      + (((_DWORD)v31 + 112518238 + ((v31 + 112518238) >> 15)) >> 5);
  LODWORD(STACK[0x26C]) = v31;
  v37 = ((2 * (v33 ^ v31)) ^ 0xCFF2AE1B) & 0xC7122114 ^ 0x32021689 ^ (((2
                                                                      * (((2 * (v33 ^ v31)) ^ 0xCFF2AE1B) & 0xAA29D96A)) | 0x70453D06)
                                                                    - (((2 * (v33 ^ v31)) ^ 0xCFF2AE1B) & 0xAA29D96A)
                                                                    + 1205690749);
  v38 = *(_DWORD *)(v13 - 220);
  v39 = LODWORD(STACK[0x42C]) ^ v38 ^ (LODWORD(STACK[0x438]) - 1572820482 + (~(2 * LODWORD(STACK[0x438])) | 0xBB7EAC05));
  LODWORD(v31) = *(_DWORD *)(v13 - 200);
  LODWORD(v23) = v31 ^ *(_DWORD *)(v13 - 228) ^ 0x793A9980;
  v40 = *(_DWORD *)(v13 - 208);
  *(_DWORD *)(v13 - 184) = v23;
  v41 = v23 ^ v40;
  v42 = ((v14 & (2 * v39) ^ v39) - 2 * ((v14 & (2 * v39) ^ v39) & 0x4DCD3975 ^ v39 & 1) + 1305295220) ^ LODWORD(STACK[0x374]) ^ ((v37 | 0x9AEF0996) - (v37 | 0x6510F669) + 1695610473);
  v43 = (((2 * v38) & 0x243B5022 ^ 0x230421 | (2 * v38) & 0x4900A85C) - 1) ^ 0x288BB403;
  LODWORD(STACK[0x268]) = ((2 * v43) & 0x50366084) - v43 - 941306179;
  LODWORD(STACK[0x25C]) = (v42 ^ 0xAA80EB90) & 0x6A35CBBD ^ v42 & 0x20;
  LODWORD(STACK[0x258]) = (v42 ^ 0xAA80EB90) - 365573219;
  v44 = v14 & (2 * (v23 ^ v40)) ^ LODWORD(STACK[0x29C]);
  LODWORD(v23) = v36
               - 1055017364
               + ((v36 - 1055017364) >> 12)
               - ((v36 - 1055017364 + ((v36 - 1055017364) >> 12)) >> 2);
  LODWORD(STACK[0x374]) = v23;
  LODWORD(STACK[0x2E8]) = 2 * (v32 ^ v23);
  v45 = v44 ^ v5 ^ v28 ^ v34 ^ v36 ^ 0x1289836 ^ v14 & (2 * (v34 ^ v28 ^ v36));
  LODWORD(v23) = *(_DWORD *)(v13 - 196);
  *(_DWORD *)(v13 - 188) = 2 * v23;
  v46 = STACK[0x43C];
  v47 = LODWORD(STACK[0x43C]) ^ (LODWORD(STACK[0x464]) - ((2 * v23) & 0x2FD34290) + 124641343);
  LODWORD(STACK[0x2D0]) = v47;
  v48 = v40 ^ (((2 * (v14 & (2 * v40) ^ 0x129C838)) & 0x4A31B0A4) - (v14 & (2 * v40) ^ 0x129C838) - 655940564) ^ 0x886157BA ^ (v45 - ((2 * v45) & 0xB4DFBFE8) - 630202380);
  v49 = (v48 - ((2 * v48) & 0x136C9936) + 162942107) ^ v41;
  v50 = v46 ^ v31 ^ LODWORD(STACK[0x2FC]) ^ (v49 - 21822391 - ((2 * v49) & 0xFD660892));
  v51 = *(_QWORD *)(v13 - 240);
  v52 = *(_QWORD *)(v13 - 128);
  v53 = *(_QWORD *)(v52 + 8 * (0xFEF5414A % v51));
  v54 = *(_QWORD *)(v52
                  + 8
                  * (((((v53 ^ 0xC1BD8D4C5F764B29) + 0x46B646BB4E1DDE97) ^ ((v53 ^ 0x68872CA5103E39B5)
                                                                              - 0x107318ADFEAA53F5) ^ ((v53 ^ 0x980B90D87E7943ADLL) + 0x1F005B2F6F12D613))
                    + 0x49C5053A55B8645DLL)
                   % v51));
  LODWORD(STACK[0x2FC]) = (v14 & (2 * (v29 ^ v47))) - ((4 * (v29 ^ v47)) & 0x9A558048) + 1307494052;
  v55 = *(_QWORD *)(v52
                  + 8
                  * (((((v54 ^ 0x98A1254F551D8D0CLL) + 0x4A6AC2EBF9375FA3) ^ ((v54 ^ 0x76D30031DE780F8DLL)
                                                                              - 0x5BE7186A8DAD22DCLL) ^ ((v54 ^ 0xDF43144FBA54B3B0) + 0xD88F3EB167E611FLL))
                    + 0x1C05296AED146BB4)
                   % v51));
  v56 = *(_QWORD *)(v52
                  + 8
                  * (((((v55 ^ 0x88C0E52CCAC1AD06) - 0x4665F2A41EB3F187) ^ ((v55 ^ 0x3E8618C893EFCC8FLL)
                                                                              + 0xFDCF0BFB8626FF2) ^ ((v55 ^ 0x8777CCD5681F50B8) - 0x49D2DB5DBC6D0C39))
                    - 0x6BD9452B3357ECLL)
                   % v51));
  LODWORD(v56) = ((((v56 ^ 0x4B5702262957E5C2) + 0x20BD6DA7D3FC065) ^ ((v56 ^ 0x269C61CAE7C61154)
                                                                         + 0x6FC0B536B3AE34F3) ^ ((v56 ^ 0x5CFA52DDFFA0C5A7uLL)
                                                                                                  + 0x15A68621ABC8E002))
                - 0x786DE5CD4B133EADLL)
               % v51;
  LODWORD(STACK[0x228]) = v50;
  LODWORD(STACK[0x42C]) = v50 ^ 0x9C50038F;
  *(_DWORD *)(v13 - 144) = ((((v56 - ((2 * v56) & 0x3455BB80) - 1171595840) ^ 0xA11C7CEF) - 391357056) ^ (((v56 - ((2 * v56) & 0x3455BB80) - 1171595840) ^ 0xC8054866) - 2118817289) ^ (((v56 - ((2 * v56) & 0x3455BB80) - 1171595840) ^ 0xD333E949) - 1702639398))
                         - 367602339;
  LODWORD(v31) = *(_DWORD *)(v13 - 176);
  v57 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v13 - 120) + 8 * (int)v31) - 4);
  *(_QWORD *)(v13 - 136) = (v31 - 4809);
  *(_DWORD *)(v13 - 240) = v29;
  LODWORD(STACK[0x2A0]) = v14 & (2 * v29);
  return v57();
}

uint64_t sub_1001DD178(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = v4 - 1626393971 < a4;
  if (a4 < 0xDDB1D1AE != (v4 - 1626393971) < 0xDDB1D1AE)
    v6 = a4 < 0xDDB1D1AE;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 - 120) + 8 * ((12194 * !v6) ^ *(_DWORD *)(v5 - 176))) - 4))();
}

uint64_t sub_1001DF6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;

  LODWORD(STACK[0x26C]) ^= *(_DWORD *)(v42 - 220) ^ *(_DWORD *)(v42 - 192) ^ LODWORD(STACK[0x268]) ^ STACK[0x290] ^ *(_DWORD *)(v42 - 160) ^ STACK[0x278] ^ (LODWORD(STACK[0x258]) - 2 * LODWORD(STACK[0x25C])) ^ 0x1E7443FC;
  *(_DWORD *)(v42 - 160) = (((*(_DWORD *)(v42 - 204) ^ 0x3DC4EFBD) - 357059848) ^ ((*(_DWORD *)(v42 - 204) ^ 0xFEC64E96)
                                                                                 + 699732957) ^ ((*(_DWORD *)(v42 - 204) ^ 0xCCADBE51)
                                                                                               + 467591964))
                         - 2078462211;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v42 - 120) + 8 * (int)*(_QWORD *)(v42 - 136)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1001DF794()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  int v4;

  *(_DWORD *)(v3 - 144) = v2 < 0x5CF9712E;
  v4 = v0 + 509006349 < v2;
  if (*(_DWORD *)(v3 - 144) != (v0 + 509006349) < 0x5CF9712E)
    v4 = *(_DWORD *)(v3 - 144);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 - 120) + 8 * ((21 * (v4 ^ 1)) ^ v1)) - 12))();
}

uint64_t sub_1001E1D44(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  LODWORD(STACK[0x268]) = LODWORD(STACK[0x3A4]) ^ *(_DWORD *)(v3 - 196) ^ LODWORD(STACK[0x2D0]) ^ LODWORD(STACK[0x2A0]) ^ LODWORD(STACK[0x2FC]) ^ LODWORD(STACK[0x2F8]) ^ STACK[0x2F0] ^ LODWORD(STACK[0x2EC]) ^ LODWORD(STACK[0x374]) ^ STACK[0x2E8] & 0x6D3BF87E;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 - 120) + 8 * a3) - 8))();
}

uint64_t sub_1001E1FC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 - 120) + 8 * (((v6 == a6) * v7) ^ a3)) - 8))();
}

uint64_t sub_1001E20F8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);

  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x328]) ^ LODWORD(STACK[0x364]);
  v6 = *(_QWORD *)(v5 - 120);
  *(_DWORD *)(v5 - 160) = v2 - 4563;
  v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v6 + 8 * (v2 - 4563)) - 8);
  LODWORD(STACK[0x3A4]) = v2;
  *(_DWORD *)(v5 - 176) = v2 - 13066;
  *(_DWORD *)(v5 - 136) = v4;
  *(_QWORD *)(v5 - 144) = v3;
  return v7(0, a2, (v3 - 1), (v3 - 1537669606));
}

uint64_t sub_1001E21C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unint64_t v19;
  unsigned int v20;
  int v21;
  unint64_t v22;

  v12 = *(_QWORD *)(v11 - 144);
  v13 = *(unsigned __int8 *)(a7 + v12) * v9;
  v14 = v13 ^ v8;
  v15 = (unint64_t)(v14 + a8) >> 16;
  v16 = v14 + ((v12 + a1 + v14 + v15) >> *(_DWORD *)(v11 - 176));
  v17 = v12 + a1 + v15 + v16;
  v18 = v12 + v10;
  LODWORD(v15) = v12 + v10 + v15 + v16;
  v19 = (unint64_t)((v15 ^ v13) + a8 + (((v15 ^ v13) + a8) >> 16)) >> 8;
  v20 = v12 + a1 + (v15 ^ v13) + (((v15 ^ v13) + a8) >> 16) + v19;
  v21 = (v18 + (v15 ^ v13) + (((v15 ^ v13) + a8) >> 16) + v19) ^ v13;
  v22 = (v21 + a8);
  *(_DWORD *)(v11 - 136) ^= v17 ^ (v17 >> 2) & 0x2FFC3F77 ^ v20 ^ (v20 >> 2) & 0x2FFC3F77 ^ (v12
                                                                                           + a1
                                                                                           + v21
                                                                                           + (v22 >> 16)
                                                                                           + ((v22
                                                                                             + WORD1(v22)) >> 8)) ^ (((_DWORD)v12 + (_DWORD)a1 + v21 + (v22 >> 16) + ((v22 + WORD1(v22)) >> 8)) >> 2) & 0x2FFC3F77;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 - 120)
                                                      + 8 * ((30185 * (v12 + a1 == 15)) ^ *(_DWORD *)(v11 - 160)))
                                          - 8))(a1 + 1);
}

uint64_t sub_1001E2394(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  uint64_t (*v53)(_QWORD, _QWORD);

  v15 = LODWORD(STACK[0x300]) ^ LODWORD(STACK[0x360]) ^ LODWORD(STACK[0x30C]);
  v16 = *(_DWORD *)(v13 - 196) ^ LODWORD(STACK[0x3A8]) ^ v6;
  v17 = LODWORD(STACK[0x3E0]) ^ LODWORD(STACK[0x3D8]);
  v18 = v4 + a4;
  v19 = v4 + a3;
  v20 = HIWORD(v19);
  v21 = (v19 + HIWORD(v19)) >> 8;
  v22 = v18 + v20 + v21;
  v23 = v22 >> 10;
  v24 = (v22 - (v22 >> 10)) >> 3;
  v25 = v4 + v21 + v20 + v24;
  v26 = *(_QWORD *)(v13 - 144);
  v27 = v26 + v25 - v23 - v8;
  v28 = v25 + v11;
  v29 = (v28 - v23) >> 8;
  v30 = v25 + v29;
  v31 = (v28 + v29 - v23) >> 2;
  v32 = v26 + v30 - v31 - v23 - v14;
  v33 = v4
      + ((v30 + v10 + ((v30 + v10 - v31 - v23) >> 12) - v31 - v23) >> 5)
      + ((v30 + v10 - v31 - v23) >> 12)
      + v29
      + v24
      + v21
      + v20;
  v34 = v26 + v33 - v31 - v23 - v12;
  v35 = v26
      + v33
      - ((v33 + v9 - ((v33 + v9 - v31 - v23) >> 9) - v31 - v23) >> 4)
      - ((v33 + v9 - v31 - v23) >> 9)
      - v31
      - v23
      - v7;
  v36 = (v35 ^ 0xCB63B48D)
      + ((v35 ^ 0xCB63B48D) >> 12)
      - (((v35 ^ 0xCB63B48D) + ((v35 ^ 0xCB63B48D) >> 12)) >> 4);
  v37 = v36
      + 584225879
      - ((v36 + 584225879) >> 15)
      - ((v36 + 584225879 - ((v36 + 584225879) >> 15)) >> 8);
  v38 = v37 - 1821985441 + ((v37 - 1821985441) >> 9) + ((v37 - 1821985441 + ((v37 - 1821985441) >> 9)) >> 1);
  v39 = v38 + 112518238 + ((v38 + 112518238) >> 15) + ((v38 + 112518238 + ((v38 + 112518238) >> 15)) >> 5);
  v40 = ((v39 - 1055017364 + ((v39 - 1055017364) >> 12)) >> 2)
      + v39
      - 1055017364
      + ((v39 - 1055017364) >> 12)
      - 2 * ((v39 - 1055017364 + ((v39 - 1055017364) >> 12)) >> 2);
  v41 = *(_DWORD *)(v13 - 164) ^ LODWORD(STACK[0x438]) ^ LODWORD(STACK[0x42C]);
  v42 = (((2 * ((LODWORD(STACK[0x228]) >> 2) & 0x2FFC3F77 ^ 0xD143C40)) | 0xB8E284B0)
       - ((LODWORD(STACK[0x228]) >> 2) & 0x2FFC3F77 ^ 0xD143C40)
       + 596557224) ^ 0xF5714A4C;
  *(_DWORD *)(v13 - 204) = ((2 * v42) & 0x9F91E3B4) - v42 + 808914469;
  *(_QWORD *)(v13 - 160) = v27;
  *(_QWORD *)(v13 - 176) = v35;
  *(_DWORD *)(v13 - 196) = v38;
  v43 = v15 ^ v41 ^ (((v41 >> 2) & 0x2FFC3F77 ^ 0x7C00417)
                   - ((2 * ((v41 >> 2) & 0x2FFC3F77 ^ 0x7C00417)) & 0x54E030AA)
                   + 2054363357) ^ ((v35 ^ v27 ^ v38) >> 2) & 0x2FFC3F77;
  v44 = v43 ^ 0x257E0AA2;
  LODWORD(STACK[0x3D8]) = (v43 ^ 0x257E0AA2) & 0x20C4ED5D ^ v43 & 1;
  v45 = STACK[0x46C];
  v46 = *(_DWORD *)(v13 - 184) ^ LODWORD(STACK[0x46C]);
  *(_DWORD *)(v13 - 184) = v44 + 549776732;
  v47 = LODWORD(STACK[0x3A4]) + 1760;
  v48 = (((v46 >> 2) & 0x2FFC3F77 ^ 0x22DC2921)
       - 2 * (((v46 >> 2) & 0x2FFC3F77 ^ 0x22DC2921) & 0xB702626 ^ (v46 >> 2) & 2)
       - 881613148) ^ v46;
  v49 = LODWORD(STACK[0x43C]) ^ (LODWORD(STACK[0x464]) - (*(_DWORD *)(v13 - 188) & 0xAF075F48) + 1191702170);
  v50 = LODWORD(STACK[0x3A0]) ^ (v48 - ((2 * v48) & 0xF4A49FA8) + 2052214740) ^ (((v36 ^ v32 ^ v39) >> 2) ^ 0xA79E2225) & 0x15C22613 ^ 0x872ED064 ^ (((((v36 ^ v32 ^ v39) >> 2) ^ 0xA79E2225) & 0x2261824 | 0xBC1803D8) - ((((v36 ^ v32 ^ v39) >> 2) ^ 0xA79E2225) & 0x38180140 | 0x43E7FC27) + 1139276839);
  v51 = (v45 >> 2) & 0x2FFC3F77 ^ v45 ^ *(_DWORD *)(v13 - 200);
  LODWORD(v27) = ((v37 ^ v34 ^ v49 ^ v40) >> 2) & 0x2FFC3F77 ^ 0x9A66307F;
  LODWORD(v27) = LODWORD(STACK[0x47C]) ^ ((LODWORD(STACK[0x478]) ^ v49)
                                        - ((2 * (LODWORD(STACK[0x478]) ^ v49)) & 0xFDADC712)
                                        + 2128012169) ^ 0x3D9E0E23 ^ (((2 * v27) | 0xDBBD8552) - v27 - 1843315369);
  LODWORD(STACK[0x43C]) = v16 ^ v34 ^ v37 ^ v40 ^ (v27 - ((2 * v27) & 0x89E0BEFE) + 1156603775);
  LODWORD(STACK[0x438]) = v51 ^ v5 ^ v32 ^ v36 ^ v39 ^ (v50 + 242721211 + (~(2 * v50) | 0xE310BC8B)) ^ 0x55CB598A;
  LODWORD(STACK[0x3A4]) = LODWORD(STACK[0x2DC]) ^ 0x7326EFD5;
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x2A8]) ^ 0x10839BA2;
  *(_DWORD *)(v13 - 144) = LODWORD(STACK[0x340]) ^ 0xF7279D54;
  LODWORD(STACK[0x3A8]) = LODWORD(STACK[0x2E4]) ^ 0xF884436C;
  LODWORD(STACK[0x368]) = ~LODWORD(STACK[0x3D0]) & 2;
  LODWORD(STACK[0x374]) = STACK[0x410] & 5;
  v52 = STACK[0x330];
  LODWORD(STACK[0x364]) = STACK[0x330] & 0x1E ^ 0x1A;
  v53 = (uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v13 - 120) + 8 * v47) - 8);
  LODWORD(STACK[0x2D0]) = v47 ^ 0x27BF;
  LODWORD(STACK[0x360]) = v52 & 1;
  return v53(0, v17 ^ 0xD15FFA80);
}

uint64_t sub_1001E2978@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W4>, char a4@<W5>, char a5@<W6>, char a6@<W7>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  int v17;
  int v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  int v35;

  v23 = *((_DWORD *)*(&off_1015B46D0 + v14) + (a1 ^ 0x83u)) - 840330898;
  v24 = ((2 * (v23 ^ 0x323C99B4)) ^ 0xDA07524C) & (v23 ^ 0x323C99B4) ^ (2 * (v23 ^ 0x323C99B4)) & v17;
  v25 = (v23 ^ 0x9E3EB890) & (2 * (v23 & 0xDF3F3092)) ^ v23 & 0xDF3F3092;
  v26 = ((4 * (v24 ^ 0x2500A922)) ^ 0xB40EA498) & (v24 ^ 0x2500A922) ^ (4 * (v24 ^ 0x2500A922)) & (v17 - 2);
  v27 = (v26 ^ 0xA402A000) & (16 * ((v24 ^ 0xC8010000) & (4 * v25) ^ v25)) ^ (v24 ^ 0xC8010000) & (4 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x49010926)) ^ 0xD03A9260) & (v26 ^ 0x49010926) ^ (16 * (v26 ^ 0x49010926)) & (v17 - 6);
  v29 = ((v27 ^ v17 ^ (v28 ^ 0xC0028000) & (v27 << 8)) << 16) & 0x6D030000 ^ v27 ^ v17 ^ (v28 ^ 0xC0028000) & (v27 << 8) ^ (((v27 ^ v17 ^ (v28 ^ 0xC0028000) & (v27 << 8)) << 16) ^ 0x29260000) & (((v28 ^ 0x2D012906) << 8) & 0xED030000 ^ 0x6C020000 ^ (((v28 ^ 0x2D012906) << 8) ^ 0x3A90000) & (v28 ^ 0x2D012906));
  v30 = (v23 ^ (2 * v29) ^ 0x7DA356B8) & *(_DWORD *)(v21 - 144) ^ v12;
  v31 = v23 ^ (2 * (((v30 & v18 ^ 0x1E7868C7) + (v30 ^ 0x1061610) - ((v30 ^ 0x1061610) & v18)) ^ v29));
  v32 = (v31 & 0x2A2D323C ^ 0x280C1228 ^ (v31 ^ 0xA81E962A) & v13) >> LODWORD(STACK[0x374]) >> LODWORD(STACK[0x368]);
  v33 = ((v19 - (v15 ^ (v31 ^ 0xEE6F4A5) & STACK[0x3A8] | v19) + (v15 ^ (v31 ^ 0xEE6F4A5) & STACK[0x3A8] | 0xF52D4977)) ^ 0x518D09FF) << LODWORD(STACK[0x360]) << LODWORD(STACK[0x364]);
  v34 = 4
      * ((v20 ^ ((a1 ^ (2 * (a1 & STACK[0x3A4]))) << a4)) ^ 0x64 ^ (((((v16 & (2 * ((a1 ^ (2 * (a1 & LOBYTE(STACK[0x3A4])))) & LOBYTE(STACK[0x3E0]) ^ 0xCA))) - ((a1 ^ (2 * (a1 & LOBYTE(STACK[0x3A4])))) & LOBYTE(STACK[0x3E0]) ^ 0xCA) + 45) ^ 0xE7) >> a6) >> a5));
  *(_DWORD *)(v10 + v34) = a2 ^ ((v33 ^ v32)
                               + 2 * (v33 & v32)
                               - ((2 * ((v33 ^ v32) + 2 * (v33 & v32))) & 0xEB25E72E)
                               + 1972564887);
  v35 = *(_DWORD *)(v8 + 4 * (a1 ^ 0xC6u));
  *(_DWORD *)(v22 + v34) = *(_DWORD *)(v21 - 164) ^ v7 ^ v11 ^ (v35 + a7 - (v9 & (2 * v35)));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v21 - 120)
                                                     + 8 * (((a1 == 255) | (4 * (a1 == 255))) ^ a3))
                                         - 8))((a1 + 1));
}

uint64_t sub_1001E2C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int a85;
  int a86;
  int a87;
  int a88;
  int a89;
  int a90;
  int a91;
  uint64_t v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  char v158;
  char v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  char v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  char v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  int v225;
  char v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  int v248;
  int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  char v254;
  char v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  unsigned int v314;
  int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  int v328;
  unsigned int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  char v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  unsigned int v381;
  int v382;
  int v383;
  unsigned int v384;
  int v385;
  int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  int v395;
  unsigned int v396;
  int v397;
  int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  int v402;
  int v403;
  unsigned int v404;
  char v405;
  int v406;
  int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  unsigned int v428;
  int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  int v437;
  unsigned int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  int v447;
  unsigned int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  char v454;
  unsigned int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  int v461;
  int v462;
  int v463;
  unsigned int v464;
  int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  int v469;
  int v470;
  int v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  int v475;
  unsigned int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  unsigned int v493;
  int v494;
  int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  unsigned int v500;
  int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  int v507;
  unsigned int v508;
  unsigned int v509;
  int v510;
  unsigned int v511;
  unsigned int v512;
  int v513;
  int v514;
  unsigned int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  int v519;
  unsigned int v520;
  unsigned int v521;
  int v522;
  int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  char v527;
  unsigned int v528;
  int v529;
  int v530;
  unsigned int v531;
  int v532;
  int v533;
  unsigned int v534;
  unsigned int v535;
  int v536;
  unsigned int v537;
  int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  char v556;
  int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  unsigned int v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  int v571;
  unsigned int v572;
  int v573;
  unsigned int v574;
  int v575;
  int v576;
  unsigned int v577;
  unsigned int v578;
  int v579;
  unsigned int v580;
  unsigned int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  unsigned int v605;
  int v606;
  int v607;
  unsigned int v608;
  unsigned int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  unsigned int v616;
  unsigned int v617;
  unsigned int v618;
  int v619;
  unsigned int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  int v629;
  int v630;
  int v631;
  int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  int v643;
  unsigned int v644;
  int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  int v649;
  unsigned int v650;
  int v651;
  unsigned int v652;
  unsigned int v653;
  unsigned int v654;
  unsigned int v655;
  unsigned int v656;
  int v657;
  int v658;
  int v659;
  unsigned int v660;
  int v661;
  int v662;
  unsigned int v663;
  char v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  int v668;
  unsigned int v669;
  int v670;
  unsigned int v671;
  int v672;
  int v673;
  int v674;
  unsigned int v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  int v680;
  unsigned int v681;
  int v682;
  int v683;
  int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  unsigned int v689;
  unsigned int v690;
  unsigned int v691;
  int v692;
  unsigned int v693;
  unsigned int v694;
  unsigned int v695;
  unsigned int v696;
  unsigned int v697;
  unsigned int v698;
  int v699;
  unsigned int v700;
  unsigned int v701;
  int v702;
  unsigned int v703;
  unsigned int v704;
  int v705;
  int v706;
  int v707;
  unsigned int v708;
  uint64_t (*v709)(_QWORD);
  unsigned int v711;
  unsigned int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  int v717;
  char v718;
  unsigned int v719;
  int v720;
  unsigned int v721;
  int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  int v727;
  unsigned int v728;

  v92 = STACK[0x394];
  v93 = STACK[0x324];
  v94 = LODWORD(STACK[0x394]) ^ *(_DWORD *)(v91 - 208) ^ LODWORD(STACK[0x460]) ^ LODWORD(STACK[0x44C]) ^ *(_DWORD *)(v91 - 212) ^ LODWORD(STACK[0x324]) ^ *(_DWORD *)(v91 - 240) ^ *(_DWORD *)(v91 - 220) ^ LODWORD(STACK[0x384]) ^ LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x230]);
  v95 = ((v94 & 0x30A5241C ^ 0x68027C1D) + (v94 & 0x7088163) - 1) ^ 0xBA89D1F0;
  v96 = (((2 * v95) & 0xCD0343BE) - v95 - 1720836576) ^ 0x694113FD | ((v94 & 0xC8525A80 ^ 0x80104200 | 0x6AFA3D87)
                                                                    - (v94 & 0xC8525A80 ^ 0x80104200 | 0x9505C278)
                                                                    - 1794784648) ^ 0x62E87587;
  v97 = STACK[0x390];
  v98 = LODWORD(STACK[0x274]) ^ LODWORD(STACK[0x390]) ^ (v96 - ((2 * v96) & 0x6A7BD4A4) - 1254233518);
  v99 = ((v98 & 0x2000) + 1388052398) ^ (v98 & 0x2000 | 0xCEBC026E) ^ ((v98 & 0x2000 ^ 0xCF212EA9) + 1176163045);
  v100 = v99 - 1210288943;
  v101 = (v100 ^ 0xDD87BFA8) & (2 * (v100 & 0x7A001)) ^ v100 & 0x7A001;
  v102 = ((2 * (v100 ^ 0xDD89FFA8)) ^ 0xC6DCA292) & (v100 ^ 0xDD89FFA8) ^ (2 * (v100 ^ 0xDD89FFA8)) & 0x636E5148;
  v103 = (v102 ^ 0xC0000) & (4 * v101) ^ v101;
  v104 = ((4 * (v102 ^ 0x21225149)) ^ 0x8DB94524) & (v102 ^ 0x21225149) ^ (4 * (v102 ^ 0x21225149)) & 0x636E5148;
  v105 = (v104 ^ 0x1284100) & (16 * v103) ^ v103;
  v106 = ((16 * (v104 ^ 0x62461049)) ^ 0x36E51490) & (v104 ^ 0x62461049) ^ (16 * (v104 ^ 0x62461049)) & 0x636E5140;
  v107 = v105 ^ 0x636E5149 ^ (v106 ^ 0x22641000) & (v105 << 8);
  v108 = (v99 - 1210288943) ^ (2
                             * ((v107 << 16) & 0x636E0000 ^ v107 ^ ((v107 << 16) ^ 0x51490000) & (((v106 ^ 0x410A4149) << 8) & 0x636E0000 ^ 0x12E0000 ^ (((v106 ^ 0x410A4149) << 8) ^ 0x6E510000) & (v106 ^ 0x410A4149))));
  v109 = v108 & 0x3A09A2A6 ^ 0x1A020 ^ (v108 ^ 0xFAAB0C73) & (LODWORD(STACK[0x450]) ^ 0x5CF11CEB);
  v110 = STACK[0x42C];
  v111 = LODWORD(STACK[0x42C]) ^ *(_DWORD *)(v91 - 192) ^ *(_DWORD *)(v91 - 204) ^ *(_QWORD *)(v91 - 160) ^ *(_DWORD *)(v91 - 136) ^ *(_QWORD *)(v91 - 176) ^ *(_DWORD *)(v91 - 196) ^ (*(_DWORD *)(v91 - 184) - 2 * LODWORD(STACK[0x3D8]));
  v722 = v111;
  v112 = (v98 & 0xFFFFDFFF ^ 0x2EC913C7) - ((2 * (v98 & 0xFFFFDFFF ^ 0x2EC913C7)) & 0x9CAE0292) - 833158839;
  v113 = -900453011 - v99;
  if (((2 * v109) | 0x8BD4320) - v109 == 1119134498)
    v113 = v100;
  v114 = (((LODWORD(STACK[0x450]) ^ 0xFADF2A85) + 86037883) ^ ((LODWORD(STACK[0x450]) ^ 0xA6A48143) + 1499168445) ^ ((LODWORD(STACK[0x450]) ^ 0x3A83158B) - 981669259))
       + 1694545947
       + v113;
  v115 = (v114 ^ 0xBEDF301B) & (2 * (v114 & 0xC0DFB513)) ^ v114 & 0xC0DFB513;
  v116 = ((2 * (v114 ^ 0x3FF93A3B)) ^ 0xFE4D1E50) & (v114 ^ 0x3FF93A3B) ^ (2 * (v114 ^ 0x3FF93A3B)) & 0xFF268F28;
  v117 = (v116 ^ 0x6040C00) & (4 * v115) ^ v115;
  v118 = ((4 * (v116 ^ 0x1228128)) ^ 0xFC9A3CA0) & (v116 ^ 0x1228128) ^ (4 * (v116 ^ 0x1228128)) & 0xFF268F28;
  v119 = (v118 ^ 0xFC020C20) & (16 * v117) ^ v117;
  v120 = ((16 * (v118 ^ 0x3248308)) ^ 0xF268F280) & (v118 ^ 0x3248308) ^ (16 * (v118 ^ 0x3248308)) & 0xFF268F20;
  v121 = v119 ^ 0xFF268F28 ^ (v120 ^ 0xF2208200) & (v119 << 8);
  v122 = (v121 << 16) & 0x7F260000 ^ v121 ^ ((v121 << 16) ^ 0xF280000) & (((v120 ^ 0xD060D28) << 8) & 0x7F260000 ^ 0x59200000 ^ (((v120 ^ 0xD060D28) << 8) ^ 0x268F0000) & (v120 ^ 0xD060D28));
  v123 = STACK[0x398];
  v124 = STACK[0x3C8];
  v125 = STACK[0x45C];
  v126 = LODWORD(STACK[0x3C8]) ^ LODWORD(STACK[0x398]) ^ LODWORD(STACK[0x45C]) ^ LODWORD(STACK[0x458]) ^ *(_DWORD *)(v91 - 256) ^ LODWORD(STACK[0x448]) ^ LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x474]) ^ LODWORD(STACK[0x428]) ^ *(_DWORD *)(v91 - 252) ^ LODWORD(STACK[0x388]) ^ LODWORD(STACK[0x214]) ^ LODWORD(STACK[0x270]) ^ LODWORD(STACK[0x28C]) ^ LODWORD(STACK[0x418]);
  v127 = LODWORD(STACK[0x46C]) ^ LODWORD(STACK[0x468]) ^ LODWORD(STACK[0x454]) ^ LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x264]) ^ v112 ^ v114 ^ (2 * v122);
  v128 = LODWORD(STACK[0x268]) ^ 0xD4BD0FA2;
  *(_DWORD *)(v91 - 228) = v128;
  v129 = v127 ^ v128 ^ v110;
  v130 = STACK[0x2DC];
  v131 = v129 & 0x9180F7B4 ^ 0x8180E534 ^ (v129 ^ 0x78239EF7) & (LODWORD(STACK[0x2DC]) ^ 0x62A61861);
  v132 = (2 * (v131 - ((2 * v131) & 0x3380CF70)) - 1283403920) ^ v129;
  v133 = STACK[0x2A8];
  v134 = v132 & 0x6C05ADF5 ^ 0x640004A4 ^ (v132 ^ 0xE8A3B687) & (LODWORD(STACK[0x2A8]) ^ 0x7C863657);
  v135 = STACK[0x2A0];
  v136 = LODWORD(STACK[0x2A0]) ^ 0xBFEC86AC;
  v137 = (v132 ^ 0x1D07AE45) & v136 ^ STACK[0x2A0] & 0xF5A418C2;
  v138 = STACK[0x340];
  v139 = STACK[0x340] & 0x58857A90 ^ 0x8847890;
  v140 = LODWORD(STACK[0x2D0]) ^ 0x3E39;
  LODWORD(STACK[0x464]) = v140;
  v141 = (v140 - 1549485408) ^ v111;
  LODWORD(STACK[0x440]) = v141;
  v720 = LODWORD(STACK[0x43C]) ^ 0x1683D583;
  v142 = v126 ^ LODWORD(STACK[0x26C]) ^ LODWORD(STACK[0x438]) ^ v720 ^ v141;
  v143 = *(_DWORD *)(v91 - 144);
  v144 = (2 * (((2 * (v139 ^ (v142 ^ 0x50438A03) & v143)) & 0x7C5DAEE2) - (v139 ^ (v142 ^ 0x50438A03) & v143)) + 60969244) ^ v142;
  v145 = (v144 ^ 0x4638A6AE) & STACK[0x3A8] ^ STACK[0x2E4] & 0xFC5EC621;
  v146 = STACK[0x330];
  v147 = STACK[0x330] & 0x1C ^ 0x18;
  *(_DWORD *)(v91 - 136) = v147;
  v148 = v146 & 3 ^ 2;
  LODWORD(STACK[0x328]) = v148;
  v149 = (((v137 & 0x75A47667 ^ 0x41A07627) + (v137 ^ 0xB4040040) - ((v137 ^ 0xB4040040) & 0x75A47667)) ^ 0x740476A7) << v148 << v147;
  v150 = *(_DWORD *)(v91 - 232) & 5 ^ 1;
  v151 = *(_DWORD *)(v91 - 216) & 2;
  LODWORD(STACK[0x29C]) = (((v134 - ((2 * v134) & 0xF7F37EAC) + 2079965014) ^ 0x77F81F77) >> v150 >> v151) ^ 0x665578FC ^ (v149 - ((2 * v149) & 0xCCAAF1F8) + 1716877564);
  v152 = STACK[0x2E0];
  v153 = v144 & 0xBCEDCE69 ^ 0x3CE50660 ^ (v144 ^ 0xBA66608F) & (LODWORD(STACK[0x2E0]) ^ 0x12D174FB);
  v154 = STACK[0x444];
  v155 = STACK[0x444] & 6;
  LODWORD(STACK[0x254]) = v155;
  v156 = (((v145 & 0x7826A2DA ^ 0x682022DA) + (v145 ^ 0x905E8421) - ((v145 ^ 0x905E8421) & 0x7826A2DA)) ^ 0x107C64DB) << v155;
  v157 = (v154 & 1) == 0;
  LODWORD(STACK[0x250]) = v157;
  v158 = STACK[0x374];
  v159 = STACK[0x368];
  LODWORD(STACK[0x290]) = (v156 << v157) | (((((2 * v153) | 0x330B3E4A) - v153 - 428187429) ^ 0x9D04D94C) >> v158 >> v159);
  v160 = (v130 ^ 0xF326EFD5) & (v124 ^ 0x1BE5F2E4) ^ v130 & 0x81F2D91D;
  v161 = v124 ^ (2 * ((v160 & 0x73C04384 ^ 0x72804280) + (v160 ^ 0x140190C) - ((v160 ^ 0x140190C) & 0x73C04384)));
  v162 = STACK[0x3E0];
  v163 = STACK[0x3E0] & (v161 ^ 0x257E01E5) ^ v133 & 0x582C0D26;
  v164 = STACK[0x410] & 4;
  LODWORD(STACK[0x3D8]) = v164;
  v165 = STACK[0x3D0] & 3 ^ 2;
  LODWORD(STACK[0x3C8]) = v165;
  v718 = v146 & 0x15 ^ 0x10;
  v166 = STACK[0x434];
  v717 = ~LODWORD(STACK[0x434]) & 0xA;
  v167 = ((((v163 & 0x13382A8B ^ 0x318228B) + (v163 & 0xECC7D574 ^ 0x8040101) - 1) ^ 0x1B1C2AA9) >> v164 >> v165) | ((v135 & 0xB49D1DE6 ^ 0xB48C04A4 ^ v136 & (v161 ^ 0xC9CF1125)) << v718 << v717);
  v168 = v138 & 0x535DC9E6 ^ 0x415D0020 ^ v143 & (v123 ^ 0xC94AE21F);
  v169 = STACK[0x404];
  v170 = (v167 - 383395958 + (~(2 * v167) | 0x2DB450EB) + 1) ^ LODWORD(STACK[0x404]);
  v171 = STACK[0x3F0];
  LODWORD(STACK[0x3A0]) = (LODWORD(STACK[0x3F0]) ^ -LODWORD(STACK[0x3F0]) ^ (v170 - (v170 ^ LODWORD(STACK[0x3F0]))))
                        + v170;
  v172 = (2 * (((2 * v168) | 0x2D9E4FFC) - v168) + 1382133764) ^ v123;
  v173 = v135 & 0xC76D7450 ^ 0xC4453440 ^ v136 & (v172 ^ 0xD455029D);
  v174 = v172 & 0x8ABBB23 ^ 0x802823 ^ (v152 ^ 0xA69701B1) & (v172 ^ 0x133876CD);
  v175 = ((((2 * v173) | 0x6F13872E) - v173 - 931775383) ^ 0x74A0F3D7) << LODWORD(STACK[0x248]);
  v176 = STACK[0x358];
  v177 = v175 & 0x56909135 | ((((((2 * v174) | 0xCAAAD72A) - v174 - 1700096917) ^ 0x65FD71B7) >> v176) ^ 0xA96F6ECA) & ~v175;
  v178 = (v177 ^ 0xA96F6ECA) - 2 * ((v177 ^ 0xA96F6ECA) & 0x6925D78B ^ v177 & 1);
  v179 = STACK[0x39C] & 0xC0E08FB5 ^ 0xC0E00600 ^ (v130 ^ 0x33C66060) & (LODWORD(STACK[0x39C]) ^ 0x42C92D74);
  v180 = (2 * (v179 - ((2 * v179) & 0x61F9A3E4)) + 1643750372) ^ v93;
  v181 = (v133 ^ 0x7026F171) & (v180 ^ 0x2FEFA95C);
  v182 = v180 & 0x60A56AD3;
  v183 = v135 & 0x50507198 ^ 0x400110 ^ v136 & (v180 ^ 0x7FBFD8C4);
  v184 = v151;
  LODWORD(STACK[0x2E8]) = v151;
  LODWORD(STACK[0x2EC]) = v150;
  v185 = ((((v182 ^ 0x20A52850 ^ v181) >> v151 >> v150) ^ 0xCA53161C) - 2053972963) ^ ((((v182 ^ 0x20A52850 ^ v181) >> v151 >> v150) ^ 0x55A7874A) + 442912075) ^ ((((v182 ^ 0x20A52850 ^ v181) >> v151 >> v150) ^ 0x9FF49156) - 801809577);
  v186 = v146 & 7 ^ 2;
  LODWORD(STACK[0x324]) = v186;
  v187 = ~v146 & 0x18;
  LODWORD(STACK[0x318]) = v187;
  v188 = v185 + ((((v183 | 0x185E3FC1) - (v183 | 0xE7A1C03E) - 408829890) ^ 0x85E3E59) << v187 << v186) - 1338100225;
  v189 = (v130 ^ 0xF326EFD5) & (v92 ^ 0x69049F44) ^ v130 & 0xF313B4BD;
  v190 = (2 * ((v189 & 0x76D8AFD9 ^ 0x74C80BC0) + (v189 & 0x9275026 ^ 0x1031021)) - 2) ^ v92;
  LODWORD(STACK[0x410]) = (v188 ^ LODWORD(STACK[0x40C])) - ((2 * (v188 ^ LODWORD(STACK[0x40C]))) & 0x4459D6B8);
  v191 = v154 & 5 ^ 1;
  LODWORD(STACK[0x244]) = v191;
  LODWORD(STACK[0x240]) = v154 & 2;
  v192 = ((v190 & 0xF2881ED5 ^ 0x92801411 ^ (v133 ^ 0xE20B8577) & (v190 ^ 0x97845513)) >> v159 >> v158) ^ ((v135 & 0xF98B6621 ^ 0xB9880620 ^ v136 & (v190 ^ 0x6E0F3332)) << v191 << (v154 & 2));
  v193 = v143;
  LODWORD(STACK[0x39C]) = v169 ^ v171 ^ (v178 - 383395958);
  LODWORD(STACK[0x398]) = v169 ^ v171 ^ (v192 - ((2 * v192) & 0xD24BAF14) - 383395958);
  v194 = (2
        * (((v143 & (v125 ^ 0xFCA72418) ^ v138 & 0xF4DF8B27) & 0x332B6779 ^ 0x33236758)
         + ((v143 & (v125 ^ 0xFCA72418) ^ v138 & 0xF4DF8B27) & 0x4CD49886 ^ 0x900001))
        - 2) ^ v125;
  v195 = ~v166 & 2;
  LODWORD(STACK[0x2F8]) = v195;
  v196 = v146 & 0x1D ^ 0x18;
  LODWORD(STACK[0x2F0]) = v196;
  *(_DWORD *)(v91 - 160) = ((v135 & 0x77F0B0ED ^ 0x37E080AC ^ v136 & (v194 ^ 0xF0E1C36A)) << v196 << v195) ^ ((v133 & 0x9DEE9ED ^ 0x8289A0 ^ v162 & (v194 ^ 0x8ECF9A6A)) >> LODWORD(STACK[0x260]));
  v197 = v97 ^ (2 * ((v130 ^ 0x1E8D99B7) & (v97 ^ 0x878AF3F) ^ v97 & 0x6DAB7662));
  v198 = STACK[0x2E4];
  v199 = STACK[0x3A8];
  v200 = STACK[0x2E4] & 0x2BEA2F58 ^ 0x28800348 ^ (v197 ^ 0x33C2CC23) & STACK[0x3A8];
  v201 = ~v146 & 0x1A;
  LODWORD(STACK[0x310]) = v201;
  LODWORD(STACK[0x30C]) = v146 & 5;
  *(_DWORD *)(v91 - 164) = (((((((v162 & (v197 ^ 0xB3A11BE7) ^ v133 & 0xAB89F89C) & 0x494B6639 ^ 0x41420631)
                              + ((v162 & (v197 ^ 0xB3A11BE7) ^ v133 & 0xAB89F89C) & 0xB6B499C6 ^ 0x82800801)
                              - 1) ^ 0xC34396B1) >> v176) ^ 0xBAC5CC08) & ~(v200 << v201 << (v146 & 5)) | (v200 << v201 << (v146 & 5)) & 0x453A33F7) ^ 0xBAC5CC08;
  v202 = v138;
  v203 = v138 ^ 0x77279D54;
  v204 = LODWORD(STACK[0x460]) ^ (2 * ((v138 ^ 0x77279D54) & (LODWORD(STACK[0x460]) ^ 0x6F19947C) ^ v138 & 0x67613B43));
  v205 = v162;
  v206 = v133 & 0x6B22B1C ^ 0x2B02A04 ^ v162 & (v204 ^ 0xC088B6A3);
  LOBYTE(v162) = STACK[0x3D8];
  LOBYTE(v195) = STACK[0x3C8];
  *(_DWORD *)(v91 - 176) = (((((2 * v206) | 0x3285CFEA) - v206 - 423815157) ^ 0x1B70C6F1) >> v162 >> v195) | (((((v199 & (v204 ^ 0x5F77841B) ^ v198 & 0x994D19A4) & 0x3D7F792D ^ 0x307B302D) + ((v199 & (v204 ^ 0x5F77841B) ^ v198 & 0x994D19A4) & 0xC28086D2 ^ 0xC0008213) - 1) ^ 0x687FB31B) << LODWORD(STACK[0x254]) << LODWORD(STACK[0x250]));
  v208 = *(_DWORD *)(v91 - 212);
  v207 = *(_DWORD *)(v91 - 208);
  v209 = v130 & 0xB022171E ^ 0x1002110E ^ (v130 ^ 0xF326EFD5) & (v208 ^ 0xB85AB821);
  v210 = v202 & 0xF9CFCADB ^ 0xB040CAD0 ^ v193 & (v207 ^ 0x7F0C16ED);
  v211 = (2 * (((2 * v209) & 0x4C2DAF86) - v209) + 869421176) ^ v208;
  v212 = (((v136 & (v211 ^ 0xC6127699) ^ v135 & 0xBDF8A5EA) & 0xF245B024 ^ 0x52453021)
        + ((v136 & (v211 ^ 0xC6127699) ^ v135 & 0xBDF8A5EA) & 0xDBA4FDB)
        - 1) ^ 0xEFADB488;
  v213 = v133 & 0x5ECBA5B7 ^ 0x4E4B0527 ^ v205 & (v211 ^ 0x252176C4);
  v214 = v154 & 3 ^ 1;
  v215 = *(_DWORD *)(v91 - 224) & 4;
  LODWORD(STACK[0x25C]) = v214;
  LOBYTE(v205) = v215;
  LODWORD(STACK[0x24C]) = v215;
  LODWORD(STACK[0x394]) = ((v212 << v214 << v215) & 0x70DFE8D2 | (((((v213 | 0x1A11473A)
                                                                   - (v213 | 0xE5EEB8C5)
                                                                   - 437339963) ^ 0x44D9C3BF) >> v150 >> v184) ^ 0x8F20172D) & ~(v212 << v214 << v215)) ^ 0x8F20172D;
  v216 = (2 * (v210 - ((2 * v210) & 0x39BE5BC6)) - 1178707002) ^ v207;
  v217 = v216 & 0xD0865C3C ^ 0x80025024 ^ (v152 ^ 0x7EBAE6AE) & (v216 ^ 0xBDF302F0);
  v218 = (LODWORD(STACK[0x3D4]) ^ 0x91F9E0C5) & (v130 ^ 0xF326EFD5);
  LODWORD(STACK[0x21C]) = v130 ^ 0xF326EFD5;
  LOBYTE(v207) = v195;
  v219 = (((v217 | 0x3E3F0BCF) - (v217 | 0xC1C0F430) - 1044319184) ^ 0x2EBF5BDB) >> v195 >> v162;
  v220 = v146 & 9 ^ 8;
  LODWORD(STACK[0x2FC]) = v220;
  v221 = v146 & 0x16 ^ 0x12;
  LODWORD(STACK[0x300]) = v221;
  LODWORD(STACK[0x390]) = (((((v136 & (v216 ^ 0xF0609619) ^ v135 & 0x4D9394E9) & 0xAB79EC4F ^ 0xAB796C47)
                           + (v136 & (v216 ^ 0xF0609619) ^ v135 & 0x4D9394E9 ^ 0x44028008)
                           - ((v136 & (v216 ^ 0xF0609619) ^ v135 & 0x4D9394E9 ^ 0x44028008) & 0xAB79EC4F)) ^ 0xE2FBE8EF) << v221 << v220) | v219;
  v222 = (2
        * ((v130 & 0x9A4A24A9 ^ 0x820A2000 ^ v218 | 0x310921F) - (v130 & 0x9A4A24A9 ^ 0x820A2000 ^ v218 | 0x7CEF6DE0))
        - 102835264) ^ LODWORD(STACK[0x288]);
  LODWORD(STACK[0x258]) = v152 ^ 0xAE3CBA92;
  v223 = v152 & 0x5DDF985 ^ 0x449D801 ^ (v222 ^ 0x563B72BF) & (v152 ^ 0xAE3CBA92);
  v224 = *(_DWORD *)(v91 - 232) & 3 ^ 1;
  v225 = *(_DWORD *)(v91 - 216) & 4;
  v226 = *(_BYTE *)(v91 - 216) & 4;
  LODWORD(STACK[0x3D0]) = v225;
  v227 = (((v223 | 0x2B6582E7) - (v223 | 0xD49A7D18) - 728072936) ^ 0x2B30E266) >> v225 >> v224;
  LODWORD(STACK[0x3D4]) = v224;
  v228 = v198 & 0x7395086 ^ 0x6100080 ^ (v222 ^ 0x54DFDBBC) & v199;
  *(_DWORD *)(v91 - 184) = (((v228 - ((2 * v228) & 0xEB8D2BB8) + 1975948764) ^ 0x73D6D558) << v214 << v205)
                         - 602973534
                         + (((v227 ^ 0xE5E0D0FA) - 971999832) ^ ((v227 ^ 0xA1784B7F) - 2104955357) ^ ((v227 ^ 0x44989B85) + 1734885081));
  v229 = v202 & 0x58B78129 ^ (LODWORD(STACK[0x38C]) ^ 0xBB7167CB) & v193 ^ 0x10818120;
  v230 = (2 * ((v229 | 0x3773A7CC) - (v229 | 0x488C5833)) - 1860652954) ^ LODWORD(STACK[0x28C]);
  v231 = v135 & 0x7DFDEFEC ^ 0x3DEC86AC ^ (v230 ^ 0xCDC6B0F0) & v136;
  v232 = v230 & 0x64E6BBDD ^ 0x40A40859 ^ (v230 ^ 0xB03B5F1C) & (v152 ^ 0xCADA014F);
  v233 = v231 << (v146 & 5) << (~(_BYTE)v146 & 0x1A);
  *(_DWORD *)(v91 - 188) = (v233 - ((2 * v233) & 0x15BB89F4) - 1965177606) ^ (((v232
                                                                              - 1736588335
                                                                              - ((2 * v232) & 0x30FB87A2)) ^ 0xF8FBD094) >> v224 >> v226) ^ 0x8ADDC4FA;
  v234 = *(_DWORD *)(v91 - 240) ^ (2 * ((LODWORD(STACK[0x284]) ^ 0x444E9643) & v203 ^ v202 & 0x1B81191C));
  v235 = v234 & 0x39F8C0CF ^ 0x2138C084 ^ (v234 ^ 0x4F589728) & (v152 ^ 0x97C47A5D);
  v236 = v146 & 0xE ^ 0xA;
  v237 = v146 & 0x11 ^ 0x10;
  LODWORD(STACK[0x284]) = v237;
  v238 = (v198 & 0x3E1E752A ^ 0x38044128 ^ (v234 ^ 0x7146E202) & v199) << v237 << v236;
  LODWORD(STACK[0x278]) = v236;
  *(_DWORD *)(v91 - 192) = (v238 & 0xE25ADC88 | ((((((2 * v235) | 0xECD4FB4A) - v235 - 1986690469) ^ 0x5E0A3D29) >> LODWORD(STACK[0x358])) ^ 0x1DA52377) & ~v238) ^ 0x1DA52377;
  v239 = STACK[0x3AC] & 0x7E828489 ^ 0x7C020481 ^ (LODWORD(STACK[0x3AC]) ^ 0xF6D28229) & (v202 ^ 0x89A519DD);
  v240 = (2 * (v239 - ((2 * v239) & 0x222BD46)) - 2111652538) ^ LODWORD(STACK[0x384]);
  v241 = v199;
  v242 = v198 & 0x3D9023BE ^ 0x3880032C ^ (v240 ^ 0x9747F559) & v199;
  v243 = v240 & 0x5D7A2138 ^ 0x4A2010 ^ (v240 ^ 0xAAD7D6E7) & (v152 ^ 0xF3469BAA);
  LOBYTE(v205) = STACK[0x250];
  LOBYTE(v154) = STACK[0x254];
  LODWORD(STACK[0x38C]) = (((((2 * v243) | 0x80DE90DE) - v243 - 1081034863) ^ 0x4877685F) >> v207 >> v162)
                        + (v242 << v205 << v154);
  v244 = v202;
  v245 = STACK[0x448] & 0x888D4C48 ^ 0xAF32F327 ^ (v202 ^ 0x7FAAD11C) & (LODWORD(STACK[0x448]) ^ 0xE48571D4);
  v246 = (2 * ((v245 | 0x1B25385) - (v245 | 0x7E4DAC7A)) - 56928012) ^ LODWORD(STACK[0x448]);
  v247 = v198 & 0xE0F6E80E ^ 0x8052C802 ^ v241 & (v246 ^ 0x5878581E);
  v248 = v133;
  v249 = STACK[0x3E0];
  LOBYTE(v193) = STACK[0x350];
  LOBYTE(v202) = STACK[0x348];
  *(_DWORD *)(v91 - 196) = ((v133 & 0x60CA2341 ^ 0x820300 ^ STACK[0x3E0] & (v246 ^ 0xD8449351)) >> v193 >> v202) ^ (((((2 * v247) & 0x62918136) - v247 + 1320632164) ^ 0x2E61B76A) << v205 << v154);
  v250 = STACK[0x470] & 0x5BEC5CBC ^ 0x36844A0 ^ (v244 ^ 0xACCBC1E8) & (LODWORD(STACK[0x470]) ^ 0xE48571D4);
  v251 = (2 * (((2 * v250) | 0x11FA79CE) - v250) + 1845855794) ^ LODWORD(STACK[0x470]);
  v252 = v133 & 0x53F71EFC ^ 0x11930884 ^ v249 & (v251 ^ 0xA1503E8E);
  v253 = v198 & 0x6BAA8C56 ^ 0x8A00850 ^ v241 & (v251 ^ 0x990DAC24);
  v254 = STACK[0x368];
  v255 = STACK[0x374];
  *(_DWORD *)(v91 - 200) = ((((v252 | 0xB546068E) - (v252 | 0x4AB9F971) + 1253702001) ^ 0xB45614AA) >> v254 >> v255) | (((v253 - ((2 * v253) & 0x4F92C5C6) - 1479974173) ^ 0xC7E96AF7) << (v146 & 0xE ^ 0xA) << (v146 & 0x11 ^ 0x10));
  v256 = v130 & 0xA3D13A8 ^ 0x2200320 ^ (v130 ^ 0xF326EFD5) & (LODWORD(STACK[0x3C4]) ^ 0x588D69A2);
  v257 = (2 * (((2 * v256) & 0xDCE0A4) - v256) + 2133008218) ^ LODWORD(STACK[0x388]);
  v258 = (((v136 & (v257 ^ 0x7803BD85) ^ v135 & 0xBEFFBD9F) & 0x98B5E0F6 ^ 0x9821C0E2)
        + (v136 & (v257 ^ 0x7803BD85) ^ v135 & 0xBEFFBD9F ^ 0x249E2D15)
        - ((v136 & (v257 ^ 0x7803BD85) ^ v135 & 0xBEFFBD9F ^ 0x249E2D15) & 0x98B5E0F6)) ^ 0x2C7496F;
  v259 = v257 & 0x25ADD7BB ^ 0x16CA70F2 ^ (v257 ^ 0xC6FC001A) & (v152 ^ 0x8B916D29);
  v260 = (*(_DWORD *)(v91 - 232) & 1) == 0;
  v261 = ((((2 * v259) & 0x84FE06F4) - v259 - 1115620219) ^ 0xAFE68C6D) >> ((*(_DWORD *)(v91 - 232) & 1) == 0) >> (*(_BYTE *)(v91 - 216) & 6);
  v262 = *(_DWORD *)(v91 - 216) & 6;
  v263 = v146 & 0x13 ^ 0x12;
  LODWORD(STACK[0x28C]) = v263;
  v264 = v146 & 0xC ^ 8;
  LODWORD(STACK[0x288]) = v264;
  *(_DWORD *)(v91 - 204) = (((v258 << v264 << v263) - ((2 * (v258 << v264 << v263)) & 0x38BE94A) + 298185893) ^ v261 ^ 0xD1C5F4A5) & 0x1D01FEA7 | (((v258 << v264 << v263) - ((2 * (v258 << v264 << v263)) & 0xA38BE94A) - 775555931) ^ v261 ^ 0xD1C5F4A5) & 0xE2FE0158;
  v265 = (v130 ^ 0x87965F92) & (LODWORD(STACK[0x44C]) ^ 0xBAB0FB62) ^ STACK[0x44C] & 0x74B0B047;
  v266 = (2 * ((v265 & 0x7B52D17D ^ 0x7B524178) + (v265 & 0x4AD2E82 ^ 0x4800003)) - 2) ^ LODWORD(STACK[0x44C]);
  v267 = ((((v266 ^ 0xA83673AF) & v241 ^ v198 & 0x8C436ABD) & 0x8004A943 ^ 0x8004A942)
        + (((v266 ^ 0xA83673AF) & v241 ^ v198 & 0x8C436ABD) & 0x7FFB56BC ^ 0x24085)
        - 1) ^ 0x806ABEA;
  v268 = v266 & 0x9DD71C88 ^ 0x4551800 ^ (v133 ^ 0x8D54872A) & (v266 ^ 0x24751912);
  v269 = *(_DWORD *)(v91 - 256);
  v270 = v203;
  LODWORD(STACK[0x234]) = v203;
  LOBYTE(v178) = STACK[0x25C];
  LOBYTE(v264) = STACK[0x24C];
  *(_DWORD *)(v91 - 208) = (v268 >> v202 >> v193) ^ (v267 << v178 << v264);
  v271 = v269 ^ (2 * (v203 & (v269 ^ 0x3141AE35) ^ v244 & 0xBF15557));
  v272 = v135 & 0x67D888A ^ 0x4748080 ^ v136 & (v271 ^ 0xBA8F5940);
  v273 = v248 & 0xE7603D50 ^ 0x80602D00 ^ v249 & (v271 ^ 0x5B92EC9A);
  LODWORD(STACK[0x388]) = ((((v273 | 0x23A1C2EA) - (v273 | 0xDC5E3D15) - 597803755) ^ 0xA3C1F6EA) >> v193 >> v202) ^ (((((2 * v272) & 0x3E1861E8) - v272 + 1626590987) ^ 0x62EBCF03) << LODWORD(STACK[0x248]));
  v274 = (v130 ^ 0xDAC10015) & (LODWORD(STACK[0x458]) ^ 0xBAB0FB62) ^ STACK[0x458] & 0x29E7EFC0;
  v275 = LODWORD(STACK[0x458]) ^ (2
                                * ((v274 & 0x193220AC ^ 0x1010202C)
                                 + (v274 ^ 0x29A3C8C0)
                                 - ((v274 ^ 0x29A3C8C0) & 0x193220AC)));
  v276 = v198 & 0x68EDA78A ^ 0x68840308 ^ (v275 ^ 0xE23F5AB0) & v241;
  v277 = v275 & 0xA8C75E3A ^ 0x8431418 ^ (v248 ^ 0xB844C598) & (v275 ^ 0x8AD2FD3A);
  v278 = v262;
  *(_DWORD *)(v91 - 212) = ((v276 << v205 << v154) - ((2 * (v276 << v205 << v154)) & 0x41F56B82) + 553301441) ^ ((((v277 | 0xEEF0EB9) - (v277 | 0xF110F146) - 250547898) ^ 0x8E6E469B) >> v262 >> v260) ^ 0x20FAB5C1;
  v279 = v130;
  v280 = (a52 ^ 0xACBDFCDE) & (v130 ^ 0xBD22C1A) ^ a52 & 0xF8F4C3CF;
  v281 = (2 * ((v280 & 0x7F116F87 ^ 0x48000284) + (v280 & 0xEE9078 ^ 0x6E1079)) - 2) ^ LODWORD(STACK[0x26C]);
  v282 = v136;
  LODWORD(STACK[0x384]) = ((v135 & 0xD3B37B89 ^ 0x93A00288 ^ (v281 ^ 0xA0CF60CF) & v136) << LODWORD(STACK[0x318]) << LODWORD(STACK[0x324])) | ((v281 & 0xC243F73E ^ 0x42401306 ^ (v281 ^ 0x737C1B46) & (v152 ^ 0x6C7F4DAC)) >> v254 >> v255);
  v283 = *(_DWORD *)(v91 - 252);
  v284 = v283 & 0x5B6D5060 ^ 0x18200020 ^ (v130 ^ 0xA84BBFB5) & (v283 ^ 0x1DE22160);
  v285 = (2 * (((2 * v284) | 0x5D71B33E) - v284) - 1567732542) ^ v283;
  v286 = v135 & 0x905227D7 ^ 0x90400684 ^ v136 & (v285 ^ 0xD241B509);
  v287 = (v248 ^ 0x341EA430) & (v285 ^ 0x421392DE) ^ v285 & 0x249D3F92;
  v288 = (((v287 & 0xF3F4E177 ^ 0xD3F4E177) + (v287 ^ 0x20010800) - ((v287 ^ 0x20010800) & 0xF3F4E177)) ^ 0xD3E4FBE5) >> v262 >> v260;
  *(_DWORD *)(v91 - 216) = (v286 << v154 << v205)
                         + 2109861741
                         + (((v288 ^ 0xEA2D8F59) + 1746116556) ^ ((v288 ^ 0xAA2A0BCB) + 672406362) ^ ((v288 ^ 0x40078492) - 1036413951));
  v289 = *(_DWORD *)(v91 - 220) ^ (2
                                 * ((LODWORD(STACK[0x380]) ^ 0x5F8AA2FA) & (v244 ^ 0x3828F49F) ^ STACK[0x380] & 0x4F0F69CB));
  v290 = (v289 ^ 0x2651A8FB) & STACK[0x258] ^ v152 & 0x4D713C36;
  v291 = v198 & 0xD1E0B8E4 ^ 0x1408844 ^ (v289 ^ 0xBAC02C29) & v241;
  v292 = (((v290 & 0x454C600F ^ 0x10C6009) + (v290 & 0xBAB39FF0 ^ 0x11411) - 1) ^ 0xD3D4C0B) >> v260 >> v262;
  *(_DWORD *)(v91 - 220) = ((((v291 | 0x9DD79A28) - (v291 | 0x622865D7) + 1646814679) ^ 0x4C171208) << (v146 & 6 ^ 2) << (v146 & 0x19 ^ 0x18))
                         + 1724900990
                         + (((v292 ^ 0x4E07F950) - 684203822) ^ ((v292 ^ 0xE2A03B58) + 2073043674) ^ ((v292 ^ 0xACA7C208) + 899144586));
  v293 = STACK[0x268] & 0xF949D68 ^ 0x55AE1E7B ^ (LODWORD(STACK[0x268]) ^ 0x8B1C6F7C) & (v244 ^ 0xF8B3003C);
  v294 = (2 * (v293 - ((2 * v293) & 0x5938C108)) + 1496891656) ^ *(_DWORD *)(v91 - 228);
  v295 = (((((v294 ^ 0x433581C2) & v136 ^ v135 & 0xF8D80632) & 0xE7069C37 ^ 0x87069807)
         + ((v294 ^ 0x433581C2) & v136 ^ v135 & 0xF8D80632 ^ 0x68180430)
         - (((v294 ^ 0x433581C2) & v136 ^ v135 & 0xF8D80632 ^ 0x68180430) & 0xE7069C37)) ^ 0x37D69E27) << *(_DWORD *)(v91 - 136) << LODWORD(STACK[0x328]);
  *(_DWORD *)(v91 - 224) = ((((((v294 ^ 0xA7488CF8) & v249 ^ v248 & 0x1CA50B08) & 0xD125C258 ^ 0xD124C258)
                            + ((v294 ^ 0xA7488CF8) & v249 ^ v248 & 0x1CA50B08 ^ 0x10000)
                            - (((v294 ^ 0xA7488CF8) & v249 ^ v248 & 0x1CA50B08 ^ 0x10000) & 0xD125C258)) ^ 0xC1A5C958) >> LODWORD(STACK[0x3D4]) >> LODWORD(STACK[0x3D0])) ^ 0xDDF91AC9 ^ (v295 - ((2 * v295) & 0xBBF23592) - 570877239);
  v296 = LODWORD(STACK[0x270]) ^ (2 * ((LODWORD(STACK[0x37C]) ^ 0x7E215BD7) & v270 ^ v244 & 0xC1267F6));
  v297 = v296 & 0x599D9FB2 ^ 0x519888A2 ^ (v296 ^ 0xB188D989) & (v152 ^ 0xF7A12520);
  v298 = v135 & 0xE9E50283 ^ 0x29240202 ^ v136 & (v296 ^ 0x586DDB0A);
  v299 = a49 & 0x4F56DF6F ^ 0xF469867 ^ (a49 ^ 0x1968F51F) & (v130 ^ 0xBC7030BA);
  v300 = v260;
  v301 = ((((2 * v298) | 0x460BCC9A) - v298 - 587589197) ^ 0xA3C5E6CF) << LODWORD(STACK[0x300]) << LODWORD(STACK[0x2FC]);
  v302 = v301 & 0xDCBCCE63 | ((((((2 * v297) | 0x79200CAC) - v297 - 1016071766) ^ 0x7C801774) >> v262 >> v260) ^ 0x2343319C) & ~v301;
  *(_DWORD *)(v91 - 228) = ((v302 & 0xED6B8868 ^ 0xA9638848) + (v302 ^ 0x549C0422) - ((v302 ^ 0x549C0422) & 0xED6B8868)) ^ 0x9AB4BDD6;
  v303 = (2 * ((v299 | 0x7E78E94E) - (v299 | 0x18716B1)) + 51260770) ^ LODWORD(STACK[0x438]);
  v304 = ((((v303 ^ 0x2A74C5A8) & v136 ^ v135 & 0x962A2171) & 0xF1FD9352 ^ 0x71F59302)
        + ((v303 ^ 0x2A74C5A8) & v136 ^ v135 & 0x962A2171 ^ 0x86080071)
        - (((v303 ^ 0x2A74C5A8) & v136 ^ v135 & 0x962A2171 ^ 0x86080071) & 0xF1FD9352)) ^ 0xE1DD9303;
  v305 = (v303 ^ 0xBC5EE4D9) & (v152 ^ 0xBCCBF3C1) ^ v303 & 0x12F74953;
  *(_DWORD *)(v91 - 232) = (v304 << v178 << v264)
                         + ((((v305 & 0x7F68F088 ^ 0x7D08B088) + (v305 ^ 0x2F24951) - ((v305 ^ 0x2F24951) & 0x7F68F088)) ^ 0x6DCCF988) >> LODWORD(STACK[0x3C8]) >> LODWORD(STACK[0x3D8]));
  v306 = *(_DWORD *)(v91 - 144);
  v307 = v244 & 0x566E827E ^ 0x4420003C ^ v306 & (a66 ^ 0xFD5AD271);
  v308 = (2 * (v307 - ((2 * v307) & 0x7F034958)) + 2130921816) ^ a66;
  v309 = v248 & 0x55385780 ^ 0x41205380 ^ v249 & (v308 ^ 0xA5024E07);
  v310 = v241;
  LOBYTE(v262) = STACK[0x2E8];
  LOBYTE(v136) = STACK[0x2EC];
  v311 = (((v309 | 0x7F6F740) - (v309 | 0xF80908BF) - 133625665) ^ 0x56D6B740) >> v262 >> v136;
  v312 = ~v146 & 0x10;
  LODWORD(STACK[0x26C]) = v312;
  v313 = v146 & 0xF ^ 0xA;
  LODWORD(STACK[0x268]) = v313;
  LODWORD(STACK[0x460]) = (((((v241 & (v308 ^ 0x5BE330F) ^ v198 & 0xF5842A88) & 0x8BB166F0 ^ 0x8AB14670)
                           + (v241 & (v308 ^ 0x5BE330F) ^ v198 & 0xF5842A88 ^ 0x51002880)
                           - ((v241 & (v308 ^ 0x5BE330F) ^ v198 & 0xF5842A88 ^ 0x51002880) & 0x8BB166F0)) ^ 0x2A354C78) << v312 << v313)
                        - 857816927
                        + (((v311 ^ 0xC0F928A6) - 203941895) ^ ((v311 ^ 0x1B5207DA) + 678639749) ^ ((v311 ^ 0xDBAB2F7C)
                                                                                                  - 393605085));
  v314 = v244 & 0xBF8F53C5 ^ 0x208A1301 ^ (LODWORD(STACK[0x3EC]) ^ 0x2A5B1110) & v306;
  v315 = (2 * (((2 * v314) | 0x2D59F86A) - v314) - 760871018) ^ LODWORD(STACK[0x274]);
  v316 = v198;
  v317 = v198 & 0xD0B074AD ^ 0x80B03088 ^ (v315 ^ 0xF54B3D7A) & v310;
  v318 = (v130 ^ 0x7BCF4A5D) & (a50 ^ 0xAB34500F) ^ a50 & 0x88E9A588;
  v319 = v315 & 0x4C2BD207 ^ 0x4803D206 ^ (v315 ^ 0x25FB49D7) & (v152 ^ 0xE2176895);
  v320 = (((v317 | 0xBF3C2E63) - (v317 | 0x40C3D19C) + 1086575004) ^ 0xEF0C5EC7) << LODWORD(STACK[0x244]) << LODWORD(STACK[0x240]);
  v321 = (v320 & 0x7CA265C1 | ((((((2 * v319) & 0xE56F081A) - v319 + 222854130) ^ 0x4160E9F3) >> LODWORD(STACK[0x358])) ^ 0x835D9A3E) & ~v320) ^ 0x2C000081;
  *(_DWORD *)(v91 - 240) = (((2 * v321) | 0x15AA56BA) - v321 - 181742429) ^ 0xA588B1E2;
  v322 = a50 ^ (2 * ((v318 & 0x42A03CF2 ^ 0x422038F2) + (v318 ^ 0x890400) - ((v318 ^ 0x890400) & 0x42A03CF2)));
  v323 = (v135 & 0x8921406C ^ 0x8920002C ^ v282 & (v322 ^ 0xB6076197)) << (~(_BYTE)v146 & 0x12) << (v146 & 0xD ^ 8);
  v324 = v249;
  v325 = v248 & 0x96C6E245 ^ 0x10828200 ^ v249 & (v322 ^ 0xA9E0C3BE);
  LOBYTE(v249) = STACK[0x348];
  LODWORD(STACK[0x45C]) = (v325 >> v249 >> LODWORD(STACK[0x350])) | v323;
  v326 = STACK[0x450] & 0x30DD223B ^ 0x20980211 ^ (v244 ^ 0xC7FABF6F) & (LODWORD(STACK[0x450]) ^ 0x66F8BE4D);
  v327 = (2 * (v326 - ((2 * v326) & 0x542F24E8)) + 1412375784) ^ LODWORD(STACK[0x450]);
  v328 = v152;
  v329 = v327 & 0xD0021E0B ^ 0x10021A01 ^ (v152 ^ 0x7E3EA499) & (v327 ^ 0x3257DA95);
  v330 = v135 & 0x5EC60F19 ^ 0x46C20C08 ^ v282 & (v327 ^ 0x6C91D58C);
  v331 = v279;
  v332 = STACK[0x454];
  v333 = (v279 ^ 0x1E6E75DE) & (LODWORD(STACK[0x454]) ^ 0x66F8BE4D) ^ STACK[0x454] & 0x6D489A0B;
  *(_DWORD *)(v91 - 248) = (((v330 - ((2 * v330) & 0x92A49404) - 917353982) ^ 0x91544002) << LODWORD(STACK[0x2F0]) << LODWORD(STACK[0x2F8])) ^ (v329 >> LODWORD(STACK[0x374]) >> LODWORD(STACK[0x368]));
  v334 = a67 & 0xC9C0EF85 ^ 0x4000C405 ^ (v279 ^ 0x3AE60050) & (a67 ^ 0xAB34500F);
  v335 = (2 * (((2 * v334) | 0x7A50D04) - v334) - 128257284) ^ a67;
  v336 = v198 & 0xA1891A38 ^ 0x20081A08 ^ (v335 ^ 0x9F194F33) & v310;
  v337 = ((v336 | 0x8125292E) - (v336 | 0x7EDAD6D1) + 2128271057) ^ 0x1AD310E;
  v338 = v244 & 0x900EFDFA ^ 0x10068052 ^ v306 & (a56 ^ 0x3B3AADF5);
  v339 = v335 & 0x3A71438B ^ 0x9666429D ^ (v248 ^ 0x2AF2D829) & (v335 ^ 0x3E90550B);
  v340 = v332 ^ (2 * v333);
  LOBYTE(v279) = STACK[0x250];
  v341 = STACK[0x254];
  LODWORD(STACK[0x458]) = (((((((2 * v339) | 0x8E4C7356) - v339 - 1193687467) ^ 0xEB503A3D) >> v300 >> v278) ^ 0x753A8617) & ~(v337 << v279 << v341) | (v337 << v279 << v341) & 0x8AC579E8) ^ 0x753A8617;
  v342 = ((((v282 & (v340 ^ 0xEC1D34DA) ^ v135 & 0x4274BE85) & 0xA651F447 ^ 0xA4516442)
         + ((v282 & (v340 ^ 0xEC1D34DA) ^ v135 & 0x4274BE85) & 0x59AE0BB8 ^ 0x40040801)
         - 1) ^ 0xE631EAC6) << v717 << v718;
  v343 = (v248 & 0x4070E7C0 ^ 0x8380 ^ v324 & (v340 ^ 0xEE196D9F)) >> v262 >> v136;
  *(_DWORD *)(v91 - 252) = (((v343 ^ 0xE82C2280) + 1941773864) ^ ((v343 ^ 0x45940E50) - 570084616) ^ ((v343 ^ 0xADB82CD0) + 908660856))
                         + 1684980568
                         + v342;
  v344 = (2 * (((2 * v338) | 0x6591A50E) - v338) + 443439858) ^ a56;
  v345 = v198 & 0x92C98F2B ^ 0x808D03 ^ v310 & (v344 ^ 0xDC6C402E);
  v346 = v328 & 0x11888115 ^ 0x1008110 ^ STACK[0x258] & (v344 ^ 0x5F2D4E10);
  LODWORD(STACK[0x454]) = (((((2 * v346) | 0xB7736964) - v346 - 1538897074) ^ 0x5AB1B5B2) >> LODWORD(STACK[0x260])) | ((((v345 | 0x33471700) - (v345 | 0xCCB8E8FF) - 860296961) ^ 0xA347992B) << v341 << v279);
  v347 = (LODWORD(STACK[0x43C]) ^ 0xA4566683) & (v331 ^ 0xC4E628D2) ^ STACK[0x43C] & 0x37C0C707;
  v348 = (2 * ((v347 & 0x14168647 ^ 0x160443) + (v347 & 0x6BE979B8 ^ 0x2800001)) - 2) ^ v720;
  v349 = v135 & 0xBD45D241 ^ 0x25444001 ^ (v348 ^ 0x423CE5C1) & v282;
  v350 = (v348 ^ 0xFF793780) & (v328 ^ 0xCECBD6F4) ^ v348 & 0x60F76C66;
  v351 = v244 & 0xF9677650 ^ 0x99617640 ^ v306 & (a68 ^ 0xC57539F8);
  LODWORD(STACK[0x3AC]) = v278;
  LODWORD(STACK[0x3C4]) = v300;
  v352 = ((v349 - ((2 * v349) & 0x66A4524C) - 1286461146) ^ 0x2B52EB27) << LODWORD(STACK[0x30C]) << LODWORD(STACK[0x310]);
  v353 = ((((((v350 & 0x9B09D5DB ^ 0x9B09D599) + (v350 ^ 0x20842042) - ((v350 ^ 0x20842042) & 0x9B09D5DB)) ^ 0xDBFCD199) >> v278 >> v300) ^ 0x9E48D002) & ~v352 | v352 & 0x61B72FFD) ^ 0x600100D4;
  *(_DWORD *)(v91 - 256) = (((2 * v353) & 0xE88F4C5C) - v353 + 196630993) ^ 0xF5F18907;
  v354 = (2 * ((v351 | 0x108371A1) - (v351 | 0x6F7C8E5E)) - 554099524) ^ a68;
  v355 = (((v310 & (v354 ^ 0x2E7045A6) ^ v316 & 0xE3E82D6C) & 0x86E5725E ^ 0x485725B)
        + ((v310 & (v354 ^ 0x2E7045A6) ^ v316 & 0xE3E82D6C) & 0x791A8DA1)
        - 1) ^ 0xE4057336;
  v356 = v354 & 0x94063C01 ^ 0x14041C00 ^ (v248 ^ 0x8485A7A3) & (v354 ^ 0xCD9868CA);
  v357 = STACK[0x21C];
  v358 = v331 & 0xEFDB20EC ^ 0x6E1A20A4 ^ (v722 ^ 0xC611D647) & STACK[0x21C];
  v359 = LODWORD(STACK[0x440]) ^ (2 * (v358 - ((2 * v358) & 0x2A1C12AC)) - 1441000788);
  v360 = (v359 ^ 0x3A423FD3) & (v328 ^ 0x8685E42B) ^ v359 & 0x28B95EB9;
  v361 = v135 & 0x298A7C3B ^ 0x886420 ^ (v359 ^ 0x13C843E8) & v282;
  v362 = (v244 ^ 0xB7571C12) & (a58 ^ 0x3C124FA8) ^ a58 & 0x40708146;
  LOBYTE(v205) = STACK[0x350];
  LODWORD(STACK[0x450]) = (((((2 * v356) & 0x9B0A3A8C) - v356 - 1300569415) ^ 0x227ED6B9) >> v205 >> v249)
                        + (v355 << v341 << v279);
  LOBYTE(v332) = STACK[0x3D8];
  LOBYTE(v324) = STACK[0x3C8];
  v363 = (((v360 & 0x26FD7F9C ^ 0x265C7D94) + (v360 ^ 0x8A10209) - ((v360 ^ 0x8A10209) & 0x26FD7F9C)) ^ 0x65C6304) >> v332 >> v324;
  v364 = v146 & 0xB ^ 0xA;
  LODWORD(STACK[0x274]) = v364;
  v365 = v146 & 0x14 ^ 0x10;
  LODWORD(STACK[0x270]) = v365;
  LODWORD(STACK[0x380]) = v363 + ((((v361 | 0xF4CA9610) - (v361 | 0xB3569EF) + 188049903) ^ 0xDDCAF618) << v364 << v365);
  v366 = (2 * ((v362 & 0x48B01845 ^ 0x100000) + (v362 & 0x374FE7BA ^ 0x370F66B9)) - 2) ^ a58;
  v367 = v310;
  v368 = v198 & 0x8D7D1C4E ^ 0x1580008 ^ v310 & (v366 ^ 0xDF719C96);
  v369 = (v248 ^ 0x349DD8A) & (v366 ^ 0x520C80D8) ^ v366 & 0x13CA4628;
  LOBYTE(v146) = STACK[0x24C];
  v370 = ((((2 * v368) | 0x67F75F80) - v368 - 872132544) ^ 0xBAA7AF84) << LODWORD(STACK[0x25C]) << v146;
  LODWORD(STACK[0x44C]) = (v370 + 1186030113 + (~(2 * v370) | 0x729D3BBD) + 1) ^ ((((v369 & 0xA5D53603 ^ 0xA4953403)
                                                                                  + (v369 & 0x5A2AC9FC ^ 0x84001)
                                                                                  - 1) ^ 0xB695740B) >> v278 >> v300) ^ 0x46B16221;
  v371 = STACK[0x47C] & 0x6AF85E9B ^ 0x20505C08 ^ (LODWORD(STACK[0x47C]) ^ 0xBEBC350F) & (v244 ^ 0x9DDFC3CF);
  v372 = (2 * (v371 + 661371910 - ((2 * v371) & 0x4ED797DC)) + 8144) ^ LODWORD(STACK[0x478]);
  v373 = v198 & 0xB01C703E ^ 0xB004402C ^ (v372 ^ 0xC22BDC09) & v310;
  v374 = v372 & 0xACEBD05F ^ 0x4000046 ^ (v372 ^ 0x7237AC37) & (v328 ^ 0x2D76ACD);
  v375 = ((((2 * v374) | 0xAE55C86E) - v374 + 685054921) ^ 0xF3096466) >> v262 >> v136;
  LOBYTE(v249) = *(_DWORD *)(v91 - 136);
  LOBYTE(v300) = STACK[0x328];
  LODWORD(STACK[0x47C]) = (v373 << v249 << v300)
                        + 361742155
                        + (((v375 ^ 0x9DDE4BCB) + 2007894912) ^ ((v375 ^ 0x8EB9A091) + 1690951718) ^ ((v375 ^ 0x1367EB5A) - 115889169));
  v376 = a61 ^ (2 * (STACK[0x3A4] & (a61 ^ 0x10CBCBDB) ^ v331 & 0x2CD98473));
  v377 = v135 & 0x33EA7325 ^ 0x214A3321 ^ v282 & (v376 ^ 0x4FF9342F);
  v378 = v248;
  v379 = v248 & 0x3DA709C8 ^ 0x3D010940;
  v380 = STACK[0x3E0];
  LODWORD(STACK[0x448]) = ((((v379 ^ STACK[0x3E0] & (v376 ^ 0x41B44EC2))
                           - ((2 * (v379 ^ STACK[0x3E0] & (v376 ^ 0x41B44EC2))) & 0x3C73AB52)
                           - 1640376919) ^ 0xB3BBD569) >> v332 >> v324) | (((v377 - ((2 * v377) & 0x30245D1E) + 403844751) ^ 0xAB01F8A) << LODWORD(STACK[0x244]) << LODWORD(STACK[0x240]));
  v381 = v331 & 0xE5F55889 ^ 0xC5F10889 ^ (LODWORD(STACK[0x420]) ^ 0x24148BCC) & v357;
  v382 = (2 * (((2 * v381) & 0x5522D5DE) - v381) - 1428346336) ^ LODWORD(STACK[0x264]);
  v383 = v380;
  v384 = v378 & 0xB7A4A3D0 ^ 0x10808380 ^ v380 & (v382 ^ 0xED5F1E41);
  v385 = 2 * ((v244 ^ 0x5D3402F8) & (a59 ^ 0x3C124FA8) ^ a59 & 0x2A139FAC);
  v386 = (((v385 ^ a59) & 0x331ACFA ^ 0x5AA7F515) - 1) ^ 0x4A27F9EE;
  v387 = v135 & 0x9AED3284 ^ 0x9A4C2004 ^ v282 & (v382 ^ 0xC0168F15);
  LOBYTE(v310) = v279;
  v388 = ((((2 * v387) | 0x6E35469E) - v387 + 1222991025) ^ 0xB7BA81CF) << v279 << v341;
  LODWORD(STACK[0x37C]) = (v384 >> LODWORD(STACK[0x3D0]) >> LODWORD(STACK[0x3D4])) ^ 0x9A6005ED ^ (v388
                                                                                                 - ((2 * v388) & 0x34C00BDA)
                                                                                                 - 1704983059);
  v389 = (a59 & 0xFCCE5305 ^ 0x5C0A5204)
       + (a59 & 0x7C8A4005 ^ 0x20A120A9)
       - ((a59 & 0xFCCE5305 ^ 0x5C0A5204) & 0x7C8A4005);
  v390 = (((v385 & 0x8C004304 ^ 0x810144B3) - 1) & 0x8C0147A4 | v385 & 0x70CE1000) ^ 0xD00557A0;
  v391 = ((v389 & 0x7641022E ^ 0x22400E8D) + (v389 & 0x89BED111) - 1) ^ 0xC0078991 ^ (v390
                                                                                    - ((2 * v390) & 0xF988AC48)
                                                                                    - 18557388) | (v386
                                                                                                 - ((2 * v386) & 0x62101B0)
                                                                                                 - 887847975) ^ 0xDBA48FDB;
  v392 = v391 - ((2 * v391) & 0xF9DBAD50) - 51521880;
  v393 = v198 & 0xEC8ECFF9 ^ 0xC8088288 ^ v367 & (v392 ^ 0x10631951);
  v394 = STACK[0x258];
  LOBYTE(v262) = v324;
  LODWORD(STACK[0x444]) = (((((2 * v393) & 0x16F9CE24) - v393 - 192734995) ^ 0xD40FD90D) << LODWORD(STACK[0x324]) << LODWORD(STACK[0x318]))
                        + ((v328 & 0x1802A08C ^ 0x800A080 ^ STACK[0x258] & (v392 ^ 0xE4EF7624)) >> v324 >> v332);
  v395 = *(_DWORD *)(v91 - 144);
  v396 = v244 & 0xB38EBA0B ^ 0x80021A02 ^ (LODWORD(STACK[0x414]) ^ 0x2801EE43) & v395;
  v397 = (2 * (((2 * v396) | 0x581D71C6) - v396) - 1478324678) ^ LODWORD(STACK[0x230]);
  v398 = v328;
  v399 = a62 & 0x3C6FE616 ^ 0x340A2212 ^ (v331 ^ 0xCF4909C3) & (a62 ^ 0xAC0F91A);
  LOBYTE(v136) = STACK[0x358];
  LODWORD(STACK[0x478]) = ((((((v397 ^ 0x342158FC) & v282 ^ v135 & 0x9CEC239C) & 0x4D78866F ^ 0x4D30866F)
                           + ((v397 ^ 0x342158FC) & v282 ^ v135 & 0x9CEC239C ^ 0x90C82110)
                           - (((v397 ^ 0x342158FC) & v282 ^ v135 & 0x9CEC239C ^ 0x90C82110) & 0x4D78866F)) ^ 0x415CA5F3) << LODWORD(STACK[0x2F0]) << LODWORD(STACK[0x2F8])) | ((v328 & 0x85165DD9 ^ 0x84141890 ^ (v397 ^ 0x2DDB26B9) & v394) >> v136);
  v400 = (2 * (v399 - ((2 * v399) & 0x399C6DFE)) - 1180930562) ^ a62;
  v401 = v378 & 0xA67DC95 ^ 0x39880 ^ v380 & (v400 ^ 0xC1AECC71);
  v402 = STACK[0x474];
  v403 = (v244 ^ 0x6915E43F) & (LODWORD(STACK[0x474]) ^ 0x44063609) ^ STACK[0x474] & 0x1E32796B;
  LOBYTE(v193) = v341;
  v404 = (v316 & 0x77EFBC16 ^ 0x70840004 ^ (v400 ^ 0xBC26ACF2) & v367) << v341 << v310;
  v405 = STACK[0x348];
  LODWORD(STACK[0x440]) = (v401 >> v205 >> v405) | v404;
  v406 = v402 ^ (2 * v403);
  v407 = v367;
  v408 = v316 & 0xEEA444ED ^ 0xCC84000D ^ v367 & (v406 ^ 0xA2A612F6);
  v409 = STACK[0x21C];
  v410 = v331 & 0xD94E7F07 ^ 0x51062504 ^ STACK[0x21C] & (a57 ^ 0xD38E861D);
  v411 = v378 & 0xA5D3E5C8 ^ 0x50065C0 ^ v383 & (v406 ^ 0xE9D1B3D3);
  v412 = (2 * (((2 * v410) | 0x44F65D56) - v410) - 1156996438) ^ a57;
  LOBYTE(v324) = v300;
  LOBYTE(v205) = v249;
  LODWORD(STACK[0x474]) = (((v411 - ((2 * v411) & 0x692EA2F0) + 882332024) ^ 0x3114B538) >> v136) | (((v408 - ((2 * v408) & 0x549F4B98) - 1437620788) ^ 0x8E4FE5AD) << v300 << v249);
  v413 = v135 & 0xA184D0E7 ^ 0xA18480A4 ^ v282 & (v412 ^ 0xEFB2E0A9);
  v414 = v412 & 0xA493021 ^ 0x81001 ^ (v412 ^ 0x4E36304E) & (v398 ^ 0xA4758AB3);
  v415 = STACK[0x430] & 0xEA9DA55F ^ 0xC01D2109 ^ (v331 ^ 0x19BB4A8A) & (LODWORD(STACK[0x430]) ^ 0xD715EE13);
  LOBYTE(v136) = v262;
  LODWORD(STACK[0x43C]) = (v413 << v193 << v310) | (((v414 - ((2 * v414) & 0x892C96A6) + 1150700371) ^ 0x4E9E6B52) >> v262 >> v332);
  v416 = (2 * (v415 - ((2 * v415) & 0x57664A9E)) - 681162082) ^ LODWORD(STACK[0x214]);
  v417 = v416 & 0x83851627 ^ 0x3841622 ^ (v416 ^ 0x6FA6173A) & (v398 ^ 0x2DB9ACB5);
  v418 = v135 & 0xC8375357 ^ 0xC0340147 ^ v282 & (v416 ^ 0xA791446D);
  v419 = v244 & 0xD83942DA ^ 0x4001429A ^ v395 & (a63 ^ 0xD2F9BBC0);
  LOBYTE(v300) = STACK[0x3C4];
  LOBYTE(v310) = STACK[0x3AC];
  LODWORD(STACK[0x470]) = (((((2 * v418) | 0x70181984) - v418 + 1207169854) ^ 0xF01C0F81) << v146 << LODWORD(STACK[0x25C])) | (v417 >> v300 >> v310);
  v420 = (2 * ((v419 | 0x278889B2) - (v419 | 0x5877764D)) - 1326519142) ^ a63;
  v421 = v316 & 0xA6AF84CD ^ 0x22878044 ^ v367 & (v420 ^ 0xC33EEB27);
  v422 = ~LODWORD(STACK[0x434]) & 8;
  LODWORD(STACK[0x264]) = v422;
  v423 = v378 & 0x614A835F ^ 0x48010B ^ v383 & (v420 ^ 0x4DBECB5);
  v424 = STACK[0x330] & 0x17 ^ 0x12;
  LODWORD(STACK[0x230]) = v424;
  LODWORD(STACK[0x438]) = (((((2 * v423) & 0x64A7E59C) - v423 + 1303121201) ^ 0x4DE68F38u) >> LODWORD(STACK[0x260]))
                        + ((((v421 | 0xFFD3BB93) - (v421 | 0x2C446C) + 2901100) ^ 0x7DD03B9B) << v424 << v422);
  v425 = v331 & 0x2899A564 ^ 0x709F5799 ^ v409 & (LODWORD(STACK[0x46C]) ^ 0x6C9F936D);
  v426 = v244 & 0x40D9BC65 ^ 0xD00C45 ^ v395 & (a69 ^ 0x4A19457F);
  v427 = (2 * (((2 * v425) | 0x5052C8C) - v425) + 2063258484) ^ LODWORD(STACK[0x46C]);
  v428 = (v427 ^ 0xDA102FB7) & v367;
  v429 = STACK[0x258];
  v430 = (v427 ^ 0xF1CD8FEA) & STACK[0x258] ^ v398 & 0x91F170D5;
  LOBYTE(v262) = STACK[0x248];
  LODWORD(STACK[0x46C]) = ((((v430 & 0x79814E15 ^ 0x11004C04) + (v430 & 0x867EB1EA ^ 0x66611AB) - 1) ^ 0x97566D3E) >> LODWORD(STACK[0x368]) >> LODWORD(STACK[0x374]))
                        + (((((v428 ^ v316 & 0xBA2CD088) & 0xD985EDD6 ^ 0xC981EDD6)
                           + (v428 ^ v316 & 0xBA2CD088 ^ 0x30040008)
                           - ((v428 ^ v316 & 0xBA2CD088 ^ 0x30040008) & 0xD985EDD6)) ^ 0x5185ADD6) << v262);
  v431 = (2 * (v426 - ((2 * v426) & 0x4402BD48)) + 1141030216) ^ a69;
  v432 = v135 & 0xB8E12B50 ^ 0xB8E00200 ^ v282 & (v431 ^ 0x77804F00);
  v433 = STACK[0x468];
  v434 = STACK[0x468] & 0x954E000B ^ 0x104E0000 ^ (v331 ^ 0x6668EFDE) & (LODWORD(STACK[0x468]) ^ 0x4EB50694);
  v435 = v378 & 0xD3F80526 ^ 0xD2000126 ^ v383 & (v431 ^ 0x1C996176);
  LODWORD(STACK[0x434]) = (((v435 - ((2 * v435) & 0x2D7F0222) + 381649169) ^ 0xD43F8115) >> v300 >> v310)
                        + (v432 << v205 << v324);
  v436 = (2 * (((2 * v434) & 0x70095150) - v434) + 267824814) ^ v433;
  v437 = v135 & 0x7D5E996E ^ 0x415A1002 ^ v282 & (v436 ^ 0x14893154);
  v438 = (v244 ^ 0x25B66CE4) & (a64 ^ 0x7BABFB75) ^ a64 & 0xD291F1B0;
  LOBYTE(v324) = STACK[0x2E8];
  LOBYTE(v310) = STACK[0x2EC];
  LODWORD(STACK[0x468]) = (((((2 * v437) & 0xE36CEAD6) - v437 - 1907783020) ^ 0xF25F1ABA) << LODWORD(STACK[0x288]) << LODWORD(STACK[0x28C]))
                        + ((((((v436 ^ 0xCA91F46A) & v429 ^ v398 & 0xA3465C50) & 0xC2EF39CF ^ 0xC2EB29CF)
                           + ((v436 ^ 0xCA91F46A) & v429 ^ v398 & 0xA3465C50 ^ 0x21041000)
                           - (((v436 ^ 0xCA91F46A) & v429 ^ v398 & 0xA3465C50 ^ 0x21041000) & 0xC2EF39CF)) ^ 0x41EF31DF) >> v324 >> v310);
  v439 = a64 ^ (2 * ((v438 & 0x116620C1 ^ 0x11662041) + (v438 ^ 0x290C090) - ((v438 ^ 0x290C090) & 0x116620C1)));
  LODWORD(STACK[0x430]) = (((((v383 & (v439 ^ 0x18CE0152) ^ v378 & 0xE18BD8E5) & 0x1B8A7682 ^ 0x1A883682)
                           + (v383 & (v439 ^ 0x18CE0152) ^ v378 & 0xE18BD8E5 ^ 0x21024061)
                           - ((v383 & (v439 ^ 0x18CE0152) ^ v378 & 0xE18BD8E5 ^ 0x21024061) & 0x1B8A7682)) ^ 0x3A0BAE43) >> LODWORD(STACK[0x350]) >> v405) | ((v316 & 0xA8508050 ^ 0xA8000040 ^ v367 & (v439 ^ 0x511559E7)) << v262);
  v440 = v395 & (LODWORD(STACK[0x428]) ^ 0x4F215C82) ^ v244 & 0x1945A16;
  v441 = (2 * ((v440 & 0xEF2E685 ^ 0x804204) + (v440 & 0x710D197A ^ 0x710D1169)) - 2) ^ LODWORD(STACK[0x428]);
  v442 = v378;
  v443 = (v378 ^ 0x4CF4E626) & (v441 ^ 0xAFA79064) ^ v441 & 0x5C777D84;
  v444 = v135 & 0xDF6A1BCF ^ 0x608008C ^ v282 & (v441 ^ 0x70CD8BAB);
  v445 = ((((v443 ^ 0xFFEFF7FB) + (v443 | 0xB9B24D34) + (v443 & 0x464DB2CB) + 1) ^ 0xB5855534) >> LODWORD(STACK[0x3D4]) >> LODWORD(STACK[0x3D0])) | (((((2 * v444) & 0x70C0DEB2) - v444 + 1201639590) ^ 0xDEFF92A6) << v262);
  v446 = a60 ^ (2 * (STACK[0x3A4] & (a60 ^ 0x4A607D1C) ^ v331 & 0x31CB8669));
  LODWORD(STACK[0x428]) = ((v398 & 0xC6DEBD92 ^ 0x861CB892 ^ (v446 ^ 0xDF704A65) & v429) >> v136 >> LODWORD(STACK[0x3D8])) | ((v316 & 0x8AB1F49C ^ 0x8880400C ^ (v446 ^ 0x931F036B) & v367) << LODWORD(STACK[0x2F8]) << LODWORD(STACK[0x2F0]));
  v447 = v331;
  v448 = v331 & 0x219DFD48 ^ 0xCEC00 ^ (LODWORD(STACK[0x228]) ^ 0xE2C0ECB8) & v409;
  v449 = (2 * ((v448 | 0x36E4EFF2) - (v448 | 0x491B100D)) - 1841946598) ^ LODWORD(STACK[0x42C]);
  v450 = v135 & 0x34619EE2 ^ 0x346086A0 ^ (v449 ^ 0x44B551F9) & v282;
  v451 = (v449 ^ 0x52DADD14) & v383;
  v452 = v442;
  v453 = STACK[0x424];
  v726 = 33686018
       * (((v453 ^ 0x25F34B1B) + 931257641) ^ ((v453 ^ 0xE8EBF42E) - 90611170) ^ ((v453 ^ 0x3ACE6365) + 683472215))
       - 1805707032;
  v725 = 33686018
       * (((v453 ^ 0xB9420E9A) - 1422878550) ^ ((v453 ^ 0x22C0ED7B) + 817003337) ^ ((v453 ^ 0x6C543FB1) + 2116462979))
       - 711752339;
  v724 = 33686018 * (((a65 ^ 0xC258D71A) - 1174786573) ^ (a65 + 2082669801) ^ ((a65 ^ 0xFB187835) - 2135260450))
       - 1556291604;
  v723 = 33686018
       * (((v453 ^ 0xAD81B165) - 1074583721) ^ ((v453 ^ 0xDD1D3B) + 313494281) ^ ((v453 ^ 0x5A8A700E) + 1224271422))
       - 352667597;
  v721 = 33686018
       * (((v453 ^ 0x669B2FDF) + 1961474541) ^ ((v453 ^ 0x3993FD9D) + 736193455) ^ ((v453 ^ 0xA8DE0E12) - 1163093982))
       - 754107820;
  v719 = 33686018
       * (((a65 ^ 0x873D97DE) - 56660681) ^ ((a65 ^ 0xED031293) - 1767774084) ^ ((a65 ^ 0x6A3E8562) + 295468939))
       + 1856895194;
  v716 = 33686018
       * (((a65 ^ 0xB040D934) - 874372131) ^ ((a65 ^ 0x1237D50) + 2055309241) ^ ((a65 ^ 0xB163A44B) - 893296988))
       + 2024177194;
  v715 = 33686018
       * (((v453 ^ 0xA3EB8C20) - 1315366380) ^ ((v453 ^ 0x69E9D8F1) + 2073775811) ^ ((v453 ^ 0x3DD48881) + 799415987))
       + 95855530;
  v714 = 33686018
       * (((v453 ^ 0xDD3A67BD) - 817303153) ^ ((v453 ^ 0xCF35E93D) - 582516977) ^ ((v453 ^ 0xE5D952D0) - 139737884))
       + 63333998;
  v713 = 33686018
       * (((a65 ^ 0x74C14B59) + 258191794) ^ ((a65 ^ 0xA3BE4C40) - 669206871) ^ ((a65 ^ 0xD77F0736) - 1394737697))
       + 1187271610;
  v712 = 33686018
       * (((a65 ^ 0x49F76C0D) + 844469990) ^ ((a65 ^ 0x88B79B97) - 216702592) ^ ((a65 ^ 0xC140F7B5) - 1159590562))
       - 1828655850;
  v711 = 33686018
       * (((v453 ^ 0x898896E5) - 1678114601) ^ ((v453 ^ 0x1893B6C1) + 182526195) ^ ((v453 ^ 0x66CDFC74) + 1958701640))
       - 1093744243;
  v727 = 33686018
       * (((a65 ^ 0x3231F6FB) + 1234373652) ^ ((a65 ^ 0x60A8AAC6) + 453660719) ^ ((a65 ^ 0x52995C12) + 691775227))
       + 2096050620;
  v454 = v324;
  v455 = (((((v451 ^ v442 & 0x220E120F) & 0xF7F06F98 ^ 0xF5F06F98)
          + (v451 ^ v442 & 0x220E120F ^ 0x2021004)
          - ((v451 ^ v442 & 0x220E120F ^ 0x2021004) & 0xF7F06F98)) ^ 0xF5F06D9E) >> v310 >> v324) ^ (v450 << LODWORD(STACK[0x278]) << LODWORD(STACK[0x284]));
  v456 = STACK[0x340];
  v457 = STACK[0x340] & 0x86E465B ^ 0xC0218 ^ v395 & (a71 ^ 0x73C5BD2E);
  v458 = (2 * (((2 * v457) | 0x41BD17D0) - v457) - 1102911440) ^ a71;
  v459 = v316;
  v460 = STACK[0x2E0];
  v461 = v429;
  v462 = STACK[0x2E0] & 0x7BA716D ^ 0x7180044 ^ v429 & (v458 ^ 0x3DF89158);
  LODWORD(STACK[0x420]) = (((((2 * v462) | 0x78E194B6) - v462 + 1133458853) ^ 0xBD50FA1F) >> LODWORD(STACK[0x374]) >> LODWORD(STACK[0x368])) ^ ((((v367 & (v458 ^ 0x3E4B3C2E) ^ v316 & 0x409DC1B ^ 0xFFFFEFFF) + 1338153948 + ((2 * (v367 & (v458 ^ 0x3E4B3C2E) ^ v316 & 0x409DC1B)) & 0x607AC848)) ^ 0x4FC2CBD3) << v262);
  v463 = v409;
  v464 = v447 & 0x5B4ADD8F ^ 0x49088109 ^ (LODWORD(STACK[0x41C]) ^ 0xA1BD3C6A) & v409;
  v465 = (2 * (v464 - ((2 * v464) & 0x2C51632C)) - 1403952340) ^ LODWORD(STACK[0x418]);
  v466 = v367;
  v467 = v459 & 0x854E124F ^ 0x40120C ^ (v465 ^ 0xF1E6160A) & v367;
  LOBYTE(v136) = STACK[0x358];
  v468 = (((((2 * v467) | 0x67618676) - v467 + 1280261317) ^ 0x33F4D37B) << LODWORD(STACK[0x25C]) << LODWORD(STACK[0x24C]))
       + ((v465 & 0xB53CEC96 ^ 0x34280404 ^ (v465 ^ 0x74A80445) & (v460 ^ 0x1B005604)) >> v136);
  v469 = v456;
  v470 = v456 & 0x432D0C31 ^ 0x43010030 ^ v395 & (a70 ^ 0x3886F744);
  v471 = (2 * (((2 * v470) | 0x3578EF96) - v470) + 1250365546) ^ a70;
  v472 = v282;
  v473 = STACK[0x2A0];
  v474 = v282 & (v471 ^ 0x45DCB723) ^ STACK[0x2A0] & 0x8B47BB80;
  v475 = STACK[0x3E0];
  v476 = v442 & 0x659EC67B ^ 0x65064443 ^ STACK[0x3E0] & (v471 ^ 0xAB05CAD8);
  LODWORD(STACK[0x418]) = ((((v474 & 0x3FC44EE5 ^ 0x3FC04665) + (v474 & 0xC03BB11A ^ 0x80029101) - 1) ^ 0x348655E5) << *(_DWORD *)(v91 - 136) << LODWORD(STACK[0x328])) | (((((2 * v476) | 0x8688AC3A) - v476 + 1018931683) ^ 0xA6C0907C) >> LODWORD(STACK[0x348]) >> LODWORD(STACK[0x350]));
  v477 = *(_DWORD *)(v91 - 220) ^ *(_DWORD *)(v91 - 192) ^ LODWORD(STACK[0x46C]) ^ LODWORD(STACK[0x38C]) ^ *(_DWORD *)(v91 - 160) ^ LODWORD(STACK[0x47C]) ^ *(_DWORD *)(v91 - 196) ^ *(_DWORD *)(v91 - 208) ^ LODWORD(STACK[0x474]) ^ *(_DWORD *)(v91 - 176) ^ *(_DWORD *)(v91 - 200) ^ *(_DWORD *)(v91 - 212);
  v478 = LODWORD(STACK[0x388]) ^ *(_DWORD *)(v91 - 248) ^ LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x468]);
  LODWORD(STACK[0x42C]) = v445;
  v479 = v477 ^ v478 ^ v445 ^ LODWORD(STACK[0x390]) ^ LODWORD(STACK[0x398]) ^ *(_DWORD *)(v91 - 252) ^ *(_DWORD *)(v91 - 164) ^ LODWORD(STACK[0x394]) ^ LODWORD(STACK[0x37C]) ^ *(_DWORD *)(v91 - 216) ^ *(_DWORD *)(v91 - 228);
  v480 = (LODWORD(STACK[0x410]) - 1574114468) ^ a55;
  v481 = *(_DWORD *)(v91 - 184);
  LODWORD(STACK[0x414]) = v480;
  v482 = v479 ^ v481 ^ v480 ^ *(_DWORD *)(v91 - 204) ^ *(_DWORD *)(v91 - 188) ^ LODWORD(STACK[0x39C]) ^ LODWORD(STACK[0x3A0]) ^ *(_DWORD *)(v91 - 240);
  v483 = STACK[0x478];
  LODWORD(STACK[0x41C]) = v468;
  v484 = v468 ^ v483 ^ LODWORD(STACK[0x384]) ^ *(_DWORD *)(v91 - 224);
  LODWORD(STACK[0x424]) = v455;
  LODWORD(STACK[0x228]) = v482 ^ v484 ^ v455 ^ *(_DWORD *)(v91 - 232) ^ *(_DWORD *)(v91 - 256) ^ LODWORD(STACK[0x380]);
  v485 = STACK[0x408];
  v486 = STACK[0x404];
  LODWORD(STACK[0x410]) = a72 ^ LODWORD(STACK[0x408]) ^ LODWORD(STACK[0x404]) ^ 0x823B4A84;
  v487 = LODWORD(STACK[0x40C]) ^ a77;
  v488 = a54 ^ LODWORD(STACK[0x40C]);
  v489 = STACK[0x2AC];
  LODWORD(STACK[0x40C]) = a76 ^ LODWORD(STACK[0x2AC]) ^ a55 ^ 0x14EFAB8F;
  v490 = LODWORD(STACK[0x3F0]) ^ v486;
  v491 = STACK[0x2A4];
  LODWORD(STACK[0x408]) = a74 ^ v485 ^ LODWORD(STACK[0x2A4]) ^ 0x61149704;
  LODWORD(STACK[0x3F0]) = v490 ^ (a75 - ((2 * a75) & 0xD24BAF14) - 383395958);
  LODWORD(STACK[0x404]) = v490 ^ (a53 - ((2 * a53) & 0xD24BAF14) - 383395958);
  v492 = v447;
  v493 = STACK[0x400] & 0x3B846A1F ^ 0xB804217 ^ (v447 ^ 0xC8A285CA) & (LODWORD(STACK[0x400]) ^ 0xBA8E5FB6);
  v494 = (2 * (((2 * v493) & 0x2E465486) - v493) + 1371122552) ^ a79;
  v495 = STACK[0x234] & (a80 ^ 0x49638B75) ^ v469 & 0x4841C481;
  v496 = ((v463 & (a82 ^ 0x699EAE89) ^ v447 & 0x841A9DE7) & 0x2C76F8F9 ^ 0x2C76F099)
       + ((v463 & (a82 ^ 0x699EAE89) ^ v447 & 0x841A9DE7) & 0x53890706 ^ 0x80401);
  v497 = v473;
  v498 = v473 & 0x6111CE7A ^ 0x21008628 ^ v472 & (v494 ^ 0x24344519);
  v499 = v452;
  LODWORD(STACK[0x400]) = (v488 - ((2 * v488) & 0x4459D6B8) - 1574114468) ^ a55;
  LODWORD(STACK[0x3EC]) = a55 ^ (v487 - ((2 * v487) & 0x4459D6B8) - 1574114468);
  LODWORD(STACK[0x3FC]) ^= a78 ^ v489 ^ 0xD2A724B7;
  LOBYTE(v486) = STACK[0x250];
  LOBYTE(v485) = STACK[0x254];
  v500 = (v452 & 0x2BB69BD ^ 0x8309A0 ^ v475 & (v494 ^ 0x479EE2DEu)) >> v136;
  LOBYTE(v452) = v136;
  LODWORD(STACK[0x214]) = (v498 << v486 << v485) ^ v500;
  v501 = a81 ^ (2 * v495);
  v502 = v459 & 0x9E3E5D2C ^ 0xFA55EAEE ^ v407 & (v501 ^ 0xD2F09B53);
  v503 = v461;
  v504 = (((v461 & (v501 ^ 0x4A8624F2) ^ v460 & 0x648E28D) & 0x785B0162 ^ 0x78530162)
        + (v461 & (v501 ^ 0x4A8624F2) ^ v460 & 0x648E28D ^ 0x8C200)
        - ((v461 & (v501 ^ 0x4A8624F2) ^ v460 & 0x648E28D ^ 0x8C200) & 0x785B0162)) ^ 0x7E5B61E2;
  v505 = STACK[0x210] & 0x260AB09 ^ (v469 ^ 0xF547365D) & (LODWORD(STACK[0x210]) ^ 0x7BE54A88) ^ 0x2608B09;
  v506 = v499;
  v507 = (2 * v496 - 2) ^ LODWORD(STACK[0x224]);
  v508 = v499 & 0xD79E3633 ^ 0x85881012 ^ v475 & (v507 ^ 0xBBDE6CBB);
  LOBYTE(v489) = STACK[0x260];
  LODWORD(STACK[0x2AC]) = (((((2 * v502) | 0xC9CA2DDA) - v502 - 1692735213) ^ 0x6B4BD2F) << LODWORD(STACK[0x268]) << LODWORD(STACK[0x26C])) ^ (v504 >> v489);
  v509 = v472;
  v510 = v497;
  LOBYTE(v136) = v486;
  v511 = ((((v472 & (v507 ^ 0x7E51C80C) ^ v497 & 0x12119284) & 0x58923FB0 ^ 0x48823DB1)
         + ((v472 & (v507 ^ 0x7E51C80C) ^ v497 & 0x12119284) & 0xA76DC04F)
         - 1) ^ 0x5A82BF34) << v486 << v485;
  LOBYTE(v497) = v485;
  LODWORD(STACK[0x210]) = v511 ^ (((v508 - ((2 * v508) & 0x67CA3CB8) - 1276830116) ^ 0x26EF1C6C) >> LODWORD(STACK[0x3D0]) >> LODWORD(STACK[0x3D4]));
  v512 = STACK[0x20C] & 0xDF1256F6 ^ 0x5B1010A0 ^ (v492 ^ 0x2C34B923) & (LODWORD(STACK[0x20C]) ^ 0xA8DCAF70);
  v513 = (2 * (((2 * v512) | 0x196642B2) - v512) + 1721351502) ^ a83;
  v514 = v475;
  v515 = v506 & 0x3C155781 ^ 0x10011380 ^ v475 & (v513 ^ 0x3545F5AE);
  v516 = v510 & 0x2E6140F5 ^ 0x226100C4 ^ v472 & (v513 ^ 0x2731E2DA);
  v517 = STACK[0x2B8] & 0x825D84C0 ^ 0x2598000 ^ (v492 ^ 0x717B6B15) & (LODWORD(STACK[0x2B8]) ^ 0x3FDDB1C2);
  LODWORD(STACK[0x20C]) = ((((v516 | 0x55CB7148) - (v516 | 0xAA348EB7) - 1439396169) ^ 0x59CA7128) << LODWORD(STACK[0x310]) << LODWORD(STACK[0x30C])) ^ (v515 >> v310 >> v454);
  LOBYTE(v516) = (v491 & 1 ^ 0x8B) + 2 * (v491 & 1) - 95;
  v518 = ((v517 - ((2 * v517) & 0xD58A9D24) + 1791315602) ^ 0x6AC14E52) << ((v516 ^ 0xB5) & 0x83 ^ 0x81) << ((v516 ^ 0xB5) & 0x1C ^ 0x18);
  v519 = (2 * ((v505 | 0x44EC0759) - (v505 | 0x3B13F8A6)) + 1982329164) ^ LODWORD(STACK[0x2C0]);
  v520 = (((v466 & (v519 ^ 0x70863401) ^ v459 & 0xE5274594) & 0x834AE0D8 ^ 0x8348A0C9)
        + ((v466 & (v519 ^ 0x70863401) ^ v459 & 0xE5274594) & 0x7CB51F27)
        - 1) ^ 0x634CE1CC;
  v521 = (v460 ^ 0xC637911C) & (v519 ^ 0x95A17195) ^ v519 & 0x680B2B8E;
  v522 = ((v518 << (v516 ^ 0x2D)) + 348717192 - ((2 * (v518 << (v516 ^ 0x2D))) & 0x29921DC0) + 3672) ^ a85;
  v523 = v469;
  v524 = STACK[0x378] & 0x55F4D7FD ^ 0x5C485D0 ^ (v469 ^ 0xA2D34AA9) & (LODWORD(STACK[0x378]) ^ 0x2F0D9E02);
  v525 = ((2 * v524) | 0x78E19592) - v524;
  v526 = (((v509 & (v522 ^ 0x9E4E2F37) ^ v510 & 0x189D91DD) & 0x632AF3A2 ^ 0x6322E223)
        + ((v509 & (v522 ^ 0x9E4E2F37) ^ v510 & 0x189D91DD) & 0x9CD50C5D)
        - 1) ^ 0x7BAE62AE;
  LOBYTE(v485) = STACK[0x248];
  LOBYTE(v475) = STACK[0x368];
  v527 = STACK[0x374];
  LODWORD(STACK[0x2C0]) = ((((v521 & 0x5EDBBA18 ^ 0xE92765EF) - (v521 | 0x5EDBBA18) + 1591458328) ^ 0xE926446B) >> v475 >> v527)
                        + (v520 << v485);
  v528 = v506 & 0x156E2B5F ^ 0x10020B02 ^ v514 & (v522 ^ 0x93BD95B5);
  v529 = (2 * v525 + 119433838) ^ a86;
  v530 = v459 & 0xF0FA482 ^ 0x40A2002 ^ v466 & (v529 ^ 0x16C8E115);
  LOBYTE(v469) = v489;
  LODWORD(STACK[0x2B8]) = (v526 << LODWORD(STACK[0x270]) << LODWORD(STACK[0x274])) | (v528 >> v489);
  v531 = STACK[0x208] & 0x524AF4CA ^ 0x1248244A ^ (v523 ^ 0xA56D699E) & (LODWORD(STACK[0x208]) ^ 0xF0B7E764);
  v532 = (2 * (((2 * v531) | 0x749E0D6E) - v531) - 1956515182) ^ LODWORD(STACK[0x204]);
  LOBYTE(v489) = v485;
  LODWORD(STACK[0x208]) = (((((v503 & (v529 ^ 0x11C7D633) ^ v460 & 0x80093A4) & 0x35FAB928 ^ 0x35FA2828)
                           + (v503 & (v529 ^ 0x11C7D633) ^ v460 & 0x80093A4 ^ 0x8009380)
                           - ((v503 & (v529 ^ 0x11C7D633) ^ v460 & 0x80093A4 ^ 0x8009380) & 0x35FAB928)) ^ 0x35FAB828u) >> v452) ^ (((((2 * v530) & 0xF33730E0) - v530 + 107243407) ^ 0xA6A478D) << v485);
  v533 = v506 & 0x7987697 ^ 0x804014 ^ v514 & (v532 ^ 0x82CAA58);
  v534 = v459 & 0xFA0D11BD ^ 0xAA010195 ^ v466 & (v532 ^ 0xF5B9CD72);
  v535 = STACK[0x2B4] & 0xCE5212F2 ^ 0xC521062 ^ (v492 ^ 0x3D74FD27) & (LODWORD(STACK[0x2B4]) ^ 0xB210B8F8);
  LODWORD(STACK[0x204]) = (((((2 * v533) & 0x1CB7EAF2) - v533 + 1906576006) ^ 0x71A45810u) >> v452) | ((((v534 | 0xD102A85D) - (v534 | 0x2EFD57A2) + 788354978) ^ 0x8307A8E4) << LODWORD(STACK[0x264]) << LODWORD(STACK[0x230]));
  v536 = (2 * (((2 * v535) | 0x36FE5E44) - v535) - 922639940) ^ a84;
  v537 = (v492 ^ 0xA6FDFD9A) & (LODWORD(STACK[0x2B0]) ^ 0x3A0EC4AA) ^ STACK[0x2B0] & 0x55DB124F;
  v538 = (2 * ((v537 & 0x2A45DD41 ^ 0x411001) + (v537 & 0x55BA22BE ^ 0x503222B9)) - 2) ^ a87;
  LODWORD(STACK[0x220]) = v509;
  v539 = (((v509 & (v538 ^ 0xA3FCA355) ^ v510 & 0x79E2B333) & 0x76E8EF ^ 0x7648CE)
        + (v509 & (v538 ^ 0xA3FCA355) ^ v510 & 0x79E2B333 ^ 0x2000B321)
        - ((v509 & (v538 ^ 0xA3FCA355) ^ v510 & 0x79E2B333 ^ 0x2000B321) & 0x76E8EF)) ^ 0x1996D9EE;
  v540 = v506 & 0x447422FD ^ 0x4602268 ^ v514 & (v538 ^ 0x9E6A329B);
  LOBYTE(v498) = STACK[0x244];
  LOBYTE(v485) = STACK[0x240];
  LODWORD(STACK[0x378]) = (v539 << v498 << v485)
                        + (((v540 - ((2 * v540) & 0x6E997D8A) - 1219707195) ^ 0xB32C9E0D) >> LODWORD(STACK[0x3AC]) >> LODWORD(STACK[0x3C4]));
  v541 = STACK[0x200] & 0x21FD611 ^ 0x205C011 ^ (v523 ^ 0xF5384B45) & (LODWORD(STACK[0x200]) ^ 0x47B361D9);
  LODWORD(STACK[0x2B4]) = ((v510 & 0xD31B691D ^ 0x9308000C ^ v509 & (v536 ^ 0x6AB6015C)) << v136 << v497) ^ ((((((v536 ^ 0x878B752B) & v503 ^ v460 & 0x3E261D6A) & 0x4609F6A2 ^ 0x4209F6A0) + ((v536 ^ 0x878B752B) & v503 ^ v460 & 0x3E261D6A ^ 0x1422000A) - (((v536 ^ 0x878B752B) & v503 ^ v460 & 0x3E261D6A ^ 0x1422000A) & 0x4609F6A2)) ^ 0x7C0FEEAA) >> LODWORD(STACK[0x350]) >> LODWORD(STACK[0x348]));
  v542 = (2 * (((2 * v541) | 0x4CF99952) - v541) - 1291426130) ^ a91;
  v543 = v459 & 0x7D7406CC ^ 0x7804024C ^ v466 & (v542 ^ 0x14FF6661);
  v544 = v460 & 0x69E1E2BA ^ 0x4860A098 ^ v503 & (v542 ^ 0x6A8217);
  LODWORD(STACK[0x2B0]) = (v543 << LODWORD(STACK[0x318]) << LODWORD(STACK[0x324])) ^ (((((2 * v544) & 0x8D28BE1C)
                                                                                      - v544
                                                                                      + 963354865) ^ 0x592BA2FB) >> v527 >> v475);
  v545 = a88 ^ (2 * (STACK[0x234] & (LODWORD(STACK[0x2BC]) ^ 0x2D0AF67) ^ v523 & 0x37B55323));
  v546 = v466;
  v547 = v459 & 0x5CD86462 ^ 0x58804060 ^ v466 & (v545 ^ 0x5A696753);
  v548 = v460 & 0x1B2E5829 ^ 0x12A4009 ^ v503 & (v545 ^ 0x1D9F5B18);
  v549 = a89 ^ (2 * ((v492 ^ 0x74AC6FFD) & (a90 ^ 0x23861113) ^ a90 & 0x78A8028));
  LODWORD(STACK[0x2BC]) = ((((v548 | 0xAABBE56F) - (v548 | 0x55441A90) + 1430526608) ^ 0xA1BDBD66) >> v469)
                        + (v547 << v489);
  LODWORD(STACK[0x2A4]) = ((v506 & 0xF7C895B4 ^ 0x108091A0 ^ v514 & (v549 ^ 0xC6DBC214)) >> v475 >> v527) | ((v510 & 0xD89A5F3D ^ 0x9888062C ^ v509 & (v549 ^ 0xE989089D)) << v485 << v498);
  v550 = v459;
  v551 = v460;
  v552 = v510;
  v553 = v551;
  LOBYTE(v551) = STACK[0x330];
  v554 = STACK[0x220];
  v555 = v553;
  v556 = STACK[0x250];
  LOBYTE(v398) = STACK[0x254];
  v557 = v550;
  v558 = (v726 ^ 0xF0F36955) & (2 * (v726 & 0xFAFB8A50)) ^ v726 & 0xFAFB8A50;
  v559 = ((2 * (v726 ^ 0x706975)) ^ 0xF517C64A) & (v726 ^ 0x706975) ^ (2 * (v726 ^ 0x706975)) & 0xFA8BE324;
  v560 = (v559 ^ 0xF0024200) & (4 * v558) ^ v558;
  v561 = ((4 * (v559 ^ 0xA882125)) ^ 0xEA2F8C94) & (v559 ^ 0xA882125) ^ (4 * (v559 ^ 0xA882125)) & 0xFA8BE324;
  v562 = (v561 ^ 0xEA0B8000) & (16 * v560) ^ v560;
  v563 = ((16 * (v561 ^ 0x10806321)) ^ 0xA8BE3250) & (v561 ^ 0x10806321) ^ (16 * (v561 ^ 0x10806321)) & 0xFA8BE320;
  v564 = v562 ^ 0xFA8BE325 ^ (v563 ^ 0xA88A2200) & (v562 << 8);
  v565 = (v726 ^ (2
                * ((v564 << 16) & 0xFE03FFFF ^ v564 ^ ((v564 << 16) ^ 0x22050000) & (((v563 ^ 0x5201C125) << 8) & 0x7A8B0000 ^ (((v563 ^ 0x5201C125) << 8) ^ 0xBE30000) & (v563 ^ 0x5201C125) ^ 0x20000000)))) & 0x548BF15A ^ 0x9B058;
  v566 = ((((2 * v565) | 0x5B579D62) - v565 + 1381249359) & 0x595E2B56 ^ 0x59540144)
       + ((((2 * v565) | 0x5B579D62) - v565 + 1381249359) ^ 0xA62A7EB2)
       - (((((2 * v565) | 0x5B579D62) - v565 + 1381249359) ^ 0xA62A7EB2) & 0x595E2B57);
  v567 = v546;
  v568 = v566 & 0xD93FD3CD ^ 0xC9399340 ^ (v506 ^ 0xC9BC486F) & (v566 ^ 0xB81993BB);
  LODWORD(STACK[0x338]) = (((2 * v568) | 0x393C50D8) - v568 - 480127084) ^ 0x4DBE28A5;
  v569 = (2 * (v725 & 0xB9C71DCA)) & 0x63080010 ^ v725 & 0xB9C71DCA ^ ((2 * (v725 & 0xB9C71DCA)) | 2) & (v725 ^ 0xD2FF1DF0);
  v570 = (2 * (v725 ^ 0xD2FF1DF0)) & 0x6B38003A ^ 0x29080009 ^ ((2 * (v725 ^ 0xD2FF1DF0)) ^ 0xD6700076) & (v725 ^ 0xD2FF1DF0);
  v571 = (4 * v569) & 0x6B380038 ^ v569 ^ ((4 * v569) ^ 0xC) & v570;
  v572 = (4 * v570) & 0x6B380038 ^ 0x43180013 ^ ((4 * v570) ^ 0xACE000EC) & v570;
  v573 = v571 ^ (16 * v571) & 0x6B380030 ^ ((16 * v571) ^ 0xB0) & v572;
  v574 = (16 * v572) & 0x6B380030 ^ 0x4838000B ^ ((16 * v572) ^ 0xB38003B0) & v572;
  v575 = ((v573 ^ 0x6B380000) << 8) & 0x6B380000 ^ v573 ^ 0x6B380000 ^ (((v573 ^ 0x6B380000) << 8) ^ 0x38003B00) & v574;
  v576 = v725 ^ (2
               * ((v575 << 16) & 0x43280000 ^ v575 ^ ((v575 << 16) ^ 0x3B0000) & ((v574 << 8) & 0x6B380000 ^ 0x43380000 ^ ((v574 << 8) ^ 0x38000000) & v574)));
  v577 = ((v576 & 0xA7D13916 ^ 0x1013016)
        + (v576 & 0x4003812 ^ 0x5C0A4EC8)
        - ((v576 & 0xA7D13916 ^ 0x1013016) & 0x4003812)) ^ 0x4C445AD8;
  v578 = (((2 * v577) | 0xFB57DA12) - v577 - 2108419337) & 0x2D985FC8 ^ 0x1981C40 ^ (v506 ^ 0x3D1BC46A) & ((((2 * v577) | 0xFB57DA12) - v577 - 2108419337) ^ 0x18CD7C82);
  v579 = v554;
  LOBYTE(v553) = STACK[0x2F0];
  LOBYTE(v498) = STACK[0x2F8];
  v580 = (v724 ^ 0x19E75AB6) & (2 * (v724 & 0x99F79A84)) ^ v724 & 0x99F79A84;
  v581 = ((2 * (v724 ^ 0x9CD7FB6)) ^ 0x2075CA64) & (v724 ^ 0x9CD7FB6) ^ (2 * (v724 ^ 0x9CD7FB6)) & 0x903AE530;
  v582 = (v581 ^ 0x30C020) & (4 * v580) ^ v580;
  v583 = ((4 * (v581 ^ 0x900A2512)) ^ 0x40EB94C8) & (v581 ^ 0x900A2512) ^ (4 * (v581 ^ 0x900A2512)) & 0x903AE530;
  v584 = (v583 ^ 0x2A8400) & (16 * v582) ^ v582;
  v585 = ((16 * (v583 ^ 0x90106132)) ^ 0x3AE5320) & (v583 ^ 0x90106132) ^ (16 * (v583 ^ 0x90106132)) & 0x903AE530;
  v586 = v584 ^ 0x903AE532 ^ (v585 ^ 0x2A4100) & (v584 << 8);
  v587 = v724 ^ (2
               * ((v586 << 16) & 0x101A0000 ^ v586 ^ ((v586 << 16) ^ 0x41120000) & (((v585 ^ 0x9010A412) << 8) & 0x103A0000 ^ (((v585 ^ 0x9010A412) << 8) ^ 0x3AE50000) & (v585 ^ 0x9010A412) ^ 0x7E0000)));
  v588 = ((v587 & 0xB33659DE ^ 0x1316108C | 0x4D8A44DA) - (v587 & 0xB33659DE ^ 0x1316108C | 0xB275BB25) - 1300907227) ^ 0xC5BAC49A;
  v589 = (v588 | 0xE8C093D8) - (v588 | 0x173F6C27) + 390032423;
  v590 = v506 & 0x172CC38C ^ 0x7244200 ^ STACK[0x3E0] & (v589 ^ 0x8C77BCB7);
  LOBYTE(v485) = STACK[0x2E8];
  v591 = ((((2 * v578) & 0x9FA10D6C) - v578 + 808417609) ^ 0x393F3989) >> v485;
  v592 = ((v590 - ((2 * v590) & 0x48D01C28) + 610799124) ^ 0x334CCF94) >> v485;
  LOBYTE(v485) = STACK[0x2EC];
  LODWORD(STACK[0x2E8]) = v591 >> v485;
  v593 = v592 >> v485;
  v594 = (v723 ^ 0x61FEB25) & (2 * (v723 & 0xA45FEB05)) ^ v723 & 0xA45FEB05;
  v595 = ((2 * (v723 ^ 0x4EBBA92F)) ^ 0xD5C88454) & (v723 ^ 0x4EBBA92F) ^ (2 * (v723 ^ 0x4EBBA92F)) & 0xEAE44228;
  v596 = (v595 ^ 0x80C00000) & (4 * v594) ^ v594;
  v597 = ((4 * (v595 ^ 0x2A24422A)) ^ 0xAB9108A8) & (v595 ^ 0x2A24422A) ^ (4 * (v595 ^ 0x2A24422A)) & 0xEAE44228;
  v598 = (v597 ^ 0xAA800020) & (16 * v596) ^ v596;
  v599 = ((16 * (v597 ^ 0x40644202)) ^ 0xAE4422A0) & (v597 ^ 0x40644202) ^ (16 * (v597 ^ 0x40644202)) & 0xEAE44220;
  v600 = v598 ^ 0xEAE4422A ^ (v599 ^ 0xAA440200) & (v598 << 8);
  v601 = (v723 ^ (2
                * ((v600 << 16) & 0x48800000 ^ v600 ^ ((v600 << 16) ^ 0x400A0000) & (((v599 ^ 0x40A0400A) << 8) & 0x6AE40000 ^ 0x8800000 ^ (((v599 ^ 0x40A0400A) << 8) ^ 0x64420000) & (v599 ^ 0x40A0400A))))) & 0xB33659DE ^ 0x82005904;
  v602 = ((v601 | 0x84B1C83B) - (v601 | 0x7B4E37C4) + 2068723652) ^ 0xC8BD4C6F;
  v603 = (v602 | 0x9B50A796) - (v602 | 0x64AF5869) + 1689213033;
  LODWORD(STACK[0x2EC]) = (v552 & 0x7278DD2 ^ 0x7248480 ^ v554 & (v603 ^ 0xBAF692AB)) << LODWORD(STACK[0x268]) << LODWORD(STACK[0x26C]);
  v604 = v552 & 0x60B67216 ^ 0x60205016 ^ v554 & (v589 ^ 0xFBED0D2D);
  LODWORD(STACK[0x26C]) = v593 + (((((2 * v604) | 0x837B06E8) - v604 - 1102938996) ^ 0x139D166) << v398 << v556);
  v605 = v550 & 0x138B1A25 ^ 0x12020A25 ^ v567 & (v603 ^ 0xAE5A055C);
  LODWORD(STACK[0x268]) = (((v605 | 0x71EE5025) - (v605 | 0x8E11AFDA) - 1911443494) ^ 0x736C5824) << (v551 & 0x1B ^ 0x1A) << (v551 & 4);
  LOBYTE(v550) = STACK[0x368];
  v606 = v552;
  LOBYTE(v552) = *(_DWORD *)(v91 - 136);
  LOBYTE(v554) = STACK[0x328];
  v607 = v557;
  v608 = (v721 ^ 0xBB2C4EE2) & (2 * (v721 & 0xBC4D68E4)) ^ v721 & 0xBC4D68E4;
  v609 = ((2 * (v721 ^ 0xBB365FEA)) ^ 0xEF66E1C) & (v721 ^ 0xBB365FEA) ^ (2 * (v721 ^ 0xBB365FEA)) & 0x77B370C;
  v610 = (v609 ^ 0x2722600) & (4 * v608) ^ v608;
  v611 = ((4 * (v609 ^ 0x1091102)) ^ 0x1DECDC38) & (v609 ^ 0x1091102) ^ (4 * (v609 ^ 0x1091102)) & 0x77B370C;
  v612 = (v611 ^ 0x5681400) & (16 * v610) ^ v610;
  v613 = ((16 * (v611 ^ 0x2132306)) ^ 0x77B370E0) & (v611 ^ 0x2132306) ^ (16 * (v611 ^ 0x2132306)) & 0x77B3700;
  v614 = v612 ^ 0x77B370E ^ (v613 ^ 0x7333000) & (v612 << 8);
  v615 = v721 ^ (2
               * ((v614 << 16) & 0x2530000 ^ v614 ^ ((v614 << 16) ^ 0x370E0000) & (((v613 ^ 0x48070E) << 8) & 0x77B0000 ^ 0x4480000 ^ (((v613 ^ 0x48070E) << 8) ^ 0x7B370000) & (v613 ^ 0x48070E))));
  v616 = ((v615 & 0xE50141A4 ^ 0x500123B1) - 1) & 0xFFFFDFFF | v615 & 0xA69000;
  LODWORD(STACK[0x2F8]) = ((v606 & 0xD3602D7C ^ 0x9360042C ^ (v606 ^ 0xB5A486AC) & (v616 ^ 0x5515C6BE)) << v553 << v498) | ((v616 & 0x118580A0 ^ 0x588C0 ^ (v506 ^ 0x1061342) & (v616 ^ 0x8675EBC2)) >> LODWORD(STACK[0x3C8]) >> LODWORD(STACK[0x3D8]));
  v617 = (v719 ^ 0xAC942116) & (2 * (v719 & 0xCE868196)) ^ v719 & 0xCE868196;
  v618 = ((2 * (v719 ^ 0xBD98221E)) ^ 0xE63D4710) & (v719 ^ 0xBD98221E) ^ (2 * (v719 ^ 0xBD98221E)) & 0x731EA388;
  v619 = (v618 ^ 0x621C0200) & (4 * v617) ^ v617;
  v620 = ((4 * (v618 ^ 0x1102A088)) ^ 0xCC7A8E20) & (v618 ^ 0x1102A088) ^ (4 * (v618 ^ 0x1102A088)) & 0x731EA388;
  v621 = (v620 ^ 0x401A8200) & (16 * v619) ^ v619;
  v622 = ((16 * (v620 ^ 0x33042188)) ^ 0x31EA3880) & (v620 ^ 0x33042188) ^ (16 * (v620 ^ 0x33042188)) & 0x731EA380;
  v623 = v621 ^ 0x731EA388 ^ (v622 ^ 0x310A2000) & (v621 << 8);
  v624 = v719 ^ (2
               * ((v623 << 16) & 0x72120000 ^ v623 ^ ((v623 << 16) ^ 0x23880000) & (((v622 ^ 0x42148308) << 8) & 0x731E0000 ^ 0x611C0000 ^ (((v622 ^ 0x42148308) << 8) ^ 0x1EA30000) & (v622 ^ 0x42148308))));
  LODWORD(STACK[0x2F0]) = v557 & 0x4B0634AD ^ 0x4804002C ^ (((v624 & 0xE5A7D1A4 ^ 0x21C40F51)
                                                           + (v624 & 0x2100C120 ^ 0x1A00C028)
                                                           - ((v624 & 0xE5A7D1A4 ^ 0x21C40F51) & 0x2140CB60)) ^ 0x47F2D8C2) & v567;
  v625 = v555;
  v626 = (v716 ^ 0xD4C9FA67) & (2 * (v716 & 0xC48DFC46)) ^ v716 & 0xC48DFC46;
  v627 = ((2 * (v716 ^ 0xD5C11A63)) ^ 0x2299CC4A) & (v716 ^ 0xD5C11A63) ^ (2 * (v716 ^ 0xD5C11A63)) & 0x114CE624;
  v628 = (v627 ^ 0x8C000) & (4 * v626) ^ v626;
  v629 = ((4 * (v627 ^ 0x11442225)) ^ 0x45339894) & (v627 ^ 0x11442225) ^ (4 * (v627 ^ 0x11442225)) & 0x114CE624;
  v630 = (v629 ^ 0x1008001) & (16 * v628) ^ v628;
  v631 = ((16 * (v629 ^ 0x104C6621)) ^ 0x14CE6250) & (v629 ^ 0x104C6621) ^ (16 * (v629 ^ 0x104C6621)) & 0x114CE620;
  v632 = v630 ^ 0x114CE625 ^ (v631 ^ 0x104C6225) & (v630 << 8);
  v633 = ((((v716 ^ (2
                   * ((v632 << 16) & 0x400000 ^ v632 ^ ((v632 << 16) ^ 0x40210000) & (((v631 ^ 0x1008425) << 8) & 0x114C0000 ^ (((v631 ^ 0x1008425) << 8) ^ 0x4CE60000) & (v631 ^ 0x1008425))))) & 0x80C34E12 ^ 0x90BE82BB)
         - 1) ^ 0xC91A5077)
       - 1;
  v634 = (v715 ^ 0x258BFF4F) & (2 * (v715 & 0x89A3FF8E)) ^ v715 & 0x89A3FF8E;
  v635 = ((2 * (v715 ^ 0x37C9C85F)) ^ 0x7CD46FA2) & (v715 ^ 0x37C9C85F) ^ (2 * (v715 ^ 0x37C9C85F)) & 0xBE6A37D0;
  v636 = (v635 ^ 0x2C002600) & (4 * v634) ^ v634;
  v637 = ((4 * (v635 ^ 0x822A1051)) ^ 0xF9A8DF44) & (v635 ^ 0x822A1051) ^ (4 * (v635 ^ 0x822A1051)) & 0xBE6A37D0;
  v638 = (v637 ^ 0xB8281740) & (16 * v636) ^ v636;
  v639 = ((16 * (v637 ^ 0x6422091)) ^ 0xE6A37D10) & (v637 ^ 0x6422091) ^ (16 * (v637 ^ 0x6422091)) & 0xBE6A37D0;
  v640 = v638 ^ 0xBE6A37D1 ^ (v639 ^ 0xA6223500) & (v638 << 8);
  v641 = (v715 ^ (2
                * ((v640 << 16) & 0x600000 ^ v640 ^ ((v640 << 16) ^ 0x410000) & (((v639 ^ 0x184802C1) << 8) & 0x3E6A0000 ^ (((v639 ^ 0x184802C1) << 8) ^ 0x6A370000) & (v639 ^ 0x184802C1) ^ 0x400000)))) & 0x80C34E12 ^ 0xB2CF9085;
  v642 = ((2 * v641) | 0xBEB0A7E4) - v641 + 547859470;
  LODWORD(STACK[0x200]) = ((((v567 & (v642 ^ 0x4DCA9E1A) ^ v607 & 0x60FFFA64) & 0x6C00578E ^ 0x4C00478E)
                          + (v567 & (v642 ^ 0x4DCA9E1A) ^ v607 & 0x60FFFA64 ^ 0x205B9040)
                          - ((v567 & (v642 ^ 0x4DCA9E1A) ^ v607 & 0x60FFFA64 ^ 0x205B9040) & 0x6C00578E)) ^ 0x2CDF85AA) << LODWORD(STACK[0x284]) << LODWORD(STACK[0x278]);
  v643 = v567;
  LODWORD(STACK[0x284]) = v607 & 0x9CF4CABF ^ 0x9884422C ^ (v633 ^ 0x8531BF7A) & v567;
  v644 = v506 & 0xD36A85F2 ^ 0x414285E0 ^ STACK[0x3E0] & (v633 ^ 0xCAAFF037);
  LODWORD(STACK[0x338]) = (((2 * v644) | 0x85F1FFA4) - v644 - 1123614674) ^ 0x13B8FB90;
  v645 = v579;
  v646 = v606 & 0xA404A79E ^ 0x4042386 ^ v579 & (v642 ^ 0x8931C3E0);
  v647 = (v714 ^ 0xB01BAC9) & (2 * (v714 & 0x8B943CCA)) ^ v714 & 0x8B943CCA;
  v648 = ((2 * (v714 ^ 0x1821E2C9)) ^ 0x276BBC06) & (v714 ^ 0x1821E2C9) ^ (2 * (v714 ^ 0x1821E2C9)) & 0x93B5DE02;
  v649 = (v648 ^ 0x2219400) & (4 * v647) ^ v647;
  v650 = ((4 * (v648 ^ 0x90944201)) ^ 0x4ED7780C) & (v648 ^ 0x90944201) ^ (4 * (v648 ^ 0x90944201)) & 0x93B5DE00;
  v651 = (v650 ^ 0x2955800) & (16 * v649) ^ v649;
  v652 = ((16 * (v650 ^ 0x91208603)) ^ 0x3B5DE030) & (v650 ^ 0x91208603) ^ (16 * (v650 ^ 0x91208603)) & 0x93B5DE00;
  v653 = v651 ^ 0x93B5DE03 ^ (v652 ^ 0x1315C000) & (v651 << 8);
  v654 = (v714 ^ (2
                * ((v653 << 16) & 0x2050000 ^ v653 ^ ((v653 << 16) ^ 0x46010000) & (((v652 ^ 0x80A01E03) << 8) & 0x13B50000 ^ 0x2010000 ^ (((v652 ^ 0x80A01E03) << 8) ^ 0x35DE0000) & (v652 ^ 0x80A01E03))))) & 0xCC9B671A ^ 0x41A471A;
  LODWORD(STACK[0x278]) = (((v646 | 0x28C6A681) - (v646 | 0xD739597E) - 684107394) ^ 0x88C6038B) << v554 << v552;
  LODWORD(STACK[0x328]) = ((((v579 & (((v654 | 0x519A50DD) - (v654 | 0xAE65AF22) - 1369067742) ^ 0xCDAF800) ^ v606 & 0x378E5C42) & 0xE6DC9533 ^ 0xE65C8133)
                          + (v579 & (((v654 | 0x519A50DD) - (v654 | 0xAE65AF22) - 1369067742) ^ 0xCDAF800) ^ v606 & 0x378E5C42 ^ 0x10821400)
                          - ((v579 & (((v654 | 0x519A50DD) - (v654 | 0xAE65AF22) - 1369067742) ^ 0xCDAF800) ^ v606 & 0x378E5C42 ^ 0x10821400) & 0xE6DC9533)) ^ 0xC1D28533) << v554 << v552;
  v655 = (v713 ^ 0xF76A34A6) & (2 * (v713 & 0xF67026B6)) ^ v713 & 0xF67026B6;
  v656 = ((2 * (v713 ^ 0xFF6A3DAA)) ^ 0x12343638) & (v713 ^ 0xFF6A3DAA) ^ (2 * (v713 ^ 0xFF6A3DAA)) & 0x91A1B1C;
  v657 = (v656 ^ 0x1218) & (4 * v655) ^ v655;
  v658 = ((4 * (v656 ^ 0x90A0904)) ^ 0x24686C70) & (v656 ^ 0x90A0904) ^ (4 * (v656 ^ 0x90A0904)) & 0x91A1B1C;
  v659 = (v658 ^ 0x8080C) & (16 * v657) ^ v657;
  v660 = ((16 * (v658 ^ 0x912130C)) ^ 0x91A1B1C0) & (v658 ^ 0x912130C) ^ (16 * (v658 ^ 0x912130C)) & 0x91A1B10;
  v661 = v659 ^ 0x91A1B1C ^ (v660 ^ 0x100111C) & (v659 << 8);
  v662 = v713 ^ (2
               * ((v661 << 16) & 0x80000 ^ v661 ^ ((v661 << 16) ^ 0x1B1C0000) & (((v660 ^ 0x81A0A1C) << 8) & 0x91A0000 ^ (((v660 ^ 0x81A0A1C) << 8) ^ 0x1A1B0000) & (v660 ^ 0x81A0A1C) ^ 0x1000000)));
  v663 = (v662 & 0xCC9B671A ^ 0x7E59B9B5) & (v607 ^ 0xF9A0436C) ^ v607 & 0x5C040A32;
  *(_DWORD *)(v91 - 136) = ((v663 & 0x10967A82 ^ 0x10B67AC0) + (v663 ^ 0x40000012) - ((v663 ^ 0x40000012) & 0x10967A82)) ^ 0x8B278F0;
  LOBYTE(v552) = STACK[0x270];
  v664 = STACK[0x274];
  v665 = (v606 ^ 0x9FEC8628) & (v662 & 0xCC9B671A ^ 0xDFE68363) ^ v606 & 0xFDBB30E4;
  LODWORD(STACK[0x350]) = ((v665 & 0xF4E597CC ^ 0x64448749) + (v665 & 0xB1A6033) - 1) ^ 0xD9EC87EC;
  LOBYTE(v514) = STACK[0x30C];
  LOBYTE(v567) = STACK[0x310];
  LOBYTE(v554) = STACK[0x374];
  v666 = (v712 ^ 0x83BB2C53) & (2 * (v712 & 0xAA338D5A)) ^ v712 & 0xAA338D5A;
  v667 = ((2 * (v712 ^ 0x93DA26D7)) ^ 0x73D3571A) & (v712 ^ 0x93DA26D7) ^ (2 * (v712 ^ 0x93DA26D7)) & 0x39E9AB8C;
  v668 = (v667 ^ 0x31C00308) & (4 * v666) ^ v666;
  v669 = ((4 * (v667 ^ 0x828A885)) ^ 0xE7A6AE34) & (v667 ^ 0x828A885) ^ (4 * (v667 ^ 0x828A885)) & 0x39E9AB8C;
  v670 = (v669 ^ 0x21A0AA00) & (16 * v668) ^ v668;
  v671 = ((16 * (v669 ^ 0x18490189)) ^ 0x9E9AB8D0) & (v669 ^ 0x18490189) ^ (16 * (v669 ^ 0x18490189)) & 0x39E9AB80;
  v672 = v670 ^ 0x39E9AB8D ^ (v671 ^ 0x1888A800) & (v670 << 8);
  v673 = v712 ^ (2
               * ((v672 << 16) & 0x38400000 ^ v672 ^ ((v672 << 16) ^ 0x2B8D0000) & (((v671 ^ 0x2161030D) << 8) & 0x39E90000 ^ 0x10400000 ^ (((v671 ^ 0x2161030D) << 8) ^ 0x69AB0000) & (v671 ^ 0x2161030D))));
  v674 = ((v673 & 0x70AC4F9C ^ 0x500C098C)
        + (v673 & 0x202C4208 ^ 0x2722D222)
        - ((v673 & 0x70AC4F9C ^ 0x500C098C) & 0x202C4208)) ^ 0x67D690AE;
  v675 = ((2 * v674) | 0xE48EE1B2) - v674 - 1917284569;
  v728 = v606 & 0x8C0615E9 ^ 0x8C0404A8 ^ v579 & (v675 ^ 0xD64343F6);
  v676 = ((((v675 ^ 0xE836EAB2) & v643 ^ v607 & 0xB273BCAD) & 0x2E3787B4 ^ 0x2E350714)
        + ((v675 ^ 0xE836EAB2) & v643 ^ v607 & 0xB273BCAD ^ 0x1002A0A9)
        - (((v675 ^ 0xE836EAB2) & v643 ^ v607 & 0xB273BCAD ^ 0x1002A0A9) & 0x2E3787B4)) ^ 0x8E352731;
  LODWORD(STACK[0x358]) = v676;
  v677 = (v506 ^ 0xDAFA3843) & (v675 ^ 0x5A45561F) ^ v675 & 0xCA79A3E1;
  LODWORD(STACK[0x348]) = ((v677 & 0x4CDCC401 ^ 0xCD48400) + (v677 ^ 0x522B51C5) - ((v677 ^ 0x522B51C5) & 0x4CDCC401)) ^ 0x54B697C5;
  LODWORD(STACK[0x324]) = v676 << LODWORD(STACK[0x324]) << LODWORD(STACK[0x318]);
  v678 = (v711 ^ 0xC2639523) & (2 * (v711 & 0xD08BD9AB)) ^ v711 & 0xD08BD9AB;
  v679 = ((2 * (v711 ^ 0xE3660775)) ^ 0x67DBBDBC) & (v711 ^ 0xE3660775) ^ (2 * (v711 ^ 0xE3660775)) & 0x33EDDEDC;
  v680 = (v679 ^ 0x2498C9C) & (4 * v678) ^ v678;
  v681 = ((4 * (v679 ^ 0x10244242)) ^ 0xCFB77B78) & (v679 ^ 0x10244242) ^ (4 * (v679 ^ 0x10244242)) & 0x33EDDEDC;
  v682 = (v681 ^ 0x3A55A50) & (16 * v680) ^ v680;
  v683 = ((16 * (v681 ^ 0x30488486)) ^ 0x3EDDEDE0) & (v681 ^ 0x30488486) ^ (16 * (v681 ^ 0x30488486)) & 0x33EDDED0;
  v684 = v682 ^ 0x33EDDEDE ^ (v683 ^ 0x32CDCC00) & (v682 << 8);
  v685 = (v711 ^ (2
                * ((v684 << 16) & 0x30610000 ^ v684 ^ ((v684 << 16) ^ 0x50500000) & (((v683 ^ 0x120121E) << 8) & 0x33ED0000 ^ 0x10210000 ^ (((v683 ^ 0x120121E) << 8) ^ 0x6DDE0000) & (v683 ^ 0x120121E))))) & 0xE0E2E44A ^ 0x60026000;
  v686 = (((2 * v685) | 0x54C4733C) - v685 + 1436403298) ^ 0xDAA32B9F;
  v687 = (v686 | 0xE11840A4) - (v686 | 0x1EE7BF5B) + 518504283;
  v688 = v607 & 0x91708529 ^ 0x90000128 ^ v643 & (v687 ^ 0x901AA1AB);
  v689 = v687 & 0xAD55AB5D ^ 0x2C458911 ^ (v555 ^ 0x36911CF) & (v687 ^ 0x16A2482);
  LODWORD(STACK[0x318]) = ((v689 | 0xF6D0B6CF) - (v689 | 0x92F4930) + 154093872) ^ 0xDBD51FDE;
  LODWORD(STACK[0x264]) = v688 << LODWORD(STACK[0x230]) << LODWORD(STACK[0x264]);
  v690 = (v727 ^ 0xA7450CA6) & (2 * (v727 & 0xC04548B4)) ^ v727 & 0xC04548B4;
  v691 = ((2 * (v727 ^ 0x27450CC6)) ^ 0xCE0088E4) & (v727 ^ 0x27450CC6) ^ (2 * (v727 ^ 0x27450CC6)) & 0xE7004470;
  v692 = (v691 ^ 0x2000060) & (4 * v690) ^ v690;
  v693 = ((4 * (v691 ^ 0x21004412)) ^ 0x9C0111C8) & (v691 ^ 0x21004412) ^ (4 * (v691 ^ 0x21004412)) & 0xE7004470;
  v694 = (v693 ^ 0x84000040) & (16 * v692) ^ v692;
  v695 = ((16 * (v693 ^ 0x63004432)) ^ 0x70044720) & (v693 ^ 0x63004432) ^ (16 * (v693 ^ 0x63004432)) & 0xE7004470;
  v696 = v694 ^ 0xE7004472 ^ (v695 ^ 0x60004400) & (v694 << 8);
  v697 = (v727 ^ (2
                * ((v696 << 16) & 0x60000000 ^ v696 ^ ((v696 << 16) ^ 0x40700000) & (((v695 ^ 0x87000052) << 8) & 0x67000000 ^ (((v695 ^ 0x87000052) << 8) ^ 0x440000) & (v695 ^ 0x87000052) ^ 0x60000000)))) & 0xE0E2E44A ^ 0x6020A448;
  v698 = (((2 * v697) & 0x80C0C804) - v697 + 630948808) ^ 0xB593F1C8;
  v699 = v698 - ((2 * v698) & 0x40497C54) - 1607155925;
  v700 = v606 & 0x53F42E98 ^ 0x3342688 ^ v645 & (v699 ^ 0xF3D9F59E);
  v701 = ((v700 | 0xDD039052) - (v700 | 0x22FC6FAD) + 586969005) ^ 0xCDD3B052;
  v702 = v687 & 0x2AF6DB1B ^ 0x22740211 ^ (v506 ^ 0x3A7540B9) & (v687 ^ 0x16A2482);
  v703 = (((v702 | 0xD11E419D) - (v702 | 0x2EE1BE62) + 786546274) ^ 0xF308438E) >> v550 >> v554;
  v704 = v701 << v664 << v552;
  v705 = STACK[0x238];
  v706 = 2 * LODWORD(STACK[0x238]);
  LODWORD(STACK[0x230]) = a73 - (v706 & 0x362BDE92) + 1135365273;
  LODWORD(STACK[0x274]) = a73 - (v706 & 0x66CA7994) - 604268006;
  LODWORD(STACK[0x368]) = a73 - (v706 & 0x5BCD34D0) - 696453192;
  LODWORD(STACK[0x270]) = a73 - 2 * (v705 & 0x25416EAE ^ a73 & 8) - 841495562;
  LOBYTE(v555) = STACK[0x330] & 0x1F ^ 0x1A;
  LODWORD(STACK[0x310]) = *(_DWORD *)(v91 - 136) << v567 << v514;
  LODWORD(STACK[0x30C]) = v728 << v555;
  LOBYTE(v567) = STACK[0x254];
  v707 = STACK[0x250];
  LODWORD(STACK[0x2FC]) = (v606 & 0xE0CE2739 ^ 0xA0CC0628 ^ STACK[0x220] & (v687 ^ 0xE1A403BB)) << LODWORD(STACK[0x288]) << LODWORD(STACK[0x28C]);
  v708 = v688 << v567 << v707;
  LODWORD(STACK[0x360]) = v703 + v708;
  LODWORD(STACK[0x364]) = v703 | v708;
  LODWORD(STACK[0x300]) = v704 | ((v699 & 0x47FBE84F ^ 0x29C806 ^ (v699 ^ 0xA02DDB06) & (v625 ^ 0xE9C752DD)) >> LODWORD(STACK[0x3D4]) >> LODWORD(STACK[0x3D0]));
  LODWORD(STACK[0x374]) = ((LODWORD(STACK[0x2CC]) ^ 0x977A53DA) + 1753590822) ^ ((LODWORD(STACK[0x2CC]) ^ 0x9E7D378E)
                                                                               + 1635960946) ^ ((LODWORD(STACK[0x2CC]) ^ 0x747F9F84)
                                                                                              - 1954520964);
  LODWORD(STACK[0x374]) -= 294576;
  v709 = (uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v91 - 120) + 8 * SLODWORD(STACK[0x2D0])) - 8);
  *(_DWORD *)(v91 - 136) = *(_DWORD *)(v91 - 152);
  return v709(LODWORD(STACK[0x3A8]));
}

uint64_t sub_1001EFAD0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,int a25,int a26,int a27,int a28,int a29,int a30,int a31,int a32,char a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,int a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int a85;
  int a86;
  int a87;
  int a88;
  int a89;
  int a90;
  int a91;
  int a92;
  int a93;
  int a94;
  int a95;
  int a96;
  int a97;
  int a98;
  int a99;
  int a100;
  int a101;
  int a102;
  int a103;
  int a104;
  int a105;
  int a106;
  int a107;
  int a108;
  int a109;
  char a110;
  char a111;
  char a112;
  char a113;
  uint64_t a114;
  uint64_t a115;
  uint64_t a116;
  uint64_t a117;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  uint64_t v122;
  int v123;
  int v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  int v150;
  uint64_t v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  BOOL v158;
  int v160;
  unsigned int v161;
  int v163;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  int v199;
  unint64_t v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  BOOL v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  unsigned int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  uint64_t v406;
  _DWORD *v407;
  uint64_t v408;
  _DWORD *v409;
  uint64_t v410;
  _DWORD *v411;
  int v412;
  int v413;
  uint64_t v414;
  _DWORD *v415;
  uint64_t v416;
  _DWORD *v417;
  uint64_t v418;
  _DWORD *v419;
  uint64_t v420;
  _DWORD *v421;
  int v422;
  int v423;
  uint64_t v424;
  int v425;
  int v426;
  unsigned int v427;
  char *v428;
  int v429;
  unsigned int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  uint64_t v436;
  char *v437;
  uint64_t v438;
  char *v439;
  uint64_t v440;
  char *v441;
  uint64_t v442;
  char *v443;
  uint64_t v444;
  char *v445;
  unsigned int v446;
  char *v447;
  int v448;
  int v449;
  unsigned int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  uint64_t v457;
  char *v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  _DWORD *v462;
  int v463;
  int v464;
  char *v465;
  unsigned int v466;
  char *v467;
  char *v468;
  char *v469;
  char *v470;
  char *v471;
  uint64_t v472;
  char *v473;
  uint64_t v474;
  char *v475;
  uint64_t v476;
  char *v477;
  uint64_t v478;
  char *v479;
  char *v480;
  uint64_t v481;
  char *v482;
  uint64_t v483;
  char *v484;
  uint64_t v485;
  char *v486;
  uint64_t v487;
  _DWORD *v488;
  _DWORD *v489;
  uint64_t v490;
  _DWORD *v491;
  uint64_t v492;
  _DWORD *v493;
  unint64_t v494;
  char *v495;
  uint64_t v496;
  char *v497;
  uint64_t v498;
  char *v499;
  char *v500;
  uint64_t v501;
  char *v502;
  uint64_t v503;
  char *v504;
  uint64_t v505;
  char *v506;
  uint64_t v507;
  char *v508;
  uint64_t v509;
  char *v510;
  _DWORD *v511;
  int v512;
  unsigned int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  _DWORD *v518;
  _DWORD *v519;
  uint64_t v520;
  _DWORD *v521;
  uint64_t v522;
  _DWORD *v523;
  _DWORD *v524;
  _DWORD *v525;
  _DWORD *v526;
  _DWORD *v527;
  int v528;
  uint64_t v529;
  _DWORD *v530;
  uint64_t v531;
  _DWORD *v532;
  uint64_t v533;
  _DWORD *v534;
  _DWORD *v535;
  uint64_t v536;
  _DWORD *v537;
  int v538;
  int v539;
  _DWORD *v540;
  uint64_t v541;
  _DWORD *v542;
  uint64_t v543;
  _DWORD *v544;
  uint64_t v545;
  _DWORD *v546;
  uint64_t v547;
  _DWORD *v548;
  uint64_t v549;
  _DWORD *v550;
  uint64_t v551;
  _DWORD *v552;
  uint64_t v553;
  _DWORD *v554;
  _DWORD *v555;
  uint64_t v556;
  _DWORD *v557;
  uint64_t v558;
  _DWORD *v559;
  int v560;
  _DWORD *v561;
  uint64_t v562;
  _DWORD *v563;
  uint64_t v564;
  _DWORD *v565;
  _DWORD *v566;
  uint64_t v567;
  _DWORD *v568;
  uint64_t v569;
  _DWORD *v570;
  unsigned int v571;
  _DWORD *v572;
  unsigned int v573;
  unsigned int v574;
  unsigned int v575;
  char v576;
  unint64_t v577;
  int v578;
  int v579;
  _DWORD *v580;
  _DWORD *v581;
  _DWORD *v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  uint64_t v594;
  _DWORD *v595;
  uint64_t v596;
  _DWORD *v597;
  uint64_t v598;
  _DWORD *v599;
  uint64_t v600;
  _DWORD *v601;
  _DWORD *v602;
  int v603;
  int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  unsigned int v609;
  unsigned int v610;
  int v611;
  _DWORD *v612;
  int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  int v617;
  unsigned int v618;
  unsigned int v619;
  _DWORD *v620;
  _DWORD *v621;
  _DWORD *v622;
  _DWORD *v623;
  unint64_t v624;
  _DWORD *v625;
  _DWORD *v626;
  _DWORD *v627;
  unint64_t v628;
  _DWORD *v629;
  _DWORD *v630;
  _DWORD *v631;
  _DWORD *v632;
  uint64_t v633;
  _DWORD *v634;
  int v635;
  int v636;
  unsigned int v637;
  int v638;
  int v639;
  int v640;
  unsigned int v641;
  int v642;
  int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  int v647;
  int v648;
  int v649;
  unsigned int v650;
  int v651;
  int v652;
  int v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  BOOL v669;
  unsigned int v670;
  unsigned int v671;
  int v672;
  unsigned int v673;
  unsigned int v674;
  int v675;
  unsigned int v676;
  int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  uint64_t v681;
  unsigned int v682;
  unsigned int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  unsigned int v695;
  unsigned int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  unsigned int v700;
  int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  unsigned int v707;
  unsigned int v708;
  unsigned int v709;
  unsigned int v710;
  unsigned int v711;
  unsigned int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  uint64_t v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  int v730;
  unsigned int v731;
  int v732;
  unsigned int v733;
  unsigned int v734;
  unsigned int v735;
  int v736;
  unsigned int v737;
  uint64_t v738;
  uint64_t v739;
  unsigned int v740;
  int v741;
  int v742;
  int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  int v750;
  unsigned int v751;
  unsigned int v752;
  int v753;
  unsigned int v754;
  int v755;
  unsigned int v756;
  int v757;
  int v758;
  int v759;
  unsigned int v760;
  char *v761;
  unsigned int v762;
  unsigned int v763;
  uint64_t v764;
  char *v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  BOOL v770;
  int v771;
  int v772;
  int v773;

  LODWORD(STACK[0x464]) = v118;
  LODWORD(STACK[0x230]) = 0;
  v126 = (v118 - 116944128) & 0x6F87FAB;
  v127 = (v118 - 3123) | 0xA0C;
  LODWORD(STACK[0x274]) = v127;
  STACK[0x228] = v126;
  v128 = ((v117 & 0xFFFFFFFD ^ 0x18BABDF1)
        + (v117 & (v127 - 484553641) ^ 0xE3044206)
        - ((v117 & 0xFFFFFFFD ^ 0x18BABDF1) & (v126 - 484558972))) ^ 0x6B1668F6;
  v129 = v117;
  v130 = ((v117 & 0xFFFFFFF2 ^ 0x1978D1F0)
        + (v117 & 0x2B4F2F42 ^ 0x22072E02)
        - ((v117 & 0xFFFFFFF2 ^ 0x1978D1F0) & 0x2B4F2F42)) ^ 0x225D0F40;
  v131 = ((2 * v130) & 0xC07D9814) - v130;
  v132 = (v128 - ((2 * v128) & 0x6D186D28u) + 915158678) ^ 0xEDE38D65;
  STACK[0x358] = v132;
  LODWORD(v132) = *(unsigned __int8 *)(a117 + (*(unsigned __int8 *)(v122 + v132) ^ 0x7ALL));
  v133 = ((v117 & 0xFFFFFFFC ^ 0xA773E43D) - 1) ^ 0xECAEE06FLL;
  STACK[0x368] = v133;
  LODWORD(v133) = *(unsigned __int8 *)(a117 + (*(unsigned __int8 *)(v122 + v133) ^ 0xDCLL)) ^ 0x42;
  LODWORD(v133) = ((v133 >> 1) & 0x11 ^ v133 | ((v132 ^ 0xF5 ^ (v132 >> 1) & 0x11) << 8))
                - 2
                * ((((v133 >> 1) & 0x11 ^ v133) & 0xBB | ((v132 ^ 0xF5 ^ (v132 >> 1) & 0x11) << 8) & 0xDEBB) ^ ((v133 >> 1) & 0x11 ^ v133) & 8);
  LODWORD(STACK[0x360]) = v117 & 0xFFFFFFF7;
  LODWORD(v132) = ((v129 & 0xFFFFFFF7 ^ 0x4EC12963)
                 + (v129 & 0x4CC452D0 ^ 0x45290)
                 - ((v129 & 0xFFFFFFF7 ^ 0x4EC12963) & 0x4CC452D0)) ^ 0xA6E7C254;
  LODWORD(v126) = (v117 & 0xFFFFFFFE ^ 0xDA3EF345) - ((2 * (v117 & 0xFFFFFFFE ^ 0xDA3EF345)) & 0x57C3840A);
  v134 = (v131 + 532755444) ^ 0x4476C65BLL;
  STACK[0x348] = v134;
  v135 = (v126 + 736215557);
  v136 = *(unsigned __int8 *)(v122 + v134);
  LODWORD(v134) = *(unsigned __int8 *)(a114 + (v136 ^ 0x63));
  v137 = v135 ^ 0xBA023511;
  STACK[0x340] = v135 ^ 0xBA023511;
  LODWORD(v135) = v136 ^ 0xBF;
  v138 = *(unsigned __int8 *)(v122
                            + ((v132 - ((2 * (_DWORD)v132) & 0xED83EBE0) - 155060752) ^ 0x19FE484FLL));
  LODWORD(v132) = v135 ^ v134;
  LOBYTE(v135) = *(_BYTE *)(a115 + (*(unsigned __int8 *)(v122 + v137) ^ 0x4FLL));
  LOBYTE(v134) = v135 ^ 0x98 ^ (-16 * v135);
  LODWORD(v135) = *(unsigned __int8 *)(a115 + (v138 ^ 0x9F));
  LOBYTE(v138) = -16 * v135;
  LODWORD(v135) = v135 ^ 0xFFFFFFE2 ^ (-16 * v135);
  LODWORD(v138) = v134 << (v138 & 0x10) << (v138 & 0x10 ^ 0x10);
  v139 = (((2 * (v129 & 0xFFFFFFFB ^ 0x29BAC021)) | 0xB50EC3E2) - (v129 & 0xFFFFFFFB ^ 0x29BAC021) - 1518821873) ^ 0x38E0A584;
  STACK[0x350] = v139;
  LODWORD(v139) = *(unsigned __int8 *)(a117 + (*(unsigned __int8 *)(v122 + v139) ^ 0x46));
  v140 = v129 ^ 0x4BDD0450u;
  STACK[0x338] = v140;
  LODWORD(v140) = *(unsigned __int8 *)(a115 + (*(unsigned __int8 *)(v122 + v140) ^ 0xBDLL));
  LODWORD(v133) = (v133 - 1122115917) ^ (v138 - ((2 * v138) & 0x1C401D8) - 538785812) ^ 0x4AD5E4A5;
  LODWORD(v138) = (((v140 ^ 0xB3 ^ (-16 * (_DWORD)v140))
                  - ((2 * (v140 ^ 0xB3 ^ (-16 * (_DWORD)v140))) & 0xFC)) << 24)
                - 0x2000000;
  LODWORD(v133) = (((v138 ^ 0x1FFFFFF) & v133 ^ v138 & 0xD7000000) & 0x57478CB9 ^ 0x12438CB8)
                + ((v138 ^ 0x1FFFFFF) & v133 ^ v138 & 0xD7000000 ^ 0xC5140001)
                - (((v138 ^ 0x1FFFFFF) & v133 ^ v138 & 0xD7000000 ^ 0xC5140001) & 0x57478CB9);
  v141 = ((v129 & 0xC74D82C0 ^ 0x4D0001) + (v129 & 0x38B27D3A ^ 0x10003829) - 2) ^ 0x5B903C7DLL;
  STACK[0x328] = v141;
  LOBYTE(v141) = *(_BYTE *)(a115 + (*(unsigned __int8 *)(v122 + v141) ^ 0x71));
  LODWORD(v141) = (v141 ^ 0x15 ^ (-16 * v141)) << 16;
  LODWORD(v141) = ((((v139 ^ 0xFA ^ (v139 >> 1) & 0x11111111) << 24) ^ 0x36028687) & ~(_DWORD)v141 | v141 & 0xFFFDFFFF) ^ 0x498C5060;
  v142 = *(unsigned __int8 *)(v122
                            + (((v129 & 0x8D277446 ^ 0xD04240D) + (v129 & 0x72D88BB0 ^ 0x30888B81) - 2) ^ 0x7651ABD5));
  LODWORD(v142) = v142 ^ 0xAB ^ *(unsigned __int8 *)(a114 + (v142 ^ 0x17));
  LODWORD(v137) = (v129 & 0xA4A44C44 ^ 0xA40C07 | v129 & 0x5B5BB3B0) - 1;
  LODWORD(STACK[0x2F8]) = v129 & 0xFFFFFFF1;
  v143 = (*(_BYTE *)(a117 + (*(unsigned __int8 *)(v122 + (v129 & 0xFFFFFFF1 ^ 0x4BDD045E)) ^ 0xC3)) ^ 0xB8 ^ (*(_BYTE *)(a117 + (*(unsigned __int8 *)(v122 + (v129 & 0xFFFFFFF1 ^ 0x4BDD045E)) ^ 0xC3)) >> 1) & 0x11) << 8;
  LODWORD(v132) = ((((_DWORD)v132 << 16) ^ 0xC3D46B71) & ~v143 | v143 & 0x9400) ^ 0x1C031480;
  v144 = ((v129 & 0xFFFFFFF0 ^ 0x334B0180) - ((2 * (v129 & 0xFFFFFFF0 ^ 0x334B0180)) & 0xB28D16C0) + 1497795427) ^ 0x5E6FDB53;
  v145 = (((2 * v144) | 0x350F11C6) - v144 - 445090019) ^ 0x6538DD0CLL;
  STACK[0x330] = v145;
  v146 = *(unsigned __int8 *)(v122 + v145);
  LODWORD(STACK[0x324]) = v129 & 0xFFFFFFF3;
  LODWORD(v132) = (-47 * *(_BYTE *)(a116 + (v146 ^ 0xC2))) & 0xDD ^ 0x180045D ^ ((-2012410061
                                                                                - (v132 | 0x880D0F33)
                                                                                + (v132 | 0x77F2F0CC)) ^ 0xF64B7D1F) & ((-47 * *(_BYTE *)(a116 + (v146 ^ 0xC2))) ^ 0xFFFFFF93);
  LODWORD(v146) = *(unsigned __int8 *)(a115
                                     + (*(unsigned __int8 *)(v122
                                                           + ((((2 * (v129 & 0xFFFFFFF3 ^ 0x77378F44)) & 0xD556D266)
                                                             - (v129 & 0xFFFFFFF3 ^ 0x77378F44)
                                                             - 1789618492) ^ 0xA9BE1DDCLL)) ^ 0x6CLL));
  LODWORD(v132) = ((((2 * v132) & 0x24018560) - v132 + 1845443919) ^ 0xCD280082) & (((v146 ^ (-16 * (_DWORD)v146) ^ 0xFFFFFFCF) << 24) ^ 0x713889CA) ^ (((2 * v132) & 0x24018560) - v132 + 1845443919) & 0x3C77635;
  LODWORD(STACK[0x364]) = v129;
  LODWORD(v140) = (v129 & 0xFFFFFFF9 ^ 0x8607FBF0)
                + (v129 & 0x3C90BCB1 ^ 0x38900403)
                - ((v129 & 0xFFFFFFF9 ^ 0x8607FBF0) & 0x3C90BCB1);
  LODWORD(v137) = (-47
                                  * *(_BYTE *)(a116
                                             + (*(unsigned __int8 *)(v122
                                                                   + (((v137 & 0xFCF33E20 ^ 0x64B12820)
                                                                     + (v137 ^ 0x994A96DE)
                                                                     - ((v137 ^ 0x994A96DE) & 0xFCF33E20)) ^ 0x2EC0A0A3)) ^ 0xB0))) ^ 0x2A;
  v147 = (813386347 - (v129 & 0xFFFFFFF5 ^ 0xA4A2C1B7) + ((2 * (v129 & 0xFFFFFFF5 ^ 0xA4A2C1B7)) | 0x9F096B2A)) ^ 0x20FB7078;
  STACK[0x310] = v147;
  LODWORD(v142) = ((v135 & 0x3F) << 24) | (((-47
                                                            * *(_BYTE *)(a116
                                                                       + (*(unsigned __int8 *)(v122 + v147) ^ 0x46))) ^ 0xA5) << 8) | v137 | ((_DWORD)v142 << 16);
  LODWORD(v135) = ((((~(v135 >> 6) << 30) ^ 0x48597F00) + 173748288) ^ ((~(v135 >> 6) << 30)
                                                                                    + 1243844416) ^ (((~(v135 >> 6) << 30) ^ 0x4C4BDC33) + 239702797))
                + 449119271
                + (((v142 ^ 0xDBEBC7CD) + 945445817) ^ ((v142 ^ 0x5BAF97A9) - 1205990435) ^ ((v142 ^ 0x825F058C)
                                                                                           + 1643026938));
  LODWORD(v142) = (v135 ^ 0x814DFAF3) & (2 * (v135 & 0xC18DE2FB)) ^ v135 & 0xC18DE2FB;
  LODWORD(v137) = ((2 * (v135 ^ 0x82567AE1)) ^ 0x87B73034) & (v135 ^ 0x82567AE1) ^ (2 * (v135 ^ 0x82567AE1)) & 0x43DB981A;
  LODWORD(v142) = (v137 ^ 0x2131010) & (4 * v142) ^ v142;
  LODWORD(v137) = ((4 * (v137 ^ 0x4048880A)) ^ 0xF6E6068) & (v137 ^ 0x4048880A) ^ (4 * (v137 ^ 0x4048880A)) & 0x43DB9818;
  LODWORD(v142) = (v137 ^ 0x34A0000) & (16 * v142) ^ v142;
  LODWORD(v137) = ((16 * (v137 ^ 0x40919812)) ^ 0x3DB981A0) & (v137 ^ 0x40919812) ^ (16 * (v137 ^ 0x40919812)) & 0x43DB9810;
  LODWORD(v142) = v142 ^ 0x43DB981A ^ (v137 ^ 0x1998000) & ((_DWORD)v142 << 8);
  LODWORD(v142) = ((_DWORD)v142 << 16) & 0x43DB0000 ^ v142 ^ (((_DWORD)v142 << 16) ^ 0x181A0000) & (((v137 ^ 0x4242181A) << 8) & 0x43DB0000 ^ 0x430000 ^ (((v137 ^ 0x4242181A) << 8) ^ 0x5B980000) & (v137 ^ 0x4242181A));
  v148 = ((v140 & 0xB0CF2ADF ^ 0x804E024C)
        + (v140 ^ 0x3CB1BCB3)
        - ((v140 ^ 0x3CB1BCB3) & 0xB0CF2ADF)) ^ 0x7D34D579;
  STACK[0x300] = v148;
  LODWORD(v140) = v135 ^ (2 * v142);
  LODWORD(v135) = *(unsigned __int8 *)(a115 + (*(unsigned __int8 *)(v122 + v148) ^ 0x9CLL));
  LODWORD(v135) = (((v135 ^ 0xEB ^ (-16 * v135))
                  - ((2 * (v135 ^ 0xEB ^ (-16 * (_DWORD)v135))) & 0x182)) << 8)
                - 1359232768;
  LODWORD(v142) = (17669303
                 - (v129 & 0xFFFFFFF8 ^ 0xDFBD52B0 | 0x10D9CB7)
                 + (v129 & 0xFFFFFFF8 ^ 0xDFBD52B0 | 0xFEF26348)) ^ 0x8F2339DB;
  LODWORD(v148) = v142 - ((2 * v142) & 0x71A98BF8);
  LODWORD(v142) = (v133 ^ 0xAD1721A3) & *(_DWORD *)(v125 - 144) ^ a89;
  LODWORD(v133) = v133 ^ 0x7C03EF54;
  LODWORD(STACK[0x270]) = v133;
  LODWORD(v133) = v133 ^ (2
                        * ((v142 & 0x26CDBA24 ^ 0x2689BA24) + (v142 ^ 0xC0440082) - ((v142 ^ 0xC0440082) & 0x26CDBA24)));
  LODWORD(v142) = v133 & 0xBB4C6389 ^ 0x99484209 ^ (v133 ^ 0x5F25CBFC) & a87;
  v149 = STACK[0x220];
  v150 = (a81 ^ (v133 ^ 0x2B6DE6A5) & v149) - ((2 * (a81 ^ (v133 ^ 0x2B6DE6A5) & v149)) & 0xE39FF302);
  v151 = (v148 + 953468412) ^ 0xDD65C988;
  STACK[0x318] = v151;
  LODWORD(v151) = *(unsigned __int8 *)(a115 + (*(unsigned __int8 *)(v122 + v151) ^ 0x78));
  LODWORD(v135) = (v135 & 0xA6B1FC00 ^ 0x2D32797B ^ (v135 ^ 0x51043EFF) & ((v141 - ((2 * v141) & 0x8C212582) - 971983911) ^ 0xB0D066E4)) & (((-16 * v151) ^ v151) ^ 0xFFFFFFEB) ^ ((-16 * v151) ^ v151) & 0x5E;
  LODWORD(v151) = v135 ^ 0x8918C723;
  LODWORD(v135) = 2
                * ((((v135 ^ 0x8E7B9F02) & LODWORD(STACK[0x21C]) ^ a85) & 0xB74AA57 ^ 0x344AA50)
                 + (((v135 ^ 0x8E7B9F02) & LODWORD(STACK[0x21C]) ^ a85) & 0x748B55A8 ^ 0x40200A1))
                - 2;
  LODWORD(STACK[0x26C]) = v151;
  LODWORD(v135) = v135 ^ v151;
  LODWORD(v141) = (((((v135 ^ 0x80D7E24F) & a1 ^ a82) & 0x3776299E ^ 0x3234299E)
                  + ((v135 ^ 0x80D7E24F) & a1 ^ a82 ^ 0x5C28001)
                  - (((v135 ^ 0x80D7E24F) & a1 ^ a82 ^ 0x5C28001) & 0x3776299E)) ^ 0xB234A89F) << LODWORD(STACK[0x24C]) << LODWORD(STACK[0x25C]);
  LODWORD(v135) = (a80 ^ (v135 ^ 0xF47E834) & STACK[0x3E0]) >> LODWORD(STACK[0x3AC]) >> LODWORD(STACK[0x3C4]);
  v152 = (((v135 ^ 0x556B2EBC) - 52499296) ^ ((v135 ^ 0x85BCF068) + 738800204) ^ ((v135 ^ 0xD0D7DED4) + 2036473080))
       + 1774707108
       + (((v141 ^ 0xA18D4CCD) + 1023180221) ^ ((v141 ^ 0xEF650468) + 1913926938) ^ ((v141 ^ 0x4EE848A5) - 744916523));
  LODWORD(v141) = (v152 ^ 0x6E050AE7) & (2 * (v152 & 0x4F112AC6)) ^ v152 & 0x4F112AC6;
  LODWORD(v151) = (2 * (v152 ^ 0x6E054E63)) & 0x211464A4 ^ 0x211424A5 ^ ((2 * (v152 ^ 0x6E054E63)) ^ 0x4228C94A) & (v152 ^ 0x6E054E63);
  LODWORD(v141) = (4 * v141) & v151 ^ v141 ^ ((4 * v141) & 0x20046420 | 0x100084);
  LODWORD(v151) = (4 * v151) & 0x211464A4 ^ 0x21046421 ^ ((4 * v151) ^ 0x84519294) & v151;
  LODWORD(v141) = (16 * v141) & 0x211464A0 ^ v141 ^ ((16 * v141) ^ 0x1000840) & v151;
  LODWORD(v151) = (16 * v151) & 0x211464A0 ^ 0x201024A5 ^ ((16 * v151) ^ 0x11464A50) & v151;
  LODWORD(v141) = v141 ^ 0x20046021 ^ ((_DWORD)v141 << 8) & 0x21146400 ^ (((_DWORD)v141 << 8) ^ 0x10008400) & v151;
  v153 = (((_DWORD)v141 << 16) ^ 0x64A50000) & (((_DWORD)v151 << 8) & 0x21140000 ^ 0x21100000 ^ (((_DWORD)v151 << 8) ^ 0x14640000) & v151) ^ v141 ^ (((_DWORD)v141 << 16) & 0x21140000 | 0x4401);
  LODWORD(v151) = (v140 ^ 0x1A47D804) & LODWORD(STACK[0x234]) ^ a88;
  LODWORD(STACK[0x268]) = v140 ^ 0x4F99C4C5;
  LODWORD(v151) = v140 ^ 0x4F99C4C5 ^ (2 * v151);
  LODWORD(v147) = (((v151 ^ 0xE78879E2) & a83 ^ v151 & 0x47137343) & 0x894FCB10 ^ 0x884E8810)
                + ((v151 ^ 0xE78879E2) & a83 ^ v151 & 0x47137343 ^ 0x5017303)
                - (((v151 ^ 0xE78879E2) & a83 ^ v151 & 0x47137343 ^ 0x5017303) & 0x894FCB10);
  LODWORD(v151) = ((((2 * (a79 ^ (v151 ^ 0x3FD15B02) & v149)) | 0xEEA36B16)
                  - (a79 ^ (v151 ^ 0x3FD15B02) & v149)
                  - 2001843595) ^ 0x3741970B) << a111 << a110;
  LODWORD(v151) = ((((v147 ^ 0xCB4EC951) >> LODWORD(STACK[0x3C8]) >> LODWORD(STACK[0x3D8])) ^ 0xA74C44CD) & ~(_DWORD)v151 | v151 & 0x58B3BB32) ^ 0x18330922;
  v154 = -1879380651 - (v151 | 0x8FFAED55) + (v151 | 0x700512AA);
  LODWORD(STACK[0x264]) = v132 ^ 0x367BC4AF;
  LODWORD(v132) = (2
                 * ((((v132 ^ 0xFE39CBFE) & a84 ^ v132 & 0x61536563) & 0x36CB1741 ^ 0x420001)
                  + (((v132 ^ 0xFE39CBFE) & a84 ^ v132 & 0x61536563) & 0x4934E8BE ^ 0x934889F))
                 - 2) ^ v132 ^ 0x367BC4AF;
  v155 = 179295488 - (a78 ^ (v132 ^ 0x688D20E1) & a1 | 0xAAFD500) + (a78 ^ (v132 ^ 0x688D20E1) & a1 | 0xF5502AFF);
  v156 = (((v132 ^ 0xA66C522E) & LODWORD(STACK[0x258]) ^ a86) & 0x53BDE49C ^ 0x433D249D)
       + (((v132 ^ 0xA66C522E) & LODWORD(STACK[0x258]) ^ a86) & 0xAC421B63);
  v157 = ((((2 * (_DWORD)v142) | 0x33A4CAC) - (_DWORD)v142 + 2120407466) ^ 0x3D127D7u) >> LODWORD(STACK[0x260]);
  LODWORD(STACK[0x30C]) = LODWORD(STACK[0x374]) < 0x82828580;
  v158 = LODWORD(STACK[0x23C]) == 1024495353;
  if (LODWORD(STACK[0x23C]) == 1024495353)
    a109 = a6;
  v160 = a109 ^ a106 ^ v157 ^ (((v150 + 1909455233) ^ 0x618FDD99) << a112 << a113);
  v161 = ((v160 ^ 0x98674F15) - 2088480671) ^ ((v160 ^ 0x2D937FDB) + 913334447) ^ ((v160 ^ 0xA114748D) - 1158190087);
  if (LODWORD(STACK[0x23C]) == 1024495353)
    a108 = a7;
  v163 = a105 ^ a108 ^ v152 ^ (2 * v153);
  LODWORD(STACK[0x2E4]) = v163;
  if (!v158)
    a8 = a107;
  v165 = a77 ^ a8 ^ v154;
  LODWORD(STACK[0x2E0]) = v165;
  if (v158)
    v166 = v119;
  else
    v166 = a104;
  v167 = v166 ^ a103 ^ ((v155 ^ 0xE7503AFF) << LODWORD(STACK[0x250]) << LODWORD(STACK[0x254])) ^ (((v156 - 1) ^ 0xEF1DAE1C) >> LODWORD(STACK[0x3D0]) >> LODWORD(STACK[0x3D4]));
  LODWORD(STACK[0x2DC]) = v167;
  v168 = (v165 ^ 0xE64BAE36) + 1;
  v169 = STACK[0x45C];
  v170 = STACK[0x44C];
  v171 = -459728733 * (v168 + (LODWORD(STACK[0x45C]) ^ LODWORD(STACK[0x44C])));
  v172 = v171 + HIWORD(v171);
  if (v158)
    v173 = 276471352;
  else
    v173 = v120;
  LODWORD(STACK[0x2FC]) = v173;
  if (v158)
    v174 = 198540694;
  else
    v174 = v121;
  LODWORD(STACK[0x2EC]) = v174;
  if (v158)
    v175 = -880000030;
  else
    v175 = v124;
  LODWORD(STACK[0x2F0]) = v175;
  if (v158)
    v176 = -935194799;
  else
    v176 = v123;
  LODWORD(STACK[0x2E8]) = v176;
  v177 = -642909913 * (v172 + 251878199 + (v172 >> 8) - v161)
       - ((-642909913 * (v172 + 251878199 + (v172 >> 8) - v161)) >> 16);
  v178 = v177 - (v177 >> 8);
  v179 = (v178 ^ LODWORD(STACK[0x474])) & 0x4000000;
  if ((v179 & v178) != 0)
    v179 = -v179;
  v180 = (v179 + v178) ^ (v178 ^ LODWORD(STACK[0x474])) & 0xFBFFFFFF;
  v181 = v178 ^ *(_DWORD *)(v125 - 164) ^ ((v178 | 0xDE60DE95) - ((v178 | 0xDE60DE95) ^ v178));
  v182 = (v167 ^ 0xB020AEE) + 1;
  v183 = -493418277 * (v182 + v178) - ((-493418277 * (v182 + v178)) >> 16);
  v184 = v163 ^ 0x58C6A650;
  v185 = 433852549 * (v183 + (v183 >> 8) + v184) - ((433852549 * (v183 + (v183 >> 8) + v184)) >> 16);
  v186 = (v185 - LODWORD(STACK[0x3EC])) ^ v185 ^ LODWORD(STACK[0x3EC]) ^ -(v185 ^ LODWORD(STACK[0x3EC]));
  v187 = *(_DWORD *)(v125 - 240);
  v188 = STACK[0x380];
  v189 = -459728733 * (v168 + (v187 ^ v188)) + ((-459728733 * (v168 + (v187 ^ v188))) >> 16);
  v190 = -642909913 * (v189 + 251878199 + (v189 >> 8) - v161);
  v191 = v190 - HIWORD(v190) - ((v190 - HIWORD(v190)) >> 8);
  v192 = ((*(_DWORD *)(v125 - 196) - v191) ^ v191) + 2 * ((*(_DWORD *)(v125 - 196) - v191) & v191);
  *(_DWORD *)(v125 - 164) = ((LODWORD(STACK[0x3F0]) - v171) ^ v171) + 2 * ((LODWORD(STACK[0x3F0]) - v171) & v171);
  v193 = (v172 >> 8) + v172;
  v194 = v193 - v161 + 251878199;
  LODWORD(STACK[0x2D0]) = v193 - v194 + 510914707 - ((2 * (v193 - v194)) & 0x3CE7E126);
  v195 = -493418277
       * (v182
        + -642909913 * v194
        - ((-642909913 * v194) >> 16)
        - ((-642909913 * v194 - ((-642909913 * v194) >> 16)) >> 8));
  v196 = 433852549 * (v184 + v195 - HIWORD(v195) + ((v195 - HIWORD(v195)) >> 8));
  v197 = v196 - HIWORD(v196);
  if ((v197 & 0x200) != 0)
    v198 = -512;
  else
    v198 = 512;
  v199 = LODWORD(STACK[0x37C]) ^ v197 ^ (v198 + v197);
  v200 = STACK[0x3B0];
  *(_DWORD *)(v125 - 152) += (v197 - (v197 >> 8)) ^ STACK[0x3B0];
  v201 = v186 + v185;
  v202 = (v185 - (v185 >> 8)) ^ v200;
  v203 = STACK[0x3A0];
  v204 = STACK[0x39C];
  if ((v202 & 1) != 0)
    v205 = STACK[0x39C];
  else
    v205 = STACK[0x3A0];
  LODWORD(STACK[0x37C]) = v205;
  v206 = STACK[0x414];
  if ((v202 & 1) != 0)
    v207 = STACK[0x414];
  else
    v207 = v204;
  v208 = STACK[0x398];
  if ((v202 & 1) != 0)
    v206 = STACK[0x398];
  LODWORD(STACK[0x2A4]) = v206;
  if ((v202 & 1) != 0)
    v209 = v203;
  else
    v209 = v208;
  v210 = *(_DWORD *)(v125 - 160);
  if ((v202 & 1) != 0)
    v211 = v181;
  else
    v211 = *(_DWORD *)(v125 - 160);
  LODWORD(STACK[0x2C8]) = v211;
  v212 = STACK[0x394];
  if ((v202 & 1) == 0)
    v210 = STACK[0x394];
  LODWORD(STACK[0x2CC]) = v210;
  v213 = *(_DWORD *)(v125 - 176);
  if ((v202 & 1) != 0)
    v181 = *(_DWORD *)(v125 - 176);
  LODWORD(STACK[0x2C4]) = v181;
  if ((v202 & 1) != 0)
    v214 = v212;
  else
    v214 = v213;
  v216 = *(_DWORD *)(v125 - 192);
  v215 = *(_DWORD *)(v125 - 188);
  if ((v202 & 1) != 0)
    v217 = *(_DWORD *)(v125 - 192);
  else
    v217 = *(_DWORD *)(v125 - 188);
  *(_DWORD *)(v125 - 196) = v217;
  v218 = *(_DWORD *)(v125 - 184);
  if ((v202 & 1) == 0)
    v215 = *(_DWORD *)(v125 - 184);
  *(_DWORD *)(v125 - 188) = v215;
  v219 = STACK[0x390];
  if ((v202 & 1) != 0)
    v220 = STACK[0x390];
  else
    v220 = v216;
  if ((v202 & 1) != 0)
    v219 = v218;
  LODWORD(STACK[0x2A0]) = v219;
  v221 = STACK[0x38C];
  if ((v202 & 1) != 0)
    v222 = v192;
  else
    v222 = STACK[0x38C];
  LODWORD(STACK[0x398]) = v222;
  v223 = *(_DWORD *)(v125 - 204);
  if ((v202 & 1) != 0)
    v224 = v221;
  else
    v224 = *(_DWORD *)(v125 - 204);
  v225 = *(_DWORD *)(v125 - 200);
  if ((v202 & 1) == 0)
    v223 = *(_DWORD *)(v125 - 200);
  LODWORD(STACK[0x29C]) = v223;
  if ((v202 & 1) != 0)
    v192 = v225;
  v226 = *(_DWORD *)(v125 - 208);
  v227 = STACK[0x384];
  if ((v202 & 1) != 0)
    v228 = *(_DWORD *)(v125 - 208);
  else
    v228 = STACK[0x384];
  LODWORD(STACK[0x390]) = v228;
  v229 = *(_DWORD *)(v125 - 212);
  if ((v202 & 1) != 0)
    v230 = v227;
  else
    v230 = *(_DWORD *)(v125 - 212);
  v231 = STACK[0x388];
  if ((v202 & 1) == 0)
    v229 = STACK[0x388];
  LODWORD(STACK[0x474]) = v229;
  if ((v202 & 1) != 0)
    v232 = v231;
  else
    v232 = v226;
  v233 = *(_DWORD *)(v125 - 216);
  v234 = *(_DWORD *)(v125 - 228);
  v235 = *(_DWORD *)(v125 - 224);
  if ((v202 & 1) != 0)
    v236 = *(_DWORD *)(v125 - 216);
  else
    v236 = *(_DWORD *)(v125 - 228);
  if ((v202 & 1) == 0)
    v234 = *(_DWORD *)(v125 - 224);
  LODWORD(STACK[0x290]) = v234;
  if ((v202 & 1) != 0)
    v237 = v235;
  else
    v237 = *(_DWORD *)(v125 - 220);
  if ((v202 & 1) != 0)
    v238 = *(_DWORD *)(v125 - 220);
  else
    v238 = v233;
  v239 = *(_DWORD *)(v125 - 248);
  if ((v202 & 1) != 0)
    v240 = *(_DWORD *)(v125 - 248);
  else
    v240 = v187;
  LODWORD(STACK[0x3EC]) = v240;
  v241 = *(_DWORD *)(v125 - 232);
  if ((v202 & 1) != 0)
    v242 = v187;
  else
    v242 = *(_DWORD *)(v125 - 232);
  LODWORD(STACK[0x3F0]) = v242;
  v243 = *(_DWORD *)(v125 - 252);
  if ((v202 & 1) != 0)
    v239 = *(_DWORD *)(v125 - 252);
  *(_DWORD *)(v125 - 248) = v239;
  if ((v202 & 1) == 0)
    v241 = v243;
  *(_DWORD *)(v125 - 232) = v241;
  v244 = STACK[0x458];
  if ((v202 & 1) != 0)
    v245 = STACK[0x458];
  else
    v245 = v169;
  v246 = STACK[0x460];
  if ((v202 & 1) != 0)
    v247 = v169;
  else
    v247 = STACK[0x460];
  LODWORD(STACK[0x2C0]) = v247;
  v248 = STACK[0x454];
  if ((v202 & 1) != 0)
    v244 = STACK[0x454];
  LODWORD(STACK[0x28C]) = v244;
  if ((v202 & 1) != 0)
    v249 = v246;
  else
    v249 = v248;
  v250 = *(_DWORD *)(v125 - 256);
  if ((v202 & 1) != 0)
    v251 = v188;
  else
    v251 = *(_DWORD *)(v125 - 256);
  LODWORD(STACK[0x288]) = v251;
  if ((v202 & 1) != 0)
    v252 = v250;
  else
    v252 = v199 ^ 0x200;
  LODWORD(STACK[0x2B8]) = v252;
  if ((v202 & 1) != 0)
    v253 = v199 ^ 0x200;
  else
    v253 = STACK[0x47C];
  if ((v202 & 1) != 0)
    v254 = STACK[0x47C];
  else
    v254 = v188;
  v255 = STACK[0x450];
  if ((v202 & 1) != 0)
    v256 = v170;
  else
    v256 = STACK[0x450];
  LODWORD(STACK[0x2BC]) = v256;
  v257 = STACK[0x448];
  if ((v202 & 1) != 0)
    v258 = STACK[0x448];
  else
    v258 = v170;
  LODWORD(STACK[0x38C]) = v258;
  if ((v202 & 1) != 0)
    v259 = STACK[0x444];
  else
    v259 = v257;
  if ((v202 & 1) != 0)
    v260 = v255;
  else
    v260 = STACK[0x444];
  v261 = STACK[0x470];
  v262 = STACK[0x46C];
  if ((v202 & 1) != 0)
    v263 = STACK[0x46C];
  else
    v263 = STACK[0x470];
  LODWORD(STACK[0x2B4]) = v263;
  if ((v202 & 1) == 0)
    v261 = v180;
  LODWORD(STACK[0x388]) = v261;
  v264 = STACK[0x478];
  if ((v202 & 1) != 0)
    v265 = STACK[0x478];
  else
    v265 = v262;
  LODWORD(STACK[0x2B0]) = v265;
  if ((v202 & 1) != 0)
    v266 = v180;
  else
    v266 = v264;
  v267 = STACK[0x440];
  v268 = STACK[0x434];
  if ((v202 & 1) != 0)
    v269 = STACK[0x440];
  else
    v269 = STACK[0x434];
  LODWORD(STACK[0x394]) = v269;
  if ((v202 & 1) != 0)
    v270 = v268;
  else
    v270 = STACK[0x438];
  if ((v202 & 1) != 0)
    v271 = STACK[0x43C];
  else
    v271 = v267;
  if ((v202 & 1) != 0)
    v272 = STACK[0x438];
  else
    v272 = STACK[0x43C];
  LODWORD(STACK[0x434]) = v272;
  v273 = STACK[0x468];
  v274 = STACK[0x41C];
  if ((v202 & 1) != 0)
    v275 = STACK[0x468];
  else
    v275 = STACK[0x41C];
  LODWORD(STACK[0x2AC]) = v275;
  v276 = STACK[0x424];
  if ((v202 & 1) != 0)
    v277 = v274;
  else
    v277 = STACK[0x424];
  LODWORD(STACK[0x384]) = v277;
  v278 = STACK[0x42C];
  if ((v202 & 1) != 0)
    v279 = v276;
  else
    v279 = STACK[0x42C];
  LODWORD(STACK[0x424]) = v279;
  if ((v202 & 1) != 0)
    v273 = v278;
  LODWORD(STACK[0x284]) = v273;
  v280 = STACK[0x428];
  v281 = STACK[0x420];
  if ((v202 & 1) != 0)
    v282 = STACK[0x420];
  else
    v282 = STACK[0x428];
  LODWORD(STACK[0x2A8]) = v282;
  v283 = STACK[0x430];
  if ((v202 & 1) != 0)
    v284 = v280;
  else
    v284 = STACK[0x430];
  LODWORD(STACK[0x39C]) = v284;
  if ((v202 & 1) != 0)
    v285 = v283;
  else
    v285 = STACK[0x418];
  if ((v202 & 1) != 0)
    v286 = STACK[0x418];
  else
    v286 = v281;
  LODWORD(STACK[0x420]) = v286;
  v287 = *(_DWORD *)(v125 - 164);
  if ((v202 & 1) != 0)
    v288 = v201;
  else
    v288 = *(_DWORD *)(v125 - 164);
  LODWORD(STACK[0x3A0]) = v288;
  v289 = STACK[0x404];
  if ((v202 & 1) != 0)
    v201 = STACK[0x404];
  v290 = STACK[0x400];
  if ((v202 & 1) != 0)
    v289 = STACK[0x400];
  LODWORD(STACK[0x404]) = v289;
  if ((v202 & 1) == 0)
    v287 = v290;
  v291 = STACK[0x408];
  v292 = STACK[0x3FC];
  if ((v202 & 1) != 0)
    v293 = STACK[0x3FC];
  else
    v293 = STACK[0x408];
  LODWORD(STACK[0x278]) = v293;
  v294 = STACK[0x40C];
  if ((v202 & 1) == 0)
    v291 = STACK[0x40C];
  LODWORD(STACK[0x380]) = v291;
  if ((v202 & 1) != 0)
    v292 = STACK[0x410];
  else
    v294 = STACK[0x410];
  LODWORD(STACK[0x3FC]) = v292;
  v295 = v202 + LODWORD(STACK[0x3CC]);
  *(_DWORD *)(v125 - 136) += v202;
  v296 = (v202 & 2) == 0;
  if ((v202 & 2) != 0)
    v297 = v207;
  else
    v297 = v209;
  if (!v296)
    v207 = v209;
  v298 = STACK[0x37C];
  v299 = STACK[0x2A4];
  if (v296)
    v300 = STACK[0x2A4];
  else
    v300 = STACK[0x37C];
  LODWORD(STACK[0x414]) = v300;
  if (!v296)
    v298 = v299;
  v301 = STACK[0x2C8];
  if (v296)
    v302 = v214;
  else
    v302 = STACK[0x2C8];
  *(_DWORD *)(v125 - 176) = v302;
  if (v296)
    v303 = v301;
  else
    v303 = v214;
  *(_DWORD *)(v125 - 160) = v303;
  v304 = STACK[0x2CC];
  v305 = STACK[0x2C4];
  if (v296)
    v306 = STACK[0x2C4];
  else
    v306 = STACK[0x2CC];
  *(_DWORD *)(v125 - 164) = v306;
  if (!v296)
    v304 = v305;
  v307 = *(_DWORD *)(v125 - 188);
  if (v296)
    v308 = *(_DWORD *)(v125 - 188);
  else
    v308 = v220;
  *(_DWORD *)(v125 - 184) = v308;
  if (v296)
    v309 = v220;
  else
    v309 = v307;
  *(_DWORD *)(v125 - 192) = v309;
  v310 = *(_DWORD *)(v125 - 196);
  v311 = STACK[0x2A0];
  if (v296)
    v312 = *(_DWORD *)(v125 - 196);
  else
    v312 = STACK[0x2A0];
  *(_DWORD *)(v125 - 188) = v312;
  if (v296)
  {
    v310 = v311;
    v313 = v224;
  }
  else
  {
    v313 = v192;
  }
  *(_DWORD *)(v125 - 204) = v313;
  if (v296)
    v314 = v192;
  else
    v314 = v224;
  *(_DWORD *)(v125 - 196) = v314;
  v315 = STACK[0x398];
  if (v296)
    v316 = STACK[0x398];
  else
    v316 = STACK[0x29C];
  if (v296)
    v315 = STACK[0x29C];
  *(_DWORD *)(v125 - 200) = v315;
  if (v296)
    v317 = v232;
  else
    v317 = v230;
  if (v296)
    v318 = v230;
  else
    v318 = v232;
  *(_DWORD *)(v125 - 212) = v318;
  *(_DWORD *)(v125 - 208) = v317;
  if (v296)
    v319 = STACK[0x390];
  else
    v319 = STACK[0x474];
  if (v296)
    v320 = STACK[0x474];
  else
    v320 = STACK[0x390];
  if (v296)
    v321 = v236;
  else
    v321 = v237;
  *(_DWORD *)(v125 - 228) = v321;
  if (v296)
    v322 = v237;
  else
    v322 = v236;
  *(_DWORD *)(v125 - 220) = v322;
  v323 = STACK[0x290];
  if (v296)
    v324 = STACK[0x290];
  else
    v324 = v238;
  *(_DWORD *)(v125 - 224) = v324;
  if (v296)
    v325 = v238;
  else
    v325 = v323;
  *(_DWORD *)(v125 - 216) = v325;
  if (v296)
    v326 = v245;
  else
    v326 = v249;
  LODWORD(STACK[0x45C]) = v326;
  if (v296)
    v327 = v249;
  else
    v327 = v245;
  LODWORD(STACK[0x454]) = v327;
  v328 = STACK[0x3EC];
  v329 = *(_DWORD *)(v125 - 232);
  if (v296)
    v330 = STACK[0x3EC];
  else
    v330 = *(_DWORD *)(v125 - 232);
  *(_DWORD *)(v125 - 240) = v330;
  if (v296)
    v331 = v329;
  else
    v331 = v328;
  *(_DWORD *)(v125 - 252) = v331;
  v332 = STACK[0x2C0];
  v333 = STACK[0x28C];
  if (v296)
    v334 = STACK[0x28C];
  else
    v334 = STACK[0x2C0];
  LODWORD(STACK[0x458]) = v334;
  if (v296)
    v335 = v332;
  else
    v335 = v333;
  LODWORD(STACK[0x460]) = v335;
  v336 = STACK[0x3F0];
  v337 = *(_DWORD *)(v125 - 248);
  if (v296)
    v338 = STACK[0x3F0];
  else
    v338 = *(_DWORD *)(v125 - 248);
  *(_DWORD *)(v125 - 232) = v338;
  if (v296)
    v339 = v337;
  else
    v339 = v336;
  *(_DWORD *)(v125 - 248) = v339;
  v340 = STACK[0x288];
  if (v296)
    v341 = STACK[0x288];
  else
    v341 = v253;
  *(_DWORD *)(v125 - 256) = v341;
  if (v296)
    v342 = v253;
  else
    v342 = v340;
  LODWORD(STACK[0x47C]) = v342;
  if (v296)
    v343 = v254;
  else
    v343 = STACK[0x2B8];
  if (v296)
    v254 = STACK[0x2B8];
  v344 = STACK[0x2BC];
  if (v296)
    v345 = STACK[0x2BC];
  else
    v345 = v259;
  LODWORD(STACK[0x450]) = v345;
  if (v296)
    v346 = v259;
  else
    v346 = v344;
  LODWORD(STACK[0x448]) = v346;
  v347 = STACK[0x38C];
  if (v296)
    v348 = STACK[0x38C];
  else
    v348 = v260;
  LODWORD(STACK[0x44C]) = v348;
  if (v296)
    v349 = v260;
  else
    v349 = v347;
  LODWORD(STACK[0x444]) = v349;
  v350 = STACK[0x2B4];
  if (v296)
    v351 = STACK[0x2B4];
  else
    v351 = v266;
  LODWORD(STACK[0x470]) = v351;
  if (v296)
    v352 = v266;
  else
    v352 = v350;
  LODWORD(STACK[0x478]) = v352;
  v353 = STACK[0x388];
  v354 = STACK[0x2B0];
  if (v296)
    v355 = STACK[0x2B0];
  else
    v355 = STACK[0x388];
  LODWORD(STACK[0x46C]) = v355;
  if (v296)
    v356 = v353;
  else
    v356 = v354;
  LODWORD(STACK[0x474]) = v356;
  if (v296)
    v357 = v270;
  else
    v357 = v271;
  LODWORD(STACK[0x438]) = v357;
  if (v296)
    v358 = v271;
  else
    v358 = v270;
  LODWORD(STACK[0x440]) = v358;
  v359 = STACK[0x394];
  v360 = STACK[0x434];
  if (v296)
    v361 = STACK[0x434];
  else
    v361 = STACK[0x394];
  LODWORD(STACK[0x43C]) = v361;
  if (v296)
    v362 = v359;
  else
    v362 = v360;
  LODWORD(STACK[0x434]) = v362;
  v363 = STACK[0x424];
  v364 = STACK[0x2AC];
  if (v296)
    v365 = STACK[0x2AC];
  else
    v365 = STACK[0x424];
  LODWORD(STACK[0x41C]) = v365;
  if (v296)
    v366 = v363;
  else
    v366 = v364;
  LODWORD(STACK[0x42C]) = v366;
  v367 = STACK[0x384];
  v368 = STACK[0x284];
  if (v296)
    v369 = STACK[0x284];
  else
    v369 = STACK[0x384];
  LODWORD(STACK[0x468]) = v369;
  if (v296)
    v370 = v367;
  else
    v370 = v368;
  LODWORD(STACK[0x424]) = v370;
  v371 = STACK[0x2A8];
  if (v296)
    v372 = STACK[0x2A8];
  else
    v372 = v285;
  LODWORD(STACK[0x428]) = v372;
  if (v296)
    v373 = v285;
  else
    v373 = v371;
  LODWORD(STACK[0x418]) = v373;
  if (v296)
    v374 = v201;
  else
    v374 = v287;
  LODWORD(STACK[0x3EC]) = v374;
  if (v296)
    v375 = v287;
  else
    v375 = v201;
  LODWORD(STACK[0x400]) = v375;
  v376 = STACK[0x39C];
  v377 = STACK[0x420];
  if (v296)
    v378 = STACK[0x39C];
  else
    v378 = STACK[0x420];
  LODWORD(STACK[0x430]) = v378;
  if (v296)
    v379 = v377;
  else
    v379 = v376;
  LODWORD(STACK[0x420]) = v379;
  v380 = STACK[0x278];
  if (v296)
    v381 = STACK[0x278];
  else
    v381 = v294;
  LODWORD(STACK[0x408]) = v381;
  if (v296)
    v382 = v294;
  else
    v382 = v380;
  LODWORD(STACK[0x410]) = v382;
  v383 = STACK[0x3A0];
  v384 = STACK[0x404];
  if (v296)
    v385 = STACK[0x3A0];
  else
    v385 = STACK[0x404];
  LODWORD(STACK[0x3F0]) = v385;
  if (v296)
    v386 = v384;
  else
    v386 = v383;
  LODWORD(STACK[0x404]) = v386;
  v387 = STACK[0x380];
  v388 = STACK[0x3FC];
  if (v296)
    v389 = STACK[0x380];
  else
    v389 = STACK[0x3FC];
  LODWORD(STACK[0x40C]) = v389;
  if (v296)
    v390 = v388;
  else
    v390 = v387;
  LODWORD(STACK[0x3FC]) = v390;
  v391 = LODWORD(STACK[0x2E4]) ^ 0x46B556C3;
  v392 = LODWORD(STACK[0x2E0]) ^ 0x7C7A15A;
  v393 = LODWORD(STACK[0x2DC]) ^ 0xEA8E0582;
  if ((v295 & 1) != 0)
    v394 = LODWORD(STACK[0x2E4]) ^ 0x46B556C3;
  else
    v394 = STACK[0x2D0];
  if ((v295 & 1) != 0)
  {
    v391 = LODWORD(STACK[0x2E0]) ^ 0x7C7A15A;
    v392 = LODWORD(STACK[0x2DC]) ^ 0xEA8E0582;
    v393 = STACK[0x2D0];
  }
  LODWORD(STACK[0x398]) = v297;
  if ((v295 & 2) != 0)
    v395 = v394;
  else
    v395 = v392;
  if ((v295 & 2) != 0)
  {
    v396 = v391;
  }
  else
  {
    v392 = v394;
    v396 = v393;
  }
  if ((v295 & 2) != 0)
    v391 = v393;
  v397 = a31 ^ v396 ^ (v297 + 510914707 - ((2 * v297) & 0x3CE7E126));
  v398 = a72 ^ LODWORD(STACK[0x20C]);
  LODWORD(STACK[0x39C]) = v207;
  v399 = v398 ^ a36 ^ v207 ^ v391;
  LODWORD(STACK[0x3A0]) = v298;
  v400 = v398 ^ a35 ^ v298 ^ v392;
  v401 = v398 ^ a34 ^ LODWORD(STACK[0x414]) ^ v395;
  v402 = *(_DWORD *)(v200 + 4 * BYTE2(v400)) ^ __ROR4__(*(_DWORD *)(v200 + 4 * BYTE1(v399)), 8);
  v403 = *(_DWORD *)(v200 + 4 * BYTE2(v397)) ^ __ROR4__(*(_DWORD *)(v200 + 4 * HIBYTE(v401)), 24);
  v404 = *(_DWORD *)(v200 + 4 * BYTE2(v399));
  v405 = *(_DWORD *)(v200 + 4 * HIBYTE(v400));
  v406 = 4 * HIBYTE(v397);
  v407 = (_DWORD *)(v200 + v406);
  v408 = 4 * BYTE1(v400);
  v409 = &v407[(unint64_t)v408 / 4 + v406 / 0xFFFFFFFFFFFFFFFCLL];
  v410 = 4 * v400;
  v411 = &v409[(unint64_t)v410 / 4 + v408 / 0xFFFFFFFFFFFFFFFCLL];
  v412 = v402 ^ __ROR4__(*v407, 24);
  v413 = v403 ^ __ROR4__(*v409, 8);
  v414 = 4 * BYTE2(v401);
  v415 = &v411[v410 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v414 / 4];
  v416 = 4 * HIBYTE(v399);
  v417 = &v415[(unint64_t)v416 / 4 + v414 / 0xFFFFFFFFFFFFFFFCLL];
  v418 = v401;
  v419 = &v417[v418 + v416 / 0xFFFFFFFFFFFFFFFCLL];
  v420 = 4 * v397;
  v421 = (_DWORD *)((char *)v419 + v420 - v418 * 4);
  v422 = v412 ^ __ROR4__(*v419, 16);
  v423 = v413 ^ __ROR4__(*(_DWORD *)((char *)&v421[v399] - v420), 16);
  v424 = (uint64_t)&v421[BYTE1(v397)] - v420;
  v425 = a76 ^ v404 ^ __ROR4__(v405, 24) ^ __ROR4__(*v421, 16) ^ __ROR4__(*(_DWORD *)((char *)&v421[BYTE1(v401)] - v420), 8);
  v426 = *(_DWORD *)(v125 - 136);
  v427 = a75 ^ *(_DWORD *)(v125 - 176) ^ (v426 + v423 - v295);
  v428 = (char *)v421 - v420;
  LODWORD(v424) = a74 ^ *v415 ^ __ROR4__(*v411, 16) ^ __ROR4__(*v417, 24) ^ __ROR4__(*(_DWORD *)v424, 8);
  v429 = *(_DWORD *)(v125 - 152);
  LODWORD(STACK[0x3CC]) = v295;
  LODWORD(STACK[0x394]) = v304;
  LODWORD(v415) = a73 ^ v304 ^ (v429 + v422 - v295);
  v430 = v425 ^ *(_DWORD *)(v125 - 160);
  LODWORD(v424) = v424 ^ *(_DWORD *)(v125 - 164);
  v431 = *(_DWORD *)((char *)&v421[v427] - v420);
  v432 = *(_DWORD *)((char *)&v421[v430] - v420);
  v433 = *(_DWORD *)((char *)&v421[BYTE3(v424)] - v420);
  LODWORD(v417) = *(_DWORD *)((char *)&v421[v415 >> 24] - v420);
  LODWORD(v419) = *(_DWORD *)((char *)&v421[BYTE2(v430)] - v420);
  LODWORD(v411) = *(_DWORD *)((char *)&v421[BYTE2(v424)] - v420);
  LODWORD(v421) = *(_DWORD *)((char *)&v421[BYTE1(v430)] - v420);
  LODWORD(v420) = *(_DWORD *)&v428[4 * BYTE2(v415)];
  v434 = *(_DWORD *)&v428[4 * HIBYTE(v430)];
  v435 = *(_DWORD *)&v428[4 * BYTE1(v415)];
  v436 = 4 * BYTE1(v424);
  v437 = &v428[v436];
  v438 = 4 * HIBYTE(v427);
  v439 = &v437[v438 - v436];
  v440 = 4 * BYTE2(v427);
  v441 = &v439[v440 - v438];
  v442 = 4 * v424;
  v443 = &v441[v442 - v440];
  v444 = 4 * v415;
  v445 = &v443[v444 - v442];
  v446 = a71 ^ __ROR4__(v432, 16) ^ __ROR4__(v433, 24) ^ __ROR4__(v435, 8) ^ *(_DWORD *)(v125 - 184) ^ *(_DWORD *)v441;
  v447 = &v445[-v444];
  LODWORD(v445) = a69 ^ v411 ^ __ROR4__(v434, 24) ^ __ROR4__(*(_DWORD *)v445, 16) ^ __ROR4__(*(_DWORD *)&v447[4 * BYTE1(v427)], 8);
  v448 = a68 ^ v420 ^ __ROR4__((_DWORD)v421, 8) ^ __ROR4__(*(_DWORD *)v439, 24);
  v449 = __ROR4__(*(_DWORD *)v443, 16);
  LODWORD(v437) = a70 ^ __ROR4__(v431, 16) ^ __ROR4__((_DWORD)v417, 24) ^ v419 ^ __ROR4__(*(_DWORD *)v437, 8) ^ *(_DWORD *)(v125 - 192);
  LODWORD(STACK[0x390]) = v310;
  LODWORD(v445) = v445 ^ v310;
  v450 = v448 ^ v449 ^ *(_DWORD *)(v125 - 188);
  v451 = *(_DWORD *)&v447[4 * BYTE2(v437)];
  v452 = *(_DWORD *)&v447[4 * BYTE1(v446)];
  v453 = *(_DWORD *)&v447[4 * BYTE1(v445)];
  LODWORD(v417) = *(_DWORD *)&v447[4 * BYTE1(v437)];
  LODWORD(v419) = *(_DWORD *)&v447[4 * v446];
  LODWORD(v411) = *(_DWORD *)&v447[4 * v445];
  LODWORD(v421) = *(_DWORD *)&v447[4 * BYTE2(v446)];
  LODWORD(v420) = *(_DWORD *)&v447[4 * BYTE2(v450)];
  v454 = *(_DWORD *)&v447[4 * HIBYTE(v446)];
  v455 = *(_DWORD *)&v447[4 * BYTE1(v450)];
  LODWORD(v439) = *(_DWORD *)&v447[4 * BYTE2(v445)];
  LODWORD(v441) = HIBYTE(v450);
  v456 = *(_DWORD *)&v447[4 * v450];
  v457 = 4 * v441;
  v458 = &v447[v457];
  v459 = 4 * (v445 >> 24);
  v460 = &v458[v459 - v457];
  v461 = 4 * v437;
  v462 = (_DWORD *)((char *)v460 + v461 - v459);
  v463 = LODWORD(STACK[0x378]) ^ LODWORD(STACK[0x204]);
  v464 = STACK[0x378];
  LODWORD(v421) = v463 ^ a102 ^ v421 ^ __ROR4__(v455, 8) ^ __ROR4__(*v460, 24);
  v465 = (char *)v462 - v461;
  LODWORD(v462) = v421 ^ __ROR4__(*v462, 16);
  LODWORD(v437) = v463 ^ a66 ^ __ROR4__(v452, 8) ^ v439 ^ __ROR4__(v456, 16) ^ __ROR4__(*(_DWORD *)&v465[4 * (v437 >> 24)], 24);
  LODWORD(v458) = v463 ^ a65 ^ v451 ^ __ROR4__(v453, 8) ^ __ROR4__((_DWORD)v419, 16) ^ __ROR4__(*(_DWORD *)v458, 24);
  LODWORD(STACK[0x38C]) = v316;
  LODWORD(v462) = v462 ^ v316;
  v466 = a67 ^ __ROR4__((_DWORD)v417, 8) ^ __ROR4__((_DWORD)v411, 16) ^ v420 ^ __ROR4__(v454, 24) ^ *(_DWORD *)(v125 - 196);
  v467 = &v465[4 * v466];
  v468 = &v465[4 * v462];
  LODWORD(v437) = v437 ^ *(_DWORD *)(v125 - 204);
  v469 = &v465[4 * v437];
  v470 = &v465[4 * BYTE1(v437)];
  v471 = &v465[4 * (v462 >> 24)];
  LODWORD(v458) = v458 ^ *(_DWORD *)(v125 - 200);
  LODWORD(v411) = *(_DWORD *)&v465[4 * BYTE1(v466)];
  LODWORD(v421) = *(_DWORD *)&v465[4 * BYTE1(v458)];
  v472 = 4 * v458;
  v473 = &v465[v472];
  v474 = 4 * BYTE2(v466);
  v475 = &v473[v474 - v472];
  v476 = 4 * BYTE2(v458);
  v477 = &v475[v476 - v474];
  v478 = 4 * BYTE1(v462);
  v479 = &v477[v478 - v476];
  v480 = &v479[-v478];
  LODWORD(v461) = *(_DWORD *)&v480[4 * (v437 >> 24)];
  v481 = 4 * BYTE2(v437);
  v482 = &v480[v481];
  v483 = 4 * BYTE2(v462);
  v484 = &v482[v483 - v481];
  v485 = 4 * HIBYTE(v466);
  v486 = &v484[v485 - v483];
  v487 = 4 * (v458 >> 24);
  v488 = &v486[(unint64_t)v487 / 4 + v485 / 0xFFFFFFFFFFFFFFFCLL];
  v489 = &v488[v487 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v488) = a64 ^ __ROR4__(*(_DWORD *)v467, 16) ^ __ROR4__(*(_DWORD *)v479, 8) ^ *(_DWORD *)v482 ^ __ROR4__(*v488, 24);
  LODWORD(v486) = a63 ^ __ROR4__(*(_DWORD *)v468, 16) ^ __ROR4__(*(_DWORD *)v470, 8) ^ *(_DWORD *)v477 ^ __ROR4__(*v486, 24);
  LODWORD(v468) = a62 ^ __ROR4__((_DWORD)v411, 8) ^ __ROR4__(*(_DWORD *)v473, 16);
  LODWORD(v484) = *(_DWORD *)v484;
  LODWORD(STACK[0x384]) = v319;
  LODWORD(v484) = v468 ^ __ROR4__(v461, 24) ^ v319 ^ v484;
  LODWORD(v468) = a61 ^ __ROR4__(*(_DWORD *)v469, 16) ^ __ROR4__(*(_DWORD *)v471, 24) ^ __ROR4__((_DWORD)v421, 8) ^ *(_DWORD *)v475;
  LODWORD(STACK[0x388]) = v320;
  LODWORD(v486) = v486 ^ v320;
  LODWORD(v468) = v468 ^ *(_DWORD *)(v125 - 208);
  LODWORD(v467) = v489[v484 >> 24];
  LODWORD(v469) = v489[v486];
  LODWORD(v470) = v489[BYTE1(v468)];
  v490 = BYTE1(v484);
  v491 = &v489[v490];
  v492 = 4 * BYTE2(v484);
  v493 = (_DWORD *)((char *)v491 + v492 - v490 * 4);
  HIDWORD(v494) = (_DWORD)v470;
  LODWORD(v494) = (_DWORD)v470;
  LODWORD(v488) = v488 ^ *(_DWORD *)(v125 - 212);
  v495 = (char *)v493 - v492;
  LODWORD(v492) = *(_DWORD *)((char *)&v493[BYTE2(v468)] - v492);
  v496 = 4 * BYTE1(v488);
  v497 = &v495[v496];
  v498 = 4 * v488;
  v499 = &v497[v498 - v496];
  v500 = &v499[-v498];
  LODWORD(v484) = *(_DWORD *)&v500[4 * v484];
  LODWORD(v469) = (v494 >> 8) ^ __ROR4__((_DWORD)v469, 16) ^ *v493;
  v501 = 4 * BYTE2(v488);
  v502 = &v500[v501];
  v503 = 4 * BYTE1(v486);
  v504 = &v502[v503 - v501];
  v505 = 4 * (v486 >> 24);
  v506 = &v504[v505 - v503];
  v507 = 4 * BYTE2(v486);
  v508 = &v506[v507 - v505];
  v509 = 4 * v468;
  v510 = &v508[v509 - v507];
  v511 = &v510[v509 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v491) = a59 ^ __ROR4__(*v491, 8) ^ *(_DWORD *)(v125 - 220) ^ *(_DWORD *)v502 ^ __ROR4__(*(_DWORD *)v506, 24) ^ __ROR4__(*v510, 16);
  LODWORD(v510) = a58 ^ *(_DWORD *)(v125 - 224) ^ ((v469 ^ __ROR4__(v511[(v488 >> a33 >> a24)], 24))+ a101);
  LODWORD(v484) = a57 ^ __ROR4__(*(_DWORD *)v497, 8) ^ __ROR4__((_DWORD)v484, 16) ^ *(_DWORD *)(v125 - 216) ^ *(_DWORD *)v508 ^ __ROR4__(v511[v468 >> 24], 24);
  LODWORD(v488) = a60 ^ __ROR4__((_DWORD)v467, 24) ^ v492 ^ __ROR4__(*(_DWORD *)v499, 16) ^ __ROR4__(*(_DWORD *)v504, 8) ^ *(_DWORD *)(v125 - 228);
  HIDWORD(v494) = v511[BYTE1(v491)];
  LODWORD(v494) = HIDWORD(v494);
  LODWORD(v468) = (v494 >> 8) ^ __ROR4__(v511[v488 >> 24], 24);
  HIDWORD(v494) = v511[v491 >> 24];
  LODWORD(v494) = HIDWORD(v494);
  LODWORD(v469) = (v494 >> 24) ^ __ROR4__(v511[BYTE1(v488)], 8);
  LODWORD(v468) = v468 ^ v511[BYTE2(v484)] ^ __ROR4__(v511[v510], 16);
  HIDWORD(v494) = v511[v488];
  LODWORD(v494) = HIDWORD(v494);
  v512 = (v494 >> 16) ^ __ROR4__(v511[v484 >> 24], 24) ^ v511[BYTE2(v491)] ^ __ROR4__(v511[BYTE1(v510)], 8);
  v513 = v469 ^ v511[BYTE2(v510)] ^ __ROR4__(v511[v484], 16);
  v514 = v511[BYTE2(v488)] ^ __ROR4__(v511[BYTE1(v484)], 8) ^ __ROR4__(v511[v491], 16) ^ __ROR4__(v511[v510 >> 24], 24);
  v515 = v426 - v429 + (_DWORD)v468 + 433359904 - ((2 * (v426 - v429 + (_DWORD)v468)) & 0x33A91840);
  v516 = STACK[0x210];
  v517 = LODWORD(STACK[0x210]) ^ LODWORD(STACK[0x214]);
  LODWORD(v488) = v517 ^ a52 ^ *(_DWORD *)(v125 - 248) ^ v514;
  LODWORD(v468) = v517 ^ a30 ^ *(_DWORD *)(v125 - 240) ^ v513;
  LODWORD(v467) = v517 ^ a51 ^ *(_DWORD *)(v125 - 232) ^ v512;
  LODWORD(v484) = ((a32 ^ *(_DWORD *)(v125 - 252)) + 433359904 - ((2 * (a32 ^ *(_DWORD *)(v125 - 252))) & 0x33A91840)) ^ LODWORD(STACK[0x214]) ^ v515;
  LODWORD(v469) = v511[BYTE1(v467)];
  LODWORD(v497) = v511[(((a32 ^ *(_BYTE *)(v125 - 252))
                                        + 32
                                        - ((2 * (a32 ^ *(_BYTE *)(v125 - 252))) & 0x40)) ^ LOBYTE(STACK[0x214]) ^ v515)];
  v518 = &v511[v468 >> 24];
  v519 = &v511[v488 >> 24];
  v520 = 4 * (v467 >> 24);
  v521 = &v511[(unint64_t)v520 / 4];
  v522 = 4 * BYTE1(v468);
  v523 = &v521[(unint64_t)v522 / 4 + v520 / 0xFFFFFFFFFFFFFFFCLL];
  v524 = &v523[v522 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v482) = v524[(LODWORD(STACK[0x210]) ^ LOBYTE(STACK[0x214]) ^ a51 ^ *(_BYTE *)(v125 - 232) ^ v512)];
  v525 = &v524[BYTE2(v468)];
  v526 = &v524[BYTE2(v467)];
  v527 = v524;
  v528 = v524[v484 >> 24];
  v529 = 4 * (LODWORD(STACK[0x210]) ^ LOBYTE(STACK[0x214]) ^ a52 ^ *(_BYTE *)(v125 - 248) ^ v514);
  v530 = &v527[(unint64_t)v529 / 4];
  v531 = 4
       * ((unsigned __int16)(((a32 ^ *(_WORD *)(v125 - 252))
                                             - 29664
                                             - ((2 * (a32 ^ *(_WORD *)(v125 - 252))) & 0x1840)) ^ LOWORD(STACK[0x214]) ^ v515) >> 8);
  v532 = &v530[(unint64_t)v531 / 4 + v529 / 0xFFFFFFFFFFFFFFFCLL];
  v533 = 4 * BYTE2(v488);
  v534 = &v532[(unint64_t)v533 / 4 + v531 / 0xFFFFFFFFFFFFFFFCLL];
  v535 = &v534[(LODWORD(STACK[0x210]) ^ LOBYTE(STACK[0x214]) ^ a30 ^ *(_BYTE *)(v125 - 240) ^ v513)
             + v533 / 0xFFFFFFFFFFFFFFFCLL];
  v536 = 4 * BYTE1(v488);
  v537 = &v534[v533 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v536 / 4];
  v538 = STACK[0x208];
  v539 = v464 ^ LODWORD(STACK[0x208]);
  v540 = &v537[v536 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v537) = v539 ^ a55 ^ *(_DWORD *)(v125 - 256) ^ __ROR4__((_DWORD)v497, 16) ^ __ROR4__(*v521, 24) ^ *v525 ^ __ROR4__(*v537, 8);
  LODWORD(v484) = v539 ^ a49 ^ LODWORD(STACK[0x47C]) ^ __ROR4__((_DWORD)v469, 8) ^ __ROR4__(*v519, 24) ^ __ROR4__(*v535, 16) ^ v540[BYTE2(v484)];
  LODWORD(v469) = *v523;
  LODWORD(STACK[0x37C]) = v254;
  LODWORD(v530) = v539 ^ a100 ^ v254 ^ __ROR4__((_DWORD)v469, 8) ^ *v526 ^ __ROR4__(v528, 24) ^ __ROR4__(*v530, 16);
  LODWORD(v518) = *v518;
  LODWORD(STACK[0x380]) = v343;
  LODWORD(v518) = v539 ^ a54 ^ v343 ^ __ROR4__((_DWORD)v518, 24) ^ __ROR4__((_DWORD)v482, 16) ^ __ROR4__(*v532, 8) ^ *v534;
  LODWORD(v469) = v540[v537];
  LODWORD(v497) = v540[BYTE2(v537)];
  LODWORD(v519) = v540[v518 >> 24];
  LODWORD(v521) = v540[v484 >> 24];
  v541 = 4 * (v530 >> 24);
  v542 = &v540[(unint64_t)v541 / 4];
  v543 = 4 * (v537 >> 24);
  v544 = &v542[(unint64_t)v543 / 4 + v541 / 0xFFFFFFFFFFFFFFFCLL];
  v545 = 4 * BYTE1(v484);
  v546 = &v544[(unint64_t)v545 / 4 + v543 / 0xFFFFFFFFFFFFFFFCLL];
  v547 = 4 * BYTE2(v530);
  v548 = &v546[v545 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v547 / 4];
  v549 = 4 * BYTE1(v518);
  v550 = &v548[(unint64_t)v549 / 4 + v547 / 0xFFFFFFFFFFFFFFFCLL];
  v551 = 4 * v518;
  v552 = &v550[(unint64_t)v551 / 4 + v549 / 0xFFFFFFFFFFFFFFFCLL];
  v553 = 4 * v530;
  v554 = &v552[(unint64_t)v553 / 4 + v551 / 0xFFFFFFFFFFFFFFFCLL];
  v555 = &v554[v553 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v518) = v555[BYTE2(v518)];
  LODWORD(v535) = v555[v484];
  LODWORD(v537) = v555[BYTE1(v537)];
  v556 = 4 * BYTE2(v484);
  v557 = &v555[(unint64_t)v556 / 4];
  v558 = 4 * BYTE1(v530);
  v559 = &v557[(unint64_t)v558 / 4 + v556 / 0xFFFFFFFFFFFFFFFCLL];
  v560 = v516 ^ v538;
  v561 = &v559[v558 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v559) = v516 ^ v538 ^ a99 ^ LODWORD(STACK[0x474]) ^ __ROR4__((_DWORD)v469, 16) ^ __ROR4__((_DWORD)v519, 24) ^ *v557 ^ __ROR4__(*v559, 8);
  LODWORD(v518) = v516 ^ v538 ^ a98 ^ LODWORD(STACK[0x478]) ^ __ROR4__(*v544, 24) ^ __ROR4__(*v546, 8) ^ __ROR4__(*v554, 16) ^ v518;
  LODWORD(v537) = v516 ^ v538 ^ a93 ^ LODWORD(STACK[0x470]) ^ __ROR4__((_DWORD)v521, 24) ^ *v548 ^ __ROR4__(*v552, 16) ^ __ROR4__((_DWORD)v537, 8);
  LODWORD(v542) = v516 ^ v538 ^ a47 ^ LODWORD(STACK[0x46C]) ^ v497 ^ __ROR4__(*v542, 24) ^ __ROR4__(*v550, 8) ^ __ROR4__((_DWORD)v535, 16);
  LODWORD(v469) = v561[BYTE1(v518)];
  LODWORD(v497) = v561[BYTE1(v537)];
  LODWORD(v519) = v561[BYTE2(v537)];
  LODWORD(v521) = v561[BYTE2(v518)];
  LODWORD(v544) = v561[BYTE1(v559)];
  LODWORD(v546) = v561[v542];
  LODWORD(v548) = v561[v537 >> 24];
  v562 = 4 * (v542 >> 24);
  v563 = &v561[(unint64_t)v562 / 4];
  v564 = 4 * BYTE2(v559);
  v565 = &v563[(unint64_t)v564 / 4 + v562 / 0xFFFFFFFFFFFFFFFCLL];
  v566 = &v565[v564 / 0xFFFFFFFFFFFFFFFCLL];
  LODWORD(v554) = v566[v559 >> 24];
  LODWORD(v557) = v566[BYTE1(v542)];
  LODWORD(v559) = v566[v559];
  v567 = 4 * BYTE2(v542);
  v568 = &v566[(unint64_t)v567 / 4];
  v569 = 4 * (v518 >> 24);
  v570 = &v568[(unint64_t)v569 / 4 + v567 / 0xFFFFFFFFFFFFFFFCLL];
  v571 = a44 ^ LODWORD(STACK[0x424]) ^ __ROR4__((_DWORD)v469, 8) ^ __ROR4__((_DWORD)v548, 24) ^ __ROR4__((_DWORD)v559, 16) ^ *v568;
  v572 = &v570[v569 / 0xFFFFFFFFFFFFFFFCLL];
  v573 = a42 ^ LODWORD(STACK[0x41C]) ^ v521 ^ __ROR4__((_DWORD)v544, 8) ^ __ROR4__(*v563, 24) ^ __ROR4__(v570[v569 / 0xFFFFFFFFFFFFFFFCLL + v537], 16);
  v574 = a41 ^ LODWORD(STACK[0x42C]) ^ v519 ^ __ROR4__((_DWORD)v554, 24) ^ __ROR4__((_DWORD)v557, 8) ^ __ROR4__(v570[v569 / 0xFFFFFFFFFFFFFFFCLL + v518], 16);
  v575 = a40 ^ LODWORD(STACK[0x468]) ^ __ROR4__((_DWORD)v497, 8) ^ __ROR4__((_DWORD)v546, 16) ^ *v565 ^ __ROR4__(*v570, 24);
  if ((v571 & 4) != 0)
    v576 = -4;
  else
    v576 = 4;
  v577 = STACK[0x3B8];
  LODWORD(STACK[0x2E4]) = *(_DWORD *)(STACK[0x3B8] + 4 * ((v576 + v571) ^ 4u));
  v578 = *(_DWORD *)(v577 + 4 * BYTE1(v573));
  v579 = *(_DWORD *)(v577 + 4 * BYTE1(v571));
  STACK[0x3B8] = v577 + 4 * v574;
  LODWORD(STACK[0x2E0]) = *(_DWORD *)(v577 + 4 * BYTE1(v575));
  v580 = (_DWORD *)(v577 + 4 * BYTE1(v574));
  STACK[0x2D0] = v577 + 4 * BYTE2(v573);
  v581 = (_DWORD *)(v577 + 4 * HIBYTE(v573));
  LODWORD(STACK[0x2DC]) = *(_DWORD *)(v577 + 4 * HIBYTE(v571));
  v582 = (_DWORD *)(v577 + 4 * BYTE2(v575));
  LODWORD(STACK[0x2CC]) = a29 ^ LODWORD(STACK[0x400]) ^ v578 ^ __ROR4__(*(_DWORD *)(v577 + 4 * BYTE2(v571)), 24) ^ __ROR4__(*(_DWORD *)(v577 + 4 * HIBYTE(v574)), 16) ^ (*(_DWORD *)(v577 + 4 * v575) << 24) ^ (*(_DWORD *)(v577 + 4 * v575) >> 8);
  LODWORD(STACK[0x2C8]) = a28 ^ LODWORD(STACK[0x404]) ^ v579 ^ __ROR4__(*(_DWORD *)(v577 + 4 * HIBYTE(v575)), 16) ^ __ROR4__(*(_DWORD *)(v577 + 4 * v573), 8) ^ __ROR4__(*(_DWORD *)(v577 + 4 * BYTE2(v574)), 24);
  v583 = (v512 + 1707422547) ^ v513 ^ 0x93C5B2AB;
  v584 = v517 ^ a97 ^ LODWORD(STACK[0x460]) ^ v512;
  v585 = v517 ^ a96 ^ LODWORD(STACK[0x45C]) ^ v513;
  v586 = v516 ^ LODWORD(STACK[0x200]) ^ a53 ^ LODWORD(STACK[0x454]) ^ v515;
  v587 = v517 ^ a50 ^ LODWORD(STACK[0x458]) ^ v514;
  v588 = v572[BYTE1(v585)];
  v589 = v572[BYTE2(v587)];
  v590 = v572[BYTE2(v585)];
  v591 = v572[BYTE2(v584)];
  v592 = v572[(v516 ^ LOBYTE(STACK[0x200]) ^ a53 ^ LOBYTE(STACK[0x454]) ^ v515)];
  v593 = v572[v585];
  v594 = 4 * BYTE2(v586);
  v595 = &v572[(unint64_t)v594 / 4];
  v596 = 4 * HIBYTE(v584);
  v597 = &v595[(unint64_t)v596 / 4 + v594 / 0xFFFFFFFFFFFFFFFCLL];
  v598 = 4 * v587;
  v599 = &v597[v596 / 0xFFFFFFFFFFFFFFFCLL + (unint64_t)v598 / 4];
  v600 = 4 * HIBYTE(v586);
  v601 = &v599[(unint64_t)v600 / 4 + v598 / 0xFFFFFFFFFFFFFFFCLL];
  v602 = &v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v584)];
  v603 = LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x378]) ^ v589 ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v585)], 24) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL+ v584], 16);
  v604 = __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v586)], 8);
  v605 = (v603 ^ v604) + v538 - 2 * ((v603 ^ v604) & v538);
  v606 = v539 ^ a56 ^ LODWORD(STACK[0x450]) ^ v590 ^ __ROR4__(v592, 16) ^ __ROR4__(*v597, 24) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v587)], 8);
  LODWORD(v595) = v539 ^ a95 ^ LODWORD(STACK[0x448]) ^ *v595 ^ __ROR4__(v593, 16) ^ __ROR4__(v601[HIBYTE(v587)+ v600 / 0xFFFFFFFFFFFFFFFCLL], 24) ^ __ROR4__(*v602, 8);
  v607 = v539 ^ a94 ^ LODWORD(STACK[0x444]) ^ __ROR4__(v588, 8) ^ v591 ^ __ROR4__(*v599, 16) ^ __ROR4__(*v601, 24);
  v608 = a48 ^ v605;
  LODWORD(v602) = v560 ^ a45 ^ LODWORD(STACK[0x440]) ^ v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v608)] ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v606)], 24) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + v607], 16) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v595)], 8);
  v609 = v560 ^ a92 ^ LODWORD(STACK[0x43C]) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v607)], 8) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + v606], 16) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v608)], 24) ^ v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v595)];
  v610 = v560 ^ a46 ^ LODWORD(STACK[0x438]) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v606)], 8) ^ v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v607)] ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + (v595 >> 24)], 24) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + v608], 16);
  LODWORD(v595) = v560 ^ a91 ^ LODWORD(STACK[0x434]) ^ v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v606)] ^ (v601[v600 / 0xFFFFFFFFFFFFFFFCLL + v595] << 16) ^ HIWORD(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + v595]) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v607)], 24) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v608)], 8);
  v611 = v601[v600 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v609)];
  v612 = &v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v609)];
  v613 = v601[v600 / 0xFFFFFFFFFFFFFFFCLL + v602];
  v614 = v583 - v514;
  v615 = a43 ^ LODWORD(STACK[0x430]) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + v595], 16) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v610)], 8) ^ v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v609)] ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + (v602 >> 24)], 24);
  v616 = a39 ^ LODWORD(STACK[0x420]) ^ v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v595)] ^ __ROR4__(v601[v600/ 0xFFFFFFFFFFFFFFFCLL+ v609], 16) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v602)], 8) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v610)], 24);
  v617 = a38 ^ LODWORD(STACK[0x418]) ^ __ROR4__(*v612, 8) ^ v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v602)] ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + v610], 16);
  STACK[0x3B0] = (unint64_t)&v601[v600 / 0xFFFFFFFFFFFFFFFCLL];
  v618 = v617 ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + (v595 >> 24)], 24);
  v619 = a37 ^ LODWORD(STACK[0x428]) ^ __ROR4__(v611, 24) ^ v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE2(v610)] ^ __ROR4__(v613, 16) ^ __ROR4__(v601[v600 / 0xFFFFFFFFFFFFFFFCLL + BYTE1(v595)], 8);
  v620 = (_DWORD *)(v577 + 4 * HIBYTE(v618));
  v621 = (_DWORD *)(v577 + 4 * v618);
  v622 = (_DWORD *)(v577 + 4 * BYTE1(v616));
  v623 = (_DWORD *)(v577 + 4 * BYTE2(v618));
  v624 = v577;
  v625 = (_DWORD *)(v577 + 4 * BYTE1(v618));
  v626 = (_DWORD *)(v577 + 4 * HIBYTE(v619));
  v627 = (_DWORD *)(v577 + 4 * v616);
  v628 = v577;
  v629 = (_DWORD *)(v577 + 4 * BYTE2(v615));
  v630 = (_DWORD *)(v577 + 4 * BYTE1(v615));
  v631 = (_DWORD *)(v577 + 4 * v619);
  v632 = (_DWORD *)(v577 + 4 * BYTE1(v619));
  v633 = 4 * BYTE2(v616);
  v634 = (_DWORD *)(v577 + v633);
  v635 = a27 ^ LODWORD(STACK[0x3EC]) ^ __ROR4__(STACK[0x2E4], 8) ^ *v580 ^ __ROR4__(*v581, 16) ^ __ROR4__(*v582, 24);
  v636 = a26 ^ LODWORD(STACK[0x3F0]) ^ __ROR4__(*(_DWORD *)STACK[0x3B8], 8) ^ LODWORD(STACK[0x2E0]) ^ __ROR4__(*(_DWORD *)STACK[0x2D0], 24) ^ __ROR4__(STACK[0x2DC], 16);
  v637 = LODWORD(STACK[0x2CC]) ^ 0xB64FC9DE;
  v638 = LODWORD(STACK[0x2C8]) ^ 0x1E3F1A5D;
  v639 = *(_DWORD *)(v125 - 136);
  v640 = v635 ^ 0x81B4831;
  if ((v639 & 1) != 0)
    v641 = LODWORD(STACK[0x2C8]) ^ 0x1E3F1A5D;
  else
    v641 = LODWORD(STACK[0x2CC]) ^ 0xB64FC9DE;
  if ((v639 & 1) != 0)
    v638 = v640;
  LODWORD(STACK[0x2E4]) = v638;
  v642 = v636 ^ 0xBCBCFF;
  if ((v639 & 1) != 0)
    v643 = v642;
  else
    v643 = v640;
  if ((v639 & 1) == 0)
    v637 = v642;
  v644 = (((v515 ^ 0xFE3E1002) + 29487102) ^ ((v515 ^ 0x6076B710) - 1618392848) ^ ((v515 ^ 0x879C2B32) + 2019808462))
       - 856345537
       + ((((v614 + 1510080199) ^ 0x2EF1B472) - 2045536462) ^ (((v614 + 1510080199) ^ 0x4AD0411A) - 500014502) ^ (((v614 + 1510080199) ^ 0x74DED289) - 599985717));
  v645 = (v644 ^ 0xD0B843BC) & (2 * (v644 & 0x94C2533E)) ^ v644 & 0x94C2533E;
  v646 = ((2 * (v644 ^ 0xD8B86194)) ^ 0x98F46554) & (v644 ^ 0xD8B86194) ^ (2 * (v644 ^ 0xD8B86194)) & 0x4C7A32AA;
  v647 = (v646 ^ 0x100202) & (4 * v645) ^ v645;
  v648 = ((4 * (v646 ^ 0x440A12AA)) ^ 0x31E8CAA8) & (v646 ^ 0x440A12AA) ^ (4 * (v646 ^ 0x440A12AA)) & 0x4C7A32A8;
  v649 = (v648 ^ 0x6802A0) & (16 * v647) ^ v647;
  v650 = ((16 * (v648 ^ 0x4C123002)) ^ 0xC7A32AA0) & (v648 ^ 0x4C123002) ^ (16 * (v648 ^ 0x4C123002)) & 0x4C7A32A0;
  v651 = v649 ^ 0x4C7A32AA ^ (v650 ^ 0x44222200) & (v649 << 8);
  v652 = *(_DWORD *)(v624 + 4 * v615);
  v653 = *(_DWORD *)(v628 + 4 * HIBYTE(v616));
  v654 = v644 ^ (2
               * ((v651 << 16) & 0x4C7A0000 ^ v651 ^ ((v651 << 16) ^ 0x32AA0000) & (((v650 ^ 0x858100A) << 8) & 0x4C7A0000 ^ 0x4480000 ^ (((v650 ^ 0x858100A) << 8) ^ 0x7A320000) & (v650 ^ 0x858100A))));
  v655 = STACK[0x224];
  v656 = v654 ^ 0x2B2987DB;
  v657 = LODWORD(STACK[0x224]) ^ LODWORD(STACK[0x238]) ^ a90 ^ LODWORD(STACK[0x410]) ^ v654 ^ 0x2B2987DB ^ __ROR4__(*v621, 8) ^ *v622 ^ __ROR4__(*(_DWORD *)(v628 + 4 * BYTE2(v619)), 24);
  STACK[0x3B8] = (unint64_t)&v634[v633 / 0xFFFFFFFFFFFFFFFCLL];
  v658 = v657 ^ __ROR4__(v634[v633 / 0xFFFFFFFFFFFFFFFCLL + HIBYTE(v615)], 16);
  v659 = LODWORD(STACK[0x218]) ^ v655 ^ a25;
  v660 = v659 ^ LODWORD(STACK[0x40C]) ^ v654 ^ 0x2B2987DB ^ __ROR4__(v652, 8) ^ *v625 ^ __ROR4__(*v626, 16) ^ __ROR4__(*v634, 24);
  v661 = v659 ^ LODWORD(STACK[0x3FC]) ^ v654 ^ 0x2B2987DB ^ __ROR4__(*v620, 16) ^ __ROR4__(*v627, 8) ^ __ROR4__(*v629, 24) ^ *v632;
  v662 = v659 ^ LODWORD(STACK[0x408]) ^ v654 ^ 0x2B2987DB ^ __ROR4__(*v623, 24) ^ __ROR4__(v653, 16) ^ *v630 ^ __ROR4__(*v631, 8);
  v663 = v658 ^ 0x90D6C31A;
  if ((v639 & 1) != 0)
    v664 = v658 ^ 0x90D6C31A;
  else
    v664 = v660;
  if ((v639 & 1) != 0)
  {
    v663 = v661;
    v665 = v662;
  }
  else
  {
    v665 = v661;
  }
  if ((v639 & 1) != 0)
    v666 = v660;
  else
    v666 = v662;
  v667 = (((2 * (LODWORD(STACK[0x2F8]) ^ 0x3BB20CC1)) | 0x86F9B960) - (LODWORD(STACK[0x2F8]) ^ 0x3BB20CC1) - 1132256432) ^ 0x496C7CD0;
  v668 = v667 - ((2 * v667) & 0xF7C5BD32);
  v669 = (v639 & 2) == 0;
  v670 = v641;
  if ((v639 & 2) != 0)
    v671 = v641;
  else
    v671 = v643;
  v672 = v671 ^ v656;
  v673 = STACK[0x2E4];
  if ((v639 & 2) != 0)
    v674 = STACK[0x2E4];
  else
    v674 = v637;
  v675 = v672 ^ v674;
  if ((v639 & 2) != 0)
    v676 = v663;
  else
    v676 = v666;
  v677 = v675 ^ v676;
  v678 = v675 ^ v676 ^ 0x84AC85BD;
  v679 = v678 ^ LODWORD(STACK[0x2E8]);
  v680 = (BYTE1(v679) ^ 0xD5) + ((v679 >> 8) & 0xBF ^ 0x863EC42A) - ((BYTE1(v679) ^ 0xD5) & 0xFFFFFFBF);
  v681 = (uint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x464]) ^ 0x27CB));
  *(_BYTE *)(*(_QWORD *)(v125 - 128) + ((v668 - 69017959) ^ 0x819D7666)) = *(_BYTE *)(v681
                                                                                      + (((v680 & 0x860201AB ^ 0x29000981)
                                                                                        + (v680 ^ 0x963A063E)
                                                                                        - ((v680 ^ 0x963A063E) & 0x401AB)) ^ 0xBF02CB76)) ^ 0xA9;
  if (v669)
    v682 = v670;
  else
    v682 = v643;
  if (v669)
    v683 = v673;
  else
    v683 = v637;
  if (v669)
  {
    v666 = v663;
    v684 = v664;
  }
  else
  {
    v684 = v665;
  }
  if (v669)
    v685 = v665;
  else
    v685 = v664;
  v686 = (((v684 ^ 0x2052077B) - 542246779) ^ ((v684 ^ 0x7C8D01C2) - 2089615810) ^ ((v684 ^ 0xDC8AB2D5) + 594890027))
       - (((v684 ^ v683 ^ 0x41FC658C) - 1107060108) ^ ((v684 ^ v683 ^ 0x6B84056) - 112738390) ^ ((v684 ^ v683 ^ 0x49C9C03)
                                                                                               - 77372419))
       + 1946566919;
  v687 = (v686 ^ 0xCD66B18C) & (2 * (v686 & 0xC876B98C)) ^ v686 & 0xC876B98C;
  v688 = ((2 * (v686 ^ 0xDDC7C394)) ^ 0x2B62F430) & (v686 ^ 0xDDC7C394) ^ (2 * (v686 ^ 0xDDC7C394)) & 0x15B17A18;
  v689 = (v688 ^ 0x1206010) & (4 * v687) ^ v687;
  v690 = ((4 * (v688 ^ 0x14910A08)) ^ 0x56C5E860) & (v688 ^ 0x14910A08) ^ (4 * (v688 ^ 0x14910A08)) & 0x15B17A18;
  v691 = (v690 ^ 0x14816800) & (16 * v689) ^ v689;
  v692 = ((16 * (v690 ^ 0x1301218)) ^ 0x5B17A180) & (v690 ^ 0x1301218) ^ (16 * (v690 ^ 0x1301218)) & 0x15B17A10;
  v693 = v691 ^ 0x15B17A18 ^ (v692 ^ 0x11112000) & (v691 << 8);
  v694 = (v693 << 16) & 0x15B10000 ^ v693 ^ ((v693 << 16) ^ 0x7A180000) & (((v692 ^ 0x4A05A18) << 8) & 0x15B10000 ^ 0x4810000 ^ (((v692 ^ 0x4A05A18) << 8) ^ 0x317A0000) & (v692 ^ 0x4A05A18));
  v695 = ((v683 ^ 0x98D7B482) + 1730694014) ^ ((v683 ^ 0xF79F8E2D) + 140538323) ^ ((v683 ^ 0xACC5371A) + 1396361446);
  v696 = -638120201
       * (((v677 ^ 0x3BF8478D) - 1006126989) ^ ((v677 ^ 0x1CB5139E) - 481629086) ^ ((v677 ^ 0xB97A1FC0) + 1183178816))
       - 1241588248;
  v697 = (v696 ^ 0xF3158608) & (2 * (v696 & 0xFB15D4AD)) ^ v696 & 0xFB15D4AD;
  v698 = ((2 * (v696 ^ 0x253E8E42)) ^ 0xBC56B5DE) & (v696 ^ 0x253E8E42) ^ (2 * (v696 ^ 0x253E8E42)) & 0xDE2B5AEE;
  v699 = (v698 ^ 0x9C0210CC) & (4 * v697) ^ v697;
  v700 = ((4 * (v698 ^ 0x42294A21)) ^ 0x78AD6BBC) & (v698 ^ 0x42294A21) ^ (4 * (v698 ^ 0x42294A21)) & 0xDE2B5AEC;
  v701 = (v700 ^ 0x58294AA0) & (16 * v699) ^ v699;
  v702 = ((16 * (v700 ^ 0x86021043)) ^ 0xE2B5AEF0) & (v700 ^ 0x86021043) ^ (16 * (v700 ^ 0x86021043)) & 0xDE2B5AE0;
  v703 = v701 ^ 0xDE2B5AEF ^ (v702 ^ 0xC2210A00) & (v701 << 8);
  v704 = (-2102767775 - v695 - ((2028332182 - 2 * v695) & 0x8C6EBA2C)) ^ v683 ^ v686 ^ (2 * v694);
  v705 = (((v684 ^ 0x80E8D1E8) + 2132225560) ^ ((v684 ^ 0x63B97D6D) - 1673100653) ^ ((v684 ^ 0x630418E9) - 1661212905))
       - 70571043
       + (((v704 ^ 0x72403D1F) - 129781763) ^ ((v704 ^ 0x394149A5) - 1287464121) ^ ((v704 ^ 0xD8F69A5) - 2020803769));
  v706 = (v705 ^ 0x37FEF443) & (2 * (v705 & 0xB7FCF892)) ^ v705 & 0xB7FCF892;
  v707 = ((2 * (v705 ^ 0x55876543)) ^ 0xC4F73BA2) & (v705 ^ 0x55876543) ^ (2 * (v705 ^ 0x55876543)) & 0xE27B9DD0;
  v708 = (v707 ^ 0xC0730080) & (4 * v706) ^ v706;
  v709 = ((4 * (v707 ^ 0x22088451)) ^ 0x89EE7744) & (v707 ^ 0x22088451) ^ (4 * (v707 ^ 0x22088451)) & 0xE27B9DD0;
  v710 = (v709 ^ 0x806A1540) & (16 * v708) ^ v708;
  v711 = ((16 * (v709 ^ 0x62118891)) ^ 0x27B9DD10) & (v709 ^ 0x62118891) ^ (16 * (v709 ^ 0x62118891)) & 0xE27B9DD0;
  v712 = v710 ^ 0xE27B9DD1 ^ (v711 ^ 0x22399D00) & (v710 << 8);
  v713 = -638120201
       * (((v685 ^ v656 ^ 0x5AE98F8D) - 1525256077) ^ ((v685 ^ v656 ^ 0xAC9C058B) + 1399061109) ^ ((v685 ^ v656 ^ 0x6842C1D5)
                                                                                                 - 1749205461))
       + 166164408;
  v714 = v713 & 0xA72D3ADD ^ 0x17222C48 ^ (v713 ^ 0xB60D329D) & (2 * (v713 & 0xA72D3ADD));
  v715 = ((2 * (v713 ^ 0xB00F1695)) ^ 0x2E445890) & (v713 ^ 0xB00F1695) ^ (2 * (v713 ^ 0xB00F1695)) & 0x17222C48;
  v716 = v715 & 0xCC4DD910 ^ v714 ^ ((4 * v714) ^ 0x90C56830) & (v715 ^ 0x6000800);
  v717 = ((4 * v715) ^ 0xD44DF910) & (v715 ^ 0x6000800) ^ v715 & 0xCC4DD910;
  v718 = v717 & 0xCC4DD910 ^ v716 ^ ((16 * v716) ^ 0xFE6F9D90) & (v717 ^ 0x4000808);
  v719 = ((16 * v717) ^ 0x8C4D5910) & (v717 ^ 0x4000808) ^ v717 & 0xCC4DD910;
  v720 = v718 ^ v719 & 0xCC4DD910 ^ ((v718 << 8) ^ 0xEE619110) & (v719 ^ 0x4000848);
  v721 = *(_QWORD *)(v125 - 128);
  v722 = ((v719 << 8) ^ 0xCC45D910) & (v719 ^ 0x4000848) ^ v719 & 0xCC4DD910;
  v723 = v682 ^ v713 ^ v696 ^ (2
                             * (v703 ^ v722 & 0x4C4DD910 ^ v720 ^ (v703 << 16) & 0x5E2B0000 ^ ((v703 << 16) ^ 0x5AEF0000) & (((v702 ^ 0x1C0A500F) << 8) & 0xDE2B0000 ^ 0x54210000 ^ (((v702 ^ 0x1C0A500F) << 8) ^ 0x2B5A0000) & (v702 ^ 0x1C0A500F)) ^ ((v720 << 16) ^ 0xE805D911) & (v722 ^ 0x13220000) ^ ((v720 << 16) ^ 0xE805D911) & 0x17220800)) ^ 0x45E021D5;
  v724 = v723 ^ v705 ^ (2
                      * ((v712 << 16) & 0x627B0000 ^ v712 ^ ((v712 << 16) ^ 0x1DD10000) & (((v711 ^ 0xC04200C1) << 8) & 0xE27B0000 ^ 0x620000 ^ (((v711 ^ 0xC04200C1) << 8) ^ 0x7B9D0000) & (v711 ^ 0xC04200C1))));
  v725 = (671618883 * (v724 ^ 0xCA0791C)) ^ (671618883
                                           * (((v666 ^ 0x4D46A28D) + 1359773328) ^ ((v666 ^ 0x22428775) + 1040735096) ^ ((v666 ^ 0x6C4904E6) + 1879300325))
                                           - 1203558807);
  v726 = ((v725 - ((2 * v725) & 0x871A1B6A) - 1014166091) ^ v674)
       + 785637719
       * ((((v666 ^ 0x1E9EE95A) + 47461721) ^ ((v666 ^ 0xF1E9E8B1) - 308071244) ^ ((v666 ^ 0xEC3A20F5) - 261030664))
        - (v724 ^ 0xCA0791C));
  v727 = 1924354253
       * (((v654 ^ 0xCF37D7A5) + 629849435) ^ ((v654 ^ 0xDFFA2C2) - 415053762) ^ ((v654 ^ 0x749B9871) - 1641614705))
       + 75180405;
  v728 = (v727 ^ 0x8048CD80) & (2 * (v727 & 0xC96AE029)) ^ v727 & 0xC96AE029;
  v729 = ((2 * (v727 ^ 0x10888DD0)) ^ 0xB3C4DBF2) & (v727 ^ 0x10888DD0) ^ (2 * (v727 ^ 0x10888DD0)) & 0xD9E26DF8;
  v730 = (v729 ^ 0x1C001E0) & (4 * v728) ^ v728;
  v731 = ((4 * (v729 ^ 0x48222409)) ^ 0x6789B7E4) & (v729 ^ 0x48222409) ^ (4 * (v729 ^ 0x48222409)) & 0xD9E26DF8;
  v732 = (v731 ^ 0x418025E0) & (16 * v730) ^ v730;
  v733 = ((16 * (v731 ^ 0x98624819)) ^ 0x9E26DF90) & (v731 ^ 0x98624819) ^ (16 * (v731 ^ 0x98624819)) & 0xD9E26DF0;
  v734 = v732 ^ 0xD9E26DF9 ^ (v733 ^ 0x98224D00) & (v732 << 8);
  v735 = v727 ^ (2
               * ((v734 << 16) & 0x59E20000 ^ v734 ^ ((v734 << 16) ^ 0x6DF90000) & (((v733 ^ 0x41C02069) << 8) & 0x59E20000 ^ 0x19820000 ^ (((v733 ^ 0x41C02069) << 8) ^ 0xE26D0000) & (v733 ^ 0x41C02069)))) ^ (1924354253 * (((v723 ^ v684 ^ 0x6B5F83D3) - 1801421779) ^ ((v723 ^ v684 ^ 0x39B803F7) - 968360951) ^ ((v723 ^ v684 ^ 0x2EA31B16) - 782441238)) - 1150949622) ^ 0x5E3BD06C ^ (v726 - 1712619995);
  v736 = v723 ^ v676 ^ v735;
  v737 = v656 ^ LODWORD(STACK[0x2EC]) ^ v736;
  v738 = LODWORD(STACK[0x464]);
  v739 = (uint64_t)*(&off_1015B46D0 + (int)(v738 ^ 0x285A));
  *(_BYTE *)(v721 + STACK[0x300]) = (*(_BYTE *)(v739 + (BYTE1(v737) ^ 0xBALL)) + (BYTE1(v737) ^ 0x1D) + 1) ^ 0xFA;
  v740 = (((v678 ^ v685 ^ v724 ^ 0x4EA6AF97) - 1776694270) ^ ((v678 ^ v685 ^ v724 ^ 0x7957FC3A) - 1578590291) ^ ((v678 ^ v685 ^ v724 ^ 0xA19F50B3) + 2032153382))
       + 1815532107
       * ((((v677 ^ 0xAA7B4FEE) + 1434759186) ^ ((v677 ^ 0x383A52E0) - 943346400) ^ ((v677 ^ 0xC7656DD) - 209082077))
        - (((v685 ^ v656 ^ 0xEF676124) + 278437596) ^ ((v685 ^ v656 ^ 0x83374D6F) + 2093527697) ^ ((v685 ^ v656 ^ 0xF2676798)
                                                                                                 + 228104296)))
       - 2144336103;
  v741 = (v740 ^ 0x32FCD85F) & (2 * (v740 & 0x30FE985E)) ^ v740 & 0x30FE985E;
  v742 = ((2 * (v740 ^ 0x32F4D847)) ^ 0x4148032) & (v740 ^ 0x32F4D847) ^ (2 * (v740 ^ 0x32F4D847)) & 0x20A4018;
  v743 = (v742 ^ 0x10) & (4 * v741) ^ v741;
  v744 = (4 * (v742 ^ 0x20A4009)) & 0x20A4018 ^ 0x2024019 ^ ((4 * (v742 ^ 0x20A4009)) ^ 0x8290064) & (v742 ^ 0x20A4009);
  v745 = v743 ^ 0x20A4009 ^ v744 & (16 * v743) ^ ((16 * v743) & 0x20A4000 | 0x10);
  v746 = (16 * v744) & 0x20A4010 ^ 0x20A4009 ^ ((16 * v744) ^ 0x20A40190) & v744;
  v747 = (v745 << 8) & 0x20A4000 ^ v745 ^ ((v745 << 8) ^ 0xA401900) & v746;
  v748 = v740 ^ (2
               * ((v747 << 16) & 0x20A0000 ^ v747 ^ ((v747 << 16) ^ 0x40190000) & ((v746 << 8) & 0x20A0000 ^ 0xA0000 ^ ((v746 << 8) ^ 0xA400000) & v746)));
  v749 = STACK[0x364];
  v750 = v654 ^ v666 ^ v735 ^ 0x442D5A09 ^ v748;
  v751 = v750 ^ LODWORD(STACK[0x2F0]);
  *(_BYTE *)(v721
           + (((v749 & 0xFFFFFFF4 ^ 0xA442FBA9) - ((2 * (v749 & 0xFFFFFFF4 ^ 0xA442FBA9)) & 0x347F99A2) - 1707094829) ^ 0x75A03321)) = (*(_BYTE *)(v739 + ((((2 * ((v750 ^ LOBYTE(STACK[0x2F0])) ^ 0x72802274)) | 0x2917A7DE) - ((v750 ^ LOBYTE(STACK[0x2F0])) ^ 0x72802274u) + 1802775569) ^ 0xE60BF17ELL)) + (((v750 ^ LOBYTE(STACK[0x2F0]) ^ 0x25) - 32) ^ ((v750 ^ LOBYTE(STACK[0x2F0]) ^ 0xB8) + 67) ^ ((v750 ^ LOBYTE(STACK[0x2F0]) ^ 0xDF) + 38)) + 72) ^ 0x7D;
  v752 = (((v748 ^ 0x864B32A7) + 380637323) ^ ((v748 ^ 0x635A6724) - 207534838) ^ ((v748 ^ 0xD5EB4DEF) + 1158705091))
       + 970496685
       * ((((v750 ^ v656 ^ 0x51C630C3) - 970951447) ^ ((v750 ^ v656 ^ 0xAF23CF29) + 952470275) ^ ((v750 ^ v656 ^ 0x1503F0FD)
                                                                                                - 2098875177))
        - (((v676 ^ 0xE779F550) + 319814407) ^ ((v676 ^ 0x24B09809) - 792291744) ^ ((v676 ^ 0xC0844C47) + 888291858)))
       - 1323743195;
  v753 = (v752 ^ 0x7D3AC9B1) & (2 * (v752 & 0x7900D1B5)) ^ v752 & 0x7900D1B5;
  v754 = (2 * (v752 ^ 0x1F3AC9F1)) & 0x663A1844 ^ 0x220A0844 ^ ((2 * (v752 ^ 0x1F3AC9F1)) ^ 0xCC743088) & (v752 ^ 0x1F3AC9F1);
  v755 = (4 * v753) & v754 ^ v753 ^ ((4 * v753) & 0x64020844 | 0x280000);
  v756 = (4 * v754) & 0x663A1844 ^ 0x66121844 ^ ((4 * v754) ^ 0x98E86110) & v754;
  v757 = v755 ^ 0x64121844 ^ (16 * v755) & 0x663A1840 ^ ((16 * v755) ^ 0x2800000) & v756;
  v758 = (16 * v756) & 0x663A1840 ^ 0x41A1804 ^ ((16 * v756) ^ 0x63A18440) & v756;
  v759 = (v757 << 8) & 0x663A1800 ^ v757 ^ ((v757 << 8) ^ 0x3A184400) & v758;
  v760 = v684 ^ LODWORD(STACK[0x2FC]) ^ v736 ^ v752 ^ (2
                                                     * ((v759 << 16) & 0x663A0000 ^ v759 ^ ((v759 << 16) ^ 0x18440000) & ((v758 << 8) & 0x663A0000 ^ 0x44220000 ^ ((v758 << 8) ^ 0x3A180000) & v758)));
  v761 = (char *)*(&off_1015B46D0 + (int)(v738 ^ 0x239E)) - 12;
  *(_BYTE *)(v721 + STACK[0x340]) = ((BYTE2(v760) ^ 0xBE) + (BYTE2(v760) ^ 0x56) + v761[BYTE2(v760) ^ 0x84] + 1) ^ 0xE2;
  v762 = (((2 * (BYTE2(v679) ^ 0x75)) | 0xB08A3F3A) - (BYTE2(v679) ^ 0x75) + 666558563) ^ 0x52211FD5;
  *(_BYTE *)(v721 + STACK[0x348]) = (*(_BYTE *)(v739 + ((v762 - ((2 * v762) & 0x5E54563E) - 1356190945) ^ 0x254E2BF4))
                                   + (BYTE2(v679) ^ 0x71)
                                   + 1) ^ 0x5B;
  v763 = ((BYTE2(v737) ^ 0x59) + (HIWORD(v737) & 0xA ^ 0xCD372402) - ((BYTE2(v737) ^ 0x59) & 0xA)) ^ 0xE9BF3DFF;
  v764 = (v763 - ((2 * v763) & 0x41003BAE) - 67781161) ^ 0xDF7DA4A1;
  v765 = (char *)*(&off_1015B46D0 + (int)v738 - 7476) - 12;
  *(_BYTE *)(v721 + STACK[0x328]) = v765[v764] ^ 0x5C;
  *(_BYTE *)(v721 + STACK[0x338]) = *(_BYTE *)(v681 + (HIBYTE(v760) ^ 0x6ALL)) ^ 0xC2;
  *(_BYTE *)(v721 + STACK[0x310]) = (*(_BYTE *)(v739
                                              + ((((v751 >> 8) & 0xC7 ^ 0xCDE4B0C6) + ((v751 >> 8) & 0x38 ^ 0x31) - 1) ^ 0xCDE4B042))
                                   + (BYTE1(v751) ^ 0x13)
                                   + 1) ^ 0xC0;
  *(_BYTE *)(v721 + STACK[0x358]) = v765[BYTE1(v760) ^ 0xFALL] ^ 0x37;
  LODWORD(v764) = (-753549715
                 - (v749 & 0xFFFFFFF6 ^ 0x2634AA82 | 0xD315BE6D)
                 + (v749 & 0xFFFFFFF6 ^ 0x2634AA82 | 0x2CEA4192)) ^ 0xACE800BF;
  *(_BYTE *)(v721 + ((((2 * (_DWORD)v764) & 0x127785E8) - v764 - 154911477) ^ 0x1B2FD2FDLL)) = ((BYTE2(v751) ^ 0x65) + (BYTE2(v751) ^ 0x8D) + v761[(((2 * (BYTE2(v751) ^ 0x4954A8FF)) & 0x902851D0) - (BYTE2(v751) ^ 0x4954A8FF) - 1284799209) ^ 0xFA3F2DB7] + 1) ^ 0x2B;
  *(_BYTE *)(v721 + STACK[0x350]) = ((HIBYTE(v737) ^ 0xD3) + (HIBYTE(v737) ^ 0x3B) + v761[HIBYTE(v737) ^ 0xE9] + 1) ^ 0xFD;
  *(_BYTE *)(v721 + (LODWORD(STACK[0x324]) ^ 0x4BDD045Cu)) = ((HIBYTE(v679) ^ 0x38)
                                                            + *(_BYTE *)(v739 + (HIBYTE(v679) ^ 0x9FLL))
                                                            + 1) ^ 0x3F;
  LODWORD(v764) = ((LODWORD(STACK[0x360]) ^ 0x3B9B7D93)
                 - ((2 * (LODWORD(STACK[0x360]) ^ 0x3B9B7D93)) & 0x6BBEDC8)
                 + 56489700) ^ 0xCDC70E8;
  *(_BYTE *)(v721 + ((((2 * (_DWORD)v764) | 0x883D8DB8) - v764 + 1004615972) ^ 0xBBD9391BLL)) = *(_BYTE *)(v681 + (HIBYTE(v751) ^ 4)) ^ 0x89;
  *(_BYTE *)(v721 + STACK[0x330]) = *(_BYTE *)(v681
                                             + (((v679 ^ 0x2D)
                                               + 540673
                                               - ((2 * (v679 ^ 0x2D)) & 0x10)
                                               + 1799) ^ 0x847DAu)) ^ 0x16;
  v766 = (v760 ^ 0x9A) - ((2 * (v760 ^ 0x9A)) & 0x56) + 515250731;
  *(_BYTE *)(v721 + STACK[0x368]) = ((v760 ^ 0x74)
                                   + (v760 ^ 0x9C)
                                   + v761[((v766 & 0x8001142 ^ 0x20098142)
                                         + (v766 ^ 0x98943E2D)
                                         - ((v766 ^ 0x98943E2D) & 0x82000142)) ^ 0x2C2BB590]
                                   + 1) ^ 0x83;
  LODWORD(v764) = ((v737 ^ 0x91) + (v737 & 0x54 ^ 0x33B7D044) - ((v737 ^ 0x91) & 0x54)) ^ 0x1347C150;
  *(_BYTE *)(v721 + STACK[0x318]) = v765[(((2 * (_DWORD)v764) | 0x2E4DE2C2) - v764 + 1759055519) ^ 0xB7D6E056] ^ 0x7D;
  LODWORD(v765) = (((v749 ^ 0xC6DFD6FA) + 958408966) ^ ((v749 ^ 0xB9A053EA) + 1180675094) ^ ((v749 ^ 0x34A28140)
                                                                                           - 883065152))
                - 2123940165;
  LODWORD(v764) = (v765 ^ 0xEA658131) & (2 * (v765 & 0xCA75C5A5)) ^ v765 & 0xCA75C5A5;
  v767 = ((2 * (v765 ^ 0x7A260B3B)) ^ 0x60A79D3C) & (v765 ^ 0x7A260B3B) ^ (2 * (v765 ^ 0x7A260B3B)) & 0xB053CE9E;
  LODWORD(v764) = (v767 ^ 0x20030C1C) & (4 * v764) ^ v764;
  v768 = ((4 * (v767 ^ 0x90504282)) ^ 0xC14F3A78) & (v767 ^ 0x90504282) ^ (4 * (v767 ^ 0x90504282)) & 0xB053CE9C;
  LODWORD(v764) = (v768 ^ 0x80430A10) & (16 * v764) ^ v764;
  v769 = ((16 * (v768 ^ 0x3010C486)) ^ 0x53CE9E0) & (v768 ^ 0x3010C486) ^ (16 * (v768 ^ 0x3010C486)) & 0xB053CE90;
  LODWORD(v764) = v764 ^ 0xB053CE9E ^ (v769 ^ 0x10C800) & ((_DWORD)v764 << 8);
  LODWORD(v765) = v765 ^ (2
                                      * (((_DWORD)v764 << 16) & 0x30530000 ^ v764 ^ (((_DWORD)v764 << 16) ^ 0x4E9E0000) & (((v769 ^ 0xB043061E) << 8) & 0x30530000 ^ 0x20110000 ^ (((v769 ^ 0xB043061E) << 8) ^ 0x53CE0000) & (v769 ^ 0xB043061E))));
  LODWORD(v764) = (((v765 ^ 0xE6CF5C40) - 132382857) ^ ((v765 ^ 0x6BB534CF) + 1969330170) ^ ((v765 ^ 0x278C3016) + 962106145))
                - 832599600;
  v770 = v764 >= LODWORD(STACK[0x374]);
  v771 = LODWORD(STACK[0x30C]) ^ (v764 < 0x82828580);
  v772 = !v770;
  if (v771)
    v773 = STACK[0x30C];
  else
    v773 = v772;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v125 - 120) + 8 * (int)((14 * (v773 ^ 1)) ^ v738))
                                          - 8))(v738);
}

uint64_t sub_1001F4674()
{
  uint64_t v0;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v0 - 120) + 8 * SLODWORD(STACK[0x274])) - 8))(LODWORD(STACK[0x3A8]));
}

uint64_t sub_1001F4D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(unint64_t);

  v16 = STACK[0x228];
  v17 = 6537 * (STACK[0x228] ^ 0x3322);
  v18 = *(void (**)(unint64_t))(v14 + 8 * (int)(STACK[0x228] ^ 0x3151));
  v18(STACK[0x3B8]);
  v18(STACK[0x3B0]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v15 - 120) + 8 * (int)v16) - v17 + 13066))(a14);
}

uint64_t sub_1001F4D9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 48) = (v1 ^ 0x5A3FD5F4) - 1074267520 + ((2 * v1) & 0xB47FABE8);
  return result;
}

void sub_1001F4E04(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[8];
  _QWORD v7[2];
  int v9;

  v1 = *(&off_1015B46D0
       + (byte_101506EC0[byte_1014343E0[(-31
                                                                                       * ((qword_1015F8458
                                                                                         + qword_1015F8F88) ^ 0xC0))] ^ 0xA3] ^ (-31 * ((qword_1015F8458 + qword_1015F8F88) ^ 0xC0)))
       + 1618);
  v2 = (unint64_t)&v6[*v1 ^ qword_1015F8F88];
  qword_1015F8F88 = 396727777 * (v2 - 0x6790357934740FC0);
  *v1 = 396727777 * (v2 ^ 0x6790357934740FC0);
  v3 = (uint64_t)*(&off_1015B46D0
                + ((-31 * (qword_1015F8F88 ^ 0xC0 ^ qword_1015F8458)) ^ byte_1014341E0[byte_1012F6FD0[(-31 * (qword_1015F8F88 ^ 0xC0 ^ qword_1015F8458))] ^ 0xBE])
                + 108);
  v4 = *(_QWORD *)(v3 + 33752);
  v5 = 1872284299
     * ((~(unint64_t)v7 & 0x7790D1AE85E0AB64 | (unint64_t)v7 & 0x886F2E517A1F549BLL) ^ 0xEE39EA29A6910489);
  v9 = v5 + 1037166954;
  v7[0] = v4 - v5 - 8;
  v7[1] = a1;
  ((void (*)(_QWORD *))((char *)*(&off_1015B46D0
                                           + ((-31
                                                                            * (qword_1015F8F88 ^ 0xC0 ^ *(_DWORD *)v1)) ^ byte_101506EC0[byte_1014343E0[(-31 * (qword_1015F8F88 ^ 0xC0 ^ *(_DWORD *)v1))] ^ 0x7A])
                                           + 901)
                                 - 12))(v7);
  __asm { BR              X9 }
}

uint64_t sub_1001F4FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, int a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;

  v21 = *(_DWORD *)(v16 + 12);
  v22 = *(_DWORD *)(v16 + 32);
  a15 = *(_QWORD *)(v19 + 33864) ^ (1910742433
                                  * ((2 * (v20 & 0x56F21118EC248BA0) - v20 - 0x56F21118EC248BA5) ^ 0x5124DF155C731CBFLL));
  a14 = v21 ^ (1910742433 * ((2 * (v20 & 0xEC248BA0) - v20 + 333149275) ^ 0x5C731CBF));
  a11 = v22 - 1910742433 * ((2 * (v20 & 0xEC248BA0) - v20 + 333149275) ^ 0x5C731CBF);
  a12 = (1910742433 * ((2 * (v20 & 0xEC248BA0) - v20 + 333149275) ^ 0x5C731CBF)) ^ 0xBC0925C4;
  v23 = (*(uint64_t (**)(int *))(v17 + 20120))(&a11);
  *(_DWORD *)(v15 + 32) = 5;
  return ((uint64_t (*)(uint64_t))(v18 - 787363791 + *(_QWORD *)(v19 + 198952)))(v23);
}

uint64_t sub_1001F50B4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v1 + 32) = a1 - 520513751;
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(*(_QWORD *)(v2 + 8232) - 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 198952) - (v3 ^ 0x2EEE37CF)))();
}

void sub_1001F5124(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }
}

uint64_t sub_1001F51A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2389 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0x2188u)) - 8))();
}

uint64_t sub_1001F5204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  uint64_t v17;

  LODWORD(STACK[0x298]) = 803597174;
  STACK[0x280] = 0;
  STACK[0x288] = 0x3FAA10F8B722987;
  STACK[0x290] = 0xFC055EF0748DD678;
  STACK[0x2A8] = 0x200000014;
  return ((uint64_t (*)(unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((24462 * (a16 - 249906734 + ((v16 - 5239) | 0x3056u) < 0xFFFFFFC0)) ^ v16)) - 4))(&STACK[0x240], a2, a3, a4, a5, a6, a7, 1064680028, a9);
}

uint64_t sub_1001F52E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  int v16;
  uint64_t v17;
  _BOOL4 v18;

  v18 = ((((v16 - 1615132589) & 0x6044F7BE) - 14015) ^ a16) + a1 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (((2 * v18) | (16 * v18)) ^ v16)) - 4))();
}

uint64_t sub_1001F534C()
{
  uint64_t v0;
  char v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *((_BYTE *)&STACK[0x240] + v0) = *(_BYTE *)(v5 + v3) - ((v2 + v1 - 79) & (2 * *(_BYTE *)(v5 + v3))) + 43;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((25944 * (v3 == 63)) ^ v2)) - 4))();
}

uint64_t sub_1001F5394()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t v4;
  int8x16_t v5;

  v4.i64[0] = 0x5656565656565656;
  v4.i64[1] = 0x5656565656565656;
  v5.i64[0] = 0x2B2B2B2B2B2B2B2BLL;
  v5.i64[1] = 0x2B2B2B2B2B2B2B2BLL;
  *(int8x16_t *)((char *)&STACK[0x240] + v0) = vaddq_s8(vsubq_s8(*(int8x16_t *)(v3 + v0), vandq_s8(vaddq_s8(*(int8x16_t *)(v3 + v0), *(int8x16_t *)(v3 + v0)), v4)), v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((25930 * (v0 == 48)) ^ v1))
                            - (((v1 + 1074384212) | 0x808041A5) ^ 0xC08A45A1)))();
}

uint64_t sub_1001F5400@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 + a2 + 9596)) - 12))();
}

uint64_t sub_1001F5420@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W8>, double a6, double a7, double a8, double a9, uint64_t a10, double a11, double a12, double a13, double a14, uint64_t a15, double a16, double a17, uint64_t a18, uint64_t a19, ...)
{
  int v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  double v24;
  va_list va;

  va_start(va, a19);
  LODWORD(a16) = ((a5 - 1260029610) & 0x8A905F6D ^ 0x89214D43) + HIDWORD(a12);
  v22.n128_u64[0] = 0x2B2B2B2B2B2B2B2BLL;
  v22.n128_u64[1] = 0x2B2B2B2B2B2B2B2BLL;
  LODWORD(v24) = (a2 + 755278358) & 0x1271787F;
  HIDWORD(v24) = LODWORD(v24) ^ 0x980606A1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128, double, double, double, double, double, double, double, double, double, double, double, double, double))(*(_QWORD *)(v21 + 8 * (a5 + 1064688471)) - 8))(a1, 1235878698, *(_QWORD *)(v21 + 8 * v19) + v20, a3, a4, va, v22, (__n128)vdupq_n_s32(0xE5886351), (__n128)vdupq_n_s32(0xC48863FF), (__n128)vdupq_n_s32(0x1A779C00u), (__n128)vdupq_n_s32(0x12501404u), (__n128)vdupq_n_s32(0x3BE007F0u), (__n128)vdupq_n_s32(0x29A003F0u), (__n128)vdupq_n_s32(0xE752EE89), a6, a7, a8, a9, COERCE_DOUBLE(&STACK[0x2A4]),
           a11,
           a12,
           a13,
           a14,
           v24,
           a16,
           a17,
           -1.64217782e192);
}

uint64_t sub_1001F5530(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 + 6576))
                                                            - ((v2 + 180) | 0x1669u)
                                                            + 7777))(a1, a2, *(_QWORD *)(v3 + 8 * v2) - 4);
}

uint64_t sub_1001F5560()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * v1) - ((v1 - 1432074346) & 0x555BFFAC ^ 0x65A8)))();
}

uint64_t sub_1001F55A0()
{
  char v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(v2 + 8 * (((v0 > 1) | (2 * (v0 > 1))) ^ v1)))((v1 - 20762) | 0x40);
}

uint64_t sub_1001F55CC(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((52 * (a4 < (char)(((4 * (a1 ^ 0x10) + 42) ^ 0x22) + ((4 * (a1 ^ 0x10) + 42) | 0xC1)))) | (4 * (a1 ^ 0x1810)))))();
}

uint64_t sub_1001F560C(int8x16_t a1)
{
  int v1;
  const char *v2;
  uint64_t v3;
  uint8x16_t v4;
  int8x16x4_t v12;

  v12 = vld4q_s8(v2);
  v4 = (uint8x16_t)veorq_s8(v12.val[1], a1);
  _Q27 = vmovl_high_u8(v4);
  _Q26 = vmovl_u8(*(uint8x8_t *)v4.i8);
  __asm
  {
    SHLL2           V26.4S, V26.8H, #0x10
    SHLL2           V27.4S, V27.8H, #0x10
  }
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 8 * v1))(LODWORD(STACK[0x298]), 1463470119, 3616406838, 15614795);
}

uint64_t sub_1001F57BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int *v11;
  int v12;

  v11 = (unsigned int *)(a6 + 4 * (a4 + v6));
  v12 = *(v11 - 8) ^ *(v11 - 3);
  *v11 = __ROR4__(*(v11 - 14) ^ *(v11 - 16) ^ 0xCD5D9481 ^ (v12 + v10 - ((2 * v12) & 0x42D53C0E)), 31) ^ 0xF9048B0A;
  return (*(uint64_t (**)(void))(v9 + 8 * (((8 * (a4 + 1 != v7 + 64)) | (32 * (a4 + 1 != v7 + 64))) ^ v8)))();
}

uint64_t sub_1001F5838()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((10170 * (v2 + 1 == v0 + 4)) ^ v1)))(v4);
}

uint64_t sub_1001F5A64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((31920 * (v5 + 1 != v4 + 24)) ^ a4)) - 4))();
}

uint64_t sub_1001F5C4C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((483 * (a1 + 1 != v2 + 44)) ^ a2)) - 4))(v3);
}

uint64_t sub_1001F5EF0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((31602 * (v2 + 1 == v1 + 64)) ^ a1)) - 4))();
}

uint64_t sub_1001F60E0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v1) - 4))(a1);
}

uint64_t sub_1001F62F0(int a1)
{
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((((a1 + 908755434) & 0xC9D57D77) - 1819) * (v1 == 1)) ^ a1))
                            - 8))();
}

uint64_t sub_1001F6330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int8x16_t a7, uint64_t a8, int a9)
{
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint8x16_t v12;
  int8x16x4_t v22;

  v22 = vld4q_s8(v10);
  v12 = (uint8x16_t)veorq_s8(v22.val[2], a7);
  _Q27 = vmovl_u8(*(uint8x8_t *)v12.i8);
  _Q26 = vmovl_high_u8(v12);
  __asm
  {
    SHLL2           V28.4S, V26.8H, #0x10
    SHLL2           V29.4S, V27.8H, #0x10
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * a9)
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, v9 - 16);
}

uint64_t sub_1001F653C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((10225 * (a7 + 1 == v8)) ^ a8)) - 8))();
}

uint64_t sub_1001F6B20(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((30171 * (v4 == 15614810)) ^ a4)) - 8))();
}

uint64_t sub_1001F7124()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2729 * (v3 + 1 == v0 + 32)) ^ v1)) - 8))();
}

uint64_t sub_1001F7648(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v5 + 1 != v4 + 48) | a4)) - 12))();
}

uint64_t sub_1001F7B98(int a1)
{
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((28 * (v1 == ((((a1 ^ 0xB2) - 11) ^ 0xD0) + 94))) | a1 ^ 0x2B2))
                            - 12))();
}

uint64_t sub_1001F7BE0(uint64_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  const char *v23;
  uint64_t v24;
  uint8x16_t v25;
  int8x16x4_t v33;

  v33 = vld4q_s8(v23);
  v25 = (uint8x16_t)veorq_s8(v33.val[1], a2);
  _Q27 = vmovl_high_u8(v25);
  _Q26 = vmovl_u8(*(uint8x8_t *)v25.i8);
  __asm
  {
    SHLL2           V26.4S, V26.8H, #0x10
    SHLL2           V27.4S, V27.8H, #0x10
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * (int)a1) - 4))(a1, 651572352, 3598228358, a5, a6, a7, LODWORD(STACK[0x2A0]), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1001F7D88(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  int v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;

  v11 = (unsigned int *)(a6 + 4 * (v9 + v6));
  v12 = *(v11 - 2);
  HIDWORD(v14) = v12 ^ 0x9E07;
  LODWORD(v14) = (((a1 - 1597928358) & 0x5F3E73B5) + 560577659) ^ v12;
  v13 = v14 >> 17;
  HIDWORD(v14) = v12 ^ 0x29E07;
  LODWORD(v14) = v12 ^ 0x21680000;
  v15 = (v14 >> 19) ^ (v12 >> 10);
  v16 = *(v11 - 15);
  HIDWORD(v14) = v16 ^ 0x29E07;
  LODWORD(v14) = v16 ^ 0x21680000;
  v17 = v14 >> 18;
  LODWORD(v14) = __ROR4__(v16, 7);
  v18 = (*(v11 - 7) ^ 0x216A9E07)
      + (((*(v11 - 16) ^ 0x38A0050B) - 950011147) ^ ((*(v11 - 16) ^ 0xB2A9BCF5) + 1297498891) ^ ((*(v11 - 16) ^ 0xAB6327F9)
                                                                                               + 1419565063))
      + ((((v16 >> 3) ^ v14 ^ v17 ^ 0xA865CA8C) - 526493034) ^ (((v16 >> 3) ^ v14 ^ v17 ^ 0x5D744B25) + 361749309) ^ (((v16 >> 3) ^ v14 ^ v17 ^ 0xFF7E0755) - 1215981747))
      + 1239358119
      + (((v15 ^ v13 ^ 0xF3854F5) - 1246268055) ^ ((v15 ^ v13 ^ 0x4218087D) - 124311071) ^ ((v15 ^ v13 ^ 0x4D28062F)
                                                                                          - 140040269));
  v19 = ((2 * (v18 ^ 0x43F5570D)) ^ 0x33354C64) & (v18 ^ 0x43F5570D) ^ (2 * (v18 ^ 0x43F5570D)) & (v8 + 2);
  v20 = v19 ^ 0x888AA212;
  v21 = (v18 ^ 0xD36FF53F) & (2 * (v18 & 0xDA6FF13F)) ^ v18 & 0xDA6FF13F;
  v22 = (v19 ^ 0x11100420) & (4 * v21) ^ v21;
  v23 = ((4 * v20) ^ 0x666A98C8) & v20 ^ (4 * v20) & v8;
  v24 = (v23 ^ 0xA8000) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x99902632)) ^ 0x99AA6320) & (v23 ^ 0x99902632) ^ (16 * (v23 ^ 0x99902632)) & v8;
  v26 = v24 ^ (v8 + 2) ^ (v25 ^ 0x998A2200) & (v24 << 8);
  *v11 = v18 ^ (2
              * ((v26 << 16) & 0x199A0000 ^ v26 ^ ((v26 << 16) ^ 0x26320000) & (((v25 ^ 0x108412) << 8) & 0x199A0000 ^ 0x1180000 ^ (((v25 ^ 0x108412) << 8) ^ 0x1AA60000) & (v25 ^ 0x108412)))) ^ 0xC814235C;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((240 * (v9 + 1 == v7 + 48)) ^ a1)) - 4))();
}

uint64_t sub_1001F8084()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4481 * (v0 + 1 == v3)) ^ v1)) - 4))();
}

uint64_t sub_1001F870C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;

  v11 = (((v8 ^ 0x74841640) + 1477804828) ^ ((v8 ^ 0x35F834E) + 802035222) ^ ((v8 ^ 0x4882F52C) + 1678991480))
      + (((LODWORD(STACK[0x298]) ^ 0x5BA0F4C0) - 1537275072) ^ ((LODWORD(STACK[0x298]) ^ 0x2E3E143B) - 775820347) ^ ((((a8 - 9338) | 0x442) ^ 0x66560151) + (LODWORD(STACK[0x298]) ^ 0x99A9EA7D)))
      + 881815897;
  v12 = (v11 ^ 0x8BDE33A3) & (2 * (v11 & 0xA3DEA3B3)) ^ v11 & 0xA3DEA3B3;
  v13 = ((2 * (v11 ^ 0x8EFE36A5)) ^ 0x5A412A2C) & (v11 ^ 0x8EFE36A5) ^ (2 * (v11 ^ 0x8EFE36A5)) & 0x2D209516;
  v14 = v13 ^ 0x25209512;
  v15 = (v13 ^ 0x8000004) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0xB4825458) & v14 ^ (4 * v14) & 0x2D209514;
  v17 = (v16 ^ 0x24001410) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0x9208106)) ^ 0xD2095160) & (v16 ^ 0x9208106) ^ (16 * (v16 ^ 0x9208106)) & 0x2D209510;
  v19 = v17 ^ 0x2D209516 ^ (v18 ^ 0x1100) & (v17 << 8);
  v20 = v11 ^ (2
             * ((v19 << 16) & 0x2D200000 ^ v19 ^ ((v19 << 16) ^ 0x15160000) & (((v18 ^ 0x2D208416) << 8) & 0x2D200000 ^ 0xD200000 ^ (((v18 ^ 0x2D208416) << 8) ^ 0x20950000) & (v18 ^ 0x2D208416))));
  v21 = (((v10 ^ 0xCAD7224) - 212693540) ^ ((v10 ^ 0x34EBF4B8) - 887878840) ^ ((v10 ^ 0xD4718C1A) + 730756070))
      + 758478528
      + (((LODWORD(STACK[0x29C]) ^ 0xD76CBB62) + 680739998) ^ ((LODWORD(STACK[0x29C]) ^ 0x94A0CD4A) + 1801401014) ^ ((LODWORD(STACK[0x29C]) ^ 0xAFFB7CAE) + 1342473042));
  v22 = (2 * (v21 & 0xAB389E4C ^ 0x14556508)) & 0x14512408 ^ v21 & 0xAB389E4C ^ 0x14556508 ^ ((2
                                                                                             * (v21 & 0xAB389E4C ^ 0x14556508)) ^ 0x28AACA10) & (v21 ^ 0xBF6DFB44);
  v23 = (2 * (v21 ^ 0xBF6DFB44)) & 0x14556508 ^ 0x14552508 ^ ((2 * (v21 ^ 0xBF6DFB44)) ^ 0x28AACA10) & (v21 ^ 0xBF6DFB44);
  v24 = (4 * v22) & 0x14556508 ^ v22 ^ ((4 * v22) ^ 0x51559420) & v23;
  v25 = (4 * v23) & 0x14556508 ^ 0x4006108 ^ ((4 * v23) ^ 0x51559420) & v23;
  v26 = v24 ^ (16 * v24) & 0x14556500 ^ ((16 * v24) ^ 0x40061080) & v25;
  v27 = (16 * v25) & 0x14556500 ^ 0x10012508 ^ ((16 * v25) ^ 0x45565080) & v25;
  v28 = ((v26 ^ 0x10510400) << 8) & 0x14556500 ^ v26 ^ 0x10510400 ^ (((v26 ^ 0x10510400) << 8) ^ 0x55650800) & v27;
  LODWORD(STACK[0x298]) = v20 ^ 0x1FA88319;
  LODWORD(STACK[0x29C]) = v21 ^ (2
                               * ((v28 << 16) & 0x14550000 ^ v28 ^ ((v28 << 16) ^ 0x65080000) & ((v27 << 8) & 0x14550000 ^ ((v27 << 8) ^ 0x55650000) & v27 ^ 0x100000))) ^ 0x4F2F5EDA;
  v29 = (((a7 ^ 0x2628F7C3) - 640219075) ^ ((a7 ^ 0xB7B4FDEB) + 1212875285) ^ ((a7 ^ 0x7DAB00AE) - 2108358830))
      - 195322728
      + (((LODWORD(STACK[0x2A0]) ^ 0xEB18EB83) + 350688381) ^ ((LODWORD(STACK[0x2A0]) ^ 0x6CC88CE4) - 1825082596) ^ ((LODWORD(STACK[0x2A0]) ^ 0x6BE76DE1) - 1810329057));
  v30 = (v29 ^ 0xF7817467) & (2 * (v29 & 0xE4127874)) ^ v29 & 0xE4127874;
  v31 = ((2 * (v29 ^ 0x77A5F447)) ^ 0x276F1866) & (v29 ^ 0x77A5F447) ^ (2 * (v29 ^ 0x77A5F447)) & 0x93B78C32;
  v32 = v31 ^ 0x90908411;
  v33 = (v31 ^ 0x30020) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0x4EDE30CC) & v32 ^ (4 * v32) & 0x93B78C30;
  v35 = v33 ^ 0x93B78C33 ^ (v34 ^ 0x2960000) & (16 * v33);
  v36 = (16 * (v34 ^ 0x91218C33)) & 0x93B78C30 ^ 0x80870C03 ^ ((16 * (v34 ^ 0x91218C33)) ^ 0x3B78C330) & (v34 ^ 0x91218C33);
  v37 = (v35 << 8) & 0x93B78C00 ^ v35 ^ ((v35 << 8) ^ 0xB78C3300) & v36;
  LODWORD(STACK[0x2A0]) = v29 ^ (2
                               * ((v37 << 16) & 0x13B70000 ^ v37 ^ ((v37 << 16) ^ 0xC330000) & ((v36 << 8) & 0x13B70000 ^ 0x330000 ^ ((v36 << 8) ^ 0x378C0000) & v36))) ^ 0x8246A94;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * a8) - 4))();
}

uint64_t sub_1001F8F44@<X0>(int a1@<W3>, int *a2@<X6>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  *a2 = v3 ^ (2 * a1) ^ v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * a3) - ((a3 - 739557141) & 0xEC9EEFE7 ^ 0xC08A45ADLL)))();
}

uint64_t sub_1001F8F8C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(_QWORD))
{
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;

  v16 = (((v13 ^ 0x8A19C63F) + 1978022337) ^ ((v13 ^ 0x478B0778) - 1200293752) ^ ((v13 ^ 0x21A5CBC1) - 564513729))
      + 1224936576
      + (((LODWORD(STACK[0x288]) ^ 0x12C3168D) - 314775181) ^ ((LODWORD(STACK[0x288]) ^ 0xE96DF5D) - 244768605) ^ ((LODWORD(STACK[0x288]) ^ 0xF062C356) + 261962922));
  v17 = (v16 ^ 0xE434EAF) & (2 * (v16 & 0x8F6B088C)) ^ v16 & 0x8F6B088C;
  v18 = ((2 * (v16 ^ 0x8415EBF)) ^ 0xE54AC66) & (v16 ^ 0x8415EBF) ^ (2 * (v16 ^ 0x8415EBF)) & 0x872A5632;
  v19 = v18 ^ 0x812A5211;
  v20 = (v18 ^ 0x6000420) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x1CA958CC) & v19 ^ (4 * v19) & 0x872A5630;
  v22 = (v21 ^ 0x4285000) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x83020633)) ^ 0x72A56330) & (v21 ^ 0x83020633) ^ (16 * (v21 ^ 0x83020633)) & 0x872A5630;
  v24 = v22 ^ 0x872A5633 ^ (v23 ^ 0x2204200) & (v22 << 8);
  v25 = v16 ^ (2
             * ((v24 << 16) & 0x72A0000 ^ v24 ^ ((v24 << 16) ^ 0x56330000) & (((v23 ^ 0x850A1403) << 8) & 0x72A0000 ^ 0x5280000 ^ (((v23 ^ 0x850A1403) << 8) ^ 0x2A560000) & (v23 ^ 0x850A1403)))) ^ 0x614CAE6C;
  v26 = (((a1 ^ 0x50E26994) - 1357015444) ^ ((a1 ^ 0xCCCDF8A6) + 858916698) ^ ((a1 ^ 0x70189BB4) - 1880660916))
      + (((LODWORD(STACK[0x28C]) ^ 0x6AFA7DA1) - 1794801057) ^ ((LODWORD(STACK[0x28C]) ^ 0x8115766A) + 2129299862) ^ ((LODWORD(STACK[0x28C]) ^ 0x7D8014D) - 131596621))
      + 664818114;
  v27 = (v26 ^ 0x34ADFB2B) & (2 * (v26 & 0xB0CDC34A)) ^ v26 & 0xB0CDC34A;
  v28 = ((2 * (v26 ^ 0x752579AB)) ^ 0x8BD175C2) & (v26 ^ 0x752579AB) ^ (2 * (v26 ^ 0x752579AB)) & 0xC5E8BAE0;
  v29 = v28 ^ 0x44288A21;
  v30 = (v28 ^ 0x81401040) & (4 * v27) ^ v27;
  v31 = ((4 * v29) ^ 0x17A2EB84) & v29 ^ (4 * v29) & 0xC5E8BAE0;
  v32 = (v31 ^ 0x5A0AA80) & (16 * v30) ^ v30;
  v33 = ((16 * (v31 ^ 0xC0481061)) ^ 0x5E8BAE10) & (v31 ^ 0xC0481061) ^ (16 * (v31 ^ 0xC0481061)) & 0xC5E8BAE0;
  v34 = v32 ^ 0xC5E8BAE1 ^ (v33 ^ 0x4488AA00) & (v32 << 8);
  LODWORD(STACK[0x288]) = v25;
  LODWORD(STACK[0x28C]) = v26 ^ (2
                               * ((v34 << 16) & 0x45E80000 ^ v34 ^ ((v34 << 16) ^ 0x3AE10000) & (((v33 ^ 0x816010E1) << 8) & 0x45E80000 ^ 0x5400000 ^ (((v33 ^ 0x816010E1) << 8) ^ 0x68BA0000) & (v33 ^ 0x816010E1)))) ^ 0xD6EBBC0E;
  v35 = (((v14 ^ 0x8E0C52E0) + 1911794976) ^ ((v14 ^ 0x4523FF4F) - 1159987023) ^ ((v14 ^ 0x2718A729) - 655927081))
      + 1408075369
      + (((LODWORD(STACK[0x290]) ^ 0xAA78A382) + 1434934398) ^ ((LODWORD(STACK[0x290]) ^ 0xC53B460F) + 985971185) ^ ((LODWORD(STACK[0x290]) ^ 0x8374EF0B) + 2089488629));
  v36 = (v35 ^ 0xF2364E23) & (2 * (v35 & 0x84808EA3)) ^ v35 & 0x84808EA3;
  v37 = ((2 * (v35 ^ 0xFA365F21)) ^ 0xFD6DA304) & (v35 ^ 0xFA365F21) ^ (2 * (v35 ^ 0xFA365F21)) & 0x7EB6D182;
  v38 = v37 ^ 0x2925082;
  v39 = (v37 ^ 0x34040100) & (4 * v36) ^ v36;
  v40 = ((4 * v38) ^ 0xFADB4608) & v38 ^ (4 * v38) & 0x7EB6D180;
  v41 = (v40 ^ 0x7A924000) & (16 * v39) ^ v39;
  v42 = ((16 * (v40 ^ 0x4249182)) ^ 0xEB6D1820) & (v40 ^ 0x4249182) ^ (16 * (v40 ^ 0x4249182)) & 0x7EB6D180;
  v43 = v41 ^ 0x7EB6D182 ^ (v42 ^ 0x6A241000) & (v41 << 8);
  v44 = v35 ^ (2
             * ((v43 << 16) & 0x7EB60000 ^ v43 ^ ((v43 << 16) ^ 0x51820000) & (((v42 ^ 0x1492C182) << 8) & 0x7EB60000 ^ 0x48260000 ^ (((v42 ^ 0x1492C182) << 8) ^ 0x36D10000) & (v42 ^ 0x1492C182))));
  v45 = (((v15 ^ 0x4D2CE8B7) - 1294788791) ^ ((v15 ^ 0x8ECF1CD4) + 1899029292) ^ ((v15 ^ 0x2FD4FEE5) - 802488037))
      + 455185126
      + (((LODWORD(STACK[0x294]) ^ 0x4B0868C9) - 1258842313) ^ ((LODWORD(STACK[0x294]) ^ 0x447A77E5) - 1148876773) ^ ((LODWORD(STACK[0x294]) ^ 0xE34515AA) + 482011734));
  v46 = (v45 ^ 0xBC683A97) & (2 * (v45 & 0xBD4C8226)) ^ v45 & 0xBD4C8226;
  v47 = ((2 * (v45 ^ 0xCCE83EDB)) ^ 0xE34979FA) & (v45 ^ 0xCCE83EDB) ^ (2 * (v45 ^ 0xCCE83EDB)) & 0x71A4BCFC;
  v48 = v47 ^ 0x10A48405;
  v49 = (v47 ^ 0x610018B8) & (4 * v46) ^ v46;
  v50 = ((4 * v48) ^ 0xC692F3F4) & v48 ^ (4 * v48) & 0x71A4BCFC;
  v51 = (v50 ^ 0x4080B0E0) & (16 * v49) ^ v49;
  v52 = ((16 * (v50 ^ 0x31240C09)) ^ 0x1A4BCFD0) & (v50 ^ 0x31240C09) ^ (16 * (v50 ^ 0x31240C09)) & 0x71A4BCF0;
  v53 = v51 ^ 0x71A4BCFD ^ (v52 ^ 0x10008C00) & (v51 << 8);
  LODWORD(STACK[0x290]) = v44 ^ 0x34DE2721;
  LODWORD(STACK[0x294]) = v45 ^ (2
                               * ((v53 << 16) & 0x71A40000 ^ v53 ^ ((v53 << 16) ^ 0x3CFD0000) & (((v52 ^ 0x61A4302D) << 8) & 0x71A40000 ^ 0x51000000 ^ (((v52 ^ 0x61A4302D) << 8) ^ 0x24BC0000) & (v52 ^ 0x61A4302D)))) ^ 0xD37AF15A;
  return a13(0);
}

uint64_t sub_1001F97A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a8 + v9 + 1855)) - 4))();
}

uint64_t sub_1001F97BC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, unsigned int a13)
{
  uint64_t v13;
  int v14;
  _BOOL4 v15;

  if (a13 < 0x9806669A != a1 - 1744410918 < a12)
    v15 = a1 - 1744410918 < a12;
  else
    v15 = a1 - 1744410918 > a13;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v13 + 8 * ((57 * !v15) ^ (v14 + 1064685818)))
                                       - ((562 * (v14 ^ (v14 + 13))) ^ 0x327ALL)))(a1 - 1744410918 > a13);
}

uint64_t sub_1001F983C@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (int)((((a11 - 1064704662) ^ 0xC08A259E ^ (6163 * (a11 ^ 0x603F)))
                                               * (a1 > 0xFFFFFFC0)) ^ a11))
                            - 12))();
}

uint64_t sub_1001F9890@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((631
                                          * (~a9 + v10 - (unint64_t)a1 >= ((v9 - 1060203149) & 0xFFBB4FE5 ^ 0xC08A45B5uLL))) ^ v9))
                            - ((v9 - 895543383) & 0xF5EACDAF ^ 0xC08A45A9)))();
}

uint64_t sub_1001F9908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (v4 + 1064692403))
                                                                              - 4))(a1, 1235878698, 1907, a4, 10621);
}

uint64_t sub_1001F9940@<X0>(char a1@<W2>, int a2@<W4>, int a3@<W7>, int a4@<W8>, int8x16_t a5@<Q0>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;

  *(int8x16_t *)(v8 + v6) = vaddq_s8(vsubq_s8(*(int8x16_t *)(v10 + (v6 + a4)), vandq_s8(vaddq_s8(*(int8x16_t *)(v10 + (v6 + a4)), *(int8x16_t *)(v10 + (v6 + a4))), v11)), a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (int)((((((v6 + 16 - (a3 + v7 + 63)) | ((unint64_t)(a3 + v7 + 63)
                                                                                              - (v6
                                                                                               + 16))) >> ((a3 + v7 + 75) ^ a1)) & 1)
                                               * v5) ^ (a3 + v7 + a2)))
                            - 4))();
}

uint64_t sub_1001F999C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (v6 + 1064686204))
                                                                                                - 4))(a1, 1235878698, 6241, a4, 3872233945, a6, 1487415245);
}

uint64_t sub_1001F99E4@<X0>(int a1@<W2>, char a2@<W4>, int a3@<W7>, unsigned int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v7 + v6) = *(_BYTE *)(v11 + a4) - ((*(unsigned __int8 *)(v11 + a4) << (((v5 + a2) ^ 0x7F) & v8)) & v9) + 43;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * ((a3 + v5 + 63) ^ a1 ^ ((((v6 + 1 - (a3 + v5 + 63)) | ((a3 + v5 + 63) - (v6 + 1))) >= 0)
                                                                * v4)))
                            - 4))();
}

uint64_t sub_1001F9A4C@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9)
{
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = 11587 * (v9 ^ 0x327C) + a1 - 1455490076 < a9 - 1705360646;
  if ((a9 - 1705360646) < 0xA93F566A != a1 > 0x56C0A995)
    v11 = (a9 - 1705360646) < 0xA93F566A;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((237 * !v11) ^ v9)) - 8))();
}

uint64_t sub_1001F9AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  _BOOL4 v20;

  v19 = LODWORD(STACK[0x284]) + a16 + ((v17 + 1559864552) & 0xA30607D7 ^ v16);
  LODWORD(STACK[0x284]) = v19;
  v20 = v19 - 421721817 < a16 - 671615561;
  if ((a16 - 671615561) < 0xE6DD0927 != v19 > 0x1922F6D8)
    v20 = (a16 - 671615561) < 0xE6DD0927;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * (((4 * v20) | (16 * v20)) ^ v17)) - 12))();
}

uint64_t sub_1001F9B64()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x280]) += ((v0 - 22086) | 0x306) ^ 0x747;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 12))();
}

uint64_t sub_1001F9B94@<X0>(int a1@<W7>, unsigned int a2@<W8>)
{
  char v2;
  uint64_t v3;
  int v4;

  *((_BYTE *)&STACK[0x240] + (v2 & 0x3F)) = -85;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8 * (int)(a2 ^ (22117 * ((v2 & 0x3Fu) > 0x37))))
                                         - (a2 ^ 0x74ALL)))((v2 & 0x3F) + a1 + (a2 ^ (v4 - 706)));
}

uint64_t sub_1001F9BF4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((a2 != ((v2 + 1616504997) & 0x9FA63CFF) - 15551)
                                               * (((v2 - 2138953557) | 0x400805A1) ^ 0xC08A65B1)) ^ v2))
                            - 4))();
}

uint64_t sub_1001F9C58()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((454 * ((((((v1 - 15068) | 0x1904) - 1064686977) ^ (v3 - 11)) & v0 ^ 0x3Fu) > 7)) ^ v1)))();
}

uint64_t sub_1001F9CA8(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 < a2 - 6918) * ((a2 ^ 0x3FF6) - 9405)) ^ a2)) - 4))();
}

uint64_t sub_1001F9CE0(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  a2.n128_u16[0] = 11051;
  a2.n128_u8[2] = 43;
  a2.n128_u8[3] = 43;
  a2.n128_u8[4] = 43;
  a2.n128_u8[5] = 43;
  a2.n128_u8[6] = 43;
  a2.n128_u8[7] = 43;
  return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v6 + 8 * v5) - 8))((char *)&STACK[0x240] + a1, (v5 - 9368) & v4, a4, ((v5 - 9368) & v4) - 8, ((v5 - 7304) | 0x34B6u) - 15511, a2);
}

uint64_t sub_1001F9D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W8>, double a5@<D0>)
{
  uint64_t v5;
  uint64_t v6;

  *(double *)(a1 + v5) = a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((a2 != v5) * a3) ^ a4)) - 8))();
}

uint64_t sub_1001F9D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (int)((((v3 ^ 0xC08A795B) + 1064704753) * (a2 == v2)) ^ v3)))();
}

uint64_t sub_1001F9D80@<X0>(int a1@<W0>, unsigned int a2@<W2>, unsigned int a3@<W5>, unsigned int a4@<W8>)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  unsigned int v10;

  v9 = v5 < a2;
  *((_BYTE *)&STACK[0x240] + v6) = *(_BYTE *)(v8 + a4) - (((v4 + 8) ^ 0xD0) & (2 * *(_BYTE *)(v8 + a4))) + 43;
  v10 = a4 + 1;
  if (v9 == v10 > a3)
    v9 = v10 + a2 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((!v9 * a1) ^ v4)) - 8))();
}

uint64_t sub_1001F9DF0(unsigned int a1)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((31210 * (a1 < 0x38)) ^ (v1 + 1064695141)))
                            - ((3 * (v1 ^ (v3 + 1049))) ^ 0x2455)))();
}

uint64_t sub_1001F9E38(unsigned int a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = 56 - (unint64_t)a1 < (a3 + v3 - 2231)
                                 + (unint64_t)((v3 - 1065214637) | 0x80401u)
                                 - 0x181148B42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v5 | (2 * v5)) ^ v3)) - 4))();
}

uint64_t sub_1001F9E94@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  int v2;
  uint64_t v3;

  a2.n128_u16[0] = 11051;
  a2.n128_u8[2] = 43;
  a2.n128_u8[3] = 43;
  a2.n128_u8[4] = 43;
  a2.n128_u8[5] = 43;
  a2.n128_u8[6] = 43;
  a2.n128_u8[7] = 43;
  return (*(uint64_t (**)(_QWORD, unint64_t, __n128))(v3 + 8 * (v2 + 1064694168)))((v2 + 1064693609), (a1 & 0xFFFFFFFFFFFFFFF8) - 8, a2);
}

uint64_t sub_1001F9ED0(int a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  double *v9;
  uint64_t v10;
  int v11;

  *v9 = a3;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 & ~(((v8 ^ (v11 + 2)) * a6) ^ (a2 == 0))) * a8) ^ (a1 + 516))))();
}

uint64_t sub_1001F9F08@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (a3 ^ (8024 * (a4 == v4))))
                                                  + 3230287265
                                                  - ((a2 + a3 + 441557400) & 0xE5AE55AF)))(a1, (a2 + a3 - 2232));
}

_QWORD *sub_1001F9F60(uint64_t a1, int a2)
{
  uint64_t v2;

  return ((_QWORD *(*)(unint64_t *__return_ptr))(*(_QWORD *)(v2 + 8 * (a2 + 1064698764)) - 4))(&STACK[0x240]);
}

uint64_t sub_1001F9F88@<X0>(uint64_t a1@<X8>)
{
  int v1;
  char v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v3) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v3 != 55) * v4) ^ (v1 + v5))) - 4))();
}

uint64_t sub_1001F9FB0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 1064690132)) - 4))();
}

uint64_t sub_1001F9FD0(uint64_t a1, uint64_t a2, char a3)
{
  int v3;
  char v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((236 * (v4 >= (char)(v3 - a3 + 104))) ^ (v3 + 1064705214)))
                            - 2351 * (v3 ^ (v6 + 1))
                            + 7049))();
}

uint64_t sub_1001FA024(uint64_t a1, uint64_t a2, char a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * ((23955 * (v3 <= (char)(((v4 + a3 + 107) | 0x8E) + 101))) ^ v4)))();
}

uint64_t sub_1001FA060()
{
  unsigned int v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;

  v2 = STACK[0x280];
  v3 = STACK[0x284];
  LOBYTE(STACK[0x278]) = v0 - 4 + (LODWORD(STACK[0x280]) >> 21) - ((LODWORD(STACK[0x280]) >> 20) & 0x56) - 111;
  LOBYTE(STACK[0x279]) = (v2 >> 13) - ((v2 >> 12) & 0x56) + 43;
  LOBYTE(STACK[0x27A]) = (v2 >> 5) - ((v2 >> 4) & 0x56) + 43;
  LOBYTE(STACK[0x27B]) = (__PAIR64__(v2, v3) >> 29) - ((2 * (__PAIR64__(v2, v3) >> 29)) & 0x56) + 43;
  LOBYTE(STACK[0x27C]) = (v3 >> 21) - ((v3 >> 20) & 0x56) + 43;
  LOBYTE(STACK[0x27D]) = (v3 >> 13) - ((v3 >> 12) & 0x56) + 43;
  LOBYTE(STACK[0x27E]) = (v3 >> 5) - ((v3 >> 4) & 0x56) + 43;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((547 * (v0 > 0xE0530291)) ^ (v0 + 190956573))))();
}

uint64_t sub_1001FA138()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (v1 != (((_BYTE)v0 + 106) & 0xAD ^ 0xA4))) ^ v0)))();
}

uint64_t sub_1001FA17C()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;

  v2 = STACK[0x284];
  v3 = STACK[0x280];
  LOBYTE(STACK[0x278]) = (((LODWORD(STACK[0x284]) - 2 * (STACK[0x284] & 7) + 15) << ((v0 + 109) ^ 0xF9)) ^ 0x13) - 64;
  LOBYTE(STACK[0x279]) = (v2 >> 5) ^ 0x2B;
  LOBYTE(STACK[0x27A]) = (v2 >> 13) ^ 0x2B;
  LOBYTE(STACK[0x27B]) = (v2 >> 21) ^ 0x2B;
  LOBYTE(STACK[0x27C]) = ((__PAIR64__(v3, v2) >> 29) - 2 * ((__PAIR64__(v3, v2) >> 29) & 7) - 121) ^ 0xAC;
  LOBYTE(STACK[0x27D]) = (v3 >> 5) ^ 0x2B;
  LOBYTE(STACK[0x27E]) = (v3 >> 13) ^ 0x2B;
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 + 6155)))();
}

uint64_t sub_1001FA21C(uint64_t a1, uint64_t a2, char a3)
{
  int v3;
  char v4;
  uint64_t v5;

  LOBYTE(STACK[0x27F]) = (v3 + a3 - 122) ^ v4;
  return (*(uint64_t (**)(void))(v5 + 8 * v3))();
}

uint64_t sub_1001FA234@<X0>(uint64_t a1@<X0>, int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (a2 + a3 + 9596)) - 12))(a1, 3230287269);
}

uint64_t sub_1001FA25C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 + 1064694488)) - (v1 ^ 0xC08A0F9C) + 18993))();
}

uint64_t sub_1001FA294@<X0>(uint64_t a1@<X0>, char a2@<W8>, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * ((((46 * (v4 ^ 0x4A52)) ^ 0x135E) * (a2 < 2)) ^ v4))
                                                   - ((v4 + 1419334982) & 0xAB6673BA ^ 0x133ELL)))(a1, a4);
}

uint64_t sub_1001FA2F0@<X0>(char a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((((v1 + 86551229) & 0xFAD77B5F) + 5301) * (a1 == 1)) ^ v1))
                            - 4))();
}

uint64_t sub_1001FA330()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((102 * (LODWORD(STACK[0x2A8]) != (v0 ^ 0x133A))) ^ v0)) - 4))();
}

uint64_t sub_1001FA370(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;

  v7 = *(_DWORD *)((char *)&STACK[0x240] + v3 + 72);
  v8 = ((2097 * (v2 ^ 0x133D) + 1862123169) & (2 * v3)) + (v3 ^ 0x377EFBFE) + v4;
  *(_BYTE *)(a2 + v8) = v7 ^ 0x14;
  *(_BYTE *)(a2 + v8 + 1) = (BYTE1(v7) ^ 0xA) - 2 * ((BYTE1(v7) ^ 0xA) & 0x17 ^ BYTE1(v7) & 5) - 110;
  *(_BYTE *)(a2 + v8 + 2) = (BYTE2(v7) ^ 0x37) - 2 * ((BYTE2(v7) ^ 0x37) & 0x1A ^ BYTE2(v7) & 8) - 110;
  *(_BYTE *)(a2 + v8 + 3) = (HIBYTE(v7) ^ 0xEC) - ((v7 >> 23) & 0x24) - 110;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v3 + 4 < LODWORD(STACK[0x2A8])) * v5) ^ v2)) - 4))();
}

uint64_t sub_1001FA45C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 + 9757) ^ 0xF8B) * (v1 < 4)) ^ v0)) - 4))();
}

uint64_t sub_1001FA488()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((1494 * (LODWORD(STACK[0x2A8]) != 0)) ^ v0)) - (v0 ^ 0x133ELL)))();
}

uint64_t sub_1001FA4C8(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;

  v7 = *(_DWORD *)((char *)&STACK[0x240] + v2 + 72);
  v8 = (((v3 + 9757) ^ 0xFFBF66A7) & (2 * v2)) + (v2 ^ 0x7FDFAFFA) + v4;
  *(_BYTE *)(a2 + v8) = (HIBYTE(v7) ^ 0xEC) - ((v7 >> 23) & 0x24) - 110;
  *(_BYTE *)(a2 + v8 + 1) = (BYTE2(v7) ^ 0x37) - ((2 * (BYTE2(v7) ^ 0x37)) & 0x24) - 110;
  *(_BYTE *)(a2 + v8 + 2) = (BYTE1(v7) ^ 0xA) + ~(2 * (((v7 >> 8) ^ 0xA) & 0x13 ^ (v7 >> 8) & 1)) - 109;
  *(_BYTE *)(a2 + v8 + 3) = v7 ^ 0x14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v2 + 4 < LODWORD(STACK[0x2A8])) * v5) ^ v3)) - 4))();
}

uint64_t sub_1001FA5A0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  int64x2_t v15;
  va_list va;

  va_start(va, a14);
  v15 = vdupq_n_s64((unint64_t)va);
  return (*(uint64_t (**)(__n128, __n128))(v14 + 8 * a1))((__n128)vaddq_s64(v15, (int64x2_t)xmmword_101506FC0), (__n128)vaddq_s64(v15, (int64x2_t)xmmword_101506FD0));
}

uint64_t sub_1001FA65C@<X0>(int a1@<W8>, int64x2_t a2@<Q0>, int64x2_t a3@<Q1>, __n128 a4@<Q2>, int64x2_t a5@<Q3>, __n128 a6@<Q4>, int64x2_t a7@<Q5>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int64x2_t v13;
  int64x2_t v14;
  int64x2_t v15;
  int64x2_t v16;
  int64x2_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int64x2_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int8x16_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int8x16_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64x2_t v45;
  uint64_t v46;
  uint64_t v47;
  int8x16_t v48;
  uint64_t v49;
  uint64_t v50;
  int64x2_t v51;
  uint64_t v52;
  uint64_t v53;
  int8x16_t v54;
  int8x16x4_t v56;
  int8x16x4_t v57;

  v57.val[0] = (int8x16_t)vaddq_s64(v15, v17);
  v57.val[1] = (int8x16_t)vaddq_s64(v14, v17);
  v57.val[2] = (int8x16_t)vaddq_s64(a2, v17);
  v57.val[3] = (int8x16_t)vaddq_s64(a3, v17);
  v24 = vaddq_s64(a5, v17);
  v25 = vaddq_s64(a7, v17);
  v26 = veorq_s8((int8x16_t)v15, v18);
  v27 = veorq_s8((int8x16_t)v14, v18);
  v28 = veorq_s8((int8x16_t)a7, v18);
  v29 = v25.i64[1];
  v30 = v28.i64[1];
  v31 = v25.i64[0];
  v32 = veorq_s8((int8x16_t)a2, v18);
  v33 = v28.i64[0];
  v56.val[0] = veorq_s8((int8x16_t)a3, v18);
  v34 = v24.i64[1];
  v35 = v24.i64[0];
  v36 = veorq_s8((int8x16_t)a5, v18);
  v37 = v33 * v31;
  v38 = v30 * v29;
  v39 = v36.i64[0] * v35;
  v40 = v36.i64[1] * v34;
  v41 = v56.val[0].i64[0] * v57.val[3].i64[0];
  v42 = v56.val[0].i64[1] * v57.val[3].i64[1];
  v43 = v32.i64[1] * v57.val[2].i64[1];
  v56.val[0].i64[0] = v37;
  v56.val[0].i64[1] = v38;
  v44 = v32.i64[0] * v57.val[2].i64[0];
  v56.val[1].i64[0] = v39;
  v57.val[2].i64[0] = v27.i64[0] * v57.val[1].i64[0];
  v57.val[2].i64[1] = v27.i64[1] * v57.val[1].i64[1];
  v45 = vaddq_s64(v16, v17);
  v56.val[1].i64[1] = v40;
  v46 = v45.i64[1];
  v47 = v45.i64[0];
  v56.val[2].i64[0] = v41;
  v48 = veorq_s8((int8x16_t)v16, v18);
  v57.val[1].i64[0] = v26.i64[0] * v57.val[0].i64[0];
  v57.val[1].i64[1] = v26.i64[1] * v57.val[0].i64[1];
  v49 = v48.i64[1] * v46;
  v50 = v48.i64[0] * v47;
  v51 = vaddq_s64(v13, v17);
  v56.val[2].i64[1] = v42;
  v57.val[0].i64[0] = v50;
  v52 = v51.i64[1];
  v53 = v51.i64[0];
  v54 = veorq_s8((int8x16_t)v13, v18);
  v56.val[3].i64[0] = v44;
  v57.val[0].i64[1] = v49;
  v56.val[3].i64[1] = v43;
  v57.val[3].i64[0] = v54.i64[0] * v53;
  v57.val[3].i64[1] = v54.i64[1] * v52;
  v57.val[0].i64[0] = vqtbl4q_s8(v57, v19).u64[0];
  v57.val[0].i64[1] = vqtbl4q_s8(v56, v19).u64[0];
  v57.val[0] = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v57.val[0], v21), vmvnq_s8(vandq_s8(vaddq_s8(v57.val[0], v57.val[0]), v20))), v22));
  *(int8x16_t *)(v9 - v7 + 103) = vextq_s8(v57.val[0], v57.val[0], 8uLL);
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128, __n128, __n128))(v12
                                                                                   + 8
                                                                                   * (((v7 + v10 + v8 == 96) * v11) ^ a1)))((__n128)vaddq_s64(a2, v23), (__n128)vaddq_s64(a3, v23), a4, (__n128)vaddq_s64(a5, v23), a6, (__n128)vaddq_s64(a7, v23));
}

uint64_t sub_1001FA810(double a1, double a2, int8x16_t a3, double a4, int8x16_t a5, double a6, int8x16_t a7, int8x16_t a8)
{
  unint64_t v8;
  int v9;
  uint64_t v10;
  int8x16_t v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;

  v11 = (int8x16_t)vdupq_n_s64(v8);
  v12 = (__n128)vorrq_s8(v11, a3);
  v13 = (__n128)vorrq_s8(v11, a5);
  v14 = (__n128)vorrq_s8(v11, a7);
  v15 = (__n128)vorrq_s8(v11, a8);
  a8.i16[0] = -6940;
  a8.i8[2] = -28;
  a8.i8[3] = -28;
  a8.i8[4] = -28;
  a8.i8[5] = -28;
  a8.i8[6] = -28;
  a8.i8[7] = -28;
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(v10 + 8 * v9))(v12, v13, v14, v15, (__n128)vdupq_n_s64(0x11uLL), (__n128)vdupq_n_s64(0xBAuLL), (__n128)xmmword_101507050, (__n128)a8);
}

uint64_t sub_1001FA86C@<X0>(int a1@<W8>, int64x2_t a2@<Q0>, int64x2_t a3@<Q1>, int64x2_t a4@<Q2>, int64x2_t a5@<Q3>, int64x2_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int8x8_t a9@<D7>)
{
  int8x8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int8x8_t v13;
  int8x8_t v14;
  int64x2_t v15;
  int64x2_t v16;
  int64x2_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int8x16_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  _BOOL4 v24;
  int8x16x4_t v26;

  v16 = vaddq_s64(a2, a6);
  v17 = vaddq_s64(a5, a6);
  v18 = vaddq_s64(a4, a6);
  v19 = vaddq_s64(a3, a6);
  v20 = veorq_s8((int8x16_t)a3, a7);
  v21 = veorq_s8((int8x16_t)a4, a7);
  v26.val[2].i64[0] = v20.i64[0] * v19.i64[0];
  v26.val[2].i64[1] = v20.i64[1] * v19.i64[1];
  v22 = veorq_s8((int8x16_t)a5, a7);
  v26.val[1].i64[0] = v21.i64[0] * v18.i64[0];
  v26.val[1].i64[1] = v21.i64[1] * v18.i64[1];
  v23 = veorq_s8((int8x16_t)a2, a7);
  v26.val[0].i64[0] = v22.i64[0] * v17.i64[0];
  v26.val[0].i64[1] = v22.i64[1] * v17.i64[1];
  v26.val[3].i64[0] = v23.i64[0] * v16.i64[0];
  v26.val[3].i64[1] = v23.i64[1] * v16.i64[1];
  v16.i64[0] = vqtbl4q_s8(v26, a8).u64[0];
  *v9 = vrev64_s8(veor_s8(vadd_s8(vadd_s8(*(int8x8_t *)v16.i8, v13), vmvn_s8(vand_s8(vadd_s8(*(int8x8_t *)v16.i8, *(int8x8_t *)v16.i8), a9))), v14));
  v24 = v10 != ((a1 + 3183) | 0x1000u) + v11;
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128))(v12 + 8 * ((v24 | (32 * v24)) ^ a1)))((__n128)vaddq_s64(a2, v15), (__n128)vaddq_s64(a3, v15), (__n128)vaddq_s64(a4, v15), (__n128)vaddq_s64(a5, v15));
}

uint64_t sub_1001FA968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * v3)
                                                                     - ((v3 + 1042940827) & 0xC1D5EBE8)
                                                                     + 8576))(a1, a2, a3, 1638204792);
}

uint64_t sub_1001FA9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  uint64_t v22;
  int v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24
                                                      + 8
                                                      * ((5004 * ((_DWORD)v22 == (v23 ^ a22) - 8584)) ^ (v23 + 1064688611)))
                                          - 8))(v22);
}

uint64_t sub_1001FAA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  int v23;
  int v24;
  uint64_t v25;
  _BOOL4 v27;

  v27 = a23 != 1543092736 || v23 != (v24 ^ 0x9E4827FD ^ ((v24 - 1065343972) | 0xA0001));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v25 + 8 * ((19 * v27) ^ v24)) - 8))(0);
}

uint64_t sub_1001FAA94()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1020 * (v0 == ((v1 + 1589754038) ^ v1 ^ 0x1B1E))) ^ v1)) - 12))();
}

uint64_t sub_1001FAAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  uint64_t v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((122 * ((a13 & 0xFFFFFFFC) - a17 == (v17 ^ 0xFFFFB5CF))) ^ v17))
                            - 4))();
}

uint64_t sub_1001FAB2C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((4014 * (v1 != (v0 ^ 0x1949) + 1543080721)) ^ v0)))(4294924618);
}

uint64_t sub_1001FAB60@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v5 = a1 - v3 + 1234361889;
  v7 = v2 != 1543092736 && v5 == ((v1 - 776257983) & 0xEECECFBD) - 646953488;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((4014 * v7) ^ v1)))(4294924618);
}

uint64_t sub_1001FABC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  int v23;
  int v24;
  uint64_t v25;
  int *v26;

  a23 = v23 - 1;
  v26 = &a23 + 6 * (v23 - 1543092737);
  HIDWORD(a12) = v26[3];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((32706 * (((int)(v26[2] + ((v24 + 947694824) & 0xC7837F6E) - 1589813015) & 0xFFFFFFFFFFFFFFDLL) != 0)) ^ v24)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1001FAC90@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  _BOOL4 v10;

  v8 = (v6 ^ 0x6CE0) - 2231 + a1 + 1136111105;
  v9 = ((a6 - 1809872284) < 0xA3049DD3) ^ (v8 < 0xA3049DD3);
  v10 = v8 < a6 - 1809872284;
  if (v9)
    v10 = (a6 - 1809872284) < 0xA3049DD3;
  return (*(uint64_t (**)(void))(v7 + 8 * ((49 * v10) | v6)))();
}

uint64_t sub_1001FACFC@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = a2 + 43546914 > (a1 + 1392518805);
  if ((a1 + 1392518805) < 0x61E53A04 != (a2 + 43546914) < 0x61E53A04)
    v4 = (a2 + 43546914) < 0x61E53A04;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 ^ (30685 * !v4))))(4294924618);
}

uint64_t sub_1001FAD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  int v20;

  v17 = 58 * (((v13 + 1082788091) | 0x80000504) ^ (v16 - 116));
  v18 = *(unsigned __int8 *)(v15 + (a9 - 1598865635));
  v20 = v18 - 899464959 - (v18 << (((v17 - 4) | 0x21) ^ (v16 - 1)));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * (int)((26922 * (((v20 + 30) & 0x1F ^ 0xFFFFFFFB) + ((2 * (v20 + 30)) & 4) != -5)) ^ v17)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13);
}

uint64_t sub_1001FAE08@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  _BOOL4 v9;

  v8 = ((v6 - 455396307) ^ 0xD7053D9E) + a6;
  v9 = a1 - 478758215 > v8;
  if ((a1 - 478758215) < 0x42C37B9A != v8 < 0x42C37B9A)
    v9 = (a1 - 478758215) < 0x42C37B9A;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((3900 * !v9) ^ v6)) - 8))();
}

uint64_t sub_1001FAE7C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * (int)((20130 * (*(unsigned __int8 *)(v13 + (v10 ^ 0xA0B31E96) + a7) >> 7)) ^ v11 ^ 0xE4DB7FEF)) - 8))(20130, 1879022666, a1, a2, a3, a4, a5, a6, a8, a9, a10);
}

uint64_t sub_1001FAF30()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;
  char v3;
  char v4;

  v3 = (v0 ^ 0xC) & (2 * (v0 & 0x91)) | v0 & 0x91;
  v4 = ((2 * (v0 ^ 0xC)) ^ 0x3A) & (v0 ^ 0xC) ^ (2 * (v0 ^ 0xC)) & 0x9C;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((26736
                                              * (((v0 ^ (2
                                                                        * (((4 * ((((4 * v1) ^ 0x3D) - 32) ^ v4)) & 0x9C ^ ((4 * ((((4 * v1) ^ 0x3D) - 32) ^ v4)) ^ 0x70) & ((((4 * v1) ^ 0x3D) - 32) ^ v4) ^ 0x10) & (16 * ((v4 ^ 8) & (4 * v3) ^ v3)) ^ (v4 ^ 8) & (4 * v3) ^ v3))) & 0x7F ^ 0x11u)
                                               - 1 < 4)) ^ v1)))(4294924618);
}

uint64_t sub_1001FB004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  _BOOL4 v18;
  _BOOL4 v19;

  v17 = ((v14 - 1064698923) ^ 0x6B322BB7) + a13;
  v18 = (v13 + v15) > 0x45627E7E;
  v19 = v13 + v15 - 1164082815 > v17;
  if (v18 != v17 < 0xBA9D8181)
    v19 = v18;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((14 * !v19) | v14)) - 4))(4294924618);
}

uint64_t sub_1001FB094()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((46 * ((((v1 + 3404) ^ (v0 == 0)) & 1) == 0)) ^ v1)) - 8))();
}

uint64_t sub_1001FB154(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8 * ((46 * (v1 != 1)) ^ v2)) - 8))((a1 + 1));
}

uint64_t sub_1001FB31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  _BOOL4 v19;
  _BOOL4 v20;

  v17 = v15 + v13 + 391847209;
  v18 = a13 + 391826309 + v14 + 6654;
  v19 = v17 < (v14 ^ 0x2640073Eu);
  v20 = v17 > v18;
  if (v18 < 0x26403098 != v19)
    v20 = v19;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((3885 * !v20) ^ v14)))(4294924618);
}

uint64_t sub_1001FB3D8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_1001FB45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * (((*(_DWORD *)(v9 + (v7 + v14 + ((v8 + a6) | a7)) * (uint64_t)v10) == v15)
                                          * ((v8 + v11) & v12 ^ 0x1145)) ^ v8))
                            - 4))();
}

uint64_t sub_1001FB4A4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v0 != 841169768) * (v0 ^ 0x1BA627B)) | (v0 - 28982420))) - 4))();
}

uint64_t sub_1001FB4EC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((94 * ((((6999 * (((v1 - 10873) | 0x80) ^ 0x30C2)) ^ (v0 < -899464949)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_1001FB53C()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 >= (int)(((v1 + 930291921) & 0xC88CB9FE) - 899469419);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((4 * v3) | (16 * v3)) ^ v1)) - 4))();
}

uint64_t sub_1001FB588()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((199 * (v0 != ((((v1 - 1368547631) & 0x51923BFE) - 76) | 0x2200) - 899478047)) ^ (v1 - 1368547631) & 0x51923BFEu))
                            - ((v1 - 1368547631) & 0x51923BFE ^ 0x26D8u)
                            + 14234))();
}

uint64_t sub_1001FB5E8(unsigned int a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((199 * (v3 + v2 - a2 != -208756269)) ^ a1)) - 12))();
}

uint64_t sub_1001FB648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (int)((26007
                                                   * ((((((v5 - 1064825730) | a5) ^ (v10 - 3) | *(_DWORD *)(v6 + v9 * (uint64_t)v7 + 40))
                                                      + 11) >> 3) & 1)) ^ v5)))(4294924618);
}

uint64_t sub_1001FB68C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = (v4 & 0xFFFFFFFFFFFFFFDLL) != ((v0 - 222421417) & 0xCDCBEFA7 ^ 0xC08A45A5)
    && ((v0 + 1789075225) & 0x955CBDD4 ^ 0x213DA8BB) + *(_DWORD *)(v1 + (int)v4 * (uint64_t)v2 + 36) < 0x80000003;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((26114 * v6) ^ v0)))(4294924618);
}

uint64_t sub_1001FB718(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a2 ^ (29 * (v3 < a3 + 2))))
                            - ((a2 + 231263422) & 0xF23713FF)
                            + 4474))();
}

uint64_t sub_1001FB764(int a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((a1 ^ 0x224C ^ (a1 + 9768) ^ 0x453) * (v3 != a3)) ^ a1)) - 12))();
}

uint64_t sub_1001FB79C(int a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((((a1 + 7858) | 0x302) + 1140) ^ 0x3761) * (v3 > a3 + 11)) ^ a1))
                            - 12))();
}

uint64_t sub_1001FB7D8(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 != ((a1 - 847155655) ^ 0x7E23EB4))
                                          * (((a1 - 847155655) & 0x327EB7EE) - 14047)) ^ a1))
                            - 12))();
}

uint64_t sub_1001FB82C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((121
                                          * ((v2 & 0xFFFFFFFFFFFFFFFuLL) - 1 >= ((4724 * (v0 ^ 0x3336u)) ^ 0x49D2uLL))) ^ v0))
                            - 8))();
}

uint64_t sub_1001FB86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  int v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24
                                                      + 8
                                                      * ((3156 * ((a23 & 0xFFFFFFF0) == 1543092736)) | v23 ^ 0x12BA))
                                          - (((v23 ^ 0x12BAu) - 1064688611) ^ 0xC08A45ADLL)))(4294924618);
}

uint64_t sub_1001FB8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int *v32;

  v32 = &a24 + 6 * (a9 ^ 0xA4066788) + 6 * v25;
  v32[2] = v24;
  v32[3] = HIDWORD(a13);
  *((_QWORD *)v32 + 2) = v31;
  v32[6] = v29;
  a24 = v25 + 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(3230287265 - (a9 - 1064688611) + *(_QWORD *)(v28 + 8 * ((2631 * ((*(_DWORD *)(v26 + v30 * (uint64_t)v27 + 32) + 557693999) < 0x80000003)) ^ a9)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1001FB960()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((493
                                          * (((*(_DWORD *)(v2 + (v0 - 1589789649) * (uint64_t)v3 + 36) == v0) ^ ((v1 - 79) | 5)) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_1001FB9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  _BOOL4 v13;

  v13 = v9 == a8 + ((v10 - 203542776) & 0xCCABE7AD) - 1 && v8 != 1589789648;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((26462 * v13) ^ v10)) - ((v10 - 11631) | 0x2008u) + 8572))();
}

uint64_t sub_1001FBA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v13 = *(_DWORD *)(v10 + (v8 - 1589789649) * (uint64_t)v11 + 40) & 8;
  v14 = (v13 - (v13 << (((v9 + 117) & 0xDE) + 37)) + 1653410808) ^ 0x9456B648;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8
                                                      * ((32596
                                                        * (((v14 << (((v9 - 104) | 0x85) + a8)) | 0x1A23DD2E) - v14 != 148652478)) ^ v9))
                                          - 8))(4294924618);
}

uint64_t sub_1001FBAF4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = (v0 & 0xFFFFFFFFFFFFFFFLL) != 1
    || (((v1 - 1064698712) | 0x121) ^ 0xE1B7F98A) + *(_DWORD *)(v2 + v0 * (uint64_t)v3 + 36) > 0x80000002;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v6 * (v1 - 18358)) ^ v1)) - 4))();
}

uint64_t sub_1001FBB64()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 + 1064691242)) - 8))();
}

#error "1001FBD6C: call analysis failed (funcsize=97)"

uint64_t sub_1001FBD70()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((4650
                                                        * (*(_DWORD *)(v0 + v4 * (uint64_t)v1 + 36) + 557693999 < (v2 ^ 0xC08A0C75) - 1082803618)) ^ v2))
                                          - 4))(4294924618);
}

void sub_1001FBFD8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1199091809 * (((a1 | 0x40FCB0B9) - a1 + (a1 & 0xBF034F46)) ^ 0xEF8B1E09));
  __asm { BR              X11 }
}

uint64_t sub_1001FC0BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((51 * (a2 == *a1)) ^ v2))
                            - ((v2 - 836122414) & 0x31D615FD ^ 0x15E5)))();
}

uint64_t sub_1001FC100@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = v1 - 13873;
  *(_BYTE *)(v3 - 176) = *(_BYTE *)a1;
  *(_QWORD *)(v3 - 175) = *(_QWORD *)(a1 + 1);
  *(_DWORD *)(v3 - 167) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v3 - 163) = *(_WORD *)(a1 + 13);
  v5 = *(_QWORD *)(v2 + 8 * v1);
  *(_BYTE *)(v3 - 161) = *(_BYTE *)(a1 + 15);
  return ((uint64_t (*)(void))(v5 - ((v4 | 0x1501u) ^ 0x15E5)))();
}

uint64_t sub_1001FC150(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v5;

  if (v3)
    v4 = *(_QWORD *)(a1 + 8) == 0;
  else
    v4 = 1;
  v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((21 * ((((v1 + 5189) ^ v5) & 1) == 0)) ^ v1)) - 12))();
}

uint64_t sub_1001FC18C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  _BOOL4 v10;

  v4 = *(_DWORD *)(a1 + 20);
  v5 = v4 + v1;
  v6 = ((v4 + v1) ^ 0x2D) & (2 * ((v4 + v1) & 0xAD)) ^ (v4 + v1) & 0xAD;
  v7 = ((v4 + v1) ^ (2
                                                     * (((((v4 + v1) ^ 0x7D) << ((5 * (v2 ^ 0x70)) ^ 0xD7)) ^ 0xA0) & ((v4 + v1) ^ 0x7D) & (4 * v6) ^ v6))) & 0xF ^ 0x9080100D;
  v8 = (v7 | 0x4DB4D668) - (v7 | 0xB24B2997);
  v10 = v5 != 1107823443 && v8 == 719953105;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (16 * v10))) - 4))();
}

uint64_t sub_1001FC254@<X0>(uint64_t a1@<X4>, unsigned __int8 *a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);

  v7 = a2[10];
  v8 = a2[2];
  *(_QWORD *)(v6 - 208) = v3;
  v9 = *(_QWORD *)(a1 + 8 * (v2 - 6026));
  v10 = *(_QWORD *)(a1 + 8 * (v2 - 5784)) - 8;
  v11 = a2[3];
  *(_DWORD *)(v6 - 224) = ((v7 ^ 0x6D) + *(_BYTE *)(v10 + (v7 ^ 0x7A)) - 17);
  v12 = *(_QWORD *)(a1 + 8 * (v2 - 5055)) - 4;
  v13 = *(unsigned __int8 *)(v12 + (v11 ^ 0x12));
  LODWORD(v8) = ((((v8 ^ 0xA4) + *(_BYTE *)(v10 + (v8 ^ 0xB3)) + 111) ^ 0xB4) << 8) | (((75 * *(_BYTE *)(*(_QWORD *)(a1 + 8 * (v2 - 5440)) - 12 + (a2[1] ^ 0x5ELL))) ^ 0x6E) << 16);
  v14 = a2[6];
  *(_DWORD *)(v6 - 256) = *(unsigned __int8 *)(v12 + (a2[7] ^ 3));
  v15 = *a2;
  LOBYTE(v14) = (v14 ^ 0x4A) + ((2 * v14) & 0xFB ^ 0x6F) + *(_BYTE *)(v10 + (v14 ^ 0x20));
  *(_DWORD *)(v6 - 216) = (((v14 - 19) ^ (19 - v14) ^ (((v14 - 19) ^ 0x4D) - 77)) - 78) << 8;
  *(_DWORD *)(v6 - 228) = v13 & 2 | (((*(unsigned __int8 *)(v9 + (v15 ^ 0xE5)) + 32) ^ (4
                                                                                      * *(unsigned __int8 *)(v9 + (v15 ^ 0xE5))) & 0x6C ^ 0x99999999) << 24) | v13 & 0xFFFFFFFD | v8;
  *(_QWORD *)(v6 - 184) = v4;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * v2) - 12);
  *(_QWORD *)(v6 - 192) = v5;
  return v16(1487407168, 1447086472, 1979711488);
}

uint64_t sub_1001FC61C(uint64_t a1, char a2)
{
  int v2;
  char v3;
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  _BOOL4 v14;

  v9 = v4 + 118;
  v10 = v9 & 0x8A ^ a2 ^ (2 * ((v4 + 118) & 0x8A)) & (v9 ^ v3);
  v11 = (2 * (v9 ^ 2)) & a2 ^ 0x88 ^ ((2 * (v9 ^ 2)) ^ 0x10) & (v9 ^ 2);
  v12 = (4 * v10) & a2 ^ v10 ^ ((4 * v10) ^ 0x20) & v11;
  v13 = (((4 * v11) ^ 0x20) & v11 ^ 8) & (16 * v12) ^ v12;
  *(_BYTE *)(*(_QWORD *)(v8 - 192) + v4) = *(_BYTE *)(*(_QWORD *)(v8 - 208) + v4) ^ 0xD4 ^ (113
                                                                                          - 77
                                                                                          * ((((v4 + 118) ^ (2 * v13) ^ 0xE9)
                                                                                            - 56) ^ (((v4 + 118) ^ (2 * v13) ^ 0x24) + 11) ^ (((v4 + 118) ^ (2 * v13) ^ 0x57) + 122)));
  if (v7 < 0xAC0C657B != v4 + v5 < 0xAC0C657B)
    v14 = v7 < 0xAC0C657B;
  else
    v14 = v4 + v5 < v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 - 184) + 8 * ((!v14 * v6) ^ v2)) - 12))();
}

uint64_t sub_1001FC9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v38 - 184) + 8 * (a38 ^ ((32 * ((a5 & 3 ^ 2) == 1)) | (((a5 & 3 ^ 2) == 1) << 7)))) - 8))(a1, a2, a3, a4, a5, a6, a7, *(_QWORD *)(v38 - 184), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1001FCA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((v9 + 96) ^ (25486 * (v8 != 0))))
                            - (((v9 - 12100) | 0x11C1u) ^ 0x15E1)))();
}

uint64_t sub_1001FCAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v8 ^ (25691 * (v9 != 3)))) - (v8 - 7651) + 5601))();
}

uint64_t sub_1001FCB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * v8) - 8))();
}

uint64_t sub_1001FCB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a8 + 8 * (v8 + 16515)) - 4))(2060);
}

uint64_t sub_1001FCBF4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (((v9 == 15) * a1) ^ v8)) - 4))();
}

uint64_t sub_1001FCC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v8 + 10020)) - 4))();
}

uint64_t sub_1001FCCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8
                                        + 8
                                        * (((v8 == 3 * (((v8 * (unint64_t)v9) >> 32) >> 1)) * v11) ^ v10))
                            - 4))();
}

uint64_t sub_1001FCD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)(v35 - 208) = (v34 - 1296) | 0xC0u;
  *(_QWORD *)(v35 - 224) = (char *)*(&off_1015B46D0 + (v34 ^ 0x1821)) - 12;
  v36 = ((uint64_t (*)(uint64_t))*(&off_1015B46D0 + v34 - 6431))(1028);
  v37 = *(_QWORD *)(v35 - 184);
  *(_QWORD *)(v35 - 216) = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((121 * (v36 != 0)) ^ v34)))(v36, v38, 0, v39, v40, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1001FCDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  char v43;
  int v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unint64_t v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  int v293;
  int v294;
  unsigned int v295;
  int v296;
  int v297;
  unsigned int v298;
  unsigned int v299;
  uint64_t v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  uint64_t v376;
  uint64_t (*v377)(_QWORD, uint64_t, uint64_t, uint64_t, _UNKNOWN **, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  int v386;

  v48 = 785 * (v44 ^ 0x1A2A);
  *(_DWORD *)(v47 - 256) = v48;
  v49 = (222438064 * v40) | (v45 >> 28);
  v50 = ((454237095 * v39) >> (v48 ^ 0x47)) | (1879048192 * v39);
  v51 = -1174321509 * v50;
  v52 = 684941312 * v50;
  v53 = (-255852544 * v38) | ((-1804780605 * v38) >> 10);
  v54 = ((v41 + (v42 >> 28) - v50) ^ v49) - v53;
  v55 = (-150994944 * v54) | ((875712247 * v54) >> 8);
  v56 = (-816499712 * v53) | ((1320408397 * v53) >> 22);
  v57 = (1747939328 * v49) | ((712409847 * v49) >> 20);
  v58 = (v55 ^ (v52 & 0xFFFFE000 | (v51 >> 19))) - (v56 + v57);
  v59 = (135045120 * v58) | ((-329236379 * v58) >> 19);
  v60 = ((-297545133 * v59) >> (v43 & 9) >> (v43 & 9 ^ 9)) | (696254464 * v59);
  v61 = -402653184 * ((-72487061 * v56) >> 18);
  v62 = (-1275392000 * v55) | ((-1392820303 * v55) >> 20);
  v63 = 1775036179 * v62;
  v64 = (2077933568 * v56) | ((-72487061 * v56) >> 18);
  v65 = (((-1050902528 * v57) | ((-1144945991 * v57) >> 17)) + v62) ^ v64 ^ v59;
  v66 = 1933165760 * v62;
  v67 = v60 - ((2 * v60) & 0x17C842DA) - 1947983507;
  v68 = v66 & 0xFFFFFFC0 | (v63 >> 26);
  v69 = (v61 & 0xF8000000 | ((1859128061 * v64) >> 5)) - v68;
  v70 = ((-492413408 * v65) | ((789918449 * v65) >> 27))
      - 2 * (((-492413408 * v65) | ((789918449 * v65) >> 27)) & 0x551C737F ^ ((789918449 * v65) >> 27) & 1)
      - 719555714;
  v71 = (v67 ^ (v69 - ((2 * v69) & 0x17C842DA) - 1947983507))
      + 582696730
      + (((v70 ^ 0x70D7F3F6) - 1893200886) ^ ((v70 ^ 0x597B3494) - 1501246612) ^ ((v70 ^ 0xFCB0B41C) + 55528420));
  v72 = (v71 ^ 0x39503753) & (2 * (v71 & 0xB2613464)) ^ v71 & 0xB2613464;
  v73 = ((2 * (v71 ^ 0x79927753)) ^ 0x97E6866E) & (v71 ^ 0x79927753) ^ (2 * (v71 ^ 0x79927753)) & 0xCBF34336;
  v74 = v73 ^ 0x48114111;
  v75 = (v73 ^ 0x83800220) & (4 * v72) ^ v72;
  v76 = ((4 * v74) ^ 0x2FCD0CDC) & v74 ^ (4 * v74) & 0xCBF34334;
  v77 = (v76 ^ 0xBC10000) & (16 * v75) ^ v75;
  v78 = ((16 * (v76 ^ 0xC0324323)) ^ 0xBF343370) & (v76 ^ 0xC0324323) ^ (16 * (v76 ^ 0xC0324323)) & 0xCBF34330;
  v79 = v77 ^ 0xCBF34337 ^ (v78 ^ 0x8B300300) & (v77 << 8);
  v80 = v71 ^ (2
             * ((v79 << 16) & 0x4BF30000 ^ v79 ^ ((v79 << 16) ^ 0x43370000) & (((v78 ^ 0x40C34007) << 8) & 0x4BF30000 ^ 0x8B00000 ^ (((v78 ^ 0x40C34007) << 8) ^ 0x73430000) & (v78 ^ 0x40C34007))));
  v81 = (((~(-1259562526 * (v68 + (v67 ^ 0x741BDE92) + 1)) | 0x55C71903)
        + 1517702385 * (v68 + (v67 ^ 0x741BDE92) + 1)
        - 719555713) ^ v70)
      + 633143544
      + (((v80 ^ 0x8E0195A0) - 1743047432) ^ ((v80 ^ 0xE7BE43B) + 409027949) ^ ((v80 ^ 0x239BC391) + 897671879));
  v82 = (((v70 ^ 0xB0CCC3C3) + 1328757821) ^ ((v70 ^ 0x387FEB0) - 59244208) ^ ((v70 ^ 0x66574E0D) - 1716997645))
      - 216501083
      + (((v81 ^ 0xDEC3932E) - 118471085) ^ ((v81 ^ 0xAEBA97AE) - 2004270381) ^ ((v81 ^ 0x4B0FFE0A) + 1832659831));
  v83 = (v82 ^ 0xC63EACFA) & (2 * (v82 & 0xC4BECEE2)) ^ v82 & 0xC4BECEE2;
  v84 = ((2 * (v82 ^ 0x477A38BA)) ^ 0x789ECB0) & (v82 ^ 0x477A38BA) ^ (2 * (v82 ^ 0x477A38BA)) & 0x83C4F658;
  v85 = v84 ^ 0x80441248;
  v86 = (v84 ^ 0x3806410) & (4 * v83) ^ v83;
  v87 = ((4 * v85) ^ 0xF13D960) & v85 ^ (4 * v85) & 0x83C4F658;
  v88 = (v87 ^ 0x300D040) & (16 * v86) ^ v86;
  v89 = ((16 * (v87 ^ 0x80C42618)) ^ 0x3C4F6580) & (v87 ^ 0x80C42618) ^ (16 * (v87 ^ 0x80C42618)) & 0x83C4F650;
  v90 = v88 ^ 0x83C4F658 ^ (v89 ^ 0x446400) & (v88 << 8);
  v91 = v82 ^ (2
             * ((v90 << 16) & 0x3C40000 ^ v90 ^ ((v90 << 16) ^ 0x76580000) & (((v89 ^ 0x83809258) << 8) & 0x3C40000 ^ (((v89 ^ 0x83809258) << 8) ^ 0x44F60000) & (v89 ^ 0x83809258) ^ 0x3000000)));
  HIDWORD(a22) = v81 ^ 0xD9CC2A83;
  v92 = v81 ^ 0xD9CC2A83 ^ v80;
  v93 = (((v67 ^ 0x612AFAD5) - 1630206677) ^ ((v67 ^ 0x51D0A3F) - 85789247) ^ ((v67 ^ 0xEFD3D187) + 271330937))
      - 655877454
      + (((v81 ^ 0xC50EBA29) - 482513066) ^ ((v81 ^ 0xBD73EDDA) - 1690290009) ^ ((v81 ^ 0x430BAD79) + 1698199558));
  v94 = (v93 ^ 0x1A4D480) & (2 * (v93 & 0x95B6D6C4)) ^ v93 & 0x95B6D6C4;
  v95 = ((2 * (v93 ^ 0x880F188)) ^ 0x3A6C4E98) & (v93 ^ 0x880F188) ^ (2 * (v93 ^ 0x880F188)) & 0x9D36274C;
  v96 = v95 ^ 0x85122144;
  v97 = (v95 ^ 0x18240600) & (4 * v94) ^ v94;
  v98 = ((4 * v96) ^ 0x74D89D30) & v96 ^ (4 * v96) & 0x9D36274C;
  v99 = (v98 ^ 0x14100500) & (16 * v97) ^ v97;
  v100 = ((16 * (v98 ^ 0x8926224C)) ^ 0xD36274C0) & (v98 ^ 0x8926224C) ^ (16 * (v98 ^ 0x8926224C)) & 0x9D362740;
  v101 = v99 ^ 0x9D36274C ^ (v100 ^ 0x91222400) & (v99 << 8);
  v386 = v46;
  v102 = v93 ^ (2
              * ((v101 << 16) & 0x1D360000 ^ v101 ^ ((v101 << 16) ^ 0x274C0000) & (((v100 ^ 0xC14030C) << 8) & 0x1D360000 ^ 0x9100000 ^ (((v100 ^ 0xC14030C) << 8) ^ 0x36270000) & (v100 ^ 0xC14030C))));
  v103 = 1093427133
       * (((v102 ^ 0xB8B26130) - 190486120) ^ ((v102 ^ 0xD38015F2) - 1617486506) ^ ((v102 ^ 0xCEE0EC9E) - 2097683398))
       + 2082603664;
  v104 = (v103 ^ 0xB0F46E67) & (2 * (v103 & 0xB4E46F64)) ^ v103 & 0xB4E46F64;
  v105 = ((2 * (v103 ^ 0xB0FC32AF)) ^ 0x830BB96) & (v103 ^ 0xB0FC32AF) ^ (2 * (v103 ^ 0xB0FC32AF)) & 0x4185DCA;
  v106 = v105 ^ 0x4084449;
  v107 = (v105 ^ 0x101980) & (4 * v104) ^ v104;
  v108 = ((4 * v106) ^ 0x1061772C) & v106 ^ (4 * v106) & 0x4185DC8;
  v109 = v108 ^ 0x41808C3;
  v110 = v107 ^ 0x4185DCB ^ (v108 ^ 0x5500) & (16 * v107);
  v111 = 16 * (v108 ^ 0x41808C3);
  v112 = (v111 ^ 0x4185DCB0) & v109;
  v113 = v111 & 0x4185DC0 ^ 0x418014B ^ v112;
  v114 = (v110 << 8) & 0x4185D00 ^ v110 ^ ((v110 << 8) ^ 0x185DCB00) & v113;
  v115 = v103 ^ ~(2 * (v112 & (v113 << 8) & (v114 << 16) ^ v114));
  v116 = -563705453
       * (((v91 ^ 0x1C03299D) - 1259613531) ^ ((v91 ^ 0x14CCAC09) - 1138469071) ^ ((v91 ^ 0xCF78A7C6) + 1737514240))
       - 529494581;
  v117 = (v116 ^ 0x5620CC20) & (2 * (v116 & 0x9722CD31)) ^ v116 & 0x9722CD31;
  v118 = ((2 * (v116 ^ 0x7060D620)) ^ 0xCE843622) & (v116 ^ 0x7060D620) ^ (2 * (v116 ^ 0x7060D620)) & 0xE7421B10;
  v119 = v118 ^ 0x21420911;
  v120 = (v118 ^ 0xC4001000) & (4 * v117) ^ v117;
  v121 = ((4 * v119) ^ 0x9D086C44) & v119 ^ (4 * v119) & 0xE7421B10;
  v122 = (v121 ^ 0x85000800) & (16 * v120) ^ v120;
  v123 = ((16 * (v121 ^ 0x62421311)) ^ 0x7421B110) & (v121 ^ 0x62421311) ^ (16 * (v121 ^ 0x62421311)) & 0xE7421B10;
  v124 = v123 ^ 0x83420A01;
  v125 = v122 ^ 0xE7421B11 ^ (v123 ^ 0x64001100) & (v122 << 8);
  v126 = v116 ^ (2
               * ((v125 << 16) & 0x67420000 ^ v125 ^ ((v125 << 16) ^ 0x1B110000) & ((v124 << 8) & 0x67420000 ^ 0x25400000 ^ ((v124 << 8) ^ 0x421B0000) & v124)));
  v127 = -2108113030
       * (((v102 ^ 0x6F1D5BF) + 1256643865) ^ ((v102 ^ 0x53BEF9B7) + 531230993) ^ ((v102 ^ 0xF09DB454) - 1131758348))
       - 1166840141;
  v128 = (2 * (v127 & 0xA7997534)) & 0x4D226A60 ^ v127 & 0xA7997534 ^ ((2 * (v127 & 0xA7997534)) | 2) & (v127 ^ 0xCAF71F44);
  v129 = (2 * (v127 ^ 0xCAF71F44)) & 0x6D6E6A70 ^ 0x25222A11 ^ ((2 * (v127 ^ 0xCAF71F44)) ^ 0xDADCD4E2) & (v127 ^ 0xCAF71F44);
  v130 = (4 * v128) & 0x6D6E6A70 ^ v128 ^ ((4 * v128) | 4) & v129;
  v131 = (4 * v129) & 0x6D6E6A70 ^ 0x48464231 ^ ((4 * v129) ^ 0xB5B9A9C4) & v129;
  v132 = (16 * v130) & 0x6D6E6A70 ^ v130 ^ ((16 * v130) ^ 0x10) & v131;
  v133 = (16 * v131) & 0x6D6E6A70 ^ 0x29084861 ^ ((16 * v131) ^ 0xD6E6A710) & v131;
  v134 = v132 ^ 0x6D6E6A60 ^ (v132 << 8) & 0x6D6E6A00 ^ ((v132 << 8) ^ 0x1100) & v133;
  v135 = (v134 << 16) & 0x6D6E0000 ^ v134 ^ ((v134 << 16) ^ 0x6A710000) & ((v133 << 8) & 0x6D6E0000 ^ 0x1040000 ^ ((v133 << 8) ^ 0x6E6A0000) & v133);
  v136 = 1003295141
       * (((v92 ^ 0x9220B0BC) - 2076569108) ^ ((v92 ^ 0x7E256755) + 1749009923) ^ ((v92 ^ 0xAD5EB5EA) - 1153166146))
       + 1909720312;
  v137 = (v136 ^ 0xF2BF653E) & (2 * (v136 & 0xF0BF703F)) ^ v136 & 0xF0BF703F;
  v138 = ((2 * (v136 ^ 0xD38B254E)) ^ 0x4668AAE2) & (v136 ^ 0xD38B254E) ^ (2 * (v136 ^ 0xD38B254E)) & 0x23345570;
  v139 = v138 ^ 0x21145511;
  v140 = (v138 ^ 0x2200060) & (4 * v137) ^ v137;
  v141 = ((4 * v139) ^ 0x8CD155C4) & v139 ^ (4 * v139) & 0x23345570;
  v142 = (v141 ^ 0x105540) & (16 * v140) ^ v140;
  v143 = ((16 * (v141 ^ 0x23240031)) ^ 0x33455710) & (v141 ^ 0x23240031) ^ (16 * (v141 ^ 0x23240031)) & 0x23345570;
  v144 = v143 ^ 0x300061;
  v145 = v142 ^ 0x23345571 ^ (v143 ^ 0x23045500) & (v142 << 8);
  v146 = v136 ^ (2
               * ((v145 << 16) & 0x23340000 ^ v145 ^ ((v145 << 16) ^ 0x55710000) & ((v144 << 8) & 0x23340000 ^ 0x3200000 ^ ((v144 << 8) ^ 0x34550000) & v144)));
  v147 = (v127 ^ (2 * v135) ^ 0x2254709C) & ~(v115 >> 31) ^ 0x602E2284;
  v148 = (v147 - ((2 * v147) & 0xC2107D72) + 1627930297) ^ 0x8EF7CD76;
  LODWORD(v384) = v92;
  v149 = -1526726656
       * (((v92 ^ 0x78D331BB) + 1858703597) ^ ((v92 ^ 0xFFC77B29) - 371336577) ^ ((v92 ^ 0xC64F2891) - 799700537))
       - 1948442935;
  v150 = (((((v149 & 0xAB000000) >> 27) & 1) << 28) | 0x230E00) ^ (v149 & 0xAB000000 | 0x1050D180) ^ ((2 * (v149 & 0xAB000000)) | 2) & (v149 ^ 0xBB513EB6);
  v151 = (2 * (v149 ^ 0xBB513EB6)) & 0x10000000 ^ 0x10000001 ^ ((2 * (v149 ^ 0xBB513EB6)) ^ 0x20842002) & (v149 ^ 0xBB513EB6);
  v152 = (4 * v150) & 0x1073DF80 ^ v150 & 0xFF308182 ^ ((4 * v150) ^ 0x41CF7E04) & v151;
  v153 = (4 * v151) & 0x1073DF80 ^ 0x10308181 ^ ((4 * v151) ^ 0x41CF7E04) & v151;
  v154 = (16 * v152) & 0x1073DF80 ^ v152 ^ ((16 * v152) ^ 0x73DF810) & v153;
  v155 = (16 * v153) & 0x1073DF80 ^ 0x10420781 ^ ((16 * v153) ^ 0x73DF810) & v153;
  v156 = v154 ^ (v154 << 8) & 0x1073DF00 ^ ((v154 << 8) ^ 0x42078100) & v155 ^ 0x325900;
  v157 = 805306368
       * (((v91 ^ 0xA9C7BC51) + 19875689) ^ ((v91 ^ 0x68A70BDE) - 1068502808) ^ ((v91 ^ 0x6D795DD) - 1371574555));
  v158 = ((2 * (v157 & 0xBFFFFFFF ^ 0xAEB08369)) & 0x20200000 | 0x2900100) ^ v157 & 0xBFFFFFFF ^ 0xAEB08369 ^ (((2 * (v157 & 0xBFFFFFFF ^ 0xAEB08369)) ^ 0x40010496) & (v157 ^ 0x114F7C97) | 0x97D40828);
  v159 = (2 * (v157 ^ 0x114F7C97)) & 0xA0000000 ^ 0xA0000003 ^ ((2 * (v157 ^ 0x114F7C97)) ^ 0x51410496) & (v157 ^ 0x114F7C97);
  v160 = (v157 ^ 0x114F7C97) & 0x10085010 ^ v158 ^ ((4 * v158) ^ 0xFDAA701C) & v159 ^ ((4 * v158) ^ 0xFDAA701C) & 0xA2B08348 ^ 0x97940028;
  v161 = ((4 * v159) ^ 0xA83A54BC) & v159 ^ (v157 ^ 0x114F7C97) & 0x10485810 ^ ((4 * v159) ^ 0xA83A54BC) & 0xAEB08368;
  v162 = v160 ^ v161 & 0x12F85910 ^ ((16 * v160) ^ 0xF9F06FA0) & (v161 ^ 0x2B0010B);
  v163 = ((16 * v161) ^ 0x39F84910) & (v161 ^ 0x2B0010B) ^ v161 & 0x12F85910;
  v164 = v162 ^ v163 & 0x12F85910 ^ ((v162 << 8) ^ 0x127A3210) & (v163 ^ 0x2B0016B);
  v165 = ((v163 << 8) ^ 0xA2F95910) & (v163 ^ 0x2B0016B) ^ v163 & 0x12F85910;
  v166 = (v157 ^ (2
                * (v164 ^ v165 & 0x12F85910 ^ ((v164 << 16) ^ 0x91935910) & (v165 ^ 0x2C000000) ^ ((v164 << 16) ^ 0x91935910) & 0x2EB00100)) ^ 0x473427F3) & ((v126 >> 4) ^ 0xFA05904E) ^ (v126 >> 4) & 0xF352326;
  v167 = ((v166 & 0xBBE5AC59 ^ 0xA8E5AC59) + (v166 ^ 0x57000202) - ((v166 ^ 0x57000202) & 0xBBE5AC59)) ^ 0x491F51A2;
  v168 = (v146 >> 8) & 0xA037A1 ^ 0xC1803621 ^ (v149 ^ (2
                                                      * ((v156 << 16) & 0x10730000 ^ v156 ^ ((v156 << 16) ^ 0x5F810000) & ((v155 << 8) & 0x10730000 ^ ((v155 << 8) ^ 0x73DF0000) & v155 ^ 0x200000))) ^ 0xB998966B) & ((v146 >> 8) ^ 0xFF4B4824);
  v169 = ((v168 | 0xE40F88E) - (v168 | 0xF1BF0771) - 239138959) ^ 0xDD3F3171;
  v170 = (v167
        + (v148 ^ (((1912602624
                   * (((v81 ^ 0x57996A94) + 1907015657) ^ ((v81 ^ 0x50E83E44) + 1994124089) ^ ((v81 ^ 0x3C07AE5A)
                                                                                             + 439647015))) | ((111531065 * (((v81 ^ 0xEF238772) - 921677297) ^ ((v81 ^ 0x51EFA28F) + 2010937332) ^ ((v81 ^ 0x85BADF77) - 1551300084)) + 2074920449) >> 7))
                 + 0x2000000))) ^ v169;
  v171 = (2013265920 * v170) | ((367179247 * v170) >> 5);
  v172 = (471777280 * v169) | ((-1655672709 * v169) >> 18);
  v173 = (-593274555 * v167) >> 22;
  v174 = (-1922755584 * v167) | v173;
  v175 = v174 ^ v172 ^ (((1226220992 * v148) | ((-47949161 * v148) >> 26)) - v171);
  v176 = ((-724275533 * v171) >> (v51 & 0x12) >> (v51 & 0x12 ^ 0x12)) + 464306176 * v171;
  v177 = (1845462016 * v175) | ((1973125089 * v175) >> 22);
  HIDWORD(v178) = 33 * v173;
  LODWORD(v178) = 764859169 * v174;
  v179 = (2056544256 * v172) | ((1328272547 * v172) >> 19);
  v180 = -81103547 * v177;
  v181 = 1699653792 * v177;
  v182 = ((v178 >> 7) + v177 + v176) ^ v179;
  v183 = v181 & 0xFFFFFFE0 | (v180 >> 27);
  v184 = (1155137536 * v176) | ((-1834409363 * v176) >> 15);
  v185 = (-587202560 * v182) | ((-1551107363 * v182) >> 8);
  v186 = v185 ^ (v184 + v183 + 1229869973);
  v187 = (v184 ^ ((-1643290042 * v179) | ((-821645021 * v179) >> 31)))
       + 2 * (v184 & ((-1643290042 * v179) | ((-821645021 * v179) >> 31)))
       + v183
       - v185;
  v188 = v187 - ((2 * v187) & 0x85F3C34C) + 1123672486;
  v189 = ((~(-2134910614 * v186) | 0x7A0C3CB3) + 1080028341 * v186 + 1123672487) ^ v188;
  v190 = 1497198131 * v189 + 2084231941;
  v191 = (v190 ^ 0xC38594F3) & (2 * (v190 & 0x83C524FB)) ^ v190 & 0x83C524FB;
  v192 = ((2 * (v190 ^ 0xC0059485)) ^ 0x878160FC) & (v190 ^ 0xC0059485) ^ (2 * (v190 ^ 0xC0059485)) & 0x43C0B07E;
  v193 = v192 ^ 0x40409002;
  v194 = (v192 ^ 0x300207C) & (4 * v191) ^ v191;
  v195 = ((4 * v193) ^ 0xF02C1F8) & v193 ^ (4 * v193) & 0x43C0B07C;
  v196 = (v195 ^ 0x3008070) & (16 * v194) ^ v194;
  v197 = ((16 * (v195 ^ 0x40C03006)) ^ 0x3C0B07E0) & (v195 ^ 0x40C03006) ^ (16 * (v195 ^ 0x40C03006)) & 0x43C0B070;
  v198 = v190 ^ (2
               * (((v196 ^ 0x43C0B07E ^ v197 & (v196 << 8)) << 16) & 0x43C00000 ^ v196 ^ 0x43C0B07E ^ v197 & (v196 << 8) ^ (((v196 ^ 0x43C0B07E ^ v197 & (v196 << 8)) << 16) ^ 0x307E0000) & (((v197 ^ 0x43C0B01E) << 8) & 0x43C00000 ^ 0x3400000 ^ (((v197 ^ 0x43C0B01E) << 8) ^ 0x40B00000) & (v197 ^ 0x43C0B01E))));
  v199 = v198 ^ v183;
  v200 = v185
       - (((v198 ^ 0x9BB158BC) + 1687639830) ^ ((v198 ^ 0x657D50D3) - 1705287813) ^ ((v198 ^ 0xFA084C68) + 86918082))
       + 1549055289;
  v201 = (v200 ^ 0x5F6D1474) & (2 * (v200 & 0x9F8D9676)) ^ v200 & 0x9F8D9676;
  v202 = ((2 * (v200 ^ 0x766E1070)) ^ 0xD3C70C0C) & (v200 ^ 0x766E1070) ^ (2 * (v200 ^ 0x766E1070)) & 0xE9E38606;
  v203 = v202 ^ 0x28208202;
  v204 = (v202 ^ 0xC0420000) & (4 * v201) ^ v201;
  v205 = ((4 * v203) ^ 0xA78E1818) & v203 ^ (4 * v203) & 0xE9E38604;
  v206 = (v205 ^ 0xA1820000) & (16 * v204) ^ v204;
  v207 = ((16 * (v205 ^ 0x48618606)) ^ 0x9E386060) & (v205 ^ 0x48618606) ^ (16 * (v205 ^ 0x48618606)) & 0xE9E38600;
  v208 = v206 ^ 0xE9E38606 ^ (v207 ^ 0x88200000) & (v206 << 8);
  v209 = v200 ^ (2
               * ((v208 << 16) & 0x69E30000 ^ v208 ^ ((v208 << 16) ^ 0x6060000) & (((v207 ^ 0x61C38606) << 8) & 0x69E30000 ^ 0x8610000 ^ (((v207 ^ 0x61C38606) << 8) ^ 0xE3860000) & (v207 ^ 0x61C38606))));
  LODWORD(a38) = v198;
  v210 = (((v188 ^ 0x7E562B6) - 132473526) ^ ((v188 ^ 0xAB1DD7E1) + 1424107551) ^ ((v188 ^ 0xEE0154F1) + 301902607))
       + 1267637654
       + (((v198 ^ 0xBD24B7F4) + 1107474526) ^ ((v198 ^ 0x39635CD0) - 968535174) ^ ((v198 ^ 0x8083AF23) + 2141560971));
  v211 = (v210 ^ 0xFBA2FA70) & (2 * (v210 & 0xFB88F861)) ^ v210 & 0xFB88F861;
  v212 = ((2 * (v210 ^ 0x98A3FAB2)) ^ 0xC65605A6) & (v210 ^ 0x98A3FAB2) ^ (2 * (v210 ^ 0x98A3FAB2)) & 0x632B02D2;
  v213 = v212 ^ 0x21290251;
  v214 = (v212 ^ 0x42020080) & (4 * v211) ^ v211;
  v215 = ((4 * v213) ^ 0x8CAC0B4C) & v213 ^ (4 * v213) & 0x632B02D0;
  v216 = (v215 ^ 0x280240) & (16 * v214) ^ v214;
  v217 = ((16 * (v215 ^ 0x63030093)) ^ 0x32B02D30) & (v215 ^ 0x63030093) ^ (16 * (v215 ^ 0x63030093)) & 0x632B02D0;
  v218 = v216 ^ 0x632B02D3 ^ (v217 ^ 0x22200000) & (v216 << 8);
  v219 = v210 ^ (2
               * ((v218 << 16) & 0x632B0000 ^ v218 ^ ((v218 << 16) ^ 0x2D30000) & (((v217 ^ 0x410B02C3) << 8) & 0x632B0000 ^ 0x40290000 ^ (((v217 ^ 0x410B02C3) << 8) ^ 0x2B020000) & (v217 ^ 0x410B02C3))));
  v220 = 1314749973
       * (((v219 ^ 0x52576C4A) + 1292586276) ^ ((v219 ^ 0xBA2E16D3) - 1519241285) ^ ((v219 ^ 0xD1A1875E) - 822237640))
       + 410843188;
  v221 = (v220 ^ 0x9C4BA260) & (2 * (v220 & 0xDC6BCB71)) ^ v220 & 0xDC6BCB71;
  v222 = ((2 * (v220 ^ 0x348CB660)) ^ 0xD1CEFA22) & (v220 ^ 0x348CB660) ^ (2 * (v220 ^ 0x348CB660)) & 0xE8E77D10;
  v223 = v222 ^ 0x28210511;
  v224 = (v222 ^ 0xC0C67800) & (4 * v221) ^ v221;
  v225 = ((4 * v223) ^ 0xA39DF444) & v223 ^ (4 * v223) & 0xE8E77D10;
  v226 = v224 ^ 0xE8E77D11 ^ (v225 ^ 0xA0857400) & (16 * v224);
  v227 = (16 * (v225 ^ 0x48620911)) & 0xE8E77D10 ^ ((16 * (v225 ^ 0x48620911)) ^ 0x8E77D110) & (v225 ^ 0x48620911);
  v228 = (v226 << 8) & 0xE8E77D00 ^ v226 ^ ((v226 << 8) ^ 0xE77D1100) & (v227 ^ 0x60802C01);
  v229 = v220 ^ (2
               * (((v227 ^ 0x60802C01) & 0x677D0000 | (v227 ^ 0x1F7FD3FE) & ((v227 ^ 0x60802C01) << 8) | (v228 << 16)) ^ v228));
  v230 = -1665467350
       * (((v219 ^ 0xF1EA7AD3) - 290038853) ^ ((v219 ^ 0xE08B3EE5) - 2678899) ^ ((v219 ^ 0x28B9B9F1) + 937793689))
       + 275005621;
  v231 = (2 * (v230 & 0xD96D4694)) & 0x20CA0D20 ^ v230 & 0xD96D4694 ^ ((2 * (v230 & 0xD96D4694)) | 2) & (v230 ^ 0xF1A63B21);
  v232 = (2 * (v230 ^ 0xF1A63B21)) & 0x28CB7DB4 ^ 0x28490494 ^ ((2 * (v230 ^ 0xF1A63B21)) ^ 0x5196FB68) & (v230 ^ 0xF1A63B21);
  v233 = (4 * v231) & 0x28CB7DB4 ^ v231 ^ ((4 * v231) | 4) & v232;
  v234 = (4 * v232) & 0x28CB7DB4 ^ 0x8C20924 ^ ((4 * v232) ^ 0xA32DF6D0) & v232;
  v235 = (16 * v233) & 0x28CB7DB0 ^ v233 ^ ((16 * v233) ^ 0x50) & v234;
  v236 = (16 * v234) & 0x28CB7DB0 ^ 0x204824B4 ^ ((16 * v234) ^ 0x8CB7DB40) & v234;
  v237 = v235 ^ (v235 << 8) & 0x28CB7D00 ^ ((v235 << 8) ^ 0x1500) & v236 ^ 0x28CB68A1;
  v238 = v230 ^ ((v229 >> 31) | 0x25004630) ^ (2
                                             * ((v237 << 16) & 0x28CB0000 ^ v237 ^ ((v237 << 16) ^ 0x7DB40000) & ((v236 << 8) & 0x28CB0000 ^ 0x20820000 ^ ((v236 << 8) ^ 0x4B7D0000) & v236))) ^ 0x96B532F0;
  v239 = (v238 - ((2 * v238) & 0x215AC32) - 2129996263) ^ 0xEB441F24;
  v240 = ((855463872
         * (((v198 ^ v183 ^ 0xAB792D36) - 282828897) ^ ((v198 ^ v183 ^ 0x3FD470BB) + 2072576532) ^ ((v198 ^ v183 ^ 0x9069198A)
                                                                                                  - 734762205))) | ((-1328810657 * (((v198 ^ v183 ^ 0x17CF3483) + 1402095148) ^ ((v198 ^ v183 ^ 0x291136F4) + 1833714781) ^ ((v198 ^ v183 ^ 0x3A1A4670) + 2118595801)) + 138298544) >> 26))
       + 261172224;
  v241 = ((1684013056 * v189) | ((12253987 * v189) >> 11)) + v240;
  v242 = ((-1859715072
         * (((v209 ^ 0xAF3EFC90) + 739841653) ^ ((v209 ^ 0x4DF505DB) - 825036992) ^ ((v209 ^ 0xAE856331) + 765626838))) | ((828018983 * (((v209 ^ 0x48E59B71) - 876449386) ^ ((v209 ^ 0x6E6F49D9) - 314006722) ^ ((v209 ^ 0x6AC448D2) - 370957769)) - 1488992057) >> 16))
       - 926482432;
  v243 = (1482674176 * ((v242 ^ v241) - v239)) | ((1310033405 * ((v242 ^ v241) - v239)) >> 20);
  v244 = (-26865920 * v239) | ((1711171087 * v239) >> 24);
  v245 = (231202816 * v242) | ((1039167039 * v242) >> 19);
  v246 = (-1331691520 * v243) | ((-1500715643 * v243) >> 11);
  v247 = v245 ^ ((-1654944560 * v240) | ((-1982482227 * v240) >> 28)) ^ v244 ^ v243;
  v248 = (-231443936 * v247) | ((529638289 * v247) >> 27);
  v249 = (2038431744 * v244) | ((-530819853 * v244) >> 9);
  v250 = (-1639972864 * v248) | ((-655014279 * v248) >> 10);
  v251 = (v248 ^ (((2076876800 * v245) | ((-1025253803 * v245) >> 19)) - v246)) - v249;
  v252 = (245974912 * v246) | ((35476111 * v246) >> 25);
  v253 = (1783649312 * v251) | ((1532134049 * v251) >> 27);
  v254 = (v252 ^ ((-1207959552 * v249) | ((54265559 * v249) >> 5)) ^ v250) - v253;
  v255 = (274197747 * (v253 + ((v252 - v250) ^ 0x5AA2E64F))) ^ v254;
  v256 = (v255 ^ 0x8BB1CA21) + v253 - ((2 * ((v255 ^ 0x8BB1CA21) + v253)) & 0xA76DF912) + 1404501129;
  LODWORD(a18) = v255;
  LODWORD(a17) = v255 ^ v250;
  HIDWORD(a24) = (v255 ^ 0x8BB1CA21) + v254 - ((2 * ((v255 ^ 0x8BB1CA21) + v254)) & 0xF2D0FB02) - 110592639;
  v257 = ((-1800217600
         * (((v255 ^ v250 ^ 0xD383B619) + 106845138) ^ ((v255 ^ v250 ^ 0x3C883974) - 380248899) ^ ((v255 ^ v250 ^ 0x64BA454C)
                                                                                                 - 1318608763))) | ((-1130025801 * (((v255 ^ v250 ^ 0xB108BFCF) + 1691703816) ^ ((v255 ^ v250 ^ 0x47DC0519) - 1845370670) ^ ((v255 ^ v250 ^ 0x7D6570F7) - 1464298176)) + 781944762) >> 22))
       + 1847519232;
  v258 = ((-1456044032
         * (((HIDWORD(a24) ^ 0xC8552A2E) + 933942738) ^ ((HIDWORD(a24) ^ 0x81B0D30) - 135990576) ^ ((HIDWORD(a24) ^ 0x39265A9F)
                                                                                                  - 958814879))) | ((-860543279 * (((HIDWORD(a24) ^ 0x216769AD) - 560425389) ^ ((HIDWORD(a24) ^ 0x8CA2D88F) + 1935484785) ^ ((HIDWORD(a24) ^ 0x54ADCCA3) - 1420676259)) - 1457218479) >> 21))
       + 618825728;
  v259 = ((449724416
         * (((v256 ^ 0xFF371DA9) + 13165143) ^ ((v256 ^ 0x359D0372) - 899482482) ^ ((v256 ^ 0x991CE252) + 1726160302))) | ((-1066374343 * (((v256 ^ 0x659C77E8) - 1704753128) ^ ((v256 ^ 0x50D7B56C) - 1356313964) ^ ((v256 ^ 0x66FD3E0D) - 1727872525)) + 1530625409) >> 18))
       - 547340288;
  HIDWORD(v385) = v255 ^ 0x8BB1CA21;
  HIDWORD(v178) = v255 ^ 0x8BB1CA21;
  LODWORD(v178) = 1858779067 * (v255 ^ 0x8BB1CA21);
  v260 = (v178 >> 1) - v257 - v259 - v258;
  v261 = (1820147712 * v260) | ((-321277451 * v260) >> 18);
  v262 = (2122317824 * v258) | ((132542717 * v258) >> 9);
  v263 = (680415360 * v259) | ((1381047457 * v259) >> 25);
  v264 = (v261 ^ ((-914358272 * v257) | ((-1126436461 * v257) >> 9))) - (v262 + v263);
  v265 = (-1302310912 * v261) | ((-362076667 * v261) >> 20);
  v266 = (-2013401088 * v264) | ((1696104415 * v264) >> 20);
  v267 = 1036643225 * v262;
  v268 = (-593577584 * v262) | ((1036643225 * v262) >> 28);
  v269 = 524717067 * v268;
  v270 = (v265 ^ ((-1313570816 * v263) | ((90137449 * v263) >> 17))) - v268 + v266;
  v271 = (-478195712 * v265) | ((-592562187 * v265) >> 20);
  v272 = 1059646561 * v266;
  v273 = -658374656 * v266;
  v274 = ((-784433152 * v270) | ((-1361993091 * v270) >> 17))
       - ((2 * ((-784433152 * v270) | ((-1361993091 * v270) >> 17))) & 0x5EBC21C6);
  v275 = v273 & 0xFFFE0000 | (v272 >> 15);
  v276 = v275 + (v271 ^ ((v269 >> 2) - (v267 >> 28 << 30)));
  v274 += 794693859;
  v277 = v275 + v271 - ((2 * (v275 + v271) + 2054229004) & 0x5EBC21C6) - 1399417111;
  v278 = (v276 - ((2 * v276) & 0x5EBC21C6) + 794693859) ^ v274;
  v279 = ((v277 ^ v274) + 11201721) ^ v278;
  v280 = ((v279 + 767439734) ^ 0x9FE47156) & (2 * ((v279 + 767439734) & 0x9FE17450)) ^ (v279 + 767439734) & 0x9FE17450;
  v281 = ((2 * ((v279 + 767439734) ^ 0x922451D6)) ^ 0x1B8A4B0C) & ((v279 + 767439734) ^ 0x922451D6) ^ (2 * ((v279 + 767439734) ^ 0x922451D6)) & 0xDC52586;
  v282 = (v281 ^ 0x9800100) & (4 * v280) ^ v280;
  v283 = ((4 * (v281 ^ 0x4452482)) ^ 0x37149618) & (v281 ^ 0x4452482) ^ (4 * (v281 ^ 0x4452482)) & 0xDC52584;
  v284 = (v283 ^ 0x5040400) & (16 * v282) ^ v282;
  v285 = ((16 * (v283 ^ 0x8C12186)) ^ 0xDC525860) & (v283 ^ 0x8C12186) ^ (16 * (v283 ^ 0x8C12186)) & 0xDC52580;
  v286 = v284 ^ 0xDC52586 ^ (v285 ^ 0xC400000) & (v284 << 8);
  v287 = (v279 + 767439734) ^ (2
                             * ((v286 << 16) & 0xDC50000 ^ v286 ^ ((v286 << 16) ^ 0x25860000) & (((v285 ^ 0x1852586) << 8) & 0xDC50000 ^ 0x8C00000 ^ (((v285 ^ 0x1852586) << 8) ^ 0xC5250000) & (v285 ^ 0x1852586))));
  v288 = -680706623
       * (((v287 ^ 0x979144FA) + 2028746148) ^ ((v287 ^ 0xB3A7697C) + 1557796902) ^ ((v287 ^ 0xAB5512DA) + 1143497604))
       + 234995578;
  v289 = (((v274 ^ 0x24ECC464) - 619496548) ^ ((v274 ^ 0x92C15E6A) + 1832821142) ^ ((v274 ^ 0x99738AED) + 1720481043))
       + 604687296
       + (((v287 ^ 0x6708DBEA) - 2005554508) ^ ((v287 ^ 0xC344C32E) + 741978744) ^ ((v287 ^ 0x2B2F2798) - 1001236798));
  v290 = (v289 ^ 0xA3B2F79C) & (2 * (v289 & 0xAB34F71D)) ^ v289 & 0xAB34F71D;
  v291 = ((2 * (v289 ^ 0xE3FA3B9C)) ^ 0x919D9902) & (v289 ^ 0xE3FA3B9C) ^ (2 * (v289 ^ 0xE3FA3B9C)) & 0x48CECC80;
  v292 = (v291 ^ 0x848800) & (4 * v290) ^ v290;
  v293 = ((4 * (v291 ^ 0x48424481)) ^ 0x233B3204) & (v291 ^ 0x48424481) ^ (4 * (v291 ^ 0x48424481)) & 0x48CECC80;
  v294 = (v293 ^ 0xA0000) & (16 * v292) ^ v292;
  v295 = ((16 * (v293 ^ 0x48C4CC81)) ^ 0x8CECC810) & (v293 ^ 0x48C4CC81) ^ (16 * (v293 ^ 0x48C4CC81)) & 0x48CECC80;
  v296 = v294 ^ 0x48CECC81 ^ (v295 ^ 0x8CCC800) & (v294 << 8);
  v297 = v289 ^ (2
               * ((v296 << 16) & 0x48CE0000 ^ v296 ^ ((v296 << 16) ^ 0x4C810000) & (((v295 ^ 0x40020481) << 8) & 0x48CE0000 ^ (((v295 ^ 0x40020481) << 8) ^ 0x4ECC0000) & (v295 ^ 0x40020481) ^ 0x20000)));
  v298 = -1211447255
       * (((v297 ^ 0x9C53FA72) - 1513613302) ^ ((v297 ^ 0x40BFE18A) + 2032403442) ^ ((v297 ^ 0x774575E7) + 1323210653))
       + 1606435335;
  v299 = -1307951104
       * (((v297 ^ 0x9F352C19) - 1498493341) ^ ((v297 ^ 0x5DE89646) + 1685287998) ^ ((v297 ^ 0x6974D440) + 1357854268))
       - 224398042;
  v300 = v278 - ((2 * v278) & 0x3FC363F4u) - 1612598790;
  v301 = v287 ^ 0x10828EA6;
  v302 = v275 + (v287 ^ 0x709CC0A3);
  v303 = (v298 ^ 0x398615CD) & (2 * (v298 & 0xBDC659CC)) ^ v298 & 0xBDC659CC;
  v304 = ((2 * (v298 ^ 0x188687C5)) ^ 0x4A81BC12) & (v298 ^ 0x188687C5) ^ (2 * (v298 ^ 0x188687C5)) & 0xA540DE08;
  v305 = (v304 ^ 0x8C00) & (4 * v303) ^ v303;
  v306 = ((4 * (v304 ^ 0xA5404209)) ^ 0x95037824) & (v304 ^ 0xA5404209) ^ (4 * (v304 ^ 0xA5404209)) & 0xA540DE08;
  v307 = (v306 ^ 0x85005800) & (16 * v305) ^ v305;
  v308 = ((16 * (v306 ^ 0x20408609)) ^ 0x540DE090) & (v306 ^ 0x20408609) ^ (16 * (v306 ^ 0x20408609)) & 0xA540DE00;
  v309 = v307 ^ 0xA540DE09 ^ (v308 ^ 0x400C000) & (v307 << 8);
  v310 = v298 ^ (2
               * ((v309 << 16) & 0x25400000 ^ v309 ^ ((v309 << 16) ^ 0x5E080000) & (((v308 ^ 0xA1401E09) << 8) & 0x25400000 ^ 0x25000000 ^ (((v308 ^ 0xA1401E09) << 8) ^ 0x40DE0000) & (v308 ^ 0xA1401E09))));
  v311 = (v299 ^ 0xA6548974) & (2 * (v299 & 0xB454C000)) ^ v299 & 0xB454C000;
  v312 = (2 * (v299 ^ 0xC6740974)) & 0x72208004 ^ 0x12200002 ^ ((2 * (v299 ^ 0xC6740974)) ^ 0xE4418450) & (v299 ^ 0xC6740974);
  v313 = (4 * v311) & 0x72200000 ^ v311 ^ ((4 * v311) | 0x10) & v312;
  v314 = (4 * v312) & 0x7220C3AC ^ 0x3220C106 ^ ((4 * v312) ^ 0xC8830C10) & v312;
  v315 = (16 * v313) & 0x7220C3A0 ^ v313 ^ ((16 * v313) ^ 0xE0) & v314;
  v316 = (16 * v314) & 0x7220C3A0 ^ 0x5020C10E ^ ((16 * v314) ^ 0x220C3AE0) & v314;
  v317 = v315 ^ (v315 << 8) & 0x7220C300 ^ ((v315 << 8) ^ 0xAE00) & v316 ^ 0x72204100;
  v318 = (v317 << 16) & 0x72200000 ^ v317 ^ ((v317 << 16) ^ 0x43AE0000) & ((v316 << 8) & 0x72200000 ^ 0x52200000 ^ ((v316 << 8) ^ 0x20C30000) & v316);
  HIDWORD(v380) = v301;
  HIDWORD(v383) = v301 ^ v300;
  v319 = (1470736640 * HIDWORD(v383)) | ((-313022039 * HIDWORD(v383)) >> 24);
  v320 = (879280128 * (v302 + 1)) | ((-135736925 * (v302 + 1)) >> 18);
  v321 = ((v310 >> 18) ^ 0xFFFFC02E) & (v299 ^ (2 * v318) ^ 0x8E187500) ^ (v310 >> 18) & 0x779;
  v322 = ((v321 & 0x3EB83EC8 ^ 0x3A183A80) + (v321 ^ 0x84A0C459) - ((v321 ^ 0x84A0C459) & 0x3EB83EC8)) ^ 0xE055C546;
  v323 = __PAIR64__(v279, v288) >> 1;
  v324 = (337899232 * v319) | ((547430263 * v319) >> 27);
  v325 = -2032565151 * v322;
  v326 = (-1006002144 * (v320 ^ v319 ^ v323 ^ v322)) | ((-970961663 * (v320 ^ v319 ^ v323 ^ v322)) >> 27);
  v327 = (1627389952 * v322) | ((-2032565151 * v322) >> 8);
  v328 = (v326 ^ ((56941568 * v320) | ((-1820272329 * v320) >> 22))) + v327 - v324;
  v329 = (-117768192 * v326) | ((1518991611 * v326) >> 16);
  v330 = 469762048 * (v325 >> 8);
  v331 = ((1188642431 * v328) >> 5) - (v328 << 27);
  v332 = ((v330 ^ 0x80467ABD) + (v330 | 0x7FB98542) + 1) ^ (v330 & 0x80000000 | ((-1242671865 * v327) >> 6));
  v333 = (-222494720 * v324) | ((-461835587 * v324) >> 16);
  v334 = (-2115371008 * v329) | ((-273432331 * v329) >> 15);
  v335 = (1794056052 * v331) | ((1522255837 * v331) >> 30);
  v336 = (189970176 * ((v332 - v329 + v331) ^ v333)) | ((-116698441 * ((v332 - v329 + v331) ^ v333)) >> 24);
  v337 = -1502630573 * (v334 - v335 - v336) + 532761354;
  v338 = v336 ^ (v335 + (v334 ^ ((-201326592 * v333) | ((-1515391683 * v333) >> 6))));
  v339 = v337 ^ v338;
  v340 = 1925376945 * v339;
  HIDWORD(v384) = 1925376945 * v339 + v336;
  HIDWORD(v178) = 17 * HIDWORD(v384);
  LODWORD(v178) = -1729822703 * HIDWORD(v384);
  v341 = v178 >> 14;
  LODWORD(a27) = (1925376945 * v339) ^ v335;
  v342 = (-1975927764 * (v340 ^ v335)) | ((1653501707 * (v340 ^ v335)) >> 30);
  HIDWORD(v379) = (1925376945 * v339) ^ v338;
  v343 = (-29425664 * HIDWORD(v379)) | ((1444019775 * HIDWORD(v379)) >> 16);
  v344 = v342 ^ ((-1861794304 * v339) | ((1632142243 * v339) >> 23)) ^ v341 ^ v343;
  v345 = (1446379520 * v344) | ((1679338267 * v344) >> 15);
  v346 = (720297824 * v343) | ((559380219 * v343) >> 27);
  v347 = (1409286144 * v345) | ((-1895418283 * v345) >> 6);
  v348 = (-1542205184 * v341) | ((-1029434415 * v341) >> 24);
  v349 = ((-1831471217 * v342) >> 3) - (v342 << 29) - v348 - v346 + v345;
  v350 = 989153979 * v349;
  LODWORD(v178) = __ROR4__(((-1010827264 * v346) | ((2084306944 * v346) >> 28) | (16 * ((74620687 * v346) >> 14))) ^ 0x8AD63C6F, 4);
  v351 = (-1363148800 * v349) | ((989153979 * v349) >> 10);
  v352 = ((-1329266688 * v348) | ((-1007570747 * v348) >> 16)) - v347 - v351;
  v353 = ((-1791670593 * v347) << ((v350 >> 10) & 0x1B) << ((v350 >> 10) & 0x1B ^ 0x1B)) | ((-1791670593 * v347) >> 5);
  v354 = ((2 * ((-603979776 * v351) | ((-1421780617 * v351) >> 6))) & 0xBDEF5DEA)
       + (((-603979776 * v351) | ((-1421780617 * v351) >> 6)) ^ 0xDEF7AEF5);
  v355 = (-620756992 * (v352 - (v178 ^ 0xF8AD63C6))) | ((-1507476005 * (v352 - (v178 ^ 0xF8AD63C6))) >> 8);
  v356 = 1522695403 * (v353 - v354 + v355) + 329701020;
  HIDWORD(a31) = v386 ^ 0x15E0 ^ *(_QWORD *)(v47 - 208);
  LODWORD(v385) = v81;
  LODWORD(a19) = v102;
  LODWORD(v382) = v209;
  LODWORD(a21) = v199;
  v357 = v256 ^ (v250 - ((2 * v250) & 0xA76DF912) + 1404501129);
  LODWORD(a23) = v357 - ((2 * v357) & 0xF2D0FB02) - 110592639;
  v358 = (v356 ^ 0x14288681) & (2 * (v356 & 0x26B12691)) ^ v356 & 0x26B12691;
  v359 = ((2 * (v356 ^ 0x58288A81)) ^ 0xFD335820) & (v356 ^ 0x58288A81) ^ (2 * (v356 ^ 0x58288A81)) & 0x7E99AC10;
  v360 = (v359 ^ 0x3C010800) & (4 * v358) ^ v358;
  v361 = ((4 * (v359 ^ 0x288A410)) ^ 0xFA66B040) & (v359 ^ 0x288A410) ^ (4 * (v359 ^ 0x288A410)) & 0x7E99AC10;
  v362 = v360 ^ 0x7E99AC10 ^ (v361 ^ 0x7A00A000) & (16 * v360);
  v363 = (16 * (v361 ^ 0x4990C10)) & 0x7E99AC10 ^ 0x16012C10 ^ ((16 * (v361 ^ 0x4990C10)) ^ 0xE99AC100) & (v361 ^ 0x4990C10);
  v364 = (v362 << 8) & 0x7E99AC00 ^ v362 ^ ((v362 << 8) ^ 0x99AC1000) & v363;
  v365 = v356 ^ (2
               * ((v364 << 16) & 0x7E990000 ^ v364 ^ ((v364 << 16) ^ 0x2C100000) & ((v363 << 8) & 0x7E990000 ^ 0x66110000 ^ ((v363 << 8) ^ 0x99AC0000) & v363)));
  v366 = ((763681984 * (v178 ^ 0xF8AD63C6)) | ((-390720653 * (v178 ^ 0xF8AD63C6)) >> 26))
       + v353
       + v354
       - v355
       + 554193163;
  v367 = v366 - ((2 * v366) & 0x8C5796A6) + 1177275219;
  v368 = v355
       - (((v365 ^ v367 ^ 0xD7E1330) + 2053583403) ^ ((v365 ^ v367 ^ 0x6FDA80D6) + 415474125) ^ ((v365 ^ v367 ^ 0x9F493CF0)
                                                                                               - 397402645))
       - 582807948;
  v369 = (v368 ^ 0x9A47F1D) & (2 * (v368 & 0xADB17F99)) ^ v368 & 0xADB17F99;
  v370 = ((2 * (v368 ^ 0x19E4443F)) ^ 0x68AA774C) & (v368 ^ 0x19E4443F) ^ (2 * (v368 ^ 0x19E4443F)) & 0xB4553BA6;
  v371 = (v370 ^ 0x20003204) & (4 * v369) ^ v369;
  v372 = ((4 * (v370 ^ 0x945508A2)) ^ 0xD154EE98) & (v370 ^ 0x945508A2) ^ (4 * (v370 ^ 0x945508A2)) & 0xB4553BA4;
  v373 = (v372 ^ 0x90542A80) & (16 * v371) ^ v371;
  v374 = ((16 * (v372 ^ 0x24011126)) ^ 0x4553BA60) & (v372 ^ 0x24011126) ^ (16 * (v372 ^ 0x24011126)) & 0xB4553BA0;
  v375 = v373 ^ 0xB4553BA6 ^ (v374 ^ 0x4513A00) & (v373 << 8);
  LODWORD(v381) = v365 ^ v367 ^ 0x88E6DEE5;
  v376 = *(unsigned int *)(v47 - 256);
  LODWORD(v380) = a38 ^ 0xD9F056;
  LODWORD(v383) = v365;
  LODWORD(v379) = v365 ^ 0xBBC66445;
  LODWORD(a26) = v368 ^ (2
                       * ((v375 << 16) & 0x34550000 ^ v375 ^ ((v375 << 16) ^ 0x3BA60000) & (((v374 ^ 0xB0040186) << 8) & 0xB4550000 ^ 0x20440000 ^ (((v374 ^ 0xB0040186) << 8) ^ 0x553B0000) & (v374 ^ 0xB0040186))));
  v377 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _UNKNOWN **, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v47 - 184) + 8 * (int)v376) - 12);
  LODWORD(a16) = v81 >> 8;
  HIDWORD(v381) = HIDWORD(v385) >> 8;
  HIDWORD(v382) = v340 >> 8;
  HIDWORD(a28) = v340;
  return v377(v377, 2157062729, v300, 1059869846, &off_1015B46D0, *(_QWORD *)(v47 - 216), v376, 529934920, a9, a10, v379, v380, __PAIR64__(v91, v256), v381, v382, a16, a17, a18, a19,
           v383,
           a21,
           a22,
           a23,
           a24,
           v384,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           v385,
           a38);
}

uint64_t sub_10020089C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;

  *(_DWORD *)(a6 + 4 * (v8 & v7)) = v18 ^ v21 ^ v20 ^ v10 ^ a3 ^ v16 ^ v9 ^ v17 ^ v14 ^ *(_DWORD *)(*(_QWORD *)(a5 + 8 * v11) + 4 * (v19 ^ v15 ^ v22 ^ v13 ^ v8 & v7) - 8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((15 * (v12 == 0)) ^ a7)) - 12))();
}

uint64_t sub_10020090C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t))
{
  int v40;
  uint64_t v41;
  uint64_t (*v42)(void);

  *(_QWORD *)(v41 - 208) = (v40 - 6457) | 0x14E9u;
  v42 = *(uint64_t (**)(void))(*(_QWORD *)(v41 - 184)
                            + 8 * (int)(((a40(1032) != 0) * ((v40 + 1755497790) & 0x975D6FAD ^ 0x34C2)) ^ v40));
  return v42();
}

uint64_t sub_100200984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  int v36;
  uint64_t v37;
  uint64_t v38;

  *(_DWORD *)(v37 - 256) = a26 ^ a36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t))(v38 + 8 * v36))(a1, a2, a3, &off_1015B46D0, a1);
}

uint64_t sub_100200A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v5;
  int v6;
  unsigned int v7;
  int v8;
  char v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  unint64_t v18;

  HIDWORD(v18) = *(_DWORD *)(*(_QWORD *)(a4 + 8 * v8) + 4 * (v14 ^ v13 ^ v16 ^ v5 ^ v7) - 4);
  LODWORD(v18) = HIDWORD(v18);
  *(_DWORD *)(a5 + 4 * v5) = v10 ^ (v18 >> 9) ^ ((v18 >> 9) >> 1) ^ ((v18 >> 9) >> v9) ^ v11;
  return (*(uint64_t (**)(void))(v17 + 8 * (((v6 == 0) * v12) ^ v15)))();
}

uint64_t sub_100200A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t))
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a40(1032);
  v43 = *(_QWORD *)(v41 - 184);
  *(_QWORD *)(v41 - 208) = (v40 - 13642);
  return ((uint64_t (*)(void))(*(_QWORD *)(v43
                                        + 8
                                        * ((((v42 == 0) ^ (v40 - 74)) & 1 | (4
                                                                                            * (((v42 == 0) ^ (v40 - 74)) & 1))) ^ v40))
                            - ((v40 - 1097453195) ^ 0xBE967CACLL)))();
}

uint64_t sub_100200B14()
{
  unsigned int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                        + 8
                                                                                        * (int)(v0 ^ 0xBE965A1C ^ (25849 * (v0 > 0x4D14B8BC)))))(86, (v0 + 1097456518) ^ 0x17, 80, 822672411, 37, 3260391238);
}

uint64_t sub_100200C0C@<X0>(char a1@<W0>, char a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  int v7;
  char v8;
  char v9;
  char v10;
  int v11;
  int v12;
  char v13;
  char v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  int v22;

  if ((v11 & v7) != 0)
    v21 = v8;
  else
    v21 = v7;
  v22 = (v10
                        + (v13 ^ (v21 + v11))
                        + (a2 ^ (2 * (((v13 ^ (v21 + v11)) & v9 ^ v14) - (a1 & (2 * ((v13 ^ (v21 + v11)) & v9 ^ v14))))
                               + 86)));
  *(_DWORD *)(v16 + 4 * v11) = v15 ^ v17 ^ v19 ^ ((v22 ^ a4) + (v22 ^ a5) + 1) ^ a6 ^ *(_DWORD *)(v18 + 4 * (v22 ^ a3));
  return (*(uint64_t (**)(void))(v20 + 8 * (a7 | (4 * (v12 != 0)))))();
}

uint64_t sub_100200C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t))
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = 71 * (v40 ^ 0x5861u);
  v43 = *(_QWORD *)(*(_QWORD *)(v41 - 184) + 8 * ((87 * (a40(1032) == 0)) ^ v40));
  *(_QWORD *)(v41 - 208) = v42;
  return ((uint64_t (*)(void))(v43 - (((v40 ^ 0x5861u) + 19005 - 13483) ^ v42)))();
}

uint64_t sub_100200D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v42 - 224) = a1;
  *(int32x4_t *)(v42 - 208) = vdupq_n_s32(a20);
  *(int32x4_t *)(v42 - 256) = vdupq_n_s32(HIDWORD(a20));
  v44 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * v41) - 12);
  return v44(a1, (3814 * (v41 ^ 0x4A89)) ^ 0x4FB2u, 242, 3889862766, v44, 2519973716, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           v40,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100200F44@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, char a4@<W3>, char a5@<W8>, int8x16_t a6@<Q5>, int32x4_t a7@<Q6>, int8x16_t a8@<Q7>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int8x16_t a43,int8x16_t a44,int32x4_t a45)
{
  uint64_t v45;
  int v46;
  int v47;
  char v48;
  char v49;
  char v50;
  char v51;
  unsigned int v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int32x4_t v64;
  int8x16_t v65;
  int32x4_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int8x16_t v73;
  int8x16_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  unsigned __int8 v80;
  unsigned __int8 v81;
  int8x16_t v82;
  uint64_t v83;
  int8x16_t v84;
  int32x4_t v85;
  int32x4_t v86;
  int8x16_t v87;
  int8x16_t v88;
  int32x4_t v89;
  int32x4_t v90;
  int32x4_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int32x4_t v94;
  int8x16_t v95;
  int8x16_t v96;
  int32x4_t v97;
  int32x4_t v98;
  int8x16_t v99;
  int32x4_t v100;
  int8x16_t v101;
  int32x4_t v102;
  int32x4_t v103;
  int8x16_t v104;
  int8x16_t v105;
  int32x4_t v106;
  int8x16_t v107;

  v80 = a5 + v47 + (v50 & 0xF8) + 1;
  v81 = a5 + v47 + (v49 & 0xFE) + 2;
  v82.i32[0] = ((v47 + a5 + (v51 & 0xFE)) ^ v53);
  v82.i32[1] = (v80 ^ v53);
  v82.i32[2] = (v81 ^ v53);
  v83 = *(_QWORD *)(v45 + 8 * a2) - 12;
  v84.i32[0] = *(_DWORD *)(v83 + 4 * (v82.i32[0] ^ v52));
  v84.i32[1] = *(_DWORD *)(v83 + 4 * (v82.i32[1] ^ v52));
  v84.i32[2] = *(_DWORD *)(v83 + 4 * (v82.i32[2] ^ v52));
  v84.i32[3] = *(_DWORD *)(v83 + 4 * (((v47 + 110 + v54 + ((v48 * (v54 + a4)) & 0xFC)) ^ v53) ^ v52));
  v82.i32[3] = ((v47 + 110 + v54 + ((v48 * (v54 + a4)) & 0xFC)) ^ v53);
  v85 = (int32x4_t)veorq_s8(veorq_s8(*(int8x16_t *)(v55 - 208), v84), veorq_s8(v82, a43));
  v86 = (int32x4_t)vandq_s8((int8x16_t)v85, *(int8x16_t *)(v55 - 256));
  v87 = (int8x16_t)vaddq_s32(v86, v86);
  v88 = (int8x16_t)vsubq_s32(vaddq_s32(v85, a45), (int32x4_t)veorq_s8(veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v87, a6), a7), (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v87, a8), v64)), (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(v87, v65), v66)));
  v89 = (int32x4_t)veorq_s8(v88, v67);
  v90 = (int32x4_t)vandq_s8(v88, v68);
  v91 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)vaddq_s32(v90, v90), veorq_s8(v88, v69)), (int8x16_t)v90);
  v92 = (int8x16_t)vaddq_s32(v89, v89);
  v93 = veorq_s8(vandq_s8(veorq_s8(v92, v70), (int8x16_t)v89), vandq_s8(v92, v71));
  v94 = (int32x4_t)veorq_s8(v93, v72);
  v95 = (int8x16_t)vshlq_n_s32(v94, 2uLL);
  v96 = veorq_s8(vandq_s8(veorq_s8(v95, v74), (int8x16_t)v94), vandq_s8(v95, v75));
  v97 = (int32x4_t)veorq_s8(vandq_s8(veorq_s8(v93, v73), (int8x16_t)vshlq_n_s32(v91, 2uLL)), (int8x16_t)v91);
  v98 = (int32x4_t)veorq_s8(v96, v76);
  v99 = (int8x16_t)vshlq_n_s32(v98, 4uLL);
  v100 = (int32x4_t)veorq_s8(vandq_s8(veorq_s8(v96, v77), (int8x16_t)vshlq_n_s32(v97, 4uLL)), (int8x16_t)v97);
  v101 = veorq_s8(vandq_s8(veorq_s8(v99, v78), (int8x16_t)v98), vandq_s8(v99, v75));
  v102 = (int32x4_t)veorq_s8(v101, v79);
  v103 = (int32x4_t)veorq_s8(veorq_s8((int8x16_t)v100, v58), vandq_s8(veorq_s8(v101, v57), (int8x16_t)vshlq_n_s32(v100, 8uLL)));
  v104 = (int8x16_t)vshlq_n_s32(v102, 8uLL);
  v105 = (int8x16_t)vshlq_n_s32(v103, 0x10uLL);
  v106 = (int32x4_t)veorq_s8(veorq_s8(vandq_s8(v105, v60), (int8x16_t)v103), vandq_s8(veorq_s8(v105, v62), veorq_s8(veorq_s8(vandq_s8(v104, v60), v61), vandq_s8(veorq_s8(v104, v59), (int8x16_t)v102))));
  v107 = veorq_s8(veorq_s8(veorq_s8(a44, v88), v63), (int8x16_t)vaddq_s32(v106, v106));
  *(_DWORD *)(*(_QWORD *)(v55 - 224) + 4 * (v47 + a5 + (v51 & 0xFE))) = v107.i32[0];
  *(_DWORD *)(a1 + 4 * (v80 & 0xFC)) = v107.i32[1];
  *(_DWORD *)(a1 + 4 * v81) = v107.i32[2];
  *(_DWORD *)(a1 + 4 * ((v47 + 110 + v54 + ((v48 * (v54 + a4)) & 0xFC)) & 0xFE)) = v107.i32[3];
  return ((uint64_t (*)(void))(*(_QWORD *)(v56 + 8 * (((v47 != 252) * a3) ^ v46)) - 12))();
}

uint64_t sub_100201174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t))
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a40(1032);
  v43 = *(_QWORD *)(v41 - 184);
  *(_QWORD *)(v41 - 208) = (v40 - 16379);
  return ((uint64_t (*)(void))(*(_QWORD *)(v43
                                        + 8
                                        * (((((v42 == 0) ^ (v40 + 5)) & 1)
                                          * ((v40 - 2067365867) & 0x7B393FEF ^ 0x15EB)) | v40))
                            - 12))();
}

uint64_t sub_1002011F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned int a36)
{
  int v36;
  int v37;
  uint64_t v38;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v38 + 8 * (v36 + 11167))
                                                                                               - 8))(612901378, 621003468, 384797680, 78349040, 2476372109, 6122, v37 ^ a36);
}

uint64_t sub_100201284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v7 == 0) * a6) ^ v6)) - 8))();
}

uint64_t sub_100201310@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  uint64_t v20;

  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * a1)
                                                                   - 3 * (a1 ^ 0x20C7u)
                                                                   + 12369))((3 * (a1 ^ 0x20C7)) ^ 0x31BEu, a12 ^ a10 ^ a20, 2916892709, 133);
}

uint64_t sub_1002013DC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X6>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;

  if (((a7 ^ v15) & v8) != 0)
    v20 = v10;
  else
    v20 = v8;
  v21 = (((v20 + (a7 ^ v15)) ^ v9) + v18 - (v16 & (2 * ((v20 + (a7 ^ v15)) ^ v9)))) ^ a6;
  *(_DWORD *)(v17 + 4 * a7) = a2 ^ __ROR4__(*(_DWORD *)(*(_QWORD *)(a5 + 8 * a1)+ 4* (((v21 & v12) - (v13 & (2 * v21)) + 227) ^ v14)- 4), 30) ^ a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * (((v11 != 0) * a4) ^ v7)) - 12))();
}

uint64_t sub_100201454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t))
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v43 = (v40 - 2112053838) & 0x7DE35DFD;
  v44 = a40(1032);
  v45 = *(_QWORD *)(v42 - 184);
  *(_QWORD *)(v42 - 208) = v43;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * (int)(((v44 != 0) * (v43 + 4418)) ^ v40)))(v44, v46, a23, v47, v48, v41, *(_QWORD *)(v42 - 224), 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1002014D4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 + 1557)) - 8))(27498);
}

uint64_t sub_1002015D4@<X0>(int a1@<W0>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  char v5;
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;

  v15 = v6 ^ ~(((v3 ^ v11 ^ v12) << (v3 & 7) << (v5 & ~(_BYTE)v3)) | (((v3 ^ v11 ^ v12) & 0xFEu) >> 1));
  *(_DWORD *)(v13 + 4 * v3) = v9 ^ (((v15 & 0x80) != 0) | (2 * v15)) ^ 0x77 ^ v10 ^ *(_DWORD *)(*(_QWORD *)(a2 + 8 * v8) + 4 * ((((v15 & 0x80) != 0) | (2 * v15)) ^ v7) - 12);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((v4 == 0) * a1) ^ a3)) - 8))();
}

uint64_t sub_100201660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t))
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = v40 ^ 0xFD0u;
  v43 = a40(1028);
  v44 = *(_QWORD *)(v41 - 184);
  *(_QWORD *)(v41 - 208) = v42;
  return (*(uint64_t (**)(void))(v44 + 8 * (int)(((v43 != 0) * (v42 + 8133)) ^ v40)))();
}

uint64_t sub_1002016B8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v0 - 6649) | 0x1501)))(19491);
}

uint64_t sub_10020194C@<X0>(int a1@<W0>, uint64_t a2@<X4>, uint64_t a3@<X6>, int a4@<W8>)
{
  char v4;
  unsigned __int8 v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;

  v13 = (v4 ^ v5);
  *(_DWORD *)(a3 + 4 * v5) = v11 ^ (*(_DWORD *)(*(_QWORD *)(a2 + 8 * v10) + 4 * (v13 ^ v9) - 4)
                                    - (((((v13 ^ v7) + (v13 ^ v8) + 1) ^ 0xFFFFFFFE) + (v13 ^ v8)) ^ v13 ^ v8));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v6 == 0) * a1) ^ a4)))();
}

uint64_t sub_1002019B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t))
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v42 = (v40 + 1349225158) & 0xAF943FEF;
  v43 = a40(1028);
  v44 = *(_QWORD *)(v41 - 184);
  *(_QWORD *)(v41 - 208) = v42;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * (int)(((((v43 == 0) ^ (v40 + 110)) & 1) * (v42 + 2360)) ^ v40)) - 4))(v43, v45, a23, v46, v47, a19, *(_QWORD *)(v41 - 224), a7, a9, a10);
}

uint64_t sub_100201A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unsigned int a26,unsigned int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  int v41;
  uint64_t v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  BOOL v47;
  unsigned int v48;
  _BOOL4 v49;
  int v50;

  v43 = (char)(((((((a11 + 91 - (((_BYTE)a11 << ((v41 & 0x7F ^ 0x18) - 56)) & 0xB6)) ^ a41) & 0xFE ^ 0x9C) - 86) ^ 0x9C)
              - 86) ^ 0x5D);
  v44 = -91
      * (((((((a11 + 946436443 - ((a11 << ((v41 & 0x7F ^ 0x18) - 56)) & 0x70D2F2B6)) ^ a41) & 0xFFFFFFFE ^ 0xA622CE9C)
          - 1309387862) ^ 0xA622CE9C)
        - 1309387862) ^ 0x8079625D);
  v45 = (-91
                        * (((((((a11 + 91 - (((_BYTE)a11 << ((v41 & 0x7F ^ 0x18) - 56)) & 0xB6)) ^ a41) & 0xFE ^ 0x9C)
                            - 86) ^ 0x9C)
                          - 86) ^ 0x5D));
  if (v43 >= 0)
    LOBYTE(v46) = ((((((a11 + 91 - (((_BYTE)a11 << ((v41 & 0x7F ^ 0x18) - 56)) & 0xB6)) ^ a41) & 0xFE ^ 0x9C) - 86) ^ 0x9C)
                 - 86) ^ 0x5D;
  else
    v46 = -v43;
  v47 = v43 < 0;
  v48 = v46;
  if (v47)
    v49 = v45 < (v44 + v46);
  else
    v49 = v45 > (v44 - v46);
  v50 = v48 > 1 || v49;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v42 + 8 * (int)((9681 * v50) ^ v41 & 0x8A80DE7F))
                                                                                             - 12))(a1, a2, a1, a27, a26, a6, a12);
}

uint64_t sub_100201B44@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, int a4@<W6>, char a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;

  *(_DWORD *)(a1 + 4 * ((v9 + 37) * a5)) = a2 ^ v6 ^ a3 ^ a4 ^ *(_DWORD *)(v8
                                                                                            + 4
                                                                                            * ((((v9 + 37) * a5) ^ v10) ^ 0xA9u));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((9673 * (v7 + 794 + v9 - 6482 != v5 + 256)) ^ v7)) - 12))();
}

uint64_t sub_100201BAC@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, int a4@<W6>, char a5@<W8>)
{
  int v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;

  v12 = a2 ^ v8 ^ a3 ^ a4;
  v13 = v12 ^ *(_DWORD *)(v9
                        + 4
                        * (((v6 - 5406) | 0x1850) ^ 0x19FA ^ (((v7 + v5 + 38) * a5) ^ v10)));
  *(_DWORD *)(a1 + 4 * ((v7 + v5 + 37) * a5)) = v12 ^ *(_DWORD *)(v9
                                                                                   + 4
                                                                                   * ((((v7 + v5 + 37) * a5) ^ v10) ^ 0xA9u));
  *(_DWORD *)(a1 + 4 * (((v7 + v5 + 38) * a5) & 0xFE)) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((8 * (v5 == 254)) | (16 * (v5 == 254))) ^ v6)) - 12))();
}

uint64_t sub_100201C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  int v29;
  uint64_t v30;
  uint64_t v31;

  *(_DWORD *)(v30 - 256) = a29 + 442152362;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * v29) - 4))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100201D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned __int8 v51;
  unsigned int v52;
  uint64_t v53;
  unsigned __int8 v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  unsigned int v60;
  uint64_t v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  uint64_t v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  char v121;
  unsigned int v122;
  unsigned int v123;
  unsigned __int8 v124;
  __int16 v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unint64_t v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  BOOL v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  int v255;
  int v256;
  unsigned int v257;
  int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  __int16 v265;
  int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  int v310;
  int v311;
  unint64_t v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  unsigned int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  uint64_t v426;
  uint64_t v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  int v434;
  int v435;
  uint64_t v436;
  int v437;
  unsigned int v438;
  uint64_t v439;
  unsigned int v440;
  uint64_t v441;
  unsigned int v442;
  char *v443;
  unsigned int v444;
  unsigned int v445;
  uint64_t v446;
  char *v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  int v456;
  unsigned int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  int v462;
  unsigned int v463;
  int v464;
  int v465;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  unsigned int v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;

  *(_DWORD *)(v44 - 228) = v38;
  v45 = (v38 + 2141939122) & 0x805495FD;
  *(_QWORD *)(v44 - 208) = v45;
  v46 = (((_DWORD)v45 - 895333293) ^ v37 & 0xFFFFFFFD)
      + (v37 & 0x6A46C725 ^ 0x20448503)
      - ((((_DWORD)v45 - 895333293) ^ v37 & 0xFFFFFFFD) & 0x6A46C725);
  v478 = ((v37 & 0xB5F682E0 ^ 0xB5B482C1) + (v37 & 0x4A097D10 ^ 0x4A016915) - 2) ^ 0x4A687C8BLL;
  v477 = v46 ^ 0x1539324C;
  v47 = ((2 * (v37 & 0xFFFFFFF5 ^ 0x9B963E5)) & 0xD6C027CA) - (v37 & 0xFFFFFFF5 ^ 0x9B963E5) - 1801458670;
  v48 = v37;
  v49 = (v47 & 0xC2D7E0D3 ^ 0x425300C3) + (v47 & 0x3D281F2C ^ 0x15080701);
  v50 = *(unsigned __int8 *)(a33
                           + (*(_BYTE *)(v39 + v478) ^ (-77
                                                                       * (((v37 & 0xE0 ^ 0xC1) + (v37 & 0x10 ^ 0x15) - 2) ^ 0x8B)) ^ 0x64u));
  v479 = (v49 - 1) ^ 0x7FA01F6BLL;
  v51 = (-77 * ((v49 - 1) ^ 0x6B)) ^ *(_BYTE *)(v39 + v479);
  v52 = ((v37 & 0x60E07B01 ^ 0x20A04903) + (v37 & 0x9F1F84F8 ^ 0x921900F9) - 1) ^ 0x68A33313;
  v53 = ((2 * v52) & 0x2BCBAF54) - v52 + 1780099157;
  v54 = (-77 * (v53 ^ 0xEA)) ^ *(_BYTE *)(v39 + (v53 ^ 0x5DDC5EA));
  v472 = v37 ^ 0xB5DD9755;
  v476 = v37 & 0xFFFFFFF2;
  v55 = (-1325721177 - (v37 & 0xFFFFFFF2 ^ 0xA8363942 | 0xB0FB19A7) + (v37 & 0xFFFFFFF2 ^ 0xA8363942 | 0x4F04E658)) ^ 0x2D00F6DD;
  LODWORD(v53) = *(unsigned __int8 *)(a35
                                    + (*(_BYTE *)(v39 + v472) ^ (((-77
                                                                                  * (v48 ^ ((v48 ^ 0x1D) - 112) ^ ((v48 ^ 0xA5) + 56) ^ 0x6D)) ^ 6)
                                                                                + 40)));
  v56 = (v55 | 0xC7B0F2DD) - (v55 | 0x384F0D22) + 944704802;
  HIDWORD(a31) = v48 & 0xFFFFFFF1;
  v470 = ((v48 & 0xFFFFFFFC ^ 0xCA230808 | 0x8961F641) - (v48 & 0xFFFFFFFC ^ 0xCA230808 | 0x769E09BE) + 1990068670) ^ 0xF69F691ELL;
  v57 = ((v48 & 0xFFFFFFFE ^ 0x869751AA)
       + (v48 & 0xBD4B36D8 ^ 0x39482650)
       - ((v48 & 0xFFFFFFFE ^ 0x869751AA) & 0xBD4B36D8)) ^ 0x75EF07D8;
  v58 = ((2 * v57) | 0x7D1117C0) - v57 - 1049136096;
  v475 = v58 ^ 0xC5667C1FLL;
  LODWORD(v59) = (((179
                  * (((v58 ^ 0x7CC52D82) - 868810012) ^ ((v58 ^ 0x3D4DB19F) - 1916821761) ^ ((v58 ^ 0x84EEE002) + 100))
                  + 51) >> 1) & 0x79 | 0x80000000) ^ __ROR4__(*(unsigned __int8 *)(v39 + (v58 ^ 0xC5667C1FLL)), 1);
  HIDWORD(v59) = v59;
  v473 = ((v48 & 0xFFFFFFFA ^ 0xF664A802 | 0xCBA3AA7E) - (v48 & 0xFFFFFFFA ^ 0xF664A802 | 0x345C5581) + 878466433) ^ 0x881A9529;
  HIDWORD(v471) = v48 & 0xFFFFFFF8;
  v60 = (v48 & 0xFFFFFFF8 ^ 0x3D1BF7B0)
      + (v48 & 0x7CACB288 ^ 0x40A40008)
      - ((v48 & 0xFFFFFFF8 ^ 0x3D1BF7B0) & 0x7CACB288);
  v61 = (v60 & 0xD9743748 ^ 0xD1600241 | v60 & 0x268BC8B0) - 1;
  v469 = v48 & 0xFFFFFFF3 ^ 0xB5DD975D;
  v62 = *(unsigned __int8 *)(a33
                           + ((-77 * (((v48 & 0xFC ^ 8 | 0x41) - (v48 & 0xFC ^ 8 | 0xBE) - 66) ^ 0x1E)) ^ 0x12u ^ *(_BYTE *)(v39 + v470))) | (((*(_BYTE *)(a34 + (((-77 * (v46 ^ 0x4C)) ^ *(_BYTE *)(v39 + (v46 ^ 0x1539324C))) ^ 0x22)) + ((-77 * (v46 ^ 0x4C)) ^ *(_BYTE *)(v39 + (v46 ^ 0x1539324C)) ^ 0x35) + 111) ^ 0x4E) << 8) | ((((_DWORD)v53 + 32) ^ 0x34 ^ (4 * (_DWORD)v53) & 0x6C) << 24) | (((75 * *(_BYTE *)(a32 + ((v59 >> 31) ^ 0x87))) ^ 0x1C) << 16);
  LODWORD(v46) = *(unsigned __int8 *)(a35
                                    + (((-77 * (v48 & 0xF3 ^ 0x5D)) ^ *(_BYTE *)(v39 + v469)) ^ 0x8Fu));
  HIDWORD(v468) = v48 & 0xFFFFFFF4;
  v63 = (((2 * (v48 & 0xFFFFFFF4 ^ 0x31E3A914)) & 0xA6A3ED20) - (v48 & 0xFFFFFFF4 ^ 0x31E3A914) + 749603183) ^ 0x36EFC9FF;
  v64 = v50 & 0xFF0000FF | (((75
                                             * *(_BYTE *)(a32
                                                        + ((-77 * (v56 ^ 0x47)) ^ 0xE2u ^ *(_BYTE *)(v39 + (v56 ^ 0xB85F4C47))))) ^ 0x65) << 16) | ((((*(_BYTE *)(v39 + (((v48 & 0xFFFFFFF1 ^ 0x40A26A31 | 0x9E992EDD) - (v48 & 0xFFFFFFF1 ^ 0x40A26A31 | 0x6166D122) + 1634128162) ^ 0x6BE6D3B3)) ^ (-77 * (((v48 & 0xF1 ^ 0x31 | 0xDD) - (v48 & 0xF1 ^ 0x31 | 0x22) + 34) ^ 0xB3)) ^ 0xAE) + *(_BYTE *)(a34 + ((*(_BYTE *)(v39 + (((v48 & 0xFFFFFFF1 ^ 0x40A26A31 | 0x9E992EDD) - (v48 & 0xFFFFFFF1 ^ 0x40A26A31 | 0x6166D122) + 1634128162) ^ 0x6BE6D3B3)) ^ (-77 * (((v48 & 0xF1 ^ 0x31 | 0xDD) - (v48 & 0xF1 ^ 0x31 | 0x22) + 34) ^ 0xB3))) ^ 0xB9)) + 111) ^ 0x14) << 8) | ((((_DWORD)v46 + 32) ^ 0xB5 ^ (4 * (_DWORD)v46) & 0x6C) << 24);
  v65 = *(unsigned __int8 *)(a33 + ((-77 * (v61 ^ 0x2F)) ^ 0x82u ^ *(_BYTE *)(v39 + (v61 ^ 0x250AD02F)))) | (((*(_BYTE *)(a34 + (v54 ^ 0x92)) + (v54 ^ 0x85) + 111) ^ 0x66) << 8);
  LODWORD(v471) = v48 & 0xFFFFFFF7;
  LODWORD(v58) = (410873561 - (v48 & 0xFFFFFFF7 ^ 0xE82B0C85 | 0x187D6ED9) + (v48 & 0xFFFFFFF7 ^ 0xE82B0C85 | 0xE7829126)) ^ 0x4583952B;
  v474 = (((2 * (v48 & 0xFFFFFFFB ^ 0xF6F40FDA)) & 0xBFBF61E4) - (v48 & 0xFFFFFFFB ^ 0xF6F40FDA) - 1608495351) ^ 0xE309D786;
  v66 = ((2 * (_DWORD)v58) | 0x85A890C4) - v58 - 1121208418;
  v67 = (*(unsigned __int8 *)(a33
                            + ((-77
                              * (((((((v63 - ((2 * v63) & 0x28) + 31) & 0xC2 ^ 0xB1) - 1) ^ 0x50)
                                                  - ((2 * ((((v63 - ((2 * v63) & 0x28) + 31) & 0xC2 ^ 0xB1) - 1) ^ 0x50)) & 0xC4)
                                                  - 17) ^ 0xCF)
                               + ((-74 - (v48 & 0xC0 ^ 1 | 0xB6) + (v48 & 0xC0 ^ 1 | 0x49)) ^ 0xCE ^ (v63 - ((2 * v63) & 0x28) + 31)))) & 0xFD ^ *(_BYTE *)(v39 + ((((((v63 - ((2 * v63) & 0xFB61A28) - 2015687393) & 0xB574CDC2 ^ 0xB7F362B1) - 1) ^ 0xA3E7F350) - ((2 * ((((v63 - ((2 * v63) & 0xFB61A28) - 2015687393) & 0xB574CDC2 ^ 0xB7F362B1) - 1) ^ 0xA3E7F350)) & 0x60402BC4) + 975779311) ^ 0x3F1965CF) + ((-1535666250 - (v48 & 0xB574CDC0 ^ 0x11604801 | 0xA47797B6) + (v48 & 0xB574CDC0 ^ 0x11604801 | 0x5B886849)) ^ 0xE61856CE ^ (v63 - ((2 * v63) & 0xFB61A28) - 2015687393))) ^ 0xB3u)) ^ 0x95) & 0xFFFF00FF | (((*(_BYTE *)(a34 + (v51 ^ 0x5DLL)) + (v51 ^ 0x4A) + 111) ^ 0xD8) << 8);
  v68 = *(unsigned __int8 *)(a35
                           + (((-77
                                               * ((((2 * (v48 & 0xFB ^ 0xDA)) & 0xE4) - (v48 & 0xFB ^ 0xDA) + 9) ^ 0x86)) ^ *(_BYTE *)(v39 + v474)) ^ 0x7Eu));
  HIDWORD(a24) = v48 & 0xFFFFFFF6;
  LODWORD(v468) = v48;
  LODWORD(v53) = *(unsigned __int8 *)(a35
                                    + (((750780416
                                       * (((v66 ^ 0xA956D5D4) - 1472885140) ^ ((v66 ^ 0x818C5F0D)
                                                                                           - 2131819341) ^ ((v66 ^ 0x95F95D6E) + 345638610))
                                       + 759169024) >> 22) & 0xF8 ^ *(unsigned __int8 *)(v39 + (v66 ^ 0xBD23D7B7)) ^ 0x16));
  LOBYTE(v66) = *(_BYTE *)(a32
                         + (((-77
                                             * (((((v48 & 0xF6 ^ 0xA0)
                                                 + (v48 & 0x44 ^ 0x4D)
                                                 - ((v48 & 0xF6 ^ 0xA0) & 0x44)) ^ 0x73)
                                               + 63) ^ ((((v48 & 0xF6 ^ 0xA0)
                                                        + (v48 & 0x44 ^ 0x4D)
                                                        - ((v48 & 0xF6 ^ 0xA0) & 0x44)) ^ 0xF0)
                                                      - 66) ^ ((((v48 & 0xF6 ^ 0xA0)
                                                               + (v48 & 0x44 ^ 0x4D)
                                                               - ((v48 & 0xF6 ^ 0xA0) & 0x44)) ^ 0x33)
                                                             + 127))
                                             + 102) ^ *(_BYTE *)(v39
                                                               + (((v48 & 0xFFFFFFF6 ^ 0xCA2228A0)
                                                                 + (v48 & 0xBC622744 ^ 0x3440074D)
                                                                 - ((v48 & 0xFFFFFFF6 ^ 0xCA2228A0) & 0xBC622744)) ^ 0xC39D98B0))) ^ 0xD2u));
  v69 = v67 | ((((_DWORD)v53 + 32) ^ 0xDE ^ (4 * (_DWORD)v53) & 0x6C) << 24);
  LOBYTE(v53) = 75 * v66 - ((22 * v66) & 0x6E) + 55;
  v70 = v43 ^ HIDWORD(a28) ^ (v62 + 946436443 - ((2 * v62) & 0x70D2F2B6));
  LODWORD(v66) = v70 - 491073527 - ((2 * v70) & 0xC575A012);
  v71 = HIDWORD(a28) ^ HIDWORD(a37) ^ v42 ^ (v65 & 0xFF00FFFF | (((75
                                                                                  * *(_BYTE *)(a32
                                                                                             + ((-77 * (((v48 & 0xFA ^ 2 | 0x7E) - (v48 & 0xFA ^ 2 | 0x81) - 127) ^ 0x29)) ^ 0x84u ^ *(_BYTE *)(v39 + v473)))) ^ 0xC2) << 16) | (((v68 + 32) ^ 0x45 ^ (4 * v68) & 0x6C) << 24));
  v72 = v71 ^ 0x95;
  v73 = ((v71 ^ 0x95) - (((v71 ^ 0x95) - 491073527 - 2 * ((v71 ^ 0x95) & 0x62BAD00B ^ v71 & 2)) ^ HIDWORD(a22))) ^ HIDWORD(a15);
  v74 = HIDWORD(a28) ^ HIDWORD(a37) ^ v41 ^ (v69 & 0xFF00FFFF | (v53 << 16));
  v75 = (((v73 - 491073527 - ((2 * v73) & 0xC575A012)) ^ HIDWORD(a22)) + v72) ^ 0x5FD83FDA;
  v76 = HIDWORD(a37) ^ a37 ^ 0x4840F90 ^ v66;
  v77 = ((HIDWORD(a28) ^ HIDWORD(a37) ^ v40 ^ v64)
       - 491073527
       - ((2 * (HIDWORD(a28) ^ HIDWORD(a37) ^ v40 ^ v64)) & 0xC575A012)) ^ HIDWORD(a22);
  LODWORD(v61) = v77 ^ 0xFD3BF8F5;
  v78 = a37 ^ (v74 - 491073527 - ((2 * v74) & 0xC575A012)) ^ 0xE659B8A5;
  v79 = *(_DWORD *)(a18 + 4 * (BYTE1(v77) ^ 0xF8u));
  HIDWORD(v59) = *(_DWORD *)(a23 + 4 * HIBYTE(v75)) ^ *(_DWORD *)(a16 + 4 * BYTE2(v78));
  LODWORD(v59) = HIDWORD(v59);
  v80 = *(_DWORD *)(a23 + 4 * HIBYTE(v76)) ^ *(_DWORD *)(a18 + 4 * BYTE1(v78)) ^ *(_DWORD *)(a19
                                                                                               + 4
                                                                                               * ((((BYTE4(a28) ^ BYTE4(a37) ^ v40 ^ v64) + 9 - ((2 * (BYTE4(a28) ^ BYTE4(a37) ^ v40 ^ v64)) & 0x12)) ^ BYTE4(a22)) ^ 0xF5u)) ^ *(_DWORD *)(a16 + 4 * BYTE2(v75));
  v81 = *(_DWORD *)(a19 + 4 * ((BYTE4(a37) ^ a37) ^ 0x90u ^ v66)) ^ __ROR4__((v59 >> 4) ^ __ROR4__(v79, 4) ^ 0xD327AC5C, 28);
  v82 = *(_DWORD *)(a23 + 4 * HIBYTE(v78)) ^ *(_DWORD *)(a16 + 4 * BYTE2(v61)) ^ *(_DWORD *)(a18 + 4 * BYTE1(v76));
  v83 = *(_DWORD *)(a19 + 4 * v75);
  v84 = (((v82 ^ 0xF9EBC22E) + 101989842) ^ ((v82 ^ 0x67786BDD) - 1735945181) ^ ((v82 ^ 0xB6B79F62) + 1229480094))
      - (((v82 ^ v83 ^ 0x775DD2F0) - 2002637552) ^ ((v82 ^ v83 ^ 0x216D1E65) - 560799333) ^ ((v82 ^ v83 ^ 0xC288C368)
                                                                                           + 1031224472))
      - 44262585;
  v85 = (v84 ^ 0xD4AFE248) & (2 * (v84 & 0x960F8B4D)) ^ v84 & 0x960F8B4D;
  LODWORD(v53) = ((2 * (v84 ^ 0xF8AFE0C2)) ^ 0xDD40D71E) & (v84 ^ 0xF8AFE0C2) ^ (2 * (v84 ^ 0xF8AFE0C2)) & 0x6EA06B8E;
  v86 = v53 ^ 0x22A02881;
  LODWORD(v53) = (v53 ^ 0x4800430C) & (4 * v85) ^ v85;
  v87 = ((4 * v86) ^ 0xBA81AE3C) & v86 ^ (4 * v86) & 0x6EA06B8C;
  LODWORD(v53) = (v87 ^ 0x2A802A00) & (16 * v53) ^ v53;
  v88 = ((16 * (v87 ^ 0x44204183)) ^ 0xEA06B8F0) & (v87 ^ 0x44204183) ^ (16 * (v87 ^ 0x44204183)) & 0x6EA06B80;
  v89 = v88 ^ 0x4A0430F;
  v90 = v53 ^ 0x6EA06B8F ^ (v88 ^ 0x6A002800) & ((_DWORD)v53 << 8);
  v91 = ((v90 << 16) ^ 0x6B8F0000) & ((v89 << 8) & 0x6EA00000 ^ 0x4E800000 ^ ((v89 << 8) ^ 0xA06B0000) & v89);
  v92 = -1363514875
      - (((v83 ^ 0xE39004F6) + 477100810) ^ ((v83 ^ 0xA548193E) + 1522001602) ^ ((v83 ^ 0xFA4424A4) + 96197468));
  v93 = (v92 ^ 0x12A8186E) & (2 * (v92 & 0x94A95C8F)) ^ v92 & 0x94A95C8F;
  v94 = ((2 * (v92 ^ 0x1AE8A17A)) ^ 0x1C83FBEA) & (v92 ^ 0x1AE8A17A) ^ (2 * (v92 ^ 0x1AE8A17A)) & 0x8E41FDF4;
  v95 = (v94 ^ 0x401F060) & (4 * v93) ^ v93;
  v96 = ((4 * (v94 ^ 0x82400415)) ^ 0x3907F7D4) & (v94 ^ 0x82400415) ^ (4 * (v94 ^ 0x82400415)) & 0x8E41FDF4;
  v97 = (v96 ^ 0x801F5D0) & (16 * v95) ^ v95;
  v98 = ((16 * (v96 ^ 0x86400821)) ^ 0xE41FDF50) & (v96 ^ 0x86400821) ^ (16 * (v96 ^ 0x86400821)) & 0x8E41FDF0;
  v99 = v97 ^ 0x8E41FDF5 ^ (v98 ^ 0x8401DD00) & (v97 << 8);
  v100 = *(_DWORD *)(a16 + 4 * BYTE2(v76)) ^ *(_DWORD *)(a23 + 4 * BYTE3(v61));
  v101 = (((v80 ^ 0xEF833472) + 70291779) ^ ((v80 ^ 0xFAC7076E) + 292856415) ^ ((v80 ^ 0x25550B3D) - 823742962))
       - 1592651138;
  v102 = (v101 ^ 0xD047F930) & (2 * (v101 & 0x9097FD3A)) ^ v101 & 0x9097FD3A;
  LODWORD(v56) = ((2 * (v101 ^ 0xF0643360)) ^ 0xC1E79CB4) & (v101 ^ 0xF0643360) ^ (2 * (v101 ^ 0xF0643360)) & 0x60F3CE5A;
  v103 = (v56 ^ 0x40E38C10) & (4 * v102) ^ v102;
  LODWORD(v56) = ((4 * (v56 ^ 0x2010424A)) ^ 0x83CF3968) & (v56 ^ 0x2010424A) ^ (4 * (v56 ^ 0x2010424A)) & 0x60F3CE58;
  v104 = (v56 ^ 0xC30840) & (16 * v103) ^ v103;
  LODWORD(v56) = ((16 * (v56 ^ 0x6030C612)) ^ 0xF3CE5A0) & (v56 ^ 0x6030C612) ^ (16 * (v56 ^ 0x6030C612)) & 0x60F3CE50;
  v105 = v104 ^ 0x60F3CE5A ^ (v56 ^ 0x30C400) & (v104 << 8);
  LODWORD(v56) = v101 ^ (2
                       * ((v105 << 16) & 0x60F30000 ^ v105 ^ ((v105 << 16) ^ 0x4E5A0000) & (((v56 ^ 0x60C30A5A) << 8) & 0x60F30000 ^ 0x310000 ^ (((v56 ^ 0x60C30A5A) << 8) ^ 0xF3CE0000) & (v56 ^ 0x60C30A5A))));
  HIDWORD(v467) = *(_DWORD *)(v44 - 256) < 0x5C62C0FDu;
  v106 = v90 ^ v99 ^ ((v99 << 16) ^ 0x7DF50000) & (((v98 ^ 0xA4020A5) << 8) & 0x8E410000 ^ (((v98 ^ 0xA4020A5) << 8) ^ 0x41FD0000) & (v98 ^ 0xA4020A5) ^ 0xE000000) ^ ((v99 << 16) & 0xE410000 | 0xC1D1) ^ (v90 << 16) & 0x6EA00000;
  v107 = *(_DWORD *)(a19 + 4 * v78);
  v108 = v106 ^ v91;
  v109 = v56 ^ 0xF5890360;
  if ((((v80 ^ 0xE5F8F3EE) + 239818464) ^ ((v80 ^ 0xAAB2EFA) - 518485044) ^ ((v80 ^ 0xDF42E534) + 888225798))
     + 610099950 < 0xF2B35336)
    v109 = v80 ^ 0x144C5ACF;
  v110 = (((v82 ^ 0x5372B29) - 87501609) ^ ((v82 ^ 0xB78E9F7B) + 1215389829) ^ ((v82 ^ 0x9A9D82C3) + 1700953405))
       - 170211961
       + (((v92 ^ v83 ^ v84 ^ (2 * v108) ^ 0x9A0448A3) + 1951258049) ^ ((v92 ^ v83 ^ v84 ^ (2 * v108) ^ 0x1EDFB925)
                                                                      - 258595769) ^ ((v92 ^ v83 ^ v84 ^ (2 * v108) ^ 0x36A1B07E)
                                                                                    - 655872738));
  v111 = (v110 ^ 0x9691014E) & (2 * (v110 & 0xD615946E)) ^ v110 & 0xD615946E;
  v112 = ((2 * (v110 ^ 0x929B2142)) ^ 0x891D6A58) & (v110 ^ 0x929B2142) ^ (2 * (v110 ^ 0x929B2142)) & 0x448EB52C;
  v113 = v112 ^ 0x44829524;
  v114 = (v112 ^ 0xC2008) & (4 * v111) ^ v111;
  v115 = ((4 * v113) ^ 0x123AD4B0) & v113 ^ (4 * v113) & 0x448EB52C;
  v116 = (v115 ^ 0xA9420) & (16 * v114) ^ v114;
  v117 = ((16 * (v115 ^ 0x4484210C)) ^ 0x48EB52C0) & (v115 ^ 0x4484210C) ^ (16 * (v115 ^ 0x4484210C)) & 0x448EB520;
  v118 = v116 ^ 0x448EB52C ^ (v117 ^ 0x408A1000) & (v116 << 8);
  v119 = *(_DWORD *)(a18 + 4 * BYTE1(v75));
  v120 = (v118 << 16) & 0x448E0000 ^ v118 ^ ((v118 << 16) ^ 0x352C0000) & (((v117 ^ 0x404A52C) << 8) & 0x448E0000 ^ 0x400A0000 ^ (((v117 ^ 0x404A52C) << 8) ^ 0xEB50000) & (v117 ^ 0x404A52C));
  if ((((v80 ^ 0xB5D2BFB0) + 1583422081) ^ ((v80 ^ 0xEE5A41F0) + 99214530) ^ ((v80 ^ 0x6B99C660) - 2144705711))
     + 610099950 >= 0xF2B35336)
    v121 = -40;
  else
    v121 = -18;
  v122 = v110 ^ (2 * v120);
  v123 = v100 ^ v107 ^ v119;
  if (v109 == 610099950)
    v124 = v121;
  else
    v124 = v80 ^ 0xCF;
  v125 = ((v100 ^ v107 ^ v119) ^ 0x8A)
       - ((2 * ((v100 ^ v107 ^ v119) ^ 0x8A)) & 0xFFCF)
       + 30695;
  v126 = *(_DWORD *)(a16
                   + 4
                   * ((((2 * (BYTE2(v81) ^ 0x1B302070)) & 0x1FFFFFF0) - (BYTE2(v81) ^ 0x1B302070) + 1413781511) ^ 0x4F74B807u)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v80) ^ 0x30)) ^ *(_DWORD *)(a19 + 4 * (((v125 & 0x1820 ^ 0x54695801) + (v125 & 0x7DF) - 1) ^ 0x54694FA8u)) ^ *(_DWORD *)(a18 + 4 * (BYTE1(v122) ^ 0xB3u));
  v127 = (((2 * (BYTE1(v123) ^ 0x46)) & 0x17C) - (BYTE1(v123) ^ 0x46) - 757126847) ^ 0x58DB2961;
  v128 = (BYTE2(v123) ^ 0xFFFFFF2B) + 505726765 + ((2 * BYTE2(v123)) | 0xC3B671A8);
  v129 = *(_DWORD *)(a16 + 4 * (BYTE2(v122) ^ 0xEAu)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v81) ^ 0x2A)) ^ *(_DWORD *)(a19 + 4 * ((-1415812206 - (v124 ^ 0xCD | 0xAB9C6B92) + (v124 ^ 0xCD | 0x5463946D)) ^ 0x5463944E)) ^ *(_DWORD *)(a18 + 4 * ((((2 * v127) | 0x12B80B9C) - v127 - 157025742) ^ 0x835805DA));
  v130 = ((v81 & 0x94 ^ 0xB18B5681) + (v81 & 0x6B) - 1) ^ 0x110E8457;
  v131 = ((2 * (BYTE1(v80) ^ 0xB2)) | 0x1E439E1C) - (BYTE1(v80) ^ 0xB2) + 1893609714;
  v132 = *(_DWORD *)(a18 + 4 * ((((v81 >> 8) & 0xFC ^ 0xB06E629D) - ((v81 >> 8) & 3) + 8454146) ^ 0xB0EF62F8));
  v133 = ((BYTE2(v80) ^ 0xB0) - ((2 * (BYTE2(v80) ^ 0xB0)) & 0xEEEEEEEE) + 1082590071) ^ 0xB4ABB391;
  v134 = *(_DWORD *)(a16 + 4 * (((v128 & 0x40101DDC ^ 0x10000509) + (v128 & 0x1C00223) - 1) ^ 0x51D01DE1)) ^ *(_DWORD *)(a19 + 4 * ((43440757 - (v130 | 0x296DA75) + (v130 | 0xFD69258A)) ^ 0x5DECF78E)) ^ *(_DWORD *)(a18 + 4 * (((v131 & 0x81018AC9 ^ 0x404F0049) + (v131 ^ 0xA3B0AF86) - ((v131 ^ 0xA3B0AF86) & 0x614F8AC9)) ^ 0xCDDEEACB)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v122) ^ 0xA2));
  v135 = *(_DWORD *)(a16 + 4 * ((((2 * v133) & 0xA001D728) - v133 - 1392700309) ^ 0x58D1A42C)) ^ v132 ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v123) ^ 0xED)) ^ *(_DWORD *)(a19 + 4 * ((((2 * (v122 ^ 0x3002606C)) | 0xF005E292) - (v122 ^ 0x3002606C) - 2013458761) ^ 0x4800915F));
  v136 = ((BYTE1(v135) ^ 0xF6) + ((v135 >> 8) & 0xFA ^ 0x17684B08) - ((BYTE1(v135) ^ 0xF6) & 0xFA)) ^ 0x7784FFE;
  v137 = *(_DWORD *)(a23 + 4 * (HIBYTE(v126) ^ 5));
  v138 = ((BYTE1(v134) ^ 0xC9) + ((v134 >> 8) & 0x85 ^ 0x2C6AC104) - ((BYTE1(v134) ^ 0xC9) & 0x85)) ^ 0x25EAC0CD;
  v139 = ((2 * (BYTE2(v129) ^ 0x7290AB09)) & 0xE1214488) - (BYTE2(v129) ^ 0x7290AB09) + 52846011;
  v140 = *(_DWORD *)(a16
                   + 4
                   * (((v139 & 0xED61C128 ^ 0x4C210108) + (v139 ^ 0xA3D2D660) - ((v139 ^ 0xA3D2D660) & 0xED65C128)) ^ 0x3F01E1AC));
  v141 = (((v137 & 0x80000000) - 1426617499) ^ ((v137 & 0x80000000) - 1389659253) ^ ((v137 & 0x80000000 ^ 0x83E67B57)
                                                                                   + 53348406))
       + 1152068666
       + (((v140 ^ 0x875359D3) + 2024580653) ^ ((v140 ^ 0xD9FB559D) + 637839971) ^ ((v140 ^ 0x5208E97B) - 1376315771));
  v142 = (v141 ^ 0x872C31D0) & (2 * (v141 & 0xC72D4598)) ^ v141 & 0xC72D4598;
  v143 = ((2 * (v141 ^ 0x8D243AF0)) ^ 0x9412FED0) & (v141 ^ 0x8D243AF0) ^ (2 * (v141 ^ 0x8D243AF0)) & 0x4A097F68;
  v144 = v143 ^ 0x4A090128;
  v145 = (v143 ^ 0x3E40) & (4 * v142) ^ v142;
  v146 = ((4 * v144) ^ 0x2825FDA0) & v144 ^ (4 * v144) & 0x4A097F68;
  v147 = (v146 ^ 0x8017D20) & (16 * v145) ^ v145;
  v148 = ((16 * (v146 ^ 0x42080248)) ^ 0xA097F680) & (v146 ^ 0x42080248) ^ (16 * (v146 ^ 0x42080248)) & 0x4A097F60;
  v149 = v147 ^ 0x4A097F68 ^ (v148 ^ 0x17600) & (v147 << 8);
  v150 = (v149 << 16) & 0x4A090000 ^ v149 ^ ((v149 << 16) ^ 0x7F680000) & (((v148 ^ 0x4A080968) << 8) & 0x4A090000 ^ 0x42000000 ^ (((v148 ^ 0x4A080968) << 8) ^ 0x97F0000) & (v148 ^ 0x4A080968));
  v151 = *(_DWORD *)(a16 + 4 * (BYTE2(v134) ^ 0xACu)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v129) ^ 0x89)) ^ *(_DWORD *)(a19 + 4 * (v126 ^ 0x79u)) ^ *(_DWORD *)(a18 + 4 * ((((2 * v136) | 0x431C37B6) - v136 - 562961371) ^ 0x319E1FD3u));
  v152 = (((2 * (v137 & 0x7FFFFFFF ^ 0x3B210DA4)) | 0xAE4E837C) - (v137 & 0x7FFFFFFF ^ 0x3B210DA4) + 685293122) ^ 0x974647FC;
  v153 = ((v126 >> 8) & 0x7B ^ 0x673C52D5) - ((v126 >> 8) & 0x84);
  v154 = *(_DWORD *)(a23 + 4 * (HIBYTE(v134) ^ 0x7C));
  v155 = *(_DWORD *)(a19
                   + 4
                   * ((((2 * (v135 ^ 0x18)) & 0x96) - (v135 ^ 0x18) + 6068) ^ 0x1742u)) ^ *(_DWORD *)(a18 + 4 * ((231181168 - (v138 | 0xDC78B70) + (v138 | 0xF238748F)) ^ 0xFBB87589)) ^ (-1925820714 - (v152 | 0x8D364ED6) + (v152 | 0x72C9B129)) ^ v141;
  v156 = (((v129 >> 8) & 0xD3 ^ 0x502864FD) - ((v129 >> 8) & 0x2C)) ^ 0x5B0E2025;
  v157 = *(_DWORD *)(a19
                   + 4
                   * (((v134 ^ 0x44) - 2 * ((v134 ^ 0x44) & 0x3F) + 4927) ^ 0x13ADu));
  v158 = (((2 * (BYTE2(v126) ^ 0x3D)) & 0x1EA) - (BYTE2(v126) ^ 0x3D) - 491772406) ^ 0x8A794A4B;
  v159 = *(_DWORD *)(a16 + 4 * ((((2 * v158) & 0x5092894E) - v158 - 1064031400) ^ 0xA85D47C0));
  v160 = v155 ^ (2 * v150);
  v161 = *(_DWORD *)(a18 + 4 * ((v156 - ((2 * v156) & 0x4000186) - 220656957) ^ 0xF9FF4ED1)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v135) ^ 5)) ^ v157 ^ v159;
  v162 = *(_DWORD *)(a18 + 4 * (((v153 & 0xC2 ^ 0x4A3D0041) + (v153 & 0x3D) - 1) ^ 0x4A3D00F2u)) ^ v154 ^ *(_DWORD *)(a19 + 4 * (((v129 & 0x65 ^ 0xC1BCE341) + (v129 & 0x9A ^ 0x11) - 1) ^ 0xC1BCE3CB)) ^ *(_DWORD *)(a16 + 4 * (((BYTE2(v135) ^ 0xB7) + (HIWORD(v135) & 0x60 ^ 0x540) - ((BYTE2(v135) ^ 0xB7) & 0x60)) ^ 0x52A));
  v163 = (((2 * (BYTE1(v161) ^ 0xC7)) & 0x8A) - (BYTE1(v161) ^ 0xC7) + 1789622202) ^ 0x42A3F7D2;
  LOWORD(v150) = ((2 * (BYTE1(v160) ^ 0x85)) & 0x15A) - (BYTE1(v160) ^ 0x85) - 22958;
  v164 = (-1922935124 - (BYTE2(v161) ^ 0x22 | 0x8D6256AC) + (BYTE2(v161) ^ 0x22 | 0x729DA953)) ^ 0x669FEE42;
  v165 = *(_DWORD *)(a18 + 4 * ((((2 * v163) | 0x83D397AA) - v163 + 1041642539) ^ 0xE9E14B50));
  v166 = *(_DWORD *)(a18 + 4 * (BYTE1(v162) ^ 0xDFu)) ^ *(_DWORD *)(a19
                                                                    + 4
                                                                    * ((((2 * (v161 ^ 0x86310416)) & 0x82001B8)
                                                                      - (v161 ^ 0x86310416)
                                                                      + 871197731) ^ 0xB5DC6821)) ^ *(_DWORD *)(a16 + 4 * (BYTE2(v151) ^ 0xA6u)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v160) ^ 0x60));
  v167 = (v165 & 0x151D02A6 ^ 0xE5444A37) + (v165 & 0x80A048 ^ 0x2041);
  v168 = *(_DWORD *)(a19
                   + 4 * (((v151 ^ 0xB5) - 2 * ((v151 ^ 0xB5) & 1) + 513) ^ 0x298u));
  v169 = *(_DWORD *)(a16 + 4 * ((((v162 >> 15) & 0x60) - 479279498 + (BYTE2(v162) ^ 0xFFFFFFF4) + 90) ^ 0xE36EC676)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v151) ^ 0x3F)) ^ ((v165 & 0xEA625D11 ^ 0xDE4258B4) - ((2 * (v165 & 0xEA625D11 ^ 0xDE4258B4)) & 0x43240) + 26196834) ^ (((v167 - 2) & 0x18501D0 ^ 0x23401841 | (v167 - 2) & 0x1418A22E) - 1) ^ *(_DWORD *)(a19 + 4 * ((((2 * (v160 ^ 0x13822539)) & 0x3000038) - (v160 ^ 0x13822539) - 1642660381) ^ 0x8D94D823));
  v170 = *(_DWORD *)(a18 + 4 * (BYTE1(v151) ^ 0x57u));
  v171 = v169 ^ 0x1432022B;
  v172 = *(_DWORD *)(a16 + 4 * ((-1910900850 - (v164 | 0x8E19F78E) + (v164 | 0x71E60871)) ^ 0x65E44FB5)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v162) ^ 0xD7)) ^ v168 ^ *(_DWORD *)(a18 + 4 * (((v150 & 0x1ED ^ 0x58882D4D) + (v150 & 0x212 ^ 0x2500203) - 1) ^ 0x5AD82DEEu));
  v173 = *(_DWORD *)(a16
                   + 4
                   * (((BYTE2(v160) ^ 0x34A20E8A) - ((2 * (BYTE2(v160) ^ 0x34A20E8A)) & 0x484015D8) + 662297580) ^ 0x13DBD528u)) ^ *(_DWORD *)(a19 + 4 * (v162 ^ 7u)) ^ v170 ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v161) ^ 0x46));
  LOWORD(v160) = ((2 * (BYTE2(v172) ^ 0x57)) & 0x38) - (BYTE2(v172) ^ 0x57) - 21021;
  v174 = *(_DWORD *)(a16 + 4 * (((v160 & 0x399 ^ 0x88769210) + (v160 & 0x466 ^ 0x10000463) - 1) ^ 0x98769399)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v169) ^ 3));
  v175 = ((((v174 & 0x400000 ^ 0x20D01003) - 578481972) ^ 0xB5E26FA7) - 1138482325) ^ ((((v174 & 0x400000 ^ 0x20D01003)
                                                                                       - 578481972) ^ 0x596B342B)
                                                                                     + 1353545959) ^ ((((v174 & 0x400000 ^ 0x20D01003) - 578481972) ^ 0x129C7B43) + 458897295);
  v176 = v175 - 2081421108;
  v177 = *(_DWORD *)(a16 + 4
                         * ((950879620 - (BYTE2(v171) ^ 0xC5) + ((2 * (BYTE2(v171) ^ 0xC5)) & 0xF6)) ^ 0x38AD45AFu)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v166) ^ 0x51)) ^ *(_DWORD *)(a19 + 4 * (v173 ^ 0x3Eu)) ^ *(_DWORD *)(a18 + 4 * (((BYTE1(v172) ^ 0xC07343E) - ((2 * (BYTE1(v172) ^ 0xC07343E)) & 0x10000836) + 735069211) ^ 0x27D7701Bu));
  v178 = (v176 ^ 0x74382A3C) & (2 * (v176 & 0x843C8B31)) ^ v176 & 0x843C8B31;
  v179 = ((2 * (v176 ^ 0x7C713C5C)) ^ 0xF09B6EDA) & (v176 ^ 0x7C713C5C) ^ (2 * (v176 ^ 0x7C713C5C)) & 0xF84DB76C;
  v180 = (v179 ^ 0x30002448) & (4 * v178) ^ v178;
  v181 = ((4 * (v179 ^ 0x8449125)) ^ 0xE136DDB4) & (v179 ^ 0x8449125) ^ (4 * (v179 ^ 0x8449125)) & 0xF84DB76C;
  v182 = (v181 ^ 0xE0049520) & (16 * v180) ^ v180;
  v183 = ((16 * (v181 ^ 0x18492249)) ^ 0x84DB76D0) & (v181 ^ 0x18492249) ^ (16 * (v181 ^ 0x18492249)) & 0xF84DB760;
  v184 = v182 ^ 0xF84DB76D ^ (v183 ^ 0x80493600) & (v182 << 8);
  v185 = *(_DWORD *)(a18
                   + 4
                   * ((((2 * (BYTE1(v173) ^ 0x4C624CBB)) | 0xD99E01CA) - (BYTE1(v173) ^ 0x4C624CBB) - 1825505509) ^ 0x20AD4C45));
  v186 = (v175 - 2081421108) ^ (2
                              * ((v184 << 16) & 0x784D0000 ^ v184 ^ ((v184 << 16) ^ 0x376D0000) & (((v183 ^ 0x7804812D) << 8) & 0x784D0000 ^ 0x30480000 ^ (((v183 ^ 0x7804812D) << 8) ^ 0x4DB70000) & (v183 ^ 0x7804812D))));
  if ((((v186 ^ 0x143DE5EB) & (v185 ^ 0xAD6BA817) ^ v186 & 0x62A95049) & 0x7D14255F ^ 0x5D14251F)
     + ((v186 ^ 0x143DE5EB) & (v185 ^ 0xAD6BA817) ^ v186 & 0x62A95049 ^ 0x20200040)
     - (((v186 ^ 0x143DE5EB) & (v185 ^ 0xAD6BA817) ^ v186 & 0x62A95049 ^ 0x20200040) & 0x7D14255F) == 1562207574)
    v187 = v175 - 2081421108;
  else
    v187 = 1939267794 - v175;
  v188 = (((v185 ^ 0xD6740B61) + 697037983) ^ ((v185 ^ 0x90432C8C) + 1874645876) ^ ((v185 ^ 0x89F5DFB3) + 1980375117))
       + 1933244971
       + v187;
  v189 = (v188 ^ 0xDAB62945) & (2 * (v188 & 0xE0C48964)) ^ v188 & 0xE0C48964;
  v190 = ((2 * (v188 ^ 0xDB36394D)) ^ 0x77E56052) & (v188 ^ 0xDB36394D) ^ (2 * (v188 ^ 0xDB36394D)) & 0x3BF2B028;
  v191 = v190 ^ 0x8129029;
  v192 = (v190 ^ 0x3202000) & (4 * v189) ^ v189;
  v193 = ((4 * v191) ^ 0xEFCAC0A4) & v191 ^ (4 * v191) & 0x3BF2B028;
  v194 = (v193 ^ 0x2BC28020) & (16 * v192) ^ v192;
  v195 = ((16 * (v193 ^ 0x10303009)) ^ 0xBF2B0290) & (v193 ^ 0x10303009) ^ (16 * (v193 ^ 0x10303009)) & 0x3BF2B020;
  v196 = v194 ^ 0x3BF2B029 ^ (v195 ^ 0x3B220000) & (v194 << 8);
  v197 = (v196 << 16) & 0x3BF20000 ^ v196 ^ ((v196 << 16) ^ 0x30290000) & (((v195 ^ 0xD0B029) << 8) & 0x3BF20000 ^ 0x9420000 ^ (((v195 ^ 0xD0B029) << 8) ^ 0x72B00000) & (v195 ^ 0xD0B029));
  v198 = ((2 * (v174 & 0xFFBFFFFF ^ 0x6FA970E9)) & 0x15462742) - (v174 & 0xFFBFFFFF ^ 0x6FA970E9) - 182653858;
  v199 = ((BYTE2(v166) ^ 0xE9) + (HIWORD(v166) & 0x6A ^ 0x1CF82702) - ((BYTE2(v166) ^ 0xE9) & 0x6A)) ^ 0x9CEC07E8;
  v200 = (BYTE2(v173) ^ 0xD2) + (HIWORD(v173) & 0x61 ^ 0x888BB021) - ((BYTE2(v173) ^ 0xD2) & 0x61);
  v201 = *(_DWORD *)(a18
                   + 4
                   * (((BYTE1(v166) ^ 0x2B84B4) - ((2 * (BYTE1(v166) ^ 0x2B84B4)) & 0x5309AA) - 126230571) ^ 0xF8525BD7));
  v202 = ((v198 & 0x2A627D9F ^ 0xA221D85) + (v198 & 0xD59D8260 ^ 0x551D0061) - 1) ^ *(_DWORD *)(a19
                                                                                              + 4
                                                                                              * (((v166 & 0xD9)
                                                                                                + 1385857279
                                                                                                + (v166 & 0x26 ^ 0x4821)) ^ 0x529AC9DC)) ^ v188 ^ (2 * v197);
  v203 = ((v172 & 0xAF ^ 0xECC450F2) - (v172 & 0x50)) ^ 0xA8F41430;
  v204 = *(_DWORD *)(a23 + 4 * (HIBYTE(v173) ^ 0x6B)) ^ *(_DWORD *)(a16
                                                                    + 4
                                                                    * ((((2 * v199) & 0x20513C) - v199 + 814503777) ^ 0xB0987741));
  v205 = *(_DWORD *)(a16 + 4 * (((v200 & 0x1AF2 ^ 0x704A13) + (v200 & 0x50D) - 1) ^ 0x705AB1)) ^ v201 ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v172) ^ 0xB9)) ^ *(_DWORD *)(a19 + 4 * ((897425586 - (v171 ^ 0x220312AF | 0x357DA0B2) + (v171 ^ 0x220312AF | 0xCA825F4D)) ^ 0xE8814D04));
  v206 = ((2 * (BYTE1(v171) ^ 0x91)) | 0x405DF8FA) - (BYTE1(v171) ^ 0x91) + 1607533443;
  v207 = v204 ^ *(_DWORD *)(a18
                          + 4 * (((v206 & 0x200D190D ^ 0x96510804) + (v206 & 0x22E6F2 ^ 0x220F1) - 1) ^ 0xB67DD42D)) ^ *(_DWORD *)(a19 + 4 * ((v203 - ((2 * v203) & 0x884001F0) + 1461953016) ^ 0x1313E5ED));
  v208 = HIBYTE(v207) ^ 0xB2;
  v209 = (2067235943 - (BYTE1(v205) ^ 0x33 | 0x7B378467) + (BYTE1(v205) ^ 0x33 | 0x84C87B98)) ^ 0x85DBF1F9;
  v210 = *(_DWORD *)(a23 + 4 * (HIBYTE(v177) ^ 0xE)) ^ *(_DWORD *)(a18
                                                                   + 4
                                                                   * ((v209 - ((2 * v209) & 0x5C046656) + 1845637931) ^ 0x6F11B92B)) ^ *(_DWORD *)(a16 + 4 * ((((2 * (BYTE2(v202) ^ 0x14400093)) & 0x80000DC) - (BYTE2(v202) ^ 0x14400093) + 1893862033) ^ 0x64A20A95u));
  v211 = ((HIWORD(v207) & 0x36 ^ 0x99F3D207) + (HIWORD(v207) & 0xC9) - 1) ^ 0xF1E3D7FF;
  v212 = (((2 * (BYTE2(v205) ^ 0xBB)) & 0x158) - (BYTE2(v205) ^ 0xBB) + 1848637267) ^ 0xE96B5773;
  v213 = *(_DWORD *)(a16 + 4 * ((-199193709 - (v211 | 0xF4208B93) + (v211 | 0xBDF746C)) ^ 0x63CF7124));
  v214 = *(_DWORD *)(a19
                   + 4
                   * ((1621414896
                     - (v207 ^ 0xC3 | 0x60A4D3F0)
                     + (v207 ^ 0xC3 | 0x9F5B2C0F)) ^ 0x9F5B2C32));
  v215 = *(_DWORD *)(a16 + 4 * ((949973509 - (v212 | 0x389F7205) + (v212 | 0xC7608DFA)) ^ 0x40242D78));
  v216 = 606725357 - (BYTE1(v207) ^ 0x68A00007 | 0x2429E4ED) + (BYTE1(v207) ^ 0x68A00007 | 0xDBD61B12);
  v217 = v210 ^ v214;
  v218 = *(_DWORD *)(a23 + 4 * (HIBYTE(v202) ^ 0x9D)) ^ v215 ^ *(_DWORD *)(a18 + 4 * (v216 ^ 0xB3761B53)) ^ *(_DWORD *)(a19 + 4 * (v177 ^ 0xC7u));
  HIDWORD(v219) = v213;
  LODWORD(v219) = v213;
  v220 = (v219 >> 15) ^ __ROR4__(*(_DWORD *)(a18+ 4* ((441421938- (BYTE1(v177) ^ 0x61FE0666 | 0x1A4F9072)+ (BYTE1(v177) ^ 0x61FE0666 | 0xE5B06F8D)) ^ 0x844E6969)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v205) ^ 0x4D)), 15) ^ 0x896D52A3;
  v221 = *(_DWORD *)(a23 + 4 * v208) ^ *(_DWORD *)(a16
                                                   + 4
                                                   * ((((2 * (BYTE2(v177) ^ 0x6B)) & 0x18A) - (BYTE2(v177) ^ 0x6B) + 1338) ^ 0x542u));
  v222 = (806651155 - (v202 ^ 0x1C | 0x30148513) + (v202 ^ 0x1C | 0xCFEB7AEC)) ^ 0x4DEB58CC;
  v223 = ((2 * (BYTE1(v202) ^ 0xC2)) & 0x14) - (BYTE1(v202) ^ 0xC2) - 320345611;
  v224 = *(_DWORD *)(a19 + 4 * ((v222 - ((2 * v222) & 0xD93A6F7C) - 325240898) ^ 0x6E9D15AF)) ^ __ROR4__(v220, 17);
  v225 = (v205 ^ 0x7B) + (v205 & 0xFC ^ 0xD2E27284) - ((v205 ^ 0x7B) & 0xFC);
  v226 = v221 ^ *(_DWORD *)(a19
                          + 4
                          * (((v225 & 0xC04021C7 ^ 0x20180405) + (v225 ^ 0xCEC3A9FA) - ((v225 ^ 0xCEC3A9FA) & 0x821C9C7)) ^ 0xF4583687)) ^ *(_DWORD *)(a18 + 4 * (((v223 & 0x88E0863D ^ 0x11001628) + (v223 ^ 0xCCF6E9D5) - ((v223 ^ 0xCCF6E9D5) & 0x2011063D)) ^ 0x99E0962C));
  v227 = ((v226 & 0x25) + (v226 & 0xDA ^ 0xA48D35D9) - 1) ^ 0x8D2D35DA;
  v228 = *(_DWORD *)(a19 + 4 * ((-634920575 - (v227 | 0xDA27E181) + (v227 | 0x25D81E7E)) ^ 0xC781EB0));
  v229 = *(_DWORD *)(a23 + 4 * ((v210 ^ ~v214) >> 24));
  v230 = ((v228 & 0x1000000 ^ 0x4199BC49) + 176951611) ^ (v228 & 0x1000000 | 0xB495CE84) ^ ((v228 & 0x1000000 ^ 0xB55D2491)
                                                                                          - 28800541);
  v231 = v230 + 552377499;
  v232 = ((2 * (BYTE2(v218) ^ 0x84)) | 0xB0964520) - (BYTE2(v218) ^ 0x84) - 1481319056;
  v233 = *(_DWORD *)(a16
                   + 4
                   * (((v232 & 0xA555E6D5 ^ 0x550C455) + (v232 ^ 0xF80F2280) - ((v232 ^ 0xF80F2280) & 0xA555E6D5)) ^ 0x511E6D4)) ^ v229 ^ *(_DWORD *)(a18 + 4 * ((((2 * (BYTE1(v224) ^ 0x299002EC)) & 0x520000A8) - (BYTE1(v224) ^ 0x299002EC) + 1457144491) ^ 0x7F4A40A7u));
  v234 = (((2 * (BYTE2(v224) ^ 0x42)) | 0x38CB57E8) - (BYTE2(v224) ^ 0x42) - 476425204) ^ 0x85EAA21B;
  v235 = ((2 * v234) & 0xD817A790) - v234;
  v236 = (v231 ^ 0x13FD35E0) & (2 * (v231 & 0x13000001)) ^ v231 & 0x13000001;
  v237 = ((2 * (v231 ^ 0x330D35C2)) ^ 0x41E10066) & (v231 ^ 0x330D35C2) ^ (2 * (v231 ^ 0x330D35C2)) & 0xA0F08032;
  v238 = v237 ^ 0xA0108011;
  v239 = v237 & (4 * v236) ^ v236;
  v240 = ((4 * v238) ^ 0x83C200CC) & v238 ^ (4 * v238) & 0xA0F08030;
  v241 = (v240 ^ 0x80C00000) & (16 * v239);
  v242 = (16 * (v240 ^ 0x20308033)) & 0xA0F08030 ^ 0xA0F08003 ^ ((16 * (v240 ^ 0x20308033)) ^ 0xF080330) & (v240 ^ 0x20308033);
  v243 = ((v239 ^ 0xA0F08033 ^ v241) << 8) & 0xA0F08000 ^ v239 ^ 0xA0F08033 ^ v241 ^ (((v239 ^ 0xA0F08033 ^ v241) << 8) ^ 0xF0803300) & v242;
  v244 = (v230 + 552377499) ^ (2
                             * ((v243 << 16) & 0x20F00000 ^ v243 ^ ((v243 << 16) ^ 0x330000) & ((v242 << 8) & 0xA0F00000 ^ ((v242 << 8) ^ 0x70800000) & v242 ^ 0x700000)));
  v245 = v244 & 0x45776ABA ^ 0x142401A ^ (v244 ^ 0x937CB597) & (v233 ^ 0x6D535C2B);
  v246 = (v228 & 0xFEFFFFFF ^ 0x507BB036 | 0xD83EE889) - (v228 & 0xFEFFFFFF ^ 0x507BB036 | 0x27C11776) + 666965878;
  v247 = (v246 & 0xF70B40D0 ^ 0x23020041) + (v246 & 0x8F4BF2F);
  v249 = ((2 * v245) & 0xF0650688) - v245 == 2989944;
  v250 = -1223166077 - v230;
  if (v249)
    v250 = v230 + 552377499;
  v251 = (((v233 ^ 0x1D723DDF) - 494026207) ^ ((v233 ^ 0x43C1AD8F) - 1136766351) ^ ((v233 ^ 0x7697A6C1) - 1989650113))
       + 655927716
       + v250;
  v252 = (v251 ^ 0xD56860DE) & (2 * (v251 & 0x950942DE)) ^ v251 & 0x950942DE;
  v253 = ((2 * (v251 ^ 0xDD7A6152)) ^ 0x90E64718) & (v251 ^ 0xDD7A6152) ^ (2 * (v251 ^ 0xDD7A6152)) & 0x4873238C;
  v254 = (v253 ^ 0x620308) & (4 * v252) ^ v252;
  v255 = ((4 * (v253 ^ 0x48112084)) ^ 0x21CC8E30) & (v253 ^ 0x48112084) ^ (4 * (v253 ^ 0x48112084)) & 0x4873238C;
  v256 = v254 ^ 0x4873238C ^ (v255 ^ 0x40020C) & (16 * v254);
  v257 = (16 * (v255 ^ 0x4833218C)) & 0x48732380 ^ 0x4841030C ^ ((16 * (v255 ^ 0x4833218C)) ^ 0x873238C0) & (v255 ^ 0x4833218C);
  v258 = (v256 << 8) & 0x48732300 ^ v256 ^ ((v256 << 8) ^ 0x73238C00) & v257;
  v259 = (v258 << 16) & 0x48730000 ^ v258 ^ ((v258 << 16) ^ 0x238C0000) & ((v257 << 8) & 0x48730000 ^ 0x8500000 ^ ((v257 << 8) ^ 0x73230000) & v257);
  v260 = (BYTE1(v218) ^ 0xA7 | 0xDF239615) - (BYTE1(v218) ^ 0xA7 | 0x20DC69EA) + 551315946;
  v248 = ((v217 & 0xB1) + (v217 ^ 0xFFFFFFB5) + (v217 | 0xAB22D04E) + 1) ^ 0xAB0ADC46;
  v261 = *(_DWORD *)(a16 + 4 * ((v235 - 1812714441) ^ 0xA7B25FF)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v218) ^ 0xB)) ^ *(_DWORD *)(a18 + 4 * (((BYTE1(v226) ^ 0x30179E4) + ((v226 >> 8) & 0x51 ^ 0xD4120411) - ((BYTE1(v226) ^ 0x30179E4) & 0x2013951)) ^ 0xD51244D8)) ^ *(_DWORD *)(a19 + 4 * ((-1570288100 - (v248 | 0xA2674E1C) + (v248 | 0x5D98B1E3)) ^ 0x5DB0BD44));
  v262 = v251 ^ (v247 - 1);
  v263 = ((2 * (BYTE2(v226) ^ 0x845C4064)) | 0xB19BEE7A) - (BYTE2(v226) ^ 0x845C4064);
  LOWORD(v251) = ((2 * (v218 ^ 0xAC)) & 0xEA) - (v218 ^ 0xAC) + 25738;
  v264 = ((HIWORD(v217) & 0xE ^ 0x6BE4F605) + (HIWORD(v217) & 0xF1) - 1) ^ 0x6BE4F6D7;
  v265 = ((v224 & 0x2A ^ 0xB421) + (v224 & 0xD5) - 1) ^ 0x84;
  v266 = *(_DWORD *)(a23 + 4 * (HIBYTE(v226) ^ 0xF4));
  v267 = *(_DWORD *)(a23 + 4 * (HIBYTE(v224) ^ 0x7B));
  v268 = v262 ^ (2 * v259);
  v269 = *(_DWORD *)(a18 + 4 * (BYTE1(v217) ^ 0x15u)) ^ v267 ^ *(_DWORD *)(a19
                                                                           + 4
                                                                           * (((v251 & 0x6F7 ^ 0xDBEE5875)
                                                                             + (v251 & 0x108 ^ 0x24118009)
                                                                             - 1) ^ 0xFFFFDC54)) ^ *(_DWORD *)(a16 + 4 * ((v263 - 1489893181) ^ 0xDC91B764));
  v270 = *(_DWORD *)(a18 + 4
                         * (((v260 & 0x1E220115 ^ 0x22000100) + (v260 & 0xC10196EA ^ 0xC1019EA9) - 1) ^ 0x3C220963)) ^ v266 ^ *(_DWORD *)(a16 + 4 * v264) ^ *(_DWORD *)(a19 + 4 * (((v265 & 0x57 ^ 0x21D27916) + (v265 & 0x4A8 ^ 0x62000A9) - 1) ^ 0x27F27D63u));
  v271 = (*(_BYTE *)(a18
                                    + 4
                                    * (((v260 & 0x1E220115 ^ 0x22000100) + (v260 & 0xC10196EA ^ 0xC1019EA9) - 1) ^ 0x3C220963)) ^ v266 ^ *(_BYTE *)(a16 + 4 * v264) ^ *(_BYTE *)(a19 + 4 * (((v265 & 0x57 ^ 0x21D27916) + (v265 & 0x4A8 ^ 0x62000A9) - 1) ^ 0x27F27D63u))) ^ 0xE4;
  v272 = (((2 * v271) | 0x5C903890) - v271 - 776477768) ^ 0x2A88B495;
  v273 = v268 ^ 0x8542809;
  v274 = (v268 ^ 0xC7) - 1757489407 - ((2 * (v268 ^ 0xC7)) & 0x10C);
  v275 = ((BYTE2(v269) ^ 0xA3) + (HIWORD(v269) & 0xF8 ^ 0x2FA8F558) - ((BYTE2(v269) ^ 0xA3) & 0xF8)) ^ 0x7788F03C;
  v276 = *(_DWORD *)(a18
                   + 4
                   * ((-1521038521 - (BYTE1(v269) ^ 0x65 | 0xA556CB47) + (BYTE1(v269) ^ 0x65 | 0x5AA934B8)) ^ 0x5AA9340A));
  v277 = *(_DWORD *)(a19 + 4 * ((-1461854495 - (v272 | 0xA8DDDEE1) + (v272 | 0x5722211E)) ^ 0x53E2893E)) ^ *(_DWORD *)(a16 + 4 * ((((v261 >> 15) & 0x19E) - 1471781071 + (BYTE2(v261) ^ 0xFFFFFFEF)) ^ 0xA84667EB)) ^ v276 ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v268) ^ 0xAC));
  v278 = (((2 * (v261 ^ 0xE2)) | 0x3D0CCDB6) - (v261 ^ 0xE2) - 512124635) ^ 0x3FC6475B;
  v279 = *(_DWORD *)(a23 + 4 * (HIBYTE(v261) ^ 0x35)) ^ *(_DWORD *)(a16
                                                                    + 4
                                                                    * ((((2 * v275) & 0x4002DE) - v275 - 107032944) ^ 0xA1BECBB0));
  v280 = v279 ^ *(_DWORD *)(a18 + 4 * (BYTE1(v270) ^ 0xB5u)) ^ *(_DWORD *)(a19 + 4 * ((v274 + 133) ^ 0x973ED701));
  v281 = (v280 & 0x6C7DE8CE ^ 0xB8C04A) - ((2 * (v280 & 0x6C7DE8CE ^ 0xB8C04A)) & 0x2BC098);
  LODWORD(v467) = BYTE1(v261);
  v282 = (((2 * (BYTE1(v261) ^ 0x64)) | 0x403362C6) - (BYTE1(v261) ^ 0x64) + 1608928925) ^ 0xF04AF5E3;
  v283 = ((2 * v282) | 0x36C3B3A8) - v282;
  v284 = (((2 * (v280 & 0x93821731 ^ 0x93800610)) & 0x25002840) - (v280 & 0x93821731 ^ 0x93800610) + 1225925585) ^ 0x495223F0;
  v285 = *(_DWORD *)(a23 + 4 * (HIBYTE(v269) ^ 0x73));
  v286 = *(_DWORD *)(a18 + 4 * (BYTE1(v273) ^ 0xC9u)) ^ *(_DWORD *)(a16
                                                                    + 4
                                                                    * (((((HIWORD(v270) & 0xE8 ^ 0x1C749141) - 1) & 0x4508128 ^ 0x40812028)
                                                                      + ((((HIWORD(v270) & 0xE8 ^ 0x1C749141) - 1) | HIWORD(v270) & 0x17) ^ 0x3E70DB87)
                                                                      - (((((HIWORD(v270) & 0xE8 ^ 0x1C749141) - 1) | HIWORD(v270) & 0x17) ^ 0x3E70DB87) & 0x20040228)) ^ 0x46D1E92D)) ^ v285 ^ *(_DWORD *)(a19 + 4 * ((((2 * v278) & 0x7C58D808) - v278 - 1043098629) ^ 0xE093B283));
  v287 = ((v284 - ((2 * v284) & 0x8BAD7DC2) - 975782163) ^ 0x29694012) & ((v281 - 1843923347) ^ 0xB43FC8F3) ^ (v284 - ((2 * v284) & 0x8BAD7DC2) - 975782163) & 0xDD5709E7;
  v288 = (v287 & 0x65581D3D ^ 0x60581C1C) + (v287 & 0x9AA7E2C2 ^ 0x10070083);
  v289 = -538394396
       - ((((v277 | 0x3FFFFF0) + 94358416) & 0x4000000 | 0x91DA99E) ^ ((((v277 | 0x3FFFFF0) + 94358416) & 0x4000000)
                                                                     + 118729314) ^ ((((v277 | 0x3FFFFF0) + 94358416) & 0x4000000 ^ 0x57C545EB)
                                                                                   - 1592323593));
  v290 = (v289 ^ 0x6C44260B) & (2 * (v289 & 0xE9162442)) ^ v289 & 0xE9162442;
  v291 = ((2 * (v289 ^ 0x2C44668F)) ^ 0x8AA78188) & (v289 ^ 0x2C44668F) ^ (2 * (v289 ^ 0x2C44668F)) & 0xC553C0C4;
  v292 = (v291 ^ 0x80018001) & (4 * v290) ^ v290;
  v293 = ((4 * (v291 ^ 0x45504044)) ^ 0x154F0310) & (v291 ^ 0x45504044) ^ (4 * (v291 ^ 0x45504044)) & 0xC553C0C4;
  v294 = (v293 ^ 0x5430000) & (16 * v292) ^ v292;
  v295 = ((16 * (v293 ^ 0xC010C0C4)) ^ 0x553C0C40) & (v293 ^ 0xC010C0C4) ^ (16 * (v293 ^ 0xC010C0C4)) & 0xC553C0C0;
  v296 = v294 ^ a14 ^ (v295 ^ 0x45100000) & (v294 << 8);
  v297 = *(_DWORD *)(a16 + 4 * (BYTE2(v273) ^ 0x78u));
  v298 = *(_DWORD *)(a19
                   + 4 * ((((2 * v269) & 0x40) + 614622121 + (v269 ^ 0xFFFFFFA1) + 55) ^ 0x24A263A9));
  v299 = *(_DWORD *)(a18 + 4 * ((v283 + 1688086060) ^ 0xCB329DCC)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v270) ^ 0x13)) ^ v298 ^ v297;
  v300 = v289 ^ v277 & 0xFBFFFFFF ^ (2
                                   * ((v296 << 16) & 0x45530000 ^ v296 ^ ((v296 << 16) ^ 0x40C40000) & (((v295 ^ 0x8043C084) << 8) & HIDWORD(a13) ^ 0x4130000 ^ (((v295 ^ 0x8043C084) << 8) ^ 0x53C00000) & (v295 ^ 0x8043C084))));
  v301 = ((BYTE1(v286) ^ 0x80) - ((v286 >> 7) & 0xA8) - 512904620) ^ 0xA07DB6C6;
  v302 = (v288 - 1) ^ 0xE1BC0395;
  v303 = *(_DWORD *)(a18 + 4 * ((1405967742 - (v301 | 0x53CD5D7E) + (v301 | 0xAC32A281)) ^ 0xED22A6A4)) ^ *(_DWORD *)(a19 + 4 * ((-642107749 - (v299 ^ 0x40100BF | 0xD9BA369B) + (v299 ^ 0x40100BF | 0x2645C964)) ^ 0x2244C9E1)) ^ *(_DWORD *)(a16 + 4 * BYTE2(v302)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v300) ^ 0x73));
  v304 = *(_DWORD *)(a23 + 4 * HIBYTE(v302)) ^ *(_DWORD *)(a16
                                                           + 4
                                                           * (((BYTE2(v286) ^ 0x61800018)
                                                             + (HIWORD(v286) & 0x37 ^ 0x18282427)
                                                             - ((BYTE2(v286) ^ 0x61800018) & 0x37)) ^ 0x79A82435));
  v305 = ((2 * (v304 & 0x1A2415C ^ 0x200040)) | 0xAF1AF154) - (v304 & 0x1A2415C ^ 0x200040);
  v306 = ((2 * (v304 & 0xFE5DBEA3 ^ 0xC1DB681)) | 0xD13819BA) - (v304 & 0xFE5DBEA3 ^ 0xC1DB681) - 1755057373;
  v307 = (v306 & 0x827B3DC5 ^ 0x82601000) + (v306 ^ 0x209F6DD7) - ((v306 ^ 0x209F6DD7) & 0x827B3DC5);
  v308 = v307 & 0xD56FADC4 ^ 0x5458900 ^ (v307 ^ 0xDFDE9B32) & ((v305 - 1468889258) ^ 0x7C9F6A9D);
  LOWORD(v295) = ((2 * (v286 ^ 0x55)) & 0xA6) - (v286 ^ 0x55) - 25172;
  v309 = *(_DWORD *)(a19 + 4 * (v300 ^ 0x3Eu)) ^ *(_DWORD *)(a18 + 4 * (BYTE1(v299) ^ 0x8Du)) ^ (((2 * v308) & 0x62B307E4) - v308 - 827950067);
  v310 = *(_DWORD *)(a16 + 4 * (BYTE2(v299) ^ 0x60u)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v286) ^ 4)) ^ *(_DWORD *)(a19 + 4 * ((v288 - 1) ^ 0x95u)) ^ *(_DWORD *)(a18 + 4 * (BYTE1(v300) ^ 0x28u));
  HIDWORD(v312) = v270;
  LODWORD(v312) = v270;
  v311 = v312 >> 9;
  HIDWORD(v312) = v311 ^ 0x61B49C;
  LODWORD(v312) = v311 ^ 0x12000000;
  v313 = *(_DWORD *)(a19 + 4 * (((v295 & 0x51F ^ 0x90A2C11A) + (v295 & 0x2E0 ^ 0x20040021) - 1) ^ 0xB0A6C41D)) ^ *(_DWORD *)(a18 + 4 * BYTE1(v302)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v299) ^ 0x83)) ^ *(_DWORD *)(a16 + 4 * (BYTE2(v300) ^ 0x88u));
  v314 = v233 ^ v228;
  v315 = (v312 >> 23) ^ 0xD0AB8D3D;
  v316 = *(_DWORD *)(a16
                   + 4
                   * ((unsigned __int16)((BYTE2(v261) ^ 0x35D6)
                                       + (BYTE2(v261) & 0xBE ^ 0x8A28)
                                       - ((BYTE2(v261) ^ 0x35D6) & 0x35BE)) ^ 0x8AA3u)) ^ v276 ^ *(_DWORD *)(a23 + 4 * (((v233 ^ v228) >> 24) ^ 0xAA)) ^ *(_DWORD *)(a19 + 4 * ((v312 >> 23) ^ 0x3Du));
  v317 = v279 ^ *(_DWORD *)(a18 + 4 * BYTE1(v315));
  HIDWORD(v312) = *(_DWORD *)(a16 + 4 * BYTE2(v315)) ^ v285 ^ *(_DWORD *)(a18
                                                                          + 4
                                                                          * (((((v233 ^ v228) >> 8) & 2)
                                                                            + (((unsigned __int16)(v233 ^ v228) >> 8) ^ 0xAE)
                                                                            - ((((unsigned __int16)(v233 ^ v228) >> 8) ^ 0xAE) & 2)
                                                                            + 2304) ^ 0x926));
  LODWORD(v312) = HIDWORD(v312);
  v318 = (v312 >> 27) ^ __ROR4__(*(_DWORD *)(a19+ 4* ((582119837- (v261 ^ 0xD424843E | 0x22B2719D)+ (v261 ^ 0xD424843E | 0xDD4D8E62)) ^ 0x9690A46)), 27);
  HIDWORD(v312) = v318 ^ 0xFFFFFFF7;
  LODWORD(v312) = v318 ^ 0x3925740;
  v319 = v312 >> 5;
  v320 = *(_DWORD *)(a19
                   + 4
                   * ((((2 * ((v233 ^ v228) ^ 0x70)) & 0x22222222)
                     - ((v233 ^ v228) ^ 0x70)
                     + 4334) ^ 0x1076u));
  v321 = (((v320 ^ 0x8695B125) + 2037010139) ^ ((v320 ^ 0x4C7EFA7) - 80211879) ^ ((v320 ^ 0x3ECE67EE) - 1053714414))
       - (((v317 ^ v320 ^ 0x62A0E64C) - 1654711884) ^ ((v317 ^ v320 ^ 0x58051D09) - 1476730121) ^ ((v317 ^ v320 ^ 0xAE1DF4B8)
                                                                                                 + 1373768520))
       - 2062249069;
  v322 = (2 * (v321 & 0xA2CF95DC ^ 0xAD510A92)) & 0x5110A90 ^ v321 & 0xA2CF95DC ^ 0xAD510A92 ^ ((2
                                                                                               * (v321 & 0xA2CF95DC ^ 0xAD510A92)) ^ 0x5AA21524) & (v321 ^ 0xF9E9F4E);
  v323 = (2 * (v321 ^ 0xF9E9F4E)) & 0xAD510A92 ^ 0xA5510A92 ^ ((2 * (v321 ^ 0xF9E9F4E)) ^ 0x5AA21524) & (v321 ^ 0xF9E9F4E);
  v324 = (4 * v322) & 0xAD510A90 ^ v322 ^ ((4 * v322) ^ 0xB5442A48) & v323;
  v325 = (4 * v323) & 0xAD510A90 ^ 0x8110092 ^ ((4 * v323) ^ 0xB5442A48) & v323;
  v326 = (16 * v324) & 0xAD510A90 ^ v324 ^ ((16 * v324) ^ 0x81100920) & v325;
  v327 = (16 * v325) & 0xAD510A90 ^ 0x28410292 ^ ((16 * v325) ^ 0xD510A920) & v325;
  v328 = (v326 << 8) & 0xAD510A00 ^ v326 ^ ((v326 << 8) ^ 0x1089200) & v327;
  v329 = ((v328 << 16) ^ 0xA920000) & ((v327 << 8) & 0xAD510000 ^ 0x2C510000 ^ ((v327 << 8) ^ 0x510A0000) & v327);
  v330 = -57853338
       - (((v317 ^ 0x784F8761) - 2018477921) ^ ((v317 ^ 0xED68E720) + 311892192) ^ ((v317 ^ 0xBD0356D0) + 1123854640));
  v331 = (v330 ^ 0xDB0EAE81) & (2 * (v330 & 0xDB4E8F09)) ^ v330 & 0xDB4E8F09;
  v332 = ((2 * (v330 ^ 0xEB9EA681)) ^ 0x61A05310) & (v330 ^ 0xEB9EA681) ^ (2 * (v330 ^ 0xEB9EA681)) & 0x30D02988;
  v333 = (v332 ^ 0x20000000) & (4 * v331) ^ v331;
  v334 = ((4 * (v332 ^ 0x10502888)) ^ 0xC340A620) & (v332 ^ 0x10502888) ^ (4 * (v332 ^ 0x10502888)) & 0x30D02988;
  v335 = (v334 ^ 0x402000) & (16 * v333) ^ v333;
  v336 = ((16 * (v334 ^ 0x30900988)) ^ 0xD029880) & (v334 ^ 0x30900988) ^ (16 * (v334 ^ 0x30900988)) & 0x30D02980;
  v337 = v336 ^ 0x30D02108;
  v338 = v335 ^ 0x30D02988 ^ (v336 ^ 0x800) & (v335 << 8);
  v339 = v330 ^ v317 ^ v321 ^ (2
                             * ((v338 << 16) & 0x30D00000 ^ v338 ^ ((v338 << 16) ^ 0x29880000) & ((v337 << 8) & 0x30D00000 ^ 0x20D00000 ^ ((v337 << 8) ^ 0xD0290000) & v337) ^ v328 ^ (v328 << 16) & 0x2D510000 ^ v329));
  v340 = (((v320 ^ 0x10C05147) - 281039175) ^ ((v320 ^ 0x9104EB21) + 1861948639) ^ ((v320 ^ 0x3D58830A) - 1029210890))
       - 1361247335
       + (((v339 ^ 0xFE8E9F81) + 66760375) ^ ((v339 ^ 0x67B989BD) - 1697793909) ^ ((v339 ^ 0xE8107C4C) + 358894972));
  v341 = (v340 ^ 0xB44BD08A) & (2 * (v340 & 0x816BDA8B)) ^ v340 & 0x816BDA8B;
  v342 = ((2 * (v340 ^ 0xB61D5198)) ^ 0x6EED1626) & (v340 ^ 0xB61D5198) ^ (2 * (v340 ^ 0xB61D5198)) & 0x37768B12;
  v343 = (v342 ^ 0x6640200) & (4 * v341) ^ v341;
  v344 = ((4 * (v342 ^ 0x11128911)) ^ 0xDDDA2C4C) & (v342 ^ 0x11128911) ^ (4 * (v342 ^ 0x11128911)) & 0x37768B10;
  v345 = (v344 ^ 0x15520800) & (16 * v343) ^ v343;
  v346 = ((16 * (v344 ^ 0x22248313)) ^ 0x7768B130) & (v344 ^ 0x22248313) ^ (16 * (v344 ^ 0x22248313)) & 0x37768B10;
  v347 = v345 ^ 0x37768B13 ^ (v346 ^ 0x37608100) & (v345 << 8);
  v348 = v340 ^ (2
               * ((v347 << 16) & 0x37760000 ^ v347 ^ ((v347 << 16) ^ 0xB130000) & (((v346 ^ 0x160A03) << 8) & 0x37760000 ^ 0x1740000 ^ (((v346 ^ 0x160A03) << 8) ^ 0x768B0000) & (v346 ^ 0x160A03))));
  v349 = *(_DWORD *)(a16 + 4 * (((HIWORD(v314) & 0xF1 ^ 0x74B39661) + (HIWORD(v314) & 0xE ^ 3) - 1) ^ 0x74B39685)) ^ *(_DWORD *)(a23 + 4 * HIBYTE(v315)) ^ *(_DWORD *)(a18 + 4 * (((BYTE1(v261) ^ 0xD7) + ((v261 >> 8) & 0xED ^ 0x528) - ((BYTE1(v261) ^ 0xD7) & 0xED)) ^ 0x5C6));
  v350 = ((v349 & 0xACEB380F ^ 0x88E82009)
        + (v349 & 0x8AB0800 ^ 0x43038C90)
        - ((v349 & 0xACEB380F ^ 0x88E82009) & 0x8AB0800)) ^ 0x4AB3DFB8;
  v351 = ((2 * v350) & 0x6D3B204A) - v350 - 916295718;
  if ((v316 & 1) != 0)
    v353 = -1;
  else
    v353 = -2;
  v352 = (2 * ((v316 ^ 0x94B80FFD) >> (v228 & 1) >> ((1 - v228) & 1))) ^ 0x64F486B1;
  v354 = (v353 & v352 ^ 0x9208594A | 0x8B23DC7F) - (v353 & v352 ^ 0x9208594A | 0x74DC2380) + 1960584064;
  v355 = (((v354 ^ 0x540EEF6A) + (v354 ^ 0x449EC268) + 1) ^ 0xFFFFFFFE) + (v354 ^ 0x449EC268);
  v356 = (v349 & 0x5314C7F0 ^ 0x53044650) - ((2 * (v349 & 0x5314C7F0 ^ 0x53044650)) & 0x2010200) - 1922920184;
  v357 = v356 & 0xAA104E10 ^ v298 ^ (v351 ^ 0x3D1D9D14) & (v356 & 0xFF37DFF0 ^ 0x21DD2E3F);
  v358 = v319 ^ 0xBC06A564;
  v359 = (((v357 >> 8) & 0xC8 ^ 0x750F7F41) + ((v357 >> 8) & 0x37) - 1) ^ 0x743B172A;
  v360 = (-1857976197 - (BYTE2(v357) ^ 0x82 | 0x9141887B) + (BYTE2(v357) ^ 0x82 | 0x6EBE7784)) ^ 0x7CF46AC4;
  v361 = *(_DWORD *)(a16 + 4 * ~HIWORD(v348)) ^ *(_DWORD *)(a23 + 4 * HIBYTE(v355)) ^ *(_DWORD *)(a18 + 4 * ((unsigned __int16)(v319 ^ 0xA564) >> 8)) ^ *(_DWORD *)(a19 + 4 * ((((2 * (v357 ^ 0x4524565)) | 0xAE38A110) - (v357 ^ 0x4524565) + 686010232) ^ 0xD34E15A8));
  v362 = ((BYTE1(v348) ^ 0xF9) + ((v348 >> 8) & 0x1A ^ 0x7B899B02) - ((BYTE1(v348) ^ 0xF9) & 0x1A)) ^ 0xF98CBA8F;
  v363 = ((2 * v362) | 0x7DF43030) - v362;
  v364 = *(_DWORD *)(a16 + 4 * ((v319 ^ 0xBC06A564) >> 16)) ^ *(_DWORD *)(a19
                                                                                           + 4 * v355) ^ *(_DWORD *)(a18 + 4 * ((((2 * v359) & 0x40C1E4) - v359 - 1482912755) ^ 0xA6A8E42D)) ^ *(_DWORD *)(a23 + 4 * (HIBYTE(v348) ^ 0x9E));
  LOWORD(v359) = (v348 ^ 0x49) - ((2 * (v348 ^ 0x49)) & 0x42) - 4575;
  v365 = *(_DWORD *)(a23 + 4 * HIBYTE(v358)) ^ *(_DWORD *)(a18 + 4 * BYTE1(v355)) ^ *(_DWORD *)(a16
                                                                                                  + 4 * ((((2 * v360) | 0xA9AA08EE) - v360 - 1423246455) ^ 0x469F195E));
  v366 = *(_DWORD *)(a19 + 4 * (((v359 & 0x217 ^ 0x629B1414) + (v359 & 0x1E8 ^ 0x1040021) - 1) ^ 0x639F1607u));
  v367 = ((v366 ^ 0xAC5E380A) + 1403111414) ^ ((v366 ^ 0xBF477657) + 1085835689) ^ ((v366 ^ 0xAF857731) + 1350207695);
  v368 = v365 & 0x3B823147 ^ 0x3A821105 ^ (v366 ^ 0x871E082B) & (v365 ^ 0x28243691);
  v369 = 2 * (((2 * v368) | 0x374EDC6A) - v368) - 927915114;
  v370 = (((v365 ^ 0xFF5E6536) + 10590922) ^ ((v365 ^ 0x680DC71C) - 1745733404) ^ ((v365 ^ 0xBF7794BB) + 1082682181))
       + v367
       - (((v369 ^ 0x86A957B0) - 909747769) ^ ((v369 ^ 0x55254B1C) + 441075051) ^ ((v369 ^ 0xC1C682CE) - 1901491015))
       + 1425263860;
  v371 = (v370 ^ 0xE8E1A2DD) & (2 * (v370 & 0xECF2331E)) ^ v370 & 0xECF2331E;
  v372 = ((2 * (v370 ^ 0x6101A4CD)) ^ 0x1BE72FA6) & (v370 ^ 0x6101A4CD) ^ (2 * (v370 ^ 0x6101A4CD)) & 0x8DF397D2;
  v373 = (v372 ^ 0x1C10480) & (4 * v371) ^ v371;
  v374 = ((4 * (v372 ^ 0x84109051)) ^ 0x37CE5F4C) & (v372 ^ 0x84109051) ^ (4 * (v372 ^ 0x84109051)) & 0x8DF397D0;
  v375 = (v374 ^ 0x5C21740) & (16 * v373) ^ v373;
  v376 = ((16 * (v374 ^ 0x88318093)) ^ 0xDF397D30) & (v374 ^ 0x88318093) ^ (16 * (v374 ^ 0x88318093)) & 0x8DF397D0;
  v377 = v375 ^ 0x8DF397D3 ^ (v376 ^ 0x8D311500) & (v375 << 8);
  v378 = v370 ^ (2
               * ((v377 << 16) & 0xDF30000 ^ v377 ^ ((v377 << 16) ^ 0x17D30000) & (((v376 ^ 0xC282C3) << 8) & 0xDF30000 ^ 0xC600000 ^ (((v376 ^ 0xC282C3) << 8) ^ 0xF3970000) & (v376 ^ 0xC282C3))));
  v379 = (((v303 ^ 0xF3B592E) + 1305325086) ^ ((v303 ^ 0xC170C520) - 2088357356) ^ ((v303 ^ 0x9F5DDB10) - 575984604))
       - (((v361 ^ 0x2D7D3A84) - 1966972680) ^ ((v361 ^ 0xF59A5C5E) + 1378158126) ^ ((v361 ^ 0x89F121C4) + 776895416))
       - 1436626944;
  v380 = (v379 ^ 0xD3E0364D) & (2 * (v379 & 0x9BF53608)) ^ v379 & 0x9BF53608;
  v381 = ((2 * (v379 ^ 0xE2C0365D)) ^ 0xF26A00AA) & (v379 ^ 0xE2C0365D) ^ (2 * (v379 ^ 0xE2C0365D)) & 0x79350054;
  v382 = (v381 ^ 0x70200000) & (4 * v380) ^ v380;
  v383 = ((4 * (v381 ^ 0x9150055)) ^ 0xE4D40154) & (v381 ^ 0x9150055) ^ (4 * (v381 ^ 0x9150055)) & 0x79350054;
  v384 = v382 ^ 0x79350055 ^ (v383 ^ 0x60140040) & (16 * v382);
  v385 = (16 * (v383 ^ 0x19210001)) & 0x79350050 ^ 0x68250005 ^ ((16 * (v383 ^ 0x19210001)) ^ 0x93500550) & (v383 ^ 0x19210001);
  v386 = (v384 << 8) & 0x79350000 ^ v384 ^ ((v384 << 8) ^ 0x35005500) & v385;
  v387 = *(_DWORD *)(a19 + 4 * v358);
  v388 = *(_DWORD *)(a23 + 4 * (HIBYTE(v357) ^ 0x74));
  v389 = v379 ^ (2
               * ((v386 << 16) & 0x79350000 ^ v386 ^ ((v386 << 16) ^ 0x550000) & ((v385 << 8) & 0x79350000 ^ 0x48350000 ^ ((v385 << 8) ^ 0x35000000) & v385)));
  v390 = v387 ^ *(_DWORD *)(a16 + 4 * BYTE2(v355)) ^ v388 ^ *(_DWORD *)(a18 + 4 * ((v363 - 1056577560) ^ 0xBCFF3958));
  v391 = 976247410
       - ((((-124239393 - (v390 & 0x10000000 | 0x2028800B)) ^ 0xF6F2332E) - 1539348250) ^ (((-124239393
                                                                                           - (v390 & 0x10000000 | 0x2028800B)) ^ 0x2216B5DD)
                                                                                         + 1893461527) ^ (((-124239393 - (v390 & 0x10000000 | 0x2028800B)) ^ 0x1C8B4727) + 1313217773));
  v392 = (v391 ^ 0x41F3025E) & (2 * (v391 & 0x95FB529F)) ^ v391 & 0x95FB529F;
  v393 = ((2 * (v391 ^ 0x4973A654)) ^ 0xB911E996) & (v391 ^ 0x4973A654) ^ (2 * (v391 ^ 0x4973A654)) & 0xDC88F4CA;
  v394 = v393 ^ 0x44881449;
  v395 = (v393 ^ 0x9800C080) & (4 * v392) ^ v392;
  v396 = ((4 * v394) ^ 0x7223D32C) & v394 ^ (4 * v394) & 0xDC88F4C8;
  v397 = (v396 ^ 0x5000D000) & (16 * v395) ^ v395;
  v398 = ((16 * (v396 ^ 0x8C8824C3)) ^ 0xC88F4CB0) & (v396 ^ 0x8C8824C3) ^ (16 * (v396 ^ 0x8C8824C3)) & 0xDC88F4C0;
  v399 = ((v390 & 0xE5058EEC ^ 0x30008E41) + (v390 & 0xAFA7113) - 1) ^ 0xF7B894BD;
  v400 = v391 ^ (v399 - ((2 * v399) & 0x4CE036EE) + 913316727) ^ (2
                                                                * (((v397 ^ 0xDC88F4CB ^ (v398 ^ 0xC8884400) & (v397 << 8)) << 16) & 0x5C880000 ^ v397 ^ 0xDC88F4CB ^ (v398 ^ 0xC8884400) & (v397 << 8) ^ (((v397 ^ 0xDC88F4CB ^ (v398 ^ 0xC8884400) & (v397 << 8)) << 16) ^ 0x74CB0000) & (((v398 ^ 0x1400B04B) << 8) & 0x5C880000 ^ 0x54080000 ^ (((v398 ^ 0x1400B04B) << 8) ^ 0x8F40000) & (v398 ^ 0x1400B04B))));
  v401 = ((v378 ^ 0x61961812) + 1082878820) ^ ((v378 ^ 0x61A132AC) + 1086079454) ^ ((v378 ^ 0xDED5A630) - 3615422);
  v402 = ((v364 ^ 0x1A6BA6FD) - 1008730389) ^ ((v364 ^ 0x8E8787FF) + 1463017449) ^ ((v364 ^ 0xB2A786EA) + 1796464382);
  v403 = (((v309 ^ 0x6FD15CBA) - 1702599454) ^ ((v309 ^ 0xEA43375B) + 521539329) ^ ((v309 ^ 0xA56D8134) + 1345894768))
       - v402
       + 2113100525;
  v404 = (v403 ^ 0xFD28689D) & (2 * (v403 & 0xFD880A1E)) ^ v403 & 0xFD880A1E;
  v405 = ((2 * (v403 ^ 0xC72868AD)) ^ 0x7540C566) & (v403 ^ 0xC72868AD) ^ (2 * (v403 ^ 0xC72868AD)) & 0x3AA062B2;
  v406 = v405 ^ 0xAA02291;
  v407 = (v405 ^ 0x30004020) & (4 * v404) ^ v404;
  v408 = ((4 * v406) ^ 0xEA818ACC) & v406 ^ (4 * v406) & 0x3AA062B0;
  v409 = (v408 ^ 0x2A800280) & (16 * v407) ^ v407;
  v410 = ((16 * (v408 ^ 0x10206033)) ^ 0xAA062B30) & (v408 ^ 0x10206033) ^ (16 * (v408 ^ 0x10206033)) & 0x3AA062B0;
  v411 = v409 ^ 0x3AA062B3 ^ (v410 ^ 0x2A002200) & (v409 << 8);
  v412 = -1315106269 * (v389 ^ 0xCCB3BF26);
  v413 = -846845049
       * (v403 ^ (2
                * ((v411 << 16) & 0x3AA00000 ^ v411 ^ ((v411 << 16) ^ 0x62B30000) & (((v410 ^ 0x10A04083) << 8) & 0x3AA00000 ^ 0x1A800000 ^ (((v410 ^ 0x10A04083) << 8) ^ 0xA0620000) & (v410 ^ 0x10A04083)))) ^ 0x90F04650);
  v414 = v412 ^ v413;
  v415 = 75544367
       * (((((v313 ^ 0x75F90FEE) + 740229403) ^ ((v313 ^ 0x3FF7592A) + 1712412639) ^ ((v313 ^ 0xEB3F4BC8) - 1294383811))
         - (((v400 ^ 0x46738367) + 1252860431) ^ ((v400 ^ 0xCE26332B) - 1023897021) ^ ((v400 ^ 0x78DF0532) + 1946264668))
         + 2047465335) ^ 0x7B97AB6D);
  v416 = (264877151
        * (((((v310 ^ 0x9F5D8A72) + 332624172) ^ ((v310 ^ 0xBA01A94) - 2026970674) ^ ((v310 ^ 0x22140F2D) - 1365576587))
          - v401
          + 816672627) ^ 0x4F6C1677)) ^ v413;
  v417 = (v415 + (v412 ^ v413)) ^ v416;
  v418 = v415 ^ v412;
  v419 = v417
       - (((v418 ^ 0xBB601567) + 165158859) ^ ((v418 ^ 0x6A12DDFE) - 659892396) ^ ((v418 ^ 0xD172C899) + 1674232373));
  v420 = v414 - v419 + 1296561490;
  v421 = (((v361 ^ 0x3D508A97) - 1695559451) ^ ((v361 ^ 0x201A160F) - 2019210115) ^ ((v361 ^ 0x4C5CDB86) - 337411594))
       - (((v418 ^ 0xB4970876) + 103744220) ^ ((v418 ^ 0x3C206CB4) - 1902615014) ^ ((v418 ^ 0x88B764C2) + 974089840))
       + 710406943;
  v422 = v402 - v419 + 82153143;
  v423 = v400 ^ 0xF08AB57E;
  v424 = v401 + v420 - 2 * v420 - 1583798443;
  v425 = v423 - v416 - v420 + 302257542;
  v427 = *(_QWORD *)(v44 - 224);
  v426 = *(_QWORD *)(v44 - 216);
  v428 = *(_DWORD *)(a21 + 4 * (v402 - v419 - 73)) ^ *(_DWORD *)(v427 + 4 * BYTE2(v425)) ^ *(_DWORD *)(v426 + 4 * HIBYTE(v424));
  v429 = (((2 * (v428 & 0xAFF6851E ^ 0x20D2850E)) | 0x7F6DF6AE) - (v428 & 0xAFF6851E ^ 0x20D2850E) + 1078527145) ^ 0xBDBECBC7;
  v430 = ((2 * (v428 & 0x50097AE1 ^ 0x80CA1961)) & 0xA1808282) - (v428 & 0x50097AE1 ^ 0x80CA1961) - 2044739918;
  v431 = v430 & 0xC641D095 ^ 0xC2214085 ^ ((v429 - ((2 * v429) & 0xF34E0504) - 106495357) ^ 0x41A11D69) & (v430 ^ 0xE92240EC);
  v432 = a15 ^ *(_DWORD *)(v426 + 4 * HIBYTE(v422)) ^ *(_DWORD *)(a17 + 4 * BYTE1(v425)) & 0x4C66E1B6 ^ *(_DWORD *)(v427 + 4 * BYTE2(v424)) ^ *(_DWORD *)(a21 + 4 * v421) ^ (((2 * (*(_DWORD *)(a17 + 4 * BYTE1(v425)) & 0xB3991E49 ^ 0xD092AB61)) & 0x86324880) - (*(_DWORD *)(a17 + 4 * BYTE1(v425)) & 0xB3991E49 ^ 0xD092AB61) + 1015454507);
  v433 = *(_DWORD *)(a17 + 4 * BYTE1(v424));
  v434 = HIDWORD(a14) ^ *(_DWORD *)(v426 + 4 * HIBYTE(v421)) ^ *(_DWORD *)(v427 + 4 * BYTE2(v422)) ^ *(_DWORD *)(a21 + 4 * v425);
  v435 = *(_DWORD *)(a21 + 4 * v424);
  v436 = v434 ^ v433;
  v437 = HIDWORD(a14) ^ *(_DWORD *)(v427 + 4 * BYTE2(v421)) ^ *(_DWORD *)(a17 + 4 * BYTE1(v422)) ^ *(_DWORD *)(v426 + 4 * HIBYTE(v425));
  v438 = a15 ^ *(_DWORD *)(a17 + 4 * BYTE1(v421)) ^ (((2 * v431) & 0xE21382DE) - v431 + 251018896);
  v439 = (uint64_t)*(&off_1015B46D0 + (*(_DWORD *)(v44 - 228) ^ 0x13BE));
  v440 = 29 * *(unsigned __int8 *)(v439 + (v438 ^ 0x43));
  v441 = *(_QWORD *)(v44 - 192);
  *(_BYTE *)(v441
           + ((((2 * (HIDWORD(v468) ^ 0x4063C800)) & 0x6145D2E0) - (HIDWORD(v468) ^ 0x4063C800u) + 1331500684) ^ 0xBAE349D3)) = v440 ^ 0x41 ^ (v440 >> 2) & 7;
  v442 = v437 ^ v435;
  v443 = (char *)*(&off_1015B46D0 + *(_DWORD *)(v44 - 228) - 4609) - 4;
  *(_BYTE *)(v441 + v469) = v443[HIBYTE(v442) ^ 0x8CLL] ^ 0x93;
  v444 = 29 * *(unsigned __int8 *)(v439 + ((v434 ^ v433) ^ 0x58));
  v445 = (((2 * (HIDWORD(a24) ^ 0xECD68D66)) | 0x24BED0EA) - (HIDWORD(a24) ^ 0xECD68D66) - 308242549) ^ 0x949F8C31;
  *(_BYTE *)(v441 + v470) = v444 ^ 0xC5 ^ (v444 >> 2) & 7;
  v446 = (uint64_t)*(&off_1015B46D0 + *(_DWORD *)(v44 - 228) - 4513);
  *(_BYTE *)(v441 + ((((2 * v445) & 0xBA3FA35C) - v445 + 585117265) ^ 0xFD2BD02ELL)) = *(_BYTE *)(v446
                                                                                                + (((v438 ^ 0xC4E3DD69) >> 16) ^ 0x2ALL)) ^ ((v438 ^ 0xC4E3DD69) >> 16) ^ 0x6D;
  v447 = (char *)*(&off_1015B46D0 + *(_DWORD *)(v44 - 228) - 4221) - 8;
  *(_BYTE *)(v441
           + ((((2 * (v48 & 0xFFFFFFF9 ^ 0x4D743140)) | 0x1E7CC4B0) - (v48 & 0xFFFFFFF9 ^ 0x4D743140) + 1891737000) ^ 0x7797C44FLL)) = v447[BYTE1(v432) ^ 0xA4] ^ 0x60;
  LOBYTE(v444) = v443[BYTE3(v436) ^ 0xD8];
  *(_BYTE *)(v441 + v472) = ((v444 + (v444 ^ 0x1E) + 1) ^ 0xFE) + v444;
  LOWORD(v444) = (v432 & 0x55 ^ 0xDD11) + (v432 & 0xAA ^ 0x21) - 1;
  v448 = 29
       * *(unsigned __int8 *)(v439 + (((v444 & 0x11F ^ 0x14120918) + (v444 & 0x2E0 ^ 0x20040A1) - 1) ^ 0x161248FDLL));
  *(_BYTE *)(v441 + (HIDWORD(v471) ^ 0xB5DD9757)) = v448 ^ 0x5A ^ (v448 >> 2) & 7;
  v449 = ((2 * (HIDWORD(a31) ^ 0x8758C62A)) | 0x91B16898) - (HIDWORD(a31) ^ 0x8758C62A) + 925322164;
  *(_BYTE *)(v441 + (((v449 & 0x1FA77D40 ^ 0x12A06501) + (v449 & 0xE05882BF) - 1) ^ 0xE8FD8039)) = v447[((unsigned __int16)(v442 ^ 0x718F) >> 8) ^ 0x77] ^ 0x63;
  *(_BYTE *)(v441 + v477) = v447[((unsigned __int16)(v436 ^ 0x718F) >> 8) ^ 0xC0] ^ 0x38;
  LOBYTE(v449) = v443[HIBYTE(v438) ^ 0xDALL];
  *(_BYTE *)(v441
           + ((((2 * (v471 ^ 0x3FF43357)) & 0x3FF1E26C) - (v471 ^ 0x3FF43357) + 1611075273) ^ 0xEA2EAAC3)) = v449 + 2 * (v449 & 0x32) - 4 * (v449 & 0x32) + 50;
  v450 = 29 * *(unsigned __int8 *)(v439 + ((v442 ^ 0x8478718F) & 0x5F ^ 0x42 ^ ((v442 ^ 0x8478718F) & 0xA0 | 0x5F)));
  *(_BYTE *)(v441 + v478) = v450 ^ 0x58 ^ (v450 >> 2) & 7;
  v451 = (((2 * (v476 ^ 0x33011F7B)) | 0xFD97D9C6) - (v476 ^ 0x33011F7B) + 20189981) ^ 0x9FD83E72;
  *(_BYTE *)(v441 + ((((2 * v451) & 0xFC38B2AC) - v451 + 31696553) ^ 0xE62CFC1ELL)) = ((v442 ^ 0x8478718F) >> 16) ^ 0x13 ^ *(_BYTE *)(v446 + (((v442 ^ 0x8478718F) >> 16) ^ 0xD7));
  *(_BYTE *)(v441 + v473) = BYTE2(v432) ^ 0x59 ^ *(_BYTE *)(v446 + (BYTE2(v432) ^ 0xF9));
  *(_BYTE *)(v441 + v479) = v447[((unsigned __int16)(v438 ^ 0xDD69) >> 8) ^ 0x8CLL] ^ 0xC1;
  *(_BYTE *)(v441 + v475) = ((v436 ^ 0x8478718F) >> 16) ^ 0x45 ^ *(_BYTE *)(v446
                                                                                        + (((v436 ^ 0x8478718F) >> 16) ^ 0xD7));
  v452 = (((v48 ^ 0x6C287450) - 1814590544) ^ ((v48 ^ 0xBE66A959) + 1100568231) ^ ((v48 ^ 0x67934A5C) - 1737706076))
       - 215643377;
  v453 = (v452 ^ 0xD83FCC55) & (2 * (v452 & 0xC2B80C56)) ^ v452 & 0xC2B80C56;
  v454 = ((2 * (v452 ^ 0x580FD4DD)) ^ 0x356FB116) & (v452 ^ 0x580FD4DD) ^ (2 * (v452 ^ 0x580FD4DD)) & 0x9AB7D88A;
  v455 = v454 ^ 0x8A904889;
  v456 = (v454 ^ 0x10201000) & (4 * v453) ^ v453;
  v457 = ((4 * v455) ^ 0x6ADF622C) & v455 ^ (4 * v455) & 0x9AB7D888;
  v458 = (v457 ^ 0xA974000) & (16 * v456) ^ v456;
  v459 = ((16 * (v457 ^ 0x90209883)) ^ 0xAB7D88B0) & (v457 ^ 0x90209883) ^ (16 * (v457 ^ 0x90209883)) & 0x9AB7D880;
  v460 = v458 ^ 0x9AB7D88B ^ (v459 ^ 0x8A358800) & (v458 << 8);
  v461 = (v460 << 16) & 0x1AB70000 ^ v460 ^ ((v460 << 16) ^ 0x588B0000) & (((v459 ^ 0x1082500B) << 8) & 0x1AB70000 ^ 0x8270000 ^ (((v459 ^ 0x1082500B) << 8) ^ 0x37D80000) & (v459 ^ 0x1082500B));
  v462 = *(_DWORD *)(v44 - 228);
  *(_BYTE *)(v441 + v474) = v443[HIBYTE(v432) ^ 0x6ALL] ^ 0x75;
  v463 = (((v452 ^ (2 * v461) ^ 0x72DC0846) - 30417491) ^ ((v452 ^ (2 * v461) ^ 0x69EB93BF) - 451393962) ^ ((v452 ^ (2 * v461) ^ 0xDDE626B9) + 1360393044))
       + 306206802;
  v464 = HIDWORD(v467) ^ (v463 < 0x5C62C0FD);
  v465 = v463 < *(_DWORD *)(v44 - 256);
  if (v464)
    v465 = HIDWORD(v467);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 184) + 8 * ((13342 * v465) ^ v462)))(448200704, v446, a23, v436, v447, a19, v427, a18, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           v467,
           a21,
           a22,
           a23,
           a24,
           v468,
           v469,
           v470,
           a28,
           v471,
           v472,
           a31,
           a32,
           a33,
           a34,
           a35,
           v473,
           a37,
           v474,
           v475);
}

uint64_t sub_100207A58()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 230)) - 4))();
}

uint64_t sub_100207AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v49;
  uint64_t v52;

  v46 = *(_QWORD *)(v44 - 208);
  v47 = (void (*)(uint64_t))*(&off_1015B46D0 + (int)(v46 ^ 0x1798));
  v49 = v43;
  v52 = v42;
  v47(a7);
  v47(*(_QWORD *)(v44 - 216));
  v47(a3);
  v47(v52);
  v47(v49);
  v47(a6);
  v47(a8);
  v47(a42 - 0xACAB43FB707DACFLL);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v45 + 8 * (int)v46) - 12))(a41);
}

uint64_t sub_100207B44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 24) = (v1 ^ 0xFF7A9FEC) + 465565848 + ((2 * v1) & 0xFEF53FD8);
  return result;
}

void sub_100207BBC(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 2142736129 * ((2 * (a1 & 0x394829A) - (_DWORD)a1 + 2087419237) ^ 0x1F33E96C);
  __asm { BR              X11 }
}

uint64_t sub_100207CA4@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;
  BOOL v4;
  BOOL v6;
  int v8;

  v3 = *(_QWORD *)(a2 - 0x65027DCC5CA6DE1DLL);
  if (*(_QWORD *)(a2 - 0x65027DCC5CA6DE5DLL))
    v4 = *(_QWORD *)(a2 - 0x65027DCC5CA6DE4DLL) == 0;
  else
    v4 = 1;
  v6 = v4 || *(_QWORD *)(a2 - 0x65027DCC5CA6DE2DLL) == 0 || *(_QWORD *)(a2 - 0x65027DCC5CA6DE3DLL) == 0;
  STACK[0xAC8] = v3;
  v8 = !v6 && v3 != 0x3032385379A144E6;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v8 * (v2 + 15106)) ^ v2)))();
}

uint64_t sub_100207D50@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v9;

  v3 = 8 * (v2 ^ 0x1AC7);
  v4 = *(_DWORD *)(a2 - 0x65027DCC5CA6DE45);
  v9 = ((((v3 - 2406) ^ 0x65CFA322) + (*(_DWORD *)(a2 - 0x65027DCC5CA6DE55) ^ 0x9A304C58)) ^ ((*(_DWORD *)(a2 - 0x65027DCC5CA6DE55) ^ 0xEA2762FA)
                                                                                              + 366517510) ^ (((((v3 - 2406) | 0x4354) - 46504217) ^ *(_DWORD *)(a2 - 0x65027DCC5CA6DE55)) + 46482747))
     - 1926392729 < 0x10
    || v4 < 0x11
    || v4 > 0x40
    || *(_DWORD *)(a2 - 0x65027DCC5CA6DE25) == -1926392729
    || *(_DWORD *)(a2 - 0x65027DCC5CA6DE35) == -1926392729;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v9 | (8 * v9)) ^ v3)))();
}

uint64_t sub_100207E4C@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  unsigned int v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8 * (int)((1199 * (*(_DWORD *)(a2 - 0x65027DCC5CA6DE15) == 96)) ^ v2));
  STACK[0x18B0] = v2 ^ 0x10DD;
  return ((uint64_t (*)(void))(v3 - (v2 ^ 0x53D2)))();
}

uint64_t sub_100207E98(uint64_t a1, unint64_t a2, unint64_t a3, int a4, int a5, uint64_t a6, int a7, unint64_t a8)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  LODWORD(STACK[0x1544]) = a5;
  LODWORD(STACK[0xB44]) = a4;
  STACK[0xC00] = a3;
  STACK[0x15B8] = a2;
  STACK[0xC40] = v9;
  LODWORD(STACK[0x124C]) = a7;
  v12 = STACK[0x18B0];
  v14 = v8;
  v15 = (*(uint64_t (**)(_QWORD))(v8 + 8 * (int)(STACK[0x18B0] - 16845)))((((v11 ^ 0x9750003A) + 1756364742) ^ ((v11 ^ 0xA6A22C86) + 1499321210) ^ ((v11 ^ 0xBCDFB8DB) + 1126188837))+ (((a7 ^ 0x5685BED) - 90725357) ^ ((a7 ^ 0x56758BE8) - 1450544104) ^ ((a7 ^ 0xDE304462) + 567262110))+ 442181838);
  LODWORD(STACK[0x15CC]) = v11;
  v16 = *(_QWORD *)(v14 + 8 * (int)(v12 ^ 0x47AF));
  STACK[0x18C8] = v15 + 0x3032385379A144E6;
  STACK[0x18B8] = v16;
  STACK[0x18C0] = a8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (int)v12) - 12))(6566, 1521221632, 580845568, v10);
}

uint64_t sub_100208434(int a1)
{
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  _BOOL4 v15;

  v5 = (((v2 ^ 0x2AB13B0E) - 716258062) ^ ((v2 ^ 0x58764051) - 1484144721) ^ ((v2 ^ 0xFFEAEF38) + 1380552)) - 1491917677;
  v6 = (v5 ^ 0xF6186F95) & (2 * (v5 & 0xE61A6FD5)) ^ v5 & 0xE61A6FD5;
  v7 = ((2 * (v5 ^ 0x7E1CAB15)) ^ 0x300D8980) & (v5 ^ 0x7E1CAB15) ^ (2 * (v5 ^ 0x7E1CAB15)) & v3;
  v8 = ((4 * (v7 ^ 0x88024440)) ^ 0x601B1300) & (v7 ^ 0x88024440) ^ (4 * (v7 ^ 0x88024440)) & v3;
  v9 = (v8 ^ 0x20000) & (16 * ((v7 ^ 0x10008080) & (4 * v6) ^ v6)) ^ (v7 ^ 0x10008080) & (4 * v6) ^ v6;
  v10 = ((16 * (v8 ^ 0x9804C4C0)) ^ 0x806C4C00) & (v8 ^ 0x9804C4C0) ^ (16 * (v8 ^ 0x9804C4C0)) & v3;
  v11 = v9 ^ v3 ^ (v10 ^ 0x800444C0) & (v9 << 8);
  v12 = v5 ^ (2
            * ((v11 << 16) & v4 ^ v11 ^ ((v11 << 16) ^ 0x44C00000) & (((v10 ^ 0x180280C0) << 8) & v4 ^ 0x18020000 ^ (((v10 ^ 0x180280C0) << 8) ^ 0x6C40000) & (v10 ^ 0x180280C0))));
  v13 = (((v12 ^ 0x82FAF839) + 641693173) ^ ((v12 ^ 0xC7ED272C) + 1663609570) ^ ((v12 ^ 0x93003940) + 935703694))
      + 694658578;
  v15 = v13 <= 0x9C3A11AA || v13 >= v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)((v15 * a1) ^ STACK[0x18B0])) - 12))();
}

uint64_t sub_100208A84()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 4))();
}

uint64_t sub_100208B2C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  _BOOL4 v23;

  v14 = (((v9 ^ 0x93CEBBB7) + 1815168073) ^ ((v9 ^ 0x268F512E) - 646926638) ^ ((v9 ^ 0x386C7EFE) - 946634494))
      - 17872437;
  v15 = (v14 ^ 0xEFBE40D9) & (2 * (v14 & 0x8E3E4A9D)) ^ v14 & 0x8E3E4A9D;
  v16 = ((2 * (v14 ^ 0xF7C6D4C1)) ^ 0xF3F13CB8) & (v14 ^ 0xF7C6D4C1) ^ (2 * (v14 ^ 0xF7C6D4C1)) & v11;
  v17 = ((4 * (v16 ^ 0x8088244)) ^ 0xE7E27970) & (v16 ^ 0x8088244) ^ (4 * (v16 ^ 0x8088244)) & v11;
  v18 = ((16 * (v17 ^ 0x1818860C)) ^ 0x9F89E5C0) & (v17 ^ 0x1818860C) ^ (16 * (v17 ^ 0x1818860C)) & (v11 - 12);
  v19 = v18 ^ 0x60701A1C;
  v20 = (v17 ^ 0x61E0185C) & (16 * ((v16 ^ 0x71F01C18) & (4 * v15) ^ v15)) ^ (v16 ^ 0x71F01C18) & (4 * v15) ^ v15 ^ v11 ^ (v18 ^ 0x1988841C) & (((v17 ^ 0x61E0185C) & (16 * ((v16 ^ 0x71F01C18) & (4 * v15) ^ v15)) ^ (v16 ^ 0x71F01C18) & (4 * v15) ^ v15) << 8);
  v21 = v14 ^ (2
             * ((v20 << 16) & a8 ^ v20 ^ ((v20 << 16) ^ 0x1E5C0000) & ((v19 << 8) & a8 ^ 0x1600000 ^ ((v19 << 8) ^ 0x789E0000) & v19)));
  v22 = (((v21 ^ 0x5487D005) + 1797967289) ^ ((v21 ^ 0xF5599475) - 889943607) ^ ((v21 ^ 0xECA13255) - 754176023)) + v12;
  v23 = v22 < a3;
  if (a3 < v10 != v22 < v10)
    v23 = a3 < v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((!v23 * v13) ^ v8)) - 4))();
}

uint64_t sub_100208F8C()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned __int8 v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;

  v2 = LODWORD(STACK[0x124C]) ^ v1;
  v3 = 71 * *(_BYTE *)(STACK[0xC40] + (0xDA461F6B % v2)) - 34;
  v4 = ((-3
                        * *(_BYTE *)(STACK[0xC40]
                                   + (*(_BYTE *)(STACK[0xC40]
                                                                + (*(_BYTE *)(STACK[0xC40]
                                                                                             + (((*(_BYTE *)(STACK[0x18B8] + (v3 ^ 0xB1u) + 22623) - 84) ^ 0x29) - 107)
                                                                                             % v2)
                                                                                  - 123)
                                                                % v2)
                                                     + 80)
                                   % v2)
                        - 65) ^ 0x1B)
     + 880711348;
  v5 = ((2 * (v4 & 0x1B2)) | 0x400) & (v4 ^ 0x1C877A99) ^ v4 & 0x1B2 ^ (((2 * (v4 & 0x1B2)) & 0x120) - 2080106486);
  v6 = (2 * (v4 ^ 0x1C877A99)) & 0x112A ^ 0x44129 ^ ((2 * (v4 ^ 0x1C877A99)) ^ 0x2808E056) & (v4 ^ 0x1C877A99);
  v7 = (4 * v5) & 0xD7057928 ^ v5 ^ ((4 * v5) ^ 0x10086828) & v6;
  v8 = (4 * v6) & 0xD7057928 ^ 0x83001903 ^ ((4 * v6) ^ 0x815E4AC) & v6;
  v9 = (16 * v7) & 0xD7057920 ^ v7 ^ ((16 * v7) ^ 0x40272220) & v8;
  v10 = (16 * v8) & 0xD7057920 ^ 0x8700690B ^ ((16 * v8) ^ 0x705792B0) & v8;
  v11 = v9 ^ 0x4022B29 ^ (v9 << 8) & 0xD7057900 ^ ((v9 << 8) ^ 0x7520200) & v10;
  v12 = *(unsigned __int8 *)(STACK[0x18B8]
                           + (v4 ^ (2
                                  * ((v11 << 16) & 0x57050000 ^ v11 ^ ((v11 << 16) ^ 0x792B0000) & ((v10 << 8) & 0x57050000 ^ 0x52040000 ^ ((v10 << 8) ^ 0x5790000) & v10))) ^ 0xC78AF1E4));
  v13 = v12 ^ (((v12 ^ 0xA0) & (~(v3 ^ 0x40 | v3 ^ 0x10) | 0xAA) & 0xF8) >> 3);
  v14 = (((v13 ^ 0x58) >> 2) | ((_BYTE)v13 << 6)) % v2;
  if (v14 <= 1)
    v15 = 1;
  else
    v15 = v14;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x18C0]
                                                                                                 + 8 * v0))(v0 ^ 0x4980u, -417217688, 0xFFFFFFFFLL, -208608844, v15 - 1, 2368574567, 19);
}

uint64_t sub_1002099DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * (((a5 == v8) * a7) ^ v7)))();
}

uint64_t sub_100209AB4(uint64_t a1)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 + 8 * (int)a1) - 8))(a1, ((_DWORD)a1 - 4934) | 0x5514u, 118, (((_DWORD)a1 - 4934) | 0x5514u) - 95, 102);
}

uint64_t sub_100209B8C@<X0>(int a1@<W0>, int a2@<W8>)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  _BOOL4 v7;

  v5 = a2 + 1 + v3;
  v6 = (v2 < v3) ^ (v5 < v3);
  v7 = v5 < v2;
  if (v6)
    v7 = v2 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((14 * !v7) ^ a1)) - 8))();
}

#error "10020BFB4: call analysis failed (funcsize=2100)"

uint64_t sub_10020BFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  LODWORD(STACK[0x18A0]) = v61;
  LODWORD(STACK[0x18A8]) = v60;
  LODWORD(STACK[0xE2C]) = v59;
  HIDWORD(a18) = v62;
  LODWORD(STACK[0xE48]) = -503620326;
  v63 = STACK[0xD20];
  LODWORD(v69) = LODWORD(STACK[0xD20]) - 6267;
  HIDWORD(v69) = (LODWORD(STACK[0xD20]) + 1145894645) & 0xBBB2FF7D;
  HIDWORD(v68) = HIDWORD(v69) - 628319298;
  LODWORD(v70) = LODWORD(STACK[0xD20]) + 1145894645;
  LODWORD(v68) = v70 ^ 0x444D4AC3;
  HIDWORD(v67) = LODWORD(STACK[0xD20]) + 1459005974;
  LODWORD(v67) = LODWORD(STACK[0xD20]) + 1161669661;
  HIDWORD(v66) = LODWORD(STACK[0xD20]) + 368019641;
  LODWORD(v66) = LODWORD(STACK[0xD20]) - 16618;
  LODWORD(STACK[0xB7C]) = -159809;
  LODWORD(STACK[0xB78]) = 50676102;
  LODWORD(STACK[0xA30]) = v63 - 17145;
  STACK[0xAA0] = (v63 - 691676249) & 0x2939FD7E;
  LODWORD(STACK[0xA2C]) = v63 - 14819;
  LODWORD(STACK[0xA28]) = v63 + 4610;
  LODWORD(STACK[0x111C]) = -2097142376;
  LODWORD(STACK[0x1118]) = -266092673;
  LODWORD(STACK[0xAC4]) = -1739176154;
  LODWORD(v72) = v63 ^ 0x5357;
  LODWORD(STACK[0xA4C]) = v63 - 1429217395;
  LODWORD(STACK[0xA48]) = v63 + 2012117550;
  LODWORD(STACK[0xA44]) = v63 - 11624;
  LODWORD(STACK[0xCA0]) = -1609399274;
  LODWORD(STACK[0xC9C]) = -737148928;
  LODWORD(STACK[0xC98]) = -1767571456;
  LODWORD(STACK[0xAC0]) = 138417513;
  LODWORD(STACK[0xABC]) = 588360967;
  HIDWORD(a38) = v63 - 11691;
  HIDWORD(a17) = 1210058797;
  LODWORD(STACK[0xEAC]) = 704645126;
  LODWORD(STACK[0xE50]) = -2126331513;
  HIDWORD(v72) = v63 - 5056;
  LODWORD(STACK[0xAD4]) = 780206309;
  LODWORD(STACK[0xA9C]) = -660865024;
  LODWORD(STACK[0xB74]) = -1970443022;
  LODWORD(STACK[0xA50]) = 2023431894;
  LODWORD(STACK[0xD58]) = 1009257105;
  LODWORD(STACK[0x1730]) = 344742137;
  LODWORD(STACK[0xD3C]) = 67952407;
  LODWORD(STACK[0xA54]) = 97753050;
  LODWORD(STACK[0xE28]) = -813086017;
  LODWORD(STACK[0xC14]) = 930188189;
  LODWORD(STACK[0xE3C]) = -126484594;
  LODWORD(STACK[0xA58]) = 765078009;
  LODWORD(STACK[0x1434]) = -534817844;
  LODWORD(STACK[0x172C]) = 1316079239;
  LODWORD(STACK[0x1838]) = -789561354;
  LODWORD(STACK[0x13A8]) = -368541181;
  LODWORD(STACK[0xAA8]) = -1445283101;
  LODWORD(STACK[0xE0C]) = 875059980;
  LODWORD(STACK[0x1598]) = 2082294762;
  LODWORD(STACK[0xAAC]) = 515015486;
  LODWORD(STACK[0x1870]) = 1984758128;
  LODWORD(STACK[0x15C8]) = 1492815944;
  LODWORD(STACK[0x1718]) = 1085073557;
  LODWORD(STACK[0x1498]) = 1340965900;
  LODWORD(STACK[0x1834]) = 1287945064;
  STACK[0xCC8] = 0x3032385379A144E6;
  LODWORD(STACK[0x17EC]) = -1823143960;
  LODWORD(STACK[0x17CC]) = -1435016881;
  LODWORD(STACK[0xC64]) = 548735227;
  LODWORD(STACK[0xA5C]) = -370243752;
  LODWORD(STACK[0xAB0]) = 1955076781;
  LODWORD(STACK[0xD78]) = -1938115078;
  LODWORD(STACK[0x16EC]) = -1601643417;
  LODWORD(STACK[0x1154]) = -1485677352;
  LODWORD(STACK[0xE1C]) = -1727840448;
  LODWORD(STACK[0x13B4]) = 473422048;
  HIDWORD(a54) = v63 - 14346;
  LODWORD(STACK[0xAB8]) = -1629159424;
  LODWORD(STACK[0xA40]) = v63 - 5832;
  LODWORD(STACK[0xA3C]) = v63 - 17374;
  LODWORD(STACK[0xA38]) = v63 - 9439;
  LODWORD(STACK[0xA34]) = v63 ^ 0xE5FA8F4E;
  HIDWORD(v71) = v63 + 1451166432;
  LODWORD(v71) = v63 - 13609;
  LODWORD(STACK[0xA20]) = v63 ^ 0xCF9D311;
  LODWORD(STACK[0xA24]) = v63 - 1233496320;
  LODWORD(STACK[0xA1C]) = (v63 - 1233496320) ^ 0xB67A8C77;
  HIDWORD(a59) = -1184890880;
  HIDWORD(v65) = v63 - 8578;
  LODWORD(v65) = 1005380816;
  HIDWORD(v70) = -520781301;
  LODWORD(STACK[0x1738]) = -1926392729;
  LODWORD(STACK[0xDA4]) = 37;
  LODWORD(STACK[0xCE8]) = 13;
  LODWORD(STACK[0x1254]) = 26;
  LODWORD(STACK[0xCE4]) = 251;
  LODWORD(STACK[0x1250]) = 219;
  LODWORD(STACK[0xBFC]) = 121;
  LODWORD(STACK[0xCE0]) = 90;
  LODWORD(STACK[0x1084]) = 168;
  LODWORD(STACK[0xD38]) = 179;
  LODWORD(STACK[0xCB8]) = 19;
  LODWORD(STACK[0x14A4]) = 51;
  LODWORD(STACK[0xC60]) = 230;
  LODWORD(STACK[0xCB4]) = 15;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)((LODWORD(STACK[0x18B0]) - 1738467870) ^ 0x98617ECD ^ (((LODWORD(STACK[0x18B0]) - 1738467870) < 0xE85C8F6D) * ((LODWORD(STACK[0x18B0]) - 8494) ^ 0x170D)))) - 4))(a1, 113168197, 3977991724, 3884974080, LODWORD(STACK[0x1738]), LODWORD(STACK[0xE80]), STACK[0x15B8], LODWORD(STACK[0x1778]), v65, v66, v67, v68, v69, v70, 0x4779C4284779C42ALL, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v71,
           v72,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           0xE57B000081010109);
}

uint64_t sub_10020C664@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  _BOOL4 v17;

  v5 = (((a2 ^ 0x680BA0D6) - 1745592534) ^ (a1 + (a2 ^ 0xF9412C11) + 1194) ^ ((a2 ^ 0x1C6718A0) - 476518560))
     - 174808901;
  v6 = (v5 ^ 0x479AF3A9) & (2 * (v5 & 0x9798F3AD)) ^ v5 & 0x9798F3AD;
  v7 = ((2 * (v5 ^ 0x488B92AB)) ^ 0xBE26C20C) & (v5 ^ 0x488B92AB) ^ (2 * (v5 ^ 0x488B92AB)) & (v4 + 6);
  v8 = v7 ^ 0x41112102;
  v9 = (v7 ^ 0x9E024004) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0x7C4D8418) & v8 ^ (4 * v8) & (v4 + 4);
  v11 = v9 ^ (v4 + 6) ^ (v10 ^ 0x5C010000) & (16 * v9);
  v12 = (16 * (v10 ^ 0x83126106)) & v4 ^ 0xE016106 ^ ((16 * (v10 ^ 0x83126106)) ^ 0xF1361060) & (v10 ^ 0x83126106);
  v13 = (v11 << 8) & v4 ^ v11 ^ ((v11 << 8) ^ 0x13610600) & v12;
  v14 = v5 ^ (2
            * ((v13 << 16) & 0x5F130000 ^ v13 ^ ((v13 << 16) ^ 0x61060000) & ((v12 << 8) & 0xDF130000 ^ 0x4C120000 ^ ((v12 << 8) ^ 0x13610000) & v12)));
  v15 = (((v14 ^ 0xA1CA6CF6) + 1587558096) ^ ((v14 ^ 0x56E881C8) - 1451041806) ^ ((v14 ^ 0x7A9ADC9F) - 2047834457))
      - 1279331919;
  v17 = v15 < 0x26915D4A || v15 >= v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((31590 * v17) ^ a3)) - 4))();
}

uint64_t sub_10020CB30()
{
  int v0;
  int v1;

  LODWORD(STACK[0x1894]) = v1;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * v0))();
}

uint64_t sub_10020CBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  _BOOL4 v22;
  _BOOL4 v23;

  v10 = (((a5 ^ 0x27128999) - 655526297) ^ ((a5 ^ 0xDD97141A) + 577301478) ^ ((a5 ^ 0x77A809E4) - 2007501284))
      - 619930402;
  v11 = (v10 ^ 0xB304F7A2) & (2 * (v10 & 0xB220F78A)) ^ v10 & 0xB220F78A;
  v12 = ((2 * (v10 ^ 0xB70531B2)) ^ 0xA4B8C70) & (v10 ^ 0xB70531B2) ^ (2 * (v10 ^ 0xB70531B2)) & v7;
  v13 = v12 ^ 0x5244208;
  v14 = (v12 ^ 0x18430) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x149718E0) & v13 ^ (4 * v13) & v7;
  v16 = v14 ^ v7 ^ (v15 ^ 0x4050020) & (16 * v14);
  v17 = (16 * (v15 ^ 0x120C618)) & (v7 - 8) ^ 0x5218438 ^ ((16 * (v15 ^ 0x120C618)) ^ 0x525C6380) & (v15 ^ 0x120C618);
  v18 = (v16 << 8) & (v7 - 56) ^ v16 ^ ((v16 << 8) ^ 0x25C63800) & v17;
  v19 = (v18 << 16) & v9 ^ v18 ^ ((v18 << 16) ^ 0x46380000) & ((v17 << 8) & v9 ^ 0x210000 ^ ((v17 << 8) ^ 0x25C60000) & v17);
  v20 = (((v10 ^ (2 * v19) ^ 0x4FFA9458) - 2029288389) ^ ((v10 ^ (2 * v19) ^ 0x840BFD80) + 1291513315) ^ ((v10 ^ (2 * v19) ^ 0x71D21222) - 1188887999))
      - 153575838;
  v21 = (v6 < v8) ^ (v20 < v8);
  v22 = v6 > v20;
  if (v21)
    v23 = v6 < v8;
  else
    v23 = v22;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((2472 * !v23) ^ v5)))();
}

uint64_t sub_10020D180@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  char v3;
  int v4;
  unsigned int v5;
  char v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  char v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  char v134;
  unsigned int v135;
  unsigned __int8 v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;

  v8 = ((v5 >> 13) ^ 0x3CB8B)
     + (v5 ^ 0x79716475)
     + ((((((v5 >> 13) ^ 0x3CB8B) + (v5 ^ 0x79716475)) >> 1)
       + v7
       - ((2 * ((((v5 >> 13) ^ 0x3CB8B) + (v5 ^ 0x79716475)) >> 1)) & 0x1A5B28CE)) ^ 0x72D26B98)
     + 1;
  v9 = (((v8 ^ 0x83694C98) - 1340322068) ^ ((v8 ^ 0x62493F34) + 1362902344) ^ ((v8 ^ 0xA0871A47) - 1812850635))
     - ((v8 ^ 0x41A769EB) >> (((15 - v3) ^ v3) & 0xD))
     - 1504123511;
  v10 = (v9 ^ 0xC482AE9E) & (2 * (v9 & 0xE6D4AEDE)) ^ v9 & 0xE6D4AEDE;
  v11 = ((2 * (v9 ^ 0xC1A2AF9A)) ^ 0x4EEC0288) & (v9 ^ 0xC1A2AF9A) ^ (2 * (v9 ^ 0xC1A2AF9A)) & 0x27760144;
  v12 = v11 ^ 0x21120144;
  v13 = (v11 ^ 0x6640004) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0x9DD80510) & v12 ^ (4 * v12) & 0x27760144;
  v15 = v13 ^ 0x27760144 ^ (v14 ^ 0x5500104) & (16 * v13);
  v16 = (16 * (v14 ^ 0x22260044)) & 0x27760140 ^ 0x160104 ^ ((16 * (v14 ^ 0x22260044)) ^ 0x77601440) & (v14 ^ 0x22260044);
  v17 = (v15 << 8) & 0x27760100 ^ v15 ^ ((v15 << 8) ^ 0x76014400) & v16;
  v18 = v9 ^ (2
            * ((v17 << 16) & 0x27760000 ^ v17 ^ ((v17 << 16) ^ 0x1440000) & ((v16 << 8) & 0x27760000 ^ 0x1760000 ^ ((v16 << 8) ^ 0x76010000) & v16)));
  v19 = (((v18 ^ 0xBCCFE6FE) + 682434865) ^ ((v18 ^ 0x469B1A59) - 755376744) ^ ((v18 ^ 0x1CE450F1) - 2004445376))
      - ((((v18 >> 2) ^ 0xE7171AEF) - 1402381725) ^ (((v18 >> 2) ^ 0x944068E0) - 549574546) ^ (((v18 >> 2) ^ 0x4AFB591A)
                                                                                             + 25500056))
      + 118479363;
  v20 = (v19 ^ 0xFCF7B5FD) & (2 * (v19 & 0xF8F025FD)) ^ v19 & 0xF8F025FD;
  v21 = ((2 * (v19 ^ 0x3D37FDB5)) ^ 0x8B8FB090) & (v19 ^ 0x3D37FDB5) ^ (2 * (v19 ^ 0x3D37FDB5)) & 0xC5C7D848;
  v22 = v21 ^ 0x44404848;
  v23 = (v21 ^ 0x81819000) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0x171F6120) & v22 ^ (4 * v22) & 0xC5C7D848;
  v25 = (v24 ^ 0x5074000) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0xC0C09848)) ^ 0x5C7D8480) & (v24 ^ 0xC0C09848) ^ (16 * (v24 ^ 0xC0C09848)) & 0xC5C7D840;
  v27 = v25 ^ 0xC5C7D848 ^ (v26 ^ 0x44458048) & (v25 << 8);
  v28 = v19 ^ (2
             * ((v27 << 16) & 0x45C70000 ^ v27 ^ ((v27 << 16) ^ 0x58480000) & (((v26 ^ 0x81825848) << 8) & 0xC5C70000 ^ (((v26 ^ 0x81825848) << 8) ^ 0x47D80000) & (v26 ^ 0x81825848) ^ 0x70000)));
  v29 = (((v28 ^ 0xAB11E70) - 1952653178) ^ ((v28 ^ 0xABA9E2EA) + 713301024) ^ ((v28 ^ 0x52E769F7) - 741697789))
      + 423741587;
  v30 = (v29 ^ 0x1EB8375C) & (2 * (v29 & 0x9F390798)) ^ v29 & 0x9F390798;
  v31 = ((2 * (v29 ^ 0x2CE83C4C)) ^ 0x67A277A8) & (v29 ^ 0x2CE83C4C) ^ (2 * (v29 ^ 0x2CE83C4C)) & 0xB3D13BD4;
  v32 = v31 ^ 0x90510854;
  v33 = (v31 ^ 0x21913294) & (4 * v30) ^ v30;
  v34 = ((4 * v32) ^ 0xCF44EF50) & v32 ^ (4 * v32) & 0xB3D13BD4;
  v35 = (v34 ^ 0x83402B44) & (16 * v33) ^ v33;
  v36 = ((16 * (v34 ^ 0x30911084)) ^ 0x3D13BD40) & (v34 ^ 0x30911084) ^ (16 * (v34 ^ 0x30911084)) & 0xB3D13BD0;
  v37 = v35 ^ 0xB3D13BD4 ^ (v36 ^ 0x31113994) & (v35 << 8);
  v38 = v29 ^ (2
             * ((v37 << 16) & 0x33D10000 ^ v37 ^ ((v37 << 16) ^ 0x3BD40000) & (((v36 ^ 0x82C00294) << 8) & 0x33D10000 ^ 0x22C00000 ^ (((v36 ^ 0x82C00294) << 8) ^ 0xD13B0000) & (v36 ^ 0x82C00294))));
  v39 = ((v38 >> 11) ^ 0x13E76E)
      - 1167968933
      + (((v38 ^ 0xC25475C4) + 800943725) ^ ((v38 ^ 0x3F8C3BCE) - 765124505) ^ ((v38 ^ 0x62E33E3A) - 1895160429));
  v40 = (v39 ^ 0x8AAA5FA8) & (2 * (v39 & 0xD2CB5F0C)) ^ v39 & 0xD2CB5F0C;
  v41 = ((2 * (v39 ^ 0x8E2AF1A0)) ^ 0xB9C35D58) & (v39 ^ 0x8E2AF1A0) ^ (2 * (v39 ^ 0x8E2AF1A0)) & 0x5CE1AEAC;
  v42 = v41 ^ 0x4420A2A4;
  v43 = (v41 ^ 0x18410C00) & (4 * v40) ^ v40;
  v44 = ((4 * v42) ^ 0x7386BAB0) & v42 ^ (4 * v42) & 0x5CE1AEAC;
  v45 = (v44 ^ 0x5080AAA0) & (16 * v43) ^ v43;
  v46 = ((16 * (v44 ^ 0xC61040C)) ^ 0xCE1AEAC0) & (v44 ^ 0xC61040C) ^ (16 * (v44 ^ 0xC61040C)) & 0x5CE1AEA0;
  v47 = v45 ^ 0x5CE1AEAC ^ (v46 ^ 0x4C00AA00) & (v45 << 8);
  v48 = v39 ^ (2
             * ((v47 << 16) & 0x5CE10000 ^ v47 ^ ((v47 << 16) ^ 0x2EAC0000) & (((v46 ^ 0x10E1042C) << 8) & 0x5CE10000 ^ 0x1C410000 ^ (((v46 ^ 0x10E1042C) << 8) ^ 0x61AE0000) & (v46 ^ 0x10E1042C))));
  v49 = (v48 ^ 0x72480254) + ((v48 >> 3) ^ 0xF1B6FFB5) + 1;
  v50 = (v48 ^ 0x72480254) + ((v48 >> 3) ^ 0xF1B6FFB5) + 1043157964;
  v51 = (v50 ^ 0xFC89CB55) & (2 * (v50 & 0xFE2DCB45)) ^ v50 & 0xFE2DCB45;
  v52 = ((2 * (v50 ^ 0xF882CD55)) ^ 0xD5E0C20) & (v50 ^ 0xF882CD55) ^ (2 * (v50 ^ 0xF882CD55)) & 0x6AF0610;
  v53 = v52 ^ 0x2A10210;
  v54 = (v52 ^ 0x20E0400) & (4 * v51) ^ v51;
  v55 = ((4 * v53) ^ 0x1ABC1840) & v53 ^ (4 * v53) & 0x6AF0610;
  v56 = v54 ^ 0x6AF0610 ^ (v55 ^ 0x2AC0000) & (16 * v54);
  v57 = (16 * (v55 ^ 0x4030610)) & 0x6AF0610 ^ 0x40F0610 ^ ((16 * (v55 ^ 0x4030610)) ^ 0x6AF06100) & (v55 ^ 0x4030610);
  v58 = (v56 << 8) & 0x6AF0600 ^ v56 ^ ((v56 << 8) ^ 0xAF061000) & v57;
  v59 = v50 ^ (2
             * ((v58 << 16) & 0x6AF0000 ^ v58 ^ ((v58 << 16) ^ 0x6100000) & ((v57 << 8) & 0x6AF0000 ^ 0xA90000 ^ ((v57 << 8) ^ 0xAF060000) & v57)));
  LOBYTE(v50) = (v8 + v7 - ((2 * v8) & 0xCE)) ^ v6;
  v60 = ((2 * (((v59 >> 12) ^ 0x58BD4E39) & (v59 ^ 0x563FC765) ^ v59 & 0x58B279C5)) ^ 0xA064828A)
      + (v59 ^ 0xF370F099 ^ (v59 >> 12));
  v61 = v28 ^ v4;
  v62 = v60 + (v60 >> 8);
  v63 = ((v62 >> 11) ^ 0xFFF2319F)
      - 683489154
      + (((v62 ^ 0xAC742D78) - 1328200298) ^ ((v62 ^ 0x38861BAD) + 606565185) ^ ((v62 ^ 0xFA8135A0) - 434086578));
  v64 = (v63 ^ 0x31C0EBE3) & (2 * (v63 & 0xB5EACBEA)) ^ v63 & 0xB5EACBEA;
  v65 = ((2 * (v63 ^ 0x13957BE7)) ^ 0x4CFF601A) & (v63 ^ 0x13957BE7) ^ (2 * (v63 ^ 0x13957BE7)) & 0xA67FB00C;
  v66 = v65 ^ 0xA2009005;
  v67 = (v65 ^ 0x47F2008) & (4 * v64) ^ v64;
  v68 = ((4 * v66) ^ 0x99FEC034) & v66 ^ (4 * v66) & 0xA67FB00C;
  v69 = v67 ^ 0xA67FB00D ^ (v68 ^ 0x807E8000) & (16 * v67);
  v70 = (16 * (v68 ^ 0x26013009)) & 0xA67FB000 ^ 0x8004B00D ^ ((16 * (v68 ^ 0x26013009)) ^ 0x67FB00D0) & (v68 ^ 0x26013009);
  v71 = (v69 << 8) & 0xA67FB000 ^ v69 ^ ((v69 << 8) ^ 0x7FB00D00) & v70;
  v72 = v63 ^ (2
             * ((v71 << 16) & 0x267F0000 ^ v71 ^ ((v71 << 16) ^ 0x300D0000) & ((v70 << 8) & 0xA67F0000 ^ 0x4F0000 ^ ((v70 << 8) ^ 0x7FB00000) & v70)));
  v73 = v49 + v7 - ((2 * v49) & 0x1A5B28CE);
  v74 = (v72 ^ 0xF56FABF0) + ((v72 >> 6) ^ 0xFC2A4150) + 1;
  v75 = v74 - 204909254;
  v76 = v61 ^ v74;
  v77 = v75 + (v75 >> 15) - ((v75 + (v75 >> 15)) >> 2);
  v78 = ((v77 - 1931312721) ^ 0xBF7C3BD5) & (2 * ((v77 - 1931312721) & 0xBF7943E5)) ^ (v77 - 1931312721) & 0xBF7943E5;
  v79 = ((2 * ((v77 - 1931312721) ^ 0x93BCBB5F)) ^ 0x598BF174) & ((v77 - 1931312721) ^ 0x93BCBB5F) ^ (2 * ((v77 - 1931312721) ^ 0x93BCBB5F)) & 0x2CC5F8BA;
  v80 = v79 ^ 0x2444088A;
  v81 = (v79 ^ 0x8811030) & (4 * v78) ^ v78;
  v82 = ((4 * v80) ^ 0xB317E2E8) & v80 ^ (4 * v80) & 0x2CC5F8B8;
  v83 = (v82 ^ 0x2005E0A2) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0xCC01812)) ^ 0xCC5F8BA0) & (v82 ^ 0xCC01812) ^ (16 * (v82 ^ 0xCC01812)) & 0x2CC5F8B0;
  v85 = v83 ^ 0x2CC5F8BA ^ (v84 ^ 0xC458800) & (v83 << 8);
  v86 = (v77 - 1931312721) ^ (2
                            * ((v85 << 16) & 0x2CC50000 ^ v85 ^ ((v85 << 16) ^ 0x78BA0000) & (((v84 ^ 0x2080701A) << 8) & 0x2CC50000 ^ 0x28050000 ^ (((v84 ^ 0x2080701A) << 8) ^ 0x45F80000) & (v84 ^ 0x2080701A))));
  v87 = (((v86 ^ 0x63C5D024) - 1494939346) ^ ((v86 ^ 0x255D1016) - 528627424) ^ ((v86 ^ 0xF16A72A3) + 877308843))
      - ((((v86 >> 13) ^ 0x466920CC) + 884929730) ^ (((v86 >> 13) ^ 0xAC9241FD) - 565864975) ^ (((v86 >> 13) ^ 0xEAFEDEA4)
                                                                                              - 1742140758));
  v88 = v87 - (v87 >> 6) + v7 - ((2 * (v87 - (v87 >> 6))) & 0x1A5B28CE);
  v89 = (((v88 ^ 0x856C2157) + 2056511145) ^ ((v88 ^ 0xB614CE3D) + 1240150467) ^ ((v88 ^ 0xBE557B0D) + 1101694195))
      - 129395890;
  v90 = (v89 ^ 0xC820F9CC) & (2 * (v89 & 0xED34F20D)) ^ v89 & 0xED34F20D;
  v91 = ((2 * (v89 ^ 0x8841D9C6)) ^ 0xCAEA5796) & (v89 ^ 0x8841D9C6) ^ (2 * (v89 ^ 0x8841D9C6)) & 0x65752BCA;
  v92 = v91 ^ 0x25152849;
  v93 = (v91 ^ 0x40600000) & (4 * v90) ^ v90;
  v94 = ((4 * v92) ^ 0x95D4AF2C) & v92 ^ (4 * v92) & 0x65752BC8;
  v95 = (v94 ^ 0x5542B00) & (16 * v93) ^ v93;
  v96 = ((16 * (v94 ^ 0x602100C3)) ^ 0x5752BCB0) & (v94 ^ 0x602100C3) ^ (16 * (v94 ^ 0x602100C3)) & 0x65752BC0;
  v97 = v95 ^ 0x65752BCB ^ (v96 ^ 0x45502800) & (v95 << 8);
  v98 = v89 ^ (2
             * ((v97 << 16) & 0x65750000 ^ v97 ^ ((v97 << 16) ^ 0x2BCB0000) & (((v96 ^ 0x2025034B) << 8) & 0x65750000 ^ 0x540000 ^ (((v96 ^ 0x2025034B) << 8) ^ 0x752B0000) & (v96 ^ 0x2025034B))));
  LOBYTE(v50) = v50 ^ v62;
  v99 = ((v98 >> 12) ^ 0x655CA) + (v98 ^ 0x655CA59B) - ((((v98 >> 12) ^ 0x655CA) + (v98 ^ 0x655CA59B)) >> 8);
  v100 = a2 & 0xC200108;
  v101 = (v99 ^ 0x905FFB69)
       + ((v99 ^ 0x905FFB69) >> 12)
       + v7
       - ((2 * ((v99 ^ 0x905FFB69) + ((v99 ^ 0x905FFB69) >> 12))) & 0x1A5B28CE);
  v102 = a2 & 0xC200108 ^ 0x1C20099F;
  v103 = v50 ^ v88;
  v104 = ((v101 >> 2) ^ 0x234B6519)
       - 36577932
       + (((v101 ^ 0x7188D569) - 1904792937) ^ ((v101 ^ 0x2D43EF19) - 759426841) ^ ((v101 ^ 0xD1E6AE17) + 773411305));
  v105 = (v104 ^ 0x6E13A4F2) & (2 * (v104 & 0x8F5BB6F3)) ^ v104 & 0x8F5BB6F3;
  v106 = ((2 * (v104 ^ 0x6E36C810)) ^ 0xC2DAFDC6) & (v104 ^ 0x6E36C810) ^ (2 * (v104 ^ 0x6E36C810)) & 0xE16D7EE2;
  v107 = v106 ^ 0x21250221;
  v108 = (v106 ^ 0x40487CC0) & (4 * v105) ^ v105;
  v109 = ((4 * v107) ^ 0x85B5FB8C) & v107 ^ (4 * v107) & 0xE16D7EE0;
  v110 = (v109 ^ 0x81257A80) & (16 * v108) ^ v108;
  v111 = ((16 * (v109 ^ 0x60480463)) ^ 0x16D7EE30) & (v109 ^ 0x60480463) ^ (16 * (v109 ^ 0x60480463)) & 0xE16D7EE0;
  v112 = v110 ^ 0xE16D7EE3 ^ (v111 ^ 0x456E00) & (v110 << 8);
  v113 = (v112 << 16) & 0x616D0000 ^ v112 ^ ((v112 << 16) ^ 0x7EE30000) & (((v111 ^ 0xE12810C3) << 8) & 0x616D0000 ^ (((v111 ^ 0xE12810C3) << 8) ^ 0x6D7E0000) & (v111 ^ 0xE12810C3) ^ 0x10000);
  v114 = ((((2 * (v103 & 0xFE ^ 0x38)) & 0x44444444) - (v103 & 0xFE ^ 0x38) + 200820956) ^ 0x5AE2BA9) - 1;
  v115 = v73 ^ a1 ^ v77 ^ v104 ^ (2 * v113);
  v116 = 696107161 * (v102 + v100);
  v117 = (1926392737
        - (((v115 ^ 0x5B8E8B25) - 1541428343) ^ ((v115 ^ 0xCBDE0BC7) + 877603691) ^ ((v115 ^ 0x1D13CBD7) - 494736517))) ^ 0x1132A1EF;
  v118 = -2 - ((~(v117 & 0xD215DEF2) | 0x80CAE453) + (v117 & 0x8000C452 | 0x7F351BAC));
  v119 = v117 & 0xD215DEF5 ^ 0xDE77033 ^ v118;
  v120 = (v115 ^ 0x8D434B35) & v116;
  LODWORD(STACK[0x1880]) = v120;
  v121 = 16843009
       * (((v114 ^ 0xF8F818C1) - 2072244108) ^ ((v114 ^ 0xFA20495A) - 2036055575) ^ ((v114 ^ 0xC8E32B1) + 1879718404))
       + 570174585;
  LODWORD(STACK[0x18B0]) = v121;
  v122 = (v121 ^ 0x54088ECE) & (2 * (v121 & 0x942CCEEE)) ^ v121 & 0x942CCEEE;
  v123 = ((2 * (v121 ^ 0x74598396)) ^ 0xC0EA9AF0) & (v121 ^ 0x74598396) ^ (2 * (v121 ^ 0x74598396)) & 0xE0754D78;
  v124 = v123 ^ 0x20154508;
  v125 = (v123 ^ 0xC0600870) & (4 * v122) ^ v122;
  v126 = ((4 * v124) ^ 0x81D535E0) & v124 ^ (4 * v124) & 0xE0754D78;
  v127 = (v126 ^ 0x80550560) & (16 * v125) ^ v125;
  v128 = ((16 * (v126 ^ 0x60204818)) ^ 0x754D780) & (v126 ^ 0x60204818) ^ (16 * (v126 ^ 0x60204818)) & 0xE0754D70;
  v129 = v128 ^ 0xE0210878;
  v130 = v127 ^ 0xE0754D78 ^ (v128 ^ 0x544578) & (v127 << 8);
  v131 = v76 ^ v99;
  if (v120)
    v132 = 255;
  else
    v132 = 0;
  LODWORD(STACK[0x17BC]) = v119;
  v133 = v132 << (v118 & 8) << (v119 & 0x17 ^ 7);
  if (v120)
    v134 = ~(_BYTE)v133;
  else
    v134 = 0;
  v135 = (((2 * (((v133 ^ 0x41) - ((2 * v133) & 0x164) + 983558578) ^ 0x399FA2B3)) | 0xB66C7F0)
        - (((v133 ^ 0x41) - ((2 * v133) & 0x164) + 983558578) ^ 0x399FA2B3)
        + 2051841032) ^ 0x86B328B8;
  LODWORD(STACK[0x1878]) = 16843009 * v135;
  LODWORD(STACK[0x1890]) = 16843009 * v135 + v7 - ((33686018 * v135) & 0x1A5B28CE);
  v136 = v134 & (v103 ^ 0x67);
  v137 = (v136 ^ 0xCF) + 1258599514;
  v138 = ((unsigned __int16)((v136 ^ 0xCF) - 19366) ^ 0xF0F6) & (unsigned __int16)(2
                                                                                 * (((v136 ^ 0xCF) - 19366) & 0x1F4 ^ 0xBB02)) & 0x3F8 ^ v137 & 0x1F4 ^ 0x3C9DBB02 ^ ((2 * (v137 & 0x1F4 ^ 0x3C9DBB02)) & 0x8190300 | 0x4008000);
  v139 = ((2 * (v137 ^ 0x8866F0F6)) ^ 0x41224404) & (v137 ^ 0x8866F0F6) ^ ((2 * (v137 ^ 0x8866F0F6)) & 0x840B02 | 0x30002000);
  v140 = v138 ^ v139 & 0xC302261C ^ ((4 * v138) ^ 0xD0B9214) & (v139 ^ 0xC19A202);
  v141 = ((4 * v139) ^ 0xFF7D3E1C) & (v139 ^ 0xC19A202) ^ v139 & 0xC302261C;
  v142 = v140 ^ v141 & 0xCF1BB61C ^ ((16 * v140) ^ 0x6C1063C) & (v141 ^ 0xC19A202);
  v143 = ((16 * v141) ^ 0xE81961C) & (v141 ^ 0xC19A202) ^ v141 & 0xCF1BB61C;
  v144 = v142 ^ v143 & 0xCF1BB61C ^ ((v142 << 8) ^ 0x4B12B41C) & (v143 ^ 0xC19A202);
  v145 = ((v143 << 8) ^ 0xD6B9B61C) & (v143 ^ 0xC19A202) ^ v143 & 0xCF1BB61C;
  v146 = LODWORD(STACK[0x15CC]) ^ v7;
  LODWORD(STACK[0x1860]) = (63
                                           * (*(_BYTE *)(STACK[0x18B8]
                                                       + (v137 ^ (2
                                                                * (v144 ^ v145 & 0x4F1BB61C ^ ((v144 << 16) ^ 0x6419B61C) & (v145 ^ 0x30840000) ^ ((v144 << 16) ^ 0x6419B61C) & 0x3C9DA200)) ^ 0xD5F349F0)) ^ v136 ^ 0xD));
  LODWORD(STACK[0x1898]) = v146;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(STACK[0x18C0] + 8 * v2))((v130 << 16) & 0x60750000 ^ v130 ^ ((v130 << 16) ^ 0x4D780000) & ((v129 << 8) & 0xE0750000 ^ ((v129 << 8) ^ 0x754D0000) & v129 ^ 0x300000), (-1929379840 * v135) & (v131 ^ 0xF3000000) & 0x63000000 ^ 0x608F8041, (-1929379840 * v135) & (v131 ^ 0xF3000000) & 0x9C000000 ^ 0x80500201);
}

uint64_t sub_10020EB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W7>, int a8@<W8>)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;

  v17 = *(unsigned __int8 *)(v8 + v11) * a7;
  v18 = v17 ^ v12;
  v19 = (v18 + v11) >> 16;
  v20 = (v18 + v11 - v19 + ((v18 + (_DWORD)v11 - v19) >> 8)) ^ a6;
  v21 = (v11 + v16 + v18 - v19 + ((v18 + (_DWORD)v11 - v19) >> 8)) ^ a5;
  v22 = (v11 + a8 + v18 - v19 + ((v18 + (_DWORD)v11 - v19) >> 8)) ^ v17;
  v23 = (v22 + v11) >> (((v10 + v13) | v14) + v15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(STACK[0x18C0]
                                                                                       + 8 * (v10 | (8 * (v9 != v11)))))(a1, a2, a3, a4, v21 ^ ((_DWORD)v11 + v16 + v22 - v23 + ((v22 + (_DWORD)v11 - v23) >> 8)), v20 ^ ((_DWORD)v11 + v22 - v23 + ((v22 + (_DWORD)v11 - v23) >> 8)));
}

uint64_t sub_10020EBCC(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;

  LODWORD(STACK[0x1868]) = 2 * a1;
  LODWORD(STACK[0x1888]) = a2 + a3 - 2;
  LODWORD(STACK[0x1708]) = v7 ^ (2 * v8) ^ 0xBF75F67B;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * a7) - 4))((((LODWORD(STACK[0x15CC]) ^ 0x510B9D26) - 1359715622) ^ ((LODWORD(STACK[0x15CC]) ^ 0x74AF7FB9) - 1957658553) ^ ((LODWORD(STACK[0x15CC]) ^ 0xA88976F8) + 1467386120))- 2009497379);
}

uint64_t sub_10020ECD0@<X0>(unsigned int a1@<W0>, unsigned int a2@<W3>, int a3@<W6>, unsigned int a4@<W8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  _BOOL4 v10;
  char v11;
  unsigned int v12;

  v10 = a1 < a4;
  v11 = *(_BYTE *)((*(unsigned __int8 *)(v4 + a2) ^ v5) + v7 + v6);
  v12 = !(v11 & 1) + a2 + (v11 & 1);
  if (v10 == v12 > v8)
    v10 = v12 + a4 < a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((!v10 * v9) ^ a3)) - 4))();
}

uint64_t sub_10020EDB8()
{
  int v0;

  LODWORD(STACK[0x17E0]) = LODWORD(STACK[0x1860]) ^ 0x8D2D9467 ^ LODWORD(STACK[0x1878]);
  LODWORD(STACK[0x1828]) = LODWORD(STACK[0x1880]) ^ 0x8D2D9467;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 8))();
}

uint64_t sub_10020F194(int a1, int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v17;

  v6 = (((a2 ^ 0x6CC21076) - 1824657526) ^ ((a2 ^ 0xC9B05A30) + 911189456) ^ ((a2 ^ 0x285FDE21) - 677371425))
     - 1551034062;
  v7 = (v6 ^ 0xC1AC7336) & (2 * (v6 & 0xE9A07B36)) ^ v6 & 0xE9A07B36;
  v8 = ((2 * (v6 ^ 0x52EC833E)) ^ 0x7699F010) & (v6 ^ 0x52EC833E) ^ (2 * (v6 ^ 0x52EC833E)) & v5;
  v9 = v8 ^ 0x89440808;
  v10 = (v8 ^ (v2 + 1476)) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0xED33E020) & v9 ^ (4 * v9) & v5;
  v12 = ((16 * (v11 ^ 0x124C1808)) ^ 0xB4CF8080) & (v11 ^ 0x124C1808) ^ (16 * (v11 ^ 0x124C1808)) & (v5 - 8);
  v13 = (v11 ^ 0xA900E000) & (16 * v10) ^ v10 ^ v5 ^ (v12 ^ 0xB04C8000) & (((v11 ^ 0xA900E000) & (16 * v10) ^ v10) << 8);
  v14 = v6 ^ (2
            * ((v13 << 16) & 0x3B4C0000 ^ v13 ^ ((v13 << 16) ^ 0x78080000) & (((v12 ^ 0xB007808) << 8) & 0xBB4C0000 ^ 0x33040000 ^ (((v12 ^ 0xB007808) << 8) ^ 0x4CF80000) & (v12 ^ 0xB007808))));
  v15 = (((v14 ^ 0xEEA35223) + 1935192734) ^ ((v14 ^ 0xC0EA228F) + 1561444914) ^ ((v14 ^ 0xC160FB8A) + v3)) + 374265063;
  v17 = v15 > 0x8921407F && v15 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (((32 * v17) | (v17 << 6)) ^ a1)) - 8))();
}

uint64_t sub_10020F5DC()
{
  int v0;

  LODWORD(STACK[0x16C8]) = LODWORD(STACK[0x18B0]) ^ LODWORD(STACK[0x1868]) ^ 0x590BC079;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * v0))();
}

uint64_t sub_10020F6AC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W5>, int a4@<W6>, int a5@<W7>, unsigned int a6@<W8>)
{
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  _BOOL4 v35;
  unsigned int v36;
  BOOL v37;
  int v38;
  int v39;
  uint64_t v40;

  v19 = *(unsigned __int8 *)(v6 + (a1 ^ v15));
  v20 = v19 * a3;
  v21 = ((v19 * a3 + v15 - ((v19 * a4) & a5)) ^ a2) + (a1 ^ v15);
  v22 = v21 + HIWORD(v21) - ((v21 + HIWORD(v21)) >> (((v8 - 88) & 0x7F) - 87));
  v23 = ((v22 - 417217688) ^ v20) + (a1 ^ v15) + ((((v22 - 417217688) ^ v20) + (a1 ^ v15)) >> 16);
  v24 = (v22 - 2135001573 - ((2 * v22 + 119653224) & a5)) ^ v10 ^ (v23 - (v23 >> 8) + v11);
  v25 = (((a1 ^ 0x6BF40341) + v18) ^ ((a1 ^ 0x684D53E6) - 1749898214) ^ ((a1 ^ 0x8E94C4C0) + 1902852928)) - 184004507;
  v26 = (v25 ^ 0x16853702) & (2 * (v25 & 0x98254403)) ^ v25 & 0x98254403;
  v27 = ((2 * (v25 ^ 0x36CF3704)) ^ 0x5DD4E60E) & (v25 ^ 0x36CF3704) ^ (2 * (v25 ^ 0x36CF3704)) & (v16 + 6);
  v28 = v27 ^ v17;
  v29 = (v27 ^ (v13 + 3070)) & (4 * v26) ^ v26;
  v30 = ((4 * v28) ^ 0xBBA9CC1C) & v28 ^ (4 * v28) & (v16 + 4);
  v31 = (v30 ^ 0xAAA84000) & (16 * v29) ^ v29;
  v32 = ((16 * (v30 ^ 0x4423303)) ^ 0xEEA73070) & (v30 ^ 0x4423303) ^ (16 * (v30 ^ 0x4423303)) & v16;
  v33 = v31 ^ (v16 + 7) ^ (v32 ^ 0xAEA23000) & (v31 << 8);
  v34 = v25 ^ (2
             * ((v33 << 16) & v7 ^ v33 ^ ((v33 << 16) ^ 0x73070000) & (((v32 ^ 0x484307) << 8) & v7 ^ 0x4880000 ^ (((v32 ^ 0x484307) << 8) ^ 0x6A730000) & (v32 ^ 0x484307))));
  v35 = v9 < a6;
  v36 = (((v34 ^ 0xF358388E) + v12) ^ ((v34 ^ 0xB67CC40E) + 1163595164) ^ ((v34 ^ 0xC4D15E8D) + 938907417)) + v14;
  v37 = v9 > v36;
  v38 = v35 ^ (v36 < a6);
  v39 = v37;
  v40 = v34 ^ 0xCD8366Au;
  if (!v38)
    v35 = v39;
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x18C0] + 8 * ((21941 * !v35) ^ v8)))(v24, v40);
}

uint64_t sub_10020FB04()
{
  unsigned int v0;
  unsigned int v1;
  unsigned __int8 *v2;
  int v3;
  unint64_t v4;

  v2 = (unsigned __int8 *)(STACK[0x15B8] + (0xD8F5E0D1 % (LODWORD(STACK[0x1544]) ^ v1)));
  v3 = *(_DWORD *)(*(_QWORD *)STACK[0xB50] + (int)(*(_DWORD *)STACK[0xB48] & 0xD75FEFDC));
  v4 = 1772489163
     * ((1772489163 * ((v2 ^ v3) & 0x7FFFFFFF)) ^ ((1772489163 * ((v2 ^ v3) & 0x7FFFFFFF)) >> 16));
  LODWORD(STACK[0x13D0]) = *((unsigned __int8 *)*(&off_1015B46D0 + (v0 ^ 0x49CA)) + (v4 >> 24) - 4) ^ *v2 ^ *((unsigned __int8 *)*(&off_1015B46D0 + (v0 ^ 0x4C84)) + (v4 >> 24) - 7) ^ *((unsigned __int8 *)*(&off_1015B46D0 + (v0 ^ 0x49DD)) + (v4 >> 24) + 3) ^ v4 ^ (107 * (v4 >> 24));
  return (*(uint64_t (**)(uint64_t))(STACK[0x18C0] + 8 * v0))(3977991724);
}

uint64_t sub_1002100FC()
{
  int v0;
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  _BOOL4 v16;

  v4 = (((v2 ^ 0x34C75D6C) - 885480812) ^ ((v2 ^ 0x7BAFD71F) - 2075121439) ^ ((v2 ^ 0xC2451E14) + 1035657708)) + v3;
  v5 = (v4 ^ 0xEAA016FC) & (2 * (v4 & 0xE30A58E1)) ^ v4 & 0xE30A58E1;
  v6 = ((2 * (v4 ^ 0x2CA016BE)) ^ 0x9F549CBE) & (v4 ^ 0x2CA016BE) ^ (2 * (v4 ^ 0x2CA016BE)) & 0xCFAA4E5E;
  v7 = v6 ^ 0x40AA4241;
  v8 = (v6 ^ 0x8C00040C) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0x3EA9397C) & v7 ^ (4 * v7) & 0xCFAA4E5C;
  v10 = (v9 ^ 0xEA80850) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0xC1024603)) ^ 0xFAA4E5F0) & (v9 ^ 0xC1024603) ^ (16 * (v9 ^ 0xC1024603)) & 0xCFAA4E50;
  v12 = v10 ^ 0xCFAA4E5F ^ (v11 ^ 0xCAA04400) & (v10 << 8);
  v13 = v4 ^ (2
            * ((v12 << 16) & 0x4FAA0000 ^ v12 ^ ((v12 << 16) ^ 0x4E5F0000) & (((v11 ^ 0x50A0A0F) << 8) & 0x4FAA0000 ^ 0x45A00000 ^ (((v11 ^ 0x50A0A0F) << 8) ^ 0xAA4E0000) & (v11 ^ 0x50A0A0F))));
  v14 = (((v13 ^ 0xA8FB9A2C) + 979580396) ^ ((v13 ^ 0x16A76EE4) - 2076196572) ^ ((v13 ^ 0x5E163097) - 863068335))
      + 1065340213;
  v16 = v14 > 0xB25238CD && v14 < v1;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((4 * v16) | (16 * v16) | v0)))();
}

uint64_t sub_1002106E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;

  v6 = (((a5 ^ 0xA37E7017) - 777249904) ^ ((a5 ^ 0x995925F3) - 343191956) ^ (((53 * (v5 ^ 0x4B9F)) ^ 0x48F562BD)
                                                                           + (a5 ^ 0x3A2755E4)))
     + 1133490794;
  v7 = (v6 ^ 0xC8502167) & (2 * (v6 & 0xD2840477)) ^ v6 & 0xD2840477;
  v8 = ((2 * (v6 ^ 0x4D58210B)) ^ 0x3FB84AF8) & (v6 ^ 0x4D58210B) ^ (2 * (v6 ^ 0x4D58210B)) & 0x9FDC257C;
  v9 = v8 ^ 0x80442504;
  v10 = (v8 ^ 0x1E100078) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x7F7095F0) & v9 ^ (4 * v9) & 0x9FDC257C;
  v12 = (v11 ^ 0x1F50057C) & (16 * v10) ^ v10;
  v13 = ((16 * (v11 ^ 0x808C200C)) ^ 0xFDC257C0) & (v11 ^ 0x808C200C) ^ (16 * (v11 ^ 0x808C200C)) & 0x9FDC2570;
  v14 = v12 ^ 0x9FDC257C ^ (v13 ^ 0x9DC00500) & (v12 << 8);
  v15 = v6 ^ (2
            * ((v14 << 16) & 0x1FDC0000 ^ v14 ^ ((v14 << 16) ^ 0x257C0000) & (((v13 ^ 0x21C203C) << 8) & 0x1FDC0000 ^ 0x3D80000 ^ (((v13 ^ 0x21C203C) << 8) ^ 0x5C250000) & (v13 ^ 0x21C203C))));
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(STACK[0x18C0] + 8 * v5))(a1, v15, v15 ^ 0x6AA9DAE8);
}

uint64_t sub_100210A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  LODWORD(STACK[0x18B0]) = *(_DWORD *)(*(_QWORD *)STACK[0xB50] + ((a2 ^ 0xFFFFFFFFD75FD784) & *(int *)STACK[0xB48]));
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * a2) - 12))(a1, a2, a4 ^ 0x6D675038, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_100210B44@<X0>(int a1@<W2>, int a2@<W8>)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  _BOOL4 v16;

  v6 = (((a1 ^ 0x3DA9EC23) - 1034546211) ^ ((a1 ^ 0x2318CC2B) - 588827691) ^ ((a1 ^ 0x939CB46F) + 1818446737))
     - 584698878;
  v7 = (v6 ^ 0xAC766244) & (2 * (v6 & 0xB0076066)) ^ v6 & 0xB0076066;
  v8 = ((2 * (v6 ^ 0xCC70E204)) ^ 0xF8EF04C4) & (v6 ^ 0xCC70E204) ^ (2 * (v6 ^ 0xCC70E204)) & (v5 + 2);
  v9 = v8 ^ 0x4108222;
  v10 = (v8 ^ 0x40270000) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0xF1DE0988) & v9 ^ (4 * v9) & v5;
  v12 = ((16 * (v11 ^ 0xC218262)) ^ 0xC7782620) & (v11 ^ 0xC218262) ^ (16 * (v11 ^ 0xC218262)) & v5;
  v13 = (v11 ^ 0x70560002) & (16 * v10) ^ v10 ^ (v5 + 2) ^ (v12 ^ 0x44700200) & (((v11 ^ 0x70560002) & (16 * v10) ^ v10) << 8);
  v14 = ((v13 << 16) ^ 0x2620000) & (((v12 ^ 0x38078042) << 8) & a2 ^ 0x8750000 ^ (((v12 ^ 0x38078042) << 8) ^ 0x77820000) & (v12 ^ 0x38078042));
  v15 = (((v6 ^ (2 * ((v13 << 16) & a2 ^ v13 ^ v14)) ^ 0x7C445018) + 1186619171) ^ ((v6 ^ (2
                                                                                         * ((v13 << 16) & a2 ^ v13 ^ v14)) ^ 0xB8AC0B27)
                                                                                  - 2108554210) ^ ((v6 ^ (2 * ((v13 << 16) & a2 ^ v13 ^ v14)) ^ 0x8CC43F9D)
                                                                                                 - 1237700440))
      + 1288817332;
  v16 = v4 > v15;
  if (v4 < v2 != v15 < v2)
    v16 = v4 < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (((2 * v16) | (8 * v16)) ^ v3)) - 12))();
}

uint64_t sub_100211044(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unint64_t v98;
  char v99;
  char v100;
  char v101;
  unint64_t v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  char v116;
  unsigned __int8 v117;
  unsigned __int8 v118;
  char v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned __int8 v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;
  int v159;
  uint64_t (*v160)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v57 = LODWORD(STACK[0x1890]) ^ LODWORD(STACK[0x1888]);
  v58 = ((a4 ^ 0x5C14F208u) >> (v53 + 97)) + (a4 ^ 0x5C14F208);
  v59 = v58 - (v58 >> 1);
  v60 = (v59 ^ 0x41A769EB) >> 13;
  v61 = (v59 ^ 0x41A769EB) - v60 - (((v59 ^ 0x41A769EB) - v60) >> 2);
  v62 = (v61 + v56 - ((2 * v61) & 0x1A5B28CE)) ^ v55;
  v63 = v61 + 726481860 + ((v61 + 726481860) >> 11) - ((v61 + 726481860 + ((v61 + 726481860) >> 11)) >> 3);
  v64 = v63 + 1012604688 + ((v63 + 1012604688) >> 12) + ((v63 + 1012604688 + ((v63 + 1012604688) >> 12)) >> 8);
  v65 = (v64 ^ 0x6E730375) - ((v64 ^ 0x6E730375) >> 11) - (((v64 ^ 0x6E730375) - ((v64 ^ 0x6E730375) >> 11)) >> 6);
  v66 = v62 ^ v65;
  v67 = v63 + v56 - ((2 * v63) & 0x1A5B28CE);
  v68 = v65 - 204909254 + ((v65 - 204909254) >> 15) - ((v65 - 204909254 + ((v65 - 204909254) >> 15)) >> 2);
  v69 = v68 + 1281082772 - ((v68 + 1281082772) >> 13) - ((v68 + 1281082772 - ((v68 + 1281082772) >> 13)) >> 6);
  v70 = (v59 + v56 - ((2 * v59) & 0x1A5B28CE)) ^ a2 ^ v64 ^ (v69 + v56 - ((2 * v69) & 0x1A5B28CE));
  v71 = v69 + 1481699572 + ((v69 + 1481699572) >> 12) - ((v69 + 1481699572 + ((v69 + 1481699572) >> 12)) >> 8);
  v72 = (v71 >> 12) ^ 0x905FF;
  v73 = 16843009 * (v70 & 0xFE) + 1882592860;
  v74 = (v73 ^ 0x8FC5ED37) & (2 * (v73 & 0x8FC9E9A4)) ^ v73 & 0x8FC9E9A4;
  v75 = ((2 * (v73 ^ 0x83D72D37)) ^ 0x183D8926) & (v73 ^ 0x83D72D37) ^ (2 * (v73 ^ 0x83D72D37)) & 0xC1EC492;
  v76 = v75 ^ 0x4024491;
  v77 = (v75 ^ 0x80C8000) & (4 * v74) ^ v74;
  v78 = ((4 * v76) ^ 0x307B124C) & v76 ^ (4 * v76) & 0xC1EC490;
  v79 = (v78 ^ 0x1A0013) & (16 * v77) ^ v77;
  v80 = ((16 * (v78 ^ 0xC04C493)) ^ 0xC1EC4930) & (v78 ^ 0xC04C493) ^ (16 * (v78 ^ 0xC04C493)) & 0xC1EC490;
  v81 = v79 ^ 0xC1EC493 ^ (v80 ^ 0xC4083) & (v79 << 8);
  v82 = v73 ^ (2
             * ((v81 << 16) & 0xC1E0000 ^ v81 ^ ((v81 << 16) ^ 0x44930000) & (((v80 ^ 0xC128483) << 8) & 0xC1E0000 ^ 0x1A0000 ^ (((v80 ^ 0xC128483) << 8) ^ 0x1EC40000) & (v80 ^ 0xC128483))));
  v83 = v66 ^ v71;
  v84 = (v72 & 0x9C529 ^ 0xF579C529) + (v72 & 0x9C529);
  v85 = v67 ^ v54 ^ v68 ^ (v72 + (v71 ^ 0x905FFB69) + ((v72 + (v71 ^ 0x905FFB69)) >> 2));
  v86 = (((v85 ^ 0xA35DDE55) & 0x6E35086B)
       - ((v85 ^ 0xA35DDE55) & 0x150848)
       + ((v85 ^ 0xA35DDE55) & 0x150848 ^ 0x901548D8)) ^ (v85 ^ 0xA35DDE55) & 0x6E35086C;
  v87 = ((v86 & 0xEEC06B0E ^ 0x4CC0AB06) + (v86 ^ 0xB2004099) - ((v86 ^ 0xB2004099) & 0xEEC0EB0E)) ^ 0x41F8772D;
  v88 = -v85 ^ 0x9634B90D;
  v89 = STACK[0x1898];
  v90 = (((32 * ((0x805CE4FB % v89) & 7)) | ((0x805CE4FB % v89) >> 3)) ^ 0x99) + 1296038066;
  v91 = ((2 * (v90 & 0x9E)) | 0x3000) & (v90 ^ 0x41DA0F8E) ^ v90 & 0x9E ^ ((2 * (v90 & 0x9E)) & 0x1111 | 0x82000400);
  v92 = (2 * (v90 ^ 0x41DA0F8E)) & 0x731A1710 ^ 0x110A1110 ^ ((2 * (v90 ^ 0x41DA0F8E)) ^ 0x4242620) & (v90 ^ 0x41DA0F8E);
  v93 = (4 * v91) & 0xF31A1710 ^ v91 ^ ((4 * v91) ^ 0x8003000) & v92;
  v94 = (4 * v92) & 0x731A1710 ^ 0x33120310 ^ ((4 * v92) ^ 0x4C685C40) & v92;
  v95 = (16 * v93) & 0xF31A1710 ^ v93 ^ ((16 * v93) ^ 0x2001C000) & v94;
  v96 = (16 * v94) & 0xF31A1710 ^ 0xC21A0610 ^ ((16 * v94) ^ 0x31A17100) & v94;
  v97 = v95 ^ 0x51020B10 ^ (v95 << 8) & 0xF31A1700 ^ ((v95 << 8) ^ 0x1C0000) & v96;
  v98 = STACK[0x18B8];
  v99 = -3
      * *(_BYTE *)(a53
                 + (*(unsigned __int8 *)(STACK[0x18B8]
                                       + (v90 ^ (2
                                               * ((v97 << 16) & 0x731A0000 ^ v97 ^ ((v97 << 16) ^ 0x17100000) & ((v96 << 8) & 0x731A0000 ^ 0x61080000 ^ ((v96 << 8) ^ 0x1A170000) & v96))) ^ 0x72D436BE)) ^ 0x38));
  LODWORD(STACK[0x13C0]) = v87;
  v100 = (v60 & 0xBB ^ 0xBB) + (v60 & 0xBB);
  if (v87 == v56)
    v101 = 0;
  else
    v101 = v100;
  v102 = v88 & 0x335A73EC ^ 0xFC043F52 ^ ((v88 & 0x335A73EB) - (v88 & 0x31082320) + (v88 & 0x31082320 ^ 0x7129AB30));
  if (v87 == v56)
    v103 = 0;
  else
    v103 = 255;
  STACK[0x16B8] = v102;
  v104 = v103 << (v102 & 0xF ^ 7);
  v105 = v104;
  v106 = 285212672 * v104 + 1745624187;
  v107 = (v106 ^ 0x97C66D4E) & (2 * (v106 & 0x97000000)) ^ v106 & 0x97000000;
  v108 = (2 * (v106 ^ 0xBBC66D4E)) & 0x2C000002 ^ 0x24000001 ^ ((2 * (v106 ^ 0xBBC66D4E)) ^ 0x584A1114) & (v106 ^ 0xBBC66D4E);
  v109 = (4 * v107) & 0x2C000000 ^ v107 ^ ((HIBYTE(v107) << 26) | 0xC) & v108;
  v110 = (4 * v108) & 0x2C358EC8 ^ 0xC2184C3 ^ ((4 * v108) ^ 0xB0D63B2C) & v108;
  v111 = (16 * v109) & 0x2C358EC0 ^ v109 ^ ((16 * v109) ^ 0xB0) & v110;
  v112 = (16 * v110) & 0x2C358EC0 ^ 0x2C25024B ^ ((16 * v110) ^ 0xC358ECB0) & v110;
  v113 = v111 ^ (v111 << 8) & 0x2C358E00 ^ ((v111 << 8) ^ 0x8B00) & v112 ^ 0x2C350440;
  v114 = (v113 << 16) & 0x2C350000 ^ v113 ^ ((v113 << 16) ^ 0xECB0000) & ((v112 << 8) & 0x2C350000 ^ 0x8310000 ^ ((v112 << 8) ^ 0x358E0000) & v112);
  v115 = v70 ^ v83 ^ v84;
  if (v87 == v56)
    v116 = 0;
  else
    v116 = ~(_BYTE)v104;
  v117 = v70 & v116;
  v118 = v99 ^ 0xFD;
  if (v87 == v56)
    v119 = -69;
  else
    v119 = 0;
  v120 = v118 + 949648360;
  v121 = (2 * (v120 & 0x20C4)) & (v120 ^ 0x15EA3E55) ^ v120 & 0x20C4 ^ ((2 * (v120 & 0x20C4)) & 0x80 | 0x80000601);
  v122 = (2 * (v120 ^ 0x15EA3E55)) & 0xE90 ^ 0x40291 ^ ((2 * (v120 ^ 0x15EA3E55)) ^ 0x25100522) & (v120 ^ 0x15EA3E55);
  v123 = (4 * v121) & 0xD28C1E90 ^ v121 ^ ((4 * v121) ^ 0x181804) & v122;
  v124 = (4 * v122) & 0xD28C1E90 ^ 0x908C0491 ^ ((4 * v122) ^ 0x4A307A44) & v122;
  v125 = (16 * v123) & 0xD28C1E90 ^ v123 ^ ((16 * v123) ^ 0xE1E010) & v124;
  v126 = (16 * v124) & 0xD28C1E90 ^ 0xD20C1681 ^ ((16 * v124) ^ 0x28C1E910) & v124;
  v127 = v125 ^ (v125 << 8) & 0xD28C1E00 ^ ((v125 << 8) ^ 0x8E1E1100) & v126 ^ 0xD00E1080;
  v128 = *(unsigned __int8 *)(v98
                            + (v120 ^ (2
                                     * ((v127 << 16) & 0x528C0000 ^ v127 ^ ((v127 << 16) ^ 0x1E910000) & ((v126 << 8) & 0x528C0000 ^ 0x52800000 ^ ((v126 << 8) ^ 0xC1E0000) & v126))) ^ 0x477E1DE6));
  v129 = ((v128 >> 7) | (2 * v128)) ^ (((v128 >> 7) | (2 * v128)) >> 4) ^ (((v128 >> 7) | (2 * v128)) >> 6) ^ 0xFFFFFFD7;
  v130 = (v115 ^ BYTE2(v115) ^ BYTE1(v115)) ^ HIBYTE(v115) ^ (v101 + v119);
  v131 = *(_BYTE *)(a53 + (((v129 >> 2) | ((_BYTE)v129 << 6)) + 114) % v89) + 28;
  v132 = (((v131 >> 3) | (32 * v131)) ^ 0x99) + 1839458988;
  v133 = (v132 & 0xA4 | ((((v132 & 0xA4) >> 5) & 1) << 6)) ^ (v132 ^ 0x5F7748D0) & (2 * (v132 & 0xA4));
  v134 = (2 * (v132 ^ 0x5F7748D0)) & 0x4274 ^ 0x2614 ^ ((2 * (v132 ^ 0x5F7748D0)) ^ 0x125480E8) & (v132 ^ 0x5F7748D0);
  v135 = (4 * v133) & 0xFFFFFE7F ^ v133 ^ ((4 * v133) | 0x19800) & v134;
  v136 = (4 * v134) & 0xCD2B6E74 ^ 0xC9024624 ^ ((4 * v134) ^ 0x3084A1D0) & v134;
  v137 = (16 * v135) & 0x4D2B6E70 ^ v135 ^ ((16 * v135) ^ 0x16E000) & v136;
  v138 = (16 * v136) & 0xCD2B6E70 ^ 0xD090834 ^ ((16 * v136) ^ 0xD2B6E740) & v136;
  v139 = v137 ^ (v137 << 8) & 0x4D2B6E00 ^ ((v137 << 8) ^ 0x30E0000) & v138 ^ 0xCC226074;
  LOBYTE(v132) = 71
               * ((*(_BYTE *)(a53
                                             + (*(unsigned __int8 *)(v98
                                                                   + (v132 ^ (2
                                                                            * ((v139 << 16) & 0x4D2B0000 ^ v139 ^ ((v139 << 16) ^ 0x6E740000) & ((v138 << 8) & 0x4D2B0000 ^ 0x44010000 ^ ((v138 << 8) ^ 0x2B6E0000) & v138))) ^ 0x904AFA4C)) ^ 0x38u)
                                             % v89)
                                  + 50)
                % v89);
  v140 = v132 + 579709404;
  v141 = (2 * ((v132 - 22052) & 0x385)) & 0x3F8 ^ (v132 - 22052) & 0x385 ^ ((2 * ((v132 - 22052) & 0x385)) | 0x10000) & (v140 ^ 0x99480CCD);
  v142 = (2 * (v140 ^ 0x99480CCD)) & 0x348 ^ 0xA148 ^ ((2 * (v140 ^ 0x99480CCD)) ^ 0x88450690) & (v140 ^ 0x99480CCD);
  v143 = (4 * v141) & 0x443AA348 ^ v141 ^ ((4 * v141) ^ 0x2A000) & v142;
  v144 = (4 * v142) & 0x443AA348 ^ 0x44102248 ^ ((4 * v142) ^ 0x10EA8D20) & v142;
  v145 = v143 ^ (16 * v143) & 0x443AA340 ^ ((16 * v143) ^ 0x208000) & v144 ^ 0x44182B48;
  v146 = (16 * v144) & 0x443AA340 ^ 0x4108348 ^ ((16 * v144) ^ 0x43AA3480) & v144;
  v147 = (v145 << 8) & 0x443AA300 ^ v145 ^ ((v145 << 8) ^ 0x3AA34800) & v146;
  v148 = ((-3
                          * *(_BYTE *)(a53
                                     + ((*(_BYTE *)(v98
                                                                   + (v140 ^ (2
                                                                            * ((v147 << 16) & 0x443A0000 ^ v147 ^ ((v147 << 16) ^ 0x23480000) & ((v146 << 8) & 0x443A0000 ^ 0x44180000 ^ ((v146 << 8) ^ 0x3AA30000) & v146))) ^ 0x5553E915u)) ^ v132 ^ 0xA5)
                                                       - 107))) ^ 0x1B)
       + 840037513;
  v149 = (2 * (v148 & 0x21DD)) & (v148 ^ 0x27953394) ^ v148 & 0x21DD ^ ((2 * (v148 & 0x21DD)) & 0x208 | 0x80620400);
  v150 = (2 * (v148 ^ 0x27953394)) & 0x10648 ^ 0x1249 ^ ((2 * (v148 ^ 0x27953394)) ^ 0x14840492) & (v148 ^ 0x27953394);
  v151 = (4 * v149) & 0xEA7B9648 ^ v149 ^ ((4 * v149) ^ 0x18E0000) & v150;
  v152 = (4 * v150) & 0x6A7B9648 ^ 0x42118649 ^ ((4 * v150) ^ 0x29EE5924) & v150;
  v153 = v151 ^ (16 * v151) & 0xEA7B9640 ^ ((16 * v151) ^ 0x6980000) & v152 ^ 0x680A1649;
  v154 = (16 * v152) & 0xEA7B9640 ^ 0x48429249 ^ ((16 * v152) ^ 0x27B96490) & v152;
  v155 = (v153 << 8) & 0xEA7B9600 ^ v153 ^ ((v153 << 8) ^ 0x7B964900) & v154;
  v156 = (v155 << 16) ^ 0x16490000;
  v157 = (v155 << 16) & 0x6A7B0000;
  v158 = *(unsigned __int8 *)(v98
                            + (v148 ^ (2
                                     * (v157 ^ v155 ^ v156 & ((v154 << 8) & 0x6A7B0000 ^ 0x690000 ^ ((v154 << 8) ^ 0x7B960000) & v154))) ^ 0xC9AF894F));
  STACK[0x1558] = ((((((v158 >> 3) & 0x15 ^ v158) & 0xFC) >> 2) ^ 0x13 | (((v158 >> 3) & 0x15 ^ v158) << 6))
                                  - 72)
                % v89;
  LODWORD(STACK[0x1750]) = v57 ^ 0x1F207DBF;
  LODWORD(STACK[0x1738]) = v82 ^ 0x12FDF4E5;
  if (v87 == v56)
    v159 = 0;
  else
    v159 = -1;
  LODWORD(STACK[0xCD4]) = v159;
  LODWORD(STACK[0x144C]) = (16843009 * v105) ^ v56 ^ v117;
  LODWORD(STACK[0x1500]) = (16843009
                          * (((v130 ^ 0xC7C0868A) - 1257050861) ^ ((v130 ^ 0xB9B65A72) - 882626069) ^ ((v130 ^ 0x7E76DCF8) + 212121441))
                          - 1238828185) ^ 0x36962FDC;
  LODWORD(STACK[0x1890]) = v115 ^ 0xA2BB0A40;
  LODWORD(STACK[0x1740]) = (16843009 * v105) ^ 0x72D26B98 ^ (v106 ^ 0xD79AFE13 ^ (2 * v114)) & v83;
  v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v53) - 4);
  LODWORD(STACK[0x1480]) = STACK[0x18A0];
  LODWORD(STACK[0x1610]) = STACK[0x1718];
  LODWORD(STACK[0x1770]) = STACK[0x13A8];
  LODWORD(STACK[0x17F0]) = -1926392729;
  LODWORD(STACK[0xE4C]) = STACK[0x18A8];
  LODWORD(STACK[0x15DC]) = STACK[0x1434];
  LODWORD(STACK[0x1400]) = STACK[0xD3C];
  LODWORD(STACK[0x1570]) = STACK[0x1730];
  LODWORD(STACK[0x14E4]) = STACK[0x124C];
  return v160(522223039, 212121441, 3412341227, 19, v157, v156, 26083328, v98, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_100211FC0()
{
  int v0;

  LODWORD(STACK[0xD3C]) = STACK[0x1400];
  LODWORD(STACK[0x1434]) = STACK[0x15DC];
  LODWORD(STACK[0x112C]) = STACK[0x1500];
  LODWORD(STACK[0x173C]) = STACK[0x1838];
  LODWORD(STACK[0x1510]) = STACK[0x1708];
  STACK[0x1178] = LODWORD(STACK[0x1870]);
  LODWORD(STACK[0x1660]) = STACK[0x1890];
  LODWORD(STACK[0x1710]) = STACK[0x1834];
  LODWORD(STACK[0x15E4]) = STACK[0x17CC];
  LODWORD(STACK[0x160C]) = STACK[0x1828];
  LODWORD(STACK[0x1648]) = STACK[0x1154];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x18C0] + 8 * v0))(820231114, 274827712, 1640462228, 410115556, 2883570785, 405833825, 2843696904, 1451270392);
}

uint64_t sub_1002120F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  _BOOL4 v35;

  v23 = (((v10 ^ a7) + a8) ^ ((v10 ^ v16) + v17) ^ (((3 * (v8 ^ v15)) ^ v11) + (v10 ^ a5))) + v13;
  v24 = (v23 ^ v12) & (2 * (v23 & v22)) ^ v23 & v22;
  v25 = ((2 * (v23 ^ v14)) ^ a1) & (v23 ^ v14) ^ (2 * (v23 ^ v14)) & a4;
  v26 = v25 ^ 0x8104425;
  v27 = (v25 ^ a2) & (4 * v24) ^ v24;
  v28 = ((4 * v26) ^ a3) & v26 ^ (4 * v26) & a4;
  v29 = (v28 ^ 0x415581) & (16 * v27) ^ v27;
  v30 = ((16 * (v28 ^ a6)) ^ 0x871DDE50) & (v28 ^ a6) ^ (16 * (v28 ^ a6)) & (a4 - 4);
  v31 = v29 ^ (a4 + 1) ^ (v30 ^ 0x11DCA5) & (v29 << 8);
  v32 = v23 ^ (2
             * ((v31 << 16) & v19 ^ v31 ^ ((v31 << 16) ^ v21) & (((v30 ^ 0x186001A5) << 8) & v19 ^ v20 ^ (((v30 ^ 0x186001A5) << 8) ^ 0x71DD0000) & (v30 ^ 0x186001A5))));
  v33 = (((v32 ^ 0x5073E303) - 370421149) ^ ((v32 ^ 0x92853E83) + 723324899) ^ ((v32 ^ 0x9BC8779) - 1339771367))
      - 587418967;
  v35 = v33 > v18 && v33 < v9;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((25813 * v35) ^ v8)))();
}

uint64_t sub_10021229C(unsigned int a1)
{
  int v1;
  int v2;
  uint64_t (*v3)(void);

  v2 = STACK[0xE60];
  LODWORD(STACK[0x1750]) = (LODWORD(STACK[0xE60]) + 383543142) ^ LODWORD(STACK[0x1838]);
  LODWORD(STACK[0x144C]) = LODWORD(STACK[0x1840]) ^ 0x2BFB997E;
  LODWORD(STACK[0x1738]) = LODWORD(STACK[0x1788]) ^ 0x96EE98EC;
  STACK[0x1178] = LODWORD(STACK[0x1238]) ^ a1;
  LODWORD(STACK[0x14E4]) = v1 ^ 0xEA2D9467;
  v3 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * v2);
  LODWORD(STACK[0x160C]) = STACK[0x1828];
  LODWORD(STACK[0x1510]) = STACK[0x1708];
  LODWORD(STACK[0x13C0]) = STACK[0x1780];
  LODWORD(STACK[0x112C]) = STACK[0x1500];
  return v3();
}

uint64_t sub_100212334@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * a1) - 8))(1371013120, 3796876595, 1084244448, 622771689, 1371042288, 1077436491, 2610936615, 286797843);
}

uint64_t sub_100212440@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  _BOOL4 v36;

  v24 = (((v10 ^ v21) - 1777843782) ^ ((v10 ^ v22) + v23) ^ ((((a9 ^ v20) + v16) ^ v10) + a4)) + a7;
  v25 = (v24 ^ v17) & (2 * (v24 & 0xF18DD941)) ^ v24 & 0xF18DD941;
  v26 = ((2 * (v24 ^ v13)) ^ v18) & (v24 ^ v13) ^ (2 * (v24 ^ v13)) & (a5 + 10);
  v27 = v26 ^ 0x50881009;
  v28 = (v26 ^ 0x10B07101) & (4 * v25) ^ v25;
  v29 = ((4 * v27) ^ v19) & v27 ^ (4 * v27) & (a5 + 8);
  v30 = (v29 ^ a3) & (16 * v28) ^ v28;
  v31 = ((16 * (v29 ^ a8)) ^ v11) & (v29 ^ a8) ^ (16 * (v29 ^ a8)) & a5;
  v32 = v30 ^ (a5 + 11) ^ (v31 ^ 0x1180114B) & (v30 << 8);
  v33 = ((v32 << 16) ^ 0x71FB0000) & (((v31 ^ a6) << 8) & a1 ^ 0x41880000 ^ (((v31 ^ a6) << 8) ^ v12) & (v31 ^ a6));
  v34 = (((v24 ^ (2 * ((v32 << 16) & a1 ^ v32 ^ v33)) ^ 0x4B5CA6F8) - 939264040) ^ ((v24 ^ (2
                                                                                          * ((v32 << 16) & a1 ^ v32 ^ v33)) ^ a2)
                                                                                  + 1628498973) ^ ((v24 ^ (2 * ((v32 << 16) & a1 ^ v32 ^ v33)) ^ 0x589E217C)
                                                                                                 - 608079788))
      + v15;
  v35 = (v9 < v14) ^ (v34 < v14);
  v36 = v9 > v34;
  if (v35)
    v36 = v9 < v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((999 * !v36) ^ a9)) - 8))();
}

uint64_t sub_100212604()
{
  int v0;

  LODWORD(STACK[0x1890]) = LODWORD(STACK[0x14E4]) ^ 0x8D2D9467;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 8))();
}

uint64_t sub_1002129E8@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (((v3 == a2) * a1) ^ v2)) - 8))();
}

uint64_t sub_100212A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(STACK[0x18C0] + 8 * (v52 + 10091)))(31597, 4294955685, a3, 2357, a52, a51, a50, STACK[0x15B8]);
}

uint64_t sub_100212B08(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = v7 < v6;
  v9 = v4 + 1 + v6;
  v10 = v8 ^ (v9 < v6);
  v11 = v9 < v7;
  if (!v10)
    v8 = v11;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((!v8 * a4) ^ v5)))();
}

uint64_t sub_100212B88()
{
  int v0;

  LODWORD(STACK[0x1898]) = LODWORD(STACK[0x1544]) ^ 0x8D2D9467;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 12))(993968208);
}

uint64_t sub_100212EE8(int a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  _BOOL4 v41;

  v22 = v13 ^ a4;
  v23 = ((((((_DWORD)a8 + (_DWORD)v22) ^ v12) & 0x7FFFFFFF) * v17) ^ ((((((_DWORD)a8 + (_DWORD)v22) ^ v12) & 0x7FFFFFFFu)
                                                                     * v17) >> 16))
      * v17;
  v24 = (*(_BYTE *)(*(_QWORD *)(v15 + 8 * (v11 - 11082)) - 8 + (v23 >> 24)) ^ *(_BYTE *)(a8 + v22) ^ *(_BYTE *)(*(_QWORD *)(v15 + 8 * (v11 ^ 0x2BB4)) - 12 + ((v11 - 735408549) & 0x2BD57EF5u) - 15022 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + *(_QWORD *)(v15 + 8 * (v11 ^ 0x2B52)) - 12 + 3) ^ v23 ^ (77 * ((((((((_DWORD)a8 + (_DWORD)v22) ^ v12) & 0x7FFFFFFF) * v17) ^ ((((((_DWORD)a8 + (_DWORD)v22) ^ v12) & 0x7FFFFFFFu) * v17) >> 16)) * v17) >> 24)));
  v25 = ((-850548743 * v24 - 1926392729 - ((446386162 * v24) & 0x1A5B28CE)) ^ a1) + v22;
  v26 = v25 + HIWORD(v25) - ((v25 + HIWORD(v25)) >> 8);
  v27 = (((((398740417 - v26) | (v26 + v18)) & v18) + v26 + v18) ^ (-850548743 * v24)) + v22;
  v28 = v27 + HIWORD(v27) - ((v27 + HIWORD(v27)) >> 8) + 925172984;
  v29 = v28 & 0x99526384 ^ (v20 + 1) ^ (v28 ^ 0x91427B95) & (2 * (v28 & 0x99526384));
  LODWORD(v22) = (2 * (v28 ^ 0xA1427A95)) & v20 ^ 0x8100911 ^ ((2 * (v28 ^ 0xA1427A95)) ^ 0x70203222) & (v28 ^ 0xA1427A95);
  v30 = (4 * v29) & v20 ^ v29 ^ ((4 * v29) ^ v8) & v22;
  LODWORD(v22) = (4 * v22) & v20 ^ 0x18101911 ^ ((4 * v22) ^ v8) & v22;
  v31 = (16 * v30) & v20 ^ v30 ^ ((16 * v30) ^ v16) & v22;
  LODWORD(v22) = (16 * v22) & v20 ^ 0x38100801 ^ ((16 * v22) ^ v16) & v22;
  v32 = (((v13 ^ 0xBC11486F) + 1139718033) ^ ((v13 ^ 0x27D6A440) - 668378176) ^ ((v13 ^ 0x16EA7848) - 384464968))
      - 938302017;
  LODWORD(v23) = (v32 ^ 0xB012EC08) & (2 * (v32 & 0xC51AEEA9)) ^ v32 & 0xC51AEEA9;
  v33 = v31 ^ (v10 - 4080) ^ (v31 << 8) & (v20 - 16) ^ ((v31 << 8) ^ 0x10080100) & v22;
  v34 = ((2 * (v32 ^ 0xB0363448)) ^ 0xEA59B5C2) & (v32 ^ 0xB0363448) ^ (2 * (v32 ^ 0xB0363448)) & v21;
  v35 = ((4 * (v34 ^ 0x15244A21)) ^ 0xD4B36B84) & (v34 ^ 0x15244A21) ^ (4 * (v34 ^ 0x15244A21)) & v21;
  LODWORD(v23) = (v35 ^ 0x54204A80) & (16 * ((v34 ^ 0x210890C1) & (4 * v23) ^ v23)) ^ (v34 ^ 0x210890C1) & (4 * v23) ^ v23;
  v36 = ((16 * (v35 ^ 0x210C9061)) ^ 0x52CDAE10) & (v35 ^ 0x210C9061) ^ (16 * (v35 ^ 0x210C9061)) & v21;
  v37 = v32 ^ (2
             * (((v23 ^ (v21 + 1) ^ (v36 ^ 0x500C8A00) & ((_DWORD)v23 << 8)) << 16) & v19 ^ v23 ^ (v21 + 1) ^ (v36 ^ 0x500C8A00) & ((_DWORD)v23 << 8) ^ (((v23 ^ (v21 + 1) ^ (v36 ^ 0x500C8A00) & ((_DWORD)v23 << 8)) << 16) ^ 0x5AE10000) & (((v36 ^ 0x252050E1) << 8) & v19 ^ 0x51240000 ^ (((v36 ^ 0x252050E1) << 8) ^ 0x2CDA0000) & (v36 ^ 0x252050E1))));
  v38 = v28 ^ 0x547FC5C1 ^ (2
                          * ((v33 << 16) & v9 ^ v33 ^ ((v33 << 16) ^ 0x19110000) & (((_DWORD)v22 << 8) & v9 ^ 0x28000000 ^ (((_DWORD)v22 << 8) ^ 0x10190000) & v22)));
  v39 = (((v37 ^ 0xA02F28BE) + 1576933454) ^ ((v37 ^ 0xCA48DE86) + 932834934) ^ ((v37 ^ 0xE564AD53) + 414555553))
      - 2055035362;
  v41 = v39 <= 0xF85511B6 || v39 >= v14;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * ((27274 * v41) ^ v11)) - 12))(v38);
}

uint64_t sub_100213388()
{
  unint64_t v0;
  unsigned int v1;
  unint64_t v2;
  unint64_t v3;

  STACK[0x18A0] = v3;
  STACK[0x18A8] = v2;
  STACK[0x18B0] = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v1) - 12))();
}

uint64_t sub_10021346C@<X0>(int a1@<W0>, unsigned int a2@<W3>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  _BOOL4 v46;

  v20 = v9 ^ a2;
  v21 = ((((((_DWORD)v15 + (_DWORD)v20) ^ v7) & 0x7FFFFFFF) * v14) ^ ((((((_DWORD)v15 + (_DWORD)v20) ^ v7) & 0x7FFFFFFFu)
                                                                     * v14) >> 16))
      * v14;
  LODWORD(v21) = (*(_BYTE *)(v12 + (v21 >> 24)) ^ *(_BYTE *)(v15 + v20) ^ *(_BYTE *)(v6 + (v21 >> 24)) ^ *(_BYTE *)(v16 + (v21 >> 24)) ^ v21 ^ (-127 * BYTE3(v21)))
               * ((v8 - 7803) ^ 0xCD4DBBC0)
               - 1720801344;
  v22 = (v21 ^ 0x46C51D6C) & (2 * (v21 & 0x66915840)) ^ v21 & 0x66915840;
  v23 = ((2 * (v21 ^ 0xCEE5ADEC)) ^ 0x50E9EB58) & (v21 ^ 0xCEE5ADEC) ^ (2 * (v21 ^ 0xCEE5ADEC)) & v3;
  v24 = v23 ^ 0xA81414A4;
  v25 = (v23 ^ 0x40E100) & (4 * v22) ^ v22;
  v26 = ((4 * v24) ^ 0xA1D3D6B0) & v24 ^ (4 * v24) & v3;
  v27 = (v26 ^ 0xA050D4A0) & (16 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x824210C)) ^ (v18 + 2194)) & (v26 ^ 0x824210C) ^ (16 * (v26 ^ 0x824210C)) & (v3 - 12);
  v29 = v27 ^ v3 ^ (v28 ^ 0x8044502C) & (v27 << 8);
  LODWORD(v21) = v21 ^ (2
                      * ((v29 << 16) & v4 ^ v29 ^ ((v29 << 16) ^ 0x75AC0000) & (((v28 ^ 0x2830A52C) << 8) & v4 ^ (((v28 ^ 0x2830A52C) << 8) ^ 0x74F50000) & (v28 ^ 0x2830A52C) ^ 0x8000000))) ^ 0xFB1D277F;
  v30 = (v21 ^ a1) + v20 + (((v21 ^ a1) + v20) >> 16);
  v31 = ((v30 - (v30 >> 8) - ((2 * (v30 - (v30 >> 8)) + 15651064) & 0x1A5B28CE) + 1571093731) ^ v21) + v20;
  LODWORD(v20) = v31 + HIWORD(v31) - ((v31 + HIWORD(v31)) >> 8);
  v32 = ((v20 - 339837938) ^ 0xF0B6EE6C) & (2 * ((v20 - 339837938) & 0xE4B8EC6E)) ^ (v20 - 339837938) & 0xE4B8EC6E;
  LODWORD(v21) = ((2 * ((v20 - 339837938) ^ 0x31872EEC)) ^ 0xAA7F8504) & ((v20 - 339837938) ^ 0x31872EEC) ^ (2 * ((v20 - 339837938) ^ 0x31872EEC)) & (a3 + 2);
  v33 = v21 ^ 0x55004282;
  LODWORD(v21) = (v21 ^ 0x80278000) & (4 * v32) ^ v32;
  v34 = ((4 * v33) ^ 0x54FF0A08) & v33 ^ (4 * v33) & a3;
  LODWORD(v21) = (v34 ^ 0x543F0200) & (16 * v21) ^ v21;
  v35 = ((16 * (v34 ^ 0x8100C082)) ^ 0x53FC2820) & (v34 ^ 0x8100C082) ^ (16 * (v34 ^ 0x8100C082)) & a3;
  v36 = (((v9 ^ 0x902D91C7) + 1876061753) ^ ((v9 ^ 0xA2CD45B6) + 1563605578) ^ ((v9 ^ 0xBFCD4016) + 1077067754))
      - 1362931835;
  v37 = (v36 ^ 0x9E4922F2) & (2 * (v36 & 0xDE6A44E3)) ^ v36 & 0xDE6A44E3;
  LODWORD(v21) = v21 ^ (a3 + 2) ^ (v35 ^ 0x513C0000) & ((_DWORD)v21 << 8);
  v38 = ((2 * (v36 ^ 0x64922B6)) ^ 0xB046CCAA) & (v36 ^ 0x64922B6) ^ (2 * (v36 ^ 0x64922B6)) & v5;
  v39 = ((4 * (v38 ^ 0x48212255)) ^ v19) & (v38 ^ 0x48212255) ^ (4 * (v38 ^ 0x48212255)) & v5;
  v40 = (v39 ^ 0x40010051) & (16 * ((v38 ^ 0x90020441) & (4 * v37) ^ v37)) ^ (v38 ^ 0x90020441) & (4 * v37) ^ v37;
  v41 = ((16 * (v39 ^ 0x98226601)) ^ 0x82366550) & (v39 ^ 0x98226601) ^ (16 * (v39 ^ 0x98226601)) & (v5 - 4);
  v42 = v40 ^ (v5 + 1) ^ (v41 ^ 0x80226400) & (v40 << 8);
  v43 = v36 ^ (2
             * ((v42 << 16) & v11 ^ v42 ^ ((v42 << 16) ^ 0x66550000) & (((v41 ^ 0x58010205) << 8) & v11 ^ 0x58010000 ^ (((v41 ^ 0x58010205) << 8) ^ 0x23660000) & (v41 ^ 0x58010205))));
  v44 = (v20 - 339837938) ^ (2
                           * (((_DWORD)v21 << 16) & 0x553F0000 ^ v21 ^ (((_DWORD)v21 << 16) ^ 0x42820000) & (((v35 ^ 0x8403C282) << 8) & 0xD53F0000 ^ 0x403D0000 ^ (((v35 ^ 0x8403C282) << 8) ^ 0x3FC20000) & (v35 ^ 0x8403C282))));
  LODWORD(v21) = (((v43 ^ 0xB9C45FE9) + 624475193) ^ ((v43 ^ 0xAC5DDEA4) + 815873398) ^ ((v43 ^ 0xFBB70904) + 1733028566))
               + v17;
  v45 = (v10 < v13) ^ (v21 < v13);
  v46 = v21 < v10;
  if (v45)
    v46 = v10 < v13;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * ((115 * !v46) ^ v8)) - 12))(v44 ^ 0x43EEFD0Du);
}

uint64_t sub_1002139D4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 12))();
}

uint64_t sub_100213F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  _BOOL4 v29;

  v18 = (((v12 ^ 0x6B7023A9) - 1802511273) ^ ((v12 ^ v15) - 496576103) ^ ((v12 ^ 0xFBC491A9) + v16)) - 1712326175;
  v19 = (v18 ^ 0xFA399876) & (2 * (v18 & v13)) ^ v18 & v13;
  v20 = ((2 * (v18 ^ 0x3E7B887E)) ^ 0x9A8C25F2) & (v18 ^ 0x3E7B887E) ^ (2 * (v18 ^ 0x3E7B887E)) & v8;
  v21 = (v20 ^ 0x88040031) & (4 * v19) ^ v19;
  v22 = ((4 * (v20 ^ v14)) ^ 0x35184BE4) & (v20 ^ v14) ^ (4 * (v20 ^ v14)) & v8;
  v23 = (v22 ^ 0x50002E9) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0xC8461019)) ^ v17) & (v22 ^ 0xC8461019) ^ (16 * (v22 ^ 0xC8461019)) & (v8 - 8);
  v25 = v23 ^ (v8 + 1) ^ (v24 ^ 0xC4400200) & (v23 << 8);
  v26 = v18 ^ (2
             * ((v25 << 16) & v9 ^ v25 ^ ((v25 << 16) ^ 0x12F90000) & (((v24 ^ 0x9061069) << 8) & v9 ^ 0x9440000 ^ (((v24 ^ 0x9061069) << 8) ^ 0x46120000) & (v24 ^ 0x9061069))));
  v27 = (((v26 ^ 0x5CD07DAA) + 1194568008) ^ ((v26 ^ a8) + 1518646858) ^ ((v26 ^ 0x7486A07B) + a7)) + 1749983660;
  v29 = v27 <= 0xDB210D44 || v27 >= v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((20491 * v29) ^ v10)) - 12))();
}

uint64_t sub_1002142EC()
{
  int v0;

  return (*(uint64_t (**)(void))(STACK[0x18C0]
                              + 8
                              * ((v0 + 1527260394) ^ 0x5B087DBB ^ (17884 * ((v0 + 1527260394) > 0xE9439698)))))();
}

uint64_t sub_100214424()
{
  int v0;
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  _BOOL4 v23;

  v12 = (((v2 ^ 0xB1E81437) + 1310190537) ^ ((v2 ^ 0x9AA219B6) + 1700652618) ^ ((v2 ^ 0xA66799E6) + 1503159834))
      - 820200852;
  v13 = (v12 ^ 0xBE8899FF) & (2 * (v12 & 0xBE10D9FC)) ^ v12 & 0xBE10D9FC;
  v14 = ((2 * (v12 ^ 0xEAA81ACF)) ^ 0xA9718666) & (v12 ^ 0xEAA81ACF) ^ (2 * (v12 ^ 0xEAA81ACF)) & (v10 + 2);
  v15 = (v14 ^ (v8 + 530)) & (4 * v13) ^ v13;
  v16 = ((4 * (v14 ^ (v6 + 269))) ^ v11) & (v14 ^ (v6 + 269)) ^ (4 * (v14 ^ (v6 + 269))) & v10;
  v17 = ((16 * (v16 ^ 0x418C333)) ^ 0x4B8C3330) & (v16 ^ 0x418C333) ^ (16 * (v16 ^ 0x418C333)) & v10;
  v18 = v17 ^ 0x1430C003;
  v19 = (v16 ^ 0x50A00013) & (16 * v15) ^ v15 ^ (v10 + 3) ^ (v17 ^ 0x40880303) & (((v16 ^ 0x50A00013) & (16 * v15) ^ v15) << 8);
  v20 = v12 ^ (2
             * ((v19 << 16) & v3 ^ v19 ^ ((v19 << 16) ^ 0x43330000) & ((v18 << 8) & v3 ^ v4 ^ ((v18 << 8) ^ 0x38C30000) & v18)));
  v21 = (((v20 ^ 0xF8E56E68) + v7) ^ ((v20 ^ 0x1F177089) - 87800692) ^ ((v20 ^ 0x70F3417B) + v9)) + 1894595854;
  v22 = (v1 < v5) ^ (v21 < v5);
  v23 = v21 < v1;
  if (v22)
    v23 = v1 < v5;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((30497 * !v23) ^ v0)))();
}

uint64_t sub_1002147D4()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 + 3879)) - 12))();
}

uint64_t sub_1002151C0@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  _BOOL4 v32;

  v20 = (((v11 ^ 0x10DCA20E) + v7) ^ ((v11 ^ 0xA6C22036) + v8) ^ ((v11 ^ 0x3B33165F) - 993203807)) - 65125192;
  v21 = (v20 ^ 0xD48F4FA5) & (2 * (v20 & a6)) ^ v20 & a6;
  v22 = ((2 * (v20 ^ v19)) ^ 0xCF3020AA) & (v20 ^ v19) ^ (2 * (v20 ^ v19)) & a5;
  v23 = v22 ^ (a3 + 3853);
  v24 = (v22 ^ v6) & (4 * v21) ^ v21;
  v25 = ((4 * v23) ^ 0x9E604154) & v23 ^ (4 * v23) & a5;
  v26 = (v25 ^ (a1 + 64)) & (16 * v24) ^ v24;
  v27 = ((16 * (v25 ^ a4)) ^ v16) & (v25 ^ a4) ^ (16 * (v25 ^ a4)) & (a5 - 4);
  v28 = v26 ^ (a5 + 1) ^ (v27 ^ 0x61800005) & (v26 << 8);
  v29 = v20 ^ (2
             * ((v28 << 16) & v12 ^ v28 ^ ((v28 << 16) ^ v14) & (((v27 ^ (a2 + 4005)) << 8) & v12 ^ 0x67880000 ^ (((v27 ^ (a2 + 4005)) << 8) ^ 0x98100000) & (v27 ^ (a2 + 4005)))));
  v30 = (((v29 ^ v15) - 459429235) ^ ((v29 ^ 0x67F55CC3) + v13) ^ ((v29 ^ 0xF1BA9DD7) + v17)) + v18;
  v32 = v30 <= 0x740C9A98 || v10 <= v30;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((105 * v32) ^ v9)) - 12))();
}

uint64_t sub_1002153E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v7) - 12))(a1, a2, a3, a4, a5, a6, a7, 1064304640);
}

uint64_t sub_1002154D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  BOOL v27;
  int v28;
  _BOOL4 v29;

  v18 = ((v16 + (v11 ^ 0x5D0A422) + 591) ^ ((v11 ^ 0x3BDD81F5) - 1004372469) ^ ((v11 ^ 0xB320B1B0) + 1289702992))
      - 779839278;
  v19 = (v18 ^ 0x3388F3D7) & (2 * (v18 & 0xBBA8FB96)) ^ v18 & 0xBBA8FB96;
  v20 = ((2 * (v18 ^ 0x4D880DB)) ^ 0x7EE0F69A) & (v18 ^ 0x4D880DB) ^ (2 * (v18 ^ 0x4D880DB)) & v8;
  v21 = ((4 * (v20 ^ 0x81100945)) ^ 0xFDC1ED34) & (v20 ^ 0x81100945) ^ (4 * (v20 ^ 0x81100945)) & v8;
  v22 = (v21 ^ v15) & (16 * ((v20 ^ 0x3E70730D) & (4 * v19) ^ v19)) ^ (v20 ^ 0x3E70730D) & (4 * v19) ^ v19;
  v23 = ((16 * (v21 ^ 0x2301249)) ^ 0xF707B4D0) & (v21 ^ 0x2301249) ^ (16 * (v21 ^ 0x2301249)) & (v8 - 12);
  v24 = v22 ^ (v8 + 1) ^ (v23 ^ v17) & (v22 << 8);
  v25 = v18 ^ (2
             * ((v24 << 16) & a8 ^ v24 ^ ((v24 << 16) ^ v13) & (((v23 ^ 0x8704B0D) << 8) & a8 ^ (((v23 ^ 0x8704B0D) << 8) ^ 0x707B0000) & (v23 ^ 0x8704B0D) ^ 0xF000000)));
  v26 = (((v25 ^ 0xB8FCD29) + v14) ^ ((v25 ^ 0xAED2547F) + 1875391212) ^ ((v25 ^ 0x1695945A) - 678432049)) + 2146512243;
  v27 = v10 > v26;
  v28 = (v10 < v12) ^ (v26 < v12);
  v29 = v27;
  if (v28)
    v29 = v10 < v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((35 * v29) ^ v9)) - 12))();
}

uint64_t sub_10021591C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v45) - 12))(2402023657, 21633, 4294953107, 2, 376907661, 3918059635, a45, 2368574567);
}

uint64_t sub_100216058@<X0>(int a1@<W0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W7>, unsigned int a8@<W8>)
{
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  _BOOL4 v18;

  v15 = (a4 & ~(v12 << (v11 + a3)))
      + (v12 ^ (a7 - 1))
      + a7
      - ((2 * ((a4 & ~(v12 << (v11 + a3))) + (v12 ^ (a7 - 1)))) & 0x1A5B28CE);
  v16 = v13 + (((v15 ^ a5) + a6) ^ ((v15 ^ v8) + v9) ^ ((v15 ^ v14) + a1)) + 3982;
  v18 = v16 <= a8 || v10 <= v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((v18 * a2) ^ v11)) - 12))();
}

uint64_t sub_1002160D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;

  LODWORD(STACK[0x147C]) = a7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (v47 - 1431)) - 12))(a1, 4294963053, 3402255874, 1172545760, STACK[0xC00], 1212753154, a47, 2591554297);
}

uint64_t sub_1002161D0@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, int a5@<W7>, unsigned int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  _BOOL4 v32;

  v21 = (((v10 ^ 0x3535B1FE) + a2) ^ ((v10 ^ 0x371BBEA) + v18) ^ (((v8 + a1) | v15) + (v10 ^ v20) + 1150696478))
      - 1162501777;
  v22 = (v21 ^ a5) & (2 * (v21 & 0xD277F2F9)) ^ v21 & 0xD277F2F9;
  v23 = ((2 * (v21 ^ 0x1A3EDFFB)) ^ 0x90925A04) & (v21 ^ 0x1A3EDFFB) ^ (2 * (v21 ^ 0x1A3EDFFB)) & (v6 + 2);
  v24 = v22 ^ (v6 + 2) ^ (v23 ^ 0x80002802) & (4 * v22);
  v25 = (4 * (v23 ^ a4)) & v6 ^ (v7 + 2306) ^ ((4 * (v23 ^ a4)) ^ 0x2124B408) & (v23 ^ a4);
  v26 = (16 * v24) & v6 ^ v24 ^ ((16 * v24) ^ v11) & v25;
  v27 = (16 * v25) & v6 ^ (a4 + 2048) ^ ((16 * v25) ^ v11) & v25;
  v28 = (v26 << 8) & v6 ^ v26 ^ ((v26 << 8) ^ v12) & v27;
  v29 = ((v28 << 16) ^ 0x2D020000) & ((v27 << 8) & v7 ^ ((v27 << 8) ^ v17) & v27 ^ 0x400000);
  v30 = (((v21 ^ (2 * ((v28 << 16) & v19 ^ v28 ^ v29)) ^ 0xF5C663BA) + a3) ^ ((v21 ^ (2 * ((v28 << 16) & v19 ^ v28 ^ v29)) ^ 0x7DD393F5)
                                                                            + v13) ^ ((v21 ^ (2
                                                                                            * ((v28 << 16) & v19 ^ v28 ^ v29)) ^ v14)
                                                                                    - 87581736))
      + 603689220;
  v31 = (v9 < a6) ^ (v30 < a6);
  v32 = v30 < v9;
  if (v31)
    v32 = v9 < a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((!v32 * v16) ^ v8)) - 12))();
}

uint64_t sub_1002163B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(STACK[0x18C0] + 8 * v7))(a1, 1772489163, a3, a4, a5, LODWORD(STACK[0xB44]), a7, 165048608);
}

uint64_t sub_100216454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v11 = (((v8 ^ 0xA4F97E62) + 1527153054) ^ ((v8 ^ 0x403D304B) - 1077751883) ^ ((v8 ^ 0x69E9DA4E) - 1776933454))
      - 1926392728;
  if ((((v8 ^ 0xA4F97E62) + 1527153054) ^ ((v8 ^ 0x403D304B) - 1077751883) ^ ((v8 ^ 0x69E9DA4E) - 1776933454)) == 0x72D26B9F)
    v11 = 8;
  v12 = ((((v11 - 1926392729 - ((2 * v11) & 0x1A5B28CE)) ^ 0xD9E20641) + 639498687) ^ (((v11
                                                                                       - 1926392729
                                                                                       - ((2 * v11) & 0x1A5B28CE)) ^ 0xBD43CFEF)
                                                                                     + v9) ^ (((v11
                                                                                              - 1926392729
                                                                                              - ((2 * v11) & 0x1A5B28CE)) ^ 0xE98C5DC9)
                                                                                            + v10))
      + 1568005615;
  v13 = (a6 > 0x2FB7B677) ^ (v12 < 0xD0484988);
  v14 = v12 < v6;
  if (v13)
    v14 = a6 > 0x2FB7B677;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((31 * !v14) ^ v7)))();
}

uint64_t sub_100216798(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  char v48;
  int v49;
  char v50;
  unint64_t v51;
  char v52;
  __int16 v53;
  unsigned int v54;
  char v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  char *v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  char *v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  char *v99;
  char *v100;
  char v101;
  char *v102;

  v49 = *(_DWORD *)(*(_QWORD *)STACK[0xB50] + (int)(*(_DWORD *)STACK[0xB48] & 0xD75FEFDC));
  v50 = *(_BYTE *)(a5 + 7);
  v51 = ((((v49 ^ a26) & 0x7FFFFFFF) * a2) ^ ((((v49 ^ a26) & 0x7FFFFFFFu) * a2) >> 16)) * a2;
  v52 = *(_BYTE *)(a47 + (v51 >> 24)) ^ v50 ^ *(_BYTE *)((v51 >> 24) + a46 + 1) ^ *(_BYTE *)(a45
                                                                                           + (v47 ^ 0xCA1u)
                                                                                           - 11818
                                                                                           + (v51 >> 24)) ^ v51 ^ (89 * ((((((v49 ^ a26) & 0x7FFFFFFF) * a2) ^ ((((v49 ^ a26) & 0x7FFFFFFFu) * a2) >> 16)) * a2) >> 24)) ^ v48;
  v53 = (v52 & 2) + 26304 + (v52 & 0x3F ^ 0x33) - ((v52 & 0x3F ^ 0x33) & 2);
  v54 = (v53 & 0x44 ^ 0xC2887005) + (v53 & 0x3BB) - 1;
  v55 = v54 ^ 0x91;
  v56 = (((v54 ^ 0x87A44D38) + 939414604) ^ ((v54 ^ 0x26429662) - 1776775406) ^ ((v54 ^ 0x636EA9B1) - 751521597))
      - 1468919193;
  v57 = (v56 ^ 0xF6B343A4) & (2 * (v56 & 0xE4BB8B85)) ^ v56 & 0xE4BB8B85;
  v58 = ((2 * (v56 ^ 0xFFF640A6)) ^ 0x369B9646) & (v56 ^ 0xFFF640A6) ^ (2 * (v56 ^ 0xFFF640A6)) & 0x1B4DCB22;
  v59 = v58 ^ 0x9444921;
  v60 = (v58 ^ 0x1A080301) & (4 * v57) ^ v57;
  v61 = ((4 * v59) ^ 0x6D372C8C) & v59 ^ (4 * v59) & 0x1B4DCB20;
  v62 = (v61 ^ 0x9050803) & (16 * v60) ^ v60;
  v63 = ((16 * (v61 ^ 0x1248C323)) ^ 0xB4DCB230) & (v61 ^ 0x1248C323) ^ (16 * (v61 ^ 0x1248C323)) & 0x1B4DCB20;
  v64 = v62 ^ 0x1B4DCB23 ^ (v63 ^ 0x104C8200) & (v62 << 8);
  v65 = v56 ^ (2
             * ((v64 << 16) & 0x1B4D0000 ^ v64 ^ ((v64 << 16) ^ 0x4B230000) & (((v63 ^ 0xB014903) << 8) & 0x1B4D0000 ^ 0x12040000 ^ (((v63 ^ 0xB014903) << 8) ^ 0x4DCB0000) & (v63 ^ 0xB014903))));
  v66 = STACK[0x18B8];
  STACK[0x1898] = (unint64_t)*(&off_1015B46D0 + v47 - 6298)
                + 256 * (unint64_t)((*(_BYTE *)(STACK[0x18B8] + (v65 ^ 0xC4221DC3)) ^ 2) - 28);
  v67 = (((v54 ^ 0x902C2284) + 544619499) ^ ((v54 ^ 0xE582BD25) + 1440261196) ^ ((v54 ^ 0xB726ED57) + 125629498))
      - 1684588046;
  v68 = (v67 ^ 0xF9046634) & (2 * (v67 & 0xF19660B6)) ^ v67 & 0xF19660B6;
  v69 = ((2 * (v67 ^ 0xD800A75C)) ^ 0x532D8FD4) & (v67 ^ 0xD800A75C) ^ (2 * (v67 ^ 0xD800A75C)) & 0x2996C7EA;
  v70 = v69 ^ 0x2892402A;
  v71 = (v69 ^ 0x2000C7C2) & (4 * v68) ^ v68;
  v72 = ((4 * v70) ^ 0xA65B1FA8) & v70 ^ (4 * v70) & 0x2996C7E8;
  v73 = (v72 ^ 0x201207A2) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x984C042)) ^ 0x996C7EA0) & (v72 ^ 0x984C042) ^ (16 * (v72 ^ 0x984C042)) & 0x2996C7E0;
  v75 = v73 ^ 0x2996C7EA ^ (v74 ^ 0x904464A) & (v73 << 8);
  LODWORD(v65) = (v65 ^ ((((v54 ^ 0x8D) - 1) ^ ((v54 ^ 0x6E) + 30) ^ ((v54 ^ 8) + 124))
                                                         + ((6
                                                           - 2
                                                           * (((v54 ^ 0x8D) - 1) ^ ((v54 ^ 0x6E) + 30) ^ ((v54 ^ 8) + 124))) & 0xE)
                                                         + 5)) & 0x20;
  v76 = (v65 - 1926392729 - 2 * v65 - 4) ^ v54 ^ 0x4030291;
  v77 = (char *)*(&off_1015B46D0 + v47 - 8079)
      + 256
      * (unint64_t)((*(_BYTE *)(v66
                                                      + (v67 ^ (2
                                                              * ((v75 << 16) & 0x29960000 ^ v75 ^ ((v75 << 16) ^ 0x47EA0000) & (((v74 ^ 0x2092814A) << 8) & 0x29960000 ^ 0x29100000 ^ (((v74 ^ 0x2092814A) << 8) ^ 0x16C70000) & (v74 ^ 0x2092814A)))) ^ 0xA1BFEF62)) ^ ((v54 ^ 0xC8) - 74)) ^ 0x8Fu);
  v78 = (((v76 ^ 0x9FA67A74) - 1496123934) ^ ((v76 ^ 0xD8B1A57B) - 507172113) ^ ((v76 ^ 0xCB13B02) + 902149272))
      - 1704865689;
  v79 = (v78 ^ 0xF889790F) & (2 * (v78 & 0xF2CC61AE)) ^ v78 & 0xF2CC61AE;
  v80 = ((2 * (v78 ^ 0x5D997853)) ^ 0x5EAA33FA) & (v78 ^ 0x5D997853) ^ (2 * (v78 ^ 0x5D997853)) & 0xAF5519FC;
  v81 = v80 ^ 0xA1550805;
  v82 = (v80 ^ 0xE0001F8) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ 0xBD5467F4) & v81 ^ (4 * v81) & 0xAF5519FC;
  v84 = (v83 ^ 0xAD5401E0) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0x2011809)) ^ 0xF5519FD0) & (v83 ^ 0x2011809) ^ (16 * (v83 ^ 0x2011809)) & 0xAF5519F0;
  v86 = v84 ^ 0xAF5519FD ^ (v85 ^ 0xA5511900) & (v84 << 8);
  v87 = (char *)*(&off_1015B46D0 + v47 - 7813)
      + 1024 * (unint64_t)((*(_BYTE *)(v66 + (v54 ^ 0xC28872DE)) - 115) ^ 0x4Du);
  LOBYTE(v74) = (71
               * (*(_BYTE *)(v66
                           + (v78 ^ (2
                                   * ((v86 << 16) & 0x2F550000 ^ v86 ^ ((v86 << 16) ^ 0x19FD0000) & (((v85 ^ 0xA04002D) << 8) & 0x2F550000 ^ 0x2A440000 ^ (((v85 ^ 0xA04002D) << 8) ^ 0x55190000) & (v85 ^ 0xA04002D)))) ^ 0xBECC5254)) ^ v54 ^ 0xA4)) ^ 0xB1;
  v88 = *(_BYTE *)((v54 ^ 0xC28872D4) + v66 + 3079) ^ v54 ^ 0xDBu;
  v89 = (((v54 ^ 0x909B0F82) + 549525193) ^ ((v54 ^ 0x850DF4BE) + 894954997) ^ ((v54 ^ 0xD71E89EE) + 1732546725))
      + 163036429;
  v90 = (v89 ^ 0xFB61FA3D) & (2 * (v89 & 0x8375E321)) ^ v89 & 0x8375E321;
  v91 = ((2 * (v89 ^ 0xFF0ABA3D)) ^ 0xF8FEB238) & (v89 ^ 0xFF0ABA3D) ^ (2 * (v89 ^ 0xFF0ABA3D)) & 0x7C7F591C;
  v92 = v91 ^ 0x4014904;
  v93 = (v91 ^ 0x187E1008) & (4 * v90) ^ v90;
  v94 = ((4 * v92) ^ 0xF1FD6470) & v92 ^ (4 * v92) & 0x7C7F591C;
  v95 = (v94 ^ 0x707D4010) & (16 * v93) ^ v93;
  v96 = ((16 * (v94 ^ 0xC02190C)) ^ 0xC7F591C0) & (v94 ^ 0xC02190C) ^ (16 * (v94 ^ 0xC02190C)) & 0x7C7F5910;
  v97 = v95 ^ 0x7C7F591C ^ (v96 ^ 0x44751100) & (v95 << 8);
  v98 = (v97 << 16) & 0xFC7FFFFF ^ v97 ^ ((v97 << 16) ^ 0x591C0000) & (((v96 ^ 0x380A481C) << 8) & 0x7C7F0000 ^ 0x260000 ^ (((v96 ^ 0x380A481C) << 8) ^ 0x7F590000) & (v96 ^ 0x380A481C));
  v99 = (char *)*(&off_1015B46D0 + (v47 ^ 0x2396))
      + 1024 * (unint64_t)(((*(_BYTE *)(v66 + v74 + 22623) - 84) ^ 0x29) - 107);
  v100 = (char *)*(&off_1015B46D0 + (v47 ^ 0x25FD)) + 256 * v88;
  v101 = (v55 ^ 0x96) + *(_BYTE *)(v66 + (v89 ^ (2 * v98) ^ 0xCBB35119));
  LODWORD(STACK[0x18B0]) = v49;
  v102 = (char *)*(&off_1015B46D0 + v47 - 6815) + 256 * (unint64_t)((v101 + 120) ^ 0xAAu);
  LODWORD(v88) = LODWORD(STACK[0xB44]) < 0x12;
  STACK[0x1468] = STACK[0x1898] - 4;
  STACK[0xB08] = (unint64_t)(v77 - 12);
  STACK[0xCF8] = (unint64_t)(v87 - 8);
  STACK[0x17D0] = (unint64_t)(v99 - 4);
  STACK[0x17F8] = (unint64_t)(v100 - 12);
  STACK[0xC38] = (unint64_t)(v102 - 12);
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v47 ^ (23 * (int)v88))))();
}

uint64_t sub_100217C88()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  _BOOL4 v17;

  v5 = (((v1 ^ 0x2D450FB4) - 759500724) ^ ((v1 ^ 0x2A1EB558) - 706655576) ^ ((v1 ^ 0x8A762E8B) + 1971966325))
     - 1353392522;
  v6 = (v5 ^ 0xD9D425F2) & (2 * (v5 & 0xDDD8B5F2)) ^ v5 & 0xDDD8B5F2;
  v7 = ((2 * (v5 ^ 0xFA6546D6)) ^ 0x4F7BE648) & (v5 ^ 0xFA6546D6) ^ (2 * (v5 ^ 0xFA6546D6)) & v3;
  v8 = v7 ^ 0x20841124;
  v9 = (v7 ^ 0x721E224) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0x9EF7CC90) & v8 ^ (4 * v8) & v3;
  v11 = (v10 ^ 0x6B5C000) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x21083324)) ^ 0x7BDF3240) & (v10 ^ 0x21083324) ^ (16 * (v10 ^ 0x21083324)) & (v3 - 4);
  v13 = v11 ^ v3 ^ (v12 ^ 0x239D3200) & (v11 << 8);
  v14 = v5 ^ (2
            * ((v13 << 16) & v2 ^ v13 ^ ((v13 << 16) ^ 0x73240000) & (((v12 ^ 0x420C124) << 8) & v2 ^ 0x20C0000 ^ (((v12 ^ 0x420C124) << 8) ^ 0x3DF30000) & (v12 ^ 0x420C124))));
  v15 = (((v14 ^ 0x76DB292B) - 790490870) ^ ((v14 ^ 0xCB433C23) + 1836712962) ^ ((v14 ^ 0x697346B2) - 817201519))
      - 304032835;
  v16 = (LODWORD(STACK[0xB44]) > 0x9F4CC0A9) ^ (v15 < 0x60B33F56);
  v17 = v4 > v15;
  if (v16)
    v17 = LODWORD(STACK[0xB44]) > 0x9F4CC0A9;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((23 * !v17) ^ v0)))();
}

_QWORD *sub_100218240@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  unint64_t v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unint64_t v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  unint64_t v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;

  STACK[0xC30] = v6;
  v7 = STACK[0x17F8];
  v8 = (1056964608
      * (*(unsigned __int8 *)((*(unsigned __int8 *)(v7 + (BYTE2(v3) ^ 0x2DLL)) ^ 0x12) + STACK[0x18B8] + 41218) ^ 9)) | *(unsigned __int8 *)(v7 + (HIBYTE(v3) ^ 0x8DLL)) | (*(unsigned __int8 *)(v7 + (BYTE1(v3) ^ 0x94)) << 16);
  v9 = v5 ^ 0xE32FAF2F ^ (((*(unsigned __int8 *)(STACK[0x17F8]
                                               + ((1503703077
                                                 - (v3 ^ 0x87 | 0x59A0B025)
                                                 + (v3 ^ 0x87 | 0xA65F4FDA)) ^ 0xA65F4F3A)) << 8) ^ 0xE32FAF2F) & ~v8 | v8 & 0x1CD000D0);
  v10 = (v9 ^ a2) + a1 - ((2 * (v9 ^ a2)) & 0x1A5B28CE);
  v11 = ((v10 ^ v2) + a1 - ((2 * (v10 ^ v2)) & 0x1A5B28CE)) ^ v3;
  v12 = *(unsigned __int8 *)(STACK[0x17F8] + (HIBYTE(v11) ^ 1));
  v13 = ((*(unsigned __int8 *)(STACK[0x17F8] + BYTE1(v11)) << 16) ^ 0x48CCB04A) & (v12 ^ 0x4FFFB04A) ^ (v12 & 0xB5 | 0x7320000);
  v14 = (v13 ^ 0x30004F81) & ((*(unsigned __int8 *)(STACK[0x17F8] + v11) << 8) ^ 0x791A85C3) ^ v13 & 0x6E5103C;
  v15 = v14 & 0x6C0351DF ^ 0xE8015011 ^ (v14 ^ 0x80002A20) & ((*(unsigned __int8 *)(STACK[0x17F8] + BYTE2(v11)) << 24) ^ 0x13FCAE20);
  v16 = (((2 * v15) & 0xDC1E357E) - v15 + 301000000) ^ 0xB229EDD;
  v17 = v16 ^ v10;
  v18 = (v17 + a1 - ((2 * v17) & 0x1A5B28CE)) ^ v11;
  v19 = v18 ^ 0x8F2D9467;
  v20 = *(unsigned __int8 *)(STACK[0x17F8] + (v19 >> 24));
  v21 = (unsigned __int16)(*(unsigned __int8 *)(v7 + (v18 ^ 0x67u)) << 8) | ((63 * (*(_BYTE *)(STACK[0x18B8] + (*(_BYTE *)(v7 + ((unsigned __int16)(v18 ^ 0x9467) >> 8)) ^ ((v11 & 0xA3 ^ 0xA3) + (v11 & 0xA3)) ^ 0xB1u) + 41218) ^ 9)) << 16) | (*(unsigned __int8 *)(v7 + ((v18 ^ 0x8C2D9467) >> 16)) << 24) | v20;
  v22 = (v21 - 1926392729 - 2 * (v21 & 0xD2D9477 ^ v20 & 0x10)) ^ v9;
  v23 = v2 ^ 0x8D2D9467 ^ v17 ^ (v22 - 1926392729 - ((2 * v22) & 0x1A5B28CE));
  v24 = (v19 - 1926392729 - 2 * (v19 & 0xD2D947F ^ v18 & 0x18)) ^ v23;
  v25 = *(unsigned __int8 *)(STACK[0x17F8]
                           + (((v18 ^ 0x67) + 103 - 2 * ((v18 ^ 0x67) & 0x7F ^ v18 & 0x18)) ^ v23));
  v26 = *(unsigned __int8 *)(STACK[0x17F8] + (HIBYTE(v24) ^ 6));
  v27 = *(unsigned __int8 *)(STACK[0x17F8] + BYTE2(v24)) << 24;
  v28 = ((*(unsigned __int8 *)(STACK[0x17F8] + BYTE1(v24)) << 16) ^ 0x9D3FE3AF) & ((v25 << 8) ^ 0xDFFFFFBF) & 0xFFFFE3FF | (((v25 >> 2) & 7) << 10);
  v29 = (((v28 & 0x12AA900 ^ 0x12AA100) + (v28 ^ 0x42401C10) - ((v28 ^ 0x42401C10) & 0x812AA995)) ^ 0xFFB98C43) & ~v27 | v27 & 0x5E000000;
  v30 = (((v29 & 0x62741F65 ^ 0x60741E65) + (v29 & 0x9D8BE09A ^ 0x10020003) - 1) ^ 0x1FFAA89D) & ~v26 | v26 & 0x6C;
  v31 = ((v30 & 0xAC3571F7 ^ 0x8C2511B0) + (v30 ^ 0x7018684F) - ((v30 ^ 0x7018684F) & 0xAC3571F7)) ^ 0x124D752B;
  v32 = (v31 - 1926392729 - ((2 * v31) & 0x1A5B28CE)) ^ v16;
  v33 = (v32 - 1926392729 - ((2 * v32) & 0x1A5B28CE)) ^ v2;
  v34 = v33 - 1926392729 - ((2 * v33) & 0x1A5B28CE);
  v35 = v34 ^ v23;
  v36 = v35 ^ 0x1000000;
  v37 = ((v35 ^ 0x1000000) - 1926392729 - 2 * ((v35 ^ 0x1000000) & 0xD2D947F ^ v35 & 0x18)) ^ v24;
  v38 = v37 ^ 0x862D9467;
  LODWORD(v19) = *(unsigned __int8 *)(STACK[0x17F8] + (v37 ^ 0x67u)) << 8;
  v39 = *(unsigned __int8 *)(STACK[0x17F8] + ((v37 ^ 0x8B2D9467) >> 16)) << 24;
  v40 = (((((((*(unsigned __int8 *)(STACK[0x17F8] + ((unsigned __int16)(v37 ^ 0x9467) >> 8)) << 16) ^ 0x9327276A) & (v19 ^ 0xB7FFE7FA) | v19 & 0xD800) ^ 0xE1D865BB)
         - 1) ^ 0x5B15218A) & ~v39 | v39 & 0xD6000000) ^ 0x94150404;
  v41 = v22 ^ v32 ^ 0x5786FC78 ^ (((-1846178026 - (v40 | 0x91F58F16) + (v40 | 0x6E0A70E9)) ^ 0x95E7FA8) & ~*(unsigned __int8 *)(v7 + (v38 >> 24)) | *(_BYTE *)(v7 + (v38 >> 24)) & 0xE0);
  v42 = v36 ^ v34 ^ v41;
  v43 = v34 ^ v41 ^ 0x982D9467;
  v44 = v38 ^ v42;
  LODWORD(v38) = v38 ^ v42 ^ 0x952D9467;
  v45 = (((2 * (v38 ^ 0x9E)) & 0xD4) - (v38 ^ 0x9E) - 1892107883) ^ 0xCF2E992C;
  LOBYTE(v32) = (*(_BYTE *)(((71
                                             * ((v44 ^ 0x18000000u) >> (((v44 & 0x18 ^ 0x18)
                                                                       - ((2 * (v44 & 0x18 ^ 0x18)) & 0x20)
                                                                       + 115) & 0xF8 ^ 0x70 | v44 & 0x18))) ^ 0xB1u)
                          + STACK[0x18B8]
                          + 22623)
               - 84) ^ 0x29;
  v46 = (*(unsigned __int8 *)(v7 + (BYTE1(v38) ^ 0x94)) << 16) | (*(unsigned __int8 *)(v7
                                                                                       + ((763965951
                                                                                         - (v45 | 0x2D8931FF)
                                                                                         + (v45 | 0xD276CE00)) ^ 0x9260EE40)) << 8) | *(unsigned __int8 *)(v7 + (v32 - 107));
  v47 = ((*(unsigned __int8 *)(STACK[0x17F8] + (BYTE2(v38) ^ 0x2DLL)) << 24) ^ 0xF503C306) & ~v46 | v46 & 0xFC3CF9;
  v48 = ((v47 & 0xC1181AA6 ^ 0xC1100207) + (v47 & 0x3EE7E559) - 1) ^ v41 ^ 0xB93E5567;
  v49 = v48 - 1926392729 - ((2 * v48) & 0x1A5B28CE);
  v50 = v42 ^ 0x972D9467 ^ ((v43 ^ v49) - 1926392729 - ((2 * (v43 ^ v49)) & 0x1A5B28CE));
  v51 = (v50 - 1926392729 - ((2 * v50) & 0x1A5B28CE)) ^ v38;
  LODWORD(v38) = ((-3 * *(_BYTE *)(STACK[0x17F8] + (HIBYTE(v51) ^ 0x3DLL))) ^ 0xFD) + 1524585611;
  v52 = (2 * (v38 & 0x21)) & (v38 ^ 0xB81239DD) ^ 0x82040E8 ^ (v38 & 0x21 | 0x15107114 | (2 * (v38 & 0x21)) & 0x40);
  LODWORD(v19) = ((2 * (v38 ^ 0xB81239DD)) ^ 0x224461F8) & (v38 ^ 0xB81239DD) ^ (2 * (v38 ^ 0xB81239DD)) & 0x10241FC;
  v53 = v19 & 0x2864CA8 ^ v52 ^ ((4 * v52) ^ 0x7A7B9B58) & (v19 ^ 0x1C3271F8);
  LODWORD(v19) = ((4 * v19) ^ 0x7E7F9B48) & (v19 ^ 0x1C3271F8) ^ v19 & 0x2864CA8;
  v54 = v53 ^ v19 & 0xEB65CA8 ^ ((16 * v53) ^ 0x1EA449E8) & (v19 ^ 0xC3250AC);
  LODWORD(v19) = ((16 * v19) ^ 0xCD935628) & (v19 ^ 0xC3250AC) ^ v19 & 0xEB65CA8;
  v55 = v54 ^ v19 & 0xEB65CA8 ^ ((v54 << 8) ^ 0x3DC7A0A8) & (v19 ^ 0xC3250FC);
  LODWORD(v19) = (((_DWORD)v19 << 8) ^ 0x3CE6F4A8) & (v19 ^ 0xC3250FC) ^ v19 & 0xEB65CA8;
  LODWORD(v38) = *(unsigned __int8 *)(STACK[0x18B8]
                                    + (v38 ^ (2
                                                          * (v55 ^ v19 & 0xEB65CA8 ^ ((v55 << 16) ^ 0x2FE25CA9) & (v19 ^ 0x11010000) ^ ((v55 << 16) ^ 0x2FE25CA9) & 0x1D3350A8)) ^ 0x9F47ABD9));
  LODWORD(v38) = ((v38 >> 7) | (2 * v38)) ^ (((v38 >> 7) | (2 * v38)) >> 6) ^ (((v38 >> 7) | (2 * v38)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(v38) = ((v38 >> 2) | ((_DWORD)v38 << 6)) & 0x8A | (~((v38 >> 2) | (unsigned __int16)((_WORD)v38 << 6)) | 0xFFFFFE00) & ((*(unsigned __int8 *)(STACK[0x17F8] + BYTE1(v51)) << 16) ^ 0x8ED4675);
  LODWORD(v38) = (v38 ^ 0x1610B988) & ((*(unsigned __int8 *)(STACK[0x17F8] + v51) << 8) ^ 0x16B598E9) ^ v38 & 0x84A0216;
  LODWORD(v38) = v38 & 0x18D53FFD ^ 0x8553A71 ^ (v38 ^ 0xE1024002) & ((*(unsigned __int8 *)(STACK[0x17F8]
                                                                                          + ((*(_BYTE *)((71 * BYTE2(v51)) + STACK[0x18B8] + 22881) ^ (71 * BYTE2(v51)) ^ 0xA5) - 107)) << 24) ^ 0xE72AC002);
  LODWORD(v38) = (v38 - ((2 * v38) & 0x3691D7F8) + 457763836) ^ 0x61CF9F15;
  v56 = v51 ^ ((v50 ^ v43 ^ v38) - 1926392729 - ((2 * (v50 ^ v43 ^ v38)) & 0x1A5B28CE));
  v57 = v56 ^ 0xB02D9467;
  v58 = *(unsigned __int8 *)(STACK[0x17F8] + (HIBYTE(v56) ^ 0xCDLL));
  v59 = *(unsigned __int8 *)(STACK[0x17F8]
                           + (*(unsigned __int8 *)(((BYTE1(v57) >> (((v32 - 107) ^ (2 - v32)) & 3)) ^ (v57 >> 3) & 0xE0 ^ 0x99)
                                                 + STACK[0x18B8]
                                                 + 4432) ^ 0x38)) << 16;
  v60 = *(unsigned __int8 *)(STACK[0x17F8] + BYTE2(v57)) << 24;
  v61 = (((v60 & 0x47000000 | 0x4F873) + 2129) ^ 0x7A4A7A2C ^ ((((*(unsigned __int8 *)(STACK[0x17F8]
                                                                                     + v57) << 8) ^ 0x626C64C0) & ~v59 | v59 & 0x930000) ^ 0xDA2695F9) & (v60 ^ 0xFFFFFFFD)) & (v58 ^ 0xFFFFFFFD) ^ v58 & 0x2E ^ v49;
  v62 = v61 ^ v38;
  v63 = v50 ^ v61 ^ v38;
  v64 = v57 ^ ((v63 ^ 0xC1058BD1) - 1926392729 - ((2 * (v63 ^ 0xC1058BD1)) & 0x1A5B28CE));
  v65 = *(unsigned __int8 *)(STACK[0x17F8] + ((v64 ^ 0xF02D9467) >> 16));
  LODWORD(v38) = ((71
                                  * *(_BYTE *)(STACK[0x17F8]
                                             + ((v57 ^ ((v63 ^ 0xD1) + 103 - ((2 * (v63 ^ 0xD1)) & 0xCE))) ^ 0x67u))) ^ 0xB1)
               - ((v43 ^ v38 ^ 0x60000000 | v43 ^ v38 ^ 0x9FFFFFFF) & 0xFFFFA7A1);
  v66 = (((v65 >> 3) | (32 * v65)) ^ 0x99) + 264572691;
  v67 = (2 * (v66 & 0x23D)) & 0x3E ^ v66 & 0x23D ^ ((2 * (v66 & 0x23D)) | 0x20000) & (v66 ^ 0x599A6002);
  LODWORD(v19) = (2 * (v66 ^ 0x599A6002)) & 0x223E ^ 0x16201 ^ ((2 * (v66 ^ 0x599A6002)) ^ 0x5242447E) & (v66 ^ 0x599A6002);
  v68 = (4 * v67) & 0x29A1623C ^ v67 ^ ((4 * v67) | 0x40000) & v19;
  LODWORD(v19) = (4 * v19) & 0xA9A1623C ^ 0x9206203 ^ ((4 * v19) ^ 0xA68588FC) & v19;
  v69 = (16 * v68) & 0x29A16230 ^ v68 ^ ((16 * v68) ^ 0x100000) & v19;
  LODWORD(v19) = (16 * v19) & 0xA9A16230 ^ 0x21A1400F ^ ((16 * v19) ^ 0x9A1623F0) & v19;
  v70 = v69 ^ (v69 << 8) & 0xA9A16200 ^ ((v69 << 8) ^ 0x1000000) & v19 ^ 0xA8A0623F;
  v71 = v64 ^ 0x312D9467;
  v72 = *(unsigned __int8 *)(STACK[0x17F8] + BYTE1(v71));
  LODWORD(v38) = (((*(_BYTE *)(STACK[0x18B8] + v38) - 84) ^ 0x29) - 107) << 8;
  v73 = v61 ^ v43 ^ 0xD0281FB6;
  v74 = ((((v72 << 16) ^ 0x8B07F2F7) & ~(_DWORD)v38 | v38 & 0xD00) ^ 0x74380C08) & (((*(unsigned __int8 *)(STACK[0x18B8] + (v66 ^ (2 * ((v70 << 16) & 0x29A10000 ^ v70 ^ ((v70 << 16) ^ 0x623F0000) & (((_DWORD)v19 << 8) & 0x29A10000 ^ 0x8810000 ^ (((_DWORD)v19 << 8) ^ 0x21620000) & v19))) ^ 0xE33BC643)) ^ 0x38) << 24) ^ 0x1E3BEE9B) ^ (((v72 << 16) ^ 0x8B07F2F7) & ~(_DWORD)v38 & 0x1C41100 | v38 & 0x100);
  LODWORD(v38) = (*(_BYTE *)(STACK[0x18B8]
                                            + (((*(_BYTE *)(v7 + (v71 >> 24)) >> 3) | (32 * *(_BYTE *)(v7 + (v71 >> 24)))) ^ 0x9Du)
                                            + 1665)
                                 - 38);
  v75 = (*(unsigned __int8 *)(STACK[0x18B8]
                            + (((*(_BYTE *)(v7 + (v71 >> 24)) >> 3) | (32 * *(_BYTE *)(v7 + (v71 >> 24)))) ^ 0x9Du)
                            + 1665)
       - 38) ^ (v38 >> 5);
  LODWORD(v38) = ((((v74 & 0xFF089312 ^ 0xDF089356) + (v74 ^ 0x20C40000) - ((v74 ^ 0x20C40000) & 0xFF089312)) ^ 0x4A4CEBC5) & (v75 ^ ~((*(_BYTE *)(STACK[0x18B8] + (((*(_BYTE *)(v7 + (v71 >> 24)) >> 3) | (32 * *(_BYTE *)(v7 + (v71 >> 24)))) ^ 0x9Du) + 1665) - 38) >> 4) | 0xFFFFFF00) | (v75 ^ (v38 >> 4)) & 0xF7) ^ v62;
  v76 = v63 ^ 0x9D281FB6 ^ ((v73 ^ 0xC69799BE ^ v38) - 1926392729 - ((2 * (v73 ^ 0xC69799BE ^ v38)) & 0x1A5B28CE));
  v77 = v71 ^ v76;
  v78 = *(unsigned __int8 *)(STACK[0x17F8] + ((v71 ^ v76) ^ 0xE2)) << 8;
  v79 = (v78 & 0x8200 | 0x16210010) ^ ((*(unsigned __int8 *)(STACK[0x17F8] + BYTE1(v77)) << 16) ^ 0x49D47D48) & ~v78;
  LODWORD(v71) = v79 & 0x7DFAF08 ^ 0xA19AAA00 ^ (v79 | 0xA00000A1) & ((*(unsigned __int8 *)(STACK[0x17F8] + BYTE2(v77)) << 24) ^ 0x582050A1);
  STACK[0x18A0] = v77;
  v80 = *(unsigned __int8 *)(v7 + (BYTE3(v77) ^ 0xD7));
  LODWORD(v71) = (((1470254342 - (v71 | 0x57A24D06) + (v71 | 0xA85DB2F9)) ^ 0x58C282BE) & ~v80 | v80 & 0x11111111) ^ 0xA0041801;
  LODWORD(v77) = (-860713682 - (v71 | 0xCCB28D2E) + (v71 | 0x334D72D1)) ^ 0x10941959;
  v81 = v77 ^ v73;
  LODWORD(STACK[0x18A8]) = v81;
  v82 = v81 ^ v76;
  LODWORD(STACK[0x1898]) = (2 * v82) & 0x1A5B28CE;
  LODWORD(STACK[0x18B0]) = v82;
  LODWORD(STACK[0x1890]) = v82 - 1926392729;
  LODWORD(STACK[0x14C4]) = v38 ^ 0xF4FADD1E ^ v77;
  return ((_QWORD *(*)(_UNKNOWN **__return_ptr))(*(_QWORD *)(STACK[0x18C0] + 8 * v4) - 12))(&off_1015B46D0);
}

uint64_t sub_100219224@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  char v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  _BOOL4 v31;

  v18 = v9 ^ 0x8D2D9467;
  v19 = *(_BYTE *)(a1 + v18);
  v20 = v7 + v18;
  v21 = (unint64_t)(((1772489163 * (_DWORD)v20) ^ ((1772489163 * v20) >> 16))
                         * ((v3 - 2665) ^ 0x69A62A08)) >> 24;
  v22 = (((v9 ^ v15) - 94868193) ^ ((v9 ^ 0x90A60787) + v5) ^ ((v9 ^ 0x182C0101) - 405537025)) + v11;
  v23 = *(_BYTE *)(*(_QWORD *)(a2 + 8 * (v3 ^ 0x2688)) - 4 + v21) ^ v19 ^ *(_BYTE *)(v21
                                                                                       + *(_QWORD *)(a2 + 8 * (v3 - 10338))
                                                                                       - 4
                                                                                       + 5) ^ *(_BYTE *)(*(_QWORD *)(a2 + 8 * (v3 ^ v14)) - 8 + v21);
  v24 = (v22 ^ 0x6ECB055D) & (2 * (v22 & 0x8ED3465E)) ^ v22 & 0x8ED3465E;
  v25 = 2 * (v22 ^ 0x66ED01D9);
  v26 = (v25 ^ 0xD07C8F0E) & (v22 ^ 0x66ED01D9);
  LODWORD(v21) = v25 & (v13 + 6);
  *(_BYTE *)(v20 - 0x3032385379A144E6) = v23 ^ (((-53 * v20) ^ ((1772489163 * v20) >> 16))
                                                * ((v3 - 105) ^ 8)) ^ (-101
                                                                     * ((((1772489163 * (_DWORD)v20) ^ ((1772489163 * v20) >> 16))
                                                                       * ((v3 - 2665) ^ 0x69A62A08)) >> 24));
  v27 = ((4 * (v26 ^ v21 ^ 0x28024081)) ^ v12) & (v26 ^ v21 ^ 0x28024081) ^ (4 * (v26 ^ v21 ^ 0x28024081)) & (v13 + 4);
  LODWORD(v20) = (v27 ^ 0xA0380603) & (16 * ((v26 ^ v21 ^ v2) & (4 * v24) ^ v24)) ^ (v26 ^ v21 ^ v2) & (4 * v24) ^ v24;
  v28 = ((16 * (v27 ^ 0x48064183)) ^ 0x83E47870) & (v27 ^ 0x48064183) ^ (16 * (v27 ^ 0x48064183)) & v13;
  LODWORD(v20) = v20 ^ (v13 + 7) ^ (v28 ^ 0x80244000) & ((_DWORD)v20 << 8);
  v29 = v22 ^ (2
             * (((_DWORD)v20 << 16) & v17 ^ v20 ^ (((_DWORD)v20 << 16) ^ 0x47870000) & (((v28 ^ v4) << 8) & v17 ^ 0x40380000 ^ (((v28 ^ v4) << 8) ^ 0x3E470000) & (v28 ^ v4))));
  LODWORD(v20) = (((v29 ^ 0x24CCFFA3) - 2000855700) ^ ((v29 ^ v6) + 115459914) ^ ((v29 ^ 0x50FF5372) - 57740869))
               - 505024766;
  v30 = (v8 < v10) ^ (v20 < v10);
  v31 = v8 > v20;
  if (v30)
    v31 = v8 < v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((!v31 * v16) ^ v3)) - 12))();
}

uint64_t sub_1002194CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  int v7;
  unint64_t v8;
  unint64_t v9;

  STACK[0xB80] = a7;
  STACK[0xB88] = v9;
  STACK[0xB90] = v8;
  LODWORD(STACK[0x1430]) = STACK[0x18A0] ^ (LODWORD(STACK[0x1890]) - LODWORD(STACK[0x1898])) ^ 0xD14149B0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v7) - 4))(a1, a2, a3, a4, 592773120, STACK[0xA88], STACK[0xA80], STACK[0xA78]);
}

uint64_t sub_100219654@<X0>(int a1@<W4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  _BOOL4 v37;

  v22 = v7
      + (((v10 ^ 0x86FB693C) + 2030343876) ^ ((v10 ^ 0xFE6EA44F) + 26303409) ^ (((v5 - 1746871290) & 0x681F3EF7 ^ 0xA47982D)
                                                                              + (v10 ^ 0xF5B85914)));
  v23 = (v22 ^ 0xB1D69982) & (2 * (v22 & 0xB18699CB)) ^ v22 & 0xB18699CB;
  v24 = ((2 * (v22 ^ 0x92D38B04)) ^ 0x46AA259E) & (v22 ^ 0x92D38B04) ^ (2 * (v22 ^ 0x92D38B04)) & (v13 + 14);
  v25 = v24 ^ 0x21551241;
  v26 = (v24 ^ 0x200000C) & (4 * v23) ^ v23;
  v27 = ((4 * v25) ^ 0x8D544B3C) & v25 ^ (4 * v25) & (v13 + 12);
  v28 = (v27 ^ 0x1540200) & (16 * v26) ^ v26;
  v29 = ((16 * (v27 ^ 0x220110C3)) ^ 0x35512CF0) & (v27 ^ 0x220110C3) ^ (16 * (v27 ^ 0x220110C3)) & v13;
  v30 = v28 ^ (v13 + 15) ^ (v29 ^ 0x2151000F) & (v28 << 8);
  v31 = v8
      + (v22 ^ (2
              * ((v30 << 16) & a1 ^ v30 ^ ((v30 << 16) ^ 0x12CF0000) & (((v29 ^ (v14 - 757)) << 8) & a1 ^ 0x22450000 ^ (((v29 ^ (v14 - 757)) << 8) ^ 0x55120000) & (v29 ^ (v14 - 757))))) ^ 0xF3A6BC55);
  v32 = 1772489163 * ((1772489163 * (_DWORD)v31) ^ ((1772489163 * v31) >> 16));
  LOBYTE(v32) = *(_BYTE *)(a2 + (v32 >> 24)) ^ *(_BYTE *)(v11 + (v10 ^ 0x8D2D9467)) ^ *(_BYTE *)((v32 >> 24) + a3 + 3) ^ *(_BYTE *)((v32 >> 24) + a4 + 2) ^ (-53 * ((-53 * v31) ^ ((1772489163 * v31) >> 16))) ^ (91 * ((1772489163 * ((1772489163 * (_DWORD)v31) ^ ((1772489163 * v31) >> 16))) >> 24));
  v33 = (((v10 ^ 0x5EFABFB1) - 1593491377) ^ ((v10 ^ v20) - 1938344540) ^ ((v10 ^ 0xA05FE18A) + 1604329078)) - 498126419;
  *(_BYTE *)(v31 - 0x3032385379A144E6) = v32;
  v34 = ((2 * (v33 ^ 0xDA68C450)) ^ 0xE16D4DD6) & (v33 ^ 0xDA68C450) ^ (2 * (v33 ^ 0xDA68C450)) & (a5 + 1436);
  LODWORD(v31) = (v33 ^ 0x8ADC4032) & (2 * (v33 & v15)) ^ v33 & v15;
  LODWORD(v32) = v34 ^ 0x602024C1;
  v35 = ((4 * (v34 ^ v17)) ^ (v21 + 632)) & (v34 ^ v17) ^ (4 * (v34 ^ v17)) & (a5 + 1434);
  LODWORD(v31) = (v35 ^ v16) & (16 * (v32 & (4 * v31) ^ v31)) ^ v32 & (4 * v31) ^ v31;
  LODWORD(v32) = ((16 * (v35 ^ 0x30242443)) ^ 0xB6A6EB0) & (v35 ^ 0x30242443) ^ (16 * (v35 ^ 0x30242443)) & (a5 + 1426);
  LODWORD(v31) = v31 ^ (a5 + 1437) ^ (v32 ^ 0x22264B) & ((_DWORD)v31 << 8);
  LODWORD(v31) = ((_DWORD)v31 << 16) & v6 ^ v31 ^ (((_DWORD)v31 << 16) ^ 0x26EB0000) & (((v32 ^ 0x7094804B) << 8) & v6 ^ 0x40100000 ^ (((v32 ^ 0x7094804B) << 8) ^ 0xB6A60000) & (v32 ^ 0x7094804B));
  LODWORD(v31) = (((v33 ^ (2 * v31) ^ 0x26566515) + 1584603617) ^ ((v33 ^ (2 * v31) ^ v18) - 1438432848) ^ ((v33 ^ (2 * v31) ^ 0xFEC74F22) + v19))
               - 1008027815;
  v36 = (v9 < v12) ^ (v31 < v12);
  v37 = v9 > v31;
  if (v36)
    v37 = v9 < v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((28823 * !v37) ^ v5)) - 4))();
}

uint64_t sub_100219A80()
{
  unsigned int v0;

  STACK[0x1360] = 0;
  LODWORD(STACK[0x1664]) = 0;
  LODWORD(STACK[0x1790]) = 0;
  LODWORD(STACK[0x124C]) = LODWORD(STACK[0x18B0]) ^ 0xFEA33307;
  LODWORD(STACK[0x13CC]) = LODWORD(STACK[0x18A8]) ^ 0x2A08F248;
  STACK[0x18B0] = STACK[0x18C8];
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * v0))();
}

uint64_t sub_100219CF0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X6>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x15CC]) = v6;
  LODWORD(STACK[0x1768]) = 0;
  LODWORD(STACK[0xDC4]) = 0;
  STACK[0x1258] = 0;
  LODWORD(STACK[0x1400]) = 0;
  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x1554]) = 0;
  LODWORD(STACK[0x1578]) = 0;
  LODWORD(STACK[0x1518]) = 0;
  LODWORD(STACK[0x1584]) = 0;
  LODWORD(STACK[0xDF0]) = 0;
  STACK[0x1208] = 0;
  LODWORD(STACK[0x156C]) = 0;
  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0xD34]) = 0;
  LODWORD(STACK[0xD4C]) = 0;
  LODWORD(STACK[0x1460]) = 0;
  LODWORD(STACK[0x1810]) = 0;
  LODWORD(STACK[0x1800]) = 0;
  LODWORD(STACK[0x1500]) = 0;
  LODWORD(STACK[0x1840]) = 0;
  LODWORD(STACK[0x1560]) = 0;
  LODWORD(STACK[0x1438]) = 0;
  LODWORD(STACK[0x1450]) = 0;
  STACK[0x1520] = 0;
  LODWORD(STACK[0x1488]) = 0;
  LODWORD(STACK[0x1680]) = 0;
  LODWORD(STACK[0x159C]) = 0;
  LODWORD(STACK[0xD8C]) = 0;
  STACK[0xDA8] = 0;
  STACK[0xDE8] = 0;
  LODWORD(STACK[0xDB4]) = 0;
  STACK[0xE10] = 0;
  LODWORD(STACK[0x14F8]) = 0;
  LODWORD(STACK[0x1428]) = 0;
  LODWORD(STACK[0x1528]) = 0;
  LODWORD(STACK[0x1420]) = 0;
  LODWORD(STACK[0x1818]) = 0;
  LODWORD(STACK[0x1858]) = 0;
  LODWORD(STACK[0x13D8]) = 0;
  LODWORD(STACK[0x15D0]) = 0;
  LODWORD(STACK[0x15AC]) = 0;
  STACK[0x13E0] = 0;
  LODWORD(STACK[0x1204]) = 0;
  LODWORD(STACK[0x1898]) = 0;
  LODWORD(STACK[0x1868]) = 0;
  LODWORD(STACK[0x1410]) = 0;
  LODWORD(STACK[0xD7C]) = 0;
  LODWORD(STACK[0x1440]) = 0;
  STACK[0x14A8] = 0;
  LODWORD(STACK[0x1548]) = 0;
  LODWORD(STACK[0xD5C]) = 0;
  LODWORD(STACK[0x1670]) = 0;
  LODWORD(STACK[0x1470]) = 0;
  v7 = v5 ^ (2 * a3) ^ v4;
  v8 = v3 + 25;
  LODWORD(STACK[0x1730]) = STACK[0x1570];
  LODWORD(STACK[0x1870]) = STACK[0x1178];
  v9 = *(_QWORD *)(STACK[0x18C0] + 8 * v3);
  LODWORD(STACK[0xE04]) = ((((v8 ^ 0xF) - (v7 & 0x7A ^ 0x4A) + ((2 * (v7 & 0x7A ^ 0x4A)) | 0xE6)) & 0xFA ^ 0x5A)
                         + (v7 & 0x7A ^ 0x18)) ^ 0x7A;
  LODWORD(STACK[0x1154]) = STACK[0x1648];
  LODWORD(STACK[0x17CC]) = STACK[0x15E4];
  LODWORD(STACK[0x1834]) = STACK[0x1710];
  LODWORD(STACK[0x1718]) = STACK[0x1610];
  LODWORD(STACK[0x1838]) = STACK[0x173C];
  STACK[0x1178] = 1094752003;
  LODWORD(STACK[0x1570]) = 123939476;
  LODWORD(STACK[0x1770]) = 740815470;
  LODWORD(STACK[0x15C0]) = -1926392729;
  LODWORD(STACK[0x1648]) = -158968893;
  LODWORD(STACK[0x15E4]) = -242681077;
  LODWORD(STACK[0x1710]) = -412186800;
  LODWORD(STACK[0x1610]) = -883973170;
  LODWORD(STACK[0x173C]) = 1861236647;
  LODWORD(STACK[0x1890]) = (8 * v7) ^ 0xE441375F;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))(v9 - 8))(0, 0, a1, 0, 0, 0, a2, 0);
}

uint64_t sub_100219F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)((LODWORD(STACK[0xD20]) - 1233496320) ^ 0xB67A8C77 ^ (26304 * (LODWORD(STACK[0xD20]) - 1233496320 != (LODWORD(STACK[0xD20]) ^ 0xCF9D311))))) - 8))(LODWORD(STACK[0x15E0]), LODWORD(STACK[0xCEC]), a3, LODWORD(STACK[0xDCC]), LODWORD(STACK[0x15B0]), LODWORD(STACK[0x1644]), a7, LODWORD(STACK[0x161C]));
}

uint64_t sub_100219F8C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;

  LODWORD(STACK[0x13F8]) = v3;
  LODWORD(STACK[0x15DC]) = v2;
  LODWORD(STACK[0x1788]) = v1;
  LODWORD(STACK[0x18A0]) = a1 - 9843;
  v4 = ((((a1 + 1773280845) & 0x964DBB3F ^ v3 ^ 0x5E26FD4C) - 1579607875) ^ ((v3 ^ 0xB0625198) + 1335733864) ^ ((v3 ^ 0x636922BC) + ((a1 - 9843) ^ 0x9C96C74B)))
     - 1926392793 > 0xFFFFFFBF;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (((2 * v4) | (v4 << 6)) ^ a1)) - 12);
  STACK[0x1888] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x463E)) - 4;
  STACK[0x1850] = (unint64_t)*(&off_1015B46D0 + a1 - 15662) - 4;
  v6 = (uint64_t)*(&off_1015B46D0 + (a1 ^ 0x4972));
  STACK[0xD10] = (unint64_t)*(&off_1015B46D0 + a1 - 15887) - 8;
  STACK[0xBA8] = v6 - 8;
  STACK[0xBC0] = (unint64_t)*(&off_1015B46D0 + a1 - 16004);
  v7 = (char *)*(&off_1015B46D0 + (a1 ^ 0x43E5)) - 12;
  STACK[0x1880] = (unint64_t)*(&off_1015B46D0 + a1 - 14444) - 8;
  STACK[0xAF8] = (unint64_t)*(&off_1015B46D0 + a1 - 14809);
  STACK[0xC90] = (unint64_t)*(&off_1015B46D0 + a1 - 16197) - 4;
  v8 = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x4AE1));
  v9 = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x4335));
  v10 = (char *)*(&off_1015B46D0 + a1 - 16044) - 4;
  STACK[0xBB8] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x4944)) - 12;
  v11 = (char *)*(&off_1015B46D0 + a1 - 15121) - 8;
  STACK[0x1630] = (unint64_t)*(&off_1015B46D0 + a1 - 14661);
  STACK[0xAF0] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x459B));
  STACK[0xBB0] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x47D1)) - 8;
  STACK[0x1878] = (unint64_t)*(&off_1015B46D0 + a1 - 14000) - 12;
  v12 = (unint64_t)*(&off_1015B46D0 + a1 - 15866);
  v13 = (uint64_t)*(&off_1015B46D0 + (a1 ^ 0x46B9));
  STACK[0xC20] = (unint64_t)*(&off_1015B46D0 + a1 - 15750) - 4;
  STACK[0xD08] = v13 - 12;
  STACK[0xBA0] = (unint64_t)*(&off_1015B46D0 + a1 - 13980) - 8;
  v14 = (uint64_t)*(&off_1015B46D0 + (a1 ^ 0x42B8));
  STACK[0xC18] = (unint64_t)*(&off_1015B46D0 + a1 - 14570) - 4;
  STACK[0xC88] = v14 - 12;
  STACK[0x1848] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x4577)) - 8;
  STACK[0xD00] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x4381));
  v15 = (uint64_t)*(&off_1015B46D0 + a1 - 16482);
  STACK[0xC80] = (unint64_t)*(&off_1015B46D0 + a1 - 14436);
  v16 = (uint64_t)*(&off_1015B46D0 + a1 - 14838);
  STACK[0x1628] = v15 - 12;
  v17 = v16 - 8;
  STACK[0xC78] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x401D)) - 8;
  STACK[0xC70] = (unint64_t)*(&off_1015B46D0 + a1 - 15460);
  STACK[0xC68] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x41CD));
  v18 = (uint64_t)*(&off_1015B46D0 + a1 - 14870);
  STACK[0xB98] = (unint64_t)*(&off_1015B46D0 + a1 - 14938) - 4;
  v19 = v18 - 4;
  STACK[0xB00] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x446C));
  v20 = (unint64_t)*(&off_1015B46D0 + a1 - 16317);
  v21 = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x47D7));
  v22 = (char *)*(&off_1015B46D0 + a1 - 14526) - 12;
  STACK[0x1620] = (unint64_t)*(&off_1015B46D0 + (a1 ^ 0x4086));
  STACK[0x1108] = (unint64_t)v7;
  STACK[0xC28] = (unint64_t)v10;
  STACK[0x1100] = v19;
  STACK[0x10F8] = (unint64_t)v22;
  STACK[0xDE0] = v8;
  STACK[0xDD8] = (unint64_t)v11;
  STACK[0xDD0] = v12;
  STACK[0x17F0] = v17;
  STACK[0x1820] = v9;
  STACK[0x1808] = v21;
  STACK[0x1828] = v20;
  return v5();
}

uint64_t sub_10021A34C(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t (*v13)(void);

  STACK[0x17C0] = v11;
  STACK[0x17D8] = v9;
  STACK[0x18A0] = v10;
  LODWORD(STACK[0x15E0]) = a1;
  LODWORD(STACK[0x15F8]) = v12;
  LODWORD(STACK[0x161C]) = a8;
  LODWORD(STACK[0x1644]) = a6;
  LODWORD(STACK[0x15B0]) = a5;
  LODWORD(STACK[0xDCC]) = a4;
  LODWORD(STACK[0x18A8]) = v8 + 12015;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                      + 8
                                      * (((LODWORD(STACK[0x13D8]) == ((v8 - 17) ^ 0xFE))
                                        * (((v8 + 9795) | 0x1005) ^ 0x7FB)) ^ v8))
                          - 8);
  LODWORD(STACK[0x13D8]) = 1;
  return v13();
}

uint64_t sub_10021A3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  unint64_t v7;
  uint64_t v8;

  v7 = 160 * (a7 ^ 0x50C1u);
  v8 = *(_QWORD *)(STACK[0x18C0]
                 + 8 * ((57 * ((((a7 - 7435) ^ (LODWORD(STACK[0x13F8]) == -1926392729)) & 1) == 0)) ^ a7));
  STACK[0x1760] = v7;
  LODWORD(STACK[0x1460]) = STACK[0x147C];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 - (v7 ^ 0x5DC4)))(a1, a2, a3, a4, a5, a6, 19);
}

uint64_t sub_10021A468()
{
  int v0;
  int v1;
  unsigned int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v3 = STACK[0x18B0] + (LODWORD(STACK[0x15C0]) ^ v2);
  v4 = *(unsigned __int8 *)(v3 - 0x3032385379A144E6);
  v5 = 1772489163 * (((1772489163 * v3) >> ((v0 - 109) & 0xFE ^ 0xCE)) ^ (1772489163 * (_DWORD)v3));
  v6 = *(unsigned __int8 *)(STACK[0xD00] + (v5 >> 24)) ^ v4 ^ *(unsigned __int8 *)(STACK[0xD08] + (v5 >> 24) + 1) ^ *(unsigned __int8 *)(STACK[0xD10] + (v5 >> 24) + 1);
  HIDWORD(v7) = v6 ^ (v5 >> 24) ^ v5;
  LODWORD(v7) = (v6 ^ v5 ^ (-111 * (v5 >> 24))) << 24;
  LODWORD(v5) = ((v7 >> 27) ^ 0x99) + 291471285;
  v8 = (2 * (v5 & 0x919B)) & (v5 ^ 0xD0FC4B97) ^ v5 & 0x919B ^ ((2 * (v5 & 0x919B)) & 0x204 | 0x12444008);
  v9 = (2 * (v5 ^ 0xD0FC4B97)) & 0xDA0C ^ 0x4A04 ^ ((2 * (v5 ^ 0xD0FC4B97)) ^ 0x40A1B418) & (v5 ^ 0xD0FC4B97);
  v10 = (4 * v8) & 0x3E5CDA0C ^ v8 ^ ((4 * v8) ^ 0x49110020) & v9;
  v11 = (4 * v9) & 0x3E5CDA0C ^ 0x60C920C ^ ((4 * v9) ^ 0xC1236830) & v9;
  v12 = (16 * v10) & 0x3E5CDA00 ^ v10 ^ ((16 * v10) ^ 0xA5440080) & v11;
  v13 = (16 * v11) & 0x3E5CDA00 ^ 0x1A105A0C ^ ((16 * v11) ^ 0xE5CDA0C0) & v11;
  v14 = v12 ^ 0x100C9204 ^ (v12 << 8) & 0x3E5CDA00 ^ ((v12 << 8) ^ 0x10400800) & v13;
  LODWORD(v5) = v5 ^ (2
                    * ((v14 << 16) & 0x3E5C0000 ^ v14 ^ ((v14 << 16) ^ 0x5A0C0000) & ((v13 << 8) & 0x3E5C0000 ^ 0x22040000 ^ ((v13 << 8) ^ 0x5CDA0000) & v13)));
  v15 = v1 != LODWORD(STACK[0x147C]);
  LODWORD(STACK[0xDA4]) = *(unsigned __int8 *)(STACK[0x18B8] + (v5 ^ 0xA6012583)) ^ 0x38;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 | v15 | (2 * v15))) - 8))();
}

uint64_t sub_10021A86C()
{
  int v0;
  int v1;
  uint64_t (*v2)(void);

  v2 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((30371 * (v1 != (v0 ^ 0x7E90) - 1926414201)) ^ v0));
  LODWORD(STACK[0x1520]) = 128;
  return v2();
}

uint64_t sub_10021AAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;

  return (*(uint64_t (**)(uint64_t))(STACK[0x18C0] + 8 * (v5 ^ ((v6 != -1926392732) * a5))))(2368574564);
}

uint64_t sub_10021AD14(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t (*v19)(void);

  v15 = 1493 * (v8 ^ 0x2D16);
  LODWORD(STACK[0x1520]) = v10 ^ *(unsigned __int8 *)(STACK[0xA88] + v11) ^ *(unsigned __int8 *)(STACK[0xA80]
                                                                                               + v11
                                                                                               + (v15 ^ 0x117Cu)) ^ *(unsigned __int8 *)(v11 + STACK[0xA78] + 2) ^ (v11 * a6);
  v16 = v13 + (v9 ^ 0xCD41DEAD);
  v17 = *(unsigned __int8 *)(v16 + a8);
  v18 = (((((v15 - 3963) | 0x1183) ^ 0x69A61A4C) * (_DWORD)v16) ^ (((((v15 - 3963) | 0x1183) ^ 0x69A61A4C)
                                                                  * v16) >> 16))
      * a3;
  LODWORD(STACK[0xDF0]) = *(unsigned __int8 *)(STACK[0x1620] + (v18 >> 24)) ^ v17 ^ *(unsigned __int8 *)(STACK[0x1628] + (v18 >> 24)) ^ *(unsigned __int8 *)((v18 >> 24) + STACK[0x1630] + 1) ^ v18 ^ (-123 * (v18 >> 24));
  v19 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                      + 8
                                      * (v15 ^ (252
                                              * ((((~v9 & 4)
                                                 + ((5
                                                   - ((((v14 ^ 2) + 6) ^ v14) ^ ((v14 ^ 0xFD) + 3))) & 4)) ^ v12) != a4))))
                          - 12);
  LODWORD(STACK[0xDC4]) = 128;
  return v19();
}

uint64_t sub_10021B000@<X0>(char a1@<W6>, int a2@<W8>)
{
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  char v6;
  unint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;

  v4 = STACK[0x18B0] + (a2 ^ 0xA6770E13);
  v5 = *(unsigned __int8 *)(v4 - 0x3032385379A144E6);
  v6 = (((v2 + 4) | 4) + 33 + (v2 ^ 0x46) * a1) ^ ((v3 & 0x5E ^ 0x1C) - ((2 * (v3 & 0x5E ^ 0x1C)) & 0x84) + 67);
  v7 = 1772489163 * ((1772489163 * (_DWORD)v4) ^ ((1772489163 * v4) >> 16));
  LODWORD(v7) = (-123 * (v7 >> 24)) ^ v7 ^ v5 ^ *(unsigned __int8 *)(STACK[0x1620] + (v7 >> 24)) ^ *(unsigned __int8 *)(STACK[0x1628] + (v7 >> 24)) ^ *(unsigned __int8 *)((v7 >> 24) + STACK[0x1630] + 1);
  LODWORD(v7) = 71 * (((v7 ^ 0xC) - 121) ^ ((v7 ^ 0xFFFFFFE8) + 99) ^ ((v7 ^ 0xFFFFFFE4) + 111)) + 115;
  v8 = v7 + 642867953;
  v9 = (2 * (v8 & 0x4070)) & 0xC0 ^ v8 & 0x4070 ^ ((2 * (v8 & 0x4070)) | 0x400) & (v8 ^ 0xC601CFAD);
  v10 = (2 * (v8 ^ 0xC601CFAD)) & 0x11DC ^ 0x45 ^ ((2 * (v8 ^ 0xC601CFAD)) ^ 0x205021BA) & (v8 ^ 0xC601CFAD);
  v11 = (4 * v9) & 0x1FAF39DC ^ v9 ^ ((4 * v9) | 0x8800) & v10;
  v12 = (4 * v10) & 0x1FAF39DC ^ 0x1031889 ^ ((4 * v10) ^ 0x7EBCE774) & v10;
  v13 = (16 * v11) & 0x1FAF39D0 ^ v11 ^ ((16 * v11) ^ 0x2A000) & v12;
  v14 = (16 * v12) & 0x1FAF39D0 ^ 0x50C200D ^ ((16 * v12) ^ 0xFAF39DD0) & v12;
  v15 = v13 ^ (v13 << 8) & 0x1FAF3900 ^ ((v13 << 8) ^ 0x20A0000) & v14 ^ 0x1DA733DD;
  LODWORD(STACK[0xDC4]) = ((((v6 - ((2 * v6) & 0x1C) + 15) ^ 0x35)
                          + (((v3 & 0x5E ^ 0x58 | 0xC) - (v3 & 0x5E ^ 0x58 | 0xF3) + 51) ^ 0xC)) & 0x21 ^ 0xFFFFFF95)
                        + (*(unsigned __int8 *)(STACK[0x18B8]
                                              + (v8 ^ (2
                                                     * ((v15 << 16) & 0x1FAF0000 ^ v15 ^ ((v15 << 16) ^ 0x39DD0000) & ((v14 << 8) & 0x1FAF0000 ^ 0x10860000 ^ ((v14 << 8) ^ 0x2F390000) & v14))) ^ 0xD5EA85CA)) ^ v7 ^ 0xFFFFFFA5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v2 ^ (19857 * (v3 != -1926392734)))) - 12))();
}

uint64_t sub_10021B4E0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;

  v3 = (((a1 ^ 0xC93F044C) + 496656840) ^ ((a1 ^ 0x98A0E434) + 1275429312) ^ ((a1 ^ 0xF7E8EE6B) + 592284641))
     - 1576036280;
  v4 = (v3 ^ 0xC29DF91C) & (2 * (v3 & 0xEB1DFC21)) ^ v3 & 0xEB1DFC21;
  v5 = ((2 * (v3 ^ 0x529D815C)) ^ 0x7300FAFA) & (v3 ^ 0x529D815C) ^ (2 * (v3 ^ 0x529D815C)) & 0xB9807D7C;
  v6 = v5 ^ 0x88800505;
  v7 = (v5 ^ 0x30007409) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0xE601F5F4) & v6 ^ (4 * v6) & 0xB9807D7C;
  v9 = (v8 ^ 0xA0007579) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x19800809)) ^ 0x9807D7D0) & (v8 ^ 0x19800809) ^ (16 * (v8 ^ 0x19800809)) & 0xB9807D70;
  v11 = v9 ^ 0xB9807D7D ^ (v10 ^ 0x98005500) & (v9 << 8);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0]
                                                     + 8
                                                     * (v1 ^ ((2 * (v2 != -1926392735)) | (4 * (v2 != -1926392735)))))
                                         - 12))(v3 ^ (2
                                                      * ((v11 << 16) & 0x39800000 ^ v11 ^ ((v11 << 16) ^ 0x7D7D0000) & (((v10 ^ 0x2180282D) << 8) & 0x39800000 ^ 0x39800000 ^ (((v10 ^ 0x2180282D) << 8) ^ 0x807D0000) & (v10 ^ 0x2180282D)))));
}

uint64_t sub_10021B758@<X0>(unsigned int a1@<W0>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X7>, int a5@<W8>)
{
  int v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  uint64_t (*v19)(void);

  STACK[0x13E0] = v6;
  STACK[0x14A8] = 0;
  v9 = v8 + (((((v5 ^ 0x2F8) + 11787) | 0x124C) - 367217923) ^ a1);
  v10 = (((_DWORD)v9 * a2) ^ ((v9 * a2) >> 16)) * a2;
  LODWORD(STACK[0x1768]) = v10 ^ *(unsigned __int8 *)(v9 + a4) ^ *(unsigned __int8 *)(STACK[0x17D8] + (v10 >> 24)) ^ *(unsigned __int8 *)(STACK[0x18A0] + (v10 >> 24)) ^ *(unsigned __int8 *)(STACK[0x17C0] + (v10 >> 24)) ^ (81 * (v10 >> 24));
  LODWORD(v10) = (((a5 ^ 0x1A5C82B3) - 822483143) ^ ((a5 ^ 0xC8191590) + 482111516) ^ ((a5 ^ 0x74329930) - 1600652100))
               - 1676727697;
  v11 = (v10 ^ 0xED5C4DFA) & (2 * (v10 & 0xF11E69FB)) ^ v10 & 0xF11E69FB;
  v12 = ((2 * (v10 ^ 0xAD684CC8)) ^ 0xB8EC4A66) & (v10 ^ 0xAD684CC8) ^ (2 * (v10 ^ 0xAD684CC8)) & 0x5C762532;
  v13 = v12 ^ 0x44122511;
  v14 = (v12 ^ 0x8600021) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x71D894CC) & v13 ^ (4 * v13) & 0x5C762530;
  v16 = (v15 ^ 0x50500403) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0xC262133)) ^ 0xC7625330) & (v15 ^ 0xC262133) ^ (16 * (v15 ^ 0xC262133)) & 0x5C762530;
  v18 = v16 ^ 0x5C762533 ^ (v17 ^ 0x44620100) & (v16 << 8);
  LODWORD(STACK[0x16F8]) = v10 ^ (2
                                * ((v18 << 16) & 0x5C760000 ^ v18 ^ ((v18 << 16) ^ 0x25330000) & (((v17 ^ 0x18142403) << 8) & 0x5C760000 ^ 0x8520000 ^ (((v17 ^ 0x18142403) << 8) ^ 0x76250000) & (v17 ^ 0x18142403)))) ^ 0xCCBBB7FA;
  v19 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v5 ^ 0x2F8 ^ (20763 * (v7 != a3 - 7))));
  LODWORD(STACK[0xDA8]) = 128;
  return v19();
}

uint64_t sub_10021B9C4(int a1)
{
  int v1;
  int v2;
  int v3;

  LODWORD(STACK[0x1858]) = v3;
  return (*(uint64_t (**)(_QWORD, _QWORD))(STACK[0x18C0]
                                                   + 8
                                                   * ((v1 - 6486) ^ ((8 * (v2 != -1926392721)) | (16
                                                                                                * (v2 != -1926392721))))))(*(unsigned __int8 *)(STACK[0x18B0] + (a1 ^ 0x4196239Du) - 0x3032385379A144E6), (v1 - 6486) ^ 0x290Fu);
}

uint64_t sub_10021BC20(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;

  LODWORD(STACK[0xDA8]) = a1 ^ a3 ^ *(unsigned __int8 *)(STACK[0xBC0] + a4) ^ *(unsigned __int8 *)(STACK[0xBB0] + a5) ^ *(unsigned __int8 *)(STACK[0xBB8] + a6) ^ ((a2 + 18904) * a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((a2 + 18838) ^ (158 * (v6 != v7 + 7)))) - 8))();
}

uint64_t sub_10021BEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t (*v14)(void);

  v12 = v9;
  v13 = a5 ^ a6 ^ *(unsigned __int8 *)(a7 + v11) ^ *(unsigned __int8 *)(v11 + a8 + 2) ^ *(unsigned __int8 *)(v11 + v10 + 3) ^ (111 * v11);
  v14 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                      + 8 * (v8 ^ ((8 * (v12 == -1926392723)) | (16 * (v12 == -1926392723)))))
                          - 8);
  STACK[0x14A8] = v13;
  return v14();
}

uint64_t sub_10021C150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;

  LODWORD(STACK[0x16F8]) = a5 ^ 0xF7805294;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x18C0] + 8 * (v6 - 1441)))(a1, a2, v5);
}

uint64_t sub_10021C1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unint64_t v55;
  int v56;
  unint64_t v57;
  int v58;
  int v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  int v74;
  int v75;
  unint64_t v76;
  int v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  int v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  unint64_t v222;
  unint64_t v223;
  unint64_t v224;
  unint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  uint64_t v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  unint64_t v259;
  _BYTE *v260;
  BOOL v261;
  unint64_t v262;
  int v263;

  v17 = STACK[0x18A0];
  v18 = LODWORD(STACK[0x18A0]) - 6433;
  v19 = STACK[0x15C0];
  LODWORD(STACK[0x18A8]) = v18 | 0x4810;
  v20 = STACK[0x18B0];
  v21 = STACK[0x18B0]
      + (((v19 ^ 0x7DB36D75) - 2108910965) ^ ((v19 ^ 0x13BADC8B) - 331013259) ^ ((((v18 | 0x4810) - 484189029) ^ v19)
                                                                               + 484170343))
      + a7
      + 2;
  v22 = *(unsigned __int8 *)(v21 - 0x3032385379A144E6);
  v23 = 1772489163 * ((1772489163 * (_DWORD)v21) ^ ((1772489163 * v21) >> 16));
  HIDWORD(v24) = *(unsigned __int8 *)(STACK[0xBF0] + (v23 >> 24)) ^ v22 ^ *(unsigned __int8 *)((v23 >> 24)
                                                                                             + STACK[0xBE8]
                                                                                             + 3) ^ *(unsigned __int8 *)(STACK[0xBE0] + (v23 >> 24)) ^ (v23 >> 24) ^ v23;
  LODWORD(v24) = (*(unsigned __int8 *)(a3 + (v23 >> 24)) ^ v22 ^ *(unsigned __int8 *)(v8 + (v23 >> 24)) ^ *(unsigned __int8 *)((v23 >> 24) + v7 + 1) ^ v23 ^ ((v23 >> 24) * v12)) << 24;
  v25 = ((v24 >> 27) ^ 0x9D) + 1540331223;
  v26 = (2 * (v25 & 0x1AA)) & 0x300 ^ v25 & 0x1AA ^ ((2 * (v25 & 0x1AA)) | 0x400) & (v25 ^ 0xC3926022);
  LODWORD(v23) = (2 * (v25 ^ 0xC3926022)) & 0xF88 ^ 0x88 ^ ((2 * (v25 ^ 0xC3926022)) ^ 0x88441710) & (v25 ^ 0xC3926022);
  v27 = (4 * v26) & 0x67A20F88 ^ v26 ^ ((4 * v26) ^ 0x2800) & v23;
  LODWORD(v23) = (4 * v23) & 0x67A20F88 ^ 0x61220188 ^ ((4 * v23) ^ 0x9E883E20) & v23;
  v28 = (16 * v27) & 0x67A20F80 ^ v27 ^ ((16 * v27) ^ 0x2000) & v23;
  LODWORD(v23) = (16 * v23) & 0x67A20F80 ^ 0x5820708 ^ ((16 * v23) ^ 0x7A20F880) & v23;
  v29 = v28 ^ (v28 << 8) & 0x67A20F00 ^ ((v28 << 8) ^ 0x20000) & v23 ^ 0x67A00D88;
  v30 = STACK[0x18B0]
      + (((v19 ^ 0x452E7BB7) - 1160674231) ^ ((v19 ^ 0xED1FF474) + 316672908) ^ ((v19 ^ 0x251C1BA4) - 622599076))
      + a7
      + 5;
  v31 = *(unsigned __int8 *)(v30 - 0x3032385379A144E6);
  v32 = 1772489163 * ((1772489163 * (_DWORD)v30) ^ ((1772489163 * v30) >> 16));
  v33 = a3;
  LODWORD(v32) = ((v32 >> 24) * v12) ^ v32 ^ v31 ^ *(unsigned __int8 *)(a3 + (v32 >> 24)) ^ *(unsigned __int8 *)(v8 + (v32 >> 24)) ^ *(unsigned __int8 *)((v32 >> 24) + v7 + 1);
  LODWORD(STACK[0x17D8]) = 71 * (((v32 ^ 0xFFFFFFC7) + 115) ^ ((v32 ^ 0x75) - 63) ^ ((v32 ^ 0xFFFFFFB2) + 8)) - 122;
  v34 = v20
      + (((v19 ^ 0xF0FA169E) + 252045666) ^ ((v19 ^ 0x12400753) - 306186067) ^ ((v19 ^ 0x6F9785AA) - 1872201130))
      + a7
      + 1;
  v35 = *(unsigned __int8 *)(v34 - 0x3032385379A144E6);
  v36 = 1772489163 * ((1772489163 * (_DWORD)v34) ^ ((1772489163 * v34) >> 16));
  LODWORD(STACK[0x1858]) = ((v36 >> 24) * v12) ^ v36 ^ v35 ^ *(unsigned __int8 *)(a3 + (v36 >> 24)) ^ *(unsigned __int8 *)(v8 + (v36 >> 24)) ^ *(unsigned __int8 *)((v36 >> 24) + v7 + 1);
  v37 = v20 + (v19 ^ a7);
  v38 = *(unsigned __int8 *)(v37 - 0x3032385379A144E6);
  v39 = 1772489163 * ((1772489163 * (_DWORD)v37) ^ ((1772489163 * v37) >> 16));
  LODWORD(STACK[0xDB4]) = ((v39 >> 24) * v12) ^ v39 ^ v38 ^ *(unsigned __int8 *)(a3 + (v39 >> 24)) ^ *(unsigned __int8 *)(v8 + (v39 >> 24)) ^ *(unsigned __int8 *)((v39 >> 24) + v7 + 1);
  LODWORD(STACK[0x17C0]) = v25 ^ (2
                                * ((v29 << 16) & 0x67A20000 ^ v29 ^ ((v29 << 16) ^ 0xF880000) & (((_DWORD)v23 << 8) & 0x67A20000 ^ 0x45A00000 ^ (((_DWORD)v23 << 8) ^ 0x220F0000) & v23)));
  v40 = v20
      + (((v19 ^ 0x9E9D565B) + 1633855909) ^ ((v19 ^ 0x74A354DF) - 1956861151) ^ ((v19 ^ 0x671396E3) - 1729337059))
      + a7
      + 3;
  LODWORD(v39) = *(unsigned __int8 *)(v40 - 0x3032385379A144E6);
  v41 = 1772489163 * ((1772489163 * (_DWORD)v40) ^ ((1772489163 * v40) >> 16));
  LODWORD(STACK[0xDF0]) = ((v41 >> 24) * v12) ^ v41 ^ v39 ^ *(unsigned __int8 *)(a3 + (v41 >> 24)) ^ *(unsigned __int8 *)(v8 + (v41 >> 24)) ^ *(unsigned __int8 *)((v41 >> 24) + v7 + 1);
  v42 = v20
      + (((v19 ^ 0x27FABD56) - 670743894) ^ ((v19 ^ 0xCD7EE72) - 215477874) ^ ((v19 ^ 0xA600C743) + 1509898429))
      + a7
      + 4;
  v43 = *(unsigned __int8 *)(v42 - 0x3032385379A144E6);
  v44 = 1772489163 * ((1772489163 * (_DWORD)v42) ^ ((1772489163 * v42) >> 16));
  v45 = ((v44 >> 24) * v12) ^ v44 ^ v43 ^ *(unsigned __int8 *)(a3 + (v44 >> 24));
  v46 = *(unsigned __int8 *)(v8 + (v44 >> 24)) ^ *(unsigned __int8 *)((v44 >> 24) + v7 + 1);
  LODWORD(v44) = (((v19 ^ 0x78181A27) - 2014845479) ^ ((v19 ^ 0x27F46795) - 670328725) ^ ((v19 ^ 0xD2C1E9D5) + 759043627))
               - 1461121866;
  v47 = (v44 ^ 0xE07687B7) & (2 * (v44 & 0xE44487B7)) ^ v44 & 0xE44487B7;
  v48 = ((2 * (v44 ^ 0x207F8ED9)) ^ 0x887612DC) & (v44 ^ 0x207F8ED9) ^ (2 * (v44 ^ 0x207F8ED9)) & 0xC43B096E;
  v49 = v48 ^ 0x44090922;
  v50 = (v48 ^ 0xC43B004E) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0x10EC25B8) & v49 ^ (4 * v49) & 0xC43B096C;
  v52 = (v51 ^ 0x280126) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0xC4130846)) ^ 0x43B096E0) & (v51 ^ 0xC4130846) ^ (16 * (v51 ^ 0xC4130846)) & 0xC43B0960;
  v54 = v52 ^ 0xC43B096E ^ (v53 ^ 0x40300000) & (v52 << 8);
  LODWORD(v44) = v44 ^ (2
                      * ((v54 << 16) & 0x443B0000 ^ v54 ^ ((v54 << 16) ^ 0x96E0000) & (((v53 ^ 0x840B090E) << 8) & 0xC43B0000 ^ 0x44320000 ^ (((v53 ^ 0x840B090E) << 8) ^ 0x3B090000) & (v53 ^ 0x840B090E))));
  v55 = v20 + (v44 ^ 0x6C66956B);
  v56 = *(unsigned __int8 *)(v55 - 0x3032385379A144E6);
  v57 = 1772489163 * ((1772489163 * (_DWORD)v55) ^ ((1772489163 * v55) >> 16));
  v58 = *(unsigned __int8 *)(v33 + (v57 >> 24));
  LODWORD(STACK[0xDC4]) = v45 ^ v46;
  v59 = ((v57 >> 24) * v12) ^ v57 ^ v56 ^ v58;
  v60 = *(unsigned __int8 *)(v8 + (v57 >> 24)) ^ *(unsigned __int8 *)((v57 >> 24) + v7 + 1);
  v61 = v20
      + (((v44 ^ 0xF8E03DB6) - 430652602) ^ ((v44 ^ 0x4768C7AB) + 1507604825) ^ ((v44 ^ 0xD3EE6F76) - 849702522))
      + a7
      + 1;
  LODWORD(v57) = *(unsigned __int8 *)(v61 - 0x3032385379A144E6);
  v62 = 1772489163 * ((1772489163 * (_DWORD)v61) ^ ((1772489163 * v61) >> 16));
  LODWORD(v61) = *(unsigned __int8 *)(v9 + (v62 >> 24));
  v63 = *(unsigned __int8 *)(v10 + (v62 >> 24));
  LODWORD(STACK[0x1768]) = v59 ^ v60;
  STACK[0x1778] = v62 >> 24;
  LODWORD(v33) = *(unsigned __int8 *)(v11 + (v62 >> 24));
  LODWORD(STACK[0x1798]) = v57;
  STACK[0x1780] = v62;
  LODWORD(STACK[0xDA8]) = v57 ^ v62 ^ (81 * (v62 >> 24)) ^ v61 ^ v63 ^ v33;
  v64 = v20
      + (((v44 ^ 0x745D5E99) + 1793695851) ^ ((v44 ^ 0xC04421D) + 313572591) ^ ((v44 ^ 0x143F89EF) + 176912157))
      + a7
      + 2;
  LODWORD(v61) = *(unsigned __int8 *)(v64 - 0x3032385379A144E6);
  v65 = 1772489163 * ((1772489163 * (_DWORD)v64) ^ ((1772489163 * v64) >> 16));
  v66 = *(_QWORD *)(v13 + 8 * (v17 - 5249)) - 4;
  LODWORD(v33) = *(unsigned __int8 *)(v66 + (v65 >> 24));
  v67 = *(_QWORD *)(v13 + 8 * (v17 - 6558)) - 8;
  v68 = *(unsigned __int8 *)(v67 + (v65 >> 24));
  v69 = *(_QWORD *)(v13 + 8 * (v17 - 5834)) - 4;
  v70 = *(unsigned __int8 *)(v69 + (v65 >> 24));
  STACK[0x1758] = v65 >> 24;
  LODWORD(v61) = v61 ^ (55 * (v65 >> 24)) ^ v65;
  LODWORD(STACK[0x1708]) = v61;
  STACK[0x14A8] = v61 ^ v33 ^ v68 ^ v70;
  v71 = v20
      + (((v44 ^ 0x6A4FCEA6) + 1962618966) ^ ((v44 ^ 0x946B1E43) - 1965039439) ^ ((v44 ^ 0x9242458E) - 1929987202))
      + a7
      + 3;
  v72 = *(unsigned __int8 *)(v71 - 0x3032385379A144E6);
  v73 = 1772489163 * ((1772489163 * (_DWORD)v71) ^ ((1772489163 * v71) >> 16));
  LODWORD(v61) = *(unsigned __int8 *)(v66 + (v73 >> 24));
  LODWORD(v33) = *(unsigned __int8 *)(v67 + (v73 >> 24));
  v74 = *(unsigned __int8 *)(v69 + (v73 >> 24));
  STACK[0x1700] = v73 >> 24;
  v75 = v72 ^ (55 * (v73 >> 24)) ^ v73;
  LODWORD(STACK[0x16F8]) = v75;
  LODWORD(STACK[0xCEC]) = v75 ^ v61 ^ v33 ^ v74;
  v76 = v20
      + (((v44 ^ 0xDD7B7BF) + 325273933) ^ ((v44 ^ 0xD437F1D2) - 897380574) ^ ((v44 ^ 0xB586D306) - 1422774794))
      + a7
      + 4;
  v77 = *(unsigned __int8 *)(v76 - 0x3032385379A144E6);
  v78 = 1772489163 * ((1772489163 * (_DWORD)v76) ^ ((1772489163 * v76) >> 16));
  LODWORD(v78) = (55 * (v78 >> 24)) ^ v78 ^ v77 ^ *(unsigned __int8 *)(v66 + (v78 >> 24)) ^ *(unsigned __int8 *)(v67 + (v78 >> 24)) ^ *(unsigned __int8 *)(v69 + (v78 >> 24));
  v79 = v20
      + (((v44 ^ 0x6AF356CD) + 1950853183) ^ ((v44 ^ 0x93F144EF) - 1924810211) ^ ((v44 ^ 0x95648749) - 1949271621))
      + a7
      + 5;
  LODWORD(v61) = *(unsigned __int8 *)(v79 - 0x3032385379A144E6);
  v80 = 1772489163 * ((1772489163 * (_DWORD)v79) ^ ((1772489163 * v79) >> 16));
  LODWORD(v33) = *(unsigned __int8 *)(v66 + (v80 >> 24));
  v81 = *(unsigned __int8 *)(v67 + (v80 >> 24));
  LOBYTE(v77) = ((v44 ^ 0x56) - 90) ^ ((v44 ^ 0x12) - 30) ^ ((v44 ^ 0x2F) - 35);
  STACK[0x16F0] = v80 >> 24;
  LODWORD(v39) = *(unsigned __int8 *)(v69 + (v80 >> 24));
  v82 = v61 ^ (55 * (v80 >> 24)) ^ v80;
  LODWORD(STACK[0x16E0]) = v82;
  LODWORD(STACK[0x15AC]) = v82 ^ v33 ^ v81 ^ v39;
  LOBYTE(v80) = (~(2 * ((a7 + v77 - 4) & (v44 ^ 6))) + (-(char)v77 & 2 ^ (a7 + v77 - 4) & (v44 ^ 6) ^ 2)) & 2;
  v83 = STACK[0x18B8];
  LODWORD(v78) = *(unsigned __int8 *)(STACK[0x18B8]
                                    + ((-3
                                                       * (((v78 ^ 0x46) - 23) ^ ((v78 ^ 7) - 86) ^ ((v78 ^ 0x41) - 16))
                                                       + 13) ^ 0xFDu)
                                    + 40108);
  LODWORD(v39) = (v78 >> 7) & 0xFFFFFE01 | (2 * v78);
  v84 = v20
      + a7
      + (((v44 ^ 0xCF8863F9) - 784556789) ^ ((v44 ^ 0x9C2933C9) - 2103587525) ^ ((v44 ^ 0x3FC7C55B) + 561200041))
      + 6;
  LOBYTE(v80) = ((((v78 & 0x80) != 0) | (2 * v78)) >> v80) ^ (2 * v78);
  v85 = 1772489163 * ((1772489163 * (_DWORD)v84) ^ ((1772489163 * v84) >> 16));
  v86 = v85 >> 24;
  v87 = *(unsigned __int8 *)(v84 - 0x3032385379A144E6) ^ (55
                                                          * ((1772489163
                                                            * ((1772489163 * (_DWORD)v84) ^ ((1772489163 * v84) >> 16))) >> 24)) ^ v85;
  LODWORD(v85) = *(unsigned __int8 *)(v66 + (v85 >> 24)) ^ *(unsigned __int8 *)(v67 + (v85 >> 24));
  LODWORD(STACK[0x16D0]) = v87;
  v88 = v20
      + a7
      + (((v44 ^ 0x48E946BE) + 1448982606) ^ ((v44 ^ 0x9C16136C) - 2103251552) ^ ((v44 ^ 0xB899C0B9) - 1506984373))
      + 7;
  STACK[0x16D8] = v86;
  LODWORD(v33) = *(unsigned __int8 *)(v88 - 0x3032385379A144E6);
  LODWORD(STACK[0x1818]) = v87 ^ v85 ^ *(unsigned __int8 *)(v69 + v86);
  v89 = 1772489163 * ((1772489163 * (_DWORD)v88) ^ ((1772489163 * v88) >> 16));
  v90 = v89 >> 24;
  LODWORD(v33) = v33 ^ (55
                      * ((1772489163 * ((1772489163 * (_DWORD)v88) ^ ((1772489163 * v88) >> 16))) >> 24)) ^ v89;
  LODWORD(v89) = *(unsigned __int8 *)(v66 + (v89 >> 24)) ^ *(unsigned __int8 *)(v67 + (v89 >> 24));
  LODWORD(STACK[0x16B0]) = v33;
  STACK[0x16C0] = v90;
  LODWORD(STACK[0x159C]) = v33 ^ v89 ^ *(unsigned __int8 *)(v69 + v90);
  v91 = v20
      + a7
      + (((v44 ^ 0x51A13D7A) + 1326826378) ^ ((v44 ^ 0x6263A13) + 412271841) ^ ((v44 ^ 0x3BE19202) + 626355442))
      + 8;
  v92 = 1772489163 * ((1772489163 * (_DWORD)v91) ^ ((1772489163 * v91) >> 16));
  LODWORD(v90) = *(unsigned __int8 *)(v91 - 0x3032385379A144E6) ^ (55
                                                                   * ((1772489163
                                                                     * ((1772489163 * (_DWORD)v91) ^ ((1772489163 * v91) >> 16))) >> 24)) ^ v92;
  LODWORD(v91) = *(unsigned __int8 *)(v66 + (v92 >> 24)) ^ *(unsigned __int8 *)(v67 + (v92 >> 24));
  LODWORD(STACK[0x16A4]) = v90;
  STACK[0x16A8] = v92 >> 24;
  LODWORD(STACK[0x1584]) = v90 ^ v91 ^ *(unsigned __int8 *)(v69 + (v92 >> 24));
  LODWORD(v80) = v39 ^ ((v80 & 0xF0) >> 4);
  v93 = a7 + (((v44 ^ 0xC5F8641E) - 615736594) ^ ((v44 ^ 0xFF739AC3) - 507026383) ^ ((v44 ^ 0x56ED6BB6) + 1213830470));
  LOBYTE(v44) = (a7 + (((v44 ^ 0x1E) - 18) ^ ((v44 ^ 0xC3) + 49) ^ ((v44 ^ 0xB6) + 70)) + 9) & 0x53;
  v94 = v20 + (v93 + 9);
  LOBYTE(v92) = *(_BYTE *)(v94 - 0x3032385379A144E6);
  v95 = 1772489163 * ((1772489163 * (_DWORD)v94) ^ ((1772489163 * v94) >> 16));
  LOBYTE(v95) = ((55 * BYTE3(v95)) ^ v95 ^ v92 ^ *(_BYTE *)(v66 + (v95 >> 24)) ^ *(_BYTE *)(v67 + (v95 >> 24)) ^ *(_BYTE *)(v69 + (v95 >> 24)))
              * (-102 - v44 - (v44 ^ 0x53));
  v96 = v20 + (v93 + 10);
  LODWORD(v92) = *(unsigned __int8 *)(v96 - 0x3032385379A144E6);
  v97 = 1772489163 * ((1772489163 * (_DWORD)v96) ^ ((1772489163 * v96) >> 16));
  LODWORD(STACK[0x1698]) = v92;
  STACK[0x1690] = v97;
  STACK[0x1760] = v66;
  LODWORD(v96) = v92 ^ v97 ^ (55
                            * ((1772489163 * ((1772489163 * (_DWORD)v96) ^ ((1772489163 * v96) >> 16))) >> 24)) ^ *(unsigned __int8 *)(v66 + (v97 >> 24));
  STACK[0x1748] = v67;
  LODWORD(v92) = *(unsigned __int8 *)(v67 + (v97 >> 24));
  STACK[0x1720] = v69;
  STACK[0x1688] = v97 >> 24;
  LODWORD(STACK[0x1578]) = v96 ^ v92 ^ *(unsigned __int8 *)(v69 + (v97 >> 24));
  LODWORD(v95) = (v95 ^ 0xB1) + 39220038;
  LODWORD(v96) = ((2 * (v95 & 0x2519)) & 0x4220 | v95 & 0x2519) ^ ((2 * (v95 & 0x2519)) | 0x8000) & (v95 ^ 0xC602B671);
  LODWORD(v92) = (2 * (v95 ^ 0xC602B671)) & 0x368 ^ 0x5128 ^ ((2 * (v95 ^ 0xC602B671)) ^ 0x445486D0) & (v95 ^ 0xC602B671);
  LODWORD(v96) = (4 * v96) & 0x3BAB5368 ^ v96 ^ (4 * v96) & v92;
  LODWORD(v92) = (4 * v92) & 0x3BAB5368 ^ 0x11021248 ^ ((4 * v92) ^ 0xEEAD4DA0) & v92;
  LODWORD(v96) = (16 * v96) & 0x3BAB5360 ^ v96 ^ ((16 * v96) ^ 0x140000) & v92;
  LODWORD(v92) = (16 * v92) & 0x3BAB5360 ^ 0x10A4168 ^ ((16 * v92) ^ 0xBAB53680) & v92;
  LODWORD(v96) = v96 ^ ((_DWORD)v96 << 8) & 0x3BAB5300 ^ (((_DWORD)v96 << 8) ^ 0x1400000) & v92;
  v98 = v20 + (v93 + 11);
  LODWORD(v96) = ((v96 ^ 0x3AAA1368) << 16) & 0x3BAB0000 ^ v96 ^ 0x3AAA1368 ^ (((v96 ^ 0x3AAA1368) << 16) ^ 0x53680000) & (((_DWORD)v92 << 8) & 0x3BAB0000 ^ 0x10A80000 ^ (((_DWORD)v92 << 8) ^ 0x2B530000) & v92);
  v99 = 1772489163 * ((1772489163 * (_DWORD)v98) ^ ((1772489163 * v98) >> 16));
  v100 = v99 >> 24;
  LODWORD(v90) = *(unsigned __int8 *)(v98 - 0x3032385379A144E6) ^ (35
                                                                   * ((1772489163
                                                                     * ((1772489163 * (_DWORD)v98) ^ ((1772489163 * v98) >> 16))) >> 24)) ^ v99;
  LODWORD(v99) = *(unsigned __int8 *)(v14 + (v99 >> 24)) ^ *(unsigned __int8 *)(v15 + (v99 >> 24));
  LODWORD(STACK[0x1668]) = v90;
  STACK[0x1678] = v100;
  v101 = STACK[0x1850];
  LODWORD(STACK[0x1800]) = v90 ^ v99 ^ *(unsigned __int8 *)(STACK[0x1850] + v100);
  v102 = v20 + (v93 + 12);
  v103 = 1772489163 * ((1772489163 * (_DWORD)v102) ^ ((1772489163 * v102) >> 16));
  LODWORD(v90) = *(unsigned __int8 *)(v102 - 0x3032385379A144E6) ^ (35
                                                                    * ((1772489163
                                                                      * ((1772489163 * (_DWORD)v102) ^ ((1772489163 * v102) >> 16))) >> 24)) ^ v103;
  LODWORD(v102) = *(unsigned __int8 *)(v14 + (v103 >> 24)) ^ *(unsigned __int8 *)(v15 + (v103 >> 24));
  LODWORD(STACK[0x1650]) = v90;
  STACK[0x1658] = v103 >> 24;
  LODWORD(STACK[0x156C]) = v90 ^ v102 ^ *(unsigned __int8 *)(v101 + (v103 >> 24));
  LODWORD(STACK[0x17B0]) = v95 ^ (2 * v96);
  v104 = v20 + (v93 + 13);
  v105 = 1772489163 * ((1772489163 * (_DWORD)v104) ^ ((1772489163 * v104) >> 16));
  LODWORD(v102) = *(unsigned __int8 *)(v104 - 0x3032385379A144E6) ^ (35
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v104) ^ ((1772489163 * v104) >> 16))) >> 24)) ^ v105;
  LODWORD(v104) = *(unsigned __int8 *)(v14 + (v105 >> 24)) ^ *(unsigned __int8 *)(v15 + (v105 >> 24));
  LODWORD(STACK[0x1600]) = v102;
  STACK[0x1638] = v105 >> 24;
  LODWORD(STACK[0xE04]) = v102 ^ v104 ^ *(unsigned __int8 *)(v101 + (v105 >> 24));
  LODWORD(v80) = v80 ^ 0xFFFFFFD7;
  LODWORD(STACK[0x1254]) = (_DWORD)v80 << 6;
  LODWORD(STACK[0x1810]) = ((_DWORD)v80 << 6) | (v80 >> 2);
  v106 = v20 + (v93 + 14);
  v107 = 1772489163 * ((1772489163 * (_DWORD)v106) ^ ((1772489163 * v106) >> 16));
  v108 = v107 >> 24;
  LODWORD(v107) = (47 * ((1772489163 * ((1772489163 * (_DWORD)v106) ^ ((1772489163 * v106) >> 16))) >> 24)) ^ v107;
  LODWORD(v106) = *(unsigned __int8 *)(v106 - 0x3032385379A144E6);
  STACK[0x15A0] = v108 + 4;
  LODWORD(v105) = *(unsigned __int8 *)(STACK[0xAF8] + v108 + 4);
  v109 = STACK[0xB00];
  STACK[0x15E8] = v108 + 2;
  LODWORD(v90) = v106 ^ v107;
  LODWORD(v106) = v105 ^ *(unsigned __int8 *)(v109 + v108 + 2);
  STACK[0x15F0] = v108;
  LODWORD(v107) = *(unsigned __int8 *)(STACK[0xAF0] + v108);
  LODWORD(STACK[0x1590]) = v90;
  LODWORD(STACK[0xDE8]) = v90 ^ v107 ^ v106;
  v110 = v20 + (v93 + 15);
  LODWORD(v107) = *(unsigned __int8 *)(v110 - 0x3032385379A144E6);
  v111 = 1772489163 * ((1772489163 * (_DWORD)v110) ^ ((1772489163 * v110) >> 16));
  LODWORD(v107) = v107 ^ v111;
  v111 >>= 24;
  v112 = STACK[0x1828];
  v113 = STACK[0x1848];
  LODWORD(v105) = *(unsigned __int8 *)(v111 + STACK[0x1828] + 1) ^ *(unsigned __int8 *)(STACK[0x1848] + v111);
  v114 = v20 + (v93 + 16);
  v115 = 1772489163 * ((1772489163 * (_DWORD)v114) ^ ((1772489163 * v114) >> 16));
  LODWORD(v90) = *(unsigned __int8 *)(v114 - 0x3032385379A144E6) ^ (-75
                                                                    * ((1772489163
                                                                      * ((1772489163 * (_DWORD)v114) ^ ((1772489163 * v114) >> 16))) >> 24)) ^ v115;
  v116 = (v115 >> 24) + 1;
  STACK[0x1310] = v116;
  LODWORD(v116) = *(unsigned __int8 *)(v112 + v116) ^ *(unsigned __int8 *)(v113 + (v115 >> 24));
  STACK[0x1588] = v115 >> 24;
  LODWORD(v115) = *(unsigned __int8 *)(v16 + (v115 >> 24));
  LODWORD(STACK[0x1558]) = v90;
  LODWORD(STACK[0xD5C]) = v90 ^ v115 ^ v116;
  LODWORD(v116) = v107 ^ (-75 * v111);
  LODWORD(v107) = v107 ^ (5 * v111);
  LODWORD(v111) = *(unsigned __int8 *)(v16 + v111);
  LODWORD(v116) = v116 ^ v111;
  LODWORD(v111) = v107 ^ v111;
  LODWORD(v107) = v116 ^ v105;
  v117 = v20 + (v93 + 17);
  LODWORD(v115) = *(unsigned __int8 *)(v117 - 0x3032385379A144E6);
  LODWORD(v111) = v111 ^ v105;
  v118 = 1772489163 * ((1772489163 * (_DWORD)v117) ^ ((1772489163 * v117) >> 16));
  v119 = v118 >> 24;
  LODWORD(STACK[0x1540]) = v115;
  STACK[0x1538] = v118;
  LODWORD(v105) = v115 ^ v118 ^ (-75 * (v118 >> 24)) ^ *(unsigned __int8 *)(v16 + (v118 >> 24));
  v120 = (v118 >> 24) + 1;
  STACK[0x1530] = v120;
  LODWORD(v105) = v105 ^ *(unsigned __int8 *)(v112 + v120);
  STACK[0x1508] = v119;
  LODWORD(STACK[0x1554]) = v105 ^ *(unsigned __int8 *)(v113 + v119);
  v121 = v20 + (v93 + 18);
  v122 = 1772489163 * ((1772489163 * (_DWORD)v121) ^ ((1772489163 * v121) >> 16));
  v123 = v122 >> 24;
  LODWORD(v122) = *(unsigned __int8 *)(v121 - 0x3032385379A144E6) ^ (-7
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v121) ^ ((1772489163 * v121) >> 16))) >> 24)) ^ v122;
  v124 = *(_QWORD *)(v13 + 8 * (v17 ^ 0x1A13)) - 4;
  v125 = *(_QWORD *)(v13 + 8 * (v17 - 4540));
  LODWORD(v121) = *(unsigned __int8 *)(v124 + v123);
  LODWORD(STACK[0x14C8]) = v122;
  STACK[0x14B8] = v123 + 1;
  LODWORD(v121) = v122 ^ v121 ^ *(unsigned __int8 *)(v125 + v123 + 1);
  v126 = *(_QWORD *)(v13 + 8 * (v17 - 4644)) - 12;
  v127 = v20 + (v93 + 19);
  STACK[0x14F0] = v123;
  STACK[0x14B0] = v123 + 2;
  LODWORD(v100) = *(unsigned __int8 *)(v127 - 0x3032385379A144E6);
  STACK[0xDF8] = v121 ^ *(unsigned __int8 *)(v126 + v123 + 2);
  v128 = 1772489163 * ((1772489163 * (_DWORD)v127) ^ ((1772489163 * v127) >> 16));
  v129 = v128 >> 24;
  LODWORD(v115) = v100 ^ (-7
                        * ((1772489163 * ((1772489163 * (_DWORD)v127) ^ ((1772489163 * v127) >> 16))) >> 24)) ^ v128;
  LODWORD(v128) = *(unsigned __int8 *)(v124 + (v128 >> 24));
  LODWORD(STACK[0x1458]) = v115;
  STACK[0x1418] = v129 + 1;
  LODWORD(v128) = v115 ^ v128 ^ *(unsigned __int8 *)(v125 + v129 + 1);
  STACK[0x1490] = v129;
  v129 += 2;
  STACK[0x1408] = v129;
  LODWORD(STACK[0x1560]) = v128 ^ *(unsigned __int8 *)(v126 + v129);
  HIDWORD(v24) = v111;
  LODWORD(v24) = (_DWORD)v107 << 24;
  v130 = v20 + (v93 + 20);
  v131 = 1772489163 * ((1772489163 * (_DWORD)v130) ^ ((1772489163 * v130) >> 16));
  v132 = v131 >> 24;
  LODWORD(v131) = *(unsigned __int8 *)(v130 - 0x3032385379A144E6) ^ (-7
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v130) ^ ((1772489163 * v130) >> 16))) >> 24)) ^ v131;
  LODWORD(v130) = *(unsigned __int8 *)(v124 + v132);
  LODWORD(STACK[0x13E8]) = v131;
  LODWORD(v130) = v131 ^ v130;
  STACK[0x13A8] = v132 + 1;
  LODWORD(v131) = *(unsigned __int8 *)(v125 + v132 + 1);
  STACK[0x13F0] = v132;
  v132 += 2;
  STACK[0x13B8] = v132;
  LODWORD(STACK[0x1548]) = v130 ^ v131 ^ *(unsigned __int8 *)(v126 + v132);
  v133 = v20 + (v93 + 21);
  v134 = 1772489163 * ((1772489163 * (_DWORD)v133) ^ ((1772489163 * v133) >> 16));
  v135 = v134 >> 24;
  LODWORD(v115) = *(unsigned __int8 *)(v133 - 0x3032385379A144E6) ^ (-7
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v133) ^ ((1772489163 * v133) >> 16))) >> 24)) ^ v134;
  LODWORD(v133) = *(unsigned __int8 *)(v124 + (v134 >> 24));
  v136 = (v134 >> 24) + 1;
  STACK[0x1390] = v136;
  LODWORD(v136) = *(unsigned __int8 *)(v125 + v136);
  LODWORD(STACK[0x139C]) = v115;
  STACK[0x13A0] = v135;
  STACK[0x1388] = v135 + 2;
  LODWORD(STACK[0x1528]) = v115 ^ v133 ^ v136 ^ *(unsigned __int8 *)(v126 + v135 + 2);
  v137 = v20 + (v93 + 22);
  v138 = 1772489163 * ((1772489163 * (_DWORD)v137) ^ ((1772489163 * v137) >> 16));
  v139 = v138 >> 24;
  LODWORD(v127) = *(unsigned __int8 *)(v124 + (v138 >> 24));
  LODWORD(v137) = *(unsigned __int8 *)(v137 - 0x3032385379A144E6) ^ (-7
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v137) ^ ((1772489163 * v137) >> 16))) >> 24)) ^ v138;
  LODWORD(STACK[0x1378]) = v137;
  v140 = (v138 >> 24) + 1;
  STACK[0x1368] = v140;
  LODWORD(v137) = v137 ^ v127 ^ *(unsigned __int8 *)(v125 + v140);
  STACK[0x1380] = v139;
  STACK[0x1370] = v139 + 2;
  LODWORD(STACK[0x1440]) = v137 ^ *(unsigned __int8 *)(v126 + v139 + 2);
  LODWORD(v111) = ((v24 >> 27) ^ 0x99) + 786844923;
  LODWORD(v137) = ((2 * (v111 & 0x4055)) & 0x8022 | v111 & 0x4055) ^ (2 * (v111 & 0x4055)) & (v111 ^ 0xFF207E22);
  LODWORD(v140) = (2 * (v111 ^ 0xFF207E22)) & 0x2276 ^ 0x8A11 ^ ((2 * (v111 ^ 0xFF207E22)) ^ 0x504230EE) & (v111 ^ 0xFF207E22);
  LODWORD(v137) = (4 * v137) & 0x10274 ^ v137 ^ ((4 * v137) | 0x3000) & v140;
  LODWORD(v140) = (4 * v140) & 0x2E39BA74 ^ 0x6191223 ^ ((4 * v140) ^ 0xB8E6E9DC) & v140;
  LODWORD(v137) = (16 * v137) & 0x2E39BA70 ^ v137 ^ ((16 * v137) ^ 0x3C000) & v140;
  LODWORD(v140) = (16 * v140) & 0x2E39BA70 ^ 0xC201807 ^ ((16 * v140) ^ 0xE39BA770) & v140;
  LODWORD(v137) = v137 ^ ((_DWORD)v137 << 8) & 0x2E39BA00 ^ (((_DWORD)v137 << 8) ^ 0x1BC0000) & v140;
  LODWORD(STACK[0x17A8]) = v111 ^ (2
                                 * (((v137 ^ 0x2E000677) << 16) & 0x2E390000 ^ v137 ^ 0x2E000677 ^ (((v137 ^ 0x2E000677) << 16) ^ 0x3A770000) & (((_DWORD)v140 << 8) & 0x2E390000 ^ 0x6010000 ^ (((_DWORD)v140 << 8) ^ 0x39BA0000) & v140)));
  v141 = v20 + (v93 + 23);
  v142 = 1772489163 * ((1772489163 * (_DWORD)v141) ^ ((1772489163 * v141) >> 16));
  v143 = v142 >> 24;
  LODWORD(v142) = *(unsigned __int8 *)(v141 - 0x3032385379A144E6) ^ (-7
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v141) ^ ((1772489163 * v141) >> 16))) >> 24)) ^ v142;
  LODWORD(v141) = *(unsigned __int8 *)(v124 + v143);
  LODWORD(STACK[0x1350]) = v142;
  STACK[0x1348] = v143 + 1;
  LODWORD(v141) = v142 ^ v141 ^ *(unsigned __int8 *)(v125 + v143 + 1);
  STACK[0x1358] = v143;
  STACK[0x1340] = v143 + 2;
  LODWORD(STACK[0x1644]) = v141 ^ *(unsigned __int8 *)(v126 + v143 + 2);
  v144 = v20 + (v93 + 24);
  v145 = 1772489163 * ((1772489163 * (_DWORD)v144) ^ ((1772489163 * v144) >> 16));
  v146 = v145 >> 24;
  LODWORD(v145) = *(unsigned __int8 *)(v144 - 0x3032385379A144E6) ^ (-7
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v144) ^ ((1772489163 * v144) >> 16))) >> 24)) ^ v145;
  LODWORD(v144) = *(unsigned __int8 *)(v124 + v146);
  LODWORD(STACK[0x1330]) = v145;
  STACK[0x1328] = v146 + 1;
  LODWORD(v144) = v145 ^ v144 ^ *(unsigned __int8 *)(v125 + v146 + 1);
  v147 = v20 + (v93 + 26);
  STACK[0x1338] = v146;
  STACK[0x1320] = v146 + 2;
  LODWORD(v127) = *(unsigned __int8 *)(v147 - 0x3032385379A144E6);
  LODWORD(STACK[0x1488]) = v144 ^ *(unsigned __int8 *)(v126 + v146 + 2);
  v148 = 1772489163 * ((1772489163 * (_DWORD)v147) ^ ((1772489163 * v147) >> 16));
  v149 = v148 >> 24;
  LODWORD(v115) = v127 ^ (71
                        * ((1772489163 * ((1772489163 * (_DWORD)v147) ^ ((1772489163 * v147) >> 16))) >> 24)) ^ v148;
  v150 = *(_QWORD *)(v13 + 8 * (v17 ^ 0x1E28));
  v151 = *(_QWORD *)(v13 + 8 * (v17 ^ 0x1301));
  v152 = *(_QWORD *)(v13 + 8 * (v17 - 3917)) - 8;
  STACK[0x12F8] = v149 + 1;
  LODWORD(v147) = *(unsigned __int8 *)(v151 + v149 + 1);
  STACK[0x1300] = v149 + 5;
  LODWORD(v147) = v147 ^ *(unsigned __int8 *)(v152 + v149 + 5);
  v153 = v150 - 4;
  STACK[0x1318] = v149;
  LODWORD(v150) = *(unsigned __int8 *)(v150 - 4 + v149);
  LODWORD(STACK[0x130C]) = v115;
  LODWORD(STACK[0x1524]) = v115 ^ v150 ^ v147;
  v154 = v20 + (v93 + 25);
  LOBYTE(v147) = *(_BYTE *)(v154 - 0x3032385379A144E6);
  v155 = 1772489163 * ((1772489163 * (_DWORD)v154) ^ ((1772489163 * v154) >> 16));
  LOBYTE(v147) = v155 ^ v147;
  v155 >>= 24;
  STACK[0x14D8] = v124;
  LOBYTE(v147) = v147 ^ (-7 * v155) ^ *(_BYTE *)(v124 + v155);
  STACK[0x14E8] = v125;
  LOBYTE(v140) = *(_BYTE *)(v155 + v125 + 1);
  STACK[0x14D0] = v126;
  LOBYTE(v155) = v147 ^ v140 ^ *(_BYTE *)(v155 + v126 + 2);
  v156 = v20 + (v93 + 27);
  LODWORD(v140) = *(unsigned __int8 *)(v156 - 0x3032385379A144E6);
  v157 = 1772489163 * ((1772489163 * (_DWORD)v156) ^ ((1772489163 * v156) >> 16));
  LODWORD(v157) = (71 * (v157 >> 24)) ^ v157 ^ v140 ^ *(unsigned __int8 *)(v153 + (v157 >> 24)) ^ *(unsigned __int8 *)((v157 >> 24) + v151 + 1) ^ *(unsigned __int8 *)((v157 >> 24) + v152 + 5);
  LODWORD(v157) = ((-3 * (((v157 ^ 0x9F) + 114) ^ ((v157 ^ 0xF2) + 29) ^ ((v157 ^ 0x6D) - 124)) - 51) ^ 0x1B)
                + 992938419;
  LODWORD(v140) = (2 * (v157 & 0xB3)) & 0x60 ^ v157 & 0xB3 ^ ((2 * (v157 & 0xB3)) | 0x20000) & (v157 ^ 0x9388285B);
  LODWORD(v127) = (2 * (v157 ^ 0x9388285B)) & 0xE8 ^ 0x8828 ^ ((2 * (v157 ^ 0x9388285B)) ^ 0xA8A321D0) & (v157 ^ 0x9388285B);
  LODWORD(v140) = (4 * v140) & 0x5759B8E8 ^ v140 ^ ((4 * v140) | 0x40000) & v127;
  LODWORD(v127) = (4 * v127) & 0x5759B8E8 ^ 0x2191848 ^ ((4 * v127) ^ 0x5D66E3A0) & v127;
  LODWORD(v140) = (16 * v140) & 0x5759B8E0 ^ v140 ^ ((16 * v140) ^ 0x100000) & v127;
  LODWORD(v127) = (16 * v127) & 0x5759B8E0 ^ 0x2403068 ^ ((16 * v127) ^ 0x759B8E80) & v127;
  LODWORD(v140) = v140 ^ ((_DWORD)v140 << 8) & 0x5759B800 ^ (((_DWORD)v140 << 8) ^ 0x11000000) & v127;
  LODWORD(v157) = v157 ^ 0x4AF2E163 ^ (2
                                     * (((v140 ^ 0x4648B8E8) << 16) & 0x57590000 ^ v140 ^ 0x4648B8E8 ^ (((v140 ^ 0x4648B8E8) << 16) ^ 0x38E80000) & (((_DWORD)v127 << 8) & 0x57590000 ^ 0x6410000 ^ (((_DWORD)v127 << 8) ^ 0x59B80000) & v127)));
  v158 = v20 + (v93 + 28);
  v159 = 1772489163 * ((1772489163 * (_DWORD)v158) ^ ((1772489163 * v158) >> 16));
  v160 = v159 >> 24;
  LODWORD(v123) = *(unsigned __int8 *)(v158 - 0x3032385379A144E6) ^ (71
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v158) ^ ((1772489163 * v158) >> 16))) >> 24)) ^ v159;
  v161 = (v159 >> 24) + 1;
  STACK[0x12D8] = v161;
  LODWORD(v161) = *(unsigned __int8 *)(v151 + v161);
  v162 = (v159 >> 24) + 5;
  STACK[0x12E0] = v162;
  LODWORD(v161) = v161 ^ *(unsigned __int8 *)(v152 + v162);
  STACK[0x12F0] = v160;
  LODWORD(v162) = *(unsigned __int8 *)(v153 + v160);
  LODWORD(STACK[0x12EC]) = v123;
  LODWORD(STACK[0x1868]) = v123 ^ v162 ^ v161;
  v163 = v20 + (v93 + 29);
  v164 = 1772489163 * ((1772489163 * (_DWORD)v163) ^ ((1772489163 * v163) >> 16));
  v165 = v164 >> 24;
  LODWORD(v149) = *(unsigned __int8 *)(v163 - 0x3032385379A144E6) ^ (71
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v163) ^ ((1772489163 * v163) >> 16))) >> 24)) ^ v164;
  v166 = (v164 >> 24) + 1;
  STACK[0x12C8] = v166;
  LODWORD(v166) = *(unsigned __int8 *)(v151 + v166);
  v167 = (v164 >> 24) + 5;
  STACK[0x12B8] = v167;
  LODWORD(v166) = v166 ^ *(unsigned __int8 *)(v152 + v167);
  STACK[0x12D0] = v165;
  LODWORD(v167) = *(unsigned __int8 *)(v153 + v165);
  LODWORD(STACK[0x12C4]) = v149;
  LODWORD(STACK[0x1470]) = v149 ^ v167 ^ v166;
  LODWORD(v157) = *(unsigned __int8 *)(v83 + v157) ^ 0x4C ^ (*(unsigned __int8 *)(v83 + v157) >> 3) & 0x15;
  v168 = v20 + (v93 + 30);
  v169 = 1772489163 * ((1772489163 * (_DWORD)v168) ^ ((1772489163 * v168) >> 16));
  v170 = v169 >> 24;
  LODWORD(v165) = *(unsigned __int8 *)(v168 - 0x3032385379A144E6) ^ (71
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v168) ^ ((1772489163 * v168) >> 16))) >> 24)) ^ v169;
  v171 = (v169 >> 24) + 1;
  STACK[0x1298] = v171;
  LODWORD(v171) = *(unsigned __int8 *)(v151 + v171);
  v172 = (v169 >> 24) + 5;
  STACK[0x12A0] = v172;
  LODWORD(v171) = v171 ^ *(unsigned __int8 *)(v152 + v172);
  STACK[0x12B0] = v170;
  LODWORD(v172) = *(unsigned __int8 *)(v153 + v170);
  LODWORD(STACK[0x12A8]) = v165;
  STACK[0x1258] = v165 ^ v172 ^ v171;
  LODWORD(STACK[0x1204]) = (v157 >> 2) | ((_DWORD)v157 << 6);
  LODWORD(STACK[0x1400]) = 63 * (*(unsigned __int8 *)(v83 + (v155 ^ 0x12u) + 41218) ^ 9);
  v173 = v20 + (v93 + 32);
  v174 = 1772489163 * ((1772489163 * (_DWORD)v173) ^ ((1772489163 * v173) >> 16));
  v175 = v174 >> 24;
  LODWORD(v174) = (71 * ((1772489163 * ((1772489163 * (_DWORD)v173) ^ ((1772489163 * v173) >> 16))) >> 24)) ^ v174;
  LODWORD(v173) = *(unsigned __int8 *)(v173 - 0x3032385379A144E6);
  STACK[0x1288] = v175 + 1;
  LODWORD(v171) = *(unsigned __int8 *)(v151 + v175 + 1);
  STACK[0x1280] = v175 + 5;
  LODWORD(v123) = v173 ^ v174;
  LODWORD(v173) = v171 ^ *(unsigned __int8 *)(v152 + v175 + 5);
  STACK[0x1290] = v175;
  LODWORD(v174) = *(unsigned __int8 *)(v153 + v175);
  LODWORD(STACK[0x127C]) = v123;
  LODWORD(STACK[0x1860]) = v123 ^ v174 ^ v173;
  v176 = v20 + (v93 + 31);
  LOBYTE(v174) = *(_BYTE *)(v176 - 0x3032385379A144E6);
  v177 = 1772489163 * ((1772489163 * (_DWORD)v176) ^ ((1772489163 * v176) >> 16));
  LODWORD(v177) = ((v177 ^ v174 ^ (71 * BYTE3(v177)) ^ *(_BYTE *)(v153 + (v177 >> 24)) ^ *(_BYTE *)((v177 >> 24) + v151 + 1) ^ *(_BYTE *)((v177 >> 24) + v152 + 5)) ^ 0x12)
                + 2017785696;
  LODWORD(v174) = ((2 * (v177 & 0x9A2)) | 0x4000) & (v177 ^ 0x1C2A0586) ^ v177 & 0x9A2 ^ ((2 * (v177 & 0x9A2)) & 4 | 0x10000800);
  LODWORD(v171) = (2 * (v177 ^ 0x1C2A0586)) & 0x10C24 ^ 0x424 ^ ((2 * (v177 ^ 0x1C2A0586)) ^ 0x24225848) & (v177 ^ 0x1C2A0586);
  LODWORD(v174) = (4 * v174) & 0x1B91AC24 ^ v174 ^ ((4 * v174) ^ 0x4006A000) & v171;
  LODWORD(v171) = (4 * v171) & 0x9B91AC24 ^ 0x91910C24 ^ ((4 * v171) ^ 0x6446B090) & v171;
  LODWORD(v174) = (16 * v174) & 0x9B91AC20 ^ v174 ^ ((16 * v174) ^ 0x108000) & v171;
  LODWORD(v171) = (16 * v171) & 0x9B91AC20 ^ 0x2812C24 ^ ((16 * v171) ^ 0xB91AC240) & v171;
  LODWORD(v174) = v174 ^ 0x9A002424 ^ ((_DWORD)v174 << 8) & 0x9B91AC00 ^ (((_DWORD)v174 << 8) ^ 0x11880000) & v171;
  LODWORD(v174) = ((_DWORD)v174 << 16) & 0x1B910000 ^ v174 ^ (((_DWORD)v174 << 16) ^ 0x2C240000) & (((_DWORD)v171 << 8) & 0x9B910000 ^ 0xA110000 ^ (((_DWORD)v171 << 8) ^ 0x11AC0000) & v171);
  v178 = v20 + (v93 + 33);
  v179 = 1772489163 * ((1772489163 * (_DWORD)v178) ^ ((1772489163 * v178) >> 16));
  v180 = v179 >> 24;
  LODWORD(v175) = *(unsigned __int8 *)(v178 - 0x3032385379A144E6) ^ (71
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v178) ^ ((1772489163 * v178) >> 16))) >> 24)) ^ v179;
  v181 = (v179 >> 24) + 1;
  STACK[0x1240] = v181;
  LODWORD(v181) = *(unsigned __int8 *)(v151 + v181);
  v182 = (v179 >> 24) + 5;
  STACK[0x1260] = v182;
  LODWORD(v181) = v181 ^ *(unsigned __int8 *)(v152 + v182);
  STACK[0x1270] = v180;
  LODWORD(v182) = *(unsigned __int8 *)(v153 + v180);
  LODWORD(STACK[0x126C]) = v175;
  LODWORD(STACK[0x161C]) = v175 ^ v182 ^ v181;
  v183 = v20 + (v93 + 34);
  v184 = 1772489163 * ((1772489163 * (_DWORD)v183) ^ ((1772489163 * v183) >> 16));
  v185 = v184 >> 24;
  LODWORD(v175) = *(unsigned __int8 *)(v183 - 0x3032385379A144E6) ^ (71
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v183) ^ ((1772489163 * v183) >> 16))) >> 24)) ^ v184;
  LODWORD(v183) = *(unsigned __int8 *)(v153 + (v184 >> 24));
  v186 = (v184 >> 24) + 1;
  STACK[0x1220] = v186;
  LODWORD(v186) = *(unsigned __int8 *)(v151 + v186);
  STACK[0x1238] = v185;
  v185 += 5;
  STACK[0x1228] = v185;
  LODWORD(v186) = v186 ^ *(unsigned __int8 *)(v152 + v185);
  LODWORD(STACK[0x1230]) = v175;
  LODWORD(STACK[0x1438]) = v175 ^ v183 ^ v186;
  LODWORD(v177) = v177 ^ (2 * v174);
  v187 = v20 + (v93 + 35);
  v188 = 1772489163 * ((1772489163 * (_DWORD)v187) ^ ((1772489163 * v187) >> 16));
  LODWORD(v186) = *(unsigned __int8 *)(v187 - 0x3032385379A144E6) ^ (91
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v187) ^ ((1772489163 * v187) >> 16))) >> 24)) ^ v188;
  v189 = *(_QWORD *)(v13 + 8 * (v17 ^ 0x1F64)) - 12;
  v190 = *(_QWORD *)(v13 + 8 * (v17 - 5843));
  LODWORD(v187) = *(unsigned __int8 *)(v189 + (v188 >> 24)) ^ *(unsigned __int8 *)(v190 + (v188 >> 24));
  LODWORD(v112) = v17;
  v191 = *(_QWORD *)(v13 + 8 * (v17 & 0x1B1569EC)) - 12;
  LODWORD(STACK[0x1214]) = v186;
  STACK[0x1218] = v188 >> 24;
  v192 = (v188 >> 24) + 1;
  STACK[0x11F8] = v192;
  LODWORD(STACK[0x15F8]) = v186 ^ v187 ^ *(unsigned __int8 *)(v191 + v192);
  v193 = v20 + (v93 + 36);
  v194 = 1772489163 * ((1772489163 * (_DWORD)v193) ^ ((1772489163 * v193) >> 16));
  v195 = v194 >> 24;
  LODWORD(v194) = *(unsigned __int8 *)(v193 - 0x3032385379A144E6) ^ (91
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v193) ^ ((1772489163 * v193) >> 16))) >> 24)) ^ v194;
  LODWORD(v193) = *(unsigned __int8 *)(v189 + v195) ^ *(unsigned __int8 *)(v190 + v195);
  LODWORD(STACK[0x11EC]) = v194;
  LODWORD(v193) = v194 ^ v193;
  v196 = v20 + (v93 + 37);
  STACK[0x11F0] = v195++;
  STACK[0x11E0] = v195;
  LODWORD(v123) = *(unsigned __int8 *)(v196 - 0x3032385379A144E6);
  LODWORD(STACK[0xD4C]) = v193 ^ *(unsigned __int8 *)(v191 + v195);
  v197 = 1772489163 * ((1772489163 * (_DWORD)v196) ^ ((1772489163 * v196) >> 16));
  v198 = v197 >> 24;
  LODWORD(v186) = v123 ^ (91
                        * ((1772489163 * ((1772489163 * (_DWORD)v196) ^ ((1772489163 * v196) >> 16))) >> 24)) ^ v197;
  LODWORD(v197) = *(unsigned __int8 *)(v189 + (v197 >> 24)) ^ *(unsigned __int8 *)(v190 + (v197 >> 24));
  LODWORD(STACK[0x11D0]) = v186;
  STACK[0x11D8] = v198;
  STACK[0x11C8] = v198 + 1;
  LODWORD(STACK[0x1898]) = v186 ^ v197 ^ *(unsigned __int8 *)(v191 + v198 + 1);
  v199 = (v93 + 38);
  v200 = 1772489163 * ((1772489163 * ((_DWORD)v20 + (_DWORD)v199)) ^ ((1772489163 * (v20 + v199)) >> 16));
  v201 = v200 >> 24;
  LODWORD(v200) = *(unsigned __int8 *)(v20 + v199 - 0x3032385379A144E6) ^ (91
                                                                           * ((1772489163
                                                                             * ((1772489163
                                                                               * ((_DWORD)v20 + (_DWORD)v199)) ^ ((1772489163 * (v20 + v199)) >> 16))) >> 24)) ^ v200;
  LODWORD(v196) = *(unsigned __int8 *)(v189 + v201) ^ *(unsigned __int8 *)(v190 + v201);
  LODWORD(STACK[0x11BC]) = v200;
  STACK[0x11C0] = v201++;
  STACK[0x11B0] = v201;
  LODWORD(STACK[0x15E0]) = v200 ^ v196 ^ *(unsigned __int8 *)(v191 + v201);
  v202 = ((-39 - v93) & 0x455F1C1)
       + (int)v199
       + (v199 & 0x455F1C1)
       + ((-39 - v93) & 0xFBAA0E40)
       + (v199 & 0xFBAA0E40);
  LODWORD(STACK[0x1840]) = 63 * (*(unsigned __int8 *)(v83 + (v177 ^ 0xA098F1EA)) ^ 9);
  v203 = 1772489163 * ((1772489163 * ((_DWORD)v20 + (_DWORD)v202)) ^ ((1772489163 * (v20 + v202)) >> 16));
  LODWORD(v200) = *(unsigned __int8 *)(v20 + v202 - 0x3032385379A144E6) ^ (91
                                                                           * ((1772489163
                                                                             * ((1772489163
                                                                               * ((_DWORD)v20 + (_DWORD)v202)) ^ ((1772489163 * (v20 + v202)) >> 16))) >> 24)) ^ v203;
  LODWORD(v177) = *(unsigned __int8 *)(v189 + (v203 >> 24)) ^ *(unsigned __int8 *)(v190 + (v203 >> 24));
  STACK[0x11A8] = v203 >> 24;
  v204 = (v203 >> 24) + 1;
  STACK[0x1198] = v204;
  LODWORD(v204) = *(unsigned __int8 *)(v191 + v204);
  LODWORD(STACK[0x11A4]) = v200;
  LODWORD(STACK[0xD7C]) = v200 ^ v177 ^ v204;
  v205 = v20 + (v202 + 1);
  v206 = 1772489163 * ((1772489163 * (_DWORD)v205) ^ ((1772489163 * v205) >> 16));
  LODWORD(v200) = *(unsigned __int8 *)(v205 - 0x3032385379A144E6) ^ (91
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v205) ^ ((1772489163 * v205) >> 16))) >> 24)) ^ v206;
  LODWORD(v205) = *(unsigned __int8 *)(v189 + (v206 >> 24)) ^ *(unsigned __int8 *)(v190 + (v206 >> 24));
  LODWORD(STACK[0x118C]) = v200;
  STACK[0x1190] = v206 >> 24;
  v207 = (v206 >> 24) + 1;
  STACK[0x1180] = v207;
  LODWORD(STACK[0xD8C]) = v200 ^ v205 ^ *(unsigned __int8 *)(v191 + v207);
  v208 = v20 + (v202 + 2);
  v209 = 1772489163 * ((1772489163 * (_DWORD)v208) ^ ((1772489163 * v208) >> 16));
  LODWORD(v200) = *(unsigned __int8 *)(v208 - 0x3032385379A144E6) ^ (91
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v208) ^ ((1772489163 * v208) >> 16))) >> 24)) ^ v209;
  LODWORD(v208) = *(unsigned __int8 *)(v189 + (v209 >> 24)) ^ *(unsigned __int8 *)(v190 + (v209 >> 24));
  STACK[0x1170] = v209 >> 24;
  v210 = (v209 >> 24) + 1;
  STACK[0x1160] = v210;
  LODWORD(v210) = *(unsigned __int8 *)(v191 + v210);
  LODWORD(STACK[0x116C]) = v200;
  LODWORD(STACK[0x1518]) = v200 ^ v208 ^ v210;
  v211 = v20 + (v202 + 3);
  v212 = 1772489163 * ((1772489163 * (_DWORD)v211) ^ ((1772489163 * v211) >> 16));
  LODWORD(v185) = *(unsigned __int8 *)(v211 - 0x3032385379A144E6) ^ (91
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v211) ^ ((1772489163 * v211) >> 16))) >> 24)) ^ v212;
  LODWORD(v211) = *(unsigned __int8 *)(v189 + (v212 >> 24)) ^ *(unsigned __int8 *)(v190 + (v212 >> 24));
  LODWORD(STACK[0x1144]) = v185;
  STACK[0x1148] = v212 >> 24;
  v213 = (v212 >> 24) + 1;
  STACK[0x1138] = v213;
  LODWORD(STACK[0xDAC]) = v185 ^ v211 ^ *(unsigned __int8 *)(v191 + v213);
  v214 = v20 + (v202 + 4);
  v215 = 1772489163 * ((1772489163 * (_DWORD)v214) ^ ((1772489163 * v214) >> 16));
  LODWORD(v185) = *(unsigned __int8 *)(v214 - 0x3032385379A144E6) ^ (105
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v214) ^ ((1772489163 * v214) >> 16))) >> 24)) ^ v215;
  v216 = *(_QWORD *)(v13 + 8 * ((int)v112 - 6028)) - 12;
  v217 = *(_QWORD *)(v13 + 8 * ((int)v112 - 4965)) - 4;
  LODWORD(v214) = *(unsigned __int8 *)(v216 + (v215 >> 24)) ^ *(unsigned __int8 *)(v217 + (v215 >> 24));
  v218 = *(_QWORD *)(v13 + 8 * (int)(v112 ^ 0x1065)) - 8;
  LODWORD(STACK[0x10DC]) = v185;
  STACK[0x1120] = v215 >> 24;
  LODWORD(STACK[0x1514]) = v185 ^ v214 ^ *(unsigned __int8 *)(v218 + (v215 >> 24));
  v219 = v20 + (v202 + 5);
  v220 = 1772489163 * ((1772489163 * (_DWORD)v219) ^ ((1772489163 * v219) >> 16));
  v221 = v220 >> 24;
  LODWORD(v200) = *(unsigned __int8 *)(v219 - 0x3032385379A144E6) ^ (105
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v219) ^ ((1772489163 * v219) >> 16))) >> 24)) ^ v220;
  LODWORD(v219) = *(unsigned __int8 *)(v216 + (v220 >> 24)) ^ *(unsigned __int8 *)(v217 + (v220 >> 24));
  LODWORD(STACK[0x10C4]) = v200;
  v222 = v20 + (v202 + 6);
  STACK[0x10D0] = v221;
  LODWORD(v123) = *(unsigned __int8 *)(v222 - 0x3032385379A144E6);
  LODWORD(STACK[0x1428]) = v200 ^ v219 ^ *(unsigned __int8 *)(v218 + v221);
  v223 = 1772489163 * ((1772489163 * (_DWORD)v222) ^ ((1772489163 * v222) >> 16));
  v224 = v223 >> 24;
  LODWORD(v200) = v123 ^ (105
                        * ((1772489163 * ((1772489163 * (_DWORD)v222) ^ ((1772489163 * v222) >> 16))) >> 24)) ^ v223;
  LODWORD(v223) = *(unsigned __int8 *)(v216 + (v223 >> 24)) ^ *(unsigned __int8 *)(v217 + (v223 >> 24));
  LODWORD(STACK[0x10C0]) = v200;
  STACK[0x10C8] = v224;
  LODWORD(STACK[0xDCC]) = v200 ^ v223 ^ *(unsigned __int8 *)(v218 + v224);
  v225 = v20 + (v202 + 7);
  v226 = 1772489163 * ((1772489163 * (_DWORD)v225) ^ ((1772489163 * v225) >> 16));
  LODWORD(v200) = *(unsigned __int8 *)(v225 - 0x3032385379A144E6) ^ (105
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v225) ^ ((1772489163 * v225) >> 16))) >> 24)) ^ v226;
  LODWORD(v225) = *(unsigned __int8 *)(v216 + (v226 >> 24)) ^ *(unsigned __int8 *)(v217 + (v226 >> 24));
  LODWORD(STACK[0x10BC]) = v200;
  STACK[0x1158] = v226 >> 24;
  LODWORD(STACK[0xDEC]) = v200 ^ v225 ^ *(unsigned __int8 *)(v218 + (v226 >> 24));
  v227 = v20 + (v202 + 8);
  v228 = 1772489163 * ((1772489163 * (_DWORD)v227) ^ ((1772489163 * v227) >> 16));
  v229 = v228 >> 24;
  LODWORD(v224) = *(unsigned __int8 *)(v227 - 0x3032385379A144E6) ^ (105
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v227) ^ ((1772489163 * v227) >> 16))) >> 24)) ^ v228;
  LODWORD(v227) = *(unsigned __int8 *)(v216 + (v228 >> 24)) ^ *(unsigned __int8 *)(v217 + (v228 >> 24));
  LODWORD(STACK[0x10B8]) = v224;
  v230 = v20 + (v202 + 9);
  STACK[0x1130] = v229;
  LODWORD(v125) = *(unsigned __int8 *)(v230 - 0x3032385379A144E6);
  LODWORD(STACK[0x1500]) = v224 ^ v227 ^ *(unsigned __int8 *)(v218 + v229);
  v231 = 1772489163 * ((1772489163 * (_DWORD)v230) ^ ((1772489163 * v230) >> 16));
  v232 = v231 >> 24;
  LODWORD(v229) = v125 ^ (105
                        * ((1772489163 * ((1772489163 * (_DWORD)v230) ^ ((1772489163 * v230) >> 16))) >> 24)) ^ v231;
  LODWORD(v231) = *(unsigned __int8 *)(v216 + (v231 >> 24)) ^ *(unsigned __int8 *)(v217 + (v231 >> 24));
  LODWORD(STACK[0x10B4]) = v229;
  LODWORD(STACK[0x15D0]) = v229 ^ v231 ^ *(unsigned __int8 *)(v218 + v232);
  v233 = (v202 + 11);
  v234 = 1772489163 * ((1772489163 * ((_DWORD)v20 + (_DWORD)v233)) ^ ((1772489163 * (v20 + v233)) >> 16));
  LODWORD(v229) = *(unsigned __int8 *)(v20 + v233 - 0x3032385379A144E6) ^ (105
                                                                           * ((1772489163
                                                                             * ((1772489163
                                                                               * ((_DWORD)v20 + (_DWORD)v233)) ^ ((1772489163 * (v20 + v233)) >> 16))) >> 24)) ^ v234;
  LODWORD(v230) = *(unsigned __int8 *)(v216 + (v234 >> 24)) ^ *(unsigned __int8 *)(v217 + (v234 >> 24));
  LODWORD(STACK[0x10B0]) = v229;
  LODWORD(STACK[0x1420]) = v229 ^ v230 ^ *(unsigned __int8 *)(v218 + (v234 >> 24));
  v235 = v20 + (v202 + 10);
  LOBYTE(v234) = *(_BYTE *)(v235 - 0x3032385379A144E6);
  v236 = 1772489163 * ((1772489163 * (_DWORD)v235) ^ ((1772489163 * v235) >> 16));
  LOBYTE(v233) = ((105 * BYTE3(v236)) ^ v236 ^ v234 ^ *(_BYTE *)(v216 + (v236 >> 24)) ^ *(_BYTE *)(v217 + (v236 >> 24)) ^ *(_BYTE *)(v218 + (v236 >> 24)))
               * (((v202 + 11) & 0x47) + ((116 - v202) & 0x47));
  v237 = v20 + (v202 + 12);
  LODWORD(v224) = *(unsigned __int8 *)(v237 - 0x3032385379A144E6);
  v238 = 1772489163 * ((1772489163 * (_DWORD)v237) ^ ((1772489163 * v237) >> 16));
  STACK[0x10A8] = v238;
  LODWORD(STACK[0x10A4]) = v224;
  STACK[0xE10] = v224 ^ v238 ^ (105
                                                          * ((1772489163
                                                            * ((1772489163 * (_DWORD)v237) ^ ((1772489163 * v237) >> 16))) >> 24)) ^ *(unsigned __int8 *)(v216 + (v238 >> 24)) ^ *(unsigned __int8 *)(v217 + (v238 >> 24)) ^ *(unsigned __int8 *)(v218 + (v238 >> 24));
  v239 = v20 + (v202 + 13);
  v240 = 1772489163 * ((1772489163 * (_DWORD)v239) ^ ((1772489163 * v239) >> 16));
  v241 = STACK[0xC20];
  v242 = STACK[0xC28];
  LODWORD(v238) = *(unsigned __int8 *)(v239 - 0x3032385379A144E6) ^ (85
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v239) ^ ((1772489163 * v239) >> 16))) >> 24)) ^ v240;
  LODWORD(v239) = *(unsigned __int8 *)(STACK[0xC20] + (v240 >> 24)) ^ *(unsigned __int8 *)(STACK[0xC28] + (v240 >> 24));
  LODWORD(STACK[0x10A0]) = v238;
  LODWORD(v239) = v238 ^ v239;
  v243 = (v240 >> 24) + 3;
  v244 = STACK[0xC18];
  STACK[0x1098] = v243;
  LODWORD(STACK[0x14F8]) = v239 ^ *(unsigned __int8 *)(v244 + v243);
  LODWORD(v233) = (v233 ^ 0xB1) + 731651859;
  LODWORD(v239) = (2 * (v233 & 0x394C)) & 0xE7E7 ^ v233 & 0x394C ^ ((2 * (v233 & 0x394C)) | 0x80000) & (v233 ^ 0x2390DBEB);
  LODWORD(v240) = (2 * (v233 ^ 0x2390DBEB)) & 0xE2A6 ^ 0x422A1 ^ ((2 * (v233 ^ 0x2390DBEB)) ^ 0x808C54E) & (v233 ^ 0x2390DBEB);
  LODWORD(v239) = (4 * v239) & 0x77F4E2A4 ^ v239 ^ ((4 * v239) | 0x100000) & v240;
  LODWORD(v240) = (4 * v240) & 0x77F4E2A4 ^ 0x20246023 ^ ((4 * v240) ^ 0x5FD38A9C) & v240;
  LODWORD(v239) = (16 * v239) & 0x77F4E2A0 ^ v239 ^ ((16 * v239) ^ 0x1400000) & v240;
  LODWORD(v240) = (16 * v240) & 0xF7F4E2A0 ^ 0x80B0C087 ^ ((16 * v240) ^ 0x7F4E2A70) & v240;
  LODWORD(v239) = v239 ^ 0xA2A0E2A7 ^ ((_DWORD)v239 << 8) & 0xF7F4E200 ^ (((_DWORD)v239 << 8) ^ 0x54000000) & v240;
  LODWORD(STACK[0x17A0]) = v233 ^ (2
                                 * (((_DWORD)v239 << 16) & 0x77F40000 ^ v239 ^ (((_DWORD)v239 << 16) ^ 0x62A70000) & (((_DWORD)v240 << 8) & 0x77F40000 ^ 0x3140000 ^ (((_DWORD)v240 << 8) ^ 0x74E20000) & v240)));
  v245 = v20 + (v202 + 14);
  v246 = 1772489163 * ((1772489163 * (_DWORD)v245) ^ ((1772489163 * v245) >> 16));
  LODWORD(v243) = *(unsigned __int8 *)(v245 - 0x3032385379A144E6) ^ (85
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v245) ^ ((1772489163 * v245) >> 16))) >> 24)) ^ v246;
  v247 = v242;
  LODWORD(v245) = *(unsigned __int8 *)(v241 + (v246 >> 24)) ^ *(unsigned __int8 *)(v242 + (v246 >> 24));
  v248 = (v246 >> 24) + 3;
  STACK[0x1088] = v248;
  LODWORD(v246) = *(unsigned __int8 *)(v244 + v248);
  LODWORD(STACK[0x1094]) = v243;
  LODWORD(STACK[0x1410]) = v243 ^ v245 ^ v246;
  LODWORD(v245) = (((LODWORD(STACK[0x13F8]) ^ 0x136C545A) - 325866586) ^ ((LODWORD(STACK[0x13F8]) ^ 0x84A56186)
                                                                        + 2069536378) ^ ((LODWORD(STACK[0x13F8]) ^ 0x1AE4A1BB)
                                                                                       - 451191227))
                - 1226230905;
  LODWORD(v246) = (v245 ^ 0x95757A38) & (2 * (v245 & 0xD64460A0)) ^ v245 & 0xD64460A0;
  LODWORD(v124) = ((2 * (v245 ^ 0x35FDFB38)) ^ 0xC7733730) & (v245 ^ 0x35FDFB38) ^ (2 * (v245 ^ 0x35FDFB38)) & 0xE3B99B98;
  LODWORD(v246) = (v124 ^ 0xC3310300) & (4 * v246) ^ v246;
  LODWORD(v124) = ((4 * (v124 ^ 0x20888888)) ^ 0x8EE66E60) & (v124 ^ 0x20888888) ^ (4 * (v124 ^ 0x20888888)) & 0xE3B99B98;
  LODWORD(v246) = (v124 ^ 0x82A00A18) & (16 * v246) ^ v246;
  LODWORD(v124) = ((16 * (v124 ^ 0x61199198)) ^ 0x3B99B980) & (v124 ^ 0x61199198) ^ (16 * (v124 ^ 0x61199198)) & 0xE3B99B90;
  LODWORD(v246) = v246 ^ 0xE3B99B98 ^ (v124 ^ 0x23999900) & ((_DWORD)v246 << 8);
  LODWORD(v245) = v245 ^ (2
                        * (((_DWORD)v246 << 16) & 0x63B90000 ^ v246 ^ (((_DWORD)v246 << 16) ^ 0x1B980000) & (((v124 ^ 0xC0200218) << 8) & 0xE3B90000 ^ 0x42200000 ^ (((v124 ^ 0xC0200218) << 8) ^ 0x399B0000) & (v124 ^ 0xC0200218))));
  v249 = v20 + (v202 + 15);
  v250 = 1772489163 * ((1772489163 * (_DWORD)v249) ^ ((1772489163 * v249) >> 16));
  LODWORD(v243) = *(unsigned __int8 *)(v249 - 0x3032385379A144E6) ^ (85
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v249) ^ ((1772489163 * v249) >> 16))) >> 24)) ^ v250;
  LODWORD(v249) = *(unsigned __int8 *)(v241 + (v250 >> 24)) ^ *(unsigned __int8 *)(v242 + (v250 >> 24));
  LODWORD(STACK[0x1080]) = v243;
  LODWORD(v249) = v243 ^ v249;
  v251 = (v250 >> 24) + 3;
  STACK[0x1078] = v251;
  LODWORD(STACK[0x1460]) = v249 ^ *(unsigned __int8 *)(v244 + v251);
  v252 = v20 + (v202 + 16);
  v253 = 1772489163 * ((1772489163 * (_DWORD)v252) ^ ((1772489163 * v252) >> 16));
  LODWORD(v252) = *(unsigned __int8 *)(v252 - 0x3032385379A144E6) ^ (85
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v252) ^ ((1772489163 * v252) >> 16))) >> 24)) ^ v253;
  LODWORD(v251) = *(unsigned __int8 *)(v241 + (v253 >> 24)) ^ *(unsigned __int8 *)(v247 + (v253 >> 24));
  LODWORD(STACK[0x1074]) = v252;
  v254 = (v253 >> 24) + 3;
  STACK[0x1068] = v254;
  LODWORD(STACK[0x1450]) = v252 ^ v251 ^ *(unsigned __int8 *)(v244 + v254);
  v255 = v20 + (v202 + 17);
  v256 = 1772489163 * ((1772489163 * (_DWORD)v255) ^ ((1772489163 * v255) >> 16));
  LODWORD(v253) = *(unsigned __int8 *)(v255 - 0x3032385379A144E6) ^ (85
                                                                     * ((1772489163
                                                                       * ((1772489163 * (_DWORD)v255) ^ ((1772489163 * v255) >> 16))) >> 24)) ^ v256;
  LODWORD(v255) = *(unsigned __int8 *)(v241 + (v256 >> 24)) ^ *(unsigned __int8 *)(v247 + (v256 >> 24));
  LODWORD(STACK[0x1064]) = v253;
  v257 = (v256 >> 24) + 3;
  STACK[0x1058] = v257;
  LODWORD(STACK[0x1680]) = v253 ^ v255 ^ *(unsigned __int8 *)(v244 + v257);
  v258 = v20 + (v202 + 18);
  LODWORD(v257) = *(unsigned __int8 *)(v258 - 0x3032385379A144E6);
  v259 = 1772489163 * ((1772489163 * (_DWORD)v258) ^ ((1772489163 * v258) >> 16));
  LODWORD(STACK[0x1670]) = (85 * (v259 >> 24)) ^ v259 ^ v257 ^ *(unsigned __int8 *)(v241 + (v259 >> 24)) ^ *(unsigned __int8 *)(v247 + (v259 >> 24)) ^ *(unsigned __int8 *)((v259 >> 24) + v244 + 3);
  LODWORD(v257) = ((v202 + 1958828394) ^ 0x2BCA4A8) & (2 * ((v202 + 1958828394) & 0x8B3EA6A9)) ^ (v202 + 1958828394) & 0x8B3EA6A9;
  LODWORD(v100) = ((2 * ((v202 + 1958828394) ^ 0x4FCA4E8)) ^ 0x1F840482) & ((v202 + 1958828394) ^ 0x4FCA4E8) ^ (2 * ((v202 + 1958828394) ^ 0x4FCA4E8)) & 0x8FC20240;
  LODWORD(v257) = v257 ^ 0x8FC20241 ^ (v100 ^ 0xF800000) & (4 * v257);
  LODWORD(v100) = (4 * (v100 ^ 0x80420241)) & 0x8FC20240 ^ 0x80C20241 ^ ((4 * (v100 ^ 0x80420241)) ^ 0x3F080904) & (v100 ^ 0x80420241);
  LODWORD(v257) = (16 * v257) & 0x8FC20240 ^ v257 ^ ((16 * v257) ^ 0xFC202410) & v100;
  LODWORD(v100) = (16 * v100) & 0x8FC20240 ^ 0x3C20241 ^ ((16 * v100) ^ 0xFC202410) & v100;
  LODWORD(v257) = ((_DWORD)v257 << 8) & 0x8FC20200 ^ v257 ^ (((_DWORD)v257 << 8) ^ 0xC2024100) & v100;
  LODWORD(v259) = (v202 + 1958828394) ^ (2
                                       * (((_DWORD)v257 << 16) & 0xFC20000 ^ v257 ^ (((_DWORD)v257 << 16) ^ 0x2410000) & (((_DWORD)v100 << 8) & 0x8FC20000 ^ 0xDC00000 ^ (((_DWORD)v100 << 8) ^ 0x42020000) & v100)));
  v260 = (_BYTE *)(STACK[0x18B8] + (LODWORD(STACK[0x17C0]) ^ 0x647470BAu));
  LODWORD(v257) = (*v260 - 38) ^ ((*v260 - 38) >> 5) ^ ((*v260 - 38) >> 4);
  v261 = (_DWORD)v202 == -19;
  v262 = STACK[0x18B8];
  STACK[0x13E0] = ((*(unsigned __int8 *)(STACK[0x18B8] + (LODWORD(STACK[0x17D8]) ^ 0xB1u) + 22623) - 84) ^ 0x29u)
                - 107;
  LODWORD(STACK[0x15B0]) = ((*(unsigned __int8 *)(v262 + (LODWORD(STACK[0x17B0]) ^ 0xACAF43C9)) - 84) ^ 0x29) - 107;
  LODWORD(v202) = *(unsigned __int8 *)(v262 + (LODWORD(STACK[0x17A8]) ^ 0xD908B0BB));
  LODWORD(v100) = *(unsigned __int8 *)(v262 + (LODWORD(STACK[0x17A0]) ^ 0xFEC5FC02));
  LODWORD(STACK[0x13F8]) = v245 ^ 0x9B2AC3F7;
  LODWORD(STACK[0x15C0]) = v259 ^ 0x113364C;
  LODWORD(STACK[0xD34]) = ((v100 - 84) ^ 0x29) - 107;
  STACK[0x1208] = v202 ^ 0x38;
  LODWORD(STACK[0x1520]) = v257 ^ 0xFFFFFFE2;
  v263 = !v261;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (LODWORD(STACK[0x18A0]) ^ (23313 * v263))) - 8))();
}

uint64_t sub_10021ED0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  unsigned int v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;

  v19 = STACK[0xC20];
  v20 = STACK[0xC28];
  v21 = STACK[0xC18];
  LODWORD(STACK[0x1680]) = LODWORD(STACK[0x1064]) ^ *(unsigned __int8 *)(STACK[0xC20] + a3) ^ *(unsigned __int8 *)(STACK[0xC28] + a3) ^ *(unsigned __int8 *)(STACK[0xC18] + STACK[0x1058]);
  LODWORD(STACK[0x1450]) = LODWORD(STACK[0x1074]) ^ *(unsigned __int8 *)(v20 + v8) ^ *(unsigned __int8 *)(v19 + v8) ^ *(unsigned __int8 *)(v21 + STACK[0x1068]);
  LODWORD(STACK[0x1460]) = LODWORD(STACK[0x1080]) ^ *(unsigned __int8 *)(v19 + a7) ^ *(unsigned __int8 *)(v20 + a7) ^ *(unsigned __int8 *)(v21 + STACK[0x1078]);
  LODWORD(STACK[0x1410]) = LODWORD(STACK[0x1094]) ^ *(unsigned __int8 *)(v20 + a1) ^ *(unsigned __int8 *)(v19 + a1) ^ *(unsigned __int8 *)(v21 + STACK[0x1088]);
  LODWORD(STACK[0x14F8]) = LODWORD(STACK[0x10A0]) ^ *(unsigned __int8 *)(v19 + v18) ^ *(unsigned __int8 *)(v20 + v18) ^ *(unsigned __int8 *)(v21 + STACK[0x1098]);
  v22 = STACK[0x18A0];
  v23 = (LODWORD(STACK[0x18A0]) + 1284161776) & 0xB3756DFE;
  v24 = STACK[0x10A8];
  LODWORD(STACK[0x18A8]) = v23;
  STACK[0xE10] = LODWORD(STACK[0x10A4]) ^ v24 ^ ((v23 ^ 0xFFFFFFAB) * BYTE3(v24)) ^ *(unsigned __int8 *)(v20 + a4) ^ *(unsigned __int8 *)(v19 + a4) ^ *(unsigned __int8 *)(v21 + (v24 >> 24) + 3);
  LODWORD(v20) = *(unsigned __int8 *)(v11 + v9);
  LODWORD(STACK[0x1420]) = LODWORD(STACK[0x10B0]) ^ *(unsigned __int8 *)(v11 + v10) ^ *(unsigned __int8 *)(v12 + v10) ^ *(unsigned __int8 *)(v14 + v10);
  LODWORD(STACK[0x15D0]) = LODWORD(STACK[0x10B4]) ^ v20 ^ *(unsigned __int8 *)(v12 + v9) ^ *(unsigned __int8 *)(v14 + v9);
  v25 = STACK[0x1158];
  v26 = *(unsigned __int8 *)(v11 + STACK[0x1158]);
  LODWORD(STACK[0x1500]) = LODWORD(STACK[0x10B8]) ^ *(unsigned __int8 *)(v11 + STACK[0x1130]) ^ *(unsigned __int8 *)(v12 + STACK[0x1130]) ^ *(unsigned __int8 *)(v14 + STACK[0x1130]);
  LODWORD(STACK[0xDEC]) = LODWORD(STACK[0x10BC]) ^ v26 ^ *(unsigned __int8 *)(v12 + v25) ^ *(unsigned __int8 *)(v14 + v25);
  v27 = STACK[0x10D0];
  v28 = *(unsigned __int8 *)(v12 + STACK[0x10D0]);
  LODWORD(STACK[0xDCC]) = LODWORD(STACK[0x10C0]) ^ *(unsigned __int8 *)(v11 + STACK[0x10C8]) ^ *(unsigned __int8 *)(v12 + STACK[0x10C8]) ^ *(unsigned __int8 *)(v14 + STACK[0x10C8]);
  LODWORD(STACK[0x1428]) = LODWORD(STACK[0x10C4]) ^ v28 ^ *(unsigned __int8 *)(v11 + v27) ^ *(unsigned __int8 *)(v14 + v27);
  v29 = STACK[0x1148];
  v30 = *(unsigned __int8 *)(v17 + STACK[0x1148]);
  LODWORD(STACK[0x1514]) = LODWORD(STACK[0x10DC]) ^ *(unsigned __int8 *)(v11 + STACK[0x1120]) ^ *(unsigned __int8 *)(v12 + STACK[0x1120]) ^ *(unsigned __int8 *)(v14 + STACK[0x1120]);
  LODWORD(STACK[0xDAC]) = LODWORD(STACK[0x1144]) ^ v30 ^ *(unsigned __int8 *)(a5 + v29) ^ *(unsigned __int8 *)(v16 + STACK[0x1138]);
  v31 = STACK[0x1190];
  v32 = *(unsigned __int8 *)(a5 + STACK[0x1190]);
  LODWORD(STACK[0x1518]) = LODWORD(STACK[0x116C]) ^ *(unsigned __int8 *)(a5 + STACK[0x1170]) ^ *(unsigned __int8 *)(v17 + STACK[0x1170]) ^ *(unsigned __int8 *)(v16 + STACK[0x1160]);
  LODWORD(STACK[0xD8C]) = LODWORD(STACK[0x118C]) ^ v32 ^ *(unsigned __int8 *)(v17 + v31) ^ *(unsigned __int8 *)(v16 + STACK[0x1180]);
  v33 = STACK[0x11C0];
  v34 = *(unsigned __int8 *)(v17 + STACK[0x11C0]);
  LODWORD(STACK[0xD7C]) = LODWORD(STACK[0x11A4]) ^ *(unsigned __int8 *)(a5 + STACK[0x11A8]) ^ *(unsigned __int8 *)(v17 + STACK[0x11A8]) ^ *(unsigned __int8 *)(v16 + STACK[0x1198]);
  LODWORD(STACK[0x15E0]) = LODWORD(STACK[0x11BC]) ^ v34 ^ *(unsigned __int8 *)(a5 + v33) ^ *(unsigned __int8 *)(v16 + STACK[0x11B0]);
  v35 = STACK[0x11F0];
  v36 = *(unsigned __int8 *)(a5 + STACK[0x11F0]);
  LODWORD(STACK[0x1898]) = LODWORD(STACK[0x11D0]) ^ *(unsigned __int8 *)(v17 + STACK[0x11D8]) ^ *(unsigned __int8 *)(a5 + STACK[0x11D8]) ^ *(unsigned __int8 *)(v16 + STACK[0x11C8]);
  LODWORD(STACK[0xD4C]) = LODWORD(STACK[0x11EC]) ^ v36 ^ *(unsigned __int8 *)(v17 + v35) ^ *(unsigned __int8 *)(v16 + STACK[0x11E0]);
  v37 = *(unsigned __int8 *)(a6 + STACK[0x1220]);
  LODWORD(STACK[0x15F8]) = LODWORD(STACK[0x1214]) ^ *(unsigned __int8 *)(v17 + STACK[0x1218]) ^ *(unsigned __int8 *)(a5 + STACK[0x1218]) ^ *(unsigned __int8 *)(v16 + STACK[0x11F8]);
  LODWORD(STACK[0x1438]) = LODWORD(STACK[0x1230]) ^ v37 ^ *(unsigned __int8 *)(a8 + STACK[0x1238]) ^ *(unsigned __int8 *)(v13 + STACK[0x1228]);
  v38 = *(unsigned __int8 *)(a8 + STACK[0x1290]);
  LODWORD(STACK[0x161C]) = LODWORD(STACK[0x126C]) ^ *(unsigned __int8 *)(a8 + STACK[0x1270]) ^ *(unsigned __int8 *)(a6 + STACK[0x1240]) ^ *(unsigned __int8 *)(v13 + STACK[0x1260]);
  LODWORD(STACK[0x1860]) = LODWORD(STACK[0x127C]) ^ v38 ^ *(unsigned __int8 *)(a6 + STACK[0x1288]) ^ *(unsigned __int8 *)(v13 + STACK[0x1280]);
  v39 = *(unsigned __int8 *)(a8 + STACK[0x12D0]);
  STACK[0x1258] = LODWORD(STACK[0x12A8]) ^ *(unsigned __int8 *)(a8 + STACK[0x12B0]) ^ *(unsigned __int8 *)(a6 + STACK[0x1298]) ^ *(unsigned __int8 *)(v13 + STACK[0x12A0]);
  LODWORD(STACK[0x1470]) = LODWORD(STACK[0x12C4]) ^ v39 ^ *(unsigned __int8 *)(a6 + STACK[0x12C8]) ^ *(unsigned __int8 *)(v13 + STACK[0x12B8]);
  v40 = *(unsigned __int8 *)(a6 + STACK[0x12F8]);
  LODWORD(STACK[0x1868]) = LODWORD(STACK[0x12EC]) ^ *(unsigned __int8 *)(a8 + STACK[0x12F0]) ^ *(unsigned __int8 *)(a6 + STACK[0x12D8]) ^ *(unsigned __int8 *)(v13 + STACK[0x12E0]);
  LODWORD(STACK[0x1524]) = LODWORD(STACK[0x130C]) ^ v40 ^ *(unsigned __int8 *)(a8 + STACK[0x1318]) ^ *(unsigned __int8 *)(v13 + STACK[0x1300]);
  v41 = STACK[0x14D8];
  v42 = STACK[0x14E8];
  v43 = STACK[0x14D0];
  v44 = *(unsigned __int8 *)(STACK[0x14D8] + STACK[0x1358]);
  LODWORD(STACK[0x1488]) = LODWORD(STACK[0x1330]) ^ *(unsigned __int8 *)(STACK[0x14D8] + STACK[0x1338]) ^ *(unsigned __int8 *)(STACK[0x14E8] + STACK[0x1328]) ^ *(unsigned __int8 *)(STACK[0x14D0] + STACK[0x1320]);
  LODWORD(STACK[0x1644]) = LODWORD(STACK[0x1350]) ^ v44 ^ *(unsigned __int8 *)(v42 + STACK[0x1348]) ^ *(unsigned __int8 *)(v43 + STACK[0x1340]);
  v45 = *(unsigned __int8 *)(v41 + STACK[0x13A0]);
  LODWORD(STACK[0x1440]) = LODWORD(STACK[0x1378]) ^ *(unsigned __int8 *)(v41 + STACK[0x1380]) ^ *(unsigned __int8 *)(v42 + STACK[0x1368]) ^ *(unsigned __int8 *)(v43 + STACK[0x1370]);
  LODWORD(STACK[0x1528]) = LODWORD(STACK[0x139C]) ^ v45 ^ *(unsigned __int8 *)(v42 + STACK[0x1390]) ^ *(unsigned __int8 *)(v43 + STACK[0x1388]);
  v46 = *(unsigned __int8 *)(v41 + STACK[0x1490]);
  LODWORD(STACK[0x1548]) = LODWORD(STACK[0x13E8]) ^ *(unsigned __int8 *)(v41 + STACK[0x13F0]) ^ *(unsigned __int8 *)(v42 + STACK[0x13A8]) ^ *(unsigned __int8 *)(v43 + STACK[0x13B8]);
  LODWORD(STACK[0x1560]) = LODWORD(STACK[0x1458]) ^ v46 ^ *(unsigned __int8 *)(v42 + STACK[0x1418]) ^ *(unsigned __int8 *)(v43 + STACK[0x1408]);
  LODWORD(STACK[0x1554]) = (-7 * BYTE3(STACK[0x1538])) ^ STACK[0x1538] ^ LODWORD(STACK[0x1540]) ^ *(unsigned __int8 *)(v41 + STACK[0x1508]) ^ *(unsigned __int8 *)(v42 + STACK[0x1530]) ^ *(unsigned __int8 *)(v43 + (STACK[0x1538] >> 24) + 2);
  LODWORD(STACK[0xDE8]) = LODWORD(STACK[0x1590]) ^ *(unsigned __int8 *)(STACK[0xAF8] + STACK[0x15A0]) ^ *(unsigned __int8 *)(STACK[0xAF0] + STACK[0x15F0]) ^ *(unsigned __int8 *)(v15 + STACK[0x15E8]);
  v47 = STACK[0x1820];
  v48 = STACK[0x1808];
  v49 = STACK[0x1850];
  LODWORD(STACK[0xE04]) = LODWORD(STACK[0x1600]) ^ *(unsigned __int8 *)(STACK[0x1820] + STACK[0x1638]) ^ *(unsigned __int8 *)(STACK[0x1808] + STACK[0x1638]) ^ *(unsigned __int8 *)(STACK[0x1850] + STACK[0x1638]);
  LODWORD(STACK[0x156C]) = LODWORD(STACK[0x1650]) ^ *(unsigned __int8 *)(v48 + STACK[0x1658]) ^ *(unsigned __int8 *)(v47 + STACK[0x1658]) ^ *(unsigned __int8 *)(v49 + STACK[0x1658]);
  LODWORD(STACK[0x1578]) = (35 * BYTE3(STACK[0x1690])) ^ STACK[0x1690] ^ LODWORD(STACK[0x1698]) ^ *(unsigned __int8 *)(v47 + STACK[0x1688]) ^ *(unsigned __int8 *)(v48 + STACK[0x1688]) ^ *(unsigned __int8 *)(v49 + STACK[0x1688]);
  v50 = STACK[0x1760];
  v51 = STACK[0x1748];
  v52 = STACK[0x1720];
  v53 = STACK[0x16C0];
  LODWORD(v47) = *(unsigned __int8 *)(STACK[0x1748] + STACK[0x16C0]);
  LODWORD(STACK[0x1584]) = LODWORD(STACK[0x16A4]) ^ *(unsigned __int8 *)(STACK[0x1760] + STACK[0x16A8]) ^ *(unsigned __int8 *)(STACK[0x1748] + STACK[0x16A8]) ^ *(unsigned __int8 *)(STACK[0x1720] + STACK[0x16A8]);
  LODWORD(STACK[0x159C]) = LODWORD(STACK[0x16B0]) ^ v47 ^ *(unsigned __int8 *)(v50 + v53) ^ *(unsigned __int8 *)(v52 + v53);
  LODWORD(STACK[0x15AC]) = LODWORD(STACK[0x16E0]) ^ *(unsigned __int8 *)(v50 + STACK[0x16F0]) ^ *(unsigned __int8 *)(v51 + STACK[0x16F0]) ^ *(unsigned __int8 *)(v52 + STACK[0x16F0]);
  STACK[0x14A8] = LODWORD(STACK[0x1708]) ^ *(unsigned __int8 *)(v50 + STACK[0x1758]) ^ *(unsigned __int8 *)(v51 + STACK[0x1758]) ^ *(unsigned __int8 *)(v52 + STACK[0x1758]);
  LODWORD(STACK[0xDA8]) = (55 * BYTE3(STACK[0x1780])) ^ STACK[0x1780] ^ LODWORD(STACK[0x1798]) ^ *(unsigned __int8 *)(v50 + STACK[0x1778]) ^ *(unsigned __int8 *)(v51 + STACK[0x1778]) ^ *(unsigned __int8 *)(v52 + STACK[0x1778]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v22) - 8))();
}

uint64_t sub_10021F558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (a6 + 2530))
                                                                                       - 12))(a1, a2, a3, a4, a5, 671088640);
}

uint64_t sub_10021F5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  LODWORD(STACK[0x1520]) = v7 ^ *(unsigned __int8 *)(STACK[0x1620] + v8) ^ *(unsigned __int8 *)(STACK[0x1628] + v8) ^ *(unsigned __int8 *)(STACK[0x1630] + v8 + 1) ^ (((565 * (v5 ^ 0x2D68)) ^ 0x5B) * v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x18C0] + 8 * v5))(a1, v6 ^ 0x406C4ACAu, a1, a4, a5, 671088640);
}

uint64_t sub_10021F61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0]
                                                                                                  + 8 * v5)
                                                                                      - (v5 + 520)
                                                                                      + 4987))(a1, a1 ^ 0x673092BC, a3, a4, a5, 671088640);
}

uint64_t sub_10021F64C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t (*v10)(void);

  LODWORD(STACK[0x16F8]) = v9 ^ (226 * (a2 ^ 0x13D8)) ^ 0x71526D1F;
  LODWORD(STACK[0xDA8]) = (111 * a4) ^ a3 ^ a1 ^ *(unsigned __int8 *)(a7 + a4) ^ *(unsigned __int8 *)(a8 + a6) ^ *(unsigned __int8 *)(v8 + a5);
  v10 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * a2);
  STACK[0x14A8] = 128;
  return v10();
}

uint64_t sub_10021F6E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  LODWORD(STACK[0x16F8]) = v6 ^ 0x758F8C5B;
  STACK[0x14A8] = a5 ^ a6 ^ *(unsigned __int8 *)(a2 + (a5 >> 24) + 4) ^ *(unsigned __int8 *)(a4 + v7) ^ *(unsigned __int8 *)(a3 + v7) ^ ((((a1 - 439) | 0x420E) ^ 0x43) * BYTE3(a5));
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * a1))();
}

uint64_t sub_10021F780(int a1)
{
  int v1;

  return (*(uint64_t (**)(_QWORD))(STACK[0x18C0] + 8 * (a1 ^ (8 * (v1 == -1926392724)))))(((a1 - 165) | 0x2180u) - 8213);
}

uint64_t sub_10021F9B0(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  LODWORD(STACK[0x1768]) = v7 ^ *(unsigned __int8 *)(v3 + v6) ^ *(unsigned __int8 *)(v4 + v6) ^ *(unsigned __int8 *)(v6 + v5 + 2) ^ (-87 * v6);
  LODWORD(STACK[0x16F8]) = (((a1 + 1791672440) & 0x95357FDE) + 706138729) ^ a3;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * a1))();
}

uint64_t sub_10021FA44(uint64_t a1, int a2)
{
  int v2;
  int v3;

  LODWORD(STACK[0x1810]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (a2 ^ (61 * (v2 != -1926392725)))) - 8))();
}

uint64_t sub_10021FE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;

  v14 = v12 + (v9 ^ 0x2A9F79FDu);
  v15 = *(unsigned __int8 *)(v14 + v13);
  v16 = (((_DWORD)v14 * v11) ^ ((v14 * v11) >> 16)) * v11;
  LODWORD(STACK[0x1818]) = v15 ^ ((v16 >> 24) * a5) ^ v16 ^ *(unsigned __int8 *)(a6 + (v16 >> 24)) ^ *(unsigned __int8 *)(a7 + (((v8 ^ 0x3161) + 4020) ^ 0x3039u) + (v16 >> 24)) ^ *(unsigned __int8 *)(a8 + (v16 >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                        + 8 * (v8 ^ ((8 * (v10 == -1926392726)) | (16 * (v10 == -1926392726)))))
                            - 8))();
}

uint64_t sub_100220098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  LODWORD(STACK[0x16F8]) = a5 ^ (v5 + 13142) ^ 0xD5DCB0E2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x18C0] + 8 * v5))(a1, a2, v6, a3, a4, 671088640);
}

uint64_t sub_1002200F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  LODWORD(STACK[0x16F8]) = v5 ^ 0xA7B2ED9A;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x18C0]
                                                                                         + 8 * (v6 - 13142)))(a1, a2, a3, a4, a5, 671088640);
}

uint64_t sub_10022013C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t (*v13)(void);

  LODWORD(STACK[0x15B0]) = 0;
  LODWORD(STACK[0xE04]) = 0;
  LODWORD(STACK[0x1800]) = 0;
  STACK[0x18A8] = *(_QWORD *)(v3 + 8 * (v1 - 10276)) - 8;
  v4 = (((a1 ^ 0x49AF31C5) + 1670130951) ^ ((a1 ^ 0x17D3B4DE) + 1039181854) ^ ((a1 ^ 0x68DF240) + 749661828))
     - 467819868;
  v5 = (v4 ^ 0x288FF5C1) & (2 * (v4 & 0xA90FF1C4)) ^ v4 & 0xA90FF1C4;
  v6 = ((2 * (v4 ^ 0x688BD4C9)) ^ 0x83084A1A) & (v4 ^ 0x688BD4C9) ^ (2 * (v4 ^ 0x688BD4C9)) & 0xC184250C;
  v7 = v6 ^ 0x40842505;
  v8 = v5 ^ 0xC184250D ^ (v6 ^ 0x80802005) & (4 * v5);
  v9 = (4 * v7) & 0xC184250C ^ 0xC1842109 ^ ((4 * v7) ^ 0x6109434) & v7;
  v10 = (16 * v8) & 0xC1842500 ^ v8 ^ ((16 * v8) ^ 0x184250D0) & v9;
  v11 = (16 * v9) & 0xC1842500 ^ 0xC184250D ^ ((16 * v9) ^ 0x184250D0) & v9;
  v12 = v10 ^ 0x80040500 ^ (v10 << 8) & 0xC1842500 ^ ((v10 << 8) ^ 0x84250D00) & v11;
  LODWORD(STACK[0x16F8]) = v4 ^ (2
                               * ((v12 << 16) & 0x41840000 ^ v12 ^ ((v12 << 16) ^ 0x250D0000) & ((v11 << 8) & 0xC1840000 ^ 0x41800000 ^ ((v11 << 8) ^ 0x84250000) & v11))) ^ 0xA5222FB9;
  v13 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((119 * (v2 == (v1 ^ 0x2DA2) - 1926400309)) ^ v1)) - 4);
  STACK[0x14B8] = 2368574569;
  return v13();
}

uint64_t sub_100220440@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t (*v12)(void);

  LODWORD(STACK[0xE04]) = 0;
  LODWORD(STACK[0x1800]) = 0;
  v3 = (((a1 ^ 0xC45D63F4) - 293699784) ^ ((a1 ^ 0xF22A020E) - 670490930) ^ ((a1 ^ 0x6E8616A1) + 1151666787))
     - 1241448029;
  v4 = (v3 ^ 0xD68E98A6) & (2 * (v3 & 0xD72C92C6)) ^ v3 & 0xD72C92C6;
  v5 = ((2 * (v3 ^ 0xD886BDA6)) ^ 0x1F545EC0) & (v3 ^ 0xD886BDA6) ^ (2 * (v3 ^ 0xD886BDA6)) & 0xFAA2F60;
  v6 = v5 ^ 0xAA2120;
  v7 = (v5 ^ 0xD000E00) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x3EA8BD80) & v6 ^ (4 * v6) & 0xFAA2F60;
  v9 = (v8 ^ 0xEA82D00) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x1020260)) ^ 0xFAA2F600) & (v8 ^ 0x1020260) ^ (16 * (v8 ^ 0x1020260)) & 0xFAA2F60;
  v11 = v9 ^ 0xFAA2F60 ^ (v10 ^ 0xAA22600) & (v9 << 8);
  LODWORD(STACK[0x16F8]) = v3 ^ (2
                               * ((v11 << 16) & 0xFAA0000 ^ v11 ^ ((v11 << 16) ^ 0x2F600000) & (((v10 ^ 0x5080960) << 8) & 0xFAA0000 ^ 0x5800000 ^ (((v10 ^ 0x5080960) << 8) ^ 0x2A2F0000) & (v10 ^ 0x5080960)))) ^ 0x5B155861;
  STACK[0x14B8] = 2368574568;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v1 ^ (107 * (v2 != -1926392728)))) - 8);
  LODWORD(STACK[0x15B0]) = 128;
  return v12();
}

uint64_t sub_1002206C8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;

  LODWORD(STACK[0x1584]) = a3;
  LODWORD(STACK[0x159C]) = v13;
  LODWORD(STACK[0x15AC]) = v14;
  LODWORD(STACK[0x14D0]) = v16;
  v17 = (unint64_t)(1772489163
                         * (((1772489163 * (LODWORD(STACK[0x18B0]) + (v12 ^ 0xD638CC06))) >> (((v11 + 13) & 0xDF) - 59)) ^ (1772489163 * (LODWORD(STACK[0x18B0]) + (v12 ^ 0xD638CC06))))) >> 24;
  v18 = (((a4 ^ 0xC089547B) - 357939015) ^ ((a4 ^ 0x236F42FC) + 155999808) ^ ((a4 ^ 0xBB1761DC) - 1858831072))
      - 1575506591;
  v19 = (v18 ^ 0xCBC1E700) & (2 * (v18 & 0xEB15E709)) ^ v18 & 0xEB15E709;
  v20 = ((2 * (v18 ^ 0xBE06502)) ^ 0xC1EB0416) & (v18 ^ 0xBE06502) ^ (2 * (v18 ^ 0xBE06502)) & 0xE0F5820A;
  v21 = v20 ^ 0x20148209;
  v22 = (v20 ^ 0xC0E10000) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ 0x83D6082C) & v21 ^ (4 * v21) & 0xE0F58208;
  v24 = (v23 ^ 0x80D40000) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x60218203)) ^ 0xF5820B0) & (v23 ^ 0x60218203) ^ (16 * (v23 ^ 0x60218203)) & 0xE0F58200;
  v26 = v24 ^ a11 ^ (v25 ^ 0x50000B) & (v24 << 8);
  STACK[0x14B8] = 2368574583;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * (v11 ^ (146 * (v15 == -1926392713)))) - 4))(v17, 41, a1, a2, v17 + 1, v18 ^ (2* ((v26 << 16) & 0x60F50000 ^ v26 ^ ((v26 << 16) ^ 0x20B0000) & (((v25 ^ 0xE0A5820B) << 8) & 0x60F50000 ^ 0x750000 ^ (((v25 ^ 0xE0A5820B) << 8) ^ 0xF5820000) & (v25 ^ 0xE0A5820B)))));
}

uint64_t sub_10022094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  LODWORD(STACK[0xE04]) = 0;
  LODWORD(STACK[0x1800]) = 0;
  v12 = *(unsigned __int8 *)(v8 + a1);
  v13 = *(unsigned __int8 *)(v7 + a1);
  v14 = *(unsigned __int8 *)(v6 + a5);
  LODWORD(STACK[0x16F8]) = a6 ^ 0xA7D17778;
  LODWORD(STACK[0x15B0]) = v11 ^ (-107 * HIBYTE(v9)) ^ v12 ^ v13 ^ v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v10) - ((v10 - 1428118637) & 0x551F7FFF) + 21466))();
}

uint64_t sub_1002209F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, unsigned int a3@<W5>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  v9 = v7 - 6092;
  v10 = v8 ^ *(unsigned __int8 *)(STACK[0xDD8] + a1) ^ *(unsigned __int8 *)(STACK[0xDE0] + a1);
  v11 = *(unsigned __int8 *)(STACK[0xDD0] + a2) ^ (109 * a1);
  v12 = STACK[0x18B0] + ((v9 + 721210016) ^ a3);
  v13 = *(unsigned __int8 *)(v12 - 0x3032385379A144E6);
  v14 = 1772489163 * ((1772489163 * (_DWORD)v12) ^ ((1772489163 * v12) >> 16));
  v15 = v14 >> ((-58 * (v9 ^ 0x7A)) ^ 0xC6u);
  v16 = *(unsigned __int8 *)(v6 + v15);
  LODWORD(STACK[0x15B0]) = v10 ^ v11;
  LODWORD(STACK[0x1578]) = v16 ^ v13 ^ *(unsigned __int8 *)(v5 + v15) ^ *(unsigned __int8 *)(v15 + v4 + 1) ^ v14 ^ (-107 * v15);
  v17 = (((a4 ^ 0x12ACA3A3) + 948944737) ^ ((a4 ^ 0x4EB12D3E) + 1687302654) ^ ((a4 ^ 0x4ECF9C6) + 785376518))
      - 138851376;
  LODWORD(v14) = (v17 ^ 0x51752A52) & (2 * (v17 & 0x9574489B)) ^ v17 & 0x9574489B;
  v18 = ((2 * (v17 ^ 0x59DD3A44)) ^ 0x9952E5BE) & (v17 ^ 0x59DD3A44) ^ (2 * (v17 ^ 0x59DD3A44)) & 0xCCA972DE;
  v19 = v18 ^ 0x44A91241;
  v20 = (v18 ^ 0x8808709D) & (4 * v14) ^ v14;
  LODWORD(v14) = ((4 * v19) ^ 0x32A5CB7C) & v19 ^ (4 * v19) & 0xCCA972DC;
  v21 = (v14 ^ 0xA14253) & (16 * v20) ^ v20;
  LODWORD(v14) = ((16 * (v14 ^ 0xCC083083)) ^ 0xCA972DF0) & (v14 ^ 0xCC083083) ^ (16 * (v14 ^ 0xCC083083)) & 0xCCA972D0;
  v22 = v21 ^ 0xCCA972DF ^ (v14 ^ 0xC8812000) & (v21 << 8);
  STACK[0x14B8] = 2368574582;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0]
                                                     + 8 * (v9 ^ (231 * (LODWORD(STACK[0x13F8]) == -1926392714))))
                                         - 4))(v17 ^ (2
                                                      * ((v22 << 16) & 0x4CA90000 ^ v22 ^ ((v22 << 16) ^ 0x72DF0000) & (((v14 ^ 0x428520F) << 8) & 0x4CA90000 ^ 0x44890000 ^ (((v14 ^ 0x428520F) << 8) ^ 0x29720000) & (v14 ^ 0x428520F)))));
}

uint64_t sub_100220C90(int a1)
{
  int v1;
  uint64_t (*v2)(void);

  LODWORD(STACK[0xE04]) = 0;
  LODWORD(STACK[0x16F8]) = a1 ^ 0x193942;
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v1 - 13888)) - 8);
  LODWORD(STACK[0x1800]) = 128;
  return v2();
}

uint64_t sub_100220CF4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unsigned __int8 v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  _BOOL4 v29;

  v7 = STACK[0x18B0] + (a1 ^ 0x8D34AD25);
  v8 = *(_BYTE *)(v7 - 0x3032385379A144E6);
  v9 = 1772489163 * ((1772489163 * (_DWORD)v7) ^ ((1772489163 * v7) >> 16));
  LOBYTE(v9) = (-107 * BYTE3(v9)) ^ v9 ^ v8 ^ *(_BYTE *)(v5 + (v9 >> 24)) ^ *(_BYTE *)(v4 + (v9 >> 24)) ^ *(_BYTE *)(v3 + (v9 >> 24) + v6 + 6590 + 5 * ((v6 + 15331) ^ 0x44A4) - 34330);
  v10 = 71 * (((v9 ^ 0x5D) - 117) ^ ((v9 ^ 6) - 46) ^ ((v9 ^ 0x5B) - 115)) + 24;
  LODWORD(v9) = (((a3 ^ 0x378142EC) + 497180208) ^ ((a3 ^ 0xE643E94A) - 866060918) ^ ((a3 ^ 0x8933DCFD) - 1559183297))
              - 1731744388;
  v11 = (v9 ^ 0xE051C4FE) & (2 * (v9 & 0xF465E6F0)) ^ v9 & 0xF465E6F0;
  v12 = ((2 * (v9 ^ 0xA8D0093E)) ^ 0xB96BDF9C) & (v9 ^ 0xA8D0093E) ^ (2 * (v9 ^ 0xA8D0093E)) & 0x5CB5EFCE;
  v13 = v12 ^ 0x44942042;
  v14 = (v12 ^ 0x10218F80) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0x72D7BF38) & v13 ^ (4 * v13) & 0x5CB5EFCC;
  v16 = (v15 ^ 0x5095AF00) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0xC2040C6)) ^ 0xCB5EFCE0) & (v15 ^ 0xC2040C6) ^ (16 * (v15 ^ 0xC2040C6)) & 0x5CB5EFC0;
  v18 = v16 ^ 0x5CB5EFCE ^ (v17 ^ 0x4814EC00) & (v16 << 8);
  v19 = v9 ^ (2
                          * ((v18 << 16) & 0x5CB50000 ^ v18 ^ ((v18 << 16) ^ 0x6FCE0000) & (((v17 ^ 0x14A1030E) << 8) & 0x5CB50000 ^ 0x48100000 ^ (((v17 ^ 0x14A1030E) << 8) ^ 0x35EF0000) & (v17 ^ 0x14A1030E))));
  v20 = (v10 ^ 0xB1) + 1382522127;
  v21 = (v20 ^ 0xE36B5A1E) & (2 * (v20 & 0xB50)) ^ v20 & 0xB50;
  v22 = (2 * (v20 ^ 0xE36B481E)) & 0x834E ^ 0x13142 ^ ((2 * (v20 ^ 0xE36B481E)) ^ 0x9104C69C) & (v20 ^ 0xE36B481E);
  v23 = (4 * v21) & 0x3340 ^ v21 ^ ((4 * v21) ^ 0x6C000) & v22;
  v24 = (4 * v22) & 0x4EF3F34C ^ 0x44303246 ^ ((4 * v22) ^ 0x3BCFCD38) & v22;
  v25 = (16 * v23) & 0x4EF3F340 ^ v23 ^ ((16 * v23) ^ 0x370000) & v24;
  v26 = (16 * v24) & 0x4EF3F340 ^ 0xC0C30E ^ ((16 * v24) ^ 0xEF3F34E0) & v24;
  v27 = v25 ^ (v25 << 8) & 0x4EF3F300 ^ ((v25 << 8) ^ 0x30700000) & v26 ^ 0x4EB3834E;
  v28 = v20 ^ (2
             * ((v27 << 16) & 0x4EF30000 ^ v27 ^ ((v27 << 16) ^ 0x734E0000) & ((v26 << 8) & 0x4EF30000 ^ ((v26 << 8) ^ 0x73F30000) & v26 ^ 0xC000000)));
  STACK[0x14B8] = 2368574581;
  v29 = LODWORD(STACK[0x13F8]) != -1926392715;
  LODWORD(STACK[0x1800]) = ((*(unsigned __int8 *)(STACK[0x18B8] + (v28 ^ 0xB4FB5DCC)) - 84) ^ a2) - 107;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * ((v6 + 15331) | v29 | (16 * v29))) - 12))(v19);
}

uint64_t sub_10022112C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t (*v17)(unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t);

  STACK[0x14B8] = 2368574580;
  v6 = 1772489163
     * ((1772489163 * (LODWORD(STACK[0x18B0]) + (a1 ^ 0xD406396C))) ^ ((1772489163
                                                                      * (LODWORD(STACK[0x18B0]) + (a1 ^ 0xD406396C))) >> 16));
  v7 = (((a5 ^ 0xD456EC4B) - 25825143) ^ ((a5 ^ 0x7F150B2) + 768756850) ^ ((a5 ^ 0x8B56CBA2) - 1586112670)) - 1297317872;
  v8 = (v7 ^ 0x922DC359) & (2 * (v7 & 0xDA81145D)) ^ v7 & 0xDA81145D;
  v9 = ((2 * (v7 ^ 0xA62DC3E1)) ^ 0xF959AF78) & (v7 ^ 0xA62DC3E1) ^ (2 * (v7 ^ 0xA62DC3E1)) & 0x7CACD7BC;
  v10 = v9 ^ 0x4A45084;
  v11 = (v9 ^ 0x78A88338) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0xF2B35EF0) & v10 ^ (4 * v10) & 0x7CACD7BC;
  v13 = (v12 ^ 0x70A056B0) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0xC0C810C)) ^ 0xCACD7BC0) & (v12 ^ 0xC0C810C) ^ (16 * (v12 ^ 0xC0C810C)) & 0x7CACD7B0;
  v15 = v14 ^ 0x3420843C;
  v16 = v13 ^ 0x7CACD7BC ^ (v14 ^ 0x488C5300) & (v13 << 8);
  v17 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (v5 ^ (81 * (LODWORD(STACK[0x13F8]) == -1926392716)))) - 8);
  STACK[0x17B0] = (unint64_t)*(&off_1015B46D0 + v5 - 12645) - 12;
  return v17(v6, a2, a3, a4, v7 ^ (2* ((v16 << 16) & 0x7CAC0000 ^ v16 ^ ((v16 << 16) ^ 0x57BC0000) & ((v15 << 8) & 0x7CAC0000 ^ 0x50280000 ^ ((v15 << 8) ^ 0x2CD70000) & v15))), v6 >> 24);
}

uint64_t sub_10022138C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t (*v6)(void);

  LODWORD(STACK[0x16F8]) = a5 ^ 0x7AD2F42;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v5) - ((v5 + 13560) | 0x148u) + 21462);
  LODWORD(STACK[0xE04]) = 128;
  return v6();
}

uint64_t sub_100221438(int a1)
{
  int v1;

  LODWORD(STACK[0xE04]) = 0;
  LODWORD(STACK[0x16F8]) = a1 ^ 0x592BAD0B;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v1 - 13888)) - 8))();
}

uint64_t sub_10022149C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;

  v13 = (v9 - 11576) | 0x60C0;
  LODWORD(STACK[0x156C]) = v11 ^ a1 ^ (-107 * a6) ^ *(unsigned __int8 *)(v8 + a6) ^ *(unsigned __int8 *)(v7 + a6) ^ *(unsigned __int8 *)(v6 + (v13 ^ 0x785A ^ v10) + a6);
  v14 = STACK[0x18B0] + (a5 ^ 0x8A80BB25);
  v15 = *(unsigned __int8 *)(v14 - 0x3032385379A144E6);
  v16 = ((((v13 + 543676966) & 0xDF97F9FF ^ 0x69A63020) * (_DWORD)v14) ^ ((((v13 + 543676966) & 0xDF97F9FF ^ 0x69A63020)
                                                                         * v14) >> 16))
      * v12;
  LODWORD(STACK[0xE04]) = *(unsigned __int8 *)(STACK[0x1820] + (v16 >> 24)) ^ v15 ^ *(unsigned __int8 *)(STACK[0x1808] + (v16 >> 24)) ^ *(unsigned __int8 *)(STACK[0x1850] + (v16 >> 24)) ^ v16 ^ (35 * (v16 >> 24));
  STACK[0x14B8] = 2368574579;
  return (*(uint64_t (**)(void))(STACK[0x18C0]
                              + 8
                              * (v13 ^ ((4 * (LODWORD(STACK[0x13F8]) == -1926392717)) | (8
                                                                                       * (LODWORD(STACK[0x13F8]) == -1926392717))))))();
}

uint64_t sub_10022176C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  LODWORD(STACK[0x16F8]) = v5 ^ 0x5A6271CB;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * (v6 - 13888)) - 8))(a1, a2, a3, a4, a5, 671088640, 41, LODWORD(STACK[0x1584]));
}

uint64_t sub_1002217CC()
{
  int v0;
  int v1;
  unint64_t v2;
  unint64_t v3;

  v2 = STACK[0x18B0] + (v1 ^ 0xD74FE5AC);
  v3 = 1772489163 * ((1772489163 * (_DWORD)v2) ^ ((1772489163 * v2) >> 16));
  LODWORD(STACK[0xDE8]) = *(unsigned __int8 *)(STACK[0x1820] + (v3 >> 24)) ^ *(unsigned __int8 *)(v2
                                                                                                - 0x3032385379A144E6) ^ *(unsigned __int8 *)(STACK[0x1808] + (v3 >> 24)) ^ *(unsigned __int8 *)(STACK[0x1850] + (v3 >> 24)) ^ (((v0 - 189787183) & 0xB4FFB7F ^ 0x1F) * ((1772489163 * ((1772489163 * (_DWORD)v2) ^ ((1772489163 * v2) >> 16))) >> 24)) ^ v3;
  STACK[0x14B8] = 2368574578;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 ^ (1002 * (LODWORD(STACK[0x13F8]) == -1926392718))))
                            - 12))();
}

uint64_t sub_100221A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  int v6;

  LODWORD(STACK[0x16F8]) = v6 ^ (v5 - 755722773) & 0x2D0B3EFE ^ 0xF14C519A;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x18C0] + 8 * v5))(a1, a2, a3, a4, a5, 671088640);
}

uint64_t sub_100221AA0()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;

  v3 = STACK[0x18B0] + (v1 ^ 0x7C61DBDBu);
  v4 = *(unsigned __int8 *)(v3 - 0x3032385379A144E6);
  v5 = (((v0 - 12256) | 0x802) + 1772481445) * (((_DWORD)v3 * v2) ^ ((v3 * v2) >> 16));
  STACK[0x1208] = *(unsigned __int8 *)(STACK[0x17F0] + (v5 >> 24)) ^ v4 ^ *(unsigned __int8 *)((v5 >> 24)
                                                                                             + STACK[0x1828]
                                                                                             + 1) ^ *(unsigned __int8 *)(STACK[0x1848] + (v5 >> 24)) ^ (-75 * (v5 >> 24)) ^ v5;
  STACK[0x14B8] = 2368574577;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 ^ (63 * (LODWORD(STACK[0x13F8]) == -1926392719))))
                            - 12))();
}

uint64_t sub_100221D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  LODWORD(STACK[0x16F8]) = v5 ^ 0x7507C4F6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v6)
                                                                                       - ((v6 + 1222) ^ 0x22E8)))(128, a2, a3, a4, a5, 671088640);
}

uint64_t sub_100221D60@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  _BOOL4 v19;

  v3 = STACK[0x18B0] + (v1 ^ 0xF82A5091);
  v4 = *(unsigned __int8 *)(v3 - 0x3032385379A144E6);
  v5 = 1772489163 * ((1772489163 * (_DWORD)v3) ^ ((1772489163 * v3) >> 16));
  v6 = v4 ^ v5;
  v5 >>= 24;
  v7 = v6 ^ *(unsigned __int8 *)(STACK[0x17F0] + v5) ^ *(unsigned __int8 *)(v5 + STACK[0x1828] + 1) ^ *(unsigned __int8 *)(STACK[0x1848] + v5);
  HIDWORD(v8) = v7 ^ (5 * v5);
  LODWORD(v8) = (v7 ^ (((30 * (((v2 - 6099) | 0x3120) ^ 0x3659)) ^ 0x59) * (_DWORD)v5)) << 24;
  v9 = (((a1 ^ 0x722AB7C7) + 1477028613) ^ ((a1 ^ 0xC50D8514) - 282158632) ^ ((a1 ^ 0xEFD64588) - 973776564))
     - 1525946895;
  v10 = (v9 ^ 0xC3112E38) & (2 * (v9 & 0xE821AE80)) ^ v9 & 0xE821AE80;
  v11 = ((2 * (v9 ^ 0x53106A38)) ^ 0x76638970) & (v9 ^ 0x53106A38) ^ (2 * (v9 ^ 0x53106A38)) & 0xBB31C4B8;
  v12 = v11 ^ 0x89104488;
  v13 = (v11 ^ 0x20018000) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0xECC712E0) & v12 ^ (4 * v12) & 0xBB31C4B8;
  v15 = (v14 ^ 0xA80100B8) & (16 * v13) ^ v13;
  v16 = ((16 * (v14 ^ 0x1330C418)) ^ 0xB31C4B80) & (v14 ^ 0x1330C418) ^ (16 * (v14 ^ 0x1330C418)) & 0xBB31C4B0;
  v17 = v15 ^ 0xBB31C4B8 ^ (v16 ^ 0xB3104000) & (v15 << 8);
  LODWORD(v5) = *(unsigned __int8 *)(STACK[0x18B8] + ((v8 >> 27) ^ 0x9Du) + 1665);
  STACK[0x14B8] = 2368574576;
  v18 = (v17 << 16) & 0x3B310000 ^ v17 ^ ((v17 << 16) ^ 0x44B80000) & (((v16 ^ 0x8218438) << 8) & 0x3B310000 ^ 0xA310000 ^ (((v16 ^ 0x8218438) << 8) ^ 0x31C40000) & (v16 ^ 0x8218438));
  v19 = LODWORD(STACK[0x13F8]) != -1926392720;
  LODWORD(STACK[0x16F8]) = v9 ^ (2 * v18) ^ 0x130FB397;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * (v2 | (8 * v19))) - 4))(((_DWORD)v5 - 38) ^ ((v5 - 38) >> 5) ^ ((v5 - 38) >> 4) ^ 0xFFFFFFE2);
}

uint64_t sub_100222028(int a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;

  LODWORD(STACK[0xCE4]) = a1;
  v3 = (((v1 ^ 0xC3F13A65) + 788624910) ^ ((v1 ^ 0x7DC72F16) - 1858641025) ^ ((v1 ^ 0x20143283) - 857440532))
     - 754962859;
  v4 = (v3 ^ 0xB10C4603) & (2 * (v3 & 0xBA2D6613)) ^ v3 & 0xBA2D6613;
  v5 = ((2 * (v3 ^ 0xB1164223)) ^ 0x16764860) & (v3 ^ 0xB1164223) ^ (2 * (v3 ^ 0xB1164223)) & 0xB3B2430;
  v6 = v5 ^ 0x9092410;
  v7 = (v5 ^ 0x320400) & (4 * v4) ^ v4;
  v8 = ((4 * v6) ^ 0x2CEC90C0) & v6 ^ (4 * v6) & 0xB3B2430;
  v9 = (v8 ^ 0x8280000) & (16 * v7) ^ v7;
  v10 = ((16 * (v8 ^ 0x3132430)) ^ 0xB3B24300) & (v8 ^ 0x3132430) ^ (16 * (v8 ^ 0x3132430)) & 0xB3B2430;
  v11 = v9 ^ 0xB3B2430 ^ (v10 ^ 0x3320000) & (v9 << 8);
  STACK[0x14B8] = 2368574591;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0]
                                                     + 8 * (v2 ^ (250 * (LODWORD(STACK[0x13F8]) != -1926392705))))
                                         - 12))(v3 ^ (2
                                                      * ((v11 << 16) & 0xB3B0000 ^ v11 ^ ((v11 << 16) ^ 0x24300000) & (((v10 ^ 0x8092430) << 8) & 0xB3B0000 ^ 0x1B0000 ^ (((v10 ^ 0x8092430) << 8) ^ 0x3B240000) & (v10 ^ 0x8092430)))));
}

uint64_t sub_100222294()
{
  int v0;

  STACK[0x14B8] = 2368574590;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                        + 8
                                        * (v0 | (4 * (LODWORD(STACK[0x13F8]) == -1926392706)) | (32
                                                                                               * (LODWORD(STACK[0x13F8]) == -1926392706))))
                            - 4))();
}

uint64_t sub_100222504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v11 = *(unsigned __int8 *)(a7 + a1);
  v12 = *(unsigned __int8 *)(a6 + v8);
  LODWORD(STACK[0x16F8]) = v10 ^ 0x21BDBBB4;
  STACK[0xDF8] = v7 ^ v11 ^ v12 ^ *(unsigned __int8 *)(a5 + v8) ^ (((v9 ^ 0x71E3) + 40) * a1);
  return (*(uint64_t (**)(_QWORD))(STACK[0x18C0] + 8 * v9))(LODWORD(STACK[0xCE4]));
}

uint64_t sub_100222574(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;

  LODWORD(STACK[0x16F8]) = a1 ^ 0x2116BA14;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0]
                                                                                                  + 8 * (int)v5)
                                                                                      - (v5 ^ 0x1E22)))(LODWORD(STACK[0xCE4]), a2, a3, a4, a5, 671088640);
}

uint64_t sub_1002225C4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  _BOOL4 v14;

  STACK[0xDF8] = v3 ^ *(unsigned __int8 *)(STACK[0x1878] + a1) ^ *(unsigned __int8 *)(a1 + STACK[0x1880] + 5) ^ *(unsigned __int8 *)(STACK[0x1888] + v4) ^ (117 * a1);
  STACK[0x14B8] = 2368574589;
  v5 = (((v2 ^ 0x27FDFE17) - 888294784) ^ ((v2 ^ 0x41E0E07F) - 1391416296) ^ ((v2 ^ 0xF83F3998) + 349140465))
     - 1288414938;
  v6 = (v5 ^ 0xD1FCB310) & (2 * (v5 & 0xD9F93B44)) ^ v5 & 0xD9F93B44;
  v7 = ((2 * (v5 ^ 0x51EE9518)) ^ 0x102F5CB8) & (v5 ^ 0x51EE9518) ^ (2 * (v5 ^ 0x51EE9518)) & 0x8817AE5C;
  v8 = v7 ^ 0x8810A244;
  v9 = (v7 ^ 0x150C54) & (4 * v6) ^ v6;
  v10 = ((4 * v8) ^ 0x205EB970) & v8 ^ (4 * v8) & 0x8817AE5C;
  v11 = (v10 ^ 0x16A840) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x8801060C)) ^ 0x817AE5C0) & (v10 ^ 0x8801060C) ^ (16 * (v10 ^ 0x8801060C)) & 0x8817AE50;
  v13 = v11 ^ 0x8817AE5C ^ (v12 ^ 0x8012A400) & (v11 << 8);
  v14 = LODWORD(STACK[0x13F8]) == -1926392707;
  LODWORD(STACK[0x15C0]) = v5 ^ (2
                               * ((v13 << 16) & 0x8170000 ^ v13 ^ ((v13 << 16) ^ 0x2E5C0000) & (((v12 ^ 0x8050A1C) << 8) & 0x8170000 ^ 0x8110000 ^ (((v12 ^ 0x8050A1C) << 8) ^ 0x17AE0000) & (v12 ^ 0x8050A1C)))) ^ 0x54D3F39B;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v1 ^ (14 * v14))) - 4))();
}

uint64_t sub_1002228C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  int v12;
  unint64_t v13;

  LODWORD(STACK[0x1560]) = v9;
  LODWORD(STACK[0x1554]) = v10;
  v11 = STACK[0x18B0] + (v8 ^ 0xD9FE67FC);
  v12 = *(unsigned __int8 *)(v11 - 0x3032385379A144E6);
  v13 = 1772489163 * (((1772489163 * v11) >> ((v7 ^ 0xE6) + 4)) ^ (1772489163 * (_DWORD)v11));
  LODWORD(STACK[0x1548]) = *(unsigned __int8 *)(a7 + (v13 >> 24)) ^ v12 ^ *(unsigned __int8 *)(a6 + (v13 >> 24) + 2) ^ *(unsigned __int8 *)(a5 + (v13 >> 24) + 2) ^ (55 * (v13 >> 24)) ^ v13;
  STACK[0x14B8] = 2368574588;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v7 ^ (LODWORD(STACK[0x13F8]) != -1926392708))) - 4))();
}

uint64_t sub_100222B20@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v4;
  unint64_t v5;
  int v6;
  unint64_t v7;

  v5 = STACK[0x18B0] + (v4 ^ 0x2B57A409u);
  v6 = *(unsigned __int8 *)(v5 - 0x3032385379A144E6);
  v7 = 1772489163 * ((1772489163 * (_DWORD)v5) ^ ((1772489163 * v5) >> 16));
  LODWORD(STACK[0x1528]) = v6 ^ v7 ^ *(unsigned __int8 *)(a3 + (v7 >> 24)) ^ *(unsigned __int8 *)(a2 + (v7 >> 24) + 2) ^ *(unsigned __int8 *)(a1 + (v7 >> 24) + 2) ^ ((((a4 - 984) | 0x1809) ^ 0xA) * (v7 >> 24));
  STACK[0x14B8] = 2368574587;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * (a4 ^ (22 * (LODWORD(STACK[0x13F8]) == -1926392709)))))();
}

uint64_t sub_100222D84@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x15C0]) = v1 ^ 0x81FB3716;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (a1 - 4735)) - 4))(22020096);
}

uint64_t sub_100222DDC@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x15C0]) = v1 ^ 0xA67A306E;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (a1 + 10243)) - (a1 - 4735) + 6281))();
}

uint64_t sub_100222E34()
{
  int v0;
  int v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _BOOL4 v16;

  v2 = STACK[0x18B0] + (v1 ^ 0xCD6A371u);
  v3 = *(unsigned __int8 *)(v2 - 0x3032385379A144E6);
  LODWORD(STACK[0x1850]) = (v0 + 1261) | 0x1244;
  v4 = 1772489163 * ((1772489163 * (_DWORD)v2) ^ ((1772489163 * v2) >> 16));
  v5 = v4 >> 24;
  v6 = *(unsigned __int8 *)(STACK[0xB98] + (v4 >> 24));
  v7 = *(unsigned __int8 *)((v4 >> 24) + STACK[0xBA8] + 3);
  v8 = *(unsigned __int8 *)(STACK[0xBA0] + (v4 >> 24));
  LODWORD(v4) = v3 ^ v4;
  v9 = v7 ^ v8;
  HIDWORD(v10) = v4 ^ -(int)v5 ^ v6 ^ v9;
  LODWORD(v10) = (v4 ^ (55 * (_DWORD)v5) ^ v6 ^ v9) << 24;
  LODWORD(v4) = (v10 >> 27) ^ 0x99;
  LODWORD(STACK[0x1828]) = v4;
  v11 = v4 + 361657228;
  v12 = (v11 ^ 0x1961E9F0) & (2 * (v11 & 0x5C4)) ^ v11 & 0x5C4;
  LODWORD(v5) = (2 * (v11 ^ 0x1961E8F8)) & 0x253C ^ 0x504 ^ ((2 * (v11 ^ 0x1961E8F8)) ^ 0x4208A78) & (v11 ^ 0x1961E8F8);
  v13 = (4 * v12) & 0x3530 ^ v12 ^ ((4 * v12) | 0x8000) & v5;
  LODWORD(v5) = (4 * v5) & 0x7310753C ^ 0x3310210C ^ ((4 * v5) ^ 0xC4194F0) & v5;
  v14 = (16 * v13) & 0x73107530 ^ v13 ^ ((16 * v13) ^ 0x70000) & v5;
  LODWORD(v5) = (16 * v5) & 0xF3107500 ^ 0xC210243C ^ ((16 * v5) ^ 0x310753C0) & v5;
  v15 = v14 ^ 0xF300053C ^ (v14 << 8) & 0x73107500 ^ ((v14 << 8) ^ 0x700000) & v5;
  STACK[0x14B8] = 2368574586;
  v16 = LODWORD(STACK[0x13F8]) == -1926392710;
  LODWORD(STACK[0xD38]) = *(unsigned __int8 *)(STACK[0x18B8]
                                             + (((_DWORD)v4 + 361657228) ^ (2
                                                                          * ((v15 << 16) & 0x73100000 ^ v15 ^ ((v15 << 16) ^ 0x753C0000) & (((_DWORD)v5 << 8) & 0x73100000 ^ 0x63000000 ^ (((_DWORD)v5 << 8) ^ 0x10750000) & v5))) ^ 0xEE7177BCLL)) ^ 0x38;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 ^ (106 * v16))) - 4))();
}

uint64_t sub_10022324C()
{
  int v0;
  int v1;

  LODWORD(STACK[0x15C0]) = v0 ^ 0xED344825;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v1 - 13199)))();
}

uint64_t sub_100223284()
{
  int v0;
  int v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = STACK[0x1850];
  LODWORD(STACK[0x1868]) = (LODWORD(STACK[0x1850]) - 1961516959) & 0x74EA297F;
  v2 = STACK[0x18B0] + (v0 ^ 0x6019DC42u);
  v3 = *(unsigned __int8 *)(v2 - 0x3032385379A144E6);
  v4 = (unint64_t)(1772489163 * ((1772489163 * (_DWORD)v2) ^ ((1772489163 * v2) >> 16))) >> 24;
  STACK[0x1820] = (unint64_t)*(&off_1015B46D0 + (v1 ^ 0x5189)) - 8;
  v5 = (uint64_t)*(&off_1015B46D0 + v1 - 20866);
  STACK[0x1898] = v4 + 2;
  v6 = (uint64_t)*(&off_1015B46D0 + v1 - 21815);
  STACK[0x17F0] = v5 - 12;
  STACK[0x1808] = v6 - 4;
  STACK[0x14B8] = 2368574585;
  LODWORD(v2) = LODWORD(STACK[0x13F8]) != -1926392711;
  LODWORD(STACK[0x17A8]) = 49 * (v1 ^ 0x577C);
  STACK[0x1848] = v4;
  LODWORD(STACK[0x1798]) = v3;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v1 ^ (28 * (int)v2))))();
}

uint64_t sub_100223530()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;

  LODWORD(STACK[0x1644]) = v1 ^ *(unsigned __int8 *)(STACK[0x1820] + STACK[0x1848]) ^ *(unsigned __int8 *)(STACK[0x17F0] + STACK[0x1898]) ^ *(unsigned __int8 *)(STACK[0x1808] + STACK[0x1848]);
  v3 = STACK[0x17A8];
  v4 = 1772489163
     * ((1772489163 * (LODWORD(STACK[0x18B0]) + (v0 ^ 0xA3DA51B0))) ^ ((1772489163
                                                                      * (LODWORD(STACK[0x18B0]) + (v0 ^ 0xA3DA51B0))) >> 16));
  v5 = (((v2 ^ 0x49) - 39) ^ ((v2 ^ 0x18) - 118) ^ ((v2 ^ 0x58) - 54)) + 30;
  v6 = (v5 ^ 9) & (2 * (v5 & 0x4D)) ^ v5 & 0x4D;
  v7 = ((2 * (v5 ^ 9)) ^ 0x88) & (v5 ^ 9) ^ (2 * (v5 ^ 9)) & 0x44;
  v8 = v5 ^ (2
           * ((((4 * (v7 ^ 0x44)) ^ 0x10) & (v7 ^ 0x44) ^ (4 * (v7 ^ 0x44)) & 0x44 ^ 4) & (16 * (v7 & (4 * v6) ^ v6)) ^ v7 & (4 * v6) ^ v6 ^ 0x44));
  LODWORD(STACK[0x1780]) = 1181 * ((LODWORD(STACK[0x17A8]) - 1461977916) & 0x5723FEDF ^ 0x3012);
  STACK[0x17A0] = v4 >> 24;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                        + 8
                                        * (v3 ^ (195
                                               * ((((((v8 & 0x85 ^ 0xFFFFFFFB) + ((2 * (v8 & 0x85)) | 0x6C) + 75) ^ 0x37)
                                                  + ((148
                                                    - (((v2 ^ 0x6A) + 252) ^ ((v2 ^ 0xF2) + 100) ^ ((v2 ^ 0x91) + 1))) & 0x85)) & 0x8F ^ LODWORD(STACK[0x13F8])) != -1926392579))))
                            - 12))();
}

uint64_t sub_100223858()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  STACK[0x1700] = STACK[0x17A0] + 1;
  LODWORD(STACK[0x1708]) = v1 ^ v0;
  v3 = STACK[0x1780];
  v4 = LODWORD(STACK[0x1780]) ^ 0x2262;
  v5 = STACK[0x18B0] + (v2 ^ 0x7139F4C5u);
  LODWORD(STACK[0x1760]) = *(unsigned __int8 *)(v5 - 0x3032385379A144E6);
  LODWORD(STACK[0x1860]) = v3 + 14305;
  v6 = 1772489163 * ((((v4 + 1772476853) * v5) >> ((v3 - 31) ^ 0x45)) ^ ((v4 + 1772476853) * (_DWORD)v5));
  STACK[0x1758] = (unint64_t)*(&off_1015B46D0 + (v3 ^ 0x1822));
  STACK[0x1748] = (unint64_t)*(&off_1015B46D0 + v3 - 4534) - 8;
  STACK[0x1720] = (unint64_t)*(&off_1015B46D0 + v3 - 4452) - 12;
  STACK[0x16F0] = (v6 >> 24) + 3;
  STACK[0x14B8] = 2368574535;
  LODWORD(v5) = LODWORD(STACK[0x13F8]) == -1926392761;
  STACK[0x1778] = v6 >> 24;
  STACK[0x16F8] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v3 ^ (255 * (int)v5))) - 12))();
}

uint64_t sub_100223B0C()
{
  int v0;
  int v1;

  LODWORD(STACK[0x1840]) = 0;
  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x161C]) = 0;
  STACK[0x1258] = 0;
  LODWORD(STACK[0x1868]) = 0;
  LODWORD(STACK[0x15C0]) = (v0 + 184240893) ^ v1;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 12))(0);
}

uint64_t sub_100223BCC()
{
  int v0;
  unsigned int v1;

  v1 = STACK[0x1868];
  LODWORD(STACK[0x15C0]) = (((LODWORD(STACK[0x1868]) + 2044115856) & 0x862977FE) + 787968505) ^ v0;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * v1))();
}

uint64_t sub_100223C44()
{
  unsigned int v0;
  int v1;
  uint64_t (*v2)(_QWORD);

  LODWORD(STACK[0x1840]) = 0;
  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x161C]) = 0;
  STACK[0x1258] = 0;
  LODWORD(STACK[0x1868]) = 0;
  LODWORD(STACK[0x15C0]) = v1 ^ 0xFC1460A2;
  v2 = (uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * v0)
                                      - ((v0 + 1605061576) & 0xA054D7FF ^ 0x53D2));
  STACK[0x14B8] = LODWORD(STACK[0x13F8]);
  return v2(0);
}

uint64_t sub_100223CDC()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v1 = STACK[0x1758];
  v2 = STACK[0x1748];
  v3 = STACK[0x1860];
  v4 = STACK[0x18B0] + (v0 ^ 0x87D6EF74);
  v5 = *(unsigned __int8 *)(v4 - 0x3032385379A144E6);
  v6 = (LODWORD(STACK[0x1860]) + 1272223113) & 0xB42B73FF;
  LODWORD(STACK[0x16E0]) = (LODWORD(STACK[0x1860]) + 1272223113) ^ 0x4BD4E9FD;
  v7 = (((1772489163 * v4) >> (((v3 - 119) ^ 0xFD) - 19)) ^ (1772489163 * (_DWORD)v4)) * (v6 + 1772467693);
  v8 = (57
      * (((((1772489163 * v4) >> (((v3 - 119) ^ 0xFD) - 19)) ^ (1772489163 * (_DWORD)v4))
        * (v6 + 1772467693)) >> 24)) ^ v7 ^ v5 ^ *(unsigned __int8 *)(v1 + (v7 >> 24)) ^ *(unsigned __int8 *)(v2 + (v7 >> 24)) ^ *(unsigned __int8 *)((v7 >> 24) + STACK[0x1720] + 3);
  v9 = (((57
                         * (((((1772489163 * v4) >> (((v3 - 119) ^ 0xFD) - 19)) ^ (1772489163 * (_DWORD)v4))
                           * (v6 + 1772467693)) >> 24)) ^ v7 ^ v5 ^ *(_BYTE *)(v1 + (v7 >> 24)) ^ *(_BYTE *)(v2 + (v7 >> 24)) ^ *(_BYTE *)((v7 >> 24) + STACK[0x1720] + 3)) ^ 0xCF)
     + 58945451;
  v10 = (v9 & 0xA3 | 0x16002000 | (2 * (v9 & 0xA3)) & 0x104) ^ ((2 * (v9 & 0xA3)) | 0x4000) & (v9 ^ 0x3099597);
  LODWORD(v7) = (2 * (v9 ^ 0x3099597)) & 0x3534 ^ 0x1514 ^ ((2 * (v9 ^ 0x3099597)) ^ 0x8A6A68) & (v9 ^ 0x3099597);
  v11 = (4 * v10) & 0x7F753534 ^ v10 ^ (4 * v10) & v7;
  LODWORD(v7) = (4 * v7) & 0x7F753534 ^ 0x2212124 ^ ((4 * v7) ^ 0x80D4D0) & v7;
  v12 = (16 * v11) & 0xFF753530 ^ v11 ^ ((16 * v11) ^ 0x60000000) & v7;
  LODWORD(v7) = ((16 * v7) ^ 0x77535340) & v7 ^ (16 * v7) & 0x7F753530;
  v13 = v7 ^ 0x8242434;
  LODWORD(v7) = v12 ^ 0x51753534 ^ (v7 ^ 0xF7511134) & (v12 << 8);
  LODWORD(v7) = *(unsigned __int8 *)(STACK[0x18B8]
                                   + (v9 ^ (2
                                          * (((_DWORD)v7 << 16) & 0x7F750000 ^ v7 ^ (((_DWORD)v7 << 16) ^ 0x35340000) & ((v13 << 8) & 0xFF750000 ^ 0xA400000 ^ ((v13 << 8) ^ 0x75350000) & v13))) ^ 0x68FECACB));
  STACK[0x14B8] = 2368574534;
  LODWORD(v2) = STACK[0x13F8];
  LODWORD(STACK[0x1524]) = 63 * (v8 ^ 0x24 ^ (v7 - ((2 * v7) & 0x52) + 41));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v3 ^ (221 * ((_DWORD)v2 == -1926392762)))) - 8))();
}

uint64_t sub_100224170()
{
  int v0;
  int v1;

  LODWORD(STACK[0x1840]) = 0;
  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x161C]) = 0;
  STACK[0x1258] = 0;
  LODWORD(STACK[0x1868]) = 0;
  LODWORD(STACK[0x15C0]) = v1 ^ 0x2EBA0A99;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 - 9160)) - 12))(0);
}

uint64_t sub_1002241C8()
{
  int v0;
  int v1;
  BOOL v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;

  v1 = STACK[0x16E0];
  STACK[0x14B8] = 2368574533;
  v2 = LODWORD(STACK[0x13F8]) == -1926392763;
  v3 = STACK[0x18B0] + (v0 ^ 0xA3979EFE);
  v4 = *(unsigned __int8 *)(v3 - 0x3032385379A144E6);
  v5 = (((v1 - 9759) | 0x2012) ^ 0x69A639DD) * ((1772489163 * (_DWORD)v3) ^ ((1772489163 * v3) >> 16));
  v6 = v5 >> 24;
  v7 = (unint64_t)*(&off_1015B46D0 + v1 - 11102) - 4;
  STACK[0x1690] = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v7 + (v5 >> 24));
  STACK[0x1698] = v5;
  LODWORD(STACK[0x16A4]) = v4;
  LODWORD(STACK[0x16A8]) = (17 * (v5 >> 24)) ^ v5 ^ v4 ^ v7;
  v8 = !v2;
  STACK[0x16C0] = (unint64_t)*(&off_1015B46D0 + v1 - 12919) - 12;
  STACK[0x16D8] = v6;
  STACK[0x16D0] = (v1 - 13856) + v6;
  STACK[0x16B0] = (unint64_t)*(&off_1015B46D0 + (v1 ^ 0x3076)) - 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v1 ^ (26 * v8))) - 12))();
}

uint64_t sub_100224474()
{
  int v0;
  unsigned int v1;
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  BOOL v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;

  LODWORD(STACK[0x1840]) = 0;
  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x161C]) = 0;
  STACK[0x1258] = 0;
  LODWORD(STACK[0x1678]) = LODWORD(STACK[0x1798]) ^ v2;
  v3 = LODWORD(STACK[0x16E0]) - 1549;
  v4 = STACK[0x18B0] + ((LODWORD(STACK[0x16E0]) - 217466105) ^ v1);
  v5 = *(unsigned __int8 *)(v4 - 0x3032385379A144E6);
  STACK[0x14B8] = 2368574532;
  v6 = LODWORD(STACK[0x13F8]) == -1926392764;
  v7 = 1772489163 * ((1772489163 * (_DWORD)v4) ^ ((1772489163 * v4) >> 16));
  v8 = *((unsigned __int8 *)*(&off_1015B46D0 + (v3 ^ 0x362F)) + (v7 >> 24) - 4);
  v9 = (v3 ^ 0x63C8u) - 21467 + (v7 >> 24);
  v10 = (uint64_t)*(&off_1015B46D0 + v3 - 10480);
  STACK[0x1670] = v9;
  LODWORD(v10) = *(unsigned __int8 *)(v10 + v9 - 8);
  STACK[0x1680] = v7 >> 24;
  v11 = (v7 >> 24) + 1;
  v12 = (uint64_t)*(&off_1015B46D0 + v3 - 9908);
  STACK[0x1668] = v11;
  LODWORD(v12) = *(unsigned __int8 *)(v12 + v11 - 12);
  LODWORD(STACK[0x1688]) = v7 ^ v5;
  LODWORD(STACK[0x1868]) = v7 ^ v5 ^ v8 ^ v10 ^ v12 ^ (-101 * (v7 >> 24));
  v13 = (((v0 ^ 0xF38BADE4) - 1441897866) ^ ((v0 ^ 0x3CABA781) + 1697540113) ^ ((v0 ^ 0xE477AE6C) - 1108188674))
      - 1635061350;
  v14 = (v13 ^ 0xEE88AA95) & (2 * (v13 & 0xEEA2A2D5)) ^ v13 & 0xEEA2A2D5;
  v15 = ((2 * (v13 ^ 0xA28DAA3D)) ^ 0x985E11D0) & (v13 ^ 0xA28DAA3D) ^ (2 * (v13 ^ 0xA28DAA3D)) & 0x4C2F08E8;
  LODWORD(v10) = v15 ^ 0x44210828;
  v16 = (v15 ^ 0x80E00C0) & (4 * v14) ^ v14;
  v17 = ((4 * v10) ^ 0x30BC23A0) & v10 ^ (4 * v10) & 0x4C2F08E8;
  v18 = (v17 ^ 0x2C00A8) & (16 * v16) ^ v16;
  v19 = ((16 * (v17 ^ 0x4C030848)) ^ 0xC2F08E80) & (v17 ^ 0x4C030848) ^ (16 * (v17 ^ 0x4C030848)) & 0x4C2F08E0;
  v20 = v18 ^ 0x4C2F08E8 ^ (v19 ^ 0x40200868) & (v18 << 8);
  v21 = ((v20 << 16) ^ 0x8E80000) & (((v19 ^ 0xC0F0068) << 8) & 0x4C2F0000 ^ 0x40270000 ^ (((v19 ^ 0xC0F0068) << 8) ^ 0x2F080000) & (v19 ^ 0xC0F0068));
  v22 = !v6;
  LODWORD(STACK[0x15C0]) = v13 ^ (2 * ((v20 << 16) & 0x4C2F0000 ^ v20 ^ v21)) ^ 0xEB812762;
  LODWORD(STACK[0x1798]) = v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (v3 | (2504 * v22))) - 12))(128);
}

uint64_t sub_1002247F4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  _BOOL4 v9;

  LODWORD(STACK[0x1644]) = v1;
  v4 = STACK[0x1798];
  v5 = LODWORD(STACK[0x1798]) + 4255;
  v6 = STACK[0x18B0] + (v0 ^ 0x66ACB305u);
  v7 = *(unsigned __int8 *)(v6 - 0x3032385379A144E6);
  v8 = ((v5 ^ 0x70A3) + 1772476853) * (((_DWORD)v6 * v2) ^ ((v6 * v2) >> 16));
  STACK[0x1650] = *(_QWORD *)(v3 + 8 * (LODWORD(STACK[0x1798]) - 10533));
  STACK[0x1898] = (v8 >> 24) + 5;
  STACK[0x1638] = *(_QWORD *)(v3 + 8 * (v4 - 11036)) - 12;
  STACK[0x16A8] = v8 >> 24;
  STACK[0x1600] = *(_QWORD *)(v3 + 8 * (v5 ^ 0x48B7)) - 4;
  LODWORD(STACK[0x1860]) = v7;
  STACK[0x14B8] = 2368574531;
  v9 = LODWORD(STACK[0x13F8]) != -1926392765;
  LODWORD(STACK[0x1658]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v5 ^ (119 * v9))) - 12))();
}

uint64_t sub_100224AB4()
{
  int v0;
  char v1;
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  LODWORD(STACK[0x1588]) = STACK[0x16F8] ^ LODWORD(STACK[0x1760]);
  v2 = STACK[0x1658];
  v3 = LODWORD(STACK[0x1658]) ^ 0x18BC;
  v4 = STACK[0x18B0] + (v0 ^ 0xDD5A632A);
  v5 = *(unsigned __int8 *)(v4 - 0x3032385379A144E6);
  v6 = 1772489163 * ((1772489163 * (_DWORD)v4) ^ ((1772489163 * v4) >> 16));
  v7 = (uint64_t)*(&off_1015B46D0 + v3 - 19838);
  STACK[0x15E8] = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x1658]) ^ 0x437C)) - 4;
  STACK[0x15F0] = v7 - 12;
  STACK[0x16F8] = (v6 >> 24) + 1;
  STACK[0x15A0] = (unint64_t)*(&off_1015B46D0 + (v2 ^ 0x40C1)) - 4;
  v8 = ((((((2 * (v1 & 0x25 ^ 0x1A50124)) | 0x88A5B2FC) - (v1 & 0x25 ^ 0x1A50124) + 1001203330) ^ 0xC5F7D87E)
       + ((47 - LODWORD(STACK[0x1828])) & 0x25)) ^ LODWORD(STACK[0x13F8])) == -1926392729;
  STACK[0x1828] = v6 >> 24;
  STACK[0x15D0] = v6;
  LODWORD(STACK[0x15F8]) = v5;
  LODWORD(STACK[0x1760]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v3 ^ ((8 * v8) | (32 * v8)))) - 4))();
}

uint64_t sub_100224DE4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t (*v8)(uint64_t);

  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x161C]) = 0;
  v3 = v1 ^ *(unsigned __int8 *)(STACK[0x1650] + STACK[0x16A8]) ^ *(unsigned __int8 *)(STACK[0x1638] + STACK[0x1898]) ^ *(unsigned __int8 *)(STACK[0x1600] + STACK[0x16A8]);
  v4 = LODWORD(STACK[0x1760]) - 10227;
  v5 = *(unsigned __int8 *)(STACK[0x15E8] + STACK[0x1828]);
  v6 = *(unsigned __int8 *)(STACK[0x15F0] + STACK[0x1828]);
  v7 = *(unsigned __int8 *)(STACK[0x15A0] + STACK[0x16F8]);
  LODWORD(STACK[0x15C0]) = v2 ^ 0x1A7D723F;
  STACK[0x1258] = v0 ^ v5 ^ v6 ^ v7;
  v8 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v4) - (v4 ^ 0x301ALL));
  LODWORD(STACK[0x1840]) = 128;
  STACK[0x14B8] = LODWORD(STACK[0x13F8]);
  return v8(v3);
}

uint64_t sub_100224EA8()
{
  int v0;
  int v1;
  uint64_t (*v2)(_QWORD);

  LODWORD(STACK[0x1840]) = 0;
  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x161C]) = 0;
  STACK[0x1258] = 0;
  LODWORD(STACK[0x15C0]) = v1 ^ 0x7E24654D;
  v2 = (uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * v0)
                                      - ((v0 + 1168517064) & 0xBA59FBFF ^ 0x53D2));
  LODWORD(STACK[0x1868]) = 128;
  return v2(0);
}

uint64_t sub_100224F40()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  LODWORD(STACK[0x1840]) = 0;
  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x161C]) = 0;
  v3 = *(unsigned __int8 *)(STACK[0x1638] + STACK[0x1898]);
  v4 = *(unsigned __int8 *)(STACK[0x1650] + STACK[0x16A8]);
  v5 = *(unsigned __int8 *)(STACK[0x1600] + STACK[0x16A8]);
  LODWORD(STACK[0x15C0]) = v0 ^ 0x5077F74D;
  v6 = v1 ^ v4 ^ v3 ^ v5;
  v7 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v2) - ((38 * (v2 ^ 0x3223u)) ^ 0x53D2));
  STACK[0x1258] = 128;
  return v7(v6);
}

uint64_t sub_100224FD0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  _BOOL4 v11;
  unint64_t v12;
  int v13;
  unint64_t v14;

  v3 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1658]) - 15149) + STACK[0x16A8] - 4);
  v4 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x1658]) ^ 0x4AC4)) + STACK[0x16A8] - 4);
  v5 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x1658]) ^ 0x47B6)) + STACK[0x1898]);
  v6 = STACK[0x1760];
  v7 = STACK[0x16A8] * (LODWORD(STACK[0x1760]) - 42);
  v8 = v1 ^ LODWORD(STACK[0x1860]);
  LODWORD(STACK[0x1508]) = v8;
  v9 = v8 ^ v7 ^ v3 ^ v4 ^ v5;
  v10 = (v6 - 2128214290) & 0x7ED9BFFD;
  STACK[0x1258] = v0 ^ *(unsigned __int8 *)(STACK[0x15E8] + STACK[0x1828]) ^ *(unsigned __int8 *)(STACK[0x15F0]
                                                                                                + STACK[0x1828]) ^ *(unsigned __int8 *)(STACK[0x15A0] + STACK[0x16F8]);
  LODWORD(STACK[0x1540]) = v10 + 17604;
  STACK[0x14B8] = 2368574529;
  v11 = LODWORD(STACK[0x13F8]) == -1926392767;
  v12 = STACK[0x18B0] + (v2 ^ 0x9750E658);
  v13 = *(unsigned __int8 *)(v12 - 0x3032385379A144E6);
  v14 = (((v10 + 17604) ^ 0x53AF) + 1772476853)
      * ((1772489163 * (_DWORD)v12) ^ ((1772489163 * v12) >> 16));
  STACK[0x1558] = (unint64_t)*(&off_1015B46D0 + v10 - 7228) - 4;
  STACK[0x14F8] = (unint64_t)*(&off_1015B46D0 + v10 - 7472);
  STACK[0x14F0] = (unint64_t)*(&off_1015B46D0 + ((v6 - 2128214290) & 0x1924F8));
  STACK[0x1590] = v14 >> 24;
  STACK[0x1538] = v14;
  LODWORD(STACK[0x15C0]) = v13;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (v10 ^ (498 * v11))) - 4))(v9);
}

uint64_t sub_100225320()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x161C]) = 0;
  v5 = (v0 - 1541288983) & 0x5BDE57DE;
  LODWORD(STACK[0x15C0]) = v1 ^ 0x3DED61C8;
  v6 = *(_QWORD *)(STACK[0x18C0] + 8 * v0);
  LODWORD(STACK[0x1840]) = v4 ^ v2 ^ v3 ^ *(unsigned __int8 *)(STACK[0x1558] + STACK[0x1590]);
  LODWORD(STACK[0x1860]) = 128;
  return ((uint64_t (*)(void))(v6 - (v5 ^ 0x53D2)))();
}

uint64_t sub_1002253A0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  _BOOL4 v9;

  LODWORD(STACK[0x1840]) = v3 ^ *(unsigned __int8 *)(STACK[0x1558] + STACK[0x1590]) ^ v1 ^ v2;
  v4 = STACK[0x1540];
  v5 = STACK[0x18B0] + (v0 ^ 0xB0C0F5AF);
  v6 = *(unsigned __int8 *)(v5 - 0x3032385379A144E6);
  v7 = 1772489163 * ((1772489163 * (_DWORD)v5) ^ ((1772489163 * v5) >> 16));
  LODWORD(STACK[0x15E0]) = (LODWORD(STACK[0x1540]) + 2026118022) & 0x873BB8DC;
  v8 = v7 >> ((v4 - 122) & 0xDC ^ 4u);
  STACK[0x14E8] = (unint64_t)*(&off_1015B46D0 + v4 - 23857) - 4;
  STACK[0x14D8] = (unint64_t)*(&off_1015B46D0 + v4 - 24394);
  STACK[0x1898] = v8 + 5;
  STACK[0x1530] = v8;
  STACK[0x14B8] = 2368574528;
  v9 = LODWORD(STACK[0x13F8]) != -1926392768;
  STACK[0x14C8] = (unint64_t)*(&off_1015B46D0 + (v4 ^ 0x6A17)) - 4;
  STACK[0x14B0] = v7;
  LODWORD(STACK[0x1500]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v4 ^ (112 * v9))) - 4))();
}

uint64_t sub_10022566C()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;

  LODWORD(STACK[0x1488]) = STACK[0x1698] ^ LODWORD(STACK[0x16A4]);
  v3 = STACK[0x14E8];
  v4 = STACK[0x14D8];
  v5 = STACK[0x14C8];
  LODWORD(STACK[0x1860]) = v0 ^ *(unsigned __int8 *)(STACK[0x14E8] + STACK[0x1530]) ^ *(unsigned __int8 *)(STACK[0x14D8] + STACK[0x1898]) ^ *(unsigned __int8 *)(STACK[0x14C8] + v1);
  v6 = STACK[0x15E0];
  v7 = (8 * LODWORD(STACK[0x15E0])) ^ 0x1D6F0;
  v8 = STACK[0x18B0] + (v2 ^ 0x9032A1CF);
  v9 = *(unsigned __int8 *)(v8 - 0x3032385379A144E6);
  LODWORD(STACK[0x1490]) = v7;
  v10 = 1772489163 * ((((v6 + 1772474799) * v8) >> v7) ^ ((v6 + 1772474799) * (_DWORD)v8));
  v11 = v10 >> 24;
  v12 = -(int)(v10 >> 24);
  LODWORD(v10) = *(unsigned __int8 *)(v3 + (v10 >> 24)) ^ v9 ^ *(unsigned __int8 *)((v10 >> 24) + v4 + 5) ^ *(unsigned __int8 *)((v10 >> 24) + v5 + 2) ^ v10;
  HIDWORD(v13) = v10 ^ v12;
  LODWORD(v13) = (v10 ^ (55 * (_DWORD)v11)) << 24;
  LODWORD(v10) = ((v13 >> 27) ^ 0x9D) + 994674522;
  LODWORD(v11) = (v10 ^ 0x7401DFB6) & (2 * (v10 & 0xF27)) ^ v10 & 0xF27;
  v14 = ((2 * (v10 ^ 0x7401C9F8)) ^ 0x41484DBE) & (v10 ^ 0x7401C9F8) ^ (2 * (v10 ^ 0x7401C9F8)) & 0x16DE;
  v15 = v14 ^ 0x1241;
  v16 = (v14 ^ 0x249C) & (4 * v11) ^ v11;
  LODWORD(v11) = ((4 * v15) ^ 0xC2DEDB7C) & v15 ^ (4 * v15) & 0xB0B7B6DC;
  v17 = (v11 ^ 0x80969250) & (16 * v16) ^ v16;
  LODWORD(v11) = ((16 * (v11 ^ 0x30212483)) ^ 0xB7B6DF0) & (v11 ^ 0x30212483) ^ (16 * (v11 ^ 0x30212483)) & 0xB0B7B6D0;
  v18 = v17 ^ 0xB0B7B6DF ^ (v11 ^ 0x33240F) & (v17 << 8);
  v19 = STACK[0x18B8];
  LODWORD(v10) = *(unsigned __int8 *)(STACK[0x18B8]
                                    + (v10 ^ (2
                                                          * ((v18 << 16) & 0x30B70000 ^ v18 ^ ((v18 << 16) ^ 0x36DF0000) & (((v11 ^ 0xB084920F) << 8) & 0x30B70000 ^ (((v11 ^ 0xB084920F) << 8) ^ 0x37B60000) & (v11 ^ 0xB084920F) ^ 0x10000))) ^ 0xC4F71299))
               - 38;
  v20 = v10 ^ (v10 >> 5) ^ (v10 >> 4);
  LODWORD(v10) = ((v10 ^ (v10 >> 5) ^ (v10 >> 4)) ^ 0x2D) + 887078598;
  v21 = (v10 ^ 0xEC1D6102) & (2 * (v10 & 0x188)) ^ v10 & 0x188;
  LODWORD(v11) = (2 * (v10 ^ 0xEC1D6202)) & 0x238A ^ 0x8A ^ ((2 * (v10 ^ 0xEC1D6202)) ^ 0x48424514) & (v10 ^ 0xEC1D6202);
  v22 = (4 * v21) & 0x200 ^ v21 ^ ((4 * v21) | 0xC000) & v11;
  LODWORD(v11) = (4 * v11) & 0x273D3388 ^ 0x23093182 ^ ((4 * v11) ^ 0x9CF4CE28) & v11;
  v23 = (16 * v22) & 0x273D3380 ^ v22 ^ ((16 * v22) ^ 0x30000) & v11;
  LODWORD(v11) = (16 * v11) & 0x273D3380 ^ 0x42C030A ^ ((16 * v11) ^ 0x73D338A0) & v11;
  v24 = v23 ^ (v23 << 8) & 0x273D3300 ^ ((v23 << 8) ^ 0x1300000) & v11 ^ 0x260C038A;
  STACK[0x14B8] = 2368574543;
  LODWORD(v4) = STACK[0x13F8];
  LODWORD(STACK[0x161C]) = 63
                         * (*(unsigned __int8 *)(v19
                                               + (v10 ^ 0xC34A369C ^ (2
                                                                                  * ((v24 << 16) & 0x273D0000 ^ v24 ^ ((v24 << 16) ^ 0x338A0000) & (((_DWORD)v11 << 8) & 0x273D0000 ^ 0x20C0000 ^ (((_DWORD)v11 << 8) ^ 0x3D330000) & v11))))) ^ v20 ^ 0xFFFFFFEF);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v6 | ((_DWORD)v4 == -1926392753))) - 8))();
}

uint64_t sub_100225C6C()
{
  int v0;
  int v1;

  LODWORD(STACK[0x15C0]) = v1 ^ 0x171AA5D8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 - 9160)) - 12))();
}

uint64_t sub_100225CA8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v4 = (v0 + 4912) | 0x1098u;
  LODWORD(STACK[0x15C0]) = v3 ^ 0x1D1F35A8;
  v5 = *(_QWORD *)(STACK[0x18C0] + 8 * v0);
  LODWORD(STACK[0x1860]) = v1 ^ *(unsigned __int8 *)(STACK[0x14D8] + STACK[0x1898]) ^ *(unsigned __int8 *)(STACK[0x14E8] + STACK[0x1530]) ^ *(unsigned __int8 *)(STACK[0x14C8] + v2);
  LODWORD(STACK[0x161C]) = 128;
  return ((uint64_t (*)(void))(v5 - v4 + 21458))();
}

uint64_t sub_100225D30@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  int v16;
  unint64_t v17;
  BOOL v18;
  char *v19;
  char *v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  uint64_t (*v32)(void);

  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0xDAC]) = 0;
  LODWORD(STACK[0x15E0]) = 0;
  LODWORD(STACK[0x1518]) = 0;
  LODWORD(STACK[0xD4C]) = 0;
  LODWORD(STACK[0xD8C]) = 0;
  LODWORD(STACK[0xD7C]) = 0;
  LODWORD(STACK[0x1898]) = 0;
  v3 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1760]) - 22024) + STACK[0x1828] - 8);
  v4 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x1760]) ^ 0x5B3E)) + STACK[0x16F8] - 4);
  v5 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1760]) - 20017) + STACK[0x1828] - 8);
  v6 = (a1 ^ 0x7E) * STACK[0x1828];
  v7 = LODWORD(STACK[0x15F8]) ^ STACK[0x15D0];
  LODWORD(STACK[0x1428]) = v7;
  v8 = v7 ^ v6 ^ v3 ^ v4;
  v9 = (uint64_t)*(&off_1015B46D0 + a1 - 6303);
  STACK[0x1258] = v8 ^ v5;
  v10 = STACK[0x1590];
  v11 = *(unsigned __int8 *)(v9 + STACK[0x1590] - 12);
  LODWORD(v9) = *((unsigned __int8 *)*(&off_1015B46D0 + a1 - 7060) + STACK[0x1590] - 3);
  v12 = (uint64_t)*(&off_1015B46D0 + (a1 ^ 0x1F4Cu));
  v13 = -117 * STACK[0x1590];
  STACK[0x1420] = STACK[0x1590] + 1;
  LODWORD(v12) = *(unsigned __int8 *)(v12 + v10 + 1 - 8);
  LODWORD(v10) = STACK[0x1538] ^ LODWORD(STACK[0x15C0]);
  LODWORD(STACK[0x1418]) = v10;
  LODWORD(STACK[0x1840]) = v10 ^ v13 ^ v11 ^ v9 ^ v12;
  v14 = STACK[0x1490];
  v15 = STACK[0x18B0] + (v2 ^ 0x9A3731BF);
  v16 = *(unsigned __int8 *)(v15 - 0x3032385379A144E6);
  v17 = (((v14 + 1772483515) * (_DWORD)v15) ^ (((v14 + 1772483515) * v15) >> 16))
      * (((v14 - 34675217) & 0x21157DE) + 1772467693);
  STACK[0x1450] = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x1490]) - 4895) - 8;
  STACK[0x14B8] = 2368574542;
  v18 = LODWORD(STACK[0x13F8]) == -1926392754;
  v19 = (char *)*(&off_1015B46D0 + (v14 ^ 0x1EDE)) - 12;
  STACK[0x1470] = (v17 >> 24) + 2;
  STACK[0x1440] = (unint64_t)v19;
  v20 = (char *)*(&off_1015B46D0 + (v14 ^ 0x1E70)) - 4;
  STACK[0x1760] = v17 >> 24;
  STACK[0x1438] = (unint64_t)v20;
  LODWORD(STACK[0x16F8]) = v17 ^ v16;
  v21 = (((v1 ^ 0x9C88E0FD) - 988991635) ^ ((v1 ^ 0x212805BB) + 2024655403) ^ ((v1 ^ 0x96F7414F) - 814575905))
      - 1772085134;
  v22 = (v21 ^ 0xE689713A) & (2 * (v21 & 0xF6CD7403)) ^ v21 & 0xF6CD7403;
  v23 = ((2 * (v21 ^ 0x6389793E)) ^ 0x2A881A7A) & (v21 ^ 0x6389793E) ^ (2 * (v21 ^ 0x6389793E)) & 0x95440D3C;
  v24 = v23 ^ 0x95440505;
  v25 = (v23 ^ 0x518) & (4 * v22) ^ v22;
  v26 = ((4 * v24) ^ 0x551034F4) & v24 ^ (4 * v24) & 0x95440D3C;
  v27 = (v26 ^ 0x15000439) & (16 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x80440909)) ^ 0x5440D3D0) & (v26 ^ 0x80440909) ^ (16 * (v26 ^ 0x80440909)) & 0x95440D30;
  v29 = v27 ^ 0x95440D3D ^ (v28 ^ 0x1440012D) & (v27 << 8);
  v30 = ((v29 << 16) ^ 0xD3D0000) & (((v28 ^ 0x81040C2D) << 8) & 0x95440000 ^ 0x11400000 ^ (((v28 ^ 0x81040C2D) << 8) ^ 0x440D0000) & (v28 ^ 0x81040C2D));
  v31 = !v18;
  LODWORD(STACK[0x15C0]) = v21 ^ (2 * ((v29 << 16) & 0x15440000 ^ v29 ^ v30)) ^ 0x5B60FA1E;
  v32 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v14 ^ (14412 * v31)));
  LODWORD(STACK[0x15F8]) = 128;
  return v32();
}

uint64_t sub_100226120()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;

  v3 = STACK[0x18B0] + (v1 ^ 0xD64D6E79);
  v4 = *(unsigned __int8 *)(v3 - 0x3032385379A144E6);
  v5 = 1772489163 * ((1772489163 * (_DWORD)v3) ^ ((1772489163 * v3) >> 16));
  STACK[0x1460] = *(_QWORD *)(v2 + 8 * (v0 - 17465)) - 8;
  STACK[0x1410] = (v5 >> 24) + 1;
  STACK[0x1458] = *(_QWORD *)(v2 + 8 * (v0 ^ 0x4BA6)) - 8;
  STACK[0x13F0] = *(_QWORD *)(v2 + 8 * (v0 ^ 0x48A9));
  STACK[0x13E8] = ((1772489163 * ((1772489163 * (_DWORD)v3) ^ ((1772489163 * v3) >> 16))) >> 24)
                + ((v0 + 1296405656) & 0xB2BA3739)
                - 5646;
  STACK[0x14B8] = 2368574541;
  LODWORD(v3) = LODWORD(STACK[0x13F8]) == -1926392755;
  STACK[0x1538] = v5 >> 24;
  STACK[0x1400] = v5;
  LODWORD(STACK[0x1408]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 ^ (127 * (int)v3))) - 8))();
}

uint64_t sub_1002263B8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0xDAC]) = 0;
  LODWORD(STACK[0x15E0]) = 0;
  LODWORD(STACK[0x1518]) = 0;
  LODWORD(STACK[0xD8C]) = 0;
  LODWORD(STACK[0xD7C]) = 0;
  LODWORD(STACK[0x1898]) = 0;
  LODWORD(STACK[0x15C0]) = (v2 + 2265464) ^ v3;
  LODWORD(STACK[0x15F8]) = v1 ^ *(unsigned __int8 *)(STACK[0x1460] + STACK[0x1538]) ^ *(unsigned __int8 *)(STACK[0x1458] + STACK[0x1410]) ^ v0;
  v4 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * v2);
  LODWORD(STACK[0xD4C]) = 128;
  return v4();
}

uint64_t sub_10022643C()
{
  char v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  char v14;
  int v15;
  char v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  _BOOL4 v20;

  v5 = STACK[0x16D8];
  v6 = (57 * STACK[0x16D8]) ^ STACK[0x1698];
  LODWORD(STACK[0x1868]) = LODWORD(STACK[0x1688]) ^ *((unsigned __int8 *)*(&off_1015B46D0
                                                                         + LODWORD(STACK[0x1798])
                                                                         - 10346)
                                                    + STACK[0x1680]
                                                    - 8) ^ *((unsigned __int8 *)*(&off_1015B46D0
                                                                                + LODWORD(STACK[0x1798])
                                                                                - 11821)
                                                           + STACK[0x1680]
                                                           - 12) ^ (99 * STACK[0x1680]) ^ *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1798]) - 10218)
                                                                                          + STACK[0x1680]);
  v7 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1540]) - 25262) + STACK[0x1530] - 4);
  v8 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x1540]) ^ 0x643C)) + STACK[0x1530] - 12);
  v9 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1540]) - 23548) + STACK[0x1530] - 8);
  v10 = -57 * STACK[0x1530];
  v11 = LODWORD(STACK[0x1500]) ^ STACK[0x14B0];
  LODWORD(STACK[0x139C]) = v11;
  LODWORD(STACK[0x1860]) = v11 ^ v10 ^ v7 ^ v8 ^ v9;
  v12 = v2 - 4546;
  LODWORD(STACK[0x15F8]) = v3 ^ *(unsigned __int8 *)(STACK[0x1460] + STACK[0x1538]) ^ *(unsigned __int8 *)(STACK[0x1458] + STACK[0x1410]) ^ v1;
  LOBYTE(v7) = *(_BYTE *)(STACK[0x1758] + v5);
  v13 = *(_BYTE *)(STACK[0x1748] + v5);
  v14 = *(_BYTE *)(STACK[0x1720] + STACK[0x16D0]);
  v15 = STACK[0x16A4];
  LODWORD(STACK[0x1390]) = v6;
  LOBYTE(v7) = v6 ^ v15 ^ v7 ^ v13 ^ v14;
  LODWORD(STACK[0x1898]) = v12 + 3504;
  LODWORD(STACK[0x15D0]) = v12 ^ 0x2E6C;
  LOBYTE(v9) = ((((v7 & 0x43 ^ 0x43) + (v7 & 0x40)) | 8)
              - ((v7 & 0x43 ^ 0x43) & ((v12 - 80) ^ 0x6C))
              + ((v7 & 0x43 ^ 0x43) & ((v12 ^ 0x6C) - 15) ^ 0x21)
              - (((v7 & 0x43 ^ 0x43) + (v7 & 0x40)) & 1 | 8)
              + 16) ^ 0x71;
  v16 = (((2 * (v7 & 0x43 ^ 3)) | 0x9C) - (v7 & 0x43 ^ 3) + 50) ^ 0xCD;
  v17 = STACK[0x18B0] + (v4 ^ 0x8D0F33EF);
  v18 = *(unsigned __int8 *)(v17 - 0x3032385379A144E6);
  v19 = 1772489163 * ((1772489163 * (_DWORD)v17) ^ ((1772489163 * v17) >> 16));
  STACK[0x13D8] = (unint64_t)*(&off_1015B46D0 + v12 - 11826) - 4;
  STACK[0x13B8] = (unint64_t)*(&off_1015B46D0 + v12 - 12670) - 4;
  STACK[0x14B0] = (v19 >> 24) + 1;
  STACK[0x13D0] = (unint64_t)*(&off_1015B46D0 + v12 - 12062) - 4;
  STACK[0x1698] = v19 >> 24;
  STACK[0x1500] = v19;
  LODWORD(STACK[0x13A0]) = v18;
  v20 = ((43
        - (((v4 ^ (112
                                  - (((v0 ^ 0x42) - 44) ^ ((v0 ^ 0xAE) + 64) ^ ((v0 ^ 0xE5) + 117))
                                  - ((18 - 2 * (((v0 ^ 0x42) - 44) ^ ((v0 ^ 0xAE) + 64) ^ ((v0 ^ 0xE5) + 117))) & 0xCF))) & 0x43)
                          - (v9 | v16))) ^ LODWORD(STACK[0x13F8])) != -1926392729;
  LODWORD(STACK[0x13A8]) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((236 * v20) ^ v12)) - 4))();
}

uint64_t sub_10022690C()
{
  uint64_t v0;
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  int v19;

  v3 = STACK[0x1848];
  v4 = LODWORD(STACK[0x1678]) ^ (-45 * v3) ^ *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x1850]) ^ 0x5FA5))
                                             + v3
                                             - 12);
  v5 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1850]) - 20722) + v3 - 8) ^ *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1850]) - 20770)
                                                                                           + v3
                                                                                           - 8);
  v6 = STACK[0x13D8];
  v7 = *(unsigned __int8 *)(STACK[0x13D8] + STACK[0x1698]);
  v8 = STACK[0x13B8];
  v9 = *(unsigned __int8 *)(STACK[0x13B8] + v0);
  LODWORD(STACK[0x1644]) = v4 ^ v5;
  v10 = STACK[0x13D0];
  LODWORD(STACK[0xD4C]) = v2 ^ v7 ^ v9 ^ *(unsigned __int8 *)(STACK[0x13D0] + STACK[0x14B0]);
  v11 = STACK[0x1898];
  v12 = 161 * (LODWORD(STACK[0x1898]) ^ 0x4633);
  v13 = STACK[0x18B0] + (v1 ^ 0xDF919D18);
  v14 = *(unsigned __int8 *)(v13 - 0x3032385379A144E6);
  LODWORD(STACK[0x15D0]) = v12;
  v15 = 1772489163 * (((1772489163 * v13) >> ((v12 ^ 0xA1) + 50)) ^ (1772489163 * (_DWORD)v13));
  v16 = v15 >> 24;
  v17 = -(int)(v15 >> 24);
  LODWORD(v15) = *(unsigned __int8 *)(v6 + (v15 >> 24)) ^ v14 ^ *(unsigned __int8 *)((v15 >> 24) + v8 + 4) ^ *(unsigned __int8 *)((v15 >> 24) + v10 + 1) ^ v15;
  HIDWORD(v18) = v15 ^ v17;
  LODWORD(v18) = (v15 ^ (-121 * (_DWORD)v16)) << 24;
  v19 = ((v18 >> 27) ^ 0x99) + 1629551820;
  LODWORD(v16) = (v19 & 0x484 | 0x9000 | (2 * (v19 & 0x484)) & 0xF8FF) ^ ((2 * (v19 & 0x484)) | 0x2000) & (v19 ^ 0x2D8ECC2C);
  LODWORD(v15) = (2 * (v19 ^ 0x2D8ECC2C)) & 0xA8 ^ 0x8A8 ^ ((2 * (v19 ^ 0x2D8ECC2C)) ^ 0x44A23150) & (v19 ^ 0x2D8ECC2C);
  LODWORD(v16) = (4 * v16) & 0x3351D8A8 ^ v16 ^ ((4 * v16) ^ 0x20000) & v15;
  LODWORD(v15) = (4 * v15) & 0xB351D8A8 ^ 0x32109808 ^ ((4 * v15) ^ 0x4D4762A0) & v15;
  LODWORD(v16) = (16 * v16) & 0x3351D8A0 ^ v16 ^ ((16 * v16) ^ 0x80000) & v15;
  LODWORD(v15) = (16 * v15) & 0xB351D8A0 ^ 0x82405028 ^ ((16 * v15) ^ 0x351D8A80) & v15;
  LODWORD(v16) = v16 ^ ((_DWORD)v16 << 8) & 0x3351D800 ^ (((_DWORD)v16 << 8) ^ 0x800000) & v15 ^ 0xB35158A8;
  STACK[0x14B8] = 2368574539;
  LODWORD(v10) = v11 ^ (31 * (LODWORD(STACK[0x13F8]) == -1926392757));
  LODWORD(STACK[0x1898]) = *(unsigned __int8 *)(STACK[0x18B8]
                                              + (v19 ^ (2
                                                      * (((_DWORD)v16 << 16) & 0x33510000 ^ v16 ^ (((_DWORD)v16 << 16) ^ 0x58A80000) & (((_DWORD)v15 << 8) & 0x33510000 ^ 0x22010000 ^ (((_DWORD)v15 << 8) ^ 0x51D80000) & v15))) ^ 0xD87CA5D4)) ^ 0x38;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)v10) - 12))();
}

uint64_t sub_100226DC0()
{
  int v0;
  int v1;
  uint64_t (*v2)(void);

  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0xDAC]) = 0;
  LODWORD(STACK[0x1518]) = 0;
  LODWORD(STACK[0xD8C]) = 0;
  LODWORD(STACK[0xD7C]) = 0;
  LODWORD(STACK[0x15C0]) = v1 ^ 0x6B5843F6;
  v2 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v0 - 15822));
  LODWORD(STACK[0x15E0]) = 128;
  return v2();
}

uint64_t sub_100226E10()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t (*v6)(void);

  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0xDAC]) = 0;
  LODWORD(STACK[0x15E0]) = 0;
  LODWORD(STACK[0x1518]) = 0;
  LODWORD(STACK[0xD8C]) = 0;
  LODWORD(STACK[0xD7C]) = 0;
  v3 = *(unsigned __int8 *)(STACK[0x13B8] + v0);
  v4 = *(unsigned __int8 *)(STACK[0x13D8] + STACK[0x1698]);
  v5 = STACK[0x15D0];
  LODWORD(STACK[0x15C0]) = (LODWORD(STACK[0x15D0]) + 1388049263) ^ v1;
  LODWORD(STACK[0xD4C]) = v2 ^ v3 ^ v4 ^ *(unsigned __int8 *)(STACK[0x13D0] + STACK[0x14B0]);
  v6 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * v5);
  LODWORD(STACK[0x1898]) = 128;
  STACK[0x14B8] = LODWORD(STACK[0x13F8]);
  return v6();
}

uint64_t sub_100226EA4()
{
  int v0;
  int v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;

  v1 = STACK[0x15D0];
  v2 = STACK[0x18B0] + (v0 ^ 0xE675D791);
  v3 = *(unsigned __int8 *)(v2 - 0x3032385379A144E6);
  v4 = 1772489163 * ((1772489163 * (_DWORD)v2) ^ ((1772489163 * v2) >> 16));
  STACK[0x1378] = (unint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x15D0]) ^ 0x1629));
  v5 = (unint64_t)*(&off_1015B46D0 + v1 - 4108);
  STACK[0x1348] = v5;
  LODWORD(STACK[0x1368]) = *(unsigned __int8 *)(v5 + (v4 >> 24));
  STACK[0x1388] = v4 >> 24;
  STACK[0x1380] = (v4 >> 24) + 2;
  STACK[0x14B8] = 2368574538;
  v6 = LODWORD(STACK[0x13F8]) == -1926392758;
  STACK[0x1370] = (unint64_t)*(&off_1015B46D0 + (v1 ^ 0x147B)) - 4;
  STACK[0x1350] = v4;
  LODWORD(STACK[0x1358]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v1 ^ (252 * v6))) - 12))();
}

uint64_t sub_10022713C()
{
  int v0;
  int v1;
  int v2;
  uint64_t (*v3)(void);

  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0xDAC]) = 0;
  LODWORD(STACK[0x1518]) = 0;
  LODWORD(STACK[0xD8C]) = 0;
  LODWORD(STACK[0x15C0]) = v0 ^ (v1 + 15822) ^ 0x98E1C0C;
  LODWORD(STACK[0x15E0]) = v2 ^ LODWORD(STACK[0x1368]) ^ *(unsigned __int8 *)(STACK[0x1378] + STACK[0x1388]) ^ *(unsigned __int8 *)(STACK[0x1370] + STACK[0x1380]);
  v3 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * v1);
  LODWORD(STACK[0xD7C]) = 128;
  return v3();
}

uint64_t sub_1002271B8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  int v13;
  char *v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  uint64_t (*v27)(uint64_t);

  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0xDAC]) = 0;
  LODWORD(STACK[0x1518]) = 0;
  v4 = STACK[0x16A8];
  v5 = LODWORD(STACK[0x1508]) ^ (-89 * (_DWORD)v4) ^ *((unsigned __int8 *)*(&off_1015B46D0
                                                                          + (LODWORD(STACK[0x1658]) ^ 0x4184))
                                                     + v4
                                                     - 12) ^ *((unsigned __int8 *)*(&off_1015B46D0
                                                                                  + (LODWORD(STACK[0x1658]) ^ 0x4817))
                                                             + v4
                                                             - 10) ^ *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x1658]) ^ 0x4482))
                                                                                   + v4);
  STACK[0x1320] = STACK[0x1760] + 5;
  LODWORD(STACK[0x15E0]) = v3 ^ LODWORD(STACK[0x1368]) ^ *(unsigned __int8 *)(STACK[0x1378] + STACK[0x1388]) ^ *(unsigned __int8 *)(STACK[0x1370] + STACK[0x1380]);
  STACK[0x14B8] = 2368574537;
  v6 = LODWORD(STACK[0x13F8]) == -1926392759;
  v7 = STACK[0x18B0] + (v1 ^ 0x84A3DBB5);
  v8 = *(unsigned __int8 *)(v7 - 0x3032385379A144E6);
  v9 = 1772489163 * ((1772489163 * (_DWORD)v7) ^ ((1772489163 * v7) >> 16));
  v10 = v9 >> (v2 + 8);
  v11 = (char *)*(&off_1015B46D0 + v2 - 4948) - 4;
  STACK[0x1700] = (unint64_t)v11;
  LODWORD(v7) = v11[v10];
  v12 = (char *)*(&off_1015B46D0 + v2 - 4271) - 4;
  STACK[0x1490] = (unint64_t)v12;
  v13 = v12[v10 + 5];
  v14 = (char *)*(&off_1015B46D0 + v2 - 5002) - 12;
  STACK[0x1340] = (unint64_t)v14;
  v15 = v14[v10 + 5];
  STACK[0x17A8] = v10;
  LODWORD(STACK[0x1338]) = v8;
  STACK[0x1330] = v9;
  LODWORD(STACK[0x1328]) = v8 ^ v9;
  LODWORD(STACK[0xD7C]) = v8 ^ v9 ^ (-109 * v10) ^ v7 ^ v13 ^ v15;
  v16 = (((v0 ^ 0x4CD3964E) + 357980640) ^ ((v0 ^ 0xF22782C8) - 1415426726) ^ ((v0 ^ 0x95A3B08F) - 869892321))
      - 1541234993;
  v17 = (v16 ^ 0xC882F182) & (2 * (v16 & 0xE90AF5AB)) ^ v16 & 0xE90AF5AB;
  v18 = ((2 * (v16 ^ 0xA9272C0)) ^ 0xC7310ED6) & (v16 ^ 0xA9272C0) ^ (2 * (v16 ^ 0xA9272C0)) & 0xE398876A;
  v19 = v18 ^ 0x20888129;
  v20 = (v18 ^ 0xC0100640) & (4 * v17) ^ v17;
  v21 = ((4 * v19) ^ 0x8E621DAC) & v19 ^ (4 * v19) & 0xE3988768;
  v22 = (v21 ^ 0x82000523) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x61988243)) ^ 0x398876B0) & (v21 ^ 0x61988243) ^ (16 * (v21 ^ 0x61988243)) & 0xE3988760;
  v24 = v22 ^ 0xE398876B ^ (v23 ^ 0x21880600) & (v22 << 8);
  v25 = ((v24 << 16) ^ 0x76B0000) & (((v23 ^ 0xC210814B) << 8) & 0x63980000 ^ 0x63180000 ^ (((v23 ^ 0xC210814B) << 8) ^ 0x18870000) & (v23 ^ 0xC210814B));
  v26 = !v6;
  LODWORD(STACK[0x15C0]) = v16 ^ (2 * ((v24 << 16) & 0x63980000 ^ v24 ^ v25)) ^ 0xA5066F1A;
  v27 = *(uint64_t (**)(uint64_t))(STACK[0x18C0] + 8 * (v2 ^ (14032 * v26)));
  LODWORD(STACK[0xD8C]) = 128;
  return v27(v5);
}

uint64_t sub_1002275E4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  _BOOL4 v22;
  uint64_t (*v23)(void);

  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0xDAC]) = 0;
  v6 = STACK[0x1698];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 8 * (LODWORD(STACK[0x13A8]) - 12520)) + STACK[0x1698]);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 8 * (LODWORD(STACK[0x13A8]) - 12468)) + STACK[0x14B0] - 4);
  v9 = *(_QWORD *)(v5 + 8 * (LODWORD(STACK[0x13A8]) ^ 0x3A75));
  STACK[0x1318] = STACK[0x1698] + 3;
  LODWORD(v9) = *(unsigned __int8 *)(v9 + v6 + 3 - 4);
  v10 = -9 * v6;
  LODWORD(v6) = LODWORD(STACK[0x13A0]) ^ STACK[0x1500];
  LODWORD(STACK[0x13A0]) = v6;
  LODWORD(STACK[0xD4C]) = v6 ^ v10 ^ v7 ^ v8 ^ v9;
  LODWORD(STACK[0x15E0]) = v3 ^ *(unsigned __int8 *)(STACK[0x1378] + STACK[0x1388]) ^ LODWORD(STACK[0x1368]) ^ *(unsigned __int8 *)(STACK[0x1370] + STACK[0x1380]);
  v11 = *(_QWORD *)(v5 + 8 * (v1 - 4057)) - 4;
  v12 = STACK[0x17A8];
  v13 = *(_QWORD *)(v5 + 8 * (v1 ^ 0x13C9));
  STACK[0x1368] = STACK[0x17A8] + 2;
  v14 = *(unsigned __int8 *)(v13 + v12 + 2);
  v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 8 * (v1 ^ 0x1284)) + v12 - 12);
  v16 = (-21 * v12) ^ STACK[0x1330] ^ LODWORD(STACK[0x1338]);
  STACK[0x16E0] = v11;
  v17 = *(unsigned __int8 *)(v11 + v12);
  LODWORD(STACK[0x1500]) = v14;
  LODWORD(v9) = v16 ^ v14;
  LOWORD(v14) = v2;
  v18 = STACK[0x18B0] + (v2 ^ 0x282BFB7Du);
  v19 = *(unsigned __int8 *)(v18 - 0x3032385379A144E6);
  LODWORD(STACK[0xD7C]) = v9 ^ v15 ^ v17;
  LODWORD(STACK[0x1488]) = (v1 ^ 0x45CE) - 9081;
  v20 = ((v1 ^ 0x45CE) + 1772467693) * ((1772489163 * (_DWORD)v18) ^ ((1772489163 * v18) >> 16));
  LODWORD(v20) = *(unsigned __int8 *)(STACK[0x1700] + (v20 >> 24)) ^ v19 ^ *(unsigned __int8 *)(STACK[0x1490]
                                                                                              + (v20 >> 24)
                                                                                              + 5) ^ v20 ^ *(unsigned __int8 *)(STACK[0x1340] + (v20 >> 24) + 5) ^ (-109 * (v20 >> 24));
  LODWORD(v20) = (((v14 & 0x9CAC ^ 0xA40C72D | 0xF731E4A7) - (v14 & 0x9CAC ^ 0xA40C72D | 0x8CE1B58) + 147725144) ^ 0xFD71BBA6)
               + ((27525 - (((v0 ^ 0x6FD0) + 41026) ^ ((v0 ^ 0xBA4A) + 30172) ^ ((v0 ^ 0x7193) + 48643))) & 0x9CAC)
               + ((-3 * (((v20 ^ 0x34) - 86) ^ ((v20 ^ 0x2B) - 73) ^ ((v20 ^ 0x1F) - 125)) - 38) ^ 0xFD);
  LODWORD(v20) = *(unsigned __int8 *)(v4 + (((_DWORD)v20 - 1926392729 - ((2 * (_DWORD)v20) & 0x1A5B28CE)) ^ 0x8D2D9467));
  LODWORD(v20) = ((v20 >> 7) | (2 * v20)) ^ (((v20 >> 7) | (2 * v20)) >> 6) ^ (((v20 >> 7) | (2 * v20)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(STACK[0xD8C]) = (v20 >> 2) | ((_DWORD)v20 << 6);
  LODWORD(v20) = (((v0 ^ 0x43094ADF) + 445416783) ^ ((v0 ^ 0x9FA893EE) - 970105728) ^ ((v0 ^ 0xF7F67D38) - 1368149334))
               - 60132147;
  LODWORD(v18) = (v20 ^ 0x8821F2F) & (2 * (v20 & 0x90C31FAE)) ^ v20 & 0x90C31FAE;
  LODWORD(v9) = ((2 * (v20 ^ 0x9060463)) ^ 0x338A379A) & (v20 ^ 0x9060463) ^ (2 * (v20 ^ 0x9060463)) & 0x99C51BCC;
  v21 = v9 ^ 0x88450845;
  LODWORD(v9) = (v9 ^ 0x941138D) & (4 * v18) ^ v18;
  LODWORD(v18) = ((4 * v21) ^ 0x67146F34) & v21 ^ (4 * v21) & 0x99C51BCC;
  LODWORD(v9) = (v18 ^ 0x1040B09) & (16 * v9) ^ v9;
  LODWORD(v18) = ((16 * (v18 ^ 0x98C110C9)) ^ 0x9C51BCD0) & (v18 ^ 0x98C110C9) ^ (16 * (v18 ^ 0x98C110C9)) & 0x99C51BC0;
  LODWORD(v9) = v9 ^ 0x99C51BCD ^ (v18 ^ 0x98411800) & ((_DWORD)v9 << 8);
  STACK[0x14B8] = 2368574536;
  v22 = LODWORD(STACK[0x13F8]) != -1926392760;
  LODWORD(STACK[0x15C0]) = v20 ^ (2
                                * (((_DWORD)v9 << 16) & 0x19C50000 ^ v9 ^ (((_DWORD)v9 << 16) ^ 0x1BCD0000) & (((v18 ^ 0x184030D) << 8) & 0x19C50000 ^ 0x18C40000 ^ (((v18 ^ 0x184030D) << 8) ^ 0x451B0000) & (v18 ^ 0x184030D)))) ^ 0x1DEEBC53;
  v23 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v1 ^ (8758 * v22)));
  LODWORD(STACK[0x1518]) = 128;
  return v23();
}

uint64_t sub_100227B0C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  _BOOL4 v23;

  v6 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x15D0]) - 2250) + STACK[0x1388]);
  v7 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x15D0]) ^ 0x10F9)) + STACK[0x1388] - 1);
  v8 = -5 * STACK[0x1388];
  v9 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x15D0]) ^ 0x119D)) + STACK[0x1380] - 4);
  v10 = LODWORD(STACK[0x1358]) ^ STACK[0x1350];
  LODWORD(STACK[0x1380]) = v10;
  LODWORD(STACK[0x15E0]) = v10 ^ v8 ^ v6 ^ v7 ^ v9;
  LODWORD(STACK[0xD7C]) = v2 ^ *(unsigned __int8 *)(STACK[0x16E0] + STACK[0x17A8]) ^ LODWORD(STACK[0x1500]) ^ v4;
  v11 = STACK[0x1488];
  v12 = (5 * (LODWORD(STACK[0x1488]) ^ 0x20A3) + 825109212) & 0xCED1BB77;
  v13 = STACK[0x18B0] + (v3 ^ 0x90C32834);
  v14 = *(_BYTE *)(v13 - 0x3032385379A144E6);
  v15 = 1772489163 * (((v12 ^ 0x69A633F9) * (_DWORD)v13) ^ (((v12 ^ 0x69A633F9) * v13) >> 16));
  LOBYTE(v15) = *(_BYTE *)(STACK[0x1700] + (v15 >> 24)) ^ v14 ^ *(_BYTE *)(STACK[0x1490] + (v15 >> 24) + 5) ^ *(_BYTE *)(STACK[0x1340] + (v15 >> 24) + 5) ^ v15 ^ (-109 * BYTE3(v15));
  LODWORD(v15) = ((71 * (((v15 ^ 0x3C) + 56) ^ ((v15 ^ 0x54) + 96) ^ ((v15 ^ 0x68) + 100)) - 84) ^ 0xB1)
               + 1288297025;
  v16 = (2 * (v15 & 0x401E)) & 0x2C ^ v15 & 0x401E ^ ((2 * (v15 & 0x401E)) | 0x7C00) & (v15 ^ 0x7E5E6D70);
  v17 = (2 * (v15 ^ 0x7E5E6D70)) & 0x36E ^ 0x1122 ^ ((2 * (v15 ^ 0x7E5E6D70)) ^ 0x129026DC) & (v15 ^ 0x7E5E6D70);
  v18 = (4 * v16) & 0x4D68136C ^ v16 ^ ((4 * v16) | 0x2000) & v17;
  v19 = (4 * v17) & 0xCD68136C ^ 0xC8481246 ^ ((4 * v17) ^ 0x308005B8) & v17;
  v20 = (16 * v18) & 0x4D681360 ^ v18 ^ ((16 * v18) ^ 0xA000) & v19;
  v21 = (16 * v19) & 0xCD681360 ^ 0x968010E ^ ((16 * v19) ^ 0xD68136E0) & v19;
  v22 = v20 ^ (v20 << 8) & 0x4D681300 ^ ((v20 << 8) ^ 0xA0000) & v21 ^ 0xCD60196E;
  LODWORD(v15) = v15 ^ (2
                      * ((v22 << 16) & 0x4D680000 ^ v22 ^ ((v22 << 16) ^ 0x136E0000) & ((v21 << 8) & 0x4D680000 ^ 0x5680000 ^ ((v21 << 8) ^ 0x68130000) & v21)));
  STACK[0x14B8] = 2368574551;
  v23 = LODWORD(STACK[0x13F8]) != -1926392745;
  LODWORD(STACK[0x1518]) = ((*(unsigned __int8 *)(v5 + (v15 ^ 0x2B3658C2)) - 84) ^ a2) - 107;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v11 ^ (231 * v23))) - 8))();
}

uint64_t sub_100227FFC()
{
  int v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = STACK[0x1680];
  LODWORD(STACK[0x1868]) = LODWORD(STACK[0x1688]) ^ (-55 * v2) ^ *((unsigned __int8 *)*(&off_1015B46D0
                                                                                      + LODWORD(STACK[0x1798])
                                                                                      - 10744)
                                                                 + v2
                                                                 - 12) ^ *((unsigned __int8 *)*(&off_1015B46D0
                                                                                              + (LODWORD(STACK[0x1798]) ^ 0x386E))
                                                                         + v2
                                                                         - 4) ^ *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1798]) - 9661)
                                                                                + v2
                                                                                - 3);
  v3 = STACK[0x1530];
  v4 = STACK[0x18B0] + (v0 ^ ((20 * (v1 ^ 0x3E5F) - 22132) | 0x1400) ^ 0x9AEC0F09);
  LODWORD(v2) = *(unsigned __int8 *)(v4 - 0x3032385379A144E6);
  LODWORD(STACK[0x1860]) = LODWORD(STACK[0x139C]) ^ (-27 * v3) ^ *((unsigned __int8 *)*(&off_1015B46D0
                                                                                      + (LODWORD(STACK[0x1540]) ^ 0x63AE))
                                                                 + v3) ^ *((unsigned __int8 *)*(&off_1015B46D0
                                                                                              + LODWORD(STACK[0x1540])
                                                                                              - 23558)
                                                                         + v3
                                                                         - 4) ^ *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1540]) - 25055)
                                                                                + v3
                                                                                - 12);
  v5 = 1772489163 * ((1772489163 * (_DWORD)v4) ^ ((1772489163 * v4) >> 16));
  STACK[0x16E0] = (v5 >> 24) + 4;
  STACK[0x1798] = v5 >> 24;
  STACK[0x1488] = v5;
  LODWORD(STACK[0x1540]) = v2;
  STACK[0x14B8] = 2368574550;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v1 ^ (119 * (LODWORD(STACK[0x13F8]) == -1926392746))))
                            - 12))();
}

uint64_t sub_100228330()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x15C0]) = (v0 - 182728690) ^ v1;
  LODWORD(STACK[0xDAC]) = v3 ^ v2 ^ *(unsigned __int8 *)(STACK[0xAF0] + STACK[0x1798]) ^ *(unsigned __int8 *)(STACK[0xAF8] + STACK[0x16E0]);
  v4 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * v0);
  LODWORD(STACK[0x1514]) = 128;
  return v4();
}

uint64_t sub_100228398()
{
  int v0;
  int v1;
  uint64_t (*v2)(void);

  LODWORD(STACK[0x1514]) = 0;
  LODWORD(STACK[0x15C0]) = v1 ^ 0x17C18D7E;
  v2 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v0 - 15822));
  LODWORD(STACK[0xDAC]) = 128;
  return v2();
}

uint64_t sub_1002283D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  int v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  int v20;
  unint64_t v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  _BOOL4 v25;

  v13 = STACK[0xAF0];
  v14 = STACK[0xAF8];
  LODWORD(STACK[0xDAC]) = v12 ^ *(unsigned __int8 *)(STACK[0xAF0] + STACK[0x1798]) ^ *(unsigned __int8 *)(STACK[0xAF8] + STACK[0x16E0]) ^ v11;
  v15 = STACK[0x18B0] + (v10 ^ 0x78364A79u);
  v16 = *(unsigned __int8 *)(v15 - 0x3032385379A144E6);
  v17 = 1772489163 * ((1772489163 * (_DWORD)v15) ^ ((1772489163 * v15) >> 16));
  v18 = v17 >> 24;
  LODWORD(v13) = *(unsigned __int8 *)(v13 + (v17 >> 24));
  v19 = *(unsigned __int8 *)((v17 >> 24) + v14 + 4);
  LODWORD(v14) = 47 * (v17 >> 24);
  LODWORD(v17) = v16 ^ v17;
  v20 = *(unsigned __int8 *)(STACK[0xB00] + ((113 * (v9 ^ 0x583A) - 389846563) & 0x173C5FFD ^ 0x1DBBu) + v18);
  HIDWORD(v21) = v17 ^ -(int)v18 ^ v13 ^ v19 ^ v20;
  LODWORD(v21) = (v17 ^ v14 ^ v13 ^ v19 ^ v20) << 24;
  LODWORD(v17) = ((v21 >> 27) ^ 0x99) + 1531656858;
  LODWORD(v13) = (v17 ^ 0x1F583225) & (2 * (v17 & 0xB6)) ^ v17 & 0xB6;
  v22 = (2 * (v17 ^ 0x1F583269)) & 0xDE ^ 0x2441 ^ ((2 * (v17 ^ 0x1F583269)) ^ 0x441109BE) & (v17 ^ 0x1F583269);
  LODWORD(v13) = (4 * v13) & 0x4D8 ^ v13 ^ ((unsigned __int16)(8 * (v13 >> 1)) | 0xD800) & (unsigned __int16)v22;
  v23 = (4 * v22) & 0xBBECE4DC ^ 0x104C6483 ^ ((4 * v22) ^ 0x6FB3937C) & v22;
  LODWORD(v13) = (16 * v13) & a9 ^ v13 ^ ((16 * v13) ^ 0xF6000) & v23;
  v24 = (16 * v23) & 0xBBECE4D0 ^ 0x120A00F ^ ((16 * v23) ^ 0xBECE4DF0) & v23;
  LODWORD(v13) = v13 ^ 0xB36472DF ^ ((_DWORD)v13 << 8) & 0x3BECE400 ^ (((_DWORD)v13 << 8) ^ 0xC960000) & v24;
  LODWORD(v17) = v17 ^ (2
                      * (((_DWORD)v13 << 16) & 0x3BEC0000 ^ v13 ^ (((_DWORD)v13 << 16) ^ 0x64DF0000) & ((v24 << 8) & 0x3BEC0000 ^ 0x13080000 ^ ((v24 << 8) ^ 0x6CE40000) & v24)));
  STACK[0x14B8] = 2368574549;
  v25 = LODWORD(STACK[0x13F8]) != -1926392747;
  LODWORD(STACK[0x1514]) = *(unsigned __int8 *)(STACK[0x18B8] + (v17 ^ 0x92F51F08)) ^ 0x38;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v9 ^ (35 * v25))) - 8))();
}

uint64_t sub_100228820()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  _BOOL4 v27;
  uint64_t (*v28)(void);

  LODWORD(STACK[0x1500]) = 0;
  LODWORD(STACK[0x15D0]) = 0;
  v3 = STACK[0x18B0] + (v2 ^ 0xE5A9D082);
  v4 = *(unsigned __int8 *)(v3 - 0x3032385379A144E6);
  v5 = 1772489163 * (((1772489163 * v3) >> ((v1 ^ 0x4D) + 28)) ^ (1772489163 * (_DWORD)v3));
  v6 = *(unsigned __int8 *)(STACK[0xA88] + (v5 >> 24));
  v7 = *(unsigned __int8 *)((v5 >> 24) + STACK[0xA80] + 3);
  LODWORD(STACK[0x1780]) = v1 ^ 0x2674;
  LODWORD(v5) = v6 ^ v4 ^ v7 ^ *(unsigned __int8 *)(STACK[0xA78] + (v1 ^ 0x2674u) - 15307 + (v5 >> 24)) ^ v5 ^ (91 * (v5 >> 24));
  LODWORD(v5) = 71 * (((v5 ^ 0x44) - 110) ^ ((v5 ^ 3) - 41) ^ ((v5 ^ 0x47) - 109)) - 90;
  v8 = (((v0 ^ 0x20370FAB) + 2041757755) ^ ((v0 ^ 0x1B84830E) + 1107381408) ^ ((v0 ^ 0x10E428AC) + 1231152958))
     - 315636728;
  v9 = (v8 ^ 0x9FF9CB76) & (2 * (v8 & 0x9FFDD077)) ^ v8 & 0x9FFDD077;
  v10 = ((2 * (v8 ^ 0xBB916BB8)) ^ 0x48D9779E) & (v8 ^ 0xBB916BB8) ^ (2 * (v8 ^ 0xBB916BB8)) & 0x246CBBCE;
  v11 = v10 ^ 0x24248841;
  v12 = (v10 ^ 0x480B8D) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0x91B2EF3C) & v11 ^ (4 * v11) & 0x246CBBCC;
  v14 = (v13 ^ 0x20AB03) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x244C10C3)) ^ 0x46CBBCF0) & (v13 ^ 0x244C10C3) ^ (16 * (v13 ^ 0x244C10C3)) & 0x246CBBC0;
  v16 = v14 ^ 0x246CBBCF ^ (v15 ^ 0x448B800) & (v14 << 8);
  v17 = v8 ^ (2
            * ((v16 << 16) & 0x246C0000 ^ v16 ^ ((v16 << 16) ^ 0x3BCF0000) & (((v15 ^ 0x2024030F) << 8) & 0x246C0000 ^ 0x440000 ^ (((v15 ^ 0x2024030F) << 8) ^ 0x6CBB0000) & (v15 ^ 0x2024030F))));
  v18 = v5 + 448816048;
  v19 = (2 * (v18 & 0x5B1)) & 0xF9FF ^ v18 & 0x5B1 ^ ((2 * (v18 & 0x5B1)) | 0xC000) & (v18 ^ 0x4B389C53);
  v20 = (2 * (v18 ^ 0x4B389C53)) & 0x9E2 ^ 0x4822 ^ ((2 * (v18 ^ 0x4B389C53)) ^ 0x5008D3C4) & (v18 ^ 0x4B389C53);
  v21 = (4 * v19) & 0x2E0769E0 ^ v19 ^ ((4 * v19) | 0x8000) & v20;
  v22 = (4 * v20) & 0xAE0769E0 ^ 0x6024862 ^ ((4 * v20) ^ 0x1018A788) & v20;
  v23 = (16 * v21) & 0x2E0769E0 ^ v21 ^ ((16 * v21) ^ 0x20000) & v22;
  v24 = (16 * v22) & 0xAE0769E0 ^ 0xE0161C2 ^ ((16 * v22) ^ 0xE0769E20) & v22;
  v25 = v23 ^ (v23 << 8) & 0x2E076900 ^ ((v23 << 8) ^ 0x2200000) & v24 ^ 0xAC0549E2;
  LODWORD(STACK[0x15C0]) = v17 ^ 0x1A91338E;
  STACK[0x14B8] = 2368574548;
  v26 = *(unsigned __int8 *)(STACK[0x18B8]
                           + (v18 ^ (2
                                   * ((v25 << 16) & 0x2E070000 ^ v25 ^ ((v25 << 16) ^ 0x69E20000) & ((v24 << 8) & 0x2E070000 ^ 0x28060000 ^ ((v24 << 8) ^ 0x7690000) & v24))) ^ 0xE9352675));
  v27 = LODWORD(STACK[0x13F8]) != -1926392748;
  LODWORD(STACK[0xCE8]) = (v26 ^ v5 ^ 0xFFFFFFA5) - 107;
  v28 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v1 ^ (125 * v27))) - 4);
  LODWORD(STACK[0xDCC]) = 128;
  return v28();
}

uint64_t sub_100228CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  int v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  _BOOL4 v21;

  LODWORD(STACK[0x1500]) = 0;
  LODWORD(STACK[0x15D0]) = 0;
  v6 = STACK[0x1658];
  v7 = STACK[0x16A8];
  v8 = *((unsigned __int8 *)*(&off_1015B46D0 + LODWORD(STACK[0x1658]) - 14651) + STACK[0x16A8] - 12);
  v9 = (uint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x1658]) ^ 0x4837));
  STACK[0x16F0] = STACK[0x16A8] + 3;
  v10 = LODWORD(STACK[0x1508]) ^ (-51 * (_DWORD)v7) ^ v8 ^ *(unsigned __int8 *)(v9 + v7 + 3 - 4) ^ *((unsigned __int8 *)*(&off_1015B46D0 + (v6 ^ 0x4428)) + v7 - 8);
  v11 = STACK[0x1780];
  LODWORD(v7) = (LODWORD(STACK[0x1780]) - 14029) | 0x6099;
  LODWORD(STACK[0x1778]) = v7;
  v12 = STACK[0x18B0] + (((_DWORD)v7 - 1749269936) ^ v5);
  v13 = 1772489163 * ((1772489163 * (_DWORD)v12) ^ ((1772489163 * v12) >> 16));
  LODWORD(STACK[0xDCC]) = v13 ^ *(unsigned __int8 *)(v12 - 0x3032385379A144E6) ^ *(unsigned __int8 *)(STACK[0x18A8] + (v13 >> 24)) ^ *(unsigned __int8 *)(a3 + (v13 >> 24)) ^ *(unsigned __int8 *)((v13 >> 24) + a4 + 7) ^ (93 * (v13 >> 24));
  STACK[0x14B8] = 2368574547;
  LODWORD(v9) = (((v4 ^ 0xE0914186) - 1189835240) ^ ((v4 ^ 0x80C8D6CF) - 649258657) ^ ((v4 ^ 0x4B0E3340) + 311164114))
              - 10921266;
  v14 = (v9 ^ 0x9D63D38) & (2 * (v9 & 0x8DD439B2)) ^ v9 & 0x8DD439B2;
  v15 = ((2 * (v9 ^ 0x13DE7C7C)) ^ 0x3C148B9C) & (v9 ^ 0x13DE7C7C) ^ (2 * (v9 ^ 0x13DE7C7C)) & 0x9E0A45CE;
  LODWORD(v13) = v15 ^ 0x820A4442;
  v16 = (v15 ^ 0x1C000188) & (4 * v14) ^ v14;
  v17 = ((4 * v13) ^ 0x78291738) & v13 ^ (4 * v13) & 0x9E0A45CC;
  v18 = (v17 ^ 0x18080506) & (16 * v16) ^ v16;
  v19 = ((16 * (v17 ^ 0x860240C6)) ^ 0xE0A45CE0) & (v17 ^ 0x860240C6) ^ (16 * (v17 ^ 0x860240C6)) & 0x9E0A45C0;
  v20 = v18 ^ 0x9E0A45CE ^ (v19 ^ 0x8000440E) & (v18 << 8);
  v21 = LODWORD(STACK[0x13F8]) == -1926392749;
  LODWORD(STACK[0x15C0]) = v9 ^ (2
                               * ((v20 << 16) & 0x1E0A0000 ^ v20 ^ ((v20 << 16) ^ 0x45CE0000) & (((v19 ^ 0x1E0A010E) << 8) & 0x9E0A0000 ^ 0x140A0000 ^ (((v19 ^ 0x1E0A010E) << 8) ^ 0xA450000) & (v19 ^ 0x1E0A010E)))) ^ 0x34F92649;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (v11 | (2 * v21))) - 12))(v10);
}

uint64_t sub_100229004(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  int v20;
  unint64_t v21;

  v13 = LODWORD(STACK[0x1408]) ^ STACK[0x1400];
  v14 = STACK[0x1798];
  v15 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 8 * (v11 ^ 0x32E7)) + STACK[0x1798] - 8);
  v16 = *(_QWORD *)(v9 + 8 * (v11 - 13109)) + STACK[0x16E0];
  v17 = *(_QWORD *)(v9 + 8 * (v11 - 13741));
  STACK[0x1780] = STACK[0x1798] + 5;
  LODWORD(STACK[0xDAC]) = STACK[0x1488] ^ LODWORD(STACK[0x1540]) ^ v15 ^ *(unsigned __int8 *)(v17 + v14 + 5 - 4) ^ *(unsigned __int8 *)(v16 - 4) ^ (-95 * v14);
  LODWORD(STACK[0xDCC]) = a3 ^ *(unsigned __int8 *)(STACK[0x17B0] + v8) ^ *(unsigned __int8 *)(a8 + v8) ^ *(unsigned __int8 *)(v8 + v10 + 3) ^ (85 * v8);
  v18 = STACK[0x1778];
  v19 = STACK[0x18B0] + (v12 ^ ((LODWORD(STACK[0x1778]) - 24705) | 0x18A1) ^ 0xB9D4AF97);
  v20 = *(unsigned __int8 *)(v19 - 0x3032385379A144E6);
  v21 = 1772489163 * ((1772489163 * (_DWORD)v19) ^ ((1772489163 * v19) >> 16));
  LODWORD(STACK[0x18A8]) = v21 ^ v20;
  STACK[0x14B8] = 2368574546;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x18C0]
                                                                                 + 8
                                                                                 * (v18 ^ (61
                                                                                         * (LODWORD(STACK[0x13F8]) == -1926392750))))
                                                                     - 4))(a1, v13, v21 >> (v18 + 127));
}

uint64_t sub_1002292EC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t (*v9)(void);

  LODWORD(STACK[0x15D0]) = 0;
  LODWORD(STACK[0x15F8]) = a2 ^ (-105 * STACK[0x1538]) ^ *(unsigned __int8 *)(STACK[0xC80] + STACK[0x1538]) ^ *(unsigned __int8 *)(STACK[0xC90] + STACK[0x1410]) ^ *(unsigned __int8 *)(STACK[0x1538] + STACK[0xC70] + 4);
  LODWORD(STACK[0xD7C]) = LODWORD(STACK[0x1328]) ^ (39 * STACK[0x17A8]) ^ *(unsigned __int8 *)(STACK[0xC78]
                                                                                             + STACK[0x17A8]) ^ *(unsigned __int8 *)(STACK[0xC68] + STACK[0x17A8]) ^ *(unsigned __int8 *)(STACK[0x17A8] + STACK[0xC88] + 7);
  LODWORD(STACK[0x15C0]) = v8 ^ 0xF11F65E7;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * a8) - 4);
  LODWORD(STACK[0x1500]) = 128;
  return v9();
}

uint64_t sub_1002293D8()
{
  int v0;
  int v1;

  LODWORD(STACK[0x15C0]) = v1 ^ 0x688444E5;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v0 - 15822)))();
}

uint64_t sub_100229410()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t (*v24)(void);

  STACK[0x1258] = LODWORD(STACK[0x1428]) ^ (127 * STACK[0x1828]) ^ *(unsigned __int8 *)(STACK[0x1650] + STACK[0x1828]) ^ *(unsigned __int8 *)(STACK[0x1828] + STACK[0x1638] + 5) ^ *(unsigned __int8 *)(STACK[0x1600] + STACK[0x1828]);
  LODWORD(STACK[0x1840]) = LODWORD(STACK[0x1418]) ^ (51 * STACK[0x1590]) ^ *(unsigned __int8 *)(STACK[0x15E8]
                                                                                              + STACK[0x1590]) ^ *(unsigned __int8 *)(STACK[0x15F0] + STACK[0x1590]) ^ *(unsigned __int8 *)(STACK[0x15A0] + STACK[0x1420]);
  v2 = STACK[0x13A8];
  v3 = STACK[0x1698];
  v4 = *((unsigned __int8 *)*(&off_1015B46D0 + (LODWORD(STACK[0x13A8]) ^ 0x3CF8)) + STACK[0x1698]);
  v5 = (uint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x13A8]) - 13235);
  STACK[0x1828] = STACK[0x1698] + 2;
  LODWORD(STACK[0xD4C]) = LODWORD(STACK[0x13A0]) ^ (101 * v3) ^ v4 ^ *(unsigned __int8 *)(v5 + v3 + 2) ^ *((unsigned __int8 *)*(&off_1015B46D0 + v2 - 12073) + STACK[0x1318]);
  v6 = STACK[0x1778];
  v7 = LODWORD(STACK[0x1778]) - 10698;
  STACK[0x17B0] = (unint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x1778]) - 24052) - 4;
  STACK[0x16E0] = (unint64_t)*(&off_1015B46D0 + (v6 ^ 0x62E4)) - 8;
  STACK[0x1778] = (unint64_t)*(&off_1015B46D0 + v6 - 25039) - 12;
  v8 = STACK[0x18B0] + (v1 ^ 0x7C32F180u);
  v9 = *(unsigned __int8 *)(v8 - 0x3032385379A144E6);
  v10 = 1772489163 * ((1772489163 * (_DWORD)v8) ^ ((1772489163 * v8) >> 16));
  v11 = v10 >> (((v6 + 120) | 0xA8u) + 95);
  v12 = *(unsigned __int8 *)(STACK[0x4F8] + v11);
  v13 = STACK[0x4F0];
  STACK[0x1650] = v11 + 1;
  v14 = *(unsigned __int8 *)(v13 + v11 + 1);
  v15 = *(unsigned __int8 *)(v11 + STACK[0x4E8] + 2);
  LODWORD(v10) = v9 ^ v10;
  LODWORD(STACK[0x1638]) = v10;
  LODWORD(STACK[0x1500]) = v10 ^ v12 ^ v14 ^ v15 ^ (v11 * (((v6 + 1191704932) & 0xB8F7B3F6) - 87));
  LODWORD(v10) = (((v0 ^ 0x57DE6541) + 240888529) ^ ((v0 ^ 0x5EDD1F63) + 123261171) ^ ((v0 ^ 0x2254DE2B) + 2077299131))
               + 48563685;
  v16 = (v10 ^ 0x20284E99) & (2 * (v10 & 0x8A488E9D)) ^ v10 & 0x8A488E9D;
  v17 = ((2 * (v10 ^ 0x24B84AB1)) ^ 0x5DE18858) & (v10 ^ 0x24B84AB1) ^ (2 * (v10 ^ 0x24B84AB1)) & 0xAEF0C42C;
  v18 = v17 ^ 0xA2104424;
  v19 = (v17 ^ 0x8600008) & (4 * v16) ^ v16;
  v20 = ((4 * v18) ^ 0xBBC310B0) & v18 ^ (4 * v18) & 0xAEF0C42C;
  v21 = (v20 ^ 0xAAC00020) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x430C40C)) ^ 0xEF0C42C0) & (v20 ^ 0x430C40C) ^ (16 * (v20 ^ 0x430C40C)) & 0xAEF0C420;
  v23 = v21 ^ 0xAEF0C42C ^ (v22 ^ 0xAE004000) & (v21 << 8);
  LODWORD(STACK[0x15C0]) = v10 ^ (2
                                * ((v23 << 16) & 0x2EF00000 ^ v23 ^ ((v23 << 16) ^ 0x442C0000) & (((v22 ^ 0xF0842C) << 8) & 0xAEF00000 ^ 0xE300000 ^ (((v22 ^ 0xF0842C) << 8) ^ 0x70C40000) & (v22 ^ 0xF0842C)))) ^ 0x52C492A2;
  STACK[0x14B8] = 2368574545;
  v24 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v7 ^ (28631 * (LODWORD(STACK[0x13F8]) != -1926392751))))
                          - 12);
  LODWORD(STACK[0x15D0]) = 128;
  return v24();
}

uint64_t sub_100229828(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  int v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  _BOOL4 v26;

  LODWORD(STACK[0x1860]) = LODWORD(STACK[0x139C]) ^ (63 * STACK[0x1530]) ^ *(unsigned __int8 *)(STACK[0x1558]
                                                                                              + STACK[0x1530]) ^ *(unsigned __int8 *)(STACK[0x1530] + STACK[0x14F8] + 3) ^ *(unsigned __int8 *)(STACK[0x14F0] + STACK[0x1530]);
  v5 = a2 ^ (125 * STACK[0x1538]) ^ *(unsigned __int8 *)(STACK[0x1450] + STACK[0x1538]) ^ *(unsigned __int8 *)(STACK[0x1438] + STACK[0x1538]);
  v6 = STACK[0x17A8];
  v7 = *(unsigned __int8 *)(STACK[0x1378] + STACK[0x17A8]);
  v8 = *(unsigned __int8 *)(STACK[0x1348] + STACK[0x17A8]);
  LODWORD(STACK[0x15F8]) = v5 ^ *(unsigned __int8 *)(STACK[0x1440] + STACK[0x13E8]);
  LODWORD(STACK[0xD7C]) = LODWORD(STACK[0x1328]) ^ (89 * v6) ^ v7 ^ v8 ^ *(unsigned __int8 *)(STACK[0x1370]
                                                                                            + STACK[0x1368]);
  v9 = STACK[0x18B0] + (v4 ^ 0xDFE906C5);
  v10 = *(unsigned __int8 *)(v9 - 0x3032385379A144E6);
  v11 = 1772489163 * ((1772489163 * (_DWORD)v9) ^ ((1772489163 * v9) >> 16));
  v12 = v11 >> (((v3 - 41) | 0x64u) + 36);
  v13 = *(unsigned __int8 *)(STACK[0xA70] + v12);
  v14 = *(unsigned __int8 *)(v12 + STACK[0xA68] + 2);
  v15 = v12 + (((v3 - 7093) | 0x2040) ^ 0x2245u);
  v16 = STACK[0xA60];
  STACK[0x17A8] = v15;
  v17 = *(unsigned __int8 *)(v16 + v15);
  LODWORD(STACK[0x1668]) = v10 ^ v11;
  LODWORD(STACK[0x15D0]) = v10 ^ v11 ^ v13 ^ v14 ^ v17 ^ (-103 * v12);
  LODWORD(v11) = (((v2 ^ 0x73DE2599) + 710666761) ^ ((v2 ^ 0xA2234A07) - 72972905) ^ ((v2 ^ 0xFAAACB97) - 1557199865))
               - 495433967;
  v18 = (v11 ^ 0xA2214968) & (2 * (v11 & 0xAAB54D72)) ^ v11 & 0xAAB54D72;
  v19 = ((2 * (v11 ^ 0xB321D908)) ^ 0x332928F4) & (v11 ^ 0xB321D908) ^ (2 * (v11 ^ 0xB321D908)) & 0x1994947A;
  v20 = (v19 ^ 0x11008052) & (4 * v18) ^ v18;
  v21 = ((4 * (v19 ^ 0x894940A)) ^ 0x665251E8) & (v19 ^ 0x894940A) ^ (4 * (v19 ^ 0x894940A)) & 0x19949478;
  v22 = (v21 ^ 0x101072) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x19848412)) ^ 0x994947A0) & (v21 ^ 0x19848412) ^ (16 * (v21 ^ 0x19848412)) & 0x19949470;
  v24 = v22 ^ 0x1994947A ^ (v23 ^ 0x1900045A) & (v22 << 8);
  STACK[0x14B8] = 2368574544;
  v25 = (v24 << 16) & 0x19940000 ^ v24 ^ ((v24 << 16) ^ 0x147A0000) & (((v23 ^ 0x94905A) << 8) & 0x19940000 ^ 0x9000000 ^ (((v23 ^ 0x94905A) << 8) ^ 0x14940000) & (v23 ^ 0x94905A));
  v26 = LODWORD(STACK[0x13F8]) != -1926392752;
  LODWORD(STACK[0x15C0]) = v11 ^ (2 * v25) ^ 0x3491F1E1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v3 ^ (11803 * v26))) - 4))();
}

uint64_t sub_100229BDC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x1848];
  LODWORD(STACK[0x1644]) = LODWORD(STACK[0x1678]) ^ (65 * v2) ^ *(unsigned __int8 *)(*(_QWORD *)(v1
                                                                                               + 8
                                                                                               * (LODWORD(STACK[0x1850]) ^ 0x5638))
                                                                                   + v2
                                                                                   - 8) ^ *(unsigned __int8 *)(*(_QWORD *)(v1 + 8 * (LODWORD(STACK[0x1850]) ^ 0x54A0)) + v2 - 12) ^ *(unsigned __int8 *)(*(_QWORD *)(v1 + 8 * (LODWORD(STACK[0x1850]) ^ 0x57F7)) + v2 + 2);
  return (*(uint64_t (**)(void))(STACK[0x18C0]
                              + 8
                              * (((2 * (LODWORD(STACK[0x13F8]) != v0 - 1926401509)) | (16
                                                                                     * (LODWORD(STACK[0x13F8]) != v0 - 1926401509))) ^ v0)))();
}

uint64_t sub_100229E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, char a12, int a13, int a14)
{
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  _BOOL4 v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unint64_t v46;
  int v47;
  unint64_t v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  _BOOL4 v59;
  int v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  unint64_t v65;
  int v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  int v70;
  unint64_t v71;

  v20 = *(unsigned __int8 *)(STACK[0x1720] + STACK[0x16D0]);
  v21 = LODWORD(STACK[0x1390]) ^ LODWORD(STACK[0x16A4]);
  v22 = *(unsigned __int8 *)(STACK[0x14D8] + STACK[0x1320]);
  LODWORD(STACK[0x1488]) = LODWORD(STACK[0x1708]) ^ (-5 * STACK[0x17A0]) ^ *(unsigned __int8 *)(STACK[0x1820]
                                                                                              + STACK[0x17A0]) ^ *(unsigned __int8 *)(STACK[0x17A0] + STACK[0x17F0] + 2) ^ *(unsigned __int8 *)(STACK[0x1808] + STACK[0x17A0]);
  v23 = v21 ^ *(unsigned __int8 *)(STACK[0x1758] + STACK[0x16D8]) ^ *(unsigned __int8 *)(STACK[0x1748] + STACK[0x16D8]);
  v24 = STACK[0x1658];
  v25 = (uint64_t)*(&off_1015B46D0 + (LODWORD(STACK[0x1658]) ^ 0x4780));
  v26 = (uint64_t)*(&off_1015B46D0 + LODWORD(STACK[0x1658]) - 15462);
  LODWORD(STACK[0x1204]) = v23 ^ v20;
  v27 = *((unsigned __int8 *)*(&off_1015B46D0 + v24 - 16187) + STACK[0x16F0]);
  v28 = LODWORD(STACK[0x1508]) ^ (-93 * STACK[0x16A8]) ^ *(unsigned __int8 *)(v25 + STACK[0x16A8]) ^ *(unsigned __int8 *)(v26 + STACK[0x16F0] - 12);
  LODWORD(v25) = *(unsigned __int8 *)(STACK[0x14C8] + STACK[0x1470]);
  v29 = STACK[0x1760];
  LODWORD(v26) = *(unsigned __int8 *)(STACK[0x14E8] + STACK[0x1760]);
  LODWORD(STACK[0x1470]) = v28 ^ v27;
  v30 = LODWORD(STACK[0x16F8]) ^ (55 * (_DWORD)v29) ^ v26 ^ v22 ^ v25;
  LODWORD(v26) = *(unsigned __int8 *)(a7 + a3);
  v31 = LODWORD(STACK[0x1380]) ^ (-121 * STACK[0x1388]) ^ *(unsigned __int8 *)(STACK[0x13D8] + STACK[0x1388]) ^ *(unsigned __int8 *)(STACK[0x1388] + STACK[0x13B8] + 4) ^ *(unsigned __int8 *)(STACK[0x1388] + STACK[0x13D0] + 1);
  v32 = *(unsigned __int8 *)(a6 + a3 + 2);
  v33 = *(unsigned __int8 *)(a5 + a3 + 2) ^ (55 * a3);
  v34 = *(unsigned __int8 *)(STACK[0x17B0] + a8);
  LODWORD(STACK[0xDEC]) = LODWORD(STACK[0x18A8]) ^ v26 ^ v32 ^ v33;
  LODWORD(STACK[0x1500]) = LODWORD(STACK[0x1638]) ^ (-111 * a8) ^ v34 ^ *(unsigned __int8 *)(STACK[0x16E0] + a8) ^ *(unsigned __int8 *)(STACK[0x1778] + STACK[0x1650]);
  LODWORD(STACK[0x15D0]) = LODWORD(STACK[0x1668]) ^ (-123 * a4) ^ *(unsigned __int8 *)(STACK[0x1620] + a4) ^ *(unsigned __int8 *)(STACK[0x1628] + a4) ^ *(unsigned __int8 *)(STACK[0x1630] + STACK[0x17A8]);
  LODWORD(STACK[0xD34]) = *((unsigned __int8 *)*(&off_1015B46D0 + (v14 ^ 0x20FF)) + v19) ^ v17 ^ *((unsigned __int8 *)*(&off_1015B46D0 + v14 - 6247)
                                                                                                 + v19
                                                                                                 - 4) ^ *((unsigned __int8 *)*(&off_1015B46D0 + (v14 ^ 0x253F)) + v19 - 4) ^ (-107 * v19) ^ v18;
  v35 = LODWORD(STACK[0x13F8]) == -1926392738;
  v36 = (((v15 ^ 0x21DCEAD1) + 2019108161) ^ ((v15 ^ 0x6C8DAB25) + 889742517) ^ ((v15 ^ 0x6606E5FD) + 1065560685))
      - 1314882004;
  v37 = ((2 * (v36 & 0xDB8D1659)) & 0x2822 | v36 & 0xDB8D1659) ^ (2 * (v36 & 0xDB8D1659)) & (v36 ^ 0x9B2CEE72);
  v38 = ((2 * (v36 ^ 0x9B2CEE72)) ^ 0x8143F056) & (v36 ^ 0x9B2CEE72) ^ (2 * (v36 ^ 0x9B2CEE72)) & 0x40A1F82A;
  LODWORD(v25) = v38 ^ 0x40A00829;
  v39 = (v38 ^ 0x80F001) & (4 * v37) ^ v37;
  v40 = ((4 * v25) ^ 0x287E0AC) & v25 ^ (4 * v25) & 0x40A1F828;
  v41 = (v40 ^ 0x81E020) & (16 * v39) ^ v39;
  v42 = ((16 * (v40 ^ 0x40201803)) ^ 0xA1F82B0) & (v40 ^ 0x40201803) ^ (16 * (v40 ^ 0x40201803)) & 0x40A1F820;
  v43 = v41 ^ 0x40A1F82B ^ (v42 ^ 0x1800B) & (v41 << 8);
  v44 = v36 ^ (2
             * ((v43 << 16) & 0x40A10000 ^ v43 ^ ((v43 << 16) ^ 0x782B0000) & (((v42 ^ 0x40A0780B) << 8) & 0x40A10000 ^ 0x40010000 ^ (((v42 ^ 0x40A0780B) << 8) ^ 0x21F80000) & (v42 ^ 0x40A0780B))));
  LODWORD(STACK[0x15C0]) = v44 ^ 0x57A17268;
  v45 = 1793256557 * (v35 ^ 0x73CA9965);
  if (v45 == 1094050042)
  {
    v61 = STACK[0xD20];
    v62 = LODWORD(STACK[0x1470]);
    LODWORD(STACK[0x15E0]) = v31;
    v69 = (v61 - 11870);
    v70 = v61 - 6246;
    if (v35)
      v71 = 4294967168;
    else
      v71 = 0;
    STACK[0xE10] = v71;
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v70) - (v69 ^ 0x2584)))(v62);
  }
  else if (v45 == 1339452417)
  {
    v46 = STACK[0x18B0] + (a13 ^ v44);
    v47 = *(unsigned __int8 *)(v46 - 0x3032385379A144E6);
    v48 = 1772489163 * (((1772489163 * v46) >> a12) ^ (1772489163 * (_DWORD)v46));
    STACK[0xE10] = *(unsigned __int8 *)(STACK[0xB90] + (v48 >> 24)) ^ v47 ^ *(unsigned __int8 *)((v48 >> 24)
                                                                                               + STACK[0xB88]
                                                                                               + 5) ^ *(unsigned __int8 *)(STACK[0xB80] + (v48 >> 24)) ^ v48 ^ (-101 * (v48 >> 24));
    LODWORD(v48) = (((v15 ^ 0x271DAE56) + 2123915720) ^ ((v15 ^ 0x1A1474B) + 1478789339) ^ ((v15 ^ 0xDEB4D14)
                                                                                          + 1416528518))
                 - 456631538;
    v49 = (v48 ^ 0x20753C78) & (2 * (v48 & 0xA8653978)) ^ v48 & 0xA8653978;
    v50 = ((2 * (v48 ^ 0x70FF3C98)) ^ 0xB1340BC0) & (v48 ^ 0x70FF3C98) ^ (2 * (v48 ^ 0x70FF3C98)) & 0xD89A05E0;
    v51 = v50 ^ 0x488A0420;
    v52 = (v50 ^ 0x801001C0) & (4 * v49) ^ v49;
    v53 = ((4 * v51) ^ 0x62681780) & v51 ^ (4 * v51) & 0xD89A05E0;
    v54 = v52 ^ 0xD89A05E0 ^ (v53 ^ 0x40080580) & (16 * v52);
    v55 = (16 * (v53 ^ 0x98920060)) & 0xD89A05E0 ^ 0x501A01E0 ^ ((16 * (v53 ^ 0x98920060)) ^ 0x89A05E00) & (v53 ^ 0x98920060);
    v56 = (v54 << 8) & 0xD89A0500 ^ v54 ^ ((v54 << 8) ^ 0x9A05E000) & v55;
    v57 = ((v56 << 16) ^ 0x5E00000) & ((v55 << 8) & 0xD89A0000 ^ 0x409A0000 ^ ((v55 << 8) ^ 0x9A050000) & v55);
    v58 = (v56 << 16) & 0x589A0000 ^ v56;
    v59 = LODWORD(STACK[0x13F8]) == -1926392739;
    LODWORD(STACK[0x15C0]) = v48 ^ (2 * (v58 ^ v57)) ^ 0xA57CA6DF;
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (a14 ^ (27 * v59))) - 4))(a1, v30);
  }
  else
  {
    v63 = STACK[0x1798];
    v64 = *(unsigned __int8 *)(STACK[0x1700] + STACK[0x1798]);
    v65 = STACK[0x1780];
    v66 = *(unsigned __int8 *)(STACK[0x1490] + STACK[0x1780]);
    LODWORD(STACK[0xD4C]) = LODWORD(STACK[0x13A0]) ^ (-97 * STACK[0x1698]) ^ *(unsigned __int8 *)(STACK[0x1460]
                                                                                                + STACK[0x1698]) ^ *(unsigned __int8 *)(STACK[0x1458] + STACK[0x14B0]) ^ *(unsigned __int8 *)(STACK[0x13F0] + STACK[0x1828]);
    LODWORD(STACK[0xDAC]) = v16 ^ v64 ^ v66 ^ *(unsigned __int8 *)(STACK[0x1340] + v65) ^ (-109 * v63);
    v67 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * a10) - 4);
    v68 = LODWORD(STACK[0x1470]);
    LODWORD(STACK[0x15E0]) = v31;
    return v67(v68);
  }
}

uint64_t sub_10022BD50@<X0>(uint64_t a1@<X3>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD);

  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * a2) - 4);
  LODWORD(STACK[0x1204]) = v3;
  LODWORD(STACK[0xDEC]) = v5;
  return v6(v4, a3, 0, a1, (a2 + 11870));
}

uint64_t sub_10022BDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  LODWORD(STACK[0x14F8]) = v5;
  LODWORD(STACK[0x1670]) = 0;
  LODWORD(STACK[0x1680]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0]
                                                                                         + 8 * (a5 - 8578))
                                                                             - 12))(a1, a2, a3, 6488064, LODWORD(STACK[0xDA4]));
}

uint64_t sub_10022BE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  int v6;
  int v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x18C0]
                                                                                        + 8
                                                                                        * ((((((v6 ^ 0xB10751F4)
                                                                                             + 1324920332) ^ ((v6 ^ 0xDF3B2BC1) + 549770303) ^ ((v6 ^ 0xE311EE52) + (a6 ^ 0x1CEE2D5E)))
                                                                                           - 1926392729 < 0x38)
                                                                                          * v7) ^ a6)))(a1, a2, a3, a4, a5, LODWORD(STACK[0x1898]));
}

uint64_t sub_10022BEAC@<X0>(int a1@<W8>)
{
  char v1;
  int v2;
  unsigned int v3;

  v3 = STACK[0x1890];
  LODWORD(STACK[0x1670]) = LODWORD(STACK[0x1890]) ^ 0x67;
  LODWORD(STACK[0x1680]) = (v3 >> (v1 - 7)) ^ 0xFFFFFF94;
  LODWORD(STACK[0x1890]) = HIBYTE(v3) ^ (v2 + 131);
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * a1))();
}

uint64_t sub_10022BF04(int a1, unsigned __int8 a2, unsigned __int8 a3, int a4, int a5, int a6, int a7, int a8)
{
  unsigned __int8 v8;
  int v9;
  char v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned __int8 v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  unint64_t v32;
  int v33;
  unint64_t v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint64_t (*v58)(void);

  LODWORD(STACK[0x1460]) = v17;
  LODWORD(STACK[0x1450]) = v13;
  LODWORD(STACK[0x13D8]) = v11;
  LODWORD(STACK[0x1470]) = v21;
  LODWORD(STACK[0x1488]) = a1;
  LODWORD(STACK[0x1868]) = v20;
  LODWORD(STACK[0x13F8]) = v12;
  LODWORD(STACK[0x1254]) = a7;
  LODWORD(STACK[0xD34]) = v16;
  v22 = -3 * v10;
  v23 = (((a2 >> 3) | (32 * a2)) ^ 0x99) + 797828489;
  v24 = (v9 + 9755) | 0x8D4;
  LODWORD(STACK[0x18A8]) = v24;
  v25 = (2 * (v23 & 0x3C7)) & 0x30E ^ v23 & 0x3C7 ^ (v24 ^ 0xFE | (2 * (v23 & 0x3C7))) & (v23 ^ 0x6A7080B8);
  v26 = (2 * (v23 ^ 0x6A7080B8)) & 0x37E ^ 0x2101 ^ ((2 * (v23 ^ 0x6A7080B8)) ^ 0x440546FE) & (v23 ^ 0x6A7080B8);
  v27 = (4 * v25) & 0x3A02AB7C ^ v25 ^ (4 * v25) & v26;
  v28 = (4 * v26) & 0xBA02AB7C ^ 0x12000203 ^ ((4 * v26) ^ 0x400825FC) & v26;
  v29 = (16 * v27) & 0x3A02AB70 ^ v27 ^ ((16 * v27) ^ 0xA0000) & v28;
  v30 = (16 * v28) & 0xBA02AB70 ^ 0x1A00080F ^ ((16 * v28) ^ 0xA02AB7F0) & v28;
  v31 = v29 ^ (a8 + 2943) ^ (v29 << 8) & 0x3A02AB00 ^ ((v29 << 8) ^ 0x2A00000) & v30;
  v32 = STACK[0x18B8];
  v33 = *(unsigned __int8 *)(STACK[0x18B8]
                           + (v23 ^ v14 ^ (2
                                         * ((v31 << 16) & 0x3A020000 ^ v31 ^ ((v31 << 16) ^ 0x2B7F0000) & ((v30 << 8) & 0x3A020000 ^ ((v30 << 8) ^ 0x2AB0000) & v30 ^ 0x38000000)))));
  v34 = STACK[0x18B8] + (LODWORD(STACK[0xCE8]) ^ 0x12u);
  v35 = (v8 ^ 0x12) + 1158450744;
  v36 = ((2 * (v35 & 0x2CA)) & 0xFC0F | v35 & 0x2CA) ^ ((2 * (v35 & 0x2CA)) | 0x80000) & (v35 ^ 0x981796EC);
  v37 = (2 * (v35 ^ 0x981796EC)) & 0x26 ^ 0x28422 ^ ((2 * (v35 ^ 0x981796EC)) ^ 0x4503084C) & (v35 ^ 0x981796EC);
  v38 = (4 * v36) & 0x22E38420 ^ v36 ^ ((4 * v36) | 0x100000) & v37;
  v39 = (4 * v37) & 0x22E38424 ^ 0x20618426 ^ ((4 * v37) ^ 0x890E1098) & v37;
  v40 = (16 * v38) & 0x22E38420 ^ v38 ^ ((16 * v38) ^ 0x400000) & v39;
  v41 = (16 * v39) & 0x22E38420 ^ 0xC38406 ^ ((16 * v39) ^ 0x2E384260) & v39;
  v42 = v40 ^ (v40 << 8) & 0x22E38400 ^ ((v40 << 8) ^ 0x44000000) & v41 ^ 0x22A78426;
  LODWORD(STACK[0x1400]) = 63
                         * (*(unsigned __int8 *)(STACK[0x18B8]
                                               + (v35 ^ (2
                                                       * ((v42 << 16) & 0x22E30000 ^ v42 ^ ((v42 << 16) ^ 0x4260000) & ((v41 << 8) & 0x22E30000 ^ a4 ^ ((v41 << 8) ^ 0xE3840000) & v41))) ^ 0xFF771A86)) ^ 9);
  v43 = (v22 ^ 0x1B) + 1566567975;
  v44 = (2 * (v43 & 0x3F)) & 0x1A ^ v43 & 0x3F ^ ((2 * (v43 & 0x3F)) | 0x7800) & (v43 ^ 0xCE792225);
  v45 = (2 * (v43 ^ 0xCE792225)) & 0x21A ^ 0x10A0A ^ ((2 * (v43 ^ 0xCE792225)) ^ 0x91220C34) & (v43 ^ 0xCE792225);
  v46 = (4 * v44) & 0x6CD98E18 ^ v44 ^ ((4 * v44) ^ 0x69000) & v45;
  v47 = (4 * v45) & 0x6CD98E18 ^ 0x4C998612 ^ ((4 * v45) ^ 0x93263868) & v45;
  v48 = (16 * v46) & 0x6CD98E10 ^ v46 ^ ((16 * v46) ^ 0x124000) & v47;
  v49 = (16 * v47) & 0x6CD98E10 ^ 0x20410E1A ^ ((16 * v47) ^ 0xCD98E1A0) & v47;
  v50 = v48 ^ (v48 << 8) & 0x6CD98E00 ^ ((v48 << 8) ^ 0x11240000) & v49 ^ 0x6CC8AA1A;
  v51 = *(unsigned __int8 *)(v32
                           + (v43 ^ (2
                                   * ((v50 << 16) & 0x6CD90000 ^ v50 ^ ((v50 << 16) ^ 0xE1A0000) & ((v49 << 8) & 0x6CD90000 ^ 0x24510000 ^ ((v49 << 8) ^ 0x598E0000) & v49))) ^ 0x6323B00B));
  LODWORD(STACK[0x1428]) = 63 * (*(unsigned __int8 *)(v34 + 41218) ^ 9);
  v52 = (((a3 >> 3) | (32 * a3)) ^ 0x9D) + 281016693;
  v53 = (v52 & 0x10C | 0x4080000 | (2 * (v52 & 0x10C)) & 0xFFF7) ^ ((2 * (v52 & 0x10C)) | 0x1000) & (v52 ^ 0x391E6318);
  LODWORD(v34) = (2 * (v52 ^ 0x391E6318)) & 0x614 ^ 0x214 ^ ((2 * (v52 ^ 0x391E6318)) ^ 0x28A09828) & (v52 ^ 0x391E6318);
  v54 = (4 * v53) & 0x10004C10 ^ v53 ^ ((4 * v53) ^ 0x10202000) & v34;
  LODWORD(v34) = (4 * v34) & 0xD65E6E14 ^ 0x86064604 ^ ((4 * v34) ^ 0x1979B850) & v34;
  v55 = (16 * v54) & 0xD65E6E10 ^ v54 ^ ((16 * v54) ^ 0x40828000) & v34;
  LODWORD(v34) = (16 * v34) & 0xD65E6E10 ^ 0x92180E14 ^ ((16 * v34) ^ 0x65E6E140) & v34;
  v56 = v55 ^ 0x805C4614 ^ (v55 << 8) & 0xD65E6E00 ^ ((v55 << 8) ^ 0xA280000) & v34;
  v57 = *(unsigned __int8 *)(v32
                           + (v52 ^ (2
                                   * ((v56 << 16) & 0x565E0000 ^ v56 ^ ((v56 << 16) ^ 0x6E140000) & (((_DWORD)v34 << 8) & 0x565E0000 ^ (((_DWORD)v34 << 8) ^ 0x5E6E0000) & v34 ^ 0x100000))) ^ 0xCFD4D124))
      - 38;
  LODWORD(STACK[0x1420]) = ((((v51 >> 3) & 0x15 ^ v51) >> 2) | (((v51 >> 3) & 0x15 ^ v51) << 6)) ^ 0x13;
  LODWORD(STACK[0x1438]) = v33 ^ 0x38;
  LODWORD(STACK[0x1410]) = v57 ^ (v57 >> 5) ^ (v57 >> 4) ^ 0xFFFFFFE2;
  v58 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v9) - 8);
  LODWORD(STACK[0x1250]) = v18;
  LODWORD(STACK[0xBFC]) = v17;
  LODWORD(STACK[0xCE0]) = v19;
  LODWORD(STACK[0xDA4]) = a5;
  LODWORD(STACK[0xDB4]) = a5;
  LODWORD(STACK[0x13D0]) = STACK[0xDF8];
  LODWORD(STACK[0x1084]) = STACK[0x1800];
  LODWORD(STACK[0xCB8]) = STACK[0x1818];
  LODWORD(STACK[0x1440]) = STACK[0xD38];
  LODWORD(STACK[0xC60]) = v15;
  LODWORD(STACK[0xCB4]) = STACK[0x1810];
  LODWORD(STACK[0xCD4]) = a6;
  LODWORD(STACK[0x1858]) = v15;
  LODWORD(STACK[0x1840]) = v18;
  LODWORD(STACK[0x1860]) = v19;
  LODWORD(STACK[0x1898]) = a6;
  return v58();
}

#error "10022C688: too big function (funcsize=0)"

uint64_t sub_100240390(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unint64_t v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unint64_t v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unint64_t v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  unint64_t v215;
  int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  int v358;
  int v359;
  unint64_t v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  int v372;
  int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  int v399;
  int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  unsigned int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  unsigned int v424;
  int v425;
  unsigned int v426;
  unsigned int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  int v497;
  int v498;
  unsigned int v499;
  int v500;
  int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  int v507;
  unsigned int v508;
  int v509;
  unsigned int v510;
  unsigned int v511;
  int v512;
  int v513;
  int v514;
  unsigned int v515;
  unsigned int v516;
  unsigned int v517;
  int v518;
  unsigned int v519;
  int v520;
  unsigned int v521;
  int v522;
  int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  int v538;
  int v539;
  unsigned int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  unsigned int v545;
  unsigned int v546;
  int v547;
  unsigned int v548;
  unsigned int v549;
  int v550;
  unsigned int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  int v561;
  unsigned int v562;
  unsigned int v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  unsigned int v574;
  unsigned int v575;
  int v576;
  int v577;
  unsigned int v578;
  unsigned int v579;
  int v580;
  unsigned int v581;
  int v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  unsigned int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  int v599;
  unsigned int v600;
  int v601;
  unsigned int v602;
  int v603;
  int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  int v608;
  unsigned int v609;
  int v610;
  unsigned int v611;
  int v612;
  int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  unsigned int v618;
  int v619;
  unsigned int v620;
  unsigned int v621;
  int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  int v626;
  int v627;
  int v628;
  unsigned int v629;
  int v630;
  int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  int v644;
  unsigned int v645;
  int v646;
  int v647;
  int v648;
  unsigned int v649;
  int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  unsigned int v654;
  unsigned int v655;
  unsigned int v656;
  uint64_t v657;
  int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  unsigned int v671;
  int v672;
  int v673;
  int v674;
  unsigned int v675;
  int v676;
  int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  unsigned int v682;
  int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  int v687;
  unsigned int v688;
  unsigned int v689;
  unsigned int v690;
  int v691;
  unsigned int v692;
  int v693;
  int v694;
  int v695;
  uint64_t v696;
  uint64_t v697;
  unsigned int v698;
  int v699;
  uint64_t v700;
  unsigned int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  unsigned int v707;
  unsigned int v708;
  int v709;
  unsigned int v710;
  unsigned int v711;
  unsigned int v712;
  int v713;
  int v714;
  int v715;
  unsigned int v716;
  int v717;
  int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  int v722;
  int v723;
  int v724;
  int v725;
  int v726;
  int v727;
  int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  unsigned int v732;
  int v733;
  unsigned int v734;
  unsigned int v735;
  int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  int v741;
  int v742;
  int v743;
  int v744;
  unsigned int v745;
  int v746;
  int v747;
  unsigned int v748;
  unsigned int v749;
  unsigned int v750;
  unsigned int v751;
  int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  unsigned int v759;
  unsigned int v760;
  int v761;
  unsigned int v762;
  unsigned int v763;
  int v764;
  unsigned int v765;
  unsigned int v766;
  uint64_t v767;
  int v768;
  uint64_t v769;
  int v770;
  int v771;
  unsigned int v773;

  HIDWORD(v14) = v12 ^ 0x1A;
  LODWORD(v14) = v12 ^ 0xBD6A3100;
  v13 = v14 >> 6;
  HIDWORD(v14) = ~v7;
  LODWORD(v14) = v7 ^ 0x6DFF7678;
  v15 = v14 >> 2;
  v16 = STACK[0x14F0];
  HIDWORD(v14) = v12 ^ 0x11A;
  LODWORD(v14) = v12 ^ 0xBD6A3000;
  v17 = v14 >> 11;
  v18 = STACK[0x17A0];
  v19 = v13 - v17 - 1926392729 - ((2 * (v13 - v17)) & 0x1A5B28CE);
  v20 = ((v12 >> 25) ^ 0x5E) - 1926392729 - ((2 * ((v12 >> 25) ^ 0x5E)) & 0xFFFFFFCF);
  v21 = STACK[0x17B0];
  v22 = (v20 ^ a4) & STACK[0x1328];
  LODWORD(STACK[0x1508]) = v19;
  v23 = LODWORD(STACK[0x12A8]) - (((v20 ^ a4) - 1926392729 - 2 * (v22 ^ v20 & 0x18)) ^ v19);
  v24 = a7 ^ LODWORD(STACK[0x1798]);
  v25 = v23 ^ ((((v12 ^ 0xB6ABDCF0) + 2031322739) ^ ((v12 ^ 0x17F5BF28) - 665983573) ^ ((v12 ^ 0x1C3452C2) - 745797567))
             - ((((v21 ^ 0x7B1A4D9C) - 1025430630) ^ ((v21 ^ 0x22F2760C) - 1693904886) ^ ((v21 ^ 0x92C1360D) + 725241865))
              + (((a5 ^ 0x2F4C1CE5) - 2025937238) ^ ((a5 ^ 0xF5B15221) + 1573120110) ^ ((a5 ^ 0x5D9F10) - 1473305251)))
             + (((v12 ^ 0x46993C7C) - 1994299649) ^ ((v12 ^ 0x3242A8FA) - 33885575) ^ ((v12 ^ 0xC9B1A59C) + 101318431)));
  v26 = (v25 - 1926392729 - ((2 * v25) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1590]);
  v27 = (v26 - ((2 * v26 + 516170042) & 0x1A5B28CE) + 210740484) ^ LODWORD(STACK[0x17D8]);
  v28 = ((((v7 << 19) ^ 0xB3D80000) + v16 + (~(2 * ((v7 << 19) ^ 0xB3D80000)) | 0xE5AFFFFF)) ^ (v7 >> 13) ^ 0x8D2EFB9C)
      + v15
      + ((v7 >> 22) ^ 0x8D2D95D0 ^ (((v7 << 10) ^ 0xFDD9EC00)
                                  - 1926392729
                                  - ((2 * ((v7 << 10) ^ 0xFDD9EC00)) & 0x1A5B2800)))
      - (v24 ^ ((((v10 ^ 0x20FC3DF1) - 553401841) ^ ((v10 ^ 0x7B8AADC7) - 2072686023) ^ ((v10 ^ 0xD65B0451) + 698678191))
              + 442181838
              + (((v18 ^ 0x5C8E8454) - 1750619292) ^ ((v18 ^ 0xDC70A57C) + 391744076) ^ ((v18 ^ 0x39056587) - 231978319))) ^ ((((v10 ^ 0xAE5A8511) + 1369799407) ^ ((v10 ^ 0x2D989CB3) - 764976307) ^ ((v10 ^ 0xEEF8DC5) - 250580421)) + 442181838 + (((v7 ^ 0x5958341B) + 1182083577) ^ ((v7 ^ 0xBE59EB3A) - 1586170150) ^ ((v7 ^ 0x8AFEA95A) - 1781287750))))
      + v27;
  v29 = v27 + (LODWORD(STACK[0x16B0]) ^ 0x8D2D9467);
  HIDWORD(v14) = v29;
  LODWORD(v14) = v29;
  v30 = v28 - 1926392729 - ((2 * v28) & 0x1A5B28CE);
  v31 = (v14 >> 25) - 1926392729 - ((2 * (v14 >> 25)) & 0x1A5B28CE);
  v32 = v29 ^ v9 ^ (v29 + (a5 ^ 0xDAA0D1D4) - 1926392729 - ((2 * (v29 + (a5 ^ 0xDAA0D1D4))) & 0x1A5B28CE));
  HIDWORD(v14) = v29;
  LODWORD(v14) = v29;
  v33 = ((v29 << (((v17 & 0x17 ^ 0x17) + (v17 & 0x17) + 8) & 0xA ^ (23 - ((v17 & 0x17 ^ 0x17) + (v17 & 0x17))) & ((v7 >> 22) & 0x1A ^ 2) ^ 0x10)) ^ (v29 >> 6))
      - (v14 >> 11);
  v34 = (LODWORD(STACK[0x14E8]) ^ 0xBC919D1C)
      + (v21 ^ 0xCB290D9D)
      - ((v33 - 1926392729 - ((2 * v33) & 0x1A5B28CE)) ^ v31)
      + ((v32 - 1926392729 - ((2 * v32) & 0x1A5B28CE)) ^ v8);
  HIDWORD(v14) = -17 - v30;
  LODWORD(v14) = v30 ^ LODWORD(STACK[0x14D0]);
  v35 = v14 >> 2;
  v36 = v30 ^ 0x8D2D9467;
  HIDWORD(v14) = v30 ^ 0x2D9467;
  LODWORD(v14) = v30 ^ 0x8D000000;
  v37 = 442181838
      - (((v18 ^ 0x403B86AF) - 1961711207) ^ ((v18 ^ 0x6211343A) - 1455940850) ^ ((v18 ^ 0x9BD1F63A) + 1358485774))
      + (((v18 ^ 0xEE1CCE7F) + 624288073) ^ ((v18 ^ 0x5FCB49F6) - 1797101886) ^ ((v18 ^ 0x82CC326) - 1023022062))
      + (((v7 ^ 0x29D0ED41) + 922611875) ^ ((v7 ^ 0xBC0B9626) - 1557754938) ^ ((v7 ^ 0xF8240D1C) - 418836224))
      - (v30 ^ a7)
      + v35
      - (v14 >> 22)
      + ((v30 >> 13) ^ 0x4696C ^ ((v30 ^ 0x8D2D9467) << ((v24 & 0x13 ^ 0x13) + (v24 & 0x13))))
      + (((v30 ^ 0x4657CBFC) - 1180158972) ^ ((v30 ^ 0xE2DEFC07) + 488702969) ^ ((v30 ^ 0x29A4A39C) - 698655644));
  v38 = v34 + 1532653214;
  v39 = v37 + v34 + 1532653214;
  v40 = v38 + (v10 ^ 0x8D2D9467);
  HIDWORD(v14) = v40;
  LODWORD(v14) = v40;
  v41 = (a5 ^ 0xDAA0D1D4) + 2 * (v12 ^ 0xBD6A311A) + v40 + (v40 ^ v29) - (v14 >> 25);
  HIDWORD(v14) = v40;
  LODWORD(v14) = v40;
  v42 = v41 - (v14 >> 6);
  HIDWORD(v14) = v40;
  LODWORD(v14) = v40;
  v43 = (v42 + (v14 >> 11) - ((2 * (v42 + (v14 >> 11)) + 498347664) & 0x1A5B28CE) + 1275571119) ^ LODWORD(STACK[0x1310]);
  HIDWORD(v14) = v39;
  LODWORD(v14) = v39;
  v44 = (((v7 ^ 0x4822CCC9) + 1460654379) ^ ((v7 ^ 0xD3469204) - 865366040) ^ ((v7 ^ 0xF69B28B6) - 373934762))
      + 884363676
      + (((v7 ^ 0x403FE2C2) + 1595080482) ^ ((v7 ^ 0xFDD35D70) - 486653804) ^ ((v7 ^ 0xD013C9C9) - 817966037))
      + (((v30 ^ 0x7EC745F0) - 2126988784) ^ ((v30 ^ 0xD204DF4) - 220220916) ^ ((v30 ^ 0xFECA9C63) + 20276125))
      + (((v30 ^ 0xB3508A3C) + 1286567364) ^ ((v30 ^ 0xF0695C6F) + 261530513) ^ ((v30 ^ 0xCE144234) + 837533132))
      - (v14 >> 13);
  HIDWORD(v14) = v39;
  LODWORD(v14) = v39;
  v45 = v44 - (v14 >> 22);
  HIDWORD(v14) = v39;
  LODWORD(v14) = v39;
  v46 = v45 + (v14 >> 2) + v43;
  v47 = (((v18 ^ 0x94B8EAAB) + 1603388829) ^ ((v18 ^ 0xDC07EE16) + 388940066) ^ ((v18 ^ 0xF1444012) + 980250406))
      - 375612342
      + v43;
  v48 = (v47 ^ 0x8B46FADC) & (2 * (v47 & 0xA390F81D)) ^ v47 & 0xA390F81D;
  v49 = ((2 * (v47 ^ 0x89661AFE)) ^ 0x55EDC5C6) & (v47 ^ 0x89661AFE) ^ (2 * (v47 ^ 0x89661AFE)) & 0x2AF6E2E2;
  v50 = (v49 ^ 0xC4C0C0) & (4 * v48) ^ v48;
  v51 = ((4 * (v49 ^ 0x2A122221)) ^ 0xABDB8B8C) & (v49 ^ 0x2A122221) ^ (4 * (v49 ^ 0x2A122221)) & 0x2AF6E2E0;
  v52 = (v51 ^ 0x2AD28280) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x246063)) ^ 0xAF6E2E30) & (v51 ^ 0x246063) ^ (16 * (v51 ^ 0x246063)) & 0x2AF6E2E0;
  v54 = v52 ^ 0x2AF6E2E3 ^ (v53 ^ 0x2A662200) & (v52 << 8);
  v55 = v47 ^ (2
             * ((v54 << 16) & 0x2AF60000 ^ v54 ^ ((v54 << 16) ^ 0x62E30000) & (((v53 ^ 0x90C0C3) << 8) & 0x2AF60000 ^ 0x8140000 ^ (((v53 ^ 0x90C0C3) << 8) ^ 0x76E20000) & (v53 ^ 0x90C0C3))));
  HIDWORD(v14) = v55 ^ 0x1B;
  LODWORD(v14) = v55 ^ 0xB3B93DC0;
  v56 = v14 >> 6;
  HIDWORD(v14) = v55 ^ 0x5DB;
  LODWORD(v14) = v55 ^ 0xB3B93800;
  v57 = v56 - (v14 >> 11);
  v58 = __PAIR64__(v46, __ROR4__(v55, 25));
  v59 = (v12 ^ 0xBD6A311A) + (v57 ^ v58 ^ 0x23611226);
  LODWORD(STACK[0x1590]) = v55 ^ 0x3E94A9BC;
  v60 = v55 ^ 0xB3B93DDB;
  v61 = v40 + v29;
  v62 = LODWORD(STACK[0x1378])
      - 1129270232
      + ((v59 + 1) ^ ((v55 ^ 0xB3B93DDB)
                    - (v40
                     + v29)
                    - (v55 ^ 0x3E94A9BC ^ (v29 - 1926392729 - ((2 * v29) & 0x1A5B28CE)))));
  LODWORD(v58) = v46;
  v63 = v39 + v36 - (v58 >> 13);
  HIDWORD(v58) = v46;
  LODWORD(v58) = v46;
  v64 = v63
      - (v58 >> 22)
      + ((v46 + v36) ^ (v46 - v39))
      + ((((v46 >> 2) & 0x1B19D476 ^ 0x1909C057) + (((v46 << 30) ^ 0xE4E62B89) & ((v46 >> 2) ^ 0xC0A60009)) - 1) ^ 0xD9AFC05F);
  v65 = v62 + (v7 ^ 0x6DFF767B);
  v66 = (((v65 >> 6) ^ 0xD27F35D) & ((v65 << 26) ^ 0x8FFFFFFF) & 0xFFFFFFF | ((v65 >> 2) << 28)) ^ 0x82000CA2;
  v67 = 1071002734 - (v66 | 0x3FD6346E) + (v66 | 0xC029CB91);
  v68 = v62 + v64;
  HIDWORD(v58) = v62 + v64;
  LODWORD(v58) = v62 + v64;
  v69 = v58 >> 13;
  v71 = __PAIR64__(v68, __ROR4__(v68, 2));
  v70 = v69 ^ v71;
  LODWORD(v71) = v68;
  v72 = v70 - (v71 >> 22);
  v73 = (v46 >> 2) & 0x2DA5064A;
  v74 = ((2 * (v73 ^ 0x85004A)) & 0xA4A0014) - (v73 ^ 0x85004A) + 2023382753;
  LODWORD(STACK[0x1240]) = v11;
  v75 = LODWORD(STACK[0x130C])
      + v61
      + (v55 ^ 0x4C46C224)
      - v65
      + (v65 ^ v40)
      + (v65 << 7)
      + (v65 >> 25)
      - (((v72 & 0x35552075 ^ 0x35552075) + (v72 & 0x35552075)) ^ (((v74 & 0xA086003C ^ 0x80041095)
                                                                  + (v74 & 0x5F790642)
                                                                  - 1) ^ 0xF81B16BE | (((2 * (v73 ^ 0x905C401)) & 0x4B428884)
                                                                                     - (v73 ^ 0x905C401)
                                                                                     - 933977187) ^ 0x2CF461D6))
      + (v67 ^ __ROR4__(v65, 11) ^ 0x4F0E346E)
      + 1;
  v76 = v75 + v36;
  v77 = v75 + (((v68 ^ v46) - (v39 + v68)) ^ (v46 - v39) ^ v72);
  HIDWORD(v71) = v76;
  LODWORD(v71) = v76;
  v78 = ((v40
        - (v71 >> 11)
        + ((((v76 << 7) ^ 0x98684F10) & ((v76 >> 25) ^ 0xFFFFFFD5) | (v76 >> 25) & 0xFFFFFFEF) ^ 0x98684F10)
        + ((v76 >> (((v77 >> 13) & 0x62) - 92 + ((v77 >> 13) & 0x62 ^ 0x62))) ^ (v76 << 26))) ^ v65)
      - (((LODWORD(STACK[0x14D8]) ^ 0x22229795) - 572692373) ^ ((LODWORD(STACK[0x14D8]) ^ 0xD04B3B01) + 800376063) ^ ((LODWORD(STACK[0x14D8]) ^ 0x7F4438F3) - 2135177459))
      - 276755863;
  v79 = (v78 ^ 0xF8D4DD4E) & (2 * (v78 & 0xFAD41C6F)) ^ v78 & 0xFAD41C6F;
  v80 = ((2 * (v78 ^ 0x974E51A)) ^ 0xE741F2EA) & (v78 ^ 0x974E51A) ^ (2 * (v78 ^ 0x974E51A)) & 0xF3A0F974;
  v81 = (v80 ^ 0xE300F060) & (4 * v79) ^ v79;
  v82 = ((4 * (v80 ^ 0x10A00915)) ^ 0xCE83E5D4) & (v80 ^ 0x10A00915) ^ (4 * (v80 ^ 0x10A00915)) & 0xF3A0F974;
  v83 = (v82 ^ 0xC280E150) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x31201821)) ^ 0x3A0F9750) & (v82 ^ 0x31201821) ^ (16 * (v82 ^ 0x31201821)) & 0xF3A0F970;
  v85 = v83 ^ 0xF3A0F975 ^ (v84 ^ 0x32009100) & (v83 << 8);
  v86 = v78 ^ (2
             * ((v85 << 16) & 0x73A00000 ^ v85 ^ ((v85 << 16) ^ 0x79750000) & (((v84 ^ 0xC1A06825) << 8) & 0x73A00000 ^ 0x53000000 ^ (((v84 ^ 0xC1A06825) << 8) ^ 0x20F90000) & (v84 ^ 0xC1A06825))));
  HIDWORD(v71) = v77;
  LODWORD(v71) = v77;
  v87 = ((v71 >> 22) ^ __ROR4__(v77, 2) ^ __ROR4__(v77, 13))
      + ((((v77 - v68 - 1926392729 - ((2 * (v77 - v68)) & 0x1A5B28CE)) ^ 0x8D2D9467) + (v77 ^ v46)) ^ v68 ^ v46)
      - 829807871
      + (((v86 ^ 0x33C19D56) - 1094313908) ^ ((v86 ^ 0xEF2D22B5) + 1646962601) ^ ((v86 ^ 0x23395166) - 1371614084));
  v88 = (v87 ^ 0x3C127455) & (2 * (v87 & 0xBEA37166)) ^ v87 & 0xBEA37166;
  v89 = ((2 * (v87 ^ 0x6550F459)) ^ 0xB7E70A7E) & (v87 ^ 0x6550F459) ^ (2 * (v87 ^ 0x6550F459)) & 0xDBF3853E;
  v90 = (v89 ^ 0x93830039) & (4 * v88) ^ v88;
  v91 = ((4 * (v89 ^ 0x48108501)) ^ 0x6FCE14FC) & (v89 ^ 0x48108501) ^ (4 * (v89 ^ 0x48108501)) & 0xDBF3853C;
  v92 = (v91 ^ 0x4BC20420) & (16 * v90) ^ v90;
  v93 = ((16 * (v91 ^ 0x90318103)) ^ 0xBF3853F0) & (v91 ^ 0x90318103) ^ (16 * (v91 ^ 0x90318103)) & 0xDBF38530;
  v94 = v92 ^ 0xDBF3853F ^ (v93 ^ 0x9B300100) & (v92 << 8);
  v95 = v87 ^ (2
             * ((v94 << 16) & 0x5BF30000 ^ v94 ^ ((v94 << 16) ^ 0x53F0000) & (((v93 ^ 0x40C3840F) << 8) & 0x5BF30000 ^ 0x8720000 ^ (((v93 ^ 0x40C3840F) << 8) ^ 0x73850000) & (v93 ^ 0x40C3840F))));
  LOBYTE(v94) = (v64 & 0x33 ^ 0x33) + (v64 & 0x33);
  v96 = (v86 ^ 0xFFD5EE85) + v39;
  HIDWORD(v71) = v95 ^ 0x1B18;
  LODWORD(v71) = v95 ^ 0xB226000;
  v97 = v71 >> 13;
  HIDWORD(v71) = v96;
  LODWORD(v71) = v96;
  v98 = v76 + v60 - (v71 >> 25);
  HIDWORD(v71) = v96;
  LODWORD(v71) = v96;
  v99 = v71 >> 6;
  LODWORD(v71) = __ROR4__(v96, 11);
  v100 = (((LODWORD(STACK[0x1338]) ^ 0xA3AFB2F6) + 1548766474) ^ ((LODWORD(STACK[0x1338]) ^ 0xC849037B) + 934739077) ^ ((LODWORD(STACK[0x1338]) ^ 0xE6CB25EA) + 422894102))
       + 1486458771
       + ((v98 - (v99 ^ v71) - 1926392729 - ((2 * (v98 - (v99 ^ v71))) & 0x1A5B28CE)) ^ 0x8D2D9467);
  v101 = v100 + v46 - 1926392729 - ((2 * (v100 + v46)) & 0x1A5B28CE);
  v102 = ((2 * v77) ^ 0x89EC602C ^ __ROR4__(v95, 22) ^ (((((v95 ^ 0xB227B18u) >> (-10 * v94))
                                                        - 1926392729
                                                        - ((2 * ((v95 ^ 0xB227B18u) >> (-10 * v94))) & 0x1A5B28CE)) ^ ((v95 << 30) - 1926392729))
                                                      - v97))
       + v100;
  v103 = (((v101 ^ 0x7059B3EF) - 1884926959) ^ ((v101 ^ 0x75B387C3) - 1974699971) ^ ((v101 ^ 0x88C7A04B) + 2000183221))
       - v76
       - 885901523;
  v104 = (v103 ^ 0xB9FA1832) & (2 * (v103 & 0xC1FB5D3A)) ^ v103 & 0xC1FB5D3A;
  v105 = ((2 * (v103 ^ 0x3BAA1026)) ^ 0xF4A29A38) & (v103 ^ 0x3BAA1026) ^ (2 * (v103 ^ 0x3BAA1026)) & 0xFA514D1C;
  v106 = (v105 ^ 0x818) & (4 * v104) ^ v104;
  v107 = ((4 * (v105 ^ 0xA514504)) ^ 0xE9453470) & (v105 ^ 0xA514504) ^ (4 * (v105 ^ 0xA514504)) & 0xFA514D1C;
  v108 = (v107 ^ 0xE8410400) & (16 * v106) ^ v106;
  v109 = ((16 * (v107 ^ 0x1210490C)) ^ 0xA514D1C0) & (v107 ^ 0x1210490C) ^ (16 * (v107 ^ 0x1210490C)) & 0xFA514D10;
  v110 = v108 ^ 0xFA514D1C ^ (v109 ^ 0xA010411C) & (v108 << 8);
  v111 = (v110 << 16) & 0x7A510000 ^ v110 ^ ((v110 << 16) ^ 0x4D1C0000) & (((v109 ^ 0x5A410C1C) << 8) & 0x7A510000 ^ 0x2A100000 ^ (((v109 ^ 0x5A410C1C) << 8) ^ 0x514D0000) & (v109 ^ 0x5A410C1C));
  HIDWORD(v71) = v102;
  LODWORD(v71) = v102;
  v112 = (v71 >> 2) - 1926392729 - ((2 * (v71 >> 2)) & 0x1A5B28CE);
  HIDWORD(v71) = (v101 >> 17) ^ 0x4696;
  LODWORD(v71) = (BYTE4(v71) & 0xF8 | (v101 << 15)) ^ 0xCA338000;
  v113 = v71 >> 3;
  v114 = STACK[0x17F0];
  HIDWORD(v71) = v101 ^ 0xFFFFFFE7;
  LODWORD(v71) = v101 ^ LODWORD(STACK[0x17F0]);
  v115 = v71 >> 6;
  v116 = STACK[0x1160];
  HIDWORD(v71) = v101 ^ 0x467;
  LODWORD(v71) = v101 ^ LODWORD(STACK[0x1160]);
  v117 = v71 >> 11;
  HIDWORD(v71) = v113;
  LODWORD(v71) = v113;
  v118 = LODWORD(STACK[0x1380])
       + 1039213593
       + ((v65 - v117 + v115 + (((v71 >> 5) | (v101 >> 25)) ^ 0x46)) ^ v76 ^ (v96
                                                                            + (v101 ^ 0x8D2D9467)
                                                                            + (v103 ^ (2 * v111) ^ 0x5A8638FD)
                                                                            + 1));
  HIDWORD(v71) = v102;
  LODWORD(v71) = v102;
  v119 = (v95 ^ 0xB227B18) - v77 + (v71 >> 13);
  HIDWORD(v71) = v102;
  LODWORD(v71) = v102;
  v120 = v119 - (v71 >> 22) + (v102 ^ v77 ^ ((v95 ^ 0xF4DD84E7) + v102 + 1)) + (v112 ^ 0x8D2D9467) + v118;
  v121 = v118 + v68 - 1926392729 - ((2 * (v118 + v68)) & 0x1A5B28CE);
  HIDWORD(v71) = v121 ^ 0xFFFFFFE7;
  LODWORD(v71) = v121 ^ LODWORD(STACK[0x17F0]);
  v122 = v71 >> 6;
  v123 = (((v120 << 19) ^ 0x792320A9) & ((v120 >> 13) ^ 0xFFFF72B9) | (v120 >> 13) & 0x4DF56) ^ 0x82145210;
  v124 = ((2 * v123) & 0xB64DBB90) - v123;
  HIDWORD(v71) = v121 ^ 0x467;
  LODWORD(v71) = v121 ^ LODWORD(STACK[0x1160]);
  v125 = v71 >> 11;
  v126 = ((71 * ((v121 >> 25) ^ 0x46)) ^ 0xB1) + 1213870276;
  v127 = (2 * (v126 & 0x19B)) & 0xFE0F ^ v126 & 0x19B ^ ((2 * (v126 & 0x19B)) | 0x40000) & (v126 ^ 0xFDC5A594);
  v128 = (2 * (v126 ^ 0xFDC5A594)) & 0x4A23020E ^ 0x4A208201 ^ ((2 * (v126 ^ 0xFDC5A594)) ^ 0x9487041E) & (v126 ^ 0xFDC5A594);
  v129 = (4 * v127) & 0x4A63820C ^ v127 ^ ((4 * v127) ^ 0x88000) & v128;
  v130 = (4 * v128) & 0x4A63820C ^ 0x42618203 ^ ((4 * v128) ^ 0x298E083C) & v128;
  v131 = (16 * v129) & 0x4A638200 ^ v129 ^ ((16 * v129) ^ 0x2A0000) & v130;
  v132 = (16 * v130) & 0x4A638200 ^ 0x4843820F ^ ((16 * v130) ^ 0xA63820F0) & v130;
  v133 = v131 ^ 0x4A63220F ^ (v131 << 8) & 0x4A638200 ^ ((v131 << 8) ^ 0x20A00000) & v132;
  v134 = v126 ^ (2
               * ((v133 << 16) & 0x4A630000 ^ v133 ^ ((v133 << 16) ^ 0x20F0000) & ((v132 << 8) & 0x4A630000 ^ 0x8610000 ^ ((v132 << 8) ^ 0x63820000) & v132)));
  HIDWORD(v71) = v120;
  LODWORD(v71) = v120;
  v135 = v71 >> 2;
  HIDWORD(v71) = v120;
  LODWORD(v71) = v120;
  v136 = (v121 << 7) ^ 0x6935CC7F ^ (v122 + v125);
  v137 = STACK[0x18B8];
  LOBYTE(v125) = ((*(_BYTE *)(STACK[0x18B8] + (v134 ^ 0x27672385u)) - 84) ^ 0x29) - 107;
  v138 = (v76 + (v136 ^ v125) + 1) ^ v101;
  v139 = LODWORD(STACK[0x1388])
       - 481176601
       + (((v138 ^ 0x6321557B) - 1663128955) ^ ((v138 ^ 0xD51008B4) + 720369484) ^ ((v138 ^ 0x3B1CC9A8) - 991742376));
  v140 = (v120 + v102) ^ (v102 + (v95 ^ 0xB227B18)) ^ (v135 + (v71 >> 22) + ((v124 - 1529273801) ^ 0xA011AF71) + 1);
  v141 = v139 + (v95 ^ v120 ^ 0x860FEF7F ^ (v140 - 1926392729 - ((2 * v140) & 0x1A5B28CE)));
  v142 = v139 + v77 - 1926392729 - ((2 * (v139 + v77)) & 0x1A5B28CE);
  LODWORD(STACK[0x1828]) = v142 << 21;
  v143 = (((v142 >> 11) ^ 0x2826AF60) & ((v142 << 21) ^ 0xF2DFFFFF) | (v142 << 21) & 0xD7C00000) ^ 0xD2C03028;
  HIDWORD(v71) = v141;
  LODWORD(v71) = v141;
  v144 = v71 >> 13;
  HIDWORD(v71) = v141;
  LODWORD(v71) = v141;
  v145 = (v71 >> 2) - v144 - 1926392729 - ((2 * ((v71 >> 2) - v144)) & 0x1A5B28CE);
  v146 = (((v142 ^ 0x2C8A59ED) - 747264493) ^ ((v142 ^ 0x9D4A2DA0) + 1656083040) ^ ((v142 ^ 0x3CEDE02A) - 1022222378))
       + (((v101 ^ 0xFF628D48) + 10318520) ^ ((v101 ^ 0xC3396FAC) + 1019646036) ^ ((v101 ^ 0xB1767683) + 1317636477));
  v147 = (v146 - 1484210891 - ((2 * v146 + 347492764) & 0x1A5B28CE)) ^ v121;
  v148 = (v147 - 1926392729 - ((2 * v147) & 0x1A5B28CE)) ^ v142;
  v149 = (LODWORD(STACK[0x1650]) ^ 0x72D26B98)
       - 883609725
       + v96
       - (((v142 ^ 0x8D2D9467) << (((v65 >> 25) & 7 ^ 7) + ((v65 >> 25) & 7))) ^ ((v142 ^ 0x8D2D9467) >> 25))
       + ((((v142 >> 6) ^ 0xC94E304F) & ((v142 << 26) ^ 0x47FFFFFF) | (v142 << 26) & 0x34000000) ^ 0xDF7A861E)
       + ((v143 - ((2 * v143) & 0xE472A3AE) - 231124521) ^ 0x73F194D2)
       - ((v148 - 1926392729 - ((2 * v148) & 0x1A5B28CE)) ^ v101);
  LODWORD(STACK[0x1850]) = v145;
  HIDWORD(v71) = v141;
  LODWORD(v71) = v141;
  v150 = v102
       - v120
       - (v141 ^ v120)
       - (v141 ^ v102)
       - (v71 >> 22)
       - 985310149
       + (((v145 ^ 0x6254D1F2) - 1649725938) ^ ((v145 ^ 0xCC253626) + 869976538) ^ ((v145 ^ 0x235C73B3) - 593261491));
  v151 = (v150 ^ 0xA7EBB709) & (2 * (v150 & 0xC7E8382C)) ^ v150 & 0xC7E8382C;
  v152 = ((2 * (v150 ^ 0x28EB8709)) ^ 0xDE077E4A) & (v150 ^ 0x28EB8709) ^ (2 * (v150 ^ 0x28EB8709)) & 0xEF03BF24;
  v153 = (v152 ^ 0xE012000) & (4 * v151) ^ v151;
  v154 = ((4 * (v152 ^ 0x21008125)) ^ 0xBC0EFC94) & (v152 ^ 0x21008125) ^ (4 * (v152 ^ 0x21008125)) & 0xEF03BF24;
  v155 = (v154 ^ 0xAC02BC00) & (16 * v153) ^ v153;
  v156 = ((16 * (v154 ^ 0x43010321)) ^ 0xF03BF250) & (v154 ^ 0x43010321) ^ (16 * (v154 ^ 0x43010321)) & 0xEF03BF20;
  v157 = v155 ^ 0xEF03BF25 ^ (v156 ^ 0xE003B200) & (v155 << 8);
  v158 = v150 ^ (2
               * ((v157 << 16) & 0x6F030000 ^ v157 ^ ((v157 << 16) ^ 0x3F250000) & (((v156 ^ 0xF000D25) << 8) & 0x6F030000 ^ 0x6C000000 ^ (((v156 ^ 0xF000D25) << 8) ^ 0x3BF0000) & (v156 ^ 0xF000D25))));
  v159 = (((v95 ^ 0xD50A8C6F) - 1392861968) ^ ((v95 ^ 0x4682B28E) + 1064477199) ^ ((v95 ^ 0x98AA45F9) - 514173574))
       - 1601872306
       + v149;
  v160 = (v159 ^ 0xEE802551) & (2 * (v159 & 0xECA83619)) ^ v159 & 0xECA83619;
  v161 = ((2 * (v159 ^ 0xA7802943)) ^ 0x96503EB4) & (v159 ^ 0xA7802943) ^ (2 * (v159 ^ 0xA7802943)) & 0x4B281F5A;
  v162 = (v161 ^ 0x2001800) & (4 * v160) ^ v160;
  v163 = ((4 * (v161 ^ 0x4928014A)) ^ 0x2CA07D68) & (v161 ^ 0x4928014A) ^ (4 * (v161 ^ 0x4928014A)) & 0x4B281F58;
  v164 = (v163 ^ 0x8201D42) & (16 * v162) ^ v162;
  v165 = ((16 * (v163 ^ 0x43080212)) ^ 0xB281F5A0) & (v163 ^ 0x43080212) ^ (16 * (v163 ^ 0x43080212)) & 0x4B281F50;
  v166 = v164 ^ 0x4B281F5A ^ (v165 ^ 0x200155A) & (v164 << 8);
  v167 = v159 ^ (2
               * ((v166 << 16) & 0x4B280000 ^ v166 ^ ((v166 << 16) ^ 0x1F5A0000) & (((v165 ^ 0x49280A5A) << 8) & 0x4B280000 ^ 0x43200000 ^ (((v165 ^ 0x49280A5A) << 8) ^ 0x281F0000) & (v165 ^ 0x49280A5A))));
  v168 = v149
       - 870644545
       + (((v158 ^ 0xDC40BD94) - 377515925) ^ ((v158 ^ 0xDF642750) - 363132241) ^ ((v158 ^ 0x44C9DCA2) + 1912009053))
       + 1169;
  v169 = (v168 ^ 0xA8980256) & (2 * (v168 & 0xC1128B17)) ^ v168 & 0xC1128B17;
  v170 = ((2 * (v168 ^ 0xAA981050)) ^ 0xD715368E) & (v168 ^ 0xAA981050) ^ (2 * (v168 ^ 0xAA981050)) & 0x6B8A9B46;
  v171 = (v170 ^ 0x20009105) & (4 * v169) ^ v169;
  v172 = ((4 * (v170 ^ 0x288A8941)) ^ 0xAE2A6D1C) & (v170 ^ 0x288A8941) ^ (4 * (v170 ^ 0x288A8941)) & 0x6B8A9B44;
  v173 = (v172 ^ 0x2A0A0900) & (16 * v171) ^ v171;
  v174 = ((16 * (v172 ^ 0x41809243)) ^ 0xB8A9B470) & (v172 ^ 0x41809243) ^ (16 * (v172 ^ 0x41809243)) & 0x6B8A9B40;
  v175 = v173 ^ 0x6B8A9B47 ^ (v174 ^ 0x28889000) & (v173 << 8);
  v176 = v168 ^ (2
               * ((v175 << 16) & 0x6B8A0000 ^ v175 ^ ((v175 << 16) ^ 0x1B470000) & (((v174 ^ 0x43020B07) << 8) & 0x6B8A0000 ^ 0x61000000 ^ (((v174 ^ 0x43020B07) << 8) ^ 0xA9B0000) & (v174 ^ 0x43020B07))));
  v177 = (((v176 ^ 0x747D9EA6) + 111954088) ^ ((v176 ^ 0x65CE3B73) + 387968371) ^ ((v176 ^ 0x11B0184C) + 1667354190))
       - v120
       - 452560577;
  v178 = (v177 ^ 0x2036120E) & (2 * (v177 & 0xA8271B28)) ^ v177 & 0xA8271B28;
  v179 = ((2 * (v177 ^ 0x2074324E)) ^ 0x10A652CC) & (v177 ^ 0x2074324E) ^ (2 * (v177 ^ 0x2074324E)) & 0x88532966;
  v180 = (v179 ^ 0x8410042) & (4 * v178) ^ v178;
  v181 = ((4 * (v179 ^ 0x88512922)) ^ 0x214CA598) & (v179 ^ 0x88512922) ^ (4 * (v179 ^ 0x88512922)) & 0x88532964;
  v182 = (v181 ^ 0x402106) & (16 * v180) ^ v180;
  v183 = ((16 * (v181 ^ 0x88130866)) ^ 0x85329660) & (v181 ^ 0x88130866) ^ (16 * (v181 ^ 0x88130866)) & 0x88532960;
  v184 = v182 ^ 0x88532966 ^ (v183 ^ 0x80120006) & (v182 << 8);
  v185 = (v184 << 16) & 0x8530000 ^ v184 ^ ((v184 << 16) ^ 0x29660000) & (((v183 ^ 0x8412906) << 8) & 0x8530000 ^ 0x8520000 ^ (((v183 ^ 0x8412906) << 8) ^ 0x53290000) & (v183 ^ 0x8412906));
  v186 = (((v176 ^ 0xC4BA6B1A) - 1234453220) ^ ((v176 ^ 0x1464452D) + 1723175725) ^ ((v176 ^ 0xD0DD93AE) - 1576254032))
       - v141
       + 183179740;
  v187 = (v186 ^ 0xD939708B) & (2 * (v186 & 0x82427A8B)) ^ v186 & 0x82427A8B;
  v188 = ((2 * (v186 ^ 0xDDBDA09D)) ^ 0xBFFFB42C) & (v186 ^ 0xDDBDA09D) ^ (2 * (v186 ^ 0xDDBDA09D)) & 0x5FFFDA16;
  v189 = (v188 ^ 0x1B1B9004) & (4 * v187) ^ v187;
  v190 = ((4 * (v188 ^ 0x40004A12)) ^ 0x7FFF6858) & (v188 ^ 0x40004A12) ^ (4 * (v188 ^ 0x40004A12)) & 0x5FFFDA14;
  v191 = (v190 ^ 0x5FFF4816) & (16 * v189) ^ v189;
  v192 = ((16 * (v190 ^ 0x9206)) ^ 0xFFFDA160) & (v190 ^ 0x9206) ^ (16 * (v190 ^ 0x9206)) & 0x5FFFDA10;
  v193 = v191 ^ 0x5FFFDA16 ^ (v192 ^ 0x5FFD8000) & (v191 << 8);
  v194 = v186 ^ (2
               * ((v193 << 16) & 0xDFFFFFFF ^ v193 ^ ((v193 << 16) ^ 0x5A160000) & (((v192 ^ 0x25A16) << 8) & 0x5FFF0000 ^ 0x250000 ^ (((v192 ^ 0x25A16) << 8) ^ 0x7FDA0000) & (v192 ^ 0x25A16))));
  v195 = (((v167 ^ 0x66C9B9B) + 408352943) ^ ((v167 ^ 0xBD8C99E2) - 1548289320) ^ ((v167 ^ 0xD7080AD4) - 919442974))
       - (((v121 ^ 0x29B09809) - 699439113) ^ ((v121 ^ 0x51D52CD2) - 1372925138) ^ ((v121 ^ 0xF54820BC) + 179822404))
       + 240275976;
  v196 = (v195 ^ 0xE58D89F4) & (2 * (v195 & 0xF1ADADF8)) ^ v195 & 0xF1ADADF8;
  v197 = ((2 * (v195 ^ 0x6794DBC4)) ^ 0x2C72EC78) & (v195 ^ 0x6794DBC4) ^ (2 * (v195 ^ 0x6794DBC4)) & 0x9639763C;
  v198 = (v197 ^ 0x4306420) & (4 * v196) ^ v196;
  v199 = ((4 * (v197 ^ 0x92091204)) ^ 0x58E5D8F0) & (v197 ^ 0x92091204) ^ (4 * (v197 ^ 0x92091204)) & 0x9639763C;
  v200 = (v199 ^ 0x10215020) & (16 * v198) ^ v198;
  v201 = ((16 * (v199 ^ 0x8618260C)) ^ 0x639763C0) & (v199 ^ 0x8618260C) ^ (16 * (v199 ^ 0x8618260C)) & 0x96397630;
  v202 = v200 ^ 0x9639763C ^ (v201 ^ 0x2116200) & (v200 << 8);
  v203 = v195 ^ (2
               * ((v202 << 16) & 0x16390000 ^ v202 ^ ((v202 << 16) ^ 0x763C0000) & (((v201 ^ 0x9428143C) << 8) & 0x16390000 ^ 0x6090000 ^ (((v201 ^ 0x9428143C) << 8) ^ 0x39760000) & (v201 ^ 0x9428143C))));
  LODWORD(v71) = __ROR4__(v167, 25);
  v204 = v177 ^ (2 * v185);
  v205 = (__ROR4__(v167, 6) ^ 0xB5B3A022)
       + (((v167 ^ 0x6CE808ADu) >> ((v125 & 0xB ^ 0xB) + (v125 & 0xB))) ^ (v167 << 21) ^ 0xEA5FFFFF)
       + (((v71 ^ 0x740456B6) - 1926392729 - ((2 * (v71 ^ 0x740456B6)) & 0x1A5B28CE)) ^ 0x72D26B98)
       + 2;
  v206 = (v121 ^ 0x72D26B98)
       - 442181838
       - (((v142 ^ 0x2EAD9B3C) - 783129404) ^ ((v142 ^ 0x805AD6AD) + 2141530451) ^ ((v142 ^ 0x23DAD9F6) - 601545206))
       + (v167 ^ 0x6CE808AD)
       - (((v203 ^ 0x3A90EC9) - 2133580590) ^ ((v203 ^ 0xDC2DE6AC) + 1599130805) ^ ((v203 ^ 0x2E2BA9E5) - 1386839042))
       + 1;
  v207 = (v206 + v16 + ~((2 * v206) & 0x1A5B28CE)) ^ v101;
  v208 = LODWORD(STACK[0x1390])
       - 1976072943
       + ((v207 - 1926392729 - ((2 * v207) & 0x1A5B28CE)) ^ (v205 - 1926392729 - ((2 * v205) & 0x1A5B28CE)));
  HIDWORD(v71) = v176 ^ 0x3BD99;
  LODWORD(v71) = v176;
  v209 = (v71 >> 22) + (v141 ^ v120);
  HIDWORD(v71) = v176 ^ 0x8D2E29FE;
  LODWORD(v71) = v176;
  v210 = v208 + v102;
  v211 = v209
       + ((v71 >> 2) ^ 0xC000EF66)
       + (((((v176 ^ 0x8D2E29FE) << 19) ^ 0x4047FFFF) & ((v176 >> 13) ^ 0xC279AD3C) | ((v176 ^ 0x8D2E29FE) << 19) & 0x3D800000) ^ 0xE379AD21)
       + v208;
  v212 = v211
       + (v204 ^ 0x2528DD83 ^ v194 ^ 0x4BC5AC0)
       - 1926392729
       - ((2 * (v211 + (v204 ^ 0x2528DD83 ^ v194 ^ 0x4BC5AC0))) & 0x1A5B28CE);
  HIDWORD(v71) = v212 ^ 0x2D9467;
  LODWORD(v71) = v212 ^ 0x8D000000;
  v213 = v71 >> 22;
  v214 = ((v212 << 30) | 0x3FFFFFFF) & ((v212 >> 2) ^ 0xD2B57CA4);
  v215 = __PAIR64__(v210, __ROR4__(v212, 13));
  v216 = ((v215 ^ 0x5CC39693) + (((v214 & 0x6913AA4A ^ 0x61132A09) - (~v214 | 0x6913AA4A) - 2) ^ 0x90ED33B5) + 1) ^ v213;
  LODWORD(v215) = v210;
  v217 = (v215 >> 25) - 1926392729 - ((2 * (v215 >> 25)) & 0x1A5B28CE);
  v218 = ((v210 << 21) ^ 0x51748389) & ((v210 >> 11) ^ 0xFFFCABA9) | (v210 >> 11) & 0xB7C76;
  HIDWORD(v215) = v210;
  LODWORD(v215) = v210;
  v219 = (v215 >> 6)
       - 442181838
       - (((v218 ^ 0xE76AD42D) - 993248195) ^ ((v218 ^ 0x2E4274F8) + 233086186) ^ ((v218 ^ 0x985C235C) - 1141191858))
       - (((v217 ^ 0x6CF37C93) - 1827896467) ^ ((v217 ^ 0x30195CA9) - 806968489) ^ ((v217 ^ 0xD1C7B45D) + 775441315));
  v220 = v219 + v16 + ~((2 * v219) & 0x1A5B28CE);
  v221 = ((((v176 ^ 0xA5D55DC4) - 687567930) ^ ((v176 ^ 0xC233312F) - 1327306961) ^ ((v176 ^ 0x67E5D172) + 355731316))
        + 442181838
        + (((v212 ^ 0xA74B2679) + 1488247175) ^ ((v212 ^ 0x513F8AAB) - 1363118763) ^ ((v212 ^ 0x7B5938B5) - 2069444789))) ^ ((v212 ^ 0x8D2D9467) - v141);
  v222 = (v167 ^ 0x9317F752) + 1;
  v223 = (v221 - 1926392729 - ((2 * v221) & 0x1A5B28CE)) ^ v194 ^ 0x4BC5AC0;
  v224 = v216 - v223 - 1926392729 - ((2 * (v216 - v223)) & 0x1A5B28CE);
  v225 = (v142 ^ 0x72D26B98)
       + (v210 ^ v142 ^ (v210 + v222 - 1926392729 - ((2 * (v210 + v222)) & 0x1A5B28CE)))
       + (((v121 ^ 0xB98F6BD4) + 1181783084) ^ ((v121 ^ 0xC7EEF29D) + 940641635) ^ ((v121 ^ 0xF34C0D2E) + 213119698))
       - (((v220 ^ 0x6ED6385C) - 1859532892) ^ ((v220 ^ 0xB9AE0441) + 1179777983) ^ ((v220 ^ 0x5A55A87A) - 1515563130))
       + 1;
  v226 = ((((v225 - 1926392729 - ((2 * v225) & 0x1A5B28CE)) ^ 0x4BFE62B7) - 1274962615) ^ (((v225
                                                                                           - 1926392729
                                                                                           - ((2 * v225) & 0x1A5B28CE)) ^ 0x247D3CC2)
                                                                                         - 612187330) ^ (((v225 - 1926392729 - ((2 * v225) & 0x1A5B28CE)) ^ 0xE2AECA12) + 491861486))
       + 1418248861;
  v227 = (v226 ^ 0x78FCCF53) & (2 * (v226 & 0x82FD0F98)) ^ v226 & 0x82FD0F98;
  v228 = ((2 * (v226 ^ 0x78FCC053)) ^ 0xF4039F96) & (v226 ^ 0x78FCC053) ^ (2 * (v226 ^ 0x78FCC053)) & 0xFA01CFCA;
  v229 = (v228 ^ 0x10000E89) & (4 * v227) ^ v227;
  v230 = ((4 * (v228 ^ 0xA004049)) ^ 0xE8073F2C) & (v228 ^ 0xA004049) ^ (4 * (v228 ^ 0xA004049)) & 0xFA01CFC8;
  v231 = (v230 ^ 0xE8010F00) & (16 * v229) ^ v229;
  v232 = ((16 * (v230 ^ 0x1200C0C3)) ^ 0xA01CFCB0) & (v230 ^ 0x1200C0C3) ^ (16 * (v230 ^ 0x1200C0C3)) & 0xFA01CFC0;
  v233 = v231 ^ 0xFA01CFCB ^ (v232 ^ 0xA000CC4B) & (v231 << 8);
  v234 = v226 ^ (2
               * ((v233 << 16) & 0x7A010000 ^ v233 ^ ((v233 << 16) ^ 0x4FCB0000) & (((v232 ^ 0x5A01034B) << 8) & 0x7A010000 ^ 0x7A000000 ^ (((v232 ^ 0x5A01034B) << 8) ^ 0x1CF0000) & (v232 ^ 0x5A01034B))));
  v235 = (((v234 ^ 0xB2DE64EF) + 586194810) ^ ((v234 ^ 0xEC093041) + 2082982872) ^ ((v234 ^ 0xBC2BC4A0) + 738541367))
       + (((LODWORD(STACK[0x16D0]) ^ 0x77572C3C) - 2002201660) ^ ((LODWORD(STACK[0x16D0]) ^ 0xA3E805D2) + 1545075246) ^ ((LODWORD(STACK[0x16D0]) ^ 0x5992BD89) - 1502789001));
  v236 = (((v224 ^ 0x3A8FFAC4) - 982514372) ^ ((v224 ^ 0x4F50DDBE) - 1330699710) ^ ((v224 ^ 0xF8F2B31D) + 118312163))
       - 484714429
       + v235;
  v237 = (2 * (v236 & 0xC46CE4F2)) & (v236 ^ 0xAE5AF0B2) ^ v236 & 0xC46CE4F2 ^ ((2 * (v236 & 0xC46CE4F2)) & 0x8100040 | 0x240000);
  v238 = (2 * (v236 ^ 0xAE5AF0B2)) & 0x6A361440 ^ 0x2A121440 ^ ((2 * (v236 ^ 0xAE5AF0B2)) ^ 0xD46C2880) & (v236 ^ 0xAE5AF0B2);
  v239 = (4 * v237) & 0x6A361440 ^ v237 ^ ((4 * v237) ^ 0x900000) & v238;
  v240 = (4 * v238) & 0x6A361440 ^ 0x42260440 ^ ((4 * v238) ^ 0xA8D85100) & v238;
  v241 = v239 ^ (16 * v239) & 0x6A361440 ^ ((16 * v239) ^ 0x3400000) & v240;
  v242 = (16 * v240) & 0x6A361440 ^ 0x48161040 ^ ((16 * v240) ^ 0xA3614400) & v240;
  v243 = ((v241 ^ 0x68021440) << 8) & 0x6A361400 ^ v241 ^ 0x68021440 ^ (((v241 ^ 0x68021440) << 8) ^ 0x36144000) & v242;
  v244 = v236 ^ (2
               * ((v243 << 16) & 0x6A360000 ^ v243 ^ ((v243 << 16) ^ 0x14400000) & ((v242 << 8) & 0x6A360000 ^ 0x48220000 ^ ((v242 << 8) ^ 0x36140000) & v242)));
  v245 = ((((v244 ^ 0xD9055815) << 10) ^ 0xE8B68E27) & ((v244 >> 22) ^ 0xFFFFFFEF) | (v244 >> 22) & 0x1D8) ^ 0x8110A1C8;
  v246 = v120 + 442181838 + v235 - 1926392729 - ((2 * (v120 + 442181838 + v235)) & 0x1A5B28CE);
  HIDWORD(v215) = v244 ^ 2;
  LODWORD(v215) = v244 ^ 0x5428CC70;
  v247 = (__ROR4__(v244 ^ 0xD9055815, 13) ^ 0x2E11FD0B ^ ((v215 >> 2) - 1926392729 - ((2 * (v215 >> 2)) & 0x1A5B28CE)))
       + ((((2 * v245) & 0xA46D4DAC) - v245 + 768170281) ^ 0xDC11469);
  HIDWORD(v215) = v246 ^ 0xFFFFFFE7;
  LODWORD(v215) = v246 ^ v114;
  v248 = ((-3 * ((v246 >> 25) ^ 0x46)) ^ 0xFD) + 1738216259;
  v249 = (v248 ^ 0x1BFE056D) & (2 * (v248 & 0x169)) ^ (v248 & 0x169 | 0x83988C04);
  v250 = (2 * (v248 ^ 0x1BFE056D)) & 0x808A0C04 ^ 0x80888404 ^ ((2 * (v248 ^ 0x1BFE056D)) ^ 0x4251008) & (v248 ^ 0x1BFE056D);
  v251 = (4 * v249) & 0x2020C04 ^ v249 ^ ((4 * v249) ^ 0xE6E3010) & v250;
  v252 = (4 * v250) & 0x839B8C04 ^ 0x81918C04 ^ ((4 * v250) ^ 0xE6E3010) & v250;
  v253 = (16 * v251) & 0x839B8C00 ^ v251 ^ ((16 * v251) ^ 0x1918C040) & v252;
  v254 = (16 * v252) & 0x839B8C00 ^ 0x82030C04 ^ ((16 * v252) ^ 0x39B8C040) & v252;
  v255 = v253 ^ (v253 << 8) & 0x839B8C00 ^ ((v253 << 8) ^ 0x890C0400) & v254;
  v256 = v248 ^ (2
               * (((v255 ^ 0x821A8400) << 16) & 0x39B0000 ^ v255 ^ 0x821A8400 ^ (((v255 ^ 0x821A8400) << 16) ^ 0xC040000) & ((v254 << 8) & 0x39B0000 ^ 0x130000 ^ ((v254 << 8) ^ 0x1B8C0000) & v254)));
  v257 = (((v246 >> 11) ^ 0xF4C4D16E) & ((v246 << 21) ^ 0x703FFFFF) | (v246 << 21) & 0xB200000) ^ 0x2A8000;
  v258 = (((v244 ^ 0xD3F87475) - 184364128) ^ ((v244 ^ 0xC9B59C72) - 280020071) ^ ((v244 ^ 0x4E652475) + 1755284384))
       - (((v212 ^ 0xB824B43E) + 1205554114) ^ ((v212 ^ 0x1E52E4AC) - 508748972) ^ ((v212 ^ 0x2B5BC4F5) - 727434485))
       + 1249438813;
  v259 = (v258 ^ 0xA1A64BAB) & (2 * (v258 & 0xB58713A3)) ^ v258 & 0xB58713A3;
  v260 = ((2 * (v258 ^ 0xA2A26DAB)) ^ 0x2E4AFC10) & (v258 ^ 0xA2A26DAB) ^ (2 * (v258 ^ 0xA2A26DAB)) & 0x17257E08;
  v261 = (v260 ^ 0x6005C00) & (4 * v259) ^ v259;
  v262 = ((4 * (v260 ^ 0x11250208)) ^ 0x5C95F820) & (v260 ^ 0x11250208) ^ (4 * (v260 ^ 0x11250208)) & 0x17257E08;
  v263 = (v262 ^ 0x14057800) & (16 * v261) ^ v261;
  v264 = ((16 * (v262 ^ 0x3200608)) ^ 0x7257E080) & (v262 ^ 0x3200608) ^ (16 * (v262 ^ 0x3200608)) & 0x17257E00;
  v265 = v263 ^ 0x17257E08 ^ (v264 ^ 0x12056000) & (v263 << 8);
  v266 = v258 ^ (2
               * ((v265 << 16) & 0x17250000 ^ v265 ^ ((v265 << 16) ^ 0x7E080000) & (((v264 ^ 0x5201E08) << 8) & 0x17250000 ^ 0x12010000 ^ (((v264 ^ 0x5201E08) << 8) ^ 0x257E0000) & (v264 ^ 0x5201E08))));
  v267 = *(unsigned __int8 *)(v137 + (v256 ^ 0x9F529161));
  v268 = ((2 * v267) >> 6) ^ (((2 * v267) & 0xFE) >> 4) ^ ((v267 >> 7) & 0xFFFFFE01 | (2 * v267)) ^ 0xFFFFFFD7;
  v269 = ((v215 >> 6) ^ 0x6E093295 ^ (v257 - ((2 * v257) & 0x25AD8C92) - 1831418295))
       + (((v268 >> 2) | ((_BYTE)v268 << 6)) ^ 0x96CA3380 ^ (v246 << 7));
  v270 = v269 - 1926392729 - ((2 * v269) & 0x1A5B28CE);
  v271 = (((v176 ^ 0x5896FE14) + 709306390) ^ ((v176 ^ 0xF30C899) + 2111905433) ^ ((v176 ^ 0x57A58B14) + 628382998))
       + (((v244 ^ 0xDDEA4A78) - 82776685) ^ ((v244 ^ 0x198883D1) + 1064444988) ^ ((v244 ^ 0x904A05DB) - 1229938126))
       - 696396548
       + (((v266 ^ 0xD400A826) + 287255566) ^ ((v266 ^ 0xD1F39A1E) + 351018550) ^ ((v266 ^ 0xB23EDD8B) + 1998674337));
  v272 = (v271 ^ 0xD0A2C739) & (2 * (v271 & 0xD10AE839)) ^ v271 & 0xD10AE839;
  v273 = ((2 * (v271 ^ 0x52B3C769)) ^ 0x7725EA0) & (v271 ^ 0x52B3C769) ^ (2 * (v271 ^ 0x52B3C769)) & 0x83B92F50;
  v274 = (v273 ^ 0xB00010) & (4 * v272) ^ v272;
  v275 = ((4 * (v273 ^ 0x80892150)) ^ 0xEE4BD40) & (v273 ^ 0x80892150) ^ (4 * (v273 ^ 0x80892150)) & 0x83B92F50;
  v276 = v274 ^ 0x83B92F50 ^ (v275 ^ 0x2A02D40) & (16 * v274);
  v277 = (16 * (v275 ^ 0x81190210)) & 0x83B92F50 ^ 0x80290A50 ^ ((16 * (v275 ^ 0x81190210)) ^ 0x3B92F500) & (v275 ^ 0x81190210);
  v278 = (v276 << 8) & 0x83B92F00 ^ v276 ^ ((v276 << 8) ^ 0xB92F5000) & v277;
  v279 = (v278 << 16) & 0x3B90000 ^ v278 ^ ((v278 << 16) ^ 0x2F500000) & ((v277 << 8) & 0x3B90000 ^ 0x2900000 ^ ((v277 << 8) ^ 0xB92F0000) & v277);
  v280 = (((v246 ^ 0x305F012B) - 811532587) ^ ((v246 ^ 0x93C959F3) + 1815520781) ^ ((v246 ^ 0x2EBBCCBF) - 784059583))
       - v210
       + 101276471;
  v281 = (v280 ^ 0xC721B432) & (2 * (v280 & 0x87243930)) ^ v280 & 0x87243930;
  v282 = ((2 * (v280 ^ 0xCD299612)) ^ 0x941B5E44) & (v280 ^ 0xCD299612) ^ (2 * (v280 ^ 0xCD299612)) & 0x4A0DAF22;
  v283 = (v282 ^ 0x42050C22) & (4 * v281) ^ v281;
  v284 = ((4 * (v282 ^ 0x4A04A122)) ^ 0x2836BC88) & (v282 ^ 0x4A04A122) ^ (4 * (v282 ^ 0x4A04A122)) & 0x4A0DAF20;
  v285 = (v284 ^ 0x804AC00) & (16 * v283) ^ v283;
  v286 = ((16 * (v284 ^ 0x42090322)) ^ 0xA0DAF220) & (v284 ^ 0x42090322) ^ (16 * (v284 ^ 0x42090322)) & 0x4A0DAF20;
  v287 = v285 ^ 0x4A0DAF22 ^ (v286 ^ 0x8A202) & (v285 << 8);
  v288 = (v167 ^ 0xE1C59CCA ^ v246)
       + v222
       + (v280 ^ (2
                * ((v287 << 16) & 0x4A0D0000 ^ v287 ^ ((v287 << 16) ^ 0x2F220000) & (((v286 ^ 0x4A050D02) << 8) & 0x4A0D0000 ^ 0x42000000 ^ (((v286 ^ 0x4A050D02) << 8) ^ 0xDAF0000) & (v286 ^ 0x4A050D02)))) ^ 0x73F6774)
       + (v270 ^ v142);
  v289 = ((((v288 - 1926392729 - ((2 * v288) & 0x1A5B28CE)) ^ 0xADD0B4B5) + 1378831179) ^ (((v288
                                                                                           - 1926392729
                                                                                           - ((2 * v288) & 0x1A5B28CE)) ^ 0x86932DBE)
                                                                                         + 2037174850) ^ (((v288 - 1926392729 - ((2 * v288) & 0x1A5B28CE)) ^ 0xA66E0D6C) + 1502737044))
       + 1274623973;
  v290 = (v289 ^ 0x57CB0238) & (2 * (v289 & 0x97C22ABD)) ^ v289 & 0x97C22ABD;
  v291 = ((2 * (v289 ^ 0x55CF5262)) ^ 0x841AF1BE) & (v289 ^ 0x55CF5262) ^ (2 * (v289 ^ 0x55CF5262)) & 0xC20D78DE;
  v292 = (v291 ^ 0x8008709C) & (4 * v290) ^ v290;
  v293 = ((4 * (v291 ^ 0x42050841)) ^ 0x835E37C) & (v291 ^ 0x42050841) ^ (4 * (v291 ^ 0x42050841)) & 0xC20D78DC;
  v294 = (v293 ^ 0x56053) & (16 * v292) ^ v292;
  v295 = ((16 * (v293 ^ 0xC2081883)) ^ 0x20D78DF0) & (v293 ^ 0xC2081883) ^ (16 * (v293 ^ 0xC2081883)) & 0xC20D78D0;
  v296 = v294 ^ 0xC20D78DF ^ (v295 ^ 0x5080F) & (v294 << 8);
  v297 = v289 ^ (2
               * ((v296 << 16) & 0x420D0000 ^ v296 ^ ((v296 << 16) ^ 0x78DF0000) & (((v295 ^ 0xC208700F) << 8) & 0x420D0000 ^ 0x42050000 ^ (((v295 ^ 0xC208700F) << 8) ^ 0xD780000) & (v295 ^ 0xC208700F))));
  v298 = (((v297 ^ 0x46705CA0) - 1486820292) ^ ((v297 ^ 0xE42083F9) + 87044963) ^ ((v297 ^ 0x3192045A) - 796740414))
       - (((LODWORD(STACK[0x1638]) ^ 0x2D348256) - 758415958) ^ ((LODWORD(STACK[0x1638]) ^ 0x76506D8) - 124061400) ^ ((LODWORD(STACK[0x1638]) ^ 0xA77C10E9) + 1485041431));
  v299 = (v176 ^ v212 ^ (v247 - 1926392728 - ((2 * (v247 + 1)) & 0x1A5B28CE)) ^ v271 ^ (2 * v279) ^ 0xD2090B00) + v298;
  v300 = v299 - 1926392729 - ((2 * v299) & 0x1A5B28CE);
  v301 = STACK[0x13B8] & 0xB40E8C60;
  LOBYTE(v279) = ((2 * ((((2 * (v301 ^ 0x20)) | 0xB6) - (v301 ^ 0x20) - 91) ^ 0x42)) | 0xB4)
               - ((((2 * (v301 ^ 0x20)) | 0xB6) - (v301 ^ 0x20) - 91) ^ 0x42);
  v302 = v298 + v141 - 1926392729 - ((2 * (v298 + v141)) & 0x1A5B28CE);
  v303 = (-1070529983 - (v300 << 30)) ^ (v300 >> 2) ^ 0x17C588A7;
  v304 = (v303 | 0xE629B5DC) - (v303 | 0x19D64A23);
  LOBYTE(v301) = (((2 * (v301 ^ 0x20)) | 0xB2) - (v301 ^ 0x20) + 39) ^ 0xF9;
  v305 = (v300 ^ 0x8D2D9467) << (((((v167 & 0xD7 ^ 0x96) + 72 - ((2 * (v167 & 0xD7 ^ 0x96)) & 0xA) + 69) ^ 0x9E)
                                + (((v167 & 0xD7 ^ 0x45) - ((2 * (v167 & 0xD7 ^ 0x45)) & 8) - 92) ^ 0xB3)) & ((((((2 * v301) & 0xE0) - v301 - 113) ^ 0xEF) + ((v279 + 38) ^ 0xE3)) ^ 0x5B));
  v306 = ((v304 + 433474083) ^ 0xD2965A23)
       - 1926392729
       - 2 * (((v304 + 433474083) ^ 0xD2965A23) & 0xD2D9477 ^ (v304 + 433474083) & 0x10);
  HIDWORD(v215) = v302 ^ 0x467;
  LODWORD(v215) = v302 ^ v116;
  v307 = v215 >> 11;
  HIDWORD(v215) = v302 ^ 0xFFFFFFE7;
  LODWORD(v215) = v302 ^ v114;
  v308 = (v215 >> 6) - v307 - 1926392729 - ((2 * ((v215 >> 6) - v307)) & 0x1A5B28CE);
  v309 = ((((v302 << 7) ^ 0xA52069C8) & ((v302 >> 25) ^ 0xFFFFFFAD) | (v302 >> 25) & 0x37) ^ 0xCC15A5B1)
       - 133619228
       + (((v308 ^ 0x53C3D84) - 87833988) ^ ((v308 ^ 0xF7D93A81) + 136758655) ^ ((v308 ^ 0x7FC89362) - 2143851362));
  v310 = (v309 ^ 0xC1B47A37) & (2 * (v309 & 0x95247284)) ^ v309 & 0x95247284;
  v311 = ((2 * (v309 ^ 0xCBFCDA3F)) ^ 0xBDB15176) & (v309 ^ 0xCBFCDA3F) ^ (2 * (v309 ^ 0xCBFCDA3F)) & 0x5ED8A8BA;
  v312 = (v311 ^ 0x1C900030) & (4 * v310) ^ v310;
  v313 = ((4 * (v311 ^ 0x4248A889)) ^ 0x7B62A2EC) & (v311 ^ 0x4248A889) ^ (4 * (v311 ^ 0x4248A889)) & 0x5ED8A8B8;
  v314 = (v313 ^ 0x5A40A0A0) & (16 * v312) ^ v312;
  v315 = ((16 * (v313 ^ 0x4980813)) ^ 0xED8A8BB0) & (v313 ^ 0x4980813) ^ (16 * (v313 ^ 0x4980813)) & 0x5ED8A8B0;
  v316 = v314 ^ 0x5ED8A8BB ^ (v315 ^ 0x4C88880B) & (v314 << 8);
  v317 = v309 ^ (2
               * ((v316 << 16) & 0x5ED80000 ^ v316 ^ ((v316 << 16) ^ 0x28BB0000) & (((v315 ^ 0x1250200B) << 8) & 0x5ED80000 ^ 0x6500000 ^ (((v315 ^ 0x1250200B) << 8) ^ 0xD8A80000) & (v315 ^ 0x1250200B))));
  v318 = (((v167 ^ 0xBBE1E315) - 1512341471) ^ ((v167 ^ 0x62CA4D9F) + 2096115371) ^ ((v167 ^ 0xB5C3A627) - 1409694445))
       + 577530908
       + (((v317 ^ 0x4A81210) + 1340037755) ^ ((v317 ^ 0xE699882F) - 1376862138) ^ ((v317 ^ 0xDB94B9CD) - 1864109656));
  v319 = (v318 ^ 0xE7EC3EA3) & (2 * (v318 & 0xF7EEBCB2)) ^ v318 & 0xF7EEBCB2;
  v320 = ((2 * (v318 ^ 0x8B780783)) ^ 0xF92D7662) & (v318 ^ 0x8B780783) ^ (2 * (v318 ^ 0x8B780783)) & 0x7C96BB30;
  v321 = (v320 ^ 0x78043A01) & (4 * v319) ^ v319;
  v322 = ((4 * (v320 ^ 0x4928911)) ^ 0xF25AECC4) & (v320 ^ 0x4928911) ^ (4 * (v320 ^ 0x4928911)) & 0x7C96BB30;
  v323 = (v322 ^ 0x7012A800) & (16 * v321) ^ v321;
  v324 = ((16 * (v322 ^ 0xC841331)) ^ 0xC96BB310) & (v322 ^ 0xC841331) ^ (16 * (v322 ^ 0xC841331)) & 0x7C96BB30;
  v325 = v323 ^ 0x7C96BB31 ^ (v324 ^ 0x4802B321) & (v323 << 8);
  v326 = 1484682841
       - v210
       + (v210 ^ 0x72D26B98 ^ v246)
       + (v318 ^ (2
                * ((v325 << 16) & 0x7C960000 ^ v325 ^ ((v325 << 16) ^ 0x3B310000) & (((v324 ^ 0x34940821) << 8) & 0x7C960000 ^ 0x68040000 ^ (((v324 ^ 0x34940821) << 8) ^ 0x16BB0000) & (v324 ^ 0x34940821)))) ^ 0x7EE3CAD0);
  v327 = (v326 ^ 0xAFB17BEB) & (2 * (v326 & 0xAF8263C2)) ^ v326 & 0xAF8263C2;
  v328 = ((2 * (v326 ^ 0xF8B53FEB)) ^ 0xAE6EB852) & (v326 ^ 0xF8B53FEB) ^ (2 * (v326 ^ 0xF8B53FEB)) & 0x57375C28;
  v329 = (v328 ^ 0x6021800) & (4 * v327) ^ v327;
  v330 = ((4 * (v328 ^ 0x51114429)) ^ 0x5CDD70A4) & (v328 ^ 0x51114429) ^ (4 * (v328 ^ 0x51114429)) & 0x57375C28;
  v331 = (v330 ^ 0x54155029) & (16 * v329) ^ v329;
  v332 = ((16 * (v330 ^ 0x3220C09)) ^ 0x7375C290) & (v330 ^ 0x3220C09) ^ (16 * (v330 ^ 0x3220C09)) & 0x57375C20;
  v333 = v331 ^ 0x57375C29 ^ (v332 ^ 0x53354000) & (v331 << 8);
  v334 = v326 ^ LODWORD(STACK[0x1320]) ^ (2
                                        * (v333 ^ LODWORD(STACK[0x1318]) ^ (v333 << 16) & 0x57370000 ^ ((v333 << 16) ^ 0x5C290000) & (((v332 ^ 0x4021C29) << 8) & 0x57370000 ^ 0x40230000 ^ (((v332 ^ 0x4021C29) << 8) ^ 0x375C0000) & (v332 ^ 0x4021C29))));
  v335 = (v300 ^ 0x8D2D9467) << ((((2 * (((v212 & 0xA ^ 0xA) - ((2 * (v212 & 0xA ^ 0xA)) & 4) - 57) ^ 0xDF)) | 4)
                                - (((v212 & 0xA ^ 0xA) - ((2 * (v212 & 0xA ^ 0xA)) & 4) - 57) ^ 0xDF)
                                + (((-2 - ((~(v212 & 0xA) | 0x89) + (v212 & 8 | 0x76))) ^ 8 | 0x55) ^ 7)
                                + 6) & 0xA);
  v336 = (v335 - 1926392729 - ((2 * v335) & 0x1A5B28CE)) ^ (v300 >> 22);
  v337 = STACK[0x1894];
  v338 = (v300 >> 13) ^ 0x8D29FD0B ^ (v305 - 1926392729 - ((2 * v305) & 0x1A5B28CE)) ^ ((v336 ^ LODWORD(STACK[0x16A4]))
                                                                                      - 1926392729
                                                                                      - 2
                                                                                      * ((v336 ^ LODWORD(STACK[0x16A4])) & STACK[0x1894] ^ v336 & 8)) ^ v306;
  v339 = (v334 ^ 0xA9777A69)
       + (v266 ^ ((v244 ^ 0xABD7338D) - (v300 ^ v212) + (v300 ^ 0x8D2D9467) + 1) ^ 0x3AE07BD4 ^ (v338
                                                                                               - 1926392729
                                                                                               - ((2 * v338) & 0x1A5B28CE)));
  v340 = (((v176 ^ 0xEFC08FB9) - 1659807303) ^ ((v176 ^ 0x325A5BB9) + 1082887609) ^ ((v176 ^ 0xDD996999) - 1354186855))
       + 1906586597
       + (((v334 ^ 0xF91078FF) + 582314255) ^ ((v334 ^ 0xA94BABEA) + 1928247836) ^ ((v334 ^ 0xF92CA97C) + 579451022));
  v341 = (v340 ^ 0xA626F6E1) & (2 * (v340 & 0xA8B6F4E9)) ^ v340 & 0xA8B6F4E9;
  v342 = ((2 * (v340 ^ 0xF76E57A1)) ^ 0xBFB14690) & (v340 ^ 0xF76E57A1) ^ (2 * (v340 ^ 0xF76E57A1)) & 0x5FD8A348;
  v343 = (v342 ^ 0x7900200) & (4 * v341) ^ v341;
  v344 = ((4 * (v342 ^ 0x4048A148)) ^ 0x7F628D20) & (v342 ^ 0x4048A148) ^ (4 * (v342 ^ 0x4048A148)) & 0x5FD8A348;
  v345 = v343 ^ 0x5FD8A348 ^ (v344 ^ 0x5F408100) & (16 * v343);
  v346 = (16 * (v344 ^ 0x982248)) & 0x5FD8A340 ^ 0x2508348 ^ ((16 * (v344 ^ 0x982248)) ^ 0xFD8A3480) & (v344 ^ 0x982248);
  v347 = (v345 << 8) & 0x5FD8A300 ^ v345 ^ ((v345 << 8) ^ 0xD8A34800) & v346;
  v348 = v340 ^ (2
               * ((v347 << 16) & 0x5FD80000 ^ v347 ^ ((v347 << 16) ^ 0x23480000) & ((v346 << 8) & 0x5FD80000 ^ 0x7580000 ^ ((v346 << 8) ^ 0x58A30000) & v346)));
  v349 = v339 - 1926392729 - ((2 * v339) & 0x1A5B28CE);
  v350 = (((v302 ^ 0x1B6036F8) - 459290360) ^ ((v302 ^ 0xDE747FD5) + 562790443) ^ ((v302 ^ 0x4839DD4A) - 1211751754))
       + 1801506920
       + (((v348 ^ 0xCE16C57C) + 475208862) ^ ((v348 ^ 0xEFF6F74C) + 1035153070) ^ ((v348 ^ 0x81778049) + 1395808681));
  v351 = (v350 ^ 0x8EF91B74) & (2 * (v350 & 0xAEFA5866)) ^ v350 & 0xAEFA5866;
  v352 = ((2 * (v350 ^ 0xD2AD2BB0)) ^ 0xF8AEE7AC) & (v350 ^ 0xD2AD2BB0) ^ (2 * (v350 ^ 0xD2AD2BB0)) & 0x7C5773D6;
  v353 = (v352 ^ 0x780273C2) & (4 * v351) ^ v351;
  v354 = ((4 * (v352 ^ 0x4511052)) ^ 0xF15DCF58) & (v352 ^ 0x4511052) ^ (4 * (v352 ^ 0x4511052)) & 0x7C5773D4;
  v355 = (v354 ^ 0x70554340) & (16 * v353) ^ v353;
  v356 = ((16 * (v354 ^ 0xC023086)) ^ 0xC5773D60) & (v354 ^ 0xC023086) ^ (16 * (v354 ^ 0xC023086)) & 0x7C5773D0;
  v357 = v355 ^ 0x7C5773D6 ^ (v356 ^ 0x44573100) & (v355 << 8);
  HIDWORD(v215) = v348 ^ 0x279;
  LODWORD(v215) = v348 ^ 0xA097B000;
  v358 = v348 ^ 0x2DBA261E;
  v359 = __ROR4__(v348 ^ 0x2DBA261E, 6) ^ 0x13192236 ^ ((v215 >> 11) - 1926392729 - ((2 * (v215 >> 11)) & 0x1A5B28CE));
  v360 = __PAIR64__(v339, __ROR4__(v348, 25));
  v361 = (v246 ^ 0x8D2D9467)
       + (v348 ^ 0x2DBA261E ^ v246)
       + (((v360 ^ 0xB426C32F) + v359 + 1) ^ v210)
       + 325030957
       + (v350 ^ (2
                * ((v357 << 16) & 0x7C570000 ^ v357 ^ ((v357 << 16) ^ 0x73D60000) & (((v356 ^ 0x38004296) << 8) & 0x7C570000 ^ 0x28040000 ^ (((v356 ^ 0x38004296) << 8) ^ 0x57730000) & (v356 ^ 0x38004296)))) ^ 0x49074035);
  v362 = (v361 ^ 0xD60D9D12) & (2 * (v361 & 0xD02DDE40)) ^ v361 & 0xD02DDE40;
  v363 = ((2 * (v361 ^ 0x76468992)) ^ 0x4CD6AFA4) & (v361 ^ 0x76468992) ^ (2 * (v361 ^ 0x76468992)) & 0xA66B57D2;
  v364 = (v363 ^ 0x420300) & (4 * v362) ^ v362;
  v365 = ((4 * (v363 ^ 0xA2295052)) ^ 0x99AD5F48) & (v363 ^ 0xA2295052) ^ (4 * (v363 ^ 0xA2295052)) & 0xA66B57D0;
  v366 = (v365 ^ 0x80295740) & (16 * v364) ^ v364;
  v367 = ((16 * (v365 ^ 0x26420092)) ^ 0x66B57D20) & (v365 ^ 0x26420092) ^ (16 * (v365 ^ 0x26420092)) & 0xA66B57D0;
  v368 = v366 ^ 0xA66B57D2 ^ (v367 ^ 0x262155D2) & (v366 << 8);
  v369 = v361 ^ (2
               * ((v368 << 16) & 0x266B0000 ^ v368 ^ ((v368 << 16) ^ 0x57D20000) & (((v367 ^ 0x804A02D2) << 8) & 0x266B0000 ^ 0x4280000 ^ (((v367 ^ 0x804A02D2) << 8) ^ 0x6B570000) & (v367 ^ 0x804A02D2))));
  v370 = (((v369 ^ 0xA49BB851) + 1177985582) ^ ((v369 ^ 0x6828B235) - 1970952118) ^ ((v369 ^ 0x5CCC7B80) - 1100914179))
       + (((LODWORD(STACK[0x16D8]) ^ 0x5DADC545) - 1571669317) ^ ((LODWORD(STACK[0x16D8]) ^ 0x82B876E8) + 2101840152) ^ ((LODWORD(STACK[0x16D8]) ^ 0x523827CA) - 1379411914));
  LODWORD(v360) = v339;
  v371 = (((v244 ^ 0xACEDA2DD) - 1978202824) ^ ((v244 ^ 0xFEAAA38D) - 665844632) ^ ((v244 ^ 0x66FCD22) + 546663113))
       + 884363676
       + (v300 ^ 0x8D2D9467)
       + (((v300 ^ 0x76C9FDB6) - 1992949174) ^ ((v300 ^ 0x7B9252CE) - 2073187022) ^ ((v300 ^ 0x80763B1F) + 2139735265))
       + v339
       + (v360 >> 22);
  HIDWORD(v360) = v339;
  LODWORD(v360) = v339;
  v372 = v371 + ((v360 >> 2) ^ __ROR4__(v339, 13)) - (v349 ^ v244 ^ 0xD9055815) + v370;
  v373 = v372 - 1926392727 - ((2 * v372) & 0x1A5B28CE);
  v374 = (((v212 ^ 0xF3043682) + 217827710) ^ ((v212 ^ 0x7F9135C) - 133763932) ^ ((v212 ^ 0x79D0B1B9) - 2043720121))
       - 1154404635
       + v370;
  v375 = (v374 ^ 0xCB57AD4F) & (2 * (v374 & 0xEC578E50)) ^ v374 & 0xEC578E50;
  v376 = ((2 * (v374 ^ 0xD35BA5CF)) ^ 0x7E18573E) & (v374 ^ 0xD35BA5CF) ^ (2 * (v374 ^ 0xD35BA5CF)) & 0x3F0C2B9E;
  v377 = (v376 ^ 0x32080300) & (4 * v375) ^ v375;
  v378 = ((4 * (v376 ^ 0x1042881)) ^ 0xFC30AE7C) & (v376 ^ 0x1042881) ^ (4 * (v376 ^ 0x1042881)) & 0x3F0C2B9C;
  v379 = (v378 ^ 0x3C002A00) & (16 * v377) ^ v377;
  v380 = ((16 * (v378 ^ 0x30C0183)) ^ 0xF0C2B9F0) & (v378 ^ 0x30C0183) ^ (16 * (v378 ^ 0x30C0183)) & 0x3F0C2B90;
  v381 = v379 ^ 0x3F0C2B9F ^ (v380 ^ 0x3000290F) & (v379 << 8);
  v382 = v374 ^ (2
               * ((v381 << 16) & 0x3F0C0000 ^ v381 ^ ((v381 << 16) ^ 0x2B9F0000) & (((v380 ^ 0xF0C020F) << 8) & 0x3F0C0000 ^ 0x33040000 ^ (((v380 ^ 0xF0C020F) << 8) ^ 0xC2B0000) & (v380 ^ 0xF0C020F))));
  v383 = v373 - 2;
  v384 = (((v373 - 2) >> 2) - (v373 << 30) + 0x40000000) ^ 0x9C359BF7;
  v385 = v339
       - (((v300 ^ 0x85AD88C9) + 2052224823) ^ ((v300 ^ 0x3AD61CC) - 61694412) ^ ((v300 ^ 0xB2D7D62) - 187530594))
       - 2146445830;
  v386 = (v385 ^ 0xFAE8159E) & (2 * (v385 & 0xF2C2959F)) ^ v385 & 0xF2C2959F;
  v387 = ((2 * (v385 ^ 0xDFEC3788)) ^ 0x5A5D442E) & (v385 ^ 0xDFEC3788) ^ (2 * (v385 ^ 0xDFEC3788)) & 0x2D2EA216;
  v388 = (v387 ^ 0x282C0005) & (4 * v386) ^ v386;
  v389 = ((4 * (v387 ^ 0x2522A211)) ^ 0xB4BA885C) & (v387 ^ 0x2522A211) ^ (4 * (v387 ^ 0x2522A211)) & 0x2D2EA214;
  v390 = (v389 ^ 0x242A8010) & (16 * v388) ^ v388;
  v391 = ((16 * (v389 ^ 0x9042203)) ^ 0xD2EA2170) & (v389 ^ 0x9042203) ^ (16 * (v389 ^ 0x9042203)) & 0x2D2EA210;
  v392 = v390 ^ 0x2D2EA217 ^ (v391 ^ 0x2A2007) & (v390 << 8);
  v393 = (v392 << 16) & 0x2D2E0000 ^ v392 ^ ((v392 << 16) ^ 0x22170000) & (((v391 ^ 0x2D048207) << 8) & 0x2D2E0000 ^ 0x10C0000 ^ (((v391 ^ 0x2D048207) << 8) ^ 0x2EA20000) & (v391 ^ 0x2D048207));
  HIDWORD(v360) = v383 ^ 0x2D9467;
  LODWORD(v360) = v383 ^ 0x8D000000;
  v394 = v360 >> 22;
  v395 = v382 ^ 0x497A4D09;
  v396 = ((((v382 ^ 0x497A4D09) << 7) ^ 0x660C7AE6) & ((v382 >> 25) ^ 0xFFFFFF8D) | (v382 >> 25) & 0x99999999) ^ 0x12689;
  HIDWORD(v360) = v383 ^ 0x1467;
  LODWORD(v360) = v383 ^ 0x8D2D8000;
  v397 = v360 >> 13;
  HIDWORD(v360) = v382 ^ 0x16E;
  LODWORD(v360) = v382 ^ 0xC457D800;
  v398 = ((((2 * v384) & 0xFF98679E) - v384 - 2144089040) ^ 0x3F4D32DE)
       - (v397
        + v394)
       + (v385 ^ (2 * v393) ^ 0x9A41BA29 ^ ((v383 ^ v349)
                                          - (v383 ^ v300)
                                          - 1926392729
                                          - ((2 * ((v383 ^ v349) - (v383 ^ v300))) & 0x1A5B28CE)))
       + 1;
  v399 = v398 - 1926392729 - ((2 * v398) & 0x1A5B28CE);
  v400 = (v302 ^ 0x72D26B98)
       - (v382 ^ 0x497A4D09 ^ v302)
       + (v382 ^ 0x497A4D09 ^ v348 ^ 0x2DBA261E)
       + (v246 ^ 0x8D2D9467 ^ ((((((v382 ^ 0x497A4D09) << 26) ^ 0x19372CCB) & ((v382 >> 6) ^ 0xFC26318E) | (v382 >> 6) & 0x2C8D334) ^ 0x87377FEF)
                             - (v360 >> 11)
                             + ((((2 * v396) | 0xF7FE2FE8) - v396 - 2080315380) ^ 0x74C787E4)
                             + 1))
       + 1;
  v401 = (v400 - ((2 * v400 + 11981188) & 0x1A5B28CE) + 1837694249) ^ LODWORD(STACK[0x1808]);
  v402 = (((v399 ^ 0xBFFBB227) + 1074023897) ^ ((v399 ^ 0x86ACAFEC) + 2035503124) ^ ((v399 ^ 0xB47A89AC) + 1267037780))
       - 1869814034
       + v401;
  v403 = (2 * (v402 & 0xFCA0AD79 ^ 0xC82AAAA1)) & 0xC8000AA0 ^ v402 & 0xFCA0AD79 ^ 0xC82AAAA1 ^ ((2
                                                                                                * (v402 & 0xFCA0AD79 ^ 0xC82AAAA1)) ^ 0x90555542) & (v402 ^ 0x348A07D8);
  v404 = (2 * (v402 ^ 0x348A07D8)) & 0xC82AAAA0 ^ 0x482AAAA1 ^ ((2 * (v402 ^ 0x348A07D8)) ^ 0x90555542) & (v402 ^ 0x348A07D8);
  v405 = (4 * v403) & 0xC82AAAA0 ^ v403 ^ ((4 * v403) ^ 0x20AAAA84) & v404;
  v406 = (4 * v404) & 0xC82AAAA0 ^ 0xC8000021 ^ ((4 * v404) ^ 0x20AAAA84) & v404;
  v407 = (16 * v405) & 0xC82AAAA0 ^ v405 ^ ((16 * v405) ^ 0x80000210) & v406;
  v408 = (16 * v406) & 0xC82AAAA0 ^ 0x480000A1 ^ ((16 * v406) ^ 0x82AAAA10) & v406;
  v409 = v407 ^ 0x288880 ^ (v407 << 8) & 0xC82AAA00 ^ ((v407 << 8) ^ 0x22100) & v408;
  v410 = (v409 << 16) & 0x482A0000 ^ v409 ^ ((v409 << 16) ^ 0x2AA10000) & ((v408 << 8) & 0x482A0000 ^ ((v408 << 8) ^ 0x2AAA0000) & v408 ^ 0x40000000);
  v411 = (((v244 ^ 0xE91A379F) - 807366538) ^ ((v244 ^ 0x9C592C40) - 1163686997) ^ ((v244 ^ 0x216BD7AD) + 126971976))
       + 137363897
       + v401;
  v412 = (v411 ^ 0xD4F9D22D) & (2 * (v411 & 0x84FD92AE)) ^ v411 & 0x84FD92AE;
  v413 = ((2 * (v411 ^ 0xD4CAD375)) ^ 0xA06E83B6) & (v411 ^ 0xD4CAD375) ^ (2 * (v411 ^ 0xD4CAD375)) & 0x503741DA;
  v414 = (v413 ^ 0x260190) & (4 * v412) ^ v412;
  v415 = ((4 * (v413 ^ 0x50114049)) ^ 0x40DD076C) & (v413 ^ 0x50114049) ^ (4 * (v413 ^ 0x50114049)) & 0x503741D8;
  v416 = (v415 ^ 0x40150153) & (16 * v414) ^ v414;
  v417 = ((16 * (v415 ^ 0x10224093)) ^ 0x3741DB0) & (v415 ^ 0x10224093) ^ (16 * (v415 ^ 0x10224093)) & 0x503741D0;
  v418 = v416 ^ 0x503741DB ^ (v417 ^ 0x34014B) & (v416 << 8);
  v419 = v411 ^ (2
               * ((v418 << 16) & 0x50370000 ^ v418 ^ ((v418 << 16) ^ 0x41DB0000) & (((v417 ^ 0x5003404B) << 8) & 0x50370000 ^ 0x40360000 ^ (((v417 ^ 0x5003404B) << 8) ^ 0x37410000) & (v417 ^ 0x5003404B))));
  v420 = v402 ^ (2 * v410);
  HIDWORD(v360) = v420 ^ 0x183B;
  LODWORD(v360) = v420 ^ 0x7CB5E000;
  v421 = v360 >> 13;
  HIDWORD(v360) = v402 ^ ~(2 * v410);
  LODWORD(v360) = v420 ^ 0x7CB5F838;
  v422 = v421 + (v360 >> 2);
  HIDWORD(v360) = v420 ^ 0x35F83B;
  LODWORD(v360) = v420 ^ 0x7C800000;
  v423 = v422 + (v360 >> 22);
  v424 = ((v419 >> 6) ^ 0xB161A955) & ((v419 << 26) ^ 0x9BFFFFFF);
  v425 = (((v419 >> 20) & 0xE0 | (v419 >> 28)) ^ 0xD7) + 832008316;
  v426 = ((2 * (v425 & 5)) | v425 & 5) ^ (2 * (v425 & 5)) & (v425 ^ 0x9DB7E5BB);
  v427 = (2 * (v425 ^ 0x9DB7E5BB)) & 0x53DF73BE ^ 0x50411082 ^ ((2 * (v425 ^ 0x9DB7E5BB)) ^ 0xA420857C) & (v425 ^ 0x9DB7E5BB);
  v428 = v426 ^ (4 * v426) ^ ((unsigned __int16)(4 * (v426 & 0xF)) | 0xC000) & (unsigned __int16)v427;
  v429 = (4 * v427) & 0x53DF73BC ^ 0x10823106 ^ ((4 * v427) ^ 0x4F7DCEF8) & v427;
  v430 = (16 * v428) & 0x53DF73B0 ^ v428 ^ ((16 * v428) ^ 0x70000) & v429;
  v431 = (16 * v429) & 0x53DF73B0 ^ 0x4208401E ^ ((16 * v429) ^ 0x3DF73BE0) & v429;
  v432 = v430 ^ 0x508803BE ^ (v430 << 8) & 0x53DF7300 ^ ((v430 << 8) ^ 0x7700000) & v431;
  v433 = (v432 << 16) & 0x53DF0000 ^ v432 ^ ((v432 << 16) ^ 0x73BE0000) & ((v431 << 8) & 0x53DF0000 ^ 0x8C0000 ^ ((v431 << 8) ^ 0x5F730000) & v431);
  v434 = v419 ^ 0x2998857F;
  HIDWORD(v360) = v419 ^ 0x2998857F;
  LODWORD(v360) = v419 ^ 0x2998857F;
  v435 = v425 ^ (2 * v433);
  v436 = ((((v360 >> 11) ^ 0x93602FC) - 149566249) ^ (((v360 >> 11) ^ 0x26670A41) - 666581908) ^ (((v360 >> 11) ^ 0xA3A0AD0F)
                                                                                                + 1568891686))
       - 599892975
       + (((v424 & 0x234A6F68 ^ 0x424321) + ((v419 << 26) & 0x4C000000 | v424 & 0x90B59097) - 1) ^ 0xF3B13E31);
  v437 = v436 & 0xB0EF3856 ^ 0x425AC430 ^ (v436 ^ 0xB2EFBC46) & (2 * (v436 & 0xB0EF3856));
  v438 = ((2 * (v436 ^ 0xF2B5FC66)) ^ 0x84B58860) & (v436 ^ 0xF2B5FC66) ^ (2 * (v436 ^ 0xF2B5FC66)) & 0x425AC430;
  v439 = v438 & 0xA9208A8C ^ v437 ^ ((4 * v437) ^ 0xA04B9A4C) & (v438 ^ 0x108020);
  v440 = ((4 * v438) ^ 0xA9628A0C) & (v438 ^ 0x108020) ^ v438 & 0xA9208A8C;
  v441 = v440 & 0xA9208A8C ^ v439 ^ ((16 * v439) ^ 0x8C84C98C) & (v440 ^ 0x8000);
  v442 = ((16 * v440) ^ 0xA9288A8C) & (v440 ^ 0x8000) ^ v440 & 0xA9208A8C;
  v443 = v441 ^ v442 & 0xA9208A8C ^ ((v441 << 8) ^ 0xF3E4BA8C) & (v442 ^ 0x8030);
  v444 = ((v442 << 8) ^ 0xA9A08A8C) & (v442 ^ 0x8030) ^ v442 & 0xA9208A8C;
  v445 = v443 ^ v444 & 0x29208A8C ^ ((v443 << 16) ^ 0xED108A8D) & (v444 ^ 0x425A0000) ^ ((v443 << 16) ^ 0xED108A8D) & 0x425A8000;
  LOBYTE(v435) = *(_BYTE *)(STACK[0x18B8] + (v435 ^ 0xCEEA7179)) - 38;
  v446 = (((v419 ^ 0xD3A67824) + 96535205) ^ ((v419 ^ 0x86F85F) - 689863968) ^ ((v419 ^ 0x77959163) - 1577915420))
       - (((v382 ^ 0x2E6421A3) - 1730047146) ^ ((v382 ^ 0xDEB258DE) + 1748494889) ^ ((v382 ^ 0x3481A013) - 2113662234))
       + 901525293;
  v447 = (v446 ^ 0xC80B989A) & (2 * (v446 & 0xCA43D0D3)) ^ v446 & 0xCA43D0D3;
  v448 = ((2 * (v446 ^ 0xDC8B183C)) ^ 0x2D9191DE) & (v446 ^ 0xDC8B183C) ^ (2 * (v446 ^ 0xDC8B183C)) & 0x16C8C8EE;
  v449 = (v448 ^ 0x4088ED) & (4 * v447) ^ v447;
  v450 = ((4 * (v448 ^ 0x12484821)) ^ 0x5B2323BC) & (v448 ^ 0x12484821) ^ (4 * (v448 ^ 0x12484821)) & 0x16C8C8EC;
  v451 = (v450 ^ 0x120000A3) & (16 * v449) ^ v449;
  v452 = ((16 * (v450 ^ 0x4C8C843)) ^ 0x6C8C8EF0) & (v450 ^ 0x4C8C843) ^ (16 * (v450 ^ 0x4C8C843)) & 0x16C8C8E0;
  v453 = v451 ^ 0x16C8C8EF ^ (v452 ^ 0x488880F) & (v451 << 8);
  v454 = v446 ^ (2
               * ((v453 << 16) & 0x16C80000 ^ v453 ^ ((v453 << 16) ^ 0x48EF0000) & (((v452 ^ 0x1240400F) << 8) & 0x16C80000 ^ 0x16000000 ^ (((v452 ^ 0x1240400F) << 8) ^ 0x48C80000) & (v452 ^ 0x1240400F))));
  v455 = (((v419 ^ v348 ^ 0x2DBA261E ^ 0xFF4AC1A2) - 1543491770) ^ ((v419 ^ v348 ^ 0x2DBA261E ^ 0x145172FF) + 1327209497) ^ ((v419 ^ v348 ^ 0x2DBA261E ^ 0xC2833622) - 1714825018))
       + 772457590
       + (((v454 ^ 0x63156BEC) - 142261894) ^ ((v454 ^ 0x2E6FB3FF) - 1157654165) ^ ((v454 ^ 0xAB38991E) + 1068020620));
  v456 = (2 * (v455 & 0xEC506458)) & (v455 ^ 0x49DAD448) ^ v455 & 0xEC506458 ^ ((2 * (v455 & 0xEC506458)) & 0x80808010 | 0x25020000);
  v457 = (2 * (v455 ^ 0x49DAD448)) & 0xA58AB010 ^ 0xA48A9010 ^ ((2 * (v455 ^ 0x49DAD448)) ^ 0x4B156020) & (v455 ^ 0x49DAD448);
  v458 = (4 * v456) & 0xA58AB010 ^ v456 ^ ((4 * v456) ^ 0x94080000) & v457;
  v459 = (4 * v457) & 0xA58AB010 ^ 0x21803010 ^ ((4 * v457) ^ 0x962AC040) & v457;
  v460 = (16 * v458) & 0xA58AB010 ^ v458 ^ ((16 * v458) ^ 0x10A00000) & v459;
  v461 = (16 * v459) & 0xA58AB010 ^ 0xA500B010 ^ ((16 * v459) ^ 0x58AB0100) & v459;
  v462 = v460 ^ (v460 << 8) & 0xA58AB000 ^ ((v460 << 8) ^ 0x8A000000) & v461;
  v463 = v423 ^ ((v383 ^ 0x72D26B98) + (v420 ^ 0x834A07C4) + (v383 ^ 0xF1986C5C ^ v420) + 2);
  v464 = ((v419 ^ 0xA4B51118) << (((v348 >> 25) & 7 ^ 7) + ((v348 >> 25) & 7))) ^ (v435 ^ (v435 >> 5) ^ (v435 >> 4));
  v465 = (v302 ^ 0x8D2D9467)
       + ((v464 - 1926392729 - ((2 * v464) & 0x1A5B28CE)) ^ v436 ^ (2 * v445) ^ 0x4688DB4C)
       + (v348 ^ v455 ^ (2
                       * (((v462 ^ 0x8400B010) << 16) & 0x258A0000 ^ v462 ^ 0x8400B010 ^ (((v462 ^ 0x8400B010) << 16) ^ 0x30100000) & ((v461 << 8) & 0x258A0000 ^ 0x250A0000 ^ ((v461 << 8) ^ 0x8AB00000) & v461))) ^ 0x47D2B601)
       + 1;
  v466 = (v465 - ((2 * v465 + 438075116) & 0x1A5B28CE) + 2050741213) ^ LODWORD(STACK[0x1708]);
  v467 = (((v300 ^ 0x4A3F2C0A) - 1245654026) ^ ((v300 ^ 0xFEC0B84D) + 20924339) ^ ((v300 ^ 0x39D20020) - 970063904))
       - 1244903811
       + v466;
  v468 = (v467 ^ 0x97712DC0) & (2 * (v467 & 0xD7614DEA)) ^ v467 & 0xD7614DEA;
  v469 = ((2 * (v467 ^ 0x31B32F00)) ^ 0xCDA4C5D4) & (v467 ^ 0x31B32F00) ^ (2 * (v467 ^ 0x31B32F00)) & 0xE6D262EA;
  v470 = (v469 ^ 0xC48040C0) & (4 * v468) ^ v468;
  v471 = ((4 * (v469 ^ 0x2252222A)) ^ 0x9B498BA8) & (v469 ^ 0x2252222A) ^ (4 * (v469 ^ 0x2252222A)) & 0xE6D262E8;
  v472 = (v471 ^ 0x824002A2) & (16 * v470) ^ v470;
  v473 = ((16 * (v471 ^ 0x64926042)) ^ 0x6D262EA0) & (v471 ^ 0x64926042) ^ (16 * (v471 ^ 0x64926042)) & 0xE6D262E0;
  v474 = v472 ^ 0xE6D262EA ^ (v473 ^ 0x6402224A) & (v472 << 8);
  v475 = (v474 << 16) & 0x66D20000 ^ v474 ^ ((v474 << 16) ^ 0x62EA0000) & (((v473 ^ 0x82D0404A) << 8) & 0xE6D20000 ^ 0x24900000 ^ (((v473 ^ 0x82D0404A) << 8) ^ 0xD2620000) & (v473 ^ 0x82D0404A));
  v476 = (((v463 ^ 0x2953A93E) + 1535230631) ^ ((v463 ^ 0x7FCE5141) + 219953882) ^ ((v463 ^ 0x569DF87F) + 609194984))
       - 191460118
       + v466;
  v477 = (v476 ^ 0x1E868679) & (2 * (v476 & 0x9897077D)) ^ v476 & 0x9897077D;
  v478 = ((2 * (v476 ^ 0xE8484A9)) ^ 0x2C2707A8) & (v476 ^ 0xE8484A9) ^ (2 * (v476 ^ 0xE8484A9)) & 0x961383D4;
  v479 = (v478 ^ 0x14008380) & (4 * v477) ^ v477;
  v480 = ((4 * (v478 ^ 0x92108054)) ^ 0x584E0F50) & (v478 ^ 0x92108054) ^ (4 * (v478 ^ 0x92108054)) & 0x961383D4;
  v481 = (v480 ^ 0x10020354) & (16 * v479) ^ v479;
  v482 = ((16 * (v480 ^ 0x86118084)) ^ 0x61383D40) & (v480 ^ 0x86118084) ^ (16 * (v480 ^ 0x86118084)) & 0x961383D0;
  v483 = v481 ^ 0x961383D4 ^ (v482 ^ 0x100194) & (v481 << 8);
  v484 = v476 ^ (2
               * ((v483 << 16) & 0x16130000 ^ v483 ^ ((v483 << 16) ^ 0x3D40000) & (((v482 ^ 0x96038294) << 8) & 0x16130000 ^ 0x4100000 ^ (((v482 ^ 0x96038294) << 8) ^ 0x13830000) & (v482 ^ 0x96038294))));
  v485 = ((((v484 ^ 0x3DBD94B2) << 19) ^ 0xD540F2A0) & ((v484 >> 13) ^ 0xFFFE7E6F) | (v484 >> 13) & 0x70D5F) ^ 0x89860C4F;
  HIDWORD(v360) = v484 ^ 1;
  LODWORD(v360) = v484 ^ 0xB09000D4;
  v486 = ((((v484 ^ 0x3DBD94B2) << 10) ^ 0x4EFC29E) & ((v484 >> 22) ^ 0xFFFFFD1C) | (v484 >> 22) & 0x161) ^ 0x8418100;
  v487 = (v360 >> 2) + ((((2 * v485) | 0x1488CFB0) - v485 - 172255192) ^ 0xA4062C8) + 1;
  v488 = ((v486 - ((2 * v486) & 0xF6B992B0) - 77805224) ^ 0xBE5CE979)
       + ((v487 - 1926392729 - ((2 * v487) & 0x1A5B28CE)) ^ 0x8D2D9467);
  v489 = v467 ^ (2 * v475);
  v490 = (((v489 ^ 0x526C1C59) << 26) ^ 0x3DB1ED1E) & ((v489 >> 6) ^ 0xFC8EE93E) | (v489 >> 6) & 0x24E12E1;
  v491 = (((((v489 ^ 0x526C1C59) << 26) ^ 0x3DB1ED1E) & ((v489 >> 6) ^ 0xFC8EE93E) & 0xE49C5F8F | (v489 >> 6) & 0xC1281) ^ 0xA0905F8F)
       + (v490 ^ 0x440E0020)
       - ((v490 ^ 0x440E0020) & 0xE49C5F8F);
  v492 = (((v484 ^ 0x8C48B096) + 1309334492) ^ ((v484 ^ 0xABDD6506) + 1772031564) ^ ((v484 ^ 0x9705D545) + 1430765065))
       - (((v420 ^ 0x54BE73D2) + 1524228210) ^ ((v420 ^ 0xB2868960) - 1126098236) ^ ((v420 ^ 0x9A8D0289) - 1796566741));
  HIDWORD(v360) = v489 ^ 0x141883E;
  LODWORD(v360) = v489;
  v493 = (((v360 >> 25) ^ 0xFFFFFF90)
        + ((((v489 >> 11) ^ 0x7802933E) & ((v489 << 21) ^ 0xFBBFFFFF) | (v489 << 21) & 0x87FFFFFF) ^ 0x7CB6CB9E ^ v491)
        + 1) ^ v358;
  LODWORD(STACK[0x1658]) = v493;
  v494 = ((v489 ^ 0x526C1C59 ^ v395)
        - (((v419 ^ 0x289E6322) - 17229405) ^ ((v419 ^ 0x3866A66A) - 301867797) ^ ((v419 ^ 0xB44DD450) + 1646964433))
        + (((v489 ^ 0xE87A74BB) + 1172936478) ^ ((v489 ^ 0x856012D) - 1513758068) ^ ((v489 ^ 0x3F6DFDA8) - 1828839921))) ^ v395;
  v495 = (LODWORD(STACK[0x1240]) ^ 0x2DC71B18)
       - (((v494 ^ 0x6798AA68) - 1738058344) ^ ((v494 ^ 0x366C9825) - 913086501) ^ ((v494 ^ 0xDCD9A62A) + 589715926))
       + 1158423109
       + (((v493 ^ 0xD9E8060) - 228491360) ^ ((v493 ^ 0x5F5346D9) - 1599293145) ^ ((v493 ^ 0xDFE052DE) + 538946850));
  v496 = v495
       + (((((v383 ^ 0x4203F6CF) - 1107556047) ^ ((v383 ^ 0x8B20D7C8) + 1960781880) ^ ((v383 ^ 0x440EB560) - 1141814624))
         - (((v484 ^ 0x8BAB6C98) + 1240008662) ^ ((v484 ^ 0x74AF4B9B) - 1225973545) ^ ((v484 ^ 0x4F9427D6) - 1915335524))
         + v492) ^ ((((v420 ^ 0xA056604C) - 1372458000) ^ ((v420 ^ 0x772739F9) + 2034281051) ^ ((v420 ^ 0xABC4A18E)
                                                                                              - 1516031442))
                  - (((v383 ^ 0x234E6DCE) - 592342478) ^ ((v383 ^ 0xFC28D4E7) + 64432921) ^ ((v383 ^ 0x524B2D4E)
                                                                                           - 1380658510))) ^ (v488 + 1));
  v497 = v496 - 1926392727 - ((2 * v496) & 0x1A5B28CE);
  LODWORD(v137) = v497 - 2;
  HIDWORD(v360) = (v497 - 2) ^ 0x1467;
  LODWORD(v360) = (v497 - 2) ^ 0x8D2D8000;
  v498 = v360 >> 13;
  v499 = v495 + v339 - 1926392729 - ((2 * (v495 + v339)) & 0x1A5B28CE);
  v500 = (((v137 ^ 0x2A74CBDC) - 712297436) ^ ((v137 ^ 0x57C9B554) - 1472836948) ^ ((v137 ^ 0xF090EAEF) + 258938129))
       - (((v484 ^ 0xACB3CA0F) + 1861329219) ^ ((v484 ^ 0xA444263E) + 1711689076) ^ ((v484 ^ 0xB867ECE4) + 2049279914));
  HIDWORD(v360) = (v497 - 2) ^ 0x2D9467;
  LODWORD(v360) = (v497 - 2) ^ 0x8D000000;
  v501 = v360 >> 22;
  v502 = ((v498 ^ (v497 << 30) ^ 0x40000000) - 1926392729 - ((2 * v498) & 0x1A5B28CE)) ^ (((v137 ^ 0x8D2D9467) >> 2)
                                                                                        - 1926392729
                                                                                        - ((2
                                                                                          * ((v137 ^ 0x8D2D9467) >> 2)) & 0x1A5B28CE));
  HIDWORD(v360) = v499 ^ 0xFFFFFFE7;
  LODWORD(v360) = v499 ^ v114;
  v503 = v360 >> 6;
  v504 = (((v419 ^ 0xF74B6239) + 556538042) ^ ((v419 ^ 0xB25229A2) + 1681216291) ^ ((v419 ^ 0xE1AC5A83) + 936058884))
       + (((v489 ^ 0xB240932B) + 533950606) ^ ((v489 ^ 0xCD81F17) - 1588855630) ^ ((v489 ^ 0x61D90402) - 867506267))
       - (v499 ^ v419 ^ 0x2998857F)
       + 338798985
       + (((v499 ^ 0xD06435F) - 218514271) ^ ((v499 ^ 0x1E330B7E) - 506661758) ^ ((v499 ^ 0x9E18DC46) + 1642537914));
  v505 = (v504 ^ 0x357CB0A) & (2 * (v504 & 0x935713AC)) ^ v504 & 0x935713AC;
  v506 = ((2 * (v504 ^ 0x7F1EC0A)) ^ 0x294DFF4C) & (v504 ^ 0x7F1EC0A) ^ (2 * (v504 ^ 0x7F1EC0A)) & 0x94A6FFA6;
  v507 = (v506 ^ 0x6DF02) & (4 * v505) ^ v505;
  v508 = ((4 * (v506 ^ 0x94A200A2)) ^ 0x529BFE98) & (v506 ^ 0x94A200A2) ^ (4 * (v506 ^ 0x94A200A2)) & 0x94A6FFA4;
  v509 = (v508 ^ 0x1082FE86) & (16 * v507) ^ v507;
  v510 = ((16 * (v508 ^ 0x84240126)) ^ 0x4A6FFA60) & (v508 ^ 0x84240126) ^ (16 * (v508 ^ 0x84240126)) & 0x94A6FFA0;
  v511 = v509 ^ 0x94A6FFA6 ^ (v510 ^ 0x26FA00) & (v509 << 8);
  v512 = (v500 - 1926392729 - ((2 * v500) & 0x1A5B28CE)) ^ v137;
  HIDWORD(v360) = v499;
  LODWORD(v360) = v499;
  v513 = v420 ^ v492 ^ 0xE6793A3 ^ (v512 - 1926392729 - ((2 * v512) & 0x1A5B28CE));
  v514 = ((v360 >> 25) ^ LODWORD(STACK[0x16E0]))
       - 1926392729
       - 2 * (((v360 >> 25) ^ LODWORD(STACK[0x16E0])) & v337 ^ (v360 >> 25) & 8);
  LODWORD(STACK[0x17F0]) = v514;
  v515 = v503
       - 1535102240
       + ((((v499 << 21) ^ 0x5FCBB7E5) & ((v499 >> 11) ^ 0xFFEA5A5F) | (v499 >> 11) & 0x14481A) ^ 0x2CC44808)
       + (((v514 ^ 0xC61958FC) + 971417348) ^ ((v514 ^ 0xD161BE43) + 782123453) ^ ((v514 ^ 0x9A5572D8) + 1705676072))
       + 2696;
  v516 = (v515 ^ 0xC02C57F8) & (2 * (v515 & 0xE8AD5700)) ^ v515 & 0xE8AD5700;
  v517 = ((2 * (v515 ^ 0xC13C59F8)) ^ 0x53221DF0) & (v515 ^ 0xC13C59F8) ^ (2 * (v515 ^ 0xC13C59F8)) & 0x29910EF8;
  v518 = (v517 ^ 0x9000E08) & (4 * v516) ^ v516;
  v519 = ((4 * (v517 ^ 0x28910208)) ^ 0xA6443BE0) & (v517 ^ 0x28910208) ^ (4 * (v517 ^ 0x28910208)) & 0x29910EF8;
  v520 = (v519 ^ 0x20000AF8) & (16 * v518) ^ v518;
  v521 = ((16 * (v519 ^ 0x9910418)) ^ 0x9910EF80) & (v519 ^ 0x9910418) ^ (16 * (v519 ^ 0x9910418)) & 0x29910EF0;
  v522 = v520 ^ 0x29910EF8 ^ (v521 ^ 0x9100E78) & (v520 << 8);
  v523 = v502 - v501 + v513 - 1926392728 - ((2 * (v502 - v501 + v513 + 1)) & 0x1A5B28CE);
  v524 = v504 ^ v395 ^ v515 ^ (2
                             * ((v511 << 16) & 0x14A60000 ^ v511 ^ ((v511 << 16) ^ 0x7FA60000) & (((v510 ^ 0x94800586) << 8) & 0x94A60000 ^ (((v510 ^ 0x94800586) << 8) ^ 0xA6FF0000) & (v510 ^ 0x94800586) ^ 0x10000000) ^ v522 ^ (v522 << 16) & 0x29910000 ^ ((v522 << 16) ^ 0xEF80000) & (((v521 ^ 0x20810078) << 8) & 0x29910000 ^ 0x28910000 ^ (((v521 ^ 0x20810078) << 8) ^ 0x110E0000) & (v521 ^ 0x20810078))));
  v525 = LODWORD(STACK[0x1698])
       + 934943703
       + (((v524 ^ 0xDCBD0ED7) + 448485177) ^ ((v524 ^ 0x4260FA66) - 2073648246) ^ ((v524 ^ 0x2A09C6C6) - 334520534));
  v526 = (((v523 ^ 0x3EE951E) - 65967390) ^ ((v523 ^ 0xE740A692) + 415193454) ^ ((v523 ^ 0x6983A7EB) - 1770235883))
       - 536701772
       + v525
       + 3023;
  v527 = (v526 ^ 0xC02FBF3) & (2 * (v526 & 0xAD2AF3E4)) ^ v526 & 0xAD2AF3E4;
  v528 = ((2 * (v526 ^ 0x16529A7B)) ^ 0x76F0D33E) & (v526 ^ 0x16529A7B) ^ (2 * (v526 ^ 0x16529A7B)) & 0xBB78699E;
  v529 = (v528 ^ 0x30706110) & (4 * v527) ^ v527;
  v530 = ((4 * (v528 ^ 0x89082881)) ^ 0xEDE1A67C) & (v528 ^ 0x89082881) ^ (4 * (v528 ^ 0x89082881)) & 0xBB78699C;
  v531 = (v530 ^ 0xA9602000) & (16 * v529) ^ v529;
  v532 = ((16 * (v530 ^ 0x12184983)) ^ 0xB78699F0) & (v530 ^ 0x12184983) ^ (16 * (v530 ^ 0x12184983)) & 0xBB786990;
  v533 = v531 ^ 0xBB78699F ^ (v532 ^ 0xB3000900) & (v531 << 8);
  v534 = v526 ^ (2
               * ((v533 << 16) & 0x3B780000 ^ v533 ^ ((v533 << 16) ^ 0x699F0000) & (((v532 ^ 0x878600F) << 8) & 0x3B780000 ^ 0x3100000 ^ (((v532 ^ 0x878600F) << 8) ^ 0x78690000) & (v532 ^ 0x878600F))));
  v535 = (((v383 ^ 0x5204A9CC) - 1376037324) ^ ((v383 ^ 0x619812AA) - 1637356202) ^ ((v383 ^ 0xBEB12F01) + 1095684351))
       - 402080455
       + v525;
  v536 = (v535 ^ 0x8106978C) & (2 * (v535 & 0xA524D72E)) ^ v535 & 0xA524D72E;
  v537 = ((2 * (v535 ^ 0xC34FB9C4)) ^ 0xCCD6DDD4) & (v535 ^ 0xC34FB9C4) ^ (2 * (v535 ^ 0xC34FB9C4)) & 0x666B6EEA;
  v538 = v537 ^ 0x2229222A;
  v539 = (v537 ^ 0x60A4EC0) & (4 * v536) ^ v536;
  v540 = ((4 * v538) ^ 0x99ADBBA8) & v538 ^ (4 * v538) & 0x666B6EE8;
  v541 = (v540 ^ 0x292AA2) & (16 * v539) ^ v539;
  v542 = ((16 * (v540 ^ 0x66424442)) ^ 0x66B6EEA0) & (v540 ^ 0x66424442) ^ (16 * (v540 ^ 0x66424442)) & 0x666B6EE0;
  v543 = v541 ^ 0x666B6EEA ^ (v542 ^ 0x66226E00) & (v541 << 8);
  v544 = v534 ^ 0x4C7B4BD;
  v545 = v535 ^ (2
               * ((v543 << 16) & 0x666B0000 ^ v543 ^ ((v543 << 16) ^ 0x6EEA0000) & (((v542 ^ 0x49004A) << 8) & 0x666B0000 ^ 0x4010000 ^ (((v542 ^ 0x49004A) << 8) ^ 0x6B6E0000) & (v542 ^ 0x49004A))));
  v546 = ((((v534 ^ 0x4C7B4BD) << 10) ^ 0xDDC04CE9) & ((v534 >> 22) ^ 0xFFFFFFCE) | (v534 >> 22) & 0x316) ^ 0x6A0F06;
  v547 = (((v534 ^ 0x6E4CF0BF) - 1787511810) ^ ((v534 ^ 0x3B9A4251) - 1063122668) ^ ((v534 ^ 0xDC3C9234) + 654629239))
       - (((v137 ^ 0x7DA5DEB9) - 2108022457) ^ ((v137 ^ 0xFA743E8A) + 93045110) ^ ((v137 ^ 0xAFC7454) - 184317012))
       + 1622857209;
  v548 = (v547 ^ 0x1E150037) & (2 * (v547 & 0x9F452A07)) ^ v547 & 0x9F452A07;
  v549 = ((2 * (v547 ^ 0x361F5033)) ^ 0x52B4F468) & (v547 ^ 0x361F5033) ^ (2 * (v547 ^ 0x361F5033)) & 0xA95A7A34;
  v550 = (v549 ^ 0x107020) & (4 * v548) ^ v548;
  v551 = ((4 * (v549 ^ 0xA94A0A14)) ^ 0xA569E8D0) & (v549 ^ 0xA94A0A14) ^ (4 * (v549 ^ 0xA94A0A14)) & 0xA95A7A34;
  v552 = (v551 ^ 0xA1486810) & (16 * v550) ^ v550;
  v553 = ((16 * (v551 ^ 0x8121224)) ^ 0x95A7A340) & (v551 ^ 0x8121224) ^ (16 * (v551 ^ 0x8121224)) & 0xA95A7A30;
  v554 = v552 ^ 0xA95A7A34 ^ (v553 ^ 0x81022200) & (v552 << 8);
  v555 = v547 ^ (2
               * ((v554 << 16) & 0x295A0000 ^ v554 ^ ((v554 << 16) ^ 0x7A340000) & (((v553 ^ 0x28585834) << 8) & 0x295A0000 ^ 0x21000000 ^ (((v553 ^ 0x28585834) << 8) ^ 0x5A7A0000) & (v553 ^ 0x28585834))));
  LODWORD(STACK[0x17B0]) = (v534 ^ 0x4C7B4BD) << 19;
  v556 = ((((v534 ^ 0x4C7B4BD) << 19) ^ 0x11C01BA4) & ((v534 >> 13) ^ 0xFFFC74A4) | (v534 >> 13) & 0x7E45B) ^ 0x4D046400;
  v557 = v556 - ((2 * v556) & 0xB14619FE);
  v558 = (((v484 ^ 0xE1A920C4) + 602622858) ^ ((v484 ^ 0x322E60D7) - 261354597) ^ ((v484 ^ 0x631740C6) - 1588253812))
       + 1913399661
       + (((v534 ^ 0x3AC4174F) - 1040425970) ^ ((v534 ^ 0xEB2A1C) - 70033057) ^ ((v534 ^ 0xB3C51D89) + 1224562380));
  v559 = (v558 ^ 0x92EFE41) & (2 * (v558 & 0xA84EFF61)) ^ v558 & 0xA84EFF61;
  v560 = ((2 * (v558 ^ 0x192694C1)) ^ 0x62D0D740) & (v558 ^ 0x192694C1) ^ (2 * (v558 ^ 0x192694C1)) & 0xB1686BA0;
  v561 = (v560 ^ 0x30404320) & (4 * v559) ^ v559;
  v562 = ((4 * (v560 ^ 0x912828A0)) ^ 0xC5A1AE80) & (v560 ^ 0x912828A0) ^ (4 * (v560 ^ 0x912828A0)) & 0xB1686BA0;
  v563 = (v562 ^ 0x81202A80) & (16 * v561) ^ v561;
  v564 = ((16 * (v562 ^ 0x30484120)) ^ 0x1686BA00) & (v562 ^ 0x30484120) ^ (16 * (v562 ^ 0x30484120)) & 0xB1686BA0;
  v565 = v563 ^ 0xB1686BA0 ^ (v564 ^ 0x10002AA0) & (v563 << 8);
  v566 = v558 ^ (2
               * ((v565 << 16) & 0x31680000 ^ v565 ^ ((v565 << 16) ^ 0x6BA00000) & (((v564 ^ 0xA16841A0) << 8) & 0xB1680000 ^ 0x11000000 ^ (((v564 ^ 0xA16841A0) << 8) ^ 0x686B0000) & (v564 ^ 0xA16841A0))));
  v567 = (((v489 ^ 0x22CD51F7) - 1889619374) ^ ((v489 ^ 0x90535373) + 1036038358) ^ ((v489 ^ 0x6DDF8ABA) - 1068734179))
       + 2088924230
       + (((v499 ^ 0xDC8858E1) + 595044127) ^ ((v499 ^ 0xAD0960E8) + 1391894296) ^ ((v499 ^ 0xFCACAC6E) + 55792530));
  v568 = (2 * (v567 & 0x9DD8B488 ^ 0x50861210)) & 0x10800010 ^ v567 & 0x9DD8B488 ^ 0x50861210 ^ ((2
                                                                                                * (v567 & 0x9DD8B488 ^ 0x50861210)) ^ 0xA10C2420) & (v567 ^ 0xCD5EA698);
  v569 = (2 * (v567 ^ 0xCD5EA698)) & 0x50861210 ^ 0x50821210 ^ ((2 * (v567 ^ 0xCD5EA698)) ^ 0xA10C2420) & (v567 ^ 0xCD5EA698);
  v570 = (4 * v568) & 0x50861210 ^ v568 ^ ((4 * v568) ^ 0x42184840) & v569;
  v571 = (4 * v569) & 0x50861210 ^ 0x10861210 ^ ((4 * v569) ^ 0x42184840) & v569;
  v572 = (16 * v570) & 0x50861210 ^ v570 ^ ((16 * v570) ^ 0x8612100) & v571;
  v573 = ~(16 * v571) & 0x50861210 ^ ((16 * v571) ^ 0x8612100) & v571;
  v574 = v572 ^ 0x40021000 ^ (v572 << 8) & 0x50861200 ^ ((v572 << 8) ^ 0x86121000) & v573;
  LODWORD(v360) = __ROR4__(v545, 25);
  v575 = v567 ^ v467 ^ (2
                      * (v574 ^ v475 ^ (v574 << 16) & 0x50860000 ^ ((v574 << 16) ^ 0x12100000) & ((v573 << 8) & 0x50860000 ^ 0x50840000 ^ ((v573 << 8) ^ 0x86120000) & v573)));
  v576 = (v360 ^ 0x93057D52) - 1926392729 - ((2 * (v360 ^ 0x93057D52)) & 0x1A5B28CE);
  v577 = (((v484 ^ 0x48C0F3FC) - 1971152718) ^ ((v484 ^ 0x1800FC4E) - 633170172) ^ ((v484 ^ 0xE0500F67) + 571630635))
       - 1813675498
       + (((v137 ^ 0x54155F76) - 1410686838) ^ ((v137 ^ 0xA3FC90F1) + 1543728911) ^ ((v137 ^ 0x7AC45BE0) - 2059688928));
  v578 = (v577 ^ 0x576186B5) & (2 * (v577 & 0x8675A6B8)) ^ v577 & 0x8675A6B8;
  v579 = ((2 * (v577 ^ 0x5349CAF5)) ^ 0xAA78D89A) & (v577 ^ 0x5349CAF5) ^ (2 * (v577 ^ 0x5349CAF5)) & 0xD53C6C4C;
  v580 = (v579 ^ 0x380800) & (4 * v578) ^ v578;
  v581 = ((4 * (v579 ^ 0x55042445)) ^ 0x54F1B134) & (v579 ^ 0x55042445) ^ (4 * (v579 ^ 0x55042445)) & 0xD53C6C4C;
  v582 = (v581 ^ 0x54302000) & (16 * v580) ^ v580;
  v583 = ((16 * (v581 ^ 0x810C4C49)) ^ 0x53C6C4D0) & (v581 ^ 0x810C4C49) ^ (16 * (v581 ^ 0x810C4C49)) & 0xD53C6C40;
  v584 = v582 ^ 0xD53C6C4D ^ (v583 ^ 0x5104440D) & (v582 << 8);
  v585 = v577 ^ (2
               * ((v584 << 16) & 0x553C0000 ^ v584 ^ ((v584 << 16) ^ 0x6C4D0000) & (((v583 ^ 0x8438280D) << 8) & 0x553C0000 ^ 0x41100000 ^ (((v583 ^ 0x8438280D) << 8) ^ 0x3C6C0000) & (v583 ^ 0x8438280D))));
  v586 = (((v545 ^ 0x280B9E9D) << 21) ^ 0xEC639C5C) & ((v545 >> 11) ^ 0xFFF31A9F) | (v545 >> 11) & 0x1C63A3;
  LODWORD(STACK[0x1758]) = v576;
  HIDWORD(v360) = v545 ^ 0x280B9E9D;
  LODWORD(v360) = v545 ^ 0x280B9E9D;
  v587 = ((((v360 >> 6) ^ 0x8071BA15) + 1821861853) ^ (((v360 >> 6) ^ 0x5F6BF2C3) - 1282593013) ^ (((v360 >> 6) ^ 0x412EFE87)
                                                                                                 - 1379392689))
       - (((v586 ^ 0x5C5E72F2) + 1310434744) ^ ((v586 ^ 0x3784037A) + 633459776) ^ ((v586 ^ 0xB4DCD55) + 419961361))
       - (((v576 ^ 0x15CDE5E3) - 365815267) ^ ((v576 ^ 0xED3CE4C0) + 314776384) ^ ((v576 ^ 0x75DC9544) - 1977390404))
       - 879772716;
  v588 = (v587 ^ 0xB6728F95) & (2 * (v587 & 0xA742AFC5)) ^ v587 & 0xA742AFC5;
  v589 = ((2 * (v587 ^ 0xB6F6C217)) ^ 0x2368DBA4) & (v587 ^ 0xB6F6C217) ^ (2 * (v587 ^ 0xB6F6C217)) & 0x11B46DD2;
  v590 = (v589 ^ 0x1804942) & (4 * v588) ^ v588;
  v591 = ((4 * (v589 ^ 0x10942452)) ^ 0x46D1B748) & (v589 ^ 0x10942452) ^ (4 * (v589 ^ 0x10942452)) & 0x11B46DD0;
  v592 = (v591 ^ 0x902542) & (16 * v590) ^ v590;
  v593 = ((16 * (v591 ^ 0x11244892)) ^ 0x1B46DD20) & (v591 ^ 0x11244892) ^ (16 * (v591 ^ 0x11244892)) & 0x11B46DD0;
  v594 = v592 ^ 0x11B46DD2 ^ (v593 ^ 0x11044DD2) & (v592 << 8);
  v595 = v587 ^ v434 ^ (2
                      * ((v594 << 16) & 0x11B40000 ^ v594 ^ ((v594 << 16) ^ 0x6DD20000) & (((v593 ^ 0xB020D2) << 8) & 0x11B40000 ^ 0x1900000 ^ (((v593 ^ 0xB020D2) << 8) ^ 0x346D0000) & (v593 ^ 0xB020D2))));
  v596 = (((v575 ^ 0x3C2D6356) - 1922428839) ^ ((v575 ^ 0x2FB524A0) - 1628285009) ^ ((v575 ^ 0xD00D5F60) + 1632250991))
       + 2136660384
       + (((v595 ^ 0xFA838849) - 2106194984) ^ ((v595 ^ 0xBA7210D5) - 1031300276) ^ ((v595 ^ 0x4AD6789A) + 841216773));
  v597 = (v596 ^ 0x933B6F0F) & (2 * (v596 & 0x9B004F2E)) ^ v596 & 0x9B004F2E;
  v598 = ((2 * (v596 ^ 0xA33BFB53)) ^ 0x707768FA) & (v596 ^ 0xA33BFB53) ^ (2 * (v596 ^ 0xA33BFB53)) & 0x383BB47C;
  v599 = (v598 ^ 0x30032078) & (4 * v597) ^ v597;
  v600 = ((4 * (v598 ^ 0x8089405)) ^ 0xE0EED1F4) & (v598 ^ 0x8089405) ^ (4 * (v598 ^ 0x8089405)) & 0x383BB47C;
  v601 = (v600 ^ 0x202A9060) & (16 * v599) ^ v599;
  v602 = ((16 * (v600 ^ 0x18112409)) ^ 0x83BB47D0) & (v600 ^ 0x18112409) ^ (16 * (v600 ^ 0x18112409)) & 0x383BB470;
  v603 = v601 ^ 0x383BB47D ^ (v602 ^ 0x3B0400) & (v601 << 8);
  v604 = v596 ^ (2
               * ((v603 << 16) & 0x383B0000 ^ v603 ^ ((v603 << 16) ^ 0x347D0000) & (((v602 ^ 0x3800B02D) << 8) & 0x383B0000 ^ 0xB0000 ^ (((v602 ^ 0x3800B02D) << 8) ^ 0x3BB40000) & (v602 ^ 0x3800B02D))));
  v605 = (((v604 ^ 0x98EE7DE8) + 1631138213) ^ ((v604 ^ 0xE8E61468) + 288446501) ^ ((v604 ^ 0xFB0D4E54) + 47841817))
       - 1495713081;
  v606 = (v605 ^ 0xB617FDF8) & (2 * (v605 & 0xC707F1E1)) ^ v605 & 0xC707F1E1;
  v607 = ((2 * (v605 ^ 0xBE1B9DFA)) ^ 0xF238D836) & (v605 ^ 0xBE1B9DFA) ^ (2 * (v605 ^ 0xBE1B9DFA)) & 0x791C6C1A;
  v608 = (v607 ^ 0x30184800) & (4 * v606) ^ v606;
  v609 = ((4 * (v607 ^ 0x9042409)) ^ 0xE471B06C) & (v607 ^ 0x9042409) ^ (4 * (v607 ^ 0x9042409)) & 0x791C6C18;
  v610 = (v609 ^ 0x60102003) & (16 * v608) ^ v608;
  v611 = ((16 * (v609 ^ 0x190C4C13)) ^ 0x91C6C1B0) & (v609 ^ 0x190C4C13) ^ (16 * (v609 ^ 0x190C4C13)) & 0x791C6C10;
  v612 = v610 ^ 0x791C6C1B ^ (v611 ^ 0x1104400B) & (v610 << 8);
  v613 = v605 ^ (2
               * ((v612 << 16) & 0x791C0000 ^ v612 ^ ((v612 << 16) ^ 0x6C1B0000) & (((v611 ^ 0x68182C0B) << 8) & 0x791C0000 ^ 0x61100000 ^ (((v611 ^ 0x68182C0B) << 8) ^ 0x1C6C0000) & (v611 ^ 0x68182C0B))));
  v614 = (((v566 ^ 0x1026405C) - 366345242) ^ ((v566 ^ 0x17FE3607) - 302877249) ^ ((v566 ^ 0x8F065E7A) + 1963597252))
       - (((v585 ^ 0xD1C29122) + 117802137) ^ ((v585 ^ 0xB4358E2D) + 1660066712) ^ ((v585 ^ 0xC1E2612D) + 388330648))
       + (((v555 ^ 0xB54C2BEC) + 1515167260) ^ ((v555 ^ 0x5035CA11) - 1086947353) ^ ((v555 ^ 0x78A83F92) - 1750365594))
       - 1441645312;
  v615 = (v614 ^ 0xFA925757) & (2 * (v614 & 0xE31B5767)) ^ v614 & 0xE31B5767;
  v616 = ((2 * (v614 ^ 0x3A80FB59)) ^ 0xB337587C) & (v614 ^ 0x3A80FB59) ^ (2 * (v614 ^ 0x3A80FB59)) & 0xD99BAC3E;
  v617 = (v616 ^ 0x9013083C) & (4 * v615) ^ v615;
  v618 = ((4 * (v616 ^ 0x4888A402)) ^ 0x666EB0F8) & (v616 ^ 0x4888A402) ^ (4 * (v616 ^ 0x4888A402)) & 0xD99BAC3C;
  v619 = (v618 ^ 0x400AA036) & (16 * v617) ^ v617;
  v620 = ((16 * (v618 ^ 0x99910C06)) ^ 0x99BAC3E0) & (v618 ^ 0x99910C06) ^ (16 * (v618 ^ 0x99910C06)) & 0xD99BAC30;
  v621 = v619 ^ 0xD99BAC3E ^ (v620 ^ 0x999A8000) & (v619 << 8);
  v622 = (v621 << 16) & 0x599B0000 ^ v621 ^ ((v621 << 16) ^ 0x2C3E0000) & (((v620 ^ 0x40012C1E) << 8) & 0x599B0000 ^ 0x40130000 ^ (((v620 ^ 0x40012C1E) << 8) ^ 0x1BAC0000) & (v620 ^ 0x40012C1E));
  v623 = (((LODWORD(STACK[0x1820]) ^ 0xA51FC036) - 617985477) ^ ((LODWORD(STACK[0x1820]) ^ 0x6E56CBFE) + 274940403) ^ ((LODWORD(STACK[0x1820]) ^ 0xC7AEEA5C) - 1180999599))
       - 2132278271
       + (((v613 ^ 0x27A0BA0B) - 1333921723) ^ ((v613 ^ 0xB5474E9B) + 580521173) ^ ((v613 ^ 0x77E8DD47) - 533356791))
       + 3074;
  v624 = (v623 ^ 0xD0621AE3) & (2 * (v623 & 0x997318CB)) ^ v623 & 0x997318CB;
  v625 = ((2 * (v623 ^ 0xD2441AE3)) ^ 0x966E0450) & (v623 ^ 0xD2441AE3) ^ (2 * (v623 ^ 0xD2441AE3)) & 0x4B370228;
  v626 = (v625 ^ 0x2040000) & (4 * v624) ^ v624;
  v627 = ((4 * (v625 ^ 0x49110228)) ^ 0x2CDC08A0) & (v625 ^ 0x49110228) ^ (4 * (v625 ^ 0x49110228)) & 0x4B370228;
  v628 = v626 ^ 0x4B370228 ^ (v627 ^ 0x8140028) & (16 * v626);
  v629 = (16 * (v627 ^ 0x43230208)) & 0x4B370220 ^ 0x48070028 ^ ((16 * (v627 ^ 0x43230208)) ^ 0xB3702280) & (v627 ^ 0x43230208);
  v630 = (v628 << 8) & 0x4B370200 ^ v628 ^ ((v628 << 8) ^ 0x37022800) & v629;
  v631 = v623 ^ (2
               * ((v630 << 16) & 0x4B370000 ^ v630 ^ ((v630 << 16) ^ 0x2280000) & ((v629 << 8) & 0x4B370000 ^ 0x48350000 ^ ((v629 << 8) ^ 0x37020000) & v629)));
  v632 = ((v557 + 1487080703) ^ __ROR4__(v534 ^ 0x4C7B4BD, 2) ^ 0x44105213)
       + ((((2 * v546) & 0xAB9A5024) - v546 - 1439508499) ^ 0xC1C90A04)
       + (v614 ^ (2 * v622) ^ 0xBFE7F0E4)
       - 1343509915
       + (((v631 ^ 0xBFCFAC61) - 1069229213) ^ ((v631 ^ 0x2B84638A) + 1410274442) ^ ((v631 ^ 0x9912D370) - 426138508));
  v633 = (v632 ^ 0x9D6DE96A) & (2 * (v632 & 0xDD41EA03)) ^ v632 & 0xDD41EA03;
  v634 = ((2 * (v632 ^ 0x3DEDB968)) ^ 0xC158A6D6) & (v632 ^ 0x3DEDB968) ^ (2 * (v632 ^ 0x3DEDB968)) & 0xE0AC536A;
  v635 = (v634 ^ 0xC0080000) & (4 * v633) ^ v633;
  v636 = ((4 * (v634 ^ 0x20A45129)) ^ 0x82B14DAC) & (v634 ^ 0x20A45129) ^ (4 * (v634 ^ 0x20A45129)) & 0xE0AC5368;
  v637 = (v636 ^ 0x80A04120) & (16 * v635) ^ v635;
  v638 = ((16 * (v636 ^ 0x600C1243)) ^ 0xAC536B0) & (v636 ^ 0x600C1243) ^ (16 * (v636 ^ 0x600C1243)) & 0xE0AC5360;
  v639 = v637 ^ 0xE0AC536B ^ (v638 ^ 0x84124B) & (v637 << 8);
  v640 = v632 ^ (2
               * ((v639 << 16) & 0x60AC0000 ^ v639 ^ ((v639 << 16) ^ 0x536B0000) & (((v638 ^ 0xE028414B) << 8) & 0x60AC0000 ^ 0x40AC0000 ^ (((v638 ^ 0xE028414B) << 8) ^ 0x2C530000) & (v638 ^ 0xE028414B))));
  v641 = (((v420 ^ 0x9DB99513) - 1814165839) ^ ((v420 ^ 0xC85EAE33) - 969327215) ^ ((v420 ^ 0x2952C31B) + 657805497))
       + 871747213
       + (((v631 ^ 0x29B28BF3) + 1446640881) ^ ((v631 ^ 0x5FCC4694) + 541536664) ^ ((v631 ^ 0x7B27D1FC) + 78423808));
  v642 = (v641 ^ 0xD4541849) & (2 * (v641 & 0xE6655A41)) ^ v641 & 0xE6655A41;
  v643 = ((2 * (v641 ^ 0xD41CACC9)) ^ 0x64F3ED10) & (v641 ^ 0xD41CACC9) ^ (2 * (v641 ^ 0xD41CACC9)) & 0x3279F688;
  v644 = (v643 ^ 0x2031E000) & (4 * v642) ^ v642;
  v645 = ((4 * (v643 ^ 0x12081288)) ^ 0xC9E7DA20) & (v643 ^ 0x12081288) ^ (4 * (v643 ^ 0x12081288)) & 0x3279F688;
  v646 = (v645 ^ 0x61D200) & (16 * v644) ^ v644;
  v647 = ((16 * (v645 ^ 0x32182488)) ^ 0x279F6880) & (v645 ^ 0x32182488) ^ (16 * (v645 ^ 0x32182488)) & 0x3279F680;
  v648 = v646 ^ 0x3279F688 ^ (v647 ^ 0x22196000) & (v646 << 8);
  v649 = v641 ^ (2
               * ((v648 << 16) & 0x32790000 ^ v648 ^ ((v648 << 16) ^ 0x76880000) & (((v647 ^ 0x10609608) << 8) & 0x32790000 ^ 0x2090000 ^ (((v647 ^ 0x10609608) << 8) ^ 0x79F60000) & (v647 ^ 0x10609608))));
  v650 = v640 ^ 0x1164D8B2;
  v651 = ((((v640 ^ 0x1164D8B2) & 1) << 30) | 0x2325C550) ^ (((v640 ^ 0x1164D8B2) << 30) | 0x3FFFFFFF) & ((v640 >> 2) ^ 0xAF9A51BE);
  v652 = (((v640 ^ 0x1164D8B2) << 19) ^ 0x34C6FB9) & ((v640 >> 13) ^ 0xFFFB9DF5) | (v640 >> 13) & 0x39046;
  v653 = ((((((v640 ^ 0x1164D8B2) << 19) ^ 0x34C6FB9) & ((v640 >> 13) ^ 0xFFFB9DF5) & 0x7BA4E381 | (v640 >> 13) & 0x8000) ^ 0x30246381)
        + (v652 ^ 0x4F839044)
        - ((v652 ^ 0x4F839044) & 0x7BA4E381)) ^ (-2 - ((~v651 | 0x9A760830) + (v651 | 0x6589F7CF)));
  v654 = (((v640 ^ 0x1164D8B2) << 10) ^ 0xF7F7F91D) & ((v640 >> 22) ^ 0xFFFFFF8E) | (v640 >> 22) & 0x2E2;
  v655 = v653 ^ ((v654 & 0xA80C0593 ^ 0xA80C0511) + (v654 & 0x57F3FA6C ^ 0x2409201) - 1);
  v656 = (((v649 >> 11) ^ 0x9881DFB3) & ((v649 << 21) ^ 0x33DFFFFF) | (v649 << 21) & 0x67600000) ^ 0x2342C090;
  v657 = v650 ^ LODWORD(STACK[0x1570]);
  v658 = v649 ^ 0x6BAB2336;
  v659 = (((v545 ^ 0x44480826) - 1816368827) ^ ((v545 ^ 0xAE0538C3) + 2045860258) ^ ((v545 ^ 0x4F6B3A1F) - 1734386818))
       + 1976785681
       + (((v649 ^ 0xBA41D198) + 773131602) ^ ((v649 ^ 0xD2D431C9) + 1182854401) ^ ((v649 ^ 0x8E135700) + 440896458));
  v660 = (v659 ^ 0x10278DB8) & (2 * (v659 & 0xA487CDBD)) ^ v659 & 0xA487CDBD;
  v661 = ((2 * (v659 ^ 0x10229DEA)) ^ 0x694AA0AE) & (v659 ^ 0x10229DEA) ^ (2 * (v659 ^ 0x10229DEA)) & 0xB4A55056;
  v662 = (v661 ^ 0x20800005) & (4 * v660) ^ v660;
  v663 = ((4 * (v661 ^ 0x94A55051)) ^ 0xD295415C) & (v661 ^ 0x94A55051) ^ (4 * (v661 ^ 0x94A55051)) & 0xB4A55054;
  v664 = (v663 ^ 0x90854050) & (16 * v662) ^ v662;
  v665 = ((16 * (v663 ^ 0x24201003)) ^ 0x4A550570) & (v663 ^ 0x24201003) ^ (16 * (v663 ^ 0x24201003)) & 0xB4A55050;
  v666 = v664 ^ 0xB4A55057 ^ (v665 ^ 0x50007) & (v664 << 8);
  v667 = v659 ^ (2
               * ((v666 << 16) & 0x34A50000 ^ v666 ^ ((v666 << 16) ^ 0x50570000) & (((v665 ^ 0xB4A05007) << 8) & 0xB4A50000 ^ 0x10A50000 ^ (((v665 ^ 0xB4A05007) << 8) ^ 0x25500000) & (v665 ^ 0xB4A05007))));
  v668 = (((v658 << 7) ^ 0x5154A285) & ((v649 >> 25) ^ 0xFFFFFFF4) | (v649 >> 25) & 0x7A) ^ __ROR4__(v658, 6) ^ (((((v649 >> 11) ^ 0x9881DFB3) & ((v649 << 21) ^ 0x33DFFFFF) & 0x65705A99 | (v649 << 21) & 0x65600000) ^ 0x44301A09) + v656 - (v656 & 0x65705A99));
  v669 = (((v667 ^ 0xB9A2BDDB) + 649575249) ^ ((v667 ^ 0xDBD45D6F) + 1153522661) ^ ((v667 ^ 0x8FB18DA7) + 279218989))
       - ((((v649 ^ 0x7A6FCD25) - 298118675) ^ ((v649 ^ 0x288E758A) - 1126520508) ^ ((v649 ^ 0xB4670FFE) + 540267320))
        + (((v499 ^ 0x67C945B7) - 1741243831) ^ ((v499 ^ 0xF40158BD) + 201238339) ^ ((v499 ^ 0x1EE5896D) - 518359405)))
       - 812650398;
  v670 = (v669 ^ 0xAB187B36) & (2 * (v669 & 0xA3427B37)) ^ v669 & 0xA3427B37;
  v671 = ((2 * (v669 ^ 0xA9187D1E)) ^ 0x14B40C52) & (v669 ^ 0xA9187D1E) ^ (2 * (v669 ^ 0xA9187D1E)) & 0xA5A0628;
  v672 = (v671 ^ 0x500601) & (4 * v670) ^ v670;
  v673 = ((4 * (v671 ^ 0xA4A0229)) ^ 0x296818A4) & (v671 ^ 0xA4A0229) ^ (4 * (v671 ^ 0xA4A0229)) & 0xA5A0628;
  v674 = v672 ^ 0xA5A0629 ^ (v673 ^ 0x8480029) & (16 * v672);
  v675 = (16 * (v673 ^ 0x2120609)) & 0xA5A0620 ^ 0xA5A0429 ^ ((16 * (v673 ^ 0x2120609)) ^ 0xA5A06290) & (v673 ^ 0x2120609);
  v676 = (v674 << 8) & 0xA5A0600 ^ v674 ^ ((v674 << 8) ^ 0x5A062900) & v675;
  v677 = v669 ^ (2
               * ((v676 << 16) & 0xA5A0000 ^ v676 ^ ((v676 << 16) ^ 0x6290000) & ((v675 << 8) & 0xA5A0000 ^ 0x580000 ^ ((v675 << 8) ^ 0x5A060000) & v675)));
  v678 = (((v489 ^ 0x93E25720) + 1047639175) ^ ((v489 ^ 0x5F5C74DA) - 221276291) ^ ((v489 ^ 0x13FFABC4) - 1100199837))
       - (((v668 ^ 0x62F65843) - 184450670) ^ ((v668 ^ 0x80A1EE51) + 391526276) ^ ((v668 ^ 0x7720458) - 1870275189))
       + 992384493;
  v679 = (v678 ^ 0xC0D4430A) & (2 * (v678 & 0xC4D96A13)) ^ v678 & 0xC4D96A13;
  v680 = ((2 * (v678 ^ 0x48D4930A)) ^ 0x181BF232) & (v678 ^ 0x48D4930A) ^ (2 * (v678 ^ 0x48D4930A)) & 0x8C0DF918;
  v681 = (v680 ^ 0x8009F111) & (4 * v679) ^ v679;
  v682 = ((4 * (v680 ^ 0x84040909)) ^ 0x3037E464) & (v680 ^ 0x84040909) ^ (4 * (v680 ^ 0x84040909)) & 0x8C0DF918;
  v683 = (v682 ^ 0x5E009) & (16 * v681) ^ v681;
  v684 = ((16 * (v682 ^ 0x8C081919)) ^ 0xC0DF9190) & (v682 ^ 0x8C081919) ^ (16 * (v682 ^ 0x8C081919)) & 0x8C0DF910;
  v685 = v683 ^ 0x8C0DF919 ^ (v684 ^ 0x800D9100) & (v683 << 8);
  v686 = v678 ^ (2
               * ((v685 << 16) & 0xC0D0000 ^ v685 ^ ((v685 << 16) ^ 0x79190000) & (((v684 ^ 0xC006809) << 8) & 0x8C0D0000 ^ (((v684 ^ 0xC006809) << 8) ^ 0xDF90000) & (v684 ^ 0xC006809) ^ 0x40000)));
  v687 = v534 ^ 0x4C7B4BD ^ v137 ^ v555;
  v688 = (((LODWORD(STACK[0x1770]) ^ 0xB638D802) + 1237788670) ^ ((LODWORD(STACK[0x1770]) ^ 0x924FFC93) + 1840251757) ^ ((LODWORD(STACK[0x1770]) ^ 0xA95AB0F6) + 1453674250))
       + 2073276378
       + (((v534 ^ 0x4D39668F) - 1241436722) ^ ((v534 ^ 0x442FE921) - 1088970140) ^ ((v534 ^ 0x80FCAF74) + 2076501047));
  v689 = (v688 ^ 0xDCE772E0) & (2 * (v688 & 0x9EC778F4)) ^ v688 & 0x9EC778F4;
  v690 = ((2 * (v688 ^ 0xFCEB4260)) ^ 0xC4587528) & (v688 ^ 0xFCEB4260) ^ (2 * (v688 ^ 0xFCEB4260)) & 0x622C3A94;
  v691 = (v690 ^ 0x40082804) & (4 * v689) ^ v689;
  v692 = ((4 * (v690 ^ 0x22240A94)) ^ 0x88B0EA50) & (v690 ^ 0x22240A94) ^ (4 * (v690 ^ 0x22240A94)) & 0x622C3A94;
  v693 = (v692 ^ 0x202A04) & (16 * v691) ^ v691;
  v694 = ((16 * (v692 ^ 0x620C1084)) ^ 0x22C3A940) & (v692 ^ 0x620C1084) ^ (16 * (v692 ^ 0x620C1084)) & 0x622C3A90;
  v695 = v693 ^ 0x622C3A94 ^ (v694 ^ 0x22002894) & (v693 << 8);
  v696 = v688 ^ (2
               * ((v695 << 16) & 0x622C0000 ^ v695 ^ ((v695 << 16) ^ 0x3A940000) & (((v694 ^ 0x402C1294) << 8) & 0x622C0000 ^ 0x42040000 ^ (((v694 ^ 0x402C1294) << 8) ^ 0x2C3A0000) & (v694 ^ 0x402C1294))));
  v697 = v499 ^ LODWORD(STACK[0x1610]);
  v698 = ((v499 ^ 0x201FEDB5) - 538963381) ^ ((v499 ^ 0xBDDF1B7D) + 1109451907) ^ ((v499 ^ 0x10ED62AF) - 283992751);
  v699 = HIDWORD(v360) ^ LODWORD(STACK[0x1710]);
  v700 = v649 ^ STACK[0x1178];
  v701 = v698
       + (((v686 ^ 0x1292C6FA) - 1399835324) ^ ((v686 ^ 0x61A606A6) - 542837472) ^ ((v686 ^ 0xBFE4587D) + 31894469))
       - 806036482
       + (((v677 ^ 0xBDBB0C4E) + 1753944244) ^ ((v677 ^ 0x50631A6F) - 2058156397) ^ ((v677 ^ 0x4A3A6144) - 1626702406));
  v702 = (v701 ^ 0x9713CD27) & (2 * (v701 & 0xD793E137)) ^ v701 & 0xD793E137;
  v703 = ((2 * (v701 ^ 0x3D37CF07)) ^ 0xD5485C60) & (v701 ^ 0x3D37CF07) ^ (2 * (v701 ^ 0x3D37CF07)) & 0xEAA42E30;
  v704 = (v703 ^ 0xC0202E20) & (4 * v702) ^ v702;
  v705 = ((4 * (v703 ^ 0x2AA42210)) ^ 0xAA90B8C0) & (v703 ^ 0x2AA42210) ^ (4 * (v703 ^ 0x2AA42210)) & 0xEAA42E30;
  v706 = (v705 ^ 0xAA802800) & (16 * v704) ^ v704;
  v707 = ((16 * (v705 ^ 0x40240630)) ^ 0xAA42E300) & (v705 ^ 0x40240630) ^ (16 * (v705 ^ 0x40240630)) & 0xEAA42E30;
  v708 = v706 ^ 0xEAA42E30 ^ (v707 ^ 0xAA002230) & (v706 << 8);
  v709 = v701 ^ (2
               * ((v708 << 16) & 0x6AA40000 ^ v708 ^ ((v708 << 16) ^ 0x2E300000) & (((v707 ^ 0x40A40C30) << 8) & 0x6AA40000 ^ 0x4A800000 ^ (((v707 ^ 0x40A40C30) << 8) ^ 0x242E0000) & (v707 ^ 0x40A40C30))));
  v710 = (((v709 ^ 0xBEFA6833) - 1699496195) ^ ((v709 ^ 0xDD159061) - 111393105) ^ ((v709 ^ 0x35744505) + 289248203))
       - 628835137;
  v711 = (v710 ^ 0xE559F8FE) & (2 * (v710 & 0xE46000FC)) ^ v710 & 0xE46000FC;
  v712 = ((2 * (v710 ^ 0xED19F8EE)) ^ 0x12F3F024) & (v710 ^ 0xED19F8EE) ^ (2 * (v710 ^ 0xED19F8EE)) & 0x979F812;
  v713 = (v712 ^ 0x8080802) & (4 * v711) ^ v711;
  v714 = ((4 * (v712 ^ 0x9080812)) ^ 0x25E7E048) & (v712 ^ 0x9080812) ^ (4 * (v712 ^ 0x9080812)) & 0x979F810;
  v715 = (v714 ^ 0x161E010) & (16 * v713) ^ v713;
  v716 = ((16 * (v714 ^ 0x8181812)) ^ 0x979F8120) & (v714 ^ 0x8181812) ^ (16 * (v714 ^ 0x8181812)) & 0x979F810;
  v717 = v715 ^ 0x979F812 ^ (v716 ^ 0x1198000) & (v715 << 8);
  v718 = v710 ^ (2
               * ((v717 << 16) & 0x9790000 ^ v717 ^ ((v717 << 16) ^ 0x78120000) & (((v716 ^ 0x8607812) << 8) & 0x9790000 ^ (((v716 ^ 0x8607812) << 8) ^ 0x79F80000) & (v716 ^ 0x8607812) ^ 0x10000)));
  v719 = (((v655 ^ 0xF282B99A) - 1909296708) ^ ((v655 ^ 0x7682D977) + 171053399) ^ ((v655 ^ 0x8A62C354) - 154006666))
       - (((v687 ^ 0xCB2AFEBE) + 606686026) ^ ((v687 ^ 0x6C4B1F93) - 2092389787) ^ ((v687 ^ 0x3AB03F42) - 709653834))
       + 1711248315;
  v720 = ((2 * (v719 & 0x9A006C45)) & 0x7FE | v719 & 0x9A006C45) ^ (2 * (v719 & 0x9A006C45)) & (v719 ^ 0xD8746BAF);
  v721 = ((2 * (v719 ^ 0xD8746BAF)) ^ 0x84E80FD4) & (v719 ^ 0xD8746BAF) ^ (2 * (v719 ^ 0xD8746BAF)) & 0x427407EA;
  v722 = (v721 ^ 0x2140302) & (4 * v720) ^ v720;
  v723 = ((4 * (v721 ^ 0x4214002A)) ^ 0x9D01FA8) & (v721 ^ 0x4214002A) ^ (4 * (v721 ^ 0x4214002A)) & 0x427407E8;
  v724 = (v723 ^ 0x5007A2) & (16 * v722) ^ v722;
  v725 = ((16 * (v723 ^ 0x42240042)) ^ 0x27407EA0) & (v723 ^ 0x42240042) ^ (16 * (v723 ^ 0x42240042)) & 0x427407E0;
  v726 = v724 ^ 0x427407EA ^ (v725 ^ 0x240064A) & (v724 << 8);
  v727 = v719 ^ (2
               * ((v726 << 16) & 0x42740000 ^ v726 ^ ((v726 << 16) ^ 0x7EA0000) & (((v725 ^ 0x4034014A) << 8) & 0x42740000 ^ 0x2700000 ^ (((v725 ^ 0x4034014A) << 8) ^ 0x74070000) & (v725 ^ 0x4034014A))));
  v728 = (((v137 ^ 0x1885C37) - 25713719) ^ ((v137 ^ 0xA064D213) + 1604005357) ^ ((v137 ^ 0x2CC11A43) - 750852675))
       - (((LODWORD(STACK[0x1648]) ^ 0xEB53258) - 246755928) ^ ((LODWORD(STACK[0x1648]) ^ 0x1F46084) - 32792708) ^ ((LODWORD(STACK[0x1648]) ^ 0x826CC6BB) + 2106800453))
       + 149339799;
  v729 = (v728 ^ 0xF75D1961) & (2 * (v728 & 0xF7194169)) ^ v728 & 0xF7194169;
  v730 = ((2 * (v728 ^ 0x3F7D9BF1)) ^ 0x90C9B530) & (v728 ^ 0x3F7D9BF1) ^ (2 * (v728 ^ 0x3F7D9BF1)) & 0xC864DA98;
  v731 = (v730 ^ 0x80400000) & (4 * v729) ^ v729;
  v732 = ((4 * (v730 ^ 0x48244A88)) ^ 0x21936A60) & (v730 ^ 0x48244A88) ^ (4 * (v730 ^ 0x48244A88)) & 0xC864DA98;
  v733 = (v732 ^ 0x4A00) & (16 * v731) ^ v731;
  v734 = ((16 * (v732 ^ 0xC8649098)) ^ 0x864DA980) & (v732 ^ 0xC8649098) ^ (16 * (v732 ^ 0xC8649098)) & 0xC864DA90;
  v735 = v733 ^ 0xC864DA98 ^ (v734 ^ 0x80448800) & (v733 << 8);
  v736 = v728 ^ (2
               * ((v735 << 16) & 0x48640000 ^ v735 ^ ((v735 << 16) ^ 0x5A980000) & (((v734 ^ 0x48205218) << 8) & 0x48640000 ^ 0x8240000 ^ (((v734 ^ 0x48205218) << 8) ^ 0x64DA0000) & (v734 ^ 0x48205218))));
  v737 = (((v718 ^ 0x26A69BCD) - 1295581042) ^ ((v718 ^ 0xC6B3F990) + 1389519569) ^ ((v718 ^ 0x6A69285) - 1832449594))
       - (((LODWORD(STACK[0x17C0]) ^ 0x9671D039) + 1017432151) ^ ((LODWORD(STACK[0x17C0]) ^ 0x15627E0E) - 1078499742) ^ ((LODWORD(STACK[0x17C0]) ^ 0x5B14DDC0) - 238959184));
  v738 = (((v484 ^ 0xB1BA3C3A) + 1945655160) ^ ((v484 ^ 0x5E814C16) - 1664932004) ^ ((v484 ^ 0x5FAB70F9) - 1645667403))
       - 1527461474
       + v737;
  v739 = (v738 ^ 0xE2388885) & (2 * (v738 & 0xE838CAC9)) ^ v738 & 0xE838CAC9;
  v740 = ((2 * (v738 ^ 0xE2099915)) ^ 0x1462A7B8) & (v738 ^ 0xE2099915) ^ (2 * (v738 ^ 0xE2099915)) & 0xA3153DC;
  v741 = v740 ^ 0xA115044;
  v742 = (v740 ^ 0x200308) & (4 * v739) ^ v739;
  v743 = ((4 * v741) ^ 0x28C54F70) & v741 ^ (4 * v741) & 0xA3153DC;
  v744 = (v743 ^ 0x8014350) & (16 * v742) ^ v742;
  v745 = ((16 * (v743 ^ 0x230108C)) ^ 0xA3153DC0) & (v743 ^ 0x230108C) ^ (16 * (v743 ^ 0x230108C)) & 0xA3153D0;
  v746 = v744 ^ 0xA3153DC ^ (v745 ^ 0x211111C) & (v744 << 8);
  v747 = v738 ^ (2
               * ((v746 << 16) & 0xA310000 ^ v746 ^ ((v746 << 16) ^ 0x53DC0000) & (((v745 ^ 0x820421C) << 8) & 0xA310000 ^ 0xA200000 ^ (((v745 ^ 0x820421C) << 8) ^ 0x31530000) & (v745 ^ 0x820421C))));
  v748 = (((LODWORD(STACK[0x15E4]) ^ 0xA251F017) + 1571688425) ^ ((LODWORD(STACK[0x15E4]) ^ 0x8E22835D) + 1910340771) ^ ((LODWORD(STACK[0x15E4]) ^ 0xA15EE72D) + 1587615955))
       - 1777651755
       + (((v747 ^ 0x6EE05BC5) - 465019603) ^ ((v747 ^ 0x92DC0024) + 410257102) ^ ((v747 ^ 0x4463690) - 1896992646));
  v749 = (v748 ^ 0x240FFCF4) & (2 * (v748 & 0x844FF8F9)) ^ v748 & 0x844FF8F9;
  v750 = ((2 * (v748 ^ 0x2C930CC4)) ^ 0x51B9E87A) & (v748 ^ 0x2C930CC4) ^ (2 * (v748 ^ 0x2C930CC4)) & 0xA8DCF43C;
  v751 = v750 ^ 0xA8441405;
  v752 = (v750 ^ 0x18E028) & (4 * v749) ^ v749;
  v753 = ((4 * v751) ^ 0xA373D0F4) & v751 ^ (4 * v751) & 0xA8DCF43C;
  v754 = (v753 ^ 0xA050D039) & (16 * v752) ^ v752;
  v755 = ((16 * (v753 ^ 0x88C2409)) ^ 0x8DCF43D0) & (v753 ^ 0x88C2409) ^ (16 * (v753 ^ 0x88C2409)) & 0xA8DCF430;
  v756 = v754 ^ 0xA8DCF43D ^ (v755 ^ 0x88CC4000) & (v754 << 8);
  LODWORD(STACK[0x1610]) = v697 ^ 0x8D2D9467;
  v757 = v748 ^ (2
               * ((v756 << 16) & 0x28DC0000 ^ v756 ^ ((v756 << 16) ^ 0x743D0000) & (((v755 ^ 0x2010B42D) << 8) & 0xA8DC0000 ^ 0x20080000 ^ (((v755 ^ 0x2010B42D) << 8) ^ 0xDCF40000) & (v755 ^ 0x2010B42D))));
  v758 = (((v727 ^ 0xE59D3931) - 1922617031) ^ ((v727 ^ 0x5C7BE49C) + 880929942) ^ ((v727 ^ 0xA3CEBE3C) - 885737930))
       - 758927200
       + v737;
  v759 = (v758 ^ 0x3265DBB7) & (2 * (v758 & 0xBA69E3C7)) ^ v758 & 0xBA69E3C7;
  v760 = ((2 * (v758 ^ 0x7234DBB3)) ^ 0x90BA70E8) & (v758 ^ 0x7234DBB3) ^ (2 * (v758 ^ 0x7234DBB3)) & 0xC85D3874;
  v761 = v760 ^ 0x48450814;
  v762 = (v760 ^ 0x80081020) & (4 * v759) ^ v759;
  v763 = ((4 * v761) ^ 0x2174E1D0) & v761 ^ (4 * v761) & 0xC85D3874;
  v764 = (v763 ^ 0x542054) & (16 * v762) ^ v762;
  v765 = ((16 * (v763 ^ 0xC8091824)) ^ 0x85D38740) & (v763 ^ 0xC8091824) ^ (16 * (v763 ^ 0xC8091824)) & 0xC85D3870;
  v766 = v764 ^ 0xC85D3874 ^ (v765 ^ 0x80510000) & (v764 << 8);
  LODWORD(STACK[0x1570]) = v657 ^ 0x8D2D9467;
  LODWORD(STACK[0x1770]) = v696 ^ 0x93BA99BB;
  v767 = v699 ^ 0x8D2D9467;
  v768 = v758 ^ LODWORD(STACK[0x173C]);
  STACK[0x1178] = v700 ^ 0xE686B751;
  v769 = v736 ^ 0x7AFD603Eu;
  v770 = v768 ^ (2
               * ((v766 << 16) & 0x485D0000 ^ v766 ^ ((v766 << 16) ^ 0x38740000) & (((v765 ^ 0x480C3834) << 8) & 0x485D0000 ^ 0x450000 ^ (((v765 ^ 0x480C3834) << 8) ^ 0x5D380000) & (v765 ^ 0x480C3834)))) ^ 0x3A7B932F;
  v771 = STACK[0x13D8];
  if (LODWORD(STACK[0x13D8]) == 1)
  {
    LODWORD(STACK[0x1820]) = v613;
    LODWORD(STACK[0x1818]) = v339;
    LODWORD(STACK[0x1500]) = v246;
    LODWORD(STACK[0x17D8]) = v544;
    LODWORD(STACK[0x1808]) = v658;
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0]
                                                        + 8
                                                        * ((999
                                                          * (LODWORD(STACK[0x1364]) == (LODWORD(STACK[0xA30]) ^ 0xE5))) ^ LODWORD(STACK[0xA2C])))
                                            - (STACK[0xAA0] ^ 0x2D08)))(v769);
  }
  else
  {
    LODWORD(STACK[0x15E4]) = v757 ^ 0x18E384E4;
    LODWORD(STACK[0x173C]) = v770;
    LODWORD(STACK[0x1648]) = v769;
    LODWORD(STACK[0x1710]) = v767;
    if (v771 == 2)
    {
      v773 = STACK[0x1890];
      LODWORD(STACK[0x1450]) = HIWORD(LODWORD(STACK[0x1890])) ^ 0x2D;
      LODWORD(STACK[0x1890]) = HIBYTE(v773) ^ 0x8D2D94EA;
      LODWORD(STACK[0x1460]) = HIBYTE(v773) ^ 0xFFFFFF8D;
      return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0xA28])) - 4))();
    }
    else
    {
      return sub_100219F0C(v769, v700, v657, v696, v767, 158988304, v697);
    }
  }
}

uint64_t sub_10024A40C@<X0>(unsigned int a1@<W1>, unint64_t a2@<X2>, unsigned int a3@<W3>, unint64_t a4@<X6>, unsigned int a5@<W8>)
{
  unsigned int v5;
  unint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned __int8 *v17;
  int v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  char v22;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  char v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  unint64_t v75;
  unsigned int v76;
  int v77;
  unint64_t v78;
  int v79;
  unsigned int v80;
  int v81;
  unint64_t v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unint64_t v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  unint64_t v95;
  int v96;
  unint64_t v97;
  int v98;
  unint64_t v99;
  int v100;
  unint64_t v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unint64_t v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unint64_t v110;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  unint64_t v115;
  int v116;
  int v117;
  unint64_t v118;
  uint64_t v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  char v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  BOOL v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  int v165;
  char v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  uint64_t v183;
  int v184;
  unsigned int v185;
  uint64_t (*v186)(uint64_t);

  LODWORD(STACK[0xF50]) = v9;
  LODWORD(STACK[0x1670]) = v12;
  v13 = v7 ^ 0xB7560748;
  v14 = (v8 + 179054707) & 0x7553FFBF;
  v15 = (v8 + 9532) | 0x19E;
  v16 = STACK[0x1838];
  LODWORD(STACK[0x1610]) = v14;
  v17 = (unsigned __int8 *)STACK[0x1468];
  v18 = *(unsigned __int8 *)(STACK[0x1468] + (BYTE1(v16) ^ 0x55A3 ^ v14));
  LOBYTE(v14) = (((2 * (v16 & 0x69 ^ 0x49)) | 0x8C) - (v16 & 0x69 ^ 0x49) - 70) ^ 0x66;
  v19 = STACK[0x1730];
  LODWORD(STACK[0x1810]) = v11;
  v20 = STACK[0x18B8];
  LOBYTE(v14) = 63
              * (((v14 - ((2 * v14) & 0x96) + 75) ^ 0x2A | v16 & 0x69 ^ 0x61) ^ HIBYTE(v19) ^ *(_BYTE *)((HIBYTE(v19) ^ 0x42) + STACK[0x18B8] + 4174) ^ 0xE9);
  v21 = (((2 * (a2 ^ 0x3D)) | 0xC72E9B80) - (a2 ^ 0x3D) + 476623424) ^ 0xF1856FD1;
  LODWORD(STACK[0x1800]) = v10;
  v22 = (71 * (BYTE1(v19) ^ 0x94)) ^ 0xA5 ^ *(_BYTE *)((71 * (BYTE1(v19) ^ 0x94)) + v20 + 22881);
  STACK[0x1770] = v13;
  LODWORD(STACK[0x1840]) = (v17[v13 >> 24] << 24) | (v17[BYTE2(v13)] << 16) | (v17[BYTE1(v13)] << 8);
  LODWORD(STACK[0x1898]) = v15;
  v24 = v17[BYTE2(a2)];
  v25 = v17[(((2 * v21) & 0x61732E8E) - v21 - 1891211080) ^ 0x9D544A94];
  v26 = (v18 << 8) | (v17[(v15 - 21329) ^ HIBYTE(v16)] << 24) | (v17[BYTE2(v16) ^ 0x2DLL] << 16);
  v27 = v17[a2 >> 24];
  LODWORD(STACK[0x1890]) = (v17[v14] << 24) | (v17[BYTE2(v19) ^ 0x2DLL] << 16) | (v17[(v22 - 107)] << 8) | v17[(-752972598 - (v19 ^ 0x5C4C04F6 | 0xD31E8CCA) + (v19 ^ 0x5C4C04F6 | 0x2CE17335)) ^ 0x70AD77A4];
  v28 = v17[BYTE1(a2)];
  LODWORD(STACK[0x17C0]) = v25 | (((v24 << 8) | (v27 << 16) | v28) << 8);
  v29 = STACK[0x15DC];
  v30 = LODWORD(STACK[0x15DC]) ^ 0x2804AC05;
  LOBYTE(v25) = 63 * (*(_BYTE *)((BYTE1(LODWORD(STACK[0x15DC])) ^ 0x86u) + v20 + 41218) ^ 9);
  v31 = *(unsigned __int8 *)(((-3 * (HIWORD(LODWORD(STACK[0x15DC])) ^ 0x2D)) ^ 0x1Bu) + v20 + 39526) ^ 0xFFFFFFA2;
  v32 = (v31 >> 3) & 0x15 ^ v31;
  v33 = v32 ^ 5;
  v32 ^= 0xFFFFFFFA;
  v34 = v17[v16 ^ 0x67];
  LODWORD(STACK[0x1860]) = v26 | v34;
  v35 = v17[((v32 << (~(v33 | v32)
                                     + (((((v16 & 6 ^ 2) - ((2 * (v16 & 6 ^ 2)) & 4) + 2) ^ 0x27)
                                       - ((2 * (((v16 & 6 ^ 2) - ((2 * (v16 & 6 ^ 2)) & 4) + 2) ^ 0x27)) & 0x1A)
                                       - 115) ^ 0xAA)
                                     + (((v16 & 4) + (v16 & 6 ^ 0x17) - ((v16 & 6 ^ 0x17) & 0x15) - 32) ^ 0xE4)))
                            + ((v32 & 0xFC) >> 2))];
  LOBYTE(v32) = 63 * (*(_BYTE *)((HIBYTE(a3) ^ 0xC) + v20 + 41218) ^ ((v34 & 9 ^ 9) + (v34 & 9)));
  v36 = STACK[0x1154];
  v37 = v17[(((2 * v30) & 0x500818BAu) - v30 - 1814908766) ^ 0xBBD61CC0] | (v17[HIBYTE(v29) ^ 0x8DLL] << 24);
  v38 = v17[BYTE2(a3) ^ 0x97];
  LODWORD(STACK[0x1868]) = v37 | (v17[v25] << 8) | (v35 << 16);
  v39 = v17[BYTE1(a3) ^ 0xDLL];
  v40 = ((a3 ^ 0xE4) + (a3 & 0xF5 ^ 0x1FC4B611) - ((a3 ^ 0xE4) & 0xF5)) ^ 0x14C9B2D5;
  v41 = (v17[HIBYTE(v36) ^ 0x8DLL] << 16) | (v17[BYTE2(v36) ^ 0x2DLL] << 8) | v17[BYTE1(v36) ^ 0x94];
  v42 = (v38 << 8) | (v17[v32] << 16) | v39;
  v43 = (((2 * (v36 ^ 0xEC)) & 0x19C) - (v36 ^ 0xEC) + 1881503793) ^ 0x706448B2;
  v44 = v17[(-1089353854 - (v43 | 0xBF11C782) + (v43 | 0x40EE387D)) ^ 0x40AF0875];
  LODWORD(STACK[0x1838]) = v17[(v40 - ((2 * v40) & 0x40A0E66u) - 1838856397) ^ 0x9968432BLL] | (v42 << 8);
  v45 = v17[BYTE2(a5) ^ 0xD0];
  LOBYTE(v32) = *(_BYTE *)((BYTE1(a5) ^ 0xE6u) + v20 + 41218);
  v46 = v17[HIBYTE(a5) ^ 0xF7];
  v47 = v44 | (v41 << 8);
  v48 = (1514245884 - (a5 ^ 0x61 | 0x5A418EFC) + (a5 ^ 0x61 | 0xA5BE7103)) ^ 0x85F3331B;
  v49 = STACK[0x17CC];
  LODWORD(STACK[0x1778]) = (v46 << 24) | (v45 << 16) | v17[(752114619 - (v48 | 0x2CD45BBB) + (v48 | 0xD32BA444)) ^ 0xF366E664] | (v17[(63 * (v32 ^ 9))] << 8);
  v50 = v17[(((2 * (v49 ^ 0x4F)) | 0x99CA7372) - (v49 ^ 0x4F) - 1290090937) ^ 0x4CE53991];
  v51 = v17[BYTE2(v49) ^ 0x2DLL];
  LOBYTE(v48) = *(_BYTE *)(v20 + ((71 * v17[BYTE1(v49) ^ 0x94]) ^ 0xB1u) + 22623) - 84;
  v52 = ((v28 & 0x95 ^ 0x95)
                        + (v28 & 0x95)
                        + ((*(_BYTE *)(((71 * (HIBYTE(v49) ^ 0x8D)) ^ 0xB1u) + v20 + 22623) - 84) ^ 0x29));
  v53 = ((2 * (v5 ^ 0xC2)) & 0x104) - (v5 ^ 0xC2) + 108486269;
  v54 = HIBYTE(v5) ^ 0x95;
  v55 = v17[((v53 & 0x4410D8E ^ 0x1088182) + (v53 ^ 0xBE714E3D) - ((v53 ^ 0xBE714E3D) & 0x2804118E)) ^ 0x954B8D8F];
  v56 = v17[BYTE2(v5) ^ 0xCELL];
  v57 = v17[BYTE1(v5) ^ 0x10];
  LODWORD(v52) = (v17[v52] << 16) | (v51 << 8) | ((v48 ^ 0x29) - 107);
  v58 = v17[v54];
  LODWORD(STACK[0x1730]) = v50 | ((_DWORD)v52 << 8);
  v59 = STACK[0x1870];
  LODWORD(v52) = LODWORD(STACK[0x1870]) ^ 0xA5;
  v60 = 71
      * v17[(63
                                          * (*(_BYTE *)((((_DWORD)v52 - ((2 * (_DWORD)v52) & 0x1B2) + 6105) ^ 0x1709u)
                                                      + v20
                                                      + 41218) ^ 9))];
  LOBYTE(v52) = *(_BYTE *)(v20
                         + (71
                                           * v17[(63
                                                                 * (*(_BYTE *)((((_DWORD)v52
                                                                               - ((2 * (_DWORD)v52) & 0x1B2)
                                                                               + 6105) ^ 0x1709u)
                                                                             + v20
                                                                             + 41218) ^ 9))])
                         + 22881);
  STACK[0x1720] = v60;
  v61 = v17[BYTE1(v59) ^ 0x94];
  LOBYTE(v51) = (v60 ^ 0xA5 ^ v52) - 107;
  LODWORD(v52) = v55 | (v58 << 24) | (v56 << 16) | (v57 << 8);
  LODWORD(STACK[0x1710]) = (v17[BYTE2(v59) ^ 0x2DLL] << 16) | (v17[HIBYTE(v59) ^ 0x8DLL] << 24);
  v62 = ((a1 & 0x83 ^ 0xD1222803) + (a1 & 0x7C ^ 0xD) - 1) ^ 0xEFF092C9;
  LODWORD(STACK[0x1708]) = v51 | (v61 << 8);
  LODWORD(v54) = STACK[0x1834];
  v63 = (v17[BYTE2(a1) ^ 0xABLL] << 16) | (v17[HIBYTE(a1) ^ 0x6BLL] << 24) | v17[(1637382748
                                                                                - v62
                                                                                + ((2 * v62) & 0x3C850B46)) ^ 0x5F4AC0ACLL] | (v17[BYTE1(a1) ^ 0x23] << 8);
  v64 = STACK[0x1718];
  v65 = (((2 * (LODWORD(STACK[0x1718]) ^ 0x52)) & 0xE4)
       - (LODWORD(STACK[0x1718]) ^ 0x52)
       + 940934285) ^ 0x7E5FA88D;
  v66 = -1428500559 - (v65 | 0xAADACFB1) + (v65 | 0x5525304E);
  v67 = v17[(((2 * (LODWORD(STACK[0x1834]) ^ 0x10C75)) | 0xDF1EB486)
           - (LODWORD(STACK[0x1834]) ^ 0x10C75)
           + 275817917) ^ 0xEF8E5651];
  v68 = v67 | (v17[BYTE2(v54) ^ 0x2DLL] << 16) | (((v17[BYTE3(v54) ^ 0x8DLL] << (((v54 & 0x10 ^ 0x10) + (v54 & 0x10)) | 0x10)) | v17[BYTE1(v54) ^ 0x94]) << 8);
  LOBYTE(v65) = v59 & 8 ^ 8;
  v69 = (v17[v6 >> 24] << 24) | ((((*(_BYTE *)(v20
                                                              + ((71 * v17[BYTE2(v6)]) ^ 0xB1u)
                                                              + 22623)
                                                   - 84) ^ 0x29)
                                                 - 107) << 16) | v17[((v6 & 0xEC ^ 0x105C336D) + (v6 & 0x13) - 1) ^ 0x105C336C];
  v70 = v52 ^ LODWORD(STACK[0x1860]);
  LODWORD(STACK[0x1688]) = v70;
  v71 = v17[v66 ^ 0x136F1C7B];
  LODWORD(v66) = v17[BYTE1(v64) ^ 0x94];
  LODWORD(STACK[0x1690]) = v71 | (((v17[HIBYTE(v64) ^ 0x8DLL] << 16) | (v17[BYTE2(v64) ^ 0x2DLL] << 8) | v66) << 8);
  v72 = v69 | (v17[(v6 >> (v65 + (v59 & 8)))] << 8);
  v73 = *(unsigned __int8 *)(((-3 * BYTE2(a4)) ^ 0x1Bu) + v20 + 39526);
  v74 = (((v73 ^ 0xFFFFFFE0) & 0xAD) >> ((v66 & 3 ^ 3) + (v66 & 3))) ^ v73;
  v75 = (v17[(((2 * (a4 ^ 0x7002508)) | 0xEC5E78EC) - (a4 ^ 0x7002508) + 164676490) ^ 0xF12F197ELL] | (v17[BYTE1(a4)] << 8) | (v17[a4 >> 24] << 24) | (v17[((v74 >> 2) | ((_BYTE)v74 << 6)) ^ 0x16] << 16)) ^ v47;
  v76 = LODWORD(STACK[0x1868]) ^ 0x8D2D9467 ^ v72;
  LODWORD(STACK[0x1860]) = v76;
  v77 = v63 ^ LODWORD(STACK[0x1890]);
  v78 = STACK[0x17F8];
  STACK[0x17A0] = BYTE2(v75);
  LOBYTE(v63) = 63 * (*(_BYTE *)((*(unsigned __int8 *)(v78 + BYTE2(v75)) ^ 0x12) + v20 + 41218) ^ 9);
  LODWORD(STACK[0x1788]) = v75;
  STACK[0x1798] = v75 >> 24;
  v79 = (v63 << ((v65 ^ (v59 & 8 | 0xE0)) + 48)) ^ (v17[1] << 24);
  v80 = *(unsigned __int8 *)(v20 + ((-3 * *(_BYTE *)(v78 + BYTE1(v75))) ^ 0x1Bu) + 39526);
  v81 = (v80 >> 3) & 0x15 ^ v80;
  v82 = 63
      * (*(unsigned __int8 *)(v78 + (v75 >> 24)) ^ 0xD ^ *(unsigned __int8 *)((*(unsigned __int8 *)(v78 + (v75 >> 24)) ^ 0xCFLL)
                                                                                          + v20
                                                                                          + 4174));
  v83 = v79 ^ (*(unsigned __int8 *)(v78
                                  + ((((2 * (v75 ^ 0xA3)) | 0x6D91A0)
                                    - (v75 ^ 0xA3)
                                    + 2110338864) & 0x3FFFFFF ^ 0x236C873)) << 8);
  STACK[0x1380] = v82;
  v84 = v83 ^ v82 ^ ((((v81 & 0xFC) >> 2) ^ 0x13 | ((_BYTE)v81 << 6)) << 16);
  LODWORD(STACK[0x1870]) = v70 ^ 0x8D2D9467;
  v85 = (v84 - 1926392729 - ((2 * v84) & 0x1A5B28CE)) ^ v70 ^ 0x8D2D9467;
  LODWORD(STACK[0x1700]) = v85;
  LODWORD(STACK[0x1834]) = v77;
  v86 = (v85 - 1926392729 - ((2 * v85) & 0x1A5B28CE)) ^ v77 ^ 0x8D2D9467;
  LODWORD(STACK[0x1638]) = v86;
  v87 = (v86 - 1926392729 - ((2 * v86) & 0x1A5B28CE)) ^ v76;
  LODWORD(STACK[0x16B0]) = v87;
  v88 = (v87 - 1926392729 - ((2 * v87) & 0x1A5B28CE)) ^ v75 ^ 0x8D2D9467;
  v89 = *(unsigned __int8 *)(v20
                           + ((-3
                                              * *(_BYTE *)(v78
                                                         + ((v87 + 103 - ((2 * v87) & 0xCE)) ^ v75 ^ 0x67))) ^ 0x1Bu)
                           + 39526);
  LODWORD(v52) = *(unsigned __int8 *)(v78 + BYTE2(v88));
  LODWORD(STACK[0x1668]) = v68;
  v90 = ((v17[(v67 | ~(_BYTE)v68) & 2] << 24) | ((((((v89 >> 3) & 0x15 ^ v89) >> 2) | (((v89 >> 3) & 0x15 ^ v89) << 6)) ^ 0x13) << 8) | *(unsigned __int8 *)(v78 + (v88 >> 24)) | (*(unsigned __int8 *)(v78 + BYTE1(v88)) << 16)) ^ ((_DWORD)v52 << ((~(_BYTE)v68 & 0x18) + (v67 & 0x18)));
  LODWORD(STACK[0x1868]) = v77 ^ 0x8D2D9467;
  v91 = (v90 - 1926392729 - ((2 * v90) & 0x1A5B28CE)) ^ v77 ^ 0x8D2D9467;
  LODWORD(STACK[0x161C]) = v91;
  v92 = (v91 - 1926392729 - ((2 * v91) & 0x1A5B28CE)) ^ v75 ^ 0x8D2D9467;
  v93 = (*(unsigned __int8 *)(v78
                            + (*(unsigned __int8 *)((((v92 >> 19) & 0xE0 | (v92 >> 27)) ^ 0x99) + v20 + 4432) ^ 0x38)) | (v17[4] << 24)) ^ (*(unsigned __int8 *)(v78 + BYTE2(v92)) << 24) | (*(unsigned __int8 *)(v78 + BYTE1(v92)) << 16) | (*(unsigned __int8 *)(v78 + ((v91 + 103 - ((2 * v91) & 0xCE)) ^ v75 ^ 0x67)) << 8);
  LODWORD(STACK[0x16F8]) = v85 ^ v90;
  LODWORD(v52) = v17[8] << 24;
  v94 = v93 ^ v85 ^ v90;
  LODWORD(STACK[0x1698]) = v94;
  v95 = v87 ^ v94 ^ v92;
  LODWORD(v66) = v87 ^ v94;
  LODWORD(STACK[0x16A4]) = v87 ^ v94;
  STACK[0x16E0] = v95;
  v96 = v52 | (*(unsigned __int8 *)(v78 + BYTE1(v95)) << 16);
  v97 = v95 >> 24;
  v98 = *(unsigned __int8 *)(v78 + (v95 >> 24));
  LODWORD(v82) = *(unsigned __int8 *)(((-3 * v95) ^ 0x1Bu) + v20 + 39526);
  LODWORD(v52) = ((v82 & 0xAD ^ 0xA0) >> ((v77 & 0x1A ^ 0x1A)
                                        - 23
                                        + ((123 - (v77 & 0x1A ^ 0x90 | 0x7B) + (v77 & 0x1A ^ 0x90 | 0x84)) ^ 0x14u))) ^ v82;
  LODWORD(v52) = (v96 | v98) ^ (*(unsigned __int8 *)(v78 + BYTE2(v95)) << 24) | (*(unsigned __int8 *)(v78 + (((v52 >> 2) | ((_BYTE)v52 << 6)) ^ 0x16)) << 8);
  LOBYTE(v81) = (v75 & 0xDD ^ 0x8C) + 115 - ((2 * v75) & 0xA2);
  LODWORD(STACK[0x1890]) = v75 ^ 0x8D2D9467;
  v99 = ((int)v52 - 1926392729 - 2 * (v52 & 0xD2D947F ^ v98 & 0x18)) ^ v75 ^ 0x8D2D9467;
  LODWORD(v82) = *(unsigned __int8 *)(v78 + (v99 >> 24)) | (*(unsigned __int8 *)(v78
                                                                               + ((v52
                                                                                                  + 103
                                                                                                  - 2 * (v52 & 0x7F ^ v98 & 0x18)) ^ v75 ^ 0x67)) << 8) | (*(unsigned __int8 *)(v78 + BYTE2(v99)) << 24) | (*(unsigned __int8 *)(v78 + BYTE1(v99)) << 16);
  LODWORD(STACK[0x16D0]) = v52 ^ v94;
  v100 = v52 ^ v94 ^ (v17[16] << 24) ^ v82;
  v101 = v100 ^ v66 ^ v99;
  v102 = (63
                         * (*(_BYTE *)(v20
                                     + (((((~(_BYTE)v81 & 0x52 | v81 & 0xAD ^ 0x88) ^ 0xF8)
                                                         + (((v75 & 0xDD ^ 0xA0)
                                                           - ((2 * (v75 & 0xDD ^ 0xA0)) & 0xC8)
                                                           + 100) ^ 0xC4)) ^ *(_BYTE *)(v78 + (v101 >> 24))) ^ 0xCFu)
                                     + 41218) ^ 9)) | (v17[32] << 24);
  v103 = (*(unsigned __int8 *)(v78 + ((unsigned __int16)(v100 ^ v66 ^ v99) >> 8)) << 16) | (*(unsigned __int8 *)(v78 + (v100 ^ v66 ^ v99)) << 8);
  STACK[0x1780] = v101;
  v104 = (v103 | (*(unsigned __int8 *)(v78 + BYTE2(v101)) << 24)) ^ v102;
  LODWORD(STACK[0x1858]) = v52 ^ v91;
  v105 = v104 ^ v52 ^ v91;
  v106 = v105 ^ v99;
  v107 = *(unsigned __int8 *)(v20
                            + ((-3
                                               * *(_BYTE *)(v78
                                                          + (v105 ^ (v52
                                                                                    + 103
                                                                                    - 2 * (v52 & 0x7F ^ v98 & 0x18)) ^ v75 ^ 0x67))) ^ 0xFDu)
                            + 40108);
  v108 = ((v107 >> 7) | (2 * v107)) ^ (((v107 >> 7) | (2 * v107)) >> 6) ^ (((v107 >> 7) | (2 * v107)) >> 4) ^ 0xFFFFFFD7;
  v109 = (((((*(unsigned __int8 *)(v20 + ((71 * *(_BYTE *)(v78 + BYTE2(v106))) ^ 0xB1u) + 22623) - 84) ^ 0x29)
          - 107) ^ v17[64]) << 24) | (((v108 >> 2) | ((_BYTE)v108 << 6)) << 8) | (*(unsigned __int8 *)(v78 + BYTE1(v106)) << 16) | *(unsigned __int8 *)(v78 + (v106 >> 24));
  LODWORD(STACK[0x17A8]) = v100;
  LODWORD(STACK[0x173C]) = v104 ^ v100;
  LODWORD(v95) = v109 ^ v104 ^ v100;
  LODWORD(STACK[0x17CC]) = v100 ^ v66;
  LODWORD(v82) = v95 ^ v100 ^ v66;
  v110 = v82 ^ v106;
  v111 = *(unsigned __int8 *)(v78
                            + (v82 ^ v105 ^ (v52 + 103 - 2 * (v52 & 0x7F ^ v98 & 0x18)) ^ v75 ^ 0x67));
  LOBYTE(v111) = *(_BYTE *)(v20 + (((v111 >> 3) | (32 * v111)) ^ 0x9Du) + 1665) - 38;
  STACK[0xC58] = v97;
  v112 = (v17[128] << 24) | (((v111 ^ (v111 >> 5) ^ (v111 >> 4)) ^ 0xE2) << 8);
  v113 = *(unsigned __int8 *)(v78 + (v110 >> 24));
  v114 = (*(unsigned __int8 *)(v78 + BYTE2(v110)) << ((v97 & 0x41) + (v97 & 0x41 ^ 0x41) - 41)) ^ (*(unsigned __int8 *)(v78 + BYTE1(v110)) << 16) ^ v113 ^ v112;
  v115 = v114 ^ v99;
  v116 = (*(unsigned __int8 *)(v78 + (v115 >> 24)) | (*(unsigned __int8 *)(v78 + BYTE2(v115)) << 24) | (*(unsigned __int8 *)(v78 + BYTE1(v115)) << 16) | (*(unsigned __int8 *)(v78 + ((*(_BYTE *)(v78 + BYTE2(v110)) << ((v97 & 0x41) + (v97 & 0x41 ^ 0x41) - 41)) ^ v113 ^ v112 ^ v99)) << 8)) ^ (v17[(v113 & 0x1B ^ 0x1BLL) + (v113 & 0x1B)] << 24);
  LODWORD(STACK[0x1680]) = v114 ^ v105;
  LODWORD(STACK[0x1748]) = v82;
  v117 = v114 ^ v105 ^ v82;
  LODWORD(STACK[0x1768]) = v105;
  LODWORD(STACK[0x1718]) = v95 ^ v105;
  LODWORD(v52) = v116 ^ v95 ^ v105;
  LODWORD(STACK[0x1648]) = v52;
  LOBYTE(v16) = v52 ^ 0x67;
  LODWORD(v52) = (v117 - 1926392729 - ((2 * v117) & 0x1A5B28CE)) ^ v52 ^ 0x8D2D9467;
  STACK[0x1760] = v115;
  LODWORD(STACK[0x16C0]) = v52;
  v118 = v52 ^ v115;
  v119 = (v52 ^ v114 ^ v99) ^ 0x12u;
  LODWORD(v82) = (*(unsigned __int8 *)(v78 + (v118 >> 24)) | (v17[54] << 24)) ^ (*(unsigned __int8 *)(v78 + BYTE2(v118)) << 24) | (*(unsigned __int8 *)(v78 + (63 * (*(_BYTE *)(v119 + v20 + 41218) ^ 9))) << 8);
  LODWORD(STACK[0x16F0]) = v114 ^ v95;
  v120 = v116 ^ v114 ^ v95;
  LODWORD(v52) = STACK[0x1688];
  v121 = LODWORD(STACK[0x1688]) ^ 0x7A7A7A7A;
  LODWORD(STACK[0x1644]) = v120 ^ 0xADADADAD;
  v122 = *(unsigned __int8 *)(((-3 * (-110 - (v52 ^ 0x7A) - (v120 ^ 0xAD))) ^ 0xFDu) + v20 + 40108);
  LODWORD(v97) = STACK[0x1770] ^ 0x69;
  LODWORD(v115) = v97 + (STACK[0x1770] & 0xBC ^ 0x3257D094);
  LODWORD(v115) = LODWORD(STACK[0x1840]) | v17[((((_DWORD)v115 - (v97 & 0xBC)) ^ 0x1F5340B4)
                                              - ((2 * (((_DWORD)v115 - (v97 & 0xBC)) ^ 0x1F5340B4)) & 0x1201179C)
                                              - 1721127986) ^ 0xB46D3BAF];
  LODWORD(STACK[0x1678]) = (LODWORD(STACK[0x1710]) | LODWORD(STACK[0x1708])) ^ LODWORD(STACK[0x17C0]);
  LODWORD(STACK[0x1668]) ^= LODWORD(STACK[0x1838]);
  LODWORD(STACK[0x1688]) = LODWORD(STACK[0x1690]) ^ LODWORD(STACK[0x1778]);
  LODWORD(STACK[0x1650]) = LODWORD(STACK[0x1730]) ^ v115;
  LODWORD(v101) = v82 ^ v120 ^ (*(unsigned __int8 *)(v78 + BYTE1(v118)) << ((v118 & 0x71 ^ 0x61) & v119 ^ 0x10));
  LOBYTE(v115) = (v101 + 103 - ((2 * v101) & 0xCE)) ^ v16;
  LODWORD(v82) = ((v122 >> 7) | (2 * v122)) ^ (((v122 >> 7) | (2 * v122)) >> 6) ^ (((v122 >> 7) | (2 * v122)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(STACK[0x1254]) = (_DWORD)v82 << 6;
  LODWORD(v82) = 16843009 * (((_BYTE)v82 << 6) | (v82 >> 2)) - 862209175;
  v123 = (v82 ^ 0x3B420687) & (2 * (v82 & 0x33644497)) ^ v82 & 0x33644497;
  LODWORD(v119) = ((2 * (v82 ^ 0x5DC287A9)) ^ 0xDD4D867C) & (v82 ^ 0x5DC287A9) ^ (2 * (v82 ^ 0x5DC287A9)) & 0x6EA6C33E;
  v124 = (v119 ^ 0x4C00023C) & (4 * v123) ^ v123;
  LODWORD(v119) = ((4 * (v119 ^ 0x22A24102)) ^ 0xBA9B0CF8) & (v119 ^ 0x22A24102) ^ (4 * (v119 ^ 0x22A24102)) & 0x6EA6C33C;
  v125 = (v119 ^ 0x2A820030) & (16 * v124) ^ v124;
  LODWORD(v119) = ((16 * (v119 ^ 0x4424C306)) ^ 0xEA6C33E0) & (v119 ^ 0x4424C306) ^ (16 * (v119 ^ 0x4424C306)) & 0x6EA6C330;
  v126 = v125 ^ 0x6EA6C33E ^ (v119 ^ 0x6A240300) & (v125 << 8);
  v127 = v82 ^ (2
              * ((v126 << 16) & 0x6EA60000 ^ v126 ^ ((v126 << 16) ^ 0x433E0000) & (((v119 ^ 0x482C01E) << 8) & 0x6EA60000 ^ 0x48240000 ^ (((v119 ^ 0x482C01E) << 8) ^ 0x26C30000) & (v119 ^ 0x482C01E))));
  LOBYTE(v119) = v115 + 103 - ((2 * v115) & 0xCE);
  LODWORD(v115) = v106 - 1926392729 - ((2 * v106) & 0x1A5B28CE);
  LODWORD(STACK[0x17C0]) = v95;
  v128 = STACK[0x1638];
  LODWORD(v17) = v95 ^ LODWORD(STACK[0x1638]);
  LODWORD(v106) = (v17 & 0x230C9C49 ^ 0x42852C40)
                + (v17 & 0x3049801 ^ 0x1560D295)
                - ((v17 & 0x230C9C49 ^ 0x42852C40) & 0x3859801);
  LODWORD(v115) = (v127 ^ v115 ^ 0x963927FD)
                - (((v17 ^ 0xF571A984) + 1231883475) ^ ((v17 ^ 0x26EC3951) - 1695507448) ^ ((v17 ^ 0x1D535E1B) - 1588593842))
                - 1654270701;
  LODWORD(v82) = (v115 ^ 0x954A4667) & (2 * (v115 & 0xD56C9686)) ^ v115 & 0xD56C9686;
  v129 = ((2 * (v115 ^ 0xB58A4A63)) ^ 0xC1CDB9CA) & (v115 ^ 0xB58A4A63) ^ (2 * (v115 ^ 0xB58A4A63)) & 0x60E6DCE4;
  LODWORD(v82) = (v129 ^ 0x40C49805) & (4 * v82) ^ v82;
  v130 = ((4 * (v129 ^ 0x20224425)) ^ 0x839B7394) & (v129 ^ 0x20224425) ^ (4 * (v129 ^ 0x20224425)) & 0x60E6DCE4;
  LODWORD(v82) = (v130 ^ 0x825080) & (16 * v82) ^ v82;
  v131 = ((16 * (v130 ^ 0x60648C61)) ^ 0xE6DCE50) & (v130 ^ 0x60648C61) ^ (16 * (v130 ^ 0x60648C61)) & 0x60E6DCE0;
  LODWORD(v82) = v82 ^ 0x60E6DCE5 ^ (v131 ^ 0x64CC00) & ((_DWORD)v82 << 8);
  v132 = v115 ^ (2
               * (((_DWORD)v82 << 16) & 0x60E60000 ^ v82 ^ (((_DWORD)v82 << 16) ^ 0x5CE50000) & (((v131 ^ 0x608210A5) << 8) & 0x60E60000 ^ 0x220000 ^ (((v131 ^ 0x608210A5) << 8) ^ 0x66DC0000) & (v131 ^ 0x608210A5))));
  LOBYTE(v115) = (v17 ^ 0x31)
               + 32
               + (((v17 ^ 0x6B) + 62) ^ ((v17 ^ 0xA7) - 14) ^ ((v17 ^ 2)
                                                                                               + 85))
               + (v127 ^ v119 ^ 0xDE)
               + 1;
  LOBYTE(v82) = (v115 ^ 0x67) & (2 * (v115 & 0x47)) ^ v115 & 0x47;
  LOBYTE(v131) = ((2 * (v115 ^ 0x69)) ^ 0x5C) & (v115 ^ 0x69) ^ (2 * (v115 ^ 0x69)) & 0x2E;
  LOBYTE(v119) = v115 ^ (2
                       * ((((4 * (v131 ^ 0x22)) ^ 0xB8) & (v131 ^ 0x22) ^ (4 * (v131 ^ 0x22)) & 0x2C ^ 0x20) & (16 * ((v131 ^ 0xC) & (4 * v82) ^ v82)) ^ (v131 ^ 0xC) & (4 * v82) ^ v82 ^ 0x2E));
  LODWORD(v115) = (((v17 ^ 0xD5BC63E8) + 1772144319) ^ ((v17 ^ 0xCDC95034) + 1909847395) ^ ((v17 ^ 0xD6BBFD12) + 1789352005))
                + 981099647
                + (((v132 ^ 0x4CD132E7) - 1419086284) ^ ((v132 ^ 0x95ACA45C) + 1914167433) ^ ((v132 ^ 0x4C14B9F7)
                                                                                            - 1414529756));
  LODWORD(v82) = (v115 ^ 0xDFCE922F) & (2 * (v115 & 0xDFE0C44F)) ^ v115 & 0xDFE0C44F;
  v133 = ((2 * (v115 ^ 0xD8CF9AB5)) ^ 0xE5EBDF4) & (v115 ^ 0xD8CF9AB5) ^ (2 * (v115 ^ 0xD8CF9AB5)) & 0x72F5EFA;
  LODWORD(v82) = (v133 ^ 0x6061070) & (4 * v82) ^ v82;
  v134 = ((4 * (v133 ^ 0x121420A)) ^ 0x1CBD7BE8) & (v133 ^ 0x121420A) ^ (4 * (v133 ^ 0x121420A)) & 0x72F5EF8;
  LODWORD(v82) = (v134 ^ 0x42D5AE0) & (16 * v82) ^ v82;
  v135 = ((16 * (v134 ^ 0x3020412)) ^ 0x72F5EFA0) & (v134 ^ 0x3020412) ^ (16 * (v134 ^ 0x3020412)) & 0x72F5EF0;
  LODWORD(v82) = v82 ^ 0x72F5EFA ^ (v135 ^ 0x2254E00) & ((_DWORD)v82 << 8);
  LODWORD(STACK[0x1770]) = v115 ^ (2
                                 * (((_DWORD)v82 << 16) & 0x72F0000 ^ v82 ^ (((_DWORD)v82 << 16) ^ 0x5EFA0000) & (((v135 ^ 0x50A105A) << 8) & 0x72F0000 ^ 0x210000 ^ (((v135 ^ 0x50A105A) << 8) ^ 0x2F5E0000) & (v135 ^ 0x50A105A))));
  v136 = (((v119 ^ 0x51) - 45) ^ ((v119 ^ 0xA0) + 36) ^ ((v119 ^ 0xEA) + 106))
       + (((v17 ^ 0xB) - 70) ^ ((v17 ^ 0x34) - 121) ^ ((v17 ^ 0x15)
                                                                                       - 88));
  LODWORD(STACK[0xF3C]) = v101;
  LODWORD(STACK[0x1778]) = v117;
  LODWORD(v115) = (v106 & 0x3D32844C ^ 0x57ED792F ^ (v106 ^ 0xA8938562) & (v17 ^ 0x8C03B7ED))
                - (((v17 ^ 0xFCC30D8B) + 1088399582) ^ ((v17 ^ 0xAF7374D8) + 326095247) ^ ((v17 ^ 0x9D7EB79D) + 560075468))
                - 677809660
                + (v101 ^ v117 ^ 0x383790B9 ^ v127 ^ v118);
  LODWORD(v82) = (v115 ^ 0xDA30F9C1) & (2 * (v115 & 0x9B38F995)) ^ v115 & 0x9B38F995;
  v137 = ((2 * (v115 ^ 0xF81008C1)) ^ 0xC651E2A8) & (v115 ^ 0xF81008C1) ^ (2 * (v115 ^ 0xF81008C1)) & 0x6328F154;
  LODWORD(v82) = (v137 ^ 0x4008F100) & (4 * v82) ^ v82;
  v138 = ((4 * (v137 ^ 0x21281154)) ^ 0x8CA3C550) & (v137 ^ 0x21281154) ^ (4 * (v137 ^ 0x21281154)) & 0x6328F154;
  LODWORD(v82) = (v138 ^ 0x20C154) & (16 * v82) ^ v82;
  v139 = ((16 * (v138 ^ 0x63083004)) ^ 0x328F1540) & (v138 ^ 0x63083004) ^ (16 * (v138 ^ 0x63083004)) & 0x6328F150;
  LODWORD(v82) = v82 ^ 0x6328F154 ^ (v139 ^ 0x22081114) & ((_DWORD)v82 << 8);
  v140 = v115 ^ (2
               * (((_DWORD)v82 << 16) & 0x63280000 ^ v82 ^ (((_DWORD)v82 << 16) ^ 0x71540000) & (((v139 ^ 0x4120E014) << 8) & 0x63280000 ^ 0x43080000 ^ (((v139 ^ 0x4120E014) << 8) ^ 0x28F10000) & (v139 ^ 0x4120E014))));
  LODWORD(v115) = (-636183378
                 - (v17 & 0x9C9C9C9C ^ 0xC8880 | 0xDA149CAE)
                 + (v17 & 0x9C9C9C9C ^ 0xC8880 | 0x25EB6351)) ^ 0xE86B6555;
  v141 = (((2 * v115) | 0xED28B618) - v115 - 1989434124) ^ 0xAB08C598 | (-1343064329
                                                                       - (v17 & 0x9C9C9C9C ^ 0x9494948C | 0xAFF276F7)
                                                                       + (v17 & 0x9C9C9C9C ^ 0x9494948C | 0x500D8908)) ^ 0x48159108;
  v142 = (v136 & 1) == 0;
  v143 = v127 ^ 0x13BCA278 ^ v128;
  v144 = v127 ^ 0x13BCA278 ^ LODWORD(STACK[0x1700]);
  v145 = STACK[0x16B0];
  v146 = v127 ^ 0x13BCA278 ^ LODWORD(STACK[0x16B0]);
  STACK[0x1208] = v88;
  v147 = v127 ^ 0x13BCA278 ^ v88;
  if ((v136 & 1) != 0)
    v148 = v146;
  else
    v148 = v127 ^ 0x13BCA278 ^ v128;
  if ((v136 & 1) != 0)
  {
    v146 = v127 ^ 0x13BCA278 ^ v88;
    v147 = v144;
  }
  else
  {
    v143 = v144;
  }
  v149 = v127 ^ 0xE748568C;
  v150 = v127 ^ 0xE748568C ^ v92;
  v151 = v127 ^ LODWORD(STACK[0x161C]);
  v152 = v151 ^ 0x3F908E54;
  v153 = v127 ^ LODWORD(STACK[0x16F8]) ^ 0x3F908E54;
  if ((v136 & 1) != 0)
    v154 = v151 ^ 0x3F908E54 ^ v145;
  else
    v154 = v151 ^ 0x3F908E54;
  if ((v136 & 1) != 0)
    v155 = v150 ^ 0xD8D8D8D8;
  else
    v155 = v151 ^ 0x3F908E54 ^ v145;
  if ((v136 & 1) == 0)
  {
    v152 = v127 ^ LODWORD(STACK[0x16F8]) ^ 0x3F908E54;
    v153 = v150 ^ 0xD8D8D8D8;
  }
  v156 = STACK[0x1698];
  v157 = LODWORD(STACK[0x1698]) ^ 0x7BD4CA10 ^ v151;
  v158 = v149 ^ v121;
  STACK[0x1838] = v75;
  v159 = v75 ^ 0x7A7A7A7A ^ v149;
  v160 = v141 ^ v156 ^ v149;
  v161 = v127 ^ LODWORD(STACK[0x1860]) ^ 0x101FB891;
  if ((v136 & 1) != 0)
    v162 = v75 ^ 0x7A7A7A7A ^ v149;
  else
    v162 = v127 ^ LODWORD(STACK[0x1860]) ^ 0x101FB891;
  if ((v136 & 1) != 0)
    v159 = v158;
  v163 = LODWORD(STACK[0x1834]) ^ 0x9D322CF6 ^ v127;
  if ((v136 & 1) != 0)
    v158 = LODWORD(STACK[0x1834]) ^ 0x9D322CF6 ^ v127;
  LODWORD(STACK[0x1834]) = v161;
  if ((v136 & 1) != 0)
    v163 = v161;
  v164 = v127 ^ 0x7BD4CA10 ^ STACK[0x16E0];
  v165 = v127 ^ 0x7BD4CA10 ^ LODWORD(STACK[0x16A4]);
  v166 = v136;
  if ((v136 & 1) != 0)
    v167 = v160;
  else
    v167 = v127 ^ 0x7BD4CA10 ^ STACK[0x16E0];
  LODWORD(STACK[0x1840]) = v167;
  if (v142)
    v168 = v165;
  else
    v168 = v164;
  LODWORD(STACK[0x1710]) = v168;
  if (!v142)
    v160 = v157;
  LODWORD(STACK[0x16F8]) = v160;
  if ((v166 & 2) != 0)
    v169 = v163;
  else
    v169 = v159;
  LODWORD(STACK[0x1690]) = v169;
  if ((v166 & 2) != 0)
    v170 = v159;
  else
    v170 = v163;
  LODWORD(STACK[0x15B0]) = v170;
  if ((v166 & 2) != 0)
    v171 = v158;
  else
    v171 = v162;
  LODWORD(STACK[0x1450]) = v171;
  if ((v166 & 2) != 0)
    v172 = v162;
  else
    v172 = v158;
  LODWORD(STACK[0x1700]) = v172;
  if ((v166 & 2) != 0)
    v173 = v147;
  else
    v173 = v148;
  LODWORD(STACK[0x1458]) = v173;
  if ((v166 & 2) != 0)
    v174 = v148;
  else
    v174 = v147;
  LODWORD(STACK[0x1074]) = v174;
  if ((v166 & 2) != 0)
    v175 = v143;
  else
    v175 = v146;
  LODWORD(STACK[0x1358]) = v175;
  if ((v166 & 2) != 0)
    v176 = v146;
  else
    v176 = v143;
  LODWORD(STACK[0x1078]) = v176;
  if ((v166 & 2) != 0)
    v177 = v152;
  else
    v177 = v155;
  LODWORD(STACK[0x15C0]) = v177;
  if ((v166 & 2) != 0)
    v178 = v155;
  else
    v178 = v152;
  LODWORD(STACK[0x1530]) = v178;
  if ((v166 & 2) != 0)
    v179 = v153;
  else
    v179 = v154;
  if ((v166 & 2) != 0)
    v180 = v154;
  else
    v180 = v153;
  LODWORD(STACK[0x1080]) = v180;
  v181 = ((v150 & 0xEDEDEDED ^ 0x44C4A181)
        + (v150 & 0xA008C44C ^ 0xB01A445C)
        - ((v150 & 0xEDEDEDED ^ 0x44C4A181) & 0xA008C44C)) ^ 0xB0382A64;
  v182 = (v150 & 0xEDEDEDED ^ 0xC82CAC04) - ((2 * (v150 & 0xEDEDEDED ^ 0xC82CAC04)) & 0xC2C98040) - 211500512;
  v183 = v149 ^ LODWORD(STACK[0x1858]) ^ ((((v182 & 0xCC6A24A9 ^ 0x480A04A8) + (v182 & 0x3395DB44 ^ 0x3305DA01) - 1) ^ 0xE84F11CC)
                                        + ((1822904126 - (v181 | 0x6CA74F3E) + (v181 | 0x9358B0C1)) ^ 0x925BB3D5));
  v184 = LODWORD(STACK[0x1828]) ^ 0x1CD9467;
  v185 = (LODWORD(STACK[0x1818]) >> 2) ^ 0x8D2D9467;
  LODWORD(STACK[0x1588]) = LODWORD(STACK[0x17B0]) ^ 0x2E159467;
  LODWORD(STACK[0x156C]) = LODWORD(STACK[0x1810]) ^ 0x4EB88CF1;
  LODWORD(STACK[0x1708]) = LODWORD(STACK[0x1820]) ^ 0x6822BDB0;
  LODWORD(STACK[0x15E0]) = LODWORD(STACK[0x1800]) ^ 0x834F37DE;
  LODWORD(STACK[0x1088]) = v179;
  v186 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0]
                                                     + 8 * ((50 * (v179 == -1926392729)) ^ STACK[0xAA0]))
                                         - 8);
  LODWORD(STACK[0x1730]) = v140;
  LODWORD(STACK[0xF34]) = v140 ^ 0x12448F5A;
  LODWORD(STACK[0x1064]) = v185;
  LODWORD(STACK[0x16E0]) = v184;
  return v186(v183);
}

uint64_t sub_10024C644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (LODWORD(STACK[0x1898]) + 345)) - 12))(a1, (a5 + 1369246339), a3, a4, a5, 759497347, 2685891632, 2913840557);
}

uint64_t sub_10024C68C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  unsigned int v6;

  v5 = STACK[0x1610];
  LODWORD(STACK[0x1898]) = LODWORD(STACK[0x1610]) - 345;
  v6 = (((2 * ((v5 + 71294742) ^ a2 & 0xAE62F57D)) | 0x43617D2C) - ((v5 + 71294742) ^ a2 & 0xAE62F57D) - 565231254) ^ 0x31D81EB4;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * v5) - 12))(a1, a5- 1556474618+ ((((2 * v6) & 0x6768BFA4) - v6 + 1280024621) ^ 0xD641B037 | ((a2 & 0xA060A015 ^ 0xD020A015)+ (a2 & 0xE025568 ^ 0x10655C1)- 1) ^ 0xF16684DD));
}

uint64_t sub_10024C790@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  char v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unint64_t v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  unint64_t v96;
  int v97;
  int v98;
  int v99;
  unint64_t v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  unint64_t v107;
  unsigned __int8 v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unint64_t v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  unint64_t v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unint64_t v125;
  int v126;
  int v127;
  unint64_t v128;
  uint64_t v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unint64_t v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  unsigned int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  uint64_t v280;
  uint64_t (*v281)(uint64_t);
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;

  v21 = (STACK[0x1240] & 0x80124E00 ^ 0x8C825625) + (STACK[0x1240] & 0x2005201A) - 1;
  v22 = (((v21 & 0x42E12 ^ 0x18088175) + (v21 & 0xA0134008) - 1) ^ 0xE7E55C89)
      + (((STACK[0x1240] & (a6 - 1558) ^ 0xC034A545) - 1) & (a6 - 1558) ^ 0x5FECD1E7)
      + v9;
  v23 = v22 + a5 - ((2 * v22 + 3071032) & 0x1A5B28CE);
  v24 = a3 ^ 0xB51A04DE ^ v19;
  v25 = (((2 * (v17 & a7 ^ 0x124052C)) & 0x2491B48) - (v17 & a7 ^ 0x124052C) + 2089361417) ^ 0xE8897B08;
  v26 = v25 - ((2 * v25) & 0x4DB76C18);
  LODWORD(STACK[0x1584]) = a3 ^ 0x963927FD;
  v27 = a3 ^ 0x963927FD ^ LODWORD(STACK[0x1768]);
  v28 = a3 ^ 0x963927FD ^ LODWORD(STACK[0x173C]);
  v29 = STACK[0x17CC];
  v30 = v27 ^ LODWORD(STACK[0x17CC]);
  LODWORD(STACK[0x16A4]) = v27;
  LODWORD(STACK[0x1680]) = v30;
  if ((v20 & 1) != 0)
    v27 = v30;
  LODWORD(STACK[0x16D0]) = v15;
  LODWORD(STACK[0x1698]) = v28;
  if ((v20 & 1) == 0)
    v28 = v15;
  LODWORD(STACK[0x16B0]) = v23;
  if ((v20 & 1) != 0)
    v23 = v10;
  LODWORD(STACK[0x1828]) = v23;
  LODWORD(STACK[0xF38]) = a4;
  LODWORD(STACK[0xF30]) = v24;
  if ((v20 & 1) == 0)
    v24 = a4;
  LODWORD(STACK[0x10B0]) = v24;
  if ((v20 & 2) != 0)
    v31 = v27;
  else
    v31 = v28;
  LODWORD(STACK[0x1438]) = v31;
  LODWORD(STACK[0x15AC]) = v17 ^ 0x48E851A2;
  v32 = v14 ^ LODWORD(STACK[0x1648]) ^ (((v26 - 1495550450) ^ 0x96FA442E) + ((v17 ^ 0x48E851A2) & a7));
  v33 = v14 ^ LODWORD(STACK[0x16C0]) ^ (((((2 * (v31 & a7 ^ 0x850C0C8C)) & 0x59124B48)
                                        - (v31 & a7 ^ 0x850C0C8C)
                                        - 752445413) ^ 0xDB0710B2)
                                      + (v31 & a7 ^ 0x20802988));
  if ((v20 & 1) != 0)
    v34 = v13;
  else
    v34 = a1;
  LODWORD(STACK[0x1648]) = v34;
  v35 = (((2 * (v34 & 0x93764921 ^ 0x2704101)) | 0x88BCEC18) - (v34 & 0x93764921 ^ 0x2704101) + 1000442356) ^ 0x66DF100E;
  v36 = ((2 * v35) | 0x86F0BCFC) - v35;
  v37 = v14;
  v38 = a3 ^ 0xDD726CB6 ^ LODWORD(STACK[0x1748]);
  v39 = a3 ^ 0xDD726CB6 ^ LODWORD(STACK[0x17C0]);
  v40 = a3 ^ 0xDD726CB6 ^ LODWORD(STACK[0x1718]);
  v41 = (v36 + 1015521666) ^ 0x71DB307D | v34 & 0x93764921 ^ 0x81240021;
  v42 = ((((STACK[0x1840] & 0xEEFF527B ^ 0x8C25B022)
         - ((2 * (STACK[0x1840] & 0xEEFF527B ^ 0x8C25B022)) & 0xB764C6)
         - 1856259485) ^ 0x7FAC4859)
       + ((-529909835
         - (STACK[0x1840] & 0xEEFF527B ^ 0xCC864039 | 0xE06A37B5)
         + (STACK[0x1840] & 0xEEFF527B ^ 0xCC864039 | 0x1F95C84A)) ^ 0x5F3E9810)) & 0x8A6FF4BC;
  v43 = v17;
  LODWORD(STACK[0x159C]) = v17;
  v45 = v37 ^ LODWORD(STACK[0x1778]) ^ v42 ^ v41;
  LODWORD(STACK[0x1748]) = a3 ^ 0xFE514F95;
  v46 = a3 ^ 0xFE514F95 ^ LODWORD(STACK[0x16F0]);
  v47 = a3 ^ 0xFE514F95 ^ STACK[0x1760];
  if ((v20 & 1) != 0)
    v10 = v32;
  LODWORD(STACK[0x1638]) = v10;
  LODWORD(STACK[0x1644]) = v33;
  if ((v20 & 1) != 0)
    v48 = v33;
  else
    v48 = v32;
  LODWORD(STACK[0x1820]) = v48;
  LODWORD(STACK[0x15F8]) = v47;
  LODWORD(STACK[0x15F0]) = v46;
  if ((v20 & 1) != 0)
    v49 = v46;
  else
    v49 = v47;
  LODWORD(STACK[0x16C0]) = v16;
  if ((v20 & 1) != 0)
    v50 = v16;
  else
    v50 = v13;
  LODWORD(STACK[0x1818]) = v50;
  v51 = v50 & 0xD4D4D4D4;
  v52 = (v50 & 0xD4D4D4D4 ^ 0x50948004) - ((2 * (v50 & 0xD4D4D4D4 ^ 0x50948004)) & 0x20092120) - 1744006991;
  v53 = (v52 & 0xF27E2304 ^ 0x62522307) + (v52 & 0xD81DCF0 ^ 0x94B1);
  v54 = ((2 * (v51 ^ 0x49414C0)) & 0x2920A180) - (v51 ^ 0x49414C0);
  v55 = a2 - 1143941437;
  v56 = ((a2 - 1143941437) ^ 0xE2419E39) & (2 * ((a2 - 1143941437) & 0xF2921EBA)) ^ (a2 - 1143941437) & 0xF2921EBA;
  v57 = ((2 * (v55 ^ 0xA741BA6D)) ^ 0xABA749AE) & (v55 ^ 0xA741BA6D) ^ (2 * (v55 ^ 0xA741BA6D)) & 0x55D3A4D6;
  v58 = (v57 ^ (v11 + 3941)) & (4 * v56) ^ v56;
  v59 = ((4 * (v57 ^ 0x5450A451)) ^ 0x574E935C) & (v57 ^ 0x5450A451) ^ (4 * (v57 ^ 0x5450A451)) & 0x55D3A4D4;
  v60 = (v59 ^ 0x55428040) & (16 * v58) ^ v58;
  v61 = ((16 * (v59 ^ 0x912483)) ^ 0x5D3A4D70) & (v59 ^ 0x912483) ^ (16 * (v59 ^ 0x912483)) & 0x55D3A4D0;
  v62 = v60 ^ 0x55D3A4D7 ^ (v61 ^ 0x55120400) & (v60 << 8);
  v63 = v55 ^ 0xDDBEC373 ^ (2
                          * ((v62 << 16) & 0x55D30000 ^ v62 ^ ((v62 << 16) ^ 0x24D70000) & (((v61 ^ 0xC1A087) << 8) & 0x55D30000 ^ 0x4530000 ^ (((v61 ^ 0xC1A087) << 8) ^ 0x53A40000) & (v61 ^ 0xC1A087))));
  v64 = STACK[0x17A8];
  v65 = a3 ^ 0x339C8258 ^ LODWORD(STACK[0x1858]) ^ LODWORD(STACK[0x17A8]);
  LODWORD(STACK[0x1760]) = a3 ^ 0x339C8258;
  LODWORD(STACK[0x161C]) = v38;
  if ((v20 & 1) != 0)
    v67 = v38;
  else
    v67 = v40;
  LODWORD(STACK[0x1810]) = v67;
  if ((v20 & 1) != 0)
    v68 = v40;
  else
    v68 = v39;
  LODWORD(STACK[0x15E8]) = v68;
  LODWORD(STACK[0x15CC]) = v43 ^ 0x3A3A3A3A;
  if ((v20 & 1) != 0)
  {
    v69 = a3 ^ 0x339C8258 ^ v29;
  }
  else
  {
    v39 = v43 ^ 0x3A3A3A3A;
    v69 = v65;
  }
  LODWORD(STACK[0x17CC]) = v69;
  LODWORD(STACK[0x16F0]) = v18;
  LODWORD(STACK[0x1600]) = v45;
  if ((v20 & 1) != 0)
    v70 = v45;
  else
    v70 = v18;
  if ((v20 & 1) == 0)
    a8 = v8;
  LODWORD(STACK[0x17C0]) = a8;
  v71 = v37 ^ v64 ^ (((v53 - 2) ^ 0x2ECE3346)
                   + ((167679996
                     - ((v54 + 1128769086) ^ 0xC35587BD | 0x9FE97FC)
                     + ((v54 + 1128769086) ^ 0xC35587BD | 0xF6016803)) ^ 0x22571DD0));
  v66 = a3 ^ 0x339C8258;
  if ((v20 & 1) != 0)
    v72 = v66 ^ STACK[0x1780];
  else
    v72 = a3 ^ 0x339C8258 ^ v29;
  if ((v20 & 1) != 0)
    v73 = v65;
  else
    v73 = v37 ^ v64 ^ (((v53 - 2) ^ 0x2ECE3346)
                     + ((167679996
                       - ((v54 + 1128769086) ^ 0xC35587BD | 0x9FE97FC)
                       + ((v54 + 1128769086) ^ 0xC35587BD | 0xF6016803)) ^ 0x22571DD0));
  if ((v20 & 1) == 0)
    v71 = v66 ^ STACK[0x1780];
  LODWORD(STACK[0x17B0]) = v71;
  LODWORD(STACK[0x15DC]) = v63;
  if ((v20 & 1) != 0)
    v74 = a1;
  else
    v74 = v63;
  LODWORD(STACK[0x17A8]) = v74;
  LODWORD(STACK[0x13A0]) = v20;
  if ((v20 & 2) != 0)
    v75 = v28;
  else
    v75 = v27;
  LODWORD(STACK[0x1068]) = v75;
  v76 = STACK[0x17F8];
  v77 = (_BYTE *)STACK[0x1468];
  v78 = *(unsigned __int8 *)(STACK[0x17F8]
                           + (((LODWORD(STACK[0x1788]) ^ 0x22600285)
                             - ((2 * (LODWORD(STACK[0x1788]) ^ 0x22600285)) & 0x44000062u)
                             + 1738331185) ^ 0x45FCD6B4));
  v79 = STACK[0x18B8];
  v80 = (*(unsigned __int8 *)(STACK[0x17F8]
                            + (STACK[0x1838] >> ((STACK[0x1798] & 8 ^ 8)
                                                                              + (STACK[0x1798] & 8)))) << 16) | (*(unsigned __int8 *)(STACK[0x1468] + 1) << 24) | ((63 * (v78 ^ 0xD ^ *(_BYTE *)((v78 ^ 0xCF) + STACK[0x18B8] + 4174))) << 8);
  LOBYTE(v78) = (v77[2] >> 3) | (32 * v77[2]);
  v81 = *(unsigned __int8 *)(STACK[0x17F8] + STACK[0x1798]);
  v82 = (v80 | v81) ^ (*(unsigned __int8 *)(STACK[0x17F8] + STACK[0x17A0]) << 24);
  v83 = (v82 - 1926392729 - 2 * (v82 & 0xD2D947F ^ v81 & 0x18)) ^ LODWORD(STACK[0x1870]);
  LODWORD(STACK[0x1838]) = v83;
  v84 = (v83 - 1926392729 - ((2 * v83) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1868]);
  v85 = STACK[0x1868];
  v86 = v84 - 1926392729 - ((2 * v84) & 0x1A5B28CE);
  LODWORD(STACK[0x17A0]) = v86;
  v87 = STACK[0x1860];
  v88 = (v86 ^ v87) - 1926392729 - ((2 * (v86 ^ v87)) & 0x1A5B28CE);
  LODWORD(STACK[0x1798]) = v88;
  v89 = v88 ^ LODWORD(STACK[0x1890]);
  v90 = *(unsigned __int8 *)(v76 + (v89 >> 24));
  LODWORD(v78) = (((*(unsigned __int8 *)(v79 + (v78 ^ 0x99u) + 4432) ^ 0x38) << 24) | (*(unsigned __int8 *)(v76 + BYTE1(v89)) << 16) | v90) ^ ((*(unsigned __int8 *)(v76 + BYTE2(v89)) << 24) | (*(unsigned __int8 *)(v76 + ((((v84 + 103 - ((2 * v84) & 0xCE)) ^ v87) + 103 - ((2 * ((v84 + 103 - ((2 * v84) & 0xCE)) ^ v87)) & 0xCE)) ^ LODWORD(STACK[0x1890]))) << 8));
  v91 = v78 - 1926392729 - 2 * (v78 & 0xD2D947F ^ v90 & 0x18);
  LODWORD(v78) = v83 ^ v78;
  v92 = v78 - 1926392729 - ((2 * v78) & 0x1A5B28CE);
  LODWORD(STACK[0x1858]) = v92;
  LODWORD(STACK[0x1800]) = v39;
  v93 = v89 ^ v92 ^ v87;
  v94 = v92 ^ v87;
  LODWORD(STACK[0x1788]) = v94;
  v95 = v77[4];
  HIDWORD(v96) = HIBYTE(v93);
  LODWORD(v96) = v93;
  v97 = ((v95 << 24) | (*(unsigned __int8 *)(v76 + (v89 ^ v94)) << 8) | (*(unsigned __int8 *)(v76 + (63 * (*(_BYTE *)((((unsigned __int16)(v89 ^ v94) >> 8) ^ 0xCFu) + v79 + 4174) ^ ((unsigned __int16)(v89 ^ v94) >> 8) ^ 0xD))) << 16)) ^ (*(unsigned __int8 *)(v76 + BYTE2(v93)) << 24) | *(unsigned __int8 *)(v76 + ((*(_BYTE *)(((v96 >> 27) ^ 0x9Du) + v79 + 1665) - 38) ^ (((v39 & 2 | ~(_BYTE)v39 & 0x82 | v12) - (~(_BYTE)v39 & 2)) & 0x9F ^ 0x8A | ~((v39 & 0x80) - (v39 & 2) + 86) & 0x82 | 0x60) ^ ((*(_BYTE *)(((v96 >> 27) ^ 0x9Du) + v79 + 1665) - 38) >> 4) ^ ((*(_BYTE *)(((v96 >> 27) ^ 0x9Du) + v79 + 1665) - 38) >> 5)));
  v98 = v91 ^ v85;
  v99 = v97 ^ v78;
  LODWORD(STACK[0x1778]) = v97 ^ v78;
  v100 = v89 ^ v97 ^ v78 ^ v91 ^ v85;
  v101 = v97 ^ v78 ^ v91 ^ v85;
  LODWORD(STACK[0x1780]) = v101;
  v102 = ((v77[8] << 24) | (*(unsigned __int8 *)(v76 + (v89 ^ v97 ^ v78 ^ v91 ^ v85)) << 8) | *(unsigned __int8 *)(v76 + (v100 >> 24)) | (*(unsigned __int8 *)(v76 + BYTE1(v100)) << 16)) ^ (*(unsigned __int8 *)(v76 + BYTE2(v100)) << 24);
  LODWORD(STACK[0x1560]) = v72;
  LODWORD(STACK[0x1558]) = v73;
  if ((v20 & 2) != 0)
    v103 = v72;
  else
    v103 = v73;
  LODWORD(STACK[0x1310]) = v103;
  v104 = (v103 & 0x1D4734B2 ^ 0x10422090)
       + ((((2 * (v103 & 0x1D4734B2 ^ 0x59745484)) & 0x8AEAC924) - (v103 & 0x1D4734B2 ^ 0x59745484) + 436899941) ^ 0x4E7BD0C3);
  LODWORD(STACK[0x1770]) = v102 ^ v98 ^ v94 ^ v101;
  v105 = v94 ^ v101;
  LODWORD(STACK[0x173C]) = v94 ^ v101;
  v106 = v102 ^ v98;
  LODWORD(STACK[0x1528]) = v102 ^ v98;
  v107 = v102 ^ v98 ^ v94 ^ v101 ^ v100;
  v108 = 71 * (v102 ^ v98 ^ v94 ^ v101 ^ v100);
  v109 = *(unsigned __int8 *)(v76 + (v107 >> 24));
  v110 = v109 | (*(unsigned __int8 *)(v76 + BYTE1(v107)) << 16) | (*(unsigned __int8 *)(v76
                                                                                      + ((((v95 & 0xF ^ 0xF) + (v95 & 0xF)) ^ v108 ^ *(_BYTE *)(v79 + v104 + v108 - 491182929) ^ 0xAA) - 107)) << 8) | (*(unsigned __int8 *)(v76 + ((*(_BYTE *)((71 * BYTE2(v107)) + v79 + 22881) ^ (71 * BYTE2(v107)) ^ 0xA5) - 107)) << 24);
  LODWORD(STACK[0x1768]) = v102 ^ v99;
  v111 = (v77[16] << 24) ^ 0x8D2D9467 ^ v102 ^ v99 ^ (v110
                                                                     - 1926392729
                                                                     - 2 * (v110 & 0xD2D947F ^ v109 & 0x18));
  LODWORD(STACK[0x1610]) = v49;
  LODWORD(STACK[0x15E4]) = v70;
  if ((v20 & 2) != 0)
    v112 = v49;
  else
    v112 = v70;
  LODWORD(STACK[0x1428]) = v112;
  v113 = v111;
  LODWORD(STACK[0x1570]) = v111;
  v114 = v111 ^ v105 ^ v107;
  v115 = v111 ^ v105;
  LODWORD(STACK[0x1860]) = v111 ^ v105;
  v116 = *(unsigned __int8 *)(v79 + ((-3 * *(_BYTE *)(v76 + BYTE2(v114))) ^ 0x1Bu) + 39526);
  v117 = (*(unsigned __int8 *)(v76 + (v111 ^ v105 ^ v102 ^ v98 ^ v94 ^ v101 ^ v100)) << 8) | (((((v116 ^ 0x4C ^ (v116 >> 3) & 0x15) << ((((2 * (v112 & 6 ^ 0x66)) | 0x82) - (v112 & 6 ^ 0x66) - 65) ^ 0x27 | (((2 * (v112 & 6 ^ 0x27)) | 0xC8) - (v112 & 6 ^ 0x27) - 100) ^ 0x45)) + (((v116 ^ 0x4C ^ (v116 >> 3) & 0x15) & 0xFC) >> 2)) ^ v77[32]) << 24) | (*(unsigned __int8 *)(v76 + BYTE1(v114)) << 16) | ((*(_BYTE *)(v79 + (71 * *(_BYTE *)(v76 + (v114 >> 24))) + 22881) ^ (71 * *(_BYTE *)(v76 + (v114 >> 24))) ^ 0xA5) - 107);
  v118 = v117 ^ v106;
  v119 = v117 ^ v106 ^ v107;
  LODWORD(STACK[0x14D0]) = v117 ^ v106;
  v120 = ((v77[64] << 24) | (*(unsigned __int8 *)(v76
                                                                 + (v117 ^ v106 ^ v102 ^ v98 ^ v94 ^ v101 ^ v100)) << 8)) ^ (*(unsigned __int8 *)(v76 + BYTE2(v119)) << 24);
  LODWORD(STACK[0x1718]) = v98;
  v121 = v120 | *(unsigned __int8 *)(v76 + (v119 >> 24));
  v122 = *(unsigned __int8 *)(v76 + BYTE1(v119)) << (((((v117 ^ v106 ^ v107) >> 24) & 0x10 ^ 0x10)
                                                    + (((v117 ^ v106 ^ v107) >> 24) & 0x10)) & ~(_BYTE)v98 | v98 & 0x10);
  v123 = v117 ^ v113;
  LODWORD(STACK[0x1538]) = v123;
  v124 = v123 ^ v122 ^ v121;
  v125 = v124 ^ v115 ^ v119;
  v126 = v124 ^ v115;
  LODWORD(STACK[0x1540]) = v126;
  v127 = ((*(unsigned __int8 *)(v76 + BYTE1(v125)) << 16) | (*(unsigned __int8 *)(v76 + BYTE2(v125)) << 24) | *(unsigned __int8 *)(v76 + (v125 >> 24)) | (*(unsigned __int8 *)(v76 + v125) << 8)) ^ (v77[128] << 24);
  v128 = v127 ^ v107;
  v129 = *(unsigned __int8 *)((((v128 >> 11) & 0xE0 | (v128 >> 19) & 0x1F) ^ 0x99)
                            + v79
                            + 4432);
  LODWORD(v129) = (v129 & 0xD1 ^ 0xFFFFFFC1 | (v129 ^ 0x38) & 0xD1) ^ *(unsigned __int8 *)(v76 + (v129 ^ 0x38));
  LODWORD(v129) = *(unsigned __int8 *)(v79
                                     + (v114 | 0x104D)
                                     - (v114 & 0xFFFFEFB2)
                                     + (v129 ^ 0x1Eu)
                                     + 1) ^ v129;
  LODWORD(v129) = (((_DWORD)v129 << 30) - ((v129 ^ 0xDC) << 24)) ^ ((v77[27] << 24) | (*(unsigned __int8 *)(v76 + BYTE1(v128)) << 16) | (*(unsigned __int8 *)(v76 + (*(_BYTE *)(v76 + (v125 >> 24)) ^ v107)) << 8)) | *(unsigned __int8 *)(v76 + (v128 >> 24));
  v130 = *(unsigned __int8 *)(v79 + ((-3 * v77[54]) ^ 0xFDu) + 40108);
  v131 = (v130 >> 7) | (2 * v130);
  v132 = v128 - 1926392729 - ((2 * v128) & 0x1A5B28CE);
  LODWORD(STACK[0x1520]) = v132;
  v133 = v127 ^ v124 ^ 0x8D2D9467;
  LODWORD(STACK[0x14F8]) = v133;
  v134 = (v129 - 1926392729 - ((2 * v129) & 0x1A5B28CE)) ^ v133;
  v135 = v134 ^ v126 ^ 0x8D2D9467;
  v136 = v131 ^ (v131 >> 6) ^ (v131 >> 4) ^ 0xFFFFFFD7;
  v137 = ((((v136 & 0xFC) << 22) | (v136 << 30) | (*(unsigned __int8 *)(v76
                                                                      + ((v134 ^ v126) ^ 0x67u ^ v132)) << 8) | *(unsigned __int8 *)(v76 + ((unint64_t)(v135 ^ v132) >> 24))) ^ (1056964608 * (*(unsigned __int8 *)((*(unsigned __int8 *)(v76 + ((v135 ^ v132) >> 16)) ^ 0x12) + v79 + 41218) ^ 9))) & 0xFF00FFFF | ((63 * (*(_BYTE *)((*(unsigned __int8 *)(v76 + ((unsigned __int16)(v134 ^ v126 ^ 0x9467 ^ v132) >> 8)) ^ 0x12) + v79 + 41218) ^ 9)) << 16);
  v138 = (v135 ^ v132) - 1926392729 - ((2 * (v135 ^ v132)) & 0x1A5B28CE);
  HIDWORD(v140) = a3 ^ 3;
  LODWORD(v140) = a3 ^ 0x6A65C2E8;
  v139 = v140 >> 3;
  LODWORD(v140) = __ROR4__(v134 ^ v126, 3);
  v141 = v127 ^ v118;
  v142 = v137 ^ v127 ^ v118;
  v143 = (v142 ^ v128) - 1926392729 - ((2 * (v142 ^ v128)) & 0x1A5B28CE);
  LODWORD(STACK[0x14F0]) = v124 ^ v84;
  v144 = v37;
  LODWORD(STACK[0x1578]) = v37;
  v145 = v142 ^ v37;
  v146 = (((v145 ^ 0xE657776F) + 1274731203) ^ ((v145 ^ 0x6B7FACF0) - 959315618) ^ ((v145 ^ 0x52571DAA) - 348152))
       + (((v124 ^ v84 ^ 0xBC44F67) - 2076825130) ^ ((v124 ^ v84 ^ 0x85E48A05) + 169274552) ^ ((v124 ^ v84 ^ 0x7300C848)
                                                                                             - 51204357));
  v147 = v139 ^ v140 ^ 0x96C50745;
  v148 = STACK[0x1818];
  if ((v20 & 2) == 0)
    v148 = STACK[0x17A8];
  LODWORD(STACK[0x1054]) = v148;
  v149 = STACK[0x1840];
  if ((v20 & 2) != 0)
    v149 = STACK[0x17C0];
  LODWORD(STACK[0x1058]) = v149;
  v150 = STACK[0x17B0];
  if ((v20 & 2) == 0)
    v150 = STACK[0x17CC];
  LODWORD(STACK[0x1348]) = v150;
  v151 = STACK[0x1800];
  if ((v20 & 2) != 0)
    v151 = STACK[0x1810];
  LODWORD(STACK[0x12F0]) = v151;
  v152 = STACK[0x1828];
  if ((v20 & 2) != 0)
    v152 = STACK[0x1820];
  LODWORD(STACK[0x1350]) = v152;
  v153 = __ROR4__(v147, 29) ^ 0x96A803E6;
  v154 = a3 ^ 0xC7C86F46 ^ v138;
  if (((((((v145 ^ 0x6F) - 61) ^ ((v145 ^ 0xF0) + 94)) ^ ((v145 ^ 0xAA) + 8))
       + ((((v124 ^ v84 ^ 0x67) - 42) ^ ((v124 ^ v84 ^ 5) - 72)) ^ ((v124 ^ v84 ^ 0x48) - 5))) & 1) != 0)
    v155 = v154;
  else
    v155 = v153;
  LODWORD(STACK[0x11E0]) = v155;
  v156 = v134 ^ v144 ^ v137 ^ ((-1694148380
                              - (((v155 & 0x52525252 ^ 0xF11F7167) - 1) ^ 0xE42ED326 | 0x9B0558E4)
                              + (((v155 & 0x52525252 ^ 0xF11F7167) - 1) ^ 0xE42ED326 | 0x64FAA71B)) ^ 0x71CB1519 | ((v155 & 0x52525252 ^ 0x92061442) + (v155 & 0x2121050 ^ 0x2D19A815) - ((v155 & 0x52525252 ^ 0x92061442) & 0x2161050)) ^ 0xEF4BEE07);
  v157 = a3 ^ 0xC7C86F46 ^ ((v134 ^ v141) - 1926392729 - ((2 * (v134 ^ v141)) & 0x1A5B28CE));
  v158 = a3 ^ 0x4AE5FB21 ^ v134;
  if ((v146 & 1) != 0)
    v159 = v145 ^ 0x52525252;
  else
    v159 = v156;
  LODWORD(STACK[0xF28]) = v159;
  LODWORD(STACK[0xF24]) = a3 ^ 0x383790B9 ^ v143;
  if ((v146 & 1) != 0)
    v160 = v156;
  else
    v160 = a3 ^ 0x383790B9 ^ v143;
  LODWORD(STACK[0x11D8]) = v160;
  if ((v146 & 1) != 0)
    v161 = v158;
  else
    v161 = v154;
  LODWORD(STACK[0x11C8]) = v161;
  if ((v146 & 1) != 0)
    v162 = v157;
  else
    v162 = v158;
  LODWORD(STACK[0x11D0]) = v162;
  if ((v146 & 1) != 0)
    v163 = v153;
  else
    v163 = v157;
  LODWORD(STACK[0x11C0]) = v163;
  v164 = (v142 - 1926392729 - ((2 * v142) & 0x1A5B28CE)) ^ v135;
  v165 = a3 ^ 0x13BCA278 ^ LODWORD(STACK[0x1838]);
  v166 = a3 ^ 0x9E91361F ^ LODWORD(STACK[0x17A0]);
  v167 = a3 ^ 0x9E91361F ^ LODWORD(STACK[0x1798]);
  v168 = v93 - 1926392729 - ((2 * v93) & 0x1A5B28CE);
  v169 = LODWORD(STACK[0x1788]) - 1926392728 + ~((2 * LODWORD(STACK[0x1788])) & 0x1A5B28CE);
  LODWORD(STACK[0xF20]) = a3 ^ 0x383790B9 ^ (v164 - 1926392729 - ((2 * v164) & 0x1A5B28CE));
  if ((v146 & 1) != 0)
    v170 = a3 ^ 0x383790B9 ^ (v164 - 1926392729 - ((2 * v164) & 0x1A5B28CE));
  else
    v170 = v145 ^ 0x52525252;
  LODWORD(STACK[0x11BC]) = v170;
  if ((v146 & 1) != 0)
    v171 = v166;
  else
    v171 = v165;
  LODWORD(STACK[0x1838]) = v171;
  if ((v146 & 1) != 0)
    v172 = a3 ^ 0x9E91361F ^ (v89 - 1926392729 - ((2 * v89) & 0x1A5B28CE));
  else
    v172 = v167;
  LODWORD(STACK[0x17A0]) = v172;
  if ((v146 & 1) != 0)
    v173 = v167;
  else
    v173 = v166;
  LODWORD(STACK[0x1798]) = v173;
  if ((v146 & 1) != 0)
    v174 = v165;
  else
    v174 = a3 ^ 0x9E91361F ^ (v89 - 1926392729 - ((2 * v89) & 0x1A5B28CE));
  LODWORD(STACK[0x1788]) = v174;
  v175 = LODWORD(STACK[0x1778]) - 1926392729 - ((2 * LODWORD(STACK[0x1778])) & 0x1A5B28CE);
  v176 = LODWORD(STACK[0x1780]) - 1926392728 + ~((2 * LODWORD(STACK[0x1780])) & 0x1A5B28CE);
  v177 = STACK[0x1528];
  v178 = a3 ^ 0x87882F06 ^ (LODWORD(STACK[0x1768]) - 1926392729 - ((2 * LODWORD(STACK[0x1768])) & 0x1A5B28CE));
  v179 = a3 ^ 0x87882F06 ^ (LODWORD(STACK[0x1770]) - 1926392729 - ((2 * LODWORD(STACK[0x1770])) & 0x1A5B28CE));
  v180 = a3 ^ 0x3F908E54;
  v181 = a3 ^ 0x3F908E54 ^ v168;
  v182 = a3 ^ 0x3F908E54 ^ v169;
  if ((v146 & 1) != 0)
    v183 = a3 ^ 0x3F908E54 ^ v168;
  else
    v183 = a3 ^ 0x3F908E54 ^ v169;
  LODWORD(STACK[0x1554]) = v183;
  v184 = a3 ^ 0xF6F95E77;
  v185 = a3 ^ 0xF6F95E77 ^ v175;
  v186 = a3 ^ 0xF6F95E77 ^ v176;
  if ((v146 & 1) != 0)
    v187 = v186;
  else
    v187 = v185;
  LODWORD(STACK[0x1548]) = v187;
  if ((v146 & 1) != 0)
    v188 = a3 ^ 0x87882F06 ^ (v177 - 1926392729 - ((2 * v177) & 0x1A5B28CE));
  else
    v188 = v178;
  LODWORD(STACK[0x1780]) = v188;
  if ((v146 & 1) != 0)
    v189 = v178;
  else
    v189 = a3 ^ 0x87882F06 ^ (v107 - 1926392729 - ((2 * v107) & 0x1A5B28CE));
  LODWORD(STACK[0x1778]) = v189;
  if ((v146 & 1) != 0)
    v190 = v179;
  else
    v190 = a3 ^ 0x87882F06 ^ (v177 - 1926392729 - ((2 * v177) & 0x1A5B28CE));
  LODWORD(STACK[0x1768]) = v190;
  if ((v146 & 1) != 0)
    v191 = a3 ^ 0x87882F06 ^ (v107 - 1926392729 - ((2 * v107) & 0x1A5B28CE));
  else
    v191 = v179;
  LODWORD(STACK[0x1770]) = v191;
  v192 = v100 - 1926392729 - ((2 * v100) & 0x1A5B28CE);
  v193 = v184 ^ (LODWORD(STACK[0x173C]) - 1926392729 - ((2 * LODWORD(STACK[0x173C])) & 0x1A5B28CE));
  v194 = LODWORD(STACK[0x1760]) ^ LODWORD(STACK[0x1570]);
  v195 = v180 ^ LODWORD(STACK[0x1858]);
  v196 = v180 ^ (LODWORD(STACK[0x1718]) - 1926392729 - ((2 * LODWORD(STACK[0x1718])) & 0x1A5B28CE));
  v197 = LODWORD(STACK[0x1748]) ^ v141;
  v198 = a3 ^ 0xBEB1163F ^ (LODWORD(STACK[0x1860]) - 1926392729 - ((2 * LODWORD(STACK[0x1860])) & 0x1A5B28CE));
  v199 = a3 ^ 0x1B14B39A ^ (v119 - 1926392729 - ((2 * v119) & 0x1A5B28CE));
  v200 = v125 - 1926392729 - ((2 * v125) & 0x1A5B28CE);
  LODWORD(STACK[0x1524]) = v193;
  if ((v146 & 1) != 0)
    v201 = v193;
  else
    v201 = v186;
  LODWORD(STACK[0x1748]) = v201;
  LODWORD(STACK[0x1518]) = v184 ^ v192;
  if ((v146 & 1) != 0)
    v202 = v185;
  else
    v202 = v184 ^ v192;
  LODWORD(STACK[0x173C]) = v202;
  v203 = v194 ^ v177;
  LODWORD(STACK[0x1514]) = v194;
  if ((v146 & 1) != 0)
    v204 = v194 ^ v177;
  else
    v204 = v194;
  if ((v146 & 1) != 0)
    v203 = v198;
  LODWORD(STACK[0x14B8]) = v203;
  LODWORD(STACK[0x14E8]) = v195;
  if ((v146 & 1) != 0)
    v205 = v195;
  else
    v205 = v181;
  LODWORD(STACK[0x14E4]) = v196;
  if ((v146 & 1) != 0)
    v206 = v182;
  else
    v206 = v196;
  LODWORD(STACK[0x14C8]) = a3 ^ 0xBEB1163F ^ (v114 - 1926392729 - ((2 * v114) & 0x1A5B28CE));
  if ((v146 & 1) != 0)
    v207 = a3 ^ 0xBEB1163F ^ (v114 - 1926392729 - ((2 * v114) & 0x1A5B28CE));
  else
    v207 = v198;
  v208 = STACK[0x1540];
  v209 = v197 ^ LODWORD(STACK[0x1540]);
  LODWORD(STACK[0x14D8]) = v197;
  if ((v146 & 1) != 0)
    v210 = v209;
  else
    v210 = v197;
  LODWORD(STACK[0x1760]) = v210;
  v211 = LODWORD(STACK[0x1584]) ^ LODWORD(STACK[0x1538]);
  v212 = STACK[0x14D0];
  v213 = LODWORD(STACK[0x1584]) ^ LODWORD(STACK[0x14D0]);
  if ((v146 & 1) != 0)
    v214 = LODWORD(STACK[0x1584]) ^ LODWORD(STACK[0x14D0]);
  else
    v214 = LODWORD(STACK[0x1584]) ^ LODWORD(STACK[0x1538]);
  LODWORD(STACK[0xF1C]) = v214;
  v215 = ((2 * (v214 & 0x3A3A3A3A ^ 0xA202808)) & 0x14500074) - (v214 & 0x3A3A3A3A ^ 0xA202808) - 1315455036;
  v216 = (((v215 & 0xB250038C ^ 0x2410001) + (v215 & 0x4CAAFC72) - 1) ^ 0x8AE1BDD4)
       + (((v214 & 0x3A3A3A3A ^ 0x12303A2A) - ((2 * (v214 & 0x3A3A3A3A ^ 0x12303A2A)) & 0x60440074) + 1893975550) ^ 0x6AFBEFF6);
  v217 = a3 ^ 0x6A65C2EB ^ v208 ^ (v216 - 1926392729 - ((2 * v216) & 0x1A5B28CE));
  v218 = v124 - 1926392729 - ((2 * v124) & 0x1A5B28CE);
  v219 = (v124 ^ v212) - 1926392729 - ((2 * (v124 ^ v212)) & 0x1A5B28CE);
  v220 = ((LODWORD(STACK[0x1240]) ^ 0x3C33110F) - 1663459727) ^ ((LODWORD(STACK[0x1240]) ^ 0xC293798A) + 1652160246) ^ ((LODWORD(STACK[0x1240]) ^ 0x2C988C62) - 1938685154);
  v221 = a3 ^ 0x101FB891 ^ LODWORD(STACK[0x1870]);
  v222 = a3 ^ 0x101FB891 ^ LODWORD(STACK[0x1868]);
  v223 = a3 ^ 0x737CDBF2 ^ LODWORD(STACK[0x14F8]);
  v224 = a3 ^ 0x737CDBF2 ^ LODWORD(STACK[0x1520]);
  v225 = v213 ^ LODWORD(STACK[0x1860]);
  if ((v146 & 1) != 0)
    v226 = v199;
  else
    v226 = v213 ^ LODWORD(STACK[0x1860]);
  LODWORD(STACK[0xF18]) = v226;
  LODWORD(STACK[0x11F8]) = a3;
  v227 = a3 ^ 0x505FF8D1;
  v228 = a3 ^ 0x505FF8D1 ^ v200;
  if ((v146 & 1) != 0)
    v229 = v228;
  else
    v229 = v217;
  if ((v146 & 1) != 0)
    v230 = v225;
  else
    v230 = v213;
  if ((v146 & 1) != 0)
    v231 = v211;
  else
    v231 = v199;
  v232 = v227 ^ v219;
  if ((v146 & 1) != 0)
    v233 = v227 ^ v218;
  else
    v233 = v228;
  if ((v146 & 1) != 0)
    v234 = v217;
  else
    v234 = v232;
  if ((v146 & 1) != 0)
    v235 = v232;
  else
    v235 = v227 ^ v218;
  v236 = ((((2 * (STACK[0x1730] & 0x3455D160 ^ 0x14550160)) & 0x38200)
         - (STACK[0x1730] & 0x3455D160 ^ 0x14550160)
         + 878457471) & 0x345FFF60 ^ 0x34482220)
       + ((781172754
         - (STACK[0x1730] & 0x3455D160 ^ 0x4C31020 | 0x2E8FC012)
         + (STACK[0x1730] & 0x3455D160 ^ 0x4C31020 | 0xD1703FED)) ^ 0xF5A7EF8D);
  v237 = v220
       - (((STACK[0x15AC] & 0x3CD5D164 ^ v236 & 0x605F562A ^ (v236 | 0xC800004) & (LODWORD(STACK[0x159C]) ^ 0xD3C8F877) ^ 0xFB7FFFFF)
         + 1593520741) | 0x6AEE008);
  v238 = (LODWORD(STACK[0x14F0]) ^ 0xFD200D2A)
       - 1317118707
       + (((v145 ^ 0xF75E1D4C) + 1525919970) ^ ((v145 ^ 0x7C1EAA9) - 1435744507) ^ ((v145 ^ 0x2FE031D0) - 2108842882));
  v239 = (v238 ^ 0xDB0FA653) & (2 * (v238 & 0xDBAF375A)) ^ v238 & 0xDBAF375A;
  LODWORD(STACK[0x1050]) = v238;
  v240 = ((2 * (v238 ^ 0xC91BCA77)) ^ 0x2569FA5A) & (v238 ^ 0xC91BCA77) ^ (2 * (v238 ^ 0xC91BCA77)) & 0x12B4FD2C;
  v241 = (v240 ^ 0x20F80D) & (4 * v239) ^ v239;
  v242 = ((4 * (v240 ^ 0x12940525)) ^ 0x4AD3F4B4) & (v240 ^ 0x12940525) ^ (4 * (v240 ^ 0x12940525)) & 0x12B4FD2C;
  v243 = (v242 ^ 0x290F420) & (16 * v241) ^ v241;
  v244 = ((16 * (v242 ^ 0x10240909)) ^ 0x2B4FD2D0) & (v242 ^ 0x10240909) ^ (16 * (v242 ^ 0x10240909)) & 0x12B4FD20;
  v245 = v243 ^ 0x12B4FD2D ^ (v244 ^ 0x204D000) & (v243 << 8);
  v246 = ((v245 << 16) ^ 0x7D2D0000) & (((v244 ^ 0x10B02D2D) << 8) & 0x12B40000 ^ (((v244 ^ 0x10B02D2D) << 8) ^ 0xB4FD0000) & (v244 ^ 0x10B02D2D) ^ 0x2000000) ^ v245 ^ ((v245 << 16) & 0x12B40000 | 0x24);
  v247 = STACK[0x11C0];
  v248 = (((2 * (v247 & 0xC800589 ^ 0xC800180)) & 0x1000800) - (v247 & 0xC800589 ^ 0xC800180) - 548531233) ^ 0xCFDF0259;
  v249 = v248 - ((2 * v248) & 0x720201A);
  v250 = LODWORD(STACK[0x1890]) ^ LODWORD(STACK[0x1578]) ^ 0xF757EE1D;
  if ((v146 & 1) != 0)
    v251 = v224;
  else
    v251 = v209;
  LODWORD(STACK[0x1460]) = v251;
  LODWORD(STACK[0x1470]) = v223;
  if ((v146 & 1) != 0)
    v252 = v223;
  else
    v252 = v224;
  v253 = STACK[0x1834];
  LODWORD(STACK[0x1488]) = v222;
  if ((v146 & 1) != 0)
    v254 = v253;
  else
    v254 = v222;
  LODWORD(STACK[0x14A8]) = v221;
  LODWORD(STACK[0x1418]) = v250;
  if ((v146 & 1) == 0)
    v221 = v250;
  LODWORD(STACK[0x11B0]) = v146;
  LODWORD(STACK[0x1400]) = v146 + 442181838;
  if (((v146 + 442181838) & 2) != 0)
    v255 = v204;
  else
    v255 = v207;
  LODWORD(STACK[0x1730]) = v255;
  if (((v146 + 442181838) & 2) != 0)
    v256 = v207;
  else
    v256 = v204;
  LODWORD(STACK[0x1718]) = v256;
  if (((v146 + 442181838) & 2) != 0)
    v257 = v206;
  else
    v257 = v205;
  LODWORD(STACK[0x15AC]) = v257;
  if (((v146 + 442181838) & 2) != 0)
    v258 = v205;
  else
    v258 = v206;
  LODWORD(STACK[0x1584]) = v258;
  v259 = STACK[0x1838];
  v260 = STACK[0x17A0];
  if (((v146 + 442181838) & 2) != 0)
    v261 = STACK[0x1838];
  else
    v261 = STACK[0x17A0];
  LODWORD(STACK[0x1528]) = v261;
  if (((v146 + 442181838) & 2) != 0)
    v262 = v260;
  else
    v262 = v259;
  LODWORD(STACK[0x14B0]) = v262;
  v263 = ((v249 + 61886541) ^ 0x13A1444A)
       + ((((2 * (v247 & 0xC800589 ^ 0xDC02D489)) | 0x83451C6) - (v247 & 0xC800589 ^ 0xDC02D489) + 468047645) ^ 0x1898FDE2);
  v264 = STACK[0x1750];
  LODWORD(STACK[0x1570]) = ((LODWORD(STACK[0x15B0]) ^ 0x9384845A) + 1820031910) ^ ((LODWORD(STACK[0x15B0]) ^ 0x9904C27D)
                                                                                 + 1727741315) ^ ((LODWORD(STACK[0x15B0]) ^ 0x87ADD240)
                                                                                                + 2018651584);
  v265 = (((v264 ^ 0x915D3426) + 1856162778) ^ ((v264 ^ 0x5E705678) - 1584420472) ^ ((v264 ^ 0x4200F639) - 1107359289))
       - 239480745;
  v266 = (v265 ^ 0x1B6BB70A) & (2 * (v265 & 0x9B73C410)) ^ v265 & 0x9B73C410;
  v267 = ((2 * (v265 ^ 0x928BF0A)) ^ 0x24B6F634) & (v265 ^ 0x928BF0A) ^ (2 * (v265 ^ 0x928BF0A)) & 0x925B7B1A;
  v268 = (v267 ^ 0x12390A) & (4 * v266) ^ v266;
  v269 = ((4 * (v267 ^ 0x9249090A)) ^ 0x496DEC68) & (v267 ^ 0x9249090A) ^ (4 * (v267 ^ 0x9249090A)) & 0x925B7B18;
  v270 = (v269 ^ 0x496812) & (16 * v268) ^ v268;
  v271 = ((16 * (v269 ^ 0x92121312)) ^ 0x25B7B1A0) & (v269 ^ 0x92121312) ^ (16 * (v269 ^ 0x92121312)) & 0x925B7B10;
  v272 = v270 ^ 0x925B7B1A ^ (v271 ^ 0x133100) & (v270 << 8);
  v273 = v265 ^ (2
               * ((v272 << 16) & 0x125B0000 ^ v272 ^ ((v272 << 16) ^ 0x7B1A0000) & ((((v271 ^ 0x92484A1A) << 8) ^ 0x5B7B0000) & (v271 ^ 0x92484A1A) ^ ((v271 ^ 0x92484A1A) << 8) & 0x125B0000)));
  v274 = STACK[0x13C0];
  v275 = v237 - 1277332113;
  LODWORD(STACK[0xF4C]) = (2 * v275) & 0x1A5B28CE;
  LODWORD(STACK[0xF48]) = v275 - 1926392729;
  LODWORD(STACK[0x104C]) = 2 * v246;
  LODWORD(STACK[0x1420]) = v221;
  LODWORD(STACK[0x1410]) = v254;
  if (((v146 + 442181838) & 2) != 0)
    v276 = v221;
  else
    v276 = v254;
  LODWORD(STACK[0x14D0]) = (v276 ^ 0x3A4B60C3) - 978018499;
  LODWORD(STACK[0x15B0]) = v276 ^ 0xF2EDE3F8;
  LODWORD(STACK[0x1538]) = v263 & 0x1D800693 ^ 0xD1ED8224;
  v277 = STACK[0x1700];
  LODWORD(STACK[0x14F8]) = (LODWORD(STACK[0x1700]) ^ 0x33D4FD36) - 869596470;
  LODWORD(STACK[0x14F0]) = v277 ^ 0x3A91D68F;
  LODWORD(STACK[0x1490]) = (v277 ^ 0x8468BFDE) + 2073509922;
  v278 = STACK[0x15C0];
  LODWORD(STACK[0x1048]) = (LODWORD(STACK[0x15C0]) ^ 0x206E88A0) - 544114848;
  LODWORD(STACK[0x1044]) = v278 ^ 0x15462B41;
  LODWORD(STACK[0x1040]) = (v278 ^ 0xB8053786) + 1207617658;
  v279 = STACK[0x17BC];
  v280 = STACK[0x17BC] & 0x12 ^ 2u;
  v281 = *(uint64_t (**)(uint64_t))(STACK[0x18C0] + 8 * (LODWORD(STACK[0x1898]) - 12828));
  LODWORD(STACK[0xF04]) = v233;
  LODWORD(STACK[0xF00]) = v234;
  if (((v146 + 442181838) & 2) != 0)
    v282 = v234;
  else
    v282 = v233;
  LODWORD(STACK[0xF40]) = v282;
  LODWORD(STACK[0xF08]) = v229;
  LODWORD(STACK[0xEFC]) = v235;
  if (((v146 + 442181838) & 2) != 0)
    v283 = v229;
  else
    v283 = v235;
  LODWORD(STACK[0xEE4]) = v283;
  LODWORD(STACK[0xF10]) = v230;
  LODWORD(STACK[0xF0C]) = v231;
  if (((v146 + 442181838) & 2) != 0)
    v284 = v230;
  else
    v284 = v231;
  LODWORD(STACK[0xEF0]) = v284;
  v285 = STACK[0x1780];
  if (((v146 + 442181838) & 2) == 0)
    v285 = STACK[0x1770];
  LODWORD(STACK[0x144C]) = v285;
  v286 = STACK[0x1778];
  if (((v146 + 442181838) & 2) == 0)
    v286 = STACK[0x1768];
  LODWORD(STACK[0x1440]) = v286;
  v287 = STACK[0x1748];
  if (((v146 + 442181838) & 2) != 0)
    v287 = STACK[0x173C];
  LODWORD(STACK[0x1750]) = v287;
  v288 = STACK[0x1798];
  if (((v146 + 442181838) & 2) == 0)
    v288 = STACK[0x1788];
  LODWORD(STACK[0x1700]) = v288;
  if (((v146 + 442181838) & 2) != 0)
    v289 = STACK[0x11C8];
  else
    v289 = v247;
  LODWORD(STACK[0x1540]) = v289;
  v290 = STACK[0x11E0];
  if (((v146 + 442181838) & 2) != 0)
    v290 = STACK[0x11D0];
  LODWORD(STACK[0xEEC]) = v290;
  LODWORD(STACK[0x15C0]) = v252;
  v291 = STACK[0x1760];
  if (((v146 + 442181838) & 2) != 0)
    v291 = v252;
  LODWORD(STACK[0x159C]) = v291;
  v292 = STACK[0x11D8];
  if (((v146 + 442181838) & 2) != 0)
    v292 = STACK[0x11BC];
  LODWORD(STACK[0xEDC]) = v292;
  LODWORD(STACK[0x1858]) = LODWORD(STACK[0x16C8]) ^ LODWORD(STACK[0x147C]);
  LODWORD(STACK[0x1860]) = ~v274 & 6;
  LODWORD(STACK[0x1838]) = v273;
  LODWORD(STACK[0x1870]) = ~v279 & 7;
  return v281(v280);
}

uint64_t sub_10024E62C@<X0>(char a1@<W0>, int a2@<W2>, char a3@<W3>, char a4@<W4>, int a5@<W8>)
{
  unsigned int v5;
  char v6;
  int v7;
  int v8;
  int v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;

  v13 = v7 ^ v5;
  v14 = *(_DWORD *)(STACK[0x17D0] + 4 * v13);
  v15 = ((v13 & 0xDA1A0125) + (v7 & 0xDA1A0125 ^ 0x40180004)) ^ LODWORD(STACK[0x17E0]);
  v16 = v14 ^ ((v14 & STACK[0x1858]) >> 1);
  v17 = (v7 ^ v5 ^ ((((v7 ^ 0x2A) & v6 ^ v7 & 0x58) & 0xFE) >> 1)) ^ 4;
  LODWORD(STACK[0x1890]) = v15 ^ 0x57379542;
  v18 = ((v17 & (a2 ^ 0x57B8099Du)) >> a4 >> a3) ^ (v17 << v12 << LODWORD(STACK[0x1860]));
  v19 = (((((v15 ^ 0x57379542) & v16 & 0xB33FEE8F ^ 0x213DE68F)
         + ((v15 ^ 0x57379542) & v16 ^ 0x96421800)
         - (((v15 ^ 0x57379542) & v16 ^ 0x96421800) & 0xB33FEE8F)) ^ 0x257DF68F) >> a1 >> v11)
      + (((1965226797 - (v16 & v9 ^ 0x200C1520 | 0x7522FB2D) + (v16 & v9 ^ 0x200C1520 | 0x8ADD04D2)) ^ 0xAAD111F2) << v10);
  v20 = ((v18 - ((2 * v18) & 0xCF) + 103) ^ LODWORD(STACK[0x112C])) ^ LODWORD(STACK[0x1790]);
  v21 = v19 - 1926392729 - (v8 & (2 * v19));
  v22 = 373 * (a5 + v20) + 1099509860;
  v23 = (v22 ^ 0xBF74CF98) & (2 * (v22 & 0xBE76CF9C)) ^ v22 & 0xBE76CF9C;
  v24 = ((2 * (v22 ^ 0xAF705988)) ^ 0x220D2C28) & (v22 ^ 0xAF705988) ^ (2 * (v22 ^ 0xAF705988)) & 0x11069614;
  v25 = v24 ^ 0x11029214;
  v26 = v23 ^ 0x11069614 ^ (v24 ^ 0x48404) & (4 * v23);
  v27 = (4 * v25) & 0x11069614 ^ 0x11048604 ^ ((4 * v25) ^ 0x441A5850) & v25;
  v28 = (16 * v26) & 0x11069610 ^ v26 ^ ((16 * v26) ^ 0x10696140) & v27;
  v29 = (16 * v27) & 0x11069610 ^ 0x1069614 ^ ((16 * v27) ^ 0x10696140) & v27;
  v30 = v28 ^ (v28 << 8) & 0x11069600 ^ ((v28 << 8) ^ 0x6961400) & v29 ^ 0x10061400;
  v31 = v22 ^ (2
             * (((v30 << 16) ^ 0x16140000) & ((v29 << 8) & 0x11060000 ^ 0x11000000 ^ ((v29 << 8) ^ 0x6960000) & v29) ^ v30 ^ ((v30 << 16) & 0x11060000 | 0x10))) ^ 0xBC73E394;
  v32 = LODWORD(STACK[0x1660]) ^ 0x8D2D9467 ^ LODWORD(STACK[0x1664]);
  *((_DWORD *)&STACK[0x18D0] + v31 % 0x412) = v32 ^ v21;
  *((_DWORD *)&STACK[0x18D0]
  + (((373 * v20 + 292805) % 0x412u - 1926392729 - ((2 * ((373 * v20 + 292805) % 0x412u)) & 0x8CE)) ^ 0x8D2D9467)) = v32 ^ (*(unsigned __int8 *)(STACK[0x17F8] + v13) - 1926392729 - ((2 * *(unsigned __int8 *)(STACK[0x17F8] + v13)) & 0xCE));
  v33 = LODWORD(STACK[0x1898]) - 14650;
  v34 = LODWORD(STACK[0x1898]) - 11193;
  LODWORD(STACK[0x1868]) = v15;
  LODWORD(STACK[0x17E0]) = v33 ^ 0xDA1A1B81 ^ v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((99 * ((_DWORD)v13 != 255)) ^ v34)) - 8))();
}

uint64_t sub_10024E9F4()
{
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * (LODWORD(STACK[0x1898]) - 12828)))();
}

#error "10024EA34: too big function (funcsize=0)"

#error "10025F1C4: too big function (funcsize=0)"

uint64_t sub_10027A124(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t a65;
  uint64_t a66;
  uint64_t a67;
  uint64_t a68;
  uint64_t a69;
  uint64_t a70;
  uint64_t a71;
  uint64_t a72;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  unint64_t v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  int v127;
  unint64_t v128;
  int v129;
  char v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  int v153;
  unint64_t v154;
  unsigned int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  unint64_t v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unint64_t v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  BOOL v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  unint64_t v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  unsigned int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  int v227;
  char v228;
  int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  unint64_t v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  int v244;
  int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unint64_t v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  char v279;
  int v280;
  unint64_t v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t v284;
  unint64_t v285;
  unsigned int v286;
  unsigned int v287;
  unint64_t v288;
  unint64_t v289;
  unint64_t v290;
  int v291;
  int v292;
  uint64_t v293;
  unint64_t v294;
  int v295;
  char v296;
  unsigned int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  unint64_t v307;
  unint64_t v308;
  unint64_t v309;
  unint64_t v310;
  unint64_t v311;
  unint64_t v312;
  _BYTE *v313;
  unint64_t v314;
  unint64_t v315;
  unint64_t v316;
  unint64_t v317;
  _BYTE *v318;
  unint64_t v319;
  unint64_t v320;
  unint64_t v321;
  unint64_t v322;
  unint64_t v323;
  unint64_t v324;
  unint64_t v325;
  unint64_t v326;
  unint64_t v327;
  unint64_t v328;
  unint64_t v329;
  unint64_t v330;
  unint64_t v331;
  uint64_t v332;

  v85 = v77 << LODWORD(STACK[0x1690]) << LODWORD(STACK[0x1698]);
  v86 = v72 - 1926392729 - 2 * (v72 & STACK[0x1894] ^ a1 & 8);
  v87 = (LODWORD(STACK[0x12A0]) - 3611) | 0x1841;
  v88 = LODWORD(STACK[0x1868]) ^ 0x3960D3BD;
  LODWORD(STACK[0x17C0]) = v87;
  v89 = (((((v88 ^ v87) & v75 ^ STACK[0x1860] & 0x46565496) & 0x25A6D130 ^ 0x5A49131)
        + (((v88 ^ v87) & v75 ^ STACK[0x1860] & 0x46565496) & 0xDA592ECF)
        - 1) ^ 0x2DE1B8B8) >> LODWORD(STACK[0x1074]) >> LODWORD(STACK[0x1068]);
  v90 = v86 ^ a6 ^ (v89 | v85);
  v91 = 373 * ((v86 ^ a6 ^ (v89 | v85)) + 785)
      % (((1262 - (v86 ^ a6 ^ (v89 | v85))) ^ ((v86 ^ a6 ^ (v89 | v85)) + 785)) & 0x412u);
  v92 = v82 ^ (v81
             + ((v76 & 0x2B85CA3B ^ 0x2984C813 ^ v80 & (LODWORD(STACK[0x1818]) ^ 0xAD9E4B6F)) << LODWORD(STACK[0x16F0]) << LODWORD(STACK[0x16F8]))) ^ v78;
  v93 = (v92 - 1926392729 - ((2 * v92) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1778]);
  v94 = STACK[0x1860] & 0x501010C6 ^ 0xF921010B ^ v75 & (LODWORD(STACK[0x1818]) ^ 0x7F22B0BB);
  v95 = v89 | (((v94 - ((2 * v94) & 0x4D6DFF0A) - 1497956475) ^ 0xF6BEDF67) << LODWORD(STACK[0x16B0]) << LODWORD(STACK[0x16C0]));
  v96 = (v95 - 1926392729 - ((2 * v95) & 0x1A5B28CE)) ^ a8;
  v97 = v73 ^ 0xEAA0B9F3 ^ v74 ^ LODWORD(STACK[0x16C8]) ^ (v96 - 1926392729 - ((2 * v96) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1760]);
  v98 = (v97 - 1926392729 - ((2 * v97) & 0x1A5B28CE)) ^ a6;
  v99 = ((v93 ^ 0x22F0E96B) - 1926392729 - 2 * ((v93 ^ 0x22F0E96B) & 0xD2D9477 ^ v93 & 0x10)) ^ a6;
  v100 = BYTE2(v99) + 785;
  v101 = *((_DWORD *)&STACK[0x18D0]
         + (373 * v100 - 1042 * ((4121850 * (unint64_t)(373 * v100)) >> 32)));
  HIDWORD(v103) = v101 ^ 0x9467;
  LODWORD(v103) = v101 ^ 0x8D2D0000;
  v102 = v103 >> 16;
  LODWORD(v103) = __ROR4__(*((_DWORD *)&STACK[0x18D0]+ (373 * BYTE1(v98)+ 292805- 1042* ((4121850 * (unint64_t)(373 * BYTE1(v98) + 292805)) >> 32))), 24);
  v104 = (v84 ^ v103 ^ v102) - 1926392729 - ((2 * (v84 ^ v103 ^ v102)) & 0x1A5B28CE);
  v105 = *((_DWORD *)&STACK[0x18D0]
         + (373 * HIBYTE(v79)
                        + 292805
                        - 1042 * ((4121850 * (unint64_t)(373 * HIBYTE(v79) + 292805)) >> 32)));
  v106 = STACK[0x18A0];
  HIDWORD(v103) = v105 ^ 0x67;
  LODWORD(v103) = v105 ^ LODWORD(STACK[0x18A0]);
  v107 = (v103 >> 8) ^ *((_DWORD *)&STACK[0x18D0] + v91) ^ v104;
  v108 = STACK[0x17E0];
  v109 = ((LODWORD(STACK[0x11D8]) ^ 0x8D2D9467) << LODWORD(STACK[0x17A8]) << LODWORD(STACK[0x1570])) | ((LODWORD(STACK[0x11D8]) ^ 0x8D2D9467) >> LODWORD(STACK[0x17E0]));
  v110 = v109 - 1926392729 - ((2 * v109) & 0x1A5B28CE);
  v111 = STACK[0x1738];
  if (LODWORD(STACK[0x1738]) == -1926392729)
    v110 = STACK[0x11D8];
  v112 = (v107 - 1926392729 - ((2 * v107) & 0x1A5B28CE)) ^ v110;
  v113 = (v112 - 1926392729 - ((2 * v112) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1578]);
  v114 = v79;
  v115 = STACK[0x1578];
  v116 = (v113 ^ 0x52525252u) >> LODWORD(STACK[0x173C]) >> LODWORD(STACK[0x13A0]);
  v117 = STACK[0x1510];
  v118 = STACK[0x1688];
  v119 = (((v113 ^ 0x52525252) << v117 << v118) | v116)
       - 1926392729
       - ((2 * (((v113 ^ 0x52525252) << v117 << v118) | v116)) & 0x1A5B28CE);
  LODWORD(STACK[0x1898]) = v90;
  v121 = v113 ^ 0xDF7FC635;
  if (v111 == -1926392729)
    v122 = v121;
  else
    v122 = v119;
  LODWORD(STACK[0x1840]) = v122;
  v123 = STACK[0x13E8];
  v124 = STACK[0x1358];
  LODWORD(STACK[0x1820]) = v114;
  v120 = ((v90 >> 7) & 0x22) + (BYTE1(v90) ^ 0x311);
  v125 = *((_DWORD *)&STACK[0x18D0]
         + (373 * v120 - 1042 * ((4121850 * (unint64_t)(373 * v120)) >> 32)));
  v126 = HIBYTE(v125) ^ 0x8D;
  LODWORD(STACK[0x1660]) = v126;
  v127 = *((_DWORD *)&STACK[0x18D0]
         + (373 * HIBYTE(v99)
                        + 292805
                        - 1042 * ((4121850 * (unint64_t)(373 * HIBYTE(v99) + 292805)) >> 32)));
  HIDWORD(v128) = v127 ^ 0x67;
  LODWORD(v128) = v127 ^ v106;
  v129 = *((_DWORD *)&STACK[0x18D0]
         + (373 * v114
                        + 292805
                        - 1042
                        * ((4121850 * (unint64_t)(373 * v114 + 292805)) >> 32))) ^ (((v126 | (v125 << 8)) ^ LODWORD(STACK[0x17CC])) - 1926392729 - 2 * (((v126 | (v125 << 8)) ^ LODWORD(STACK[0x17CC])) & 0xD2D9477 ^ HIBYTE(v125) & 0x10)) ^ (v128 >> 8);
  v130 = v117;
  v131 = ((v124 ^ 0x8D2D9467) >> v117 >> v118) ^ 0x8D2D9467 ^ ((v124 ^ 0x8D2D9467) << (v123 & 0x9B ^ 3) << (v123 & 0x64 ^ 0x64));
  v132 = STACK[0x1770];
  if (LODWORD(STACK[0x1770]) == -1926392729)
    v131 = v124;
  v133 = (v129 - 1926392729 - ((2 * v129) & 0x1A5B28CE)) ^ v131;
  v134 = __ROR4__(*((_DWORD *)&STACK[0x18D0]+ (373 * BYTE2(v98)+ 292805- 1042 * ((4121850 * (unint64_t)(373 * BYTE2(v98) + 292805)) >> 32))), 16) ^ 0x194A194A ^ (v133 - 1926392729 - ((2 * v133) & 0x1A5B28CE));
  v135 = (v134 - 1926392729 - ((2 * v134) & 0x1A5B28CE)) ^ v115;
  v136 = (v135 ^ 0x52525252u) >> (v123 & 0x2A ^ 0x22) >> (v123 & 0xD5 ^ 0x45);
  LODWORD(STACK[0x1868]) = v136;
  v137 = ((v135 ^ 0x52525252) << v108)
       - 522902189
       + (((v136 ^ 0x2603283B) + 1423000484) ^ ((v136 ^ 0x74E3FF1D) + 103912582) ^ ((v136 ^ 0x52E0D726) + 540196031));
  v138 = (v137 ^ 0xAB574E47) & (2 * (v137 & 0xAC586F14)) ^ v137 & 0xAC586F14;
  v139 = ((2 * (v137 ^ 0xABF7466F)) ^ 0xF5E52F6) & (v137 ^ 0xABF7466F) ^ (2 * (v137 ^ 0xABF7466F)) & 0x7AF297A;
  v140 = (v139 ^ 0x3020179) & (4 * v138) ^ v138;
  v141 = ((4 * (v139 ^ 0xA12909)) ^ 0x1EBCA5EC) & (v139 ^ 0xA12909) ^ (4 * (v139 ^ 0xA12909)) & 0x7AF2978;
  v142 = (v141 ^ 0x6AC2160) & (16 * v140) ^ v140;
  v143 = ((16 * (v141 ^ 0x1030813)) ^ 0x7AF297B0) & (v141 ^ 0x1030813) ^ (16 * (v141 ^ 0x1030813)) & 0x7AF2970;
  v144 = v142 ^ 0x7AF297B ^ (v143 ^ 0x2A2014B) & (v142 << 8);
  v145 = v135 ^ 0xDF7FC635;
  v146 = v137 ^ (2
               * ((v144 << 16) & 0x7AF0000 ^ v144 ^ ((v144 << 16) ^ 0x297B0000) & (((v143 ^ 0x50D284B) << 8) & 0x7AF0000 ^ 0x860000 ^ (((v143 ^ 0x50D284B) << 8) ^ 0x2F290000) & (v143 ^ 0x50D284B)))) ^ 0x2C7DA985;
  if (v132 == -1926392729)
    v147 = v145;
  else
    v147 = v146;
  LODWORD(STACK[0x1738]) = v147;
  v148 = 373 * BYTE1(v114);
  v149 = v148 + 292805 - 1042 * ((4121850 * (unint64_t)(v148 + 292805)) >> 32);
  v150 = 373 * (((v100 | (238 - BYTE2(v99))) & 0x311) + HIBYTE(v98));
  LODWORD(STACK[0x1858]) = v99;
  v151 = STACK[0x1898];
  v152 = 373 * BYTE2(v151)
       + 292805
       - 1042 * ((4121850 * (unint64_t)(373 * BYTE2(v151) + 292805)) >> 32);
  v153 = *((_DWORD *)&STACK[0x18D0] + ((v152 - 1926392729 + (~(2 * v152) | 0xFFFFF731) + 1) ^ 0x8D2D9467));
  HIDWORD(v154) = v153 ^ 0x9467;
  LODWORD(v154) = v153 ^ 0x8D2D0000;
  v155 = ((LODWORD(STACK[0x12C8]) ^ 0x8D2D9467) >> v130 >> v118) | ((LODWORD(STACK[0x12C8]) ^ 0x8D2D9467) << LODWORD(STACK[0x17A8]) << LODWORD(STACK[0x1570]));
  v156 = (v154 >> 16) - 1926392729 - ((2 * (v154 >> 16)) & 0x1A5B28CE);
  v157 = v155 - 1926392729 - ((2 * v155) & 0x1A5B28CE);
  v158 = *((_DWORD *)&STACK[0x18D0] + ((v149 - 1926392729 - ((2 * v149) & 0x8CE)) ^ 0x8D2D9467));
  v159 = ((v158 ^ 0x8D2D9467) << (((10 - v148) ^ (v148 - 59)) & 8)) | HIBYTE(v158) ^ 0x8D;
  v160 = *((_DWORD *)&STACK[0x18D0] + (v150 - 1042 * ((4121850 * (unint64_t)v150) >> 32)));
  HIDWORD(v154) = v160 ^ 0x67;
  LODWORD(v154) = v160 ^ v106;
  v161 = v154 >> 8;
  if (v132 == -1926392729)
    v162 = STACK[0x12C8];
  else
    v162 = v157;
  v163 = v162 ^ v115 ^ v159 ^ *((_DWORD *)&STACK[0x18D0]
                              + (373 * v99
                                             + 292805
                                             - 1042
                                             * ((4121850
                                               * (unint64_t)(373 * v99 + 292805)) >> 32))) ^ v156 ^ v161;
  v164 = (v163 ^ 0x52525252u) >> LODWORD(STACK[0x13E0]) >> LODWORD(STACK[0x13D8]);
  v165 = (v163 ^ 0x52525252) << v108;
  LODWORD(STACK[0x1860]) = v165;
  v166 = v163 ^ 0xDF7FC635;
  v167 = (v164 & 0xC3D7D0E8 | (v165 ^ 0x3C282F17) & ~v164) ^ 0xB105BB70;
  if (v132 == -1926392729)
    v167 = v166;
  v168 = 373 * v98
       + 292805
       - 1042 * ((4121850 * (unint64_t)(373 * v98 + 292805)) >> 32);
  v169 = 373 * HIBYTE(v151) + 1908981412;
  v170 = (2 * (v169 & 0x3B921)) & 0x17202 ^ v169 & 0x3B921 ^ ((2 * (v169 & 0x3B921)) | 0x100000) & (v169 ^ 0xE03A46BA);
  v171 = (2 * (v169 ^ 0xE03A46BA)) & 0x2201FF9A ^ 0x22000089 ^ ((2 * (v169 ^ 0xE03A46BA)) ^ 0x9003FF36) & (v169 ^ 0xE03A46BA);
  v172 = (4 * v170) & 0x6E01FF98 ^ v170 ^ ((4 * v170) ^ 0x200000) & v171;
  v173 = (4 * v171) & 0x6E01FF98 ^ 0x46000193 ^ ((4 * v171) ^ 0xB807FE6C) & v171;
  v174 = (16 * v172) & 0x6E01FF90 ^ v172 ^ ((16 * v172) ^ 0x800000) & v173;
  v175 = (16 * v173) & 0x6E01FF90 ^ 0xE00060B ^ ((16 * v173) ^ 0xE01FF9B0) & v173;
  v176 = v174 ^ (v174 << 8) & 0x6E01FF00 ^ ((v174 << 8) ^ 0x8000000) & v175;
  v177 = v169 ^ (2
               * (((v176 ^ 0x6609FF9B) << 16) & 0x6E010000 ^ v176 ^ 0x6609FF9B ^ (((v176 ^ 0x6609FF9B) << 16) ^ 0x7F9B0000) & ((v175 << 8) & 0x6E010000 ^ 0x6E000000 ^ ((v175 << 8) ^ 0x1FF0000) & v175))) ^ 0x8E3A4617;
  v178 = *((_DWORD *)&STACK[0x18D0]
         + (373 * BYTE2(LODWORD(STACK[0x1820]))
                        + 292805
                        - 1042
                        * ((4121850
                          * (unint64_t)(373 * BYTE2(LODWORD(STACK[0x1820]))
                                             + 292805)) >> 32)));
  HIDWORD(v179) = v178 ^ 0x9467;
  LODWORD(v179) = v178 ^ 0x8D2D0000;
  v180 = (v179 >> 16) ^ *((_DWORD *)&STACK[0x18D0] + v168);
  v181 = (((((LODWORD(STACK[0x1514]) ^ 0x8D2D9467) >> v108) ^ 0xD7E42B87) - 1523171296) ^ ((((LODWORD(STACK[0x1514]) ^ 0x8D2D9467) >> v108) ^ 0x2B500F26)
                                                                                         + 1501717695) ^ ((((LODWORD(STACK[0x1514]) ^ 0x8D2D9467) >> v108) ^ 0xFCB424A1) - 1905897670))
       - 602777923
       + ((LODWORD(STACK[0x1514]) ^ 0x8D2D9467) << LODWORD(STACK[0x1378]));
  v182 = (v181 ^ 0x2952BD00) & (2 * (v181 & 0xB11B3DAA)) ^ v181 & 0xB11B3DAA;
  v183 = ((2 * (v181 ^ 0x2B70AE54)) ^ 0x34D727FC) & (v181 ^ 0x2B70AE54) ^ (2 * (v181 ^ 0x2B70AE54)) & 0x9A6B93FE;
  v184 = (v183 ^ 0x24103FA) & (4 * v182) ^ v182;
  v185 = ((4 * (v183 ^ 0x8A289002)) ^ 0x69AE4FF8) & (v183 ^ 0x8A289002) ^ (4 * (v183 ^ 0x8A289002)) & 0x9A6B93FC;
  v186 = (v185 ^ 0x82A03E6) & (16 * v184) ^ v184;
  v187 = ((16 * (v185 ^ 0x92419006)) ^ 0xA6B93FE0) & (v185 ^ 0x92419006) ^ (16 * (v185 ^ 0x92419006)) & 0x9A6B93F0;
  v188 = v186 ^ 0x9A6B93FE ^ (v187 ^ 0x8229131E) & (v186 << 8);
  v189 = v181 ^ 0x2C358E31 ^ (2
                            * ((v188 << 16) & 0x1A6B0000 ^ v188 ^ ((v188 << 16) ^ 0x13FE0000) & (((v187 ^ 0x1842801E) << 8) & 0x1A6B0000 ^ 0x10680000 ^ (((v187 ^ 0x1842801E) << 8) ^ 0x6B930000) & (v187 ^ 0x1842801E))));
  v190 = *((_DWORD *)&STACK[0x18D0] + v177 % 0x412);
  v191 = ((v190 << 24) ^ 0x2BEF59C7) & ((v190 >> 8) ^ 0xFF62D06B) | (v190 >> 8) & 0x10A638;
  if (v123 == -1926392729)
    v192 = STACK[0x1514];
  else
    v192 = v189;
  v193 = *((unsigned int *)&STACK[0x18D0]
         + (373 * BYTE1(v99)
                        + 292805
                        - 1042 * ((4121850 * (unint64_t)(373 * BYTE1(v99) + 292805)) >> 32)));
  LODWORD(v193) = (*(unsigned __int8 *)((((v193 >> 19) & 0xE0 | (v193 >> 27)) ^ 0x28) + STACK[0x18B8] + 4432) ^ 0x38 | ((_DWORD)v193 << 8)) ^ 0x883E9B1A ^ ((v191 & 0xC84501E5 ^ 0xC84501C5) + (v191 ^ 0x21008028) - ((v191 ^ 0x21008028) & 0xC84501E5));
  LODWORD(v193) = v180 ^ (v193 - 1926392729 - ((2 * v193) & 0x1A5B28CE));
  LODWORD(STACK[0x17CC]) = v192;
  LODWORD(v193) = (v193 - 1926392729 - ((2 * v193) & 0x1A5B28CE)) ^ v192;
  LODWORD(v193) = (v193 - 1926392729 - ((2 * v193) & 0x1A5B28CE)) ^ v115;
  v194 = ((v193 ^ 0x52525252) << v130 << v118) | ((v193 ^ 0x52525252) >> LODWORD(STACK[0x1410]) >> LODWORD(STACK[0x1408]));
  v195 = v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE);
  v196 = v193 ^ 0xDF7FC635;
  if (v132 != -1926392729)
    v196 = v195;
  v197 = (LODWORD(STACK[0x1710]) ^ 1) + 2 * LODWORD(STACK[0x11E0]) + 2;
  v198 = STACK[0x1678];
  if ((STACK[0x1678] & 1) != 0)
    v199 = v167;
  else
    v199 = STACK[0x1738];
  if ((v198 & 1) != 0)
    v200 = STACK[0x1840];
  else
    v200 = v196;
  if ((v198 & 1) != 0)
    v201 = v196;
  else
    v201 = v167;
  if ((STACK[0x1678] & 1) != 0)
    v202 = STACK[0x1738];
  else
    v202 = STACK[0x1840];
  v203 = (v197 & 2) == 0;
  if ((v197 & 2) != 0)
    v204 = v199;
  else
    v204 = v200;
  if (v203)
    v205 = v201;
  else
    v205 = v202;
  LODWORD(STACK[0x1570]) = v201;
  if (!v203)
    v199 = v200;
  v206 = (v204 ^ 0x37972EDD) % 0x101;
  v207 = STACK[0x1400];
  v208 = STACK[0x1648];
  v209 = v199 ^ (((LODWORD(STACK[0x1400]) >> 1) ^ 0x7AB632B2)
               - 1926392729
               - ((2 * ((LODWORD(STACK[0x1400]) >> 1) ^ 0x7AB632B2)) & 0x1A5B28CE)) ^ ((v205 ^ LODWORD(STACK[0x1648])) >> 1);
  v210 = STACK[0x13F8];
  v211 = (v209 - 1926392729 - ((2 * v209) & 0x1A5B28CE)) ^ LODWORD(STACK[0x13F8]);
  v212 = (v211 - 1926392729 - ((2 * v211) & 0x1A5B28CE)) ^ v205;
  v213 = v212 - 1926392729 - ((2 * v212) & 0x1A5B28CE);
  v214 = STACK[0x16A8];
  v215 = __ROR4__(*(_DWORD *)(STACK[0x16A8] + 4 * (v206 + 54288)), 10);
  v216 = (16 * (v215 ^ 0x19E34B65)) ^ (4 * (v215 ^ 0x19E34B65));
  v217 = STACK[0x1664];
  v218 = ((v206 + 54288) & 0x4402 ^ (3 - (_BYTE)v206) & 2) + (LODWORD(STACK[0x1664]) ^ LODWORD(STACK[0x13F8])) % 0x101u;
  v219 = *(_DWORD *)(STACK[0x16A8] + 4 * ((v218 - 1926392729 - ((2 * v218) & 0x8CE)) ^ 0x8D2D9467));
  v220 = ((v219 ^ 0x1F88EDCA) - 529067466) ^ ((v219 ^ 0xA422855F) + 1541241505) ^ ((v219 ^ 0x3687FCF2) - 914881778);
  v221 = (v216 - 1926392729 - ((2 * v216) & 0x1A5B28C8)) ^ v215 ^ 0x19E34B65;
  if (v203)
    v222 = v202;
  else
    v222 = v201;
  v223 = v213 ^ v208;
  v224 = v221 ^ (687247093 - 1744926653 * v220) ^ ((687247093 - 1744926653 * v220) >> 7) ^ ((687247093
                                                                                           - 1744926653 * v220) >> 4) ^ v222;
  v225 = *(_DWORD *)(v214 + 4 * ((v205 ^ 0x37972EDD) % 0x101 + 17410));
  v226 = v213 ^ v208 ^ 0xE7E7E7E7;
  v227 = v226 & STACK[0x1894];
  v228 = v223;
  LODWORD(STACK[0x1820]) = v223;
  v229 = (v226 + 86869095 - 2 * (v227 ^ v223 & 8) + 4096) ^ v210;
  v230 = LODWORD(STACK[0x17A0]) ^ v210;
  v231 = v230 ^ v204 ^ v226 ^ ((v229 << 6) - 1926392729 - ((v229 << 7) & 0x1A5B2880)) ^ v224;
  v232 = STACK[0x1700];
  v233 = LODWORD(STACK[0x1700]) ^ v210 ^ (v231 - 1926392729 - ((2 * v231) & 0x1A5B28CE));
  HIDWORD(v234) = *(_DWORD *)(v214 + 4 * ((v208 ^ v210) % 0x101 + 54288));
  LODWORD(v234) = HIDWORD(v234);
  v235 = 687247093
       - 1744926653
       * (((v225 ^ 0x90E29C89) + 1864196983) ^ ((v225 ^ 0x7F8261DD) - 2139251165) ^ ((v225 ^ 0x624D6933) - 1649240371));
  v236 = v235 ^ (v235 >> 4) ^ (v235 >> 7);
  LODWORD(STACK[0x1840]) = v236;
  v236 ^= 0x2D85A23Au;
  LODWORD(STACK[0x1818]) = v236;
  v237 = v236
       - 186522011
       + (((v224 ^ 0xEAA20085) - 1630793874) ^ ((v224 ^ 0xAF31DBAA) - 614476733) ^ ((v224 ^ 0x432FBF5F) + 927051960));
  v238 = (v237 ^ 0xD7432EAB) & (2 * (v237 & 0x984BAE02)) ^ v237 & 0x984BAE02;
  v239 = ((2 * (v237 ^ 0xD7C23AAB)) ^ 0x9F132952) & (v237 ^ 0xD7C23AAB) ^ (2 * (v237 ^ 0xD7C23AAB)) & 0x4F8994A8;
  v240 = (v239 ^ 0x3010000) & (4 * v238) ^ v238;
  v241 = ((4 * (v239 ^ 0x408894A9)) ^ 0x3E2652A4) & (v239 ^ 0x408894A9) ^ (4 * (v239 ^ 0x408894A9)) & 0x4F8994A8;
  v242 = (v241 ^ 0xE0010A9) & (16 * v240) ^ v240;
  v243 = ((16 * (v241 ^ 0x41898409)) ^ 0xF8994A90) & (v241 ^ 0x41898409) ^ (16 * (v241 ^ 0x41898409)) & 0x4F8994A0;
  v244 = v242 ^ 0x4F8994A9 ^ (v243 ^ 0x48890000) & (v242 << 8);
  v245 = v237 ^ (2
               * ((v244 << 16) & 0x4F890000 ^ v244 ^ ((v244 << 16) ^ 0x14A90000) & (((v243 ^ 0x7009429) << 8) & 0x4F890000 ^ 0x46090000 ^ (((v243 ^ 0x7009429) << 8) ^ 0x9940000) & (v243 ^ 0x7009429))));
  v246 = ((v234 >> 10) ^ 0x4008E6B7 ^ (((16 * (v234 >> 10)) ^ (4 * (v234 >> 10)) ^ 0xF9B99BC4)
                                     - 1926392729
                                     - ((2 * ((16 * (v234 >> 10)) ^ (4 * (v234 >> 10)) ^ 0xF9B99BC4)) & 0x1A5B28C8)))
       - 1085509878
       + (((v245 ^ 0xCAD1DDB4) - 1236717187) ^ ((v245 ^ 0xD9004496) - 1516722081) ^ ((v245 ^ 0x1D9B1E72) + 1627648699));
  v247 = (v246 ^ 0xC9CCA41E) & (2 * (v246 & 0xCDE1255E)) ^ v246 & 0xCDE1255E;
  v248 = ((2 * (v246 ^ 0x48CEE486)) ^ 0xA5F83B0) & (v246 ^ 0x48CEE486) ^ (2 * (v246 ^ 0x48CEE486)) & 0x852FC1D8;
  v249 = (v248 ^ 0xD8190) & (4 * v247) ^ v247;
  v250 = ((4 * (v248 ^ 0x85204048)) ^ 0x14BF0760) & (v248 ^ 0x85204048) ^ (4 * (v248 ^ 0x85204048)) & 0x852FC1D8;
  v251 = (v250 ^ 0x42F0140) & (16 * v249) ^ v249;
  v252 = ((16 * (v250 ^ 0x8100C098)) ^ 0x52FC1D80) & (v250 ^ 0x8100C098) ^ (16 * (v250 ^ 0x8100C098)) & 0x852FC1D0;
  v253 = v251 ^ 0x852FC1D8 ^ (v252 ^ 0x2C0158) & (v251 << 8);
  v254 = v246 ^ (2
               * ((v253 << 16) & 0x52F0000 ^ v253 ^ ((v253 << 16) ^ 0x41D80000) & (((v252 ^ 0x8503C058) << 8) & 0x52F0000 ^ 0x2E0000 ^ (((v252 ^ 0x8503C058) << 8) ^ 0x2FC10000) & (v252 ^ 0x8503C058))));
  LODWORD(STACK[0x17E0]) = v254;
  v255 = (v254 ^ 0x7F141C54) % 0x101;
  v256 = *(_DWORD *)(v214
                   + 4
                   * (((((v255 - 1926392729 - ((2 * v255) & 0xCE)) ^ 0xBB330E5B) + 1154281893) ^ (((v255
                                                                                                  - 1926392729
                                                                                                  - ((2 * v255) & 0xCE)) ^ 0x921625AF)
                                                                                                + 1844042321) ^ (((v255 - 1926392729 - ((2 * v255) & 0xCE)) ^ 0xA408BF93) + 1542930541))
                    - 1926338441));
  v257 = (((v256 >> 10) ^ 0x84469EC2) & ((v256 << 22) ^ 0xADBFFFFF) | (v256 << 22) & 0x7B800000) ^ 0x29880A08;
  v258 = (-1163309885 - (v257 | 0xBAA94CC3) + (v257 | 0x4556B33C)) ^ 0xF13B6C93;
  v259 = v258 ^ (16 * v258) ^ (4 * (v258 + 221090935 - ((2 * v258) & 0x1A5B28CE)) - 64);
  LODWORD(STACK[0x17A8]) = v259;
  LODWORD(STACK[0x15CC]) = v233;
  v260 = v233 ^ (v232 << 6);
  v261 = (1652095839 * (v207 ^ 0x9B362232 ^ v260)) ^ (1652095839
                                                    * (((v217 ^ 0x77007F0A) + 843397712) ^ ((v217 ^ 0x582492BA)
                                                                                          + 492951552) ^ ((v217 ^ 0x18B3C36D) + 1576437289))
                                                    + 313724729);
  v262 = (v261 - 1926392729 - ((2 * v261) & 0x1A5B28CE)) ^ v205;
  LODWORD(STACK[0x1810]) = v230;
  v263 = *(_DWORD *)(v214 + 4 * (v230 % 0x101 + 54288));
  v264 = ((v263 ^ 0x8D2D9467) << (-43 * ((v228 ^ 0x18 | v226) & 0xBE))) | (v263 >> 10) ^ 0x234B65;
  v265 = (v208 ^ 0x37972EDDu) % 0x101 - 1926392729 - ((2 * ((v208 ^ 0x37972EDDu) % 0x101)) & 0xCE);
  v266 = (v259 ^ 0x1F8F97D6)
       + ((16 * v264) ^ (4 * v264) ^ (v264 - 1926392729 - ((2 * v264) & 0x1A5B28CE)) ^ 0x59EBADD2)
       + v262
       + 1;
  v267 = 0xFF00FF00FF0100
       * (((v266 ^ v210 ^ 0x83062B47E0D53B6FLL) + 0x7CF9D4B81F2AC491) ^ ((v266 ^ v210 ^ 0xF5F57D3D54337535)
                                                                         + 0xA0A82C2ABCC8ACBLL) ^ ((v266 ^ v210 ^ 0x76F3567A39CBDA3DLL)
                                                                                                 - 0x76F3567A39CBDA3DLL))
       + 0x342E0F91EAA42998;
  v268 = (v267 ^ 0x3F1C7BF281443CE9) & (2 * (v267 & 0x3F5E63FB15893D08)) ^ v267 & 0x3F5E63FB15893D08;
  v269 = ((2 * (v267 ^ 0x6F2839D080546EF9)) ^ 0xA0ECB4572BBAA720) & (v267 ^ 0x6F2839D080546EF9) ^ (2 * (v267 ^ 0x6F2839D080546EF9)) & 0x50765A2B95DD5200;
  v270 = (v269 ^ 0x60100000080000) & (4 * v268) ^ v268;
  v271 = ((4 * (v269 ^ 0x50124A2894455011)) ^ 0x41D968AE57754E44) & (v269 ^ 0x50124A2894455011) ^ (4 * (v269 ^ 0x50124A2894455011)) & 0x50765A2B95DD5390;
  v272 = (v271 ^ 0x4050482A15554200) & (16 * v270) ^ v270;
  v273 = ((16 * (v271 ^ 0x1026120180881191)) ^ 0x765A2B95DD53910) & (v271 ^ 0x1026120180881191) ^ (16 * (v271 ^ 0x1026120180881191)) & 0x50765A2B95DD5390;
  v274 = (v273 ^ 0x64022915D51100) & (v272 << 8) ^ v272;
  v275 = (((v273 ^ 0x5012580280084281) << 8) ^ 0x765A2B95DD539100) & (v273 ^ 0x5012580280084281) ^ ((v273 ^ 0x5012580280084281) << 8) & 0x50765A2B95DD5300;
  v276 = v274 ^ 0x50765A2B95DD5391 ^ (v275 ^ 0x50520A0195510000) & (v274 << 16);
  v277 = v267 ^ (2
               * ((v276 << 32) & 0x50765A2B00000000 ^ v276 ^ ((v276 << 32) ^ 0x15DD539100000000) & (((v275 ^ 0x24502A008C4291) << 16) & 0x50765A2B00000000 ^ 0x544A2200000000 ^ (((v275 ^ 0x24502A008C4291) << 16) ^ 0x5A2B95DD00000000) & (v275 ^ 0x24502A008C4291))));
  v278 = ((v277 ^ 0x7F2516FF078F273ALL) + 0x594AFA488AEC3778) ^ ((v277 ^ 0xE17E0EF8D61C61C7) - 0x38EE1DB0A4808E75);
  LODWORD(v277) = __CFADD__(257 * (v278 ^ ((v277 ^ 0x21416BA9EFA0DCB7) + 0x72E871E62C3CCFBLL)), 0xF0EB4732FC256DF8)
                + (((v278 ^ ((v277 ^ 0x21416BA9EFA0DCB7) + 0x72E871E62C3CCFBLL)) * (unsigned __int128)0x101uLL) >> 64)
                + 257
                * ((__CFADD__(v277 ^ 0x7F2516FF078F273ALL, 0x594AFA488AEC3778) - 1) ^ (__CFADD__(v277 ^ 0xE17E0EF8D61C61C7, 0xC711E24F5B7F718BLL)- 1) ^ (__CFADD__(v277 ^ 0x21416BA9EFA0DCB7, 0x72E871E62C3CCFBLL)- 1))+ 1295883422;
  LODWORD(v278) = (v277 ^ 0x20D373E7) & (2 * (v277 & 0xB2C263C8)) ^ v277 & 0xB2C263C8;
  LODWORD(v275) = ((2 * (v277 ^ 0x255734F7)) ^ 0x2F2AAE7E) & (v277 ^ 0x255734F7) ^ (2 * (v277 ^ 0x255734F7)) & 0x9795573E;
  LODWORD(v278) = (v275 ^ 0x7000620) & (4 * v278) ^ v278;
  LODWORD(v275) = ((4 * (v275 ^ 0x90955101)) ^ 0x5E555CFC) & (v275 ^ 0x90955101) ^ (4 * (v275 ^ 0x90955101)) & 0x9795573C;
  LODWORD(v278) = (v275 ^ 0x16155420) & (16 * v278) ^ v278;
  LODWORD(v275) = ((16 * (v275 ^ 0x81800303)) ^ 0x795573F0) & (v275 ^ 0x81800303) ^ (16 * (v275 ^ 0x81800303)) & 0x97955730;
  LODWORD(v278) = v278 ^ 0x9795573F ^ (v275 ^ 0x11155300) & ((_DWORD)v278 << 8);
  LODWORD(v277) = v277 ^ (2
                        * (((_DWORD)v278 << 16) & 0x17950000 ^ v278 ^ (((_DWORD)v278 << 16) ^ 0x573F0000) & (((v275 ^ 0x8680040F) << 8) & 0x17950000 ^ 0x2800000 ^ (((v275 ^ 0x8680040F) << 8) ^ 0x15570000) & (v275 ^ 0x8680040F))));
  LODWORD(v275) = ((v277 ^ 0x11D86330) - 792148705) ^ ((v277 ^ 0x4BFD83CA) - 1964169755) ^ ((v277 ^ 0xE9E72D4C)
                                                                                          + 687311715);
  v279 = STACK[0x1750];
  LODWORD(v277) = ((STACK[0x1750] & 6 ^ 3) - (STACK[0x1750] & 1)) ^ 0x8A6107;
  v280 = *(_DWORD *)(v214
                   + 4
                   * ((((v265 ^ 0x64733FD9) - 1685274585) ^ ((v265 ^ 0xA01A23F4) + 1608899596) ^ ((v265 ^ 0x4944884A)
                                                                                                - 1229228106))
                    - 1926375319));
  LODWORD(v278) = *(_DWORD *)(v214 + 4 * (v275 - 1926375319));
  LOBYTE(STACK[0x2BD8]) = 0;
  LOBYTE(STACK[0x2AAA]) = 0;
  LOBYTE(STACK[0x2DF0]) = 0;
  LOBYTE(STACK[0x2D59]) = 0;
  LOBYTE(STACK[0x2CC2]) = 0;
  LOBYTE(STACK[0x2C6F]) = 0;
  LOBYTE(STACK[0x2D15]) = 0;
  LOBYTE(STACK[0x2B41]) = 0;
  LOBYTE(STACK[0x2929]) = 0;
  LOBYTE(STACK[0x2B94]) = 0;
  LOBYTE(STACK[0x2A57]) = 0;
  LOBYTE(STACK[0x2A13]) = 0;
  LOBYTE(STACK[0x2DAC]) = 0;
  LOBYTE(STACK[0x29C0]) = 0;
  LOBYTE(STACK[0x297C]) = 0;
  LOBYTE(STACK[0x2C2B]) = 0;
  v281 = STACK[0x4F0];
  v282 = STACK[0x4E8];
  v283 = STACK[0x4F8];
  LOBYTE(STACK[0x2E42]) = LODWORD(STACK[0x8DC]) ^ *(_BYTE *)(STACK[0x4F8] + STACK[0xA10]) ^ *(_BYTE *)(STACK[0x4F0] + STACK[0x480]) ^ *(_BYTE *)(STACK[0x4E8] + STACK[0x478]);
  LOBYTE(STACK[0x2E44]) = LODWORD(STACK[0x8D8]) ^ *(_BYTE *)(v283 + STACK[0xA08]) ^ *(_BYTE *)(v281 + STACK[0x470]) ^ *(_BYTE *)(v282 + STACK[0x468]);
  LOBYTE(STACK[0x2E43]) = LODWORD(STACK[0x8D4]) ^ *(_BYTE *)(v283 + STACK[0xA00]) ^ *(_BYTE *)(v281 + STACK[0x460]) ^ *(_BYTE *)(v282 + STACK[0x458]);
  v284 = v83
       - 224
       + (v279 & 7 ^ 3u)
       + ((759750092 - (_DWORD)v277 + ((2 * (_DWORD)v277) & 0x104020A) + 3750) ^ 0x2DC28D72u);
  v285 = 1772489163
       * ((1772489163 * ((_DWORD)v284 + 2040612070)) ^ ((1772489163 * (v284 + 2040612070)) >> 16));
  *(_BYTE *)v284 = (-99
                  * ((1772489163
                    * ((1772489163 * ((_DWORD)v284 + 2040612070)) ^ ((1772489163 * (v284 + 2040612070)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v284 - 26)) ^ ((1772489163 * (v284 + 2040612070)) >> 16))) ^ *(_BYTE *)(v283 + (v285 >> 24)) ^ *(_BYTE *)((v285 >> 24) + v281 + 1) ^ *(_BYTE *)((v285 >> 24) + v282 + 2);
  v286 = (v260 >> 6) ^ 0x8C94FD7A;
  LODWORD(STACK[0x10B8]) = v260 ^ 0xE377D330;
  LODWORD(STACK[0x16C8]) = v286;
  v287 = v260 ^ 0xE377D330 ^ (v226 - 1926392729 - ((2 * v226) & 0x1A5B28CE)) ^ v286;
  LODWORD(STACK[0x13C0]) = v287;
  LODWORD(v285) = v287 ^ (((v217 >> 6) ^ 0x234B651) - 1926392729 - ((2 * ((v217 >> 6) ^ 0x234B651)) & 0x25B28CE));
  LODWORD(v285) = (v285 - 1926392729 - ((2 * v285) & 0x1A5B28CE)) ^ v217;
  LODWORD(v275) = v285 - 1926392729 - ((2 * v285) & 0x1A5B28CE);
  LOBYTE(STACK[0x2E50]) = LODWORD(STACK[0x8D0]) ^ *(_BYTE *)(v283 + STACK[0x9F8]) ^ *(_BYTE *)(v281 + STACK[0x450]) ^ *(_BYTE *)(v282 + STACK[0x448]);
  LOBYTE(STACK[0x2E41]) = LODWORD(STACK[0x8CC]) ^ *(_BYTE *)(v283 + STACK[0x9F0]) ^ *(_BYTE *)(v281 + STACK[0x440]) ^ *(_BYTE *)(v282 + STACK[0x438]);
  LOBYTE(STACK[0x2E48]) = LODWORD(STACK[0x8C8]) ^ *(_BYTE *)(v283 + STACK[0x9E8]) ^ *(_BYTE *)(v281 + STACK[0x430]) ^ *(_BYTE *)(v282 + STACK[0x428]);
  v288 = STACK[0xBE8];
  v289 = STACK[0xBE0];
  v290 = STACK[0xBF0];
  LOBYTE(STACK[0x2E4C]) = LODWORD(STACK[0x8C4]) ^ *(_BYTE *)(STACK[0xBF0] + STACK[0x9E0]) ^ *(_BYTE *)(STACK[0xBE8] + STACK[0x420]) ^ *(_BYTE *)(STACK[0xBE0] + STACK[0x9E0]);
  LOBYTE(STACK[0x2E45]) = LODWORD(STACK[0x8C0]) ^ *(_BYTE *)(v290 + STACK[0x9D8]) ^ *(_BYTE *)(v288 + STACK[0x418]) ^ *(_BYTE *)(v289 + STACK[0x9D8]);
  LOBYTE(STACK[0x2E40]) = LODWORD(STACK[0x8BC]) ^ *(_BYTE *)(v290 + STACK[0x9D0]) ^ *(_BYTE *)(v288 + STACK[0x410]) ^ *(_BYTE *)(v289 + STACK[0x9D0]);
  LOBYTE(STACK[0x2E49]) = LODWORD(STACK[0x8B8]) ^ *(_BYTE *)(v290 + STACK[0x9C8]) ^ *(_BYTE *)(v288 + STACK[0x408]) ^ *(_BYTE *)(v289 + STACK[0x9C8]);
  LOBYTE(STACK[0x2E46]) = LODWORD(STACK[0x8B4]) ^ *(_BYTE *)(v290 + STACK[0x9C0]) ^ *(_BYTE *)(v288 + STACK[0x400]) ^ *(_BYTE *)(v289 + STACK[0x9C0]);
  LODWORD(v284) = STACK[0x1400];
  v291 = LODWORD(STACK[0x1400]) >> 6;
  v292 = 375243201 * (v291 ^ 0x36A875A2 ^ v275);
  v293 = v83 - 224 + (v292 & 0xA) + (v292 & 0xA ^ 0xAu);
  v294 = 1772489163
       * ((1772489163 * ((_DWORD)v293 + 2040612070)) ^ ((1772489163 * (v293 + 2040612070)) >> 16));
  *(_BYTE *)v293 = *(_BYTE *)((v294 >> 24) + v288 + 3) ^ *(_BYTE *)(v290 + (v294 >> 24)) ^ *(_BYTE *)(v289 + (v294 >> 24)) ^ v294 ^ (-119 * BYTE3(v294));
  LODWORD(v293) = v284 ^ 0x48833289 ^ LODWORD(STACK[0x17E0]);
  LOBYTE(v243) = ((2 * (v293 & 0x79 ^ 0x40)) | 0x42) - (v293 & 0x79 ^ 0x40) - 33;
  v295 = LODWORD(STACK[0x11F8]) >> (((((v243 & 0xB4 ^ 0x94) + (v243 ^ 0x21) - ((v243 ^ 0x21) & 0xB4)) ^ 0x8D)
                                   + ((-17 - (v293 & 0x79 ^ 0x50 | 0xEF) + (v293 & 0x79 ^ 0x50 | 0x10)) ^ 0x40)) & ((v226 & 0xFD) + ((v228 ^ 0x18) & 0xFD)) ^ 0x7B);
  LODWORD(v284) = ((v226 - 1926392729 - 2 * (v226 & 0xD2D9477 ^ STACK[0x1820] & 0x10)) ^ v232) >> 2;
  LODWORD(v284) = LODWORD(STACK[0x1820]) ^ (v284 - 1926392729 - ((2 * v284) & 0x1A5B28CE)) ^ v293 ^ 0x9FA616E5 ^ (v295 - 1926392729 - ((2 * v295) & 0x1A5B28CE));
  v296 = ((((v265 + 32) & 4) + 90 + ((2 * ((v265 + 32) & 4)) ^ 0x4C)) ^ 0xA6) + ((v265 + 32) & 4 ^ 4);
  LODWORD(v293) = -1744926653
                * (((v280 ^ 0xF0188261) + 266829215) ^ ((v280 ^ 0xA9CEF6C4) + 1446054204) ^ ((v280 ^ 0xD4FBE0C2)
                                                                                           + 721690430));
  v297 = v293 + 687247093;
  LODWORD(v293) = v293 - 1239145636 - ((2 * (v293 + 687247093)) & 0x1A5B28CE);
  v298 = v293 ^ 0x2D85A23A ^ ((((v297 >> 3) ^ 0x8D2D9467 ^ v293) >> v296)
                            - 1926392729
                            - ((2 * (((v297 >> 3) ^ 0x8D2D9467 ^ v293) >> v296)) & 0x1A5B28CE));
  LODWORD(v293) = -1744926653
                * (((v278 ^ 0x8447F93A) + 2075657926) ^ ((v278 ^ 0xD19AC989) + 778385015) ^ ((v278 ^ 0xD8F0A4D4)
                                                                                           + 655317804));
  LODWORD(v284) = (((v293 + 687247093) >> 7) ^ ((v293 + 687247093) >> 4) ^ (v293 - 1239145636 - ((2 * (v293 + 687247093)) & 0x1A5B28CE)) ^ 0x5F57C9A2)
                + v298
                + (v232 ^ 0x94141414 ^ (v284 - 1926392729 - ((2 * v284) & 0x1A5B28CE)))
                + 1;
  LODWORD(v284) = v284 - 1926392729 - ((2 * v284) & 0x1A5B28CE);
  LODWORD(STACK[0x1088]) = v266
                         + 927942867 * ((LODWORD(STACK[0x17A0]) ^ 0x37972EDD) - (v284 ^ v210))
                         - 1926392729
                         - ((2 * (v266 + 927942867 * ((LODWORD(STACK[0x17A0]) ^ 0x37972EDD) - (v284 ^ v210)))) & 0x1A5B28CE);
  LODWORD(v293) = 375243201 * (v232 ^ 0x37972EDD) - 438994984;
  v299 = (v293 ^ 0x930A208A) & (2 * (v293 & 0x1A2A8828)) ^ v293 & 0x1A2A8828;
  v300 = ((2 * (v293 ^ 0xA74F309A)) ^ 0x7ACB7164) & (v293 ^ 0xA74F309A) ^ (2 * (v293 ^ 0xA74F309A)) & 0xBD65B8B2;
  v301 = (v300 ^ 0x38402020) & (4 * v299) ^ v299;
  v302 = ((4 * (v300 ^ 0x85248892)) ^ 0xF596E2C8) & (v300 ^ 0x85248892) ^ (4 * (v300 ^ 0x85248892)) & 0xBD65B8B0;
  v303 = (v302 ^ 0xB504A080) & (16 * v301) ^ v301;
  v304 = ((16 * (v302 ^ 0x8611832)) ^ 0xD65B8B20) & (v302 ^ 0x8611832) ^ (16 * (v302 ^ 0x8611832)) & 0xBD65B8B0;
  v305 = v303 ^ 0xBD65B8B2 ^ (v304 ^ 0x94418892) & (v303 << 8);
  LODWORD(STACK[0x1094]) = v291 ^ 0xBB85E1C5 ^ ((v275 ^ v210) - 1926392729 - ((2 * (v275 ^ v210)) & 0x1A5B28CE));
  v306 = v293 ^ (2
               * ((v305 << 16) & 0x3D650000 ^ v305 ^ ((v305 << 16) ^ 0x38B20000) & (((v304 ^ 0x29243092) << 8) & 0x3D650000 ^ 0x18450000 ^ (((v304 ^ 0x29243092) << 8) ^ 0x65B80000) & (v304 ^ 0x29243092)))) ^ v292;
  LOBYTE(STACK[0x2E60]) = LODWORD(STACK[0x8B0]) ^ *(_BYTE *)(v290 + STACK[0x9B8]) ^ *(_BYTE *)(v288 + STACK[0x3F8]) ^ *(_BYTE *)(v289 + STACK[0x9B8]);
  LOBYTE(STACK[0x2E6C]) = LODWORD(STACK[0x8AC]) ^ *(_BYTE *)(v290 + STACK[0x9B0]) ^ *(_BYTE *)(v288 + STACK[0x3F0]) ^ *(_BYTE *)(v289 + STACK[0x9B0]);
  LOBYTE(STACK[0x2E53]) = LODWORD(STACK[0x8A8]) ^ *(_BYTE *)(v290 + STACK[0x9A8]) ^ *(_BYTE *)(v288 + STACK[0x3E8]) ^ *(_BYTE *)(v289 + STACK[0x9A8]);
  LOBYTE(STACK[0x2E4B]) = LODWORD(STACK[0x8A4]) ^ *(_BYTE *)(v290 + STACK[0x9A0]) ^ *(_BYTE *)(v288 + STACK[0x3E0]) ^ *(_BYTE *)(v289 + STACK[0x9A0]);
  LOBYTE(STACK[0x2E4F]) = LODWORD(STACK[0x8A0]) ^ *(_BYTE *)(v290 + STACK[0x998]) ^ *(_BYTE *)(v288 + STACK[0x3D8]) ^ *(_BYTE *)(v289 + STACK[0x998]);
  v307 = STACK[0x10E8];
  v308 = STACK[0x10E0];
  v309 = STACK[0x10F0];
  LOBYTE(STACK[0x2E55]) = LODWORD(STACK[0x894]) ^ *(_BYTE *)(STACK[0x10F0] + STACK[0x898]) ^ *(_BYTE *)(STACK[0x10E8] + STACK[0x898]) ^ *(_BYTE *)(STACK[0x10E0] + STACK[0x898]);
  LOBYTE(STACK[0x2E64]) = LODWORD(STACK[0x884]) ^ *(_BYTE *)(v309 + STACK[0x888]) ^ *(_BYTE *)(v307 + STACK[0x888]) ^ *(_BYTE *)(v308 + STACK[0x888]);
  v310 = STACK[0x4E0];
  v311 = STACK[0x4D8];
  v312 = STACK[0x4D0];
  LOBYTE(STACK[0x2E5C]) = LODWORD(STACK[0x880]) ^ *(_BYTE *)(STACK[0x4E0] + STACK[0x990]) ^ *(_BYTE *)(STACK[0x4D8] + STACK[0x990]) ^ *(_BYTE *)(STACK[0x4D0] + STACK[0x3D0]);
  LOBYTE(STACK[0x2E56]) = LODWORD(STACK[0x87C]) ^ *(_BYTE *)(v310 + STACK[0x988]) ^ *(_BYTE *)(v311 + STACK[0x988]) ^ *(_BYTE *)(v312 + STACK[0x3C8]);
  LOBYTE(STACK[0x2E59]) = LODWORD(STACK[0x878]) ^ *(_BYTE *)(v310 + STACK[0x980]) ^ *(_BYTE *)(v311 + STACK[0x980]) ^ *(_BYTE *)(v312 + STACK[0x3C0]);
  LOBYTE(STACK[0x2E4D]) = LODWORD(STACK[0x874]) ^ *(_BYTE *)(v310 + STACK[0x978]) ^ *(_BYTE *)(v311 + STACK[0x978]) ^ *(_BYTE *)(v312 + STACK[0x3B8]);
  LOBYTE(STACK[0x2E5A]) = LODWORD(STACK[0x870]) ^ *(_BYTE *)(v310 + STACK[0x970]) ^ *(_BYTE *)(v311 + STACK[0x970]) ^ *(_BYTE *)(v312 + STACK[0x3B0]);
  v313 = (_BYTE *)(v83 - 224 + ((v232 ^ 0x37972EDD) & 0x1B | v232 & 0x1B ^ 2u));
  v314 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v313 + 2040612070)) ^ ((1772489163
                                                                                        * ((_DWORD)v313 + 2040612070)) >> 16))) >> 24;
  LOBYTE(v297) = (-125
                * ((1772489163
                  * ((1772489163 * ((_DWORD)v313 + 2040612070)) ^ ((1772489163
                                                                                * ((_DWORD)v313 + 2040612070)) >> 16))) >> 24)) ^ (-53 * ((-53 * ((_BYTE)v313 - 26)) ^ ((1772489163 * ((_DWORD)v313 + 2040612070)) >> 16))) ^ *(_BYTE *)(v310 + v314);
  LOBYTE(v314) = *(_BYTE *)(v311 + v314) ^ *(_BYTE *)(v314 + v312 + 2);
  STACK[0x1548] = LODWORD(STACK[0x1800]) >> 8;
  LODWORD(STACK[0x14C8]) = LODWORD(STACK[0x1858]) >> 8;
  LODWORD(STACK[0x1820]) = LODWORD(STACK[0x1898]) >> 8;
  LODWORD(STACK[0x1750]) = LODWORD(STACK[0x1860]) ^ 0x8D2D9467;
  LODWORD(STACK[0x17E0]) = LODWORD(STACK[0x1810]) ^ 0x8D2D9467;
  LODWORD(STACK[0x144C]) = LODWORD(STACK[0x17A8]) ^ 0x92A203B1;
  LODWORD(STACK[0x1788]) = v291 ^ 0x8EF825F2;
  *v313 = v297 ^ v314;
  LOBYTE(STACK[0x2E5E]) = LODWORD(STACK[0x86C]) ^ *(_BYTE *)(v310 + STACK[0x968]) ^ *(_BYTE *)(v311 + STACK[0x968]) ^ *(_BYTE *)(v312 + STACK[0x3A8]);
  LOBYTE(STACK[0x2E51]) = LODWORD(STACK[0x868]) ^ *(_BYTE *)(v310 + STACK[0x960]) ^ *(_BYTE *)(v311 + STACK[0x960]) ^ *(_BYTE *)(v312 + STACK[0x3A0]);
  LOBYTE(STACK[0x2E52]) = LODWORD(STACK[0x864]) ^ *(_BYTE *)(v310 + STACK[0x958]) ^ *(_BYTE *)(v311 + STACK[0x958]) ^ *(_BYTE *)(v312 + STACK[0x398]);
  LOBYTE(STACK[0x2E66]) = LODWORD(STACK[0x860]) ^ *(_BYTE *)(v310 + STACK[0x950]) ^ *(_BYTE *)(v311 + STACK[0x950]) ^ *(_BYTE *)(v312 + STACK[0x390]);
  LOBYTE(STACK[0x2E68]) = LODWORD(STACK[0x85C]) ^ *(_BYTE *)(v310 + STACK[0x948]) ^ *(_BYTE *)(v311 + STACK[0x948]) ^ *(_BYTE *)(v312 + STACK[0x388]);
  LOBYTE(STACK[0x2E58]) = LODWORD(STACK[0x858]) ^ *(_BYTE *)(v310 + STACK[0x940]) ^ *(_BYTE *)(v311 + STACK[0x940]) ^ *(_BYTE *)(v312 + STACK[0x380]);
  LOBYTE(STACK[0x2E4E]) = LODWORD(STACK[0x854]) ^ *(_BYTE *)(v310 + STACK[0x938]) ^ *(_BYTE *)(v311 + STACK[0x938]) ^ *(_BYTE *)(v312 + STACK[0x378]);
  LOBYTE(STACK[0x2E65]) = LODWORD(STACK[0x850]) ^ *(_BYTE *)(v310 + STACK[0x930]) ^ *(_BYTE *)(v311 + STACK[0x930]) ^ *(_BYTE *)(v312 + STACK[0x370]);
  LOBYTE(STACK[0x2E6B]) = LODWORD(STACK[0x84C]) ^ *(_BYTE *)(v310 + STACK[0x928]) ^ *(_BYTE *)(v311 + STACK[0x928]) ^ *(_BYTE *)(v312 + STACK[0x368]);
  LOBYTE(STACK[0x2E62]) = LODWORD(STACK[0x848]) ^ *(_BYTE *)(v310 + STACK[0x920]) ^ *(_BYTE *)(v311 + STACK[0x920]) ^ *(_BYTE *)(v312 + STACK[0x360]);
  v315 = STACK[0x4C8];
  v316 = STACK[0x4C0];
  v317 = STACK[0x4B8];
  LOBYTE(STACK[0x2E6A]) = LODWORD(STACK[0x83C]) ^ *(_BYTE *)(STACK[0x4C8] + STACK[0x840]) ^ *(_BYTE *)(STACK[0x4C0] + STACK[0x840]) ^ *(_BYTE *)(STACK[0x4B8] + STACK[0x840]);
  LOBYTE(STACK[0x2E5F]) = LODWORD(STACK[0x82C]) ^ *(_BYTE *)(v315 + STACK[0x830]) ^ *(_BYTE *)(v316 + STACK[0x830]) ^ *(_BYTE *)(v317 + STACK[0x830]);
  LOBYTE(STACK[0x2E5D]) = LODWORD(STACK[0x81C]) ^ *(_BYTE *)(v315 + STACK[0x820]) ^ *(_BYTE *)(v316 + STACK[0x820]) ^ *(_BYTE *)(v317 + STACK[0x820]);
  LOBYTE(STACK[0x2E54]) = LODWORD(STACK[0x80C]) ^ *(_BYTE *)(v315 + STACK[0x810]) ^ *(_BYTE *)(v316 + STACK[0x810]) ^ *(_BYTE *)(v317 + STACK[0x810]);
  LOBYTE(STACK[0x2E69]) = LODWORD(STACK[0x7FC]) ^ *(_BYTE *)(v315 + STACK[0x800]) ^ *(_BYTE *)(v316 + STACK[0x800]) ^ *(_BYTE *)(v317 + STACK[0x800]);
  LOBYTE(STACK[0x2E57]) = LODWORD(STACK[0x7EC]) ^ *(_BYTE *)(v315 + STACK[0x7F0]) ^ *(_BYTE *)(v316 + STACK[0x7F0]) ^ *(_BYTE *)(v317 + STACK[0x7F0]);
  LODWORD(v309) = STACK[0x1818];
  LODWORD(v307) = STACK[0x1840] & 0x2D;
  LOBYTE(STACK[0x2E6E]) = LODWORD(STACK[0x7DC]) ^ *(_BYTE *)(v315 + STACK[0x7E0]) ^ *(_BYTE *)(v316 + STACK[0x7E0]) ^ *(_BYTE *)(v317 + STACK[0x7E0]);
  LOBYTE(STACK[0x2E61]) = LODWORD(STACK[0x7CC]) ^ *(_BYTE *)(v315 + STACK[0x7D0]) ^ *(_BYTE *)(v316 + STACK[0x7D0]) ^ *(_BYTE *)(v317 + STACK[0x7D0]);
  LOBYTE(STACK[0x2E63]) = LODWORD(STACK[0x7BC]) ^ *(_BYTE *)(v315 + STACK[0x7C0]) ^ *(_BYTE *)(v316 + STACK[0x7C0]) ^ *(_BYTE *)(v317 + STACK[0x7C0]);
  LOBYTE(STACK[0x2E67]) = LODWORD(STACK[0x7AC]) ^ *(_BYTE *)(v315 + STACK[0x7B0]) ^ *(_BYTE *)(v316 + STACK[0x7B0]) ^ *(_BYTE *)(v317 + STACK[0x7B0]);
  LOBYTE(STACK[0x2E74]) = LODWORD(STACK[0x79C]) ^ *(_BYTE *)(v315 + STACK[0x7A0]) ^ *(_BYTE *)(v316 + STACK[0x7A0]) ^ *(_BYTE *)(v317 + STACK[0x7A0]);
  v318 = (_BYTE *)(v83 - 224 + (v309 & 0x2D) + (v307 ^ 5));
  v319 = 1772489163
       * ((1772489163 * ((_DWORD)v318 + 2040612070)) ^ ((1772489163 * ((_DWORD)v318 + 2040612070)) >> 16));
  *v318 = (-107
         * ((1772489163
           * ((1772489163 * ((_DWORD)v318 + 2040612070)) ^ ((1772489163 * ((_DWORD)v318 + 2040612070)) >> 16))) >> 24)) ^ (-53 * ((-53 * ((_BYTE)v318 - 26)) ^ ((1772489163 * ((_DWORD)v318 + 2040612070)) >> 16))) ^ *(_BYTE *)(v315 + (v319 >> 24)) ^ *(_BYTE *)(v316 + (v319 >> 24)) ^ *(_BYTE *)(v317 + (v319 >> 24));
  LOBYTE(STACK[0x2E72]) = LODWORD(STACK[0x78C]) ^ *(_BYTE *)(v315 + STACK[0x790]) ^ *(_BYTE *)(v316 + STACK[0x790]) ^ *(_BYTE *)(v317 + STACK[0x790]);
  LOBYTE(STACK[0x2E7C]) = LODWORD(STACK[0x77C]) ^ *(_BYTE *)(v315 + STACK[0x780]) ^ *(_BYTE *)(v316 + STACK[0x780]) ^ *(_BYTE *)(v317 + STACK[0x780]);
  LOBYTE(STACK[0x2E79]) = LODWORD(STACK[0x76C]) ^ *(_BYTE *)(v315 + STACK[0x770]) ^ *(_BYTE *)(v316 + STACK[0x770]) ^ *(_BYTE *)(v317 + STACK[0x770]);
  LOBYTE(STACK[0x2E80]) = LODWORD(STACK[0x75C]) ^ *(_BYTE *)(v315 + STACK[0x760]) ^ *(_BYTE *)(v316 + STACK[0x760]) ^ *(_BYTE *)(v317 + STACK[0x760]);
  v320 = STACK[0x4A0];
  v321 = STACK[0x4B0];
  v322 = STACK[0x4A8];
  LOBYTE(STACK[0x2E76]) = LODWORD(STACK[0x758]) ^ *(_BYTE *)(STACK[0x4A0] + STACK[0x918]) ^ *(_BYTE *)(STACK[0x4B0] + STACK[0x358]) ^ *(_BYTE *)(STACK[0x4A8] + STACK[0x350]);
  LOBYTE(STACK[0x2E78]) = LODWORD(STACK[0x754]) ^ *(_BYTE *)(v320 + STACK[0x910]) ^ *(_BYTE *)(v321 + STACK[0x348]) ^ *(_BYTE *)(v322 + STACK[0x340]);
  LODWORD(v317) = STACK[0x1518];
  LOBYTE(STACK[0x2E71]) = LODWORD(STACK[0x750]) ^ *(_BYTE *)(v320 + STACK[0x908]) ^ *(_BYTE *)(v321 + STACK[0x338]) ^ *(_BYTE *)(v322 + STACK[0x330]);
  LOBYTE(STACK[0x2E6F]) = LODWORD(STACK[0x74C]) ^ *(_BYTE *)(v320 + STACK[0x900]) ^ *(_BYTE *)(v321 + STACK[0x328]) ^ *(_BYTE *)(v322 + STACK[0x320]);
  LOBYTE(STACK[0x2E7A]) = LODWORD(STACK[0x748]) ^ *(_BYTE *)(v320 + STACK[0x8F8]) ^ *(_BYTE *)(v321 + STACK[0x318]) ^ *(_BYTE *)(v322 + STACK[0x310]);
  LOBYTE(STACK[0x2E77]) = LODWORD(STACK[0x744]) ^ *(_BYTE *)(v320 + STACK[0x8F0]) ^ *(_BYTE *)(v321 + STACK[0x308]) ^ *(_BYTE *)(v322 + STACK[0x300]);
  LOBYTE(STACK[0x2E75]) = LODWORD(STACK[0x740]) ^ *(_BYTE *)(v320 + STACK[0x8E8]) ^ *(_BYTE *)(v321 + STACK[0x2F8]) ^ *(_BYTE *)(v322 + STACK[0x2F0]);
  LOBYTE(STACK[0x2E7B]) = LODWORD(STACK[0x734]) ^ *(_BYTE *)(v320 + STACK[0x738]) ^ *(_BYTE *)(v321 + STACK[0x2E8]) ^ *(_BYTE *)(v322 + STACK[0x2E0]);
  LOBYTE(STACK[0x2E73]) = LODWORD(STACK[0x724]) ^ *(_BYTE *)(v320 + STACK[0x728]) ^ *(_BYTE *)(v321 + STACK[0x2D8]) ^ *(_BYTE *)(v322 + STACK[0x2D0]);
  LOBYTE(STACK[0x2E7E]) = LODWORD(STACK[0x714]) ^ *(_BYTE *)(v320 + STACK[0x718]) ^ *(_BYTE *)(v321 + STACK[0x2C8]) ^ *(_BYTE *)(v322 + STACK[0x2C0]);
  LOBYTE(STACK[0x2E83]) = LODWORD(STACK[0x704]) ^ *(_BYTE *)(v320 + STACK[0x708]) ^ *(_BYTE *)(v321 + STACK[0x2B8]) ^ *(_BYTE *)(v322 + STACK[0x2B0]);
  LOBYTE(STACK[0x2E8C]) = LODWORD(STACK[0x6F4]) ^ *(_BYTE *)(v320 + STACK[0x6F8]) ^ *(_BYTE *)(v321 + STACK[0x2A8]) ^ *(_BYTE *)(v322 + STACK[0x2A0]);
  LOBYTE(STACK[0x2E8D]) = LODWORD(STACK[0x6E4]) ^ *(_BYTE *)(v320 + STACK[0x6E8]) ^ *(_BYTE *)(v321 + STACK[0x298]) ^ *(_BYTE *)(v322 + STACK[0x290]);
  LOBYTE(STACK[0x2E8E]) = LODWORD(STACK[0x6D4]) ^ *(_BYTE *)(v320 + STACK[0x6D8]) ^ *(_BYTE *)(v321 + STACK[0x288]) ^ *(_BYTE *)(v322 + STACK[0x280]);
  LOBYTE(STACK[0x2E70]) = LODWORD(STACK[0x6C4]) ^ *(_BYTE *)(v320 + STACK[0x6C8]) ^ *(_BYTE *)(v321 + STACK[0x278]) ^ *(_BYTE *)(v322 + STACK[0x270]);
  LOBYTE(STACK[0x2E85]) = LODWORD(STACK[0x6B4]) ^ *(_BYTE *)(v320 + STACK[0x6B8]) ^ *(_BYTE *)(v321 + STACK[0x268]) ^ *(_BYTE *)(v322 + STACK[0x260]);
  v323 = STACK[0x498];
  v324 = STACK[0x490];
  v325 = STACK[0x488];
  LOBYTE(STACK[0x2E84]) = LODWORD(STACK[0x6A4]) ^ *(_BYTE *)(STACK[0x498] + STACK[0x6A8]) ^ *(_BYTE *)(STACK[0x490] + STACK[0x6A8]) ^ *(_BYTE *)(STACK[0x488] + STACK[0x6A8]);
  LOBYTE(STACK[0x2E7D]) = LODWORD(STACK[0x694]) ^ *(_BYTE *)(v323 + STACK[0x698]) ^ *(_BYTE *)(v324 + STACK[0x698]) ^ *(_BYTE *)(v325 + STACK[0x698]);
  LOBYTE(STACK[0x2E91]) = LODWORD(STACK[0x684]) ^ *(_BYTE *)(v323 + STACK[0x688]) ^ *(_BYTE *)(v324 + STACK[0x688]) ^ *(_BYTE *)(v325 + STACK[0x688]);
  LOBYTE(STACK[0x2E81]) = LODWORD(STACK[0x674]) ^ *(_BYTE *)(v323 + STACK[0x678]) ^ *(_BYTE *)(v324 + STACK[0x678]) ^ *(_BYTE *)(v325 + STACK[0x678]);
  LOBYTE(STACK[0x2E82]) = LODWORD(STACK[0x664]) ^ *(_BYTE *)(v323 + STACK[0x668]) ^ *(_BYTE *)(v324 + STACK[0x668]) ^ *(_BYTE *)(v325 + STACK[0x668]) ^ ((((v317 & 0x12) + (v317 & 0x1A ^ 0x1F) - ((v317 & 0x1A ^ 0x1F) & 0x12) - 32) ^ 7) + (((v317 & 0x1A ^ 0xB) + 3) ^ 0x1E) + 6) & 0x1E;
  LOBYTE(STACK[0x2E7F]) = LODWORD(STACK[0x654]) ^ *(_BYTE *)(v323 + STACK[0x658]) ^ *(_BYTE *)(v324 + STACK[0x658]) ^ *(_BYTE *)(v325 + STACK[0x658]);
  LOBYTE(STACK[0x2E89]) = LODWORD(STACK[0x644]) ^ *(_BYTE *)(v323 + STACK[0x648]) ^ *(_BYTE *)(v324 + STACK[0x648]) ^ *(_BYTE *)(v325 + STACK[0x648]);
  LOBYTE(STACK[0x2E87]) = LODWORD(STACK[0x634]) ^ *(_BYTE *)(v323 + STACK[0x638]) ^ *(_BYTE *)(v324 + STACK[0x638]) ^ *(_BYTE *)(v325 + STACK[0x638]);
  LOBYTE(STACK[0x2E8A]) = LODWORD(STACK[0x624]) ^ *(_BYTE *)(v323 + STACK[0x628]) ^ *(_BYTE *)(v324 + STACK[0x628]) ^ *(_BYTE *)(v325 + STACK[0x628]);
  LOBYTE(STACK[0x2E88]) = LODWORD(STACK[0x614]) ^ *(_BYTE *)(v323 + STACK[0x618]) ^ *(_BYTE *)(v324 + STACK[0x618]) ^ *(_BYTE *)(v325 + STACK[0x618]);
  LOBYTE(STACK[0x2E9E]) = LODWORD(STACK[0x604]) ^ *(_BYTE *)(v323 + STACK[0x608]) ^ *(_BYTE *)(v324 + STACK[0x608]) ^ *(_BYTE *)(v325 + STACK[0x608]);
  LOBYTE(STACK[0x2E8F]) = LODWORD(STACK[0x5F4]) ^ *(_BYTE *)(v323 + STACK[0x5F8]) ^ *(_BYTE *)(v324 + STACK[0x5F8]) ^ *(_BYTE *)(v325 + STACK[0x5F8]);
  LOBYTE(STACK[0x2E86]) = LODWORD(STACK[0x5E4]) ^ *(_BYTE *)(v323 + STACK[0x5E8]) ^ *(_BYTE *)(v324 + STACK[0x5E8]) ^ *(_BYTE *)(v325 + STACK[0x5E8]);
  LOBYTE(STACK[0x2E8B]) = LODWORD(STACK[0x5D4]) ^ *(_BYTE *)(v323 + STACK[0x5D8]) ^ *(_BYTE *)(v324 + STACK[0x5D8]) ^ *(_BYTE *)(v325 + STACK[0x5D8]);
  LOBYTE(STACK[0x2E9C]) = LODWORD(STACK[0x5C4]) ^ *(_BYTE *)(v323 + STACK[0x5C8]) ^ *(_BYTE *)(v324 + STACK[0x5C8]) ^ *(_BYTE *)(v325 + STACK[0x5C8]);
  LOBYTE(STACK[0x2E95]) = LODWORD(STACK[0x5B4]) ^ *(_BYTE *)(v323 + STACK[0x5B8]) ^ *(_BYTE *)(v324 + STACK[0x5B8]) ^ *(_BYTE *)(v325 + STACK[0x5B8]);
  v326 = STACK[0xA88];
  v327 = STACK[0xA80];
  v328 = STACK[0xA78];
  LOBYTE(STACK[0x2E92]) = LODWORD(STACK[0x5A4]) ^ *(_BYTE *)(STACK[0xA88] + STACK[0x5A8]) ^ *(_BYTE *)(STACK[0xA80] + STACK[0x258]) ^ *(_BYTE *)(STACK[0xA78] + STACK[0x250]);
  LOBYTE(STACK[0x2E99]) = LODWORD(STACK[0x5A0]) ^ *(_BYTE *)(v326 + STACK[0x8E0]) ^ *(_BYTE *)(v327 + STACK[0x248]) ^ *(_BYTE *)(v328 + STACK[0x240]);
  LOBYTE(STACK[0x2E94]) = LODWORD(STACK[0x594]) ^ *(_BYTE *)(v326 + STACK[0x598]) ^ *(_BYTE *)(v327 + STACK[0x238]) ^ *(_BYTE *)(v328 + STACK[0x230]);
  LOBYTE(STACK[0x2E90]) = LODWORD(STACK[0x584]) ^ *(_BYTE *)(v326 + STACK[0x588]) ^ *(_BYTE *)(v327 + STACK[0x228]) ^ *(_BYTE *)(v328 + STACK[0x220]);
  LOBYTE(STACK[0x2E96]) = LODWORD(STACK[0x574]) ^ *(_BYTE *)(v326 + STACK[0x578]) ^ *(_BYTE *)(v327 + STACK[0x218]) ^ *(_BYTE *)(v328 + STACK[0x210]);
  LOBYTE(STACK[0x2E98]) = LODWORD(STACK[0x564]) ^ *(_BYTE *)(v326 + STACK[0x568]) ^ *(_BYTE *)(v327 + STACK[0x208]) ^ *(_BYTE *)(v328 + STACK[0x200]);
  LOBYTE(STACK[0x2E93]) = LODWORD(STACK[0x554]) ^ *(_BYTE *)(v326 + STACK[0x558]) ^ *(_BYTE *)(v327 + a72) ^ *(_BYTE *)(v328 + a71);
  v329 = STACK[0xA70];
  v330 = STACK[0xA68];
  v331 = STACK[0xA60];
  LOBYTE(STACK[0x2E9F]) = LODWORD(STACK[0x544]) ^ *(_BYTE *)(STACK[0xA70] + STACK[0x548]) ^ *(_BYTE *)(STACK[0xA68] + a70) ^ *(_BYTE *)(STACK[0xA60] + a69);
  LOBYTE(STACK[0x2E9D]) = LODWORD(STACK[0x534]) ^ *(_BYTE *)(v329 + STACK[0x538]) ^ *(_BYTE *)(v330 + a68) ^ *(_BYTE *)(v331 + a67);
  LOBYTE(STACK[0x2E9B]) = LODWORD(STACK[0x524]) ^ *(_BYTE *)(v329 + STACK[0x528]) ^ *(_BYTE *)(v330 + a66) ^ *(_BYTE *)(v331 + a65);
  LOBYTE(STACK[0x2E9A]) = LODWORD(STACK[0x514]) ^ *(_BYTE *)(v329 + STACK[0x518]) ^ *(_BYTE *)(v330 + a64) ^ *(_BYTE *)(v331 + a63);
  LOBYTE(STACK[0x2E97]) = LODWORD(STACK[0x504]) ^ *(_BYTE *)(v329 + STACK[0x508]) ^ *(_BYTE *)(v330 + a62) ^ *(_BYTE *)(v331 + a61);
  v332 = *(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0x12A0]));
  LODWORD(STACK[0x1130]) = v306 ^ 0x10A1F94C ^ v284;
  LODWORD(STACK[0x13A8]) = STACK[0x124C];
  LODWORD(STACK[0x15DC]) = STACK[0x1434];
  LODWORD(STACK[0x1400]) = STACK[0xD3C];
  return ((uint64_t (*)(_QWORD))(v332 - 12))(LODWORD(STACK[0x1638]));
}

uint64_t sub_10027D444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  char v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;

  v10 = v8 ^ 0x8D2D9467;
  v11 = ((-3
                         * ((29 * (((a5 + 105) | 0x43) ^ 0xB2)) ^ (((((v8 ^ 0x67) & STACK[0x1798] ^ v8 & 0xF1 ^ 0x90)
                                                                                    - (((v8 ^ 0x67) & STACK[0x1798] ^ v8 & 0xF1) & 0x62)
                                                                                    + (((v8 ^ 0x67) & STACK[0x1798] ^ v8 & 0xF1) & 0x62 ^ 0x62)) & 0xFE) >> 1) ^ 4)) ^ 0x1B)
      + 2133559310;
  v12 = (v11 & 0x58 | ((((v11 & 0x58) >> 6) & 1) << 7)) ^ ((v11 ^ 0xE9F74F92) & (2 * (v11 & 0x58)) | 0x233C247);
  v13 = (2 * (v11 ^ 0xE9F74F92)) & 0x9CA ^ 0x2404A ^ ((2 * (v11 ^ 0xE9F74F92)) ^ 0x92448394) & (v11 ^ 0xE9F74F92);
  v14 = (4 * v12) & 0x612055C8 ^ v12 ^ ((4 * v12) ^ 0x8C3091C) & v13;
  v15 = (4 * v13) & 0x69225DC8 ^ 0x492208C2 ^ ((4 * v13) ^ 0xA4897728) & v13;
  v16 = (16 * v14) & 0x69225DC0 ^ v14 ^ ((16 * v14) ^ 0x230C34F0) & v15;
  v17 = (16 * v15) & 0x69225DC0 ^ 0x6902014A ^ ((16 * v15) ^ 0x9225DCA0) & v15;
  v18 = v16 ^ (v16 << 8) & 0x69225D00 ^ ((v16 << 8) ^ 0x30D78F00) & v17 ^ 0x6A108745;
  v19 = v11 ^ (2
             * ((v18 << 16) & 0x69220000 ^ v18 ^ ((v18 << 16) ^ 0x5DCA0000) & ((v17 << 8) & 0x69220000 ^ 0x49220000 ^ ((v17 << 8) ^ 0x225D0000) & v17))) ^ 0xC095A9CC;
  v20 = *(unsigned __int8 *)(STACK[0x18B8] + v19) ^ (*(unsigned __int8 *)(STACK[0x18B8] + v19) >> 3) & 0x15;
  v21 = *(_DWORD *)(STACK[0x17D0] + 4 * v10) ^ ((*(_DWORD *)(STACK[0x17D0] + 4 * v10) & v9) >> 1);
  v22 = v8 ^ 0x67 ^ (((v20 ^ 0x4C) >> 2) | ((_BYTE)v20 << 6));
  v23 = ((v22 & STACK[0x17C0]) >> LODWORD(STACK[0x17A8])) | (v22 << LODWORD(STACK[0x1898]) << LODWORD(STACK[0x1870]));
  v24 = (v23 - 1926392729 - ((2 * v23) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1810]);
  v25 = ((((v21 & STACK[0x17D8] & 0x28C2EC63 ^ 0x2042A461) + (v21 & STACK[0x17D8] & 0xD73D139C ^ 0x40180005) - 1) ^ 0x605AA465) >> LODWORD(STACK[0x1838]) >> LODWORD(STACK[0x1850])) ^ ((v21 & STACK[0x17A0]) << v7);
  v26 = v25 - 1926392729 - ((2 * v25) & 0x1A5B28CE);
  v27 = ((v24 - ((2 * v24) & 0xCF) + 103) ^ LODWORD(STACK[0x172C]));
  v28 = 373 * v27 + 2091215152;
  v29 = (2 * (v28 & 0x41778 ^ 0xC1001589)) & 0x480 ^ v28 & 0x41778 ^ 0xC1001589 ^ ((2 * (v28 & 0x41778 ^ 0xC1001589)) ^ 0x2002B12) & (v28 ^ 0x425C02F1);
  v30 = (2 * (v28 ^ 0x425C02F1)) & 0x41001588 ^ 0x41001489 ^ ((2 * (v28 ^ 0x425C02F1)) ^ 0x2002B12) & (v28 ^ 0x425C02F1);
  v31 = (4 * v29) & 0xC1001588 ^ v29 ^ ((4 * v29) ^ 0x4005624) & v30;
  v32 = (4 * v30) & 0xC1001588 ^ 0xC1000189 ^ ((4 * v30) ^ 0x4005624) & v30;
  v33 = (16 * v31) & 0xC1001580 ^ v31 ^ ((16 * v31) ^ 0x10001890) & v32;
  v34 = (16 * v32) & 0xC1001580 ^ 0xC1000509 ^ ((16 * v32) ^ 0x10015890) & v32;
  v35 = v33 ^ (v33 << 8) & 0xC1001500 ^ ((v33 << 8) ^ 0x110900) & v34 ^ 0x580;
  v36 = v28 ^ (2
             * ((v35 << 16) & 0x41000000 ^ v35 ^ ((v35 << 16) ^ 0x15890000) & ((v34 << 8) & 0xC1000000 ^ 0x41000000 ^ ((v34 << 8) ^ 0x150000) & v34))) ^ 0x8E71A80D;
  v37 = 0x3EE4F99CBEA615
      * (((v36 ^ 0xB4F334BA609A450) - 0xB4F334BA609A450) ^ ((v36 ^ 0x4AF22838BF3970B1) - 0x4AF22838BF3970B1) ^ ((v36 ^ 0x41BD1B73941D4086) - 0x41BD1B73941D4086))
      + 0x397BBBF8D89C4968;
  v38 = (v37 ^ 0xE6422A8A2A892C63) & (2 * (v37 & 0xF768421032CDAD0BLL)) ^ v37 & 0xF768421032CDAD0BLL;
  v39 = ((2 * (v37 ^ 0xE2022E8A2A9A3673)) ^ 0x2AD4D93430AF36F0) & (v37 ^ 0xE2022E8A2A9A3673) ^ (2 * (v37 ^ 0xE2022E8A2A9A3673)) & 0x156A6C9A18579B78;
  v40 = v39 ^ 0x152A248A08508908;
  v41 = (v39 ^ 0x40080010071070) & (4 * v38) ^ v38;
  v42 = ((4 * v40) ^ 0x55A9B268615E6DE0) & v40 ^ (4 * v40) & 0x156A6C9A18579B78;
  v43 = (v42 ^ 0x1528200800560960) & (16 * v41) ^ v41;
  v44 = ((16 * (v42 ^ 0x424C9218019218)) ^ 0x56A6C9A18579B780) & (v42 ^ 0x424C9218019218) ^ (16
                                                                                                 * (v42 ^ 0x424C9218019218)) & 0x156A6C9A18579B70;
  v45 = (v44 ^ 0x1422488000519300) & (v43 << 8) ^ v43;
  v46 = (((v44 ^ 0x148241A18060878) << 8) ^ 0x6A6C9A18579B7800) & (v44 ^ 0x148241A18060878) ^ ((v44 ^ 0x148241A18060878) << 8) & 0x156A6C9A18579B00;
  v47 = v45 ^ 0x156A6C9A18579B78 ^ (v46 ^ 0x68081810130000) & (v45 << 16);
  v48 = v37 ^ (2
             * ((v47 << 32) & 0x156A6C9A00000000 ^ v47 ^ ((v47 << 32) ^ 0x18579B7800000000) & (((v46 ^ 0x1502648208448378) << 16) & 0x156A6C9A00000000 ^ 0x1160648800000000 ^ (((v46 ^ 0x1502648208448378) << 16) ^ 0x6C9A185700000000) & (v46 ^ 0x1502648208448378))));
  v49 = ((v48 ^ 0x592BC7013BAF3CF6) - 0x6B541BC2E902F94BLL) ^ ((v48 ^ 0xAB14C3B3C75225BBLL) + 0x6694E08FEA001FFALL);
  LODWORD(v49) = __CFADD__(1042 * (v49 ^ ((v48 ^ 0xF078FA6FE9F82B6) - 0x3D7853652C32470BLL)), 0xB0638C6FEC0DB8ECLL)
               + (((v49 ^ ((v48 ^ 0xF078FA6FE9F82B6) - 0x3D7853652C32470BLL)) * (unsigned __int128)0x412uLL) >> 64)
               + 1042
               * ((__CFADD__(v48 ^ 0x592BC7013BAF3CF6, 0x94ABE43D16FD06B5) - 1) ^ (__CFADD__(v48 ^ 0xAB14C3B3C75225BBLL, 0x6694E08FEA001FFALL)- 1) ^ (__CFADD__(v48 ^ 0xF078FA6FE9F82B6, 0xC287AC9AD3CDB8F5)- 1))+ 875624949;
  LODWORD(v46) = (v49 ^ 0xEB8E6917) & (2 * (v49 & 0xCBCF0956)) ^ v49 & 0xCBCF0956;
  LODWORD(v48) = ((2 * (v49 ^ 0xFC9C6B3B)) ^ 0x6EA6C4DA) & (v49 ^ 0xFC9C6B3B) ^ (2 * (v49 ^ 0xFC9C6B3B)) & 0x3753626C;
  LODWORD(v40) = v48 ^ 0x11512225;
  LODWORD(v48) = (v48 ^ 0x2601404C) & (4 * v46) ^ v46;
  LODWORD(v46) = ((4 * v40) ^ 0xDD4D89B4) & v40 ^ (4 * v40) & 0x3753626C;
  LODWORD(v48) = (v46 ^ 0x15410020) & (16 * v48) ^ v48;
  LODWORD(v46) = ((16 * (v46 ^ 0x22126249)) ^ 0x753626D0) & (v46 ^ 0x22126249) ^ (16 * (v46 ^ 0x22126249)) & 0x37536260;
  LODWORD(v48) = v48 ^ 0x3753626D ^ (v46 ^ 0x3512222D) & ((_DWORD)v48 << 8);
  LODWORD(v46) = (((_DWORD)v48 << 16) ^ 0x626D0000) & (((v46 ^ 0x241402D) << 8) & 0x37530000 ^ 0x24110000 ^ (((v46 ^ 0x241402D) << 8) ^ 0x53620000) & (v46 ^ 0x241402D));
  LODWORD(v40) = ((_DWORD)v48 << 16) & 0x37530000 ^ v48;
  LODWORD(v48) = LODWORD(STACK[0x1820]) ^ LODWORD(STACK[0x17BC]);
  *((_DWORD *)&STACK[0x18D0] + (v49 ^ (2 * (v40 ^ v46)) ^ 0xE1EBCD8C)) = v48 ^ v26;
  v50 = (((v8 ^ 0xDA35F688) + 633997688) ^ ((v8 ^ 0x835E6090) + 2090966896) ^ ((v8 ^ 0xD446027F) + 733609345))
      - 420213528;
  LODWORD(v40) = (v50 ^ 0x95B53775) & (2 * (v50 & 0xA6398780)) ^ v50 & 0xA6398780;
  LODWORD(v46) = ((2 * (v50 ^ 0x95B43075)) ^ 0x671B6FEA) & (v50 ^ 0x95B43075) ^ (2 * (v50 ^ 0x95B43075)) & 0x338DB7F4;
  v51 = v46 ^ 0x10849015;
  LODWORD(v46) = (v46 ^ 0x2108A615) & (4 * v40) ^ v40;
  LODWORD(v40) = ((4 * v51) ^ 0xCE36DFD4) & v51 ^ (4 * v51) & 0x338DB7F4;
  LODWORD(v46) = (v40 ^ 0x20497C1) & (16 * v46) ^ v46;
  LODWORD(v40) = ((16 * (v40 ^ 0x31892021)) ^ 0x38DB7F50) & (v40 ^ 0x31892021) ^ (16 * (v40 ^ 0x31892021)) & 0x338DB7F0;
  LODWORD(v46) = v46 ^ 0x338DB7F5 ^ (v40 ^ 0x30893700) & ((_DWORD)v46 << 8);
  v52 = v50 ^ (2
             * (((_DWORD)v46 << 16) & 0x338D0000 ^ v46 ^ (((_DWORD)v46 << 16) ^ 0x37F50000) & (((v40 ^ 0x30480A5) << 8) & 0x338D0000 ^ 0x32080000 ^ (((v40 ^ 0x30480A5) << 8) ^ 0x8DB70000) & (v40 ^ 0x30480A5)))) ^ 0x2B057C0D;
  LODWORD(v46) = 373 * (a7 + v27) + 796776932;
  LODWORD(v40) = (v46 ^ 0xCA25DF) & (2 * (v46 & 0x82261C)) ^ v46 & 0x82261C;
  v53 = ((2 * (v46 ^ 0xCA21FF)) ^ 0xA0900FC6) & (v46 ^ 0xCA21FF) ^ (2 * (v46 ^ 0xCA21FF)) & 0x504807E2;
  v54 = v53 ^ 0x50480021;
  v55 = (v53 ^ 0x504000C0) & (4 * v40) ^ v40;
  LODWORD(v40) = ((4 * v54) ^ 0x41201F8C) & v54 ^ (4 * v54) & 0xD04807E0;
  v56 = (v40 ^ 0x40000783) & (16 * v55) ^ v55;
  LODWORD(v40) = ((16 * (v40 ^ 0x90480063)) ^ 0x4807E30) & (v40 ^ 0x90480063) ^ (16 * (v40 ^ 0x90480063)) & 0xD04807E0;
  v57 = v40 ^ 0xD04801C3;
  LODWORD(v40) = v56 ^ 0xD04807E3 ^ (v40 ^ 0x600) & (v56 << 8);
  v58 = v46 ^ 0xFDBFBDBD ^ (2
                                        * (((_DWORD)v40 << 16) & 0x50480000 ^ v40 ^ (((_DWORD)v40 << 16) ^ 0x7E30000) & ((v57 << 8) & 0xD0480000 ^ 0x10480000 ^ ((v57 << 8) ^ 0x48070000) & v57)));
  v59 = v48 ^ (*(unsigned __int8 *)(STACK[0x17F8] + v10)
             - 1926392729
             - ((2 * *(unsigned __int8 *)(STACK[0x17F8] + v10)) & 0xCE));
  v60 = 0x3EE4F99CBEA615
      * (((v58 ^ 0x78945418BC71BD9ALL) - 0x78945418BC71BD9ALL) ^ ((v58 ^ 0xCC503EF57A216C43) + 0x33AFC10A85DE93BDLL) ^ ((v58 ^ 0xB4C46AED4B7D45BELL) + 0x4B3B9512B482BA42))
      + 0x6700118F43A3F4E9;
  v61 = (v60 ^ 0xEDFBCB7DF7F5E181) & (2 * (v60 & 0xC9E3EC79C7C6018ALL)) ^ v60 & 0xC9E3EC79C7C6018ALL;
  v62 = ((2 * (v60 ^ 0x7F384BDDF475E281)) ^ 0x6DB74F486767C616) & (v60 ^ 0x7F384BDDF475E281) ^ (2 * (v60 ^ 0x7F384BDDF475E281)) & 0xB6DBA7A433B3E30ALL;
  v63 = v62 ^ 0x9248A0A410902109;
  v64 = (v62 ^ 0x2493030023200200) & (4 * v61) ^ v61;
  v65 = ((4 * v63) ^ 0xDB6E9E90CECF8C2CLL) & v63 ^ (4 * v63) & 0xB6DBA7A433B3E308;
  v66 = (v65 ^ 0x924A868002838000) & (16 * v64) ^ v64;
  v67 = ((16 * (v65 ^ 0x2491212431306303)) ^ 0x6DBA7A433B3E30B0) & (v65 ^ 0x2491212431306303) ^ (16 * (v65 ^ 0x2491212431306303)) & 0xB6DBA7A433B3E300;
  v68 = (v67 ^ 0x249A220033322000) & (v66 << 8) ^ v66;
  v69 = (((v67 ^ 0x924185A40081C30BLL) << 8) ^ 0xDBA7A433B3E30B00) & (v67 ^ 0x924185A40081C30BLL) ^ ((v67 ^ 0x924185A40081C30BLL) << 8) & 0xB6DBA7A433B3E300;
  v70 = v68 ^ 0xB6DBA7A433B3E30BLL ^ (v69 ^ 0x9283A42033A30000) & (v68 << 16);
  v71 = v60 ^ (2
             * ((v70 << 32) & 0x36DBA7A400000000 ^ v70 ^ ((v70 << 32) ^ 0x33B3E30B00000000) & (((v69 ^ 0x245803840010E00BLL) << 16) & 0x36DBA7A400000000 ^ 0x105B840400000000 ^ (((v69 ^ 0x245803840010E00BLL) << 16) ^ 0x27A433B300000000) & (v69 ^ 0x245803840010E00BLL))));
  v72 = ((v71 ^ 0x55CB5CCDEC7C40FELL) - 0x61F74220ECE80DDALL) ^ ((v71 ^ 0xE8DF22387DDA2BF6) + 0x231CC32A82B1992ELL);
  LODWORD(v71) = __CFADD__(1042 * (v72 ^ ((v71 ^ 0x7C679BC43107AC94) - 0x485B85293193E1B0)), 0x7F8F280419EEA0F0)
               + (((v72 ^ ((v71 ^ 0x7C679BC43107AC94) - 0x485B85293193E1B0)) * (unsigned __int128)0x412uLL) >> 64)
               + 1042
               * ((__CFADD__(v71 ^ 0x55CB5CCDEC7C40FELL, 0x9E08BDDF1317F226) - 1) ^ (__CFADD__(v71 ^ 0xE8DF22387DDA2BF6, 0x231CC32A82B1992ELL)- 1) ^ (__CFADD__(v71 ^ 0x7C679BC43107AC94, 0xB7A47AD6CE6C1E50)- 1))+ 1975138217;
  LODWORD(v69) = (v71 ^ 0xC835CA38) & (2 * (v71 & 0x8A45CC3D)) ^ v71 & 0x8A45CC3D;
  LODWORD(v72) = ((2 * (v71 ^ 0xD835CA5A)) ^ 0xA4E00CCE) & (v71 ^ 0xD835CA5A) ^ (2 * (v71 ^ 0xD835CA5A)) & 0x52700666;
  LODWORD(v63) = v72 ^ 0x52100221;
  LODWORD(v72) = (v72 ^ 0x200245) & (4 * v69) ^ v69;
  LODWORD(v69) = ((4 * v63) ^ 0x49C0199C) & v63 ^ (4 * v63) & 0x52700664;
  LODWORD(v72) = (v69 ^ 0x40400003) & (16 * v72) ^ v72;
  LODWORD(v69) = ((16 * (v69 ^ 0x12300663)) ^ 0x27006670) & (v69 ^ 0x12300663) ^ (16 * (v69 ^ 0x12300663)) & 0x52700660;
  LODWORD(v72) = v72 ^ 0x52700667 ^ (v69 ^ 0x2000607) & ((_DWORD)v72 << 8);
  *((_DWORD *)&STACK[0x18D0]
  + (v71 ^ (2
                        * (((_DWORD)v72 << 16) & 0x52700000 ^ v72 ^ (((_DWORD)v72 << 16) ^ 0x6670000) & (((v69 ^ 0x50700007) << 8) & 0x52700000 ^ 0x2700000 ^ (((v69 ^ 0x50700007) << 8) ^ 0x70060000) & (v69 ^ 0x50700007)))) ^ 0x2A65C0F3)) = v59;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((86 * (v52 == -1926392473)) ^ a5)) - 12))();
}

uint64_t sub_10027E788()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 8))();
}

uint64_t sub_10027E948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  char v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  int v245;
  unsigned int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  unsigned int v252;
  int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  int v303;
  unsigned int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  int v357;
  int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  int v386;
  int v387;
  int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  int v394;
  int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  int v399;
  unsigned int v400;
  int v401;
  unsigned int v402;
  int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  unsigned int v416;
  unint64_t v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  unsigned int v436;
  int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  int v444;
  unsigned int v445;
  int v446;
  unsigned int v447;
  unsigned int v448;

  v10 = LODWORD(STACK[0x1690]) ^ LODWORD(STACK[0x1780]);
  v11 = LODWORD(STACK[0x161C]) ^ LODWORD(STACK[0x1718]);
  v12 = LODWORD(STACK[0x1610]) ^ LODWORD(STACK[0x1688]);
  v13 = LODWORD(STACK[0x15E0]) - LODWORD(STACK[0x160C]);
  v14 = LODWORD(STACK[0x1560]) ^ LODWORD(STACK[0x1678]);
  v15 = LODWORD(STACK[0x1530]) ^ LODWORD(STACK[0x1658]);
  v16 = LODWORD(STACK[0x14B8]) ^ LODWORD(STACK[0x1638]);
  v17 = STACK[0x1644];
  LODWORD(STACK[0x1530]) = LODWORD(STACK[0x1644]) ^ LODWORD(STACK[0x1510]) ^ (LODWORD(STACK[0x15C0])
                                                                            - LODWORD(STACK[0x15DC]));
  v18 = LODWORD(STACK[0x1790]) ^ 0x1E65352D ^ v13;
  LODWORD(STACK[0x14E4]) = a8;
  v19 = (a8 + 26212539) & 0xFE6FF7DF;
  LODWORD(STACK[0x1690]) = v19;
  v20 = (v19 + 1847157072) ^ v9;
  v21 = ((v12 ^ 0x4457C93E) - 742482650) ^ ((v12 ^ 0xF764D771) + 1619886955) ^ ((v12 ^ 0x560821CC) - 1042188840);
  v22 = (((v11 ^ 0x4121600C) - 1210194124) ^ ((v11 ^ 0xE07A50A) - 117759434) ^ ((v11 ^ 0xCB0829A1) + 1039445663))
      - 5385089;
  v23 = (v22 ^ 0xCBCD4899) & (2 * (v22 & 0xEB0D8A9D)) ^ v22 & 0xEB0D8A9D;
  v24 = ((2 * (v22 ^ 0x9DC4CB1)) ^ 0xC5A38C58) & (v22 ^ 0x9DC4CB1) ^ (2 * (v22 ^ 0x9DC4CB1)) & 0xE2D1C62C;
  v25 = (v24 ^ 0xC2000408) & (4 * v23) ^ v23;
  v26 = ((4 * (v24 ^ 0x22504224)) ^ 0x8B4718B0) & (v24 ^ 0x22504224) ^ (4 * (v24 ^ 0x22504224)) & 0xE2D1C62C;
  v27 = (v26 ^ 0x8241002C) & (16 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x6090C60C)) ^ 0x2D1C62C0) & (v26 ^ 0x6090C60C) ^ (16 * (v26 ^ 0x6090C60C)) & 0xE2D1C620;
  v29 = v27 ^ 0xE2D1C62C ^ (v28 ^ 0x20104200) & (v27 << 8);
  v30 = v22 ^ (2
             * ((v29 << 16) & 0x62D10000 ^ v29 ^ ((v29 << 16) ^ 0x462C0000) & (((v28 ^ 0xC2C1842C) << 8) & 0xE2D10000 ^ 0x22110000 ^ (((v28 ^ 0xC2C1842C) << 8) ^ 0x51C60000) & (v28 ^ 0xC2C1842C))));
  v31 = (((v8 ^ 0xEA9B9961) + 358901407) ^ ((v8 ^ 0x94861FEE) + 1803149330) ^ ((v8 ^ 0xF33012E8) + 214953240))
      + 303603938;
  v32 = (v31 ^ 0xE1B98057) & (2 * (v31 & 0xF021D246)) ^ v31 & 0xF021D246;
  v33 = ((2 * (v31 ^ 0xA1BB205F)) ^ 0xA335E432) & (v31 ^ 0xA1BB205F) ^ (2 * (v31 ^ 0xA1BB205F)) & 0x519AF218;
  v34 = (v33 ^ 0x1100C011) & (4 * v32) ^ v32;
  v35 = ((4 * (v33 ^ 0x508A1209)) ^ 0x466BC864) & (v33 ^ 0x508A1209) ^ (4 * (v33 ^ 0x508A1209)) & 0x519AF218;
  v36 = (v35 ^ 0x400AC000) & (16 * v34) ^ v34;
  v37 = ((16 * (v35 ^ 0x11903219)) ^ 0x19AF2190) & (v35 ^ 0x11903219) ^ (16 * (v35 ^ 0x11903219)) & 0x519AF210;
  v38 = v36 ^ 0x519AF219 ^ (v37 ^ 0x118A2000) & (v36 << 8);
  v39 = v31 ^ (2
             * ((v38 << 16) & 0x519A0000 ^ v38 ^ ((v38 << 16) ^ 0x72190000) & (((v37 ^ 0x4010D209) << 8) & 0x519A0000 ^ 0x41080000 ^ (((v37 ^ 0x4010D209) << 8) ^ 0x1AF20000) & (v37 ^ 0x4010D209))));
  v40 = (((LODWORD(STACK[0x16B0]) ^ 0x580A5D96) + 1581705665) ^ ((LODWORD(STACK[0x16B0]) ^ 0xF74EBADA) - 251523443) ^ ((LODWORD(STACK[0x16B0]) ^ 0xDBDA3882) - 577336107))
      - 1653765463;
  v41 = (v40 ^ 0x8867C761) & (2 * (v40 & 0x8177C465)) ^ v40 & 0x8177C465;
  v42 = ((2 * (v40 ^ 0x888FCF29)) ^ 0x13F01698) & (v40 ^ 0x888FCF29) ^ (2 * (v40 ^ 0x888FCF29)) & 0x9F80B4C;
  v43 = (v42 ^ 0x1F00208) & (4 * v41) ^ v41;
  v44 = ((4 * (v42 ^ 0x8080944)) ^ 0x27E02D30) & (v42 ^ 0x8080944) ^ (4 * (v42 ^ 0x8080944)) & 0x9F80B4C;
  v45 = (v44 ^ 0x1E0090C) & (16 * v43) ^ v43;
  v46 = ((16 * (v44 ^ 0x818024C)) ^ 0x9F80B4C0) & (v44 ^ 0x818024C) ^ (16 * (v44 ^ 0x818024C)) & 0x9F80B40;
  v47 = v45 ^ 0x9F80B4C ^ (v46 ^ 0x980000C) & (v45 << 8);
  v48 = v40 ^ (2
             * ((v47 << 16) & 0x9F80000 ^ v47 ^ ((v47 << 16) ^ 0xB4C0000) & (((v46 ^ 0x780B0C) << 8) & 0x9F80000 ^ (((v46 ^ 0x780B0C) << 8) ^ 0x780B0000) & (v46 ^ 0x780B0C) ^ 0x1F00000)));
  v49 = (((LODWORD(STACK[0x1778]) ^ 0x7A1A8A25) - 624988658) ^ ((LODWORD(STACK[0x1778]) ^ 0x8DF6DE75) + 760429150) ^ ((LODWORD(STACK[0x1778]) ^ 0x259BDBE0) - 2059518007))
      + 149471041;
  v50 = (v49 ^ 0xEE0A9D7C) & (2 * (v49 & 0x8EA0017E)) ^ v49 & 0x8EA0017E;
  v51 = ((2 * (v49 ^ 0xEB0A9D74)) ^ 0xCB553814) & (v49 ^ 0xEB0A9D74) ^ (2 * (v49 ^ 0xEB0A9D74)) & 0x65AA9C0A;
  v52 = (v51 ^ 0x41000800) & (4 * v50) ^ v50;
  v53 = ((4 * (v51 ^ 0x24AA840A)) ^ 0x96AA7028) & (v51 ^ 0x24AA840A) ^ (4 * (v51 ^ 0x24AA840A)) & 0x65AA9C08;
  v54 = (v53 ^ 0x4AA1002) & (16 * v52) ^ v52;
  v55 = ((16 * (v53 ^ 0x61008C02)) ^ 0x5AA9C0A0) & (v53 ^ 0x61008C02) ^ (16 * (v53 ^ 0x61008C02)) & 0x65AA9C00;
  v56 = v54 ^ 0x65AA9C0A ^ (v55 ^ 0x40A8800A) & (v54 << 8);
  v57 = v49 ^ (2
             * ((v56 << 16) & 0x65AA0000 ^ v56 ^ ((v56 << 16) ^ 0x1C0A0000) & (((v55 ^ 0x25021C0A) << 8) & 0x65AA0000 ^ 0x45220000 ^ (((v55 ^ 0x25021C0A) << 8) ^ 0xAA9C0000) & (v55 ^ 0x25021C0A))));
  v58 = v21 - 386177234 - ((2 * (v21 + 1540215495)) & 0x1A5B28CE);
  v59 = STACK[0x1828];
  v60 = STACK[0x1758];
  v61 = LODWORD(STACK[0x1698]) ^ 0x5BC034BF ^ ((v60 ^ v59) - 1926392729 - ((2 * (v60 ^ v59)) & 0x1A5B28CE));
  v62 = (((v15 ^ 0xAF9C291E) + 24627807) ^ ((v15 ^ 0xEEEEDDDC) + 1074085533) ^ ((v15 ^ 0x9D4B7C1A) + 866164571))
      + 361403644;
  LODWORD(STACK[0x1408]) = v62;
  v63 = (((v16 ^ 0x2EEF25F3) + 955650985) ^ ((v16 ^ 0xDF9B36DF) - 914227067) ^ ((v16 ^ 0x95BF4EEF) - 2086242123))
      + 2026229517;
  LODWORD(STACK[0x1560]) = v63;
  v64 = LODWORD(STACK[0x1760]) ^ 0xDD3E875F;
  LODWORD(STACK[0x1658]) = v64;
  v65 = (v61 - 1926392729 - ((2 * v61) & 0x1A5B28CE)) ^ v62 ^ v64 ^ v63;
  v66 = (v65 - 1926392729 - ((2 * v65) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1490]);
  v67 = (v66 - 1926392729 - ((2 * v66) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16F8]);
  v68 = (v67 - 1926392729 - ((2 * v67) & 0x1A5B28CE)) ^ LODWORD(STACK[0x173C]);
  v69 = (v68 - 1926392729 - ((2 * v68) & 0x1A5B28CE)) ^ STACK[0x1840];
  v70 = (v69 - 1926392729 - ((2 * v69) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15CC]);
  LODWORD(STACK[0x16B0]) = v20;
  v71 = v20 ^ (v70 - 1926392729 - ((2 * v70) & 0x1A5B28CE));
  v72 = STACK[0x1120];
  v73 = STACK[0x1680];
  v74 = ((LODWORD(STACK[0x1120]) ^ LODWORD(STACK[0x17EC]))
       - 1926392729
       - ((2 * (LODWORD(STACK[0x1120]) ^ LODWORD(STACK[0x17EC]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1680]);
  v75 = LODWORD(STACK[0x1708]) ^ (v74 - 1926392729 - ((2 * v74) & 0x1A5B28CE));
  v76 = (v75 - 1926392729 - ((2 * v75) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16D0]);
  v77 = (((v14 ^ 0x4CA3A406) - 16123510) ^ ((v14 ^ 0x6E415180) - 571798512) ^ ((v14 ^ 0xE39AC391) + 1345363487))
      + 1139811447;
  LODWORD(STACK[0x1470]) = v77;
  v78 = (v76 - 1926392729 - ((2 * v76) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1570]) ^ v77;
  v79 = LODWORD(STACK[0x16E0]) ^ 0x95FB6C97;
  LODWORD(STACK[0x14B8]) = v79;
  v80 = (v78 - 1926392729 - ((2 * v78) & 0x1A5B28CE)) ^ v79;
  v81 = (v80 - 1926392729 - ((2 * v80) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1460]);
  v82 = (v81 - 1926392729 - ((2 * v81) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1590]);
  v83 = (v82 - 1926392729 - ((2 * v82) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1554]);
  v84 = (v83 - 1926392729 - ((2 * v83) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1508]);
  v85 = (v84 - 1926392729 - ((2 * v84) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1650]);
  v86 = LODWORD(STACK[0x1138]) ^ 0x51144532 ^ (v85 - 1926392729 - ((2 * v85) & 0x1A5B28CE));
  v87 = v86 - 1926392729 - ((2 * v86) & 0x1A5B28CE);
  v88 = (((LODWORD(STACK[0x1740]) ^ 0xAC63433D) - 2123707768) ^ ((LODWORD(STACK[0x1740]) ^ 0x8E01DB0B) - 1559735630) ^ ((LODWORD(STACK[0x1740]) ^ 0x7DB97A14) + 1353773999))
      - 728653907;
  v89 = (v88 ^ 0xEDA31E8A) & (2 * (v88 & 0xED8B5F2C)) ^ v88 & 0xED8B5F2C;
  v90 = ((2 * (v88 ^ 0x3CA3B692)) ^ 0xA251D37C) & (v88 ^ 0x3CA3B692) ^ (2 * (v88 ^ 0x3CA3B692)) & 0xD128E9BE;
  v91 = (v90 ^ 0x8100C132) & (4 * v89) ^ v89;
  v92 = ((4 * (v90 ^ 0x51282882)) ^ 0x44A3A6F8) & (v90 ^ 0x51282882) ^ (4 * (v90 ^ 0x51282882)) & 0xD128E9BC;
  v93 = (v92 ^ 0x4020A0A0) & (16 * v91) ^ v91;
  v94 = ((16 * (v92 ^ 0x91084906)) ^ 0x128E9BE0) & (v92 ^ 0x91084906) ^ (16 * (v92 ^ 0x91084906)) & 0xD128E9B0;
  v95 = v93 ^ 0xD128E9BE ^ (v94 ^ 0x1008891E) & (v93 << 8);
  v96 = v88 ^ (2
             * ((v95 << 16) & 0x51280000 ^ v95 ^ ((v95 << 16) ^ 0x69BE0000) & (((v94 ^ 0xC120601E) << 8) & 0x51280000 ^ 0x51000000 ^ (((v94 ^ 0xC120601E) << 8) ^ 0x28E90000) & (v94 ^ 0xC120601E))));
  v97 = ((v87 ^ LODWORD(STACK[0x1578])) - 1926392729 - ((2 * (v87 ^ LODWORD(STACK[0x1578]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1400]);
  v98 = (v71 - 1926392729 - ((2 * v71) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1648]);
  v99 = (v98 - 1926392729 - ((2 * v98) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1434]);
  v100 = (v99 - 1926392729 - ((2 * v99) & 0x1A5B28CE)) ^ v17;
  v101 = (v100 - 1926392729 - ((2 * v100) & 0x1A5B28CE)) ^ LODWORD(STACK[0x159C]);
  v102 = (v97 - 1926392729 - ((2 * v97) & 0x1A5B28CE)) ^ STACK[0x16B8];
  v10 ^= 0xE04A093F;
  LODWORD(STACK[0x1638]) = v10;
  v103 = (v101 - 1926392729 - ((2 * v101) & 0x1A5B28CE)) ^ v10;
  v104 = v103 - 1926392729 - ((2 * v103) & 0x1A5B28CE);
  STACK[0x1178] = v18;
  v105 = v18 ^ (v102 - 1926392729 - ((2 * v102) & 0x1A5B28CE));
  v106 = (v105 - 1926392729 - ((2 * v105) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1544]);
  v107 = (v106 - 1926392729 - ((2 * v106) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14B0]);
  LODWORD(STACK[0x144C]) = v58;
  v108 = (v107 - 1926392729 - ((2 * v107) & 0x1A5B28CE)) ^ v58;
  v109 = (v108 ^ 0xF7A44364) & (v48 ^ 0x48EA4B1F) ^ v108 & 0xC8FD99E2;
  v110 = (v109 & 0x6F12F9 ^ 0x671299) + (v109 ^ 0xC0988162) - ((v109 ^ 0xC0988162) & 0x6F12F9);
  v111 = STACK[0x14F0];
  v112 = v72 & 0x4B0ED2FC ^ 0x4A029048 ^ (LODWORD(STACK[0x14F0]) ^ 0xFA88ADF7) & (v72 ^ 0x8D2D9467);
  v30 ^= 0x278392A2u;
  LODWORD(STACK[0x1800]) = v30;
  v113 = (v104 ^ v30) - 1926392729 - ((2 * (v104 ^ v30)) & 0x1A5B28CE);
  v114 = v108 ^ (v110 >> 1);
  v115 = v57;
  LODWORD(STACK[0x14A4]) = v57;
  v116 = v114 & 0xD9667816 ^ 0xD1040810 ^ (v114 ^ 0xF78D8A19) & (v57 ^ 0x9487417C);
  v117 = STACK[0x17CC];
  v118 = STACK[0x17CC];
  LODWORD(STACK[0x17CC]) = STACK[0x17CC];
  v119 = v114 & 0x60298E69 ^ 0x88248 ^ (v114 ^ 0xF78D8A19) & (v117 ^ 0xED041A0E);
  v120 = v113 ^ LODWORD(STACK[0x13B8]);
  v121 = v120 & 0xA0CD77B2 ^ 0xA0C90592 ^ (v120 ^ 0xFD7032E9) & (v111 ^ 0x114B08B9);
  v122 = 1263091981 - (v121 | 0x4B49410D) + (v121 | 0xB4B6BEF2);
  v123 = STACK[0x1818];
  v124 = STACK[0x1818] & 0xE ^ 6;
  v125 = STACK[0x1818] & 0x11 ^ 1;
  LODWORD(STACK[0x1498]) = v124;
  LODWORD(STACK[0x1488]) = v125;
  v126 = STACK[0x1808];
  v127 = STACK[0x1808] & 0xE ^ 6;
  LODWORD(STACK[0x17B0]) = v127;
  v128 = v126 & 0x11 ^ 1;
  LODWORD(STACK[0x1688]) = v128;
  LODWORD(STACK[0x1718]) = (v116 << v124 << v125) ^ 0x8D2D9467 ^ (((((2 * v119) & 0x867BAF56) - v119 + 1019357268) ^ 0x5CC32015) >> v128 >> v127);
  v129 = v120 ^ (v122 >> 1);
  v130 = v129 & 0x1CD2CCA1 ^ 0x5EAE286B ^ (v129 ^ 0xA76FF609) & (v118 ^ 0x91FF58C6);
  LODWORD(STACK[0x1798]) = v39;
  v131 = v129 & 0x1819123F ^ 0x10011021 ^ (v129 ^ 0xA76FF609) & (v39 ^ 0xEB3D244B);
  v132 = v96 ^ 0x40A71837;
  v133 = v96 ^ 0xBF58E7C8;
  v134 = (v96 ^ 0x40A71837) & 0x19 ^ 1;
  LODWORD(STACK[0x15E0]) = v134;
  LODWORD(STACK[0x15C0]) = (v96 ^ 0xBF58E7C8) & 6;
  v135 = (((1784763809 - (v131 | 0x6A6155A1) + (v131 | 0x959EAA5E)) ^ 0x8596A876) << v134 << ((v96 ^ 0xC8) & 6)) | (((v130 - ((2 * v130) & 0x5760E95A) + 732984493) ^ 0x715C98C7) >> (~(_BYTE)v126 & 6) >> (v126 & 0x19 ^ 1));
  LODWORD(STACK[0x13D0]) = v135 - 1926392729 - ((2 * v135) & 0x1A5B28CE);
  v136 = (v48 ^ 0xE1C02CEA) & (v59 ^ 0x8D2D9467) ^ v59 & 0x61D7FE17;
  v137 = (((v136 & 0xDC047590 ^ 0x9C003191) + (v136 & 0x23FB8A6E) - 1) >> 1) ^ 0x4E82D2CB;
  v138 = (v137 - 1926392729 - ((2 * v137) & 0x1A5B28CE)) ^ v59;
  v139 = v115 ^ 0x4DE1396A;
  LOBYTE(v14) = STACK[0x1788];
  v140 = STACK[0x17C0];
  v141 = STACK[0x17A8];
  v142 = (((2089633024 - (v138 & v139 ^ 0x8E19A304 | 0x7C8D4500) + (v138 & v139 ^ 0x8E19A304 | 0x8372BAFF)) ^ 0xD6B19FB) << (v123 & 0xB ^ 3) << (v14 & 0x14 ^ 4)) ^ ((v138 & STACK[0x17C0]) >> v141);
  LODWORD(STACK[0x1820]) = v142 - 1926392729 - ((2 * v142) & 0x1A5B28CE);
  v143 = STACK[0xE2C];
  v144 = (v48 ^ 0x8017D2FD) & (LODWORD(STACK[0xE2C]) ^ 0x8C4ABEE0);
  LODWORD(STACK[0x1778]) = v48 ^ 0x8017D2FD;
  v145 = ((((v144 ^ v48 & 0x1672A87) & 0x7A6E9821 ^ 0x7A489021)
         + (v144 ^ v48 & 0x1672A87 ^ 0x1262A80)
         - ((v144 ^ v48 & 0x1672A87 ^ 0x1262A80) & 0x7A6E9821)) >> 1) ^ 0x3DA7D812;
  v146 = (v145 - 1926392729 - ((2 * v145) & 0x1A5B28CE)) ^ v143;
  v147 = v126 & 9 ^ 1;
  LODWORD(STACK[0x1740]) = v147;
  v148 = v126 & 0x16 ^ 6;
  LODWORD(STACK[0x1780]) = v148;
  v149 = (((-1220468755 - (v146 & v140 ^ 0x6001886 | 0xB7411FED) + (v146 & v140 ^ 0x6001886 | 0x48BEE012)) ^ 0x4EBEF894) >> v148 >> v147) ^ (((((2 * (v146 & v139 ^ 0xA2040019)) | 0xA8EF5ADC) - (v146 & v139 ^ 0xA2040019) - 1417129326) ^ 0xF673AD77) << (v132 & 0x18) << (v133 & 7));
  LODWORD(STACK[0x17BC]) = v149 - 1926392729 - ((2 * v149) & 0x1A5B28CE);
  v150 = ((v112 - ((2 * v112) & 0x32F97C6C) - 1719878090) >> 1) ^ 0x6D395F0D;
  v151 = (v150 - 1926392729 - ((2 * v150) & 0x1A5B28CE)) ^ v72;
  v152 = STACK[0x1584];
  v153 = (v111 ^ 0xB1867F0B) & (LODWORD(STACK[0x1584]) ^ 0x53ABE3DF) ^ v111 & 0xDE8677B8;
  v154 = (v153 & 0x883C2D5 ^ 0x8018045) + (v153 ^ 0x448257B0) - ((v153 ^ 0x448257B0) & 0x883C2D5);
  v155 = v39 ^ 0xF3243674;
  v156 = ~v123 & 7;
  LODWORD(STACK[0x160C]) = v156;
  LOBYTE(v39) = v14 & 0x18;
  v157 = STACK[0x17D8];
  v158 = ((v155 & v151) << v156 << (v14 & 0x18)) ^ ((v151 & STACK[0x17D8]) >> v141);
  v159 = (((v154 >> 1) ^ 0x6E43F136) - 1926392729 - ((2 * ((v154 >> 1) ^ 0x6E43F136)) & 0x1A5B28CE)) ^ v152;
  LODWORD(STACK[0x161C]) = v158 - 1926392729 - ((2 * v158) & 0x1A5B28CE);
  LODWORD(v18) = STACK[0x1598];
  v160 = (v111 ^ 0xB1867F0B) & (LODWORD(STACK[0x1598]) ^ 0xFEBA7954) ^ v111 & 0x7397ED33;
  v161 = (((-75211336 - (v155 & v159 ^ 0x24084481 | 0xFB845DB8) + (v155 & v159 ^ 0x24084481 | 0x47BA247)) ^ 0x2073E6C6) << v124 << v125)
       + ((v159 & v157) >> LODWORD(STACK[0x1838]) >> LODWORD(STACK[0x1850]));
  v162 = (v48 ^ 0x8017D2FD) & (v73 ^ 0xFE17EB49) ^ v48 & 0x733A7F2E;
  v163 = (((v162 & 0x3CCF8FDF ^ 0x3CCD8ADD) + (v162 & 0xC3307020 ^ 0x42305021) - 1) >> 1) ^ 0x3F77C468;
  LODWORD(STACK[0x1678]) = -1926392728;
  v164 = (v163 - 1926392728 + ~((2 * v163) & 0x1A5B28CE)) ^ v73;
  v165 = ((2 * (v164 & v139 ^ 0x41810A44)) | 0x809BF014) - (v164 & v139 ^ 0x41810A44);
  v166 = (v164 & v140 & 0xA137DFF1 ^ 0x2033DED0)
       + (v164 & v140 ^ 0x91040123)
       - ((v164 & v140 ^ 0x91040123) & 0xA137DFF1);
  v167 = v161 - 1926392729 - ((2 * v161) & 0x1A5B28CE);
  v168 = v132 & 0x1C ^ 4;
  LODWORD(STACK[0x1680]) = v168;
  LODWORD(STACK[0x1610]) = v133;
  LODWORD(STACK[0x1388]) = v133 & 3;
  v169 = (((v165 - 1078851594) ^ 0x1CCF24E) << v168 << (v133 & 3)) + ((v166 ^ 0x3033DED2) >> v141);
  v170 = (((v160 ^ 0xBD6E9EEC) + 688128353 + ((2 * v160) | 0xADF7FA36) + 389) >> 1) ^ 0x52F67885;
  v171 = (v170 - 1926392729 - ((2 * v170) & 0x1A5B28CE)) ^ v18;
  v172 = v169 - 1926392729 - ((2 * v169) & 0x1A5B28CE);
  v173 = v48 ^ 0x8017D2FC;
  v174 = v48;
  v175 = (((v48 ^ 0x8017D2FC) & (v60 ^ 0xECF7DB1C) ^ v48 & 0x61DA4F7A) >> 1) ^ 0x9213C;
  v176 = (v175 - 1926392729 - ((2 * v175) & 0x1A5B28CE)) ^ v60;
  v177 = (v176 & v139 & 0xDB69F243 ^ 0xDB69E043)
       + (v176 & v139 ^ 0x24841308)
       - ((v176 & v139 ^ 0x24841308) & 0xDB69F243);
  v178 = -1636803891 - (v140 & v171 ^ 0xC0350095 | 0x9E705ACD) + (v140 & v171 ^ 0xC0350095 | 0x618FA532);
  v179 = v155;
  v180 = v132 & 0x1B ^ 3;
  LODWORD(STACK[0x1370]) = v180;
  LODWORD(STACK[0x1828]) = v133 & 4;
  v181 = (v155 & v171) << v180 << (v133 & 4);
  v182 = v178 ^ 0xA1BAA5A7;
  LOBYTE(v178) = v126 & 0xC ^ 4;
  LOBYTE(v166) = v126 & 0x13 ^ 3;
  v183 = (v181 | (v182 >> v178 >> v166)) - 1926392729 - ((2 * (v181 | (v182 >> v178 >> v166))) & 0x1A5B28CE);
  v184 = STACK[0x16F0];
  v185 = v184 & 0x5DF227CB ^ 0x51A021C2 ^ (v48 ^ 0xDDE5F536) & (v184 ^ 0x8D2D9467);
  v186 = (((v176 & v157 & 0x46748EAC ^ 0x4548CA0)
         + (v176 & v157 ^ 0x4AA3024C)
         - ((v176 & v157 ^ 0x4AA3024C) & 0x46748EAC)) ^ 0xCD78CE0) >> v141;
  v187 = v123 & 0x1A ^ 2;
  LODWORD(STACK[0x1850]) = v187;
  v188 = (v177 ^ 0xFFEDE14B) << v187;
  v189 = ~v123 & 5;
  LODWORD(STACK[0x1598]) = v189;
  v190 = ((v188 << v189) ^ v186) - 1926392729 - ((2 * ((v188 << v189) ^ v186)) & 0x1A5B28CE);
  v191 = ((((2 * v185) & 0xA597A8EE) - v185 + 758393736) >> 1) ^ 0x38DA0704;
  v192 = (v191 - 1926392729 - ((2 * v191) & 0x1A5B28CE)) ^ v184;
  v193 = LODWORD(STACK[0x172C]) ^ LODWORD(STACK[0x1810]);
  LODWORD(STACK[0x1838]) = v193 ^ LODWORD(STACK[0x1820]);
  LODWORD(STACK[0x13B4]) = v193 ^ LODWORD(STACK[0x17BC]);
  LODWORD(STACK[0x1820]) = v193 ^ v167;
  LODWORD(STACK[0x17A0]) = v193 ^ v183;
  v194 = (v192 & v139) << LODWORD(STACK[0x160C]) << v39;
  v195 = (v194 ^ ((v192 & v140) >> v141)) - 1926392729 - ((2 * (v194 ^ ((v192 & v140) >> v141))) & 0x1A5B28CE);
  LODWORD(v18) = STACK[0x1738];
  v196 = v173;
  LODWORD(STACK[0x15DC]) = v173;
  LODWORD(STACK[0x1340]) = v174;
  v197 = v173 & (v18 ^ 0x9DD9ECA0) ^ v174 & 0x10F478C6;
  v198 = STACK[0x17EC];
  v199 = v111 & 0xA71B33D0 ^ 0xA4000040 ^ (v111 ^ 0xB1867F0B) & (LODWORD(STACK[0x17EC]) ^ 0x2A36A7B7);
  v200 = LODWORD(STACK[0x16C0]) ^ LODWORD(STACK[0x16D8]);
  LODWORD(STACK[0x17BC]) = v200 ^ LODWORD(STACK[0x161C]);
  LODWORD(STACK[0x160C]) = v200 ^ v172;
  LODWORD(STACK[0x1510]) = v200 ^ v190;
  LODWORD(STACK[0x161C]) = v200 ^ v195;
  v201 = STACK[0x10B0];
  v202 = v111 & 0x997FAE44 ^ 0x90A8E40 ^ (v111 ^ 0xB1867F0B) & (LODWORD(STACK[0x10B0]) ^ 0x14523A23);
  v203 = v202 - 858768054 - ((2 * v202) & 0x99A07A94);
  v204 = ((-1663462363 - v199 + ((2 * v199) | 0xC64CD7B6)) >> 1) ^ 0x33122C4D;
  v205 = (v204 - 1926392729 - ((2 * v204) & 0x1A5B28CE)) ^ v198;
  v206 = (((v197 >> 1) ^ 0xA2862) - 1926392729 - 2 * (((v197 >> 1) ^ 0xA2862) & STACK[0x1894] ^ (v197 >> 1) & 8)) ^ v18;
  LODWORD(STACK[0x1410]) = ((v205 & v157) >> LODWORD(STACK[0x17B0]) >> LODWORD(STACK[0x1688])) ^ 0x8D2D9467 ^ ((((v179 & v205 & 0xCDB368ED ^ 0x5B360ED) + (v179 & v205 ^ 0xC8000800) - ((v179 & v205 ^ 0xC8000800) & 0xCDB368ED)) ^ 0x5B360ED) << LODWORD(STACK[0x15E0]) << LODWORD(STACK[0x15C0]));
  v207 = v140;
  LODWORD(v18) = v123;
  v208 = v123 & 0x1D ^ 5;
  LODWORD(STACK[0x13D8]) = v208;
  v209 = ~v123 & 2;
  LODWORD(STACK[0x13A0]) = v209;
  LODWORD(STACK[0x1758]) = ((v206 & v139) << v209 << v208) ^ 0x8D2D9467 ^ ((((v206 & v140 & 0xBC98AAA6 ^ 0xBC98A287)
                                                                           + (v206 & v140 & 0x43675559)
                                                                           - 1) ^ 0xBC98A286) >> v178 >> v166);
  v210 = LODWORD(STACK[0x1698]) ^ (((v111 ^ 0xBA6BD18E) & (LODWORD(STACK[0x1698]) ^ LODWORD(STACK[0x147C])) ^ STACK[0x1698] & 0xBEDAE84) >> 1);
  v211 = STACK[0x1798];
  v212 = v210 & 0x49269E71 ^ 0x8248C30 ^ (LODWORD(STACK[0x1798]) ^ 0xBA02A805) & (v210 ^ 0x89BB5665);
  v213 = (v210 ^ 0x89BB5665) & (LODWORD(STACK[0x17CC]) ^ 0xDDA0F77A);
  v214 = (((v203 >> 1) ^ 0x2A6E4E85) - 1926392729 - 2 * (((v203 >> 1) ^ 0x2A6E4E85) & 0xD2D9477 ^ (v203 >> 1) & 0x10)) ^ v201;
  v215 = v132 & 0x13 ^ 3;
  LODWORD(STACK[0x16F0]) = v215;
  v216 = v132 & 0xC ^ 4;
  LODWORD(STACK[0x1584]) = v216;
  v217 = (((((2 * v212) & 0x2B5D60E0) - v212 - 363769969) ^ 0xEB57D5DE) << v216 << v215) | ((((v210 & 0x508D631D ^ 0x4004230C ^ v213)
                                                                                            - ((2
                                                                                              * (v210 & 0x508D631D ^ 0x4004230C ^ v213)) & 0xAD2FDB32)
                                                                                            + 1452797337) ^ 0x161A8C90) >> v141);
  LODWORD(STACK[0x15C0]) = v217 - 1926392729 - ((2 * v217) & 0x1A5B28CE);
  v218 = STACK[0x1778];
  v219 = (LODWORD(STACK[0x1760]) ^ 0x61D49E48) & STACK[0x1778];
  LODWORD(STACK[0x15E0]) = ((((v139 & v214 & 0xF5058700 ^ 0x95018701) + (v139 & v214 & 0xAFA78FF) - 1) ^ 0x95018700) << LODWORD(STACK[0x1850]) << LODWORD(STACK[0x1598])) ^ ((((v140 & v214 & 0xA545819A ^ 0x444808A) + (v140 & v214 ^ 0xA3030B11) - ((v140 & v214 ^ 0xA3030B11) & 0xA545819A)) ^ 0x6468A8B) >> LODWORD(STACK[0x1780]) >> LODWORD(STACK[0x1740])) ^ 0x8D2D9467;
  v220 = ((((2 * (v174 & 0x31C78D70 ^ 0x21C40920 ^ v219)) & 0x9B26FCB4)
         - (v174 & 0x31C78D70 ^ 0x21C40920 ^ v219)
         + 845971877) >> 1) ^ 0x9D7847A;
  v221 = (v220 - 1926392729 - ((2 * v220) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1658]);
  v222 = (v111 ^ 0x26189CE2) & (LODWORD(STACK[0x1700]) ^ 0x8D2D9467) ^ STACK[0x1700] & 0x979EE3E9;
  v223 = STACK[0x1560];
  v224 = ((v222 & 0xCB1F3EF5 ^ 0x4A0D1CF5) + (v222 ^ 0x9512E200) - ((v222 ^ 0x9512E200) & 0xCB1F3EF5)) >> 1;
  v225 = ((v224 ^ 0x6D80AE4A) - 1926392729 - 2 * ((v224 ^ 0x6D80AE4A) & 0xD2D9477 ^ v224 & 0x10)) ^ LODWORD(STACK[0x1700]);
  v226 = (v225 & v157 & 0x4ECFA56E ^ 0x424F216F) + (v225 & v157 & 0xB1305A91);
  v227 = v132 & 0x1E ^ 6;
  LODWORD(STACK[0x17EC]) = v227;
  v228 = ((-1644043888 - (v139 & v225 ^ 0x9378C84D | 0x9E01E190) + (v139 & v225 ^ 0x9378C84D | 0x61FE1E6F)) ^ 0xF286D622) << v227;
  v229 = STACK[0x1610] & 1;
  LODWORD(STACK[0x1738]) = v229;
  v230 = (v228 << v229) + (((v226 - 1) ^ 0x424F216E) >> v141);
  LODWORD(STACK[0x1658]) = v230 - 1926392729 - ((2 * v230) & 0x1A5B28CE);
  v231 = v223 ^ (((v223 & v218 & 0x24D02B15 ^ 0x24900B10)
                + (v223 & v218 ^ 0x48A025)
                - ((v223 & v218 ^ 0x48A025) & 0x24D02B15u)) >> 1);
  v232 = v231 & 0x2EEFFAC0 ^ 0xA282AC0 ^ (v231 ^ 0x124C4598) & (v207 ^ 0x2EEFFAC0);
  v233 = v231 & 0xE634507D ^ 0xE6200061 ^ (v211 ^ 0x15106609) & (v231 ^ 0x124C4598);
  LODWORD(STACK[0x1850]) = ((((v221 & v157 ^ 0x390400B0) - ((2 * (v221 & v157 ^ 0x390400B0)) & 0xC7FEC8BA) + 1677681757) ^ 0x5AFB64ED) >> v141) ^ 0x8D2D9467 ^ (((((2 * (v179 & v221 ^ 0x191)) | 0x844DE544) - (v179 & v221 ^ 0x191) - 1109848738) ^ 0x4226F333) << (v132 & 0x14 ^ 4) << (v132 & 0xB ^ 3));
  v234 = (((2 * v233) | 0x8C1E6584) - v233 + 972082494) ^ 0x222B72BB;
  v235 = v123 & 0x17 ^ 7;
  LODWORD(STACK[0x1698]) = v235;
  LOBYTE(v214) = STACK[0x1788];
  LODWORD(STACK[0x1338]) = STACK[0x1788] & 8;
  v236 = (v234 << v235 << (v214 & 8)) | (((v232 - ((2 * v232) & 0xA440C9BA) + 1377854685) ^ 0x5A440E9D) >> (v126 & 0xA ^ 2) >> (v126 & 0x15 ^ 5));
  LODWORD(STACK[0x1560]) = v236 - 1926392729 - ((2 * v236) & 0x1A5B28CE);
  v237 = STACK[0x13CC];
  LODWORD(STACK[0x1368]) = v111 ^ 0xB1867F0B;
  v238 = v111 & 0x5292E9DC ^ 0x4282A8D8 ^ (v111 ^ 0xB1867F0B) & (v237 ^ 0xDFBF7DBB);
  v239 = ((((2 * v238) | 0x53D4BCFC) - v238 + 1444258178) >> 1) ^ 0x7DF54FD7;
  v240 = (v239 - 1926392729 - ((2 * v239) & 0x1A5B28CE)) ^ v237;
  v241 = ((v157 + 561431359) ^ 0xDC2DBCA8) & (2 * ((v157 + 561431359) & 0xDE893CC1)) ^ (v157 + 561431359) & 0xDE893CC1;
  v242 = ((2 * ((v157 + 561431359) ^ 0xC12DD428)) ^ 0x3F49D1D2) & ((v157 + 561431359) ^ 0xC12DD428) ^ (2 * ((v157 + 561431359) ^ 0xC12DD428)) & 0x1FA4E8E8;
  v243 = (v242 ^ 0x1E00C000) & (4 * v241) ^ v241;
  v244 = ((4 * (v242 ^ 0xA42829)) ^ 0x7E93A3A4) & (v242 ^ 0xA42829) ^ (4 * (v242 ^ 0xA42829)) & 0x1FA4E8E8;
  v245 = (v244 ^ 0x1E80A0A0) & (16 * v243) ^ v243;
  v246 = ((16 * (v244 ^ 0x1244849)) ^ 0xFA4E8E90) & (v244 ^ 0x1244849) ^ (16 * (v244 ^ 0x1244849)) & 0x1FA4E8E0;
  v247 = v245 ^ 0x1FA4E8E9 ^ (v246 ^ 0x1A048800) & (v245 << 8);
  v248 = (v157 + 561431359) ^ (2
                             * ((v247 << 16) & 0x1FA40000 ^ v247 ^ ((v247 << 16) ^ 0x68E90000) & (((v246 ^ 0x5A06069) << 8) & 0x1FA40000 ^ 0x1B040000 ^ (((v246 ^ 0x5A06069) << 8) ^ 0x24E80000) & (v246 ^ 0x5A06069))));
  v249 = 221090935 - v157 - ((268435454 - 2 * v157) & 0xA5B28CE) - 17;
  v250 = v248;
  LODWORD(STACK[0x1358]) = v248;
  LODWORD(STACK[0x17CC]) = v248 ^ 0x7DAD7974;
  v251 = (v248 ^ 0x7DAD7974 ^ v249) & 0x8020010;
  v252 = LODWORD(STACK[0x1408]) ^ ((v196 & STACK[0x1408]) >> 1);
  LOBYTE(v248) = v141;
  LODWORD(STACK[0x1790]) = v132;
  v253 = v132 & 0xA ^ 2;
  LODWORD(STACK[0x1378]) = v253;
  v254 = v132 & 0x15 ^ 5;
  LODWORD(STACK[0x17D8]) = v254;
  LODWORD(STACK[0xE2C]) = ((v207 & v240) >> v141) ^ 0x8D2D9467 ^ ((v139 & v240) << v254 << v253);
  v255 = v250 ^ 0xF080ED13;
  v256 = LODWORD(STACK[0x1548]) ^ v251;
  v257 = v126 & 0x1A ^ 2;
  LODWORD(STACK[0x13F0]) = v257;
  v258 = ((((2 * (v252 & (v250 ^ 0xF080ED13) ^ 0x4421806E)) & 0xA905A39E)
         - (v252 & (v250 ^ 0xF080ED13) ^ 0x4421806E)
         + 729624112) ^ 0x6F5CAE5E) >> v257;
  v259 = ~v126 & 5;
  LODWORD(STACK[0x13E8]) = v259;
  v260 = (((v258 >> v259) ^ 0x902080E8) - 487396495) ^ (((v258 >> v259) ^ 0xA09C2180) - 766621159) ^ (((v258 >> v259) ^ 0x30BCA168) + 1114557169);
  v261 = v179;
  v262 = v123 & 0x16 ^ 6;
  LODWORD(STACK[0x1360]) = v262;
  v263 = v123 & 9 ^ 1;
  LODWORD(STACK[0x1364]) = v263;
  v264 = v260 + ((v179 & v252) << v262 << v263) - 677172054;
  v265 = (v264 ^ 0x312B47BC) & (2 * (v264 & 0xB58A67BD)) ^ v264 & 0xB58A67BD;
  v266 = ((2 * (v264 ^ 0x1A2F08E4)) ^ 0x5F4ADEB2) & (v264 ^ 0x1A2F08E4) ^ (2 * (v264 ^ 0x1A2F08E4)) & 0xAFA56F58;
  v267 = (v266 ^ 0xE840E10) & (4 * v265) ^ v265;
  v268 = ((4 * (v266 ^ 0xA0A52149)) ^ 0xBE95BD64) & (v266 ^ 0xA0A52149) ^ (4 * (v266 ^ 0xA0A52149)) & 0xAFA56F58;
  v269 = (v268 ^ 0xAE852D40) & (16 * v267) ^ v267;
  v270 = ((16 * (v268 ^ 0x1204219)) ^ 0xFA56F590) & (v268 ^ 0x1204219) ^ (16 * (v268 ^ 0x1204219)) & 0xAFA56F50;
  v271 = v269 ^ 0xAFA56F59 ^ (v270 ^ 0xAA046500) & (v269 << 8);
  LODWORD(STACK[0x1700]) = v264 ^ (2
                                 * ((v271 << 16) & 0x2FA50000 ^ v271 ^ ((v271 << 16) ^ 0x6F590000) & (((v270 ^ 0x5A10A49) << 8) & 0x2FA50000 ^ 0xA800000 ^ (((v270 ^ 0x5A10A49) << 8) ^ 0x256F0000) & (v270 ^ 0x5A10A49))));
  v272 = STACK[0x1340];
  v273 = (LODWORD(STACK[0x1340]) ^ 0xDEAA993A) & (LODWORD(STACK[0xE48]) ^ LODWORD(STACK[0x147C]));
  v274 = ((((v273 ^ STACK[0xE48] & 0x5EBD4BC6) >> 1) ^ 0x6168023)
        - 1926392729
        - 2
        * ((((v273 ^ STACK[0xE48] & 0x5EBD4BC6) >> 1) ^ 0x6168023) & 0xD2D947F ^ ((v273 ^ STACK[0xE48] & 0x5EBD4BC6) >> 1) & 0x18)) ^ LODWORD(STACK[0xE48]);
  v275 = (v179 & v274 & 0xAB6BC87E ^ 0xA941C87B) + (v179 & v274 & 0x54943781);
  v276 = v207;
  LOBYTE(v179) = STACK[0x1370];
  v277 = (((v275 - 1) ^ 0xA941C87A) << LODWORD(STACK[0x1828]) << v179)
       + ((v274 & v207) >> LODWORD(STACK[0x17B0]) >> LODWORD(STACK[0x1688]));
  LODWORD(STACK[0x1598]) = v277 - 1926392729 - ((2 * v277) & 0x1A5B28CE);
  v278 = v111 & 0xA60DF3F0 ^ 0xA0086170 ^ (v111 ^ 0xB1867F0B) & (LODWORD(STACK[0x1708]) ^ 0x2B206797);
  v279 = ((1637867212 - (v278 | 0x619FDECC) + (v278 | 0x9E602133)) >> 1) ^ 0x4F3619A1;
  v280 = (v279 - 1926392729 - ((2 * v279) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1708]);
  v281 = STACK[0x18A8];
  v282 = STACK[0x1778];
  v283 = v139;
  v284 = v139 & v280;
  LODWORD(STACK[0x1330]) = v256 & 0x10;
  v285 = (((v280 & v255 ^ 0x260D1A) - ((2 * (v280 & v255 ^ 0x260D1A)) & 0x7344B606) + 966941443) ^ 0x39845619) >> (v256 & 0x10) >> v248;
  v286 = v18 & 0x13 ^ 3;
  LODWORD(STACK[0x139C]) = v286;
  LOBYTE(v252) = v214;
  v287 = v214 & 0xC ^ 4;
  LODWORD(STACK[0x1390]) = v287;
  LODWORD(STACK[0x1154]) = v285
                         + (v284 << v286 << v287)
                         - 1926392729
                         - ((2 * (v285 + (v284 << v286 << v287))) & 0x1A5B28CE);
  v288 = STACK[0x16D0] & 0x6CCFF4E1 ^ 0x28C214E0 ^ (v111 ^ 0xDD498BEA) & (LODWORD(STACK[0x16D0]) ^ 0x8D2D9467);
  v289 = ((1290374419
         - (v282 & (v281 ^ 0xE9E6F17F) ^ v272 & 0x64CB6518 | 0x4CE98D13)
         + ((v282 & (v281 ^ 0xE9E6F17F) ^ v272 & 0x64CB6518) & 0x4CE98D13 ^ 0xF7DF77FC)) >> 1) ^ 0x7BEE1BF2;
  v290 = (v289 + LODWORD(STACK[0x1678]) + ~((2 * v289) & 0x1A5B28CE)) ^ v281;
  v291 = ((((2 * (v261 & v290 ^ 0x90C46420)) | 0x5DBEC8BA) - (v261 & v290 ^ 0x90C46420) - 786392157) ^ 0xBE1B007D) << LODWORD(STACK[0x1680]) << LODWORD(STACK[0x1388]);
  v292 = ((-1424895652 - v288 + ((2 * v288) | 0xA9DC5D48)) >> 1) ^ 0x3810D712;
  v293 = (v292 - 1926392729 - ((2 * v292) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16D0]);
  v294 = v255;
  LODWORD(STACK[0x1760]) = v256 ^ 0xDC9CC1C7;
  v295 = (v256 ^ 0xDC9CC1C7) & 0x11 ^ 1;
  LODWORD(STACK[0x16D0]) = v295;
  LODWORD(STACK[0x1708]) = v256 & 6;
  v296 = v291
       + (((((2 * (v290 & v207 ^ 0xC0B1D71E)) & 0x5F98139E) - (v290 & v207 ^ 0xC0B1D71E) + 1345582640) ^ 0x9082212E) >> (v256 & 6) >> v295);
  LODWORD(STACK[0x1680]) = v296 - 1926392729 - ((2 * v296) & 0x1A5B28CE);
  v297 = (((v283 & v293 & 0xF1A09B9E ^ 0xB0A0039F) + (v283 & v293 & 0xE5F6461) - 1) ^ 0xB0A0039E) << LODWORD(STACK[0x1698]) << LODWORD(STACK[0x1338]);
  v298 = (((2 * (v293 & v255 ^ 0x13466)) & 0x1F72C4D8) - (v293 & v255 ^ 0x13466) - 263807597) ^ 0xF047A9F5;
  LOBYTE(v293) = v126 & 0x1C ^ 4;
  LOBYTE(v291) = ~(_BYTE)v126 & 3;
  LODWORD(STACK[0xE48]) = v297
                        + (v298 >> v293 >> v291)
                        - 1926392729
                        - ((2 * (v297 + (v298 >> v293 >> v291))) & 0x1A5B28CE);
  v299 = v111;
  v300 = v111 ^ 0xB1867F0A;
  v301 = ((v111 ^ 0xB1867F0A) & (LODWORD(STACK[0x14D8]) ^ 0x216A1420) ^ v111 & 0xAC478046) >> 1;
  v302 = ((v301 ^ 0x50030001) - 1926392729 - 2 * ((v301 ^ 0x50030001) & 0xD2D947F ^ v301 & 0x18)) ^ LODWORD(STACK[0x14D8]);
  v303 = v272;
  v304 = ((((v282 & (LODWORD(STACK[0x1570]) ^ 0x2D007F1B) ^ v272 & 0xA02DEB7C) & 0x26B23FF7 ^ 0x26B23583)
         + ((v282 & (LODWORD(STACK[0x1570]) ^ 0x2D007F1B) ^ v272 & 0xA02DEB7C) & 0xD94DC008 ^ 0xC8009)
         - 1) >> 1) ^ 0x535DBBFB;
  v305 = (v304 - 1926392729 - ((2 * v304) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1570]);
  v306 = v252 & 0x1C ^ 4;
  LODWORD(STACK[0x13CC]) = v306;
  v307 = ~(_DWORD)v18 & 3;
  LODWORD(STACK[0x14D8]) = v307;
  v308 = (((((2 * (v302 & v294 ^ 0x42030000)) | 0x4BC85A2A) - (v302 & v294 ^ 0x42030000) - 635710741) ^ 0x67E72D15) >> (v256 & 0x10) >> v248) | ((v283 & v302) << v307 << v306);
  LODWORD(STACK[0x1548]) = v308 - 1926392729 - ((2 * v308) & 0x1A5B28CE);
  v309 = ((((2 * (v261 & v305 ^ 0x26002A02)) | 0x7293C650) - (v261 & v305 ^ 0x26002A02) - 961143592) ^ 0x1F49C92A) << v179 << LODWORD(STACK[0x1828]);
  LODWORD(STACK[0x1808]) = v126;
  v310 = v126 & 0xD ^ 5;
  LODWORD(STACK[0x1688]) = v310;
  LOBYTE(v126) = v126 & 0x12 ^ 2;
  LODWORD(STACK[0x1698]) = ((((v305 & v276 & 0x577AA32C ^ 0x17682224)
                            + (v305 & v276 ^ 0x68929118)
                            - ((v305 & v276 ^ 0x68929118) & 0x577AA32C)) ^ 0x3FE83234) >> v126 >> v310) ^ 0x8D2D9467 ^ v309;
  v311 = v303;
  v312 = STACK[0x1420];
  v313 = (v303 ^ 0xC3BD690C) & (LODWORD(STACK[0x1420]) ^ LODWORD(STACK[0x147C]));
  v314 = STACK[0x16F8];
  v315 = v300;
  LODWORD(STACK[0x1388]) = v300;
  v316 = ((((v313 ^ v312 & 0x43AABBF0) >> 1) ^ 0x944830)
        - 1926392729
        - ((2 * (((v313 ^ v312 & 0x43AABBF0) >> 1) ^ 0x944830)) & 0x1A5B28CE)) ^ v312;
  v317 = ((((2 * (v316 & v283 ^ 0x48C02000)) | 0x1CBA2F42) - (v316 & v283 ^ 0x48C02000) + 1906501727) ^ 0xC69D37A1) << LODWORD(STACK[0x1870]) << LODWORD(STACK[0x1898]);
  LODWORD(STACK[0x1828]) = v317
                         + ((v316 & v276) >> v293 >> v291)
                         - 1926392729
                         - ((2 * (v317 + ((v316 & v276) >> v293 >> v291))) & 0x1A5B28CE);
  v318 = (v300 & (v314 ^ 0x5BA3ABD6) ^ v299 & 0xD68E3FB0) >> 1;
  v319 = ((v318 ^ 0x48431F80) - 1926392729 - 2 * ((v318 ^ 0x48431F80) & 0xD2D947F ^ v318 & 0x18)) ^ v314;
  v320 = STACK[0x1470];
  v321 = (v261 & v319) << LODWORD(STACK[0x17EC]) << LODWORD(STACK[0x1738]);
  LOBYTE(v316) = STACK[0x1760] & 0x14 ^ 4;
  LOBYTE(v18) = v256;
  LODWORD(STACK[0x1350]) = v256;
  LOBYTE(v256) = v256 & 3;
  LODWORD(STACK[0x18A8]) = ((v319 & v294) >> v316 >> v256) ^ 0x8D2D9467 ^ v321;
  v322 = STACK[0x1440] & 0xA5669D8 ^ 0x8442158 ^ (v299 ^ 0xBBD016D3) & (LODWORD(STACK[0x1440]) ^ 0x8D2D9467);
  v323 = (((2 * v322) & 0x96CAFAC2) - v322 - 1264942434) >> 1;
  v324 = ((v323 ^ 0x5A6D51C3) - 1926392729 - 2 * ((v323 ^ 0x5A6D51C3) & 0xD2D9477 ^ v323 & 0x10)) ^ LODWORD(STACK[0x1440]);
  v325 = STACK[0x1748];
  v326 = v303 & 0xFA1A7904 ^ 0x5A022804 ^ v282 & (LODWORD(STACK[0x1748]) ^ 0x7737ED63);
  v327 = v320 ^ (((v320 & v282 ^ 0x1580056C) - ((2 * (v320 & v282 ^ 0x1580056C)) & 0x423967CAu) - 1591954459) >> 1);
  v328 = v327 & 0xCEC4FD05 ^ 0x8204A901 ^ (v327 ^ 0x5A4E5B44) & (LODWORD(STACK[0x1358]) ^ 0x3E441016);
  v329 = STACK[0x1834];
  v330 = ((((2 * (v283 & v324 ^ 0xC4146)) | 0x9FBF1BB4) - (v283 & v324 ^ 0xC4146) - 1340050906) ^ 0x4FD3CC9C) << (STACK[0x1610] & 5);
  LOBYTE(v174) = STACK[0x1790];
  LODWORD(STACK[0x1408]) = ((v330 << (v174 & 0x1A ^ 2)) | ((v276 & v324) >> v316 >> v256))
                         - 1926392729
                         - ((2 * ((v330 << (v174 & 0x1A ^ 2)) | ((v276 & v324) >> v316 >> v256))) & 0x1A5B28CE);
  v331 = STACK[0x1798] & 0xA6ABA825 ^ 0x24238021 ^ v261 & (v327 ^ 0xFCE5F361);
  LOBYTE(v256) = STACK[0x1818];
  v332 = ((((2 * v326) & 0x5F8337B0) - v326 - 801217497) >> 1) ^ 0x5170E13;
  v333 = (v332 - 1926392729 - ((2 * v332) & 0x1A5B28CE)) ^ v325;
  v334 = v294;
  LOBYTE(v330) = STACK[0x1740];
  v335 = (((-1753857969 - (v331 | 0x9776404F) + (v331 | 0x6889BFB0)) ^ 0xEE8A1FB5) << (v256 & 0x12 ^ 2) << (v256 & 0xD ^ 5))
       + (((((2 * v328) & 0xACD14EFE) - v328 + 697784448) ^ 0xE1D7A885) >> v330 >> LODWORD(STACK[0x1780]));
  LODWORD(STACK[0x17B0]) = v335 - 1926392729 - ((2 * v335) & 0x1A5B28CE);
  v336 = (v315 & (v329 ^ 0x8B4E3660) ^ v299 & 0x663A206) >> 1;
  v337 = STACK[0x1894];
  v338 = ((v336 ^ 0x11101) - 1926392729 - 2 * ((v336 ^ 0x11101) & STACK[0x1894] ^ v336 & 8)) ^ v329;
  v339 = STACK[0x1460];
  v340 = ((STACK[0x15DC] & (LODWORD(STACK[0x1460]) ^ 0xC7C80F58) ^ v303 & 0x4AE59B3E) >> 1) ^ 0x2C91E;
  v341 = STACK[0x16E0];
  LODWORD(STACK[0x1120]) = ((((v333 & v294 & 0x5E29F266 ^ 0x1E297264)
                            + (v333 & v294 ^ 0x61008402)
                            - ((v333 & v294 ^ 0x61008402) & 0x5E29F266)) ^ 0x3F297664) >> v126 >> LODWORD(STACK[0x1688])) ^ ((v261 & v333) << LODWORD(STACK[0x1364]) << LODWORD(STACK[0x1360])) ^ 0x8D2D9467;
  v342 = (((v341 ^ 0x18D6F8F0) & (v299 ^ 0x296C0792) ^ v341 & 0x98EA7898) >> 1) ^ 0xC613C48;
  v343 = (v342 - 1926392729 - ((2 * v342) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14B8]);
  v344 = v283;
  v345 = ((2 * (v343 & v283 ^ 0x88046A)) & 0x43786DAC) - (v343 & v283 ^ 0x88046A);
  v346 = v261;
  v347 = (((v261 & v338 ^ 0x883252C0) - ((2 * (v261 & v338 ^ 0x883252C0)) & 0x2E19BC8A) - 1760764347) ^ 0x1F3E8C85) << LODWORD(STACK[0x13A0]) << LODWORD(STACK[0x13D8]);
  v348 = v276;
  LOBYTE(v283) = STACK[0x17A8];
  v349 = STACK[0x1330];
  v350 = (v343 & v276) >> v283 >> LODWORD(STACK[0x1330]);
  LOBYTE(v343) = v174 & 9 ^ 1;
  LOBYTE(v252) = v174 & 0x16 ^ 6;
  v351 = (((v345 - 565982935) ^ 0xDECBCD43) << v343 << v252) | v350;
  LODWORD(STACK[0x1898]) = v351 - 1926392729 - ((2 * v351) & 0x1A5B28CE);
  v352 = (v340 - 1926392729 - ((2 * v340) & 0x1A5B28CE)) ^ v339;
  v353 = STACK[0x1760];
  v354 = ((((2 * (v338 & v334 ^ 0x10803478)) & 0x1743D700) - (v338 & v334 ^ 0x10803478) - 195160961) ^ 0xE4DE2007) >> (STACK[0x1760] & 0x15 ^ 5) >> (v18 & 2);
  v355 = v344;
  LODWORD(STACK[0x1440]) = v347 + v354 - 1926392729 - ((2 * (v347 + v354)) & 0x1A5B28CE);
  v356 = ((((2 * (v352 & v344 ^ 0xB0008382)) | 0x1E7C4614) - (v352 & v344 ^ 0xB0008382) - 255730442) ^ 0xBF3EA088) << LODWORD(STACK[0x1378]) << LODWORD(STACK[0x17D8]);
  v357 = STACK[0x14C4];
  v358 = STACK[0x1778];
  v359 = v311 & 0x833361AD ^ 0x102185 ^ STACK[0x1778] & (LODWORD(STACK[0x14C4]) ^ 0xE1EF5CA);
  LOBYTE(v126) = STACK[0x1808];
  v360 = STACK[0x1808] & 0x1F ^ 7;
  LODWORD(STACK[0x1834]) = v360;
  v361 = v356
       + (((181088542 - (v352 & v348 ^ 0x50100230 | 0xACB311E) + (v352 & v348 ^ 0x50100230 | 0xF534CEE1)) ^ 0xA524CCD1) >> v360);
  LODWORD(STACK[0x1688]) = v361 - 1926392729 - ((2 * v361) & 0x1A5B28CE);
  v362 = (v359 - ((2 * v359) & 0xA85879C4) - 735298334) >> 1;
  v363 = ((v362 ^ 0x2A17AEE5) - 1926392729 - 2 * ((v362 ^ 0x2A17AEE5) & v337 ^ v362 & 8)) ^ v357;
  LODWORD(STACK[0x1610]) = ((v363 & v344) << v252 << v343) ^ 0x8D2D9467 ^ (((-1948530509
                                                                           - (v363 & v334 ^ 0x241C4720 | 0x8BDBC8B3)
                                                                           + (v363 & v334 ^ 0x241C4720 | 0x7424374C)) ^ 0x5038706C) >> !(v126 & 1) >> (v126 & 0x1E ^ 6));
  v364 = STACK[0x1368];
  v365 = v299 & 0x55A97BCE ^ 0x142808C0 ^ (LODWORD(STACK[0x1590]) ^ 0xD884EFA9) & STACK[0x1368];
  v366 = (v365 - ((2 * v365) & 0x1F9A0E38) + 265094940) >> 1;
  v367 = ((v366 ^ 0x532BA6B) - 1926392729 - 2 * ((v366 ^ 0x532BA6B) & 0xD2D9477 ^ v366 & 0x10)) ^ LODWORD(STACK[0x1590]);
  v368 = (((v346 & v367 & 0x7CA10B2B ^ 0x4881020B) + (v346 & v367 & 0x835EF4D4 ^ 0x81563001) - 1) ^ 0xC9D7320B) << (v256 & 0xA ^ 2) << (v256 & 0x15 ^ 5);
  v369 = STACK[0x1558];
  v370 = STACK[0x1388];
  v371 = v299;
  v372 = (-1296328500 - (v348 & v367 ^ 0x11104201 | 0xB2BB98CC) + (v348 & v367 ^ 0x11104201 | 0x4D446733)) ^ 0x5C542532;
  v373 = v353 & 0x17 ^ 7;
  LODWORD(STACK[0x1870]) = v373;
  STACK[0x14B8] = v368 + (v372 >> v373) - 1926392729 - ((2 * (v368 + (v372 >> v373))) & 0x1A5B28CE);
  v374 = (v370 & (v369 ^ 0x3DCDFEA) ^ v299 & 0x8EF14B8C) >> 1;
  v375 = ((v374 ^ 0x40402584) - 1926392729 - 2 * ((v374 ^ 0x40402584) & v337 ^ v374 & 8)) ^ v369;
  v376 = v358;
  v377 = v311 & 0x29434365 ^ 0x160 ^ v358 & (LODWORD(STACK[0x1490]) ^ 0xA46ED702);
  v378 = ((v377 - ((2 * v377) & 0xC1B96EA8) + 1625077588) >> 1) ^ 0x306FFA28;
  v379 = (v378 - 1926392729 - ((2 * v378) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1490]);
  v380 = STACK[0x1668];
  v381 = ((((v379 & v348 ^ 0x5099DC88) - ((2 * (v379 & v348 ^ 0x5099DC88)) & 0xDC28E90) - 2032056504) ^ 0xD6789BC0) >> v330 >> LODWORD(STACK[0x1780]))
       + ((v379 & v355) << LODWORD(STACK[0x1488]) << LODWORD(STACK[0x1498]));
  LODWORD(STACK[0x17D8]) = v381 - 1926392729 - ((2 * v381) & 0x1A5B28CE);
  LOBYTE(v381) = v174 & 0x1F ^ 7;
  LOBYTE(v18) = v349;
  v382 = ((((v346 & v375 ^ 0xC90A1) - ((2 * (v346 & v375 ^ 0xC90A1)) & 0xD112BEB2) + 1753833305) ^ 0x6885CFF8) << v381) | ((v375 & v334) >> v349 >> v283);
  LODWORD(STACK[0x1740]) = v382 - 1926392729 - ((2 * v382) & 0x1A5B28CE);
  v383 = STACK[0x16A4];
  v384 = ((v376 & (v383 ^ 0x9C978EAC) ^ v311 & 0x11BA1ACB) & 0x69AF1EAC ^ 0x692F0C24)
       + (v376 & (v383 ^ 0x9C978EAC) ^ v311 & 0x11BA1ACB ^ 0x80128A)
       - ((v376 & (v383 ^ 0x9C978EAC) ^ v311 & 0x11BA1ACB ^ 0x80128A) & 0x69AF1EAC);
  v385 = (((v364 & (v380 ^ 0x513657AF) ^ v371 & 0xDC1BC3C8 ^ 0x80010008)
         + 1983144256
         - ((2 * (v364 & (v380 ^ 0x513657AF) ^ v371 & 0xDC1BC3C8)) & 0xEC68C280)) ^ 0x66372240) >> ((((2 * (v126 & 1 ^ 3)) & 2) - (v126 & 1 ^ 3) + 62) ^ 0x3D | ((v126 & 1) + 60 - 2 * (v126 & 1) + 1) ^ 0x3C);
  v386 = (v385 + LODWORD(STACK[0x1678]) + ~((2 * v385) & 0x1A5B28CE)) ^ v380;
  v387 = v311;
  v388 = STACK[0x1554];
  v389 = (v311 ^ 0xC77C219C) & (LODWORD(STACK[0x1554]) ^ 0x8D2D9467) ^ STACK[0x1554] & 0x476BF361;
  v390 = v364;
  v391 = v299 & 0x1E4C95 ^ 0x64C01 ^ (LODWORD(STACK[0x1600]) ^ 0x9709EB98) & v364;
  v392 = STACK[0x1584];
  LODWORD(STACK[0x1600]) = ((v348 & v386) >> (v126 & 0xF ^ 7) >> (v126 & 0x10)) ^ 0x8D2D9467 ^ (((-408765254
                                                                                                - (v346 & v386 ^ 0x4324C00 | 0xE7A2BCBA)
                                                                                                + (v346 & v386 ^ 0x4324C00 | 0x185D4345)) ^ 0x1C6F0F45) << LODWORD(STACK[0x1584]) << LODWORD(STACK[0x16F0]));
  v393 = (((v389 & 0x3A1ACC36 ^ 0x3A188C17 | v389 & 0xC5E533C8) - 1) >> 1) ^ 0x1F988E3B;
  v394 = (v393 - 1926392729 - ((2 * v393) & 0x1A5B28CE)) ^ v388;
  v395 = v394 & v355;
  v396 = ((((2 * (v394 & v334 ^ 0x67265F77)) | 0xAD8933FA) - (v394 & v334 ^ 0x67265F77) + 691758595) ^ 0xB1E2C68A) >> v18 >> v283;
  LOBYTE(v394) = ~LODWORD(STACK[0x1788]) & 4;
  LOBYTE(v389) = STACK[0x1818] & 0x1B ^ 3;
  LODWORD(STACK[0x1678]) = (v396 | (v395 << v389 << v394))
                         - 1926392729
                         - ((2 * (v396 | (v395 << v389 << v394))) & 0x1A5B28CE);
  v397 = (((v384 >> 1) ^ 0x349E8F77) - 1926392729 - ((2 * ((v384 >> 1) ^ 0x349E8F77)) & 0x1A5B28CE)) ^ v383;
  v398 = ((v397 & v334 & 0x4F3CE935 ^ 0x4B1CE915) + (v397 & v334 ^ 0x420022A) - ((v397 & v334 ^ 0x420022A) & 0x4F3CE935)) ^ 0x4B1CEB1F;
  v399 = v355;
  v400 = (v397 & v355 & 0xA0AEBAF2 ^ 0xA08C1AD1) + (v397 & v355 & 0x5F51450D);
  LOBYTE(v388) = (v397 & 0x23) - 34 + (v397 & 0x23 ^ 0x23);
  v401 = (LODWORD(STACK[0x1528]) ^ 0x6C60E3FE) & v370;
  v402 = v398 >> LODWORD(STACK[0x1834]);
  v403 = ((v391 >> v388) - 1926392729 - ((2 * (v391 >> v388)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x173C]);
  v404 = (v346 & v403) << LODWORD(STACK[0x1390]);
  v405 = (v403 & v348) >> (STACK[0x1350] & 1) >> (STACK[0x1760] & 0x16 ^ 6);
  v406 = (((v404 << LODWORD(STACK[0x139C])) ^ 0x1F6B08B6) & ~v405 | v405 & 0xE094F749) ^ 0xE0948740;
  v407 = v376 & (LODWORD(STACK[0xE4C]) ^ 0x484CECE4) ^ v387 & 0xC5617883;
  v408 = (v407 & 0xB9DAE4A ^ 0xA9D8E4A) + (v407 ^ 0xC5202081) - ((v407 ^ 0xC5202081) & 0xB9DAE4A);
  v409 = STACK[0x15B0];
  v410 = (v387 ^ 0x238E27DC) & (LODWORD(STACK[0x15B0]) ^ LODWORD(STACK[0x147C]));
  v411 = STACK[0x1894];
  v412 = (((v408 >> 1) ^ 0x275E6F25) - 1926392729 - 2 * (((v408 >> 1) ^ 0x275E6F25) & STACK[0x1894] ^ (v408 >> 1) & 8)) ^ LODWORD(STACK[0xE4C]);
  v413 = ((((v412 & v399 & 0x68E496F1 ^ 0x40C49691)
          + (v412 & v399 ^ 0xA9212060)
          - ((v412 & v399 ^ 0xA9212060) & 0x68E496F1)) ^ 0xC1C5B691) << v394 << v389) | ((((v412 & v334 ^ 0x2008A08)
                                                                                         - ((2
                                                                                           * (v412 & v334 ^ 0x2008A08)) & 0x5A518D9A)
                                                                                         + 757647053) ^ 0x2F284CC5) >> v18 >> v283);
  LODWORD(STACK[0x116C]) = v413 - 1926392729 - ((2 * v413) & 0x1A5B28CE);
  LODWORD(v18) = STACK[0x1738];
  v414 = STACK[0x17EC];
  v415 = (((v400 - 1) ^ 0xA08C1AD0) << LODWORD(STACK[0x1738]) << LODWORD(STACK[0x17EC])) | v402;
  LODWORD(STACK[0x1570]) = v415 - 1926392729 - ((2 * v415) & 0x1A5B28CE);
  v416 = ((((v401 ^ v371 & 0x9FCE212C) >> 1) ^ 0x48C31084)
        - 1926392729
        - 2 * ((((v401 ^ v371 & 0x9FCE212C) >> 1) ^ 0x48C31084) & v411 ^ ((v401 ^ v371 & 0x9FCE212C) >> 1) & 8)) ^ LODWORD(STACK[0x1650]);
  v417 = STACK[0x1840];
  v418 = v299 & 0x3DE61D3F ^ 0x3D241104 ^ v390 & (STACK[0x1840] ^ 0xB0CB8958);
  LOBYTE(v373) = STACK[0x13F0];
  LOBYTE(v389) = STACK[0x13E8];
  v419 = (((-808401396 - (v346 & v416 ^ 0x8882000A | 0xCFD0C60C) + (v346 & v416 ^ 0x8882000A | 0x302F39F3)) ^ 0xB8AD39F9) << v381) | (((((2 * (v348 & v416 ^ 0x2909890)) & 0xB21E964) - (v348 & v416 ^ 0x2909890) + 2054097741) ^ 0x78FF93DD) >> v373 >> v389);
  LODWORD(STACK[0xE4C]) = v419 - 1926392729 - ((2 * v419) & 0x1A5B28CE);
  v420 = ((((v410 ^ v409 & 0xA399F520) >> 1) ^ 0x4084CA10)
        - 1926392729
        - 2 * ((((v410 ^ v409 & 0xA399F520) >> 1) ^ 0x4084CA10) & v411 ^ ((v410 ^ v409 & 0xA399F520) >> 1) & 8)) ^ v409;
  v421 = ((((2 * (v420 & v399 ^ 0xCE40EE26)) | 0xD27D91DE) - (v420 & v399 ^ 0xCE40EE26) + 381761297) ^ 0x277E26C9) << LODWORD(STACK[0x13CC]) << LODWORD(STACK[0x14D8]);
  v422 = (v421 & 0xEE313FD7 | (((v420 & v334) >> v373 >> v389) ^ 0x11CEC028) & ~v421) ^ 0xA111D16;
  v423 = (-376300816 - v418 + ((2 * v418) | 0x2CDBBB24u) + 1918) >> 1;
  v424 = ((v423 ^ 0xD67E8CE) - 1926392729 - 2 * ((v423 ^ 0xD67E8CE) & 0xD2D9477 ^ v423 & 0x10)) ^ v417;
  v425 = ((((2 * (v348 & v424 ^ 0x821C048)) | 0xDDF4107A) - (v348 & v424 ^ 0x821C048) + 285603779) ^ 0xE6DBC875) >> LODWORD(STACK[0x1870]);
  v426 = (((v346 & v424 ^ 0x80120A10) - ((2 * (v346 & v424 ^ 0x80120A10)) & 0xDDA8B62E) - 288072937) ^ 0x6EC65107) << v18 << v414;
  v427 = (((v425 ^ 0xD8AF023D) - 1434621530) ^ ((v425 ^ 0x7A95F137) + 138910384) ^ ((v425 ^ 0xA23AF30A) - 790062957))
       + 1330374364
       + (((v426 ^ 0x9B6C8BFB) - 373366684) ^ ((v426 ^ 0x2D112F56) + 1606632655) ^ ((v426 ^ 0xB67DA4AD) - 995111114))
       - 2966;
  v428 = (v427 ^ 0xCA8E4D8A) & (2 * (v427 & 0xCB0F4D88)) ^ v427 & 0xCB0F4D88;
  v429 = ((2 * (v427 ^ 0xDC82559A)) ^ 0x2F1A3024) & (v427 ^ 0xDC82559A) ^ (2 * (v427 ^ 0xDC82559A)) & 0x178D1812;
  v430 = (v429 ^ 0x4081000) & (4 * v428) ^ v428;
  v431 = ((4 * (v429 ^ 0x10850812)) ^ 0x5E346048) & (v429 ^ 0x10850812) ^ (4 * (v429 ^ 0x10850812)) & 0x178D1810;
  v432 = (v431 ^ 0x16040012) & (16 * v430) ^ v430;
  v433 = ((16 * (v431 ^ 0x1891812)) ^ 0x78D18120) & (v431 ^ 0x1891812) ^ (16 * (v431 ^ 0x1891812)) & 0x178D1810;
  v434 = v432 ^ 0x178D1812 ^ (v433 ^ 0x10810012) & (v432 << 8);
  v435 = v427 ^ (2
               * ((v434 << 16) & 0x178D0000 ^ v434 ^ ((v434 << 16) ^ 0x18120000) & (((v433 ^ 0x70C1812) << 8) & 0x178D0000 ^ 0x12850000 ^ (((v433 ^ 0x70C1812) << 8) ^ 0xD180000) & (v433 ^ 0x70C1812))));
  v436 = LODWORD(STACK[0x1520]) ^ ((STACK[0x15DC] & (LODWORD(STACK[0x1520]) ^ 0x16C3479E) ^ v387 & 0x9BEED3F8) >> 1);
  v437 = STACK[0x14A4];
  v438 = STACK[0x14A4] & 0xFDB04C88 ^ 0x2D200000 ^ (v436 ^ 0x309EB193) & v355;
  v439 = ((((2 * v438) | 0xAA489828) - v438 + 719041516) ^ 0xB5A4441C) << v392 << LODWORD(STACK[0x16F0]);
  v440 = ((((v436 ^ 0xCD2EFD1B) & v348 & 0x6F0E5B61 ^ 0x6D0A1B20)
         + ((v436 ^ 0xCD2EFD1B) & v348 ^ 0x12044041)
         - (((v436 ^ 0xCD2EFD1B) & v348 ^ 0x12044041) & 0x6F0E5B61)) ^ 0x7D0A1B20) >> LODWORD(STACK[0x16D0]) >> LODWORD(STACK[0x1708]);
  v441 = (((v439 ^ 0x952CFE1D) - 402745978) ^ ((v439 ^ 0xBEFDFD1E) - 869296505) ^ ((v439 ^ 0x2BD10303) + 1493395612))
       + (((v440 ^ 0xB17AE618) - 1012363903) ^ ((v440 ^ 0x8A3B34EF) - 118923400) ^ ((v440 ^ 0x3B41D2F7) + 1234418032))
       + 1216530769;
  v442 = (v441 ^ 0xD19C1E7C) & (2 * (v441 & 0xD1D85F7D)) ^ v441 & 0xD1D85F7D;
  v443 = ((2 * (v441 ^ 0x52AC8046)) ^ 0x6E9BE76) & (v441 ^ 0x52AC8046) ^ (2 * (v441 ^ 0x52AC8046)) & 0x8374DF3A;
  v444 = (v443 ^ 0x2609E30) & (4 * v442) ^ v442;
  v445 = ((4 * (v443 ^ 0x81144109)) ^ 0xDD37CEC) & (v443 ^ 0x81144109) ^ (4 * (v443 ^ 0x81144109)) & 0x8374DF38;
  v446 = (v445 ^ 0x1505C20) & (16 * v444) ^ v444;
  v447 = ((16 * (v445 ^ 0x82248313)) ^ 0x374DF3B0) & (v445 ^ 0x82248313) ^ (16 * (v445 ^ 0x82248313)) & 0x8374DF30;
  v448 = v446 ^ 0x8374DF3B ^ (v447 ^ 0x344D300) & (v446 << 8);
  LODWORD(STACK[0x1870]) = v299 ^ 0x3CABEB6C;
  LODWORD(STACK[0x1130]) = v387 ^ 0xD3A469A;
  LODWORD(STACK[0x1554]) = LODWORD(STACK[0x1700]) ^ 0x39EF2D68;
  LODWORD(STACK[0x16E0]) = (v406 + 131513103 - ((2 * v406) & 0xFAD9344) + 3731) ^ 0x7504D233;
  LODWORD(STACK[0x16F8]) = (757729497 - (v422 | 0x2D2A08D9) + (v422 | 0xD2D5F726)) ^ 0x4427BE7F;
  LODWORD(STACK[0x14C4]) = v435 ^ 0x4938E9CB;
  LODWORD(STACK[0x1470]) = v441 ^ (2
                                 * ((v448 << 16) & 0x3740000 ^ v448 ^ ((v448 << 16) ^ 0x5F3B0000) & (((v447 ^ 0x80300C0B) << 8) & 0x3740000 ^ 0x3200000 ^ (((v447 ^ 0x80300C0B) << 8) ^ 0x74DF0000) & (v447 ^ 0x80300C0B)))) ^ 0x5C7C756C;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0x14E4])) - 4))(v437 ^ 0xC0CCAD0D);
}

uint64_t sub_100282D44(int a1)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  int v276;
  unsigned int v277;
  int v278;
  unsigned int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  int v308;
  int v309;
  unsigned int v310;
  int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  unint64_t v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  int v327;
  int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  int v385;
  unsigned int v386;
  int v387;
  int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  int v430;
  unsigned int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  unsigned int v443;
  int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  int v451;
  unsigned int v452;
  int v453;
  unsigned int v454;
  unsigned int v455;
  int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  int v465;
  uint64_t v466;
  int v467;
  int v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t (*v472)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD);

  v2 = STACK[0x1790];
  LODWORD(STACK[0x1708]) = v1;
  LODWORD(STACK[0x1798]) = a1;
  LODWORD(STACK[0x17A8]) = LODWORD(STACK[0x172C]) ^ LODWORD(STACK[0x1810]);
  v3 = LODWORD(STACK[0x1870]) ^ 0x8D2D9467;
  v4 = STACK[0x1870];
  v5 = STACK[0x16B8];
  LODWORD(STACK[0x1650]) = v3;
  v6 = ((((v3 & (v5 ^ 0xBDF93A3D) ^ v4 & 0x30D4AE5A) & 0x7323848E ^ 0x7323808C)
       + (v3 & (v5 ^ 0xBDF93A3D) ^ v4 & 0x30D4AE5A ^ 0x840602)
       - ((v3 & (v5 ^ 0xBDF93A3D) ^ v4 & 0x30D4AE5A ^ 0x840602) & 0x7323848E)) >> 1) ^ 0x39D18367;
  v7 = (v6 - 1926392729 - ((2 * v6) & 0x1A5B28CE)) ^ v5;
  v8 = STACK[0x1818];
  v9 = v1 ^ 0x8D2D9467;
  v10 = LODWORD(STACK[0x17CC]) ^ 0x8D2D9467;
  LODWORD(v5) = STACK[0x1760];
  v11 = STACK[0x1760] & 0x15 ^ 5;
  LODWORD(STACK[0x17EC]) = v11;
  v12 = v5;
  LODWORD(v5) = v5 & 0xA ^ 2;
  LODWORD(STACK[0x16D0]) = v5;
  v13 = ((((v7 & v10 ^ 0xEE364504) - ((2 * (v7 & v10 ^ 0xEE364504)) & 0xFCB2F6C) + 132487094) ^ 0xE9D3D2B2) >> v11 >> v5)
      + ((v7 & (v1 ^ 0x8D2D9467)) << (v8 & 0xC ^ 4) << (v8 & 0x13 ^ 3));
  v14 = v13 - 1926392729 - ((2 * v13) & 0x1A5B28CE);
  v15 = STACK[0x147C];
  v16 = STACK[0x147C];
  LODWORD(STACK[0x14F0]) = v4 ^ LODWORD(STACK[0x147C]);
  v17 = ((v4 ^ v15) & (LODWORD(STACK[0x17E0]) ^ 0x6879E630) ^ v4 & 0xE5547256) >> 1;
  v18 = STACK[0x1894];
  v19 = ((v17 ^ 0x42820823) - 1926392729 - 2 * ((v17 ^ 0x42820823) & STACK[0x1894] ^ v17 & 8)) ^ LODWORD(STACK[0x17E0]);
  v20 = a1 ^ 0x8D2D9467;
  v21 = ((((a1 ^ 0x8D2D9467) & v19 & 0x5E7972C1 ^ 0x5A794281) + ((a1 ^ 0x8D2D9467) & v19 & 0xA1868D3E ^ 0xA0800801) - 1) ^ 0xFAF94A81) << (~(_BYTE)v2 & 5) << (v2 & 0x1A ^ 2);
  v22 = (v19 & v10 ^ 0x8404A040) - ((2 * (v19 & v10 ^ 0x8404A040)) & 0xA04DD3F0);
  v23 = STACK[0x1130];
  v24 = STACK[0x156C];
  LODWORD(STACK[0x1760]) = v12;
  LODWORD(v5) = v12 & 0x1F ^ 7;
  LODWORD(STACK[0x1584]) = v5;
  v25 = v21
      + (((v22 - 802756104) ^ 0x542249B8) >> v5)
      - 1926392729
      - ((2 * (v21 + (((v22 - 802756104) ^ 0x542249B8) >> v5))) & 0x1A5B28CE);
  v26 = ((v24 ^ v16) & (v23 ^ 0x4C39246C) ^ v24 & 0xC114B00A) >> 1;
  v27 = ((v26 ^ 0x40824801) - 1926392729 - 2 * ((v26 ^ 0x40824801) & 0xD2D9477 ^ v26 & 0x10)) ^ v24;
  v28 = ((2 * ((a1 ^ 0x8D2D9467) & v27 ^ 0xA0AC0)) | 0x9A2E0FC8) - ((a1 ^ 0x8D2D9467) & v27 ^ 0xA0AC0);
  v29 = (v27 & v10 & 0x688F4D8 ^ 0x488D4D9) + (v27 & v10 & 0xF9770B27);
  LOBYTE(v27) = v12 & 0xF ^ 7;
  LODWORD(v5) = v2 & 0xB ^ 3;
  LODWORD(STACK[0x17C0]) = v5;
  v30 = v2 & 0x14 ^ 4;
  LODWORD(STACK[0x1748]) = v30;
  v31 = (((v28 + 854128668) ^ 0xCD1D0D24) << v5 << v30) ^ (((v29 - 1) ^ 0x488D4D8) >> v27 >> (v12 & 0x10));
  LODWORD(STACK[0x1460]) = v31;
  v32 = LODWORD(STACK[0x161C]) ^ LODWORD(STACK[0x1440]);
  LODWORD(STACK[0x156C]) = v25 ^ 0x8D2D9467;
  v33 = (v25 ^ 0x8D2D9467) + v32;
  LODWORD(STACK[0x1520]) = v33;
  v34 = 993092481 * v33 - 1926392729 - ((1986184962 * v33) & 0x1A5B28CE);
  v35 = (((LODWORD(STACK[0x1898]) ^ 0x429E8D20) - 1117687072) ^ ((LODWORD(STACK[0x1898]) ^ 0x1EB772C5) - 515338949) ^ ((LODWORD(STACK[0x1898]) ^ 0xD1046B82) + 788239486))
      - (((v34 ^ 0xB31B1333) + 1290071245) ^ ((v34 ^ 0x540E552D) - 1410225453) ^ ((v34 ^ 0x6A38D279) - 1782108793))
      + 316324088;
  v36 = (v35 ^ 0xEC844640) & (2 * (v35 & 0xED254708)) ^ v35 & 0xED254708;
  v37 = ((2 * (v35 ^ 0x2C8CCC50)) ^ 0x835316B0) & (v35 ^ 0x2C8CCC50) ^ (2 * (v35 ^ 0x2C8CCC50)) & 0xC1A98B58;
  v38 = (v37 ^ 0x81018108) & (4 * v36) ^ v36;
  v39 = ((4 * (v37 ^ 0x40A88948)) ^ 0x6A62D60) & (v37 ^ 0x40A88948) ^ (4 * (v37 ^ 0x40A88948)) & 0xC1A98B58;
  v40 = (v39 ^ 0xA00958) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0xC1098218)) ^ 0x1A98B580) & (v39 ^ 0xC1098218) ^ (16 * (v39 ^ 0xC1098218)) & 0xC1A98B50;
  v42 = v40 ^ 0xC1A98B58 ^ (v41 ^ 0x888158) & (v40 << 8);
  v43 = v35 ^ (2
             * ((v42 << 16) & 0x41A90000 ^ v42 ^ ((v42 << 16) ^ 0xB580000) & (((v41 ^ 0xC1210A58) << 8) & 0xC1A90000 ^ 0x40200000 ^ (((v41 ^ 0xC1210A58) << 8) ^ 0x298B0000) & (v41 ^ 0xC1210A58))));
  LODWORD(STACK[0x14E4]) = v34;
  v44 = (((v34 ^ 0xC9FCCB66) + 906179738) ^ ((v34 ^ 0x573C8B00) - 1463585536) ^ ((v34 ^ 0x13EDD401) - 334353409))
      - 2021589295
      + (((v43 ^ 0xE8EE5E12) - 161848269) ^ ((v43 ^ 0xECA71761) - 233624254) ^ ((v43 ^ 0x682F18CB) + 1989878508));
  v45 = (2 * (v44 & 0x92DA29FD)) & (v44 ^ 0xB9D92768) ^ v44 & 0x92DA29FD ^ ((2 * (v44 & 0x92DA29FD)) & 0x21000290 | 0x20000);
  v46 = (2 * (v44 ^ 0xB9D92768)) & 0x2B030E94 ^ 0x29010295 ^ ((2 * (v44 ^ 0xB9D92768)) ^ 0x56061D2A) & (v44 ^ 0xB9D92768);
  v47 = (4 * v45) & 0x2B030E94 ^ v45 ^ ((4 * v45) ^ 0x80000) & v46;
  v48 = (4 * v46) & 0x2B030E94 ^ 0x3030481 ^ ((4 * v46) ^ 0xAC0C3A54) & v46;
  v49 = (16 * v47) & 0x2B030E90 ^ v47 ^ ((16 * v47) ^ 0x200000) & v48;
  v50 = (16 * v48) & 0x2B030E90 ^ 0xB030685 ^ ((16 * v48) ^ 0xB030E950) & v48;
  v51 = v49 ^ 0x29010E95 ^ (v49 << 8) & 0x2B030E00 ^ ((v49 << 8) ^ 0x2000000) & v50;
  v52 = v44 ^ (2
             * ((v51 << 16) & 0x2B030000 ^ v51 ^ ((v51 << 16) ^ 0xE950000) & ((v50 << 8) & 0x2B030000 ^ 0x28010000 ^ ((v50 << 8) ^ 0x30E0000) & v50)));
  v53 = STACK[0x1510];
  LODWORD(STACK[0x1488]) = STACK[0x1510];
  v52 ^= 0x5DF3A0B0u;
  LODWORD(STACK[0x1590]) = v52;
  v54 = v52 ^ v53;
  LODWORD(STACK[0x1510]) = v54;
  LODWORD(STACK[0x1528]) = v25;
  v55 = 993092481
      * ((((v54 ^ 0x13ABA8E8) + 1635369841) ^ ((v54 ^ 0xDD5E79A0) - 1349774791) ^ ((v54 ^ 0xCEF5D148) - 1138246959))
       + (((v25 ^ 0x629B6FC5) - 1654353861) ^ ((v25 ^ 0xEC46C8FA) + 330905350) ^ ((v25 ^ 0x3F03358) - 66073432)))
      - 769312306;
  v56 = (v55 ^ HIWORD(v55)) - v31 - ((v55 ^ HIWORD(v55)) >> 8);
  LODWORD(v5) = v56 - 1926392729 - ((2 * v56) & 0x1A5B28CE);
  LODWORD(STACK[0x1840]) = v14;
  v57 = (((1576292123 - (v14 & 0x68D35544 ^ 0x60831044 | 0x5DF44F1B) + (v14 & 0x68D35544 ^ 0x60831044 | 0xA20BB0E4)) ^ 0x86812BF3)
       - 1) ^ 0x4C089F16 | (((v14 & 0x20520044 ^ 0x9462821D) - 1) & 0xB4720254 | v14 & 0x48815500) ^ 0xF4B04314;
  LODWORD(STACK[0x1498]) = v5;
  LODWORD(STACK[0x1420]) = -1441613820
                         - 1169418999 * v57
                         + ((((v5 ^ 0x966E1E82) + 1771168126) ^ ((v5 ^ 0xD784EC9F) + 679154529) ^ ((v5 ^ 0xCCC7667A)
                                                                                                 + 859347334))
                          - 756973730)
                         * (v57 - 905639805);
  v58 = v3 & (LODWORD(STACK[0x1508]) ^ 0x10B70D37) ^ v4 & (LODWORD(STACK[0x1690]) - 1650834062);
  v59 = ((v58 & 0x858C2317 ^ 0x48C2207) + (v58 & 0x7A73DCE8 ^ 0x8100041) - 1) >> 1;
  v60 = v18;
  v61 = ((v59 ^ 0x40CA5903) - 1926392729 - 2 * ((v59 ^ 0x40CA5903) & v18 ^ v59 & 8)) ^ LODWORD(STACK[0x1508]);
  v62 = STACK[0x1808];
  v63 = STACK[0x1450];
  v64 = v23;
  LODWORD(STACK[0x17E0]) = v23 ^ 0x8D2D9467;
  v65 = v23 & 0xF6F6BD56 ^ 0x54B01C46 ^ (v23 ^ 0x8D2D9467) & (v63 ^ 0x7BDB2931);
  v66 = ((v65 - ((2 * v65) & 0x1729A3C0) - 1953181216) >> 1) ^ 0x2D802CF0;
  v67 = (v66 - 1926392729 - ((2 * v66) & 0x1A5B28CE)) ^ v63;
  LOBYTE(v51) = v8 & 0x1C ^ 4;
  LOBYTE(v66) = ~(_BYTE)v8 & 3;
  LODWORD(STACK[0x1700]) = ((v61 & v10) >> (~(_BYTE)v62 & 2) >> (v62 & 0x1D ^ 5)) ^ 0x8D2D9467 ^ (((((2 * (v61 & v9 ^ 0x1C889084)) & 0xBEE1B90C)
                                                                                                  - (v61 & v9 ^ 0x1C889084)
                                                                                                  - 1601232007) ^ 0xBC07B3FD) << v51 << v66);
  LODWORD(v5) = (LODWORD(STACK[0x15CC]) ^ 0x8D2D9467) & (v4 ^ 0xBEDA5B80) ^ STACK[0x15CC] & 0x33F7CFE7;
  LODWORD(v5) = (((v5 & 0xC9611B9C ^ 0xC860131D) + (v5 & 0x369EE462) - 1) >> 1) ^ 0x64A2CBBD;
  LODWORD(v5) = (v5 - 1926392729 - ((2 * v5) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15CC]);
  v68 = v9;
  LODWORD(STACK[0x173C]) = (((547909374 - (v10 & v67 ^ 0x13107800 | 0x20A86EFE) + (v10 & v67 ^ 0x13107800 | 0xDF579101)) ^ 0xCC47E901) >> v27 >> (v12 & 0x10)) ^ 0x8D2D9467 ^ (((484594005 - (v20 & v67 ^ 0x93004944 | 0x1CE25155) + (v20 & v67 ^ 0x93004944 | 0xE31DAEAA)) ^ 0x701DE7EE) << v66 << v51);
  v69 = ((v5 & v9 ^ 0xA324114) - ((2 * (v5 & v9 ^ 0xA324114)) & 0xD9BEFE86) - 320897213) ^ 0xE6ED3E57;
  LOBYTE(v9) = v2 & 0x1B ^ 3;
  LOBYTE(v31) = ~(_BYTE)v2 & 4;
  v70 = LODWORD(STACK[0x1860]) ^ 0x8D2D9467;
  LOBYTE(v12) = v62 & 0x11 ^ 1;
  LOBYTE(v67) = v62 & 0xE ^ 6;
  v71 = (v69 << v31 << v9) + ((v5 & v70) >> v67 >> v12);
  LODWORD(STACK[0x172C]) = v71 - 1926392729 - ((2 * v71) & 0x1A5B28CE);
  v72 = v16;
  v73 = ((LODWORD(STACK[0x1750]) ^ v16) & (v23 ^ 0x3AF56174) ^ STACK[0x1750] & 0xB7D8F512) >> 1;
  v74 = ((v73 ^ 0x42844A01) - 1926392729 - 2 * ((v73 ^ 0x42844A01) & v60 ^ v73 & 8)) ^ LODWORD(STACK[0x1750]);
  v75 = v2 & 0x15 ^ 5;
  LODWORD(STACK[0x1780]) = v75;
  v76 = v2 & 0xA ^ 2;
  LODWORD(STACK[0x15DC]) = v76;
  LODWORD(STACK[0x1788]) = ((((v74 & v70 & 0x7EBADF58 ^ 0x203A5B49) + (v74 & v70 & 0x814520A7) - 1) ^ 0x203A5B48) >> LODWORD(STACK[0x16D0]) >> LODWORD(STACK[0x17EC])) ^ 0x8D2D9467 ^ (((1032128612 - (v74 & v68 ^ 0xE2009018 | 0x3D850864) + (v74 & v68 ^ 0xE2009018 | 0xC27AF79B)) ^ 0x207A6783) << v76 << v75);
  v77 = STACK[0x16B0];
  v78 = (v4 ^ 0x3FE5969B) & (v77 ^ 0x8D2D9467) ^ v77 & 0xB2C802FC;
  v79 = (((v78 & 0xF1AEF559 ^ 0x7126F551) + (v78 ^ 0x8288002C) - ((v78 ^ 0x8288002C) & 0xF1AEF559)) >> 1) ^ 0x79977A88;
  LODWORD(STACK[0x1668]) = -1926392728;
  v80 = (v79 - 1926392728 + ~((2 * v79) & 0x1A5B28CE)) ^ v77;
  v81 = v8 & 9 ^ 1;
  LODWORD(STACK[0x16B0]) = v81;
  v82 = v8 & 0x16 ^ 6;
  LODWORD(STACK[0x16A4]) = v82;
  v83 = ((((2 * (v20 & v80 ^ 0x86000160)) | 0x3CAAE256) - (v20 & v80 ^ 0x86000160) - 508916011) ^ 0x9855704B) << v82 << v81;
  v84 = v62 & 0xB ^ 3;
  LODWORD(STACK[0x15B0]) = v84;
  v85 = v2;
  v86 = v62 & 0x14 ^ 4;
  LODWORD(STACK[0x1810]) = v86;
  v87 = v83 | (((-1865772138 - (v80 & v10 ^ 0x54050308 | 0x90CA9396) + (v80 & v10 ^ 0x54050308 | 0x6F356C69)) ^ 0x3B306F61) >> v86 >> v84);
  LODWORD(STACK[0x1738]) = v87 - 1926392729 - ((2 * v87) & 0x1A5B28CE);
  v88 = STACK[0xE3C] & 0x828080A4 ^ 0x808080A0 ^ (LODWORD(STACK[0xE3C]) ^ 0x8D2D9467) & (v4 ^ 0xFAD14C3);
  v89 = ((93938852 - v88 + ((2 * v88) & 0xF4CD36B6)) >> 1) ^ 0x28CB210;
  v90 = (v89 - 1926392729 - ((2 * v89) & 0x1A5B28CE)) ^ LODWORD(STACK[0xE3C]);
  v91 = v20;
  v92 = ((v20 & v90) << v9 << v31)
      + ((((v90 & v70 ^ 0x601862C) - ((2 * (v90 & v70 ^ 0x601862C)) & 0x97599C06) - 877867517) ^ 0xCDAD482F) >> (v62 & 0x12 ^ 2) >> (v62 & 0xD ^ 5));
  LODWORD(STACK[0x1508]) = v92 - 1926392729 - ((2 * v92) & 0x1A5B28CE);
  v93 = (((LODWORD(STACK[0x1138]) ^ v72) & (v23 ^ 0x4ECD90C) ^ STACK[0x1138] & 0x89C14D6A) >> 1) ^ 0x44808231;
  v94 = (v93 - 1926392729 - ((2 * v93) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1138]);
  LODWORD(v5) = STACK[0x1500];
  v95 = v5 & 0x42ECD43F ^ 0x2A4401D ^ (v5 ^ 0x8D2D9467) & (v23 ^ 0xCFC14058);
  v96 = STACK[0x1760];
  LOBYTE(v20) = STACK[0x1760] & 0x19 ^ 1;
  LOBYTE(v2) = ~LODWORD(STACK[0x1760]) & 6;
  v97 = (((72233035 - (v94 & v68 ^ 0x72140022 | 0x44E304B) + (v94 & v68 ^ 0x72140022 | 0xFBB1CFB4)) ^ 0x89A5CF96) << v51 << v66) | (((((2 * (v94 & v10 ^ 0x650B5800)) & 0x4DE6C884) - (v94 & v10 ^ 0x650B5800) - 653485123) ^ 0xBC07C3BD) >> v2 >> v20);
  LODWORD(STACK[0x16B8]) = v97 - 1926392729 - ((2 * v97) & 0x1A5B28CE);
  v98 = ((-368702368 - (v95 | 0xEA060C60) + (v95 | 0x15F9F39F)) >> 1) ^ 0xBB893D2;
  v99 = (v98 - 1926392729 - ((2 * v98) & 0x1A5B28CE)) ^ v5;
  v100 = v91;
  LODWORD(STACK[0x1490]) = (((((2 * (v99 & v70 ^ 0x12088880)) | 0x2899158) - (v99 & v70 ^ 0x12088880) + 2126198612) ^ 0x934C402C) >> v67 >> v12) ^ ((((v91 & v99 & 0xAAC3287D ^ 0xA283287D) + (v91 & v99 ^ 0x18501400) - ((v91 & v99 ^ 0x18501400) & 0xAAC3287D)) ^ 0xB2933C7D) << v51 << v66) ^ 0x8D2D9467;
  v101 = ((LODWORD(STACK[0x1578]) ^ v72) & (v4 ^ 0x54EBE9AA) ^ STACK[0x1578] & 0xD9C67DCC) >> 1;
  v102 = ((v101 ^ 0x44820A22) - 1926392729 - 2 * ((v101 ^ 0x44820A22) & 0xD2D9477 ^ v101 & 0x10)) ^ LODWORD(STACK[0x1578]);
  LODWORD(STACK[0x1750]) = ((v102 & v68) << v31 << v9) ^ ((((v102 & v10 & 0xAE77E91 ^ 0x2A51E10)
                                                          + (v102 & v10 & 0xF518816E ^ 0x60000043)
                                                          - 1) ^ 0x62A51E52) >> v2 >> v20) ^ 0x8D2D9467;
  v103 = STACK[0x1430] & 0xCB45992D ^ 0x82459908 ^ (v4 ^ 0x46680D4A) & (LODWORD(STACK[0x1430]) ^ 0x8D2D9467);
  v104 = ((((2 * v103) & 0x4E91257C) - v103 + 1488416065) >> 1) ^ 0x29FBB236;
  v105 = (v104 - 1926392729 - ((2 * v104) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1430]);
  v106 = v62 & 0x19 ^ 1;
  LODWORD(STACK[0x1578]) = v106;
  v107 = ~v62 & 6;
  LODWORD(STACK[0x1450]) = v107;
  v108 = ((v91 & v105) << LODWORD(STACK[0x1748]) << LODWORD(STACK[0x17C0])) | (((((2 * (v105 & v70 ^ 0xC08A010)) | 0xDB85C20)
                                                                               - (v105 & v70 ^ 0xC08A010)
                                                                               + 2032390640) ^ 0x8AD48E00) >> v107 >> v106);
  LODWORD(STACK[0xE28]) = v108 - 1926392729 - ((2 * v108) & 0x1A5B28CE);
  v109 = STACK[0x17E0];
  v110 = v23 & 0xA258E284 ^ 0xFE9D65A8 ^ (LODWORD(STACK[0x1400]) ^ 0x2F7576E3) & STACK[0x17E0];
  v111 = ((((2 * v110) & 0xDEECC55A) - v110 - 1870029486) >> 1) ^ 0x770E3C7F;
  v112 = (v111 - 1926392729 - ((2 * v111) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1400]);
  v113 = (v112 & v68 & 0x2CC4098D ^ 0x2C040904) + (v112 & v68 & 0xD33BF672 ^ 0x50018003);
  v114 = v8;
  v115 = v96 & 0x1D ^ 5;
  LODWORD(STACK[0x1500]) = v115;
  v116 = ((-1398529172 - (v112 & v10 ^ 0x40448401 | 0xACA4236C) + (v112 & v10 ^ 0x40448401 | 0x535BDC93)) ^ 0x131F5892) >> v115;
  v117 = ~v96 & 2;
  LODWORD(STACK[0x13F0]) = v117;
  v118 = (((v113 - 1) ^ 0x7C058906) << (v8 & 0x11 ^ 1) << (v8 & 0xE ^ 6)) | (v116 >> v117);
  LODWORD(STACK[0x1390]) = v118 - 1926392729 - ((2 * v118) & 0x1A5B28CE);
  v119 = v72;
  v120 = (LODWORD(STACK[0x1458]) ^ v72) & (v4 ^ 0x74464AEE) ^ STACK[0x1458] & 0xF96BDE88;
  v121 = v109;
  v122 = v64 & 0xA696BFC1 ^ 0x6009540 ^ (LODWORD(STACK[0x1648]) ^ 0x2BBB2BA6) & v109;
  v123 = (((2 * v122) | 0x5659745C) - v122 - 724351534) >> 1;
  v124 = ((v123 ^ 0x54945D97) - 1926392729 - 2 * ((v123 ^ 0x54945D97) & STACK[0x1894] ^ v123 & 8)) ^ LODWORD(STACK[0x1648]);
  v125 = (((v120 >> 1) ^ 0x4494CA00) - 1926392729 - ((2 * ((v120 >> 1) ^ 0x4494CA00)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1458]);
  v126 = v85 & 0x1D ^ 5;
  LODWORD(STACK[0x1458]) = v126;
  v127 = ~v85 & 2;
  LODWORD(STACK[0x1430]) = v127;
  v128 = ((v100 & v125) << v127 << v126)
       + ((((v125 & v10 & 0x764B0D65 ^ 0x304B0D65) + (v125 & v10 ^ 0x46000010) - ((v125 & v10 ^ 0x46000010) & 0x764B0D65)) ^ 0x304B0D75) >> (v62 & 0xA ^ 2) >> (v62 & 0x15 ^ 5));
  LODWORD(STACK[0x14D8]) = v128 - 1926392729 - ((2 * v128) & 0x1A5B28CE);
  LOBYTE(v128) = ((v96 & 1) - 61 - 2 * (v96 & 1) - 36) ^ 0x1F;
  v129 = (((((LODWORD(STACK[0x1538]) ^ 0xEB2CAB40) & v121 ^ v64 & 0x66013F27) & 0x913CB6F8 ^ 0x913C96F8)
         + ((LODWORD(STACK[0x1538]) ^ 0xEB2CAB40) & v121 ^ v64 & 0x66013F27 ^ 0x24002901)
         - (((LODWORD(STACK[0x1538]) ^ 0xEB2CAB40) & v121 ^ v64 & 0x66013F27 ^ 0x24002901) & 0x913CB6F8)) ^ 0xB13D8BDE) >> (((-42 - (v128 | 0xD6) + (v128 | 0x29)) ^ 0xA8) + (v96 & 1));
  v130 = (v129 - 1926392729 - ((2 * v129) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1538]);
  LOBYTE(v67) = v96 & 0x17 ^ 7;
  v131 = ((((v124 & v68 ^ 0xC275CFFD) - ((2 * (v124 & v68 ^ 0xC275CFFD)) & 0xF68DCB04) - 79239806) ^ 0x39332A7F) << LODWORD(STACK[0x16A4]) << LODWORD(STACK[0x16B0]))
       + (((((2 * (v124 & v70 ^ 0xB0A00598)) & 0x38D7A074) - (v124 & v70 ^ 0xB0A00598) - 476827707) ^ 0x53342A5D) >> (v96 & 8) >> v67);
  LODWORD(STACK[0x16F0]) = v131 - 1926392729 - ((2 * v131) & 0x1A5B28CE);
  LODWORD(v5) = v100;
  LODWORD(STACK[0x1790]) = v85;
  v132 = ~v85 & 7;
  LODWORD(STACK[0x1558]) = v132;
  LOBYTE(v121) = v85 & 0x18;
  v133 = (((-1871246476
          - (v5 & v130 ^ 0x1AA01118 | 0x90770B74)
          + (v5 & v130 ^ 0x1AA01118 | 0x6F88F48B)) ^ 0x7528E593) << v132 << (v85 & 0x18)) | ((((v130 & v70 ^ 0xEF7AFBFF) + 989697817 + ((2 * (v130 & v70)) & 0x8A04D1CE)) ^ 0x2A789318) >> (v62 & 0x1B ^ 3) >> (~(_BYTE)v62 & 4));
  LODWORD(STACK[0x14A4]) = v133 - 1926392729 - ((2 * v133) & 0x1A5B28CE);
  LODWORD(STACK[0x1870]) = v4;
  v134 = STACK[0x15AC];
  v135 = v134 & 0x92CB995A ^ 0x80421058 ^ (v134 ^ 0x8D2D9467) & (v4 ^ 0x1FE60D3D);
  v136 = ((2 * v135) & 0xECF4E41C) - v135;
  v137 = STACK[0x13F8] & 0x3E778C7 ^ 0x2240886 ^ (LODWORD(STACK[0x13F8]) ^ 0x8D2D9467) & (v64 ^ 0x8ECAECA0);
  v138 = ((-1756517666 - (v137 | 0x974DAADE) + (v137 | 0x68B25521)) >> 1) ^ 0x35D9A6F0;
  v139 = (v138 - 1926392729 - ((2 * v138) & 0x1A5B28CE)) ^ LODWORD(STACK[0x13F8]);
  v140 = (v5 & v139 ^ 0x8F800002) + 1219026847 - ((2 * (v5 & v139 ^ 0x8F800002)) & 0x9151BF3E);
  v141 = v10;
  v142 = STACK[0x1644];
  v143 = (v142 ^ v119) & (v4 ^ 0x8519796) ^ v142 & 0x857C03F0;
  v144 = (123207460 - (v139 & v10 ^ 0xC69055BD | 0x757FF24) + (v139 & v10 ^ 0xC69055BD | 0xF8A800DB)) ^ 0x3E385566;
  v145 = v114 & 0x19 ^ 1;
  LODWORD(STACK[0x15CC]) = v145;
  v146 = ~v114 & 6;
  LODWORD(STACK[0x1648]) = v146;
  LOBYTE(v127) = ~(_BYTE)v62 & 7;
  LODWORD(STACK[0x1400]) = ((v140 ^ 0xC728DF9D) << v145 << v146)
                         + (v144 >> v127 >> (v62 & 0x18))
                         - 1926392729
                         - ((2 * (((v140 ^ 0xC728DF9D) << v145 << v146) + (v144 >> v127 >> (v62 & 0x18)))) & 0x1A5B28CE);
  v147 = (((v143 >> 1) ^ 0x42960030) - 1926392729 - ((2 * ((v143 >> 1) ^ 0x42960030)) & 0x1A5B28CE)) ^ v142;
  v148 = ((((v136 - 1987736079) >> 1) ^ 0x44E706F5)
        - 1926392729
        - ((2 * (((v136 - 1987736079) >> 1) ^ 0x44E706F5)) & 0x1A5B28CE)) ^ v134;
  v149 = (((v148 & v70 & 0x8E47251F ^ 0xA430117) + (v148 & v70 & 0x71B8DAE0 ^ 0x10001001) - 1) ^ 0x1A431117) >> (v62 & 0x16 ^ 6) >> (v62 & 9 ^ 1);
  v150 = STACK[0x1434] & 0x41777C6F ^ 0x1146C6B ^ (LODWORD(STACK[0x1434]) ^ 0x8D2D9467) & (v64 ^ 0xCC5AE808);
  v151 = v68;
  v152 = (v148 & v68 & 0x214491E7 ^ 0x9167) + (v148 & v68 ^ 0x21ED0C98) - ((v148 & v68 ^ 0x21ED0C98) & 0x214491E7);
  v153 = ((((2 * v150) | 0x41FCD146) - v150 + 1593939805) >> 1) ^ 0x50678857;
  v154 = (v153 - 1926392729 - ((2 * v153) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1434]);
  v155 = ((v147 & v68 & 0x58E46011 ^ 0x48042011) + (v147 & v68 & 0xA71B9FEE ^ 0x20080A63) - 1) ^ 0x680C2A73;
  v156 = (((v154 & v10 & 0xF5A3F70A ^ 0xF483E609) + (v154 & v10 & 0xA5C08F5) - 1) ^ 0xF483E608) >> (v96 & 8) >> v67;
  v157 = v114;
  v158 = ((-155970774
         - (v5 & v154 ^ 0x40554208 | 0xF6B4132A)
         + (v5 & v154 ^ 0x40554208 | 0x94BECD5)) ^ 0x491EAEDD) << (~(_BYTE)v114 & 5) << (v114 & 0x1A ^ 2);
  v159 = v155 << v31 << v9;
  LODWORD(STACK[0x1778]) = v158 + v156 - 1926392729 - ((2 * (v158 + v156)) & 0x1A5B28CE);
  LODWORD(STACK[0x1644]) = v149 ^ ((v152 ^ 0xA99D7F) << v31 << v9);
  v160 = STACK[0x16EC];
  v161 = v160 & 0xFFF1C651 ^ 0x15E18200 ^ (v160 ^ 0x8D2D9467) & (v64 ^ 0x72DC5236);
  LOBYTE(v31) = v96 & 0x1E ^ 6;
  LOBYTE(v100) = !(v96 & 1);
  LODWORD(STACK[0x15AC]) = v159
                         + ((v147 & v70) >> v31 >> v100)
                         - 1926392729
                         - ((2 * (v159 + ((v147 & v70) >> v31 >> v100))) & 0x1A5B28CE);
  v162 = (((2 * v161) & 0xA58138CA) - v161 - 1388354662) >> 1;
  v163 = ((v162 ^ 0x1AFFB2ED) - 1926392729 - 2 * ((v162 ^ 0x1AFFB2ED) & 0xD2D9477 ^ v162 & 0x10)) ^ v160;
  v164 = v5;
  v165 = ((v5 & v163) << LODWORD(STACK[0x1780]) << LODWORD(STACK[0x15DC]))
       + ((((v70 & v163 & 0x73FBE91E ^ 0x4368E011) + (v70 & v163 & 0x8C0416E1) - 1) ^ 0x4368E010) >> v127 >> (v62 & 0x18));
  LODWORD(STACK[0x1834]) = v165 - 1926392729 - ((2 * v165) & 0x1A5B28CE);
  v166 = STACK[0x1650];
  v167 = STACK[0x1870];
  v168 = ((((v166 & (STACK[0x1178] ^ 0xA6B5A185) ^ v167 & 0x2B9835E2) & 0xB79B9044 ^ 0x4891040)
         + (v166 & (STACK[0x1178] ^ 0xA6B5A185) ^ v167 & 0x2B9835E2 ^ 0xFB568D3F)
         - ((v166 & (STACK[0x1178] ^ 0xA6B5A185) ^ v167 & 0x2B9835E2 ^ 0xFB568D3F) & 0xB79B9044)) >> 1) ^ 0x22E2848C;
  v169 = (v168 - 1926392729 - ((2 * v168) & 0x1A5B28CE)) ^ STACK[0x1178];
  v170 = STACK[0x1524];
  v171 = v64;
  v172 = STACK[0x147C];
  LODWORD(STACK[0x16EC]) = v64 ^ LODWORD(STACK[0x147C]);
  v173 = STACK[0x159C];
  v174 = (v173 ^ 0x8D2D9467) & (v167 ^ 0xD9A8E3B0) ^ v173 & 0x548577D7;
  v175 = ((v170 ^ 0xCA678A32) & (v64 ^ v172) ^ v64 & 0x474A1E54) >> 1;
  LODWORD(STACK[0x1538]) = 221090943;
  v176 = ((v175 ^ 0x2840A22) - 1926392729 - 2 * ((v175 ^ 0x2840A22) & 0xD2D947F ^ v175 & 0x18)) ^ v170;
  v177 = -990457856 - (v5 & v176 ^ 0x288120C0) + ((2 * (v5 & v176 ^ 0x288120C0)) | 0x76124EC8);
  v178 = ((((2 * (v176 & v70 ^ 0x100C0280)) & 0xF22865B8) - (v176 & v70 ^ 0x100C0280) - 2031366877) ^ 0x96E7CFA3) >> LODWORD(STACK[0x15B0]) >> LODWORD(STACK[0x1810]);
  v179 = v157 & 0x1D ^ 5;
  LODWORD(STACK[0x1524]) = v179;
  LOBYTE(v176) = ~(_BYTE)v157 & 2;
  LODWORD(STACK[0x15B0]) = ((v169 & v141) >> (v96 & 0x1B ^ 3) >> (~(_BYTE)v96 & 4)) ^ 0x8D2D9467 ^ ((((v169 & v151 & 0x707B1549 ^ 0x703A0548) + (v169 & v151 & 0x8F84EAB6 ^ 0x400C001) - 1) ^ 0x743AC548) << v176 << v179);
  v180 = ((v174 & 0x58287B9A ^ 0x828390B | v174 & 0xA7D78464) - 1) >> 1;
  v181 = STACK[0x1894];
  v182 = ((v180 ^ 0x61696A6) - 1926392729 - 2 * ((v180 ^ 0x61696A6) & STACK[0x1894] ^ v180 & 8)) ^ v173;
  v183 = (((v177 + 2204) ^ 0x138807A4) << LODWORD(STACK[0x1558]) << v121) + v178;
  LODWORD(STACK[0x13F8]) = v183 - 1926392729 - ((2 * v183) & 0x1A5B28CE);
  v184 = (((-1537746518 - (v182 & v141 ^ 0x200D1441 | 0xA457D9AA) + (v182 & v141 ^ 0x200D1441 | 0x5BA82655)) ^ 0x7BA53214) >> v100 >> v31)
       + (((((2 * (v182 & v151 ^ 0x8E21268)) & 0x20EBC3CC) - (v182 & v151 ^ 0x8E21268) + 1871322649) ^ 0x67680C71) << LODWORD(STACK[0x15CC]) << LODWORD(STACK[0x1648]));
  LODWORD(STACK[0x1810]) = v184 - 1926392729 - ((2 * v184) & 0x1A5B28CE);
  v185 = (((LODWORD(STACK[0x15D0]) ^ v172) & (v64 ^ 0x90BCBE3E) ^ STACK[0x15D0] & 0x1D912A58) >> 1) ^ 0x6808020;
  v186 = (v185 - 1926392729 - ((2 * v185) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15D0]);
  v187 = (((((2 * (v186 & v151 ^ 0x2A603C64)) | 0xEE3A063E) - (v186 & v151 ^ 0x2A603C64) - 1998390047) ^ 0x5D7D3F7B) << (~LODWORD(STACK[0x1790]) & 6) << (STACK[0x1790] & 0x19 ^ 1)) | (((1449734251 - (v186 & v70 ^ 0x81122100 | 0x5669306B) + (v186 & v70 ^ 0x81122100 | 0xA996CF94)) ^ 0x2884EE94) >> LODWORD(STACK[0x1584]));
  LODWORD(STACK[0x1558]) = v187 - 1926392729 - ((2 * v187) & 0x1A5B28CE);
  v188 = v167 & 0x9F5EE482 ^ 0x9146402 ^ (LODWORD(STACK[0x1544]) ^ 0x127370E5) & v166;
  v189 = STACK[0x1638];
  v190 = -1252750333
       - (v64 & 0xFD89D673 ^ 0xF9098221 ^ (LODWORD(STACK[0x1638]) ^ 0x70A44214) & STACK[0x17E0])
       + ((2 * (v64 & 0xFD89D673 ^ 0xF9098221 ^ (LODWORD(STACK[0x1638]) ^ 0x70A44214) & STACK[0x17E0])) & 0x9556D546);
  v191 = ((((2 * v188) & 0x728D3B70) - v188 + 1186554439) >> 1) ^ 0x6150C123;
  v192 = (v191 - 1926392729 - ((2 * v191) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1544]);
  v193 = v62 & 0xF ^ 7;
  LODWORD(STACK[0x1544]) = v193;
  LODWORD(STACK[0x159C]) = v62 & 0x10;
  LODWORD(v5) = (v192 & v141) >> (v62 & 0x10) >> v193;
  LOBYTE(v193) = v157 & 0x14 ^ 4;
  LOBYTE(v100) = v157 & 0xB ^ 3;
  LODWORD(STACK[0x15D0]) = ((v192 & v164) << v193 << v100)
                         + v5
                         - 1926392729
                         - ((2 * (((v192 & v164) << v193 << v100) + v5)) & 0x1A5B28CE);
  LODWORD(v5) = STACK[0x15F0] & 0xD0B2A02 ^ 0xC0B0002 ^ (v167 ^ 0x8026BE65) & (LODWORD(STACK[0x15F0]) ^ 0x8D2D9467);
  LODWORD(v5) = ((((2 * (_DWORD)v5) & 0xD288042E) - v5 - 1766064664) >> 1) ^ 0x4BDCFEF4;
  LODWORD(v5) = (v5 - 1926392729 - ((2 * v5) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15F0]);
  v194 = ((((v190 + 2393) >> 1) ^ 0x60AA418F) - 1926392729 - ((2 * (((v190 + 2393) >> 1) ^ 0x60AA418F)) & 0x1A5B28CE)) ^ v189;
  v195 = (((v194 & v141 & 0x234D88BC ^ 0x2345883D) + (v194 & v141 & 0xDCB27743) - 1) ^ 0x2345883C) >> (v62 & 0x13 ^ 3) >> (v62 & 0xC ^ 4);
  LODWORD(v5) = (((((2 * (v5 & v151 ^ 0xE28170D)) | 0x712E6C10)
                 - (v5 & v151 ^ 0xE28170D)
                 - 949433864) ^ 0x36BF2105) << LODWORD(STACK[0x15DC]) << LODWORD(STACK[0x1780]))
              + (((((2 * (v5 & v70 ^ 0x1010214)) | 0x9E1E13E)
                 - (v5 & v70 ^ 0x1010214)
                 - 82899103) ^ 0x5F1F28B) >> (~(_BYTE)v96 & 3) >> (v96 & 0x1C ^ 4));
  LODWORD(STACK[0x1584]) = v5 - 1926392729 - ((2 * v5) & 0x1A5B28CE);
  LODWORD(v5) = v167 & 0x95938A19 ^ 0x91800A11 ^ (LODWORD(STACK[0x1770]) ^ 0x18BE1E7E) & v166;
  LODWORD(v5) = ((_DWORD)v5 + 1587881429 - ((2 * (_DWORD)v5) & 0xBD4A67FC) + 3625) >> 1;
  LODWORD(v5) = ((v5 ^ 0x25125CF7) - 1926392729 - 2 * ((v5 ^ 0x25125CF7) & v181 ^ v5 & 8)) ^ LODWORD(STACK[0x1770]);
  v196 = v172;
  v197 = v164;
  v198 = (((LODWORD(STACK[0x14B0]) ^ v172) & (v64 ^ 0x1D4AB7D2) ^ STACK[0x14B0] & 0x906723B4) >> 1) ^ 0x40128012;
  v199 = (v198 - 1926392729 - ((2 * v198) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14B0]);
  v200 = (((v194 & v164 & 0x7C8285F2 ^ 0x78028172) + (v194 & v164 ^ 0x4C00684) - ((v194 & v164 ^ 0x4C00684) & 0x7C8285F2)) ^ 0x78428376) << (v157 & 0xD ^ 5) << (v157 & 0x12 ^ 2);
  v201 = (((2 * (v164 & v5 ^ 0x446CA24)) & 0xF2240D08) - (v164 & v5 ^ 0x446CA24) - 2031224453) ^ 0x82AB335F;
  LOBYTE(v164) = STACK[0x1790];
  LODWORD(STACK[0x1780]) = v200 ^ 0x8D2D9467 ^ v195;
  v202 = (v199 & v70) >> LODWORD(STACK[0x1500]) >> LODWORD(STACK[0x13F0]);
  v203 = STACK[0x1664];
  v204 = v167 & 0x981145C5 ^ 0x80100545 ^ (LODWORD(STACK[0x1664]) ^ 0x153CD1A2) & v166;
  v205 = 1707713310 - (v204 | 0x65C9A31E) + (v204 | 0x9A365CE1);
  v206 = (v199 & v151) << LODWORD(STACK[0x15CC]) << LODWORD(STACK[0x1648]);
  v207 = v141;
  LOBYTE(v204) = v62 & 0x1A ^ 2;
  LOBYTE(v127) = ~(_BYTE)v62 & 5;
  LODWORD(v5) = (v201 << (~(_BYTE)v164 & 3) << (v164 & 0x1C ^ 4)) | ((v5 & v141) >> v204 >> v127);
  LODWORD(STACK[0x13F0]) = v5 - 1926392729 - ((2 * v5) & 0x1A5B28CE);
  LODWORD(STACK[0x1500]) = v206 ^ 0x8D2D9467 ^ v202;
  LODWORD(v5) = (((v205 >> 1) ^ 0x4913AEF0) - 1926392729 - 2 * (((v205 >> 1) ^ 0x4913AEF0) & v181 ^ (v205 >> 1) & 8)) ^ v203;
  v208 = v151;
  LOBYTE(v31) = STACK[0x16D0];
  LOBYTE(v202) = STACK[0x17EC];
  LODWORD(STACK[0x1664]) = (((((2 * (v5 & v141 ^ 0xC22008)) & 0xCA8768AA)
                            - (v5 & v141 ^ 0xC22008)
                            + 448547754) ^ 0x1A7E6BA2) >> v31 >> v202) ^ 0x8D2D9467 ^ ((((v5 & v151 & 0x7F893BF ^ 0x7F893AE)
                                                                                       + (v5 & v151 ^ 0x60020051)
                                                                                       - ((v5 & v151 ^ 0x60020051) & 0x7F893BF)) ^ 0x67FA93EE) << LODWORD(STACK[0x1458]) << LODWORD(STACK[0x1430]));
  LODWORD(v5) = ((LODWORD(STACK[0x1800]) ^ v196) & (v171 ^ 0xA0BF6D60) ^ STACK[0x1800] & 0x2D92F906) >> 1;
  LODWORD(v5) = ((v5 ^ 0x6804803) + LODWORD(STACK[0x1668]) + ~(2 * ((v5 ^ 0x6804803) & v181 ^ v5 & 8))) ^ LODWORD(STACK[0x1800]);
  v209 = (((((2 * (v197 & v5 ^ 0x8020)) | 0x36827BEC) - (v197 & v5 ^ 0x8020) - 457260534) ^ 0x1B41BDD6) << v193 << v100)
       + (((((2 * (v5 & v70 ^ 0x28010003)) | 0xA6232C1A)
          - (v5 & v70 ^ 0x28010003)
          + 753822195) ^ 0xFB10960E) >> v127 >> v204);
  v210 = v209 - 1926392729 - ((2 * v209) & 0x1A5B28CE);
  v211 = (((v171 & 0xF36FDF80 ^ 0x92680B00 ^ (LODWORD(STACK[0x1710]) ^ 0x7E424BE7) & STACK[0x17E0])
         - ((2 * (v171 & 0xF36FDF80 ^ 0x92680B00 ^ (LODWORD(STACK[0x1710]) ^ 0x7E424BE7) & STACK[0x17E0])) & 0xC9E7DFE8)
         - 453775372) >> 1) ^ 0x7BDB387A;
  v212 = (v211 - 1926392729 - ((2 * v211) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1710]);
  v213 = (LODWORD(STACK[0x144C]) ^ 0x8D2D9467) & (v167 ^ 0x2D1919D9) ^ STACK[0x144C] & 0xA0348DBE;
  v214 = (((v213 & 0x2CC82114 ^ 0xCC82114) + (v213 ^ 0x20108400) - ((v213 ^ 0x20108400) & 0x2CC82114)) >> 1) ^ 0x467E1099;
  v215 = (v214 - 1926392729 - ((2 * v214) & 0x1A5B28CE)) ^ LODWORD(STACK[0x144C]);
  v216 = (((-808348137 - (v197 & v215 ^ 0x98021030 | 0xCFD19617) + (v197 & v215 ^ 0x98021030 | 0x302E69E8)) ^ 0xA82C79D8) << LODWORD(STACK[0x1748]) << LODWORD(STACK[0x17C0])) ^ (((-1806901137 - (v215 & v207 ^ 0x84200400 | 0x944CE06F) + (v215 & v207 ^ 0x84200400 | 0x6BB31F90)) ^ 0xEF931B90) >> v31 >> v202);
  LOBYTE(v193) = STACK[0x1524];
  v217 = ((((v212 & v70 & 0xFDD454DF ^ 0x55C4045D) + (v212 & v70 & 0x22BAB20 ^ 0x200021) - 1) ^ 0x55E4047D) >> (~(_BYTE)v62 & 3) >> (v62 & 0x1C ^ 4))
       + ((v212 & v151) << v193 << v176);
  STACK[0x1178] = v217 - 1926392729 - ((2 * v217) & 0x1A5B28CE);
  v218 = STACK[0xE1C];
  v219 = STACK[0x16EC] & (LODWORD(STACK[0xE1C]) ^ 0x6FFF28D2);
  v220 = v171;
  LODWORD(STACK[0x1130]) = v171;
  v221 = STACK[0x15E8];
  LODWORD(v5) = (v221 ^ v196) & (v171 ^ 0xB0A42BB8) ^ v221 & 0x3D89BFDE;
  v222 = ((((v219 ^ v171 & 0xE2D2BCB4) >> 1) ^ 0x40004A12)
        - 1926392729
        - ((2 * (((v219 ^ v171 & 0xE2D2BCB4) >> 1) ^ 0x40004A12)) & 0x1A5B28CE)) ^ v218;
  v223 = ((((STACK[0x14F0] & (LODWORD(STACK[0x13B8]) ^ 0x477FF850) ^ v167 & 0xCA526C36) >> 1) ^ 0x44000213)
        - 1926392729
        - ((2 * (((STACK[0x14F0] & (LODWORD(STACK[0x13B8]) ^ 0x477FF850) ^ v167 & 0xCA526C36) >> 1) ^ 0x44000213)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x13B8]);
  v224 = ((v197 & v222) << ((v164 & 1) == 0) << (v164 & 0x1E ^ 6)) | ((v207 & v222) >> (STACK[0x1760] & 0x18) >> (~LODWORD(STACK[0x1760]) & 7));
  LODWORD(STACK[0x1158]) = v224 - 1926392729 - ((2 * v224) & 0x1A5B28CE);
  v225 = (v223 & v151) << v176 << v193;
  v226 = (((v5 >> 1) ^ 0x684CA23)
        - 1926392729
        - 2 * (((v5 >> 1) ^ 0x684CA23) & 0xD2D9477 ^ (v5 >> 1) & 0x10)) ^ v221;
  v227 = ((((v223 & v70 & 0xF5BD9626 ^ 0xF4BC9222) + (v223 & v70 ^ 0xB012C84) - ((v223 & v70 ^ 0xB012C84) & 0xF5BD9626)) ^ 0xFEBCBAA2) >> v204 >> v127)
       + v225;
  v228 = v227 - 1926392729 - ((2 * v227) & 0x1A5B28CE);
  LODWORD(STACK[0x1648]) = v228;
  v229 = ((((v197 & v226 & 0x60B24ACA ^ 0x2092428B) + (v197 & v226 & 0x9F4DB535) - 1) ^ 0x2092428A) << ((v157 & 1) == 0) << (v157 & 0x1E ^ 6))
       + ((((v226 & v207 & 0xF65E340B ^ 0x565C140B)
          + (v226 & v207 ^ 0xA1026010)
          - ((v226 & v207 ^ 0xA1026010) & 0xF65E340B)) ^ 0x575C541B) >> LODWORD(STACK[0x1544]) >> LODWORD(STACK[0x159C]));
  LODWORD(STACK[0x1770]) = v229 - 1926392729 - ((2 * v229) & 0x1A5B28CE);
  v230 = ((LODWORD(STACK[0x1838]) ^ LODWORD(STACK[0x17BC]))
        - 1926392729
        - ((2 * (LODWORD(STACK[0x1838]) ^ LODWORD(STACK[0x17BC]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x160C]);
  v231 = (v230 - 1926392729 - ((2 * v230) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15C0]);
  v232 = (v231 - 1926392729 - ((2 * v231) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1488]);
  v233 = LODWORD(STACK[0x1850]) ^ (v232 - 1926392729 - ((2 * v232) & 0x1A5B28CE));
  LODWORD(v5) = STACK[0x1560];
  v234 = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1560]);
  v235 = STACK[0x1410];
  LODWORD(STACK[0x16EC]) = STACK[0x1410];
  v236 = (v234 - 1926392729 - ((2 * v234) & 0x1A5B28CE)) ^ v235;
  v237 = STACK[0x1554];
  v238 = (v236 - 1926392729 - ((2 * v236) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1554]);
  v239 = (v238 - 1926392729 - ((2 * v238) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1154]);
  v240 = LODWORD(STACK[0xE48]) ^ (v239 - 1926392729 - ((2 * v239) & 0x1A5B28CE));
  v241 = (v240 - 1926392729 - ((2 * v240) & 0x1A5B28CE)) ^ LODWORD(STACK[0x18A8]);
  v242 = (v241 - 1926392729 - ((2 * v241) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1698]);
  v243 = (v242 - 1926392729 - ((2 * v242) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17B0]);
  v244 = (v243 - 1926392729 - ((2 * v243) & 0x1A5B28CE)) ^ STACK[0x14B8];
  v245 = (v244 - 1926392729 - ((2 * v244) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1688]);
  v246 = (v245 - 1926392729 - ((2 * v245) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17D8]);
  v247 = (v246 - 1926392729 - ((2 * v246) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1898]);
  v248 = (v247 - 1926392729 - ((2 * v247) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1678]);
  v249 = (v248 - 1926392729 - ((2 * v248) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16E0]);
  v250 = STACK[0xE4C];
  v251 = (v249 - 1926392729 - ((2 * v249) & 0x1A5B28CE)) ^ LODWORD(STACK[0xE4C]);
  v252 = (v251 - 1926392729 - ((2 * v251) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14C4]);
  v253 = (v252 - 1926392729 - ((2 * v252) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1700]);
  v254 = (v253 - 1926392729 - ((2 * v253) & 0x1A5B28CE)) ^ LODWORD(STACK[0x172C]);
  v255 = (v254 - 1926392729 - ((2 * v254) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1738]);
  v256 = (v255 - 1926392729 - ((2 * v255) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16B8]);
  v257 = (v256 - 1926392729 - ((2 * v256) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1750]);
  v258 = (v257 - 1926392729 - ((2 * v257) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16F0]);
  v259 = (v258 - 1926392729 - ((2 * v258) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1390]);
  v260 = (v259 - 1926392729 - ((2 * v259) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1840]);
  v261 = (v260 - ((v260 - 1926392729 - ((2 * v260) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15AC]))) ^ (1926392729
                                                                                              - (((LODWORD(STACK[0x15AC]) ^ 0xACD21359)
                                                                                                + 1395518631) ^ ((LODWORD(STACK[0x15AC]) ^ 0x5DFE17D9) - 1576933337) ^ ((LODWORD(STACK[0x15AC]) ^ 0x7C0190E7) - 2080477415)));
  v262 = ((v261 - 1926392729 - ((2 * v261) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15AC])) + v260;
  v263 = (v262 - 1926392729 - ((2 * v262) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1778]);
  v264 = (v263 - 1926392729 - ((2 * v263) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15B0]);
  v265 = (v264 - 1926392729 - ((2 * v264) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1810]);
  v266 = STACK[0x15D0];
  v267 = (v265 - 1926392729 - ((2 * v265) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15D0]);
  v268 = (v267 + LODWORD(STACK[0x1668]) + ~((2 * v267) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1780]);
  v269 = (v268 - 1926392729 - ((2 * v268) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1500]);
  LODWORD(STACK[0x1668]) = v210;
  v270 = (v269 - 1926392729 - ((2 * v269) & 0x1A5B28CE)) ^ v210;
  v271 = STACK[0x14C8];
  v272 = STACK[0x1650];
  LODWORD(STACK[0x1638]) = v228 ^ v216 ^ 0x8D2D9467 ^ (v270 - 1926392729 - ((2 * v270) & 0x1A5B28CE));
  v273 = (v220 ^ 0xC2DA9934) & (LODWORD(STACK[0x1540]) ^ LODWORD(STACK[0x147C]));
  v274 = ((((v272 & (v271 ^ 0xFE37938) ^ v167 & 0x82CEED5F) & 0x56BA7F1B ^ 0x56303F1B)
         + ((v272 & (v271 ^ 0xFE37938) ^ v167 & 0x82CEED5F) & 0xA94580E4 ^ 0x80008045)
         - 1) >> 1) ^ 0x2B1E1D8C;
  v275 = (v274 - 1926392729 - ((2 * v274) & 0x1A5B28CE)) ^ v271;
  v276 = (v275 & v208) << (v164 & 0xE ^ 6) << (v164 & 0x11 ^ 1);
  v277 = (v275 & v70) >> v31 >> LODWORD(STACK[0x17EC]);
  v278 = STACK[0x15F8];
  v279 = v167 & 0xE6668E21 ^ 0x84048621 ^ v272 & (LODWORD(STACK[0x15F8]) ^ 0x6B4B1A46);
  v280 = STACK[0x1538];
  v281 = ((((v273 ^ STACK[0x1540] & 0x4FF70D52) >> 1) ^ 0x6928221)
        - 1926392729
        - 2
        * ((((v273 ^ STACK[0x1540] & 0x4FF70D52) >> 1) ^ 0x6928221) & STACK[0x1538] ^ ((v273 ^ STACK[0x1540] & 0x4FF70D52) >> 1) & 0x18)) ^ LODWORD(STACK[0x1540]);
  LODWORD(STACK[0x1808]) = v62;
  LODWORD(STACK[0x1818]) = v157;
  v282 = ((v70 & v281) >> (v62 & 0x1E ^ 6) >> ((v62 & 1) == 0)) | ((v281 & v208) << (v157 & 0xF ^ 7) << (v157 & 0x10));
  v283 = v282 - 1926392729 - ((2 * v282) & 0x1A5B28CE);
  LODWORD(STACK[0x14F0]) = v276 + v277 - 1926392729 - ((2 * (v276 + v277)) & 0x1A5B28CE);
  v284 = ((-457173388 - (v279 | 0xE4C01674) + (v279 | 0x1B3FE98B)) >> 1) ^ 0xD8FF5C5;
  v285 = (v284 - 1926392729 - ((2 * v284) & 0x1A5B28CE)) ^ v278;
  v286 = ((((v285 & v208 & 0xAFBD6CD7 ^ 0xAFB14887) + (v285 & v208 ^ 0xE2470) - ((v285 & v208 ^ 0xE2470) & 0xAFBD6CD7)) ^ 0xAFB348A7) << LODWORD(STACK[0x16B0]) << LODWORD(STACK[0x16A4])) ^ (((((2 * (v285 & v70 ^ 0xEB8401D9)) | 0xCBB01996) - (v285 & v70 ^ 0xEB8401D9) - 1708657867) ^ 0x8E5C0D12) >> LODWORD(STACK[0x1578]) >> LODWORD(STACK[0x1450]));
  v287 = STACK[0x1528];
  v288 = (((v286 ^ 0xE3A2C12A) - 1854887245) ^ ((v286 ^ 0x4CDB3022) + 1040800699) ^ ((v286 ^ 0xAF79F108) - 575956335))
       - 1911257603
       + (LODWORD(STACK[0x1528]) ^ ((v283 ^ 0x96DE0C2E)
                                  + 469137063
                                  - ((2 * (v283 ^ 0x96DE0C2E) + 496092288) & 0x1A5B28CE)));
  v289 = STACK[0x1460];
  LODWORD(STACK[0x1898]) = LODWORD(STACK[0x1460]) ^ 0x8D2D9467;
  v290 = (v288 - 1926392729 - ((2 * v288) & 0x1A5B28CE)) ^ v289 ^ 0x8D2D9467;
  v291 = STACK[0x17A8];
  v292 = LODWORD(STACK[0x17A8]) ^ LODWORD(STACK[0x15E4]);
  v293 = (v292 & 0x11101000 ^ 0x44148CF3) + (v292 & 0xE10008 ^ 0x410001) - 2;
  v294 = ((v293 & 0x1901000 ^ 0x8E8AA061) + (v293 & 0x10610008 ^ 0x10004201) - 2) ^ 0x95F87220 | ((v292 & 0xA01008 ^ 0x20A41C08)
                                                                                                - (v292 & 0xA01008)
                                                                                                + (v292 & 0x11F11008 ^ 0x10000)) & 0x35F577B8 ^ 0x30751C01;
  v295 = (v294 - 1926392729 - ((2 * v294) & 0x1A5B28CE)) ^ v283;
  LODWORD(STACK[0x17E0]) = v286
                         + 15135126
                         + (v287 ^ (v295 + 469137063 - 2 * ((v295 + 248046144) & 0xD2D9477 ^ v295 & 0x10)));
  v296 = LODWORD(STACK[0x16C0]) ^ LODWORD(STACK[0x16D8]);
  LODWORD(STACK[0x1800]) = v296 ^ 0x8D2D9467 ^ LODWORD(STACK[0x14E8]);
  v297 = STACK[0x14E4];
  v298 = ((v297 ^ 0x1345668) - 20207208) ^ ((v297 ^ 0x6A8AC49C) - 1787479196) ^ ((v297 ^ 0xE6930693) + 426572141);
  v299 = ((LODWORD(STACK[0x1440]) ^ 0xAF31EC24) + 1355682780) ^ ((LODWORD(STACK[0x1440]) ^ 0x4BA8BECB) - 1269350091) ^ ((LODWORD(STACK[0x1440]) ^ 0x69B4C688) - 1773454984);
  LODWORD(STACK[0x15F0]) = LODWORD(STACK[0x1520]) ^ v266 ^ 0x8D2D9467 ^ (1603984513 * v298
                                                                       - ((523614466 * v298 + 485267406) & 0x1A5B28CE)
                                                                       + 1537466446);
  v300 = (((STACK[0x13F8] & 0x30600A58 ^ 0x21783511) + (STACK[0x13F8] & 0x48034026 ^ 0x48010025) + 2147483646) & 0x7863FFFE ^ 0x18237F2C)
       + ((-1574558605
         - (STACK[0x13F8] & 0x78634A7E ^ 0x20034250 | 0xA2262473)
         + (STACK[0x13F8] & 0x78634A7E ^ 0x20034250 | 0x5DD9DB8C)) ^ 0x75FB99BA);
  v301 = (v297 ^ 0x560D9D58) & (v300 ^ 0xB9C30E22) ^ v300 & 0x24DFF6C0;
  v302 = v289;
  v303 = 853040583 * ((v297 ^ HIWORD(v297) ^ 0x8D2D194A) - v289 + (((v297 ^ HIWORD(v297)) >> 8) ^ 0xFF72D2E6))
       + 853040583;
  v304 = (v303 ^ HIWORD(v303))
       - (((v286 ^ 0x2ECA43DC) + 1545087045) ^ ((v286 ^ 0x6155177E) + 327646439) ^ ((v286 ^ 0x4F9F54A2) + 1028472635))
       + ((v303 ^ HIWORD(v303)) >> 8)
       - 1157117050;
  v305 = (v304 ^ 0xA7C02103) & (2 * (v304 & 0xB7CAA013)) ^ v304 & 0xB7CAA013;
  v306 = ((2 * (v304 ^ 0xEEC56103)) ^ 0xB21F8220) & (v304 ^ 0xEEC56103) ^ (2 * (v304 ^ 0xEEC56103)) & 0x590FC110;
  v307 = (v306 ^ 0x100F8000) & (4 * v305) ^ v305;
  v308 = ((4 * (v306 ^ 0x49004110)) ^ 0x643F0440) & (v306 ^ 0x49004110) ^ (4 * (v306 ^ 0x49004110)) & 0x590FC110;
  v309 = v307 ^ 0x590FC110 ^ (v308 ^ 0x400F0000) & (16 * v307);
  v310 = (16 * (v308 ^ 0x1900C110)) & 0x590FC110 ^ 0x4903C010 ^ ((16 * (v308 ^ 0x1900C110)) ^ 0x90FC1100) & (v308 ^ 0x1900C110);
  v311 = (v309 << 8) & 0x590FC100 ^ v309 ^ ((v309 << 8) ^ 0xFC11000) & v310;
  v312 = v304 ^ (2
               * ((v311 << 16) & 0x590F0000 ^ v311 ^ ((v311 << 16) ^ 0x41100000) & ((v310 << 8) & 0x590F0000 ^ 0x500E0000 ^ ((v310 << 8) ^ 0xFC10000) & v310)));
  v313 = 1461491497
       * (((v312 ^ 0x7ABF14F6) - 1648730786) ^ ((v312 ^ 0xAA273E06) + 1294104494) ^ ((v312 ^ 0x454F08C3) - 1572191895))
       - 1155955329;
  v314 = (v313 - HIWORD(v313)) ^ ((v313 - HIWORD(v313)) >> 8);
  LODWORD(STACK[0x1560]) = v5;
  v315 = (v5 & 0x50702113 ^ 0x1089A906) + (v5 & 0xAD0444E8 ^ 0xA4000089) - 1;
  v316 = ((v315 & 0xF5140C5D ^ 0xA4160048) + (v315 ^ 0x51A12D37) - ((v315 ^ 0x51A12D37) & 0xF51C845D)) ^ 0x6066697C | ((v5 & 0x16420A1 ^ 0x343BA24) + (v5 & 0xFC10455A ^ 0x28000103) - 1) & 0xFD7FFFFF ^ 0xA467BF45;
  v317 = (v314 - 1926392729 - ((2 * v314) & 0x1A5B28CE)) ^ v283;
  v318 = (v250 ^ 0x8D2D9467) - v317;
  v317 *= 343072051;
  LODWORD(STACK[0x1710]) = v318 + v317 * v316 - 1926392729 - ((2 * (v318 + v317 * v316)) & 0x1A5B28CE);
  HIDWORD(v319) = v313 >> 7;
  LODWORD(v319) = ((1375731712
                  * (((v312 ^ 0xD1ABC0DC) + 917408120) ^ ((v312 ^ 0x15A8AEA0) - 223484148) ^ ((v312 ^ 0x51D44C4F)
                                                                                            - 1227815451))) | (v313 >> 7))
                - 0x2000000;
  HIDWORD(v319) = v319 >> 22;
  LODWORD(v319) = HIDWORD(v319);
  v320 = (LODWORD(STACK[0x1688]) ^ 0x8D2D9467) - (v319 >> 3) + v313;
  LODWORD(STACK[0x1524]) = v320 - 1926392729 - ((2 * v320) & 0x1A5B28CE);
  LODWORD(STACK[0x1450]) = v296 ^ LODWORD(STACK[0x1530]) ^ 0x601E5380 ^ (v290 - 1926392729 - ((2 * v290) & 0x1A5B28CE));
  v321 = v301 & 0xC09C62D6 ^ 0x40044006 ^ (v301 ^ 0xDF3CF9FF) & (v297 ^ 0x4DB1F6B1);
  v322 = (((v297 ^ 0xF902C66F) + 117258641) ^ ((v297 ^ 0x81AD5749) + 2119346359) ^ ((v297 ^ 0xF5820541) + 176028351))
       + (((v216 ^ 0x30913B16) + 1111707791) ^ ((v216 ^ 0xDCBDAFC1) - 1368406950) ^ ((v216 ^ 0xEC2C94D7) - 1627455664))
       + ((1229631659 - (v321 | 0x494AB0AB) + (v321 | 0xB6B54F54)) ^ 0xC952907B);
  LODWORD(STACK[0x16D8]) = v322 - 1484210891 - ((2 * v322 + 347492766) & 0x1A5B28CE);
  LODWORD(STACK[0x1578]) = LODWORD(STACK[0x16B8]) ^ 0x8D2D9467 ^ v317 ^ HIWORD(v317) ^ ((v317 ^ HIWORD(v317))
                                                                                      - 1926392729
                                                                                      - ((2 * (v317 ^ HIWORD(v317))) & 0x1A5B28CE));
  v323 = (((v237 ^ 0x6125F3A6) - 1629877158) ^ ((v237 ^ 0x7DAAD078) - 2108346488) ^ ((v237 ^ 0x91A2B7B9) + 1851607111))
       - 1193310682;
  v324 = (v323 ^ 0x820E0D18) & (2 * (v323 & 0xD44E0E41)) ^ v323 & 0xD44E0E41;
  v325 = ((2 * (v323 ^ 0x8A8E199A)) ^ 0xBD802FB6) & (v323 ^ 0x8A8E199A) ^ (2 * (v323 ^ 0x8A8E199A)) & 0x5EC017DA;
  v326 = (v325 ^ 0x10000341) & (4 * v324) ^ v324;
  v327 = ((4 * (v325 ^ 0x42401049)) ^ 0x7B005F6C) & (v325 ^ 0x42401049) ^ (4 * (v325 ^ 0x42401049)) & 0x5EC017D8;
  v328 = (v327 ^ 0x5A001743) & (16 * v326) ^ v326;
  v329 = ((16 * (v327 ^ 0x4C00093)) ^ 0xEC017DB0) & (v327 ^ 0x4C00093) ^ (16 * (v327 ^ 0x4C00093)) & 0x5EC017D0;
  v330 = v328 ^ 0x5EC017DB ^ (v329 ^ 0x4C00154B) & (v328 << 8);
  LODWORD(STACK[0x16D0]) = v323 ^ (2
                                 * ((v330 << 16) & 0x5EC00000 ^ v330 ^ ((v330 << 16) ^ 0x17DB0000) & (((v329 ^ 0x12C0024B) << 8) & 0x5EC00000 ^ 0x1EC00000 ^ (((v329 ^ 0x12C0024B) << 8) ^ 0xC0170000) & (v329 ^ 0x12C0024B))));
  v299 -= 1628354309;
  v331 = (v299 ^ 0xCC3C4B68) & (2 * (v299 & 0xEE3C4B6C)) ^ v299 & 0xEE3C4B6C;
  v332 = ((2 * (v299 ^ 0x5834DFB8)) ^ 0x6C1129A8) & (v299 ^ 0x5834DFB8) ^ (2 * (v299 ^ 0x5834DFB8)) & 0xB60894D4;
  v333 = (v332 ^ 0x22088084) & (4 * v331) ^ v331;
  v334 = ((4 * (v332 ^ 0x92089454)) ^ 0xD8225350) & (v332 ^ 0x92089454) ^ (4 * (v332 ^ 0x92089454)) & 0xB60894D4;
  v335 = (v334 ^ 0x90001044) & (16 * v333) ^ v333;
  v336 = ((16 * (v334 ^ 0x26088484)) ^ 0x60894D40) & (v334 ^ 0x26088484) ^ (16 * (v334 ^ 0x26088484)) & 0xB60894D0;
  v337 = v335 ^ 0xB60894D4 ^ (v336 ^ 0x20080494) & (v335 << 8);
  v338 = v299 ^ (2
               * ((v337 << 16) & 0x36080000 ^ v337 ^ ((v337 << 16) ^ 0x14D40000) & (((v336 ^ 0x96009094) << 8) & 0xB6080000 ^ 0x36080000 ^ (((v336 ^ 0x96009094) << 8) ^ 0x8940000) & (v336 ^ 0x96009094))));
  v339 = v296 ^ LODWORD(STACK[0x1670]) ^ v302;
  v340 = ((993092481 * (LODWORD(STACK[0x1510]) + LODWORD(STACK[0x156C]))) ^ ((993092481
                                                                                          * (LODWORD(STACK[0x1510])
                                                                                           + LODWORD(STACK[0x156C]))) >> 16))
       - (((v302 ^ 0xCF3A209F) - 1108849912) ^ ((v302 ^ 0xDBAFA97A) - 1451375901) ^ ((v302 ^ 0x149589E5) + 1715987070))
       - (((993092481 * (LODWORD(STACK[0x1510]) + LODWORD(STACK[0x156C]))) ^ ((993092481
                                                                                           * (LODWORD(STACK[0x1510])
                                                                                            + LODWORD(STACK[0x156C]))) >> 16)) >> 8)
       + 2039679332;
  v341 = (v340 ^ 0xF1BE70A4) & (2 * (v340 & 0xF93F6235)) ^ v340 & 0xF93F6235;
  v342 = ((2 * (v340 ^ 0x3382F4C4)) ^ 0x957B2DE2) & (v340 ^ 0x3382F4C4) ^ (2 * (v340 ^ 0x3382F4C4)) & 0xCABD96F0;
  v343 = (v342 ^ 0x803900E0) & (4 * v341) ^ v341;
  v344 = ((4 * (v342 ^ 0x4A849211)) ^ 0x2AF65BC4) & (v342 ^ 0x4A849211) ^ (4 * (v342 ^ 0x4A849211)) & 0xCABD96F0;
  v345 = (v344 ^ 0xAB412C0) & (16 * v343) ^ v343;
  v346 = ((16 * (v344 ^ 0xC0098431)) ^ 0xABD96F10) & (v344 ^ 0xC0098431) ^ (16 * (v344 ^ 0xC0098431)) & 0xCABD96F0;
  v347 = v345 ^ 0xCABD96F1 ^ (v346 ^ 0x8A990600) & (v345 << 8);
  v348 = v340 ^ (2
               * ((v347 << 16) & 0x4ABD0000 ^ v347 ^ ((v347 << 16) ^ 0x16F10000) & (((v346 ^ 0x402490E1) << 8) & 0x4ABD0000 ^ 0x42290000 ^ (((v346 ^ 0x402490E1) << 8) ^ 0x3D960000) & (v346 ^ 0x402490E1))));
  v349 = 853040583
       * (((v348 ^ 0x8DB24987) - 1773769271) ^ ((v348 ^ 0xF169D915) - 358744741) ^ ((v348 ^ 0x15FDDF45) + 235535115))
       - 1572878575;
  v350 = (((v349 ^ HIWORD(v349) ^ 0xBFABD91D) - 847662458) ^ ((v349 ^ HIWORD(v349) ^ 0xDED0813) + 2134860684) ^ ((v349 ^ HIWORD(v349) ^ 0xB246D10E) - 1063994729))
       + ((v349 ^ HIWORD(v349)) >> 8)
       - 1070487655;
  v351 = (v350 ^ 0xEEF3CAEE) & (2 * (v350 & 0xCCFBECCE)) ^ v350 & 0xCCFBECCE;
  v352 = ((2 * (v350 ^ 0xEFD153EE)) ^ 0x46557E40) & (v350 ^ 0xEFD153EE) ^ (2 * (v350 ^ 0xEFD153EE)) & 0x232ABF20;
  v353 = (v352 ^ 0x2003600) & (4 * v351) ^ v351;
  v354 = ((4 * (v352 ^ 0x212A8120)) ^ 0x8CAAFC80) & (v352 ^ 0x212A8120) ^ (4 * (v352 ^ 0x212A8120)) & 0x232ABF20;
  v355 = (v354 ^ 0x2ABC00) & (16 * v353) ^ v353;
  v356 = ((16 * (v354 ^ 0x23000320)) ^ 0x32ABF200) & (v354 ^ 0x23000320) ^ (16 * (v354 ^ 0x23000320)) & 0x232ABF20;
  v357 = v355 ^ 0x232ABF20 ^ (v356 ^ 0x222AB200) & (v355 << 8);
  v358 = v350 ^ (2
               * ((v357 << 16) & 0x232A0000 ^ v357 ^ ((v357 << 16) ^ 0x3F200000) & (((v356 ^ 0x1000D20) << 8) & 0x232A0000 ^ (((v356 ^ 0x1000D20) << 8) ^ 0x2ABF0000) & (v356 ^ 0x1000D20) ^ 0x1000000)));
  v359 = 1461491497
       * ((((v358 ^ 0xBFB38ACB) + 26178526) ^ ((v358 ^ 0xCC370F86) + 1913386641) ^ ((v358 ^ 0xBF6A17C3) + 22474454))
        - (((v286 ^ 0x42CFEE80) + 807240985) ^ ((v286 ^ 0xD6D12E89) - 1543289582) ^ ((v286 ^ 0x941EC009) - 422794350)));
  v360 = (v359 - HIWORD(v359)) ^ ((v359 - HIWORD(v359)) >> 8);
  v361 = v360 - 1926392729 - ((2 * v360) & 0x1A5B28CE);
  LODWORD(STACK[0x1378]) = (LODWORD(STACK[0x1678]) ^ 0x8D2D9467)
                         - 1926392729
                         - 2 * ((LODWORD(STACK[0x1678]) ^ 0x8D2D9467) & v280 ^ STACK[0x1678] & 0x18);
  v362 = STACK[0x1498];
  v363 = 853040583
       * (((v362 ^ 0x154F2F91) - 357511057) ^ ((v362 ^ 0xA586A7D2) + 1517901870) ^ ((v362 ^ 0x3DE41C24) - 1038359588))
       - 1572878575;
  v364 = 1461491497 * ((v363 ^ HIWORD(v363)) - v286 + ((v363 ^ HIWORD(v363)) >> 8));
  v365 = ((v364 - HIWORD(v364)) >> (((v364 - BYTE2(v364)) & 8 ^ 8) + ((v364 - BYTE2(v364)) & 8))) ^ (v364 - HIWORD(v364));
  v366 = v296 ^ LODWORD(STACK[0x15C8]) ^ 0xED33C7E7;
  LODWORD(STACK[0xE4C]) = v291 ^ LODWORD(STACK[0x1064]) ^ 0xED33C7E7 ^ v290;
  LODWORD(STACK[0x1388]) = v290 ^ v292 ^ 0xED33C7E7;
  LODWORD(STACK[0xE3C]) = v366 ^ v290;
  v367 = LODWORD(STACK[0x1420]) + 3771;
  v368 = (v367 ^ 0xCCA170DD) & (2 * (v367 & 0x8EB144DC)) ^ v367 & 0x8EB144DC;
  v369 = ((2 * (v367 ^ 0xC0837055)) ^ 0x9C646912) & (v367 ^ 0xC0837055) ^ (2 * (v367 ^ 0xC0837055)) & 0x4E323488;
  v370 = (v369 ^ 0xC102009) & (4 * v368) ^ v368;
  v371 = ((4 * (v369 ^ 0x42121489)) ^ 0x38C8D224) & (v369 ^ 0x42121489) ^ (4 * (v369 ^ 0x42121489)) & 0x4E323488;
  v372 = v370 ^ 0x4E323489 ^ (v371 ^ 0x8001009) & (16 * v370);
  v373 = (16 * (v371 ^ 0x46322489)) & 0x4E323480 ^ 0xC103409 ^ ((16 * (v371 ^ 0x46322489)) ^ 0xE3234890) & (v371 ^ 0x46322489);
  v374 = (v372 << 8) & 0x4E323400 ^ v372 ^ ((v372 << 8) ^ 0x32348900) & v373;
  v375 = v367 ^ (2
               * ((v374 << 16) & 0x4E320000 ^ v374 ^ ((v374 << 16) ^ 0x34890000) & ((v373 << 8) & 0x4E320000 ^ 0x4C020000 ^ ((v373 << 8) ^ 0x32340000) & v373)));
  LODWORD(STACK[0x156C]) = LODWORD(STACK[0x16F0]) ^ 0x8D2D9467 ^ v362 ^ (377115639
                                                                       * (((v375 ^ 0xEC52A7AE) - 2143952391) ^ ((v375 ^ 0x503D50DE) + 1012536969) ^ ((v375 ^ 0xA2DADABE) - 826434327))
                                                                       - 1859283871);
  v376 = v375 ^ 0x9398B9A9 ^ ((HIWORD(v375) ^ 0x1EB5)
                            - 1926392729
                            - 2 * ((HIWORD(v375) ^ 0x1EB5) & 0x946F ^ HIWORD(v375) & 8));
  v377 = 1461491497 * (v376 - v286 + (v376 >> 8)) - ((1461491497 * (v376 - v286 + (v376 >> 8))) >> 16);
  v378 = (v377 ^ (v377 >> 8)) - 1926392729 - ((2 * (v377 ^ (v377 >> 8))) & 0x1A5B28CE);
  v379 = (343072051 * (v361 ^ v283)) ^ ((343072051 * (v361 ^ v283)) >> 16);
  v380 = v379 ^ (v379 >> 8);
  v381 = ((((8 * v380) ^ 0x82481984) & 0x7153FFE0) - ((2 * ((8 * v380) ^ 0x82481984)) & 0x60206380) - 1338756650) ^ ((8 * v380) ^ 0x82481984) & 0x7153FFF8;
  v382 = (v381 & 0x97B7389C ^ 0x7831089) + (v381 ^ 0xB0742856) - ((v381 ^ 0xB0742856) & 0x97B73898);
  v383 = (343072051 * (v378 ^ v283)) ^ ((343072051 * (v378 ^ v283)) >> 16);
  v384 = v383 ^ (v383 >> 8);
  v385 = ((-71 - (((v382 ^ 0x6C) - 22) ^ ((v382 ^ 0xF6) + 116) ^ ((v382 ^ 0x87) + 3))) | (8 * v380 - 1)) & 8;
  v386 = ((v385 * v384) ^ 0xC832F7DD) & 0xA6C18FF0 ^ 0xF74F9D98 ^ ((((v385 * v384) ^ 0xC832F7DD) & 0xA6C18FE8)
                                                                 - ((2 * ((v385 * v384) ^ 0xC832F7DD)) & 0x4C821480)
                                                                 + 2001672784);
  v387 = STACK[0x15E0];
  v388 = STACK[0x1644];
  v389 = 343072051 * ((v365 - 1926392729 - ((2 * v365) & 0x1A5B28CE)) ^ v283);
  v390 = v389 ^ HIWORD(v389) ^ ((v389 ^ HIWORD(v389)) >> 8);
  v391 = (((2 * (((-8 * v390) ^ 0x905DF2F) & 0x8046A736)) | 0x65FE6356)
        - (((-8 * v390) ^ 0x905DF2F) & 0x8046A736)
        - 855585195) ^ ((-8 * v390) ^ 0x905DF2F) & 0x8046A72E;
  v392 = (v391 & 0xFD4BDFE7 ^ 0xCD004962) + (v391 & 0x2B42018 ^ 0x2B02009);
  v393 = (1926392761
        - (((v382 ^ 0x9E88F16C) + 2074983402) ^ ((v382 ^ 0xA4AD88F6) + 1099481716) ^ ((v382 ^ 0xADD25887) + 1224151555))) ^ 0xDA9C2094;
  v394 = ((v393 & 0x23A3485) - (v393 & 0x2080405) + (v393 & 0x2080405 ^ 0xA20D871D)) ^ v393 & 0x23A349D;
  v395 = (v394 & 0x9498257F ^ 0x54880066) + (v394 & 0x2B67DA80 ^ 0x20058281);
  LODWORD(STACK[0x17C0]) = (-(v385 * v384) ^ 0x46E8C5C4) & 0xB666E024 ^ 0x60B68950 ^ (308601544
                                                                                    - ((-(v385 * v384) ^ 0x46E8C5C4) & 0xA4020034 | 0x1264E2C8)
                                                                                    + ((-(v385 * v384) ^ 0x46E8C5C4) & 0x1264E008 | 0xED9B1D37));
  v396 = (v283 ^ 0x8D2D9467)
       + (((v387 ^ 0xF7B43215) + 139185643) ^ ((v387 ^ 0x124310BB) - 306385083) ^ ((v387 ^ 0x68DAB6C9) - 1759164105))
       + 442181838
       + (((v388 ^ 0x54134741) + 650194138) ^ ((v388 ^ 0xCD35872) + 2114008043) ^ ((v388 ^ 0x58C01F33) + 705852588));
  v397 = -1965057665 * v396 * ((v396 & 0xE598E61A) + 1360871525 + (v396 & 0xE598E61A ^ 0xE598E61A));
  LODWORD(STACK[0x1688]) = LODWORD(STACK[0x1488]) ^ v396 ^ 0x8D2D9467 ^ (v397 - 1926392729 - ((2 * v397) & 0x1A5B28CE));
  LODWORD(STACK[0x17EC]) = (LODWORD(STACK[0x172C]) ^ 0x8D2D9467)
                         - 1926392729
                         - ((2 * (LODWORD(STACK[0x172C]) ^ 0x8D2D9467)) & 0x1A5B28CE);
  v398 = (((LODWORD(STACK[0x15C0]) ^ 0x7EF9AE34) - 2130292276) ^ ((LODWORD(STACK[0x15C0]) ^ 0x9F69ED18) + 1620447976) ^ ((LODWORD(STACK[0x15C0]) ^ 0x6CBDD74B) - 1824380747))
       + 2072539141
       + (((LODWORD(STACK[0x15AC]) ^ 0xCCD22030) + 858644432) ^ ((LODWORD(STACK[0x15AC]) ^ 0xD7515056) + 682536874) ^ ((LODWORD(STACK[0x15AC]) ^ 0x96AEE401) + 1766923263));
  v399 = (v398 ^ 0x5EC8B08C) & (2 * (v398 & 0x9ED2B8C9)) ^ v398 & 0x9ED2B8C9;
  v400 = ((2 * (v398 ^ 0x7E6DA00E)) ^ 0xC17E318E) & (v398 ^ 0x7E6DA00E) ^ (2 * (v398 ^ 0x7E6DA00E)) & 0xE0BF18C6;
  v401 = (v400 ^ 0xC01E0004) & (4 * v399) ^ v399;
  v402 = ((4 * (v400 ^ 0x20810841)) ^ 0x82FC631C) & (v400 ^ 0x20810841) ^ (4 * (v400 ^ 0x20810841)) & 0xE0BF18C4;
  v403 = v401 ^ 0xE0BF18C7 ^ (v402 ^ 0x80BC0000) & (16 * v401);
  v404 = (16 * (v402 ^ 0x600318C3)) & 0xE0BF18C0 ^ 0xE00E1087 ^ ((16 * (v402 ^ 0x600318C3)) ^ 0xBF18C70) & (v402 ^ 0x600318C3);
  v405 = (v403 << 8) & 0xE0BF1800 ^ v403 ^ ((v403 << 8) ^ 0xBF18C700) & v404;
  v406 = v398 ^ (2
               * ((v405 << 16) & 0x60BF0000 ^ v405 ^ ((v405 << 16) ^ 0x18C70000) & ((v404 << 8) & 0x60BF0000 ^ 0x40A70000 ^ ((v404 << 8) ^ 0x3F180000) & v404)));
  v407 = -1965057665
       * ((((v406 ^ 0x93682F10) - 14103088) ^ ((v406 ^ 0xBA874470) - 691558736) ^ ((v406 ^ 0x377DE227) + 1530724601))
        + (((v283 ^ 0x6099E92E) - 1620699438) ^ ((v283 ^ 0x14932D12) - 345189650) ^ ((v283 ^ 0xF927505B) + 114864037)))
       + 638475314;
  LOBYTE(v405) = ((LODWORD(STACK[0x1810]) ^ 7) - v407) & 0x10;
  v408 = (v407 >> ((v405 ^ 0x10) + v405))
       + v407
       - 1926392729
       - ((2 * ((v407 >> ((v405 ^ 0x10) + v405)) + v407)) & 0x1A5B28CE);
  v409 = ((v408 >> 8) ^ 0x8D2D94)
       - 649810026
       + (((v408 ^ 0x9704C053) + 1761296301) ^ ((v408 ^ 0x87A40184) + 2019294844) ^ ((v408 ^ 0x9D8D55B0) + 1651681872));
  v410 = (v409 ^ 0xB3C2D2DC) & (2 * (v409 & 0xB3E8E4D1)) ^ v409 & 0xB3E8E4D1;
  v411 = ((2 * (v409 ^ 0xD392535E)) ^ 0xC0F56F1E) & (v409 ^ 0xD392535E) ^ (2 * (v409 ^ 0xD392535E)) & 0x607AB78E;
  v412 = (v411 ^ 0x4060270C) & (4 * v410) ^ v410;
  v413 = ((4 * (v411 ^ 0x200A9081)) ^ 0x81EADE3C) & (v411 ^ 0x200A9081) ^ (4 * (v411 ^ 0x200A9081)) & 0x607AB78C;
  v414 = (v413 ^ 0x6A9600) & (16 * v412) ^ v412;
  v415 = ((16 * (v413 ^ 0x60102183)) ^ 0x7AB78F0) & (v413 ^ 0x60102183) ^ (16 * (v413 ^ 0x60102183)) & 0x607AB780;
  v416 = v414 ^ 0x607AB78F ^ (v415 ^ 0x2A3000) & (v414 << 8);
  v417 = v409 ^ (2
               * ((v416 << 16) & 0x607A0000 ^ v416 ^ ((v416 << 16) ^ 0x378F0000) & (((v415 ^ 0x6050870F) << 8) & 0x607A0000 ^ 0x480000 ^ (((v415 ^ 0x6050870F) << 8) ^ 0x7AB70000) & (v415 ^ 0x6050870F))));
  v418 = (((v286 ^ 0x6CC52BF) + 1948137768) ^ ((v286 ^ 0xC5029A39) - 1211043422) ^ ((v286 ^ 0xC3CEC886) - 1323523297))
       + 1021328842
       + (((v417 ^ 0x5D6E9A74) + 481655332) ^ ((v417 ^ 0xAD5DE565) - 326761165) ^ ((v417 ^ 0xC33AF4DE) - 2099178358));
  v419 = (2 * (v418 & 0xDD7AEB04 ^ 0xEA222527)) & 0xEA200400 ^ v418 & 0xDD7AEB04 ^ 0xEA222527 ^ ((2
                                                                                                * (v418 & 0xDD7AEB04 ^ 0xEA222527)) ^ 0xD4444A4E) & (v418 ^ 0x3758CE23);
  v420 = (2 * (v418 ^ 0x3758CE23)) & 0xEA222526 ^ 0x2A222521 ^ ((2 * (v418 ^ 0x3758CE23)) ^ 0xD4444A4E) & (v418 ^ 0x3758CE23);
  v421 = (4 * v419) & 0xEA222524 ^ v419 ^ ((4 * v419) ^ 0xA888949C) & v420;
  v422 = (4 * v420) & 0xEA222524 ^ 0x42222123 ^ ((4 * v420) ^ 0xA888949C) & v420;
  v423 = (16 * v421) & 0xEA222520 ^ v421 ^ ((16 * v421) ^ 0x22221230) & v422;
  v424 = (16 * v422) & 0xEA222520 ^ 0x48002507 ^ ((16 * v422) ^ 0xA2225270) & v422;
  v425 = v423 ^ 0x4A020524 ^ (v423 << 8) & 0xEA222500 ^ ((v423 << 8) ^ 0x210300) & v424;
  v426 = v418 ^ (2
               * ((v425 << 16) & 0x6A220000 ^ v425 ^ ((v425 << 16) ^ 0x25270000) & ((v424 << 8) & 0x6A220000 ^ 0x48020000 ^ ((v424 << 8) ^ 0x22250000) & v424)));
  v427 = -1968385487
       * (((v426 ^ 0x945ED605) - 1342825256) ^ ((v426 ^ 0xFF791732) - 992879135) ^ ((v426 ^ 0x225D607D) + 435530416))
       - 786487627;
  v428 = (v427 ^ 0xD3603FA0) & (2 * (v427 & 0xD38ABF02)) ^ v427 & 0xD38ABF02;
  v429 = ((2 * (v427 ^ 0x506427A0)) ^ 0x7DD3144) & (v427 ^ 0x506427A0) ^ (2 * (v427 ^ 0x506427A0)) & 0x83EE98A2;
  v430 = (v429 ^ 0x24C1000) & (4 * v428) ^ v428;
  v431 = ((4 * (v429 ^ 0x802288A2)) ^ 0xFBA6288) & (v429 ^ 0x802288A2) ^ (4 * (v429 ^ 0x802288A2)) & 0x83EE98A0;
  v432 = (v431 ^ 0x3AA0080) & (16 * v430) ^ v430;
  v433 = ((16 * (v431 ^ 0x80449822)) ^ 0x3EE98A20) & (v431 ^ 0x80449822) ^ (16 * (v431 ^ 0x80449822)) & 0x83EE98A0;
  v434 = v432 ^ 0x83EE98A2 ^ (v433 ^ 0x2E88800) & (v432 << 8);
  v435 = v427 ^ (2
               * ((v434 << 16) & 0x3EE0000 ^ v434 ^ ((v434 << 16) ^ 0x18A20000) & (((v433 ^ 0x81061082) << 8) & 0x3EE0000 ^ 0x1660000 ^ (((v433 ^ 0x81061082) << 8) ^ 0x6E980000) & (v433 ^ 0x81061082))));
  v436 = ((HIWORD(v435) ^ 0xD513) + (v435 ^ 0xD5138E46)) ^ (((HIWORD(v435) ^ 0xD513) + (v435 ^ 0xD5138E46)) >> 8);
  v437 = STACK[0x1898];
  LODWORD(v5) = STACK[0x1528];
  v438 = 2137243681 * ((v436 - 1926392729 - ((2 * v436) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1898]));
  v439 = (((v5 ^ 0x690ECE6) - 110161126) ^ ((v5 ^ 0xB4E213EB) + 1260252181) ^ ((v5 ^ 0x3F5F6B6A) - 1063218026))
       + v438
       + HIWORD(v438)
       + ((v438 + HIWORD(v438)) >> 8)
       - 166217787;
  v440 = (v439 ^ 0x16D1DE2B) & (2 * (v439 & 0x9715DCA2)) ^ v439 & 0x9715DCA2;
  v441 = ((2 * (v439 ^ 0x18F0762B)) ^ 0x1FCB5512) & (v439 ^ 0x18F0762B) ^ (2 * (v439 ^ 0x18F0762B)) & 0x8FE5AA88;
  v442 = (v441 ^ 0xCC10000) & (4 * v440) ^ v440;
  v443 = ((4 * (v441 ^ 0x8024AA89)) ^ 0x3F96AA24) & (v441 ^ 0x8024AA89) ^ (4 * (v441 ^ 0x8024AA89)) & 0x8FE5AA88;
  v444 = (v443 ^ 0xF84AA00) & (16 * v442) ^ v442;
  v445 = ((16 * (v443 ^ 0x80610089)) ^ 0xFE5AA890) & (v443 ^ 0x80610089) ^ (16 * (v443 ^ 0x80610089)) & 0x8FE5AA80;
  v446 = v444 ^ 0x8FE5AA89 ^ (v445 ^ 0x8E40A800) & (v444 << 8);
  v447 = v439 ^ (2
               * ((v446 << 16) & 0xFE50000 ^ v446 ^ ((v446 << 16) ^ 0x2A890000) & (((v445 ^ 0x1A50209) << 8) & 0xFE50000 ^ 0xA450000 ^ (((v445 ^ 0x1A50209) << 8) ^ 0xE5AA0000) & (v445 ^ 0x1A50209))));
  v448 = (((v447 ^ 0x2928AB55) - 970569346) ^ ((v447 ^ 0xFD0264) - 269230003) ^ ((v447 ^ 0xB4092081) + 1527235242))
       - (((v5 ^ 0x41641297) - 1097077399) ^ ((v5 ^ 0xEFACD07E) + 273887106) ^ ((v5 ^ 0x23E5568E) - 602232462))
       + 143221853;
  v449 = (v448 ^ 0xE7749323) & (2 * (v448 & 0xF7769BA3)) ^ v448 & 0xF7769BA3;
  v450 = ((2 * (v448 ^ 0x6B588625)) ^ 0x385C3B0C) & (v448 ^ 0x6B588625) ^ (2 * (v448 ^ 0x6B588625)) & 0x9C2E1D86;
  v451 = (v450 ^ 0x180C1906) & (4 * v449) ^ v449;
  v452 = ((4 * (v450 ^ 0x84220482)) ^ 0x70B87618) & (v450 ^ 0x84220482) ^ (4 * (v450 ^ 0x84220482)) & 0x9C2E1D84;
  v453 = (v452 ^ 0x10281406) & (16 * v451) ^ v451;
  v454 = ((16 * (v452 ^ 0x8C060986)) ^ 0xC2E1D860) & (v452 ^ 0x8C060986) ^ (16 * (v452 ^ 0x8C060986)) & 0x9C2E1D80;
  v455 = v453 ^ 0x9C2E1D86 ^ (v454 ^ 0x80201800) & (v453 << 8);
  v456 = v448 ^ (2
               * ((v455 << 16) & 0x1C2E0000 ^ v455 ^ ((v455 << 16) ^ 0x1D860000) & (((v454 ^ 0x1C0E0586) << 8) & 0x1C2E0000 ^ 0x10220000 ^ (((v454 ^ 0x1C0E0586) << 8) ^ 0x2E1D0000) & (v454 ^ 0x1C0E0586))));
  v457 = (((LODWORD(STACK[0x17D8]) ^ 0x855693FF) + 2057923585) ^ ((LODWORD(STACK[0x17D8]) ^ 0x9F967527) + 1617529561) ^ ((LODWORD(STACK[0x17D8]) ^ 0x97ED72BF) + 1746046273))
       - 1937344672
       + (((v456 ^ 0x2134699F) - 1530879319) ^ ((v456 ^ 0x8EA59B9B) + 189878445) ^ ((v456 ^ 0x58B752AB) - 582772323));
  v458 = (v457 ^ 0x6D823D4C) & (2 * (v457 & 0x8DD4B16E)) ^ v457 & 0x8DD4B16E;
  v459 = ((2 * (v457 ^ 0x6D8B3FC8)) ^ 0xC0BF1D4C) & (v457 ^ 0x6D8B3FC8) ^ (2 * (v457 ^ 0x6D8B3FC8)) & 0xE05F8EA6;
  v460 = (v459 ^ 0x40170C00) & (4 * v458) ^ v458;
  v461 = ((4 * (v459 ^ 0x204082A2)) ^ 0x817E3A98) & (v459 ^ 0x204082A2) ^ (4 * (v459 ^ 0x204082A2)) & 0xE05F8EA4;
  v462 = (v461 ^ 0x805E0A80) & (16 * v460) ^ v460;
  v463 = ((16 * (v461 ^ 0x60018426)) ^ 0x5F8EA60) & (v461 ^ 0x60018426) ^ (16 * (v461 ^ 0x60018426)) & 0xE05F8EA0;
  v464 = v462 ^ 0xE05F8EA6 ^ (v463 ^ 0x588A86) & (v462 << 8);
  LODWORD(STACK[0x14E4]) = v457 ^ 0xC04A3845 ^ (2
                                              * ((v464 << 16) & 0x605F0000 ^ v464 ^ ((v464 << 16) ^ 0xEA60000) & (((v463 ^ 0xE0070486) << 8) & 0xE05F0000 ^ 0x20510000 ^ (((v463 ^ 0xE0070486) << 8) ^ 0x5F8E0000) & (v463 ^ 0xE0070486))));
  v465 = STACK[0x1690];
  LODWORD(STACK[0x1748]) = LODWORD(STACK[0x1690]) - 16666;
  v466 = v388 ^ 0x8D2D9467;
  v467 = STACK[0x17E0];
  LODWORD(STACK[0xE1C]) = v339 ^ LODWORD(STACK[0x17E0]);
  LODWORD(STACK[0x1514]) = LODWORD(STACK[0x17A8]) ^ 0x8D2D9467 ^ LODWORD(STACK[0x1588]) ^ v467 ^ v437;
  LODWORD(STACK[0x159C]) = STACK[0x1698];
  LODWORD(STACK[0x144C]) = v467 ^ v437;
  v468 = LODWORD(STACK[0x1800]) ^ v467 ^ v437;
  LODWORD(STACK[0x1800]) = LODWORD(STACK[0x16D8]) + 1;
  LODWORD(STACK[0x13A0]) = LODWORD(STACK[0x16D0]) ^ 0xC963B590;
  LODWORD(STACK[0xE20]) = v338 ^ 0x2700F6A3;
  LODWORD(STACK[0x1670]) = v390 ^ 0x8D2D9467;
  LODWORD(STACK[0x1538]) = v384 ^ 0x8D2D9467;
  v469 = LODWORD(STACK[0x1584]);
  LODWORD(STACK[0x15E8]) = (8 * v390) & 0x18 | 0x8D2D9467;
  LODWORD(STACK[0x15DC]) = (v392 - 1) ^ 0x7062CCAE;
  LODWORD(STACK[0x1430]) = v447 ^ 0x10F11DD7;
  LODWORD(STACK[0x17E0]) = v456 ^ 0x7A0B34C8;
  v470 = LODWORD(STACK[0x1558]);
  v471 = LODWORD(STACK[0x13F0]);
  v472 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * (v465 + 2195))
                                                                                            - 4);
  LODWORD(STACK[0x1510]) = STACK[0x1838];
  LODWORD(STACK[0x1420]) = STACK[0x1740];
  LODWORD(STACK[0x17D8]) = STACK[0x1130];
  STACK[0x16B8] = LODWORD(STACK[0x16EC]);
  LODWORD(STACK[0x1838]) = STACK[0x14C4];
  LODWORD(STACK[0x1130]) = STACK[0x1518];
  LODWORD(STACK[0x1498]) = STACK[0x17BC];
  LODWORD(STACK[0x15C8]) = STACK[0x1780];
  LODWORD(STACK[0x1094]) = STACK[0x1890];
  LODWORD(STACK[0x1698]) = v468;
  LODWORD(STACK[0x1088]) = STACK[0x1858];
  LODWORD(STACK[0x1780]) = STACK[0x14B8];
  LODWORD(STACK[0x10B8]) = STACK[0x13C0];
  LODWORD(STACK[0x1540]) = STACK[0xE48];
  LODWORD(STACK[0x1434]) = STACK[0x1548];
  LODWORD(STACK[0x13B8]) = STACK[0x1610];
  LODWORD(STACK[0x1644]) = STACK[0x17B0];
  LODWORD(STACK[0x161C]) = STACK[0x1648];
  LODWORD(STACK[0x17B0]) = STACK[0x18A8];
  LODWORD(STACK[0x16EC]) = v286 ^ 0x8D2D9467;
  LODWORD(STACK[0x172C]) = v380 ^ 0x8D2D9467;
  LODWORD(STACK[0x13CC]) = v437;
  LODWORD(STACK[0x1544]) = v283;
  return v472(v466, (v395 - 1) ^ 0x5BAD918C, v470, v382 ^ 0x1ADAB57A, v469, v471, (-1343142928 - (v386 | 0xAFF143F0) + (v386 | 0x500EBC0F)) ^ 0x5D23AFB8);
}

#error "10028897C: too big function (funcsize=0)"

#error "100299D28: too big function (funcsize=0)"

uint64_t sub_1002B2C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  int v205;
  uint64_t (*v206)(void);

  LODWORD(STACK[0x1838]) = a8 ^ 0x217B;
  v14 = v10 + (a8 ^ 0x7BA1) - 746564077 - ((v10 + (a8 ^ 0x7BA1u) - 746564077) >> 10);
  v15 = v14 + (v14 >> 6);
  LODWORD(STACK[0x1678]) = v15;
  v16 = v15 - 1853746771 + ((v15 - 1853746771) >> 12) + ((v15 - 1853746771 + ((v15 - 1853746771) >> 12)) >> 7);
  LODWORD(STACK[0x15CC]) = LODWORD(STACK[0x1658]) - LODWORD(STACK[0x1718]);
  v17 = (v16 ^ 0x5F06CFFD)
      - ((v16 ^ 0x5F06CFFD) >> 10)
      + v13
      - ((2 * ((v16 ^ 0x5F06CFFD) - ((v16 ^ 0x5F06CFFD) >> 10))) & 0x1A5B28CE);
  v18 = ((v17 >> 2) ^ 0xDCB49AE6)
      - 1262072378
      + (((v17 ^ 0x6E18A287) - 1847108231) ^ ((v17 ^ 0xAE85B99E) + 1366967906) ^ ((v17 ^ 0x4DB08F7E) - 1303416702));
  v19 = (v18 ^ 0x9A562423) & (2 * (v18 & 0xD86746A2)) ^ v18 & 0xD86746A2;
  v20 = ((2 * (v18 ^ 0xAA502463)) ^ 0xE46EC582) & (v18 ^ 0xAA502463) ^ (2 * (v18 ^ 0xAA502463)) & 0x723762C0;
  v21 = (v20 ^ 0x60260080) & (4 * v19) ^ v19;
  v22 = ((4 * (v20 ^ 0x12112241)) ^ 0xC8DD8B04) & (v20 ^ 0x12112241) ^ (4 * (v20 ^ 0x12112241)) & 0x723762C0;
  v23 = (v22 ^ 0x40150201) & (16 * v21) ^ v21;
  v24 = ((16 * (v22 ^ 0x322260C1)) ^ 0x23762C10) & (v22 ^ 0x322260C1) ^ (16 * (v22 ^ 0x322260C1)) & 0x723762C0;
  v25 = v23 ^ 0x723762C1 ^ (v24 ^ 0x22362000) & (v23 << 8);
  v26 = v18 ^ (2
             * ((v25 << 16) & 0x72370000 ^ v25 ^ ((v25 << 16) ^ 0x62C10000) & (((v24 ^ 0x500142C1) << 8) & 0x72370000 ^ 0x40150000 ^ (((v24 ^ 0x500142C1) << 8) ^ 0x37620000) & (v24 ^ 0x500142C1))));
  LODWORD(STACK[0x1658]) = (v26 & 0xFFFEECD6 ^ 0x8E6CAC02 | 0x5FF93689) - (v26 & 0xFFFEECD6 ^ 0x8E6CAC02 | 0x2006C976);
  v27 = STACK[0x1554];
  v28 = (((v26 ^ 0x2FACE3) - 1963572132) ^ ((v26 ^ 0xF14971A1) + 2073073946) ^ ((v26 ^ 0x96D5E62) - 2085308709))
      - 1496022938;
  v29 = v28 + (v28 >> 9) - ((v28 + (v28 >> 9)) >> 8);
  v30 = (v29 ^ 0xA35ACE30) - ((v29 ^ 0xA35ACE30) >> 12) + (((v29 ^ 0xA35ACE30) - ((v29 ^ 0xA35ACE30) >> 12)) >> 8);
  v31 = v30 + 1765886704 + ((v30 + 1765886704) >> 14) - ((v30 + 1765886704 + ((v30 + 1765886704) >> 14)) >> 2);
  v32 = v31 - ((v31 - 570332459) >> 11) - 570332459 - ((v31 - ((v31 - 570332459) >> 11) - 570332459) >> 1);
  v33 = v32 + v13 - ((2 * v32) & 0x1A5B28CE);
  v34 = ((LODWORD(STACK[0x1610]) ^ LODWORD(STACK[0x1554]))
       + v13
       - ((2 * (LODWORD(STACK[0x1610]) ^ LODWORD(STACK[0x1554]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x161C]);
  v35 = (((LODWORD(STACK[0x1798]) ^ 0xA4B6B802) + 1531529214) ^ ((LODWORD(STACK[0x1798]) ^ 0x41D88340) - 1104708416) ^ ((LODWORD(STACK[0x1798]) ^ 0x6843AF25) - 1749266213))
      - 1550129521;
  v36 = (v35 ^ 0xDFB78598) & (2 * (v35 & 0xDF378180)) ^ v35 & 0xDF378180;
  v37 = ((2 * (v35 ^ 0xF9988698)) ^ 0x4D5E0E30) & (v35 ^ 0xF9988698) ^ (2 * (v35 ^ 0xF9988698)) & 0x26AF0718;
  v38 = (v37 ^ 0x40E0600) & (4 * v36) ^ v36;
  v39 = ((4 * (v37 ^ 0x22A10108)) ^ 0x9ABC1C60) & (v37 ^ 0x22A10108) ^ (4 * (v37 ^ 0x22A10108)) & 0x26AF0718;
  v40 = v38 ^ 0x26AF0718 ^ (v39 ^ 0x2AC0400) & (16 * v38);
  v41 = (16 * (v39 ^ 0x24030318)) & 0x26AF0710 ^ 0x40F0618 ^ ((16 * (v39 ^ 0x24030318)) ^ 0x6AF07180) & (v39 ^ 0x24030318);
  v42 = (v40 << 8) & 0x26AF0700 ^ v40 ^ ((v40 << 8) ^ 0xAF071800) & v41;
  v43 = v35 ^ (2
             * ((v42 << 16) & 0x26AF0000 ^ v42 ^ ((v42 << 16) ^ 0x7180000) & ((v41 << 8) & 0x26AF0000 ^ 0xA80000 ^ ((v41 << 8) ^ 0x2F070000) & v41)));
  v44 = ((v27 & 0xFFFEECD6 ^ 0xDD32A45E) - ((2 * (v27 & 0xFFFEECD6 ^ 0xDD32A45E)) & 0x8351C9A8) - 1045825580) ^ 0x91B7D7CC;
  v45 = v44 | (((2 * (v27 & 0x7FFEECD6 ^ 0x873D0674)) & 0x651E802C) - (v27 & 0x7FFEECD6 ^ 0x873D0674) + 1299230441) ^ 0x389FC00D;
  v46 = (v33 ^ 0xF1602119) + ((v33 ^ 0xF1602119) >> 12) + (((v33 ^ 0xF1602119) + ((v33 ^ 0xF1602119) >> 12)) >> 8);
  v47 = v30 ^ (2 * ((v30 ^ v34 ^ v46) & 0x7FFEECD6 ^ v44));
  v48 = v16 ^ v8 ^ v11 & (2 * v16) ^ v46 ^ (v47 + v13 - ((2 * v47) & 0x1A5B28CE));
  v49 = v34 ^ LODWORD(STACK[0x1554]) ^ (v48 + v13 - ((2 * v48) & 0x1A5B28CE));
  v50 = v49 + v13 - ((2 * v49) & 0x1A5B28CE);
  v51 = STACK[0x1644];
  v52 = (LODWORD(STACK[0x10DC]) ^ LODWORD(STACK[0x1644]))
      + v13
      - ((2 * (LODWORD(STACK[0x10DC]) ^ LODWORD(STACK[0x1644]))) & 0x1A5B28CE);
  v53 = (((LODWORD(STACK[0x1638]) ^ 0x64EE32C1) + 1137642419) ^ ((LODWORD(STACK[0x1638]) ^ 0x259B7C8F) + 45762045) ^ ((LODWORD(STACK[0x1638]) ^ 0x14861CA5) + 866592215))
      + 1093437231;
  v54 = (v53 ^ 0xD6F30F76) & (2 * (v53 & 0xD6F42E77)) ^ v53 & 0xD6F42E77;
  v55 = ((2 * (v53 ^ 0x5F3B43F2)) ^ 0x139EDB0A) & (v53 ^ 0x5F3B43F2) ^ (2 * (v53 ^ 0x5F3B43F2)) & 0x89CF6D84;
  v56 = (v55 ^ 0x1804D01) & (4 * v54) ^ v54;
  v57 = ((4 * (v55 ^ 0x88412485)) ^ 0x273DB614) & (v55 ^ 0x88412485) ^ (4 * (v55 ^ 0x88412485)) & 0x89CF6D84;
  v58 = (v57 ^ 0x10D2400) & (16 * v56) ^ v56;
  v59 = ((16 * (v57 ^ 0x88C24981)) ^ 0x9CF6D850) & (v57 ^ 0x88C24981) ^ (16 * (v57 ^ 0x88C24981)) & 0x89CF6D80;
  v60 = v58 ^ 0x89CF6D85 ^ (v59 ^ 0x88C64800) & (v58 << 8);
  LODWORD(STACK[0x1798]) = v53 ^ (2
                                * ((v60 << 16) & 0x9CF0000 ^ v60 ^ ((v60 << 16) ^ 0x6D850000) & (((v59 ^ 0x1092585) << 8) & 0x9CF0000 ^ 0x820000 ^ (((v59 ^ 0x1092585) << 8) ^ 0x4F6D0000) & (v59 ^ 0x1092585))));
  v61 = (((LODWORD(STACK[0x172C]) ^ 0x139986AD) - 328828589) ^ ((LODWORD(STACK[0x172C]) ^ 0x574B3E0E) - 1464548878) ^ ((LODWORD(STACK[0x172C]) ^ 0xC9FF2CC4) + 906023740))
      + 1771335994;
  v62 = ((2 * (v61 & 0x8016C450)) & 0x2008A0 | v61 & 0x8016C450) ^ (2 * (v61 & 0x8016C450)) & (v61 ^ 0xDC66ACA0);
  v63 = ((2 * (v61 ^ 0xDC66ACA0)) ^ 0xB8E0D1E0) & (v61 ^ 0xDC66ACA0) ^ (2 * (v61 ^ 0xDC66ACA0)) & 0x5C7068F0;
  v64 = (v63 ^ 0x446008D0) & (4 * v62) ^ v62;
  v65 = ((4 * (v63 ^ 0x44102810)) ^ 0x71C1A3C0) & (v63 ^ 0x44102810) ^ (4 * (v63 ^ 0x44102810)) & 0x5C7068F0;
  v66 = (v65 ^ 0x504020D0) & (16 * v64) ^ v64;
  v67 = ((16 * (v65 ^ 0xC304830)) ^ 0xC7068F00) & (v65 ^ 0xC304830) ^ (16 * (v65 ^ 0xC304830)) & 0x5C7068F0;
  v68 = v66 ^ 0x5C7068F0 ^ (v67 ^ 0x440008F0) & (v66 << 8);
  LODWORD(STACK[0x161C]) = v61 ^ (2
                                * ((v68 << 16) & 0x5C700000 ^ v68 ^ ((v68 << 16) ^ 0x68F00000) & (((v67 ^ 0x187060F0) << 8) & 0x5C700000 ^ 0xC100000 ^ (((v67 ^ 0x187060F0) << 8) ^ 0x70680000) & (v67 ^ 0x187060F0))));
  v69 = (((LODWORD(STACK[0x1800]) ^ 0x92E61543) + 1830415037) ^ ((LODWORD(STACK[0x1800]) ^ 0xA5C20159) + 1514012327) ^ ((LODWORD(STACK[0x1800]) ^ 0xBA09807D) + 1173782403))
      + 2070964153;
  v70 = (v69 ^ 0x222F65F4) & (2 * (v69 & 0xB42F61F9)) ^ v69 & 0xB42F61F9;
  LODWORD(STACK[0x1718]) = v69;
  v71 = ((2 * (v69 ^ 0x2A21A756)) ^ 0x3C1D8D5E) & (v69 ^ 0x2A21A756) ^ (2 * (v69 ^ 0x2A21A756)) & 0x9E0EC6AE;
  v72 = (v71 ^ 0x100C840C) & (4 * v70) ^ v70;
  v73 = ((4 * (v71 ^ 0x820242A1)) ^ 0x783B1ABC) & (v71 ^ 0x820242A1) ^ (4 * (v71 ^ 0x820242A1)) & 0x9E0EC6AC;
  v74 = (v73 ^ 0x180A02A0) & (16 * v72) ^ v72;
  v75 = ((16 * (v73 ^ 0x8604C403)) ^ 0xE0EC6AF0) & (v73 ^ 0x8604C403) ^ (16 * (v73 ^ 0x8604C403)) & 0x9E0EC6A0;
  v76 = v74 ^ 0x9E0EC6AF ^ (v75 ^ 0x800C4200) & (v74 << 8);
  LODWORD(STACK[0x172C]) = (v76 << 16) & 0x1E0E0000 ^ v76 ^ ((v76 << 16) ^ 0x46AF0000) & (((v75 ^ 0x1E02840F) << 8) & 0x1E0E0000 ^ 0x10080000 ^ (((v75 ^ 0x1E02840F) << 8) ^ 0xEC60000) & (v75 ^ 0x1E02840F));
  v77 = (((LODWORD(STACK[0x1870]) ^ 0x77D3FC73) - 2010381427) ^ ((LODWORD(STACK[0x1870]) ^ 0x7FF9F789) - 2147088265) ^ ((LODWORD(STACK[0x1870]) ^ 0x85079F9D) + 2063097955))
      + 1221451473;
  v78 = (v77 ^ 0xE56054DD) & (2 * (v77 & 0xF57554DC)) ^ v77 & 0xF57554DC;
  v79 = ((2 * (v77 ^ 0xFE85DFD)) ^ 0xF53A1242) & (v77 ^ 0xFE85DFD) ^ (2 * (v77 ^ 0xFE85DFD)) & 0xFA9D0920;
  v80 = (v79 ^ 0xF0180801) & (4 * v78) ^ v78;
  v81 = ((4 * (v79 ^ 0xA850921)) ^ 0xEA742484) & (v79 ^ 0xA850921) ^ (4 * (v79 ^ 0xA850921)) & 0xFA9D0920;
  v82 = (v81 ^ 0xEA140000) & (16 * v80) ^ v80;
  v83 = ((16 * (v81 ^ 0x10890921)) ^ 0xA9D09210) & (v81 ^ 0x10890921) ^ (16 * (v81 ^ 0x10890921)) & 0xFA9D0920;
  v84 = v82 ^ 0xFA9D0921 ^ (v83 ^ 0xA8900021) & (v82 << 8);
  v85 = v77 ^ (2
             * ((v84 << 16) & 0x7A9D0000 ^ v84 ^ ((v84 << 16) ^ 0x9210000) & (((v83 ^ 0x520D0921) << 8) & 0xFA9D0000 ^ 0x62940000 ^ (((v83 ^ 0x520D0921) << 8) ^ 0x1D090000) & (v83 ^ 0x520D0921))));
  v86 = (((LODWORD(STACK[0x144C]) ^ 0x8E45744D) + 1908050867) ^ ((LODWORD(STACK[0x144C]) ^ 0x3D9860B3) - 1033396403) ^ ((LODWORD(STACK[0x144C]) ^ 0x3EF08099) - 1055948953))
      + 258189212;
  v87 = (v86 ^ 0x8E21AE4B) & (2 * (v86 & 0xAF29AE6B)) ^ v86 & 0xAF29AE6B;
  LODWORD(STACK[0x1688]) = v86;
  v88 = ((2 * (v86 ^ 0x8260E69F)) ^ 0x5A9291E8) & (v86 ^ 0x8260E69F) ^ (2 * (v86 ^ 0x8260E69F)) & 0x2D4948F4;
  v89 = (v88 ^ 0x80000E0) & (4 * v87) ^ v87;
  v90 = ((4 * (v88 ^ 0x25494814)) ^ 0xB52523D0) & (v88 ^ 0x25494814) ^ (4 * (v88 ^ 0x25494814)) & 0x2D4948F4;
  v91 = (v90 ^ 0x250100D0) & (16 * v89) ^ v89;
  v92 = ((16 * (v90 ^ 0x8484824)) ^ 0xD4948F40) & (v90 ^ 0x8484824) ^ (16 * (v90 ^ 0x8484824)) & 0x2D4948F0;
  v93 = v91 ^ 0x2D4948F4 ^ (v92 ^ 0x40008B4) & (v91 << 8);
  v94 = (v93 << 16) & 0x2D490000 ^ v93 ^ ((v93 << 16) ^ 0x48F40000) & (((v92 ^ 0x294940B4) << 8) & 0x2D490000 ^ 0x24010000 ^ (((v92 ^ 0x294940B4) << 8) ^ 0x49480000) & (v92 ^ 0x294940B4));
  v95 = (((LODWORD(STACK[0x17A0]) ^ 0x938CA796) - 112361538) ^ ((LODWORD(STACK[0x17A0]) ^ 0xDB5D707B) - 1315133359) ^ ((LODWORD(STACK[0x17A0]) ^ 0x50C2645E) + 973323382))
      - 2006146545;
  v96 = (v95 ^ 0x8F95B7C4) & (2 * (v95 & 0xCFD187E6)) ^ v95 & 0xCFD187E6;
  v97 = ((2 * (v95 ^ 0x8796B504)) ^ 0x908E65C4) & (v95 ^ 0x8796B504) ^ (2 * (v95 ^ 0x8796B504)) & 0x484732E2;
  v98 = (v97 ^ 0x72082) & (4 * v96) ^ v96;
  v99 = ((4 * (v97 ^ 0x48411222)) ^ 0x211CCB88) & (v97 ^ 0x48411222) ^ (4 * (v97 ^ 0x48411222)) & 0x484732E0;
  v100 = (v99 ^ 0x40282) & (16 * v98) ^ v98;
  v101 = ((16 * (v99 ^ 0x48433062)) ^ 0x84732E20) & (v99 ^ 0x48433062) ^ (16 * (v99 ^ 0x48433062)) & 0x484732E0;
  v102 = v100 ^ 0x484732E2 ^ (v101 ^ 0x432200) & (v100 << 8);
  v103 = v95 ^ (2
              * ((v102 << 16) & 0x48470000 ^ v102 ^ ((v102 << 16) ^ 0x32E20000) & (((v101 ^ 0x480410C2) << 8) & 0x48470000 ^ 0x8450000 ^ (((v101 ^ 0x480410C2) << 8) ^ 0x47320000) & (v101 ^ 0x480410C2))));
  v104 = v31 & v45;
  v105 = STACK[0x1510];
  v106 = v29 ^ LODWORD(STACK[0x1678]);
  v107 = v104 ^ (v51 ^ ((LODWORD(STACK[0x1778]) ^ STACK[0x14B8])
                      + 221090935
                      - ((2 * (LODWORD(STACK[0x1778]) ^ STACK[0x14B8])) & 0x1A5B28CE)
                      - 16) ^ v52 ^ LODWORD(STACK[0x1510])) & 0x7FFEECD6 ^ (v106 ^ v33) & 0x7FFEECD6;
  v108 = v46 + 1680287453 - ((v46 + 1680287453) >> 9) - ((v46 + 1680287453 - ((v46 + 1680287453) >> 9)) >> 5);
  v109 = v106 ^ (2 * (v107 ^ v108 & 0x7FFEECD6)) ^ 0x1A59088C;
  v110 = (v109 + v13 - ((2 * v109) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1898]);
  v111 = (v110 + v13 - ((2 * v110) & 0x1A5B28CE)) ^ v33;
  v112 = v50 ^ LODWORD(STACK[0x1788]);
  v113 = (2 * LODWORD(STACK[0x1658]) + 1074631404) ^ v26 ^ (v111 + v13 - ((2 * v111) & 0x1A5B28CE));
  v114 = v12 ^ v52 ^ LODWORD(STACK[0x1510]) ^ v31 ^ v108 ^ ((v113 ^ 0x26182251)
                                                          + v13
                                                          - 2 * ((v113 ^ 0x26182251) & STACK[0x1894] ^ v113 & 8));
  v115 = (v114 + v13 - ((2 * v114) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1778]);
  v116 = (v115 + v13 - ((2 * v115) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1788]);
  v117 = (v116 + v13 - ((2 * v116) & 0x1A5B28CE)) ^ STACK[0x14B8];
  v118 = (v117 + v13 - ((2 * v117) & 0x1A5B28CE)) ^ v9;
  v119 = (v118 + v13 - ((2 * v118) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1788]);
  v120 = (v119 + v13 - ((2 * v119) & 0x1A5B28CE)) ^ STACK[0x14B8];
  v121 = (((LODWORD(STACK[0x1760]) ^ 0x4D64DBB) + 534569816) ^ ((LODWORD(STACK[0x1760]) ^ 0x6138EE22) + 2050113743) ^ ((LODWORD(STACK[0x1760]) ^ 0xC3666ED) + 389859330))
       + 62801570;
  v122 = (v121 ^ 0xF727135E) & (2 * (v121 & 0xF7B7931E)) ^ v121 & 0xF7B7931E;
  v123 = ((2 * (v121 ^ 0x102B3576)) ^ 0xCF394CD0) & (v121 ^ 0x102B3576) ^ (2 * (v121 ^ 0x102B3576)) & 0xE79CA668;
  v124 = v123 ^ 0x2084A228;
  v125 = (v123 ^ 0xC7180440) & (4 * v122) ^ v122;
  v126 = ((4 * v124) ^ 0x9E7299A0) & v124 ^ (4 * v124) & 0xE79CA668;
  v127 = (v126 ^ 0x86108020) & (16 * v125) ^ v125;
  v128 = ((16 * (v126 ^ 0x618C2648)) ^ 0x79CA6680) & (v126 ^ 0x618C2648) ^ (16 * (v126 ^ 0x618C2648)) & 0xE79CA660;
  v129 = v127 ^ 0xE79CA668 ^ (v128 ^ 0x61882668) & (v127 << 8);
  v130 = v121 ^ (2
               * ((v129 << 16) & 0x679C0000 ^ v129 ^ ((v129 << 16) ^ 0x26680000) & (((v128 ^ 0x86148068) << 8) & 0x679C0000 ^ 0x63180000 ^ (((v128 ^ 0x86148068) << 8) ^ 0x1CA60000) & (v128 ^ 0x86148068))));
  v131 = (((LODWORD(STACK[0x17B0]) ^ 0xD9F866CE) - 80142737) ^ ((LODWORD(STACK[0x17B0]) ^ 0x71319CFC) + 1408296029) ^ ((LODWORD(STACK[0x17B0]) ^ 0xF8DAE90A) - 635727445))
       + 253912262;
  LODWORD(STACK[0x1678]) = v131;
  v132 = (v131 ^ 0xC600DF50) & (2 * (v131 & 0xC7489F91)) ^ v131 & 0xC7489F91;
  v133 = ((2 * (v131 ^ 0xC090CB52)) ^ 0xFB0A986) & (v131 ^ 0xC090CB52) ^ (2 * (v131 ^ 0xC090CB52)) & 0x7D854C2;
  v134 = v133 ^ 0x485441;
  v135 = (v133 ^ 0x7000080) & (4 * v132) ^ v132;
  v136 = ((4 * v134) ^ 0x1F61530C) & v134 ^ (4 * v134) & 0x7D854C0;
  v137 = (v136 ^ 0x7405000) & (16 * v135) ^ v135;
  v138 = ((16 * (v136 ^ 0x9804C3)) ^ 0x7D854C30) & (v136 ^ 0x9804C3) ^ (16 * (v136 ^ 0x9804C3)) & 0x7D854C0;
  v139 = v137 ^ 0x7D854C3 ^ (v138 ^ 0x5804400) & (v137 << 8);
  v140 = (v139 << 16) & 0x7D80000 ^ v139 ^ ((v139 << 16) ^ 0x54C30000) & (((v138 ^ 0x25810C3) << 8) & 0x7D80000 ^ 0x7880000 ^ (((v138 ^ 0x25810C3) << 8) ^ 0x58540000) & (v138 ^ 0x25810C3));
  v141 = (((LODWORD(STACK[0x1740]) ^ 0x13A0A1E5) - 329294309) ^ ((LODWORD(STACK[0x1740]) ^ 0xC13998CD) + 1053189939) ^ ((LODWORD(STACK[0x1740]) ^ 0x5FB4AD4F) - 1605676367))
       + 1890505908;
  LODWORD(STACK[0x1658]) = v141;
  v142 = (v141 ^ 0x808DBEDD) & (2 * (v141 & 0x9421BF1E)) ^ v141 & 0x9421BF1E;
  v143 = ((2 * (v141 ^ 0xA0CCA4FD)) ^ 0x69DA37C6) & (v141 ^ 0xA0CCA4FD) ^ (2 * (v141 ^ 0xA0CCA4FD)) & 0x34ED1BE2;
  v144 = v143 ^ 0x14250821;
  v145 = (v143 ^ 0x208810C0) & (4 * v142) ^ v142;
  v146 = ((4 * v144) ^ 0xD3B46F8C) & v144 ^ (4 * v144) & 0x34ED1BE0;
  v147 = (v146 ^ 0x10A40B83) & (16 * v145) ^ v145;
  v148 = ((16 * (v146 ^ 0x24491063)) ^ 0x4ED1BE30) & (v146 ^ 0x24491063) ^ (16 * (v146 ^ 0x24491063)) & 0x34ED1BE0;
  v149 = v147 ^ 0x34ED1BE3 ^ (v148 ^ 0x4C11AC3) & (v147 << 8);
  v150 = (v149 << 16) & 0x34ED0000 ^ v149 ^ ((v149 << 16) ^ 0x1BE30000) & (((v148 ^ 0x302C01C3) << 8) & 0x34ED0000 ^ 0x10E40000 ^ (((v148 ^ 0x302C01C3) << 8) ^ 0xED1B0000) & (v148 ^ 0x302C01C3));
  v151 = (((LODWORD(STACK[0x1850]) ^ 0x75ED4D6F) - 1978486127) ^ ((LODWORD(STACK[0x1850]) ^ 0xE7916179) + 409902727) ^ ((LODWORD(STACK[0x1850]) ^ 0x1F51B871) - 525449329))
       - 1144631672;
  LODWORD(STACK[0x1638]) = v151;
  v152 = (v151 ^ 0xE5CE2234) & (2 * (v151 & 0xE5CF0B39)) ^ v151 & 0xE5CF0B39;
  v153 = ((2 * (v151 ^ 0x25502044)) ^ 0x813E56FA) & (v151 ^ 0x25502044) ^ (2 * (v151 ^ 0x25502044)) & 0xC09F2B7C;
  v154 = v153 ^ 0x40812905;
  v155 = (v153 ^ 0x801C0068) & (4 * v152) ^ v152;
  v156 = ((4 * v154) ^ 0x27CADF4) & v154 ^ (4 * v154) & 0xC09F2B7C;
  v157 = (v156 ^ 0x1C2979) & (16 * v155) ^ v155;
  v158 = ((16 * (v156 ^ 0xC0830209)) ^ 0x9F2B7D0) & (v156 ^ 0xC0830209) ^ (16 * (v156 ^ 0xC0830209)) & 0xC09F2B70;
  v159 = v157 ^ 0xC09F2B7D ^ (v158 ^ 0x922300) & (v157 << 8);
  v160 = (v159 << 16) & 0x409F0000 ^ v159 ^ ((v159 << 16) ^ 0x2B7D0000) & (((v158 ^ 0xC00D082D) << 8) & 0x409F0000 ^ 0x40940000 ^ (((v158 ^ 0xC00D082D) << 8) ^ 0x9F2B0000) & (v158 ^ 0xC00D082D));
  v161 = (((LODWORD(STACK[0x1818]) ^ 0x2C620A2A) - 744622634) ^ ((LODWORD(STACK[0x1818]) ^ 0x956F94DD) + 1787849507) ^ ((LODWORD(STACK[0x1818]) ^ 0x34200A90) - 874515088))
       + 1122482942;
  v162 = (v161 ^ 0xC12ACFAD) & (2 * (v161 & 0xD1A8CE2D)) ^ v161 & 0xD1A8CE2D;
  v163 = ((2 * (v161 ^ 0xE17B5BF5)) ^ 0x61A72BB0) & (v161 ^ 0xE17B5BF5) ^ (2 * (v161 ^ 0xE17B5BF5)) & 0x30D395D8;
  v164 = v163 ^ 0x10509448;
  v165 = (v163 ^ 0x10938590) & (4 * v162) ^ v162;
  v166 = ((4 * v164) ^ 0xC34E5760) & v164 ^ (4 * v164) & 0x30D395D8;
  v167 = (v166 ^ 0x421548) & (16 * v165) ^ v165;
  v168 = ((16 * (v166 ^ 0x30918098)) ^ 0xD395D80) & (v166 ^ 0x30918098) ^ (16 * (v166 ^ 0x30918098)) & 0x30D395D0;
  v169 = v167 ^ 0x30D395D8 ^ (v168 ^ 0x111558) & (v167 << 8);
  v170 = v161 ^ (2
               * ((v169 << 16) & 0x30D30000 ^ v169 ^ ((v169 << 16) ^ 0x15D80000) & (((v168 ^ 0x30C28058) << 8) & 0x30D30000 ^ 0x20420000 ^ (((v168 ^ 0x30C28058) << 8) ^ 0x53950000) & (v168 ^ 0x30C28058))));
  v171 = STACK[0x1808];
  v172 = ((v171 & 0x5085A81 ^ 0x8E283806) + (v171 & 0x70048440 ^ 0x70000041) - 1) ^ 0xAD4B39FF;
  v173 = (615876476 - (v171 & 0x750CDEC1 ^ 0x440C9800 | 0x24B5877C) + (v171 & 0x750CDEC1 ^ 0x440C9800 | 0xDB4A7883)) ^ 0x9B6B70C0;
  v174 = (-1319883628 - (v173 | 0xB1542C94) + (v173 | 0x4EABD36B)) ^ 0x4F8AD769;
  v175 = STACK[0x17C0] & 0x20225F81;
  v176 = ((2 * (v175 ^ 0x20220B81)) | 0x4D135EEE) - (v175 ^ 0x20220B81);
  v177 = (((v85 ^ 0x6FF794E5) + 224967140) ^ ((v85 ^ 0xD3B1AB29) - 1322351056) ^ ((v85 ^ 0xAC0B7952) - 829139883))
       + 1246760428;
  v178 = (v177 ^ 0x81F7E720) & (2 * (v177 & 0x91C7E735)) ^ v177 & 0x91C7E735;
  v179 = ((2 * (v177 ^ 0x81F82B2A)) ^ 0x207F983E) & (v177 ^ 0x81F82B2A) ^ (2 * (v177 ^ 0x81F82B2A)) & 0x103FCC1E;
  v180 = v179 ^ 0x10004401;
  v181 = (v179 ^ 0x103FC81D) & (4 * v178) ^ v178;
  v182 = ((4 * v180) ^ 0x40FF307C) & v180 ^ (4 * v180) & 0x103FCC1C;
  v183 = (v182 ^ 0x3F0010) & (16 * v181) ^ v181;
  v184 = ((16 * (v182 ^ 0x1000CC03)) ^ 0x3FCC1F0) & (v182 ^ 0x1000CC03) ^ (16 * (v182 ^ 0x1000CC03)) & 0x103FCC10;
  v185 = v177 ^ (2
               * (((v183 ^ 0x103FCC1F ^ (v184 ^ 0x3CC000) & (v183 << 8)) << 16) & 0x103F0000 ^ v183 ^ 0x103FCC1F ^ (v184 ^ 0x3CC000) & (v183 << 8) ^ (((v183 ^ 0x103FCC1F ^ (v184 ^ 0x3CC000) & (v183 << 8)) << 16) ^ 0x4C1F0000) & (((v184 ^ 0x10030C0F) << 8) & 0x103F0000 ^ 0x330000 ^ (((v184 ^ 0x10030C0F) << 8) ^ 0x3FCC0000) & (v184 ^ 0x10030C0F))));
  LODWORD(STACK[0x1800]) = v174 + ((v172 - ((2 * v172) & 0x451AFF0) - 2111252488) ^ 0xA14B9CC1);
  LODWORD(STACK[0x1778]) = v43;
  v186 = (((2 * (v175 ^ 0x20005C01)) | 0x176402CE) - (v175 ^ 0x20005C01) + 1951268505) ^ 0xBD3876F;
  v187 = ((2 * v186) & 0x99F0CE94) - v186;
  LODWORD(STACK[0x1740]) = v103;
  v188 = (((LODWORD(STACK[0x161C]) ^ 0x3EEC5A1E) - 467131337) ^ ((LODWORD(STACK[0x161C]) ^ 0x5C434945) - 2037958802) ^ ((LODWORD(STACK[0x161C]) ^ 0xCAB906EB) + 276658372))
       + 1746190686;
  v189 = (v188 ^ 0xA45BB1E7) & (2 * (v188 & 0xC89B31E6)) ^ v188 & 0xC89B31E6;
  v190 = ((2 * (v188 ^ 0xB56BB3E3)) ^ 0xFBE1040A) & (v188 ^ 0xB56BB3E3) ^ (2 * (v188 ^ 0xB56BB3E3)) & 0x7DF08204;
  v191 = v189 ^ 0x7DF08205 ^ (v190 ^ 0x60E00000) & (4 * v189);
  v192 = (4 * (v190 ^ 0x4108205)) & 0x7DF08204 ^ 0x8308201 ^ ((4 * (v190 ^ 0x4108205)) ^ 0xF7C20814) & (v190 ^ 0x4108205);
  v193 = (16 * v191) & 0x7DF08200 ^ v191 ^ ((16 * v191) ^ 0xDF082050) & v192;
  v194 = (16 * v192) & 0x7DF08200 ^ 0x20F08205 ^ ((16 * v192) ^ 0xDF082050) & v192;
  v195 = (v193 << 8) & 0x7DF08200 ^ v193 ^ ((v193 << 8) ^ 0xF0820500) & v194;
  v196 = v188 ^ (2
               * ((v195 << 16) & 0x7DF00000 ^ v195 ^ ((v195 << 16) ^ 0x2050000) & ((v194 << 8) & 0x7DF00000 ^ 0xD700000 ^ ((v194 << 8) ^ 0xF0820000) & v194)));
  v197 = (((v170 ^ 0x4503A0C7) - 1501679933) ^ ((v170 ^ 0xA60B5065) + 1165418081) ^ ((v170 ^ 0x72A7153F) - 1847944389))
       - 2119418733;
  v198 = (v197 ^ 0xD05D725A) & (2 * (v197 & 0x841E6310)) ^ v197 & 0x841E6310;
  v199 = ((2 * (v197 ^ 0xD859365A)) ^ 0xB88EAA94) & (v197 ^ 0xD859365A) ^ (2 * (v197 ^ 0xD859365A)) & 0x5C47554A;
  v200 = (v199 ^ 0x5402410A) & (4 * v198) ^ v198;
  v201 = ((4 * (v199 ^ 0x4441554A)) ^ 0x711D5528) & (v199 ^ 0x4441554A) ^ (4 * (v199 ^ 0x4441554A)) & 0x5C475548;
  v202 = (v201 ^ 0x50055500) & (16 * v200) ^ v200;
  v203 = ((16 * (v201 ^ 0xC420042)) ^ 0xC47554A0) & (v201 ^ 0xC420042) ^ (16 * (v201 ^ 0xC420042)) & 0x5C475540;
  v204 = v202 ^ 0x5C47554A ^ (v203 ^ 0x44455400) & (v202 << 8);
  LODWORD(STACK[0x1760]) = LODWORD(STACK[0x17D8]) ^ v105;
  LODWORD(STACK[0x161C]) = 2 * LODWORD(STACK[0x172C]);
  LODWORD(STACK[0x1610]) = 2 * v94;
  v205 = v197 ^ (2
               * ((v204 << 16) & 0x5C470000 ^ v204 ^ ((v204 << 16) ^ 0x554A0000) & (((v203 ^ 0x1802014A) << 8) & 0x5C470000 ^ 0x18020000 ^ (((v203 ^ 0x1802014A) << 8) ^ 0x47550000) & (v203 ^ 0x1802014A))));
  LODWORD(STACK[0x17B0]) = ((v176 - 646557559) ^ 0x6ABA4F6) - 1430389602 + ((v187 - 1291347787) ^ 0x33441D3D);
  LODWORD(STACK[0x16B0]) = v130;
  LODWORD(STACK[0x160C]) = (2 * v112) & 0x1A5B28CE;
  LODWORD(STACK[0x15E0]) = v112 + v13;
  LODWORD(STACK[0x15DC]) = (2 * v120) & 0x1A5B28CE;
  LODWORD(STACK[0x15C0]) = v120 + v13;
  LODWORD(STACK[0x1560]) = 2 * v140;
  LODWORD(STACK[0x1530]) = 2 * v150;
  LODWORD(STACK[0x14B8]) = 2 * v160;
  LODWORD(STACK[0x14F0]) = v185;
  LODWORD(STACK[0x1798]) = v185 ^ 0x73FBEBFA;
  LODWORD(STACK[0x17A0]) = (((v43 ^ 0x32609013) - 1832553412) ^ ((v43 ^ 0xAAB46DC9) + 168921570) ^ ((v43 ^ 0x4AA3726A)
                                                                                                  - 368667069))
                         - 1752645441;
  LODWORD(STACK[0x172C]) = v196 ^ 0xE557A18B;
  LODWORD(STACK[0x1818]) = v205 ^ 0x19395DE3;
  LODWORD(STACK[0x1898]) = (v205 ^ 0x19395DE3) & 0x19 ^ 1;
  LODWORD(STACK[0x1788]) = v205;
  LODWORD(STACK[0x1870]) = (v205 ^ 4) & 6;
  LODWORD(STACK[0x1850]) = v171 & 0x1D ^ 5;
  v206 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0x1838])) - 8);
  LODWORD(STACK[0x17D8]) = LODWORD(STACK[0x17CC]) ^ v13;
  LODWORD(STACK[0x1838]) = ~v171 & 2;
  return v206();
}

uint64_t sub_1002B5068(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unint64_t v58;

  v9 = v4
     + 1571834210
     - ((v4 + 1571834210) >> 12)
     - ((v4 + 1571834210 - ((v4 + 1571834210) >> 12)) >> 8);
  v10 = v9 - 1288809620 - ((v9 - 1288809620) >> 14) + ((v9 - 1288809620 - ((v9 - 1288809620) >> 14)) >> 5);
  v11 = (v10 ^ 0xBA053204) + ((v10 ^ 0xBA053204) >> 10) - (((v10 ^ 0xBA053204) + ((v10 ^ 0xBA053204) >> 10)) >> 7);
  v12 = v11 + 1587428776 - ((v11 + 1587428776) >> 12) - ((v11 + 1587428776 - ((v11 + 1587428776) >> 12)) >> 3);
  v13 = (((LODWORD(STACK[0x1358]) ^ 0x4E97F0EE) - 1318580462) ^ ((LODWORD(STACK[0x1358]) ^ 0xBB1417BB) + 1156311109) ^ ((LODWORD(STACK[0x1358]) ^ 0x78AE7332) - 2024698674))
      - 2119842611;
  v14 = v6 & (4 * v10) ^ v10;
  v15 = v12 - 1926392729 - ((2 * v12) & 0x1A5B28CE);
  v16 = v13 & 0x85052353 ^ 0x11867037 ^ (v13 ^ 0x94811342) & (2 * (v13 & 0x85052353));
  v17 = ((2 * (v13 ^ 0x94835364)) ^ 0x230CE06E) & (v13 ^ 0x94835364) ^ (2 * (v13 ^ 0x94835364)) & 0x11867036;
  v19 = v17 & 0x6E1C844E ^ v16 ^ ((4 * v16) ^ 0x28054492) & (v17 ^ 0x1046027);
  v20 = ((4 * v17) ^ 0x6A0D04D6) & (v17 ^ 0x1046027) ^ v17 & 0x6E1C844E;
  v21 = v20 & 0x6E1C844E ^ v19 ^ ((16 * v19) ^ 0x763B875E) & (v20 ^ 0x40007);
  v22 = ((16 * v20) ^ 0x6E5C842E) & (v20 ^ 0x40007) ^ v20 & 0x6E1C844E;
  v23 = v21 ^ v22 & 0x6E1C844E ^ ((v21 << 8) ^ 0xE86CB34E) & (v22 ^ 0x40037);
  v24 = ((v22 << 8) ^ 0x6A1C824E) & (v22 ^ 0x40037) ^ v22 & 0x6E1C844E;
  v25 = v13 ^ (2
             * (v23 ^ v24 & 0x6E1C844E ^ ((v23 << 16) ^ 0x1E2D844E) & (v24 ^ 0x11820000) ^ ((v23 << 16) ^ 0x1E2D844E) & 0x11860006));
  v26 = v14 - 1926392729 - ((2 * v14) & 0x1A5B28CE);
  v27 = STACK[0x1760];
  v28 = ((LODWORD(STACK[0x1260]) ^ v27) - 1926392729 - ((2 * (LODWORD(STACK[0x1260]) ^ v27)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1758]);
  v29 = (((v15 ^ 0x6E5E25E2) - 1851663842) ^ ((v15 ^ 0xA9A5A29E) + 1448762722) ^ ((v15 ^ 0x4AD6131B) - 1255543579))
      + 1912047207;
  v30 = v29 + (v29 >> 10) - ((v29 + (v29 >> 10)) >> 8);
  v31 = (v30 ^ 0x8565F506) - ((v30 ^ 0x8565F506) >> 12) - (((v30 ^ 0x8565F506) - ((v30 ^ 0x8565F506) >> 12)) >> 5);
  v32 = (v31 ^ 0xCDB74B8C) - ((v31 ^ 0xCDB74B8C) >> 12) - (((v31 ^ 0xCDB74B8C) - ((v31 ^ 0xCDB74B8C) >> 12)) >> 6);
  v33 = (v32 ^ 0xF8C7590D) + ((v32 ^ 0xF8C7590D) >> 12) + (((v32 ^ 0xF8C7590D) + ((v32 ^ 0xF8C7590D) >> 12)) >> 3);
  v34 = STACK[0x1638];
  v35 = ((((v25 ^ 0x12BBD63C) - 966754662) ^ ((v25 ^ 0x29A2975E) - 42385412) ^ ((v25 ^ 0x9D10825F) + 1238051579))
       + 330317998) ^ v6 & (4 * LODWORD(STACK[0x1760])) ^ 0x24A20194 ^ v28 ^ (4
                                                                            * (((v28 & 0x3BA8EA75 ^ 0x3BA8EA75)
                                                                              + (v28 & 0x3BA8EA75)) & v28)) ^ v9 ^ v6 & (4 * v9) ^ ((v6 & (4 * v15) ^ 0x24A20194) - 1926392729 - ((2 * (v6 & (4 * v15) ^ 0x24A20194)) & 0x18430088)) ^ v8;
  v36 = ((LODWORD(STACK[0x1638]) ^ LODWORD(STACK[0x1688]))
       - 1926392729
       - ((2 * (LODWORD(STACK[0x1638]) ^ LODWORD(STACK[0x1688]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14C8]);
  v37 = v32 ^ v15 ^ ((v35 ^ v6 & (4 * v32)) - 1926392729 - ((2 * (v35 ^ v6 & (4 * v32))) & 0x1A5B28CE));
  v38 = (v37 - 1926392729 - ((2 * v37) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1760]);
  LODWORD(STACK[0x16E0]) = v38 - 1926392729 - ((2 * v38) & 0x1A5B28CE);
  v39 = v34 ^ 0x8D2D9467 ^ LODWORD(STACK[0x1648]);
  v40 = (v33 | 0x2AFBB34F) + (v33 & 0x2AFBB34F) + 1 - (((v33 | 0x2AFBB34F) + (v33 & 0x2AFBB34F) + 1) >> 15);
  v41 = ((v6 & (4 * v34) ^ 0x24A20194) - 1926392729 - ((2 * (v6 & (4 * v34) ^ 0x24A20194)) & 0x18430088)) ^ v34;
  v42 = v36 ^ LODWORD(STACK[0x15E8]) ^ v41 ^ ((v6 & (4 * v36)) - 1926392729 - ((8 * v36) & 0x18430088)) ^ v7 ^ v26 ^ v30 ^ v6 & (4 * v30) ^ v33 ^ v6 & (4 * v33);
  v43 = ((LODWORD(STACK[0x1858]) ^ 0x1B691DF0) - 459873776) ^ ((LODWORD(STACK[0x1858]) ^ 0x79A27D3) - 127543251) ^ ((LODWORD(STACK[0x1858]) ^ 0x91DEAE44) + 1847677372);
  LODWORD(STACK[0x1158]) = v39;
  v44 = STACK[0x1514];
  LODWORD(STACK[0x16D8]) = v27 ^ 0xFDA3416;
  LODWORD(STACK[0x1688]) = (v27 ^ 0xE5E21A1C) + 438167012;
  LODWORD(STACK[0x1760]) = (v27 ^ 0x6715BA6D) - 1729477229;
  LODWORD(STACK[0x1680]) = v42 - 1926392729 - ((2 * v42) & 0x1A5B28CE);
  v45 = v39 ^ v44 ^ LODWORD(STACK[0x1520]) ^ ((v6 & (4 * (v39 ^ v44))) - 1926392729 - ((8 * (v39 ^ v44)) & 0x18430088)) ^ v41 ^ v11 ^ v6 & (4 * v11) ^ a4 ^ v31 ^ ((v6 & (4 * v31)) - 1926392729 - ((8 * v31) & 0x18430088)) ^ (v40 - (v40 >> 8)) ^ v6 & (4 * (v40 - (v40 >> 8)));
  v46 = (v45 - 1926392729 - ((2 * v45) & 0x1A5B28CE)) ^ v44;
  LODWORD(STACK[0x1738]) = v46;
  LODWORD(STACK[0x1798]) = v46 ^ 0x6C7F0721;
  LODWORD(STACK[0x18A8]) = LODWORD(STACK[0xE20]) ^ 0x8D2D9467;
  v47 = ((v43 + 34378440) ^ 0xAAB5E5DF) & (2 * ((v43 + 34378440) & 0x8B21019F)) ^ (v43 + 34378440) & 0x8B21019F;
  v48 = ((2 * ((v43 + 34378440) ^ 0xB8B7E4E1)) ^ 0x672DCAFC) & ((v43 + 34378440) ^ 0xB8B7E4E1) ^ (2
                                                                                                * ((v43 + 34378440) ^ 0xB8B7E4E1)) & 0x3396E57E;
  v49 = v48 ^ 0x10922502;
  v50 = (v48 ^ 0x2116217C) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0xCE5B95F8) & v49 ^ (4 * v49) & 0x3396E57C;
  v52 = (v51 ^ 0x2128576) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x31846006)) ^ 0x396E57E0) & (v51 ^ 0x31846006) ^ (16 * (v51 ^ 0x31846006)) & 0x3396E570;
  v54 = v52 ^ 0x3396E57E ^ (v53 ^ 0x31064500) & (v52 << 8);
  v55 = (v43 + 34378440) ^ (2
                          * ((v54 << 16) & 0x33960000 ^ v54 ^ ((v54 << 16) ^ 0x657E0000) & (((v53 ^ 0x290A01E) << 8) & 0x33960000 ^ 0x21120000 ^ (((v53 ^ 0x290A01E) << 8) ^ 0x16E50000) & (v53 ^ 0x290A01E))));
  v56 = STACK[0x13F0];
  LODWORD(STACK[0x1858]) = LODWORD(STACK[0x13F0]) ^ 0x8D2D9467;
  LODWORD(STACK[0x17CC]) = v56 & 0xED ^ 0x88 | (v56 ^ 0x8D2D9467) & 0xED;
  LODWORD(STACK[0x1610]) = v55;
  LODWORD(STACK[0x1898]) = v55 ^ 0xAE20CB63;
  v57 = STACK[0x1518] & 0x6A40220D;
  LODWORD(STACK[0x1828]) = LODWORD(STACK[0x10DC]) ^ 0x67;
  v58 = STACK[0x14B8];
  LODWORD(STACK[0x1890]) = STACK[0x14B8] & 0x1F ^ 7;
  LODWORD(STACK[0x17D8]) = LODWORD(STACK[0x1768]) ^ 0xAD0E3E2A;
  LODWORD(STACK[0x17C0]) = LODWORD(STACK[0x1420]) ^ 0x94265234;
  LODWORD(STACK[0x1840]) = v58 & 0x16 ^ 6;
  LODWORD(STACK[0x1838]) = v58 & 9 ^ 1;
  LODWORD(STACK[0x17A8]) = (v57 ^ 0x62402208)
                         - 1782587653
                         + ((((2 * (v57 ^ 0x4A00200C)) & 0x10804400) - (v57 ^ 0x4A00200C) + 1723026607) & 0xFFC1FE0D ^ 0x24816C04);
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * v5))();
}

uint64_t sub_1002B5910@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W6>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned __int8 v24;
  char v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unint64_t v71;
  unsigned int v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  int v82;

  v13 = ((v4 & LODWORD(STACK[0x18A8]) ^ 0xD92BF896 | 0xB5) - (v4 & LODWORD(STACK[0x18A8]) ^ 0xD92BF896 | 0x4A) + 74) ^ 0x23;
  v14 = (71
                        * (((v4 & LOBYTE(STACK[0x18A8]) ^ 0x96 | 0xB5) - (v4 & LOBYTE(STACK[0x18A8]) ^ 0x96 | 0x4A) + 74) ^ 0x23))
      + 2070871125;
  LODWORD(STACK[0x1850]) = v8 ^ 0x887;
  v15 = v14 ^ ((v8 ^ 0x887) + 1656822622);
  v16 = 2 * (v14 & 0x410C);
  v17 = (v16 | 0x1000) & v15;
  v18 = (2 * v15) & 0x200C ^ 0x1004 ^ ((2 * v15) ^ 0x8A00018) & v15;
  v19 = v16 & 8 ^ (v14 & 0x410C | 0x6401C00) ^ v17 ^ (4 * (v16 & 8 ^ (v14 & 0x410C | 0x6401C00) ^ v17)) & 0x66503008 ^ ((4 * (v16 & 8 ^ (v14 & 0x410C | 0x6401C00) ^ v17)) ^ 0x1900C000) & v18;
  v20 = (4 * v18) & 0x6650300C ^ 0x6610300C ^ ((4 * v18) ^ 0x1940C030) & v18;
  v21 = (16 * (v19 ^ 0xE010000C)) & v5 ^ v19 ^ 0xE010000C ^ ((16 * (v19 ^ 0xE010000C)) ^ 0x650300C0) & v20;
  v22 = (16 * v20) & v5 ^ 0x8250300C ^ ((16 * v20) ^ 0x650300C0) & v20;
  v23 = (v21 << 8) & v5 ^ v21 ^ ((v21 << 8) ^ 0x50300C00) & v22;
  v24 = (LODWORD(STACK[0x17CC]) ^ (71 * v13) ^ 0x48 ^ *(_BYTE *)(v9
                                                               + (v14 ^ (2
                                                                       * ((v23 << 16) & 0x66500000 ^ v23 ^ ((v23 << 16) ^ 0x300C0000) & ((v22 << 8) & (v5 - 12288) ^ 0x26400000 ^ ((v22 << 8) ^ 0x50300000) & v22))) ^ 0x40113D14)))
      - 107;
  v25 = STACK[0x1858];
  v26 = (((v4 ^ (2 * v24)) & STACK[0x1828]) >> LODWORD(STACK[0x1890]))
      + ((v4 ^ (2 * v24)) << v25);
  v27 = (2
       * ((*(_DWORD *)(STACK[0x17D0] + 4 * v4) & STACK[0x1898] ^ 0x80121105 | 0x18FCD9E1)
        - (*(_DWORD *)(STACK[0x17D0] + 4 * v4) & STACK[0x1898] ^ 0x80121105 | 0x6703261E))
       - 838448068) ^ *(_DWORD *)(STACK[0x17D0] + 4 * v4);
  v28 = ((((((v27 ^ 0x31DD91C8) & STACK[0x17C0] ^ v27 & 0x190BC653) & 0x978CF2 ^ 0x960CE3)
         + (((v27 ^ 0x31DD91C8) & STACK[0x17C0] ^ v27 & 0x190BC653) & 0xFF68730D)
         - 1) ^ 0x119F8CA2) >> LODWORD(STACK[0x1838]) >> LODWORD(STACK[0x1840]))
      + (((948089660
         - (v27 & 0x2023AA4D ^ 0x20022808 ^ (v27 ^ 0x31DD91C8) & STACK[0x17D8] | 0x3882B33C)
         + (v27 & 0x2023AA4D ^ 0x20022808 ^ (v27 ^ 0x31DD91C8) & STACK[0x17D8] | 0xC77D4CC3)) ^ 0xC77EE483) << v25);
  v29 = (LODWORD(STACK[0x1750]) ^ LODWORD(STACK[0x17E0]) ^ (v26 - ((2 * v26) & 0xCF) + 103)) ^ 0x67;
  v30 = v28 - 1926392729 - ((2 * v28) & 0x1A5B28CE);
  v31 = LODWORD(STACK[0x17A8]) + v29;
  v32 = v29 + 563495166;
  v33 = ((v29 + 563495166) & 0x13 | (32 * ((((v29 + 563495166) & 0x13u) >> 4) & 1)) | 0x2461400) ^ ((2 * ((v29 + 563495166) & 0x13)) | 0x8000) & ((v29 + 563495166) ^ 0x8CA69C23);
  v34 = (2 * (v32 ^ 0x8CA69C23)) & 0xA30 ^ 0x5210 ^ ((2 * (v32 ^ 0x8CA69C23)) ^ 0xA5109C60) & (v32 ^ 0x8CA69C23);
  v35 = (4 * v33) & v11 ^ v33 ^ ((4 * v33) ^ 0x9195000) & v34;
  v36 = (4 * v34) & v11 ^ 0x10C20630 ^ ((4 * v34) ^ 0x4B3D78C0) & v34;
  v37 = (16 * v35) & v11 ^ v35 ^ ((16 * v35) ^ 0x24F04000) & v36;
  v38 = (16 * v36) & v11 ^ 0x520A1C30 ^ ((16 * v36) ^ 0x2CF5E300) & v36;
  v39 = v37 ^ (v37 << 8) & (v11 - 48) ^ ((v37 << 8) ^ 0x8F440000) & v38;
  v40 = 373 * v31 + 399887376;
  v41 = (v40 ^ 0xEC02ABE2) & (2 * (v40 & 0xE82A33F0)) ^ v40 & 0xE82A33F0;
  v42 = v32 ^ (2
             * (((v39 ^ 0x52041A30) << 16) & 0x52CF0000 ^ v39 ^ 0x52041A30 ^ (((v39 ^ 0x52041A30) << 16) ^ 0x5E300000) & ((v38 << 8) & 0x52CF0000 ^ 0x10810000 ^ ((v38 << 8) ^ 0x4F5E0000) & v38)));
  v43 = ((2 * (v40 ^ 0xBC468F42)) ^ 0xA8D97964) & (v40 ^ 0xBC468F42) ^ (2 * (v40 ^ 0xBC468F42)) & (a3 + 2);
  v44 = v43 ^ 0x54248492;
  v45 = (v43 ^ 0x481800) & (4 * v41) ^ v41;
  v46 = ((4 * v44) ^ 0x51B2F2C8) & v44 ^ (4 * v44) & a3;
  v47 = ((16 * (v46 ^ 0x44C0C32)) ^ 0x46CBCB20) & (v46 ^ 0x44C0C32) ^ (16 * (v46 ^ 0x44C0C32)) & a3;
  v48 = (v46 ^ 0x5020B080) & (16 * v45) ^ v45 ^ (a3 + 2) ^ (v47 ^ 0x44488892) & (((v46 ^ 0x5020B080) & (16 * v45) ^ v45) << 8);
  v49 = v40 ^ (2
             * ((v48 << 16) & 0x546C0000 ^ v48 ^ ((v48 << 16) ^ 0x3CB20000) & (((v47 ^ 0x10243492) << 8) & 0x546C0000 ^ 0x10400000 ^ (((v47 ^ 0x10243492) << 8) ^ 0x6CBC0000) & (v47 ^ 0x10243492)))) ^ 0xE59EDEF3;
  v50 = 0x3EE4F99CBEA615
      * (((v49 ^ 0x17F4D1F7184C2068) - 0x17F4D1F7184C2068) ^ ((v49 ^ 0x28E3C68A27517729) - 0x28E3C68A27517729) ^ ((v49 ^ 0x3F17177DB230C326) - 0x3F17177DB230C326))
      - 0x47FE265FF13D57A7;
  v51 = (v50 ^ 0x74DB164EF8870C52) & (2 * (v50 & 0x78E22468FCA74E1ALL)) ^ v50 & 0x78E22468FCA74E1ALL;
  v52 = ((2 * (v50 ^ 0x451F56DE58C71C52)) ^ 0x7BFAE56D48C0A490) & (v50 ^ 0x451F56DE58C71C52) ^ (2 * (v50 ^ 0x451F56DE58C71C52)) & a1;
  v53 = v52 ^ 0x4051292A4205248;
  v54 = (v52 ^ 0x2198202400000000) & (4 * v51) ^ v51;
  v55 = ((4 * v53) ^ 0xF7F5CADA91814920) & v53 ^ (4 * v53) & a1;
  v56 = (v55 ^ 0x35F5429280004000) & (16 * v54) ^ v54;
  v57 = ((16 * (v55 ^ 0x808302424601248)) ^ 0xDFD72B6A46052480) & (v55 ^ 0x808302424601248) ^ (16 * (v55 ^ 0x808302424601248)) & (a1 - 8);
  v58 = (v57 ^ 0x1DD5222204000000) & (v56 << 8) ^ v56;
  v59 = (((v57 ^ 0x20285094A0605248) << 8) ^ 0xFD72B6A460524800) & (v57 ^ 0x20285094A0605248) ^ ((v57 ^ 0x20285094A0605248) << 8) & (a1 - 72);
  v60 = v58 ^ a1 ^ (v59 ^ 0x3D7032A420400000) & (v58 << 16);
  v61 = v50 ^ (2
             * ((v60 << 32) & 0x3DFD72B600000000 ^ v60 ^ ((v60 << 32) ^ 0x2460524800000000) & (((v59 ^ 0x8D401284201248) << 16) & 0x3DFD72B600000000 ^ 0xD49529600000000 ^ (((v59 ^ 0x8D401284201248) << 16) ^ 0x72B6A46000000000) & (v59 ^ 0x8D401284201248))));
  v62 = ((v61 ^ 0x149B01AA9DF37751) + 0x6B824BFA3B4AF07FLL) ^ ((v61 ^ 0x47273D82F65B6E7ALL) + 0x383E77D250E2E956);
  LODWORD(v59) = __CFADD__((v62 ^ ((v61 ^ 0x1864592DDFCFF3A1) + 0x677D137D7976748FLL)) * v10, 0x45AD57B932A5B254)
               + (((v62 ^ ((v61 ^ 0x1864592DDFCFF3A1uLL) + 0x677D137D7976748FLL)) * (unsigned __int128)v10) >> 64)
               + ((v12 + __CFADD__(v61 ^ 0x149B01AA9DF37751, 0x6B824BFA3B4AF07FLL)) ^ (v12
                                                                                       + __CFADD__(v61 ^ 0x47273D82F65B6E7ALL, 0x383E77D250E2E956)) ^ (v12 + __CFADD__(v61 ^ 0x1864592DDFCFF3A1, 0x677D137D7976748FLL)))* v10+ 790692638;
  LODWORD(v62) = (v59 ^ 0xD4DFCB18) & (2 * (v59 & 0xD0DF001D)) ^ v59 & 0xD0DF001D;
  LODWORD(v61) = ((2 * (v59 ^ 0x55C9CB38)) ^ 0xA2D964A) & (v59 ^ 0x55C9CB38) ^ (2 * (v59 ^ 0x55C9CB38)) & a4;
  v63 = v61 ^ 0x85124925;
  v64 = 373 * (((v42 ^ 0x1F6887C6) - 1303539154) ^ ((v42 ^ 0x6EC202BF) - 1008265387) ^ ((v42 ^ 0xAE5DFB0A) + 58257122))
      - 839704795;
  v65 = (v64 ^ 0xD46552ED) & (2 * (v64 & 0xE5761AEE)) ^ v64 & 0xE5761AEE;
  v66 = ((2 * (v64 ^ 0x96CD67B9)) ^ 0xE776FAAE) & (v64 ^ 0x96CD67B9) ^ (2 * (v64 ^ 0x96CD67B9)) & (v7 + 6);
  v67 = v66 ^ 0x10890551;
  v68 = (v66 ^ 0x23307800) & (4 * v65) ^ v65;
  LODWORD(v61) = (v61 ^ 0x64901) & (4 * v62) ^ v62;
  LODWORD(v62) = ((4 * v67) ^ 0xCEEDF55C) & v67 ^ (4 * v67) & (v7 + 4);
  v69 = v62 ^ 0x31120803;
  LODWORD(v62) = (v62 ^ 0x42A97540) & (16 * v68) ^ v68;
  v70 = ((4 * v63) ^ 0x145B2C94) & v63 ^ (4 * v63) & a4;
  LODWORD(v53) = ((16 * v69) ^ 0x3BB7D570) & v69 ^ (16 * v69) & v7;
  LODWORD(v62) = v62 ^ (v7 + 7) ^ (v53 ^ 0x33B35500) & ((_DWORD)v62 << 8);
  LODWORD(v62) = ((_DWORD)v62 << 16) & 0x73BB0000 ^ v62 ^ (((_DWORD)v62 << 16) ^ 0x7D570000) & (((v53 ^ 0x40082807) << 8) & 0x73BB0000 ^ 0x40820000 ^ (((v53 ^ 0x40082807) << 8) ^ 0x3B7D0000) & (v53 ^ 0x40082807));
  LODWORD(v61) = (v70 ^ 0x4120801) & (16 * v61) ^ v61;
  v71 = 0x3EE4F99CBEA615
      * (((v64 ^ (2 * (_DWORD)v62) ^ 0xB9A8478243571693) + 0x4657B87DD1A39D4CLL) ^ ((v64 ^ (2 * (_DWORD)v62) ^ 0x45AB3D5A96A7675BLL)
                                                                                    - 0x45AB3D5AFBAC137CLL) ^ ((v64 ^ (2 * (_DWORD)v62) ^ 0xFC037AD835D69188) + 0x3FC8527A7221A51))
      - 0xC568AD362AC9EB9;
  v72 = ((16 * (v70 ^ 0x8104C321)) ^ 0x516CB250) & (v70 ^ 0x8104C321) ^ (16 * (v70 ^ 0x8104C321)) & (a4 - 4);
  v73 = (v71 ^ 0xB838849A4D8684A9) & (2 * (v71 & 0x3D3A88DC6E16952CLL)) ^ v71 & 0x3D3A88DC6E16952CLL;
  v74 = ((2 * (v71 ^ 0xF87984025DA6A4B1)) ^ 0x8A8619BC6760633ALL) & (v71 ^ 0xF87984025DA6A4B1) ^ (2 * (v71 ^ 0xF87984025DA6A4B1)) & v6;
  v75 = ((4 * (v74 ^ 0x4541044210901085)) ^ 0x150C3378CEC0C674) & (v74 ^ 0x4541044210901085) ^ (4 * (v74 ^ 0x4541044210901085)) & v6;
  v76 = (v75 ^ 0x500005802800000) & (16 * ((v74 ^ 0x8002009020202110) & (4 * v73) ^ v73)) ^ (v74 ^ 0x8002009020202110) & (4 * v73) ^ v73;
  LODWORD(v61) = v61 ^ (a4 + 1) ^ (v72 ^ 0x1048225) & ((_DWORD)v61 << 8);
  v77 = ((16 * (v75 ^ 0xC0430C8631303189)) ^ 0x5430CDE33B0319D0) & (v75 ^ 0xC0430C8631303189) ^ (16 * (v75 ^ 0xC0430C8631303189)) & (v6 - 12);
  v78 = (v77 ^ 0x44000CC233001100) & (v76 << 8) ^ v76;
  v79 = (((v77 ^ 0x8143001C00B0200DLL) << 8) ^ 0x430CDE33B0319D00) & (v77 ^ 0x8143001C00B0200DLL) ^ ((v77 ^ 0x8143001C00B0200DLL) << 8) & (v6 - 156);
  v80 = v71 ^ (2
             * (((v78 ^ (v6 + 1) ^ (v79 ^ 0x41000C1230300000) & (v78 << 16)) << 32) & 0x45430CDE00000000 ^ v78 ^ (v6 + 1) ^ (v79 ^ 0x41000C1230300000) & (v78 << 16) ^ (((v78 ^ (v6 + 1) ^ (v79 ^ 0x41000C1230300000) & (v78 << 16)) << 32) ^ 0x33B0319D00000000) & (((v79 ^ 0x844300CC0380209DLL) << 16) & 0x45430CDE00000000 ^ 0x41010C4E00000000 ^ (((v79 ^ 0x844300CC0380209DLL) << 16) ^ 0xCDE33B000000000) & (v79 ^ 0x844300CC0380209DLL))));
  LODWORD(v61) = v59 ^ (2
                      * (((_DWORD)v61 << 16) & 0x5160000 ^ v61 ^ (((_DWORD)v61 << 16) ^ 0x4B250000) & (((v72 ^ 0x84124925) << 8) & 0x85160000 ^ 0x1140000 ^ (((v72 ^ 0x84124925) << 8) ^ 0x16CB0000) & (v72 ^ 0x84124925))));
  LODWORD(v59) = LODWORD(STACK[0x1790]) ^ LODWORD(STACK[0x17BC]);
  v81 = ((v80 ^ 0x7C0BE49D809BF4EELL) + 0x4E66185047DBFB47) ^ ((v80 ^ 0xDAB155A0B04D8F8DLL) - 0x1723569288F27FDALL);
  *((_DWORD *)&STACK[0x18D0] + (v61 ^ 0xD8FA9657)) = v59 ^ v30;
  LODWORD(v61) = __CFADD__((v81 ^ ((v80 ^ 0x1306216539A08D75) + 0x216BDDA8FEE082DELL)) * v10, 0x2D94063EA43B7492)
               + (((v81 ^ ((v80 ^ 0x1306216539A08D75) + 0x216BDDA8FEE082DELL)) * (unsigned __int128)v10) >> 64)
               + ((v12 + __CFADD__(v80 ^ 0x7C0BE49D809BF4EELL, 0x4E66185047DBFB47)) ^ (v12
                                                                                       + __CFADD__(v80 ^ 0xDAB155A0B04D8F8DLL, 0xE8DCA96D770D8026)) ^ (v12 + __CFADD__(v80 ^ 0x1306216539A08D75, 0x216BDDA8FEE082DELL)))* v10+ 1148860573;
  LODWORD(v80) = ((2 * (v61 ^ 0x4C73CEDF)) ^ 0xEFEC0F26) & (v61 ^ 0x4C73CEDF) ^ (2 * (v61 ^ 0x4C73CEDF)) & (a2 + 2);
  LODWORD(v79) = 4 * (v80 ^ 0x10120091);
  LODWORD(v81) = (v61 ^ 0x3B71CC4F) & (2 * (v61 & 0xBB85C94C)) ^ v61 & 0xBB85C94C;
  v82 = (v79 ^ 0xDFD81E4C) & (v80 ^ 0x10120091);
  LODWORD(v80) = (v80 ^ 0xE6240700) & (4 * v81) ^ v81;
  LODWORD(v81) = v82 ^ v79 & a2;
  LODWORD(v80) = (v81 ^ 0xD7D00600) & (16 * v80) ^ v80;
  LODWORD(v81) = ((16 * (v81 ^ 0x20260193)) ^ 0x7F607930) & (v81 ^ 0x20260193) ^ (16 * (v81 ^ 0x20260193)) & a2;
  LODWORD(v80) = v80 ^ (a2 + 3) ^ (v81 ^ 0x77600100) & ((_DWORD)v80 << 8);
  *((_DWORD *)&STACK[0x18D0]
  + (v61 ^ (2
                        * (((_DWORD)v80 << 16) & 0x77F60000 ^ v80 ^ (((_DWORD)v80 << 16) ^ 0x7930000) & (((v81 ^ 0x80960683) << 8) & (a2 - 1936) ^ (((v81 ^ 0x80960683) << 8) ^ 0x76070000) & (v81 ^ 0x80960683) ^ 0x1F00000))) ^ 0x5B4DC66A)) = v59 ^ (*(unsigned __int8 *)(STACK[0x17F8] + v4) - 1926392729 - ((2 * *(unsigned __int8 *)(STACK[0x17F8] + v4)) & 0xCE));
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((97 * (v4 == 255)) ^ v8)))();
}

uint64_t sub_1002B6A64(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  char v14;
  unint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  char v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  char v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  unint64_t v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unint64_t v226;
  int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  int v251;
  int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  unsigned int v290;
  int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  char v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  unint64_t v308;
  unsigned int v309;
  unsigned int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  int v322;
  unsigned int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  unsigned int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  int v357;
  unsigned int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  int v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  int v388;
  int v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  int v396;
  int v397;
  unsigned int v398;
  int v399;
  int v400;
  int v401;
  unsigned int v402;
  int v403;
  unsigned int v404;
  int v405;
  int v406;
  int v407;
  unsigned int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  int v416;
  int v417;
  unsigned int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  unsigned int v426;
  int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  unsigned int v433;
  int v434;
  unsigned int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  int v453;
  int v454;
  unsigned int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  unsigned int v460;
  int v461;
  unsigned int v462;
  int v463;
  unsigned int v464;
  int v465;
  int v466;
  unsigned int v467;
  int v468;
  int v469;
  int v470;
  unsigned int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  unsigned int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  unsigned int v486;
  int v487;
  int v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  unsigned int v492;
  int v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  int v497;
  unsigned int v498;
  unsigned int v499;
  int v500;
  int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  unsigned int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  unsigned int v521;
  unsigned int v522;
  int v523;
  unsigned int v524;
  unsigned int v525;
  int v526;
  unsigned int v527;
  int v528;
  int v529;
  unsigned int v530;
  int v531;
  int v532;
  int v533;
  unsigned int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  unsigned int v544;
  unsigned int v545;
  unsigned int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  unsigned int v551;
  int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  int v559;
  int v560;
  unsigned int v561;
  int v562;
  unsigned int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  unsigned int v568;
  int v569;
  unsigned int v570;
  int v571;
  unsigned int v572;
  int v573;
  unsigned int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  unsigned int v580;
  int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  int v587;
  int v588;
  unsigned int v589;
  unsigned int v590;
  int v591;
  int v592;
  unsigned int v593;
  int v594;
  unsigned int v595;
  int v596;
  int v597;
  unsigned int v598;
  int v599;
  unsigned int v600;
  unsigned int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  int v625;
  int v626;
  int v627;
  int v628;
  int v629;
  int v630;
  int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  unsigned int v640;
  int v641;
  int v642;
  int v643;
  int v644;
  unsigned int v645;
  unsigned int v646;
  int v647;
  unsigned int v648;
  unsigned int v649;
  int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  int v654;
  int v655;
  unsigned int v656;
  unsigned int v657;
  int v658;
  int v659;
  unsigned int v660;
  unsigned int v661;
  int v662;
  unint64_t v663;
  unsigned int v664;
  unsigned int v665;
  int v666;
  int v667;
  unsigned int v668;
  int v669;
  int v670;
  int v671;
  unsigned int v672;
  int v673;
  unsigned int v674;
  unsigned int v675;
  unsigned int v676;
  unsigned int v677;
  int v678;
  unsigned int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  unsigned int v689;
  int v690;
  unsigned int v691;
  int v692;
  int v693;
  int v694;
  int v695;
  int v696;
  int v697;
  uint64_t (*v698)(void);

  LODWORD(STACK[0x14D0]) = a1;
  LODWORD(STACK[0x17D8]) = LODWORD(STACK[0x16E0]) ^ LODWORD(STACK[0x1758]);
  v4 = LODWORD(STACK[0x1688]) ^ LODWORD(STACK[0x1760]);
  LODWORD(STACK[0x17BC]) = LODWORD(STACK[0x1680]) ^ LODWORD(STACK[0x14C8]);
  LODWORD(STACK[0x1758]) = (LODWORD(STACK[0x16D8]) - 265958422) ^ v4;
  v5 = STACK[0xE20];
  v6 = STACK[0x1868] & 0x1BA857C0 ^ 0x1B800280 ^ (LODWORD(STACK[0xE20]) ^ 0x9685C3A7) & (LODWORD(STACK[0x1868]) ^ 0x8D2D9467);
  v7 = (2 * ((v6 | 0x5EFCF798) - (v6 | 0x21030867)) + 1107693774) ^ 0x98A9C2B0;
  v8 = (v7 - 1926392729 - ((2 * v7) & 0x1A5B28CC)) ^ LODWORD(STACK[0x1868]);
  v9 = STACK[0x14B0];
  v10 = LODWORD(STACK[0x14B0]) ^ 0x8D2D9467;
  v11 = STACK[0x14B0];
  LODWORD(STACK[0x14B0]) = STACK[0x14B0];
  v12 = LODWORD(STACK[0x10DC]) ^ 0x8D2D9467;
  v13 = ((((v9 ^ 0x8D2D9467) & v8 ^ 0x1B502060) - ((2 * ((v9 ^ 0x8D2D9467) & v8 ^ 0x1B502060)) & 0x4ECF374E) - 1486382169) ^ 0xBC37BBC7) << LODWORD(STACK[0x1858]);
  v14 = STACK[0x1858];
  v15 = STACK[0x14B8];
  v16 = STACK[0x14B8] & 0x1C ^ 4;
  LODWORD(STACK[0x14A8]) = v16;
  v17 = ((((2 * (v8 & v12 ^ 0x3007400A)) | 0xF9C80A86) - (v8 & v12 ^ 0x3007400A) + 52165309) ^ 0xCCE34549) >> v16;
  v18 = ~(_DWORD)v15 & 3;
  LODWORD(STACK[0x1498]) = v18;
  LODWORD(STACK[0x130C]) = (v13 | (v17 >> v18)) - 1926392729 - ((2 * (v13 | (v17 >> v18))) & 0x1A5B28CE);
  v19 = STACK[0x1578];
  LODWORD(STACK[0x1578]) = STACK[0x1578];
  v20 = STACK[0x18A8];
  v21 = (2
       * (((STACK[0x18A8] & (v19 ^ 0xE2E75FE6) ^ v5 & 0x6FCACB81) & 0x6342895D ^ 0x2240085D)
        + ((STACK[0x18A8] & (v19 ^ 0xE2E75FE6) ^ v5 & 0x6FCACB81) & 0x1CBD76A2 ^ 0x8000281))
       - 2) ^ 0x4E9115B8;
  v22 = (v21 - 1926392729 - ((2 * v21) & 0x1A5B28CC)) ^ v19;
  v23 = STACK[0x1890];
  v24 = ((((v10 & v22 & 0x51271CA1 ^ 0x51271CA0) + (v10 & v22 & 0xAED8E35E ^ 0x80808011) - 1) ^ 0xD1A79CB0) << v14) ^ (((((2 * (v22 & v12 ^ 0x60044A10)) | 0x2EFECFD8) - (v22 & v12 ^ 0x60044A10) + 1753258004) ^ 0xF77B2DFC) >> v23);
  LODWORD(STACK[0x12E0]) = v24 - 1926392729 - ((2 * v24) & 0x1A5B28CE);
  v25 = STACK[0x1610];
  v26 = STACK[0x16F0] & 0xAD99FA5E ^ 0x1107210 ^ (LODWORD(STACK[0x1610]) ^ 0x3B9313D) & (LODWORD(STACK[0x16F0]) ^ 0x8D2D9467);
  v27 = (2 * (v26 - ((2 * v26) & 0x555C3C5E)) + 1432108126) ^ 0x4D6FF8F2;
  v28 = (v27 - 1926392729 - ((2 * v27) & 0x1A5B28CC)) ^ LODWORD(STACK[0x16F0]);
  v29 = LODWORD(STACK[0x1420]) ^ 0x8D2D9467;
  v30 = STACK[0x1420];
  v31 = STACK[0x10C8];
  v32 = STACK[0x10C8] & 0x1E ^ 6;
  LODWORD(STACK[0x1380]) = v32;
  v33 = (((v28 & v29 & 0x18DB77EA ^ 0x1883756A) + (v28 & v29 ^ 0x215C8290) - ((v28 & v29 ^ 0x215C8290) & 0x18DB77EA)) ^ 0x3987F57A) >> v32;
  v34 = (v31 & 1) == 0;
  LODWORD(STACK[0x13F0]) = v34;
  v35 = LODWORD(STACK[0x1768]) ^ 0x8D2D9467;
  v36 = STACK[0x1154];
  v37 = STACK[0x1154] & 0x1E ^ 6;
  LODWORD(STACK[0x17CC]) = v37;
  v38 = (v36 & 1) == 0;
  LODWORD(STACK[0x1760]) = v38;
  v39 = (v33 >> v34) + ((v28 & v35) << v38 << v37);
  LODWORD(STACK[0x12D8]) = v39 - 1926392729 - ((2 * v39) & 0x1A5B28CE);
  v40 = STACK[0x1570];
  LODWORD(STACK[0x1570]) = STACK[0x1570];
  v41 = STACK[0x1898];
  v42 = (2
       * (((STACK[0x1898] & (v40 ^ 0xD5472960) ^ v25 & 0x586ABD07) & 0x6E3C9011 ^ 0x2E149010)
        + ((STACK[0x1898] & (v40 ^ 0xD5472960) ^ v25 & 0x586ABD07) & 0x11C36FEE ^ 0x10022003))
       - 2) ^ 0x6C6C7222;
  v43 = (v42 - 1926392729 - ((2 * v42) & 0x1A5B28CC)) ^ v40;
  v44 = v31 & 0x16 ^ 6;
  LODWORD(STACK[0xD18]) = v44;
  v45 = v31 & 9 ^ 1;
  LODWORD(STACK[0xD1C]) = v45;
  v46 = (((v43 & v12 & 0x7CDA371 ^ 0x74D8360) + (v43 & v12 & 0xF8325C8E ^ 0x8001885) - 1) ^ 0xF4D9BE4) >> v44 >> v45;
  v47 = v36 & 0x12 ^ 2;
  LODWORD(STACK[0x13CC]) = v47;
  v48 = v36 & 0xD ^ 5;
  LODWORD(STACK[0x13D0]) = v48;
  v49 = v46 | ((((v43 & v35 ^ 0x10428000) - ((2 * (v43 & v35 ^ 0x10428000)) & 0x29B981F8) - 1797472004) ^ 0x849E40FC) << v47 << v48);
  LODWORD(STACK[0x13A8]) = a4;
  LODWORD(STACK[0x1364]) = a4 ^ 0x8D2D9467 ^ (v49 - 1926392729 - ((2 * v49) & 0x1A5B28CE));
  v50 = STACK[0x13E8];
  v51 = v50 & 0x48F0FDAF ^ 0x4080D8AA ^ (v5 ^ 0xC5DD69C8) & (v50 ^ 0x8D2D9467);
  v52 = 2 * (v51 - ((2 * v51) & 0x679E0752)) - 409073838;
  v53 = ((v52 ^ 0x76DE9E48) - 1926392729 - 2 * ((v52 ^ 0x76DE9E48) & 0xD2D9476 ^ v52 & 0x10)) ^ LODWORD(STACK[0x13E8]);
  LODWORD(STACK[0x1790]) = v53;
  LODWORD(STACK[0x1828]) = (v10 & v53 & 0x4FFE049E ^ 0xF72049B) + (v10 & v53 & 0xB001FB61);
  v54 = STACK[0x13C0];
  v55 = STACK[0x13C0];
  LODWORD(STACK[0x13C0]) = STACK[0x13C0];
  v56 = v5 & 0xDBC5BCA9 ^ 0xC9819C01 ^ v20 & (v54 ^ 0x56E828CE);
  v57 = (2 * (((2 * v56) | 0x37B9D574) - v56) + 1212557964) ^ 0x36B1C534;
  v58 = (v57 - 1926392729 - ((2 * v57) & 0x1A5B28CC)) ^ v55;
  v59 = v31 & 0x1C ^ 4;
  v60 = ~v31 & 3;
  v61 = ((v10 & v58) << v14) + ((v58 & v12) >> (v31 & 0x1C ^ 4) >> (~(_BYTE)v31 & 3));
  LODWORD(STACK[0x15E4]) = -1926392728;
  LODWORD(STACK[0x12D0]) = v61 - 1926392728 + ~((2 * v61) & 0x1A5B28CE);
  v62 = v25 & 0x6E78A163 ^ 0x66600003 ^ v41 & (LODWORD(STACK[0x1430]) ^ 0xE3553504);
  v63 = 2 * ((v62 | 0x15FFA0C4) - (v62 | 0x6A005F3B)) - 738148746;
  v64 = ((v63 ^ 0xBB7E4348) - 1926392729 - 2 * ((v63 ^ 0xBB7E4348) & 0xD2D9476 ^ v63 & 0x10)) ^ LODWORD(STACK[0x1430]);
  v65 = v36 & 0x1F ^ 7;
  LODWORD(STACK[0x1428]) = v65;
  v66 = (((-1279201654 - (v64 & v29 ^ 0x4EE8E470 | 0xB3C0EE8A) + (v64 & v29 ^ 0x4EE8E470 | 0x4C3F1175)) ^ 0x2D7F505) >> v23)
      + ((v64 & v35) << v65);
  LODWORD(STACK[0x1300]) = v66 - 1926392729 - ((2 * v66) & 0x1A5B28CE);
  v67 = STACK[0x1750];
  v68 = (v67 & 0x24450044 ^ 0x275DF001) + (v67 & 0x58000FBB) - 1;
  v69 = (v67 & 0x7C450FFF ^ 0x5063C) + (v67 & 0x104504A9 ^ 0x12FAA081) - ((v67 & 0x7C450FFF ^ 0x5063C) & 0x104504A9);
  v70 = (((v68 & 0x38552D61 ^ 0x80A20900) + (v68 ^ 0x3A5DF467) - ((v68 ^ 0x3A5DF467) & 0x39450D61)) ^ 0xA8F22D61 | ((v69 & 0xF5C921A6 ^ 0xE1000104) + (v69 ^ 0x14FFA6EB) - ((v69 ^ 0x14FFA6EB) & 0xF5C921A6)) ^ 0x838C2E40) ^ LODWORD(STACK[0x1820]);
  v71 = v70 ^ (2 * ((v5 ^ 0x1EACDA47) & (v70 ^ 0x71689B98) ^ v70 & 0x13814E20));
  v72 = v30;
  LODWORD(STACK[0x1420]) = v30;
  v73 = v71 & 0x65DBF107 ^ 0x41488100 ^ (v71 ^ 0xD3688F98) & (v30 ^ 0xE8F66560);
  v74 = (v11 ^ 0xDFE8B23F) & (v71 ^ 0xD3688F98) ^ v71 & 0x52C52658;
  v75 = ((((v74 & 0x597184B7 ^ 0x597084B7) + (v74 ^ 0x2050008) - ((v74 ^ 0x2050008) & 0x597184B7)) ^ 0x93482A7) << v14) ^ (v73 >> v23);
  LODWORD(STACK[0x12F8]) = v75 - 1926392729 - ((2 * v75) & 0x1A5B28CE);
  v76 = STACK[0x1378];
  v77 = (v25 ^ 0xCA7C7DD) & (v76 ^ 0x8D2D9467) ^ v76 & 0xA2870CBE;
  v78 = 2 * ((v77 & 0x3B484448 ^ 0x39484440) + (v77 ^ 0x820508AC) - ((v77 ^ 0x820508AC) & 0x3B484448));
  LODWORD(STACK[0x1868]) = 221090934;
  v79 = ((v78 ^ 0x72909184) - 1926392729 - 2 * ((v78 ^ 0x72909184) & 0xD2D9476 ^ v78 & 0x10)) ^ v76;
  v80 = v36 & 0x1C ^ 4;
  LODWORD(STACK[0x15C0]) = v80;
  v81 = ~v36 & 3;
  LODWORD(STACK[0x1520]) = v81;
  LODWORD(STACK[0xD50]) = v60;
  LODWORD(STACK[0xD54]) = v59;
  v82 = ((((v79 & v29 & 0x75D8CA51 ^ 0x71D0C241) + (v79 & v29 & 0x8A2735AE ^ 0x51009) - 1) ^ 0x71D5D249) >> v60 >> v59) ^ ((v79 & v35) << v81 << v80);
  LODWORD(STACK[0x12F0]) = v82 - 1926392729 - ((2 * v82) & 0x1A5B28CE);
  v83 = v25 & 0xC654F9A6 ^ 0xC4443184 ^ v41 & (LODWORD(STACK[0x1780]) ^ 0x4B796DC1);
  v84 = (2 * (((2 * v83) | 0x24CFF55A) - v83) - 617608538) ^ 0xA0460416;
  v85 = (v84 - 1926392729 - ((2 * v84) & 0x1A5B28CC)) ^ LODWORD(STACK[0x1780]);
  v86 = v36 & 0x17 ^ 7;
  LODWORD(STACK[0x10D0]) = v36 & 8;
  v87 = ((((v85 & v35 & 0x5D0ED2B5 ^ 0x500CC2B1) + (v85 & v35 ^ 0xF02100C) - ((v85 & v35 ^ 0xF02100C) & 0x5D0ED2B5)) ^ 0x520CC2B9) << (v36 & 8) << v86)
      + (((((2 * (v85 & v12 ^ 0xE006A080)) & 0xEF98E30E) - (v85 & v12 ^ 0xE006A080) - 2009887112) ^ 0x68352EF8) >> v23);
  LODWORD(STACK[0x15CC]) = v87 - 1926392729 - ((2 * v87) & 0x1A5B28CE);
  v88 = STACK[0x18A8];
  v89 = v5;
  v90 = 2
      * ((((LODWORD(STACK[0x16B0]) ^ 0x97072725) & v88 ^ v5 & 0x1A2AB342) & 0x74574AA0 ^ 0x645748A0)
       + ((LODWORD(STACK[0x16B0]) ^ 0x97072725) & v88 ^ v5 & 0x1A2AB342 ^ 0x10009240)
       - (((LODWORD(STACK[0x16B0]) ^ 0x97072725) & v88 ^ v5 & 0x1A2AB342 ^ 0x10009240) & 0x74574AA0));
  v91 = ((v90 ^ 0xD8FE9144) - 1926392729 - 2 * ((v90 ^ 0xD8FE9144) & 0xD2D9476 ^ v90 & 0x10)) ^ LODWORD(STACK[0x16B0]);
  STACK[0x14B8] = v15;
  v92 = v15 & 0x1B ^ 3;
  LODWORD(STACK[0x13F8]) = v92;
  v93 = ~(_DWORD)v15 & 4;
  LODWORD(STACK[0x13E0]) = v93;
  v94 = (((((2 * (v91 & v12 ^ 0x818212A2)) & 0x4678FEDC) - (v91 & v12 ^ 0x818212A2) + 1556316305) ^ 0xDD419233) >> v93 >> v92)
      + ((v91 & v10) << LODWORD(STACK[0x17CC]) << LODWORD(STACK[0x1760]));
  LODWORD(STACK[0x1584]) = v94 - 1926392729 - ((2 * v94) & 0x1A5B28CE);
  v95 = STACK[0x1698];
  v96 = STACK[0x1144];
  v97 = (2 * ((v5 ^ 0x18A91768) & (v95 ^ LODWORD(STACK[0x1144])) ^ v95 & 0x1584830F)) ^ 0xA09000E;
  v98 = (v97 - 1926392729 - ((2 * v97) & 0x1A5B28CC)) ^ LODWORD(STACK[0x1698]);
  LODWORD(STACK[0x16E0]) = ((v98 & v29 & 0x8CEE43DF ^ 0x846C425E) + (v98 & v29 & 0x7311BC20 ^ 0x8001) - 1) ^ 0x846CC25E;
  LODWORD(STACK[0x1780]) = -139709599 - (v10 & v98 ^ 0x42292C04 | 0xF7AC3361) + (v10 & v98 ^ 0x42292C04 | 0x853CC9E);
  v99 = STACK[0x1810];
  v100 = v96;
  v101 = v99 ^ (2 * ((v25 ^ 0x3FC3A560) & (v99 ^ v96) ^ v99 & 0x11E36E03));
  v102 = v101 & 0x2004C3FB ^ 0x2000038A ^ (v101 ^ 0x8F6F9C61) & (v72 ^ 0xAD29579C);
  v103 = STACK[0x1858];
  LODWORD(STACK[0x17A8]) = (((((2 * v102) & 0xD38E350C) - v102 - 1774656135) ^ 0xB63C6692) >> (~(_BYTE)v31 & 3) >> (v31 & 0x1C ^ 4)) ^ (((v101 & 0x983EE697 ^ 0x882E8401 ^ (v101 ^ 0x8F6F9C61) & (LODWORD(STACK[0x1768]) ^ 0x151372F0)) << LODWORD(STACK[0x1858])) - 1926392729 - ((2 * ((v101 & 0x983EE697 ^ 0x882E8401 ^ (v101 ^ 0x8F6F9C61) & (LODWORD(STACK[0x1768]) ^ 0x151372F0)) << LODWORD(STACK[0x1858]))) & 0x1A5B28CE));
  v104 = v25;
  v105 = STACK[0x1350] & 0xAB51E3AA ^ 0xA0002A8 ^ (v25 ^ 0x57128C9) & (LODWORD(STACK[0x1350]) ^ 0x8D2D9467);
  v106 = (2 * (v105 - ((2 * v105) & 0x26B36A18)) - 1498191336) ^ 0xA0B06F0C;
  v107 = (v106 - 1926392729 - ((2 * v106) & 0x1A5B28CC)) ^ LODWORD(STACK[0x1350]);
  v108 = v29;
  LOBYTE(v76) = STACK[0x1498];
  v109 = STACK[0x14A8];
  v110 = v36 & 0xF ^ 7;
  LODWORD(STACK[0x1074]) = v110;
  LODWORD(STACK[0x1068]) = v36 & 0x10;
  v111 = ((((v107 & v29 ^ 0x64400044) - ((2 * (v107 & v29 ^ 0x64400044)) & 0xD784DE9E) - 339579057) ^ 0x8F826F0B) >> v76 >> v109) | ((((v107 & v35 & 0xADAE6D99 ^ 0xADAE6519) + (v107 & v35 & 0x52519266 ^ 0x2001001) - 1) ^ 0xAFAE7519) << v110 << (v36 & 0x10));
  LODWORD(STACK[0x1514]) = v111 - 1926392729 - ((2 * v111) & 0x1A5B28CE);
  LODWORD(v15) = STACK[0x1500];
  v112 = v5 & 0xFB0343D0 ^ 0x83004350 ^ v88 & (LODWORD(STACK[0x1500]) ^ 0x762ED7B7);
  v113 = 2 * (((2 * v112) | 0x19E0EA76) - v112) + 1713313162;
  v114 = ((v113 ^ 0x8DE26C56) - 1926392729 - 2 * ((v113 ^ 0x8DE26C56) & 0xD2D946E ^ v113 & 8)) ^ LODWORD(STACK[0x1500]);
  v115 = v103;
  v116 = v31 & 0xD ^ 5;
  LODWORD(STACK[0x1480]) = v116;
  v117 = v31 & 0x12 ^ 2;
  LODWORD(STACK[0x1490]) = v117;
  LODWORD(STACK[0x1508]) = ((v10 & v114) << v103) ^ 0x8D2D9467 ^ ((v114 & v12) >> v116 >> v117);
  v118 = STACK[0x16D0];
  v119 = v118 & 0x4E4EFAB8 ^ 0x480A2A30 ^ (v104 ^ 0xE06E31DB) & (v118 ^ 0x8D2D9467);
  v120 = 2 * (v119 - ((2 * v119) & 0x798E8226)) + 2039382566;
  LODWORD(STACK[0x17C0]) = 221090926;
  v121 = ((v120 ^ 0xF183F606) - 1926392729 - 2 * ((v120 ^ 0xF183F606) & 0xD2D946E ^ v120 & 8)) ^ v118;
  LODWORD(STACK[0x10B4]) = v86;
  v122 = (v121 & v35) << v86;
  LOBYTE(v86) = STACK[0x10D0];
  v123 = v31 & 0x17 ^ 7;
  LODWORD(STACK[0xD30]) = v123;
  LODWORD(STACK[0xD24]) = v31 & 8;
  LODWORD(STACK[0x1488]) = (v122 << v86) ^ 0x8D2D9467 ^ ((v121 & v108) >> v123 >> (v31 & 8));
  v124 = STACK[0x1528];
  v125 = (2 * ((v5 ^ 0x58DFCE69) & (v124 ^ v100) ^ v124 & 0x55F25A0E)) ^ 0xA40200C;
  v126 = STACK[0x15E4];
  v127 = (v125 + LODWORD(STACK[0x15E4]) + ~((2 * v125) & 0x1A5B28CC)) ^ LODWORD(STACK[0x1528]);
  LODWORD(STACK[0x14E4]) = v12;
  LODWORD(STACK[0x1588]) = v10;
  v128 = ((((v10 & v127 ^ 0x30400304) - 448760274 - ((2 * (v10 & v127 ^ 0x30400304)) & 0xCA80EC5C)) ^ 0xD500752A) << v103) | (((1150155867 - (v127 & v12 ^ 0x401D060 | 0x448DFC5B) + (v127 & v12 ^ 0x401D060 | 0xBB7203A4)) ^ 0xBF73D3C4) >> v76 >> v109);
  LODWORD(STACK[0x14C4]) = v128 - 1926392729 - ((2 * v128) & 0x1A5B28CE);
  v129 = v5 & 0xBCDDADBA ^ 0x4D4AD18 ^ v88 & (LODWORD(STACK[0x1598]) ^ 0x31F039DD);
  v130 = 2 * ((v129 | 0x2DDC699A) - (v129 | 0x52239665)) - 1538839350;
  v131 = ((v130 ^ 0x4A0A8140) - 1926392729 - 2 * ((v130 ^ 0x4A0A8140) & 0xD2D946E ^ v130 & 8)) ^ LODWORD(STACK[0x1598]);
  v132 = STACK[0x14B8];
  v133 = STACK[0x14B8] & 0xB ^ 3;
  LODWORD(STACK[0x1680]) = v133;
  v134 = v132 & 0x14 ^ 4;
  LODWORD(STACK[0x1668]) = v134;
  LODWORD(STACK[0x1378]) = ((v10 & v131) << v103) ^ 0x8D2D9467 ^ (((((2 * (v131 & v12 ^ 0x20F13E0A)) | 0x4DCEBA6C)
                                                                  - (v131 & v12 ^ 0x20F13E0A)
                                                                  - 652696886) ^ 0x616633C) >> v133 >> v134);
  v135 = STACK[0x1730];
  v136 = STACK[0x1898];
  v137 = v104 & 0x5C360CD7 ^ 0x54040804 ^ (LODWORD(STACK[0x1730]) ^ 0xD11B98B0) & STACK[0x1898];
  v138 = (2 * ((v137 | 0x11EC62D2) - (v137 | 0x6E139D2D)) - 601408934) ^ 0x9390C52A;
  v139 = (v138 - 1926392729 - ((2 * v138) & 0x1A5B28CC)) ^ LODWORD(STACK[0x1730]);
  LODWORD(STACK[0xD44]) = v36 & 0x18;
  v140 = ~v36 & 7;
  LODWORD(STACK[0xD40]) = v140;
  v141 = v108;
  LODWORD(STACK[0x10C8]) = v31;
  LODWORD(STACK[0x1820]) = v31 & 0x10;
  v142 = v31 & 0xF ^ 7;
  LODWORD(STACK[0x1590]) = ((v139 & v35) << (v36 & 0x18) << v140) ^ 0x8D2D9467 ^ ((v139 & v108) >> (v31 & 0x10) >> (v31 & 0xF ^ 7));
  v143 = ((LODWORD(STACK[0x16F0]) ^ LODWORD(STACK[0x1578]))
        - 1926392729
        - ((2 * (LODWORD(STACK[0x16F0]) ^ LODWORD(STACK[0x1578]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x13C0]);
  v144 = STACK[0x14F8];
  v145 = ((v50 ^ v144) - 1926392729 - ((2 * (v50 ^ v144)) & 0x1A5B28CE)) ^ v95 ^ v124 ^ (v143
                                                                                       - 1926392729
                                                                                       - ((2 * v143) & 0x1A5B28CE));
  v146 = (v145 - 1926392729 - ((2 * v145) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1834]);
  v147 = LODWORD(STACK[0x1544]) ^ (v146 - 1926392729 - ((2 * v146) & 0x1A5B28CE));
  v148 = LODWORD(STACK[0x17D8]) ^ 0x6C7F0721;
  LODWORD(STACK[0x16D8]) = v148;
  v149 = (v147 - 1926392729 - ((2 * v147) & 0x1A5B28CE)) ^ LODWORD(STACK[0x13A0]) ^ v148;
  v150 = (v149 - 1926392729 - ((2 * v149) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1740]);
  v151 = (v150 - 1926392729 - ((2 * v150) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1538]);
  v152 = (v151 - 1926392729 - ((2 * v151) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17B0]);
  v153 = (v152 - 1926392729 - ((2 * v152) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1708]);
  v154 = (v153 - 1926392729 - ((2 * v153) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15C8]);
  v155 = (v154 - 1926392729 - ((2 * v154) & 0x1A5B28CE)) ^ LODWORD(STACK[0x161C]);
  v156 = (v155 - 1926392729 - ((2 * v155) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16C8]);
  v157 = (v156 - 1926392729 - ((2 * v156) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1778]);
  v158 = (v157 - 1926392729 - ((2 * v157) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1808]);
  v159 = (v158 - 1926392729 - ((2 * v158) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16C0]);
  v160 = v104;
  v161 = v159 & 0xF90DBD5F ^ 0x89089D55 ^ (v159 ^ 0xDCFDC92B) & (v104 ^ 0x572D763C);
  v162 = (2 * ((v161 | 0x1C12452F) - (v161 | 0x63EDBAD0)) - 941918816) ^ v159;
  v163 = (((v162 ^ 0x46D36BC9) & (LODWORD(STACK[0x14B0]) ^ 0x5D298082) ^ v162 & 0xD00414E5) & 0x867A474A ^ 0x67A434B)
       + (((v162 ^ 0x46D36BC9) & (LODWORD(STACK[0x14B0]) ^ 0x5D298082) ^ v162 & 0xD00414E5) & 0x7985B8B5);
  v164 = (((v162 & 0x89EBCD8D ^ 0x8C8498C ^ (v162 ^ 0x46D36BC9) & (LODWORD(STACK[0x10DC]) ^ 0x4C659EA))
         - ((2 * (v162 & 0x89EBCD8D ^ 0x8C8498C ^ (v162 ^ 0x46D36BC9) & (LODWORD(STACK[0x10DC]) ^ 0x4C659EA))) & 0x6973A792)
         + 884593609) ^ 0x3CB2D3CC) >> (v132 & 0xCE ^ 0x46) >> (v132 & 0x31 ^ 0x21);
  v165 = (((v163 - 1) ^ 0x467A438B) << v86 << (v36 & 0x17 ^ 7))
       - 1105926357
       + (((v164 ^ 0x557F9326) + 665712831) ^ ((v164 ^ 0x362346DB) + 1156656452) ^ ((v164 ^ 0x635CD5FD) + 294567526));
  v166 = (v165 ^ 0xAF5C0DB8) & (2 * (v165 & 0xCF18AD3C)) ^ v165 & 0xCF18AD3C;
  v167 = ((2 * (v165 ^ 0xAF6D0788)) ^ 0xC0EB5568) & (v165 ^ 0xAF6D0788) ^ (2 * (v165 ^ 0xAF6D0788)) & 0x6075AAB4;
  v168 = (v167 ^ 0x40610020) & (4 * v166) ^ v166;
  v169 = ((4 * (v167 ^ 0x2014AA94)) ^ 0x81D6AAD0) & (v167 ^ 0x2014AA94) ^ (4 * (v167 ^ 0x2014AA94)) & 0x6075AAB4;
  v170 = (v169 ^ 0x54AA80) & (16 * v168) ^ v168;
  v171 = ((16 * (v169 ^ 0x60210024)) ^ 0x75AAB40) & (v169 ^ 0x60210024) ^ (16 * (v169 ^ 0x60210024)) & 0x6075AAB0;
  v172 = v170 ^ 0x6075AAB4 ^ (v171 ^ 0x50AA00) & (v170 << 8);
  LODWORD(STACK[0x12EC]) = v165 ^ (2
                                 * ((v172 << 16) & 0x60750000 ^ v172 ^ ((v172 << 16) ^ 0x2AB40000) & (((v171 ^ 0x602500B4) << 8) & 0x60750000 ^ 0x550000 ^ (((v171 ^ 0x602500B4) << 8) ^ 0x75AA0000) & (v171 ^ 0x602500B4))));
  v173 = v15 ^ v99 ^ 0x2D42E18 ^ ((v135 ^ LODWORD(STACK[0x1570]))
                                - 1926392729
                                - ((2 * (v135 ^ LODWORD(STACK[0x1570]))) & 0x1A5B28CE));
  v174 = STACK[0x1638];
  v175 = (v173 - 1926392729 - ((2 * v173) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1638]) ^ LODWORD(STACK[0x1798]);
  v176 = v175 - 1926392729 - ((2 * v175) & 0x1A5B28CE);
  v177 = (LODWORD(STACK[0x1850]) + 400420441) & 0xE821D0BE;
  v178 = LODWORD(STACK[0x17BC]) ^ 0x6C7F179B;
  LODWORD(STACK[0x1500]) = v177;
  LODWORD(STACK[0x16D0]) = v178 ^ v177;
  v179 = ((v176 ^ LODWORD(STACK[0x173C]) ^ v178 ^ v177)
        + v126
        + ~((2 * (v176 ^ LODWORD(STACK[0x173C]) ^ v178 ^ v177)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1470]);
  v180 = LODWORD(STACK[0x1758]) - 1926392729;
  LODWORD(STACK[0x1810]) = v180;
  v181 = STACK[0x16B8] ^ v180 ^ (v179 - 1926392729 - ((2 * v179) & 0x1A5B28CE));
  v182 = (v181 - 1926392729 - ((2 * v181) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1720]);
  v183 = (v182 - 1926392729 - ((2 * v182) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1770]);
  v184 = (v183 - 1926392729 - ((2 * v183) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1658]);
  v185 = (v184 - 1926392729 - ((2 * v184) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1518]);
  v186 = (v185 - 1926392729 - ((2 * v185) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1650]);
  v187 = (v186 - 1926392729 - ((2 * v186) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1670]);
  v188 = (v187 - 1926392729 - ((2 * v187) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1548]);
  v189 = (v188 - 1926392729 - ((2 * v188) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1600]);
  v190 = v89;
  LODWORD(STACK[0xE20]) = v89;
  v191 = v189 & 0x82C9EC52 ^ 0x1E012 ^ (v189 ^ 0x53047354) & (v89 ^ 0xFE47835);
  v192 = (2 * (((2 * v191) & 0x2E9ED21E) - v191) + 1365323232) ^ v189;
  v193 = v192 & 0xFD278F1A ^ 0xC260C08 ^ (v192 ^ 0x6665E30) & (LODWORD(STACK[0x1768]) ^ 0x700A1B7D);
  v194 = (v192 ^ 0x6665E30) & (LODWORD(STACK[0x1420]) ^ 0xD441EFF);
  LOBYTE(v126) = STACK[0x1820];
  LODWORD(STACK[0x160C]) = v142;
  LODWORD(STACK[0x14C8]) = ((v192 & 0x80698A98 ^ 0x600A10 ^ v194) >> v126 >> v142) ^ 0x8D2D9467 ^ (((-1037687590 - (v193 | 0xC22624DA) + (v193 | 0x3DD9DB25)) ^ 0x35D9D93D) << v115);
  v195 = STACK[0x1790] & v108 ^ 0x62119118;
  LOBYTE(v108) = STACK[0x1380];
  v196 = v115;
  v197 = ((LODWORD(STACK[0x1780]) ^ 0x4A7AE09A) << v115) | (LODWORD(STACK[0x16E0]) >> v108 >> LODWORD(STACK[0x13F0]));
  LODWORD(STACK[0x13E8]) = v197 - 1926392729 - ((2 * v197) & 0x1A5B28CE);
  v198 = v190 ^ 0x1AFD2A25;
  v199 = STACK[0x1144];
  v200 = (LODWORD(STACK[0x1828]) - 1) ^ 0xF72049A;
  LODWORD(STACK[0x1154]) = v36;
  v201 = v36 & 0xE ^ 6;
  LODWORD(STACK[0xD2C]) = v201;
  v202 = v36 & 0x11 ^ 1;
  LODWORD(STACK[0xD28]) = v202;
  v203 = (v200 << v201 << v202) | (((((2 * v195) | 0xE51EDDFC) - v195 + 225480962) ^ 0x909EFFE6) >> v126 >> v142);
  LODWORD(STACK[0x16B0]) = v203 - 1926392729 - ((2 * v203) & 0x1A5B28CE);
  v204 = STACK[0x1554];
  LODWORD(STACK[0x1828]) = v160 ^ 0x2E20CB63;
  v205 = 2 * (v198 & (v144 ^ v199) ^ v144 & 0x17D0BE42);
  v206 = ((v205 ^ 0xA012884) - 1926392729 - 2 * ((v205 ^ 0xA012884) & 0xD2D947E ^ v205 & 0x18)) ^ v144;
  v207 = STACK[0x14E4];
  v208 = 2 * ((v160 ^ 0x2E20CB63) & (v204 ^ 0x49E4E564) ^ v160 & 0x44C97103);
  v209 = ((v208 ^ 0x8008206) - 1926392729 - 2 * ((v208 ^ 0x8008206) & STACK[0x1868] ^ v208 & 0x10)) ^ v204;
  v210 = STACK[0x139C];
  v211 = -1506985859 - (v209 & v35 ^ 0x84E1A888) + ((2 * (v209 & v35 ^ 0x84E1A888)) & 0xB3A58F04);
  v212 = STACK[0x1588];
  v213 = STACK[0x10C8];
  v214 = STACK[0x10C8] & 0x1A ^ 2;
  LODWORD(STACK[0x1790]) = v214;
  v215 = ~v213 & 5;
  LODWORD(STACK[0x1780]) = v215;
  v216 = (((-409458168 - (v206 & v207 ^ 0x508A2120 | 0xE7982A08) + (v206 & v207 ^ 0x508A2120 | 0x1867D5F7)) ^ 0x48EDF4D7) >> v215 >> v214) | ((v212 & v206) << v196);
  v217 = STACK[0x1848];
  v218 = 2 * ((v160 ^ 0x2E20CB63) & (LODWORD(STACK[0x1848]) ^ 0x2472E15F) ^ v160 & 0x295F7538);
  LODWORD(STACK[0x159C]) = 221090942;
  v219 = ((v218 ^ 0x50008240) - 1926392729 - 2 * ((v218 ^ 0x50008240) & 0xD2D947E ^ v218 & 0x18)) ^ v217;
  LODWORD(STACK[0x12C8]) = v216 - 1926392729 - ((2 * v216) & 0x1A5B28CE);
  v220 = (2
        * (((v136 & (v210 ^ 0x2ACDDF65) ^ v160 & 0xA7E04B02) & 0x684DFEA5 ^ 0x484DF4A5)
         + (v136 & (v210 ^ 0x2ACDDF65) ^ v160 & 0xA7E04B02 ^ 0x20000B00)
         - ((v136 & (v210 ^ 0x2ACDDF65) ^ v160 & 0xA7E04B02 ^ 0x20000B00) & 0x684DFEA5))) ^ 0xDCDB7D4E;
  v221 = (v220 - 1926392729 - ((2 * v220) & 0x1A5B28CC)) ^ v210;
  v222 = v141;
  LODWORD(STACK[0x1438]) = v141;
  v223 = (v221 & v141 & 0xBD12CF69 ^ 0xB4108D69) + (v221 & v141 ^ 0x98B4204) - ((v221 & v141 ^ 0x98B4204) & 0xBD12CF69);
  v224 = (v160 ^ 0xCC04E16B) & (v174 ^ 0x8D2D9467) ^ v174 & 0x62242A08;
  v225 = ((733703760 - (v221 & v35 ^ 0x104820C1 | 0x2BBB6E50) + (v221 & v35 ^ 0x104820C1 | 0xD44491AF)) ^ 0xC40CB16E) << LODWORD(STACK[0x1074]) << LODWORD(STACK[0x1068]);
  v226 = STACK[0x14B8];
  v227 = STACK[0x14B8] & 0x17 ^ 7;
  LODWORD(STACK[0x16F0]) = v227;
  LODWORD(STACK[0x1730]) = v226 & 8;
  v228 = v226;
  v229 = v225 | ((v223 ^ 0xB4998D6D) >> (v226 & 8) >> v227);
  LODWORD(STACK[0x1560]) = v229 - 1926392729 - ((2 * v229) & 0x1A5B28CE);
  v230 = (2 * ((v224 & 0x376557F3 ^ 0x354555F3) + (v224 & 0x489AA80C ^ 0x40002009)) - 2) ^ 0xEAC2EBF6;
  v231 = (v230 - 1926392729 - ((2 * v230) & 0x1A5B28CC)) ^ v174;
  LODWORD(STACK[0x16E0]) = ((v211 ^ 0x22CC90F5) << v196)
                         + ((v209 & v207) >> LODWORD(STACK[0x1890]))
                         - 1926392729
                         - ((2 * (((v211 ^ 0x22CC90F5) << v196) + ((v209 & v207) >> LODWORD(STACK[0x1890])))) & 0x1A5B28CE);
  v232 = STACK[0xE20];
  v233 = STACK[0x1818];
  v234 = (LODWORD(STACK[0xE20]) ^ 0x53A94033) & (v233 ^ v199) ^ v233 & 0x5E84D454;
  LOBYTE(v174) = STACK[0x13F0];
  v235 = (((-1823358006 - (v231 & v222 ^ 0x1B000CE | 0x9351C3CA) + (v231 & v222 ^ 0x1B000CE | 0x6CAE3C35)) ^ 0x6D1E3CFB) >> v108 >> v174)
       + (((-2001726752 - (v231 & v212 ^ 0xC0279441 | 0x88B012E0) + (v231 & v212 ^ 0xC0279441 | 0x774FED1F)) ^ 0xB768795E) << v196);
  LODWORD(STACK[0x1558]) = v235 - 1926392729 - ((2 * v235) & 0x1A5B28CE);
  v236 = v233 ^ (2 * v234);
  v237 = v236 & 0x9D49040F ^ 0x95000400 ^ (v236 ^ 0x9524BCEF) & (LODWORD(STACK[0x10DC]) ^ 0x10649068);
  v238 = STACK[0x1798] & (v232 ^ 0xC86A7FC) ^ STACK[0x1738] & 0x81AB339B;
  v239 = LODWORD(STACK[0x1798]) ^ (2
                                 * ((v238 & 0x403DE425 ^ 0x4014C425)
                                  + (v238 ^ 0x8029331A)
                                  - ((v238 ^ 0x8029331A) & 0x403DE425)));
  v240 = (((v237 + 840300816 - ((2 * v237) & 0x642BF220)) ^ 0x3215F91F) >> LODWORD(STACK[0x14A8]) >> LODWORD(STACK[0x1498])) | (((((2 * (~v236 & 0x44384204 ^ (v236 ^ 0x9524BCEF) & (LODWORD(STACK[0x1768]) ^ 0xC915D663))) & 0xB8F6FFBA) - (~v236 & 0x44384204 ^ (v236 ^ 0x9524BCEF) & (LODWORD(STACK[0x1768]) ^ 0xC915D663)) + 595886114) ^ 0x639CC222) << LODWORD(STACK[0x1428]));
  LODWORD(STACK[0x10BC]) = v240 - 1926392729 - ((2 * v240) & 0x1A5B28CE);
  v241 = STACK[0x18A8];
  v242 = v239 & 0xF84F6D83 ^ 0xD6E44F08 ^ (v239 ^ 0x807FA87C) & (LODWORD(STACK[0x14B0]) ^ 0x7562F9E4);
  v243 = 844676213 - (v242 | 0x3258BC75) + (v242 | 0xCDA7438A);
  LODWORD(v226) = STACK[0x1420];
  v244 = v207;
  v245 = STACK[0x173C] & 0x94D9E71D ^ 0x1001C510 ^ (v160 ^ 0x3AF92C7E) & (LODWORD(STACK[0x173C]) ^ 0x8D2D9467);
  v246 = 2
       * (((v241 & (LODWORD(STACK[0x15F8]) ^ 0x2C018252) ^ v232 & 0xA12C1635) & 0x31D4EA15 ^ 0x10D0EA14)
        + (v241 & (LODWORD(STACK[0x15F8]) ^ 0x2C018252) ^ v232 & 0xA12C1635 ^ 0xA12C1021)
        - ((v241 & (LODWORD(STACK[0x15F8]) ^ 0x2C018252) ^ v232 & 0xA12C1635 ^ 0xA12C1021) & 0x31D4EA15));
  v247 = ((v246 ^ 0x23A9DC22) - 1926392729 - 2 * ((v246 ^ 0x23A9DC22) & 0xD2D947E ^ v246 & 0x18)) ^ LODWORD(STACK[0x15F8]);
  v248 = (2 * (v245 - ((2 * v245) & 0x3B3E355E)) - 1153551010) ^ 0x932EB774;
  v249 = (v248 - 1926392729 - ((2 * v248) & 0x1A5B28CC)) ^ LODWORD(STACK[0x173C]);
  LOBYTE(v179) = STACK[0x13F8];
  LOBYTE(v132) = STACK[0x13E0];
  v250 = ((((v219 & v244 & 0x8E75AB9D ^ 0x8E542B99) + (v219 & v244 & 0x718A5462 ^ 0x4021) - 1) ^ 0x8E546BB9) >> v179 >> v132)
       + (((-174312224 - (v219 & v35 | 0xF59C34E0) + (v219 & v35 & 0xF59C34E0 ^ 0x8A6BDB1F)) ^ 0x8A6BDB1F) << LODWORD(STACK[0xD40]) << LODWORD(STACK[0xD44]));
  LODWORD(STACK[0x1664]) = v250 - 1926392729 - ((2 * v250) & 0x1A5B28CE);
  v251 = v213 & 0xA ^ 2;
  LODWORD(STACK[0xCF0]) = v251;
  v252 = v213 & 0x15 ^ 5;
  LODWORD(STACK[0xCF4]) = v252;
  v253 = ((v243 ^ 0x9B0C2482) << v196)
       + ((v239 & 0x120AD1BA ^ 0xA8038 ^ (v239 ^ 0x807FA87C) & (v226 ^ 0x9F2745DD)) >> v251 >> v252);
  LODWORD(STACK[0x15E8]) = v253 - 1926392729 - ((2 * v253) & 0x1A5B28CE);
  v254 = STACK[0x1834];
  v255 = v232 & 0xD94A163E ^ 0x8008100C ^ v241 & (LODWORD(STACK[0x1834]) ^ 0x54678259);
  v256 = ((2 * v255) & 0x102FC92A) - v255;
  v257 = STACK[0x1588];
  v258 = v228 & 0x1A ^ 2;
  LODWORD(STACK[0x15F8]) = v258;
  v259 = (((v247 & v244 ^ 0x8127040) - ((2 * (v247 & v244 ^ 0x8127040)) & 0x704286F0) - 1205779592) ^ 0xB0333338) >> v258;
  v260 = ~v228 & 5;
  LODWORD(STACK[0x1638]) = v260;
  LODWORD(STACK[0x1698]) = ((v259 >> v260) | ((v257 & v247) << v196))
                         - 1926392729
                         - ((2 * ((v259 >> v260) | ((v257 & v247) << v196))) & 0x1A5B28CE);
  v261 = STACK[0x1524];
  v262 = STACK[0x1144];
  v263 = STACK[0x17C0];
  v264 = (((2 * v256 - 271567148) ^ 0xFDD03E80)
        - 1926392729
        - 2 * (((2 * v256 - 271567148) ^ 0xFDD03E80) & STACK[0x17C0] ^ (2 * v256 - 271567148) & 8)) ^ v254;
  v265 = (((-49584915 - (v264 & v244 ^ 0x22012040 | 0xFD0B64ED) + (v264 & v244 ^ 0x22012040 | 0x2F49B12)) ^ 0x20F5BB52) >> v108 >> v174)
       + ((((v257 & v264 & 0x6A9BCF65 ^ 0x4A9B0C40) + (v257 & v264 & 0x9564309A ^ 0x10000003) - 1) ^ 0x5A9B0C42) << v196);
  LODWORD(STACK[0x1528]) = v265 - 1926392729 - ((2 * v265) & 0x1A5B28CE);
  v266 = 2 * ((v160 ^ 0x2670F928) & (v261 ^ v262) ^ v261 & 0x850324B);
  v267 = v263;
  v268 = ((v266 ^ 0x10002086) - 1926392729 - 2 * ((v266 ^ 0x10002086) & v263 ^ v266 & 8)) ^ v261;
  v269 = STACK[0x1438];
  v270 = v249 & v35;
  v271 = (v249 & STACK[0x1438]) >> LODWORD(STACK[0x1790]) >> LODWORD(STACK[0x1780]);
  v272 = STACK[0x1154];
  v273 = STACK[0x1154] & 0x1D ^ 5;
  LODWORD(STACK[0xDA0]) = v273;
  v274 = v270 << v273;
  v275 = ~v272 & 2;
  LODWORD(STACK[0xD9C]) = v275;
  LODWORD(STACK[0x1738]) = v271 ^ 0x8D2D9467 ^ (v274 << v275);
  v276 = STACK[0x1544];
  v277 = (2 * ((v276 ^ v262) & (v232 ^ 0x479AD73) ^ v276 & 0x9543914)) ^ 0x12082008;
  LODWORD(STACK[0x12C4]) = 442181836;
  v278 = (v277 - 1926392729 - ((2 * v277) & 0x1A5B28CC)) ^ v276;
  v279 = v272 & 0x14 ^ 4;
  v280 = v272 & 0xB ^ 3;
  LODWORD(STACK[0x1688]) = ((v268 & v35) << v279 << v280) ^ 0x8D2D9467 ^ (((-352109865
                                                                          - (v268 & v269 ^ 0x72200908 | 0xEB033AD7)
                                                                          + (v268 & v269 ^ 0x72200908 | 0x14FCC528)) ^ 0x66DCCC20) >> LODWORD(STACK[0x1838]) >> LODWORD(STACK[0x1840]));
  v281 = STACK[0x1800] & 0x15534FAE ^ 0x11000A2A ^ (v160 ^ 0xBB7384CD) & (LODWORD(STACK[0x1800]) ^ 0x8D2D9467);
  v282 = (2 * (v281 - ((2 * v281) & 0xF7F701E)) - 1887473634) ^ 0xA77D6C06;
  v283 = (v282 - 1926392729 - ((2 * v282) & 0x1A5B28CC)) ^ LODWORD(STACK[0x1800]);
  v284 = STACK[0x13B4];
  v285 = STACK[0x1828];
  v286 = STACK[0x1828] & (LODWORD(STACK[0x13B4]) ^ 0x50C9F900) ^ v160 & 0x5DE46D67;
  LODWORD(STACK[0x1678]) = ((v278 & v244) >> v179 >> v132) ^ 0x8D2D9467 ^ (((((2 * (v278 & v35 ^ 0xE0040300)) | 0xBE823F9A)
                                                                           - (v278 & v35 ^ 0xE0040300)
                                                                           - 1598103501) ^ 0xBF451CCD) << LODWORD(STACK[0x1760]) << LODWORD(STACK[0x17CC]));
  v287 = STACK[0x16D0];
  v288 = STACK[0x16D0] & (v232 ^ 0x32CF7FDE) ^ STACK[0x17BC] & 0x3FE2EBB9;
  v289 = v196;
  v290 = (((-1920472639 - (v283 & v269 ^ 0x20126011) + ((2 * (v283 & v269 ^ 0x20126011)) | 0xE4F01642) + 2846) ^ 0x526A6B30) >> LODWORD(STACK[0x1490]) >> LODWORD(STACK[0x1480]))
       + ((v283 & v257) << v196);
  LODWORD(STACK[0x1758]) = v290 - 1926392729 - ((2 * v290) & 0x1A5B28CE);
  v291 = v287 ^ (2 * v288);
  v292 = v160;
  v293 = STACK[0x13A0];
  v294 = (v160 ^ 0xEE5437EB) & (LODWORD(STACK[0x13A0]) ^ 0x8D2D9467);
  v295 = STACK[0x13A0];
  v296 = v291 & 0x71542043 ^ 0x50440042 ^ (v291 ^ 0x58C40642) & (LODWORD(STACK[0x1768]) ^ 0xFC79B424);
  v297 = (v291 ^ 0x58C40642) & (v226 ^ 0x5254649A) ^ v291 & 0xDF79F0FD;
  v298 = (((2 * v286) ^ 0x184092C6) - 1926392729 - 2 * (((2 * v286) ^ 0x184092C6) & v267 ^ (2 * v286) & 8)) ^ v284;
  LODWORD(STACK[0xBCC]) = v279;
  LODWORD(STACK[0xBC8]) = v280;
  LOBYTE(v269) = STACK[0xD50];
  v299 = STACK[0xD54];
  v300 = ((((v297 & 0x566881CA ^ 0x4228818B) + (v297 & 0xA9977E35) - 1) ^ 0x1A6881CA) >> v269 >> v299) | (v296 << v279 << v280);
  LODWORD(STACK[0x1798]) = v300 - 1926392729 - ((2 * v300) & 0x1A5B28CE);
  v301 = 2
       * (((v294 ^ v293 & 0x4074FC88) & 0x31B303E5 ^ 0x100000) + ((v294 ^ v293 & 0x4074FC88) & 0x4E4CFC1A ^ 0xE0CD81B))
       - 2;
  v302 = v267;
  v303 = ((v301 ^ 0x1C709834) - 1926392729 - 2 * ((v301 ^ 0x1C709834) & v267 ^ v301 & 8)) ^ v295;
  v304 = (v303 & v244 & 0x95F43DBD ^ 0x95643CAD) + (v303 & v244 & 0x6A0BC242 ^ 0x4201);
  v305 = -2110930212 - (v298 & v244 ^ 0x810C81A) + ((2 * (v298 & v244 ^ 0x810C81A)) & 0xFBA46CE0);
  v306 = v257;
  v307 = STACK[0x1700];
  v308 = STACK[0x14B8];
  LODWORD(v132) = STACK[0x14B8] & 0x1D ^ 5;
  v309 = ~STACK[0x14B8] & 2;
  v310 = (((v305 + 1715) ^ 0x8A3D0195) >> v132 >> v309)
       + (((((2 * (v298 & v257 ^ 0x80008264)) & 0x22C2EB1E) - (v298 & v257 ^ 0x80008264) - 291599760) ^ 0x6E9E0814) << v289);
  LODWORD(STACK[0x14E8]) = v310 - 1926392729 - ((2 * v310) & 0x1A5B28CE);
  v311 = 2 * ((v232 ^ 0x1A448B96) & (v307 ^ v262) ^ v307 & 0x17691FF1);
  v312 = ((v311 ^ 0xA5228C2) - 1926392729 - 2 * ((v311 ^ 0xA5228C2) & STACK[0x1868] ^ v311 & 0x10)) ^ v307;
  v313 = STACK[0x16EC];
  v314 = STACK[0x18A8];
  v315 = v232 & 0x477CEDD5 ^ 0x17CE4C0 ^ STACK[0x18A8] & (LODWORD(STACK[0x16EC]) ^ 0xCA5179B2);
  v316 = (v312 & v35 & 0xCC13B65C ^ 0xCC03245D) + (v312 & v35 & 0x33EC49A3);
  v317 = 2 * (v285 & (LODWORD(STACK[0x1470]) ^ 0x43F28116) ^ v292 & 0x4EDF1571);
  v318 = ((v317 ^ 0x1C0002C2) - 1926392729 - 2 * ((v317 ^ 0x1C0002C2) & v302 ^ v317 & 8)) ^ LODWORD(STACK[0x1470]);
  v319 = STACK[0x1438];
  v320 = (((v304 - 1) ^ 0x95647EAD) >> LODWORD(STACK[0xD24]) >> LODWORD(STACK[0xD30]))
       + (((((2 * (v303 & v257 ^ 0x40464C80)) & 0x64437DF4) - (v303 & v257 ^ 0x40464C80) + 1306411269) ^ 0xD980D85) << LODWORD(STACK[0xD9C]) << LODWORD(STACK[0xDA0]));
  LODWORD(STACK[0x13D8]) = v320 - 1926392729 - ((2 * v320) & 0x1A5B28CE);
  v321 = 2 * (v315 - ((2 * v315) & 0x6928CC4E)) + 1764281422;
  v322 = ((v321 ^ 0x61880D44) - 1926392729 - 2 * ((v321 ^ 0x61880D44) & v302 ^ v321 & 8)) ^ v313;
  v323 = 1921424060 - (v322 & v319 ^ 0x8604C406 | 0x72869ABC) + (v322 & v319 ^ 0x8604C406 | 0x8D796543);
  v324 = (2
        * (((v314 & (STACK[0x16B8] ^ 0xD4A7E3DE) ^ v232 & 0x598A77B9) & 0x3A480967 ^ 0x32400947)
         + ((v314 & (STACK[0x16B8] ^ 0xD4A7E3DE) ^ v232 & 0x598A77B9) & 0x45B7F698 ^ 0x40023099))
        - 2) ^ 0xF6945BFC;
  v325 = STACK[0x12C4];
  v326 = (v324 - 1926392729 - (STACK[0x12C4] & (2 * v324))) ^ STACK[0x16B8];
  v327 = v322 & v35;
  v328 = ((2 * (v326 & v35 ^ 0x404104C0)) & 0x1FBCE6A2) - (v326 & v35 ^ 0x404104C0);
  v329 = v289;
  v330 = v308 & 0x1E ^ 6;
  LODWORD(STACK[0x1080]) = v330;
  v331 = (((v312 & v319 & 0xE5127283 ^ 0xA0027002)
         + (v312 & v319 ^ 0x45F082A1)
         - ((v312 & v319 ^ 0x45F082A1) & 0xE5127283)) ^ 0xA0E2F022) >> v330;
  v332 = (v308 & 1) == 0;
  LODWORD(STACK[0x1078]) = v332;
  v333 = (v331 >> v332) | (((v316 - 1) ^ 0xCC03245C) << v289);
  LODWORD(STACK[0x1544]) = v333 - 1926392729 - ((2 * v333) & 0x1A5B28CE);
  LOBYTE(v226) = STACK[0x1520];
  v334 = ((((2 * (v318 & v306 ^ 0xB2048490)) | 0xD6D6ADCC) - (v318 & v306 ^ 0xB2048490) + 345286938) ^ 0x596FD276) << LODWORD(STACK[0x15C0]) << v226;
  v335 = STACK[0x14E4];
  LODWORD(STACK[0xCB0]) = v132;
  LODWORD(STACK[0xCAC]) = v309;
  LODWORD(STACK[0x17BC]) = v334
                         + ((v318 & v335) >> v132 >> v309)
                         - 1926392729
                         - ((2 * (v334 + ((v318 & v335) >> v132 >> v309))) & 0x1A5B28CE);
  v336 = STACK[0x16F8] & 0xC59760C8 ^ 0xC1824008 ^ (v292 ^ 0x6BB7ABAB) & (LODWORD(STACK[0x16F8]) ^ 0x8D2D9467);
  v337 = (2 * (((2 * v336) & 0x4823230) - v336) - 75641394) ^ 0x72734D5E;
  v338 = v325;
  v339 = (v337 - 1926392729 - (v325 & (2 * v337))) ^ LODWORD(STACK[0x16F8]);
  LODWORD(STACK[0x1524]) = (v327 << v289) ^ 0x8D2D9467 ^ ((v323 ^ 0xB7DA145) >> v299 >> v269);
  v340 = STACK[0x16D8];
  v341 = STACK[0x16D8] & (v232 ^ 0x364CC4F4) ^ STACK[0x17D8] & 0x3B615093;
  v342 = v308 & 0x19 ^ 1;
  LODWORD(STACK[0x1360]) = v342;
  v343 = ~(_DWORD)v308 & 6;
  LODWORD(STACK[0x1358]) = v343;
  LODWORD(STACK[0x1648]) = ((v326 & v335) >> v342 >> v343) ^ 0x8D2D9467 ^ (((v328 + 1881246894) ^ 0x3060886E) << LODWORD(STACK[0x13CC]) << LODWORD(STACK[0x13D0]));
  v344 = ((LODWORD(STACK[0x1768]) ^ 0xEE56F218) + 296291816) ^ ((LODWORD(STACK[0x1768]) ^ 0x1F79112F) - 528027951) ^ ((LODWORD(STACK[0x1768]) ^ 0x7C027750) - 2080536400);
  v345 = STACK[0x10C8];
  v346 = STACK[0x10C8] & 0x13 ^ 3;
  LODWORD(STACK[0x1800]) = v346;
  v347 = v345 & 0xC ^ 4;
  LODWORD(STACK[0x1818]) = v347;
  v348 = ((((v339 & v306 ^ 0x3860A101) - ((2 * (v339 & v306 ^ 0x3860A101)) & 0x328D9ED4) + 424071018) ^ 0x21266E6B) << v289)
       + ((v339 & v319) >> v347 >> v346);
  LODWORD(STACK[0x1554]) = v348 - 1926392729 - ((2 * v348) & 0x1A5B28CE);
  v344 -= 673642396;
  v349 = (v344 & 0xB5548C03 | 0x40C0 | (2 * (v344 & 0xB5548C03)) & 0x81000) ^ (2 * (v344 & 0xB5548C03)) & (v344 ^ 0x254CFEE3);
  v350 = (2 * (v344 ^ 0x254CFEE3)) & 0x901872E0 ^ 0x90081220 ^ ((2 * (v344 ^ 0x254CFEE3)) ^ 0x2030E5C0) & (v344 ^ 0x254CFEE3);
  v351 = (4 * v349) & 0x90107200 ^ v349 ^ v350 & 0xFFF6701C & (4 * v349);
  v352 = (4 * v350) & 0x901872E0 ^ 0x90183060 ^ ((4 * v350) ^ 0x4061CB80) & v350;
  v353 = (16 * v351) & 0x901872E0 ^ v351 ^ ((16 * v351) ^ 0x42C00) & v352;
  v354 = (16 * v352) & 0x901872E0 ^ 0x901850E0 ^ ((16 * v352) ^ 0x1872E00) & v352;
  v355 = v353 ^ 0x90185020 ^ (v353 << 8) & 0x90187200 ^ ((v353 << 8) ^ 0x62C000) & v354;
  v356 = v340 ^ (2 * v341);
  v357 = v344 ^ (2
               * ((v355 << 16) & 0x10180000 ^ v355 ^ ((v355 << 16) ^ 0x72E00000) & ((v354 << 8) & 0x10180000 ^ ((v354 << 8) ^ 0x18720000) & v354 ^ 0x80000)));
  LODWORD(STACK[0x1768]) = v357;
  v358 = v356 & 0x55BA0589 ^ 0x50820000 ^ (v356 ^ 0x50C20002) & (v357 ^ 0xE0DE6C4A);
  LODWORD(v132) = STACK[0x10DC];
  v359 = v356 & 0xA266A27B ^ 0x82448072 ^ (v356 ^ 0x50C20002) & (LODWORD(STACK[0x10DC]) ^ 0x2F4B361C);
  v360 = STACK[0x17A0];
  v361 = v360 & 0x7BD5354 ^ (v232 ^ 0x8A90C733) & (v360 ^ 0x8D2D9467) ^ 0x5A81114;
  v362 = (((-1878212259 - v359 + ((2 * v359) & 0xDFE67D44)) ^ 0x120A412D) >> LODWORD(STACK[0x1820]) >> LODWORD(STACK[0x160C]))
       + (v358 << v289);
  LODWORD(STACK[0x17D8]) = v362 - 1926392729 - ((2 * v362) & 0x1A5B28CE);
  v363 = STACK[0x1368] & 0x3A4FCCBC ^ 0x204AC020 ^ (v292 ^ 0x946F07DF) & (LODWORD(STACK[0x1368]) ^ 0x8D2D9467);
  v364 = (2 * ((v361 | 0x1671272D) - (v361 | 0x698ED8D2)) - 753028700) ^ 0x2DE84CFA;
  v365 = (v364 - 1926392729 - (v338 & (2 * v364))) ^ v360;
  v366 = (2 * (((2 * v363) | 0x29E66BEA) - v363) - 702966762) ^ 0x7968E3E2;
  v367 = v338;
  v368 = (v366 - 1926392729 - (v338 & (2 * v366))) ^ LODWORD(STACK[0x1368]);
  v369 = STACK[0x1898];
  v370 = STACK[0x1810];
  v371 = v357 ^ 0xB56469C3;
  v372 = 103377735
       - (v365 & (v357 ^ 0xB56469C3) ^ 0x4004A020 | 0x6296B47)
       + (v365 & (v357 ^ 0xB56469C3) ^ 0x4004A020 | 0xF9D694B8);
  LODWORD(STACK[0x16D0]) = ((v368 & v319) >> LODWORD(STACK[0x1498]) >> LODWORD(STACK[0x14A8])) ^ 0x8D2D9467 ^ (((((2 * (v368 & v306 ^ 0xA112EC4)) & 0x1B59004A) - (v368 & v306 ^ 0xA112EC4) - 229408806) ^ 0xF842511E) << LODWORD(STACK[0x10B4]) << LODWORD(STACK[0x10D0]));
  v373 = (2 * (((2 * (v369 & v370)) & 0x11021606) + (v369 & v370 ^ 0x5AFD8FDF)) - 285349382) ^ v370;
  v374 = v373 & 0xADE71E06 ^ 0xA1401E04 ^ (v373 ^ 0xA4F909B8) & (v132 ^ 0x20CA8A61);
  v375 = 1260962557
       - (v373 & 0x61FBF0DC ^ 0x120909C ^ (v373 ^ 0xA4F909B8) & (LODWORD(STACK[0x14B0]) ^ 0xECD664BB) | 0x4B28C2FD)
       + (v373 & 0x61FBF0DC ^ 0x120909C ^ (v373 ^ 0xA4F909B8) & (LODWORD(STACK[0x14B0]) ^ 0xECD664BB) | 0xB4D73D02);
  LODWORD(v132) = STACK[0x1720];
  v376 = STACK[0x1720] & 0x1A928C22 ^ 0x928422 ^ (v292 ^ 0xB4B24741) & (LODWORD(STACK[0x1720]) ^ 0x8D2D9467);
  v377 = STACK[0x1748];
  v378 = STACK[0x18A8] & (LODWORD(STACK[0x1748]) ^ 0x53A52281);
  v379 = v345 & 0x1F ^ 7;
  LODWORD(STACK[0x16B8]) = v379;
  v380 = ((v375 ^ 0x950EAD06) << LODWORD(STACK[0x1428]))
       + (((v374 - ((2 * v374) & 0xFEB3A94A) + 2136593573) ^ 0x7AF8C2A1) >> v379);
  LODWORD(STACK[0x1700]) = v380 - 1926392729 - ((2 * v380) & 0x1A5B28CE);
  v381 = (2
        * (((v378 ^ v232 & 0xDE88B6E6) & 0x86D72C4 ^ 0x6D6080)
         + (v378 ^ v232 & 0xDE88B6E6 ^ 0x5C009666)
         - ((v378 ^ v232 & 0xDE88B6E6 ^ 0x5C009666) & 0x86D72C4))) ^ 0xB0CAE188;
  v382 = (v381 - 1926392729 - (v338 & (2 * v381))) ^ v377;
  v383 = ((((v365 & v319 & 0x4F45E89F ^ 0x4F45E01D)
          + (v365 & v319 ^ 0x10180982)
          - ((v365 & v319 ^ 0x10180982) & 0x4F45E89F)) ^ 0x5F5DE11D) >> LODWORD(STACK[0x1680]) >> LODWORD(STACK[0x1668]))
       + ((v372 ^ 0xB9D23498) << v289);
  LODWORD(STACK[0x1834]) = v383 - 1926392729 - ((2 * v383) & 0x1A5B28CE);
  v384 = (2 * ((v376 | 0x6E9607DE) - (v376 | 0x1169F821)) + 584314946) ^ 0xCC080FBC;
  v385 = (v384 - 1926392729 - (v338 & (2 * v384))) ^ v132;
  v386 = v335;
  v387 = v319;
  v388 = (v382 & v319 ^ 0xC020065) - ((2 * (v382 & v319 ^ 0xC020065)) & 0x28EF66C2);
  v389 = STACK[0x144C];
  v390 = (v292 ^ 0xF6687478) & (v389 ^ 0x8D2D9467) ^ v389 & 0x5848BF1B;
  v391 = (((v385 & v371 & 0x194AE994 ^ 0x948A195) + (v385 & v371 & 0xE6B5166B) - 1) ^ 0x948A194) << LODWORD(STACK[0x17CC]) << LODWORD(STACK[0x1760]);
  v392 = STACK[0x1740];
  v393 = STACK[0x1740] & 0xA88551DB ^ 0x8814049 ^ (v232 ^ 0x25A8C5BC) & (LODWORD(STACK[0x1740]) ^ 0x8D2D9467);
  v394 = (-338606392 - (v385 & v335 ^ 0x428B0002) + ((2 * (v385 & v335 ^ 0x428B0002)) | 0x285D7270)) ^ 0x56A5B93A;
  v395 = v308 & 0x11 ^ 1;
  LODWORD(STACK[0x10C4]) = v395;
  LOBYTE(v335) = v308;
  LODWORD(v132) = v308 & 0xE ^ 6;
  LODWORD(STACK[0x10C0]) = v132;
  LODWORD(STACK[0x16D8]) = (v391 | (v394 >> v395 >> v132))
                         - 1926392729
                         - ((2 * (v391 | (v394 >> v395 >> v132))) & 0x1A5B28CE);
  v396 = (2 * (((2 * v393) | 0x2D48DDCC) - v393) - 759750092) ^ 0x2C407DD8;
  v397 = (v396 - 1926392729 - (v367 & (2 * v396))) ^ v392;
  v398 = (((v388 + 343389025) ^ 0x1875B304u) >> LODWORD(STACK[0xCF0]) >> LODWORD(STACK[0xCF4])) | ((v306 & v382) << v289);
  LODWORD(STACK[0x1400]) = v398 + LODWORD(STACK[0x15E4]) + ~((2 * v398) & 0x1A5B28CE);
  v399 = 2 * ((v390 & 0x369EFA89 ^ 0x10082000) + (v390 & 0x49610576 ^ 0x9210567)) - 2;
  v400 = ((v399 ^ 0x224362CA) - 1926392729 - 2 * ((v399 ^ 0x224362CA) & STACK[0x1868] ^ v399 & 0x10)) ^ v389;
  v401 = v306;
  v402 = ((2 * (v400 & v306 ^ 0xE2322B5B)) & 0xFC36CDA) - (v400 & v306 ^ 0xE2322B5B);
  v403 = STACK[0x1788];
  v404 = v292 & 0x47AC23E8 ^ 0x430C01A8 ^ v369 & (LODWORD(STACK[0x1788]) ^ 0xCA81B78F);
  v405 = v345;
  v406 = v345 & 0xB ^ 3;
  LODWORD(STACK[0xCC0]) = v406;
  v407 = v345 & 0x14 ^ 4;
  LODWORD(STACK[0xCBC]) = v407;
  v408 = (((((2 * (v397 & v371 ^ 0x4C042331)) | 0x86AFAE60) - (v397 & v371 ^ 0x4C042331) - 1129830192) ^ 0xF53F401) << LODWORD(STACK[0xDA0]) << LODWORD(STACK[0xD9C]))
       + ((((v397 & v386 & 0x8473C72B ^ 0x8063C72B) + (v397 & v386 & 0x7B8C38D4 ^ 0x3042015) - 1) ^ 0x8367E73F) >> v406 >> v407);
  LODWORD(STACK[0x1848]) = v408 - 1926392729 - ((2 * v408) & 0x1A5B28CE);
  v409 = STACK[0x1144];
  LODWORD(v132) = STACK[0x1770];
  v410 = (v232 ^ 0x16BC05F9) & (LODWORD(STACK[0x1770]) ^ LODWORD(STACK[0x1144])) ^ STACK[0x1770] & 0x1B91919E;
  v411 = v308 & 0x13 ^ 3;
  v412 = v308 & 0xC ^ 4;
  LODWORD(STACK[0x1318]) = v411;
  LODWORD(STACK[0x1320]) = v412;
  v413 = ((((v400 & v387 ^ 0xC88D00) - ((2 * (v400 & v387 ^ 0xC88D00)) & 0x499F3DD6) - 1529897237) ^ 0xA40713EB) >> v411 >> v412)
       + (((v402 - 132232814) ^ 0x1A2C62C9) << v329);
  LODWORD(STACK[0x16EC]) = v413 - 1926392729 - ((2 * v413) & 0x1A5B28CE);
  v414 = (((2 * v410) ^ 0x1203200C) - 1926392729 - (v367 & (2 * ((2 * v410) ^ 0x1203200C)))) ^ v132;
  v415 = ((((2 * (v414 & v371 ^ 0x2B389420)) & 0x7EE68DDA) - (v414 & v371 ^ 0x2B389420) - 1064519406) ^ 0xEBB42D32) << v226 << LODWORD(STACK[0x15C0]);
  v416 = v345 & 0x1D ^ 5;
  v417 = ~v345 & 2;
  LODWORD(STACK[0x104C]) = v417;
  LODWORD(STACK[0x1050]) = v416;
  LODWORD(STACK[0x1470]) = v415
                         + ((v414 & v386) >> v417 >> v416)
                         - 1926392729
                         - ((2 * (v415 + ((v414 & v386) >> v417 >> v416))) & 0x1A5B28CE);
  v418 = (2 * (v404 - ((2 * v404) & 0x62ED894C)) + 1659734348) ^ 0xE8B58CDC;
  v419 = (v418 - 1926392729 - (v367 & (2 * v418))) ^ v403;
  LODWORD(STACK[0x173C]) = ((v419 & v387) >> LODWORD(STACK[0x1890])) ^ 0x8D2D9467 ^ ((v419 & v401) << v329);
  v420 = v369;
  v421 = v292 & 0x5CA5E2E7 ^ 0x5C25E286 ^ v369 & (LODWORD(STACK[0x1658]) ^ 0xD1887680);
  v422 = 2 * (((2 * v421) & 0x19F94196) - v421) - 435765656;
  LODWORD(v308) = STACK[0x159C];
  v423 = ((v422 ^ 0x460CFFA2) - 1926392729 - 2 * ((v422 ^ 0x460CFFA2) & STACK[0x159C] ^ v422 & 0x18)) ^ LODWORD(STACK[0x1658]);
  v424 = (2 * ((v232 ^ 0x475A3BEF) & (LODWORD(STACK[0x156C]) ^ v409) ^ STACK[0x156C] & 0x4A77AF88)) ^ 0x104B0800;
  LODWORD(v226) = v292;
  v425 = STACK[0x1538];
  v426 = v425 & 0x95F05D3A ^ 0x90604C08 ^ (v292 ^ 0x3BD09659) & (v425 ^ 0x8D2D9467);
  v427 = (v424 - 1926392729 - (v367 & (2 * v424))) ^ LODWORD(STACK[0x156C]);
  v428 = STACK[0x1154];
  LOBYTE(v132) = STACK[0x1490];
  LOBYTE(v369) = STACK[0x1480];
  v429 = ((((v423 & v387 ^ 0x65408584) - ((2 * (v423 & v387 ^ 0x65408584)) & 0xBF3BCCA6) + 1604183635) ^ 0x3ADD63D7) >> v132 >> v369)
       + ((v423 & v371) << (v428 & 0x15 ^ 5) << (v428 & 0xA ^ 2));
  LODWORD(STACK[0x16F8]) = v429 - 1926392729 - ((2 * v429) & 0x1A5B28CE);
  v430 = (2 * (((2 * v426) & 0x2A6ACF26) - v426) - 711642920) ^ 0xFF15808C;
  v431 = (v430 - 1926392729 - (v367 & (2 * v430))) ^ v425;
  v432 = ((((v401 & v427 & 0xB85A95D4 ^ 0xA84A95D4)
          + (v401 & v427 ^ 0x12100009)
          - ((v401 & v427 ^ 0x12100009) & 0xB85A95D4)) ^ 0xAA4A95DD) << v329) | (((((2 * (v427 & v386 ^ 0x120E4834)) & 0xFA07EB1C)
                                                                                 - (v427 & v386 ^ 0x120E4834)
                                                                                 + 50072177) ^ 0x10F24245) >> LODWORD(STACK[0x1638]) >> LODWORD(STACK[0x15F8]));
  LODWORD(STACK[0x15E0]) = v432 - 1926392729 - ((2 * v432) & 0x1A5B28CE);
  v433 = ((2 * (v431 & v387 ^ 0x80035109)) | 0xA53C668) - (v431 & v387 ^ 0x80035109);
  v434 = ((2 * (v431 & v401 ^ 0x1C040044)) & 0x2741EC2A) - (v431 & v401 ^ 0x1C040044);
  v435 = (v232 ^ 0x2225493D) & (LODWORD(STACK[0x16A4]) ^ 0x8D2D9467) ^ STACK[0x16A4] & 0xAF08DD5A;
  v436 = STACK[0x1518];
  v437 = v226 & 0xB253AF37 ^ 0x80028C06 ^ v420 & (LODWORD(STACK[0x1518]) ^ 0x3F7E3B50);
  v438 = 2 * ((v435 & 0x721BC697 ^ 0x2008C002) + (v435 & 0xDE43968 ^ 0x4E42929)) - 2;
  v439 = STACK[0x17C0];
  v440 = ((v438 ^ 0x53C8FAD0) - 1926392729 - 2 * ((v438 ^ 0x53C8FAD0) & STACK[0x17C0] ^ v438 & 8)) ^ LODWORD(STACK[0x16A4]);
  LOBYTE(v426) = STACK[0x16F0];
  LOBYTE(v318) = STACK[0x1730];
  LODWORD(STACK[0x1810]) = (((v434 + 1818167786) ^ 0x705B09AE) << v329) ^ 0x8D2D9467 ^ (((v433 + 2060852428) ^ 0x52AB23D) >> v426 >> v318);
  v441 = v428 & 0x13 ^ 3;
  v442 = v428 & 0xC ^ 4;
  LODWORD(STACK[0x1054]) = v441;
  LODWORD(STACK[0x1058]) = v442;
  v443 = ~v405 & 7;
  LODWORD(STACK[0x1350]) = v443;
  LODWORD(STACK[0x1348]) = v405 & 0x18;
  v444 = ((v440 & v371) << v441 << v442) + ((v440 & v386) >> v443 >> (v405 & 0x18));
  LODWORD(STACK[0x16A4]) = v444 - 1926392729 - ((2 * v444) & 0x1A5B28CE);
  v445 = (2 * ((v437 | 0x4C1CB498) - (v437 | 0x33E34B67)) + 1741067982) ^ 0xDC3D677A;
  v446 = (v445 - 1926392729 - (v367 & (2 * v445))) ^ v436;
  v447 = STACK[0x1458];
  v448 = v409;
  LODWORD(STACK[0x1788]) = v232 ^ v409;
  LODWORD(STACK[0x1760]) = ((v446 & v371) << v329) ^ ((((v446 & v387 & 0xB4809D35 ^ 0xA4800134)
                                                      + (v446 & v387 & 0x4B7F62CA ^ 0x2040003)
                                                      - 1) ^ 0xA6840136) >> v426 >> v318) ^ 0x8D2D9467;
  v449 = 2 * ((v232 ^ v409) & (v447 ^ 0x3CA4EE8F) ^ v232 & 0x31897AE8);
  v450 = ((v449 ^ 0x21220C0) - 1926392729 - 2 * ((v449 ^ 0x21220C0) & v308 ^ v449 & 0x18)) ^ v447;
  v451 = v386;
  v452 = (v450 & v386 & 0xF2BB6A24 ^ 0x52BB6005) + (v450 & v386 & 0xD4495DB);
  v453 = STACK[0x1330];
  v454 = (2 * ((v226 ^ 0x1C65EA6E) & (v453 ^ v448) ^ v453 & 0x3245210D)) ^ 0xA000A;
  LOBYTE(v386) = STACK[0xD2C];
  LOBYTE(v318) = STACK[0xD28];
  v455 = (((-2048446828 - (v401 & v450 ^ 0xC09FFF2E | 0x85E72E94) + (v401 & v450 ^ 0xC09FFF2E | 0x7A18D16B)) ^ 0xBA872E45) << v386 << v318) | (((v452 - 1) ^ 0x52BB6004) >> v369 >> v132);
  LODWORD(STACK[0x1740]) = v455 - 1926392729 - ((2 * v455) & 0x1A5B28CE);
  v456 = (v454 - 1926392729 - (v367 & (2 * v454))) ^ v453;
  v457 = (2 * ((LODWORD(STACK[0x17B0]) ^ v448) & (v232 ^ 0x3E6C1F4B) ^ STACK[0x17B0] & 0x33418B2C)) ^ 0x2030048;
  v458 = (v457 - 1926392729 - (v367 & (2 * v457))) ^ LODWORD(STACK[0x17B0]);
  v459 = v428 & 0x19 ^ 1;
  LODWORD(STACK[0x13B4]) = v459;
  v460 = ((669603788 - (v458 & v371 ^ 0x440000D9 | 0x27E957CC) + (v458 & v371 ^ 0x440000D9 | 0xD816A833)) ^ 0x9C16A8EA) << v459;
  v461 = ~v428 & 6;
  LODWORD(STACK[0x13A0]) = v461;
  v462 = (v460 << v461) | ((v458 & v387) >> LODWORD(STACK[0xD30]) >> LODWORD(STACK[0xD24]));
  LODWORD(STACK[0x1638]) = v462 - 1926392729 - ((2 * v462) & 0x1A5B28CE);
  v463 = (((2 * (STACK[0x1828] & (LODWORD(STACK[0x1708]) ^ 0x440136A4) ^ v226 & 0x492CA2C3)) ^ 0x10410486)
        - 1926392729
        - (v367 & (2 * ((2 * (STACK[0x1828] & (LODWORD(STACK[0x1708]) ^ 0x440136A4) ^ v226 & 0x492CA2C3)) ^ 0x10410486)))) ^ LODWORD(STACK[0x1708]);
  v464 = v451;
  v465 = v335 & 0x12 ^ 2;
  v466 = v335 & 0xD ^ 5;
  LODWORD(STACK[0x139C]) = v465;
  LODWORD(STACK[0x1368]) = v466;
  v467 = ((((v456 & v451 & 0xE63D16DF ^ 0x260914CF)
          + (v456 & v451 ^ 0xC0740310)
          - ((v456 & v451 ^ 0xC0740310) & 0xE63D16DF)) ^ 0x264915CF) >> v465 >> v466)
       + ((v456 & v401) << v329);
  LODWORD(STACK[0x1838]) = v467 - 1926392729 - ((2 * v467) & 0x1A5B28CE);
  v468 = STACK[0x15C8];
  v469 = v468 & 0xAE4851F2 ^ 0x88401150 ^ (v226 ^ 0x689A91) & (v468 ^ 0x8D2D9467);
  v470 = STACK[0x15F0];
  v471 = v470 & 0x9D517335 ^ 0x80412321 ^ (v232 ^ 0x107CE752) & (v470 ^ 0x8D2D9467);
  LODWORD(STACK[0x15E4]) = ((v463 & v371) << v329) ^ ((v463 & v451) >> LODWORD(STACK[0x1818]) >> LODWORD(STACK[0x1800])) ^ 0x8D2D9467;
  v472 = (2 * (((2 * v471) | 0x47176E46) - v471) - 1192717894) ^ 0x5D97084E;
  v473 = (v472 - 1926392729 - (v367 & (2 * v472))) ^ v470;
  v474 = v335 & 0xF ^ 7;
  LODWORD(STACK[0x10A0]) = v474;
  LODWORD(STACK[0x1098]) = v335 & 0x10;
  LODWORD(STACK[0x1458]) = (((-1700836727
                            - (v473 & v387 ^ 0x1480008D | 0x9A9F4A89)
                            + (v473 & v387 ^ 0x1480008D | 0x6560B576)) ^ 0x71E0B5FB) >> (v335 & 0x10) >> v474) ^ 0x8D2D9467 ^ (((1031863800 - (v401 & v473 ^ 0xC0196020 | 0x3D80FDF8) + (v401 & v473 ^ 0xC0196020 | 0xC27F0207)) ^ 0x2666227) << LODWORD(STACK[0x10B4]) << LODWORD(STACK[0x10D0]));
  v475 = 2 * ((v469 | 0xF913E9B) - (v469 | 0x706EC164)) - 522353976;
  v476 = ((v475 ^ 0x17B27F52) - 1926392729 - 2 * ((v475 ^ 0x17B27F52) & v439 ^ v475 & 8)) ^ v468;
  v477 = STACK[0x1338];
  v478 = STACK[0x18A8];
  v479 = v232 & 0x7F954728 ^ 0x4144208 ^ STACK[0x18A8] & (LODWORD(STACK[0x1338]) ^ 0xF2B8D34F);
  v480 = v335 & 0x15 ^ 5;
  LODWORD(STACK[0x13C0]) = v480;
  v481 = v335 & 0xA ^ 2;
  LODWORD(STACK[0x15F0]) = v481;
  LODWORD(STACK[0x156C]) = (((((2 * (v476 & v387 ^ 0x980304)) & 0x64AE5AEA) - (v476 & v387 ^ 0x980304) + 1302909578) ^ 0x4D30D18E) >> v481 >> v480) ^ 0x8D2D9467 ^ ((((v476 & v371 ^ 0xC0C0BC4C) - ((2 * (v476 & v371 ^ 0xC0C0BC4C)) & 0x7D71F4C8) + 1052310116) ^ 0xFE784628) << v386 << v318);
  v482 = 2 * (v479 - ((2 * v479) & 0x36B817B4)) + 918034356;
  v483 = ((v482 ^ 0x249A9BE4) - 1926392729 - 2 * ((v482 ^ 0x249A9BE4) & v308 ^ v482 & 0x18)) ^ v477;
  v484 = STACK[0x161C];
  v485 = (v226 ^ 0xA725DED9) & (v484 ^ 0x8D2D9467) ^ v484 & 0x90515BA;
  v486 = (((v483 & v464 & 0xA0368348 ^ 0xA0348340) + (v483 & v464 ^ 0x4030088) - ((v483 & v464 ^ 0x4030088) & 0xA0368348)) ^ 0xA43583C0) >> LODWORD(STACK[0x1820]) >> LODWORD(STACK[0x160C]);
  LODWORD(STACK[0x1430]) = v486
                         + ((v401 & v483) << v329)
                         - 1926392729
                         - ((2 * (v486 + ((v401 & v483) << v329))) & 0x1A5B28CE);
  v487 = (2 * ((v485 & 0x6B718509 ^ 0x63718109) + (v485 & 0x148E7AF6 ^ 0xA1)) - 2) ^ v484;
  v488 = STACK[0x1418];
  v489 = ((v329 + 1855607960) ^ 0xCD512A4D) & (2 * ((v329 + 1855607960) & 0x9165AB68)) ^ (v329 + 1855607960) & 0x9165AB68;
  v490 = ((2 * ((v329 + 1855607960) ^ 0xEFD16C4D)) ^ 0xFD698E4A) & ((v329 + 1855607960) ^ 0xEFD16C4D) ^ (2 * ((v329 + 1855607960) ^ 0xEFD16C4D)) & 0x7EB4C724;
  v491 = (v490 ^ 0x4C208600) & (4 * v489) ^ v489;
  v492 = ((4 * (v490 ^ 0x2944125)) ^ 0xFAD31C94) & (v490 ^ 0x2944125) ^ (4 * (v490 ^ 0x2944125)) & 0x7EB4C724;
  v493 = (v492 ^ 0x7A900400) & (16 * v491) ^ v491;
  v494 = ((16 * (v492 ^ 0x424C321)) ^ 0xEB4C7250) & (v492 ^ 0x424C321) ^ (16 * (v492 ^ 0x424C321)) & 0x7EB4C720;
  v495 = v493 ^ 0x7EB4C725 ^ (v494 ^ 0x6A044200) & (v493 << 8);
  v496 = (v329 + 1855607960) ^ (2
                              * ((v495 << 16) & 0x7EB40000 ^ v495 ^ ((v495 << 16) ^ 0x47250000) & (((v494 ^ 0x14B08525) << 8) & 0x7EB40000 ^ 0x4A300000 ^ (((v494 ^ 0x14B08525) << 8) ^ 0xB4C70000) & (v494 ^ 0x14B08525))));
  v497 = STACK[0x16C8];
  v498 = ((((v487 ^ 0x59C4BF71) & (LODWORD(STACK[0x14B0]) ^ 0xD84FC2A9) ^ v487 & 0x556256CE) & 0x16314898 ^ 0x2314811)
        + (((v487 ^ 0x59C4BF71) & (LODWORD(STACK[0x14B0]) ^ 0xD84FC2A9) ^ v487 & 0x556256CE) & 0xE9CEB767)
        - 1) ^ 0x53715E50;
  v499 = ((((2 * (v487 & 0x662FF0AA ^ 0x220CA0AA ^ (v487 ^ 0x59C4BF71) & (LODWORD(STACK[0x1420]) ^ 0xEB0264CD))) | 0xB28045DC)
         - (v487 & 0x662FF0AA ^ 0x220CA0AA ^ (v487 ^ 0x59C4BF71) & (LODWORD(STACK[0x1420]) ^ 0xEB0264CD))
         - 1497375470) ^ 0x3B483264) >> LODWORD(STACK[0xD54]) >> LODWORD(STACK[0xD50]);
  v500 = v428 & 0x1B ^ 3;
  LODWORD(STACK[0x1858]) = v500;
  v501 = ~v428 & 4;
  LODWORD(STACK[0x1840]) = v501;
  LODWORD(STACK[0x14F8]) = v499 ^ 0x8D2D9467 ^ (v498 << v501 << v500);
  v502 = (2
        * (((v478 & (v488 ^ 0x9D20231C) ^ v232 & 0x100DB77B) & 0x23DD2E3B ^ 0x5C2FD1FF)
         - (v478 & (v488 ^ 0x9D20231C) ^ v232 & 0x100DB77B | 0x23DD2E3B))
        + 1203395702) ^ 0xB8448B38;
  v503 = (v502 - 1926392729 - (v367 & (2 * v502))) ^ v488;
  v504 = (2
        * (((v478 & (v497 ^ 0xDD777C9D) ^ v232 & 0x505AE8FA) & 0x7E2A6997 ^ 0x2E200987)
         + (v478 & (v497 ^ 0xDD777C9D) ^ v232 & 0x505AE8FA ^ 0x500AE070)
         - ((v478 & (v497 ^ 0xDD777C9D) ^ v232 & 0x505AE8FA ^ 0x500AE070) & 0x7E2A6997))) ^ 0x5C50130A;
  v505 = (v504 - 1926392729 - (v367 & (2 * v504))) ^ v497;
  v506 = v226;
  v507 = (v226 ^ 0xC75467D1) & (LODWORD(STACK[0x1778]) ^ 0x8D2D9467);
  LODWORD(v226) = STACK[0x1778];
  v508 = ((v507 ^ STACK[0x1778] & 0x6974ACB2) & 0x183F21D3 ^ 0x103F0143)
       + (v507 ^ STACK[0x1778] & 0x6974ACB2 ^ 0x6800A8B0)
       - ((v507 ^ STACK[0x1778] & 0x6974ACB2 ^ 0x6800A8B0) & 0x183F21D3);
  v509 = v496 ^ 0x6D69B145;
  v510 = (v496 ^ 0x6D69B145) & 0xE ^ 6;
  v511 = (v496 ^ 0x6D69B145) & 0x11 ^ 1;
  LODWORD(STACK[0x1328]) = v511;
  LODWORD(STACK[0x1330]) = v510;
  LODWORD(STACK[0x15C8]) = ((v503 & v371) << v511 << v510) ^ ((((v503 & v464 & 0xE5978718 ^ 0xA5970608)
                                                              + (v503 & v464 ^ 0x40008150)
                                                              - ((v503 & v464 ^ 0x40008150) & 0xE5978718)) ^ 0xA5970648) >> v426 >> LODWORD(STACK[0x1730])) ^ 0x8D2D9467;
  v512 = v428 & 0x1A ^ 2;
  v513 = ~v428 & 5;
  LODWORD(STACK[0xCA4]) = v513;
  LODWORD(STACK[0xCA8]) = v512;
  v514 = (((((2 * (v505 & v387 ^ 0x2A415801)) | 0x46D1DB2E) - (v505 & v387 ^ 0x2A415801) + 1553404521) ^ 0x8929B596) >> LODWORD(STACK[0x1078]) >> LODWORD(STACK[0x1080]))
       + (((1476146083 - (v505 & v371 ^ 0xF409E961 | 0x57FC33A3) + (v505 & v371 ^ 0xF409E961 | 0xA803CC5C)) ^ 0x5C0A253D) << v513 << v512);
  LODWORD(STACK[0x1418]) = v514 - 1926392729 - ((2 * v514) & 0x1A5B28CE);
  v515 = STACK[0x1828];
  v516 = v506;
  v517 = 2 * (STACK[0x1828] & (LODWORD(STACK[0x1440]) ^ 0xBF9823D) ^ v506 & 0x6D4165A);
  v518 = STACK[0x1868];
  v519 = ((v517 ^ 0xC000484) - 1926392729 - 2 * ((v517 ^ 0xC000484) & STACK[0x1868] ^ v517 & 0x10)) ^ LODWORD(STACK[0x1440]);
  v520 = (((2 * v508) ^ 0xF2361A82) - 1926392729 - 2 * (((2 * v508) ^ 0xF2361A82) & v308 ^ (2 * v508) & 0x18)) ^ v226;
  v521 = STACK[0x1370] & 0x40C90DA0 ^ 0x40010480 ^ (v232 ^ 0xCDE499C7) & (LODWORD(STACK[0x1370]) ^ 0x8D2D9467);
  v522 = (2 * (((2 * v521) | 0x241C53BE) - v521) - 605836222) ^ 0xA40C52FE;
  v523 = (v522 - 1926392729 - (v367 & (2 * v522))) ^ LODWORD(STACK[0x1370]);
  v524 = (v520 & v464 ^ 0xDFB7EAFF) - 512174158 + ((2 * (v520 & v464)) & 0x3D0E509C);
  LODWORD(STACK[0xBDC]) = v496 & 5;
  LODWORD(v226) = v464;
  LOBYTE(v426) = STACK[0x16B8];
  v525 = ((v519 & v401) << (v496 & 0x1A ^ 2) << (v496 & 5)) + ((v519 & v464) >> v426);
  LODWORD(STACK[0x1578]) = v525 - 1926392729 - ((2 * v525) & 0x1A5B28CE);
  v526 = v520 & v371;
  LOBYTE(v520) = (v496 ^ 0x45) & 0x1E ^ 6;
  v527 = ((v524 ^ 0xC130C2B1) >> LODWORD(STACK[0x1890])) + (v526 << v520 << (v496 & 1));
  LODWORD(STACK[0x1538]) = v527 - 1926392729 - ((2 * v527) & 0x1A5B28CE);
  v528 = STACK[0x1410];
  v529 = (v232 ^ 0x65E1F674) & (LODWORD(STACK[0x1410]) ^ LODWORD(STACK[0x1144]));
  v530 = 2
       * (((STACK[0x1898] & (LODWORD(STACK[0x1650]) ^ 0x256BFCD1) ^ v516 & 0xA84668B6) & 0x5025772F ^ 2)
        + ((STACK[0x1898] & (LODWORD(STACK[0x1650]) ^ 0x256BFCD1) ^ v516 & 0xA84668B6) & 0x2FDA88D0 ^ 0x2F9A8841))
       - 2;
  LODWORD(v308) = v518;
  v531 = ((v530 ^ 0xF3580C0) - 1926392729 - 2 * ((v530 ^ 0xF3580C0) & v518 ^ v530 & 0x10)) ^ LODWORD(STACK[0x1650]);
  v532 = v428 & 9 ^ 1;
  v533 = v428 & 0x16 ^ 6;
  LODWORD(STACK[0x1338]) = v532;
  LODWORD(STACK[0x1370]) = v533;
  v534 = ((v401 & v523) << v532 << v533) | ((v523 & v387) >> LODWORD(STACK[0x1780]) >> LODWORD(STACK[0x1790]));
  LODWORD(STACK[0x1530]) = v534 - 1926392729 - ((2 * v534) & 0x1A5B28CE);
  v535 = STACK[0x1670];
  v536 = v515 & (LODWORD(STACK[0x1670]) ^ 0x5DC646B1) ^ v516 & 0x50EBD2D6;
  v537 = STACK[0x17C0];
  v538 = (((2 * (v529 ^ v528 & 0x68CC6213)) ^ 0x10180006)
        - 1926392729
        - 2 * (((2 * (v529 ^ v528 & 0x68CC6213)) ^ 0x10180006) & STACK[0x17C0] ^ (2 * (v529 ^ v528 & 0x68CC6213)) & 8)) ^ v528;
  LODWORD(STACK[0x17A0]) = ((((v531 & v371 & 0x27E58D33 ^ 0x26E10C32)
                            + (v531 & v371 ^ 0x11048301)
                            - ((v531 & v371 ^ 0x11048301) & 0x27E58D33)) ^ 0x36E10E32) << (v496 & 1) << v520) ^ ((v531 & v226) >> LODWORD(STACK[0x10A0]) >> LODWORD(STACK[0x1098]));
  v539 = v515 & (LODWORD(STACK[0x1808]) ^ 0x4899FB9B);
  v540 = v515;
  v541 = v516;
  v542 = (((2 * (v539 ^ v516 & 0x45B46FFC)) ^ 0x84096C0)
        - 1926392729
        - (v367 & (2 * ((2 * (v539 ^ v516 & 0x45B46FFC)) ^ 0x84096C0)))) ^ LODWORD(STACK[0x1808]);
  v543 = STACK[0x1390];
  v544 = v543 & 0x4A362F89 ^ (v232 ^ 0xC71BBBEE) & (v543 ^ 0x8D2D9467) ^ 0x5C07018;
  LODWORD(STACK[0x160C]) = ((((v542 & v387 & 0xBC19310C ^ 0xBC11010D) + (v542 & v387 & 0x43E6CEF3) - 1) ^ 0xBC11010C) >> LODWORD(STACK[0x14A8]) >> LODWORD(STACK[0x1498])) ^ 0x8D2D9467 ^ (((((2 * (v542 & v371 ^ 0x908A404)) & 0xBBB88F8A) - (v542 & v371 ^ 0x908A404) - 1574717382) ^ 0xAB2B1C3E) << LODWORD(STACK[0xDA0]) << LODWORD(STACK[0xD9C]));
  v545 = (((((2 * (v538 & v387 ^ 0xB9080B38)) | 0x378044E8) - (v538 & v387 ^ 0xB9080B38) + 1681907084) ^ 0x22C8294C) >> LODWORD(STACK[0xD54]) >> LODWORD(STACK[0xD50]))
       + ((v401 & v538) << LODWORD(STACK[0x15C0]) << LODWORD(STACK[0x1520]));
  LODWORD(STACK[0x144C]) = v545 - 1926392729 - ((2 * v545) & 0x1A5B28CE);
  v546 = (2 * (v544 - ((2 * v544) & 0xFE8270E)) - 1880611058) ^ 0x9420CF3C;
  v547 = (v546 - 1926392729 - (v367 & (2 * v546))) ^ v543;
  LODWORD(v132) = STACK[0x159C];
  v548 = (((2 * v536) ^ 0x418484) - 1926392729 - 2 * (((2 * v536) ^ 0x418484) & STACK[0x159C] ^ (2 * v536) & 0x18)) ^ v535;
  v549 = v401;
  v550 = (v496 ^ 0x6D69B145) & 0x17 ^ 7;
  LODWORD(STACK[0xBD0]) = v550;
  v551 = ((((v547 & v226 ^ 0xA03B1100)
          - ((2 * (v547 & v226 ^ 0xA03B1100)) & 0x4AFE8F06)
          + 629098371) ^ 0x85445683) >> v426)
       + ((v401 & v547) << (v496 & 8) << v550);
  LODWORD(STACK[0x1820]) = v551 - 1926392729 - ((2 * v551) & 0x1A5B28CE);
  v552 = STACK[0x11C8];
  v553 = STACK[0x18A8] & (LODWORD(STACK[0x11C8]) ^ 0x392A33A7);
  LODWORD(STACK[0x15F8]) = ((v548 & v226) >> LODWORD(STACK[0x1730]) >> LODWORD(STACK[0x16F0])) ^ 0x8D2D9467 ^ (((((2 * (v548 & v401 ^ 0x10140143)) | 0xDDCB7D86) - (v548 & v401 ^ 0x10140143) + 286933309) ^ 0xFEF1BF80) << LODWORD(STACK[0x13A0]) << LODWORD(STACK[0x13B4]));
  v554 = STACK[0x1548] & 0x4875258F ^ 0xEDC52582 ^ (v232 ^ 0xC558B1E8) & (LODWORD(STACK[0x1548]) ^ 0x8D2D9467);
  v555 = 2
       * (((v553 ^ v232 & 0xB407A7C0) & 0x6AEB71E2 ^ 0x4AE951E2)
        + (v553 ^ v232 & 0xB407A7C0 ^ 0xA006A400)
        - ((v553 ^ v232 & 0xB407A7C0 ^ 0xA006A400) & 0x6AEB71E2));
  v556 = ((v555 ^ 0x9DD0A344) - 1926392729 - 2 * ((v555 ^ 0x9DD0A344) & v537 ^ v555 & 8)) ^ v552;
  v557 = 1311594484 - (v556 & v371 ^ 0x8808039 | 0x4E2D57F4) + (v556 & v371 ^ 0x8808039 | 0xB1D2A80B);
  v558 = (2 * ((v554 | 0x2D0C2CCA) - (v554 | 0x52F3D335)) - 1511545238) ^ 0x91D81A9E;
  v559 = (v558 - 1926392729 - (v367 & (2 * v558))) ^ LODWORD(STACK[0x1548]);
  v560 = STACK[0x1388];
  v561 = (v556 & v387) >> LODWORD(STACK[0x1490]) >> LODWORD(STACK[0x1480]);
  v562 = (v496 ^ 0x6D69B145) & 0x1B ^ 3;
  LODWORD(STACK[0xCD8]) = v496 & 4;
  LODWORD(STACK[0xCDC]) = v562;
  v563 = ((v557 ^ 0xB9522832) << (v496 & 4) << v562) + v561;
  LODWORD(STACK[0x1808]) = v563 - 1926392729 - ((2 * v563) & 0x1A5B28CE);
  v564 = 2 * (v540 & (v560 ^ 0x16659E97) ^ v541 & 0x1B480AF0);
  v565 = ((v564 ^ 0x140014C0) - 1926392729 - 2 * ((v564 ^ 0x140014C0) & v308 ^ v564 & 0x10)) ^ v560;
  v566 = (v559 & v226 ^ 0x10008505) - ((2 * (v559 & v226 ^ 0x10008505)) & 0x50947E4C);
  v567 = (v565 & v387 & 0x66F9D366 ^ 0x44815062)
       + (v565 & v387 ^ 0x32788385)
       - ((v565 & v387 ^ 0x32788385) & 0x66F9D366);
  v568 = ((2 * (v401 & v559 ^ 0x41800941)) & 0x8A330FC8) - (v401 & v559 ^ 0x41800941);
  v569 = STACK[0x15D0];
  v570 = (v232 ^ 0x21387B72) & (v569 ^ 0x8D2D9467) ^ v569 & 0xAC15EF15;
  v571 = STACK[0x1600];
  v572 = v571 & 0xF08F7646 ^ 0x608C2206 ^ (v232 ^ 0x7DA2E221) & (v571 ^ 0x8D2D9467);
  v573 = STACK[0x16C0];
  v574 = STACK[0x1898] & (LODWORD(STACK[0x16C0]) ^ 0xDA3C2041);
  v575 = (v496 ^ 0x6D69B145) & 0xB ^ 3;
  LODWORD(STACK[0xCC4]) = v575;
  v576 = (v496 ^ 0x6D69B145) & 0x14 ^ 4;
  v577 = (((v565 & v371 & 0x62459CE1 ^ 0x62409CC1) + (v565 & v371 ^ 0x1070130) - ((v565 & v371 ^ 0x1070130) & 0x62459CE1)) ^ 0x63429DD1) << v575 << v576;
  v578 = STACK[0x10C8] & 0x11 ^ 1;
  LOBYTE(v401) = STACK[0x10C8];
  v579 = STACK[0x10C8] & 0xE ^ 6;
  LODWORD(STACK[0x1708]) = v579;
  LODWORD(STACK[0x1650]) = v578;
  LODWORD(STACK[0x17B0]) = v577 ^ ((v567 ^ 0x548150E3u) >> v579 >> v578) ^ 0x8D2D9467;
  LOBYTE(v579) = STACK[0xD44];
  LOBYTE(v578) = STACK[0xD40];
  v580 = (((v566 - 1471529178) ^ 0xB84ABA23) >> LODWORD(STACK[0x13F8]) >> LODWORD(STACK[0x13E0])) ^ 0x8D2D9467 ^ (((v568 + 988182555) ^ 0x7B66715A) << v579 << v578);
  v581 = 2 * ((v541 & 0x5711B426 ^ 0x44119406 ^ v574) - ((2 * (v541 & 0x5711B426 ^ 0x44119406 ^ v574)) & 0x60433F08))
       - 532463864;
  v582 = ((v581 ^ 0x64611740) - 1926392729 - 2 * ((v581 ^ 0x64611740) & v132 ^ v581 & 0x18)) ^ v573;
  v583 = (2 * ((v570 & 0x4E5C6A11 ^ 0x4E584811) + (v570 ^ 0x20052700) - ((v570 ^ 0x20052700) & 0x4E5C6A11))) ^ 0xC4B99228;
  v584 = (v583 - 1926392729 - (v367 & (2 * v583))) ^ v569;
  v585 = (v584 & v371 ^ 0x84083419) - ((2 * (v584 & v371 ^ 0x84083419)) & 0xD4EFB3B0);
  v586 = ((901375492 - (v582 & v549 ^ 0x8C2E5000 | 0x35B9E604) + (v582 & v549 ^ 0x8C2E5000 | 0xCA4619FB)) ^ 0x466849FB) << (v496 & 0x18);
  v587 = (2 * (((2 * v572) | 0x28D774FC) - v572) + 1462274820) ^ 0x69D5187C;
  v588 = (v587 - 1926392729 - (v367 & (2 * v587))) ^ v571;
  v589 = ((-1005977956
         - (v584 & v226 ^ 0x88B6A0E1 | 0xC409FE9C)
         + (v584 & v226 ^ 0x88B6A0E1 | 0x3BF60163)) ^ 0xB340A182) >> (v401 & 0x1B ^ 3) >> (~(_BYTE)v401 & 4);
  v590 = (v582 & v387) >> LODWORD(STACK[0x1668]) >> LODWORD(STACK[0x1680]);
  LOBYTE(v584) = v496 ^ 2;
  v591 = (v496 ^ 2) & 7;
  LODWORD(STACK[0xFE0]) = v591;
  v592 = (v586 << v591) + v590 - 1926392729 - ((2 * ((v586 << v591) + v590)) & 0x1A5B28CE);
  v593 = ((v588 & v226) >> LODWORD(STACK[0x13C0]) >> LODWORD(STACK[0x15F0])) | ((v588 & v371) << v579 << v578);
  v594 = v593 - 1926392729 - ((2 * v593) & 0x1A5B28CE);
  v595 = STACK[0x17EC] & 0x1C902DAC ^ 0x400290C ^ (v541 ^ 0xB2B0E6CF) & (LODWORD(STACK[0x17EC]) ^ 0x8D2D9467);
  v596 = (2 * ((v595 | 0x77A37C6) - (v595 | 0x7885C839)) - 250900366) ^ 0x1EF435DC;
  v597 = (v596 - 1926392729 - (v367 & (2 * v596))) ^ LODWORD(STACK[0x17EC]);
  v598 = ((1221464606 - (v597 & v387 ^ 0x80440C8 | 0x48CE121E) + (v597 & v387 ^ 0x80440C8 | 0xB731EDE1)) ^ 0xBF35AD29) >> LODWORD(STACK[0xD18]) >> LODWORD(STACK[0xD1C]);
  v599 = v509 & 0x1C ^ 4;
  LODWORD(STACK[0x1390]) = v584 & 3;
  LODWORD(STACK[0x1410]) = v599;
  v600 = v598
       + ((((v597 & v549 ^ 0x44114050) - ((2 * (v597 & v549 ^ 0x44114050)) & 0xD93C957A) + 1822313149) ^ 0x288F0AED) << (v584 & 3) << v599);
  LODWORD(STACK[0x1668]) = v600 - 1926392729 - ((2 * v600) & 0x1A5B28CE);
  v601 = v589 | (((v585 + 1786239448) ^ 0xEE7FEDC1) << LODWORD(STACK[0xD9C]) << LODWORD(STACK[0xDA0]));
  LODWORD(STACK[0x16C8]) = v601 - 1926392729 - ((2 * v601) & 0x1A5B28CE);
  v602 = ((LODWORD(STACK[0x16D8]) ^ LODWORD(STACK[0x1848]))
        - 1926392729
        - ((2 * (LODWORD(STACK[0x16D8]) ^ LODWORD(STACK[0x1848]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1648]);
  v603 = LODWORD(STACK[0x1364]) ^ LODWORD(STACK[0x17BC]) ^ (v602 - 1926392729 - ((2 * v602) & 0x1A5B28CE));
  v604 = v603 - 1926392729 - ((2 * v603) & 0x1A5B28CE);
  v605 = STACK[0x1860];
  v606 = STACK[0x1310];
  v607 = LODWORD(STACK[0x1310]) ^ LODWORD(STACK[0x1860]);
  v608 = v607 ^ LODWORD(STACK[0x12E0]);
  LODWORD(STACK[0x16C0]) = v608;
  v609 = STACK[0x13A8];
  v610 = LODWORD(STACK[0x13A8]) ^ LODWORD(STACK[0x12D8]);
  LODWORD(STACK[0x1748]) = v610;
  v611 = ((v604 ^ v608) - 1926392729 - ((2 * (v604 ^ v608)) & 0x1A5B28CE)) ^ v610;
  v612 = v609 ^ LODWORD(STACK[0x12D0]);
  LODWORD(STACK[0x17CC]) = v612;
  v613 = (v611 - 1926392729 - ((2 * v611) & 0x1A5B28CE)) ^ v612;
  v614 = (v613 - 1926392729 - ((2 * v613) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1590]);
  v615 = (v614 - 1926392729 - ((2 * v614) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1508]);
  v616 = (v615 - 1926392729 - ((2 * v615) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14C4]);
  v617 = (v616 - 1926392729 - ((2 * v616) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17A8]);
  v618 = (v617 - 1926392729 - ((2 * v617) & 0x1A5B28CE)) ^ LODWORD(STACK[0x13E8]);
  v619 = (v618 - 1926392729 - ((2 * v618) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16B0]);
  v620 = (v619 - 1926392729 - ((2 * v619) & 0x1A5B28CE)) ^ LODWORD(STACK[0x12C8]);
  v621 = (v620 - 1926392729 - ((2 * v620) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1558]);
  v622 = LODWORD(STACK[0x15E8]) ^ (v621 - 1926392729 - ((2 * v621) & 0x1A5B28CE));
  v623 = (v622 - 1926392729 - ((2 * v622) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1738]);
  v624 = (v623 - 1926392729 - ((2 * v623) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1528]);
  v625 = (v624 - 1926392729 - ((2 * v624) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1678]);
  v626 = LODWORD(STACK[0x1798]) ^ (v625 - 1926392729 - ((2 * v625) & 0x1A5B28CE));
  v627 = (v626 - 1926392729 - ((2 * v626) & 0x1A5B28CE)) ^ LODWORD(STACK[0x13D8]);
  v628 = (v627 - 1926392729 - ((2 * v627) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17D8]);
  v629 = (v628 - 1926392729 - ((2 * v628) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1700]);
  v630 = (v629 - 1926392729 - ((2 * v629) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1470]);
  v631 = (v630 - 1926392729 - ((2 * v630) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16F8]);
  v632 = (v631 - 1926392729 - ((2 * v631) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1810]);
  v633 = (v632 - 1926392729 - ((2 * v632) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1760]);
  v634 = (v633 - 1926392729 - ((2 * v633) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1638]);
  v635 = (v634 - 1926392729 - ((2 * v634) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15E4]);
  v636 = (v635 - 1926392729 - ((2 * v635) & 0x1A5B28CE)) ^ LODWORD(STACK[0x156C]);
  v637 = (v636 - 1926392729 - ((2 * v636) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14F8]);
  v638 = (v637 - 1926392729 - ((2 * v637) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1418]);
  v639 = (v638 - 1926392729 - ((2 * v638) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1538]);
  v640 = LODWORD(STACK[0x17A0]) ^ 0x8D2D9467 ^ (v639 - 1926392729 - ((2 * v639) & 0x1A5B28CE));
  v641 = (v640 - 1926392729 - ((2 * v640) & 0x1A5B28CE)) ^ LODWORD(STACK[0x160C]);
  LODWORD(v308) = v232;
  v642 = (v641 - 1926392729 - ((2 * v641) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15F8]);
  LODWORD(STACK[0x1680]) = v580;
  v643 = (v642 - 1926392729 - ((2 * v642) & 0x1A5B28CE)) ^ v580;
  LODWORD(STACK[0x1770]) = v594;
  LODWORD(STACK[0x1548]) = v592;
  LODWORD(STACK[0x10A4]) = v592 ^ v594 ^ (v643 - 1926392729 - ((2 * v643) & 0x1A5B28CE));
  v644 = (((2 * (STACK[0x1788] & (LODWORD(STACK[0x1510]) ^ 0x48701F7) ^ v232 & 0x9AA9590)) ^ 0x12512800)
        - 1926392729
        - 2
        * (((2 * (STACK[0x1788] & (LODWORD(STACK[0x1510]) ^ 0x48701F7) ^ v232 & 0x9AA9590)) ^ 0x12512800) & v132 ^ (2 * (STACK[0x1788] & (LODWORD(STACK[0x1510]) ^ 0x48701F7) ^ v232 & 0x9AA9590)) & 0x18)) ^ LODWORD(STACK[0x1510]);
  v645 = ((2 * (v644 & v371 ^ 0x880067A2)) & 0x2B9D7806) - (v644 & v371 ^ 0x880067A2);
  v646 = STACK[0x1434] & 0x378F72D4 ^ 0x3841084 ^ (v541 ^ 0x99AFB9B7) & (LODWORD(STACK[0x1434]) ^ 0x8D2D9467);
  v647 = 2 * (v646 - ((2 * v646) & 0x1679EB20)) - 1770394848;
  v648 = ((v647 ^ 0x9B6BEAA0) - 1926392729 - 2 * ((v647 ^ 0x9B6BEAA0) & STACK[0x1868] ^ v647 & 0x10)) ^ LODWORD(STACK[0x1434]);
  v649 = (v644 & v387) >> LODWORD(STACK[0x1818]) >> LODWORD(STACK[0x1800]);
  LODWORD(STACK[0x1120]) = v509;
  v650 = v509 & 0x19 ^ 1;
  LODWORD(STACK[0x1600]) = v584 & 6;
  LODWORD(STACK[0x17EC]) = v650;
  v651 = (((v645 - 365870084) ^ 0x6231245E) << (v584 & 6) << v650) + v649;
  LODWORD(STACK[0x18A8]) = v651 - 1926392729 - ((2 * v651) & 0x1A5B28CE);
  v652 = (((((2 * (v648 & v549 ^ 0xA9000822)) | 0x64B8F5AA) - (v648 & v549 ^ 0xA9000822) + 1302562091) ^ 0x1B5C72F7) << LODWORD(STACK[0x1858]) << LODWORD(STACK[0x1840])) | (((((2 * (v648 & v226 ^ 0xCC9539)) | 0xC2BC90F8) - (v648 & v226 ^ 0xCC9539) - 1633568892) ^ 0x6192DD45) >> LODWORD(STACK[0x10C4]) >> LODWORD(STACK[0x10C0]));
  v653 = v605 ^ 0x8D2D9467;
  v654 = v652 - 1926392729 - ((2 * v652) & 0x1A5B28CE);
  v655 = v541;
  v656 = (v541 ^ 0x6A633947) & (LODWORD(STACK[0x1718]) ^ 0x8D2D9467) ^ STACK[0x1718] & 0xC443F224;
  v657 = (2 * ((v656 & 0x21870E03 ^ 0x21860C03) + (v656 ^ 0x44012220) - ((v656 ^ 0x44012220) & 0x21870E03))) ^ 0xC30F780E;
  v658 = (v657 - 1926392729 - (v367 & (2 * v657))) ^ LODWORD(STACK[0x1718]);
  v659 = 2 * ((LODWORD(STACK[0x1408]) ^ LODWORD(STACK[0x1144])) & (v308 ^ 0x7C37AC7D) ^ STACK[0x1408] & 0x711A381A);
  LODWORD(v132) = ((v659 ^ 0x2102004) - 1926392729 - 2 * ((v659 ^ 0x2102004) & STACK[0x17C0] ^ v659 & 8)) ^ LODWORD(STACK[0x1408]);
  v660 = (v132 & v371) << LODWORD(STACK[0xCC4]);
  LODWORD(STACK[0xC10]) = v576;
  v661 = (((1684217195
          - (v132 & v226 ^ 0x2521000)
          + ((2 * (v132 & v226 ^ 0x2521000)) & 0x3739C528)) ^ 0x66310D6B) >> LODWORD(STACK[0xCBC]) >> LODWORD(STACK[0xCC0])) ^ (v660 << v576);
  v662 = STACK[0x1644];
  LODWORD(v132) = STACK[0x1828] & (LODWORD(STACK[0x1644]) ^ 0x6D7BA966);
  v663 = STACK[0x14B8];
  v664 = ~STACK[0x14B8] & 7;
  LODWORD(STACK[0xC54]) = v664;
  LODWORD(STACK[0xC50]) = v663 & 0x18;
  v665 = ((((v658 & v387 & 0x5F8DC8A9 ^ 0x4F8488A9) + (v658 & v387 & 0xA0723756 ^ 0x120505) - 1) ^ 0x4F968DAD) >> v664 >> (v663 & 0x18))
       + ((v658 & v549) << LODWORD(STACK[0xD40]) << LODWORD(STACK[0xD44]));
  v666 = v665 - 1926392729 - ((2 * v665) & 0x1A5B28CE);
  v667 = (((2 * (v132 ^ v655 & 0x60563D01)) ^ 0x40001202)
        - 1926392729
        - (v367 & (2 * ((2 * (v132 ^ v655 & 0x60563D01)) ^ 0x40001202)))) ^ v662;
  LODWORD(v132) = (((v654 ^ 0x172749) - 1517385) ^ ((v654 ^ 0xFAE5EEB7) + 85594441) ^ ((v654 ^ 0x77DF5D99) - 2011127193))
                + (((v666 ^ 0x19426409) - 423781385) ^ ((v666 ^ 0x104E31A5) - 273559973) ^ ((v666 ^ 0x8421C1CB)
                                                                                          + 2078162485));
  v668 = (((v667 & v226 ^ 0xED1FD46)
         - ((2 * (v667 & v226 ^ 0xED1FD46)) & 0x925AF6CC)
         + 1227717478) ^ 0x47FC8620) >> LODWORD(STACK[0x1790]) >> LODWORD(STACK[0x1780]);
  v669 = v667 & v549;
  v670 = v654;
  v671 = ((((v669 & 0x56734D74 ^ 0x56634D14) + (v669 ^ 0x140061) - ((v669 ^ 0x140061) & 0x56734D74)) ^ 0x56674D15) << LODWORD(STACK[0xD28]) << LODWORD(STACK[0xD2C])) ^ v668;
  v672 = (((v654 ^ 0x3F17DC0C) - 1058528268) ^ ((v654 ^ 0x3DC65D6) - 64775638) ^ ((v654 ^ 0xB1E62DBD) + 1310315075))
       + (((v666 ^ 0x168DCD00) - 378391808) ^ ((v666 ^ 0xF49E8765) + 190937243) ^ ((v666 ^ 0x6F3EDE02) - 1866391042));
  v673 = v661 ^ 0x1B89C103 ^ (1820373984 - v132 - ((514211570 - 2 * v132) & 0x1A5B28CE));
  v674 = (v661 ^ 0x1B89C103 ^ (1820373984 - v672 - ((514211570 - 2 * v672) & 0x1A5B28CE)))
       - (((v671 ^ 0x38E91C5E) + 1245411271) ^ ((v671 ^ 0xAF420CC5) - 577738914) ^ ((v671 ^ 0x97AB109B) - 445023484))
       - 1424879137;
  LODWORD(v132) = (v674 ^ 0xD1D7C97D) & (2 * (v674 & 0xE1C40C7D)) ^ v674 & 0xE1C40C7D;
  v675 = ((2 * (v674 ^ 0x53D7D90D)) ^ 0x6427AAE0) & (v674 ^ 0x53D7D90D) ^ (2 * (v674 ^ 0x53D7D90D)) & 0xB213D570;
  LODWORD(v132) = (v675 ^ 0x10000460) & (4 * v132) ^ v132;
  v676 = ((4 * (v675 ^ 0x92105510)) ^ 0xC84F55C0) & (v675 ^ 0x92105510) ^ (4 * (v675 ^ 0x92105510)) & 0xB213D570;
  LODWORD(v132) = (v676 ^ 0x80035540) & (16 * v132) ^ v132;
  v677 = ((16 * (v676 ^ 0x32108030)) ^ 0x213D5700) & (v676 ^ 0x32108030) ^ (16 * (v676 ^ 0x32108030)) & 0xB213D570;
  LODWORD(v132) = v132 ^ 0xB213D570 ^ (v677 ^ 0x20115500) & ((_DWORD)v132 << 8);
  v678 = v674 ^ (2
               * (((_DWORD)v132 << 16) & 0x32130000 ^ v132 ^ (((_DWORD)v132 << 16) ^ 0x55700000) & (((v677 ^ 0x92028070) << 8) & 0xB2130000 ^ 0x20020000 ^ (((v677 ^ 0x92028070) << 8) ^ 0x13D50000) & (v677 ^ 0x92028070))));
  v679 = LODWORD(STACK[0x1750]) ^ LODWORD(STACK[0x17E0]) ^ 0x8D2D9467;
  v680 = v653 ^ LODWORD(STACK[0x15DC]) ^ v606;
  LODWORD(v132) = v606 ^ LODWORD(STACK[0x13B8]) ^ v653;
  v681 = v679 ^ LODWORD(STACK[0x1540]);
  v682 = v679 ^ LODWORD(STACK[0x1690]);
  v683 = v678 ^ 0x28EE32FA;
  v684 = v681 ^ v678 ^ 0x28EE32FA;
  LODWORD(STACK[0x1598]) = v684;
  v685 = (v684 ^ LODWORD(STACK[0x1560])) - 1926392729 - ((2 * (v684 ^ LODWORD(STACK[0x1560]))) & 0x1A5B28CE);
  LODWORD(STACK[0x1898]) = v685;
  v686 = -1244802731 * (v671 ^ 0x8471A0AC ^ v685) + ((-1244802731 * (v671 ^ 0x8471A0AC ^ v685)) >> 16);
  v687 = 1889898341 * (v686 + (v666 ^ 0x8D2D9467) - (v686 >> 8));
  v688 = (v687 - HIWORD(v687)) ^ ((v687 - HIWORD(v687)) >> 8);
  v689 = (v688 & 0xF7CD30B1 ^ 0xF7CD30B1) + (v688 & 0xF7CD30B1);
  v690 = (v670 ^ 0x72D26B98) + 1;
  LODWORD(STACK[0x1868]) = v690;
  v691 = v688 + v690;
  v692 = (1014175825 * v689 * v691 - 1926392729 - ((417738914 * v689 * v691) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1340]);
  LODWORD(STACK[0x159C]) = v609 ^ LODWORD(STACK[0x12F0]);
  v693 = v673 - v671 + 436449987;
  v694 = v609 ^ LODWORD(STACK[0x14D8]);
  v695 = v609 ^ 0x95C34CB ^ v693 ^ v691 ^ (v692 - 1926392729 - ((2 * v692) & 0x1A5B28CE));
  LODWORD(STACK[0x1720]) = v607 ^ LODWORD(STACK[0x130C]);
  LODWORD(STACK[0x1588]) = v607 ^ LODWORD(STACK[0x1300]);
  LODWORD(STACK[0x1778]) = v607 ^ LODWORD(STACK[0x12F8]);
  v607 ^= 0x95C34CBu;
  v696 = v607 ^ LODWORD(STACK[0x1710]);
  v697 = v607 ^ LODWORD(STACK[0x1870]);
  LODWORD(STACK[0x1540]) = v694 ^ v693;
  LODWORD(STACK[0x13A8]) = v696 ^ v693;
  LODWORD(STACK[0x161C]) = v697 ^ v693;
  LODWORD(STACK[0x17C0]) = v666;
  LODWORD(STACK[0x1570]) = v695;
  LODWORD(STACK[0x1138]) = LODWORD(STACK[0x1610]) ^ 0x230D5F04;
  LODWORD(STACK[0x116C]) = LODWORD(STACK[0x12EC]) ^ 0xC2B66C33;
  LODWORD(STACK[0x1064]) = LODWORD(STACK[0x1768]) ^ 0x3849FDA4;
  LODWORD(STACK[0x1670]) = v680 ^ v683;
  LODWORD(STACK[0x1440]) = v132 ^ v683;
  LODWORD(STACK[0x1518]) = v683;
  LODWORD(STACK[0x1644]) = v682 ^ v683;
  v698 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * SLODWORD(STACK[0x1850]));
  STACK[0x16B8] = LODWORD(STACK[0x1748]);
  LODWORD(STACK[0x1750]) = LODWORD(STACK[0x1638]) ^ 0x8D2D9467;
  LODWORD(STACK[0x1710]) = v670;
  LODWORD(STACK[0x1780]) = v661 ^ 0x8D2D9467;
  LODWORD(STACK[0x1748]) = v661 ^ 0x8D2D9467;
  LODWORD(STACK[0x1260]) = STACK[0x1738];
  LODWORD(STACK[0x1434]) = v671 ^ 0x8D2D9467;
  return v698();
}

uint64_t sub_1002BDF60@<X0>(unsigned int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W7>, unsigned int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unint64_t v256;
  int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  unsigned int v269;
  int v270;
  int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  int v286;
  char v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  int v299;
  unsigned int v300;
  unint64_t v301;
  unint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  char v318;
  int v319;
  int v320;
  char v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  int v371;
  int v372;
  unint64_t v373;
  int v374;
  uint64_t (*v375)(void);

  v19 = (LODWORD(STACK[0x1500]) + 1458884421) & 0xA90B3E35;
  LODWORD(STACK[0x1768]) = v19;
  v20 = (((v10 ^ 0x74B23C90) - 1957837968) ^ ((v10 ^ 0x41A11500) - 1101075712) ^ ((v10 ^ (v19 - 1203855422)) + 1203847689))
      + (((v11 ^ 0x23BA1C1D) - 599399453) ^ ((v11 ^ 0x8168FEB8) + 2123825480) ^ ((v11 ^ 0x2FFF76C2) - 805271234))
      - 2006362879;
  v21 = (v20 ^ 0x55E99BE9) & (2 * (v20 & 0x91F1D3CD)) ^ v20 & 0x91F1D3CD;
  v22 = ((2 * (v20 ^ 0x75691C73)) ^ 0xC9319F7C) & (v20 ^ 0x75691C73) ^ (2 * (v20 ^ 0x75691C73)) & 0xE498CFBE;
  v23 = (v22 ^ 0xC0008F3C) & (4 * v21) ^ v21;
  v24 = ((4 * (v22 ^ 0x24884082)) ^ 0x92633EF8) & (v22 ^ 0x24884082) ^ (4 * (v22 ^ 0x24884082)) & 0xE498CFBC;
  v25 = (v24 ^ 0x80000EB6) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0x6498C106)) ^ 0x498CFBE0) & (v24 ^ 0x6498C106) ^ (16 * (v24 ^ 0x6498C106)) & 0xE498CFB0;
  v27 = v25 ^ 0xE498CFBE ^ (v26 ^ 0x4088CB00) & (v25 << 8);
  LODWORD(STACK[0x1870]) = v20 ^ (2
                                * ((v27 << 16) & 0x64980000 ^ v27 ^ ((v27 << 16) ^ 0x4FBE0000) & (((v26 ^ 0xA410041E) << 8) & 0x64980000 ^ 0x64100000 ^ (((v26 ^ 0xA410041E) << 8) ^ 0x18CF0000) & (v26 ^ 0xA410041E))));
  v28 = (((a6 ^ 0x7C1D3678) - 2082289272) ^ ((a6 ^ 0xC5DEA4EE) + 975264530) ^ ((a6 ^ 0x34EE06F1) - 888014577))
      - (((v13 ^ 0xB4C076C6) + 1262455098) ^ ((v13 ^ 0x352CC590) - 892126608) ^ ((v13 ^ 0xCC12731) - 213985073))
      + 2021040836;
  v29 = (v28 ^ 0xC78C5C3E) & (2 * (v28 & 0x87895D3C)) ^ v28 & 0x87895D3C;
  v30 = ((2 * (v28 ^ 0xC49CD42E)) ^ 0x862B1224) & (v28 ^ 0xC49CD42E) ^ (2 * (v28 ^ 0xC49CD42E)) & 0x43158912;
  v31 = (v30 ^ 0x2010000) & (4 * v29) ^ v29;
  v32 = ((4 * (v30 ^ 0x41148912)) ^ 0xC562448) & (v30 ^ 0x41148912) ^ (4 * (v30 ^ 0x41148912)) & 0x43158910;
  v33 = v31 ^ 0x43158912 ^ (v32 ^ v16) & (16 * v31);
  v34 = (16 * (v32 ^ 0x43018912)) & 0x43158910 ^ 0x42050812 ^ ((16 * (v32 ^ 0x43018912)) ^ 0x31589120) & (v32 ^ 0x43018912);
  v35 = (v33 << 8) & 0x43158900 ^ v33 ^ ((v33 << 8) ^ 0x15891200) & v34;
  v36 = v28 ^ (2
             * ((v35 << 16) & 0x43150000 ^ v35 ^ ((v35 << 16) ^ 0x9120000) & ((v34 << 8) & 0x43150000 ^ 0x42140000 ^ ((v34 << 8) ^ 0x15890000) & v34)));
  v37 = ((a1 >> 8) ^ 0xFF72D26B)
      + 189327670
      + (((a1 ^ 0xCD381B) - 13449243) ^ ((a1 ^ 0x5F0FB2B4) - 1594864308) ^ ((a1 ^ 0xD2EF1EC8) + 756080952));
  v38 = (v37 ^ 0xF5E00BA9) & (2 * (v37 & 0x81E4AB32)) ^ v37 & 0x81E4AB32;
  v39 = ((2 * (v37 ^ 0xF4610BC9)) ^ 0xEB0B41F6) & (v37 ^ 0xF4610BC9) ^ (2 * (v37 ^ 0xF4610BC9)) & 0x7585A0FA;
  v40 = (v39 ^ 0x110100D0) & (4 * v38) ^ v38;
  v41 = ((4 * (v39 ^ 0x1484A009)) ^ 0xD61683EC) & (v39 ^ 0x1484A009) ^ (4 * (v39 ^ 0x1484A009)) & 0x7585A0F8;
  v42 = (v41 ^ 0x540480F0) & (16 * v40) ^ v40;
  v43 = ((16 * (v41 ^ 0x21812013)) ^ 0x585A0FB0) & (v41 ^ 0x21812013) ^ (16 * (v41 ^ 0x21812013)) & 0x7585A0F0;
  v44 = v42 ^ 0x7585A0FB ^ (v43 ^ 0x5000004B) & (v42 << 8);
  v45 = v37 ^ (2
             * ((v44 << 16) & 0x75850000 ^ v44 ^ ((v44 << 16) ^ 0x20FB0000) & (((v43 ^ 0x2585A04B) << 8) & 0x75850000 ^ 0x70050000 ^ (((v43 ^ 0x2585A04B) << 8) ^ 0x5A00000) & (v43 ^ 0x2585A04B))));
  v46 = ((((v7 ^ 0x271C4670) - 656164464) ^ ((v7 ^ 0x8C6796A4) + 1939368284) ^ ((v7 ^ 0x265644B3) - 643187891))
       + (((v45 ^ 0x451780FC) + 472383905) ^ ((v45 ^ 0x36E713F9) + 1876464294) ^ ((v45 ^ 0x581D79C1) + 19069086)))
      * v8
      - 1098372282;
  v47 = (((v46 - HIWORD(v46)) ^ ((v46 - HIWORD(v46)) >> 8)) + LODWORD(STACK[0x1868])) * v17;
  v48 = (v47 ^ HIWORD(v47)) + v12 + ((v47 ^ HIWORD(v47)) >> 8);
  v49 = STACK[0x14F8];
  v50 = (v49 & 0x421804 ^ 0x6E588249) + (v49 & v9 ^ 0x4011) - 2;
  v51 = STACK[0x15E8] & 0x2CC08869;
  v52 = ((2 * (v51 ^ 0x2C6C9000)) & 0x40181040) - (v51 ^ 0x2C6C9000);
  v53 = (((2 * (v51 ^ 0x841)) & 0x51011012) - (v51 ^ 0x841) - 1806801546) ^ 0x984EE5F6;
  v54 = ((v50 & 0x81404104 ^ 0xA42045C1) + (v50 & 0x21838 ^ 0x480C1019) - 2) ^ 0x6D6C05C4 | (1292586950
                                                                                           - (v49 & 0x81425914 ^ 0x81424004 | 0x4D0B4FC6)
                                                                                           + (v49 & 0x81425914 ^ 0x81424004 | 0xB2F4B039)) ^ 0x33F4B92D | (((((2 * v53) & 0xB2862272) - v53 + 648342214) ^ 0xA646A0F) + ((v52 - 1662847651) ^ 0xBC8EE53C));
  v55 = -118806571 * v48;
  v56 = -118806571 * v48 * v54 - 1926392729 - ((2 * -118806571 * v48 * v54) & 0x1A5B28CE);
  v57 = (((v14 ^ 0x99944054) + 1718337452) ^ ((v14 ^ 0x4EC619A5) - 1321605541) ^ ((v14 ^ 0x5A7FCD96) - 1518325142))
      - (((v56 ^ 0x9EF3DD30) + 1628185296) ^ ((v56 ^ 0x79E0DB31) - 2044779313) ^ ((v56 ^ 0x6A3E9266) - 1782485606))
      + v48;
  LODWORD(STACK[0x1658]) = v57 - 1926392729 - ((2 * v57) & 0x1A5B28CE);
  v58 = v55 + HIWORD(v55) - ((v55 + HIWORD(v55)) >> 8);
  v59 = v58 - 1926392729 - ((2 * v58) & 0x1A5B28CE);
  LODWORD(STACK[0x1788]) = v59;
  v60 = a7 + HIWORD(a7) - ((a7 + HIWORD(a7)) >> 8);
  v61 = ((((v60 - 1926392729 - ((2 * v60) & 0x1A5B28CE)) ^ 0xB5055E37) + 1257939401) ^ (((v60
                                                                                        - 1926392729
                                                                                        - ((2 * v60) & 0x1A5B28CE)) ^ 0x1AE0260D)
                                                                                      - 450897421) ^ (((v60 - 1926392729 - ((2 * v60) & 0x1A5B28CE)) ^ 0x22C8EC5D) - 583593053))
      + (((v7 ^ 0x2FD14102) - 802242818) ^ ((v7 ^ 0xB7E18A98) + 1209955688) ^ ((v7 ^ 0x151D5FFD) - 354246653))
      + 1000417255;
  v62 = (v61 ^ 0xDEB03EE6) & (2 * (v61 & 0xDEBA00E7)) ^ v61 & 0xDEBA00E7;
  v63 = ((2 * (v61 ^ 0xCFE43EE0)) ^ 0x22BC7C0E) & (v61 ^ 0xCFE43EE0) ^ (2 * (v61 ^ 0xCFE43EE0)) & 0x115E3E06;
  v64 = (v63 ^ 0x1A0405) & (4 * v62) ^ v62;
  v65 = ((4 * (v63 ^ 0x11420201)) ^ 0x4578F81C) & (v63 ^ 0x11420201) ^ (4 * (v63 ^ 0x11420201)) & 0x115E3E04;
  v66 = (v65 ^ 0x1583803) & (16 * v64) ^ v64;
  v67 = ((16 * (v65 ^ 0x10060603)) ^ 0x15E3E070) & (v65 ^ 0x10060603) ^ (16 * (v65 ^ 0x10060603)) & 0x115E3E00;
  v68 = v66 ^ 0x115E3E07 ^ (v67 ^ 0x11422007) & (v66 << 8);
  v69 = v61 ^ (2
             * ((v68 << 16) & 0x115E0000 ^ v68 ^ ((v68 << 16) ^ 0x3E070000) & (((v67 ^ 0x1C1E07) << 8) & 0x115E0000 ^ a2 ^ (((v67 ^ 0x1C1E07) << 8) ^ 0x5E3E0000) & (v67 ^ 0x1C1E07))));
  v70 = (((v69 ^ 0xDE74C37D) + 1890374669) ^ ((v69 ^ 0xC0882410) + 1850749794) ^ ((v69 ^ 0xC2F69B84) + 1814990070)) * v8
      + 149140540;
  v71 = (v70 ^ 0x86464167) & (2 * (v70 & 0xD6606167)) ^ v70 & 0xD6606167;
  v72 = ((2 * (v70 ^ 0x26C6C3AB)) ^ 0xE14D4598) & (v70 ^ 0x26C6C3AB) ^ (2 * (v70 ^ 0x26C6C3AB)) & 0xF0A6A2CC;
  v73 = (v72 ^ 0xE0000088) & (4 * v71) ^ v71;
  v74 = ((4 * (v72 ^ 0x10A2A244)) ^ 0xC29A8B30) & (v72 ^ 0x10A2A244) ^ (4 * (v72 ^ 0x10A2A244)) & 0xF0A6A2CC;
  v75 = (v74 ^ 0xC0828200) & (16 * v73) ^ v73;
  v76 = ((16 * (v74 ^ 0x302420CC)) ^ 0xA6A2CC0) & (v74 ^ 0x302420CC) ^ (16 * (v74 ^ 0x302420CC)) & 0xF0A6A2C0;
  v77 = v75 ^ 0xF0A6A2CC ^ (v76 ^ 0x22200C) & (v75 << 8);
  v78 = v70 ^ (2
             * ((v77 << 16) & 0x70A60000 ^ v77 ^ ((v77 << 16) ^ 0x22CC0000) & (((v76 ^ 0xF084820C) << 8) & 0x70A60000 ^ 0x50040000 ^ (((v76 ^ 0xF084820C) << 8) ^ 0x26A20000) & (v76 ^ 0xF084820C))));
  v79 = (HIWORD(v78) ^ 0xFFFF89DA)
      - 1854539813
      + (((v78 ^ 0xDC5EE4FA) - 659969122) ^ ((v78 ^ 0xC8FC815A) - 871641538) ^ ((v78 ^ 0x6287415F) + 1718619705));
  v80 = (v79 ^ 0xFB27D8EC) & (2 * (v79 & 0xFBB79C8D)) ^ v79 & 0xFBB79C8D;
  v81 = ((2 * (v79 ^ 0xBE67D0FC)) ^ 0x8BA098E2) & (v79 ^ 0xBE67D0FC) ^ (2 * (v79 ^ 0xBE67D0FC)) & 0x45D04C70;
  v82 = (v81 ^ 0x1800061) & (4 * v80) ^ v80;
  v83 = ((4 * (v81 ^ 0x44504411)) ^ 0x174131C4) & (v81 ^ 0x44504411) ^ (4 * (v81 ^ 0x44504411)) & 0x45D04C70;
  v84 = (v83 ^ 0x5400041) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0x40904C31)) ^ 0x5D04C710) & (v83 ^ 0x40904C31) ^ (16 * (v83 ^ 0x40904C31)) & 0x45D04C70;
  v86 = v84 ^ 0x45D04C71 ^ (v85 ^ 0x45004461) & (v84 << 8);
  v87 = v79 ^ (2
             * ((v86 << 16) & 0x45D00000 ^ v86 ^ ((v86 << 16) ^ 0x4C710000) & (((v85 ^ 0xD00861) << 8) & 0x45D00000 ^ 0x5900000 ^ (((v85 ^ 0xD00861) << 8) ^ 0x504C0000) & (v85 ^ 0xD00861))));
  v88 = ((((v87 ^ (v87 >> 8) ^ 0xDF95C4) - 1975366344) ^ ((v87 ^ (v87 >> 8) ^ 0x49C53F69) - 1017583717) ^ ((v87 ^ (v87 >> 8) ^ 0xB15519C6) + 1003012406))
       - (((v18 ^ 0x8FAEF0D) - 150662925) ^ ((v18 ^ 0x3E1EBB49) - 1042201417) ^ ((v18 ^ 0xBBC9C023) + 1144405981)))
      * v17;
  v89 = -118806571 * ((v88 ^ HIWORD(v88)) + v12 + ((v88 ^ HIWORD(v88)) >> 8)) - 359943023;
  v90 = (v89 ^ 0x95656A4F) & (2 * (v89 & 0x15744B6F)) ^ v89 & 0x15744B6F;
  v91 = ((2 * (v89 ^ 0xBF8DEA8F)) ^ 0x55F343C0) & (v89 ^ 0xBF8DEA8F) ^ (2 * (v89 ^ 0xBF8DEA8F)) & 0xAAF9A1E0;
  v92 = v90 ^ 0xAAF9A1E0 ^ (v91 ^ 0xF981C0) & (4 * v90);
  v93 = ((4 * (v91 ^ 0xAA08A020)) ^ 0xABE68780) & (v91 ^ 0xAA08A020) ^ (4 * (v91 ^ 0xAA08A020)) & 0xAAF9A1E0;
  v94 = v93 & 0xB1065A9C ^ v92 ^ (v93 ^ 0xAAE08180) & ((16 * v92) ^ 0x1E9C449C);
  v95 = ((16 * v93) ^ 0x1F0E429C) & (v93 ^ 0xAAE08180) ^ v93 & 0xB1065A9C;
  v96 = v95 & 0xB1065A9C ^ v94 ^ ((v94 << 8) ^ 0x48A73A9C) & (v95 ^ 0xA00000E0);
  v97 = ((v95 << 8) ^ 0xB106DA9C) & (v95 ^ 0xA00000E0) ^ v95 & 0xB1065A9C;
  v98 = v89 ^ (2
             * (v96 ^ v97 & 0x31065A9C ^ ((v96 << 16) ^ 0x10E65A9E) & (v97 ^ 0xAF90000) ^ ((v96 << 16) ^ 0x10E65A9E) & 0x2AF90080));
  v99 = (HIWORD(v98) ^ 0x87) + (v98 ^ 0x8709AF);
  v100 = ((v99 & a4 ^ a4) + (v99 & a4)) & (v15 ^ 0x8D0D9067) ^ 0x50C02000;
  v101 = (-833808856 - (v15 & a4 ^ 0xA005D015 | 0xCE4D1628) + (v15 & a4 ^ 0xA005D015 | 0x31B2E9D7)) ^ 0x35B2E977;
  v102 = v15 ^ LODWORD(STACK[0x1898]);
  v103 = (((((2 * v100) | 0xD282708A) - v100 + 381601723) ^ 0xB9811845)
        + ((v101 - ((2 * v101) & 0xECEA20E8) - 160100236) ^ 0x62B081D1))
       * (v102 ^ a5);
  LODWORD(STACK[0x15D0]) = (LODWORD(STACK[0x16F8]) ^ 0x8D2D9467)
                         - 1926392729
                         - 2 * ((LODWORD(STACK[0x16F8]) ^ 0x8D2D9467) & 0xD2D947F ^ STACK[0x16F8] & 0x18);
  v104 = v99 - (v99 >> 8) + 503498358;
  v105 = (v104 ^ 0xFF6BD708) & (2 * (v104 & 0xFF83D78A)) ^ v104 & 0xFF83D78A;
  v106 = ((2 * (v104 ^ 0xD4685B18)) ^ 0x57D71924) & (v104 ^ 0xD4685B18) ^ (2 * (v104 ^ 0xD4685B18)) & 0x2BEB8C92;
  v107 = (v106 ^ 0x2030800) & (4 * v105) ^ v105;
  v108 = ((4 * (v106 ^ 0x28288492)) ^ 0xAFAE3248) & (v106 ^ 0x28288492) ^ (4 * (v106 ^ 0x28288492)) & 0x2BEB8C90;
  v109 = (v108 ^ 0x2BAA0000) & (16 * v107) ^ v107;
  v110 = ((16 * (v108 ^ 0x418C92)) ^ 0xBEB8C920) & (v108 ^ 0x418C92) ^ (16 * (v108 ^ 0x418C92)) & 0x2BEB8C90;
  v111 = v109 ^ 0x2BEB8C92 ^ (v110 ^ 0x2AA88800) & (v109 << 8);
  v112 = v104 ^ (2
               * ((v111 << 16) & 0x2BEB0000 ^ v111 ^ ((v111 << 16) ^ 0xC920000) & (((v110 ^ 0x1430492) << 8) & 0x2BEB0000 ^ 0x630000 ^ (((v110 ^ 0x1430492) << 8) ^ 0x6B8C0000) & (v110 ^ 0x1430492))));
  v113 = (((a3 ^ 0x79D5201C) - 2044010524) ^ ((a3 ^ 0x1567365B) - 359085659) ^ ((a3 ^ 0xE19F8220) + 509640160))
       - 698959634;
  v114 = (v113 ^ 0x36C6937C) & (2 * (v113 & 0xB6D6DB79)) ^ v113 & 0xB6D6DB79;
  v115 = ((2 * (v113 ^ 0x3762854E)) ^ 0x368BC6E) & (v113 ^ 0x3762854E) ^ (2 * (v113 ^ 0x3762854E)) & 0x81B45E36;
  v116 = (v115 ^ 0x1201C35) & (4 * v114) ^ v114;
  v117 = ((4 * (v115 ^ 0x80944211)) ^ 0x6D178DC) & (v115 ^ 0x80944211) ^ (4 * (v115 ^ 0x80944211)) & 0x81B45E34;
  v118 = (v117 ^ 0x905810) & (16 * v116) ^ v116;
  v119 = ((16 * (v117 ^ 0x81240623)) ^ 0x1B45E370) & (v117 ^ 0x81240623) ^ (16 * (v117 ^ 0x81240623)) & 0x81B45E30;
  v120 = v118 ^ 0x81B45E37 ^ (v119 ^ 0x1044200) & (v118 << 8);
  v121 = v113 ^ (2
               * ((v120 << 16) & 0x1B40000 ^ v120 ^ ((v120 << 16) ^ 0x5E370000) & (((v119 ^ 0x80B01C07) << 8) & 0x1B40000 ^ 0x1A00000 ^ (((v119 ^ 0x80B01C07) << 8) ^ 0x345E0000) & (v119 ^ 0x80B01C07))));
  v122 = (((v112 ^ 0x59C07FB) - 836853042) ^ ((v112 ^ 0xC0CB36DD) + 189371372) ^ ((v112 ^ 0x7C07FF88) - 1215997249))
       - 1767644451;
  v123 = (v122 ^ 0xD9334BE9) & (2 * (v122 & 0xD903138A)) ^ v122 & 0xD903138A;
  v124 = ((2 * (v122 ^ 0x7B3749FD)) ^ 0x4468B4EE) & (v122 ^ 0x7B3749FD) ^ (2 * (v122 ^ 0x7B3749FD)) & 0xA2345A76;
  v125 = (v124 ^ 0x2001061) & (4 * v123) ^ v123;
  v126 = ((4 * (v124 ^ 0xA2144A11)) ^ 0x88D169DC) & (v124 ^ 0xA2144A11) ^ (4 * (v124 ^ 0xA2144A11)) & 0xA2345A74;
  v127 = (v126 ^ 0x80104843) & (16 * v125) ^ v125;
  v128 = ((16 * (v126 ^ 0x22241223)) ^ 0x2345A770) & (v126 ^ 0x22241223) ^ (16 * (v126 ^ 0x22241223)) & 0xA2345A70;
  v129 = v127 ^ 0xA2345A77 ^ (v128 ^ 0x22040207) & (v127 << 8);
  v130 = v12;
  v131 = v122 ^ (2
               * ((v129 << 16) & 0x22340000 ^ v129 ^ ((v129 << 16) ^ 0x5A770000) & (((v128 ^ 0x80305807) << 8) & 0x22340000 ^ 0x2240000 ^ (((v128 ^ 0x80305807) << 8) ^ 0x345A0000) & (v128 ^ 0x80305807))));
  LODWORD(STACK[0x14D8]) = v131;
  LODWORD(STACK[0x1898]) = v121 ^ 0x38FBF370;
  v132 = (LODWORD(STACK[0x1570]) ^ v121 ^ 0x38FBF370 ^ 0xFE328D93)
       - 1926392729
       - 2
       * ((LODWORD(STACK[0x1570]) ^ v121 ^ 0x38FBF370 ^ 0xFE328D93) & STACK[0x1894] ^ (LODWORD(STACK[0x1570]) ^ v121 ^ 0x38FBF370) & 8);
  v133 = (v132 ^ v15 ^ 0xFE328D93) * a4 + (((v132 ^ v15 ^ 0xFE328D93) * a4) >> 16);
  v134 = v133 - 1926392729 - ((2 * v133) & 0x1A5B28CE);
  v135 = ((v134 >> 8) ^ 0xFF72D26B)
       - 785917084
       + (((v134 ^ 0xC27F3855) + 1031849899) ^ ((v134 ^ 0xBB17CAE9) + 1156068631) ^ ((v134 ^ 0xF44566DB) + 196778277));
  v136 = (v135 ^ 0x3BC5B116) & (2 * (v135 & 0xBC05B904)) ^ v135 & 0xBC05B904;
  v137 = ((2 * (v135 ^ 0x63C5C116)) ^ 0xBF80F024) & (v135 ^ 0x63C5C116) ^ (2 * (v135 ^ 0x63C5C116)) & 0xDFC07812;
  v138 = v136 ^ 0xDFC07812 ^ (v137 ^ 0x90406002) & (4 * v136);
  v139 = (4 * (v137 ^ 0x40400812)) & 0xDFC07810 ^ 0x80C01812 ^ ((4 * (v137 ^ 0x40400812)) ^ 0x7F01E048) & (v137 ^ 0x40400812);
  v140 = (16 * v138) & 0xDFC07810 ^ v138 ^ ((16 * v138) ^ 0xFC078120) & v139;
  v141 = (16 * v139) & 0xDFC07810 ^ 0x3C07812 ^ ((16 * v139) ^ 0xFC078120) & v139;
  v142 = v140 ^ (v140 << 8) & 0xDFC07800 ^ ((v140 << 8) ^ 0xC0781200) & v141;
  v143 = v135 ^ (2
               * (((v142 ^ 0x1C401000) << 16) & 0x5FC00000 ^ v142 ^ 0x1C401000 ^ (((v142 ^ 0x1C401000) << 16) ^ 0x78120000) & ((v141 << 8) & 0x5FC00000 ^ ((v141 << 8) ^ 0x40780000) & v141 ^ 0x1F800000)));
  v144 = (((v7 ^ 0xCDEC793C) + 840140484) ^ ((v7 ^ 0x1CDAD852) - 484104274) ^ ((v7 ^ 0x5C1B3509) - 1545286921))
       + 1303703994
       + (((v143 ^ 0xDADCB0C) - 855971403) ^ ((v143 ^ 0x20C81C22) - 509657445) ^ ((v143 ^ 0x9EE09E0E) + 1605876919));
  v145 = (v144 ^ 0x8E17A6C5) & (2 * (v144 & 0xCCA63714)) ^ v144 & 0xCCA63714;
  v146 = ((2 * (v144 ^ 0x9F5BC4C5)) ^ 0xA7FBE7A2) & (v144 ^ 0x9F5BC4C5) ^ (2 * (v144 ^ 0x9F5BC4C5)) & 0x53FDF3D0;
  v147 = (v146 ^ 0x3B9E080) & (4 * v145) ^ v145;
  v148 = ((4 * (v146 ^ 0x50041051)) ^ 0x4FF7CF44) & (v146 ^ 0x50041051) ^ (4 * (v146 ^ 0x50041051)) & 0x53FDF3D0;
  v149 = (v148 ^ 0x43F5C340) & (16 * v147) ^ v147;
  v150 = ((16 * (v148 ^ 0x10083091)) ^ 0x3FDF3D10) & (v148 ^ 0x10083091) ^ (16 * (v148 ^ 0x10083091)) & 0x53FDF3D0;
  v151 = v149 ^ 0x53FDF3D1 ^ (v150 ^ 0x13DD3100) & (v149 << 8);
  v152 = v144 ^ (2
               * ((v151 << 16) & 0x53FD0000 ^ v151 ^ ((v151 << 16) ^ 0x73D10000) & (((v150 ^ 0x4020C2C1) << 8) & 0x53FD0000 ^ 0x20C0000 ^ (((v150 ^ 0x4020C2C1) << 8) ^ 0x7DF30000) & (v150 ^ 0x4020C2C1))));
  v153 = (((v152 ^ 0x19EAC8D4) - 1480100869) ^ ((v152 ^ 0x9E5E626E) + 544463169) ^ ((v152 ^ 0x4B4B7A0C) - 177815261))
       * v8
       + 318590564;
  v154 = v153 & 0xCC46C73F ^ 0xE80C0C08 ^ (v153 ^ 0xAC46C73F) & (2 * (v153 & 0xCC46C73F));
  v155 = (2 * (v153 ^ 0x244ACB37)) & 0xE80C0C08 ^ 0x28040408 ^ ((2 * (v153 ^ 0x244ACB37)) ^ 0xD0181810) & (v153 ^ 0x244ACB37);
  v156 = (4 * v154) & 0xE80C0C08 ^ v154 ^ ((4 * v154) ^ 0xA0303020) & v155;
  v157 = (4 * v155) & 0xE80C0C08 ^ 0x480C0C08 ^ ((4 * v155) ^ 0xA0303020) & v155;
  v158 = (16 * v156) & 0xE80C0C00 ^ v156 ^ ((16 * v156) ^ 0x80C0C080) & v157;
  v159 = (16 * v157) & 0xE80C0C00 ^ 0x680C0C08 ^ ((16 * v157) ^ 0x80C0C080) & v157;
  v160 = v158 ^ 0x280C0800 ^ (v158 << 8) & 0xE80C0C00 ^ ((v158 << 8) ^ 0xC0C0800) & v159;
  v161 = v153 ^ (2
               * ((v160 << 16) & 0x680C0000 ^ v160 ^ ((v160 << 16) ^ 0xC080000) & ((v159 << 8) & 0xE80C0000 ^ ((v159 << 8) ^ 0xC0C0000) & v159 ^ 0x60000000)));
  v162 = (((LODWORD(STACK[0x1680]) ^ 0xDE4336C4) + 566020412) ^ ((LODWORD(STACK[0x1680]) ^ 0x9871D73D) + 1737369795) ^ ((LODWORD(STACK[0x1680]) ^ 0xCB1F759E) + 887130722))
       + 641639194
       + (((v134 ^ 0x573845BA) - 1463305658) ^ ((v134 ^ 0x86D28BC3) + 2033022013) ^ ((v134 ^ 0x5CC75A1E) - 1556568606));
  v163 = (v162 ^ 0xF05C6121) & (2 * (v162 & 0xF41C85B4)) ^ v162 & 0xF41C85B4;
  v164 = ((2 * (v162 ^ 0x38746949)) ^ 0x98D1D9FA) & (v162 ^ 0x38746949) ^ (2 * (v162 ^ 0x38746949)) & 0xCC68ECFC;
  v165 = (v164 ^ 0x844808F5) & (4 * v163) ^ v163;
  v166 = ((4 * (v164 ^ 0x44282405)) ^ 0x31A3B3F4) & (v164 ^ 0x44282405) ^ (4 * (v164 ^ 0x44282405)) & 0xCC68ECFC;
  v167 = (v166 ^ 0x20A0E9) & (16 * v165) ^ v165;
  v168 = ((16 * (v166 ^ 0xCC484C09)) ^ 0xC68ECFD0) & (v166 ^ 0xCC484C09) ^ (16 * (v166 ^ 0xCC484C09)) & 0xCC68ECF0;
  v169 = v167 ^ 0xCC68ECFD ^ (v168 ^ 0xC408CC00) & (v167 << 8);
  v170 = v162 ^ (2
               * ((v169 << 16) & 0x4C680000 ^ v169 ^ ((v169 << 16) ^ 0x6CFD0000) & (((v168 ^ 0x860202D) << 8) & 0x4C680000 ^ (((v168 ^ 0x860202D) << 8) ^ 0x68EC0000) & (v168 ^ 0x860202D) ^ 0x4000000)));
  v171 = (((v170 ^ 0xE2B94CD8) + 1685486351) ^ ((v170 ^ 0x1AED3970) - 1675489625) ^ ((v170 ^ 0xC4929E6) - 1970921935))
       - (((v134 ^ 0x26CA89B9) - 650807737) ^ ((v134 ^ 0x9AB1F31C) + 1699613924) ^ ((v134 ^ 0x3156EEC2) - 827780802))
       + 1877073321;
  v172 = (v171 ^ 0xC4DE0116) & (2 * (v171 & 0x901E2257)) ^ v171 & 0x901E2257;
  v173 = ((2 * (v171 ^ 0xE4EA0110)) ^ 0xE9E8468E) & (v171 ^ 0xE4EA0110) ^ (2 * (v171 ^ 0xE4EA0110)) & 0x74F42346;
  v174 = (v173 ^ 0x40E00204) & (4 * v172) ^ v172;
  v175 = ((4 * (v173 ^ 0x14142141)) ^ 0xD3D08D1C) & (v173 ^ 0x14142141) ^ (4 * (v173 ^ 0x14142141)) & 0x74F42344;
  v176 = (v175 ^ 0x50D00100) & (16 * v174) ^ v174;
  v177 = ((16 * (v175 ^ 0x24242243)) ^ 0x4F423470) & (v175 ^ 0x24242243) ^ (16 * (v175 ^ 0x24242243)) & 0x74F42340;
  v178 = v176 ^ 0x74F42347 ^ (v177 ^ 0x44402007) & (v176 << 8);
  LODWORD(STACK[0x1850]) = v171 ^ (2
                                 * ((v178 << 16) & 0x74F40000 ^ v178 ^ ((v178 << 16) ^ 0x23470000) & (((v177 ^ 0x30B40307) << 8) & 0x74F40000 ^ 0xD40000 ^ (((v177 ^ 0x30B40307) << 8) ^ 0x74230000) & (v177 ^ 0x30B40307))));
  v179 = (((v36 ^ 0xFC2C2799) - 1887567078) ^ ((v36 ^ 0xC3A0E0F5) - 1326267274) ^ ((v36 ^ 0x3E0C8874) + 1298050293))
       - (((v143 ^ 0x4F0B55BF) - 1906542840) ^ ((v143 ^ 0x2830A84A) - 379090189) ^ ((v143 ^ 0xD4BEB4D5) + 367629934))
       + (((v143 ^ 0x6D2B2ECA) - 1401156493) ^ ((v143 ^ 0x7BF6FCE9) - 1163796910) ^ ((v143 ^ 0xA5589B03) + 1678752188))
       - 586445847;
  v180 = (v179 ^ 0xA930247E) & (2 * (v179 & 0xB022087E)) ^ v179 & 0xB022087E;
  v181 = ((2 * (v179 ^ 0x89342406)) ^ 0x722C58F0) & (v179 ^ 0x89342406) ^ (2 * (v179 ^ 0x89342406)) & 0x39162C78;
  v182 = (v181 ^ 0x8020470) & (4 * v180) ^ v180;
  v183 = ((4 * (v181 ^ 0x9122408)) ^ 0xE458B1E0) & (v181 ^ 0x9122408) ^ (4 * (v181 ^ 0x9122408)) & 0x39162C78;
  v184 = (v183 ^ 0x20102078) & (16 * v182) ^ v182;
  v185 = ((16 * (v183 ^ 0x19060C18)) ^ 0x9162C780) & (v183 ^ 0x19060C18) ^ (16 * (v183 ^ 0x19060C18)) & 0x39162C70;
  v186 = v184 ^ 0x39162C78 ^ (v185 ^ 0x11020478) & (v184 << 8);
  LODWORD(STACK[0x1860]) = v179 ^ (2
                                 * ((v186 << 16) & 0x39160000 ^ v186 ^ ((v186 << 16) ^ 0x2C780000) & (((v185 ^ 0x28142878) << 8) & 0x39160000 ^ 0x29120000 ^ (((v185 ^ 0x28142878) << 8) ^ 0x162C0000) & (v185 ^ 0x28142878))));
  v187 = (((v152 ^ 0x98271354) + 638232699) ^ ((v152 ^ 0x313FA704) - 1894638549) ^ ((v152 ^ 0x65E764E6) - 607461431))
       - (((v143 ^ 0x738AD9DD) - 1294075034) ^ ((v143 ^ 0xE79475E5) + 650336094) ^ ((v143 ^ 0x279BE518) - 422787167))
       + 1819197261;
  v188 = (v187 ^ 0x93144ABB) & (2 * (v187 & 0x939140B3)) ^ v187 & 0x939140B3;
  v189 = ((2 * (v187 ^ 0xB4144BFF)) ^ 0x4F0A1698) & (v187 ^ 0xB4144BFF) ^ (2 * (v187 ^ 0xB4144BFF)) & 0x27850B4C;
  v190 = (v189 ^ 0x6000208) & (4 * v188) ^ v188;
  v191 = ((4 * (v189 ^ 0x20850944)) ^ 0x9E142D30) & (v189 ^ 0x20850944) ^ (4 * (v189 ^ 0x20850944)) & 0x27850B4C;
  v192 = (v191 ^ 0x6040900) & (16 * v190) ^ v190;
  v193 = ((16 * (v191 ^ 0x2181024C)) ^ 0x7850B4C0) & (v191 ^ 0x2181024C) ^ (16 * (v191 ^ 0x2181024C)) & 0x27850B40;
  v194 = v192 ^ 0x27850B4C ^ (v193 ^ 0x2000000C) & (v192 << 8);
  v195 = v187 ^ (2
               * ((v194 << 16) & 0x27850000 ^ v194 ^ ((v194 << 16) ^ 0xB4C0000) & (((v193 ^ 0x7850B0C) << 8) & 0x27850000 ^ 0x22840000 ^ (((v193 ^ 0x7850B0C) << 8) ^ 0x50B0000) & (v193 ^ 0x7850B0C))));
  v196 = ((v161 ^ 0xB96EC685) - 940412365) ^ ((v161 ^ 0xD9C7E661) - 1487187241) ^ ((v161 ^ 0x6CE7FFCB) + 310070141);
  LODWORD(STACK[0x1610]) = STACK[0x16B8] ^ v102 ^ v152 ^ (801639021 * v196
                                                        - ((529536218 * v196 + 458779574) & 0x1A5B28CE)
                                                        + 1255787074) ^ 0xC5A3E47D ^ (-1926392729
                                                                                    - 971791363 * v103
                                                                                    - ((203900922 * v103) & 0x1A5B28CE));
  v197 = (v161 ^ 0xC4EDF2F) + (HIWORD(v161) ^ 0xFFFFF3B1) + 1;
  v198 = ((((v197 ^ (v197 >> 8)) + LODWORD(STACK[0x1868])) * v17) >> (((((v197 ^ BYTE1(v197)) + LOBYTE(STACK[0x1868])) & 0x10)
                                                                     + (((v197 ^ BYTE1(v197)) + LOBYTE(STACK[0x1868])) & 0x10 ^ 0x10)) & 0x30)) ^ (((v197 ^ (v197 >> 8)) + LODWORD(STACK[0x1868])) * v17);
  LODWORD(STACK[0x1868]) = STACK[0x1678];
  v199 = -118806571 * (v198 + v130 + (v198 >> 8)) + ((-118806571 * (v198 + v130 + (v198 >> 8))) >> 16);
  v200 = v199 - 2 * (v199 & 7);
  v201 = v199 - (v199 >> 8) - 1926392729 - ((2 * (v199 - (v199 >> 8))) & 0x1A5B28CE);
  v202 = ((8 * v59) ^ 0x2B4BA431) & 0x5DDD6D58 ^ 0x1C65E756 ^ (-2
                                                             - ((~(((8 * v59) ^ 0x2B4BA431) & 0x5DDD6D40) | 0x5C60E256)
                                                              + (((8 * v59) ^ 0x2B4BA431) & 0x5C406040 | 0xA39F1DA9)));
  LODWORD(STACK[0x1848]) = ((2 * v202) | 0xEB8A3390) - v202;
  v203 = STACK[0x1638];
  v204 = (-595438182
        - (((((8 * v59) ^ 0x96935CC7) + 1) ^ 0xA5F8A66D) & 0xA061C988)
        + ((2 * (((((8 * v59) ^ 0x96935CC7) + 1) ^ 0xA5F8A66D) & 0xA061C988)) | 0x46FB3D8E)
        + 2975) ^ ((((8 * v59) ^ 0x96935CC7) + 1) ^ 0xA5F8A66D) & 0xA061C990;
  LODWORD(STACK[0x1718]) = (v204 & 0xD66FD7DB ^ 0x5462C110) + (v204 & 0x29902824 ^ 0x1100805);
  v205 = (((2 * ((8 * v131) ^ 0x3B0A2109)) & 0x58088000) - (((8 * v131) ^ 0x3B0A2109) & 0xBC96D009) + 328373051) & 0xFDFFD31A ^ ((8 * v131) ^ 0x3B0A2109) & 0xBC96D011;
  LODWORD(STACK[0x1310]) = v205;
  v206 = ((v205 ^ ((v205 ^ 0x188) + 260) ^ ((v205 ^ 0x31BFEE2F) + 165) ^ 0x10A) + 442) & (3
                                                                                        * ((((v200 + 39) ^ v203) & 0x34 ^ 0x34)
                                                                                         + (((v200 + 39) ^ v203) & 0x34)));
  LODWORD(STACK[0x1828]) = v206 - 1926392729 - ((2 * v206) & 0xCCCCCCCC);
  LODWORD(STACK[0x1678]) = v201;
  v207 = ((8 * v201) ^ 0x71F15070) & 0xC840FF40 ^ 0x7BCA1ECA ^ (-1942678915
                                                              - (((8 * v201) ^ 0x71F15070) & 0x4040ED00 | 0x8C35127D)
                                                              + (((8 * v201) ^ 0x71F15070) & 0x88001258 | 0x73CAED82));
  LODWORD(STACK[0x16B8]) = 9080327 - (v207 | 0x8A8E07) + (v207 | 0xFF7571F8);
  v208 = ((((8 * v201) ^ 0x96935CC7) + 1) ^ 0xA1E9C783) & 0x9B3279E8 ^ 0x21B38860 ^ (-2
                                                                                   - ((~(((((8 * v201) ^ 0x96935CC7) + 1) ^ 0xA1E9C783) & 0x9B3279F2) | 0xA093C9E0)
                                                                                    + (((((8 * v201) ^ 0x96935CC7) + 1) ^ 0xA1E9C783) & 0x801249E0 | 0x5F6C361F)));
  LODWORD(STACK[0x1690]) = ((2 * v208) & 0xE37E379C) - v208;
  v209 = STACK[0x17CC];
  v210 = (((v121 ^ 0x3AAE6E6B) - 39165211) ^ ((v121 ^ 0xD3F2A72C) + 351710116) ^ ((v121 ^ 0x5C8AAE50) - 1685151008))
       + (((v209 ^ 0x2CC8DFF4) - 751362036) ^ ((v209 ^ 0xB0B7F251) + 1330122159) ^ ((v209 ^ 0x1152B9C2) - 290634178));
  v211 = 1877389891 * (v15 ^ (v210 - 1484210891 - ((2 * v210 + 347492764) & 0x1A5B28CE)));
  v212 = (HIWORD(v211) ^ v211) + 2 * (HIWORD(v211) & v211);
  v213 = 2034894531
       * ((v212 - (v212 >> 8) - 1926392729 - ((2 * (v212 - (v212 >> 8))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1780]));
  v214 = v213 - HIWORD(v213) + ((v213 - HIWORD(v213)) >> 8);
  v215 = ((LODWORD(STACK[0x1560]) ^ 0xBF012625) + 1090443739) ^ ((LODWORD(STACK[0x1560]) ^ 0x1A6041A2) - 442515874) ^ ((LODWORD(STACK[0x1560]) ^ 0x284CF3E0) - 676131808);
  v216 = STACK[0x1588];
  LODWORD(STACK[0x1408]) = STACK[0x1588];
  v217 = (((v216 ^ 0xEE3F77E6) + 297830426) ^ ((v216 ^ 0x5FAA2B10) - 1604987664) ^ ((v216 ^ 0x3CB8C891) - 1018742929))
       + v215;
  LODWORD(STACK[0x17A0]) = v195 ^ 0x57BEC24C;
  v218 = 239467589 * (v195 ^ 0x57BEC24C ^ (v214 - 1926392729 - ((2 * v214) & 0x1A5B28CE)));
  v219 = v218 - HIWORD(v218) - 1926392729 - ((2 * (v218 - HIWORD(v218))) & 0x1A5B28CE);
  v220 = (((v219 >> 8) ^ 0x8D2D94) - 1926392729 - ((2 * ((v219 >> 8) ^ 0x8D2D94)) & 0x5B28CE)) ^ v219;
  v221 = (((2 * (v49 & 0xFF79F54B ^ 0x4439E142)) & 0xAB32A00) - (v49 & 0xFF79F54B ^ 0x4439E142) - 98276773) ^ 0x72245CCB;
  v222 = STACK[0x14C4];
  v223 = v220 + (v18 ^ 0x8D2D9467);
  LODWORD(STACK[0x1680]) = STACK[0x14C4];
  v224 = (((((v222 ^ 0x8D2D9467) - v220) & 0xE2A8F74F ^ 0xE2A8F74F) + (((v222 ^ 0x8D2D9467) - v220) & 0xE2A8F74F)) & (((((2 * v221) & 0xA71EAE94) - v221 + 745580689) ^ 0x92191E4B) + ((-579923611 - (v49 & 0xFF79F54B ^ 0x7B017008 | 0xDD6F1165) + (v49 & 0xFF79F54B ^ 0x7B017008 | 0x2290EE9A)) ^ 0xD4B80AD1)))
       * v223;
  v225 = v223 + (v49 ^ 0x8D2D9467) + 1155994525 * v224;
  v226 = v224 + HIWORD(v224) + ((v224 + HIWORD(v224)) >> 8);
  LODWORD(STACK[0x15DC]) = v226 - 1926392729 - ((2 * v226) & 0x1A5B28CE);
  LODWORD(STACK[0x14F8]) = v225 - 1926392729 - ((2 * v225) & 0x1A5B28CE);
  LODWORD(STACK[0x1790]) = (v209 ^ 0x8D2D9467) - 1926392729 - 2 * ((v209 ^ 0x8D2D9467) & 0xD2D9477 ^ v209 & 0x10);
  LODWORD(STACK[0x16F8]) = LODWORD(STACK[0x1750]) - 1926392729 - 2 * (v203 & 0x18 ^ STACK[0x1750] & 0xD2D947F);
  v227 = 1877389891 * (v15 ^ (v217 - 1484210891 - ((2 * v217 + 347492764) & 0x1A5B28CE)));
  v228 = v227 + HIWORD(v227) - ((v227 + HIWORD(v227)) >> 8);
  v229 = (LODWORD(STACK[0x15E8]) ^ 0x8D2D9467) - v228;
  v230 = v229 & v228;
  v231 = v229 ^ v228;
  v232 = (((LODWORD(STACK[0x1670]) ^ 0xB07530EE) + 1334497042) ^ ((LODWORD(STACK[0x1670]) ^ 0xAA4BD258) + 1437871528) ^ ((LODWORD(STACK[0x1670]) ^ 0x971376D1) + 1760332079))
       - 1004195539;
  v233 = (v232 ^ 0xFD50F678) & (2 * (v232 & 0xFC5AF77A)) ^ v232 & 0xFC5AF77A;
  v234 = ((2 * (v232 ^ 0x5DF0384C)) ^ 0x43559E6C) & (v232 ^ 0x5DF0384C) ^ (2 * (v232 ^ 0x5DF0384C)) & 0xA1AACF36;
  v235 = (v234 ^ 0x1008E22) & (4 * v233) ^ v233;
  v236 = ((4 * (v234 ^ 0xA0AA4112)) ^ 0x86AB3CD8) & (v234 ^ 0xA0AA4112) ^ (4 * (v234 ^ 0xA0AA4112)) & 0xA1AACF34;
  v237 = (v236 ^ 0x80AA0C00) & (16 * v235) ^ v235;
  v238 = ((16 * (v236 ^ 0x2100C326)) ^ 0x1AACF360) & (v236 ^ 0x2100C326) ^ (16 * (v236 ^ 0x2100C326)) & 0xA1AACF30;
  v239 = v237 ^ 0xA1AACF36 ^ (v238 ^ 0xA8C316) & (v237 << 8);
  LODWORD(STACK[0x17CC]) = v232 ^ (2
                                 * ((v239 << 16) & 0x21AA0000 ^ v239 ^ ((v239 << 16) ^ 0x4F360000) & (((v238 ^ 0xA1020C16) << 8) & 0x21AA0000 ^ 0x1200000 ^ (((v238 ^ 0xA1020C16) << 8) ^ 0x2ACF0000) & (v238 ^ 0xA1020C16))));
  v240 = (((v15 ^ 0xFCBF9903) + 54552317) ^ ((v15 ^ 0x2F90356A) - 797980010) ^ ((v15 ^ 0x5E02380E) - 1577203726))
       + 522428645;
  v241 = (v240 ^ 0xA96B06C4) & (2 * (v240 & 0xAD6BA8E1)) ^ v240 & 0xAD6BA8E1;
  v242 = ((2 * (v240 ^ 0xFBB90786)) ^ 0xADA55ECE) & (v240 ^ 0xFBB90786) ^ (2 * (v240 ^ 0xFBB90786)) & 0x56D2AF66;
  v243 = (v242 ^ 0x4800625) & (4 * v241) ^ v241;
  v244 = ((4 * (v242 ^ 0x5252A121)) ^ 0x5B4ABD9C) & (v242 ^ 0x5252A121) ^ (4 * (v242 ^ 0x5252A121)) & 0x56D2AF64;
  v245 = (v244 ^ 0x5242AD00) & (16 * v243) ^ v243;
  v246 = ((16 * (v244 ^ 0x4900263)) ^ 0x6D2AF670) & (v244 ^ 0x4900263) ^ (16 * (v244 ^ 0x4900263)) & 0x56D2AF60;
  v247 = v245 ^ 0x56D2AF67 ^ (v246 ^ 0x4402A600) & (v245 << 8);
  LODWORD(STACK[0x1638]) = v240 ^ (2
                                 * ((v247 << 16) & 0x56D20000 ^ v247 ^ ((v247 << 16) ^ 0x2F670000) & (((v246 ^ 0x12D00907) << 8) & 0x56D20000 ^ 0x4500000 ^ (((v246 ^ 0x12D00907) << 8) ^ 0x52AF0000) & (v246 ^ 0x12D00907))));
  v248 = (((LODWORD(STACK[0x159C]) ^ 0x77FEE708) - 2013193992) ^ ((LODWORD(STACK[0x159C]) ^ 0x976A1C38) + 1754653640) ^ ((LODWORD(STACK[0x159C]) ^ 0x6DB96F57) - 1840869207))
       - 1183388248;
  v249 = (v248 ^ 0xE240AB34) & (2 * (v248 & 0xF26A2386)) ^ v248 & 0xF26A2386;
  v250 = ((2 * (v248 ^ 0xE604A934)) ^ 0x28DD1564) & (v248 ^ 0xE604A934) ^ (2 * (v248 ^ 0xE604A934)) & 0x146E8AB2;
  v251 = (v250 ^ 0x44A00A2) & (4 * v249) ^ v249;
  v252 = ((4 * (v250 ^ 0x14228A92)) ^ 0x51BA2AC8) & (v250 ^ 0x14228A92) ^ (4 * (v250 ^ 0x14228A92)) & 0x146E8AB0;
  v253 = (v252 ^ 0x102A0A92) & (16 * v251) ^ v251;
  v254 = ((16 * (v252 ^ 0x4448032)) ^ 0x46E8AB20) & (v252 ^ 0x4448032) ^ (16 * (v252 ^ 0x4448032)) & 0x146E8AB0;
  v255 = v253 ^ 0x146E8AB2 ^ (v254 ^ 0x4688A00) & (v253 << 8);
  LODWORD(STACK[0x159C]) = v248 ^ (2
                                 * ((v255 << 16) & 0x146E0000 ^ v255 ^ ((v255 << 16) ^ 0xAB20000) & (((v254 ^ 0x10060092) << 8) & 0x146E0000 ^ 0x10640000 ^ (((v254 ^ 0x10060092) << 8) ^ 0x6E8A0000) & (v254 ^ 0x10060092))));
  HIDWORD(v256) = LODWORD(STACK[0x1418]) ^ 0x12D9467;
  LODWORD(v256) = LODWORD(STACK[0x1418]) ^ 0x8C000000;
  LODWORD(STACK[0x17E0]) = v231 + 2 * v230 - 1926392729 - ((2 * (v231 + 2 * v230)) & 0x1A5B28CE);
  LODWORD(STACK[0x1588]) = ((v18 ^ 0x99BF53DA) + 1715514406) ^ ((v18 ^ 0x16E043A5) - 383796133) ^ ((v18 ^ 0x2728418)
                                                                                                 - 41059352);
  HIDWORD(v256) = v256 >> 25;
  LODWORD(v256) = HIDWORD(v256);
  LODWORD(STACK[0x15E8]) = (v256 >> 7) - 1926392729 - ((2 * (v256 >> 7)) & 0x1A5B28CE);
  v257 = STACK[0x14B0];
  v258 = STACK[0xE20];
  v259 = 2 * LODWORD(STACK[0xE20]);
  v260 = v259 & 0x1C1C1C1C ^ 0x16160602;
  v261 = v259 & 0x8180C0C ^ 0xEF830021 ^ (LODWORD(STACK[0x14B0]) ^ 0x4161A08) & v260;
  v262 = STACK[0x10DC];
  LODWORD(STACK[0x1750]) = v260;
  v263 = STACK[0x1138];
  v264 = 2 * LODWORD(STACK[0x1138]);
  v265 = STACK[0x1138];
  LODWORD(STACK[0x1138]) = STACK[0x1138];
  v266 = (2 * v263) & 0x1C1C1C1C ^ 0x16160602;
  LODWORD(STACK[0x1670]) = v266;
  v267 = STACK[0x1064];
  v268 = STACK[0x1420];
  LOBYTE(v49) = STACK[0x10B4];
  v269 = (((((v266 & (v268 ^ 0x181C1E14) ^ v264 & 0x14100810) & 0x141014 ^ 0xE145D005)
          + (v266 & (v268 ^ 0x181C1E14) ^ v264 & 0x14100810 ^ 0x4100B50)
          - ((v266 & (v268 ^ 0x181C1E14) ^ v264 & 0x14100810 ^ 0x4100B50) & 0x141154)) ^ 0xF155D807) >> LODWORD(STACK[0x1318]) >> LODWORD(STACK[0x1320])) ^ (((2 * v263) & 0x40C0C10 ^ 0x4060400 ^ v266 & (LODWORD(STACK[0x1064]) ^ 0x8021816)) << v49 << LODWORD(STACK[0x10D0]));
  LODWORD(STACK[0x102C]) = v269 - 1926392729 - ((2 * v269) & 0x1A5B28CE);
  LODWORD(STACK[0x1028]) = (v258 & 8 ^ 8) + (v258 & 8);
  v270 = STACK[0x1120];
  v271 = STACK[0x1120] & 9 ^ 1;
  LODWORD(STACK[0xBD8]) = v271;
  v272 = v270 & 0x16 ^ 6;
  LODWORD(STACK[0xBD4]) = v272;
  v273 = (v259 & 0xC141004 ^ 0x6160200 ^ v260 & (v262 ^ 0x21A0602u)) >> LODWORD(STACK[0xD18]) >> LODWORD(STACK[0xD1C]);
  LODWORD(STACK[0x1024]) = (((v261 - 1) ^ 0xEF910622) << v271 << v272) + v273;
  v274 = ((((v260 & (v267 ^ 0x20018) ^ v259 & 0xC0C141C) & 0x1C0E0602 ^ 0x9404A681)
         + ((v260 & (v267 ^ 0x20018) ^ v259 & 0xC0C141C) & 0x210181C)
         - 1) ^ 0x9002A282) << LODWORD(STACK[0xBD0]);
  LODWORD(STACK[0x1120]) = v270;
  LODWORD(STACK[0xB28]) = v270 & 8;
  LODWORD(STACK[0x1020]) = ((v274 << (v270 & 8)) | v273)
                         - 1926392729
                         - ((2 * ((v274 << (v270 & 8)) | v273)) & 0x1A5B28CE);
  v275 = (((2 * (v265 & 0xADADADAD ^ 0xAD002000)) | 0xBEB51DAC) - (v265 & 0xADADADAD ^ 0xAD002000) + 547713322) ^ 0xFF772AF3;
  LODWORD(STACK[0x101C]) = v275;
  v275 *= 2;
  v276 = (v275 ^ 0xADADADAD) & (v267 ^ 0x3F3294D) ^ v275 & 0x8EDEBD2A;
  v277 = (v275 ^ 0xADADADAD) & (v268 ^ 0xEDD3ED9D) ^ v275 & 0x60FE79FA;
  LODWORD(STACK[0x1018]) = ((((v276 & 0x80B8FE1F ^ 0x205A1F) + (v276 ^ 0x8298A400) - ((v276 ^ 0x8298A400) & 0x80B8FE1F)) ^ 0x8EACF737) << LODWORD(STACK[0xCD8]) << LODWORD(STACK[0xCDC])) | ((((v277 & 0x35B9A887 ^ 0x1589A807) + (v277 ^ 0x607000E8) - ((v277 ^ 0x607000E8) & 0x35B9A887)) ^ 0x756581C7) >> LODWORD(STACK[0xD50]) >> LODWORD(STACK[0xD54]));
  v278 = v275 & 0x264C5C0E ^ 0x20481009 ^ (v257 ^ 0xAB61C868) & (v275 ^ 0xADADADAD);
  LODWORD(STACK[0x1418]) = ((2 * v278) | 0x101DF48E) - v278;
  LODWORD(STACK[0x13B8]) = v275 & 0xB419175C ^ 0xA409050C ^ (v275 ^ 0xADADADAD) & (v268 ^ 0x3934833B);
  v279 = STACK[0x1154] & 0x9358C2A9;
  v280 = ((v279 ^ 0x555B6325) - ((2 * (v279 ^ 0x555B6325)) & 0xA4B10248) - 755460810) ^ 0x566BDE74;
  v281 = (((2 * (v279 ^ 0x9040C220)) | 0xC1A1DC68) - (v279 ^ 0x9040C220) + 523178444) ^ 0xE4D0FC30;
  LODWORD(STACK[0x1010]) = ((v280 - ((2 * v280) & 0xA26C196) + 85156043) ^ 0x55D3C88D)
                         + ((((2 * v281) & 0x3B71AD4C) - v281 + 1648830809) ^ 0xE457BBF5);
  v282 = v259 & 0xB1B1B1B0 ^ 0xC8C9F858;
  v283 = v259 & 0x11A02030 ^ 0x54884004 ^ v282 & (v267 ^ 0xD881F818);
  v284 = v259 & 0x90203000 ^ 0x80461E42 ^ v282 & (v262 ^ 0x1149E820);
  v285 = STACK[0x1520];
  v286 = STACK[0x15C0];
  v287 = STACK[0x1050];
  LOBYTE(v131) = STACK[0x104C];
  v288 = (((v283 - ((2 * v283) & 0x7AC09270) + 1029851960) ^ 0x29626364) << LODWORD(STACK[0x1520]) << LODWORD(STACK[0x15C0]))
       + (((206068740 - (v284 | 0xC485C04) + (v284 | 0xF3B7A3FB)) ^ 0xFBB1C5F9) >> v287 >> v131);
  v289 = v288 - 1926392729 - ((2 * v288) & 0x1A5B28CE);
  LODWORD(STACK[0x12F8]) = v282;
  v290 = v259 & 0xA0819090 ^ 0xA0405214 ^ v282 & (v268 ^ 0x29E040F8);
  v291 = ((-260082451 - (v290 | 0xF07F74ED) + (v290 | 0xF808B12)) ^ 0x2F09091E) >> LODWORD(STACK[0x1708]) >> LODWORD(STACK[0x1650]);
  v292 = ((((v282 & (v267 ^ 0xF1D04170) ^ v259 & 0x30B19110) & 0x51290978 ^ 0x57200C7D)
         + ((v282 & (v267 ^ 0xF1D04170) ^ v259 & 0x30B19110) & 0xA8D0F080)
         - 1) ^ 0x1FE9DC6C) << LODWORD(STACK[0xD28]) << LODWORD(STACK[0xD2C]);
  LODWORD(STACK[0xB70]) = v291;
  v293 = (v292 & 0xF68B0B3E | (v291 ^ 0x974F4C1) & ~v292) ^ 0x2010100;
  LODWORD(STACK[0x1388]) = ((2 * v293) | 0xA44129B4) - v293;
  v294 = v264 & 0xB1B1B1B0 ^ 0xC8C9F858;
  v295 = v264 & 0x20219020 ^ 0x20210A28 ^ v294 & (v268 ^ 0xA9480848);
  v296 = ((((2 * v295) | 0xEED517E4) - v295 - 2003471346) ^ 0x570A19D2) >> LODWORD(STACK[0xC54]) >> LODWORD(STACK[0xC50]);
  LODWORD(STACK[0x15C0]) = v286;
  LODWORD(STACK[0x1520]) = v285;
  v297 = v296 + ((v264 & 0xA1B021B0 ^ 0xC0C06058 ^ v294 & (v267 ^ 0x68D9F198)) << v286 << v285);
  LODWORD(STACK[0x100C]) = v297 - 1926392729 - ((2 * v297) & 0x1A5B28CE);
  LODWORD(STACK[0x1364]) = (v297 & 8 ^ 8) + (v297 & 8);
  LODWORD(STACK[0x12F0]) = v294;
  LODWORD(STACK[0xFD4]) = ((v264 & 0xB1B09020 ^ 0x80C8D808 ^ (v257 ^ 0x38D14848) & v294) << (v270 & 0x1F ^ 7)) ^ ((((v264 & 0x9010A130 ^ 0x93BFA703 ^ v294 & (v262 ^ 0x19797910)) - 1) ^ 0x13FF4F52) >> LODWORD(STACK[0x10C0]) >> LODWORD(STACK[0x10C4]));
  v298 = ((v289 & 0x10C64849 ^ 0xC28814) + (v289 & 0x66211522 ^ 0x44010421) - 1) ^ 0x51C6D859;
  LODWORD(STACK[0x14C4]) = v289;
  v299 = (v289 & 0x76E75D6B ^ 0x74C01149) - ((2 * (v289 & 0x76E75D6B ^ 0x74C01149)) & 0x498C22D4) + 769044842;
  LODWORD(STACK[0x1340]) = ((v299 & 0xF81A9D7D ^ 0xC008090D) + (v299 ^ 0x3DF3B670) - ((v299 ^ 0x3DF3B670) & 0xF81A9D7D)) ^ 0xEE3DC226 | (-373015525 - (v298 | 0xE9C43C1B) + (v298 | 0x163BC3E4)) ^ 0x71B83EA;
  v300 = STACK[0x10A4];
  v301 = 0xFF00FF00FF0100
       * (((v300 ^ 0x29598DDBD8D6D836) - 0x29598DDBD8D6D836) ^ ((v300 ^ 0xAA351A6B0662D9A9) + 0x55CAE594F99D2657) ^ ((v300 ^ 0x836C97B0539995F8) + 0x7C93684FAC666A08))
       - 0x3F908CEACCB0EB6DLL;
  v302 = (v301 ^ 0xAA1CDE67CEDF00DDLL) & (2 * (v301 & 0xB31D0077CCDE5201)) ^ v301 & 0xB31D0077CCDE5201;
  v303 = ((2 * (v301 ^ 0xEA26DE8A5F5B00DDLL)) ^ 0xB277BDFB270AA540) & (v301 ^ 0xEA26DE8A5F5B00DDLL) ^ (2 * (v301 ^ 0xEA26DE8A5F5B00DDLL)) & 0x593BDEFD93855200;
  v304 = (v303 ^ 0x103000F903000000) & (4 * v302) ^ v302;
  v305 = ((4 * (v303 ^ 0x4908420490855200)) ^ 0x64EF7BF64E154AC0) & (v303 ^ 0x4908420490855200) ^ (4 * (v303 ^ 0x4908420490855200)) & 0x593BDEFD938552B0;
  v306 = (v305 ^ 0x402B5AF402054280) & (16 * v304) ^ v304;
  v307 = ((16 * (v305 ^ 0x1910840991801030)) ^ 0x93BDEFD938552B00) & (v305 ^ 0x1910840991801030) ^ (16 * (v305 ^ 0x1910840991801030)) & 0x593BDEFD938552B0;
  v308 = (v307 ^ 0x1139CED910050200) & (v306 << 8) ^ v306;
  v309 = (((v307 ^ 0x48021024838050B0) << 8) ^ 0x3BDEFD938552B000) & (v307 ^ 0x48021024838050B0) ^ ((v307 ^ 0x48021024838050B0) << 8) & 0x593BDEFD93855200;
  v310 = v308 ^ 0x593BDEFD938552B0 ^ (v309 ^ 0x191ADC9181000000) & (v308 << 16);
  v311 = v301 ^ (2
               * ((v310 << 32) & 0x593BDEFD00000000 ^ v310 ^ ((v310 << 32) ^ 0x138552B000000000) & (((v309 ^ 0x4021026C128542B0) << 16) & 0x593BDEFD00000000 ^ 0x1024C7800000000 ^ (((v309 ^ 0x4021026C128542B0) << 16) ^ 0x5EFD938500000000) & (v309 ^ 0x4021026C128542B0))));
  v312 = ((v311 ^ 0x74EA5F2E15F65399) - 0x2F0395A20A1F0D58) ^ ((v311 ^ 0x49564C184B9D23E4) - 0x12BF869454747D25);
  LODWORD(v311) = __CFADD__(257 * (v312 ^ ((v311 ^ 0x1ED40BDAB5BF8770) - 0x453DC156AA56D9B1)), 0xFA54335531E775CCLL)
                + (((v312 ^ ((v311 ^ 0x1ED40BDAB5BF8770uLL) - 0x453DC156AA56D9B1)) * (unsigned __int128)0x101uLL) >> 64)
                + 257
                * ((__CFADD__(v311 ^ 0x74EA5F2E15F65399, 0xD0FC6A5DF5E0F2A8) - 1) ^ (__CFADD__(v311 ^ 0x49564C184B9D23E4, 0xED40796BAB8B82DBLL)- 1) ^ (__CFADD__(v311 ^ 0x1ED40BDAB5BF8770, 0xBAC23EA955A9264FLL)- 1))+ 644688762;
  LODWORD(v312) = (v311 ^ 0x9D88D0FE) & (2 * (v311 & 0xD992D4FE)) ^ v311 & 0xD992D4FE;
  LODWORD(v309) = ((2 * (v311 ^ 0xBF8CD916)) ^ 0xCC3C1BD0) & (v311 ^ 0xBF8CD916) ^ (2 * (v311 ^ 0xBF8CD916)) & 0x661E0DE8;
  LODWORD(v312) = (v309 ^ 0x441C01C0) & (4 * v312) ^ v312;
  LODWORD(v309) = ((4 * (v309 ^ 0x22020428)) ^ 0x987837A0) & (v309 ^ 0x22020428) ^ (4 * (v309 ^ 0x22020428)) & 0x661E0DE8;
  LODWORD(v312) = (v309 ^ 0x1805A8) & (16 * v312) ^ v312;
  LODWORD(v309) = ((16 * (v309 ^ 0x66060848)) ^ 0x61E0DE80) & (v309 ^ 0x66060848) ^ (16 * (v309 ^ 0x66060848)) & 0x661E0DE0;
  LODWORD(v312) = v312 ^ 0x661E0DE8 ^ (v309 ^ 0x60000C68) & ((_DWORD)v312 << 8);
  v313 = v311 ^ (2
               * (((_DWORD)v312 << 16) & 0x661E0000 ^ v312 ^ (((_DWORD)v312 << 16) ^ 0xDE80000) & (((v309 ^ 0x61E0168) << 8) & 0x661E0000 ^ 0x60120000 ^ (((v309 ^ 0x61E0168) << 8) ^ 0x1E0D0000) & (v309 ^ 0x61E0168))));
  v314 = STACK[0x14C8];
  v315 = STACK[0x116C];
  v316 = (v315 ^ v314) % 0x101 - 1926392729 - ((2 * ((v315 ^ v314) % 0x101)) & 0xCE);
  LODWORD(STACK[0x130C]) = v316;
  LODWORD(STACK[0x12EC]) = ((v316 ^ 0xB4BD2242) + 1262673342) ^ ((v316 ^ 0xA5A1DA5C) + 1516119460) ^ ((v316 ^ 0x9C316C79) + 1674482567);
  LODWORD(STACK[0xFD0]) = v313;
  LODWORD(v311) = (((v313 ^ 0x242D37EC) + 1262588763) ^ ((v313 ^ 0xB332F496) - 597798879) ^ ((v313 ^ 0x8AA10C54)
                                                                                           - 439506717))
                - 755451560;
  LODWORD(v312) = (v311 ^ 0xBA244C58) & (2 * (v311 & 0xBA356919)) ^ v311 & 0xBA356919;
  LODWORD(v309) = ((2 * (v311 ^ 0xEA669C5A)) ^ 0xA0A7EA86) & (v311 ^ 0xEA669C5A) ^ (2 * (v311 ^ 0xEA669C5A)) & 0x5053F542;
  LODWORD(v312) = (v309 ^ 0x3F101) & (4 * v312) ^ v312;
  LODWORD(v309) = ((4 * (v309 ^ 0x50501541)) ^ 0x414FD50C) & (v309 ^ 0x50501541) ^ (4 * (v309 ^ 0x50501541)) & 0x5053F540;
  LODWORD(v312) = (v309 ^ 0x4043D500) & (16 * v312) ^ v312;
  LODWORD(v309) = ((16 * (v309 ^ 0x10102043)) ^ 0x53F5430) & (v309 ^ 0x10102043) ^ (16 * (v309 ^ 0x10102043)) & 0x5053F540;
  LODWORD(v312) = v312 ^ 0x5053F543 ^ (v309 ^ 0x135443) & ((_DWORD)v312 << 8);
  LODWORD(STACK[0x1320]) = v311 ^ (2
                                 * (((_DWORD)v312 << 16) & 0x50530000 ^ v312 ^ (((_DWORD)v312 << 16) ^ 0x75430000) & (((v309 ^ 0x5040A143) << 8) & 0x50530000 ^ (((v309 ^ 0x5040A143) << 8) ^ 0x53F50000) & (v309 ^ 0x5040A143) ^ 0x20000)));
  v317 = 2
       * ((((2 * (v258 & 0x21212121 ^ 0x30016F5)) & 0x2024322) - (v258 & 0x21212121 ^ 0x30016F5) - 1440704916) ^ 0xA80180B8);
  LODWORD(v311) = (((v317 & 0x5EDEDEDE ^ 0x704BF62F) - 1) ^ 0xBFD3AAF4)
                - ((2 * (((v317 & 0x5EDEDEDE ^ 0x704BF62F) - 1) ^ 0xBFD3AAF4)) & 0x998D108C)
                - 320370330;
  v318 = STACK[0xD30];
  LOBYTE(v271) = STACK[0xD24];
  LODWORD(v309) = (((((v311 ^ 0x5DA1E419) & STACK[0x14E4] ^ v262 & 0x5FFF1084) & 0x28B7947E ^ 0x2087947E)
                  + ((v311 ^ 0x5DA1E419) & STACK[0x14E4] ^ v262 & 0x5FFF1084 ^ 0x1A700000)
                  - (((v311 ^ 0x5DA1E419) & STACK[0x14E4] ^ v262 & 0x5FFF1084 ^ 0x1A700000) & 0x28B7947E)) ^ 0x3FEA847A) >> v318 >> v271;
  LODWORD(v312) = ((v311 & 0xEA4E4F10 ^ 0x24E4411 ^ (v257 ^ 0x6763DB76) & (v311 ^ 0x25EF49D)) << LODWORD(STACK[0x17EC]) << LODWORD(STACK[0x1600])) ^ 0x73BEB272;
  LODWORD(STACK[0xFCC]) = ((v309 & 0x40498D | v312 & ~(_DWORD)v309 & 0x734869CF) ^ 0x73082042)
                        + ((v309 & 0x8C414D8D | v312 & ~(_DWORD)v309) ^ 0x840498D)
                        - (((v309 & 0x8C414D8D | v312 & ~(_DWORD)v309) ^ 0x840498D) & 0x734869CF);
  v319 = v264 & 0x42424242 ^ 0x23632163;
  LODWORD(STACK[0x14E4]) = v319;
  LODWORD(v312) = v264 & 0x40404000 ^ 0x1412020 ^ (v257 ^ 0x40606043) & v319;
  LODWORD(v309) = (v264 & 0x40404000 | 1) ^ v319 & (v262 ^ 0x41414062);
  LODWORD(STACK[0x12D8]) = v267 & 0x39AD7045 ^ 0x92D1045 ^ (v311 ^ 0x3BF384D8) & (v267 ^ 0x8D2D9467);
  v320 = STACK[0x1438];
  LODWORD(v311) = v268 & 0xDE1328AC ^ 0xF150A423 ^ (v311 ^ 0xDC4DDC31) & LODWORD(STACK[0x1438]);
  LODWORD(STACK[0x1318]) = ((2 * v311) | 0x324660D6) - v311;
  LOBYTE(v258) = STACK[0x13F8];
  v321 = STACK[0x13E0];
  LODWORD(v312) = (_DWORD)v312 << LODWORD(STACK[0xCA4]) << LODWORD(STACK[0xCA8]);
  LODWORD(STACK[0xFC8]) = v312 + ((v309 ^ 0x600000) >> v258 >> v321);
  LODWORD(v312) = (2069950236 - (v312 & 0x500C310 ^ 0x223418 | 0x7B60EF1C) + (v312 & 0x500C310 ^ 0x223418 | 0x849F10E3)) ^ 0x84B1243B | ((v312 & 0x500C310 ^ 0x5C892C1) - 1) & 0x500C310 ^ 0x4110;
  LODWORD(STACK[0x1438]) = (v312 | 0x184C00C0) - 1926392729 + ((2 * v312) & 0xA43284E ^ 0xEFE7FF7F);
  LODWORD(v312) = (v317 ^ 0xD7FF38BC) & (v267 ^ 0x8D2D9467) ^ v267 & 0xF6DE199D;
  LODWORD(v311) = ((((((v317 ^ 0x90BC9FFB) & v320 ^ v268 & 0xB19DBEDA) & 0xD7D51C77 ^ 0x47541C67)
                   + (((v317 ^ 0x90BC9FFB) & v320 ^ v268 & 0xB19DBEDA) & 0x282AE388 ^ 0x2008A089)
                   - 1) ^ 0xE65128AD) >> LODWORD(STACK[0xCF0]) >> LODWORD(STACK[0xCF4])) | ((((v312 & 0x41B8FBFE ^ 0x41A0EBFF)
                                                                                            + (v312 & 0xBE470401)
                                                                                            - 1) ^ 0xC5ACFBFB) << v285 << v286);
  LODWORD(STACK[0xFC4]) = v311 - 1926392729 - ((2 * v311) & 0x1A5B28CE);
  LODWORD(v312) = v264 & 0x29292928 ^ 0x9C9DBC9C;
  v322 = (((v257 ^ 0x84858DA4) & v312 ^ v264 & 0x9280900) & 0x8988A18C ^ 0xCA80E0CD)
       + (((v257 ^ 0x84858DA4) & v312 ^ v264 & 0x9280900) & 0x34351C30);
  LODWORD(v309) = v264 & 0x20212928 ^ 0x64251021 ^ v312 & (v262 ^ 0xA908AD1C);
  LODWORD(STACK[0x12D0]) = ((2 * v309) | 0x6FA1C86C) - v309;
  v323 = v259 & 0x29292928 ^ 0x9C9DBC9C;
  LODWORD(STACK[0xB64]) = v323;
  LODWORD(STACK[0xFC0]) = ((((v259 & 0x21002820 ^ 0x3D5BF719 ^ v323 & (v268 ^ 0x28B92810)) - 1) ^ 0xB9CF4B0C) >> LODWORD(STACK[0xCB0]) >> LODWORD(STACK[0xCAC])) | ((v259 & 0x9292908 ^ 0x1C193C88 ^ v323 & (v267 ^ 0x9014A9AC)) << v49 << LODWORD(STACK[0x10D0]));
  LODWORD(STACK[0x1300]) = ((v312 & (v267 ^ 0x9C09BC34) ^ v264 & 0x1202800) & 0xDAD81A4 ^ 0xDC983A5)
                         + ((v312 & (v267 ^ 0x9C09BC34) ^ v264 & 0x1202800) & 0xB0103C18 ^ 0x40000013);
  LODWORD(v311) = (v315 ^ 0x8D2D9467) % 0x101;
  v324 = (v300 ^ v314) % 0x101 - 1926392729 - ((2 * ((v300 ^ v314) % 0x101)) & 0xCE);
  LODWORD(STACK[0x12E0]) = v324;
  STACK[0xFB8] = (LODWORD(STACK[0x12EC]) - 1926337927);
  STACK[0xFB0] = (((v324 ^ 0xA6AD7F31) + 1498579151) ^ ((v324 ^ 0x19F11F8E) - 435232654) ^ ((v324 ^ 0x3271F4D8)
                                                                                          - 846329048))
               - 1926337927;
  LODWORD(STACK[0x12EC]) = v311 - 1926356367 - ((2 * v311 + 72724) & 0x128CE);
  LODWORD(STACK[0xFAC]) = v311 - 1926392729 - ((2 * v311) & 0xCE);
  LODWORD(v311) = v259 & 0xD3D3D3D2 ^ 0xFBBAE92B;
  LODWORD(v312) = v259 & 0x42C350D2 ^ 0x2E65071 ^ v311 & (v267 ^ 0xCBCAE090);
  v325 = STACK[0x1120];
  LODWORD(v309) = ((v311 & (v268 ^ 0x681BD0B8) ^ v259 & 0xC11240D2) & 0xC0DB21BB ^ 0x80DD252E)
                + (v311 & (v268 ^ 0x681BD0B8) ^ v259 & 0xC11240D2 ^ 0x61224091)
                - ((v311 & (v268 ^ 0x681BD0B8) ^ v259 & 0xC11240D2 ^ 0x61224091) & 0xC0DB21BB);
  LODWORD(v311) = (((((v257 ^ 0xD230C048) & v311 ^ v259 & 0x53115002) & 0xE1FBD350 ^ 0xE0EAC350)
                  + ((v257 ^ 0xD230C048) & v311 ^ v259 & 0x53115002 ^ 0x1115142A)
                  - (((v257 ^ 0xD230C048) & v311 ^ v259 & 0x53115002 ^ 0x1115142A) & 0xE1FBD350)) ^ 0xABF68751) << LODWORD(STACK[0x1330]) << LODWORD(STACK[0x1328]);
  LODWORD(v309) = v309 ^ 0x40CF2525;
  v326 = v309 >> LODWORD(STACK[0x10C0]) >> LODWORD(STACK[0x10C4]);
  LODWORD(STACK[0xFA8]) = v326
                        + ((((_DWORD)v312 - 382145370 - ((2 * (_DWORD)v312) & 0xD271D144)) ^ 0xA97CDCF4) << (STACK[0x1120] & 0xD ^ 5) << (STACK[0x1120] & 0x12 ^ 2));
  LODWORD(STACK[0xFA4]) = v311 | v326;
  LODWORD(STACK[0xFA0]) = v311 | (v309 >> v131 >> v287);
  LODWORD(v312) = (((2 * (v268 & 8 ^ 0x2F52E06D)) | 0x568E00A8) - (v268 & 8 ^ 0x2F52E06D) + 1421410220) ^ 0xCBB2A9;
  LODWORD(STACK[0xF9C]) = ((((2 * v312) | 0x7B876D8A) - v312 + 1111247163) ^ 0x391DE45D)
                        + (((v268 & 8 ^ 0x9BB7BDFD) - 1359048526) ^ 0x4AB64EAF);
  v327 = v264 & 0x56565656 ^ 0x39792B6D;
  v328 = v264 & 0x10101042 ^ 0x11100068 ^ v327 & (v267 ^ 0x1C3D040D);
  LODWORD(STACK[0x1330]) = v328;
  LODWORD(STACK[0x12C8]) = v264 & 0x42444250 ^ 0x8602268 ^ v327 & (v262 ^ 0x4749761F);
  LODWORD(STACK[0xF98]) = v328 << LODWORD(STACK[0x13A0]) << LODWORD(STACK[0x13B4]);
  v329 = v259 & 0x56565656 ^ 0x39792B6D;
  LODWORD(v311) = v259 & 0x50565410 ^ 0x12D2F533 ^ (v257 ^ 0x545B605E) & v329;
  LODWORD(STACK[0xB14]) = v329;
  LODWORD(v311) = ((((2 * (_DWORD)v311) & 0xCFAB785E) - (_DWORD)v311 - 1742060592) ^ 0x938896CA) << LODWORD(STACK[0x1858]);
  LOBYTE(v314) = STACK[0x1858];
  LODWORD(STACK[0x1858]) = STACK[0x1858];
  LODWORD(v309) = STACK[0x1840];
  LOBYTE(v265) = STACK[0x1840];
  LODWORD(STACK[0x1840]) = STACK[0x1840];
  LODWORD(STACK[0xF94]) = ((_DWORD)v311 << v309)
                        + (((((v329 & (v262 ^ 0x7A690170) ^ v259 & 0x56441416) & 0x177C573F ^ 0x137C46A9)
                           + ((v329 & (v262 ^ 0x7A690170) ^ v259 & 0x56441416) & 0x68032840 ^ 0xE0000001)
                           - 1) ^ 0xC23C47AC) >> v321 >> v258);
  LODWORD(STACK[0xB20]) = v327;
  LODWORD(v311) = v264 & 0x14140606 ^ 0x35008000 ^ v327 & (v268 ^ 0x38191269);
  v330 = ((2 * v311) & 0x9C55DCB6) - v311;
  LODWORD(STACK[0x1328]) = v259 & 0xCDCDCDCC;
  v331 = v259 & 0xCDCDCDCC ^ 0xEEAFEE2A;
  LODWORD(STACK[0x13A0]) = v331;
  v332 = v259 & 0x49440C04 ^ 0x4A260E20 ^ v331 & (v268 ^ 0xC64B8A42);
  LODWORD(v311) = v259 & 0xCD808908 ^ 0x5A00A22 ^ (v257 ^ 0x408F0F4C) & v331;
  LODWORD(STACK[0x1048]) = (((_DWORD)v311 - ((2 * (_DWORD)v311) & 0x92058718) - 921517155) ^ 0x104395) << LODWORD(STACK[0x1338]) << LODWORD(STACK[0x1370]);
  LODWORD(v309) = v264 & 0xCDCDCDCC ^ 0xEEAFEE2A;
  LODWORD(STACK[0xB24]) = v309;
  LODWORD(v312) = v264 & 0x8989CCC0 ^ 0xF95CD0DC ^ v309 & (v268 ^ 0x248668A4);
  LOBYTE(v328) = STACK[0xD44];
  LOBYTE(v331) = STACK[0xD40];
  LODWORD(STACK[0xF90]) = ((v264 & 0x8040C4C ^ 0xA060C28 ^ (v257 ^ 0x872B880A) & v309) << v328 << v331) ^ (((-1328084985 - (v312 | 0xB0D70807) + (v312 | 0x4F28F7F8)) ^ 0x1EDFCB26) >> v271 >> v318);
  v333 = v264 & 0xE5E5E5E4 ^ 0xF2B3D236;
  LODWORD(v311) = v264 & 0xE4C585A0 ^ 0x44458490 ^ v333 & (v267 ^ 0x73E011D4);
  LODWORD(STACK[0x13B4]) = (((2 * v311) | 0x5A6A74E4) - v311 - 758463090) ^ 0x9BF13ED0;
  LODWORD(STACK[0x1044]) = (v264 & 0x44058064 ^ 0x52018236 ^ v333 & (v262 ^ 0xD3201610)) >> LODWORD(STACK[0x1890]);
  LODWORD(STACK[0xB30]) = v333;
  LODWORD(STACK[0x1890]) = v264 & 0x854540 ^ 0x10835000 ^ (v257 ^ 0x95A2C126) & v333;
  LODWORD(v312) = v259 & 0xE5E5E5E4 ^ 0xF2B3D236;
  LODWORD(v311) = v259 & 0x8144C4A0 ^ 0x24254A0 ^ v312 & (v267 ^ 0x167340C6);
  LOBYTE(v271) = STACK[0x1390];
  LOBYTE(v324) = STACK[0x1410];
  LODWORD(STACK[0x1040]) = ((v322 - 1) ^ 0xC208F84C) << v271 << v324;
  LODWORD(v311) = (((2 * v311) & 0xD8682C0) - v311 + 2033499799) ^ 0xE9643A17;
  LODWORD(STACK[0xF8C]) = (_DWORD)v311 << v271 << v324;
  LODWORD(STACK[0xB2C]) = v312;
  LODWORD(v309) = v259 & 0xA0010440 ^ 0xB2130202 ^ v312 & (v268 ^ 0x37369224);
  LODWORD(STACK[0x1390]) = v309;
  LODWORD(STACK[0xF88]) = ((_DWORD)v311 << v314 << v265)
                        + (v309 >> LODWORD(STACK[0x1358]) >> LODWORD(STACK[0x1360]));
  LODWORD(v312) = v264 & 0x20202020 ^ 0x10103010;
  LODWORD(STACK[0xF84]) = (((v257 ^ 0x20300000) & v312 ^ (v264 & 0x20000020 | 0x101000)) << LODWORD(STACK[0xC10]) << LODWORD(STACK[0xCC4])) | ((((v264 & 0x20200000 ^ 0x7D221EB1 ^ v312 & (v262 ^ 0x20100030)) - 1) ^ 0x7D320EA0) >> LODWORD(STACK[0xD1C]) >> LODWORD(STACK[0xD18]));
  v334 = STACK[0x1138];
  LODWORD(STACK[0xB38]) = v259 & 0x20202020;
  v335 = v259 & 0x20202020 ^ 0x10103010;
  LODWORD(STACK[0xB3C]) = v335;
  LODWORD(v309) = (v259 & 0x200020 | 0x1104008) ^ 0x1005008 ^ v335 & (v262 ^ 0x100000);
  LODWORD(STACK[0xB40]) = v312;
  v336 = v312 & (v268 ^ 0x200010) ^ ((32 * ((v334 >> 4) & 1)) | 0x48C611C2);
  LODWORD(STACK[0xF80]) = (((((2 * v336) | 0xD4482B32) - v336 + 366733927) ^ 0xA2E2144B) >> v321 >> v258)
                        + ((v264 & 0x202000 ^ 0x10102000 ^ v312 & (v267 ^ 0x10103020)) << LODWORD(STACK[0xDA0]) << LODWORD(STACK[0xD9C]));
  LODWORD(v311) = ((v259 & 0x200020 ^ 0xC1B04EED ^ (v257 ^ 0x10100010) & v335) - 1) ^ 0xD1A05EFC;
  LODWORD(v312) = v325 & 0x13 ^ 3;
  v337 = v325 & 0xC ^ 4;
  LODWORD(v311) = (_DWORD)v311 << v337 << v312;
  LOBYTE(v322) = STACK[0x1490];
  LOBYTE(v314) = STACK[0x1480];
  LODWORD(v309) = v309 >> v322 >> v314;
  LODWORD(STACK[0xF7C]) = v311 + v309;
  LODWORD(STACK[0xF78]) = v311 | v309;
  v338 = STACK[0x1670];
  LODWORD(v311) = v264 & 0x140C041C ^ 0x958C2104 ^ STACK[0x1670] & (v268 ^ 0x1A02101A);
  v339 = STACK[0x1670];
  LODWORD(v309) = v264 & 0x8041010 ^ 0x8064013 ^ STACK[0x1670] & (v267 ^ 0x40A0414);
  LODWORD(STACK[0x1410]) = -1219242232 - (v309 | 0xB753D708) + (v309 | 0x48AC28F7);
  LODWORD(v309) = v264 & 0x1C1C1C00 ^ 0x501423 ^ (v257 ^ 0x10100A04) & v338;
  v340 = v259 & 0x10101C ^ 0xF6EE76AB ^ STACK[0x1750] & (v267 ^ 0xC1E0618);
  LOBYTE(v338) = STACK[0x1380];
  v341 = ((v330 + 827658532) ^ 0x35659328u) >> v338;
  v342 = v332 >> v338;
  v343 = ((((STACK[0x1750] & (v262 ^ 0x120A0416) ^ v259 & 0x1C041010) & 0x4180C10 ^ 0x4B9ED00)
         + (STACK[0x1750] & (v262 ^ 0x120A0416) ^ v259 & 0x1C041010 ^ 0x30400050)
         - ((STACK[0x1750] & (v262 ^ 0x120A0416) ^ v259 & 0x1C041010 ^ 0x30400050) & 0x24580C50)) ^ 0x2BFED00u) >> v338;
  LOBYTE(v338) = STACK[0x13F0];
  LODWORD(STACK[0xF74]) = v341 >> v338;
  LODWORD(STACK[0x103C]) = v342 >> v338;
  LOBYTE(v49) = STACK[0xBD4];
  LOBYTE(v300) = STACK[0xBD8];
  v344 = (v343 >> v338) ^ (((v340 - 1) ^ 0xF6FC74A8) << v49 << v300);
  v345 = v339 & (v262 ^ 0x1E020E14) ^ v264 & 0x100C1810;
  LODWORD(STACK[0xF70]) = v344;
  LODWORD(STACK[0x13F0]) = (v344 & 0x10 ^ 0x10) + (v344 & 0x10);
  v346 = (v345 ^ 0x12060202u) >> LODWORD(STACK[0x1730]) >> LODWORD(STACK[0x16F0]);
  LODWORD(v309) = (((_DWORD)v309 - ((2 * (_DWORD)v309) & 0x18A8182C) + 1827982550) ^ 0x78B0DEF7) << v331 << v328;
  LODWORD(STACK[0xF6C]) = v309;
  LODWORD(STACK[0xF68]) = (v309 | v346) - 1926392729 - ((2 * (v309 | v346)) & 0x1A5B28CE);
  LODWORD(STACK[0xF64]) = (v345 & 0x14 ^ 0x175) + (v345 & 0x14);
  LODWORD(v309) = ((v334 & 0xA10C048D ^ 0xB21A5448) + (v334 & 0xCA1A920 ^ 0xCE0A023) - 1) ^ 0x33D7704F;
  LODWORD(STACK[0xF60]) = v309;
  LODWORD(v309) = 2 * v309;
  v347 = (v309 ^ 0xADADADAD) & (v262 ^ 0xDFEEA375) ^ v309 & 0x52C33712;
  v348 = (LODWORD(STACK[0x12D0]) + 1211046858) ^ 0xD7F0CC0F;
  LOBYTE(v331) = STACK[0x13C0];
  LODWORD(v311) = (((_DWORD)v311 - ((2 * (_DWORD)v311) & 0x1E046438) - 1895664932) ^ 0xC8857D8u) >> v331;
  v349 = (((v347 & 0x257B9BD4 ^ 0x253B8BD5) + (v347 & 0xDA84642B) - 1) ^ 0x25BAAED4) >> v331;
  v350 = v348 >> v331;
  LOBYTE(v331) = STACK[0x15F0];
  LODWORD(STACK[0xF5C]) = v350 >> v331;
  LODWORD(STACK[0xF58]) = v311 >> v331;
  LODWORD(STACK[0xB60]) = v312;
  LODWORD(STACK[0xB5C]) = v337;
  LODWORD(v311) = (v349 >> v331) ^ ((v309 & 0x5830AF9E ^ 0x820AD8D ^ (v309 ^ 0xADADADAD) & (v267 ^ 0xD51D3BF8)) << v312 << v337);
  LODWORD(STACK[0xF54]) = v311 - 1926392729 - ((2 * v311) & 0x1A5B28CE);
  v351 = v259 & 0x5B5B5B5A ^ 0xB7F6A5E7;
  LODWORD(v311) = v259 & 0x5203400A ^ 0x12010008 ^ (v257 ^ 0x7F8AF46D) & v351;
  LODWORD(v309) = v259 & 0xA591010 ^ 0xAA550090 ^ v351 & (v268 ^ 0x2770A4F6);
  LOBYTE(v312) = STACK[0x1350];
  LOBYTE(v331) = STACK[0x1348];
  LODWORD(STACK[0x1038]) = v348 >> v312 >> v331;
  LODWORD(v309) = ((((2 * (_DWORD)v309) | 0xEFB9C778) - v309 - 2010964924) ^ 0x7FDDC3AD) >> v331 >> v312;
  v352 = v259 & 0x51185A4A ^ 0xA5282023 ^ v351 & (v267 ^ 0x78956A0C);
  LOBYTE(v331) = STACK[0x1428];
  LODWORD(STACK[0xF50]) = (((((2 * (_DWORD)v311) | 0x5C962500) - (_DWORD)v311 + 1370811776) ^ 0xEEC328A) << v331) | v309;
  LODWORD(v312) = v325 & 0x1A ^ 2;
  LODWORD(v311) = ((-131513104 - (v352 | 0xF82944F0) + (v352 | 0x7D6BB0F)) ^ 0x174E3F4F) << LODWORD(STACK[0xBDC]);
  LODWORD(STACK[0xB34]) = v312;
  LODWORD(STACK[0xF4C]) = v309 + ((_DWORD)v311 << v312);
  v353 = STACK[0x12F8];
  LODWORD(v311) = ((((v257 ^ 0x78D021E8) & v353 ^ v259 & 0xB1B1B180) & 0x20608170 ^ 0x648072)
                 + ((v257 ^ 0x78D021E8) & v353 ^ v259 & 0xB1B1B180 ^ 0xF0102188)
                 - (((v257 ^ 0x78D021E8) & v353 ^ v259 & 0xB1B1B180 ^ 0xF0102188) & 0x20608170)) ^ 0x10BD10F2;
  v354 = v259 & 0x10312030 ^ 0x56700406 ^ STACK[0x12F8] & (v268 ^ 0xD158B850);
  v355 = (204771425 - v354 + ((2 * v354) | 0xE796DAE2) + 558) ^ 0xEDFA4167;
  LODWORD(STACK[0xF48]) = ((_DWORD)v311 << LODWORD(STACK[0x15C0]) << LODWORD(STACK[0x1520])) ^ (v355 >> v314 >> v322);
  v356 = v259 & 0x8120B180 ^ 0xB20A180 ^ v353 & (v262 ^ 0x921E8);
  v357 = v325 & 0xA ^ 2;
  v358 = v325 & 0x15 ^ 5;
  LODWORD(STACK[0xF44]) = (((((v353 & (v267 ^ 0x28705018) ^ v259 & 0xA1118030) & 0x48F8E090 ^ 0x4CEAE481)
                           + (v353 & (v267 ^ 0x28705018) ^ v259 & 0xA1118030 ^ 0x2111025C)
                           - ((v353 & (v267 ^ 0x28705018) ^ v259 & 0xA1118030 ^ 0x2111025C) & 0x48F8E294)) ^ 0xEDA22491) << v357 << (v325 & 0x15 ^ 5))
                        + (((((2 * v356) | 0x8D6FC7C) - v356 - 74153534) ^ 0x874B6FB6) >> LODWORD(STACK[0xCF0]) >> LODWORD(STACK[0xCF4]));
  LODWORD(v309) = v264 & 0x12101B0 ^ 0x10247B0 ^ (v257 ^ 0xC000D1D8) & STACK[0x12F0];
  v359 = LODWORD(STACK[0x12C8]) >> v321 >> v258;
  LODWORD(STACK[0x15C0]) = ((((STACK[0x12F0] & (v268 ^ 0x202881A8) ^ v264 & 0xA1011180) & 0x71A949B0 ^ 0x71A94935)
                           + ((STACK[0x12F0] & (v268 ^ 0x202881A8) ^ v264 & 0xA1011180) & 0x8850B048)
                           - 1) ^ 0xF9A8597C) >> v258 >> v321;
  LODWORD(v309) = ((-1745877545 - (v309 | 0x97F005D7) + (v309 | 0x680FFA28)) ^ 0x2104FD80) << v331;
  LODWORD(STACK[0xF3C]) = v309 - 1926392729 - ((2 * v309) & 0x1A5B28CE);
  LOBYTE(v338) = STACK[0x17EC];
  LOBYTE(v356) = STACK[0x1600];
  LODWORD(STACK[0xF38]) = LODWORD(STACK[0x12D8]) << v338 << v356;
  LODWORD(v311) = ((_DWORD)v311 << v356 << v338) ^ (v355 >> LODWORD(STACK[0x10C4]) >> LODWORD(STACK[0x10C0]));
  LODWORD(STACK[0xF34]) = v311 - 1926392729 - ((2 * v311) & 0x1A5B28CE);
  v360 = STACK[0x14E4];
  LODWORD(v311) = v264 & 0x42404042 ^ 0xE25400D2 ^ STACK[0x14E4] & (v267 ^ 0x63404020);
  LOBYTE(v322) = STACK[0x1800];
  LOBYTE(v314) = STACK[0x1818];
  LODWORD(STACK[0xF30]) = LODWORD(STACK[0x1390]) >> v322 >> v314;
  LODWORD(v309) = (((v360 & (v262 ^ 0x20634041) & 0x1012200 ^ 0x80852298)
                  + (v264 & 0x424002 ^ 0x3510C024 ^ v360 & (v262 ^ 0x20634041))
                  - ((v264 & 0x424002 ^ 0x3510C024 ^ v360 & (v262 ^ 0x20634041)) & 0x1012200)) ^ 0x95D7E29E) >> v314 >> v322;
  v361 = (v311 | 0xEB6A66B6) - (v311 | 0x14959949) + 345348425;
  LODWORD(STACK[0xF2C]) = v309 | ((v361 ^ 0x2B5F6627) << v331);
  LODWORD(STACK[0xC0C]) = v259;
  LODWORD(v309) = (((v259 ^ 0xEBFE399A) & 0x70F54C5C)
                 - ((v259 ^ 0xEBFE399A) & 0x850408)
                 + ((v259 ^ 0xEBFE399A) & 0x850408 ^ 0x8D87372A)) ^ (v259 ^ 0xEBFE399A) & 0x32B70E1E;
  v362 = ((v309 & 0x8404D05C ^ 0x85012109) + (v309 & 0x5ADA0E82 ^ 0x48DA0C83) - 2) ^ 0xDC04E41F;
  v363 = v362 - 790193294 - ((2 * v362) & 0xA18D36E4);
  v364 = v363 & 0x1D00CA43 ^ 0xD00C001 ^ (v257 ^ 0x902D5E24) & (v363 ^ 0x2C9E658C);
  v365 = (v363 ^ 0x2C9E658C) & (v262 ^ 0xD92CDF6E) ^ v363 & 0x54014B09;
  v366 = ((((v365 & 0x50788501 ^ 0x10788400) + (v365 ^ 0x44014301) - ((v365 ^ 0x44014301) & 0x50788501)) ^ 0x10798708) >> LODWORD(STACK[0x1080]) >> LODWORD(STACK[0x1078])) | (((v364 - ((2 * v364) & 0xE9673366) + 1957927347) ^ 0x75B319B2) << LODWORD(STACK[0x13D0]) << LODWORD(STACK[0x13CC]));
  v367 = v366 - 1926392729 - ((2 * v366) & 0x1A5B28CE);
  v368 = ((((v360 & (v268 ^ 0x20624243) ^ v264 & 0x424200) & 0x22234002 ^ 0x2220580E)
         + (v360 & (v268 ^ 0x20624243) ^ v264 & 0x424200 ^ 0x904B8020)
         - ((v360 & (v268 ^ 0x20624243) ^ v264 & 0x424200 ^ 0x904B8020) & 0x3223C002)) ^ 0x832B580E) >> LODWORD(STACK[0x1650]) >> LODWORD(STACK[0x1708]);
  LODWORD(STACK[0xF28]) = v368
                        + ((v361 ^ 0x2B5F6627) << v300 << v49)
                        - 1926392729
                        - ((2 * (v368 + ((v361 ^ 0x2B5F6627) << v300 << v49))) & 0x1A5B28CE);
  LODWORD(v311) = ((((v360 & (v268 ^ 0x20036122) ^ v264 & 0x24040) & 0x23624361 ^ 0xBE0C321)
                  + (v360 & (v268 ^ 0x20036122) ^ v264 & 0x24040 ^ 0x241A2044)
                  - ((v360 & (v268 ^ 0x20036122) ^ v264 & 0x24040 ^ 0x241A2044) & 0x23724365)) ^ 0x2ECAC260u) >> LODWORD(STACK[0x1498]) >> LODWORD(STACK[0x14A8]);
  v369 = STACK[0xCA8];
  LOBYTE(v312) = STACK[0xCA4];
  LODWORD(STACK[0xF24]) = (v311 - 1926392729 - ((2 * v311) & 0x1A5B28CE)) ^ (((((v360 & (v267 ^ 0x2420361) ^ v264 & 0x2420202) & 0x63000221 ^ 0x660082A1)
                                                                             + (v360 & (v267 ^ 0x2420361) ^ v264 & 0x2420202 ^ 0x19A80C02)
                                                                             - ((v360 & (v267 ^ 0x2420361) ^ v264 & 0x2420202 ^ 0x19A80C02) & 0x63080621)) ^ 0x7DC38BA1) << LODWORD(STACK[0xCA8]) << v312);
  v370 = (v257 ^ 0xBF88B5AF) & v351 ^ (v259 & 0x5B5B5B5A ^ 0x1E724CE8) & 0x122101C8;
  LODWORD(STACK[0x1008]) = ((((v370 & 0x31A89FBF ^ 0x1A89E3F) + (v370 & 0xCE576040 ^ 0x10001) - 1) ^ 0x212DBF37) << LODWORD(STACK[0x1858]) << LODWORD(STACK[0x1840])) | ((v351 & (v262 ^ 0x504EBF0) ^ 0x88006907 ^ (v259 & 0x5B5B5B5A ^ 0x1E724CE8) & 0x8295F92) >> LODWORD(STACK[0xCB0]) >> LODWORD(STACK[0xCAC]));
  LODWORD(v311) = LODWORD(STACK[0x1328]) ^ 0x84908CC;
  v371 = STACK[0x13A0] & (v262 ^ 0xC6309CD6) ^ 0x480000A0 ^ v311 & 0x490D0880;
  v372 = STACK[0x13A0] & (v267 ^ 0x979DF558) ^ v311 & 0x880410C ^ 0x2A06026;
  LODWORD(STACK[0xF20]) = ((155804190 - (v371 | 0x949621E) + (v371 | 0xF6B69DE1)) ^ 0xFCB29DE1) >> LODWORD(STACK[0x139C]) >> LODWORD(STACK[0x1368]);
  LODWORD(STACK[0x16F0]) = STACK[0x156C];
  LODWORD(STACK[0x156C]) = STACK[0x17D8];
  LODWORD(STACK[0x14E4]) = STACK[0x1598];
  LODWORD(STACK[0x1670]) = STACK[0x15E0];
  LODWORD(STACK[0x1750]) = LODWORD(STACK[0x1870]) ^ 0x5CDDD8D6;
  v373 = LODWORD(STACK[0x1540]) ^ 0x95C34CBu;
  LODWORD(STACK[0x17EC]) = LODWORD(STACK[0x14D8]) ^ 0x142E3303;
  LODWORD(STACK[0x1730]) = LODWORD(STACK[0x1850]) ^ 0xB453F0BE;
  LODWORD(STACK[0x17D8]) = STACK[0x1408];
  LODWORD(STACK[0x1848]) = (LODWORD(STACK[0x1848]) - 1975851464) ^ 0xB8ED88A7;
  LODWORD(STACK[0x1858]) = (LODWORD(STACK[0x1718]) - 1) ^ 0xFB22C3BC;
  STACK[0x1840] = LODWORD(STACK[0x1310]) ^ 0x9CBF0774;
  LODWORD(STACK[0x1850]) = LODWORD(STACK[0x16B8]) ^ 0x7A5816DF;
  LODWORD(STACK[0x1870]) = (LODWORD(STACK[0x1690]) + 239133745) ^ 0x24D31D4;
  LODWORD(STACK[0x15F0]) = LODWORD(STACK[0x17CC]) ^ 0x3066FD71;
  LODWORD(STACK[0x159C]) ^= 0x57DEA285u;
  LODWORD(STACK[0x1708]) = LODWORD(STACK[0x1588]) - 1634635079;
  LODWORD(STACK[0x1004]) = v267 ^ 0x7DDCE200;
  LODWORD(STACK[0x1000]) = ((LODWORD(STACK[0x1418]) - 135199303) ^ 0xC4AE643) << v49 << v300;
  LODWORD(STACK[0xFFC]) = LODWORD(STACK[0x13B8]) >> LODWORD(STACK[0x1098]) >> LODWORD(STACK[0x10A0]);
  LODWORD(STACK[0xFF8]) = LODWORD(STACK[0x1388]) - 1377866970;
  LODWORD(STACK[0xFF4]) = LODWORD(STACK[0x1364]) | 8;
  LODWORD(STACK[0xF1C]) = LODWORD(STACK[0x1340]) - 1994873955;
  LODWORD(STACK[0xF18]) = (LODWORD(STACK[0x130C]) ^ 0x2E31C4E0) + 1;
  STACK[0xF10] = LODWORD(STACK[0x1320]) ^ 0xBA14839F;
  LODWORD(STACK[0xF0C]) = ((LODWORD(STACK[0x1318]) - 421736555) ^ 0x6472946Cu) >> LODWORD(STACK[0xCC0]) >> LODWORD(STACK[0xCBC]);
  LODWORD(STACK[0xF08]) = LODWORD(STACK[0x1438]) + 1;
  LODWORD(STACK[0xF04]) = ((LODWORD(STACK[0x1300]) - 2) ^ 0x5DCDABA6) << LODWORD(STACK[0xDA0]) << LODWORD(STACK[0xD9C]);
  LODWORD(STACK[0xF00]) = (LODWORD(STACK[0x12E0]) ^ 0x2E31C4E0) - 183748300;
  LODWORD(STACK[0xEFC]) = v262 ^ 0x92101907;
  STACK[0xEF0] = LODWORD(STACK[0x12EC]) ^ 0x8D2D9467;
  LODWORD(STACK[0xB18]) = v358;
  LODWORD(v311) = LODWORD(STACK[0x1330]) << v358;
  LODWORD(STACK[0xB1C]) = v357;
  v374 = (_DWORD)v311 << v357;
  LODWORD(STACK[0xEE8]) = LODWORD(STACK[0x13B4]) << LODWORD(STACK[0xCD8]) << LODWORD(STACK[0xCDC]);
  LODWORD(STACK[0xEE4]) = (LODWORD(STACK[0x1890]) << v369 << v312) + LODWORD(STACK[0x1044]);
  LODWORD(STACK[0xEE0]) = (LODWORD(STACK[0x1410]) ^ 0x40AC68E6) << LODWORD(STACK[0xBCC]) << LODWORD(STACK[0xBC8]);
  LODWORD(STACK[0xEDC]) = LODWORD(STACK[0x13F0]) | 0x10;
  LODWORD(STACK[0x13B4]) = LODWORD(STACK[0x15C0]) ^ 0x8D2D9467;
  LODWORD(STACK[0xED8]) = v367 ^ LODWORD(STACK[0x18A8]);
  LODWORD(STACK[0xEA8]) = v361 ^ 0xA672F240;
  LODWORD(STACK[0xEA4]) = v309 ^ 0x40AAA30D;
  LODWORD(v311) = ~v325 & 2;
  LODWORD(STACK[0xB68]) = v311;
  LODWORD(STACK[0xB6C]) = v325 & 0x1D ^ 5;
  LODWORD(STACK[0xED4]) = v372 << v311 << (v325 & 0x1D ^ 5);
  v375 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0x1500])) - 8);
  LODWORD(STACK[0x17CC]) = STACK[0x15DC];
  LODWORD(STACK[0x1860]) = STACK[0x1538];
  STACK[0x16B8] = v373;
  LODWORD(STACK[0x15C0]) = STACK[0x13A8];
  LODWORD(STACK[0x1890]) = STACK[0x17B0];
  LODWORD(STACK[0x1598]) = STACK[0x1470];
  LODWORD(STACK[0x1438]) = STACK[0x1820];
  LODWORD(STACK[0x1690]) = STACK[0x13D8];
  LODWORD(STACK[0x17B0]) = STACK[0x1548];
  LODWORD(STACK[0xFF0]) = LODWORD(STACK[0x1138]) ^ 0x8D2D9467;
  LODWORD(STACK[0xFEC]) = v268 ^ 0x426B1CD2;
  LODWORD(STACK[0xFE8]) = v257 ^ 0x4827AF2B;
  LODWORD(STACK[0xFE4]) = v268 ^ 0x178011DC;
  LODWORD(STACK[0xED0]) = LODWORD(STACK[0x1040]) + LODWORD(STACK[0x1038]);
  LODWORD(STACK[0xC4C]) = v264;
  LODWORD(STACK[0xFDC]) = v264 & 0xD3D3D3D2;
  LODWORD(STACK[0xECC]) = v257 ^ 0xA5255697;
  LODWORD(STACK[0xF40]) = v359;
  LODWORD(STACK[0xEEC]) = v374;
  LODWORD(STACK[0xEC8]) = v374 + v359;
  LODWORD(STACK[0xEC4]) = LODWORD(STACK[0x1048]) + LODWORD(STACK[0x103C]);
  LODWORD(STACK[0xEC0]) = v262 ^ 0x9B1B92E3;
  LODWORD(STACK[0xEBC]) = v267 ^ 0x1F112000;
  LODWORD(STACK[0xFD8]) = v325 & 0x18;
  LODWORD(STACK[0x1818]) = STACK[0x1788];
  return v375();
}

uint64_t sub_1002C43DC(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  char v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  BOOL v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  unsigned int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  unsigned int v263;
  int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  BOOL v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  unsigned int v309;
  int v310;
  int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  int v319;
  unsigned int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  unsigned int v325;
  int v326;
  BOOL v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  BOOL v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  unsigned int v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  BOOL v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  int v421;
  unsigned int v422;
  int v423;
  unsigned int v424;
  int v425;
  int v426;
  int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  int v432;
  unsigned int v433;
  int v434;
  unsigned int v435;
  unint64_t v436;
  int v437;
  int v438;
  unsigned int v439;
  int v440;
  int v441;
  int v442;
  unsigned int v443;
  int v444;
  int v445;
  unsigned int v446;
  int v447;
  int v448;
  int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  int v453;
  int v454;
  unsigned int v455;
  int v456;
  int v457;
  unsigned int v458;
  int v459;
  int v460;
  int v461;
  int v462;
  int v463;
  unsigned int v464;
  int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  int v469;
  unsigned __int8 v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  uint64_t v487;
  unint64_t v488;
  unint64_t v489;
  unint64_t v490;
  unint64_t v491;
  unint64_t v492;
  unint64_t v493;
  unint64_t v494;
  uint64_t v495;
  unint64_t v496;
  unint64_t v497;
  unint64_t v498;
  int v499;
  unint64_t v500;
  BOOL v501;
  uint64_t v502;
  int v503;
  int v504;
  unsigned int v505;
  unsigned int v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  unint64_t v516;
  uint64_t v517;
  uint64_t v518;
  int v519;
  uint64_t v520;
  int v521;
  int v522;
  int v523;
  unint64_t v524;
  int v525;
  unint64_t v526;
  int v527;
  int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  int v532;
  unsigned __int8 v533;
  int v534;
  unsigned int v535;
  int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  unsigned int v544;
  uint64_t v545;
  uint64_t v546;
  unint64_t v547;
  unint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  unint64_t v557;
  unsigned int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  unsigned int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  unsigned int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  BOOL v580;
  int v581;
  int v582;
  unsigned int v583;
  int v584;
  int v585;
  unsigned int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  unsigned int v598;
  int v599;
  unsigned int v600;
  int v601;
  int v602;
  int v603;
  unsigned int v604;
  int v605;
  int v606;
  unint64_t v607;
  int v608;
  unsigned int v609;
  int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  unsigned int v618;
  unsigned int v619;
  unsigned int v620;
  int v621;
  unsigned int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  uint64_t v626;
  unint64_t v627;
  uint64_t v628;
  unint64_t v629;
  uint64_t v630;
  unint64_t v631;
  unint64_t v632;
  unint64_t v633;
  unint64_t v634;
  unint64_t v635;
  unint64_t v636;
  uint64_t v637;
  int v638;
  int v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  unsigned int v643;
  int v644;
  int v645;
  int v646;
  int v647;
  int v648;
  unsigned int v649;
  int v650;
  unsigned int v651;
  unsigned int v652;
  uint64_t v653;
  unint64_t v654;
  unint64_t v655;
  unint64_t v656;
  uint64_t v657;
  unint64_t v658;
  unint64_t v659;
  unint64_t v660;
  uint64_t v661;
  unint64_t v662;
  unint64_t v663;
  unint64_t v664;
  int v665;
  unint64_t v666;
  unsigned int v667;
  unsigned int v668;
  unint64_t v669;
  int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  unsigned int v676;
  int v677;
  unint64_t v678;
  int v679;
  int v680;
  int v681;
  int v682;
  int v683;
  int v684;
  int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  unsigned int v693;
  int v694;
  int v695;
  unsigned int v696;
  unsigned int v697;
  int v698;
  int v699;
  unsigned int v700;
  int v701;
  int v702;
  int v703;
  int v704;
  unint64_t v705;
  uint64_t v706;
  unint64_t v707;
  unint64_t v708;
  unint64_t v709;
  unint64_t v710;
  unint64_t v711;
  uint64_t v712;
  unint64_t v713;
  unint64_t v714;
  unint64_t v715;
  unint64_t v716;
  int v717;
  unint64_t v718;
  uint64_t v719;
  unint64_t v720;
  uint64_t v721;
  unint64_t v722;
  unint64_t v723;
  unint64_t v724;
  uint64_t v725;
  unint64_t v726;
  unint64_t v727;
  uint64_t v728;
  unint64_t v729;
  int v730;
  int v731;
  unsigned int v732;
  uint64_t v733;
  unint64_t v734;
  unint64_t v735;
  unint64_t v736;
  unint64_t v737;
  uint64_t v738;
  unint64_t v739;
  uint64_t v740;
  unint64_t v741;
  unint64_t v742;
  uint64_t v743;
  unint64_t v744;
  int v745;
  int v746;
  unsigned int v747;
  int v748;
  unsigned int v749;
  unsigned int v750;
  unsigned int v751;
  unsigned int v752;
  uint64_t v753;
  unint64_t v754;
  unint64_t v755;
  unint64_t v756;
  unint64_t v757;
  uint64_t v758;
  unint64_t v759;
  unint64_t v760;
  unint64_t v761;
  unint64_t v762;
  unint64_t v763;
  unint64_t v764;
  int v765;
  uint64_t v766;
  unint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  unint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  unint64_t v778;
  int v779;
  uint64_t (*v780)(uint64_t);
  uint64_t v781;
  int v782;

  v15 = (((v9 ^ 0x70F2783B) - 1894938683) ^ ((v9 ^ 0x381514ED) - 940905709) ^ ((v9 ^ 0xC5CAF8B1) + 976553807))
      + 1784492997;
  v16 = (v15 ^ 0xF36E0312) & (2 * (v15 & 0xE36EAB43)) ^ v15 & 0xE36EAB43;
  v17 = ((2 * (v15 ^ 0xB53B4596)) ^ 0xACABDDAA) & (v15 ^ 0xB53B4596) ^ (2 * (v15 ^ 0xB53B4596)) & 0x5655EED4;
  v18 = (v17 ^ 0x401CC00) & (4 * v16) ^ v16;
  v19 = ((4 * (v17 ^ 0x52542255)) ^ 0x5957BB54) & (v17 ^ 0x52542255) ^ (4 * (v17 ^ 0x52542255)) & 0x5655EED4;
  v20 = (v19 ^ 0x5055AA50) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x6004481)) ^ 0x655EED50) & (v19 ^ 0x6004481) ^ (16 * (v19 ^ 0x6004481)) & 0x5655EED0;
  v22 = v20 ^ 0x5655EED5 ^ (v21 ^ 0x4454EC85) & (v20 << 8);
  v23 = v15 ^ (2
             * ((v22 << 16) & 0x56550000 ^ v22 ^ ((v22 << 16) ^ 0x6ED50000) & (((v21 ^ 0x12010285) << 8) & 0x56550000 ^ 0x2110000 ^ (((v21 ^ 0x12010285) << 8) ^ 0x55EE0000) & (v21 ^ 0x12010285))));
  v24 = LODWORD(STACK[0x1708]) + 1434757325;
  v25 = (2 * (v24 & 0x991778E1)) & (v24 ^ 0x5BB769DB) ^ v24 & 0x991778E1 ^ ((2 * (v24 & 0x991778E1)) & 0x2201102 | 0x80000020);
  v26 = (2 * (v24 ^ 0x5BB769DB)) & 0xC2A0113A ^ 0x42A0110A ^ ((2 * (v24 ^ 0x5BB769DB)) ^ 0x85402274) & (v24 ^ 0x5BB769DB);
  v27 = (4 * v25) & 0xC2A01138 ^ v25 ^ ((4 * v25) ^ 0x80) & v26;
  v28 = (4 * v26) & 0xC2A01138 ^ 0xC0201112 ^ ((4 * v26) ^ 0xA8044E8) & v26;
  v29 = (16 * v27) & 0xC2A01130 ^ v27 ^ ((16 * v27) ^ 0x200) & v28;
  v30 = (16 * v28) & 0xC2A01130 ^ 0xC0A0001A ^ ((16 * v28) ^ 0x2A0113A0) & v28;
  v31 = v29 ^ 0x42A0111A ^ (v29 << 8) & 0xC2A01100 ^ ((v29 << 8) ^ 0x2000) & v30;
  v32 = v24 ^ (2
             * ((v31 << 16) & 0x42A00000 ^ v31 ^ ((v31 << 16) ^ 0x113A0000) & ((v30 << 8) & 0x42A00000 ^ 0x42A00000 ^ ((v30 << 8) ^ 0x20110000) & v30)));
  v33 = STACK[0x1790];
  v34 = (((LODWORD(STACK[0x1898]) ^ 0x5BEA241A) - 1542071322) ^ ((LODWORD(STACK[0x1898]) ^ 0xB068C0F0) + 1335312144) ^ ((LODWORD(STACK[0x1898]) ^ 0x66AF708D) - 1722773645))
      - 2042051820
      + (((v33 ^ 0xD2B9E5F3) + 759568909) ^ ((v33 ^ 0xAA6222F) - 178659887) ^ ((v33 ^ 0x553253BB) - 1429361595))
      + 1709;
  v35 = (v34 ^ 0x811F6D) & (2 * (v34 & 0x94125F0D)) ^ v34 & 0x94125F0D;
  v36 = ((2 * (v34 ^ 0x2885A767)) ^ 0x792FF0D4) & (v34 ^ 0x2885A767) ^ (2 * (v34 ^ 0x2885A767)) & 0xBC97F86A;
  v37 = (v36 ^ 0x3003F040) & (4 * v35) ^ v35;
  v38 = ((4 * (v36 ^ 0x8490082A)) ^ 0xF25FE1A8) & (v36 ^ 0x8490082A) ^ (4 * (v36 ^ 0x8490082A)) & 0xBC97F868;
  v39 = (v38 ^ 0xB017E020) & (16 * v37) ^ v37;
  v40 = ((16 * (v38 ^ 0xC801842)) ^ 0xC97F86A0) & (v38 ^ 0xC801842) ^ (16 * (v38 ^ 0xC801842)) & 0xBC97F860;
  v41 = v39 ^ 0xBC97F86A ^ (v40 ^ 0x88178000) & (v39 << 8);
  v42 = v34 ^ (2
             * ((v41 << 16) & 0x3C970000 ^ v41 ^ ((v41 << 16) ^ 0x786A0000) & (((v40 ^ a5) << 8) & 0xBC970000 ^ 0x28070000 ^ (((v40 ^ a5) << 8) ^ 0x17F80000) & (v40 ^ a5))));
  v43 = v23 ^ 0x4E42E28E;
  LODWORD(STACK[0x1428]) = v23 ^ 0x4E42E28E;
  LODWORD(STACK[0x1480]) = v42 ^ v23 ^ 0x4E42E28E;
  v44 = 1877389891
      * (((v42 ^ v43 ^ 0xBC13FBB5) - 556422252) ^ ((v42 ^ v43 ^ 0xC7D8EA48) - 1524712849) ^ ((v42 ^ v43 ^ 0x6BDF2A43)
                                                                                           + 152664678))
      - 1582861067;
  v45 = (v44 + HIWORD(v44) - ((v44 + HIWORD(v44)) >> 8)) ^ LODWORD(STACK[0x1780]);
  v46 = STACK[0x1780];
  LODWORD(STACK[0x1780]) = STACK[0x1780];
  v47 = 2034894531
      * (((v45 ^ 0x213D78D3) - 557676755) ^ ((v45 ^ 0xC1EA29A1) + 1041618527) ^ ((v45 ^ 0x6DFAC515) - 1845150997))
      + 1546725494;
  v48 = (v47 ^ 0xDBC723FE) & (2 * (v47 & 0xD3C74BFF)) ^ v47 & 0xD3C74BFF;
  v49 = ((2 * (v47 ^ 0x5845A0D4)) ^ 0x1705D656) & (v47 ^ 0x5845A0D4) ^ (2 * (v47 ^ 0x5845A0D4)) & 0x8B82EB2A;
  v50 = (v49 ^ 0x3804201) & (4 * v48) ^ v48;
  v51 = ((4 * (v49 ^ 0x88822929)) ^ 0x2E0BACAC) & (v49 ^ 0x88822929) ^ (4 * (v49 ^ 0x88822929)) & 0x8B82EB28;
  v52 = (v51 ^ (v8 + 29)) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x81804303)) ^ 0xB82EB2B0) & (v51 ^ 0x81804303) ^ (16 * (v51 ^ 0x81804303)) & 0x8B82EB20;
  v54 = v52 ^ 0x8B82EB2B ^ (v53 ^ (v12 + 4094)) & (v52 << 8);
  v55 = v47 ^ (2
             * ((v54 << 16) & 0xB820000 ^ v54 ^ ((v54 << 16) ^ 0x6B2B0000) & (((v53 ^ 0x380490B) << 8) & 0xB820000 ^ 0x9000000 ^ (((v53 ^ 0x380490B) << 8) ^ 0x82EB0000) & (v53 ^ 0x380490B))));
  v56 = (((v55 ^ 0xD8881D26) + 2023549720) ^ ((v55 ^ 0x3472BC08) - 1805235654) ^ ((v55 ^ 0x3E3C3C87) - 1641493833))
      - (((HIWORD(v55) ^ 0xC91E3147) - 1144223718) ^ ((HIWORD(v55) ^ 0x86C6BD25) - 200014724) ^ ((HIWORD(v55) ^ 0x4FD85EA4)
                                                                                               + 1024124923))
      + 1268935565;
  v57 = (v56 ^ 0x375D126A) & (2 * (v56 & 0xB45D9473)) ^ v56 & 0xB45D9473;
  v58 = ((2 * (v56 ^ 0x17D71A6E)) ^ 0x47151C3A) & (v56 ^ 0x17D71A6E) ^ (2 * (v56 ^ 0x17D71A6E)) & 0xA38A8E1C;
  v59 = (v58 ^ 0x3000019) & (4 * v57) ^ v57;
  v60 = ((4 * (v58 ^ 0xA08A8205)) ^ 0x8E2A3874) & (v58 ^ 0xA08A8205) ^ (4 * (v58 ^ 0xA08A8205)) & 0xA38A8E1C;
  v61 = (v60 ^ 0x820A0810) & (16 * v59) ^ v59;
  v62 = ((16 * (v60 ^ 0x21808609)) ^ 0x38A8E1D0) & (v60 ^ 0x21808609) ^ (16 * (v60 ^ 0x21808609)) & 0xA38A8E10;
  v63 = v61 ^ 0xA38A8E1D ^ (v62 ^ 0x2088800D) & (v61 << 8);
  v64 = v56 ^ (2
             * ((v63 << 16) & 0x238A0000 ^ v63 ^ ((v63 << 16) ^ 0xE1D0000) & (((v62 ^ 0x83020E0D) << 8) & 0x238A0000 ^ 0x21000000 ^ (((v62 ^ 0x83020E0D) << 8) ^ 0xA8E0000) & (v62 ^ 0x83020E0D))));
  LODWORD(STACK[0x13C0]) = v32;
  v65 = STACK[0x17A0];
  v66 = STACK[0x17A0];
  LODWORD(STACK[0x17A0]) = STACK[0x17A0];
  v67 = 239467589
      * ((((v64 >> 8) ^ 0xF75888)
        + (v64 ^ 0xF7588849)
        - 1926392729
        - ((2 * (((v64 >> 8) ^ 0xF75888) + (v64 ^ 0xF7588849))) & 0x1A5B28CE)) ^ v65);
  v68 = (((v32 ^ 0x22B46EA1) + 1282498477) ^ ((v32 ^ 0x439A2B65) + 761207401) ^ ((v32 ^ 0x7D391F51) + 335294045))
      - 1276149543
      + ((v67 - HIWORD(v67)) ^ ((v67 - HIWORD(v67)) >> 8));
  v69 = (v68 ^ 0x953E13AD) & (2 * (v68 & 0xD93E138E)) ^ v68 & 0xD93E138E;
  v70 = ((2 * (v68 ^ 0x276615B9)) ^ 0xFCB00C6E) & (v68 ^ 0x276615B9) ^ (2 * (v68 ^ 0x276615B9)) & 0xFE580636;
  v71 = (v70 ^ 0xEC100420) & (4 * v69) ^ v69;
  v72 = ((4 * (v70 ^ 0x2480211)) ^ 0xF96018DC) & (v70 ^ 0x2480211) ^ (4 * (v70 ^ 0x2480211)) & 0xFE580634;
  v73 = (v72 ^ 0xF8400000) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x6180623)) ^ 0xE5806370) & (v72 ^ 0x6180623) ^ (16 * (v72 ^ 0x6180623)) & 0xFE580630;
  v75 = v73 ^ 0xFE580637 ^ (v74 ^ 0xE4000200) & (v73 << 8);
  v76 = v68 ^ (2
             * ((v75 << 16) & 0x7E580000 ^ v75 ^ ((v75 << 16) ^ 0x6370000) & (((v74 ^ 0x1A580407) << 8) & 0xFE580000 ^ 0x26580000 ^ (((v74 ^ 0x1A580407) << 8) ^ 0x58060000) & (v74 ^ 0x1A580407))));
  v77 = STACK[0x1560];
  v78 = (((LODWORD(STACK[0x17D8]) ^ 0x125E19E) - 19259806) ^ ((LODWORD(STACK[0x17D8]) ^ 0x27E06A34) - 669018676) ^ ((LODWORD(STACK[0x17D8]) ^ 0xABE81FCD) + 1410850867))
      + (((v77 ^ 0x4CBDEB44) - 1287514948) ^ ((v77 ^ 0x83BDF3AD) + 2084703315) ^ ((v77 ^ 0x422D8C8E) - 1110281358));
  v79 = 1877389891 * ((v78 - 1484210891 - ((2 * v78 + 347492764) & 0x1A5B28CE)) ^ v43);
  v80 = v79 + HIWORD(v79);
  v81 = v80 - (v80 >> 8) - 1926392729 - ((2 * (v80 - (v80 >> 8))) & 0x1A5B28CE);
  v82 = 2034894531 * (v81 ^ v46) - ((2034894531 * (v81 ^ v46)) >> 16);
  v83 = (v82 + (v82 >> 8)) ^ v66;
  LODWORD(STACK[0x15E0]) = v83;
  v84 = ((((v83 ^ 0xF6133601) + 166513151) ^ ((v83 ^ 0x6D360675) - 1832257141) ^ ((v83 ^ 0x1608A413) - 369665043))
       - 1926392729)
      * ((v80 & 0xE45FC45 ^ 0xE45FC45) + (v80 & 0xE45FC45))
      + 1327083287;
  v85 = (v84 ^ 0x2CE41EEC) & (2 * (v84 & 0xB0E650E9)) ^ v84 & 0xB0E650E9;
  v86 = ((2 * (v84 ^ 0x2CA4BE6C)) ^ 0x3885DD0A) & (v84 ^ 0x2CA4BE6C) ^ (2 * (v84 ^ 0x2CA4BE6C)) & 0x9C42EE84;
  v87 = (v86 ^ 0x40E401) & (4 * v85) ^ v85;
  v88 = ((4 * (v86 ^ 0x84422285)) ^ 0x710BBA14) & (v86 ^ 0x84422285) ^ (4 * (v86 ^ 0x84422285)) & 0x9C42EE84;
  v89 = (v88 ^ 0x1002AA01) & (16 * v87) ^ v87;
  v90 = ((16 * (v88 ^ 0x8C404481)) ^ 0xC42EE850) & (v88 ^ 0x8C404481) ^ (16 * (v88 ^ 0x8C404481)) & 0x9C42EE80;
  v91 = v89 ^ 0x9C42EE85 ^ (v90 ^ 0x8402E800) & (v89 << 8);
  v92 = v84 ^ (2
             * ((v91 << 16) & 0x1C420000 ^ v91 ^ ((v91 << 16) ^ 0x6E850000) & (((v90 ^ 0x18400685) << 8) & 0x1C420000 ^ (((v90 ^ 0x18400685) << 8) ^ 0x42EE0000) & (v90 ^ 0x18400685) ^ 0x1C000000)));
  LODWORD(STACK[0x1508]) = v92;
  v93 = (v92 ^ 0x90638DE3) + (HIWORD(v92) ^ 0xFFFF6F9C) + 1;
  LODWORD(STACK[0x13CC]) = v32 ^ 0x1C175A95;
  v94 = -500632245 * ((v93 ^ (v93 >> 8)) + (v32 ^ 0x1C175A95)) + 1769274238;
  v95 = (v94 ^ 0x94C3D499) & (2 * (v94 & 0x968B0482)) ^ v94 & 0x968B0482;
  v96 = ((2 * (v94 ^ 0x90D1DC9D)) ^ 0xCB5B03E) & (v94 ^ 0x90D1DC9D) ^ (2 * (v94 ^ 0x90D1DC9D)) & 0x65AD81E;
  v97 = (v96 ^ 0x4125819) & (4 * v95) ^ v95;
  v98 = ((4 * (v96 ^ 0x24A4801)) ^ 0x196B607C) & (v96 ^ 0x24A4801) ^ (4 * (v96 ^ 0x24A4801)) & 0x65AD81C;
  v99 = (v98 ^ 0x4A4000) & (16 * v97) ^ v97;
  v100 = ((16 * (v98 ^ 0x6109803)) ^ 0x65AD81F0) & (v98 ^ 0x6109803) ^ (16 * (v98 ^ 0x6109803)) & 0x65AD810;
  v101 = v99 ^ 0x65AD81F ^ (v100 ^ 0x408800F) & (v99 << 8);
  v102 = v94 ^ (2
              * ((v101 << 16) & 0x65A0000 ^ v101 ^ ((v101 << 16) ^ 0x581F0000) & (((v100 ^ 0x252580F) << 8) & 0x65A0000 ^ 0x4020000 ^ (((v100 ^ 0x252580F) << 8) ^ 0x5AD80000) & (v100 ^ 0x252580F))));
  v103 = (HIWORD(v102) ^ 0x9A0A)
       - 1168865132
       + (((v102 ^ 0x5A53AF0) - 310516267) ^ ((v102 ^ 0xFD7E9E09) + 363217198) ^ ((v102 ^ 0x62D11045) - 1979068574));
  v104 = (v103 ^ 0xC898EBD2) & (2 * (v103 & 0xD2D90BD3)) ^ v103 & 0xD2D90BD3;
  v105 = ((2 * (v103 ^ 0xCD2AEBF2)) ^ 0x3FE7C042) & (v103 ^ 0xCD2AEBF2) ^ (2 * (v103 ^ 0xCD2AEBF2)) & 0x1FF3E020;
  v106 = (v105 ^ 0x1FE04000) & (4 * v104) ^ v104;
  v107 = ((4 * (v105 ^ 0x102021)) ^ 0x7FCF8084) & (v105 ^ 0x102021) ^ (4 * (v105 ^ 0x102021)) & 0x1FF3E020;
  v108 = (v107 ^ 0x1FC38000) & (16 * v106) ^ v106;
  v109 = ((16 * (v107 ^ 0x306021)) ^ 0xFF3E0210) & (v107 ^ 0x306021) ^ (16 * (v107 ^ 0x306021)) & 0x1FF3E020;
  v110 = v108 ^ 0x1FF3E021 ^ (v109 ^ 0x1F320000) & (v108 << 8);
  v111 = v103 ^ (2
               * ((v110 << 16) & 0x1FF30000 ^ v110 ^ ((v110 << 16) ^ 0x60210000) & (((v109 ^ 0xC1E021) << 8) & 0x1FF30000 ^ 0xC130000 ^ (((v109 ^ 0xC1E021) << 8) ^ 0x73E00000) & (v109 ^ 0xC1E021))));
  v112 = (((v111 ^ 0x926BB8C5) + 231020749) ^ ((v111 ^ 0xF63B6236) + 1771422272) ^ ((v111 ^ 0x892C1162) + 377663852))
       + 1523147223
       + ((((v111 >> 8) ^ 0x8CF01C8F) - 19985443) ^ (((v111 >> 8) ^ 0xD24359EF) - 1602466115) ^ (((v111 >> 8) ^ 0x5E5E39AB)
                                                                                               + 744566521));
  v113 = (v112 ^ 0xBFDDE4F6) & (2 * (v112 & 0xBF91C6F7)) ^ v112 & 0xBF91C6F7;
  v114 = ((2 * (v112 ^ 0xCBFFE0D2)) ^ 0xE8DC4C4A) & (v112 ^ 0xCBFFE0D2) ^ (2 * (v112 ^ 0xCBFFE0D2)) & 0x746E2624;
  v115 = (v114 ^ 0x604C0400) & (4 * v113) ^ v113;
  v116 = ((4 * (v114 ^ 0x14222225)) ^ 0xD1B89894) & (v114 ^ 0x14222225) ^ (4 * (v114 ^ 0x14222225)) & 0x746E2624;
  v117 = (v116 ^ 0x50280001) & (16 * v115) ^ v115;
  v118 = ((16 * (v116 ^ 0x24462621)) ^ 0x46E26250) & (v116 ^ 0x24462621) ^ (16 * (v116 ^ 0x24462621)) & 0x746E2620;
  v119 = v117 ^ 0x746E2625 ^ (v118 ^ 0x44622225) & (v117 << 8);
  v120 = v112 ^ (2
               * ((v119 << 16) & 0x746E0000 ^ v119 ^ ((v119 << 16) ^ 0x26250000) & (((v118 ^ (a3 + 892)) << 8) & 0x746E0000 ^ 0x10480000 ^ (((v118 ^ (a3 + 892)) << 8) ^ 0x6E260000) & (v118 ^ (a3 + 892)))));
  v121 = (((a4 ^ 0xEC34E101) + 332078847) ^ ((a4 ^ 0x685F13DE) - 1751061470) ^ ((a4 ^ 0x94666B8) - 155608760))
       - (((v120 ^ 0x5B67CFB4) + 917515922) ^ ((v120 ^ 0xDC4C2651) - 1315190923) ^ ((v120 ^ 0x982E6358) - 168197506))
       + 1098266558;
  v122 = (v121 ^ 0x3C05AF4B) & (2 * (v121 & 0xBE89C842)) ^ v121 & 0xBE89C842;
  v123 = ((2 * (v121 ^ 0x58142FCF)) ^ 0xCD3BCF1A) & (v121 ^ 0x58142FCF) ^ (2 * (v121 ^ 0x58142FCF)) & 0xE69DE78C;
  v124 = (v123 ^ 0xC4094308) & (4 * v122) ^ v122;
  v125 = ((4 * (v123 ^ 0x22842085)) ^ 0x9A779E34) & (v123 ^ 0x22842085) ^ (4 * (v123 ^ 0x22842085)) & 0xE69DE78C;
  v126 = (v125 ^ 0x82158600) & (16 * v124) ^ v124;
  v127 = ((16 * (v125 ^ 0x64886189)) ^ 0x69DE78D0) & (v125 ^ 0x64886189) ^ (16 * (v125 ^ 0x64886189)) & 0xE69DE780;
  v128 = v126 ^ 0xE69DE78D ^ (v127 ^ 0x609C6000) & (v126 << 8);
  v129 = v121 ^ (2
               * ((v128 << 16) & 0x669D0000 ^ v128 ^ ((v128 << 16) ^ 0x678D0000) & (((v127 ^ 0x8601870D) << 8) & 0x669D0000 ^ 0x62180000 ^ (((v127 ^ 0x8601870D) << 8) ^ 0x1DE70000) & (v127 ^ 0x8601870D))));
  LODWORD(STACK[0x1800]) = v42;
  v130 = (((v42 ^ 0x669EB358) - 1988790502) ^ ((v42 ^ 0x113B41BC) - 19888642) ^ ((v42 ^ 0xEA9C5D3D) + 91724157))
       - (((v33 ^ 0xE4368C5) - 239298757) ^ ((v33 ^ 0x6AA2A9E) - 111815326) ^ ((v33 ^ 0x85C4D63C) + 2050697668))
       + 1999998774;
  v131 = (v130 ^ 0x8C8278C3) & (2 * (v130 & 0x88CA70CA)) ^ v130 & 0x88CA70CA;
  v132 = ((2 * (v130 ^ 0x8C125853)) ^ 0x9B05132) & (v130 ^ 0x8C125853) ^ (2 * (v130 ^ 0x8C125853)) & 0x4D82898;
  v133 = (v132 ^ 0x102891) & (4 * v131) ^ v131;
  v134 = ((4 * (v132 ^ 0x4482889)) ^ 0x1360A264) & (v132 ^ 0x4482889) ^ (4 * (v132 ^ 0x4482889)) & 0x4D82898;
  v135 = (v134 ^ 0x402019) & (16 * v133) ^ v133;
  v136 = ((16 * (v134 ^ 0x4980899)) ^ 0x4D828990) & (v134 ^ 0x4980899) ^ (16 * (v134 ^ 0x4980899)) & 0x4D82890;
  v137 = v135 ^ 0x4D82899 ^ (v136 ^ 0x4800809) & (v135 << 8);
  v138 = v130 ^ (2
               * ((v137 << 16) & 0x4D80000 ^ v137 ^ ((v137 << 16) ^ 0x28990000) & (((v136 ^ 0x582009) << 8) & 0x4D80000 ^ 0x4D00000 ^ (((v136 ^ 0x582009) << 8) ^ 0x58280000) & (v136 ^ 0x582009))));
  v139 = (((v120 ^ 0x33CC8B2A) + 1578854928) ^ ((v120 ^ 0xEF2AAA96) - 2097329228) ^ ((v120 ^ 0xC3E3AB01) - 1372304859))
       + 1233482683
       + (((v129 ^ 0xFB8E3F50) + 938759057) ^ ((v129 ^ 0x7A643ECD) - 1239526898) ^ ((v129 ^ 0x3F4206C5) - 214406650));
  v140 = (v139 ^ 0xC881B453) & (2 * (v139 & 0xD0D5B513)) ^ v139 & 0xD0D5B513;
  v141 = ((2 * (v139 ^ 0xC922BE73)) ^ 0x33EE16C0) & (v139 ^ 0xC922BE73) ^ (2 * (v139 ^ 0xC922BE73)) & 0x19F70B60;
  v142 = (v141 ^ 0x1E60040) & (4 * v140) ^ v140;
  v143 = ((4 * (v141 ^ 0x8110920)) ^ 0x67DC2D80) & (v141 ^ 0x8110920) ^ (4 * (v141 ^ 0x8110920)) & 0x19F70B60;
  v144 = v142 ^ 0x19F70B60 ^ (v143 ^ 0x1D40900) & (16 * v142);
  v145 = (16 * (v143 ^ 0x18230260)) & 0x19F70B60 ^ 0x870960 ^ ((16 * (v143 ^ 0x18230260)) ^ 0x9F70B600) & (v143 ^ 0x18230260);
  v146 = (v144 << 8) & 0x19F70B00 ^ v144 ^ ((v144 << 8) ^ 0xF70B6000) & v145;
  v147 = v139 ^ (2
               * ((v146 << 16) & 0x19F70000 ^ v146 ^ ((v146 << 16) ^ 0xB600000) & ((v145 << 8) & 0x19F70000 ^ 0x8F40000 ^ ((v145 << 8) ^ 0xF70B0000) & v145)));
  v148 = -500632245
       * (((v76 ^ 0xE8BBA86B) - 1278747628) ^ ((v76 ^ 0x271143EB) + 2087532436) ^ ((v76 ^ 0xE604F460) - 1116176359))
       + 427363629;
  v149 = v148 + HIWORD(v148) + ((v148 + HIWORD(v148)) >> 8);
  v150 = (2 * v149) & 0x1A5B28CE;
  v149 -= 1926392729;
  LODWORD(STACK[0x1708]) = v149;
  LODWORD(STACK[0x1790]) = v149 - v150;
  v151 = STACK[0x1818];
  v152 = ((((v149 - v150) ^ 0xB9A36CDB) + 1180472101) ^ (((v149 - v150) ^ 0xE02F4416) + 533773290) ^ (((v149 - v150) ^ 0xD4A1BCAA) + 727597910))
       - (((v151 ^ 0xF56B949E) + 177498978) ^ ((v151 ^ 0x47991239) - 1201214009) ^ ((v151 ^ 0x3FDF12C0) - 1071583936));
  v153 = STACK[0x1584];
  if ((v152 & 1) != 0)
    v154 = a7;
  else
    v154 = STACK[0x1584];
  LODWORD(STACK[0x1540]) = v154;
  v155 = STACK[0x1488];
  if ((v152 & 1) != 0)
    v156 = STACK[0x1488];
  else
    v156 = a7;
  LODWORD(STACK[0x1588]) = v156;
  v157 = STACK[0x1514];
  if ((v152 & 1) != 0)
    v155 = STACK[0x1514];
  LODWORD(STACK[0x1538]) = v155;
  if ((v152 & 1) == 0)
    v153 = v157;
  LODWORD(STACK[0x1514]) = v153;
  v158 = STACK[0x17A8];
  if ((v152 & 1) != 0)
    v159 = a8;
  else
    v159 = STACK[0x17A8];
  LODWORD(STACK[0x1548]) = v159;
  if ((v152 & 1) == 0)
    v158 = a2;
  LODWORD(STACK[0x17A8]) = v158;
  v160 = STACK[0x1680];
  if ((v152 & 1) != 0)
    v161 = STACK[0x1680];
  else
    v161 = a8;
  LODWORD(STACK[0x16D0]) = v161;
  if ((v152 & 1) != 0)
    v160 = a2;
  LODWORD(STACK[0x1668]) = v160;
  v162 = STACK[0x1834];
  if ((v152 & 1) != 0)
    v163 = v11;
  else
    v163 = STACK[0x1834];
  LODWORD(STACK[0x15DC]) = v163;
  v164 = STACK[0x16EC];
  if ((v152 & 1) != 0)
    v165 = STACK[0x16EC];
  else
    v165 = v11;
  LODWORD(STACK[0x1500]) = v165;
  if ((v152 & 1) != 0)
    v164 = a6;
  LODWORD(STACK[0x1520]) = v164;
  if ((v152 & 1) != 0)
    v166 = v162;
  else
    v166 = a6;
  LODWORD(STACK[0x1834]) = v166;
  v167 = STACK[0x156C];
  v168 = STACK[0x16D8];
  if ((v152 & 1) != 0)
    v169 = STACK[0x16D8];
  else
    v169 = v14;
  LODWORD(STACK[0x16EC]) = v169;
  if ((v152 & 1) != 0)
    v170 = v14;
  else
    v170 = v167;
  LODWORD(STACK[0x1700]) = v170;
  if ((v152 & 1) == 0)
    v167 = v13;
  LODWORD(STACK[0x1680]) = v167;
  if ((v152 & 1) != 0)
    v171 = v13;
  else
    v171 = v168;
  LODWORD(STACK[0x1590]) = v171;
  v172 = STACK[0x1890];
  v173 = STACK[0x16C8];
  if ((v152 & 1) != 0)
    v174 = STACK[0x16C8];
  else
    v174 = STACK[0x1890];
  LODWORD(STACK[0x1638]) = v174;
  v175 = STACK[0x1808];
  if ((v152 & 1) == 0)
    v172 = STACK[0x1808];
  LODWORD(STACK[0x1584]) = v172;
  if ((v152 & 1) != 0)
    v176 = v175;
  else
    v176 = v10;
  if ((v152 & 1) != 0)
    v177 = v10;
  else
    v177 = v173;
  v178 = STACK[0x15F8];
  v179 = STACK[0x1730];
  if ((v152 & 1) != 0)
    v180 = STACK[0x1730];
  else
    v180 = STACK[0x15F8];
  LODWORD(STACK[0x16C8]) = v180;
  if ((v152 & 1) != 0)
    v181 = STACK[0x17B0];
  else
    v181 = v179;
  if ((v152 & 1) != 0)
    v182 = v178;
  else
    v182 = STACK[0x1770];
  if ((v152 & 1) != 0)
    v183 = STACK[0x1770];
  else
    v183 = STACK[0x17B0];
  LODWORD(STACK[0x1818]) = v151;
  v184 = (v151 ^ 0x72D26B98) + 1;
  LODWORD(STACK[0x14A8]) = v184;
  v185 = v152 + v184;
  LODWORD(STACK[0x1770]) = v152 + v184;
  if (((v152 + v184) & 1) != 0)
    v186 = STACK[0x16A4];
  else
    v186 = STACK[0x1670];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v187 = STACK[0x1740];
  else
    v187 = STACK[0x16A4];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v188 = STACK[0x173C];
  else
    v188 = STACK[0x1740];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v189 = STACK[0x1670];
  else
    v189 = STACK[0x173C];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v190 = STACK[0x1598];
  else
    v190 = STACK[0x1760];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v191 = STACK[0x15D0];
  else
    v191 = STACK[0x1598];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v192 = STACK[0x1810];
  else
    v192 = STACK[0x15D0];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v193 = STACK[0x1760];
  else
    v193 = STACK[0x1810];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v194 = STACK[0x161C];
  else
    v194 = STACK[0x1570];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v195 = STACK[0x1570];
  else
    v195 = STACK[0x15C0];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v196 = STACK[0x15C0];
  else
    v196 = STACK[0x16B8];
  if ((((_BYTE)v152 + (_BYTE)v184) & 1) != 0)
    v197 = STACK[0x16B8];
  else
    v197 = STACK[0x161C];
  v198 = v138 ^ 0xD67B59F;
  v199 = v147 ^ 0x5ED037B4;
  if ((v185 & 1) != 0)
    v200 = STACK[0x15CC];
  else
    v200 = STACK[0x10BC];
  if ((v185 & 1) != 0)
    v201 = STACK[0x16E0];
  else
    v201 = STACK[0x15CC];
  v202 = v77;
  if ((v185 & 1) != 0)
    v202 = STACK[0x10BC];
  else
    v77 = STACK[0x16E0];
  if ((v185 & 1) != 0)
    v203 = STACK[0x16B0];
  else
    v203 = v147 ^ 0x5ED037B4;
  if ((v185 & 1) != 0)
    v204 = v198;
  else
    v204 = STACK[0x16B0];
  v205 = STACK[0x1558];
  if ((v185 & 1) != 0)
    v198 = STACK[0x1558];
  LODWORD(STACK[0x14D8]) = v199;
  if ((v185 & 1) != 0)
    v206 = v199;
  else
    v206 = v205;
  v207 = (v185 & 2) == 0;
  if ((v185 & 2) != 0)
    v208 = v202;
  else
    v208 = v201;
  if (v207)
    v209 = v202;
  else
    v209 = v201;
  if (v207)
    v210 = v198;
  else
    v210 = v203;
  LODWORD(STACK[0x16B8]) = v210;
  if (v207)
    v211 = v203;
  else
    v211 = v198;
  LODWORD(STACK[0x15CC]) = v211;
  if (v207)
    v212 = v186;
  else
    v212 = v188;
  LODWORD(STACK[0x1820]) = v212;
  if (v207)
    v213 = v188;
  else
    v213 = v186;
  LODWORD(STACK[0x1740]) = v213;
  if (v207)
    v214 = v187;
  else
    v214 = v189;
  LODWORD(STACK[0x16A4]) = v214;
  if (v207)
    v215 = v189;
  else
    v215 = v187;
  LODWORD(STACK[0x1808]) = v215;
  LODWORD(STACK[0x15D0]) = STACK[0x16F8];
  if (v207)
    v216 = v191;
  else
    v216 = v193;
  LODWORD(STACK[0x16F8]) = v216;
  if (v207)
    v217 = v193;
  else
    v217 = v191;
  LODWORD(STACK[0x16E0]) = v217;
  if (v207)
    v218 = v192;
  else
    v218 = v190;
  LODWORD(STACK[0x16D8]) = v218;
  if (v207)
    v219 = v190;
  else
    v219 = v192;
  LODWORD(STACK[0x1890]) = v219;
  if (v207)
    v220 = v196;
  else
    v220 = v194;
  LODWORD(STACK[0x1670]) = v220;
  if (v207)
    v221 = v194;
  else
    v221 = v196;
  LODWORD(STACK[0x13F8]) = v221;
  LODWORD(STACK[0x1570]) = STACK[0x1698];
  LODWORD(STACK[0x1380]) = v200;
  LODWORD(STACK[0x1370]) = v77;
  if (v207)
    v222 = v200;
  else
    v222 = v77;
  LODWORD(STACK[0x1600]) = v222;
  LODWORD(STACK[0x12F0]) = v204;
  LODWORD(STACK[0x12EC]) = v206;
  if (v207)
    v223 = v204;
  else
    v223 = v206;
  LODWORD(STACK[0x1718]) = v223;
  LODWORD(STACK[0x1388]) = v195;
  LODWORD(STACK[0x1378]) = v197;
  if (v207)
    v224 = v195;
  else
    v224 = v197;
  LODWORD(STACK[0x1650]) = v224;
  v225 = STACK[0x17A8];
  v226 = STACK[0x16D0];
  if ((v152 & 2) != 0)
    v227 = STACK[0x16D0];
  else
    v227 = STACK[0x17A8];
  LODWORD(STACK[0x1488]) = v227;
  if ((v152 & 2) != 0)
    v228 = v225;
  else
    v228 = v226;
  LODWORD(STACK[0x1698]) = v228;
  v229 = STACK[0x1668];
  if ((v152 & 2) != 0)
    v230 = STACK[0x1548];
  else
    v230 = STACK[0x1668];
  if ((v152 & 2) == 0)
    v229 = STACK[0x1548];
  LODWORD(STACK[0x1408]) = v229;
  LODWORD(STACK[0x173C]) = STACK[0x16F0];
  v231 = STACK[0x1834];
  v232 = STACK[0x1500];
  if ((v152 & 2) != 0)
    v233 = STACK[0x1500];
  else
    v233 = STACK[0x1834];
  LODWORD(STACK[0x16F0]) = v233;
  if ((v152 & 2) != 0)
    v234 = v231;
  else
    v234 = v232;
  LODWORD(STACK[0x16D0]) = v234;
  v235 = STACK[0x16EC];
  v236 = STACK[0x1680];
  if ((v152 & 2) != 0)
    v237 = STACK[0x1680];
  else
    v237 = STACK[0x16EC];
  LODWORD(STACK[0x1548]) = v237;
  if ((v152 & 2) != 0)
    v238 = v235;
  else
    v238 = v236;
  LODWORD(STACK[0x1668]) = v238;
  v239 = STACK[0x15DC];
  v240 = STACK[0x1520];
  if ((v152 & 2) != 0)
    v241 = STACK[0x15DC];
  else
    v241 = STACK[0x1520];
  LODWORD(STACK[0x1730]) = v241;
  if ((v152 & 2) != 0)
    v242 = v240;
  else
    v242 = v239;
  LODWORD(STACK[0x1400]) = v242;
  v243 = STACK[0x1638];
  if ((v152 & 2) != 0)
    v244 = STACK[0x1638];
  else
    v244 = v176;
  LODWORD(STACK[0x15DC]) = v244;
  if ((v152 & 2) != 0)
    v245 = v176;
  else
    v245 = v243;
  LODWORD(STACK[0x1834]) = v245;
  v246 = STACK[0x1584];
  if ((v152 & 2) != 0)
    v247 = STACK[0x1584];
  else
    v247 = v177;
  LODWORD(STACK[0x1410]) = v247;
  if ((v152 & 2) != 0)
    v248 = v177;
  else
    v248 = v246;
  LODWORD(STACK[0x1418]) = v248;
  if ((v152 & 2) != 0)
    v249 = v182;
  else
    v249 = v181;
  LODWORD(STACK[0x1558]) = v249;
  if ((v152 & 2) != 0)
    v250 = v181;
  else
    v250 = v182;
  LODWORD(STACK[0x17A8]) = v250;
  v251 = STACK[0x16C8];
  if ((v152 & 2) != 0)
    v252 = STACK[0x16C8];
  else
    v252 = v183;
  LODWORD(STACK[0x1638]) = v252;
  if ((v152 & 2) != 0)
    v253 = v183;
  else
    v253 = v251;
  LODWORD(STACK[0x17B0]) = v253;
  v254 = STACK[0x1850];
  v255 = STACK[0x1858];
  v256 = STACK[0x1858] & 0x17 ^ 7;
  LODWORD(STACK[0x161C]) = v256;
  LODWORD(STACK[0x15C0]) = v255 & 8;
  v257 = ((v208 ^ 0x8D2D9467) >> v256 >> (v255 & 8)) | ((v208 ^ 0x8D2D9467) << (v254 & 0xF ^ 7) << (v254 & 0x10));
  v258 = v255 & 0xC ^ 4;
  v259 = v255;
  v260 = v255 & 0x13 ^ 3;
  v261 = v254 & 0x1C ^ 4;
  v262 = ~v254 & 3;
  LODWORD(STACK[0x1368]) = v261;
  LODWORD(STACK[0x1364]) = v262;
  v263 = ((v209 ^ 0x8D2D9467) << v261 << v262) | ((v209 ^ 0x8D2D9467) >> v258 >> v260);
  v264 = v263 - 1926392729 - ((2 * v263) & 0x1A5B28CE);
  v265 = v257 - 1926392729 - ((2 * v257) & 0x1A5B28CE);
  v266 = STACK[0x1540];
  v267 = STACK[0x1538];
  if ((v152 & 2) != 0)
    v268 = STACK[0x1540];
  else
    v268 = STACK[0x1538];
  LODWORD(STACK[0x1560]) = v268;
  v269 = STACK[0x1700];
  if ((v152 & 2) == 0)
    v269 = STACK[0x1590];
  LODWORD(STACK[0x1500]) = v269;
  LODWORD(STACK[0x13B8]) = v209;
  if (v254 == -1926392729)
    v270 = v209;
  else
    v270 = v264;
  LODWORD(STACK[0x1584]) = v270;
  LODWORD(STACK[0x1470]) = v208;
  if (v254 == -1926392729)
    v271 = v208;
  else
    v271 = v265;
  LODWORD(STACK[0x156C]) = v271;
  LODWORD(STACK[0x1318]) = v152;
  if ((v152 & 2) != 0)
    v272 = v267;
  else
    v272 = v266;
  v273 = STACK[0x1588];
  v274 = STACK[0x1514];
  if ((v152 & 2) != 0)
    v275 = STACK[0x1514];
  else
    v275 = STACK[0x1588];
  LODWORD(STACK[0x1498]) = v275;
  if ((v152 & 2) != 0)
    v276 = v273;
  else
    v276 = v274;
  LODWORD(STACK[0x1858]) = v259;
  LODWORD(STACK[0x1520]) = v272;
  v277 = (v272 ^ 0x8D2D9467) >> (v259 & 0xF ^ 7) >> (v259 & 0x10);
  LODWORD(STACK[0x15F8]) = v230;
  v278 = ((((2 * (v230 & 0x95C34CB ^ 0x880C1487)) & 0x12084006) - (v230 & 0x95C34CB ^ 0x880C1487) + 274257388) ^ 0x9158D528 | ((v230 & 0x95C34CB ^ 0x5C3089) + (v230 & 0x8040041 ^ 0x7A208240) - ((v230 & 0x95C34CB ^ 0x5C3089) & 0x8040041)) ^ 0x7A289240) ^ LODWORD(STACK[0x14E4]);
  v279 = (((LODWORD(STACK[0x15F0]) ^ 0xB41BFFEB) + 1273233429) ^ ((LODWORD(STACK[0x15F0]) ^ 0x93FC2903) + 1812190973) ^ ((LODWORD(STACK[0x15F0]) ^ 0xAACA428F) + 1429585265))
       + 1884629826;
  v280 = (v279 ^ 0xC98184C1) & (2 * (v279 & 0xE985D4E5)) ^ v279 & 0xE985D4E5;
  v281 = ((2 * (v279 ^ 0x188984C3)) ^ 0xE218A04C) & (v279 ^ 0x188984C3) ^ (2 * (v279 ^ 0x188984C3)) & 0xF10C5026;
  v282 = (v281 ^ 0xE0080004) & (4 * v280) ^ v280;
  v283 = ((4 * (v281 ^ 0x11045022)) ^ 0xC4314098) & (v281 ^ 0x11045022) ^ (4 * (v281 ^ 0x11045022)) & 0xF10C5024;
  v284 = v282 ^ 0xF10C5026 ^ (v283 ^ 0xC0004006) & (16 * v282);
  v285 = (16 * (v283 ^ 0x310C1026)) & 0xF10C5020 ^ 0xE1085006 ^ ((16 * (v283 ^ 0x310C1026)) ^ 0x10C50260) & (v283 ^ 0x310C1026);
  v286 = (v284 << 8) & 0xF10C5000 ^ v284 ^ ((v284 << 8) ^ 0xC502600) & v285;
  v287 = v279 ^ (2
               * ((v286 << 16) & 0x710C0000 ^ v286 ^ ((v286 << 16) ^ 0x50260000) & ((v285 << 8) & 0xF10C0000 ^ 0x710C0000 ^ ((v285 << 8) ^ 0xC500000) & v285)));
  v288 = ~v254 & 7;
  LODWORD(STACK[0x139C]) = v288;
  LODWORD(STACK[0x1390]) = v254 & 0x18;
  v289 = (v272 ^ 0x8D2D9467) << v288 << (v254 & 0x18);
  LODWORD(STACK[0x1490]) = v289;
  v290 = v277 ^ 0x8D2D9467 ^ v289;
  if (v254 == -1926392729)
    v290 = v272;
  LODWORD(STACK[0x13D0]) = v290;
  v291 = STACK[0x1770];
  if ((STACK[0x1770] & 1) != 0)
    v292 = LODWORD(STACK[0x1644]) ^ 0x95C34CB;
  else
    v292 = LODWORD(STACK[0x1440]) ^ 0x95C34CB;
  if ((v291 & 1) != 0)
    v293 = LODWORD(STACK[0x1440]) ^ 0x95C34CB;
  else
    v293 = v278;
  if ((v291 & 1) != 0)
  {
    v294 = v287 ^ 0x2FE4D405;
  }
  else
  {
    v278 = v287 ^ 0x2FE4D405;
    v294 = LODWORD(STACK[0x1644]) ^ 0x95C34CB;
  }
  v295 = (STACK[0x1770] & 2) == 0;
  if ((v291 & 2) != 0)
    v296 = v292;
  else
    v296 = v278;
  LODWORD(STACK[0x1810]) = v296;
  if ((v291 & 2) != 0)
    v297 = v278;
  else
    v297 = v292;
  LODWORD(STACK[0x15F0]) = v297;
  v298 = ((LODWORD(STACK[0x159C]) ^ 0x88570A5A) + 2007561638) ^ ((LODWORD(STACK[0x159C]) ^ 0x267B1496) - 645600406);
  v299 = LODWORD(STACK[0x159C]) ^ 0x2301B9E5;
  v300 = STACK[0x1768];
  LODWORD(STACK[0x1538]) = LODWORD(STACK[0x1768]) + 5401;
  v301 = v298 ^ (((v300 + 5401) ^ v299) - 587303595);
  v302 = (v300 - 7728) | 0x1612;
  LODWORD(STACK[0x1270]) = v302;
  v303 = v302 - 1407261258 + v301;
  v304 = (v303 ^ 0xC912DBCA) & (2 * (v303 & 0xC25B1BD3)) ^ v303 & 0xC25B1BD3;
  v305 = ((2 * (v303 ^ 0xCD12CDE8)) ^ 0x1E93AC76) & (v303 ^ 0xCD12CDE8) ^ (2 * (v303 ^ 0xCD12CDE8)) & 0xF49D63A;
  v306 = (v305 ^ 0xA008411) & (4 * v304) ^ v304;
  v307 = ((4 * (v305 ^ 0x1485209)) ^ 0x3D2758EC) & (v305 ^ 0x1485209) ^ (4 * (v305 ^ 0x1485209)) & 0xF49D638;
  v308 = (v307 ^ 0xD015020) & (16 * v306) ^ v306;
  v309 = ((16 * (v307 ^ 0x2488613)) ^ 0xF49D63B0) & (v307 ^ 0x2488613) ^ (16 * (v307 ^ 0x2488613)) & 0xF49D630;
  v310 = v308 ^ 0xF49D63B ^ (v309 ^ 0x409420B) & (v308 << 8);
  v311 = v303 ^ 0x5DF723C2 ^ (2
                            * ((v310 << 16) & 0xF490000 ^ v310 ^ ((v310 << 16) ^ 0x563B0000) & (((v309 ^ 0xB40940B) << 8) & 0xF490000 ^ 0x6090000 ^ (((v309 ^ 0xB40940B) << 8) ^ 0x49D60000) & (v309 ^ 0xB40940B))));
  v312 = ((LODWORD(STACK[0x1800]) ^ 0x8A3267E6) + 1708762024) ^ ((LODWORD(STACK[0x1800]) ^ 0x83BEEF1E) + 1817520992) ^ ((LODWORD(STACK[0x1800]) ^ 0x94B52721) + 2069816161);
  v313 = STACK[0x1898];
  LODWORD(STACK[0x1598]) = v276;
  LODWORD(STACK[0x13A0]) = v260;
  LODWORD(STACK[0x13A8]) = v258;
  v314 = v312
       - (((v313 ^ 0x7B4D582F) - 2068666415) ^ ((v313 ^ 0x24F889FC) - 620268028) ^ ((v313 ^ 0xD29845B4) + 761772620))
       + 1236645683;
  v315 = (v314 ^ 0xA72B64AD) & (2 * (v314 & 0xB64A48CD)) ^ v314 & 0xB64A48CD;
  v316 = ((2 * (v314 ^ 0xAF3FF43D)) ^ 0x32EB79E0) & (v314 ^ 0xAF3FF43D) ^ (2 * (v314 ^ 0xAF3FF43D)) & 0x1975BCF0;
  v317 = (v316 ^ 0x10612060) & (4 * v315) ^ v315;
  v318 = ((4 * (v316 ^ 0x9148410)) ^ 0x65D6F3C0) & (v316 ^ 0x9148410) ^ (4 * (v316 ^ 0x9148410)) & 0x1975BCF0;
  v319 = (v318 ^ 0x154B0C0) & (16 * v317) ^ v317;
  v320 = ((16 * (v318 ^ 0x18210C30)) ^ 0x975BCF00) & (v318 ^ 0x18210C30) ^ (16 * (v318 ^ 0x18210C30)) & 0x1975BCF0;
  v321 = v319 ^ 0x1975BCF0 ^ (v320 ^ 0x11518CF0) & (v319 << 8);
  v322 = v314 ^ (2
               * ((v321 << 16) & 0x19750000 ^ v321 ^ ((v321 << 16) ^ 0x3CF00000) & (((v320 ^ 0x82430F0) << 8) & 0x19750000 ^ 0x8410000 ^ (((v320 ^ 0x82430F0) << 8) ^ 0x75BC0000) & (v320 ^ 0x82430F0))));
  v323 = (STACK[0x1708] & 1) - 1618410212 - 2 * (STACK[0x1708] & 1);
  LODWORD(STACK[0x1360]) = v293;
  LODWORD(STACK[0x1358]) = v294;
  if (v295)
    v324 = v294;
  else
    v324 = v293;
  LODWORD(STACK[0x16EC]) = v324;
  if (v254 == -1926392729)
    v325 = v276;
  else
    v325 = ((v276 ^ 0x8D2D9467) >> v260 >> v258) ^ 0x8D2D9467 ^ ((v276 ^ 0x8D2D9467) << (v254 & 0x1D ^ 5) << (~(_BYTE)v254 & 2));
  LODWORD(STACK[0x159C]) = v325;
  v326 = v323 + 1;
  v327 = v326 == -1618410212;
  if (v326 == -1618410212)
    v328 = STACK[0x1778];
  else
    v328 = v311;
  if (v327)
    v329 = STACK[0x1720];
  else
    v329 = STACK[0x1778];
  if (v327)
    v330 = STACK[0x17D8];
  else
    v330 = STACK[0x1720];
  if (!v327)
    v311 = STACK[0x17D8];
  v331 = v322 ^ 0x396CA54A;
  if (v327)
    v332 = v331;
  else
    v332 = STACK[0x1610];
  if (v327)
    v333 = STACK[0x1610];
  else
    v333 = STACK[0x1658];
  if (v327)
    v334 = STACK[0x1658];
  else
    v334 = STACK[0x16C0];
  if (v327)
    v335 = STACK[0x16C0];
  else
    v335 = v331;
  if (v327)
    v336 = STACK[0x1554];
  else
    v336 = STACK[0x14E8];
  if (v327)
    v337 = STACK[0x14E8];
  else
    v337 = STACK[0x1544];
  if (v327)
    v338 = STACK[0x1544];
  else
    v338 = STACK[0x1524];
  if (v327)
    v339 = STACK[0x1524];
  else
    v339 = STACK[0x1554];
  v340 = STACK[0x1798];
  if (v327)
    v341 = STACK[0x1798];
  else
    v341 = STACK[0x1690];
  if (v327)
  {
    v340 = STACK[0x1648];
    v342 = STACK[0x17BC];
  }
  else
  {
    v342 = STACK[0x1648];
  }
  if (v327)
    v343 = STACK[0x1690];
  else
    v343 = STACK[0x17BC];
  if (v327)
    v344 = STACK[0x144C];
  else
    v344 = STACK[0x1438];
  if (v327)
    v345 = STACK[0x1438];
  else
    v345 = STACK[0x1578];
  if (v327)
    v346 = STACK[0x1530];
  else
    v346 = STACK[0x144C];
  if (v327)
    v347 = STACK[0x1578];
  else
    v347 = STACK[0x1530];
  if (v327)
    v348 = STACK[0x1860];
  else
    v348 = STACK[0x1750];
  v349 = STACK[0x160C];
  if (v327)
    v350 = STACK[0x1750];
  else
    v350 = STACK[0x160C];
  if (v327)
    v351 = STACK[0x15E8];
  else
    v351 = STACK[0x1860];
  if (!v327)
    v349 = STACK[0x15E8];
  v352 = (STACK[0x1790] & 2) == 0;
  if ((STACK[0x1790] & 2) != 0)
    v353 = v330;
  else
    v353 = v328;
  if ((STACK[0x1790] & 2) != 0)
    v354 = v328;
  else
    v354 = v330;
  LODWORD(STACK[0x1860]) = v354;
  if (v352)
    v355 = v332;
  else
    v355 = v334;
  LODWORD(STACK[0x1800]) = v355;
  if (v352)
    v356 = v334;
  else
    v356 = v332;
  LODWORD(STACK[0x14E4]) = v356;
  if (v352)
    v357 = v329;
  else
    v357 = v311;
  LODWORD(STACK[0x1588]) = v357;
  if (v352)
    v358 = v311;
  else
    v358 = v329;
  if (v352)
    v359 = v336;
  else
    v359 = v338;
  LODWORD(STACK[0x1778]) = v359;
  if (v352)
    v360 = v338;
  else
    v360 = v336;
  LODWORD(STACK[0x13F0]) = v360;
  if (v352)
    v361 = v340;
  else
    v361 = v343;
  LODWORD(STACK[0x15E8]) = v361;
  if (v352)
    v362 = v343;
  else
    v362 = v340;
  LODWORD(STACK[0x160C]) = v362;
  if (v352)
    v363 = v341;
  else
    v363 = v342;
  LODWORD(STACK[0x1644]) = v363;
  if (v352)
    v364 = v342;
  else
    v364 = v341;
  LODWORD(STACK[0x1514]) = v364;
  if (v352)
    v365 = v350;
  else
    v365 = v351;
  LODWORD(STACK[0x16B0]) = v365;
  if (v352)
    v366 = v351;
  else
    v366 = v350;
  LODWORD(STACK[0x17BC]) = v366;
  if (v352)
    v367 = v348;
  else
    v367 = v349;
  LODWORD(STACK[0x1648]) = v367;
  if (!v352)
    v349 = v348;
  LODWORD(STACK[0x1750]) = v349;
  v368 = ((v353 ^ 0x8D2D9467) >> LODWORD(STACK[0x15C0]) >> LODWORD(STACK[0x161C])) | ((v353 ^ 0x8D2D9467) << (v254 & 0x1D ^ 5) << (~(_BYTE)v254 & 2));
  if (v352)
    v369 = v344;
  else
    v369 = v347;
  LODWORD(STACK[0x1540]) = v369;
  if (v352)
    v370 = v347;
  else
    v370 = v344;
  LODWORD(STACK[0x1708]) = v370;
  v371 = v368 - 1926392729 - ((2 * v368) & 0x1A5B28CE);
  v372 = ((LODWORD(STACK[0x1508]) ^ 0xD294B718) + 807752036) ^ ((LODWORD(STACK[0x1508]) ^ 0x7D046F4F) - 1615492811) ^ ((LODWORD(STACK[0x1508]) ^ 0x3FF355B4) - 582831152);
  LODWORD(STACK[0x1310]) = v333;
  LODWORD(STACK[0x130C]) = v335;
  if (v352)
    v373 = v333;
  else
    v373 = v335;
  LODWORD(STACK[0x1680]) = v373;
  LODWORD(STACK[0x1350]) = v337;
  LODWORD(STACK[0x1348]) = v339;
  if (v352)
    v374 = v337;
  else
    v374 = v339;
  LODWORD(STACK[0x1760]) = v374;
  LODWORD(STACK[0x1300]) = v345;
  LODWORD(STACK[0x12F8]) = v346;
  if (v352)
    v375 = v346;
  else
    v375 = v345;
  LODWORD(STACK[0x16C8]) = v375;
  if (v254 == -1926392729)
    v371 = v353;
  LODWORD(STACK[0x16C0]) = v371;
  v376 = LODWORD(STACK[0x15E0]) ^ LODWORD(STACK[0x15E4]) ^ (987739789 * v372
                                                          - ((364866842 * v372 + 178908534) & 0x1A5B28CE)
                                                          + 1384287010);
  v377 = (((LODWORD(STACK[0x1660]) ^ 0x4A5CD1A7) - 1247596967) ^ ((LODWORD(STACK[0x1660]) ^ 0x81F5BD94) + 2114601580) ^ ((LODWORD(STACK[0x1660]) ^ 0x4684F854) - 1183119444))
       + (((LODWORD(STACK[0x17CC]) ^ 0xFDAF4B2) - 266007730) ^ ((LODWORD(STACK[0x17CC]) ^ 0x1EF22697) - 519186071) ^ ((LODWORD(STACK[0x17CC]) ^ 0x9C054642) + 1677375934));
  v378 = ((v377 + 2039132832) ^ 0x14C5742D) & (2 * ((v377 + 2039132832) & 0xA0D0762E)) ^ (v377 + 2039132832) & 0xA0D0762E;
  v379 = ((2 * ((v377 + 2039132832) ^ 0x55455479)) ^ 0xEB2A44AE) & ((v377 + 2039132832) ^ 0x55455479) ^ (2 * ((v377 + 2039132832) ^ 0x55455479)) & 0xF5952256;
  v380 = (v379 ^ 0x91140200) & (4 * v378) ^ v378;
  v381 = ((4 * (v379 ^ 0x14952251)) ^ 0xD654895C) & (v379 ^ 0x14952251) ^ (4 * (v379 ^ 0x14952251)) & 0xF5952254;
  v382 = (v381 ^ 0xD4140040) & (16 * v380) ^ v380;
  v383 = ((16 * (v381 ^ 0x21812203)) ^ 0x59522570) & (v381 ^ 0x21812203) ^ (16 * (v381 ^ 0x21812203)) & 0xF5952250;
  v384 = v382 ^ 0xF5952257 ^ (v383 ^ 0x51102000) & (v382 << 8);
  v385 = (v377 + 2039132832) ^ (2
                              * ((v384 << 16) & 0x75950000 ^ v384 ^ ((v384 << 16) ^ 0x22570000) & (((v383 ^ 0xA4850207) << 8) & 0x75950000 ^ 0x60950000 ^ (((v383 ^ 0xA4850207) << 8) ^ 0x15220000) & (v383 ^ 0xA4850207))));
  LODWORD(STACK[0x1798]) = v385;
  v386 = LODWORD(STACK[0x1770]) + LODWORD(STACK[0x14A8]);
  v387 = STACK[0x1758];
  v388 = STACK[0x1688];
  if ((v386 & 1) != 0)
    v389 = STACK[0x1758];
  else
    v389 = STACK[0x1688];
  if ((v386 & 1) != 0)
  {
    v387 = STACK[0x1664];
    v390 = STACK[0x1458];
  }
  else
  {
    v390 = STACK[0x1838];
  }
  if ((v386 & 1) != 0)
    v391 = STACK[0x1838];
  else
    v391 = STACK[0x15C8];
  if ((v386 & 1) != 0)
    v392 = STACK[0x15C8];
  else
    v392 = STACK[0x1430];
  if ((v386 & 1) != 0)
    v393 = STACK[0x1430];
  else
    v393 = STACK[0x1458];
  if ((v386 & 1) != 0)
    v394 = v376;
  else
    v394 = STACK[0x15D0];
  if ((v386 & 1) != 0)
    v395 = STACK[0x173C];
  else
    v395 = v376;
  if ((v386 & 1) != 0)
    v396 = STACK[0x14F8];
  else
    v396 = STACK[0x173C];
  if ((v386 & 1) != 0)
    v397 = STACK[0x15D0];
  else
    v397 = STACK[0x14F8];
  v398 = STACK[0x1570];
  if ((v386 & 1) != 0)
    v399 = STACK[0x1570];
  else
    v399 = STACK[0x1664];
  LODWORD(STACK[0x1688]) = v388;
  if ((v386 & 1) != 0)
    v400 = v388;
  else
    v400 = v398;
  v401 = STACK[0x1738];
  v402 = STACK[0x17E0];
  if ((v386 & 1) != 0)
    v403 = STACK[0x1738];
  else
    v403 = STACK[0x17E0];
  if ((v386 & 1) != 0)
  {
    v401 = STACK[0x1528];
    v404 = STACK[0x1868];
  }
  else
  {
    v404 = STACK[0x1528];
  }
  if ((v386 & 1) == 0)
    v402 = STACK[0x1868];
  LODWORD(STACK[0x1524]) = v386;
  v405 = (v386 & 2) == 0;
  if ((v386 & 2) != 0)
    v406 = v387;
  else
    v406 = v400;
  LODWORD(STACK[0x13D8]) = v406;
  if (!v405)
    v387 = v400;
  LODWORD(STACK[0x13E8]) = v387;
  if (v405)
    v407 = v403;
  else
    v407 = v404;
  LODWORD(STACK[0x1508]) = v407;
  if (v405)
    v408 = v404;
  else
    v408 = v403;
  LODWORD(STACK[0x15D0]) = v408;
  if (v405)
    v409 = v401;
  else
    v409 = v402;
  LODWORD(STACK[0x1720]) = v409;
  if (v405)
    v410 = v402;
  else
    v410 = v401;
  LODWORD(STACK[0x17D8]) = v410;
  if (v405)
    v411 = v396;
  else
    v411 = v394;
  LODWORD(STACK[0x1570]) = v411;
  if (v405)
    v412 = v394;
  else
    v412 = v396;
  LODWORD(STACK[0x1838]) = v412;
  if (v405)
    v413 = v391;
  else
    v413 = v393;
  LODWORD(STACK[0x173C]) = v413;
  LODWORD(STACK[0x1758]) = v393;
  if (v405)
    v414 = v393;
  else
    v414 = v391;
  LODWORD(STACK[0x14F8]) = v414;
  LODWORD(STACK[0x1440]) = v389;
  LODWORD(STACK[0x1320]) = v399;
  if (v405)
    v415 = v399;
  else
    v415 = v389;
  LODWORD(STACK[0x14A8]) = v415;
  LODWORD(STACK[0x1340]) = v390;
  LODWORD(STACK[0x1338]) = v392;
  if (v405)
    v416 = v390;
  else
    v416 = v392;
  LODWORD(STACK[0x13E0]) = v416;
  LODWORD(STACK[0x15E4]) = v395;
  LODWORD(STACK[0x15C8]) = v397;
  if (v405)
    v417 = v397;
  else
    v417 = v395;
  LODWORD(STACK[0x15E0]) = v417;
  v418 = LODWORD(STACK[0x13C0]) ^ 0x913ACEF2;
  v419 = STACK[0x1428];
  if ((v377 & 1) != 0)
    v420 = LODWORD(STACK[0x13C0]) ^ 0x913ACEF2;
  else
    v420 = STACK[0x1428];
  v421 = STACK[0x17A0];
  if ((v377 & 1) != 0)
  {
    v418 = STACK[0x17A0];
    v422 = STACK[0x1780];
  }
  else
  {
    v419 = STACK[0x1780];
    v422 = STACK[0x17A0];
  }
  v423 = STACK[0x1780];
  if ((v385 & 2) != 0)
    v424 = v420;
  else
    v424 = v422;
  if ((v385 & 2) != 0)
    v420 = v422;
  v425 = STACK[0x1870];
  v426 = STACK[0x1870];
  LODWORD(STACK[0x1870]) = STACK[0x1870];
  v427 = STACK[0x1848];
  if ((v385 & 2) != 0)
    v429 = v418;
  else
    v429 = v419;
  if ((v385 & 2) != 0)
    v430 = v419;
  else
    v430 = v418;
  if (v426 == -1926392729)
  {
    v431 = v424;
  }
  else
  {
    v428 = ((v424 ^ 0x8D2D9467) << (~(_BYTE)v427 & 6) << (v427 & 0x19 ^ 1))
         + ((v424 ^ 0x8D2D9467) >> (v425 & 0x1E ^ 6) >> ((v425 & 1) == 0));
    v431 = v428 - 1926392729 - ((2 * v428) & 0x1A5B28CE);
  }
  v432 = STACK[0x1828];
  v433 = ((v429 ^ 0x8D2D9467) << (v427 & 0xA ^ 2) << (v427 & 0x15 ^ 5))
       + ((v429 ^ 0x8D2D9467) >> (STACK[0x1828] & 0x1F ^ 7));
  v434 = v433 - 1926392729 - ((2 * v433) & 0x1A5B28CE);
  v435 = ((v420 ^ 0x8D2D9467) << (v427 & 0xD ^ 5) << (v427 & 0x12 ^ 2))
       + ((v420 ^ 0x8D2D9467) >> (~(_BYTE)v426 & 2) >> (v426 & 0x1D ^ 5));
  v436 = STACK[0x1840];
  v437 = STACK[0x1840] & 0x1D ^ 5;
  v438 = STACK[0x1588];
  v439 = ~STACK[0x1840] & 2;
  v440 = STACK[0x1858];
  v441 = ~LODWORD(STACK[0x1858]) & 5;
  LODWORD(STACK[0x1610]) = v441;
  v442 = v440 & 0x1A ^ 2;
  LODWORD(STACK[0x1660]) = v442;
  LODWORD(STACK[0x1850]) = v254;
  v444 = STACK[0x1860];
  v445 = v440 & 0x12 ^ 2;
  LODWORD(STACK[0x1328]) = v445;
  LODWORD(STACK[0x1330]) = v440 & 0xD ^ 5;
  if (v432 == -1926392729)
    v434 = v429;
  v447 = v435 - 1926392729 - ((2 * v435) & 0x1A5B28CE);
  v443 = ((v438 ^ 0x8D2D9467) >> (~(_BYTE)v440 & 5) >> (v440 & 0x1A ^ 2)) | ((v438 ^ 0x8D2D9467) << (~(_BYTE)v436 & 2) << (v436 & 0x1D ^ 5));
  v448 = v443 - 1926392729 - ((2 * v443) & 0x1A5B28CE);
  v446 = ((v444 ^ 0x8D2D9467) >> v445 >> (v440 & 0xD ^ 5))
       + ((v444 ^ 0x8D2D9467) << (v254 & 0x14 ^ 4) << (v254 & 0xB ^ 3));
  v449 = v446 - 1926392729 - ((2 * v446) & 0x1A5B28CE);
  v450 = ((v358 ^ 0x8D2D9467) << v439 << v437) ^ 0x8D2D9467 ^ ((v358 ^ 0x8D2D9467) >> v441 >> v442);
  LODWORD(STACK[0x14E8]) = v358;
  if (v440 == -1926392729)
    v451 = v358;
  else
    v451 = v450;
  v452 = (v451 & 0xE0E0E0E ^ 0xE000806 | 0x6F4FE76E) - (v451 & 0xE0E0E0E ^ 0xE000806 | 0x90B01891) - 1867507567;
  v453 = 2
       * (((((v452 & 0x680A270C ^ 0x20080000) + (v452 ^ 0x5FD7A7AE) - ((v452 ^ 0x5FD7A7AE) & 0x681A270C)) ^ 0x548065C2)
         + (((v451 & 0xE0E0E0E ^ 0xE4D004C) - ((2 * (v451 & 0xE0E0E0E ^ 0xE4D004C)) & 0x8040804) - 1786620766) ^ 0x17C350E8)) & STACK[0xFF0]);
  v454 = (v453 ^ 0xE0E0E0E) & STACK[0xFEC] ^ v453 & 0x4F4688B4;
  v455 = (v454 & 0x1A50D584 ^ 0x1A105501) + (v454 ^ 0x80428094) - ((v454 ^ 0x80428094) & 0x9A50D584);
  v456 = (v453 ^ 0xE0E0E0E) & STACK[0x1004] ^ v453 & 0x70F17666;
  v457 = (v456 & 0x6B9EA16E ^ 0x6B9EA10D) + (v456 & 0x14615E90 ^ 0x404401);
  if (v440 == -1926392729)
    v448 = v438;
  v458 = v448 ^ v434 ^ ((v455 ^ 0x14145D15) >> LODWORD(STACK[0x10A0]) >> LODWORD(STACK[0x1098])) ^ (((v457 - 2) ^ 0x6BDEE30A) << LODWORD(STACK[0x1054]) << LODWORD(STACK[0x1058]));
  if (v440 == -1926392729)
    v459 = v444;
  else
    v459 = v449;
  v460 = v459 ^ LODWORD(STACK[0x102C]);
  v461 = v458 - 1926392729 - ((2 * v458) & 0x1A5B28CE);
  LODWORD(STACK[0x1554]) = v431;
  v462 = (v460 - 1926392728 + ~((2 * v460) & 0x1A5B28CE)) ^ v431;
  v463 = v462 - 1926392729 - ((2 * v462) & 0x1A5B28CE);
  LODWORD(STACK[0x1828]) = v432;
  LODWORD(STACK[0x1848]) = v427;
  v464 = ((v430 ^ 0x8D2D9467) >> (v432 & 0x1B ^ 3) >> (~(_BYTE)v432 & 4)) | ((v430 ^ 0x8D2D9467) << (v427 & 0x16 ^ 6) << (v427 & 9 ^ 1));
  v465 = v464 - 1926392729 - ((2 * v464) & 0x1A5B28CE);
  if (v427 == -1926392729)
  {
    v447 = v420;
    v465 = v430;
  }
  v466 = v451 ^ ((v465 ^ LODWORD(STACK[0x1020])) - 1926392729 - ((2 * (v465 ^ LODWORD(STACK[0x1020]))) & 0x1A5B28CE));
  v467 = (v466 - 1926392729 - ((2 * v466) & 0x1A5B28CE)) ^ LODWORD(STACK[0x18A8]);
  v468 = STACK[0x18A8];
  v469 = HIBYTE(v467) + 325495947;
  v470 = BYTE2(v467);
  LODWORD(STACK[0x17CC]) = v467;
  v471 = (v469 ^ 0x3430E97C) & (2 * ((HIBYTE(v467) - 117) & 0x7D)) ^ (HIBYTE(v467) - 117) & 0x7D;
  v472 = (2 * (v469 ^ 0x3430E92E)) & 0x152 ^ 0xD51 ^ ((2 * (v469 ^ 0x3430E92E)) ^ 0x215240A6) & (v469 ^ 0x3430E92E);
  v473 = (4 * v471) & 0x150 ^ v471 ^ ((unsigned __int16)(4
                                                       * ((v469 ^ 0x7C) & (2 * (v469 & 0x7D)) ^ v469 & 0x7D)) | 0x3000) & (unsigned __int16)v472;
  v474 = (4 * v472) & 0xD8A9BD50 ^ 0x98090813 ^ ((4 * v472) ^ 0x22A6F54C) & v472;
  v475 = (16 * v473) & 0x58A9BD50 ^ v473 ^ ((16 * v473) ^ 0x3C000) & v474;
  v476 = (16 * v474) & 0xD8A9BD50 ^ 0x50202843 ^ ((16 * v474) ^ 0x8A9BD530) & v474;
  v477 = v475 ^ 0xD8000153 ^ (v475 << 8) & 0x58A9BD00 ^ ((v475 << 8) ^ 0x1BC0000) & v476;
  v478 = v469 ^ (2
               * ((v477 << 16) & 0x58A90000 ^ v477 ^ ((v477 << 16) ^ 0x3D530000) & ((v476 << 8) & 0xD8A90000 ^ 0x50000000 ^ ((v476 << 8) ^ 0x29BD0000) & v476)));
  v479 = 373 * v470 + 1194073847;
  v480 = v479 & 0x161B1 ^ 0xC55CE3F0 ^ (v479 ^ 0x7D8D8241) & 0xA00D1CD ^ ((2 * (v479 & 0x161B1 ^ 0xC55CE3F0)) ^ 0x4BD162D) & 0x8400C3E0 ^ (((2 * (v479 & 0x161B1 ^ 0xC55CE3F0)) ^ 0x4BD162D) & (v479 ^ 0x7D8D8241) | 0xB1010410);
  v481 = (2 * (v479 ^ 0x7D8D8241)) & 0x4540E3F0 ^ 0x45482010 ^ ((2 * (v479 ^ 0x7D8D8241)) ^ 0xAA1C7E0) & (v479 ^ 0x7D8D8241);
  v482 = (4 * v480) & 0xC158E3F0 ^ v480 ^ ((4 * v480) ^ 0x41449880) & v481;
  v483 = (4 * v481) & 0xC558E3F0 ^ 0xC0186030 ^ ((4 * v481) ^ 0x15638FC0) & v481;
  v484 = (16 * v482) & 0xC558E3F0 ^ v482 ^ ((16 * v482) ^ 0x111A6A00) & v483;
  v485 = (16 * v483) & 0xC558E3F0 ^ 0x8050C0F0 ^ ((16 * v483) ^ 0x558E3F00) & v483;
  v486 = v484 ^ (v484 << 8) & 0xC558E300 ^ ((v484 << 8) ^ 0x9C4A000) & v485;
  v487 = v479 ^ (2
               * (((v486 ^ 0xF4118750) << 16) & 0x45580000 ^ v486 ^ 0xF4118750 ^ (((v486 ^ 0xF4118750) << 16) ^ 0x63F00000) & ((v485 << 8) & 0x45580000 ^ 0x5180000 ^ ((v485 << 8) ^ 0x58E30000) & v485))) ^ 0x3DE93236;
  v488 = 0x3EE4F99CBEA615
       * (((v487 ^ 0x96F8B9598CFEEC1ELL) + 0x690746A6730113E2) ^ ((v487 ^ 0x4B808A2931FE6ED6) - 0x4B808A2931FE6ED6) ^ ((v487 ^ 0xDD783370302D16AFLL) + 0x2287CC8FCFD2E951))
       - 0x7D2A191B09233A5DLL;
  v489 = (v488 ^ 0xE6F07B196E92497) & (2 * (v488 & 0xAE0E1724148D30D0)) ^ v488 & 0xAE0E1724148D30D0;
  v490 = ((2 * (v488 ^ 0x5E6B0FF1B6E96417)) ^ 0xE0CA31AB44C8A98ELL) & (v488 ^ 0x5E6B0FF1B6E96417) ^ (2 * (v488 ^ 0x5E6B0FF1B6E96417)) & 0xF06518D5A26454C6;
  v491 = (v490 ^ 0xE040108000400080) & (4 * v489) ^ v489;
  v492 = ((4 * (v490 ^ 0x10250854A2245441)) ^ 0xC19463568991531CLL) & (v490 ^ 0x10250854A2245441) ^ (4 * (v490 ^ 0x10250854A2245441)) & 0xF06518D5A26454C4;
  v493 = (v492 ^ 0xC004005480005000) & (16 * v491) ^ v491;
  v494 = ((16 * (v492 ^ 0x30611881226404C3)) ^ 0x6518D5A26454C70) & (v492 ^ 0x30611881226404C3) ^ (16 * (v492 ^ 0x30611881226404C3)) & 0xF06518D5A26454C0;
  v495 = (v494 ^ 0x41085022444400) & (v493 << 8) ^ v493;
  v496 = (((v494 ^ 0xF024108580201087) << 8) ^ 0x6518D5A26454C700) & (v494 ^ 0xF024108580201087) ^ ((v494 ^ 0xF024108580201087) << 8) & 0xF06518D5A2645400;
  v497 = v495 ^ 0xF06518D5A26454C7 ^ (v496 ^ 0x6000108020440000) & (v495 << 16);
  v498 = v488 ^ (2
               * ((v497 << 32) & 0x706518D500000000 ^ v497 ^ ((v497 << 32) ^ 0x226454C700000000) & (((v496 ^ 0x90650855822010C7) << 16) & 0x706518D500000000 ^ 0x6020189100000000 ^ (((v496 ^ 0x90650855822010C7) << 16) ^ 0x18D5A26400000000) & (v496 ^ 0x90650855822010C7))));
  v499 = (__CFADD__(v498 ^ 0x925E2437C115CC55, 0xC238F3BE11C43291) - 1) ^ (__CFADD__(v498 ^ 0xB0FE9475E3C08A67, 0xE09843FC331174A3)- 1);
  v500 = ((v498 ^ 0x925E2437C115CC55) - 0x3DC70C41EE3BCD6FLL) ^ ((v498 ^ 0xB0FE9475E3C08A67) - 0x1F67BC03CCEE8B5DLL);
  v498 ^= 0x2CACB7477290DF6CuLL;
  v501 = __CFADD__(v498, 0x7CCA60CEA24121AALL);
  v502 = v500 ^ (v498 + 0x7CCA60CEA24121AALL);
  v503 = (((unint64_t)v502 * (unsigned __int128)0x412uLL) >> 64) + 1042 * (v499 ^ (v501 - 1));
  v501 = __CFADD__(1042 * v502, 0xB13B241CA3F24708);
  LODWORD(v502) = 373
                * (((v478 ^ 0xF2638D52) - 310786030) ^ ((v478 ^ 0x8CFE7849) - 1813758709) ^ ((v478 ^ 0x1355DBC0)
                                                                                           + 206544516))
                - 628903257;
  LODWORD(v500) = (v502 ^ 0x90C1F64F) & (2 * (v502 & 0xD8E5876C)) ^ v502 & 0xD8E5876C;
  v504 = ((2 * (v502 ^ 0xB109FE9F)) ^ 0xD3D8F3E6) & (v502 ^ 0xB109FE9F) ^ (2 * (v502 ^ 0xB109FE9F)) & 0x69EC79F2;
  LODWORD(v500) = (v504 ^ 0x498831E1) & (4 * v500) ^ v500;
  v505 = ((4 * (v504 ^ 0x28240811)) ^ 0xA7B1E7CC) & (v504 ^ 0x28240811) ^ (4 * (v504 ^ 0x28240811)) & 0x69EC79F0;
  LODWORD(v500) = (v505 ^ 0x21A061C0) & (16 * v500) ^ v500;
  v506 = ((16 * (v505 ^ 0x484C1833)) ^ 0x9EC79F30) & (v505 ^ 0x484C1833) ^ (16 * (v505 ^ 0x484C1833)) & 0x69EC79F0;
  LODWORD(v500) = v500 ^ 0x69EC79F3 ^ (v506 ^ 0x8C419C3) & ((_DWORD)v500 << 8);
  v507 = v502 ^ (2
                             * (((_DWORD)v500 << 16) & 0x69EC0000 ^ v500 ^ (((_DWORD)v500 << 16) ^ 0x79F30000) & (((v506 ^ 0x612860C3) << 8) & 0x69EC0000 ^ 0x1840000 ^ (((v506 ^ 0x612860C3) << 8) ^ 0x6C790000) & (v506 ^ 0x612860C3)))) ^ 0x55D0E0ED;
  v508 = 0x3EE4F99CBEA615
       * (((v507 ^ 0x5A2FB735FAAE09CLL) - 0x5A2FB735FAAE09CLL) ^ ((v507 ^ 0x51287CB8AA8D733BLL) - 0x51287CB8AA8D733BLL) ^ ((v507 ^ 0x548A87CB780A07C0) - 0x548A87CB780A07C0))
       - 0x4E9BC1708E844EDBLL;
  v509 = (v508 ^ 0x7F7F3E79DDCE200FLL) & (2 * (v508 & 0x7F7FBF7999EE454ELL)) ^ v508 & 0x7F7FBF7999EE454ELL;
  v510 = ((2 * (v508 ^ 0x6D8D7668FD4A2083)) ^ 0x25E59222C948CB9ALL) & (v508 ^ 0x6D8D7668FD4A2083) ^ (2 * (v508 ^ 0x6D8D7668FD4A2083)) & 0x12F2C91164A465CCLL;
  v511 = (v510 ^ 0xE0800040000108) & (4 * v509) ^ v509;
  v512 = ((4 * (v510 ^ 0x1212491124A42445)) ^ 0x4BCB244592919734) & (v510 ^ 0x1212491124A42445) ^ (4 * (v510 ^ 0x1212491124A42445)) & 0x12F2C91164A465CCLL;
  v513 = (v512 ^ 0x2C2000100800500) & (16 * v511) ^ v511;
  v514 = ((16 * (v512 ^ 0x1030C910642460C9)) ^ 0x2F2C91164A465CD0) & (v512 ^ 0x1030C910642460C9) ^ (16 * (v512 ^ 0x1030C910642460C9)) & 0x12F2C91164A465C0;
  v515 = (v514 ^ 0x220811040044400) & (v513 << 8) ^ v513;
  v516 = (((v514 ^ 0x10D2480124A0210DLL) << 8) ^ 0xF2C91164A465CD00) & (v514 ^ 0x10D2480124A0210DLL) ^ ((v514 ^ 0x10D2480124A0210DLL) << 8) & 0x12F2C91164A46500;
  v517 = v515 ^ 0x12F2C91164A465CDLL ^ (v516 ^ 0x12C0010024240000) & (v515 << 16);
  v518 = v508 ^ (2
               * ((v517 << 32) & 0x12F2C91100000000 ^ v517 ^ ((v517 << 32) ^ 0x64A465CD00000000) & (((v516 ^ 0x32C811408020CDLL) << 16) & 0x12F2C91100000000 ^ 0x12E2891100000000 ^ (((v516 ^ 0x32C811408020CDLL) << 16) ^ 0x491164A400000000) & (v516 ^ 0x32C811408020CDLL))));
  v519 = v501 + v503 + 1339179417;
  v520 = ((v518 ^ 0x40DE49498019CFD3) + 0x358F9A3744EC01DELL) ^ ((v518 ^ 0x4F603163775FB861) + 0x3A31E21DB3AA7670);
  v521 = __CFADD__(1042 * (v520 ^ ((v518 ^ 0x5464D773A7E0F966) + 0x2135040D63153769)), 0x8C40A6E64522049ALL)
       + (((v520 ^ ((v518 ^ 0x5464D773A7E0F966uLL) + 0x2135040D63153769)) * (unsigned __int128)0x412uLL) >> 64)
       + 1042
       * ((__CFADD__(v518 ^ 0x40DE49498019CFD3, 0x358F9A3744EC01DELL) - 1) ^ (__CFADD__(v518 ^ 0x4F603163775FB861, 0x3A31E21DB3AA7670)- 1) ^ (__CFADD__(v518 ^ 0x5464D773A7E0F966, 0x2135040D63153769)- 1))+ 1166676274;
  LODWORD(v518) = (v521 ^ 0x3965EAB8) & (2 * (v521 & 0xBA75F222)) ^ v521 & 0xBA75F222;
  LODWORD(v520) = ((2 * (v521 ^ 0x29646AB8)) ^ 0x26233134) & (v521 ^ 0x29646AB8) ^ (2 * (v521 ^ 0x29646AB8)) & 0x9311989A;
  LODWORD(v518) = (v520 ^ 0x2011012) & (4 * v518) ^ v518;
  LODWORD(v520) = ((4 * (v520 ^ 0x9110888A)) ^ 0x4C466268) & (v520 ^ 0x9110888A) ^ (4 * (v520 ^ 0x9110888A)) & 0x93119898;
  LODWORD(v518) = v520 & (16 * v518) ^ v518;
  LODWORD(v520) = ((16 * (v520 ^ 0x93119892)) ^ 0x311989A0) & (v520 ^ 0x93119892) ^ (16 * (v520 ^ 0x93119892)) & 0x93119890;
  LODWORD(v518) = v518 ^ 0x9311989A ^ (v520 ^ 0x11118800) & ((_DWORD)v518 << 8);
  v522 = ((_DWORD)v518 << 16) & 0x13110000 ^ v518 ^ (((_DWORD)v518 << 16) ^ 0x189A0000) & (((v520 ^ 0x8200101A) << 8) & 0x93110000 ^ 0x2010000 ^ (((v520 ^ 0x8200101A) << 8) ^ 0x11980000) & (v520 ^ 0x8200101A));
  LODWORD(v518) = ((v463 ^ v468) >> 11) & 0xE0 | ((v463 ^ v468) >> 19) & 0x1F;
  v523 = v463 ^ v468;
  v524 = STACK[0x18B8];
  LODWORD(v518) = 373
                * (((*(_BYTE *)((v518 ^ 0x9D) + STACK[0x18B8] + 1665) - 38) ^ ((*(_BYTE *)((v518 ^ 0x9D) + STACK[0x18B8] + 1665) - 38) >> 5) ^ ((*(_BYTE *)((v518 ^ 0x9D) + STACK[0x18B8] + 1665) - 38) >> 4)) ^ 0xE2)
                + 98472;
  LODWORD(v518) = *((_DWORD *)&STACK[0x18D0]
                  + (v518 - 1042 * ((4121850 * (unint64_t)v518) >> 32)));
  v525 = STACK[0x18A0];
  HIDWORD(v526) = v518 ^ 0x67;
  LODWORD(v526) = v518 ^ LODWORD(STACK[0x18A0]);
  v527 = ((v526 >> 8) - 1926392729 - ((2 * (v526 >> 8)) & 0x1A5B28CE)) ^ *((_DWORD *)&STACK[0x18D0]
                                                                         + (v521 ^ (2 * v522) ^ 0xBC76C316));
  LODWORD(STACK[0x18A8]) = v468;
  v528 = v461 ^ v468;
  LODWORD(STACK[0x17E0]) = (373 * BYTE2(v528) + 98472) % ((v527 & 0x412 ^ 0x412) + (v527 & 0x412u));
  LODWORD(v518) = 1877389891 * (LODWORD(STACK[0x1480]) ^ 0x10143BBE)
                + ((1877389891 * (LODWORD(STACK[0x1480]) ^ 0x10143BBEu)) >> 16)
                - ((1877389891 * (LODWORD(STACK[0x1480]) ^ 0x10143BBE)
                  + ((1877389891 * (LODWORD(STACK[0x1480]) ^ 0x10143BBEu)) >> 16)) >> 8);
  LODWORD(v518) = 2034894531 * ((v518 - 1926392729 - ((2 * v518) & 0x1A5B28CE)) ^ v423);
  LODWORD(v518) = v518 - WORD1(v518) + ((v518 - WORD1(v518)) >> 8);
  LODWORD(v518) = 239467589 * ((v518 - 1926392729 - ((2 * v518) & 0x1A5B28CE)) ^ v421);
  LODWORD(v518) = -500632245
                * (LODWORD(STACK[0x13CC]) + ((v518 - WORD1(v518)) ^ ((v518 - WORD1(v518)) >> 8)));
  LODWORD(v518) = (((LODWORD(STACK[0x15B0]) ^ 0x416259A6) - 1096964518) ^ ((LODWORD(STACK[0x15B0]) ^ 0x58AEF0D8)
                                                                         - 1487859928) ^ ((LODWORD(STACK[0x15B0]) ^ 0x94E13D19)
                                                                                        + 1797178087))
                + v518
                + WORD1(v518)
                + ((v518 + WORD1(v518)) >> 8)
                - 1191336888;
  LODWORD(v520) = (v518 ^ 0xD10FE5DE) & (2 * (v518 & 0xD42FF01F)) ^ v518 & 0xD42FF01F;
  LODWORD(v516) = ((2 * (v518 ^ 0xF95AA5D2)) ^ 0x5AEAAB9A) & (v518 ^ 0xF95AA5D2) ^ (2 * (v518 ^ 0xF95AA5D2)) & 0x2D7555CC;
  LODWORD(v520) = (v516 ^ 0x600088) & (4 * v520) ^ v520;
  LODWORD(v516) = ((4 * (v516 ^ 0x25155445)) ^ 0xB5D55734) & (v516 ^ 0x25155445) ^ (4 * (v516 ^ 0x25155445)) & 0x2D7555CC;
  LODWORD(v520) = (v516 ^ 0x25555500) & (16 * v520) ^ v520;
  LODWORD(v516) = ((16 * (v516 ^ 0x82000C9)) ^ 0xD7555CD0) & (v516 ^ 0x82000C9) ^ (16 * (v516 ^ 0x82000C9)) & 0x2D7555C0;
  LODWORD(v520) = v520 ^ 0x2D7555CD ^ (v516 ^ 0x555540D) & ((_DWORD)v520 << 8);
  LODWORD(STACK[0x1738]) = v518 ^ (2
                                 * (((_DWORD)v520 << 16) & 0x2D750000 ^ v520 ^ (((_DWORD)v520 << 16) ^ 0x55CD0000) & (((v516 ^ 0x2820010D) << 8) & 0x2D750000 ^ 0x8200000 ^ (((v516 ^ 0x2820010D) << 8) ^ 0x75550000) & (v516 ^ 0x2820010D))));
  v529 = (((LODWORD(STACK[0x1790]) ^ 0xCB25EA03) + 886707709) ^ ((LODWORD(STACK[0x1790]) ^ 0xE103DD98) + 519840360) ^ ((LODWORD(STACK[0x1790]) ^ 0xA70BA3FC) + 1492409348))
       + (((LODWORD(STACK[0x15AC]) ^ 0x8B5E17BF) + 1956767809) ^ ((LODWORD(STACK[0x15AC]) ^ 0xAC627CA5) + 1402831707) ^ ((LODWORD(STACK[0x15AC]) ^ 0xAA11FF7D) + 1441661059));
  LODWORD(STACK[0x13CC]) = v529;
  LODWORD(v520) = ((v529 + 1722370806) ^ 0xB3A19D90) & (2 * ((v529 + 1722370806) & 0xB3B1DDD8)) ^ (v529 + 1722370806) & 0xB3B1DDD8;
  LODWORD(v516) = ((2 * ((v529 + 1722370806) ^ 0x948087A0)) ^ 0x4E62B4F0) & ((v529 + 1722370806) ^ 0x948087A0) ^ (2 * ((v529 + 1722370806) ^ 0x948087A0)) & 0x27315A78;
  LODWORD(v520) = (v516 ^ 0x6001060) & (4 * v520) ^ v520;
  LODWORD(v516) = ((4 * (v516 ^ 0x21114A08)) ^ 0x9CC569E0) & (v516 ^ 0x21114A08) ^ (4 * (v516 ^ 0x21114A08)) & 0x27315A78;
  LODWORD(v520) = (v516 ^ 0x4014878) & (16 * v520) ^ v520;
  LODWORD(v516) = ((16 * (v516 ^ 0x23301218)) ^ 0x7315A780) & (v516 ^ 0x23301218) ^ (16 * (v516 ^ 0x23301218)) & 0x27315A70;
  LODWORD(v520) = v520 ^ 0x27315A78 ^ (v516 ^ 0x23110200) & ((_DWORD)v520 << 8);
  v530 = (v529 + 1722370806) ^ (2
                              * (((_DWORD)v520 << 16) & 0x27310000 ^ v520 ^ (((_DWORD)v520 << 16) ^ 0x5A780000) & (((v516 ^ 0x4205878) << 8) & 0x27310000 ^ 0x6210000 ^ (((v516 ^ 0x4205878) << 8) ^ 0x315A0000) & (v516 ^ 0x4205878))));
  LODWORD(v518) = v447 ^ LODWORD(STACK[0x1024]) ^ LODWORD(STACK[0x16C0]);
  LODWORD(STACK[0x1898]) = -1926392728;
  v531 = *(unsigned __int8 *)((LODWORD(STACK[0x1028]) ^ 0x13 ^ (-3 * HIBYTE(v528)))
                            + v524
                            + 39526);
  v532 = (v531 >> 3) & 0x15 ^ v531;
  LODWORD(STACK[0x1084]) = v532 ^ 0x4C;
  HIDWORD(v526) = v532;
  LODWORD(v526) = (v532 ^ 0x4C) << 24;
  v533 = v526 >> 26;
  LODWORD(v520) = (v519 ^ 0x2A2DBCF7) & (2 * (v519 & 0xB02DC0F8)) ^ v519 & 0xB02DC0F8;
  LODWORD(v516) = ((2 * (v519 ^ 0x4A76BCA7)) ^ 0xF4B6F8BE) & (v519 ^ 0x4A76BCA7) ^ (2 * (v519 ^ 0x4A76BCA7)) & 0xFA5B7C5E;
  LODWORD(v520) = (v516 ^ 0xC0120000) & (4 * v520) ^ v520;
  LODWORD(v516) = ((4 * (v516 ^ 0xA490441)) ^ 0xE96DF17C) & (v516 ^ 0xA490441) ^ (4 * (v516 ^ 0xA490441)) & 0xFA5B7C5C;
  LODWORD(v520) = (v516 ^ 0xE8497040) & (16 * v520) ^ v520;
  LODWORD(v516) = ((16 * (v516 ^ 0x12120C03)) ^ 0xA5B7C5F0) & (v516 ^ 0x12120C03) ^ (16 * (v516 ^ 0x12120C03)) & 0xFA5B7C50;
  LODWORD(v520) = v520 ^ 0xFA5B7C5F ^ (v516 ^ 0xA013440F) & ((_DWORD)v520 << 8);
  v534 = v519 ^ (2
               * (((_DWORD)v520 << 16) & 0x7A5B0000 ^ v520 ^ (((_DWORD)v520 << 16) ^ 0x7C5F0000) & (((v516 ^ 0x5A48380F) << 8) & 0x7A5B0000 ^ 0x20030000 ^ (((v516 ^ 0x5A48380F) << 8) ^ 0x5B7C0000) & (v516 ^ 0x5A48380F))));
  v535 = (v518 - 1926392728 + ~((2 * v518) & 0x1A5B28CE)) ^ v468;
  LODWORD(v518) = BYTE2(v535) + 1215035005;
  LODWORD(v516) = (v518 ^ 0xECD5040B) & (2 * (v518 & 0x8B)) ^ v518 & 0x8B;
  LODWORD(v496) = (2 * (v518 ^ 0xECD5050D)) & 0x786 ^ 0x82 ^ ((2 * (v518 ^ 0xECD5050D)) ^ 0xA482130C) & (v518 ^ 0xECD5050D);
  LODWORD(v516) = (4 * v516) & 0xFFFFFE07 ^ v516 ^ ((4 * v516) | 0x1800) & v496;
  LODWORD(v496) = (4 * v496) & 0x5B410F84 ^ 0x12410186 ^ ((4 * v496) ^ 0x6D043E18) & v496;
  LODWORD(v516) = (16 * v516) & 0x5B410F80 ^ v516 ^ ((16 * v516) ^ 0xE000) & v496;
  LODWORD(v496) = (16 * v496) & 0x5B410F80 ^ 0x4B410786 ^ ((16 * v496) ^ 0xB410F860) & v496;
  LODWORD(v516) = v516 ^ 0x5B410186 ^ ((_DWORD)v516 << 8) & 0x5B410F00 ^ (((_DWORD)v516 << 8) ^ 0xE0000) & v496;
  LODWORD(v516) = v518 ^ (2
                        * (((_DWORD)v516 << 16) & 0x5B410000 ^ v516 ^ (((_DWORD)v516 << 16) ^ 0xF860000) & (((_DWORD)v496 << 8) & 0x5B410000 ^ 0x1A400000 ^ (((_DWORD)v496 << 8) ^ 0x410F0000) & v496)));
  LODWORD(v518) = HIBYTE(v535) + 1178851963;
  LODWORD(STACK[0x1690]) = v535;
  LODWORD(v496) = (2 * (v518 & 0x8D)) ^ v518 & 0x8D ^ ((2 * (v518 & 0x8D)) | 0x400) & (v518 ^ 0xA98C532);
  v536 = (2 * (v518 ^ 0xA98C532)) & 0x3BE ^ 0x81 ^ ((2 * (v518 ^ 0xA98C532)) ^ 0x4449077E) & (v518 ^ 0xA98C532);
  LODWORD(v496) = (4 * v496) & 0x3324E3BC ^ v496 ^ ((4 * v496) | 0x800) & v536;
  v537 = (4 * v536) & 0xB324E3BC ^ 0x33246103 ^ ((4 * v536) ^ 0xCC938EFC) & v536;
  LODWORD(v496) = (16 * v496) & 0x3324E3B0 ^ v496 ^ ((16 * v496) ^ 0x2000) & v537;
  v538 = (16 * v537) & 0xB324E3B0 ^ 0x8120C00F ^ ((16 * v537) ^ 0x324E3BF0) & v537;
  LODWORD(v496) = v496 ^ ((_DWORD)v496 << 8) & 0x3324E300 ^ (((_DWORD)v496 << 8) ^ 0x220000) & v538;
  LODWORD(v518) = v518 ^ (2
                        * (((v496 ^ 0xB304C1BF) << 16) & 0x33240000 ^ v496 ^ 0xB304C1BF ^ (((v496 ^ 0xB304C1BF) << 16) ^ 0x63BF0000) & ((v538 << 8) & 0x33240000 ^ 0x13040000 ^ ((v538 << 8) ^ 0x24E30000) & v538)));
  v539 = (373
        * (((v518 ^ 0xA38000B4) + 1223658208) ^ ((v518 ^ 0x354007F7) - 567308899) ^ ((v518 ^ 0xF7DE6B0) - 468554532))
        - 1284949485)
       % 0x412;
  BYTE1(v529) = BYTE1(v523);
  LODWORD(STACK[0x1578]) = v523;
  v540 = 373 * v523 + 1715701795;
  LODWORD(v518) = (v540 ^ 0x71CDF210) & (2 * (v540 & 0x5F885)) ^ v540 & 0x5F885;
  LODWORD(v496) = ((2 * (v540 ^ 0x71C4021A)) ^ 0x1083F53E) & (v540 ^ 0x71C4021A) ^ (2 * (v540 ^ 0x71C4021A)) & 0x2809FA9E;
  LODWORD(v518) = (v496 ^ 0x2831E89C) & (4 * v518) ^ v518;
  LODWORD(v496) = ((4 * (v496 ^ 0x28080A81)) ^ 0x21E7EA7C) & (v496 ^ 0x28080A81) ^ (4 * (v496 ^ 0x28080A81)) & 0x6879FA9C;
  LODWORD(v518) = (v496 ^ 0xA061EA10) & (16 * v518) ^ v518;
  LODWORD(v496) = ((16 * (v496 ^ 0x48181083)) ^ 0x79FA9F0) & (v496 ^ 0x48181083) ^ (16 * (v496 ^ 0x48181083)) & 0xE879FA90;
  LODWORD(v518) = v518 ^ 0xE879FA9F ^ (v496 ^ 0x8019A800) & ((_DWORD)v518 << 8);
  v541 = ((_DWORD)v518 << 16) & 0x68790000 ^ v518 ^ (((_DWORD)v518 << 16) ^ 0x7A9F0000) & (((v496 ^ 0x6860520F) << 8) & 0x68790000 ^ (((v496 ^ 0x6860520F) << 8) ^ 0x79FA0000) & (v496 ^ 0x6860520F) ^ 0x10000);
  LODWORD(v518) = 373 * v528 + 347568283;
  LODWORD(v496) = (v518 ^ 0xB44149E8) & (2 * (v518 & 0xA080D)) ^ v518 & 0xA080D;
  v542 = ((2 * (v518 ^ 0xB45159E0)) ^ 0xA026A3DA) & (v518 ^ 0xB45159E0) ^ (2 * (v518 ^ 0xB45159E0)) & 0x411B51EC;
  LODWORD(v496) = (v542 ^ 0x41111049) & (4 * v496) ^ v496;
  v543 = ((4 * (v542 ^ 0x41095025)) ^ 0x7C6D47B4) & (v542 ^ 0x41095025) ^ (4 * (v542 ^ 0x41095025)) & 0x5F1B51EC;
  LODWORD(v496) = (v543 ^ 0x5C0941A0) & (16 * v496) ^ v496;
  v544 = ((16 * (v543 ^ 0x3121049)) ^ 0xF1B51ED0) & (v543 ^ 0x3121049) ^ (16 * (v543 ^ 0x3121049)) & 0x5F1B51E0;
  LODWORD(v496) = v496 ^ 0x5F1B51ED ^ (v544 ^ 0x5111102D) & ((_DWORD)v496 << 8);
  v545 = v518 ^ (2
                             * (((_DWORD)v496 << 16) & 0x5F1B0000 ^ v496 ^ (((_DWORD)v496 << 16) ^ 0x51ED0000) & (((v544 ^ 0xE0A412D) << 8) & 0x5F1B0000 ^ 0x440A0000 ^ (((v544 ^ 0xE0A412D) << 8) ^ 0x1B510000) & (v544 ^ 0xE0A412D)))) ^ 0x7A433FB0;
  v546 = 0x3EE4F99CBEA615
       * (((v545 ^ 0x79423E14FF5ECF44) - 0x79423E14FF5ECF44) ^ ((v545 ^ 0x2465774637CA45BALL) - 0x2465774637CA45BALL) ^ ((v545 ^ 0x5D27495245B91E99) - 0x5D27495245B91E99))
       + 0x4DE56D855738D06ALL;
  v547 = (v546 ^ 0xF0FE82B331B18469) & (2 * (v546 & 0xE2FE9083B4312609)) ^ v546 & 0xE2FE9083B4312609;
  v548 = ((2 * (v546 ^ 0xB1EBA2B451D18479)) ^ 0xA62A646FCBC144E0) & (v546 ^ 0xB1EBA2B451D18479) ^ (2 * (v546 ^ 0xB1EBA2B451D18479)) & 0x53153237E5E0A270;
  v549 = (v548 ^ 0x2000007C1C00060) & (4 * v547) ^ v547;
  v550 = ((4 * (v548 ^ 0x511512102420A210)) ^ 0x4C54C8DF978289C0) & (v548 ^ 0x511512102420A210) ^ (4 * (v548 ^ 0x511512102420A210)) & 0x53153237E5E0A270;
  v551 = (v550 ^ 0x4014001785808040) & (16 * v549) ^ v549;
  v552 = ((16 * (v550 ^ 0x1301322060602230)) ^ 0x3153237E5E0A2700) & (v550 ^ 0x1301322060602230) ^ (16 * (v550 ^ 0x1301322060602230)) & 0x53153237E5E0A270;
  v553 = (v552 ^ 0x1111223644002200) & (v551 << 8) ^ v551;
  v554 = (((v552 ^ 0x42041001A1E08070) << 8) ^ 0x153237E5E0A27000) & (v552 ^ 0x42041001A1E08070) ^ ((v552 ^ 0x42041001A1E08070) << 8) & 0x53153237E5E0A200;
  v555 = v553 ^ 0x53153237E5E0A270 ^ (v554 ^ 0x11103225E0A00000) & (v553 << 16);
  v556 = v546 ^ (2
               * ((v555 << 32) & 0x5315323700000000 ^ v555 ^ ((v555 << 32) ^ 0x65E0A27000000000) & (((v554 ^ 0x4205001205408270) << 16) & 0x5315323700000000 ^ 0x4100121700000000 ^ (((v554 ^ 0x4205001205408270) << 16) ^ 0x3237E5E000000000) & (v554 ^ 0x4205001205408270))));
  v557 = ((v556 ^ 0xBFF37E6422DA868CLL) - 0x9C68F8216D65514) ^ ((v556 ^ 0xE934A135308C5B1FLL) - 0x5F0150D304808887);
  LODWORD(v556) = __CFADD__(1042 * (v557 ^ ((v556 ^ 0x90136FDD6DA6BF7ALL) - 0x26269E3B59AA6CE2)), 0x74DC42A94A8A3DF2)+ (((v557 ^ ((v556 ^ 0x90136FDD6DA6BF7ALL) - 0x26269E3B59AA6CE2)) * (unsigned __int128)0x412uLL) >> 64)+ 1042* ((__CFADD__(v556 ^ 0xBFF37E6422DA868CLL, 0xF639707DE929AAECLL) - 1) ^ (__CFADD__(v556 ^ 0xE934A135308C5B1FLL, 0xA0FEAF2CFB7F7779)- 1) ^ (__CFADD__(v556 ^ 0x90136FDD6DA6BF7ALL, 0xD9D961C4A655931ELL)- 1))+ 504154621;
  LODWORD(v557) = (v556 ^ 0xC5F237EF) & (2 * (v556 & 0xE1F337CE)) ^ v556 & 0xE1F337CE;
  LODWORD(v554) = ((2 * (v556 ^ 0xC654326F)) ^ 0x4F4E0B42) & (v556 ^ 0xC654326F) ^ (2 * (v556 ^ 0xC654326F)) & 0x27A705A0;
  LODWORD(v557) = (v554 ^ 0x7040100) & (4 * v557) ^ v557;
  LODWORD(v554) = ((4 * (v554 ^ 0x20A104A1)) ^ 0x9E9C1684) & (v554 ^ 0x20A104A1) ^ (4 * (v554 ^ 0x20A104A1)) & 0x27A705A0;
  LODWORD(v557) = (v554 ^ 0x6840481) & (16 * v557) ^ v557;
  LODWORD(v554) = ((16 * (v554 ^ 0x21230121)) ^ 0x7A705A10) & (v554 ^ 0x21230121) ^ (16 * (v554 ^ 0x21230121)) & 0x27A705A0;
  LODWORD(v557) = v557 ^ 0x27A705A1 ^ (v554 ^ 0x222000A1) & ((_DWORD)v557 << 8);
  LODWORD(v556) = v556 ^ 0xA5FF3C8C ^ (2
                                     * (((_DWORD)v557 << 16) & 0x27A70000 ^ v557 ^ (((_DWORD)v557 << 16) ^ 0x5A10000) & (((v554 ^ 0x58705A1) << 8) & 0x27A70000 ^ 0xA20000 ^ (((v554 ^ 0x58705A1) << 8) ^ 0x27050000) & (v554 ^ 0x58705A1))));
  v558 = (v540 ^ 0x997C0DBB ^ (2 * v541)) % 0x412;
  LODWORD(v516) = *((_DWORD *)&STACK[0x18D0]
                  + (373
                   * (((v516 ^ 0xCE1E72A3) - 1411773251) ^ ((v516 ^ 0x8B57BD45) - 292306085) ^ ((v516 ^ 0x525FDA61) + 932947071))
                   - 1284949485)
                  % 0x412);
  HIDWORD(v526) = v516 ^ 0x67;
  LODWORD(v526) = v516 ^ v525;
  v559 = v526 >> 8;
  LODWORD(STACK[0x13C0]) = v534;
  LODWORD(v516) = *((_DWORD *)&STACK[0x18D0] + (v534 ^ 0xB42D3846));
  HIDWORD(v526) = v516 ^ 0x67;
  LODWORD(v526) = v516 ^ v525;
  LODWORD(v516) = v526 >> 8;
  LODWORD(v557) = *((_DWORD *)&STACK[0x18D0]
                  + (373 * BYTE1(v529)
                                 + 98472
                                 - 1042
                                 * ((4121850 * (unint64_t)(373 * BYTE1(v529) + 98472)) >> 32)));
  HIDWORD(v526) = v557 ^ 0x9467;
  LODWORD(v526) = v557 ^ 0x8D2D0000;
  LODWORD(v516) = (v526 >> 16) ^ v516;
  LODWORD(v557) = *((_DWORD *)&STACK[0x18D0]
                  + (373 * BYTE1(v528)
                                 + 98472
                                 - 1042
                                 * ((4121850 * (unint64_t)(373 * BYTE1(v528) + 98472)) >> 32)));
  HIDWORD(v526) = v557 ^ 0x9467;
  LODWORD(v526) = v557 ^ 0x8D2D0000;
  LODWORD(v557) = v526 >> 16;
  LODWORD(v554) = *((_DWORD *)&STACK[0x18D0]
                  + (373 * v535
                                 + 98472
                                 - 1042
                                 * ((4121850 * (unint64_t)(373 * v535 + 98472)) >> 32)));
  HIDWORD(v526) = v554 ^ 0x2D9467;
  LODWORD(v526) = v554 ^ 0x8D000000;
  LODWORD(v556) = __ROR4__(*((_DWORD *)&STACK[0x18D0] + v556), 24) ^ 0x2D94678D ^ *((_DWORD *)&STACK[0x18D0]
                                                                                                + ((v539
                                                                                                  - 1926392729
                                                                                                  - ((2 * v539) & 0x8CE)) ^ 0x8D2D9467)) ^ (v516 - 1926392729 - ((2 * v516) & 0x1A5B28CE));
  v560 = STACK[0x17CC];
  LODWORD(STACK[0x16C0]) = v530;
  LODWORD(v554) = ((v530 ^ 0x2941E5F9) - 1574901942) ^ ((v530 ^ 0x2BF280A0) - 1600945647) ^ ((v530 ^ 0xFB000C71)
                                                                                           + 1885408962);
  v561 = STACK[0x1738];
  LODWORD(v557) = ((2 * LODWORD(STACK[0x1798])) ^ 0x17A06500) - 442181838 + ((v526 >> 24) ^ v557 ^ v527);
  LODWORD(v524) = LODWORD(STACK[0x17EC]) ^ 0x72D26B98;
  v562 = STACK[0x1788];
  LODWORD(STACK[0x1528]) = LODWORD(STACK[0x1788]) ^ 0x8D2D9467;
  LODWORD(v556) = v524 + (v562 ^ 0x8D2D9467) + v556;
  LODWORD(v524) = v436 ^ 0x94678D2D ^ LODWORD(STACK[0x1848]) ^ __ROR4__(*((_DWORD *)&STACK[0x18D0]+ (373 * BYTE1(v560)+ 98472- 1042* ((4121850* (unint64_t)(373 * BYTE1(v560) + 98472)) >> 32))), 16);
  v563 = v557
       - (((v561 ^ 0x9E149EDB) + 1753853639) ^ ((v561 ^ 0x9B3A0EFF) + 1839677155) ^ ((v561 ^ 0x8161CBA1) + 2013068221))
       - v554;
  v564 = __ROR4__(*((_DWORD *)&STACK[0x18D0] + v558), 24) ^ 0x2D94678D ^ v559 ^ (v524
                                                                               - 1926392729
                                                                               - ((2 * v524) & 0x1A5B28CE)) ^ *((_DWORD *)&STACK[0x18D0] + (373 * v533 + 98472 - 1042 * ((4121850 * (unint64_t)(373 * v533 + 98472)) >> 32)));
  LODWORD(STACK[0x1788]) = v562;
  v565 = (v562 ^ 0x72D26B98) + (LODWORD(STACK[0x1678]) ^ 0x8D2D9467) + v564;
  v566 = v436 & 0x17 ^ 7;
  v567 = STACK[0x1498];
  LODWORD(STACK[0x12A8]) = v566;
  LODWORD(STACK[0x12A0]) = v436 & 8;
  v568 = ((v567 ^ 0x8D2D9467) >> LODWORD(STACK[0x1660]) >> LODWORD(STACK[0x1610]))
       + ((v567 ^ 0x8D2D9467) << v566 << (v436 & 8));
  v569 = LODWORD(STACK[0x101C]) << (!(STACK[0x1490] & 1) + (STACK[0x1490] & 1));
  LODWORD(v554) = v569 & 0xC50A3B4C ^ 0x41021040 ^ (v569 ^ 0xADADADAD) & STACK[0xFE8];
  v570 = STACK[0x1858];
  v571 = STACK[0x1858] & 0x1D ^ 5;
  v572 = STACK[0x1600];
  v573 = ~LODWORD(STACK[0x1858]) & 2;
  LODWORD(STACK[0x12B0]) = v573;
  LODWORD(STACK[0x12B8]) = v571;
  v574 = (v572 ^ 0x8D2D9467) >> v573 >> v571;
  v575 = v436 & 0x16 ^ 6;
  LODWORD(STACK[0x12D0]) = v436 & 9 ^ 1;
  LODWORD(STACK[0x12D8]) = v575;
  LODWORD(v524) = ((v572 ^ 0x8D2D9467) << (v436 & 9 ^ 1) << v575) | v574;
  v576 = v568 - 1926392729 - ((2 * v568) & 0x1A5B28CE);
  v577 = v556 - 1926392728 - ((2 * (v556 + 1)) & 0x1A5B28CE);
  v578 = ((2 * v554) & 0x5A24D6C6) - v554;
  v579 = v524 - 1926392729 - ((2 * v524) & 0x1A5B28CE);
  v580 = (_DWORD)v436 == -1926392729;
  if ((_DWORD)v436 != -1926392729)
    v567 = v576;
  v581 = v570 & 0x19 ^ 1;
  v582 = STACK[0x1560];
  LODWORD(STACK[0x1544]) = v581;
  LODWORD(STACK[0x1530]) = ~v570 & 6;
  LODWORD(STACK[0x12C8]) = v436 & 0x1C ^ 4;
  LODWORD(STACK[0x12C4]) = ~(_DWORD)v436 & 3;
  v583 = ((v582 ^ 0x8D2D9467) << (v436 & 0x1C ^ 4) << (~(_BYTE)v436 & 3))
       + ((v582 ^ 0x8D2D9467) >> v581 >> (~(_BYTE)v570 & 6));
  v584 = v583 - 1926392728 + ~((2 * v583) & 0x1A5B28CE);
  if ((_DWORD)v436 == -1926392729)
    v585 = v582;
  else
    v585 = v584;
  LODWORD(STACK[0x1664]) = v585;
  v586 = v577 ^ LODWORD(STACK[0x18A8]) ^ LODWORD(STACK[0x13D0]) ^ ((((v578 - 756181860) ^ 0x16E7ADD0) << LODWORD(STACK[0x10B4]) << LODWORD(STACK[0x10D0])) | ((v569 & 0x9AAD85BB ^ 0x88AD85A9 ^ (v569 ^ 0xADADADAD) & STACK[0xFE4]) >> LODWORD(STACK[0x10C4]) >> LODWORD(STACK[0x10C0])));
  v587 = LODWORD(STACK[0x159C]) ^ (v565 - 1926392728 - ((2 * (v565 + 1)) & 0x1A5B28CE));
  v588 = (v587 - 1926392729 - ((2 * v587) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1870]);
  v589 = v567 ^ LODWORD(STACK[0x1008]) ^ (v563 - 1926392729 - ((2 * v563) & 0x1A5B28CE));
  v590 = (v589 - 1926392729 - ((2 * v589) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1828]);
  v591 = (v590 - 1926392729 - ((2 * v590) & 0x1A5B28CE)) ^ v570;
  v592 = v591 - 1926392729 - ((2 * v591) & 0x1A5B28CE);
  v593 = (v588 - 1926392729 - ((2 * v588) & 0x1A5B28CE)) ^ v570;
  v594 = STACK[0x18A8];
  v595 = LODWORD(STACK[0xFFC]) ^ LODWORD(STACK[0x18A8]) ^ LODWORD(STACK[0x1000]) ^ (v593
                                                                                  - 1926392729
                                                                                  - ((2 * v593) & 0x1A5B28CE));
  v596 = (BYTE1(v586) ^ 0x94) + 632668087;
  v597 = (((BYTE1(v586) ^ 0x94) - 16457) & 0x4151 | (32
                                                   * (((unsigned __int16)(((BYTE1(v586) ^ 0x94) - 16457) & 0x4151) >> 4) & 1)) | 8) ^ (v596 ^ 0xF8DB057D) & (2 * (((BYTE1(v586) ^ 0x94) - 16457) & 0x4151));
  v598 = (2 * (v596 ^ 0xF8DB057D)) & 0x2291442C ^ 0x22914424 ^ ((2 * (v596 ^ 0xF8DB057D)) ^ 0x45228858) & (v596 ^ 0xF8DB057D);
  v599 = (4 * v597) & 0x1042C ^ v597 ^ v598 & 0x30FCC & (4 * v597);
  v600 = (4 * v598) & 0x2291442C ^ 0x2090440C ^ ((4 * v598) ^ 0x8A4510B0) & v598;
  v601 = (16 * v599) & 0x22914420 ^ v599 ^ ((16 * v599) ^ 0x280) & v600;
  v602 = (16 * v600) & 0x22914420 ^ 0x281042C ^ ((16 * v600) ^ 0x291442C0) & v600;
  v603 = v601 ^ 0x22914404 ^ (v601 << 8) & 0x22914400 ^ ((v601 << 8) ^ 0x2800) & v602;
  v604 = 373
       * (v596 ^ (2
                * ((v603 << 16) & 0x22910000 ^ v603 ^ ((v603 << 16) ^ 0x442C0000) & ((v602 << 8) & 0x22910000 ^ 0x22910000 ^ ((v602 << 8) ^ 0x11440000) & v602))) ^ 0x9F68C909)
       % 0x412;
  v605 = *((_DWORD *)&STACK[0x18D0] + ((v604 - 1926392729 - ((2 * v604) & 0x8CE)) ^ 0x8D2D9467));
  HIDWORD(v607) = v605 ^ 0x9467;
  LODWORD(v607) = v605 ^ 0x8D2D0000;
  v606 = v607 >> 16;
  v608 = BYTE1(v595) + 921966511;
  v609 = ((2 * (v608 & 0x959 ^ 0xCAA67966)) ^ 0x154882CC) & (v608 ^ 0x3AD903F) ^ v608 & 0x959 ^ 0xCAA67966 ^ ((2 * (v608 & 0x959 ^ 0xCAA67966)) & 0x80041022 | 0xAA00000);
  v610 = ((2 * (v608 ^ 0x3AD903F)) ^ 0x154882CC) & (v608 ^ 0x3AD903F) ^ (2 * (v608 ^ 0x3AD903F)) & 0x40021966;
  v611 = v609 ^ v610 & 0x21401480 ^ ((4 * v609) ^ 0xABEDB118) & (v610 ^ 0x8AA47046);
  v612 = ((4 * v610) ^ 0x8175D590) & (v610 ^ 0x8AA47046) ^ v610 & 0x21401480;
  v613 = v611 ^ v612 & 0xABE41480 ^ ((16 * v611) ^ 0x18382E0) & (v612 ^ 0x8AA41006);
  v614 = ((16 * v612) ^ 0x1A51480) & (v612 ^ 0x8AA41006) ^ v612 & 0xABE41480;
  v615 = v613 ^ v614 & 0xABE41480 ^ ((v613 << 8) ^ 0xA98D7280) & (v614 ^ 0x8AA41066);
  v616 = ((v614 << 8) ^ 0xFF41480) & (v614 ^ 0x8AA41066) ^ v614 & 0xABE41480;
  v617 = v608 ^ (2
               * (v615 ^ v616 & 0x2BE41480 ^ ((v615 << 16) ^ 0xD2821480) & (v616 ^ 0x40020000) ^ ((v615 << 16) ^ 0xD2821480) & 0x4AA61000));
  v618 = 373
       * (((v617 ^ 0xCF8A9673) - 195574145) ^ ((v617 ^ 0x1305B7D1) + 685303773) ^ ((v617 ^ 0x95801A37) - 1369617861))
       + 618793345;
  v619 = (v618 ^ 0x2CD63A83) & (2 * (v618 & 0x8E873092)) ^ v618 & 0x8E873092;
  v620 = ((2 * (v618 ^ 0x39DC5B83)) ^ 0x6EB6D622) & (v618 ^ 0x39DC5B83) ^ (2 * (v618 ^ 0x39DC5B83)) & 0xB75B6B10;
  v621 = (v620 ^ 0x26104200) & (4 * v619) ^ v619;
  v622 = ((4 * (v620 ^ 0x91492911)) ^ 0xDD6DAC44) & (v620 ^ 0x91492911) ^ (4 * (v620 ^ 0x91492911)) & 0xB75B6B10;
  v623 = (v622 ^ 0x95492800) & (16 * v621) ^ v621;
  v624 = ((16 * (v622 ^ 0x22124311)) ^ 0x75B6B110) & (v622 ^ 0x22124311) ^ (16 * (v622 ^ 0x22124311)) & 0xB75B6B10;
  v625 = v623 ^ 0xB75B6B11 ^ (v624 ^ 0x35122101) & (v623 << 8);
  v626 = v618 ^ (2
               * ((v625 << 16) & 0x375B0000 ^ v625 ^ ((v625 << 16) ^ 0x6B110000) & (((v624 ^ 0x82494A01) << 8) & 0x375B0000 ^ 0x24100000 ^ (((v624 ^ 0x82494A01) << 8) ^ 0x5B6B0000) & (v624 ^ 0x82494A01)))) ^ 0x2B3E72D7;
  v627 = 0x3EE4F99CBEA615
       * (((v626 ^ 0x2E140F07215512BDLL) - 0x2E140F07215512BDLL) ^ ((v626 ^ 0xAF4EFD75FBD6254CLL) + 0x50B1028A0429DAB4) ^ ((v626 ^ 0x815AF27257AEA396) + 0x7EA50D8DA8515C6ALL))
       - 0x1EFBF6D8813250D8;
  v628 = (v627 ^ 0x6FDFF4E12A582623) & (2 * (v627 & 0x4FDFF4E18C9C474BLL)) ^ v627 & 0x4FDFF4E18C9C474BLL;
  v629 = ((2 * (v627 ^ 0xE253152332702E23)) ^ 0x5B19C3857DD8D2D0) & (v627 ^ 0xE253152332702E23) ^ (2 * (v627 ^ 0xE253152332702E23)) & 0xAD8CE1C2BEEC6968;
  v630 = (v629 ^ 0x908C18034C00040) & (4 * v628) ^ v628;
  v631 = ((4 * (v629 ^ 0xA484204282242928)) ^ 0xB633870AFBB1A5A0) & (v629 ^ 0xA484204282242928) ^ (4 * (v629 ^ 0xA484204282242928)) & 0xAD8CE1C2BEEC6968;
  v632 = (v631 ^ 0xA4008102BAA02120) & (16 * v630) ^ v630;
  v633 = ((16 * (v631 ^ 0x98C60C0044C4848)) ^ 0xD8CE1C2BEEC69680) & (v631 ^ 0x98C60C0044C4848) ^ (16 * (v631 ^ 0x98C60C0044C4848)) & 0xAD8CE1C2BEEC6960;
  v634 = (v633 ^ 0x888C0002AEC40000) & (v632 << 8) ^ v632;
  v635 = (((v633 ^ 0x2500E1C010286968) << 8) ^ 0x8CE1C2BEEC696800) & (v633 ^ 0x2500E1C010286968) ^ ((v633 ^ 0x2500E1C010286968) << 8) & 0xAD8CE1C2BEEC6900;
  v636 = v634 ^ 0xAD8CE1C2BEEC6968 ^ (v635 ^ 0x8C80C082AC680000) & (v634 << 16);
  v637 = v627 ^ (2
               * ((v636 << 32) & 0x2D8CE1C200000000 ^ v636 ^ ((v636 << 32) ^ 0x3EEC696800000000) & (((v635 ^ 0x210C214012840168) << 16) & 0x2D8CE1C200000000 ^ 0xC0C410200000000 ^ (((v635 ^ 0x210C214012840168) << 16) ^ 0x61C2BEEC00000000) & (v635 ^ 0x210C214012840168))));
  if (v580)
    v638 = v572;
  else
    v638 = v579;
  LODWORD(STACK[0x17A0]) = v638;
  v639 = (__CFADD__(v637 ^ 0x115A7770E89E6070, 0x126DF70696A84EF1) - 1) ^ (__CFADD__(v637 ^ 0x571EF20B403F47DLL, 0x6466F56CA35DAFELL)- 1);
  v640 = ((v637 ^ 0x115A7770E89E6070) + 0x126DF70696A84EF1) ^ ((v637 ^ 0x571EF20B403F47DLL) + 0x6466F56CA35DAFELL);
  v641 = v637 ^ 0x59F56DB4ADD90196;
  v501 = __CFADD__(v641, 0x5AC2EDC2D3EF2F17);
  v642 = v640 ^ (v641 + 0x5AC2EDC2D3EF2F17);
  LODWORD(v640) = (((unint64_t)v642 * (unsigned __int128)0x412uLL) >> 64) + 1042 * (v639 ^ (v501 - 1));
  v501 = __CFADD__(1042 * v642, 0xCDBF71741F026808);
  v643 = v592 ^ v594;
  v644 = v594;
  v645 = v643 + 264;
  LODWORD(STACK[0x1290]) = v645;
  LODWORD(STACK[0x1298]) = v643;
  LODWORD(v642) = 1914343156 * v645 - 1914342783 * v643 - 708760147;
  v646 = (v642 ^ 0x7CDEC71B) & (2 * (v642 & 0x7EDCE75B)) ^ v642 & 0x7EDCE75B;
  v647 = ((2 * (v642 ^ 0x455E4F0F)) ^ 0x770550A8) & (v642 ^ 0x455E4F0F) ^ (2 * (v642 ^ 0x455E4F0F)) & 0x3B82A854;
  v648 = (v647 ^ 0x33000000) & (4 * v646) ^ v646;
  v649 = ((4 * (v647 ^ 0x882A854)) ^ 0xEE0AA150) & (v647 ^ 0x882A854) ^ (4 * (v647 ^ 0x882A854)) & 0x3B82A854;
  v650 = v648 ^ 0x3B82A854 ^ (v649 ^ 0x2A02A050) & (16 * v648);
  v651 = (16 * (v649 ^ 0x11800804)) & 0x3B82A850 ^ 0x3802814 ^ ((16 * (v649 ^ 0x11800804)) ^ 0xB82A8540) & (v649 ^ 0x11800804);
  v652 = (v650 << 8) & 0x3B82A800 ^ v650 ^ ((v650 << 8) ^ 0x82A85400) & v651;
  v653 = v642 ^ (2
                             * ((v652 << 16) & 0x3B820000 ^ v652 ^ ((v652 << 16) ^ 0x28540000) & ((v651 << 8) & 0x3B820000 ^ 0x39020000 ^ ((v651 << 8) ^ 0x2A80000) & v651))) ^ 0xD1F42394;
  v654 = 0x3EE4F99CBEA615
       * (((v653 ^ 0xC6F1165B8C2C08B2) + 0x390EE9A473D3F74ELL) ^ ((v653 ^ 0x1B8AEA48AAE0B51) - 0x1B8AEA48AAE0B51) ^ ((v653 ^ 0xC749B8FF8BAF9784) + 0x38B647007450687CLL))
       + 0x28B3134B26185635;
  v655 = (v654 ^ 0xED20E039F11592BDLL) & (2 * (v654 & 0x830EABDE551A03ELL)) ^ v654 & 0x830EABDE551A03ELL;
  v656 = ((2 * (v654 ^ 0xED40610931B4D2F9)) ^ 0xCAE11769A9CAE58ELL) & (v654 ^ 0xED40610931B4D2F9) ^ (2 * (v654 ^ 0xED40610931B4D2F9)) & 0xE5708BB4D4E572C6;
  v657 = (v656 ^ 0x4040032080C00080) & (4 * v655) ^ v655;
  v658 = ((4 * (v656 ^ 0x2510889454251241)) ^ 0x95C22ED35395CB1CLL) & (v656 ^ 0x2510889454251241) ^ (4 * (v656 ^ 0x2510889454251241)) & 0xE5708BB4D4E572C4;
  v659 = (v658 ^ 0x85400A9050854200) & (16 * v657) ^ v657;
  v660 = ((16 * (v658 ^ 0x60308124846030C3)) ^ 0x5708BB4D4E572C70) & (v658 ^ 0x60308124846030C3) ^ (16 * (v658 ^ 0x60308124846030C3)) & 0xE5708BB4D4E572C0;
  v661 = (v660 ^ 0x45008B0444452000) & (v659 << 8) ^ v659;
  v662 = (((v660 ^ 0xA07000B090A05287) << 8) ^ 0x708BB4D4E572C700) & (v660 ^ 0xA07000B090A05287) ^ ((v660 ^ 0xA07000B090A05287) << 8) & 0xE5708BB4D4E57200;
  v663 = v661 ^ 0xE5708BB4D4E572C7 ^ (v662 ^ 0x60008094C4600000) & (v661 << 16);
  v664 = v654 ^ (2
               * ((v663 << 32) & 0x65708BB400000000 ^ v663 ^ ((v663 << 32) ^ 0x54E572C700000000) & (((v662 ^ 0x85700B20108530C7) << 16) & 0x65708BB400000000 ^ 0x64400B1000000000 ^ (((v662 ^ 0x85700B20108530C7) << 16) ^ 0xBB4D4E500000000) & (v662 ^ 0x85700B20108530C7))));
  v665 = v501 + (_DWORD)v640 + 2130526642;
  v666 = ((v664 ^ 0xC37EDCF27710788) - 0x7DF77FF0E997EA5CLL) ^ ((v664 ^ 0xC2454C9C6D7F81DALL) + 0x4C7A215C5C6693F2);
  LODWORD(v664) = __CFADD__(1042 * (v666 ^ ((v664 ^ 0x8463598F0695C3E2) + 0xA5C344F378CD1CALL)), 0x7A65120923776708)
                + (((v666 ^ ((v664 ^ 0x8463598F0695C3E2) + 0xA5C344F378CD1CALL)) * (unsigned __int128)0x412uLL) >> 64)
                + 1042
                * ((__CFADD__(v664 ^ 0xC37EDCF27710788, 0x8208800F166815A4) - 1) ^ (__CFADD__(v664 ^ 0xC2454C9C6D7F81DALL, 0x4C7A215C5C6693F2)- 1) ^ (__CFADD__(v664 ^ 0x8463598F0695C3E2, 0xA5C344F378CD1CALL)- 1))+ 2120512260;
  LODWORD(v666) = (v664 ^ 0xF193E9CE) & (2 * (v664 & 0x819B8DEF)) ^ v664 & 0x819B8DEF;
  LODWORD(v663) = ((2 * (v664 ^ 0xF083F3D4)) ^ 0xE230FC76) & (v664 ^ 0xF083F3D4) ^ (2 * (v664 ^ 0xF083F3D4)) & 0x71187E3A;
  LODWORD(v666) = (v663 ^ 0x11107C31) & (4 * v666) ^ v666;
  LODWORD(v663) = ((4 * (v663 ^ 0x11080209)) ^ 0xC461F8EC) & (v663 ^ 0x11080209) ^ (4 * (v663 ^ 0x11080209)) & 0x71187E38;
  LODWORD(v666) = (v663 ^ 0x40007823) & (16 * v666) ^ v666;
  LODWORD(v663) = ((16 * (v663 ^ 0x31180613)) ^ 0x1187E3B0) & (v663 ^ 0x31180613) ^ (16 * (v663 ^ 0x31180613)) & 0x71187E30;
  LODWORD(v666) = v666 ^ 0x71187E3B ^ (v663 ^ 0x11006200) & ((_DWORD)v666 << 8);
  LODWORD(v664) = v664 ^ 0x839B7199 ^ (2
                                     * (((_DWORD)v666 << 16) & 0x71180000 ^ v666 ^ (((_DWORD)v666 << 16) ^ 0x7E3B0000) & (((v663 ^ 0x60181C0B) << 8) & 0x71180000 ^ 0x61000000 ^ (((v663 ^ 0x60181C0B) << 8) ^ 0x187E0000) & (v663 ^ 0x60181C0B))));
  LODWORD(v666) = ((2 * (STACK[0x1520] & 0x144 ^ 0x44)) | 0xBFDB8A5C) - (STACK[0x1520] & 0x144 ^ 0x44) - 1609418030;
  LODWORD(v666) = ((v666 & 0xEFED4EDE ^ 0xA0810AD2) + (v666 ^ 0x4F6EC50D) - ((v666 ^ 0x4F6EC50D) & 0xEFED4EDE)) ^ 0xFF6E4E8C | STACK[0x1520] & 0x104 ^ 0x171;
  v667 = *((_DWORD *)&STACK[0x18D0] + v664);
  LODWORD(STACK[0x1280]) = v667;
  LODWORD(v664) = v606 ^ 0x2D94678D ^ (v667 << 8) ^ HIBYTE(v667);
  LODWORD(STACK[0x1288]) = v664;
  v668 = ((HIBYTE(v586) ^ 0x8D) + 264) * v666
       % (((v664 & 0x9358C6BB ^ 0x9358C6BB) + (v664 & 0x9358C6BB)) ^ LODWORD(STACK[0x1010]));
  v669 = ((-3 * HIBYTE(LODWORD(STACK[0x1578]))) ^ 0xFDu) + STACK[0x18B8];
  LODWORD(v669) = ((2 * *(_BYTE *)(v669 + 40108)) >> 6) ^ (((2 * *(unsigned __int8 *)(v669 + 40108)) & 0xFEu) >> 4) ^ ((*(unsigned __int8 *)(v669 + 40108) >> 7) & 0xFFFFFE01 | (2 * *(unsigned __int8 *)(v669 + 40108))) ^ 0xFFFFFFD7;
  v670 = 373 * v560 + 348400391;
  LODWORD(v666) = (2 * (v670 & 0x155A1)) & 0xA140 ^ v670 & 0x155A1 ^ ((2 * (v670 & 0x155A1)) | 0x80000) & (v670 ^ 0xD6A9A064);
  LODWORD(v663) = (2 * (v670 ^ 0xD6A9A064)) & 0x494F5C4 ^ 0x4941445 ^ ((2 * (v670 ^ 0xD6A9A064)) ^ 0x4229EB8A) & (v670 ^ 0xD6A9A064);
  LODWORD(v666) = (4 * v666) & 0x3D94F5C4 ^ v666 ^ ((4 * v666) ^ 0x100000) & v663;
  LODWORD(v663) = (4 * v663) & 0x3D94F5C4 ^ 0x98420C1 ^ ((4 * v663) ^ 0xF653D714) & v663;
  LODWORD(v666) = (16 * v666) & 0x3D94F5C0 ^ v666 ^ ((16 * v666) ^ 0x1400000) & v663;
  LODWORD(v663) = (16 * v663) & 0x3D94F5C0 ^ 0x2490A185 ^ ((16 * v663) ^ 0xD94F5C50) & v663;
  LODWORD(v666) = v666 ^ ((_DWORD)v666 << 8) & 0x3D94F500 ^ (((_DWORD)v666 << 8) ^ 0x14000000) & v663;
  LODWORD(v666) = ((v666 ^ 0x2880F5C5) << 16) & 0x3D940000 ^ v666 ^ 0x2880F5C5 ^ (((v666 ^ 0x2880F5C5) << 16) ^ 0x75C50000) & (((_DWORD)v663 << 8) & 0x3D940000 ^ 0x29000000 ^ (((_DWORD)v663 << 8) ^ 0x94F50000) & v663);
  LODWORD(v669) = ((v669 >> 2) | ((_BYTE)v669 << 6)) + 1376417897;
  LODWORD(v663) = (v669 ^ 0xAB8CDC5F) & (2 * (v669 & 0x9F)) ^ v669 & 0x9F;
  v671 = (2 * (v669 ^ 0xAB8CDC79)) & 0xE6 ^ 0x1422 ^ ((2 * (v669 ^ 0xAB8CDC79)) ^ 0x882A1CC) & (v669 ^ 0xAB8CDC79);
  LODWORD(v663) = (4 * v663) & 0x4E4 ^ v663 ^ ((4 * v663) | 0x6000) & v671;
  v672 = (4 * v671) & 0x67954E4 ^ 0x6180466 ^ ((4 * v671) ^ 0x19E55398) & v671;
  LODWORD(v663) = (16 * v663) & 0x67954E0 ^ v663 ^ ((16 * v663) ^ 0x58000) & v672;
  v673 = (16 * v672) & 0x67954E0 ^ 0x681086 ^ ((16 * v672) ^ 0x67954E60) & v672;
  LODWORD(v663) = v663 ^ ((_DWORD)v663 << 8) & 0x6795400 ^ (((_DWORD)v663 << 8) ^ 0x1580000) & v673;
  LODWORD(v669) = v669 ^ (2
                        * (((v663 ^ 0x6200CE6) << 16) & 0x6790000 ^ v663 ^ 0x6200CE6 ^ (((v663 ^ 0x6200CE6) << 16) ^ 0x54E60000) & ((v673 << 8) & 0x6790000 ^ 0x6290000 ^ ((v673 << 8) ^ 0x79540000) & v673)));
  LODWORD(v669) = 373
                * (((v669 ^ 0x62CB0014) - 1176614176) ^ ((v669 ^ 0x52E674B2) - 1980547462) ^ ((v669 ^ 0x99EA55F5)
                                                                                            + 1124015935))
                - 514956115;
  LODWORD(v663) = ((2 * (v669 & 0xD21AD566)) & 0x4212000 | v669 & 0xD21AD566) ^ (2 * (v669 & 0xD21AD566)) & (v669 ^ 0x9FBBE545);
  v674 = ((2 * (v669 ^ 0x9FBBE545)) ^ 0x9B426046) & (v669 ^ 0x9FBBE545) ^ (2 * (v669 ^ 0x9FBBE545)) & 0x4DA13022;
  LODWORD(v663) = (v674 ^ 0xC002001) & (4 * v663) ^ v663;
  v675 = ((4 * (v674 ^ 0x44A11021)) ^ 0x3684C08C) & (v674 ^ 0x44A11021) ^ (4 * (v674 ^ 0x44A11021)) & 0x4DA13020;
  LODWORD(v663) = (v675 ^ 0x4800003) & (16 * v663) ^ v663;
  v676 = ((16 * (v675 ^ 0x49213023)) ^ 0xDA130230) & (v675 ^ 0x49213023) ^ (16 * (v675 ^ 0x49213023)) & 0x4DA13020;
  LODWORD(v663) = v663 ^ 0x4DA13023 ^ (v676 ^ 0x48010003) & ((_DWORD)v663 << 8);
  v677 = v669 ^ (2
               * (((_DWORD)v663 << 16) & 0x4DA10000 ^ v663 ^ (((_DWORD)v663 << 16) ^ 0x30230000) & (((v676 ^ 0x5A03003) << 8) & 0x4DA10000 ^ 0x4C810000 ^ (((v676 ^ 0x5A03003) << 8) ^ 0xA1300000) & (v676 ^ 0x5A03003))));
  LODWORD(v669) = *((_DWORD *)&STACK[0x18D0] + (v670 ^ 0xFB1CBE2B ^ (2 * (_DWORD)v666)) % 0x412);
  HIDWORD(v678) = v669 ^ 0x2D9467;
  LODWORD(v678) = v669 ^ 0x8D000000;
  LODWORD(v669) = v678 >> 24;
  v679 = *((_DWORD *)&STACK[0x18D0] + LODWORD(STACK[0x17E0]));
  HIDWORD(v678) = v679 ^ 0x67;
  LODWORD(v678) = v679 ^ v525;
  LODWORD(v669) = (v678 >> 8) ^ v669;
  LODWORD(STACK[0x17E0]) = v677;
  LODWORD(v666) = *((_DWORD *)&STACK[0x18D0]
                  + (373 * BYTE1(LODWORD(STACK[0x1690]))
                                 + 98472
                                 - 1042
                                 * ((4121850
                                   * (unint64_t)(373
                                                      * BYTE1(LODWORD(STACK[0x1690]))
                                                      + 98472)) >> 32)));
  HIDWORD(v678) = v666 ^ 0x9467;
  LODWORD(v678) = v666 ^ 0x8D2D0000;
  v680 = (LODWORD(STACK[0x1848]) ^ 0x72D26B98)
       + (LODWORD(STACK[0x1850]) ^ 0x8D2D9467)
       + ((v678 >> 16) ^ *((_DWORD *)&STACK[0x18D0] + (v677 ^ 0x491AB520u) % 0x412) ^ (v669
                                                                                     - 1926392729
                                                                                     - ((2 * v669) & 0x1A5B28CE)))
       + 1;
  LODWORD(STACK[0x17CC]) = v680;
  LODWORD(v669) = LODWORD(STACK[0x1664]) ^ (v680 - 1926392729 - ((2 * v680) & 0x1A5B28CE));
  v681 = LODWORD(STACK[0x1018]) ^ v644 ^ (v669 - 1926392729 - ((2 * v669) & 0x1A5B28CE));
  v682 = 373 * HIBYTE(v595) + 98472 - 1042 * ((4121850 * (unint64_t)(373 * HIBYTE(v595) + 98472)) >> 32);
  LODWORD(v666) = 373 * BYTE2(v681)
                + 98472
                - 1042 * ((4121850 * (unint64_t)(373 * BYTE2(v681) + 98472)) >> 32);
  LODWORD(v669) = *((_DWORD *)&STACK[0x18D0]
                  + (373 * BYTE2(v643)
                                 + 98472
                                 - 1042
                                 * ((4121850 * (unint64_t)(373 * BYTE2(v643) + 98472)) >> 32)));
  HIDWORD(v678) = v669 ^ 0x67;
  LODWORD(v678) = v669 ^ v525;
  LODWORD(v669) = v678 >> 8;
  LODWORD(v666) = *((_DWORD *)&STACK[0x18D0]
                  + (((_DWORD)v666 + LODWORD(STACK[0x1898]) + (~(2 * (_DWORD)v666) | 0xFFFFF731)) ^ 0x8D2D9467));
  HIDWORD(v678) = v666 ^ 0x67;
  LODWORD(v678) = v666 ^ v525;
  v683 = v678 >> 8;
  v684 = *((_DWORD *)&STACK[0x18D0]
         + (373 * BYTE1(v681)
                        + 98472
                        - 1042 * ((4121850 * (unint64_t)(373 * BYTE1(v681) + 98472)) >> 32)));
  HIDWORD(v678) = v684 ^ 0x9467;
  LODWORD(v678) = v684 ^ 0x8D2D0000;
  v685 = v678 >> 16;
  LODWORD(v663) = (2 * (v665 & 0x8102C11E)) & (v665 ^ 0xBFC9E79C) ^ v665 & 0x8102C11E ^ ((2 * (v665 & 0x8102C11E)) & 0x2010200 | 0x14020400);
  v686 = (2 * (v665 ^ 0xBFC9E79C)) & 0x3ECB2682 ^ 0x2492282 ^ ((2 * (v665 ^ 0xBFC9E79C)) ^ 0x7D964D04) & (v665 ^ 0xBFC9E79C);
  LODWORD(v663) = (4 * v663) & 0x3ECB2680 ^ v663 ^ ((4 * v663) ^ 0x50081000) & v686;
  v687 = (4 * v686) & 0x3ECB2680 ^ 0x4C32482 ^ ((4 * v686) ^ 0xFB2C9A08) & v686;
  LODWORD(v663) = (16 * v663) & 0x3ECB2680 ^ v663 ^ ((16 * v663) ^ 0x40A04000) & v687;
  v688 = (16 * v687) & 0x3ECB2680 ^ 0x12490682 ^ ((16 * v687) ^ 0xECB26820) & v687;
  LODWORD(v663) = v663 ^ 0x30412282 ^ ((_DWORD)v663 << 8) & 0x3ECB2600 ^ (((_DWORD)v663 << 8) ^ 0x8A040000) & v688;
  LODWORD(v663) = ((_DWORD)v663 << 16) & 0x3ECB0000 ^ v663 ^ (((_DWORD)v663 << 16) ^ 0x26820000) & ((v688 << 8) & 0x3ECB0000 ^ 0x34C90000 ^ ((v688 << 8) ^ 0x4B260000) & v688);
  LODWORD(v666) = *((_DWORD *)&STACK[0x18D0]
                  + (373 * (BYTE2(v586) ^ 0x2D)
                                 + 98472
                                 - 1042 * ((4121850 * (unint64_t)(373 * (BYTE2(v586) ^ 0x2Du) + 98472)) >> 32)));
  HIDWORD(v678) = v666 ^ 0x67;
  LODWORD(v678) = v666 ^ v525;
  LODWORD(v669) = v685 ^ v669;
  v689 = (v678 >> 8) - 1926392729 - ((2 * (v678 >> 8)) & 0x1A5B28CE);
  LODWORD(v666) = *((_DWORD *)&STACK[0x18D0] + (v665 ^ (2 * (_DWORD)v663) ^ 0xB1908C1A));
  HIDWORD(v678) = v666 ^ 0x9467;
  LODWORD(v678) = v666 ^ 0x8D2D0000;
  v690 = v678 >> 16;
  LODWORD(STACK[0x12E0]) = v595;
  LODWORD(v666) = 373 * v595 + 970764401;
  LODWORD(v663) = (2 * ((373 * v595 - 20367) & 0xD037 ^ 0x93674D50)) & 0x10040 ^ (373
                                                                                                 * v595
                                                                                                 - 20367) & 0xD037 ^ 0x93674D50 ^ ((2 * ((373 * v595 - 20367) & 0xD037 ^ 0x93674D50)) ^ 0x24829AA0) & (v666 ^ 0x55479D67);
  LODWORD(v662) = (2 * (v666 ^ 0x55479D67)) & 0x91234D50 ^ 0x91214550 ^ ((2 * (v666 ^ 0x55479D67)) ^ 0x24829AA0) & (v666 ^ 0x55479D67);
  LODWORD(v663) = (4 * v663) & 0x93634D50 ^ v663 ^ ((4 * v663) ^ 0x4D8D3540) & v662;
  LODWORD(v662) = (4 * v662) & 0x93634D50 ^ 0x92624810 ^ ((4 * v662) ^ 0x4D8D3540) & v662;
  LODWORD(v663) = (16 * v663) & 0x93634D50 ^ v663 ^ ((16 * v663) ^ 0x26248100) & v662;
  LODWORD(v662) = (16 * v662) & 0x93634D50 ^ 0x81430850 ^ ((16 * v662) ^ 0x3634D500) & v662;
  LODWORD(v663) = v663 ^ 0x1600440 ^ ((_DWORD)v663 << 8) & 0x93634D00 ^ (((_DWORD)v663 << 8) ^ 0x42491000) & v662;
  LODWORD(v662) = (v666 ^ 0xE2624A97 ^ (2
                                                    * (((_DWORD)v663 << 16) & 0x13630000 ^ v663 ^ (((_DWORD)v663 << 16) ^ 0x4D500000) & (((_DWORD)v662 << 8) & 0x93630000 ^ 0x10220000 ^ (((_DWORD)v662 << 8) ^ 0x634D0000) & v662))))
                % 0x412;
  LODWORD(v663) = v669 - 1926392729 - ((2 * v669) & 0x1A5B28CE);
  LODWORD(STACK[0x127C]) = v681;
  LODWORD(v669) = 373 * v681 + 125206853;
  LODWORD(v666) = (v669 ^ 0xA268FE63) & (2 * (v669 & 0xAFF63)) ^ v669 & 0xAFF63;
  v691 = ((2 * (v669 ^ 0xA26C0EA7)) ^ 0xA50DE388) & (v669 ^ 0xA26C0EA7) ^ (2 * (v669 ^ 0xA26C0EA7)) & 0x4A26F1C4;
  LODWORD(v666) = (v691 ^ 0x4A44E1C0) & (4 * v666) ^ v666;
  v692 = ((4 * (v691 ^ 0x4A221044)) ^ 0x6B9BC710) & (v691 ^ 0x4A221044) ^ (4 * (v691 ^ 0x4A221044)) & 0x5AE6F1C4;
  LODWORD(v666) = (v692 ^ 0x4A82C100) & (16 * v666) ^ v666;
  v693 = ((16 * (v692 ^ 0x106430C4)) ^ 0xAE6F1C40) & (v692 ^ 0x106430C4) ^ (16 * (v692 ^ 0x106430C4)) & 0x5AE6F1C0;
  LODWORD(v666) = v666 ^ 0x5AE6F1C4 ^ (v693 ^ 0xA661000) & ((_DWORD)v666 << 8);
  LODWORD(v666) = v669 ^ (2
                        * (((_DWORD)v666 << 16) & 0x5AE60000 ^ v666 ^ (((_DWORD)v666 << 16) ^ 0x71C40000) & (((v693 ^ 0x5080E184) << 8) & 0x5AE60000 ^ 0x18060000 ^ (((v693 ^ 0x5080E184) << 8) ^ 0xE6F10000) & (v693 ^ 0x5080E184))));
  LODWORD(STACK[0x1658]) = v586;
  LODWORD(v669) = (v586 & 0x2B ^ 0xEAE7FC08) + (v586 & 0xD4 ^ 0xD1) - 1;
  v694 = (v669 & 0x572A3 ^ 0x8B604200) + (v669 & 0xA8D5C ^ 0x70820809);
  LODWORD(v669) = *((_DWORD *)&STACK[0x18D0] + v662);
  HIDWORD(v678) = v669 ^ 0x2D9467;
  LODWORD(v678) = v669 ^ 0x8D000000;
  LODWORD(v669) = BYTE1(v643) + 791762838;
  LODWORD(v662) = (v669 ^ 0xFE026570) & (2 * (v669 & 0x972)) ^ v669 & 0x972;
  v695 = ((2 * (v669 ^ 0xFE026734)) ^ 0x51111C8C) & (v669 ^ 0xFE026734) ^ (2 * (v669 ^ 0xFE026734)) & 0xE46;
  LODWORD(v662) = (v695 ^ 0x4C00) & (4 * v662) ^ v662;
  v696 = ((4 * (v695 ^ 0x242)) ^ 0xBB333918) & (v695 ^ 0x242) ^ (4 * (v695 ^ 0x242)) & 0x2ECCCE44;
  LODWORD(v662) = (v696 ^ LODWORD(STACK[0xEAC])) & (16 * v662) ^ v662;
  v697 = ((16 * (v696 ^ 0x4CCC646)) ^ 0xECCCE460) & (v696 ^ 0x4CCC646) ^ (16 * (v696 ^ 0x4CCC646)) & 0x2ECCCE40;
  LODWORD(v662) = v662 ^ 0x2ECCCE46 ^ (v697 ^ 0x2CCCC400) & ((_DWORD)v662 << 8);
  LODWORD(v669) = v669 ^ (2
                        * (((_DWORD)v662 << 16) & 0x2ECC0000 ^ v662 ^ (((_DWORD)v662 << 16) ^ 0x4E460000) & (((v697 ^ 0x2000A06) << 8) & 0x2ECC0000 ^ 0x22000000 ^ (((v697 ^ 0x2000A06) << 8) ^ 0x4CCE0000) & (v697 ^ 0x2000A06))));
  LODWORD(v669) = 373
                * (((v669 ^ 0xFBC86A7F) + 415577114) ^ ((v669 ^ 0x492026E0) - 1439860601) ^ ((v669 ^ 0x23377961)
                                                                                           - 1069930744))
                - 153185453;
  LODWORD(v662) = (v669 ^ 0xBCC286C6) & (2 * (v669 & 0xBC8AA6C0)) ^ v669 & 0xBC8AA6C0;
  v698 = ((2 * (v669 ^ 0xB4D78AC6)) ^ 0x10BA580C) & (v669 ^ 0xB4D78AC6) ^ (2 * (v669 ^ 0xB4D78AC6)) & 0x85D2C06;
  LODWORD(v662) = (v698 ^ 0x8180802) & (4 * v662) ^ v662;
  v699 = ((4 * (v698 ^ 0x8452402)) ^ 0x2174B018) & (v698 ^ 0x8452402) ^ (4 * (v698 ^ 0x8452402)) & 0x85D2C04;
  LODWORD(v662) = (v699 ^ 0x542006) & (16 * v662) ^ v662;
  v700 = ((16 * (v699 ^ 0x8090C06)) ^ 0x85D2C060) & (v699 ^ 0x8090C06) ^ (16 * (v699 ^ 0x8090C06)) & 0x85D2C00;
  LODWORD(v662) = v662 ^ 0x85D2C06 ^ (v700 ^ 0x500006) & ((_DWORD)v662 << 8);
  LODWORD(v669) = v669 ^ (2
                        * (((_DWORD)v662 << 16) & 0x85D0000 ^ v662 ^ (((_DWORD)v662 << 16) ^ 0x2C060000) & (((v700 ^ 0x80D2C06) << 8) & 0x85D0000 ^ 0x510000 ^ (((v700 ^ 0x80D2C06) << 8) ^ 0x5D2C0000) & (v700 ^ 0x80D2C06))));
  v701 = v663 ^ (v678 >> 24) ^ *((_DWORD *)&STACK[0x18D0] + v668);
  LODWORD(v663) = 373 * ((v694 - 1) ^ 0xFBE5B6B7) + 1130404324;
  LODWORD(v662) = (v663 ^ 0xBAACD4B2) & (2 * (v663 & 0xBCA0E6C4)) ^ v663 & 0xBCA0E6C4;
  v702 = ((2 * (v663 ^ 0xAAAD99B2)) ^ 0x2C1AFEEC) & (v663 ^ 0xAAAD99B2) ^ (2 * (v663 ^ 0xAAAD99B2)) & 0x160D7F76;
  LODWORD(v662) = (v702 ^ 0x4003E22) & (4 * v662) ^ v662;
  v703 = ((4 * (v702 ^ 0x12050112)) ^ 0x5835FDD8) & (v702 ^ 0x12050112) ^ (4 * (v702 ^ 0x12050112)) & 0x160D7F74;
  LODWORD(v662) = (v703 ^ 0x10057D46) & (16 * v662) ^ v662;
  v704 = ((16 * (v703 ^ 0x6080226)) ^ 0x60D7F760) & (v703 ^ 0x6080226) ^ (16 * (v703 ^ 0x6080226)) & 0x160D7F70;
  LODWORD(v662) = v662 ^ 0x160D7F76 ^ (v704 ^ 0x57716) & ((_DWORD)v662 << 8);
  LODWORD(v663) = v663 ^ (2
                        * (((_DWORD)v662 << 16) & 0x160D0000 ^ v662 ^ (((_DWORD)v662 << 16) ^ 0x7F760000) & (((v704 ^ 0x16080816) << 8) & 0x160D0000 ^ 0x12000000 ^ (((v704 ^ 0x16080816) << 8) ^ 0xD7F0000) & (v704 ^ 0x16080816))));
  v705 = 0x3EE4F99CBEA615
       * (((v669 ^ 0xC2F0154B9059C929) + 0x3D0FEAB45EB35C7ELL) ^ ((v669 ^ 0xB8105AB5731ED602)
                                                                                + 0x47EFA54ABDF44357) ^ ((v669 ^ 0x7AE04FFE5F7FE1E7) - 0x7AE04FFE6E6A8B4CLL))
       - 0x22C7CF7442AADDAFLL;
  v706 = (v705 ^ 0x13A3EC7D2EC09133) & (2 * (v705 & 0x53ABCD7D4E14D422)) ^ v705 & 0x53ABCD7D4E14D422;
  v707 = ((2 * (v705 ^ 0xB7F5E437BEC99177)) ^ 0xC8BC5295E1BA8AAALL) & (v705 ^ 0xB7F5E437BEC99177) ^ (2 * (v705 ^ 0xB7F5E437BEC99177)) & 0xE45E294AF0DD4554;
  v708 = (v707 ^ 0xC01C000060900000) & (4 * v706) ^ v706;
  v709 = ((4 * (v707 ^ 0x2442294A10454555)) ^ 0x9178A52BC3751554) & (v707 ^ 0x2442294A10454555) ^ (4 * (v707 ^ 0x2442294A10454555)) & 0xE45E294AF0DD4554;
  v710 = (v709 ^ 0x8058210AC0550540) & (16 * v708) ^ v708;
  v711 = ((16 * (v709 ^ 0x6406084030884001)) ^ 0x45E294AF0DD45550) & (v709 ^ 0x6406084030884001) ^ (16 * (v709 ^ 0x6406084030884001)) & 0xE45E294AF0DD4550;
  v712 = (v711 ^ 0x4442000A00D44500) & (v710 << 8) ^ v710;
  v713 = (((v711 ^ 0xA01C2940F0090005) << 8) ^ 0x5E294AF0DD455500) & (v711 ^ 0xA01C2940F0090005) ^ ((v711 ^ 0xA01C2940F0090005) << 8) & 0xE45E294AF0DD4500;
  v714 = v712 ^ 0xE45E294AF0DD4555 ^ (v713 ^ 0x44080840D0450000) & (v712 << 16);
  v715 = v705 ^ (2
               * ((v714 << 32) & 0x645E294A00000000 ^ v714 ^ ((v714 << 32) ^ 0x70DD455500000000) & (((v713 ^ 0xA056210A20980055) << 16) & 0x645E294A00000000 ^ 0x4414090200000000 ^ (((v713 ^ 0xA056210A20980055) << 16) ^ 0x294AF0DD00000000) & (v713 ^ 0xA056210A20980055))));
  v716 = ((v715 ^ 0xE884352BFD04058DLL) - 0x1822D2F075D73DFLL) ^ ((v715 ^ 0xEC7B3E6722DCB81ALL) - 0x57D2663D885CE48);
  LODWORD(v715) = __CFADD__(1042 * (v716 ^ ((v715 ^ 0x5F5096247076E31FLL) + 0x49A971DF75D06AB3)), 0x360112F5E8044754)+ (((v716 ^ ((v715 ^ 0x5F5096247076E31FLL) + 0x49A971DF75D06AB3)) * (unsigned __int128)0x412uLL) >> 64)+ 1042* ((__CFADD__(v715 ^ 0xE884352BFD04058DLL, 0xFE7DD2D0F8A28C21) - 1) ^ (__CFADD__(v715 ^ 0xEC7B3E6722DCB81ALL, 0xFA82D99C277A31B8)- 1) ^ (__CFADD__(v715 ^ 0x5F5096247076E31FLL, 0x49A971DF75D06AB3)- 1))+ 815986602;
  LODWORD(v716) = (v715 ^ 0xAF58030D) & (2 * (v715 & 0xCF5D0B2D)) ^ v715 & 0xCF5D0B2D;
  LODWORD(v713) = ((2 * (v715 ^ 0x394A034D)) ^ 0xEC2E10C0) & (v715 ^ 0x394A034D) ^ (2 * (v715 ^ 0x394A034D)) & 0xF6170860;
  LODWORD(v716) = (v713 ^ 0x64040040) & (4 * v716) ^ v716;
  LODWORD(v713) = ((4 * (v713 ^ 0x12110820)) ^ 0xD85C2180) & (v713 ^ 0x12110820) ^ (4 * (v713 ^ 0x12110820)) & 0xF6170860;
  LODWORD(v716) = v716 ^ 0xF6170860 ^ (v713 ^ 0xD0140000) & (16 * v716);
  LODWORD(v713) = (16 * (v713 ^ 0x26030860)) & 0xF6170860 ^ 0x96070860 ^ ((16 * (v713 ^ 0x26030860)) ^ 0x61708600) & (v713 ^ 0x26030860);
  LODWORD(v716) = ((_DWORD)v716 << 8) & 0xF6170800 ^ v716 ^ (((_DWORD)v716 << 8) ^ 0x17086000) & v713;
  v717 = v715 ^ (2
               * (((_DWORD)v716 << 16) & 0x76170000 ^ v716 ^ (((_DWORD)v716 << 16) ^ 0x8600000) & (((_DWORD)v713 << 8) & 0xF6170000 ^ 0x60170000 ^ (((_DWORD)v713 << 8) ^ 0x17080000) & v713)));
  v718 = 0x3EE4F99CBEA615
       * (((v666 ^ 0xD718A70B4F52020ALL) + 0x28E758F4D14F757ALL) ^ ((v666 ^ 0x6FDA06079EC63BF7)
                                                                                - 0x6FDA0607FF24B37BLL) ^ ((v666 ^ 0xB8C2A10C3D5B2516) + 0x473D5EF3A3465266))
       - 0x196115DC6751823DLL;
  v719 = (v718 ^ 0x2945DBD5703B7CABLL) & (2 * (v718 & 0x4A4513E572BB78B0)) ^ v718 & 0x4A4513E572BB78B0;
  v720 = ((2 * (v718 ^ 0xADC5FF5FD4394CCBLL)) ^ 0xCF01D9754D0468F6) & (v718 ^ 0xADC5FF5FD4394CCBLL) ^ (2 * (v718 ^ 0xADC5FF5FD4394CCBLL)) & 0xE780ECBAA682347ALL;
  v721 = (v720 ^ 0x4300C83004002040) & (4 * v719) ^ v719;
  v722 = ((4 * (v720 ^ 0x2080248AA2821409)) ^ 0x9E03B2EA9A08D1ECLL) & (v720 ^ 0x2080248AA2821409) ^ (4 * (v720 ^ 0x2080248AA2821409)) & 0xE780ECBAA6823478;
  v723 = (v722 ^ 0x8600A0AA82001060) & (16 * v721) ^ v721;
  v724 = ((16 * (v722 ^ 0x61804C1024822413)) ^ 0x780ECBAA682347B0) & (v722 ^ 0x61804C1024822413) ^ (16 * (v722 ^ 0x61804C1024822413)) & 0xE780ECBAA6823470;
  v725 = (v724 ^ 0x6000C8AA20020400) & (v723 << 8) ^ v723;
  v726 = (((v724 ^ 0x878024108680304BLL) << 8) ^ 0x80ECBAA682347B00) & (v724 ^ 0x878024108680304BLL) ^ ((v724 ^ 0x878024108680304BLL) << 8) & 0xE780ECBAA6823400;
  v727 = v725 ^ 0xE780ECBAA682347BLL ^ (v726 ^ 0x8080A8A282000000) & (v725 << 16);
  v728 = v718 ^ (2
               * ((v727 << 32) & 0x6780ECBA00000000 ^ v727 ^ ((v727 << 32) ^ 0x2682347B00000000) & (((v726 ^ 0x670044182482047BLL) << 16) & 0x6780ECBA00000000 ^ 0x300483800000000 ^ (((v726 ^ 0x670044182482047BLL) << 16) ^ 0x6CBAA68200000000) & (v726 ^ 0x670044182482047BLL))));
  v729 = ((v728 ^ 0xE8AAD31D2E89ED44) - 0x2F4D8350D7D81F54) ^ ((v728 ^ 0x529368999DA2D727) + 0x6A8BC72B9B0CDAC9);
  LODWORD(v728) = __CFADD__(1042 * (v729 ^ ((v728 ^ 0x727D39608C942A25) + 0x4A6596D28A3A27CBLL)), 0xA8CF770BB855420CLL)+ (((v729 ^ ((v728 ^ 0x727D39608C942A25) + 0x4A6596D28A3A27CBLL)) * (unsigned __int128)0x412uLL) >> 64)+ 1042* ((__CFADD__(v728 ^ 0xE8AAD31D2E89ED44, 0xD0B27CAF2827E0ACLL) - 1) ^ (__CFADD__(v728 ^ 0x529368999DA2D727, 0x6A8BC72B9B0CDAC9)- 1) ^ (__CFADD__(v728 ^ 0x727D39608C942A25, 0x4A6596D28A3A27CBLL)- 1))+ 1491942086;
  LODWORD(v729) = (v728 ^ 0xA698E070) & (2 * (v728 & 0xA712C579)) ^ v728 & 0xA712C579;
  LODWORD(v726) = ((2 * (v728 ^ 0xA49D6862)) ^ 0x71F5A36) & (v728 ^ 0xA49D6862) ^ (2 * (v728 ^ 0xA49D6862)) & 0x38FAD1A;
  LODWORD(v729) = (v726 ^ 0xF8801) & (4 * v729) ^ v729;
  LODWORD(v726) = ((4 * (v726 ^ 0x80A509)) ^ 0xE3EB46C) & (v726 ^ 0x80A509) ^ (4 * (v726 ^ 0x80A509)) & 0x38FAD18;
  LODWORD(v729) = (v726 ^ 0x20EA400) & (16 * v729) ^ v729;
  LODWORD(v726) = ((16 * (v726 ^ 0x1810913)) ^ 0x38FAD1B0) & (v726 ^ 0x1810913) ^ (16 * (v726 ^ 0x1810913)) & 0x38FAD10;
  LODWORD(v729) = v729 ^ 0x38FAD1B ^ (v726 ^ 0x8A810B) & ((_DWORD)v729 << 8);
  LODWORD(v728) = v728 ^ (2
                        * (((_DWORD)v729 << 16) & 0x38F0000 ^ v729 ^ (((_DWORD)v729 << 16) ^ 0x2D1B0000) & (((v726 ^ 0x3052C0B) << 8) & 0x38F0000 ^ (((v726 ^ 0x3052C0B) << 8) ^ 0xFAD0000) & (v726 ^ 0x3052C0B) ^ 0x20000)));
  LODWORD(v729) = *((_DWORD *)&STACK[0x18D0] + (v663 ^ 0xBCB21828) % 0x412);
  HIDWORD(v678) = v729 ^ 0x2D9467;
  LODWORD(v678) = v729 ^ 0x8D000000;
  LODWORD(v663) = 373 * HIBYTE(v643) + 178159963;
  LODWORD(v726) = (v663 ^ 0x13FAFE0D) & (2 * (v663 & 0x22FF4D)) ^ v663 & 0x22FF4D;
  v730 = ((2 * (v663 ^ 0x13BF388F)) ^ 0x93B8F84) & (v663 ^ 0x13BF388F) ^ (2 * (v663 ^ 0x13BF388F)) & 0x225DC7C2;
  LODWORD(v726) = (v730 ^ 0x22D98700) & (4 * v726) ^ v726;
  v731 = ((4 * (v730 ^ 0x22444042)) ^ 0x1B771F08) & (v730 ^ 0x22444042) ^ (4 * (v730 ^ 0x22444042)) & 0x66DDC7C0;
  LODWORD(v726) = (v731 ^ 0x82550700) & (16 * v726) ^ v726;
  v732 = ((16 * (v731 ^ 0x6488C0C2)) ^ 0x6DDC7C20) & (v731 ^ 0x6488C0C2) ^ (16 * (v731 ^ 0x6488C0C2)) & 0xE6DDC7C0;
  LODWORD(v726) = v726 ^ 0xE6DDC7C2 ^ (v732 ^ 0x64DC4400) & ((_DWORD)v726 << 8);
  LODWORD(v726) = v663 ^ (2
                        * (((_DWORD)v726 << 16) & 0x66DD0000 ^ v726 ^ (((_DWORD)v726 << 16) ^ 0x47C20000) & (((v732 ^ 0x820183C2) << 8) & 0x66DD0000 ^ 0x22180000 ^ (((v732 ^ 0x820183C2) << 8) ^ 0x5DC70000) & (v732 ^ 0x820183C2))));
  LODWORD(v729) = (v678 >> 24) ^ v683;
  LODWORD(v728) = *((_DWORD *)&STACK[0x18D0] + (v728 ^ 0xA21B9F4F));
  HIDWORD(v678) = v728 ^ 0x2D9467;
  LODWORD(v678) = v728 ^ 0x8D000000;
  v733 = 0x3EE4F99CBEA615
       * (((v726 ^ 0x139D64402D747886) - 0x139D644015009C28) ^ ((v726 ^ 0x44EB7B8181469BA8)
                                                                                - 0x44EB7B81B9327F06) ^ ((v726 ^ 0x57761FC1196B93E7) - 0x57761FC1211F7749))
       - 0x6DEE27DE59A6FB27;
  v734 = (v733 ^ 0x5C9081F6655CFD1BLL) & (2 * (v733 & 0x9ED225E76510F19ALL)) ^ v733 & 0x9ED225E76510F19ALL;
  v735 = ((2 * (v733 ^ 0x5C1483B0AF7D1E1FLL)) ^ 0x858D4CAF94DBDF0ALL) & (v733 ^ 0x5C1483B0AF7D1E1FLL) ^ (2 * (v733 ^ 0x5C1483B0AF7D1E1FLL)) & 0xC2C6A657CA6DEF84;
  v736 = (v735 ^ 0x808004078041CE00) & (4 * v734) ^ v734;
  v737 = ((4 * (v735 ^ 0x4242A2504A242085)) ^ 0xB1A995F29B7BE14) & (v735 ^ 0x4242A2504A242085) ^ (4 * (v735 ^ 0x4242A2504A242085)) & 0xC2C6A657CA6DEF84;
  v738 = (v737 ^ 0x20280570825AE00) & (16 * v736) ^ v736;
  v739 = ((16 * (v737 ^ 0xC0C42600C2484181)) ^ 0x2C6A657CA6DEF850) & (v737 ^ 0xC0C42600C2484181) ^ (16 * (v737 ^ 0xC0C42600C2484181)) & 0xC2C6A657CA6DEF80;
  v740 = (v739 ^ 0x422454824CE800) & (v738 << 8) ^ v738;
  v741 = (((v739 ^ 0xC284820348210785) << 8) ^ 0xC6A657CA6DEF8500) & (v739 ^ 0xC284820348210785) ^ ((v739 ^ 0xC284820348210785) << 8) & 0xC2C6A657CA6DEF00;
  v742 = v740 ^ 0xC2C6A657CA6DEF85 ^ (v741 ^ 0xC2860642486D0000) & (v740 << 16);
  v743 = v733 ^ (2
               * ((v742 << 32) & 0x42C6A65700000000 ^ v742 ^ ((v742 << 32) ^ 0x4A6DEF8500000000) & (((v741 ^ 0x40A01582006A85) << 16) & 0x42C6A65700000000 ^ 0x4080241200000000 ^ (((v741 ^ 0x40A01582006A85) << 16) ^ 0x2657CA6D00000000) & (v741 ^ 0x40A01582006A85))));
  v744 = ((v743 ^ 0x9F1E7A05D772D9D9) + 0x60303CDD59BAC2F3) ^ ((v743 ^ 0x8494AAF93112A9C8) + 0x7BBAEC21BFDAB2E4);
  LODWORD(v743) = __CFADD__(1042 * (v744 ^ ((v743 ^ 0x845CF5BE17AB5E81) + 0x7B72B366996345ABLL)), 0x4CFA952704EF48C8)+ (((v744 ^ ((v743 ^ 0x845CF5BE17AB5E81) + 0x7B72B366996345ABLL)) * (unsigned __int128)0x412uLL) >> 64)+ 1042* ((__CFADD__(v743 ^ 0x9F1E7A05D772D9D9, 0x60303CDD59BAC2F3) - 1) ^ (__CFADD__(v743 ^ 0x8494AAF93112A9C8, 0x7BBAEC21BFDAB2E4)- 1) ^ (__CFADD__(v743 ^ 0x845CF5BE17AB5E81, 0x7B72B366996345ABLL)- 1))+ 733449560;
  LODWORD(v744) = (v743 ^ 0xD267712F) & (2 * (v743 & 0xD448752F)) ^ v743 & 0xD448752F;
  LODWORD(v741) = ((2 * (v743 ^ 0xDAF7BB65)) ^ 0x1D7F9C94) & (v743 ^ 0xDAF7BB65) ^ (2 * (v743 ^ 0xDAF7BB65)) & 0xEBFCE4A;
  LODWORD(v744) = (v741 ^ 0x238C00) & (4 * v744) ^ v744;
  LODWORD(v741) = ((4 * (v741 ^ 0x280424A)) ^ 0x3AFF3928) & (v741 ^ 0x280424A) ^ (4 * (v741 ^ 0x280424A)) & 0xEBFCE48;
  LODWORD(v744) = (v741 ^ 0xABF0800) & (16 * v744) ^ v744;
  LODWORD(v741) = ((16 * (v741 ^ 0x400C642)) ^ 0xEBFCE4A0) & (v741 ^ 0x400C642) ^ (16 * (v741 ^ 0x400C642)) & 0xEBFCE40;
  LODWORD(v744) = v744 ^ 0xEBFCE4A ^ (v741 ^ 0xABCC400) & ((_DWORD)v744 << 8);
  v745 = *((_DWORD *)&STACK[0x18D0] + ((v682 - 1926392729 - ((2 * v682) & 0x8CE)) ^ 0x8D2D9467)) ^ 0x94678D2D ^ v689 ^ (v678 >> 24);
  LODWORD(v678) = __ROR4__(*((_DWORD *)&STACK[0x18D0] + (v717 ^ 0xF731BEDu)), 16);
  LODWORD(v743) = (v729 - 1926392729 - ((2 * v729) & 0x1A5B28CE)) ^ *((_DWORD *)&STACK[0x18D0]
                                                                    + (v743 ^ (2
                                                                                           * (((_DWORD)v744 << 16) & 0xEBF0000 ^ v744 ^ (((_DWORD)v744 << 16) ^ 0x4E4A0000) & (((v741 ^ 0x4030A4A) << 8) & 0xEBF0000 ^ 0x310000 ^ (((v741 ^ 0x4030A4A) << 8) ^ 0x3FCE0000) & (v741 ^ 0x4030A4A)))) ^ 0xD523E9BB));
  v746 = v690 ^ LODWORD(STACK[0x18A8]) ^ LODWORD(STACK[0x156C]) ^ (v743 - 1926392729 - ((2 * v743) & 0x1A5B28CE));
  LODWORD(v743) = LODWORD(STACK[0xFF8]) ^ LODWORD(STACK[0x1584]) ^ 0x5955611B ^ ((v745 ^ v678)
                                                                               - 1926392729
                                                                               - ((2 * (v745 ^ v678)) & 0x1A5B28CE));
  v747 = (v743 - 1926392729 - ((2 * v743) & 0x1A5B28CE)) ^ LODWORD(STACK[0x18A8]);
  LODWORD(v743) = ((v743 + 103 - ((2 * v743) & 0xCE)) ^ LODWORD(STACK[0x18A8])) + 856979969;
  LODWORD(v729) = (2 * (v743 & 0x107)) & 0xFE07 ^ v743 & 0x107 ^ ((2 * (v743 & 0x107)) | 0x400) & (v743 ^ 0x60A5A561);
  v748 = (2 * (v743 ^ 0x60A5A561)) & 0x266 ^ 0x222 ^ ((2 * (v743 ^ 0x60A5A561)) ^ 0x509044CC) & (v743 ^ 0x60A5A561);
  LODWORD(v729) = (4 * v729) & 0x2C4E2264 ^ v729 ^ ((4 * v729) ^ 0x800) & v748;
  v749 = (4 * v748) & 0xAC4E2264 ^ 0xC462266 ^ ((4 * v748) ^ 0xB1388998) & v748;
  LODWORD(v729) = (16 * v729) & 0x2C4E2260 ^ v729 ^ ((16 * v729) ^ 0x2000) & v749;
  v750 = (16 * v749) & 0xAC4E2260 ^ 0x280C0006 ^ ((16 * v749) ^ 0xC4E22660) & v749;
  LODWORD(v729) = v729 ^ ((_DWORD)v729 << 8) & 0x2C4E2200 ^ (((_DWORD)v729 << 8) ^ 0x220000) & v750;
  LODWORD(v729) = v743 ^ (2
                        * (((v729 ^ 0xAC4C0066) << 16) & 0x2C4E0000 ^ v729 ^ 0xAC4C0066 ^ (((v729 ^ 0xAC4C0066) << 16) ^ 0x22660000) & ((v750 << 8) & 0x2C4E0000 ^ 0x204C0000 ^ ((v750 << 8) ^ 0x4E220000) & v750)));
  v751 = (v701 - 1926392729 - ((2 * v701) & 0x1A5B28CE)) ^ LODWORD(STACK[0x18A8]) ^ LODWORD(STACK[0x17A0]) ^ LODWORD(STACK[0x100C]);
  LODWORD(v743) = 373
                * (((v729 ^ 0xF31BF6EC) + 1429364416) ^ ((v729 ^ 0xF25D9166) + 1416902966) ^ ((v729 ^ 0xD5BDA441)
                                                                                            + 1939082259))
                - 1284949485;
  LODWORD(v741) = v743 % 0x412 - 1926392729 - ((2 * (v743 % 0x412)) & 0x8CE);
  LODWORD(v743) = (v747 >> LODWORD(STACK[0xFF4])) + 946406753;
  LODWORD(v729) = (v743 ^ 0x47EF6BA6) & (2 * (v743 & 0x3A7)) ^ v743 & 0x3A7;
  LODWORD(v663) = ((2 * (v743 ^ 0x47EF6AE8)) ^ 0x82229E) & (v743 ^ 0x47EF6AE8) ^ (2 * (v743 ^ 0x47EF6AE8)) & 0x14E;
  LODWORD(v729) = (v663 ^ 0xFFFFF00F) & (4 * v729) ^ v729;
  LODWORD(v663) = ((4 * (v663 ^ 0x141)) ^ 0x1E6453C) & (v663 ^ 0x141) ^ (4 * (v663 ^ 0x141)) & 0x8079914C;
  LODWORD(v729) = (v663 ^ 0x600103) & (16 * v729) ^ v729;
  LODWORD(v663) = ((16 * (v663 ^ 0x80199043)) ^ 0x79914F0) & (v663 ^ 0x80199043) ^ (16 * (v663 ^ 0x80199043)) & 0x80799140;
  LODWORD(v729) = v729 ^ 0x8079914F ^ (v663 ^ 0x19100F) & ((_DWORD)v729 << 8);
  LODWORD(v743) = v743 ^ (2
                        * (((_DWORD)v729 << 16) & 0x790000 ^ v729 ^ (((_DWORD)v729 << 16) ^ 0x114F0000) & (((v663 ^ 0x8060810F) << 8) & 0x790000 ^ 0x680000 ^ (((v663 ^ 0x8060810F) << 8) ^ 0x79910000) & (v663 ^ 0x8060810F))));
  LODWORD(v743) = 373
                * (((v743 ^ 0xCB9C2C0D) + 2126093997) ^ ((v743 ^ 0x44EDF517) - 238532681) ^ ((v743 ^ 0x48860023)
                                                                                           - 39603581))
                + 642290983;
  LODWORD(v729) = (v743 ^ 0xAD3496EF) & (2 * (v743 & 0x8D20A4EC)) ^ v743 & 0x8D20A4EC;
  LODWORD(v663) = ((2 * (v743 ^ 0xB73496BF)) ^ 0x742864A6) & (v743 ^ 0xB73496BF) ^ (2 * (v743 ^ 0xB73496BF)) & 0x3A143252;
  LODWORD(v729) = (v663 ^ 0x32102001) & (4 * v729) ^ v729;
  LODWORD(v663) = ((4 * (v663 ^ 0xA141251)) ^ 0xE850C94C) & (v663 ^ 0xA141251) ^ (4 * (v663 ^ 0xA141251)) & 0x3A143250;
  LODWORD(v729) = (v663 ^ 0x28100053) & (16 * v729) ^ v729;
  LODWORD(v663) = ((16 * (v663 ^ 0x12043213)) ^ 0xA1432530) & (v663 ^ 0x12043213) ^ (16 * (v663 ^ 0x12043213)) & 0x3A143250;
  LODWORD(v729) = v729 ^ 0x3A143253 ^ (v663 ^ 0x20002043) & ((_DWORD)v729 << 8);
  v752 = v743 ^ (2
               * (((_DWORD)v729 << 16) & 0x3A140000 ^ v729 ^ (((_DWORD)v729 << 16) ^ 0x32530000) & (((v663 ^ 0x1A141243) << 8) & 0x3A140000 ^ 0x2A040000 ^ (((v663 ^ 0x1A141243) << 8) ^ 0x14320000) & (v663 ^ 0x1A141243))));
  v753 = 0x3EE4F99CBEA615
       * (((v752 ^ 0x66A7DBE8B875D7C5) - 0x66A7DBE8A87083E8) ^ ((v752 ^ 0x238B0CDD43C4B022) - 0x238B0CDD53C1E40FLL) ^ ((v752 ^ 0x452CD7356699A7ADLL) - 0x452CD735769CF380))
       - 0x669DAF4C3F340D33;
  v754 = (v753 ^ 0x57B5881060DF9336) & (2 * (v753 & 0x9781AD554A9E03A6)) ^ v753 & 0x9781AD554A9E03A6;
  v755 = ((2 * (v753 ^ 0x5AB4981AF0C3927ALL)) ^ 0x9A6A6A9F74BB23B8) & (v753 ^ 0x5AB4981AF0C3927ALL) ^ (2 * (v753 ^ 0x5AB4981AF0C3927ALL)) & 0xCD35354FBA5D91DCLL;
  v756 = (v755 ^ 0x8800200F30180198) & (4 * v754) ^ v754;
  v757 = ((4 * (v755 ^ 0x451515408A449044)) ^ 0x34D4D53EE9764770) & (v755 ^ 0x451515408A449044) ^ (4 * (v755 ^ 0x451515408A449044)) & 0xCD35354FBA5D91DCLL;
  v758 = (v757 ^ 0x414150EA8540140) & (16 * v756) ^ v756;
  v759 = ((16 * (v757 ^ 0xC92120411209908CLL)) ^ 0xD35354FBA5D91DC0) & (v757 ^ 0xC92120411209908CLL) ^ (16 * (v757 ^ 0xC92120411209908CLL)) & 0xCD35354FBA5D91D0;
  v760 = (v759 ^ 0xC111144BA0591100) & (v758 << 8) ^ v758;
  v761 = (((v759 ^ 0xC2421041A04801CLL) << 8) ^ 0x35354FBA5D91DC00) & (v759 ^ 0xC2421041A04801CLL) ^ ((v759 ^ 0xC2421041A04801CLL) << 8) & 0xCD35354FBA5D9100;
  v762 = v760 ^ 0xCD35354FBA5D91DCLL ^ (v761 ^ 0x535050A18110000) & (v760 << 16);
  v763 = v753 ^ (2
               * ((v762 << 32) & 0x4D35354F00000000 ^ v762 ^ ((v762 << 32) ^ 0x3A5D91DC00000000) & (((v761 ^ 0xC8003045A24C01DCLL) << 16) & 0x4D35354F00000000 ^ 0x4830050200000000 ^ (((v761 ^ 0xC8003045A24C01DCLL) << 16) ^ 0x354FBA5D00000000) & (v761 ^ 0xC8003045A24C01DCLL))));
  v764 = ((v763 ^ 0x269ED756A2F031C6) + 0x3A135F17A2EF9971) ^ ((v763 ^ 0xD258C31898149BC1) - 0x312AB4A667F4CC88);
  LODWORD(v763) = __CFADD__(1042 * (v764 ^ ((v763 ^ 0xE907F11C04C18A19) - 0xA7586A2FB21DD50)), 0xB6EC07ACB5BFC01ELL)
                + (((v764 ^ ((v763 ^ 0xE907F11C04C18A19) - 0xA7586A2FB21DD50)) * (unsigned __int128)0x412uLL) >> 64)
                + 1042
                * ((__CFADD__(v763 ^ 0x269ED756A2F031C6, 0x3A135F17A2EF9971) - 1) ^ (__CFADD__(v763 ^ 0xD258C31898149BC1, 0xCED54B59980B3378)- 1) ^ (__CFADD__(v763 ^ 0xE907F11C04C18A19, 0xF58A795D04DE22B0)- 1))+ 1707320014;
  LODWORD(v764) = (v763 ^ 0x533D693F) & (2 * (v763 & 0x9A3C613E)) ^ v763 & 0x9A3C613E;
  LODWORD(v761) = ((2 * (v763 ^ 0x477DE967)) ^ 0xBA8310B2) & (v763 ^ 0x477DE967) ^ (2 * (v763 ^ 0x477DE967)) & 0xDD418858;
  LODWORD(v764) = (v761 ^ 0x98010010) & (4 * v764) ^ v764;
  LODWORD(v761) = ((4 * (v761 ^ 0x45408849)) ^ 0x75062164) & (v761 ^ 0x45408849) ^ (4 * (v761 ^ 0x45408849)) & 0xDD418858;
  LODWORD(v764) = (v761 ^ 0x55000059) & (16 * v764) ^ v764;
  LODWORD(v761) = ((16 * (v761 ^ 0x88418819)) ^ 0xD4188590) & (v761 ^ 0x88418819) ^ (16 * (v761 ^ 0x88418819)) & 0xDD418850;
  LODWORD(v764) = v764 ^ 0xDD418859 ^ (v761 ^ 0xD4008000) & ((_DWORD)v764 << 8);
  v765 = v763 ^ (2
               * (((_DWORD)v764 << 16) & 0x5D410000 ^ v764 ^ (((_DWORD)v764 << 16) ^ 0x8590000) & (((v761 ^ 0x9410849) << 8) & 0x5D410000 ^ 0x1C410000 ^ (((v761 ^ 0x9410849) << 8) ^ 0x41880000) & (v761 ^ 0x9410849))));
  LODWORD(v764) = 373 * BYTE1(v751) + 684978853;
  LODWORD(v763) = (v764 ^ 0x7CCDEF6B) & (2 * (v764 & 0x58E03)) ^ v764 & 0x58E03;
  LODWORD(v761) = ((2 * (v764 ^ 0x7CCEFF6F)) ^ 0x5406E2D8) & (v764 ^ 0x7CCEFF6F) ^ (2 * (v764 ^ 0x7CCEFF6F)) & 0xA823716C;
  LODWORD(v763) = (v761 ^ 0xA8036128) & (4 * v763) ^ v763;
  LODWORD(v761) = ((4 * (v761 ^ 0xA8211124)) ^ 0xAF8DC5B0) & (v761 ^ 0xA8211124) ^ (4 * (v761 ^ 0xA8211124)) & 0xABE3716C;
  LODWORD(v763) = (v761 ^ 0xAB814120) & (16 * v763) ^ v763;
  LODWORD(v761) = ((16 * (v761 ^ 0x62304C)) ^ 0xBE3716C0) & (v761 ^ 0x62304C) ^ (16 * (v761 ^ 0x62304C)) & 0xABE37160;
  LODWORD(v763) = v763 ^ 0xABE3716C ^ (v761 ^ 0xAA23102C) & ((_DWORD)v763 << 8);
  LODWORD(v763) = ((_DWORD)v763 << 16) & 0x2BE30000 ^ v763 ^ (((_DWORD)v763 << 16) ^ 0x716C0000) & (((v761 ^ 0x1C0612C) << 8) & 0x2BE30000 ^ 0x8820000 ^ (((v761 ^ 0x1C0612C) << 8) ^ 0x63710000) & (v761 ^ 0x1C0612C));
  LODWORD(v761) = HIBYTE(v751) + 1004412363;
  LODWORD(v744) = (2 * (v761 & 0x33D)) & (v761 ^ 0x8C8622AF) ^ v761 & 0x33D ^ ((2 * (v761 & 0x33D)) & 0x12 | 0x20100);
  LODWORD(v713) = (2 * (v761 ^ 0x8C8622AF)) & 0x192 ^ 0x92 ^ ((2 * (v761 ^ 0x8C8622AF)) ^ 0x91480324) & (v761 ^ 0x8C8622AF);
  LODWORD(v744) = (4 * v744) & 0x48A7C190 ^ v744 ^ ((4 * v744) ^ 0x80400) & v713;
  LODWORD(v713) = (4 * v713) & 0x48A7C190 ^ 0x4820C192 ^ ((4 * v713) ^ 0x22180648) & v713;
  LODWORD(v744) = (16 * v744) & 0x48A7C190 ^ v744 ^ ((16 * v744) ^ 0x201000) & v713;
  LODWORD(v713) = (16 * v713) & 0x48A7C190 ^ 0x4083C092 ^ ((16 * v713) ^ 0x8A7C1920) & v713;
  LODWORD(v744) = v744 ^ ((_DWORD)v744 << 8) & 0x48A7C100 ^ (((_DWORD)v744 << 8) ^ 0x22010000) & v713;
  LODWORD(v761) = v761 ^ (2
                        * (((v744 ^ 0x4884C092) << 16) & 0x48A70000 ^ v744 ^ 0x4884C092 ^ (((v744 ^ 0x4884C092) << 16) ^ 0x41920000) & (((_DWORD)v713 << 8) & 0x48A70000 ^ 0x48260000 ^ (((_DWORD)v713 << 8) ^ 0x27C10000) & v713)));
  LODWORD(v764) = (v764 ^ (2 * (_DWORD)v763) ^ 0xC22B6CDB) % 0x412;
  LODWORD(v763) = 373
                * (((v761 ^ 0x8356B609) + 636403081) ^ ((v761 ^ 0xA20096E8) + 79207786) ^ ((v761 ^ 0xF53C40F8)
                                                                                         + 1401179002))
                - 615394150;
  LODWORD(v761) = (v763 ^ 0x9A464470) & (2 * (v763 & 0xD8176579)) ^ v763 & 0xD8176579;
  LODWORD(v744) = ((2 * (v763 ^ 0x9A488EC2)) ^ 0x84BFD776) & (v763 ^ 0x9A488EC2) ^ (2 * (v763 ^ 0x9A488EC2)) & 0x425FEBBA;
  LODWORD(v761) = (v744 ^ 0x1F8320) & (4 * v761) ^ v761;
  LODWORD(v744) = ((4 * (v744 ^ 0x42402889)) ^ 0x97FAEEC) & (v744 ^ 0x42402889) ^ (4 * (v744 ^ 0x42402889)) & 0x425FEBB8;
  LODWORD(v761) = (v744 ^ 0x5FAAA0) & (16 * v761) ^ v761;
  LODWORD(v744) = ((16 * (v744 ^ 0x42004113)) ^ 0x25FEBBB0) & (v744 ^ 0x42004113) ^ (16 * (v744 ^ 0x42004113)) & 0x425FEBB0;
  LODWORD(v761) = v761 ^ 0x425FEBBB ^ (v744 ^ 0x5EAB00) & ((_DWORD)v761 << 8);
  v766 = v763 ^ (2
                             * (((_DWORD)v761 << 16) & 0x425F0000 ^ v761 ^ (((_DWORD)v761 << 16) ^ 0x6BBB0000) & (((v744 ^ 0x4201400B) << 8) & 0x425F0000 ^ 0x140000 ^ (((v744 ^ 0x4201400B) << 8) ^ 0x5FEB0000) & (v744 ^ 0x4201400B)))) ^ 0x55B32668;
  v767 = 0x3EE4F99CBEA615
       * (((v766 ^ 0xBAE1372F9D835D5CLL) + 0x451EC8D0627CA2A4) ^ ((v766 ^ 0xA90B5C9D154A76ADLL) + 0x56F4A362EAB58953) ^ ((v766 ^ 0x13EA6BB205E4BF96) - 0x13EA6BB205E4BF96))
       - 0x2083C8B79C3B3946;
  v768 = (v767 ^ 0x514784C807008FB1) & (2 * (v767 & 0x5167C6C0A7A52FB9)) ^ v767 & 0x5167C6C0A7A52FB9;
  v769 = ((2 * (v767 ^ 0x710D09C9060A8DC3)) ^ 0x40D59E13435F44F4) & (v767 ^ 0x710D09C9060A8DC3) ^ (2 * (v767 ^ 0x710D09C9060A8DC3)) & 0x206ACF09A1AFA27ALL;
  v770 = (v769 ^ 0xE01010D0060) & (4 * v768) ^ v768;
  v771 = ((4 * (v769 ^ 0x202A4108A0A0A20ALL)) ^ 0x81AB3C2686BE89E8) & (v769 ^ 0x202A4108A0A0A20ALL) ^ (4 * (v769 ^ 0x202A4108A0A0A20ALL)) & 0x206ACF09A1AFA278;
  v772 = (v771 ^ 0x2A0C0080AE8060) & (16 * v770) ^ v770;
  v773 = ((16 * (v771 ^ 0x2040C30921012212)) ^ 0x6ACF09A1AFA27A0) & (v771 ^ 0x2040C30921012212) ^ (16 * (v771 ^ 0x2040C30921012212)) & 0x206ACF09A1AFA270;
  v774 = (v773 ^ 0x28C00800AA2200) & (v772 << 8) ^ v772;
  v775 = (((v773 ^ 0x20420F01A105805ALL) << 8) ^ 0x6ACF09A1AFA27A00) & (v773 ^ 0x20420F01A105805ALL) ^ ((v773 ^ 0x20420F01A105805ALL) << 8) & 0x206ACF09A1AFA200;
  v776 = v774 ^ 0x206ACF09A1AFA27ALL ^ (v775 ^ 0x204A0901A1A20000) & (v774 << 16);
  v777 = v767 ^ (2
               * ((v776 << 32) & 0x206ACF0900000000 ^ v776 ^ ((v776 << 32) ^ 0x21AFA27A00000000) & (((v775 ^ 0x20C608000D807ALL) << 16) & 0x206ACF0900000000 ^ 0x20624E0000000000 ^ (((v775 ^ 0x20C608000D807ALL) << 16) ^ 0x4F09A1AF00000000) & (v775 ^ 0x20C608000D807ALL))));
  v778 = ((v777 ^ 0xAB74A16F8966DC6DLL) + 0x45741563F8EBF138) ^ ((v777 ^ 0x3FAC3B9D9F651274) - 0x2E53706E1117C0D1);
  LODWORD(v778) = __CFADD__(1042 * (v778 ^ ((v777 ^ 0xC53FC631F2F9A554) + 0x2B3F723D8374880FLL)), 0xE20E6311A084B250)+ (((v778 ^ ((v777 ^ 0xC53FC631F2F9A554) + 0x2B3F723D8374880FLL)) * (unsigned __int128)0x412uLL) >> 64)+ 1042* ((__CFADD__(v777 ^ 0xAB74A16F8966DC6DLL, 0x45741563F8EBF138) - 1) ^ (__CFADD__(v777 ^ 0x3FAC3B9D9F651274, 0xD1AC8F91EEE83F2FLL)- 1) ^ (__CFADD__(v777 ^ 0xC53FC631F2F9A554, 0x2B3F723D8374880FLL)- 1))+ 446748823;
  LODWORD(v777) = (v778 ^ 0xE05E0469) & (2 * (v778 & 0xE55F286D)) ^ v778 & 0xE55F286D;
  LODWORD(v775) = ((2 * (v778 ^ 0xEACA1439)) ^ 0x1F2A78A8) & (v778 ^ 0xEACA1439) ^ (2 * (v778 ^ 0xEACA1439)) & 0xF953C54;
  LODWORD(v777) = (v775 ^ 0xF002000) & (4 * v777) ^ v777;
  LODWORD(v775) = ((4 * (v775 ^ 0x950454)) ^ 0x3E54F150) & (v775 ^ 0x950454) ^ (4 * (v775 ^ 0x950454)) & 0xF953C54;
  LODWORD(v777) = (v775 ^ 0xE143050) & (16 * v777) ^ v777;
  LODWORD(v775) = ((16 * (v775 ^ 0x1810C04)) ^ 0xF953C540) & (v775 ^ 0x1810C04) ^ (16 * (v775 ^ 0x1810C04)) & 0xF953C50;
  LODWORD(v777) = v777 ^ 0xF953C54 ^ (v775 ^ 0x9110414) & ((_DWORD)v777 << 8);
  LODWORD(v777) = v778 ^ (2
                        * (((_DWORD)v777 << 16) & 0xF950000 ^ v777 ^ (((_DWORD)v777 << 16) ^ 0x3C540000) & (((v775 ^ 0x6843814) << 8) & 0xF950000 ^ 0xA810000 ^ (((v775 ^ 0x6843814) << 8) ^ 0x953C0000) & (v775 ^ 0x6843814))));
  LODWORD(v778) = *((_DWORD *)&STACK[0x18D0] + (v741 ^ 0x8D2D9467));
  HIDWORD(v678) = v778 ^ 0x2D9467;
  LODWORD(v678) = v778 ^ 0x8D000000;
  LOBYTE(v778) = ((v746 ^ LOBYTE(STACK[0x14C4]) ^ 0xB4) + 45) ^ ((v746 ^ LOBYTE(STACK[0x14C4]) ^ 0xD) - 106) ^ ((v746 ^ LOBYTE(STACK[0x14C4]) ^ 0xB9) + 34);
  LOBYTE(v778) = (v778 + 125) & 0x2D ^ (-126 - v778) & (v746 ^ LOBYTE(STACK[0x14C4]) ^ 0xD2);
  LODWORD(v713) = ((*((_DWORD *)&STACK[0x18D0] + v764) << 16) ^ 0x6039E807) & (HIWORD(*((_DWORD *)&STACK[0x18D0] + v764)) ^ 0xFFFF7692) | HIWORD(*((_DWORD *)&STACK[0x18D0] + v764)) & 0x17F8;
  LODWORD(v741) = (75
                 * ((v778 & 0xCC ^ 0xF3 ^ (v778 ^ 0x2D) & (LODWORD(STACK[0x1658]) ^ 0x54u) | ((v701 + 103 - ((2 * v701) & 0xCE)) ^ LOBYTE(STACK[0x18A8]) ^ LOBYTE(STACK[0x17A0]) ^ LOBYTE(STACK[0x100C]))) == 0)) ^ LODWORD(STACK[0x1768]);
  LODWORD(STACK[0x1690]) = STACK[0x1598];
  LODWORD(STACK[0x1434]) = HIWORD(*((_DWORD *)&STACK[0x18D0] + (v765 ^ 0x303D718Cu)));
  v779 = *((_DWORD *)&STACK[0x18D0] + (v777 ^ 0xE25D50C5)) ^ (v678 >> 24);
  v780 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)v741) - 12);
  v781 = LODWORD(STACK[0x1798]) ^ 0x86FDA6E7;
  v782 = LODWORD(STACK[0x1738]) ^ 0x962CFE2;
  LODWORD(STACK[0x1480]) = v713 ^ 0x79737948;
  LODWORD(STACK[0x1498]) = v779;
  LODWORD(STACK[0x1560]) = v782;
  return v780(v781);
}

#error "1002CE57C: too big function (funcsize=0)"

uint64_t sub_1002E9514(int a1, int a2, int a3)
{
  char v3;
  char v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned __int8 v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;

  v8 = (v3 - (v4 & 0xCE) + (a3 ^ 0x49)) ^ a1;
  v9 = LODWORD(STACK[0xF24]) ^ LODWORD(STACK[0x1270]);
  LODWORD(STACK[0x1898]) = v5;
  v10 = (v9 - 1926392729 - ((v9 << ((a3 - 55) & 0x5F ^ 0x56)) & 0x1A5B28CE)) ^ v5;
  v11 = (v10 - 1926392729 - ((2 * v10) & 0x1A5B28CE)) ^ a1;
  v12 = ((a2 & 0x82) + (a2 ^ 0xF31C25B2) - ((a2 ^ 0xF31C25B2) & 0x82) + 216072704) ^ 0xFFFD2757;
  LODWORD(STACK[0x1778]) = a2;
  v13 = (BYTE1(a2) ^ 0x94) + 36432497;
  v14 = ((2 * (v13 & 0x97)) | 0x93732000) & (v13 ^ 0x91500206) ^ v13 & 0x97;
  v15 = ((2 * v13) ^ 0x688B092E) & (v13 ^ 0x6C841696) ^ 0x943AAB12;
  v16 = (4 * v14) & 0x7498F10 ^ v14 ^ ((4 * v14) ^ 0x4C8C9800) & v15;
  v17 = (4 * v15) & 0x7498F10 ^ 0x2498312 ^ ((4 * v15) ^ 0x1C663C48) & v15;
  v18 = (16 * v16) & 0x7498F10 ^ v16 ^ ((16 * v16) ^ 0x63BAE000) & v17;
  v19 = (16 * v17) & 0x7498F10 ^ 0x3410E12 ^ ((16 * v17) ^ 0x7498F120) & v17;
  v20 = v18 ^ (v18 << 8) & 0x7498F00 ^ ((v18 << 8) ^ 0x332E0000) & v19 ^ 0x9172A112;
  v21 = v13 ^ (2
             * ((v20 << 16) & 0x7490000 ^ v20 ^ ((v20 << 16) ^ 0xF120000) & ((v19 << 8) & 0x7490000 ^ 0x6400000 ^ ((v19 << 8) ^ 0x498F0000) & v19)));
  v22 = v7
      + 373
      * (((v21 ^ 0x3D121E68) - 1299743420) ^ ((v21 ^ 0x3AF25478) - 1251526828) ^ ((v21 ^ 0xFAA742A3) + 1966219657));
  v23 = v22 % 0x412 - 1926392729 - ((2 * (v22 % 0x412)) & 0x8CE);
  v24 = 373 * v12;
  v25 = ((v24 + 912702289) ^ 0xAD18D007) & (2 * ((v24 + 912702289) & 0xC99AC557)) ^ (v24 + 912702289) & 0xC99AC557;
  v26 = ((2 * ((v24 + 912702289) ^ 0x3E1D5001)) ^ 0xEF0F2AAC) & ((v24 + 912702289) ^ 0x3E1D5001) ^ (2
                                                                                                  * ((v24 + 912702289) ^ 0x3E1D5001)) & 0x77879556;
  v27 = v26 ^ 0x10809552;
  v28 = (v26 ^ 0x66070004) & (4 * v25) ^ v25;
  v29 = ((4 * v27) ^ 0xDE1E5558) & v27 ^ (4 * v27) & 0x77879554;
  v30 = (v29 ^ 0xD6061550) & (16 * v28) ^ v28;
  v31 = ((16 * (v29 ^ 0x21818006)) ^ 0x78795560) & (v29 ^ 0x21818006) ^ (16 * (v29 ^ 0x21818006)) & 0xF7879550;
  v32 = v30 ^ 0xF7879556 ^ (v31 ^ 0x70011516) & (v30 << 8);
  v33 = (373 * v12 + 912702289) ^ (2
                                 * ((v32 << 16) & 0x77870000 ^ v32 ^ ((v32 << 16) ^ 0x15560000) & (((v31 ^ 0x87868016) << 8) & 0x77870000 ^ 0x70020000 ^ (((v31 ^ 0x87868016) << 8) ^ 0x7950000) & (v31 ^ 0x87868016))));
  v34 = 373 * HIBYTE(v11) - 2070494471;
  v35 = (v34 ^ 0x7A6839AF) & (2 * (v34 & 0xABDAF)) ^ v34 & 0xABDAF;
  v36 = ((2 * (v34 ^ 0x2AA900B3)) ^ 0xA2077A38) & (v34 ^ 0x2AA900B3) ^ (2 * (v34 ^ 0x2AA900B3)) & 0x5043BD1C;
  v37 = v36 ^ 0x50408504;
  v38 = (v36 ^ 0x1833818) & (4 * v35) ^ v35;
  v39 = ((4 * v37) ^ 0x470EF470) & v37 ^ (4 * v37) & 0x51C3BD1C;
  v40 = (v39 ^ 0x4102B41C) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x10C1090C)) ^ 0x1C3BD1C0) & (v39 ^ 0x10C1090C) ^ (16 * (v39 ^ 0x10C1090C)) & 0x51C3BD10;
  v42 = v40 ^ 0x51C3BD1C ^ (v41 ^ 0x10039100) & (v40 << 8);
  v43 = (v34 ^ (2
              * ((v42 << 16) & 0x51C30000 ^ v42 ^ ((v42 << 16) ^ 0x3D1C0000) & (((v41 ^ 0x41C02C1C) << 8) & 0x51C30000 ^ 0x10420000 ^ (((v41 ^ 0x41C02C1C) << 8) ^ 0x43BD0000) & (v41 ^ 0x41C02C1C)))) ^ 0xFAEDC797)
      % 0x412;
  v44 = *((_DWORD *)&STACK[0x18D0] + (v33 ^ 0xC99EFFB) % 0x412);
  v45 = ((2 * (v8 ^ 0x71)) | 0xF5C3A7BE) - (v8 ^ 0x71) - 2061620191;
  v46 = (((v45 & 0x375FD26C ^ 0x50F5020) + (v45 ^ 0x7AF087DC) - ((v45 ^ 0x7AF087DC) & 0x375FD26C)) ^ 0x374E86FC)
      + 397525652;
  v47 = (v46 ^ 0xC16E3F65) & (2 * (v46 & 0xE84E3E74)) ^ v46 & 0xE84E3E74;
  v48 = ((2 * (v46 ^ 0x51723BCD)) ^ 0x72780B72) & (v46 ^ 0x51723BCD) ^ (2 * (v46 ^ 0x51723BCD)) & 0xB93C05B8;
  v49 = v48 ^ 0x89040489;
  v50 = (v48 ^ 0x283C0539) & (4 * v47) ^ v47;
  v51 = ((4 * v49) ^ 0xE4F016E4) & v49 ^ (4 * v49) & 0xB93C05B8;
  v52 = (v51 ^ 0xA03004A0) & (16 * v50) ^ v50;
  v53 = ((16 * (v51 ^ 0x190C0119)) ^ 0x93C05B90) & (v51 ^ 0x190C0119) ^ (16 * (v51 ^ 0x190C0119)) & 0xB93C05B0;
  v54 = v52 ^ 0xB93C05B9 ^ (v53 ^ 0x91000129) & (v52 << 8);
  v55 = v46 ^ (2
             * ((v54 << 16) & 0x393C0000 ^ v54 ^ ((v54 << 16) ^ 0x5B90000) & (((v53 ^ 0x283C0429) << 8) & 0xB93C0000 ^ 0x1380000 ^ (((v53 ^ 0x283C0429) << 8) ^ 0x3C050000) & (v53 ^ 0x283C0429))));
  v56 = (((v44 << 8) ^ 0x14D44CA9) & (HIBYTE(v44) ^ 0xFFFFFF62) | HIBYTE(v44) & 0x56) ^ 0x42AA8042;
  v57 = ((2 * v56) | 0x9D6E365A) - v56;
  v58 = 373 * (((v55 ^ 0x68310C83) - 2103094754) ^ ((v55 ^ 0xFB106BB0) + 293877039) ^ ((v55 ^ 0xB675235) - 504165204))
      - 1037657337;
  v59 = (v58 ^ 0xFD48DEE9) & (2 * (v58 & 0xF1429F0C)) ^ v58 & 0xF1429F0C;
  v60 = ((2 * (v58 ^ 0x3F4DECF1)) ^ 0x9C1EE7FA) & (v58 ^ 0x3F4DECF1) ^ (2 * (v58 ^ 0x3F4DECF1)) & 0xCE0F73FC;
  v61 = v60 ^ 0x42011005;
  v62 = (v60 ^ 0x8C0E6070) & (4 * v59) ^ v59;
  v63 = ((4 * v61) ^ 0x383DCFF4) & v61 ^ (4 * v61) & 0xCE0F73FC;
  v64 = (v63 ^ 0x80D43E0) & (16 * v62) ^ v62;
  v65 = ((16 * (v63 ^ 0xC6023009)) ^ 0xE0F73FD0) & (v63 ^ 0xC6023009) ^ (16 * (v63 ^ 0xC6023009)) & 0xCE0F73F0;
  v66 = v64 ^ 0xCE0F73FD ^ (v65 ^ 0xC0073300) & (v64 << 8);
  v67 = v58 ^ (2
             * ((v66 << 16) & 0x4E0F0000 ^ v66 ^ ((v66 << 16) ^ 0x73FD0000) & (((v65 ^ 0xE08402D) << 8) & 0x4E0F0000 ^ 0x400C0000 ^ (((v65 ^ 0xE08402D) << 8) ^ 0xF730000) & (v65 ^ 0xE08402D)))) ^ 0x646BEC91;
  v68 = 0x3EE4F99CBEA615
      * (((v67 ^ 0xA9E819BE32FD90FDLL) + 0x5617E641CD026F03) ^ ((v67 ^ 0xC769E09062484CACLL) + 0x38961F6F9DB7B354) ^ ((v67 ^ 0x6E81F92EDD984836) - 0x6E81F92EDD984836))
      - 0x5138F067488D56B5;
  v69 = (v68 ^ 0x729AEC7E53E6482DLL) & (2 * (v68 & 0x821CEE7053F74D28)) ^ v68 & 0x821CEE7053F74D28;
  v70 = ((2 * (v68 ^ 0x72B2BCFE50A8483DLL)) ^ 0xE15CA51C06BE0A2ALL) & (v68 ^ 0x72B2BCFE50A8483DLL) ^ (2 * (v68 ^ 0x72B2BCFE50A8483DLL)) & 0xF0AE528E035F0514;
  v71 = v70 ^ 0x10A2528201410515;
  v72 = (v70 ^ 0x40000021E0000) & (4 * v69) ^ v69;
  v73 = ((4 * v71) ^ 0xC2B94A380D7C1454) & v71 ^ (4 * v71) & 0xF0AE528E035F0514;
  v74 = (v73 ^ 0xC0A84208015C0400) & (16 * v72) ^ v72;
  v75 = ((16 * (v73 ^ 0x3006108602030101)) ^ 0xAE528E035F05150) & (v73 ^ 0x3006108602030101) ^ (16 * (v73 ^ 0x3006108602030101)) & 0xF0AE528E035F0510;
  v76 = (v75 ^ 0xA4008001500100) & (v74 << 8) ^ v74;
  v77 = (((v75 ^ 0xF00A520E020F0405) << 8) ^ 0xAE528E035F051500) & (v75 ^ 0xF00A520E020F0405) ^ ((v75 ^ 0xF00A520E020F0405) << 8) & 0xF0AE528E035F0500;
  v78 = v76 ^ 0xF0AE528E035F0515 ^ (v77 ^ 0xA002020203050000) & (v76 << 16);
  v79 = v68 ^ (2
             * ((v78 << 32) & 0x70AE528E00000000 ^ v78 ^ ((v78 << 32) ^ 0x35F051500000000) & (((v77 ^ 0x50AC508C005A0015) << 16) & 0x70AE528E00000000 ^ 0x2020508000000000 ^ (((v77 ^ 0x50AC508C005A0015) << 16) ^ 0x528E035F00000000) & (v77 ^ 0x50AC508C005A0015))));
  v80 = ((v79 ^ 0x8BF4E5A6DCED36BDLL) + 0xFE15A50EE16005DLL) ^ ((v79 ^ 0xE8FBA1796AEDE5D7) + 0x6CEE1E8F5816D337);
  LODWORD(v79) = __CFADD__(1042 * (v80 ^ ((v79 ^ 0x530FBBE3499468) - 0x7BB94FB22E4D5D76)), 0x94FA8415EBAC6DF8)
               + (((v80 ^ ((v79 ^ 0x530FBBE3499468) - 0x7BB94FB22E4D5D76)) * (unsigned __int128)0x412uLL) >> 64)
               + 1042
               * ((__CFADD__(v79 ^ 0x8BF4E5A6DCED36BDLL, 0xFE15A50EE16005DLL) - 1) ^ (__CFADD__(v79 ^ 0xE8FBA1796AEDE5D7, 0x6CEE1E8F5816D337)- 1) ^ (__CFADD__(v79 ^ 0x530FBBE3499468, 0x8446B04DD1B2A28ALL)- 1))+ 668075463;
  LODWORD(v77) = (v79 ^ 0x9E89F818) & (2 * (v79 & 0xD82DFA9D)) ^ v79 & 0xD82DFA9D;
  LODWORD(v80) = ((2 * (v79 ^ 0x2E88BD20)) ^ 0xED4A8F7A) & (v79 ^ 0x2E88BD20) ^ (2 * (v79 ^ 0x2E88BD20)) & 0xF6A547BC;
  LODWORD(v71) = v80 ^ 0x12A54085;
  LODWORD(v80) = (v80 ^ 0xE0000638) & (4 * v77) ^ v77;
  LODWORD(v77) = ((4 * v71) ^ 0xDA951EF4) & v71 ^ (4 * v71) & 0xF6A547BC;
  LODWORD(v80) = (v77 ^ 0xD28506B0) & (16 * v80) ^ v80;
  LODWORD(v77) = ((16 * (v77 ^ 0x24204109)) ^ 0x6A547BD0) & (v77 ^ 0x24204109) ^ (16 * (v77 ^ 0x24204109)) & 0xF6A547B0;
  LODWORD(v80) = v80 ^ 0xF6A547BD ^ (v77 ^ 0x62044300) & ((_DWORD)v80 << 8);
  LODWORD(v79) = *((_DWORD *)&STACK[0x18D0]
                 + (v79 ^ (2
                                       * (((_DWORD)v80 << 16) & 0x76A50000 ^ v80 ^ (((_DWORD)v80 << 16) ^ 0x47BD0000) & (((v77 ^ 0x94A1042D) << 8) & 0x76A50000 ^ 0x52A00000 ^ (((v77 ^ 0x94A1042D) << 8) ^ 0xA5470000) & (v77 ^ 0x94A1042D)))) ^ 0xB82D75E7));
  LODWORD(v80) = (v79 ^ 0x8D2D9467) >> (v23 & 0x10 ^ 8 | v23 & 0x10 ^ 0x10);
  LODWORD(v80) = ((~(_DWORD)v80 | 0xFFFFFFEA) & (((_DWORD)v79 << 8) ^ 0x11000C15) | v80 & 0xEA) ^ 0x804284AA;
  LODWORD(v71) = (HIBYTE(v6) ^ 0x8D) != ((HIBYTE(v6) ^ 0x8D) - 39);
  LODWORD(STACK[0x1730]) = *((_DWORD *)&STACK[0x18D0] + v43);
  LODWORD(STACK[0x16C0]) = (v57 + 826860755) ^ 0x387024A5;
  LODWORD(STACK[0x1750]) = (-92098443 - (v80 | 0xFA82B075) + (v80 | 0x57D4F8A)) ^ 0x34863452;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)(a3 ^ ((8 * v71) | (16 * v71)))) - 4))();
}

uint64_t sub_1002EA420()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;

  LODWORD(STACK[0x1828]) = v6;
  LODWORD(STACK[0x1544]) = v0 ^ 0xA0B9F367;
  LODWORD(STACK[0x1838]) = v3 ^ 0xA0B9F367;
  LODWORD(STACK[0x161C]) = v1 ^ 0x8D2D9485;
  LODWORD(STACK[0x1768]) = v5 ^ 0xE8F;
  LODWORD(STACK[0x1578]) = ((v5 ^ 0xE8F) - 1918854210) ^ v2;
  LODWORD(STACK[0x1658]) = LODWORD(STACK[0x16A4]) ^ 0x8D2D9467;
  LODWORD(STACK[0x1810]) = LODWORD(STACK[0x16D0]) ^ 0x682E45C;
  v7 = LODWORD(STACK[0x118C]) - 1287450041;
  v8 = ((2 * (v7 ^ 0x91040C04)) ^ 0xBB71C37A) & (v7 ^ 0x91040C04) ^ (2 * (v7 ^ 0x91040C04)) & 0xDDB8E1BC;
  v9 = ((4 * (v8 ^ 0x44882085)) ^ 0x76E386F4) & (v8 ^ 0x44882085) ^ (4 * (v8 ^ 0x44882085)) & 0xDDB8E1BC;
  v10 = ((16 * (v9 ^ 0x89186109)) ^ 0xDB8E1BD0) & (v9 ^ 0x89186109) ^ (16 * (v9 ^ 0x89186109)) & 0xDDB8E1B0;
  v11 = (v7 ^ 0x83CCD34) & (2 * (v7 & 0x4CBCEDB9)) ^ v7 & 0x4CBCEDB9;
  v12 = (v9 ^ 0x54A080B0) & (16 * ((v8 ^ 0x1130C128) & (4 * v11) ^ v11)) ^ (v8 ^ 0x1130C128) & (4 * v11) ^ v11;
  v13 = v12 ^ 0xDDB8E1BD ^ (v10 ^ 0xD9880100) & (v12 << 8);
  v14 = v7 ^ (2
            * ((v13 << 16) & 0x5DB80000 ^ v13 ^ ((v13 << 16) ^ 0x61BD0000) & (((v10 ^ 0x430E02D) << 8) & 0x5DB80000 ^ 0x45180000 ^ (((v10 ^ 0x430E02D) << 8) ^ 0x38E10000) & (v10 ^ 0x430E02D))));
  v15 = (HIWORD(v14) ^ 0xFFFF8B42)
      - 902133088
      + (((v14 ^ 0x1E6FF239) + 402700131) ^ ((v14 ^ 0xE06E88A2) - 436089350) ^ ((v14 ^ 0x8ABC5458) - 1932324604));
  v16 = ((2 * (v15 ^ 0x1153BE9)) ^ 0x87CC6442) & (v15 ^ 0x1153BE9) ^ (2 * (v15 ^ 0x1153BE9)) & 0xC3E63220;
  v17 = ((4 * (v16 ^ 0x40221221)) ^ 0xF98C884) & (v16 ^ 0x40221221) ^ (4 * (v16 ^ 0x40221221)) & 0xC3E63220;
  v18 = ((16 * (v17 ^ 0xC0663221)) ^ 0x3E632210) & (v17 ^ 0xC0663221) ^ (16 * (v17 ^ 0xC0663221)) & 0xC3E63220;
  v19 = (v15 ^ 0x80F329E9) & (2 * (v15 & 0xC2F309C8)) ^ v15 & 0xC2F309C8;
  v20 = (v17 ^ 0x3800000) & (16 * ((v16 ^ 0x3C42000) & (4 * v19) ^ v19)) ^ (v16 ^ 0x3C42000) & (4 * v19) ^ v19;
  v21 = v20 ^ 0xC3E63221 ^ (v18 ^ 0x2622200) & (v20 << 8);
  v22 = v15 ^ (2
             * ((v21 << 16) & 0x43E60000 ^ v21 ^ ((v21 << 16) ^ 0x32210000) & (((v18 ^ 0xC1841021) << 8) & 0x43E60000 ^ 0x1C40000 ^ (((v18 ^ 0xC1841021) << 8) ^ 0x66320000) & (v18 ^ 0xC1841021))));
  v23 = (((v22 ^ 0xEED72F4) + 1027634407) ^ ((v22 ^ 0x3EC33BE0) + 225328627) ^ ((v22 ^ 0x7151249E) + 1123820173))
      + 1261449530
      + ((((v22 >> 8) ^ 0xF93DE842) - 1951466312) ^ (((v22 >> 8) ^ 0x24C0C799) + 1448334189) ^ (((v22 >> 8) ^ 0xDDBC50B6)
                                                                                              - 1355856828));
  v24 = ((2 * (v23 ^ 0x868E830D)) ^ 0x9348E932) & (v23 ^ 0x868E830D) ^ (2 * (v23 ^ 0x868E830D)) & 0x49A47498;
  v25 = ((4 * (v24 ^ 0x48A41489)) ^ 0x2691D264) & (v24 ^ 0x48A41489) ^ (4 * (v24 ^ 0x48A41489)) & 0x49A47498;
  v26 = ((16 * (v25 ^ 0x49242499)) ^ 0x9A474990) & (v25 ^ 0x49242499) ^ (16 * (v25 ^ 0x49242499)) & 0x49A47490;
  v27 = (v23 ^ 0x8E8AE705) & (2 * (v23 & 0xCF2AF794)) ^ v23 & 0xCF2AF794;
  v28 = (v25 ^ 0x805019) & (16 * ((v24 ^ 0x1006019) & (4 * v27) ^ v27)) ^ (v24 ^ 0x1006019) & (4 * v27) ^ v27;
  v29 = v28 ^ 0x49A47499 ^ (v26 ^ 0x8044009) & (v28 << 8);
  v30 = STACK[0x17C0];
  v31 = -1540791555
      * (LODWORD(STACK[0x17C0]) ^ v23 ^ (2
                                       * ((v29 << 16) & 0x49A40000 ^ v29 ^ ((v29 << 16) ^ 0x74990000) & (((v26 ^ 0x41A03409) << 8) & 0x49A40000 ^ 0x49800000 ^ (((v26 ^ 0x41A03409) << 8) ^ 0xA4740000) & (v26 ^ 0x41A03409)))) ^ 0x504F8AC1);
  v32 = 904115353 * ((v31 ^ HIWORD(v31)) + LODWORD(STACK[0x1190]) - ((v31 ^ HIWORD(v31)) >> 8)) - 533255185;
  v33 = ((2 * (v32 ^ 0x32878377)) ^ 0x5A9EAECC) & (v32 ^ 0x32878377) ^ (2 * (v32 ^ 0x32878377)) & 0x2D4F5766;
  v34 = ((4 * (v33 ^ 0x25415122)) ^ 0xB53D5D98) & (v33 ^ 0x25415122) ^ (4 * (v33 ^ 0x25415122)) & 0x2D4F5764;
  v35 = ((16 * (v34 ^ 0x8420266)) ^ 0xD4F57660) & (v34 ^ 0x8420266) ^ (16 * (v34 ^ 0x8420266)) & 0x2D4F5760;
  v36 = (v32 ^ 0x1F868355) & (2 * (v32 & 0x1FC8D411)) ^ v32 & 0x1FC8D411;
  v37 = (v34 ^ 0x250D5500) & (16 * ((v33 ^ 0x8060166) & (4 * v36) ^ v36)) ^ (v33 ^ 0x8060166) & (4 * v36) ^ v36;
  v38 = v37 ^ 0x2D4F5766 ^ (v35 ^ 0x4455600) & (v37 << 8);
  LODWORD(STACK[0x1528]) = v32 ^ 0xC2F7EEBA ^ (2
                                             * ((v38 << 16) & 0x2D4F0000 ^ v38 ^ ((v38 << 16) ^ 0x57660000) & (((v35 ^ 0x290A0106) << 8) & 0x2D4F0000 ^ 0x20080000 ^ (((v35 ^ 0x290A0106) << 8) ^ 0x4F570000) & (v35 ^ 0x290A0106))));
  v39 = *(_QWORD *)(STACK[0x18C0] + 8 * v5);
  LODWORD(STACK[0x17BC]) = LODWORD(STACK[0x14F8]) ^ 0x8DA0B9F3;
  LODWORD(STACK[0x1434]) = v30;
  LODWORD(STACK[0x16A4]) = STACK[0xEA4];
  LODWORD(STACK[0x14F8]) = STACK[0x1868];
  STACK[0x1840] = LODWORD(STACK[0x1698]);
  LODWORD(STACK[0x1670]) = STACK[0x15E0];
  LODWORD(STACK[0x1660]) = STACK[0x13B4];
  LODWORD(STACK[0x1868]) = STACK[0x1718];
  LODWORD(STACK[0x15F0]) = STACK[0x1800];
  LODWORD(STACK[0x17C0]) = v4;
  LODWORD(STACK[0x1858]) = STACK[0x1500];
  LODWORD(STACK[0x1848]) = STACK[0x1860];
  LODWORD(STACK[0x1748]) = STACK[0x11A4];
  LODWORD(STACK[0x1850]) = STACK[0x1198];
  LODWORD(STACK[0x1644]) = STACK[0x1668];
  LODWORD(STACK[0x15E8]) = STACK[0xEA8];
  return ((uint64_t (*)(void))(v39 - 8))();
}

uint64_t sub_1002EABC8(int a1, uint64_t a2, int a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t (*v25)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD);

  LODWORD(STACK[0x13A8]) = v9;
  LODWORD(STACK[0x13CC]) = a8;
  v14 = STACK[0x1270];
  v15 = (LODWORD(STACK[0x1270]) + 11377) | 0x1156;
  LODWORD(STACK[0x15E0]) = v15;
  v16 = LODWORD(STACK[0x1434]) ^ v15 ^ 0x8D2D4A94;
  v17 = LODWORD(STACK[0x17CC])
      - (((v11 ^ 0x86E2F5B1) + 1763204708) ^ ((v11 ^ 0xFB4F3E0C) + 347444703) ^ ((v11 ^ 0xE0850BF7) + 260022310))
      - 1868966521;
  v18 = (v17 ^ 0xE03CD69A) & (2 * (v17 & 0xE2389612)) ^ v17 & 0xE2389612;
  v19 = ((2 * (v17 ^ 0x642CF2BA)) ^ 0xC28C950) & (v17 ^ 0x642CF2BA) ^ (2 * (v17 ^ 0x642CF2BA)) & 0x861464A8;
  v20 = (v19 ^ 0x2104420) & (4 * v18) ^ v18;
  v21 = ((4 * (v19 ^ 0x821424A8)) ^ 0x185192A0) & (v19 ^ 0x821424A8) ^ (4 * (v19 ^ 0x821424A8)) & 0x861464A8;
  v22 = (v21 ^ 0x1000A8) & (16 * v20) ^ v20;
  v23 = ((16 * (v21 ^ 0x86046408)) ^ 0x61464A80) & (v21 ^ 0x86046408) ^ (16 * (v21 ^ 0x86046408)) & 0x861464A0;
  v24 = v22 ^ 0x861464A8 ^ (v23 ^ 0x44028) & (v22 << 8);
  LODWORD(STACK[0x13C0]) = LODWORD(STACK[0x16C0]) ^ 0x749EFD4F;
  LODWORD(STACK[0x1570]) = a5 ^ 0x194A9467;
  LODWORD(STACK[0x1578]) = a6 ^ 0x8D2D9467;
  LODWORD(STACK[0x13B4]) = v8 ^ 0x8D2D194A;
  LODWORD(STACK[0x1430]) = v10 ^ 0x194A9467;
  LODWORD(STACK[0x1678]) = v13 ^ 0x75BCC622;
  LODWORD(STACK[0x1364]) = v12 ^ 0x825E8F8A;
  LODWORD(STACK[0x13D0]) = LODWORD(STACK[0x17E0]) ^ 0xC4372147;
  LODWORD(STACK[0x1770]) = v17 ^ (2
                                * ((v24 << 16) & 0x6140000 ^ v24 ^ ((v24 << 16) ^ 0x64A80000) & (((v23 ^ 0x86102428) << 8) & 0x6140000 ^ 0x2100000 ^ (((v23 ^ 0x86102428) << 8) ^ 0x14640000) & (v23 ^ 0x86102428)))) ^ 0x6B3DCB25;
  v25 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(STACK[0x18C0] + 8 * v14);
  LODWORD(STACK[0x1584]) = STACK[0x1410];
  LODWORD(STACK[0x1868]) = STACK[0x1400];
  LODWORD(STACK[0x1490]) = STACK[0x16D8];
  LODWORD(STACK[0x17CC]) = STACK[0x14E4];
  LODWORD(STACK[0x156C]) = STACK[0x13F0];
  LODWORD(STACK[0x1660]) = STACK[0x14E8];
  LODWORD(STACK[0x16D8]) = STACK[0x13D8];
  LODWORD(STACK[0x15C8]) = a4;
  LODWORD(STACK[0x17E0]) = STACK[0x16E0];
  LODWORD(STACK[0x16E0]) = STACK[0x13E8];
  LODWORD(STACK[0x15E4]) = a1;
  LODWORD(STACK[0x1598]) = STACK[0x1418];
  LODWORD(STACK[0x1700]) = STACK[0x1818];
  LODWORD(STACK[0x1664]) = STACK[0x13E0];
  LODWORD(STACK[0x16C0]) = STACK[0x1428];
  LODWORD(STACK[0x1590]) = STACK[0x13F8];
  LODWORD(STACK[0x1544]) = STACK[0x15CC];
  LODWORD(STACK[0x159C]) = STACK[0x16B8];
  LODWORD(STACK[0x1538]) = STACK[0x1548];
  LODWORD(STACK[0x161C]) = a3;
  return v25(1882687108, 912605784, LODWORD(STACK[0xE38]), 2056706074, v16, 3552931308, LODWORD(STACK[0x17D8]), LODWORD(STACK[0xE30]));
}

uint64_t sub_1002EAF88(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  __int16 v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  unsigned int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  unint64_t v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unint64_t v168;
  int v169;
  int v170;
  unint64_t v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  unint64_t v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  uint64_t v231;
  unint64_t v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  uint64_t v243;
  int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  int v250;
  int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  int v255;
  uint64_t v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  unint64_t v261;
  unint64_t v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  unint64_t v267;
  int v268;
  int v269;
  unsigned int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  uint64_t v296;
  unint64_t v297;
  unint64_t v298;
  unint64_t v299;
  unint64_t v300;
  unint64_t v301;
  uint64_t v302;
  unint64_t v303;
  unint64_t v304;
  unint64_t v305;
  unint64_t v306;
  uint64_t v307;
  unint64_t v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  unint64_t v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  int v331;
  unsigned int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  int v360;
  int v361;
  unint64_t v362;
  unsigned int v363;
  int v364;
  unint64_t v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  int v386;
  int v387;
  int v388;
  unsigned int v389;
  unsigned int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unint64_t v406;
  unint64_t v407;
  unint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  unint64_t v414;
  uint64_t v415;
  uint64_t v416;
  unint64_t v417;
  unsigned int v418;
  unsigned int v419;
  uint64_t (*v420)(void);

  LODWORD(STACK[0x1588]) = v12;
  LODWORD(STACK[0x1840]) = LODWORD(STACK[0x116C]) ^ LODWORD(STACK[0x10A4]);
  v13 = (v9 & 0x2CAC3 ^ 0x8880) - ((2 * (v9 & 0x2CAC3 ^ 0x8880)) & 0x18582) - 959068207;
  LODWORD(STACK[0x1898]) = (373 * HIBYTE(v8) + 98472)
                         % ((-98473 - a2) & 0x8BB2CAC3 ^ 0xFF006035 ^ ((v13 & 0x409EEE87 ^ 0x262A26)
                                                                     + (v13 ^ 0x73D9C5D1)
                                                                     - ((v13 ^ 0x73D9C5D1) & 0x811EEE87)));
  LODWORD(STACK[0x1850]) = v11;
  v14 = (v11 - 1111) | 0x11C0u;
  v15 = STACK[0x1778];
  v16 = (HIBYTE(LODWORD(STACK[0x1778])) ^ 0x8D) + 711581972;
  STACK[0x1760] = v14;
  v17 = ((v14 - 665447902) ^ v16) & ((v16 & 0x3F4) << (v11 - 86)) ^ v16 & 0x3F4;
  v18 = ((2 * (v16 ^ 0xD8566ECA)) ^ 0x1200827C) & (v16 ^ 0xD8566ECA) ^ (2 * (v16 ^ 0xD8566ECA)) & 0x440113E;
  v19 = (v18 ^ 0x4400032) & (4 * v17) ^ v17;
  v20 = ((4 * (v18 ^ 0x4401102)) ^ 0x3701C4F8) & (v18 ^ 0x4401102) ^ (4 * (v18 ^ 0x4401102)) & 0xDC0713C;
  v21 = (v20 ^ 0x5004026) & (16 * v19) ^ v19;
  v22 = ((16 * (v20 ^ 0x8C03106)) ^ 0xDC0713E0) & (v20 ^ 0x8C03106) ^ (16 * (v20 ^ 0x8C03106)) & 0xDC07130;
  v23 = v21 ^ 0xDC0713E ^ (v22 ^ 0xC00111E) & (v21 << 8);
  v24 = v16 ^ (2
             * ((v23 << 16) & 0xDC00000 ^ v23 ^ ((v23 << 16) ^ 0x713E0000) & (((v22 ^ 0x1C0601E) << 8) & 0xDC00000 ^ 0xD800000 ^ (((v22 ^ 0x1C0601E) << 8) ^ 0x40710000) & (v22 ^ 0x1C0601E))));
  v25 = 373 * (((v24 ^ 0xBD9349E6) + 56090615) ^ ((v24 ^ 0x16CBF80E) - 1475383777) ^ ((v24 ^ 0x674E4C60) - 645211535))
      - 960826370;
  v26 = (v25 ^ 0xEE8F57D4) & (2 * (v25 & 0xECAE4615)) ^ v25 & 0xECAE4615;
  v27 = ((2 * (v25 ^ 0xF69B53F4)) ^ 0x346A2BC2) & (v25 ^ 0xF69B53F4) ^ (2 * (v25 ^ 0xF69B53F4)) & 0x1A3515E0;
  v28 = (v27 ^ 0x182404C1) & (4 * v26) ^ v26;
  v29 = ((4 * (v27 ^ 0xA151421)) ^ 0x68D45784) & (v27 ^ 0xA151421) ^ (4 * (v27 ^ 0xA151421)) & 0x1A3515E0;
  v30 = (v29 ^ 0x8141580) & (16 * v28) ^ v28;
  v31 = ((16 * (v29 ^ 0x12210061)) ^ 0xA3515E10) & (v29 ^ 0x12210061) ^ (16 * (v29 ^ 0x12210061)) & 0x1A3515E0;
  v32 = v30 ^ 0x1A3515E1 ^ (v31 ^ 0x2111400) & (v30 << 8);
  v33 = v25 ^ (2
             * ((v32 << 16) & 0x1A350000 ^ v32 ^ ((v32 << 16) ^ 0x15E10000) & (((v31 ^ 0x182401E1) << 8) & 0x1A350000 ^ 0xA200000 ^ (((v31 ^ 0x182401E1) << 8) ^ 0x35150000) & (v31 ^ 0x182401E1)))) ^ 0x75ABF9B0;
  v34 = 0x3EE4F99CBEA615
      * (((v33 ^ 0x5E372E4E9EE5F086) - 0x5E372E4E9EE5F086) ^ ((v33 ^ 0xB73EA891D51A4664) + 0x48C1576E2AE5B99CLL) ^ ((v33 ^ 0xE90986DFC6D22285) + 0x16F67920392DDD7BLL))
      - 0x4798F5B7D9C618D7;
  v35 = (v34 ^ 0x7C7CE3FAC52BEF23) & (2 * (v34 & 0x787CF3C0E5300F4ALL)) ^ v34 & 0x787CF3C0E5300F4ALL;
  v36 = ((2 * (v34 ^ 0x5CB4C17B4D6BE737)) ^ 0x4990657750B7D0FALL) & (v34 ^ 0x5CB4C17B4D6BE737) ^ (2 * (v34 ^ 0x5CB4C17B4D6BE737)) & 0x24C832BBA85BE87CLL;
  v37 = (v36 ^ 0x80000300004078) & (4 * v35) ^ v35;
  v38 = ((4 * (v36 ^ 0x24481288A8482805)) ^ 0x9320CAEEA16FA1F4) & (v36 ^ 0x24481288A8482805) ^ (4 * (v36 ^ 0x24481288A8482805)) & 0x24C832BBA85BE87CLL;
  v39 = (v38 ^ 0x2AAA04BA060) & (16 * v37) ^ v37;
  v40 = ((16 * (v38 ^ 0x24C8301108104809)) ^ 0x4C832BBA85BE87D0) & (v38 ^ 0x24C8301108104809) ^ (16 * (v38 ^ 0x24C8301108104809)) & 0x24C832BBA85BE870;
  v41 = (v40 ^ 0x48022BA801A8000) & (v39 << 8) ^ v39;
  v42 = (((v40 ^ 0x204810012841682DLL) << 8) ^ 0xC832BBA85BE87D00) & (v40 ^ 0x204810012841682DLL) ^ ((v40 ^ 0x204810012841682DLL) << 8) & 0x24C832BBA85BE800;
  v43 = v41 ^ 0x24C832BBA85BE87DLL ^ (v42 ^ 0x32A808480000) & (v41 << 16);
  v44 = v34 ^ (2
             * ((v43 << 32) & 0x24C832BB00000000 ^ v43 ^ ((v43 << 32) ^ 0x285BE87D00000000) & (((v42 ^ 0x24C80013A013807DLL) << 16) & 0x24C832BB00000000 ^ 0x44012A000000000 ^ (((v42 ^ 0x24C80013A013807DLL) << 16) ^ 0x32BBA85B00000000) & (v42 ^ 0x24C80013A013807DLL))));
  v45 = ((v44 ^ 0x5665858F0DB95F3DLL) - 0x4F4563B7BA0DCAA8) ^ ((v44 ^ 0x41B080C64404699ELL) - 0x589066FEF3B0FC0BLL);
  LODWORD(v44) = __CFADD__(1042 * (v45 ^ ((v44 ^ 0x66A9D38CFC3AE913) - 0x7F8935B44B8E7C86)), 0xC73F65D2F4C3CA9ALL)
               + (((v45 ^ ((v44 ^ 0x66A9D38CFC3AE913uLL) - 0x7F8935B44B8E7C86)) * (unsigned __int128)0x412uLL) >> 64)
               + 1042
               * ((__CFADD__(v44 ^ 0x5665858F0DB95F3DLL, 0xB0BA9C4845F23558) - 1) ^ (__CFADD__(v44 ^ 0x41B080C64404699ELL, 0xA76F99010C4F03F5)- 1) ^ (__CFADD__(v44 ^ 0x66A9D38CFC3AE913, 0x8076CA4BB471837ALL)- 1))+ 473705904;
  LODWORD(v45) = (v44 ^ 0xEB83C3FA) & (2 * (v44 & 0xE3C3D3F8)) ^ v44 & 0xE3C3D3F8;
  LODWORD(v42) = ((2 * (v44 ^ 0xAD81C22A)) ^ 0x9C8423A4) & (v44 ^ 0xAD81C22A) ^ (2 * (v44 ^ 0xAD81C22A)) & 0x4E4211D2;
  LODWORD(v45) = (v42 ^ 0xC000180) & (4 * v45) ^ v45;
  LODWORD(v42) = ((4 * (v42 ^ 0x42421052)) ^ 0x39084748) & (v42 ^ 0x42421052) ^ (4 * (v42 ^ 0x42421052)) & 0x4E4211D0;
  LODWORD(v45) = (v42 ^ 0x8000152) & (16 * v45) ^ v45;
  LODWORD(v42) = ((16 * (v42 ^ 0x46421092)) ^ 0xE4211D20) & (v42 ^ 0x46421092) ^ (16 * (v42 ^ 0x46421092)) & 0x4E4211D0;
  LODWORD(v45) = v45 ^ 0x4E4211D2 ^ (v42 ^ 0x440011D2) & ((_DWORD)v45 << 8);
  LODWORD(STACK[0x1828]) = v44 ^ (2
                                * (((_DWORD)v45 << 16) & 0x4E420000 ^ v45 ^ (((_DWORD)v45 << 16) ^ 0x11D20000) & (((v42 ^ 0xA4200D2) << 8) & 0x4E420000 ^ 0xC420000 ^ (((v42 ^ 0xA4200D2) << 8) ^ 0x42110000) & (v42 ^ 0xA4200D2))));
  v46 = STACK[0x1508];
  if ((STACK[0x1670] & 2) != 0)
    v46 = STACK[0x1548];
  LODWORD(STACK[0x16D8]) = v46;
  v47 = STACK[0x1600];
  v48 = STACK[0xE84];
  if ((STACK[0x1600] & 1) == 0)
    v48 = STACK[0x1358];
  v49 = STACK[0x1360];
  if ((v47 & 1) != 0)
    v49 = STACK[0x17E0];
  if ((v47 & 2) != 0)
    v50 = v49;
  else
    v50 = v48;
  LODWORD(STACK[0x1718]) = v50;
  if ((v47 & 2) != 0)
    v51 = v48;
  else
    v51 = v49;
  LODWORD(STACK[0x13CC]) = v51;
  v52 = STACK[0x16E0];
  if ((STACK[0x13B8] & 2) != 0)
    v52 = STACK[0xE90];
  LODWORD(STACK[0x14C4]) = v52;
  v53 = 373 * BYTE1(v8) + 98472 - 1042 * ((4121850 * (unint64_t)(373 * BYTE1(v8) + 98472)) >> 32);
  v54 = v53 - 1926392729 - ((2 * v53) & 0x8CE);
  v55 = 373 * BYTE2(a8) + 1842596208;
  v56 = ((2 * (v55 ^ 0x7BB0B001)) ^ 0x12220E72) & (v55 ^ 0x7BB0B001) ^ (2 * (v55 ^ 0x7BB0B001)) & 0x288D0738;
  v57 = ((4 * (v56 ^ 0x28850109)) ^ 0x26741CE4) & (v56 ^ 0x28850109) ^ (4 * (v56 ^ 0x28850109)) & 0x699D0738;
  v58 = a8;
  v59 = ((16 * (v57 ^ 0x49890319)) ^ 0x19D07390) & (v57 ^ 0x49890319) ^ (16 * (v57 ^ 0x49890319)) & 0xE99D0730;
  v60 = (v55 ^ 0x7BB9B631) & (2 * (v55 & 0x5B738)) ^ v55 & 0x5B738;
  v61 = (v57 ^ 0xA0140439) & (16 * ((v56 ^ 0x28980429) & (4 * v60) ^ v60)) ^ (v56 ^ 0x28980429) & (4 * v60) ^ v60;
  v62 = v61 ^ 0xE99D0739 ^ (v59 ^ 0x89900300) & (v61 << 8);
  v63 = v55 ^ (2
             * ((v62 << 16) & 0x699D0000 ^ v62 ^ ((v62 << 16) ^ 0x7390000) & (((v59 ^ 0x600D0429) << 8) & 0xE99D0000 ^ 0x60980000 ^ (((v59 ^ 0x600D0429) << 8) ^ 0x1D070000) & (v59 ^ 0x600D0429)))) ^ 0xCE082D2D;
  v64 = 0x3EE4F99CBEA615
      * (((v63 ^ 0x17618FDA42B895C7) - 0x17618FDA42B895C7) ^ ((v63 ^ 0x6E145ECEB7CA2A8ELL) - 0x6E145ECEB7CA2A8ELL) ^ ((v63 ^ 0x7975D114785F2B2ELL) - 0x7975D114785F2B2ELL))
      - 0x4E38D32A60AF97FDLL;
  v65 = ((2 * (v64 ^ 0x2B37C0AC4A4802AELL)) ^ 0xA856233E4CA319BCLL) & (v64 ^ 0x2B37C0AC4A4802AELL) ^ (2 * (v64 ^ 0x2B37C0AC4A4802AELL)) & 0x542B119F26518CDELL;
  v66 = ((4 * (v65 ^ 0x5429108122508442)) ^ 0x50AC467C99463378) & (v65 ^ 0x5429108122508442) ^ (4 * (v65 ^ 0x5429108122508442)) & 0x542B119F26518CDCLL;
  v67 = ((16 * (v66 ^ 0x403118326118C86)) ^ 0x42B119F26518CDE0) & (v66 ^ 0x403118326118C86) ^ (16 * (v66 ^ 0x403118326118C86)) & 0x542B119F26518CD0;
  v68 = (((v67 ^ 0x140A000D0241001ELL) << 8) ^ 0x2B119F26518CDE00) & (v67 ^ 0x140A000D0241001ELL) ^ ((v67 ^ 0x140A000D0241001ELL) << 8) & 0x542B119F26518C00;
  v69 = (v64 ^ 0x7F1EC0AA4A590E6ELL) & (2 * (v64 & 0x7F1CD1336C198E70)) ^ v64 & 0x7F1CD1336C198E70;
  v70 = (v66 ^ 0x5028001C00400040) & (16 * ((v65 ^ 0x2011E00000880) & (4 * v69) ^ v69)) ^ (v65 ^ 0x2011E00000880) & (4 * v69) ^ v69;
  v71 = (v67 ^ 0x4021119224108C00) & (v70 << 8) ^ v70 ^ 0x542B119F26518CDELL ^ (v68 ^ 0x1110600000000) & (((v67 ^ 0x4021119224108C00) & (v70 << 8) ^ v70) << 16);
  v72 = v64 ^ (2
             * ((v71 << 32) & 0x542B119F00000000 ^ v71 ^ ((v71 << 32) ^ 0x26518CDE00000000) & (((v68 ^ 0x542A0099265100DELL) << 16) & 0x542B119F00000000 ^ 0x4420118E00000000 ^ (((v68 ^ 0x542A0099265100DELL) << 16) ^ 0x119F265100000000) & (v68 ^ 0x542A0099265100DELL))));
  v73 = ((v72 ^ 0xD6135B2C0AB16A1ELL) - 0x267EF575E4448DEBLL) ^ ((v72 ^ 0x237D710C588A9B18) + 0x2CEF20AA49808313);
  v74 = __CFADD__(1042 * (v73 ^ ((v72 ^ 0x2A26D911728166CALL) + 0x25B488B7638B7EC1)), 0xE6163497BF56C802)
      + (((v73 ^ ((v72 ^ 0x2A26D911728166CALL) + 0x25B488B7638B7EC1)) * (unsigned __int128)0x412uLL) >> 64)
      + 1042
      * ((__CFADD__(v72 ^ 0xD6135B2C0AB16A1ELL, 0xD9810A8A1BBB7215) - 1) ^ (__CFADD__(v72 ^ 0x237D710C588A9B18, 0x2CEF20AA49808313)- 1) ^ (__CFADD__(v72 ^ 0x2A26D911728166CALL, 0x25B488B7638B7EC1)- 1))+ 1118465548;
  LODWORD(v72) = ((2 * (v74 ^ 0x6B988ACD)) ^ 0xAD9A30FC) & (v74 ^ 0x6B988ACD) ^ (2 * (v74 ^ 0x6B988ACD)) & 0xD6CD187E;
  LODWORD(v73) = ((4 * (v72 ^ 0x52450802)) ^ 0x5B3461F8) & (v72 ^ 0x52450802) ^ (4 * (v72 ^ 0x52450802)) & 0xD6CD187C;
  LODWORD(v67) = ((16 * (v73 ^ 0x84C91806)) ^ 0x6CD187E0) & (v73 ^ 0x84C91806) ^ (16 * (v73 ^ 0x84C91806)) & 0xD6CD1870;
  v75 = (v74 ^ 0x39118AAB) & (2 * (v74 & 0xBD5592B3)) ^ v74 & 0xBD5592B3;
  LODWORD(v72) = (v73 ^ 0x52040070) & (16 * ((v72 ^ 0x8489105E) & (4 * v75) ^ v75)) ^ (v72 ^ 0x8489105E) & (4 * v75) ^ v75;
  LODWORD(v72) = v72 ^ 0xD6CD187E ^ (v67 ^ 0x44C10000) & ((_DWORD)v72 << 8);
  v76 = ((_DWORD)v72 << 16) & 0x56CD0000 ^ v72 ^ (((_DWORD)v72 << 16) ^ 0x187E0000) & (((v67 ^ 0x920C181E) << 8) & 0x56CD0000 ^ 0x12C50000 ^ (((v67 ^ 0x920C181E) << 8) ^ 0x4D180000) & (v67 ^ 0x920C181E));
  LODWORD(v72) = 373 * v58 + 1230448980;
  LODWORD(v73) = ((2 * (v72 ^ 0xAA583220)) ^ 0x2104CAE8) & (v72 ^ 0xAA583220) ^ (2 * (v72 ^ 0xAA583220)) & 0x4126574;
  LODWORD(v67) = ((4 * (v73 ^ 0x4122514)) ^ 0x73C995D0) & (v73 ^ 0x4122514) ^ (4 * (v73 ^ 0x4122514)) & 0x1CF26574;
  LODWORD(v68) = ((16 * (v67 ^ 0xC326024)) ^ 0xCF265740) & (v67 ^ 0xC326024) ^ (16 * (v67 ^ 0xC326024)) & 0x1CF26570;
  LODWORD(v69) = (v72 ^ 0xAA481600) & (2 * (v72 & 0xA5754)) ^ v72 & 0xA5754;
  LODWORD(v73) = (v67 ^ 0x10C00544) & (16 * ((v73 ^ 0x4604064) & (4 * v69) ^ v69)) ^ (v73 ^ 0x4604064) & (4 * v69) ^ v69;
  LODWORD(v73) = v73 ^ 0x1CF26574 ^ (v68 ^ 0xC224500) & ((_DWORD)v73 << 8);
  v77 = v72 ^ (2
                           * (((_DWORD)v73 << 16) & 0x1CF20000 ^ v73 ^ (((_DWORD)v73 << 16) ^ 0x65740000) & (((v68 ^ 0x10D02034) << 8) & 0x1CF20000 ^ 0xC920000 ^ (((v68 ^ 0x10D02034) << 8) ^ 0x72650000) & (v68 ^ 0x10D02034)))) ^ 0xA8309DB;
  v78 = 0x3EE4F99CBEA615
      * (((v77 ^ 0x7D082397601AEEF6) - 0x7D082397601AEEF6) ^ ((v77 ^ 0x7D4340D43BF68249) - 0x7D4340D43BF68249) ^ ((v77 ^ 0x4B6343D6C1F8D8) - 0x4B6343D6C1F8D8))
      - 0x6CA415DFAAA6868FLL;
  v79 = ((2 * (v78 ^ 0x40DDEA1D584DFC0)) ^ 0x330B9A92C7294584) & (v78 ^ 0x40DDEA1D584DFC0) ^ (2
                                                                                                  * (v78 ^ 0x40DDEA1D584DFC0)) & 0x9985CD496394A2C2;
  v80 = ((4 * (v79 ^ 0x888445492094A242)) ^ 0x661735258E528B08) & (v79 ^ 0x888445492094A242) ^ (4 * (v79 ^ 0x888445492094A242)) & 0x9985CD496394A2C0;
  v81 = ((16 * (v80 ^ 0x9980C848618420C2)) ^ 0x985CD496394A2C20) & (v80 ^ 0x9980C848618420C2) ^ (16 * (v80 ^ 0x9980C848618420C2)) & 0x9985CD496394A2C0;
  v82 = (((v81 ^ 0x1810949429482C2) << 8) ^ 0x85CD496394A2C200) & (v81 ^ 0x1810949429482C2) ^ ((v81 ^ 0x1810949429482C2) << 8) & 0x9985CD496394A200;
  v83 = (v78 ^ 0x1D0DDBE0B5847DC0) & (2 * (v78 & 0x9D8813E8B6107D02)) ^ v78 & 0x9D8813E8B6107D02;
  v84 = (v80 ^ 0x5050102108200) & (16 * ((v79 ^ 0x1000880040000000) & (4 * v83) ^ v83)) ^ (v79 ^ 0x1000880040000000) & (4 * v83) ^ v83;
  v85 = (v81 ^ 0x9804C40021002000) & (v84 << 8) ^ v84 ^ 0x9985CD496394A2C2 ^ (v82 ^ 0x8185494100800000) & (((v81 ^ 0x9804C40021002000) & (v84 << 8) ^ v84) << 16);
  v86 = v78 ^ (2
             * ((v85 << 32) & 0x1985CD4900000000 ^ v85 ^ ((v85 << 32) ^ 0x6394A2C200000000) & (((v82 ^ 0x18008408631420C2) << 16) & 0x1985CD4900000000 ^ 0x10848C4900000000 ^ (((v82 ^ 0x18008408631420C2) << 16) ^ 0x4D49639400000000) & (v82 ^ 0x18008408631420C2))));
  v87 = ((v86 ^ 0xFC6332333E2D8A2BLL) - 0x1FEFAE0FBAAEA0E0) ^ ((v86 ^ 0x8EC3BBAAE8C29825) - 0x6D4F27966C41B2EELL);
  LODWORD(v86) = __CFADD__(1042 * (v87 ^ ((v86 ^ 0xDF2A0063A7D62A88) - 0x3CA69C5F23550043)), 0x94C4A3D42F5E7D6ALL)
               + (((v87 ^ ((v86 ^ 0xDF2A0063A7D62A88) - 0x3CA69C5F23550043)) * (unsigned __int128)0x412uLL) >> 64)
               + 1042
               * ((__CFADD__(v86 ^ 0xFC6332333E2D8A2BLL, 0xE01051F045515F20) - 1) ^ (__CFADD__(v86 ^ 0x8EC3BBAAE8C29825, 0x92B0D86993BE4D12)- 1) ^ (__CFADD__(v86 ^ 0xDF2A0063A7D62A88, 0xC35963A0DCAAFFBDLL)- 1))+ 1972201012;
  LODWORD(v80) = ((2 * (v86 ^ 0x2F11FC6)) ^ 0x1107099E) & (v86 ^ 0x2F11FC6) ^ (2 * (v86 ^ 0x2F11FC6)) & 0x888384CE;
  LODWORD(v68) = ((4 * (v80 ^ 0x88808441)) ^ 0x220E133C) & (v80 ^ 0x88808441) ^ (4 * (v80 ^ 0x88808441)) & 0x888384CC;
  LODWORD(v81) = ((16 * (v68 ^ 0x888184C3)) ^ 0x88384CF0) & (v68 ^ 0x888184C3) ^ (16 * (v68 ^ 0x888184C3)) & 0x888384C0;
  LODWORD(v87) = ((2 * (v86 & 0x8A729B09)) & 0x810402 | v86 & 0x8A729B09) ^ (2 * (v86 & 0x8A729B09)) & (v86 ^ 0x2F11FC6);
  LODWORD(v87) = (v68 ^ 0x20003) & (16 * ((v80 ^ 0x8002000D) & (4 * v87) ^ v87)) ^ (v80 ^ 0x8002000D) & (4 * v87) ^ v87;
  LODWORD(v87) = v87 ^ 0x888384CF ^ (v81 ^ 0x8800040F) & ((_DWORD)v87 << 8);
  v88 = v86 ^ (2
             * (((_DWORD)v87 << 16) & 0x8830000 ^ v87 ^ (((_DWORD)v87 << 16) ^ 0x4CF0000) & (((v81 ^ 0x83800F) << 8) & 0x88830000 ^ 0x8030000 ^ (((v81 ^ 0x83800F) << 8) ^ 0x3840000) & (v81 ^ 0x83800F))));
  LODWORD(v86) = ((71 * (BYTE2(v15) ^ 0x2D)) ^ 0xB1) + 638341621;
  LODWORD(v80) = (2 * (v86 ^ 0xB5E16647)) & 0x2410602C ^ 0x24152025 ^ ((2 * (v86 ^ 0xB5E16647)) ^ 0x9028005A) & (v86 ^ 0xB5E16647);
  LODWORD(v81) = (4 * v80) & 0x6C15602C ^ 0x4C006009 ^ ((4 * v80) ^ 0xB05580B4) & v80;
  LODWORD(v82) = (16 * v81) & 0x6C156020 ^ 0x2C01602D ^ ((16 * v81) ^ 0xC15602D0) & v81;
  LODWORD(v87) = (v86 & 0x26A | (4 * (((unsigned __int16)(v86 & 0x26A) >> 1) & 1)) | 0x4000) ^ ((2 * (v86 & 0x26A)) | 0x80000) & (v86 ^ 0xB5E16647);
  LODWORD(v87) = (4 * v87) & 0x6C156028 ^ v87 ^ ((4 * v87) ^ 0x110000) & v80;
  LODWORD(v87) = (16 * v87) & 0x6C156020 ^ v87 ^ ((16 * v87) ^ 0x1540000) & v81;
  LODWORD(v87) = v87 ^ ((_DWORD)v87 << 8) & 0x6C156000 ^ (((_DWORD)v87 << 8) ^ 0x1400000) & v82 ^ 0x6C14202D;
  v89 = v86 ^ (2
             * (((_DWORD)v87 << 16) & 0x6C150000 ^ v87 ^ (((_DWORD)v87 << 16) ^ 0x602D0000) & (((_DWORD)v82 << 8) & 0x6C150000 ^ 0x68150000 ^ (((_DWORD)v82 << 8) ^ 0x15600000) & v82)));
  v90 = STACK[0xE8C];
  if ((STACK[0x1658] & 2) == 0)
    v90 = STACK[0xE88];
  LODWORD(STACK[0x1838]) = v90;
  v91 = *((_DWORD *)&STACK[0x18D0] + (v74 ^ (2 * v76) ^ 0x3057A24Fu));
  v92 = STACK[0x18A0];
  HIDWORD(v94) = v91 ^ 0x67;
  LODWORD(v94) = v91 ^ LODWORD(STACK[0x18A0]);
  v93 = v94 >> 8;
  v95 = *((_DWORD *)&STACK[0x18D0] + (a1 ^ 0x8D2D9467));
  HIDWORD(v94) = v95 ^ 0x9467;
  LODWORD(v94) = v95 ^ 0x8D2D0000;
  v96 = (v94 >> 16) ^ v93;
  v97 = (BYTE1(v10) ^ 0x94) + 1342141124;
  v98 = (v97 & 0x244 | (8 * (((unsigned __int16)(v97 & 0x244) >> 2) & 1))) ^ (v97 ^ 0x6769FE0B) & (2 * (v97 & 0x244));
  v99 = (2 * (v97 ^ 0x6769FE0B)) & 0x5129104E ^ 0x51291041 ^ ((2 * (v97 ^ 0x6769FE0B)) ^ 0x2892809E) & (v97 ^ 0x6769FE0B);
  v100 = v98 ^ 0x5521500C ^ v99 & (4 * v98);
  v101 = (4 * v99) & 0xD769704C ^ 0x82483043 ^ ((4 * v99) ^ 0x5DA5C13C) & v99;
  v102 = (16 * v100) & 0xD7697040 ^ v100 ^ ((16 * v100) ^ 0x521400C0) & v101;
  v103 = (16 * v101) & 0xD7697040 ^ 0x8168700F ^ ((16 * v101) ^ 0x769704F0) & v101;
  v104 = v102 ^ (v102 << 8) & 0xD7697000 ^ ((v102 << 8) ^ 0x21404C00) & v103;
  v105 = v97 ^ (2
              * (((v104 ^ 0xD1087003) << 16) & 0x57690000 ^ v104 ^ 0xD1087003 ^ (((v104 ^ 0xD1087003) << 16) ^ 0x704F0000) & ((v103 << 8) & 0xD7690000 ^ 0x16090000 ^ ((v103 << 8) ^ 0x69700000) & v103)));
  v106 = 373 * a4 + 1527973885;
  v107 = (v106 ^ 0x3F9C7C8A) & (2 * (v106 & 0x678AB)) ^ v106 & 0x678AB;
  v108 = ((2 * (v106 ^ 0x3F945DCE)) ^ 0x24844ACA) & (v106 ^ 0x3F945DCE) ^ (2 * (v106 ^ 0x3F945DCE)) & 0x9B7A2564;
  v109 = (v108 ^ 0x89300041) & (4 * v107) ^ v107;
  v110 = ((4 * (v108 ^ 0x890A2525)) ^ 0x6DE89594) & (v108 ^ 0x890A2525) ^ (4 * (v108 ^ 0x890A2525)) & 0x9B7A2564;
  v111 = (v110 ^ 0x9680501) & (16 * v109) ^ v109;
  v112 = ((16 * (v110 ^ 0x92122061)) ^ 0xB7A25650) & (v110 ^ 0x92122061) ^ (16 * (v110 ^ 0x92122061)) & 0x9B7A2560;
  v113 = v111 ^ 0x9B7A2565 ^ (v112 ^ 0x93220425) & (v111 << 8);
  v114 = (v113 << 16) & 0x1B7A0000 ^ v113 ^ ((v113 << 16) ^ 0x25650000) & (((v112 ^ 0x8582125) << 8) & 0x1B7A0000 ^ 0x15A0000 ^ (((v112 ^ 0x8582125) << 8) ^ 0x7A250000) & (v112 ^ 0x8582125));
  LODWORD(STACK[0x17C0]) = 373 * BYTE2(v8)
                         + 98472
                         - 1042 * ((4121850 * (unint64_t)(373 * BYTE2(v8) + 98472)) >> 32);
  LODWORD(STACK[0x17D8]) = v96 - 1926392729 - ((2 * v96) & 0x1A5B28CE);
  v115 = 373 * (((*(_BYTE *)(STACK[0x18B8] + (v89 ^ 0xC1D4C630)) - 84) ^ 0x29) - 107) + 98472;
  v116 = v115 - 1042 * ((4121850 * (unint64_t)v115) >> 32);
  LODWORD(STACK[0x17BC]) = v116 - 1926392729 - ((2 * v116) & 0x8CE);
  v117 = 373
       * (((v105 ^ 0x8FA6FFF0) + 1127545523) ^ ((v105 ^ 0x81D6C41D) + 1296351584) ^ ((v105 ^ 0xB0305537) + 2091012214))
       - 1284949485;
  v118 = v117 % 0x412 - 1926392729 - ((2 * (v117 % 0x412)) & 0x8CE);
  v119 = (v10 & 0x9E ^ 0x9CFD1B9E) - (v10 & 0x9E) + (v10 ^ 0x20);
  v120 = (((v119 & 0x84540695 ^ 0x202E405) + (v119 ^ 0xDC5D129A) - ((v119 ^ 0xDC5D129A) & 0x40A00695)) ^ 0x8656EFD6)
       + 1016649252;
  v121 = (v120 ^ 0xD34702D3) & (2 * (v120 & 0xC3672AE4)) ^ v120 & 0xC3672AE4;
  v122 = ((2 * (v120 ^ 0x574906DB)) ^ 0x285C587E) & (v120 ^ 0x574906DB) ^ (2 * (v120 ^ 0x574906DB)) & 0x942E2C3E;
  v123 = (v122 ^ 0xC0830) & (4 * v121) ^ v121;
  v124 = ((4 * (v122 ^ 0x94222401)) ^ 0x50B8B0FC) & (v122 ^ 0x94222401) ^ (4 * (v122 ^ 0x94222401)) & 0x942E2C3C;
  v125 = (v124 ^ 0x10282023) & (16 * v123) ^ v123;
  v126 = ((16 * (v124 ^ 0x84060C03)) ^ 0x42E2C3F0) & (v124 ^ 0x84060C03) ^ (16 * (v124 ^ 0x84060C03)) & 0x942E2C30;
  v127 = v125 ^ 0x942E2C3F ^ (v126 ^ 0x22000F) & (v125 << 8);
  v128 = v120 ^ (2
               * ((v127 << 16) & 0x142E0000 ^ v127 ^ ((v127 << 16) ^ 0x2C3F0000) & (((v126 ^ 0x940C2C0F) << 8) & 0x142E0000 ^ 0x10020000 ^ (((v126 ^ 0x940C2C0F) << 8) ^ 0x2E2C0000) & (v126 ^ 0x940C2C0F))));
  v129 = *((_DWORD *)&STACK[0x18D0]
         + (373
          * (((v128 ^ 0xB3174945) + 581062728) ^ ((v128 ^ 0xBD096543) + 750550082) ^ ((v128 ^ 0xED795E9C) + 2093762463))
          - 1284949485)
         % 0x412);
  HIDWORD(v94) = v129 ^ 0x2D9467;
  LODWORD(v94) = v129 ^ 0x8D000000;
  LODWORD(STACK[0x1798]) = v94 >> 24;
  v130 = ((LODWORD(STACK[0x18A8]) ^ 0xF2411FB7) + 230613065) ^ ((LODWORD(STACK[0x18A8]) ^ 0x374FF86F) - 927987823) ^ ((LODWORD(STACK[0x18A8]) ^ 0x482373BF) - 1210282943);
  v131 = STACK[0x1598];
  v132 = STACK[0x1598] & 0x1D ^ 5;
  v133 = STACK[0x15D0];
  LODWORD(STACK[0x1708]) = v132;
  LOBYTE(v96) = STACK[0x1470];
  LOBYTE(v10) = STACK[0x14D8];
  v134 = ((v133 ^ 0x8D2D9467) << v96 << v10)
       + ((v133 ^ 0x8D2D9467) >> v132)
       - 1926392729
       - ((2 * (((v133 ^ 0x8D2D9467) << v96 << v10) + ((v133 ^ 0x8D2D9467) >> v132))) & 0x1A5B28CE);
  v135 = STACK[0x1890];
  v136 = (LODWORD(STACK[0x1890]) ^ 0x8D2D9467) << LODWORD(STACK[0xE94]) << LODWORD(STACK[0xE98]);
  v137 = (v106 ^ (2 * v114) ^ 0x90DA3261) % 0x412;
  LODWORD(STACK[0x1664]) = HIBYTE(v58);
  v138 = *((_DWORD *)&STACK[0x18D0]
         + (373 * HIBYTE(v58)
                        + 98472
                        - 1042 * ((4121850 * (unint64_t)(373 * HIBYTE(v58) + 98472)) >> 32)));
  HIDWORD(v94) = v138 ^ 0x9467;
  LODWORD(v94) = v138 ^ 0x8D2D0000;
  v139 = v94 >> 16;
  v140 = *((_DWORD *)&STACK[0x18D0]
         + (373 * (BYTE2(v10) ^ 0x2D)
                        + 98472
                        - 1042 * ((4121850 * (unint64_t)(373 * (BYTE2(v10) ^ 0x2Du) + 98472)) >> 32)));
  v141 = v92;
  HIDWORD(v94) = v140 ^ 0x67;
  LODWORD(v94) = v140 ^ v92;
  v142 = v94 >> 8;
  v143 = v139 - 1926392729 - ((2 * v139) & 0x1A5B28CE);
  v144 = *((_DWORD *)&STACK[0x18D0] + (v54 ^ 0x8D2D9467));
  HIDWORD(v94) = v144 ^ 0x9467;
  LODWORD(v94) = v144 ^ 0x8D2D0000;
  v145 = __ROR4__(*((_DWORD *)&STACK[0x18D0] + (v88 ^ 0x9A739297)), 24) ^ 0x2D94678D ^ v142 ^ (v94 >> 16);
  v146 = STACK[0x1584];
  v147 = v136 + ((v135 ^ 0x8D2D9467) >> LODWORD(STACK[0xEB8]) >> LODWORD(STACK[0xEB4]));
  v148 = v147 - 1926392729 - ((2 * v147) & 0x1A5B28CE);
  v149 = ((v146 ^ 0x8D2D9467) >> (v131 & 0x13 ^ 3) >> (v131 & 0xC ^ 4)) | ((v146 ^ 0x8D2D9467) << v10 << v96);
  v150 = v149 - 1926392729 - ((2 * v149) & 0x1A5B28CE);
  v151 = STACK[0x14B0];
  v152 = STACK[0xB64];
  v153 = STACK[0xC0C];
  v154 = STACK[0xC0C] & 0x9092820 ^ 0xA450AC1 ^ (LODWORD(STACK[0x14B0]) ^ 0x9020B894) & STACK[0xB64];
  v155 = STACK[0x10DC];
  LODWORD(STACK[0x10DC]) = STACK[0x10DC];
  v156 = v145 - 1926392729 - ((2 * v145) & 0x1A5B28CE);
  v157 = (((v150 & 0xE61CD58A ^ 0x86004180)
         + (v150 & 0xA610C402 ^ 0x31918C12)
         - ((v150 & 0xE61CD58A ^ 0x86004180) & 0xA610C402)) ^ 0x4A62E66F)
       + v130
       + ((((2 * (v150 & 0xE61CD58A ^ 0xA44E9408)) | 0xEBAD5094) - (v150 & 0xE61CD58A ^ 0xA44E9408) - 1977002058) ^ 0x4C778235);
  LODWORD(STACK[0x18A8]) = v157 + 7863898 - ((2 * v157 + 110416870) & 0x1A5B28CE);
  v158 = ((2 * (STACK[0x1138] & 0x94949494 ^ 0xA62195E5)) | 0x385449D4) - (STACK[0x1138] & 0x94949494 ^ 0xA62195E5);
  v159 = STACK[0x1490] & 0x12 ^ 2;
  v160 = STACK[0x1490] & 0xD ^ 5;
  v161 = STACK[0x1500];
  v162 = ((v161 ^ 0x8D2D9467) >> LODWORD(STACK[0x13D0]) >> LODWORD(STACK[0x1428])) | ((v161 ^ 0x8D2D9467) << (STACK[0x1490] & 0x12 ^ 2) << (STACK[0x1490] & 0xD ^ 5));
  v163 = v162 - 1926392729 - ((2 * v162) & 0x1A5B28CE);
  if (v131 == -1926392729)
    v134 = v133;
  v164 = STACK[0x1838];
  LODWORD(STACK[0x16F8]) = v160;
  LODWORD(STACK[0x16F0]) = v159;
  v165 = ((v164 ^ 0x8D2D9467) >> LODWORD(STACK[0xEB0])) ^ 0x8D2D9467 ^ ((v164 ^ 0x8D2D9467) << v160 << v159);
  v166 = *((_DWORD *)&STACK[0x18D0] + (v118 ^ 0x8D2D9467));
  HIDWORD(v168) = v166 ^ 0x9467;
  LODWORD(v168) = v166 ^ 0x8D2D0000;
  v167 = v168 >> 16;
  if (v131 == -1926392729)
    v165 = v164;
  v169 = *((_DWORD *)&STACK[0x18D0] + (LODWORD(STACK[0x17BC]) ^ 0x8D2D9467));
  v170 = v141;
  HIDWORD(v171) = v169 ^ 0x67;
  LODWORD(v171) = v169 ^ v141;
  v172 = (v171 >> 8) ^ v167;
  if (v131 == -1926392729)
    v150 = v146;
  v173 = v134 ^ ((((1815006893 - v154 + ((2 * v154) | 0x27A262A6)) ^ 0x85991702) << LODWORD(STACK[0xB5C]) << LODWORD(STACK[0xB60])) | (((((v152 & (v155 ^ 0x3835000C) ^ v153 & 0x21080028) & 0x15A89910 ^ 0x45A29951 | (v152 & (v155 ^ 0x3835000C) ^ v153 & 0x21080028) & 0xA81524AC) - 1) ^ 0xD1BA0D58) >> LODWORD(STACK[0xD18]) >> LODWORD(STACK[0xD1C]))) ^ v156;
  if (v131 == -1926392729)
    v174 = v161;
  else
    v174 = v163;
  LODWORD(STACK[0x1838]) = v174;
  v175 = (v173 - 1926392729 - ((2 * v173) & 0x1A5B28CE)) ^ *((_DWORD *)&STACK[0x18D0]
                                                           + (LODWORD(STACK[0x1828]) ^ 0x7FC3F05Cu));
  v176 = v175 - 1926392729 - ((2 * v175) & 0x1A5B28CE);
  v177 = (2 * v158 + 1202435628) & 0x6B6B6B6A ^ 0xFC9EDE96;
  LODWORD(STACK[0x14B0]) = v151;
  v178 = (((((v151 ^ 0x8DAD94E2) & v177 ^ 0xFFBFFEFF) + 1669784611 + ((2 * ((v151 ^ 0x8DAD94E2) & v177)) | 0x38F237BC)) ^ 0x9CB91A5A) << LODWORD(STACK[0x1058]) << LODWORD(STACK[0x1054])) ^ ((v177 & (v155 ^ 0x8DAD8462) ^ 0x801004) >> LODWORD(STACK[0xCC0]) >> LODWORD(STACK[0xCBC])) ^ v143 ^ *((_DWORD *)&STACK[0x18D0] + v137);
  v179 = (v178 - 1926392729 - ((2 * v178) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16C0]);
  v180 = __ROR4__(*((_DWORD *)&STACK[0x18D0] + LODWORD(STACK[0x17C0])), 8) ^ 0xEAA0B9F3;
  LODWORD(STACK[0x1660]) = v180;
  v181 = (v179 - 1926392729 - ((2 * v179) & 0x1A5B28CE)) ^ v180;
  v182 = v181 - 1926392729 - ((2 * v181) & 0x1A5B28CE);
  if (v131 == -1926392729)
    v183 = v135;
  else
    v183 = v148;
  v184 = (v182 ^ v183) - 1926392729 - ((2 * (v182 ^ v183)) & 0x1A5B28CE);
  v185 = STACK[0x1420];
  v186 = STACK[0x1420];
  LODWORD(STACK[0x1420]) = STACK[0x1420];
  v187 = (((((v152 & (LODWORD(STACK[0x1064]) ^ 0xB8BC0084) ^ v153 & 0x21010020) & 0xB0A12C08 ^ 0x90E02C49 | (v152 & (LODWORD(STACK[0x1064]) ^ 0xB8BC0084) ^ v153 & 0x21010020) & 0xD1C91B4)
          - 1) ^ 0x8471B8C8) << LODWORD(STACK[0xCDC]) << LODWORD(STACK[0xCD8])) | ((v153 & 0x21080128 ^ 0x941C8008 ^ v152 & (v185 ^ 0x3831150C)) >> LODWORD(STACK[0x10A0]) >> LODWORD(STACK[0x1098]));
  v188 = v150 ^ (v187 - 1926392729 - ((2 * v187) & 0x1A5B28CE));
  v189 = *((_DWORD *)&STACK[0x18D0] + LODWORD(STACK[0x1898])) ^ (v188 - 1926392729 - ((2 * v188) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17D8]) ^ LODWORD(STACK[0x1798]);
  LODWORD(STACK[0x1898]) = 221090943;
  v190 = (v189 ^ 0x8D2D9467) - 1926392729 - 2 * ((v189 ^ 0x8D2D9467) & 0xD2D947F ^ v189 & 0x18);
  v191 = STACK[0x18A8];
  v192 = v176 ^ LODWORD(STACK[0x18A8]);
  v193 = (((((2 * ((v151 ^ 0x8DAD9466) & v177 ^ 0x62280A)) & 0x6DA348BC)
          - ((v151 ^ 0x8DAD9466) & v177 ^ 0x62280A)
          + 1227774880) ^ 0x49CC73AA) << LODWORD(STACK[0xFE0]) << LODWORD(STACK[0xFD8])) ^ (((((2
                                                                                              * (v177 & (v186 ^ 0x893D1466) ^ 0x40000100)) | 0x717A1FDE)
                                                                                            - (v177 & (v186 ^ 0x893D1466) ^ 0x40000100)
                                                                                            - 951914479) ^ 0x7CAD8EEF) >> LODWORD(STACK[0xC54]) >> LODWORD(STACK[0xC50])) ^ v165;
  v194 = ((v193 ^ (v172 - 1926392729 - ((2 * v172) & 0x1A5B28CE)))
        - 1926392729
        - ((2 * (v193 ^ (v172 - 1926392729 - ((2 * v172) & 0x1A5B28CE)))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1750]);
  v195 = LODWORD(STACK[0x1730]) ^ LODWORD(STACK[0x18A8]) ^ (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE));
  v196 = ((71 * BYTE2(v192)) ^ 0xB1) + 2065424360;
  v197 = (2 * ((((71 * BYTE2(v192)) ^ 0xB1) - 8216) & 0x3877)) & 0x10CA ^ (((71 * BYTE2(v192)) ^ 0xB1)
                                                                                          - 8216) & 0x3877 ^ ((2 * ((((71 * BYTE2(v192)) ^ 0xB1) - 8216) & 0x3877)) | 0x8000) & (v196 ^ 0x92AE6CBD);
  v198 = (2 * (v196 ^ 0x92AE6CBD)) & 0x124A14CA ^ 0x124A144A ^ ((2 * (v196 ^ 0x92AE6CBD)) ^ 0x28942994) & (v196 ^ 0x92AE6CBD);
  v199 = (4 * v197) & 0x164A14C8 ^ v197 ^ ((4 * v197) ^ 0x10000) & v198;
  v200 = (4 * v198) & 0x164A14C8 ^ 0x64204C2 ^ ((4 * v198) ^ 0x59285328) & v198;
  v201 = v199 ^ (16 * v199) & 0x164A14C0 ^ ((16 * v199) ^ 0x40000) & v200;
  v202 = (16 * v200) & 0x164A14C0 ^ 0x124A104A ^ ((16 * v200) ^ 0x64A14CA0) & v200;
  v203 = ((v201 ^ 0x164A54CA) << 8) & 0x164A1400 ^ v201 ^ 0x164A54CA ^ (((v201 ^ 0x164A54CA) << 8) ^ 0x4A14CA00) & v202;
  v204 = 71 * HIBYTE(v192);
  v205 = v196 ^ (2
               * ((v203 << 16) & 0x164A0000 ^ v203 ^ ((v203 << 16) ^ 0x14CA0000) & ((v202 << 8) & 0x164A0000 ^ 0x144A0000 ^ ((v202 << 8) ^ 0x4A140000) & v202)));
  v206 = v204 + 1096031182;
  v207 = (2 * (v206 & 0x40593)) & 0x802 ^ v206 & 0x40593 ^ ((2 * (v206 & 0x40593)) | 0x3000) & (v206 ^ 0xF50D6199);
  v208 = (2 * (v206 ^ 0xF50D6199)) & 0xC0A ^ 0x1140A ^ ((2 * (v206 ^ 0xF50D6199)) ^ 0x94403814) & (v206 ^ 0xF50D6199);
  v209 = (4 * v207) & 0x4BA15C08 ^ v207 ^ ((4 * v207) ^ 0x2000) & v208;
  v210 = (4 * v208) & 0x4BA15C08 ^ 0x41200C02 ^ ((4 * v208) ^ 0x24017028) & v208;
  v211 = (16 * v209) & 0x4BA15C00 ^ v209 ^ ((16 * v209) ^ 0x8000) & v210;
  v212 = (16 * v210) & 0x4BA15C00 ^ 0x41A01C0A ^ ((16 * v210) ^ 0xBA15C0A0) & v210;
  v213 = v211 ^ 0x4BA1540A ^ (v211 << 8) & 0x4BA15C00 ^ ((v211 << 8) ^ 0x80000) & v212;
  v214 = 373 * (((*(_BYTE *)(STACK[0x18B8] + (v205 ^ 0x84E451E3)) - 84) ^ 0x29) - 107) + 98472;
  v215 = *((_DWORD *)&STACK[0x18D0] + (v214 - 1042 * ((4121850 * (unint64_t)v214) >> 32)));
  v216 = *(unsigned __int8 *)(STACK[0x18B8]
                            + (v206 ^ (2
                                     * ((v213 << 16) & 0x4BA10000 ^ v213 ^ ((v213 << 16) ^ 0x5C0A0000) & ((v212 << 8) & 0x4BA10000 ^ 0x4AA10000 ^ ((v212 << 8) ^ 0xA15C0000) & v212))) ^ 0xB9EE8587));
  HIDWORD(v218) = v215 ^ 0x67;
  LODWORD(v218) = v215 ^ v170;
  v217 = v218 >> 8;
  v219 = v216 ^ v204 ^ 0xFFFFFFA5;
  v220 = 373 * (BYTE2(v195) ^ 0x2D)
       + 98472
       - 1042 * ((4121850 * (unint64_t)(373 * (BYTE2(v195) ^ 0x2Du) + 98472)) >> 32);
  v221 = v220 - 1926392729 + (~(2 * v220) | 0xFFFFF731);
  v222 = ((v195 ^ 0xF0) + 1716662686 - ((2 * (v195 ^ 0xF0)) & 0x13C)) ^ 0xE75E909A;
  v223 = 373 * ((-166273691 - (v222 | 0xF616DD65) + (v222 | 0x9E9229A)) ^ 0x88E58309) + 572918894;
  v224 = (v223 ^ 0x9DD26432) & (2 * (v223 & 0xDDDB743A)) ^ v223 & 0xDDDB743A;
  v225 = ((2 * (v223 ^ 0xB5D44422)) ^ 0xD01E6030) & (v223 ^ 0xB5D44422) ^ (2 * (v223 ^ 0xB5D44422)) & 0x680F3018;
  v226 = (v225 ^ 0x400E2010) & (4 * v224) ^ v224;
  v227 = ((4 * (v225 ^ 0x28011008)) ^ 0xA03CC060) & (v225 ^ 0x28011008) ^ (4 * (v225 ^ 0x28011008)) & 0x680F3018;
  v228 = (v227 ^ 0x200C0018) & (16 * v226) ^ v226;
  v229 = ((16 * (v227 ^ 0x48033018)) ^ 0x80F30180) & (v227 ^ 0x48033018) ^ (16 * (v227 ^ 0x48033018)) & 0x680F3010;
  v230 = v228 ^ 0x680F3018 ^ (v229 ^ 0x30018) & (v228 << 8);
  v231 = v223 ^ (2
               * ((v230 << 16) & 0x680F0000 ^ v230 ^ ((v230 << 16) ^ 0x30180000) & (((v229 ^ 0x680C3018) << 8) & 0x680F0000 ^ 0x600F0000 ^ (((v229 ^ 0x680C3018) << 8) ^ 0xF300000) & (v229 ^ 0x680C3018)))) ^ 0xC0F8806D;
  v232 = 0x3EE4F99CBEA615
       * (((v231 ^ 0x4CA5F79F3053E5F6) - 0x4CA5F79F3053E5F6) ^ ((v231 ^ 0xF9B9FD5900DDD81CLL) + 0x64602A6FF2227E4) ^ ((v231 ^ 0xB51C0AC6BDA3A98DLL) + 0x4AE3F539425C5673))
       + 0x22C7B0497B0603ADLL;
  v233 = (v232 ^ 0x8E5F6D3F1C4BE285) & (2 * (v232 & 0xE1C4DBF9063F2C6)) ^ v232 & 0xE1C4DBF9063F2C6;
  v234 = ((2 * (v232 ^ 0x9667EF7B1C4AC289)) ^ 0x30F745891852609ELL) & (v232 ^ 0x9667EF7B1C4AC289) ^ (2 * (v232 ^ 0x9667EF7B1C4AC289)) & 0x987BA2C48C29304ELL;
  v235 = (v234 ^ 0x1073008000000008) & (4 * v233) ^ v233;
  v236 = ((4 * (v234 ^ 0x8808A24484291041)) ^ 0x61EE8B1230A4C13CLL) & (v234 ^ 0x8808A24484291041) ^ (4 * (v234 ^ 0x8808A24484291041)) & 0x987BA2C48C29304CLL;
  v237 = (v236 ^ 0x6A820000200000) & (16 * v235) ^ v235;
  v238 = ((16 * (v236 ^ 0x981120C48C093043)) ^ 0x87BA2C48C29304F0) & (v236 ^ 0x981120C48C093043) ^ (16 * (v236 ^ 0x981120C48C093043)) & 0x987BA2C48C293040;
  v239 = (v238 ^ 0x803A204080010000) & (v237 << 8) ^ v237;
  v240 = (((v238 ^ 0x184182840C28300FLL) << 8) ^ 0x7BA2C48C29304F00) & (v238 ^ 0x184182840C28300FLL) ^ ((v238 ^ 0x184182840C28300FLL) << 8) & 0x987BA2C48C293000;
  v241 = v239 ^ 0x987BA2C48C29304FLL ^ (v240 ^ 0x1822808408200000) & (v239 << 16);
  v242 = v232 ^ (2
               * ((v241 << 32) & 0x187BA2C400000000 ^ v241 ^ ((v241 << 32) ^ 0xC29304F00000000) & (((v240 ^ 0x805922408409304FLL) << 16) & 0x187BA2C400000000 ^ 0x183B22C400000000 ^ (((v240 ^ 0x805922408409304FLL) << 16) ^ 0x22C48C2900000000) & (v240 ^ 0x805922408409304FLL))));
  v243 = ((v242 ^ 0x2C4A2BD72644F634) + 0x4B918C88D4381E43) ^ ((v242 ^ 0x4BA1D21F4E4D24FFLL) + 0x2C7A7540BC31CC8ALL);
  LODWORD(v240) = __CFADD__(1042 * (v243 ^ ((v242 ^ 0x4952B176E0384093) + 0x2E8916291244A8E6)), 0x4B4B9C3C30A4ACB2)+ (((v243 ^ ((v242 ^ 0x4952B176E0384093) + 0x2E8916291244A8E6)) * (unsigned __int128)0x412uLL) >> 64)+ 1042* ((__CFADD__(v242 ^ 0x2C4A2BD72644F634, 0x4B918C88D4381E43) - 1) ^ (__CFADD__(v242 ^ 0x4BA1D21F4E4D24FFLL, 0x2C7A7540BC31CC8ALL)- 1) ^ (__CFADD__(v242 ^ 0x4952B176E0384093, 0x2E8916291244A8E6)- 1))+ 1852416413;
  LODWORD(v242) = (v240 ^ 0x5066048) & (2 * (v240 & 0x9196614A)) ^ v240 & 0x9196614A;
  LODWORD(v243) = ((2 * (v240 ^ 0x422A05C)) ^ 0x2B69822C) & (v240 ^ 0x422A05C) ^ (2 * (v240 ^ 0x422A05C)) & 0x95B4C116;
  LODWORD(v242) = (v243 ^ 0x1024C002) & (4 * v242) ^ v242;
  LODWORD(v243) = ((4 * (v243 ^ 0x94944112)) ^ 0x56D30458) & (v243 ^ 0x94944112) ^ (4 * (v243 ^ 0x94944112)) & 0x95B4C114;
  LODWORD(v242) = v242 ^ 0x95B4C116 ^ (v243 ^ 0x14900006) & (16 * v242);
  LODWORD(v243) = (16 * (v243 ^ 0x8124C106)) & 0x95B4C110 ^ 0x84B0C016 ^ ((16 * (v243 ^ 0x8124C106)) ^ 0x5B4C1160) & (v243 ^ 0x8124C106);
  LODWORD(v242) = ((_DWORD)v242 << 8) & 0x95B4C100 ^ v242 ^ (((_DWORD)v242 << 8) ^ 0xB4C11600) & v243;
  LODWORD(v243) = ((_DWORD)v242 << 16) & 0x15B40000 ^ v242 ^ (((_DWORD)v242 << 16) ^ 0x41160000) & (((_DWORD)v243 << 8) & 0x95B40000 ^ 0x1340000 ^ (((_DWORD)v243 << 8) ^ 0x34C10000) & v243);
  LODWORD(STACK[0x1748]) = v192;
  LODWORD(v242) = 373 * BYTE1(v192)
                + 98472
                - 1042 * ((4121850 * (unint64_t)(373 * BYTE1(v192) + 98472)) >> 32);
  v244 = v190 ^ v191;
  v245 = 373 * ((v190 ^ v191) >> 24)
       + 98472
       - 1042 * ((4121850 * (unint64_t)(373 * ((v190 ^ v191) >> 24) + 98472)) >> 32);
  v246 = 373 * ((unsigned __int16)(v190 ^ v191) >> 8) + 941469294;
  v247 = (v246 ^ 0xDA43C1B1) & (2 * (v246 & 0x3D23A)) ^ v246 & 0x3D23A;
  v248 = ((2 * (v246 ^ 0xDA4345B5)) ^ 0x22412F1E) & (v246 ^ 0xDA4345B5) ^ (2 * (v246 ^ 0xDA4345B5)) & 0x4A0978E;
  v249 = (v248 ^ 0x4A00108) & (4 * v247) ^ v247;
  v250 = ((4 * (v248 ^ 0x4A09081)) ^ 0x76825E3C) & (v248 ^ 0x4A09081) ^ (4 * (v248 ^ 0x4A09081)) & 0x1DA0978C;
  v251 = (v250 ^ 0x14801600) & (16 * v249) ^ v249;
  v252 = ((16 * (v250 ^ 0x9208183)) ^ 0xDA0978F0) & (v250 ^ 0x9208183) ^ (16 * (v250 ^ 0x9208183)) & 0x1DA09780;
  v253 = v251 ^ 0x1DA0978F ^ (v252 ^ 0x1800100F) & (v251 << 8);
  v254 = v246 ^ (2
               * ((v253 << 16) & 0x1DA00000 ^ v253 ^ ((v253 << 16) ^ 0x178F0000) & (((v252 ^ 0x5A0870F) << 8) & 0x1DA00000 ^ 0x1D200000 ^ (((v252 ^ 0x5A0870F) << 8) ^ 0xA0970000) & (v252 ^ 0x5A0870F))));
  v255 = v240 ^ (2 * v243);
  v256 = 0x3EE4F99CBEA615
       * (((v254 ^ 0x3C553A26CE5572A6) - 0x3C553A2694DA1BE5) ^ ((v254 ^ 0x5D74616A7AFC0114) - 0x5D74616A20736857) ^ ((v254 ^ 0x61215B4C630B8E96) - 0x61215B4C3984E7D5))
       + 0x52BACE501ED70C0FLL;
  v257 = (v256 ^ 0xDC890F3ECED2C373) & (2 * (v256 & 0xDE292FB8EC92EA64)) ^ v256 & 0xDE292FB8EC92EA64;
  v258 = ((2 * (v256 ^ 0x6C991E7FD7D2833BLL)) ^ 0x6560638E7680D2BELL) & (v256 ^ 0x6C991E7FD7D2833BLL) ^ (2 * (v256 ^ 0x6C991E7FD7D2833BLL)) & 0xB2B031C73B40695ELL;
  v259 = (v258 ^ 0x2020218632004010) & (4 * v257) ^ v257;
  v260 = ((4 * (v258 ^ 0x9290104109402941)) ^ 0xCAC0C71CED01A57CLL) & (v258 ^ 0x9290104109402941) ^ (4 * (v258 ^ 0x9290104109402941)) & 0xB2B031C73B40695CLL;
  v261 = (v260 ^ 0x8280010429002140) & (16 * v259) ^ v259;
  v262 = ((16 * (v260 ^ 0x303030C312404803)) ^ 0x2B031C73B40695F0) & (v260 ^ 0x303030C312404803) ^ (16 * (v260 ^ 0x303030C312404803)) & 0xB2B031C73B406950;
  v263 = (v262 ^ 0x2200104330000100) & (v261 << 8) ^ v261;
  v264 = (((v262 ^ 0x90B021840B40680FLL) << 8) ^ 0xB031C73B40695F00) & (v262 ^ 0x90B021840B40680FLL) ^ ((v262 ^ 0x90B021840B40680FLL) << 8) & 0xB2B031C73B406900;
  v265 = v263 ^ 0xB2B031C73B40695FLL ^ (v264 ^ 0xB030010300400000) & (v263 << 16);
  v266 = v256 ^ (2
               * ((v265 << 32) & 0x32B031C700000000 ^ v265 ^ ((v265 << 32) ^ 0x3B40695F00000000) & (((v264 ^ 0x28030C43B00205FLL) << 16) & 0x32B031C700000000 ^ 0x230008700000000 ^ (((v264 ^ 0x28030C43B00205FLL) << 16) ^ 0x31C73B4000000000) & (v264 ^ 0x28030C43B00205FLL))));
  v267 = ((v266 ^ 0xE1F5AB6F26E65DF4) + 0x6C525493422E18E0) ^ ((v266 ^ 0x6002E2267CFEC897) - 0x125AE225E7C97243);
  v268 = __CFADD__(1042 * (v267 ^ ((v266 ^ 0x5EBE47F1C00AADB9) - 0x2CE647F25B3D176DLL)), 0x6F6DF52AAAAB5CFCLL)
       + (((v267 ^ ((v266 ^ 0x5EBE47F1C00AADB9) - 0x2CE647F25B3D176DLL)) * (unsigned __int128)0x412uLL) >> 64)
       + 1042
       * ((__CFADD__(v266 ^ 0xE1F5AB6F26E65DF4, 0x6C525493422E18E0) - 1) ^ (__CFADD__(v266 ^ 0x6002E2267CFEC897, 0xEDA51DDA18368DBDLL)- 1) ^ (__CFADD__(v266 ^ 0x5EBE47F1C00AADB9, 0xD319B80DA4C2E893)- 1))+ 526092242;
  LODWORD(v266) = (v268 ^ 0xEE1070CE) & (2 * (v268 & 0xE0A47AEE)) ^ v268 & 0xE0A47AEE;
  LODWORD(v267) = ((2 * (v268 ^ 0xEF1824DE)) ^ 0x1F78BC60) & (v268 ^ 0xEF1824DE) ^ (2 * (v268 ^ 0xEF1824DE)) & 0xFBC5E30;
  LODWORD(v266) = (v267 ^ 0x7301C20) & (4 * v266) ^ v266;
  LODWORD(v267) = ((4 * (v267 ^ 0x844210)) ^ 0x3EF178C0) & (v267 ^ 0x844210) ^ (4 * (v267 ^ 0x844210)) & 0xFBC5E30;
  LODWORD(v266) = (v267 ^ 0xEB05800) & (16 * v266) ^ v266;
  LODWORD(v267) = ((16 * (v267 ^ 0x10C0630)) ^ 0xFBC5E300) & (v267 ^ 0x10C0630) ^ (16 * (v267 ^ 0x10C0630)) & 0xFBC5E30;
  LODWORD(v266) = v266 ^ 0xFBC5E30 ^ (v267 ^ 0xB844200) & ((_DWORD)v266 << 8);
  LODWORD(v266) = ((_DWORD)v266 << 16) & 0xFBC0000 ^ v266 ^ (((_DWORD)v266 << 16) ^ 0x5E300000) & (((v267 ^ 0x4381C30) << 8) & 0xFBC0000 ^ 0x3A00000 ^ (((v267 ^ 0x4381C30) << 8) ^ 0xBC5E0000) & (v267 ^ 0x4381C30));
  LODWORD(v267) = ((v184 ^ v191) >> 16) + 575746804;
  LODWORD(v264) = ((2 * (_WORD)v267) & 0x28 | 0x214) & (unsigned __int16)v267 ^ 0x343518D0;
  v269 = ((2 * (v267 ^ 0xE99BD2C4)) ^ 0x484A21A0) & (v267 ^ 0xE99BD2C4) ^ ((2 * (v267 ^ 0xE99BD2C4)) & 0x1100D0 | 0x1400);
  LODWORD(v264) = v269 & 0x4A882584 ^ v264 ^ ((4 * v264) ^ 0xAE785EC4) & (v269 ^ 0x34240C80);
  v270 = ((4 * v269) ^ 0xAE3C1F84) & (v269 ^ 0x34240C80) ^ v269 & 0x4A882584;
  LODWORD(v264) = v264 ^ v270 & 0x7EAC2D84 ^ ((16 * v264) ^ 0x7FBD2884) & (v270 ^ 0x34240C80);
  v271 = ((16 * v270) ^ 0x3CECE584) & (v270 ^ 0x34240C80) ^ v270 & 0x7EAC2D84;
  LODWORD(v264) = v264 ^ v271 & 0x7EAC2D84 ^ (((_DWORD)v264 << 8) ^ 0x4BB0FD84) & (v271 ^ 0x34240CD0);
  v272 = ((v271 << 8) ^ 0x5AA0AD84) & (v271 ^ 0x34240CD0) ^ v271 & 0x7EAC2D84;
  v273 = *((_DWORD *)&STACK[0x18D0] + ((v221 + 1) ^ 0x8D2D9467));
  LODWORD(v267) = v267 ^ (2
                        * (v264 ^ v272 & 0x7EAC2D84 ^ (((_DWORD)v264 << 16) ^ 0x6EFC2D84) & (v272 ^ 0x110000) ^ (((_DWORD)v264 << 16) ^ 0x6EFC2D84) & 0x34350C80));
  HIDWORD(v218) = v273 ^ 0x67;
  LODWORD(v218) = v273 ^ v170;
  LODWORD(v242) = *((_DWORD *)&STACK[0x18D0] + (((_DWORD)v242 - 1926392729 - ((2 * (_DWORD)v242) & 0x8CE)) ^ 0x8D2D9467));
  LODWORD(v264) = WORD1(v242) ^ 0x8D2D;
  LODWORD(v242) = ((v264 | ((_DWORD)v242 << 16)) ^ 0x94670000)
                - 1926392729
                - 2 * (((v264 | ((_DWORD)v242 << 16)) ^ 0x94670000) & LODWORD(STACK[0x1894]) ^ (BYTE2(v242) ^ 0x2D) & 8);
  v274 = v268 ^ (2 * v266);
  LODWORD(STACK[0x1730]) = v219;
  LODWORD(STACK[0x16D0]) = v219 - 107;
  LODWORD(v242) = *((_DWORD *)&STACK[0x18D0] + v245) ^ v242;
  v275 = *((_DWORD *)&STACK[0x18D0] + (v255 ^ 0x91D7E366));
  LODWORD(STACK[0x1828]) = (v218 >> 8) ^ v242;
  LODWORD(v218) = __ROR4__(v275, 24);
  LODWORD(STACK[0x17D8]) = (v218 ^ 0x2D94678D) - 1926392729 - ((2 * (v218 ^ 0x2D94678D)) & 0x1A5B28CE);
  LODWORD(STACK[0x1798]) = v195;
  LODWORD(v242) = (HIBYTE(v195) ^ 0x8D) + 601240985;
  LODWORD(v266) = ((2 * (v242 & 0x36F ^ 0xE6E4688F)) ^ 0x908911E) & (v242 ^ 0x3ACDA3E0) ^ v242 & 0x36F ^ 0xE6E4688F ^ ((2 * (v242 & 0x36F ^ 0xE6E4688F)) & 0xC080408E | 0x20000801);
  v276 = ((2 * (v242 ^ 0x3ACDA3E0)) ^ 0x908911E) & (v242 ^ 0x3ACDA3E0) ^ ((2 * (v242 ^ 0x3ACDA3E0)) & 0x224208E | 0x4400001);
  LODWORD(v266) = v266 ^ v276 & 0x1909157F ^ ((4 * v266) ^ 0xE019DF7E) & (v276 ^ 0xE080480F);
  v277 = ((4 * v276) ^ 0x7B887D42) & (v276 ^ 0x6080480F) ^ v276 & 0x1909157F;
  LODWORD(v266) = v266 ^ v277 & 0x79895D7F ^ ((16 * v266) ^ 0x97CFD58F) & (v277 ^ 0xE080480F);
  v278 = ((16 * v277) ^ 0xF18DDD8F) & (v277 ^ 0xE080480F) ^ v277 & 0x79895D7F;
  LODWORD(v266) = v266 ^ v278 & 0xF9895D7F ^ (((_DWORD)v266 << 8) ^ 0x9DA9DD7F) & (v278 ^ 0xE080488F);
  v279 = ((v278 << 8) ^ 0x79C1527F) & (v278 ^ 0xE080488F) ^ v278 & 0xF9895D7F;
  v280 = v242 ^ (2
               * (v266 ^ v279 & 0x79895D7F ^ (((_DWORD)v266 << 16) ^ 0x91065D7F) & (v279 ^ 0x6640000) ^ (((_DWORD)v266 << 16) ^ 0x91065D7F) & 0x66E4480F));
  LODWORD(STACK[0x1658]) = v183;
  LODWORD(v266) = (((2 * (v183 & 0x6B84B2B4 ^ 0x418400B0)) | 0xBA35185C) - (v183 & 0x6B84B2B4 ^ 0x418400B0) + 585462738) ^ 0xD91B14AA;
  v281 = v266 - ((2 * v266) & 0xB3A8E0FC);
  LODWORD(STACK[0x1778]) = v244;
  LODWORD(v266) = v244 + 43935552;
  v282 = (v266 ^ 0x842839E2) & (2 * (v266 & 0x9C8)) ^ v266 & 0x9C8;
  v283 = ((2 * (v266 ^ 0x84283862)) ^ 0x82924354) & (v266 ^ 0x84283862) ^ (2 * (v266 ^ 0x84283862)) & 0x1AA;
  v284 = (v283 ^ 0x2100) & (4 * v282) ^ v282;
  v285 = ((4 * (v283 ^ 0xAA)) ^ 0xE52686A8) & (v283 ^ 0xAA) ^ (4 * (v283 ^ 0xAA)) & 0x7949A1A8;
  v286 = (v285 ^ 0x610080A2) & (16 * v284) ^ v284;
  v287 = ((16 * (v285 ^ 0x18492102)) ^ 0x949A1AA0) & (v285 ^ 0x18492102) ^ (16 * (v285 ^ 0x18492102)) & 0x7949A1A0;
  v288 = v286 ^ 0x7949A1AA ^ (v287 ^ 0x1008000A) & (v286 << 8);
  LODWORD(v266) = v266 ^ (2
                        * ((v288 << 16) & 0x79490000 ^ v288 ^ ((v288 << 16) ^ 0x21AA0000) & (((v287 ^ 0x6941A10A) << 8) & 0x79490000 ^ 0x30480000 ^ (((v287 ^ 0x6941A10A) << 8) ^ 0x49A10000) & (v287 ^ 0x6941A10A))));
  LODWORD(v266) = 373
                * (((v266 ^ 0x9EA265B0) - 1584212811) ^ ((v266 ^ 0x7F5A5C2F) + 1080749356) ^ ((v266 ^ 0xAC1AE303)
                                                                                            - 1825943032))
                + 507245687;
  v289 = (v266 ^ 0xD58C551A) & (2 * (v266 & 0x952D459C)) ^ v266 & 0x952D459C;
  v290 = ((2 * (v266 ^ 0xDFD4D60A)) ^ 0x95F3272C) & (v266 ^ 0xDFD4D60A) ^ (2 * (v266 ^ 0xDFD4D60A)) & 0x4AF99396;
  v291 = (v290 ^ 0xF10200) & (4 * v289) ^ v289;
  v292 = ((4 * (v290 ^ 0x4A089092)) ^ 0x2BE64E58) & (v290 ^ 0x4A089092) ^ (4 * (v290 ^ 0x4A089092)) & 0x4AF99394;
  v293 = (v292 ^ 0xAE00200) & (16 * v291) ^ v291;
  v294 = ((16 * (v292 ^ 0x40199186)) ^ 0xAF993960) & (v292 ^ 0x40199186) ^ (16 * (v292 ^ 0x40199186)) & 0x4AF99390;
  v295 = v293 ^ 0x4AF99396 ^ (v294 ^ 0xA991100) & (v293 << 8);
  LODWORD(v242) = ((((v267 ^ 0x123E8FB1) - 718793826) ^ ((v267 ^ 0xE78EB460) + 546842701) ^ ((v267 ^ 0x4074CC65)
                                                                                           - 2023600054))
                 - 1926392729)
                * (((v281 - 640388993) ^ 0x9555786F)
                 + (v183 & 0x6B84B2B4 ^ 0x62802290)
                 + (v264 & 0x4EC1)
                 + (v264 & 0x4EC1 ^ 0x947B4EC1))
                + 1945427349;
  LODWORD(v267) = (v242 ^ 0xAFE28B43) & (2 * (v242 & 0x8C0B226B)) ^ v242 & 0x8C0B226B;
  LODWORD(v264) = ((2 * (v242 ^ 0xA7E68F95)) ^ 0x57DB5BFC) & (v242 ^ 0xA7E68F95) ^ (2 * (v242 ^ 0xA7E68F95)) & 0x2BEDADFE;
  LODWORD(v267) = (v264 ^ 0x8492DFC) & (4 * v267) ^ v267;
  LODWORD(v264) = ((4 * (v264 ^ 0x2824A402)) ^ 0xAFB6B7F8) & (v264 ^ 0x2824A402) ^ (4 * (v264 ^ 0x2824A402)) & 0x2BEDADFC;
  LODWORD(v267) = (v264 ^ 0x2BA4A5F0) & (16 * v267) ^ v267;
  LODWORD(v264) = ((16 * (v264 ^ 0x490806)) ^ 0xBEDADFE0) & (v264 ^ 0x490806) ^ (16 * (v264 ^ 0x490806)) & 0x2BEDADF0;
  LODWORD(v267) = v267 ^ 0x2BEDADFE ^ (v264 ^ 0x2AC88D00) & ((_DWORD)v267 << 8);
  LODWORD(v264) = ((_DWORD)v267 << 16) & 0x2BED0000 ^ v267 ^ (((_DWORD)v267 << 16) ^ 0x2DFE0000) & (((v264 ^ 0x125201E) << 8) & 0x2BED0000 ^ 0x2400000 ^ (((v264 ^ 0x125201E) << 8) ^ 0x6DAD0000) & (v264 ^ 0x125201E));
  v296 = v266 ^ (2
                             * ((v295 << 16) & 0x4AF90000 ^ v295 ^ ((v295 << 16) ^ 0x13960000) & (((v294 ^ 0x40608296) << 8) & 0x4AF90000 ^ 0x2680000 ^ (((v294 ^ 0x40608296) << 8) ^ 0xF9930000) & (v294 ^ 0x40608296)))) ^ 0x88D3F6D7;
  v297 = 0x3EE4F99CBEA615
       * (((v296 ^ 0x9F6CFF3921015BDLL) - 0x9F6CFF3921015BDLL) ^ ((v296 ^ 0x90D4A61170246B3BLL) + 0x6F2B59EE8FDB94C5) ^ ((v296 ^ 0x992269E26F19EAE1) + 0x66DD961D90E6151FLL))
       + 0x73F4B4CFFA6E71E5;
  v298 = (v297 ^ 0x3CCF0C3D48FBE0CELL) & (2 * (v297 & 0xBCEF493910FB848ELL)) ^ v297 & 0xBCEF493910FB848ELL;
  v299 = ((2 * (v297 ^ 0x64039E0F48FEE8CALL)) ^ 0xB1D9AE6CB00AD888) & (v297 ^ 0x64039E0F48FEE8CALL) ^ (2 * (v297 ^ 0x64039E0F48FEE8CALL)) & 0xD8ECD73658056C44;
  v300 = (v299 ^ 0x90C8042400000000) & (4 * v298) ^ v298;
  v301 = ((4 * (v299 ^ 0x4824511248052444)) ^ 0x63B35CD96015B110) & (v299 ^ 0x4824511248052444) ^ (4 * (v299 ^ 0x4824511248052444)) & 0xD8ECD73658056C44;
  v302 = (v301 ^ 0x40A0541040052000) & (16 * v300) ^ v300;
  v303 = ((16 * (v301 ^ 0x984C832618004C44)) ^ 0x8ECD73658056C440) & (v301 ^ 0x984C832618004C44) ^ (16 * (v301 ^ 0x984C832618004C44)) & 0xD8ECD73658056C40;
  v304 = (v303 ^ 0x88CC532400044400) & (v302 << 8) ^ v302;
  v305 = (((v303 ^ 0x5020841258012804) << 8) ^ 0xECD73658056C4400) & (v303 ^ 0x5020841258012804) ^ ((v303 ^ 0x5020841258012804) << 8) & 0xD8ECD73658056C00;
  v306 = v304 ^ 0xD8ECD73658056C44 ^ (v305 ^ 0xC8C4161000040000) & (v304 << 16);
  v307 = v297 ^ (2
               * ((v306 << 32) & 0x58ECD73600000000 ^ v306 ^ ((v306 << 32) ^ 0x58056C4400000000) & (((v305 ^ 0x1028C12658012844) << 16) & 0x58ECD73600000000 ^ 0x8C8873200000000 ^ (((v305 ^ 0x1028C12658012844) << 16) ^ 0x5736580500000000) & (v305 ^ 0x1028C12658012844))));
  v308 = ((v307 ^ 0x45C32A14D698EF41) + 0x59100022C743899CLL) ^ ((v307 ^ 0x96EB7D9B081FFBCELL) - 0x75C7A852E63B62EBLL);
  LODWORD(v307) = __CFADD__(1042 * (v308 ^ ((v307 ^ 0x6E1638D27E764889) + 0x72C512E46FAD2E54)), 0xE83B6FA8E21C6876)+ (((v308 ^ ((v307 ^ 0x6E1638D27E764889) + 0x72C512E46FAD2E54)) * (unsigned __int128)0x412uLL) >> 64)+ 1042* ((__CFADD__(v307 ^ 0x45C32A14D698EF41, 0x59100022C743899CLL) - 1) ^ (__CFADD__(v307 ^ 0x96EB7D9B081FFBCELL, 0x8A3857AD19C49D15)- 1) ^ (__CFADD__(v307 ^ 0x6E1638D27E764889, 0x72C512E46FAD2E54)- 1))+ 1003494729;
  LODWORD(v308) = (v307 ^ 0x86AFF7B0) & (2 * (v307 & 0xC42FE435)) ^ v307 & 0xC42FE435;
  LODWORD(v305) = ((2 * (v307 ^ 0x8EAB7F92)) ^ 0x9509374E) & (v307 ^ 0x8EAB7F92) ^ (2 * (v307 ^ 0x8EAB7F92)) & 0x4A849BA6;
  LODWORD(v308) = (v305 ^ 0x4A001905) & (4 * v308) ^ v308;
  LODWORD(v305) = ((4 * (v305 ^ 0x4A8488A1)) ^ 0x2A126E9C) & (v305 ^ 0x4A8488A1) ^ (4 * (v305 ^ 0x4A8488A1)) & 0x4A849BA4;
  LODWORD(v308) = (v305 ^ 0xA000A83) & (16 * v308) ^ v308;
  LODWORD(v305) = ((16 * (v305 ^ 0x40849123)) ^ 0xA849BA70) & (v305 ^ 0x40849123) ^ (16 * (v305 ^ 0x40849123)) & 0x4A849BA0;
  LODWORD(v308) = v308 ^ 0x4A849BA7 ^ (v305 ^ 0x8009A87) & ((_DWORD)v308 << 8);
  LODWORD(v308) = v307 ^ (2
                        * (((_DWORD)v308 << 16) & 0x4A840000 ^ v308 ^ (((_DWORD)v308 << 16) ^ 0x1BA70000) & (((v305 ^ 0x42840187) << 8) & 0x4A840000 ^ 0x4A040000 ^ (((v305 ^ 0x42840187) << 8) ^ 0x49B0000) & (v305 ^ 0x42840187))));
  LODWORD(v242) = v242 ^ 0x88087997 ^ (2 * v264);
  LODWORD(v307) = ((unsigned __int16)(v184 ^ v191) >> 8) + 1695673224;
  v309 = (v307 ^ 0x94C8D4AD) & (2 * ((((unsigned __int16)(v184 ^ v191) >> 8) - 5240) & 0x580)) ^ (((unsigned __int16)(v184 ^ v191) >> 8) - 5240) & 0x580 ^ (((((unsigned __int16)((((unsigned __int16)(v184 ^ v191) >> 8) - 5240) & 0x580) >> 7) & 1) << 8) | 0x8008);
  LODWORD(v264) = (2 * (v307 ^ 0x94C8D4AD)) & 0x12C ^ 0x125 ^ ((2 * (v307 ^ 0x94C8D4AD)) ^ 0x1049025A) & (v307 ^ 0x94C8D4AD);
  v310 = (4 * v309) & 0xE26C128 ^ v309 ^ ((4 * v309) ^ 0x20020) & v264;
  LODWORD(v264) = (4 * v264) & 0xE26C12C ^ 0x624C109 ^ ((4 * v264) ^ 0x309904B4) & v264;
  v311 = (16 * v310) & 0xE26C120 ^ v310 ^ ((16 * v310) ^ 0x280280) & v264;
  LODWORD(v264) = (16 * v264) & 0xE26C120 ^ 0xC02C12D ^ ((16 * v264) ^ 0xE26C12D0) & v264;
  v312 = v311 ^ 0xC044105 ^ (v311 << 8) & 0xE26C100 ^ ((v311 << 8) ^ 0x22802800) & v264;
  LODWORD(v307) = v307 ^ (2
                        * ((v312 << 16) & 0xE260000 ^ v312 ^ ((v312 << 16) ^ 0x412D0000) & (((_DWORD)v264 << 8) & 0xE260000 ^ 0x8260000 ^ (((_DWORD)v264 << 8) ^ 0x26C10000) & v264)));
  LODWORD(v307) = 373
                * (((v307 ^ 0x7D10D2CA) - 1993789815) ^ ((v307 ^ 0xDD12650C) + 690723151) ^ ((v307 ^ 0x26E9201C)
                                                                                           - 758064033))
                - 317492752;
  v313 = (v307 ^ 0xA551862A) & (2 * (v307 & 0xC655C823)) ^ v307 & 0xC655C823;
  LODWORD(v264) = ((2 * (v307 ^ 0x2D78166E)) ^ 0xD65BBC9A) & (v307 ^ 0x2D78166E) ^ (2 * (v307 ^ 0x2D78166E)) & 0xEB2DDE4C;
  v314 = (v264 ^ 0x2090249) & (4 * v313) ^ v313;
  LODWORD(v264) = ((4 * (v264 ^ 0x29244245)) ^ 0xACB77934) & (v264 ^ 0x29244245) ^ (4 * (v264 ^ 0x29244245)) & 0xEB2DDE4C;
  v315 = (v264 ^ 0xA8255800) & (16 * v314) ^ v314;
  LODWORD(v264) = ((16 * (v264 ^ 0x43088649)) ^ 0xB2DDE4D0) & (v264 ^ 0x43088649) ^ (16 * (v264 ^ 0x43088649)) & 0xEB2DDE40;
  v316 = v315 ^ 0xEB2DDE4D ^ (v264 ^ 0xA20DC400) & (v315 << 8);
  v317 = *((_DWORD *)&STACK[0x18D0] + v242 % 0x412) >> 8;
  v318 = v307 ^ (2
                             * ((v316 << 16) & 0x6B2D0000 ^ v316 ^ ((v316 << 16) ^ 0x5E4D0000) & (((v264 ^ 0x49201A0D) << 8) & 0x6B2D0000 ^ 0x42210000 ^ (((v264 ^ 0x49201A0D) << 8) ^ 0x2DDE0000) & (v264 ^ 0x49201A0D)))) ^ 0x939E0DE;
  v319 = 0x3EE4F99CBEA615
       * (((v318 ^ 0x7FC076CD6FCE100ALL) - 0x7FC076CD6FCE100ALL) ^ ((v318 ^ 0x346EB86498289723) - 0x346EB86498289723) ^ ((v318 ^ 0x4BAECEA97ACB134ELL) - 0x4BAECEA97ACB134ELL))
       + 0x496F28E9798A6D47;
  v320 = (v319 ^ 0xD766909F09DF2128) & (2 * (v319 & 0xE774D51F91DF892CLL)) ^ v319 & 0xE774D51F91DF892CLL;
  v321 = ((2 * (v319 ^ 0xD18730A40B613328)) ^ 0x6DE7CB77357D7408) & (v319 ^ 0xD18730A40B613328) ^ (2 * (v319 ^ 0xD18730A40B613328)) & 0x36F3E5BB9ABEBA04;
  v322 = (v321 ^ 0x24E3C032003C2000) & (4 * v320) ^ v320;
  v323 = ((4 * (v321 ^ 0x121024888A828A04)) ^ 0xDBCF96EE6AFAE810) & (v321 ^ 0x121024888A828A04) ^ (4 * (v321 ^ 0x121024888A828A04)) & 0x36F3E5BB9ABEBA04;
  v324 = (v323 ^ 0x12C384AA0ABAA800) & (16 * v322) ^ v322;
  v325 = ((16 * (v323 ^ 0x2430611190041204)) ^ 0x6F3E5BB9ABEBA040) & (v323 ^ 0x2430611190041204) ^ (16 * (v323 ^ 0x2430611190041204)) & 0x36F3E5BB9ABEBA00;
  v326 = (v325 ^ 0x263241B98AAAA000) & (v324 << 8) ^ v324;
  v327 = (((v325 ^ 0x10C1A40210141A04) << 8) ^ 0xF3E5BB9ABEBA0400) & (v325 ^ 0x10C1A40210141A04) ^ ((v325 ^ 0x10C1A40210141A04) << 8) & 0x36F3E5BB9ABEBA00;
  v328 = v326 ^ 0x36F3E5BB9ABEBA04 ^ (v327 ^ 0x32E1A19A9ABA0000) & (v326 << 16);
  v329 = v319 ^ (2
               * ((v328 << 32) & 0x36F3E5BB00000000 ^ v328 ^ ((v328 << 32) ^ 0x1ABEBA0400000000) & (((v327 ^ 0x41244210004BA04) << 16) & 0x36F3E5BB00000000 ^ 0x1240650100000000 ^ (((v327 ^ 0x41244210004BA04) << 16) ^ 0x65BB9ABE00000000) & (v327 ^ 0x41244210004BA04))));
  v330 = ((v329 ^ 0x23E82E11754D0EB6) - 0x42A35D353B6BF528) ^ ((v329 ^ 0xEF8D19621DC3EFC8) + 0x713995B9AC1AEBAALL);
  LODWORD(v329) = __CFADD__(1042 * (v330 ^ ((v329 ^ 0x6393691BCC2C1C5ALL) - 0x2D81A3F820AE7C4)), 0x7E0263128D636114)
                + (((v330 ^ ((v329 ^ 0x6393691BCC2C1C5ALL) - 0x2D81A3F820AE7C4)) * (unsigned __int128)0x412uLL) >> 64)
                + 1042
                * ((__CFADD__(v329 ^ 0x23E82E11754D0EB6, 0xBD5CA2CAC4940AD8) - 1) ^ (__CFADD__(v329 ^ 0xEF8D19621DC3EFC8, 0x713995B9AC1AEBAALL)- 1) ^ (__CFADD__(v329 ^ 0x6393691BCC2C1C5ALL, 0xFD27E5C07DF5183CLL)- 1))+ 240489658;
  LODWORD(v327) = (2 * (v329 & 0xF1AA6E8F)) & (v329 ^ 0x7B1AE6AB) ^ v329 & 0xF1AA6E8F ^ ((2 * (v329 & 0xF1AA6E8F)) & 0x82108804 | 0x200000);
  LODWORD(v330) = (2 * (v329 ^ 0x7B1AE6AB)) & 0x8AB08824 ^ 0x8A908824 ^ ((2 * (v329 ^ 0x7B1AE6AB)) ^ 0x15611048) & (v329 ^ 0x7B1AE6AB);
  LODWORD(v327) = (4 * v327) & 0x8AB08824 ^ v327 ^ ((4 * v327) ^ 0x800000) & v330;
  LODWORD(v330) = (4 * v330) & 0x8AB08824 ^ 0x80308824 ^ ((4 * v330) ^ 0x2AC22090) & v330;
  LODWORD(v327) = v327 ^ (16 * v327) & 0x8AB08820 ^ ((16 * v327) ^ 0xA000000) & v330;
  LODWORD(v330) = (16 * v330) & 0x8AB08820 ^ 0xB00824 ^ ((16 * v330) ^ 0xAB088240) & v330;
  LODWORD(v327) = ((v327 ^ 0x80108824) << 8) & 0x8AB08800 ^ v327 ^ 0x80108824 ^ (((v327 ^ 0x80108824) << 8) ^ 0xB0882400) & v330;
  LODWORD(v329) = v329 ^ (2
                        * (((_DWORD)v327 << 16) & 0xAB00000 ^ v327 ^ (((_DWORD)v327 << 16) ^ 0x8240000) & (((_DWORD)v330 << 8) & 0x8AB00000 ^ 0xA300000 ^ (((_DWORD)v330 << 8) ^ 0x30880000) & v330)));
  LODWORD(STACK[0x16E0]) = v184 ^ v191;
  LODWORD(v330) = 373 * (v184 ^ v191)
                + 98472
                - 1042
                * ((4121850 * (unint64_t)(373 * (v184 ^ v191) + 98472)) >> 32);
  LODWORD(v329) = *((_DWORD *)&STACK[0x18D0] + (v329 ^ 0xF58B7EC7));
  HIDWORD(v218) = v329 ^ 0x9467;
  LODWORD(v218) = v329 ^ 0x8D2D0000;
  LODWORD(v329) = v218 >> 16;
  HIDWORD(v218) = *((_DWORD *)&STACK[0x18D0] + (((_DWORD)v330 - 1926392729 - ((2 * (_DWORD)v330) & 0x8CE)) ^ 0x8D2D9467));
  LODWORD(v218) = HIDWORD(v218);
  v331 = ((v218 >> 24) ^ 0x2D94678D) - 1926392729 - 2 * (((v218 >> 24) ^ 0x2D94678D) & 0xD2D9477 ^ (v218 >> 24) & 0x10);
  LODWORD(v330) = (LODWORD(STACK[0x14C8]) ^ 0x8D2D9467) % 0x101;
  v332 = LODWORD(STACK[0x1840]) % 0x101 - 1926392729 - ((2 * (LODWORD(STACK[0x1840]) % 0x101)) & 0xCE);
  v333 = ((v330 + 116445414) ^ 0xA7D5B00F) & (2 * ((v330 + 116445414) & 0x10012C)) ^ (v330 + 116445414) & 0x10012C;
  v334 = ((2 * ((v330 + 116445414) ^ 0xA7D5B017)) ^ 0xA1016276) & ((v330 + 116445414) ^ 0xA7D5B017) ^ (2 * ((v330 + 116445414) ^ 0xA7D5B017)) & 0x53A;
  v335 = (v334 ^ 0xC41039) & (4 * v333) ^ v333;
  v336 = ((4 * (v334 ^ 0x41509)) ^ 0x7B16D4EC) & (v334 ^ 0x41509) ^ (4 * (v334 ^ 0x41509)) & 0x5EC5B538;
  v337 = (v336 ^ 0x5A049430) & (16 * v335) ^ v335;
  v338 = ((16 * (v336 ^ 0x4C12113)) ^ 0xEC5B53B0) & (v336 ^ 0x4C12113) ^ (16 * (v336 ^ 0x4C12113)) & 0x5EC5B530;
  v339 = v337 ^ 0x5EC5B53B ^ (v338 ^ 0x4C411100) & (v337 << 8);
  v340 = v332 ^ 0xA2AEA322 ^ *(_DWORD *)(STACK[0x16A8]
                                       + 4
                                       * ((((v332 ^ 0x5B9D86E6) - 1537050342) ^ ((v332 ^ 0xFA4BB44C) + 95701940) ^ ((v332 ^ 0x2CFBA6CD) - 754689741))
                                        - 1926356367));
  LODWORD(v329) = (v217 - 1926392729 - ((2 * v217) & 0x1A5B28CE)) ^ 0x2D94678D ^ __ROR4__(*((_DWORD *)&STACK[0x18D0]+ (v308 ^ 0x442ED37B)), 24) ^ v329 ^ *((_DWORD *)&STACK[0x18D0]+ (373* (((v280 ^ 0x8CA67A9B) + 781556589) ^ ((v280 ^ 0x604D3613) - 1031874587) ^ ((v280 ^ 0x3C0AC6E7) - 1640421615))- 1284949485)% 0x412);
  v341 = ((2 * (STACK[0xE20] & 0xE9E9E9E9 ^ 0x496060)) | 0x3E1564C) - (STACK[0xE20] & 0xE9E9E9E9 ^ 0x496060);
  LODWORD(v308) = *(_DWORD *)(STACK[0x16A8]
                            + 4
                            * (((_DWORD)v330 + 116445414) ^ 0x6C996F5A ^ (2
                                                                        * ((v339 << 16) & 0x5EC50000 ^ v339 ^ ((v339 << 16) ^ 0x353B0000) & (((v338 ^ 0x1284A40B) << 8) & 0x5EC50000 ^ 0x1A400000 ^ (((v338 ^ 0x1284A40B) << 8) ^ 0xC5B50000) & (v338 ^ 0x1284A40B))))));
  LODWORD(v305) = (((v308 ^ 0x32931E4D) - 848502349) ^ ((v308 ^ 0x68376327) - 1748460327) ^ ((v308 ^ 0xD789E90D)
                                                                                           + 678827763))
                - (((v330 ^ 0x902077A8) - 1106136247) ^ ((v330 ^ 0x72BE09E2) + 1552928003) ^ ((v330 ^ 0xBE7DD132)
                                                                                            - 1874061869));
  v342 = STACK[0x1598];
  v343 = STACK[0x1490];
  LODWORD(STACK[0x1840]) = STACK[0x1490] & 0x1C ^ 4;
  LODWORD(STACK[0x17C0]) = ~v343 & 3;
  v344 = STACK[0x14E8];
  v345 = (LODWORD(STACK[0x14E8]) ^ 0x8D2D9467) << LODWORD(STACK[0x14D8]) << LODWORD(STACK[0x1470]);
  v346 = v342 & 0x1B ^ 3;
  LODWORD(STACK[0x16C0]) = v346;
  v347 = (((v345 ^ 0xDEA8A5CD) & ~((v344 ^ 0x8D2D9467) >> v346) & 0x2B39DA70 | ((v344 ^ 0x8D2D9467) >> v346) & 0x21115A30) ^ 0x2B28D041)
       + ((v345 ^ 0xDEA8A5CD) & ~((v344 ^ 0x8D2D9467) >> v346) & 0xD4C6258F | ((v344 ^ 0x8D2D9467) >> v346) & 0x460002);
  v348 = v329 + v340 + (v305 ^ 0x97455686);
  v349 = 2 * v341 + 2082384308;
  v350 = STACK[0x10DC];
  LODWORD(v329) = v349 & 0x36EC69CA ^ 0x20A468C8 ^ (v349 ^ 0x78C97FA7) & (LODWORD(STACK[0x10DC]) ^ 0xBBC1FDAD);
  v351 = STACK[0x10C8];
  LODWORD(STACK[0x10C8]) = STACK[0x10C8];
  v352 = ((((2 * (_DWORD)v329) & 0xA7000FCC) - (_DWORD)v329 - 1400899559) ^ 0xBC13F953) >> (v351 & 0xDB ^ 0x43) >> (v351 & 0x24 ^ 0x24);
  LODWORD(v329) = v348 - 1926392728 - ((2 * (v348 + 1)) & 0x1A5B28CE);
  LODWORD(v305) = 316858455
                - (v349 & 0x2BB918F4 ^ 0x2A2918A0 ^ (v349 ^ 0x78C97FA7) & (LODWORD(STACK[0x1420]) ^ 0xA6948C93) | 0x12E2E057)
                + (v349 & 0x2BB918F4 ^ 0x2A2918A0 ^ (v349 ^ 0x78C97FA7) & (LODWORD(STACK[0x1420]) ^ 0xA6948C93) | 0xED1D1FA8);
  v353 = LODWORD(STACK[0x14B0]) ^ 0x2CF62C0B;
  LODWORD(STACK[0x16C8]) = v349 ^ 0x78C97FA7;
  v354 = (((v353 & (v349 ^ 0x78C97FA7) ^ v349 & 0xA1DBB86C) & 0x1BDD0113 ^ 0x1B0C0113)
        + (v353 & (v349 ^ 0x78C97FA7) ^ v349 & 0xA1DBB86C ^ 0xD3302C)
        - ((v353 & (v349 ^ 0x78C97FA7) ^ v349 & 0xA1DBB86C ^ 0xD3302C) & 0x1BDD0113)) ^ 0x3BC7091B;
  v355 = v354 << LODWORD(STACK[0xB6C]) << LODWORD(STACK[0xB68]);
  LODWORD(v305) = (v305 ^ 0xEFBD1FAC) >> LODWORD(STACK[0xD30]) >> LODWORD(STACK[0xD24]);
  v356 = LODWORD(STACK[0xFDC]) ^ 0xFBBAE92B;
  v357 = STACK[0xC4C] & 0x353D2C2 ^ 0x224D8024 ^ v356 & (v350 ^ 0xAA726A80);
  v358 = v356 & (LODWORD(STACK[0x1064]) ^ 0x4212994A) ^ STACK[0xC4C] & 0xC3130100;
  v359 = (v358 & 0xD0519961 ^ 0xD4509D60) + (v358 & 0x2BAA629A ^ 0x30A0001);
  v360 = STACK[0x18A8];
  v361 = v355 ^ (v305 - 1926392729 - ((2 * v305) & 0x1A5B28CE)) ^ LODWORD(STACK[0x18A8]) ^ LODWORD(STACK[0x1838]) ^ v329;
  v362 = STACK[0x14B8];
  STACK[0x14B8] = STACK[0x14B8];
  v363 = ((813726175 - v357 + ((2 * v357) | 0x9EFF0C42)) ^ 0xCE28EE26) >> (v362 & 0x74 ^ 0x64) >> (v362 & 0x8B ^ 3);
  if (LODWORD(STACK[0x15C8]) == -1926392729)
    v364 = v344;
  else
    v364 = (v347 - 1) ^ 0x78ADE1EA;
  LODWORD(STACK[0x124C]) = (((v359 - 1) ^ 0x1C609449) << LODWORD(STACK[0xD2C]) << LODWORD(STACK[0xD28])) ^ 0x8D2D9467;
  HIDWORD(v365) = *((_DWORD *)&STACK[0x18D0] + (v274 ^ 0xE3BCC68E));
  LODWORD(v365) = HIDWORD(v365);
  LODWORD(STACK[0x1750]) = v363 ^ 0x8D2D9467;
  LODWORD(STACK[0x1430]) = v361 ^ 0x8D2D9467;
  v366 = ((((v361 ^ 0x8D2D9467) & 0xF5 ^ 0x628EB7CE) - ((v361 ^ 0x8D2D9467) & 0xA)) ^ 0x628EB7A9) + 2145379880;
  v367 = (v366 ^ 0x4506D0C8) & (2 * (v366 & 0x2E0)) ^ v366 & 0x2E0;
  v368 = ((2 * (v366 ^ 0x4506D088)) ^ 0x8A4D94D0) & (v366 ^ 0x4506D088) ^ (2 * (v366 ^ 0x4506D088)) & 0x4526CA68;
  v369 = (v368 ^ 0x45224028) & (4 * v367) ^ v367;
  v370 = ((4 * (v368 ^ 0x45224A28)) ^ 0x149B29A0) & (v368 ^ 0x45224A28) ^ (4 * (v368 ^ 0x45224A28)) & 0xC526CA68;
  v371 = (v370 ^ 0x4020828) & (16 * v369) ^ v369;
  v372 = ((16 * (v370 ^ 0xC124C248)) ^ 0x526CA680) & (v370 ^ 0xC124C248) ^ (16 * (v370 ^ 0xC124C248)) & 0xC526CA60;
  v373 = v371 ^ 0xC526CA68 ^ (v372 ^ 0x40248268) & (v371 << 8);
  v374 = v366 ^ (2
               * ((v373 << 16) & 0x45260000 ^ v373 ^ ((v373 << 16) ^ 0x4A680000) & (((v372 ^ 0x85024868) << 8) & 0x45260000 ^ 0x41240000 ^ (((v372 ^ 0x85024868) << 8) ^ 0x26CA0000) & (v372 ^ 0x85024868))));
  v375 = v354 << LODWORD(STACK[0x10D0]) << LODWORD(STACK[0x10B4]);
  LODWORD(STACK[0x16A4]) = v352;
  v376 = v375 & 0xD63072B6 | (v352 ^ 0x29CF8D49) & ~v375;
  v377 = 373
       * (((v374 ^ 0xA4306C94) + 1557104957) ^ ((v374 ^ 0xB9A1A439) + 1096696210) ^ ((v374 ^ 0x97BC469D) + 1866703670))
       - 101423315;
  v378 = (v377 ^ 0xB164C0E4) & (2 * (v377 & 0xB974D2E6)) ^ v377 & 0xB974D2E6;
  v379 = ((2 * (v377 ^ 0x93CDC1A4)) ^ 0x55722684) & (v377 ^ 0x93CDC1A4) ^ (2 * (v377 ^ 0x93CDC1A4)) & 0x2AB91342;
  v380 = (v379 ^ 0x380242) & (4 * v378) ^ v378;
  v381 = ((4 * (v379 ^ 0x2A891142)) ^ 0xAAE44D08) & (v379 ^ 0x2A891142) ^ (4 * (v379 ^ 0x2A891142)) & 0x2AB91340;
  v382 = (v381 ^ 0x2AA00100) & (16 * v380) ^ v380;
  v383 = ((16 * (v381 ^ 0x191242)) ^ 0xAB913420) & (v381 ^ 0x191242) ^ (16 * (v381 ^ 0x191242)) & 0x2AB91340;
  v384 = v382 ^ 0x2AB91342 ^ (v383 ^ 0x2A911000) & (v382 << 8);
  v385 = v377 ^ (2
               * ((v384 << 16) & 0x2AB90000 ^ v384 ^ ((v384 << 16) ^ 0x13420000) & (((v383 ^ 0x280342) << 8) & 0x2AB90000 ^ 0x2A80000 ^ (((v383 ^ 0x280342) << 8) ^ 0x39130000) & (v383 ^ 0x280342))));
  v386 = STACK[0x1828];
  LODWORD(STACK[0x1648]) = v331 ^ LODWORD(STACK[0x1828]);
  v387 = v360 ^ v376 ^ v364 ^ v331 ^ v386;
  v388 = (BYTE2(v387) ^ 0xE2) + 915518993;
  v389 = (v388 ^ 0xCD981AE6) & (2 * (((BYTE2(v387) ^ 0xE2) - 18927) & 0x2F7)) ^ ((BYTE2(v387) ^ 0xE2) - 18927) & 0x2F7;
  v390 = ((2 * (v388 ^ 0xCD981B6A)) ^ 0x908A13A) & (v388 ^ 0xCD981B6A) ^ (2 * (v388 ^ 0xCD981B6A)) & 0x412519C;
  v391 = (v390 ^ 0x4124119) & (4 * v389) ^ v389;
  v392 = ((4 * (v390 ^ 0x4125085)) ^ 0x13D94674) & (v390 ^ 0x4125085) ^ (4 * (v390 ^ 0x4125085)) & 0x4F6519C;
  v393 = (v392 ^ 0xD04010) & (16 * v391) ^ v391;
  v394 = ((16 * (v392 ^ 0x4261189)) ^ 0x4F6519D0) & (v392 ^ 0x4261189) ^ (16 * (v392 ^ 0x4261189)) & 0x4F65190;
  v395 = v393 ^ 0x4F6519D ^ (v394 ^ 0x464110D) & (v393 << 8);
  v396 = v388 ^ (2
               * ((v395 << 16) & 0x4F60000 ^ v395 ^ ((v395 << 16) ^ 0x519D0000) & (((v394 ^ 0x92400D) << 8) & 0x4F60000 ^ 0xA60000 ^ (((v394 ^ 0x92400D) << 8) ^ 0x76510000) & (v394 ^ 0x92400D))));
  v397 = 373
       * (((v396 ^ 0xECC84768) + 1605420350) ^ ((v396 ^ 0x3F338CC3) - 1941238121) ^ ((v396 ^ 0x12512266) - 1591107532))
       - 1283078192;
  v398 = (v397 ^ 0xFFDB722B) & (2 * (v397 & 0xFFE37243)) ^ v397 & 0xFFE37243;
  v399 = ((2 * (v397 ^ 0x1A9972AF)) ^ 0xCAF401D8) & (v397 ^ 0x1A9972AF) ^ (2 * (v397 ^ 0x1A9972AF)) & 0xE57A00EC;
  v400 = (v399 ^ 0xC0100028) & (4 * v398) ^ v398;
  v401 = ((4 * (v399 ^ 0x250A0024)) ^ 0x95E803B0) & (v399 ^ 0x250A0024) ^ (4 * (v399 ^ 0x250A0024)) & 0xE57A00EC;
  v402 = v400 ^ 0xE57A00EC ^ (v401 ^ 0x856800A0) & (16 * v400);
  v403 = (16 * (v401 ^ 0x6012004C)) & 0xE57A00E0 ^ 0xA05A002C ^ ((16 * (v401 ^ 0x6012004C)) ^ 0x57A00EC0) & (v401 ^ 0x6012004C);
  v404 = (v402 << 8) & 0xE57A0000 ^ v402 ^ ((v402 << 8) ^ 0x7A00EC00) & v403;
  v405 = (v404 << 16) & 0x657A0000 ^ v404 ^ ((v404 << 16) ^ 0xEC0000) & ((v403 << 8) & 0xE57A0000 ^ 0x57A0000 ^ ((v403 << 8) ^ 0x7A000000) & v403);
  v406 = 0x3EE4F99CBEA615
       * (((v385 ^ 0x4BD727A8F6EDDA63) - 0x4BD727A893C6BA66) ^ ((v385 ^ 0x9BB9706872EDA5DFLL) + 0x64468F97E8393A26) ^ ((v385 ^ 0xD06E57C06C068BDELL) + 0x2F91A83FF6D21425))
       - 0x78E48D9E05C04B61;
  v407 = (v406 ^ 0xA9ECCB07C00A5DC5) & (2 * (v406 & 0xA9C88BA7112A41D4)) ^ v406 & 0xA9C88BA7112A41D4;
  v408 = ((2 * (v406 ^ 0xEA7DCB49C00A5CCDLL)) ^ 0x876A81DDA2403A32) & (v406 ^ 0xEA7DCB49C00A5CCDLL) ^ (2 * (v406 ^ 0xEA7DCB49C00A5CCDLL)) & 0x43B540EED1201D18;
  v409 = (v408 ^ 0x320008C80000810) & (4 * v407) ^ v407;
  v410 = ((4 * (v408 ^ 0x4095402251200509)) ^ 0xED503BB44807464) & (v408 ^ 0x4095402251200509) ^ (4 * (v408 ^ 0x4095402251200509)) & 0x43B540EED1201D18;
  v411 = (v410 ^ 0x29500AA40001400) & (16 * v409) ^ v409;
  v412 = ((16 * (v410 ^ 0x4120404491200919)) ^ 0x3B540EED1201D190) & (v410 ^ 0x4120404491200919) ^ (16 * (v410 ^ 0x4120404491200919)) & 0x43B540EED1201D10;
  v413 = (v412 ^ 0x31400EC10001100) & (v411 << 8) ^ v411;
  v414 = (((v412 ^ 0x40A14002C1200C09) << 8) ^ 0xB540EED1201D1900) & (v412 ^ 0x40A14002C1200C09) ^ ((v412 ^ 0x40A14002C1200C09) << 8) & 0x43B540EED1201D00;
  v415 = v413 ^ 0x43B540EED1201D19 ^ (v414 ^ 0x10040C000000000) & (v413 << 16);
  v416 = v406 ^ (2
               * ((v415 << 32) & 0x43B540EE00000000 ^ v415 ^ ((v415 << 32) ^ 0x51201D1900000000) & (((v414 ^ 0x42B5002ED1200419) << 16) & 0x43B540EE00000000 ^ 0x31100CE00000000 ^ (((v414 ^ 0x42B5002ED1200419) << 16) ^ 0x40EED12000000000) & (v414 ^ 0x42B5002ED1200419))));
  v417 = ((v416 ^ 0x2E33992FF9A9E30DLL) - 0x26300DEA3F63B0FALL) ^ ((v416 ^ 0xEA475FB374A79E11) + 0x1DBB34894D92321ALL);
  LODWORD(v416) = __CFADD__(1042 * (v417 ^ ((v416 ^ 0x6896CCF63E6406FALL) - 0x60955833F8AE550DLL)), 0x1E57E62CC5E31532)+ (((v417 ^ ((v416 ^ 0x6896CCF63E6406FALL) - 0x60955833F8AE550DLL)) * (unsigned __int128)0x412uLL) >> 64)+ 1042* ((__CFADD__(v416 ^ 0x2E33992FF9A9E30DLL, 0xD9CFF215C09C4F06) - 1) ^ (__CFADD__(v416 ^ 0xEA475FB374A79E11, 0x1DBB34894D92321ALL)- 1) ^ (__CFADD__(v416 ^ 0x6896CCF63E6406FALL, 0x9F6AA7CC0751AAF3)- 1))+ 1478736620;
  LODWORD(v417) = (v416 ^ 0x179C072A) & (2 * (v416 & 0xA7DC47B3)) ^ v416 & 0xA7DC47B3;
  LODWORD(v414) = ((2 * (v416 ^ 0x111C094E)) ^ 0x6D809DFA) & (v416 ^ 0x111C094E) ^ (2 * (v416 ^ 0x111C094E)) & 0xB6C04EFC;
  LODWORD(v417) = (v414 ^ 0x24804CD9) & (4 * v417) ^ v417;
  LODWORD(v414) = ((4 * (v414 ^ 0x92404205)) ^ 0xDB013BF4) & (v414 ^ 0x92404205) ^ (4 * (v414 ^ 0x92404205)) & 0xB6C04EFC;
  LODWORD(v417) = (v414 ^ 0x92000AF0) & (16 * v417) ^ v417;
  LODWORD(v414) = ((16 * (v414 ^ 0x24C04409)) ^ 0x6C04EFD0) & (v414 ^ 0x24C04409) ^ (16 * (v414 ^ 0x24C04409)) & 0xB6C04EF0;
  LODWORD(v417) = v417 ^ 0xB6C04EFD ^ (v414 ^ 0x24004E00) & ((_DWORD)v417 << 8);
  LODWORD(v416) = v416 ^ (2
                        * (((_DWORD)v417 << 16) & 0x36C00000 ^ v417 ^ (((_DWORD)v417 << 16) ^ 0x4EFD0000) & (((v414 ^ 0x92C0002D) << 8) & 0x36C00000 ^ 0x36800000 ^ (((v414 ^ 0x92C0002D) << 8) ^ 0xC04E0000) & (v414 ^ 0x92C0002D))));
  v418 = *((_DWORD *)&STACK[0x18D0] + (v397 ^ (2 * v405) ^ 0xF5C7739B) % 0x412);
  LODWORD(STACK[0x1434]) = v418;
  v419 = (((v418 << 24) & 0x82000000 | 0x80001) + 527) ^ ((v418 >> 8) ^ 0x7DF8D97B) & ((v418 << 24) ^ 0x18FFFFFF);
  LODWORD(v417) = (1136
                 * (((-2005215400
                    - (((v273 ^ 0x7304D246) - 1929695814) ^ ((v273 ^ 0x2D9D10C6) - 765268166) ^ ((v273 ^ 0xD3B456E7)
                                                                                               + 743155993))) | v273 ^ 0x72D26B98 | v355) != 0)) ^ LODWORD(STACK[0x1850]);
  LODWORD(STACK[0x1364]) = HIWORD(LODWORD(STACK[0x1498]));
  LODWORD(STACK[0x13C0]) = v386 ^ 0x8D2D9467;
  LODWORD(STACK[0x1570]) = v317 ^ 0x8DA0B9F3;
  LODWORD(STACK[0x144C]) = v345 ^ 0x8D2D9467;
  LODWORD(STACK[0x1838]) = v376 ^ 0xA4E2192E;
  LODWORD(STACK[0x1480]) = *((_DWORD *)&STACK[0x18D0] + (v416 ^ 0xC7DCDA49));
  LODWORD(STACK[0x1498]) = (((2 * v419) & 0x3991070E) - v419 - 482902920) ^ 0x11671EE0;
  v420 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)v417) - 4);
  LODWORD(STACK[0x17BC]) = (v365 >> 16) ^ 0x194A194A;
  LODWORD(STACK[0x1828]) = v349;
  LODWORD(STACK[0x1850]) = v361;
  LODWORD(STACK[0x13B4]) = v387 ^ 0x29CF8D49;
  return v420();
}

#error "1002F1778: too big function (funcsize=0)"

uint64_t sub_100306A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  int v12;

  LODWORD(STACK[0x1790]) = v8;
  LODWORD(STACK[0x1360]) = v7;
  LODWORD(STACK[0x1730]) = v6;
  LODWORD(STACK[0x1544]) = v5;
  v10 = STACK[0x1760];
  v11 = STACK[0x1760] - 2530;
  if (LODWORD(STACK[0x1460]) == v9)
    v12 = 0;
  else
    v12 = -128;
  LODWORD(STACK[0xDA4]) = v12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)v10)
                                                                                       - v11
                                                                                       + 21458))(a1, a2, a3, a4, a5, 671088640);
}

uint64_t sub_100306B14@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0x1520]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x18C0] + 8 * (a2 + v2)))(a1, v3, v4);
}

uint64_t sub_100306B58@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  LODWORD(STACK[0xDC4]) = 0;
  v2 = (a1 - 16471);
  v3 = a1 - 16991;
  if (v1 == -1926392729)
    v4 = 0;
  else
    v4 = -128;
  LODWORD(STACK[0xDF0]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v3) - v2 + 4987))();
}

uint64_t sub_100306BA4(uint64_t a1, int a2)
{
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  LODWORD(STACK[0x16F8]) = a2;
  STACK[0x13E0] = v4;
  LODWORD(STACK[0x16C8]) = v5;
  STACK[0x14A8] = 0;
  LODWORD(STACK[0xDA8]) = 0;
  v6 = (v2 ^ 0xCF) + 893158083;
  v7 = v6 ^ LODWORD(STACK[0xB74]);
  v8 = ((((v3 + 11783) | 0x1250) + 44066) | (2 * ((((unsigned __int16)v2 ^ 0xCF) - 32061) & 0x182))) & v7 ^ (((unsigned __int16)v2 ^ 0xCF) - 32061) & 0x182 ^ (((((unsigned __int16)(((v2 ^ 0xCF) - 32061) & 0x182) >> 7) & 1) << 8) | 0xC040);
  v9 = (2 * v7) & 0xC178 ^ 0x2109 ^ ((2 * v7) ^ 0x8091C2F2) & v7;
  v10 = (4 * v8) & 0x404EE178 ^ v8 ^ ((4 * v8) ^ 0x10100) & v9;
  v11 = (4 * v9) & 0x404EE178 ^ 0x40446019 ^ ((4 * v9) ^ 0x13B85E4) & v9;
  v12 = (16 * v10) & 0x404EE170 ^ v10 ^ ((16 * v10) ^ 0x41400) & v11;
  v13 = (16 * v11) & 0x404EE170 ^ 0x4000E069 ^ ((16 * v11) ^ 0x4EE1790) & v11;
  v14 = v12 ^ (v12 << 8) & 0x404EE100 ^ ((v12 << 8) ^ 0x4414000) & v13 ^ 0x400AE039;
  LODWORD(STACK[0x1768]) = 63
                         * (*(unsigned __int8 *)(STACK[0x18B8]
                                               + (v6 ^ (2
                                                      * ((v14 << 16) & 0x404E0000 ^ v14 ^ ((v14 << 16) ^ 0x61790000) & ((v13 << 8) & 0x404E0000 ^ ((v13 << 8) ^ 0x4EE10000) & v13 ^ 0xE0000))) ^ 0xCACE4F79)) ^ (v2 | 0xD));
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * v3))();
}

uint64_t sub_100306DC8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  int v4;
  uint64_t (*v5)(void);

  STACK[0x14B8] = a3;
  LODWORD(STACK[0x15B0]) = 0;
  LODWORD(STACK[0xE04]) = 0;
  LODWORD(STACK[0x1800]) = 0;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v3 - 9107)) - 4);
  LODWORD(STACK[0x1810]) = v4;
  return v5();
}

uint64_t sub_100306E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;

  LODWORD(STACK[0x156C]) = v9;
  LODWORD(STACK[0x1578]) = v13;
  LODWORD(STACK[0x1584]) = a8;
  LODWORD(STACK[0x159C]) = v10;
  LODWORD(STACK[0x15AC]) = v12;
  LODWORD(STACK[0xDE8]) = ((*(unsigned __int8 *)(v14 + v8) - 84) ^ a7) + ((v11 - 13752) ^ 0xFFFFFFB3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x18C0] + 8 * (v11 - 2722)))(a1, 41);
}

uint64_t sub_100306E6C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x1818]) = v2;
  STACK[0x1208] = (a1 ^ 0xFFFFFFA5 ^ *(unsigned __int8 *)(v3
                                                        + ((-11024 - a1) & ((745 * (v1 ^ 0x1E2Au)) ^ 0x761CLL) ^ 0xD91)))
                - 107;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * v1) - 4))(0);
}

uint64_t sub_100306ED0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;

  v4 = (v0 ^ 0xCF) + 2145358371;
  v5 = ((2 * v4) ^ 0x9C108419) & (v4 ^ 0x80207E2B) ^ v2;
  v6 = v5 & ((11 * (v1 ^ 0x2561)) ^ 0x8A87);
  v7 = (4 * v5) & 0x589CB470 ^ 0x188C2430 ^ ((4 * v5) ^ 0x6272D1C0) & v5;
  v8 = ((16 * v6) & 0xC9000 | 0x8000000) ^ v6 ^ v7 & ((16 * v6) ^ 0xA6623);
  v9 = (16 * v7) & 0x589CB470 ^ 0x5014B070 ^ ((16 * v7) ^ 0x89CB4700) & v7;
  v10 = v8 ^ 0x58143632 ^ (v8 << 8) & 0x589CB400 ^ ((v8 << 8) ^ 0x8824200) & v9;
  STACK[0xDF8] = 63
               * (*(unsigned __int8 *)(v3
                                     + (v4 ^ (2
                                            * ((v10 << 16) & 0x589C0000 ^ v10 ^ ((v10 << 16) ^ 0x34700000) & ((v9 << 8) & 0x589C0000 ^ 0x40080000 ^ ((v9 << 8) ^ 0x1CB40000) & v9))) ^ 0x113916CB)) ^ (v0 | 0xDu));
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * v1))();
}

uint64_t sub_100307060(int a1)
{
  int v1;
  uint64_t (*v2)(void);

  LODWORD(STACK[0xCE4]) = a1;
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v1) - 4);
  LODWORD(STACK[0x15C0]) = STACK[0x16F8];
  return v2();
}

uint64_t sub_10030726C@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x1560]) = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * a1) - 4))(22020096);
}

uint64_t sub_1003072C0(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;

  LODWORD(STACK[0x1528]) = v2;
  LODWORD(STACK[0x1548]) = v4;
  LODWORD(STACK[0x1554]) = v5;
  LODWORD(STACK[0x1858]) = v6;
  v8 = ((2 * (v1 ^ 0x39C328D7)) ^ 0x22811020) & (v1 ^ 0x39C328D7);
  v9 = (4 * (v8 ^ 0x8814)) & 0x9978A990 ^ 0x98180984 ^ ((4 * (v8 ^ 0x8814)) ^ 0x6482A050) & (v8 ^ 0x8814);
  v10 = ((v8 ^ 0x8814) & 0x20063070 ^ v8 & 0x20003060 | 0x81100000 | (16 * ((v8 ^ 0x8814) & 0x20063070 ^ v8 & 0x20003060)) & 0x600100) ^ v9 & ((16 * ((v8 ^ 0x8814) & 0x20063070 ^ v8 & 0x20003060)) ^ 0x180160);
  v11 = (16 * v9) & 0x9978A990 ^ 0x8702094 ^ ((16 * v9) ^ 0x978A9940) & v9;
  v12 = v10 ^ (v10 << 8) & 0x9978A000 ^ ((v10 << 8) ^ 0x9811600) & v11 ^ 0x11712882;
  LODWORD(STACK[0xD38]) = *(unsigned __int8 *)(v7
                                             + (v1 ^ (2
                                                    * ((v12 << 16) & 0x19780000 ^ v12 ^ ((v12 << 16) ^ 0x29940000) & ((v11 << 8) & 0x99780000 ^ a1 ^ ((v11 << 8) ^ 0x78A90000) & v11))) ^ 0x806AD26B)) ^ 0x38;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v3 - 13199)))();
}

uint64_t sub_10030744C()
{
  int v0;

  LODWORD(STACK[0x1840]) = 0;
  LODWORD(STACK[0x1860]) = 0;
  LODWORD(STACK[0x161C]) = 0;
  STACK[0x1258] = 0;
  LODWORD(STACK[0x1868]) = 0;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 - 9160)) - 12))(0);
}

uint64_t sub_100307788(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  unsigned int v6;
  int v7;

  STACK[0xD80] = v5;
  LODWORD(STACK[0x17F0]) = v4;
  LODWORD(STACK[0x1088]) = v3;
  STACK[0x13E0] = LODWORD(STACK[0x1828]) ^ v6;
  v7 = STACK[0x16E0];
  LODWORD(STACK[0x13A8]) = v2 ^ a2;
  LODWORD(STACK[0x1428]) = LODWORD(STACK[0x1858]) ^ 0x194A9467;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v7 - 12665)) - 8))();
}

uint64_t sub_1003077D8()
{
  int v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x1438] = HIWORD(LODWORD(STACK[0x1678]));
  v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 - 14346))
                                                                                             - 4);
  STACK[0x1380] = 14;
  STACK[0xCC8] = STACK[0xA90];
  LODWORD(STACK[0x1130]) = STACK[0x15E4];
  LODWORD(STACK[0x1094]) = STACK[0x1458];
  LODWORD(STACK[0xDF0]) = STACK[0x1148];
  return v1(612897155, 80, 1074069640, 3238843220, 3087007744, 4067622912, 90112);
}

uint64_t sub_100307890(int a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unint64_t v24;
  unsigned int v25;
  unint64_t v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned __int8 v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unint64_t v92;
  int v93;
  unsigned int v94;
  int v95;
  unint64_t v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unint64_t v110;
  int v111;
  int v112;
  unint64_t v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unint64_t v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  uint64_t (*v178)(void);

  LODWORD(STACK[0x1338]) = a2;
  LODWORD(STACK[0x1340]) = a1;
  LODWORD(STACK[0x1350]) = v10;
  LODWORD(STACK[0x1358]) = v6;
  LODWORD(STACK[0x1670]) = a6;
  LODWORD(STACK[0x1750]) = LODWORD(STACK[0x1470]) | (LODWORD(STACK[0x15CC]) << 24);
  v12 = STACK[0x15F8];
  v13 = STACK[0x1790];
  LODWORD(STACK[0x15CC]) = a4;
  v14 = v13 ^ v12;
  LODWORD(STACK[0x1790]) = v8 ^ v9;
  v15 = (((32 * (STACK[0x17BC] & 7)) | (LODWORD(STACK[0x17BC]) >> 3)) ^ 0x75) + 710944437;
  v16 = ((2 * (v15 & 0x209B ^ 0x23108049)) ^ 0x44210492) & (v15 ^ 0xF68F68D2) ^ v15 & 0x209B ^ 0x23108049;
  v17 = (2 * (v15 ^ 0xF68F68D2)) & 0x23108248 ^ 0x21108249 ^ ((2 * (v15 ^ 0xF68F68D2)) ^ 0x44210492) & (v15 ^ 0xF68F68D2);
  v18 = (4 * v16) & 0x23108248 ^ v16 ^ ((4 * v16) ^ 0x8C420924) & v17;
  v19 = (4 * v17) & 0x23108248 ^ 0x23108249 ^ ((4 * v17) ^ 0x8C420924) & v17;
  v20 = (16 * v18) & 0x23108240 ^ v18 ^ ((16 * v18) ^ 0x31082490) & v19;
  v21 = (16 * v19) & 0x23108240 ^ 0x2108249 ^ ((16 * v19) ^ 0x31082490) & v19;
  v22 = (v20 << 8) & 0x23108200 ^ v20 ^ ((v20 << 8) ^ 0x10824900) & v21;
  v23 = v15 ^ (2
             * ((v22 << 16) & 0x23100000 ^ v22 ^ ((v22 << 16) ^ 0x2490000) & ((v21 << 8) & 0x23100000 ^ 0x23100000 ^ ((v21 << 8) ^ 0x10820000) & v21)));
  LOBYTE(v22) = STACK[0x16C0] & 0x18;
  v24 = STACK[0xCF8];
  v25 = *(_DWORD *)(STACK[0xCF8] + 4 * (BYTE2(LODWORD(STACK[0x17BC])) ^ 0x2Du));
  v26 = STACK[0x18B8];
  v27 = __ROR4__(*(_DWORD *)(STACK[0xCF8] + 4 * (*(unsigned __int8 *)(STACK[0x18B8] + (v23 ^ 0xD5BEEE09)) ^ 0x38)), 24) ^ 0x2D94678D ^ (((v25 ^ 0x8D2D9467) << ((((((v22 ^ 0xF7) + 27) & 0xA ^ 0x49)+ (((v22 ^ 0xF7) + 27) ^ 0x32)- ((((v22 ^ 0xF7) + 27) ^ 0x32) & 8)) ^ 0x6B)+ (v22 ^ 0x18)))+ ((v25 >> 8) ^ 0x8D2D94));
  v28 = STACK[0x1828];
  v29 = *(_DWORD *)(STACK[0xCF8] + 4 * (BYTE2(LODWORD(STACK[0x1828])) ^ 0x2Du));
  LODWORD(STACK[0x17BC]) = *(_DWORD *)(STACK[0xCF8] + 4 * (HIBYTE(LODWORD(STACK[0x17BC])) ^ 0x8Du)) ^ __ROR4__(STACK[0x1738], 16) ^ (v27 - 1926392729 - ((2 * v27) & 0x1A5B28CE));
  v30 = STACK[0x18A0];
  HIDWORD(v31) = v29 ^ 0x67;
  LODWORD(v31) = v29 ^ LODWORD(STACK[0x18A0]);
  v32 = (LODWORD(STACK[0x1600]) ^ 0x9721C9EA) & ((LODWORD(STACK[0x14B8]) >> 8) ^ 0xFFEAF06B) | (LODWORD(STACK[0x14B8]) >> 8) & 0xDE3615;
  v33 = STACK[0x1838] & 0x994C7C87;
  LOBYTE(v29) = (((2 * (v33 ^ 0x83)) | 0x96) - (v33 ^ 0x83) - 75) ^ 0x49;
  v34 = ((v31 >> 8) - 1926392729 - ((2 * (v31 >> 8)) & 0x1A5B28CE)) ^ *(_DWORD *)(v24 + 4 * (HIBYTE(v28) ^ 0x8D));
  v35 = (LODWORD(STACK[0x14D8]) ^ 0x8D2D9467) << (-113 - ((((2 * v29) | 0x50) - v29 - 40) ^ 0x2E | v33));
  LODWORD(STACK[0x14D8]) = ((v32 ^ 0xF0ADEDFE) - 1926392729 - ((2 * (v32 ^ 0xF0ADEDFE)) & 0x1A5B28CE)) ^ *(_DWORD *)(v24 + 4 * (HIBYTE(v7) ^ 0x8D)) ^ LODWORD(STACK[0x1820]) ^ STACK[0x1644] & 0xD ^ ((v35 - 1926392729 - ((2 * v35) & 0x1A5B28CE)) ^ 0xBFCFF095) & (LODWORD(STACK[0x1644]) ^ 0xFFFFFF72);
  v36 = STACK[0x1658];
  v37 = (LODWORD(STACK[0x14E8]) | 0xBE0E345E)
      - (STACK[0x14E8] & 0x41F1CBA1)
      + (((((v36 & 0x41F22400 ^ 0xF22000) + (v36 & 0x1600400 ^ 0xAF0405E5) - ((v36 & 0x41F22400 ^ 0xF22000) & 0x1600400)) ^ 0x4EABB4F4)
        - 1) ^ 0xA1EFB110)
      + ((71 * (HIBYTE(v36) ^ 0x8D)) ^ 0xB1)
      + ((((2 * (((v36 & 0x41F22400 ^ 0xD8630051) - 1) ^ 0xE9D2C844)) & 0x2640808)
        - (((v36 & 0x41F22400 ^ 0xD8630051) - 1) ^ 0xE9D2C844)
        - 87164679) ^ 0xCA5C34ED)
      + 1;
  v38 = *(unsigned __int8 *)(v26 + ((v37 - 1926392729 - ((2 * v37) & 0x1A5B28CE)) ^ 0x8D2D9467));
  LODWORD(STACK[0x1778]) ^= LODWORD(STACK[0x156C]) ^ (v34 - 1926392729 - ((2 * v34) & 0x1A5B28CE));
  v39 = ((~(((v38 - 84) ^ 0x29) - 107) | 0xFFFFFF00) & (LODWORD(STACK[0x1680]) ^ 0x594F7C45) | (((v38 - 84) ^ 0x29) - 107) & 0xBA) ^ 0x8044430;
  v40 = (-749518829 - (v39 | 0xD3534013) + (v39 | 0x2CACBFEC)) ^ 0x5073E099;
  v41 = STACK[0x17A8];
  HIDWORD(v31) = LODWORD(STACK[0x1440]) ^ 0x9467;
  LODWORD(v31) = LODWORD(STACK[0x1440]) ^ 0x8D2D0000;
  LODWORD(STACK[0x1440]) = LODWORD(STACK[0x1730]) ^ *(_DWORD *)(v24 + 4 * (STACK[0x1528] ^ 0x8D)) ^ (v31 >> 16) ^ (v40 - 1926392729 - ((2 * v40) & 0x1A5B28CE));
  v42 = (LODWORD(STACK[0x17C0]) + 13) | 0x2C0;
  v43 = ((STACK[0x14A8] >> (v42 + 61)) ^ 0x12) + 125872374;
  v44 = ((v43 ^ 0xF3F15508) << (LODWORD(STACK[0x16E0]) + 35)) & 0x882A904 ^ 0x882A504 ^ (((v43 ^ 0xF3F15508) << (LODWORD(STACK[0x16E0]) + 35)) ^ 0x14115808) & (v43 ^ 0xF3F15508);
  v45 = (4 * v44) & 0xB8EAD04 ^ 0x1840904 ^ ((4 * v44) ^ 0x2E3AB410) & v44;
  v46 = (16 * v45) & 0xB8EAD00 ^ 0x3042D04 ^ ((16 * v45) ^ 0xB8EAD040) & v45;
  v47 = ((2 * (v43 & 0xC ^ 0xB8E0504)) ^ 0x14115808) & (v43 ^ 0xF3F15508) ^ v43 & 0xC ^ 0xB8E0504;
  v48 = v47 ^ 0xA0C0400 ^ ((4 * v47) ^ 0x2E3AB410) & v44;
  v49 = (16 * v48) & 0xB8EAD00 ^ v48 ^ ((16 * v48) ^ 0x18409040) & v45;
  v50 = v49 ^ (v49 << 8) & 0xB8EAD00 ^ ((v49 << 8) ^ 0x84890400) & v46 ^ 0x2822000;
  LOBYTE(v43) = *(_BYTE *)(v26
                         + (v43 ^ (2
                                 * ((v50 << 16) & 0xB8E0000 ^ v50 ^ ((v50 << 16) ^ 0x2D040000) & ((v46 << 8) & 0xB8E0000 ^ 0x1020000 ^ ((v46 << 8) ^ 0x8EAD0000) & v46))) ^ 0xFD6AA204));
  v51 = STACK[0x1514];
  v52 = *(_DWORD *)(v24 + 4 * (BYTE1(LODWORD(STACK[0x1514])) ^ 0x94u));
  HIDWORD(v31) = v52 ^ 0x9467;
  LODWORD(v31) = v52 ^ 0x8D2D0000;
  v53 = v31 >> 16;
  v54 = *(_DWORD *)(v24 + 4 * (BYTE2(LODWORD(STACK[0x1514])) ^ 0x2Du));
  HIDWORD(v31) = v54 ^ 0x67;
  LODWORD(v31) = v54 ^ v30;
  v55 = (((*(_DWORD *)(v24 + 4 * STACK[0x1518]) << 24) ^ 0x207ED9F2) & ((*(_DWORD *)(v24 + 4 * STACK[0x1518]) >> 8) ^ 0xFF72F062) | (*(_DWORD *)(v24 + 4 * STACK[0x1518]) >> 8) & 0x81260D) ^ 0x30002000;
  v56 = (-1409408322 - (v55 | 0xABFE22BE) + (v55 | 0x5401DD41)) ^ 0x23FE00B7;
  LODWORD(STACK[0x1528]) = v14 ^ (v56 - 1926392729 - ((2 * v56) & 0x1A5B28CE));
  v57 = (v31 >> 8) ^ v53 ^ *(_DWORD *)(v24 + 4 * (HIBYTE(v51) ^ 0x8D));
  v58 = *(_DWORD *)(v24 + 4 * ((((v43 ^ 9) + (v43 ^ 0x36)) & 0x3F) * (v43 ^ 9)));
  v59 = (((v58 << 16) ^ 0x8314FE55) & (HIWORD(v58) ^ 0xFFFF735A) | HIWORD(v58) & 0x1AA) ^ 0xE888010A;
  v60 = ((2 * v59) | 0x2003DB82) - v59;
  v61 = STACK[0x15DC];
  v62 = ((71 * HIBYTE(LODWORD(STACK[0x15DC]))) ^ 0xB1) + 315754653;
  v63 = (2 * (v62 & 0x1C2)) & 0x300 ^ v62 & 0x1C2 ^ ((2 * (v62 & 0x1C2)) | 0x1000) & (v62 ^ 0xF372FC8A);
  v64 = (2 * (v62 ^ 0xF372FC8A)) & 0x240A348 ^ 0x2449148 ^ ((2 * (v62 ^ 0xF372FC8A)) ^ 0x20A06490) & (v62 ^ 0xF372FC8A);
  v65 = (4 * v63) & 0x1E5CB348 ^ v63 ^ ((4 * v63) ^ 0x186000) & v64;
  v66 = (4 * v64) & 0x1E5CB348 ^ 0x60C3248 ^ ((4 * v64) ^ 0x7972CD20) & v64;
  v67 = v65 ^ 0x1E020B48 ^ (16 * v65) & 0x1E5CB340 ^ ((16 * v65) ^ 0x1E38000) & v66;
  v68 = (16 * v66) & 0x1E5CB340 ^ 0x1A148348 ^ ((16 * v66) ^ 0xE5CB3480) & v66;
  v69 = (v67 << 8) & 0x1E5CB300 ^ v67 ^ ((v67 << 8) ^ 0x5CB34800) & v68;
  v70 = v62 ^ (2
             * ((v69 << 16) & 0x1E5C0000 ^ v69 ^ ((v69 << 16) ^ 0x33480000) & ((v68 << 8) & 0x1E5C0000 ^ 0x24C0000 ^ ((v68 << 8) ^ 0x5CB30000) & v68)));
  LODWORD(STACK[0x1820]) = (v60 + 1878921791) ^ LODWORD(STACK[0x1818]);
  v71 = *(_DWORD *)(v24
                  + 4
                  * ((((2 * (v51 ^ 0xA40000E7)) & 0x4800005C)
                    - (v51 ^ 0xA40000E7)
                    + 428875473) ^ 0xBD901E51));
  LODWORD(STACK[0x1828]) = v57 ^ (((v71 << 8) ^ 0x4073C76A) & (HIBYTE(v71) ^ 0xFFFFFF72) | HIBYTE(v71) & 0x95);
  v72 = (((v61 ^ 0x67) & 0xC0 ^ 0x80 | (v61 ^ 0x67) & 0xC0 ^ 0x40 | ((((((2 * (v58 & 0xFA ^ 0xCA)) | 0x6C) - (v58 & 0xFA ^ 0xCA) - 53) ^ 0xEA) - 1) ^ 0x74 | (((2 * v58) & 0x44) + (v58 & 0xFA ^ 0x37) - 39) ^ 0x88) ^ 0xFB) ^ (-3 * BYTE1(v61)) ^ 0x3C)
      + 2058536771;
  v73 = (2 * (v72 & 0x569)) & 0xFFC1 ^ v72 & 0x569 ^ ((2 * (v72 & 0x569)) | 0x8000) & (v72 ^ 0x55A83F81);
  v74 = (2 * (v72 ^ 0x55A83F81)) & 0x5025EAE8 ^ 0x50242A28 ^ ((2 * (v72 ^ 0x55A83F81)) ^ 0x210AD5D0) & (v72 ^ 0x55A83F81);
  v75 = (4 * v73) & 0x50E5EAE8 ^ v73 ^ ((4 * v73) | 0x50000) & v74;
  v76 = (4 * v74) & 0xD0E5EAE8 ^ 0x90604048 ^ ((4 * v74) ^ 0x4397ABA0) & v74;
  v77 = (16 * v75) & 0x50E5EAE0 ^ v75 ^ ((16 * v75) ^ 0x440000) & v76;
  v78 = (16 * v76) & 0xD0E5EAE0 ^ 0xD0A14068 ^ ((16 * v76) ^ 0xE5EAE80) & v76;
  v79 = v77 ^ (v77 << 8) & 0x50E5EA00 ^ ((v77 << 8) ^ 0x40400000) & v78;
  v80 = *(unsigned __int8 *)(v26
                           + (v72 ^ 0xA54600B9 ^ (2
                                                * (((v79 ^ 0x90E5AAE8) << 16) & 0x50E50000 ^ v79 ^ 0x90E5AAE8 ^ (((v79 ^ 0x90E5AAE8) << 16) ^ 0x6AE80000) & ((v78 << 8) & 0x50E50000 ^ 0x10050000 ^ ((v78 << 8) ^ 0x65EA0000) & v78)))));
  v81 = ((2 * v80) >> 6) ^ (((2 * v80) & 0xFE) >> 4) ^ ((v80 >> 7) & 0xFFFFFE01 | (2
                                                                                                  * v80)) ^ 0xFFFFFFD7;
  v82 = ((LODWORD(STACK[0x1858]) ^ 0xCA8EBBD2) & (HIWORD(LODWORD(STACK[0x1708])) ^ 0xFFFF76FA) | HIWORD(LODWORD(STACK[0x1708])) & 0x442D) ^ 0x8D87E9C1;
  v83 = (v41 | (LODWORD(STACK[0x1690]) << 8)) ^ LODWORD(STACK[0x15E0]);
  v84 = ((v61 & 8) + (v61 ^ 0x29) - ((v61 ^ 0x29) & 8) + 900829440) ^ 0xB2593B21;
  LODWORD(STACK[0x1680]) = *(_DWORD *)(v24 + 4 * HIBYTE(LODWORD(STACK[0x1890]))) ^ (v82
                                                                                    - ((2 * v82) & 0x883E5E9C)
                                                                                    + 1142894414) ^ ((LODWORD(STACK[0x1750]) ^ 0x67000000) - 1926392729 - ((2 * (LODWORD(STACK[0x1750]) ^ 0x67000000)) & 0x1A5B28CE)) ^ 0x97717970 ^ (v83 - 1926392729 - 2 * (v83 & STACK[0x1894] ^ v41 & 8));
  v85 = *(_DWORD *)(v24 + 4 * (((*(_BYTE *)(v26 + (v70 ^ 0xCD272952)) - 84) ^ 0x29) - 107));
  LODWORD(v31) = __ROR4__(*(_DWORD *)(v24 + 4 * ((v81 >> 2) | ((_BYTE)v81 << 6))), 16);
  LODWORD(STACK[0x1818]) = v31 ^ 0x194A194A;
  v86 = (v85 ^ v31 ^ 0x194A194A) - 1926392729 - ((2 * (v85 ^ v31 ^ 0x194A194A)) & 0x1A5B28CE);
  v87 = __ROR4__(*(_DWORD *)(v24 + 4 * BYTE2(v61)), 8) ^ 0xEAA0B9F3;
  LODWORD(v31) = __ROR4__(*(_DWORD *)(v24 + 4 * ((v84 - ((2 * v84) & 0x3C10D8C) - 371145018) ^ 0x6E086CC6)), 24);
  LODWORD(STACK[0x1750]) = v87;
  LODWORD(STACK[0x1600]) = v31 ^ 0xA0B9F3EA ^ v87 ^ v86;
  v88 = *(unsigned __int8 *)(((-3 * HIBYTE(LODWORD(STACK[0x18A8]))) ^ 0xFDu) + v26 + 40108);
  v89 = (v88 >> 7) + 2 * v88;
  v90 = ((v88 >> 7) + 2 * v88);
  v91 = v89 ^ (v90 >> 6) ^ (v90 >> 4) ^ 0xFFFFFFD7;
  v92 = (v91 >> 2) | (v91 << 6);
  v93 = *(_DWORD *)(v24 + 4 * (BYTE2(LODWORD(STACK[0x1860])) ^ 0x2Du));
  v94 = (((2 * (LODWORD(STACK[0x1860]) ^ 0xDB)) & 0x17A)
       - (LODWORD(STACK[0x1860]) ^ 0xDB)
       + 1958391618) ^ 0x84076886;
  HIDWORD(v31) = v93 ^ 0x67;
  LODWORD(v31) = v93 ^ v30;
  v95 = *(_DWORD *)(v24 + 4 * (BYTE1(LODWORD(STACK[0x1860])) ^ 0x94u));
  LODWORD(STACK[0x17C0]) = (v31 >> 8) ^ 0x2D94678D ^ __ROR4__(*(_DWORD *)(v24+ 4* ((-921216410 - (v94 | 0xC9175A66) + (v94 | 0x36E8A599)) ^ 0xC65562E1)), 24) ^ *(_DWORD *)(v24+ 4 * (HIBYTE(LODWORD(STACK[0x1860])) ^ 0x8Du)) ^ ((v95 << 16) ^ 0x94670000 | ((v95 ^ 0x8D2D9467) >> 16));
  v96 = STACK[0x1558];
  v97 = ((LODWORD(STACK[0xD48]) - 3
                                                 * (((v96 ^ 0xC9) + 82) ^ ((v96 ^ 0x2B) - 76) ^ ((v96 ^ 0xE2) + 123))) ^ 0x1B)
      + 1339324087;
  v98 = ((2 * (v97 & 0x3AF)) & 0x440 | v97 & 0x3AF) ^ (2 * (v97 & 0x3AF)) & (v97 ^ 0x28D647CF);
  v99 = (2 * (v97 ^ 0x28D647CF)) & 0x88006060 ^ 0x880A2420 ^ ((2 * (v97 ^ 0x28D647CF)) ^ 0x210000C0) & (v97 ^ 0x28D647CF);
  v100 = ((4 * v98) | 0x318000) & v99 ^ v98 ^ ((4 * v98) & 0x460 | 0xD80000);
  v101 = (4 * v99) & 0x98FA6460 ^ 0x98126460 ^ ((4 * v99) ^ 0x63E99180) & v99;
  v102 = (16 * v100) & 0x18FA6460 ^ v100 ^ ((16 * v100) ^ 0xE460000) & v101;
  v103 = (16 * v101) & 0x98FA6460 ^ 0x10582060 ^ ((16 * v101) ^ 0x8FA64600) & v101;
  v104 = v102 ^ 0x103C0460 ^ (v102 << 8) & 0x98FA6400 ^ ((v102 << 8) ^ 0xA6600000) & v103;
  v105 = *(unsigned __int8 *)(v26
                            + (v97 ^ (2
                                    * ((v104 << 16) & 0x18FA0000 ^ v104 ^ ((v104 << 16) ^ 0x64600000) & ((v103 << 8) & 0x18FA0000 ^ 0x9A0000 ^ ((v103 << 8) ^ 0x7A640000) & v103))) ^ 0x8118EB6F));
  v106 = *(_DWORD *)(v24 + 4 * STACK[0x1530]);
  HIDWORD(v31) = v106 ^ 0x67;
  LODWORD(v31) = v106 ^ v30;
  v107 = v31 >> 8;
  v108 = LODWORD(STACK[0x1810]) ^ 0x52;
  v109 = ((2 * ((v108 + (STACK[0x1810] & 0xEF ^ 0x305CA4AD) - (v108 & 0xFFFFFFEF)) ^ 0x51DCA4DE)) | 0x9305ED2)
       - ((v108 + (STACK[0x1810] & 0xEF ^ 0x305CA4AD) - (v108 & 0xFFFFFFEF)) ^ 0x51DCA4DE);
  v110 = (unint64_t)*(unsigned int *)(v24
                                           + 4
                                           * (((((v105 >> 3) & 0x15 ^ v105) >> 2) | (((v105 >> 3) & 0x15 ^ v105) << 6)) ^ 0x13u)) << 8;
  LODWORD(STACK[0x15F8]) = v110;
  v111 = (BYTE4(v110) & 9 | 0x2001D000) ^ (v110 ^ 0xF85A48F6) & (HIDWORD(v110) ^ 0xFFFFFF72);
  v112 = *(_DWORD *)(v24 + 4 * ((v109 - 77082473) ^ 0x65182F6D));
  HIDWORD(v31) = v112 ^ 0x2D9467;
  LODWORD(v31) = v112 ^ 0x8D000000;
  LODWORD(STACK[0x1470]) = ((v31 >> 24) - 1926392729 - ((2 * (v31 >> 24)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1790]);
  v113 = (unint64_t)*(unsigned int *)(v24 + 4 * STACK[0x1538]) << 16;
  LODWORD(STACK[0x16E0]) = v113;
  LODWORD(STACK[0x1538]) = v107 ^ *(_DWORD *)(v24 + 4 * BYTE3(v96)) ^ ((v113 ^ 0x58FB245B) & (HIDWORD(v113) ^ 0xFFFF2AF6) | WORD2(v113) & 0xDBA4) ^ 0x515B774A ^ (v111 + 1745363457 - ((2 * v111) & 0xD0104B94) + 969);
  STACK[0x1708] = v92;
  v114 = STACK[0x14C8];
  LODWORD(STACK[0x1644]) = v42;
  LODWORD(STACK[0x1690]) = v42 ^ 0x76BA;
  v115 = ((((v92 & 0xDD ^ 0xDD) + (v92 & 0xDD)) ^ HIBYTE(v114) ^ v42 ^ 0xBA) ^ 0x33) + 1112223568;
  LODWORD(STACK[0x18A8]) = v42 + 9728;
  v116 = ((v42 + 9728) ^ 0x2127BC5 ^ (2 * (v115 ^ 0x7C7C0435))) & (v115 ^ 0x7C7C0435) ^ (2 * (v115 ^ 0x7C7C0435)) & 0x40087586;
  v117 = ((4 * v116) ^ 0x28F76470) & (v116 ^ 0x81C06105);
  v118 = v115 & 0x11B2 ^ (2 * (v115 & 0x11B2)) & 0x2104 ^ ((2 * (v115 & 0x11B2)) | 0x20000) & (v115 ^ 0x7C7C0435) ^ 0xC1C81587;
  v119 = ((4 * v118) ^ 0x28D33674) & (v116 ^ 0x81C06105);
  v116 &= 0x2E366068u;
  v120 = v117 ^ v116;
  v121 = v118 ^ v116 ^ v119;
  v122 = ((16 * v120) ^ 0x33F0E068) & (v120 ^ 0x1C06007);
  v123 = ((16 * v121) ^ 0x2F67B818) & (v120 ^ 0x1C06007);
  v120 &= 0x2FF6E068u;
  v124 = v122 ^ v120;
  v125 = v121 ^ v120 ^ v123;
  LOBYTE(v115) = 63
               * (*(_BYTE *)(v26
                           + (v115 ^ (2
                                    * (v125 ^ v124 & 0x2FF6E068 ^ ((v125 << 8) ^ 0xE6836768) & (v124 ^ 0x1C06087) ^ (((v124 << 8) ^ 0xEF96E068) & (v124 ^ 0x1C06087) ^ v124 & 0x2FF6E068) & 0x2FF6E068 ^ (((v125 ^ v124 & 0x2FF6E068 ^ ((v125 << 8) ^ 0xE6836768) & (v124 ^ 0x1C06087)) << 16) ^ 0x3A71E068) & (((v124 << 8) ^ 0xEF96E068) & (v124 ^ 0x1C06087) ^ v124 & 0x2FF6E068 ^ 0x40090000) ^ (((v125 ^ v124 & 0x2FF6E068 ^ ((v125 << 8) ^ 0xE6836768) & (v124 ^ 0x1C06087)) << 16) ^ 0x3A71E068) & 0x41C96000)) ^ 0x3E279ABC)) ^ 9);
  v126 = STACK[0xE24];
  v127 = ((-3 * (HIBYTE(LODWORD(STACK[0xE24])) ^ 0x8D)) ^ 0x1B) + 1613930889;
  v128 = (2 * (v127 ^ 0x3506DC32)) & 0xAA4824EE ^ 0xAA492421 ^ ((2 * (v127 ^ 0x3506DC32)) ^ 0x551449DE) & (v127 ^ 0x3506DC32);
  v129 = (4 * v128) & 0xAACB24EC ^ 0xC32443 ^ ((4 * v128) ^ 0xAB2C93BC) & v128;
  LODWORD(v96) = (16 * v129) & 0xAACB24E0 ^ 0x249200F ^ ((16 * v129) ^ 0xACB24EF0) & v129;
  v130 = (2 * (v127 & 0x80DD)) & 0x100AA ^ v127 & 0x80DD ^ ((2 * (v127 & 0x80DD)) | 0x4000) & (v127 ^ 0x3506DC32);
  v131 = (4 * v130) & 0x2ACB24EC ^ v130 ^ ((4 * v130) | 0x8000) & v128;
  v132 = (16 * v131) & 0x2ACB24E0 ^ v131 ^ ((16 * v131) ^ 0x20000) & v129;
  v133 = v132 ^ (v132 << 8) & 0x2ACB2400 ^ ((v132 << 8) ^ 0x2200000) & v96 ^ 0xA8C904EF;
  v134 = v127 ^ (2
               * ((v133 << 16) & 0x2ACB0000 ^ v133 ^ ((v133 << 16) ^ 0x24EF0000) & (((_DWORD)v96 << 8) & 0x2ACB0000 ^ 0x20CB0000 ^ (((_DWORD)v96 << 8) ^ 0x4B240000) & v96)));
  v135 = (1006471215 - (v11 ^ 0x79 | 0x3BFD882F) + (v11 ^ 0x79 | 0xC40277D0)) ^ 0xEC2270CA;
  v136 = *(unsigned __int8 *)(v26 + (v134 ^ 0x8BCDB103));
  STACK[0x1810] = ((v136 ^ (v136 >> 3) & 0x15 ^ 0x4C) >> 2) | ((v136 ^ (v136 >> 3) & 0x15) << 6);
  v137 = *(_DWORD *)(v24 + 4 * ((426548972 - (v135 | 0x196C9EEC) + (v135 | 0xE6936113)) ^ 0xCEB36617));
  LODWORD(STACK[0x1558]) = v137;
  LODWORD(STACK[0x1518]) = v137 << 8;
  v138 = ((v137 << 8) ^ 0x8C1E3C7) & (HIBYTE(v137) ^ 0xFFFFFF6A);
  v139 = *(_DWORD *)(v24 + 4 * (STACK[0x1560] ^ 0x2D));
  LODWORD(v92) = *(_DWORD *)(v24 + 4 * (BYTE2(v114) ^ 0x2Du));
  HIDWORD(v31) = v139 ^ 0x67;
  LODWORD(v31) = v139 ^ v30;
  v140 = v31 >> 8;
  LODWORD(v96) = ((v92 ^ 0x8D2D9467) << ((((STACK[0x1378] & 0x18)
                                                       - ((2 * LODWORD(STACK[0x1378])) & 0x10)
                                                       - 81) & 0xF8 ^ 0xA8)
                                                     + (STACK[0x1378] & 0x18 ^ 0x18)))
               + ((v92 >> 8) ^ 0x8D2D94);
  v141 = *(_DWORD *)(v24 + 4 * (BYTE1(v114) ^ 0x94u));
  LODWORD(v92) = v141 << 16;
  v141 >>= 16;
  LODWORD(STACK[0x1530]) = v141;
  v142 = *(_DWORD *)(v24 + 4 * (BYTE2(v11) ^ 0x2Du));
  LODWORD(v92) = ((v141 ^ 0x3D35AF4D) & (v92 ^ 0xEBD0FFFF) | v92 & 0xC2CA0000) ^ 0xC2C0451A;
  HIDWORD(v31) = v142 ^ 0x67;
  LODWORD(v31) = v142 ^ v30;
  LODWORD(STACK[0x1890]) = v96 ^ (((v92 - ((2 * v92) & 0x4DD9CD3C) - 1494423906) ^ 0xD95B81E4)
                                - 1926392729
                                - 2
                                * (((v92 - ((2 * v92) & 0x4DD9CD3C) - 1494423906) ^ 0xD95B81E4) & 0xD2D9477 ^ (v92 - ((2 * v92) & 0x4DD9CD3C) - 1494423906) & 0x10)) ^ *(_DWORD *)(v24 + 4 * v115);
  v143 = (v31 >> 8) ^ ((v138 & 0x7FAD3D83 ^ 0x35853483) + ((v138 & 0x8052C244 | HIBYTE(v137) & 0x38) ^ 0x24029) - 1);
  v144 = *(_DWORD *)(v24 + 4 * (STACK[0x1578] ^ 0x94));
  HIDWORD(v31) = v144 ^ 0x9467;
  LODWORD(v31) = v144 ^ 0x8D2D0000;
  v145 = v140 ^ 0x8D2D9467 ^ (v31 >> 16);
  BYTE3(v31) = HIBYTE(*(_DWORD *)(v24
                                + 4
                                * ((((2 * (v126 ^ 0x500011F5)) & 0x216C)
                                  - (v126 ^ 0x500011F5)
                                  - 160914615) ^ 0xA668B2DB))) ^ 0x8D;
  LODWORD(STACK[0x1730]) = v145;
  LOBYTE(v145) = ((BYTE3(v31) + 103 - ((2 * BYTE3(v31)) & 0xCE)) ^ v145) & 0x17;
  LODWORD(v96) = *(_DWORD *)(v24
                           + 4
                           * (((v114 ^ 0x24) - ((2 * (v114 ^ 0x24)) & 0x70) + 1336) ^ 0x57Bu));
  HIDWORD(v31) = v96 ^ 0x2D9467;
  LODWORD(v31) = v96 ^ 0x8D000000;
  LODWORD(STACK[0x1858]) = v31 >> 24;
  LODWORD(v96) = *(_DWORD *)(v24
                           + 4
                           * (*(unsigned __int8 *)((((v11 >> 3) & 0xE0 | ((unsigned __int16)v11 >> 11)) ^ 0xB)
                                                 + v26
                                                 + 4432) ^ 0x38));
  LODWORD(STACK[0x14C8]) = *(_DWORD *)(v24 + 4 * HIBYTE(LODWORD(STACK[0x17F0]))) ^ 0x8D2D9467 ^ (((v96 ^ 0x8D2D9467) << (((v145 ^ 0x17) + v145) & 0x30)) | WORD1(v96) ^ 0x8D2D) ^ ((v143 ^ 0x10D2F064) - 1926392729 - 2 * ((v143 ^ 0x10D2F064) & 0xD2D9477 ^ v143 & 0x10));
  v146 = STACK[0x1590];
  v147 = LODWORD(STACK[0x1590]) ^ 0x2C;
  v148 = STACK[0x15E4];
  LODWORD(v96) = *(_DWORD *)(v24
                           + 4
                           * (((71 * (BYTE2(v148) ^ 0x2D)) ^ 0xA5 ^ *(_BYTE *)(v26
                                                                                              + (71 * (BYTE2(v148) ^ 0x2D))
                                                                                              + 22881))
                                             - 107));
  HIDWORD(v31) = v96 ^ 0x67;
  LODWORD(v31) = v96 ^ v30;
  LODWORD(v92) = (-1010768692
                - (LODWORD(STACK[0x15E4]) ^ 0xF647FA7F | 0xC3C0E4CC)
                + (LODWORD(STACK[0x15E4]) ^ 0xF647FA7F | 0x3C3F1B33)) ^ 0x4A30C402;
  v149 = BYTE3(STACK[0x1588]);
  STACK[0x13E0] = v149;
  v150 = (v31 >> 8) ^ *(_DWORD *)(v24 + 4 * v149) ^ __ROR4__(*(_DWORD *)(v24+ 4* ((1515613173- (v92 | 0x5A566BF5)+ (v92 | 0xA5A9940A)) ^ 0x25E1B123)), 24);
  LODWORD(v96) = *(_DWORD *)(v24 + 4 * (BYTE1(v146) ^ 0x94u));
  LODWORD(STACK[0x1514]) = WORD1(v96);
  LODWORD(v96) = (WORD1(v96) ^ 0xF9331201) & (((_DWORD)v96 << 16) ^ 0x6B5CFFFF) | ((_DWORD)v96 << 16) & 0x6CC0000;
  LODWORD(v92) = *(_DWORD *)(v24 + 4 * (BYTE2(v146) ^ 0x2Du));
  LODWORD(STACK[0x14E8]) = (_DWORD)v92 << 24;
  LODWORD(v92) = (((_DWORD)v92 << 24) ^ 0xC43156E0) & ((v92 >> 8) ^ 0xFF307366) | (v92 >> 8) & 0xCEA91F;
  v151 = *(_DWORD *)(v24
                   + 4
                   * ((((((2 * v147) | 0x6A31AE6A) - v147 - 890820405) & 0x1B624705 ^ 0xB204601)
                     + ((((2 * v147) | 0x6A31AE6A) - v147 - 890820405) ^ 0x14DA193C)
                     - (((((2 * v147) | 0x6A31AE6A) - v147 - 890820405) ^ 0x14DA193C) & 0x1B624705)) ^ 0x3AA08947u));
  v152 = STACK[0x15E0];
  STACK[0xDB8] = HIBYTE(v151) ^ 0x8D;
  v153 = *(_DWORD *)(v24 + 4 * (HIBYTE(v146) ^ 0x8D));
  v154 = ((v96 & 0x36E9FE15 ^ 0x34A1BE04) + (v96 & 0xC91601EA ^ 0x400C1) - 1) ^ 0x44FFB58F;
  LODWORD(STACK[0x1658]) = v154;
  LODWORD(STACK[0x17D8]) = (((HIBYTE(v151) ^ 0x8D | (v151 << 8)) ^ v152)
                          - 1926392729
                          - 2
                          * (((HIBYTE(v151) ^ 0x8D | (v151 << 8)) ^ v152) & 0xD2D947F ^ (HIBYTE(v151) ^ 0x8D) & 0x18)) ^ v153 ^ v154 ^ ((v92 & 0x1A7BC1DA ^ 0xA198153) + (v92 & 0xE5843E25) - 1);
  v155 = *(_DWORD *)(v24 + 4 * (BYTE1(LODWORD(STACK[0x15D0])) ^ 0x94u));
  HIDWORD(v31) = v155 ^ 0x9467;
  LODWORD(v31) = v155 ^ 0x8D2D0000;
  v156 = v31 >> 16;
  v157 = ((STACK[0x15D0] & 0xD6 ^ 0xAE1062D3) - (LODWORD(STACK[0x15D0]) | 0xFFFFFFD6) - 2) ^ 0xAF0843D4;
  v158 = 1942372430 - (v157 | 0x73C6404E) + (v157 | 0x8C39BFB1);
  v159 = *(_DWORD *)(v24 + 4 * (BYTE2(LODWORD(STACK[0x15D0])) ^ 0x2Du));
  v160 = ((v159 << 24) ^ 0x1D25329D) & ((v159 >> 8) ^ 0xFFE89E4B) | (v159 >> 8) & 0xDACD62;
  v161 = (v160 & 0x442BD65B ^ 0x40235219) + (v160 & 0xBBD429A4 ^ 0x81C00801);
  v162 = *(_DWORD *)(v24 + 4 * (v158 ^ 0x8D219EF9));
  v163 = (HIBYTE(v162) ^ 0x9F) + 305574008;
  v164 = (2 * (((HIBYTE(v162) ^ 0x9F) - 20360) & 0xA08A)) & (v163 ^ 0x2CCCEFBF) ^ (((HIBYTE(v162) ^ 0x9F) - 20360) & 0xA08A | 0x41050535) ^ ((2 * (((HIBYTE(v162) ^ 0x9F) - 20360) & 0xA08A)) & 0x10114 | 0x80000A00);
  v165 = (2 * (v163 ^ 0x2CCCEFBF)) & 0x41041F34 ^ 0x41050115 ^ ((2 * (v163 ^ 0x2CCCEFBF)) ^ 0x20A1E6A) & (v163 ^ 0x2CCCEFBF);
  v166 = (4 * v164) & 0x51E34 ^ v164 ^ ((4 * v164) ^ 0x4147CD4) & v165;
  v167 = (4 * v165) & 0xC1051F34 ^ 0xC1010321 ^ ((4 * v165) ^ 0x4147CD4) & v165;
  v168 = (16 * v166) & 0xC1051F30 ^ v166 ^ ((16 * v166) ^ 0x10103210) & v167;
  v169 = (16 * v167) & 0xC1051F30 ^ 0xC1040C25 ^ ((16 * v167) ^ 0x1051F350) & v167;
  v170 = v168 ^ 0x1051F04 ^ (v168 << 8) & 0xC1051F00 ^ ((v168 << 8) ^ 0x1113100) & v169;
  LOBYTE(v145) = 63
               * (*(_BYTE *)(v26
                           + (v163 ^ 0x6DC9CEE0 ^ (2
                                                 * ((v170 << 16) & 0x41050000 ^ v170 ^ ((v170 << 16) ^ 0x1F350000) & ((v169 << 8) & 0x41050000 ^ ((v169 << 8) ^ 0x51F0000) & v169 ^ 0x40000000))))) ^ 9);
  LODWORD(STACK[0x1738]) = v162;
  v171 = ((v145 | (v162 << 8)) ^ v152)
       - 1926392729
       - 2 * (((v145 | (v162 << 8)) ^ v152) & STACK[0x1894] ^ v145 & 8);
  v172 = STACK[0x15E8];
  LODWORD(STACK[0x17F0]) = HIWORD(LODWORD(STACK[0x15E8])) ^ 0x8D2D;
  LODWORD(v92) = LODWORD(STACK[0x1644]) ^ (50
                                         * ((((BYTE2(v172) ^ 0x2D) + 62) ^ BYTE2(v172) ^ 0x2D) == 0));
  v173 = v148 >> 8;
  v174 = v150;
  HIDWORD(v31) = *(_DWORD *)(v24 + 4 * (BYTE1(LODWORD(STACK[0x1800])) ^ 0x4Fu));
  LODWORD(v31) = HIDWORD(v31);
  v175 = *(_DWORD *)(v24 + 4 * LODWORD(STACK[0x15CC]));
  LODWORD(STACK[0x17A8]) = (v31 >> 16) ^ __ROR4__(*(_DWORD *)(v24 + 4 * (BYTE2(LODWORD(STACK[0x1800])) ^ 0xCCu)), 8) ^ LODWORD(STACK[0x1720]) ^ *(_DWORD *)(v24 + 4 * (HIBYTE(LODWORD(STACK[0x1800])) ^ 0xA9u));
  LODWORD(STACK[0xE20]) = __ROR4__(v175, 8) ^ 0xEAA0B9F3;
  LODWORD(STACK[0x1590]) = *(_DWORD *)(v24 + 4 * (LODWORD(STACK[0x15AC]) ^ 0x67u));
  v176 = *(_DWORD *)(v24
                   + 4
                   * (((*(_BYTE *)(((71 * (v173 ^ 0x94)) ^ 0xB1u) + v26 + 22623) - 84) ^ 0x29)
                                     - 107));
  v177 = (v161 - 1) ^ 0x3663F1E3;
  LODWORD(STACK[0x1790]) = v177;
  HIDWORD(v31) = v176;
  LODWORD(v31) = v176;
  LODWORD(STACK[0x1644]) = v174 ^ 0xB9F3EAA0 ^ (v31 >> 16);
  v178 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)v92) - 12);
  LODWORD(STACK[0x1578]) = LODWORD(STACK[0x14D8]) ^ 0x32E264FF;
  LODWORD(STACK[0x1390]) = v171;
  LODWORD(STACK[0x1664]) = v177 ^ v156;
  return v178();
}

uint64_t sub_100309F28(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  uint64_t (*v36)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  LODWORD(STACK[0x1588]) = v7;
  LODWORD(STACK[0x17F0]) = v19;
  LODWORD(STACK[0x1088]) = v17;
  v21 = STACK[0x1690];
  v22 = (LODWORD(STACK[0x1690]) - 22957) | 0x1000;
  LODWORD(STACK[0x1748]) = v22;
  v23 = (v22 - 1918851281) ^ v14;
  v24 = STACK[0x1338];
  LODWORD(STACK[0x1490]) = LODWORD(STACK[0x15F8]) ^ LODWORD(STACK[0x1338]);
  LODWORD(STACK[0x1810]) = LODWORD(STACK[0x1518]) ^ v24;
  v25 = (((v16 & 0x58000000) + (v16 & 0x5E000000 ^ 0x5A000000)) | 0x14609C0)
      - ((v16 & 0x5E000000 ^ 0x5A000000) & 0xF9FFFFFF);
  v26 = (((a2 ^ 0x5F6670FD) + 2095078485) ^ ((a2 ^ 0xE2CBB681) - 1051878871) ^ ((a2 ^ 0xECF9814D) - 813715995))
      - 1504507077
      + (((v25 & 0x6E000000 ^ 0xA9844A1) + (v25 & 0x90000000 ^ 0x10001005) - 2) ^ 0xE05C | ((v16 & 0x5E000000 ^ 0x820648A0)
                                                                                          - ((2
                                                                                            * (v16 & 0x5E000000 ^ 0x820648A0)) & 0x2C0C9000)
                                                                                          + 910084867) ^ 0xF2200000);
  v27 = (v26 ^ 0xF4DA20A8) & (2 * (v26 & 0xE6DA892C)) ^ v26 & 0xE6DA892C;
  v28 = ((2 * (v26 ^ 0xB47A30B8)) ^ 0xA5417328) & (v26 ^ 0xB47A30B8) ^ (2 * (v26 ^ 0xB47A30B8)) & 0x52A0B994;
  v29 = (v28 ^ 0x4000A104) & (4 * v27) ^ v27;
  v30 = ((4 * (v28 ^ 0x52A08894)) ^ 0x4A82E650) & (v28 ^ 0x52A08894) ^ (4 * (v28 ^ 0x52A08894)) & 0x52A0B994;
  v31 = (v30 ^ 0x4280A000) & (16 * v29) ^ v29;
  v32 = ((16 * (v30 ^ 0x10201984)) ^ 0x2A0B9940) & (v30 ^ 0x10201984) ^ (16 * (v30 ^ 0x10201984)) & 0x52A0B990;
  v33 = v31 ^ 0x52A0B994 ^ (v32 ^ 0x2009994) & (v31 << 8);
  LODWORD(STACK[0x1154]) = STACK[0x13A8];
  LODWORD(STACK[0x1800]) = LODWORD(STACK[0x16C0]) ^ 0x8D2D9467;
  LODWORD(STACK[0x1560]) = LODWORD(STACK[0x17BC]) ^ 0x194A194A;
  LODWORD(STACK[0x1450]) = LODWORD(STACK[0x1820]) ^ 0x6FFA13B6;
  LODWORD(STACK[0x1420]) = LODWORD(STACK[0x1828]) ^ 0x6DE7A0EF;
  LODWORD(STACK[0x1378]) = v10 ^ 0x8DA0B9F3;
  LODWORD(STACK[0xE34]) = v18 ^ 0x194A194A;
  LODWORD(STACK[0x14A4]) = LODWORD(STACK[0x16E0]) ^ 0x194A9467;
  LODWORD(STACK[0x1158]) = v6 ^ 0xF3EAA0B9;
  LODWORD(STACK[0x1710]) = LODWORD(STACK[0x17A8]) ^ 0x7EC734DE;
  LODWORD(STACK[0x1718]) = LODWORD(STACK[0x1340]) ^ 0x8DA0B9F3;
  STACK[0x1438] = HIWORD(LODWORD(STACK[0x1678]));
  LODWORD(STACK[0x16C8]) = v20 ^ 0x8D2D9467;
  LODWORD(STACK[0x1828]) = a6 ^ 0x2D94678D;
  v34 = LODWORD(STACK[0x1890]) ^ 0x8D2D9467;
  v35 = STACK[0x1858];
  LODWORD(STACK[0x15DC]) = v34;
  LODWORD(STACK[0x14D8]) = v34 ^ v35;
  LODWORD(STACK[0x1820]) = LODWORD(STACK[0x17D8]) ^ 0xA9A4FEA6;
  LODWORD(STACK[0x1838]) = v15 ^ 0x8D2D9467;
  LODWORD(STACK[0x17D8]) = STACK[0x1130];
  LODWORD(STACK[0x116C]) = v12 ^ 0x194A194A;
  LODWORD(STACK[0x15B0]) = a4 ^ 0x194A9467;
  LODWORD(STACK[0x144C]) = v9 ^ 0xEA2D9467;
  LODWORD(STACK[0x1488]) = LODWORD(STACK[0x14E8]) ^ 0xEA2D9467;
  LODWORD(STACK[0x1428]) = LODWORD(STACK[0x1514]) ^ 0x8D2D194A;
  STACK[0xD80] = v11 ^ 0x67u;
  LODWORD(STACK[0x1514]) = LODWORD(STACK[0x1530]) ^ 0x8D2D194A;
  LODWORD(STACK[0x1708]) = v26 ^ (2
                                * ((v33 << 16) & 0x52A00000 ^ v33 ^ ((v33 << 16) ^ 0x39940000) & (((v32 ^ 0x50A02094) << 8) & 0x52A00000 ^ 0x52000000 ^ (((v32 ^ 0x50A02094) << 8) ^ 0x20B90000) & (v32 ^ 0x50A02094)))) ^ 0xEFB66E63;
  v36 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v21)
                                                                                             - 4);
  LODWORD(STACK[0x1130]) = v16 ^ 0xEA2D9467;
  LODWORD(STACK[0x1094]) = STACK[0x1458];
  LODWORD(STACK[0xDF0]) = STACK[0x1148];
  LODWORD(STACK[0x13A8]) = v23;
  LODWORD(STACK[0x1260]) = v8;
  v37 = LODWORD(STACK[0x1460]);
  LODWORD(STACK[0x16E0]) = v13;
  v38 = LODWORD(STACK[0x1584]);
  v39 = LODWORD(STACK[0x16B0]);
  v40 = LODWORD(STACK[0x16D8]);
  v41 = LODWORD(STACK[0x1554]);
  v42 = LODWORD(STACK[0x13F0]);
  LODWORD(STACK[0x15F0]) = a3;
  return v36(v39, v40, LODWORD(STACK[0x1558]), v37, v38, v42, v41);
}

uint64_t sub_10030A3B8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  char v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  unint64_t v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unint64_t v140;
  unsigned __int8 v141;
  int v142;
  int v143;
  int v144;
  unint64_t v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  unint64_t v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  int v243;
  BOOL v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  int v259;
  int v260;

  STACK[0x1170] = STACK[0x1170] | (LODWORD(STACK[0x1360]) << 8);
  v14 = STACK[0xCF8];
  v15 = *(_DWORD *)(STACK[0xCF8] + 4 * STACK[0x1420]);
  HIDWORD(v16) = v15 ^ 0x9467;
  LODWORD(v16) = v15 ^ 0x8D2D0000;
  LODWORD(STACK[0x1810]) = v16 >> 16;
  v17 = STACK[0x18A0];
  HIDWORD(v16) = LODWORD(STACK[0x16B0]) ^ 0x67;
  LODWORD(v16) = LODWORD(STACK[0x16B0]) ^ LODWORD(STACK[0x18A0]);
  LODWORD(STACK[0x1850]) = v16 >> 8;
  LODWORD(STACK[0x1818]) = ((LODWORD(STACK[0x13D8]) ^ 0x8D2D9467) << ((((v11 | 7) - 1) & 8) + (~v11 & 8)))
                         + LODWORD(STACK[0x1368]);
  v18 = ((-3 * HIWORD(LODWORD(STACK[0x1710]))) ^ 0x1B) + 1127936047;
  v19 = (2 * (v18 ^ 0xC59CC497)) & 0x9486AA0 ^ 0x94922A0 ^ ((2 * (v18 ^ 0xC59CC497)) ^ 0x82A21540) & (v18 ^ 0xC59CC497);
  v20 = (4 * v19) & 0x79596EA0 ^ 0x18184420 ^ ((4 * v19) ^ 0xE565BA80) & v19;
  v21 = (16 * v20) & 0x79596EA0 ^ 0x684904A0 ^ ((16 * v20) ^ 0x9596EA00) & v20;
  v22 = (v18 ^ 0xC59CC497) & (2 * (v18 & 0x37)) ^ v18 & 0x37 ^ ((32 * (((v18 & 0x37) >> 4) & 1)) | 0x10190080);
  v23 = (4 * v22) & 0x79596EA0 ^ v22 ^ ((4 * v22) ^ 0x40638200) & v19;
  v24 = (16 * v23) & 0x79596EA0 ^ v23 ^ ((16 * v23) ^ 0x59E2800) & v20;
  v25 = v24 ^ (v24 << 8) & 0x79596E00 ^ ((v24 << 8) ^ 0x41CA8000) & v21 ^ 0x6950A420;
  v26 = v18 ^ (2
             * ((v25 << 16) & 0x79590000 ^ v25 ^ ((v25 << 16) ^ 0x6EA00000) & ((v21 << 8) & 0x79590000 ^ 0x20110000 ^ ((v21 << 8) ^ 0x596E0000) & v21))) ^ 0x9E777777;
  v27 = STACK[0x18B8];
  v28 = *(unsigned __int8 *)(STACK[0x18B8] + v26) ^ (*(unsigned __int8 *)(STACK[0x18B8] + v26) >> 3) & 0x15;
  v29 = *(_DWORD *)(v14 + 4 * (((v28 ^ 0x4C) >> 2) | ((_BYTE)v28 << 6)));
  v30 = ((v29 << 24) ^ 0x28C640AE) & ((v29 >> 8) ^ 0xFF5A623B) | (v29 >> 8) & 0x39BF51;
  v31 = (v30 & 0x838A72D1 ^ 0x838250C0) + (v30 & 0x7C758D2E ^ 0x30100001);
  v32 = *(_DWORD *)(v14 + 4 * BYTE1(LODWORD(STACK[0x1710])));
  v33 = v32 << 16;
  v34 = HIWORD(v32) ^ 0x7F00682B;
  v35 = (v34 & (v33 ^ 0x6BE9FFFF) | v33 & 0x80FF0000) ^ 0xFF67E506;
  v36 = (v35 - 1926392729 - 2 * (v35 & STACK[0x1894] ^ v34 & 8)) ^ *(_DWORD *)(v14 + 4
                                                                                   * HIBYTE(LODWORD(STACK[0x1710])));
  v37 = v36 - 1926392729 - ((2 * v36) & 0x1A5B28CE);
  v38 = (((2 * (LODWORD(STACK[0x1718]) ^ 0x8A)) | 0xB71E3144)
       - (LODWORD(STACK[0x1718]) ^ 0x8A)
       + 611379038) ^ 0xD9CE12E2;
  v39 = *(_DWORD *)(v14
                  + 4
                  * ((1844494344
                    - (LODWORD(STACK[0x16C8]) ^ 0x24284967 | 0x6DF0C008)
                    + (LODWORD(STACK[0x16C8]) ^ 0x24284967 | 0x920F3FF7)) ^ 0xB62776F7));
  v40 = (((v39 >> 19) & 0xE0 | (v39 >> 27)) ^ 0x28) + 697817504;
  v41 = (v40 ^ 0xA5899F2E) & (2 * (v40 & 0x3B0)) ^ v40 & 0x3B0;
  v42 = (2 * (v40 ^ 0xA5899D0E)) & 0x73E1AABE ^ 0x1020AA82 ^ ((2 * (v40 ^ 0xA5899D0E)) ^ 0x8402457C) & (v40 ^ 0xA5899D0E);
  v43 = (4 * v41) & 0xAAAAAAAA ^ (v41 | 0x30613006) ^ ((((v41 >> 4) & 0x7F) << 6) | 0xC000) & v42;
  v44 = (4 * v42) & 0x73E1AABC ^ 0x30610006 ^ ((4 * v42) ^ 0xCF86AAF8) & v42;
  v45 = (16 * v43) & 0x73E1AAB0 ^ v43 ^ ((16 * v43) ^ 0x6180060) & v44;
  v46 = (16 * v44) & 0x73E1AAB0 ^ 0x41E1001E ^ ((16 * v44) ^ 0x3E1AABE0) & v44;
  v47 = v45 ^ 0x20000898 ^ (v45 << 8) & 0x73E1AA00 ^ ((v45 << 8) ^ 0x61802600) & v46;
  LODWORD(STACK[0x1860]) = *(unsigned __int8 *)(STACK[0x18B8]
                                              + (v40 ^ (2
                                                      * ((v47 << 16) & 0x73E10000 ^ v47 ^ ((v47 << 16) ^ 0x2ABE0000) & ((v46 << 8) & 0x73E10000 ^ 0x12410000 ^ ((v46 << 8) ^ 0x61AA0000) & v46))) ^ 0x74EB62CCu)) | (v39 << 8);
  LODWORD(v16) = __ROR4__(*(_DWORD *)(v14 + 4 * ((-1732331530 - (v38 | 0x98BEB7F6) + (v38 | 0x67414809)) ^ 0x650042A4)), 24);
  v48 = LODWORD(STACK[0x1370]) ^ 0x194A194A ^ ((v16 ^ 0x2D94678D) - 1926392729 - ((2 * (v16 ^ 0x2D94678D)) & 0x1A5B28CE));
  v49 = *(_DWORD *)(v14 + 4 * (STACK[0x1428] ^ 0x2D));
  HIDWORD(v16) = v49 ^ 0x67;
  LODWORD(v16) = v49 ^ v17;
  LODWORD(STACK[0x1788]) = v16 >> 8;
  v50 = STACK[0x1364];
  LODWORD(STACK[0x1740]) = ((((LODWORD(STACK[0x1350]) << 16) ^ 0x2FA2629C) & (v50 ^ 0xFFFF76B1) & 0x8C59C696 | v50 & 0x8402) ^ 0x8841C296)
                         + ((((LODWORD(STACK[0x1350]) << 16) ^ 0x2FA2629C) & (v50 ^ 0xFFFF76B1) | v50 & 0x9D63) ^ 0x41A1421)
                         - (((((LODWORD(STACK[0x1350]) << 16) ^ 0x2FA2629C) & (v50 ^ 0xFFFF76B1) | v50 & 0x9D63) ^ 0x41A1421) & 0x8C59C696);
  v51 = ((-3 * BYTE1(LODWORD(STACK[0x1678]))) ^ 0x1B) + 325897136;
  v52 = (2 * (v51 & 0x6B6)) & 0xFFC7 ^ v51 & 0x6B6 ^ ((2 * (v51 & 0x6B6)) | 0x9000) & (v51 ^ 0x995E51E2);
  v53 = (2 * (v51 ^ 0x995E51E2)) & 0x10440F54 ^ 0x10459154 ^ ((2 * (v51 ^ 0x995E51E2)) ^ 0x8A121EA8) & (v51 ^ 0x995E51E2);
  v54 = (4 * v52) & 0x75CD9F54 ^ v52 ^ ((4 * v52) ^ 0x56000) & v53;
  v55 = (4 * v53) & 0x75CD9F54 ^ 0x20C98204 ^ ((4 * v53) ^ 0xD7367D50) & v53;
  v56 = (16 * v54) & 0x75CD9F50 ^ v54 ^ ((16 * v54) ^ 0x458000) & v55;
  v57 = (16 * v55) & 0x75CD9F50 ^ 0x21040A14 ^ ((16 * v55) ^ 0x5CD9F540) & v55;
  v58 = v56 ^ (v56 << 8) & 0x75CD9F00 ^ ((v56 << 8) ^ 0x41D80000) & v57;
  LODWORD(STACK[0x16F0]) = v48 - 1926392729 - ((2 * v48) & 0x1A5B28CE);
  v59 = *(unsigned __int8 *)(v27
                           + (v51 ^ (2
                                   * (((v58 ^ 0x34444754) << 16) & 0x75CD0000 ^ v58 ^ 0x34444754 ^ (((v58 ^ 0x34444754) << 16) ^ 0x1F540000) & ((v57 << 8) & 0x75CD0000 ^ 0x30400000 ^ ((v57 << 8) ^ 0x4D9F0000) & v57))) ^ 0x2D80F01Eu));
  v60 = v59 ^ (((v59 ^ 0xA0) & ((HIWORD(LODWORD(STACK[0x15DC])) & 0xAD ^ 0xAD)
                                               + (HIWORD(LODWORD(STACK[0x15DC])) & 0xAD)) & 0xF8) >> 3);
  LODWORD(STACK[0x16B0]) = (v10 ^ 0x134CC176) & ((a8 << 24) ^ 0x14FFFFFF) | (a8 << 24) & 0xEC000000;
  v61 = STACK[0x16D0];
  v62 = *(_DWORD *)(v14 + 4 * (BYTE2(LODWORD(STACK[0x16D0])) ^ 0x2Du));
  HIDWORD(v16) = v62 ^ 0x67;
  LODWORD(v16) = v62 ^ v17;
  v63 = v16 >> 8;
  v64 = LODWORD(STACK[0x16D0]) ^ 0x3E;
  v65 = *(_DWORD *)(v14 + 4 * (((v60 >> 2) | ((_BYTE)v60 << 6)) ^ 0x16u));
  LODWORD(STACK[0x1690]) = ((HIWORD(v65) ^ 0x8D2D | (v65 << 16)) ^ 0x94670000)
                         - 1926392729
                         - 2
                         * (((HIWORD(v65) ^ 0x8D2D | (v65 << 16)) ^ 0x94670000) & STACK[0x13E8] ^ (HIWORD(v65) ^ 0x8D2D) & 0x18);
  v66 = *(_DWORD *)(v14 + 4 * (BYTE1(v61) ^ 0x94u));
  HIDWORD(v16) = v66 ^ 0x9467;
  LODWORD(v16) = v66 ^ 0x8D2D0000;
  LODWORD(STACK[0x1670]) = ((v16 >> 16) ^ v63) - 1926392729 - ((2 * ((v16 >> 16) ^ v63)) & 0x1A5B28CE);
  v67 = *(_DWORD *)(v14 + 4 * ((((2 * v64) | 0xD472036A) - v64 + 365362763) ^ 0xEA3901EC));
  v68 = (HIBYTE(v67) ^ 0x42) + 1222842584;
  v69 = (2 * (v68 & 0x1176)) & (v68 ^ 0x95D9ADC) ^ v68 & 0x1176 ^ ((2 * (v68 & 0x1176)) & 0x20A8 | 0x28000100);
  v70 = (2 * (v68 ^ 0x95D9ADC)) & 0x824105AA ^ 0x824124AA ^ ((2 * (v68 ^ 0x95D9ADC)) ^ 0x40828354) & (v68 ^ 0x95D9ADC);
  v71 = (4 * v69) & 0xBE416DA8 ^ v69 ^ ((4 * v69) ^ 0xA0000400) & v70;
  v72 = (4 * v70) & 0xBE416DA8 ^ 0x6404902 ^ ((4 * v70) ^ 0xF905B6A8) & v70;
  v73 = (16 * v71) & 0xBE416DA0 ^ v71 ^ ((16 * v71) ^ 0x80005000) & v72;
  v74 = (16 * v72) & 0xBE416DA0 ^ 0x1A41250A ^ ((16 * v72) ^ 0xE416DAA0) & v72;
  v75 = v73 ^ (v73 << 8) & 0xBE416D00 ^ ((v73 << 8) ^ 0x450000) & v74;
  v76 = v27;
  v77 = HIBYTE(v67) ^ *(unsigned __int8 *)(v27
                                         + (v68 ^ (2
                                                 * (((v75 ^ 0xB60028AA) << 16) & 0x3E410000 ^ v75 ^ 0xB60028AA ^ (((v75 ^ 0xB60028AA) << 16) ^ 0x6DAA0000) & ((v74 << 8) & 0x3E410000 ^ ((v74 << 8) ^ 0x416D0000) & v74 ^ 0x3E000000))) ^ 0x939E2C22));
  LODWORD(STACK[0x1658]) = (((_BYTE)v77 << 6) - (v77 ^ 0x80)) | (v67 << 8);
  v78 = (((a2 ^ 0x92858A75) - 1325160739) ^ ((a2 ^ 0xD927E23F) - 90059113) ^ ((a2 ^ 0x1AF62F7B) + 963642323)) + 98206430;
  v79 = (v78 ^ 0xD5CB8960) & (2 * (v78 & 0xE5EBC984)) ^ v78 & 0xE5EBC984;
  v80 = ((2 * (v78 ^ 0x1E989860)) ^ 0xF6E6A3C8) & (v78 ^ 0x1E989860) ^ (2 * (v78 ^ 0x1E989860)) & 0xFB7351E4;
  v81 = (v80 ^ 0xB2620000) & (4 * v79) ^ v79;
  v82 = ((4 * (v80 ^ 0x9115024)) ^ 0xEDCD4790) & (v80 ^ 0x9115024) ^ (4 * (v80 ^ 0x9115024)) & 0xFB7351E4;
  v83 = (v82 ^ 0xE9414180) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x12321064)) ^ 0xB7351E40) & (v82 ^ 0x12321064) ^ (16 * (v82 ^ 0x12321064)) & 0xFB7351E0;
  v85 = v83 ^ 0xFB7351E4 ^ (v84 ^ 0xB3311000) & (v83 << 8);
  v86 = v78 ^ (2
             * ((v85 << 16) & 0x7B730000 ^ v85 ^ ((v85 << 16) ^ 0x51E40000) & (((v84 ^ 0x484241A4) << 8) & 0xFB730000 ^ 0x8220000 ^ (((v84 ^ 0x484241A4) << 8) ^ 0x73510000) & (v84 ^ 0x484241A4))));
  v87 = v86 ^ 0x3CE0FE2B;
  v88 = LODWORD(STACK[0x1470]) ^ v86 ^ 0x3CE0FE2B;
  LODWORD(STACK[0x1664]) = v88;
  v89 = STACK[0x173C];
  v90 = LODWORD(STACK[0x1578]) ^ LODWORD(STACK[0x173C]);
  LODWORD(STACK[0x160C]) = v90;
  LODWORD(STACK[0x161C]) = v90 ^ 0x1010101;
  v91 = (((v88 ^ 0x6F1B5D59) + 2141934756) ^ ((v88 ^ 0x95B53E3F) - 2063255610) ^ ((v88 ^ 0x98CC0104) - 2005137153))
      - (v90 ^ 0x1010101)
      + 1813793891;
  v92 = (v91 ^ 0xAC438A3) & (2 * (v91 & 0xACD53C2B)) ^ v91 & 0xACD53C2B;
  v93 = ((2 * (v91 ^ 0xACE78A1)) ^ 0x4C368914) & (v91 ^ 0xACE78A1) ^ (2 * (v91 ^ 0xACE78A1)) & 0xA61B448A;
  v94 = (v93 ^ 0x4100402) & (4 * v92) ^ v92;
  v95 = ((4 * (v93 ^ 0xA209448A)) ^ 0x986D1228) & (v93 ^ 0xA209448A) ^ (4 * (v93 ^ 0xA209448A)) & 0xA61B4488;
  v96 = v94 ^ 0xA61B448A ^ (v95 ^ 0x80090002) & (16 * v94);
  v97 = (16 * (v95 ^ 0x26124482)) & 0xA61B4480 ^ 0x860B040A ^ ((16 * (v95 ^ 0x26124482)) ^ 0x61B448A0) & (v95 ^ 0x26124482);
  v98 = (v96 << 8) & 0xA61B4400 ^ v96 ^ ((v96 << 8) ^ 0x1B448A00) & v97;
  v99 = v91 ^ (2
             * ((v98 << 16) & 0x261B0000 ^ v98 ^ ((v98 << 16) ^ 0x448A0000) & ((v97 << 8) & 0x261B0000 ^ 0x241B0000 ^ ((v97 << 8) ^ 0x1B440000) & v97)));
  LODWORD(STACK[0x1870]) = v99;
  v100 = LODWORD(STACK[0x144C]) ^ v86 ^ 0x9D415F8A;
  v101 = v86 ^ 0x6D84CA49 ^ LODWORD(STACK[0x1820]);
  LODWORD(STACK[0x17B0]) = v101;
  v102 = v86 ^ LODWORD(STACK[0xE34]) ^ v37 ^ 0x730E70E6 ^ (v31 - 1);
  LODWORD(STACK[0x15E4]) = v102;
  v103 = v86 ^ 0x27ED9FF ^ LODWORD(STACK[0x1528]);
  LODWORD(STACK[0x1790]) = v103;
  v104 = v86 ^ 0x6F997910 ^ LODWORD(STACK[0x1828]);
  LODWORD(STACK[0x15E0]) = v104;
  v105 = (v91 & 1 ^ 0x810C100B) + 2 * (v91 & 1) - 949218965;
  v106 = LODWORD(STACK[0x1388]) ^ 0x106CCBED ^ v86;
  if ((v91 & 1 ^ 0x810C100B) + 2 * (v91 & 1) == -2129915892)
    v107 = v101;
  else
    v107 = v102;
  if (v105 == 1215832439)
    v104 = v103;
  LODWORD(STACK[0x1768]) = v100;
  LODWORD(STACK[0x1730]) = v106;
  if (v105 != 1215832439)
    v100 = v106;
  LODWORD(STACK[0x1848]) = v100;
  LODWORD(STACK[0x1750]) = v107;
  LODWORD(STACK[0x1738]) = v104;
  if ((v99 & 2) != 0)
    v108 = v107;
  else
    v108 = v104;
  LODWORD(STACK[0x15F8]) = v108;
  v109 = ((v108 & 0x9F912540 ^ 0x15032717) + (v108 & 0x606088A9) - 1) ^ 0xFD31EF77;
  v110 = v8 ^ v86;
  v111 = (v110 ^ 0xF6149025) & (v110 ^ 0x439F8154) ^ v110 & 0x4C72E888;
  v112 = v86 ^ 0x238FAE13 ^ v9;
  v113 = v89 ^ v86 ^ 0xB1CD6A4C ^ (((((2 * v109) & 0x14C5C08E) - v109 + 1972707256) ^ 0x108653B8)
                                 + ((((2 * (v108 & 0xFFF1ADE9 ^ 0x5A2008E0)) | 0x4FEB765E)
                                   - (v108 & 0xFFF1ADE9 ^ 0x5A2008E0)
                                   + 1477067985) ^ 0x8F059A47)) & 0xA1A1A1A1;
  v114 = v86 ^ 0xF8D72356 ^ LODWORD(STACK[0x17BC]);
  v115 = LODWORD(STACK[0x1810]) ^ LODWORD(STACK[0x1850]) ^ *(_DWORD *)(v14 + 4 * STACK[0x1438]) ^ v86 ^ 0xE19D3A1C ^ LODWORD(STACK[0x1818]);
  v116 = LODWORD(STACK[0x1778]) ^ v86 ^ 0x91ED4AEC ^ (((v111 & 0x97D2234E ^ 0x83C20009) - 1) & 0x80802000 | v111 & 0x202080A0);
  v117 = v86 ^ 0x116DCAEC ^ LODWORD(STACK[0x1440]);
  v118 = v86 ^ 0x116DCAEC ^ STACK[0x1178];
  v119 = LODWORD(STACK[0x1834]) ^ 0x106CCBED ^ v86;
  LODWORD(STACK[0x173C]) = v112;
  if (v105 == 1215832439)
    v120 = v112;
  else
    v120 = v117;
  LODWORD(STACK[0x1850]) = v120;
  LODWORD(STACK[0x1720]) = v113;
  LODWORD(STACK[0x1710]) = v119;
  if (v105 == 1215832439)
    v119 = v113;
  LODWORD(STACK[0x1834]) = v119;
  if (v105 == 1215832439)
    v121 = v117;
  else
    v121 = v116;
  LODWORD(STACK[0x1778]) = v121;
  LODWORD(STACK[0x1718]) = v118;
  if (v105 != 1215832439)
    v116 = v118;
  LODWORD(STACK[0x1828]) = v116;
  v122 = v116 & 0x50505050;
  v123 = ((v122 ^ 0x10000040) - ((2 * (v122 ^ 0x10000040)) & 0x8020A080) + 1108702695) ^ 0x4E1565C2;
  v124 = STACK[0x15AC];
  v125 = *(_DWORD *)(v14 + 4 * (BYTE1(LODWORD(STACK[0x15AC])) ^ 0x94u));
  HIDWORD(v126) = v125 ^ 0x9467;
  LODWORD(v126) = v125 ^ 0x8D2D0000;
  v127 = ((v122 ^ 0x50504010) - ((2 * (v122 ^ 0x50504010)) & 0xA0A000) + 585005482) ^ 0xA21239D3;
  v128 = LODWORD(STACK[0x1838]) ^ v86 ^ 0x6CB0AE7B;
  v129 = v87 ^ LODWORD(STACK[0x1748]) ^ (((((2 * v123) | 0x180F1F4) - v123 - 12613882) ^ 0x4C90288F)
                                       + ((((2 * v127) & 0x20DEC070) - v127 - 879716669) ^ 0x1B0C86EA));
  v130 = (v126 >> 16) - 1926392729 - ((2 * (v126 >> 16)) & 0x1A5B28CE);
  HIDWORD(v126) = LODWORD(STACK[0x1590]) ^ 0x2D9467;
  LODWORD(v126) = LODWORD(STACK[0x1590]) ^ 0x8D000000;
  v131 = v126 >> 24;
  LODWORD(STACK[0x17BC]) = v86 ^ LODWORD(STACK[0x1858]) ^ 0x45998752 ^ LODWORD(STACK[0x1890]);
  v132 = v86 ^ 0x4E3295B3 ^ LODWORD(STACK[0x1644]);
  v133 = v86 ^ 0x4E3295B3 ^ v13;
  LODWORD(STACK[0x1838]) = v86 ^ 0x4E3295B3 ^ v12;
  v134 = v86 ^ 0xE7966B15 ^ LODWORD(STACK[0x17D8]);
  LODWORD(STACK[0x1748]) = v114;
  if (v105 == 1215832439)
    v135 = v114;
  else
    v135 = v115;
  LODWORD(STACK[0x1890]) = v135;
  LODWORD(STACK[0x16E0]) = v128;
  if (v105 == 1215832439)
    v136 = v129;
  else
    v136 = v128;
  LODWORD(STACK[0x1858]) = v136;
  if (v105 == 1215832439)
    v137 = v115;
  else
    v137 = v129;
  LODWORD(STACK[0x16D0]) = v137;
  v138 = v86 ^ 0xC8B41335 ^ LODWORD(STACK[0x14C8]);
  v139 = v86 ^ 0xC8B41335 ^ LODWORD(STACK[0xE20]) ^ v131 ^ *(_DWORD *)(v14 + 4 * (HIBYTE(v124) ^ 0x8D)) ^ v130;
  v140 = v76;
  v141 = *(_BYTE *)((((LODWORD(STACK[0x16C0]) >> 11) & 0xE0 | (LODWORD(STACK[0x16C0]) >> 19) & 0x1F) ^ 0x9D) + v76 + 1665)
       - 38;
  v142 = *(_DWORD *)(v14 + 4 * ((v141 ^ (v141 >> 5) ^ (v141 >> 4)) ^ 0xE2u));
  v143 = v17;
  HIDWORD(v145) = v142 ^ 0x67;
  LODWORD(v145) = v142 ^ v17;
  v144 = v145 >> 8;
  v146 = *(_DWORD *)(v14 + 4 * (BYTE1(LODWORD(STACK[0x1650])) ^ 0x94u));
  HIDWORD(v145) = v146 ^ 0x9467;
  LODWORD(v145) = v146 ^ 0x8D2D0000;
  v147 = (v145 >> 16) - 1926392729 - ((2 * (v145 >> 16)) & 0x1A5B28CE);
  v148 = LODWORD(STACK[0x15E8]) ^ 0xB8;
  v149 = *(_DWORD *)(v14 + 4 * LODWORD(STACK[0x16C0]));
  HIDWORD(v145) = v149 ^ 0x2D9467;
  LODWORD(v145) = v149 ^ 0x8D000000;
  v150 = ((v145 >> 24) ^ v144) - 1926392729 - ((2 * ((v145 >> 24) ^ v144)) & 0x1A5B28CE);
  v151 = STACK[0xDB0];
  v152 = *(_DWORD *)(v14 + 4 * (BYTE1(LODWORD(STACK[0xDB0])) ^ 0x94u));
  HIDWORD(v145) = v152 ^ 0x9467;
  LODWORD(v145) = v152 ^ 0x8D2D0000;
  v153 = v145 >> 16;
  v154 = STACK[0x1648];
  v155 = *(_DWORD *)(v14
                   + 4
                   * ((LODWORD(STACK[0xDB0]) ^ 0x8D2D9467) >> ((v141 & 0x10 ^ 0x10) + (v141 & 0x10))));
  v156 = *(_DWORD *)(v14 + 4 * BYTE1(LODWORD(STACK[0x16C0])));
  HIDWORD(v145) = v156 ^ 0x9467;
  LODWORD(v145) = v156 ^ 0x8D2D0000;
  v157 = ((v155 ^ 0x8D2D9467) >> ((BYTE1(v154) & 8 ^ 8) + (BYTE1(v154) & 8))) | (v155 << 24) ^ 0x67000000;
  v158 = v86 ^ 0x15C9D702;
  v159 = v86 ^ 0x15C9D702 ^ *(_DWORD *)(v14 + 4 * HIBYTE(LODWORD(STACK[0x16C0]))) ^ (v145 >> 16) ^ v150;
  v160 = *(_DWORD *)(v14
                   + 4
                   * ((((2 * (LODWORD(STACK[0xDB0]) ^ 0x19)) & 0xB2)
                     - (LODWORD(STACK[0xDB0]) ^ 0x19)
                     + 678) ^ 0x2D8u));
  HIDWORD(v145) = v160 ^ 0x2D9467;
  LODWORD(v145) = v160 ^ 0x8D000000;
  v161 = v86 ^ 0x5FD09D1B ^ *(_DWORD *)(v14 + 4 * (HIBYTE(LODWORD(STACK[0x15E8])) ^ 0x8Du)) ^ (*(_DWORD *)(v14 + 4 * LODWORD(STACK[0x17F0])) >> 8) ^ (*(_DWORD *)(v14 + 4 * LODWORD(STACK[0x17F0])) << 24) ^ v147 ^ __ROR4__(*(_DWORD *)(v14 + 4 * ((((((2 * v148) | 0x11252F5A) - v148 - 143824813) & 0x2E71129E ^ 0xA6310005) + ((((2 * v148) | 0x11252F5A) - v148 - 143824813) & 0x828D61) - 1) ^ 0xAEA39776)), 24);
  v162 = (v157 ^ v153 ^ (v145 >> 24)) - 1926392729 - ((2 * (v157 ^ v153 ^ (v145 >> 24))) & 0x1A5B28CE);
  v163 = *(_DWORD *)(v14 + 4 * STACK[0x1488]);
  HIDWORD(v145) = v163 ^ 0x67;
  LODWORD(v145) = v163 ^ v143;
  v164 = v145 >> 8;
  v165 = (v154 >> 19) & 0xE0 | (v154 >> 27);
  LODWORD(v145) = __ROR4__(*(_DWORD *)(v14 + 4 * STACK[0x1648]), 24);
  v166 = (v164 ^ v145 ^ 0x2D94678D)
       - 1926392729
       + ((2 * ((v164 ^ v145 ^ 0x2D94678D) & LODWORD(STACK[0x1894]) ^ (v164 ^ v145) & 8)) ^ 0xFFFFFFEF);
  v167 = *(_DWORD *)(v14 + 4 * STACK[0x1490]);
  HIDWORD(v145) = v167 ^ 0x9467;
  LODWORD(v145) = v167 ^ 0x8D2D0000;
  v168 = v145 >> 16;
  v169 = v86 ^ 0x2686E236 ^ LODWORD(STACK[0x1358]);
  v170 = v86 ^ 0xD3AF082E ^ LODWORD(STACK[0x1538]);
  v171 = v110 ^ 0xC8B41335;
  v172 = STACK[0x1838];
  if (v105 == 1215832439)
    v173 = STACK[0x1838];
  else
    v173 = v134;
  LODWORD(STACK[0x16B8]) = v173;
  LODWORD(STACK[0x16C0]) = v133;
  if (v105 == 1215832439)
    v174 = v133;
  else
    v174 = v172;
  LODWORD(STACK[0x1838]) = v174;
  LODWORD(STACK[0x16C8]) = v132;
  if (v105 == 1215832439)
    v175 = v134;
  else
    v175 = v132;
  LODWORD(STACK[0x1820]) = v175;
  v176 = STACK[0x17BC];
  if (v105 == 1215832439)
    v177 = v138;
  else
    v177 = STACK[0x17BC];
  LODWORD(STACK[0x1818]) = v177;
  if (v105 == 1215832439)
    v178 = v139;
  else
    v178 = v138;
  LODWORD(STACK[0x1810]) = v178;
  if (v105 == 1215832439)
    v179 = v171;
  else
    v179 = v139;
  LODWORD(STACK[0x1808]) = v179;
  if (v105 == 1215832439)
    v180 = v161;
  else
    v180 = v159;
  LODWORD(STACK[0x1800]) = v180;
  if (v105 == 1215832439)
    v181 = v176;
  else
    v181 = v171;
  v182 = STACK[0x1790];
  if (v105 == 1215832439)
    v182 = STACK[0x15E4];
  LODWORD(STACK[0x17F0]) = v182;
  v183 = STACK[0x17B0];
  if (v105 == 1215832439)
    v183 = STACK[0x15E0];
  LODWORD(STACK[0x17D8]) = v183;
  v184 = v158 ^ *(_DWORD *)(v14 + 4 * (HIBYTE(v151) ^ 0x8D)) ^ v162;
  v185 = v158 ^ *(_DWORD *)(v14 + 4 * (*(unsigned __int8 *)((v165 ^ 0x99) + v140 + 4432) ^ 0x38)) ^ (v166 + 1) ^ v168;
  if (v105 == 1215832439)
    v186 = v159;
  else
    v186 = v158 ^ *(_DWORD *)(v14 + 4 * (HIBYTE(v151) ^ 0x8D)) ^ v162;
  LODWORD(STACK[0x17BC]) = v186;
  if (v105 == 1215832439)
    v161 = v185;
  LODWORD(STACK[0x17B0]) = v161;
  if (v105 == 1215832439)
    v185 = v184;
  LODWORD(STACK[0x1790]) = v185;
  v187 = (v181 & 0x62626262 ^ 0x60604242)
       + (v181 & 0x22002222 ^ 0x9F1CACB1)
       - ((v181 & 0x62626262 ^ 0x60604242) & 0x22002222);
  v188 = v86 ^ 0x3844E3C5 ^ LODWORD(STACK[0x17C0]);
  v189 = v86 ^ 0x3844E3C5 ^ LODWORD(STACK[0xE40]);
  v190 = v86 ^ LODWORD(STACK[0x1788]) ^ *(_DWORD *)(v14 + 4 * LODWORD(STACK[0x14B0])) ^ LODWORD(STACK[0x1740]) ^ 0xE8987739 ^ LODWORD(STACK[0x1860]);
  v191 = v86 ^ *(_DWORD *)(v14 + 4 * HIBYTE(LODWORD(STACK[0x1678]))) ^ LODWORD(STACK[0x16B0]) ^ LODWORD(STACK[0x1690]) ^ 0xEF3CFC40 ^ STACK[0x1170];
  v192 = v86 ^ LODWORD(STACK[0x1670]) ^ LODWORD(STACK[0x1658]) ^ 0x98FD10A2 ^ *(_DWORD *)(v14
                                                                                        + 4
                                                                                        * STACK[0x1708]);
  v193 = ((v181 & 0x62400020 ^ 0x939188B5) + (v181 & 0x226242) - 1) ^ 0x2E518AD5;
  v194 = v86 ^ LODWORD(STACK[0x17A8]) ^ 0xCF0A5E92 ^ (((v187 & 0x1E6EF8A8 ^ 0x665828)
                                                     + (v187 ^ 0x5F08A693)
                                                     - ((v187 ^ 0x5F08A693) & 0x1E66F8A8)) ^ 0x9E3AB2A8 | (-279416632 - (v193 | 0xEF5870C8) + (v193 | 0x10A78F37)) ^ 0xCF25EF56);
  v195 = (((LODWORD(STACK[0x161C]) + 1950092249) & 0x46064043 ^ 0x47474747)
        + ((LODWORD(STACK[0x161C]) + 1950092249) & 0x46064043)
        - 1960078751
        - ((2
          * (((LODWORD(STACK[0x161C]) + 1950092249) & 0x46064043 ^ 0x47474747)
           + ((LODWORD(STACK[0x161C]) + 1950092249) & 0x46064043))) & 0x1819008E)
        - 1530) ^ v87 ^ LODWORD(STACK[0x1680]);
  v196 = LODWORD(STACK[0x13CC]) ^ 0x265AFDDB ^ v86;
  v197 = v86 ^ 0xF68A2D0B ^ LODWORD(STACK[0x1600]);
  v198 = v86 ^ 0xF68A2D0B ^ LODWORD(STACK[0x10B8]) ^ LODWORD(STACK[0x1260]) ^ LODWORD(STACK[0x16F0]);
  if (v105 == 1215832439)
    v199 = v169;
  else
    v199 = v170;
  LODWORD(STACK[0x1648]) = v199;
  v200 = LODWORD(STACK[0x13A8]) ^ 0x1ABA03F0 ^ v87;
  v201 = LODWORD(STACK[0x1430]) ^ 0x1ABA03F0 ^ v87;
  v202 = STACK[0x14C4];
  LODWORD(STACK[0x1708]) = v87;
  v203 = v202 ^ 0x1ABA03F0 ^ v87;
  if (v105 == 1215832439)
    v204 = v202 ^ 0x1ABA03F0 ^ v87;
  else
    v204 = v196;
  LODWORD(STACK[0x1600]) = v204;
  LODWORD(STACK[0x1644]) = v201;
  if (v105 == 1215832439)
    v205 = v201;
  else
    v205 = v203;
  LODWORD(STACK[0x1650]) = v200;
  if (v105 == 1215832439)
    v206 = v196;
  else
    v206 = v200;
  LODWORD(STACK[0x16B0]) = v189;
  if (v105 == 1215832439)
    v207 = v191;
  else
    v207 = v189;
  if (v105 == 1215832439)
    v208 = v192;
  else
    v208 = v191;
  LODWORD(STACK[0x1690]) = v208;
  LODWORD(STACK[0x17A8]) = v188;
  if (v105 == 1215832439)
    v209 = v188;
  else
    v209 = v192;
  v210 = STACK[0x1664];
  v211 = LODWORD(STACK[0x1664]) ^ 0xEF4FF605;
  LODWORD(STACK[0x161C]) = v211;
  if (v105 == 1215832439)
    v212 = v211;
  else
    v212 = v169;
  LODWORD(STACK[0x15E8]) = v194;
  if (v105 == 1215832439)
  {
    v213 = v190;
  }
  else
  {
    v170 = v194;
    v213 = v197;
  }
  LODWORD(STACK[0x1860]) = v105;
  if (v105 == 1215832439)
    v214 = v195;
  else
    v214 = v190;
  if (v105 == 1215832439)
    v215 = v197;
  else
    v215 = v198;
  if (v105 == 1215832439)
    v216 = v198;
  else
    v216 = v195;
  v217 = (LODWORD(STACK[0x160C]) ^ 0xFEFEFEFE)
       + (((v210 ^ 0x3D75F866) + 767947165) ^ ((v210 ^ 0x2A67901B) + 987208162) ^ ((v210 ^ 0x75700A1F) + 1707082726))
       + 530416256;
  v218 = (v217 ^ 0xFC4797EE) & (2 * (v217 & 0xF954060F)) ^ v217 & 0xF954060F;
  LODWORD(STACK[0x160C]) = v217;
  v219 = ((2 * (v217 ^ 0x1C679FF0)) ^ 0xCA6733FE) & (v217 ^ 0x1C679FF0) ^ (2 * (v217 ^ 0x1C679FF0)) & 0xE53399FE;
  v220 = (v219 ^ 0xC020107C) & (4 * v218) ^ v218;
  v221 = ((4 * (v219 ^ 0x25108801)) ^ 0x94CE67FC) & (v219 ^ 0x25108801) ^ (4 * (v219 ^ 0x25108801)) & 0xE53399FC;
  v222 = (v221 ^ 0x840201F3) & (16 * v220) ^ v220;
  v223 = ((16 * (v221 ^ 0x61319803)) ^ 0x53399FF0) & (v221 ^ 0x61319803) ^ (16 * (v221 ^ 0x61319803)) & 0xE53399F0;
  v224 = v222 ^ 0xE53399FF ^ (v223 ^ 0x41319900) & (v222 << 8);
  LODWORD(STACK[0x15AC]) = (v224 << 16) & 0x65330000 ^ v224 ^ ((v224 << 16) ^ 0x19FF0000) & (((v223 ^ 0xA402000F) << 8) & 0xE5330000 ^ 0x44220000 ^ (((v223 ^ 0xA402000F) << 8) ^ 0x33990000) & (v223 ^ 0xA402000F));
  v225 = (((LODWORD(STACK[0x1408]) ^ 0xB2B509C) - 187388060) ^ ((LODWORD(STACK[0x1408]) ^ 0x6FA0C928) - 1872808232) ^ ((LODWORD(STACK[0x1408]) ^ 0xE9A60DD3) + 374993453))
       - (((LODWORD(STACK[0x13C0]) ^ 0x4DEFA128) - 1307549992) ^ ((LODWORD(STACK[0x13C0]) ^ 0xD3980975) + 745010827) ^ ((LODWORD(STACK[0x13C0]) ^ 0x135A3C3A) - 324680762))
       - 206222417;
  v226 = (v225 ^ 0xB12AF862) & (2 * (v225 & 0xC5AAF874)) ^ v225 & 0xC5AAF874;
  v227 = ((2 * (v225 ^ 0x3A6EA8C2)) ^ 0xFF88A16C) & (v225 ^ 0x3A6EA8C2) ^ (2 * (v225 ^ 0x3A6EA8C2)) & 0xFFC450B6;
  v228 = (v227 ^ 0x3F801022) & (4 * v226) ^ v226;
  v229 = ((4 * (v227 ^ 0x445092)) ^ 0xFF1142D8) & (v227 ^ 0x445092) ^ (4 * (v227 ^ 0x445092)) & 0xFFC450B4;
  v230 = (v229 ^ 0xFF004080) & (16 * v228) ^ v228;
  v231 = ((16 * (v229 ^ 0xC41026)) ^ 0xFC450B60) & (v229 ^ 0xC41026) ^ (16 * (v229 ^ 0xC41026)) & 0xFFC450B0;
  v232 = v230 ^ 0xFFC450B6 ^ (v231 ^ 0xFC440000) & (v230 << 8);
  v233 = v225 ^ (2
               * ((v232 << 16) & 0x7FC40000 ^ v232 ^ ((v232 << 16) ^ 0x50B60000) & (((v231 ^ 0x3805096) << 8) & 0x7FC40000 ^ 0x3B840000 ^ (((v231 ^ 0x3805096) << 8) ^ 0xC4500000) & (v231 ^ 0x3805096))));
  v234 = ((v233 ^ 0x5A68431C) - 1282379363) ^ ((v233 ^ 0x2B662D83) - 1029824764) ^ ((v233 ^ 0xEA243787) + 64750856);
  v235 = (((v234 - ((2 * v234 + 24561808) & 0x1A5B28CE) + 1843984559) ^ LODWORD(STACK[0x1688])) >> 1) - 1811639958;
  v236 = (v235 ^ 0xE7D79222) & (2 * (v235 & 0xF797A20A)) ^ v235 & 0xF797A20A;
  v237 = ((2 * (v235 ^ 0xEEDB9222)) ^ 0x32986050) & (v235 ^ 0xEEDB9222) ^ (2 * (v235 ^ 0xEEDB9222)) & 0x194C3028;
  v238 = (v237 ^ 0x10080000) & (4 * v236) ^ v236;
  v239 = ((4 * (v237 ^ 0x9441028)) ^ 0x6530C0A0) & (v237 ^ 0x9441028) ^ (4 * (v237 ^ 0x9441028)) & 0x194C3028;
  v240 = (v239 ^ 0x1000028) & (16 * v238) ^ v238;
  v241 = ((16 * (v239 ^ 0x184C3008)) ^ 0x94C30280) & (v239 ^ 0x184C3008) ^ (16 * (v239 ^ 0x184C3008)) & 0x194C3020;
  v242 = v240 ^ 0x194C3028 ^ (v241 ^ 0x10400028) & (v240 << 8);
  v243 = v235 ^ (2
               * ((v242 << 16) & 0x194C0000 ^ v242 ^ ((v242 << 16) ^ 0x30280000) & (((v241 ^ 0x90C3028) << 8) & 0x194C0000 ^ 0x114C0000 ^ (((v241 ^ 0x90C3028) << 8) ^ 0x4C300000) & (v241 ^ 0x90C3028))));
  v244 = (STACK[0x1870] & 2) == 0;
  v245 = ((LODWORD(STACK[0x15F0]) ^ 0xA49306E7)
        + (LODWORD(STACK[0x1540]) ^ 0x8D2D9467)
        - 477630094
        + (LODWORD(STACK[0x1570]) ^ 0x8D2D9467)) >> 1;
  v246 = 2
       * (((LODWORD(STACK[0x1508]) ^ LODWORD(STACK[0x14F0]))
         + 221090935
         - ((2 * (LODWORD(STACK[0x1508]) ^ LODWORD(STACK[0x14F0]))) & 0x1A5B28CE)
         - 16) ^ LODWORD(STACK[0x16F8]));
  LODWORD(STACK[0x1678]) = v214;
  LODWORD(STACK[0x1658]) = v215;
  if (v244)
    v247 = v214;
  else
    v247 = v215;
  LODWORD(STACK[0x1588]) = v247;
  LODWORD(STACK[0x15E4]) = v205;
  LODWORD(STACK[0x15DC]) = v206;
  if (v244)
    v248 = v205;
  else
    v248 = v206;
  LODWORD(STACK[0x11A8]) = v248;
  LODWORD(STACK[0x1670]) = v216;
  LODWORD(STACK[0x1664]) = v213;
  if (v244)
    v249 = v213;
  else
    v249 = v216;
  LODWORD(STACK[0x14C8]) = v249;
  v250 = STACK[0x17D8];
  if (v244)
    v250 = STACK[0x17F0];
  LODWORD(STACK[0x1788]) = v250;
  LODWORD(STACK[0x1680]) = v170;
  LODWORD(STACK[0x15C0]) = v212;
  if (v244)
    v251 = v212;
  else
    v251 = v170;
  LODWORD(STACK[0x15D0]) = v251;
  v252 = STACK[0x17BC];
  if (v244)
    v252 = STACK[0x17B0];
  LODWORD(STACK[0x1120]) = v252;
  v253 = STACK[0x1800];
  if (!v244)
    v253 = STACK[0x1790];
  LODWORD(STACK[0x139C]) = v253;
  v254 = STACK[0x1838];
  if (!v244)
    v254 = STACK[0x1820];
  LODWORD(STACK[0x11B0]) = v254;
  v255 = STACK[0x1818];
  if (v244)
    v255 = STACK[0x1808];
  LODWORD(STACK[0x1740]) = v255;
  LODWORD(STACK[0x17C0]) = v181;
  v256 = STACK[0x1810];
  if (v244)
    v256 = v181;
  LODWORD(STACK[0x1030]) = v256;
  v257 = STACK[0x1890];
  if (v244)
    v257 = STACK[0x1858];
  LODWORD(STACK[0x1518]) = v257;
  LODWORD(STACK[0x15E0]) = v207;
  LODWORD(STACK[0x15CC]) = v209;
  if (v244)
    v258 = v207;
  else
    v258 = v209;
  LODWORD(STACK[0x1458]) = v258;
  v259 = STACK[0x1850];
  if (v244)
    v259 = STACK[0x1828];
  LODWORD(STACK[0x16F0]) = v259;
  v260 = STACK[0x1848];
  if (!v244)
    v260 = STACK[0x1834];
  LODWORD(STACK[0x1198]) = v260;
  LODWORD(STACK[0x1578]) = v245;
  LODWORD(STACK[0x159C]) = v243;
  LODWORD(STACK[0x1584]) = v246;
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x18C0] + 8 * SLODWORD(STACK[0x18A8])))(1787458736, 2356136819);
}

uint64_t sub_10030C8AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  _BOOL4 v19;

  v8 = (((v6 ^ 0xF7FD082C) + 134412244) ^ ((v6 ^ 0x125F0AC7) - 308218567) ^ ((v6 ^ 0x688F968C) - 1754240652))
     - 413829447;
  v9 = (v8 ^ 0x85D2590E) & (2 * (v8 & 0xA5D81DAF)) ^ v8 & 0xA5D81DAF;
  v10 = ((2 * (v8 ^ 0xCF52691E)) ^ 0xD514E962) & (v8 ^ 0xCF52691E) ^ (2 * (v8 ^ 0xCF52691E)) & a1;
  v11 = (v10 ^ 0xA6021) & (4 * v9) ^ v9;
  v12 = ((4 * (v10 ^ 0x2A8A1491)) ^ 0xAA29D2C4) & (v10 ^ 0x2A8A1491) ^ (4 * (v10 ^ 0x2A8A1491)) & a1;
  v13 = (v12 ^ 0x2A085080) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x40822431)) ^ 0xA8A74B10) & (v12 ^ 0x40822431) ^ (16 * (v12 ^ 0x40822431)) & a1;
  v15 = v13 ^ (a1 + 1) ^ (v14 ^ 0x288240A1) & (v13 << 8);
  v16 = v8 ^ (2
            * ((v15 << 16) & a6 ^ v15 ^ ((v15 << 16) ^ 0x74B10000) & (((v14 ^ 0x420834A1) << 8) & a6 ^ 0x608A0000 ^ (((v14 ^ 0x420834A1) << 8) ^ 0x8A740000) & (v14 ^ 0x420834A1))));
  v17 = (((v16 ^ 0x9ACBDA81) + 1507149269) ^ ((v16 ^ 0xECEC245C) + 804436746) ^ ((v16 ^ 0xC7EB0A10) + 83203398))
      - 847252754;
  v19 = v17 <= 0x40525E86 || v17 >= v7;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((3752 * v19) ^ LODWORD(STACK[0x18A8]))))();
}

uint64_t sub_10030CF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  unint64_t v46;
  unsigned int v47;
  int v48;
  int v49;

  v8 = STACK[0x1650];
  if (LODWORD(STACK[0x1860]) != 1215832439)
    v8 = STACK[0x1644];
  v9 = STACK[0x17A8];
  if (LODWORD(STACK[0x1860]) == 1215832439)
    v9 = STACK[0x16B0];
  v10 = STACK[0x1710];
  if (LODWORD(STACK[0x1860]) != 1215832439)
    v10 = STACK[0x1768];
  v11 = STACK[0x161C];
  if (LODWORD(STACK[0x1860]) == 1215832439)
    v11 = STACK[0x15E8];
  v12 = STACK[0x16C8];
  if (LODWORD(STACK[0x1860]) != 1215832439)
    v12 = STACK[0x16C0];
  v13 = STACK[0x16E0];
  if (LODWORD(STACK[0x1860]) == 1215832439)
  {
    v14 = STACK[0x1718];
  }
  else
  {
    v13 = STACK[0x1748];
    v14 = STACK[0x173C];
  }
  if (LODWORD(STACK[0x1860]) == 1215832439)
    v15 = STACK[0x1730];
  else
    v15 = STACK[0x1720];
  v16 = LODWORD(STACK[0x160C]) ^ (2 * LODWORD(STACK[0x15AC]));
  v17 = STACK[0x1870];
  v18 = STACK[0x1678];
  if ((STACK[0x1870] & 2) == 0)
    v18 = STACK[0x1658];
  LODWORD(STACK[0xE80]) = v18;
  v19 = STACK[0x15E4];
  if ((v17 & 2) == 0)
    v19 = STACK[0x15DC];
  LODWORD(STACK[0xE38]) = v19;
  v20 = STACK[0x1670];
  if ((v17 & 2) != 0)
    v20 = STACK[0x1664];
  LODWORD(STACK[0x1718]) = v20;
  v21 = STACK[0x15E0];
  if ((v17 & 2) == 0)
    v21 = STACK[0x15CC];
  LODWORD(STACK[0x1670]) = v21;
  v22 = STACK[0x1680];
  if ((v17 & 2) != 0)
    v22 = STACK[0x15C0];
  LODWORD(STACK[0x1860]) = v22;
  v23 = STACK[0x17F0];
  if ((v17 & 2) == 0)
    v23 = STACK[0x17D8];
  LODWORD(STACK[0x1538]) = v23;
  v24 = STACK[0x17BC];
  if ((v17 & 2) != 0)
    v24 = STACK[0x17B0];
  LODWORD(STACK[0x11A4]) = v24;
  v25 = STACK[0x1800];
  if ((v17 & 2) == 0)
    v25 = STACK[0x1790];
  LODWORD(STACK[0x14D8]) = v25;
  v26 = STACK[0x1838];
  if ((v17 & 2) == 0)
    v26 = STACK[0x1820];
  LODWORD(STACK[0x1440]) = v26;
  v27 = STACK[0x1818];
  if ((v17 & 2) != 0)
    v27 = STACK[0x1808];
  LODWORD(STACK[0x13E8]) = v27;
  v28 = STACK[0x17C0];
  if ((v17 & 2) == 0)
    v28 = STACK[0x1810];
  LODWORD(STACK[0x15CC]) = v28;
  v29 = STACK[0x1890];
  if ((v17 & 2) != 0)
    v29 = STACK[0x1858];
  LODWORD(STACK[0x1488]) = v29;
  v30 = STACK[0x1850];
  if ((v17 & 2) != 0)
    v30 = STACK[0x1828];
  LODWORD(STACK[0x1850]) = v30;
  v31 = STACK[0x1750];
  if ((v17 & 2) != 0)
    v31 = STACK[0x1738];
  LODWORD(STACK[0x1590]) = v31;
  v32 = STACK[0x1848];
  if ((v17 & 2) == 0)
    v32 = STACK[0x1834];
  LODWORD(STACK[0x1834]) = v32;
  v33 = STACK[0x1600];
  if ((v17 & 2) != 0)
    v34 = v8;
  else
    v34 = STACK[0x1600];
  LODWORD(STACK[0x15E8]) = v34;
  if ((v17 & 2) != 0)
    v8 = v33;
  LODWORD(STACK[0x1410]) = v8;
  v35 = STACK[0x1648];
  if ((v17 & 2) != 0)
    v36 = v11;
  else
    v36 = STACK[0x1648];
  LODWORD(STACK[0x1748]) = v36;
  if ((v17 & 2) != 0)
    v37 = v35;
  else
    v37 = v11;
  LODWORD(STACK[0x1190]) = v37;
  v38 = STACK[0x16B8];
  if ((v17 & 2) != 0)
    v39 = v12;
  else
    v39 = STACK[0x16B8];
  LODWORD(STACK[0x1644]) = v39;
  if ((v17 & 2) != 0)
    v40 = v38;
  else
    v40 = v12;
  LODWORD(STACK[0x12B8]) = v40;
  v41 = STACK[0x16D0];
  if ((v17 & 2) != 0)
    v42 = v13;
  else
    v42 = STACK[0x16D0];
  LODWORD(STACK[0x1678]) = v42;
  if ((v17 & 2) != 0)
    v43 = v41;
  else
    v43 = v13;
  LODWORD(STACK[0x14B0]) = v43;
  if ((v17 & 2) != 0)
    v44 = v14;
  else
    v44 = STACK[0x1778];
  LODWORD(STACK[0x160C]) = v44;
  v45 = STACK[0x1690];
  if ((v17 & 2) != 0)
    v46 = v45;
  else
    v46 = v9;
  STACK[0x1178] = v46;
  if ((v17 & 2) != 0)
    v47 = v9;
  else
    v47 = v45;
  LODWORD(STACK[0x12D8]) = v47;
  if ((v17 & 2) != 0)
    v48 = v10;
  else
    v48 = v15;
  LODWORD(STACK[0x13D8]) = v48;
  if ((v17 & 2) != 0)
    v49 = v15;
  else
    v49 = v10;
  LODWORD(STACK[0x1158]) = v49;
  LODWORD(STACK[0x173C]) = v16 ^ 0xBC78A196;
  LODWORD(STACK[0x1418]) = LODWORD(STACK[0x159C]) ^ 0x6832563D;
  LODWORD(STACK[0x1650]) = LODWORD(STACK[0x1578]) ^ 0x1D4DBD2F;
  LODWORD(STACK[0x1530]) = LODWORD(STACK[0x1584]) ^ 0xA5D6A373;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)((64302 * (a8 < 0x48AF764)) ^ (a8 - 1625162776)))
                            - 12))();
}

uint64_t sub_10030D1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * (v5 - 13609)) - ((v5 + 1451166432) & 0xA980BFED) + 7844);
  LODWORD(STACK[0xE24]) = STACK[0x1480];
  LODWORD(STACK[0x10B8]) = STACK[0x1798];
  LODWORD(STACK[0xD3C]) = STACK[0x1400];
  LODWORD(STACK[0x15DC]) = STACK[0x1434];
  LODWORD(STACK[0x15C0]) = STACK[0x1570];
  LODWORD(STACK[0x1088]) = STACK[0x13F8];
  LODWORD(STACK[0x1750]) = STACK[0x17CC];
  LODWORD(STACK[0x1570]) = STACK[0x15B0];
  LODWORD(STACK[0x1578]) = v7;
  LODWORD(STACK[0x15E4]) = v7;
  LODWORD(STACK[0x1648]) = STACK[0x1700];
  LODWORD(STACK[0x17BC]) = STACK[0x1898];
  LODWORD(STACK[0x1690]) = STACK[0x1868];
  LODWORD(STACK[0x17CC]) = v6;
  LODWORD(STACK[0x1480]) = STACK[0x13A0];
  LODWORD(STACK[0x1738]) = STACK[0x13B8];
  LODWORD(STACK[0x1154]) = STACK[0x1840];
  return v10(a1, a2, v8, v9, a5, 3517530392, 2173174016, 612958208);
}

uint64_t sub_10030D2FC(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned __int8 v13;
  int v14;
  int v15;
  char v16;
  int v17;
  char v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  char v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unint64_t v57;
  unint64_t v58;
  unsigned int v59;
  char v60;
  unsigned __int8 *v61;
  int v62;
  int v63;
  unsigned __int8 v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  uint64_t v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  BOOL v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  unint64_t v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  unsigned int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  unint64_t v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  unint64_t v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  uint64_t v221;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  uint64_t v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  int v250;
  int v251;
  unsigned int v252;
  int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  int v259;
  int v260;
  int v261;
  unint64_t v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  _BYTE *v277;
  int v278;
  int v279;
  unint64_t v280;
  unsigned int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  int v313;
  uint64_t v314;
  unint64_t v315;
  unint64_t v316;
  unint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  _BYTE *v327;
  int v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  uint64_t v340;
  unint64_t v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  unsigned int v368;
  int v369;
  uint64_t v370;
  unint64_t v371;
  unint64_t v372;
  unint64_t v373;
  uint64_t v374;
  unint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  unint64_t v379;
  uint64_t v380;
  uint64_t v381;
  unint64_t v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  int v389;
  unsigned int v390;
  int v391;
  int v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  int v406;
  int v407;
  int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unint64_t v414;
  unint64_t v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  unint64_t v420;
  uint64_t v421;
  unint64_t v422;
  uint64_t v423;
  uint64_t v424;
  unint64_t v425;
  unint64_t v426;
  unint64_t v427;
  unint64_t v428;
  unint64_t v429;
  unint64_t v430;
  unint64_t v431;
  unint64_t v432;
  unint64_t v433;
  unint64_t v434;
  unint64_t v435;
  unint64_t v436;
  unint64_t v437;
  unint64_t v438;
  int v439;
  int v440;
  int v441;
  int v442;
  unsigned int v443;
  int v444;
  int v445;
  uint64_t (*v446)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  LODWORD(STACK[0x1898]) = LODWORD(STACK[0x1718]) ^ LODWORD(STACK[0x1790]);
  LODWORD(STACK[0xDA4]) += 88;
  LODWORD(STACK[0x1838]) = v12 ^ LODWORD(STACK[0x1870]);
  v28 = v25 - 34;
  LODWORD(STACK[0x16F8]) = a8 ^ v19;
  LODWORD(STACK[0x1710]) = v10 ^ STACK[0x1208];
  LODWORD(STACK[0x1870]) = STACK[0x1548] ^ a7;
  LODWORD(STACK[0x1760]) = LODWORD(STACK[0xDEC]) ^ STACK[0xE10];
  LODWORD(STACK[0x1770]) = LODWORD(STACK[0x17E0]) ^ LODWORD(STACK[0x1828]);
  LODWORD(STACK[0x1718]) = v27 ^ v14;
  LODWORD(STACK[0x1834]) = v11 ^ LODWORD(STACK[0xDE8]);
  LODWORD(STACK[0x1750]) = v26 ^ v21;
  LODWORD(STACK[0x1868]) = LODWORD(STACK[0xD7C]) ^ v9;
  LODWORD(STACK[0x1778]) = a2 ^ a4;
  v29 = v13 + 1983971705;
  v30 = ((2 * (v29 & 0x90)) & 0x20 | 0xC2000400) ^ (v29 & 0x90 | 0x3550922A) ^ ((2 * (v29 & 0x90)) | 0x20000) & (v29 ^ 0x7EEE96BA);
  v31 = (2 * (v29 ^ 0x7EEE96BA)) & 0x62A ^ (v15 - 573) ^ ((2 * (v29 ^ 0x7EEE96BA)) ^ 0x8A30454) & (v29 ^ 0x7EEE96BA);
  v32 = (4 * v30) & 0xF7519628 ^ v30 ^ ((4 * v30) ^ 0x5D4658A8) & v31;
  v33 = (4 * v31) & 0x77519628 ^ 0x22118602 ^ ((4 * v31) ^ 0x5D4658A8) & v31;
  v34 = (16 * v32) & 0xF7519620 ^ v32 ^ ((16 * v32) ^ 0x21186020) & v33;
  v35 = (16 * v33) & 0xF7519620 ^ 0x8240940A ^ ((16 * v33) ^ 0x751962A0) & v33;
  v36 = v34 ^ (v34 << 8) & 0xF7519600 ^ ((v34 << 8) ^ 0x1862200) & v35;
  v37 = v29 ^ (2
             * (((v36 ^ 0xF5501208) << 16) & 0x77510000 ^ v36 ^ 0xF5501208 ^ (((v36 ^ 0xF5501208) << 16) ^ 0x162A0000) & ((v35 << 8) & 0x77510000 ^ 0x26410000 ^ ((v35 << 8) ^ 0x51960000) & v35)));
  v38 = (((v37 ^ 0x271778C0) + 517554077) ^ ((v37 ^ 0xE46DE9BE) - 576475421) ^ ((v37 ^ 0x8866BDBA) - 1314325785)) * v17
      + 1402524216;
  v39 = (v38 ^ 0xFDE35A8F) & (2 * (v38 & 0xFDF35CAF)) ^ v38 & 0xFDF35CAF;
  v40 = ((2 * (v38 ^ 0x4765E28B)) ^ 0x752D7C48) & (v38 ^ 0x4765E28B) ^ (2 * (v38 ^ 0x4765E28B)) & 0xBA96BE24;
  v41 = (v40 ^ 0x30043400) & (4 * v39) ^ v39;
  v42 = ((4 * (v40 ^ 0x8A928224)) ^ 0xEA5AF890) & (v40 ^ 0x8A928224) ^ (4 * (v40 ^ 0x8A928224)) & 0xBA96BE24;
  v43 = (v42 ^ 0xAA12B804) & (16 * v41) ^ v41;
  v44 = ((16 * (v42 ^ 0x10840624)) ^ 0xA96BE240) & (v42 ^ 0x10840624) ^ (16 * (v42 ^ 0x10840624)) & 0xBA96BE20;
  v45 = v43 ^ 0xBA96BE24 ^ (v44 ^ 0xA802A200) & (v43 << 8);
  v46 = v38 ^ (2
             * ((v45 << 16) & 0x3A960000 ^ v45 ^ ((v45 << 16) ^ 0x3E240000) & (((v44 ^ 0x12941C24) << 8) & 0x3A960000 ^ 0x28000000 ^ (((v44 ^ 0x12941C24) << 8) ^ 0x16BE0000) & (v44 ^ 0x12941C24))));
  v47 = (-3 * (v23 ^ v16 ^ 0xA1)) ^ 0xFD;
  v48 = (v47 + 375573715) ^ 0xB431D019;
  v49 = (2 * ((v47 + 375573715) & 0x81D9)) & 0x380 ^ (v47 + 375573715) & 0x81D9 ^ ((2 * ((v47 + 375573715) & 0x81D9)) | 0x1800) & v48;
  v50 = (2 * v48) & 0x3C0 ^ 0x1840 ^ ((2 * v48) ^ 0xA2501D80) & v48;
  v51 = v24 ^ 0xFFFFFF9C;
  v52 = (4 * v49) & 0x5DAC1FC0 ^ v49 ^ ((4 * v49) ^ 0x15000) & v50;
  v53 = (4 * v50) & 0x5DAC1FC0 ^ 0x90C00C0 ^ ((4 * v50) ^ 0x22101F00) & v50;
  v54 = v52 ^ (16 * v52) & 0x5DAC1FC0 ^ ((16 * v52) ^ 0x44000) & v53;
  v55 = (16 * v53) & 0x5DAC1FC0 ^ 0x52C03C0 ^ ((16 * v53) ^ 0xDAC1FC00) & v53;
  v56 = ((v54 ^ 0x5DA85BC0) << 8) & 0x5DAC1F00 ^ v54 ^ 0x5DA85BC0 ^ (((v54 ^ 0x5DA85BC0) << 8) ^ 0xAC1FC000) & v55;
  v57 = (v47 + 375573715) ^ (2
                           * ((v56 << 16) & 0x5DAC0000 ^ v56 ^ ((v56 << 16) ^ 0x1FC00000) & ((v55 << 8) & 0x5DAC0000 ^ 0x51A00000 ^ ((v55 << 8) ^ 0xAC1F0000) & v55)));
  STACK[0x16F0] = v57;
  v58 = STACK[0x18B8];
  v59 = ((2 * *(_BYTE *)(v58 + (v57 ^ 0x71DDF059))) >> 6) ^ ((2
                                                                                              * *(_BYTE *)(v58 + (v57 ^ 0x71DDF059))) >> 4) ^ ((*(unsigned __int8 *)(v58 + (v57 ^ 0x71DDF059)) >> 7) & 0xFFFFFE01 | (2 * *(unsigned __int8 *)(v58 + (v57 ^ 0x71DDF059)))) ^ 0xFFFFFFD7;
  v60 = (_BYTE)v59 << 6;
  v61 = (unsigned __int8 *)STACK[0x1468];
  v62 = *((unsigned __int8 *)&STACK[0x2920] + ((v22 % 0x51A - 1926392729 - ((2 * (v22 % 0x51A)) & 0x8CE)) ^ 0x8D2D9467)) ^ STACK[0x1720] ^ *(unsigned __int8 *)(STACK[0x1468] + 80);
  v63 = *((unsigned __int8 *)&STACK[0x2920] + (v46 ^ 0xFCD620E7) % 0x51A) ^ LODWORD(STACK[0x1148]) ^ *(unsigned __int8 *)(STACK[0x1468] + 134);
  LODWORD(STACK[0x1858]) = *(unsigned __int8 *)(STACK[0x1468] + 208) ^ ((v59 << 6) | (v59 >> 2));
  LODWORD(STACK[0xCB8]) = v28;
  v64 = 71 * (LODWORD(STACK[0xE04]) ^ (v18 - 37));
  v65 = v64 + 76260338;
  v66 = (v65 ^ 0xE36F316E) & (2 * ((v64 - 23566) & 0x256F)) ^ (v64 - 23566) & 0x256F;
  LODWORD(v57) = (2 * (v65 ^ 0xE36F3BAA)) & 0xEC4 ^ 0x18245 ^ ((2 * (v65 ^ 0xE36F3BAA)) ^ 0x20241D8A) & (v65 ^ 0xE36F3BAA);
  v67 = (4 * v66) & 0x18EC4 ^ v66 ^ ((4 * v66) | 0x60000) & v57;
  LODWORD(v57) = (4 * v57) & 0x181B8EC4 ^ 0x181184C1 ^ ((4 * v57) ^ 0x606E3B14) & v57;
  v68 = (16 * v67) & 0x181B8EC0 ^ v67 ^ ((16 * v67) ^ 0x380000) & v57;
  LODWORD(v57) = (16 * v57) & 0x181B8EC0 ^ 0x18030285 ^ ((16 * v57) ^ 0x81B8EC50) & v57;
  v69 = v68 ^ (v68 << 8) & 0x181B8E00 ^ ((v68 << 8) ^ 0x1B800000) & v57;
  v70 = v65 ^ 0xDB41A8E5 ^ (2
                          * (((v69 ^ 0xEC5) << 16) & 0x181B0000 ^ v69 ^ 0xEC5 ^ (((v69 ^ 0xEC5) << 16) ^ 0xEC50000) & (((_DWORD)v57 << 8) & 0x181B0000 ^ 0x110000 ^ (((_DWORD)v57 << 8) ^ 0x1B8E0000) & v57)));
  v71 = (((*(_BYTE *)(v58
                                     + ((((v28 ^ LOBYTE(STACK[0xD8C])) >> 3) | (32 * (v28 ^ LOBYTE(STACK[0xD8C])))) ^ 0x9Du)
                                     + 1665)
                          - 38) ^ ((*(_BYTE *)(v58
                                                              + ((((v28 ^ LOBYTE(STACK[0xD8C])) >> 3) | (32 * (v28 ^ LOBYTE(STACK[0xD8C])))) ^ 0x9Du)
                                                              + 1665)
                                                   - 38) >> 5) ^ ((*(_BYTE *)(v58
                                                                                             + ((((v28 ^ LOBYTE(STACK[0xD8C])) >> 3) | (32 * (v28 ^ LOBYTE(STACK[0xD8C])))) ^ 0x9Du)
                                                                                             + 1665)
                                                                                  - 38) >> 4)) ^ 0xE2)
      + 176423282;
  v72 = (v71 ^ 0x3E1370D6) & (2 * (v71 & 0x97)) ^ v71 & 0x97;
  LODWORD(v57) = (2 * (v71 ^ 0x3E1371D0)) & (a3 + 3589) ^ 0x51141 ^ ((2 * (v71 ^ 0x3E1371D0)) ^ 0x1496628E) & (v71 ^ 0x3E1371D0);
  v73 = (4 * v72) & 0x44 ^ v72 ^ ((4 * v72) | 0x300000) & v57;
  LODWORD(v57) = (4 * v57) & 0xCB6F7144 ^ 0xC2423043 ^ ((4 * v57) ^ 0x2DBDC51C) & v57;
  v74 = (16 * v73) & 0x4B6F7140 ^ v73 ^ ((16 * v73) ^ 0x2C00000) & v57;
  LODWORD(v57) = (16 * v57) & 0xCB6F7140 ^ 0x49086107 ^ ((16 * v57) ^ 0xB6F71470) & v57;
  v75 = v74 ^ (v74 << 8) & 0xCB6F7100 ^ ((v74 << 8) ^ 0x6C000000) & v57;
  v76 = v71 ^ (2
             * (((v75 ^ 0x81037147) << 16) & 0x4B6F0000 ^ v75 ^ 0x81037147 ^ (((v75 ^ 0x81037147) << 16) ^ 0x71470000) & (((_DWORD)v57 << 8) & 0x4B6F0000 ^ (((_DWORD)v57 << 8) ^ 0x6F710000) & v57 ^ 0xE0000)));
  v77 = 385 * (((v76 ^ 0x88DB1745) + 455450309) ^ ((v76 ^ 0x1809F61) - 1837230367) ^ ((v76 ^ 0x68776A3D) - 74849347))
      + 1368141543;
  v78 = v77 % 0x51A - 1926392729 - ((2 * (v77 % 0x51A)) & 0x8CE);
  v79 = 385 * (STACK[0x1600] ^ LODWORD(STACK[0x1250])) + 2081620037;
  LODWORD(v57) = (v79 ^ 0x97CDEE43) & (2 * (v79 & 0xF44)) ^ v79 & 0xF44;
  v80 = (2 * (v79 ^ 0x97CDEACB)) & 0x143DE58E ^ 0x14042481 ^ ((2 * (v79 ^ 0x97CDEACB)) ^ 0x285BCB1E) & (v79 ^ 0x97CDEACB);
  LODWORD(v57) = (4 * v57) & 0x6500 ^ v57 ^ ((4 * v57) | 0xC00000) & v80;
  v81 = (4 * v80) & 0x143DE58C ^ 0x4086183 ^ ((4 * v80) ^ 0x50F7963C) & v80;
  LODWORD(v57) = (16 * v57) & 0x143DE580 ^ v57 ^ ((16 * v57) ^ 0x3000000) & v81;
  v82 = (16 * v81) & 0x143DE580 ^ 0x1421A50F ^ ((16 * v81) ^ 0x43DE58F0) & v81;
  LODWORD(v57) = v57 ^ ((_DWORD)v57 << 8) & 0x143DE500 ^ (((_DWORD)v57 << 8) ^ 0x30000000) & v82;
  v83 = v79 ^ (2
             * (((v57 ^ 0x40DE58F) << 16) & 0x143D0000 ^ v57 ^ 0x40DE58F ^ (((v57 ^ 0x40DE58F) << 16) ^ 0x658F0000) & ((v82 << 8) & 0x143D0000 ^ ((v82 << 8) ^ 0x3DE50000) & v82 ^ 0x180000))) ^ 0x2EBC503D;
  v84 = 0x322E42A57083BALL
      * (((v83 ^ 0x5158E0588D0602A7) - 0x5158E0588D0602A7) ^ ((v83 ^ 0x33993BCD50AECF50) - 0x33993BCD50AECF50) ^ ((v83 ^ 0x62C1DB9550855990) - 0x62C1DB9550855990))
      + 0x4738EE00CD8EE376;
  v85 = (v84 ^ 0xA44C53A46EEF8045) & (2 * (v84 & 0xA68C43C9688FA460)) ^ v84 & 0xA68C43C9688FA460;
  v86 = ((2 * (v84 ^ 0xE544D4B4BFF48045)) ^ 0x87912EFBAEF6484ALL) & (v84 ^ 0xE544D4B4BFF48045) ^ (2 * (v84 ^ 0xE544D4B4BFF48045)) & 0x43C8977DD77B2424;
  v87 = (v86 ^ 0x200066986720000) & (4 * v85) ^ v85;
  v88 = ((4 * (v86 ^ 0x4048910451092425)) ^ 0xF225DF75DEC9094) & (v86 ^ 0x4048910451092425) ^ (4 * (v86 ^ 0x4048910451092425)) & 0x43C8977DD77B2424;
  v89 = (v88 ^ 0x300157555680000) & (16 * v87) ^ v87;
  v90 = ((16 * (v88 ^ 0x40C8820882132421)) ^ 0x3C8977DD77B24250) & (v88 ^ 0x40C8820882132421) ^ (16 * (v88 ^ 0x40C8820882132421)) & 0x43C8977DD77B2420;
  v91 = (v90 ^ 0x88175D57320000) & (v89 << 8) ^ v89;
  v92 = (((v90 ^ 0x4340802080492425) << 8) ^ 0xC8977DD77B242500) & (v90 ^ 0x4340802080492425) ^ ((v90 ^ 0x4340802080492425) << 8) & 0x43C8977DD77B2400;
  v93 = v91 ^ 0x43C8977DD77B2425 ^ (v92 ^ 0x4080155553200000) & (v91 << 16);
  v94 = v84 ^ (2
             * ((v93 << 32) & 0x43C8977D00000000 ^ v93 ^ ((v93 << 32) ^ 0x577B242500000000) & (((v92 ^ 0x3488228845B0025) << 16) & 0x43C8977D00000000 ^ 0x4080000400000000 ^ (((v92 ^ 0x3488228845B0025) << 16) ^ 0x177DD77B00000000) & (v92 ^ 0x3488228845B0025))));
  v95 = ((v94 ^ 0xB84015A164971E08) + 0x29E956A18A5B94F0) ^ ((v94 ^ 0xF86275AF147EBDDCLL) + 0x69CB36AFFAB2373CLL);
  LODWORD(v94) = __CFADD__(1306 * (v95 ^ ((v94 ^ 0xE7AF0576B6904FFELL) + 0x76064676585CC51ALL)), 0xCB93BF0052918914)
               + (((v95 ^ ((v94 ^ 0xE7AF0576B6904FFELL) + 0x76064676585CC51ALL)) * (unsigned __int128)0x51AuLL) >> 64)
               + 1306
               * ((__CFADD__(v94 ^ 0xB84015A164971E08, 0x29E956A18A5B94F0) - 1) ^ (__CFADD__(v94 ^ 0xF86275AF147EBDDCLL, 0x69CB36AFFAB2373CLL)- 1) ^ (__CFADD__(v94 ^ 0xE7AF0576B6904FFELL, 0x76064676585CC51ALL)- 1))+ 999226580;
  LODWORD(v95) = (v94 & 0xC4710731 | (a5 + 2743) | (2 * (v94 & 0xC4710731)) & (a6 + 1974)) ^ (2 * (v94 & 0xC4710731)) & (v94 ^ 0xDDF46EB9);
  LODWORD(v92) = (2 * (v94 ^ 0xDDF46EB9)) & 0x19856988 ^ 0x8852888 ^ ((2 * (v94 ^ 0xDDF46EB9)) ^ 0x330AD310) & (v94 ^ 0xDDF46EB9);
  LODWORD(v95) = (4 * v95) & 0x11852988 ^ v95 ^ v92 & 0x33CC3DCC & (4 * v95);
  LODWORD(v92) = (4 * v92) & 0x19856988 ^ 0x19804988 ^ ((4 * v92) ^ 0x6615A620) & v92;
  LODWORD(v95) = (16 * v95) & 0x19856980 ^ v95 ^ ((16 * v95) ^ 0x10140000) & v92;
  LODWORD(v92) = (16 * v92) & 0x19856980 ^ 0x1816108 ^ ((16 * v92) ^ 0x98569880) & v92;
  LODWORD(v95) = v95 ^ ((_DWORD)v95 << 8) & 0x19856900 ^ (((_DWORD)v95 << 8) ^ 0x5400000) & v92;
  LODWORD(v94) = v94 ^ (2
                      * (((v95 ^ 0x9802988) << 16) & 0x19850000 ^ v95 ^ 0x9802988 ^ (((v95 ^ 0x9802988) << 16) ^ 0x69880000) & (((_DWORD)v92 << 8) & 0x19850000 ^ 0x18840000 ^ (((_DWORD)v92 << 8) ^ 0x5690000) & v92)));
  LODWORD(v95) = (LODWORD(STACK[0xC60]) ^ LODWORD(STACK[0x15F0])) + 1458351878;
  LODWORD(v92) = (2 * (v95 & 0x1303 ^ 0xCB22408A)) & 0x80000002 ^ v95 & 0x1303 ^ 0xCB22408A ^ ((2
                                                                                              * (v95 & 0x1303 ^ 0xCB22408A)) ^ 0x14448114) & (v95 ^ 0x62311389);
  v96 = (2 * (v95 ^ 0x62311389)) & 0x8A ^ 0x8A ^ ((2 * (v95 ^ 0x62311389)) ^ 0x14448114) & (v95 ^ 0x62311389);
  LODWORD(v92) = (4 * v92) & 0xCB224088 ^ v92 ^ ((4 * v92) ^ 0x2C890228) & v96;
  v97 = (4 * v96) & 0xCB224088 ^ 0xC3224082 ^ ((4 * v96) ^ 0x2C890228) & v96;
  LODWORD(v92) = v92 ^ 0x8A200008 ^ (16 * v92) & 0xCB224080 ^ ((16 * v92) ^ 0x32240820) & v97;
  v98 = (16 * v97) & 0xCB224080 ^ 0x4902400A ^ ((16 * v97) ^ 0xB22408A0) & v97;
  LODWORD(v92) = ((_DWORD)v92 << 8) & 0xCB224000 ^ v92 ^ (((_DWORD)v92 << 8) ^ 0x22408A00) & v98;
  LODWORD(v92) = v95 ^ (2
                      * (((_DWORD)v92 << 16) & 0x4B220000 ^ v92 ^ (((_DWORD)v92 << 16) ^ 0x408A0000) & ((v98 << 8) & 0xCB220000 ^ 0x49220000 ^ ((v98 << 8) ^ 0x22400000) & v98)));
  v99 = 385 * (LODWORD(STACK[0x1650]) ^ LODWORD(STACK[0xDAC])) + 1590508145;
  LODWORD(v95) = (2 * (v99 & 0x1D518)) & 0x10220 ^ v99 & 0x1D518 ^ ((2 * (v99 & 0x1D518)) | 0x80000) & (v99 ^ 0x8F44C2F4);
  v100 = (2 * (v99 ^ 0x8F44C2F4)) & 0x221117EC ^ 0x22111024 ^ ((2 * (v99 ^ 0x8F44C2F4)) ^ 0x50822FD8) & (v99 ^ 0x8F44C2F4);
  LODWORD(v95) = (4 * v95) & 0x2E7117EC ^ v95 ^ ((4 * v95) ^ 0x100000) & v100;
  v101 = (4 * v100) & 0x2E7117EC ^ 0x631004C ^ ((4 * v100) ^ v8) & v100;
  LODWORD(v95) = (16 * v95) & 0x2E7117E0 ^ v95 ^ ((16 * v95) ^ 0x1400000) & v101;
  v102 = (16 * v101) & 0x2E7117E0 ^ 0x860012C ^ ((16 * v101) ^ 0xE7117EC0) & v101;
  LODWORD(v95) = v95 ^ ((_DWORD)v95 << 8) & 0x2E711700 ^ (((_DWORD)v95 << 8) ^ 0x54000000) & v102;
  v103 = ((v95 ^ 0x2A2517EC) << 16) & 0x2E710000 ^ v95 ^ 0x2A2517EC ^ (((v95 ^ 0x2A2517EC) << 16) ^ 0x17EC0000) & ((v102 << 8) & 0x2E710000 ^ 0xE600000 ^ ((v102 << 8) ^ 0x71170000) & v102);
  LODWORD(v95) = 385 * (LODWORD(STACK[0xCE0]) ^ LODWORD(STACK[0x1254])) + 516570991;
  v104 = (2 * (v95 & 0xD01A)) & 0x8000 ^ v95 & 0xD01A ^ ((2 * (v95 & 0xD01A)) | 0x100000) & (v95 ^ 0xFEF00D9A);
  v105 = (2 * (v95 ^ 0xFEF00D9A)) & 0x48DD80 ^ (v20 + 1086) ^ ((2 * (v95 ^ 0xFEF00D9A)) ^ 0x2011BB00) & (v95 ^ 0xFEF00D9A);
  v106 = (4 * v104) & 0x1FC8DD80 ^ v104 ^ ((4 * v104) | 0x200000) & v105;
  v107 = (4 * v105) & 0x1FC8DD80 ^ 0xC88980 ^ ((4 * v105) ^ 0x7F237600) & v105;
  v108 = (16 * v106) & 0x1FC8DD80 ^ v106 ^ ((16 * v106) ^ 0x800000) & v107;
  v109 = (16 * v107) & 0x1FC8DD80 ^ 0x3400580 ^ ((16 * v107) ^ 0xFC8DD800) & v107;
  v110 = v108 ^ (v108 << 8) & 0x1FC8DD00 ^ ((v108 << 8) ^ 0x88000000) & v109;
  v111 = v95 ^ (2
              * (((v110 ^ 0x1740DD80) << 16) & 0x1FC80000 ^ v110 ^ 0x1740DD80 ^ (((v110 ^ 0x1740DD80) << 16) ^ 0x5D800000) & ((v109 << 8) & 0x1FC80000 ^ 0x17000000 ^ ((v109 << 8) ^ 0x48DD0000) & v109)));
  LOBYTE(v95) = v64 ^ 0xA5 ^ *(_BYTE *)(v58 + v70);
  v112 = v99 ^ (2 * v103) ^ 0xF117FAC0;
  v113 = *((unsigned __int8 *)&STACK[0x2920] + (v94 ^ 0xE47BD421));
  v114 = 63 * (v113 ^ 0xD ^ *(unsigned __int8 *)((v113 ^ 0xCF) + v58 + 4174));
  LODWORD(STACK[0x17A8]) = v114;
  LODWORD(v113) = 385
                * (((v92 ^ 0xA69DD349) + 1864133319) ^ ((v92 ^ 0xCDB97776) + 70831866) ^ ((v92 ^ 0xD0777628) + 435605416))
                - 1901422650;
  v115 = (v113 ^ 0xA2F596AD) & (2 * (v113 & 0xC2E19721)) ^ v113 & 0xC2E19721;
  LODWORD(v92) = ((2 * (v113 ^ 0xA6B598ED)) ^ 0xC8A81F98) & (v113 ^ 0xA6B598ED) ^ (2 * (v113 ^ 0xA6B598ED)) & 0x64540FCC;
  v116 = (v92 ^ 0x20500DC8) & (4 * v115) ^ v115;
  LODWORD(v92) = ((4 * (v92 ^ 0x24540044)) ^ 0x91503F30) & (v92 ^ 0x24540044) ^ (4 * (v92 ^ 0x24540044)) & 0x64540FCC;
  v117 = (v92 ^ 0x500F0C) & (16 * v116) ^ v116;
  LODWORD(v92) = ((16 * (v92 ^ 0x640400CC)) ^ 0x4540FCC0) & (v92 ^ 0x640400CC) ^ (16 * (v92 ^ 0x640400CC)) & 0x64540FC0;
  v118 = v117 ^ 0x64540FCC ^ (v92 ^ 0x44400C0C) & (v117 << 8);
  v119 = (v113 ^ (2
                              * ((v118 << 16) & 0x64540000 ^ v118 ^ ((v118 << 16) ^ 0xFCC0000) & (((v92 ^ 0x2014030C) << 8) & 0x64540000 ^ 0x20500000 ^ (((v92 ^ 0x2014030C) << 8) ^ 0x540F0000) & (v92 ^ 0x2014030C)))) ^ 0x2C188B9)
       % 0x51A;
  v120 = 0x322E42A57083BALL
       * (((v111 ^ 0xE0B9E6B7DB757B3ALL) + 0x1F4619484C0E7BB9) ^ ((v111 ^ 0x818C2F2F44E3ED7DLL) + 0x7E73D0D0D398EE00) ^ ((v111 ^ 0x6135C9987A3FFD5DLL) - 0x6135C99812BB0220))
       + 0x4BEA73B1143E3B63;
  v121 = (2 * (v120 & 0xA1DABE1921E04C72)) & 0x20143202C08020 ^ v120 & 0xA1DABE1921E04C72 ^ ((2
                                                                                                  * (v120 & 0xA1DABE1921E04C72)) | 2) & (v120 ^ 0x81F029AB9F34CD48);
  v122 = (2 * (v120 ^ 0x81F029AB9F34CD48)) & 0x202A97B2BED4813ALL ^ 0x202A909282548109 ^ ((2
                                                                                             * (v120 ^ 0x81F029AB9F34CD48)) ^ 0x40552F657DA90276) & (v120 ^ 0x81F029AB9F34CD48);
  v123 = (4 * v121) & 0x202A97B2BED48138 ^ v121 ^ ((4 * v121) ^ 0xC) & v122;
  v124 = (4 * v122) & 0x202A97B2BED48138 ^ 0x2000813004848113 ^ ((4 * v122) ^ 0x80AA5ECAFB5204ECLL) & v122;
  v125 = (16 * v123) & 0x202A97B2BED48130 ^ v123 ^ ((16 * v123) ^ 0xB0) & v124;
  v126 = (16 * v124) & 0x202A97B2BED48130 ^ 0x200284901294800BLL ^ ((16 * v124) ^ 0x2A97B2BED4813B0) & v124;
  v127 = (v125 << 8) & 0x202A97B2BED48100 ^ v125 ^ ((v125 << 8) ^ 0x3B00) & v126;
  v128 = (v126 << 8) & 0x202A97B2BED48100 ^ 0x2805002A54803BLL ^ ((v126 << 8) ^ 0x2A97B2BED4813B00) & v126;
  v129 = v127 ^ 0x202A97B2BEC48000 ^ (v127 << 16) & 0x202A97B2BED40000 ^ ((v127 << 16) ^ 0x13B0000) & v128;
  v130 = v120 ^ (2
               * ((v129 << 32) & 0x202A97B200000000 ^ v129 ^ ((v129 << 32) ^ 0x3ED4813B00000000) & ((v128 << 16) & 0x202A97B200000000 ^ 0x2008012200000000 ^ ((v128 << 16) ^ 0x17B2BED400000000) & v128)));
  v131 = ((v130 ^ 0x284B7D23258B38EDLL) - 0x8ACCA00B3A935C2) ^ ((v130 ^ 0x9AEBAEA40601C79FLL) + 0x45F3E6786FDC3550);
  LODWORD(v131) = __CFADD__(1306 * (v131 ^ ((v130 ^ 0x132E409F7FC3B177) - 0x33C9F7BCE9E1BC58)), 0x3262D906A734A444)+ (((v131 ^ ((v130 ^ 0x132E409F7FC3B177) - 0x33C9F7BCE9E1BC58)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v130 ^ 0x284B7D23258B38EDLL, 0xF75335FF4C56CA3ELL) - 1) ^ (__CFADD__(v130 ^ 0x9AEBAEA40601C79FLL, 0x45F3E6786FDC3550)- 1) ^ (__CFADD__(v130 ^ 0x132E409F7FC3B177, 0xCC360843161E43A8)- 1))+ 1612605786;
  LODWORD(v130) = (v131 ^ 0xDFF199B1) & (2 * (v131 & 0x9FE1993A)) ^ v131 & 0x9FE1993A;
  LODWORD(v128) = ((2 * (v131 ^ 0xEE73B9C1)) ^ 0xE32441F6) & (v131 ^ 0xEE73B9C1) ^ (2 * (v131 ^ 0xEE73B9C1)) & 0x719220FA;
  LODWORD(v130) = (v128 ^ 0x610000F0) & (4 * v130) ^ v130;
  LODWORD(v128) = ((4 * (v128 ^ 0x10922009)) ^ 0xC64883EC) & (v128 ^ 0x10922009) ^ (4 * (v128 ^ 0x10922009)) & 0x719220F8;
  LODWORD(v130) = (v128 ^ 0x400000F3) & (16 * v130) ^ v130;
  LODWORD(v128) = ((16 * (v128 ^ 0x31922013)) ^ 0x19220FB0) & (v128 ^ 0x31922013) ^ (16 * (v128 ^ 0x31922013)) & 0x719220F0;
  LODWORD(v130) = v130 ^ 0x719220FB ^ (v128 ^ 0x1102004B) & ((_DWORD)v130 << 8);
  v132 = ((_DWORD)v130 << 16) & 0x71920000 ^ v130 ^ (((_DWORD)v130 << 16) ^ 0x20FB0000) & (((v128 ^ 0x6090204B) << 8) & 0x71920000 ^ 0x61920000 ^ (((v128 ^ 0x6090204B) << 8) ^ 0x12200000) & (v128 ^ 0x6090204B));
  LODWORD(v130) = 385 * (v95 - 107)
                + 200585
                - 1306
                * ((3288643 * (unint64_t)(385 * (v95 - 107) + 200585)) >> 32);
  v133 = LODWORD(STACK[0x1834]) + 47963101;
  LODWORD(v128) = ((v133 ^ 0x68F30EAB | 0x800) & (2 * ((LODWORD(STACK[0x1834]) - 9251) & 0x62C)) | 0x20002) ^ (LODWORD(STACK[0x1834]) - 9251) & 0x62C;
  LODWORD(v95) = (2 * (v133 ^ 0x68F30EAB)) & 0x886 ^ 0x881 ^ ((2 * (v133 ^ 0x68F30EAB)) ^ 0x2A28510E) & (v133 ^ 0x68F30EAB);
  LODWORD(v128) = (4 * v128) & 0x15D72880 ^ v128 ^ v95 & 0x6A20DFF0 & (4 * v128);
  LODWORD(v95) = (4 * v95) & 0x95D72884 ^ 0x80830883 ^ ((4 * v95) ^ 0x4208821C) & v95;
  LODWORD(v128) = v128 ^ (16 * v128) & 0x15D72880 ^ ((16 * v128) ^ 0x200020) & v95;
  LODWORD(v95) = (16 * v95) & 0x95D72880 ^ 0x80852087 ^ ((16 * v95) ^ 0x5D728870) & v95;
  LODWORD(v128) = ((v128 ^ 0x95D52885) << 8) & 0x95D72800 ^ v128 ^ 0x95D52885 ^ (((v128 ^ 0x95D52885) << 8) ^ 0xD7288700) & v95;
  LODWORD(v95) = v133 ^ (2
                       * (((_DWORD)v128 << 16) & 0x15D70000 ^ v128 ^ (((_DWORD)v128 << 16) ^ 0x28870000) & (((_DWORD)v95 << 8) & 0x15D70000 ^ 0xD70000 ^ (((_DWORD)v95 << 8) ^ 0xD7280000) & v95)));
  v134 = LODWORD(STACK[0x1868]) + 420580422;
  v135 = ((2 * ((LODWORD(STACK[0x1868]) - 29626) & 0x1C3)) & 0x204 | 0x80811451) ^ ((LODWORD(STACK[0x1868]) - 29626) & 0x1C3 | 0x1A02A60C) ^ ((2 * ((LODWORD(STACK[0x1868]) - 29626) & 0x1C3)) | 0x800) & (v134 ^ 0x7C6DC39E);
  LODWORD(v128) = (2 * (v134 ^ 0x7C6DC39E)) & 0x65C ^ 0x245 ^ ((2 * (v134 ^ 0x7C6DC39E)) ^ 0x25044CBA) & (v134 ^ 0x7C6DC39E);
  v136 = (4 * v135) & 0x9A83B65C ^ v135 ^ ((4 * v135) ^ 0x6A0ED974) & v128;
  LODWORD(v128) = (4 * v128) & 0x9A83B65C ^ 0x90812609 ^ ((4 * v128) ^ 0x6A0ED974) & v128;
  v137 = (16 * v136) & 0x9A83B650 ^ v136 ^ ((16 * v136) ^ 0x8126090) & v128;
  LODWORD(v128) = (16 * v128) & 0x9A83B650 ^ 0x1280920D ^ ((16 * v128) ^ 0xA83B65D0) & v128;
  v138 = v137 ^ (v137 << 8) & 0x9A83B600 ^ ((v137 << 8) ^ 0x83061900) & v128;
  v139 = v134 ^ (2
               * (((v138 ^ 0x8002A044) << 16) & 0x1A830000 ^ v138 ^ 0x8002A044 ^ (((v138 ^ 0x8002A044) << 16) ^ 0x365D0000) & (((_DWORD)v128 << 8) & 0x1A830000 ^ 0x18010000 ^ (((_DWORD)v128 << 8) ^ 0x3B60000) & v128)));
  v140 = 385
       * (((v139 ^ 0x30899745) - 1246698075) ^ ((v139 ^ 0x81E6E39C) + 81760638) ^ ((v139 ^ 0x46846DA0) - 1011015870))
       - 1588283374;
  v141 = (v140 ^ 0x37A67490) & (2 * (v140 & 0xB03776D5)) ^ v140 & 0xB03776D5;
  LODWORD(v128) = ((2 * (v140 ^ 0x57C65CB8)) ^ 0xCFE254DA) & (v140 ^ 0x57C65CB8) ^ (2 * (v140 ^ 0x57C65CB8)) & 0xE7F12A6C;
  v142 = (v128 ^ 0xE1E00049) & (4 * v141) ^ v141;
  LODWORD(v128) = ((4 * (v128 ^ 0x20112A25)) ^ 0x9FC4A9B4) & (v128 ^ 0x20112A25) ^ (4 * (v128 ^ 0x20112A25)) & 0xE7F12A6C;
  v143 = (v128 ^ 0x87C02820) & (16 * v142) ^ v142;
  LODWORD(v128) = ((16 * (v128 ^ 0x60310249)) ^ 0x7F12A6D0) & (v128 ^ 0x60310249) ^ (16 * (v128 ^ 0x60310249)) & 0xE7F12A60;
  v144 = v143 ^ 0xE7F12A6D ^ (v128 ^ 0x67102200) & (v143 << 8);
  v145 = v140 ^ (2
               * ((v144 << 16) & 0x67F10000 ^ v144 ^ ((v144 << 16) ^ 0x2A6D0000) & (((v128 ^ 0x80E1082D) << 8) & 0x67F10000 ^ 0x6D10000 ^ (((v128 ^ 0x80E1082D) << 8) ^ 0x712A0000) & (v128 ^ 0x80E1082D))));
  v146 = 385 * (((v95 ^ 0x34C0BC79) - 1147756348) ^ ((v95 ^ 0xB7ABAC72) + 956149961) ^ ((v95 ^ 0x7EEF6729) - 239502444))
       - 1519152133;
  LODWORD(v95) = (v146 ^ 0xBDE90CB) & (2 * (v146 & 0xAC189AEC)) ^ v146 & 0xAC189AEC;
  LODWORD(v128) = ((2 * (v146 ^ 0x43CFB113)) ^ 0xDFAE57FE) & (v146 ^ 0x43CFB113) ^ (2 * (v146 ^ 0x43CFB113)) & 0xEFD72BFE;
  LODWORD(v95) = (v128 ^ 0xC08603F0) & (4 * v95) ^ v95;
  LODWORD(v128) = ((4 * (v128 ^ 0x20512801)) ^ 0xBF5CAFFC) & (v128 ^ 0x20512801) ^ (4 * (v128 ^ 0x20512801)) & 0xEFD72BFC;
  LODWORD(v95) = (v128 ^ 0xAF542BE0) & (16 * v95) ^ v95;
  LODWORD(v128) = ((16 * (v128 ^ 0x40830003)) ^ 0xFD72BFF0) & (v128 ^ 0x40830003) ^ (16 * (v128 ^ 0x40830003)) & 0xEFD72BF0;
  LODWORD(v95) = v95 ^ 0xEFD72BFF ^ (v128 ^ 0xED522B00) & ((_DWORD)v95 << 8);
  LODWORD(v95) = v146 ^ (2
                       * (((_DWORD)v95 << 16) & 0x6FD70000 ^ v95 ^ (((_DWORD)v95 << 16) ^ 0x2BFF0000) & (((v128 ^ 0x285000F) << 8) & 0x6FD70000 ^ 0x28D40000 ^ (((v128 ^ 0x285000F) << 8) ^ 0x572B0000) & (v128 ^ 0x285000F))));
  v147 = v131 ^ (2 * v132);
  v148 = 0x322E42A57083BALL
       * (((v95 ^ 0xC2E41E7EC72C8391) + 0x3D1BE18191E6251CLL) ^ ((v95 ^ 0x4285BBC5A4309C4CLL)
                                                                               - 0x4285BBC50D05C539) ^ ((v95 ^ 0x8061A5BB4704D2CFLL) + 0x7F9E5A4411CE7446))
       - 0x2BA34EB54E915052;
  v149 = (v148 ^ 0x14440D7F862F9E8CLL) & (2 * (v148 & 0x1968807F84AFD828)) ^ v148 & 0x1968807F84AFD828;
  v150 = ((2 * (v148 ^ 0x34440D5786358ECCLL)) ^ 0x5A591A500534ADC8) & (v148 ^ 0x34440D5786358ECCLL) ^ (2 * (v148 ^ 0x34440D5786358ECCLL)) & 0x2D2C8D28029A56E4;
  v151 = (v150 ^ 0x8000000001000C0) & (4 * v149) ^ v149;
  v152 = ((4 * (v150 ^ 0x25248528028A5224)) ^ 0xB4B234A00A695B90) & (v150 ^ 0x25248528028A5224) ^ (4 * (v150 ^ 0x25248528028A5224)) & 0x2D2C8D28029A56E4;
  v153 = (v152 ^ 0x2420042002085280) & (16 * v151) ^ v151;
  v154 = ((16 * (v152 ^ 0x90C890800920464)) ^ 0xD2C8D28029A56E40) & (v152 ^ 0x90C890800920464) ^ (16 * (v152 ^ 0x90C890800920464)) & 0x2D2C8D28029A56E0;
  v155 = (v154 ^ 0x8800000804600) & (v153 << 8) ^ v153;
  v156 = (((v154 ^ 0x2D240D28021A10A4) << 8) ^ 0x2C8D28029A56E400) & (v154 ^ 0x2D240D28021A10A4) ^ ((v154 ^ 0x2D240D28021A10A4) << 8) & 0x2D2C8D28029A5600;
  v157 = v155 ^ 0x2D2C8D28029A56E4 ^ (v156 ^ 0x2C0C080002120000) & (v155 << 16);
  v158 = v148 ^ (2
               * ((v157 << 32) & 0x2D2C8D2800000000 ^ v157 ^ ((v157 << 32) ^ 0x29A56E400000000) & (((v156 ^ 0x1208528008812E4) << 16) & 0x2D2C8D2800000000 ^ 0x20048D2000000000 ^ (((v156 ^ 0x1208528008812E4) << 16) ^ 0xD28029A00000000) & (v156 ^ 0x1208528008812E4))));
  v159 = (__CFADD__(v158 ^ 0x4DCF14CB4FE32E1FLL, 0xEF21897CE775BCB9) - 1) ^ (__CFADD__(v158 ^ 0x6CD5A7EC10901A85, 0xCE3B3A5BB8068823)- 1);
  v160 = ((v158 ^ 0x4DCF14CB4FE32E1FLL) - 0x10DE7683188A4347) ^ ((v158 ^ 0x6CD5A7EC10901A85) - 0x31C4C5A447F977DDLL);
  v158 ^= 0x623B2148DEE8417AuLL;
  v161 = v160 ^ (v158 - 0x3F2A430089812C22);
  LODWORD(v158) = (((unint64_t)v161 * (unsigned __int128)0x51AuLL) >> 64)
                + 1306 * (v159 ^ (__CFADD__(v158, 0xC0D5BCFF767ED3DELL) - 1));
  v162 = __CFADD__(1306 * v161, 0x5A92B3E8F121AB0);
  v163 = 0x322E42A57083BALL
       * (((v145 ^ 0x2948CB38B3CB905CLL) - 0x2948CB3805F12634) ^ ((v145 ^ 0xC8C438137240AD8BLL) + 0x373BC7EC3B85E41DLL) ^ ((v145 ^ 0xE18CF32BFA9C1FD8) + 0x1E730CD4B3595650))
       - 0x6857F85D3CB797E7;
  v164 = (2 * (v163 & 0x561D2A2772D61FBCLL)) & 0x2C0A0440850C1628 ^ v163 & 0x561D2A2772D61FBCLL ^ ((2 * (v163 & 0x561D2A2772D61FBCLL)) | 2) & (v163 ^ 0x6A930ED7FFDAC992);
  v165 = (2 * (v163 ^ 0x6A930ED7FFDAC992)) & 0x3C8E24F08D0CD62ELL ^ 0x482241085045221 ^ ((2
                                                                                            * (v163 ^ 0x6A930ED7FFDAC992)) ^ 0x791C49E11A19AC5ELL) & (v163 ^ 0x6A930ED7FFDAC992);
  v166 = (4 * v164) & 0x3C8E24F08D0CD62CLL ^ v164 ^ ((4 * v164) ^ 0xC) & v165;
  v167 = (4 * v165) & 0x3C8E24F08D0CD62CLL ^ 0xC862430890C8603 ^ ((4 * v165) ^ 0xF23893C2343358BCLL) & v165;
  v168 = (16 * v166) & 0x3C8E24F08D0CD620 ^ v166 ^ ((16 * v166) ^ 0xF0) & v167;
  v169 = (16 * v167) & 0x3C8E24F08D0CD620 ^ 0x340C20F00D00940FLL ^ ((16 * v167) ^ 0xC8E24F08D0CD62F0) & v167;
  v170 = (v168 << 8) & 0x3C8E24F08D0CD600 ^ v168 ^ ((v168 << 8) ^ 0x2F00) & v169;
  v171 = (v169 << 8) & 0x3C8E24F08D0CD600 ^ 0x308A04708108D02FLL ^ ((v169 << 8) ^ 0x8E24F08D0CD62F00) & v169;
  v172 = v170 ^ (v170 << 16) & 0x3C8E24F08D0C0000 ^ ((v170 << 16) ^ 0x62F0000) & v171;
  v173 = v163 ^ (2
               * (((v172 ^ 0x3C8E24F08900D000) << 32) & 0x3C8E24F000000000 ^ v172 ^ 0x3C8E24F08900D000 ^ (((v172 ^ 0x3C8E24F08900D000) << 32) ^ 0xD0CD62F00000000) & ((v171 << 16) & 0x3C8E24F000000000 ^ 0x180E20F000000000 ^ ((v171 << 16) ^ 0x24F08D0C00000000) & v171)));
  LODWORD(STACK[0x1720]) = v162 + (_DWORD)v158 + 213070767;
  v174 = ((v173 ^ 0x3DD1DA6D3C0D4C1ELL) - 0x1477650BE9B00509) ^ ((v173 ^ 0x9C4838C1C45C2541) + 0x4A117858EE1E93AALL);
  LODWORD(v173) = __CFADD__(1306 * (v174 ^ ((v173 ^ 0x9680892A909EDABCLL) + 0x40D9C9B3BADC6C55)), 0xDEA402867C9440C8)+ (((v174 ^ ((v173 ^ 0x9680892A909EDABCLL) + 0x40D9C9B3BADC6C55)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v173 ^ 0x3DD1DA6D3C0D4C1ELL, 0xEB889AF4164FFAF7) - 1) ^ (__CFADD__(v173 ^ 0x9C4838C1C45C2541, 0x4A117858EE1E93AALL)- 1) ^ (__CFADD__(v173 ^ 0x9680892A909EDABCLL, 0x40D9C9B3BADC6C55)- 1))+ 1847524832;
  LODWORD(v174) = (v173 ^ 0xD9F9D23E) & (2 * (v173 & 0x91E102BC)) ^ v173 & 0x91E102BC;
  LODWORD(v172) = ((2 * (v173 ^ 0xF879D266)) ^ 0xD331A1B4) & (v173 ^ 0xF879D266) ^ (2 * (v173 ^ 0xF879D266)) & 0x6998D0DA;
  LODWORD(v174) = (v172 ^ 0x6100409A) & (4 * v174) ^ v174;
  LODWORD(v172) = ((4 * (v172 ^ 0x2888504A)) ^ 0xA6634368) & (v172 ^ 0x2888504A) ^ (4 * (v172 ^ 0x2888504A)) & 0x6998D0D8;
  LODWORD(v174) = (v172 ^ 0x20004052) & (16 * v174) ^ v174;
  LODWORD(v172) = ((16 * (v172 ^ 0x49989092)) ^ 0x998D0DA0) & (v172 ^ 0x49989092) ^ (16 * (v172 ^ 0x49989092)) & 0x6998D0D0;
  LODWORD(v174) = v174 ^ 0x6998D0DA ^ (v172 ^ 0x9880000) & ((_DWORD)v174 << 8);
  LODWORD(v171) = *((unsigned __int8 *)&STACK[0x2920] + (v78 ^ 0x8D2D9467));
  LODWORD(STACK[0x16C8]) = v171;
  v175 = *((unsigned __int8 *)&STACK[0x2920] + v112 % 0x51A);
  LODWORD(STACK[0x1868]) = v175;
  v176 = *((unsigned __int8 *)&STACK[0x2920] + v119);
  LODWORD(STACK[0x17EC]) = v176;
  v177 = ((_DWORD)v174 << 16) & 0x69980000 ^ v174 ^ (((_DWORD)v174 << 16) ^ 0x50DA0000) & (((v172 ^ 0x6010D05A) << 8) & 0x69980000 ^ 0x61080000 ^ (((v172 ^ 0x6010D05A) << 8) ^ 0x18D00000) & (v172 ^ 0x6010D05A));
  LODWORD(v174) = *((unsigned __int8 *)&STACK[0x2920] + v130);
  LODWORD(STACK[0x17BC]) = v174;
  LODWORD(v130) = *((unsigned __int8 *)&STACK[0x2920] + (v147 ^ 0x3DE1D8CCu));
  LODWORD(STACK[0x17E0]) = v130;
  v178 = *((unsigned __int8 *)&STACK[0x2920] + (v173 ^ (2 * v177) ^ 0xC3E0A308));
  LODWORD(STACK[0x16EC]) = v178;
  LODWORD(v173) = v174 ^ v176 ^ v178;
  LODWORD(STACK[0x16A4]) = v173;
  LODWORD(STACK[0x16B0]) = v114 ^ v171;
  v179 = v130 ^ v114 ^ v171;
  LODWORD(STACK[0x1698]) = v179;
  LODWORD(STACK[0x16B8]) = v179 ^ v175;
  v180 = (v173 ^ v179 ^ v175 ^ 0x12);
  v181 = (v180 + 26366297) ^ 0xFB858605;
  LODWORD(v173) = (2 * (((_WORD)v180 + 20825) & 0x3A9)) & 0x100 ^ (v180 + 26366297) & 0x3A9 ^ ((2
                                                                                              * ((v180 + 26366297) & 0x3A9)) | 0x48000) & v181;
  v182 = (2 * v181) & 0x181AC ^ 0x240A4 ^ ((2 * v181) ^ 0xA179358) & v181;
  LODWORD(v173) = (4 * v173) & 0x5EBC9AC ^ v173 ^ ((4 * v173) ^ 0x30000) & v182;
  v183 = (4 * v182) & 0x5EBC9AC ^ 0x40C90C ^ ((4 * v182) ^ 0x120726B0) & v182;
  LODWORD(v173) = (16 * v173) & 0x5EBC9A0 ^ v173 ^ ((16 * v173) ^ 0x9C0000) & v183;
  v184 = (16 * v183) & 0x5EBC9A0 ^ 0x143412C ^ ((16 * v183) ^ 0x5EBC9AC0) & v183;
  LODWORD(v173) = v173 ^ 0x4AA09AC ^ ((_DWORD)v173 << 8) & 0x5EBC900 ^ (((_DWORD)v173 << 8) ^ 0x81C00000) & v184;
  v185 = (v180 + 26366297) ^ (2
                            * (((_DWORD)v173 << 16) & 0x5EB0000 ^ v173 ^ (((_DWORD)v173 << 16) ^ 0x49AC0000) & ((v184 << 8) & 0x5EB0000 ^ 0x4220000 ^ ((v184 << 8) ^ 0x6BC90000) & v184)));
  STACK[0x1648] = v185;
  LODWORD(v130) = (1789 - v180) & 0x51A ^ 0x501C1134 ^ ((v185 & 0x110 ^ 0x501C1125) + (v185 & 0xA) - 1);
  v186 = STACK[0x16F8];
  v187 = v61[15] ^ LODWORD(STACK[0x16F8]);
  v188 = STACK[0x1858];
  LODWORD(STACK[0x17A0]) = LODWORD(STACK[0x1858]) ^ v62;
  v189 = v63;
  LODWORD(STACK[0x1790]) = v63;
  LODWORD(v173) = v188 ^ v62 ^ v63;
  v190 = v61[34];
  LODWORD(STACK[0x1688]) = v173 ^ v187;
  v191 = v187;
  v192 = STACK[0x1870];
  LODWORD(STACK[0x1738]) = (385 * (v173 ^ v187 ^ v190 ^ LODWORD(STACK[0x1870])) + 301070)
                         % v130;
  LODWORD(STACK[0x15F0]) = LODWORD(STACK[0x1798]) ^ (LODWORD(STACK[0x173C]) + 19);
  v193 = STACK[0x1838];
  LODWORD(v130) = (LODWORD(STACK[0x1838]) ^ 0xCF) + 673142441;
  LODWORD(v185) = (2 * (v130 & 0x1A5)) & (v130 ^ 0x893A0913) ^ v130 & 0x1A5 ^ ((2 * (v130 & 0x1A5)) & 2 | 0x1C000004);
  v194 = (2 * (v130 ^ 0x893A0913)) & 0x20B6 ^ 0x92 ^ ((2 * (v130 ^ 0x893A0913)) ^ 0xA125416C) & (v130 ^ 0x893A0913);
  LODWORD(v185) = (4 * v185) & 0x5EDAB0B4 ^ v185 ^ ((4 * v185) ^ 0x20004010) & v194;
  v195 = (4 * v194) & 0x5EDAB0B4 ^ 0x4903026 ^ ((4 * v194) ^ 0x212042D8) & v194;
  LODWORD(v185) = (16 * v185) & 0x5EDAB0B0 ^ v185 ^ ((16 * v185) ^ 0xC00B0140) & v195;
  v196 = (16 * v195) & 0x5EDAB0B0 ^ 0x1250B096 ^ ((16 * v195) ^ 0xEDAB0B60) & v195;
  LODWORD(v185) = v185 ^ ((_DWORD)v185 << 8) & 0x5EDAB000 ^ (((_DWORD)v185 << 8) ^ 0xAB01400) & v196;
  LODWORD(v130) = v130 ^ (2
                        * (((v185 ^ 0x584010A2) << 16) & 0x5EDA0000 ^ v185 ^ 0x584010A2 ^ (((v185 ^ 0x584010A2) << 16) ^ 0x30B60000) & ((v196 << 8) & 0x5EDA0000 ^ 0x44A0000 ^ ((v196 << 8) ^ 0x5AB00000) & v196)));
  LOBYTE(v185) = LODWORD(STACK[0x1810]) - 83;
  LODWORD(STACK[0xCEC]) = v51;
  LODWORD(v185) = ((71 * (v51 ^ v185)) ^ 0xB1) + 948950839;
  LODWORD(v174) = ((2 * (v185 ^ 0x2F3C90D)) ^ 0xA04104A) & (v185 ^ 0x2F3C90D) ^ ((2 * (v185 ^ 0x2F3C90D)) & 0x4800824 | 0x1000001);
  v197 = (((2 * (v185 & 0x128 ^ 0xC583C825)) ^ 0x804104A) & v185 | v185 & 0x128 ^ 0xC583C825) & 0xFFFEFFFF;
  v198 = v197 ^ v174 & 0x3C07D9 ^ ((4 * v197) ^ 0xD633A74C) & (v174 ^ 0xC1820001);
  LODWORD(v174) = ((4 * v174) ^ 0xC03687DC) & (v174 ^ 0xC0020001) ^ v174 & 0x3C07D9;
  v199 = v198 ^ v174 & 0xC03E87D9 ^ ((16 * v198) ^ 0x982A0599) & (v174 ^ 0xC0020005);
  LODWORD(v174) = ((16 * v174) ^ 0xC01E87C9) & (v174 ^ 0xC0020005) ^ v174 & 0xC03E87D9;
  v200 = v199 ^ v174 & 0xC03E87D9 ^ ((v199 << 8) ^ 0x4376A2D9) & (v174 ^ 0xC0020025);
  LODWORD(v174) = (((_DWORD)v174 << 8) ^ 0xC23E86D9) & (v174 ^ 0xC0020025) ^ v174 & 0xC03E87D9;
  v201 = v200 ^ v174 & 0x403E87D9 ^ ((v200 << 16) ^ 0x881A87D9) & (v174 ^ 0x5810000) ^ ((v200 << 16) ^ 0x881A87D9) & 0x45830001;
  v202 = v58;
  LODWORD(v174) = *(unsigned __int8 *)(v58 + (v130 ^ 0x4B71D8C9));
  LODWORD(STACK[0x1600]) = v185 ^ (2 * v201);
  LODWORD(v185) = v193 ^ 0xD ^ v174;
  v203 = LODWORD(STACK[0xDCC]) + 107;
  v204 = v61[43];
  LODWORD(STACK[0x1834]) = v204;
  v205 = v203 ^ LODWORD(STACK[0x1644]) ^ v204;
  v206 = STACK[0x1710];
  v207 = ((-3 * (v186 ^ LODWORD(STACK[0x1710]) ^ v205)) ^ 0x1B) + 1660190896;
  LODWORD(v172) = ((2 * (v207 & 0x1B6 ^ 0x2EA0F0C4)) ^ 0x51486188) & (v207 ^ 0xB3A8E972) ^ v207 & 0x1B6 ^ 0x2EA0F0C4 ^ ((2 * (v207 & 0x1B6 ^ 0x2EA0F0C4)) & 0xC00C0C4 | 0xA00000);
  LODWORD(v174) = ((2 * (v207 ^ 0xB3A8E972)) ^ 0x51486188) & (v207 ^ 0xB3A8E972) ^ ((2 * (v207 ^ 0xB3A8E972)) & 0x2200D0C4 | 0x2000);
  LODWORD(v172) = v172 ^ v174 & 0x1150C0AA ^ ((4 * v172) ^ 0x95E107BA) & (v174 ^ 0xCA0C080);
  LODWORD(v174) = ((4 * v174) ^ 0x2F72C4AA) & (v174 ^ 0xCA0C080) ^ v174 & 0x1150C0AA;
  LODWORD(v172) = v172 ^ v174 & 0x1DF1C6AA ^ ((16 * v172) ^ 0xF7BECAEA) & (v174 ^ 0xCA0C084);
  LODWORD(v174) = ((16 * v174) ^ 0xD7FDCEAA) & (v174 ^ 0xCA0C084) ^ v174 & 0x1DF1C6AA;
  LODWORD(v172) = v172 ^ v174 & 0x1DF1C6AA ^ (((_DWORD)v172 << 8) ^ 0x19C182AA) & (v174 ^ 0xCA0C0C4);
  LODWORD(v174) = (((_DWORD)v174 << 8) ^ 0xBD3146AA) & (v174 ^ 0xCA0C0C4) ^ v174 & 0x1DF1C6AA;
  v208 = *(unsigned __int8 *)(v58
                            + (v207 ^ (2
                                     * (v172 ^ v174 & 0x1DF1C6AA ^ (((_DWORD)v172 << 16) ^ 0xED35C6AB) & (v174 ^ 0x22040000) ^ (((_DWORD)v172 << 16) ^ 0xED35C6AB) & 0x2EA4C080)) ^ 0xD904793E));
  LODWORD(STACK[0x1838]) = 63 * v185;
  LODWORD(v130) = (v208 >> 3) & 0x15 ^ v208;
  LODWORD(STACK[0x1810]) = v130;
  LODWORD(STACK[0x1798]) = (v130 ^ 0x4C) >> (((v60 & 0x40 ^ 0x60) + (v60 | 0xA2)) & 0xFE);
  v209 = (unint64_t)v61;
  v210 = (LODWORD(STACK[0x1820]) + 45) ^ LODWORD(STACK[0x17F0]) ^ v61[254];
  v211 = v61[152] ^ LODWORD(STACK[0x1680]) ^ LODWORD(STACK[0xDB4]);
  v212 = STACK[0x1898];
  LODWORD(v174) = v192 ^ LODWORD(STACK[0x1898]);
  LOBYTE(v185) = v191 ^ v210;
  LOBYTE(v192) = (LOBYTE(STACK[0x1820]) + 45) ^ LOBYTE(STACK[0x17F0]) ^ v61[254];
  LODWORD(STACK[0x1650]) = v210;
  LODWORD(STACK[0x1664]) = v191;
  v213 = v191 ^ v210 ^ v174;
  LOBYTE(v186) = v174;
  LODWORD(STACK[0x1540]) = v174;
  LODWORD(v61) = v211;
  LODWORD(v174) = v188 ^ v211 ^ v213;
  LODWORD(v172) = (v174 ^ 0xCF) + 923750659;
  LODWORD(v171) = (2 * (v172 & 0x34B)) & 0xFDFF ^ v172 & 0x34B ^ ((2 * (v172 & 0x34B)) | 0x2000) & (v172 ^ 0x650672DC);
  LODWORD(v58) = (2 * (v172 ^ 0x650672DC)) & 0x596 ^ 0x491 ^ ((2 * (v172 ^ 0x650672DC)) ^ 0x5209032E) & (v172 ^ 0x650672DC);
  LODWORD(v171) = (4 * v171) & 0x2DF6CD94 ^ v171 ^ (4 * v171) & v58;
  LODWORD(v58) = (4 * v58) & 0xADF6CD94 ^ 0x824C983 ^ ((4 * v58) ^ 0x1209265C) & v58;
  LODWORD(v171) = (16 * v171) & 0x2DF6CD90 ^ v171 ^ ((16 * v171) ^ 0x50000) & v58;
  LODWORD(v58) = (16 * v58) & 0xADF6CD90 ^ 0x20920487 ^ ((16 * v58) ^ 0xDF6CD970) & v58;
  LODWORD(v171) = v171 ^ ((_DWORD)v171 << 8) & 0x2DF6CD00 ^ (((_DWORD)v171 << 8) ^ 0x4500000) & v58;
  LODWORD(v174) = 63
                * (*(unsigned __int8 *)(v202
                                      + (v172 ^ (2
                                                             * (((v171 ^ 0xA9A29D97) << 16) & 0x2DF60000 ^ v171 ^ 0xA9A29D97 ^ (((v171 ^ 0xA9A29D97) << 16) ^ 0x4D970000) & (((_DWORD)v58 << 8) & 0x2DF60000 ^ 0x9320000 ^ (((_DWORD)v58 << 8) ^ 0xF6CD0000) & v58))) ^ 0x88312465)) ^ v174 ^ 0xD);
  LOBYTE(v47) = (83 - v47) & 0xCE ^ 0x48 ^ (STACK[0x16F0] ^ 0x68) & (v47 - 84);
  LODWORD(STACK[0x15F8]) = v62;
  LODWORD(STACK[0x17F0]) = v174 ^ v62;
  v214 = *(unsigned __int8 *)(v209 + ((2 * ((v174 ^ v62) & 0x80) + 0x80) & 0x80)) ^ v206;
  LOBYTE(v174) = v214 ^ v186 ^ (((2 * v47) & 0x84) - v47 + 61) & 0xE1 ^ v185;
  LOBYTE(v186) = v214;
  LODWORD(v174) = ((-3 * (v174 ^ 0x40)) ^ 0x1B) + 1314678109;
  v215 = (v174 & 0x4212 & (2 * (v174 & 0x40509) - 2126233144) | 0x6439A001) ^ v174 & 0x40509;
  LODWORD(v172) = (2 * (v174 ^ 0xF31E35E5)) & 0xEC ^ 0xA0024 ^ ((2 * (v174 ^ 0xF31E35E5)) ^ 0x854001D8) & (v174 ^ 0xF31E35E5);
  v216 = (4 * v215) & 0x90006C ^ v215 ^ ((4 * v215) ^ 0x90C60004) & v172;
  LODWORD(v172) = (4 * v172) & 0x42BA00EC ^ 0x4012004C ^ ((4 * v172) ^ 0xAE803B0) & v172;
  v217 = v216 ^ (16 * v216) & 0x42BA00E0 ^ ((16 * v216) ^ 0x49180050) & v172;
  LODWORD(v172) = (16 * v172) & 0x42BA00E0 ^ 0x401A002C ^ ((16 * v172) ^ 0x2BA00EC0) & v172;
  v218 = ((v217 ^ 0x663380A9) << 8) & 0x42BA0000 ^ v217 ^ 0x663380A9 ^ (((v217 ^ 0x663380A9) << 8) ^ 0xBA00EC00) & v172;
  LODWORD(v174) = *(unsigned __int8 *)(v202
                                     + (v174 ^ (2
                                                            * ((v218 << 16) & 0x42BA0000 ^ v218 ^ ((v218 << 16) ^ 0xEC0000) & (((_DWORD)v172 << 8) & 0x42BA0000 ^ 0x40BA0000 ^ (((_DWORD)v172 << 8) ^ 0x3A000000) & v172))) ^ 0x318034D1));
  LODWORD(STACK[0x16F0]) = ((v174 ^ (v174 >> 3) & 0x15 ^ 0x4C) >> 2) | ((v174 ^ (v174 >> 3) & 0x15) << 6);
  LODWORD(STACK[0x1680]) = (_DWORD)v61;
  LODWORD(v173) = (((71 * (v173 ^ v61 ^ v213 ^ v214)) ^ 0xB1) + 95) ^ 0xDC375D8B;
  LODWORD(v173) = ((~(v173 & 0x5C13449C) | 0x226C3CEE) + (v173 & 0x48C | 0xDD93C311)) ^ v173 & 0x80004163 ^ 0x40BEFA ^ 0xFFFFFFFE;
  LODWORD(STACK[0x1710]) = ((2 * v173) & 0x1DDDD534) - v173;
  LOBYTE(v174) = v214 ^ v213;
  v219 = v205;
  LODWORD(STACK[0x1828]) = v205;
  v220 = v214 ^ v213 ^ v205;
  LODWORD(v173) = v220 ^ 0x2E;
  LODWORD(v58) = (v173 + 263004733) ^ 0xF82870BE;
  LODWORD(v172) = (2 * ((v173 + 263004733) & 0x11)) ^ ((v173 + 263004733) & 0x11 | 0x1ABCA4) ^ ((unsigned __int16)(2 * ((v173 + 8765) & 0x11)) | 0x4000) & (unsigned __int16)v58;
  LODWORD(v171) = (2 * v58) & 0x2AE ^ 0x6A1 ^ ((2 * v58) ^ 0x1085115E) & v58;
  LODWORD(v172) = (4 * v172) & 0x87A9EAC ^ v172 ^ ((4 * v172) ^ 0x6A6A90) & v171;
  LODWORD(v171) = (4 * v171) & 0x87A9EAC ^ 0x8108403 ^ ((4 * v171) ^ 0x21EA7ABC) & v171;
  LODWORD(v172) = (16 * v172) & 0x87A9EA0 ^ v172 ^ ((16 * v172) ^ 0x7090240) & v171;
  LODWORD(v171) = (16 * v171) & 0x87A9EA0 ^ 0x852140F ^ ((16 * v171) ^ 0x87A9EAF0) & v171;
  LODWORD(v172) = v172 ^ 0x10088B ^ ((_DWORD)v172 << 8) & 0x87A9E00 ^ (((_DWORD)v172 << 8) ^ 0x78922400) & v171;
  v221 = ((_DWORD)v173 + 263004733) ^ (2
                                     * (((_DWORD)v172 << 16) & 0x87A0000 ^ v172 ^ (((_DWORD)v172 << 16) ^ 0x1EAF0000) & (((_DWORD)v171 << 8) & 0x87A0000 ^ (((_DWORD)v171 << 8) ^ 0x7A9E0000) & v171 ^ 0x600000)));
  LODWORD(STACK[0x1668]) = 63 * (v220 ^ 0xEC ^ *(unsigned __int8 *)(v202 + (v221 ^ 0xF0F3D34FLL)));
  LODWORD(v174) = ((((v174 ^ 0xE1) >> 3) | (32 * (v174 ^ 0xE1))) ^ 0x99) + 950276704;
  v222 = (v174 ^ 0xC8A398F6) & (2 * (v174 & 0xF0)) ^ v174 & 0xF0;
  LODWORD(v172) = (2 * (v174 ^ 0xC8A39976)) & 0x786 ^ 0x2082 ^ ((2 * (v174 ^ 0xC8A39976)) ^ 0x10008B0C) & (v174 ^ 0xC8A39976);
  v223 = (4 * v222) & 0x780 ^ v222 ^ ((((v222 >> 4) & 0x1F) << 6) | 0xD800) & v172;
  LODWORD(v172) = (4 * v172) & 0xFF86784 ^ 0x186186 ^ ((4 * v172) ^ 0x3FE19E18) & v172;
  v224 = (16 * v223) & 0xFF86780 ^ v223 ^ ((16 * v223) ^ 0x76000) & v172;
  LODWORD(v172) = (16 * v172) & 0xFF86780 ^ 0x780786 ^ ((16 * v172) ^ 0xFF867860) & v172;
  v225 = v224 ^ (v224 << 8) & 0xFF86700 ^ ((v224 << 8) ^ 0x160000) & v172;
  LODWORD(v174) = 71
                * (LODWORD(STACK[0x17A0]) ^ *(unsigned __int8 *)(v202
                                                               + (v174 ^ (2
                                                                                      * (((v225 ^ 0xFE87186) << 16) & 0xFF80000 ^ v225 ^ 0xFE87186 ^ (((v225 ^ 0xFE87186) << 16) ^ 0x67860000) & (((_DWORD)v172 << 8) & 0xFF80000 ^ 0x7980000 ^ (((_DWORD)v172 << 8) ^ 0x78670000) & v172))) ^ 0xD7AB31FC)) ^ 0x38);
  LODWORD(STACK[0x1548]) = *(unsigned __int8 *)(v202 + v174 + 22881) ^ v174 ^ 0xA5;
  STACK[0x1468] = v209;
  LODWORD(v174) = *(unsigned __int8 *)(v202 + ((-3 * *(_BYTE *)(v209 + 49)) ^ 0xFDu) + 40108);
  LOBYTE(v185) = (((*(_BYTE *)(v202 + ((71 * (v185 ^ 0xE1)) ^ 0xB1u) + 22623) - 84) ^ 0x29) - 107) ^ 0x12;
  LODWORD(STACK[0x1820]) = v214;
  LODWORD(v185) = 63 * (*(unsigned __int8 *)(v202 + (v214 ^ v185) + 41218) ^ 9);
  LODWORD(v171) = v190 ^ LODWORD(STACK[0x1870]);
  v226 = STACK[0x1780] ^ LODWORD(STACK[0xD4C]) ^ *(unsigned __int8 *)(v209 + 81);
  LODWORD(STACK[0x160C]) = v226;
  LODWORD(v209) = ((v174 >> 7) | (2 * v174)) ^ (((v174 >> 7) | (2 * v174)) >> 6) ^ (((v174 >> 7) | (2 * v174)) >> 4) ^ 0xFFFFFFD7;
  v227 = ((v209 >> 2) | ((_DWORD)v209 << 6)) ^ (((*(unsigned __int8 *)(v202
                                                                                      + (LODWORD(STACK[0x1600]) ^ 0x4C761162u))
                                                                 - 84) ^ 0x29)
                                                               - 107);
  v228 = LODWORD(STACK[0x1084]) ^ STACK[0x1170];
  LODWORD(STACK[0x1538]) = v228;
  v229 = v228 ^ v212;
  LODWORD(STACK[0x1600]) = v229;
  LODWORD(STACK[0x1644]) = v171;
  LOBYTE(v209) = (((v229 ^ v192 ^ v226 ^ v171 ^ 0xE1) >> 3) | (32 * (v229 ^ v192 ^ v226 ^ v171 ^ 0xE1))) ^ 0x99;
  LODWORD(STACK[0x1554]) = v61 ^ 0xFFFFFFE1;
  v230 = v209 + 4432;
  LOBYTE(v226) = *(_BYTE *)(v202 + v230);
  LODWORD(v172) = v61 ^ 0xFFFFFFE1 ^ v219;
  LODWORD(STACK[0x16F8]) = v172 ^ v188;
  LODWORD(STACK[0x15D0]) = v172 ^ v62 ^ v189 ^ v227 ^ v185;
  LODWORD(v209) = *(unsigned __int8 *)(v202
                                     + (((61103 - v209) | v230) & 0x9A66)
                                     + (unint64_t)((-3
                                                                          * (v172 ^ v188 ^ v191 ^ v226 ^ v186 ^ 0x38)) ^ 0x1Bu));
  v231 = 71 * (LODWORD(STACK[0x15E8]) ^ LODWORD(STACK[0x1660]) ^ v212 ^ v171 ^ v227);
  LODWORD(v230) = *(unsigned __int8 *)(v202 + v231 + 22881);
  LODWORD(STACK[0x15CC]) = ((v209 ^ (v209 >> 3) & 0x15 ^ 0x4C) >> 2) | ((v209 ^ (v209 >> 3) & 0x15) << 6);
  LODWORD(STACK[0x15E8]) = v230 ^ v231 ^ 0xA5;
  LODWORD(v209) = 385 * (LODWORD(STACK[0x1204]) ^ LODWORD(STACK[0xCE8])) + 1576774848;
  v232 = (v209 ^ 0x3E375888) & (2 * (v209 & 0x762C9)) ^ v209 & 0x762C9;
  LODWORD(v185) = ((2 * (v209 ^ 0x3E399888)) ^ 0x2045F482) & (v209 ^ 0x3E399888) ^ (2 * (v209 ^ 0x3E399888)) & 0x840EFA40;
  v233 = (v185 ^ 0x843C9000) & (4 * v232) ^ v232;
  LODWORD(v185) = ((4 * (v185 ^ 0x84020A41)) ^ 0x70FBE904) & (v185 ^ 0x84020A41) ^ (4 * (v185 ^ 0x84020A41)) & 0x9C3EFA40;
  v234 = (v185 ^ 0x103AE800) & (16 * v233) ^ v233;
  LODWORD(v185) = ((16 * (v185 ^ 0x8C041241)) ^ 0xC3EFA410) & (v185 ^ 0x8C041241) ^ (16 * (v185 ^ 0x8C041241)) & 0x9C3EFA40;
  v235 = v234 ^ 0x9C3EFA41 ^ (v185 ^ 0x802EA000) & (v234 << 8);
  LOBYTE(v229) = LODWORD(STACK[0xDA8]) ^ (LODWORD(STACK[0x15F0]) - 119);
  LODWORD(v230) = LODWORD(STACK[0x1718]) + 1421267921;
  v236 = (v230 ^ 0x58AADDBA) & (2 * ((LODWORD(STACK[0x1718]) - 11311) & 0x638)) ^ (LODWORD(STACK[0x1718])
                                                                                                  - 11311) & 0x638;
  LODWORD(v172) = ((2 * (v230 ^ 0x58AAD99A)) ^ 0x4040F44) & (v230 ^ 0x58AAD99A) ^ (2 * (v230 ^ 0x58AAD99A)) & 0x7A2;
  v237 = (v172 ^ 0x3100) & (4 * v236) ^ v236;
  LODWORD(v172) = ((4 * (v172 ^ 0xA2)) ^ 0x4F8FDE88) & (v172 ^ 0xA2) ^ (4 * (v172 ^ 0xA2)) & 0x73E3F7A0;
  v238 = (v172 ^ 0xC383D680) & (16 * v237) ^ v237;
  LODWORD(v172) = ((16 * (v172 ^ 0x30602122)) ^ 0x3E3F7A20) & (v172 ^ 0x30602122) ^ (16 * (v172 ^ 0x30602122)) & 0xF3E3F7A0;
  v239 = v238 ^ 0xF3E3F7A2 ^ (v172 ^ 0x32237200) & (v238 << 8);
  LODWORD(v221) = (((2 * (v221 & 0x177 ^ 0x23)) | 0xA81938F0) - (v221 & 0x177 ^ 0x23) + 737371016) ^ 0x40C9C62A;
  LODWORD(STACK[0x1870]) = (v209 ^ (2
                                                * ((v235 << 16) & 0x1C3E0000 ^ v235 ^ ((v235 << 16) ^ 0x7A410000) & (((v185 ^ 0x1C105A41) << 8) & 0x9C3E0000 ^ (((v185 ^ 0x1C105A41) << 8) ^ 0x3EFA0000) & (v185 ^ 0x1C105A41) ^ 0x40000))) ^ 0xAA7A964B)
                         % 0x51A;
  LODWORD(v209) = 1396785247
                * (v230 ^ (2
                         * ((v239 << 16) & 0x73E30000 ^ v239 ^ ((v239 << 16) ^ 0x77A20000) & (((v172 ^ 0xC1C08582) << 8) & 0x73E30000 ^ (((v172 ^ 0xC1C08582) << 8) ^ 0xE3F70000) & (v172 ^ 0xC1C08582) ^ 0x10000000))) ^ 0xABCAC17C)
                * ((2147479473 - v173) & 0x45148177 ^ 0xA02B0931 ^ (v221 + 1923109744 - ((2 * v221) & 0xE540B2DE) + 1535));
  LODWORD(STACK[0x1780]) = v209 % 0x51A - 1926392729 - ((2 * (v209 % 0x51A)) & 0x8CE);
  LODWORD(STACK[0x1750]) = 385 * LODWORD(STACK[0x1750])
                         + 200585
                         - 1306
                         * ((3288643
                           * (unint64_t)(385 * LODWORD(STACK[0x1750]) + 200585)) >> 32);
  LODWORD(v209) = (LODWORD(STACK[0xDF0]) ^ STACK[0xDB8]) + 2003809076;
  LODWORD(v173) = (v209 ^ 0xBA428CD1) & (2 * (v209 & 0x6D5)) ^ v209 & 0x6D5;
  LODWORD(v185) = ((2 * (v209 ^ 0xBA428173)) ^ 0x4525174C) & (v209 ^ 0xBA428173) ^ (2 * (v209 ^ 0xBA428173)) & 0xFA6;
  LODWORD(v173) = (v185 ^ 0xF04) & (4 * v173) ^ v173;
  LODWORD(v185) = ((4 * (v185 ^ 0xA2)) ^ 0xCB4B3E98) & (v185 ^ 0xA2) ^ (4 * (v185 ^ 0xA2)) & 0x32D2CFA4;
  LODWORD(v173) = (v185 ^ 0x2420E86) & (16 * v173) ^ v173;
  LODWORD(v185) = ((16 * (v185 ^ 0x3090C126)) ^ 0x2D2CFA60) & (v185 ^ 0x3090C126) ^ (16 * (v185 ^ 0x3090C126)) & 0x32D2CFA0;
  LODWORD(v173) = v173 ^ 0x32D2CFA6 ^ (v185 ^ 0x2000CA86) & ((_DWORD)v173 << 8);
  LODWORD(v209) = v209 ^ (2
                        * (((_DWORD)v173 << 16) & 0x32D20000 ^ v173 ^ (((_DWORD)v173 << 16) ^ 0x4FA60000) & (((v185 ^ 0x12D20586) << 8) & 0x32D20000 ^ 0x20100000 ^ (((v185 ^ 0x12D20586) << 8) ^ 0x52CF0000) & (v185 ^ 0x12D20586))));
  LODWORD(v173) = LODWORD(STACK[0x1760]) + 2125183238;
  LODWORD(v185) = (2 * ((LODWORD(STACK[0x1760]) - 18170) & 0x103)) & (v173 ^ 0xBA787B9F) ^ ((LODWORD(STACK[0x1760]) - 18170) & 0x103 | 0x23081A14) ^ ((2 * ((LODWORD(STACK[0x1760]) - 18170) & 0x103)) & 0xCF75 | 0x18243088);
  LODWORD(v221) = (2 * (v173 ^ 0xBA787B9F)) & 0x29C ^ 0x1284 ^ ((2 * (v173 ^ 0xBA787B9F)) ^ 0x44504138) & (v173 ^ 0xBA787B9F);
  LODWORD(v185) = (4 * v185) & 0x2820221C ^ v185 ^ ((4 * v185) ^ 0xECB0CA70) & v221;
  LODWORD(v221) = (4 * v221) & 0x3B2C329C ^ 0x130C308C ^ ((4 * v221) ^ 0xECB0CA70) & v221;
  LODWORD(v185) = (16 * v185) & 0x3B2C3290 ^ v185 ^ ((16 * v185) ^ 0x30C308C0) & v221;
  LODWORD(v221) = (16 * v221) & 0x3B2C3290 ^ 0x92C121C ^ ((16 * v221) ^ 0xB2C329C0) & v221;
  LODWORD(v185) = v185 ^ 0x10000290 ^ ((_DWORD)v185 << 8) & 0x3B2C3200 ^ (((_DWORD)v185 << 8) ^ 0xC300C00) & v221;
  LODWORD(v173) = v173 ^ (2
                        * (((_DWORD)v185 << 16) & 0x3B2C0000 ^ v185 ^ (((_DWORD)v185 << 16) ^ 0x329C0000) & (((_DWORD)v221 << 8) & 0x3B2C0000 ^ 0x130C0000 ^ (((_DWORD)v221 << 8) ^ 0x2C320000) & v221)));
  LODWORD(v185) = (LODWORD(STACK[0xCD4]) ^ LODWORD(STACK[0x13D0]));
  LODWORD(v185) = 385 * v185 + 200585 - 1306 * ((3288643 * (unint64_t)(385 * v185 + 200585)) >> 32);
  v240 = v185 - 1926392729 - ((2 * v185) & 0x8CE);
  LODWORD(v185) = LODWORD(STACK[0x1770]) + 1481552416;
  LODWORD(v221) = ((LODWORD(STACK[0x1770]) - 19936) & 0x1E9 | 0x58222A06) ^ 0xC040F8 ^ (2 * ((LODWORD(STACK[0x1770]) - 19936) & 0x1E9)) & 0xFE ^ ((2 * ((LODWORD(STACK[0x1770]) - 19936) & 0x1E9)) | 0x400) & (v185 ^ 0xFF532717);
  LODWORD(v230) = ((2 * (v185 ^ 0xFF532717)) ^ 0xA10491FC) & (v185 ^ 0xFF532717) ^ (2 * (v185 ^ 0xFF532717)) & 0x400220FE;
  LODWORD(v221) = v221 ^ v230 & 0x81000568 ^ ((4 * v221) ^ 0xEA69EC90) & (v230 ^ 0x18E048FE);
  v241 = ((4 * v230) ^ 0xEA616C98) & (v230 ^ 0x18E048FE) ^ v230 & 0x81000568;
  LODWORD(v221) = v221 ^ v241 & 0x89E04F68 ^ ((16 * v221) ^ 0x89C24608) & (v241 ^ 0x8E0486E);
  v242 = ((16 * v241) ^ 0x7E4C9E8) & (v241 ^ 0x8E0486E) ^ v241 & 0x89E04F68;
  LODWORD(v221) = v221 ^ v242 & 0x89E04F68 ^ (((_DWORD)v221 << 8) ^ 0x6B88B168) & (v242 ^ 0x8E048FE);
  v243 = ((v242 << 8) ^ 0x69A82768) & (v242 ^ 0x8E048FE) ^ v242 & 0x89E04F68;
  v244 = v185 ^ (2
               * (v221 ^ v243 & 0x9E04F68 ^ (((_DWORD)v221 << 16) ^ 0xA9764F68) & (v243 ^ 0x50020000) ^ (((_DWORD)v221 << 16) ^ 0xA9764F68) & 0x58E24868));
  LODWORD(v209) = 385
                * (((v209 ^ 0x37CEC0BA) - 1389528388) ^ ((v209 ^ 0x11710943) - 1953320125) ^ ((v209 ^ 0xCE8E1860)
                                                                                            + 1416471138))
                + 1368141543;
  LODWORD(v172) = v209 % 0x51A - 1926392729 - ((2 * (v209 % 0x51A)) & 0x8CE);
  LODWORD(v230) = STACK[0x1720];
  LODWORD(v209) = (v230 ^ 0xEA4ECECB) & (2 * (v230 & 0xF34CCCEB)) ^ v230 & 0xF34CCCEB;
  LODWORD(v221) = ((2 * (v230 ^ 0x4CDFC69F)) ^ 0x7F2614E8) & (v230 ^ 0x4CDFC69F) ^ (2 * (v230 ^ 0x4CDFC69F)) & 0xBF930A74;
  LODWORD(v209) = (v221 ^ 0x1F020060) & (4 * v209) ^ v209;
  LODWORD(v221) = ((4 * (v221 ^ 0x80910A14)) ^ 0xFE4C29D0) & (v221 ^ 0x80910A14) ^ (4 * (v221 ^ 0x80910A14)) & 0xBF930A74;
  LODWORD(v209) = v209 ^ 0xBF930A74 ^ (v221 ^ 0xBE000850) & (16 * v209);
  LODWORD(v221) = (16 * (v221 ^ 0x1930224)) & 0xBF930A70 ^ 0x6830834 ^ ((16 * (v221 ^ 0x1930224)) ^ 0xF930A740) & (v221 ^ 0x1930224);
  LODWORD(v209) = ((_DWORD)v209 << 8) & 0xBF930A00 ^ v209 ^ (((_DWORD)v209 << 8) ^ 0x930A7400) & v221;
  LODWORD(v221) = LODWORD(STACK[0x1720]) ^ (2
                                          * (((_DWORD)v209 << 16) & 0x3F930000 ^ v209 ^ (((_DWORD)v209 << 16) ^ 0xA740000) & (((_DWORD)v221 << 8) & 0xBF930000 ^ 0x2C910000 ^ (((_DWORD)v221 << 8) ^ 0x130A0000) & v221)));
  v245 = 385 * v229
       + 200585
       - 1306 * ((3288643 * (unint64_t)(385 * v229 + 200585)) >> 32);
  LODWORD(v58) = *((unsigned __int8 *)&STACK[0x2920]
                 + (385
                  * (((v244 ^ 0x50A33A77) + 872730619) ^ ((v244 ^ 0x5B887B7A) + 1060081400) ^ ((v244 ^ 0x1D5EDF18u)
                                                                                             + 2046372502))
                  + 1368141543)
                 % 0x51A);
  LODWORD(v61) = STACK[0x17BC];
  v246 = v58 ^ LODWORD(STACK[0x17BC]);
  LODWORD(STACK[0x15AC]) = v58;
  LODWORD(v209) = STACK[0x16B8];
  v247 = *(unsigned __int8 *)(v202
                            + ((-3 * (v58 ^ v61 ^ LODWORD(STACK[0x16B8]))) ^ 0xFDu)
                            + 40108);
  LODWORD(v185) = v245 - 1926392729 - ((2 * v245) & 0x8CE);
  LODWORD(v230) = ((v247 >> 7) | (2 * v247));
  v248 = ((v247 >> 7) | (2 * v247)) ^ (v230 >> 6) ^ (v230 >> 4) ^ 0xFFFFFFD7;
  LODWORD(STACK[0x1720]) = (v248 >> 2) | (v248 << 6);
  v249 = *((unsigned __int8 *)&STACK[0x2920]
         + (385
          * (((v173 ^ 0xDBD950BA) + 975116058) ^ ((v173 ^ 0xA059D4CE) + 1100977006) ^ ((v173 ^ 0xE894A84F) + 156430317))
          + 1368141543)
         % 0x51A);
  LODWORD(v230) = STACK[0x16C8];
  LOBYTE(v192) = LODWORD(STACK[0x16C8]) ^ v249 ^ *((_BYTE *)&STACK[0x2920] + (v221 ^ 0xBE4ED803));
  v250 = STACK[0x17EC];
  LOBYTE(v173) = v209 ^ LODWORD(STACK[0x17EC]);
  v251 = ((v209 ^ v250) >> 3) | (32 * (v209 ^ v250));
  LODWORD(STACK[0x1760]) = v251;
  v252 = (*(_BYTE *)(v202
                                    + (v251 - (((v209 ^ v250) >> 2) & 0x3A) - 99)
                                    + 1665)
                         - 38);
  v253 = v58 ^ v61 ^ (*(unsigned __int8 *)(v202
                                                       + (v251
                                                                         - (((v209 ^ v250) >> 2) & 0x3A)
                                                                         - 99)
                                                       + 1665)
                                  - 38) ^ (v252 >> 5) ^ (v252 >> 4) ^ 0xFFFFFFE2;
  v254 = (((v253 >> 3) | (32 * v253)) ^ 0x9D) + 1713316665;
  v255 = (v254 & 0x348 | (16 * (((unsigned __int16)(v254 & 0x348) >> 3) & 1))) ^ ((2 * (v254 & 0x348)) | 0x4000) & (v254 ^ 0xABC2CA70);
  v256 = (2 * (v254 ^ 0xABC2CA70)) & 0x938 ^ 0x2908 ^ ((2 * (v254 ^ 0xABC2CA70)) ^ 0x44444270) & (v254 ^ 0xABC2CA70);
  v257 = (4 * v255) & 0x32222938 ^ v255 ^ ((4 * v255) | 0x8000) & v256;
  v258 = (4 * v256) & 0x32222938 ^ 0x32220918 ^ ((4 * v256) ^ 0xC888A4E0) & v256;
  v259 = (16 * v257) & 0x32222930 ^ v257 ^ ((16 * v257) ^ 0x20000) & v258;
  v260 = (16 * v258) & 0x32222930 ^ 0x10002838 ^ ((16 * v258) ^ 0x22229380) & v258;
  v261 = v259 ^ 0x30000938 ^ (v259 << 8) & 0x32222900 ^ ((v259 << 8) ^ 0x2200000) & v260;
  LODWORD(STACK[0x1660]) = v254 ^ (2
                                 * ((v261 << 16) & 0x32220000 ^ v261 ^ ((v261 << 16) ^ 0x29380000) & ((v260 << 8) & 0x32220000 ^ 0x10020000 ^ ((v260 << 8) ^ 0x22290000) & v260)));
  v262 = v202
       + ((-3
                          * (LOBYTE(STACK[0x16A4]) ^ (((*(_BYTE *)(v202
                                                                 + ((71 * LODWORD(STACK[0x1698])) ^ 0xB1u)
                                                                 + 22623)
                                                      - 84) ^ 0x29)
                                                    - 107))) ^ 0xFDu);
  LODWORD(v209) = ((2 * *(_BYTE *)(v262 + 40108)) >> 6) ^ (((2 * *(unsigned __int8 *)(v262 + 40108)) & 0xFEu) >> 4) ^ ((*(unsigned __int8 *)(v262 + 40108) >> 7) & 0xFFFFFE01 | (2 * *(unsigned __int8 *)(v262 + 40108))) ^ 0xFFFFFFD7;
  LODWORD(v185) = *((unsigned __int8 *)&STACK[0x2920] + (v185 ^ 0x8D2D9467));
  v263 = ((-3 * ((63 * (*(_BYTE *)(v202 + (STACK[0x1648] ^ 0xF6E9DCF1)) ^ 9)) ^ v185)) ^ 0xFD)
       + 1107774008;
  v264 = ((2 * (v263 & 0x74 ^ 0x6D2E9C8E)) ^ 0x9251851C) & (v263 ^ 0xD0D68CFA) ^ v263 & 0x74 ^ 0x6D2E9C8E ^ ((2 * (v263 & 0x74 ^ 0x6D2E9C8E)) & 0x40050088 | 0x5028400);
  v265 = ((2 * (v263 ^ 0xD0D68CFA)) ^ 0x9251851C) & (v263 ^ 0xD0D68CFA) ^ (2 * (v263 ^ 0xD0D68CFA)) & 0x2021028E;
  v266 = v264 ^ v265 & 0x2010178 ^ ((4 * v264) ^ 0xE7AE7B60) & (v265 ^ 0x4D0D100E);
  LODWORD(v262) = ((4 * v265) ^ 0x73314148) & (v265 ^ 0x4D0D100E) ^ v265 & 0x2010178;
  v267 = v266 ^ v262 & 0x47050178 ^ ((16 * v266) ^ 0x95F8E998) & (v262 ^ 0x4505000E);
  LODWORD(v262) = ((16 * v262) ^ 0x175501F8) & (v262 ^ 0x4505000E) ^ v262 & 0x47050178;
  v268 = v267 ^ v262 & 0x47050178 ^ ((v267 << 8) ^ 0x6DDB8778) & (v262 ^ 0x4505008E);
  LODWORD(v262) = (((_DWORD)v262 << 8) ^ 0x42050978) & (v262 ^ 0x4505008E) ^ v262 & 0x47050178;
  LODWORD(v262) = *(unsigned __int8 *)(v202
                                     + (v263 ^ (2
                                              * (v268 ^ v262 & 0x47050178 ^ ((v268 << 16) ^ 0x998B0179) & (v262 ^ 0x282A0000) ^ ((v268 << 16) ^ 0x998B0179) & 0x6D2F0008)) ^ 0xEDACEF78));
  v269 = ((v262 >> 7) | (2 * v262)) ^ (((v262 >> 7) | (2 * v262)) >> 6) ^ (((v262 >> 7) | (2 * v262)) >> 4);
  LODWORD(v172) = *((unsigned __int8 *)&STACK[0x2920] + (v172 ^ 0x8D2D9467));
  LOBYTE(v171) = v173 ^ LODWORD(STACK[0x16EC]);
  v270 = LODWORD(STACK[0x16EC]) ^ v185;
  LOBYTE(v254) = v250;
  LODWORD(v173) = v250 ^ LODWORD(STACK[0x1868]);
  v271 = STACK[0x17E0];
  v272 = v173 ^ LODWORD(STACK[0x17E0]) ^ v172;
  v273 = *(unsigned __int8 *)(v202 + (v272 ^ 0xCFu) + 4174);
  LODWORD(STACK[0x16B8]) = ((v209 >> 2) | ((_DWORD)v209 << 6)) ^ v185;
  LODWORD(STACK[0x1544]) = ((v269 ^ 0xD7) >> 2) | ((v269 ^ 0xFFFFFFD7) << 6);
  LOBYTE(v185) = *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1750]));
  LODWORD(STACK[0x15E4]) = v270 ^ v249 ^ v58 ^ (63 * (v272 ^ 0xD ^ v273));
  v274 = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1780]) ^ 0x8D2D9467));
  LOBYTE(v273) = v185 ^ v192;
  v275 = v230;
  LODWORD(v230) = v274 ^ v230;
  LOBYTE(v185) = ((v230 ^ v185) >> 3) | (32 * (v230 ^ v185));
  LODWORD(v262) = *((unsigned __int8 *)&STACK[0x2920] + (v240 ^ 0x8D2D9467));
  LODWORD(STACK[0x1560]) = v262;
  LODWORD(v209) = STACK[0x17A8];
  LODWORD(STACK[0x1584]) = v173 ^ LODWORD(STACK[0x17A8]) ^ v262 ^ v249 ^ v271 ^ v58 ^ v61 ^ v230;
  LODWORD(STACK[0x1558]) = v249;
  LODWORD(v230) = (v271 ^ v254 ^ v249 ^ v270) + 1594445033;
  LODWORD(v58) = (2 * (v230 & 0x25)) & (v230 ^ 0xB1816A1A) ^ 0x1177D03F ^ ((2 * (v230 & 0x25)) & 0x3E | v230 & 0x25);
  v276 = ((2 * (v230 ^ 0xB1816A1A)) ^ 0x2288207E) & (v230 ^ 0xB1816A1A) ^ (2 * (v230 ^ 0xB1816A1A)) & 0x1100083E;
  LODWORD(v58) = v276 & 0x46882DEC ^ v58 ^ ((4 * v58) ^ 0x3079D10) & (v276 ^ 0x77DC3D);
  LODWORD(v262) = ((4 * v276) ^ 0x47079D14) & (v276 ^ 0x77DC3D) ^ v276 & 0x46882DEC;
  LODWORD(v58) = v58 ^ v262 & 0x46D8EDEC ^ ((16 * v58) ^ 0x54A9ECDC) & (v262 ^ 0x50CC2F);
  LODWORD(v262) = ((16 * v262) ^ 0x43D42F2C) & (v262 ^ 0x50CC2F) ^ v262 & 0x46D8EDEC;
  LODWORD(v58) = v58 ^ v262 & 0x46D8EDEC ^ (((_DWORD)v58 << 8) ^ 0x3104D2EC) & (v262 ^ 0x50CC3F);
  LODWORD(v262) = (((_DWORD)v262 << 8) ^ 0x1614C1EC) & (v262 ^ 0x50CC3F) ^ v262 & 0x46D8EDEC;
  LODWORD(v262) = v230 ^ (2
                        * (v58 ^ v262 & 0x46D8EDEC ^ (((_DWORD)v58 << 16) ^ 0x56CBEDEC) & (v262 ^ 0x11270000) ^ (((_DWORD)v58 << 16) ^ 0x56CBEDEC) & 0x1177CC2C));
  LOBYTE(v269) = STACK[0x1790];
  v277 = (_BYTE *)STACK[0x1468];
  LOBYTE(v230) = v269 ^ LODWORD(STACK[0x15F8]) ^ (LOBYTE(STACK[0x1810]) << 6) ^ *(_BYTE *)(STACK[0x1468] + 143) ^ LODWORD(STACK[0x1798]);
  LODWORD(STACK[0x15F0]) = LODWORD(STACK[0x16B0]) ^ *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1870])) ^ v61 ^ v172;
  LODWORD(STACK[0x1770]) = 385 * v230
                         + 301070
                         - 1306
                         * ((3288643 * (unint64_t)(385 * v230 + 301070)) >> 32);
  LOBYTE(v185) = v185 ^ 0x9D;
  STACK[0x15B0] = v185 + 1665;
  v278 = STACK[0x1834];
  LODWORD(STACK[0x1870]) = (385 * LODWORD(STACK[0x1450]) + 301070) % 0x51Au;
  LODWORD(v262) = *(unsigned __int8 *)(v202
                                     + ((-3
                                                        * *((_BYTE *)&STACK[0x2920]
                                                          + (385
                                                           * (((v262 ^ 0x27F49947) - 683672443) ^ ((v262 ^ 0x34AAB50D) - 1000222513) ^ ((v262 ^ 0x91472211) + 1636583379))
                                                           + 1368141543)
                                                          % 0x51A)) ^ 0x1Bu)
                                     + 39526);
  LODWORD(v185) = *(unsigned __int8 *)(v202
                                     + ((((62 - (_BYTE)v185) & 0x3C) + (((_BYTE)v185 - 127) & 0x3C)) & 0xE7 ^ (-3 * v278) ^ 0xD9u)
                                     + 40108);
  LODWORD(STACK[0xDEC]) = ((v262 ^ 0x4C ^ (v262 >> 3) & 0x15) >> 2) | ((v262 ^ 0x4C ^ (v262 >> 3) & 0x15) << 6);
  LODWORD(v262) = (v185 >> 7) | (2 * v185);
  LODWORD(v185) = ((v185 >> 7) | (2 * v185));
  LODWORD(v262) = v262 ^ (v185 >> 6) ^ (v185 >> 4) ^ 0xFFFFFFD7;
  LOBYTE(v262) = LODWORD(STACK[0x17F0]) ^ v269 ^ ((v262 >> 2) | ((_BYTE)v262 << 6));
  LODWORD(STACK[0x1780]) = 385 * (v270 ^ LODWORD(STACK[0x1720]))
                         + 301070
                         - 1306
                         * ((3288643
                           * (unint64_t)(385 * (v270 ^ LODWORD(STACK[0x1720]))
                                              + 301070)) >> 32);
  LODWORD(STACK[0x17F0]) = 385 * v262
                         + 301070
                         - 1306
                         * ((3288643 * (unint64_t)(385 * v262 + 301070)) >> 32);
  LODWORD(v262) = LODWORD(STACK[0x1498]) + 83281867;
  LODWORD(v185) = (2 * ((LOWORD(STACK[0x1498]) - 14389) & 0xB43)) & (v262 ^ 0xBC8092A) ^ (LOWORD(STACK[0x1498]) - 14389) & 0xB43 ^ ((2 * ((LOWORD(STACK[0x1498]) - 14389) & 0xB43)) & 0x1200 | 0x60802000);
  LODWORD(v58) = (2 * (v262 ^ 0xBC8092A)) & 0x1268 ^ 0x1229 ^ ((2 * (v262 ^ 0xBC8092A)) ^ 0x10244D2) & (v262 ^ 0xBC8092A);
  LODWORD(v185) = (4 * v185) & 0xF0C13268 ^ v185 ^ ((4 * v185) ^ 0x2008000) & v58;
  LODWORD(v58) = (4 * v58) & 0x70C13268 ^ 0x30C13249 ^ ((4 * v58) ^ 0x4304C9A4) & v58;
  LODWORD(v185) = (16 * v185) & 0xF0C13260 ^ v185 ^ ((16 * v185) ^ 0x8020000) & v58;
  LODWORD(v58) = (16 * v58) & 0xF0C13260 ^ 0xF0C01069 ^ ((16 * v58) ^ 0xC132690) & v58;
  LODWORD(v185) = v185 ^ 0x90411269 ^ ((_DWORD)v185 << 8) & 0xF0C13200 ^ (((_DWORD)v185 << 8) ^ 0x80200000) & v58;
  LODWORD(v262) = v262 ^ (2
                        * (((_DWORD)v185 << 16) & 0x70C10000 ^ v185 ^ (((_DWORD)v185 << 16) ^ 0x32690000) & (((_DWORD)v58 << 8) & 0x70C10000 ^ 0x30C10000 ^ (((_DWORD)v58 << 8) ^ 0x41320000) & v58)));
  LODWORD(STACK[0x1810]) = (LODWORD(STACK[0x1480]) + 301070) % 0x51Au
                         - 1926392729
                         - ((2 * ((LODWORD(STACK[0x1480]) + 301070) % 0x51Au)) & 0x8CE);
  LODWORD(STACK[0x1798]) = (385
                          * (((v262 ^ 0xE75AFF76) - 276706432) ^ ((v262 ^ 0x7AA19F1D)
                                                                              + 1920641813) ^ ((v262 ^ 0xE7F23FFA)
                                                                                             - 282522636))
                          + 1368141543)
                         % 0x51A;
  LODWORD(v185) = 385 * (LODWORD(STACK[0x16F8]) ^ v278 ^ LODWORD(STACK[0x16F0])) + 1481183846;
  LODWORD(v262) = (v185 ^ 0x3AE3710B) & (2 * (v185 & 0x385A8)) ^ v185 & 0x385A8;
  LODWORD(v58) = (2 * (v185 ^ 0x3AE47B5B)) & 0x855FFEF2 ^ 0x85400211 ^ ((2 * (v185 ^ 0x3AE47B5B)) ^ 0x22AFFDE6) & (v185 ^ 0x3AE47B5B);
  LODWORD(v262) = (4 * v262) & 0x1E3EE0 ^ v262 ^ ((4 * v262) | 0x600000) & v58;
  LODWORD(v58) = (4 * v58) & 0x9D5FFEF0 ^ 0x88000433 ^ ((4 * v58) ^ 0x757FFBCC) & v58;
  LODWORD(v262) = (16 * v262) & 0x1D5FFEF0 ^ v262 ^ ((16 * v262) ^ 0x5800000) & v58;
  LODWORD(v58) = (16 * v58) & 0x9D5FFEF0 ^ 0x80010C3 ^ ((16 * v58) ^ 0xD5FFEF30) & v58;
  LODWORD(v262) = v262 ^ 0x8007FEF3 ^ ((_DWORD)v262 << 8) & 0x9D5FFE00 ^ (((_DWORD)v262 << 8) ^ 0x58000000) & v58;
  v279 = *(unsigned __int8 *)(v202 + (LODWORD(STACK[0x1760]) ^ 0x99u) + 4432);
  LODWORD(STACK[0x15F8]) = v173 ^ v275 ^ v246;
  LOBYTE(v230) = v246 ^ v249 ^ v171;
  v280 = v246 ^ v249 ^ v279 ^ 0x38u;
  STACK[0xDF8] = v280;
  LODWORD(v173) = v280 + 341353502;
  LODWORD(v280) = (v173 ^ 0x5E6750D3) & (2 * (v173 & 0xF0)) ^ v173 & 0xF0 ^ ((32
                                                                            * (((v173 & 0xF0) >> 4) & 1)) | 0x20800000);
  LODWORD(v171) = (2 * (v173 ^ 0x5E6750D3)) & 0xA22 ^ 0x221 ^ ((2 * (v173 ^ 0x5E6750D3)) ^ 0x4A001446) & (v173 ^ 0x5E6750D3);
  LODWORD(v280) = (4 * v280) & 0xB5C00E20 ^ v280 ^ ((4 * v280) ^ 0x82003000) & v171;
  LODWORD(v171) = (4 * v171) & 0xB5C00E20 ^ 0x20C00623 ^ ((4 * v171) ^ 0x4200388C) & v171;
  LODWORD(v280) = (16 * v280) & 0xB5C00E20 ^ v280 ^ ((16 * v280) ^ 0x800C000) & v171;
  LODWORD(v171) = (16 * v171) & 0xB5C00E20 ^ 0xA1C00C03 ^ ((16 * v171) ^ 0x5C00E230) & v171;
  LODWORD(v280) = v280 ^ 0x95400223 ^ ((_DWORD)v280 << 8) & 0xB5C00E00 ^ (((_DWORD)v280 << 8) ^ 0x800C0000) & v171;
  LODWORD(v173) = v173 ^ (2
                        * (((_DWORD)v280 << 16) & 0x35C00000 ^ v280 ^ (((_DWORD)v280 << 16) ^ 0xE230000) & (((_DWORD)v171 << 8) & 0xB5C00000 ^ 0x35C00000 ^ (((_DWORD)v171 << 8) ^ 0x400E0000) & v171)));
  LODWORD(v173) = 385
                * (((v173 ^ 0x9B718F7B) + 1636083286) ^ ((v173 ^ 0x61D1B7DE) - 1692098831) ^ ((v173 ^ 0x72877A13)
                                                                                            - 2005773506))
                + 1984876212;
  LODWORD(v280) = (v173 ^ 0xDA3D7E22) & (2 * (v173 & 0xDB3D6033)) ^ v173 & 0xDB3D6033;
  LODWORD(v171) = ((2 * (v173 ^ 0xFA07BE66)) ^ 0x4275BCAA) & (v173 ^ 0xFA07BE66) ^ (2 * (v173 ^ 0xFA07BE66)) & 0x213ADE54;
  LODWORD(v280) = (v171 ^ 0x30C201) & (4 * v280) ^ v280;
  LODWORD(v171) = ((4 * (v171 ^ 0x210A4255)) ^ 0x84EB7954) & (v171 ^ 0x210A4255) ^ (4 * (v171 ^ 0x210A4255)) & 0x213ADE54;
  LODWORD(v280) = (v171 ^ 0x2A5850) & (16 * v280) ^ v280;
  LODWORD(v171) = ((16 * (v171 ^ 0x21108601)) ^ 0x13ADE550) & (v171 ^ 0x21108601) ^ (16 * (v171 ^ 0x21108601)) & 0x213ADE50;
  LODWORD(v280) = v280 ^ 0x213ADE55 ^ (v171 ^ 0x128C400) & ((_DWORD)v280 << 8);
  LODWORD(STACK[0x1750]) = (v173 ^ (2
                                                * (((_DWORD)v280 << 16) & 0x213A0000 ^ v280 ^ (((_DWORD)v280 << 16) ^ 0x5E550000) & (((v171 ^ 0x20121A05) << 8) & 0x213A0000 ^ 0x1200000 ^ (((v171 ^ 0x20121A05) << 8) ^ 0x3ADE0000) & (v171 ^ 0x20121A05)))) ^ 0x9968DC99)
                         % 0x51A;
  LOBYTE(v173) = LODWORD(STACK[0x1898]) ^ LODWORD(STACK[0x1778]) ^ LODWORD(STACK[0x1828]) ^ v277[36];
  LODWORD(STACK[0x1760]) = (LODWORD(STACK[0x14F8]) + 301070) % 0x51Au;
  LODWORD(STACK[0x16F8]) = (v185 ^ (2
                                                * (((_DWORD)v262 << 16) & 0x1D5F0000 ^ v262 ^ (((_DWORD)v262 << 16) ^ 0x7EF30000) & (((_DWORD)v58 << 8) & 0x9D5F0000 ^ (((_DWORD)v58 << 8) ^ 0x5FFE0000) & v58 ^ 0x10000))) ^ 0xA5A2784E)
                         % 0x51A;
  LODWORD(v185) = 385 * (v61 ^ v271 ^ v209 ^ v270) + 301070;
  LODWORD(STACK[0x1720]) = v185 - 1306 * ((3288643 * (unint64_t)v185) >> 32);
  LODWORD(STACK[0x1778]) = (385 * LODWORD(STACK[0x1518]) + 301070) % 0x51Au;
  LODWORD(STACK[0x1718]) = 385 * v273
                         + 301070
                         - 1306
                         * ((3288643 * (unint64_t)(385 * v273 + 301070)) >> 32);
  LODWORD(v185) = ((*(unsigned __int8 *)(v202 + ((LODWORD(STACK[0x1710]) - 250538651) ^ 0xF2ECAFALL)) - 84) ^ 0x29)
                - 107;
  LODWORD(v209) = (v173 ^ LODWORD(STACK[0x1838]));
  LODWORD(STACK[0xDCC]) = v185;
  LOBYTE(v185) = v278 ^ v185;
  LOBYTE(v221) = *(_BYTE *)(v202 + (v185 ^ 0xCFu) + 4174);
  LODWORD(STACK[0x16F0]) = 385 * v209
                         + 301070
                         - 1306 * ((3288643 * (unint64_t)(385 * v209 + 301070)) >> 32);
  LODWORD(v209) = 385 * (63 * (v185 ^ 0xD ^ v221)) + 301070;
  LODWORD(STACK[0x16EC]) = v209 - 1306 * ((3288643 * (unint64_t)v209) >> 32);
  LOBYTE(v209) = LODWORD(STACK[0x1688]) ^ LODWORD(STACK[0x1540]);
  v281 = (LODWORD(STACK[0x1570]) + 301070) % 0x51Au;
  LODWORD(STACK[0x1698]) = v281;
  LODWORD(v173) = (*(_BYTE *)(v202 + (LODWORD(STACK[0x1660]) ^ 0xBDE4B138)) - 38);
  v282 = LODWORD(STACK[0x1524]) + 189803877;
  LODWORD(v185) = ((2 * (v282 & 0x1A9)) | 0x800) & (v282 ^ 0x778ED107) ^ v282 & 0x1A9 ^ ((2 * (v282 & 0x1A9)) & 2 | 0x20000A0);
  LODWORD(v221) = (2 * (v282 ^ 0x778ED107)) & 0x4AE ^ 0x4A2 ^ ((2 * (v282 ^ 0x778ED107)) ^ 0x442095C) & (v282 ^ 0x778ED107);
  LODWORD(v185) = v185 ^ 0x8121008E ^ (4 * v185) & 0x32104AC ^ ((4 * v185) ^ 0x8001280) & v221;
  LODWORD(v221) = (4 * v221) & 0x832104AC ^ 0x83210406 ^ ((4 * v221) ^ 0xC8412B8) & v221;
  LODWORD(v185) = (16 * v185) & 0x832104A0 ^ v185 ^ ((16 * v185) ^ 0x32104AE0) & v221;
  LODWORD(v221) = ((16 * v221) ^ 0x32104AE0) & v221 ^ (16 * v221) & 0x832104A0;
  LODWORD(v185) = v185 ^ v221 & 0x2A580AA0 ^ (((_DWORD)v185 << 8) ^ 0xB5C04A0) & (v221 ^ 0x20000AE);
  LODWORD(v221) = (((_DWORD)v221 << 8) ^ 0x2A58AAA0) & (v221 ^ 0x20000AE) ^ v221 & 0x2A580AA0;
  v283 = v282 ^ (2
               * (v185 ^ v221 & 0x2A580AA0 ^ (((_DWORD)v185 << 16) ^ 0x2EF60AA1) & (v221 ^ 0x1210000) ^ (((_DWORD)v185 << 16) ^ 0x2EF60AA1) & 0x32100A0));
  LODWORD(v185) = LODWORD(STACK[0x16B8]) + 905981666;
  LODWORD(v221) = ((2 * ((LODWORD(STACK[0x16B8]) - 30) & 0x2C)) | 0x800) & (v185 ^ 0xD168309B) ^ (LODWORD(STACK[0x16B8]) - 30) & 0x2C ^ ((2 * ((LODWORD(STACK[0x16B8]) - 30) & 0x2C)) & 0x10 | 0x10004020);
  LODWORD(v280) = (2 * (v185 ^ 0xD168309B)) & 0xB6 ^ 0x91 ^ ((2 * (v185 ^ 0xD168309B)) ^ 0x2128096E) & (v185 ^ 0xD168309B);
  LODWORD(v221) = (4 * v221) & 0x1897E4B4 ^ v221 ^ ((4 * v221) ^ 0x40011080) & v280;
  LODWORD(v280) = (4 * v280) & 0x1897E4B4 ^ 0x18806423 ^ ((4 * v280) ^ 0x624812DC) & v280;
  LODWORD(v221) = (16 * v221) & 0x1897E4B0 ^ v221 ^ ((16 * v221) ^ 0x144A00) & v280;
  LODWORD(v280) = (16 * v280) & 0x1897E4B0 ^ 0x1081A487 ^ ((16 * v280) ^ 0x897E4B70) & v280;
  LODWORD(v221) = v221 ^ ((_DWORD)v221 << 8) & 0x1897E400 ^ (((_DWORD)v221 << 8) ^ 0x1504A000) & v280;
  LODWORD(v185) = v185 ^ (2
                        * (((v221 ^ 0x18864017) << 16) & 0x18970000 ^ v221 ^ 0x18864017 ^ (((v221 ^ 0x18864017) << 16) ^ 0x64B70000) & (((_DWORD)v280 << 8) & 0x18970000 ^ 0x8130000 ^ (((_DWORD)v280 << 8) ^ 0x17E40000) & v280)));
  LODWORD(v185) = ((((v185 ^ 0x785E5610) - 210624309) ^ ((v185 ^ 0x1D7C5CC7) - 1773131234) ^ ((v185 ^ 0x9CDC1795)
                                                                                            + 401629520))
                 - 1926392729)
                * ((v281 & 0x181 ^ 0x181) + (v281 & 0x181))
                + 1291076601;
  LODWORD(v221) = (v185 ^ 0xB30BBD26) & (2 * (v185 & 0xB30BBC07)) ^ v185 & 0xB30BBC07;
  LODWORD(v280) = ((2 * (v185 ^ 0xB70C9528)) ^ 0x80E525E) & (v185 ^ 0xB70C9528) ^ (2 * (v185 ^ 0xB70C9528)) & 0x407292E;
  LODWORD(v221) = (v280 ^ 0x6090D) & (4 * v221) ^ v221;
  LODWORD(v280) = ((4 * (v280 ^ 0x4012921)) ^ 0x101CA4BC) & (v280 ^ 0x4012921) ^ (4 * (v280 ^ 0x4012921)) & 0x407292C;
  LODWORD(v221) = (v280 ^ 0x42023) & (16 * v221) ^ v221;
  LODWORD(v280) = ((16 * (v280 ^ 0x4030903)) ^ 0x407292F0) & (v280 ^ 0x4030903) ^ (16 * (v280 ^ 0x4030903)) & 0x4072920;
  LODWORD(v221) = v221 ^ 0x407292F ^ (v280 ^ 0x2000F) & ((_DWORD)v221 << 8);
  LODWORD(v221) = ((_DWORD)v221 << 16) & 0x4070000 ^ v221 ^ (((_DWORD)v221 << 16) ^ 0x292F0000) & (((v280 ^ 0x405290F) << 8) & 0x4070000 ^ (((v280 ^ 0x405290F) << 8) ^ 0x7290000) & (v280 ^ 0x405290F) ^ 0x60000);
  LODWORD(v173) = 385
                * ((v270 ^ (*(_BYTE *)(v202 + (LODWORD(STACK[0x1660]) ^ 0xBDE4B138)) - 38) ^ (v173 >> 5) ^ (v173 >> 4)) ^ 0xE2)
                + 1530431867;
  LODWORD(v280) = (2 * (v173 & 0xE93)) & 0xF0F ^ v173 & 0xE93 ^ ((2 * (v173 & 0xE93)) | 0x100000) & (v173 ^ 0xBF06E39C);
  LODWORD(v171) = (2 * (v173 ^ 0xBF06E39C)) & 0x84AED0E ^ 0x84A2501 ^ ((2 * (v173 ^ 0xBF06E39C)) ^ 0x2415DA1E) & (v173 ^ 0xBF06E39C);
  LODWORD(v280) = (4 * v280) & 0x1BCAED0C ^ v280 ^ ((4 * v280) | 0x200000) & v171;
  LODWORD(v171) = (4 * v171) & 0x1BCAED0C ^ 0x10C04903 ^ ((4 * v171) ^ 0x6F2BB43C) & v171;
  LODWORD(v280) = (16 * v280) & 0x1BCAED00 ^ v280 ^ ((16 * v280) ^ 0x800000) & v171;
  LODWORD(v171) = (16 * v171) & 0x1BCAED00 ^ 0x3402D0F ^ ((16 * v171) ^ 0xBCAED0F0) & v171;
  LODWORD(v280) = v280 ^ ((_DWORD)v280 << 8) & 0x1BCAED00 ^ (((_DWORD)v280 << 8) ^ 0x88000000) & v171;
  LODWORD(v209) = (v209 ^ v278 ^ LODWORD(STACK[0x1820]));
  LODWORD(v209) = (((v209 + 782) | (241 - v209)) & 0x181) * (v209 + 782);
  LODWORD(STACK[0x16B8]) = (v173 ^ (2
                                                * (((v280 ^ 0x1342ED0F) << 16) & 0x1BCA0000 ^ v280 ^ 0x1342ED0F ^ (((v280 ^ 0x1342ED0F) << 16) ^ 0x6D0F0000) & (((_DWORD)v171 << 8) & 0x1BCA0000 ^ 0x11020000 ^ (((_DWORD)v171 << 8) ^ 0x4AED0000) & v171))) ^ 0x814DD48D)
                         % 0x51A;
  LODWORD(STACK[0x1710]) = (385
                          * (((v283 ^ 0xF61E45B5) + 1914827673) ^ ((v283 ^ 0x458C3B1D) - 1045197519) ^ ((v283 ^ 0x457FA31D) - 1052764879))
                          + 1368141543)
                         % 0x51A;
  LODWORD(STACK[0x16B0]) = v209 - 1306 * ((3288643 * (unint64_t)v209) >> 32);
  LOBYTE(v283) = v277[55] ^ LODWORD(STACK[0x1538]);
  LODWORD(STACK[0x16C8]) = (v185 ^ (2 * (_DWORD)v221) ^ 0xBB0BEE59) % 0x51A;
  v284 = v283 + 776591953;
  LODWORD(v209) = (v284 ^ 0x9AF7963C) & (2 * (v284 & 0xBD)) ^ v284 & 0xBD;
  LODWORD(v173) = (2 * (v284 ^ 0x9AF79644)) & 0x1AF8 ^ 0x209 ^ ((2 * (v284 ^ 0x9AF79644)) ^ 0x94824DF2) & (v284 ^ 0x9AF79644);
  LODWORD(v209) = (4 * v209) & 0x6F8 ^ v209 ^ ((unsigned __int16)(4 * (v209 & 0x1FF)) | 0x6000) & (unsigned __int16)v173;
  LODWORD(v173) = (4 * v173) & 0x4B41BEF8 ^ 0x42410419 ^ ((4 * v173) ^ 0x2D06FBE4) & v173;
  LODWORD(v209) = (16 * v209) & 0x4B41BEF0 ^ v209 ^ ((16 * v209) ^ 0x38000) & v173;
  LODWORD(v173) = (16 * v173) & 0x4B41BEF0 ^ 0x4B401069 ^ ((16 * v173) ^ 0xB41BEF90) & v173;
  LODWORD(v209) = v209 ^ 0x4A4006F9 ^ ((_DWORD)v209 << 8) & 0x4B41BE00 ^ (((_DWORD)v209 << 8) ^ 0x1B80000) & v173;
  v285 = v284 ^ (2
               * (((_DWORD)v209 << 16) & 0x4B410000 ^ v209 ^ (((_DWORD)v209 << 16) ^ 0x3EF90000) & (((_DWORD)v173 << 8) & 0x4B410000 ^ 0xA410000 ^ (((_DWORD)v173 << 8) ^ 0x41BE0000) & v173)));
  LODWORD(STACK[0x1688]) = (385
                          * (((v285 ^ 0x88AF38DF) - 1446377975) ^ ((v285 ^ 0x3BCA02DC) + 447691788) ^ ((v285 ^ 0xE0D26F4C) - 1044950628))
                          + 1368141543)
                         % 0x51A;
  v286 = LODWORD(STACK[0x15C0]) + 1710006579;
  LODWORD(v209) = (2 * (v286 & 0x3F6DB)) & 0x76C22 ^ v286 & 0x3F6DB ^ ((2 * (v286 & 0x3F6DB)) | 0x80000) & (v286 ^ 0x29309AF0);
  LODWORD(v173) = (2 * (v286 ^ 0x29309AF0)) & 0x91276C2A ^ 0x91212429 ^ ((2 * (v286 ^ 0x29309AF0)) ^ 0x444ED856) & (v286 ^ 0x29309AF0);
  LODWORD(v209) = (4 * v209) & 0x33276C28 ^ v209 ^ ((4 * v209) ^ 0x100000) & v173;
  LODWORD(v173) = (4 * v173) & 0xB3276C28 ^ 0x33224C03 ^ ((4 * v173) ^ 0xCC9DB0AC) & v173;
  LODWORD(v209) = (16 * v209) & 0x33276C20 ^ v209 ^ ((16 * v209) ^ 0x400000) & v173;
  LODWORD(v173) = (16 * v173) & 0xB3276C20 ^ 0x81012C0B ^ ((16 * v173) ^ 0x3276C2B0) & v173;
  LODWORD(v209) = v209 ^ ((_DWORD)v209 << 8) & 0xB3276C00 ^ (((_DWORD)v209 << 8) ^ 0x4000000) & v173;
  v287 = v286 ^ (2
               * (((v209 ^ 0xB3236C2B) << 16) & 0x33270000 ^ v209 ^ 0xB3236C2B ^ (((v209 ^ 0xB3236C2B) << 16) ^ 0x6C2B0000) & (((_DWORD)v173 << 8) & 0x33270000 ^ 0x10030000 ^ (((_DWORD)v173 << 8) ^ 0x276C0000) & v173))) ^ 0x3132BAEA;
  v288 = 0x322E42A57083BALL
       * (((v287 ^ 0x237D6EF260782EBALL) - 0x237D6EF260782EBALL) ^ ((v287 ^ 0x5F7BD44CB54EA618) - 0x5F7BD44CB54EA618) ^ ((v287 ^ 0x7C06BABE581B1CC5) - 0x7C06BABE581B1CC5))
       + 0x783D72C01E8510F6;
  v289 = (v288 ^ 0x75C73E22C75476D7) & (2 * (v288 & 0x7587BF0A179976E0)) ^ v288 & 0x7587BF0A179976E0;
  v290 = ((2 * (v288 ^ 0x55C42232CE64B357)) ^ 0x40873A71B3FB8B6ELL) & (v288 ^ 0x55C42232CE64B357) ^ (2 * (v288 ^ 0x55C42232CE64B357)) & 0x20439D38D9FDC5B6;
  v291 = (v290 ^ 0x3183090E98100) & (4 * v289) ^ v289;
  v292 = ((4 * (v290 ^ 0x2040850848044491)) ^ 0x810E74E367F716DCLL) & (v290 ^ 0x2040850848044491) ^ (4 * (v290 ^ 0x2040850848044491)) & 0x20439D38D9FDC5B4;
  v293 = (v292 ^ 0x2142041F50480) & (16 * v291) ^ v291;
  v294 = ((16 * (v292 ^ 0x204189189808C123)) ^ 0x439D38D9FDC5B70) & (v292 ^ 0x204189189808C123) ^ (16 * (v292 ^ 0x204189189808C123)) & 0x20439D38D9FDC5B0;
  v295 = (v294 ^ 0x1910899DC4100) & (v293 << 8) ^ v293;
  v296 = (((v294 ^ 0x20420C3040218487) << 8) ^ 0x439D38D9FDC5B700) & (v294 ^ 0x20420C3040218487) ^ ((v294 ^ 0x20420C3040218487) << 8) & 0x20439D38D9FDC500;
  v297 = v295 ^ 0x20439D38D9FDC5B7 ^ (v296 ^ 0x11818D9C50000) & (v295 << 16);
  v298 = v288 ^ (2
               * ((v297 << 32) & 0x20439D3800000000 ^ v297 ^ ((v297 << 32) ^ 0x59FDC5B700000000) & (((v296 ^ 0x20428520003840B7) << 16) & 0x20439D3800000000 ^ 0x2043040000000000 ^ (((v296 ^ 0x20428520003840B7) << 16) ^ 0x1D38D9FD00000000) & (v296 ^ 0x20428520003840B7))));
  v299 = ((v298 ^ 0x3B2563418950BD86) + 0x1D237DCD9AEA9E90) ^ ((v298 ^ 0xF19E16FEA73C92F2) - 0x2867F78D4B794E04);
  LODWORD(v298) = __CFADD__(1306 * (v299 ^ ((v298 ^ 0xFF38FAA48A0ED2FALL) - 0x26C11BD7664B0E0CLL)), 0x6897400017A0BE30)+ (((v299 ^ ((v298 ^ 0xFF38FAA48A0ED2FALL) - 0x26C11BD7664B0E0CLL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v298 ^ 0x3B2563418950BD86, 0x1D237DCD9AEA9E90) - 1) ^ (__CFADD__(v298 ^ 0xF19E16FEA73C92F2, 0xD7980872B486B1FCLL)- 1) ^ (__CFADD__(v298 ^ 0xFF38FAA48A0ED2FALL, 0xD93EE42899B4F1F4)- 1))+ 1311458784;
  LODWORD(v299) = (v298 ^ 0x3DC0BC94) & (2 * (v298 & 0xB1D4BED6)) ^ v298 & 0xB1D4BED6;
  LODWORD(v296) = ((2 * (v298 ^ 0x7CE89938)) ^ 0x9A784FDC) & (v298 ^ 0x7CE89938) ^ (2 * (v298 ^ 0x7CE89938)) & 0xCD3C27EE;
  LODWORD(v299) = (v296 ^ 0x883007CA) & (4 * v299) ^ v299;
  LODWORD(v296) = ((4 * (v296 ^ 0x45042022)) ^ 0x34F09FB8) & (v296 ^ 0x45042022) ^ (4 * (v296 ^ 0x45042022)) & 0xCD3C27EC;
  LODWORD(v299) = (v296 ^ 0x43007A6) & (16 * v299) ^ v299;
  LODWORD(v296) = ((16 * (v296 ^ 0xC90C2046)) ^ 0xD3C27EE0) & (v296 ^ 0xC90C2046) ^ (16 * (v296 ^ 0xC90C2046)) & 0xCD3C27E0;
  LODWORD(v299) = v299 ^ 0xCD3C27EE ^ (v296 ^ 0xC100260E) & ((_DWORD)v299 << 8);
  LODWORD(v299) = ((_DWORD)v299 << 16) & 0x4D3C0000 ^ v299 ^ (((_DWORD)v299 << 16) ^ 0x27EE0000) & (((v296 ^ 0xC3C010E) << 8) & 0xCD3C0000 ^ 0x41180000 ^ (((v296 ^ 0xC3C010E) << 8) ^ 0x3C270000) & (v296 ^ 0xC3C010E));
  LODWORD(v262) = v230 + 825376888;
  LODWORD(v185) = (v262 ^ 0x4E7BF8C5) & (2 * (v262 & 0x4096)) ^ v262 & 0x4096;
  LODWORD(v221) = ((2 * (v262 ^ 0x4E7BF8E1)) ^ 0x14830EE) & (v262 ^ 0x4E7BF8E1) ^ (2 * (v262 ^ 0x4E7BF8E1)) & 0x276;
  LODWORD(v185) = (v221 ^ 0x23861) & (4 * v185) ^ v185;
  LODWORD(v221) = ((4 * (v221 ^ 0x3A11)) ^ 0x2D8E9DC) & (v221 ^ 0x3A11) ^ (4 * (v221 ^ 0x3A11)) & 0x80B63A74;
  LODWORD(v185) = (v221 ^ 0x902843) & (16 * v185) ^ v185;
  LODWORD(v221) = ((16 * (v221 ^ 0x80261223)) ^ 0xB63A770) & (v221 ^ 0x80261223) ^ (16 * (v221 ^ 0x80261223)) & 0x80B63A70;
  LODWORD(v185) = v185 ^ 0x80B63A77 ^ (v221 ^ 0x222207) & ((_DWORD)v185 << 8);
  LODWORD(v262) = v262 ^ (2
                        * (((_DWORD)v185 << 16) & 0xB60000 ^ v185 ^ (((_DWORD)v185 << 16) ^ 0x3A770000) & (((v221 ^ 0x80941807) << 8) & 0xB60000 ^ 0x840000 ^ (((v221 ^ 0x80941807) << 8) ^ 0x363A0000) & (v221 ^ 0x80941807))));
  LOBYTE(v296) = *((_BYTE *)&STACK[0x2920]
                 + (385 * v274
                                + 301070
                                - 1306 * ((3288643 * (unint64_t)(385 * v274 + 301070)) >> 32)));
  LODWORD(STACK[0x16A4]) = v298 ^ 0x21F4F10A ^ (2 * v299);
  LODWORD(v298) = ((71 * v296) ^ 0xB1) + 346253297;
  LODWORD(v299) = (v298 ^ 0x918AF46C) & (2 * (v298 & 0x406E)) ^ v298 & 0x406E;
  LODWORD(v296) = (2 * (v298 ^ 0x918A74BC)) & 0x4D2 ^ 0x8452 ^ ((2 * (v298 ^ 0x918A74BC)) ^ 0x852909A4) & (v298 ^ 0x918A74BC);
  LODWORD(v299) = (4 * v299) & 0x200D0 ^ v299 ^ ((4 * v299) | 0x8000) & v296;
  LODWORD(v296) = (4 * v296) & 0x7AD684D0 ^ 0x10848492 ^ ((4 * v296) ^ 0x81081348) & v296;
  LODWORD(v299) = (16 * v299) & 0x7AD684D0 ^ v299 ^ ((16 * v299) ^ 0xA0000) & v296;
  LODWORD(v296) = (16 * v296) & 0x7AD684D0 ^ 0x529680D2 ^ ((16 * v296) ^ 0xAD684D20) & v296;
  LODWORD(v299) = v299 ^ ((_DWORD)v299 << 8) & 0x7AD68400 ^ (((_DWORD)v299 << 8) ^ 0x2A00000) & v296;
  LODWORD(STACK[0x1648]) = v298 ^ (2
                                 * (((v299 ^ 0x785424D2) << 16) & 0x7AD60000 ^ v299 ^ 0x785424D2 ^ (((v299 ^ 0x785424D2) << 16) ^ 0x4D20000) & (((_DWORD)v296 << 8) & 0x7AD60000 ^ 0x28520000 ^ (((_DWORD)v296 << 8) ^ 0x56840000) & v296)));
  LODWORD(v262) = 385
                * (((v262 ^ 0x24B7F8D1) - 1717033678) ^ ((v262 ^ 0xF497A6D9) + 1233681210) ^ ((v262 ^ 0x1FEDE870)
                                                                                            - 1561184879))
                + 2059750028;
  LODWORD(v298) = (v262 ^ 0xC6E4F612) & (2 * (v262 & 0xD6C6E45B)) ^ v262 & 0xD6C6E45B;
  LODWORD(v299) = ((2 * (v262 ^ 0x626C3E32)) ^ 0x6955B4D2) & (v262 ^ 0x626C3E32) ^ (2 * (v262 ^ 0x626C3E32)) & 0xB4AADA68;
  LODWORD(v298) = (v299 ^ 0x20009040) & (4 * v298) ^ v298;
  LODWORD(v299) = ((4 * (v299 ^ 0x94AA4A29)) ^ 0xD2AB69A4) & (v299 ^ 0x94AA4A29) ^ (4 * (v299 ^ 0x94AA4A29)) & 0xB4AADA68;
  LODWORD(v298) = (v299 ^ 0x90AA4820) & (16 * v298) ^ v298;
  LODWORD(v299) = ((16 * (v299 ^ 0x24009249)) ^ 0x4AADA690) & (v299 ^ 0x24009249) ^ (16 * (v299 ^ 0x24009249)) & 0xB4AADA60;
  LODWORD(v298) = v298 ^ 0xB4AADA69 ^ (v299 ^ 0xA88269) & ((_DWORD)v298 << 8);
  v300 = v262 ^ (2
                             * (((_DWORD)v298 << 16) & 0x34AA0000 ^ v298 ^ (((_DWORD)v298 << 16) ^ 0x5A690000) & (((v299 ^ 0xB4025869) << 8) & 0x34AA0000 ^ 0x14200000 ^ (((v299 ^ 0xB4025869) << 8) ^ 0x2ADA0000) & (v299 ^ 0xB4025869)))) ^ 0x12EEC4EE;
  v301 = 0x322E42A57083BALL
       * (((v300 ^ 0x475DF0EFE12CBD8DLL) - 0x475DF0EFE12CBD8DLL) ^ ((v300 ^ 0x7D477CFCDE1083F2) - 0x7D477CFCDE1083F2) ^ ((v300 ^ 0x3A1A8C13B211AA18) - 0x3A1A8C13B211AA18))
       + 0x3B33AF988406B5DBLL;
  v302 = (2 * (v301 & 0xB2918231B217D1FALL)) & 0x20462642BA190 ^ v301 & 0xB2918231B217D1FALL ^ ((2
                                                                                                 * (v301 & 0xB2918231B217D1FALL)) | 2) & (v301 ^ 0xA0CBDF5BCCFC3C6ALL);
  v303 = (2 * (v301 ^ 0xA0CBDF5BCCFC3C6ALL)) & 0x125A5D6A7EEBED90 ^ 0x124A452A02282491 ^ ((2
                                                                                             * (v301 ^ 0xA0CBDF5BCCFC3C6ALL)) ^ 0x24B4BAD4FDD7DB22) & (v301 ^ 0xA0CBDF5BCCFC3C6ALL);
  v304 = (4 * v302) & 0x125A5D6A7EEBED90 ^ v302 ^ ((4 * v302) | 4) & v303;
  v305 = (4 * v303) & 0x125A5D6A7EEBED90 ^ 0x1212084204404991 ^ ((4 * v303) ^ 0x496975A9FBAFB644) & v303;
  v306 = (16 * v304) & 0x125A5D6A7EEBED90 ^ v304 ^ ((16 * v304) ^ 0x10) & v305;
  v307 = (16 * v305) & 0x125A5D6A7EEBED90 ^ 0x125A094810412481 ^ ((16 * v305) ^ 0x25A5D6A7EEBED910) & v305;
  v308 = (v306 << 8) & 0x125A5D6A7EEBED00 ^ v306 ^ ((v306 << 8) ^ 0x1100) & v307;
  v309 = (v307 << 8) & 0x125A5D6A7EEBED00 ^ 0x2150014026C91 ^ ((v307 << 8) ^ 0x5A5D6A7EEBED9100) & v307;
  v310 = v308 ^ (v308 << 16) & 0x125A5D6A7EEB0000 ^ ((v308 << 16) ^ 0x1110000) & v309;
  v311 = v301 ^ (2
               * (((v310 ^ 0x125A5D6A7EEAEC80) << 32) & 0x125A5D6A00000000 ^ v310 ^ 0x125A5D6A7EEAEC80 ^ (((v310 ^ 0x125A5D6A7EEAEC80) << 32) ^ 0x7EEBED9100000000) & ((v309 << 16) & 0x125A5D6A00000000 ^ 0x210010000000000 ^ ((v309 << 16) ^ 0x5D6A7EEB00000000) & v309)));
  v312 = ((v311 ^ 0xD150265D600242A3) - 0x53218AC96638D7F2) ^ ((v311 ^ 0x98C5E3093A3879DELL) - 0x1AB44F9D3C02EC8FLL);
  LODWORD(v311) = __CFADD__(1306 * (v312 ^ ((v311 ^ 0xFB2467B115FA31A4) - 0x7955CB2513C0A4F5)), 0xB3C9ADF36891DBD0)+ (((v312 ^ ((v311 ^ 0xFB2467B115FA31A4) - 0x7955CB2513C0A4F5)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v311 ^ 0xD150265D600242A3, 0xACDE753699C7280ELL) - 1) ^ (__CFADD__(v311 ^ 0x98C5E3093A3879DELL, 0xE54BB062C3FD1371)- 1) ^ (__CFADD__(v311 ^ 0xFB2467B115FA31A4, 0x86AA34DAEC3F5B0BLL)- 1))+ 607578441;
  LODWORD(v312) = (v311 ^ 0x9BC4472E) & (2 * (v311 & 0xDBC917AF)) ^ v311 & 0xDBC917AF;
  LODWORD(v309) = ((2 * (v311 ^ LODWORD(STACK[0xAC4]))) ^ 0x873EA112) & (v311 ^ LODWORD(STACK[0xAC4])) ^ (2 * (v311 ^ LODWORD(STACK[0xAC4]))) & 0x439F5088;
  LODWORD(v312) = (v309 ^ 0x30C0000) & (4 * v312) ^ v312;
  LODWORD(v309) = ((4 * (v309 ^ 0x40815089)) ^ 0xE7D4224) & (v309 ^ 0x40815089) ^ (4 * (v309 ^ 0x40815089)) & 0x439F5088;
  LODWORD(v312) = v312 ^ 0x439F5089 ^ (v309 ^ 0x21D4000) & (16 * v312);
  LODWORD(v309) = (16 * (v309 ^ 0x41821089)) & 0x439F5080 ^ 0x420A5009 ^ ((16 * (v309 ^ 0x41821089)) ^ 0x39F50890) & (v309 ^ 0x41821089);
  LODWORD(v312) = ((_DWORD)v312 << 8) & 0x439F5000 ^ v312 ^ (((_DWORD)v312 << 8) ^ 0x9F508900) & v309;
  LODWORD(v312) = ((_DWORD)v312 << 16) & 0x439F0000 ^ v312 ^ (((_DWORD)v312 << 16) ^ 0x50890000) & (((_DWORD)v309 << 8) & 0x439F0000 ^ 0x408F0000 ^ (((_DWORD)v309 << 8) ^ 0x1F500000) & v309);
  LODWORD(v309) = ((-3 * v278) ^ 0xFD) + 885472236;
  LODWORD(v296) = ((2 * ((((-3 * v278) ^ 0xFD) - 20) & 0xC0)) & 0x100 | 0x1419240) ^ ((((-3 * v278) ^ 0xFD) - 20) & 0xC0 | 0xB4212902) ^ ((2 * ((((-3 * v278) ^ 0xFD) - 20) & 0xC0)) | 0x24000) & (v309 ^ 0x7E58FB82);
  LODWORD(v185) = (2 * (v309 ^ 0x7E58FB82)) & 0x10B42 ^ 0x942 ^ ((2 * (v309 ^ 0x7E58FB82)) ^ 0x4A830684) & (v309 ^ 0x7E58FB82);
  LODWORD(v296) = (4 * v296) & 0xB5619B40 ^ v296 ^ ((4 * v296) ^ 0xD5866D08) & v185;
  LODWORD(v185) = (4 * v185) & 0xB5619B40 ^ 0x20619242 ^ ((4 * v185) ^ 0xD5866D08) & v185;
  LODWORD(v296) = (16 * v296) & 0xB5619B40 ^ v296 ^ ((16 * v296) ^ 0x6192420) & v185;
  LODWORD(v185) = (16 * v185) & 0xB5619B40 ^ 0xA1600B42 ^ ((16 * v185) ^ 0x5619B420) & v185;
  LODWORD(v296) = v296 ^ 0xB1010B00 ^ ((_DWORD)v296 << 8) & 0xB5619B00 ^ (((_DWORD)v296 << 8) ^ 0x60924200) & v185;
  LODWORD(v296) = ((_DWORD)v296 << 16) & 0x35610000 ^ v296 ^ (((_DWORD)v296 << 16) ^ 0x1B420000) & (((_DWORD)v185 << 8) & 0x35610000 ^ 0x14600000 ^ (((_DWORD)v185 << 8) ^ 0x619B0000) & v185);
  v313 = STACK[0x1554];
  LODWORD(v185) = (LODWORD(STACK[0x17A0]) ^ LODWORD(STACK[0x1554]) ^ v278 ^ LODWORD(STACK[0x1668]));
  LODWORD(v185) = 385 * v185 + 301070 - 1306 * ((3288643 * (unint64_t)(385 * v185 + 301070)) >> 32);
  LODWORD(STACK[0x1660]) = v185 - 1926392729 - ((2 * v185) & 0x8CE);
  LODWORD(STACK[0x1668]) = v311 ^ 0xDBC5B6BD ^ (2 * v312);
  LODWORD(STACK[0x17A0]) = (LODWORD(STACK[0x1708]) + 301070) % 0x51Au;
  LODWORD(v311) = *(unsigned __int8 *)(v202 + (v309 ^ (2 * (_DWORD)v296) ^ 0x837A5644));
  LODWORD(v311) = ((v311 >> 7) | (2 * v311)) ^ (((v311 >> 7) | (2 * v311)) >> 6) ^ (((v311 >> 7) | (2 * v311)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(v311) = ((LODWORD(STACK[0x1548]) - 107) ^ LODWORD(STACK[0x1790]) ^ ((v311 >> 2) | ((_BYTE)v311 << 6)))
                + 140967562;
  LODWORD(v312) = ((2 * (v311 & 0x484 ^ 0x4B32014)) ^ 0x8444028) & v311 | v311 & 0x484 ^ 0x4B32014;
  LODWORD(v296) = (2 * (v311 ^ 0xF32A2490)) & 0x14 ^ 0x14 ^ ((2 * (v311 ^ 0xF32A2490)) ^ 0x9444028) & (v311 ^ 0xF32A2490);
  LODWORD(v312) = (4 * v312) & 0x132010 ^ v312 & 0xCF7FFEE ^ ((4 * v312) ^ 0x12CC8050) & v296;
  LODWORD(v309) = (4 * v296) & 0x4B32014 ^ 0x4332004 ^ ((4 * v296) ^ 0x12CC8050) & v296;
  LODWORD(v312) = v312 ^ (16 * v312) & 0x4B32000 ^ ((16 * v312) ^ 0x4B320140) & v309;
  LODWORD(v309) = (16 * v309) & 0x4B32010 ^ 0x4812014 ^ ((16 * v309) ^ 0x4B320140) & v309;
  LODWORD(v312) = ((v312 ^ 0x320000) << 8) & 0x4B32000 ^ v312 ^ 0x320000 ^ (((v312 ^ 0x320000) << 8) ^ 0xB3201400) & v309;
  LODWORD(v311) = v311 ^ (2
                        * (((_DWORD)v312 << 16) & 0x4B30000 ^ v312 ^ (((_DWORD)v312 << 16) ^ 0x20140000) & (((_DWORD)v309 << 8) & 0x4B30000 ^ 0x4930000 ^ (((_DWORD)v309 << 8) ^ 0xB3200000) & v309)));
  LODWORD(v311) = 385
                * (((v311 ^ 0x78F9DEB4) - 189468287) ^ ((v311 ^ 0x1A0AC012) - 1773670617) ^ ((v311 ^ 0x9C6C5A0A)
                                                                                           + 270628159))
                + 1368141543;
  LODWORD(v312) = LODWORD(STACK[0x15D0]) + 406943495;
  LODWORD(v309) = ((2 * (v312 & 0xC07 ^ 0xAB8889BA)) ^ 0x54111374) & (v312 ^ 0x4C3605BD) ^ v312 & 0xC07 ^ 0xAB8889BA ^ ((2 * (v312 & 0xC07 ^ 0xAB8889BA)) & 0x200093A | 0x888000);
  LODWORD(v296) = ((2 * (v312 ^ 0x4C3605BD)) ^ 0x54111374) & (v312 ^ 0x4C3605BD) ^ ((2 * (v312 ^ 0x4C3605BD)) & 0xA80009BA | 0x1000000);
  LODWORD(v309) = v309 ^ v296 & 0x44250174 ^ ((4 * v309) ^ 0xE2ADA35C) & (v296 ^ 0x2888132);
  LODWORD(v296) = ((4 * v296) ^ 0x4C8F85B4) & (v296 ^ 0x2888132) ^ v296 & 0x44250174;
  LODWORD(v309) = v309 ^ v296 & 0x46AD8174 ^ ((16 * v309) ^ 0xFE251AD4) & (v296 ^ 0x288813A);
  LODWORD(v296) = ((16 * v296) ^ 0x6E259274) & (v296 ^ 0x288813A) ^ v296 & 0x46AD8174;
  LODWORD(v309) = v309 ^ v296 & 0x46AD8174 ^ (((_DWORD)v309 << 8) ^ 0x46A50B74) & (v296 ^ 0x28881BA);
  LODWORD(v296) = (((_DWORD)v296 << 8) ^ 0xCE2CB174) & (v296 ^ 0x28881BA) ^ v296 & 0x46AD8174;
  LODWORD(v312) = v312 ^ (2
                        * (v309 ^ v296 & 0x46AD8174 ^ (((_DWORD)v309 << 16) ^ 0xCF178175) & (v296 ^ 0x29000000) ^ (((_DWORD)v309 << 16) ^ 0xCF178175) & 0x2B888130));
  LODWORD(v309) = LODWORD(STACK[0x1610]) + 901011448;
  LODWORD(v296) = (v309 & 0xB16 | 0x12200000 | (2 * (v309 & 0xB16)) & 0x1408) ^ (2 * (v309 & 0xB16)) & (v309 ^ 0x513BBE8F);
  LODWORD(v185) = (2 * (v309 ^ 0x513BBE8F)) & 0x1598 ^ 0x1489 ^ ((2 * (v309 ^ 0x513BBE8F)) ^ 0x24802B32) & (v309 ^ 0x513BBE8F);
  LODWORD(v296) = (4 * v296) & 0x8001498 ^ v296 ^ v185 & (4 * v296) & 0x7FFFF8;
  LODWORD(v185) = (4 * v185) & 0x9B701598 ^ 0x92300199 ^ ((4 * v185) ^ 0x6DC05664) & v185;
  LODWORD(v296) = (16 * v296) & 0x9B701590 ^ v296 ^ ((16 * v296) ^ 0xA2000000) & v185;
  LODWORD(v185) = (16 * v185) & 0x9B701590 ^ 0x8700409 ^ ((16 * v185) ^ 0xB7015990) & v185;
  LODWORD(v296) = v296 ^ ((_DWORD)v296 << 8) & 0x9B701500 ^ (((_DWORD)v296 << 8) ^ 0x20000000) & v185;
  LODWORD(v296) = v309 ^ (2
                        * (((v296 ^ 0x3501599) << 16) & 0x1B700000 ^ v296 ^ 0x3501599 ^ (((v296 ^ 0x3501599) << 16) ^ 0x15990000) & (((_DWORD)v185 << 8) & 0x1B700000 ^ 0xB600000 ^ (((_DWORD)v185 << 8) ^ 0x70150000) & v185)));
  LODWORD(v309) = LODWORD(STACK[0x15E4]) + 944417903;
  LODWORD(v185) = (LODWORD(STACK[0x15E4]) - 21393) & 0x49F ^ 0xBF9A2217 ^ (v309 ^ 0x782F749E) & (2 * ((LODWORD(STACK[0x15E4]) - 21393) & 0x49F));
  LODWORD(v221) = ((2 * (v309 ^ 0x782F7488)) ^ 0x4024402E) & (v309 ^ 0x782F7488) ^ (2 * (v309 ^ 0x782F7488)) & 0xA0216;
  LODWORD(v185) = v221 & 0x4060502A ^ v185 ^ ((4 * v185) ^ 0x1D98F876) & (v221 ^ 0xBF902007);
  LODWORD(v221) = ((4 * v221) ^ 0x1DB0F032) & (v221 ^ 0xBF902007) ^ v221 & 0x4060502A;
  LODWORD(v185) = v221 & 0xE3F0702A ^ v185 ^ ((16 * v185) ^ 0x2350517A) & (v221 ^ 0xA3902007);
  LODWORD(v221) = ((16 * v221) ^ 0xDAF2700A) & (v221 ^ 0xA3902007) ^ v221 & 0xE3F0702A;
  LODWORD(v185) = v185 ^ v221 & 0xE3F0702A ^ (((_DWORD)v185 << 8) ^ 0x79D2672A) & (v221 ^ 0xA3902017);
  LODWORD(v221) = (((_DWORD)v221 << 8) ^ 0x73D0722A) & (v221 ^ 0xA3902017) ^ v221 & 0xE3F0702A;
  LODWORD(v185) = v309 ^ (2
                        * (v185 ^ v221 & 0x63F0702A ^ (((_DWORD)v185 << 16) ^ 0xE1E5702A) & (v221 ^ 0x1C0A0000) ^ (((_DWORD)v185 << 16) ^ 0xE1E5702A) & 0x3F9A2002));
  LODWORD(v312) = 385
                * (((v312 ^ 0x5314EEA9) - 1804068829) ^ ((v312 ^ 0x2A452949) - 316022845) ^ ((v312 ^ 0xCCEF5AF3)
                                                                                           + 193178745))
                + 1421688739;
  LODWORD(v309) = (v312 ^ 0xF8ECEF75) & (2 * (v312 & 0xFCCEEF44)) ^ v312 & 0xFCCEEF44;
  LODWORD(v221) = ((2 * (v312 ^ 0x31E92F7D)) ^ 0x9A4F8072) & (v312 ^ 0x31E92F7D) ^ (2 * (v312 ^ 0x31E92F7D)) & 0xCD27C038;
  LODWORD(v309) = (v221 ^ 0x80078030) & (4 * v309) ^ v309;
  LODWORD(v221) = ((4 * (v221 ^ 0x45204009)) ^ 0x349F00E4) & (v221 ^ 0x45204009) ^ (4 * (v221 ^ 0x45204009)) & 0xCD27C038;
  LODWORD(v309) = v309 ^ 0xCD27C039 ^ (v221 ^ 0x4070039) & (16 * v309);
  LODWORD(v221) = (16 * (v221 ^ 0xC920C019)) & 0xCD27C030 ^ 0xD03C029 ^ ((16 * (v221 ^ 0xC920C019)) ^ 0xD27C0390) & (v221 ^ 0xC920C019);
  LODWORD(v309) = ((_DWORD)v309 << 8) & 0xCD27C000 ^ v309 ^ (((_DWORD)v309 << 8) ^ 0x27C03900) & v221;
  LODWORD(v309) = ((_DWORD)v309 << 16) & 0x4D270000 ^ v309 ^ (((_DWORD)v309 << 16) ^ 0x40390000) & (((_DWORD)v221 << 8) & 0x4D270000 ^ 0x48270000 ^ (((_DWORD)v221 << 8) ^ 0x27C00000) & v221);
  LODWORD(v296) = 385
                * (((v296 ^ 0x65EA9064) - 910984231) ^ ((v296 ^ 0xFF6FFCF4) + 1396053833) ^ ((v296 ^ 0x440EECB4)
                                                                                           - 396949751))
                + 1368141543;
  LODWORD(STACK[0x1790]) = v296 % 0x51A - 1926392729 - ((2 * (v296 % 0x51A)) & 0x8CE);
  LODWORD(v296) = 385
                * (((v185 ^ 0xA022F652) + 1785827196) ^ ((v185 ^ 0x4AD993E8) - 2138379582) ^ ((v185 ^ 0x527A770B)
                                                                                            - 1742139869))
                - 1286707025;
  LODWORD(v185) = (v296 ^ 0x1CB9863D) & (2 * (v296 & 0x9E3DC638)) ^ v296 & 0x9E3DC638;
  LODWORD(v221) = ((2 * (v296 ^ 0x10E10A6D)) ^ 0x1DB998AA) & (v296 ^ 0x10E10A6D) ^ (2 * (v296 ^ 0x10E10A6D)) & 0x8EDCCC54;
  LODWORD(v185) = (v221 ^ 0xA984C15) & (4 * v185) ^ v185;
  LODWORD(v221) = ((4 * (v221 ^ 0x82444455)) ^ 0x3B733154) & (v221 ^ 0x82444455) ^ (4 * (v221 ^ 0x82444455)) & 0x8EDCCC54;
  LODWORD(v185) = (v221 ^ 0xA500041) & (16 * v185) ^ v185;
  LODWORD(v221) = ((16 * (v221 ^ 0x848CCC01)) ^ 0xEDCCC550) & (v221 ^ 0x848CCC01) ^ (16 * (v221 ^ 0x848CCC01)) & 0x8EDCCC50;
  LODWORD(v185) = v185 ^ 0x8EDCCC55 ^ (v221 ^ 0x8CCCC400) & ((_DWORD)v185 << 8);
  LODWORD(v185) = ((_DWORD)v185 << 16) & 0xEDC0000 ^ v185 ^ (((_DWORD)v185 << 16) ^ 0x4C550000) & (((v221 ^ 0x2100805) << 8) & 0xEDC0000 ^ 0x2100000 ^ (((v221 ^ 0x2100805) << 8) ^ 0x5CCC0000) & (v221 ^ 0x2100805));
  LODWORD(v221) = 385 * LODWORD(STACK[0x1544]) + 682693589;
  LODWORD(v230) = (2 * (v221 & 0x38439)) & 0x850 ^ v221 & 0x38439 ^ ((2 * (v221 & 0x38439)) | 0x200000) & (v221 ^ 0xD05318ED);
  LODWORD(v280) = (2 * (v221 ^ 0xD05318ED)) & 0x1009CD4 ^ 0x1008454 ^ ((2 * (v221 ^ 0xD05318ED)) ^ 0x80139A8) & (v221 ^ 0xD05318ED);
  LODWORD(v230) = (4 * v230) & 0x7009CD4 ^ v230 ^ ((4 * v230) ^ 0x400000) & v280;
  LODWORD(v280) = (4 * v280) & 0x7009CD4 ^ 0x3008C84 ^ ((4 * v280) ^ 0x1C027350) & v280;
  LODWORD(v230) = (16 * v230) & 0x7009CD0 ^ v230 ^ ((16 * v230) ^ 0x1000000) & v280;
  LODWORD(v280) = (16 * v280) & 0x7009CD0 ^ 0x7001094 ^ ((16 * v280) ^ 0x7009CD40) & v280;
  LODWORD(v230) = v230 ^ 0x6109CD4 ^ ((_DWORD)v230 << 8) & 0x7009C00 ^ (((_DWORD)v230 << 8) ^ 0x10000000) & v280;
  v314 = v221 ^ (2
                             * (((_DWORD)v230 << 16) & 0x7000000 ^ v230 ^ (((_DWORD)v230 << 16) ^ 0x1CD40000) & (((_DWORD)v280 << 8) & 0x7000000 ^ (((_DWORD)v280 << 8) ^ 0x9C0000) & v280 ^ 0x7000000))) ^ 0x5C7F29F6;
  v315 = 0x322E42A57083BALL
       * (((v314 ^ 0xC48F961B72B50363) + 0x3B7069E48D4AFC9DLL) ^ ((v314 ^ 0x30A8CEA8C14DBB59) - 0x30A8CEA8C14DBB59) ^ ((v314 ^ 0xF42758B33ED52C5DLL) + 0xBD8A74CC12AD3A3))
       + 0x16FFEA014EB3167DLL;
  v316 = (2 * (v315 & 0xD6C547C8E76B7158)) & 0x10A8581C41680B0 ^ v315 & 0xD6C547C8E76B7158 ^ ((2 * (v315 & 0xD6C547C8E76B7158)) | 2) & (v315 ^ 0x87EBD20D0354ECE8);
  v317 = (2 * (v315 ^ 0x87EBD20D0354ECE8)) & 0x512E95C5E43F9DB0 ^ 0x5122944424008491 ^ ((2
                                                                                             * (v315 ^ 0x87EBD20D0354ECE8)) ^ 0xA25D2B8BC87F3B62) & (v315 ^ 0x87EBD20D0354ECE8);
  v318 = (4 * v316) & 0x512E95C5E43F9DB0 ^ v316 ^ ((4 * v316) | 4) & v317;
  v319 = (4 * v317) & 0x512E95C5E43F9DB0 ^ 0x110480C064018931 ^ ((4 * v317) ^ 0x44BA571790FE76C4) & v317;
  v320 = (16 * v318) & 0x512E95C5E43F9DB0 ^ v318 ^ ((16 * v318) ^ 0x10) & v319;
  v321 = (16 * v319) & 0x512E95C5E43F9DB0 ^ 0x41068181A40604A1 ^ ((16 * v319) ^ 0x12E95C5E43F9DB10) & v319;
  v322 = (v320 << 8) & 0x512E95C5E43F9D00 ^ v320 ^ ((v320 << 8) ^ 0x1100) & v321;
  v323 = (v321 << 8) & 0x512E95C5E43F9D00 ^ 0x512A1001C0220CB1 ^ ((v321 << 8) ^ 0x2E95C5E43F9DB100) & v321;
  v324 = v322 ^ (v322 << 16) & 0x512E95C5E43F0000 ^ ((v322 << 16) ^ 0x11110000) & v323;
  v325 = v315 ^ (2
               * (((v324 ^ 0x512E95C5E42E8CA0) << 32) & 0x512E95C500000000 ^ v324 ^ 0x512E95C5E42E8CA0 ^ (((v324 ^ 0x512E95C5E42E8CA0) << 32) ^ 0x643F9DB100000000) & ((v323 << 16) & 0x512E95C500000000 ^ 0x402A11C000000000 ^ ((v323 << 16) ^ 0x15C5E43F00000000) & v323)));
  v326 = ((v325 ^ 0xDD6A47FEFF185E77) - 0x6650ED632326170DLL) ^ ((v325 ^ 0x78255352D045DE88) + 0x3CE00630F384680ELL);
  LODWORD(v325) = __CFADD__(1306 * (v326 ^ ((v325 ^ 0x518A53ED0049CAC4) + 0x154F068F23887C42)), 0x1FA379308454999ALL)+ (((v326 ^ ((v325 ^ 0x518A53ED0049CAC4) + 0x154F068F23887C42)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v325 ^ 0xDD6A47FEFF185E77, 0x99AF129CDCD9E8F3) - 1) ^ (__CFADD__(v325 ^ 0x78255352D045DE88, 0x3CE00630F384680ELL)- 1) ^ (__CFADD__(v325 ^ 0x518A53ED0049CAC4, 0x154F068F23887C42)- 1))+ 1134122748;
  LODWORD(v326) = (v325 ^ 0xBC46009B) & (2 * (v325 & 0xBC66AA9C)) ^ v325 & 0xBC66AA9C;
  LODWORD(v323) = ((2 * (v325 ^ 0xF44214AB)) ^ 0x90497C6E) & (v325 ^ 0xF44214AB) ^ (2 * (v325 ^ 0xF44214AB)) & 0x4824BE36;
  LODWORD(v326) = (v323 ^ 0x8003C21) & (4 * v326) ^ v326;
  LODWORD(v323) = ((4 * (v323 ^ 0x48248211)) ^ 0x2092F8DC) & (v323 ^ 0x48248211) ^ (4 * (v323 ^ 0x48248211)) & 0x4824BE34;
  LODWORD(v326) = (v323 ^ 0xB800) & (16 * v326) ^ v326;
  LODWORD(v323) = ((16 * (v323 ^ 0x48240623)) ^ 0x824BE370) & (v323 ^ 0x48240623) ^ (16 * (v323 ^ 0x48240623)) & 0x4824BE30;
  LODWORD(v326) = v326 ^ 0x4824BE37 ^ (v323 ^ 0xA200) & ((_DWORD)v326 << 8);
  LODWORD(v311) = *(unsigned __int8 *)(v202
                                     + ((-3
                                                        * *((_BYTE *)&STACK[0x2920]
                                                          + ((v311 % 0x51A
                                                            - 1926392729
                                                            - ((2 * (v311 % 0x51A)) & 0x8CE)) ^ 0x8D2D9467))) ^ 0xFDu)
                                     + 40108);
  LODWORD(v311) = ((2 * v311) >> 6) ^ (((2 * (_DWORD)v311) & 0xFEu) >> 4) ^ ((v311 >> 7) & 0xFFFFFE01 | (2 * v311)) ^ 0xFFFFFFD7;
  LODWORD(STACK[0x15E4]) = (v311 >> 2) | ((_DWORD)v311 << 6);
  LODWORD(STACK[0x1610]) = (v312 ^ (2 * (_DWORD)v309) ^ 0xECC36F36) % 0x51A;
  LOBYTE(v311) = *((_BYTE *)&STACK[0x2920] + (v296 ^ (2 * (_DWORD)v185) ^ 0x9B2C5E92) % 0x51A);
  LODWORD(STACK[0x1708]) = v325 ^ (2
                                 * (((_DWORD)v326 << 16) & 0x48240000 ^ v326 ^ (((_DWORD)v326 << 16) ^ 0x3E370000) & (((v323 ^ 0x48241C07) << 8) & 0x48240000 ^ 0x48000000 ^ (((v323 ^ 0x48241C07) << 8) ^ 0x24BE0000) & (v323 ^ 0x48241C07))));
  LODWORD(v311) = ((-3 * v311) ^ 0x1B) + 527149040;
  LODWORD(v312) = v311 & 0x8276 ^ 0x139319C6 ^ (v311 ^ 0xF3068B74) & (2 * (v311 & 0x8276));
  LODWORD(v309) = ((2 * (v311 ^ 0xF3078BB0)) ^ 0x2424238C) & (v311 ^ 0xF3078BB0) ^ (2 * (v311 ^ 0xF3078BB0)) & 0x101059C6;
  LODWORD(v312) = v309 & 0x684334 ^ v312 ^ ((4 * v312) ^ 0x4CA7A42C) & (v309 ^ 0x3827186);
  LODWORD(v309) = ((4 * v309) ^ 0xCE38524) & (v309 ^ 0x3827186) ^ v309 & 0x684334;
  LODWORD(v312) = v309 & 0x2EA4334 ^ v312 ^ ((16 * v312) ^ 0x13F9CF14) & (v309 ^ 0x2824106);
  LODWORD(v309) = ((16 * v309) ^ 0x2ACE5374) & (v309 ^ 0x2824106) ^ v309 & 0x2EA4334;
  LODWORD(v312) = v312 ^ v309 & 0x2EA4334 ^ (((_DWORD)v312 << 8) ^ 0x91938534) & (v309 ^ 0x28241C6);
  LODWORD(v309) = (((_DWORD)v309 << 8) ^ 0x80AB4734) & (v309 ^ 0x28241C6) ^ v309 & 0x2EA4334;
  LODWORD(v311) = v311 ^ 0xC7B201FA ^ (2
                                     * (v312 ^ v309 & 0x2EA4334 ^ (((_DWORD)v312 << 16) ^ 0x3A284334) & (v309 ^ 0x11110000) ^ (((_DWORD)v312 << 16) ^ 0x3A284334) & 0x13934104));
  LODWORD(v312) = LODWORD(STACK[0x1528]) + 501446152;
  LODWORD(v309) = ((2 * (v312 & 0x506 ^ 0x8CEDC98E)) ^ 0x1112131C) & (v312 ^ 0x6EF14488) ^ v312 & 0x506 ^ 0x8CEDC98E ^ ((2 * (v312 & 0x506 ^ 0x8CEDC98E)) & 0x809080C | 0x4244000);
  LODWORD(v296) = ((2 * (v312 ^ 0x6EF14488)) ^ 0x1112131C) & (v312 ^ 0x6EF14488) ^ (2 * (v312 ^ 0x6EF14488)) & 0x8000018E;
  LODWORD(v309) = v309 ^ v296 & 0x5012121C ^ ((4 * v309) ^ 0x5F3D7414) & (v296 ^ 0xCEDC10E);
  LODWORD(v296) = ((4 * v296) ^ 0x6F88562C) & (v296 ^ 0xCEDC10E) ^ v296 & 0x5012121C;
  LODWORD(v309) = v309 ^ v296 & 0x5C3F521C ^ ((16 * v309) ^ 0x92E3CAFC) & (v296 ^ 0xC2D400E);
  LODWORD(v296) = ((16 * v296) ^ 0x9EEB52DC) & (v296 ^ 0xC2D400E) ^ v296 & 0x5C3F521C;
  LODWORD(v309) = v309 ^ v296 & 0x5C3F521C ^ (((_DWORD)v309 << 8) ^ 0x9CB6D01C) & (v296 ^ 0xC2D408E);
  LODWORD(v296) = (((_DWORD)v296 << 8) ^ 0x717F5E1C) & (v296 ^ 0xC2D408E) ^ v296 & 0x5C3F521C;
  LODWORD(v312) = v312 ^ (2
                        * (v309 ^ v296 & 0x5C3F521C ^ (((_DWORD)v309 << 16) ^ 0x95B1521D) & (v296 ^ 0xC00000) ^ (((_DWORD)v309 << 16) ^ 0x95B1521D) & 0xCED400C));
  LODWORD(v312) = 385
                * (((v312 ^ 0x9AEDB990) + 195185675) ^ ((v312 ^ 0x9BD7D696) + 177742605) ^ ((v312 ^ 0xE2A7F104)
                                                                                          + 1944585375))
                - 1389692589;
  LODWORD(v309) = ((2 * (v312 & 0xA4613594)) & 0x8004A28 | v312 & 0xA4613594) ^ (2 * (v312 & 0xA4613594)) & (v312 ^ 0x2C707B2A);
  LODWORD(v296) = ((2 * (v312 ^ 0x2C707B2A)) ^ 0x10229D7C) & (v312 ^ 0x2C707B2A) ^ (2 * (v312 ^ 0x2C707B2A)) & 0x88114EBE;
  LODWORD(v309) = (v296 ^ 0x8100C32) & (4 * v309) ^ v309;
  LODWORD(v296) = ((4 * (v296 ^ 0x88114282)) ^ 0x20453AF8) & (v296 ^ 0x88114282) ^ (4 * (v296 ^ 0x88114282)) & 0x88114EBC;
  LODWORD(v309) = (v296 ^ 0x10AA6) & (16 * v309) ^ v309;
  LODWORD(v296) = ((16 * (v296 ^ 0x88104406)) ^ 0x8114EBE0) & (v296 ^ 0x88104406) ^ (16 * (v296 ^ 0x88104406)) & 0x88114EB0;
  LODWORD(v309) = v309 ^ 0x88114EBE ^ (v296 ^ 0x80104A1E) & ((_DWORD)v309 << 8);
  LODWORD(v61) = v312 ^ (2
                       * (((_DWORD)v309 << 16) & 0x8110000 ^ v309 ^ (((_DWORD)v309 << 16) ^ 0x4EBE0000) & (((v296 ^ 0x801041E) << 8) & 0x88110000 ^ 0x8110000 ^ (((v296 ^ 0x801041E) << 8) ^ 0x114E0000) & (v296 ^ 0x801041E))));
  LODWORD(v311) = *(unsigned __int8 *)(v202 + v311);
  LODWORD(v312) = v311 & 0xFFFFFFAD ^ 0xFFFFFFA0;
  LODWORD(STACK[0x1254]) = v312;
  LODWORD(STACK[0x15D0]) = (v61 ^ 0xA463A8E8) % 0x51A;
  LOBYTE(v309) = v277[62] ^ LODWORD(STACK[0x15CC]);
  LODWORD(v296) = v309;
  LODWORD(v185) = ((v296 + 746350838) ^ 0x6DFD0992) & (2 * ((v296 + 746350838) & 0x18)) ^ (v296 + 746350838) & 0x18;
  LODWORD(v325) = (2 * ((v296 + 746350838) ^ 0x6DFD0982)) & 0x39A ^ 0x108A ^ ((2 * ((v296 + 746350838) ^ 0x6DFD0982)) ^ 0x40812134) & ((v296 + 746350838) ^ 0x6DFD0982);
  LODWORD(v185) = ((32 * ((v185 >> 3) & 7)) | 0x6000) & v325 ^ v185 ^ ((4 * v185) & 0x80 | 0xB87A0208);
  LODWORD(v325) = (4 * v325) & 0xBE7E9398 ^ 0x6049192 ^ ((4 * v325) ^ 0x79FA4E68) & v325;
  LODWORD(v185) = (16 * v185) & 0xBE7E9390 ^ v185 ^ ((16 * v185) ^ 0x87A1A080) & v325;
  LODWORD(v325) = (16 * v325) & 0xBE7E9390 ^ 0x1816821A ^ ((16 * v325) ^ 0xE7E939A0) & v325;
  LODWORD(v185) = v185 ^ ((_DWORD)v185 << 8) & 0xBE7E9300 ^ (((_DWORD)v185 << 8) ^ 0x5A9A8800) & v325;
  LODWORD(v185) = (v309 + 746350838) ^ (2
                                                       * (((v185 ^ 0x9A3E8912) << 16) & 0x3E7E0000 ^ v185 ^ 0x9A3E8912 ^ (((v185 ^ 0x9A3E8912) << 16) ^ 0x139A0000) & (((_DWORD)v325 << 8) & 0x3E7E0000 ^ 0x6C0000 ^ (((_DWORD)v325 << 8) ^ 0x7E930000) & v325)));
  LODWORD(STACK[0x15CC]) = ((v311 ^ ((v312 & 0xF8) >> 3) ^ 0x58) >> 2) | ((v311 ^ ((v312 & 0xF8) >> 3)) << 6);
  LODWORD(v312) = (385
                 * (((v185 ^ 0x338834BA) - 904863217) ^ ((v185 ^ 0xC672D7E4) + 1072300369) ^ ((v185 ^ 0x7EB05E72) - 2027386681))
                 + 1368141543)
                % 0x51A;
  LOBYTE(v311) = (v277[111] >> 3) | (32 * v277[111]);
  LODWORD(v296) = (v309 + 270) & (v185 ^ 0x80) & 0x81818181 ^ ((1 - (_BYTE)v309) & 1 | 0x180);
  v327 = v277;
  v328 = STACK[0x1858];
  LOBYTE(v309) = (LODWORD(STACK[0x15E8]) - 107) ^ LODWORD(STACK[0x1858]) ^ v277[193];
  LODWORD(STACK[0x1748]) = (((_DWORD)v296 * (LODWORD(STACK[0x1748]) + 782)
                           - 1926392729
                           - ((2 * (_DWORD)v296 * (LODWORD(STACK[0x1748]) + 782)) & 0x1B28CE)) ^ 0x8D2D9467)
                         % 0x51A;
  LODWORD(v277) = STACK[0x1558];
  LODWORD(v185) = *(unsigned __int8 *)(v202 + STACK[0x15B0]) - 38;
  LODWORD(v185) = LODWORD(STACK[0x1868]) ^ LODWORD(STACK[0x1560]) ^ LODWORD(STACK[0x17EC]) ^ LODWORD(STACK[0x1558]) ^ LODWORD(STACK[0x17BC]) ^ LODWORD(STACK[0x17E0]) ^ LODWORD(STACK[0x17A8]) ^ LODWORD(STACK[0x15AC]) ^ v185 ^ (v185 >> 5) ^ (v185 >> 4) ^ 0xFFFFFFE2;
  LODWORD(STACK[0xD7C]) = v185;
  LODWORD(v296) = v185 + 196439431;
  LODWORD(v185) = (v296 ^ 0x599B8587) & (2 * (v296 & 0x587)) ^ v296 & 0x587;
  LODWORD(v325) = (2 * (v296 ^ 0x599B848B)) & 0x10C ^ 0x104 ^ ((2 * (v296 ^ 0x599B848B)) ^ 0x52222218) & (v296 ^ 0x599B848B);
  LODWORD(v185) = (4 * v185) & v325 ^ v185 ^ ((4 * v185) & 0x100C | 0xA5400000);
  LODWORD(v325) = (4 * v325) & 0xADD1110C ^ 0x891110C ^ ((4 * v325) ^ 0x37444430) & v325;
  LODWORD(v185) = v185 ^ (16 * v185) & 0xADD11100 ^ ((16 * v185) ^ 0x54000000) & v325;
  LODWORD(v325) = (16 * v325) & 0xADD11100 ^ 0x20C0010C ^ ((16 * v325) ^ 0xDD1110C0) & v325;
  LODWORD(v185) = ((v185 ^ 0xC91110C) << 8) & 0xADD11100 ^ v185 ^ 0xC91110C ^ (((v185 ^ 0xC91110C) << 8) ^ 0xD1110C00) & v325;
  LODWORD(v296) = v296 ^ (2
                        * (((_DWORD)v185 << 16) & 0x2DD10000 ^ v185 ^ (((_DWORD)v185 << 16) ^ 0x110C0000) & (((_DWORD)v325 << 8) & 0x2DD10000 ^ 0x2CC00000 ^ (((_DWORD)v325 << 8) ^ 0xD1110000) & v325)));
  LOBYTE(v190) = STACK[0x1828];
  LODWORD(v172) = LODWORD(STACK[0x1820]) ^ v328 ^ LODWORD(STACK[0x1898]) ^ LODWORD(STACK[0x1650]);
  LOBYTE(v185) = LODWORD(STACK[0x1600]) ^ v190 ^ LODWORD(STACK[0x1650]) ^ v313 ^ LODWORD(STACK[0x1664]) ^ v328 ^ LODWORD(STACK[0x1820]) ^ LODWORD(STACK[0x1644]) ^ LODWORD(STACK[0x160C]) ^ *(_BYTE *)(v202 + (v311 ^ 0x99u) + 4432) ^ 0xD9 ^ LODWORD(STACK[0x1838]);
  LODWORD(v325) = 385 * LODWORD(STACK[0x1584]);
  LODWORD(STACK[0x1898]) = v325 + 301070 - 1306 * ((3288643 * (unint64_t)(v325 + 301070)) >> 32);
  LODWORD(v185) = (v185 + 782) * (((497 - v325) | (v325 + 301070)) & 0x181);
  v329 = (_DWORD)v185 - 1926392729 - ((2 * (_DWORD)v185) & 0x1B28CEu);
  v330 = 0x322E42A57083BALL
       * (((v329 ^ 0x819422012FE3CA5DLL) + 0x7E6BDDFED01C35A3) ^ ((v329 ^ 0x8AA9D88166DE4C93) + 0x7556277E9921B36DLL) ^ ((v329 ^ 0xB3DFA80C41012A9) - 0xB3DFA80C41012A9))
       - 0x22278A90256B62A1;
  v331 = (2 * (v330 & 0xFECBC5A5B89EA76)) & 0x1DC14814311214ECLL ^ v330 & 0xFECBC5A5B89EA76 ^ ((2
                                                                                                  * (v330 & 0xFECBC5A5B89EA76)) | 2) & (v330 ^ 0x120B714C2AB7F798);
  v332 = (2 * (v330 ^ 0x120B714C2AB7F798)) & 0x1DE7CD16713E1DEELL ^ 0x420451211020421 ^ ((2
                                                                                            * (v330 ^ 0x120B714C2AB7F798)) ^ 0x3BCF9A2CE27C3BDELL) & (v330 ^ 0x120B714C2AB7F798);
  v333 = (4 * v331) & 0x1DE7CD16713E1DECLL ^ v331 ^ ((4 * v331) ^ 0xC) & v332;
  v334 = (4 * v332) & 0x1DE7CD16713E1DECLL ^ 0x860C90631060843 ^ ((4 * v332) ^ 0x779F3459C4F877BCLL) & v332;
  v335 = (16 * v333) & 0x1DE7CD16713E1DE0 ^ v333 ^ ((16 * v333) ^ 0xF0) & v334;
  v336 = (16 * v334) & 0x1DE7CD16713E1DE0 ^ 0x1830C10601E010FLL ^ ((16 * v334) ^ 0xDE7CD16713E1DEF0) & v334;
  v337 = (v335 << 8) & 0x1DE7CD16713E1D00 ^ v335 ^ ((v335 << 8) ^ 0xEF00) & v336;
  v338 = (v336 << 8) & 0x1DE7CD16713E1D00 ^ 0x1822C906412210EFLL ^ ((v336 << 8) ^ 0xE7CD16713E1DEF00) & v336;
  v339 = v337 ^ (v337 << 16) & 0x1DE7CD16713E0000 ^ ((v337 << 16) ^ 0xDEF0000) & v338;
  v340 = v330 ^ (2
               * (((v339 ^ 0x1DE7CD1670101000) << 32) & 0x1DE7CD1600000000 ^ v339 ^ 0x1DE7CD1670101000 ^ (((v339 ^ 0x1DE7CD1670101000) << 32) ^ 0x713E1DEF00000000) & ((v338 << 16) & 0x1DE7CD1600000000 ^ 0x10E18C0000000000 ^ ((v338 << 16) ^ 0x4D16713E00000000) & v338)));
  v341 = ((v340 ^ 0xF5D048F486A87EFBLL) + 0x7FD6A31EF6AF6D1) ^ ((v340 ^ 0xDB284DB0C584F014) + 0x29056F75AC467840);
  LODWORD(v340) = __CFADD__(1306 * (v341 ^ ((v340 ^ 0x3897393EFAD95F46) - 0x3545E4046CE42892)), 0x86AF2173C5A159B2)+ (((v341 ^ ((v340 ^ 0x3897393EFAD95F46) - 0x3545E4046CE42892)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v340 ^ 0xF5D048F486A87EFBLL, 0x7FD6A31EF6AF6D1) - 1) ^ (__CFADD__(v340 ^ 0xDB284DB0C584F014, 0x29056F75AC467840)- 1) ^ (__CFADD__(v340 ^ 0x3897393EFAD95F46, 0xCABA1BFB931BD76ELL)- 1))+ 507622838;
  LODWORD(v341) = (v340 ^ 0xC1BE2A96) & (2 * (v340 & 0xE1BE4AD7)) ^ v340 & 0xE1BE4AD7;
  LODWORD(v338) = ((2 * (v340 ^ 0x82B22F1A)) ^ 0xC618CB9A) & (v340 ^ 0x82B22F1A) ^ (2 * (v340 ^ 0x82B22F1A)) & 0x630C65CC;
  LODWORD(v341) = (v338 ^ 0x220C4189) & (4 * v341) ^ v341;
  LODWORD(v338) = ((4 * (v338 ^ 0x21042445)) ^ 0x8C319734) & (v338 ^ 0x21042445) ^ (4 * (v338 ^ 0x21042445)) & 0x630C65CC;
  LODWORD(v341) = (v338 ^ 0x500) & (16 * v341) ^ v341;
  LODWORD(v338) = ((16 * (v338 ^ 0x630C60C9)) ^ 0x30C65CD0) & (v338 ^ 0x630C60C9) ^ (16 * (v338 ^ 0x630C60C9)) & 0x630C65C0;
  LODWORD(v341) = v341 ^ 0x630C65CD ^ (v338 ^ 0x2004440D) & ((_DWORD)v341 << 8);
  LODWORD(v341) = ((_DWORD)v341 << 16) & 0x630C0000 ^ v341 ^ (((_DWORD)v341 << 16) ^ 0x65CD0000) & (((v338 ^ 0x4308210D) << 8) & 0x630C0000 ^ 0x63080000 ^ (((v338 ^ 0x4308210D) << 8) ^ 0xC650000) & (v338 ^ 0x4308210D));
  LODWORD(v338) = 385 * v309 + 1762047768;
  LODWORD(v309) = (v338 ^ 0x8A7DD2F6) & (2 * (v338 & 0xDE0F6)) ^ v338 & 0xDE0F6;
  LODWORD(v323) = ((2 * (v338 ^ 0x8A7F1276)) ^ 0x2105E500) & (v338 ^ 0x8A7F1276) ^ (2 * (v338 ^ 0x8A7F1276)) & 0x482F280;
  LODWORD(v309) = (v323 ^ 0x4809000) & (4 * v309) ^ v309;
  LODWORD(v323) = ((4 * (v323 ^ 0x4821280)) ^ 0x720BCA00) & (v323 ^ 0x4821280) ^ (4 * (v323 ^ 0x4821280)) & 0x1C82F280;
  LODWORD(v309) = (v323 ^ 0x1002C200) & (16 * v309) ^ v309;
  LODWORD(v323) = ((16 * (v323 ^ 0xC803080)) ^ 0xC82F2800) & (v323 ^ 0xC803080) ^ (16 * (v323 ^ 0xC803080)) & 0x1C82F280;
  LODWORD(v309) = v309 ^ 0x1C82F280 ^ (v323 ^ 0x8022080) & ((_DWORD)v309 << 8);
  LODWORD(v323) = ((_DWORD)v309 << 16) & 0x1C820000 ^ v309 ^ (((_DWORD)v309 << 16) ^ 0x72800000) & (((v323 ^ 0x1480D280) << 8) & 0x1C820000 ^ (((v323 ^ 0x1480D280) << 8) ^ 0x2F20000) & (v323 ^ 0x1480D280) ^ 0x1C000000);
  LODWORD(v341) = v340 ^ 0xE5BE814D ^ (2 * v341);
  LODWORD(v309) = STACK[0x1530];
  LODWORD(v296) = 385
                * (((v296 ^ 0x553337F0) - 2010387464) ^ ((v296 ^ 0xB372D4A9) + 1852442799) ^ ((v296 ^ 0x498B54C6)
                                                                                            - 1802270526))
                + 1764926877;
  LODWORD(v340) = (v296 ^ 0xE71D2022) & (2 * (v296 & 0xE859894A)) ^ v296 & 0xE859894A;
  LODWORD(v171) = ((2 * (v296 ^ 0xE72D30A2)) ^ 0x1EE973D0) & (v296 ^ 0xE72D30A2) ^ (2 * (v296 ^ 0xE72D30A2)) & 0xF74B9E8;
  LODWORD(v340) = (v171 ^ 0x2602140) & (4 * v340) ^ v340;
  LODWORD(v171) = ((4 * (v171 ^ 0x1148828)) ^ 0x3DD2E7A0) & (v171 ^ 0x1148828) ^ (4 * (v171 ^ 0x1148828)) & 0xF74B9E8;
  LODWORD(v340) = (v171 ^ 0xD50A1A8) & (16 * v340) ^ v340;
  LODWORD(v171) = ((16 * (v171 ^ 0x2241848)) ^ 0xF74B9E80) & (v171 ^ 0x2241848) ^ (16 * (v171 ^ 0x2241848)) & 0xF74B9E0;
  LODWORD(v340) = v340 ^ 0xF74B9E8 ^ (v171 ^ 0x7409800) & ((_DWORD)v340 << 8);
  LODWORD(v340) = (v296 ^ (2
                                       * (((_DWORD)v340 << 16) & 0xF740000 ^ v340 ^ (((_DWORD)v340 << 16) ^ 0x39E80000) & (((v171 ^ 0x8342168) << 8) & 0xF740000 ^ 0xB440000 ^ (((v171 ^ 0x8342168) << 8) ^ 0x74B90000) & (v171 ^ 0x8342168)))) ^ 0xE470FA9A)
                % 0x51A;
  LODWORD(v323) = (v338 ^ (2 * (_DWORD)v323) ^ 0x8EF805F6) % 0x51A;
  LODWORD(v296) = 385 * LODWORD(STACK[0xDA4]) + 301070;
  LODWORD(v296) = v296 - 1306 * ((3288643 * (unint64_t)v296) >> 32);
  LODWORD(v338) = LODWORD(STACK[0x15F0]);
  LOBYTE(v171) = LODWORD(STACK[0x1680]) ^ (63
                                         * (v327[9] ^ 0xD ^ *(_BYTE *)((v327[9] ^ 0xCFLL) + v202 + 4174)));
  STACK[0x13E0] = v172 ^ v313;
  LOBYTE(v172) = v172 ^ v171;
  LODWORD(v171) = LODWORD(STACK[0x1818]) + 316039308;
  LODWORD(v58) = v171 & (2 * v171) & 0x104 | v171 & 0x2082;
  v342 = (2 * (v171 ^ 0x6363FAD2)) & 0x1050 ^ 0x4850 ^ ((2 * (v171 ^ 0x6363FAD2)) ^ 0x109490A0) & (v171 ^ 0x6363FAD2);
  LODWORD(v58) = ((4 * v58) & 0x10 | 0x8000040) ^ (v58 | 0x864A1810) ^ v342 & ((4 * v58) | 0x10000);
  v343 = (4 * v342) & 0x8E4A5850 ^ 0x86421810 ^ ((4 * v342) ^ 0x39296140) & v342;
  LODWORD(v58) = (16 * v58) & 0x8E4A5850 ^ v58 ^ ((16 * v58) ^ 0xE4A58500) & v343;
  v344 = (16 * v343) & 0x8E4A5850 ^ 0xA4A5850 ^ ((16 * v343) ^ 0xE4A58500) & v343;
  LODWORD(v58) = v58 ^ 0x8E485000 ^ ((_DWORD)v58 << 8) & 0x8E4A5800 ^ (((_DWORD)v58 << 8) ^ 0x4A585000) & v344;
  LODWORD(v171) = v171 ^ (2
                        * (((_DWORD)v58 << 16) & 0xE4A0000 ^ v58 ^ (((_DWORD)v58 << 16) ^ 0x58500000) & ((v344 << 8) & 0x8E4A0000 ^ 0x4020000 ^ ((v344 << 8) ^ 0x4A580000) & v344)));
  LODWORD(v172) = 385 * v172 + 1614584320;
  LODWORD(v58) = (2 * (v172 & 0x3FE0E)) & 0x7C14 ^ v172 & 0x3FE0E ^ ((2 * (v172 & 0x3FE0E)) | 0x80000) & (v172 ^ 0xBF4781BA);
  v345 = (2 * (v172 ^ 0xBF4781BA)) & 0x20807FB4 ^ 0x20800094 ^ ((2 * (v172 ^ 0xBF4781BA)) ^ 0x4100FF68) & (v172 ^ 0xBF4781BA);
  LODWORD(v58) = (4 * v58) & 0x20807FB4 ^ v58 ^ ((4 * v58) ^ 0x100000) & v345;
  v346 = (4 * v345) & 0x20807FB4 ^ 0x20800124 ^ ((4 * v345) ^ 0x8201FED0) & v345;
  LODWORD(v58) = (16 * v58) & 0x20807FB0 ^ v58 ^ ((16 * v58) ^ 0x400000) & v346;
  v347 = (16 * v346) & 0x20807FB0 ^ 0x208004B4 ^ ((16 * v346) ^ 0x807FB40) & v346;
  LODWORD(v58) = v58 ^ 0x20847FB4 ^ ((_DWORD)v58 << 8) & 0x20807F00 ^ (((_DWORD)v58 << 8) ^ 0x4000000) & v347;
  LODWORD(v172) = v172 ^ 0x9FC70166 ^ (2
                                     * (((_DWORD)v58 << 16) & 0x20800000 ^ v58 ^ (((_DWORD)v58 << 16) ^ 0x7FB40000) & ((v347 << 8) & 0x20800000 ^ 0x20800000 ^ ((v347 << 8) ^ 0x7F0000) & v347)));
  LODWORD(v58) = LODWORD(STACK[0x15F8]) + 969624673;
  v348 = (((((v58 & 0xAD) >> 5) & 1) << 6) | 0xC080) ^ (v58 & 0xAD | 0x41543640) ^ ((2 * (v58 & 0xAD)) | 0x800) & (v58 ^ 0x8760446D);
  v349 = (2 * (v58 ^ 0x8760446D)) & 0x2C0 ^ 0x240 ^ ((2 * (v58 ^ 0x8760446D)) ^ 0x82A90180) & (v58 ^ 0x8760446D);
  v350 = (4 * v348) & 0x4154F2C0 ^ v348 & 0x40043DFF ^ ((4 * v348) ^ 0x553CB00) & v349;
  v351 = (4 * v349) & 0x4154F2C0 ^ 0x400430C0 ^ ((4 * v349) ^ 0x553CB00) & v349;
  v352 = v350 ^ (16 * v350) & 0x4154F2C0 ^ ((16 * v350) ^ 0x154F2C00) & v351;
  v353 = (16 * v351) & 0x4154F2C0 ^ 0x4010D2C0 ^ ((16 * v351) ^ 0x154F2C00) & v351;
  v354 = (((v352 ^ 0x1442000) << 8) ^ 0x54F2C000) & v353 ^ v352 ^ 0x1442000 ^ (((v352 ^ 0x1442000) << 8) & 0x4154F200 | 0xC0);
  v355 = ((v353 << 8) ^ 0x54F2C000) & v353 ^ ((v353 << 8) & 0x4154F200 | 0xC0);
  LODWORD(v58) = v58 ^ (2
                      * (v354 ^ v355 & 0x6CF9CDC0 ^ ((v354 << 16) ^ 0xDEF9CDF8) & (v355 ^ 0x1040000) ^ ((v354 << 16) ^ 0xDEF9CDF8) & 0x4154C0C0));
  LODWORD(v172) = ((71 * *((_BYTE *)&STACK[0x2920] + v172 % 0x51A)) ^ 0xB1) + 164016961;
  v356 = (2 * (v172 & 0x51E)) & 0x21C ^ v172 & 0x51E ^ ((2 * (v172 & 0x51E)) | 0x10000) & (v172 ^ 0xC60F1200);
  v357 = (2 * (v172 ^ 0xC60F1200)) & 0x71E ^ 0x9102 ^ ((2 * (v172 ^ 0xC60F1200)) ^ 0x4049263C) & (v172 ^ 0xC60F1200);
  v358 = (4 * v356) & 0x3036B71C ^ v356 ^ ((4 * v356) ^ 0x28000) & v357;
  v359 = (4 * v357) & 0x3036B71C ^ 0x30242306 ^ ((4 * v357) ^ 0xC0C89478) & v357;
  v360 = (16 * v358) & 0x3036B710 ^ v358 ^ ((16 * v358) ^ 0x220000) & v359;
  v361 = (16 * v359) & 0x3036B710 ^ 0x3014861E ^ ((16 * v359) ^ 0x36B71E0) & v359;
  v362 = v360 ^ (v360 << 8) & 0x3036B700 ^ ((v360 << 8) ^ 0x20200000) & v361;
  LODWORD(v172) = v172 ^ (2
                        * (((v362 ^ 0x1036971E) << 16) & 0x30360000 ^ v362 ^ 0x1036971E ^ (((v362 ^ 0x1036971E) << 16) ^ 0x371E0000) & (((v361 << 8) ^ 0x36B70000) & v361 ^ (v361 << 8) & 0x30360000)));
  LODWORD(v58) = 385
               * (((v58 ^ 0xEA4340FB) - 603162545) ^ ((v58 ^ 0x9EBEC1AA) - 1460537056) ^ ((v58 ^ 0x3060D27C) + 103803594))
               - 1758179115;
  v363 = (v58 ^ 0xB107DF1A) & (2 * (v58 & 0xBA57DE12)) ^ v58 & 0xBA57DE12;
  v364 = ((2 * (v58 ^ 0xB58FC33A)) ^ 0x1FB03A50) & (v58 ^ 0xB58FC33A) ^ (2 * (v58 ^ 0xB58FC33A)) & 0xFD81D28;
  v365 = (v364 ^ 0xB901800) & (4 * v363) ^ v363;
  v366 = ((4 * (v364 ^ 0x480528)) ^ 0x3F6074A0) & (v364 ^ 0x480528) ^ (4 * (v364 ^ 0x480528)) & 0xFD81D28;
  v367 = (v366 ^ 0xF401428) & (16 * v365) ^ v365;
  v368 = ((16 * (v366 ^ 0x980908)) ^ 0xFD81D280) & (v366 ^ 0x980908) ^ (16 * (v366 ^ 0x980908)) & 0xFD81D20;
  v369 = v367 ^ 0xFD81D28 ^ (v368 ^ 0xD801028) & (v367 << 8);
  v370 = v58 ^ (2
                            * ((v369 << 16) & 0xFD80000 ^ v369 ^ ((v369 << 16) ^ 0x1D280000) & (((v368 ^ 0x2580D28) << 8) & 0xFD80000 ^ (((v368 ^ 0x2580D28) << 8) ^ 0x581D0000) & (v368 ^ 0x2580D28) ^ 0x7C00000))) ^ 0x32DA7025;
  v371 = 0x322E42A57083BALL
       * (((v370 ^ 0x8036379A196C9948) + 0x7FC9C865E69366B8) ^ ((v370 ^ 0x25A52B3D536C2B20) - 0x25A52B3D536C2B20) ^ ((v370 ^ 0xA5931CA7C72D260FLL) + 0x5A6CE35838D2D9F1))
       + 0x57F37270DC214CD4;
  v372 = (v371 ^ 0x8189BE1011FDB3C8) & (2 * (v371 & 0x95D1BF5959FD3B02)) ^ v371 & 0x95D1BF5959FD3B02;
  v373 = ((2 * (v371 ^ 0xA12BF0B0A24D85C8)) ^ 0x69F49FD3F7617D94) & (v371 ^ 0xA12BF0B0A24D85C8) ^ (2 * (v371 ^ 0xA12BF0B0A24D85C8)) & 0x34FA4FE9FBB0BEC8;
  v374 = (v373 ^ 0x20C00FC1E3203C00) & (4 * v372) ^ v372;
  v375 = ((4 * (v373 ^ 0x140A40280890824ALL)) ^ 0xD3E93FA7EEC2FB28) & (v373 ^ 0x140A40280890824ALL) ^ (4 * (v373 ^ 0x140A40280890824ALL)) & 0x34FA4FE9FBB0BEC8;
  v376 = (v375 ^ 0x10E80FA1EA80BA00) & (16 * v374) ^ v374;
  v377 = ((16 * (v375 ^ 0x24124048113004C2)) ^ 0x4FA4FE9FBB0BECA0) & (v375 ^ 0x24124048113004C2) ^ (16 * (v375 ^ 0x24124048113004C2)) & 0x34FA4FE9FBB0BEC0;
  v378 = (v377 ^ 0x4A04E89BB00AC00) & (v376 << 8) ^ v376;
  v379 = (((v377 ^ 0x305A016040B0124ALL) << 8) ^ 0xFA4FE9FBB0BECA00) & (v377 ^ 0x305A016040B0124ALL) ^ ((v377 ^ 0x305A016040B0124ALL) << 8) & 0x34FA4FE9FBB0BE00;
  v380 = v378 ^ 0x34FA4FE9FBB0BECALL ^ (v379 ^ 0x304A49E9B0B00000) & (v378 << 16);
  v381 = v371 ^ (2
               * ((v380 << 32) & 0x34FA4FE900000000 ^ v380 ^ ((v380 << 32) ^ 0x7BB0BECA00000000) & (((v379 ^ 0x4B006004B0034CALL) << 16) & 0x34FA4FE900000000 ^ 0x3012044900000000 ^ (((v379 ^ 0x4B006004B0034CALL) << 16) ^ 0x4FE9FBB000000000) & (v379 ^ 0x4B006004B0034CALL))));
  v382 = ((v381 ^ 0x1051E3C24EA5F3F3) - 0x3E3AE585083D92FLL) ^ ((v381 ^ 0xC39F1A7AC4DA1802) + 0x2FD2A81F2503CD22);
  LODWORD(v381) = __CFADD__(1306 * (v382 ^ ((v381 ^ 0x4E8BC4A224E3AD67) - 0x5D3989383AC587BBLL)), 0x5A53F085970C7184)+ (((v382 ^ ((v381 ^ 0x4E8BC4A224E3AD67) - 0x5D3989383AC587BBLL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v381 ^ 0x1051E3C24EA5F3F3, 0xFC1C51A7AF7C26D1) - 1) ^ (__CFADD__(v381 ^ 0xC39F1A7AC4DA1802, 0x2FD2A81F2503CD22)- 1) ^ (__CFADD__(v381 ^ 0x4E8BC4A224E3AD67, 0xA2C676C7C53A7845)- 1))+ 395502476;
  LODWORD(v382) = (v381 ^ 0xE748DE48) & (2 * (v381 & 0xE86D1F4D)) ^ v381 & 0xE86D1F4D;
  LODWORD(v379) = ((2 * (v381 ^ 0x779AE2DA)) ^ 0x3FEFFB2E) & (v381 ^ 0x779AE2DA) ^ (2 * (v381 ^ 0x779AE2DA)) & 0x9FF7FD96;
  LODWORD(v382) = (v379 ^ 0x3E4F904) & (4 * v382) ^ v382;
  LODWORD(v379) = ((4 * (v379 ^ 0x80100491)) ^ 0x7FDFF65C) & (v379 ^ 0x80100491) ^ (4 * (v379 ^ 0x80100491)) & 0x9FF7FD94;
  LODWORD(v382) = (v379 ^ 0x1FD7F410) & (16 * v382) ^ v382;
  LODWORD(v379) = ((16 * (v379 ^ 0x80200983)) ^ 0xFF7FD970) & (v379 ^ 0x80200983) ^ (16 * (v379 ^ 0x80200983)) & 0x9FF7FD90;
  LODWORD(v382) = v382 ^ 0x9FF7FD97 ^ (v379 ^ 0x9F77D900) & ((_DWORD)v382 << 8);
  LODWORD(v382) = ((_DWORD)v382 << 16) & 0x1FF70000 ^ v382 ^ (((_DWORD)v382 << 16) ^ 0x7D970000) & (((v379 ^ 0x802487) << 8) & 0x1FF70000 ^ 0x8020000 ^ (((v379 ^ 0x802487) << 8) ^ 0xF7FD0000) & (v379 ^ 0x802487));
  LODWORD(v379) = ((2 * ((unsigned __int16)v61 & 0x181 ^ 0x101)) | 0xC43FE528)
                - ((unsigned __int16)v61 & 0x181 ^ 0x101)
                - 1646260884;
  v383 = ((_DWORD)v277 + 714642229) ^ 0xC6C79B9A;
  v384 = ((2 * (((_DWORD)v277 + 714642229) & 0x7D9 ^ 0x13A0F443)) ^ 0x24410886) & v383 ^ ((_DWORD)v277 + 714642229) & 0x7D9 ^ 0x13A0F443 ^ ((2 * (((_DWORD)v277 + 714642229) & 0x7D9 ^ 0x13A0F443)) & 0x2006402 | 0x10001001);
  LODWORD(v327) = ((2 * v383) ^ 0x24410886) & v383 ^ ((2 * v383) & 0xA00442 | 0x1008001);
  v385 = v384 ^ v327 & 0xEC1803A7 ^ ((4 * v384) ^ 0xF89A62A6) & (v327 ^ 0x12007003);
  LODWORD(v327) = ((4 * (_DWORD)v327) ^ 0xB619B3AA) & (v327 ^ 0x12007003) ^ v327 & 0xEC1803A7;
  v386 = v385 ^ v327 & 0xFE1873A7 ^ ((16 * v385) ^ 0xC4173797) & (v327 ^ 0x12007003);
  LODWORD(v327) = ((16 * (_DWORD)v327) ^ 0xDE1F7397) & (v327 ^ 0x12007003) ^ v327 & 0xFE1873A7;
  v387 = v386 ^ v327 & 0xFE1873A7 ^ ((v386 << 8) ^ 0x5E9C33A7) & (v327 ^ 0x12007043);
  LODWORD(v327) = (((_DWORD)v327 << 8) ^ 0xFE6870A7) & (v327 ^ 0x12007043) ^ v327 & 0xFE1873A7;
  v388 = ((_DWORD)v277 + 714642229) ^ (2
                                     * (v387 ^ v327 & 0x7E1873A7 ^ ((v387 << 16) ^ 0xA5B73A7) & (v327 ^ 0x1A00000) ^ ((v387 << 16) ^ 0xA5B73A7) & 0x13A07003));
  v389 = v190 + 504761399;
  LODWORD(v327) = (v389 ^ 0xB2E848D6) & (2 * (v389 & 0xD7)) ^ v389 & 0xD7;
  v390 = (2 * (v389 ^ 0xB2E848DA)) & 0xA0C ^ 0x205 ^ ((2 * (v389 ^ 0xB2E848DA)) ^ 0xA402441A) & (v389 ^ 0xB2E848DA);
  LODWORD(v327) = (4 * (_DWORD)v327) & 0xFFFFFE0F ^ v327 ^ ((unsigned __int16)(4
                                                                                           * ((unsigned __int16)v327 & 0x1FF)) | 0x3000) & (unsigned __int16)v390;
  v391 = (4 * v390) & 0x5301BE0C ^ 0x13010609 ^ ((4 * v390) ^ 0x4C06F834) & v390;
  LODWORD(v327) = (16 * (_DWORD)v327) & 0x5301BE00 ^ v327 ^ ((16 * (_DWORD)v327) ^ 0x3C000) & v391;
  v392 = (16 * v391) & 0x5301BE00 ^ 0x43001E0D ^ ((16 * v391) ^ 0x301BE0D0) & v391;
  LODWORD(v327) = v327 ^ 0x5200020D ^ ((_DWORD)v327 << 8) & 0x5301BE00 ^ (((_DWORD)v327 << 8) ^ 0x1BC0000) & v392;
  LODWORD(v379) = (v389 ^ (2
                         * (((_DWORD)v327 << 16) & 0x53010000 ^ v327 ^ (((_DWORD)v327 << 16) ^ 0x3E0D0000) & ((v392 << 8) & 0x53010000 ^ 0x52010000 ^ ((v392 << 8) ^ 0x1BE0000) & v392))) ^ 0x63E88ACD)
                * (((v379 & 0x20105498 ^ 0x8801499) + (v379 & 0x420FAB07) - 1) ^ 0x6A9FE60C | (-2087005512
                                                                                             - ((unsigned __int16)v61 & 0x181 ^ 0x905017A1 | 0x839AD2B8)
                                                                                             + ((unsigned __int16)v61 & 0x181 ^ 0x905017A1 | 0x7C652D47)) ^ 0xEC353A66);
  v393 = LODWORD(STACK[0x14D8]) + 39953531;
  LODWORD(v327) = ((2 * (v393 & 0x93 ^ 0x74D24699)) ^ 0x89248132) & (v393 ^ 0x894C1C0A) ^ v393 & 0x93 ^ 0x74D24699;
  v394 = (2 * (v393 ^ 0x894C1C0A)) & 0x298 ^ 0x289 ^ ((2 * (v393 ^ 0x894C1C0A)) ^ 0x89248132) & (v393 ^ 0x894C1C0A);
  LODWORD(v327) = (4 * (_DWORD)v327) & 0x74D24298 ^ v327 & 0xAFBFFDFF ^ ((4 * (_DWORD)v327) ^ 0xD3490A64) & v394;
  v395 = (4 * v394) & 0x74D24298 ^ 0x24924099 ^ ((4 * v394) ^ 0xD3490A64) & v394;
  LODWORD(v327) = v327 ^ 0x44000090 ^ (16 * (_DWORD)v327) & 0x74D24290 ^ ((16 * (_DWORD)v327) ^ 0x4D242990) & v395;
  v396 = (16 * v395) & 0x74D24290 ^ 0x30D24209 ^ ((16 * v395) ^ 0x4D242990) & v395;
  LODWORD(v327) = ((_DWORD)v327 << 8) & 0x74D24200 ^ v327 ^ (((_DWORD)v327 << 8) ^ 0xD2429900) & v396;
  LODWORD(v327) = v393 ^ (2
                        * (((_DWORD)v327 << 16) & 0x74D20000 ^ v327 ^ (((_DWORD)v327 << 16) ^ 0x42990000) & ((v396 << 8) & 0x74D20000 ^ 0x24900000 ^ ((v396 << 8) ^ 0x52420000) & v396)));
  v397 = 385
       * (((v388 ^ 0xD3CBCCFE) + 2000666688) ^ ((v388 ^ 0x98436924) + 1018652134) ^ ((v388 ^ 0x9DAEC283) + 962252355))
       - 1566420317;
  v398 = (v397 ^ 0x8EE59810) & (2 * (v397 & 0xAEE9DC44)) ^ v397 & 0xAEE9DC44;
  v399 = ((2 * (v397 ^ 0xC7F40098)) ^ 0xD23BB9B8) & (v397 ^ 0xC7F40098) ^ (2 * (v397 ^ 0xC7F40098)) & 0x691DDCDC;
  v400 = (v399 ^ 0x40099010) & (4 * v398) ^ v398;
  v401 = ((4 * (v399 ^ 0x29044444)) ^ 0xA4777370) & (v399 ^ 0x29044444) ^ (4 * (v399 ^ 0x29044444)) & 0x691DDCDC;
  v402 = (v401 ^ 0x2015504C) & (16 * v400) ^ v400;
  v403 = ((16 * (v401 ^ 0x49088C8C)) ^ 0x91DDCDC0) & (v401 ^ 0x49088C8C) ^ (16 * (v401 ^ 0x49088C8C)) & 0x691DDCD0;
  v404 = v402 ^ 0x691DDCDC ^ (v403 ^ 0x11DCC00) & (v402 << 8);
  v405 = v397 ^ (2
               * ((v404 << 16) & 0x691D0000 ^ v404 ^ ((v404 << 16) ^ 0x5CDC0000) & (((v403 ^ 0x6800101C) << 8) & 0x691D0000 ^ 0x60010000 ^ (((v403 ^ 0x6800101C) << 8) ^ 0x1DDC0000) & (v403 ^ 0x6800101C))));
  LODWORD(v171) = 385
                * (((v171 ^ 0xDC551E73) + 1337616330) ^ ((v171 ^ 0xCE888A85) + 1567093568) ^ ((v171 ^ 0xF3E086D4)
                                                                                            + 1611661167))
                - 1677888636;
  v406 = (v171 ^ 0x35AEB37A) & (2 * (v171 & 0xB58EBB63)) ^ v171 & 0xB58EBB63;
  v407 = ((2 * (v171 ^ 0x3DABC73A)) ^ 0x104AF8B2) & (v171 ^ 0x3DABC73A) ^ (2 * (v171 ^ 0x3DABC73A)) & 0x88257C58;
  v408 = (v407 ^ 0x7810) & (4 * v406) ^ v406;
  v409 = ((4 * (v407 ^ 0x88250449)) ^ 0x2095F164) & (v407 ^ 0x88250449) ^ (4 * (v407 ^ 0x88250449)) & 0x88257C58;
  v410 = (v409 ^ 0x57049) & (16 * v408) ^ v408;
  v411 = ((16 * (v409 ^ 0x88200C19)) ^ 0x8257C590) & (v409 ^ 0x88200C19) ^ (16 * (v409 ^ 0x88200C19)) & 0x88257C50;
  v412 = v410 ^ 0x88257C59 ^ (v411 ^ 0x80054400) & (v410 << 8);
  LODWORD(v171) = v171 ^ (2
                        * ((v412 << 16) & 0x8250000 ^ v412 ^ ((v412 << 16) ^ 0x7C590000) & (((v411 ^ 0x8203849) << 8) & 0x88250000 ^ 0x8010000 ^ (((v411 ^ 0x8203849) << 8) ^ 0x257C0000) & (v411 ^ 0x8203849))));
  v413 = ((v327 ^ 0x2CAC8AF4) + 1809857230) ^ ((v327 ^ 0xE0364222) - 1485114852) ^ ((v327 ^ 0xF9041377) - 1102535857);
  v414 = 0x322E42A57083BALL
       * (((v171 ^ 0x2D3E4F853C7148C6) - 0x2D3E4F85049A9F70) ^ ((v171 ^ 0x94C477C94216CBDDLL)
                                                                                + 0x6B3B88368502E395) ^ ((v171 ^ 0xB9FA384CCBA1C0CALL) + 0x4605C7B30CB5E884))
       + 0x60F016F75A0E4C5ALL;
  v415 = (v414 ^ 0xCC801AC2DB5F327BLL) & (2 * (v414 & 0x8CD51AD2DC103B7CLL)) ^ v414 & 0x8CD51AD2DC103B7CLL;
  v416 = ((2 * (v414 ^ 0xC4202AE75B7F26C3)) ^ 0x91EA606B0EDE3B7ELL) & (v414 ^ 0xC4202AE75B7F26C3) ^ (2 * (v414 ^ 0xC4202AE75B7F26C3)) & 0x48F53035876F1DBELL;
  v417 = (v416 ^ 0xE0200100401930) & (4 * v415) ^ v415;
  v418 = ((4 * (v416 ^ 0x4815101481210481)) ^ 0x23D4C0D61DBC76FCLL) & (v416 ^ 0x4815101481210481) ^ (4 * (v416 ^ 0x4815101481210481)) & 0x48F53035876F1DBCLL;
  v419 = (v418 ^ 0xD40014052C14A0) & (16 * v417) ^ v417;
  v420 = ((16 * (v418 ^ 0x4821302182430903)) ^ 0x8F53035876F1DBF0) & (v418 ^ 0x4821302182430903) ^ (16 * (v418 ^ 0x4821302182430903)) & 0x48F53035876F1DB0;
  v421 = (v420 ^ 0x851001006611900) & (v419 << 8) ^ v419;
  v422 = (((v420 ^ 0x40A43025810E040FLL) << 8) ^ 0xF53035876F1DBF00) & (v420 ^ 0x40A43025810E040FLL) ^ ((v420 ^ 0x40A43025810E040FLL) << 8) & 0x48F53035876F1D00;
  v423 = v421 ^ 0x48F53035876F1DBFLL ^ (v422 ^ 0x40303005070D0000) & (v421 << 16);
  v424 = v414 ^ (2
               * ((v423 << 32) & 0x48F5303500000000 ^ v423 ^ ((v423 << 32) ^ 0x76F1DBF00000000) & (((v422 ^ 0x8C50030806200BFLL) << 16) & 0x48F5303500000000 ^ 0x48C0301000000000 ^ (((v422 ^ 0x8C50030806200BFLL) << 16) ^ 0x3035876F00000000) & (v422 ^ 0x8C50030806200BFLL))));
  v425 = ((v424 ^ 0xBE3F8FDBECBD7734) - 0x62367FB8250429B3) ^ ((v424 ^ 0x1E9B384496464F61) + 0x3D6D37D8A000EE1ALL);
  LODWORD(v424) = __CFADD__(1306 * (v425 ^ ((v424 ^ 0xBD51ED4CA8353857) - 0x61581D2F618C66D0)), 0xA2FEC66C1EF83282)+ (((v425 ^ ((v424 ^ 0xBD51ED4CA8353857) - 0x61581D2F618C66D0)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v424 ^ 0xBE3F8FDBECBD7734, 0x9DC98047DAFBD64DLL) - 1) ^ (__CFADD__(v424 ^ 0x1E9B384496464F61, 0x3D6D37D8A000EE1ALL)- 1) ^ (__CFADD__(v424 ^ 0xBD51ED4CA8353857, 0x9EA7E2D09E739930)- 1))+ 1460496176;
  LODWORD(v425) = (v424 ^ 0x24F89C0C) & (2 * (v424 & 0xA8F29CAD)) ^ v424 & 0xA8F29CAD;
  LODWORD(v422) = ((2 * (v424 ^ 0x641DB51C)) ^ 0x99DE5362) & (v424 ^ 0x641DB51C) ^ (2 * (v424 ^ 0x641DB51C)) & 0xCCEF29B0;
  LODWORD(v425) = (v422 ^ 0x80CE0120) & (4 * v425) ^ v425;
  LODWORD(v422) = ((4 * (v422 ^ 0x44212891)) ^ 0x33BCA6C4) & (v422 ^ 0x44212891) ^ (4 * (v422 ^ 0x44212891)) & 0xCCEF29B0;
  LODWORD(v425) = (v422 ^ 0xAC2080) & (16 * v425) ^ v425;
  LODWORD(v422) = ((16 * (v422 ^ 0xCC430931)) ^ 0xCEF29B10) & (v422 ^ 0xCC430931) ^ (16 * (v422 ^ 0xCC430931)) & 0xCCEF29B0;
  LODWORD(v425) = v425 ^ 0xCCEF29B1 ^ (v422 ^ 0xCCE209A1) & ((_DWORD)v425 << 8);
  LODWORD(v424) = v424 ^ (2
                        * (((_DWORD)v425 << 16) & 0x4CEF0000 ^ v425 ^ (((_DWORD)v425 << 16) ^ 0x29B10000) & (((v422 ^ 0xD20A1) << 8) & 0x4CEF0000 ^ 0xC60000 ^ (((v422 ^ 0xD20A1) << 8) ^ 0xEF290000) & (v422 ^ 0xD20A1))));
  LODWORD(v381) = v381 ^ (2 * v382);
  v426 = 0x322E42A57083BALL
       * (((v405 ^ 0xDB2AB5B86484E48ALL) + 0x24D54A47FABCEAEFLL) ^ ((v405 ^ 0xBAAD49289C73818CLL) + 0x4552B6D7024B8FE9) ^ ((v405 ^ 0x6187FC90141D00FALL) - 0x6187FC9075DAF161))
       - 0x560058AE16147E75;
  v427 = (2 * (v426 & 0x43C58A784C33064ALL)) & 0x850104C098620884 ^ v426 & 0x43C58A784C33064ALL ^ ((2 * (v426 & 0x43C58A784C33064ALL)) | 2) & (v426 ^ 0x86D44DB3B4518FA6);
  v428 = (2 * (v426 ^ 0x86D44DB3B4518FA6)) & 0xC511C7CBF86289ECLL ^ 0x4510404808228825 ^ ((2
                                                                                             * (v426 ^ 0x86D44DB3B4518FA6)) ^ 0x8A238F97F0C513DALL) & (v426 ^ 0x86D44DB3B4518FA6);
  v429 = (4 * v427) & 0xC511C7CBF86289ECLL ^ v427 ^ ((4 * v427) | 4) & v428;
  v430 = (4 * v428) & 0xC511C7CBF86289ECLL ^ 0xC110C0C018608849 ^ ((4 * v428) ^ 0x14471F2FE18A27B4) & v428;
  v431 = (16 * v429) & 0xC511C7CBF86289E0 ^ v429 ^ ((16 * v429) ^ 0x50) & v430;
  v432 = (16 * v430) & 0xC511C7CBF86289E0 ^ 0x840183407842012DLL ^ ((16 * v430) ^ 0x511C7CBF86289ED0) & v430;
  v433 = (v431 << 8) & 0xC511C7CBF8628900 ^ v431 ^ ((v431 << 8) ^ 0x4500) & v432;
  v434 = (v432 << 8) & 0xC511C7CBF8628900 ^ 0xC4100403986200EDLL ^ ((v432 << 8) ^ 0x11C7CBF86289ED00) & v432;
  v435 = v433 ^ (v433 << 16) & 0xC511C7CBF8620000 ^ ((v433 << 16) ^ 0x1450000) & v434;
  v436 = v426 ^ (2
               * (((v435 ^ 0xC511C7CBF82288A8) << 32) & 0x4511C7CB00000000 ^ v435 ^ 0xC511C7CBF82288A8 ^ (((v435 ^ 0xC511C7CBF82288A8) << 32) ^ 0x786289ED00000000) & ((v434 << 16) & 0x4511C7CB00000000 ^ 0x10078900000000 ^ ((v434 << 16) ^ 0x47CBF86200000000) & v434)));
  v437 = ((v436 ^ 0xBAE1C3F3D8C0D1BBLL) + 0x526B6D657B797A7ALL) ^ ((v436 ^ 0x52CF1F232DF0B263) - 0x45BA4E4A71B6E65ELL);
  LODWORD(v436) = __CFADD__(1306 * (v437 ^ ((v436 ^ 0xA1C9DAAD49C67649) + 0x4943743BEA7FDD8CLL)), 0x76904082432F0778)+ (((v437 ^ ((v436 ^ 0xA1C9DAAD49C67649) + 0x4943743BEA7FDD8CLL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v436 ^ 0xBAE1C3F3D8C0D1BBLL, 0x526B6D657B797A7ALL) - 1) ^ (__CFADD__(v436 ^ 0x52CF1F232DF0B263, 0xBA45B1B58E4919A2)- 1) ^ (__CFADD__(v436 ^ 0xA1C9DAAD49C67649, 0x4943743BEA7FDD8CLL)- 1))+ 2005364650;
  LODWORD(v437) = (v436 ^ 0x2E7093B9) & (2 * (v436 & 0x88789238)) ^ v436 & 0x88789238;
  LODWORD(v434) = ((2 * (v436 ^ 0x3ED097C9)) ^ 0x6D500BE2) & (v436 ^ 0x3ED097C9) ^ (2 * (v436 ^ 0x3ED097C9)) & 0xB6A805F0;
  LODWORD(v437) = (v434 ^ 0x200001E0) & (4 * v437) ^ v437;
  LODWORD(v434) = ((4 * (v434 ^ 0x92A80411)) ^ 0xDAA017C4) & (v434 ^ 0x92A80411) ^ (4 * (v434 ^ 0x92A80411)) & 0xB6A805F0;
  LODWORD(v437) = (v434 ^ 0x92A005C0) & (16 * v437) ^ v437;
  LODWORD(v434) = ((16 * (v434 ^ 0x24080031)) ^ 0x6A805F10) & (v434 ^ 0x24080031) ^ (16 * (v434 ^ 0x24080031)) & 0xB6A805F0;
  LODWORD(v437) = v437 ^ 0xB6A805F1 ^ (v434 ^ 0x228005E1) & ((_DWORD)v437 << 8);
  LODWORD(v437) = v436 ^ (2
                        * (((_DWORD)v437 << 16) & 0x36A80000 ^ v437 ^ (((_DWORD)v437 << 16) ^ 0x5F10000) & (((v434 ^ 0x942800E1) << 8) & 0xB6A80000 ^ 0x16A80000 ^ (((v434 ^ 0x942800E1) << 8) ^ 0xA8050000) & (v434 ^ 0x942800E1))));
  LODWORD(v436) = (385 * v413 + 1368141543) % 0x51A - 1926392729 - ((2 * ((385 * v413 + 1368141543) % 0x51A)) & 0x8CE);
  v438 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1770]));
  STACK[0x1208] = v438;
  v439 = (_DWORD)v438 << ((((2 * ((121 - (v436 & 0x10)) ^ 0x39)) & 0x60) - ((121 - (v436 & 0x10)) ^ 0x39) + 75) ^ 0x1B | (63 - (v436 & 0x10)) ^ 0x3F);
  v440 = (*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1738]))
        - 1926392729
        + (~(2 * *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1738]))) | 0xFFFF31)
        + 1) ^ (v439 - 1926392729 - ((2 * v439) & 0x1A5B28CE));
  v441 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1688]));
  LODWORD(v438) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16B0]));
  LODWORD(STACK[0x1664]) = v438;
  LODWORD(STACK[0x14A4]) = v441;
  LODWORD(v422) = (v441 | ((_DWORD)v438 << 8)) - 1926392729 - 2 * ((v441 | ((_DWORD)v438 << 8)) & 0x946F ^ v441 & 8);
  LODWORD(v438) = (*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16F8])) | (v440 << 8))
                - 1926392729
                - 2
                * ((*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16F8])) | (v440 << 8)) & 0xD2D9477 ^ *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x16F8])) & 0x10);
  v442 = ((((v422 ^ 0xD6144882) & ~(*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16EC])) << 16) | (*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16EC])) << 16) & 0xC60000) ^ 0x1BEBAFB2) & ~(*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16F0])) << 24) | (*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16F0])) << 24) & 0xBF000000) ^ 0x35080880;
  LODWORD(v172) = ((*(unsigned __int8 *)(v202 + (v172 ^ 0xF678CB22)) - 84) ^ 0x29) - 107;
  LODWORD(v341) = (~(_DWORD)v172 | 0xFF0000) & ((*((unsigned __int8 *)&STACK[0x2920] + v341) << 16) ^ 0xB80050) | v172 & 0xAF;
  LOBYTE(v437) = 63
               * (*(_BYTE *)((*((unsigned __int8 *)&STACK[0x2920] + (v437 ^ 0xEC6899DA)) ^ 0x12)
                           + v202
                           + 41218) ^ 9);
  LODWORD(v172) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1780]));
  v443 = v172 & 0x10;
  LODWORD(v172) = v172 & 0xFFFF00FF | (LODWORD(STACK[0xDEC]) << 8);
  LODWORD(v341) = (*((unsigned __int8 *)&STACK[0x2920]
                   + ((v379 % 0x51A - 1926392729 - ((2 * (v379 % 0x51A)) & 0x8CE)) ^ 0x8D2D9467)) | ((_DWORD)v341 << 8)) ^ 0xB8005000;
  LODWORD(v323) = (((*(_BYTE *)(v202
                                               + ((71 * *((_BYTE *)&STACK[0x2920] + v323)) ^ 0xB1u)
                                               + 22623)
                                    - 84) ^ 0x29)
                                  - 107) << 16;
  LODWORD(v341) = (((v341 - 1926392729 - ((2 * v341) & 0x1A5B28CE)) ^ 0x1E1512CF) & ~(_DWORD)v323 | v323 & 0xFFC7FFFF) ^ 0xC54047;
  LODWORD(v379) = *((unsigned __int8 *)&STACK[0x2920] + v312) | (*((unsigned __int8 *)&STACK[0x2920]
                                                                               + (LODWORD(STACK[0x1660]) ^ 0x8D2D9467)) << 24) | (LODWORD(STACK[0x15E4]) << 16);
  LODWORD(v312) = ((_DWORD)v172 << 16) - 1805189120 - ((v172 & 0x1477 ^ v443) << 17);
  LODWORD(v323) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1750])) | (*((unsigned __int8 *)&STACK[0x2920]
                                                                                   + LODWORD(STACK[0x1720])) << 8);
  v444 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1718]));
  LODWORD(v323) = (v312 ^ 0x9ACD26EB) & ~(_DWORD)v323 | v323 & 0xD914;
  LODWORD(v172) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16B8]));
  LODWORD(v422) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1610]));
  LODWORD(STACK[0xDA8]) = v444;
  v445 = (v444 << 16) | ((_DWORD)v172 << 8);
  LODWORD(v172) = ((((_DWORD)v422 << 8) ^ 0x950EF505) & ~(_DWORD)v379 | v379 & 0x6AF100FA) ^ 0x48E00AB0;
  LODWORD(STACK[0x112C]) = v438 ^ (*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x17F0])) << 16);
  LODWORD(v438) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16C8]));
  LOBYTE(v379) = ((*(_BYTE *)(v202 + (LODWORD(STACK[0x1648]) ^ 0x1F55F9CAu)) - 84) ^ 0x29) - 107;
  LODWORD(STACK[0x1204]) = v438;
  LODWORD(STACK[0xDF4]) = (v379 | ((v445 | v438) << 8))
                        - 1926392729
                        - 2 * ((v379 & 0x77 | ((v445 | v438) << 8) & 0xD2D9477) ^ v379 & 0x10);
  LODWORD(v379) = (((*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1668])) << 8) ^ 0x195D6246) & ~*((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1708]) ^ 0x3C67D6F2u)) | *((_BYTE *)&STACK[0x2920] + (LODWORD(STACK[0x1708]) ^ 0x3C67D6F2u)) & 0xB9) ^ 0x20020819;
  LODWORD(v438) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1898]));
  LODWORD(STACK[0xDB4]) = v438;
  LODWORD(v311) = ((((((_DWORD)v379 - ((2 * (_DWORD)v379) & 0xCE2C)) << 16) - 417988608) ^ 0xA8714F58) & ~(_DWORD)v438 | v438 & 0xA7) ^ 0x480220A1;
  LODWORD(v381) = *((unsigned __int8 *)&STACK[0x2920] + (v381 ^ 0xECACE463));
  LODWORD(v340) = v381 | (*((unsigned __int8 *)&STACK[0x2920] + v340) << 16);
  LODWORD(v379) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1870]));
  LODWORD(v422) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1798]));
  LODWORD(STACK[0xDF0]) = v422;
  LODWORD(v379) = (((_DWORD)v379 << 8) ^ 0x20ED728C) & ~(_DWORD)v422 | v422 & 0x73;
  LODWORD(v340) = (((((_DWORD)v340 << 8) + 764700557 - ((v340 & 0x2D006F ^ v381 & 8) << 9) - 141) ^ 0x188FE638) & (v437 ^ 0xFFFFFF3F) | v437 & 0xC7) ^ 0x2245407;
  LODWORD(STACK[0x1030]) = (v340 - ((2 * v340) & 0x1AE0013A) + 225443997) & 0xA6E69001 ^ 0xF6726B99 ^ ((v340 - ((2 * v340) & 0x1AE0013A) + 225443997) ^ 0x41B02A5C) & ((*((unsigned __int8 *)&STACK[0x2920] + (385 * v338 + 301070 - 1306 * ((3288643 * (unint64_t)(385 * v338 + 301070)) >> 32))) << 16) ^ 0x59196FFE);
  LODWORD(v340) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1760]))
                - 1926392729
                - ((2 * *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1760]))) & 0xCE);
  LODWORD(v338) = (((((v379 & 0xA57315 ^ 0x7205) + (v379 & 0x488CEA ^ 0x8463)) << 8) + 16776960) ^ 0x98FE1F) & (*((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1810]) ^ 0x8D2D9467)) ^ 0xFFFF5F) | *((_BYTE *)&STACK[0x2920] + (LODWORD(STACK[0x1810]) ^ 0x8D2D9467)) & 0xE0;
  LODWORD(v311) = (((2 * v311) & 0x47E419B2) - v311 - 603098330) & 0xDB846278 ^ 0xCCFAE440 ^ ((((2 * v311) & 0x47E419B2)
                                                                                             - v311
                                                                                             - 603098330) ^ 0x448E300) & ((LODWORD(STACK[0x15CC]) << 8) ^ 0x247B9D87);
  LODWORD(v381) = (((*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1778])) << 8) ^ 0x715B5B26) & ~*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1698])) | *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1698])) & 0xD9) ^ 0x8C04A090;
  LODWORD(v379) = (((*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x17A0])) << 8) ^ 0x2E213D1C) & ~*((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1790]) ^ 0x8D2D9467)) | *((_BYTE *)&STACK[0x2920] + (LODWORD(STACK[0x1790]) ^ 0x8D2D9467)) & 0xE3) ^ 0x91840221;
  LODWORD(v379) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1748])) | (((_DWORD)v379
                                                                                  - ((2 * (_DWORD)v379) & 0xD692)) << 16);
  LODWORD(v438) = ((*(unsigned __int8 *)(v202
                                       + ((71 * *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x16A4]))) ^ 0xB1u)
                                       + 22623)
                  - 84) ^ 0x29)
                - 107;
  LODWORD(STACK[0x1364]) = v438;
  LODWORD(v381) = ((~(_WORD)v438 | 0xFFFFFE07) & ((((((2 * (_DWORD)v381) & 0xB396) - (_DWORD)v381) << 16) + 640942080) ^ 0x344B3698) | v438 & 0x67) ^ 0x2008127;
  LODWORD(v438) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1710]));
  LODWORD(STACK[0xE04]) = v438;
  LODWORD(v381) = ((((2 * v381) & 0x42B52454) - v381 + 1587881429) ^ 0x8026D04) & (((_DWORD)v438 << 8) ^ 0xD229C04) ^ (((2 * v381) & 0x42B52454) - v381 + 1587881429) & 0xF2DD63FB;
  LODWORD(STACK[0xE40]) = ((_DWORD)v338 << 8) & 0xE4EEFC00 ^ 0x92388B7A ^ (v340 ^ 0x963C977A) & (((_DWORD)v338 << 8) ^ 0x324C0FF);
  LODWORD(v338) = *((unsigned __int8 *)&STACK[0x2920] + (v436 ^ 0x8D2D9467));
  LODWORD(v340) = (v338 & 0xE4 | 0x48900A00) ^ ((*((unsigned __int8 *)&STACK[0x2920] + (v424 ^ 0x206ECFCF)) << 8) ^ 0x974FF51B) & ~(_DWORD)v338;
  LODWORD(v296) = *((unsigned __int8 *)&STACK[0x2920]
                  + (((_DWORD)v296 - 1926392729 - ((2 * (_DWORD)v296) & 0x8CE)) ^ 0x8D2D9467)) << 16;
  LODWORD(v296) = ((((2 * v340) & 0x12A4B976) - v340 + 1454220100) ^ 0x783E6EEA) & ~(_DWORD)v296 ^ (v296 & 0xB30000 | 0xA00CD48);
  LODWORD(v340) = ((v379 - 347537408) ^ 0x988FFFE) & ((*((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x15D0])) << 8) ^ 0x9FCD7FE) | (v379 - 347537408) & 0xF6030001;
  LODWORD(v309) = (((2 * v296) & 0x201F54B4) - v296 + 1878021541) & 0x1A718801 ^ 0x18510800 ^ ((((2 * v296) & 0x201F54B4)
                                                                                              - v296
                                                                                              + 1878021541) ^ 0x6B0255A6) & ((*((unsigned __int8 *)&STACK[0x2920] + (385 * (int)v309 + 301070) % 0x51Au) << 24) ^ 0xE58E77FE);
  LODWORD(STACK[0xE38]) = (((2 * v442) & 0xF64EB68E) - v442 + 81306808) ^ 0xFC2F4B08;
  LODWORD(STACK[0xE08]) = (((2 * v341) & 0x668A4A38) - v341 - 860169501) ^ 0xD26A886B;
  LODWORD(STACK[0x14E8]) = v312 ^ 0x194A9467;
  LODWORD(STACK[0x17F0]) = ((v323 & 0x5AD2EE62 ^ 0x4A822662) + (v323 ^ 0xB151C910) - ((v323 ^ 0xB151C910) & 0x5AD2EE62)) ^ 0x680495FE;
  LODWORD(STACK[0xE44]) = (-1908882743 - (v172 | 0x8E38C2C9) + (v172 | 0x71C73D36)) ^ 0x210456E4;
  LODWORD(STACK[0xE30]) = (v311 - ((2 * v311) & 0x99369856) - 862237653) ^ 0x3833A1D3;
  LODWORD(STACK[0xE24]) = ((v381 & 0xDA35212B ^ 0x8A342128) + (v381 & 0x25CADED4 ^ 0xC800D1) - 1) ^ 0xBABF2BF1;
  LODWORD(STACK[0xDB0]) = v340 ^ 0x50D14399;
  LODWORD(STACK[0xE80]) = (((2 * v309) & 0x2EC9E568) - v309 + 1754991947) ^ 0x8596ED2;
  v446 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(STACK[0x18C0] + 8 * SLODWORD(STACK[0x173C]));
  LODWORD(STACK[0x1450]) = STACK[0x15C8];
  LODWORD(STACK[0x10B0]) = STACK[0x1598];
  LODWORD(STACK[0x1760]) = STACK[0x1638];
  LODWORD(STACK[0x15C0]) = STACK[0x1428];
  STACK[0xE10] = LODWORD(STACK[0x1834]);
  LODWORD(STACK[0x13F8]) = STACK[0x1088];
  LODWORD(STACK[0x1798]) = STACK[0x10B8];
  STACK[0xC58] = 8;
  return v446(LODWORD(STACK[0xE4C]), 1073906762, 2281701376, 1627406338, 20971520, 173, 306315937, LODWORD(STACK[0xE3C]));
}

uint64_t sub_1003211FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;

  v8 = (((a4 ^ 0xF48641A) - 256402458) ^ ((a4 ^ 0xC85332CC) + 934071604) ^ ((a4 ^ 0x4A36C2B1) - 1245102769))
     - 1874531271;
  v9 = (v8 ^ 0xFCC60C8F) & (2 * (v8 & 0xFCE8A82F)) ^ v8 & 0xFCE8A82F;
  v10 = ((2 * (v8 ^ 0x65565CDB)) ^ 0x337DE9E8) & (v8 ^ 0x65565CDB) ^ (2 * (v8 ^ 0x65565CDB)) & v7;
  v11 = v10 ^ 0x88821414;
  v12 = (v10 ^ 0x1124E0E0) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0x66FBD3D0) & v11 ^ (4 * v11) & v7;
  v14 = v13 ^ 0x99042424;
  v15 = (v13 ^ 0xBAD0D0) & (16 * v12) ^ v12;
  v16 = ((16 * v14) ^ 0x9BEF4F40) & v14 ^ (16 * v14) & (v7 - 4);
  v17 = v15 ^ v7 ^ (v16 ^ 0x99AE4400) & (v15 << 8);
  v18 = v8 ^ (2
            * ((v17 << 16) & v5 ^ v17 ^ ((v17 << 16) ^ 0x74F40000) & (((v16 ^ 0x10B0B4) << 8) & v5 ^ 0x10A0000 ^ (((v16 ^ 0x10B0B4) << 8) ^ 0xBEF40000) & (v16 ^ 0x10B0B4))));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                        + 8
                                        * ((25
                                          * ((((v18 ^ 0x5817CF24) - 1002904196) ^ ((v18 ^ 0x93127E56) + 255677450) ^ ((v18 ^ 0x25F8F0B5) - 1177036053))
                                           + v6 < 0x10)) ^ v4))
                            - 8))();
}

uint64_t sub_1003218D0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  char v3;
  int v4;
  char v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  int v105;
  unint64_t v106;
  unint64_t v107;
  char v108;

  v9 = v1 + 1967045267;
  v10 = ((v4 & 0x208AEDA6 ^ v9 ^ 0x157341B8)
       + (v4 & 0xAE900 ^ 0x95126310)
       - ((v4 & 0x208AEDA6 ^ v9 ^ 0x157341B8) & 0x4AF901)) ^ 0xFC9D050C;
  v11 = (v4 ^ 0xEEEB76D2)
      - ((((572332037 - v2) & 0x208AEDA6) + 527766106 + ((((2 * v10) | 0x36697896) - v10 + 80430005) ^ 0x1234BE53)) | 0xCE3DDDDB);
  v12 = v11 + (v11 >> 12) - ((v11 + (v11 >> 12)) >> 5);
  v13 = v12 + 2144261783 - ((v12 + 2144261783) >> 12) + ((v12 + 2144261783 - ((v12 + 2144261783) >> 12)) >> 4);
  v14 = v13 + 311500681 - ((v13 + 311500681) >> 13) + ((v13 + 311500681 - ((v13 + 311500681) >> 13)) >> 7);
  v15 = v14 + 501407760 + ((v14 + 501407760) >> 11) - ((v14 + 501407760 + ((v14 + 501407760) >> 11)) >> 5);
  v16 = v15 + v7 - ((2 * v15) & 0x1A5B28CE);
  v17 = (v16 ^ v7) - (((v14 + 501407760) & 0xEC239671) + ((-501407761 - v14) & 0xEC239671));
  v18 = (v12 + v7 - ((2 * v12) & 0x1A5B28CE)) ^ v6 ^ v16;
  v19 = v17 + (v17 >> 11) + v7 - ((2 * (v17 + (v17 >> 11))) & 0x1A5B28CE);
  v20 = (v19 ^ v7) + ((v19 >> 2) ^ 0xDCB49AE6) + 1;
  v21 = (v20 ^ 0x9E8E0640) - ((v20 ^ 0x9E8E0640) >> 10) + (((v20 ^ 0x9E8E0640) - ((v20 ^ 0x9E8E0640) >> 10)) >> 6);
  v22 = v21 + 296122201 - ((v21 + 296122201) >> 8) - ((v21 + 296122201 - ((v21 + 296122201) >> 8)) >> 6);
  v23 = (v22 - 74025838) ^ 0xFD1FE69E;
  v24 = (2 * ((v22 - 74025838) & 0xA104C8A8)) & v23 ^ (v22 - 74025838) & 0xA104C8A8 ^ ((2
                                                                                      * ((v22 - 74025838) & 0xA104C8A8)) & 0x40090010 | 0x10000804);
  v25 = (2 * v23) & 0x5C1B2E36 ^ 0x44092212 ^ ((2 * v23) ^ 0xB8365C6C) & v23;
  v26 = (4 * v24) & 0x5C1B2E30 ^ v24 ^ ((4 * v24) ^ 0x40002010) & v25;
  v27 = (4 * v25) & 0x5C1B2E34 ^ 0xC130626 ^ ((4 * v25) ^ 0x706CB8D8) & v25;
  v28 = (16 * v26) & 0x5C1B2E30 ^ v26 ^ ((16 * v26) ^ 0x28140) & v27;
  v29 = (16 * v27) & 0x5C1B2E30 ^ 0x1C090C16 ^ ((16 * v27) ^ 0xC1B2E360) & v27;
  v30 = v28 ^ (v28 << 8) & 0x5C1B2E00 ^ ((v28 << 8) ^ 0x2281400) & v29 ^ 0xC110222;
  v31 = (v22 - 74025838) ^ (2
                          * ((v30 << 16) & 0x5C1B0000 ^ v30 ^ ((v30 << 16) ^ 0x2E360000) & ((v29 << 8) & 0x5C1B0000 ^ 0x44110000 ^ ((v29 << 8) ^ 0x1B2E0000) & v29)));
  v32 = ((v31 >> 11) ^ 0x22D2) + (v31 ^ 0x11694C4) + ((((v31 >> 11) ^ 0x22D2) + (v31 ^ 0x11694C4)) >> 4);
  v33 = v18 ^ v22;
  v34 = (v14 + v7 - ((2 * v14) & 0x1A5B28CE)) ^ v8 ^ v21 ^ (v32
                                                          - 252813648
                                                          + ((v32 - 252813648) >> 12)
                                                          - ((v32 - 252813648 + ((v32 - 252813648) >> 12)) >> 8));
  v35 = 16843009
      * ((((v18 ^ v22) & 0xFE ^ 0x8200CE8)
        - ((2 * ((v18 ^ v22) & 0xFE ^ 0x8200CE8)) & 0x401950)
        + 1936579752) ^ 0x7B4DD0E0)
      + 1484164123;
  v36 = (v35 ^ 0xA7E473F0) & (2 * (v35 & 0xA78973E5)) ^ v35 & 0xA78973E5;
  v37 = ((2 * (v35 ^ 0xECE4B5B2)) ^ 0x96DB8CAE) & (v35 ^ 0xECE4B5B2) ^ (2 * (v35 ^ 0xECE4B5B2)) & 0x4B6DC656;
  v38 = v37 ^ 0x49244251;
  v39 = (v37 ^ 0x2498404) & (4 * v36) ^ v36;
  v40 = ((4 * v38) ^ 0x2DB7195C) & v38 ^ (4 * v38) & 0x4B6DC654;
  v41 = (v40 ^ 0x9250050) & (16 * v39) ^ v39;
  v42 = ((16 * (v40 ^ 0x4248C603)) ^ 0xB6DC6570) & (v40 ^ 0x4248C603) ^ (16 * (v40 ^ 0x4248C603)) & 0x4B6DC650;
  v43 = v41 ^ 0x4B6DC657 ^ (v42 ^ 0x24C4400) & (v41 << 8);
  v44 = v35 ^ (2
             * ((v43 << 16) & 0x4B6D0000 ^ v43 ^ ((v43 << 16) ^ 0x46570000) & (((v42 ^ 0x49218207) << 8) & 0x4B6D0000 ^ 0x2290000 ^ (((v42 ^ 0x49218207) << 8) ^ 0x6DC60000) & (v42 ^ 0x49218207))));
  LODWORD(STACK[0x1858]) = v34;
  v45 = (v34 & 7 ^ 0x1022001) - 388049944 + ((2 * (v34 & 7)) ^ 0xFFFBFFFD);
  v46 = v45 ^ 0x64F16787;
  LODWORD(STACK[0x1870]) = v45;
  LOBYTE(v43) = -80 - (((v45 ^ 0x35) + 78) ^ ((v45 ^ 0x9A) - 29) ^ ((v45 ^ 0x4F) + 56));
  v47 = v43 & 7 ^ (2 * (((2 * (v43 & 1)) | 1) & v43));
  v48 = STACK[0x147C];
  LODWORD(STACK[0x1848]) = v47;
  v49 = v47 ^ v48;
  if ((v45 ^ 0x64F16787) == v7)
    v50 = 0;
  else
    v50 = 255;
  LODWORD(STACK[0x1800]) = v49;
  v51 = v50 << (v49 & 0xD ^ 5) << (v49 & 0x12 ^ 2);
  v52 = 16843009 * v51 + 1360287383;
  v53 = (v52 ^ 0x8CEB2448) & (2 * (v52 & 0xAEEBA969)) ^ v52 & 0xAEEBA969;
  v54 = ((2 * (v52 ^ 0xCD683618)) ^ 0xC7073EE2) & (v52 ^ 0xCD683618) ^ (2 * (v52 ^ 0xCD683618)) & 0x63839F70;
  v55 = v54 ^ 0x20808111;
  v56 = (v54 ^ 0x43030E71) & (4 * v53) ^ v53;
  v57 = ((4 * v55) ^ 0x8E0E7DC4) & v55 ^ (4 * v55) & 0x63839F70;
  v58 = (v57 ^ 0x2021D40) & (16 * v56) ^ v56;
  v59 = ((16 * (v57 ^ 0x61818231)) ^ 0x3839F710) & (v57 ^ 0x61818231) ^ (16 * (v57 ^ 0x61818231)) & 0x63839F70;
  v60 = v58 ^ 0x63839F71 ^ (v59 ^ 0x20019761) & (v58 << 8);
  v61 = v52 ^ (2
             * ((v60 << 16) & 0x63830000 ^ v60 ^ ((v60 << 16) ^ 0x1F710000) & (((v59 ^ 0x43820861) << 8) & 0x63830000 ^ (((v59 ^ 0x43820861) << 8) ^ 0x39F0000) & (v59 ^ 0x43820861) ^ 0x60000000)));
  LODWORD(STACK[0x1890]) = v61;
  LODWORD(STACK[0x1820]) = v46;
  v62 = (2 * v13) & 0x1A5B28CE;
  v63 = v13 + v7;
  v64 = (((v3 & 0xB2) + (v5 & 0xB2 ^ 0x10)) ^ 0xA9 ^ (((v3 & 0xE2)
                                                                                       + (v3 & 0xE2 ^ 0xE2)
                                                                                       + (((v51 - 105) ^ (2 * v60)) & 0xA0 ^ 0x78)
                                                                                       + (((v61 & 0xA0 ^ 0x80)
                                                                                         - 2 * (v61 & 0xA0)
                                                                                         - 90) & 0xE0 ^ 0xA0)
                                                                                       + 35)
                                                                                      * ~(_BYTE)v51))
      + 781660055;
  v65 = v64 & 0x2ACF ^ 0xB2D5501D ^ (v64 ^ 0x63BF6ACE) & (2 * (v64 & 0x2ACF));
  v66 = ((2 * (v64 ^ 0x63BF3AD2)) ^ 0x4528003A) & (v64 ^ 0x63BF3AD2) ^ (2 * (v64 ^ 0x63BF3AD2)) & 0x200101C;
  v67 = v66 & 0x49200C90 ^ v65 ^ ((4 * v65) ^ 0x1228CCE4) & (v66 ^ 0xB0D40019);
  v68 = ((4 * v66) ^ 0x1A218CF0) & (v66 ^ 0xB0D40019) ^ v66 & 0x49200C90;
  v69 = v68 & 0xD9718C90 ^ v67 ^ ((16 * v67) ^ 0xF1148C40) & (v68 ^ 0x9050001D);
  v70 = ((16 * v68) ^ 0xDC718D90) & (v68 ^ 0x9050001D) ^ v68 & 0xD9718C90;
  v71 = v69 ^ v70 & 0xD9718C90 ^ ((v69 << 8) ^ 0xF219190) & (v70 ^ 0x9050001D);
  v72 = ((v70 << 8) ^ 0x89719C90) & (v70 ^ 0x9050001D) ^ v70 & 0xD9718C90;
  v73 = *(unsigned __int8 *)(STACK[0x18B8]
                           + (v64 ^ (2
                                   * (v71 ^ v72 & 0x59718C90 ^ ((v71 << 16) ^ 0x897C8C90) & (v72 ^ 0x22860000) ^ ((v71 << 16) ^ 0x897C8C90) & 0x32D60010)) ^ 0xB4C5CAF5));
  LODWORD(STACK[0x1868]) = v44;
  v74 = v73 ^ ((((((2 * (v44 & 0xAC ^ 0x6D)) & 0x3E) - (v44 & 0xAC ^ 0x6D) + 96) ^ 0xAA | v44 & 0xAA ^ 8) & (v73 ^ 0xA0) & 0xF8) >> 3);
  v75 = ((v74 >> 2) | (v74 << 6)) ^ 0x16;
  if (v46 == v7)
    v75 = 0;
  v76 = (v63 - v62) ^ a1 ^ v20 ^ v32;
  LODWORD(STACK[0x1840]) = ((2 * ((520093696 * v51) & v76 ^ 0x20442800)) & 0xB4805000)
                         - ((520093696 * v51) & v76 ^ 0x20442800)
                         - 1515269892;
  LODWORD(STACK[0x1838]) = v75 & (v33 ^ 0x67);
  STACK[0x16B8] = v33;
  v77 = (v33 ^ BYTE2(v33) ^ ((BYTE1(v33) ^ 0x85)
                                            - 2 * ((BYTE1(v33) ^ 0x85) & 0x6F ^ BYTE1(v33) & 8)
                                            + 103)) ^ ((BYTE3(v33) ^ 0x2E) + v7 - ((2 * (BYTE3(v33) ^ 0x2E)) & 0xCE));
  v78 = 16843009
      * (((v77 ^ 0x170FAA93) - 386902585) ^ ((v77 ^ 0x7900B2C3) - 2030088809) ^ ((v77 ^ 0xE3228C9D) + 484275145))
      + 896533847;
  LODWORD(STACK[0x1828]) = v78;
  v79 = (v78 ^ 0x463AE75B) & (2 * (v78 & 0x80B8F610)) ^ v78 & 0x80B8F610;
  v80 = ((2 * (v78 ^ 0x460A0F7B)) ^ 0x8D65F2D6) & (v78 ^ 0x460A0F7B) ^ (2 * (v78 ^ 0x460A0F7B)) & 0xC6B2F96A;
  v81 = v80 ^ 0x42920929;
  v82 = (v80 ^ 0x4430F168) & (4 * v79) ^ v79;
  v83 = ((4 * v81) ^ 0x1ACBE5AC) & v81 ^ (4 * v81) & 0xC6B2F968;
  v84 = (v83 ^ 0x282E120) & (16 * v82) ^ v82;
  v85 = ((16 * (v83 ^ 0xC4301843)) ^ 0x6B2F96B0) & (v83 ^ 0xC4301843) ^ (16 * (v83 ^ 0xC4301843)) & 0xC6B2F960;
  v86 = v84 ^ 0xC6B2F96B ^ (v85 ^ 0x42229000) & (v84 << 8);
  LODWORD(STACK[0x1818]) = 2
                         * ((v86 << 16) & 0x46B20000 ^ v86 ^ ((v86 << 16) ^ 0x796B0000) & (((v85 ^ 0x8490694B) << 8) & 0x46B20000 ^ 0x44020000 ^ (((v85 ^ 0x8490694B) << 8) ^ 0x32F90000) & (v85 ^ 0x8490694B)));
  LODWORD(STACK[0x1898]) = v76;
  v87 = v76 ^ ((v76 ^ 0xA1EB0E5A) >> 8) ^ ((v76 ^ 0xA1EB0E5A) >> 16) ^ 0xDAD88FD7;
  v88 = (((2 * (v87 & 0x4FF6B9E7)) | 0x1C74CC6A) - (v87 & 0x4FF6B9E7) - 238708277) ^ v87 & 0x4FF6B918;
  v89 = ((v88 & 0x50A4A8C5 ^ 0x10A40845) + (v88 & 0xAF5B573A ^ 0x5084731) - 1) ^ ((v76 ^ 0xA1EB0E5A) >> 24);
  v90 = 16843009
      * (((v89 ^ 0xDCDFF2A7) - 1248087968) ^ ((v89 ^ 0x43C25C9D) + 713432678) ^ ((v89 ^ 0x848B875A) - 305150557))
      - 1017884846;
  v91 = (v90 ^ 0xE0C4AD45) & (2 * (v90 & 0xF2D4AC15)) ^ v90 & 0xF2D4AC15;
  v92 = ((2 * (v90 ^ 0x85CCB547)) ^ 0xEE3032A4) & (v90 ^ 0x85CCB547) ^ (2 * (v90 ^ 0x85CCB547)) & 0x77181952;
  v93 = v92 ^ 0x11080952;
  v94 = (v92 ^ 0x46181902) & (4 * v91) ^ v91;
  v95 = ((4 * v93) ^ 0xDC606548) & v93 ^ (4 * v93) & 0x77181950;
  v96 = (v95 ^ 0x54000142) & (16 * v94) ^ v94;
  v97 = ((16 * (v95 ^ 0x23181812)) ^ 0x71819520) & (v95 ^ 0x23181812) ^ (16 * (v95 ^ 0x23181812)) & 0x77181950;
  v98 = v96 ^ 0x77181952 ^ (v97 ^ 0x71001100) & (v96 << 8);
  v99 = STACK[0x18B0];
  v100 = 1772489163 * ((1772489163 * ((_DWORD)v99 + 7)) ^ ((1772489163 * (v99 + 7)) >> 16));
  v101 = STACK[0xDE0];
  v102 = STACK[0xDD0];
  LOBYTE(v93) = (109 * BYTE3(v100)) ^ (-53 * ((-53 * (v99 + 7)) ^ ((1772489163 * (v99 + 7)) >> 16))) ^ *(_BYTE *)(v99 - 0x3032385379A144DFLL) ^ *(_BYTE *)(STACK[0xDD8] + (v100 >> 24)) ^ *(_BYTE *)(STACK[0xDE0] + (v100 >> 24)) ^ *(_BYTE *)((v100 >> 24) + STACK[0xDD0] + 1);
  v103 = STACK[0x18B0]
       + ((((((v93 ^ 0xAA) + 6) ^ ((v93 ^ 0xC) + 4)) ^ ((v93 ^ 6) + 10)) + 5) & 0xF);
  LOBYTE(v100) = *(_BYTE *)(v103 - 0x3032385379A144E6);
  v104 = 1772489163 * ((1772489163 * (_DWORD)v103) ^ ((1772489163 * v103) >> 16));
  v105 = (v98 << 16) & 0x77180000 ^ v98 ^ ((v98 << 16) ^ 0x19520000) & (((v97 ^ 0x6180852) << 8) & 0x77180000 ^ 0x67000000 ^ (((v97 ^ 0x6180852) << 8) ^ 0x18190000) & (v97 ^ 0x6180852));
  LOBYTE(v97) = *(_BYTE *)(STACK[0xDD8] + (v104 >> 24)) ^ v100 ^ *(_BYTE *)(STACK[0xDE0] + (v104 >> 24)) ^ *(_BYTE *)((v104 >> 24) + STACK[0xDD0] + 1) ^ v104 ^ (109 * BYTE3(v104));
  v106 = STACK[0x18B0]
       + ((((((v97 ^ 6) + 5) ^ ((v97 ^ 0x55) + 8)) ^ ((v97 ^ 3) + 2)) + 14) & 0xF);
  LOBYTE(v104) = *(_BYTE *)(v106 - 0x3032385379A144E6);
  v107 = 1772489163 * ((1772489163 * (_DWORD)v106) ^ ((1772489163 * v106) >> 16));
  v108 = *(_BYTE *)(STACK[0xDD8] + (v107 >> 24));
  LODWORD(STACK[0x18A8]) = v90 ^ (2 * v105);
  LOBYTE(v90) = v108 ^ v104 ^ *(_BYTE *)(v101 + (v107 >> 24)) ^ *(_BYTE *)((v107 >> 24) + v102 + 1) ^ v107 ^ (109 * BYTE3(v107));
  STACK[0xE10] = (((v90 ^ (14 - v90) ^ ((v90 ^ 1) + 1)) ^ 0xE) + 7) & 0xF;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0]
                                                                               + 8
                                                                               * (int)(v9 ^ 0x753EEB76 ^ (27784 * (v9 > 0x46F443C2))))
                                                                   - 12))(634060800, LODWORD(STACK[0x1650]) ^ 0xBDBECBB0, 2368574567, LODWORD(STACK[0x1418]) ^ 0x99AD885C);
}

uint64_t sub_1003229FC(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  _BOOL4 v20;

  v9 = (((a3 ^ 0x31C49BA4) - 834968484) ^ ((a3 ^ 0xECAC5C24) + 324248540) ^ ((a3 ^ 0x504553E7) - 1346720743))
     - 1009602250;
  v10 = (v9 ^ 0x8C50EA33) & (2 * (v9 & 0xC95AE332)) ^ v9 & 0xC95AE332;
  v11 = ((2 * (v9 ^ 0x1EC12E13)) ^ 0xAF379A42) & (v9 ^ 0x1EC12E13) ^ (2 * (v9 ^ 0x1EC12E13)) & v6;
  v12 = v11 ^ 0x50884521;
  v13 = (v11 ^ 0x7138800) & (4 * v10) ^ v10;
  v14 = ((4 * v12) ^ 0x5E6F3484) & v12 ^ (4 * v12) & v6;
  v15 = ((16 * (v14 ^ 0x8190C921)) ^ 0x79BCD210) & (v14 ^ 0x8190C921) ^ (16 * (v14 ^ 0x8190C921)) & v6;
  v16 = (v14 ^ 0x560B0400) & (16 * v13) ^ v13 ^ (v6 + 1) ^ (v15 ^ v8) & (((v14 ^ 0x560B0400) & (16 * v13) ^ v13) << 8);
  v17 = v9 ^ (2
            * ((v16 << 16) & 0x579B0000 ^ v16 ^ ((v16 << 16) ^ 0x4D210000) & (((v15 ^ 0x86030D21) << 8) & 0xD79B0000 ^ 0x44120000 ^ (((v15 ^ 0x86030D21) << 8) ^ v4) & (v15 ^ 0x86030D21))));
  v18 = (((v17 ^ 0x2106F601) - 1078205206) ^ ((v17 ^ 0x5536096E) - 880075897) ^ ((v17 ^ 0x985F861F) + 115512568))
      - 1160468540;
  v20 = v18 < v7 || v18 >= v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((53 * v20) ^ v5)) - 12))();
}

uint64_t sub_100322E88()
{
  int v0;
  int v1;

  LODWORD(STACK[0x1808]) = LODWORD(STACK[0x1898]) ^ v1;
  LODWORD(STACK[0x16C0]) = LODWORD(STACK[0x1868]) ^ 0x38F56B2C;
  LODWORD(STACK[0x1810]) = LODWORD(STACK[0x1838]);
  LODWORD(STACK[0x1818]) ^= LODWORD(STACK[0x1828]);
  LODWORD(STACK[0x17F0]) = LODWORD(STACK[0x18A8]) ^ 0x1E44A77B;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v0 ^ 0x404A)) - 12))();
}

uint64_t sub_100322F38(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v12 = (((a3 ^ 0x270A776C) - 654997356) ^ ((a3 ^ 0x12934B60) - 311642976) ^ ((a3 ^ 0xB8B4A86B) + 1196119957))
      - 653007481;
  v13 = (v12 ^ 0xA3912EE4) & (2 * (v12 & 0xB419AEE1)) ^ v12 & 0xB419AEE1;
  v14 = ((2 * (v12 ^ 0xA3A37A24)) ^ 0x2F75A98A) & (v12 ^ 0xA3A37A24) ^ (2 * (v12 ^ 0xA3A37A24)) & v9;
  v15 = v14 ^ 0x108A5445;
  v16 = (v14 ^ 0x2080C1) & (4 * v13) ^ v13;
  v17 = ((4 * v15) ^ 0x5EEB5314) & v15 ^ (4 * v15) & v9;
  v18 = ((16 * (v17 ^ 0x11084C1)) ^ 0x7BAD4C50) & (v17 ^ 0x11084C1) ^ (16 * (v17 ^ 0x11084C1)) & (v9 - 4);
  v19 = (v17 ^ 0x16AA5000) & (16 * v16) ^ v16 ^ (v9 + 1) ^ (v18 ^ (v8 + 2504)) & (((v17 ^ 0x16AA5000) & (16 * v16) ^ v16) << 8);
  v20 = v12 ^ (2
             * ((v19 << 16) & v7 ^ v19 ^ ((v19 << 16) ^ 0x54C50000) & (((v18 ^ 0x4129085) << 8) & v7 ^ 0x52A0000 ^ (((v18 ^ 0x4129085) << 8) ^ v11) & (v18 ^ 0x4129085))));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                        + 8
                                        * ((15411
                                          * ((((v20 ^ 0xD8A5BD0E) + 404476414) ^ ((v20 ^ 0x5B2C3FC5) - 1684909257) ^ ((v20 ^ 0x31E585A0) - 245634732))
                                           + v10 > 0xF)) ^ a7))
                            - 12))();
}

uint64_t sub_1003233C8(int a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned __int8 v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  unint64_t v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  unint64_t v166;
  int v167;

  v8 = a1
     - 1885009377
     + ((a1 - 1885009377) >> 12)
     - ((a1 - 1885009377 + ((a1 - 1885009377) >> 12)) >> 5);
  v9 = v8 + 2144261783 - ((v8 + 2144261783) >> 12) + ((v8 + 2144261783 - ((v8 + 2144261783) >> 12)) >> 4);
  v10 = v9 + 311500681 - ((v9 + 311500681) >> 13) + ((v9 + 311500681 - ((v9 + 311500681) >> 13)) >> 7);
  LODWORD(STACK[0x17C0]) = v6;
  v11 = STACK[0x1890];
  LODWORD(STACK[0x1838]) = LODWORD(STACK[0x1840]) ^ LODWORD(STACK[0x1890]);
  LODWORD(STACK[0x1810]) ^= v11;
  v12 = STACK[0x1818];
  v13 = LODWORD(STACK[0x18A8]) ^ LODWORD(STACK[0x1818]);
  LODWORD(STACK[0x1828]) = v6 ^ 0x3230;
  LODWORD(STACK[0x1890]) = ((v6 ^ 0x3230) + 1776133610) ^ v12;
  v14 = v10 + 501407760 + ((v10 + 501407760) >> 11) - ((v10 + 501407760 + ((v10 + 501407760) >> 11)) >> 5);
  v15 = v14 + 333212047 + ((v14 + 333212047) >> 11) - ((v14 + 333212047 + ((v14 + 333212047) >> 11)) >> 2);
  v16 = v7 + v15 - ((2 * v15) & 0x1A5B28CE);
  v17 = (v16 ^ 0x13A39227) - ((v16 ^ 0x13A39227u) >> 10) + (((v16 ^ 0x13A39227) - ((v16 ^ 0x13A39227u) >> 10)) >> 6);
  v18 = (v17 + 296122201) >> 8;
  v19 = v17 + 296122201 - v18 - ((v17 + 296122201 - v18) >> 6);
  v20 = v19 - 1667547846 + ((v19 - 1667547846) >> 11) + ((v19 - 1667547846 + ((v19 - 1667547846) >> 11)) >> 4);
  v21 = ((v20 - 252813648) >> ((v18 & 0xC ^ 0xC) + (v18 & 0xC))) + v20 - 252813648;
  v22 = a6 ^ v10 ^ v17 ^ (v21 - (v21 >> 8) + v7 - ((2 * (v21 - (v21 >> 8))) & 0x1A5B28CE));
  LODWORD(STACK[0x17D8]) = v22;
  v23 = (-1060787804 - (v22 & 7 ^ 5 | 0xC0C5A9A4) + (v22 & 7 ^ 5 | 0x3F3A565B)) ^ 0x37364B18;
  v24 = ((1 - ((((v22 ^ 2) + 5) ^ (1 - v22)) ^ ((v22 ^ 3) + 6))) & 2 | 0xA7F7757D)
      - ((1 - ((((v22 ^ 2) + 5) ^ (1 - v22)) ^ ((v22 ^ 3) + 6))) & 5);
  v25 = (v9 + v7 - ((2 * v9) & 0x1A5B28CE)) ^ a2;
  v26 = v25 + v7 - ((2 * v25) & 0x1A5B28CE);
  v27 = ((2 * v23) | 0x640344C2) - v23 - 838967905;
  v28 = v27 ^ 0xB7202B46;
  v29 = v27;
  if ((v27 ^ 0xB7202B46) == v7)
    v30 = 0;
  else
    v30 = 255;
  v31 = v30 << (~(_BYTE)v24 & 5) << (v24 & 2);
  v32 = v16 ^ v26 ^ v20;
  v33 = 16843009 * v31;
  LODWORD(STACK[0x1720]) = v33 ^ 0xC190ABAB ^ (((2 * ((687865856 * v31) & v32 ^ 0x8656A904)) & 0x94850000)
                                             - ((687865856 * v31) & v32 ^ 0x8656A904)
                                             + 890530103);
  v34 = (v8 + v7 - ((2 * v8) & 0x1A5B28CE)) ^ a4 ^ v14 ^ v19;
  v35 = 16843009
      * (((v34 & 0xFE ^ 0x10500E7E) - ((2 * (v34 & 0xFE ^ 0x10500E7E)) & 0x208015A8) + 1959730133) ^ 0x649F15C5)
      - 1054091246;
  v36 = (v35 ^ 0xBCD297CE) & (2 * (v35 & 0x3ED427EE)) ^ v35 & 0x3ED427EE;
  v37 = ((2 * (v35 ^ 0xE05A9E8E)) ^ 0xBD1D72C0) & (v35 ^ 0xE05A9E8E) ^ (2 * (v35 ^ 0xE05A9E8E)) & 0xDE8EB960;
  v38 = (v37 ^ 0x9C003040) & (4 * v36) ^ v36;
  v39 = ((4 * (v37 ^ 0x42828920)) ^ 0x7A3AE580) & (v37 ^ 0x42828920) ^ (4 * (v37 ^ 0x42828920)) & 0xDE8EB960;
  v40 = (v39 ^ 0x5A0AA100) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x84841860)) ^ 0xE8EB9600) & (v39 ^ 0x84841860) ^ (16 * (v39 ^ 0x84841860)) & 0xDE8EB960;
  v42 = v40 ^ 0xDE8EB960 ^ (v41 ^ 0xC88A9000) & (v40 << 8);
  v43 = v35 ^ (2
             * ((v42 << 16) & 0x5E8E0000 ^ v42 ^ ((v42 << 16) ^ 0x39600000) & (((v41 ^ 0x16042960) << 8) & 0x5E8E0000 ^ 0x50060000 ^ (((v41 ^ 0x16042960) << 8) ^ 0xEB90000) & (v41 ^ 0x16042960))));
  v44 = v31 ^ 0xFACC6710;
  if (v28 == v7)
    v44 = 87267567;
  v45 = v44 & 0x24 ^ (v44 ^ 0xFFFFFFEF) & (v34 ^ 0x24) ^ v33;
  v46 = (v45 & 0x4202001A ^ 0x72BE581B) - (v45 & 0x4202001A) + (v45 & 0xC64226DE ^ 0x2204);
  v47 = (v46 & 0xDB5C0524 ^ 0xCB410504) + (v46 ^ 0x10BE106B) - ((v46 ^ 0x10BE106B) & 0xDB5C0524);
  v48 = (((LODWORD(STACK[0x16F8]) ^ 0xA64D0996) + 1504900714) ^ ((LODWORD(STACK[0x16F8]) ^ 0x9234FD29) + 1842021079) ^ ((LODWORD(STACK[0x16F8]) ^ 0xB95460D8) + 1185652520))
      - (((v45 ^ 0x8FC58B04) - 48766791) ^ ((v45 ^ 0x9E575514) - 326811991) ^ ((v45 ^ 0x1192DE34) + 1665185161))
      + 1305017302;
  v49 = (v48 ^ 0x3AA60283) & (2 * (v48 & 0xB237042A)) ^ v48 & 0xB237042A;
  v50 = ((2 * (v48 ^ 0x7A8802D7)) ^ 0x917E0DFA) & (v48 ^ 0x7A8802D7) ^ (2 * (v48 ^ 0x7A8802D7)) & 0xC8BF06FC;
  v51 = (v50 ^ 0x803C00F8) & (4 * v49) ^ v49;
  v52 = ((4 * (v50 ^ 0x48810205)) ^ 0x22FC1BF4) & (v50 ^ 0x48810205) ^ (4 * (v50 ^ 0x48810205)) & 0xC8BF06FC;
  v53 = (v52 ^ 0xBC02E0) & (16 * v51) ^ v51;
  v54 = ((16 * (v52 ^ 0xC8030409)) ^ 0x8BF06FD0) & (v52 ^ 0xC8030409) ^ (16 * (v52 ^ 0xC8030409)) & 0xC8BF06F0;
  v55 = v53 ^ 0xC8BF06FD ^ (v54 ^ 0x88B0062D) & (v53 << 8);
  v56 = v34;
  LODWORD(STACK[0x16C8]) = v34;
  v57 = v34 ^ BYTE2(v34) ^ ((BYTE1(v34) ^ 0x11) - ((2 * (BYTE1(v34) ^ 0x11)) & 0xCF) + 103);
  LODWORD(STACK[0x1730]) = v45 ^ (v7 - 36);
  v58 = v47 & 0x8C25C7AC ^ 0x825838C ^ (v47 ^ 0x80E0B675) & (v45 ^ 0x8C25C788);
  LODWORD(STACK[0x1768]) = (v48 ^ (2
                                 * ((v55 << 16) & 0x48BF0000 ^ v55 ^ ((v55 << 16) ^ 0x6FD0000) & (((v54 ^ 0x400F002D) << 8) & 0xC8BF0000 ^ 0x40B90000 ^ (((v54 ^ 0x400F002D) << 8) ^ 0x3F060000) & (v54 ^ 0x400F002D)))) ^ 0x223309D0)
                         + ((((2 * v58) | 0x1A6A7AC4) - v58 + 1925890718) ^ 0x53038CA);
  STACK[0x1840] = v43 ^ 0x3EE4C149;
  v59 = 0xFF00FF00FF0100
      * (((v43 ^ 0x691D121C72FF771ELL) - 0x691D121C4C1BB657) ^ ((v43 ^ 0x52786D5EC717E9A4) - 0x52786D5EF9F328EDLL) ^ ((v43 ^ 0x3B657F420621CB94) - 0x3B657F4238C50ADDLL))
      - 0x4517C7C296B42FA7;
  v60 = (v59 ^ 0x34A0BA4F46E98598) & (2 * (v59 & 0xB8A43B4F96E19600)) ^ v59 & 0xB8A43B4F96E19600;
  v61 = (2 * (v59 ^ 0x44A8DEDE476AA998)) & 0xFC0CE591D18B3E00 ^ 0x404249050890003 ^ ((2
                                                                                          * (v59 ^ 0x44A8DEDE476AA998)) ^ 0xF819CB23A3167E40) & (v59 ^ 0x44A8DEDE476AA998);
  v62 = (4 * v60) & 0xE400E510D18A3800 ^ v60 ^ ((4 * v60) | 0xC) & v61;
  v63 = (4 * v61) & 0xFC0CE591D18B3F3CLL ^ 0xC0C619091830303 ^ ((4 * v61) ^ 0xF0339647462CFCFCLL) & v61;
  v64 = (16 * v62) & 0xFC0CE591D18B3F30 ^ v62 ^ ((16 * v62) ^ 0xF0) & v63;
  v65 = (16 * v63) & 0xFC0CE591D18B3F30 ^ 0x3C00A480C1080C0FLL ^ ((16 * v63) ^ 0xC0CE591D18B3F3F0) & v63;
  v66 = (v64 << 8) & 0xFC0CE591D18B3F00 ^ v64 ^ ((v64 << 8) ^ 0x3F00) & v65;
  v67 = (v65 << 8) & 0xFC0CE591D18B3F00 ^ 0xF00864005080003FLL ^ ((v65 << 8) ^ 0xCE591D18B3F3F00) & v65;
  v68 = v66 ^ (v66 << 16) & 0xFC0CE591D18B0000 ^ ((v66 << 16) ^ 0x3F3F0000) & v67;
  v69 = v59 ^ (2
             * (((v68 ^ 0xFC0CE591C0800000) << 32) & 0x7C0CE59100000000 ^ v68 ^ 0xFC0CE591C0800000 ^ (((v68 ^ 0xFC0CE591C0800000) << 32) ^ 0x518B3F3F00000000) & ((v67 << 16) & 0x7C0CE59100000000 ^ 0x180C241000000000 ^ ((v67 << 16) ^ 0x6591D18B00000000) & v67)));
  v70 = ((v69 ^ 0xF6D5758C25FDC3C3) - 0x45EE09189EB549C7) ^ ((v69 ^ 0xA2EF460A77AE6458) - 0x11D43A9ECCE6EE5CLL);
  LODWORD(v69) = __CFADD__(257 * (v70 ^ ((v69 ^ 0xB49789C867A44F42) - 0x7ACF55CDCECC546)), 0xEA5DA1694E223FDDLL)
               + (((v70 ^ ((v69 ^ 0xB49789C867A44F42) - 0x7ACF55CDCECC546)) * (unsigned __int128)0x101uLL) >> 64)
               + 257
               * ((__CFADD__(v69 ^ 0xF6D5758C25FDC3C3, 0xBA11F6E7614AB639) - 1) ^ (__CFADD__(v69 ^ 0xA2EF460A77AE6458, 0xEE2BC561331911A4)- 1) ^ (__CFADD__(v69 ^ 0xB49789C867A44F42, 0xF8530AA323133ABALL)- 1))+ 1789167626;
  LODWORD(v70) = (v69 ^ 0x401B7A24) & (2 * (v69 & 0x955B7849)) ^ v69 & 0x955B7849;
  LODWORD(v67) = ((2 * (v69 ^ 0x4ABB6AB6)) ^ 0xBFC025FE) & (v69 ^ 0x4ABB6AB6) ^ (2 * (v69 ^ 0x4ABB6AB6)) & 0xDFE012FE;
  LODWORD(v70) = (v67 ^ 0x9FC0106D) & (4 * v70) ^ v70;
  LODWORD(v67) = ((4 * (v67 ^ 0x40201201)) ^ 0x7F804BFC) & (v67 ^ 0x40201201) ^ (4 * (v67 ^ 0x40201201)) & 0xDFE012FC;
  LODWORD(v70) = (v67 ^ 0x5F8002F3) & (16 * v70) ^ v70;
  LODWORD(v67) = ((16 * (v67 ^ 0x80601003)) ^ 0xFE012FF0) & (v67 ^ 0x80601003) ^ (16 * (v67 ^ 0x80601003)) & 0xDFE012F0;
  LODWORD(v70) = v70 ^ 0xDFE012FF ^ (v67 ^ 0xDE000200) & ((_DWORD)v70 << 8);
  v71 = v69 ^ (2
             * (((_DWORD)v70 << 16) & 0x5FE00000 ^ v70 ^ (((_DWORD)v70 << 16) ^ 0x12FF0000) & (((v67 ^ 0x1E0100F) << 8) & 0x5FE00000 ^ (((v67 ^ 0x1E0100F) << 8) ^ 0x60120000) & (v67 ^ 0x1E0100F) ^ 0x1FE00000)));
  LODWORD(STACK[0x16E0]) = v32;
  v72 = (((BYTE1(v32) ^ BYTE2(v32) ^ 0xE5)
                         - 2 * ((BYTE1(v32) ^ BYTE2(v32) ^ 0xE5) & 0x7F ^ (BYTE1(v32) ^ BYTE2(v32)) & 0x18)
                         + 103) ^ v32) ^ HIBYTE(v32);
  v73 = 16843009
      * (((v72 ^ 0xEA5334D) + 2088196284) ^ ((v72 ^ 0x54BA495A) + 644358829) ^ ((v72 ^ 0x5A1F7A79) + 684528016))
      - 15297160;
  LODWORD(v69) = (v73 ^ 0xB65871CE) & (2 * (v73 & 0xB71265EF)) ^ v73 & 0xB71265EF;
  LODWORD(v70) = ((2 * (v73 ^ 0xD858BA0E)) ^ 0xDE95BFC2) & (v73 ^ 0xD858BA0E) ^ (2 * (v73 ^ 0xD858BA0E)) & 0x6F4ADFE0;
  LODWORD(v69) = (v70 ^ 0x4C009FC0) & (4 * v69) ^ v69;
  LODWORD(v70) = ((4 * (v70 ^ 0x214A4021)) ^ 0xBD2B7F84) & (v70 ^ 0x214A4021) ^ (4 * (v70 ^ 0x214A4021)) & 0x6F4ADFE0;
  LODWORD(v69) = (v70 ^ 0x2D0A5F80) & (16 * v69) ^ v69;
  LODWORD(v70) = ((16 * (v70 ^ 0x42408061)) ^ 0xF4ADFE10) & (v70 ^ 0x42408061) ^ (16 * (v70 ^ 0x42408061)) & 0x6F4ADFE0;
  LODWORD(v69) = v69 ^ 0x6F4ADFE1 ^ (v70 ^ 0x6408DE00) & ((_DWORD)v69 << 8);
  LODWORD(v70) = v73 ^ (2
                      * (((_DWORD)v69 << 16) & 0x6F4A0000 ^ v69 ^ (((_DWORD)v69 << 16) ^ 0x5FE10000) & (((v70 ^ 0xB4201E1) << 8) & 0x6F4A0000 ^ 0x25000000 ^ (((v70 ^ 0xB4201E1) << 8) ^ 0x4ADF0000) & (v70 ^ 0xB4201E1))));
  LODWORD(STACK[0x1790]) = v70;
  v74 = STACK[0x1868];
  LODWORD(STACK[0x1798]) = (LODWORD(STACK[0x1868]) ^ 0xB5D8FF4B) % 0x101;
  LODWORD(STACK[0x17A8]) = v71;
  LODWORD(STACK[0x17B0]) = ((v71 ^ 0x8FBB5C96) - 231576902) ^ ((v71 ^ 0xFD52AB8E) - 2133090910) ^ ((v71 ^ 0x7DB2AAAF)
                                                                                                 + 3906689);
  v75 = -393100841
      * (((v24 ^ 0x926421B5) + 1195458385) ^ ((v24 ^ 0x923F760D) + 1192913129) ^ ((v24 ^ 0xA7AC22C5) + 1921596449))
      - 1840593721;
  LODWORD(v69) = (v75 ^ 0xF9A1943A) & (2 * (v75 & 0xC23584BA)) ^ v75 & 0xC23584BA;
  LODWORD(v67) = ((2 * (v75 ^ 0x7D8A942A)) ^ 0x7F7E2120) & (v75 ^ 0x7D8A942A) ^ (2 * (v75 ^ 0x7D8A942A)) & 0xBFBF1090;
  LODWORD(v69) = (v67 ^ 0x193E0000) & (4 * v69) ^ v69;
  LODWORD(v67) = ((4 * (v67 ^ 0x80811090)) ^ 0xFEFC4240) & (v67 ^ 0x80811090) ^ (4 * (v67 ^ 0x80811090)) & 0xBFBF1090;
  LODWORD(v69) = (v67 ^ 0xBEBC0000) & (16 * v69) ^ v69;
  LODWORD(v67) = ((16 * (v67 ^ 0x1031090)) ^ 0xFBF10900) & (v67 ^ 0x1031090) ^ (16 * (v67 ^ 0x1031090)) & 0xBFBF1090;
  LODWORD(v69) = v69 ^ 0xBFBF1090 ^ (v67 ^ 0xBBB10000) & ((_DWORD)v69 << 8);
  LODWORD(v69) = ((_DWORD)v69 << 16) & 0xBFBFBFBF ^ v69 ^ (((_DWORD)v69 << 16) ^ 0x10900000) & (((v67 ^ 0x40E1090) << 8) & 0x3FBF0000 ^ 0xAF0000 ^ (((v67 ^ 0x40E1090) << 8) ^ 0xBF100000) & (v67 ^ 0x40E1090));
  LODWORD(v67) = (v24 ^ 0xA7F7757D) + 869911446;
  v76 = ((2 * (v67 & 0x10117)) | 0x10209000) & (v67 ^ 0x5C4BEF32) ^ v67 & 0x10117 ^ ((2 * (v67 & 0x10117)) & 0x204 | 0x40C000);
  v77 = (2 * (v67 ^ 0x5C4BEF32)) & 0x80044A44 ^ 0x80042A45 ^ ((2 * (v67 ^ 0x5C4BEF32)) ^ 0x30B9048A) & (v67 ^ 0x5C4BEF32);
  v78 = (4 * v76) & 0x106CEA44 ^ v76 ^ ((4 * v76) ^ 0x1030000) & v77;
  v79 = (4 * v77) & 0x906CEA44 ^ 0x904C4241 ^ ((4 * v77) ^ 0x41B3A914) & v77;
  v80 = (16 * v78) & 0x106CEA40 ^ v78 ^ ((16 * v78) ^ 0x40C0000) & v79;
  v81 = (16 * v79) & 0x906CEA40 ^ 0x90204A05 ^ ((16 * v79) ^ 0x6CEA450) & v79;
  v82 = v80 ^ (v80 << 8) & 0x906CEA00 ^ ((v80 << 8) ^ 0x4CC00000) & v81;
  v83 = STACK[0x1870];
  v84 = ((4 * LODWORD(STACK[0x1870])) ^ 0xA773CF80)
      + v7
      - 2
      * (((4 * LODWORD(STACK[0x1870])) ^ 0xA773CF80) & 0xD2D947C ^ (4 * LODWORD(STACK[0x1870])) & 0x18);
  v85 = STACK[0x1848];
  v86 = STACK[0x16A8];
  v87 = ((v85 ^ 1) + v7 - ((2 * (v85 ^ 1)) & 0x1A5B28CE)) ^ 0xFA397B77 ^ *(_DWORD *)(STACK[0x16A8]
                                                                                   + 4 * ((v85 ^ 1u) + 55316));
  v88 = v29;
  LODWORD(STACK[0x1700]) = v29;
  v89 = LODWORD(STACK[0x1820]) ^ LODWORD(STACK[0x17E0]) ^ v84;
  LODWORD(STACK[0x1778]) = v28;
  LODWORD(STACK[0x18A8]) = v89 ^ v28 ^ (((4 * v29) ^ 0xE836FC84)
                                      + v7
                                      - 2 * (((4 * v29) ^ 0xE836FC84) & 0xD2D9474 ^ (4 * v29) & 0x10));
  v90 = 16843009 * (v57 ^ HIBYTE(v56) ^ 0xEB);
  LODWORD(STACK[0x17E0]) = v90;
  v91 = v90 ^ 0xC434E91E ^ v70;
  LODWORD(STACK[0x1710]) = v7 - 39024815 * v91 - ((458821282 * v91) & 0x1A5B28CE);
  v92 = (((LODWORD(STACK[0x1508]) ^ 0xF3F29727) + 202205401) ^ ((LODWORD(STACK[0x1508]) ^ 0xF333D178) + 214707848) ^ ((LODWORD(STACK[0x1508]) ^ 0x8DECD238) + 1913859528))
      - 591496396
      + v87;
  v93 = (v92 ^ 0xA74F1DB4) & (2 * (v92 & 0xB06F1934)) ^ v92 & 0xB06F1934;
  v94 = ((2 * (v92 ^ 0xC7932F9C)) ^ 0xEFF86D50) & (v92 ^ 0xC7932F9C) ^ (2 * (v92 ^ 0xC7932F9C)) & 0x77FC36A8;
  v95 = (v94 ^ 0x43F82400) & (4 * v93) ^ v93;
  v96 = ((4 * (v94 ^ 0x100412A8)) ^ 0xDFF0DAA0) & (v94 ^ 0x100412A8) ^ (4 * (v94 ^ 0x100412A8)) & 0x77FC36A8;
  v97 = (v96 ^ 0x57F012A0) & (16 * v95) ^ v95;
  v98 = ((16 * (v96 ^ 0x200C2408)) ^ 0x7FC36A80) & (v96 ^ 0x200C2408) ^ (16 * (v96 ^ 0x200C2408)) & 0x77FC36A0;
  v99 = v97 ^ 0x77FC36A8 ^ (v98 ^ 0x77C02200) & (v97 << 8);
  v100 = v92 ^ (2
              * ((v99 << 16) & 0x77FC0000 ^ v99 ^ ((v99 << 16) ^ 0x36A80000) & (((v98 ^ 0x3C1428) << 8) & 0x77FC0000 ^ 0x3C80000 ^ (((v98 ^ 0x3C1428) << 8) ^ 0x7C360000) & (v98 ^ 0x3C1428))));
  v101 = v83 ^ 0xE9DCF3E0;
  v102 = (v83 ^ 0xE9DCF3E0) + 853882687;
  v103 = ((2 * (v102 & 0x9CE)) | 0x120A2000) & (v102 ^ 0x57228BDB) ^ v102 & 0x9CE ^ ((2 * (v102 & 0x9CE)) & 0x1214 | 0x10000000);
  v104 = (2 * (v102 ^ 0x57228BDB)) & 0x88001214 ^ 0x88001215 ^ ((2 * (v102 ^ 0x57228BDB)) ^ 0x267A242A) & (v102 ^ 0x57228BDB);
  v105 = (4 * v103) & 0x1A391210 ^ v103 ^ ((4 * v103) ^ 0x40044000) & v104;
  v106 = (4 * v104) & 0x9A391214 ^ 0x92191201 ^ ((4 * v104) ^ 0x68E44854) & v104;
  v107 = (16 * v105) & 0x9A391210 ^ v105 ^ ((16 * v105) ^ 0x110000) & v106;
  v108 = (16 * v106) & 0x9A391210 ^ 0x18281205 ^ ((16 * v106) ^ 0xA3912150) & v106;
  v109 = v107 ^ 0x9A390215 ^ (v107 << 8) & 0x9A391200 ^ ((v107 << 8) ^ 0x10100000) & v108;
  v110 = (v109 << 16) & 0x1A390000 ^ v109 ^ ((v109 << 16) ^ 0x12150000) & ((v108 << 8) & 0x9A390000 ^ 0x2290000 ^ ((v108 << 8) ^ 0x39120000) & v108);
  LODWORD(v67) = ((v24 ^ 0xA7F7757D) + v7 - 2 * (v24 ^ 0xA7F7757D)) ^ 0xF748E036 ^ *(_DWORD *)(v86
                                                                                             + 4
                                                                                             * (v67 ^ (2 * (((v82 ^ 0x90602A45) << 16) & 0x106C0000 ^ v82 ^ 0x90602A45 ^ (((v82 ^ 0x90602A45) << 16) ^ 0x6A450000) & (((v81 << 8) ^ 0x6CEA0000) & v81 ^ 0x106C0000))) ^ 0xEC76D1FD));
  v111 = (v88 ^ 0x3A0DBF21) + 473224824;
  LODWORD(v70) = ((2 * ((((unsigned __int16)v88 ^ 0xBF21) - 10632) & 0xCA95)) | 0x4C002000) & (v111 ^ 0xBEC8E497) ^ 0x5D030E02 ^ ((2 * ((((unsigned __int16)v88 ^ 0xBF21) - 10632) & 0xCA95)) & 0x11402 | (((unsigned __int16)v88 ^ 0xBF21) - 10632) & 0xCA95);
  v112 = ((2 * (v111 ^ 0xBEC8E497)) ^ 0xF6063C04) & (v111 ^ 0xBEC8E497) ^ (2 * (v111 ^ 0xBEC8E497)) & 0x1001E02;
  LODWORD(v70) = v70 ^ v112 & 0x2240D60 ^ ((4 * v70) ^ 0x3A287568) & (v112 ^ 0x5C021C02);
  v113 = ((4 * v112) ^ 0x3E2C7D60) & (v112 ^ 0x5C021C02) ^ v112 & 0x2240D60;
  LODWORD(v70) = v70 ^ v113 & 0x4E240D60 ^ ((16 * v70) ^ 0x5E152D40) & (v113 ^ 0x4C000C02);
  v114 = ((16 * v113) ^ 0x8E24CD60) & (v113 ^ 0x4C000C02) ^ v113 & 0x4E240D60;
  LODWORD(v70) = v70 ^ v114 & 0x4E240D60 ^ (((_DWORD)v70 << 8) ^ 0x4D3A0F60) & (v114 ^ 0x4C000C02);
  v115 = ((v114 << 8) ^ 0x4E280D60) & (v114 ^ 0x4C000C02) ^ v114 & 0x4E240D60;
  v116 = v70 ^ v115 & 0x4E240D60 ^ (((_DWORD)v70 << 16) ^ 0x5C260D61) & (v115 ^ 0x11030000) ^ (((_DWORD)v70 << 16) ^ 0x5C260D61) & 0x5D030C00;
  LODWORD(v70) = ((v43 ^ 0x6B03006D) - 1441251620) ^ ((v43 ^ 0x6D756C10) - 1402056025) ^ ((v43 ^ 0xB5BF3953) + 1956906982);
  v117 = v102 ^ (2 * v110);
  LODWORD(v67) = v67
               + (((v100 ^ 0xB9F6C8AB) - 102508712) ^ ((v100 ^ 0x5C886BAF) + 480080980) ^ ((v100 ^ 0xD7B9D760)
                                                                                         - 1750284131))
               - 1404044997;
  v118 = (v67 ^ 0xD2D99BA8) & (2 * (v67 & 0xE0DD9B2C)) ^ v67 & 0xE0DD9B2C;
  v119 = ((2 * (v67 ^ 0xD2F389F8)) ^ 0x645C25A8) & (v67 ^ 0xD2F389F8) ^ (2 * (v67 ^ 0xD2F389F8)) & 0x322E12D4;
  v120 = (v119 ^ 0x100C0284) & (4 * v118) ^ v118;
  v121 = ((4 * (v119 ^ 0x12221254)) ^ 0xC8B84B50) & (v119 ^ 0x12221254) ^ (4 * (v119 ^ 0x12221254)) & 0x322E12D4;
  v122 = (v121 ^ 0x280244) & (16 * v120) ^ v120;
  v123 = ((16 * (v121 ^ 0x32061084)) ^ 0x22E12D40) & (v121 ^ 0x32061084) ^ (16 * (v121 ^ 0x32061084)) & 0x322E12D0;
  v124 = v122 ^ 0x322E12D4 ^ (v123 ^ 0x22200094) & (v122 << 8);
  LODWORD(STACK[0x16D0]) = v67 ^ (2
                                * ((v124 << 16) & 0x322E0000 ^ v124 ^ ((v124 << 16) ^ 0x12D40000) & (((v123 ^ 0x100E1294) << 8) & 0x322E0000 ^ 0x102C0000 ^ (((v123 ^ 0x100E1294) << 8) ^ 0x2E120000) & (v123 ^ 0x100E1294))));
  v125 = v111 ^ (2 * v116);
  v126 = -39024815
       * (((v13 ^ 0xFEF92D65) - 72214449) ^ ((v13 ^ 0x5027EEC4) + 1433197552) ^ ((v13 ^ 0xD9479D12) - 603150278))
       + 887244183;
  v127 = ((v85 ^ 0x13E61424) + 1630830526) ^ ((v85 ^ 0xCF297AF1) - 1107619479) ^ ((v85 ^ 0xDCCF6ED4) - 1373829810);
  LODWORD(STACK[0x16F8]) = LODWORD(STACK[0x1610]) ^ (-393100841 * v127
                                                   - ((287540142 * v127 + 151032578) & 0x1A5B28CE)
                                                   - 508699160) ^ v75 ^ (2 * v69);
  v128 = 1506693793 * v70 - ((329033026 * v70 + 439002510) & 0x1A5B28CE);
  v129 = 1334294275
       * (((v13 ^ 0x62837475) + 1741177183) ^ ((v13 ^ 0x9DEF1DA7) - 1734072179) ^ ((v13 ^ 0x88F53761) - 1916927413))
       - 1930131279;
  LODWORD(v69) = (v129 ^ 0x38F89136) & (2 * (v129 & 0xBAFAD584)) ^ v129 & 0xBAFAD584;
  LODWORD(v70) = ((2 * (v129 ^ 0x597C3336)) ^ 0xC70DCD64) & (v129 ^ 0x597C3336) ^ (2 * (v129 ^ 0x597C3336)) & 0xE386E6B2;
  LODWORD(v69) = (v70 ^ 0xC304C4A2) & (4 * v69) ^ v69;
  LODWORD(v70) = ((4 * (v70 ^ 0x20822292)) ^ 0x8E1B9AC8) & (v70 ^ 0x20822292) ^ (4 * (v70 ^ 0x20822292)) & 0xE386E6B0;
  LODWORD(v69) = (v70 ^ 0x82028280) & (16 * v69) ^ v69;
  LODWORD(v70) = ((16 * (v70 ^ 0x61846432)) ^ 0x386E6B20) & (v70 ^ 0x61846432) ^ (16 * (v70 ^ 0x61846432)) & 0xE386E6B0;
  LODWORD(v69) = v69 ^ 0xE386E6B2 ^ (v70 ^ 0x20066200) & ((_DWORD)v69 << 8);
  v130 = v129 ^ (2
               * (((_DWORD)v69 << 16) & 0x63860000 ^ v69 ^ (((_DWORD)v69 << 16) ^ 0x66B20000) & (((v70 ^ 0xC3808492) << 8) & 0xE3860000 ^ 0x61000000 ^ (((v70 ^ 0xC3808492) << 8) ^ 0x6E60000) & (v70 ^ 0xC3808492))));
  v131 = ((v126 & 0xDC281F46 ^ 0xDC281F46) + (v126 & 0xDC281F46)) ^ v101;
  v132 = *(_DWORD *)(v86 + 4 * (v125 ^ 0x59CDC691u)) ^ ((v88 ^ 0x3A0DBF21) + v7 - ((2 * (v88 ^ 0x3A0DBF21)) & 0xCE));
  LODWORD(v69) = 1506693793
               * (((v74 ^ 0x23197BF5) - 468455641) ^ ((v74 ^ 0xAC4C5532) + 1799799266) ^ ((v74 ^ 0x3A8DD18C) - 41466528))
               - 520649895;
  v133 = (v69 ^ 0x3AD9EF6C) & (2 * (v69 & 0xBC1DCF6E)) ^ v69 & 0xBC1DCF6E;
  v134 = ((2 * (v69 ^ 0x2FB6574)) ^ 0x7DCD5434) & (v69 ^ 0x2FB6574) ^ (2 * (v69 ^ 0x2FB6574)) & 0xBEE6AA1A;
  v135 = (v134 ^ 0x30C40010) & (4 * v133) ^ v133;
  v136 = ((4 * (v134 ^ 0x8222AA0A)) ^ 0xFB9AA868) & (v134 ^ 0x8222AA0A) ^ (4 * (v134 ^ 0x8222AA0A)) & 0xBEE6AA18;
  v137 = (v136 ^ 0xBA82A800) & (16 * v135) ^ v135;
  v138 = ((16 * (v136 ^ 0x4640212)) ^ 0xEE6AA1A0) & (v136 ^ 0x4640212) ^ (16 * (v136 ^ 0x4640212)) & 0xBEE6AA10;
  v139 = v137 ^ 0xBEE6AA1A ^ (v138 ^ 0xAE62A000) & (v137 << 8);
  v140 = (v139 << 16) & 0x3EE60000 ^ v139 ^ ((v139 << 16) ^ 0x2A1A0000) & (((v138 ^ 0x10840A1A) << 8) & 0x3EE60000 ^ 0x18440000 ^ (((v138 ^ 0x10840A1A) << 8) ^ 0x66AA0000) & (v138 ^ 0x10840A1A));
  v141 = v131 ^ v7 ^ *(_DWORD *)(v86 + 4 * (v117 ^ 0xDD4BBDE4));
  v142 = v141 + v7 - ((2 * v141) & 0x1A5B28CE);
  v143 = (((LODWORD(STACK[0xDF4]) ^ 0xA9C99359) + 1446407335) ^ ((LODWORD(STACK[0xDF4]) ^ 0x22C0CAE3) - 583060195) ^ ((LODWORD(STACK[0xDF4]) ^ 0x624CDDD) - 103075293))
       - (((v85 ^ 0x57E6B11B) + 624220803) ^ ((v85 ^ 0xA68665D) + 2025459141) ^ ((v85 ^ 0x5D8ED747) + 794606815))
       - 710166423
       + (((v24 ^ 0x5CAAD360) - 1987064442) ^ ((v24 ^ 0x42986478) - 1749189986) ^ ((v24 ^ 0xB9C5C265) + 1826675841));
  v144 = (v143 ^ 0xB7BDD3FF) & (2 * (v143 & 0xB781DBFE)) ^ v143 & 0xB781DBFE;
  LODWORD(v70) = ((2 * (v143 ^ 0xB6BDC5B3)) ^ 0x2783C9A) & (v143 ^ 0xB6BDC5B3) ^ (2 * (v143 ^ 0xB6BDC5B3)) & 0x13C1E4C;
  v145 = (v70 ^ 0x1081C0D) & (4 * v144) ^ v144;
  LODWORD(v70) = ((4 * (v70 ^ 0x1040245)) ^ 0x4F07934) & (v70 ^ 0x1040245) ^ (4 * (v70 ^ 0x1040245)) & 0x13C1E4C;
  v146 = (v70 ^ 0x301809) & (16 * v145) ^ v145;
  LODWORD(v70) = ((16 * (v70 ^ 0x10C0649)) ^ 0x13C1E4D0) & (v70 ^ 0x10C0649) ^ (16 * (v70 ^ 0x10C0649)) & 0x13C1E40;
  v147 = v146 ^ 0x13C1E4D ^ (v70 ^ 0x100040D) & (v146 << 8);
  v148 = v143 ^ (2
               * ((v147 << 16) & 0x13C0000 ^ v147 ^ ((v147 << 16) ^ 0x1E4D0000) & (((v70 ^ 0x3C1A0D) << 8) & 0x13C0000 ^ 0x1200000 ^ (((v70 ^ 0x3C1A0D) << 8) ^ 0x3C1E0000) & (v70 ^ 0x3C1A0D))));
  v149 = v91 ^ LODWORD(STACK[0x14E4]) ^ ((v91 >> 7) + v7 - ((2 * (v91 >> 7)) & 0x25B28CE));
  v150 = v149 + v7 - ((2 * v149) & 0x1A5B28CE);
  v151 = (LODWORD(STACK[0xE08]) ^ v7)
       - 1442177280
       + (((v130 ^ 0x74E5957B) - 1094392316) ^ ((v130 ^ 0x98FCF8AC) + 1390250965) ^ ((v130 ^ 0x54EA7537) - 1630861744))
       - 1334294275 * v91
       + 2767;
  LODWORD(v70) = (v151 ^ 0xFA3A6219) & (2 * (v151 & 0xE3236A98)) ^ v151 & 0xE3236A98;
  v152 = ((2 * (v151 ^ 0xBE7CF629)) ^ 0xBABF3962) & (v151 ^ 0xBE7CF629) ^ (2 * (v151 ^ 0xBE7CF629)) & 0x5D5F9CB0;
  LODWORD(v70) = (v152 ^ 0x181F1820) & (4 * v70) ^ v70;
  v153 = ((4 * (v152 ^ 0x45408491)) ^ 0x757E72C4) & (v152 ^ 0x45408491) ^ (4 * (v152 ^ 0x45408491)) & 0x5D5F9CB0;
  LODWORD(v70) = (v153 ^ 0x555E1080) & (16 * v70) ^ v70;
  v154 = ((16 * (v153 ^ 0x8018C31)) ^ 0xD5F9CB10) & (v153 ^ 0x8018C31) ^ (16 * (v153 ^ 0x8018C31)) & 0x5D5F9CB0;
  LODWORD(v70) = v70 ^ 0x5D5F9CB1 ^ (v154 ^ 0x55598800) & ((_DWORD)v70 << 8);
  v155 = v151 ^ (2
               * (((_DWORD)v70 << 16) & 0x5D5F0000 ^ v70 ^ (((_DWORD)v70 << 16) ^ 0x1CB10000) & (((v154 ^ 0x80614A1) << 8) & 0x5D5F0000 ^ 0x430000 ^ (((v154 ^ 0x80614A1) << 8) ^ 0x5F9C0000) & (v154 ^ 0x80614A1))));
  LODWORD(STACK[0x1818]) = v13 ^ (v13 >> 7) ^ 0x77766C0E ^ v150;
  LODWORD(STACK[0x1438]) = LODWORD(STACK[0xE30]) ^ v69 ^ (2 * v140) ^ v126 ^ (v128 + 709027630) ^ 0x95D49B5A ^ LODWORD(STACK[0x1710]);
  v156 = LODWORD(STACK[0x1858]) ^ v7;
  LODWORD(STACK[0x112C]) = v156;
  LODWORD(v69) = (v156 ^ LODWORD(STACK[0x1698])) + v7 - ((2 * (v156 ^ LODWORD(STACK[0x1698]))) & 0x1A5B28CE);
  LODWORD(STACK[0x1658]) = LODWORD(STACK[0x1820]) ^ LODWORD(STACK[0x1700]) ^ ((LODWORD(STACK[0x1700]) ^ LODWORD(STACK[0x1870])) >> 2) ^ 0xEF9EC11 ^ LODWORD(STACK[0x1768]);
  v157 = LODWORD(STACK[0x17A0]) ^ v142;
  v158 = STACK[0x16E0];
  v159 = -554393689 * (LODWORD(STACK[0x16E0]) ^ LODWORD(STACK[0x1898])) + 1250376584;
  v160 = (v159 ^ 0x247AB07C) & (2 * (v159 & 0xB578C478)) ^ v159 & 0xB578C478;
  LODWORD(v70) = ((2 * (v159 ^ 0x26CBB06C)) ^ 0x2766E828) & (v159 ^ 0x26CBB06C) ^ (2 * (v159 ^ 0x26CBB06C)) & 0x93B37414;
  v161 = (v70 ^ 0x3222000) & (4 * v160) ^ v160;
  LODWORD(v70) = ((4 * (v70 ^ 0x90911414)) ^ 0x4ECDD050) & (v70 ^ 0x90911414) ^ (4 * (v70 ^ 0x90911414)) & 0x93B37414;
  v162 = (v70 ^ 0x2815000) & (16 * v161) ^ v161;
  LODWORD(v70) = ((16 * (v70 ^ 0x91322404)) ^ 0x3B374140) & (v70 ^ 0x91322404) ^ (16 * (v70 ^ 0x91322404)) & 0x93B37410;
  v163 = v162 ^ 0x93B37414 ^ (v70 ^ 0x13334014) & (v162 << 8);
  LODWORD(v86) = STACK[0x16C8];
  LODWORD(STACK[0x1710]) = STACK[0x16B8] ^ v7 ^ v69 ^ LODWORD(STACK[0x16C8]) ^ LODWORD(STACK[0x17D8]);
  LODWORD(v69) = (1711914639
                - ((v13 >> 7) & 0xF2F2F2 ^ 0xB02000 | 0x6609BE8F)
                + ((v13 >> 7) & 0xF2F2F2 ^ 0xB02000 | 0x99F64170)) ^ 0x95AC51F4;
  LODWORD(STACK[0x1600]) = (((v69 - ((2 * v69) & 0x3FFC7EF0) - 1610727560) ^ 0x6104CFBE)
                          + ((((2 * ((((v13 >> 7) & 0xF2F2F2 ^ 0x861C82C3) - 1) ^ 0x6AEF872)) | 0x24D11156)
                            - ((((v13 >> 7) & 0xF2F2F2 ^ 0x861C82C3) - 1) ^ 0x6AEF872)
                            - 308840619) ^ 0x9238C0AB)) ^ 0xBE1EA754 ^ LODWORD(STACK[0x17E0]);
  v164 = LODWORD(STACK[0x1520]) ^ v159 ^ (2
                                        * ((v163 << 16) & 0x13B30000 ^ v163 ^ ((v163 << 16) ^ 0x74140000) & (((v70 ^ 0x80803414) << 8) & 0x13B30000 ^ 0x830000 ^ (((v70 ^ 0x80803414) << 8) ^ 0x33740000) & (v70 ^ 0x80803414))));
  LODWORD(STACK[0x1420]) = v157 ^ 0x51058B21 ^ v132;
  LODWORD(v69) = (((2 * (v131 & 0xD8100377 ^ 0xC0000306)) & 0x30200240) - (v131 & 0xD8100377 ^ 0xC0000306) - 450502049) ^ 0x216E595F;
  v165 = STACK[0x1798];
  v166 = STACK[0x16A8];
  v167 = LODWORD(STACK[0x1770]) ^ *(_DWORD *)(STACK[0x16A8] + 4 * (LODWORD(STACK[0x1798]) + 53517)) ^ LODWORD(STACK[0x17A8]) ^ ((((v132 & 0xDF57B7DF ^ 0x357A099) + (v132 & 0xDF57B7DF ^ 0xDC001746)) & ((((2 * v69) & 0x30525B82) - v69 + 1708315190) ^ 0x61996A30 | (((2 * (v131 & 0xD8100377 ^ 0xAC000F00)) | 0x7DD5963E) - (v131 & 0xD8100377 ^ 0xAC000F00) - 1055574815) ^ 0x4B7D4768)) - ((((2 * (v155 & 0x58C76FD5 ^ 0xD3F650EA)) & 0x16221636) - (v155 & 0x58C76FD5 ^ 0xD3F650EA) - 186223388) ^ 0x679667DE | ((v155 & 0x58C76FD5 ^ 0x10822BD0) + (v155 & 0x484568D4 ^ 0x4B5DC024) - ((v155 & 0x58C76FD5 ^ 0x10822BD0) & 0x484568D4)) ^ 0x439EEF21));
  LODWORD(STACK[0x1838]) ^= 0x98D604EF;
  LODWORD(STACK[0x17A8]) = LODWORD(STACK[0x1810]) ^ 0xE2C303EC;
  LODWORD(STACK[0x1700]) = v24 ^ 0x2ADAE11A;
  LODWORD(v69) = *(_DWORD *)(v166 + 4 * (LODWORD(STACK[0x17B0]) - 1926337413));
  LODWORD(STACK[0x1558]) = LODWORD(STACK[0x16C0]) ^ LODWORD(STACK[0x14F8]) ^ STACK[0x1840];
  LODWORD(STACK[0x16B0]) = LODWORD(STACK[0x16D0]) ^ 0x2DA42AE3;
  LODWORD(STACK[0x1490]) = LODWORD(STACK[0x16F8]) ^ 0x114631FD;
  LODWORD(STACK[0x16D0]) = v148 ^ 0x38CC7303;
  LODWORD(STACK[0x1510]) = v155 ^ 0xEC93C79D;
  LODWORD(STACK[0x1528]) = v165 ^ 0x72DE773C ^ ((v167 ^ 0x8276C9D0 ^ v69)
                                              + v7
                                              - ((2 * (v167 ^ 0x8276C9D0 ^ v69)) & 0x1A5B28CE));
  LODWORD(STACK[0x1610]) = v164 ^ 0x8904F3C8;
  LODWORD(STACK[0x1868]) = v158 ^ 0x6476EDB2;
  LODWORD(STACK[0x12B0]) = LODWORD(STACK[0x1790]) ^ 0x88D8BCB8;
  LODWORD(STACK[0x1848]) = v86 ^ 0x9BEB502F;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0x17C0])) - 12))();
}

uint64_t sub_1003261E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X3>, unsigned __int8 a3@<W8>)
{
  int v3;
  unint64_t v4;
  uint64_t v5;

  v3 = STACK[0x1828];
  v4 = (LODWORD(STACK[0x1828]) - 13203) | 0x200u;
  LODWORD(STACK[0x1898]) = a3 + 1694091632;
  v5 = *(_QWORD *)(STACK[0x18C0] + 8 * (v3 - 12691));
  STACK[0x1870] = v4;
  STACK[0x18B0] = a2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(v5 - v4 + 8771))(a1, 4091908465, 2368574567);
}

uint64_t sub_100326294(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  _BOOL4 v17;

  v5 = (((a3 ^ 0xA8BAADA0) + 1464160864) ^ ((a3 ^ 0xDC7ADA9E) + 595928418) ^ ((a3 ^ 0xF9EDE359) + 101850279))
     - 354927722;
  v6 = (v5 ^ 0x2A015E89) & (2 * (v5 & 0xA25558D2)) ^ v5 & 0xA25558D2;
  v7 = ((2 * (v5 ^ 0x6AA36E09)) ^ 0x91EC6DB6) & (v5 ^ 0x6AA36E09) ^ (2 * (v5 ^ 0x6AA36E09)) & (v3 + 10);
  v8 = (v7 ^ 0x80E42490) & (4 * v6) ^ v6;
  v9 = ((4 * (v7 ^ 0x48121249)) ^ 0x23D8DB6C) & (v7 ^ 0x48121249) ^ (4 * (v7 ^ 0x48121249)) & (v3 + 8);
  v10 = v9 ^ 0xC8262493;
  v11 = (v9 ^ 0xD01240) & (16 * v8) ^ v8;
  v12 = ((16 * v10) ^ 0x8F636DB0) & v10 ^ (16 * v10) & v3;
  v13 = v11 ^ (v3 + 11) ^ (v12 ^ 0x88622400) & (v11 << 8);
  v14 = v5 ^ (2
            * ((v13 << 16) & v4 ^ v13 ^ ((v13 << 16) ^ 0x36DB0000) & (((v12 ^ 0x4094124B) << 8) & v4 ^ 0x8C00000 ^ (((v12 ^ 0x4094124B) << 8) ^ 0x76360000) & (v12 ^ 0x4094124B))));
  v15 = (((v14 ^ 0x21BF3E22) + 1634754783) ^ ((v14 ^ 0xEC75F6EF) - 1397053420) ^ ((v14 ^ 0xFFD7FDA9) - 1088904362))
      - 232301097;
  v17 = v15 <= 0x64F9C96F || v15 >= LODWORD(STACK[0x1898]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (int)((26674 * v17) ^ STACK[0x1870])) - 8))();
}

uint64_t sub_10032679C()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 4))();
}

uint64_t sub_100326984(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;

  v7 = (((a3 ^ 0xBEBF73B0) + 1094749264) ^ ((a3 ^ 0x5795FBA2) - 1469447074) ^ ((a3 ^ 0x64071C75) - 1678187637))
     - 787227503;
  v8 = (v7 ^ 0x3B11B786) & (2 * (v7 & 0xBC19B7D7)) ^ v7 & 0xBC19B7D7;
  v9 = ((2 * (v7 ^ 0x2332BFA4)) ^ 0x3E5610E6) & (v7 ^ 0x2332BFA4) ^ (2 * (v7 ^ 0x2332BFA4)) & 0x9F2B0872;
  v10 = v9 ^ (v5 + 972);
  v11 = (v9 ^ (v6 + 60)) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0x7CAC21CC) & v10 ^ (4 * v10) & 0x9F2B0870;
  v13 = v11 ^ 0x9F2B0873 ^ (v12 ^ 0x1C280043) & (16 * v11);
  v14 = (16 * (v12 ^ 0x83030833)) & 0x9F2B0870 ^ 0xD0B0843 ^ ((16 * (v12 ^ 0x83030833)) ^ 0xF2B08730) & (v12 ^ 0x83030833);
  v15 = (v13 << 8) & 0x9F2B0800 ^ v13 ^ ((v13 << 8) ^ (v4 + 3680)) & v14;
  v16 = v7 ^ (2
            * ((v15 << 16) & 0x1F2B0000 ^ v15 ^ ((v15 << 16) ^ 0x8730000) & ((v14 << 8) & 0x9F2B0000 ^ 0x14230000 ^ ((v14 << 8) ^ 0x2B080000) & v14)));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                        + 8
                                        * ((155
                                          * ((((v16 ^ 0x2B4C208) - 192999774) ^ ((v16 ^ 0xFFA75651) + 158112505) ^ ((v16 ^ 0x790A3368) - 1883111486))
                                           - 1926392729 > 0xF)) ^ (v3 - 3981)))
                            - 8))();
}

uint64_t sub_100326E64(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * (v2 - 13647)) - 4))(a1, a2, v3 ^ 0x9343356u);
}

uint64_t sub_100326E94@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;

  v7 = v3 - 13958;
  v8 = (v4 - 1885009377) >> 12;
  v9 = v8 + v4 - 1885009377 - ((v8 + v4 - 1885009377) >> (v7 - 83));
  v10 = v9 + 2144261783 - ((v9 + 2144261783) >> 12) + ((v9 + 2144261783 - ((v9 + 2144261783) >> 12)) >> 4);
  v11 = v10 + 311500681 - ((v10 + 311500681) >> 13) + ((v10 + 311500681 - ((v10 + 311500681) >> 13)) >> 7);
  v12 = v11 + 501407760 + ((v11 + 501407760) >> 11) - ((v11 + 501407760 + ((v11 + 501407760) >> 11)) >> 5);
  v13 = v12 + 333212047 + ((v12 + 333212047) >> 11) - ((v12 + 333212047 + ((v12 + 333212047) >> 11)) >> 2);
  v14 = (v13 ^ 0x9E8E0640) - ((v13 ^ 0x9E8E0640) >> 10) + (((v13 ^ 0x9E8E0640) - ((v13 ^ 0x9E8E0640) >> 10)) >> 6);
  v15 = v14 + 296122201 - ((v14 + 296122201) >> 8) - ((v14 + 296122201 - ((v14 + 296122201) >> 8)) >> 6);
  v16 = v15 - 1667547846 + ((v15 - 1667547846) >> 11) + ((v15 - 1667547846 + ((v15 - 1667547846) >> 11)) >> 4);
  v17 = v16
      - 252813648
      + ((v16 - 252813648) >> 12)
      - 1926392729
      - ((2 * (v16 - 252813648 + ((v16 - 252813648) >> 12))) & 0x1A5B28CE);
  v18 = v8 & 0x375AC;
  v19 = (v17 ^ 0x8D2D9467) + ((v17 >> 8) ^ 0xFF72D26B) + 1;
  v20 = STACK[0x1738];
  v21 = STACK[0x1418];
  v22 = ((STACK[0x16B8] ^ LODWORD(STACK[0x1738]))
       - 1926392729
       - ((2 * (STACK[0x16B8] ^ LODWORD(STACK[0x1738]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1418]);
  v23 = v12 ^ v9;
  v24 = ((v11 >> 1) & 0x51F777CB ^ v11) - 1926392729 - ((2 * ((v11 >> 1) & 0x51F777CB ^ v11)) & 0x1A5B28CE);
  v25 = (-1768594931 * ((v18 | 0xF82375AC) - (v19 & 0x68543279) + (v19 | 0x97ABCD86)) - 1768594931) & (LODWORD(STACK[0x1738]) ^ LODWORD(STACK[0x147C]));
  v26 = (v22 & 0x8EF6A760 ^ 0x8EF6A760) + (v22 & 0x8EF6A760);
  v27 = ((v23 ^ v22 ^ v15) >> 1) & 0x51F777CB ^ v22;
  v28 = v27
      - 1926392729
      - 2
      * (v27 & 0xD2D9477 ^ (((STACK[0x16B8] ^ LOBYTE(STACK[0x1738]))
                                            + 103
                                            - ((2 * (STACK[0x16B8] ^ LOBYTE(STACK[0x1738]))) & 0xCE)) ^ LOBYTE(STACK[0x1418])) & 0x10);
  v29 = STACK[0x1554];
  v30 = LODWORD(STACK[0x1554]) ^ LODWORD(STACK[0x1808]);
  v31 = v23 ^ LODWORD(STACK[0x1450]) ^ v28;
  LODWORD(STACK[0x1650]) = a3 ^ 0x8D2D9467;
  v32 = a3 ^ 0x8D2D9467 ^ (v30 - 1926392729 - ((2 * v30) & 0x1A5B28CE));
  v33 = v6 ^ v20 ^ v15 ^ (v31 - 1926392729 - ((2 * v31) & 0x1A5B28CE)) ^ ((v25 >> 1) - 1926392729 - (v25 & 0x1A5B28CE));
  v34 = STACK[0x1524];
  v35 = v26 & 0x33AEE60 ^ 0x40100C50 ^ (v29 ^ 0x8E176A16) & (v26 ^ 0x2D1848F6);
  v36 = LODWORD(STACK[0x1710]) ^ ((((2 * v35) | 0x6EE61AE4) - v35 + 1217196686) >> 1) ^ v32 ^ (-1926392729
                                                                                             - (v32 & v5)
                                                                                             + ((v32 >> 1) & 0x51F777CB)) ^ v10 ^ (v10 >> 1) & 0x51F777CB ^ v13 ^ (v13 >> 1) & 0x51F777CB ^ (v16 >> 1) & 0x51F777CB;
  v37 = v16 ^ a2 ^ ((v36 ^ 0x7B3DA4A9) - 1926392729 - 2 * ((v36 ^ 0x7B3DA4A9) & 0xD2D9477 ^ v36 & 0x10));
  v38 = v37 - 1926392729 - ((2 * v37) & 0x1A5B28CE);
  v39 = v33 - 1926392729 - ((2 * v33) & 0x1A5B28CE);
  v40 = STACK[0x1530];
  v41 = ((LODWORD(STACK[0x112C]) ^ v34) - 1926392729 - ((2 * (LODWORD(STACK[0x112C]) ^ v34)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1530]);
  v42 = (659668504 - (v34 & 0xA3EEEF97 ^ 0x20400801 | 0x2751BE18) + (v34 & 0xA3EEEF97 ^ 0x20400801 | 0xD8AE41E7)) ^ 0x7DF245E5;
  v43 = (((v19 ^ v14 ^ v41) & 0xA3EEEF96 ^ (-420005387 - (v42 | 0xE6F739F5) + (v42 | 0x1908C60A))) >> 1) ^ 0xE9C2707;
  v44 = v41 ^ LODWORD(STACK[0x1524]) ^ (v43 - 1926392729 - ((2 * v43) & 0x1A5B28CE));
  v45 = a1 ^ LODWORD(STACK[0x1500]) ^ v24 ^ v14 ^ v19 ^ (v44 - 1926392729 - ((2 * v44) & 0x1A5B28CE));
  LODWORD(STACK[0x10DC]) = a3 ^ 0xD5322AC2 ^ ((v38 ^ v29) - 1926392729 - ((2 * (v38 ^ v29)) & 0x1A5B28CE));
  LODWORD(STACK[0x14E8]) = v21 ^ 0x581FBEA5 ^ v39;
  LODWORD(STACK[0x1710]) = v40 ^ 0x581FBEA5 ^ (v45 - 1926392729 - ((2 * v45) & 0x1A5B28CE));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v7) - 8))();
}

uint64_t sub_100327530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  LODWORD(STACK[0x1898]) = (v5 ^ 0xE5FA8F4E) + v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x18C0] + 8 * (v5 - 9439)))(a1, a2, a3, a4, 2368574567);
}

uint64_t sub_100327598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  _BOOL4 v17;

  v6 = (((a5 ^ 0xD09257FA) + 795715590) ^ ((a5 ^ 0x2D13419D) - 756236701) ^ ((a5 ^ 0x70AC8200) - 1890353664)) + 81874631;
  v7 = ((2 * (v6 & 0x884C45A1)) & 0x108800 | v6 & 0x884C45A1) ^ (2 * (v6 & 0x884C45A1)) & (v6 ^ 0xEF3A8935);
  v8 = ((2 * (v6 ^ 0xEF3A8935)) ^ 0xCEED9928) & (v6 ^ 0xEF3A8935) ^ (2 * (v6 ^ 0xEF3A8935)) & 0x6776CC94;
  v9 = (v8 ^ 0x42604810) & (4 * v7) ^ v7;
  v10 = ((4 * (v8 ^ 0x21124494)) ^ 0x9DDB3250) & (v8 ^ 0x21124494) ^ (4 * (v8 ^ 0x21124494)) & 0x6776CC94;
  v11 = (v10 ^ 0x5520014) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x6224CC84)) ^ 0x776CC940) & (v10 ^ 0x6224CC84) ^ (16 * (v10 ^ 0x6224CC84)) & 0x6776CC90;
  v13 = v11 ^ 0x6776CC94 ^ (v12 ^ 0x6764C800) & (v11 << 8);
  v14 = v6 ^ (2
            * ((v13 << 16) & 0x67760000 ^ v13 ^ ((v13 << 16) ^ 0x4C940000) & (((v12 ^ 0x120494) << 8) & 0x67760000 ^ 0x1320000 ^ (((v12 ^ 0x120494) << 8) ^ 0x76CC0000) & (v12 ^ 0x120494))));
  v15 = (((v14 ^ 0x382D8E58) - 2072626870) ^ ((v14 ^ 0xE970A41C) + 1428886286) ^ ((v14 ^ 0x1FD4F6CD) - 1550892579))
      + 1932030199;
  v17 = v15 < 0xE5FADC90 || v15 >= LODWORD(STACK[0x1898]);
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((28270 * v17) ^ v5)))();
}

uint64_t sub_100327BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;

  v6 = (((a5 ^ 0x84F2F93A) + 2064451270) ^ ((a5 ^ 0x1EBB13EA) - 515576810) ^ ((a5 ^ 0x17647EB7) - 392462007))
     - 1143922943;
  v7 = (v6 ^ 0x89187567) & (2 * (v6 & 0xD15C7567)) ^ v6 & 0xD15C7567;
  v8 = ((2 * (v6 ^ 0xAB901FA3)) ^ 0xF598D588) & (v6 ^ 0xAB901FA3) ^ (2 * (v6 ^ 0xAB901FA3)) & 0x7ACC6AC4;
  v9 = ((4 * (v8 ^ 0xA442A44)) ^ 0xEB31AB10) & (v8 ^ 0xA442A44) ^ (4 * (v8 ^ 0xA442A44)) & 0x7ACC6AC4;
  v10 = (v9 ^ 0x6A002A00) & (16 * ((v8 ^ 0x40804080) & (4 * v7) ^ v7)) ^ (v8 ^ 0x40804080) & (4 * v7) ^ v7;
  v11 = ((16 * (v9 ^ 0x10CC40C4)) ^ 0xACC6AC40) & (v9 ^ 0x10CC40C4) ^ (16 * (v9 ^ 0x10CC40C4)) & 0x7ACC6AC0;
  v12 = v10 ^ 0x7ACC6AC4 ^ (v11 ^ 0x28C42800) & (v10 << 8);
  v13 = v6 ^ (2
            * ((v12 << 16) & 0x7ACC0000 ^ v12 ^ ((v12 << 16) ^ 0x6AC40000) & (((v11 ^ 0x52084284) << 8) & 0x7ACC0000 ^ 0x32840000 ^ (((v11 ^ 0x52084284) << 8) ^ 0x4C6A0000) & (v11 ^ 0x52084284))));
  return (*(uint64_t (**)(void))(STACK[0x18C0]
                              + 8
                              * ((254
                                * ((((v13 ^ 0x43373B64) - 1062604780) ^ ((v13 ^ 0x1FD7BBF0) - 1672908664) ^ ((v13 ^ 0xADAC207B) + 775088909))
                                 - 1926392745 > 0xFFFFFFEF)) ^ v5)))();
}

uint64_t sub_100328188()
{
  int v0;

  LODWORD(STACK[0x1858]) = (v0 - 10474) | 0x105;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 12))();
}

uint64_t sub_100328324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  char v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;

  v15 = (((v11 ^ 0x5934E12B) - 1496637739) ^ ((v11 ^ 0xDC4CF8CE) + 598935346) ^ ((v11 ^ 0x8558D82) - 139824514))
      - 1424984969;
  v16 = ((v11 ^ 0x87) + 121) ^ ((v11 ^ 0xEA) + 22) ^ ((v11 ^ 0xA) - 10);
  v17 = v15 >> ((8 - v16) & 9 ^ (v16 + 7) & (v11 & 0xB ^ 1) ^ 2);
  v18 = v17 + v15 - ((v17 + v15) >> 5);
  v19 = (v18 & 0x3FCAEAB4) >> ((v17 & 2 ^ 2) + (v17 & 2));
  v20 = v18 + 333212047 + ((v18 + 333212047) >> 11) - ((v18 + 333212047 + ((v18 + 333212047) >> 11)) >> 2);
  v21 = (v20 ^ 0x9E8E0640) - ((v20 ^ 0x9E8E0640) >> 10);
  v22 = (v21 & 0x11A67759 ^ 0x11A67759) + (v21 & 0x11A67759);
  v23 = ((v10 ^ STACK[0x16B8]) - 1926392729 - ((2 * (v10 ^ STACK[0x16B8])) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1418]);
  v24 = v21 + (v21 >> 6);
  v25 = v22 + v24 - ((v22 + v24) >> 8) - ((v22 + v24 - ((v22 + v24) >> 8)) >> 6);
  v26 = v18 ^ 0x3422009 ^ (v19 - 1926392728 + ~((2 * v19) & 0x1A5B284E)) ^ v25 ^ v14 & (v10 >> 2) ^ (v25 >> 2) & v14 ^ ((v14 & (v23 >> 2) ^ v23) - 1926392729 - 2 * ((v14 & (v23 >> 2) ^ v23) & 0xD2D9477 ^ v23 & 0x10)) ^ LODWORD(STACK[0x1408]) ^ v8;
  v27 = (v26 - 1926392729 - ((2 * v26) & 0x1A5B28CE)) ^ v10;
  v28 = (v27 - 1926392729 - ((2 * v27) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1418]);
  v29 = ((v25 - 1667547846) >> (((v25 >> 2) & 9 ^ 0xB) + ((v25 >> 2) & 9))) + v25 - 1667547846;
  v30 = v29 + (v29 >> 4);
  v31 = LODWORD(STACK[0x1650]) ^ ((LODWORD(STACK[0x1808]) ^ LODWORD(STACK[0x1818]))
                                - 1926392729
                                - ((2 * (LODWORD(STACK[0x1808]) ^ LODWORD(STACK[0x1818]))) & 0x1A5B28CE));
  v32 = v30 - 252813648 + ((v30 - 252813648) >> 12) - ((v30 - 252813648 + ((v30 - 252813648) >> 12)) >> 8);
  v33 = v14 & (LODWORD(STACK[0x1818]) >> 2) ^ 0x3422009 ^ v20 ^ v9 ^ (((v20 >> 2) & v14)
                                                                    - 1926392728
                                                                    + ~(v13 & (2 * (v20 >> 2)))) ^ v30 ^ v31 ^ v14 & (v30 >> 2) ^ (((v31 >> 2) & v14) - 1926392729 - (v13 & (2 * (v31 >> 2)))) ^ LODWORD(STACK[0x1638]);
  v34 = (v33 - 1926392729 - ((2 * v33) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1818]);
  v35 = (v34 - 1926392729 - ((2 * v34) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1650]);
  v36 = (v35 - 1926392729 - ((2 * v35) & 0x1A5B28CE)) ^ LODWORD(STACK[0x112C]);
  LODWORD(STACK[0x12A8]) = v35;
  v37 = LODWORD(STACK[0x1530]) ^ 0xE88174C7 ^ (v36 - 1926392729 - ((2 * v36) & 0x1A5B28CE));
  LODWORD(STACK[0x161C]) = v35 ^ 0x65ACE0A0;
  v38 = v24 ^ a8 ^ v12 ^ v14 & (v24 >> 2) ^ v32 ^ v14 & (v32 >> 2) ^ v35 ^ 0x65ACE0A0 ^ (((v35 >> 2) & v14 ^ 0xA201821)
                                                                                       - 1926392729
                                                                                       - 2
                                                                                       * (((v35 >> 2) & v14 ^ 0xA201821) & 0xD20902D ^ (v35 >> 2) & 8)) ^ v14 & (v37 >> 2);
  v39 = ((v37 ^ v11 ^ (v38 - 1926392729 - ((2 * v38) & 0x1A5B28CE)))
       - 1926392729
       - ((2 * (v37 ^ v11 ^ (v38 - 1926392729 - ((2 * v38) & 0x1A5B28CE)))) & 0x1A5B28CE)) ^ v10;
  LODWORD(STACK[0x16E0]) = v39 - 1926392729 - ((2 * v39) & 0x1A5B28CE);
  LODWORD(STACK[0x17B0]) = v28;
  LODWORD(STACK[0x16F8]) = v28 ^ 0x65ACE0A0;
  LODWORD(STACK[0x1808]) = LODWORD(STACK[0x16C0]) ^ 0x452803A4;
  LODWORD(STACK[0x1828]) = LODWORD(STACK[0x17A8]) ^ 0x67;
  LODWORD(STACK[0x17E0]) = STACK[0x1840] ^ 0x6A504BD3;
  v40 = STACK[0x1820];
  LODWORD(STACK[0x1798]) = STACK[0x1820] & 0x11 ^ 1;
  LODWORD(STACK[0x1790]) = v40 & 0xE ^ 6;
  LODWORD(STACK[0x17D8]) = LODWORD(STACK[0x1720]) ^ 0x8D2D9467;
  v41 = STACK[0x1778];
  LODWORD(STACK[0x17C0]) = ~LODWORD(STACK[0x1778]) & 6;
  LODWORD(STACK[0x17A0]) = v41 & 0x19 ^ 1;
  v42 = STACK[0x1700];
  LODWORD(STACK[0x1770]) = STACK[0x1700] & 0x14 ^ 4;
  LODWORD(STACK[0x1768]) = v42 & 0xB ^ 3;
  LODWORD(STACK[0x1898]) = LODWORD(STACK[0x1730]) ^ 0x8D2D9467;
  v43 = STACK[0x1800];
  LODWORD(STACK[0x1870]) = ~LODWORD(STACK[0x1800]) & 4;
  LODWORD(STACK[0x1810]) = v43 & 0x1B ^ 3;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0x1858]))
                                                           - 12))(2368574567, 1387536264, LODWORD(STACK[0x1848]));
}

uint64_t sub_100328818(int a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  uint64_t v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;

  v11 = STACK[0x1858];
  v12 = a1 ^ 0x8D2D9467;
  v13 = *(_DWORD *)(v5 + 4 * v12);
  v14 = (a1 ^ ((((((((v11 - 53) | 5) - 84) & a1 ^ (a1 ^ 0x67) & STACK[0x1808]) & 0x3E ^ 0xC3)
                                                 - ((((v11 - 53) | 5) - 84) & a1 ^ (a1 ^ 0x67) & STACK[0x1808] | 0x3E)
                                                 - 66) & 0xFE) >> 1)) ^ 0x67;
  v15 = (((((v13 ^ 0x8D2D9467) & STACK[0x17E0] ^ v13 & 0xE77DDFB4) & 0x3F0F877E ^ 0x3B02814F | ((v13 ^ 0x8D2D9467) & STACK[0x17E0] ^ v13 & 0xE77DDFB4) & 0xC0F07880)
        - 1) >> 1) ^ 0x5F178AB5;
  v16 = (v15 - 1926392729 - ((2 * v15) & 0x1A5B28CE)) ^ v13;
  v17 = ((v14 & STACK[0x1828]) >> LODWORD(STACK[0x1770]) >> LODWORD(STACK[0x1768])) | (v14 << LODWORD(STACK[0x1790]) << LODWORD(STACK[0x1798]));
  v18 = (v17 - 1926392729 - ((2 * v17) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1890]);
  v19 = (v18 - 1926392729 - ((2 * v18) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17F0]);
  v20 = v19 + 1007478424;
  v21 = (2 * ((v19 - 6504) & 0x177)) & 0xFE07 ^ (v19 - 6504) & 0x177 ^ ((2 * ((v19 - 6504) & 0x177)) | 0x400) & (v20 ^ 0x789FA060);
  v22 = (2 * (v20 ^ 0x789FA060)) & 0x316 ^ 0x111 ^ ((2 * (v20 ^ 0x789FA060)) ^ 0x4491462E) & (v20 ^ 0x789FA060);
  v23 = (4 * v21) & v22;
  v24 = (4 * v22) & 0xBB6CBB14 ^ 0x124C1303 ^ ((4 * v22) ^ 0x4492445C) & v22;
  v25 = (16 * ((4 * v21) & 0x3B6CBB14 ^ v21 ^ v23)) & 0x3B6CBB10 ^ (4 * v21) & 0x3B6CBB14 ^ v21 ^ v23 ^ ((16 * ((4 * v21) & 0x3B6CBB14 ^ v21 ^ v23)) ^ 0xA000) & v24;
  v26 = (16 * v24) & 0xBB6CBB10 ^ 0x9240A07 ^ ((16 * v24) ^ 0xB6CBB170) & v24;
  v27 = v20 ^ (2
             * (((v25 ^ (v25 << 8) & 0x3B6CBB00 ^ ((v25 << 8) ^ 0xAA0000) & v26 ^ 0xBB441117) << 16) & 0x3B6C0000 ^ v25 ^ (v25 << 8) & 0x3B6CBB00 ^ ((v25 << 8) ^ 0xAA0000) & v26 ^ 0xBB441117 ^ (((v25 ^ (v25 << 8) & 0x3B6CBB00 ^ ((v25 << 8) ^ 0xAA0000) & v26 ^ 0xBB441117) << 16) ^ 0x3B170000) & ((v26 << 8) & 0x3B6C0000 ^ 0x13440000 ^ ((v26 << 8) ^ 0x6CBB0000) & v26)));
  v28 = 373 * (((v27 ^ 0x7BA45F1F) - 900441633) ^ ((v27 ^ 0xADA705BF) + 475464575) ^ ((v27 ^ 0x152137F9) - 1529794247))
      + 467861955;
  v29 = ((2 * (v28 ^ 0xCEE3BEB6)) ^ 0xB2CB0DCC) & (v28 ^ 0xCEE3BEB6) ^ (2 * (v28 ^ 0xCEE3BEB6)) & v7;
  v30 = (v28 ^ 0xC7E7BE16) & (2 * (v28 & 0x97863850)) ^ v28 & 0x97863850;
  v31 = ((4 * (v29 ^ 0x49248222)) ^ 0x65961B98) & (v29 ^ 0x49248222) ^ (4 * (v29 ^ 0x49248222)) & (v7 - 2);
  v32 = (v31 ^ 0x41040286) & (16 * ((v29 ^ 0x110500E2) & (4 * v30) ^ v30)) ^ (v29 ^ 0x110500E2) & (4 * v30) ^ v30;
  v33 = ((16 * (v31 ^ 0x18618466)) ^ 0x96586E60) & (v31 ^ 0x18618466) ^ (16 * (v31 ^ 0x18618466)) & (v7 - 6);
  v34 = v32 ^ v7 ^ (v33 ^ 0x10400686) & (v32 << 8);
  v35 = v28 ^ (2
             * ((v34 << 16) & 0x59650000 ^ v34 ^ ((v34 << 16) ^ 0x6E60000) & (((v33 ^ 0x49258086) << 8) & 0x59650000 ^ 0x18610000 ^ (((v33 ^ 0x49258086) << 8) ^ 0x65860000) & (v33 ^ 0x49258086)))) ^ 0xA8A8A1FB;
  v36 = 0x3EE4F99CBEA615
      * (((v35 ^ 0xF090ABBA90FB2F4ELL) + 0xF6F54456F04D0B2) ^ ((v35 ^ 0x71DC1CD00A1E7042) - 0x71DC1CD00A1E7042) ^ ((v35 ^ 0x814CB76A17C8CB6BLL) + 0x7EB34895E8373495))
      - 0x6A86F014F80C39C6;
  v37 = (v36 ^ 0x926ACC5F1A772AB9) & (2 * (v36 & 0x9B6AEE1E03763039)) ^ v36 & 0x9B6AEE1E03763039;
  v38 = ((2 * (v36 ^ 0x847E50731EB74A9BLL)) ^ 0x3E297CDA3B82F544) & (v36 ^ 0x847E50731EB74A9BLL) ^ (2 * (v36 ^ 0x847E50731EB74A9BLL)) & (v9 + 2);
  v39 = (v38 ^ 0x1E00384819804000) & (4 * v37) ^ v37;
  v40 = ((4 * (v38 ^ 0x114822504410AA2)) ^ 0x7C52F9B47705EA88) & (v38 ^ 0x114822504410AA2) ^ (4
                                                                                                  * (v38 ^ 0x114822504410AA2)) & v9;
  v41 = (v40 ^ 0x1C10B82415016A80) & (16 * v39);
  v42 = ((16 * (v40 ^ 0x304064908C01022)) ^ 0xF14BE6D1DC17AA20) & (v40 ^ 0x304064908C01022) ^ (16 * (v40 ^ 0x304064908C01022)) & v9;
  v43 = (v42 ^ 0x1100A6411C012A00) & ((v41 ^ v39) << 8) ^ v41 ^ v39;
  v44 = (((v42 ^ 0xE14182C01C05082) << 8) ^ 0x14BE6D1DC17AA200) & (v42 ^ 0xE14182C01C05082) ^ ((v42 ^ 0xE14182C01C05082) << 8) & (v9 - 160);
  v45 = v43 ^ (v9 + 2) ^ (v44 ^ 0x14142C0D01400000) & (v43 << 16);
  v46 = v36 ^ (2
             * ((v45 << 32) & 0x1F14BE6D00000000 ^ v45 ^ ((v45 << 32) ^ 0x1DC17AA200000000) & (((v44 ^ 0xB0092601C8158A2) << 16) & 0x1F14BE6D00000000 ^ 0x110A22C00000000 ^ (((v44 ^ 0xB0092601C8158A2) << 16) ^ 0x3E6D1DC100000000) & (v44 ^ 0xB0092601C8158A2))));
  v47 = ((v46 ^ 0x9AF6738767827480) - 0x55604C8511D4DB7FLL) ^ ((v46 ^ 0x7D5832B8ADB301F6) + 0x4D31F245241A51F7);
  LODWORD(v46) = __CFADD__((v47 ^ ((v46 ^ 0x78EDA7BBF2C5B00BLL) + 0x488467467B6CE00CLL)) * v6, 0x66F64AC11158524)
               + (((v47 ^ ((v46 ^ 0x78EDA7BBF2C5B00BLL) + 0x488467467B6CE00CLL)) * (unsigned __int128)v6) >> 64)
               + ((__CFADD__(v46 ^ 0x9AF6738767827480, 0xAA9FB37AEE2B2481) - 1) ^ (__CFADD__(v46 ^ 0x7D5832B8ADB301F6, 0x4D31F245241A51F7)- 1) ^ (__CFADD__(v46 ^ 0x78EDA7BBF2C5B00BLL, 0x488467467B6CE00CLL)- 1))* v6+ 303293467;
  LODWORD(v47) = ((2 * (v46 ^ 0xBF5802A7)) ^ 0xA5683F12) & (v46 ^ 0xBF5802A7) ^ (2 * (v46 ^ 0xBF5802A7)) & a2;
  v48 = v47 ^ 0x52940089;
  LODWORD(v42) = (v46 ^ 0xEDC818AF) & (2 * (v46 & 0xEDEC1D2E)) ^ v46 & 0xEDEC1D2E;
  LODWORD(v47) = (v47 ^ 0x241D01) & (4 * v42) ^ v42;
  LODWORD(v42) = ((4 * v48) ^ 0x4AD07E24) & v48 ^ (4 * v48) & a2;
  LODWORD(v47) = (v42 ^ 0x42901E00) & (16 * v47) ^ v47;
  LODWORD(v42) = ((16 * (v42 ^ 0x10240189)) ^ 0x2B41F890) & (v42 ^ 0x10240189) ^ (16 * (v42 ^ 0x10240189)) & (a2 - 8);
  LODWORD(v47) = v47 ^ (a2 + 1) ^ (v42 ^ 0x2001809) & ((_DWORD)v47 << 8);
  v49 = ((((v16 & STACK[0x17D8] & 0x147588DC ^ 0x47188D9) + (v16 & STACK[0x17D8] & 0xEB8A7723) - 1) ^ 0x47188D8) << LODWORD(STACK[0x17C0]) << LODWORD(STACK[0x17A0])) | ((v16 & STACK[0x1898]) >> LODWORD(STACK[0x1810]) >> LODWORD(STACK[0x1870]));
  LODWORD(v44) = v49 - 1926392729 - ((2 * v49) & 0x1A5B28CE);
  v50 = a3 ^ LODWORD(STACK[0x1868]);
  *((_DWORD *)&STACK[0x18D0]
  + (v46 ^ (2
                        * (((_DWORD)v47 << 16) & 0x52B40000 ^ v47 ^ (((_DWORD)v47 << 16) ^ 0x1F890000) & (((v42 ^ 0x50B40709) << 8) & 0x52B40000 ^ 0x42A00000 ^ (((v42 ^ 0x50B40709) << 8) ^ 0x341F0000) & (v42 ^ 0x50B40709)))) ^ 0x6D84223C)) = v50 ^ v44;
  LODWORD(v12) = *(unsigned __int8 *)(v8 + v12) ^ 0x12;
  LOBYTE(v19) = *(_BYTE *)((((v19 >> 3) | (32 * (v19 & 7))) ^ 0x9D) + STACK[0x18B8] + 1665) - 38;
  LODWORD(v47) = (v12 + 592194058) ^ 0xC3F9D0B4;
  LODWORD(v44) = ((unsigned __int16)(16 * (((v12 + 10) & 0xF8) >> 3)) | 0x4000) & (unsigned __int16)v47 ^ (v12 + 592194058) & 0xF8 ^ (((((((_DWORD)v12 + 592194058) & 0xF8u) >> 5) & 1) << 6) | 0x18010000);
  LODWORD(v47) = (2 * v47) & 0x1064C ^ 0xC0244 ^ ((2 * v47) ^ 0x20914898) & v47;
  LODWORD(v44) = (4 * v44) & (a5 + 12) ^ v44 ^ ((4 * v44) ^ 0x60349800) & v47;
  LODWORD(v47) = (4 * v47) & (a5 + 12) ^ 0x249264C ^ ((4 * v47) ^ 0x7D369930) & v47;
  v51 = ((16 * v44) ^ 0x809A6000) & v47;
  LODWORD(v47) = (16 * v47) & a5 ^ 0xB05820C ^ ((16 * v47) ^ 0xF4DA64C0) & v47;
  LODWORD(v44) = (16 * v44) & a5 ^ v44 ^ v51 ^ (((16 * (_DWORD)v44) & a5 ^ v44 ^ v51) << 8) & (a5 - 64) ^ ((((16 * (_DWORD)v44) & a5 ^ v44 ^ v51) << 8) ^ 0x1860000) & v47 ^ 0x648204C;
  v52 = ((_DWORD)v12 + 592194058) ^ (2
                                   * (((_DWORD)v44 << 16) & 0x1F4D0000 ^ v44 ^ (((_DWORD)v44 << 16) ^ 0x264C0000) & (((_DWORD)v47 << 8) & 0x1F4D0000 ^ 0x12490000 ^ (((_DWORD)v47 << 8) ^ 0x4DA60000) & v47)));
  LOBYTE(v12) = (v52 ^ 0x7D) & (v12 + 2) ^ (-3 - v12) & 0xE2;
  LOBYTE(v46) = v19 ^ (v19 >> 5) ^ (v19 >> 4) ^ ((v12 ^ 0x7F)
                                                                                 + ((2 * v12) | 0x32)
                                                                                 + 104) & 0xE2;
  v53 = (((a1 ^ 0x48A075B8) - 1218475448) ^ ((a1 ^ 0x336FE40) - 53935680) ^ ((a1 ^ 0xC6BB1F9F) + 960815201))
      - 1764053849;
  LODWORD(v12) = (v53 ^ 0xF45AF7C5) & (2 * (v53 & 0xF652E7C1)) ^ v53 & 0xF652E7C1;
  v54 = ((2 * (v53 ^ 0x5CFA7245)) ^ 0x55512B08) & (v53 ^ 0x5CFA7245) ^ (2 * (v53 ^ 0x5CFA7245)) & v10;
  LODWORD(v44) = v54 ^ (v10 - 256);
  v55 = (v54 ^ 0x200180) & (4 * v12) ^ v12;
  LODWORD(v12) = ((4 * v44) ^ 0xAAA25610) & v44 ^ (4 * v44) & v10;
  v56 = (v12 ^ 0xAAA01400) & (16 * v55) ^ v55;
  LODWORD(v12) = ((16 * (v12 ^ 0x88184)) ^ 0xAA895840) & (v12 ^ 0x88184) ^ (16 * (v12 ^ 0x88184)) & (v10 - 4);
  v57 = v56 ^ v10 ^ (v12 ^ 0xAA881000) & (v56 << 8);
  LODWORD(v46) = 373 * v46 + 829483537;
  LODWORD(v52) = 63 * (*(unsigned __int8 *)(STACK[0x18B8] + (v52 ^ 0xEEB73A60)) ^ 9);
  LODWORD(v44) = ((2 * (v46 ^ 0x3E3AD682)) ^ 0x14B86DA) & (v46 ^ 0x3E3AD682) ^ (2 * (v46 ^ 0x3E3AD682)) & 0x1095C36C;
  LODWORD(v42) = (v46 ^ 0x3E3ED5CE) & (2 * (v46 & 0x315EF)) ^ v46 & 0x315EF;
  v58 = ((4 * (v44 ^ 0x10944125)) ^ 0x42D70DB4) & (v44 ^ 0x10944125) ^ (4 * (v44 ^ 0x10944125)) & 0x70B5C36C;
  LODWORD(v44) = (v58 ^ 0xC0950129) & (16 * ((v44 ^ 0x10808249) & (4 * v42) ^ v42)) ^ (v44 ^ 0x10808249) & (4 * v42) ^ v42;
  LODWORD(v42) = ((16 * (v58 ^ 0x3020C249)) ^ 0xB5C36D0) & (v58 ^ 0x3020C249) ^ (16 * (v58 ^ 0x3020C249)) & 0xF0B5C360;
  LODWORD(v44) = v44 ^ 0xF0B5C36D ^ (v42 ^ 0x14022D) & ((_DWORD)v44 << 8);
  v59 = v50 ^ (v52 - 1926392729 - ((2 * v52) & 0xCE));
  LODWORD(v52) = ((_DWORD)v44 << 16) & 0x70B50000 ^ v44 ^ (((_DWORD)v44 << 16) ^ 0x436D0000) & (((v42 ^ 0xF0A1C12D) << 8) & 0x70B50000 ^ 0x40340000 ^ (((v42 ^ 0xF0A1C12D) << 8) ^ 0x35C30000) & (v42 ^ 0xF0A1C12D));
  *((_DWORD *)&STACK[0x18D0]
  + (v46 ^ 0xAFAE9335 ^ (2 * (_DWORD)v52))
  - (v46 ^ 0xAFAE9335 ^ (2 * (_DWORD)v52)) / 0x412 * (_DWORD)v6) = v59;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                        + 8
                                        * ((8615
                                          * ((v53 ^ (2
                                                   * ((v57 << 16) & 0x2AA80000 ^ v57 ^ ((v57 << 16) ^ 0x15840000) & (((v12 ^ 0x208584) << 8) & 0xAAA80000 ^ 0x2280000 ^ (((v12 ^ 0x208584) << 8) ^ 0xA8950000) & (v12 ^ 0x208584)))) ^ 0x2F2E58AE) == -1926392473)) ^ v11))
                            - 12))();
}

uint64_t sub_100329728()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  unint64_t v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unint64_t v86;
  int v87;
  int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  unint64_t v205;
  unsigned int v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  int v218;
  unint64_t v219;
  unint64_t v220;
  int v221;
  unint64_t v222;
  unint64_t v223;
  unint64_t v224;
  unint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  unint64_t v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  unint64_t v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  int v292;
  unsigned int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  int v305;
  unsigned int v306;
  unint64_t v307;
  int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  unsigned int v317;
  int v318;
  int v319;
  int v320;
  unsigned int v321;
  unsigned int v322;
  int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  unsigned int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  unsigned int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  unsigned int v392;
  unint64_t v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  uint64_t (*v397)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t);
  uint64_t v398;

  v1 = LODWORD(STACK[0x16E0]) ^ LODWORD(STACK[0x1530]);
  LODWORD(STACK[0x17E0]) = v1;
  v2 = STACK[0x16B0];
  v3 = STACK[0x16F8];
  LODWORD(STACK[0x12A0]) = v0;
  v4 = (v0 + 1547199975) & 0xA3C7D7DF;
  v5 = STACK[0x1510];
  v6 = ((v3 ^ v2) - 1926392729 - ((2 * (v3 ^ v2)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1510]);
  LODWORD(STACK[0x15E0]) = v4;
  LODWORD(STACK[0x16C8]) = -1926392728;
  v7 = STACK[0x14E8];
  v8 = (v6 - 1926392728 + ((2 * v6) & 0x1A5B28CE ^ v4 ^ 0xFFFFAC21)) ^ LODWORD(STACK[0x14E8]);
  LODWORD(STACK[0x1828]) = v8 - 1926392729 - ((2 * v8) & 0x1A5B28CE);
  LODWORD(STACK[0x1858]) = v1 ^ 0x65ACE0A0;
  v9 = STACK[0x1154];
  v10 = ((v1 ^ 0x65ACE0A0 ^ v9) - 1926392729 - ((2 * (v1 ^ 0x65ACE0A0 ^ v9)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1758]);
  v11 = (v10 - 1926392729 - ((2 * v10) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1540]);
  v12 = STACK[0x1490];
  v13 = (v11 - 1926392729 - ((2 * v11) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1490]);
  v14 = (v13 - 1926392729 - ((2 * v13) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1554]);
  v15 = (v14 - 1926392729 - ((2 * v14) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16A4]);
  v16 = (v15 - 1926392729 - ((2 * v15) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1750]);
  v17 = (v16 - 1926392729 - ((2 * v16) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1818]);
  v18 = (v17 - 1926392729 - ((2 * v17) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17BC]);
  v19 = (v18 - 1926392729 - ((2 * v18) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1658]);
  LODWORD(STACK[0x14F8]) = v19 - 1926392729 - ((2 * v19) & 0x1A5B28CE);
  v20 = STACK[0x1588];
  v21 = STACK[0x147C];
  v22 = STACK[0x16C0];
  LODWORD(STACK[0x1680]) = LODWORD(STACK[0x16C0]) ^ LODWORD(STACK[0x147C]);
  v23 = LODWORD(STACK[0x17B0]) ^ 0x6CC533D;
  LODWORD(STACK[0x16E0]) = v22 ^ 0x8D2D9467;
  v24 = v22 & 0xEE4D27FA ^ 0x8C012010 ^ v23 & (v22 ^ 0x8D2D9467);
  v25 = v24 - ((2 * v24) & 0xD176B8B6);
  v26 = STACK[0x1840];
  LODWORD(STACK[0x1698]) = STACK[0x1840] ^ 0x8D2D9467;
  v27 = (v26 ^ 0x8D2D9467) & (v2 ^ 0xDA5085E1) ^ v26 & 0x577D1186;
  v28 = ((((v25 - 390374309) >> 1) ^ 0x745BBC14)
       - 1926392729
       - ((2 * (((v25 - 390374309) >> 1) ^ 0x745BBC14)) & 0x1A5B28CE)) ^ v3;
  v29 = STACK[0x1898];
  v30 = LODWORD(STACK[0x1838]) ^ 0x8D2D9467;
  v31 = (((v22 ^ v21) & (v20 ^ 0xE77E3E04) ^ v22 & 0x6A53AA62) >> 1) ^ 0x400C031;
  v32 = (v31 - 1926392729 - ((2 * v31) & 0x1A5B28CE)) ^ v20;
  LODWORD(STACK[0x1520]) = v32;
  v33 = STACK[0x1800] & 0xC ^ 4;
  v34 = STACK[0x1800] & 0x13 ^ 3;
  LOBYTE(v20) = STACK[0x1800] & 0xC ^ 4;
  LODWORD(STACK[0x1288]) = v33;
  LODWORD(STACK[0x1280]) = v34;
  v35 = STACK[0x1820] & 0x1F ^ 7;
  LODWORD(STACK[0x1508]) = v35;
  v36 = ((((2 * (v28 & v30 ^ 0x42200401)) & 0x6A52986E) - (v28 & v30 ^ 0x42200401) + 1255584712) ^ 0x8F6B7C9) << v35;
  LODWORD(STACK[0x1868]) = v36;
  v37 = (((((v28 & v29 & 0x180119CB ^ 0x1094B) + (v28 & v29 & 0xE7FEE634 ^ 0x84200005) - 1) ^ 0x8421094F) >> v33 >> v34) ^ 0xE7EDF6EE) & ~v36 | v36 & 0x18120911;
  LODWORD(STACK[0x1418]) = (v37 & 0x4306CEF5 ^ 0x4304CEE5) + (v37 ^ 0x10020110) - ((v37 ^ 0x10020110) & 0x4306CEF5);
  v38 = (((v27 & 0x950704CA ^ 0x81030448) + (v27 ^ 0x14541182) - ((v27 ^ 0x14541182) & 0x950704CA)) >> 1) ^ 0x423F02A7;
  v39 = (v38 - 1926392729 - ((2 * v38) & 0x1A5B28CE)) ^ v2;
  v40 = LODWORD(STACK[0x17A8]) ^ 0x8D2D9467;
  v41 = STACK[0x1700];
  v42 = STACK[0x1700] & 0x1B ^ 3;
  LODWORD(STACK[0x1650]) = v42;
  v43 = ~v41 & 4;
  LODWORD(STACK[0x16B0]) = v43;
  v44 = ((1901344838 - (v40 & v39 ^ 0x1088D9 | 0x71543846) + (v40 & v39 ^ 0x1088D9 | 0x8EABC7B9)) ^ 0x8EBB4F60) >> v43 >> v42;
  v45 = STACK[0x17D8] & v39;
  v46 = STACK[0x1778];
  v47 = STACK[0x1778] & 0xA ^ 2;
  LODWORD(STACK[0x1298]) = v47;
  v48 = v46 & 0x15 ^ 5;
  LODWORD(STACK[0x1290]) = v48;
  LODWORD(STACK[0x1408]) = (v45 << v48 << v47) ^ v44;
  v49 = ((v26 ^ 0x7300F5E4) & (v5 ^ v21) ^ v5 & 0xFE2D6182) >> 1;
  v50 = ((v49 ^ 0x46168001) - 1926392729 - 2 * ((v49 ^ 0x46168001) & STACK[0x1894] ^ v49 & 8)) ^ v5;
  v51 = STACK[0xE80];
  v52 = v26 ^ v21;
  v53 = (v26 ^ v21) & (LODWORD(STACK[0xE80]) ^ 0x2F7E96D0);
  LODWORD(STACK[0x14E4]) = v26 ^ v21;
  LODWORD(STACK[0x1848]) = ((((v53 ^ v26 & 0xA25302B6) >> 1) ^ 0x40008013)
                          - 1926392729
                          - ((2 * (((v53 ^ v26 & 0xA25302B6) >> 1) ^ 0x40008013)) & 0x1A5B28CE)) ^ v51;
  v54 = v46 & 0x11 ^ 1;
  v55 = v46 & 0xE ^ 6;
  LODWORD(STACK[0x13F8]) = v55;
  LODWORD(STACK[0x1400]) = v54;
  v56 = ((v29 & v50) >> v20 >> v34) | (((1416412336
                                       - (v30 & v50 ^ 0x20D10940)
                                       + ((2 * (v30 & v50 ^ 0x20D10940)) & 0x5726732C)
                                       + 2489) ^ 0x74BDCF29) << v55 << v54);
  LODWORD(STACK[0x1560]) = v56 - 1926392729 - ((2 * v56) & 0x1A5B28CE);
  v57 = STACK[0x1648];
  v58 = (v22 ^ 0x4B4B1BF6) & (v57 ^ v21) ^ v57 & 0xC6668F90;
  v59 = ((v22 ^ 0x15ADC2E4) & (v7 ^ v21) ^ v7 & 0x98805682) >> 1;
  LODWORD(STACK[0x1638]) = 221090943;
  v60 = ((v59 ^ 0x44000A01) - 1926392729 - 2 * ((v59 ^ 0x44000A01) & 0xD2D947F ^ v59 & 0x18)) ^ v7;
  v61 = v29;
  LODWORD(STACK[0x1808]) = LODWORD(STACK[0x1828]) ^ v57;
  v62 = (-1926392729 - (v58 & 0x1A5B28CE) + ((v58 >> 1) ^ 0x42124200)) ^ v57;
  v63 = v46 & 0xF ^ 7;
  LODWORD(STACK[0x1530]) = v63;
  LODWORD(STACK[0x159C]) = v46 & 0x10;
  LODWORD(STACK[0x1648]) = (((((2 * (v60 & v30 ^ 0xD5061802)) | 0x21F52A74) - (v60 & v30 ^ 0xD5061802) + 1862625990) ^ 0x45FC8D38) << v63 << (v46 & 0x10)) ^ ((((v60 & v29 & 0x65F4D6A6 ^ 0x417096A6) + (v60 & v29 ^ 0xAE844008) - ((v60 & v29 ^ 0xAE844008) & 0x65F4D6A6)) ^ 0xCB7096AE) >> (v41 & 0x13 ^ 3) >> (v41 & 0xC ^ 4)) ^ 0x8D2D9467;
  LODWORD(STACK[0x1584]) = v32 & v29;
  v64 = (-(v32 & v29 & 1) - 358912045) ^ 0xC29B2FF3;
  v65 = STACK[0x1178];
  v66 = STACK[0x1698];
  LODWORD(STACK[0x1828]) = (((((2 * (v62 & v30 ^ 0x2A246168)) | 0x87DEAE9A) - (v62 & v30 ^ 0x2A246168) - 1139758925) ^ 0x69CB3625) << (v46 & 0x11 ^ 1) << v55) ^ 0x8D2D9467 ^ (((((2 * (v62 & v29 ^ 0x49488D86)) & 0x89CBAA50) - (v62 & v29 ^ 0x49488D86) + 991570647) ^ 0x7252A751) >> (v41 & 0xF ^ 7) >> (v41 & 0x10));
  v67 = STACK[0x16E0];
  v68 = v22 & 0x68291917 ^ 0x28081815 ^ STACK[0x16E0] & (v9 ^ 0xE5048D70);
  v69 = ((((2 * v68) & 0xA9D4575C) - v68 - 1424632751) >> 1) ^ 0x459A6E21;
  v70 = (v69 + LODWORD(STACK[0x16C8]) + ~((2 * v69) & 0x1A5B28CE)) ^ v9;
  v71 = ((((v66 & (v65 ^ 0x61489DC0) ^ v26 & 0xEC6509A7) & 0x5B1807DE ^ 0x131807DC)
        + (v66 & (v65 ^ 0x61489DC0) ^ v26 & 0xEC6509A7 ^ 0x6C450803)
        - ((v66 & (v65 ^ 0x61489DC0) ^ v26 & 0xEC6509A7 ^ 0x6C450803) & 0x5B1807DE)) >> 1) ^ 0x5DBC07FD;
  v72 = (v71 - 1926392729 - ((2 * v71) & 0x1A5B28CE)) ^ v65;
  LODWORD(STACK[0x1664]) = v72;
  LOBYTE(v64) = ((((2 * v64) & 0x2E) - v64 + 40) ^ 8) + ((1 - (v32 & v29)) & 1);
  v73 = (v40 & v72 & 0x340EEE60 ^ 0x340CE260) + (v40 & v72 ^ 0xA20C0A) - ((v40 & v72 ^ 0xA20C0A) & 0x340EEE60);
  v74 = (LODWORD(STACK[0x17E0]) ^ 0x73FEA9F5) & v67;
  v75 = STACK[0x17D8];
  LODWORD(v65) = ~v41 & 7;
  v76 = v46 & 0x1B ^ 3;
  LODWORD(STACK[0x17E0]) = v76;
  v77 = ~v46 & 4;
  LODWORD(STACK[0x1778]) = v46;
  LODWORD(STACK[0x16B8]) = v77;
  LODWORD(STACK[0x1370]) = (((((2 * (v70 & v40 ^ 0x32700204)) | 0xAFFF97D0) - (v70 & v40 ^ 0x32700204) + 671101976) ^ 0xE58FC9EC) >> (v41 & 0x18) >> (~(_BYTE)v41 & 7)) ^ ((v70 & v75) << v77 << v76);
  LODWORD(STACK[0x1588]) = v73 ^ 0x34ACE26A;
  v78 = ((-2035083742
        - (v22 & 0x9B7FDD32 ^ 0x806D9C30 ^ v74 | 0x86B31622)
        + (v22 & 0x9B7FDD32 ^ 0x806D9C30 ^ v74 | 0x794CE9DD)) ^ 0x700CE1CF) >> v64;
  v79 = (v78 - 1926392729 - ((2 * v78) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1858]);
  v80 = v67;
  v81 = v22 & 0xC7515AF8 ^ 0xC2514250 ^ v67 & (LODWORD(STACK[0x1758]) ^ 0x4A7CCE9F);
  v82 = LODWORD(STACK[0x1758]) ^ ((((2 * v81) & 0x184EF694) - v81 + 1943569589) >> 1);
  v83 = v82 & 0x29C2105B ^ 0x2980105A ^ (v82 ^ 0x9769FF25) & (LODWORD(STACK[0x1838]) ^ 0xA4EF843C);
  v84 = ((2 * (v82 & 0x6B65BC13 ^ 0x2A418403 ^ (v82 ^ 0x9769FF25) & (LODWORD(STACK[0x17A8]) ^ 0xE6482874))) | 0xAD5DB8E)
      - (v82 & 0x6B65BC13 ^ 0x2A418403 ^ (v82 ^ 0x9769FF25) & (LODWORD(STACK[0x17A8]) ^ 0xE6482874));
  v85 = (((v79 & v75 & 0x85EF166B ^ 0x81E9102B) + (v79 & v75 & 0x7A10E994 ^ 0x2100801) - 1) ^ 0x83F9182B) << LODWORD(STACK[0x17A0]) << LODWORD(STACK[0x17C0]);
  LODWORD(STACK[0x16F8]) = v65;
  LODWORD(STACK[0x126C]) = v41 & 0x18;
  LODWORD(STACK[0x1390]) = v85 ^ (((-1657744448
                                  - (v79 & v61 ^ 0xF36A44A1)
                                  + ((2 * (v79 & v61 ^ 0xF36A44A1)) | 0xC59E4886)
                                  + 2045) ^ 0x91A560E2) >> v65 >> (v41 & 0x18));
  v86 = v26;
  v87 = ((LODWORD(STACK[0x1540]) ^ 0x84FBF028) & v52 ^ v26 & 0x9D6644E) >> 1;
  v88 = ((v87 ^ 0x4820223) - 1926392729 - 2 * ((v87 ^ 0x4820223) & STACK[0x1894] ^ v87 & 8)) ^ LODWORD(STACK[0x1540]);
  v89 = (v88 & v40 ^ 0x2811010) - ((2 * (v88 & v40 ^ 0x2811010)) & 0x978DE882);
  v90 = (((2 * (v75 & v88 ^ 0x44104B15)) | 0x22011338) - (v75 & v88 ^ 0x44104B15) - 285247900) ^ 0x5510C289;
  v91 = (v84 + 2056589881) ^ 0xAC4AD5C5;
  v92 = STACK[0x1820];
  LOBYTE(v84) = STACK[0x1820] & 0x17 ^ 7;
  v93 = v41 & 9 ^ 1;
  LODWORD(STACK[0x13C0]) = v93;
  v94 = v41 & 0x16 ^ 6;
  LODWORD(STACK[0x13E0]) = v94;
  v95 = (((-2009084725 - (v83 | 0x883FCCCB) + (v83 | 0x77C03334)) ^ 0x5F00336F) << v84 << (v92 & 8))
      + (v91 >> v94 >> v93);
  LODWORD(STACK[0x17B0]) = v95 - 1926392729 - ((2 * v95) & 0x1A5B28CE);
  v96 = v12 & 0x2BC0D1A1 ^ 0x8C041A1 ^ (v26 ^ 0xA6ED45C6) & (v12 ^ 0x8D2D9467);
  v97 = ((((2 * v96) | 0xF38D7042) - v96 + 104417247) >> 1) ^ 0x7C0334D0;
  v98 = (v97 - 1926392729 - ((2 * v97) & 0x1A5B28CE)) ^ v12;
  LODWORD(STACK[0x1858]) = (((v89 - 876153791) ^ 0xC947E451) >> v65 >> (v41 & 0x18)) ^ 0x8D2D9467 ^ (v90 << v84 << (v92 & 8));
  v99 = LODWORD(STACK[0xE44]) ^ 0x8443E6B4;
  v100 = STACK[0xE44];
  LODWORD(STACK[0xE44]) = STACK[0xE44];
  v101 = v66;
  LODWORD(v65) = STACK[0x1800];
  v102 = STACK[0x1800] & 0x14 ^ 4;
  v103 = STACK[0x1800] & 0xB ^ 3;
  LODWORD(STACK[0x1450]) = v103;
  LODWORD(STACK[0x1328]) = v102;
  v104 = v46 & 0x1F ^ 7;
  LODWORD(STACK[0x13D0]) = v104;
  LODWORD(STACK[0x156C]) = ((((v40 & v98 & 0xA8A71043 ^ 0xA0A41043) + (v40 & v98 & 0x5758EFBC ^ 0x2004815) - 1) ^ 0xA2A45857) >> v103 >> v102) ^ ((((v30 & v98 & 0x7F4D3D9B ^ 0x3F053999) + (v30 & v98 & 0x80B2C264 ^ 0x80804001) - 1) ^ 0xBF857999) << v104) ^ 0x8D2D9467;
  v105 = ((((2 * (v26 & 0x96E72D3 ^ 0x9462203 ^ v99 & v66)) & 0x790C010E)
         - (v26 & 0x96E72D3 ^ 0x9462203 ^ v99 & v66)
         + 1132068728) >> 1) ^ 0x2189E69C;
  v106 = (v105 - 1926392729 - ((2 * v105) & 0x1A5B28CE)) ^ v100;
  v107 = STACK[0x1668];
  v108 = (LODWORD(STACK[0x1668]) ^ 0x8D2D9467) & (v26 ^ 0xEEE79335);
  LODWORD(v26) = STACK[0x1668];
  LODWORD(STACK[0x1668]) = STACK[0x1668];
  v109 = (((v108 ^ v107 & 0x63CA0752) & 0xC2B9230F ^ 0x8231210D)
        + (v108 ^ v107 & 0x63CA0752 ^ 0x61CA0642)
        - ((v108 ^ v107 & 0x63CA0752 ^ 0x61CA0642) & 0xC2B9230F)) >> 1;
  v110 = v92 & 0x1C ^ 4;
  LODWORD(STACK[0x1348]) = v110;
  v111 = v30;
  v112 = ~v92 & 3;
  LODWORD(STACK[0x1350]) = v112;
  v113 = ((((((v61 & v106 & 0xF985B300 ^ 0xF9051200) + (v61 & v106 ^ 0x82A108) - ((v61 & v106 ^ 0x82A108) & 0xF985B300)) ^ 0xF9071208) >> (v65 & 0xFA ^ 0x62) >> (v65 & 5 ^ 5)) ^ 0xCA5D7BAA) & ~((v30 & v106) << v112 << v110) | ((v30 & v106) << v112 << v110) & 0x35A28455) ^ 0x10208451;
  v114 = (v113 | 0xF5ACB2EE) - (v113 | 0xA534D11);
  LODWORD(STACK[0x1230]) = v114;
  v115 = STACK[0x1710];
  v116 = STACK[0x1710];
  LODWORD(STACK[0x1710]) = STACK[0x1710];
  v117 = STACK[0x1680] & (v115 ^ 0x4AEAFA0);
  v118 = v41 & 0x1A ^ 2;
  LODWORD(STACK[0x1380]) = v118;
  v119 = ((v109 ^ 0x513D9087) - 1926392729 - 2 * ((v109 ^ 0x513D9087) & 0xD2D9477 ^ v109 & 0x10)) ^ v26;
  v120 = v119 & v40;
  LODWORD(STACK[0x13B8]) = v92 & 0x18;
  v121 = ~v92 & 7;
  LODWORD(STACK[0x13A0]) = v121;
  v122 = (v111 & v119) << (v92 & 0x18) << v121;
  v123 = ~v41 & 5;
  LODWORD(STACK[0x1378]) = v123;
  LODWORD(STACK[0x1388]) = v122 ^ (v120 >> v118 >> v123);
  v124 = STACK[0x1554];
  LODWORD(STACK[0x16C0]) = v22;
  v125 = ((((v117 ^ v22 & 0x89833BC6) >> 1) ^ 0x44808823)
        - 1926392729
        - ((2 * (((v117 ^ v22 & 0x89833BC6) >> 1) ^ 0x44808823)) & 0x1A5B28CE)) ^ v116;
  v126 = v41 & 0x1C ^ 4;
  LODWORD(STACK[0x1758]) = v126;
  v127 = v92 & 0x12 ^ 2;
  LODWORD(STACK[0x1500]) = v127;
  v128 = v92 & 0xD ^ 5;
  LODWORD(STACK[0x1510]) = v128;
  v129 = (((2 * (v125 & v111 ^ 0x1024C080)) & 0xCF1EC392) - (v125 & v111 ^ 0x1024C080) + 410033718) ^ 0x8545EB6;
  v130 = (v125 & v61) >> v126;
  v131 = ~v41 & 3;
  LODWORD(STACK[0x1514]) = v131;
  v132 = ((v129 << v128 << v127) | (v130 >> v131))
       - 1926392729
       - ((2 * ((v129 << v128 << v127) | (v130 >> v131))) & 0x1A5B28CE);
  v133 = (((v80 & (v124 ^ 0xD5BE2F09) ^ v22 & 0x5893BB6E) & 0x7D720667 ^ 0x7D620667)
        + (v80 & (v124 ^ 0xD5BE2F09) ^ v22 & 0x5893BB6E ^ 0x90A908)
        - ((v80 & (v124 ^ 0xD5BE2F09) ^ v22 & 0x5893BB6E ^ 0x90A908) & 0x7D720667)) >> 1;
  v134 = ((v133 ^ 0x3AF19F84) - 1926392729 - 2 * ((v133 ^ 0x3AF19F84) & 0xD2D9477 ^ v133 & 0x10)) ^ v124;
  LODWORD(STACK[0x12F8]) = v111;
  v135 = v65 & 0x19 ^ 1;
  v136 = v92 & 0x1E ^ 6;
  LODWORD(STACK[0x127C]) = v136;
  v137 = (((v134 & v111 & 0x63E4F2D7 ^ 0x26460D7) + (v134 & v111 & 0x9C1B0D28 ^ 0x80080521) - 1) ^ 0x826C65F7) << v136;
  v138 = (v92 & 1) == 0;
  LODWORD(STACK[0x1270]) = v138;
  v139 = ~(_DWORD)v65 & 6;
  LODWORD(STACK[0x15B0]) = v139;
  LODWORD(STACK[0x15AC]) = v135;
  LODWORD(STACK[0x1554]) = ((((v134 & v40 ^ 0x893ECFEB) - ((2 * (v134 & v40 ^ 0x893ECFEB)) & 0xA5EE7D50) - 755548504) ^ 0x5BC9F143) >> v139 >> v135) ^ (v137 << v138) ^ 0x8D2D9467;
  v140 = (((((LODWORD(STACK[0x14D8]) ^ 0x3CEE6AE6) & v101 ^ v86 & 0xB1C3FE81) & 0xEAEA6090 ^ 0xEAE84091 | ((LODWORD(STACK[0x14D8]) ^ 0x3CEE6AE6) & v101 ^ v86 & 0xB1C3FE81) & 0x15159F6E)
         - 1) >> 1) ^ 0x35F4EA48;
  v141 = (v140 - 1926392729 - ((2 * v140) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14D8]);
  LODWORD(STACK[0x1320]) = v40;
  v142 = v92 & 0x19 ^ 1;
  LODWORD(STACK[0x1540]) = v142;
  v143 = ((v141 & v40 & 0xCAD04071 ^ 0xC0D04021) + (v141 & v40 ^ 0xB253050) - ((v141 & v40 ^ 0xB253050) & 0xCAD04071)) ^ 0xC1F57021;
  v144 = (v141 & v111) << v142;
  v145 = ~v92 & 6;
  LODWORD(STACK[0x1364]) = v145;
  LODWORD(STACK[0x1338]) = (v143 >> (v65 & 0x19 ^ 1) >> (~(_BYTE)v65 & 6)) ^ (v144 << v145);
  v146 = STACK[0x1690];
  LODWORD(STACK[0x1690]) = STACK[0x1690];
  v147 = v86 & 0x11D758B9 ^ 0x1D21821 ^ v101 & (v146 ^ 0x9CFACCDE);
  v148 = ((v147 - ((2 * v147) & 0xDDCBF7CA) + 1860565989) >> 1) ^ 0x371979F2;
  v149 = (v148 - 1926392729 - ((2 * v148) & 0x1A5B28CE)) ^ v146;
  v150 = (v40 & v149 ^ 0x2200010) - ((2 * (v40 & v149 ^ 0x2200010)) & 0x606F3AF4);
  v151 = v41 & 0x17 ^ 7;
  LODWORD(STACK[0x1220]) = v151;
  v152 = (v75 & v149) << LODWORD(STACK[0x1530]) << LODWORD(STACK[0x159C]);
  LODWORD(STACK[0x1228]) = v41 & 8;
  v153 = v152 | (((v150 + 808951162) ^ 0x32179D6Au) >> (v41 & 8) >> v151);
  LODWORD(STACK[0x1428]) = v153 + LODWORD(STACK[0x16C8]) + ~((2 * v153) & 0x1A5B28CE);
  v154 = STACK[0x1548];
  v155 = v86 & 0x1D4A3570 ^ 0x17391A73 ^ v101 & (LODWORD(STACK[0x1548]) ^ 0x9067A117);
  v156 = ((v155 - ((2 * v155) & 0x9A08804u) + 80757762) >> 1) ^ 0xF70A508;
  LODWORD(STACK[0x14A8]) = LODWORD(STACK[0x14F8]) ^ LODWORD(STACK[0x1548]);
  LODWORD(STACK[0x124C]) = (v156 - 1926392729 - ((2 * v156) & 0x1A5B28CE)) ^ v154;
  STACK[0x1840] = v86;
  v157 = (v86 ^ 0xF6EB449A) & (LODWORD(STACK[0x1860]) ^ 0x8D2D9467) ^ STACK[0x1860] & 0x7BC6D0FD;
  v158 = (((v157 & 0x88FE755A ^ 0x88FA251A) + (v157 ^ 0x4304D0E0) - ((v157 ^ 0x4304D0E0) & 0x88FE755A)) >> 1) ^ 0x617F1AEF;
  v159 = (v158 - 1926392729 - ((2 * v158) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1860]);
  v160 = v92 & 0x13 ^ 3;
  LODWORD(STACK[0x1360]) = v160;
  v161 = v92 & 0xC ^ 4;
  LODWORD(STACK[0x1358]) = v161;
  LODWORD(STACK[0x1434]) = ((((v61 & v159 ^ 0x80448) - ((2 * (v61 & v159 ^ 0x80448)) & 0xD4C50232) - 362643175) ^ 0xEA6A8551) >> v103 >> (v65 & 0x14 ^ 4)) ^ ((((v75 & v159 ^ 0x48348102) - ((2 * (v75 & v159 ^ 0x48348102)) & 0x97441F8C) + 1268912070) ^ 0x3968EC4) << v161 << v160);
  v162 = STACK[0x18A8];
  v163 = STACK[0x18A8];
  LODWORD(STACK[0x18A8]) = STACK[0x18A8];
  v164 = (v86 ^ 0xA2C3085D) & (v162 ^ 0x8D2D9467) ^ v162 & 0x2FEE9C3A;
  v165 = (((v164 & 0xA18731E3 ^ 0x800731C3) + (v164 ^ 0x2FC80C28) - ((v164 ^ 0x2FC80C28) & 0xA18731E3)) >> 1) ^ 0x41B1D4F4;
  v166 = (v165 - 1926392729 - ((2 * v165) & 0x1A5B28CE)) ^ v163;
  v167 = v65 & 0x1F ^ 7;
  LODWORD(STACK[0x14D8]) = v167;
  v168 = v92 & 0xA ^ 2;
  LODWORD(STACK[0x14E8]) = v168;
  v169 = v92 & 0x15 ^ 5;
  LODWORD(STACK[0x1860]) = v169;
  v170 = ((((v61 & v166 ^ 0x9A061482) - ((2 * (v61 & v166 ^ 0x9A061482)) & 0x14CDBFB4) - 1972969510) ^ 0x1060CB58) >> v167) | ((v75 & v166) << v169 << v168);
  LODWORD(STACK[0x1340]) = v170 - 1926392729 - ((2 * v170) & 0x1A5B28CE);
  v171 = STACK[0x1570];
  v172 = STACK[0x1570];
  LODWORD(STACK[0x1570]) = STACK[0x1570];
  v173 = v22 & 0x451A3B0A ^ 0x8CFCF3BA ^ v80 & (v171 ^ 0xC837AF6D);
  v174 = ((((2 * v173) & 0xA70F9444) - v173 + 746075613) >> 1) ^ 0x52C66B32;
  v175 = (v174 - 1926392729 - ((2 * v174) & 0x1A5B28CE)) ^ v172;
  LOBYTE(v116) = STACK[0x1778];
  LODWORD(STACK[0x1700]) = v41;
  v176 = v41 & 0xA ^ 2;
  LODWORD(STACK[0x1330]) = v176;
  v177 = v41 & 0x15 ^ 5;
  LODWORD(STACK[0x14B8]) = v177;
  v178 = ((v175 & v61) >> v177 >> v176) ^ ((v175 & v75) << (v116 & 0x1D ^ 5) << (~(_BYTE)v116 & 2));
  LODWORD(STACK[0x14F8]) = v178 - 1926392729 - ((2 * v178) & 0x1A5B28CE);
  v179 = ((LODWORD(STACK[0x1408]) ^ 0xB4E9390B ^ LODWORD(STACK[0x1418]))
        - 1926392729
        - ((2 * (LODWORD(STACK[0x1408]) ^ 0xB4E9390B ^ LODWORD(STACK[0x1418]))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1560]);
  v180 = (v179 - 1926392729 - ((2 * v179) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1648]);
  v181 = (v180 - 1926392729 - ((2 * v180) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1828]);
  v182 = LODWORD(STACK[0x1370]) ^ 0x8D2D9467 ^ (v181 - 1926392729 - ((2 * v181) & 0x1A5B28CE));
  v183 = LODWORD(STACK[0x1390]) ^ 0x8D2D9467 ^ (v182 - 1926392729 - ((2 * v182) & 0x1A5B28CE));
  v184 = (v183 - 1926392729 - ((2 * v183) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17B0]);
  LODWORD(STACK[0x1260]) = v184;
  v185 = (v184 - 1926392729 - ((2 * v184) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1858]);
  v186 = (v185 - 1926392729 - ((2 * v185) & 0x1A5B28CE)) ^ LODWORD(STACK[0x156C]);
  LODWORD(STACK[0x1238]) = v114 + 173231377;
  v187 = (v114 + 173231377) ^ 0xA2FCD972;
  LODWORD(STACK[0x1368]) = v187;
  v188 = (v186 - 1926392729 - ((2 * v186) & 0x1A5B28CE)) ^ v187;
  v189 = LODWORD(STACK[0x1388]) ^ 0x8D2D9467 ^ (v188 - 1926392729 - ((2 * v188) & 0x1A5B28CE));
  LODWORD(STACK[0x1470]) = v132;
  v190 = (v189 - 1926392729 - ((2 * v189) & 0x1A5B28CE)) ^ v132;
  LODWORD(STACK[0x1548]) = v190 - 1926392729 - ((2 * v190) & 0x1A5B28CE);
  v191 = STACK[0x18B0];
  v192 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 14)) ^ ((1772489163 * (v191 + 14)) >> 16))) >> 24;
  LOBYTE(v192) = (-105
                * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 14)) ^ ((1772489163 * (v191 + 14)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 14)) ^ ((1772489163 * (v191 + 14)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144D8) ^ *(_BYTE *)(STACK[0xC80] + v192) ^ *(_BYTE *)(v192 + STACK[0xC90] + 1) ^ *(_BYTE *)(v192 + STACK[0xC70] + 4);
  v193 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 13)) ^ ((1772489163 * (v191 + 13)) >> 16))) >> 24;
  LOBYTE(v176) = (-105
                * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 13)) ^ ((1772489163 * (v191 + 13)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 13)) ^ ((1772489163 * (v191 + 13)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144D9) ^ *(_BYTE *)(STACK[0xC80] + v193) ^ *(_BYTE *)(v193 + STACK[0xC90] + 1) ^ *(_BYTE *)(v193 + STACK[0xC70] + 4);
  v194 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 8)) ^ ((1772489163 * (v191 + 8)) >> 16))) >> 24;
  v195 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 15)) ^ ((1772489163 * (v191 + 15)) >> 16))) >> 24;
  LOBYTE(v195) = (-111
                * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 15)) ^ ((1772489163 * (v191 + 15)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 15)) ^ ((1772489163 * (v191 + 15)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144D7) ^ *(_BYTE *)(STACK[0xD00] + v195) ^ *(_BYTE *)(STACK[0xD08] + v195 + 1) ^ *(_BYTE *)(STACK[0xD10] + v195 + 1);
  v196 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 4)) ^ ((1772489163 * (v191 + 4)) >> 16))) >> 24;
  v197 = (unint64_t)(1772489163 * ((1772489163 * (_DWORD)v191) ^ ((1772489163 * v191) >> 16))) >> 24;
  LODWORD(v197) = (((-53 * ((-53 * v191) ^ ((1772489163 * v191) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144E6) ^ (-105 * ((1772489163 * ((1772489163 * (_DWORD)v191) ^ ((1772489163 * v191) >> 16))) >> 24)) ^ *(_BYTE *)(STACK[0xC80] + v197) ^ *(_BYTE *)(v197 + STACK[0xC90] + 1) ^ *(_BYTE *)(v197 + STACK[0xC70] + 4)) ^ 0x12)
                + 102193962;
  v198 = (2 * (v197 & 0x5D8)) & 0x7F0 ^ v197 & 0x5D8 ^ ((2 * (v197 & 0x5D8)) | 0x28000) & (v197 ^ 0xE355A26A);
  v199 = (2 * (v197 ^ 0xE355A26A)) & 0xC7B2 ^ 0x92 ^ ((2 * (v197 ^ 0xE355A26A)) ^ 0x2540CF64) & (v197 ^ 0xE355A26A);
  v200 = (4 * v198) & 0x1ABCE7B0 ^ v198 ^ ((4 * v198) ^ 0x20000) & v199;
  v201 = (4 * v199) & 0x1ABCE7B0 ^ 0x100C6132 ^ ((4 * v199) ^ 0x60429EC8) & v199;
  v202 = (16 * v200) & 0x1ABCE7B0 ^ v200 ^ ((16 * v200) ^ 0x5C0000) & v201;
  v203 = (16 * v201) & 0x1ABCE7B0 ^ 0x10308492 ^ ((16 * v201) ^ 0xABCE7B20) & v201;
  v204 = v202 ^ (v202 << 8) & 0x1ABCE700 ^ ((v202 << 8) ^ 0x19C00000) & v203;
  LODWORD(v197) = v197 ^ (2
                        * (((v204 ^ 0x22527B2) << 16) & 0x1ABC0000 ^ v204 ^ 0x22527B2 ^ (((v204 ^ 0x22527B2) << 16) ^ 0x67B20000) & ((v203 << 8) & 0x1ABC0000 ^ 0x2180000 ^ ((v203 << 8) ^ 0x3CE70000) & v203)));
  v205 = 1772489163 * ((1772489163 * ((_DWORD)v191 + 3)) ^ ((1772489163 * (v191 + 3)) >> 16));
  v206 = *(unsigned __int8 *)(STACK[0x18B0] - 0x3032385379A144E3) ^ v205;
  v205 >>= 24;
  HIDWORD(v207) = v206 ^ -(int)v205 ^ *(unsigned __int8 *)(STACK[0xC80] + v205) ^ *(unsigned __int8 *)(v205 + STACK[0xC90] + 1) ^ *(unsigned __int8 *)(v205 + STACK[0xC70] + 4);
  LODWORD(v207) = (v206 ^ (39 * (_DWORD)v205) ^ *(unsigned __int8 *)(STACK[0xC78] + v205) ^ *(unsigned __int8 *)(STACK[0xC68] + v205) ^ *(unsigned __int8 *)(v205 + STACK[0xC88] + 7)) << 24;
  v208 = STACK[0x18B8];
  v209 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 9)) ^ ((1772489163 * (v191 + 9)) >> 16))) >> 24;
  v210 = ((v207 >> 27) ^ 0x9D) + 172009602;
  v211 = (2 * (v210 & 0x1FF)) & 0x18C ^ v210 & 0x1FF ^ ((2 * (v210 & 0x1FF)) | 0x1000) & (v210 ^ 0xBC545872);
  v212 = (2 * (v210 ^ 0xBC545872)) & 0x18C ^ 0x485 ^ ((2 * (v210 ^ 0xBC545872)) ^ 0x9214011A) & (v210 ^ 0xBC545872);
  v213 = (4 * v211) & 0x49EB058C ^ v211 ^ ((4 * v211) | 0x2000) & v212;
  v214 = (4 * v212) & 0x49EB058C ^ 0x48430189 ^ ((4 * v212) ^ 0x27AC1634) & v212;
  v215 = (16 * v213) & 0x49EB0580 ^ v213 ^ ((16 * v213) ^ 0x8000) & v214;
  v216 = (16 * v214) & 0x49EB0580 ^ 0x414B050D ^ ((16 * v214) ^ 0x9EB058D0) & v214;
  v217 = v215 ^ (v215 << 8) & 0x49EB0500 ^ ((v215 << 8) ^ 0x80000) & v216;
  v218 = v210 ^ (2
               * (((v217 ^ 0x49E30D8D) << 16) & 0x49EB0000 ^ v217 ^ 0x49E30D8D ^ (((v217 ^ 0x49E30D8D) << 16) ^ 0x58D0000) & ((v216 << 8) & 0x49EB0000 ^ 0xEA0000 ^ ((v216 << 8) ^ 0x6B050000) & v216)));
  v219 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 7)) ^ ((1772489163 * (v191 + 7)) >> 16))) >> 24;
  v220 = STACK[0x1468];
  v221 = *(unsigned __int8 *)(v220
                            + ((39
                                               * ((1772489163
                                                 * ((1772489163 * ((_DWORD)v191 + 7)) ^ ((1772489163 * (v191 + 7)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 7)) ^ ((1772489163 * (v191 + 7)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144DFLL) ^ *(_BYTE *)(STACK[0xC78] + v219) ^ *(_BYTE *)(STACK[0xC68] + v219) ^ *(_BYTE *)(v219 + STACK[0xC88] + 7))) | (*(unsigned __int8 *)(v220 + ((-105 * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 4)) ^ ((1772489163 * (v191 + 4)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 4)) ^ ((1772489163 * (v191 + 4)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144E2) ^ *(_BYTE *)(STACK[0xC80] + v196) ^ *(_BYTE *)(v196 + STACK[0xC90] + 1) ^ *(_BYTE *)(v196 + STACK[0xC70] + 4))) << 24);
  v222 = (unint64_t)(1772489163
                          * ((1772489163 * (_DWORD)v191 + 1772489163) ^ ((1772489163 * v191 + 1772489163) >> 16))) >> 24;
  LOBYTE(v219) = (39
                * ((1772489163
                  * ((1772489163 * (_DWORD)v191 + 1772489163) ^ ((1772489163 * v191 + 1772489163) >> 16))) >> 24)) ^ (-53 * ((-53 * v191 - 53) ^ ((1772489163 * v191 + 1772489163) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144E5) ^ *(_BYTE *)(STACK[0xC78] + v222) ^ *(_BYTE *)(STACK[0xC68] + v222) ^ *(_BYTE *)(v222 + STACK[0xC88] + 7);
  LODWORD(v194) = (*(unsigned __int8 *)(v220
                                      + ((-105
                                                         * ((1772489163
                                                           * ((1772489163 * ((_DWORD)v191 + 8)) ^ ((1772489163 * (v191 + 8)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 8)) ^ ((1772489163 * (v191 + 8)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144DELL) ^ *(_BYTE *)(STACK[0xC80] + v194) ^ *(_BYTE *)(v194 + STACK[0xC90] + 1) ^ *(_BYTE *)(v194 + STACK[0xC70] + 4))) << 24) | (*(unsigned __int8 *)(v220 + ((39 * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 9)) ^ ((1772489163 * (v191 + 9)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 9)) ^ ((1772489163 * (v191 + 9)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144DDLL) ^ *(_BYTE *)(STACK[0xC78] + v209) ^ *(_BYTE *)(STACK[0xC68] + v209) ^ *(_BYTE *)(v209 + STACK[0xC88] + 7))) << 16);
  v223 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 2)) ^ ((1772489163 * (v191 + 2)) >> 16))) >> 24;
  LOBYTE(v223) = (39
                * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 2)) ^ ((1772489163 * (v191 + 2)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 2)) ^ ((1772489163 * (v191 + 2)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144E4) ^ *(_BYTE *)(STACK[0xC78] + v223) ^ *(_BYTE *)(STACK[0xC68] + v223) ^ *(_BYTE *)(v223 + STACK[0xC88] + 7);
  v224 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 6)) ^ ((1772489163 * (v191 + 6)) >> 16))) >> 24;
  v225 = STACK[0xD68];
  v226 = STACK[0xD60];
  v227 = STACK[0xD70];
  LOBYTE(v224) = (-75
                * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 6)) ^ ((1772489163 * (v191 + 6)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 6)) ^ ((1772489163 * (v191 + 6)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144E0) ^ *(_BYTE *)(STACK[0xD68] + v224) ^ *(_BYTE *)(STACK[0xD60] + v224) ^ *(_BYTE *)(v224 + STACK[0xD70] + 3);
  v228 = (2062560650 - (STACK[0x1340] & 1 | 0x7AF02D8A) + (STACK[0x1340] & 0xA | 0x850FD275)) ^ 0xE4E7C580;
  LOBYTE(v218) = *(_BYTE *)(STACK[0x18B8] + (v218 ^ 0x657B56E5u)) - 38;
  v229 = ((STACK[0x1340] & 2) + (STACK[0x1340] & 0xB ^ 0xFFFFFFF6) + (STACK[0x1340] & 2 | 0xEC39779) + 1) ^ 0x2727937B;
  LODWORD(v197) = *(unsigned __int8 *)(v220
                                     + ((v218 ^ (v218 >> 5) ^ (v218 >> 4)) ^ 0xE2u)) | (*(unsigned __int8 *)(v220 + (63 * (*(_BYTE *)(STACK[0x18B8] + (v197 ^ 0xC9F08ABC)) ^ 9))) << 24);
  v230 = STACK[0x1538] & 8;
  v231 = LODWORD(STACK[0x1548]) ^ LODWORD(STACK[0x1554]);
  LODWORD(STACK[0x1240]) = v231;
  v232 = v221 | (*(unsigned __int8 *)(v220 + v224) << ((v230 + 40 - 2 * v230) ^ 0x28 | v230 ^ 8));
  LOBYTE(v224) = ((v231 & 0xF ^ 0xF) + (v231 & 0xF)) ^ (71 * *(_BYTE *)(v220 + v219)) ^ *(_BYTE *)(v208 + (71 * *(_BYTE *)(v220 + v219)) + 22881);
  v233 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 12)) ^ ((1772489163 * (v191 + 12)) >> 16))) >> 24;
  LOBYTE(v233) = (-75
                * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 12)) ^ ((1772489163 * (v191 + 12)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 12)) ^ ((1772489163 * (v191 + 12)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144DALL) ^ *(_BYTE *)(v225 + v233) ^ *(_BYTE *)(v226 + v233) ^ *(_BYTE *)(v233 + v227 + 3);
  v234 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 5)) ^ ((1772489163 * (v191 + 5)) >> 16))) >> 24;
  v235 = v191
       + ((-1047618769 - (v229 | 0xC18E9B2F) + (v229 | 0x3E7164D0)) ^ 0x179560D3)
       + ((723527781 - (v228 | 0x2B202865) + (v228 | 0xD4DFD79A)) ^ 0xB537C06C);
  LOBYTE(v228) = *(_BYTE *)(v235 - 0x3032385379A144E6);
  LOBYTE(v234) = (-75
                * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 5)) ^ ((1772489163 * (v191 + 5)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 5)) ^ ((1772489163 * (v191 + 5)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144E1) ^ *(_BYTE *)(v225 + v234) ^ *(_BYTE *)(v226 + v234) ^ *(_BYTE *)(v234 + v227 + 3);
  v236 = 1772489163 * ((1772489163 * (_DWORD)v235) ^ ((1772489163 * v235) >> 16));
  LOBYTE(v236) = (-75 * BYTE3(v236)) ^ v236 ^ v228 ^ *(_BYTE *)(v225 + (v236 >> 24)) ^ *(_BYTE *)(v226 + (v236 >> 24)) ^ *(_BYTE *)((v236 >> 24) + v227 + 3);
  LODWORD(v197) = v197 & 0xFF00FFFF | (((v224 ^ 0xAA) - 107) << 16);
  v237 = (unint64_t)(1772489163
                          * ((1772489163 * ((_DWORD)v191 + 10)) ^ ((1772489163 * (v191 + 10)) >> 16))) >> 24;
  LOBYTE(v237) = (-75
                * ((1772489163 * ((1772489163 * ((_DWORD)v191 + 10)) ^ ((1772489163 * (v191 + 10)) >> 16))) >> 24)) ^ (-53 * ((-53 * (v191 + 10)) ^ ((1772489163 * (v191 + 10)) >> 16))) ^ *(_BYTE *)(v191 - 0x3032385379A144DCLL) ^ *(_BYTE *)(v225 + v237) ^ *(_BYTE *)(v226 + v237) ^ *(_BYTE *)(v237 + v227 + 3);
  LODWORD(v223) = v197 | (*(unsigned __int8 *)(v220 + v223) << 8);
  LODWORD(v227) = STACK[0x16E0];
  LODWORD(v194) = v194 | *(unsigned __int8 *)(v220 + v236);
  LODWORD(v233) = (*(unsigned __int8 *)(v220 + v192) << 8) | (*(unsigned __int8 *)(v220
                                                                                                  + v176) << 16) | *(unsigned __int8 *)(v220 + v195) | (*(unsigned __int8 *)(v220 + v233) << 24);
  LODWORD(v192) = v232 | (*(unsigned __int8 *)(v220 + v234) << 16);
  LODWORD(v223) = v223 ^ (((v223 & v227 ^ 0x2080CA0)
                         - ((2 * (v223 & v227 ^ 0x2080CA0)) & 0x8A8034C)
                         + 72614310) >> 1);
  LODWORD(v195) = v192 & LODWORD(STACK[0x1698]) ^ 0x40293422;
  v238 = STACK[0x1730];
  v239 = STACK[0x1730];
  LODWORD(STACK[0x1730]) = STACK[0x1730];
  v240 = v223 & 0xFD26DBF9 ^ 0x1260281 ^ (v223 ^ 0x32E0683) & (v238 ^ 0x700B4F9E);
  LODWORD(v197) = ((71 * *(_BYTE *)(v220 + v237)) ^ 0xB1) + 12619319;
  LODWORD(v237) = ((2 * (v197 & 0x828)) & 0xF03F | v197 & 0x828) ^ ((2 * (v197 & 0x828)) | 0x400) & (v197 ^ 0x16E878B2);
  LODWORD(v236) = (2 * (v197 ^ 0x16E878B2)) & 0x29A ^ 0x1328A ^ ((2 * (v197 ^ 0x16E878B2)) ^ 0x12286534) & (v197 ^ 0x16E878B2);
  LODWORD(v237) = (4 * v237) & 0x69D7B298 ^ v237 ^ ((4 * v237) ^ 0x60800) & v236;
  LODWORD(v236) = (4 * v236) & 0x69D7B298 ^ 0x48813092 ^ ((4 * v236) ^ 0x275ECA68) & v236;
  LODWORD(v237) = (16 * v237) & 0x69D7B290 ^ v237 ^ ((16 * v237) ^ 0x782000) & v236;
  LODWORD(v236) = (16 * v236) & 0xE9D7B290 ^ 0x6084921A ^ ((16 * v236) ^ 0x1D7B29A0) & v236;
  LODWORD(v237) = v237 ^ 0xA802109A ^ ((_DWORD)v237 << 8) & 0x69D7B200 ^ (((_DWORD)v237 << 8) ^ 0x57A20000) & v236;
  v241 = STACK[0x1720];
  LODWORD(v223) = v223 & 0x6C1F7A3E ^ 0x2C13101A ^ (v223 ^ 0x32E0683) & (LODWORD(STACK[0x1720]) ^ 0xE132EE59);
  LODWORD(v194) = v194 & 0xFFFF00FF | ((((*(_BYTE *)(v208
                                                                    + (v197 ^ (2
                                                                                           * (((_DWORD)v237 << 16) & 0x69D70000 ^ v237 ^ (((_DWORD)v237 << 16) ^ 0x329A0000) & (((_DWORD)v236 << 8) & 0x69D70000 ^ 0x28450000 ^ (((_DWORD)v236 << 8) ^ 0x57B20000) & v236))) ^ 0x6DB4AF1C))
                                                         - 84) ^ 0x29)
                                                       - 107) << 8);
  v242 = STACK[0x1778];
  LODWORD(v208) = STACK[0x1778] & 0xB ^ 3;
  LODWORD(STACK[0x11C0]) = v208;
  LOBYTE(v237) = v242;
  v243 = v242 & 0x14 ^ 4;
  LODWORD(STACK[0x1490]) = v243;
  LODWORD(v220) = STACK[0x1700];
  v244 = STACK[0x1700] & 0x1F ^ 7;
  LODWORD(STACK[0x144C]) = v244;
  v245 = (((1431875881 - (v223 | 0x5558B129) + (v223 | 0xAAA74ED6)) ^ 0x86BA5CCE) << v243 << v208)
       + (v240 >> v244);
  v246 = v245 - 1926392729 - ((2 * v245) & 0x1A5B28CE);
  LODWORD(STACK[0xE80]) = v246;
  LODWORD(v192) = v192 ^ ((-1581367503 - (v195 | 0xA1BE3F31) + (v195 | 0x5E41C0CE)) >> 1);
  LODWORD(v197) = v227;
  LODWORD(v208) = STACK[0x17A8];
  v247 = STACK[0x1800];
  LODWORD(v194) = v194 ^ (((v194 & v227 & 0x7649C40 ^ 0x2649C40)
                         + (v194 & v227 ^ 0x55892010)
                         - ((v194 & v227 ^ 0x55892010) & 0x7649C40)) >> 1);
  LODWORD(v195) = v194 & 0xFDDDC5B5 ^ 0x25C9C415 ^ (v194 ^ 0x2976DE28) & (LODWORD(STACK[0x17A8]) ^ 0x70F051D2);
  LODWORD(v192) = ((((((v192 ^ 0xF347A76) & (LODWORD(STACK[0x1838]) ^ 0xDBA71760) ^ v192 & 0x568A8307) & 0x8D2439A4 ^ 0x892438A1)
                   + (((v192 ^ 0xF347A76) & (LODWORD(STACK[0x1838]) ^ 0xDBA71760) ^ v192 & 0x568A8307) & 0x72DBC65B)
                   - 1) ^ 0x8F243AA6) << LODWORD(STACK[0x13A0]) << LODWORD(STACK[0x13B8])) | ((v192 & 0x35DA4904 ^ 0x5104804 ^ (v192 ^ 0xF347A76) & (LODWORD(STACK[0x17A8]) ^ 0xB8F7DD63)) >> (v247 & 0x1D ^ 5u) >> (~(_BYTE)v247 & 2));
  LODWORD(v234) = STACK[0x16C8];
  v248 = v192 + LODWORD(STACK[0x16C8]) + ~((2 * v192) & 0x1A5B28CE);
  LODWORD(STACK[0x1548]) = v248;
  LODWORD(v233) = v233 ^ ((v233 & STACK[0x14E4]) >> 1);
  LODWORD(v192) = (v194 ^ 0x2976DE28) & (v241 ^ 0x62BBCBB3) ^ v194 & 0xEF965FD4;
  LODWORD(v194) = v233 & LODWORD(STACK[0x1898]) ^ 0xA20A0D1;
  LODWORD(v226) = STACK[0x12F8];
  LODWORD(v227) = v92 & 9 ^ 1;
  LODWORD(STACK[0x11F8]) = v227;
  v249 = v92 & 0x16 ^ 6;
  LODWORD(STACK[0x1214]) = v249;
  LODWORD(v223) = v220 & 0x1E ^ 6;
  LODWORD(STACK[0x1218]) = v223;
  LODWORD(v192) = (((v192 & 0x7CAAE279 ^ 0x3828E239) + (v192 & 0x83551D86 ^ 0x3001185) - 1) ^ 0x123EADBD) << v249 << v227;
  v250 = (v220 & 1) == 0;
  LOBYTE(v249) = v220;
  LODWORD(STACK[0x1318]) = v250;
  v251 = v192 ^ (((-532487952 - (v195 | 0xE042E0F0) + (v195 | 0x1FBD1F0F)) ^ 0x13201F3A) >> v223 >> v250);
  LODWORD(v195) = v237 & 0x1E ^ 6;
  LODWORD(STACK[0x11D8]) = v195;
  LODWORD(v192) = ((((2 * (_DWORD)v194) | 0xB36C8E00) - (_DWORD)v194 + 642365696) ^ 0xD396E7D1) >> LODWORD(STACK[0x14D8]);
  LODWORD(v194) = (v237 & 1) == 0;
  LODWORD(STACK[0x11D0]) = v194;
  LODWORD(v223) = (((1359434093
                   - (v233 & v226 ^ 0x1818160 | 0x5107516D)
                   + (v233 & v226 ^ 0x1818160 | 0xAEF8AE92)) ^ 0xAF792FF2) << v194 << v195) ^ v192;
  LODWORD(STACK[0x11F0]) = v223;
  LODWORD(v195) = STACK[0x1338];
  LODWORD(STACK[0x130C]) = v251;
  LODWORD(v233) = 1051514347
                * (-442181838
                 - (((v195 ^ 0x406291D0) + 850459209) ^ ((v195 ^ 0xE6EAA6C3) - 1808216740) ^ ((v195 ^ 0xA6883713)
                                                                                            - 732275572))
                 + LODWORD(STACK[0x1434])
                 - (((v251 ^ 0x78D63FE7) + 168055936) ^ ((v251 ^ 0x9CE0E144) - 298677539) ^ ((v251 ^ 0xE436DEA3)
                                                                                           - 1763396292)));
  LODWORD(v233) = (v233 - WORD1(v233)) ^ ((v233 - WORD1(v233)) >> 8);
  LODWORD(v194) = LODWORD(STACK[0x1890]) ^ LODWORD(STACK[0x17F0]);
  LODWORD(STACK[0x1300]) = v194;
  LODWORD(v194) = v194 ^ LODWORD(STACK[0x14F8]);
  LODWORD(STACK[0x1310]) = v194;
  LODWORD(v192) = ((v194 & 0x19F25293 ^ 0x9201003) + (v194 & 0x19F25293 ^ 0x10D24290)) | 0xCCD04040;
  LODWORD(v195) = (v248 ^ 0x72D26B98) + 1;
  LODWORD(STACK[0x11C8]) = v195;
  LODWORD(v233) = -1036200693 * ((v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ v246);
  LODWORD(v194) = ((v233 + WORD1(v233)) ^ ((v233 + WORD1(v233)) >> 8)) - v223;
  LODWORD(STACK[0x11EC]) = v194;
  LODWORD(v233) = ((-578211601 * v194) ^ ((-578211601 * v194) >> 16) ^ (((-578211601 * (_DWORD)v194) ^ ((-578211601 * v194) >> 16)) >> 8))
                + v195;
  LODWORD(STACK[0x11E0]) = (LODWORD(STACK[0x1428]) ^ 0x8D2D9467)
                         - v233
                         + (~(1046599003 * v233) & 0xDDF252D3 | (1046599003 * v233) & v192) * 1046599003 * v233;
  v252 = STACK[0x16C0];
  LODWORD(v227) = STACK[0x147C];
  LODWORD(v233) = ((LODWORD(STACK[0x16C0]) ^ 0x73A09700) & (LODWORD(STACK[0x1750]) ^ LODWORD(STACK[0x147C])) ^ STACK[0x1750] & 0xFE8D0366) >> 1;
  LODWORD(v220) = STACK[0x1894];
  LODWORD(STACK[0x11BC]) = ((v233 ^ 0x46068033)
                          - 1926392729
                          - 2 * ((v233 ^ 0x46068033) & LODWORD(STACK[0x1894]) ^ v233 & 8)) ^ LODWORD(STACK[0x1750]);
  LODWORD(v233) = (LODWORD(STACK[0x1808]) - 1926392729 - ((2 * LODWORD(STACK[0x1808])) & 0x1A5B28CE)) ^ LODWORD(STACK[0xE44]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1668]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1710]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16D8]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1688]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14F0]);
  LODWORD(v237) = v234;
  LODWORD(v233) = (v233 + v234 + ~((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1780]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1738]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1528]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1558]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1610]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1690]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1420]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x161C]);
  LODWORD(v192) = (LODWORD(STACK[0x14A8]) - 1926392729 - ((2 * LODWORD(STACK[0x14A8])) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1438]);
  LODWORD(v192) = (v192 + v234 + ~((2 * v192) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1460]);
  LODWORD(v192) = (v192 - 1926392729 - ((2 * v192) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1570]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15F0]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1660]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x18A8]);
  LODWORD(v192) = (v192 - 1926392729 - ((2 * v192) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1524]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0xE24]);
  v253 = STACK[0x1840];
  LODWORD(v194) = v233 & 0x3E25CF62 ^ 0x3600C302 ^ (v233 ^ 0x54974720) & (STACK[0x1840] ^ 0xB3085B05);
  LODWORD(v233) = v233 ^ ((((2 * (_DWORD)v194) & 0x8AEECC76) - v194 - 1165452860) >> 1);
  LODWORD(v194) = (v233 ^ 0x18D1C9D3) & (v239 ^ 0xB3B1B41E) ^ v233 & 0x3E9C2079;
  v254 = (v192 - 1926392729 - ((2 * v192) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15C0]);
  LODWORD(v192) = (v254 ^ 0x54974720) & (STACK[0x1840] ^ 0x90083753) ^ v254 & 0x1D25A334;
  LODWORD(v223) = v192 & 0x1B9B0352 ^ 0x18910253 | v192 & 0xE464FCAC;
  LODWORD(v194) = (((v194 & 0x44E08790 ^ 0x40E08780)
                  + (v194 ^ 0x2C142078)
                  - ((v194 ^ 0x2C142078) & 0x44E08790)) ^ 0x7064A7B9) >> LODWORD(STACK[0x1380]) >> LODWORD(STACK[0x1378]);
  LODWORD(v192) = v92 & 0x1A ^ 2;
  LODWORD(STACK[0x12E0]) = v192;
  LODWORD(v233) = (v233 & 0xA4F182DA ^ 0xD180D2 ^ (v233 ^ 0x18D1C9D3) & (v241 ^ 0x29DC16BD)) << v192;
  LODWORD(v192) = ~v92 & 5;
  LODWORD(STACK[0x12EC]) = v192;
  LODWORD(STACK[0x1808]) = (v194 | ((_DWORD)v233 << v192))
                         - 1926392729
                         - ((2 * (v194 | ((_DWORD)v233 << v192))) & 0x1A5B28CE);
  LODWORD(v233) = v254 ^ ((v223 - 1) >> 1);
  LODWORD(STACK[0x1720]) = v241;
  LOBYTE(v225) = STACK[0x17A0];
  LOBYTE(v114) = STACK[0x17C0];
  LODWORD(v233) = (((v233 ^ 0x52DD4799) & (v241 ^ 0x1B3B4BB0) ^ 0x12144F91 ^ (v233 ^ 0x60000800) & 0x9616DFD7) << v225 << v114) | (((v233 ^ 0x52DD4799) & (v208 ^ 0x35A50A82) ^ (v233 ^ 0x60000800) & 0xB8889EE5 ^ 0x30880E81) >> (v249 & 0x12 ^ 2) >> (v249 & 0xD ^ 5));
  LODWORD(STACK[0x14A8]) = v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE);
  LODWORD(v233) = LODWORD(STACK[0x1520]) & v226;
  LODWORD(v194) = ((((v197 & (LODWORD(STACK[0x14C8]) ^ 0x1F8C0EED) ^ v252 & 0x92A19A8A) & 0x16858245 ^ 0x16850045)
                  + ((v197 & (LODWORD(STACK[0x14C8]) ^ 0x1F8C0EED) ^ v252 & 0x92A19A8A) & 0xE97A7DBA ^ 0x200009)
                  - 1) >> 1) ^ 0x4B424827;
  LODWORD(v194) = (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE)) ^ LODWORD(STACK[0x14C8]);
  LODWORD(v223) = v247 & 0xF ^ 7;
  LODWORD(STACK[0x12D0]) = v223;
  LODWORD(STACK[0x18A8]) = v247 & 0x10;
  LODWORD(STACK[0xE34]) = ((_DWORD)v233 << (v92 & 0xF ^ 7) << (v92 & 0x10)) ^ 0x8D2D9467 ^ (LODWORD(STACK[0x1584]) >> (v247 & 0x10) >> v223);
  LODWORD(v236) = STACK[0x17D8];
  LODWORD(v233) = 17098915 - (v194 & v236 ^ 0x89190582 | 0x104E8A3) + (v194 & v236 ^ 0x89190582 | 0xFEFB175C);
  v255 = STACK[0x1320];
  LODWORD(v194) = (((v194 & v255 ^ 0x4D2054B9)
                  - ((2 * (v194 & v255 ^ 0x4D2054B9)) & 0xDE7E6252)
                  + 1866412329) ^ 0x221F6590) >> LODWORD(STACK[0x1514]) >> LODWORD(STACK[0x1758]);
  LOBYTE(v208) = STACK[0x1350];
  LOBYTE(v246) = STACK[0x1348];
  LODWORD(STACK[0x1690]) = (v194 | ((v233 ^ 0x77E212DE) << v208 << v246))
                         - 1926392729
                         - ((2 * (v194 | ((v233 ^ 0x77E212DE) << v208 << v246))) & 0x1A5B28CE);
  LODWORD(v233) = (((((2 * (v236 & STACK[0x1848] ^ 0x1C0A00A8)) & 0x599D4A40)
                   - (v236 & STACK[0x1848] ^ 0x1C0A00A8)
                   + 1395743455) ^ 0x4F3B5A77) << LODWORD(STACK[0x1508])) | ((v255 & STACK[0x1848]) >> LODWORD(STACK[0x15AC]) >> LODWORD(STACK[0x15B0]));
  LODWORD(STACK[0x14C8]) = v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE);
  LODWORD(v192) = STACK[0x1458];
  LODWORD(v233) = v253 & 0x24D32E03 ^ 0xC32E00 ^ (LODWORD(STACK[0x1458]) ^ 0xA9FEBA64) & STACK[0x1698];
  LODWORD(v194) = ((2 * v233) & 0xB06D4864) - v233;
  LODWORD(v233) = ((LODWORD(STACK[0x1718]) ^ v227) & (v253 ^ 0x1E95489A) ^ STACK[0x1718] & 0x93B8DCFC) >> 1;
  LODWORD(v233) = ((v233 ^ 0x40944A32) - 1926392729 - 2 * ((v233 ^ 0x40944A32) & v220 ^ v233 & 8)) ^ LODWORD(STACK[0x1718]);
  v256 = ((v255 & v233 & 0x8A923D88 ^ 0x2903181) + (v255 & v233 & 0x756DC277) - 1) ^ 0x2903180;
  LOBYTE(v223) = STACK[0x1868] & 0xB;
  v257 = ((v236 & v233 ^ 0x628000D0) - ((2 * (v236 & v233 ^ 0x628000D0)) & 0x9255A14) - 2070762230) ^ 0xE612ADDA;
  LODWORD(v195) = v247 & 9 ^ 1;
  LODWORD(v233) = v247 & 0x16 ^ 6;
  LODWORD(STACK[0x12F0]) = v195;
  LODWORD(STACK[0x1668]) = v233;
  LODWORD(STACK[0x112C]) = (v256 >> v195 >> v233) ^ 0x8D2D9467 ^ (v257 << LODWORD(STACK[0x1540]) << LODWORD(STACK[0x1364]));
  LODWORD(v194) = (((_DWORD)v194 - 1479975987) ^ 0xA30B71CE) >> (v223 - 10 + (v223 ^ 0xB));
  LODWORD(v194) = (v194 + v234 + ~((2 * v194) & 0x1A5B28CE)) ^ v192;
  LODWORD(v195) = STACK[0x1898];
  v258 = STACK[0x1670];
  LODWORD(v223) = v258 & 0x5F21D49B ^ 0x47015498 ^ (v258 ^ 0x8D2D9467) & (v253 ^ 0xD20C40FC);
  LODWORD(v194) = ((((v194 & v226 & 0xA2D2B820 ^ 0xA0500821)
                   + (v194 & v226 & 0x5D2D47DF)
                   - 1) ^ 0xA0500820) << v246 << v208) | ((((v194 & v195 & 0xA8B8CEED ^ 0xA8B8CEC5)
                                                          + (v194 & v195 ^ 0x52000028)
                                                          - ((v194 & v195 ^ 0x52000028) & 0xA8B8CEED)) ^ 0xFAB8CEC5) >> LODWORD(STACK[0x1870]) >> LODWORD(STACK[0x1810]));
  LODWORD(STACK[0x1868]) = v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE);
  LODWORD(STACK[0x1154]) = (LODWORD(STACK[0x1588]) >> (v247 & 0x16 ^ 6) >> (v247 & 9 ^ 1)) ^ 0x8D2D9467 ^ ((((v226 & STACK[0x1664] & 0x71EE911E ^ 0x70E2101C) + (v226 & STACK[0x1664] ^ 0x851C8382) - ((v226 & STACK[0x1664] ^ 0x851C8382) & 0x71EE911E)) ^ 0xF4F2129C) << LODWORD(STACK[0x1510]) << LODWORD(STACK[0x1500]));
  LODWORD(v194) = (v223 - ((2 * (_DWORD)v223) & 0xF17BF5E4) - 121767182) >> 1;
  LODWORD(v208) = v220;
  LODWORD(v194) = ((v194 ^ 0x594E9D34) - 1926392729 - 2 * ((v194 ^ 0x594E9D34) & v220 ^ v194 & 8)) ^ v258;
  LODWORD(v192) = STACK[0x12D8];
  v259 = STACK[0x1680];
  LODWORD(v234) = v252;
  LODWORD(v227) = v247 & 0x17 ^ 7;
  LODWORD(STACK[0x12C4]) = v227;
  LODWORD(STACK[0x12C8]) = v247 & 8;
  LODWORD(v233) = STACK[0x1778];
  v260 = STACK[0x1778] & 0x1A ^ 2;
  LODWORD(STACK[0x1710]) = v260;
  v261 = ~(_DWORD)v233 & 5;
  LODWORD(STACK[0x1588]) = v261;
  LODWORD(STACK[0x1848]) = ((((v236 & v194 & 0x2F3DDCE4 ^ 0x2F3CD8C5)
                            + (v236 & v194 & 0xD0C2231B)
                            - 1) ^ 0x2F3CD8C4) << v260 << v261) ^ 0x8D2D9467 ^ (((((2
                                                                                  * (v195 & v194 ^ 0x80A200A1)) & 0x14B2DB12)
                                                                                - (v195 & v194 ^ 0x80A200A1)
                                                                                - 173632906) ^ 0x750492D7) >> (v247 & 8) >> v227);
  LODWORD(v194) = (((v192 ^ 0xE01FC752) & v259 ^ v252 & 0x6D325334) >> 1) ^ 0x6900812;
  LODWORD(v194) = (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE)) ^ v192;
  LODWORD(v220) = (((v194 & v226 ^ 0xC9023C01)
                  - ((2 * (v194 & v226 ^ 0xC9023C01)) & 0x260322CA)
                  - 1828613787) ^ 0x5A03AD64) << (~(_BYTE)v233 & 5) << v260;
  LODWORD(STACK[0x1458]) = v247 & 0x18;
  LODWORD(v233) = ~v247 & 7;
  LODWORD(STACK[0x12D8]) = v233;
  LODWORD(STACK[0x1664]) = v220 ^ 0x8D2D9467 ^ (((((2 * (v194 & v195 ^ 0x2A04090A)) & 0x98EB9460)
                                                - (v194 & v195 ^ 0x2A04090A)
                                                - 1282787889) ^ 0x998E3CC5) >> (v247 & 0x18) >> v233);
  LODWORD(v194) = STACK[0x1850] & 0xB00E6136 ^ 0x20110 ^ (v252 ^ 0x3D23F551) & (LODWORD(STACK[0x1850]) ^ 0x8D2D9467);
  LODWORD(v220) = (v252 ^ 0x39AB1856) & (LODWORD(STACK[0x160C]) ^ 0x8D2D9467) ^ STACK[0x160C] & 0xB4868C31;
  LODWORD(v194) = ((((2 * (_DWORD)v194) | 0xBC084898) - v194 + 570153908) >> 1) ^ 0x2F0512BD;
  LODWORD(v194) = (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1850]);
  LODWORD(v220) = ((v220 & 0xE448AC2A ^ 0x6048282A)
                 + (v220 ^ 0x84028401)
                 - ((v220 ^ 0x84028401) & 0xE448AC2A)) >> 1;
  LODWORD(v220) = ((v220 ^ 0x72275605) - 1926392729 - 2 * ((v220 ^ 0x72275605) & LODWORD(STACK[0x1638]) ^ v220 & 0x18)) ^ LODWORD(STACK[0x160C]);
  v262 = (v194 & v195 ^ 0x3414000) - ((2 * (v194 & v195 ^ 0x3414000)) & 0x66DFFF88);
  LODWORD(v233) = v92 & 0x1B ^ 3;
  LODWORD(STACK[0x160C]) = v233;
  LODWORD(v194) = (v194 & v236) << v233;
  LODWORD(v233) = ~v92 & 4;
  LODWORD(STACK[0x1850]) = v233;
  LOBYTE(v260) = STACK[0x126C];
  LODWORD(STACK[0x14F8]) = ((_DWORD)v194 << v233) ^ 0x8D2D9467 ^ (((v262 + 862977988) ^ 0x302EBFC4u) >> LODWORD(STACK[0x16F8]) >> v260);
  v263 = STACK[0x16F0] & 0xC62D4119 ^ 0x2000118 ^ (v234 ^ 0x4B00D57E) & (LODWORD(STACK[0x16F0]) ^ 0x8D2D9467);
  v264 = LODWORD(STACK[0x16F0]) ^ ((v263 - ((2 * v263) & 0x5E89826Cu) + 793035062) >> 1);
  v265 = (v264 ^ 0xD9997470) & (v241 ^ 0x30803482) ^ v264 & 0xBDADA0E5;
  LOBYTE(v257) = STACK[0x1650];
  LOBYTE(v227) = STACK[0x16B0];
  LODWORD(STACK[0x1810]) = ((v220 & v255) >> v257 >> v227) ^ 0x8D2D9467 ^ (((-1544333033
                                                                                         - (v220 & v236 ^ 0x78020A | 0xA3F35917)
                                                                                         + (v220 & v236 ^ 0x78020A | 0x5C0CA6E8)) ^ 0x5C74A4E2) << LODWORD(STACK[0x1400]) << LODWORD(STACK[0x13F8]));
  LOBYTE(v226) = STACK[0x1328];
  LODWORD(v194) = ((((v265 & 0x991735C3 ^ 0x11123542) + (v265 & 0x66E8CA3C ^ 0x4208005) - 1) ^ 0x8CBB9526) << LODWORD(STACK[0x11C0]) << LODWORD(STACK[0x1490]))
                + (((((2 * (v264 & 0xE8610211 ^ 0x10DF6425 ^ (v264 ^ 0xD9997470) & (LODWORD(STACK[0x1730]) ^ 0x654C9676))) & 0xD4861C32)
                   - (v264 & 0xE8610211 ^ 0x10DF6425 ^ (v264 ^ 0xD9997470) & (LODWORD(STACK[0x1730]) ^ 0x654C9676))
                   + 364704230) ^ 0xCD6295D3) >> v226 >> LODWORD(STACK[0x1450]));
  LODWORD(STACK[0x1758]) = v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE);
  LODWORD(v194) = (v253 ^ 0x44B1FDCE) & (LODWORD(STACK[0x17CC]) ^ LODWORD(STACK[0x147C]));
  LODWORD(v194) = ((((v194 ^ STACK[0x17CC] & 0xC99C69A8) >> 1) ^ 0x44860010)
                 + v237
                 + ~((2 * (((v194 ^ STACK[0x17CC] & 0xC99C69A8) >> 1) ^ 0x44860010)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17CC]);
  LODWORD(STACK[0x1490]) = (((((2 * (v255 & v194 ^ 0xB621101C)) & 0xE5DD95BE)
                            - (v255 & v194 ^ 0xB621101C)
                            - 1928252128) ^ 0x3B30253C) >> (v247 & 0x11 ^ 1) >> (v247 & 0xE ^ 6)) ^ ((v236 & v194) << (STACK[0x1778] & 0x8B ^ 3) << (STACK[0x1778] & 0x74 ^ 0x64)) ^ 0x8D2D9467;
  LODWORD(v194) = STACK[0x1488] & 0x1DED000B ^ 0xC89000A ^ (LODWORD(STACK[0x1488]) ^ 0x8D2D9467) & (v253 ^ 0x90C0946C);
  LODWORD(v194) = ((1554066310 - (v194 | 0x5CA12B86) + (v194 | 0xA35ED479)) >> 1) ^ 0x517D6A38;
  LODWORD(v194) = (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1488]);
  v266 = v195;
  LODWORD(v194) = ((((v195 & v194 & 0x58790ED0 ^ 0x18190611)
                   + (v195 & v194 & 0xA786F12F)
                   - 1) ^ 0x18190610) >> v227 >> v257) | ((((v236 & v194 & 0x4D8C5010 ^ 0x40801001)
                                                          - (v236 & v194 | 0x4D8C5010)
                                                          - 2) ^ 0xF2F3BFEF) << v225 << v114);
  LODWORD(STACK[0x1520]) = v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE);
  LODWORD(v194) = (STACK[0x14E4] & (LODWORD(STACK[0x1678]) ^ 0x461BD9C2) ^ v253 & 0xCB364DA4) >> 1;
  LODWORD(v194) = ((v194 ^ 0x44920212) - 1926392729 - 2 * ((v194 ^ 0x44920212) & v208 ^ v194 & 8)) ^ LODWORD(STACK[0x1678]);
  LODWORD(v208) = STACK[0x1688];
  LODWORD(v195) = STACK[0x14E4];
  v267 = (LODWORD(STACK[0x1688]) ^ 0x233CA872) & STACK[0x14E4] ^ v253 & 0xAE113C14;
  LODWORD(v223) = STACK[0x16D8];
  LODWORD(v220) = STACK[0x16E0] & (LODWORD(STACK[0x16D8]) ^ 0xA42082BB);
  LODWORD(v194) = ((v266 & v194) >> LODWORD(STACK[0x14D8]))
                + ((v236 & v194) << LODWORD(STACK[0x16B8]) << LODWORD(STACK[0x17E0]));
  LODWORD(STACK[0x1870]) = v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE);
  LODWORD(v220) = (((v234 & 0x290D16DC ^ 0x10D1290 ^ v220)
                  - ((2 * (v234 & 0x290D16DC ^ 0x10D1290 ^ v220)) & 0x30DAE9B0)
                  - 1737657128) >> 1) ^ 0x4836B906;
  LODWORD(v220) = (v220 - 1926392729 - ((2 * v220) & 0x1A5B28CE)) ^ v223;
  v268 = v255;
  v269 = (v220 & v255 ^ 0x1020008) - ((2 * (v220 & v255 ^ 0x1020008)) & 0x8BFB0202);
  v270 = STACK[0x12F8];
  v271 = (v220 & v270 & 0x5B9AFD0E ^ 0x4800EC0B) + (v220 & v270 & 0xA46502F1);
  LODWORD(v227) = STACK[0x1030];
  LODWORD(v220) = STACK[0x1698] & (LODWORD(STACK[0x1030]) ^ 0xD1A196CB);
  LODWORD(v194) = ((((v259 & (LODWORD(STACK[0x1518]) ^ 0x95C00920) ^ v234 & 0x18ED9D46) >> 1) ^ 0x416CA23)
                 - 1926392729
                 - 2
                 * ((((v259 & (LODWORD(STACK[0x1518]) ^ 0x95C00920) ^ v234 & 0x18ED9D46) >> 1) ^ 0x416CA23) & 0xD2D9477 ^ ((v259 & (LODWORD(STACK[0x1518]) ^ 0x95C00920) ^ v234 & 0x18ED9D46) >> 1) & 0x10)) ^ LODWORD(STACK[0x1518]);
  v272 = ((2 * (v194 & v236 ^ 0x84E8224)) & 0x4DDEA94E) - (v194 & v236 ^ 0x84E8224);
  v273 = (((v267 >> 1) ^ 0x46008A02) - 1926392729 - ((2 * ((v267 >> 1) ^ 0x46008A02)) & 0x1A5B28CE)) ^ v208;
  LODWORD(v223) = (v270 & v273 ^ 0x20C4990) - ((2 * (v270 & v273 ^ 0x20C4990)) & 0x9FB4FF2);
  v274 = (v255 & v273 ^ 0x68400180) - (v255 & v273 & 0x9205EA65) + (v255 & v273 & 0x9205EA65 ^ 0x9205EA65);
  LODWORD(v192) = STACK[0x14B0];
  v275 = ((510440489
         - (v194 & v266 ^ 0x468A004A | 0x1E6CB429)
         + (v194 & v266 ^ 0x468A004A | 0xE1934BD6)) ^ 0xA7194B9C) >> LODWORD(STACK[0x1220]) >> LODWORD(STACK[0x1228]);
  v276 = STACK[0x16A4];
  LODWORD(v194) = (v234 ^ 0x5E20DA3B) & (LODWORD(STACK[0x16A4]) ^ 0x8D2D9467) ^ STACK[0x16A4] & 0xD30D4E5C;
  LOBYTE(v208) = STACK[0x12C8];
  LOBYTE(v197) = STACK[0x12C4];
  LODWORD(STACK[0x1750]) = ((((_DWORD)v223 + 83732473) ^ 0x6F1EE69) << LODWORD(STACK[0x12E0]) << LODWORD(STACK[0x12EC])) ^ ((v274 ^ 0xFA45EBE5) >> v208 >> v197);
  LODWORD(v223) = (((v192 ^ 0x5E9D5D4) & v195 ^ v253 & 0x88C441B2) >> 1) ^ 0x44020011;
  LODWORD(v223) = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ v192;
  v277 = (v269 + 1174241537) ^ 0x44FF8109;
  v278 = ((v271 - 1) ^ 0x4800EC0A) << LODWORD(STACK[0x1508]);
  LOBYTE(v195) = STACK[0x16F8];
  LODWORD(STACK[0x1514]) = (v277 >> v260 >> v195)
                         + v278
                         - 1926392729
                         - ((2 * ((v277 >> v260 >> v195) + v278)) & 0x1A5B28CE);
  v279 = (((v194 & 0xB84E1BE5 ^ 0x384E19A1)
         + (v194 ^ 0xC000425C)
         - ((v194 ^ 0xC000425C) & 0xB84E1BE5)) >> 1) ^ 0x7CA1AEFE;
  LODWORD(v233) = STACK[0x1778];
  LODWORD(v194) = STACK[0x1778] & 0xC ^ 4;
  LODWORD(STACK[0x1718]) = v194;
  LODWORD(v233) = v233 & 0x13 ^ 3;
  LODWORD(STACK[0x16F0]) = v233;
  v280 = v275 + (((v272 + 1494264664) ^ 0x515E297C) << v194 << v233);
  LODWORD(STACK[0x16D8]) = v280 - 1926392729 - ((2 * v280) & 0x1A5B28CE);
  v281 = (v279 - 1926392729 - ((2 * v279) & 0x1A5B28CE)) ^ v276;
  v282 = v266;
  v283 = STACK[0x1740];
  LODWORD(v192) = STACK[0x147C];
  LODWORD(STACK[0x1670]) = ((((v223 & v270 & 0x1741A5D7 ^ 0x1740A1C7)
                            + (v223 & v270 ^ 0x2B5410)
                            - ((v223 & v270 ^ 0x2B5410) & 0x1741A5D7)) ^ 0x176AF1C7) << LODWORD(STACK[0x1860]) << LODWORD(STACK[0x14E8])) ^ 0x8D2D9467 ^ ((((v223 & v266 & 0x5039F087 ^ 0x303087) + (v223 & v266 ^ 0x5089C800) - ((v223 & v266 ^ 0x5089C800) & 0x5039F087)) ^ 0xB03887) >> v226 >> LODWORD(STACK[0x1450]));
  LODWORD(v223) = (((2 * (v253 & 0x5C8C02AC ^ 0x4880004 ^ v220)) & 0xF8B1248E)
                 - (v253 & 0x5C8C02AC ^ 0x4880004 ^ v220)
                 + 61304248) ^ 0xB236D98;
  LODWORD(v223) = ((v223 >> 1) - 1926392729 - (v223 & 0x1A5B28CE)) ^ v227;
  v284 = (v282 & v223 & 0xD4C95DE9 ^ 0xC4C95989)
       + (v282 & v223 ^ 0x31248462)
       - ((v282 & v223 ^ 0x31248462) & 0xD4C95DE9);
  v285 = ((v234 ^ 0xB5ED0384) & (v283 ^ v192) ^ v283 & 0x38C097E2) >> 1;
  v286 = ((v285 ^ 0x4004A31)
        + LODWORD(STACK[0x16C8])
        + ((2 * ((v285 ^ 0x4004A31) & 0xD2D9477 ^ v285 & 0x10)) ^ 0xFFFFFFDF)) ^ v283;
  LODWORD(v233) = STACK[0x15CC];
  LODWORD(v220) = v233 & 0xF6AA438B ^ 0x20020309 ^ (v233 ^ 0x8D2D9467) & (v253 ^ 0x7B87D7EC);
  LODWORD(v194) = STACK[0x11BC];
  LODWORD(v237) = (((v194 & v268 ^ 0x4004200)
                  - ((2 * (v194 & v268)) & 0x179B6B76)
                  + 198030779) ^ 0xFCDF7BB) >> v260 >> v195;
  v287 = ((34067480
         - (v270 & v223 ^ 0x10060120 | 0x207D418)
         + (v270 & v223 ^ 0x10060120 | 0xFDF82BE7)) ^ 0xEDFE2AC7) << LODWORD(STACK[0x1588]) << LODWORD(STACK[0x1710]);
  LODWORD(v223) = (((((2 * (v194 & v236 ^ 0x45008D6)) & 0x8A70F6A4)
                   - (v194 & v236 ^ 0x45008D6)
                   + 986154157) ^ 0x3E978C7B) << LODWORD(STACK[0x1358]) << LODWORD(STACK[0x1360]))
                + v237;
  LODWORD(STACK[0x10C8]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  v288 = v270;
  LODWORD(v227) = v192;
  LODWORD(v195) = STACK[0x14F0];
  LODWORD(v237) = (v253 ^ 0x9C93876) & (LODWORD(STACK[0x14F0]) ^ v192) ^ STACK[0x14F0] & 0x84E4AC10;
  LOBYTE(v283) = STACK[0x1650];
  LOBYTE(v194) = STACK[0x16B0];
  v289 = (((((2 * (v281 & v268 ^ 0x925A449E)) & 0x296BD2A) - (v281 & v268 ^ 0x925A449E) - 21716630) ^ 0x6CEEE5F4) >> v283 >> v194) | (((1451910480 - (v281 & v236 ^ 0x4543031C | 0x568A6550) + (v281 & v236 ^ 0x4543031C | 0xA9759AAF)) ^ 0xEC3699B3) << LODWORD(STACK[0x13D0]));
  LODWORD(STACK[0x1678]) = v289 - 1926392729 - ((2 * v289) & 0x1A5B28CE);
  v290 = ((v284 ^ 0xE5EDD98B) >> LODWORD(STACK[0x18A8]) >> LODWORD(STACK[0x12D0])) | v287;
  LODWORD(STACK[0x1588]) = v290 - 1926392729 - ((2 * v290) & 0x1A5B28CE);
  v291 = (-1926392729 - (v237 & 0x1A5B28CE) + ((v237 >> 1) ^ 0x42124200)) ^ v195;
  LODWORD(v195) = STACK[0x1818];
  v292 = (((2 * (v195 & 0xEDBD72FC ^ 0xC020404C)) | 0x7CE9CE0A) - (v195 & 0xEDBD72FC ^ 0xC020404C) + 1099634939) ^ 0xFD38E72D;
  LODWORD(v223) = (((v286 & v270 & 0xC232D105 ^ 0x8222D105) + (v286 & v270 & 0x3DCD2EFA ^ 0x90833) - 1) ^ 0x822BD937) << LODWORD(STACK[0x17E0]);
  LOBYTE(v270) = STACK[0x16B8];
  LODWORD(v223) = ((_DWORD)v223 << v270) | ((v286 & v268) >> v208 >> v197);
  LODWORD(STACK[0x1488]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LODWORD(STACK[0x1570]) = ((((v266 & v291 & 0xB94474DA ^ 0x91442499) + (v266 & v291 & 0x46BB8B25) - 1) ^ 0x91442498) >> v283 >> v194) ^ ((v236 & v291) << LODWORD(STACK[0x1790]) << LODWORD(STACK[0x1798]));
  v293 = ((((2 * (_DWORD)v220) & 0xEBF34AD6) - v220 - 1979295084) >> 1) ^ 0x17162CCF;
  v294 = (v293 - 1926392729 - ((2 * v293) & 0x1A5B28CE)) ^ v233;
  LODWORD(v197) = v266;
  LODWORD(v223) = (v294 & v282 & 0xB654EA61 ^ 0xB6140860) + (v294 & v282 & 0x49AB159E ^ 0x88B0009);
  LODWORD(v194) = v195;
  LODWORD(v220) = v195 & 0xAF697E5B ^ 0xAC695E1A ^ (v234 ^ 0x2244EA3C) & (v195 ^ 0x8D2D9467);
  LODWORD(v192) = STACK[0x1440];
  v295 = v253;
  v296 = STACK[0x13E8];
  LODWORD(v220) = (((_DWORD)v220 + 2024369094 - ((2 * (_DWORD)v220) & 0xF152F078) + 3190) >> 1) ^ 0x2CF49932;
  v297 = STACK[0x1700];
  LODWORD(v195) = STACK[0x1700] & 0x1D ^ 5;
  LODWORD(STACK[0x126C]) = v195;
  LODWORD(v233) = ~v297 & 2;
  LODWORD(STACK[0x16A4]) = v233;
  LOBYTE(v276) = STACK[0x1850];
  LOBYTE(v208) = STACK[0x160C];
  LODWORD(v223) = ((((_DWORD)v223 - 1) ^ 0xBE9F0868) >> v233 >> v195) | ((v294 & v236) << v276 << v208);
  LODWORD(STACK[0x1138]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LODWORD(v223) = ((v220 + LODWORD(STACK[0x1144]) - ((2 * v220) & 0x1A5B28CE)) ^ v194) & 0x12428D03 | (((2 * v292) & 0xC7350AB8) - v292 + 476412577) ^ v220 & 0x6DBD72FC ^ 0x12242AA1;
  LOBYTE(v194) = STACK[0x1800];
  LOBYTE(v284) = v194 & 0xD ^ 5;
  LOBYTE(v271) = v194 & 0x12 ^ 2;
  LODWORD(v223) = (((((2 * (v223 & v268 ^ 0x24285287)) | 0x4DED26C)
                   - (v223 & v268 ^ 0x24285287)
                   - 40855862) ^ 0x26473BB1) >> v271 >> v284)
                + ((v223 & v288) << LODWORD(STACK[0x16F0]) << LODWORD(STACK[0x1718]));
  LODWORD(STACK[0x16F8]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LODWORD(v223) = (((v253 ^ 0x303143DC) & (v296 ^ v227) ^ v296 & 0xBD1CD7BA) >> 1) ^ 0x46864A11;
  LODWORD(v223) = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ v296;
  LODWORD(v237) = STACK[0x16E0];
  LODWORD(v220) = v234 & 0xFC6DEFD5 ^ 0xF0490594 ^ STACK[0x16E0] & (LODWORD(STACK[0x1780]) ^ 0x71407BB2);
  v298 = (((v192 ^ v227) & (v253 ^ 0xB7F64A58) ^ v192 & 0x3ADBDE3E) >> 1) ^ 0x404CA13;
  v299 = (v298 - 1926392729 - ((2 * v298) & 0x1A5B28CE)) ^ v192;
  LODWORD(v220) = (v220 - ((2 * (_DWORD)v220) & 0x5EDA21A0) + 795676880) >> 1;
  LODWORD(v194) = STACK[0x1638];
  LODWORD(v220) = ((v220 ^ 0x2984C880) - 1926392729 - 2 * ((v220 ^ 0x2984C880) & LODWORD(STACK[0x1638]) ^ v220 & 0x18)) ^ LODWORD(STACK[0x1780]);
  LODWORD(v226) = v236;
  LODWORD(v195) = STACK[0x1778];
  LODWORD(v233) = ~LODWORD(STACK[0x1778]) & 7;
  LODWORD(STACK[0x17CC]) = v233;
  LODWORD(STACK[0x1780]) = v195 & 0x18;
  LOBYTE(v253) = STACK[0x1330];
  LODWORD(STACK[0x15CC]) = ((v220 & v268) >> LODWORD(STACK[0x14B8]) >> v253) ^ ((v220 & v236) << v233 << (v195 & 0x18));
  LODWORD(v223) = ((((v197 & v223 ^ 0x202C640)
                   - ((2 * (v197 & v223 ^ 0x202C640)) & 0x44DE8D06)
                   + 577717891) ^ 0x206D80C3) >> LODWORD(STACK[0x12D8]) >> LODWORD(STACK[0x1458]))
                + ((((v288 & v223 & 0xE8013912 ^ 0x80013101) + (v288 & v223 & 0x17FEC6ED) - 1) ^ 0x80013100) << v276 << v208);
  LODWORD(STACK[0x1064]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  v300 = v236 & v299;
  LODWORD(v223) = (v197 & v299) >> LODWORD(STACK[0x144C]);
  LOBYTE(v236) = STACK[0x1510];
  LOBYTE(v197) = STACK[0x1500];
  LODWORD(STACK[0x1584]) = v223
                         + (v300 << v236 << v197)
                         - 1926392729
                         - ((2 * (v223 + (v300 << v236 << v197))) & 0x1A5B28CE);
  LODWORD(v223) = STACK[0x12B8] & 0xD256AEF5 ^ 0x92100A05 ^ (v234 ^ 0x5F7B3A92) & (LODWORD(STACK[0x12B8]) ^ 0x8D2D9467);
  LODWORD(v223) = ((-684150394 - (v223 | 0xD738B186) + (v223 | 0x28C74E79)) >> 1) ^ 0x1D69E00C;
  LODWORD(v223) = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ LODWORD(STACK[0x12B8]);
  LODWORD(v192) = STACK[0x17BC];
  v301 = (v192 ^ 0x8D2D9467) & (v295 ^ 0x96C20AFC) ^ v192 & 0x1BEF9E9B;
  LODWORD(v227) = STACK[0x1680];
  LODWORD(v220) = (STACK[0x1680] & (LODWORD(STACK[0x1738]) ^ 0xF657D526) ^ v234 & 0x7B7A4140) >> 1;
  LODWORD(v220) = ((v220 ^ 0x4940020) - 1926392729 - 2 * ((v220 ^ 0x4940020) & 0xD2D9477 ^ v220 & 0x10)) ^ LODWORD(STACK[0x1738]);
  LODWORD(v220) = (((305980574
                   - (v220 & v268 ^ 0x1B568004 | 0x123CE49E)
                   + (v220 & v268 ^ 0x1B568004 | 0xEDC31B61)) ^ 0xF6959B65) >> LODWORD(STACK[0x1668]) >> LODWORD(STACK[0x12F0])) | ((v220 & v288) << LODWORD(STACK[0x159C]) << LODWORD(STACK[0x1530]));
  LODWORD(STACK[0x1030]) = v220 - 1926392729 - ((2 * v220) & 0x1A5B28CE);
  v302 = (((v301 & 0xD23C27A6 ^ 0xC2142327 | v301 & 0x2DC3D858) - 1) >> 1) ^ 0x659CDB92;
  v303 = (v302 - 1926392729 - ((2 * v302) & 0x1A5B28CE)) ^ v192;
  LODWORD(v220) = (v223 & v226) << v270 << LODWORD(STACK[0x17E0]);
  LODWORD(v223) = v223 & v268;
  LOBYTE(v268) = STACK[0x18A8];
  LOBYTE(v195) = STACK[0x12D0];
  LODWORD(STACK[0x14F0]) = v220 ^ 0x8D2D9467 ^ (v223 >> v268 >> v195);
  LODWORD(v192) = STACK[0x1644];
  v304 = STACK[0x147C];
  LODWORD(v220) = v234 & 0x9C4BBABD ^ 0x8C4898B4 ^ v237 & (LODWORD(STACK[0x11B0]) ^ 0x11662EDA);
  LODWORD(v220) = (((2 * (_DWORD)v220) | 0xCA4B3EAC) - v220 + 450519210) >> 1;
  LODWORD(v220) = ((v220 ^ 0x72B24BE3) + LODWORD(STACK[0x16C8]) + ~(2 * ((v220 ^ 0x72B24BE3) & 0xD2D9477 ^ v220 & 0x10))) ^ LODWORD(STACK[0x11B0]);
  v305 = STACK[0x1898];
  v306 = ((STACK[0x1898] & v303) >> LODWORD(STACK[0x13C0]) >> LODWORD(STACK[0x13E0])) | ((((v288 & v303 ^ 0x302C4402)
                                                                                         - ((2
                                                                                           * (v288 & v303 ^ 0x302C4402)) & 0x6B186266)
                                                                                         + 898380083) ^ 0x5A07531) << v276 << v208);
  LODWORD(STACK[0x1518]) = v306 - 1926392729 - ((2 * v306) & 0x1A5B28CE);
  LODWORD(v208) = v305;
  v307 = STACK[0x1840];
  v308 = STACK[0x1558];
  LODWORD(v237) = STACK[0x1558] & 0xE65C61C4 ^ 0xE24040C0 ^ (LODWORD(STACK[0x1558]) ^ 0x8D2D9467) & (STACK[0x1840] ^ 0x6B71F5A3);
  v309 = ((((v220 & v226 & 0x1D19E55C ^ 0x1D198515)
          + (v220 & v226 & 0xE2E61AA3)
          - 1) ^ 0x1D198514) << LODWORD(STACK[0x1364]) << LODWORD(STACK[0x1540]))
       + (((((2 * (v220 & v305 ^ 0x40221008)) & 0xB0435AA)
          - (v220 & v305 ^ 0x40221008)
          - 92412630) ^ 0xBA5FF522) >> v271 >> v284);
  LODWORD(STACK[0x1710]) = v309 - 1926392729 - ((2 * v309) & 0x1A5B28CE);
  v310 = STACK[0x1610];
  LODWORD(v225) = v227;
  LODWORD(v223) = ((v234 ^ 0x1330CC38) & (v192 ^ v304) ^ v192 & 0x9E1D585E) >> 1;
  LODWORD(v223) = ((v223 ^ 0x46068823) - 1926392729 - 2 * ((v223 ^ 0x46068823) & v194 ^ v223 & 0x18)) ^ v192;
  LODWORD(v237) = ((v237 - ((2 * (_DWORD)v237) & 0x52A83DD6) + 693378795) >> 1) ^ 0x278C2F37;
  LODWORD(v237) = (v237 - 1926392729 - ((2 * v237) & 0x1A5B28CE)) ^ v308;
  v311 = STACK[0x1320];
  LODWORD(v223) = (((((2 * (v223 & v305 ^ 0x5298021C)) | 0xF0653A44)
                   - (v223 & v305 ^ 0x5298021C)
                   - 2016582946) ^ 0x2AAA9F3E) >> v195 >> v268)
                + ((((v223 & v226 & 0x945BDDE6 ^ 0x140258E2)
                   + (v223 & v226 ^ 0xAB7DA71C)
                   - ((v223 & v226 ^ 0xAB7DA71C) & 0x945BDDE6)) ^ 0x3F267AFA) << v236 << v197);
  LODWORD(STACK[0x1364]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LODWORD(v223) = (v227 & (v310 ^ 0xD896BE5A) ^ v234 & 0x55BB2A3C) >> 1;
  v312 = STACK[0x1894];
  LODWORD(v223) = ((v223 ^ 0x2948012) - 1926392729 - 2 * ((v223 ^ 0x2948012) & LODWORD(STACK[0x1894]) ^ v223 & 8)) ^ v310;
  v313 = STACK[0x1120];
  LODWORD(v195) = v304;
  LOBYTE(v192) = STACK[0x16F0];
  LOBYTE(v233) = STACK[0x1718];
  LODWORD(v194) = ((((v223 & v305 & 0xBF87F2BF ^ 0xBF86F23B)
                   + (v223 & v305 ^ 0x4100C4)
                   - ((v223 & v305 ^ 0x4100C4) & 0xBF87F2BF)) ^ 0xBFC6F27B) >> v253 >> LODWORD(STACK[0x14B8]))
                + ((v223 & v226) << v233 << v192);
  LODWORD(STACK[0x1818]) = v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE);
  LODWORD(STACK[0x18A8]) = ((((v288 & v237 & 0xBB1B0832 ^ 0x92130832)
                            + (v288 & v237 ^ 0x29087400)
                            - ((v288 & v237 ^ 0x29087400) & 0xBB1B0832)) ^ 0x92137C32) << v192 << v233) ^ (((644746528 - (v237 & v311 ^ 0x351090A3 | 0x266E0D20) + (v237 & v311 ^ 0x351090A3 | 0xD991F2DF)) ^ 0xEC81627C) >> LODWORD(STACK[0x1650]) >> LODWORD(STACK[0x16B0]));
  LODWORD(v194) = (v234 ^ 0x8E3F8F64) & (LODWORD(STACK[0x139C]) ^ 0x8D2D9467) ^ STACK[0x139C] & 0x3121B03;
  LODWORD(v223) = ((v234 ^ 0x8FF603A6) & (v313 ^ v304) ^ v313 & 0x2DB97C0) >> 1;
  LODWORD(v223) = ((v223 ^ 0x4CA20) - 1926392729 - 2 * ((v223 ^ 0x4CA20) & v312 ^ v223 & 8)) ^ v313;
  v314 = v307;
  v315 = STACK[0x11A4];
  LODWORD(v220) = (v315 ^ 0x8D2D9467) & (v307 ^ 0x8B193550) ^ v315 & 0x634A137;
  LODWORD(v194) = (((v194 & 0xB8A8AB2A ^ 0xB8A8A128)
                  + (v194 ^ 0x3021A03)
                  - ((v194 ^ 0x3021A03) & 0xB8A8AB2A)) >> 1) ^ 0x5D555095;
  LODWORD(v194) = (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE)) ^ LODWORD(STACK[0x139C]);
  v316 = v288;
  LODWORD(v192) = STACK[0x1420];
  LODWORD(v227) = v195;
  LODWORD(v223) = ((((v223 & v208 ^ 0x2101242C)
                   - ((2 * (v223 & v208 ^ 0x2101242C)) & 0xB432870C)
                   - 635878522) ^ 0xFB1867AA) >> LODWORD(STACK[0x15AC]) >> LODWORD(STACK[0x15B0])) | ((v223 & v288) << LODWORD(STACK[0x1270]) << LODWORD(STACK[0x127C]));
  LODWORD(STACK[0x1540]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LODWORD(v223) = ((v307 ^ 0x62F90B10) & (v192 ^ v195) ^ v192 & 0xEFD49F76) >> 1;
  LODWORD(v223) = ((v223 ^ 0x46824A33) - 1926392729 - 2 * ((v223 ^ 0x46824A33) & v312 ^ v223 & 8)) ^ v192;
  LODWORD(v220) = ((v220 & 0xD450005B ^ 0xD4500049)
                 + (v220 ^ 0x2200032)
                 - ((v220 ^ 0x2200032) & 0xD450005B)) >> 1;
  LODWORD(v220) = ((v220 ^ 0x692A4027) - 1926392729 - 2 * ((v220 ^ 0x692A4027) & 0xD2D9477 ^ v220 & 0x10)) ^ v315;
  LOBYTE(v195) = STACK[0x144C];
  LODWORD(v194) = (((1542252562
                   - (v194 & v288 ^ 0x8E2784A6 | 0x5BECE812)
                   + (v194 & v288 ^ 0x8E2784A6 | 0xA41317ED)) ^ 0x2A34934B) << LODWORD(STACK[0x14E8]) << LODWORD(STACK[0x1860]))
                + ((v194 & v311) >> v195);
  STACK[0x1178] = (_DWORD)v194 - 1926392729 - ((2 * (_DWORD)v194) & 0x1A5B28CEu);
  LODWORD(v192) = STACK[0x1748];
  LODWORD(v237) = (v234 ^ 0xEC2939B1) & (v192 ^ 0x8D2D9467) ^ v192 & 0x6104ADD6;
  LODWORD(v194) = (((v220 & v288 & 0xFD15C05D ^ 0xFC15401D)
                  + (v220 & v288 ^ 0x1AAA860)
                  - ((v220 & v288 ^ 0x1AAA860) & 0xFD15C05D)) ^ 0xFCBF683D) << LODWORD(STACK[0x11D0]) << LODWORD(STACK[0x11D8]);
  LODWORD(v253) = v208;
  STACK[0x16B8] = ((v208 & v220) >> v195)
                + (_DWORD)v194
                - 1926392729
                - ((2 * (((v208 & v220) >> v195) + (_DWORD)v194)) & 0x1A5B28CE);
  LODWORD(v194) = (((v234 & 0xDF957B7 ^ 0xD085713 ^ STACK[0x16E0] & (LODWORD(STACK[0x1658]) ^ 0x80D4C3D0))
                  - ((2 * (v234 & 0xDF957B7 ^ 0xD085713 ^ STACK[0x16E0] & (LODWORD(STACK[0x1658]) ^ 0x80D4C3D0))) & 0x4BA505DE)
                  + 634553071) >> 1) ^ 0x12F9E0ED;
  LODWORD(v220) = (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1658]);
  v317 = ((((2 * (v226 & v223 ^ 0x2EA47801)) & 0xAAA5DD7A)
         - (v226 & v223 ^ 0x2EA47801)
         + 715985218) ^ 0x4096943) << LODWORD(STACK[0x17CC]) << LODWORD(STACK[0x1780]);
  LODWORD(v195) = STACK[0x1800];
  LODWORD(v194) = STACK[0x1800] & 0x1C ^ 4;
  LODWORD(STACK[0x16F0]) = v194;
  LODWORD(v233) = ~(_DWORD)v195 & 3;
  LODWORD(STACK[0x1738]) = v233;
  LODWORD(STACK[0x1718]) = ((v208 & v223) >> v233 >> v194)
                         + v317
                         - 1926392729
                         - ((2 * (((v208 & v223) >> v233 >> v194) + v317)) & 0x1A5B28CE);
  v318 = (((v237 & 0x8B3F4049 ^ 0x8B3B4009) + (v237 & 0x74C0BFB6 ^ 0x6000A115) - 1) >> 1) ^ 0x751FB2AD;
  v319 = (v318 - 1926392729 - ((2 * v318) & 0x1A5B28CE)) ^ v192;
  LODWORD(v223) = (((v220 & v226 & 0x8C3F0411 ^ 0x8C050410)
                  + (v220 & v226 ^ 0x203A3021)
                  - ((v220 & v226 ^ 0x203A3021) & 0x8C3F0411)) ^ 0xAC053430) << LODWORD(STACK[0x1358]) << LODWORD(STACK[0x1360]);
  LOBYTE(v297) = STACK[0x12C8];
  LOBYTE(v315) = STACK[0x12C4];
  LODWORD(STACK[0x17E0]) = (v223 | ((v220 & v311) >> v297 >> v315))
                         - 1926392729
                         - ((2 * (v223 | ((v220 & v311) >> v297 >> v315))) & 0x1A5B28CE);
  LODWORD(v194) = STACK[0x124C];
  LODWORD(v307) = (((v226 & v194 ^ 0x1C00A900)
                  - ((2 * (v226 & v194 ^ 0x1C00A900)) & 0x29C51818)
                  + 350391308) ^ 0x8E2250C) << LODWORD(STACK[0x13D0]);
  LODWORD(STACK[0x1688]) = ((((v319 & v288 ^ 0x8856032A) - ((2 * (v319 & v288 ^ 0x8856032A)) & 0x36E6D5E2) + 460548849) ^ 0x932569DB) << LODWORD(STACK[0x12EC]) << LODWORD(STACK[0x12E0])) ^ (((-106965616 - (v319 & v311 ^ 0x8CE8DB06 | 0xF99FD590) + (v319 & v311 ^ 0x8CE8DB06 | 0x6602A6F)) ^ 0x8A88F169) >> v315 >> v297) ^ 0x8D2D9467;
  v320 = STACK[0x1190];
  v321 = (v314 & 0xC889E772 ^ 0xC0814662 ^ STACK[0x1698] & (LODWORD(STACK[0x1190]) ^ 0x45A47315))
       + 1719218447
       - ((2 * (v314 & 0xC889E772 ^ 0xC0814662 ^ STACK[0x1698] & (LODWORD(STACK[0x1190]) ^ 0x45A47315))) & 0xCCF2621E);
  LOBYTE(v220) = ~LODWORD(STACK[0x1238]) | ~LODWORD(STACK[0x1230]);
  LOBYTE(v268) = STACK[0x1378];
  LOBYTE(v197) = STACK[0x1380];
  LODWORD(v192) = ((((v208 & v194 ^ 0xC65CE6E2)
                   - ((2 * (v208 & v194 ^ 0xC65CE6E2)) & 0xDD60FF90)
                   - 290422840) ^ 0x28EC992A) >> v268 >> v197) | v307;
  LODWORD(STACK[0x1740]) = v192 - 1926392729 - ((2 * v192) & 0x1A5B28CE);
  LODWORD(v223) = (((((LODWORD(STACK[0x12A8]) ^ 0xE77A1C26) & v225 ^ v234 & 0xFFB68E0) >> 1) ^ 0x6948030)
                 - 1926392729
                 - ((2
                   * ((((LODWORD(STACK[0x12A8]) ^ 0xE77A1C26) & v225 ^ v234 & 0xFFB68E0) >> 1) ^ 0x6948030)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x161C]);
  LODWORD(v307) = (v223 & v311 & 0x49BE835C ^ 0x19C8255) + (v223 & v311 & 0xB6417CA3);
  LODWORD(v223) = v223 & v288;
  LOBYTE(v288) = STACK[0x1778];
  LODWORD(v192) = ((v234 ^ 0x482BB47A) & (LODWORD(STACK[0x15F0]) ^ v227) ^ STACK[0x15F0] & 0xC506201C) >> 1;
  LODWORD(v192) = ((v192 ^ 0x42820002) - 1926392729 - 2 * ((v192 ^ 0x42820002) & v312 ^ v192 & 8)) ^ LODWORD(STACK[0x15F0]);
  LODWORD(v227) = STACK[0x15D0];
  LODWORD(v226) = STACK[0x14E4];
  LODWORD(v236) = -1971846692 - (v192 & v208 ^ 0x90875042 | 0x8A7801DC) + (v192 & v208 ^ 0x90875042 | 0x7587FE23);
  LOBYTE(v195) = STACK[0x1770];
  LOBYTE(v208) = STACK[0x1768];
  LODWORD(v223) = ((((_DWORD)v307 - 1) ^ 0x19C8254u) >> v195 >> v208)
                + ((_DWORD)v223 << (v288 & 9 ^ 1) << (v288 & 0x16 ^ 6));
  LODWORD(STACK[0x161C]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LODWORD(v223) = (((v321 ^ 0x2EF1F30F) >> (v220 & 1))
                 - 1926392729
                 - ((2 * ((v321 ^ 0x2EF1F30F) >> (v220 & 1))) & 0x1A5B28CE)) ^ v320;
  LODWORD(v223) = ((((v223 & v316 & 0x41D482DD ^ 0x10482D8)
                   + (v223 & v316 & 0xBE2B7D22 ^ 0x4080021)
                   - 1) ^ 0x50C82F8) << (v288 & 8) << (v288 & 0x17 ^ 7))
                + (((((2 * (v223 & v311 ^ 0x1C40630)) & 0xB05F721A)
                   - (v223 & v311 ^ 0x1C40630)
                   + 667961074) ^ 0x261440C2) >> LODWORD(STACK[0x1650]) >> LODWORD(STACK[0x16B0]));
  LODWORD(STACK[0x13D0]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  v322 = (((v227 ^ 0xE2D19B04) & v226 ^ v314 & 0x6FFC0F62) >> 1) ^ 0x6960231;
  v323 = (v322 - 1926392729 - ((2 * v322) & 0x1A5B28CE)) ^ v227;
  LODWORD(v307) = (v225 & (LODWORD(STACK[0x1660]) ^ 0xCCA3ADC0) ^ v234 & 0x418E39A6) >> 1;
  LODWORD(v307) = ((v307 ^ 0x860813) - 1926392729 - 2 * ((v307 ^ 0x860813) & v312 ^ v307 & 8)) ^ LODWORD(STACK[0x1660]);
  LODWORD(v225) = STACK[0x16E0];
  LODWORD(v237) = v234 & 0xFD9FEDED ^ 0xD408EC69 ^ STACK[0x16E0] & (LODWORD(STACK[0x1788]) ^ 0x70B2798A);
  LODWORD(v237) = (((2 * (_DWORD)v237) | 0xC856F744) - v237 + 466912350) >> 1;
  LODWORD(v237) = ((v237 ^ 0x5E9709D7) - 1926392729 - 2 * ((v237 ^ 0x5E9709D7) & v312 ^ v237 & 8)) ^ LODWORD(STACK[0x1788]);
  LODWORD(v194) = STACK[0x17D8];
  LODWORD(v192) = ((v236 ^ 0xE500AE61) >> LODWORD(STACK[0x1280]) >> LODWORD(STACK[0x1288]))
                + ((v192 & STACK[0x17D8]) << LODWORD(STACK[0x13A0]) << LODWORD(STACK[0x13B8]));
  LODWORD(STACK[0xE40]) = v192 - 1926392729 - ((2 * v192) & 0x1A5B28CE);
  LODWORD(v223) = (((((2 * (v237 & v311 ^ 0x90102441)) & 0x4F65F79E)
                   - (v237 & v311 ^ 0x90102441)
                   - 666041296) ^ 0x485D2071) >> v208 >> v195) | (((((2 * (v237 & v316 ^ 0x32404D8)) | 0x222C9AF8)
                                                                  - (v237 & v316 ^ 0x32404D8)
                                                                  - 286674300) ^ 0x123249A4) << LODWORD(STACK[0x17CC]) << LODWORD(STACK[0x1780]));
  LODWORD(STACK[0x17BC]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LOBYTE(v227) = STACK[0x14D8];
  LODWORD(STACK[0x1650]) = ((((v323 & v311 & 0x57FFA0 ^ 0x513F80)
                            + (v323 & v311 ^ 0x606C022)
                            - ((v323 & v311 ^ 0x606C022) & 0x57FFA0)) ^ 0x6513F82) >> v227) ^ 0x8D2D9467 ^ (((((2 * (v323 & v316 ^ 0xD02D013)) & 0xCC12CF94) - (v323 & v316 ^ 0xD02D013) + 435591221) ^ 0x14F44826) << (v288 & 0x12 ^ 2) << (v288 & 0xD ^ 5));
  v324 = v194;
  LODWORD(v192) = ((((v307 & v253 & 0x5A02AFA ^ 0x5002AFA)
                   + (v307 & v253 ^ 0x80E80401)
                   - ((v307 & v253 ^ 0x80E80401) & 0x5A02AFA)) ^ 0x85482EFB) >> v268 >> v197)
                + ((v307 & v194) << (STACK[0x1820] & 0xB ^ 3) << (STACK[0x1820] & 0x14 ^ 4));
  LODWORD(STACK[0x1788]) = v192 - 1926392729 - ((2 * v192) & 0x1A5B28CE);
  LODWORD(v223) = (v226 & (LODWORD(STACK[0x15F8]) ^ 0x7C364922) ^ v314 & 0xF11BDD44) >> 1;
  LODWORD(v194) = STACK[0x1638];
  LODWORD(v223) = ((v223 ^ 0x4084CA22) - 1926392729 - 2 * ((v223 ^ 0x4084CA22) & LODWORD(STACK[0x1638]) ^ v223 & 0x18)) ^ LODWORD(STACK[0x15F8]);
  LODWORD(v197) = v324;
  LODWORD(v192) = STACK[0x1438];
  LODWORD(STACK[0x1644]) = ((((v324 & v223 & 0x7FFACB9B ^ 0x6EAA4399)
                            + (v324 & v223 ^ 0x11518802)
                            - ((v324 & v223 ^ 0x11518802) & 0x7FFACB9B)) ^ 0x6EAB4399) << LODWORD(STACK[0x17C0]) << LODWORD(STACK[0x17A0])) ^ 0x8D2D9467 ^ (((((2 * (v253 & v223 ^ 0x505010)) & 0x908D67FC) - (v253 & v223 ^ 0x505010) - 1212593151) ^ 0xB7E91C11) >> LODWORD(STACK[0x1668]) >> LODWORD(STACK[0x12F0]));
  LODWORD(v233) = (((((v192 ^ 0xD79BC258) & v225 ^ v234 & 0x5AB6563F) & 0xA00F5D70 ^ 0xA0091961)
                  + (((v192 ^ 0xD79BC258) & v225 ^ v234 & 0x5AB6563F) & 0x5FF0A28E)
                  - 1) >> 1) ^ 0x541686A3;
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ v192;
  v325 = STACK[0x1590];
  LODWORD(v223) = (LODWORD(STACK[0x1590]) ^ 0xCBE5EAFA) & STACK[0x1698];
  v326 = (LODWORD(STACK[0x1538]) ^ 0x8D2D9467) & (v314 ^ 0xF8620337) ^ STACK[0x1538] & 0x754F9750;
  LODWORD(v220) = (v234 ^ 0x78E18DB0) & (LODWORD(STACK[0xE24]) ^ LODWORD(STACK[0x147C]));
  v327 = (((v326 & 0x10CA537D ^ 0x8A516D) + (v326 & 0xEF35AC82 ^ 0x20008001) - 1) >> 1) ^ 0x12C3A296;
  v328 = (v327 - 1926392729 - ((2 * v327) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1538]);
  v329 = v194;
  LODWORD(v220) = ((((v220 ^ STACK[0xE24] & 0xF5CC19D6) >> 1) ^ 0x42860823)
                 - 1926392729
                 - 2
                 * ((((v220 ^ STACK[0xE24] & 0xF5CC19D6) >> 1) ^ 0x42860823) & v194 ^ ((v220 ^ STACK[0xE24] & 0xF5CC19D6) >> 1) & 0x18)) ^ LODWORD(STACK[0xE24]);
  LODWORD(v233) = ((((v233 & v311 ^ 0x50008218)
                   - ((2 * (v233 & v311 ^ 0x50008218)) & 0x46D81F72)
                   - 1553199175) ^ 0xF36C8DA1) >> LODWORD(STACK[0x144C])) | ((v233 & v316) << LODWORD(STACK[0x11F8]) << LODWORD(STACK[0x1214]));
  LODWORD(STACK[0x1748]) = v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE);
  LODWORD(v233) = (v328 & v311) >> (STACK[0x1800] & 0xA ^ 2) >> (STACK[0x1800] & 0x15 ^ 5);
  LODWORD(v194) = STACK[0x1460];
  LODWORD(v307) = v234 & 0x392F7F23 ^ 0x31231200 ^ v225 & (LODWORD(STACK[0x1460]) ^ 0xB402EB44);
  LODWORD(v226) = v253;
  LODWORD(v220) = (((-2124298878
                   - (v220 & v253 ^ 0x121408)
                   + ((2 * (v220 & v253 ^ 0x121408)) | 0xFD3C74FC)) ^ 0x7E8C2E76) >> LODWORD(STACK[0x14B8]) >> LODWORD(STACK[0x1330])) | ((v220 & v316) << LODWORD(STACK[0x14E8]) << LODWORD(STACK[0x1860]));
  LODWORD(STACK[0x15F8]) = v220 - 1926392729 - ((2 * v220) & 0x1A5B28CE);
  LODWORD(v307) = ((543210848 - (v307 | 0x2060BD60) + (v307 | 0xDF9F429F)) >> 1) ^ 0x73C8A25E;
  LODWORD(v307) = (v307 - 1926392729 - ((2 * v307) & 0x1A5B28CE)) ^ v194;
  LODWORD(v223) = ((-1507871338
                  - (v314 & 0x46C87E9D ^ 0x4000669D ^ v223)
                  + ((2 * (v314 & 0x46C87E9D ^ 0x4000669D ^ v223)) | 0xB3C09044)
                  + 584) >> 1) ^ 0xEF41D5D;
  LODWORD(v223) = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ v325;
  LODWORD(v253) = v197;
  LOBYTE(v312) = STACK[0x13F8];
  LOBYTE(v284) = STACK[0x1400];
  LODWORD(STACK[0x1668]) = v233 ^ 0x8D2D9467 ^ ((v197 & v328) << v312 << v284);
  LODWORD(v233) = ((420764058
                  - (v223 & v316 ^ 0x7EDAEC54 | 0x1914599A)
                  + (v223 & v316 ^ 0x7EDAEC54 | 0xE6EBA665)) ^ 0x98314A31) << LODWORD(STACK[0x160C]) << LODWORD(STACK[0x1850]);
  v330 = (v307 & v311) >> LODWORD(STACK[0x15AC]) >> LODWORD(STACK[0x15B0]);
  v331 = STACK[0x1158];
  LODWORD(v220) = v331 & 0xA5346795 ^ (v314 ^ 0x2819F3F2) & (v331 ^ 0x8D2D9467) ^ 0xA4042714;
  LOBYTE(v225) = STACK[0x1530];
  LOBYTE(v268) = STACK[0x159C];
  LOBYTE(v195) = STACK[0x1318];
  LOBYTE(v194) = STACK[0x1218];
  LODWORD(STACK[0x1860]) = (v233 | ((v223 & v226) >> v195 >> v194))
                         - 1926392729
                         - ((2 * (v233 | ((v223 & v226) >> v195 >> v194))) & 0x1A5B28CE);
  LODWORD(v233) = ((v220 - ((2 * (_DWORD)v220) & 0x7953D882) - 1129714623) >> 1) ^ 0x4EC4E7A8;
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ v331;
  LODWORD(STACK[0x17CC]) = (v330 ^ ((v307 & v197) << v225 << v268))
                         - 1926392729
                         - ((2 * (v330 ^ ((v307 & v197) << v225 << v268))) & 0x1A5B28CE);
  LODWORD(v233) = (((((2 * (v316 & v233 ^ 0x85030943)) | 0x72EDAE40)
                   - (v316 & v233 ^ 0x85030943)
                   - 964089632) ^ 0xBC75DE63) << LODWORD(STACK[0x1510]) << LODWORD(STACK[0x1500])) ^ ((v311 & v233) >> v227);
  LODWORD(v208) = STACK[0x13D8];
  LODWORD(v223) = (LODWORD(STACK[0x13D8]) ^ 0x87D30536) & STACK[0x1680];
  LODWORD(v197) = STACK[0x16C8];
  LODWORD(v307) = STACK[0x1198] & 0xEB349FA1 ^ 0x63048700 ^ (v234 ^ 0x66190BC6) & (LODWORD(STACK[0x1198]) ^ 0x8D2D9467);
  LODWORD(v307) = ((285080360 - (v307 | 0x10FDFB28) + (v307 | 0xEF0204D7)) >> 1) ^ 0x2910BFB;
  LODWORD(v307) = (v307 - 1926392729 - ((2 * v307) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1198]);
  v332 = (v314 ^ 0xFB7342EA) & (LODWORD(STACK[0x1524]) ^ 0x8D2D9467) ^ STACK[0x1524] & 0x765ED68D;
  v333 = (((v332 & 0xC93FE2A5 ^ 0x893F60A5) + (v332 ^ 0x50008608) - ((v332 ^ 0x50008608) & 0xC93FE2A5)) >> 1) ^ 0x4E99F854;
  v334 = (v333 - 1926392729 - ((2 * v333) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1524]);
  LODWORD(v307) = ((((v307 & v316 & 0xE6AF6597 ^ 0xE62F6517)
                   + (v307 & v316 ^ 0xC08080)
                   - ((v307 & v316 ^ 0xC08080) & 0xE6AF6597)) ^ 0xE66FE517) << LODWORD(STACK[0x1290]) << LODWORD(STACK[0x1298]))
                + ((v307 & v311) >> LODWORD(STACK[0x1328]) >> LODWORD(STACK[0x1450]));
  LODWORD(STACK[0x17C0]) = v307 - 1926392729 - ((2 * v307) & 0x1A5B28CE);
  LODWORD(v220) = ((897348028
                  - (v253 & v334 ^ 0x5C020064 | 0x357C71BC)
                  + (v253 & v334 ^ 0x5C020064 | 0xCA838E43)) ^ 0x96818E27) << LODWORD(STACK[0x1508]);
  LODWORD(v237) = STACK[0x15C0] & 0xB1851C84 ^ 0x801C00 ^ (LODWORD(STACK[0x15C0]) ^ 0x8D2D9467) & (v314 ^ 0x3CA888E3);
  LOBYTE(v307) = v194;
  v335 = ((v226 & v334) >> v194 >> v195)
       + v220
       - 1926392729
       - ((2 * (((v226 & v334) >> v194 >> v195) + v220)) & 0x1A5B28CE);
  LODWORD(v223) = ((((v223 ^ v234 & 0xAFE9150) >> 1) ^ 0x4164820)
                 - 1926392729
                 - 2
                 * ((((v223 ^ v234 & 0xAFE9150) >> 1) ^ 0x4164820) & v329 ^ ((v223 ^ v234 & 0xAFE9150) >> 1) & 0x18)) ^ v208;
  LODWORD(v237) = (462245493 - (v237 | 0x1B8D4E75) + (v237 | 0xE472B18A)) >> 1;
  LODWORD(v237) = ((v237 ^ 0x32FBDCC7) - 1926392729 - 2 * ((v237 ^ 0x32FBDCC7) & 0xD2D9477 ^ v237 & 0x10)) ^ LODWORD(STACK[0x15C0]);
  LODWORD(v236) = (v253 & v237) << v284 << v312;
  LODWORD(v194) = (((v226 & v237 ^ 0x64010D16)
                  - ((2 * (v226 & v237 ^ 0x64010D16)) & 0x243629B8)
                  - 1843718948) ^ 0xF61A19CA) >> LODWORD(STACK[0x1738]);
  LODWORD(v237) = (((STACK[0x16E0] & (LODWORD(STACK[0x1834]) ^ 0xCB74FC76) ^ v234 & 0x46596811) & 0xB4A8755D ^ 0xB4A0554C)
                 + ((STACK[0x16E0] & (LODWORD(STACK[0x1834]) ^ 0xCB74FC76) ^ v234 & 0x46596811) & 0x4B578AA2 ^ 0x40400801)
                 - 1) >> 1;
  LODWORD(v237) = ((v237 ^ 0x7874AEA6) - 1926392729 - 2 * ((v237 ^ 0x7874AEA6) & 0xD2D9477 ^ v237 & 0x10)) ^ LODWORD(STACK[0x1834]);
  LODWORD(v223) = (((896749542
                   - (v223 & v316 ^ 0x9481080 | 0x35734FE6)
                   + (v223 & v316 ^ 0x9481080 | 0xCA8CB019)) ^ 0xC3C4A099) << LODWORD(STACK[0x1798]) << LODWORD(STACK[0x1790]))
                + ((v223 & v311) >> LODWORD(STACK[0x13C0]) >> LODWORD(STACK[0x13E0]));
  LODWORD(v194) = (v194 >> LODWORD(STACK[0x16F0])) + v236;
  LODWORD(v220) = (((-1502220312
                   - (v237 & v316 ^ 0x2A3505C0 | 0xA675EFE8)
                   + (v237 & v316 ^ 0x2A3505C0 | 0x598A1017)) ^ 0x73BF15D7) << LODWORD(STACK[0x1348]) << LODWORD(STACK[0x1350])) ^ ((v237 & v311) >> LODWORD(STACK[0x1458]) >> LODWORD(STACK[0x12D8]));
  LODWORD(v227) = STACK[0x1600];
  v336 = STACK[0x12B0];
  LODWORD(STACK[0x1850]) = LODWORD(STACK[0x1600]) ^ LODWORD(STACK[0x12B0]) ^ (v233 + v197 + ~((2 * v233) & 0x1A5B28CE));
  v337 = v227 ^ v336 ^ v335;
  LODWORD(STACK[0x14B0]) = v337;
  LODWORD(v192) = v227 ^ v336 ^ (v223 + v197 + ~((2 * v223) & 0x1A5B28CE));
  LODWORD(STACK[0x17A0]) = v227 ^ v336 ^ (v220 - 1926392729 - ((2 * v220) & 0x1A5B28CE));
  LODWORD(v233) = (LODWORD(STACK[0x1528]) ^ LODWORD(STACK[0x147C])) & (v314 ^ 0x5820CCB8);
  LODWORD(v233) = ((((v233 ^ STACK[0x1528] & 0xD50D58DE) >> 1) ^ 0x42868823)
                 - 1926392729
                 - 2
                 * ((((v233 ^ STACK[0x1528] & 0xD50D58DE) >> 1) ^ 0x42868823) & 0xD2D9477 ^ ((v233 ^ STACK[0x1528] & 0xD50D58DE) >> 1) & 0x10)) ^ LODWORD(STACK[0x1528]);
  LODWORD(v195) = STACK[0x1720];
  LODWORD(v208) = ((v195 & 0xF49F14DF ^ 0x14911007)
                 + (v195 & 0xC40A145B ^ 0xCB4A6F58)
                 - ((v195 & 0xF49F14DF ^ 0x14911007) & 0xC40A145B)) ^ 0x5EC65C1B;
  LOBYTE(v234) = v268;
  LODWORD(v233) = ((v233 & v311) >> LODWORD(STACK[0x16A4]) >> LODWORD(STACK[0x126C]))
                + ((v316 & v233) << v225 << v268)
                + 1025836358
                + (((STACK[0x1260] & 0xFFFFADBF ^ 0xFFFFADBF) + (STACK[0x1260] & 0xFFFFADBF)) & ((v208
                                                                                                - ((2 * v208) & 0xF8971346)
                                                                                                - 28603997) ^ 0xFF5BAEA3 | (((2 * (v195 & 0xF49F14DF ^ 0xA6053D67)) | 0x13C6D76C) - (v195 & 0xF49F14DF ^ 0xA6053D67) - 165899190) ^ 0xDF745649));
  v338 = (v233 ^ 0xCF33E6DA) & (2 * (v233 & 0xCE3BF61B)) ^ v233 & 0xCE3BF61B;
  LODWORD(v223) = ((2 * (v233 ^ 0xD355CECC)) ^ 0x3ADC71AE) & (v233 ^ 0xD355CECC) ^ (2 * (v233 ^ 0xD355CECC)) & 0x1D6E38D6;
  v339 = (v223 ^ 0x184C3084) & (4 * v338) ^ v338;
  LODWORD(v223) = ((4 * (v223 ^ 0x5220851)) ^ 0x75B8E35C) & (v223 ^ 0x5220851) ^ (4 * (v223 ^ 0x5220851)) & 0x1D6E38D4;
  v340 = (v223 ^ 0x15282050) & (16 * v339) ^ v339;
  LODWORD(v223) = ((16 * (v223 ^ 0x8461883)) ^ 0xD6E38D70) & (v223 ^ 0x8461883) ^ (16 * (v223 ^ 0x8461883)) & 0x1D6E38D0;
  v341 = v340 ^ 0x1D6E38D7 ^ (v223 ^ 0x14620800) & (v340 << 8);
  v342 = v233 ^ (2
               * ((v341 << 16) & 0x1D6E0000 ^ v341 ^ ((v341 << 16) ^ 0x38D70000) & (((v223 ^ 0x90C3087) << 8) & 0x1D6E0000 ^ 0x11460000 ^ (((v223 ^ 0x90C3087) << 8) ^ 0x6E380000) & (v223 ^ 0x90C3087))));
  LODWORD(v233) = (LODWORD(STACK[0x1240]) - 1926392729 - ((2 * LODWORD(STACK[0x1240])) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1514]);
  LODWORD(v223) = LODWORD(STACK[0x1750]) ^ 0x8D2D9467;
  LODWORD(STACK[0x1260]) = v223;
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ v223;
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1678]);
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x10C8]);
  LODWORD(v233) = LODWORD(STACK[0x1570]) ^ 0x8D2D9467 ^ (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE));
  LODWORD(v233) = (v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE)) ^ LODWORD(STACK[0x16F8]);
  LODWORD(v223) = v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE);
  LODWORD(v233) = LODWORD(STACK[0x15CC]) ^ 0x8D2D9467;
  LODWORD(STACK[0x1834]) = v233;
  LODWORD(v223) = ((v223 ^ v233) + v197 + ~((2 * (v223 ^ v233)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1030]);
  LODWORD(v223) = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1518]);
  LODWORD(STACK[0x1780]) = v342 ^ 0x494613D2;
  v343 = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ v342 ^ 0x494613D2;
  LODWORD(v233) = LODWORD(STACK[0x18A8]) ^ 0x8D2D9467;
  LODWORD(STACK[0x160C]) = v233;
  v344 = (v343 - 1926392729 - ((2 * v343) & 0x1A5B28CE)) ^ v233;
  v345 = (v344 - 1926392729 - ((2 * v344) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1818]);
  v346 = (v345 - 1926392729 - ((2 * v345) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1428]);
  v347 = (v346 - 1926392729 - ((2 * v346) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1718]);
  v348 = (v347 - 1926392729 - ((2 * v347) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17E0]);
  v349 = (v348 - 1926392729 - ((2 * v348) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1740]);
  v350 = (v349 - 1926392729 - ((2 * v349) & 0x1A5B28CE)) ^ LODWORD(STACK[0x161C]);
  v351 = (v350 - 1926392729 - ((2 * v350) & 0x1A5B28CE)) ^ LODWORD(STACK[0xE40]);
  v352 = (v351 - 1926392729 - ((2 * v351) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1788]);
  LODWORD(v223) = v352 - 1926392729 - ((2 * v352) & 0x1A5B28CE);
  v353 = v227 ^ LODWORD(STACK[0x16D0]);
  v354 = STACK[0x1340];
  LODWORD(v223) = ((v223 ^ v354) - 1926392729 - ((2 * (v223 ^ v354)) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1748]);
  LODWORD(v223) = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ LODWORD(STACK[0x15F8]);
  LODWORD(v197) = STACK[0x1300];
  LODWORD(v233) = LODWORD(STACK[0x1300]) ^ LODWORD(STACK[0x17CC]);
  LODWORD(STACK[0x15D0]) = v233;
  LODWORD(v223) = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ v233;
  LODWORD(v233) = STACK[0x1708];
  LODWORD(v208) = v233 & 0xD16E4486 ^ 0x51280080 ^ (v314 ^ 0x5C43D0E1) & (v233 ^ 0x8D2D9467);
  LODWORD(v220) = ((2 * v208) & 0xF88BD620) - v208;
  v355 = STACK[0x1890];
  LODWORD(v208) = LODWORD(STACK[0x10DC]) ^ LODWORD(STACK[0x1890]);
  LODWORD(v223) = (v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1310]);
  LODWORD(v194) = v197 ^ (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE));
  LODWORD(STACK[0x1660]) = v194;
  STACK[0x14B8] = v194 ^ v337 ^ ((_DWORD)v223 - 1926392729 - ((2 * (_DWORD)v223) & 0x1A5B28CE));
  v356 = (v227 ^ LODWORD(STACK[0x1760])) - 1926392729 - ((2 * (v227 ^ LODWORD(STACK[0x1760]))) & 0x1A5B28CE);
  LODWORD(v194) = LODWORD(STACK[0x11A8]) ^ v355;
  LODWORD(v223) = ((((v220 + 62526703) >> 1) ^ 0x69DF0834)
                 - 1926392729
                 - ((2 * (((v220 + 62526703) >> 1) ^ 0x69DF0834)) & 0x1A5B28CE)) ^ v233;
  LODWORD(v197) = (v355 ^ LODWORD(STACK[0x1410])) - 1926392729 - ((2 * (v355 ^ LODWORD(STACK[0x1410]))) & 0x1A5B28CE);
  LODWORD(v227) = (LODWORD(STACK[0x15E8]) ^ v227) - 1926392729 - ((2 * (LODWORD(STACK[0x15E8]) ^ v227)) & 0x1A5B28CE);
  v357 = LODWORD(STACK[0xE38]) ^ v355;
  LODWORD(STACK[0x16A4]) = (((-813480964
                            - (v253 & v223 ^ 0x2DD1DBA8 | 0xCF8343FC)
                            + (v253 & v223 ^ 0x2DD1DBA8 | 0x307CBC03)) ^ 0x1DAD67AB) << v234 << v225) ^ 0x8D2D9467 ^ ((((v226 & v223 & 0xB1D44568 ^ 0x31D44568) + (v226 & v223 ^ 0x8A020004) - ((v226 & v223 ^ 0x8A020004) & 0xB1D44568)) ^ 0x3BD6456C) >> v307 >> LODWORD(STACK[0x1318]));
  LODWORD(v225) = STACK[0xE80];
  LODWORD(v223) = ((LODWORD(STACK[0xE80]) ^ 0xCE89B5E6) + 829835802) ^ ((LODWORD(STACK[0xE80]) ^ 0x4BD44CFA) - 1272204538) ^ ((LODWORD(STACK[0xE80]) ^ 0x8706D7B) - 141585787);
  LODWORD(v195) = STACK[0x1548];
  LODWORD(v223) = LODWORD(STACK[0x1548]) ^ (-1423898663 - v223 - ((468117220 - 2 * v223) & 0x1A5B28CE));
  LODWORD(v226) = STACK[0x130C];
  LODWORD(v220) = (v223 - ((2 * v223 + 463027444) & 0x1A5B28CE) - 1158008095) ^ LODWORD(STACK[0x130C]) ^ 0x1917A093;
  v358 = STACK[0x11F0];
  LODWORD(v237) = v220 - v358;
  LODWORD(v223) = v220 - v358 - 1926392729 - ((2 * (v220 - v358)) & 0x1A5B28CE);
  LODWORD(v220) = v220
                - (((v358 ^ 0x1283A667) + 1615973888) ^ ((v358 ^ 0x36C184EC) + 1142157173) ^ ((v358 ^ 0x2442228B)
                                                                                            + 1452296468))
                - 1238486340;
  LODWORD(v236) = (v220 ^ 0x3CB234D9) & (2 * (v220 & 0xBCA438DD)) ^ v220 & 0xBCA438DD;
  LODWORD(v234) = ((2 * (v220 ^ 0x6CBA24E9)) ^ 0xA03C3868) & (v220 ^ 0x6CBA24E9) ^ (2 * (v220 ^ 0x6CBA24E9)) & 0xD01E1C34;
  LODWORD(v236) = v236 ^ 0xD01E1C34 ^ (v234 ^ 0x80120020) & (4 * v236);
  LODWORD(v234) = (4 * (v234 ^ 0x50020414)) & 0xD01E1C34 ^ 0x90060C24 ^ ((4 * (v234 ^ 0x50020414)) ^ 0x407870D0) & (v234 ^ 0x50020414);
  LODWORD(v236) = (16 * v236) & 0xD01E1C30 ^ v236 ^ ((16 * v236) ^ 0x1E1C340) & v234;
  LODWORD(v234) = (16 * v234) & 0xD01E1C30 ^ 0xD01E1C34 ^ ((16 * v234) ^ 0x1E1C340) & v234;
  LODWORD(v236) = v236 ^ ((_DWORD)v236 << 8) & 0xD01E1C00 ^ (((_DWORD)v236 << 8) ^ 0x1E1C3400) & v234;
  LODWORD(v233) = v220 ^ (2
                        * (((v236 ^ 0x101C1400) << 16) & 0x501E0000 ^ v236 ^ 0x101C1400 ^ (((v236 ^ 0x101C1400) << 16) ^ 0x1C340000) & (((_DWORD)v234 << 8) & 0x501E0000 ^ 0x40020000 ^ (((_DWORD)v234 << 8) ^ 0x1E1C0000) & v234))) ^ 0xB19D94D2;
  LODWORD(STACK[0x1420]) = v233;
  LODWORD(v307) = STACK[0x17F0];
  LODWORD(STACK[0x1658]) = v233 ^ LODWORD(STACK[0x17F0]) ^ v197;
  LODWORD(STACK[0x1508]) = v233 ^ v307 ^ (v357 - 1926392729 - ((2 * v357) & 0x1A5B28CE));
  LODWORD(STACK[0x1600]) = v233 ^ v307 ^ (v194 - 1926392729 - ((2 * v194) & 0x1A5B28CE));
  LODWORD(STACK[0x1898]) = v227 ^ v336;
  LODWORD(STACK[0xE08]) = v336 ^ 0x160A5CED ^ v356 ^ v237;
  LODWORD(STACK[0x16D0]) = v307 ^ 0x160A5CED ^ (v208 - 1926392729 - ((2 * v208) & 0x1A5B28CE)) ^ v237;
  LODWORD(STACK[0x17CC]) = v336 ^ 0x160A5CED ^ (v353 - 1926392729 - ((2 * v353) & 0x1A5B28CE)) ^ v237;
  LODWORD(STACK[0x16F0]) = v192;
  v359 = -1492760589
       * (v225 ^ ((v192 ^ LODWORD(STACK[0x1758])) - 1926392729 - ((2 * (v192 ^ LODWORD(STACK[0x1758]))) & 0x1A5B28CE)));
  LODWORD(v307) = STACK[0x11C8];
  v360 = -654774691 * (v359 + HIWORD(v359) - ((v359 + HIWORD(v359)) >> 8) + LODWORD(STACK[0x11C8]));
  v361 = v360 - HIWORD(v360);
  v362 = (((v361 - 1926392729 - ((2 * v361) & 0x1A5B28CE)) >> 8) ^ 0x8D2D94)
       + ((v361 - 1926392729 - ((2 * v361) & 0x1A5B28CE)) ^ 0x8D2D9467);
  v363 = 2028330097 * ((v362 - 1926392729 - ((2 * v362) & 0x1A5B28CE)) ^ v226 ^ 0x8D2D9467) - 1929017155;
  LODWORD(v227) = (v363 ^ 0x62FA6743) & (2 * (v363 & 0x72FA7743)) ^ v363 & 0x72FA7743;
  LODWORD(v208) = ((2 * (v363 ^ 0x6BECF45)) ^ 0xE889700C) & (v363 ^ 0x6BECF45) ^ (2 * (v363 ^ 0x6BECF45)) & 0x7444B806;
  LODWORD(v227) = (v208 ^ 0x40043006) & (4 * v227) ^ v227;
  LODWORD(v208) = ((4 * (v208 ^ 0x14448802)) ^ 0xD112E018) & (v208 ^ 0x14448802) ^ (4 * (v208 ^ 0x14448802)) & 0x7444B804;
  LODWORD(v227) = v227 ^ 0x7444B806 ^ (v208 ^ 0x5000A000) & (16 * v227);
  LODWORD(v208) = (16 * (v208 ^ 0x24441806)) & 0x7444B800 ^ 0x30043806 ^ ((16 * (v208 ^ 0x24441806)) ^ 0x444B8060) & (v208 ^ 0x24441806);
  LODWORD(v227) = ((_DWORD)v227 << 8) & 0x7444B800 ^ v227 ^ (((_DWORD)v227 << 8) ^ 0x44B80600) & v208;
  v364 = v363 ^ (2
               * (((_DWORD)v227 << 16) & 0x74440000 ^ v227 ^ (((_DWORD)v227 << 16) ^ 0x38060000) & (((_DWORD)v208 << 8) & 0x74440000 ^ 0x30440000 ^ (((_DWORD)v208 << 8) ^ 0x44B80000) & v208)));
  v365 = v364 ^ HIWORD(v364) ^ v358 ^ ((v364 ^ HIWORD(v364)) >> 8);
  v366 = 1215742365
       * (((v365 ^ 0x3D5EA5C2) + 1032175644) ^ ((v365 ^ 0xF3FBFC91) - 215967415) ^ ((v365 ^ 0xBCAC5712) - 1133038900))
       + 1364175403;
  v367 = v366 + HIWORD(v366) - 1926392729 - ((2 * (v366 + HIWORD(v366))) & 0x1A5B28CE);
  LODWORD(v227) = ((v367 >> 8) ^ 0xFF72D26B)
                - 1373198470
                + (((v367 ^ 0x237E6EDA) - 595488474) ^ ((v367 ^ 0x52D65895) - 1389779093) ^ ((v367 ^ 0xFC85A228)
                                                                                           + 58351064));
  LODWORD(v208) = (v227 ^ 0xDE84EACD) & (2 * (v227 & 0xDF06ECEE)) ^ v227 & 0xDF06ECEE;
  v368 = ((2 * (v227 ^ 0xF684A311)) ^ 0x53049FFE) & (v227 ^ 0xF684A311) ^ (2 * (v227 ^ 0xF684A311)) & 0x29824FFE;
  LODWORD(v208) = (v368 ^ 0x8007F9) & (4 * v208) ^ v208;
  v369 = ((4 * (v368 ^ 0x28824001)) ^ 0xA6093FFC) & (v368 ^ 0x28824001) ^ (4 * (v368 ^ 0x28824001)) & 0x29824FFC;
  LODWORD(v208) = (v369 ^ 0x20000FE3) & (16 * v208) ^ v208;
  v370 = ((16 * (v369 ^ 0x9824003)) ^ 0x9824FFF0) & (v369 ^ 0x9824003) ^ (16 * (v369 ^ 0x9824003)) & 0x29824FF0;
  LODWORD(v208) = v208 ^ 0x29824FFF ^ (v370 ^ 0x8004F0F) & ((_DWORD)v208 << 8);
  LODWORD(v227) = v227 ^ (2
                        * (((_DWORD)v208 << 16) & 0x29820000 ^ v208 ^ (((_DWORD)v208 << 16) ^ 0x4FFF0000) & (((v370 ^ 0x2182000F) << 8) & 0x29820000 ^ 0x29800000 ^ (((v370 ^ 0x2182000F) << 8) ^ 0x24F0000) & (v370 ^ 0x2182000F))));
  LODWORD(v208) = (((v354 ^ 0xBBDF6A45) + 1142986171) ^ ((v354 ^ 0x73DDD47C) - 1943917692) ^ ((v354 ^ 0x452F2A5E)
                                                                                            - 1160718942))
                - (((v367 ^ 0xF939C707) + 113654009) ^ ((v367 ^ 0x6DA6ED97) - 1839656343) ^ ((v367 ^ 0x19B2BEF7)
                                                                                           - 431144695))
                + 1798007648;
  v371 = v208 & 0x94D494A0 ^ 0x2D8FBE01 ^ (v208 ^ 0x90D202A1) & (2 * (v208 & 0x94D494A0));
  LODWORD(v220) = ((2 * (v208 ^ 0xB95B2AA1)) ^ 0x5B1F7C02) & (v208 ^ 0xB95B2AA1) ^ (2 * (v208 ^ 0xB95B2AA1)) & 0x2D8FBE00;
  v372 = v220 & 0x8902757E ^ v371 ^ ((4 * v371) ^ 0x3F3C8D7A) & (v220 ^ 0x90F3C01);
  LODWORD(v220) = ((4 * v220) ^ 0xAD3E857E) & (v220 ^ 0x90F3C01) ^ v220 & 0x8902757E;
  v373 = v220 & 0x8902757E ^ v372 ^ ((16 * v372) ^ 0xC1DAD56E) & (v220 ^ 0x9023401);
  LODWORD(v220) = ((16 * v220) ^ 0x1921357E) & (v220 ^ 0x9023401) ^ v220 & 0x8902757E;
  v374 = v373 ^ v220 & 0x8902757E ^ ((v373 << 8) ^ 0x6BC747E) & (v220 ^ 0x9023401);
  LODWORD(v220) = (((_DWORD)v220 << 8) ^ 0x8B36757E) & (v220 ^ 0x9023401) ^ v220 & 0x8902757E;
  LODWORD(v197) = v208 ^ (2
                        * (v374 ^ v220 & 0x902757E ^ ((v374 << 16) ^ 0x303757E) & (v220 ^ 0x248D0000) ^ ((v374 << 16) ^ 0x303757E) & 0x2D8F3400));
  LODWORD(v208) = (v227 & 0x658A98A7 ^ 0xB8F932A0) + 292616653 - ((2 * (v227 & 0x658A98A7 ^ 0xB8F932A0)) & 0x22E1710A);
  v375 = (((2 * (v367 & 0xB347CCD0 ^ 0x30400C90)) | 0xCBE7EB68) - (v367 & 0xB347CCD0 ^ 0x30400C90) + 436996684) ^ 0xAFF1A593;
  LODWORD(v220) = (((LODWORD(STACK[0x1418]) ^ 0x9B80F154) + 1572578248) ^ ((LODWORD(STACK[0x1418]) ^ 0x4E3E3751)
                                                                         - 2012912189) ^ ((LODWORD(STACK[0x1418]) ^ 0x6157FF0E)
                                                                                        - 1486049890))
                - (((v367 ^ 0x3C4EE520) - 1011803424) ^ ((v367 ^ 0xC3E9DD6D) + 1008083603) ^ ((v367 ^ 0x728AAC2A)
                                                                                            - 1921690666))
                + 2113169464;
  LODWORD(v237) = (v220 ^ 0xE00B87C7) & (2 * (v220 & 0x820B97C8)) ^ v220 & 0x820B97C8;
  LODWORD(v236) = ((2 * (v220 ^ 0xE00F81C7)) ^ 0xC4082C1E) & (v220 ^ 0xE00F81C7) ^ (2 * (v220 ^ 0xE00F81C7)) & 0x6204160E;
  LODWORD(v237) = v237 ^ 0x6204160F ^ (v236 ^ 0x22000401) & (4 * v237);
  LODWORD(v236) = (4 * (v236 ^ 0x22041201)) & 0x6204160C ^ 0x62040603 ^ ((4 * (v236 ^ 0x22041201)) ^ 0x8810583C) & (v236 ^ 0x22041201);
  LODWORD(v237) = (16 * v237) & 0x62041600 ^ v237 ^ ((16 * v237) ^ 0x204160F0) & v236;
  LODWORD(v236) = (16 * v236) & 0x62041600 ^ 0x4204160F ^ ((16 * v236) ^ 0x204160F0) & v236;
  LODWORD(v237) = v237 ^ 0x20040600 ^ ((_DWORD)v237 << 8) & 0x62041600 ^ (((_DWORD)v237 << 8) ^ 0x4160F00) & v236;
  LODWORD(v237) = ((_DWORD)v237 << 16) & 0x62040000 ^ v237 ^ (((_DWORD)v237 << 16) ^ 0x160F0000) & (((_DWORD)v236 << 8) & 0x62040000 ^ 0x62000000 ^ (((_DWORD)v236 << 8) ^ 0x4160000) & v236);
  LODWORD(v208) = (((v208 & 0xE2AF684E ^ 0x72272003) + (v208 & 0xD5097B1) - 1) ^ 0x6EB92FA) & (v227 ^ 0x60F98CEF) ^ v227 & 0x27B8966A;
  LODWORD(v236) = (v208 & 0xBDFC6537 ^ 0x9CFC6537) + (v208 ^ 0x21001208) - ((v208 ^ 0x21001208) & 0xBDFC6537);
  LODWORD(v208) = v367 & 0x8CA18A9E ^ 0x8C218006 ^ ((((2 * v375) & 0x925E6EA0) - v375 - 1227831121) ^ 0x8D8EA9E9) & (v367 ^ 0x8D2D9467);
  v376 = v220 ^ (2 * v237);
  LODWORD(v237) = (LODWORD(STACK[0x1368]) ^ LODWORD(STACK[0x14B0]))
                - 1926392729
                - ((2 * (LODWORD(STACK[0x1368]) ^ LODWORD(STACK[0x14B0]))) & 0x1A5B28CE);
  v377 = (((v367 ^ 0x82BAEA05) + 2101679611) ^ ((v367 ^ 0xD8C71B08) + 658040056) ^ ((v367 ^ 0xD750656A) + 682597014))
       + 1136092257
       + (((v197 ^ 0x525BBEE8) - 280871469) ^ ((v197 ^ 0x5A849576) - 409135539) ^ ((v197 ^ 0xC714C33C) + 2047688711));
  LODWORD(v220) = (v377 ^ 0xC42BB248) & (2 * (v377 & 0xD6A3C46D)) ^ v377 & 0xD6A3C46D;
  LODWORD(v197) = ((2 * (v377 ^ 0xE569BA18)) ^ 0x6794FCEA) & (v377 ^ 0xE569BA18) ^ (2 * (v377 ^ 0xE569BA18)) & 0x33CA7E74;
  LODWORD(v220) = (v197 ^ 0x23803060) & (4 * v220) ^ v220;
  LODWORD(v197) = ((4 * (v197 ^ 0x104A0215)) ^ 0xCF29F9D4) & (v197 ^ 0x104A0215) ^ (4 * (v197 ^ 0x104A0215)) & 0x33CA7E74;
  LODWORD(v220) = (v197 ^ 0x3087850) & (16 * v220) ^ v220;
  LODWORD(v197) = ((16 * (v197 ^ 0x30C20621)) ^ 0x3CA7E750) & (v197 ^ 0x30C20621) ^ (16 * (v197 ^ 0x30C20621)) & 0x33CA7E70;
  LODWORD(v220) = v220 ^ 0x33CA7E75 ^ (v197 ^ 0x30826600) & ((_DWORD)v220 << 8);
  LODWORD(STACK[0x1890]) = v377 ^ (2
                                 * (((_DWORD)v220 << 16) & 0x33CA0000 ^ v220 ^ (((_DWORD)v220 << 16) ^ 0x7E750000) & (((v197 ^ 0x3481825) << 8) & 0x33CA0000 ^ 0x31800000 ^ (((v197 ^ 0x3481825) << 8) ^ 0xCA7E0000) & (v197 ^ 0x3481825))));
  LODWORD(v227) = LODWORD(STACK[0x1370])
                - (((v227 ^ 0x6EFDE6E0) - 2094399895) ^ ((v227 ^ 0xD7F04290) + 975460889) ^ ((v227 ^ 0x260BD760)
                                                                                           - 874524695))
                - 1544231478
                + (v236 ^ 0x43BB0CAA);
  LODWORD(v220) = (v227 ^ 0xEED9858F) & (2 * (v227 & 0xCEDD85CF)) ^ v227 & 0xCEDD85CF;
  LODWORD(v197) = ((2 * (v227 ^ 0x6A688713)) ^ 0x496A05B8) & (v227 ^ 0x6A688713) ^ (2 * (v227 ^ 0x6A688713)) & 0xA4B502DC;
  LODWORD(v220) = (v197 ^ 0x80210018) & (4 * v220) ^ v220;
  LODWORD(v197) = ((4 * (v197 ^ 0xA4950244)) ^ 0x92D40B70) & (v197 ^ 0xA4950244) ^ (4 * (v197 ^ 0xA4950244)) & 0xA4B502DC;
  LODWORD(v220) = v220 ^ 0xA4B502DC ^ (v197 ^ 0x80940250) & (16 * v220);
  LODWORD(v197) = (16 * (v197 ^ 0x2421008C)) & 0xA4B502D0 ^ 0xA4A5021C ^ ((16 * (v197 ^ 0x2421008C)) ^ 0x4B502DC0) & (v197 ^ 0x2421008C);
  LODWORD(v220) = ((_DWORD)v220 << 8) & 0xA4B50200 ^ v220 ^ (((_DWORD)v220 << 8) ^ 0xB502DC00) & v197;
  LODWORD(v227) = v227 ^ (2
                        * (((_DWORD)v220 << 16) & 0x24B50000 ^ v220 ^ (((_DWORD)v220 << 16) ^ 0x2DC0000) & (((_DWORD)v197 << 8) & 0xA4B50000 ^ 0xB50000 ^ (((_DWORD)v197 << 8) ^ 0x35020000) & v197)));
  LODWORD(v197) = -1492760589 * (v225 ^ v237) + ((-1492760589 * (v225 ^ v237)) >> 16);
  LODWORD(v237) = STACK[0x1300];
  LODWORD(STACK[0x16E0]) = LODWORD(STACK[0x1300]) ^ LODWORD(STACK[0x17C0]);
  LODWORD(STACK[0x1590]) = (v237 ^ LODWORD(STACK[0x13F0]) ^ 0x9B27C88A ^ v223)
                         + LODWORD(STACK[0x16C8])
                         + ~((2 * (v237 ^ LODWORD(STACK[0x13F0]) ^ 0x9B27C88A ^ v223)) & 0x1A5B28CE);
  LODWORD(v237) = -654774691 * (v197 - (v197 >> 8) + v307)
                - ((-654774691 * (v197 - (v197 >> 8) + v307)) >> 16)
                + ((-654774691 * ((_DWORD)v197 - (v197 >> 8) + (_DWORD)v307)
                  - ((-654774691 * (v197 - (v197 >> 8) + v307)) >> 16)) >> 8);
  LODWORD(v194) = v226 ^ 0x8D2D9467;
  LODWORD(v223) = v226 ^ 0x8D2D9467 ^ (v237 - 1926392729 - ((2 * v237) & 0x1A5B28CE));
  LODWORD(v234) = (2028330097 * v223) ^ ((2028330097 * v223) >> 16) ^ (((2028330097 * (_DWORD)v223) ^ ((2028330097 * v223) >> 16)) >> 8);
  LODWORD(v226) = v358 ^ 0x8D2D9467;
  v378 = ((v234 ^ v226 ^ 0xB0D85F09) + 1327997175) ^ ((v234 ^ v226 ^ 0x15963566) - 362165606) ^ ((v234 ^ v226 ^ 0x2863FE08)
                                                                                               - 677641736);
  v379 = 1215742365 * v378 - 230704109;
  v380 = (v379 ^ 0x8EDFD8D5) & (2 * (v379 & 0xAC9FE0C4)) ^ v379 & 0xAC9FE0C4;
  LODWORD(v191) = ((2 * (v379 ^ 0xD7C5D9DD)) ^ 0xF6B47232) & (v379 ^ 0xD7C5D9DD) ^ (2 * (v379 ^ 0xD7C5D9DD)) & 0x7B5A3918;
  v381 = (v191 ^ 0x72100010) & (4 * v380) ^ v380;
  LODWORD(v191) = ((4 * (v191 ^ 0x94A0909)) ^ 0xED68E464) & (v191 ^ 0x94A0909) ^ (4 * (v191 ^ 0x94A0909)) & 0x7B5A3918;
  v382 = (v191 ^ 0x69482000) & (16 * v381) ^ v381;
  LODWORD(v191) = ((16 * (v191 ^ 0x12121919)) ^ 0xB5A39190) & (v191 ^ 0x12121919) ^ (16 * (v191 ^ 0x12121919)) & 0x7B5A3910;
  LODWORD(v253) = v195;
  v383 = v382 ^ 0x7B5A3919 ^ (v191 ^ 0x31021100) & (v382 << 8);
  v384 = v379 ^ (2
               * ((v383 << 16) & 0x7B5A0000 ^ v383 ^ ((v383 << 16) ^ 0x39190000) & (((v191 ^ 0x4A582809) << 8) & 0x7B5A0000 ^ 0x21420000 ^ (((v191 ^ 0x4A582809) << 8) ^ 0x5A390000) & (v191 ^ 0x4A582809))));
  LODWORD(v192) = (((LODWORD(STACK[0x1788]) ^ 0xDB15FF8A) + 619315318) ^ ((LODWORD(STACK[0x1788]) ^ 0x296362C2)
                                                                        - 694379202) ^ ((LODWORD(STACK[0x1788]) ^ 0x7F5B092F)
                                                                                      - 2136672559))
                + 442181838
                + (((v234 ^ v226 ^ 0x5EDC24ED) - 1591485677) ^ ((v234 ^ v226 ^ 0xF5652110) + 177921776) ^ ((v234 ^ v226 ^ 0x2694919A) - 647270810))
                - v378;
  LODWORD(v191) = v192 - ((2 * v192 + 94689074) & 0x1A5B28CE);
  LODWORD(v192) = (((v234 ^ v226 ^ 0xA8E1F079) + 1461587847) ^ ((v234 ^ v226 ^ 0xBF335404) + 1087155196) ^ ((v234 ^ v226 ^ 0x9AFF301A) + 1694552038))
                - (v234 ^ v358)
                + v208
                - 773800912
                + (v376 ^ 0x420BBBD6);
  LODWORD(v208) = (v192 ^ 0xBB0C9826) & (2 * (v192 & 0xBB4CD837)) ^ v192 & 0xBB4CD837;
  v385 = ((2 * (v192 ^ 0xDB15A840)) ^ 0xC0B2E0EE) & (v192 ^ 0xDB15A840) ^ (2 * (v192 ^ 0xDB15A840)) & 0x60597076;
  LODWORD(v208) = (v385 ^ 0x40106064) & (4 * v208) ^ v208;
  v386 = ((4 * (v385 ^ 0x20491011)) ^ 0x8165C1DC) & (v385 ^ 0x20491011) ^ (4 * (v385 ^ 0x20491011)) & 0x60597074;
  LODWORD(v208) = (v386 ^ 0x414053) & (16 * v208) ^ v208;
  v387 = ((16 * (v386 ^ 0x60183023)) ^ 0x5970770) & (v386 ^ 0x60183023) ^ (16 * (v386 ^ 0x60183023)) & 0x60597070;
  LODWORD(v208) = v208 ^ 0x60597077 ^ (v387 ^ 0x110007) & ((_DWORD)v208 << 8);
  LODWORD(v192) = v192 ^ (2
                        * (((_DWORD)v208 << 16) & 0x60590000 ^ v208 ^ (((_DWORD)v208 << 16) ^ 0x70770000) & (((v387 ^ 0x60487007) << 8) & 0x60590000 ^ 0x20090000 ^ (((v387 ^ 0x60487007) << 8) ^ 0x59700000) & (v387 ^ 0x60487007))));
  LODWORD(v208) = (((v384 ^ 0xCC7A5428) - 1766609593) ^ ((v384 ^ 0x51E39C0B) + 187327846) ^ ((v384 ^ 0xB5825AD5)
                                                                                           - 280255556))
                + 1067295163;
  LODWORD(v208) = v208 + WORD1(v208) - ((v208 + WORD1(v208)) >> 8);
  v388 = v208 - 1926392729 - ((2 * v208) & 0x1A5B28CE);
  LODWORD(STACK[0x15E8]) = LODWORD(STACK[0x1388]) - 1926392729 - ((2 * LODWORD(STACK[0x1388])) & 0x1A5B28CE);
  LODWORD(v208) = 1215742365 * ((v234 - 1926392729 - ((2 * v234) & 0x1A5B28CE)) ^ v358 ^ 0x8D2D9467);
  LODWORD(v208) = v208 + WORD1(v208) - ((v208 + WORD1(v208)) >> 8);
  v389 = v208 - 1926392729 - ((2 * v208) & 0x1A5B28CE);
  LODWORD(STACK[0x1680]) = LODWORD(STACK[0x1408]) - 1926392729 - ((2 * LODWORD(STACK[0x1408])) & 0x1A5B28CE);
  LODWORD(v233) = STACK[0x1750];
  v390 = ((2 * (v233 & 0xD7D26491 ^ 0x5404090)) | 0xF21E4D6) - (v233 & 0xD7D26491 ^ 0x5404090) - 126939755;
  v391 = v194 ^ (v361 + (v361 >> 8) - 1926392729 - ((2 * (v361 + (v361 >> 8))) & 0x1A5B28CE));
  LODWORD(v225) = v194;
  LODWORD(v208) = ((v233 & 0xD7D26491 ^ 0x93020001)
                 + (v233 & 0x11C04011 ^ 0x8E5C13C)
                 - ((v233 & 0xD7D26491 ^ 0x93020001) & 0x11C04011)) ^ 0x83E5D17C;
  LODWORD(v208) = (((v390 & 0x8C98B0C8 ^ 0x8C089001) + (v390 & 0x73674F37) - 1) ^ 0x590A466A)
                + ((v208 - ((2 * v208) & 0x65F1A900) - 1292312952) ^ 0xBBFACEC8);
  LODWORD(v234) = v197 ^ LODWORD(STACK[0x1740]) ^ (v197 - 1926392729 - ((2 * v197) & 0x1A5B28CE)) ^ v391 ^ ((v391 | 0x4FFB3FEB) - ((v391 | 0x4FFB3FEB) ^ v391) - 1926392729 - ((2 * ((v391 | 0x4FFB3FEB) - ((v391 | 0x4FFB3FEB) ^ v391))) & 0x1A5B28CE));
  LODWORD(STACK[0x1788]) = LODWORD(STACK[0x1390])
                         - v391
                         + 2028330097 * v208 * v391
                         - 1926392729
                         - ((2 * (LODWORD(STACK[0x1390]) - v391 + 2028330097 * v208 * v391)) & 0x1A5B28CE);
  LODWORD(STACK[0x13B8]) = LODWORD(STACK[0x1570]) ^ 0x587E413B ^ ((v237 & 0x587E413B ^ 0x587E413B)
                                                                + (v237 & 0x587E413B)
                                                                - 1926392729
                                                                - ((2
                                                                  * ((v237 & 0x587E413B ^ 0x587E413B)
                                                                   + (v237 & 0x587E413B))) & 0x105900CE));
  LODWORD(STACK[0x1570]) = v223 ^ LODWORD(STACK[0x1834]) ^ (2028330097
                                                          * v223
                                                          * ((((STACK[0x15CC] & 0x5563EEA9 ^ 0x41402C01)
                                                             + 1242603397
                                                             - ((2 * (STACK[0x15CC] & 0x5563EEA9 ^ 0x41402C01)) & 0x80011D02)) ^ 0xB50B384)
                                                           - 2106690072
                                                           + (((STACK[0x15CC] & 0x5563EEA9 ^ 0x414E09)
                                                             - ((2 * (STACK[0x15CC] & 0x5563EEA9 ^ 0x414E09)) & 0x28C08452)
                                                             + 1056719727) ^ 0x6BDEE3CF)));
  LODWORD(STACK[0x1450]) = ((8 * v388) ^ 0xEC3CB110) & 0x84BEAEB0 ^ 0x6DA06BF1 ^ ((((8 * v388) ^ 0xEC3CB110) & 0x84BEAEA8)
                                                                                - (((8 * v388) ^ 0xEC3CB110) & 0x808CAE88)
                                                                                + (((8 * v388) ^ 0xEC3CB110) & 0x808CAE88 ^ 0xE08DFF9E));
  LODWORD(v233) = ((((8 * v389) ^ 0x1B152FFC) & 0x6963FD7C) - ((2 * ((8 * v389) ^ 0x1B152FFC)) & 0xC0C29208) + 1986873732) & 0xEFFFFFF8 ^ ((8 * v389) ^ 0x1B152FFC) & 0x6963FD64;
  LODWORD(v195) = (8 * (_BYTE)v388 + 8) & 0x18 ^ 0x68420C0C;
  v392 = ((8 * v389) ^ 0xEF54D111) & 0xFE82C840 ^ 0xDA20CACE ^ (-1545636551
                                                              - (((8 * v389) ^ 0xEF54D111) & 0x5C008840 | 0xA3DF7539)
                                                              + (((8 * v389) ^ 0xEF54D111) & 0xA2824019 | 0x5C208AC6));
  LODWORD(STACK[0x16C8]) = ((((8 * v389) ^ 0x96935CC7) + 1) ^ 0xC56871C9) & 0xA7200561 ^ 0x8C0D917E ^ ((((((8 * v389) ^ 0x96935CC7) + 1) ^ 0xC56871C9) & 0xA7200578 ^ 0x51F57F91) - 1) & 0xA7200578;
  LODWORD(v223) = (((((2 * (v388 & 0x40810C03 ^ 0x282ADF6C)) & 0x114012D2) - (v388 & 0x40810C03 ^ 0x282ADF6C) - 145754602) ^ 0xDF642D79 | (2043836058 - (v388 & 0x40810C03 ^ 0x10C03 | 0x79D2769A) + (v388 & 0x40810C03 ^ 0x10C03 | 0x862D8965)) ^ 0xDDA86FFE) ^ 0xB6119C84) & (1926392761 - (((v233 ^ 0xC662F7AF) - 757213772) ^ ((v233 ^ 0xE4A3555C) - 266569919) ^ ((v233 ^ 0x44ACEB77) + 1343474028)));
  LODWORD(STACK[0x14D8]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LODWORD(v223) = ((LODWORD(STACK[0x11EC]) - 1926392729 - ((2 * LODWORD(STACK[0x11EC])) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1818]))
                - LODWORD(STACK[0x11EC])
                + 2 * (STACK[0x11EC] & (LODWORD(STACK[0x1818]) ^ LODWORD(STACK[0x1144])));
  LODWORD(STACK[0x1834]) = v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE);
  LODWORD(v223) = ((LODWORD(STACK[0x18A8]) ^ 0xF25D8BA1) - 2138054598) ^ ((LODWORD(STACK[0x18A8]) ^ 0x10500B72)
                                                                        + 1652711659) ^ ((LODWORD(STACK[0x18A8]) ^ 0xE20D80D3)
                                                                                       - 1864373428);
  LODWORD(v194) = STACK[0x130C];
  LODWORD(STACK[0x1538]) = v234;
  LODWORD(v223) = 1051514347
                * ((v234 ^ 0x8D2D9467)
                 - (v223
                  + (((v194 ^ 0xBF83A35C) - 850278203) ^ ((v194 ^ 0xB03DC0F) + 2043787160) ^ ((v194 ^ 0xB4807F53)
                                                                                            - 967699252))))
                - 1493818138;
  LODWORD(v223) = (v223 - WORD1(v223)) ^ ((v223 - WORD1(v223)) >> 8);
  LODWORD(v223) = -1036200693 * ((v223 - 1926392729 - ((2 * v223) & 0x1A5B28CE)) ^ LODWORD(STACK[0xE80]));
  LODWORD(STACK[0x15F0]) = v191;
  v393 = STACK[0x16B8];
  LODWORD(v223) = -578211601
                * ((((v223 + WORD1(v223)) >> ((((v191 ^ 7) - v223) & 8 ^ 8) + (((v191 ^ 7) - v223) & 8))) ^ (v223 + WORD1(v223)))
                 - v358);
  LODWORD(v223) = v223 ^ WORD1(v223) ^ ((v223 ^ WORD1(v223)) >> 8);
  LODWORD(v208) = (((v223 ^ 0x9737C130) - 437933399) ^ ((v223 ^ 0x16ADB29D) + 1686100230) ^ ((v223 ^ 0x819A73AD)
                                                                                           - 213379018))
                - (((v253 ^ 0xF62837DF) + 165136417) ^ ((v253 ^ 0xCCF4F8EB) + 856360725) ^ ((v253 ^ 0xB7F15B53)
                                                                                          + 1208919213))
                + 1469337192;
  LODWORD(v307) = (v208 ^ 0xA6339D2) & (2 * (v208 & 0xA86BB198)) ^ v208 & 0xA86BB198;
  v394 = ((2 * (v208 ^ 0xAA739C2)) ^ 0x459910B4) & (v208 ^ 0xAA739C2) ^ (2 * (v208 ^ 0xAA739C2)) & 0xA2CC885A;
  LODWORD(v307) = (v394 ^ 0x88000A) & (4 * v307) ^ v307;
  v395 = ((4 * (v394 ^ 0xA244884A)) ^ 0x8B322168) & (v394 ^ 0xA244884A) ^ (4 * (v394 ^ 0xA244884A)) & 0xA2CC8858;
  LODWORD(v307) = (v395 ^ 0x82000052) & (16 * v307) ^ v307;
  v396 = ((16 * (v395 ^ 0x20CC8812)) ^ 0x2CC885A0) & (v395 ^ 0x20CC8812) ^ (16 * (v395 ^ 0x20CC8812)) & 0xA2CC8850;
  LODWORD(v307) = v307 ^ 0xA2CC885A ^ (v396 ^ 0x20C88000) & ((_DWORD)v307 << 8);
  LODWORD(STACK[0x1500]) = LODWORD(STACK[0x1434]) ^ 0x8D2D9467;
  LODWORD(STACK[0xDB0]) = LODWORD(STACK[0x1898]) ^ LODWORD(STACK[0x1420]);
  LODWORD(STACK[0x116C]) = LODWORD(STACK[0x1890]) ^ 0x589AACE0;
  LODWORD(STACK[0x1818]) = v227 ^ 0x43B21410;
  LODWORD(STACK[0x13C0]) = v192 ^ 0x3671ACBE;
  LODWORD(STACK[0x18A8]) = v233 ^ 0xEB40DDE3;
  LODWORD(STACK[0x1158]) = (((2 * v195) & 0x10040010) - v195 - 473662155) ^ 0x6ABE55E;
  LODWORD(STACK[0x16B0]) = (1807643882 - (v392 | 0x6BBE74EA) + (v392 | 0x94418B15)) ^ 0x9F6C5F73;
  LODWORD(STACK[0x1638]) = v223 ^ LODWORD(STACK[0x1310]);
  LODWORD(STACK[0x17F0]) = v223 ^ 0x8D2D9467;
  LODWORD(STACK[0x1558]) = v208 ^ (2
                                 * (((_DWORD)v307 << 16) & 0x22CC0000 ^ v307 ^ (((_DWORD)v307 << 16) ^ 0x85A0000) & (((v396 ^ 0x8204085A) << 8) & 0xA2CC0000 ^ 0x22440000 ^ (((v396 ^ 0x8204085A) << 8) ^ 0x4C880000) & (v396 ^ 0x8204085A)))) ^ 0x604F354B;
  v397 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(STACK[0x18C0]
                                                                                                 + 8
                                                                                                 * SLODWORD(STACK[0x12A0]));
  LODWORD(STACK[0x1750]) = STACK[0x1368];
  LODWORD(STACK[0x1760]) = v253;
  LODWORD(STACK[0x10B0]) = v389;
  LODWORD(STACK[0x1890]) = v389;
  LODWORD(STACK[0x1460]) = v225;
  LODWORD(STACK[0x1770]) = v388;
  v398 = v358 ^ 0x8D2D9467;
  LODWORD(STACK[0x159C]) = v398;
  return v397(1882687108, 912605784, v398, 2056706074, v393, 3552931308);
}

uint64_t sub_100340718(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x1170] = a5;
  LODWORD(STACK[0xDC4]) = a2;
  LODWORD(STACK[0xCE0]) = v9;
  STACK[0x14A8] = HIWORD(LODWORD(STACK[0x1570]));
  LODWORD(STACK[0xDF0]) = LODWORD(STACK[0x1558]) >> 8;
  v10 = STACK[0x1054];
  v11 = LODWORD(STACK[0x1584]) ^ 0x2D94678D;
  LODWORD(STACK[0x1260]) = v6 ^ LODWORD(STACK[0x1054]) ^ 0x591E71C8;
  STACK[0x1348] = LODWORD(STACK[0x17F0]) ^ 0xFFFFFFDD;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v10)
                                                                                              - 4);
  STACK[0x1380] = 11;
  LODWORD(STACK[0xE40]) = STACK[0x1368];
  STACK[0xCC8] = STACK[0xAC8];
  LODWORD(STACK[0xE30]) = STACK[0x1338];
  LODWORD(STACK[0x1868]) = STACK[0x1340];
  LODWORD(STACK[0x17F0]) = STACK[0x1350];
  LODWORD(STACK[0x1030]) = STACK[0x14E8];
  LODWORD(STACK[0xDB0]) = v8;
  LODWORD(STACK[0xE38]) = STACK[0x13D0];
  LODWORD(STACK[0xE08]) = STACK[0x13D8];
  LODWORD(STACK[0x1720]) = v7;
  LODWORD(STACK[0x1428]) = v5;
  LODWORD(STACK[0xE44]) = v11;
  return v12(612897155, 80, 1074069640, 3238843220, 3087007744, 4067622912, 90112);
}

uint64_t sub_100340854(int a1, int a2, int a3, int a4, int a5, int a6, int a7)
{
  int v7;
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _BYTE *v14;
  char v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  char v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  unint64_t v140;
  int v141;
  unsigned int v142;
  char v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unint64_t v182;
  int v183;
  unint64_t v184;
  int v185;
  unsigned __int8 *v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  unint64_t v205;
  unsigned int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  unint64_t v212;
  int v213;
  unint64_t v214;
  unint64_t v215;
  int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  unint64_t v220;
  int v221;
  unint64_t v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  unint64_t v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  int v238;
  unint64_t v239;
  unint64_t v240;
  int v241;
  int v242;
  int v243;
  unint64_t v244;
  int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  unsigned int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  BOOL v341;
  int v342;
  int v343;
  int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned __int8 v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  int v357;
  unint64_t v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  int v362;
  unint64_t v363;
  int v364;
  int v365;
  int v366;
  unint64_t v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  char v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  unsigned int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  int v416;
  unint64_t v417;
  unsigned int v418;
  unsigned int v419;
  unint64_t v420;
  int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  unsigned int v435;
  int v436;
  unint64_t v437;
  int v438;
  unsigned int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  unint64_t v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unint64_t v456;
  int v457;
  int v458;
  int v459;
  unsigned int v460;
  unsigned int v461;
  int v462;
  unsigned int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  unsigned int v468;
  uint64_t v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unint64_t v482;
  int v483;
  int v484;
  unsigned int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  int v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  unsigned int v510;
  unsigned int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  unsigned int v518;
  int v519;
  int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  int v525;
  int v526;
  unsigned int v527;
  unsigned int v528;
  unsigned int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  int v547;
  int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  int v556;
  int v557;
  unsigned int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  int v570;
  unsigned int v571;
  unsigned int v572;
  int v573;
  int v574;
  unsigned int v575;
  unsigned int v576;
  int v577;
  unsigned int v578;
  int v579;
  int v580;
  int v581;
  unsigned int v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  BOOL v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  unsigned int v609;
  int v610;
  int v611;
  int v612;
  char v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  int v617;
  unsigned int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  int v626;
  unsigned int v627;
  int v628;
  unsigned int v629;
  unsigned int v630;
  unsigned int v631;
  int v632;
  unsigned int v633;
  unsigned int v634;
  int v635;
  int v636;
  unsigned int v637;
  unsigned int v638;
  int v639;
  int v640;
  char v641;
  char v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  int v647;
  int v648;
  int v649;
  int v650;
  int v651;
  unsigned int v652;
  unsigned int v653;
  uint64_t v654;
  unint64_t v655;
  unint64_t v656;
  uint64_t v657;
  unint64_t v658;
  unint64_t v659;
  unint64_t v660;
  unint64_t v661;
  unint64_t v662;
  unint64_t v663;
  unint64_t v664;
  int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  unint64_t v675;
  int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  uint64_t v680;
  int v681;
  int v682;
  unsigned int v683;
  unsigned int v684;
  int v685;
  unsigned int v686;
  int v687;
  unsigned int v688;
  int v689;
  int v690;
  int v691;
  unsigned int v692;
  int v693;
  int v694;
  int v695;
  unsigned int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  int v700;
  unsigned int v701;
  unsigned int v702;
  unsigned int v703;
  int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  unsigned int v708;
  unsigned int v709;
  unsigned int v710;
  unsigned int v711;
  unsigned int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  uint64_t v716;
  unint64_t v717;
  unint64_t v718;
  unint64_t v719;
  uint64_t v720;
  unint64_t v721;
  uint64_t v722;
  unint64_t v723;
  uint64_t v724;
  unint64_t v725;
  unint64_t v726;
  uint64_t v727;
  uint64_t v728;
  int v729;
  int v730;
  unint64_t v731;
  int v732;
  int v733;
  int v734;
  uint64_t (*v735)(void);

  LODWORD(STACK[0x18A8]) = v9 ^ 0x628B;
  v21 = 53363779
      * (((v16 ^ 0x2A693EB7) - 711540407) ^ ((v16 ^ 0xF5953845) + 174770107) ^ ((v16 ^ 0x52D19295) - 1389466261))
      + 294164540;
  v22 = (v21 ^ 0xDB421ABC) & (2 * (v21 & 0xDC529AB9)) ^ v21 & 0xDC529AB9;
  v23 = ((2 * (v21 ^ 0xCBE63FCC)) ^ 0x2F694AEA) & (v21 ^ 0xCBE63FCC) ^ (2 * (v21 ^ 0xCBE63FCC)) & 0x17B4A574;
  v24 = v23 ^ 0x1094A515;
  v25 = (v23 ^ (v7 + 88)) & (4 * v22) ^ v22;
  v26 = ((4 * v24) ^ 0x5ED295D4) & v24 ^ (4 * v24) & 0x17B4A574;
  v27 = (v26 ^ 0x16908551) & (16 * v25) ^ v25;
  v28 = ((16 * (v26 ^ 0x1242021)) ^ 0x7B4A5750) & (v26 ^ 0x1242021) ^ (16 * (v26 ^ 0x1242021)) & 0x17B4A570;
  v29 = v27 ^ 0x17B4A575 ^ (v28 ^ 0x13000500) & (v27 << 8);
  v30 = v21 ^ (2
             * ((v29 << 16) & 0x17B00000 ^ v29 ^ ((v29 << 16) ^ 0x25700000) & (((v28 ^ 0x4B4A025) << 8) & 0x17B40000 ^ v17 ^ (((v28 ^ 0x4B4A025) << 8) ^ 0xB4A50000) & (v28 ^ 0x4B4A025))));
  v31 = 632774191
      * (((v18 ^ (a4 + 3930)) + 1056120146) ^ ((v18 ^ 0xC35E8562) + 1017215646) ^ ((v18 ^ 0x8F7FF3AB) + 1887439957))
      - 1052375662;
  v32 = (v31 ^ 0xDE374B57) & (2 * (v31 & 0xDF370B57)) ^ v31 & 0xDF370B57;
  v33 = ((2 * (v31 ^ 0x74354F57)) ^ 0x56048800) & (v31 ^ 0x74354F57) ^ (2 * (v31 ^ 0x74354F57)) & 0xAB024400;
  v34 = v33 ^ 0xA9024400;
  v35 = v33 & (4 * v32) ^ v32;
  v36 = ((4 * v34) ^ 0xAC091000) & v34 ^ (4 * v34) & 0xAB024400;
  v37 = v35 ^ 0xAB024400 ^ (v36 ^ 0xA8000000) & (16 * v35);
  v38 = (16 * (v36 ^ 0x3024400)) & 0xAB024400 ^ 0xB020400 ^ ((16 * (v36 ^ 0x3024400)) ^ 0xB0244000) & (v36 ^ 0x3024400);
  v39 = (v37 << 8) & 0xAB024400 ^ v37 ^ ((v37 << 8) ^ 0x2440000) & v38;
  v40 = v31 ^ (2
             * ((v39 << 16) & 0x2B020000 ^ v39 ^ ((v39 << 16) ^ v19) & ((v38 << 8) & 0x2B020000 ^ 0x29020000 ^ ((v38 << 8) ^ 0x2440000) & v38)));
  LODWORD(STACK[0x17E0]) = v20;
  v41 = ((v40 & 6 ^ 0x41) + (v40 & 0xB8 ^ 0x91) - 2) ^ 0x47;
  LOBYTE(v34) = (((2 * (v40 & 0xBE ^ 0x90)) & 0x50) - (v40 & 0xBE ^ 0x90) - 106) ^ 0xD1;
  v42 = (v40 ^ 0x8D338357) >> ((((((2 * v34) | 0x9C) - v34 - 78) ^ 0x31) + ((8 - (v41 | 8) + (v41 | 0xF7)) ^ (v8 + 27))) & (v15 + 91));
  v43 = ((-1385429248
        * (((v20 ^ 0x678AD541) - 1737151809) ^ ((v20 ^ 0x9A519646) + 1705929146) ^ ((v20 ^ 0x70F6D760) - 1895225184))) | ((-2001900537 * (((v20 ^ 0x7D635713) - 2103662355) ^ ((v9 ^ 0x628B) - 1258618007 + (v20 ^ 0x4B04CB42)) ^ ((v20 ^ 0xBB4A0836) + 1152776138)) + 410354385) >> 24))
      + 1971507456;
  LODWORD(STACK[0x112C]) = v16;
  v44 = (1914836992
       * (((v16 ^ (a1 + 3602)) - 612900757) ^ ((v16 ^ 0x298C2B30) - 697051952) ^ ((v16 ^ 0x8029A0C2) + 2144755518))) | (v30 >> 21);
  v45 = ((-3 * v42) ^ 0x1B) + 1658392950;
  v46 = ((2 * (v45 & 0x100F0)) & (v45 ^ 0x8231A6B9) | 0x5A12781F) ^ v45 & 0x100F0 ^ ((2 * (v45 & 0x100F0)) & 0x20040 | 0xC040400);
  v47 = (2 * (v45 ^ 0x8231A6B9)) & 0x1102E48 ^ (v10 + 71) ^ ((2 * (v45 ^ 0x8231A6B9)) ^ 0x20281492) & (v45 ^ 0x8231A6B9);
  v48 = (4 * v46) & 0x1F162E40 ^ v46 ^ ((4 * v46) ^ 0x5859F07C) & v47;
  v49 = (4 * v47) & 0x1F162E48 ^ 0x3060649 ^ ((4 * v47) ^ 0x7C58B924) & v47;
  v50 = (16 * v48) & 0x1F162E40 ^ v48 ^ ((16 * v48) ^ 0xE065C5F0) & v49;
  v51 = (16 * v49) & 0x1F162E40 ^ 0xE140A49 ^ ((16 * v49) ^ 0xF162E490) & v49;
  v52 = v50 ^ 0x53047856 ^ (v50 << 8) & 0x1F162E00 ^ ((v50 << 8) ^ 0x2581F00) & v51;
  v53 = STACK[0x18B8];
  v54 = *(unsigned __int8 *)(STACK[0x18B8]
                           + (v45 ^ (2
                                   * ((v52 << 16) & 0x1F160000 ^ v52 ^ ((v52 << 16) ^ 0x2E490000) & ((v51 << 8) & 0x1F160000 ^ 0x9100000 ^ ((v51 << 8) ^ 0x162E0000) & v51))) ^ 0xBF0BD462));
  LOBYTE(v51) = ((v54 ^ (v54 >> 3) & 0x15 ^ 0x4C) >> 2) | ((v54 ^ (v54 >> 3) & 0x15) << 6);
  LODWORD(STACK[0xE34]) = v12;
  v55 = -1296039936
      * (((v12 ^ 0x479F1F36) - 1201610550) ^ ((v12 ^ 0xD181D01C) + 780021732) ^ ((v12 ^ 0x1B335B4D) - 456350541))
      + 1350735404;
  v56 = (v55 ^ 0x52D8CA78) & (2 * (v55 & 0x9A800000)) ^ v55 & 0x9A800000;
  v57 = (2 * (v55 ^ 0x43D8CA78)) & 0xD9000008 ^ 0x49000004 ^ ((2 * (v55 ^ 0x43D8CA78)) ^ 0xB2CA4450) & (v55 ^ 0x43D8CA78);
  v58 = (4 * v56) & 0xD8000000 ^ v56 ^ ((4 * v56) | 0x30) & v57;
  v59 = (4 * v57) & 0xD965A3AC ^ 0x9861210C ^ ((4 * v57) ^ 0x65968EB0) & v57;
  v60 = (16 * v58) & 0xD965A3A0 ^ v58 ^ ((16 * v58) ^ 0x2C0) & v59;
  v61 = (16 * v59) & 0xD965A3A0 ^ 0x4925812C ^ ((16 * v59) ^ 0x965A3AC0) & v59;
  v62 = v60 ^ 0xD9650100 ^ (v60 << 8) & 0xD965A300 ^ ((v60 << 8) ^ 0x2AC00) & v61;
  v63 = (v62 << 16) & 0x59650000 ^ v62 ^ ((v62 << 16) ^ 0x23AC0000) & ((v61 << 8) & 0xD9650000 ^ 0x18440000 ^ ((v61 << 8) ^ 0x65A30000) & v61);
  v64 = ((v44 - 644372480) ^ 0x7CA) - 1926392729 - ((2 * ((v44 - 644372480) ^ 0x7CA)) & 0x1A5B28CE);
  LODWORD(STACK[0x15F8]) = v18;
  v65 = -2114698332
      - 1763870532
      * (((v18 ^ 0x9F8AD23D) + 1618292163) ^ ((v18 ^ 0x2EE0FB82) - 786496386) ^ ((v18 ^ 0x3C47BDD8) - 1011334616))
      + v51;
  v66 = v65 - 1926392729 - ((2 * v65) & 0x1A5B28CE);
  v67 = (79844043
       * (((v12 ^ 0x84BF316F) + 2067844753) ^ ((v12 ^ 0x95975A67) + 1785243033) ^ ((v12 ^ 0x9C05FF6F) + 1677328529))
       - 1631867987) >> 10;
  v68 = ((v55 ^ 0xB88E4B1F ^ (2 * v63)) & ~v67 | v67 & 0xF9A6C) ^ 0x92B06593;
  v69 = 8854755
      * (((v66 ^ 0x4278CEBC) - 1115213500) ^ ((v66 ^ 0xFCA5EB78) + 56235144) ^ ((v66 ^ 0x33F0B1A3) - 871412131))
      - 302888457;
  v70 = (2 * (v69 & 0x8004915E)) & (v69 ^ 0xC551F117) ^ v69 & 0x8004915E ^ ((2 * (v69 & 0x8004915E)) & 0x12008 | 0x1544000);
  v71 = (2 * (v69 ^ 0xC551F117)) & 0x45556048 ^ 0x45552049 ^ ((2 * (v69 ^ 0xC551F117)) ^ 0x8AAAC092) & (v69 ^ 0xC551F117);
  v72 = (4 * v70) & 0x45556048 ^ v70 ^ ((4 * v70) ^ 0x5510000) & v71;
  v73 = (4 * v71) & 0x45556048 ^ 0x40006049 ^ ((4 * v71) ^ 0x15558124) & v71;
  v74 = (16 * v72) & 0x45556040 ^ v72 ^ ((16 * v72) ^ 0x40540000) & v73;
  v75 = (16 * v73) & 0x45556040 ^ (a7 + 73) ^ ((16 * v73) ^ 0x55560490) & v73;
  v76 = v74 ^ 0x40442049 ^ (v74 << 8) & 0x45556000 ^ ((v74 << 8) ^ 0x51400000) & v75;
  v77 = v69 ^ (2
             * ((v76 << 16) & 0x45550000 ^ v76 ^ ((v76 << 16) ^ 0x60490000) & ((v75 << 8) & 0x45550000 ^ 0x150000 ^ ((v75 << 8) ^ 0x55600000) & v75)));
  v78 = v68 ^ (v43 - 1926392729 - ((2 * v43) & 0x1A5B28CE)) ^ v64 ^ v66;
  v79 = 381260743
      * (((v78 ^ 0xEF3A65D) - 250848861) ^ ((v78 ^ 0xFD2694EE) + 47803154) ^ ((v78 ^ 0x7EF8A6D4) - 2130224852))
      + 1169269701;
  v80 = (v79 ^ 0x3D7ADC28) & (2 * (v79 & 0xBD62DD4C)) ^ v79 & 0xBD62DD4C;
  v81 = ((2 * (v79 ^ 0x153B66B0)) ^ 0x50B377F8) & (v79 ^ 0x153B66B0) ^ (2 * (v79 ^ 0x153B66B0)) & 0xA859BBFC;
  v82 = v81 ^ 0xA8488804;
  v83 = (v81 ^ 0x513374) & (4 * v80) ^ v80;
  v84 = ((4 * v82) ^ 0xA166EFF0) & v82 ^ (4 * v82) & 0xA859BBFC;
  v85 = (v84 ^ 0xA040ABEC) & (16 * v83) ^ v83;
  v86 = ((16 * (v84 ^ 0x819100C)) ^ 0x859BBFC0) & (v84 ^ 0x819100C) ^ (16 * (v84 ^ 0x819100C)) & 0xA859BBF0;
  v87 = v85 ^ 0xA859BBFC ^ (v86 ^ 0x8019BB00) & (v85 << 8);
  v88 = v79 ^ (2
             * ((v87 << 16) & 0x28590000 ^ v87 ^ ((v87 << 16) ^ 0x3BFC0000) & (((v86 ^ 0x2840003C) << 8) & 0x28590000 ^ 0x20400000 ^ (((v86 ^ 0x2840003C) << 8) ^ 0x59BB0000) & (v86 ^ 0x2840003C))));
  v89 = 697589689 * v43 - 2000860117;
  v90 = (v89 ^ 0x77523B95) & (2 * (v89 & 0x7742B3D5)) ^ v89 & 0x7742B3D5;
  v91 = ((2 * (v89 ^ 0x79D75FBD)) ^ 0x1D2BD8D0) & (v89 ^ 0x79D75FBD) ^ (2 * (v89 ^ 0x79D75FBD)) & 0xE95EC68;
  v92 = v91 ^ 0x2942428;
  v93 = (v91 ^ 0xC01C840) & (4 * v90) ^ v90;
  v94 = ((4 * v92) ^ 0x3A57B1A0) & v92 ^ (4 * v92) & 0xE95EC68;
  v95 = (v94 ^ 0xA15A020) & (16 * v93) ^ v93;
  v96 = ((16 * (v94 ^ 0x4804C48)) ^ 0xE95EC680) & (v94 ^ 0x4804C48) ^ (16 * (v94 ^ 0x4804C48)) & 0xE95EC60;
  v97 = v95 ^ 0xE95EC68 ^ (v96 ^ 0x814C400) & (v95 << 8);
  v98 = v89 ^ (2
             * ((v97 << 16) & 0xE950000 ^ v97 ^ ((v97 << 16) ^ 0x6C680000) & (((v96 ^ 0x6812868) << 8) & 0xE950000 ^ 0xA110000 ^ (((v96 ^ 0x6812868) << 8) ^ 0x15EC0000) & (v96 ^ 0x6812868))));
  v99 = 1301361601 * v68 - 365397465;
  v100 = (v99 ^ 0x559705D1) & (2 * (v99 & 0x15C785D9)) ^ v99 & 0x15C785D9;
  v101 = ((2 * (v99 ^ 0x5D1A0FD1)) ^ 0x91BB1410) & (v99 ^ 0x5D1A0FD1) ^ (2 * (v99 ^ 0x5D1A0FD1)) & 0x48DD8A08;
  v102 = v101 ^ 0x48448A08;
  v103 = (v101 ^ 0x588000) & (4 * v100) ^ v100;
  v104 = ((4 * v102) ^ 0x23762820) & v102 ^ (4 * v102) & 0x48DD8A08;
  v105 = (v104 ^ 0x540808) & (16 * v103) ^ v103;
  v106 = ((16 * (v104 ^ 0x48898208)) ^ 0x8DD8A080) & (v104 ^ 0x48898208) ^ (16 * (v104 ^ 0x48898208)) & 0x48DD8A00;
  v107 = v105 ^ 0x48DD8A08 ^ (v106 ^ 0x8D88000) & (v105 << 8);
  v108 = v99 ^ (2
              * ((v107 << 16) & 0x48DD0000 ^ v107 ^ ((v107 << 16) ^ 0xA080000) & (((v106 ^ (a3 + 2432)) << 8) & 0x48DD0000 ^ 0x550000 ^ (((v106 ^ (a3 + 2432)) << 8) ^ 0xDD8A0000) & (v106 ^ (a3 + 2432)))));
  v109 = 17709510
       * (((v66 ^ 0x6A0085F2) - 1778419186) ^ ((v66 ^ 0x2A19D063) - 706334819) ^ ((v66 ^ 0xCD34C1F6) + 852180490))
       + 215823919;
  v110 = (2 * (v109 & 0xCF10807A)) & 0x862100B4 ^ v109 & 0xCF10807A ^ ((2 * (v109 & 0xCF10807A)) | 2) & (v109 ^ 0x49353AC7);
  v111 = (2 * (v109 ^ 0x49353AC7)) & 0x8625BABC ^ 0x82248A84 ^ ((2 * (v109 ^ 0x49353AC7)) ^ 0xC4B7578) & (v109 ^ 0x49353AC7);
  v112 = (4 * v110) & 0x8625BABC ^ v110 ^ ((4 * v110) | 4) & v111;
  v113 = (4 * v111) & 0x8625BABC ^ 0x8621100C ^ ((4 * v111) ^ 0x1896EAF0) & v111;
  v114 = (16 * v112) & 0x8625BAB0 ^ v112 ^ ((16 * v112) ^ a2) & v113;
  v115 = (16 * v113) & 0x8625BAB0 ^ 0x8424103C ^ ((16 * v113) ^ 0x625BABC0) & v113;
  v116 = v114 ^ 0x8625AAA9 ^ (v114 << 8) & 0x8625BA00 ^ ((v114 << 8) ^ 0x1500) & v115;
  v117 = (v116 << 16) & 0x6250000 ^ v116 ^ ((v116 << 16) ^ 0x3ABC0000) & ((v115 << 8) & 0x6250000 ^ v13 ^ ((v115 << 8) ^ 0x25BA0000) & v115);
  v118 = 1885738123
       - 907837440
       * (((v78 ^ 0x1F4A9C57) - 524983383) ^ ((v78 ^ 0xAD4A2900) + 1387648768) ^ ((v78 ^ 0x3F2D2130) - 1059922224));
  v119 = (v118 ^ 0x8EBB4ADA) & (2 * (v118 & 0xD0220000)) ^ v118 & 0xD0220000;
  v120 = (2 * (v118 ^ 0x2EBB4ADA)) & 0xFE990002 ^ 0x2890001 ^ ((2 * (v118 ^ 0x2EBB4ADA)) ^ 0xFD324250) & (v118 ^ 0x2EBB4ADA);
  v121 = (4 * v119) & 0xC0FFFFFF ^ (v119 | 0x4992100) ^ ((4 * v119) | 0xC) & v120;
  v122 = (4 * v120) & 0xFE9921AC ^ 0x4992103 ^ ((4 * v120) ^ 0xFA6486BC) & v120;
  v123 = (16 * v121) & 0xFE9921A0 ^ v121 ^ ((16 * v121) ^ 0x499210F0) & v122;
  v124 = (16 * v122) & 0xFE9921A0 ^ 0x1609210F ^ ((16 * v122) ^ 0xE9921AF0) & v122;
  v125 = v123 ^ (v123 << 8) & 0xFE992100 ^ ((v123 << 8) ^ 0x921AF00) & v124 ^ 0xBA912100;
  v126 = (v125 << 16) & 0x7E990000 ^ v125 ^ ((v125 << 16) ^ 0x21AF0000) & ((v124 << 8) & 0xFE990000 ^ v11 ^ ((v124 << 8) ^ 0x19210000) & v124);
  v127 = v88 >> 17;
  if ((int)((((v77 ^ 0xE1CB7C11) + 422921798) ^ ((v77 ^ 0xB23EED5D) + 1254151946) ^ ((v77 ^ 0xD9D9C080) + 556268245))
           + LODWORD(STACK[0x1144])) < 0)
    v128 = 1538032333;
  else
    v128 = 1538032402;
  v129 = (v128 & 0x43 | 0x88240300 | (2 * (v128 & 0x43)) & 0x80) ^ ((2 * (v128 & 0x43)) | 0x10400) & (v128 ^ 0x5FA7778A);
  v130 = (2 * (v128 ^ 0x5FA7778A)) & 0x188 ^ 0x49 ^ ((2 * (v128 ^ 0x5FA7778A)) ^ 0x4094192) & (v128 ^ 0x5FA7778A);
  v131 = (4 * v129) & 0x30B48148 ^ v129 ^ ((4 * v129) ^ 0x20400) & v130;
  v132 = (4 * v130) & 0x7BF4A1C8 ^ 0x102420C9 ^ ((4 * v130) ^ 0x4028504) & v130;
  v133 = (16 * v131) & 0xFBF4A1C0 ^ v131 ^ ((16 * v131) ^ 0xB481000) & v132;
  v134 = (16 * v132) & 0x7BF4A1C0 ^ 0x40B4A149 ^ ((16 * v132) ^ 0x3F4A1C90) & v132;
  v135 = v133 ^ 0x288020C9 ^ (v133 << 8) & 0xFBF4A100 ^ ((v133 << 8) ^ 0x74810000) & v134;
  v136 = v127 & 0x4949 ^ 0x50044108 ^ (v127 ^ 0xFFFFA14E) & (v118 ^ (2 * v126) ^ 0xCFF89E9D);
  v137 = ((2 * v136) & 0x82053D9C) - v136 - 1090690767;
  v138 = 1263551158
       * (((v137 ^ 0xFFE39105) - 1070455789) ^ ((v137 ^ 0xF001CFDE) - 808420662) ^ ((v137 ^ 0x42E18054) + 2100311364))
       - 1411773251
       + ((-1515708069
         * (((v137 ^ 0x78BC3DA) + 945452750) ^ ((v137 ^ 0xA57ADA79) - 1700040849) ^ ((v137 ^ 0xEFF2C72C) - 802983364))
         - 705886307) >> 31)
       + 637;
  HIDWORD(v140) = 3 * v138;
  LODWORD(v140) = 846970251 * v138;
  v139 = v140 >> 3;
  HIDWORD(v140) = v108 ^ 0x11C9;
  LODWORD(v140) = v108 ^ 0x946C8000;
  v141 = v140 >> 13;
  v142 = v141 * a5 + ((-1466509001 * v141) >> 5);
  HIDWORD(v140) = v98 ^ 0x12696B05;
  LODWORD(v140) = v98 ^ 0x60000000;
  v143 = ((*(_BYTE *)(v53
                    + (v128 ^ (2
                             * ((v135 << 16) & 0x7BF40000 ^ v135 ^ ((v135 << 16) ^ 0x21C90000) & (((v134 << 8) ^ 0x74A10000) & v134 ^ 0x7BF40000))) ^ 0x103A95D1))
         - 84) ^ 0x29)
       - 107;
  v144 = ((v109 ^ (2 * v117) ^ 0xA24FD1D5) & (~v143 | 0xFFFFFF00) | v143 & 0x29) ^ 0x655C24D6;
  v145 = ((v140 >> 29) - v144 + (v137 ^ 0xB2FC2170) + 1) ^ v141;
  v146 = (-896532480 * v145) | ((1620032681 * v145) >> 12);
  v147 = (1194328064 * v146) | ((991552627 * v146) >> 12);
  HIDWORD(v140) = 1255181484 * v144 - v142 + ((-1833688277 * v144) >> 30) - v146 - v138;
  LODWORD(v140) = -943410917 * HIDWORD(v140);
  v148 = v140 >> 1;
  v149 = v148 ^ (((1832910848 * v142) | ((-280477259 * v142) >> 10)) - v147 - v139);
  v150 = (-1064952960 * v147) | ((-1954477001 * v147) >> 25);
  v151 = -1689780224 * v148 + ((-161025175 * v148) >> 13);
  v152 = ((949819483 * v149) >> 2) - (v149 << 30);
  v153 = 855638016 * v139 - v150 + ((1663787059 * v139) >> 8) - v151 + v152;
  v154 = (1889849000 * v153) | ((1846843861 * v153) >> 29);
  v155 = -692584448 * v151 + ((831863511 * v151) >> 13);
  v156 = -505708544 * v152 + ((1072939959 * v152) >> 17);
  v157 = ((-584056832 * v150) | ((-44573229 * v150) >> 12)) + v155 - v156 + v154;
  v158 = (216677533 * v157) >> 14;
  HIDWORD(v140) = 572378909 * v156;
  LODWORD(v140) = 572378909 * v156;
  v159 = v140 >> 30;
  v160 = (1747574784 * v154) | ((1990934863 * v154) >> 19);
  v161 = v158 + v157 * (a6 + 0x10000);
  v162 = (-1546125312 * v155) | ((-670665605 * v155) >> 13);
  v163 = -255598617 * v160;
  v164 = (-1918773295 * v161) >> 21;
  v165 = v162 + v160 + v159;
  LOBYTE(v162) = 101 * v159;
  v160 *= 520042496;
  v166 = (247367680 * v161) >> 16;
  v167 = (247367680 * v161) >> 24;
  LODWORD(STACK[0x1848]) = v167;
  v168 = (247367680 * v161) | v164;
  v169 = v163 >> 21;
  v170 = HIWORD(v160);
  v171 = HIBYTE(v160);
  v172 = v160 & 0xFFFFF800 | (v163 >> 21);
  v173 = v165 - v161;
  v174 = 1035139417 * v173;
  v175 = (1035139417 * v173) >> 21;
  v173 *= -1748318208;
  v176 = HIWORD(v173);
  v177 = v173 & 0xFFFFF800 | (v174 >> 21);
  v178 = (v172 ^ ((-2073455616 * v159) | ((-1453254043 * v159) >> 22)) ^ v168) + v177;
  v179 = v177 >> 8;
  v180 = v177 >> (-72 * (((v158 & 0x64 ^ 0x64) + (v158 & 0x64)) ^ 0x31));
  LOBYTE(v158) = *(_BYTE *)((BYTE2(v178) ^ 0x12u) + v53 + 41218);
  v14[471] = BYTE1(v178);
  v14[539] = v171;
  v14[1158] = v175;
  v14[622] = v176;
  v14[924] = v164;
  v14[856] = 63 * (v158 ^ 9);
  v14[1007] = v180;
  v14[388] = v166;
  *((_BYTE *)&STACK[0x2920] + (((v169 & 0x49 ^ 9) + (v169 & 0x49)) & 0x18) + 229) = v179;
  v14[1241] = HIBYTE(v178);
  v14[86] = v178;
  LODWORD(STACK[0xDE8]) = v169;
  *((_BYTE *)&STACK[0x2920] + (((v175 & 0x200 ^ 0x200) + (v175 & 0x200)) | 0x2B2)) = v169;
  v14[1075] = v172 >> ((((-1453254043 * v159) >> 22) & 4)
                     + 4
                     + (((-1453254043 * v159) >> 22) & 4 ^ 4));
  v14[3] = BYTE1(v168);
  v14[154] = v170;
  v14[773] = v167;
  v181 = STACK[0x1094];
  v182 = STACK[0x17F8];
  v183 = *(unsigned __int8 *)(STACK[0x17F8] + (HIBYTE(LODWORD(STACK[0x1094])) ^ 0x8DLL));
  v184 = STACK[0x1468];
  v185 = *(unsigned __int8 *)(STACK[0x1468] + 1);
  LODWORD(STACK[0x1760]) = v185;
  v186 = (unsigned __int8 *)v184;
  v187 = *(unsigned __int8 *)(v182 + (BYTE2(v181) ^ 0x2DLL));
  v188 = v181;
  v189 = *(unsigned __int8 *)(v182
                            + (((v181 ^ 0x65)
                              + (v181 & 0xE2 ^ 0x9E820682)
                              - ((v181 ^ 0x65) & 0xE2)) ^ 0x9E8206E0));
  LODWORD(STACK[0x1750]) = v189;
  LODWORD(v184) = *(unsigned __int8 *)(v184 + 2);
  LODWORD(STACK[0x1828]) = v184;
  v190 = ((v185 << 24) | (v189 << 8)) ^ (v187 << 24);
  LOBYTE(v169) = v187;
  LODWORD(STACK[0x1748]) = v187;
  v191 = *(unsigned __int8 *)(v182 + (BYTE1(v188) ^ 0x94));
  LODWORD(STACK[0x17D8]) = v191;
  LODWORD(STACK[0x1788]) = v183;
  LODWORD(STACK[0x1838]) = 221090943;
  v192 = ((v190 | (v191 << 16) | v183) - 1926392729 - 2 * ((v190 | (v191 << 16) | v183) & 0xD2D947F ^ v183 & 0x18)) ^ LODWORD(STACK[0x1088]);
  LODWORD(STACK[0x1860]) = v192;
  v193 = (v192 - 1926392729 - ((2 * v192) & 0x1A5B28CE)) ^ LODWORD(STACK[0x10B8]);
  v194 = STACK[0x10B8];
  LODWORD(STACK[0x10B8]) = STACK[0x10B8];
  v195 = v193 - 1926392729 - ((2 * v193) & 0x1A5B28CE);
  LODWORD(STACK[0x1850]) = v195;
  v196 = v195 ^ LODWORD(STACK[0x1130]);
  v197 = *(unsigned __int8 *)(v182 + (((unsigned __int16)(v196 ^ v188) >> 8) ^ 0x94));
  LODWORD(STACK[0x1820]) = v196 ^ v188;
  v198 = *(unsigned __int8 *)(v182
                            + ((414738199
                              - ((v196 ^ v188) ^ 0xC7 | 0x18B86717)
                              + ((v196 ^ v188) ^ 0xC7 | 0x674798E8)) ^ 0x67479848u));
  v199 = *(unsigned __int8 *)(v182 + (((v196 ^ v188) >> 24) ^ 0x8DLL));
  LODWORD(STACK[0xDB4]) = v197;
  LODWORD(v184) = ((_DWORD)v184 << 24) | (v197 << 16) | (v198 << 8) | v199;
  v200 = *(unsigned __int8 *)(v182 + (((v196 ^ v188) >> 16) ^ 0x2DLL));
  STACK[0xDF8] = 32 * v200;
  v201 = v184 ^ ((*(unsigned __int8 *)(v53
                                     + ((((v169 & 0x58 ^ 0x58) + (v169 & 0x58)) ^ ((v200 >> ((v162 & 3 ^ 3) + (v162 & 3))) | (32 * v200))) ^ 0xC1u)
                                     + 4432) ^ 0x38) << 24);
  v202 = v192 ^ v201;
  LODWORD(STACK[0x1834]) = v192 ^ v201;
  v203 = (v201 - 1926392729 - 2 * (v201 & 0xD2D947F ^ v199 & 0x18)) ^ v194;
  LODWORD(STACK[0x1898]) = -1926392728;
  LODWORD(v184) = (2 * v203) & 0x1A5B28CE;
  LODWORD(STACK[0x1810]) = v184;
  v204 = v203;
  LODWORD(STACK[0x1890]) = v203;
  v205 = (v203 - 1926392728 + ~(_DWORD)v184) ^ v188;
  STACK[0x1758] = v205;
  v206 = v188;
  LODWORD(STACK[0x1094]) = v188;
  v207 = *(unsigned __int8 *)(v182 + ((v203 + 104 + ~(_BYTE)v184) ^ v188));
  v208 = v186[4];
  LODWORD(STACK[0x1780]) = v208;
  v209 = (((v207 << 8) | (v208 << 24) | *(unsigned __int8 *)(v182 + (v205 >> 24))) ^ (*(unsigned __int8 *)(v182 + BYTE2(v205)) << 24) | (*(unsigned __int8 *)(v182 + BYTE1(v205)) << 16)) ^ v202;
  v210 = v196 ^ v209;
  v211 = v209;
  LODWORD(STACK[0x17CC]) = v209;
  v212 = v196 ^ v209 ^ v205;
  LODWORD(STACK[0x1858]) = v196 ^ v209;
  v213 = *(unsigned __int8 *)(v182 + (v196 ^ v209 ^ v205));
  v214 = v212 >> 24;
  v215 = v212;
  LODWORD(v212) = v186[8];
  LODWORD(STACK[0x1840]) = v212;
  v216 = ((_DWORD)v212 << 24) | (v213 << 8);
  LODWORD(v214) = (((*(_BYTE *)(v182 + v214) >> 3) | (32 * *(_BYTE *)(v182 + v214))) ^ 0x9D)
                + 566177775;
  LODWORD(v212) = (v214 ^ 0x742684C0) & (2 * (v214 & 0x1692)) ^ v214 & 0x1692;
  v217 = ((2 * (v214 ^ 0x7426A1E4)) ^ 0x54888EEC) & (v214 ^ 0x7426A1E4) ^ (2 * (v214 ^ 0x7426A1E4)) & 0x3776;
  LODWORD(v212) = (v217 ^ 0x66666666) & (4 * v212) ^ v212;
  v218 = ((4 * (v217 ^ 0x1112)) ^ 0xA999DDD8) & (v217 ^ 0x1112) ^ (4 * (v217 ^ 0x1112)) & 0xAA667774;
  LODWORD(v212) = (v218 ^ 0xA8005540) & (16 * v212) ^ v212;
  v219 = ((16 * (v218 ^ 0x2662226)) ^ 0xA6677760) & (v218 ^ 0x2662226) ^ (16 * (v218 ^ 0x2662226)) & 0xAA667770;
  LODWORD(v212) = v212 ^ 0xAA667776 ^ (v219 ^ 0xA2667716) & ((_DWORD)v212 << 8);
  STACK[0x1808] = v215;
  LOBYTE(v214) = *(_BYTE *)(v53
                          + (v214 ^ (2
                                                 * (((_DWORD)v212 << 16) & 0x2A660000 ^ v212 ^ (((_DWORD)v212 << 16) ^ 0x77760000) & (((v219 ^ 0x8000016) << 8) & 0x2A660000 ^ (((v219 ^ 0x8000016) << 8) ^ 0x66770000) & (v219 ^ 0x8000016) ^ 0x8000000))) ^ 0xCE40387E))
               - 38;
  LODWORD(v212) = ((v214 >> 5) ^ (v214 >> 4) | v216 ^ (*(unsigned __int8 *)(v182 + BYTE2(v215)) << 24) | (*(unsigned __int8 *)(v182 + BYTE1(v215)) << 16)) ^ v214;
  v220 = ((_DWORD)v212 - 1926392729 - ((2 * (_DWORD)v212) & 0x1A5B28CE)) ^ v206;
  LODWORD(v214) = *(unsigned __int8 *)(v182 + (v220 >> 24));
  LODWORD(STACK[0x1790]) = v212 ^ v211;
  STACK[0x1798] = v220 ^ 0xE2;
  LODWORD(v215) = v212 ^ v211 ^ (v186[(((v212 ^ v211) & 0x1101972 ^ 0x1101972)
                                     + ((v212 ^ v211) & 0x1101972)) & 0x2002294] << 24) ^ (v214 | (*(unsigned __int8 *)(v182 + (((v212 + 103 - ((2 * v212) & 0xCE)) ^ v206) ^ 0xE2u)) << 8) | (*(unsigned __int8 *)(v182 + BYTE2(v220)) << 24) | (*(unsigned __int8 *)(v182 + BYTE1(v220)) << 16));
  v221 = v215 ^ v210;
  LODWORD(v214) = ((v212 ^ v211 ^ v214 ^ v210 ^ (v212 + 103 - ((2 * v212) & 0xCE)) ^ v206) >> 3) & 0x1F | (32 * (((v212 ^ v211 ^ v214 ^ v210) ^ ((v212 + 103 - ((2 * v212) & 0xCE)) ^ v206)) & 7));
  v222 = v215 ^ v210 ^ v220;
  LODWORD(v214) = (v214 ^ 0x99) + 1005923611;
  v223 = ((2 * (v214 & 0x2035)) | 0x800) & (v214 ^ 0x5F97B021) ^ (v214 & 0x2035 | 0x1184000);
  LODWORD(v205) = (2 * (v214 ^ 0x5F97B021)) & 0x9B9D5414 ^ 0x88855414 ^ ((2 * (v214 ^ 0x5F97B021)) ^ 0x24228828) & (v214 ^ 0x5F97B021);
  v224 = (4 * v223) & 0x1B9D5414 ^ v223 ^ ((4 * v223) ^ 0x4601000) & v205;
  LODWORD(v205) = (4 * v205) & 0x9B9D5414 ^ 0x91880404 ^ ((4 * v205) ^ 0x6E755050) & v205;
  v225 = (16 * v224) & 0x1B9D5410 ^ v224 ^ ((16 * v224) ^ 0x11814000) & v205;
  LODWORD(v205) = (16 * v205) & 0x9B9D5410 ^ 0x2081414 ^ ((16 * v205) ^ 0xB9D54140) & v205;
  v226 = v225 ^ 0x12100014 ^ (v225 << 8) & 0x9B9D5400 ^ ((v225 << 8) ^ 0x99540000) & v205;
  LODWORD(v214) = v214 ^ (2
                        * ((v226 << 16) & 0x1B9D0000 ^ v226 ^ ((v226 << 16) ^ 0x54140000) & (((_DWORD)v205 << 8) & 0x1B9D0000 ^ 0x2890000 ^ (((_DWORD)v205 << 8) ^ 0x9D540000) & v205)));
  STACK[0x1818] = v222;
  v227 = 1056964608 * (*(unsigned __int8 *)((*(unsigned __int8 *)(v182 + BYTE2(v222)) ^ 0x12) + v53 + 41218) ^ 9);
  LODWORD(v205) = *(unsigned __int8 *)(v182 + BYTE1(v222));
  v228 = v186[32];
  LODWORD(STACK[0x17EC]) = v228;
  v229 = ((v228 << 24) | ((_DWORD)v205 << 16) | (*(unsigned __int8 *)(v182
                                                                    + (*(unsigned __int8 *)(v53
                                                                                          + (v214 ^ 0xD3184C1D)) ^ 0x38)) << 8)) ^ v227 | *(unsigned __int8 *)(v182 + (v222 >> 24));
  LODWORD(STACK[0x1778]) = v212 ^ v204;
  LODWORD(v214) = v229 ^ v212 ^ v204;
  LODWORD(STACK[0x1870]) = v214;
  v230 = v214 ^ v220;
  LODWORD(v214) = (*(unsigned __int8 *)(v182 + BYTE2(v230)) << 24) | (*(unsigned __int8 *)(v182 + BYTE1(v230)) << 16);
  v231 = v230;
  STACK[0x17A8] = v230;
  LODWORD(v214) = v214 | *(unsigned __int8 *)(v182 + (v230 >> 24));
  LODWORD(v230) = v186[64] << 24;
  LODWORD(STACK[0x1738]) = v230;
  v232 = v229 ^ v215;
  LODWORD(STACK[0x17A0]) = v232;
  LODWORD(v230) = (v214 ^ v232 ^ v230) - 1926392729 - 2 * ((v214 ^ v232 ^ v230) & 0xD2D9477 ^ (v214 ^ v232) & 0x10);
  LODWORD(STACK[0x17B0]) = v230;
  LODWORD(v214) = (*(unsigned __int8 *)(v182 + v231) << 8) ^ 0x8D2D9467 ^ v230;
  v233 = v214 ^ v221;
  v234 = v214;
  LODWORD(STACK[0x1770]) = v214;
  v235 = v214 ^ v221 ^ v231;
  LODWORD(v214) = *(unsigned __int8 *)(v53
                                     + ((-3 * *(_BYTE *)(v182 + (v214 ^ v221 ^ v231))) ^ 0xFDu)
                                     + 40108);
  v236 = v186[128];
  STACK[0x16D0] = v236;
  v237 = v53;
  LODWORD(v236) = 1056964608 * (*(unsigned __int8 *)((v236 ^ 0x12) + v53 + 41218) ^ 9);
  STACK[0x1700] = v235;
  LODWORD(v214) = ((v214 >> 7) | (2 * v214)) ^ (((v214 >> 7) | (2 * v214)) >> 6) ^ (((v214 >> 7) | (2 * v214)) >> 4) ^ 0xFFFFFFD7;
  v238 = (*(unsigned __int8 *)(v182 + (v235 >> 24)) | (v236 | (*(unsigned __int8 *)(v182 + BYTE1(v235)) << 16)) ^ (*(unsigned __int8 *)(v182 + BYTE2(v235)) << 24)) & 0xFFFF00FF | (((v214 >> 2) | ((_BYTE)v214 << 6)) << 8);
  LODWORD(v236) = v186[27];
  LODWORD(STACK[0x173C]) = v236;
  STACK[0x1468] = (unint64_t)v186;
  v239 = v238 ^ v220;
  LODWORD(v214) = (*(unsigned __int8 *)(v237 + ((71 * v236) ^ 0xB1u) + 22623) - 84) ^ 0x29;
  v240 = v237;
  LODWORD(v236) = (*(_BYTE *)(v237
                                             + (((*(_BYTE *)(v182 + (v239 >> 24)) >> 3) | (32 * *(_BYTE *)(v182 + (v239 >> 24)))) ^ 0x9Du)
                                             + 1665)
                                  - 38);
  LODWORD(v220) = ((*(_BYTE *)(v237
                                              + (((*(_BYTE *)(v182 + (v239 >> 24)) >> 3) | (32 * *(_BYTE *)(v182 + (v239 >> 24)))) ^ 0x9Du)
                                              + 1665)
                                   - 38) >> 5) ^ (v236 >> 4) | ((_DWORD)v214 << 24);
  LODWORD(v214) = (((v239 >> 3) & 0xE0 | ((unsigned __int16)v239 >> 11)) ^ 0x9D) + 1338530332;
  LODWORD(v205) = (v214 ^ 0x32DED564) & (2 * (v214 & 0x65)) ^ v214 & 0x65;
  LODWORD(v237) = (2 * (v214 ^ 0x32DED524)) & 0x82E97940 ^ 0x82290941 ^ ((2 * (v214 ^ 0x32DED524)) ^ 0x5128282) & (v214 ^ 0x32DED524);
  LODWORD(v205) = (v205 & 0xFFFFFEFF | (((v205 >> 6) & 1) << 8)) ^ ((4 * v205) | 0x6000) & v237;
  LODWORD(v237) = (4 * v237) & 0x82E97940 ^ 0x80481841 ^ ((4 * v237) ^ 0xBA5E504) & v237;
  LODWORD(v205) = (16 * v205) & 0x2E97940 ^ v205 ^ ((16 * v205) ^ 0x78000) & v237;
  LODWORD(v237) = (16 * v237) & 0x82E97940 ^ 0x80686941 ^ ((16 * v237) ^ 0x2E979410) & v237;
  LODWORD(v205) = v205 ^ 0x82800141 ^ ((_DWORD)v205 << 8) & 0x2E97900 ^ (((_DWORD)v205 << 8) ^ 0x1780000) & v237;
  v241 = v239 ^ 0xE2;
  LOBYTE(v214) = *(_BYTE *)(v240
                          + (v214 ^ (2
                                                 * (((_DWORD)v205 << 16) & 0x2E90000 ^ v205 ^ (((_DWORD)v205 << 16) ^ 0x79410000) & (((_DWORD)v237 << 8) & 0x82E90000 ^ 0x2800000 ^ (((_DWORD)v237 << 8) ^ 0x69790000) & v237))) ^ 0xB5675EE7))
               - 38;
  LODWORD(v220) = (v220 - 1795162112) ^ (v236 | (*(unsigned __int8 *)(v182 + BYTE2(v239)) << 24)) | (*(unsigned __int8 *)(v182 + (v239 ^ 0xE2u)) << 8) | (*(unsigned __int8 *)(v182 + ((v214 ^ (v214 >> 5) ^ (v214 >> 4)) ^ 0xE2u)) << 16);
  LODWORD(STACK[0x17BC]) = v233;
  LODWORD(v236) = v233 - 1926392729 - ((2 * v233) & 0x1A5B28CE);
  LODWORD(STACK[0x172C]) = v236;
  v242 = v238 ^ v234;
  LODWORD(v220) = v220 ^ v238 ^ v234;
  LODWORD(v214) = v220 ^ 0x8D2D9467;
  v243 = v220 ^ 0x8D2D9467 ^ v236;
  v244 = v243 ^ v239 ^ 0xE2;
  LODWORD(v236) = ((-3 * *(_BYTE *)(v182 + (v243 ^ v239 ^ 0xE2))) ^ 0xFD) + 1873923031;
  LODWORD(v205) = (2 * (v236 & 0x80D5)) & (v236 ^ 0xB9468FF4) ^ (v236 & 0x80D5 | 0x4920) ^ ((2 * (v236 & 0x80D5)) & 0x120 | 0x29085601);
  LODWORD(v237) = (2 * (v236 ^ 0xB9468FF4)) & 0xF20 ^ 0x4121 ^ ((2 * (v236 ^ 0xB9468FF4)) ^ 0x52100642) & (v236 ^ 0xB9468FF4);
  LODWORD(v205) = (4 * v205) & 0x20005F20 ^ v205 ^ ((4 * v205) ^ 0xA4217C84) & v237;
  LODWORD(v237) = (4 * v237) & 0x29085F20 ^ 0x9080321 ^ ((4 * v237) ^ 0xA4217C84) & v237;
  LODWORD(v205) = (16 * v205) & 0x29085F20 ^ v205 ^ ((16 * v205) ^ 0x90803210) & v237;
  LODWORD(v237) = (16 * v237) & 0x29085F20 ^ 0x29080D21 ^ ((16 * v237) ^ 0x9085F210) & v237;
  LODWORD(v205) = v205 ^ ((_DWORD)v205 << 8) & 0x29085F00 ^ (((_DWORD)v205 << 8) ^ 0x8112100) & v237;
  LODWORD(v236) = *(unsigned __int8 *)(v240
                                     + (v236 ^ 0xD05E6E97 ^ (2
                                                                         * (((v205 ^ 0x28004F00) << 16) & 0x29080000 ^ v205 ^ 0x28004F00 ^ (((v205 ^ 0x28004F00) << 16) ^ 0x5F210000) & (((_DWORD)v237 << 8) & 0x29080000 ^ 0x21000000 ^ (((_DWORD)v237 << 8) ^ 0x85F0000) & v237)))));
  LODWORD(v236) = ((v236 >> 7) | (2 * v236)) ^ (((v236 >> 7) | (2 * v236)) >> 6) ^ (((v236 >> 7) | (2 * v236)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(v237) = *(unsigned __int8 *)(v182 + (v244 >> 24));
  LODWORD(v205) = (*(unsigned __int8 *)(v182 + BYTE1(v244)) << 16) | (((v236 >> 2) | ((_BYTE)v236 << 6)) << 8);
  LODWORD(v236) = v186[54];
  LODWORD(STACK[0x1740]) = v236;
  LODWORD(v236) = (v205 | ((_DWORD)v236 << 24)) ^ (*(unsigned __int8 *)(v182 + BYTE2(v244)) << 24) | v237;
  v245 = v220 ^ 0x16161616;
  LODWORD(v220) = 16843009
                * (63
                                  * (*(_BYTE *)((((LODWORD(STACK[0x1858]) ^ 0x5A) - (v220 ^ 0x16) + 84) ^ 0x12u)
                                              + v240
                                              + 41218) ^ 9))
                - 1772871670;
  LODWORD(v235) = (v220 ^ 0x4903DFE6) & (2 * (v220 & 0x69ABDFF6)) ^ v220 & 0x69ABDFF6;
  v246 = ((2 * (v220 ^ 0x8900DBC2)) ^ 0xC1560868) & (v220 ^ 0x8900DBC2) ^ (2 * (v220 ^ 0x8900DBC2)) & 0xE0AB0434;
  LODWORD(v235) = (v246 ^ 0xC0020024) & (4 * v235) ^ v235;
  v247 = ((4 * (v246 ^ 0x20A90414)) ^ 0x82AC10D0) & (v246 ^ 0x20A90414) ^ (4 * (v246 ^ 0x20A90414)) & 0xE0AB0434;
  LODWORD(v235) = (v247 ^ 0x80A80004) & (16 * v235) ^ v235;
  v248 = ((16 * (v247 ^ 0x60030424)) ^ 0xAB04340) & (v247 ^ 0x60030424) ^ (16 * (v247 ^ 0x60030424)) & 0xE0AB0430;
  LODWORD(v235) = v235 ^ 0xE0AB0434 ^ (v248 ^ 0xA00034) & ((_DWORD)v235 << 8);
  v249 = v220 ^ (2
               * (((_DWORD)v235 << 16) & 0x60AB0000 ^ v235 ^ (((_DWORD)v235 << 16) ^ 0x4340000) & (((v248 ^ 0xE00B0434) << 8) & 0xE0AB0000 ^ 0x40AB0000 ^ (((v248 ^ 0xE00B0434) << 8) ^ 0x2B040000) & (v248 ^ 0xE00B0434))));
  LODWORD(v235) = LODWORD(STACK[0x1834]) - 1926392729 - ((2 * LODWORD(STACK[0x1834])) & 0x1A5B28CE);
  v250 = ((v236 - 1926392729 - 2 * (v236 & LODWORD(STACK[0x1894]) ^ v237 & 8)) ^ v214)
       - 1926392729
       - ((2 * ((v236 - 1926392729 - 2 * (v236 & LODWORD(STACK[0x1894]) ^ v237 & 8)) ^ v214)) & 0x1A5B28CE);
  LODWORD(STACK[0x1718]) = v221;
  LODWORD(v237) = v221 - 1926392729 - ((2 * v221) & 0x1A5B28CE);
  LODWORD(STACK[0x1730]) = v196;
  LODWORD(v222) = v196 - 1926392729 - ((2 * v196) & 0x1A5B28CE);
  v251 = v243 - 1926392729 - ((2 * v243) & 0x1A5B28CE);
  v252 = v238 ^ LODWORD(STACK[0x1870]);
  LODWORD(v186) = v236 ^ v252 ^ 0xE2;
  LODWORD(v214) = v214 ^ ((v252 ^ 0xE2) - 1926392729 - ((2 * (v252 ^ 0xE2)) & 0x1A5B28CE));
  v253 = v214 - 1926392729 - ((2 * v214) & 0x1A5B28CE);
  v254 = v249 ^ 0x259043F9;
  v255 = v249 ^ 0x259043F9 ^ v235;
  v256 = v249 ^ 0x259043F9 ^ v237;
  LODWORD(STACK[0x16EC]) = v215;
  LODWORD(STACK[0x16F8]) = 2112749527;
  LODWORD(v236) = ((((v256 ^ 0xA4EEF5AF) - 48777729) ^ ((v256 ^ 0x64261F79) + 1038049065) ^ ((v256 ^ 0xEBE3C11F)
                                                                                           - 1306885809))
                 + 442181838
                 + (((v255 ^ 0xDC9A9A65) - 1471219716) ^ ((v255 ^ 0xB9138CB5) - 842538708) ^ ((v255 ^ 0x638F10D6)
                                                                                            + 391871817))) ^ 0x7DEDFFD7;
  LODWORD(v214) = v249 ^ 0x259043F9 ^ (v215 - 1926392729 - ((2 * v215) & 0x1A5B28CE));
  LODWORD(STACK[0x1710]) = v214;
  LODWORD(v237) = v249 ^ 0x259043F9 ^ v222;
  LODWORD(STACK[0x1708]) = v237;
  LODWORD(v215) = (v237 & 0x37373737 ^ 0x20251104)
                + (v237 & 0x4113110 ^ 0x4410A858)
                - ((v237 & 0x37373737 ^ 0x20251104) & 0x4113110);
  LODWORD(v222) = ((((v215 & 0x152EE010 ^ 0x200000) + (v215 ^ 0x15CEF557) - ((v215 ^ 0x15CEF557) & 0x152EE010)) ^ 0x67D7BE18)
                 + (v237 & 0x37373737 ^ 0x34343434)) & ~(v236 + (v214 ^ 0x2B2B2BC9)) | (v236 + (v214 ^ 0x2B2B2BC9)) & 0x37373737;
  v257 = v249 ^ 0x259043F9 ^ LODWORD(STACK[0x1860]);
  v258 = (v236 - 1926392729 - ((2 * v236) & 0x1A5B28CE)) ^ v257;
  v259 = v249 ^ 0x9F8AE0A9 ^ v250;
  v260 = v249 ^ 0x9F8AE0A9 ^ ((_DWORD)v186 - 1926392729 - ((2 * (_DWORD)v186) & 0x1A5B28CE));
  v261 = v249 ^ 0x259043F9 ^ v186;
  v262 = v261 ^ v239 ^ 0xE2 ^ v222;
  v263 = v261 ^ v243 ^ 0x37373737;
  v264 = v249 ^ 0x259043F9 ^ v245;
  v265 = v249 ^ 0xBEABC188 ^ v253;
  v266 = (v258 & 2 | (2 * (v258 & 2)) ^ 0x4304) - 1062657286;
  v267 = v249 ^ 0x61741E57 ^ LODWORD(STACK[0x10B8]);
  LODWORD(STACK[0x16F0]) = v267;
  v268 = v249 ^ 0x61741E57 ^ LODWORD(STACK[0x1130]);
  v269 = v249 ^ 0x61741E57 ^ LODWORD(STACK[0x1094]);
  v270 = v249 ^ 0x61741E57 ^ LODWORD(STACK[0x1088]);
  if ((v258 & 1) != 0)
    v271 = v263;
  else
    v271 = v262;
  LODWORD(STACK[0x1660]) = v271;
  if ((v258 & 1) != 0)
    v272 = v260;
  else
    v272 = v263;
  LODWORD(STACK[0x17C0]) = v272;
  if ((v258 & 1) != 0)
    v273 = v262;
  else
    v273 = v259;
  LODWORD(STACK[0x1860]) = v273;
  if ((v258 & 1) != 0)
    v274 = v267;
  else
    v274 = v268;
  if ((v258 & 1) != 0)
    v275 = v269;
  else
    v275 = v270;
  LODWORD(STACK[0x159C]) = v264;
  if ((v258 & 1) != 0)
    v276 = v264;
  else
    v276 = v265;
  LODWORD(STACK[0x16A4]) = v276;
  if ((v258 & 2 | (2 * (v258 & 2)) ^ 0x4304) == 0x4302)
    v277 = v275;
  else
    v277 = v274;
  LODWORD(STACK[0xE0C]) = v277;
  v278 = (((v277 & 0x16161616 ^ 0x12101206) - ((2 * (v277 & 0x16161616 ^ 0x12101206)) & 0x4000808) + 1114227844) & 0x7E167EFE ^ 0x54144284)
       + ((((2 * (v277 & 0x16161616 ^ 0x172265D6)) & 0x246C0700) - (v277 & 0x16161616 ^ 0x172265D6) + 629732479) ^ 0x20B893B9);
  v279 = v249 ^ 0xBEABC188 ^ v251;
  v280 = v244 ^ 0x8D2D9467 ^ v254 ^ (v278 - 1926392729 - ((2 * v278) & 0x1A5B28CC));
  v281 = (v252 ^ LODWORD(STACK[0x17BC])) - 1926392729 - ((2 * (v252 ^ LODWORD(STACK[0x17BC]))) & 0x1A5B28CE);
  v282 = v242 - 1926392729 - ((2 * v242) & 0x1A5B28CE);
  v283 = v241 & 0xD2D9477 ^ v239 & 0x10;
  v284 = v249 ^ 0x56432982 ^ (v252 - 1926392729 - ((2 * v252) & 0x1A5B28CE));
  v285 = v249 ^ 0x56432982 ^ v281;
  v286 = v249 ^ 0x56432982 ^ v282;
  LODWORD(STACK[0x1588]) = v280;
  if ((v258 & 1) != 0)
    v287 = v279;
  else
    v287 = v280;
  if ((v258 & 1) != 0)
    v288 = v284;
  else
    v288 = v285;
  LODWORD(STACK[0x17BC]) = v288;
  if ((v258 & 1) != 0)
    v289 = v259;
  else
    v289 = v260;
  v290 = v241 - 1926392729 - 2 * v283;
  v291 = STACK[0x1770];
  v292 = STACK[0x1770] & LODWORD(STACK[0x1838]) ^ STACK[0x17B0] & 0x18;
  if ((v258 & 1) != 0)
    v284 = v286;
  LODWORD(STACK[0x1838]) = v284;
  if ((v258 & 1) != 0)
    v279 = v265;
  LODWORD(STACK[0x16C8]) = v279;
  v293 = STACK[0x1870];
  v294 = (v291 ^ v293) - 1926392729 - ((2 * (v291 ^ v293)) & 0x1A5B28CE);
  v295 = v290 ^ 0x73D36A99 ^ v254;
  if ((v258 & 1) != 0)
    v296 = v290 ^ 0x73D36A99 ^ v254;
  else
    v296 = v286;
  LODWORD(STACK[0x17B0]) = v296;
  if ((v258 & 1) != 0)
    v295 = v285;
  LODWORD(STACK[0x1834]) = v295;
  v297 = (STACK[0x17A8] - 1926392729 - ((2 * STACK[0x17A8]) & 0x1A5B28CE)) ^ 0x10B009FA;
  v298 = LODWORD(STACK[0x1718]) ^ 0x9D9D9D9D ^ v293;
  v299 = v249 ^ 0x35204AE1 ^ (v293 - 1926392729 - ((2 * v293) & 0x1A5B28CE));
  v300 = v249 ^ 0x35204AE1 ^ (LODWORD(STACK[0x17A0]) - 1926392729 - ((2 * LODWORD(STACK[0x17A0])) & 0x1A5B28CE));
  LODWORD(STACK[0x1718]) = v249 ^ 0x41543E77;
  v301 = v249 ^ 0x41543E77 ^ v294;
  v302 = (v291 - 1926392729 - 2 * v292) ^ 0x64C47D6C ^ v254;
  LODWORD(STACK[0x1598]) = v301;
  LODWORD(STACK[0x1570]) = v302;
  if ((v258 & 1) == 0)
    v302 = v301;
  LODWORD(STACK[0x16C0]) = v302;
  v303 = v298 ^ v254;
  v304 = v297 ^ v254;
  if ((v258 & 1) != 0)
    v305 = v298 ^ v254;
  else
    v305 = v297 ^ v254;
  LODWORD(STACK[0x16B8]) = v305;
  LODWORD(STACK[0x1560]) = v299;
  if ((v258 & 1) != 0)
    v303 = v299;
  LODWORD(STACK[0x17A8]) = v303;
  v306 = v249 ^ 0xE3F69CD5 ^ LODWORD(STACK[0x1820]);
  v307 = v257 ^ 0x4B4B4B4B;
  if ((v258 & 1) != 0)
    v308 = v249 ^ 0xE3F69CD5 ^ LODWORD(STACK[0x1820]);
  else
    v308 = v257 ^ 0x4B4B4B4B;
  LODWORD(STACK[0x16B0]) = v308;
  v309 = ((v308 & 0x80E085CA ^ 0x80E74A8B) + (v308 & 0x2A002020 ^ 0x22002021) - 2) ^ 0x1BCBECCF;
  v310 = STACK[0x1778];
  v311 = LODWORD(STACK[0x16EC]) ^ LODWORD(STACK[0x1778]) ^ v254 ^ (((((2 * v309) | 0xE22A4E84) - v309 + 250271934) ^ 0x6AF980AF | ((((v308 & 0xAAE0A5EA ^ 0x1BDA0D1F) - 1) & 0x81828582 ^ 0x4400C483) + (((v308 & 0xAAE0A5EA ^ 0x1BDA0D1F) - 1) ^ 0x81EA1134) - ((((v308 & 0xAAE0A5EA ^ 0x1BDA0D1F) - 1) ^ 0x81EA1134) & 0x90809D82)) ^ 0xC79245CB)
                                                                 - 2142599871);
  v312 = STACK[0x1818] - 1926392729 - ((2 * STACK[0x1818]) & 0x1A5B28CE);
  v313 = v256 ^ 0xA606BFAE;
  v314 = LODWORD(STACK[0x1710]) ^ 0xA606BFAE;
  LODWORD(STACK[0x1558]) = v300;
  if ((v258 & 1) == 0)
    v304 = v300;
  LODWORD(STACK[0x17A0]) = v304;
  if ((v258 & 1) != 0)
    v315 = v311;
  else
    v315 = v313;
  v316 = v312 ^ 0xA606BF4C ^ v254;
  if ((v258 & 1) != 0)
    v317 = v314;
  else
    v317 = v311;
  LODWORD(STACK[0x1820]) = v317;
  if ((v258 & 1) != 0)
    v318 = v312 ^ 0xA606BF4C ^ v254;
  else
    v318 = v314;
  if ((v258 & 1) != 0)
    v316 = v313;
  LODWORD(STACK[0x1818]) = v316;
  v319 = STACK[0x1858];
  v320 = v249 ^ 0x9386EC47 ^ (LODWORD(STACK[0x1790]) - 1926392729 - ((2 * LODWORD(STACK[0x1790])) & 0x1A5B28CE));
  v321 = v249 ^ 0x9386EC47 ^ (v310 - 1926392729 - ((2 * v310) & 0x1A5B28CE));
  v322 = STACK[0x1798] - 1926392729 - ((2 * STACK[0x1798]) & 0x1A5B28CE);
  if ((v258 & 1) != 0)
    v323 = v249 ^ 0x9386EC47 ^ (LODWORD(STACK[0x1790]) - 1926392729 - ((2 * LODWORD(STACK[0x1790])) & 0x1A5B28CE));
  else
    v323 = v249 ^ 0x9386EC47 ^ (v310 - 1926392729 - ((2 * v310) & 0x1A5B28CE));
  LODWORD(STACK[0x1798]) = v323;
  if ((v258 & 1) == 0)
    v321 = v249 ^ 0x9386EC47 ^ ((v310 ^ v319) - 1926392729 - ((2 * (v310 ^ v319)) & 0x1A5B28CE));
  v324 = v322 ^ 0xB616AF5C ^ v254;
  if ((v258 & 1) != 0)
  {
    v320 = v324;
    v325 = v249 ^ 0x9386EC47 ^ ((v310 ^ v319) - 1926392729 - ((2 * (v310 ^ v319)) & 0x1A5B28CE));
  }
  else
  {
    v325 = v324;
  }
  LODWORD(STACK[0x1790]) = v325;
  v326 = LODWORD(STACK[0x1890]) - 1926392729 - LODWORD(STACK[0x1810]);
  v327 = LODWORD(STACK[0x17CC]) - 1926392729 - ((2 * LODWORD(STACK[0x17CC])) & 0x1A5B28CE);
  v328 = LODWORD(STACK[0x1890]) ^ 0x5A5A5A5A ^ LODWORD(STACK[0x17CC]) ^ v254;
  v329 = STACK[0x1808] - 1926392729 - ((2 * STACK[0x1808]) & 0x1A5B28CE);
  v330 = v249 ^ 0xE3F69CD5 ^ LODWORD(STACK[0x1850]);
  v331 = v255 ^ 0x8B2B9261;
  LODWORD(STACK[0x1800]) = v249;
  LODWORD(STACK[0x1710]) = v249 ^ 0xAEBBD198;
  v332 = v249 ^ 0xAEBBD198 ^ v326;
  LODWORD(STACK[0x1554]) = v255 ^ 0x8B2B9261;
  LODWORD(STACK[0x1548]) = v332;
  if ((v258 & 1) == 0)
    v331 = v332;
  LODWORD(STACK[0x1690]) = v331;
  v334 = v249 ^ 0xF2E78DC4 ^ v327;
  if ((v258 & 1) != 0)
    v335 = v328;
  else
    v335 = v319 ^ 0x7FCA19A3 ^ v249;
  LODWORD(STACK[0x1850]) = v335;
  if ((v258 & 1) != 0)
    v336 = v334;
  else
    v336 = v328;
  LODWORD(STACK[0x1778]) = v336;
  LODWORD(STACK[0x16EC]) = v258;
  if ((v258 & 1) != 0)
    v269 = v268;
  else
    v270 = STACK[0x16F0];
  v333 = v249 ^ 0xF2E78DC4;
  v337 = LODWORD(STACK[0x1708]) ^ 0xC666DF2C;
  if ((v258 & 1) != 0)
    v306 = LODWORD(STACK[0x1708]) ^ 0xC666DF2C;
  LODWORD(STACK[0x1810]) = v306;
  if ((v258 & 1) != 0)
    v338 = v330;
  else
    v338 = v337;
  if ((v258 & 1) != 0)
    v330 = v307;
  LODWORD(STACK[0x1808]) = v330;
  if ((v258 & 1) != 0)
    v339 = v319 ^ 0x7FCA19A3 ^ v249;
  else
    v339 = v333 ^ v329;
  LODWORD(STACK[0x1770]) = v339;
  if ((v258 & 1) != 0)
    v340 = v333 ^ v329;
  else
    v340 = v334;
  LODWORD(STACK[0x17CC]) = v340;
  LODWORD(STACK[0x16D8]) = v266;
  v341 = v266 == -1062640132;
  if ((v258 & 2 | (2 * (v258 & 2)) ^ 0x4304) == 0x4302)
    v342 = v274;
  else
    v342 = v275;
  LODWORD(STACK[0x1120]) = v342;
  if ((v258 & 2 | (2 * (v258 & 2)) ^ 0x4304) == 0x4302)
    v343 = v269;
  else
    v343 = v270;
  LODWORD(STACK[0x1680]) = v343;
  if ((v258 & 2 | (2 * (v258 & 2)) ^ 0x4304) == 0x4302)
    v344 = v270;
  else
    v344 = v269;
  if (v341)
    v345 = v321;
  else
    v345 = v320;
  LODWORD(STACK[0x1490]) = v345;
  if (v341)
    v346 = v320;
  else
    v346 = v321;
  v347 = STACK[0x16A4];
  if (v341)
    v348 = v287;
  else
    v348 = STACK[0x16A4];
  LODWORD(STACK[0x144C]) = v348;
  if (v341)
    v287 = v347;
  LODWORD(STACK[0x14B0]) = v287;
  v349 = 71 * LODWORD(STACK[0x1750]);
  v350 = v349 + 704012283;
  v351 = ((2 * (v350 & 0x7966 ^ 0x21041FC6)) ^ 0x42083F8C) & (v350 ^ 0xF70DE6A0) ^ v350 & 0x7966 ^ 0x21041FC6 ^ ((2 * (v350 & 0x7966 ^ 0x21041FC6)) & 0x1FC4 | 0x21040000);
  v352 = ((2 * (v350 ^ 0xF70DE6A0)) ^ 0x42083F8C) & (v350 ^ 0xF70DE6A0) ^ (2 * (v350 ^ 0xF70DE6A0)) & 0x1FC6;
  v353 = v351 ^ v352 & 0xDA381FAC ^ ((4 * v351) ^ 0xFB3C1EA4) & (v352 ^ 0x21041F86);
  v354 = ((4 * v352) ^ 0x7F2C61BC) & (v352 ^ 0x21041F86) ^ v352 & 0xDA381FAC;
  v355 = v353 ^ v354 & 0xFB3C1FAC ^ ((16 * v353) ^ 0xEB7DE3CC) & (v354 ^ 0x21041F86);
  v356 = ((16 * v354) ^ 0xEB7DE7EC) & (v354 ^ 0x21041F86) ^ v354 & 0xFB3C1FAC;
  v357 = v355 ^ 0x21041D84 ^ (v355 << 8) & 0x21041F00 ^ ((v355 << 8) ^ 0x4200) & v356;
  v358 = STACK[0x18B8];
  v359 = (((LODWORD(STACK[0x1760]) ^ LODWORD(STACK[0x1748])) << 24) | (unsigned __int16)(((v349 ^ 0xA5 ^ *(_BYTE *)(STACK[0x18B8] + (v350 ^ 0x9609C6EA ^ (2 * ((v357 << 16) & 0x21040000 ^ v357 ^ ((v357 << 16) ^ 0x1FC60000) & ((v356 << 8) & 0x21040000 ^ 0x21000000 ^ ((v356 << 8) ^ 0x41F0000) & v356)))))) - 107) << 8) | STACK[0x1788] & 0xFF00FFFF | (LODWORD(STACK[0x17D8]) << 16)) ^ LODWORD(STACK[0x1088]);
  v360 = v359 ^ LODWORD(STACK[0x10B8]);
  v361 = STACK[0x1130];
  LODWORD(STACK[0x1708]) = v360 ^ LODWORD(STACK[0x1130]);
  v362 = v360;
  LODWORD(STACK[0x16F0]) = v360;
  v363 = v360 ^ v361 ^ LODWORD(STACK[0x1094]);
  v364 = ((v363 & 0x38 ^ 0x57E12838) - (v363 & 0x38) + (v363 ^ 4)) ^ 0x57F1623C;
  v365 = *(unsigned __int8 *)(v182 + (v363 >> 24)) | (*(unsigned __int8 *)(v182 + BYTE2(v363)) << 24);
  v366 = (v365 - 1926392729 - ((2 * v365) & 0x1A0000CE)) ^ v359;
  v367 = v358 + ((-3 * LODWORD(STACK[0x1780])) ^ 0xFDu);
  LODWORD(v367) = (*(unsigned __int8 *)(v367 + 40108) >> 7) | (2 * *(unsigned __int8 *)(v367 + 40108));
  v368 = (v366 - 1926392729 - ((2 * v366) & 0x1A5B28CE)) ^ (((*(unsigned __int8 *)(v182 + BYTE1(v363)) << 16) | (*(unsigned __int8 *)(v182 + ((1693635997 - (v364 | 0x64F2D59D) + (v364 | 0x9B0D2A62)) ^ 0x9B1D6062)) << 8)) & 0xFFFFFF | (LODWORD(STACK[0x1828]) << 24));
  v369 = v367 ^ (v367 >> 6) ^ (v367 >> 4);
  v370 = v368;
  v371 = v368 ^ v361;
  LODWORD(STACK[0x1698]) = v368 ^ v361;
  v372 = v368 ^ v361 ^ 0x8D2D9467 ^ v363;
  v373 = v368 ^ v361 ^ 0x8D2D9467;
  LODWORD(STACK[0x1668]) = v373;
  v374 = ((71 * (HIBYTE(v372) ^ 0x8D)) ^ 0xB1) + 785730107;
  v375 = ((2 * (v374 & 0x10224)) & 0x408 | v374 & 0x10224) ^ ((2 * (v374 & 0x10224)) & (v374 ^ 0xAD478398) | 0xE66D6507);
  LODWORD(v367) = (2 * (v374 ^ 0xAD478398)) & 0x42481BC ^ 0x4248484 ^ ((2 * (v374 ^ 0xAD478398)) ^ 0x80900978) & (v374 ^ 0xAD478398);
  v376 = (4 * v375) & 0x746C0DB0 ^ v375 ^ ((4 * v375) ^ 0x99B5B41C) & v367;
  LODWORD(v367) = (4 * v367) & 0x7C6C8DBC ^ 0xC4C890C ^ ((4 * v367) ^ 0xF1B236F0) & v367;
  v377 = (16 * v376) & 0x7C6C8DB0 ^ v376 ^ ((16 * v376) ^ 0x64969170) & v367;
  LODWORD(v367) = (16 * v367) & 0x7C6C8DB0 ^ 0x3824043C ^ ((16 * v367) ^ 0xC6C8DBC0) & v367;
  v378 = v377 ^ (v377 << 8) & 0x7C6C8D00 ^ ((v377 << 8) ^ 0x4DE82700) & v367 ^ 0xA249609B;
  LODWORD(STACK[0x16A4]) = v372;
  v379 = (((v369 ^ 0xD7) >> 2) | ((v369 ^ 0xFFFFFFD7) << 6)) ^ *(unsigned __int8 *)(v182 + (BYTE2(v372) ^ 0x2DLL));
  v380 = *(unsigned __int8 *)(v182
                            + (((*(_BYTE *)(v358
                                                           + (v374 ^ (2
                                                                    * ((v378 << 16) & 0x7C6C0000 ^ v378 ^ ((v378 << 16) ^ 0xDBC0000) & (((_DWORD)v367 << 8) & 0x7C6C0000 ^ 0x10600000 ^ (((_DWORD)v367 << 8) ^ 0x6C8D0000) & v367))) ^ 0x31AA155C))
                                                - 84) ^ 0x29)
                                              - 107));
  LODWORD(STACK[0x1858]) = v370;
  v381 = (v380 - 1926392729 - ((2 * v380) & 0xCE)) ^ v370 ^ (v379 << 24);
  v382 = (v381 - 1926392729 - ((2 * v381) & 0x1A5B28CE)) ^ (*(unsigned __int8 *)(v182
                                                                               + (((v372 & 0x6F ^ 0x1A247A08)
                                                                                 + (v372 & 0x90 ^ 0x1800181u)
                                                                                 - 1) ^ 0x1BA47BEFLL)) << 8);
  LODWORD(STACK[0x1688]) = v338;
  v383 = *(unsigned __int8 *)(v182 + (BYTE1(v372) ^ 0x94)) << ((((v338 & 0x10) + 21 + ((2 * (v338 & 0x10)) ^ 0x20)) ^ 0x35)
                                                               + (v338 & 0x10 ^ 0x10));
  v384 = v382 ^ (v383 - 1926392729 - ((2 * v383) & 0x1A5B28CE));
  LODWORD(STACK[0x1670]) = v370 ^ v362;
  v385 = v384 ^ v370 ^ v362;
  v386 = v384;
  LODWORD(STACK[0x1678]) = v384;
  v387 = v385 ^ v363;
  v388 = v385;
  LODWORD(STACK[0x1648]) = v385;
  v389 = *(_BYTE *)(v182 + (((v385 ^ v363) >> 16) ^ 0x2DLL));
  v390 = STACK[0x1660];
  if (v341)
    v391 = v289;
  else
    v391 = STACK[0x1660];
  LODWORD(STACK[0x1780]) = v391;
  if (v341)
    v392 = v390;
  else
    v392 = v289;
  LODWORD(STACK[0x1138]) = v392;
  v393 = ((-3 * v389) ^ 0xFD) + 797153052;
  v394 = (v393 & 0x590 | ((((unsigned __int16)(v393 & 0x590) >> 10) & 1) << 11)) ^ (v393 ^ 0x6783C995) & (2 * (v393 & 0x590));
  v395 = (2 * (v393 ^ 0x6783C995)) & 0xC04 ^ 0x2C405 ^ ((2 * (v393 ^ 0x6783C995)) ^ 0x4800180A) & (v393 ^ 0x6783C995);
  v396 = ((4 * v394) | 0x40000) & v395 ^ v394 ^ ((((v394 >> 8) & 3) << 10) | 0x97F60004);
  v397 = (4 * v395) & 0xB7FECC04 ^ 0x2004CC01 ^ ((4 * v395) ^ 0x48033014) & v395;
  v398 = (16 * v396) & 0xB7FECC00 ^ v396 ^ ((16 * v396) ^ 0x7F900040) & v397;
  v399 = (16 * v397) & 0xB7FECC00 ^ 0x80120C05 ^ ((16 * v397) ^ 0x7FECC050) & v397;
  v400 = v398 ^ (v398 << 8) & 0xB7FECC00 ^ ((v398 << 8) ^ 0x69000400) & v399;
  v401 = *(unsigned __int8 *)(v358
                            + (v393 ^ (2
                                     * (((v400 ^ 0x3697C801) << 16) & 0x37FE0000 ^ v400 ^ 0x3697C801 ^ (((v400 ^ 0x3697C801) << 16) ^ 0x4C050000) & ((v399 << 8) & 0xB7FE0000 ^ 0x1320000 ^ ((v399 << 8) ^ 0xFECC0000) & v399))) ^ 0xB7889D9A));
  v402 = ((2 * v401) >> 6) ^ (((2 * v401) & 0xFE) >> 4) ^ ((v401 >> 7) & 0xFFFFFE01 | (2 * v401)) ^ 0xFFFFFFD7;
  LODWORD(STACK[0x1828]) = v344;
  v403 = ((v402 >> 2) | (v402 << 6)) ^ LODWORD(STACK[0x1840]);
  LODWORD(STACK[0x1664]) = v387;
  v404 = (*(unsigned __int8 *)(v182 + (BYTE1(v387) ^ 0x94)) << 16) | (v403 << 24) | (*(unsigned __int8 *)(v182 + ((-462279164 - (v387 ^ 0x6442036D | 0xE4722E04) + (v387 ^ 0x6442036D | 0x1B8DD1FB)) ^ 0x7FCFD2F1)) << 8) | *(unsigned __int8 *)(v182 + ((v387 ^ 0x8D2D9467) >> (((((v344 | 0xE7) + 27) & 0xA ^ 0x29) + (((v344 | 0xE7) + 27) ^ 2) - ((((v344 | 0xE7) + 27) ^ 2) & 8)) ^ 0x2B | ((((v344 | 0xE7) - 67) ^ 0xE5) - ((2 * (((v344 | 0xE7) - 67) ^ 0xE5)) & 0xA0) + 84) ^ 0xD)));
  LODWORD(STACK[0x1650]) = v404;
  v405 = *(unsigned __int8 *)(STACK[0x1468] + 16) << ((((84
                                                       - (STACK[0x1860] & 0x18 ^ 0x18 | 0x54)
                                                       + (STACK[0x1860] & 0x18 ^ 0x18 | 0xAA)
                                                       + 1) ^ 0x7A)
                                                     - 1) ^ 0xD0 | (((((2 * LODWORD(STACK[0x1860])) & 0x10)
                                                                    + (STACK[0x1860] & 0x18 ^ 0xEF)
                                                                    + 81) ^ 0x57)
                                                                  - 1) ^ 0x16);
  v406 = v386 ^ v404;
  v407 = v386 ^ v404 ^ v371 ^ v387;
  v408 = ((-3 * (BYTE1(v407) ^ 0x94)) ^ 0xFD) + 812552069;
  v409 = (v408 ^ 0x2E7FCCA6) & (2 * (v408 & 0xD27)) ^ v408 & 0xD27;
  v410 = (2 * (v408 ^ 0x2E7FDCEA)) & 0x202091CC ^ 0x20245045 ^ ((2 * (v408 ^ 0x2E7FDCEA)) ^ 0x211039A) & (v408 ^ 0x2E7FDCEA);
  v411 = (4 * v409) & 0x518C ^ v409 ^ ((4 * v409) | 0x180000) & v410;
  v412 = (4 * v410) & 0x61EDD1CC ^ 0x604890C9 ^ ((4 * v410) ^ 0x7B74734) & v410;
  v413 = (16 * v411) & 0x61EDD1C0 ^ v411 ^ ((16 * v411) ^ 0xE00000) & v412;
  v414 = (16 * v412) & 0xE1EDD1C0 ^ 0xE120C10D ^ ((16 * v412) ^ 0x1EDD1CD0) & v412;
  v415 = v413 ^ (v413 << 8) & 0xE1EDD100 ^ ((v413 << 8) ^ 0xEE000000) & v414 ^ 0x103D1CD;
  v416 = v408 ^ (2
               * ((v415 << 16) & 0x61ED0000 ^ v415 ^ ((v415 << 16) ^ 0x51CD0000) & ((v414 << 8) & 0x61ED0000 ^ 0x2C0000 ^ ((v414 << 8) ^ 0x6DD10000) & v414)));
  LODWORD(STACK[0x1584]) = v315;
  LODWORD(STACK[0x156C]) = v318;
  if (v341)
    v417 = v315;
  else
    v417 = v318;
  STACK[0x1840] = v417;
  v418 = *(unsigned __int8 *)(v358 + (v416 ^ 0x8FD3AEBD));
  v419 = ((2 * v418) >> 6) ^ (((2 * v418) & 0xFE) >> 4) ^ ((v418 >> 7) & 0xFFFFFE01 | (2 * v418)) ^ 0xFFFFFFD7;
  LOBYTE(v419) = (v419 >> (((((2 * ((-50 - (v417 & 2)) ^ 0x4F)) & 0x84)
                                            - ((-50 - (v417 & 2)) ^ 0x4F)
                                            - 67) ^ 0x3E)
                                          + (v417 & 2))) ^ ((_BYTE)v419 << 6);
  v420 = v358;
  v421 = ((-3
                          * *(_BYTE *)(v182
                                     + (63
                                                       * (*(_BYTE *)((((v407 & 0xC7)
                                                                     + (v407 ^ 0xFFFFFFD7)
                                                                     + (v407 | 0xB9B7F938)
                                                                     + 1) ^ 0xB9B7F965)
                                                                   + v358
                                                                   + 41218) ^ 9)))) ^ 0xFD)
       + 118242986;
  v422 = ((4 * (((unsigned __int16)(v421 & 0x802) >> 1) & 1)) | 0x47000008) ^ (v421 & 0x802 | 0x20971495) ^ ((2 * (v421 & 0x802)) | 0x82400) & (v421 ^ 0x9F67589F);
  v423 = (2 * (v421 ^ 0x9F67589F)) & 0x29C ^ 0x30685 ^ ((2 * (v421 ^ 0x9F67589F)) ^ 0x8822053A) & (v421 ^ 0x9F67589F);
  v424 = (4 * v422) & 0x6793069C ^ v422 ^ ((4 * v422) ^ 0x9E4C1A74) & v423;
  v425 = (4 * v423) & 0x6793069C ^ 0x61930489 ^ ((4 * v423) ^ 0x9E4C1A74) & v423;
  v426 = (16 * v424) & 0x67930690 ^ v424 ^ ((16 * v424) ^ 0x19304890) & v425;
  v427 = (16 * v425) & 0x67930690 ^ 0x683060D ^ ((16 * v425) ^ 0x793069D0) & v425;
  v428 = v426 ^ 0x4100284 ^ (v426 << 8) & 0x67930600 ^ ((v426 << 8) ^ 0x83041900) & v427;
  v429 = *(unsigned __int8 *)(v358
                            + (v421 ^ (2
                                     * ((v428 << 16) & 0x67930000 ^ v428 ^ ((v428 << 16) ^ 0x69D0000) & ((v427 << 8) & 0x67930000 ^ 0x64910000 ^ ((v427 << 8) ^ 0x93060000) & v427))) ^ 0x3AF05338));
  v430 = ((v429 >> 7) | (2 * v429)) ^ (((v429 >> 7) | (2 * v429)) >> 6) ^ (((v429 >> 7) | (2 * v429)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(STACK[0x1660]) = v407;
  v431 = v405 ^ ((*(unsigned __int8 *)(v182 + (BYTE2(v407) ^ 0x2DLL)) << 24) | (*(unsigned __int8 *)(v182 + v419) << 16) | *(unsigned __int8 *)(v182 + (HIBYTE(v407) ^ 0x8DLL)) | (((v430 >> 2) | ((_BYTE)v430 << 6)) << 8));
  v432 = (2 * v431) & 0x1A5B28CE;
  v433 = v431 - 1926392729 - v432;
  v434 = v431 + LODWORD(STACK[0x1898]) + ~v432;
  v435 = v363 ^ 0x8D2D9467;
  LODWORD(STACK[0x1644]) = v435;
  v436 = v431 ^ v435;
  v437 = v182;
  v438 = (*(unsigned __int8 *)(v182 + (((v431 ^ v435) >> 24) ^ 0x8DLL)) | (LODWORD(STACK[0x17EC]) << 24) | (*(unsigned __int8 *)(v182 + ((v431 ^ v435) ^ 0x67)) << 8) | (*(unsigned __int8 *)(v182 + (((unsigned __int16)(v431 ^ v435) >> 8) ^ 0x94)) << 16)) ^ (*(unsigned __int8 *)(v182 + (((v431 ^ v435) >> 16) ^ 0x2DLL)) << 24);
  LODWORD(STACK[0x1610]) = v406 ^ 0x8D2D9467;
  v439 = v433 ^ v406 ^ 0x8D2D9467;
  LODWORD(STACK[0x160C]) = v439;
  v440 = v438 ^ v439;
  LODWORD(STACK[0x15E4]) = v438 ^ v439;
  v441 = (v438 ^ v439) - 1926392729 - ((2 * (v438 ^ v439)) & 0x1A5B28CE);
  LODWORD(STACK[0x15F0]) = v441;
  v442 = v406 ^ v373;
  LODWORD(STACK[0x1870]) = v442;
  v443 = v441 ^ v442;
  v444 = (v441 ^ v442) - 1926392729 - ((2 * (v441 ^ v442)) & 0x1A5B28CE);
  LODWORD(STACK[0x15E8]) = v444;
  v445 = v444 ^ v436;
  v446 = (BYTE3(v445) ^ 0x12) + 1606263298;
  v447 = (2 * (v446 ^ 0x3CBD36C8)) & 0x840109C8 ^ 0x84004848 ^ ((2 * (v446 ^ 0x3CBD36C8)) ^ 0x21009190) & (v446 ^ 0x3CBD36C8);
  v448 = ((BYTE3(v445) ^ 0x12) - 24062) & 0x2100 ^ (v446 ^ 0x3CBD36C8) & 0x23000060 ^ ((v446 ^ 0x3CBD36C8) & 0x23008460 | 0x14254B81) ^ 0x88238388;
  v449 = (4 * v448) & 0x9C7BC1C8 ^ v448 ^ ((4 * v448) ^ 0x701E2824) & v447;
  v450 = (4 * v447) & 0x9CFFC9C8 ^ 0x8C00C8C8 ^ ((4 * v447) ^ 0x73FF2720) & v447;
  v451 = (16 * v449) & 0x9CFFC9C0 ^ v449 ^ ((16 * v449) ^ 0xC1982090) & v450;
  v452 = (16 * v450) & 0x9CFFC9C0 ^ 0x10034148 ^ ((16 * v450) ^ 0xCFFC9C80) & v450;
  v453 = v451 ^ (v451 << 8) & 0x9CFFC900 ^ ((v451 << 8) ^ 0x81828900) & v452;
  LOBYTE(v446) = 63
               * (*(_BYTE *)(v420
                           + (v446 ^ (2
                                    * (((v453 ^ 0x10FCC241) << 16) & 0x1CFF0000 ^ v453 ^ 0x10FCC241 ^ (((v453 ^ 0x10FCC241) << 16) ^ 0x49C80000) & ((v452 << 8) & 0x1CFF0000 ^ 0x360000 ^ ((v452 << 8) ^ 0x7FC90000) & v452))) ^ 0x882D6C90)) ^ 9);
  STACK[0x1658] = v445;
  v454 = (((*(unsigned __int8 *)(v182 + BYTE2(v445)) << 24) ^ 0x160BA7C2) & ~*(unsigned __int8 *)(v182
                                                                                                + v446) | *(_BYTE *)(v182 + v446) & 0x3D) ^ 0xC944002C;
  v455 = (v454 - ((2 * v454) & 0x629349BC) + 837395678) ^ (LODWORD(STACK[0x1738]) | (*(unsigned __int8 *)(v182 + v445) << 8) | (*(unsigned __int8 *)(v182 + BYTE1(v445)) << 16));
  v456 = STACK[0x16D0];
  v457 = v434 ^ v388;
  v458 = v457 ^ v455;
  v459 = v457;
  LODWORD(STACK[0x15CC]) = v457;
  v460 = v457 ^ v455 ^ 0xEEA60330;
  LODWORD(STACK[0x17EC]) = v460;
  LODWORD(STACK[0x15DC]) = v458;
  v461 = v460 ^ v436;
  v462 = ((v460 ^ v436) ^ 0xC1)
       + ((v460 ^ v436) & 0x68 ^ 0x7398AB28)
       - (((v460 ^ v436) ^ 0xC1) & 0x68);
  LODWORD(STACK[0x1578]) = v346;
  v463 = v461;
  v464 = (*(unsigned __int8 *)(v437 + (BYTE1(v461) ^ 0x94)) << (((-2 - ((v346 & 8 | 0xF6) + (v346 & 0x26 | 0x89))) ^ 0x59 | v346 & 0x2E ^ 8) ^ 0x3E)) ^ (*(unsigned __int8 *)(v437 + (HIBYTE(v461) ^ 0x8DLL)) | ((*(unsigned __int8 *)(v420 + (((v456 >> 3) | (32 * v456)) ^ 0x99u) + 4432) ^ 0x38) << 24));
  LODWORD(v456) = v464 ^ (*(unsigned __int8 *)(v182 + (BYTE2(v461) ^ 0x2DLL)) << 24);
  v465 = v440 ^ v455;
  v466 = (v456 - 1926392729 - 2 * (v456 & LODWORD(STACK[0x1894]) ^ v464 & 8)) ^ (*(unsigned __int8 *)(v182 + (((v462 & 0x11180662 ^ 0x4000420) + (v462 ^ 0x933CBBCE) - ((v462 ^ 0x933CBBCE) & 0x801662)) ^ 0xF53C0662)) << 8) ^ v465;
  LODWORD(STACK[0x15D0]) = v461;
  v467 = v443;
  LODWORD(STACK[0x15E0]) = v443;
  v468 = v466 ^ 0x638B9757 ^ v461 ^ v443;
  v469 = (v466 ^ 0x57 ^ (v461 ^ v443) ^ 0xFFFFFFBC)
       - 148235854
       + ((2 * (v466 ^ 0x57 ^ (v461 ^ v443))) | 0x11ABCC9E);
  LODWORD(v469) = (((*(_BYTE *)(v437 + (v469 ^ 0x8D5E66B)) >> 3) | (32
                                                                                   * *(_BYTE *)(v437 + (v469 ^ 0x8D5E66B)))) ^ 0x99)
                + 1128837710;
  v470 = ((2 * (v469 & 0x102)) ^ 0x6CDE67CA) & 0x244E0044 ^ (v469 & 0x102 | 0x5B04A235) ^ ((v469 ^ 0x8AD87EE7) & ((2 * (v469 & 0x102)) ^ 0x6CDE67CA) & 0x4000404 | 0x4925B190);
  LODWORD(v445) = (2 * (v469 ^ 0x8AD87EE7)) & 0x1E4 ^ 0x2025 ^ ((2 * (v469 ^ 0x8AD87EE7)) ^ 0x489041CA) & (v469 ^ 0x8AD87EE7);
  v471 = (4 * v470) & 0x102C0184 ^ v470 ^ ((4 * v470) ^ 0xD9BC8794) & v445;
  LODWORD(v445) = (4 * v445) & 0x366F21E4 ^ 0x26432061 ^ ((4 * v445) ^ 0xD9BC8794) & v445;
  v472 = (16 * v471) & 0x366F21E0 ^ v471 ^ ((16 * v471) ^ 0x64320610) & v445;
  LODWORD(v445) = (16 * v445) & 0x366F21E0 ^ 0x100D21A5 ^ ((16 * v445) ^ 0x66F21E50) & v445;
  v473 = v472 ^ (v472 << 8) & 0x366F2100 ^ ((v472 << 8) ^ 0x61206100) & v445;
  LODWORD(v469) = v469 ^ (2
                        * (((v473 ^ 0x142E2084) << 16) & 0x366F0000 ^ v473 ^ 0x142E2084 ^ (((v473 ^ 0x142E2084) << 16) ^ 0x21E50000) & (((_DWORD)v445 << 8) & 0x366F0000 ^ 0x104E0000 ^ (((_DWORD)v445 << 8) ^ 0x6F210000) & v445)));
  v474 = *(unsigned __int8 *)(v182 + (BYTE2(v468) ^ 0x2DLL));
  LODWORD(v445) = (v474 ^ 0xCF) + 1614676922;
  v475 = (v445 & 0x20494 | 0x20C11000 | (2 * (v445 & 0x20494)) & 0x820) ^ (2 * (v445 & 0x20494)) & (v445 ^ 0x252B9674);
  v476 = (2 * (v445 ^ 0x252B9674)) & 0x10AE0 ^ 0x8A20 ^ ((2 * (v445 ^ 0x252B9674)) ^ 0x451115C0) & (v445 ^ 0x252B9674);
  v477 = (4 * v475) & 0x820812E0 ^ v475 ^ v476 & 0x1836F0 & (4 * v475);
  v478 = (4 * v476) & 0xBAE99AE0 ^ 0x10499060 ^ ((4 * v476) ^ 0xEBA66B80) & v476;
  v479 = (16 * v477) & 0xBAE99AE0 ^ v477 ^ ((16 * v477) ^ 0x2C110000) & v478;
  v480 = (16 * v478) & 0xBAE99AE0 ^ 0x106010E0 ^ ((16 * v478) ^ 0xAE99AE00) & v478;
  v481 = v479 ^ (v479 << 8) & 0xBAE99A00 ^ ((v479 << 8) ^ 0xC0100000) & v480;
  v482 = v420;
  LODWORD(v456) = ((LODWORD(STACK[0x173C]) << 24) - 1926392729 - ((LODWORD(STACK[0x173C]) << 25) & 0x1A000000)) ^ ((*(unsigned __int8 *)(v420 + (v469 ^ 0x90A31CC8)) ^ 0x38) << 8);
  LODWORD(v469) = 1056964608
                * (v474 ^ 0xD ^ *(unsigned __int8 *)(v420
                                                   + (v445 ^ (2
                                                                          * (((v481 ^ 0xB0298AE0) << 16) & 0x3AE90000 ^ v481 ^ 0xB0298AE0 ^ (((v481 ^ 0xB0298AE0) << 16) ^ 0x1AE00000) & ((v480 << 8) & 0xBAE90000 ^ 0x12610000 ^ ((v480 << 8) ^ 0xE99A0000) & v480))) ^ 0xDFD13954)))
                - 1926392729
                - ((2113929216
                  * (v474 ^ 0xD ^ *(unsigned __int8 *)(v420
                                                     + (v445 ^ (2
                                                                            * (((v481 ^ 0xB0298AE0) << 16) & 0x3AE90000 ^ v481 ^ 0xB0298AE0 ^ (((v481 ^ 0xB0298AE0) << 16) ^ 0x1AE00000) & ((v480 << 8) & 0xBAE90000 ^ 0x12610000 ^ ((v480 << 8) ^ 0xE99A0000) & v480))) ^ 0xDFD13954)))) & 0x1A000000);
  v483 = *(unsigned __int8 *)(v182 + (BYTE1(v468) ^ 0x94));
  v484 = v456 ^ *(unsigned __int8 *)(v182 + (HIBYTE(v468) ^ 0x8DLL)) ^ ((v483 << 16)
                                                                      - 1926392729
                                                                      - ((v483 << 17) & 0x5A0000)) ^ v469 ^ v466 ^ 0x638B9757;
  LODWORD(STACK[0x17D8]) = v466 ^ 0xEEA60330;
  LODWORD(STACK[0x1760]) = v466 ^ v458;
  LODWORD(v445) = (v484 ^ 0x8D2D9467) - 1926392729;
  LODWORD(v420) = (v445 - 2 * ((v484 ^ 0x8D2D9467) & 0xD2D9477 ^ v484 & 0x10)) ^ v466 ^ v458;
  v485 = v467 ^ v466 ^ 0xEEA60330;
  LODWORD(STACK[0x1788]) = v420 ^ v485;
  v486 = (v420 ^ v485) & 0xA749ED3F;
  LODWORD(v456) = (-1842359246 - (v486 ^ 0xA6400535) + ((2 * (v486 ^ 0xA6400535)) | 0xDBA04BFA) + 1489) ^ 0x6FDD27ED;
  v487 = (-1294439459 - (v486 ^ 0x449E131 | 0xB2D86BDD) + (v486 ^ 0x449E131 | 0x4D279422)) ^ 0x5DB19532;
  v488 = -2126012192 - (v487 | 0x8147A0E0) + (v487 | 0x7EB85F1F);
  v489 = ((v465 ^ 0xA593A4E9) + 971492418) ^ ((v465 ^ 0xBD2E2A0D) + 559563430) ^ ((v465 ^ 0xF61B8DD4) + 1785718141);
  v490 = ((v359 ^ 0x7E55D633) - 2119554611) ^ ((v359 ^ 0x7B7D02FD) - 2071790333) ^ ((v359 ^ 0x880540A9) + 2012921687);
  v491 = v420 ^ v463;
  LOBYTE(v487) = -3 * *(_BYTE *)(v182 + ((v420 ^ v463) ^ 0x67));
  LODWORD(STACK[0x1750]) = v489 - 1926392729;
  v492 = ((((((v465 ^ 0xE9) + 66) ^ ((v465 ^ 0xD) - 90) ^ ((v465 ^ 0xD4) + 125)) + 103) | (-104 - (((v465 ^ 0xE9) + 66) ^ ((v465 ^ 0xD) - 90) ^ ((v465 ^ 0xD4) + 125)))) & 0xFD ^ v487)
       + 1133462013;
  v493 = (2 * (v492 & 0x2AF)) & 0x544 ^ v492 & 0x2AF ^ ((2 * (v492 & 0x2AF)) | 0x8000) & (v492 ^ 0x312B8F6A);
  v494 = (2 * (v492 ^ 0x312B8F6A)) & 0x85C4 ^ 0x24445 ^ ((2 * (v492 ^ 0x312B8F6A)) ^ 0x12A48B8A) & (v492 ^ 0x312B8F6A);
  v495 = (4 * v493) & 0xD5AD5C4 ^ v493 ^ ((4 * v493) ^ 0x70000) & v494;
  v496 = (4 * v494) & 0x8D5AD5C4 ^ 0x881080C1 ^ ((4 * v494) ^ 0x30235714) & v494;
  v497 = (16 * v495) & 0xD5AD5C0 ^ v495 ^ ((16 * v495) ^ 0x9C0000) & v496;
  v498 = (16 * v496) & 0x8D5AD5C0 ^ 0x8528185 ^ ((16 * v496) ^ 0xD5AD5C50) & v496;
  v499 = v497 ^ 0x8C0B15C5 ^ (v497 << 8) & 0x8D5AD500 ^ ((v497 << 8) ^ 0x11C00000) & v498;
  v500 = *(unsigned __int8 *)(v482
                            + (v492 ^ (2
                                     * ((v499 << 16) & 0xD5A0000 ^ v499 ^ ((v499 << 16) ^ 0x55C50000) & ((v498 << 8) & 0x8D5A0000 ^ 0x50A0000 ^ ((v498 << 8) ^ 0x5AD50000) & v498))) ^ 0xAC44F125));
  v501 = ((v500 >> 7) & 0xFFFFFE01 | (2 * v500)) ^ (((((((v500 & 0x80) != 0) | (2 * v500)) >> ((((v490 + 103) & 6) + ((-104 - v490) & 6)) & 2)) ^ (2 * v500)) & 0xF0) >> 4) ^ 0xFFFFFFD7;
  v502 = (LODWORD(STACK[0x1800]) ^ 0xA8BDD79E)
       + ((((2 * (v485 & 0xB02815DB ^ 0x20080040)) | 0x14413DBC) - (v485 & 0xB02815DB ^ 0x20080040) - 169909982) ^ 0xAA008ADD | (662777220 - (v485 & 0xB02815DB ^ 0x80281153 | 0x27812D84) + (v485 & 0xB02815DB ^ 0x80281153 | 0xD87ED27B)) ^ 0x6856C2B0)
       + (v488 ^ 0xB7D829D9)
       + 1154774693
       + ((((2 * v456) | 0x116DE5E) - v456 + 2138345681) ^ 0x5E3013D2);
  LODWORD(v456) = (v502 ^ 0x2B0864A0) & (2 * (v502 & 0xB24D60C1)) ^ v502 & 0xB24D60C1;
  v503 = ((2 * (v502 ^ 0xB1265A2)) ^ 0x72BE0AC6) & (v502 ^ 0xB1265A2) ^ (2 * (v502 ^ 0xB1265A2)) & 0xB95F0562;
  LODWORD(v456) = (v503 ^ 0x101E0021) & (4 * v456) ^ v456;
  v504 = ((4 * (v503 ^ 0x89410521)) ^ 0xE57C158C) & (v503 ^ 0x89410521) ^ (4 * (v503 ^ 0x89410521)) & 0xB95F0560;
  LODWORD(v456) = (v504 ^ 0xA15C0503) & (16 * v456) ^ v456;
  v505 = ((16 * (v504 ^ 0x18030063)) ^ 0x95F05630) & (v504 ^ 0x18030063) ^ (16 * (v504 ^ 0x18030063)) & 0xB95F0560;
  LODWORD(v456) = v456 ^ 0xB95F0563 ^ (v505 ^ 0x91500443) & ((_DWORD)v456 << 8);
  v506 = v502 ^ (2
               * (((_DWORD)v456 << 16) & 0x395F0000 ^ v456 ^ (((_DWORD)v456 << 16) ^ 0x5630000) & (((v505 ^ 0x280F0143) << 8) & 0xB95F0000 ^ 0x205A0000 ^ (((v505 ^ 0x280F0143) << 8) ^ 0x5F050000) & (v505 ^ 0x280F0143))));
  v507 = *(unsigned __int8 *)(v182 + (((v420 ^ v463) >> 24) ^ 0x8DLL)) | (unsigned __int16)(((v501 >> 2) | ((_BYTE)v501 << 6)) << 8) | (LODWORD(STACK[0x1740]) << 24);
  v508 = (((unsigned __int16)(v420 ^ v463) >> 8) ^ 0x86) + 2053494644;
  LODWORD(v456) = (v508 ^ 0x50D9CD2C) & (2 * (v508 & 0x98E)) ^ v508 & 0x98E;
  v509 = (2 * (v508 ^ 0x50D9DC38)) & 0x554015B6 ^ 0x55411492 ^ ((2 * (v508 ^ 0x50D9DC38)) ^ 0x2A840B6C) & (v508 ^ 0x50D9DC38);
  LODWORD(v456) = (4 * v456) & 0x430 ^ v456 ^ ((4 * v456) | 0x70000) & v509;
  v510 = (4 * v509) & 0xD54315B4 ^ 0x80430126 ^ ((4 * v509) ^ 0x550C56D8) & v509;
  LODWORD(v456) = (16 * v456) & 0x554315B0 ^ v456 ^ ((16 * v456) ^ 0x2C0000) & v510;
  v511 = (16 * v510) & 0xD54315B0 ^ 0x81420496 ^ ((16 * v510) ^ 0x54315B60) & v510;
  LODWORD(v456) = v456 ^ ((_DWORD)v456 << 8) & 0x55431500 ^ (((_DWORD)v456 << 8) ^ 0x2C00000) & v511;
  v512 = (*(unsigned __int8 *)(v182 + (((v420 ^ v463) >> 16) ^ 0x2DLL)) << 24) | (*(unsigned __int8 *)(v182 + (63 * (*(_BYTE *)(v482 + (v508 ^ 0x518E2E2 ^ (2 * (((v456 ^ 0xD501D5B6) << 16) & 0x55430000 ^ v456 ^ 0xD501D5B6 ^ (((v456 ^ 0xD501D5B6) << 16) ^ 0x15B60000) & ((v511 << 8) & 0x55430000 ^ 0x14420000 ^ ((v511 << 8) ^ 0x43150000) & v511))))) ^ 9))) << 16);
  v513 = v507 ^ (v512 - 1926392729 - ((2 * v512) & 0x1A5A0000)) ^ v484;
  v514 = v445 - ((2 * (v484 ^ 0x8D2D9467)) & 0x1A5B28CE);
  v515 = v506 ^ 0x4F58FE60;
  v516 = v459 ^ LODWORD(STACK[0x1870]) ^ v506 ^ 0x4F58FE60;
  v517 = v506 ^ 0x4F58FE60 ^ LODWORD(STACK[0x1858]);
  v518 = (((v517 ^ 0x2C2BFA87) + 1493145370) ^ ((v517 ^ 0xD1BC5666) - 1519895559) ^ ((v517 ^ 0xFB91AAE7) - 1891252358))
       + 442181838
       + (((v516 ^ 0xB25C142D) - 341486433) ^ ((v516 ^ 0x4827BCDB) + 299826281) ^ ((v516 ^ 0xD15083DD) - 2002140305));
  LODWORD(STACK[0x16D0]) = v518;
  v519 = v490 + 442181838 - ((2 * (v490 - 1926392729)) & 0x1A5B28CE);
  v520 = v506 ^ 0x4F58FE60 ^ v436;
  LODWORD(v469) = (((v520 & 0x610B8490 ^ 0x5F3F208B) + 0x7FFFFFFF) & 0x610B849A | v520 & 0x405141) ^ 0x6000018B | v520 & 0x614BD5D1 ^ 0x4040D4D0;
  v521 = v506 ^ 0xF5425D30 ^ v513 ^ v485;
  v522 = v506 ^ 0xF5425D30 ^ ((v420 ^ v463 ^ v513 ^ v485) - 1926392729 - ((2 * (v420 ^ v463 ^ v513 ^ v485)) & 0x1A5B28CE));
  v523 = v506 ^ 0xF5425D30 ^ ((v420 ^ v513) - 1926392729 - ((2 * (v420 ^ v513)) & 0x1A5B28CE));
  v524 = v506 ^ 0xF5425D30 ^ (v513 - 1926392729 - ((2 * v513) & 0x1A5B28CE));
  v525 = v506 ^ 0x3C8B94F9 ^ v468;
  v526 = v506 ^ 0x3C8B94F9 ^ LODWORD(STACK[0x17D8]);
  v527 = v506 ^ 0xC2756A07 ^ v420 ^ (((46389198 - 2 * v469) & 0x25B28CE ^ 0xF7FFFFFF) - v469 + 76513359);
  v528 = v506 ^ 0xD4637C11 ^ LODWORD(STACK[0x1788]);
  v529 = v506 ^ 0xD4637C11 ^ v514;
  v530 = LODWORD(STACK[0x17EC]) - 1926392729 - ((2 * LODWORD(STACK[0x17EC])) & 0x1A5B28CE);
  v531 = v489 + 442181838 - ((2 * LODWORD(STACK[0x1750])) & 0x1A5B28CE);
  v532 = v506 ^ 0x4F58FE60 ^ v519;
  LODWORD(STACK[0x15C0]) = v532;
  if (v341)
    v533 = STACK[0x1808];
  else
    v533 = STACK[0x1810];
  LODWORD(STACK[0x17EC]) = v533;
  if (v341)
    v534 = STACK[0x1770];
  else
    v534 = STACK[0x1778];
  LODWORD(STACK[0x1488]) = v534;
  v535 = STACK[0x1798];
  if (!v341)
    v535 = STACK[0x1790];
  LODWORD(STACK[0x1590]) = v535;
  if (v341)
    v536 = STACK[0x17CC];
  else
    v536 = STACK[0x1850];
  LODWORD(STACK[0x1460]) = v536;
  v537 = STACK[0x1818];
  if (v341)
    v537 = STACK[0x1820];
  LODWORD(STACK[0xE28]) = v537;
  v538 = STACK[0x17A8];
  if (!v341)
    v538 = STACK[0x17A0];
  LODWORD(STACK[0x1600]) = v538;
  v539 = STACK[0x17BC];
  if (v341)
    v539 = STACK[0x17B0];
  LODWORD(STACK[0x17D8]) = v539;
  v540 = STACK[0x1838];
  if (!v341)
    v540 = STACK[0x1834];
  LODWORD(STACK[0x1788]) = v540;
  v541 = STACK[0x17C0];
  if (!v341)
    v541 = STACK[0x1860];
  LODWORD(STACK[0x15C8]) = v541;
  v542 = v518 ^ v532;
  LODWORD(STACK[0x1544]) = v521;
  if (((v518 ^ v532) & 1) != 0)
    v543 = v522;
  else
    v543 = v521;
  LODWORD(STACK[0x1750]) = v543;
  if ((v542 & 1) != 0)
    v544 = v524;
  else
    v544 = v522;
  LODWORD(STACK[0x1858]) = v544;
  LODWORD(STACK[0x1500]) = v523;
  if ((v542 & 1) != 0)
    v545 = v523;
  else
    v545 = v524;
  LODWORD(STACK[0x1748]) = v545;
  v546 = LODWORD(STACK[0x1760]) ^ 0x73D36A99 ^ v515;
  LODWORD(STACK[0x14F8]) = v506 ^ 0x3C8B94F9 ^ v485;
  if ((v542 & 1) != 0)
    v547 = v525;
  else
    v547 = v506 ^ 0x3C8B94F9 ^ v485;
  LODWORD(STACK[0x1760]) = v547;
  if ((v542 & 1) != 0)
    v548 = v526;
  else
    v548 = v525;
  LODWORD(STACK[0x1638]) = v548;
  LODWORD(STACK[0x14C4]) = v546;
  if ((v542 & 1) == 0)
    v546 = v526;
  LODWORD(STACK[0x173C]) = v546;
  LODWORD(STACK[0x1530]) = v528;
  LODWORD(STACK[0x14F0]) = v506 ^ 0xD4637C11 ^ v491;
  if ((v542 & 1) != 0)
    v549 = v506 ^ 0xD4637C11 ^ v491;
  else
    v549 = v528;
  LODWORD(STACK[0x1740]) = v549;
  LODWORD(STACK[0x1540]) = v527;
  LODWORD(STACK[0x14E4]) = v529;
  if ((v542 & 1) != 0)
    v550 = v527;
  else
    v550 = v529;
  LODWORD(STACK[0x1738]) = v550;
  v551 = v506 ^ 0xF94E513C ^ LODWORD(STACK[0x1660]);
  v552 = v506 ^ 0xF94E513C ^ LODWORD(STACK[0x1870]);
  if ((v542 & 1) != 0)
    v553 = v506 ^ 0xF94E513C ^ LODWORD(STACK[0x1660]);
  else
    v553 = v506 ^ 0xF94E513C ^ LODWORD(STACK[0x1870]);
  LODWORD(STACK[0x161C]) = v553;
  v554 = ((v553 & 0x90880900 ^ 0xB6922305) + (v553 & 0x58419) - 1) ^ 0xF68CE537;
  v555 = (-1651978818 - v554 + ((2 * v554) | 0xC4EE6484)) ^ 0xA2646070 | ((v553 & 0x908D8D19 ^ 0x88690482)
                                                                        - ((2 * (v553 & 0x908D8D19 ^ 0x88690482)) & 0x20181B12)
                                                                        + 387849709) ^ 0x82E70073;
  v556 = LODWORD(STACK[0x15DC]) ^ LODWORD(STACK[0x15E0]);
  v557 = STACK[0x1898];
  v558 = v506 ^ 0xC2756A07 ^ LODWORD(STACK[0x15CC]) ^ LODWORD(STACK[0x15E4]) ^ ((v555 | 0xD101084)
                                                                              + LODWORD(STACK[0x1898])
                                                                              + ((2 * v555) & 0x5B08C6 ^ 0xE5FFDFF7));
  v559 = v506 ^ 0x2B9C83EE ^ v531;
  v560 = v506 ^ 0x2B9C83EE ^ v530;
  v561 = v506 ^ 0x2B9C83EE ^ LODWORD(STACK[0x15D0]);
  v562 = v506 ^ 0x5FE8F79A ^ LODWORD(STACK[0x15F0]);
  v563 = v506 ^ 0x5FE8F79A ^ LODWORD(STACK[0x15E8]);
  v564 = v506 ^ 0x5FE8F79A ^ (STACK[0x1658] - 1926392729 - ((2 * STACK[0x1658]) & 0x1A5B28CE));
  v565 = v506 ^ 0x982F305D ^ LODWORD(STACK[0x1648]);
  v566 = v506 ^ 0x982F305D ^ LODWORD(STACK[0x1664]);
  v567 = v506 ^ 0xF94E513C ^ LODWORD(STACK[0x1610]);
  v568 = v506 ^ 0xE95E412C ^ (LODWORD(STACK[0x15CC]) - 1926392729 - ((2 * LODWORD(STACK[0x15CC])) & 0x1A5B28CE));
  v569 = v506 ^ 0xE95E412C ^ (LODWORD(STACK[0x160C]) - 1926392729 - ((2 * LODWORD(STACK[0x160C])) & 0x1A5B28CE));
  v570 = (v515 ^ LODWORD(STACK[0x1668]))
       + 101058054
       - ((2 * (v515 ^ LODWORD(STACK[0x1668]))) & 0xC0C0C0C)
       - 1926392729
       - ((2 * ((v515 ^ LODWORD(STACK[0x1668])) + 101058054 - ((2 * (v515 ^ LODWORD(STACK[0x1668]))) & 0xC0C0C0C))) & 0x1A5B28CE);
  LODWORD(STACK[0x1890]) ^= LODWORD(STACK[0x1730]);
  LODWORD(STACK[0x1758]) = LODWORD(STACK[0x1710]) ^ (STACK[0x1758] + v557 + ~((2 * STACK[0x1758]) & 0x1A5B28CE));
  LODWORD(STACK[0x1658]) = LODWORD(STACK[0x1718]) ^ LODWORD(STACK[0x172C]);
  v571 = v506 ^ 0x893E214C ^ LODWORD(STACK[0x1708]);
  v572 = v506 ^ 0x893E214C ^ LODWORD(STACK[0x1644]);
  LODWORD(STACK[0x15E0]) = v560;
  LODWORD(STACK[0x1668]) = v559;
  if ((v542 & 1) != 0)
    v573 = v560;
  else
    v573 = v559;
  v574 = v556 ^ 0x74FEAD9 ^ v515;
  if ((v542 & 1) != 0)
    v575 = v563;
  else
    v575 = v558;
  LODWORD(STACK[0x1610]) = v575;
  LODWORD(STACK[0x15D0]) = v562;
  if ((v542 & 1) != 0)
    v576 = v558;
  else
    v576 = v562;
  LODWORD(STACK[0x1730]) = v576;
  LODWORD(STACK[0x15CC]) = v574;
  LODWORD(STACK[0x1644]) = v561;
  if ((v542 & 1) != 0)
    v574 = v561;
  LODWORD(STACK[0x14B8]) = v564;
  if ((v542 & 1) != 0)
    v577 = v564;
  else
    v577 = v563;
  LODWORD(STACK[0x172C]) = v577;
  v578 = v516 ^ 0xA606BF4C;
  v579 = v565 ^ LODWORD(STACK[0x1698]);
  v580 = v506 ^ LODWORD(STACK[0x1670]);
  v581 = LODWORD(STACK[0x1678]) ^ 0x5A5A5A5A ^ v515;
  v582 = LODWORD(STACK[0x1650]) ^ 0xF94E513C ^ v580;
  LODWORD(STACK[0x1670]) = v567;
  if ((v542 & 1) == 0)
    v567 = v551;
  LODWORD(STACK[0x1710]) = v567;
  v583 = v520 ^ 0xA606BF4C;
  LODWORD(STACK[0x13F8]) = v582;
  if ((v542 & 1) != 0)
    v584 = v552;
  else
    v584 = v582;
  LODWORD(STACK[0x14A4]) = v583;
  if ((v542 & 1) == 0)
    v583 = v578;
  LODWORD(STACK[0x1708]) = v583;
  if ((v542 & 1) != 0)
    v585 = v578;
  else
    v585 = v568;
  LODWORD(STACK[0x15DC]) = v585;
  LODWORD(STACK[0x1650]) = v569;
  if ((v542 & 1) != 0)
    v586 = v568;
  else
    v586 = v569;
  if ((v542 & 1) != 0)
    v587 = v579;
  else
    v587 = v565;
  LODWORD(STACK[0x1528]) = v587;
  if ((v542 & 1) != 0)
    v588 = v581;
  else
    v588 = v566;
  LODWORD(STACK[0x1520]) = v588;
  v589 = (v542 & 1) == 0;
  if ((v542 & 1) != 0)
    v590 = v566;
  else
    v590 = v579;
  if ((v542 & 1) != 0)
    v591 = v565;
  else
    v591 = v581;
  LODWORD(STACK[0x1678]) = v542;
  v592 = (((2 * ((v542 ^ 0x268AB0A8) & 0x8CDABA50)) | 0x18842A8) - ((v542 ^ 0x268AB0A8) & 0x8CDABA50) + 2134630060) ^ (v542 ^ 0x268AB0A8) & 0x8CDABA52;
  v593 = v517 ^ 0x8B2B9261;
  v594 = LODWORD(STACK[0x15C0]) ^ 0xC666DF2C;
  LODWORD(STACK[0x1718]) = v594;
  v595 = LODWORD(STACK[0x16A4]) ^ 0xC4736C01 ^ v506;
  v596 = LODWORD(STACK[0x16F0]) ^ 0x4B4B4B4B;
  LODWORD(STACK[0x14C8]) = v515;
  v597 = v596 ^ v515;
  v598 = v506 ^ 0xBBCA3CE ^ LODWORD(STACK[0x1130]);
  v599 = v506 ^ 0xBBCA3CE ^ LODWORD(STACK[0x1094]);
  v600 = v506 ^ 0xBBCA3CE ^ LODWORD(STACK[0x10B8]);
  v601 = v506 ^ 0xBBCA3CE ^ LODWORD(STACK[0x1088]);
  if ((v542 & 1) != 0)
    v602 = v506 ^ 0xBBCA3CE ^ LODWORD(STACK[0x1094]);
  else
    v602 = v506 ^ 0xBBCA3CE ^ LODWORD(STACK[0x1130]);
  LODWORD(STACK[0x15F0]) = v602;
  LODWORD(STACK[0x1410]) = v601;
  if ((v542 & 1) != 0)
    v603 = v601;
  else
    v603 = v599;
  LODWORD(STACK[0x1408]) = v600;
  if (v589)
    v604 = v600;
  else
    v604 = v598;
  LODWORD(STACK[0x1420]) = v597;
  if (v589)
    v605 = v597;
  else
    v605 = v571;
  if (v589)
    v606 = v571;
  else
    v606 = v572;
  LODWORD(STACK[0x15E8]) = v606;
  if (v589)
    v607 = v572;
  else
    v607 = v594;
  LODWORD(STACK[0x1450]) = v593;
  LODWORD(STACK[0x1400]) = v580 ^ 0xC4736C01;
  if (v589)
    v608 = v593;
  else
    v608 = v580 ^ 0xC4736C01;
  LODWORD(STACK[0x16A4]) = v570;
  LODWORD(STACK[0x1458]) = v595;
  if (v589)
    v609 = v570;
  else
    v609 = v595;
  LODWORD(STACK[0x160C]) = v592;
  if (v592 == -2134630060)
    v610 = v574;
  else
    v610 = v573;
  LODWORD(STACK[0x15AC]) = v610;
  if (v592 == -2134630060)
    v611 = v573;
  else
    v611 = v574;
  LODWORD(STACK[0x1538]) = v611;
  v612 = STACK[0x1858];
  v613 = (v612 & 0x83 ^ 1) + (v612 & 2 ^ 0x66) - ((v612 & 0x83 ^ 1) & 2);
  v614 = (LODWORD(STACK[0x1138]) ^ 0x72D26B98) + (LODWORD(STACK[0x17EC]) ^ 0xE738C9E5) + 165235151;
  v615 = (v614 ^ 0xAC41C666) & (2 * (v614 & 0xCE098066)) ^ v614 & 0xCE098066;
  v616 = ((2 * (v614 ^ 0xBC41C6AA)) ^ 0xE4908D98) & (v614 ^ 0xBC41C6AA) ^ (2 * (v614 ^ 0xBC41C6AA)) & 0x724846CC;
  v617 = (v616 ^ 0x620040CC) & (4 * v615) ^ v615;
  v618 = ((4 * (v616 ^ 0x12484244)) ^ 0xC9211B30) & (v616 ^ 0x12484244) ^ (4 * (v616 ^ 0x12484244)) & 0x724846CC;
  v619 = (v618 ^ 0x4000020C) & (16 * v617) ^ v617;
  v620 = ((16 * (v618 ^ 0x324844CC)) ^ 0x24846CC0) & (v618 ^ 0x324844CC) ^ (16 * (v618 ^ 0x324844CC)) & 0x724846C0;
  v621 = v619 ^ 0x724846CC ^ (v620 ^ 0x2000440C) & (v619 << 8);
  v622 = v614 ^ (2
               * ((v621 << 16) & 0x72480000 ^ v621 ^ ((v621 << 16) ^ 0x46CC0000) & (((v620 ^ 0x5248020C) << 8) & 0x72480000 ^ 0x32080000 ^ (((v620 ^ 0x5248020C) << 8) ^ 0x48460000) & (v620 ^ 0x5248020C))));
  v623 = (((LODWORD(STACK[0x1120]) ^ 0x8D2D9467)
         + 1656751179
         + (((LODWORD(STACK[0x144C]) ^ 0x919D230A)
           - ((2 * (LODWORD(STACK[0x144C]) ^ 0x919D230A) + 250167736) & 0x1A5B28CE)
           + 346174787) ^ LODWORD(STACK[0x1460]))) >> 1)
       + 2145094453;
  v624 = (v623 ^ 0x1570BF1E) & (2 * (v623 & 0x9964B05F)) ^ v623 & 0x9964B05F;
  v625 = ((2 * (v623 ^ 0x579FF98)) ^ 0x383A9F8E) & (v623 ^ 0x579FF98) ^ (2 * (v623 ^ 0x579FF98)) & 0x9C1D4FC6;
  v626 = (v625 ^ 0x8100385) & (4 * v624) ^ v624;
  v627 = ((4 * (v625 ^ 0x84054041)) ^ 0x70753F1C) & (v625 ^ 0x84054041) ^ (4 * (v625 ^ 0x84054041)) & 0x9C1D4FC4;
  v628 = (v627 ^ 0x10150F00) & (16 * v626) ^ v626;
  v629 = ((16 * (v627 ^ 0x8C0840C3)) ^ 0xC1D4FC70) & (v627 ^ 0x8C0840C3) ^ (16 * (v627 ^ 0x8C0840C3)) & 0x9C1D4FC0;
  v630 = v628 ^ 0x9C1D4FC7 ^ (v629 ^ 0x80144C00) & (v628 << 8);
  v631 = v623 ^ (2
               * ((v630 << 16) & 0x1C1D0000 ^ v630 ^ ((v630 << 16) ^ 0x4FC70000) & (((v629 ^ 0x1C090387) << 8) & 0x9C1D0000 ^ (((v629 ^ 0x1C090387) << 8) ^ 0x1D4F0000) & (v629 ^ 0x1C090387) ^ 0x100000)));
  v632 = ((LODWORD(STACK[0x1848]) + 8) & 0xF) + 107898841;
  v633 = ((v632 ^ 0xF6FF5760 | 0x440) & (2 * (v632 & 0x335)) | 0x26E0805) ^ v632 & 0x335;
  v634 = (2 * (v632 ^ 0xF6FF5760)) & 0x54 ^ 0x455 ^ ((2 * (v632 ^ 0xF6FF5760)) ^ 0x109110AA) & (v632 ^ 0xF6FF5760);
  v635 = (4 * v633) & 0xF6ECC54 ^ v633 ^ ((4 * v633) ^ 0x902014) & v634;
  v636 = (4 * v634) & 0xF6ECC54 ^ 0x244CC01 ^ ((4 * v634) ^ 0x30913154) & v634;
  v637 = (16 * v635) & 0xF6ECC50 ^ v635 ^ ((16 * v635) ^ 0xB4608110) & v636;
  v638 = (16 * v636) & 0xF6ECC50 ^ 0x9020805 ^ ((16 * v636) ^ 0xF6ECC550) & v636;
  v639 = v637 ^ 0x6404454 ^ (v637 << 8) & 0xF6ECC00 ^ ((v637 << 8) ^ 0x26880100) & v638;
  v640 = v632 ^ (2
               * ((v639 << 16) & 0xF6E0000 ^ v639 ^ ((v639 << 16) ^ 0x4C550000) & ((v638 << 8) & 0xF6E0000 ^ 0x1220000 ^ ((v638 << 8) ^ 0x6ECC0000) & v638)));
  v641 = ((((2 * (v612 & 0x83 ^ 9)) | 0xD8) - (v612 & 0x83 ^ 9) - 108) ^ 0x66 | v613 ^ 0xE7) & (v612 ^ 0x67) ^ 0x80;
  v642 = v613 ^ 0xE5 ^ (((2 * v641) | 4) - v641 + 126);
  v643 = (((v622 ^ 0xE66E1057) + 984970802) ^ ((v622 ^ 0x355F8EF5) - 377165676) ^ ((v622 ^ 0x7D38935C) - 1578896069))
       - (((LODWORD(STACK[0x14B0]) ^ 0x91326771) + 1858967695) ^ ((LODWORD(STACK[0x14B0]) ^ 0x2259B870) - 576305264) ^ ((LODWORD(STACK[0x14B0]) ^ 0x3E464B66) - 1044794214));
  v644 = 385
       * (((v640 ^ 0xF3815018) + 2123839520) ^ ((v640 ^ 0xA52AC08D) + 675063947) ^ ((v640 ^ 0xA96F930A) + 611973902))
       - 1289845422;
  v645 = (v644 ^ 0xDF4929C4) & (2 * (v644 & 0x9E6DA995)) ^ v644 & 0x9E6DA995;
  v646 = ((2 * (v644 ^ 0xCF1B79EC)) ^ 0xA2EDA0F2) & (v644 ^ 0xCF1B79EC) ^ (2 * (v644 ^ 0xCF1B79EC)) & 0x5176D078;
  v647 = (v646 ^ 0x649071) & (4 * v645) ^ v645;
  v648 = ((4 * (v646 ^ 0x51125009)) ^ 0x45DB41E4) & (v646 ^ 0x51125009) ^ (4 * (v646 ^ 0x51125009)) & 0x5176D078;
  v649 = (v648 ^ 0x41524060) & (16 * v647) ^ v647;
  v650 = ((16 * (v648 ^ 0x10249019)) ^ 0x176D0790) & (v648 ^ 0x10249019) ^ (16 * (v648 ^ 0x10249019)) & 0x5176D070;
  v651 = v649 ^ 0x5176D079 ^ (v650 ^ 0x11640000) & (v649 << 8);
  v652 = v644 ^ (2
               * ((v651 << 16) & 0x51760000 ^ v651 ^ ((v651 << 16) ^ 0x50790000) & (((v650 ^ 0x4012D069) << 8) & 0x51760000 ^ 0x1260000 ^ (((v650 ^ 0x4012D069) << 8) ^ 0x76D00000) & (v650 ^ 0x4012D069))));
  v653 = (LODWORD(STACK[0x1780]) ^ LODWORD(STACK[0x1144]))
       + (((LODWORD(STACK[0xE0C]) ^ 0x9E688DDE) + 1637315106) ^ ((LODWORD(STACK[0xE0C]) ^ 0x91B06747) + 1850710201) ^ ((LODWORD(STACK[0xE0C]) ^ 0x2F57EFE) + 2097840386))
       + (((LODWORD(STACK[0x1488]) ^ 0x6C40DB8F) + 331293809) ^ ((LODWORD(STACK[0x1488]) ^ 0x236D99DF) + 1553098273) ^ ((LODWORD(STACK[0x1488]) ^ 0x4200D637) + 1040132553));
  v654 = 0x322E42A57083BALL
       * (((v652 ^ 0x64611781419993EALL) - 0x6461178150D40EEALL) ^ ((v652 ^ 0x2E2B10AB58298B41) - 0x2E2B10AB49641641) ^ ((v652 ^ 0x4A4A072A85D011CCLL) - 0x4A4A072A949D8CCCLL))
       + 0x6333EC72286C824;
  v655 = (v654 ^ 0xD791F39A8B87BFAALL) & (2 * (v654 & 0xE791F3031397BFB2)) ^ v654 & 0xE791F3031397BFB2;
  v656 = ((2 * (v654 ^ 0x5C93539A8A8CD4AALL)) ^ 0x760541333236D630) & (v654 ^ 0x5C93539A8A8CD4AALL) ^ (2 * (v654 ^ 0x5C93539A8A8CD4AALL)) & 0xBB02A099991B6B18;
  v657 = (v656 ^ 0x3200001010124210) & (4 * v655) ^ v655;
  v658 = ((4 * (v656 ^ 0x8902A08889092908)) ^ 0xEC0A8266646DAC60) & (v656 ^ 0x8902A08889092908) ^ (4 * (v656 ^ 0x8902A08889092908)) & 0xBB02A099991B6B18;
  v659 = (v658 ^ 0xA802800000092800) & (16 * v657) ^ v657;
  v660 = ((16 * (v658 ^ 0x1300209999124318)) ^ 0xB02A099991B6B180) & (v658 ^ 0x1300209999124318) ^ (16 * (v658 ^ 0x1300209999124318)) & 0xBB02A099991B6B10;
  v661 = (v660 ^ 0xB002009991122100) & (v659 << 8) ^ v659;
  v662 = (((v660 ^ 0xB00A00008094A18) << 8) ^ 0x2A099991B6B1800) & (v660 ^ 0xB00A00008094A18) ^ ((v660 ^ 0xB00A00008094A18) << 8) & 0xBB02A099991B6B00;
  v663 = v661 ^ 0xBB02A099991B6B18 ^ (v662 ^ 0x2008099190B0000) & (v661 << 16);
  v664 = v654 ^ (2
               * ((v663 << 32) & 0x3B02A09900000000 ^ v663 ^ ((v663 << 32) ^ 0x191B6B1800000000) & (((v662 ^ 0xB902200080106318) << 16) & 0x3B02A09900000000 ^ 0x1B02208000000000 ^ (((v662 ^ 0xB902200080106318) << 16) ^ 0x2099991B00000000) & (v662 ^ 0xB902200080106318))));
  LODWORD(STACK[0x1514]) = v603;
  LODWORD(STACK[0x1510]) = v604;
  if (v592 == -2134630060)
    v665 = v603;
  else
    v665 = v604;
  LODWORD(STACK[0x16F0]) = v665;
  LODWORD(STACK[0x1434]) = v605;
  LODWORD(STACK[0x1430]) = v607;
  if (v592 == -2134630060)
    v666 = v607;
  else
    v666 = v605;
  LODWORD(STACK[0x13CC]) = v666;
  LODWORD(STACK[0x13F0]) = v608;
  LODWORD(STACK[0x13E8]) = v609;
  if (v592 == -2134630060)
    v667 = v609;
  else
    v667 = v608;
  LODWORD(STACK[0x14D8]) = v667;
  LODWORD(STACK[0x15C0]) = v590;
  LODWORD(STACK[0x1518]) = v591;
  if (v592 == -2134630060)
    v668 = v591;
  else
    v668 = v590;
  LODWORD(STACK[0x1440]) = v668;
  LODWORD(STACK[0x1498]) = v584;
  v669 = STACK[0x1710];
  if (v592 != -2134630060)
    v669 = v584;
  LODWORD(STACK[0xE4C]) = v669;
  LODWORD(STACK[0x1470]) = v586;
  v670 = STACK[0x1708];
  if (v592 == -2134630060)
    v670 = v586;
  LODWORD(STACK[0x15B0]) = v670;
  v671 = STACK[0x1730];
  if (v592 != -2134630060)
    v671 = STACK[0x172C];
  LODWORD(STACK[0xE3C]) = v671;
  v672 = STACK[0x1740];
  if (v592 == -2134630060)
    v672 = STACK[0x1738];
  LODWORD(STACK[0x1664]) = v672;
  v673 = STACK[0x173C];
  if (v592 != -2134630060)
    v673 = STACK[0x1760];
  LODWORD(STACK[0x1524]) = v673;
  v674 = STACK[0x1750];
  if (v592 == -2134630060)
    v674 = STACK[0x1748];
  LODWORD(STACK[0x14E8]) = v674;
  v675 = ((v664 ^ 0x15CCE1769D1015D9) - 0x710838E2CB6D145ELL) ^ ((v664 ^ 0xD805CE8E1DDE00B1) + 0x433EE8E5B45CFECALL);
  v676 = __CFADD__(1306 * (v675 ^ ((v664 ^ 0x6E59DDF8A16F7CEALL) - 0xA9D046CF7127D6DLL)), 0xE366536B7A6AA982)
       + (((v675 ^ ((v664 ^ 0x6E59DDF8A16F7CEALL) - 0xA9D046CF7127D6DLL)) * (unsigned __int128)0x51AuLL) >> 64)
       + 1306
       * ((__CFADD__(v664 ^ 0x15CCE1769D1015D9, 0x8EF7C71D3492EBA2) - 1) ^ (__CFADD__(v664 ^ 0xD805CE8E1DDE00B1, 0x433EE8E5B45CFECALL)- 1) ^ (__CFADD__(v664 ^ 0x6E59DDF8A16F7CEALL, 0xF562FB9308ED8293)- 1))+ 319182844;
  LODWORD(v675) = (v676 ^ 0xCAF5ABFF) & (2 * (v676 & 0xECF9ABFC)) ^ v676 & 0xECF9ABFC;
  v677 = ((2 * (v676 ^ 0x83E7AEC7)) ^ 0xDE3C0A76) & (v676 ^ 0x83E7AEC7) ^ (2 * (v676 ^ 0x83E7AEC7)) & 0x6F1E053A;
  LODWORD(v675) = (v677 ^ 0x460C0030) & (4 * v675) ^ v675;
  v678 = ((4 * (v677 ^ 0x21020509)) ^ 0xBC7814EC) & (v677 ^ 0x21020509) ^ (4 * (v677 ^ 0x21020509)) & 0x6F1E0538;
  LODWORD(v675) = (v678 ^ 0x2C180433) & (16 * v675) ^ v675;
  v679 = ((16 * (v678 ^ 0x43060113)) ^ 0xF1E053B0) & (v678 ^ 0x43060113) ^ (16 * (v678 ^ 0x43060113)) & 0x6F1E0530;
  LODWORD(v675) = v675 ^ 0x6F1E053B ^ (v679 ^ 0x6100010B) & ((_DWORD)v675 << 8);
  v680 = v676 ^ (2
               * (((_DWORD)v675 << 16) & 0x6F1E0000 ^ v675 ^ (((_DWORD)v675 << 16) ^ 0x53B0000) & (((v679 ^ 0xE1E040B) << 8) & 0x6F1E0000 ^ 0x611A0000 ^ (((v679 ^ 0xE1E040B) << 8) ^ 0x1E050000) & (v679 ^ 0xE1E040B))));
  v681 = v680 & 0x1C5;
  v682 = (v643 << (43 * v642)) - 738288556;
  v683 = (v682 ^ 0xD1FBBA6B) & (2 * (v682 & 0xD5FBBC72)) ^ v682 & 0xD5FBBC72;
  v684 = ((2 * (v682 ^ 0xFB3EF2AB)) ^ 0x5D8A9DB2) & (v682 ^ 0xFB3EF2AB) ^ (2 * (v682 ^ 0xFB3EF2AB)) & 0x2EC54ED8;
  v685 = (v684 ^ 0xC800091) & (4 * v683) ^ v683;
  v686 = ((4 * (v684 ^ 0x22454249)) ^ 0xBB153B64) & (v684 ^ 0x22454249) ^ (4 * (v684 ^ 0x22454249)) & 0x2EC54ED8;
  v687 = (v686 ^ 0x2A050A50) & (16 * v685) ^ v685;
  v688 = ((16 * (v686 ^ 0x4C04499)) ^ 0xEC54ED90) & (v686 ^ 0x4C04499) ^ (16 * (v686 ^ 0x4C04499)) & 0x2EC54ED0;
  v689 = v687 ^ 0x2EC54ED9 ^ (v688 ^ 0x2C444C00) & (v687 << 8);
  v690 = v682 ^ (2
               * ((v689 << 16) & 0x2EC50000 ^ v689 ^ ((v689 << 16) ^ 0x4ED90000) & (((v688 ^ 0x2810249) << 8) & 0x2EC50000 ^ 0x2A810000 ^ (((v688 ^ 0x2810249) << 8) ^ 0x454E0000) & (v688 ^ 0x2810249))));
  v691 = ((*((_BYTE *)&STACK[0x2920] + (v680 ^ 0x38F1A18A)) + 10) & 0xF) + 320099361;
  LODWORD(v680) = ((2 * (v691 & 0xD)) | 0x840) & (v691 ^ 0xEEE54858) ^ v691 & 0xD ^ ((16
                                                                                    * (((v691 & 0xD) >> 3) & 1)) | 0x6001);
  v692 = (2 * (v691 ^ 0xEEE54858)) & 0xB4 ^ 0x295 ^ ((2 * (v691 ^ 0xEEE54858)) ^ 0x4110C6A) & (v691 ^ 0xEEE54858);
  LODWORD(v680) = (4 * v680) & 0x20EE6B4 ^ v680 ^ ((4 * v680) ^ 0x19084) & v692;
  v693 = (4 * v692) & 0x20EE6B4 ^ 0x2046421 ^ ((4 * v692) ^ 0x8311AD4) & v692;
  LODWORD(v680) = (16 * v680) & 0x20EE6B0 ^ v680 ^ ((16 * v680) ^ 0xE4A50) & v693;
  v694 = (16 * v693) & 0x20EE6B0 ^ 0x20084A5 ^ ((16 * v693) ^ 0x20EE6B50) & v693;
  LODWORD(v680) = v680 ^ 0x6E400 ^ ((_DWORD)v680 << 8) & 0x20EE600 ^ (((_DWORD)v680 << 8) ^ 0xEA6B500) & v694;
  v695 = v691 ^ (2
               * (((_DWORD)v680 << 16) & 0x20E0000 ^ v680 ^ (((_DWORD)v680 << 16) ^ 0x66B50000) & ((v694 << 8) & 0x20E0000 ^ ((v694 << 8) ^ 0xEE60000) & v694 ^ 0x80000)));
  v696 = 385
       * (((v695 ^ 0x20AFB920) - 1098665664) ^ ((v695 ^ 0x3B619029) - 1521641417) ^ ((v695 ^ 0xF7304A8E) + 1763459730))
       - 1301230103;
  LODWORD(v680) = (v696 ^ 0x1F9A56FC) & (2 * (v696 & 0x9F1B60FE)) ^ v696 & 0x9F1B60FE;
  v697 = ((2 * (v696 ^ 0x338E57DC)) ^ 0x592A6E44) & (v696 ^ 0x338E57DC) ^ (2 * (v696 ^ 0x338E57DC)) & 0xAC953722;
  LODWORD(v680) = (v697 ^ 0x8001602) & (4 * v680) ^ v680;
  v698 = ((4 * (v697 ^ 0xA4951122)) ^ 0xB254DC88) & (v697 ^ 0xA4951122) ^ (4 * (v697 ^ 0xA4951122)) & 0xAC953720;
  LODWORD(v680) = (v698 ^ 0xA0141402) & (16 * v680) ^ v680;
  v699 = ((16 * (v698 ^ 0xC812322)) ^ 0xC9537220) & (v698 ^ 0xC812322) ^ (16 * (v698 ^ 0xC812322)) & 0xAC953720;
  LODWORD(v680) = v680 ^ 0xAC953722 ^ (v699 ^ 0x88113200) & ((_DWORD)v680 << 8);
  v700 = ((*((_BYTE *)&STACK[0x2920]
           + (v696 ^ (2
                    * (((_DWORD)v680 << 16) & 0x2C950000 ^ v680 ^ (((_DWORD)v680 << 16) ^ 0x37220000) & (((v699 ^ 0x24840502) << 8) & 0x2C950000 ^ 0x28800000 ^ (((v699 ^ 0x24840502) << 8) ^ 0x15370000) & (v699 ^ 0x24840502)))) ^ 0x8E310EBA)
           % 0x51A)
         + 6) & 0xF)
       + 650307224;
  LODWORD(v680) = v700 & 0x436 ^ 0x44F458BE ^ (v700 ^ 0x9DC94CE4) & (2 * (v700 & 0x436));
  v701 = ((2 * (v700 ^ 0x9DC944C8)) ^ 0x8908A07C) & (v700 ^ 0x9DC944C8) ^ (2 * (v700 ^ 0x9DC944C8)) & 0x440040BE;
  LODWORD(v680) = v701 & 0xA8098344 ^ v680 ^ ((4 * v680) ^ 0xBB6CF1BC) & (v701 ^ 0xF4103E);
  v702 = ((4 * v701) ^ 0xAB6DD3B4) & (v701 ^ 0xF4103E) ^ v701 & 0xA8098344;
  LODWORD(v680) = v702 & 0xA8BD9344 ^ v680 ^ ((16 * v680) ^ 0xECB918E4) & (v702 ^ 0xB4100E);
  v703 = ((16 * v702) ^ 0xA3FC9304) & (v702 ^ 0xB4100E) ^ v702 & 0xA8BD9344;
  v704 = (((_DWORD)v680 << 8) ^ 0x5CE52D44) & (v703 ^ 0xB410BE);
  v705 = v703 & 0xA8BD9344;
  v706 = ((v703 << 8) ^ 0x1CAD9744) & (v703 ^ 0xB410BE) ^ v703 & 0xA8BD9344;
  v707 = v700 ^ (2
               * (v680 ^ v705 ^ v704 ^ v706 & 0x28BD9344 ^ (((v680 ^ v705 ^ v704) << 16) ^ 0xE0079345) & (v706 ^ 0x44400000) ^ (((v680 ^ v705 ^ v704) << 16) ^ 0xE0079345) & 0x44F41004));
  v708 = (((((v681 ^ 0xD202F981) - ((2 * (v681 ^ 0xD202F981)) & 0x7E) + 29) ^ 0x1C) + (v681 ^ 0x45)) & 0x38B)
       * ((((v707 ^ 0x951D2D7A) - 1222972439) ^ ((v707 ^ 0x13C226E1) + 835051636) ^ ((v707 ^ 0xD60AA691) - 200450044))
        - 1926392729)
       + 1154934228;
  v709 = (v708 ^ 0x3BA9D08D) & (2 * (v708 & 0xBB291A2C)) ^ v708 & 0xBB291A2C;
  v710 = ((2 * (v708 ^ 0x59ABC49D)) ^ 0xC505BD62) & (v708 ^ 0x59ABC49D) ^ (2 * (v708 ^ 0x59ABC49D)) & 0xE282DEB0;
  v711 = (v710 ^ 0xC0009820) & (4 * v709) ^ v709;
  v712 = ((4 * (v710 ^ 0x22824291)) ^ 0x8A0B7AC4) & (v710 ^ 0x22824291) ^ (4 * (v710 ^ 0x22824291)) & 0xE282DEB0;
  v713 = (v712 ^ 0x82025A80) & (16 * v711) ^ v711;
  v714 = ((16 * (v712 ^ 0x60808431)) ^ 0x282DEB10) & (v712 ^ 0x60808431) ^ (16 * (v712 ^ 0x60808431)) & 0xE282DEB0;
  v715 = v713 ^ 0xE282DEB1 ^ (v714 ^ 0x2000CAA1) & (v713 << 8);
  v716 = v708 ^ (2
               * ((v715 << 16) & 0x62820000 ^ v715 ^ ((v715 << 16) ^ 0x5EB10000) & (((v714 ^ 0xC28214A1) << 8) & 0x62820000 ^ (((v714 ^ 0xC28214A1) << 8) ^ 0x2DE0000) & (v714 ^ 0xC28214A1) ^ 0x60000000))) ^ 0x76013329;
  v717 = 0x322E42A57083BALL
       * (((v716 ^ 0xA034BE5EB59434F2) + 0x5FCB41A14A6BCB0ELL) ^ ((v716 ^ 0xC590B8A889971238) + 0x3A6F47577668EDC8) ^ ((v716 ^ 0x65A406F6B12EB2ADLL) - 0x65A406F6B12EB2ADLL))
       + 0x244A0077CF6811E4;
  v718 = (v717 ^ 0xCC7A211264A661F2) & (2 * (v717 & 0xC97B315266B675F2)) ^ v717 & 0xC97B315266B675F2;
  v719 = ((2 * (v717 ^ 0x5CF801B2E9862912)) ^ 0x2B0661C11E60B9C0) & (v717 ^ 0x5CF801B2E9862912) ^ (2 * (v717 ^ 0x5CF801B2E9862912)) & 0x958330E08F305CE0;
  v720 = (v719 ^ 0x10000C00E2018C0) & (4 * v718) ^ v718;
  v721 = ((4 * (v719 ^ 0x9481102081104420)) ^ 0x560CC3823CC17380) & (v719 ^ 0x9481102081104420) ^ (4 * (v719 ^ 0x9481102081104420)) & 0x958330E08F305CE0;
  v722 = (v721 ^ 0x140000800C005080) & (16 * v720) ^ v720;
  v723 = ((16 * (v721 ^ 0x8183306083300C60)) ^ 0x58330E08F305CE00) & (v721 ^ 0x8183306083300C60) ^ (16 * (v721 ^ 0x8183306083300C60)) & 0x958330E08F305CE0;
  v724 = (v723 ^ 0x1003000083004C00) & (v722 << 8) ^ v722;
  v725 = (((v723 ^ 0x858030E00C3010E0) << 8) ^ 0x8330E08F305CE000) & (v723 ^ 0x858030E00C3010E0) ^ ((v723 ^ 0x858030E00C3010E0) << 8) & 0x958330E08F305C00;
  v726 = v724 ^ 0x958330E08F305CE0 ^ (v725 ^ 0x8100208000100000) & (v724 << 16);
  v727 = v717 ^ (2
               * ((v726 << 32) & 0x158330E000000000 ^ v726 ^ ((v726 << 32) ^ 0xF305CE000000000) & (((v725 ^ 0x148310608F201CE0) << 16) & 0x158330E000000000 ^ 0x50330C000000000 ^ (((v725 ^ 0x148310608F201CE0) << 16) ^ 0x30E08F3000000000) & (v725 ^ 0x148310608F201CE0))));
  v728 = ((v727 ^ 0x34EB515C1CE16848) + 0x4BE6926867974E4BLL) ^ ((v727 ^ 0x10A87AF25611B0CDLL) + 0x6FA5B9C62D6796D0);
  LODWORD(v727) = __CFADD__(1306 * (v728 ^ ((v727 ^ 0xCC3E5AFD322614B7) - 0x4CCC6636B6AFCD4ALL)), 0x6B11DE777D154206)+ (((v728 ^ ((v727 ^ 0xCC3E5AFD322614B7) - 0x4CCC6636B6AFCD4ALL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v727 ^ 0x34EB515C1CE16848, 0x4BE6926867974E4BLL) - 1) ^ (__CFADD__(v727 ^ 0x10A87AF25611B0CDLL, 0x6FA5B9C62D6796D0)- 1) ^ (__CFADD__(v727 ^ 0xCC3E5AFD322614B7, 0xB33399C9495032B6)- 1))+ 825045344;
  LODWORD(v728) = (v727 ^ 0xAC82C230) & (2 * (v727 & 0xCED2D0B5)) ^ v727 & 0xCED2D0B5;
  LODWORD(v725) = ((2 * (v727 ^ 0xA907C210)) ^ 0xCFAA254A) & (v727 ^ 0xA907C210) ^ (2 * (v727 ^ 0xA907C210)) & 0x67D512A4;
  LODWORD(v728) = (v725 ^ 0x47800000) & (4 * v728) ^ v728;
  LODWORD(v725) = ((4 * (v725 ^ 0x205512A5)) ^ 0x9F544A94) & (v725 ^ 0x205512A5) ^ (4 * (v725 ^ 0x205512A5)) & 0x67D512A4;
  LODWORD(v728) = v728 ^ 0x67D512A5 ^ (v725 ^ 0x7540280) & (16 * v728);
  LODWORD(v725) = (16 * (v725 ^ 0x60811021)) & 0x67D512A0 ^ 0x28410A5 ^ ((16 * (v725 ^ 0x60811021)) ^ 0x7D512A50) & (v725 ^ 0x60811021);
  LODWORD(v728) = ((_DWORD)v728 << 8) & 0x67D51200 ^ v728 ^ (((_DWORD)v728 << 8) ^ 0xD512A500) & v725;
  LODWORD(v728) = v727 ^ (2
                        * (((_DWORD)v728 << 16) & 0x67D50000 ^ v728 ^ (((_DWORD)v728 << 16) ^ 0x12A50000) & (((_DWORD)v725 << 8) & 0x67D50000 ^ 0x22C50000 ^ (((_DWORD)v725 << 8) ^ 0x55120000) & v725)));
  LODWORD(STACK[0x1848]) = LODWORD(STACK[0x1718]) ^ LODWORD(STACK[0x16F8]) ^ LODWORD(STACK[0x16D0]);
  v729 = LODWORD(STACK[0x16E0]) - 8841;
  v730 = STACK[0x1890];
  LODWORD(STACK[0x16D0]) = (2 * LODWORD(STACK[0x1890])) & 0x1A5B28CE;
  LODWORD(STACK[0x16E0]) = v730 - 1926392729;
  v731 = STACK[0x1700];
  LODWORD(STACK[0x16F8]) = (2 * STACK[0x1700]) & 0x1A5B28CE;
  LODWORD(STACK[0x1700]) = v731 - 1926392729;
  v732 = 2 * v653 + 2086492526;
  v733 = *((unsigned __int8 *)&STACK[0x2920] + (v728 ^ 0x8E52F5FF)) + 106;
  LODWORD(STACK[0xDAC]) = v733;
  if (((((*(_BYTE *)(STACK[0x18B8] + ((71 * (v733 & 0xF)) ^ 0xB1u) + 22623) - 84) ^ 0x29)
       - 107) & 0xFE) != 0)
    v734 = (((*(_BYTE *)(STACK[0x18B8] + ((71 * (v733 & 0xF)) ^ 0xB1u) + 22623) - 84) ^ 0x29)
                           - 107);
  else
    v734 = 1;
  v735 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v729) - 4);
  LODWORD(STACK[0x15E4]) = v690;
  LODWORD(STACK[0x1508]) = v732;
  LODWORD(STACK[0x1660]) = v631;
  LODWORD(STACK[0x1870]) = v734;
  LODWORD(STACK[0x1898]) = v734 - 1;
  return v735();
}

uint64_t sub_100347D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;

  v6 = STACK[0x18A8];
  LODWORD(STACK[0x1890]) = LODWORD(STACK[0x18A8]) - 2770;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((32617 * (LODWORD(STACK[0x1898]) == a6)) ^ v6)) - 4))();
}

uint64_t sub_1003484C0()
{
  BOOL v0;
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  BOOL v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t (*v41)(void);
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;

  v0 = (STACK[0x16EC] & 1) == 0;
  if ((STACK[0x16EC] & 1) != 0)
    v1 = STACK[0x1548];
  else
    v1 = (LODWORD(STACK[0x16E0]) - LODWORD(STACK[0x16D0])) ^ LODWORD(STACK[0x1800]) ^ 0xAEBBD198;
  if ((STACK[0x16EC] & 1) != 0)
    v2 = (LODWORD(STACK[0x16E0]) - LODWORD(STACK[0x16D0])) ^ LODWORD(STACK[0x1800]) ^ 0xAEBBD198;
  else
    v2 = STACK[0x1758];
  if ((STACK[0x16EC] & 1) != 0)
    v3 = STACK[0x1758];
  else
    v3 = STACK[0x1554];
  if ((STACK[0x16EC] & 1) != 0)
    v4 = STACK[0x1558];
  else
    v4 = STACK[0x1560];
  v5 = (LODWORD(STACK[0x1700]) - LODWORD(STACK[0x16F8])) ^ LODWORD(STACK[0x1800]) ^ 0x41543E77;
  v6 = STACK[0x1588];
  if ((STACK[0x16EC] & 1) == 0)
    v6 = STACK[0x159C];
  v7 = STACK[0x1570];
  if ((STACK[0x16EC] & 1) != 0)
    v7 = (LODWORD(STACK[0x1700]) - LODWORD(STACK[0x16F8])) ^ LODWORD(STACK[0x1800]) ^ 0x41543E77;
  LODWORD(STACK[0x1560]) = v7;
  if (v0)
    v8 = v5;
  else
    v8 = STACK[0x1658];
  v9 = LODWORD(STACK[0x16D8]) == -1062640132;
  v10 = STACK[0x1778];
  if (LODWORD(STACK[0x16D8]) != -1062640132)
    v10 = STACK[0x1770];
  LODWORD(STACK[0x16F8]) = v10;
  v11 = STACK[0x1798];
  if (v9)
    v11 = STACK[0x1790];
  LODWORD(STACK[0x1554]) = v11;
  v12 = STACK[0x17A8];
  if (v9)
    v12 = STACK[0x17A0];
  LODWORD(STACK[0x1758]) = v12;
  v13 = STACK[0x17BC];
  if (!v9)
    v13 = STACK[0x17B0];
  LODWORD(STACK[0x159C]) = v13;
  v14 = STACK[0x17C0];
  if (v9)
    v14 = STACK[0x1860];
  LODWORD(STACK[0x1064]) = v14;
  v15 = STACK[0x16B0];
  if (v9)
    v15 = STACK[0x1688];
  LODWORD(STACK[0x1698]) = v15;
  LODWORD(STACK[0x13D8]) = v1;
  LODWORD(STACK[0x13D0]) = v3;
  if (v9)
    v16 = v3;
  else
    v16 = v1;
  LODWORD(STACK[0x1570]) = v16;
  v17 = STACK[0x1690];
  LODWORD(STACK[0x1548]) = v2;
  if (v9)
    v17 = v2;
  LODWORD(STACK[0x16D0]) = v17;
  v18 = STACK[0x16B8];
  LODWORD(STACK[0x1558]) = v4;
  if (!v9)
    v18 = v4;
  LODWORD(STACK[0x16E0]) = v18;
  v19 = STACK[0x16C0];
  LODWORD(STACK[0x13B8]) = v8;
  if (!v9)
    v19 = v8;
  LODWORD(STACK[0x1648]) = v19;
  v20 = STACK[0x16C8];
  LODWORD(STACK[0x13C0]) = v6;
  if (!v9)
    v20 = v6;
  LODWORD(STACK[0x1800]) = v20;
  v21 = (STACK[0x1678] & 1) == 0;
  if ((STACK[0x1678] & 1) != 0)
    v22 = STACK[0x1420];
  else
    v22 = STACK[0x1718];
  if ((STACK[0x1678] & 1) != 0)
    v23 = STACK[0x1408];
  else
    v23 = STACK[0x1410];
  if ((STACK[0x1678] & 1) != 0)
    v24 = STACK[0x16A4];
  else
    v24 = STACK[0x1400];
  if ((STACK[0x1678] & 1) != 0)
    v25 = STACK[0x1450];
  else
    v25 = STACK[0x1458];
  if ((STACK[0x1678] & 1) != 0)
    v26 = STACK[0x13F8];
  else
    v26 = STACK[0x1670];
  v27 = STACK[0x1650];
  if ((STACK[0x1678] & 1) == 0)
    v27 = STACK[0x14A4];
  LODWORD(STACK[0x1790]) = v27;
  if (v21)
    v28 = STACK[0x14B8];
  else
    v28 = STACK[0x15D0];
  v29 = STACK[0x1668];
  if (v21)
    v29 = STACK[0x1644];
  LODWORD(STACK[0x17A0]) = v29;
  if (v21)
    v30 = STACK[0x14C4];
  else
    v30 = STACK[0x14F8];
  v31 = STACK[0x14F0];
  if (!v21)
    v31 = STACK[0x14E4];
  LODWORD(STACK[0x17BC]) = v31;
  if (v21)
    v32 = STACK[0x1500];
  else
    v32 = STACK[0x1544];
  v33 = LODWORD(STACK[0x160C]) == -2134630060;
  v34 = STACK[0x1434];
  if (LODWORD(STACK[0x160C]) != -2134630060)
    v34 = STACK[0x1430];
  LODWORD(STACK[0x10B0]) = v34;
  v35 = STACK[0x13F0];
  if (!v33)
    v35 = STACK[0x13E8];
  LODWORD(STACK[0xE48]) = v35;
  v36 = STACK[0x1710];
  if (v33)
    v36 = STACK[0x1498];
  LODWORD(STACK[0x1668]) = v36;
  v37 = STACK[0x1708];
  if (!v33)
    v37 = STACK[0x1470];
  LODWORD(STACK[0x1450]) = v37;
  v38 = STACK[0x1730];
  if (v33)
    v38 = STACK[0x172C];
  LODWORD(STACK[0x1430]) = v38;
  v39 = STACK[0x1740];
  if (!v33)
    v39 = STACK[0x1738];
  LODWORD(STACK[0xE1C]) = v39;
  v40 = STACK[0x1750];
  if (!v33)
    v40 = STACK[0x1748];
  LODWORD(STACK[0x1588]) = v40;
  v41 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0x1890])) - 4);
  v42 = STACK[0x15F0];
  LODWORD(STACK[0x1770]) = v23;
  if (v33)
    v42 = v23;
  LODWORD(STACK[0xE2C]) = v42;
  v43 = STACK[0x15E8];
  LODWORD(STACK[0x1738]) = v22;
  if (!v33)
    v43 = v22;
  LODWORD(STACK[0x1700]) = v43;
  LODWORD(STACK[0x1750]) = v24;
  LODWORD(STACK[0x1748]) = v25;
  if (v33)
    v44 = v24;
  else
    v44 = v25;
  LODWORD(STACK[0x18A8]) = v44;
  v45 = STACK[0x161C];
  LODWORD(STACK[0x1778]) = v26;
  if (!v33)
    v45 = v26;
  LODWORD(STACK[0x16A4]) = v45;
  v46 = STACK[0x1610];
  LODWORD(STACK[0x1798]) = v28;
  if (!v33)
    v46 = v28;
  LODWORD(STACK[0x1500]) = v46;
  v47 = STACK[0x1638];
  LODWORD(STACK[0x17A8]) = v30;
  if (v33)
    v47 = v30;
  LODWORD(STACK[0x15D0]) = v47;
  v48 = STACK[0x1858];
  LODWORD(STACK[0x17C0]) = v32;
  if (v33)
    v48 = v32;
  LODWORD(STACK[0x1670]) = v48;
  STACK[0x14B8] = LODWORD(STACK[0x1660]) ^ 0x3479BBB6u;
  return v41();
}

uint64_t sub_100348848(int a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t (*v5)(_QWORD, _QWORD);

  v3 = STACK[0x1890];
  v4 = STACK[0x1870];
  LODWORD(STACK[0x1860]) = (LODWORD(STACK[0x1890]) + 6589) | 0x808;
  v5 = (uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(STACK[0x18C0]
                                                          + 8 * ((420 * ((v4 + v2) > 0xE)) ^ v3))
                                              - 4);
  ++LODWORD(STACK[0x1898]);
  return v5((a1 + 1), (a2 + 1));
}

uint64_t sub_100348D04(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  BOOL v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  BOOL v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  char v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  uint64_t v122;
  int v123;

  LODWORD(v14) = STACK[0x1598];
  if ((STACK[0x16EC] & 1) == 0)
    LODWORD(v14) = STACK[0x1658];
  v15 = LODWORD(STACK[0x16D8]) == -1062640132;
  v16 = STACK[0x1810];
  if (LODWORD(STACK[0x16D8]) != -1062640132)
    v16 = STACK[0x1808];
  LODWORD(STACK[0x17B0]) = v16;
  v17 = STACK[0x13D8];
  if (!v15)
    v17 = STACK[0x13D0];
  LODWORD(STACK[0x1708]) = v17;
  v18 = STACK[0x16B0];
  if (!v15)
    v18 = STACK[0x1688];
  LODWORD(STACK[0x1688]) = v18;
  v19 = STACK[0x1690];
  if (!v15)
    v19 = STACK[0x1548];
  LODWORD(STACK[0x1740]) = v19;
  v20 = STACK[0x1850];
  if (!v15)
    v20 = STACK[0x17CC];
  LODWORD(STACK[0x1850]) = v20;
  v21 = STACK[0x1584];
  if (v15)
    v21 = STACK[0x156C];
  LODWORD(STACK[0x1650]) = v21;
  v22 = STACK[0x1820];
  if (v15)
    v22 = STACK[0x1818];
  LODWORD(STACK[0x1658]) = v22;
  v23 = STACK[0x16B8];
  if (v15)
    v23 = STACK[0x1558];
  LODWORD(STACK[0x16B0]) = v23;
  v24 = STACK[0x16C0];
  if (v15)
    v24 = STACK[0x13B8];
  LODWORD(STACK[0x1644]) = v24;
  v25 = STACK[0x1838];
  if (v15)
    v25 = STACK[0x1834];
  LODWORD(STACK[0x1544]) = v25;
  v26 = STACK[0x16C8];
  if (v15)
    v26 = STACK[0x13C0];
  LODWORD(STACK[0x13B8]) = v26;
  v27 = STACK[0x1560];
  if (v15)
    v28 = STACK[0x1560];
  else
    v28 = v14;
  LODWORD(STACK[0x1434]) = v28;
  if (v15)
    v14 = v14;
  else
    v14 = v27;
  STACK[0x16B8] = v14;
  v29 = STACK[0x1678];
  v30 = STACK[0x15E0];
  if ((STACK[0x1678] & 1) != 0)
    v30 = STACK[0x15CC];
  v31 = STACK[0x1540];
  if ((v29 & 1) != 0)
    v31 = STACK[0x1530];
  v32 = LODWORD(STACK[0x160C]) == -2134630060;
  v33 = STACK[0x1514];
  if (LODWORD(STACK[0x160C]) == -2134630060)
    v33 = STACK[0x1510];
  LODWORD(STACK[0x1584]) = v33;
  v34 = STACK[0x15E8];
  if (v32)
    v34 = STACK[0x1738];
  LODWORD(STACK[0x1738]) = v34;
  v35 = STACK[0x15C0];
  if (!v32)
    v35 = STACK[0x1518];
  LODWORD(STACK[0x1834]) = v35;
  v36 = STACK[0x1750];
  if (v32)
    v36 = STACK[0x1748];
  LODWORD(STACK[0x1420]) = v36;
  v37 = STACK[0x15F0];
  if (!v32)
    v37 = STACK[0x1770];
  LODWORD(STACK[0x1598]) = v37;
  v38 = STACK[0x1528];
  v39 = STACK[0x1520];
  if (v32)
    v40 = STACK[0x1520];
  else
    v40 = STACK[0x1528];
  LODWORD(STACK[0x14C4]) = v40;
  if (v32)
    v41 = v38;
  else
    v41 = v39;
  LODWORD(STACK[0x1748]) = v41;
  v42 = STACK[0x161C];
  if (v32)
    v42 = STACK[0x1778];
  LODWORD(STACK[0x1558]) = v42;
  v43 = STACK[0x15DC];
  v44 = STACK[0x1790];
  if (v32)
    v45 = STACK[0x1790];
  else
    v45 = STACK[0x15DC];
  LODWORD(STACK[0x1750]) = v45;
  if (v32)
    v46 = v43;
  else
    v46 = v44;
  LODWORD(STACK[0x1520]) = v46;
  v47 = STACK[0x1610];
  if (v32)
    v47 = STACK[0x1798];
  LODWORD(STACK[0x1458]) = v47;
  v48 = STACK[0x17A0];
  if (v32)
    v49 = STACK[0x17A0];
  else
    v49 = v30;
  LODWORD(STACK[0x16EC]) = v49;
  if (!v32)
    v30 = v48;
  LODWORD(STACK[0x13F8]) = v30;
  v50 = STACK[0x1638];
  if (!v32)
    v50 = STACK[0x17A8];
  LODWORD(STACK[0x1770]) = v50;
  v51 = STACK[0x1760];
  if (!v32)
    v51 = STACK[0x173C];
  LODWORD(STACK[0x15F0]) = v51;
  v52 = STACK[0x17BC];
  if (v32)
    v53 = STACK[0x17BC];
  else
    v53 = v31;
  LODWORD(STACK[0x15E8]) = v53;
  if (v32)
    v54 = v31;
  else
    v54 = v52;
  LODWORD(STACK[0x1710]) = v54;
  v55 = STACK[0x1858];
  if (!v32)
    v55 = STACK[0x17C0];
  LODWORD(STACK[0x1514]) = v55;
  v56 = (a3 + LODWORD(STACK[0x1898])) >> 16;
  v57 = v13
      + (((LODWORD(STACK[0x1870]) + v13 - v56 - v7) | (v56 - a3 - LODWORD(STACK[0x1870]) - v11 - v8 + 524482408)) & 0x40800400);
  v58 = v57 + v4;
  v59 = (v58 - v56) >> 10;
  v60 = (v58 - v59 - v56) >> 6;
  v61 = (LODWORD(STACK[0x1870]) + v57 + v60 - v59 - v56 - v12) ^ v6;
  v62 = LODWORD(STACK[0x1870])
      + v57
      + ((v57 + v60 + v3 + ((v57 + v60 + v3 - v59 - v56) >> 12) - v59 - v56) >> 7)
      + ((v57 + v60 + v3 - v59 - v56) >> 12)
      + v60
      - v59
      - v56
      - v5;
  v63 = v62 ^ v10;
  v64 = (v62 ^ 0x5F06CFFD) - ((v62 ^ 0x5F06CFFDu) >> 10) - (((v62 ^ 0x5F06CFFD) - ((v62 ^ 0x5F06CFFDu) >> 10)) >> 2);
  v65 = v64 + 430369791 + ((v64 + 430369791) >> 9) - ((v64 + 430369791 + ((v64 + 430369791) >> 9)) >> 8);
  v66 = v61 ^ v65;
  v67 = (v65 ^ 0xA35ACE30) - ((v65 ^ 0xA35ACE30) >> 12) + (((v65 ^ 0xA35ACE30) - ((v65 ^ 0xA35ACE30) >> 12)) >> 8);
  v68 = v63 ^ v67;
  v69 = v67 + 1765886704 + ((v67 + 1765886704) >> 14) - ((v67 + 1765886704 + ((v67 + 1765886704) >> 14)) >> 2);
  v70 = v69 - 1926392729 - ((2 * v69) & 0x1A5B28CE);
  v71 = (((v70 ^ 0x7C6E03B4) - 2087584692) ^ ((v70 ^ 0x4BADC0A3) - 1269678243) ^ ((v70 ^ 0xBAEE5770) + 1158785168))
      + 1798242108;
  v72 = v71 - (v71 >> 11) - ((v71 - (v71 >> 11)) >> 1);
  v73 = v66 ^ v72;
  v74 = ((v72 >> 12) ^ 0x7C4DB) + (v72 ^ 0x7C4DB57E) + ((((v72 >> 12) ^ 0x7C4DB) + (v72 ^ 0x7C4DB57E)) >> 8);
  v75 = v74 - 1926392729 - ((2 * v74) & 0x1A5B28CE);
  v76 = (((v75 ^ 0xD4CBD05D) + 724840355) ^ ((v75 ^ 0x1AD6DEDB) - 450289371) ^ ((v75 ^ 0x43309AE1) - 1127258849))
      - 246105276;
  v77 = v76 - (v76 >> 9) - 1926392729 - ((2 * (v76 - (v76 >> 9))) & 0x1A5B28CE);
  v78 = v64 ^ v9 ^ v70 ^ ((((v77 ^ 0x30ABF6C3) - 816576195) ^ ((v77 ^ 0x2EEFAD71) - 787459441) ^ ((v77 ^ 0x9369CFD5)
                                                                                                + 1821782059))
                        - ((((v77 >> 5) ^ 0xCDDA63DA) - 1151245086) ^ (((v77 >> 5) ^ 0xB22A12A7) - 997124707) ^ (((v77 >> 5) ^ 0x7B991DDE) + 220338918)));
  v79 = v68 ^ v75;
  v80 = 16843009 * ((-316558261 - (v73 & 0xFE ^ 0xAA | 0xED21B44B) + (v73 & 0xFE ^ 0xAA | 0x12DE4BB4)) ^ 0x12DE4BE2)
      - 394538061;
  v81 = (v80 ^ 0x57C68E29) & (2 * (v80 & 0x17842C4D)) ^ v80 & 0x17842C4D;
  v82 = ((2 * (v80 ^ 0x7FCEDEA3)) ^ 0xD095E5DC) & (v80 ^ 0x7FCEDEA3) ^ (2 * (v80 ^ 0x7FCEDEA3)) & 0x684AF2EE;
  v83 = (v82 ^ 0x404AE04E) & (4 * v81) ^ v81;
  v84 = ((4 * (v82 ^ 0x284A1222)) ^ 0xA12BCBB8) & (v82 ^ 0x284A1222) ^ (4 * (v82 ^ 0x284A1222)) & 0x684AF2EC;
  v85 = (v84 ^ 0x200AC2A0) & (16 * v83) ^ v83;
  v86 = ((16 * (v84 ^ 0x48403046)) ^ 0x84AF2EE0) & (v84 ^ 0x48403046) ^ (16 * (v84 ^ 0x48403046)) & 0x684AF2E0;
  v87 = v85 ^ 0x684AF2EE ^ (v86 ^ 0xA220E) & (v85 << 8);
  v88 = v80 ^ (2
             * (((v87 << 16) ^ 0x72EE0000) & (((v86 ^ 0x6840D00E) << 8) & 0x684A0000 ^ 0x20080000 ^ (((v86 ^ 0x6840D00E) << 8) ^ 0x4AF20000) & (v86 ^ 0x6840D00E)) ^ v87 ^ ((v87 << 16) & 0x684A0000 | 0x1260)));
  v89 = (v78 ^ 0x588B7CA8) & 0x14CFF4C8 ^ 0xDF77902E ^ (-2
                                                      - ((~((v78 ^ 0x588B7CA8) & 0x14CFF4CF) | 0xCFFCE4A3)
                                                       + ((v78 ^ 0x588B7CA8) & 0x4CCE483 | 0x30031B5C)));
  v90 = (((v78 ^ 0xFFFFFFFA) + 1) ^ 0x99FC7BAC) & 0x70A528F8 ^ 0x1FE07AAC ^ (-2
                                                                           - ((~((((v78 ^ 0xFFFFFFFA) + 1) ^ 0x99FC7BAC) & 0x70A528FF) | 0xF445200)
                                                                            + ((((v78 ^ 0xFFFFFFFA) + 1) ^ 0x99FC7BAC) & 0x40000 | 0xF0BBADFF)));
  v91 = (v89 - ((2 * v89) & 0x4B857CF4) - 1513963910) ^ 0x38645E95;
  v92 = (-258530997 - (v90 | 0xF097214B) + (v90 | 0xF68DEB4)) ^ 0x92E1627B;
  LODWORD(STACK[0x1818]) = v91;
  if (v91 == -1926392729)
    v93 = 0;
  else
    v93 = 255;
  LODWORD(STACK[0x1808]) = v92;
  v94 = v93 << (v92 & 0xD ^ 5) << (v92 & 0x12 ^ 2);
  v95 = (v79 ^ 0x8D000000) & (50331648 * v94);
  v96 = v94 ^ 7;
  if (v91 == -1926392729)
    v96 = -8;
  v97 = ((-3
                         * (-2
                          - (((v96 ^ 0xF8) & (v73 ^ 0x71) ^ ~(v96 & 0x71) | 0x70)
                           + ((v96 ^ 0xF8) & (v73 ^ 0x71) ^ v96 & 0x71 | 0x8F)))) ^ 0xFD)
      + 1204615228;
  v98 = (2 * (v97 & 0x70)) & (v97 ^ 0x31805428) ^ v97 & 0x70 ^ ((2 * (v97 & 0x70)) & 0x40 | 0x1022010);
  v99 = (2 * (v97 ^ 0x31805428)) & 0x88915058 ^ 0x88901048 ^ ((2 * (v97 ^ 0x31805428)) ^ 0x1244A0B0) & (v97 ^ 0x31805428);
  v100 = (4 * v98) & 0x9B3F058 ^ v98 ^ ((4 * v98) ^ 0x40F0040) & v99;
  v101 = (4 * v99) & 0x89B3F058 ^ 0x89303018 ^ ((4 * v99) ^ 0x26CFC160) & v99;
  v102 = (16 * v100) & 0x9B3F050 ^ v100 ^ ((16 * v100) ^ 0x100C0500) & v101;
  v103 = (16 * v101) & 0x89B3F050 ^ 0x80F058 ^ ((16 * v101) ^ 0x9B3F0580) & v101;
  v104 = v102 ^ (v102 << 8) & 0x89B3F000 ^ ((v102 << 8) ^ 0xC05000) & v103;
  v105 = v97 ^ (2
              * (((v104 ^ 0x88336008) << 16) & 0x9B30000 ^ v104 ^ 0x88336008 ^ (((v104 ^ 0x88336008) << 16) ^ 0x70580000) & ((v103 << 8) & 0x89B30000 ^ 0x8030000 ^ ((v103 << 8) ^ 0xB3F00000) & v103)));
  v106 = 16843009 * v94;
  v107 = (((2 * (v106 & 0x55 ^ 0x50)) | 0x6C2AD794) - (v106 & 0x55 ^ 0x50) + 1240110134) ^ 0x6E0D6BCA;
  v108 = *(unsigned __int8 *)(STACK[0x18B8] + (v105 ^ 0xAB7444C0));
  v109 = ((v106 & 0x55) + ((((2 * v107) & 0x52) - v107 + 86) ^ 0x53) - 126) ^ ((2 * (v108 & 0x7F)) >> 4) ^ ((2 * (v108 & 0x7F)) >> 6) ^ ((v108 >> 7) & 0xFFFFFE01 | (2 * v108));
  LODWORD(STACK[0x1798]) = v106 ^ v95 ^ 0x72D26B98;
  LODWORD(STACK[0x17CC]) = v106 ^ 0x8D2D9467 ^ ((v109 >> 2) | ((_BYTE)v109 << 6));
  v110 = v73 ^ 0x5D ^ ((v73 ^ 0x5790955Du) >> 16) ^ (((unsigned __int16)(v73 ^ 0x955D) >> 8) - (((v73 & 0xB3 ^ 0x28) - ((2 * (v73 & 0xB3 ^ 0x28)) | 0xEA) + 116) | (v73 ^ 0x5D) & 0xB3) - 77) ^ ((v73 ^ 0x5790955Du) >> 24);
  v111 = v110 ^ 0x3E;
  v112 = (v110 ^ 0x3E) & 0x7B | v110 & 0x7B ^ 0x7B7B7B41;
  v113 = (v110 & 0x46 ^ 0xFFFFFFBF) - ((v110 ^ 0x3E) & 0x46) + 719155604;
  v114 = (2 * (v113 & 0x92)) ^ (v113 & 0x92 | 0x49AA2920) ^ ((2 * (v113 & 0x92)) | 2) & (v113 ^ 0x8CC8A5D4);
  v115 = (2 * (v113 ^ 0x8CC8A5D4)) & 0x59EA2B66 ^ 0x482A2921 ^ ((2 * (v113 ^ 0x8CC8A5D4)) ^ 0xA21454CE) & (v113 ^ 0x8CC8A5D4);
  v116 = (4 * v114) & 0x59EA2B64 ^ v114 ^ ((4 * v114) ^ 0x26A8A48C) & v115;
  v117 = (4 * v115) & 0x59EA2B64 ^ 0x18420263 ^ ((4 * v115) ^ 0x67A8AD9C) & v115;
  v118 = (16 * v116) & 0x59EA2B60 ^ v116 ^ ((16 * v116) ^ 0x90209270) & v117;
  v119 = (16 * v117) & 0x59EA2B60 ^ 0x41480907 ^ ((16 * v117) ^ 0x9EA2B670) & v117;
  v120 = v118 ^ 0xC22320 ^ (v118 << 8) & 0x59EA2B00 ^ ((v118 << 8) ^ 0x220B4700) & v119;
  LODWORD(STACK[0xDC8]) = v29 ^ 0xBB8B20FB;
  v121 = STACK[0x1860];
  LODWORD(STACK[0x1510]) = LODWORD(STACK[0x1508]) ^ 0xE2209BF5 ^ (LODWORD(STACK[0x1860]) + 2966);
  v122 = v73 ^ 0x8D2D9467;
  LODWORD(STACK[0x1870]) = v88 ^ 0x8AA87936;
  v123 = (16843009
        * (v79 ^ 0x45 ^ ((unsigned __int16)(v79 ^ 0x2045) >> 8) ^ ((v79 ^ 0xA4DB2045) >> 16) ^ HIBYTE(v79) ^ 0xE1)) ^ v112;
  LODWORD(STACK[0x1810]) = (16843009 * v111) ^ v112 ^ 0xC868D122;
  LODWORD(STACK[0x1470]) = (16843009 * v111) ^ 0x8D2D9467 ^ v123;
  LODWORD(STACK[0x172C]) = v123 ^ 0xB313AA59;
  LODWORD(STACK[0x1820]) = LODWORD(STACK[0x15E4]) ^ 0x18DEB5A7;
  return (*(uint64_t (**)(_QWORD, uint64_t))(STACK[0x18C0] + 8 * v121))(v113 ^ (2* ((v120 << 16) & 0x59EA0000 ^ v120 ^ ((v120 << 16) ^ 0x2B670000) & ((v119 << 8) & 0x59EA0000 ^ 0x11C00000 ^ ((v119 << 8) ^ 0xEA2B0000) & v119))) ^ 0xF91F4C1A, v122);
}

uint64_t sub_10034A1BC(uint64_t a1, int a2)
{
  unsigned __int8 v2;
  int v3;
  int v4;
  int v5;
  uint64_t (*v6)(void);
  int v7;

  LODWORD(STACK[0x1898]) = (((v3 - 17374) | 0x2D04) ^ 0x2A20E4C3) + v2;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * (v3 - 5832)) - 4);
  v7 = STACK[0x112C];
  LODWORD(STACK[0x1730]) = STACK[0x112C];
  LODWORD(STACK[0x173C]) = v4;
  LODWORD(STACK[0x10DC]) = v4;
  LODWORD(STACK[0x13C0]) = STACK[0x10B8];
  LODWORD(STACK[0x1858]) = STACK[0x1088];
  LODWORD(STACK[0x1890]) = STACK[0x1094];
  LODWORD(STACK[0x1778]) = a2;
  LODWORD(STACK[0x1718]) = a2;
  LODWORD(STACK[0x1610]) = v5;
  LODWORD(STACK[0x17BC]) = v5;
  LODWORD(STACK[0x16C8]) = STACK[0x1848];
  LODWORD(STACK[0x1660]) = STACK[0x17E0];
  LODWORD(STACK[0x1518]) = STACK[0x1130];
  LODWORD(STACK[0x156C]) = STACK[0xE34];
  LODWORD(STACK[0x14F8]) = STACK[0x15F8];
  LODWORD(STACK[0x1540]) = v7;
  return v6();
}

uint64_t sub_10034A2B4@<X0>(int a1@<W0>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  _BOOL4 v18;

  v6 = (((a1 ^ 0xDB47A1FB) + 616062469) ^ ((a1 ^ 0x2E47CA90) - 776456848) ^ ((a1 ^ 0x782DFF0C) - 2016280332))
     + 100097136;
  v7 = (v6 ^ 0x36A7A7F5) & (2 * (v6 & 0x873637F8)) ^ v6 & 0x873637F8;
  v8 = ((2 * (v6 ^ 0x34C3E305)) ^ 0x67EBA9FA) & (v6 ^ 0x34C3E305) ^ (2 * (v6 ^ 0x34C3E305)) & a2;
  v9 = ((4 * (v8 ^ 0x90145405)) ^ 0xCFD753F4) & (v8 ^ 0x90145405) ^ (4 * (v8 ^ 0x90145405)) & a2;
  v10 = (v9 ^ 0x83D550E0) & (16 * ((v8 ^ 0x21E180E0) & (4 * v7) ^ v7)) ^ (v8 ^ 0x21E180E0) & (4 * v7) ^ v7;
  v11 = ((16 * (v9 ^ 0x30208409)) ^ 0x3F5D4FD0) & (v9 ^ 0x30208409) ^ (16 * (v9 ^ 0x30208409)) & (a2 - 12);
  v12 = v11 ^ 0x80A0902D;
  v13 = v10 ^ (a2 + 1) ^ (v11 ^ 0x33554400) & (v10 << 8);
  v14 = v6 ^ (2
            * ((v13 << 16) & v4 ^ v13 ^ ((v13 << 16) ^ 0x54FD0000) & ((v12 << 8) & v4 ^ 0x2210000 ^ ((v12 << 8) ^ 0x75D40000) & v12)));
  v15 = v14 ^ (v5 + 2856);
  v16 = (((v14 ^ 0x9C19850) - 1172017717) ^ ((v14 ^ 0x24BDA77C) - 1755819289) ^ ((v14 ^ v3) + 1605260469)) - 1219596754;
  v18 = v16 > 0x2A20D9C6 && v16 < LODWORD(STACK[0x1898]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * ((2 * v18) | (16 * v18) | a3)) - 4))(v15);
}

uint64_t sub_10034A920()
{
  int v0;

  LODWORD(STACK[0x1860]) = LODWORD(STACK[0x1820]) ^ 0x8D2D9467;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * v0) - 4))();
}

uint64_t sub_10034A9EC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((4486 * ((v1 - 1926392727) > 0xF)) ^ v0))
                            - 4))();
}

uint64_t sub_10034AC98@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  char v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unint64_t v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  int v147;
  int v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  uint64_t (*v188)(uint64_t);

  LODWORD(STACK[0x161C]) = v2 - 448;
  v10 = a1 & 0xFD;
  v11 = ((a1 & 0xFD ^ 0x59) - ((2 * a1) & 8) + 146729220) ^ 0x19AAA4F;
  LODWORD(STACK[0x1898]) = v2 - 449;
  v12 = LODWORD(STACK[0x1860]) + 1758997916;
  v13 = (v12 ^ 0x4787C971) & (2 * (v12 & 0x9727D264)) ^ v12 & 0x9727D264;
  v14 = ((2 * (v12 ^ 0x61C16979)) ^ 0xEDCD763A) & (v12 ^ 0x61C16979) ^ (2 * (v12 ^ 0x61C16979)) & 0xF6E6BB1C;
  v15 = v14 ^ 0x12228905;
  v16 = (v14 ^ 0xE4841210) & (4 * v13) ^ v13;
  v17 = ((4 * v15) ^ 0xDB9AEC74) & v15 ^ (4 * v15) & 0xF6E6BB1C;
  v18 = (v17 ^ 0xD282A800) & (16 * v16) ^ v16;
  v19 = ((16 * (v17 ^ 0x24641309)) ^ 0x6E6BB1D0) & (v17 ^ 0x24641309) ^ (16 * (v17 ^ 0x24641309)) & 0xF6E6BB10;
  v20 = v12 ^ (2
             * (((v18 ^ 0xF6E6BB1D ^ (v19 ^ 0x6662B100) & (v18 << 8)) << 16) & 0x76E60000 ^ v18 ^ 0xF6E6BB1D ^ (v19 ^ 0x6662B100) & (v18 << 8) ^ (((v18 ^ 0xF6E6BB1D ^ (v19 ^ 0x6662B100) & (v18 << 8)) << 16) ^ 0x3B1D0000) & (((v19 ^ 0x90840A0D) << 8) & 0xF6E60000 ^ 0x10440000 ^ (((v19 ^ 0x90840A0D) << 8) ^ 0x66BB0000) & (v19 ^ 0x90840A0D))));
  LODWORD(STACK[0x1790]) = v20;
  v21 = v3 + v5;
  v22 = HIWORD(v21);
  v23 = (v21 - HIWORD(v21)) >> 8;
  v24 = (v3 + v4 + v23 - v22) >> 10;
  v25 = v23 - v22;
  v26 = (v3 + v4 + v23 - v22 - v24) >> (v10 + ((((v11 << ((v2 + 63) ^ 0xC4)) & 0x3A) - v11 + 98) ^ 0x8D) + 9);
  v27 = (((v20 & 0x108201A9 ^ 0x10820008) + (STACK[0x1820] & 0x108201A9 ^ 0x10820188)) | 0x81021005) + v26;
  v28 = v27 + v3 + v4 + v23;
  v29 = (v28 - v24 - v22) >> 12;
  v30 = (v28 + v29 - v24 - v22) >> 7;
  v31 = v25 + v4;
  v32 = v31 + v27 + v3 + v29 + v30 - v24;
  v33 = (v32 ^ 0x5F06CFFD) - ((v32 ^ 0x5F06CFFDu) >> 10) - (((v32 ^ 0x5F06CFFD) - ((v32 ^ 0x5F06CFFDu) >> 10)) >> 2);
  v34 = v33 + 430369791 + ((v33 + 430369791) >> 9) - ((v33 + 430369791 + ((v33 + 430369791) >> 9)) >> 8);
  v35 = (v34 ^ 0xA35ACE30) - ((v34 ^ 0xA35ACE30) >> 12) + (((v34 ^ 0xA35ACE30) - ((v34 ^ 0xA35ACE30) >> 12)) >> 8);
  v36 = v35 + 1765886704 + ((v35 + 1765886704) >> 14) - ((v35 + 1765886704 + ((v35 + 1765886704) >> 14)) >> 2);
  v37 = v36 - 570332459 - ((v36 - 570332459) >> 11) - ((v36 - 570332459 - ((v36 - 570332459) >> 11)) >> 1);
  v38 = (v37 ^ 0x7C4DB57E) + ((v37 ^ 0x7C4DB57E) >> 12) + (((v37 ^ 0x7C4DB57E) + ((v37 ^ 0x7C4DB57E) >> 12)) >> 8);
  v39 = v38 + 1680287453 - ((v38 + 1680287453) >> 9) - ((v38 + 1680287453 - ((v38 + 1680287453) >> 9)) >> 5);
  v40 = v33 ^ v8 ^ v36 ^ (v39 - 1926392729 - (v7 & (2 * v39)));
  v41 = (v40 ^ 0x76BDC3B2) & 0x564A7DA3 ^ 0x8D4E2FED ^ (((2 * (v40 ^ 0x76BDC3B2)) & 0x8102340)
                                                      - ((v40 ^ 0x76BDC3B2) & 0x564A7DA4)
                                                      - 616141235);
  v42 = ((2 * v41) & 0x63C81BCA) - v41 + 1310454290;
  LODWORD(STACK[0x17A0]) = v42;
  v43 = v42 ^ 0x953E27D4;
  if ((v42 ^ 0x953E27D4) == 0x8D2D9467)
    v44 = 0;
  else
    v44 = 255;
  v45 = STACK[0x18B8];
  v46 = *(_BYTE *)((((v44 >> 3) & 0xFFFFFF1F | (32 * (v44 & 7))) ^ 0x9D) + STACK[0x18B8] + 1665);
  LODWORD(STACK[0x1820]) = v40 ^ 3;
  v47 = -(v40 ^ 3);
  v48 = v47 & 7;
  LODWORD(STACK[0x160C]) = v48 ^ 0x8D2D9467;
  v49 = (((v46 - 38) ^ ((v46 - 38) >> 5) ^ ((v46 - 38) >> 4)) ^ 0xE2) << (~(-(v40 ^ 3) & 7 ^ 0x67) & 6) << (((-(char)(v40 ^ 3) & 7 ^ 0x67) & 1) == 0);
  LODWORD(STACK[0x1638]) = v43;
  v50 = v49 ^ 0x7FD933B6;
  if (v43 == -1926392729)
    v50 = -2144940983;
  v51 = v25 + a2;
  v52 = (v51 + v26 - (v7 & (2 * (v31 + v26 + v3 - v24))) + v3 - v24) ^ v9 ^ v34 ^ v37;
  v53 = v52 ^ ((v46 & 0xF2 ^ 0xF2) + (v46 & 0xF2)) & 0xFE;
  LODWORD(STACK[0x1838]) = v53;
  LODWORD(STACK[0x16D8]) = 16843009 * v49;
  v54 = v50 & 0x36 ^ (v50 ^ 0x49) & ((v52 ^ ((v46 & 0xF2 ^ 0xF2) + (v46 & 0xF2)) & 0xFE) ^ 0xC4) ^ (16843009 * v49);
  LODWORD(STACK[0x17C0]) = v54;
  v55 = (v51 + v27 - (v7 & (2 * v32)) + v3 + v30 + v29 - v24) ^ v6 ^ v35 ^ v38;
  LODWORD(STACK[0x15C0]) = v55;
  v56 = (v55 ^ 0x29F6B422u) >> 24;
  v57 = (v56 ^ 0xD1 ^ (((v54 & 0x10) + (v54 & 0x10 ^ 0x10)) | 0xE)) + 1555271173;
  v58 = ((2 * (v57 & 0xA34C8249)) & 0x4910410 | v57 & 0xA34C8249) ^ (2 * (v57 & 0xA34C8249)) & (v57 ^ 0x179F6C30);
  v59 = ((2 * (v57 ^ 0x179F6C30)) ^ 0x69A7DCF2) & (v57 ^ 0x179F6C30) ^ (2 * (v57 ^ 0x179F6C30)) & 0xB4D3EE78;
  v60 = (v59 ^ 0x22861) & (4 * v58) ^ v58;
  v61 = ((4 * (v59 ^ 0x94502209)) ^ 0xD34FB9E4) & (v59 ^ 0x94502209) ^ (4 * (v59 ^ 0x94502209)) & 0xB4D3EE78;
  v62 = (v61 ^ 0x9043A860) & (16 * v60) ^ v60;
  v63 = ((16 * (v61 ^ 0x24904619)) ^ 0x4D3EE790) & (v61 ^ 0x24904619) ^ (16 * (v61 ^ 0x24904619)) & 0xB4D3EE70;
  v64 = v62 ^ 0xB4D3EE79 ^ (v63 ^ 0x412E600) & (v62 << 8);
  v65 = 16843009
      * (v53 ^ 0xAF ^ ((unsigned __int16)(v53 ^ 0x95AF) >> 8) ^ ((v53 ^ 0x579095AFu) >> 16) ^ HIBYTE(v52) ^ 0xC5);
  v66 = 16843009
      * (v55 ^ 0x22 ^ ((unsigned __int16)(v55 ^ 0xB422) >> 8) ^ ((v55 ^ 0x29F6B422u) >> 16) ^ (63 * (*(_BYTE *)(v45 + (v57 ^ (2 * ((v64 << 16) & 0x34D30000 ^ v64 ^ ((v64 << 16) ^ 0x6E790000) & (((v63 ^ 0xB0C10869) << 8) & 0x34D30000 ^ 0x24110000 ^ (((v63 ^ 0xB0C10869) << 8) ^ 0x53EE0000) & (v63 ^ 0xB0C10869)))) ^ 0x82495EBB)) ^ v56 ^ 0xD)) ^ 0xC8);
  LODWORD(STACK[0x16C0]) = v65;
  LODWORD(STACK[0x1678]) = v66;
  v67 = v65 ^ 0x5A5A5A5A ^ v66;
  v68 = v67 % 0x101 - 1926392729 - ((2 * (v67 % 0x101)) & 0xCE);
  v69 = (((v68 ^ 0x23A1CC99) - 597806233) ^ ((v68 ^ 0x985805E7) + 1739061785) ^ ((v68 ^ 0x36D45D19) - 919887129))
      - 1280568623;
  v70 = (v69 ^ 0xD529A752) & (2 * (v69 & 0xD981C79A)) ^ v69 & 0xD981C79A;
  v71 = ((2 * (v69 ^ 0xF72B2062)) ^ 0x5D55CFF0) & (v69 ^ 0xF72B2062) ^ (2 * (v69 ^ 0xF72B2062)) & 0x2EAAE7F8;
  v72 = (v71 ^ 0xC0006F0) & (4 * v70) ^ v70;
  v73 = ((4 * (v71 ^ 0x22AA2008)) ^ 0xBAAB9FE0) & (v71 ^ 0x22AA2008) ^ (4 * (v71 ^ 0x22AA2008)) & 0x2EAAE7F8;
  v74 = (v73 ^ 0x2AAA87E0) & (16 * v72) ^ v72;
  v75 = ((16 * (v73 ^ 0x4006018)) ^ 0xEAAE7F80) & (v73 ^ 0x4006018) ^ (16 * (v73 ^ 0x4006018)) & 0x2EAAE7F0;
  v76 = v74 ^ 0x2EAAE7F8 ^ (v75 ^ 0x2AAA6700) & (v74 << 8);
  v77 = STACK[0x1470];
  v78 = STACK[0x16A8];
  v79 = v68 ^ *(_DWORD *)(STACK[0x16A8]
                        + 4
                        * (v69 ^ (2
                                * ((v76 << 16) & 0x2EAA0000 ^ v76 ^ ((v76 << 16) ^ 0x67F80000) & (((v75 ^ 0x4008078) << 8) & 0x2EAA0000 ^ 0x4080000 ^ (((v75 ^ 0x4008078) << 8) ^ 0x2AE70000) & (v75 ^ 0x4008078)))) ^ 0xC984086A));
  v80 = v79 ^ 0xA5D7EFA7;
  LODWORD(STACK[0x1600]) = (LODWORD(STACK[0x1600]) ^ 0x8D2D9467)
                         - 1798498333
                         * (((LODWORD(STACK[0x1470]) ^ 0x395502B5) - 961872565) ^ ((LODWORD(STACK[0x1470]) ^ 0xCD96239A)
                                                                                 + 845798502) ^ ((LODWORD(STACK[0x1470]) ^ 0x79EEB548)
                                                                                               - 2045687112))
                         + (((v79 ^ 0x5A281058) + (v79 ^ 0xA5D7EFA7)) & 0xDB197777 ^ 0xB02B9F6A) * v67;
  v81 = STACK[0x1870];
  v82 = v52 & 0xFE ^ 0xF2;
  LODWORD(STACK[0x1758]) = (LODWORD(STACK[0x1758]) ^ 0x8D2D9467)
                         - 1340515509
                         * (((LODWORD(STACK[0x1870]) ^ 0x45E10B86) - 1172376454) ^ ((LODWORD(STACK[0x1870]) ^ 0x3F458021)
                                                                                  - 1061519393) ^ ((LODWORD(STACK[0x1870]) ^ 0xF7891FC0)
                                                                                                 + 142008384))
                         - 1874830923 * v82;
  v83 = 16843009 * v82 - 721023402;
  v84 = (v83 ^ 0xAF9E981) & (2 * (v83 & 0x2AF9F1AA)) ^ v83 & 0x2AF9F1AA;
  v85 = ((2 * (v83 ^ 0x1B2B6BC5)) ^ 0x63A534DE) & (v83 ^ 0x1B2B6BC5) ^ (2 * (v83 ^ 0x1B2B6BC5)) & 0x31D29A6E;
  v86 = (v85 ^ 0x21900049) & (4 * v84) ^ v84;
  v87 = ((4 * (v85 ^ 0x10528A21)) ^ 0xC74A69BC) & (v85 ^ 0x10528A21) ^ (4 * (v85 ^ 0x10528A21)) & 0x31D29A6C;
  v88 = (v87 ^ 0x1420823) & (16 * v86) ^ v86;
  v89 = ((16 * (v87 ^ 0x30909243)) ^ 0x1D29A6F0) & (v87 ^ 0x30909243) ^ (16 * (v87 ^ 0x30909243)) & 0x31D29A60;
  v90 = v88 ^ 0x31D29A6F ^ (v89 ^ 0x1100820F) & (v88 << 8);
  v91 = v83 ^ (2
             * ((v90 << 16) & 0x31D20000 ^ v90 ^ ((v90 << 16) ^ 0x1A6F0000) & (((v89 ^ 0x20D2180F) << 8) & 0x31D20000 ^ 0x21400000 ^ (((v89 ^ 0x20D2180F) << 8) ^ 0x529A0000) & (v89 ^ 0x20D2180F))));
  LODWORD(STACK[0x1548]) = v47 & 7 | 0x59B355B0;
  LODWORD(STACK[0x1860]) = (1191182336 * v49) & v55 ^ 0x20108829;
  v92 = 0xFF00FF00FF0100
      * (((v77 ^ 0x25068E979D691565) - 0x25068E979D691565) ^ ((v77 ^ 0x41C3F959CC38955CLL) - 0x41C3F959CC38955CLL) ^ ((v77 ^ 0x64C577CEDC7C145ELL) - 0x64C577CEDC7C145ELL))
      - 0x548E77ECBB8270C3;
  v93 = (v92 ^ 0x855AE279B32F8795) & (2 * (v92 & 0xC81AEB79BBAFD700)) ^ v92 & 0xC81AEB79BBAFD700;
  v94 = (2 * (v92 ^ 0x154E74EBF2322795)) & 0xDD549F92499DF000 ^ 0x4554809248841002 ^ ((2
                                                                                           * (v92 ^ 0x154E74EBF2322795)) ^ 0xBAA93F24933BE0A8) & (v92 ^ 0x154E74EBF2322795);
  v95 = (4 * v93) & 0x40549F82499DF000 ^ v93 ^ ((4 * v93) | 0xC) & v94;
  v96 = (4 * v94) & 0xDD549F92499DF054 ^ 0x8804819249883006 ^ ((4 * v94) ^ 0x75527E492677C158) & v94;
  v97 = (16 * v95) & 0xDD549F92499DF050 ^ v95 ^ ((16 * v95) ^ 0x70) & v96;
  v98 = (16 * v96) & 0xDD549F92499DF050 ^ 0x81406924000F016 ^ ((16 * v96) ^ 0xD549F92499DF0560) & v96;
  v99 = (v97 << 8) & 0xDD549F92499DF000 ^ v97 ^ ((v97 << 8) ^ 0x5700) & v98;
  v100 = (v98 << 8) & 0xDD549F92499DF000 ^ 0x89400D92400DA056 ^ ((v98 << 8) ^ 0x549F92499DF05600) & v98;
  v101 = v99 ^ (v99 << 16) & 0xDD549F92499D0000 ^ ((v99 << 16) ^ 0x50570000) & v100;
  v102 = v92 ^ (2
              * (((v101 ^ 0xDD549F920988A001) << 32) & 0x5D549F9200000000 ^ v101 ^ 0xDD549F920988A001 ^ (((v101 ^ 0xDD549F920988A001) << 32) ^ 0x499DF05600000000) & ((v100 << 16) & 0x5D549F9200000000 ^ 0x4044960200000000 ^ ((v100 << 16) ^ 0x1F92499D00000000) & v100)));
  v103 = ((v102 ^ 0x4C6960B9417F17C0) - 0x5EE2B4F7BBE49594) ^ ((v102 ^ 0x4DD999628986C880) - 0x5F524D2C731D4AD4);
  LODWORD(v102) = __CFADD__(257 * (v103 ^ ((v102 ^ 0xE12A0DA2E06DE82FLL) + 0xC5E2613E5099585)), 0x3315809E1C4F03BLL)
                + (((v103 ^ ((v102 ^ 0xE12A0DA2E06DE82FLL) + 0xC5E2613E5099585)) * (unsigned __int128)0x101uLL) >> 64)
                + 257
                * ((__CFADD__(v102 ^ 0x4C6960B9417F17C0, 0xA11D4B08441B6A6CLL) - 1) ^ (__CFADD__(v102 ^ 0x4DD999628986C880, 0xA0ADB2D38CE2B52CLL)- 1) ^ (__CFADD__(v102 ^ 0xE12A0DA2E06DE82FLL, 0xC5E2613E5099585)- 1))+ 246032515;
  LODWORD(v103) = (v102 ^ 0xEC419879) & (2 * (v102 & 0xF155D870)) ^ v102 & 0xF155D870;
  LODWORD(v100) = ((2 * (v102 ^ 0x2C400899)) ^ 0xBA2BA1D2) & (v102 ^ 0x2C400899) ^ (2 * (v102 ^ 0x2C400899)) & 0xDD15D0E8;
  LODWORD(v103) = (v100 ^ 0x880190E9) & (4 * v103) ^ v103;
  LODWORD(v100) = ((4 * (v100 ^ 0x45145029)) ^ 0x745743A4) & (v100 ^ 0x45145029) ^ (4 * (v100 ^ 0x45145029)) & 0xDD15D0E8;
  LODWORD(v103) = (v100 ^ 0x541540A9) & (16 * v103) ^ v103;
  LODWORD(v100) = ((16 * (v100 ^ 0x89009049)) ^ 0xD15D0E90) & (v100 ^ 0x89009049) ^ (16 * (v100 ^ 0x89009049)) & 0xDD15D0E0;
  LODWORD(v103) = v103 ^ 0xDD15D0E9 ^ (v100 ^ 0xD1150000) & ((_DWORD)v103 << 8);
  LODWORD(v103) = v102 ^ (2
                        * (((_DWORD)v103 << 16) & 0x5D150000 ^ v103 ^ (((_DWORD)v103 << 16) ^ 0x50E90000) & (((v100 ^ 0xC00D069) << 8) & 0x5D150000 ^ 0x48050000 ^ (((v100 ^ 0xC00D069) << 8) ^ 0x15D00000) & (v100 ^ 0xC00D069))));
  v104 = (((v103 ^ 0x2F5CBC9C) - 1225609561) ^ ((v103 ^ 0xF915E766) + 1622930781) ^ ((v103 ^ 0x3D352258) - 1533333405))
       - 514193146;
  LODWORD(v102) = (v104 ^ 0x2BDBC460) & (2 * (v104 & 0xABD3D165)) ^ v104 & 0xABD3D165;
  LODWORD(v100) = ((2 * (v104 ^ 0x38FEC62A)) ^ 0x265A2E9E) & (v104 ^ 0x38FEC62A) ^ (2 * (v104 ^ 0x38FEC62A)) & 0x932D174E;
  LODWORD(v102) = (v100 ^ 0x228164D) & (4 * v102) ^ v102;
  LODWORD(v100) = ((4 * (v100 ^ 0x91251141)) ^ 0x4CB45D3C) & (v100 ^ 0x91251141) ^ (4 * (v100 ^ 0x91251141)) & 0x932D174C;
  LODWORD(v102) = (v100 ^ 0x241503) & (16 * v102) ^ v102;
  LODWORD(v100) = ((16 * (v100 ^ 0x93090243)) ^ 0x32D174F0) & (v100 ^ 0x93090243) ^ (16 * (v100 ^ 0x93090243)) & 0x932D1740;
  LODWORD(v102) = v102 ^ 0x932D174F ^ (v100 ^ 0x1201140F) & ((_DWORD)v102 << 8);
  v105 = ((_DWORD)v102 << 16) & 0x132D0000 ^ v102 ^ (((_DWORD)v102 << 16) ^ 0x174F0000) & (((v100 ^ 0x812C030F) << 8) & 0x132D0000 ^ 0x12280000 ^ (((v100 ^ 0x812C030F) << 8) ^ 0x2D170000) & (v100 ^ 0x812C030F));
  LODWORD(v102) = ((LODWORD(STACK[0x16E0]) ^ 0xBF8EA994) + 1081169516) ^ ((LODWORD(STACK[0x16E0]) ^ 0xAB27F1BE)
                                                                        + 1423445570) ^ ((LODWORD(STACK[0x16E0]) ^ 0x9984CC4D)
                                                                                       + 1719350195);
  v106 = v104 ^ (2 * v105);
  v107 = STACK[0x1818];
  v108 = (((LODWORD(STACK[0x1488]) ^ 0x34CBE9F3) - 885778931) ^ ((LODWORD(STACK[0x1488]) ^ 0x7C9C1E74) - 2090606196) ^ ((LODWORD(STACK[0x1488]) ^ 0xC57A63E0) + 981834784))
       - (((v107 ^ 0x48C126C6) - 1220617926) ^ ((v107 ^ 0x6524329F) - 1696871071) ^ ((v107 ^ 0xA0C8803E) + 1597472706))
       - (((v81 ^ 0x9C02F941) + 1677526719) ^ ((v81 ^ 0xB41D0711) + 1273166063) ^ ((v81 ^ 0xA5326A37) + 1523422665))
       + (((LODWORD(STACK[0x17A0]) ^ 0xAB8E3F2E) - 1051728122) ^ ((LODWORD(STACK[0x17A0]) ^ 0x4B1AE94E) + 568013158) ^ ((LODWORD(STACK[0x17A0]) ^ 0xF88765D3) - 1840857607))
       - 1033986029
       + (((v91 ^ 0x82DF2CC6) - 1714060757) ^ ((v91 ^ 0x9AB18EA5) - 2118442934) ^ ((v91 ^ 0x71B66717) + 1790757372));
  v109 = (v108 ^ 0xA28CF206) & (2 * (v108 & 0xCACEF454)) ^ v108 & 0xCACEF454;
  v110 = ((2 * (v108 ^ 0x2790F206)) ^ 0xDABC0CA4) & (v108 ^ 0x2790F206) ^ (2 * (v108 ^ 0x2790F206)) & 0xED5E0652;
  v111 = (v110 ^ 0x481C0000) & (4 * v109) ^ v109;
  v112 = ((4 * (v110 ^ 0x25420252)) ^ 0xB5781948) & (v110 ^ 0x25420252) ^ (4 * (v110 ^ 0x25420252)) & 0xED5E0650;
  v113 = (v112 ^ 0xA5580052) & (16 * v111) ^ v111;
  v114 = ((16 * (v112 ^ 0x48060612)) ^ 0xD5E06520) & (v112 ^ 0x48060612) ^ (16 * (v112 ^ 0x48060612)) & 0xED5E0650;
  v115 = v113 ^ 0xED5E0652 ^ (v114 ^ 0xC5400400) & (v113 << 8);
  LODWORD(STACK[0x16E0]) = v108 ^ (2
                                 * ((v115 << 16) & 0x6D5E0000 ^ v115 ^ ((v115 << 16) ^ 0x6520000) & (((v114 ^ 0x281E0252) << 8) & 0xED5E0000 ^ 0x21580000 ^ (((v114 ^ 0x281E0252) << 8) ^ 0x5E060000) & (v114 ^ 0x281E0252))));
  v116 = (((v103 ^ 0x22C7AF38) - 1150698237) ^ ((v103 ^ 0x862630B7) + 529015438) ^ ((v103 ^ 0x4F9DE62D) - 701238248))
       - 1530919734;
  v117 = (v116 ^ 0xE34F6CCF) & (2 * (v116 & 0xE86E6EC8)) ^ v116 & 0xE86E6EC8;
  v118 = ((2 * (v116 ^ 0xE38BF4CF)) ^ 0x17CB340E) & (v116 ^ 0xE38BF4CF) ^ (2 * (v116 ^ 0xE38BF4CF)) & 0xBE59A06;
  v119 = (v118 ^ 0x3C11000) & (4 * v117) ^ v117;
  v120 = ((4 * (v118 ^ 0x8248A01)) ^ 0x2F96681C) & (v118 ^ 0x8248A01) ^ (4 * (v118 ^ 0x8248A01)) & 0xBE59A04;
  v121 = (v120 ^ 0xB840803) & (16 * v119) ^ v119;
  v122 = ((16 * (v120 ^ 0x619203)) ^ 0xBE59A070) & (v120 ^ 0x619203) ^ (16 * (v120 ^ 0x619203)) & 0xBE59A00;
  v123 = v121 ^ 0xBE59A07 ^ (v122 ^ 0xA418000) & (v121 << 8);
  v124 = (v123 << 16) & 0xBE50000 ^ v123 ^ ((v123 << 16) ^ 0x1A070000) & (((v122 ^ 0x1A41A07) << 8) & 0xBE50000 ^ 0xA650000 ^ (((v122 ^ 0x1A41A07) << 8) ^ 0x659A0000) & (v122 ^ 0x1A41A07));
  v125 = STACK[0x1808];
  v126 = (((v125 ^ 0x3CF0F489) - 1022424201) ^ ((v125 ^ 0x190A6AE5) - 420113125) ^ ((v125 ^ 0xA8D70A0B) + 1462302197))
       + v102
       - (((v48 ^ 0x2267E04A) + 1354075091) ^ (v48 - 1926919271) ^ ((v48 ^ 0x7D0E13D2) + 266106955))
       - 724888086;
  LODWORD(v102) = (v126 ^ 0xB54B7F78) & (2 * (v126 & 0xB8627E7D)) ^ v126 & 0xB8627E7D;
  LODWORD(STACK[0x15CC]) = v126;
  LODWORD(v100) = ((2 * (v126 ^ 0xC50B6742)) ^ 0xFAD2327E) & (v126 ^ 0xC50B6742) ^ (2 * (v126 ^ 0xC50B6742)) & 0x7D69193E;
  LODWORD(v102) = (v100 ^ 0x6000103C) & (4 * v102) ^ v102;
  LODWORD(v100) = ((4 * (v100 ^ 0x5290901)) ^ 0xF5A464FC) & (v100 ^ 0x5290901) ^ (4 * (v100 ^ 0x5290901)) & 0x7D69193C;
  LODWORD(v102) = (v100 ^ 0x75200030) & (16 * v102) ^ v102;
  LODWORD(v100) = ((16 * (v100 ^ 0x8491903)) ^ 0xD69193F0) & (v100 ^ 0x8491903) ^ (16 * (v100 ^ 0x8491903)) & 0x7D691930;
  LODWORD(v102) = v102 ^ 0x7D69193F ^ (v100 ^ 0x54011100) & ((_DWORD)v102 << 8);
  LODWORD(STACK[0x1560]) = ((_DWORD)v102 << 16) & 0x7D690000 ^ v102 ^ (((_DWORD)v102 << 16) ^ 0x193F0000) & (((v100 ^ 0x2968080F) << 8) & 0x7D690000 ^ 0x14600000 ^ (((v100 ^ 0x2968080F) << 8) ^ 0x69190000) & (v100 ^ 0x2968080F));
  LODWORD(STACK[0x17A8]) = v48;
  LODWORD(v100) = (((v48 ^ 0x600E1CB) + 1959955028) ^ (v48 + 1961522265) ^ ((v48 ^ 0x154EC5A3) + 1738321468))
                - 1591049287;
  v127 = (v100 ^ 0xEBEA04A8) & (2 * (v100 & 0x4632)) ^ v100 & 0x4632;
  v128 = ((2 * (v100 ^ 0x63EC29A8)) ^ 0x1FDEFE34) & (v100 ^ 0x63EC29A8) ^ (2 * (v100 ^ 0x63EC29A8)) & 0x8FEF7F1A;
  v129 = (v128 ^ 0x23810) & (4 * v127) ^ v127;
  v130 = ((4 * (v128 ^ 0x8021010A)) ^ 0x3FBDFC68) & (v128 ^ 0x8021010A) ^ (4 * (v128 ^ 0x8021010A)) & 0x8FEF7F18;
  v131 = (v130 ^ 0xFAD7C00) & (16 * v129) ^ v129;
  v132 = ((16 * (v130 ^ 0x80420312)) ^ 0xFEF7F1A0) & (v130 ^ 0x80420312) ^ (16 * (v130 ^ 0x80420312)) & 0x8FEF7F10;
  v133 = v131 ^ 0x8FEF7F1A ^ (v132 ^ 0x8EE77100) & (v131 << 8);
  v134 = (v133 << 16) & 0xFEF0000 ^ v133 ^ ((v133 << 16) ^ 0x7F1A0000) & (((v132 ^ 0x1080E1A) << 8) & 0xFEF0000 ^ (((v132 ^ 0x1080E1A) << 8) ^ 0xEF7F0000) & (v132 ^ 0x1080E1A) ^ 0x800000);
  v135 = 0xFF00FF00FF0100
       * (((v125 ^ 0xB47BDFF5E3FDA4B2) + 0x4B84200A1C025B4ELL) ^ ((v125 ^ 0xD4CB49C5B70B3DE0) + 0x2B34B63A48F4C220) ^ ((v125 ^ 0x60B09630D9DB0D35) - 0x60B09630D9DB0D35))
       - 0x1BFBE36395E28BB6;
  v136 = (v135 ^ 0x2F8244EA158FF9A1) & (2 * (v135 & 0x8F8856F0960FF200)) ^ v135 & 0x8F8856F0960FF200;
  v137 = (2 * (v135 ^ 0x3C92E10B119DFDA1)) & 0xB31AB7FB87920E06 ^ 0x910A900880920001 ^ ((2
                                                                                             * (v135 ^ 0x3C92E10B119DFDA1)) ^ 0x66356FF70F241E2ALL) & (v135 ^ 0x3C92E10B119DFDA1);
  v138 = (4 * v136) & 0x3202B7C280120800 ^ v136 ^ ((4 * v136) | 0x18) & v137;
  v139 = (4 * v137) & 0xB31AB7FB87920F14 ^ 0x3310201181920303 ^ ((4 * v137) ^ 0xCC6ADFEE1E483C5CLL) & v137;
  v140 = (16 * v138) & 0xB31AB7FB87920F10 ^ v138 ^ ((16 * v138) ^ 0x160) & v139;
  v141 = (16 * v139) & 0xB31AB7FB87920F10 ^ 0x8210804386920E07 ^ ((16 * v139) ^ 0x31AB7FB87920F170) & v139;
  v142 = (v140 << 8) & 0xB31AB7FB87920F00 ^ v140 ^ ((v140 << 8) ^ 0x11600) & v141;
  v143 = (v141 << 8) & 0xB31AB7FB87920F00 ^ 0xA108047805900817 ^ ((v141 << 8) ^ 0x1AB7FB87920F1700) & v141;
  v144 = v142 ^ (v142 << 16) & 0xB31AB7FB87920000 ^ ((v142 << 16) ^ 0x7160000) & v143;
  v145 = v135 ^ (2
               * (((v144 ^ 0xB31AB7FB80800801) << 32) & 0x331AB7FB00000000 ^ v144 ^ 0xB31AB7FB80800801 ^ (((v144 ^ 0xB31AB7FB80800801) << 32) ^ 0x7920F1700000000) & ((v143 << 16) & 0x331AB7FB00000000 ^ 0x306900000000 ^ ((v143 << 16) ^ 0x37FB879200000000) & v143)));
  v146 = ((v145 ^ 0xD10FB0C156E2AFE4) - 0x3A4B015CB88FAC13) ^ ((v145 ^ 0xA725DFBFE4D70E18) - 0x4C616E220ABA0DEFLL);
  LODWORD(v145) = __CFADD__(257 * (v146 ^ ((v145 ^ 0x99B3585F2B1E4D64) - 0x72F7E9C2C5734E93)), 0xE2644333BE365E6FLL)
                + (((v146 ^ ((v145 ^ 0x99B3585F2B1E4D64) - 0x72F7E9C2C5734E93)) * (unsigned __int128)0x101uLL) >> 64)
                + 257
                * ((__CFADD__(v145 ^ 0xD10FB0C156E2AFE4, 0xC5B4FEA3477053EDLL) - 1) ^ (__CFADD__(v145 ^ 0xA725DFBFE4D70E18, 0xB39E91DDF545F211)- 1) ^ (__CFADD__(v145 ^ 0x99B3585F2B1E4D64, 0x8D08163D3A8CB16DLL)- 1))+ 832057881;
  LODWORD(v146) = (v145 ^ 0xCF778DCB) & (2 * (v145 & 0xCE67CDEB)) ^ v145 & 0xCE67CDEB;
  LODWORD(v143) = ((2 * (v145 ^ 0xD7F18F89)) ^ 0x332C84C4) & (v145 ^ 0xD7F18F89) ^ (2 * (v145 ^ 0xD7F18F89)) & 0x19964262;
  LODWORD(v146) = (v143 ^ 0x11040042) & (4 * v146) ^ v146;
  LODWORD(v143) = ((4 * (v143 ^ 0x8924222)) ^ 0x66590988) & (v143 ^ 0x8924222) ^ (4 * (v143 ^ 0x8924222)) & 0x19964260;
  LODWORD(v146) = (v143 ^ 0x100002) & (16 * v146) ^ v146;
  LODWORD(v143) = ((16 * (v143 ^ 0x19864262)) ^ 0x99642620) & (v143 ^ 0x19864262) ^ (16 * (v143 ^ 0x19864262)) & 0x19964260;
  LODWORD(v146) = v146 ^ 0x19964262 ^ (v143 ^ 0x19040200) & ((_DWORD)v146 << 8);
  LODWORD(v145) = v145 ^ (2
                        * ((((_DWORD)v146 << 16) ^ 0x42620000) & (((v143 ^ 0x924042) << 8) & 0x19960000 ^ 0x9940000 ^ (((v143 ^ 0x924042) << 8) ^ 0x96420000) & (v143 ^ 0x924042)) ^ v146 ^ (((_DWORD)v146 << 16) & 0x19960000 | 0x4202)));
  v147 = *(_DWORD *)(v78
                   + 4
                   * ((((v68 ^ 0xD174C25) - 219630629) ^ ((v68 ^ 0x2680DF31) - 645979953) ^ ((v68 ^ 0xA6BA0773)
                                                                                           + 1497757837))
                    - 1926335598)) ^ *(_DWORD *)(v78 + 4 * (v106 ^ 0xAB93FFFB));
  LODWORD(v103) = v103 ^ 0xF898B24E ^ (v147 - 1926392729 - (v7 & (2 * v147)));
  LODWORD(STACK[0x1530]) = v103 - 1926392729 - (v7 & (2 * v103));
  v148 = v100 ^ (2 * v134);
  LODWORD(v103) = v116 ^ (2 * v124);
  LODWORD(STACK[0x1760]) = v91;
  v149 = 0xFF00FF00FF0100
       * (((v91 ^ 0xCC41EE39C958E3FELL) + 0x33BE11C6D2524D13) ^ ((v91 ^ 0xA5BB6D35700B9CCALL) + 0x5A4492CA6B013227) ^ ((v91 ^ 0x69FA830CD08BBA40) - 0x69FA830C347EEB53))
       - 0x89AB117BDC8ED33;
  v150 = (v149 ^ 0x7E26202039F51038) & (2 * (v149 & 0x7C2724A4BDF65400)) ^ v149 & 0x7C2724A4BDF65400;
  v151 = (2 * (v149 ^ 0x46602829595DB838)) & 0x3A470C8DE4ABEC02 ^ 0xA41048424A82401 ^ ((2
                                                                                            * (v149 ^ 0x46602829595DB838)) ^ 0x748E191BC957D814) & (v149 ^ 0x46602829595DB838);
  v152 = (4 * v150) & 0x30050485E4ABE000 ^ v150 ^ ((4 * v150) | 0xC) & v151;
  v153 = (4 * v151) & 0x3A470C8DE4ABEC08 ^ 0x12430C8864004C03 ^ ((4 * v151) ^ 0xE91C323792AFB02CLL) & v151;
  v154 = (16 * v152) & 0x3A470C8DE4ABEC00 ^ v152 ^ ((16 * v152) ^ 0xB0) & v153;
  v155 = (16 * v153) & 0x3A470C8DE4ABEC00 ^ 0x1A070401A4012C0BLL ^ ((16 * v153) ^ 0xA470C8DE4ABEC0B0) & v153;
  v156 = (v154 << 8) & 0x3A470C8DE4ABEC00 ^ v154 ^ ((v154 << 8) ^ 0xB00) & v155;
  v157 = (v155 << 8) & 0x3A470C8DE4ABEC00 ^ 0x384300094403E40BLL ^ ((v155 << 8) ^ 0x470C8DE4ABEC0B00) & v155;
  v158 = v156 ^ (v156 << 16) & 0x3A470C8DE4AB0000 ^ ((v156 << 16) ^ 0x80B0000) & v157;
  v159 = v149 ^ (2
               * (((v158 ^ 0x3A470C8DE4A0E400) << 32) & 0x3A470C8D00000000 ^ v158 ^ 0x3A470C8DE4A0E400 ^ (((v158 ^ 0x3A470C8DE4A0E400) << 32) ^ 0x64ABEC0B00000000) & ((v157 << 16) & 0x3A470C8D00000000 ^ 0x3242080400000000 ^ ((v157 << 16) ^ 0xC8DE4AB00000000) & v157)));
  v160 = ((v159 ^ 0xE89AD8EE4B1B9F5DLL) - 0x774C5028EA1DAE3FLL) ^ ((v159 ^ 0xB02FEC64F0AD4052) - 0x2FF964A251AB7130);
  LODWORD(v159) = __CFADD__(257 * (v160 ^ ((v159 ^ 0x101A1127CF17532ALL) + 0x7033661E91EE9DB8)), 0x512719417D650447)
                + (((v160 ^ ((v159 ^ 0x101A1127CF17532ALL) + 0x7033661E91EE9DB8)) * (unsigned __int128)0x101uLL) >> 64)
                + 257
                * ((__CFADD__(v159 ^ 0xE89AD8EE4B1B9F5DLL, 0x88B3AFD715E251C1) - 1) ^ (__CFADD__(v159 ^ 0xB02FEC64F0AD4052, 0xD0069B5DAE548ED0)- 1) ^ (__CFADD__(v159 ^ 0x101A1127CF17532ALL, 0x7033661E91EE9DB8)- 1))+ 698670697;
  LODWORD(v160) = (v159 ^ 0xC65A824F) & (2 * (v159 & 0xD65B226F)) ^ v159 & 0xD65B226F;
  LODWORD(v157) = ((2 * (v159 ^ 0xE6D8C20D)) ^ 0x6107C0C4) & (v159 ^ 0xE6D8C20D) ^ (2 * (v159 ^ 0xE6D8C20D)) & 0x3083E062;
  LODWORD(v160) = (v157 ^ 0x2001A042) & (4 * v160) ^ v160;
  LODWORD(v157) = ((4 * (v157 ^ 0x10802022)) ^ 0xC20F8188) & (v157 ^ 0x10802022) ^ (4 * (v157 ^ 0x10802022)) & 0x3083E060;
  LODWORD(v160) = (v157 ^ 0x38002) & (16 * v160) ^ v160;
  LODWORD(v157) = ((16 * (v157 ^ 0x30806062)) ^ 0x83E0620) & (v157 ^ 0x30806062) ^ (16 * (v157 ^ 0x30806062)) & 0x3083E060;
  LODWORD(v160) = v160 ^ 0x3083E062 ^ (v157 ^ 0x20042) & ((_DWORD)v160 << 8);
  LODWORD(v160) = v159 ^ (2
                        * (((_DWORD)v160 << 16) & 0x30830000 ^ v160 ^ (((_DWORD)v160 << 16) ^ 0x60620000) & (((v157 ^ 0x3081E042) << 8) & 0x30830000 ^ 0x30030000 ^ (((v157 ^ 0x3081E042) << 8) ^ 0x83E00000) & (v157 ^ 0x3081E042))));
  v161 = 0xFF00FF00FF0100
       * (((v81 ^ 0x6779170389448B0ALL) - 0x6779170389448B0ALL) ^ ((v81 ^ 0x1C0EFAD7CD406C48) - 0x1C0EFAD7CD406C48) ^ ((v81 ^ 0x7B77EDD4C9297325) - 0x7B77EDD4C9297325))
       + 0x1A993D9F5ECA72F9;
  v162 = (v161 ^ 0x1AEA21ED2848E6E7) & (2 * (v161 & 0x58F335EDA162F401)) ^ v161 & 0x58F335EDA162F401;
  v163 = ((2 * (v161 ^ 0xABAC617C688CCEE7)) ^ 0xE6BEA92393DC7500) & (v161 ^ 0xABAC617C688CCEE7) ^ (2 * (v161 ^ 0xABAC617C688CCEE7)) & 0xF35F5491C9EE3A00;
  v164 = (v163 ^ 0xE21C0001818C3000) & (4 * v162) ^ v162;
  v165 = ((4 * (v163 ^ 0x1141549048220A00)) ^ 0xCD7D524727B8EB80) & (v163 ^ 0x1141549048220A00) ^ (4 * (v163 ^ 0x1141549048220A00)) & 0xF35F5491C9EE3AE0;
  v166 = (v165 ^ 0xC15D500101A82A80) & (16 * v164) ^ v164;
  v167 = ((16 * (v165 ^ 0x32020490C8461060)) ^ 0x35F5491C9EE3AE00) & (v165 ^ 0x32020490C8461060) ^ (16 * (v165 ^ 0x32020490C8461060)) & 0xF35F5491C9EE3AE0;
  v168 = (v167 ^ 0x3155401088E22A00) & (v166 << 8) ^ v166;
  v169 = (((v167 ^ 0xC20A1481410C10E0) << 8) ^ 0x5F5491C9EE3AE000) & (v167 ^ 0xC20A1481410C10E0) ^ ((v167 ^ 0xC20A1481410C10E0) << 8) & 0xF35F5491C9EE3A00;
  v170 = v168 ^ 0xF35F5491C9EE3AE0 ^ (v169 ^ 0x53541081C82A0000) & (v168 << 16);
  v171 = v161 ^ (2
               * ((v170 << 32) & 0x735F549100000000 ^ v170 ^ ((v170 << 32) ^ 0x49EE3AE000000000) & (((v169 ^ 0xA00B441001C41AE0) << 16) & 0x735F549100000000 ^ 0x234E141100000000 ^ (((v169 ^ 0xA00B441001C41AE0) << 16) ^ 0x5491C9EE00000000) & (v169 ^ 0xA00B441001C41AE0))));
  v172 = ((v171 ^ 0xD41FAC033D163EF2) + 0x2F1930242AB16DCALL) ^ ((v171 ^ 0x4DECD68C099DB316) - 0x4915B554E1C51FD2);
  LODWORD(v171) = __CFADD__(257 * (v172 ^ ((v171 ^ 0xA522C74106350C23) + 0x5E245B6611925F19)), 0x6106F4F1C1133003)
                + (((v172 ^ ((v171 ^ 0xA522C74106350C23) + 0x5E245B6611925F19)) * (unsigned __int128)0x101uLL) >> 64)
                + 257
                * ((__CFADD__(v171 ^ 0xD41FAC033D163EF2, 0x2F1930242AB16DCALL) - 1) ^ (__CFADD__(v171 ^ 0x4DECD68C099DB316, 0xB6EA4AAB1E3AE02ELL)- 1) ^ (__CFADD__(v171 ^ 0xA522C74106350C23, 0x5E245B6611925F19)- 1))+ 1803406988;
  LODWORD(v172) = (v171 ^ 0x43A12F) & (2 * (v171 & 0x948231AC)) ^ v171 & 0x948231AC;
  LODWORD(v169) = ((2 * (v171 ^ 0x2143C23F)) ^ 0x6B83E726) & (v171 ^ 0x2143C23F) ^ (2 * (v171 ^ 0x2143C23F)) & 0xB5C1F392;
  LODWORD(v172) = (v169 ^ 0x2001C300) & (4 * v172) ^ v172;
  LODWORD(v169) = ((4 * (v169 ^ 0x94401091)) ^ 0xD707CE4C) & (v169 ^ 0x94401091) ^ (4 * (v169 ^ 0x94401091)) & 0xB5C1F390;
  LODWORD(v172) = (v169 ^ 0x9501C200) & (16 * v172) ^ v172;
  LODWORD(v169) = ((16 * (v169 ^ 0x20C03193)) ^ 0x5C1F3930) & (v169 ^ 0x20C03193) ^ (16 * (v169 ^ 0x20C03193)) & 0xB5C1F390;
  LODWORD(v172) = v172 ^ 0xB5C1F393 ^ (v169 ^ 0x14013100) & ((_DWORD)v172 << 8);
  LODWORD(v171) = v171 ^ (2
                        * (((_DWORD)v172 << 16) & 0x35C10000 ^ v172 ^ (((_DWORD)v172 << 16) ^ 0x73930000) & (((v169 ^ 0xA1C0C283) << 8) & 0x35C10000 ^ 0x34000000 ^ (((v169 ^ 0xA1C0C283) << 8) ^ 0x41F30000) & (v169 ^ 0xA1C0C283))));
  LODWORD(v172) = (((v171 ^ 0x506BE434) - 1095083737) ^ ((v171 ^ 0x35C7A105) - 619308008) ^ ((v171 ^ 0xF9AF93BB)
                                                                                           + 394145450))
                + 66966678;
  LODWORD(v169) = (v172 ^ 0x293941C0) & (2 * (v172 & 0x893005D5)) ^ v172 & 0x893005D5;
  LODWORD(v143) = ((2 * (v172 ^ 0x29394260)) ^ 0x40128F6A) & (v172 ^ 0x29394260) ^ (2 * (v172 ^ 0x29394260)) & 0xA00947B4;
  LODWORD(v169) = (v143 ^ 0x80094720) & (4 * v169) ^ v169;
  LODWORD(v143) = ((4 * (v143 ^ 0xA0094095)) ^ 0x80251ED4) & (v143 ^ 0xA0094095) ^ (4 * (v143 ^ 0xA0094095)) & 0xA00947B4;
  LODWORD(v169) = (v143 ^ 0x80010691) & (16 * v169) ^ v169;
  LODWORD(v143) = ((16 * (v143 ^ 0x20084121)) ^ 0x947B50) & (v143 ^ 0x20084121) ^ (16 * (v143 ^ 0x20084121)) & 0xA00947B0;
  LODWORD(v169) = v169 ^ 0xA00947B5 ^ (v143 ^ 0x4300) & ((_DWORD)v169 << 8);
  v173 = *(_DWORD *)(v78 + 4 * (v148 ^ 0xEDC9A886));
  LODWORD(STACK[0x1690]) = v173;
  v174 = v145 ^ LODWORD(STACK[0x1780]) ^ *(_DWORD *)(v78
                                                   + 4
                                                   * ((((v145 ^ 0x6B8BF418) - 468299092) ^ ((v145 ^ 0xA20921D1) + 764708707) ^ ((v145 ^ 0x34CD18E2) - 1152336302))
                                                    - 1926374805)) ^ ((LODWORD(STACK[0x160C]) ^ v173)
                                                                    - 1926392729
                                                                    - (v7 & (2 * (LODWORD(STACK[0x160C]) ^ v173))));
  v175 = ((v68 & 0x24) - 1599117888 + (v68 & 0x2C ^ 0x2C) - ((v68 & 0x2C ^ 0x2C) & 0xFFFFFFE7)) ^ 0xA0956026;
  v176 = (410104072 - (v175 | 0x1871B108) + (v175 | 0xE78E4EF7)) ^ 0xC4A04B3D | ((v68 & 0x2C ^ 0x24)
                                                                               - ((2 * (v68 & 0x2C ^ 0x24)) & 0xFFFFFFF7)
                                                                               + 184) ^ 0x3B1EB094;
  v177 = (v176 - 1926392729 - (v7 & (2 * v176))) ^ *(_DWORD *)(v78
                                                             + 4
                                                             * (v172 ^ (2
                                                                                    * (((_DWORD)v169 << 16) & 0x20090000 ^ v169 ^ (((_DWORD)v169 << 16) ^ 0x47B50000) & (((v143 ^ 0xA00904A5) << 8) & 0xA0090000 ^ 0x20080000 ^ (((v143 ^ 0xA00904A5) << 8) ^ 0x9470000) & (v143 ^ 0xA00904A5)))) ^ 0xC9208ABF));
  v178 = (LODWORD(STACK[0x1578]) ^ 0x8D2D9467)
       + (*(_DWORD *)(v78
                    + 4
                    * ((((v160 ^ 0xC2E4D60D) + 1198415679) ^ ((v160 ^ 0x8B1E0C73) + 244614465) ^ ((v160 ^ 0xBEA238D5) + 992522727))
                     - 1926374805)) ^ v160 ^ 0x205D6694)
       + (v171 ^ 0x8FE71D66 ^ (v177 - 1926392729 - (v7 & (2 * v177))));
  v179 = (LODWORD(STACK[0x1650]) ^ 0x8D2D9467)
       + (*(_DWORD *)(v78 + 4 * (v103 ^ 0xEBAF5AC6)) ^ 0xBA621967)
       + v80;
  LODWORD(v171) = (((v145 ^ 0x1EF0B709) - 1855123013) ^ ((v145 ^ 0x30915E85) - 1089669065) ^ ((v145 ^ 0xD32E24A7)
                                                                                            + 1555268117))
                - 1146444876;
  LODWORD(v145) = (v171 ^ 0x8D738FDF) & (2 * (v171 & 0xD183CFDE)) ^ v171 & 0xD183CFDE;
  v180 = ((2 * (v171 ^ 0x8C7410CB)) ^ 0xBBEFBE2A) & (v171 ^ 0x8C7410CB) ^ (2 * (v171 ^ 0x8C7410CB)) & 0x5DF7DF14;
  LODWORD(v145) = (v180 ^ 0x8071E00) & (4 * v145) ^ v145;
  v181 = ((4 * (v180 ^ 0x44104115)) ^ 0x77DF7C54) & (v180 ^ 0x44104115) ^ (4 * (v180 ^ 0x44104115)) & 0x5DF7DF14;
  LODWORD(v145) = (v181 ^ 0x55D75C00) & (16 * v145) ^ v145;
  v182 = ((16 * (v181 ^ 0x8208301)) ^ 0xDF7DF150) & (v181 ^ 0x8208301) ^ (16 * (v181 ^ 0x8208301)) & 0x5DF7DF10;
  LODWORD(v145) = v145 ^ 0x5DF7DF15 ^ (v182 ^ 0x5D75D105) & ((_DWORD)v145 << 8);
  LODWORD(v103) = (LODWORD(STACK[0xE0C]) ^ 0x8D2D9467)
                + 207829707
                * ((((LODWORD(STACK[0x17A0]) ^ 0xBAF8F6E7) - 801558835) ^ ((LODWORD(STACK[0x17A0]) ^ 0x353E23EA)
                                                                         + 1610611650) ^ ((LODWORD(STACK[0x17A0]) ^ 0x97D566BE)
                                                                                        - 48972138))
                 - (((v107 ^ 0xA773A3C9) + 1485593655) ^ ((v107 ^ 0x6F7D3980) - 1870477696) ^ ((v107 ^ 0x45230E2E)
                                                                                             - 1159925294)));
  v183 = LODWORD(STACK[0x1820]) ^ LODWORD(STACK[0x173C]) ^ (v178 - 1926392728 - (v7 & (2 * (v178 + 1))));
  v184 = STACK[0x17BC];
  v185 = LODWORD(STACK[0x1138]) ^ LODWORD(STACK[0x1718]);
  LODWORD(v171) = *(_DWORD *)(v78
                            + 4
                            * (v171 ^ (2
                                                   * (((_DWORD)v145 << 16) & 0x5DF70000 ^ v145 ^ (((_DWORD)v145 << 16) ^ 0x5F150000) & (((v182 ^ 0x820E05) << 8) & 0x5DF70000 ^ 0x8200000 ^ (((v182 ^ 0x820E05) << 8) ^ 0x77DF0000) & (v182 ^ 0x820E05)))) ^ 0xD04671F4)) ^ LODWORD(STACK[0x17D8]);
  LODWORD(v171) = LODWORD(STACK[0x160C]) ^ (v171 - 1926392729 - (v7 & (2 * v171)));
  LODWORD(STACK[0x15DC]) = v174;
  LODWORD(v78) = STACK[0x15C0];
  LODWORD(STACK[0x15E4]) = (327781081
                          * (((v184 ^ 0xD1691189) + 781643383) ^ ((v184 ^ 0x8C17A114) + 1944608492) ^ ((v184 ^ 0xD05324FA) + 799857414))
                          + 1304514895) ^ 0x1A3A3369 ^ (327781081 * (LODWORD(STACK[0x15C0]) ^ 0x9717A70E)) ^ (v185 - 1926392729 - (v7 & (2 * v185))) ^ 0x8D2D9495 ^ LODWORD(STACK[0x1838]);
  LODWORD(STACK[0x17D8]) = (STACK[0x14B0] & 0x8C89C60A ^ 0x73F67BFD)
                         + 521951390
                         + ((((2 * (STACK[0x14B0] & 0x8C89C60A ^ 0x8C50D066)) & 0x10220C08)
                           - (STACK[0x14B0] & 0x8C89C60A ^ 0x8C50D066)
                           + 1978587370) ^ 0x6C1B57B);
  v186 = LODWORD(STACK[0x1758]) - 567666899;
  LODWORD(STACK[0x1578]) = v7 & (2 * v186);
  LODWORD(STACK[0x1758]) = v186 - 1926392729;
  LODWORD(STACK[0x17BC]) = LODWORD(STACK[0x1658]) ^ v107;
  ++v179;
  LODWORD(STACK[0x1718]) = v7 & (2 * v179);
  LODWORD(STACK[0x1658]) = v179 - 1926392729;
  LODWORD(STACK[0x14E4]) = v7 & (2 * v103);
  LODWORD(STACK[0x14F0]) = v103 - 1926392729;
  v187 = LODWORD(STACK[0x1600]) - 1438984107;
  LODWORD(STACK[0x160C]) = v7 & (2 * v187);
  LODWORD(STACK[0x15E0]) = v187 - 1926392729;
  LODWORD(STACK[0x1650]) = v7 & (2 * v171);
  LODWORD(STACK[0x1780]) = v171 - 1926392729;
  LODWORD(STACK[0x1820]) = v78 ^ 0x8A6B47BC;
  LODWORD(STACK[0x1600]) = v183;
  LODWORD(STACK[0x173C]) = v183 ^ 0x1A3A336A;
  v188 = *(uint64_t (**)(uint64_t))(STACK[0x18C0] + 8 * SLODWORD(STACK[0x161C]));
  LODWORD(STACK[0x161C]) = (2 * LODWORD(STACK[0x1860])) & 0x14200052;
  return v188(3059010038);
}

uint64_t sub_10034E200(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  _BOOL4 v17;

  v6 = (((v5 ^ 0x915FC05A) + 1855995814) ^ ((v5 ^ 0xACDED244) + 1394683324) ^ ((v5 ^ 0xB0AC8679) + 1330870663))
     - 1588948148;
  v7 = (v6 ^ 0xCBF3C8DA) & (2 * (v6 & 0xEBE3011C)) ^ v6 & 0xEBE3011C;
  v8 = ((2 * (v6 ^ 0x5DB7C8EA)) ^ 0x6CA993EC) & (v6 ^ 0x5DB7C8EA) ^ (2 * (v6 ^ 0x5DB7C8EA)) & a1;
  v9 = (v8 ^ 0x240000E0) & (4 * v7) ^ v7;
  v10 = ((4 * (v8 ^ 0x92544812)) ^ 0xD95327D8) & (v8 ^ 0x92544812) ^ (4 * (v8 ^ 0x92544812)) & (a1 - 2);
  v11 = (v10 ^ 0x905001C6) & (16 * v9) ^ v9;
  v12 = ((16 * (v10 ^ 0x2604C826)) ^ 0x654C9F60) & (v10 ^ 0x2604C826) ^ (16 * (v10 ^ 0x2604C826)) & (a1 - 6);
  v13 = v11 ^ a1 ^ (v12 ^ 0x24448900) & (v11 << 8);
  v14 = v6 ^ (2
            * ((v13 << 16) & 0x36540000 ^ v13 ^ ((v13 << 16) ^ 0x49F60000) & (((v12 ^ 0x92104096) << 8) & 0x36540000 ^ 0x22140000 ^ (((v12 ^ 0x92104096) << 8) ^ 0x54C90000) & (v12 ^ 0x92104096))));
  v15 = (((v14 ^ 0x2A9009F7) - 543100768) ^ ((v14 ^ 0xCC5363B7) + 962829024) ^ ((v14 ^ 0x6121F8B0) - 1810824743))
      - 962936328;
  v17 = v15 > 0x396D2D90 && v15 < a5;
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((v17 | (2 * v17)) ^ LODWORD(STACK[0x1898]))))();
}

uint64_t sub_10034EAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;
  int v7;
  int v8;

  LODWORD(STACK[0x1898]) = LODWORD(STACK[0x1860]) - LODWORD(STACK[0x161C]) - 1977866947;
  LODWORD(STACK[0x1860]) = LODWORD(STACK[0x17C0]) ^ v7;
  LODWORD(STACK[0x1508]) = LODWORD(STACK[0x17BC]) ^ LODWORD(STACK[0x1638]);
  LODWORD(STACK[0x161C]) = 2 * LODWORD(STACK[0x1560]);
  v8 = LODWORD(STACK[0x1530]) ^ LODWORD(STACK[0xE28]);
  LODWORD(STACK[0x1780]) -= LODWORD(STACK[0x1650]);
  LODWORD(STACK[0x17BC]) = LODWORD(STACK[0x1838]) ^ 0x49587CC3;
  LODWORD(STACK[0x1528]) = v8;
  LODWORD(STACK[0x1650]) = v8 ^ 0x7E8356B4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * v6)
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 2605775048);
}

uint64_t sub_10034EB84(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  _BOOL4 v57;

  LODWORD(STACK[0x1838]) = v7 ^ 0x12FA;
  v14 = (v7 ^ 0x12FA)
      - 1394651922
      + (((v13 ^ 0x912E933E) + 1859218626) ^ ((v13 ^ 0xA1C554C0) + 1580903232) ^ ((v13 ^ 0xBDC65399) + 1111075943));
  v15 = (v14 ^ 0xE40C9630) & (2 * (v14 & 0xE04E273A)) ^ v14 & 0xE04E273A;
  v16 = ((2 * (v14 ^ 0xE488D244)) ^ 0x98DEAFC) & (v14 ^ 0xE488D244) ^ (2 * (v14 ^ 0xE488D244)) & v12;
  v17 = v16 ^ 0x4421502;
  v18 = (v16 ^ 0xA078) & (4 * v15) ^ v15;
  v19 = ((4 * v17) ^ 0x131BD5F8) & v17 ^ (4 * v17) & (v12 - 2);
  v20 = (v19 ^ 0x2D566) & (16 * v18) ^ v18;
  v21 = ((16 * (v19 ^ 0x4C42006)) ^ 0x4C6F57E0) & (v19 ^ 0x4C42006) ^ (16 * (v19 ^ 0x4C42006)) & (v12 - 14);
  v22 = v20 ^ v12 ^ (v21 ^ 0x4465500) & (v20 << 8);
  v23 = v14 ^ (2
             * ((v22 << 16) & 0x4C60000 ^ v22 ^ ((v22 << 16) ^ 0x757E0000) & (((v21 ^ 0x80A01E) << 8) & 0x4C60000 ^ (((v21 ^ 0x80A01E) << 8) ^ 0x46F50000) & (v21 ^ 0x80A01E) ^ 0x20000)));
  v24 = 385 * (((v23 ^ 0x2051119B) - 1278429242) ^ ((v23 ^ 0xCAA2193B) + 1497349990) ^ ((v23 ^ 0xBBCC566) - 1742642375))
      - 860881239;
  v25 = (v24 ^ 0x109C38BE) & (2 * (v24 & 0x84DC303E)) ^ v24 & 0x84DC303E;
  v26 = ((2 * (v24 ^ 0x1934588A)) ^ 0x3BD0D168) & (v24 ^ 0x1934588A) ^ (2 * (v24 ^ 0x1934588A)) & v10;
  v27 = v26 ^ 0x84282894;
  v28 = (v26 ^ 0x11C04020) & (4 * v25) ^ v25;
  v29 = ((4 * v27) ^ 0x77A1A2D0) & v27 ^ (4 * v27) & v10;
  v30 = (v29 ^ 0x15A02080) & (16 * v28) ^ v28;
  v31 = ((16 * (v29 ^ 0x88484824)) ^ 0xDE868B40) & (v29 ^ 0x88484824) ^ (16 * (v29 ^ 0x88484824)) & (v10 - 4);
  v32 = v30 ^ v10 ^ (v31 ^ 0x9C800800) & (v30 << 8);
  v33 = v24 ^ (2
             * ((v32 << 16) & 0x1DE80000 ^ v32 ^ ((v32 << 16) ^ 0x68B40000) & (((v31 ^ 0x16860B4) << 8) & 0x1DE80000 ^ 0x15800000 ^ (((v31 ^ 0x16860B4) << 8) ^ 0x68680000) & (v31 ^ 0x16860B4)))) ^ 0x23617531;
  v34 = 0x322E42A57083BALL
      * (((v33 ^ 0x788250F682BEEBDELL) - 0x788250F682BEEBDELL) ^ ((v33 ^ 0x3FAB542DE8AFE1FELL) - 0x3FAB542DE8AFE1FELL) ^ ((v33 ^ 0x472904DBE73C9E47) - 0x472904DBE73C9E47))
      + 0x2973047C2585CB26;
  v35 = (v34 ^ 0xA74BA80D961ABE39) & (2 * (v34 & 0xC4522D4E1098BCB0)) ^ v34 & 0xC4522D4E1098BCB0;
  v36 = ((2 * (v34 ^ 0xAFEFEA81B70AB719)) ^ 0xD77B8F9F4F241752) & (v34 ^ 0xAFEFEA81B70AB719) ^ (2 * (v34 ^ 0xAFEFEA81B70AB719)) & v9;
  v37 = v36 ^ 0x28844040A09208A9;
  v38 = (v36 ^ 0x319870806000300) & (4 * v35) ^ v35;
  v39 = ((4 * v37) ^ 0xAEF71F3E9E482EA4) & v37 ^ (4 * v37) & v9;
  v40 = (v39 ^ 0x2AB5070E86000AA0) & (16 * v38) ^ v38;
  v41 = ((16 * (v39 ^ 0x4108C0C121920109)) ^ 0xBBDC7CFA7920BA90) & (v39 ^ 0x4108C0C121920109) ^ (16 * (v39 ^ 0x4108C0C121920109)) & (v9 - 8);
  v42 = (((v41 ^ 0x4021830586920129) << 8) ^ 0xBDC7CFA7920BA900) & (v41 ^ 0x4021830586920129) ^ ((v41 ^ 0x4021830586920129) << 8) & (v9 - 168);
  v43 = (v41 ^ 0x2B9C44CA21000A00) & (v40 << 8) ^ v40 ^ (v9 + 1) ^ (v42 ^ 0x2985C78782020000) & (((v41 ^ 0x2B9C44CA21000A00) & (v40 << 8) ^ v40) << 16);
  v44 = v34 ^ (2
             * ((v43 << 32) & 0x6BBDC7CF00000000 ^ v43 ^ ((v43 << 32) ^ 0x27920BA900000000) & (((v42 ^ 0x42380048259002A9) << 16) & 0x6BBDC7CF00000000 ^ 0x2830404D00000000 ^ (((v42 ^ 0x42380048259002A9) << 16) ^ 0x47CFA79200000000) & (v42 ^ 0x42380048259002A9))));
  v45 = ((v44 ^ 0xB8FB362F2B69F855) - 0x7E9E775B604579ECLL) ^ ((v44 ^ 0xD6DF76BF2B652709) - 0x10BA37CB6049A6B0);
  LODWORD(v44) = __CFADD__(1306 * (v45 ^ ((v44 ^ 0x3A2DE5535FB074BELL) + 0x3B75BD8EB630AF9)), 0xFF86CDFEE778143ELL)
               + (((v45 ^ ((v44 ^ 0x3A2DE5535FB074BELL) + 0x3B75BD8EB630AF9)) * (unsigned __int128)0x51AuLL) >> 64)
               + 1306
               * ((__CFADD__(v44 ^ 0xB8FB362F2B69F855, 0x816188A49FBA8614) - 1) ^ (__CFADD__(v44 ^ 0xD6DF76BF2B652709, 0xEF45C8349FB65950)- 1) ^ (__CFADD__(v44 ^ 0x3A2DE5535FB074BELL, 0x3B75BD8EB630AF9)- 1))+ 69807425;
  LODWORD(v45) = ((2 * (v44 ^ 0x60862D61)) ^ 0x36A1F190) & (v44 ^ 0x60862D61) ^ (2 * (v44 ^ 0x60862D61)) & a7;
  v46 = v45 ^ 0x89500848;
  LODWORD(v41) = (v44 ^ 0xF3868521) & (2 * (v44 & 0xFBD6D5A9)) ^ v44 & 0xFBD6D5A9;
  LODWORD(v45) = (v45 ^ 0x1200F080) & (4 * v41) ^ v41;
  LODWORD(v41) = ((4 * v46) ^ 0x6D43E320) & v46 ^ (4 * v46) & a7;
  LODWORD(v42) = ((16 * (v41 ^ 0x921018C8)) ^ 0xB50F8C80) & (v41 ^ 0x921018C8) ^ (16 * (v41 ^ 0x921018C8)) & (a7 - 8);
  LODWORD(v45) = (v41 ^ 0x940E000) & (16 * v45) ^ v45 ^ a7 ^ (v42 ^ 0x91008800) & (((v41 ^ 0x940E000) & (16 * (_DWORD)v45) ^ v45) << 8);
  LODWORD(v42) = -1586244613
               * *((unsigned __int8 *)&STACK[0x2920]
                 + (v44 ^ (2
                                       * (((_DWORD)v45 << 16) & 0x1B500000 ^ v45 ^ (((_DWORD)v45 << 16) ^ 0x78C80000) & (((v42 ^ 0xA507048) << 8) & 0x1B500000 ^ 0xB000000 ^ (((v42 ^ 0xA507048) << 8) ^ 0x50F80000) & (v42 ^ 0xA507048)))) ^ 0xFDF72439));
  LODWORD(v44) = (v42 ^ a4) + (v13 ^ 0x8D2D9467) - (((v42 ^ a4) + (v13 ^ 0x8D2D9467)) >> 16);
  v47 = (((v13 ^ 0x77DEF327) - 2011099943) ^ ((v13 ^ 0x6A9AC16C) - 1788526956) ^ ((v13 ^ 0x9069A62C) + 1872124372))
      - 1385894274;
  v48 = (v47 ^ 0xDF8831C9) & (2 * (v47 & 0xDFC8A5EA)) ^ v47 & 0xDFC8A5EA;
  LODWORD(v41) = ((2 * (v47 ^ 0x581831D9)) ^ 0xFA12866) & (v47 ^ 0x581831D9) ^ (2 * (v47 ^ 0x581831D9)) & (v8 + 2);
  v49 = ((4 * (v41 ^ 0x80509411)) ^ 0x1F4250CC) & (v41 ^ 0x80509411) ^ (4 * (v41 ^ 0x80509411)) & v8;
  v50 = (v49 ^ 0x7401000) & (16 * ((v41 ^ 0x7000020) & (4 * v48) ^ v48)) ^ (v41 ^ 0x7000020) & (4 * v48) ^ v48;
  v51 = ((16 * (v49 ^ 0x80908433)) ^ 0x7D094330) & (v49 ^ 0x80908433) ^ (16 * (v49 ^ 0x80908433)) & v8;
  v52 = v50 ^ (v8 + 3) ^ (v51 ^ 0x5000003) & (v50 << 8);
  v53 = ((v44 + (v44 >> 8) + 1623001240) ^ v42)
      + (v13 ^ 0x8D2D9467)
      - (((((_DWORD)v44 + (v44 >> 8) + 1623001240) ^ v42) + (v13 ^ 0x8D2D9467)) >> 16)
      + (((((_DWORD)v44 + (v44 >> 8) + 1623001240) ^ v42)
        + (v13 ^ 0x8D2D9467)
        - (((((_DWORD)v44 + (v44 >> 8) + 1623001240) ^ v42) + (v13 ^ 0x8D2D9467)) >> 16)) >> 8);
  v54 = v47 ^ (2
             * ((v52 << 16) & v11 ^ v52 ^ ((v52 << 16) ^ 0x14330000) & (((v51 ^ 0x82D09403) << 8) & v11 ^ 0x7400000 ^ (((v51 ^ 0x82D09403) << 8) ^ 0x50940000) & (v51 ^ 0x82D09403))));
  v55 = (((v54 ^ 0x38EF5C9D) - 1837843830) ^ ((v54 ^ 0xD3570DED) + 2043472890) ^ ((v54 ^ 0x33F1DCFC) - 1721091351))
      + 1450502498;
  v57 = v55 <= 0xC94754FA || v55 >= (~(((103 - v53) & 0xEC) + ((v53 + 1623001240) & 0xEC)) & 0xFCu) - 918072069;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((30866 * v57) ^ v7)) - 12))();
}

uint64_t sub_10034F730(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  int v97;
  uint64_t (*v98)(uint64_t);

  v5 = LODWORD(STACK[0x1790]) ^ 0x93CF3039;
  LODWORD(STACK[0x1638]) = LODWORD(STACK[0x1898]) ^ LODWORD(STACK[0x16D8]);
  LODWORD(STACK[0x1400]) = LODWORD(STACK[0x1758]) - LODWORD(STACK[0x1578]);
  LODWORD(STACK[0x1898]) = LODWORD(STACK[0x15CC]) ^ LODWORD(STACK[0x161C]);
  LODWORD(STACK[0x1758]) = LODWORD(STACK[0x14F0]) - LODWORD(STACK[0x14E4]);
  LODWORD(STACK[0x16D8]) = LODWORD(STACK[0x16C0]) ^ 0x1FBF06F5;
  LODWORD(STACK[0x16C0]) = LODWORD(STACK[0x17D8]) ^ LODWORD(STACK[0x1678]);
  v6 = ((a1 - 746547286 - ((a1 - 746547286) >> 10)) >> (((7 - a1) | a1) & 6))
     + a1
     - 746547286
     - ((a1 - 746547286) >> 10);
  v7 = ((v6 + 187210314) ^ 0x955C6742) & (2 * ((v6 + 187210314) & 0x86597763)) ^ (v6 + 187210314) & 0x86597763;
  v8 = ((2 * ((v6 + 187210314) ^ 0x91FC6DC2)) ^ 0x2F4A3542) & ((v6 + 187210314) ^ 0x91FC6DC2) ^ (2
                                                                                               * ((v6 + 187210314) ^ 0x91FC6DC2)) & 0x17A51AA0;
  v9 = v8 ^ 0x10A50AA1;
  v10 = (v8 ^ 0x3001021) & (4 * v7) ^ v7;
  v11 = ((4 * v9) ^ 0x5E946A84) & v9 ^ (4 * v9) & 0x17A51AA0;
  v12 = v10 ^ 0x17A51AA1 ^ (v11 ^ 0x16840A80) & (16 * v10);
  v13 = (16 * (v11 ^ 0x1211021)) & 0x17A51AA0 ^ 0x5A410A1 ^ ((16 * (v11 ^ 0x1211021)) ^ 0x7A51AA10) & (v11 ^ 0x1211021);
  v14 = (v12 << 8) & 0x17A51A00 ^ v12 ^ ((v12 << 8) ^ 0xA51AA100) & v13;
  v15 = (v6 + 187210314) ^ (2
                          * ((v14 << 16) & 0x17A50000 ^ v14 ^ ((v14 << 16) ^ 0x1AA10000) & ((v13 << 8) & 0x17A50000 ^ 0x12A50000 ^ ((v13 << 8) ^ 0x251A0000) & v13)));
  v16 = (((v15 ^ 0xF97F91EC) + 234666070) ^ ((v15 ^ 0x5DCC3A12) - 1454435412) ^ ((v15 ^ 0x22E2E9DF) - 698236825))
      + 442181838
      + ((((v15 >> 12) ^ 0x69C63E56) + 454832347) ^ (((v15 >> 12) ^ 0x3B84FCFD) + 1230959218) ^ (((v15 >> 12) ^ 0x524AA7BF)
                                                                                               + 546351412));
  v17 = v16 + (v16 >> 7);
  v18 = (v17 ^ 0x5F06CFFD) - ((v17 ^ 0x5F06CFFD) >> 10) - (((v17 ^ 0x5F06CFFD) - ((v17 ^ 0x5F06CFFD) >> 10)) >> 2);
  v19 = v18 + 430369791 + ((v18 + 430369791) >> 9) - ((v18 + 430369791 + ((v18 + 430369791) >> 9)) >> 8);
  v20 = (v19 ^ 0xA35ACE30) - ((v19 ^ 0xA35ACE30) >> 12) + (((v19 ^ 0xA35ACE30) - ((v19 ^ 0xA35ACE30) >> 12)) >> 8);
  v21 = v20 + 1765886704 + ((v20 + 1765886704) >> 14) - ((v20 + 1765886704 + ((v20 + 1765886704) >> 14)) >> 2);
  v22 = v21 - 570332459 - ((v21 - 570332459) >> 11) - ((v21 - 570332459 - ((v21 - 570332459) >> 11)) >> 1);
  v23 = STACK[0x1894];
  v24 = v3 & (4 * v6) ^ v6 ^ ((v3 & (4 * (v22 ^ v19)) ^ v22)
                            - 1926392729
                            - 2 * ((v3 & (4 * (v22 ^ v19)) ^ v22) & STACK[0x1894] ^ v22 & 8));
  v25 = (v24 ^ 0x8D2D9467) - 1926392729 - 2 * ((v24 ^ 0x8D2D9467) & 0xD2D947F ^ v24 & 0x18);
  v26 = STACK[0x144C];
  v27 = (v22 ^ 0x7C4DB57E) + ((v22 ^ 0x7C4DB57E) >> 12);
  v28 = v27 >> 8;
  v29 = (v27 >> 8) + v27;
  v30 = v29 + 1680287453 - ((v29 + 1680287453) >> 9) - ((v29 + 1680287453 - ((v29 + 1680287453) >> 9)) >> 5);
  v31 = STACK[0x14B8];
  v32 = ((LODWORD(STACK[0x144C]) ^ LODWORD(STACK[0x1778]))
       - 1926392729
       - ((2 * (LODWORD(STACK[0x144C]) ^ LODWORD(STACK[0x1778]))) & 0x1A5B28CE)) ^ STACK[0x14B8];
  v33 = v30 ^ v18 ^ (4 * (v30 & ((v28 & 0xBDEB9C ^ 0x26BDEB9C) + (v28 & 0xBDEB9C)) ^ (v21 ^ v18) & 0x26BDEB9C));
  v34 = v3 & (4 * v32) ^ v32;
  v35 = STACK[0x1610];
  v36 = ((v35 ^ LODWORD(STACK[0x13B8])) - 1926392729 - ((2 * (v35 ^ LODWORD(STACK[0x13B8]))) & 0x1A5B28CE)) ^ v5;
  v37 = v3 & (4
            * (v17 ^ LODWORD(STACK[0x13B8]) ^ v20 ^ ((v29 ^ v36) + 221090935 - ((2 * (v29 ^ v36)) & 0x1A5B28CE) - 16))) ^ v17;
  v38 = v2 ^ v36 ^ v20 ^ v29 ^ (v37 - 1926392729 - ((2 * v37) & 0x1A5B28CE));
  v39 = (v38 - 1926392729 - ((2 * v38) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1850]);
  v40 = (v39 - 1926392729 - ((2 * v39) & 0x1A5B28CE)) ^ LODWORD(STACK[0x13B8]);
  LODWORD(STACK[0x161C]) = v5;
  v41 = (v40 - 1926392729 - ((2 * v40) & 0x1A5B28CE)) ^ v5;
  v42 = (v35 & 0xBBBA5E2 ^ 0x13B8040) + (v35 & 0x9B80E2 ^ 0x54C458AB) - ((v35 & 0xBBBA5E2 ^ 0x13B8040) & 0x9B80E2);
  v43 = __ROR4__(v34, 12);
  v44 = ((v41 ^ v3 & (4 * (LODWORD(STACK[0x10DC]) ^ LODWORD(STACK[0x1510]))))
       - 1926392729
       - ((2 * (v41 ^ v3 & (4 * (LODWORD(STACK[0x10DC]) ^ LODWORD(STACK[0x1510]))))) & 0x1A5B28CE)) ^ LODWORD(STACK[0x10DC]);
  v45 = (v44 - 1926392728 + ~((2 * v44) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1510]);
  v46 = (v45 - 1926392729 - ((2 * v45) & 0x1A5B28CE)) ^ LODWORD(STACK[0x17B0]);
  v47 = v21 ^ v1 ^ (v33 - 1926392729 - ((2 * v33) & 0x1A5B28CE)) ^ v41 ^ (v46 - 1926392729 - ((2 * v46) & 0x1A5B28CE));
  v48 = (*((_BYTE *)&STACK[0x2920]
                          + ((434928695
                            * ((((v42 & 0xB032A2E ^ 0x8B026237) + (v42 & 0x74FC85C0 ^ 0x10C880C1) + 536870910) ^ 0x7076E3E)
                             + ((328415095
                               - (v35 & 0xBBBA5E2 ^ 0x80D9583 | 0x53933777)
                               + (v35 & 0xBBBA5E2 ^ 0x80D9583 | 0xAC6CC888)) ^ 0x6F37C8B))) & 0x17E565E4))
                        - 90)
      % (((v43 & 0x1DB5C837 ^ 0x1DB5C837) + (v43 & 0x1DB5C837)) & 0x20000058u)
      + 1512909537;
  v49 = (v48 & 0x2D | (2 * (v48 & 1))) ^ ((2 * (v48 & 0x2D)) | 0x1000) & (v48 ^ 0x6154DAAE);
  v50 = (2 * (v48 ^ 0x6154DAAE)) & 0x44820282 ^ 0x44820281 ^ ((2 * (v48 ^ 0x6154DAAE)) ^ 0x9080106) & (v48 ^ 0x6154DAAE);
  v51 = ((4 * v49) | 0x2000) & v50 ^ 0xC4860A83 ^ ((4 * v49) & 0x44860280 | v49);
  v52 = (4 * v50) & 0xC4860280 ^ 0xC4860083 ^ ((4 * v50) ^ 0x12180A0C) & v50;
  v53 = (16 * v51) & 0xC4860280 ^ v51 ^ ((16 * v51) ^ 0x48602830) & v52;
  v54 = (16 * v52) & 0xC4860280 ^ 0x84860283 ^ ((16 * v52) ^ 0x48602830) & v52;
  v55 = v53 ^ (v53 << 8) & 0xC4860200 ^ ((v53 << 8) ^ 0x86028300) & v54 ^ 0xC4020200;
  v56 = v48 ^ (2
             * ((v55 << 16) & 0x44860000 ^ v55 ^ ((v55 << 16) ^ 0x2830000) & ((v54 << 8) & 0xC4860000 ^ 0x40840000 ^ ((v54 << 8) ^ 0x6020000) & v54)));
  v57 = 385 * (((v56 ^ 0x71510BCE) + 777633150) ^ ((v56 ^ 0x3C8FCFAD) + 1669822751) ^ ((v56 ^ 0x60041948) + 1057796092))
      - 1904331559;
  v58 = (v57 ^ 0xCB89F90F) & (2 * (v57 & 0xC30DFA0E)) ^ v57 & 0xC30DFA0E;
  v59 = ((2 * (v57 ^ 0x4D98DD07)) ^ 0x1D2A4E12) & (v57 ^ 0x4D98DD07) ^ (2 * (v57 ^ 0x4D98DD07)) & 0x8E952708;
  v60 = v59 ^ 0x82952109;
  v61 = (v59 ^ 0x8E800101) & (4 * v58) ^ v58;
  v62 = ((4 * v60) ^ 0x3A549C24) & v60 ^ (4 * v60) & 0x8E952708;
  v63 = (v62 ^ 0xA140409) & (16 * v61) ^ v61;
  v64 = ((16 * (v62 ^ 0x84812309)) ^ 0xE9527090) & (v62 ^ 0x84812309) ^ (16 * (v62 ^ 0x84812309)) & 0x8E952700;
  v65 = v63 ^ 0x8E952709 ^ (v64 ^ 0x88102000) & (v63 << 8);
  v66 = v57 ^ (2
             * ((v65 << 16) & 0xE950000 ^ v65 ^ ((v65 << 16) ^ 0x27090000) & (((v64 ^ 0x6850709) << 8) & 0x8E950000 ^ 0xA900000 ^ (((v64 ^ 0x6850709) << 8) ^ 0x15270000) & (v64 ^ 0x6850709)))) ^ 0x5F08207B;
  v67 = 0x322E42A57083BALL
      * (((v66 ^ 0x77868CF14AFD4261) - 0x77868CF14AFD4261) ^ ((v66 ^ 0x52D2AC5C484B76D2) - 0x52D2AC5C484B76D2) ^ ((v66 ^ 0x255420AD8F9BA0D4) - 0x255420AD8F9BA0D4))
      + 0x4B54A583FA742176;
  v68 = (v67 ^ 0xA2766B76B3A94643) & (2 * (v67 & 0xA2708C463BAA6660)) ^ v67 & 0xA2708C463BAA6660;
  v69 = ((2 * (v67 ^ 0xA2967BF2D4A90E43)) ^ 0x1CDEF69DE06D046) & (v67 ^ 0xA2967BF2D4A90E43) ^ (2 * (v67 ^ 0xA2967BF2D4A90E43)) & 0xE6F7B4EF036822;
  v70 = v69 ^ 0x22109421012821;
  v71 = (v69 ^ 0xC46320CE020000) & (4 * v68) ^ v68;
  v72 = ((4 * v70) ^ 0x39BDED3BC0DA08CLL) & v70 ^ (4 * v70) & 0xE6F7B4EF036820;
  v73 = (v72 ^ 0x82D690AC012000) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x64212443024823)) ^ 0xE6F7B4EF0368230) & (v72 ^ 0x64212443024823) ^ (16
                                                                                                * (v72 ^ 0x64212443024823)) & 0xE6F7B4EF036820;
  v75 = (v74 ^ 0x667304E0020000) & (v73 << 8) ^ v73;
  v76 = (((v74 ^ 0x8084B00F016803) << 8) ^ 0xE6F7B4EF03682300) & (v74 ^ 0x8084B00F016803) ^ ((v74 ^ 0x8084B00F016803) << 8) & 0xE6F7B4EF036800;
  v77 = v75 ^ 0xE6F7B4EF036823 ^ (v76 ^ 0xE6B4A403000000) & (v75 << 16);
  v78 = v67 ^ (2
             * ((v77 << 32) & 0xE6F7B400000000 ^ v77 ^ ((v77 << 32) ^ 0x6F03682300000000) & (((v76 ^ 0x4310EC034823) << 16) & 0xE6F7B400000000 ^ 0x4210B400000000 ^ (((v76 ^ 0x4310EC034823) << 16) ^ 0x77B4EF0300000000) & (v76 ^ 0x4310EC034823))));
  v79 = ((v78 ^ 0xBC556EA43067D7A5) + 0x315B52CADC55D64ALL) ^ ((v78 ^ 0x2A1B71A9E6AAA749) - 0x58EAB238F567595ALL);
  LODWORD(v78) = __CFADD__(1306 * (v79 ^ ((v78 ^ 0x35F7BC623361C6CALL) - 0x47067FF320AC38D9)), 0xAB3ED4B4EC4A5E62)
               + (((v79 ^ ((v78 ^ 0x35F7BC623361C6CALL) - 0x47067FF320AC38D9)) * (unsigned __int128)0x51AuLL) >> 64)
               + 1306
               * ((__CFADD__(v78 ^ 0xBC556EA43067D7A5, 0x315B52CADC55D64ALL) - 1) ^ (__CFADD__(v78 ^ 0x2A1B71A9E6AAA749, 0xA7154DC70A98A6A6)- 1) ^ (__CFADD__(v78 ^ 0x35F7BC623361C6CALL, 0xB8F9800CDF53C727)- 1))+ 1200497112;
  LODWORD(v70) = (v78 ^ 0x3371D21A) & (2 * (v78 & 0xB871E253)) ^ v78 & 0xB871E253;
  LODWORD(v79) = ((2 * (v78 ^ 0x7313D23A)) ^ 0x96C460D2) & (v78 ^ 0x7313D23A) ^ (2 * (v78 ^ 0x7313D23A)) & 0xCB623068;
  v80 = v79 ^ 0x49221029;
  LODWORD(v79) = (v79 ^ 0x82400040) & (4 * v70) ^ v70;
  LODWORD(v70) = ((4 * v80) ^ 0x2D88C1A4) & v80 ^ (4 * v80) & 0xCB623068;
  LODWORD(v79) = (v70 ^ 0x9000029) & (16 * v79) ^ v79;
  LODWORD(v70) = ((16 * (v70 ^ 0xC2623049)) ^ 0xB6230690) & (v70 ^ 0xC2623049) ^ (16 * (v70 ^ 0xC2623049)) & 0xCB623060;
  LODWORD(v79) = v79 ^ 0xCB623069 ^ (v70 ^ 0x82220069) & ((_DWORD)v79 << 8);
  LODWORD(v78) = ((*((_BYTE *)&STACK[0x2920]
                   + (v78 ^ (2
                                         * (((_DWORD)v79 << 16) & 0x4B620000 ^ v79 ^ (((_DWORD)v79 << 16) ^ 0x30690000) & (((v70 ^ 0x49403069) << 8) & 0x4B620000 ^ 0x9420000 ^ (((v70 ^ 0x49403069) << 8) ^ 0x62300000) & (v70 ^ 0x49403069)))) ^ 0x2E758281))
                 + 11) & 0xF)
               + 1919839065;
  LODWORD(v70) = (2 * (v78 & 0x35)) & 0xE7 ^ v78 & 0x35 ^ ((2 * (v78 & 0x35)) | 0x200) & (v78 ^ 0x23EF19C7);
  LODWORD(v79) = (2 * (v78 ^ 0x23EF19C7)) & 0x472 ^ 0x212 ^ ((2 * (v78 ^ 0x23EF19C7)) ^ 0x508110A4) & (v78 ^ 0x23EF19C7);
  LODWORD(v70) = (4 * v70) & 0x2E7E8E70 ^ v70 ^ ((4 * v70) | 0x1400) & v79;
  LODWORD(v79) = (4 * v79) & 0xAE7E8E70 ^ 0x6048632 ^ ((4 * v79) ^ 0x118031C8) & v79;
  LODWORD(v70) = (16 * v70) & 0x2E7E8E70 ^ v70 ^ ((16 * v70) ^ 0x1000) & v79;
  LODWORD(v79) = (16 * v79) & 0xAE7E8E70 ^ 0x8160852 ^ ((16 * v79) ^ 0xE7E8E720) & v79;
  LODWORD(v70) = v70 ^ 0xAE7E8F72 ^ ((_DWORD)v70 << 8) & 0x2E7E8E00 ^ (((_DWORD)v70 << 8) ^ 0x10000) & v79;
  LODWORD(v78) = v78 ^ (2
                      * (((_DWORD)v70 << 16) & 0x2E7E0000 ^ v70 ^ (((_DWORD)v70 << 16) ^ 0xE720000) & (((_DWORD)v79 << 8) & 0x2E7E0000 ^ (((_DWORD)v79 << 8) ^ 0x7E8E0000) & v79 ^ 0x700000)));
  LODWORD(v78) = 385
               * (((v78 ^ 0xCC315372) + 1936438204) ^ ((v78 ^ 0x5B5C4891) - 469325735) ^ ((v78 ^ 0x5AE590B2) - 440438660))
               + 1663134018;
  LODWORD(v70) = (v78 ^ 0xCF4A85A0) & (2 * (v78 & 0xEE6AC5A5)) ^ v78 & 0xEE6AC5A5;
  LODWORD(v79) = ((2 * (v78 ^ 0x9F4F0EA8)) ^ 0xE24B961A) & (v78 ^ 0x9F4F0EA8) ^ (2 * (v78 ^ 0x9F4F0EA8)) & 0x7125CB0C;
  v81 = v79 ^ 0x11244905;
  LODWORD(v79) = (v79 ^ 0x60014209) & (4 * v70) ^ v70;
  LODWORD(v70) = ((4 * v81) ^ 0xC4972C34) & v81 ^ (4 * v81) & 0x7125CB0C;
  LODWORD(v79) = (v70 ^ 0x40050809) & (16 * v79) ^ v79;
  LODWORD(v70) = ((16 * (v70 ^ 0x3120C309)) ^ 0x125CB0D0) & (v70 ^ 0x3120C309) ^ (16 * (v70 ^ 0x3120C309)) & 0x7125CB00;
  LODWORD(v79) = v79 ^ 0x7125CB0D ^ (v70 ^ 0x1004800D) & ((_DWORD)v79 << 8);
  v82 = v78 ^ (2
                           * (((_DWORD)v79 << 16) & 0x71250000 ^ v79 ^ (((_DWORD)v79 << 16) ^ 0x4B0D0000) & (((v70 ^ 0x61214B0D) << 8) & 0x71250000 ^ 0x50240000 ^ (((v70 ^ 0x61214B0D) << 8) ^ 0x25CB0000) & (v70 ^ 0x61214B0D)))) ^ 0x306C7D8;
  v83 = 0x322E42A57083BALL
      * (((v82 ^ 0x260B172EEB92DF36) - 0x260B172EEB92DF36) ^ ((v82 ^ 0x9A0B034E17E1C43DLL) + 0x65F4FCB1E81E3BC3) ^ ((v82 ^ 0xBC001460715E8F6CLL) + 0x43FFEB9F8EA17094))
      + 0x6FEADBEACAEF99BCLL;
  v84 = (v83 ^ 0x7DD2459E628ECD90) & (2 * (v83 & 0x7DDA55DF6B2EEE1ALL)) ^ v83 & 0x7DDA55DF6B2EEE1ALL;
  v85 = ((2 * (v83 ^ 0xD752CD32E2D6C190)) ^ 0x551131DB13F05F14) & (v83 ^ 0xD752CD32E2D6C190) ^ (2 * (v83 ^ 0xD752CD32E2D6C190)) & 0xAA8898ED89F82F88;
  v86 = v85 ^ 0xAA8888248808208ALL;
  v87 = (v85 ^ 0x10C901F00800) & (4 * v84) ^ v84;
  v88 = ((4 * v86) ^ 0xAA2263B627E0BE28) & v86 ^ (4 * v86) & 0xAA8898ED89F82F88;
  v89 = (v88 ^ 0xAA0000A401E02E00) & (16 * v87) ^ v87;
  v90 = ((16 * (v88 ^ 0x88984988180182)) ^ 0xA8898ED89F82F8A0) & (v88 ^ 0x88984988180182) ^ (16
                                                                                                 * (v88 ^ 0x88984988180182)) & 0xAA8898ED89F82F80;
  v91 = (v90 ^ 0xA88888C889802800) & (v89 << 8) ^ v89;
  v92 = (((v90 ^ 0x20010250078070ALL) << 8) ^ 0x8898ED89F82F8A00) & (v90 ^ 0x20010250078070ALL) ^ ((v90 ^ 0x20010250078070ALL) << 8) & 0xAA8898ED89F82F00;
  v93 = v91 ^ 0xAA8898ED89F82F8ALL ^ (v92 ^ 0x8888888988280000) & (v91 << 16);
  v94 = v83 ^ (2
             * ((v93 << 32) & 0x2A8898ED00000000 ^ v93 ^ ((v93 << 32) ^ 0x9F82F8A00000000) & (((v92 ^ 0x2200106401D0258ALL) << 16) & 0x2A8898ED00000000 ^ 0x2200100500000000 ^ (((v92 ^ 0x2200106401D0258ALL) << 16) ^ 0x18ED89F800000000) & (v92 ^ 0x2200106401D0258ALL))));
  v95 = ((v94 ^ 0xB6BF34BAD64E1716) + 0x39C24D824955DC4) ^ ((v94 ^ 0xED9B54885C06866ALL) + 0x58B844EAAEDDCCC0);
  LODWORD(v94) = __CFADD__(1306 * (v95 ^ ((v94 ^ 0x62FF1526F2962072) - 0x2823FABBFFB29558)), 0xD4CA6143DD791FA8)
               + (((v95 ^ ((v94 ^ 0x62FF1526F2962072) - 0x2823FABBFFB29558)) * (unsigned __int128)0x51AuLL) >> 64)
               + 1306
               * ((__CFADD__(v94 ^ 0xB6BF34BAD64E1716, 0x39C24D824955DC4) - 1) ^ (__CFADD__(v94 ^ 0xED9B54885C06866ALL, 0x58B844EAAEDDCCC0)- 1) ^ (__CFADD__(v94 ^ 0x62FF1526F2962072, 0xD7DC0544004D6AA8)- 1))+ 960900991;
  LODWORD(v92) = (v94 ^ 0xB4BDD2A2) & (2 * (v94 & 0xC6B9D2CB)) ^ v94 & 0xC6B9D2CB;
  LODWORD(v95) = ((2 * (v94 ^ 0x35AED730)) ^ 0xE62E0BF6) & (v94 ^ 0x35AED730) ^ (2 * (v94 ^ 0x35AED730)) & 0xF31705FA;
  LODWORD(v86) = v95 ^ 0x11110409;
  LODWORD(v95) = (v95 ^ 0x22060170) & (4 * v92) ^ v92;
  LODWORD(v92) = ((4 * v86) ^ 0xCC5C17EC) & v86 ^ (4 * v86) & 0xF31705F8;
  LODWORD(v95) = (v92 ^ 0xC01405E3) & (16 * v95) ^ v95;
  LODWORD(v92) = ((16 * (v92 ^ 0x33030013)) ^ 0x31705FB0) & (v92 ^ 0x33030013) ^ (16 * (v92 ^ 0x33030013)) & 0xF31705F0;
  LODWORD(v95) = v95 ^ 0xF31705FB ^ (v92 ^ 0x31100500) & ((_DWORD)v95 << 8);
  LOBYTE(v94) = *((_BYTE *)&STACK[0x2920]
                + (v94 ^ (2
                                      * (((_DWORD)v95 << 16) & 0x73170000 ^ v95 ^ (((_DWORD)v95 << 16) ^ 0x5FB0000) & (((v92 ^ 0xC207004B) << 8) & 0xF3170000 ^ 0x60120000 ^ (((v92 ^ 0xC207004B) << 8) ^ 0x17050000) & (v92 ^ 0xC207004B)))) ^ 0x22B1D93D));
  LODWORD(STACK[0x17B0]) = v41;
  LODWORD(STACK[0x17D8]) = (v47 ^ 0x8D2D9467) - 1926392729 - 2 * ((v47 ^ 0x8D2D9467) & v23 ^ v47 & 8);
  LODWORD(v94) = (((_BYTE)v94 + 6) & 0xF) + 2058780274;
  LODWORD(v86) = (2 * (v94 & 0x9C)) & 0x18 ^ v94 & 0x9C ^ (((2 * (v94 & 0x9C)) | 0x800) & (v94 ^ 0xD8319241) | 0x582347C0);
  LODWORD(v95) = (2 * (v94 ^ 0xD8319241)) & 0xDC ^ 0x245 ^ ((2 * (v94 ^ 0xD8319241)) ^ 0xA2802CBA) & (v94 ^ 0xD8319241);
  LODWORD(v86) = (4 * v86) & 0x5D7002D8 ^ v86 ^ ((4 * v86) ^ 0x20850F00) & v95;
  LODWORD(v95) = (4 * v95) & 0x5D7816DC ^ 0x8180489 ^ ((4 * v95) ^ 0x20804B74) & v95;
  LODWORD(v86) = (16 * v86) & 0x5D7816D0 ^ v86 ^ ((16 * v86) ^ 0x82351C00) & v95;
  LODWORD(v95) = (16 * v95) & 0x5D7816D0 ^ 0x878120D ^ ((16 * v95) ^ 0xD7816DD0) & v95;
  LODWORD(v86) = v86 ^ ((_DWORD)v86 << 8) & 0x5D781600 ^ (((_DWORD)v86 << 8) ^ 0x1345C000) & v95 ^ 0x542B531D;
  LODWORD(STACK[0x1578]) = LODWORD(STACK[0x1898]) ^ 0xFDCFD864;
  LODWORD(STACK[0x1678]) = LODWORD(STACK[0x15DC]) ^ 0xFD4FCD2B;
  LODWORD(STACK[0x16C0]) ^= 0xD777CE3D;
  LODWORD(v94) = v94 ^ (2
                      * (((_DWORD)v86 << 16) & 0x5D780000 ^ v86 ^ (((_DWORD)v86 << 16) ^ 0x16DD0000) & (((_DWORD)v95 << 8) & 0x5D780000 ^ 0x5680000 ^ (((_DWORD)v95 << 8) ^ 0x78160000) & v95)));
  LODWORD(v94) = 385
               * (((v94 ^ 0x9FF404C1) - 97532288) ^ ((v94 ^ 0x7E5D5884) + 461806139) ^ ((v94 ^ 0xF6A0F563) - 1820641314))
               + 1368141543;
  v96 = *((_BYTE *)&STACK[0x2920]
        + ((v94 % 0x51A - 1926392729 - ((2 * (v94 % 0x51A)) & 0x8CE)) ^ 0x8D2D9467))
      + 7;
  LODWORD(v95) = v3 & (4 * v26) ^ v34 ^ 0x10B60010 ^ ((((((2 * (((v41 & 0x121010 ^ 0x4FD417D3) - 1) ^ 0x4B1746D2)) & 0x8A20220)
                                                       - (((v41 & 0x121010 ^ 0x4FD417D3) - 1) ^ 0x4B1746D2)
                                                       - 1450250080) ^ 0xAD5FB1B0)
                                                     + (v41 & 0x121010)) | 0x50130328);
  LODWORD(v95) = (v95 - 1926392728 + ~((2 * v95) & 0x1A5B28CE)) ^ LODWORD(STACK[0x1688]);
  LODWORD(v95) = v19 ^ v4 ^ v25 ^ (v95 - 1926392729 - ((2 * v95) & 0x1A5B28CE));
  LODWORD(STACK[0x15DC]) = (v95 ^ 0x8D2D9467) & 0xD2D947F ^ v95 & 0x18;
  LODWORD(STACK[0x1688]) = (v95 ^ 0x8D2D9467) - 1926392729;
  LODWORD(STACK[0x1898]) = v31 ^ 0x88FE0260;
  if ((v96 & 0xE) != 0)
    v97 = v96 & 0xF;
  else
    v97 = 1;
  v98 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x18C0] + 8 * LODWORD(STACK[0x1838])) - 8);
  LODWORD(STACK[0x1850]) = v97 - 1;
  return v98(3764558142);
}

uint64_t sub_1003510A4(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;

  v6 = STACK[0x1838];
  v7 = (v5 ^ (((LODWORD(STACK[0x1838]) - 793) | 0x1A02) - 2041256525)) & (2 * (v5 & 0x56545FE1)) ^ v5 & 0x56545FE1;
  v8 = ((2 * (v5 ^ 0x8E5522AB)) ^ 0xB002FA94) & (v5 ^ 0x8E5522AB) ^ (2 * (v5 ^ 0x8E5522AB)) & 0x58017D4A;
  v9 = v8 ^ 0x4801054A;
  v10 = v7 ^ 0x58017D4A ^ (v8 ^ 0x10007842) & (4 * v7);
  v11 = ((4 * v9) ^ 0x6005F528) & v9 ^ (4 * v9) & 0x58017D48;
  v12 = v11 & 0xC31227B4 ^ v10 ^ (v11 ^ 0x40017502) & ((16 * v10) ^ 0x4305F314);
  v13 = ((16 * v11) ^ 0xC3057734) & (v11 ^ 0x40017502) ^ v11 & 0xC31227B4;
  v14 = ((v12 << 8) ^ 0xC24A6DB4) & (v13 ^ 0x4000254A);
  v15 = v13 & 0xC31227B4 ^ v12;
  v16 = ((v13 << 8) ^ 0xC33727B4) & (v13 ^ 0x4000254A) ^ v13 & 0xC31227B4;
  v17 = v5 ^ (2
            * (v15 ^ v14 ^ v16 & 0x431227B4 ^ (((v15 ^ v14) << 16) ^ 0xBE5827B5) & (v16 ^ 0x18010000) ^ (((v15 ^ v14) << 16) ^ 0xBE5827B5) & 0x58012500));
  v18 = 0x322E42A57083BALL
      * (((v17 ^ 0x6CFA0A0A0CB6AE24) - 0x6CFA0A0A67CDD536) ^ ((v17 ^ 0x9E38842452B58302) + 0x61C77BDBC63107F0) ^ ((v17 ^ 0xF2C28E2EB855C253) + 0xD3D71D12CD146BFLL))
      - 0x1C2CD8E5CC13E04;
  v19 = ((2 * (v18 ^ 0x55F1D6530DA89AE6)) ^ 0x74EC52173EEEBE78) & (v18 ^ 0x55F1D6530DA89AE6) ^ (2 * (v18 ^ 0x55F1D6530DA89AE6)) & v3;
  v20 = (v18 ^ 0xCFF7FE52089F91D2) & (2 * (v18 & 0xEF87FF5892DFC5DALL)) ^ v18 & 0xEF87FF5892DFC5DALL;
  v21 = v19 ^ 0x8A12290881114104;
  v22 = (v19 ^ 0x302400021E661E38) & (4 * v20) ^ v20;
  v23 = ((4 * v21) ^ 0xE9D8A42E7DDD7CF0) & v21 ^ (4 * v21) & v3;
  v24 = (v23 ^ 0xA850200A1D555C20) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x122609018222030CLL)) ^ 0xA76290B9F775F3C0) & (v23 ^ 0x122609018222030CLL) ^ (16 * (v23 ^ 0x122609018222030CLL)) & (v3 - 12);
  v26 = (v25 ^ 0xA262000997755300) & (v24 << 8) ^ v24;
  v27 = (((v25 ^ 0x1814290208020C3CLL) << 8) ^ 0x76290B9F775F3C00) & (v25 ^ 0x1814290208020C3CLL) ^ ((v25 ^ 0x1814290208020C3CLL) << 8) & (v3 - 60);
  v28 = v26 ^ v3 ^ (v27 ^ 0x3220090B17570000) & (v26 << 16);
  v29 = v18 ^ (2
             * ((v28 << 32) & 0x3A76290B00000000 ^ v28 ^ ((v28 << 32) ^ 0x1F775F3C00000000) & (((v27 ^ 0x885620008820433CLL) << 16) & 0x3A76290B00000000 ^ 0x1274200800000000 ^ (((v27 ^ 0x885620008820433CLL) << 16) ^ 0x290B9F7700000000) & (v27 ^ 0x885620008820433CLL))));
  v30 = ((v29 ^ 0x491C40B08C73651BLL) - 0x7F57D2B9B85D7129) ^ ((v29 ^ 0x24D8883E7EB1B6E2) - 0x12931A374A9FA2D0);
  LODWORD(v29) = __CFADD__(1306 * (v30 ^ ((v29 ^ 0xC24377D15EF3A85BLL) + 0xBF71A2795224397)), 0x9B9F4BC4105F24A0)
               + (((v30 ^ ((v29 ^ 0xC24377D15EF3A85BLL) + 0xBF71A2795224397)) * (unsigned __int128)0x51AuLL) >> 64)
               + 1306
               * ((__CFADD__(v29 ^ 0x491C40B08C73651BLL, 0x80A82D4647A28ED7) - 1) ^ (__CFADD__(v29 ^ 0x24D8883E7EB1B6E2, 0xED6CE5C8B5605D30)- 1) ^ (__CFADD__(v29 ^ 0xC24377D15EF3A85BLL, 0xBF71A2795224397)- 1))+ 100648646;
  LODWORD(v27) = (v29 ^ 0xF9ACBA00) & (2 * (v29 & 0xFA003C4A)) ^ v29 & 0xFA003C4A;
  LODWORD(v30) = ((2 * (v29 ^ 0xA9AC9A10)) ^ 0xA7594CB4) & (v29 ^ 0xA9AC9A10) ^ (2 * (v29 ^ 0xA9AC9A10)) & v4;
  LODWORD(v21) = v30 ^ 0x50A4A24A;
  LODWORD(v30) = (v30 ^ 0xA40012) & (4 * v27) ^ v27;
  LODWORD(v27) = ((4 * v21) ^ 0x4EB29968) & v21 ^ (4 * v21) & (v4 - 2);
  LODWORD(v21) = ((16 * (v27 ^ 0x110C2612)) ^ 0x3ACA65A0) & (v27 ^ 0x110C2612) ^ (16 * (v27 ^ 0x110C2612)) & (v4 - 10);
  LODWORD(v30) = (v27 ^ 0x42A08040) & (16 * v30) ^ v30 ^ v4 ^ (v21 ^ 0x1288245A) & (((v27 ^ 0x42A08040) & (16 * (_DWORD)v30) ^ v30) << 8);
  LODWORD(v29) = *((unsigned __int8 *)&STACK[0x2920]
                 + (v29 ^ (2
                                       * (((_DWORD)v30 << 16) & 0x53AC0000 ^ v30 ^ (((_DWORD)v30 << 16) ^ 0x265A0000) & (((v21 ^ 0x4124825A) << 8) & 0x53AC0000 ^ 0x53080000 ^ (((v21 ^ 0x4124825A) << 8) ^ 0x2CA60000) & (v21 ^ 0x4124825A)))) ^ 0x594970FE));
  LODWORD(v30) = -1586244613 * v29;
  LODWORD(v29) = (-1586244613 * v29 - 1926392729 - ((48736246 * v29) & 0x1A5B28CE)) ^ a1;
  LODWORD(v27) = (a3 + v29) >> 16;
  v31 = a3 + v29 - v27;
  LODWORD(v21) = a3 + 811500620 + (v31 >> 8) - v27;
  v32 = (2 * (v31 + (v31 >> 8))) & 0xFFFDD9AC ^ (v31 + (v31 >> 8));
  v33 = v21 + (v32 & 0x305E844C ^ 0x305E844C) + v29 + (v32 & 0x305E844C);
  v34 = a3 + (v33 ^ v30) - ((a3 + (v33 ^ v30)) >> 16);
  LODWORD(STACK[0x1898]) ^= 0x8D2D9467 ^ v32 ^ (v34 + (v34 >> 8)) ^ (((2 * (v34 + (v34 >> 8))) & 0xFFFDD9AC)
                                                                   - 1926392729
                                                                   - ((4 * (v34 + (v34 >> 8))) & 0x1A5B2048));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * ((26 * (LODWORD(STACK[0x1850]) == a3)) ^ v6)) - 8))();
}

uint64_t sub_100351934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x1138]) = LODWORD(STACK[0x15E0]) - LODWORD(STACK[0x160C]);
  LODWORD(STACK[0x1850]) = LODWORD(STACK[0x144C]) ^ STACK[0x14B8] ^ (LODWORD(STACK[0x1688]) - 2 * LODWORD(STACK[0x15DC]));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * a8) - 8))();
}

uint64_t sub_100351AA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;

  v13 = (a8 ^ 0x7D6E5402) + 385 * a7;
  v14 = (v13 ^ 0xC29401DA) & (2 * (v13 & 0x829629DA)) ^ v13 & 0x829629DA;
  v15 = ((2 * (v13 ^ 0xC290534A)) ^ 0x800CF520) & (v13 ^ 0xC290534A) ^ (2 * (v13 ^ 0xC290534A)) & v9;
  v16 = v15 ^ 0x40020A90;
  v17 = (v15 ^ 0x6000) & (4 * v14) ^ v14;
  v18 = ((4 * v16) ^ 0x19EA40) & v16 ^ (4 * v16) & v9;
  v19 = (v18 ^ 0x6A00) & (16 * v17) ^ v17;
  v20 = ((16 * (v18 ^ 0x40061090)) ^ 0x67A900) & (v18 ^ 0x40061090) ^ (16 * (v18 ^ 0x40061090)) & v9;
  v21 = v19 ^ v9 ^ (v20 ^ 0x62890) & (v19 << 8);
  v22 = v13 ^ (2
             * ((v21 << 16) & 0x40060000 ^ v21 ^ ((v21 << 16) ^ 0x7A900000) & (((v20 ^ 0x40005290) << 8) & 0x40060000 ^ 0x40040000 ^ (((v20 ^ 0x40005290) << 8) ^ 0x67A0000) & (v20 ^ 0x40005290)))) ^ 0xFB7489Du;
  v23 = 0x322E42A57083BALL
      * (((v22 ^ 0xC707EA8212F571C0) + 0x38F8157DED0A8E40) ^ ((v22 ^ 0x90B1CE5AC2DFA154) + 0x6F4E31A53D205EACLL) ^ ((v22 ^ 0x57B624D85D0744F3) - 0x57B624D85D0744F3))
      - 0x45ED527F6210C3ECLL;
  v24 = (v23 ^ 0xA33AC529958F4BABLL) & (2 * (v23 & 0x33B28449982F4BC2)) ^ v23 & 0x33B28449982F4BC2;
  v25 = ((2 * (v23 ^ 0xC55AC528B58D5BAFLL)) ^ 0xEDD082C25B4420DALL) & (v23 ^ 0xC55AC528B58D5BAFLL) ^ (2 * (v23 ^ 0xC55AC528B58D5BAFLL)) & v8;
  v26 = ((4 * (v25 ^ 0x1228412124A21025)) ^ 0xDBA10584B68841B4) & (v25 ^ 0x1228412124A21025) ^ (4 * (v25 ^ 0x1228412124A21025)) & v8;
  v27 = (v26 ^ 0xD2A0010024800020) & (16 * ((v25 ^ 0xC4C0004001000008) & (4 * v24) ^ v24)) ^ (v25 ^ 0xC4C0004001000008) & (4 * v24) ^ v24;
  v28 = ((16 * (v26 ^ 0x2448406109221049)) ^ 0x6E841612DA2106D0) & (v26 ^ 0x2448406109221049) ^ (16 * (v26 ^ 0x2448406109221049)) & (v8 - 12);
  v29 = (v28 ^ 0x6680000008200000) & (v27 << 8) ^ v27;
  v30 = (((v28 ^ 0x906841612582102DLL) << 8) ^ 0xE841612DA2106D00) & (v28 ^ 0x906841612582102DLL) ^ ((v28 ^ 0x906841612582102DLL) << 8) & (v8 - 108);
  v31 = v29 ^ (v8 + 1) ^ (v30 ^ 0xE040412120000000) & (v29 << 16);
  v32 = v23 ^ (2
             * ((v31 << 32) & v11 ^ v31 ^ ((v31 << 32) ^ 0x2DA2106D00000000) & (((v30 ^ 0x16A800400DA2106DLL) << 16) & v11 ^ 0x3688404100000000 ^ (((v30 ^ 0x16A800400DA2106DLL) << 16) ^ 0x41612DA200000000) & (v30 ^ 0x16A800400DA2106DLL))));
  v33 = ((v32 ^ 0x294D937B22AF0DADLL) + 0x29938033FD906473) ^ ((v32 ^ 0x305003C389ED7D13) + 0x308E108B56D214CDLL);
  LODWORD(v32) = __CFADD__(1306 * (v33 ^ ((v32 ^ 0x8E3F96F168291BA6) - 0x711E7A4648E98D86)), 0xA3FCD8557B69CFB0)
               + (((v33 ^ ((v32 ^ 0x8E3F96F168291BA6) - 0x711E7A4648E98D86)) * (unsigned __int128)0x51AuLL) >> 64)
               + 1306
               * ((__CFADD__(v32 ^ 0x294D937B22AF0DADLL, 0x29938033FD906473) - 1) ^ (__CFADD__(v32 ^ 0x305003C389ED7D13, 0x308E108B56D214CDLL)- 1) ^ (__CFADD__(v32 ^ 0x8E3F96F168291BA6, 0x8EE185B9B716727ALL)- 1))+ 1420522168;
  LODWORD(v30) = (v32 ^ 0x22548E59) & (2 * (v32 & 0xAB548F5A)) ^ v32 & 0xAB548F5A;
  LODWORD(v33) = ((2 * (v32 ^ 0x625D98DD)) ^ 0x92122F0E) & (v32 ^ 0x625D98DD) ^ (2 * (v32 ^ 0x625D98DD)) & (v12 + 6);
  LODWORD(v26) = v33 ^ 0x49091081;
  LODWORD(v33) = (v33 ^ 0x80090701) & (4 * v30) ^ v30;
  LODWORD(v30) = ((4 * v26) ^ 0x24245E1C) & v26 ^ (4 * v26) & (v12 + 4);
  LODWORD(v33) = (v30 ^ 0x1600) & (16 * v33) ^ v33;
  LODWORD(v30) = ((16 * (v30 ^ 0xC9090183)) ^ 0x90917870) & (v30 ^ 0xC9090183) ^ (16 * (v30 ^ 0xC9090183)) & v12;
  LODWORD(v33) = v33 ^ (v12 + 7) ^ (v30 ^ 0x80011087) & ((_DWORD)v33 << 8);
  LODWORD(v33) = *((unsigned __int8 *)&STACK[0x2920]
                 + (v32 ^ (2
                                       * (((_DWORD)v33 << 16) & 0x49090000 ^ v33 ^ (((_DWORD)v33 << 16) ^ 0x17870000) & (((v30 ^ 0x49080787) << 8) & 0xC9090000 ^ 0x40080000 ^ (((v30 ^ 0x49080787) << 8) ^ 0x9170000) & (v30 ^ 0x49080787)))) ^ 0x3B44A054));
  v34 = ((-1586244613 * v33 - 1926392729 - ((48736246 * v33) & 0x1A5B28CE)) ^ v10) + a7;
  v35 = v34 - HIWORD(v34) + ((v34 - HIWORD(v34)) >> 8);
  LODWORD(v32) = ((v35 + 1623001240) ^ (-1586244613 * v33))
               + a7
               - ((((v35 + 1623001240) ^ (-1586244613 * (_DWORD)v33)) + a7) >> 16);
  LODWORD(STACK[0x1898]) ^= 0x8D2D9467 ^ v35 ^ (((2 * v35) & 0xFFFDD9AC) - 1926392729 - (a4 & (4 * v35))) ^ (v32 + (v32 >> 8)) ^ ((((_DWORD)v32 + (v32 >> 8)) & 0xFFFEECD6) << ((((2 * (v35 - 104)) & 0x8C ^ 0x8D) + ((2 * (v35 - 104)) & 0x8C)) & 1));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0]
                                        + 8 * ((30773 * (!(v33 & 1) + (v33 & 1) + a7 > 0xF)) ^ a8))
                            - 8))();
}

#error "10035243C: too big function (funcsize=0)"

#error "10036DF3C: too big function (funcsize=0)"

uint64_t sub_100388E88(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;

  v11 = 12218 * (v7 ^ 0x5957);
  v12 = (((a2 + v11) & 0xF85257F8) << ((v7 ^ 0x57) - 1)) & ((a2 + v11) ^ 0xFA4257FA) ^ (a2 + v11) & 0xF85257F8;
  v13 = ((2 * ((a2 + v11) ^ 0x9AE6F8BA)) ^ 0xC5695E84) & ((a2 + v11) ^ 0x9AE6F8BA) ^ (2 * ((a2 + v11) ^ 0x9AE6F8BA)) & 0x62B4AF42;
  v14 = v13 ^ 0x2294A142;
  v15 = (v13 ^ 0x40040E02) & (4 * v12) ^ v12;
  v16 = ((4 * v14) ^ 0x8AD2BD08) & v14 ^ (4 * v14) & 0x62B4AF40;
  v17 = (v16 ^ 0x290AD00) & (16 * v15) ^ v15;
  v18 = ((16 * (v16 ^ 0x60240242)) ^ 0x2B4AF420) & (v16 ^ 0x60240242) ^ (16 * (v16 ^ 0x60240242)) & 0x62B4AF40;
  v19 = v17 ^ 0x62B4AF42 ^ (v18 ^ 0x2200A442) & (v17 << 8);
  v20 = (a2 + v11) ^ (2
                    * ((v19 << 16) & 0x62B40000 ^ v19 ^ ((v19 << 16) ^ 0x2F420000) & (((v18 ^ 0x40B40B42) << 8) & 0x62B40000 ^ a7 ^ (((v18 ^ 0x40B40B42) << 8) ^ 0x34AF0000) & (v18 ^ 0x40B40B42))));
  if ((((v20 ^ 0x11E57997) + 437001076) ^ ((v20 ^ 0x27794651) + 747644086) ^ ((v20 ^ 0x4FA736BAu) + 1145984095)) + v8 >= 0x100)
    v21 = 496259624;
  else
    v21 = 496259656;
  v22 = ((v21 & 0x40 ^ 0xA47E8D63) & 0xFFFFFF7F | ((((v21 & 0x40 ^ 0xA47E8D63) >> 6) & 1) << 7)) ^ 0x2480;
  v23 = ((2 * (v21 ^ 0x461520A2)) ^ 0x488132C2) & (v21 ^ 0x461520A2) ^ ((2 * (v21 ^ 0x461520A2)) & 0x540 | 0x3C1A22);
  v24 = v22 ^ v23 & 0x58814460 ^ ((4 * v22) ^ 0x6D39B9E8) & (v23 ^ 0xA4428463);
  v25 = ((4 * v23) ^ 0x6DC9D5E0) & (v23 ^ 0xA4428463) ^ v23 & 0x58814460;
  v26 = v24 ^ v25 & 0xFCC3C474 ^ ((16 * v24) ^ 0xFF027444) & (v25 ^ 0xA4428463);
  v27 = ((16 * v25) ^ 0xB8EB8274) & (v25 ^ 0xA4428463) ^ v25 & 0xFCC3C474;
  v28 = v26 ^ v27 & 0xFCC3C474 ^ ((v26 << 8) ^ 0x825CA774) & (v27 ^ 0xA4428463);
  v29 = ((v27 << 8) ^ 0xBE47A474) & (v27 ^ 0xA4428463) ^ v27 & 0xFCC3C474;
  return (*(uint64_t (**)(void))(STACK[0x18C0]
                              + 8
                              * (((*(_BYTE *)(v10
                                            + (v21 ^ (2
                                                    * (v28 ^ v29 & 0x7CC3C474 ^ ((v28 << 16) ^ 0xE7C0C474) & (v29 ^ 0x3C0000) ^ ((v28 << 16) ^ 0xE7C0C474) & 0x247E8460)) ^ 0xAA968107)) == 0x38)
                                * v9) ^ v7)))();
}

uint64_t sub_1003891C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unint64_t v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unsigned int v105;

  v17 = v9 + 9777;
  v18 = *(unsigned __int8 *)(v8 + ((v9 + 2033912186) ^ v10));
  v19 = (((v10 ^ 0x7EBFAD7B) + 1968623606) ^ ((v10 ^ 0x5319216) + 249098393) ^ ((v10 ^ 0x2B5367B) + 157046006))
      - 792131909;
  v20 = (v19 ^ 0x3A561FFE) & (2 * (v19 & 0xBC649FFF)) ^ v19 & 0xBC649FFF;
  v21 = ((2 * (v19 ^ 0x221E2FB6)) ^ 0x3CF56092) & (v19 ^ 0x221E2FB6) ^ (2 * (v19 ^ 0x221E2FB6)) & 0x9E7AB048;
  v22 = v21 ^ 0x820A9049;
  v23 = (v21 ^ 0x10302000) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0x79EAC124) & v22 ^ (4 * v22) & 0x9E7AB048;
  v25 = v23 ^ 0x9E7AB049 ^ (v24 ^ 0x186A8000) & (16 * v23);
  v26 = (16 * (v24 ^ 0x86103049)) & 0x9E7AB040 ^ 0x1850B049 ^ ((16 * (v24 ^ 0x86103049)) ^ 0xE7AB0490) & (v24 ^ 0x86103049);
  v27 = (v25 << 8) & 0x9E7AB000 ^ v25 ^ ((v25 << 8) ^ 0x7AB04900) & v26;
  v28 = v19 ^ (2
             * ((v27 << 16) & 0x1E7A0000 ^ v27 ^ ((v27 << 16) ^ 0x30490000) & ((v26 << 8) & 0x9E7A0000 ^ 0x44A0000 ^ ((v26 << 8) ^ 0x7AB00000) & v26)));
  v29 = ((v28 & 0x524EA397 ^ 0x24E8390) + (v28 & 0x40022216 ^ 0x4D002C4E) - ((v28 & 0x524EA397 ^ 0x24E8390) & 0x40022216)) ^ 0xCB862ECA;
  v30 = ((2 * v29) | 0x66326470) - v29;
  v31 = a6 ^ v12 | a8;
  v32 = 385 * v18;
  v33 = 385 * v18 + 760457936;
  v34 = (v33 ^ 0x4ECDD724) & (2 * (v33 & 0x5D7B1)) ^ v33 & 0x5D7B1;
  v35 = ((2 * (v33 ^ 0x4EC55664)) ^ 0x209103AA) & (v33 ^ 0x4EC55664) ^ (2 * (v33 ^ 0x4EC55664)) & 0x842881D4;
  v36 = v35 ^ 0x84288055;
  v37 = (v35 ^ v11) & (4 * v34) ^ v34;
  v38 = ((4 * v36) ^ 0x71A20754) & v36 ^ (4 * v36) & 0x9C6881D4;
  v39 = (v38 ^ 0x10200151) & (16 * v37) ^ v37;
  v40 = ((16 * (v38 ^ 0x8C488081)) ^ 0xC6881D50) & (v38 ^ 0x8C488081) ^ (16 * (v38 ^ 0x8C488081)) & 0x9C6881D0;
  v41 = v39 ^ 0x9C6881D5 ^ (v40 ^ 0x84080185) & (v39 << 8);
  v42 = (v33 ^ (2
              * ((v41 << 16) & 0x1C680000 ^ v41 ^ ((v41 << 16) ^ 0x1D50000) & (((v40 ^ 0x18608085) << 8) & 0x9C680000 ^ 0x14680000 ^ (((v40 ^ 0x18608085) << 8) ^ 0x68810000) & (v40 ^ 0x18608085)))) ^ 0xEAFCD41B)
      % ((~(1926388037
          - (((v10 ^ 0xEB1BA33) + 89708734) ^ ((v10 ^ 0x53062F30) + 1492078015) ^ ((v10 ^ 0x248C9C15) + 795213468))) & 0x524EA397)
       + ((v30 + 1290194376) ^ 0xD86CEDC6)
       + 1307);
  *((_BYTE *)&STACK[0x2920] + ((v42 - 1926392729 - ((2 * v42) & 0x1A5B28CE)) ^ 0x8D2D9467)) = *(_BYTE *)(STACK[0x1468] + ((*(_BYTE *)(v13 + (((v10 ^ 0x72C5E834) + 2032962239) ^ ((v10 ^ 0xCC964B30) - 947967557) ^ ((v10 ^ 0xC768AA16) - 863909731)) - 1926387780) + 77) ^ 0xFALL));
  v43 = ((v18 + 782) * (v31 ^ 0x7E | 0x181) - 1926392729 - (v16 & (2 * (v18 + 782) * (v31 ^ 0x7E | 0x181)))) ^ 0x8D2D9467;
  v44 = 385 * v18 - 1520548284;
  v45 = (2 * (v44 & 0x21B9BC)) & (v44 ^ 0x72A72CF5) ^ v44 & 0x21B9BC ^ ((2 * (v44 & 0x21B9BC)) & 0x21148 | 0x40000);
  v46 = (2 * (v44 ^ 0x72A72CF5)) & 0x28069548 ^ 0x28029549 ^ ((2 * (v44 ^ 0x72A72CF5)) ^ 0x500D2A92) & (v44 ^ 0x72A72CF5);
  v47 = (4 * v45) & 0x28069548 ^ v45 ^ ((4 * v45) ^ 0x100000) & v46;
  v48 = (4 * v46) & 0x28069548 ^ 0x8048049 ^ ((4 * v46) ^ 0xA01A5524) & v46;
  v49 = (16 * v47) & 0x28069540 ^ v47 ^ ((16 * v47) ^ 0x400000) & v48;
  v50 = (16 * v48) & 0x28069540 ^ 0x28068149 ^ ((16 * v48) ^ 0x80695490) & v48;
  v51 = v49 ^ 0x28029549 ^ (v49 << 8) & 0x28069500 ^ ((v49 << 8) ^ 0x4000000) & v50;
  *((_BYTE *)&STACK[0x2920] + v43 % 0x51A) = *(_BYTE *)(STACK[0x1468]
                                                      + (*(unsigned __int8 *)(STACK[0x18B8] + (v28 ^ 0x9461FF6DLL)) ^ 0xA3));
  v52 = v44 ^ (2
             * ((v51 << 16) & 0x28060000 ^ v51 ^ ((v51 << 16) ^ 0x15490000) & ((v50 << 8) & 0x28060000 ^ 0x28020000 ^ ((v50 << 8) ^ 0x6950000) & v50))) ^ 0xAAC932E;
  v18 += 1820280632;
  v53 = (v18 ^ 0xEE70D8) & (2 * (v18 & 0xAD1)) ^ v18 & 0xAD1;
  v54 = ((2 * (v18 ^ 0xEE757A)) ^ 0x24911F56) & (v18 ^ 0xEE757A) ^ (2 * (v18 ^ 0xEE757A)) & 0xFAA;
  v55 = v54 ^ 0xA9;
  v56 = (v54 ^ 0x4F00) & (4 * v53) ^ v53;
  v57 = ((4 * v55) ^ 0x4DBB3EAC) & v55 ^ (4 * v55) & 0x936ECFA8;
  v58 = (v57 ^ 0x12A0EA0) & (16 * v56) ^ v56;
  v59 = ((16 * (v57 ^ 0x9244C103)) ^ 0x36ECFAB0) & (v57 ^ 0x9244C103) ^ (16 * (v57 ^ 0x9244C103)) & 0x936ECFA0;
  v60 = v58 ^ 0x936ECFAB ^ (v59 ^ 0x126CCA00) & (v58 << 8);
  v61 = v18 ^ (2
             * ((v60 << 16) & 0x136E0000 ^ v60 ^ ((v60 << 16) ^ 0x4FAB0000) & (((v59 ^ 0x8102050B) << 8) & 0x136E0000 ^ 0x11200000 ^ (((v59 ^ 0x8102050B) << 8) ^ 0x6ECF0000) & (v59 ^ 0x8102050B))));
  v62 = STACK[0x18B8];
  *((_BYTE *)&STACK[0x2920] + v52 % 0x51A) = *(_BYTE *)(STACK[0x1468]
                                                      + ((v10 ^ *(_BYTE *)(STACK[0x18B8]
                                                                                          + (((v10 ^ 0x4AFC5240)
                                                                                            + 1091907734) ^ ((v10 ^ 0x174A0762) + 480470456) ^ ((v10 ^ 0x248D5C6F) + 795098811))
                                                                                          - 1926370366)) ^ 0x1Fu));
  LODWORD(v28) = *(unsigned __int8 *)(v62
                                    + (((v10 ^ 0xCAAABED7) - 1052517161) ^ ((v10 ^ 0xCAB63C89) - 1050714487) ^ ((v10 ^ 0x79278BC7) + 1926162887))
                                    - 1926392153);
  v63 = 385
      * (((v61 ^ 0x6071F353) - 1582645939) ^ ((v61 ^ 0x4F139914) - 1899440372) ^ ((v61 ^ 0x9C6B4FC0) + 1571815904))
      + 2129002040;
  v64 = (v63 ^ 0x8087BE8F) & (2 * (v63 & 0xD2A630AF)) ^ v63 & 0xD2A630AF;
  v65 = ((2 * (v63 ^ 0x85C3DF87)) ^ 0xAECBDE50) & (v63 ^ 0x85C3DF87) ^ (2 * (v63 ^ 0x85C3DF87)) & 0x5765EF28;
  v66 = v65 ^ 0x51242128;
  v67 = (v65 ^ 0x601C600) & (4 * v64) ^ v64;
  v68 = ((4 * v66) ^ 0x5D97BCA0) & v66 ^ (4 * v66) & 0x5765EF28;
  v69 = (v68 ^ 0x5505AC20) & (16 * v67) ^ v67;
  v70 = ((16 * (v68 ^ 0x2604308)) ^ 0x765EF280) & (v68 ^ 0x2604308) ^ (16 * (v68 ^ 0x2604308)) & 0x5765EF20;
  v71 = v69 ^ 0x5765EF28 ^ (v70 ^ 0x5644E200) & (v69 << 8);
  v72 = v63 ^ (2
             * ((v71 << 16) & 0x57650000 ^ v71 ^ ((v71 << 16) ^ 0x6F280000) & (((v70 ^ 0x1210D28) << 8) & 0x57650000 ^ 0x12000000 ^ (((v70 ^ 0x1210D28) << 8) ^ 0x65EF0000) & (v70 ^ 0x1210D28)))) ^ 0x7F007A98;
  LOBYTE(v63) = (71 * *(_BYTE *)(STACK[0x1468] + (((v28 >> 7) | (2 * v28)) ^ 0x39))) ^ 0xB1;
  v73 = 0x322E42A57083BALL
      * (((v72 ^ 0xE82776AAB122D5E6) + 0x17D889554EDD2A1ALL) ^ ((v72 ^ 0xF3E6B87BEEA303A7) + 0xC194784115CFC59) ^ ((v72 ^ 0x1BC1CED1D2AC4226) - 0x1BC1CED1D2AC4226))
      - 0x6CCE4F180723D4D2;
  v74 = (v73 ^ 0x528B72D039201C26) & (2 * (v73 & 0x5A9380E23D425CA8)) ^ v73 & 0x5A9380E23D425CA8;
  v75 = ((2 * (v73 ^ 0xD7AC739461242D66)) ^ 0x1A7FE6ECB8CCE39CLL) & (v73 ^ 0xD7AC739461242D66) ^ (2 * (v73 ^ 0xD7AC739461242D66)) & v14;
  v76 = v75 ^ 0x8500111244221042;
  v77 = (v75 ^ 0x81E020018006180) & (4 * v74) ^ v74;
  v78 = ((4 * v76) ^ 0x34FFCDD97199C738) & v76 ^ (4 * v76) & v14;
  v79 = (v78 ^ 0x43FC15050004100) & (16 * v77) ^ v77;
  v80 = ((16 * (v78 ^ 0x890032260C6630C6)) ^ 0xD3FF3765C6671CE0) & (v78 ^ 0x890032260C6630C6) ^ (16 * (v78 ^ 0x890032260C6630C6)) & (v14 - 12);
  v81 = (v80 ^ 0x813F336444661000) & (v79 << 8) ^ v79;
  v82 = (((v80 ^ 0xC00C0121800610ELL) << 8) ^ 0x3FF3765C6671CE00) & (v80 ^ 0xC00C0121800610ELL) ^ ((v80 ^ 0xC00C0121800610ELL) << 8) & (v14 - 204);
  v83 = v81 ^ (v14 + 2) ^ (v82 ^ 0xD33725444600000) & (v81 << 16);
  v84 = v73 ^ (2
             * ((v83 << 32) & 0xD3FF37600000000 ^ v83 ^ ((v83 << 32) ^ 0x5C6671CE00000000) & (((v82 ^ 0x800C8122180631CELL) << 16) & 0xD3FF37600000000 ^ 0xC09A31000000000 ^ (((v82 ^ 0x800C8122180631CELL) << 16) ^ 0x73765C6600000000) & (v82 ^ 0x800C8122180631CELL))));
  v85 = ((v84 ^ 0xF90DA9993FE3A47ELL) + 0x603C18014096A2E9) ^ ((v84 ^ 0x2E450242A100D966) - 0x488B4C25218A200FLL);
  LODWORD(v84) = __CFADD__(1306 * (v85 ^ ((v84 ^ 0x8FE82F591B6DC22CLL) + 0x16D99EC16418C4BBLL)), 0x8137145B97CEF672)
               + (((v85 ^ ((v84 ^ 0x8FE82F591B6DC22CLL) + 0x16D99EC16418C4BBLL)) * (unsigned __int128)0x51AuLL) >> 64)
               + 1306
               * ((__CFADD__(v84 ^ 0xF90DA9993FE3A47ELL, 0x603C18014096A2E9) - 1) ^ (__CFADD__(v84 ^ 0x2E450242A100D966, 0xB774B3DADE75DFF1)- 1) ^ (__CFADD__(v84 ^ 0x8FE82F591B6DC22CLL, 0x16D99EC16418C4BBLL)- 1))+ 1535345913;
  LODWORD(v82) = (v84 ^ 0x237B7A70) & (2 * (v84 & 0xA47C7C45)) ^ v84 & 0xA47C7C45;
  LODWORD(v85) = ((2 * (v84 ^ 0x63637272)) ^ 0x8E3E1C6E) & (v84 ^ 0x63637272) ^ (2 * (v84 ^ 0x63637272)) & 0xC71F0E36;
  LODWORD(v76) = v85 ^ 0x41010211;
  LODWORD(v85) = (v85 ^ 0x82120024) & (4 * v82) ^ v82;
  LODWORD(v82) = ((4 * v76) ^ 0x1C7C38DC) & v76 ^ (4 * v76) & 0xC71F0E34;
  LODWORD(v85) = (v82 ^ 0x41C0813) & (16 * v85) ^ v85;
  LODWORD(v82) = ((16 * (v82 ^ 0xC3030623)) ^ 0x71F0E370) & (v82 ^ 0xC3030623) ^ (16 * (v82 ^ 0xC3030623)) & 0xC71F0E30;
  LODWORD(v85) = v85 ^ 0xC71F0E37 ^ (v82 ^ 0x41100207) & ((_DWORD)v85 << 8);
  v86 = v63 + 2068054453;
  v87 = ((2 * (v86 & 0x2AA)) & 0x104 | v86 & 0x2AA) ^ ((2 * (v86 & 0x2AA)) | 0x80000) & (v86 ^ 0xA1D1DA4);
  LODWORD(v76) = (2 * (v86 ^ 0xA1D1DA4)) & 0x30E ^ 0x14102 ^ ((2 * (v86 ^ 0xA1D1DA4)) ^ 0x1140161C) & (v86 ^ 0xA1D1DA4);
  v88 = v87 ^ 0x8EA54B0E ^ (4 * v87) & 0x200B08 ^ ((4 * v87) | 0x100000) & v76;
  LODWORD(v76) = (4 * v76) & 0x8EA14B0C ^ 0x84204306 ^ ((4 * v76) ^ 0x30012C38) & v76;
  v89 = (16 * v88) & 0x8EA14B00 ^ v88 ^ ((16 * v88) ^ 0xEA14B0E0) & v76;
  LODWORD(v76) = (16 * v76) & 0x8EA14B00 ^ 0x4A14B0E ^ ((16 * v76) ^ 0xEA14B0E0) & v76;
  v90 = v89 ^ (v89 << 8) & 0x8EA14B00 ^ ((v89 << 8) ^ 0xA14B0E00) & v76 ^ 0xA010A00;
  *((_BYTE *)&STACK[0x2920]
  + (v84 ^ (2
                        * (((_DWORD)v85 << 16) & 0x471F0000 ^ v85 ^ (((_DWORD)v85 << 16) ^ 0xE370000) & (((v82 ^ 0x860F0C07) << 8) & 0xC71F0000 ^ 0x40110000 ^ (((v82 ^ 0x860F0C07) << 8) ^ 0x1F0E0000) & (v82 ^ 0x860F0C07)))) ^ 0x266C602B)) = ((*(_BYTE *)(v62 + (v86 ^ 0x8DFEC0B6 ^ (2 * ((v90 << 16) & 0xEA10000 ^ v90 ^ ((v90 << 16) ^ 0x4B0E0000) & (((_DWORD)v76 << 8) & 0xEA10000 ^ 0xEA00000 ^ (((_DWORD)v76 << 8) ^ 0xA14B0000) & v76))))) - 84) ^ 0x29) - 107;
  v91 = (v10 ^ 0x793B091B) + 394553202;
  LODWORD(v85) = (v91 ^ 0xE77B8312) & (2 * (v91 & 0xE87BA254)) ^ v91 & 0xE87BA254;
  LODWORD(v84) = ((2 * (v91 ^ 0x67CEC7BA)) ^ 0x1F6ACBDC) & (v91 ^ 0x67CEC7BA) ^ (2 * (v91 ^ 0x67CEC7BA)) & 0x8FB565EE;
  LODWORD(v82) = v84 ^ 0x80952422;
  LODWORD(v84) = (v84 ^ 0x32025C2) & (4 * v85) ^ v85;
  LODWORD(v85) = ((4 * v82) ^ 0x3ED597B8) & v82 ^ (4 * v82) & 0x8FB565EC;
  LODWORD(v84) = (v85 ^ 0xE9505A0) & (16 * v84) ^ v84;
  LODWORD(v85) = ((16 * (v85 ^ 0x81206046)) ^ 0xFB565EE0) & (v85 ^ 0x81206046) ^ (16 * (v85 ^ 0x81206046)) & 0x8FB565E0;
  LODWORD(v84) = v84 ^ 0x8FB565EE ^ (v85 ^ 0x8B144400) & ((_DWORD)v84 << 8);
  LODWORD(v84) = ((_DWORD)v84 << 16) & 0xFB50000 ^ v84 ^ (((_DWORD)v84 << 16) ^ 0x65EE0000) & (((v85 ^ 0x4A1210E) << 8) & 0xFB50000 ^ 0xA900000 ^ (((v85 ^ 0x4A1210E) << 8) ^ 0x35650000) & (v85 ^ 0x4A1210E));
  v32 += 966257500;
  LODWORD(v82) = (v32 ^ 0xD6CF3A3B) & (2 * (v32 & v15)) ^ v32 & v15;
  LODWORD(v85) = ((2 * (v32 ^ 0xD6CF783F)) ^ 0x21428608) & (v32 ^ 0xD6CF783F) ^ (2 * (v32 ^ 0xD6CF783F)) & 0x10A14304;
  LODWORD(v76) = v85 ^ 0x10A14104;
  LODWORD(v85) = v82 ^ 0x10A14304 ^ (v85 ^ 0x10800000) & (4 * v82);
  LODWORD(v82) = (4 * v76) & 0x10A14304 ^ 0x10204304 ^ ((4 * v76) ^ 0x42850C10) & v76;
  LODWORD(v85) = (16 * v85) & 0x10A14300 ^ v85 ^ ((16 * v85) ^ 0xA143040) & v82;
  LODWORD(v82) = (16 * v82) & 0x10A14300 ^ 0x10A14304 ^ ((16 * v82) ^ 0xA143040) & v82;
  LODWORD(v85) = ((_DWORD)v85 << 8) & 0x10A14300 ^ v85 ^ (((_DWORD)v85 << 8) ^ 0xA1430400) & v82;
  v92 = v32 ^ (2
             * (((_DWORD)v85 << 16) & 0x10A10000 ^ v85 ^ (((_DWORD)v85 << 16) ^ 0x43040000) & (((_DWORD)v82 << 8) & 0x10A10000 ^ 0x10A00000 ^ (((_DWORD)v82 << 8) ^ 0xA1430000) & v82))) ^ 0x6A032954;
  v93 = 0x322E42A57083BALL
      * (((v92 ^ 0x99EABB28BD75E19CLL) + 0x661544D7428A1E64) ^ ((v92 ^ 0x4EBB64E7A4901F01) - 0x4EBB64E7A4901F01) ^ ((v92 ^ 0xD751DFCF94C86AFALL) + 0x28AE20306B379506))
      + 0x4EF4E92ABDB2D701;
  v94 = (2 * (v93 & 0x9ED0489F786BB0D4)) & 0x38209134B0044120 ^ v93 & 0x9ED0489F786BB0D4 ^ ((2
                                                                                                 * (v93 & 0x9ED0489F786BB0D4)) | 2) & (v93 ^ 0xA6EA996BCB677BB6);
  v95 = (2 * (v93 ^ 0xA6EA996BCB677BB6)) & 0x383AD1F4B30CCB62 ^ 0x80A501491044921 ^ ((2
                                                                                          * (v93 ^ 0xA6EA996BCB677BB6)) ^ 0x7075A3E9661996C6) & (v93 ^ 0xA6EA996BCB677BB6);
  v96 = (4 * v94) & 0x383AD1F4B30CCB60 ^ v94 ^ ((4 * v94) ^ 0xC) & v95;
  v97 = (4 * v95) & 0x383AD1F4B30CCB60 ^ 0x18109024330CC263 ^ ((4 * v95) ^ 0xE0EB47D2CC332D8CLL) & v95;
  v98 = (16 * v96) & 0x383AD1F4B30CCB60 ^ v96 ^ ((16 * v96) ^ 0x30) & v97;
  v99 = (16 * v97) & 0x383AD1F4B30CCB60 ^ 0x3812C0B483004943 ^ ((16 * v97) ^ 0x83AD1F4B30CCB630) & v97;
  v100 = (v98 << 8) & 0x383AD1F4B30CCB00 ^ v98 ^ ((v98 << 8) ^ 0x2300) & v99;
  v101 = (v99 << 8) & 0x383AD1F4B30CCB00 ^ 0x2A0144B3048863 ^ ((v99 << 8) ^ 0x3AD1F4B30CCB6300) & v99;
  v102 = v100 ^ (v100 << 16) & 0x383AD1F4B30C0000 ^ ((v100 << 16) ^ 0x3230000) & v101 ^ 0x383AD1F4B00CC840;
  v103 = v93 ^ (2
              * ((v102 << 32) & 0x383AD1F400000000 ^ v102 ^ ((v102 << 32) ^ 0x330CCB6300000000) & ((v101 << 16) & 0x383AD1F400000000 ^ 0x280A40F000000000 ^ ((v101 << 16) ^ 0x51F4B30C00000000) & v101)));
  v104 = ((v103 ^ 0xA9811634A70B1DBCLL) - 0x44AAD81EB419A11DLL) ^ ((v103 ^ 0x5C3AEA48A2991C7) + 0x17179F7166C4D29ALL);
  LODWORD(v103) = __CFADD__(1306 * (v104 ^ ((v103 ^ 0x22F6D1263350AA68) + 0x3022E0F3DFBDE937)), 0x3C7D121C3ED53014)+ (((v104 ^ ((v103 ^ 0x22F6D1263350AA68) + 0x3022E0F3DFBDE937)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v103 ^ 0xA9811634A70B1DBCLL, 0xBB5527E14BE65EE3) - 1) ^ (__CFADD__(v103 ^ 0x5C3AEA48A2991C7, 0x17179F7166C4D29ALL)- 1) ^ (__CFADD__(v103 ^ 0x22F6D1263350AA68, 0x3022E0F3DFBDE937)- 1))+ 382170609;
  LODWORD(v102) = (v103 ^ 0xC4B88B6A) & (2 * (v103 & 0xE9388C0B)) ^ v103 & 0xE9388C0B;
  LODWORD(v104) = ((2 * (v103 ^ 0x94889B7C)) ^ 0xFB602EEE) & (v103 ^ 0x94889B7C) ^ (2 * (v103 ^ 0x94889B7C)) & 0x7DB01776;
  LODWORD(v76) = v104 ^ 0x4901111;
  LODWORD(v104) = (v104 ^ 0x69200064) & (4 * v102) ^ v102;
  LODWORD(v102) = ((4 * v76) ^ 0xF6C05DDC) & v76 ^ (4 * v76) & 0x7DB01774;
  LODWORD(v104) = (v102 ^ 0x74801550) & (16 * v104) ^ v104;
  LODWORD(v102) = ((16 * (v102 ^ 0x9300223)) ^ 0xDB017770) & (v102 ^ 0x9300223) ^ (16 * (v102 ^ 0x9300223)) & 0x7DB01770;
  LODWORD(v104) = v104 ^ 0x7DB01777 ^ (v102 ^ 0x59001700) & ((_DWORD)v104 << 8);
  v105 = *(unsigned __int8 *)(v62 + (v91 ^ (2 * (_DWORD)v84) ^ 0xFC596988));
  *((_BYTE *)&STACK[0x2920]
  + (v103 ^ (2
                         * (((_DWORD)v104 << 16) & 0x7DB00000 ^ v104 ^ (((_DWORD)v104 << 16) ^ 0x17770000) & (((v102 ^ 0x24B00007) << 8) & 0x7DB00000 ^ 0x4DA00000 ^ (((v102 ^ 0x24B00007) << 8) ^ 0x30170000) & (v102 ^ 0x24B00007)))) ^ 0x3838A2E5)) = *(_BYTE *)(STACK[0x1468] + (v105 ^ (v105 >> 1) ^ (v105 >> 5) ^ 0xE9));
  return (*(uint64_t (**)(void))(STACK[0x18C0] + 8 * v17))();
}

uint64_t sub_10038AA50()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  int v6;
  unsigned __int8 v7;
  unsigned __int8 *v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  uint64_t v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  unint64_t v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unint64_t v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  int v224;
  int v225;
  int v226;
  unsigned int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unint64_t v245;
  unsigned __int8 *v246;
  int v247;
  int v248;
  unsigned int v249;
  uint64_t v250;
  unsigned int v251;
  int v252;
  int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  unsigned __int8 *v262;
  unsigned int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  int v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  unint64_t v303;
  uint64_t v304;
  unint64_t v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  unsigned int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  int v322;
  int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  uint64_t v327;
  int v328;
  int v329;
  int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  int v340;
  unsigned int v341;
  int v342;
  uint64_t v343;
  unint64_t v344;
  int v345;
  unsigned int v346;
  int v347;
  uint64_t v348;
  int v349;
  int v350;
  unsigned __int8 *v351;
  int v352;
  int v353;
  int v354;
  unint64_t v355;
  int v356;
  int v357;
  int v358;
  unint64_t v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  int v374;
  int v375;
  unint64_t v376;
  int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  unsigned __int8 *v390;
  int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  int v399;
  unsigned int v400;
  uint64_t v401;
  unint64_t v402;
  unint64_t v403;
  unint64_t v404;
  uint64_t v405;
  unint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  unint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  unint64_t v431;
  unint64_t v432;
  unsigned __int8 *v433;
  uint64_t v434;
  uint64_t v435;
  unsigned __int8 *v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  unsigned int v443;
  int v444;
  int v445;
  int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned __int8 *v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  int v456;
  unint64_t v457;
  uint64_t v458;
  unint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  unint64_t v465;
  uint64_t v466;
  uint64_t v467;
  unint64_t v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unint64_t v477;
  unint64_t v478;
  unint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  unint64_t v485;
  uint64_t v486;
  uint64_t v487;
  unint64_t v488;
  uint64_t v489;
  uint64_t v490;
  unint64_t v491;
  uint64_t v492;
  unint64_t v493;
  uint64_t v494;
  unint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  unint64_t v500;
  int v501;
  unint64_t v502;
  uint64_t v503;
  uint64_t v504;
  int v505;
  uint64_t v506;
  unint64_t v507;
  unint64_t v508;
  unint64_t v509;
  uint64_t v510;
  unint64_t v511;
  uint64_t v512;
  unint64_t v513;
  uint64_t v514;
  unint64_t v515;
  uint64_t v516;
  uint64_t v517;
  unint64_t v518;
  unint64_t v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  unsigned int v525;
  unsigned int v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  unint64_t v538;
  int v539;
  uint64_t v540;
  unint64_t v541;
  unint64_t v542;
  unint64_t v543;
  unint64_t v544;
  unint64_t v545;
  unint64_t v546;
  unint64_t v547;
  unint64_t v548;
  unint64_t v549;
  unint64_t v550;
  unint64_t v551;
  unint64_t v552;
  unint64_t v553;
  uint64_t v554;
  unint64_t v555;
  unint64_t v556;
  unint64_t v557;
  uint64_t v558;
  unint64_t v559;
  uint64_t v560;
  unint64_t v561;
  unint64_t v562;
  uint64_t v563;
  unint64_t v564;
  int v565;
  uint64_t v566;
  uint64_t v567;
  unint64_t v568;
  unint64_t v569;
  unint64_t v570;
  unint64_t v571;
  unint64_t v572;
  unint64_t v573;
  unint64_t v574;
  unint64_t v575;
  unint64_t v576;
  unint64_t v577;
  unint64_t v578;
  unint64_t v579;
  int v580;
  unsigned int v581;
  int v582;
  unsigned int v583;
  unint64_t v584;
  int v585;
  unint64_t v586;
  int v587;
  int v588;
  BOOL v589;
  unint64_t v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  unint64_t v601;
  int v602;
  uint64_t (*v603)(void);

  LODWORD(STACK[0x15D0]) = v1;
  v4 = (v2 - 24295) ^ LODWORD(STACK[0x1898]);
  v5 = STACK[0x1570];
  LODWORD(STACK[0x1898]) = v2;
  v6 = LODWORD(STACK[0x14F8]) ^ 0x8D;
  v7 = v5 ^ ((v5 & 0xE0) >> 5) ^ LODWORD(STACK[0x1520]) ^ 0xE2;
  v4 *= 385;
  LODWORD(STACK[0x1520]) = v4 + 98945;
  v8 = v0;
  v9 = 385 * LODWORD(STACK[0x17A0]) + 529624292;
  v10 = (v9 ^ 0xED05D119) & (2 * (v9 & 0x159D)) ^ v9 & 0x159D;
  v11 = (2 * (v9 ^ 0xED05D821)) & 0xD75CDBC ^ 0x5144484 ^ ((2 * (v9 ^ 0xED05D821)) ^ 0x12839B78) & (v9 ^ 0xED05D821);
  v12 = (4 * v10) & 0xCCBC ^ v10 ^ ((4 * v10) | 0xC00000) & v11;
  v13 = (4 * v11) & 0xD75CDBC ^ 0x820C90C ^ ((4 * v11) ^ 0x35D736F0) & v11;
  v14 = (16 * v12) & 0xD75CDB0 ^ v12 ^ ((16 * v12) ^ 0x7000000) & v13;
  v15 = (16 * v13) & 0xD75CDB0 ^ 0x821043C ^ ((16 * v13) ^ 0xD75CDBC0) & v13;
  v16 = v14 ^ (v14 << 8) & 0xD75CD00 ^ ((v14 << 8) ^ 0x70000000) & v15 ^ 0x805CDBC;
  v17 = v9 ^ (2
            * ((v16 << 16) & 0xD750000 ^ v16 ^ ((v16 << 16) ^ 0x4DBC0000) & ((v15 << 8) & 0xD750000 ^ 0x8300000 ^ ((v15 << 8) ^ 0x75CD0000) & v15))) ^ 0xE0F38EE5;
  v18 = 385 * v6;
  v19 = 385 * v6 + 1815251629;
  v20 = (v19 ^ 0xD72CF7C3) & (2 * (v19 & 0x6F7D4)) ^ v19 & 0x6F7D4;
  v21 = ((2 * (v19 ^ 0xD728B5EB)) ^ 0x890C847E) & (v19 ^ 0xD728B5EB) ^ (2 * (v19 ^ 0xD728B5EB)) & 0x44E6423E;
  v22 = v21 ^ 0x44224201;
  v23 = (v21 ^ 0x44040031) & (4 * v20) ^ v20;
  v24 = ((4 * v22) ^ 0x139908FC) & v22 ^ (4 * v22) & 0x44E6423C;
  v25 = (v24 ^ 0x800023) & (16 * v23) ^ v23;
  v26 = ((16 * (v24 ^ 0x44664203)) ^ 0x4E6423F0) & (v24 ^ 0x44664203) ^ (16 * (v24 ^ 0x44664203)) & 0x44E64230;
  v27 = v25 ^ 0x44E6423F ^ (v26 ^ 0x44640200) & (v25 << 8);
  v28 = v19 ^ (2
             * ((v27 << 16) & 0x44E60000 ^ v27 ^ ((v27 << 16) ^ 0x423F0000) & (((v26 ^ 0x82400F) << 8) & 0x44E60000 ^ 0xA40000 ^ (((v26 ^ 0x82400F) << 8) ^ 0x66420000) & (v26 ^ 0x82400F))));
  LODWORD(STACK[0x1570]) = (v28 ^ 0x9A4E73AA)
                         % ((v28 & 0x88BD ^ 0xFFFFFF57)
                          - ((-98946 - v18) & 0x950C88BD)
                          + ((v4 + 98945) & 0x8DD7 | (-98946 - v4) & 0x950C8DD7)
                          + 1);
  v29 = BYTE2(LODWORD(STACK[0x144C])) ^ 0x2D;
  v30 = 385 * v29 + 98945 - 1306 * ((3288643 * (unint64_t)(385 * v29 + 98945)) >> 32);
  v31 = 385 * v7 + 98945 - 1306 * ((3288643 * (unint64_t)(385 * v7 + 98945)) >> 32);
  v32 = 385 * (BYTE2(LODWORD(STACK[0x17EC])) ^ 0x2D) + 2025883832;
  v33 = (v32 ^ 0x2D50FDCD) & (2 * (v32 & 0x40F9C9)) ^ v32 & 0x40F9C9;
  v34 = ((2 * (v32 ^ 0x2DD1FE5D)) ^ 0x55020F28) & (v32 ^ 0x2DD1FE5D) ^ (2 * (v32 ^ 0x2DD1FE5D)) & 0xAA910794;
  v35 = v34 ^ 0xAA910094;
  v36 = (v34 ^ 0xA8900790) & (4 * v33) ^ v33;
  v37 = ((4 * v35) ^ 0xAA441E50) & v35 ^ (4 * v35) & 0xAA910794;
  v38 = (v37 ^ 0xAA000614) & (16 * v36) ^ v36;
  v39 = ((16 * (v37 ^ 0x910184)) ^ 0xA9107940) & (v37 ^ 0x910184) ^ (16 * (v37 ^ 0x910184)) & 0xAA910790;
  v40 = v38 ^ 0xAA910794 ^ (v39 ^ 0xA8100100) & (v38 << 8);
  v41 = (v32 ^ (2
              * ((v40 << 16) & 0x2A910000 ^ v40 ^ ((v40 << 16) ^ 0x7940000) & (((v39 ^ 0x2810694) << 8) & 0xAA910000 ^ 0x2A900000 ^ (((v39 ^ 0x2810694) << 8) ^ 0x11070000) & (v39 ^ 0x2810694)))) ^ 0xD742F6E1)
      % 0x51A;
  v42 = LODWORD(STACK[0x1440]) ^ 0x67;
  LODWORD(STACK[0x14F8]) = v42 + 257;
  v43 = (((v42 + 257) & 0x81818181) + ((254 - v42) & 0x181)) * ((LODWORD(STACK[0x112C]) ^ 0x67) + 257);
  v44 = v43 - 1306 * ((3288643 * (unint64_t)v43) >> 32);
  v45 = LODWORD(STACK[0x1890]) ^ 0x67;
  v46 = 385 * (LODWORD(STACK[0xE38]) ^ 0x67) + 98945;
  v47 = STACK[0x17BC];
  v48 = (LODWORD(STACK[0x17BC]) ^ 0x67) + 1737864504;
  v49 = (v48 & 0x3C9 | 0x4306C804 | (2 * (v48 & 0x3C9)) & 2) ^ (2 * (v48 & 0x3C9)) & (v48 ^ 0x5F14B3C7);
  v50 = (2 * (v48 ^ 0x5F14B3C7)) & 0x4102080E ^ 0x41020802 ^ ((2 * (v48 ^ 0x5F14B3C7)) ^ 0x881001C) & (v48 ^ 0x5F14B3C7);
  v51 = (4 * v49) & 0x41A380C ^ v49 ^ v50 & 0x1F6C & (4 * v49);
  v52 = (4 * v50) & 0xC77EF80C ^ 0xC2041806 ^ ((4 * v50) ^ 0x1DFBE038) & v50;
  v53 = (16 * v51) & 0xC77EF800 ^ v51 ^ ((16 * v51) ^ 0x71CE8040) & v52;
  v54 = (16 * v52) & 0xC77EF800 ^ 0x8010780E ^ ((16 * v52) ^ 0x77EF80E0) & v52;
  v55 = v53 ^ (v53 << 8) & 0xC77EF800 ^ ((v53 << 8) ^ 0x52680400) & v54;
  v56 = v48 ^ (2
             * (((v55 ^ 0x8344900A) << 16) & 0x477E0000 ^ v55 ^ 0x8344900A ^ (((v55 ^ 0x8344900A) << 16) ^ 0x780E0000) & ((v54 << 8) & 0x477E0000 ^ 0x1060000 ^ ((v54 << 8) ^ 0x7EF80000) & v54)));
  v57 = *((unsigned __int8 *)&STACK[0x2920]
        + (385
         * (((v56 ^ 0x3506177F) - 782252237) ^ ((v56 ^ 0xF68B6037) + 315797627) ^ ((v56 ^ 0x5506CC9D) - 1319166767))
         + 1368141543)
        % 0x51A);
  v58 = (((v57 >> 3) | (32 * v57)) ^ 0x99) + 1110344196;
  v59 = ((2 * (v58 & 0x14C ^ 0x9DBC28D8)) ^ 0x224105B0) & (v58 ^ 0x206D2594) ^ v58 & 0x14C ^ 0x9DBC28D8 ^ ((2 * (v58 & 0x14C ^ 0x9DBC28D8)) & 0x1300298 | 0x8080A800);
  v60 = ((2 * (v58 ^ 0x206D2594)) ^ 0x224105B0) & (v58 ^ 0x206D2594) ^ ((2 * (v58 ^ 0x206D2594)) & 0x40402D8 | 0x1808A000);
  v61 = v59 ^ v60 & 0x2001A1B6 ^ ((4 * v59) ^ 0xD181E096) & (v60 ^ 0x81B0A890);
  v62 = ((4 * v60) ^ 0xA7734BF6) & (v60 ^ 0x81B0A890) ^ v60 & 0x2001A1B6;
  v63 = v61 ^ v62 & 0xA1B1E9B6 ^ ((16 * v61) ^ 0x7A7B4436) & (v62 ^ 0x81B0A898);
  v64 = ((16 * v62) ^ 0xBABB60B6) & (v62 ^ 0x81B0A898) ^ v62 & 0xA1B1E9B6;
  v65 = v63 ^ v64 & 0xA1B1E9B6 ^ ((v63 << 8) ^ 0xADB3A1B6) & (v64 ^ 0x81B0A8D8);
  v66 = ((v64 << 8) ^ 0x111979B6) & (v64 ^ 0x81B0A8D8) ^ v64 & 0xA1B1E9B6;
  v67 = *((unsigned __int8 *)&STACK[0x2920] + v17 % 0x51A);
  v68 = *((unsigned __int8 *)&STACK[0x2920] + v30);
  v69 = v58 ^ (2
             * (v65 ^ v66 & 0x21B1E9B6 ^ ((v65 << 16) ^ 0xB69E9B6) & (v66 ^ 0x1C0C0000) ^ ((v65 << 16) ^ 0xB69E9B6) & 0x1DBCA890));
  LODWORD(STACK[0xDAC]) = v67;
  v70 = 385 * v67 - 1306 * ((3288643 * (unint64_t)(385 * v67)) >> 32);
  LODWORD(STACK[0xDEC]) = v68;
  v71 = *((unsigned __int8 *)&STACK[0x2920] + v31);
  LODWORD(STACK[0xCE8]) = v71;
  v72 = 385 * v71 - 1306 * ((3288643 * (unint64_t)(385 * v71)) >> 32);
  v73 = *((unsigned __int8 *)&STACK[0x2920]
        + (385 * v45
                       + 98945
                       - 1306 * ((3288643 * (unint64_t)(385 * v45 + 98945)) >> 32)));
  LODWORD(STACK[0x1250]) = v73;
  v74 = 385 * v73 - 658560576;
  v75 = (v74 ^ 0xBE408635) & (2 * (v74 & 0x40D640)) ^ v74 & 0x40D640;
  v76 = ((2 * (v74 ^ 0xBE412AB5)) ^ 0x2203F9EA) & (v74 ^ 0xBE412AB5) ^ (2 * (v74 ^ 0xBE412AB5)) & 0x8901FCF4;
  v77 = (v76 ^ 0x8801FC15) & (4 * v75) ^ v75;
  v78 = ((4 * (v76 ^ 0x89000415)) ^ 0x6407F3D4) & (v76 ^ 0x89000415) ^ (4 * (v76 ^ 0x89000415)) & 0x9901FCF4;
  v79 = (v78 ^ 0x1F0C1) & (16 * v77) ^ v77;
  v80 = ((16 * (v78 ^ 0x99000C21)) ^ 0x901FCF50) & (v78 ^ 0x99000C21) ^ (16 * (v78 ^ 0x99000C21)) & 0x9901FCF0;
  v81 = v79 ^ 0x9901FCF5 ^ (v80 ^ 0x9001CCA5) & (v79 << 8);
  v82 = *((unsigned __int8 *)&STACK[0x2920] + v44);
  LODWORD(STACK[0x17A0]) = v82;
  v83 = 385 * v82 - 1306 * ((3288643 * (unint64_t)(385 * v82)) >> 32);
  v84 = (v74 ^ (2
              * ((v81 << 16) & 0x19010000 ^ v81 ^ ((v81 << 16) ^ 0x7CF50000) & (((v80 ^ 0x90030A5) << 8) & 0x99010000 ^ 0x18010000 ^ (((v80 ^ 0x90030A5) << 8) ^ 0x1FC0000) & (v80 ^ 0x90030A5)))) ^ 0x25412FAA)
      % 0x51A;
  v85 = *((unsigned __int8 *)&STACK[0x2920]
        + (385 * (BYTE1(v47) ^ 0x94)
                       + 98945
                       - 1306 * ((3288643 * (unint64_t)(385 * (BYTE1(v47) ^ 0x94u) + 98945)) >> 32)));
  LODWORD(STACK[0x127C]) = v85;
  v86 = 385 * v85 + 749846887;
  v87 = (v86 ^ 0x285D3E19) & (2 * (v86 & 0x23E99)) ^ v86 & 0x23E99;
  v88 = ((2 * (v86 ^ 0x28592B39)) ^ 0x42A2B40) & (v86 ^ 0x28592B39) ^ (2 * (v86 ^ 0x28592B39)) & 0x91715A0;
  v89 = (v88 ^ 0x9000000) & (4 * v87) ^ v87;
  v90 = ((4 * (v88 ^ 0x91114A0)) ^ 0x6C5C5680) & (v88 ^ 0x91114A0) ^ (4 * (v88 ^ 0x91114A0)) & 0x7B1715A0;
  v91 = v89 ^ 0xFB1715A0 ^ (v90 ^ 0xE8141480) & (16 * v89);
  v92 = (16 * (v90 ^ 0x13030120)) & 0x7B1715A0 ^ 0x4A0605A0 ^ ((16 * (v90 ^ 0x13030120)) ^ 0x31715A00) & (v90 ^ 0x13030120);
  v93 = (v91 << 8) & 0xFB171500 ^ v91 ^ ((v91 << 8) ^ 0x1715A000) & v92;
  v94 = v86 ^ 0x214A15D9 ^ (2
                          * ((v93 << 16) & 0x7B170000 ^ v93 ^ ((v93 << 16) ^ 0x15A00000) & ((v92 << 8) & 0x7B170000 ^ 0x68020000 ^ ((v92 << 8) ^ 0x17150000) & v92)));
  v95 = v94 % 0x51A - 1926392729 - ((2 * (v94 % 0x51A)) & 0x8CE);
  v96 = *(unsigned __int8 *)(v3 + (v69 ^ 0x85C98BDC)) ^ 0x38;
  LODWORD(STACK[0xCE0]) = v96;
  v97 = 385 * v96 - 1306 * ((3288643 * (unint64_t)(385 * v96)) >> 32);
  v98 = *((unsigned __int8 *)&STACK[0x2920] + (v95 ^ 0x8D2D9467));
  LODWORD(v98) = v98 ^ 0xD ^ *(unsigned __int8 *)((v98 ^ 0xCF) + v3 + 4174);
  v99 = *((unsigned __int8 *)&STACK[0x2920] + ((v72 - 1926392729 - ((2 * v72) & 0x8CE)) ^ 0x8D2D9467));
  LODWORD(STACK[0x1498]) = v99;
  v100 = *((unsigned __int8 *)&STACK[0x2920] + v83);
  LODWORD(STACK[0x14D0]) = v100;
  v101 = 63 * v98;
  LODWORD(STACK[0x14A4]) = 63 * v98;
  v102 = *((unsigned __int8 *)&STACK[0x2920] + v84);
  LODWORD(STACK[0x1438]) = v102;
  STACK[0x1410] = v99 ^ v100 ^ 0x12 ^ v102;
  v103 = ((v99 ^ v100) ^ 0x12u ^ v102) + 41218;
  STACK[0x13F8] = v103;
  v104 = 63 * (*(unsigned __int8 *)(v3 + v103) ^ 9);
  LODWORD(v98) = *((unsigned __int8 *)&STACK[0x2920] + ((v70 - 1926392729 - ((2 * v70) & 0x8CE)) ^ 0x8D2D9467));
  LODWORD(STACK[0x13F0]) = v98;
  LODWORD(v103) = *((unsigned __int8 *)&STACK[0x2920]
                  + (385 * v68 - 1306 * ((3288643 * (unint64_t)(385 * v68)) >> 32)));
  LODWORD(STACK[0x1450]) = v103;
  LODWORD(v103) = v103 ^ v98;
  LODWORD(STACK[0x1480]) = v103;
  v105 = v101 ^ v103 ^ v8[236];
  LOBYTE(v98) = *((_BYTE *)&STACK[0x2920] + (v46 - 1306 * ((3288643 * (unint64_t)v46) >> 32)));
  LODWORD(v103) = v8[8] ^ v104;
  v106 = *((unsigned __int8 *)&STACK[0x2920] + v97);
  LOBYTE(v46) = *((_BYTE *)&STACK[0x2920] + v41);
  LODWORD(STACK[0x1218]) = v103;
  v107 = 385 * (v103 ^ v46);
  LODWORD(STACK[0x1240]) = v107 + 200585;
  STACK[0x14A8] = v105 ^ v106;
  LODWORD(STACK[0x1380]) = (385 * (v105 ^ v106 ^ v98) + 200585)
                         % (569250511 * (((v107 + 200585) & 0x537C6) + ((-200586 - v107) & 0xF7BD37C6)));
  v108 = STACK[0x173C];
  v109 = (LODWORD(STACK[0x173C]) >> (LODWORD(STACK[0x1898]) - 100)) ^ 0x2D;
  v110 = 385 * v109 + 98945 - 1306 * ((3288643 * (unint64_t)(385 * v109 + 98945)) >> 32);
  v111 = BYTE2(LODWORD(STACK[0x112C])) ^ 0x2D;
  LODWORD(v98) = LODWORD(STACK[0x14D8]) ^ 0x8D;
  v112 = STACK[0x1430];
  v113 = 385 * (BYTE1(v112) ^ 0x94)
       + 98945
       - 1306 * ((3288643 * (unint64_t)(385 * (BYTE1(v112) ^ 0x94u) + 98945)) >> 32);
  LODWORD(v103) = *((unsigned __int8 *)&STACK[0x2920]
                  + (385 * v111
                                 + 98945
                                 - 1306 * ((3288643 * (unint64_t)(385 * v111 + 98945)) >> 32)));
  LODWORD(STACK[0xCD4]) = v103;
  v114 = 385 * v103 - 1306 * ((3288643 * (unint64_t)(385 * v103)) >> 32);
  v115 = *((unsigned __int8 *)&STACK[0x2920]
         + (385 * v98
                        + 98945
                        - 1306 * ((3288643 * (unint64_t)(385 * v98 + 98945)) >> 32)));
  STACK[0xDB8] = v115;
  LODWORD(v98) = 385 * v115 - 1306 * ((3288643 * (unint64_t)(385 * v115)) >> 32);
  v116 = *((unsigned __int8 *)&STACK[0x2920] + v114);
  LODWORD(STACK[0x14D8]) = v116;
  LOBYTE(v114) = *((_BYTE *)&STACK[0x2920] + (((_DWORD)v98 - 1926392729 - ((2 * (_DWORD)v98) & 0x8CE)) ^ 0x8D2D9467));
  LODWORD(v98) = v113 - 1926392729 - ((2 * v113) & 0x8CE);
  LODWORD(v115) = ((*(unsigned __int8 *)(v3 + ((71 * v114) ^ 0xB1u) + 22623) - 84) ^ 0x29) - 107;
  LODWORD(STACK[0x13D0]) = v115;
  STACK[0x1468] = (unint64_t)v8;
  v117 = v116 ^ v115 ^ v8[138];
  LOBYTE(v110) = *((_BYTE *)&STACK[0x2920] + v110);
  LODWORD(v115) = v8[149] ^ v106;
  v118 = v106;
  LODWORD(STACK[0x13CC]) = v106;
  LODWORD(STACK[0x1238]) = v115;
  v119 = (v115 ^ v110) + 1518732950;
  v120 = (2 * (v119 & 0x173)) & 0x7E ^ v119 & 0x173 ^ ((2 * (v119 & 0x173)) | 0x400) & (v119 ^ 0x41756A1C);
  v121 = (2 * (v119 ^ 0x41756A1C)) & 0x16E ^ 0x121 ^ ((2 * (v119 ^ 0x41756A1C)) ^ 0x81120DE) & (v119 ^ 0x41756A1C);
  v122 = (4 * v120) & 0x640C916C ^ v120 ^ ((4 * v120) | 0x800) & v121;
  v123 = (4 * v121) & 0x640C916C ^ 0x640C9043 ^ ((4 * v121) ^ 0x103245BC) & v121;
  v124 = (16 * v122) & 0x640C9160 ^ v122 ^ ((16 * v122) ^ 0x2000) & v123;
  v125 = (16 * v123) & 0xE40C9160 ^ 0xA404810F ^ ((16 * v123) ^ 0x40C916F0) & v123;
  v126 = v124 ^ 0xE40C936F ^ (v124 << 8) & 0x640C9100 ^ ((v124 << 8) ^ 0x20000) & v125;
  v127 = v119 ^ (2
               * ((v126 << 16) & 0x640C0000 ^ v126 ^ ((v126 << 16) ^ 0x116F0000) & ((v125 << 8) & 0x640C0000 ^ 0x600C0000 ^ ((v125 << 8) ^ 0xC910000) & v125)));
  v128 = 385
       * (((v127 ^ 0x331152F) + 479962907) ^ ((v127 ^ 0x8291D1B5) - 1657052287) ^ ((v127 ^ 0xECD81D37) - 210587901))
       - 1401208274;
  v129 = (v128 ^ 0xA482EA34) & (2 * (v128 & 0xA510ECB9)) ^ v128 & 0xA510ECB9;
  v130 = ((2 * (v128 ^ 0xEEA2E216)) ^ 0x97641D5E) & (v128 ^ 0xEEA2E216) ^ (2 * (v128 ^ 0xEEA2E216)) & 0x4BB20EAE;
  v131 = (v130 ^ 0x4010040D) & (4 * v129) ^ v129;
  v132 = ((4 * (v130 ^ 0x489202A1)) ^ 0x2EC83ABC) & (v130 ^ 0x489202A1) ^ (4 * (v130 ^ 0x489202A1)) & 0x4BB20EAC;
  v133 = (v132 ^ 0xA800AA3) & (16 * v131) ^ v131;
  v134 = ((16 * (v132 ^ 0x41320403)) ^ 0xBB20EAF0) & (v132 ^ 0x41320403) ^ (16 * (v132 ^ 0x41320403)) & 0x4BB20EA0;
  v135 = v133 ^ 0x4BB20EAF ^ (v134 ^ 0xB200A00) & (v133 << 8);
  LOBYTE(v98) = *((_BYTE *)&STACK[0x2920] + (v98 ^ 0x8D2D9467));
  v136 = (v128 ^ (2
                * ((v135 << 16) & 0x4BB20000 ^ v135 ^ ((v135 << 16) ^ 0xEAF0000) & (((v134 ^ 0x4092040F) << 8) & 0x4BB20000 ^ 0x49B00000 ^ (((v134 ^ 0x4092040F) << 8) ^ 0xB20E0000) & (v134 ^ 0x4092040F)))) ^ 0x2730F1E7)
       % 0x51A;
  LODWORD(STACK[0x1370]) = v136;
  LODWORD(STACK[0x1214]) = v118 ^ v117;
  v137 = 385 * (v118 ^ v117 ^ v98) + 696245377;
  LODWORD(v98) = (2 * (v137 & 0x833308)) & 0x1040610 ^ (v137 & 0x833308 | 0x6D3488B0) ^ (2 * (v137 & 0x833308)) & (v137 ^ 0xBBB7BCF8);
  v138 = (2 * (v137 ^ 0xBBB7BCF8)) & 0x25348FF0 ^ 0x25148010 ^ ((2 * (v137 ^ 0xBBB7BCF8)) ^ 0x92691FE0) & (v137 ^ 0xBBB7BCF8);
  LODWORD(v98) = (4 * v98) & 0x24148EE0 ^ v98 & 0x49A7F738 ^ ((4 * v98) ^ 0xB4D222C0) & v138;
  v139 = (4 * v138) & 0x6D348FF0 ^ 0x49248030 ^ ((4 * v138) ^ 0xB4D23FC0) & v138;
  LODWORD(v98) = (16 * v98) & 0x6D348FC0 ^ v98 ^ ((16 * v98) ^ 0xD3482F00) & v139;
  v140 = (16 * v139) & 0x6D348FF0 ^ 0x2C3400F0 ^ ((16 * v139) ^ 0xD348FF00) & v139;
  LODWORD(v98) = v98 ^ ((_DWORD)v98 << 8) & 0x6D348F00 ^ (((_DWORD)v98 << 8) ^ 0x348DF000) & v140;
  LODWORD(STACK[0x1368]) = (v137 ^ (2
                                  * (((v98 ^ 0x65048200) << 16) & 0x6D340000 ^ v98 ^ 0x65048200 ^ (((v98 ^ 0x65048200) << 16) ^ 0xFF00000) & ((v140 << 8) & 0x6D340000 ^ 0x49300000 ^ ((v140 << 8) ^ 0x348F0000) & v140))) ^ 0x168A2CE8)
                         % ((v136 & 0x663) + 1207396023 + (v136 & 0x663 ^ 0xB8089E63));
  v141 = LODWORD(STACK[0x15C0]) ^ HIWORD(LODWORD(STACK[0x1440]));
  LODWORD(STACK[0x1350]) = LODWORD(STACK[0x1520]) % 0x51A
                         - 1926392729
                         - ((2 * (LODWORD(STACK[0x1520]) % 0x51A)) & 0x8CE);
  v142 = STACK[0x1708];
  LODWORD(STACK[0x15C0]) = 385 * (BYTE2(LODWORD(STACK[0x1708])) ^ 0x2D)
                         + 98945
                         - 1306
                         * ((3288643 * (unint64_t)(385 * (BYTE2(LODWORD(STACK[0x1708])) ^ 0x2Du) + 98945)) >> 32);
  LODWORD(STACK[0x1340]) = 385 * (BYTE1(v108) ^ 0x94)
                         + 98945
                         - 1306 * ((3288643 * (unint64_t)(385 * (BYTE1(v108) ^ 0x94u) + 98945)) >> 32);
  LODWORD(STACK[0x139C]) = 385 * LODWORD(STACK[0x15F0])
                         + 98945
                         - 1306
                         * ((3288643
                           * (unint64_t)(385 * LODWORD(STACK[0x15F0]) + 98945)) >> 32);
  LODWORD(v98) = BYTE1(LODWORD(STACK[0x144C])) ^ 0x94;
  v143 = v98 + 257;
  LODWORD(STACK[0x1328]) = 385
                         * ((v108 ^ 0x67)
                          - ((-258 - (_DWORD)v98) & 0xFFFFFEFF ^ ((_DWORD)v98 + 257) & 0xFFFFFEFF))
                         % 0x51A;
  LODWORD(STACK[0x15F0]) = 385 * (v142 ^ 0x67)
                         + 98945
                         - 1306 * ((3288643 * (unint64_t)(385 * (v142 ^ 0x67u) + 98945)) >> 32);
  v144 = 385 * (LODWORD(STACK[0x1610]) ^ 0x8D)
       + 98945
       - 1306 * ((3288643 * (unint64_t)(385 * (LODWORD(STACK[0x1610]) ^ 0x8Du) + 98945)) >> 32);
  LODWORD(STACK[0x1364]) = 385 * (LODWORD(STACK[0x1730]) ^ 0x8D)
                         + 98945
                         - 1306 * ((3288643 * (unint64_t)(385 * (LODWORD(STACK[0x1730]) ^ 0x8Du) + 98945)) >> 32);
  LODWORD(STACK[0x1730]) = 385 * LODWORD(STACK[0x1600])
                         + 98945
                         - 1306
                         * ((3288643 * (unint64_t)(385 * LODWORD(STACK[0x1600]) + 98945)) >> 32);
  LODWORD(v115) = (((_BYTE)v141 << 6) - (v141 ^ 0x20));
  LODWORD(STACK[0x10D0]) = v115;
  LODWORD(v115) = v115 + 257;
  LODWORD(STACK[0x116C]) = v115;
  LODWORD(STACK[0x1708]) = 385 * v115 - 1306 * ((3288643 * (unint64_t)(385 * v115)) >> 32);
  LODWORD(v115) = 385 * LODWORD(STACK[0x1818])
                + 98945
                - 1306
                * ((3288643 * (unint64_t)(385 * LODWORD(STACK[0x1818]) + 98945)) >> 32);
  LODWORD(STACK[0x1338]) = v115 - 1926392729 - ((2 * v115) & 0x8CE);
  LODWORD(v115) = ((LODWORD(STACK[0x16F0]) ^ 0x38) + 257) * ((v41 & 0x181 ^ 0x181) + (v41 & 0x181));
  LODWORD(STACK[0x1818]) = v115 - 1306 * ((3288643 * (unint64_t)v115) >> 32);
  LODWORD(v115) = *((unsigned __int8 *)&STACK[0x2920]
                  + (385 * LODWORD(STACK[0x14F8])
                                 - 1306
                                 * ((3288643 * (unint64_t)(385 * LODWORD(STACK[0x14F8]))) >> 32)));
  LODWORD(STACK[0x12EC]) = (v115 >> 3) | (32 * v115);
  LODWORD(v115) = 385 * (LODWORD(STACK[0x1828]) ^ 0x8D)
                + 98945
                - 1306 * ((3288643 * (unint64_t)(385 * (LODWORD(STACK[0x1828]) ^ 0x8Du) + 98945)) >> 32);
  LODWORD(STACK[0x1360]) = v115 - 1926392729 - ((2 * v115) & 0x8CE);
  LODWORD(STACK[0x1610]) = 385 * LODWORD(STACK[0x1650])
                         + 98945
                         - 1306
                         * ((3288643
                           * (unint64_t)(385 * LODWORD(STACK[0x1650]) + 98945)) >> 32);
  LODWORD(v115) = 385 * (BYTE2(LODWORD(STACK[0xE38])) ^ 0x2D) + 98945;
  LODWORD(STACK[0x1330]) = v115 - 1306 * ((3288643 * (unint64_t)v115) >> 32);
  v145 = STACK[0xDB0];
  LODWORD(v115) = 385 * (BYTE1(LODWORD(STACK[0xDB0])) ^ 0x94) + 98945;
  LODWORD(STACK[0x1348]) = v115 - 1306 * ((3288643 * (unint64_t)v115) >> 32);
  LODWORD(STACK[0x1600]) = 385 * (BYTE2(v145) ^ 0x2D)
                         + 98945
                         - 1306 * ((3288643 * (unint64_t)(385 * (BYTE2(v145) ^ 0x2Du) + 98945)) >> 32);
  v146 = STACK[0x1890];
  LODWORD(v115) = LODWORD(STACK[0x17E0]);
  v147 = 385 * v115 + 98945 - 1306 * ((3288643 * (unint64_t)(385 * v115 + 98945)) >> 32);
  v148 = 385 * (v145 ^ 0x67) + 1216487461;
  LODWORD(v98) = (v148 ^ 0xB80E7B19) & (2 * (v148 & 0x7625C)) ^ v148 & 0x7625C;
  v149 = ((2 * (v148 ^ 0xB808BFA1)) ^ 0x108FBBFA) & (v148 ^ 0xB808BFA1) ^ (2 * (v148 ^ 0xB808BFA1)) & 0xF77DDFC;
  LODWORD(v98) = (v149 ^ 0x127DDF4) & (4 * v98) ^ v98;
  v150 = ((4 * (v149 ^ 0x1104405)) ^ 0x3DDF77F4) & (v149 ^ 0x1104405) ^ (4 * (v149 ^ 0x1104405)) & 0xF77DDFC;
  LODWORD(v98) = (v150 ^ 0xD5755E0) & (16 * v98) ^ v98;
  v151 = ((16 * (v150 ^ 0x2208809)) ^ 0xF77DDFD0) & (v150 ^ 0x2208809) ^ (16 * (v150 ^ 0x2208809)) & 0xF77DDF0;
  LODWORD(v98) = v98 ^ 0xF77DDFD ^ (v151 ^ 0x775DD00) & ((_DWORD)v98 << 8);
  v152 = ((_DWORD)v98 << 16) & 0xF770000 ^ v98 ^ (((_DWORD)v98 << 16) ^ 0x5DFD0000) & (((v151 ^ 0x802002D) << 8) & 0xF770000 ^ 0x8220000 ^ (((v151 ^ 0x802002D) << 8) ^ 0x77DD0000) & (v151 ^ 0x802002D));
  LODWORD(v98) = 385 * (LODWORD(STACK[0x1748]) ^ 0x8D) + 430310329;
  v153 = (v98 ^ 0x57137C83) & (2 * (v98 & 0xB7EC8)) ^ v98 & 0xB7EC8;
  v154 = ((2 * (v98 ^ 0x57178C83)) ^ 0x4299E496) & (v98 ^ 0x57178C83) ^ (2 * (v98 ^ 0x57178C83)) & 0xB14CF24A;
  v155 = (v154 ^ 0x9108E009) & (4 * v153) ^ v153;
  v156 = ((4 * (v154 ^ 0x91441249)) ^ 0xC533C92C) & (v154 ^ 0x91441249) ^ (4 * (v154 ^ 0x91441249)) & 0xB14CF248;
  v157 = (v156 ^ 0x8100C003) & (16 * v155) ^ v155;
  v158 = ((16 * (v156 ^ 0x304C3243)) ^ 0x14CF24B0) & (v156 ^ 0x304C3243) ^ (16 * (v156 ^ 0x304C3243)) & 0xB14CF240;
  v159 = v157 ^ 0xB14CF24B ^ (v158 ^ 0x104C2000) & (v157 << 8);
  v160 = (v159 << 16) & 0x314C0000 ^ v159 ^ ((v159 << 16) ^ 0x724B0000) & (((v158 ^ 0xA100D24B) << 8) & 0x314C0000 ^ 0x310C0000 ^ (((v158 ^ 0xA100D24B) << 8) ^ 0x4CF20000) & (v158 ^ 0xA100D24B));
  v161 = 385 * (LODWORD(STACK[0x1858]) ^ 0x8D) + 23969366;
  v162 = (v161 ^ 0x4C1BF72B) & (2 * (v161 & 0x3C42B)) ^ v161 & 0x3C42B;
  v163 = ((2 * (v161 ^ 0x4C19FF3D)) ^ 0x4514762C) & (v161 ^ 0x4C19FF3D) ^ (2 * (v161 ^ 0x4C19FF3D)) & 0xB28A3B16;
  LODWORD(v8) = (v163 ^ 0x92803804) & (4 * v162) ^ v162;
  v164 = ((4 * (v163 ^ 0x928A0912)) ^ 0xCA28EC58) & (v163 ^ 0x928A0912) ^ (4 * (v163 ^ 0x928A0912)) & 0xB28A3B14;
  LODWORD(v8) = (v164 ^ 0x82082810) & (16 * (_DWORD)v8) ^ v8;
  v165 = ((16 * (v164 ^ 0x30821306)) ^ 0x28A3B160) & (v164 ^ 0x30821306) ^ (16 * (v164 ^ 0x30821306)) & 0xB28A3B10;
  LODWORD(v8) = v8 ^ 0xB28A3B16 ^ (v165 ^ 0x20823116) & ((_DWORD)v8 << 8);
  v166 = ((_DWORD)v8 << 16) & 0x328A0000 ^ v8 ^ (((_DWORD)v8 << 16) ^ 0x3B160000) & (((v165 ^ 0x92080A16) << 8) & 0x328A0000 ^ 0x30800000 ^ (((v165 ^ 0x92080A16) << 8) ^ 0xA3B0000) & (v165 ^ 0x92080A16));
  LODWORD(v8) = (BYTE2(v47) ^ 0x2D) + 448715288;
  v167 = (2 * (v8 & 0xE9)) & (v8 ^ 0x954AA059) ^ v8 & 0xE9 ^ ((2 * (v8 & 0xE9)) & 0x90 | 0x40020000);
  v168 = (2 * (v8 ^ 0x954AA059)) & 0x100886B0 ^ 0x10088290 ^ ((2 * (v8 ^ 0x954AA059)) ^ 0x80140960) & (v8 ^ 0x954AA059);
  v169 = (4 * v167) & 0x700B86B0 ^ v167 ^ ((4 * v167) ^ 0x81800) & v168;
  v170 = (4 * v168) & 0x700B86B0 ^ 0x30018430 ^ ((4 * v168) ^ 0xC02E1AC0) & v168;
  v171 = (16 * v169) & 0x700B86B0 ^ v169 ^ ((16 * v169) ^ 0xA06000) & v170;
  v172 = (16 * v170) & 0x700B86B0 ^ 0x700384B0 ^ ((16 * v170) ^ 0xB86B00) & v170;
  v173 = v171 ^ (v171 << 8) & 0x700B8600 ^ ((v171 << 8) ^ 0xA060000) & v172;
  v174 = v8 ^ (2
                           * (((v173 ^ 0x300380B0) << 16) & 0x700B0000 ^ v173 ^ 0x300380B0 ^ (((v173 ^ 0x300380B0) << 16) ^ 0x6B00000) & ((v172 << 8) & 0x700B0000 ^ 0x70090000 ^ ((v172 << 8) ^ 0xB860000) & v172)));
  LODWORD(STACK[0x1320]) = (v161 ^ (2 * v166) ^ 0xFF83B207) % 0x51A;
  v175 = (v148 ^ (2 * v152) ^ 0xB37AD9A6) % 0x51A;
  LODWORD(STACK[0x1858]) = v175;
  v176 = (385
        * (((v174 ^ 0xA44CE047) - 741826473) ^ ((v174 ^ 0x9050EF2A) - 405491908) ^ ((v174 ^ 0x314A24E4) + 1187931382))
        + 1368141543)
       % 0x51A;
  v177 = (v98 ^ (2 * v160) ^ 0xE4529A5E) % 0x51A;
  LODWORD(STACK[0x1318]) = 385 * ((((v175 & 0x5A1 ^ 0x441545A1) + (v175 & 0x5A1)) ^ 0x441544A0) + (BYTE2(v112) ^ 0x2D))
                         % 0x51A;
  LODWORD(STACK[0x1748]) = 385 * (LODWORD(STACK[0x1868]) ^ 0x8D)
                         + 98945
                         - 1306 * ((3288643 * (unint64_t)(385 * (LODWORD(STACK[0x1868]) ^ 0x8Du) + 98945)) >> 32);
  v178 = STACK[0x15AC];
  LODWORD(STACK[0x1868]) = 385 * (BYTE1(LODWORD(STACK[0x15AC])) ^ 0x94)
                         + 98945
                         - 1306
                         * ((3288643 * (unint64_t)(385 * (BYTE1(LODWORD(STACK[0x15AC])) ^ 0x94u) + 98945)) >> 32);
  v179 = 385 * (BYTE2(v178) ^ 0x2D);
  LODWORD(v98) = v179 + 98945 - 1306 * ((3288643 * (unint64_t)(v179 + 98945)) >> 32);
  LODWORD(STACK[0x1828]) = v98 - 1926392729 - ((2 * v98) & 0x8CE);
  LODWORD(v8) = 385 * (v112 ^ 0x67) + 1983973930;
  v180 = (v8 ^ 0x9A417557) & (2 * ((unsigned __int16)v8 & 0x7857)) ^ (unsigned __int16)v8 & 0x7857;
  v181 = (2 * (v8 ^ 0x9A4115F1)) & 0x13816DA6 ^ 0x108124A2 ^ ((2 * (v8 ^ 0x9A4115F1)) ^ 0x2402DB4C) & (v8 ^ 0x9A4115F1);
  v182 = (4 * v180) & 0x161A4 ^ v180 ^ ((4 * v180) | 0x3000000) & v181;
  v183 = (4 * v181) & 0x13816DA4 ^ 0x11804926 ^ ((4 * v181) ^ 0x4E05B698) & v181;
  v184 = (16 * v182) & 0x13816DA0 ^ v182 ^ ((16 * v182) ^ 0x3C000000) & v183;
  v185 = (16 * v183) & 0x13816DA0 ^ 0x3812586 ^ ((16 * v183) ^ 0x3816DA60) & v183;
  v186 = v184 ^ (v184 << 8) & 0x13816D00 ^ ((v184 << 8) ^ 0xC0000000) & v185;
  LODWORD(STACK[0x1310]) = (v8 ^ 0xADC2A31B ^ (2
                                                           * (((v186 ^ 0x416DA6) << 16) & 0x13810000 ^ v186 ^ 0x416DA6 ^ (((v186 ^ 0x416DA6) << 16) ^ 0x6DA60000) & ((v185 << 8) & 0x13810000 ^ 0x12800000 ^ ((v185 << 8) ^ 0x16D0000) & v185))))
                         % 0x51A;
  LODWORD(STACK[0x1358]) = v147 - 1926392729 - ((2 * v147) & 0x8CE);
  LOBYTE(v115) = (-127 * v115 - 127 - 26 * ((3288643 * (unint64_t)(385 * v115 + 98945)) >> 32) + 103) & 1;
  LOBYTE(v186) = (((v147 + 103 - ((2 * v147) & 0xCE)) & 0xA9 ^ 0xA1)
                - ((2 * ((v147 + 103 - ((2 * v147) & 0xCE)) & 0xA9 ^ 0xA1)) & 0x3E)
                + 79) ^ 0xCF;
  LODWORD(v115) = *(unsigned __int8 *)(STACK[0x18B8]
                                     + ((((v186 | 0x5D) - (v186 | 0xA2) - 94) ^ 0x5D | ((v115 ^ 0x47) - v115 + ((v147 + 103 - ((2 * v147) & 0xCE)) & 0xA9 ^ 0x80)) ^ 0x4F) ^ (-3 * *((_BYTE *)&STACK[0x2920] + (385 * (v178 ^ 0x67) + 98945 - 1306 * ((3288643 * (unint64_t)(385 * (v178 ^ 0x67u) + 98945)) >> 32)))) ^ 0xB2u)
                                     + 39526);
  v187 = *((unsigned __int8 *)&STACK[0x2920]
         + (385 * v143 - 1306 * ((3288643 * (unint64_t)(385 * v143)) >> 32)));
  LODWORD(v115) = v115 ^ ((v115 & 0xAD ^ 0xA0) >> (((2 - v179) & 3) + ((v179 - 127) & 3u)));
  LODWORD(STACK[0x17E0]) = v187;
  LODWORD(STACK[0x1650]) = ((v115 ^ 0x58) >> 2) | ((_DWORD)v115 << 6);
  v188 = *(unsigned __int8 *)(STACK[0x18B8]
                            + ((-3
                                               * *((_BYTE *)&STACK[0x2920]
                                                 + (385 * v187
                                                                - 1306
                                                                * ((3288643
                                                                  * (unint64_t)(385 * v187)) >> 32)))) ^ 0x1Bu)
                            + 39526);
  LODWORD(v115) = 385 * (BYTE1(LODWORD(STACK[0x112C])) ^ 0x94);
  LODWORD(STACK[0x10C0]) = v115;
  LODWORD(v115) = v115 + 98945;
  LODWORD(STACK[0x10C4]) = v115;
  LODWORD(v115) = *((unsigned __int8 *)&STACK[0x2920]
                  + (v115 - 1306 * ((3288643 * (unint64_t)v115) >> 32)));
  LODWORD(STACK[0xD8C]) = v115;
  v189 = 385 * v115 - 1306 * ((3288643 * (unint64_t)(385 * v115)) >> 32);
  v190 = (((v188 >> 3) & 0x15 ^ v188) >> 2) | (((v188 >> 3) & 0x15 ^ v188) << 6);
  v191 = *((unsigned __int8 *)&STACK[0x2920]
         + (385 * (BYTE2(v146) ^ 0x2D)
                        + 98945
                        - 1306 * ((3288643 * (unint64_t)(385 * (BYTE2(v146) ^ 0x2Du) + 98945)) >> 32)));
  LODWORD(STACK[0xC60]) = v191;
  v192 = 385 * v191 + 1501463868;
  v193 = (v192 ^ 0x6E6170C4) & (2 * (v192 & 0x817AC4)) ^ v192 & 0x817AC4;
  v194 = ((2 * (v192 ^ 0x6E6125C4)) ^ 0x11C0BE00) & (v192 ^ 0x6E6125C4) ^ (2 * (v192 ^ 0x6E6125C4)) & 0x48E05F00;
  v195 = (v194 ^ 0x1E00) & (4 * v193) ^ v193;
  v196 = ((4 * (v194 ^ 0x48204100)) ^ 0x23817C00) & (v194 ^ 0x48204100) ^ (4 * (v194 ^ 0x48204100)) & 0xC8E05F00;
  v197 = v195 ^ 0xC8E05F00 ^ (v196 ^ 0x805C00) & (16 * v195);
  v198 = (16 * (v196 ^ 0xC8600300)) & 0xC8E05F00 ^ 0x40E00F00 ^ ((16 * (v196 ^ 0xC8600300)) ^ 0x8E05F000) & (v196 ^ 0xC8600300);
  v199 = (v197 << 8) & 0xC8E05F00 ^ v197 ^ ((v197 << 8) ^ 0xE05F0000) & v198;
  v200 = *((unsigned __int8 *)&STACK[0x2920] + v144);
  STACK[0xDF8] = v200;
  LOBYTE(v143) = (*((_BYTE *)&STACK[0x2920] + v189) >> 3) | (32 * *((_BYTE *)&STACK[0x2920] + v189));
  v201 = *((unsigned __int8 *)&STACK[0x2920] + v177);
  v202 = v192 ^ (2
               * ((v199 << 16) & 0x48E00000 ^ v199 ^ ((v199 << 16) ^ 0x5F000000) & ((v198 << 8) & 0xC8E00000 ^ 0x8A00000 ^ ((v198 << 8) ^ 0xE05F0000) & v198))) ^ 0x27C1C4C4;
  LODWORD(STACK[0xD5C]) = v201;
  v203 = 385 * v201 - 1327223792;
  v204 = (v203 ^ 0xEC0B9BFE) & (2 * (v203 & 0x3D3F0)) ^ v203 & 0x3D3F0;
  v205 = ((2 * (v203 ^ 0xEC08BB1E)) ^ 0x4426D1DC) & (v203 ^ 0xEC08BB1E) ^ (2 * (v203 ^ 0xEC08BB1E)) & 0xA11368EE;
  v206 = (v205 ^ 0xA10260E2) & (4 * v204) ^ v204;
  v207 = ((4 * (v205 ^ 0xA1112822)) ^ 0x8C4DA3B8) & (v205 ^ 0xA1112822) ^ (4 * (v205 ^ 0xA1112822)) & 0xA31368EC;
  v208 = (v207 ^ 0x800120A6) & (16 * v206) ^ v206;
  v209 = ((16 * (v207 ^ 0x23124846)) ^ 0x31368EE0) & (v207 ^ 0x23124846) ^ (16 * (v207 ^ 0x23124846)) & 0xA31368E0;
  v210 = v208 ^ 0xA31368EE ^ (v209 ^ 0x2112080E) & (v208 << 8);
  v211 = (v210 << 16) & 0x23130000 ^ v210 ^ ((v210 << 16) ^ 0x68EE0000) & (((v209 ^ 0x8201600E) << 8) & 0x23130000 ^ 0x20130000 ^ (((v209 ^ 0x8201600E) << 8) ^ 0x13680000) & (v209 ^ 0x8201600E));
  v212 = *((unsigned __int8 *)&STACK[0x2920] + v176);
  LODWORD(STACK[0x14C8]) = v212;
  v213 = 385 * v212 - 1369943293;
  v214 = (v213 ^ 0x40B78EF9) & (2 * (v213 & 0x3ACFD)) ^ v213 & 0x3ACFD;
  v215 = ((2 * (v213 ^ 0x40B38E81)) ^ 0x222844F8) & (v213 ^ 0x40B38E81) ^ (2 * (v213 ^ 0x40B38E81)) & 0x1114227C;
  v216 = (v215 ^ 0x11000078) & (4 * v214) ^ v214;
  v217 = ((4 * (v215 ^ 0x11142204)) ^ 0x445089F0) & (v215 ^ 0x11142204) ^ (4 * (v215 ^ 0x11142204)) & 0x1114227C;
  v218 = (v217 ^ 0x10007C) & (16 * v216) ^ v216;
  v219 = ((16 * (v217 ^ 0x1104220C)) ^ 0x114227C0) & (v217 ^ 0x1104220C) ^ (16 * (v217 ^ 0x1104220C)) & 0x11142270;
  v220 = v218 ^ 0x1114227C ^ (v219 ^ 0x11002200) & (v218 << 8);
  v221 = *((unsigned __int8 *)&STACK[0x2920] + v202 % 0x51A);
  v222 = *((unsigned __int8 *)&STACK[0x2920]
         + (385 * (BYTE1(v146) ^ 0x94)
                        + 98945
                        - 1306 * ((3288643 * (unint64_t)(385 * (BYTE1(v146) ^ 0x94u) + 98945)) >> 32)));
  v223 = v213 ^ (2
               * ((v220 << 16) & 0x11140000 ^ v220 ^ ((v220 << 16) ^ 0x227C0000) & (((v219 ^ 0x14003C) << 8) & 0x11140000 ^ 0x1140000 ^ (((v219 ^ 0x14003C) << 8) ^ 0x14220000) & (v219 ^ 0x14003C)))) ^ 0x73A7E805;
  LODWORD(STACK[0x1270]) = v222;
  v224 = *(unsigned __int8 *)(STACK[0x18B8] + (((v221 >> 3) | (32 * v221)) ^ 0x9Du) + 1665) - 38;
  v225 = v224 ^ (v224 >> 4) ^ (v224 >> 5);
  v226 = *((unsigned __int8 *)&STACK[0x2920]
         + (385 * v222 - 1306 * ((3288643 * (unint64_t)(385 * v222)) >> 32)));
  v227 = v203 ^ (2 * v211) ^ 0x4939022C;
  v228 = STACK[0x14D8];
  v229 = (63
        * (v226 ^ v228 ^ 0xD ^ *(unsigned __int8 *)(STACK[0x18B8] + ((v226 ^ v228) ^ 0xCFu) + 4174))) ^ *((unsigned __int8 *)&STACK[0x2920] + v223 % 0x51A);
  v230 = *(unsigned __int8 *)(STACK[0x18B8] + (v143 ^ 0x99u) + 4432);
  v231 = *(unsigned __int8 *)(STACK[0x18B8]
                            + ((71 * (LODWORD(STACK[0x14D8]) ^ 0x38 ^ v230 ^ LODWORD(STACK[0x13F0]))) ^ 0xB1u)
                            + 22623)
       - ((STACK[0x13F8] | (125 - STACK[0x1410])) & 0x54);
  v232 = *((unsigned __int8 *)&STACK[0x2920] + v227 % 0x51A);
  v233 = v190 ^ 0x13;
  v234 = STACK[0x1450];
  v235 = LODWORD(STACK[0x14D8]) ^ 0x38 ^ LODWORD(STACK[0x1450]) ^ v230 ^ v190 ^ 0x13;
  v236 = STACK[0x1438];
  v237 = STACK[0x13CC];
  v238 = *(unsigned __int8 *)(STACK[0x18B8]
                            + ((-3
                                               * (v235 ^ *((_BYTE *)&STACK[0x2920]
                                                         + (385 * v200
                                                                        - 1306
                                                                        * ((3288643
                                                                          * (unint64_t)(385 * v200)) >> 32))) ^ LODWORD(STACK[0x1438]) ^ v232 ^ LODWORD(STACK[0x13CC]))) ^ 0x1Bu)
                            + 39526);
  LOBYTE(v190) = (((v238 >> 3) & 0x15 ^ v238) >> 2) | (((v238 >> 3) & 0x15 ^ v238) << 6);
  v239 = (71 * (LODWORD(STACK[0x14D8]) ^ 0xE2 ^ v225)) ^ 0xB1;
  LODWORD(STACK[0x11D8]) = v239;
  v240 = (v239 + 516738351) ^ 0x72B75C72;
  v241 = (2 * (((_WORD)v239 - 13009) & 0xB30)) & 0xFFDF ^ (v239 + 516738351) & 0xB30 ^ ((2 * ((v239 + 516738351) & 0xB30)) | 0x10000) & v240;
  LODWORD(v8) = (2 * v240) & 0x742 ^ 0x5142 ^ ((2 * v240) ^ 0x24098284) & v240;
  v242 = (4 * v241) & 0x1384D740 ^ v241 ^ ((4 * v241) | 0x20000) & v8;
  LODWORD(v8) = (4 * (_DWORD)v8) & 0x9384D740 ^ 0x91848242 ^ ((4 * (_DWORD)v8) ^ 0x4C135508) & v8;
  v243 = (16 * v242) & 0x1384D740 ^ v242 ^ ((16 * v242) ^ 0x80000) & v8;
  LODWORD(v8) = (16 * (_DWORD)v8) & 0x9384D740 ^ 0x83808342 ^ ((16 * (_DWORD)v8) ^ 0x384D7420) & v8;
  v244 = v243 ^ (v243 << 8) & 0x1384D700 ^ ((v243 << 8) ^ 0x800000) & v8;
  v245 = (v239 + 516738351) ^ (2
                             * (((v244 ^ 0x93045742) << 16) & 0x13840000 ^ v244 ^ 0x93045742 ^ (((v244 ^ 0x93045742) << 16) ^ 0x57420000) & (((_DWORD)v8 << 8) & 0x13840000 ^ 0x13000000 ^ (((_DWORD)v8 << 8) ^ 0x4D70000) & v8)));
  v246 = (unsigned __int8 *)STACK[0x1468];
  v247 = v229 ^ *(unsigned __int8 *)(STACK[0x1468] + 47) ^ v237;
  LODWORD(STACK[0x1300]) = v247;
  v248 = STACK[0x1498];
  v249 = (71 * (LODWORD(STACK[0x13D0]) ^ LODWORD(STACK[0x1498]))) ^ 0xFFFFFFA5 ^ *(unsigned __int8 *)(STACK[0x18B8] + (71 * (LOBYTE(STACK[0x13D0]) ^ LOBYTE(STACK[0x1498]))) + 22881);
  LOBYTE(v229) = (-3 * v246[45]) ^ 0x1B;
  v250 = v229 + 39526;
  v251 = *(unsigned __int8 *)(STACK[0x18B8] + v250);
  STACK[0x1170] = v235 ^ v246[232];
  v252 = v232 ^ v236 ^ (((v251 ^ 0x4C ^ (v251 >> 3) & 0x15) >> 2) | ((v251 ^ 0x4C ^ (v251 >> 3) & 0x15) << 6));
  LODWORD(v200) = *(unsigned __int8 *)(STACK[0x18B8]
                                     + (((v252 << ((v250 ^ (1 - v229)) & 5)) | ((v252 & 0xF8) >> 3)) ^ 0x99u)
                                     + 4432) ^ 0x38;
  LODWORD(STACK[0x1438]) = v200;
  v253 = 385 * v200 - 1306 * ((3288643 * (unint64_t)(385 * v200)) >> 32);
  LOBYTE(v229) = -103 - v229;
  LOBYTE(v235) = (v229 & 0x10 ^ 0x70) + (v229 & 0x10);
  v254 = *(unsigned __int8 *)(STACK[0x18B8]
                            + ((-3
                                               * *((_BYTE *)&STACK[0x2920]
                                                 + ((v253 - 1926392729 - ((2 * v253) & 0x8CE)) ^ 0x8D2D9467))) ^ 0x1Bu)
                            + 39526);
  v255 = ((v254 ^ 0x4C ^ (v254 >> 3) & 0x15) >> 2) | ((v254 ^ 0x4C ^ (v254 >> 3) & 0x15) << 6);
  LOBYTE(v254) = v229 & 0x6A;
  v256 = *(unsigned __int8 *)(STACK[0x18B8] + ((-3 * v246[22]) ^ 0x1Bu) + 39526);
  LODWORD(v98) = 385 * v247;
  LODWORD(v200) = v98 & 0xEF70 ^ 0x64EF70;
  LODWORD(STACK[0x11C8]) = v200;
  LODWORD(STACK[0x1390]) = v98;
  LOBYTE(v254) = v200 - (v250 & 0x6A) - v254 + (v235 & (-127 * v247));
  LODWORD(v200) = v228 ^ v234 ^ v246[209];
  LODWORD(STACK[0x13F0]) = v200;
  v257 = 385 * v200 - 1307735304;
  v258 = (v257 ^ 0x1E506005) & (2 * (v257 & 0x27508)) ^ v257 & 0x27508;
  LODWORD(v250) = ((2 * (v257 ^ 0x1E548005)) ^ 0xA449EA1A) & (v257 ^ 0x1E548005) ^ (2 * (v257 ^ 0x1E548005)) & 0x50A6F50C;
  v259 = (v250 ^ 0x50A0E104) & (4 * v258) ^ v258;
  LODWORD(v250) = ((4 * (v250 ^ 0x50A21505)) ^ 0x4E9BD434) & (v250 ^ 0x50A21505) ^ (4 * (v250 ^ 0x50A21505)) & 0x53A6F50C;
  v260 = (v250 ^ 0x4282D400) & (16 * v259) ^ v259;
  LODWORD(v250) = ((16 * (v250 ^ 0x11242109)) ^ 0x3A6F50D0) & (v250 ^ 0x11242109) ^ (16 * (v250 ^ 0x11242109)) & 0x53A6F500;
  v261 = v260 ^ 0x53A6F50D ^ (v250 ^ 0x12265000) & (v260 << 8);
  LODWORD(v98) = v257 ^ (2
                       * ((v261 << 16) & 0x53A60000 ^ v261 ^ ((v261 << 16) ^ 0x750D0000) & (((v250 ^ 0x4180A50D) << 8) & 0x53A60000 ^ 0x51020000 ^ (((v250 ^ 0x4180A50D) << 8) ^ 0x26F50000) & (v250 ^ 0x4180A50D))));
  LODWORD(STACK[0x13CC]) = v230 ^ v225 ^ 0xFFFFFFDA ^ (((v256 ^ 0x4C ^ (v256 >> 3) & 0x15) << (v254 & 0x7E))
                                                     + (((v256 ^ 0x4C ^ (v256 >> 3) & 0x15) & 0xFC) >> 2));
  v262 = v246;
  LODWORD(v246) = LODWORD(STACK[0x1480]) ^ v248 ^ v246[248];
  LODWORD(STACK[0x12F8]) = (_DWORD)v246;
  v263 = 385 * v246
       - 1306 * ((3288643 * (unint64_t)(385 * v246)) >> 32);
  LODWORD(STACK[0x13A0]) = ((v231 ^ 0x29) - 107) ^ v226 ^ v262[240];
  v264 = ((71 * (v190 ^ v262[130] ^ 0x13)) ^ 0xB1) + 1183739572;
  v265 = (v264 & 0x21AB | 0x2000400 | (2 * (v264 & 0x21AB)) & 0xFE01) ^ ((2 * (v264 & 0x21AB)) | 0x8000) & (v264 ^ 0x6ADBA70B);
  v266 = (2 * (v264 ^ 0x6ADBA70B)) & 0x2A0 ^ 0x42A0 ^ ((2 * (v264 ^ 0x6ADBA70B)) ^ 0x24548940) & (v264 ^ 0x6ADBA70B);
  v267 = (4 * v265) & 0x53AA4EA0 ^ v265 ^ ((4 * v265) ^ 0x8013000) & v266;
  v268 = (4 * v266) & 0xD3AA4EA0 ^ 0x91024420 ^ ((4 * v266) ^ 0xC010A80) & v266;
  v269 = v267 ^ (16 * v267) & 0x53AA4EA0 ^ ((16 * v267) ^ 0x2004C000) & v268;
  v270 = (16 * v268) & 0xD3AA4EA0 ^ 0xC10A04A0 ^ ((16 * v268) ^ 0x3AA4EA00) & v268;
  v271 = ((v269 ^ 0xD1AA42A0) << 8) & 0xD3AA4E00 ^ v269 ^ 0xD1AA42A0 ^ (((v269 ^ 0xD1AA42A0) << 8) ^ 0xAA4EA000) & v270;
  v272 = v264 ^ (2
               * ((v271 << 16) & 0x53AA0000 ^ v271 ^ ((v271 << 16) ^ 0x4EA00000) & ((v270 << 8) & 0x53AA0000 ^ 0x51A00000 ^ ((v270 << 8) ^ 0xAA4E0000) & v270)));
  LOBYTE(v270) = (-9 - (v98 & 9 ^ 9 | 0xF7) + (v98 & 9 ^ 9 | 8)) ^ 0x23;
  LODWORD(v246) = ((*(unsigned __int8 *)(STACK[0x18B8] + (v272 ^ 0x9F7174EB)) - 84) ^ 0x29) - 107;
  LODWORD(STACK[0x130C]) = (_DWORD)v246;
  v273 = 385 * v246 + 2093348194;
  v274 = (v273 ^ 0x37DA0A1C) & (2 * (v273 & 0x20A9E)) ^ v273 & 0x20A9E;
  v275 = ((2 * (v273 ^ 0x37DA0F18)) ^ 0x49000B0C) & (v273 ^ 0x37DA0F18) ^ (2 * (v273 ^ 0x37DA0F18)) & 0x94200586;
  v276 = v274 ^ 0xB4E00586 ^ (v275 ^ 0x94200002) & (4 * v274);
  v277 = (4 * (v275 ^ 0x94200482)) & 0xB4E00584 ^ 0x24600186 ^ ((4 * (v275 ^ 0x94200482)) ^ 0xD3801618) & (v275 ^ 0x94200482);
  v278 = (16 * v276) & 0xB4E00580 ^ v276 ^ ((16 * v276) ^ 0x4E005860) & v277;
  v279 = (16 * v277) & 0xB4E00580 ^ 0xB0E00586 ^ ((16 * v277) ^ 0x4E005860) & v277;
  v280 = v278 ^ 0xA4000400 ^ (v278 << 8) & 0xB4E00500 ^ ((v278 << 8) ^ 0xE0058600) & v279;
  LODWORD(STACK[0x1190]) = v98;
  v281 = v273 ^ (2
               * ((v280 << 16) & 0x34E00000 ^ v280 ^ ((v280 << 16) ^ 0x5860000) & ((v279 << 8) & 0xB4E00000 ^ 0x14E00000 ^ ((v279 << 8) ^ 0x60050000) & v279))) ^ 0x6ED795F5;
  v282 = 0x322E42A57083BALL
       * (((v281 ^ 0x3B24BCA9A8D6BE0FLL) - 0x3B24BCA9A8D6BE0FLL) ^ ((v281 ^ 0x34300FEE9CFC8D3DLL) - 0x34300FEE9CFC8D3DLL) ^ ((v281 ^ 0xF14B347B907A755) - 0xF14B347B907A755))
       + 0x1624FF205316E8C4;
  v283 = (v282 ^ 0x871BB085F2675F5ALL) & (2 * (v282 & 0xD7A032A9E3079F12)) ^ v282 & 0xD7A032A9E3079F12;
  v284 = ((2 * (v282 ^ 0x845BF186306B7D5ELL)) ^ 0xA7F7865FA6D9C498) & (v282 ^ 0x845BF186306B7D5ELL) ^ (2 * (v282 ^ 0x845BF186306B7D5ELL)) & 0x53FBC32FD36CE24CLL;
  v285 = (v284 ^ 0x381820F8008C008) & (4 * v283) ^ v283;
  v286 = ((4 * (v284 ^ 0x5008412051242244)) ^ 0x4FEF0CBF4DB38930) & (v284 ^ 0x5008412051242244) ^ (4 * (v284 ^ 0x5008412051242244)) & 0x53FBC32FD36CE24CLL;
  v287 = (v286 ^ 0x43EB002F41208000) & (16 * v285) ^ v285;
  v288 = ((16 * (v286 ^ 0x1010C300924C624CLL)) ^ 0x3FBC32FD36CE24C0) & (v286 ^ 0x1010C300924C624CLL) ^ (16 * (v286 ^ 0x1010C300924C624CLL)) & 0x53FBC32FD36CE240;
  v289 = (v288 ^ 0x13B8022D124C2000) & (v287 << 8) ^ v287;
  v290 = (((v288 ^ 0x4043C102C120C20CLL) << 8) ^ 0xFBC32FD36CE24C00) & (v288 ^ 0x4043C102C120C20CLL) ^ ((v288 ^ 0x4043C102C120C20CLL) << 8) & 0x53FBC32FD36CE200;
  v291 = v289 ^ 0x53FBC32FD36CE24CLL ^ (v290 ^ 0x53C3030340600000) & (v289 << 16);
  v292 = v282 ^ (2
               * ((v291 << 32) & 0x53FBC32F00000000 ^ v291 ^ ((v291 << 32) ^ 0x536CE24C00000000) & (((v290 ^ 0x38C02C930CA24CLL) << 16) & 0x53FBC32F00000000 ^ 0x10D0000300000000 ^ (((v290 ^ 0x38C02C930CA24CLL) << 16) ^ 0x432FD36C00000000) & (v290 ^ 0x38C02C930CA24CLL))));
  v293 = ((v292 ^ 0x5A3092C128AA66DDLL) - 0x7CF836567715C659) ^ ((v292 ^ 0x213589E7B04E0E36) - 0x7FD2D70EFF1AEB2);
  LODWORD(v293) = __CFADD__(1306 * (v293 ^ ((v292 ^ 0xAD832BC8DD3A3361) + 0x74B470A07D7A6C1BLL)), 0xF0E171D097DAC56CLL)+ (((v293 ^ ((v292 ^ 0xAD832BC8DD3A3361) + 0x74B470A07D7A6C1BLL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v292 ^ 0x5A3092C128AA66DDLL, 0x8307C9A988EA39A7) - 1) ^ (__CFADD__(v292 ^ 0x213589E7B04E0E36, 0xF802D28F100E514ELL)- 1) ^ (__CFADD__(v292 ^ 0xAD832BC8DD3A3361, 0x74B470A07D7A6C1BLL)- 1))+ 1313875794;
  LODWORD(v292) = (v293 ^ 0xA52F9C66) & (2 * (v293 & 0xB1AFDD77)) ^ v293 & 0xB1AFDD77;
  LODWORD(v290) = ((2 * (v293 ^ 0xA46986C2)) ^ 0x2B8CB76A) & (v293 ^ 0xA46986C2) ^ (2 * (v293 ^ 0xA46986C2)) & 0x15C65BB4;
  LODWORD(v292) = (v290 ^ 0x11841321) & (4 * v292) ^ v292;
  LODWORD(v290) = ((4 * (v290 ^ 0x14424895)) ^ 0x57196ED4) & (v290 ^ 0x14424895) ^ (4 * (v290 ^ 0x14424895)) & 0x15C65BB4;
  LODWORD(v292) = (v290 ^ 0x15004A91) & (16 * v292) ^ v292;
  LODWORD(v290) = ((16 * (v290 ^ 0xC61121)) ^ 0x5C65BB50) & (v290 ^ 0xC61121) ^ (16 * (v290 ^ 0xC61121)) & 0x15C65BB0;
  LODWORD(v292) = v292 ^ 0x15C65BB5 ^ (v290 ^ 0x14441B00) & ((_DWORD)v292 << 8);
  LOBYTE(v270) = ((((2 * v270) & 0xD6) - v270 - 108) ^ 0xB6)
               + (((v98 & 9 ^ 0x6F) + (v98 & 8) - ((v98 & 9 ^ 0x6F) & 0x4E)) ^ 0x28);
  STACK[0x11D0] = v245;
  LODWORD(v98) = v262[62] ^ (((*(unsigned __int8 *)(STACK[0x18B8] + (v245 ^ 0xE03A25B4)) - 84) ^ 0x29) - 107);
  LODWORD(STACK[0x12F0]) = v98;
  LODWORD(STACK[0x1410]) = v233 ^ v228 ^ LODWORD(STACK[0x14A4]) ^ v262[(v270 & 0x83) + 24];
  v294 = 385 * v98 - 1938048152;
  v295 = ((2 * (v294 & 0x44498)) & 0x80920 | v294 & 0x44498) ^ (2 * (v294 & 0x44498)) & (v294 ^ 0x22BE1B77);
  v296 = (2 * (v294 ^ 0x22BE1B77)) & 0x510A5FEE ^ 0x510A4021 ^ ((2 * (v294 ^ 0x22BE1B77)) ^ 0xA244BFDE) & (v294 ^ 0x22BE1B77);
  v297 = (4 * v295) & 0x3216E0 ^ (v295 | 0x11120043) ^ (4 * v295) & v296;
  v298 = (4 * v296) & 0x513A5FEC ^ 0x11120043 ^ ((4 * v296) ^ 0x44E97FBC) & v296;
  v299 = (16 * v297) & 0x513A5FE0 ^ v297 ^ ((16 * v297) ^ 0x11200430) & v298;
  v300 = (16 * v298) & 0x513A5FE0 ^ 0x401A010F ^ ((16 * v298) ^ 0x13A5FEF0) & v298;
  v301 = v299 ^ 0x4108188C ^ (v299 << 8) & 0x513A5F00 ^ ((v299 << 8) ^ 0x32046300) & v300;
  v302 = v294 ^ (2
               * ((v301 << 16) & 0x513A0000 ^ v301 ^ ((v301 << 16) ^ 0x5FEF0000) & ((v300 << 8) & 0x513A0000 ^ 0x41200000 ^ ((v300 << 8) ^ 0x3A5F0000) & v300))) ^ 0x73A4FB46;
  LODWORD(STACK[0x16F0]) = v262[57] ^ (v249 - 107);
  LODWORD(v246) = *((unsigned __int8 *)&STACK[0x2920] + v263);
  LODWORD(STACK[0x11F8]) = (_DWORD)v246;
  LODWORD(STACK[0x1198]) = v255;
  v303 = v255 ^ v246 ^ 0x12;
  STACK[0x1230] = v303;
  v304 = v303 + 41218;
  v305 = STACK[0x18B8];
  STACK[0x1228] = v304;
  LODWORD(v293) = *((unsigned __int8 *)&STACK[0x2920]
                  + (v293 ^ (2
                                         * (((_DWORD)v292 << 16) & 0x15C60000 ^ v292 ^ (((_DWORD)v292 << 16) ^ 0x5BB50000) & (((v290 ^ 0x18240A5) << 8) & 0x15C60000 ^ 0x11840000 ^ (((v290 ^ 0x18240A5) << 8) ^ 0x465B0000) & (v290 ^ 0x18240A5)))) ^ 0xB92B6A1D));
  v306 = (63 * (*(unsigned __int8 *)(v305 + v304) ^ 9)) ^ v262[71];
  LODWORD(STACK[0x1890]) = *((unsigned __int8 *)&STACK[0x2920] + v302 % 0x51A) ^ v293;
  LODWORD(STACK[0x13C0]) = v306 ^ v293;
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x15C0]));
  LODWORD(STACK[0x1498]) = v305;
  v307 = (v305 + 206134051) ^ 0xECE30263;
  v308 = ((unsigned __int16)(2 * ((v305 + 23331) & 0xF4)) | 0x1000) & (unsigned __int16)v307 ^ (v305 + 206134051) & 0xF4 ^ ((2 * ((v305 + 206134051) & 0xF4)) & 0x80 | 0x14010002);
  v309 = (2 * v307) & 0xA96 ^ 0xA91 ^ ((2 * v307) ^ 0x20AA552E) & v307;
  v310 = (4 * v308) & 0x1F55AA94 ^ v308 ^ ((4 * v308) ^ 0x50042008) & v309;
  v311 = (4 * v309) & 0x1F55AA94 ^ 0x2010083 ^ ((4 * v309) ^ 0x60020A5C) & v309;
  v312 = (16 * v310) & 0x1F55AA90 ^ v310 ^ ((16 * v310) ^ 0x40528020) & v311;
  v313 = (16 * v311) & 0x1F55AA90 ^ 0xA050287 ^ ((16 * v311) ^ 0xF55AA970) & v311;
  v314 = v312 ^ 0xE000095 ^ (v312 << 8) & 0x1F55AA00 ^ ((v312 << 8) ^ 0x55A80200) & v313;
  LODWORD(v293) = (v305 + 206134051) ^ (2
                                      * ((v314 << 16) & 0x1F550000 ^ v314 ^ ((v314 << 16) ^ 0x2A970000) & ((v313 << 8) & 0x1F550000 ^ 0xA550000 ^ ((v313 << 8) ^ 0x55AA0000) & v313)));
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1570]));
  LODWORD(STACK[0x14A4]) = 385 * (v305 + 1047)
                         - 1306 * ((3288643 * (unint64_t)(385 * (v305 + 1047))) >> 32);
  LODWORD(STACK[0x1450]) = v305;
  v315 = (v305 + 1047) & 0x417 | (8 - v305) & 0x17;
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x15F0]));
  LODWORD(STACK[0x1520]) = v305;
  LODWORD(v305) = 385 * v305;
  LODWORD(STACK[0x14F8]) = v305;
  LODWORD(STACK[0x15F0]) = v305 + 403095 - 1306 * ((3288643 * (unint64_t)(v305 + 403095)) >> 32);
  v316 = (385
        * (((v293 ^ 0x6879C8F3) - 1013162318) ^ ((v293 ^ 0xB93DACA2) + 316160737) ^ ((v293 ^ 0x873998B) - 1550446646))
        + 1368141543)
       % 0x51A;
  LODWORD(v305) = 385 * *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x139C]));
  LODWORD(STACK[0x1480]) = v305;
  v317 = v305 + 403095 - 1306 * ((3288643 * (unint64_t)(v305 + 403095)) >> 32);
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1730]));
  LODWORD(STACK[0xD34]) = v305;
  LODWORD(v262) = 385 * (v305 + v315) - 1306 * ((3288643 * (unint64_t)(385 * (v305 + v315))) >> 32);
  LODWORD(v305) = 385 * *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1708]));
  LODWORD(STACK[0x1570]) = v305;
  LODWORD(v293) = (71
                 * *((unsigned __int8 *)&STACK[0x2920]
                   + (v305
                                  + 403095
                                  - 1306 * ((3288643 * (unint64_t)(v305 + 403095)) >> 32)))) ^ ((((v305 + 403095) & 0x43) + ((104 - v305) & 0x43)) | 5);
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1818]));
  LODWORD(STACK[0xD38]) = v305;
  v318 = *(unsigned __int8 *)(STACK[0x18B8] + (v293 ^ 0x47u) + 22881) ^ v293 ^ 0xFFFFFFE2;
  LOBYTE(v293) = (-3
                * *((_BYTE *)&STACK[0x2920]
                  + (385 * (v305 + 1047)
                                 - 1306 * ((3288643 * (unint64_t)(385 * (v305 + 1047))) >> 32)))) ^ ((((-24 - v305) & 0x81) + ((v305 + 23) & 0x81)) | 0x7C);
  LODWORD(v305) = 385
                * (*(unsigned __int8 *)(STACK[0x18B8] + (LODWORD(STACK[0x12EC]) ^ 0x99u) + 4432) ^ 0x38);
  LODWORD(STACK[0x15C0]) = v305;
  LODWORD(v293) = *(unsigned __int8 *)(STACK[0x18B8] + v293 + 40108);
  LODWORD(v293) = ((v293 >> 7) | (2 * v293)) ^ (((v293 >> 7) | (2 * v293)) >> 6) ^ (((v293 >> 7) | (2 * v293)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(v245) = (v293 >> 2) | ((_DWORD)v293 << 6);
  v319 = *(unsigned __int8 *)(STACK[0x18B8]
                            + ((-3
                                               * *((_BYTE *)&STACK[0x2920]
                                                 + (v305
                                                                + 403095
                                                                - 1306
                                                                * ((3288643
                                                                  * (unint64_t)(v305 + 403095)) >> 32)))) ^ 0xFDu)
                            + 40108);
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1348]));
  LODWORD(STACK[0xCE4]) = v305;
  LODWORD(v293) = ((v305 + 603461929) ^ 0xBE2458EF) & (2 * ((v305 + 603461929) & 0x2EE)) ^ (v305 + 603461929) & 0x2EE;
  v320 = (2 * ((v305 + 603461929) ^ 0xBE245933)) & 0x3DC ^ 0x1045 ^ ((2 * ((v305 + 603461929) ^ 0xBE245933)) ^ 0x844443BA) & ((v305 + 603461929) ^ 0xBE245933);
  LODWORD(v293) = (4 * v293) & 0x13D8 ^ v293 ^ ((8 * ((v293 >> 1) & 0x3FF)) | 0x6000) & v320;
  v321 = (4 * v320) & 0x6223B3DC ^ 0x62213089 ^ ((4 * v320) ^ 0x888ECF74) & v320;
  LODWORD(v293) = (16 * v293) & 0x6223B3D0 ^ v293 ^ ((16 * v293) ^ 0x38000) & v321;
  v322 = (16 * v321) & 0x6223B3D0 ^ 0x4000820D ^ ((16 * v321) ^ 0x223B3DD0) & v321;
  LODWORD(v293) = v293 ^ 0x60000BDD ^ ((_DWORD)v293 << 8) & 0x6223B300 ^ (((_DWORD)v293 << 8) ^ 0x3B80000) & v322;
  v323 = (v305 + 603461929) ^ (2
                             * (((_DWORD)v293 << 16) & 0x62230000 ^ v293 ^ (((_DWORD)v293 << 16) ^ 0x33DD0000) & ((v322 << 8) & 0x62230000 ^ ((v322 << 8) ^ 0x23B30000) & v322 ^ 0x40000000)));
  v324 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1600]));
  v325 = (385
        * (((v323 ^ 0xB496F1BD) - 1710876814) ^ ((v323 ^ 0xA3C044BD) - 1924095374) ^ ((v323 ^ 0x4B143854) + 1703206553))
        + 1368141543)
       % 0x51A;
  v326 = ((v319 >> 7) | (2 * v319)) ^ (((v319 >> 7) | (2 * v319)) >> 6) ^ (((v319 >> 7) | (2 * v319)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(STACK[0x13D0]) = (v326 << ((v245 & 6 ^ 6) + (v245 & 6))) + ((v326 & 0xFC) >> 2);
  LODWORD(v305) = 385 * *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1610]));
  LODWORD(STACK[0x1708]) = v305;
  LODWORD(STACK[0x12D8]) = v305 + 403095 - 1306 * ((3288643 * (unint64_t)(v305 + 403095)) >> 32);
  v327 = *((unsigned __int8 *)&STACK[0x2920]
         + (385 * (v324 + 1047)
                        - 1306 * ((3288643 * (unint64_t)(385 * (v324 + 1047))) >> 32)));
  LOBYTE(v234) = (*((_BYTE *)&STACK[0x2920] + v325) >> 3) | (32 * *((_BYTE *)&STACK[0x2920] + v325));
  LODWORD(v327) = 63 * (v327 ^ 0xD ^ *(unsigned __int8 *)((v327 ^ 0xCF) + STACK[0x18B8] + 4174));
  LODWORD(v292) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1748]));
  LODWORD(STACK[0xBFC]) = v292;
  v328 = ((2 * (((_WORD)v292 - 1821) & 0x134)) & 0xFFDF | (v292 + 1235220707) & 0x134) ^ ((unsigned __int16)(2 * ((v292 - 1821) & 0x134)) | 0x1000) & ((unsigned __int16)(v292 - 1821) ^ 0x2978);
  v329 = (2 * ((v292 + 1235220707) ^ 0x30122978)) & 0x24C ^ 0x244 ^ ((2 * ((v292 + 1235220707) ^ 0x30122978)) ^ 0x8844098) & ((v292 + 1235220707) ^ 0x30122978);
  v330 = (4 * v328) & 0x6722248 ^ v328 ^ ((4 * v328) | 0x2000) & v329;
  v331 = (4 * v329) & 0x8672224C ^ 0x8632224C ^ ((4 * v329) ^ 0x19C88930) & v329;
  v332 = v330 ^ (16 * v330) & 0x6722240 ^ ((16 * v330) ^ 0x28000) & v331;
  v333 = (16 * v331) & 0x86722240 ^ 0x8050020C ^ ((16 * v331) ^ 0x672224C0) & v331;
  v334 = ((v332 ^ 0x86700A4C) << 8) & 0x86722200 ^ v332 ^ 0x86700A4C ^ (((v332 ^ 0x86700A4C) << 8) ^ 0x72224C00) & v333;
  LODWORD(v305) = (v292 + 1235220707) ^ (2
                                       * ((v334 << 16) & 0x6720000 ^ v334 ^ ((v334 << 16) ^ 0x224C0000) & ((v333 << 8) & 0x6720000 ^ 0x4500000 ^ ((v333 << 8) ^ 0x72220000) & v333)));
  LODWORD(v200) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1858]));
  LODWORD(STACK[0x1748]) = v200;
  LODWORD(v290) = 385 * v200 + 403095 - 1306 * ((3288643 * (unint64_t)(385 * v200 + 403095)) >> 32);
  LODWORD(v200) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1828]) ^ 0x8D2D9467));
  LODWORD(STACK[0xDA4]) = v200;
  LODWORD(v98) = 385 * v200 + 403095 - 1306 * ((3288643 * (unint64_t)(385 * v200 + 403095)) >> 32);
  LODWORD(STACK[0x1610]) = v324;
  v335 = *(unsigned __int8 *)(STACK[0x18B8] + (v234 ^ 0x9Du) + 1665) - 38;
  v336 = ((v335 ^ ((v335 & 0xFE) >> 1)) >> (((v324 + 23) ^ -(char)v324) & 4)) ^ v335;
  LODWORD(STACK[0x1730]) = v336;
  LODWORD(v200) = LODWORD(STACK[0x1650]);
  LODWORD(STACK[0x14D8]) = v200;
  LODWORD(v292) = (((*(_BYTE *)(STACK[0x18B8]
                                               + ((71
                                                                  * *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1868]))) ^ 0xB1u)
                                               + 22623)
                                    - 84) ^ 0x29)
                                  - 107);
  LODWORD(STACK[0x1818]) = v292;
  v337 = v318 - 107;
  v338 = *((unsigned __int8 *)&STACK[0x2920]
         + (385 * v200
                        + 403095
                        - 1306 * ((3288643 * (unint64_t)(385 * v200 + 403095)) >> 32)));
  LODWORD(v293) = (v318 - 107) ^ 0xFFFFFFE2;
  LODWORD(v98) = 71 * (v293 ^ *((unsigned __int8 *)&STACK[0x2920] + v98) ^ v338 ^ v336);
  LODWORD(v98) = ((2 * (v98 ^ 0xB1)) & 0xBE) + (v98 ^ 0x58EE);
  LODWORD(v200) = *((unsigned __int8 *)&STACK[0x2920] + v317);
  LODWORD(STACK[0x12D0]) = v200;
  v339 = *((unsigned __int8 *)&STACK[0x2920] + v316);
  LOBYTE(v279) = (-3 * ((v318 - 107) ^ v339 ^ v200)) ^ 0xFD;
  v340 = (*(unsigned __int8 *)(STACK[0x18B8] + v279 + 40108) >> 7) | (2
                                                                                     * *(unsigned __int8 *)(STACK[0x18B8] + v279 + 40108));
  v341 = v340 ^ (v340 >> 6) ^ (v340 >> 4) ^ 0xFFFFFFD7;
  v342 = (-3 * (v339 ^ v200)) ^ 0xFFFFFFFD;
  v343 = v342 + 40108;
  v344 = STACK[0x18B8];
  v345 = (v341 >> 2) | (v341 << 6);
  v346 = ((*(_BYTE *)(v344 + v343) >> 7) | (2 * *(_BYTE *)(v344 + v343)));
  v347 = *((unsigned __int8 *)&STACK[0x2920] + v290);
  LODWORD(v290) = ((*(unsigned __int8 *)(v344 + v343) >> 7) | (2 * *(unsigned __int8 *)(v344 + v343))) ^ (v346 >> 6) ^ (v346 >> 4) ^ 0xFFFFFFD7;
  LODWORD(v304) = v245 ^ v337 ^ *((unsigned __int8 *)&STACK[0x2920] + v262) ^ v347 ^ ((v290 >> 2) | ((_DWORD)v290 << 6)) ^ 0x12;
  v348 = v304 + 41218;
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920]
                  + (385
                   * (((v305 ^ 0x6B0C94C3) - 1549881096) ^ ((v305 ^ 0xE6ED856A) + 780116319) ^ ((v305 ^ 0x37A15E05) - 13403598))
                   + 1368141543)
                  % 0x51A);
  LODWORD(v304) = ((83 - v342) & 0xC5) + (((_BYTE)v342 - 84) & 0xC5) + ((v348 | (61 - v304)) & 0x28);
  v349 = 71 * (v305 ^ v338 ^ (63 * (*(unsigned __int8 *)(STACK[0x18B8] + v348) ^ 9)));
  v350 = *(unsigned __int8 *)(STACK[0x18B8] + v349 + 22881) ^ v349 ^ v304 ^ 0x48;
  LODWORD(STACK[0x1828]) = ((v327 ^ v337) >> 3) | (32 * (v327 ^ v337));
  v351 = (unsigned __int8 *)STACK[0x1468];
  v352 = *(unsigned __int8 *)(STACK[0x1468] + 66) ^ (((*(unsigned __int8 *)(STACK[0x18B8]
                                                                          + (((_DWORD)v98
                                                                            - 1926392729
                                                                            + ((2 * (_DWORD)v98) & 0xCE ^ 0xFFFFDFFF)
                                                                            + 1) ^ 0x8D2D9467))
                                                     - 84) ^ 0x29)
                                                   - 107);
  LODWORD(STACK[0x1204]) = v352;
  v353 = v305 ^ v347 ^ v351[171];
  LODWORD(STACK[0x13F8]) = v353;
  LODWORD(v305) = v345 ^ v351[125] ^ v245;
  LODWORD(STACK[0xCB8]) = v305;
  LODWORD(v305) = v305 + 1736961544;
  LODWORD(v98) = (v305 ^ 0x33FE740F) & (2 * (v305 & 0x40F)) ^ v305 & 0x40F;
  LODWORD(v304) = (2 * (v305 ^ 0x33FE7419)) & 0x216 ^ 0x212 ^ ((2 * (v305 ^ 0x33FE7419)) ^ 0x5408802C) & (v305 ^ 0x33FE7419);
  LODWORD(v98) = (4 * v98) & 0x2014 ^ v98 ^ ((4 * v98) | 0x800) & v304;
  LODWORD(v304) = (4 * v304) & 0xAB866214 ^ 0x1866206 ^ ((4 * v304) ^ 0x2E198858) & v304;
  LODWORD(v98) = (16 * v98) & 0x2B866210 ^ v98 ^ ((16 * v98) ^ 0x2000) & v304;
  LODWORD(v304) = (16 * v304) & 0xAB866210 ^ 0x3804216 ^ ((16 * v304) ^ 0xB8662160) & v304;
  LODWORD(v98) = v98 ^ ((_DWORD)v98 << 8) & 0x2B866200 ^ (((_DWORD)v98 << 8) ^ 0x220000) & v304;
  LODWORD(v305) = v305 ^ (2
                        * (((v98 ^ 0xAB844016) << 16) & 0x2B860000 ^ v98 ^ 0xAB844016 ^ (((v98 ^ 0xAB844016) << 16) ^ 0x62160000) & (((_DWORD)v304 << 8) & 0x2B860000 ^ 0x29840000 ^ (((_DWORD)v304 << 8) ^ 0x6620000) & v304)));
  LODWORD(STACK[0x12EC]) = (385
                          * (((v305 ^ 0x2C973451) - 717386261) ^ ((v305 ^ 0x17C06FF)
                                                                              - 120144059) ^ ((v305 ^ 0xA693E08D)
                                                                                            + 1597593911))
                          + 1368141543)
                         % 0x51A;
  v354 = STACK[0x13D0];
  v355 = v351[4] ^ LODWORD(STACK[0x13D0]);
  STACK[0x1258] = v355;
  LODWORD(STACK[0x1348]) = 385 * v355
                         + 403095
                         - 1306
                         * ((3288643 * (unint64_t)(385 * v355 + 403095)) >> 32);
  LODWORD(v348) = 385 * v353;
  LODWORD(v304) = *(unsigned __int8 *)(STACK[0x18B8]
                                     + ((-3
                                                        * *((_BYTE *)&STACK[0x2920]
                                                          + (v348
                                                                         + 403095
                                                                         - 1306
                                                                         * ((3288643
                                                                           * (unint64_t)(v348 + 403095)) >> 32)))) ^ 0xFDu)
                                     + 40108);
  v356 = (v304 >> 7) | (2 * v304);
  LODWORD(v304) = 385 * v352;
  LODWORD(STACK[0x139C]) = v304 + 403095 - 1306 * ((3288643 * (unint64_t)(v304 + 403095)) >> 32);
  v357 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x14A4]));
  v358 = *((unsigned __int8 *)&STACK[0x2920]
         + (385 * v292
                        + 403095
                        - 1306 * ((3288643 * (unint64_t)(385 * v292 + 403095)) >> 32)));
  v359 = v338 ^ v358 ^ v339 ^ v357 ^ v351[(((104 - (_DWORD)v304) & 0x59) + (((_DWORD)v304 + 403095) & 0x59)) & 0xFFFFFFFE];
  STACK[0x1600] = v359;
  LODWORD(v355) = v351[42];
  LODWORD(STACK[0x1868]) = v355;
  LODWORD(v355) = v327 ^ v355 ^ v245;
  LODWORD(STACK[0x1650]) = v355;
  LODWORD(v327) = 385 * v355 + 313010823;
  v360 = (v327 ^ 0x7E99FD9D) & (2 * (v327 & 0x9FC10)) ^ v327 & 0x9FC10;
  LODWORD(v292) = ((2 * (v327 ^ 0x7E8AA5BD)) ^ 0x2422B35A) & (v327 ^ 0x7E8AA5BD) ^ (2 * (v327 ^ 0x7E8AA5BD)) & 0x904759AC;
  v361 = (v292 ^ 0x90161825) & (4 * v360) ^ v360;
  LODWORD(v292) = ((4 * (v292 ^ 0x905148A5)) ^ 0x4F5D66B4) & (v292 ^ 0x905148A5) ^ (4 * (v292 ^ 0x905148A5)) & 0x93D759AC;
  v362 = (v292 ^ 0x35540A0) & (16 * v361) ^ v361;
  LODWORD(v292) = ((16 * (v292 ^ 0x90821909)) ^ 0x3D759AD0) & (v292 ^ 0x90821909) ^ (16 * (v292 ^ 0x90821909)) & 0x93D759A0;
  v363 = v362 ^ 0x93D759AD ^ (v292 ^ 0x11551800) & (v362 << 8);
  LODWORD(STACK[0x12E0]) = (v327 ^ (2
                                                * ((v363 << 16) & 0x13D70000 ^ v363 ^ ((v363 << 16) ^ 0x59AD0000) & (((v292 ^ 0x8282412D) << 8) & 0x13D70000 ^ 0x860000 ^ (((v292 ^ 0x8282412D) << 8) ^ 0x57590000) & (v292 ^ 0x8282412D)))) ^ 0xE9F94F4A)
                         % 0x51A;
  v364 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x15F0]));
  LODWORD(v304) = v347 ^ v364 ^ v351[147] ^ v354;
  v365 = 314404369
       * ((1073338728 - (_DWORD)v348) & 0x3A7FAC71 ^ ((_DWORD)v348 + 403095) & 0xFAC71)
       * (v359 + 1047)
       % 0x51A;
  LODWORD(v292) = v356 ^ (v356 >> 6) ^ (v356 >> 4) ^ 0xFFFFFFD7;
  LODWORD(STACK[0x1858]) = (v292 >> 2) | ((_DWORD)v292 << 6);
  LODWORD(v327) = v337 ^ v351[111] ^ v339;
  LODWORD(STACK[0x15F0]) = v327;
  v366 = v339 ^ v357 ^ v364 ^ v351[83];
  LODWORD(STACK[0x1254]) = v366;
  LODWORD(STACK[0x13D0]) = v304;
  v367 = 385 * v304
       + 403095
       - 1306 * ((3288643 * (unint64_t)(385 * v304 + 403095)) >> 32);
  LODWORD(v292) = v327 + 1963633780;
  v368 = (v292 ^ 0x90CB3F13) & (2 * ((v327 - 21388) & 0x1A3)) ^ (v327 - 21388) & 0x1A3;
  v369 = (2 * (v292 ^ 0x90CB3D51)) & 0x2F2 ^ 0xA12 ^ ((2 * (v292 ^ 0x90CB3D51)) ^ 0x244091E4) & (v292 ^ 0x90CB3D51);
  v370 = (4 * v368) & 0xA90 ^ v368 ^ ((4 * v368) | 0x3000) & v369;
  v371 = (4 * v369) & 0x1A3E6AF0 ^ 0x12064032 ^ ((4 * v369) ^ 0x68F9ABC8) & v369;
  v372 = (16 * v370) & 0x1A3E6AF0 ^ v370 ^ ((16 * v370) ^ 0x2C000) & v371;
  v373 = (16 * v371) & 0x1A3E6AF0 ^ 0x181840D2 ^ ((16 * v371) ^ 0xA3E6AF20) & v371;
  v374 = v372 ^ (v372 << 8) & 0x1A3E6A00 ^ ((v372 << 8) ^ 0x26C0000) & v373;
  LODWORD(v292) = v292 ^ (2
                        * (((v374 ^ 0x181006F2) << 16) & 0x1A3E0000 ^ v374 ^ 0x181006F2 ^ (((v374 ^ 0x181006F2) << 16) ^ 0x6AF20000) & ((v373 << 8) & 0x1A3E0000 ^ 0x140000 ^ ((v373 << 8) ^ 0x3E6A0000) & v373)));
  LODWORD(v355) = v293 ^ v357 ^ LODWORD(STACK[0x1730]);
  LODWORD(v359) = v351[252];
  LODWORD(STACK[0x14A4]) = v359;
  LODWORD(v359) = v355 ^ v359 ^ v245;
  LODWORD(STACK[0xDF0]) = v359;
  LODWORD(STACK[0x1730]) = (385 * v366 + 403095) % 0x51A;
  v375 = v351[52] ^ (v350 - 107);
  v376 = v351[225] ^ v338;
  STACK[0xE10] = v376;
  LODWORD(v376) = 385 * v376 + 176568921;
  v377 = (v376 ^ 0x64BFE8BC) & (2 * (v376 & 0xFEC3E)) ^ v376 & 0xFEC3E;
  v378 = ((2 * (v376 ^ 0x64A4E8DC)) ^ 0x222609C4) & (v376 ^ 0x64A4E8DC) ^ (2 * (v376 ^ 0x64A4E8DC)) & 0x905B04E2;
  v379 = (v378 ^ 0x901204C2) & (4 * v377) ^ v377;
  v380 = ((4 * (v378 ^ 0x90490422)) ^ 0x476C1388) & (v378 ^ 0x90490422) ^ (4 * (v378 ^ 0x90490422)) & 0x91DB04E0;
  v381 = v379 ^ 0x91DB04E2 ^ (v380 ^ 0x1480080) & (16 * v379);
  v382 = (16 * (v380 ^ 0x90930462)) & 0x91DB04E0 ^ 0x804B00C2 ^ ((16 * (v380 ^ 0x90930462)) ^ 0x1DB04E20) & (v380 ^ 0x90930462);
  v383 = (v381 << 8) & 0x91DB0400 ^ v381 ^ ((v381 << 8) ^ 0xDB04E200) & v382;
  LODWORD(v348) = (v383 << 16) & 0x11DB0000 ^ v383 ^ ((v383 << 16) ^ 0x4E20000) & ((v382 << 8) & 0x91DB0000 ^ 0xDB0000 ^ ((v382 << 8) ^ 0x5B040000) & v382);
  LODWORD(STACK[0x12B8]) = (385
                          * (((v292 ^ 0xCDA1792A) + 362713334) ^ ((v292 ^ 0xAD4810B0)
                                                                              + 1970796912) ^ ((v292 ^ 0xCA04EBDD)
                                                                                             + 305857027))
                          + 1368141543)
                         % 0x51A;
  v384 = 385 * v359
       + 403095
       - 1306 * ((3288643 * (unint64_t)(385 * v359 + 403095)) >> 32);
  LODWORD(STACK[0xDE8]) = v375;
  LODWORD(v292) = 1974167762 * (v375 + 1047) - 1974167377 * v375 + 844111690;
  v385 = (v292 ^ 0x6D8F416E) & (2 * (v292 & 0x8DAC546F)) ^ v292 & 0x8DAC546F;
  LODWORD(v343) = ((2 * (v292 ^ 0x6687493C)) ^ 0xD6563AA6) & (v292 ^ 0x6687493C) ^ (2 * (v292 ^ 0x6687493C)) & 0xEB2B1D52;
  v386 = (v343 ^ 0x42021000) & (4 * v385) ^ v385;
  LODWORD(v343) = ((4 * (v343 ^ 0x29290551)) ^ 0xACAC754C) & (v343 ^ 0x29290551) ^ (4 * (v343 ^ 0x29290551)) & 0xEB2B1D50;
  v387 = (v343 ^ 0xA8281540) & (16 * v386) ^ v386;
  LODWORD(v343) = ((16 * (v343 ^ 0x43030813)) ^ 0xB2B1D530) & (v343 ^ 0x43030813) ^ (16 * (v343 ^ 0x43030813)) & 0xEB2B1D50;
  v388 = v387 ^ 0xEB2B1D53 ^ (v343 ^ 0xA2211500) & (v387 << 8);
  LODWORD(v304) = *((unsigned __int8 *)&STACK[0x2920] + v365);
  LODWORD(STACK[0x12C4]) = v304;
  v389 = (v304 & 0xC) + *((unsigned __int8 *)&STACK[0x2920] + v367) + (v304 & 0xC ^ 0xC);
  LODWORD(v245) = (v292 ^ (2
                                       * ((v388 << 16) & 0x6B2B0000 ^ v388 ^ ((v388 << 16) ^ 0x1D530000) & (((v343 ^ 0x490A0843) << 8) & 0x6B2B0000 ^ 0x40220000 ^ (((v343 ^ 0x490A0843) << 8) ^ 0x2B1D0000) & (v343 ^ 0x490A0843)))) ^ 0x49FC6EC9)
                % 0x51A;
  v390 = v351;
  v391 = v351[150];
  LOBYTE(v292) = ((v351[150] >> 3) | (32 * v351[150])) ^ 0x6E ^ (((v375 + 23) & 0xF3) + ((-24 - v375) & 0xF3));
  v392 = (v376 ^ (2 * (_DWORD)v348) ^ 0xF54DE5FA) % 0x51A;
  LODWORD(v348) = *(unsigned __int8 *)(STACK[0x18B8] + (LODWORD(STACK[0x1828]) ^ 0x99u) + 4432);
  LODWORD(v359) = v337 ^ LODWORD(STACK[0x12D0]) ^ v358 ^ v351[222];
  LODWORD(STACK[0xE04]) = v359;
  LODWORD(v376) = (((v384 & 0x6DD ^ 0xEDD) + (v384 & 0x6DD)) & 0xFFE ^ 0xACB) + v359;
  LODWORD(v292) = *(unsigned __int8 *)(STACK[0x18B8] + v292 + 1665) - 38;
  LODWORD(v292) = v348 ^ v292 ^ (v292 >> 4) ^ (v292 >> 5);
  LODWORD(v351) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x12D8]));
  LODWORD(v359) = v351 ^ v390[14] ^ v364;
  LODWORD(STACK[0xD7C]) = v359;
  LODWORD(v348) = (((v376 - 1926392729 - ((2 * v376) & 0x28CE)) ^ 0x6F450E7E) - 1866796670) ^ (((v376
                                                                                               - 1926392729
                                                                                               - ((2 * v376) & 0x28CE)) ^ 0xAD9BF0C5)
                                                                                             + 1382289211) ^ (((v376 - 1926392729 - ((2 * v376) & 0x28CE)) ^ 0x4FF36ADC) - 1341352668);
  LODWORD(STACK[0x1828]) = v292 ^ 0xFFFFFFDA;
  LODWORD(v376) = 385 * (v292 ^ 0xDA) + 1323844206;
  LODWORD(v292) = (v376 ^ 0x336DF284) & (2 * (v376 & 0x1E429)) ^ v376 & 0x1E429;
  v393 = (2 * (v376 ^ 0x336F72C4)) & 0x820296EC ^ 0x82129225 ^ ((2 * (v376 ^ 0x336F72C4)) ^ 0x4852DDA) & (v376 ^ 0x336F72C4);
  LODWORD(v292) = (4 * v292) & 0x290EC ^ v292 ^ ((4 * v292) | 0x600000) & v393;
  v394 = (4 * v393) & 0x827296EC ^ 0x82308449 ^ ((4 * v393) ^ 0x9CA5BB4) & v393;
  LODWORD(v292) = (16 * v292) & 0x27296E0 ^ v292 ^ ((16 * v292) ^ 0x7800000) & v394;
  v395 = (16 * v394) & 0x827296E0 ^ 0x8052902D ^ ((16 * v394) ^ 0x27296ED0) & v394;
  LODWORD(v292) = v292 ^ ((_DWORD)v292 << 8) & 0x82729600 ^ (((_DWORD)v292 << 8) ^ 0x78000000) & v395;
  LODWORD(v376) = v376 ^ 0xB138C9F3 ^ (2
                                     * (((v292 ^ 0x800A96ED) << 16) & 0x2720000 ^ v292 ^ 0x800A96ED ^ (((v292 ^ 0x800A96ED) << 16) ^ 0x16ED0000) & ((v395 << 8) & 0x2720000 ^ ((v395 << 8) ^ 0x72960000) & v395 ^ 0x600000)));
  v396 = 385 * v359
       + 403095
       - 1306 * ((3288643 * (unint64_t)(385 * v359 + 403095)) >> 32);
  v397 = (385 * (int)v348 + 1368141543) % 0x51Au;
  LODWORD(v359) = v338 ^ v337 ^ v351 ^ v390[141];
  LODWORD(STACK[0xDA8]) = v359;
  LODWORD(v292) = 385 * v359 + 879698028;
  LODWORD(v351) = (v292 ^ 0x2106E522) & (2 * (v292 & 0x17062B)) ^ v292 & 0x17062B;
  v398 = ((2 * (v292 ^ 0x2126E934)) ^ 0x1543DE3E) & (v292 ^ 0x2126E934) ^ (2 * (v292 ^ 0x2126E934)) & 0x2AB1EF1E;
  LODWORD(v351) = (v398 ^ 0x20081C) & (4 * (_DWORD)v351) ^ v351;
  v399 = ((4 * (v398 ^ 0x2A902101)) ^ 0x2AC7BC7C) & (v398 ^ 0x2A902101) ^ (4 * (v398 ^ 0x2A902101)) & 0x6AB1EF1C;
  LODWORD(v351) = (v399 ^ 0xAA81AC10) & (16 * (_DWORD)v351) ^ v351;
  v400 = ((16 * (v399 ^ 0x40304303)) ^ 0x2B1EF1F0) & (v399 ^ 0x40304303) ^ (16 * (v399 ^ 0x40304303)) & 0xEAB1EF10;
  LODWORD(v351) = v351 ^ 0xEAB1EF1F ^ (v400 ^ 0xAA10E100) & ((_DWORD)v351 << 8);
  v401 = v292 ^ (2
                             * (((_DWORD)v351 << 16) & 0x6AB10000 ^ v351 ^ (((_DWORD)v351 << 16) ^ 0x6F1F0000) & (((v400 ^ 0x40A10E0F) << 8) & 0x6AB10000 ^ 0x4A100000 ^ (((v400 ^ 0x40A10E0F) << 8) ^ 0x31EF0000) & (v400 ^ 0x40A10E0F)))) ^ 0x47FB4C72;
  v402 = 0x322E42A57083BALL
       * (((v401 ^ 0x16DBA2B057BA443FLL) - 0x16DBA2B057BA443FLL) ^ ((v401 ^ 0xEB8ED61ABFD51147) + 0x147129E5402AEEB9) ^ ((v401 ^ 0xFD5574AA6542C11FLL) + 0x2AA8B559ABD3EE1))
       + 0x90235B5A2599A94;
  v403 = (v402 ^ 0xC0EAF8448BF4ED59) & (2 * (v402 & 0xE4C2FC1493C4ED42)) ^ v402 & 0xE4C2FC1493C4ED42;
  v404 = ((2 * (v402 ^ 0xC16A486C8CF425DDLL)) ^ 0x4B5168F03E61913ELL) & (v402 ^ 0xC16A486C8CF425DDLL) ^ (2 * (v402 ^ 0xC16A486C8CF425DDLL)) & 0x25A8B4781F30C89ELL;
  v405 = (v404 ^ 0x10020701E208018) & (4 * v403) ^ v403;
  v406 = ((4 * (v404 ^ 0x24A8940801104881)) ^ 0x96A2D1E07CC3227CLL) & (v404 ^ 0x24A8940801104881) ^ (4 * (v404 ^ 0x24A8940801104881)) & 0x25A8B4781F30C89CLL;
  v407 = (v406 ^ 0x4A090601C000000) & (16 * v405) ^ v405;
  v408 = ((16 * (v406 ^ 0x210824180330C883)) ^ 0x5A8B4781F30C89F0) & (v406 ^ 0x210824180330C883) ^ (16 * (v406 ^ 0x210824180330C883)) & 0x25A8B4781F30C890;
  v409 = (v408 ^ 0x88040013008800) & (v407 << 8) ^ v407;
  v410 = (((v408 ^ 0x2520B0780C30400FLL) << 8) ^ 0xA8B4781F30C89F00) & (v408 ^ 0x2520B0780C30400FLL) ^ ((v408 ^ 0x2520B0780C30400FLL) << 8) & 0x25A8B4781F30C800;
  v411 = v409 ^ 0x25A8B4781F30C89FLL ^ (v410 ^ 0x20A0301810000000) & (v409 << 16);
  v412 = v402 ^ (2
               * ((v411 << 32) & 0x25A8B47800000000 ^ v411 ^ ((v411 << 32) ^ 0x1F30C89F00000000) & (((v410 ^ 0x50884600F30409FLL) << 16) & 0x25A8B47800000000 ^ 0x180A04800000000 ^ (((v410 ^ 0x50884600F30409FLL) << 16) ^ 0x34781F3000000000) & (v410 ^ 0x50884600F30409FLL))));
  v413 = ((v412 ^ 0x4754D05BCE36EDBCLL) + 0x412CAB7F98352320) ^ ((v412 ^ 0x5D392190106BEDF9) + 0x5B415AB44668235BLL);
  LODWORD(v412) = __CFADD__(1306 * (v413 ^ ((v412 ^ 0xBFBF651F73F87C39) - 0x4638E1C4DA044D65)), 0x9F3EC9C2F937540)
                + (((v413 ^ ((v412 ^ 0xBFBF651F73F87C39) - 0x4638E1C4DA044D65)) * (unsigned __int128)0x51AuLL) >> 64)
                + 1306
                * ((__CFADD__(v412 ^ 0x4754D05BCE36EDBCLL, 0x412CAB7F98352320) - 1) ^ (__CFADD__(v412 ^ 0x5D392190106BEDF9, 0x5B415AB44668235BLL)- 1) ^ (__CFADD__(v412 ^ 0xBFBF651F73F87C39, 0xB9C71E3B25FBB29BLL)- 1))+ 296539684;
  LODWORD(v413) = (v412 ^ 0xEF13233B) & (2 * (v412 & 0xEE532BB3)) ^ v412 & 0xEE532BB3;
  LODWORD(v410) = ((2 * (v412 ^ 0xBF116279)) ^ 0xA2849394) & (v412 ^ 0xBF116279) ^ (2 * (v412 ^ 0xBF116279)) & 0x514249CA;
  LODWORD(v413) = (v410 ^ 0x20182) & (4 * v413) ^ v413;
  LODWORD(v410) = ((4 * (v410 ^ 0x5142484A)) ^ 0x45092728) & (v410 ^ 0x5142484A) ^ (4 * (v410 ^ 0x5142484A)) & 0x514249C8;
  LODWORD(v413) = (v410 ^ 0x41000102) & (16 * v413) ^ v413;
  LODWORD(v410) = ((16 * (v410 ^ 0x104248C2)) ^ 0x14249CA0) & (v410 ^ 0x104248C2) ^ (16 * (v410 ^ 0x104248C2)) & 0x514249C0;
  LODWORD(v413) = v413 ^ 0x514249CA ^ (v410 ^ 0x1000084A) & ((_DWORD)v413 << 8);
  LODWORD(v98) = *((unsigned __int8 *)&STACK[0x2920] + v245);
  LODWORD(STACK[0x1280]) = v98;
  LODWORD(v359) = *((unsigned __int8 *)&STACK[0x2920] + v376 % 0x51A);
  LODWORD(STACK[0x12A0]) = v359;
  LODWORD(v412) = v412 ^ (2
                        * (((_DWORD)v413 << 16) & 0x51420000 ^ v413 ^ (((_DWORD)v413 << 16) ^ 0x49CA0000) & (((v410 ^ 0x4142414A) << 8) & 0x51420000 ^ 0x11020000 ^ (((v410 ^ 0x4142414A) << 8) ^ 0x42490000) & (v410 ^ 0x4142414A))));
  LOBYTE(v410) = v359 ^ v98 ^ 0x12;
  v414 = v410 + 41218;
  LODWORD(v304) = 63 * (*(unsigned __int8 *)(STACK[0x18B8] + v414) ^ 9);
  LODWORD(v359) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x139C]));
  LODWORD(STACK[0x12C8]) = v359;
  LOBYTE(v414) = v414 ^ (5 - v410);
  LODWORD(v410) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x12EC]));
  v415 = v410 ^ v359;
  v416 = STACK[0x1858];
  LODWORD(v98) = *(unsigned __int8 *)(STACK[0x18B8]
                                    + ((-3 * (v410 ^ v359 ^ LODWORD(STACK[0x1858]))) ^ 0xFDu)
                                    + 40108);
  LODWORD(v98) = ((v98 >> 7) | (2 * v98)) ^ 0xFFFFFFD7 ^ (((*(_BYTE *)(STACK[0x18B8] + ((-3 * (v410 ^ v359 ^ LODWORD(STACK[0x1858]))) ^ 0xFDu) + 40108) >> 1) & 0x3F ^ ((v98 >> 7) | (2 * v98))) >> (v414 & 4));
  LODWORD(v413) = (v98 >> 2) | ((_DWORD)v98 << 6);
  v417 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1348]));
  LODWORD(v359) = ((-3 * (v417 ^ v410)) ^ 0x1B) + 1510336262;
  LODWORD(v348) = ((2 * (v359 ^ 0xDAF02DC3)) ^ 0x80150D46) & (v359 ^ 0xDAF02DC3) ^ (2 * (v359 ^ 0xDAF02DC3)) & 0x9EA2;
  LODWORD(v414) = v359 & 0x360 ^ (2 * (v359 & 0x360)) & 0xFFBF ^ ((2 * (v359 & 0x360)) | 0x14000) & (v359 ^ 0xDAF02DC3) ^ 0x7F0A3EA3;
  LODWORD(v414) = v414 ^ v348 & 0x8084085A ^ ((4 * v414) ^ 0x5BA452D6) & (v348 ^ 0x7F0A1C03);
  LODWORD(v348) = ((4 * v348) ^ 0x5BA65852) & (v348 ^ 0x7F0A1C03) ^ v348 & 0x8084085A;
  LODWORD(v414) = v414 ^ v348 & 0xA78E285A ^ ((16 * v414) ^ 0x2787424A) & (v348 ^ 0x270A0803);
  LODWORD(v348) = ((16 * v348) ^ 0xD72EA87A) & (v348 ^ 0x270A0803) ^ v348 & 0xA78E285A;
  LODWORD(v414) = v414 ^ v348 & 0xA78E285A ^ (((_DWORD)v414 << 8) ^ 0xAD108B5A) & (v348 ^ 0x270A08A3);
  LODWORD(v348) = (((_DWORD)v348 << 8) ^ 0xAD862A5A) & (v348 ^ 0x270A08A3) ^ v348 & 0xA78E285A;
  LODWORD(v359) = *(unsigned __int8 *)(STACK[0x18B8]
                                     + (v359 ^ (2
                                                            * (v414 ^ v348 & 0x278E285A ^ (((_DWORD)v414 << 16) ^ 0x312F285A) & (v348 ^ 0x58000000) ^ (((_DWORD)v414 << 16) ^ 0x312F285A) & 0x7F0A0802)) ^ 0x5BEF8E26));
  LODWORD(STACK[0x1290]) = (((v359 >> 3) & 0x15 ^ v359) >> 2) | (((v359 >> 3) & 0x15 ^ v359) << 6);
  v418 = *((unsigned __int8 *)&STACK[0x2920] + v392);
  LODWORD(v359) = v391 ^ v418 ^ *((unsigned __int8 *)&STACK[0x2920] + v397);
  LODWORD(v414) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x12E0]));
  v419 = v389 - 12;
  v420 = *((unsigned __int8 *)&STACK[0x2920] + (v412 ^ 0xCE53B827));
  LODWORD(v412) = v390[246];
  LODWORD(STACK[0x10B4]) = v417;
  LODWORD(v412) = v417 ^ v412;
  v421 = v419 ^ v414;
  v422 = v419 ^ v414 ^ v410 ^ v412;
  LODWORD(STACK[0x1298]) = v420 ^ v414;
  LODWORD(STACK[0x124C]) = v420 ^ v414 ^ v359;
  LODWORD(v98) = 385 * (v420 ^ v414 ^ v359) + 1243383780;
  LODWORD(v412) = (v98 ^ 0x58D9DEBA) & (2 * (v98 & 0x19EB3)) ^ v98 & 0x19EB3;
  LODWORD(v348) = (2 * (v98 ^ 0x58D8F3D8)) & 0x25016D6A ^ 0x25112529 ^ ((2 * (v98 ^ 0x58D8F3D8)) ^ 0x1242DAD6) & (v98 ^ 0x58D8F3D8);
  LODWORD(v412) = (4 * v412) & 0x6D48 ^ v412 ^ ((4 * v412) | 0x600000) & v348;
  LODWORD(v348) = (4 * v348) & 0x6D316D68 ^ 0x49304843 ^ ((4 * v348) ^ 0x34C5B5AC) & v348;
  LODWORD(v412) = (16 * v412) & 0x6D316D60 ^ v412 ^ ((16 * v412) ^ 0x3800000) & v348;
  LODWORD(v348) = (16 * v348) & 0xED316D60 ^ 0x2C21294B ^ ((16 * v348) ^ 0x5316D6B0) & v348;
  LODWORD(v412) = v412 ^ ((_DWORD)v412 << 8) & 0xED316D00 ^ (((_DWORD)v412 << 8) ^ 0x38000000) & v348;
  LODWORD(v250) = ((v412 ^ 0xC4096D6B) << 16) & 0x6D310000 ^ v412 ^ 0xC4096D6B ^ (((v412 ^ 0xC4096D6B) << 16) ^ 0x6D6B0000) & (((_DWORD)v348 << 8) & 0x6D310000 ^ 0x4C100000 ^ (((_DWORD)v348 << 8) ^ 0x316D0000) & v348);
  LODWORD(STACK[0x11F0]) = v422;
  LODWORD(v412) = v422 + 786667527;
  v423 = (v412 ^ 0x9C1A8F70) & 0x1020 & (2 * ((v422 - 26617) & 0x810 | 0x4D06E360)) ^ ((v422 - 26617) & 0x810 | 0x4D06E360) ^ ((2 * ((v422 - 26617) & 0x810 | 0x4D06E360)) & 0x8004060 | 0x40022000);
  LODWORD(v348) = ((2 * (v412 ^ 0x9C1A8F70)) ^ 0x920906C0) & (v412 ^ 0x9C1A8F70) ^ (2 * (v412 ^ 0x9C1A8F70)) & 0x5000360;
  v424 = v423 ^ v348 & 0x9299005C ^ ((4 * v423) ^ 0xCE896CDC) & (v348 ^ 0x4806E240);
  LODWORD(v348) = ((4 * v348) ^ 0xFA80E95C) & (v348 ^ 0x4806E240) ^ v348 & 0x9299005C;
  v425 = v424 ^ v348 & 0xDA9B605C ^ ((16 * v424) ^ 0xAF5565C) & (v348 ^ 0x48026040);
  LODWORD(v348) = ((16 * v348) ^ 0x5ABD645C) & (v348 ^ 0x48026040) ^ v348 & 0xDA9B605C;
  v426 = v425 ^ v348 & 0xDA9B605C ^ ((v425 << 8) ^ 0xDE18405C) & (v348 ^ 0x48026060);
  LODWORD(v348) = (((_DWORD)v348 << 8) ^ 0xD8FB205C) & (v348 ^ 0x48026060) ^ v348 & 0xDA9B605C;
  LODWORD(v412) = v412 ^ (2
                        * (v426 ^ v348 & 0x5A9B605C ^ ((v426 << 16) ^ 0x39FB605C) & (v348 ^ 0x5040000) ^ ((v426 << 16) ^ 0x39FB605C) & 0x4D066040));
  LODWORD(v412) = 385
                * (((v412 ^ 0xD7FDD1A3) + 2117783660) ^ ((v412 ^ 0x7242D560) - 611986263) ^ ((v412 ^ 0x7EAA6E93)
                                                                                           - 680693924))
                + 1746622351;
  v427 = (v412 ^ 0xC874861D) & (2 * (v412 & 0xE970D758)) ^ v412 & 0xE970D758;
  LODWORD(v348) = ((2 * (v412 ^ 0x98D42C0D)) ^ 0xE349F6AA) & (v412 ^ 0x98D42C0D) ^ (2 * (v412 ^ 0x98D42C0D)) & 0x71A4FB54;
  v428 = (v348 ^ 0x6100F200) & (4 * v427) ^ v427;
  LODWORD(v348) = ((4 * (v348 ^ 0x10A40955)) ^ 0xC693ED54) & (v348 ^ 0x10A40955) ^ (4 * (v348 ^ 0x10A40955)) & 0x71A4FB54;
  v429 = (v348 ^ 0x4080E941) & (16 * v428) ^ v428;
  LODWORD(v348) = ((16 * (v348 ^ 0x31241201)) ^ 0x1A4FB550) & (v348 ^ 0x31241201) ^ (16 * (v348 ^ 0x31241201)) & 0x71A4FB50;
  v430 = v429 ^ 0x71A4FB55 ^ (v348 ^ 0x1004B105) & (v429 << 8);
  LODWORD(v412) = v412 ^ (2
                        * ((v430 << 16) & 0x71A40000 ^ v430 ^ ((v430 << 16) ^ 0x7B550000) & (((v348 ^ 0x61A04A05) << 8) & 0x71A40000 ^ 0x51040000 ^ (((v348 ^ 0x61A04A05) << 8) ^ 0x24FB0000) & (v348 ^ 0x61A04A05)))) ^ 0xE83121F2;
  v431 = v390[77] ^ v304;
  LODWORD(STACK[0x12EC]) = (v98 ^ 0xB5C94465 ^ (2 * (_DWORD)v250)) % 0x51A;
  LODWORD(v262) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1730]));
  v432 = v390[72] ^ v262;
  STACK[0x1348] = v432;
  LODWORD(v432) = 385 * v432;
  LODWORD(v359) = v432 + 403095 - 1306 * ((3288643 * (unint64_t)(v432 + 403095)) >> 32);
  LODWORD(STACK[0x12B0]) = v359 - 1926392729 - ((2 * v359) & 0x8CE);
  LODWORD(v359) = *((unsigned __int8 *)&STACK[0x2920] + v396);
  LODWORD(STACK[0x118C]) = v359;
  v433 = v390;
  LODWORD(v359) = v415 ^ v359 ^ v390[54];
  STACK[0x1730] = v431;
  LODWORD(v431) = 385 * v431
                + 403095
                - 1306 * ((3288643 * (unint64_t)(385 * v431 + 403095)) >> 32);
  LODWORD(STACK[0x12E0]) = v431;
  LODWORD(v359) = v359 ^ v420;
  LODWORD(STACK[0x11EC]) = v359;
  LODWORD(v293) = 385 * v359;
  LODWORD(v359) = v293 + 403095 - 1306 * ((3288643 * (unint64_t)(v293 + 403095)) >> 32);
  v434 = *((unsigned __int8 *)&STACK[0x2920] + v412 % 0x51A);
  LODWORD(v359) = *((unsigned __int8 *)&STACK[0x2920]
                  + (((_DWORD)v359 - 1926392729 - ((2 * (_DWORD)v359) & 0x8CE)) ^ 0x8D2D9467));
  LODWORD(STACK[0x139C]) = 63 * (v434 ^ 0xD ^ *(unsigned __int8 *)((v434 ^ 0xCF) + STACK[0x18B8] + 4174));
  LOBYTE(v434) = ((v359 >> 3) | (32 * v359)) ^ 0x99;
  v435 = v434 + 4432;
  STACK[0x12A8] = v435;
  LODWORD(v434) = (((LODWORD(STACK[0x1868]) >> 3) | (32 * LODWORD(STACK[0x1868]))) ^ 0x99)
                - (((v435 & 0x376 ^ (-4433 - v434) & 0x8D63CF76) + 1922834558) & (1319513553
                                                                                                 * ((v431 & 0x2CB ^ 0x23D78ACB)
                                                                                                  + (v431 & 0x2CB))));
  v436 = v433;
  LODWORD(v431) = v433[168] ^ v413;
  LODWORD(v98) = *((unsigned __int8 *)&STACK[0x2920] + v384);
  v437 = v419 ^ v98 ^ *(unsigned __int8 *)(STACK[0x18B8] + v434);
  LODWORD(STACK[0x11E0]) = v431;
  LODWORD(v434) = v431 + 996918195;
  v438 = ((2 * (((_BYTE)v431 - 77) & 0x64)) & 0xBF | ((_BYTE)v431 - 77) & 0x64) ^ ((2 * (((_BYTE)v431 - 77) & 0x64)) | 0x8000) & (v434 ^ 0x203929F8);
  v439 = (2 * (v434 ^ 0x203929F8)) & 0x499C ^ 0x2884 ^ ((2 * (v434 ^ 0x203929F8)) ^ 0x952C338) & (v434 ^ 0x203929F8);
  v440 = (4 * v438) & 0x64AD6998 ^ v438 ^ (4 * v438) & v439;
  v441 = (4 * v439) & 0x64AD699C ^ 0x6408498C ^ ((4 * v439) ^ 0x1210A670) & v439;
  v442 = (16 * v440) & 0x64AD6990 ^ v440 ^ ((16 * v440) ^ 0x140000) & v441;
  v443 = (16 * v441) & 0xE4AD6980 ^ 0xA429601C ^ ((16 * v441) ^ 0x4AD699C0) & v441;
  v444 = v442 ^ (v442 << 8) & 0x64AD6900 ^ ((v442 << 8) ^ 0x5400000) & v443;
  LODWORD(v434) = v434 ^ (2
                        * (((v444 ^ 0xE0A8299C) << 16) & 0x64AD0000 ^ v444 ^ 0xE0A8299C ^ (((v444 ^ 0xE0A8299C) << 16) ^ 0x699C0000) & ((v443 << 8) & 0x64AD0000 ^ 0x40840000 ^ ((v443 << 8) ^ 0x2D690000) & v443)));
  v445 = v433[48];
  LODWORD(v245) = STACK[0x1280];
  LODWORD(v431) = v262 ^ v416 ^ v445 ^ LODWORD(STACK[0x1280]);
  LODWORD(STACK[0x11BC]) = v431;
  v446 = v431 + 538729291;
  v447 = (2 * (v446 & 0xCC)) & (v446 ^ 0xBE66F27F) ^ v446 & 0xCC ^ ((2 * (v446 & 0xCC)) & 0xF0 | 0x1000002);
  LODWORD(v433) = (2 * (v446 ^ 0xBE66F27F)) & 0xAB2 ^ 0x1A91 ^ ((2 * (v446 ^ 0xBE66F27F)) ^ 0x820AA566) & (v446 ^ 0xBE66F27F);
  v448 = (4 * v447) & 0x61855AB0 ^ v447 ^ ((4 * v447) ^ 0x4006008) & v433;
  LODWORD(v433) = (4 * (_DWORD)v433) & 0x61855AB0 ^ 0x61801033 ^ ((4 * (_DWORD)v433) ^ 0x86102ACC) & v433;
  v449 = (16 * v448) & 0x61855AB0 ^ v448 ^ ((16 * v448) ^ 0x10058020) & v433;
  LODWORD(v433) = (16 * (_DWORD)v433) & 0x61855AB0 ^ 0x61805083 ^ ((16 * (_DWORD)v433) ^ 0x1855AB30) & v433;
  v450 = v449 ^ 0x61800091 ^ (v449 << 8) & 0x61855A00 ^ ((v449 << 8) ^ 0x5582200) & v433;
  LODWORD(v262) = (v450 << 16) & 0x61850000 ^ v450 ^ ((v450 << 16) ^ 0x5AB30000) & (((_DWORD)v433 << 8) & 0x61850000 ^ 0x60850000 ^ (((_DWORD)v433 << 8) ^ 0x855A0000) & v433);
  LODWORD(STACK[0x11C0]) = v437 ^ 0x38;
  LODWORD(STACK[0x1288]) = 385 * (v437 ^ 0x38)
                         + 403095
                         - 1306 * ((3288643 * (unint64_t)(385 * (v437 ^ 0x38u) + 403095)) >> 32);
  v451 = v436;
  LODWORD(v359) = 385
                * (((v434 ^ 0x6B6401B1) - 715064970) ^ ((v434 ^ 0xEA0F7CD) - 1331425526) ^ ((v434 ^ 0xA9126520)
                                                                                          + 387358181))
                - 1506159546;
  LODWORD(v434) = (v359 ^ 0x8309580C) & (2 * (v359 & 0xAB525AA1)) ^ v359 & 0xAB525AA1;
  LODWORD(v433) = ((2 * (v359 ^ 0xD18DC94E)) ^ 0xF5BF27DE) & (v359 ^ 0xD18DC94E) ^ (2 * (v359 ^ 0xD18DC94E)) & 0x7ADF93EE;
  LODWORD(v434) = (v433 ^ 0x709B038C) & (4 * v434) ^ v434;
  LODWORD(v433) = ((4 * (v433 ^ 0xA409021)) ^ 0xEB7E4FBC) & (v433 ^ 0xA409021) ^ (4 * (v433 ^ 0xA409021)) & 0x7ADF93EC;
  LODWORD(v434) = (v433 ^ 0x6A5E03A0) & (16 * v434) ^ v434;
  LODWORD(v433) = ((16 * (v433 ^ 0x10819043)) ^ 0xADF93EF0) & (v433 ^ 0x10819043) ^ (16 * (v433 ^ 0x10819043)) & 0x7ADF93E0;
  LODWORD(v434) = v434 ^ 0x7ADF93EF ^ (v433 ^ 0x28D91200) & ((_DWORD)v434 << 8);
  LODWORD(v434) = ((_DWORD)v434 << 16) & 0x7ADF0000 ^ v434 ^ (((_DWORD)v434 << 16) ^ 0x13EF0000) & (((v433 ^ 0x5206810F) << 8) & 0x7ADF0000 ^ 0x204C0000 ^ (((v433 ^ 0x5206810F) << 8) ^ 0x5F930000) & (v433 ^ 0x5206810F));
  v452 = ((v436[211] * (((v432 - 105) ^ (104 - v432)) & 0x6C | 0x91)) ^ 0x1B) + 711953461;
  LODWORD(v433) = (2 * (v452 & 0xC31 ^ 0x34504228)) & 0x20 ^ v452 & 0xC31 ^ 0x34504228 ^ ((2
                                                                                         * (v452 & 0xC31 ^ 0x34504228)) ^ 0x48A28050) & (v452 ^ 0xE1C04C19);
  v453 = (2 * (v452 ^ 0xE1C04C19)) & 0x228 ^ 0x4228 ^ ((2 * (v452 ^ 0xE1C04C19)) ^ 0x48A28050) & (v452 ^ 0xE1C04C19);
  LODWORD(v433) = (4 * (_DWORD)v433) & 0x34514228 ^ v433 ^ ((4 * (_DWORD)v433) ^ 0xD14508A0) & v453;
  v454 = (4 * v453) & 0x34514228 ^ 0x24104208 ^ ((4 * v453) ^ 0xD14508A0) & v453;
  LODWORD(v433) = v433 ^ 0x10410020 ^ (16 * (_DWORD)v433) & 0x34514220 ^ ((16 * (_DWORD)v433) ^ 0x41042080) & v454;
  v455 = (16 * v454) & 0x34514220 ^ 0x30414028 ^ ((16 * v454) ^ 0x45142280) & v454;
  LODWORD(v433) = ((_DWORD)v433 << 8) & 0x34514200 ^ v433 ^ (((_DWORD)v433 << 8) ^ 0x51422800) & v455;
  LODWORD(v250) = (v446 ^ (2 * (_DWORD)v262) ^ 0x9DEB1DAA)
                * ((((_DWORD)v293 + 403095) & 0x181) + ((360 - (_DWORD)v293) & 0x181))
                % 0x51A;
  LODWORD(v293) = *(unsigned __int8 *)(STACK[0x18B8]
                                     + (v452 ^ (2
                                              * (((_DWORD)v433 << 16) & 0x34510000 ^ v433 ^ (((_DWORD)v433 << 16) ^ 0x42280000) & ((v455 << 8) & 0x34510000 ^ 0x24110000 ^ ((v455 << 8) ^ 0x51420000) & v455))) ^ 0x9DB38A61));
  LODWORD(STACK[0x12D8]) = (v359 ^ (2 * (_DWORD)v434) ^ 0x7B737D7F) % 0x51A;
  LODWORD(STACK[0x11B0]) = v414 ^ ((((v293 >> 3) & 0x15 ^ v293) >> 2) | (((v293 >> 3) & 0x15 ^ v293) << 6)) ^ v410 ^ 0x13;
  LODWORD(v432) = 385
                * ((v414 ^ ((((v293 >> 3) & 0x15 ^ v293) >> 2) | (((v293 >> 3) & 0x15 ^ v293) << 6)) ^ v410) ^ 0x13)
                + 403095;
  LODWORD(STACK[0x12D0]) = v432 - 1306 * ((3288643 * (unint64_t)v432) >> 32);
  LODWORD(v432) = v421 ^ LODWORD(STACK[0x12C8]) ^ v418 ^ LODWORD(STACK[0x1868]);
  LODWORD(STACK[0x1220]) = v432;
  LODWORD(v432) = *((unsigned __int8 *)&STACK[0x2920]
                  + (385 * v432
                                 + 403095
                                 - 1306
                                 * ((3288643 * (unint64_t)(385 * v432 + 403095)) >> 32)));
  LODWORD(STACK[0x12C8]) = (v432 >> 3) | (32 * v432);
  LODWORD(v432) = ((71 * LODWORD(STACK[0x14A4])) ^ 0xB1) + 1669659207;
  LODWORD(v431) = ((32 * (((v432 & 0x18) >> 4) & 1)) | 0x48280000) ^ (v432 & 0x18 | 0x24941820) ^ ((16 * (((v432 & 0x18) >> 3) & 3)) | 0xB000) & (v432 ^ 0xF0C70838);
  LODWORD(v434) = (2 * (v432 ^ 0xF0C70838)) & 0x220 ^ 0x1620 ^ ((2 * (v432 ^ 0xF0C70838)) ^ 0x9140A040) & (v432 ^ 0xF0C70838);
  LODWORD(v431) = (4 * v431) & 0x6CBC5620 ^ v431 ^ ((4 * v431) ^ 0xB2F15880) & v434;
  LODWORD(v434) = (4 * v434) & 0x6CBC5620 ^ 0x4C0C0620 ^ ((4 * v434) ^ 0xB2F15880) & v434;
  LODWORD(v431) = v431 ^ (16 * v431) & 0x6CBC5620 ^ ((16 * v431) ^ 0xC0C06200) & v434;
  LODWORD(v434) = (16 * v434) & 0x6CBC5620 ^ 0x24381420 ^ ((16 * v434) ^ 0xCBC56200) & v434;
  LODWORD(v431) = ((v431 ^ 0x60301200) << 8) & 0x6CBC5600 ^ v431 ^ 0x60301200 ^ (((v431 ^ 0x60301200) << 8) ^ 0xBC562000) & v434;
  LODWORD(v98) = v98 ^ v436[98];
  LODWORD(v432) = (((*(unsigned __int8 *)(STACK[0x18B8]
                                        + (v432 ^ (2
                                                               * (((_DWORD)v431 << 16) & 0x6CBC0000 ^ v431 ^ (((_DWORD)v431 << 16) ^ 0x56200000) & (((_DWORD)v434 << 8) & 0x6CBC0000 ^ 0x40A80000 ^ (((_DWORD)v434 << 8) ^ 0xBC560000) & v434))) ^ 0x956BF258))
                   - 84) ^ 0x29)
                 - 107) ^ v420;
  LODWORD(STACK[0x11A8]) = v432;
  LODWORD(v432) = 385 * v432
                + 403095
                - 1306 * ((3288643 * (unint64_t)(385 * v432 + 403095)) >> 32);
  LODWORD(STACK[0x14A4]) = v432 - 1926392729 - ((2 * v432) & 0x8CE);
  LODWORD(STACK[0x10A0]) = v414;
  LODWORD(STACK[0x11A4]) = v98 ^ v414;
  LODWORD(v432) = (v98 ^ v414) + 472622853;
  LODWORD(v98) = ((2 * (((v98 ^ v414) - 22779) & 0xD12)) & 0x1200 | ((v98 ^ v414)
                                                                                    - 22779) & 0xD12) ^ (2 * (((v98 ^ v414) - 22779) & 0xD12)) & (v432 ^ 0xD1112E0B);
  LODWORD(v431) = ((2 * (v432 ^ 0xD1112E0B)) ^ 0x450A8632) & (v432 ^ 0xD1112E0B) ^ (2 * (v432 ^ 0xD1112E0B)) & 0x1318;
  LODWORD(v98) = (v431 ^ 0x6111) & (4 * v98) ^ v98;
  LODWORD(v431) = ((4 * (v431 ^ 0x1109)) ^ 0xCB15CC64) & (v431 ^ 0x1109) ^ (4 * (v431 ^ 0x1109)) & 0x32C57318;
  LODWORD(v98) = (v431 ^ 0x2054019) & (16 * v98) ^ v98;
  LODWORD(v431) = ((16 * (v431 ^ 0x30C03319)) ^ 0x2C573190) & (v431 ^ 0x30C03319) ^ (16 * (v431 ^ 0x30C03319)) & 0x32C57310;
  LODWORD(v98) = v98 ^ 0x32C57319 ^ (v431 ^ 0x20453109) & ((_DWORD)v98 << 8);
  LODWORD(v432) = v432 ^ (2
                        * (((_DWORD)v98 << 16) & 0x32C50000 ^ v98 ^ (((_DWORD)v98 << 16) ^ 0x73190000) & (((v431 ^ 0x12804209) << 8) & 0x32C50000 ^ 0x32840000 ^ (((v431 ^ 0x12804209) << 8) ^ 0x45730000) & (v431 ^ 0x12804209))));
  LODWORD(v432) = 385
                * (((v432 ^ 0x7EE57314) - 294935635) ^ ((v432 ^ 0x8BA13660) + 456124121) ^ ((v432 ^ 0x1718FE54)
                                                                                          - 2020200723))
                - 1620194880;
  LODWORD(v431) = (v432 ^ 0x285D70B7) & (2 * (v432 & 0xB21E6527)) ^ v432 & 0xB21E6527;
  LODWORD(v434) = ((2 * (v432 ^ 0x2C6DF2F5)) ^ 0x3CE72FA4) & (v432 ^ 0x2C6DF2F5) ^ (2 * (v432 ^ 0x2C6DF2F5)) & 0x9E7397D2;
  LODWORD(v431) = (v434 ^ 0x18630580) & (4 * v431) ^ v431;
  LODWORD(v434) = ((4 * (v434 ^ 0x82109052)) ^ 0x79CE5F48) & (v434 ^ 0x82109052) ^ (4 * (v434 ^ 0x82109052)) & 0x9E7397D0;
  LODWORD(v431) = (v434 ^ 0x18421742) & (16 * v431) ^ v431;
  LODWORD(v434) = ((16 * (v434 ^ 0x86318092)) ^ 0xE7397D20) & (v434 ^ 0x86318092) ^ (16 * (v434 ^ 0x86318092)) & 0x9E7397D0;
  LODWORD(v431) = v431 ^ 0x9E7397D2 ^ (v434 ^ 0x86311500) & ((_DWORD)v431 << 8);
  LODWORD(v432) = v432 ^ (2
                        * (((_DWORD)v431 << 16) & 0x1E730000 ^ v431 ^ (((_DWORD)v431 << 16) ^ 0x17D20000) & (((v434 ^ 0x184282D2) << 8) & 0x1E730000 ^ 0xC600000 ^ (((v434 ^ 0x184282D2) << 8) ^ 0x73970000) & (v434 ^ 0x184282D2))));
  LODWORD(v434) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x12B8]));
  v456 = v421 ^ LODWORD(STACK[0x12C4]) ^ v245 ^ v420 ^ LODWORD(STACK[0x12A0]) ^ v436[67] ^ 0x13 ^ LODWORD(STACK[0x1290]);
  LODWORD(v98) = ((71 * (v434 ^ LODWORD(STACK[0x1858]) ^ v445)) ^ 0xB1) + 1113622211;
  LODWORD(v431) = (v98 ^ 0x22C0110B) & (2 * (v98 & 0x19C)) ^ v98 & 0x19C ^ ((16
                                                                           * (((unsigned __int16)(v98 & 0x19C) >> 3) & 1)) | 0x120A8000);
  LODWORD(v436) = (2 * (v98 ^ 0x22C0110B)) & 0x10096 ^ 0x4091 ^ ((2 * (v98 ^ 0x22C0110B)) ^ 0x20A0812E) & (v98 ^ 0x22C0110B);
  LODWORD(v431) = (4 * v431) & 0x80A0090 ^ v431 ^ ((4 * v431) ^ 0x482C0000) & v436;
  LODWORD(v436) = (4 * (_DWORD)v436) & 0x9F5FC094 ^ 0x8200C083 ^ ((4 * (_DWORD)v436) ^ 0x7D7F025C) & v436;
  LODWORD(v431) = (16 * v431) & 0x9F5FC090 ^ v431 ^ ((16 * v431) ^ 0xA0700000) & v436;
  LODWORD(v436) = (16 * (_DWORD)v436) & 0x9F5FC090 ^ 0xA03C087 ^ ((16 * (_DWORD)v436) ^ 0xF5FC0970) & v436;
  LODWORD(v431) = v431 ^ ((_DWORD)v431 << 8) & 0x9F5FC000 ^ (((_DWORD)v431 << 8) ^ 0x57000000) & v436;
  LODWORD(v293) = v98 ^ (2
                       * (((v431 ^ 0x1208C097) << 16) & 0x1F5F0000 ^ v431 ^ 0x1208C097 ^ (((v431 ^ 0x1208C097) << 16) ^ 0x40970000) & (((_DWORD)v436 << 8) & 0x1F5F0000 ^ (((_DWORD)v436 << 8) ^ 0x5FC00000) & v436 ^ 0x1F0000)));
  LODWORD(STACK[0x12A0]) = v456;
  LODWORD(v98) = LODWORD(STACK[0x1298]) ^ v434 ^ v451[163];
  LODWORD(STACK[0x1290]) = v98;
  LODWORD(v98) = v98 + 716889602;
  LODWORD(v434) = ((2 * (v98 & 0x15)) & 0xA3 | 0x80248044) ^ v98 & 0x15 ^ (((2 * (v98 & 0x15)) | 0x400) & (v98 ^ 0x1F3BCA73) | 0x2133D805);
  LODWORD(v436) = (2 * (v98 ^ 0x1F3BCA73)) & 0x66 ^ 0xC22 ^ ((2 * (v98 ^ 0x1F3BCA73)) ^ 0x148110CC) & (v98 ^ 0x1F3BCA73);
  LODWORD(v434) = (4 * v434) & 0x4A788C64 ^ v434 ^ ((4 * v434) ^ 0x4010904) & v436;
  LODWORD(v436) = (4 * (_DWORD)v436) & 0xCA7EEC64 ^ 0xC2044C66 ^ ((4 * (_DWORD)v436) ^ 0x29FBB198) & v436;
  LODWORD(v434) = (16 * v434) & 0xCA7EEC60 ^ v434 ^ ((16 * v434) ^ 0x14F7A450) & v436;
  LODWORD(v436) = (16 * (_DWORD)v436) & 0xCA7EEC60 ^ 0x48102806 ^ ((16 * (_DWORD)v436) ^ 0xA7EEC660) & v436;
  LODWORD(v434) = v434 ^ ((_DWORD)v434 << 8) & 0xCA7EEC00 ^ (((_DWORD)v434 << 8) ^ 0x39DE0500) & v436;
  LODWORD(v413) = v98 ^ (2
                       * (((v434 ^ 0x63193663) << 16) & 0x4A7E0000 ^ v434 ^ 0x63193663 ^ (((v434 ^ 0x63193663) << 16) ^ 0x6C660000) & (((_DWORD)v436 << 8) & 0xCA7E0000 ^ 0x120000 ^ (((_DWORD)v436 << 8) ^ 0x7EEC0000) & v436)));
  v457 = 0x322E42A57083BALL
       * (((v432 ^ 0x48F31E6F9BD2C7E3) - 0x48F31E6FB4A21907) ^ ((v432 ^ 0xE95133A0D9F4E52DLL)
                                                                                + 0x16AECC5F097BC437) ^ ((v432 ^ 0xA1A22DCFE07B684DLL) + 0x5E5DD23030F44957))
       - 0x54AC1935E925C10ELL;
  v458 = (v457 ^ 0x127423FBDF262ED5) & (2 * (v457 & 0x42714B001F4448E4)) ^ v457 & 0x42714B001F4448E4;
  v459 = ((2 * (v457 ^ 0x12D4B3FBEBA62F5DLL)) ^ 0xA14BF1F7E9C4CF72) & (v457 ^ 0x12D4B3FBEBA62F5DLL) ^ (2 * (v457 ^ 0x12D4B3FBEBA62F5DLL)) & 0x50A5F8FBF4E267B8;
  v460 = (v459 ^ 0x17000E0004730) & (4 * v458) ^ v458;
  v461 = ((4 * (v459 ^ 0x50A4080814222089)) ^ 0x4297E3EFD3899EE4) & (v459 ^ 0x50A4080814222089) ^ (4 * (v459 ^ 0x50A4080814222089)) & 0x50A5F8FBF4E267B8;
  v462 = (v461 ^ 0x4085E0EBD08006A0) & (16 * v460) ^ v460;
  v463 = ((16 * (v461 ^ 0x1020181024626119)) ^ 0xA5F8FBF4E267B90) & (v461 ^ 0x1020181024626119) ^ (16 * (v461 ^ 0x1020181024626119)) & 0x50A5F8FBF4E267B0;
  v464 = (v463 ^ 0x588BB44226300) & (v462 << 8) ^ v462;
  v465 = (((v463 ^ 0x50A07040B0C00429) << 8) ^ 0xA5F8FBF4E267B900) & (v463 ^ 0x50A07040B0C00429) ^ ((v463 ^ 0x50A07040B0C00429) << 8) & 0x50A5F8FBF4E26700;
  v466 = v464 ^ 0x50A5F8FBF4E267B9 ^ (v465 ^ 0xA0F8F0E0620000) & (v464 << 16);
  v467 = v457 ^ (2
               * ((v466 << 32) & 0x50A5F8FB00000000 ^ v466 ^ ((v466 << 32) ^ 0x74E267B900000000) & (((v465 ^ 0x5005000B148046B9) << 16) & 0x50A5F8FB00000000 ^ 0x4081900000000 ^ (((v465 ^ 0x5005000B148046B9) << 16) ^ 0x78FBF4E200000000) & (v465 ^ 0x5005000B148046B9))));
  v468 = ((v467 ^ 0xE2F325FA52967B07) + 0x75A93267483C5400) ^ ((v467 ^ 0xCA923E5BD710DAD1) + 0x5DC829C6CDBAF22ALL);
  LODWORD(v436) = __CFADD__(1306 * (v468 ^ ((v467 ^ 0x6A1B602473062640) - 0x2BE88469653F147)), 0xB89888DB2E3D03BALL)
                + (((v468 ^ ((v467 ^ 0x6A1B602473062640) - 0x2BE88469653F147)) * (unsigned __int128)0x51AuLL) >> 64)
                + 1306
                * ((__CFADD__(v467 ^ 0xE2F325FA52967B07, 0x75A93267483C5400) - 1) ^ (__CFADD__(v467 ^ 0xCA923E5BD710DAD1, 0x5DC829C6CDBAF22ALL)- 1) ^ (__CFADD__(v467 ^ 0x6A1B602473062640, 0xFD4177B969AC0EB9)- 1))+ 1373740444;
  LODWORD(v467) = (v436 ^ 0xAE1F63BE) & (2 * (v436 & 0xAE1E633E)) ^ v436 & 0xAE1E633E;
  LODWORD(v468) = ((2 * (v436 ^ 0xFA3BA1E2)) ^ 0xA84B85B8) & (v436 ^ 0xFA3BA1E2) ^ (2 * (v436 ^ 0xFA3BA1E2)) & 0x5425C2DC;
  LODWORD(v467) = (v468 ^ 0x405C29C) & (4 * v467) ^ v467;
  LODWORD(v468) = ((4 * (v468 ^ 0x54244244)) ^ 0x50970B70) & (v468 ^ 0x54244244) ^ (4 * (v468 ^ 0x54244244)) & 0x5425C2DC;
  LODWORD(v467) = (v468 ^ 0x5005024C) & (16 * v467) ^ v467;
  LODWORD(v468) = ((16 * (v468 ^ 0x420C08C)) ^ 0x425C2DC0) & (v468 ^ 0x420C08C) ^ (16 * (v468 ^ 0x420C08C)) & 0x5425C2D0;
  LODWORD(v467) = v467 ^ 0x5425C2DC ^ (v468 ^ 0x4004001C) & ((_DWORD)v467 << 8);
  LODWORD(v468) = ((_DWORD)v467 << 16) & 0x54250000 ^ v467 ^ (((_DWORD)v467 << 16) ^ 0x42DC0000) & (((v468 ^ 0x1421C21C) << 8) & 0x54250000 ^ 0x50250000 ^ (((v468 ^ 0x1421C21C) << 8) ^ 0x25C20000) & (v468 ^ 0x1421C21C));
  LODWORD(v467) = 385
                * (((v413 ^ 0x314D12EC) - 1830058066) ^ ((v413 ^ 0xC6F4107C) + 1699906878) ^ ((v413 ^ 0x26CDFC49)
                                                                                            - 2056558327))
                - 1573632621;
  LODWORD(v465) = v467 & 0xAF57E954 ^ 0x2C860C11 ^ (v467 ^ 0x8F57E545) & (2 * (v467 & 0xAF57E954));
  LODWORD(v413) = (2 * (v467 ^ 0x83D1E545)) & 0x2C860C10 ^ 0x24820411 ^ ((2 * (v467 ^ 0x83D1E545)) ^ 0x590C1822) & (v467 ^ 0x83D1E545);
  LODWORD(v465) = (4 * v465) & 0x2C860C10 ^ v465 ^ ((4 * v465) ^ 0xB2183044) & v413;
  LODWORD(v413) = (4 * v413) & 0x2C860C10 ^ 0xC860C11 ^ ((4 * v413) ^ 0xB2183044) & v413;
  LODWORD(v465) = v465 ^ 0x28000010 ^ (16 * v465) & 0x2C860C10 ^ ((16 * v465) ^ 0xC860C110) & v413;
  LODWORD(v413) = (16 * v413) & 0x2C860C10 ^ 0x24860C01 ^ ((16 * v413) ^ 0xC860C110) & v413;
  LODWORD(v465) = ((_DWORD)v465 << 8) & 0x2C860C00 ^ v465 ^ (((_DWORD)v465 << 8) ^ 0x860C1100) & v413;
  LODWORD(v467) = v467 ^ (2
                        * (((_DWORD)v465 << 16) & 0x2C860000 ^ v465 ^ (((_DWORD)v465 << 16) ^ 0xC110000) & (((_DWORD)v413 << 8) & 0x2C860000 ^ 0x28820000 ^ (((_DWORD)v413 << 8) ^ 0x60C0000) & v413)));
  LODWORD(v293) = (*(unsigned __int8 *)(STACK[0x18B8] + (v293 ^ 0x830E50B2)) - 84) ^ 0x29;
  LODWORD(STACK[0x1280]) = v293 - 107;
  LODWORD(v465) = (v293 - 107) + 958865553;
  v469 = ((2 * (v465 & 0x186)) & 0x200 | 0xD00062 | ((2 * (v465 & 0x186)) | 0x2000) & (v465 ^ 0xF6001564)) ^ v465 & 0x186;
  LODWORD(v413) = (2 * (v465 ^ 0xF6001564)) & 0x62E2 ^ 0x1222 ^ ((2 * (v465 ^ 0xF6001564)) ^ 0x412125C4) & (v465 ^ 0xF6001564);
  v470 = (4 * v469) & 0x30D8F6E0 ^ v469 ^ ((4 * v469) ^ 0x3410188) & v413;
  LODWORD(v413) = (4 * v413) & 0x30D8F6E0 ^ 0x30982462 ^ ((4 * v413) ^ 0xC3235388) & v413;
  v471 = (16 * v470) & 0x30D8F6E0 ^ v470 ^ ((16 * v470) ^ 0x9040E20) & v413;
  LODWORD(v413) = (16 * v413) & 0x30D8F6E0 ^ 0x305090C2 ^ ((16 * v413) ^ 0xD8F6E20) & v413;
  v472 = v471 ^ (v471 << 8) & 0x30D8F600 ^ ((v471 << 8) ^ 0x9046C200) & v413;
  LODWORD(v413) = v465 ^ (2
                        * (((v472 ^ 0x20087220) << 16) & 0x30D80000 ^ v472 ^ 0x20087220 ^ (((v472 ^ 0x20087220) << 16) ^ 0x76E20000) & (((_DWORD)v413 << 8) & 0x30D80000 ^ 0x20080000 ^ (((_DWORD)v413 << 8) ^ 0x58F60000) & v413)));
  LODWORD(v465) = 385
                * (((v413 ^ 0x13AE8DC1) - 1483347940) ^ ((v413 ^ 0xAA3819DF) + 503544838) ^ ((v413 ^ 0x7F7F9A5C)
                                                                                           - 884670585))
                + 1928275807;
  v473 = (v465 ^ 0x9C5C87C1) & (2 * (v465 & 0xDE9D0788)) ^ v465 & 0xDE9D0788;
  LODWORD(v451) = ((2 * (v465 ^ 0xB95C8FC1)) ^ 0xCF831092) & (v465 ^ 0xB95C8FC1) ^ (2 * (v465 ^ 0xB95C8FC1)) & 0x67C18848;
  v474 = (v451 ^ 0x46800000) & (4 * v473) ^ v473;
  LODWORD(v451) = ((4 * (v451 ^ 0x20408849)) ^ 0x9F062124) & (v451 ^ 0x20408849) ^ (4 * (v451 ^ 0x20408849)) & 0x67C18848;
  v475 = (v451 ^ 0x7000009) & (16 * v474) ^ v474;
  LODWORD(v451) = ((16 * (v451 ^ 0x60C18849)) ^ 0x7C188490) & (v451 ^ 0x60C18849) ^ (16 * (v451 ^ 0x60C18849)) & 0x67C18840;
  v476 = v475 ^ 0x67C18849 ^ (v451 ^ 0x64008049) & (v475 << 8);
  LODWORD(v451) = v465 ^ (2
                        * ((v476 << 16) & 0x67C10000 ^ v476 ^ ((v476 << 16) ^ 0x8490000) & (((v451 ^ 0x3C10849) << 8) & 0x67C10000 ^ 0x26410000 ^ (((v451 ^ 0x3C10849) << 8) ^ 0x41880000) & (v451 ^ 0x3C10849))));
  v477 = 0x322E42A57083BALL
       * (((v467 ^ 0x394FD80AAB43C12FLL) - 0x394FD80AC03DA43ELL) ^ ((v467 ^ 0xFFAFF862DE151392)
                                                                                + 0x50079D4A94897DLL) ^ ((v467 ^ 0xC6E02068930523CBLL) + 0x391FDF970784B926))
       + 0x550E52EDE5496C67;
  v478 = (2 * (v477 & 0x98B6DEDC50D51B6ELL)) & 0x93C0021A03488 ^ v477 & 0x98B6DEDC50D51B6ELL ^ ((2
                                                                                                 * (v477 & 0x98B6DEDC50D51B6ELL)) | 2) & (v477 ^ 0xD83FE09A213066E6);
  v479 = (2 * (v477 ^ 0xD83FE09A213066E6)) & 0x40893E4671E57D88 ^ 0x4089024210250489 ^ ((2
                                                                                             * (v477 ^ 0xD83FE09A213066E6)) ^ 0x81127C8CE3CAFB12) & (v477 ^ 0xD83FE09A213066E6);
  v480 = (4 * v478) & 0x40893E4671E57D88 ^ v478 ^ ((4 * v478) | 4) & v479;
  v481 = (4 * v479) & 0x40893E4671E57D88 ^ 0x4089064630600989 ^ ((4 * v479) ^ 0x224F919C795F624) & v479;
  v482 = (16 * v480) & 0x40893E4671E57D80 ^ v480 ^ ((16 * v480) ^ 0x10) & v481;
  v483 = (16 * v481) & 0x40893E4671E57D80 ^ 0x40081A0061A02509 ^ ((16 * v481) ^ 0x893E4671E57D890) & v481;
  v484 = (v482 << 8) & 0x40893E4671E57D00 ^ v482 ^ ((v482 << 8) ^ 0x100) & v483;
  v485 = (v483 << 8) & 0x40893E4671E57D00 ^ 0x4081380610807489 ^ ((v483 << 8) ^ 0x893E4671E57D8900) & v483;
  v486 = v484 ^ (v484 << 16) & 0x40893E4671E50000 ^ ((v484 << 16) ^ 0x1010000) & v485;
  v487 = v477 ^ (2
               * (((v486 ^ 0x40893E4670E47C88) << 32) & 0x40893E4600000000 ^ v486 ^ 0x40893E4670E47C88 ^ (((v486 ^ 0x40893E4670E47C88) << 32) ^ 0x71E57D8900000000) & ((v485 << 16) & 0x40893E4600000000 ^ 0x40890E0200000000 ^ ((v485 << 16) ^ 0x3E4671E500000000) & v485)));
  v488 = ((v487 ^ 0x880D6DCEED58E05) - 0x48A1E086F2F999DLL) ^ ((v487 ^ 0xADBFEA2F2CAB221ELL) + 0x5E4ADD0452AECA7ALL);
  LODWORD(v485) = __CFADD__(1306 * (v488 ^ ((v487 ^ 0x3D99E6A371614C66) - 0x31932E77F09B5BFELL)), 0x75D6766BA932A642)+ (((v488 ^ ((v487 ^ 0x3D99E6A371614C66) - 0x31932E77F09B5BFELL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v487 ^ 0x880D6DCEED58E05, 0xFB75E1F790D06663) - 1) ^ (__CFADD__(v487 ^ 0xADBFEA2F2CAB221ELL, 0x5E4ADD0452AECA7ALL)- 1) ^ (__CFADD__(v487 ^ 0x3D99E6A371614C66, 0xCE6CD1880F64A402)- 1))+ 758820107;
  LODWORD(v487) = (v485 ^ 0x9A9041C2) & (2 * (v485 & 0xD2C555EB)) ^ v485 & 0xD2C555EB;
  LODWORD(v488) = ((2 * (v485 ^ 0x9E92C810)) ^ 0x98AF3BF6) & (v485 ^ 0x9E92C810) ^ (2 * (v485 ^ 0x9E92C810)) & 0x4C579DFA;
  LODWORD(v487) = (v488 ^ 0x80719F0) & (4 * v487) ^ v487;
  LODWORD(v488) = ((4 * (v488 ^ 0x44508409)) ^ 0x315E77EC) & (v488 ^ 0x44508409) ^ (4 * (v488 ^ 0x44508409)) & 0x4C579DF8;
  LODWORD(v487) = (v488 ^ 0x5615E0) & (16 * v487) ^ v487;
  LODWORD(v488) = ((16 * (v488 ^ 0x4C018813)) ^ 0xC579DFB0) & (v488 ^ 0x4C018813) ^ (16 * (v488 ^ 0x4C018813)) & 0x4C579DF0;
  LODWORD(v487) = v487 ^ 0x4C579DFB ^ (v488 ^ 0x44519D00) & ((_DWORD)v487 << 8);
  LODWORD(v487) = ((_DWORD)v487 << 16) & 0x4C570000 ^ v487 ^ (((_DWORD)v487 << 16) ^ 0x1DFB0000) & (((v488 ^ 0x806004B) << 8) & 0x4C570000 ^ 0x8420000 ^ (((v488 ^ 0x806004B) << 8) ^ 0x579D0000) & (v488 ^ 0x806004B));
  LODWORD(v468) = v436 ^ (2 * v468);
  v489 = 0x322E42A57083BALL
       * (((v451 ^ 0xB33C7D8FF56C3F8) - 0xB33C7D863E74085) ^ ((v451 ^ 0x3C6A2744657303C8)
                                                                              - 0x3C6A2744F9C280B5) ^ ((v451 ^ 0x3759E09C8BB9D72ALL) - 0x3759E09C17085457))
       - 0x6C5D8E6F6180FCE3;
  v490 = (2 * (v489 & 0x5A22C039979F84B8)) & 0x304000100B1A0810 ^ v489 & 0x5A22C039979F84B8 ^ ((2 * (v489 & 0x5A22C039979F84B8)) | 2) & (v489 ^ 0x22428921CC05AA2FLL);
  v491 = (2 * (v489 ^ 0x22428921CC05AA2FLL)) & 0x786049185B9A2E94 ^ 0x8204908488A2292 ^ ((2
                                                                                            * (v489 ^ 0x22428921CC05AA2FLL)) ^ 0xF0C09230B7345D2CLL) & (v489 ^ 0x22428921CC05AA2FLL);
  v492 = (4 * v490) & 0x786049185B9A2E94 ^ v490 ^ ((4 * v490) ^ 0xC) & v491;
  v493 = (4 * v491) & 0x786049185B9A2E94 ^ 0x1860491811920486 ^ ((4 * v491) ^ 0xE18124616E68BA58) & v491;
  v494 = (16 * v492) & 0x786049185B9A2E90 ^ v492 ^ ((16 * v492) ^ 0x70) & v493;
  v495 = (16 * v493) & 0x786049185B9A2E90 ^ 0x7860481842180696 ^ ((16 * v493) ^ 0x86049185B9A2E960) & v493;
  v496 = (v494 << 8) & 0x786049185B9A2E00 ^ v494 ^ ((v494 << 8) ^ 0x1700) & v495;
  v497 = (v495 << 8) & 0x786049185B9A2E00 ^ 0x1820410041902896 ^ ((v495 << 8) ^ 0x6049185B9A2E9600) & v495;
  v498 = v496 ^ (v496 << 16) & 0x786049185B9A0000 ^ ((v496 << 16) ^ 0x6170000) & v497;
  v499 = v489 ^ (2
               * (((v498 ^ 0x7860491859882881) << 32) & 0x7860491800000000 ^ v498 ^ 0x7860491859882881 ^ (((v498 ^ 0x7860491859882881) << 32) ^ 0x5B9A2E9600000000) & ((v497 << 16) & 0x7860491800000000 ^ 0x3060000000000000 ^ ((v497 << 16) ^ 0x49185B9A00000000) & v497)));
  v500 = ((v499 ^ 0xB94C8D95955604E7) + 0x32DB11056C76A015) ^ ((v499 ^ 0xCF0E1DC7CAB5090BLL) + 0x449981573395ADF9);
  LODWORD(v499) = __CFADD__(1306 * (v500 ^ ((v499 ^ 0x6CA0D27B7F48D479) - 0x18C8B11479978F75)), 0xECADBFE02E62408ALL)+ (((v500 ^ ((v499 ^ 0x6CA0D27B7F48D479) - 0x18C8B11479978F75)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v499 ^ 0xB94C8D95955604E7, 0x32DB11056C76A015) - 1) ^ (__CFADD__(v499 ^ 0xCF0E1DC7CAB5090BLL, 0x449981573395ADF9)- 1) ^ (__CFADD__(v499 ^ 0x6CA0D27B7F48D479, 0xE7374EEB8668708BLL)- 1))+ 669926092;
  LODWORD(v500) = (v499 ^ 0x94113F56) & (2 * (v499 & 0xD811BF67)) ^ v499 & 0xD811BF67;
  LODWORD(v497) = ((2 * (v499 ^ 0x84337BD0)) ^ 0xB845896E) & (v499 ^ 0x84337BD0) ^ (2 * (v499 ^ 0x84337BD0)) & 0x5C22C4B6;
  LODWORD(v500) = (v497 ^ 0x4208025) & (4 * v500) ^ v500;
  LODWORD(v497) = ((4 * (v497 ^ 0x44224491)) ^ 0x708B12DC) & (v497 ^ 0x44224491) ^ (4 * (v497 ^ 0x44224491)) & 0x5C22C4B4;
  LODWORD(v500) = (v497 ^ 0x50020093) & (16 * v500) ^ v500;
  LODWORD(v497) = ((16 * (v497 ^ 0xC20C423)) ^ 0xC22C4B70) & (v497 ^ 0xC20C423) ^ (16 * (v497 ^ 0xC20C423)) & 0x5C22C4B0;
  LODWORD(v500) = v500 ^ 0x5C22C4B7 ^ (v497 ^ 0x40204087) & ((_DWORD)v500 << 8);
  LODWORD(v497) = ((_DWORD)v500 << 16) & 0x5C220000 ^ v500 ^ (((_DWORD)v500 << 16) ^ 0x44B70000) & (((v497 ^ 0x1C028487) << 8) & 0x5C220000 ^ 0x5C220000 ^ (((v497 ^ 0x1C028487) << 8) ^ 0x22C40000) & (v497 ^ 0x1C028487));
  LODWORD(STACK[0x12C4]) = v485 ^ (2 * v487);
  LODWORD(v500) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1288]));
  LODWORD(STACK[0x12B8]) = v499 ^ (2 * v497);
  v501 = STACK[0x139C];
  LODWORD(v499) = ((71 * (v500 ^ LODWORD(STACK[0x139C]))) ^ 0xB1) + 690076792;
  LODWORD(v485) = ((2 * (v499 & 0x1E7)) | 0x3000) & (v499 ^ 0x9A990745) ^ v499 & 0x1E7 ^ ((2 * (v499 & 0x1E7)) & 0x82 | 0x8060000);
  LODWORD(v487) = (2 * (v499 ^ 0x9A990745)) & 0x100A2 ^ 0x90A2 ^ ((2 * (v499 ^ 0x9A990745)) ^ 0x90883944) & (v499 ^ 0x9A990745);
  LODWORD(v485) = (4 * v485) & 0x4C479CA0 ^ v485 ^ ((4 * v485) ^ 0x201E2000) & v487;
  LODWORD(v487) = (4 * v487) & 0x4C479CA0 ^ 0x4C418C22 ^ ((4 * v487) ^ 0x311E7288) & v487;
  LODWORD(v485) = (16 * v485) & 0x4C479CA0 ^ v485 ^ ((16 * v485) ^ 0x80188000) & v487;
  LODWORD(v487) = (16 * v487) & 0x4C479CA0 ^ 0x8061482 ^ ((16 * v487) ^ 0xC479CA20) & v487;
  LODWORD(v485) = v485 ^ ((_DWORD)v485 << 8) & 0x4C479C00 ^ (((_DWORD)v485 << 8) ^ 0x1080000) & v487;
  LODWORD(v485) = ((v485 ^ 0x444694A2) << 16) & 0x4C470000 ^ v485 ^ 0x444694A2 ^ (((v485 ^ 0x444694A2) << 16) ^ 0x1CA20000) & (((_DWORD)v487 << 8) & 0x4C470000 ^ 0x8430000 ^ (((_DWORD)v487 << 8) ^ 0x479C0000) & v487);
  LODWORD(v487) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x12B0]) ^ 0x8D2D9467));
  LODWORD(STACK[0x12B0]) = v487;
  LOBYTE(v497) = *(_BYTE *)(STACK[0x18B8] + STACK[0x12A8]);
  LODWORD(STACK[0x12A8]) = v499 ^ (2 * v485);
  LODWORD(v487) = v487 ^ v501;
  LODWORD(STACK[0x1298]) = v487;
  LODWORD(v499) = *(unsigned __int8 *)(STACK[0x18B8]
                                     + ((-3 * (v500 ^ v487 ^ v497 ^ 0x38)) ^ 0xFDu)
                                     + 40108);
  LODWORD(v499) = ((v499 >> 7) | (2 * v499)) ^ (((v499 >> 7) | (2 * v499)) >> 6) ^ (((v499 >> 7) | (2 * v499)) >> 4) ^ 0xFFFFFFD7;
  LOBYTE(v293) = v413 ^ (83 - v293);
  LODWORD(v413) = *((unsigned __int8 *)&STACK[0x2920] + v250);
  LODWORD(STACK[0x1858]) = v413;
  LODWORD(v359) = *((unsigned __int8 *)&STACK[0x2920]
                  + (385 * v456
                                 + 403095
                                 - 1306
                                 * ((3288643 * (unint64_t)(385 * v456 + 403095)) >> 32)));
  LODWORD(STACK[0x1868]) = v359;
  LODWORD(v431) = v359 ^ v413 ^ ((v499 >> 2) | ((_DWORD)v499 << 6));
  LOBYTE(v499) = LODWORD(STACK[0x1438]) ^ *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1318]));
  LOBYTE(v293) = LODWORD(STACK[0x1300]) + (v293 & 0xC5 ^ 0xBF);
  LODWORD(v468) = *((unsigned __int8 *)&STACK[0x2920] + (v468 ^ 0x865DE686));
  LODWORD(STACK[0x1318]) = v468;
  v502 = 71 * (v468 ^ v431);
  v503 = v502 + 22881;
  STACK[0x1300] = v502;
  LOBYTE(v502) = -98 - v502;
  LODWORD(v499) = (((v502 & 0xFD) + (v503 & 0xFD)) * v499) ^ 0xFD;
  LODWORD(v413) = (v499 + 1579214292) ^ 0x8C436676;
  LODWORD(v485) = ((2 * ((v499 + 1579214292) & 0x6D8)) | 0x10000) & v413 ^ (v499 + 1579214292) & 0x6D8 ^ ((2 * ((v499 + 1579214292) & 0x6D8)) & 0xE0 | 0x1084000);
  LODWORD(v413) = (2 * v413) & 0xAE ^ 0x50A2 ^ ((2 * v413) ^ 0x5221815C) & v413;
  LODWORD(v485) = (4 * v485) & 0x2D9CD0AC ^ v485 ^ ((4 * v485) ^ 0x4228000) & v413;
  LODWORD(v413) = (4 * v413) & 0x2D9CD0AC ^ 0x98C9006 ^ ((4 * v413) ^ 0xB67342B8) & v413;
  LODWORD(v485) = (16 * v485) & 0x2D9CD0A0 ^ v485 ^ ((16 * v485) ^ 0x50820000) & v413;
  LODWORD(v413) = (16 * v413) & 0x2D9CD0A0 ^ 0x2410D00E ^ ((16 * v413) ^ 0xD9CD0AE0) & v413;
  LODWORD(v485) = v485 ^ ((_DWORD)v485 << 8) & 0x2D9CD000 ^ (((_DWORD)v485 << 8) ^ 0x88200000) & v413;
  v504 = ((_DWORD)v499 + 1579214292) ^ (2
                                      * (((v485 ^ 0x2014F0AE) << 16) & 0x2D9C0000 ^ v485 ^ 0x2014F0AE ^ (((v485 ^ 0x2014F0AE) << 16) ^ 0x50AE0000) & (((_DWORD)v413 << 8) & 0x2D9C0000 ^ 0x210C0000 ^ (((_DWORD)v413 << 8) ^ 0x9CD00000) & v413)));
  LODWORD(v293) = (v293 - 58) ^ *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1328]));
  LODWORD(v485) = (*(unsigned __int8 *)(STACK[0x18B8] + (v504 ^ 0xFBFE1784)) >> 7) | (2
                                                                                      * *(unsigned __int8 *)(STACK[0x18B8] + (v504 ^ 0xFBFE1784)));
  LOBYTE(v468) = LODWORD(STACK[0x12F8]) ^ *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1310]));
  LODWORD(v504) = (((v504 & 0xA) + (v504 & 0x1C7A ^ 0xFFFFE7DF) + (v504 & 0xA | 0xFBC81DF1)) | 1) ^ 0xFB8219D1;
  STACK[0x1328] = v503;
  LOBYTE(v456) = v503 & 0x15 ^ v502 & 0x15;
  LODWORD(v502) = (v504 - ((2 * v504) & 0x44AC2780) + 576066497) ^ (536830803 - v499) & 0x10B3227A;
  LODWORD(v293) = 385 * v293 + 200585 - 1306 * ((3288643 * (unint64_t)(385 * v293 + 200585)) >> 32);
  v505 = v293 - 1926392729 - ((2 * v293) & 0x8CE);
  LODWORD(v499) = 385
                * (((v485 ^ (v485 >> 6) ^ (v485 >> 4) ^ 0xD7) >> (((v504 - ((2 * v504) & 0x80) - 63) ^ (83 - v499) & 0x7A ^ 0xC1) * v456))
                                  + (((v485 ^ (v485 >> 6) ^ (v485 >> 4)) ^ 0xD7) << 6))
                + 1032371272;
  LODWORD(v293) = (v499 ^ 0x98380B75) & (2 * (v499 & 0xA5341)) ^ v499 & 0xA5341;
  LODWORD(v504) = ((2 * (v499 ^ 0x982C2D77)) ^ 0xA4A4FC6C) & (v499 ^ 0x982C2D77) ^ (2 * (v499 ^ 0x982C2D77)) & 0x4A467E36;
  LODWORD(v293) = (v504 ^ 0x4A005C14) & (4 * v293) ^ v293;
  LODWORD(v504) = ((4 * (v504 ^ 0x4A520212)) ^ 0x6959F8D8) & (v504 ^ 0x4A520212) ^ (4 * (v504 ^ 0x4A520212)) & 0x5A567E34;
  LODWORD(v293) = (v504 ^ 0x48507810) & (16 * v293) ^ v293;
  LODWORD(v504) = ((16 * (v504 ^ 0x12060626)) ^ 0xA567E360) & (v504 ^ 0x12060626) ^ (16 * (v504 ^ 0x12060626)) & 0x5A567E30;
  LODWORD(v293) = v293 ^ 0x5A567E36 ^ (v504 ^ 0x466200) & ((_DWORD)v293 << 8);
  v506 = v499 ^ (2
                             * (((_DWORD)v293 << 16) & 0x5A560000 ^ v293 ^ (((_DWORD)v293 << 16) ^ 0x7E360000) & (((v504 ^ 0x5A101C16) << 8) & 0x5A560000 ^ (((v504 ^ 0x5A101C16) << 8) ^ 0x567E0000) & (v504 ^ 0x5A101C16) ^ 0x8000000))) ^ 0x4FD73B4A;
  v507 = 0x322E42A57083BALL
       * (((v506 ^ 0x27BB102F175D6A2FLL) - 0x27BB102F175D6A2FLL) ^ ((v506 ^ 0x80D933BFE3DA4F0FLL) + 0x7F26CC401C25B0F1) ^ ((v506 ^ 0xA762239079AAB147) + 0x589DDC6F86554EB9))
       + 0x311D71790F426471;
  v508 = (2 * (v507 & 0xBCA7C05126DC2364)) & 0x790A80000C884400 ^ v507 & 0xBCA7C05126DC2364 ^ ((2 * (v507 & 0xBCA7C05126DC2364)) | 2) & (v507 ^ 0xC31D585D18544E44);
  v509 = (2 * (v507 ^ 0xC31D585D18544E44)) & 0x7FBA980C3E886D20 ^ 0x8A880402882521 ^ ((2
                                                                                           * (v507 ^ 0xC31D585D18544E44)) ^ 0xFF7530187D10DA42) & (v507 ^ 0xC31D585D18544E44);
  v510 = (4 * v508) & 0x7FBA980C3E886D20 ^ v508 ^ ((4 * v508) | 4) & v509;
  v511 = (4 * v509) & 0x7FBA980C3E886D20 ^ 0x110980C04884921 ^ ((4 * v509) ^ 0xFEEA6030FA21B484) & v509;
  v512 = (16 * v510) & 0x7FBA980C3E886D20 ^ v510 ^ ((16 * v510) ^ 0x10) & v511;
  v513 = (16 * v511) & 0x7FBA980C3E886D20 ^ 0x412180C16082D21 ^ ((16 * v511) ^ 0xFBA980C3E886D210) & v511;
  v514 = (v512 << 8) & 0x7FBA980C3E886D00 ^ v512 ^ ((v512 << 8) ^ 0x100) & v513;
  v515 = (v513 << 8) & 0x7FBA980C3E886D00 ^ 0x4522900036804C21 ^ ((v513 << 8) ^ 0xBA980C3E886D2100) & v513;
  v516 = v514 ^ 0x7FBA980C3E886C20 ^ (v514 << 16) & 0x7FBA980C3E880000 ^ ((v514 << 16) ^ 0x1010000) & v515;
  v517 = v507 ^ (2
               * ((v516 << 32) & 0x7FBA980C00000000 ^ v516 ^ ((v516 << 32) ^ 0x3E886D2100000000) & ((v515 << 16) & 0x7FBA980C00000000 ^ 0x67B2800400000000 ^ ((v515 << 16) ^ 0x180C3E8800000000) & v515)));
  v518 = ((v517 ^ 0x9F4F5002BA52FBD0) - 0x4A9FE1B6636799D7) ^ ((v517 ^ 0xDBE42FAA3B44BF90) - 0xE349E1EE271DD97);
  LODWORD(v515) = __CFADD__(1306 * (v518 ^ ((v517 ^ 0x7A699FE1DADABD67) + 0x5046D1AAFC1020A0)), 0x3B76474E2D616140)+ (((v518 ^ ((v517 ^ 0x7A699FE1DADABD67) + 0x5046D1AAFC1020A0)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v517 ^ 0x9F4F5002BA52FBD0, 0xB5601E499C986629) - 1) ^ (__CFADD__(v517 ^ 0xDBE42FAA3B44BF90, 0xF1CB61E11D8E2269)- 1) ^ (__CFADD__(v517 ^ 0x7A699FE1DADABD67, 0x5046D1AAFC1020A0)- 1))+ 1939376039;
  LODWORD(v517) = (v515 ^ 0xD777D6F) & (2 * (v515 & 0x8C677D08)) ^ v515 & 0x8C677D08;
  LODWORD(v518) = ((2 * (v515 ^ 0x5F1B77F)) ^ 0x132D94EE) & (v515 ^ 0x5F1B77F) ^ (2 * (v515 ^ 0x5F1B77F)) & 0x8996CA76;
  LODWORD(v517) = (v518 ^ 0x89048271) & (4 * v517) ^ v517;
  LODWORD(v518) = ((4 * (v518 ^ 0x88924A11)) ^ 0x265B29DC) & (v518 ^ 0x88924A11) ^ (4 * (v518 ^ 0x88924A11)) & 0x8996CA74;
  LODWORD(v517) = (v518 ^ 0x120843) & (16 * v517) ^ v517;
  LODWORD(v518) = ((16 * (v518 ^ 0x8984C223)) ^ 0x996CA770) & (v518 ^ 0x8984C223) ^ (16 * (v518 ^ 0x8984C223)) & 0x8996CA70;
  LODWORD(v517) = v517 ^ 0x8996CA77 ^ (v518 ^ 0x89048207) & ((_DWORD)v517 << 8);
  LODWORD(v410) = ((_DWORD)v517 << 16) & 0x9960000 ^ v517 ^ (((_DWORD)v517 << 16) ^ 0x4A770000) & (((v518 ^ 0x924807) << 8) & 0x9960000 ^ 0x9140000 ^ (((v518 ^ 0x924807) << 8) ^ 0x16CA0000) & (v518 ^ 0x924807));
  LODWORD(v517) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1338]) ^ 0x8D2D9467));
  LODWORD(STACK[0xCB4]) = v517;
  LODWORD(v517) = 385 * (STACK[0x1170] ^ v517)
                + 200585
                - 1306
                * ((3288643 * (unint64_t)(385 * (STACK[0x1170] ^ v517) + 200585)) >> 32);
  LODWORD(v518) = v517 - 1926392729 - ((2 * v517) & 0x8CE);
  LOBYTE(v485) = LODWORD(STACK[0x12F0]) ^ *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1340]));
  v519 = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1350]) ^ 0x8D2D9467));
  STACK[0x1438] = v519;
  LOBYTE(v497) = LODWORD(STACK[0x130C]) ^ *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1320]));
  LOBYTE(v456) = LODWORD(STACK[0x13F0]) ^ *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1330]));
  LODWORD(v502) = 385
                * (((v502 ^ 0x221C1BC1) & 0x208 | ~(_DWORD)v502 & 8) + (LODWORD(STACK[0x13CC]) ^ v519))
                + 721341356;
  LODWORD(v519) = (v502 ^ 0x909DA194) & (2 * (v502 & 0x10135D5)) ^ v502 & 0x10135D5;
  LODWORD(v414) = ((2 * (v502 ^ 0x129FC0BC)) ^ 0x8F3DEAD2) & (v502 ^ 0x129FC0BC) ^ (2 * (v502 ^ 0x129FC0BC)) & 0x479EF568;
  LODWORD(v519) = (v414 ^ 0x40CE040) & (4 * v519) ^ v519;
  LODWORD(v414) = ((4 * (v414 ^ 0x40821529)) ^ 0x1E7BD5A4) & (v414 ^ 0x40821529) ^ (4 * (v414 ^ 0x40821529)) & 0xC79EF568;
  LODWORD(v519) = (v414 ^ 0x61AD520) & (16 * v519) ^ v519;
  LODWORD(v414) = ((16 * (v414 ^ 0xC1842049)) ^ 0x79EF5690) & (v414 ^ 0xC1842049) ^ (16 * (v414 ^ 0xC1842049)) & 0xC79EF560;
  LODWORD(v519) = v519 ^ 0xC79EF569 ^ (v414 ^ 0x418E5400) & ((_DWORD)v519 << 8);
  LODWORD(STACK[0x1350]) = (v502 ^ (2
                                                * (((_DWORD)v519 << 16) & 0x479E0000 ^ v519 ^ (((_DWORD)v519 << 16) ^ 0x75690000) & (((v414 ^ 0x8610A169) << 8) & 0x479E0000 ^ 0x410A0000 ^ (((v414 ^ 0x8610A169) << 8) ^ 0x1EF50000) & (v414 ^ 0x8610A169)))) ^ 0xD02CDF07)
                         % 0x51A;
  LODWORD(v250) = LODWORD(STACK[0x1380]) - 1926392729 - ((2 * LODWORD(STACK[0x1380])) & 0xB28CE);
  LODWORD(v468) = v468 + 1514371460;
  LODWORD(v519) = ((2 * (v468 & 0x85)) & 0xFFF9 | v468 & 0x85) ^ (2 * (v468 & 0x85)) & (v468 ^ 0x78D0B7C9);
  LODWORD(v414) = (2 * (v468 ^ 0x78D0B7C9)) & 0x1F4C ^ 0x144 ^ ((2 * (v468 ^ 0x78D0B7C9)) ^ 0x22904E98) & (v468 ^ 0x78D0B7C9);
  LODWORD(v519) = (4 * v519) & 0x60C ^ v519 ^ ((4 * v519) | 0x4000) & v414;
  LODWORD(v414) = (4 * v414) & 0xDD6C3F4C ^ 0x884C024C ^ ((4 * v414) ^ 0x2090DD30) & v414;
  LODWORD(v519) = (16 * v519) & 0x5D6C3F40 ^ v519 ^ ((16 * v519) ^ 0x38000) & v414;
  LODWORD(v414) = (16 * v414) & 0xDD6C3F40 ^ 0x92C0B0C ^ ((16 * v414) ^ 0xD6C3F4C0) & v414;
  LODWORD(v519) = v519 ^ 0xDD44074C ^ ((_DWORD)v519 << 8) & 0x5D6C3F00 ^ (((_DWORD)v519 << 8) ^ 0x380000) & v414;
  LODWORD(v468) = v468 ^ (2
                        * (((_DWORD)v519 << 16) & 0x5D6C0000 ^ v519 ^ (((_DWORD)v519 << 16) ^ 0x3F4C0000) & (((_DWORD)v414 << 8) & 0x5D6C0000 ^ 0x11400000 ^ (((_DWORD)v414 << 8) ^ 0x6C3F0000) & v414)));
  LODWORD(v519) = 385 * v456 + 280918733;
  v520 = (v519 ^ 0x796046BD) & (2 * (v519 & 0x4494BC)) ^ v519 & 0x4494BC;
  LODWORD(v414) = ((2 * (v519 ^ 0x7968668D)) ^ 0x2859E462) & (v519 ^ 0x7968668D) ^ (2 * (v519 ^ 0x7968668D)) & 0x922CF230;
  v521 = (v414 ^ 0x9000E020) & (4 * v520) ^ v520;
  LODWORD(v414) = ((4 * (v414 ^ 0x92241211)) ^ 0x58B3C8C4) & (v414 ^ 0x92241211) ^ (4 * (v414 ^ 0x92241211)) & 0x962CF230;
  v522 = (v414 ^ 0x1020C010) & (16 * v521) ^ v521;
  LODWORD(v414) = ((16 * (v414 ^ 0x860C3231)) ^ 0x62CF2310) & (v414 ^ 0x860C3231) ^ (16 * (v414 ^ 0x860C3231)) & 0x962CF230;
  v523 = v522 ^ 0x962CF231 ^ (v414 ^ 0x20C2200) & (v522 << 8);
  LODWORD(v414) = v519 ^ (2
                        * ((v523 << 16) & 0x162C0000 ^ v523 ^ ((v523 << 16) ^ 0x72310000) & (((v414 ^ 0x9420D021) << 8) & 0x162C0000 ^ 0x120C0000 ^ (((v414 ^ 0x9420D021) << 8) ^ 0x2CF20000) & (v414 ^ 0x9420D021))));
  LODWORD(v468) = 385
                * (((v468 ^ 0xDE7C2DA9) - 1991069651) ^ ((v468 ^ 0xED78AC34) - 1168756302) ^ ((v468 ^ 0x16F87780)
                                                                                            + 1104603654))
                - 1475400538;
  LODWORD(v519) = (v468 ^ 0x47DF811) & (2 * (v468 & 0xA97D0241)) ^ v468 & 0xA97D0241;
  v524 = ((2 * (v468 ^ 0x69FF893)) ^ 0x5FC5F5A4) & (v468 ^ 0x69FF893) ^ (2 * (v468 ^ 0x69FF893)) & 0xAFE2FAD2;
  LODWORD(v519) = (v524 ^ 0xFC01000) & (4 * v519) ^ v519;
  v525 = ((4 * (v524 ^ 0xA0220A52)) ^ 0xBF8BEB48) & (v524 ^ 0xA0220A52) ^ (4 * (v524 ^ 0xA0220A52)) & 0xAFE2FAD0;
  LODWORD(v519) = (v525 ^ 0xAF82EA40) & (16 * v519) ^ v519;
  v526 = ((16 * (v525 ^ 0x601092)) ^ 0xFE2FAD20) & (v525 ^ 0x601092) ^ (16 * (v525 ^ 0x601092)) & 0xAFE2FAD0;
  LODWORD(v519) = v519 ^ 0xAFE2FAD2 ^ (v526 ^ 0xAE22A800) & ((_DWORD)v519 << 8);
  LODWORD(v468) = v468 ^ (2
                        * (((_DWORD)v519 << 16) & 0x2FE20000 ^ v519 ^ (((_DWORD)v519 << 16) ^ 0x7AD20000) & (((v526 ^ 0x1C052D2) << 8) & 0x2FE20000 ^ 0xD000000 ^ (((v526 ^ 0x1C052D2) << 8) ^ 0x62FA0000) & (v526 ^ 0x1C052D2))));
  LODWORD(STACK[0x1380]) = v515 ^ (2 * v410);
  LODWORD(v515) = ((2 * v468) & 0x102) - (v468 & 0x181) - 726631608;
  LODWORD(v410) = (v515 & 0xD8C ^ 0x458824) + (v515 ^ 0xA4827599) - ((v515 ^ 0xA4827599) & 0x30220D9C);
  v527 = 0x322E42A57083BALL
       * (((v414 ^ 0x4A06EFC6BA04AEDELL) - 0x4A06EFC6D0744A67) ^ ((v414 ^ 0x74254024ABC1C9AELL)
                                                                                - 0x74254024C1B12D17) ^ ((v414 ^ 0x3E23AFE2F69817AELL) - 0x3E23AFE29CE8F317))
       - 0x785488EF7ACBA68ELL;
  v528 = (v527 ^ 0x6715B83524C82F42) & (2 * (v527 & 0x6619BAB9B0EA2E64)) ^ v527 & 0x6619BAB9B0EA2E64;
  v529 = ((2 * (v527 ^ 0x6327E955040C7FCALL)) ^ 0xA7CA7D969CCA35CLL) & (v527 ^ 0x6327E955040C7FCALL) ^ (2 * (v527 ^ 0x6327E955040C7FCALL)) & 0x53E53ECB4E651ACLL;
  v530 = (v529 ^ 0x2C03C800C00100) & (4 * v528) ^ v528;
  v531 = ((4 * (v529 ^ 0x5025024942250A2)) ^ 0x14F94FB2D39946B8) & (v529 ^ 0x5025024942250A2) ^ (4 * (v529 ^ 0x5025024942250A2)) & 0x53E53ECB4E651ACLL;
  v532 = (v531 ^ 0x43843A0908040A0) & (16 * v530) ^ v530;
  v533 = ((16 * (v531 ^ 0x106104C24661106)) ^ 0x53E53ECB4E651AE0) & (v531 ^ 0x106104C24661106) ^ (16 * (v531 ^ 0x106104C24661106)) & 0x53E53ECB4E651A0;
  v534 = (v533 ^ 0x12412C804641000) & (v532 << 8) ^ v532;
  v535 = (((v533 ^ 0x41A4124B082410ELL) << 8) ^ 0x3E53ECB4E651AE00) & (v533 ^ 0x41A4124B082410ELL) ^ ((v533 ^ 0x41A4124B082410ELL) << 8) & 0x53E53ECB4E65100;
  v536 = v534 ^ 0x53E53ECB4E651AELL ^ (v535 ^ 0x41240A4A4400000) & (v534 << 16);
  v537 = v527 ^ (2
               * ((v536 << 32) & 0x53E53EC00000000 ^ v536 ^ ((v536 << 32) ^ 0x34E651AE00000000) & (((v535 ^ 0x12C134810A651AELL) << 16) & 0x53E53EC00000000 ^ 0x412430800000000 ^ (((v535 ^ 0x12C134810A651AELL) << 16) ^ 0x53ECB4E600000000) & (v535 ^ 0x12C134810A651AELL))));
  v538 = ((v537 ^ 0xE25C31009BA3704BLL) - 0x70DE924E0D89A7BDLL) ^ ((v537 ^ 0x7E658FA1740688F5) + 0x1318D3101DD3A0FDLL);
  LODWORD(v538) = __CFADD__(1306 * (v538 ^ ((v537 ^ 0xF810009936837586) - 0x6A92A3D7A0A9A270)), 0x64F44D8F45073EECLL)+ (((v538 ^ ((v537 ^ 0xF810009936837586) - 0x6A92A3D7A0A9A270)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v537 ^ 0xE25C31009BA3704BLL, 0x8F216DB1F2765843) - 1) ^ (__CFADD__(v537 ^ 0x7E658FA1740688F5, 0x1318D3101DD3A0FDLL)- 1) ^ (__CFADD__(v537 ^ 0xF810009936837586, 0x956D5C285F565D90)- 1))+ 130565473;
  LODWORD(v537) = (v538 ^ 0xF4A7BF61) & (2 * (v538 & 0xF837BF89)) ^ v538 & 0xF837BF89;
  LODWORD(v535) = ((2 * (v538 ^ 0x34E28173)) ^ 0x99AA7DF4) & (v538 ^ 0x34E28173) ^ (2 * (v538 ^ 0x34E28173)) & 0xCCD53EFA;
  LODWORD(v537) = (v535 ^ 0x80803C60) & (4 * v537) ^ v537;
  LODWORD(v535) = ((4 * (v535 ^ 0x4455020A)) ^ 0x3354FBE8) & (v535 ^ 0x4455020A) ^ (4 * (v535 ^ 0x4455020A)) & 0xCCD53EF8;
  LODWORD(v537) = (v535 ^ 0x543AE2) & (16 * v537) ^ v537;
  LODWORD(v535) = ((16 * (v535 ^ 0xCC810412)) ^ 0xCD53EFA0) & (v535 ^ 0xCC810412) ^ (16 * (v535 ^ 0xCC810412)) & 0xCCD53EF0;
  LODWORD(v537) = v537 ^ 0xCCD53EFA ^ (v535 ^ 0xCC512E00) & ((_DWORD)v537 << 8);
  LODWORD(v537) = ((_DWORD)v537 << 16) & 0x4CD50000 ^ v537 ^ (((_DWORD)v537 << 16) ^ 0x3EFA0000) & (((v535 ^ 0x84105A) << 8) & 0x4CD50000 ^ 0x8C10000 ^ (((v535 ^ 0x84105A) << 8) ^ 0xD53E0000) & (v535 ^ 0x84105A));
  LODWORD(v503) = v497;
  v539 = v497 + 521;
  LODWORD(v497) = (v410 ^ 0x4055836D | ((v468 & 0x181 ^ 0x17F) + 478) & 0x81818181 ^ 0x80) * v539;
  v540 = (_DWORD)v497 - 1926392729 - ((2 * (_DWORD)v497) & 0x1A5B28CEu);
  v541 = 0x322E42A57083BALL
       * (((v540 ^ 0xF8F78F382D37EFC6) + 0x70870C7D2C8103ALL) ^ ((v540 ^ 0x9C05D97E84410A2CLL) + 0x63FA26817BBEF5D4) ^ ((v540 ^ 0x64F25646245B718DLL) - 0x64F25646245B718DLL))
       - 0x47392D289B24C294;
  v542 = (v541 ^ 0xA0FE1EEAC12B0348) & (2 * (v541 & 0x34FE5EF2D1434A6ALL)) ^ v541 & 0x34FE5EF2D1434A6ALL;
  v543 = ((2 * (v541 ^ 0xC98A278F41A913C8)) ^ 0xFAE8F2FB21D4B344) & (v541 ^ 0xC98A278F41A913C8) ^ (2 * (v541 ^ 0xC98A278F41A913C8)) & 0xFD74797D90EA59A0;
  v544 = (v543 ^ 0xF060705900001100) & (4 * v542) ^ v542;
  v545 = ((4 * (v543 ^ 0x5140904902A48A2)) ^ 0xF5D1E5F643A96688) & (v543 ^ 0x5140904902A48A2) ^ (4 * (v543 ^ 0x5140904902A48A2)) & 0xFD74797D90EA59A0;
  v546 = (v545 ^ 0xF550617400A84080) & (16 * v544) ^ v544;
  v547 = ((16 * (v545 ^ 0x824180990421922)) ^ 0xD74797D90EA59A20) & (v545 ^ 0x824180990421922) ^ (16 * (v545 ^ 0x824180990421922)) & 0xFD74797D90EA59A0;
  v548 = (v547 ^ 0xD544115900A01800) & (v546 << 8) ^ v546;
  v549 = (((v547 ^ 0x28306824904A4182) << 8) ^ 0x74797D90EA59A200) & (v547 ^ 0x28306824904A4182) ^ ((v547 ^ 0x28306824904A4182) << 8) & 0xFD74797D90EA5900;
  v550 = v548 ^ 0xFD74797D90EA59A2 ^ (v549 ^ 0x7470791080480000) & (v548 << 16);
  v551 = v541 ^ (2
               * ((v550 << 32) & 0x7D74797D00000000 ^ v550 ^ ((v550 << 32) ^ 0x10EA59A200000000) & (((v549 ^ 0x8904006D10A259A2) << 16) & 0x7D74797D00000000 ^ 0x400691500000000 ^ (((v549 ^ 0x8904006D10A259A2) << 16) ^ 0x797D90EA00000000) & (v549 ^ 0x8904006D10A259A2))));
  v552 = ((v551 ^ 0x3484FBA9166CB792) - 0x291077A3BD49A31DLL) ^ ((v551 ^ 0x94F608990233B645) + 0x769D7B6C56E95D36);
  LODWORD(v551) = __CFADD__(1306 * (v552 ^ ((v551 ^ 0x4EA4ED79E4C8F8F9) - 0x533061734FEDEC76)), 0x19E2BA1CED0475ALL)
                + (((v552 ^ ((v551 ^ 0x4EA4ED79E4C8F8F9) - 0x533061734FEDEC76)) * (unsigned __int128)0x51AuLL) >> 64)
                + 1306
                * ((__CFADD__(v551 ^ 0x3484FBA9166CB792, 0xD6EF885C42B65CE3) - 1) ^ (__CFADD__(v551 ^ 0x94F608990233B645, 0x769D7B6C56E95D36)- 1) ^ (__CFADD__(v551 ^ 0x4EA4ED79E4C8F8F9, 0xACCF9E8CB012138ALL)- 1))+ 1708792253;
  LODWORD(v552) = (v551 ^ 0xDA05CADB) & (2 * (v551 & 0x9A25EB1C)) ^ v551 & 0x9A25EB1C;
  LODWORD(v549) = ((2 * (v551 ^ 0xCE4E88EB)) ^ 0xA8D6C7EE) & (v551 ^ 0xCE4E88EB) ^ (2 * (v551 ^ 0xCE4E88EB)) & 0x546B63F6;
  LODWORD(v552) = (v549 ^ 0x40240E1) & (4 * v552) ^ v552;
  LODWORD(v549) = ((4 * (v549 ^ 0x54292011)) ^ 0x51AD8FDC) & (v549 ^ 0x54292011) ^ (4 * (v549 ^ 0x54292011)) & 0x546B63F4;
  LODWORD(v552) = (v549 ^ 0x502903C3) & (16 * v552) ^ v552;
  LODWORD(v549) = ((16 * (v549 ^ 0x4426023)) ^ 0x46B63F70) & (v549 ^ 0x4426023) ^ (16 * (v549 ^ 0x4426023)) & 0x546B63F0;
  LODWORD(v552) = v552 ^ 0x546B63F7 ^ (v549 ^ 0x44222300) & ((_DWORD)v552 << 8);
  LODWORD(v552) = ((_DWORD)v552 << 16) & 0x546B0000 ^ v552 ^ (((_DWORD)v552 << 16) ^ 0x63F70000) & (((v549 ^ 0x10494087) << 8) & 0x546B0000 ^ 0x14080000 ^ (((v549 ^ 0x10494087) << 8) ^ 0x6B630000) & (v549 ^ 0x10494087));
  v553 = 0x322E42A57083BALL
       * (((v468 ^ 0xF14A0BB11A77EA9DLL) + 0xEB5F44ECB9976E1) ^ ((v468 ^ 0x8D10138075C39607)
                                                                               + 0x72EFEC7FA42D0A7BLL) ^ ((v468 ^ 0x7C5A1831CC888B7FLL) - 0x7C5A1831E299E8FDLL))
       - 0x768ECCCE04CFE05CLL;
  v554 = (v553 ^ 0x724BFCDBB2EF6EB9) & (2 * (v553 & 0x6453FE983AEE6832)) ^ v553 & 0x6453FE983AEE6832;
  v555 = ((2 * (v553 ^ 0xB2CAF1FBF32B7EB9)) ^ 0xAD321EC7938A2D16) & (v553 ^ 0xB2CAF1FBF32B7EB9) ^ (2 * (v553 ^ 0xB2CAF1FBF32B7EB9)) & 0xD6990F63C9C5168ALL;
  v556 = (v555 ^ 0x80100E4181800000) & (4 * v554) ^ v554;
  v557 = ((4 * (v555 ^ 0x5289012048451289)) ^ 0x5A643D8F27145A2CLL) & (v555 ^ 0x5289012048451289) ^ (4 * (v555 ^ 0x5289012048451289)) & 0xD6990F63C9C51688;
  v558 = (v557 ^ 0x52000D0301041200) & (16 * v556) ^ v556;
  v559 = ((16 * (v557 ^ 0x84990260C8C10483)) ^ 0x6990F63C9C5168B0) & (v557 ^ 0x84990260C8C10483) ^ (16 * (v557 ^ 0x84990260C8C10483)) & 0xD6990F63C9C51680;
  v560 = (v559 ^ 0x4090062088410000) & (v558 << 8) ^ v558;
  v561 = (((v559 ^ 0x960909434184160BLL) << 8) ^ 0x990F63C9C5168B00) & (v559 ^ 0x960909434184160BLL) ^ ((v559 ^ 0x960909434184160BLL) << 8) & 0xD6990F63C9C51600;
  v562 = v560 ^ 0xD6990F63C9C5168BLL ^ (v561 ^ 0x90090341C1040000) & (v560 << 16);
  v563 = v553 ^ (2
               * ((v562 << 32) & 0x56990F6300000000 ^ v562 ^ ((v562 << 32) ^ 0x49C5168B00000000) & (((v561 ^ 0x46900C2208C1148BLL) << 16) & 0x56990F6300000000 ^ 0x5098062200000000 ^ (((v561 ^ 0x46900C2208C1148BLL) << 16) ^ 0xF63C9C500000000) & (v561 ^ 0x46900C2208C1148BLL))));
  v564 = ((v563 ^ 0x7B22545D41730DF7) - 0x42CDEDE6E40FCFE8) ^ ((v563 ^ 0x86038BA1B577FA24) + 0x4013CDE5EFF4C7C5);
  LODWORD(v563) = __CFADD__(1306 * (v564 ^ ((v563 ^ 0xB54233A55D60B2F7) + 0x735275E107E38F18)), 0x45EE2331B521E2FELL)+ (((v564 ^ ((v563 ^ 0xB54233A55D60B2F7) + 0x735275E107E38F18)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v563 ^ 0x7B22545D41730DF7, 0xBD3212191BF03018) - 1) ^ (__CFADD__(v563 ^ 0x86038BA1B577FA24, 0x4013CDE5EFF4C7C5)- 1) ^ (__CFADD__(v563 ^ 0xB54233A55D60B2F7, 0x735275E107E38F18)- 1))+ 1275850659;
  LODWORD(v564) = (v563 ^ 0xB3E508A9) & (2 * (v563 & 0xB3F412A0)) ^ v563 & 0xB3F412A0;
  LODWORD(v561) = ((2 * (v563 ^ 0xB50D0CA9)) ^ 0xDF23C12) & (v563 ^ 0xB50D0CA9) ^ (2 * (v563 ^ 0xB50D0CA9)) & 0x6F91E08;
  LODWORD(v564) = (v561 ^ 0x4F01C00) & (4 * v564) ^ v564;
  LODWORD(v561) = ((4 * (v561 ^ 0x2090209)) ^ 0x1BE47824) & (v561 ^ 0x2090209) ^ (4 * (v561 ^ 0x2090209)) & 0x6F91E08;
  LODWORD(v564) = (v561 ^ 0x2E01800) & (16 * v564) ^ v564;
  LODWORD(v561) = ((16 * (v561 ^ 0x4190609)) ^ 0x6F91E090) & (v561 ^ 0x4190609) ^ (16 * (v561 ^ 0x4190609)) & 0x6F91E00;
  LODWORD(v564) = v564 ^ 0x6F91E09 ^ (v561 ^ 0x6910009) & ((_DWORD)v564 << 8);
  LODWORD(STACK[0x1340]) = v563 ^ (2
                                 * (((_DWORD)v564 << 16) & 0x6F90000 ^ v564 ^ (((_DWORD)v564 << 16) ^ 0x1E090000) & (((v561 ^ 0x681E09) << 8) & 0x6F90000 ^ 0x6E10000 ^ (((v561 ^ 0x681E09) << 8) ^ 0x791E0000) & (v561 ^ 0x681E09))));
  LODWORD(v563) = (LODWORD(STACK[0x13A0]) ^ *((_BYTE *)&STACK[0x2920]
                                                             + (LODWORD(STACK[0x1360]) ^ 0x8D2D9467)));
  LODWORD(v564) = 385 * v563 + 200585 - 1306 * ((3288643 * (unint64_t)(385 * v563 + 200585)) >> 32);
  LODWORD(v563) = ((LODWORD(STACK[0x1410]) ^ *((_BYTE *)&STACK[0x2920]
                                                              + (LODWORD(STACK[0x1358]) ^ 0x8D2D9467)))
                 + 521)
                * (((502 - v503) | v539) & 0x81818181);
  LODWORD(v563) = v563 - 1306 * ((3288643 * (unint64_t)v563) >> 32);
  LODWORD(v503) = v563 - 1926392729 - ((2 * v563) & 0x8CE);
  v565 = *((unsigned __int8 *)&STACK[0x2920] + (v551 ^ (2 * (_DWORD)v552) ^ 0xB2352CF2));
  LODWORD(v563) = (v565 ^ 0xCF) + 1215438311;
  LODWORD(v552) = (v563 ^ 0xC850B876) & (2 * (v563 & 0x1267)) ^ v563 & 0x1267;
  LODWORD(v561) = ((2 * (v563 ^ 0xC8509C34)) ^ 0x802280A6) & (v563 ^ 0xC8509C34) ^ (2 * (v563 ^ 0xC8509C34)) & 0x652;
  LODWORD(v552) = (v561 | 0x4800) & (4 * v552) ^ v552;
  LODWORD(v561) = ((4 * (v561 ^ 0x2251)) ^ 0xFF75B94C) & (v561 ^ 0x2251) ^ (4 * (v561 ^ 0x2251)) & 0x7FDD6E50;
  LODWORD(v552) = (v561 ^ 0x7F552840) & (16 * v552) ^ v552;
  LODWORD(v561) = ((16 * (v561 ^ 0x884613)) ^ 0xFDD6E530) & (v561 ^ 0x884613) ^ (16 * (v561 ^ 0x884613)) & 0x7FDD6E50;
  LODWORD(v552) = v552 ^ 0x7FDD6E53 ^ (v561 ^ 0x7DD46400) & ((_DWORD)v552 << 8);
  LODWORD(v563) = v563 ^ (2
                        * (((_DWORD)v552 << 16) & 0x7FDD0000 ^ v552 ^ (((_DWORD)v552 << 16) ^ 0x6E530000) & (((v561 ^ 0x2090A43) << 8) & 0x7FDD0000 ^ 0x22910000 ^ (((v561 ^ 0x2090A43) << 8) ^ 0x5D6E0000) & (v561 ^ 0x2090A43))));
  LODWORD(v485) = v485 + 1788257956;
  LODWORD(v552) = (2 * (v485 & 0x365)) & (v485 ^ 0xCC3A37E3) ^ (v485 & 0x365 | 0x49512C82) ^ ((2 * (v485 & 0x365)) & 0x482 | 0x10024004);
  LODWORD(v561) = ((2 * (v485 ^ 0xCC3A37E3)) ^ 0xA2A4910C) & (v485 ^ 0xCC3A37E3) ^ ((2 * (v485 ^ 0xCC3A37E3)) & 0x1512086 | 0xC00);
  LODWORD(v552) = v552 ^ v561 & 0xA024955C ^ ((4 * v552) ^ 0x9D6B6744) & (v561 ^ 0x58024406);
  LODWORD(v561) = ((4 * v561) ^ 0x982FC54C) & (v561 ^ 0x58024406) ^ v561 & 0xA024955C;
  LODWORD(v552) = v552 ^ v561 & 0xF826D55C ^ ((16 * v552) ^ 0xED345D7C) & (v561 ^ 0x58024406);
  LODWORD(v561) = ((16 * v561) ^ 0x7802951C) & (v561 ^ 0x58024406) ^ v561 & 0xF826D55C;
  LODWORD(v552) = v552 ^ v561 & 0xF826D55C ^ (((_DWORD)v552 << 8) ^ 0xAB4A535C) & (v561 ^ 0x58024486);
  LODWORD(v561) = (((_DWORD)v561 << 8) ^ 0xFA62D15C) & (v561 ^ 0x58024486) ^ v561 & 0xF826D55C;
  LODWORD(v485) = v485 ^ (2
                        * (v552 ^ v561 & 0x7826D55C ^ (((_DWORD)v552 << 16) ^ 0xD0A4D55C) & (v561 ^ 0x1510000) ^ (((_DWORD)v552 << 16) ^ 0xD0A4D55C) & 0x59534404));
  LODWORD(v485) = 385
                * (((v485 ^ 0x963FCB99) - 1021173143) ^ ((v485 ^ 0x4C5E9C5F) + 423851439) ^ ((v485 ^ 0xFDAED5AF)
                                                                                           - 1464648609))
                - 1600750250;
  LODWORD(v552) = (v485 ^ 0xB0F5BD5D) & (2 * (v485 & 0xB0F5B191)) ^ v485 & 0xB0F5B191;
  LODWORD(v561) = ((2 * (v485 ^ 0x9157BC7D)) ^ 0x43441BD8) & (v485 ^ 0x9157BC7D) ^ (2 * (v485 ^ 0x9157BC7D)) & 0x21A20DEC;
  LODWORD(v552) = (v561 ^ 0x210008E8) & (4 * v552) ^ v552;
  LODWORD(v561) = ((4 * (v561 ^ 0x20A20424)) ^ 0x868837B0) & (v561 ^ 0x20A20424) ^ (4 * (v561 ^ 0x20A20424)) & 0x21A20DEC;
  LODWORD(v552) = (v561 ^ 0x8005AC) & (16 * v552) ^ v552;
  LODWORD(v561) = ((16 * (v561 ^ 0x2122084C)) ^ 0x1A20DEC0) & (v561 ^ 0x2122084C) ^ (16 * (v561 ^ 0x2122084C)) & 0x21A20DE0;
  LODWORD(v552) = v552 ^ 0x21A20DEC ^ (v561 ^ 0x200C2C) & ((_DWORD)v552 << 8);
  v566 = v485 ^ (2
                             * ((((_DWORD)v552 << 16) ^ 0xDEC0000) & (((v561 ^ 0x2182012C) << 8) & 0x21A20000 ^ 0x1A20000 ^ (((v561 ^ 0x2182012C) << 8) ^ 0xA20D0000) & (v561 ^ 0x2182012C)) ^ v552 ^ (((_DWORD)v552 << 16) & 0x21A20000 | 0x2C))) ^ 0x7DDC3E76;
  v567 = 0x322E42A57083BALL
       * (((v566 ^ 0x4E6980FB999F4B07) - 0x4E6980FB999F4B07) ^ ((v566 ^ 0x9F76F51CC2A7808) - 0x9F76F51CC2A7808) ^ ((v566 ^ 0x479EEFAAD898A768) - 0x479EEFAAD898A768))
       - 0x2AC5BCF287DE6715;
  v568 = (2 * (v567 & 0x188AEEBCBDFCEEEALL)) & 0x2100D54938699590 ^ v567 & 0x188AEEBCBDFCEEEALL ^ ((2 * (v567 & 0x188AEEBCBDFCEEEALL)) | 2) & (v567 ^ 0xB1CA3B7501915952);
  v569 = (2 * (v567 ^ 0xB1CA3B7501915952)) & 0xA940D5C9BC6DB7B8 ^ 0xA940544884249089 ^ ((2
                                                                                             * (v567 ^ 0xB1CA3B7501915952)) ^ 0x5281AB9378DB6F72) & (v567 ^ 0xB1CA3B7501915952);
  v570 = (4 * v568) & 0xA940D5C9BC6DB7B8 ^ v568 ^ ((4 * v568) | 4) & v569;
  v571 = (4 * v569) & 0xA940D5C9BC6DB7B8 ^ 0x84080C90C492119 ^ ((4 * v569) ^ 0xA5035726F1B6DEE4) & v569;
  v572 = (16 * v570) & 0xA940D5C9BC6DB7B0 ^ v570 ^ ((16 * v570) ^ 0x10) & v571;
  v573 = (16 * v571) & 0xA940D5C9BC6DB7B0 ^ 0x2940814038248429 ^ ((16 * v571) ^ 0x940D5C9BC6DB7B90) & v571;
  v574 = (v572 << 8) & 0xA940D5C9BC6DB700 ^ v572 ^ ((v572 << 8) ^ 0x1100) & v573;
  v575 = (v573 << 8) & 0xA940D5C9BC6DB700 ^ 0xA9001441904806B9 ^ ((v573 << 8) ^ 0x40D5C9BC6DB7B900) & v573;
  v576 = v574 ^ (v574 << 16) & 0xA940D5C9BC6D0000 ^ ((v574 << 16) ^ 0x11110000) & v575;
  v577 = v567 ^ (2
               * (((v576 ^ 0xA940D5C9AC6CA6A8) << 32) & 0x2940D5C900000000 ^ v576 ^ 0xA940D5C9AC6CA6A8 ^ (((v576 ^ 0xA940D5C9AC6CA6A8) << 32) ^ 0x3C6DB7B900000000) & ((v575 << 16) & 0x2940D5C900000000 ^ 0x2800418000000000 ^ ((v575 << 16) ^ 0x55C9BC6D00000000) & v575)));
  v578 = ((v577 ^ 0xF6757DCC86FB1F34) + 0x461DC76BF4914D6CLL) ^ ((v577 ^ 0x5941036CBFBB3657) - 0x16D64634322E9BF7);
  LODWORD(v577) = __CFADD__(1306 * (v578 ^ ((v577 ^ 0xB5BE109DFC67A8FALL) + 0x5D6AA3A8E0DFAA6)), 0x36CF62B4DCF59ACALL)
                + (((v578 ^ ((v577 ^ 0xB5BE109DFC67A8FALL) + 0x5D6AA3A8E0DFAA6)) * (unsigned __int128)0x51AuLL) >> 64)
                + 1306
                * ((__CFADD__(v577 ^ 0xF6757DCC86FB1F34, 0x461DC76BF4914D6CLL) - 1) ^ (__CFADD__(v577 ^ 0x5941036CBFBB3657, 0xE929B9CBCDD16409)- 1) ^ (__CFADD__(v577 ^ 0xB5BE109DFC67A8FALL, 0x5D6AA3A8E0DFAA6)- 1))+ 273745260;
  LODWORD(v578) = (v577 ^ 0xEF8EFF45) & (2 * (v577 & 0xEFAEFC46)) ^ v577 & 0xEFAEFC46;
  LODWORD(v575) = ((2 * (v577 ^ 0x72868F49)) ^ 0x3A50E61E) & (v577 ^ 0x72868F49) ^ (2 * (v577 ^ 0x72868F49)) & 0x9D28730E;
  LODWORD(v578) = (v575 ^ 0x18006208) & (4 * v578) ^ v578;
  LODWORD(v575) = ((4 * (v575 ^ 0x85281101)) ^ 0x74A1CC3C) & (v575 ^ 0x85281101) ^ (4 * (v575 ^ 0x85281101)) & 0x9D28730C;
  LODWORD(v578) = (v575 ^ 0x14204003) & (16 * v578) ^ v578;
  LODWORD(v575) = ((16 * (v575 ^ 0x89083303)) ^ 0xD28730F0) & (v575 ^ 0x89083303) ^ (16 * (v575 ^ 0x89083303)) & 0x9D287300;
  LODWORD(v578) = v578 ^ 0x9D28730F ^ (v575 ^ 0x90003000) & ((_DWORD)v578 << 8);
  LODWORD(v578) = ((_DWORD)v578 << 16) & 0x1D280000 ^ v578 ^ (((_DWORD)v578 << 16) ^ 0x730F0000) & (((v575 ^ 0xD28430F) << 8) & 0x1D280000 ^ 0x15080000 ^ (((v575 ^ 0xD28430F) << 8) ^ 0x28730000) & (v575 ^ 0xD28430F));
  LODWORD(v575) = (LODWORD(STACK[0x16F0]) ^ *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1364])))
                + 1435259491;
  LODWORD(v245) = (2 * (v575 & 0x1A6)) & 0x5555 ^ (v575 & 0x1A6 | 0xD2A3B450) ^ ((2 * (v575 & 0x1A6)) & (v575 ^ 0x6E811A60) | 0x16710692);
  LODWORD(v343) = (2 * (v575 ^ 0x6E811A60)) & 0x1C6 ^ 0x442 ^ ((2 * (v575 ^ 0x6E811A60)) ^ 0x905498C) & (v575 ^ 0x6E811A60);
  LODWORD(v245) = (4 * v245) & 0x428580 ^ v245 ^ ((4 * v245) ^ 0x13084108) & v343;
  LODWORD(v343) = (4 * v343) & 0xC4F2B5C4 ^ 0xC43020C6 ^ ((4 * v343) ^ 0x13084518) & v343;
  LODWORD(v245) = (16 * v245) & 0xC4F2B5C0 ^ v245 ^ ((16 * v245) ^ 0x49025C20) & v343;
  LODWORD(v343) = (16 * v343) & 0xC4F2B5C0 ^ 0x80D0A186 ^ ((16 * v343) ^ 0x4F2B5C60) & v343;
  LODWORD(v245) = v245 ^ ((_DWORD)v245 << 8) & 0xC4F2B500 ^ (((_DWORD)v245 << 8) ^ 0x9231C200) & v343;
  v579 = STACK[0x18B8];
  LODWORD(v575) = v575 ^ (2
                        * (((v245 ^ 0xC0500404) << 16) & 0x44F20000 ^ v245 ^ 0xC0500404 ^ (((v245 ^ 0xC0500404) << 16) ^ 0x35C60000) & (((_DWORD)v343 << 8) & 0x44F20000 ^ 0x4420000 ^ (((_DWORD)v343 << 8) ^ 0x72B50000) & v343)));
  LODWORD(v245) = 63 * (v565 ^ 0xD ^ *(unsigned __int8 *)(STACK[0x18B8] + (v563 ^ 0x94952EC1)));
  v580 = v577 ^ (2 * v578);
  LODWORD(v563) = v538 ^ (2 * v537);
  LODWORD(v577) = *(unsigned __int8 *)(STACK[0x18B8]
                                     + ((-3
                                                        * *((_BYTE *)&STACK[0x2920] + (v503 ^ 0x8D2D9467))) ^ 0xFDu)
                                     + 40108);
  LODWORD(v537) = ((-3
                                   * *((_BYTE *)&STACK[0x2920]
                                     + (385
                                      * (((v575 ^ 0x23E73218) + 2066193835) ^ ((v575 ^ 0x79DA2825)
                                                                                           + 555386776) ^ ((v575 ^ 0x702FDE17) + 686780838))
                                      + 1368141543)
                                     % 0x51A)) ^ 0xFD)
                + 252544272;
  LODWORD(v578) = (v537 ^ 0xFCE4C799) & (2 * (v537 & 0x79C)) ^ v537 & 0x79C;
  LODWORD(v538) = (2 * (v537 ^ 0xFCE4CEA1)) & 0x2113C ^ 0xC905 ^ ((2 * (v537 ^ 0xFCE4CEA1)) ^ 0x1029027A) & (v537 ^ 0xFCE4CEA1);
  LODWORD(v578) = (4 * v578) & 0x1830 ^ v578 ^ ((4 * v578) | 0xC0000) & v538;
  LODWORD(v538) = (4 * v538) & 0xC17D93C ^ 0xC009909 ^ ((4 * v538) ^ 0x305F64F4) & v538;
  LODWORD(v578) = (16 * v578) & 0xC17D930 ^ v578 ^ ((16 * v578) ^ 0x700000) & v538;
  LODWORD(v538) = (16 * v538) & 0xC17D930 ^ 0xC02482D ^ ((16 * v538) ^ 0xC17D93D0) & v538;
  LODWORD(v578) = v578 ^ ((_DWORD)v578 << 8) & 0xC17D900 ^ (((_DWORD)v578 << 8) ^ 0x17000000) & v538;
  LODWORD(v577) = ((v577 >> 7) | (2 * v577)) ^ (((v577 >> 7) | (2 * v577)) >> 6) ^ (((v577 >> 7) | (2 * v577)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(v537) = *(unsigned __int8 *)(STACK[0x18B8]
                                     + (v537 ^ (2
                                                            * (((v578 ^ 0x800D93D) << 16) & 0xC170000 ^ v578 ^ 0x800D93D ^ (((v578 ^ 0x800D93D) << 16) ^ 0x593D0000) & (((_DWORD)v538 << 8) & 0xC170000 ^ 0x8060000 ^ (((_DWORD)v538 << 8) ^ 0x17D90000) & v538))) ^ 0xF8F6A5E6));
  LODWORD(v537) = ((v537 >> 7) | (2 * v537)) ^ (((v537 >> 7) | (2 * v537)) >> 6) ^ (((v537 >> 7) | (2 * v537)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(v262) = *((unsigned __int8 *)&STACK[0x2920] + (v518 ^ 0x8D2D9467)) ^ LODWORD(STACK[0xCB8]);
  v581 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1370])) ^ STACK[0xE10];
  v582 = v262 ^ LODWORD(STACK[0xDE8]) ^ v581 ^ v245;
  v583 = *((unsigned __int8 *)&STACK[0x2920] + (v250 ^ 0x8D2D9467)) ^ STACK[0x1600];
  v584 = *((unsigned __int8 *)&STACK[0x2920] + (v505 ^ 0x8D2D9467)) ^ LODWORD(STACK[0x1204]);
  v585 = *((unsigned __int8 *)&STACK[0x2920] + v564) ^ LODWORD(STACK[0xDF0]);
  LODWORD(v538) = ((v577 >> 2) | ((_DWORD)v577 << 6)) ^ LODWORD(STACK[0xE04]);
  STACK[0xD90] = v584;
  LODWORD(STACK[0x1364]) = v583 ^ v262;
  LOBYTE(v584) = ((*(_BYTE *)(v579 + ((71 * (v583 ^ v262 ^ v584)) ^ 0xB1u) + 22623)
                 - 84) ^ 0x29)
               - 107;
  LODWORD(STACK[0x12F8]) = v585;
  LOBYTE(v584) = v538 ^ v585 ^ v584;
  v586 = STACK[0x1468];
  v587 = *(unsigned __int8 *)(STACK[0x1468] + 178) ^ LODWORD(STACK[0x1890]);
  LODWORD(STACK[0x1180]) = v587;
  LODWORD(v584) = (v584 ^ v587) + 277773496;
  LODWORD(v577) = ((2 * (v584 & 0x151)) & 0xFE1F | v584 & 0x151) ^ ((2 * (v584 & 0x151)) | 0x800) & (v584 ^ 0x86D72346);
  LODWORD(v578) = (2 * (v584 ^ 0x86D72346)) & 0x216 ^ 0x611 ^ ((2 * (v584 ^ 0x86D72346)) ^ 0x92494C2E) & (v584 ^ 0x86D72346);
  LODWORD(v577) = (4 * v577) & 0x69A6A614 ^ v577 ^ ((4 * v577) | 0x1000) & v578;
  LODWORD(v578) = (4 * v578) & 0x69A6A614 ^ 0x49242603 ^ ((4 * v578) ^ 0xA69A985C) & v578;
  LODWORD(v577) = (16 * v577) & 0x69A6A610 ^ v577 ^ ((16 * v577) ^ 0x4000) & v578;
  LODWORD(v578) = (16 * v578) & 0x69A6A610 ^ 0x61848607 ^ ((16 * v578) ^ 0x9A6A6170) & v578;
  LODWORD(v577) = v577 ^ ((_DWORD)v577 << 8) & 0x69A6A600 ^ (((_DWORD)v577 << 8) ^ 0x40000) & v578;
  LODWORD(v584) = v584 ^ (2
                        * (((v577 ^ 0x69A2A217) << 16) & 0x69A60000 ^ v577 ^ 0x69A2A217 ^ (((v577 ^ 0x69A2A217) << 16) ^ 0x26170000) & (((_DWORD)v578 << 8) & 0x69A60000 ^ 0x49000000 ^ (((_DWORD)v578 << 8) ^ 0x26A60000) & v578)));
  v588 = 71
       * *((unsigned __int8 *)&STACK[0x2920]
         + (385
          * (((v584 ^ 0x48820416) + 1180739314) ^ ((v584 ^ 0x8DD5C72B) - 2093521459) ^ ((v584 ^ 0xB9670A42) - 1215977306))
          + 1368141543)
         % 0x51A);
  LODWORD(STACK[0x130C]) = v588;
  LODWORD(v584) = v588 + 1690993511;
  LODWORD(v578) = (2 * ((v588 - 31897) & 0x5FA)) & (v584 ^ 0xD45470DA) ^ (v588 - 31897) & 0x5FA ^ ((2 * ((v588 - 31897) & 0x5FA)) & 0x120 | 0xA400000);
  LODWORD(v577) = (2 * (v584 ^ 0xD45470DA)) & 0x520 ^ 0x10520 ^ ((2 * (v584 ^ 0xD45470DA)) ^ 0x90824240) & (v584 ^ 0xD45470DA);
  LODWORD(v578) = v578 ^ (4 * v578) & 0x4F61A520 ^ ((4 * v578) ^ 0x20060000) & v577;
  LODWORD(v577) = (4 * v577) & 0x4F61A520 ^ 0x42612120 ^ ((4 * v577) ^ 0x3D869480) & v577;
  LODWORD(v578) = (16 * (v578 ^ 0x4C202520)) & 0x4F61A520 ^ v578 ^ 0x4C202520 ^ ((16 * (v578 ^ 0x4C202520)) ^ 0xF61A5200) & v577;
  LODWORD(v577) = (16 * v577) & 0x4F61A520 ^ 0x961A520 ^ ((16 * v577) ^ 0xF61A5200) & v577;
  LODWORD(v578) = v578 ^ ((_DWORD)v578 << 8) & 0x4F61A500 ^ (((_DWORD)v578 << 8) ^ 0x61A52000) & v577;
  LODWORD(v584) = *(unsigned __int8 *)(v579
                                     + (v584 ^ (2
                                                            * (((v578 ^ 0x7212000) << 16) & 0x4F610000 ^ v578 ^ 0x7212000 ^ (((v578 ^ 0x7212000) << 16) ^ 0x25200000) & (((_DWORD)v577 << 8) & 0x4F610000 ^ 0xE400000 ^ (((_DWORD)v577 << 8) ^ 0x61A50000) & v577))) ^ 0xFB69FBA));
  LODWORD(STACK[0x1288]) = v584 ^ 0xF;
  v589 = (((v584 ^ 0x11) - (v584 ^ 0xF)) | v584 ^ 0xF) == 0;
  LODWORD(v578) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x12EC]));
  LODWORD(v487) = *(unsigned __int8 *)(v586 + 118);
  LODWORD(v584) = STACK[0x14D0];
  LODWORD(STACK[0x12EC]) = v487;
  v590 = v487 ^ v584;
  v591 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x12E0]));
  LODWORD(v575) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x12D8]));
  LODWORD(v577) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x12D0]));
  LODWORD(v343) = *(unsigned __int8 *)(v579 + (LODWORD(STACK[0x12C8]) ^ 0x99u) + 4432);
  v592 = STACK[0x1898];
  LODWORD(v586) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x14A4]) ^ 0x8D2D9467));
  v593 = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x12C4]) ^ 0x52CC6E1Du));
  LODWORD(v503) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x12B8]) ^ 0xE8103609));
  v594 = LODWORD(STACK[0x1858]) ^ v578;
  LODWORD(STACK[0x1320]) = v586;
  LODWORD(STACK[0xCEC]) = v594 ^ v586 ^ v500;
  LODWORD(v359) = (*(unsigned __int8 *)(v579 + (LODWORD(STACK[0x12A8]) ^ 0x5655A2A3u)) - 84) ^ 0x29;
  LODWORD(STACK[0x1338]) = v591;
  v595 = v591 ^ LODWORD(STACK[0x1868]);
  LODWORD(STACK[0x1084]) = v575;
  LODWORD(STACK[0xD4C]) = v575 ^ v595;
  STACK[0x1208] = (v359 - 107);
  LODWORD(STACK[0x1310]) = v343;
  LODWORD(STACK[0xDB4]) = v343 ^ 0xFFFFFFD9 ^ v500;
  LODWORD(v487) = v500 ^ LODWORD(STACK[0x12B0]);
  LODWORD(STACK[0x1358]) = v500;
  LODWORD(STACK[0x1330]) = v577;
  LODWORD(STACK[0xDCC]) = v593;
  LODWORD(STACK[0x1148]) = v593 ^ v500 ^ v577;
  LODWORD(STACK[0x12F0]) = v503;
  v596 = v487 ^ v503;
  LODWORD(v575) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1350])) ^ LODWORD(STACK[0x1650]);
  v597 = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1340]) ^ 0xB2142EB2)) ^ LODWORD(STACK[0x1254]);
  v598 = *((unsigned __int8 *)&STACK[0x2920] + (v563 ^ 0x783DC27D)) ^ LODWORD(STACK[0x15F0]);
  LODWORD(v519) = *((unsigned __int8 *)&STACK[0x2920] + (v580 ^ 0xF7EE1A58)) ^ LODWORD(STACK[0x1828]);
  v599 = v582 ^ *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1380]) ^ 0x8F66E9E6)) ^ LODWORD(STACK[0x13F8]);
  v600 = ((v537 >> 2) | ((_DWORD)v537 << 6)) ^ LODWORD(STACK[0xD7C]) ^ *((unsigned __int8 *)&STACK[0x2920]
                                                                                        + LODWORD(STACK[0x1368])) ^ LODWORD(STACK[0xDA8]);
  LODWORD(STACK[0x13F0]) = v581;
  LODWORD(STACK[0x1368]) = (_DWORD)v262;
  LODWORD(STACK[0x1380]) = v583;
  LODWORD(v487) = v600 ^ v262 ^ v583 ^ LODWORD(STACK[0x13C0]) ^ v597 ^ v598;
  LODWORD(STACK[0x1370]) = v538;
  LODWORD(STACK[0x1360]) = v538 ^ v519;
  v601 = v487 ^ v538 ^ v519 ^ v575;
  v602 = !v589;
  v603 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * ((200 * v602) ^ v592));
  LODWORD(STACK[0x14A4]) = v596;
  LODWORD(STACK[0xDC4]) = v599;
  LODWORD(STACK[0x14D0]) = v598 ^ v581 ^ v600 ^ v597;
  STACK[0xD80] = v590;
  STACK[0xC58] = v601;
  return v603();
}

uint64_t sub_10039634C(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned __int8 v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v31;
  int v32;
  char v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  unsigned __int8 *v62;
  int v63;
  int v64;
  int v65;
  char v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  char v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  int v173;
  int v174;
  int v175;
  int v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  unint64_t v200;
  BOOL v201;
  uint64_t v202;
  char v203;
  int v204;
  int v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  int v218;
  unsigned int v219;
  int v220;
  unsigned __int8 *v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  unint64_t v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unint64_t v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  unint64_t v281;
  unint64_t v282;
  unint64_t v283;
  unint64_t v284;
  unint64_t v285;
  unint64_t v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  uint64_t v301;
  unint64_t v302;
  uint64_t v303;
  unint64_t v304;
  unint64_t v305;
  unint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  unint64_t v312;
  int v313;
  unint64_t v314;
  unint64_t v315;
  unint64_t v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  unsigned int v322;
  int v323;
  unint64_t v324;
  int v325;
  int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  int v330;
  unint64_t v331;
  int v332;
  int v333;
  unint64_t v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  unint64_t v344;
  unint64_t v345;
  unint64_t v346;
  unint64_t v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  unint64_t v351;
  unint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  uint64_t v359;
  uint64_t v360;
  unint64_t v361;
  uint64_t v362;
  uint64_t v363;
  unint64_t v364;
  unint64_t v365;
  unint64_t v366;
  uint64_t v367;
  unint64_t v368;
  unint64_t v369;
  unint64_t v370;
  uint64_t v371;
  unint64_t v372;
  unint64_t v373;
  unint64_t v374;
  uint64_t v375;
  uint64_t v376;
  int v377;
  BOOL v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  char v395;
  unint64_t v396;
  int v397;
  unint64_t v398;
  unint64_t v399;
  unsigned __int8 v400;
  int v401;
  int v402;
  int v403;
  unsigned int v404;
  int v405;
  int v406;
  unsigned int v407;
  int v408;
  int v409;
  int v410;
  unsigned int v411;
  int v412;
  char v413;
  char v414;
  char v415;
  unsigned __int8 v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  int v427;
  unsigned int v428;
  int v429;
  unsigned int v430;
  int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  uint64_t (*v446)(void);

  LODWORD(STACK[0x16EC]) = LODWORD(STACK[0x139C]) ^ a3;
  LODWORD(STACK[0x1870]) = LODWORD(STACK[0x10A0]) ^ LODWORD(STACK[0x10B4]);
  LODWORD(STACK[0x16F8]) = v21 - 13178;
  v24 = (v21 - 8030) | 8;
  v25 = LODWORD(STACK[0x17EC]) ^ 0x67;
  LODWORD(STACK[0x173C]) = v24;
  v26 = (v24 ^ 0x419F) * v25 + 98472;
  v27 = LODWORD(STACK[0x10C4]) ^ (1406 - LODWORD(STACK[0x10C0]));
  v28 = ((14 - LODWORD(STACK[0x10D0])) ^ LODWORD(STACK[0x116C])) & 8;
  LODWORD(STACK[0x17A8]) = v18;
  LODWORD(STACK[0x1838]) = (v26 + 473) % (v28 | v27 & 0x512u);
  v29 = 385 * LODWORD(STACK[0x13A0]);
  v31 = 385 * LODWORD(STACK[0x1218])
      - 1306 * ((3288643 * (unint64_t)(385 * LODWORD(STACK[0x1218]))) >> 32);
  v32 = 385 * v23 + 1198825327;
  LODWORD(STACK[0x17BC]) = v19;
  v33 = v20;
  LODWORD(STACK[0x12E0]) = v20;
  LODWORD(STACK[0x1898]) = a2;
  v34 = (2 * (v32 ^ 0x388A882D)) & 0x8001E8BC ^ 0x80002884 ^ ((2 * (v32 ^ 0x388A882D)) ^ 0x3D178) & (v32 ^ 0x388A882D);
  v35 = ((4 * v34) ^ 0x7A2F0) & v34 ^ (4 * v34) & 0x8001E8BC;
  LODWORD(STACK[0x1798]) = v22;
  v36 = v32 & 0x36091 ^ 0x8001E8BC ^ (v32 ^ 0x388A480D) & (2 * (v32 & 0x36091));
  v37 = (4 * v36) & 0x8001E8BC ^ v36 ^ ((4 * v36) ^ 0x7A2F0) & v34;
  v38 = ((16 * v35) ^ 0x533DBFF0) & (v35 ^ 0x1A0BC);
  v39 = ((16 * v37) ^ 0x53233430) & (v35 ^ 0x1A0BC);
  v35 &= 0x5327B4F0u;
  v40 = v38 ^ v35;
  v41 = v35 ^ v37 ^ v39 ^ v40 & 0x5327B4F0 ^ (((v35 ^ v37 ^ v39) << 8) ^ 0x52CF08F1) & (v40 ^ 0x8000480C) ^ (((v35 ^ v37 ^ v39) << 8) ^ 0x52CF08F1) & 0x8001E8B0;
  v42 = (v32 ^ (2
              * ((v41 << 16) & 0x10000 ^ v41 ^ ((v41 << 16) ^ 0x480C0000) & ((((v40 ^ 0x8000480C) << 8) ^ 0x52CF08F1) & (v40 ^ 0x8000480C) ^ v40 & 0x53270000 ^ (((v40 ^ 0x8000480C) << 8) ^ 0x52CF08F1) & 0x10000))) ^ 0xB88BF089)
      % 0x51A;
  v43 = 385 * STACK[0x1170]
      - 1306 * ((3288643 * (unint64_t)(385 * STACK[0x1170])) >> 32);
  v44 = *((unsigned __int8 *)&STACK[0x2920] + (v29 - 1306 * ((3288643 * (unint64_t)v29) >> 32)));
  LODWORD(STACK[0x1834]) = v44;
  v45 = *((unsigned __int8 *)&STACK[0x2920] + v31);
  LODWORD(STACK[0x16B8]) = v45;
  LOBYTE(v44) = (-3 * (v45 ^ v44)) ^ 0x1B;
  v46 = v44 + 723811125;
  v47 = ((2 * (v46 ^ 0x4865A356)) ^ 0x214158CE) & (v46 ^ 0x4865A356) ^ (2 * (v46 ^ 0x4865A356)) & 0x84818C66;
  v49 = (4 * v47) ^ 0x8912006;
  v50 = v47 & 0x6041011E;
  v47 ^= 0x18310847u;
  v51 = v46 & 0x731 ^ (2 * (v46 & 0x731)) & 0xFDFF ^ ((2 * (v46 & 0x731)) | 0x1000) & (v46 ^ 0x4865A356) ^ 0x9CB59467;
  v52 = v49 & v47 ^ v50;
  v53 = v51 ^ v50 ^ ((4 * v51) ^ 0x1AB3F082) & v47;
  v54 = ((16 * v52) ^ 0xE945017E) & (v52 ^ 0x8110007);
  v55 = ((16 * v53) ^ 0x22DEC70E) & (v52 ^ 0x8110007);
  LODWORD(STACK[0x1350]) = a7;
  v52 &= 0x6855011Eu;
  v56 = v54 ^ v52;
  v57 = v53 ^ v52 ^ v55;
  v58 = *((unsigned __int8 *)&STACK[0x2920] + ((v43 - 1926392729 - ((2 * v43) & 0x8CE)) ^ 0x8D2D9467));
  LOBYTE(v43) = *((_BYTE *)&STACK[0x2920]
                + (LODWORD(STACK[0x1390])
                               - 1306 * ((3288643 * (unint64_t)LODWORD(STACK[0x1390])) >> 32)));
  v59 = v46 ^ (2
             * (v57 ^ v56 & 0x6855011E ^ ((v57 << 8) ^ 0xD1E9661E) & (v56 ^ 0x8110067) ^ (((v56 << 8) ^ 0x7955071E) & (v56 ^ 0x8110067) ^ v56 & 0x6855011E) & 0x6855011E ^ (((v57 ^ v56 & 0x6855011E ^ ((v57 << 8) ^ 0xD1E9661E) & (v56 ^ 0x8110067)) << 16) ^ 0xD434011E) & (((v56 << 8) ^ 0x7955071E) & (v56 ^ 0x8110067) ^ v56 & 0x6855011E ^ 0x14A80000) ^ (((v57 ^ v56 & 0x6855011E ^ ((v57 << 8) ^ 0xD1E9661E) & (v56 ^ 0x8110067)) << 16) ^ 0xD434011E) & 0x1CB90006));
  STACK[0x1810] = v59;
  v60 = STACK[0x18B8];
  v61 = ((*(unsigned __int8 *)(STACK[0x18B8] + ((71 * v43) ^ 0xB1u) + 22623) - 84) ^ 0x29) - 107;
  LODWORD(STACK[0x1780]) = v61;
  LODWORD(STACK[0x1790]) = v61 ^ v58;
  v62 = (unsigned __int8 *)STACK[0x1468];
  v63 = STACK[0x1198];
  LOBYTE(v61) = 71 * (*(_BYTE *)(STACK[0x1468] + 252) ^ v61 ^ v58 ^ LODWORD(STACK[0x1198]));
  LOBYTE(v61) = *(_BYTE *)(v60 + v61 + 22881) ^ v61;
  v64 = STACK[0x1890] & 0xED;
  LODWORD(STACK[0x1718]) = v64 ^ 0xFFFFFFED;
  LOBYTE(v61) = ((v64 ^ 0xED) + v64) & 0xED ^ v61 ^ 0x48;
  v65 = *((unsigned __int8 *)&STACK[0x2920] + v42);
  v66 = *((_BYTE *)&STACK[0x2920] + v42);
  LODWORD(STACK[0x1738]) = v65;
  LOBYTE(v42) = (-3 * (v65 ^ v58)) ^ 0xFD;
  STACK[0x16C8] = v42 + 40108;
  v67 = ((((25 - (_BYTE)v44) & 0x10 | 0xE) ^ (v59 ^ 0x51) & (v44 - 26))
       + ((2 * ((v59 ^ 0x51) & (v44 - 26))) | 0xE)
       + 10) & 0x18 | (((v42 - 25428) & 0x502) + ((339 - v42) & 0x102));
  LOBYTE(v42) = v61 - 107;
  LODWORD(STACK[0x1720]) = 385 * (v61 - 107) % (v67 ^ 8u);
  v68 = 385 * LODWORD(STACK[0x13CC]) - 1943823641;
  v69 = ((2 * (v68 & 0x46519)) & 0x822 | v68 & 0x46519) ^ (2 * (v68 & 0x46519)) & (v68 ^ 0x518D4DB6);
  v70 = ((2 * (v68 ^ 0x518D4DB6)) ^ 0x44A2515E) & (v68 ^ 0x518D4DB6) ^ (2 * (v68 ^ 0x518D4DB6)) & 0x225128AE;
  v71 = (v70 ^ 0x2240000D) & (4 * v69) ^ v69;
  v72 = ((4 * (v70 ^ 0x225128A1)) ^ 0x8944A2BC) & (v70 ^ 0x225128A1) ^ (4 * (v70 ^ 0x225128A1)) & 0x225128AC;
  v73 = (v72 ^ 0x4020A3) & (16 * v71) ^ v71;
  v74 = ((16 * (v72 ^ 0x22110803)) ^ 0x25128AF0) & (v72 ^ 0x22110803) ^ (16 * (v72 ^ 0x22110803)) & 0x225128A0;
  v75 = v73 ^ 0x225128AF ^ (v74 ^ 0x2010080F) & (v73 << 8);
  v76 = (v68 ^ (2
              * ((v75 << 16) & 0x22510000 ^ v75 ^ ((v75 << 16) ^ 0x28AF0000) & (((v74 ^ 0x241200F) << 8) & 0x22510000 ^ 0x22510000 ^ (((v74 ^ 0x241200F) << 8) ^ 0x51280000) & (v74 ^ 0x241200F)))) ^ 0x777C3447u)
      % 0x51A;
  LOBYTE(v68) = 71 * LODWORD(STACK[0x1364]);
  v77 = v68 + 165334176;
  v78 = (2 * (v77 ^ 0x2B523410)) & 0x120D0 ^ 0x1851 ^ ((2 * (v77 ^ 0x2B523410)) ^ 0x228871A2) & (v77 ^ 0x2B523410);
  LODWORD(STACK[0x1760]) = a8;
  LODWORD(v59) = (4 * v78) & 0xDD77B8D0 ^ 0x88211891 ^ ((4 * v78) ^ 0x75DEE344) & v78;
  v79 = (16 * v59) & 0xDD77B8D0 ^ 0x80430C1 ^ ((16 * v59) ^ 0xD77B8D10) & v59;
  v80 = (2 * (((_BYTE)v68 - 96) & 0xC1)) & 0x80 ^ (((_BYTE)v68 - 96) & 0xC1 | 0x9C109410) ^ ((2
                                                                                            * (((_BYTE)v68 - 96) & 0xC1)) | 0x1800) & (v77 ^ 0x2B523410);
  v81 = (4 * v80) & 0xDD77B8D0 ^ v80 ^ ((4 * v80) ^ 0x70440040) & v78;
  v82 = (16 * v81) & 0xDD77B8D0 ^ v81 ^ ((16 * v81) ^ 0xC5500500) & v59;
  v83 = v82 ^ (v82 << 8) & 0xDD77B800 ^ ((v82 << 8) ^ 0x5005000) & v79 ^ 0xD172A881;
  LOBYTE(v68) = v68 ^ 0xA5 ^ *(_BYTE *)(v60
                                      + (v77 ^ (2
                                              * ((v83 << 16) & 0x5D770000 ^ v83 ^ ((v83 << 16) ^ 0x38D10000) & ((v79 << 8) & 0x5D770000 ^ 0x8470000 ^ ((v79 << 8) ^ 0x77B80000) & v79))) ^ 0x7C68FD63));
  v84 = *((unsigned __int8 *)&STACK[0x2920] + v76);
  LODWORD(STACK[0x1770]) = v45 ^ v84;
  v85 = ((((v45 ^ v84 ^ v58 ^ v66) >> 3) | (32 * (v45 ^ v84 ^ v58 ^ v66))) ^ 0x9D)
      + 1714423300;
  v86 = (2 * (v85 ^ 0x53195CB1)) & 0xCC ^ 0x95044 ^ ((2 * (v85 ^ 0x53195CB1)) ^ 0x15001998) & (v85 ^ 0x53195CB1);
  LODWORD(v59) = (4 * v86) & 0xCAC95CCC ^ 0xC0C80CCC ^ ((4 * v86) ^ 0x2B257330) & v86;
  v87 = (16 * v59) & 0xCAC95CC0 ^ 0x4248100C ^ ((16 * v59) ^ 0xAC95CCC0) & v59;
  v88 = (2 * (v85 & 0x7D)) & 0xCC ^ v85 & 0x7D ^ ((2 * (v85 & 0x7D)) | 0x200000) & (v85 ^ 0x53195CB1);
  v89 = (4 * v88) & 0x4AC95CCC ^ v88 ^ ((4 * v88) | 0x400000) & v86;
  v90 = (16 * v89) & 0x4AC95CC0 ^ v89 ^ ((16 * v89) ^ 0x5000000) & v59;
  v91 = v90 ^ (v90 << 8) & 0xCAC95C00 ^ ((v90 << 8) ^ 0x50000000) & v87 ^ 0x8A995CCC;
  v92 = *(unsigned __int8 *)(v60
                           + (v85 ^ (2
                                   * ((v91 << 16) & 0x4AC90000 ^ v91 ^ ((v91 << 16) ^ 0x5CCC0000) & ((v87 << 8) & 0x4AC90000 ^ 0x2810000 ^ ((v87 << 8) ^ 0x495C0000) & v87))) ^ 0x9DD2B9E5))
      - 38;
  v93 = LODWORD(STACK[0x12EC]) ^ v92 ^ (v92 >> 5) ^ (v92 >> 4);
  LODWORD(STACK[0x1340]) = a1;
  v94 = v33 ^ a1 ^ LODWORD(STACK[0x1370]) ^ (v68 - 107);
  v95 = (v42 ^ LODWORD(STACK[0x13F0])) + 1244100124;
  v96 = ((2 * (v95 ^ 0x785A5992)) ^ 0x120524FE) & (v95 ^ 0x785A5992) ^ (2 * (v95 ^ 0x785A5992)) & 0x480427E;
  v97 = ((4 * v96) ^ 0xD7607410) & (v96 ^ 0xC902907D);
  v98 = v95 & 0x1ED ^ (2 * (v95 & 0x1ED)) & 0xFE7F ^ ((2 * (v95 & 0x1ED)) | 0x400) & (v95 ^ 0x785A5992) ^ 0xCD82D07F;
  LODWORD(v59) = ((4 * v98) ^ 0xC5617C14) & (v96 ^ 0xC902907D);
  v96 &= 0x326825E8u;
  v99 = v97 ^ v96;
  v100 = v98 ^ v96 ^ v59;
  v101 = ((16 * v99) ^ 0xE34B3368) & (v99 ^ 0xC102106F);
  LODWORD(v59) = ((16 * v100) ^ 0x3B661498) & (v99 ^ 0xC102106F);
  v99 &= 0xF36A35E8;
  v102 = v101 ^ v99;
  v103 = v100 ^ v99 ^ v59;
  v104 = v95 ^ (2
              * (v103 ^ v102 & 0xF36A35E8 ^ ((v103 << 8) ^ 0x71B84AE8) & (v102 ^ 0xC102107F) ^ (((v102 << 8) ^ 0xF17A5DE8) & (v102 ^ 0xC102107F) ^ v102 & 0xF36A35E8) & 0x736A35E8 ^ (((v103 ^ v102 & 0xF36A35E8 ^ ((v103 << 8) ^ 0x71B84AE8) & (v102 ^ 0xC102107F)) << 16) ^ 0x317D35E8) & (((v102 << 8) ^ 0xF17A5DE8) & (v102 ^ 0xC102107F) ^ v102 & 0xF36A35E8 ^ 0xC800000) ^ (((v103 ^ v102 & 0xF36A35E8 ^ ((v103 << 8) ^ 0x71B84AE8) & (v102 ^ 0xC102107F)) << 16) ^ 0x317D35E8) & 0x4D821068));
  LODWORD(STACK[0x1680]) = v93 ^ 0xFFFFFFE2;
  v105 = (v94 ^ a5 ^ v93 ^ 0xE2);
  LODWORD(STACK[0x1750]) = v105;
  v106 = (1526 - v105) & 0x51A;
  v105 += 521;
  LODWORD(STACK[0x160C]) = v105;
  LODWORD(STACK[0x1648]) = (385
                          * (((v104 ^ 0xAB19863E) - 149503306) ^ ((v104 ^ 0x8B477DA9) - 683132637) ^ ((v104 ^ 0xE83D484) + 1384943632))
                          + 1368141543)
                         % ((v105 & 0x11Au) + v106);
  v107 = (*((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1838])) ^ STACK[0xD80]) + 1911291620;
  v108 = 2 * (v107 ^ 0xF04E0671);
  v109 = (v108 ^ 0x80A408A8) & (v107 ^ 0xF04E0671);
  v110 = ((2 * (v107 & 0x125 ^ 0x7E5A0754)) ^ 0x80A408A8) & (v107 ^ 0xF04E0671) ^ v107 & 0x125 ^ 0x7E5A0754 ^ ((2 * (v107 & 0x125 ^ 0x7E5A0754)) & 0x14100440 | 0x2420000);
  v111 = v109 ^ v108 & 0x154;
  LODWORD(v59) = (4 * v111) ^ 0x6E1E5288;
  v111 |= 0x7E5A0000u;
  v109 &= 0x81245088;
  LODWORD(v59) = v59 & v111 ^ v109;
  v112 = v110 ^ v109 ^ ((4 * v110) ^ 0x375647D8) & v111;
  v113 = ((16 * v59) ^ 0xF2565288) & (v59 ^ 0x16520004);
  v114 = ((16 * v112) ^ 0x72D607C8) & (v59 ^ 0x16520004);
  LODWORD(v59) = v59 & 0x97765288;
  v115 = v113 ^ v59;
  v116 = v112 ^ v59 ^ v114;
  v117 = v107 ^ (2
               * (v116 ^ v115 & 0x97765288 ^ ((v116 << 8) ^ 0x9F730688) & (v115 ^ 0x16520054) ^ (((v115 << 8) ^ 0xC5765288) & (v115 ^ 0x16520054) ^ v115 & 0x97765288) & 0x17765288 ^ (((v116 ^ v115 & 0x97765288 ^ ((v116 << 8) ^ 0x9F730688) & (v115 ^ 0x16520054)) << 16) ^ 0x92225289) & (((v115 << 8) ^ 0xC5765288) & (v115 ^ 0x16520054) ^ v115 & 0x97765288 ^ 0x68080000) ^ (((v116 ^ v115 & 0x97765288 ^ ((v116 << 8) ^ 0x9F730688) & (v115 ^ 0x16520054)) << 16) ^ 0x92225289) & 0x7E5A0000));
  LODWORD(STACK[0x1644]) = v62[237] ^ LODWORD(STACK[0x1834]);
  v118 = 385 * LODWORD(STACK[0x13C0]) - 1062773238;
  v119 = (v118 ^ 0xEFFE31F5) & (2 * (v118 & 0x8A1F6)) ^ v118 & 0x8A1F6;
  v120 = ((2 * (v118 ^ 0xEFEF7135)) ^ 0x214FA186) & (v118 ^ 0xEFEF7135) ^ (2 * (v118 ^ 0xEFEF7135)) & 0x5097D0C2;
  v121 = (v120 ^ 0x50B7D080) & (4 * v119) ^ v119;
  v122 = ((4 * (v120 ^ 0x50905041)) ^ 0x42DF430C) & (v120 ^ 0x50905041) ^ (4 * (v120 ^ 0x50905041)) & 0xD0B7D0C0;
  v123 = (v122 ^ 0x40974000) & (16 * v121) ^ v121;
  v124 = ((16 * (v122 ^ 0x902090C3)) ^ 0xB7D0C30) & (v122 ^ 0x902090C3) ^ (16 * (v122 ^ 0x902090C3)) & 0xD0B7D0C0;
  v125 = v123 ^ 0xD0B7D0C3 ^ (v124 ^ 0x350000) & (v123 << 8);
  LODWORD(STACK[0x1778]) = (v118 ^ (2
                                  * ((v125 << 16) & 0x50B70000 ^ v125 ^ ((v125 << 16) ^ 0x50C30000) & (((v124 ^ 0xD082D0C3) << 8) & 0x50B70000 ^ 0x40270000 ^ (((v124 ^ 0xD082D0C3) << 8) ^ 0x37D00000) & (v124 ^ 0xD082D0C3)))) ^ 0x3F310070)
                         % 0x51A;
  v126 = 385
       * (((v117 ^ 0xDF45CF12) - 208425720) ^ ((v117 ^ 0x3FC770C3) + 319886039) ^ ((v117 ^ 0xBE86B65C) - 1840196534))
       + 1368141543;
  v127 = *((unsigned __int8 *)&STACK[0x2920]
         + ((v126 % 0x51A - 1926392729 - ((2 * (v126 % 0x51A)) & 0x8CE)) ^ 0x8D2D9467)) ^ STACK[0x1258];
  LODWORD(STACK[0x1768]) = v127;
  LOBYTE(v87) = v127 ^ LODWORD(STACK[0x1368]);
  v128 = v87 ^ 0x12;
  LODWORD(STACK[0x1688]) = v128;
  v129 = v128 + 1940976951;
  v130 = (v128 + 1940976951) ^ 0x779C46E8;
  v131 = ((2 * v130) ^ 0x4249246) & v130 ^ ((2 * v130) & 0x4522 | 0x93828801);
  v132 = ((2 * (v129 & 0x3CB ^ 0xFBD34D23)) ^ 0x4249246) & v130 ^ v129 & 0x3CB ^ 0xFBD34D23 ^ ((2
                                                                                              * (v129 & 0x3CB ^ 0xFBD34D23)) & 0x60000502 | 0x8512001);
  v133 = v131 & 0xC728F;
  v134 = (4 * v131) ^ 0xC91DF282;
  v131 ^= 0x68506003u;
  v135 = v134 & v131 ^ v133;
  v136 = v132 ^ v133 ^ ((4 * v132) ^ 0x2652460E) & v131;
  v137 = ((16 * v135) ^ 0xED5A72BF) & (v135 ^ 0x68506003);
  v138 = ((16 * v136) ^ 0xD562A0BF) & (v135 ^ 0x68506003);
  v135 &= 0x685C728Fu;
  v139 = v137 ^ v135;
  v140 = v136 ^ v135 ^ v138;
  STACK[0x1820] = v129 ^ (2
                        * (v140 ^ v139 & 0x685C728F ^ ((v140 << 8) ^ 0xEBD1528F) & (v139 ^ 0x68506023) ^ (((v139 << 8) ^ 0x383C718F) & (v139 ^ 0x68506023) ^ v139 & 0x685C728F) & 0x685C728F ^ (((v140 ^ v139 & 0x685C728F ^ ((v140 << 8) ^ 0xEBD1528F) & (v139 ^ 0x68506023)) << 16) ^ 0x857F728F) & (((v139 << 8) ^ 0x383C718F) & (v139 ^ 0x68506023) ^ v139 & 0x685C728F ^ 0x13830000) ^ (((v140 ^ v139 & 0x685C728F ^ ((v140 << 8) ^ 0xEBD1528F) & (v139 ^ 0x68506023)) << 16) ^ 0x857F728F) & 0x7BD36003));
  LODWORD(STACK[0x1870]) ^= LODWORD(STACK[0x118C]) ^ v62[103];
  v141 = v62[220] ^ v63;
  v142 = 0x322E42A57083BALL
       * (((LODWORD(STACK[0x1190]) ^ 0x9C1E36A56D9B7FD5) + 0x63E1C95A57FE8B60) ^ ((LODWORD(STACK[0x1190]) ^ 0x160CD9AA79A0924ELL)
                                                                                    - 0x160CD9AABC3A993BLL) ^ ((LODWORD(STACK[0x1190]) ^ 0x8A12EF0F5C8C7289) + 0x75ED10F066E98604))
       + 0x5662E78C7622FE87;
  v143 = ((2 * (v142 ^ 0xC183281CBFF54FE7)) ^ 0xADC2C442001D8D50) & (v142 ^ 0xC183281CBFF54FE7) ^ (2 * (v142 ^ 0xC183281CBFF54FE7)) & 0x56E16221000EC6A8;
  v144 = ((4 * (v143 ^ 0x52212221000242A8)) ^ 0x5B858884003B1AA0) & (v143 ^ 0x52212221000242A8) ^ (4 * (v143 ^ 0x52212221000242A8)) & 0x56E16221000EC6A8;
  v145 = ((16 * (v144 ^ 0x46062210004C408)) ^ 0x6E16221000EC6A80) & (v144 ^ 0x46062210004C408) ^ (16 * (v144 ^ 0x46062210004C408)) & 0x56E16221000EC6A0;
  v146 = (((v145 ^ 0x10E1402100028428) << 8) ^ 0xE16221000EC6A800) & (v145 ^ 0x10E1402100028428) ^ ((v145 ^ 0x10E1402100028428) << 8) & 0x56E16221000EC600;
  v147 = (v142 ^ 0xC743283DBFF34D6FLL) & (2 * (v142 & 0x97624A3DBFFB894FLL)) ^ v142 & 0x97624A3DBFFB894FLL;
  v148 = (v144 ^ 0x52810000000A02A0) & (16 * ((v143 ^ 0x4804000000C0400) & (4 * v147) ^ v147)) ^ (v143 ^ 0x4804000000C0400) & (4 * v147) ^ v147;
  v149 = (v145 ^ 0x46002200000C4200) & (v148 << 8) ^ v148 ^ 0x56E16221000EC6A8 ^ (v146 ^ 0x4060200000060000) & (((v145 ^ 0x46002200000C4200) & (v148 << 8) ^ v148) << 16);
  v150 = v142 ^ (2
               * ((v149 << 32) & 0x56E1622100000000 ^ v149 ^ ((v149 << 32) ^ 0xEC6A800000000) & (((v146 ^ 0x16814221000846A8) << 16) & 0x56E1622100000000 ^ 0x14C0622100000000 ^ (((v146 ^ 0x16814221000846A8) << 16) ^ 0x6221000E00000000) & (v146 ^ 0x16814221000846A8))));
  v151 = ((v150 ^ 0x7AAAFC8D386FD76) - 0x29D63FA93DD7F6FLL) ^ ((v150 ^ 0x49CB979B3108A566) - 0x4CFC5BA97153277FLL);
  LODWORD(v150) = __CFADD__(1306 * (v151 ^ ((v150 ^ 0x74C1326C5D685C0FLL) - 0x71F6FE5E1D33DE16)), 0x6C48636AACDDBA9CLL)+ (((v151 ^ ((v150 ^ 0x74C1326C5D685C0FuLL) - 0x71F6FE5E1D33DE16)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v150 ^ 0x7AAAFC8D386FD76, 0xFD629C056C228091) - 1) ^ (__CFADD__(v150 ^ 0x49CB979B3108A566, 0xB303A4568EACD881)- 1) ^ (__CFADD__(v150 ^ 0x74C1326C5D685C0FLL, 0x8E0901A1E2CC21EALL)- 1))+ 1478237446;
  LODWORD(v151) = ((2 * (v150 ^ 0xE8801CAE)) ^ 0x9EC7F120) & (v150 ^ 0xE8801CAE) ^ (2 * (v150 ^ 0xE8801CAE)) & 0x4F63F890;
  LODWORD(v144) = ((4 * (v151 ^ 0x41200890)) ^ 0x3D8FE240) & (v151 ^ 0x41200890) ^ (4 * (v151 ^ 0x41200890)) & 0x4F63F890;
  LODWORD(v145) = ((16 * (v144 ^ 0x42601890)) ^ 0xF63F8900) & (v144 ^ 0x42601890) ^ (16 * (v144 ^ 0x42601890)) & 0x4F63F890;
  v152 = (v150 ^ 0xA7C3D4BE) & (2 * (v150 & 0xA7E3E43E)) ^ v150 & 0xA7E3E43E;
  LODWORD(v151) = (v144 ^ 0xD03E000) & (16 * ((v151 ^ 0xE03B000) & (4 * v152) ^ v152)) ^ (v151 ^ 0xE03B000) & (4 * v152) ^ v152;
  LODWORD(v151) = v151 ^ 0x4F63F890 ^ (v145 ^ 0x46238800) & ((_DWORD)v151 << 8);
  LODWORD(v150) = v150 ^ (2
                        * (((_DWORD)v151 << 16) & 0x4F630000 ^ v151 ^ (((_DWORD)v151 << 16) ^ 0x78900000) & (((v145 ^ 0x9407090) << 8) & 0x4F630000 ^ 0xC030000 ^ (((v145 ^ 0x9407090) << 8) ^ 0x63F80000) & (v145 ^ 0x9407090))));
  v153 = v84;
  LODWORD(v151) = 71 * (v58 ^ v84);
  LODWORD(v144) = v151 + 501385866;
  LODWORD(v145) = (2 * (v144 ^ 0x43B3E9FF)) & 0x328 ^ 0x2528 ^ ((2 * (v144 ^ 0x43B3E9FF)) ^ 0x42504250) & (v144 ^ 0x43B3E9FF);
  LODWORD(v146) = (4 * v145) & 0xA1AE2728 ^ 0x21062308 ^ ((4 * v145) ^ 0x86B89CA0) & v145;
  v154 = (16 * v146) & 0xA1AE2720 ^ 0xA10C0528 ^ ((16 * v146) ^ 0x1AE27280) & v146;
  v155 = ((2 * ((v151 - 30070) & 0x8D7)) & 0x128 | 0x80200) ^ ((v151 - 30070) & 0x8D7 | 0xA1A6A328) ^ (v144 ^ 0x43B3E9FF) & 0x101AE & ((2 * ((v151 - 30070) & 0x8D7)) | 0x435D4A50);
  v156 = (4 * v155) & 0x80AE2728 ^ v155 ^ ((4 * v155) ^ 0x86B89CA0) & v145;
  v157 = (16 * v156) & 0xA1AE2720 ^ v156 ^ ((16 * v156) ^ 0x10623080) & v146;
  v158 = v157 ^ (v157 << 8) & 0xA1AE2700 ^ ((v157 << 8) ^ 0x24030800) & v154 ^ 0xA0882420;
  LODWORD(STACK[0x1838]) = ((*(unsigned __int8 *)(v60
                                                + (v144 ^ (2
                                                                       * ((v158 << 16) & 0x21AE0000 ^ v158 ^ ((v158 << 16) ^ 0x27280000) & ((v154 << 8) & 0x21AE0000 ^ 0x1880000 ^ ((v154 << 8) ^ 0x2E270000) & v154))) ^ 0xE3118087)) ^ v151 ^ 0xFFFFFFA5)
                          - 107) ^ v62[26];
  LODWORD(v151) = *(unsigned __int8 *)(v60 + (STACK[0x1810] ^ 0xEDAF67FF)) ^ 0x4C ^ (*(unsigned __int8 *)(v60 + (STACK[0x1810] ^ 0xEDAF67FF)) >> 3) & 0x15;
  v159 = v62[147];
  LODWORD(STACK[0x16A4]) = v159;
  LODWORD(v151) = *(unsigned __int8 *)(v60
                                     + ((-3
                                                        * (((v151 >> 2) | ((_BYTE)v151 << 6)) ^ v159)) ^ 0xFDu)
                                     + 40108);
  LODWORD(v151) = ((v151 >> 7) | (2 * v151)) ^ (((v151 >> 7) | (2 * v151)) >> 6) ^ (((v151 >> 7) | (2 * v151)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(STACK[0x1810]) = (v151 >> 2) | ((_DWORD)v151 << 6);
  LODWORD(v151) = 385 * LODWORD(STACK[0x1214]) + 1512164056;
  LODWORD(v144) = ((2 * (v151 ^ 0x5E980AF4)) ^ 0x4887FB8) & (v151 ^ 0x5E980AF4) ^ (2 * (v151 ^ 0x5E980AF4)) & 0x9463FDC;
  v160 = ((4 * (v144 ^ 0x9420044)) ^ 0x6D18FF70) & (v144 ^ 0x9420044) ^ (4 * (v144 ^ 0x9420044)) & 0x7B463FDC;
  LODWORD(v145) = ((16 * (v160 ^ 0x1246008C)) ^ 0x3463FDC0) & (v160 ^ 0x1246008C) ^ (16 * (v160 ^ 0x1246008C)) & 0x7B463FD0;
  v161 = (v151 ^ 0x5E9C20A4) & (2 * (v151 & 0x23528)) ^ v151 & 0x23528;
  LODWORD(v144) = (v160 ^ 0xE9003F40) & (16 * ((v144 ^ 0x9423D84) & (4 * v161) ^ v161)) ^ (v144 ^ 0x9423D84) & (4 * v161) ^ v161;
  LODWORD(v144) = v144 ^ 0xFB463FDC ^ (v145 ^ 0xB0423D00) & ((_DWORD)v144 << 8);
  v162 = v151 ^ (2
                             * (((_DWORD)v144 << 16) & 0x7B460000 ^ v144 ^ (((_DWORD)v144 << 16) ^ 0x3FDC0000) & (((v145 ^ 0x4B04021C) << 8) & 0x7B460000 ^ 0x39400000 ^ (((v145 ^ 0x4B04021C) << 8) ^ 0x463F0000) & (v145 ^ 0x4B04021C)))) ^ 0xA8F7DEF7;
  v163 = 0x322E42A57083BALL
       * (((v162 ^ 0xB8525F283F2A7DCCLL) + 0x47ADA0D7C0D58234) ^ ((v162 ^ 0x105BB7C93174D33ELL) - 0x105BB7C93174D33ELL) ^ ((v162 ^ 0xA809E8E183733A95) + 0x57F6171E7C8CC56BLL))
       - 0x392F04AFBA522A54;
  v164 = ((2 * (v163 ^ 0x60E8AC0E483A949DLL)) ^ 0x8C3934EF70944D6ELL) & (v163 ^ 0x60E8AC0E483A949DLL) ^ (2 * (v163 ^ 0x60E8AC0E483A949DLL)) & 0x461C9A77B84A26B6;
  v165 = ((4 * (v164 ^ 0x42048A10884A2291)) ^ 0x187269DEE1289ADCLL) & (v164 ^ 0x42048A10884A2291) ^ (4 * (v164 ^ 0x42048A10884A2291)) & 0x461C9A77B84A26B4;
  v166 = ((16 * (v165 ^ 0x460C922118422423)) ^ 0x61C9A77B84A26B70) & (v165 ^ 0x460C922118422423) ^ (16 * (v165 ^ 0x460C922118422423)) & 0x461C9A77B84A26B0;
  v167 = (((v166 ^ 0x614180438480487) << 8) ^ 0x1C9A77B84A26B700) & (v166 ^ 0x614180438480487) ^ ((v166 ^ 0x614180438480487) << 8) & 0x461C9A77B84A2600;
  v168 = (v163 ^ 0x24E0A47DE87AB089) & (2 * (v163 & 0x26F43679F070B22ALL)) ^ v163 & 0x26F43679F070B22ALL;
  v169 = (v165 ^ 0x100856A0080280) & (16 * ((v164 ^ 0x410106700000020) & (4 * v168) ^ v168)) ^ (v164 ^ 0x410106700000020) & (4 * v168) ^ v168;
  v170 = (v166 ^ 0x4008827380022200) & (v169 << 8) ^ v169 ^ 0x461C9A77B84A26B7 ^ (v167 ^ 0x418123008020000) & (((v166 ^ 0x4008827380022200) & (v169 << 8) ^ v169) << 16);
  v171 = v163 ^ (2
               * ((v170 << 32) & 0x461C9A7700000000 ^ v170 ^ ((v170 << 32) ^ 0x384A26B700000000) & (((v167 ^ 0x42048847B04800B7) << 16) & 0x461C9A7700000000 ^ 0x4408023500000000 ^ (((v167 ^ 0x42048847B04800B7) << 16) ^ 0x1A77B84A00000000) & (v167 ^ 0x42048847B04800B7))));
  v172 = ((v171 ^ 0x9258CEC928B6BA9DLL) + 0x7ECA8ABE50FBE523) ^ ((v171 ^ 0xB00BE4F398F7CE90) + 0x5C99A084E0BA9130);
  LODWORD(v171) = __CFADD__(1306 * (v172 ^ ((v171 ^ 0x888E2CC230A58B49) + 0x641C68B548E8D4F7)), 0x4FA66D856EA0BA68)+ (((v172 ^ ((v171 ^ 0x888E2CC230A58B49) + 0x641C68B548E8D4F7)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v171 ^ 0x9258CEC928B6BA9DLL, 0x7ECA8ABE50FBE523) - 1) ^ (__CFADD__(v171 ^ 0xB00BE4F398F7CE90, 0x5C99A084E0BA9130)- 1) ^ (__CFADD__(v171 ^ 0x888E2CC230A58B49, 0x641C68B548E8D4F7)- 1))+ 1506407456;
  LODWORD(v172) = ((2 * (v171 ^ 0xEB596194)) ^ 0x9ADEDC0E) & (v171 ^ 0xEB596194) ^ (2 * (v171 ^ 0xEB596194)) & 0x4D6F6E06;
  LODWORD(v165) = ((4 * (v172 ^ 0x45212201)) ^ 0x35BDB81C) & (v172 ^ 0x45212201) ^ (4 * (v172 ^ 0x45212201)) & 0x4D6F6E04;
  LODWORD(v166) = ((16 * (v165 ^ 0x48424603)) ^ 0xD6F6E070) & (v165 ^ 0x48424603) ^ (16 * (v165 ^ 0x48424603)) & 0x4D6F6E00;
  v173 = (v171 ^ 0xA7356F92) & (2 * (v171 & 0xA6360F93)) ^ v171 & 0xA6360F93;
  LODWORD(v172) = (v165 ^ 0x52D2800) & (16 * ((v172 ^ 0x8484C04) & (4 * v173) ^ v173)) ^ (v172 ^ 0x8484C04) & (4 * v173) ^ v173;
  LODWORD(v172) = v172 ^ 0x4D6F6E07 ^ (v166 ^ 0x44666000) & ((_DWORD)v172 << 8);
  LODWORD(v150) = *((unsigned __int8 *)&STACK[0x2920] + (v150 ^ 0xA924151E));
  LODWORD(STACK[0x17EC]) = v141 ^ v150;
  v174 = v150 ^ v62[60];
  LODWORD(v150) = *((unsigned __int8 *)&STACK[0x2920]
                  + (v171 ^ (2
                                         * (((_DWORD)v172 << 16) & 0x4D6F0000 ^ v172 ^ (((_DWORD)v172 << 16) ^ 0x6E070000) & (((v166 ^ 0x9090E07) << 8) & 0x4D6F0000 ^ (((v166 ^ 0x9090E07) << 8) ^ 0x6F6E0000) & (v166 ^ 0x9090E07) ^ 0x10000))) ^ 0xA4E6D39D));
  LODWORD(STACK[0x17C0]) = v150;
  LODWORD(v167) = v150 ^ v84;
  LODWORD(STACK[0x17F0]) = v84;
  v175 = v150 ^ v84 ^ v174;
  LODWORD(STACK[0x1710]) = v175;
  v176 = 385 * v175 - 2003261380;
  LODWORD(v171) = ((2 * (v176 ^ 0xEE5231C8)) ^ 0x224ACC18) & (v176 ^ 0xEE5231C8) ^ (2 * (v176 ^ 0xEE5231C8)) & 0x8915660C;
  LODWORD(v172) = ((4 * (v171 ^ 0x89152204)) ^ 0x64D59830) & (v171 ^ 0x89152204) ^ (4 * (v171 ^ 0x89152204)) & 0x9935660C;
  LODWORD(v166) = ((16 * (v172 ^ 0x9920660C)) ^ 0x935660C0) & (v172 ^ 0x9920660C) ^ (16 * (v172 ^ 0x9920660C)) & 0x99356600;
  LODWORD(v147) = (v176 ^ 0xEE5617C0) & (2 * (v176 & 0x357C4)) ^ v176 & 0x357C4;
  LODWORD(v171) = (v172 ^ 0x15000C) & (16 * ((v171 ^ 0x89004404) & (4 * v147) ^ v147)) ^ (v171 ^ 0x89004404) & (4 * v147) ^ v147;
  LODWORD(v171) = v171 ^ 0x9935660C ^ (v166 ^ 0x91146000) & ((_DWORD)v171 << 8);
  v177 = v176 ^ (2
               * (((_DWORD)v171 << 16) & 0x19350000 ^ v171 ^ (((_DWORD)v171 << 16) ^ 0x660C0000) & (((v166 ^ 0x821060C) << 8) & 0x19350000 ^ 0x8110000 ^ (((v166 ^ 0x821060C) << 8) ^ 0x35660000) & (v166 ^ 0x821060C)))) ^ 0xC8280FBB;
  v178 = 0x322E42A57083BALL
       * (((v177 ^ 0xADBD604E2918B276) + 0x52429FB1D6E74D8ALL) ^ ((v177 ^ 0x897F697A2FFCAFB2) + 0x76809685D003504ELL) ^ ((v177 ^ 0x24C209348BC989A3) - 0x24C209348BC989A3))
       + 0xEA1AF7E7A0FC4D1;
  v179 = (2 * (v178 ^ 0xE1731329EA7123B6)) & 0x3E509162567FE0B2 ^ 0x250912252002091 ^ ((2
                                                                                            * (v178 ^ 0xE1731329EA7123B6)) ^ 0x7CA122C4ACFFC166) & (v178 ^ 0xE1731329EA7123B6);
  v180 = (4 * v179) & 0x3E509162567FE0B0 ^ 0x610906206006033 ^ ((4 * v179) ^ 0xF942458959FF82CCLL) & v179;
  v181 = (16 * v180) & 0x3E509162567FE0B0 ^ 0x1A5081421001E083 ^ ((16 * v180) ^ 0xE509162567FE0B30) & v180;
  v182 = (v181 << 8) & 0x3E509162567FE000 ^ 0x2E409120001F40B3 ^ ((v181 << 8) ^ 0x509162567FE0B300) & v181;
  v183 = (2 * (v178 & 0xDF23824BBC0EC304)) & 0x3E400002501D8000 ^ v178 & 0xDF23824BBC0EC304 ^ ((2 * (v178 & 0xDF23824BBC0EC304)) | 2) & (v178 ^ 0xE1731329EA7123B6);
  v184 = (4 * v183) & 0x3E509162567FE0B0 ^ v183 ^ ((4 * v183) ^ 0xC) & v179;
  v185 = (16 * v184) & 0x3E509162567FE0B0 ^ v184 ^ ((16 * v184) ^ 0x30) & v180;
  v186 = (v185 << 8) & 0x3E509162567FE000 ^ v185 ^ ((v185 << 8) ^ 0x3300) & v181;
  v187 = v186 ^ (v186 << 16) & 0x3E509162567F0000 ^ ((v186 << 16) ^ 0x20330000) & v182 ^ 0x3E509162564CC080;
  v188 = v178 ^ (2
               * ((v187 << 32) & 0x3E50916200000000 ^ v187 ^ ((v187 << 32) ^ 0x567FE0B300000000) & ((v182 << 16) & 0x3E50916200000000 ^ 0x2E10810000000000 ^ ((v182 << 16) ^ 0x1162567F00000000) & v182)));
  v189 = ((v188 ^ 0x16072B7F25FAF31FLL) + 0x411D11B550BA82F7) ^ ((v188 ^ 0x2314DAFFFA2FFA15) + 0x740EE0358F6F8BFDLL);
  LODWORD(v188) = __CFADD__(1306 * (v189 ^ ((v188 ^ 0xBA30514BCF240B69) - 0x12D5947E459B857FLL)), 0xEA2454DF34B88CE2)+ (((v189 ^ ((v188 ^ 0xBA30514BCF240B69) - 0x12D5947E459B857FLL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v188 ^ 0x16072B7F25FAF31FLL, 0x411D11B550BA82F7) - 1) ^ (__CFADD__(v188 ^ 0x2314DAFFFA2FFA15, 0x740EE0358F6F8BFDLL)- 1) ^ (__CFADD__(v188 ^ 0xBA30514BCF240B69, 0xED2A6B81BA647A81)- 1))+ 200025176;
  LODWORD(v189) = ((2 * (v188 ^ 0x99309014)) ^ 0xDA4698CC) & (v188 ^ 0x99309014) ^ (2 * (v188 ^ 0x99309014)) & 0x6D234C66;
  LODWORD(v179) = ((4 * (v189 ^ 0x25214422)) ^ 0xB48D3198) & (v189 ^ 0x25214422) ^ (4 * (v189 ^ 0x25214422)) & 0x6D234C64;
  LODWORD(v180) = ((16 * (v179 ^ 0x49224C66)) ^ 0xD234C660) & (v179 ^ 0x49224C66) ^ (16 * (v179 ^ 0x49224C66)) & 0x6D234C60;
  LODWORD(v182) = (v188 ^ 0xF1139870) & (2 * (v188 & 0xF413DC72)) ^ v188 & 0xF413DC72;
  LODWORD(v189) = (v179 ^ 0x24010006) & (16 * ((v189 ^ 0x45220462) & (4 * v182) ^ v182)) ^ (v189 ^ 0x45220462) & (4 * v182) ^ v182;
  LODWORD(v189) = v189 ^ 0x6D234C66 ^ (v180 ^ 0x40204406) & ((_DWORD)v189 << 8);
  LODWORD(STACK[0x15E8]) = v188 ^ (2
                                 * (((_DWORD)v189 << 16) & 0x6D230000 ^ v189 ^ (((_DWORD)v189 << 16) ^ 0x4C660000) & (((v180 ^ 0x2D030806) << 8) & 0x6D230000 ^ 0x4C230000 ^ (((v180 ^ 0x2D030806) << 8) ^ 0x234C0000) & (v180 ^ 0x2D030806))));
  LODWORD(v188) = 385 * LODWORD(STACK[0x1180]) + 1303243791;
  LODWORD(v189) = ((2 * (v188 ^ 0x83B0421F)) ^ 0x4204A3DC) & (v188 ^ 0x83B0421F) ^ (2 * (v188 ^ 0x83B0421F)) & 0x102251EE;
  LODWORD(v179) = v188 & 0x213F1 ^ 0x31E251EE ^ (v188 ^ 0x83B043FD) & (2 * (v188 & 0x213F1));
  LODWORD(v181) = ((4 * v189) ^ 0x28CD8574) & (v189 ^ 0x21C001CE);
  LODWORD(v180) = ((4 * v179) ^ 0x6844C5FC) & (v189 ^ 0x21C001CE);
  LODWORD(v189) = v189 & 0xAFCD8244;
  LODWORD(v181) = v181 ^ v189;
  LODWORD(v189) = v189 ^ v179 ^ v180;
  LODWORD(v179) = ((16 * v181) ^ 0xB3CD8604) & (v181 ^ 0x21C0004E);
  LODWORD(v180) = ((16 * v189) ^ 0xADE898E4) & (v181 ^ 0x21C0004E);
  LODWORD(v181) = v181 & 0xAFCD8244;
  LODWORD(v179) = v179 ^ v181;
  LODWORD(v189) = v181 ^ v189 ^ v180;
  v190 = v188 ^ (2
                             * (v189 ^ v179 & 0xAFCD8244 ^ (((_DWORD)v189 << 8) ^ 0x4D9C6C44) & (v179 ^ 0x21C000EE) ^ ((((_DWORD)v179 << 8) ^ 0x6FCDC644) & (v179 ^ 0x21C000EE) ^ v179 & 0xAFCD8244) & 0x2FCD8244 ^ (((v189 ^ v179 & 0xAFCD8244 ^ (((_DWORD)v189 << 8) ^ 0x4D9C6C44) & (v179 ^ 0x21C000EE)) << 16) ^ 0xFE678245) & ((((_DWORD)v179 << 8) ^ 0x6FCDC644) & (v179 ^ 0x21C000EE) ^ v179 & 0xAFCD8244 ^ 0x10220000) ^ (((v189 ^ v179 & 0xAFCD8244 ^ (((_DWORD)v189 << 8) ^ 0x4D9C6C44) & (v179 ^ 0x21C000EE)) << 16) ^ 0xFE678245) & 0x31E20044)) ^ 0x5CBB244A;
  v191 = 0x322E42A57083BALL
       * (((v190 ^ 0xCAE25161F0724050) + 0x351DAE9E0F8DBFB0) ^ ((v190 ^ 0x7B56F7187D840DCELL) - 0x7B56F7187D840DCELL) ^ ((v190 ^ 0xB1B4A67900DBD9F9) + 0x4E4B5986FF242607))
       - 0x6AF3ADFBA0F3B472;
  v192 = ((2 * (v191 ^ 0x8B084940DA719BD7)) ^ 0xA7612D0A1AC74F3ELL) & (v191 ^ 0x8B084940DA719BD7) ^ (2 * (v191 ^ 0x8B084940DA719BD7)) & 0xD3B096850D63A79ELL;
  v193 = ((4 * (v192 ^ 0x509092850520A081)) ^ 0x4EC25A14358E9E7CLL) & (v192 ^ 0x509092850520A081) ^ (4 * (v192 ^ 0x509092850520A081)) & 0xD3B096850D63A79CLL;
  v194 = ((16 * (v193 ^ 0x9130848108612183)) ^ 0x3B096850D63A79F0) & (v193 ^ 0x9130848108612183) ^ (16 * (v193 ^ 0x9130848108612183)) & 0xD3B096850D63A790;
  v195 = (((v194 ^ 0xC0B096850941860FLL) << 8) ^ 0xB096850D63A79F00) & (v194 ^ 0xC0B096850941860FLL) ^ ((v194 ^ 0xC0B096850941860FLL) << 8) & 0xD3B096850D63A700;
  v196 = (v191 ^ 0x1A38DFC1D651BB47) & (2 * (v191 & 0x58B8DFC5D7123C48)) ^ v191 & 0x58B8DFC5D7123C48;
  v197 = (v193 ^ 0x4280120405028600) & (16 * ((v192 ^ 0x8320040008410300) & (4 * v196) ^ v196)) ^ (v192 ^ 0x8320040008410300) & (4 * v196) ^ v196;
  v198 = (v194 ^ 0x1300000004222100) & (v197 << 8) ^ v197 ^ 0xD3B096850D63A79FLL ^ (v195 ^ 0x9090840501230000) & (((v194 ^ 0x1300000004222100) & (v197 << 8) ^ v197) << 16);
  v199 = v191 ^ (2
               * ((v198 << 32) & 0x53B0968500000000 ^ v198 ^ ((v198 << 32) ^ 0xD63A79F00000000) & (((v195 ^ 0x432012800C40209FLL) << 16) & 0x53B0968500000000 ^ 0x4130928400000000 ^ (((v195 ^ 0x432012800C40209FLL) << 16) ^ 0x16850D6300000000) & (v195 ^ 0x432012800C40209FLL))));
  LODWORD(v194) = (__CFADD__(v199 ^ 0xED812D7E4618D260, 0x373B704367071267) - 1) ^ (__CFADD__(v199 ^ 0x5C3FA3E6A6AF7D36, 0x8685FEDB87B0BD31)- 1);
  v200 = ((v199 ^ 0xED812D7E4618D260) + 0x373B704367071267) ^ ((v199 ^ 0x5C3FA3E6A6AF7D36) - 0x797A0124784F42CFLL);
  v199 ^= 0x4C26715D2D62DC20uLL;
  v201 = __CFADD__(v199, 0x969C2C600C7D1C27);
  v202 = v200 ^ (v199 - 0x6963D39FF382E3D9);
  LODWORD(v200) = (((unint64_t)v202 * (unsigned __int128)0x51AuLL) >> 64) + 1306 * (v194 ^ (v201 - 1));
  v201 = __CFADD__(1306 * v202, 0x594C9617FDE89186);
  LODWORD(v202) = 385 * LODWORD(STACK[0x1410]) - 352629902;
  LODWORD(v193) = ((2 * (v202 ^ 0x745AB15)) ^ 0x24823F36) & (v202 ^ 0x745AB15) ^ (2 * (v202 ^ 0x745AB15)) & 0x12411F9A;
  LODWORD(v194) = ((4 * (v193 ^ 0x12410089)) ^ 0x49047E6C) & (v193 ^ 0x12410089) ^ (4 * (v193 ^ 0x12410089)) & 0x12411F98;
  LODWORD(v195) = ((16 * (v194 ^ 0x12410193)) ^ 0x2411F9B0) & (v194 ^ 0x12410193) ^ (16 * (v194 ^ 0x12410193)) & 0x12411F90;
  LODWORD(v196) = (v202 ^ 0x744A20D) & (2 * (v202 & 0x4B48E)) ^ v202 & 0x4B48E;
  LODWORD(v193) = (v194 ^ 0x1E10) & (16 * ((v193 ^ 0x12401691) & (4 * v196) ^ v196)) ^ (v193 ^ 0x12401691) & (4 * v196) ^ v196;
  LODWORD(v193) = v193 ^ 0x12411F9B ^ (v195 ^ 0x1190B) & ((_DWORD)v193 << 8);
  LODWORD(v150) = v202 ^ (2
                        * (((_DWORD)v193 << 16) & 0x12410000 ^ v193 ^ (((_DWORD)v193 << 16) ^ 0x1F9B0000) & (((v195 ^ 0x1240060B) << 8) & 0x12410000 ^ 0x12400000 ^ (((v195 ^ 0x1240060B) << 8) ^ 0x411F0000) & (v195 ^ 0x1240060B))));
  LODWORD(STACK[0x1668]) = v150;
  v203 = a5;
  LODWORD(STACK[0x12D8]) = a5;
  v204 = STACK[0x1350];
  v205 = a5 ^ LODWORD(STACK[0x1350]);
  LODWORD(v193) = v205 ^ LODWORD(STACK[0x1364]);
  LODWORD(STACK[0x15F8]) = v193;
  LODWORD(v202) = LODWORD(STACK[0x1340]) ^ v193;
  LODWORD(STACK[0x15B0]) = v202;
  LODWORD(v193) = *(unsigned __int8 *)(v60 + ((-3 * v202) ^ 0xFDu) + 40108);
  LODWORD(v193) = ((v193 >> 7) | (2 * v193)) ^ (((v193 >> 7) | (2 * v193)) >> 6) ^ (((v193 >> 7) | (2 * v193)) >> 4) ^ 0xFFFFFFD7;
  LODWORD(v194) = (v193 >> 2) | ((_DWORD)v193 << 6);
  v206 = 0x322E42A57083BALL
       * (((v150 ^ 0x66D4928CFE1DFB94) - 0x66D4928C66B4E44BLL) ^ ((v150 ^ 0xE04AA35E80585811)
                                                                                + 0x1FB55CA1E70EB832) ^ ((v150 ^ 0x869E31D26BC1283DLL) + 0x7961CE2D0C97C81ELL))
       - 0x1AC3C637B1FB8077;
  v207 = (2 * (v206 ^ 0x424CBE75A564A61ELL)) & 0x4AC446744D7EAE52 ^ 0x4A4442144502A251 ^ ((2
                                                                                             * (v206 ^ 0x424CBE75A564A61ELL)) ^ 0x95888CE89AFD5CA6) & (v206 ^ 0x424CBE75A564A61ELL);
  v208 = (4 * v207) & 0x4AC446744D7EAE50 ^ 0x40C4462448040613 ^ ((4 * v207) ^ 0x2B1119D135FAB94CLL) & v207;
  v209 = (16 * v208) & 0x4AC446744D7EAE50 ^ 0x4280003008140A43 ^ ((16 * v208) ^ 0xAC446744D7EAE530) & v208;
  v210 = (v209 << 8) & 0x4AC446744D7EAE00 ^ 0xA8002300150AC53 ^ ((v209 << 8) ^ 0xC446744D7EAE5300) & v209;
  v211 = (2 * (v206 & 0x888F801E81A084CLL)) & 0x400040340010 ^ v206 & 0x888F801E81A084CLL ^ ((2
                                                                                              * (v206 & 0x888F801E81A084CLL)) | 2) & (v206 ^ 0x424CBE75A564A61ELL);
  v212 = (4 * v211) & 0x4AC446744D7EAE50 ^ v211 ^ ((4 * v211) ^ 0xC) & v207;
  v213 = (16 * v212) & 0x4AC446744D7EAE50 ^ v212 ^ ((16 * v212) ^ 0x30) & v208;
  v214 = (v213 << 8) & 0x4AC446744D7EAE00 ^ v213 ^ ((v213 << 8) ^ 0x1300) & v209;
  v215 = v214 ^ (v214 << 16) & 0x4AC446744D7E0000 ^ ((v214 << 16) ^ 0x2130000) & v210 ^ 0x4AC446744D6CAC40;
  v216 = v206 ^ (2
               * ((v215 << 32) & 0x4AC4467400000000 ^ v215 ^ ((v215 << 32) ^ 0x4D7EAE5300000000) & ((v210 << 16) & 0x4AC4467400000000 ^ 0x880020000000000 ^ ((v210 << 16) ^ 0x46744D7E00000000) & v210)));
  LODWORD(STACK[0x1664]) = v201 + (_DWORD)v200 + 1775943152;
  v217 = ((v216 ^ 0xA10AFE9CCC47DC80) - 0x67B3E0C0EB12A65CLL) ^ ((v216 ^ 0xF4EB2EA8D0F92D18) - 0x325230F4F7AC57C4);
  LODWORD(v217) = __CFADD__(1306 * (v217 ^ ((v216 ^ 0x5869A87D6E59A573) + 0x612F49DEB6F32051)), 0x9A02C8D72EFFC496)+ (((v217 ^ ((v216 ^ 0x5869A87D6E59A573) + 0x612F49DEB6F32051)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v216 ^ 0xA10AFE9CCC47DC80, 0x984C1F3F14ED59A4) - 1) ^ (__CFADD__(v216 ^ 0xF4EB2EA8D0F92D18, 0xCDADCF0B0853A83CLL)- 1) ^ (__CFADD__(v216 ^ 0x5869A87D6E59A573, 0x612F49DEB6F32051)- 1))+ 932030194;
  LODWORD(v216) = ((2 * (v217 ^ 0x14C554A0)) ^ 0xB96E1374) & (v217 ^ 0x14C554A0) ^ (2 * (v217 ^ 0x14C554A0)) & 0xDCB709BA;
  v218 = ((4 * (v216 ^ 0x4491088A)) ^ 0x72DC26E8) & (v216 ^ 0x4491088A) ^ (4 * (v216 ^ 0x4491088A)) & 0xDCB709B8;
  v219 = ((16 * (v218 ^ 0x8C230912)) ^ 0xCB709BA0) & (v218 ^ 0x8C230912) ^ (16 * (v218 ^ 0x8C230912)) & 0xDCB709B0;
  LODWORD(v207) = (v217 ^ 0x84615C90) & (2 * (v217 & 0xC8725D1A)) ^ v217 & 0xC8725D1A;
  LODWORD(v216) = (v218 ^ 0x509400A0) & (16 * ((v216 ^ 0x4020032) & (4 * v207) ^ v207)) ^ (v216 ^ 0x4020032) & (4 * v207) ^ v207;
  LODWORD(v216) = v216 ^ 0xDCB709BA ^ (v219 ^ 0xC8300900) & ((_DWORD)v216 << 8);
  LODWORD(v217) = v217 ^ (2
                        * (((_DWORD)v216 << 16) & 0x5CB70000 ^ v216 ^ (((_DWORD)v216 << 16) ^ 0x9BA0000) & (((v219 ^ 0x1487001A) << 8) & 0xDCB70000 ^ 0x48B60000 ^ (((v219 ^ 0x1487001A) << 8) ^ 0x37090000) & (v219 ^ 0x1487001A))));
  LODWORD(v216) = ((((((2 * (STACK[0x11D0] & 0x181)) | 0x309F29A2) - (STACK[0x11D0] & 0x181) - 407868625) ^ 0x184F9551)
                  + ((416 - LODWORD(STACK[0x11D8])) & 0xFFFFFF81)) | ((STACK[0x11C8] & 0x100) + (STACK[0x1390] & 0x100)))
                * LODWORD(STACK[0x1238]);
  v220 = *((unsigned __int8 *)&STACK[0x2920] + (v217 ^ 0x60784E6E));
  LODWORD(v217) = *((unsigned __int8 *)&STACK[0x2920]
                  + ((v216 % 0x51A - 1926392729 - ((2 * (v216 % 0x51A)) & 0x8CE)) ^ 0x8D2D9467));
  v221 = v62;
  LODWORD(v202) = v62[76];
  LODWORD(STACK[0x16B0]) = v202;
  v222 = v167 ^ v220 ^ v202 ^ v217;
  v223 = STACK[0x1360];
  LODWORD(v182) = STACK[0x13F0];
  LODWORD(STACK[0x15D0]) = LODWORD(STACK[0x1360]) ^ LODWORD(STACK[0x13F0]) ^ v222 ^ v194;
  LODWORD(v150) = (v223 ^ v182 ^ v222 ^ v194);
  LODWORD(STACK[0x1698]) = v150;
  v224 = (v150 + 598583925) ^ 0xDF662CEA;
  LODWORD(v194) = ((2 * v224) ^ 0x44886FC) & v224 ^ (2 * v224) & 0x110037E;
  v225 = ((2 * ((v150 + 598583925) & 0x194 ^ 0x334797E)) ^ 0x44886FC) & v224 ^ (v150 + 598583925) & 0x194 ^ 0x334797E ^ ((2 * ((v150 + 598583925) & 0x194 ^ 0x334797E)) & 0x200533C | 0x40800);
  LODWORD(v167) = ((4 * v194) ^ 0x3254334C) & (v194 ^ 0x2247A7E);
  v226 = ((4 * v225) ^ 0x3E055FB4) & (v194 ^ 0x2247A7E);
  LODWORD(v194) = v194 & 0x38C182BC;
  LODWORD(v167) = v167 ^ v194;
  v227 = v225 ^ v194 ^ v226;
  LODWORD(v194) = ((16 * v167) ^ 0x1A80797C) & (v167 ^ 0x2045A3E);
  v228 = ((16 * v227) ^ 0x9826D5C) & (v167 ^ 0x2045A3E);
  LODWORD(v167) = v167 & 0x3AC5DABC;
  LODWORD(v194) = v194 ^ v167;
  v229 = v227 ^ v167 ^ v228;
  LODWORD(STACK[0x1834]) = (v150 + 598583925) ^ (2
                                               * (v229 ^ v194 & 0x3AC5DABC ^ ((v229 << 8) ^ 0xAE498BC) & (v194 ^ 0x2045A7E) ^ ((((_DWORD)v194 << 8) ^ 0x3E9FE6BC) & (v194 ^ 0x2045A7E) ^ v194 & 0x3AC5DABC) & 0x3AC5DABC ^ (((v229 ^ v194 & 0x3AC5DABC ^ ((v229 << 8) ^ 0xAE498BC) & (v194 ^ 0x2045A7E)) << 16) ^ 0x41BBDABC) & ((((_DWORD)v194 << 8) ^ 0x3E9FE6BC) & (v194 ^ 0x2045A7E) ^ v194 & 0x3AC5DABC ^ 0x1300000) ^ (((v229 ^ v194 & 0x3AC5DABC ^ ((v229 << 8) ^ 0xAE498BC) & (v194 ^ 0x2045A7E)) << 16) ^ 0x41BBDABC) & 0x3345A3C));
  v230 = v60
       + ((-3
                          * ((((*(_BYTE *)(v60
                                         + ((71
                                                            * *((_BYTE *)&STACK[0x2920]
                                                              + (LODWORD(STACK[0x1240])
                                                                             - 1306
                                                                             * ((3288643
                                                                               * (unint64_t)LODWORD(STACK[0x1240])) >> 32)))) ^ 0xB1u)
                                         + 22623)
                              - 84) ^ 0x29)
                            - 107) ^ LOBYTE(STACK[0x13D0]))) ^ 0xFDu);
  LODWORD(v230) = (*(unsigned __int8 *)(v230 + 40108) >> 7) | (2 * *(unsigned __int8 *)(v230 + 40108));
  LODWORD(v230) = v230 ^ (v230 >> 6) ^ (v230 >> 4) ^ 0xFFFFFFD7;
  LODWORD(v207) = (v230 >> 2) | ((_DWORD)v230 << 6);
  LODWORD(v230) = ((71 * (v204 ^ LODWORD(STACK[0x1380]) ^ v87 ^ LODWORD(STACK[0x1760]))) ^ 0xB1)
                + 737346415;
  LODWORD(v194) = 2 * (v230 ^ 0xF47D14C3);
  v231 = (v194 ^ 0x40800066) & (v230 ^ 0xF47D14C3);
  LODWORD(v194) = (4 * (v194 & 0x32 ^ 0x4011 ^ v231)) & 0x20704030 ^ 0x20304033 ^ ((4 * (v194 & 0x32 ^ 0x4011 ^ v231)) ^ 0x81C100CC) & (v194 & 0x32 ^ 0x4011 ^ v231);
  LODWORD(v167) = (16 * v194) & 0x20704030 ^ 0x20704003 ^ ((16 * v194) ^ 0x7040330) & v194;
  v232 = (2 * (v230 & 0x104F0)) & 0x20 ^ (v230 & 0x104F0 | 2) ^ (2 * (v230 & 0x104F0)) & (v230 ^ 0xF47D14C3);
  v233 = (v231 & 0xC17C0 & (4 * v232) ^ v232 | 0x20704001) ^ (16 * (v231 & 0xC17C0 & (4 * v232) ^ v232)) & 0x20704030 ^ ((16 * (v231 & 0xC17C0 & (4 * v232) ^ v232)) ^ 0x20) & v194 ^ 0x10;
  v234 = (v233 << 8) & 0x20704000 ^ v233 ^ ((v233 << 8) ^ 0x70403300) & v167;
  LODWORD(v230) = v230 ^ (2
                        * ((v234 << 16) & 0x20700000 ^ v234 ^ ((v234 << 16) ^ 0x40330000) & (((_DWORD)v167 << 8) & 0x20700000 ^ (((_DWORD)v167 << 8) ^ 0x70400000) & v167 ^ 0x300000)));
  v235 = STACK[0x1820];
  v236 = ((STACK[0x1820] & 8) + (STACK[0x1820] & 0x4E ^ 0xFFFFFFFB) + (STACK[0x1820] & 8 | 0x109EC676) + 1) ^ 0x931C3918;
  v237 = -41219 - LODWORD(STACK[0x1688]);
  LODWORD(STACK[0x1688]) = v237;
  LODWORD(v230) = v207 ^ (((*(unsigned __int8 *)(v60 + (v230 ^ 0xD40DD496)) - 84) ^ 0x29) - 107);
  LODWORD(v230) = *(unsigned __int8 *)(v60
                                     + ((-1290280216 - v236 + ((2 * v236) | 0x99D039FA) + 27) ^ 0xCF6AE39D | v237 & 0x104E)
                                     + (unint64_t)(v230 ^ 0xCFu)) ^ v230 ^ 0xD;
  v238 = LODWORD(STACK[0x1738]) ^ v153;
  LODWORD(v194) = *(unsigned __int8 *)(v60 + (v238 ^ 0xCFu) + 4174);
  LODWORD(STACK[0x15CC]) = 63 * v230;
  LODWORD(v194) = 63 * (v238 ^ 0xD ^ v194);
  LODWORD(v230) = 385 * LODWORD(STACK[0x16F0]) - 267959402;
  v239 = ((2 * (v230 ^ 0x9B5A83D4)) ^ 0x29447F7C) & (v230 ^ 0x9B5A83D4) ^ (2 * (v230 ^ 0x9B5A83D4)) & 0x94A23FBE;
  LODWORD(v59) = ((4 * (v239 ^ 0x94A20082)) ^ 0x5288FEF8) & (v239 ^ 0x94A20082) ^ (4 * (v239 ^ 0x94A20082)) & 0x94A23FBC;
  v240 = ((16 * (v59 ^ 0x84220106)) ^ 0x4A23FBE0) & (v59 ^ 0x84220106) ^ (16 * (v59 ^ 0x84220106)) & 0x94A23FB0;
  LODWORD(v210) = (v230 ^ 0x9B5ABB40) & (2 * (v230 & 0x8BC6A)) ^ v230 & 0x8BC6A;
  v241 = (v59 ^ 0x10803EA6) & (16 * ((v239 ^ 0x94803338) & (4 * v210) ^ v210)) ^ (v239 ^ 0x94803338) & (4 * v210) ^ v210;
  v242 = v241 ^ 0x94A23FBE ^ (v240 ^ 0x223B1E) & (v241 << 8);
  v243 = v230 ^ (2
                             * ((v242 << 16) & 0x14A20000 ^ v242 ^ ((v242 << 16) ^ 0x3FBE0000) & (((v240 ^ 0x9480041E) << 8) & 0x94A20000 ^ 0x14800000 ^ (((v240 ^ 0x9480041E) << 8) ^ 0x223F0000) & (v240 ^ 0x9480041E)))) ^ 0x82D55771;
  v244 = 0x322E42A57083BALL
       * (((v243 ^ 0xC9031239FB8611FDLL) + 0x36FCEDC60479EE03) ^ ((v243 ^ 0xEE1E8E0F93E1ECBALL) + 0x11E171F06C1E1346) ^ ((v243 ^ 0x271D9C36E54A6920) - 0x271D9C36E54A6920))
       - 0x4DFEA6108F7E967CLL;
  v245 = ((2 * (v244 ^ 0x56925C074065BCE5)) ^ 0xDAA317BB0BF1456ELL) & (v244 ^ 0x56925C074065BCE5) ^ (2 * (v244 ^ 0x56925C074065BCE5)) & 0x6D518BDD85F8A2B6;
  v246 = ((4 * (v245 ^ 0x255088448408A291)) ^ 0xB5462F7617E28ADCLL) & (v245 ^ 0x255088448408A291) ^ (4 * (v245 ^ 0x255088448408A291)) & 0x6D518BDD85F8A2B4;
  v247 = ((16 * (v246 ^ 0x4811808980182023)) ^ 0xD518BDD85F8A2B70) & (v246 ^ 0x4811808980182023) ^ (16 * (v246 ^ 0x4811808980182023)) & 0x6D518BDD85F8A2B0;
  v248 = (((v247 ^ 0x2841020580708087) << 8) ^ 0x518BDD85F8A2B700) & (v247 ^ 0x2841020580708087) ^ ((v247 ^ 0x2841020580708087) << 8) & 0x6D518BDD85F8A200;
  v249 = (v244 ^ 0x3393D792C15D9C41) & (2 * (v244 & 0x3BC3D7DAC59D1E52)) ^ v244 & 0x3BC3D7DAC59D1E52;
  v250 = (v246 ^ 0x25400B5405E08280) & (16 * ((v245 ^ 0x4801039900F00000) & (4 * v249) ^ v249)) ^ (v245 ^ 0x4801039900F00000) & (4 * v249) ^ v249;
  v251 = (v247 ^ 0x451089D805882200) & (v250 << 8) ^ v250 ^ 0x6D518BDD85F8A2B7 ^ (v248 ^ 0x4101898580A00000) & (((v247 ^ 0x451089D805882200) & (v250 << 8) ^ v250) << 16);
  v252 = v244 ^ (2
               * ((v251 << 32) & 0x6D518BDD00000000 ^ v251 ^ ((v251 << 32) ^ 0x5F8A2B700000000) & (((v248 ^ 0x2C500258055800B7) << 16) & 0x6D518BDD00000000 ^ 0x64000A0500000000 ^ (((v248 ^ 0x2C500258055800B7) << 16) ^ 0xBDD85F800000000) & (v248 ^ 0x2C500258055800B7))));
  v253 = ((v252 ^ 0x37AFD95474ADF182) + 0x61B2BC9739877A0BLL) ^ ((v252 ^ 0xC94C0C70BD450D5FLL) - 0x60AE964C0F907928);
  LODWORD(v252) = __CFADD__(1306 * (v253 ^ ((v252 ^ 0x1522106F0784A7E1) + 0x433F75AC4AAE2C6ALL)), 0x6875079248BB449ELL)+ (((v253 ^ ((v252 ^ 0x1522106F0784A7E1) + 0x433F75AC4AAE2C6ALL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v252 ^ 0x37AFD95474ADF182, 0x61B2BC9739877A0BLL) - 1) ^ (__CFADD__(v252 ^ 0xC94C0C70BD450D5FLL, 0x9F5169B3F06F86D8)- 1) ^ (__CFADD__(v252 ^ 0x1522106F0784A7E1, 0x433F75AC4AAE2C6ALL)- 1))+ 2021781550;
  LODWORD(v253) = ((2 * (v252 ^ 0x8A521D42)) ^ 0x1A5818C2) & (v252 ^ 0x8A521D42) ^ (2 * (v252 ^ 0x8A521D42)) & 0xD2C0C60;
  LODWORD(v246) = ((4 * (v253 ^ 0x5240421)) ^ 0x34B03184) & (v253 ^ 0x5240421) ^ (4 * (v253 ^ 0x5240421)) & 0xD2C0C60;
  LODWORD(v247) = (16 * (v246 ^ 0x90C0C61)) & 0xD2C0C60 ^ 0xD2C0861 ^ ((16 * (v246 ^ 0x90C0C61)) ^ 0xD2C0C610) & (v246 ^ 0x90C0C61);
  LODWORD(v248) = (v252 ^ 0x867E1D02) & (2 * (v252 & 0x877E1123)) ^ v252 & 0x877E1123;
  LODWORD(v253) = (v253 ^ 0x80C0821) & (4 * v248) ^ v248 ^ 0xD2C0C61 ^ (v246 ^ 0x4200001) & (16
                                                                                           * ((v253 ^ 0x80C0821) & (4 * v248) ^ v248));
  LODWORD(v253) = ((_DWORD)v253 << 8) & 0xD2C0C00 ^ v253 ^ (((_DWORD)v253 << 8) ^ 0x2C0C6100) & v247;
  LODWORD(v246) = *((unsigned __int8 *)&STACK[0x2920]
                  + (v252 ^ (2
                                         * (((_DWORD)v253 << 16) & 0xD2C0000 ^ v253 ^ (((_DWORD)v253 << 16) ^ 0xC610000) & (((_DWORD)v247 << 8) & 0xD2C0000 ^ 0x1200000 ^ (((_DWORD)v247 << 8) ^ 0x2C0C0000) & v247))) ^ 0x9D7E09E1));
  LODWORD(v252) = 71 * (v194 ^ v246);
  LODWORD(v253) = *(unsigned __int8 *)(v60 + v252 + 22881);
  LODWORD(STACK[0x1760]) = (v205 >> 3) | (32 * v205);
  LODWORD(v252) = 71 * (((v253 ^ v252 ^ 0xFFFFFFA5) - 107) ^ v221[238]);
  LODWORD(v253) = v252 + 967623902;
  LODWORD(v248) = (2 * (v253 ^ 0x4D5541B)) & 0x98 ^ 0x4088 ^ ((2 * (v253 ^ 0x4D5541B)) ^ 0x5098130) & (v253 ^ 0x4D5541B);
  LODWORD(v210) = (4 * v248) & 0xC286C098 ^ 0xC084C098 ^ ((4 * v248) ^ 0xA1B0260) & v248;
  LODWORD(v249) = (16 * v210) & 0xC286C090 ^ 0xC282C018 ^ ((16 * v210) ^ 0x286C0980) & v210;
  LODWORD(v194) = ((2 * ((v252 - 15138) & 0x483 ^ 0xC2864098)) ^ 0x5098130) & (v253 ^ 0x4D5541B) ^ (v252 - 15138) & 0x483 ^ 0xC2864098;
  LODWORD(v194) = (4 * v194) & 0xC286C098 ^ v194 & 0xC5FDD5FF ^ ((4 * v194) ^ 0xA1B0260) & v248;
  LODWORD(v194) = (16 * v194) & 0xC286C090 ^ v194 ^ ((16 * v194) ^ 0x286C0980) & v210;
  LODWORD(v194) = v194 ^ ((_DWORD)v194 << 8) & 0xC286C000 ^ (((_DWORD)v194 << 8) ^ 0x82C01800) & v249 ^ 0x82840080;
  LODWORD(v202) = (*(unsigned __int8 *)(v60
                                      + (v253 ^ (2
                                                             * (((_DWORD)v194 << 16) & 0x42860000 ^ v194 ^ (((_DWORD)v194 << 16) ^ 0x40980000) & ((((_DWORD)v249 << 8) ^ 0x86C00000) & v249 ^ 0x42860000))) ^ 0xC25E15B3)) ^ v252 ^ 0xFFFFFFA5)
                - 107;
  LODWORD(STACK[0x1738]) = v202;
  LODWORD(v252) = 385 * v202 + 1968849407;
  LODWORD(v253) = ((2 * (v252 ^ 0x7052FB0A)) ^ 0x50E8A16) & (v252 ^ 0x7052FB0A) ^ (2 * (v252 ^ 0x7052FB0A)) & 0xA17450A;
  LODWORD(v194) = ((4 * (v253 ^ 0xA114509)) ^ 0x6BDD142C) & (v253 ^ 0xA114509) ^ (4 * (v253 ^ 0xA114509)) & 0x7AF74508;
  LODWORD(v248) = ((16 * (v194 ^ 0x10224103)) ^ 0x2F7450B0) & (v194 ^ 0x10224103) ^ (16 * (v194 ^ 0x10224103)) & 0x7AF74500;
  LODWORD(v249) = (v252 ^ 0x7051BF08) & (2 * (v252 & 0x5BE01)) ^ v252 & 0x5BE01;
  LODWORD(v253) = (v194 ^ 0xEAD50400) & (16 * ((v253 ^ 0xA260500) & (4 * v249) ^ v249)) ^ (v253 ^ 0xA260500) & (4 * v249) ^ v249;
  LODWORD(v253) = v253 ^ 0xFAF7450B ^ (v248 ^ 0xAA744000) & ((_DWORD)v253 << 8);
  v254 = v252 ^ (2
                             * (((_DWORD)v253 << 16) & 0x7AF70000 ^ v253 ^ (((_DWORD)v253 << 16) ^ 0x450B0000) & (((v248 ^ 0x5083050B) << 8) & 0x7AF70000 ^ 0x8B20000 ^ (((v248 ^ 0x5083050B) << 8) ^ 0x77450000) & (v248 ^ 0x5083050B)))) ^ 0x7260A070;
  v255 = 0x322E42A57083BALL
       * (((v254 ^ 0xB539C3187E84CCE5) + 0x4AC63CE7817B331BLL) ^ ((v254 ^ 0x12EC948C500204A0) - 0x12EC948C500204A0) ^ ((v254 ^ 0xA7D55794A3AB5C22) + 0x582AA86B5C54A3DELL))
       + 0x63946FD781D509B2;
  v256 = ((2 * (v255 ^ 0xD049430C0905514BLL)) ^ 0xB4F305FD7A985EDELL) & (v255 ^ 0xD049430C0905514BLL) ^ (2 * (v255 ^ 0xD049430C0905514BLL)) & 0x5A7982FEBD4C2F6ELL;
  v257 = ((4 * (v256 ^ 0x4A08820285442121)) ^ 0x69E60BFAF530BDBCLL) & (v256 ^ 0x4A08820285442121) ^ (4 * (v256 ^ 0x4A08820285442121)) & 0x5A7982FEBD4C2F6CLL;
  v258 = ((16 * (v257 ^ 0x12198004084C0243)) ^ 0xA7982FEBD4C2F6F0) & (v257 ^ 0x12198004084C0243) ^ (16 * (v257 ^ 0x12198004084C0243)) & 0x5A7982FEBD4C2F60;
  v259 = (((v258 ^ 0x58618014290C090FLL) << 8) ^ 0x7982FEBD4C2F6F00) & (v258 ^ 0x58618014290C090FLL) ^ ((v258 ^ 0x58618014290C090FLL) << 8) & 0x5A7982FEBD4C2F00;
  v260 = (v255 ^ 0xC028C1E821057D03) & (2 * (v255 & 0x8A30C1F2B4497E24)) ^ v255 & 0x8A30C1F2B4497E24;
  v261 = (v257 ^ 0x486002FAB5002D20) & (16 * ((v256 ^ 0x104100DC30080800) & (4 * v260) ^ v260)) ^ (v256 ^ 0x104100DC30080800) & (4 * v260) ^ v260;
  v262 = (v258 ^ 0x21802EA94402600) & (v261 << 8) ^ v261 ^ 0x5A7982FEBD4C2F6FLL ^ (v259 ^ 0x580082BC0C0C0000) & (((v258 ^ 0x21802EA94402600) & (v261 << 8) ^ v261) << 16);
  v263 = v255 ^ (2
               * ((v262 << 32) & 0x5A7982FE00000000 ^ v262 ^ ((v262 << 32) ^ 0x3D4C2F6F00000000) & (((v259 ^ 0x2790042B140006FLL) << 16) & 0x5A7982FE00000000 ^ 0x580102B200000000 ^ (((v259 ^ 0x2790042B140006FLL) << 16) ^ 0x2FEBD4C00000000) & (v259 ^ 0x2790042B140006FLL))));
  LODWORD(v258) = (__CFADD__(v263 ^ 0xEB653151F88EDEE7, 0xA480A768AEAB5303) - 1) ^ (__CFADD__(v263 ^ 0x4DBFE3F8B06717D2, 0x25A75C1E6429A38)- 1);
  v264 = ((v263 ^ 0xEB653151F88EDEE7) - 0x5B7F58975154ACFDLL) ^ ((v263 ^ 0x4DBFE3F8B06717D2) + 0x25A75C1E6429A38);
  v263 ^= 0xA889127A8638E9CFLL;
  v201 = __CFADD__(v263, 0xE76C8443D01D642BLL);
  v265 = v264 ^ (v263 - 0x18937BBC2FE29BD5);
  LODWORD(v257) = (((unint64_t)v265 * (unsigned __int128)0x51AuLL) >> 64) + 1306 * (v258 ^ (v201 - 1));
  v201 = __CFADD__(1306 * v265, 0xC3C8972FAFC4CAC0);
  LODWORD(v265) = 385 * LODWORD(STACK[0x17EC]) + 1957523984;
  LODWORD(v258) = (2 * (v265 ^ 0xB36E49F9)) & 0x804C408 ^ 0x8044409 ^ ((2 * (v265 ^ 0xB36E49F9)) ^ 0x40418812) & (v265 ^ 0xB36E49F9);
  LODWORD(v259) = (4 * v258) & 0x383CC408 ^ 0x180CC409 ^ ((4 * v258) ^ 0xE0F31024) & v258;
  LODWORD(v249) = (16 * v259) & 0x383CC400 ^ 0x38308409 ^ ((16 * v259) ^ 0x83CC4090) & v259;
  LODWORD(v264) = (v265 & 0x28DF0 | 0x10380000 | (2 * (v265 & 0x28DF0)) & 0x40000) ^ (2 * (v265 & 0x28DF0)) & (v265 ^ 0xB36E49F9);
  LODWORD(v264) = (4 * v264) & 0x3C4400 ^ v264 ^ v258 & 0x1E7FC0 & (4 * v264);
  LODWORD(v264) = v264 ^ (16 * v264) & 0x383CC400 ^ ((16 * v264) ^ 0x1800000) & v259 ^ 0x2824C409;
  LODWORD(v264) = ((_DWORD)v264 << 8) & 0x383CC400 ^ v264 ^ (((_DWORD)v264 << 8) ^ 0x3CC40900) & v249;
  v266 = v265 ^ (2
                             * (((_DWORD)v264 << 16) & 0x383C0000 ^ v264 ^ (((_DWORD)v264 << 16) ^ 0x44090000) & (((_DWORD)v249 << 8) & 0x383C0000 ^ (((_DWORD)v249 << 8) ^ 0x3CC40000) & v249 ^ 0x380000))) ^ 0x61E9185;
  v267 = 0x322E42A57083BALL
       * (((v266 ^ 0xE11B7195CE5090C7) + 0x1EE48E6A31AF6F39) ^ ((v266 ^ 0x3F3D5E11FBDCEB4ALL) - 0x3F3D5E11FBDCEB4ALL) ^ ((v266 ^ 0xDE262F84B8A1EFEALL) + 0x21D9D07B475E1016))
       - 0x141D5567FC750D4ELL;
  v268 = ((2 * (v267 ^ 0x15AD9F411598D96FLL)) ^ 0x289E30E64E169896) & (v267 ^ 0x15AD9F411598D96FLL) ^ (2 * (v267 ^ 0x15AD9F411598D96FLL)) & 0x144F1873270B4C4ALL;
  v269 = ((4 * (v268 ^ 0x1441081121094449)) ^ 0x513C61CC9C2D312CLL) & (v268 ^ 0x1441081121094449) ^ (4 * (v268 ^ 0x1441081121094449)) & 0x144F1873270B4C48;
  v270 = ((16 * (v269 ^ 0x443183323024C43)) ^ 0x44F1873270B4C4B0) & (v269 ^ 0x443183323024C43) ^ (16 * (v269 ^ 0x443183323024C43)) & 0x144F1873270B4C40;
  v271 = (((v270 ^ 0x100E1841070B084BLL) << 8) ^ 0x4F1873270B4C4B00) & (v270 ^ 0x100E1841070B084BLL) ^ ((v270 ^ 0x100E1841070B084BLL) << 8) & 0x144F1873270B4C00;
  v272 = (v267 ^ 0x15E89721309BD127) & (2 * (v267 & 0x1E2873232939524)) ^ v267 & 0x1E2873232939524;
  v273 = (v269 ^ 0x100C004004090000) & (16 * ((v268 ^ 0xE104006020800) & (4 * v272) ^ v272)) ^ (v268 ^ 0xE104006020800) & (4 * v272) ^ v272;
  v274 = (v270 ^ 0x441003220004400) & (v273 << 8) ^ v273 ^ 0x144F1873270B4C4BLL ^ (v271 ^ 0x408102303080000) & (((v270 ^ 0x441003220004400) & (v273 << 8) ^ v273) << 16);
  v275 = v267 ^ (2
               * ((v274 << 32) & 0x144F187300000000 ^ v274 ^ ((v274 << 32) ^ 0x270B4C4B00000000) & (((v271 ^ 0x104708502403044BLL) << 16) & 0x144F187300000000 ^ 0x40C187000000000 ^ (((v271 ^ 0x104708502403044BLL) << 16) ^ 0x1873270B00000000) & (v271 ^ 0x104708502403044BLL))));
  LODWORD(STACK[0x1660]) = v201 + (_DWORD)v257 + 1996950946;
  v276 = ((v275 ^ 0x78438AD8A2F17335) + 0xD97CA46407159CFLL) ^ ((v275 ^ 0x4FDC0FBDDBCEFE41) + 0x3A084F23394ED4BBLL);
  LODWORD(v275) = __CFADD__(1306 * (v276 ^ ((v275 ^ 0x16F5223705BA80C6) + 0x632162A9E73AAA3ELL)), 0xAA157621D9B5907CLL)+ (((v276 ^ ((v275 ^ 0x16F5223705BA80C6uLL) + 0x632162A9E73AAA3ELL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v275 ^ 0x78438AD8A2F17335, 0xD97CA46407159CFLL) - 1) ^ (__CFADD__(v275 ^ 0x4FDC0FBDDBCEFE41, 0x3A084F23394ED4BBLL)- 1) ^ (__CFADD__(v275 ^ 0x16F5223705BA80C6, 0x632162A9E73AAA3ELL)- 1))+ 1687372259;
  LODWORD(v276) = ((2 * (v275 ^ 0x8B1E448D)) ^ 0x20E50A16) & (v275 ^ 0x8B1E448D) ^ (2 * (v275 ^ 0x8B1E448D)) & 0x1072850A;
  LODWORD(v257) = ((4 * (v276 ^ 0x10128509)) ^ 0x41CA142C) & (v276 ^ 0x10128509) ^ (4 * (v276 ^ 0x10128509)) & 0x10728508;
  LODWORD(v269) = ((16 * (v257 ^ 0x10308103)) ^ 0x72850B0) & (v257 ^ 0x10308103) ^ (16 * (v257 ^ 0x10308103)) & 0x10728500;
  LODWORD(v271) = (v275 ^ 0x9B4EC585) & (2 * (v275 & 0x9B6CC186)) ^ v275 & 0x9B6CC186;
  LODWORD(v276) = (v257 ^ 0x420403) & (16 * ((v276 ^ 0x608101) & (4 * v271) ^ v271)) ^ (v276 ^ 0x608101) & (4 * v271) ^ v271;
  LODWORD(v276) = v276 ^ 0x1072850B ^ (v269 ^ 0x20000B) & ((_DWORD)v276 << 8);
  LODWORD(STACK[0x1560]) = v275 ^ 0xBB8DCB90 ^ (2
                                              * (((_DWORD)v276 << 16) & 0x10720000 ^ v276 ^ (((_DWORD)v276 << 16) ^ 0x50B0000) & (((v269 ^ 0x1052850B) << 8) & 0x10720000 ^ 0x720000 ^ (((v269 ^ 0x1052850B) << 8) ^ 0x72850000) & (v269 ^ 0x1052850B))));
  LODWORD(v247) = v221[106] ^ LODWORD(STACK[0x11F8]);
  LODWORD(STACK[0x15E4]) = v247;
  LODWORD(STACK[0x1554]) = 385 * LODWORD(STACK[0x1680])
                         - 1306
                         * ((3288643 * (unint64_t)(385 * LODWORD(STACK[0x1680]))) >> 32);
  LODWORD(v275) = LODWORD(STACK[0x1770]) ^ LODWORD(STACK[0x1780]) ^ v217 ^ (((*(unsigned __int8 *)(v60
                                                                                                 + ((((71 * v221[125]) & 0xB1 ^ 0xB1) + ((71 * v221[125]) & 0xB1)) ^ (71 * v221[125]))
                                                                                                 + 22623)
                                                                            - 84) ^ 0x29)
                                                                          - 107);
  LOBYTE(v269) = v182;
  LODWORD(v272) = STACK[0x15B0];
  LODWORD(v217) = ((71 * (v272 ^ v182)) ^ 0xFFFFFFA5 ^ *(unsigned __int8 *)(v60
                                                                          + (71 * (v272 ^ v182))
                                                                          + 22881))
                - 107;
  LOBYTE(v182) = v223;
  LOBYTE(v276) = *(_BYTE *)(v60 + (v235 ^ 0xAB48B18B));
  LODWORD(v168) = v275 ^ LODWORD(STACK[0x1898]) ^ ((*(unsigned __int8 *)(v60
                                                                       + (71 * (v223 ^ v217))
                                                                       + 22881) ^ (71 * (v223 ^ v217)) ^ 0xFFFFFFA5)
                                                 - 107);
  LODWORD(STACK[0x16F0]) = v168;
  LOBYTE(v205) = STACK[0x1380];
  LOBYTE(v235) = STACK[0x1340];
  LOBYTE(v217) = v223 ^ v203 ^ v269 ^ v235 ^ v207 ^ (63
                                                   * (*(_BYTE *)(v60
                                                               + (v205 ^ 0x12u ^ (63 * (v276 ^ 9)))
                                                               + 41218) ^ 9));
  LODWORD(v269) = STACK[0x17C0];
  LODWORD(v202) = LODWORD(STACK[0x1790]) ^ v246 ^ v221[85] ^ LODWORD(STACK[0x17C0]);
  LODWORD(STACK[0x1680]) = v202;
  LOBYTE(v217) = v217 ^ v202;
  LOBYTE(v202) = STACK[0x1350];
  LODWORD(v276) = ((71 * (v202 ^ LODWORD(STACK[0x1368]))) ^ 0xB1) + 870318273;
  LODWORD(v257) = ((2 * (v276 ^ 0x58718260)) ^ 0x288183FC) & (v276 ^ 0x58718260) ^ (2 * (v276 ^ 0x58718260)) & 0x1FE;
  LODWORD(v246) = ((4 * (v257 ^ 0x515002)) ^ 0x514757F8) & (v257 ^ 0x515002) ^ (4 * (v257 ^ 0x515002)) & 0x9451D5FC;
  LODWORD(v207) = ((16 * (v246 ^ 0x84108006)) ^ 0x451D5FE0) & (v246 ^ 0x84108006) ^ (16 * (v246 ^ 0x84108006)) & 0x9451D5F0;
  LODWORD(v271) = (v276 ^ 0x5831835C) & (2 * (v276 & 0x20019E)) ^ v276 & 0x20019E;
  LODWORD(v257) = (v246 ^ 0x104155E0) & (16 * ((v257 ^ 0x5154FA) & (4 * v271) ^ v271)) ^ (v257 ^ 0x5154FA) & (4 * v271) ^ v271;
  LODWORD(v257) = v257 ^ 0x9451D5FE ^ (v207 ^ 0x4115500) & ((_DWORD)v257 << 8);
  LODWORD(v246) = v276 ^ (2
                        * (((_DWORD)v257 << 16) & 0x14510000 ^ v257 ^ (((_DWORD)v257 << 16) ^ 0x55FE0000) & (((v207 ^ 0x9040801E) << 8) & 0x14510000 ^ (((v207 ^ 0x9040801E) << 8) ^ 0x51D50000) & (v207 ^ 0x9040801E) ^ 0x4000000)));
  LODWORD(v276) = 385 * v222 - 252270031;
  LODWORD(v257) = ((2 * (v276 ^ 0x2A7038B4)) ^ 0x4A82DAF6) & (v276 ^ 0x2A7038B4) ^ (2 * (v276 ^ 0x2A7038B4)) & 0x25196D7A;
  LODWORD(v207) = ((4 * (v257 ^ 0x25092509)) ^ 0x95E5B5EC) & (v257 ^ 0x25092509) ^ (4 * (v257 ^ 0x25092509)) & 0x25796D78;
  LODWORD(v270) = ((16 * (v207 ^ 0x20184813)) ^ 0x5796D7B0) & (v207 ^ 0x20184813) ^ (16 * (v207 ^ 0x20184813)) & 0x25796D70;
  v277 = (v276 ^ 0x2A6011AE) & (2 * (v276 & 0x955CF)) ^ v276 & 0x955CF;
  LODWORD(v257) = (v207 ^ 0x5612560) & (16 * ((v257 ^ 0x604870) & (4 * v277) ^ v277)) ^ (v257 ^ 0x604870) & (4 * v277) ^ v277;
  LODWORD(v257) = v257 ^ 0x25796D7B ^ (v270 ^ 0x510454B) & ((_DWORD)v257 << 8);
  v278 = v276 ^ (2
                             * (((_DWORD)v257 << 16) & 0x25790000 ^ v257 ^ (((_DWORD)v257 << 16) ^ 0x6D7B0000) & (((v270 ^ 0x2069284B) << 8) & 0x25790000 ^ 0x4100000 ^ (((v270 ^ 0x2069284B) << 8) ^ 0x796D0000) & (v270 ^ 0x2069284B)))) ^ 0x82241B5E;
  v279 = 0x322E42A57083BALL
       * (((v278 ^ 0x6344D9094153ABD0) - 0x6344D9094153ABD0) ^ ((v278 ^ 0x2C7EEA75A46FC61DLL) - 0x2C7EEA75A46FC61DLL) ^ ((v278 ^ 0x4F3A337C6811F9AALL) - 0x4F3A337C6811F9AALL))
       + 0x79ED7FB98C6D0B9DLL;
  v280 = (2 * (v279 ^ 0xA4BCD202B626C07ELL)) & 0xD76B60121F97BC46 ^ 0x5129201200908441 ^ ((2
                                                                                             * (v279 ^ 0xA4BCD202B626C07ELL)) ^ 0xAED6C0243F2F788ELL) & (v279 ^ 0xA4BCD202B626C07ELL);
  v281 = (4 * v280) & 0xD76B60121F97BC44 ^ 0x8242601201810C43 ^ ((4 * v280) ^ 0x5DAD80487E5EF11CLL) & v280;
  v282 = (16 * v281) & 0xD76B60121F97BC40 ^ 0x8149601206843807 ^ ((16 * v281) ^ 0x76B60121F97BC470) & v281;
  v283 = (v282 << 8) & 0xD76B60121F97BC00 ^ 0x940B60000803B847 ^ ((v282 << 8) ^ 0x6B60121F97BC4700) & v282;
  v284 = (2 * (v279 & 0x73D7B210A9B17C38)) & 0xC72B60001302B840 ^ v279 & 0x73D7B210A9B17C38 ^ ((2 * (v279 & 0x73D7B210A9B17C38)) | 2) & (v279 ^ 0xA4BCD202B626C07ELL);
  v285 = (4 * v284) & 0xD76B60121F97BC44 ^ v284 ^ ((4 * v284) ^ 0xC) & v280;
  v286 = (16 * v285) & 0xD76B60121F97BC40 ^ v285 ^ ((16 * v285) ^ 0x70) & v281;
  v287 = (v286 << 8) & 0xD76B60121F97BC00 ^ v286 ^ ((v286 << 8) ^ 0x4700) & v282;
  v288 = v287 ^ (v287 << 16) & 0xD76B60121F970000 ^ ((v287 << 16) ^ 0x4470000) & v283 ^ 0xD76B60121B90B800;
  v289 = v279 ^ (2
               * ((v288 << 32) & 0x576B601200000000 ^ v288 ^ ((v288 << 32) ^ 0x1F97BC4700000000) & ((v283 << 16) & 0x576B601200000000 ^ 0x1769600000000000 ^ ((v283 << 16) ^ 0x60121F9700000000) & v283)));
  v290 = ((v289 ^ 0x2DDB048D0E4852B2) - 0x4665448F26C7F12BLL) ^ ((v289 ^ 0x25F56DBAF4A9185ELL) - 0x4E4B2DB8DC26BBC7);
  LODWORD(v289) = __CFADD__(1306 * (v290 ^ ((v289 ^ 0xFB295B076C7F4E5BLL) + 0x6F68E4FABB0F123ELL)), 0x221096DDA60EE0ACLL)+ (((v290 ^ ((v289 ^ 0xFB295B076C7F4E5BLL) + 0x6F68E4FABB0F123ELL)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v289 ^ 0x2DDB048D0E4852B2, 0xB99ABB70D9380ED5) - 1) ^ (__CFADD__(v289 ^ 0x25F56DBAF4A9185ELL, 0xB1B4D24723D94439)- 1) ^ (__CFADD__(v289 ^ 0xFB295B076C7F4E5BLL, 0x6F68E4FABB0F123ELL)- 1))+ 483509311;
  LODWORD(v290) = ((2 * (v289 ^ 0xA332E206)) ^ 0x8039B994) & (v289 ^ 0xA332E206) ^ (2 * (v289 ^ 0xA332E206)) & 0x401CDCCA;
  LODWORD(v257) = ((4 * (v290 ^ 0x4004444A)) ^ 0x737328) & (v290 ^ 0x4004444A) ^ (4 * (v290 ^ 0x4004444A)) & 0x401CDCC8;
  v291 = ((16 * (v257 ^ 0x400C8CC2)) ^ 0x1CDCCA0) & (v257 ^ 0x400C8CC2) ^ (16 * (v257 ^ 0x400C8CC2)) & 0x401CDCC0;
  LODWORD(v281) = (v289 ^ 0xE32EBE8E) & (2 * (v289 & 0xE32E3ECC)) ^ v289 & 0xE32E3ECC;
  LODWORD(v290) = (v257 ^ 0x105002) & (16 * ((v290 ^ 0x189800) & (4 * v281) ^ v281)) ^ (v290 ^ 0x189800) & (4 * v281) ^ v281;
  LODWORD(v290) = v290 ^ 0x401CDCCA ^ (v291 ^ 0xCCC00) & ((_DWORD)v290 << 8);
  LODWORD(STACK[0x15AC]) = v289 ^ (2
                                 * (((_DWORD)v290 << 16) & 0x401C0000 ^ v290 ^ (((_DWORD)v290 << 16) ^ 0x5CCA0000) & (((v291 ^ 0x4010104A) << 8) & 0x401C0000 ^ (((v291 ^ 0x4010104A) << 8) ^ 0x1CDC0000) & (v291 ^ 0x4010104A) ^ 0x40000000)));
  LODWORD(v275) = 385 * v275
                - 1306 * ((3288643 * (unint64_t)(385 * v275)) >> 32);
  LODWORD(STACK[0x1780]) = v275 - 1926392729 - ((2 * v275) & 0x8CE);
  LODWORD(v289) = (v247 ^ LODWORD(STACK[0x1768])) + 1389822528;
  v292 = (2 * (v289 ^ 0x24777588)) & 0x240 ^ 0x241 ^ ((2 * (v289 ^ 0x24777588)) ^ 0x12A01482) & (v289 ^ 0x24777588);
  LODWORD(v280) = (4 * v292) & 0x895F8A40 ^ 0x88018241 ^ ((4 * v292) ^ 0x24202104) & v292;
  LODWORD(v281) = (16 * v280) & 0x895F8A40 ^ 0x8070A41 ^ ((16 * v280) ^ 0x95F8A410) & v280;
  LODWORD(v290) = (v289 & 0x1C9 | ((((unsigned __int16)(v289 & 0x1C9) >> 8) & 1) << 9) | 0x50000) ^ ((2 * (v289 & 0x1C9)) | 0x400) & (v289 ^ 0x24777588);
  LODWORD(v290) = (4 * v290) & 0x95F8A40 ^ v290 ^ ((4 * v290) ^ 0x140800) & v292;
  LODWORD(v290) = v290 ^ (16 * v290) & 0x95F8A40 ^ ((16 * v290) ^ 0x110A000) & v280 ^ 0x885E0041;
  LODWORD(v290) = ((_DWORD)v290 << 8) & 0x895F8A00 ^ v290 ^ (((_DWORD)v290 << 8) ^ 0x5F8A4100) & v281;
  LODWORD(v289) = v289 ^ (2
                        * (((_DWORD)v290 << 16) & 0x95F0000 ^ v290 ^ (((_DWORD)v290 << 16) ^ 0xA410000) & (((_DWORD)v281 << 8) & 0x95F0000 ^ 0x550000 ^ (((_DWORD)v281 << 8) ^ 0x5F8A0000) & v281)));
  LODWORD(v289) = 385
                * (((v289 ^ 0xF588F7F1) + 979072803) ^ ((v289 ^ 0xC4E51238) + 188125932) ^ ((v289 ^ 0x8C6C0E82)
                                                                                          + 1136627282))
                + 1368141543;
  LODWORD(v290) = v289 % 0x51A - 1926392729 - ((2 * (v289 % 0x51A)) & 0x8CE);
  LODWORD(v289) = (((2 * (v290 & 0x4B0 ^ 0x4B0)) & 0x33333333) - (v290 & 0x4B0 ^ 0x4B0) + 1906065251) ^ 0x3DBFBDF7;
  LODWORD(v289) = ((((2 * v289) & 0x5D2A8) - v289 + 2083853994) ^ 0xA87D301E | (((2 * (v290 & 0x4B0 ^ 0xB0)) & 0x60)
                                                                              - (v290 & 0x4B0 ^ 0xB0)
                                                                              + 1920) & 0x5F0 ^ 0x110)
                + STACK[0xC58]
                + 1737776473;
  LODWORD(v280) = v289 - 1926392729 - ((2 * v289) & 0x1A5B28CE);
  LODWORD(v281) = 385 * (LODWORD(STACK[0x1810]) ^ LODWORD(STACK[0x14D0])) + 80188923;
  LODWORD(v289) = ((2 * (v281 ^ 0x546337AA)) ^ 0x50A09C48) & (v281 ^ 0x546337AA) ^ (2 * (v281 ^ 0x546337AA)) & 0xA1584E24;
  v293 = ((4 * (v289 ^ 0xA1484224)) ^ 0xBD613890) & (v289 ^ 0xA1484224) ^ (4 * (v289 ^ 0xA1484224)) & 0xAF584E24;
  LODWORD(v282) = ((16 * (v293 ^ 0x2184624)) ^ 0xF584E240) & (v293 ^ 0x2184624) ^ (16 * (v293 ^ 0x2184624)) & 0xAF584E20;
  v294 = (v281 ^ 0x547375AE) & (2 * (v281 & 0xB798E)) ^ v281 & 0xB798E;
  LODWORD(v289) = (v293 ^ 0xAD400800) & (16 * ((v289 ^ 0xA1100C04) & (4 * v294) ^ v294)) ^ (v289 ^ 0xA1100C04) & (4 * v294) ^ v294;
  LODWORD(v289) = v289 ^ 0xAF584E24 ^ (v282 ^ 0xA5004200) & ((_DWORD)v289 << 8);
  v295 = ((_DWORD)v289 << 16) & 0x2F580000 ^ v289 ^ (((_DWORD)v289 << 16) ^ 0x4E240000) & (((v282 ^ 0xA580C24) << 8) & 0xAF580000 ^ 0x27100000 ^ (((v282 ^ 0xA580C24) << 8) ^ 0x584E0000) & (v282 ^ 0xA580C24));
  LODWORD(v217) = (v217 ^ v202) + 625278450;
  v296 = (2 * (v217 ^ 0xBB05AEFD)) & 0x2EA ^ 0xA2A ^ ((2 * (v217 ^ 0xBB05AEFD)) ^ 0x824151D4) & (v217 ^ 0xBB05AEFD);
  LODWORD(v282) = (4 * v296) & 0x61BEAAE8 ^ 0x61040042 ^ ((4 * v296) ^ 0x86400BA8) & v296;
  v297 = (16 * v282) & 0x61BEAAE0 ^ 0x6014004A ^ ((16 * v282) ^ 0x1BEAAEA0) & v282;
  LODWORD(v202) = (2 * (v217 & 0x417)) & (v217 ^ 0xBB05AEFD) ^ v217 & 0x417 ^ ((2 * (v217 & 0x417)) & 0xFFFB | 0x1200000);
  LODWORD(v202) = (4 * v202) & 0x61BEAAE8 ^ v202 ^ ((4 * v202) ^ 0x4000000) & v296;
  LODWORD(v202) = (16 * v202) & 0x61BEAAE0 ^ v202 ^ ((16 * v202) ^ 0x1A000000) & v282;
  LODWORD(v202) = v202 ^ ((_DWORD)v202 << 8) & 0x61BEAA00 ^ (((_DWORD)v202 << 8) ^ 0xA0000000) & v297 ^ 0x401EAAEA;
  LODWORD(v202) = v217 ^ (2
                        * (((_DWORD)v202 << 16) & 0x61BE0000 ^ v202 ^ (((_DWORD)v202 << 16) ^ 0x2AEA0000) & ((v297 << 8) & 0x61BE0000 ^ 0x41140000 ^ ((v297 << 8) ^ 0x3EAA0000) & v297)));
  LODWORD(v202) = 385
                * (((v202 ^ 0x17CD4A71) + 1032679467) ^ ((v202 ^ 0x43889667) + 1774758973) ^ ((v202 ^ 0xCD78DD5)
                                                                                            + 647477135))
                + 1368141543;
  LODWORD(STACK[0x1770]) = v202 % 0x51A - 1926392729 - ((2 * (v202 % 0x51A)) & 0x8CE);
  LODWORD(v202) = 779671706 * LODWORD(STACK[0x160C]) - 779671321 * LODWORD(STACK[0x1750]) - 234169384;
  v298 = ((2 * (v202 ^ 0xA9B9E97)) ^ 0xE139F9A0) & (v202 ^ 0xA9B9E97) ^ (2 * (v202 ^ 0xA9B9E97)) & 0x709CFCD0;
  LODWORD(v289) = ((4 * (v298 ^ 0x10840450)) ^ 0xC273F340) & (v298 ^ 0x10840450) ^ (4 * (v298 ^ 0x10840450)) & 0x709CFCD0;
  LODWORD(v60) = ((16 * (v289 ^ 0x308C0C90)) ^ 0x9CFCD00) & (v289 ^ 0x308C0C90) ^ (16 * (v289 ^ 0x308C0C90)) & 0x709CFCD0;
  LODWORD(v282) = (v202 ^ 0x7A975A17) & (2 * (v202 & 0x7A076247)) ^ v202 & 0x7A076247;
  v299 = (v289 ^ 0x4010F040) & (16 * ((v298 ^ 0x60189800) & (4 * v282) ^ v282)) ^ (v298 ^ 0x60189800) & (4 * v282) ^ v282;
  v300 = v299 ^ 0x709CFCD0 ^ (v60 ^ 0x8CCCD0) & (v299 << 8);
  v301 = v202 ^ (2
                             * ((v300 << 16) & 0x709C0000 ^ v300 ^ ((v300 << 16) ^ 0x7CD00000) & (((v60 ^ 0x701030D0) << 8) & 0x709C0000 ^ (((v60 ^ 0x701030D0) << 8) ^ 0x1CFC0000) & (v60 ^ 0x701030D0) ^ 0x60000000))) ^ 0xF7330F80;
  v302 = 0x322E42A57083BALL
       * (((v301 ^ 0x96CBE19A1E3F886FLL) + 0x69341E65E1C07791) ^ ((v301 ^ 0x52C8B94CF207FBB8) - 0x52C8B94CF207FBB8) ^ ((v301 ^ 0xC40358D66115E7B0) + 0x3BFCA7299EEA1850))
       - 0x1CA7B750DFAFDE2ALL;
  v303 = ((2 * (v302 ^ 0x219D5970F8B4D66DLL)) ^ 0x57E360D7DAF560DALL) & (v302 ^ 0x219D5970F8B4D66DLL) ^ (2 * (v302 ^ 0x219D5970F8B4D66DLL)) & 0x2BF1B06BED7AB06CLL;
  v304 = ((4 * (v303 ^ 0x28109028250A9025)) ^ 0xAFC6C1AFB5EAC1B4) & (v303 ^ 0x28109028250A9025) ^ (4 * (v303 ^ 0x28109028250A9025)) & 0x2BF1B06BED7AB06CLL;
  v305 = ((16 * (v304 ^ 0x31304048103049)) ^ 0xBF1B06BED7AB06D0) & (v304 ^ 0x31304048103049) ^ (16 * (v304 ^ 0x31304048103049)) & 0x2BF1B06BED7AB060;
  v306 = (((v305 ^ 0xE0B0412850B02DLL) << 8) ^ 0xF1B06BED7AB06D00) & (v305 ^ 0xE0B0412850B02DLL) ^ ((v305 ^ 0xE0B0412850B02DLL) << 8) & 0x2BF1B06BED7AB000;
  v307 = (v302 ^ 0x214CC952D1AC566DLL) & (2 * (v302 & 0xA6CE91B15CE6600)) ^ v302 & 0xA6CE91B15CE6600;
  v308 = (v304 ^ 0x2BC0802BA56A8020) & (16 * ((v303 ^ 0x3E12040C8702000) & (4 * v307) ^ v307)) ^ (v303 ^ 0x3E12040C8702000) & (4 * v307) ^ v307;
  v309 = (v305 ^ 0x2B11002AC52A0000) & (v308 << 8) ^ v308 ^ 0x2BF1B06BED7AB06DLL ^ (v306 ^ 0x21B0206968300000) & (((v305 ^ 0x2B11002AC52A0000) & (v308 << 8) ^ v308) << 16);
  v310 = v302 ^ (2
               * ((v309 << 32) & 0x2BF1B06B00000000 ^ v309 ^ ((v309 << 32) ^ 0x6D7AB06D00000000) & (((v306 ^ 0xA419002854A906DLL) << 16) & 0x2BF1B06B00000000 ^ 0xB90100100000000 ^ (((v306 ^ 0xA419002854A906DLL) << 16) ^ 0x306BED7A00000000) & (v306 ^ 0xA419002854A906DLL))));
  v311 = ((v310 ^ 0xD0A6642F9E11FF0ELL) - 0x4E0A946B8A6BFB01) ^ ((v310 ^ 0xCDF1D727BFA53623) - 0x535D2763ABDF322CLL);
  LODWORD(v310) = __CFADD__(1306 * (v311 ^ ((v310 ^ 0x12395A16EE8FCFF7) + 0x736A55AD050A3408)), 0x9835598289A872A2)+ (((v311 ^ ((v310 ^ 0x12395A16EE8FCFF7) + 0x736A55AD050A3408)) * (unsigned __int128)0x51AuLL) >> 64)+ 1306* ((__CFADD__(v310 ^ 0xD0A6642F9E11FF0ELL, 0xB1F56B94759404FFLL) - 1) ^ (__CFADD__(v310 ^ 0xCDF1D727BFA53623, 0xACA2D89C5420CDD4)- 1) ^ (__CFADD__(v310 ^ 0x12395A16EE8FCFF7, 0x736A55AD050A3408)- 1))+ 1711086166;
  LODWORD(v304) = ((2 * (v310 ^ 0x112EE340)) ^ 0x165817A2) & (v310 ^ 0x112EE340) ^ (2 * (v310 ^ 0x112EE340)) & 0x8B2C0BD0;
  LODWORD(v305) = ((4 * (v304 ^ 0x89240851)) ^ 0x2CB02F44) & (v304 ^ 0x89240851) ^ (4 * (v304 ^ 0x89240851)) & 0x8B2C0BD0;
  LODWORD(v306) = ((16 * (v305 ^ 0x830C0091)) ^ 0xB2C0BD10) & (v305 ^ 0x830C0091) ^ (16 * (v305 ^ 0x830C0091)) & 0x8B2C0BD0;
  LODWORD(v311) = ((2 * (v310 & 0x9A02E891)) & 0x40100 | v310 & 0x9A02E891) ^ (2 * (v310 & 0x9A02E891)) & (v310 ^ 0x112EE340);
  LODWORD(v311) = (v305 ^ 0x8200B41) & (16 * ((v304 ^ 0x1280A91) & (4 * v311) ^ v311)) ^ (v304 ^ 0x1280A91) & (4 * v311) ^ v311;
  LODWORD(v311) = v311 ^ 0x8B2C0BD1 ^ (v306 ^ 0x820009C1) & ((_DWORD)v311 << 8);
  LODWORD(v305) = v310 ^ (2
                        * (((_DWORD)v311 << 16) & 0xB2C0000 ^ v311 ^ (((_DWORD)v311 << 16) ^ 0xBD10000) & (((v306 ^ 0x92C02C1) << 8) & 0x8B2C0000 ^ 0x3240000 ^ (((v306 ^ 0x92C02C1) << 8) ^ 0x2C0B0000) & (v306 ^ 0x92C02C1))));
  v312 = STACK[0x18B8];
  LOBYTE(v206) = v235;
  LOBYTE(v246) = v182 ^ v235 ^ LODWORD(STACK[0x1710]) ^ (((*(_BYTE *)(STACK[0x18B8] + (v246 ^ 0xCC23FC62))
                                                         - 84) ^ 0x29)
                                                       - 107);
  LODWORD(v310) = STACK[0x12D8];
  v313 = LODWORD(STACK[0x15CC]) ^ LODWORD(STACK[0x12D8]);
  LODWORD(STACK[0x160C]) = v313;
  LOBYTE(v150) = LODWORD(STACK[0x1370]) ^ v272;
  LOBYTE(v311) = LODWORD(STACK[0x1370]) ^ v310;
  LODWORD(v310) = LODWORD(STACK[0x1644]) ^ LODWORD(STACK[0x17F0]);
  LODWORD(STACK[0x1584]) = v310;
  LOBYTE(v217) = STACK[0x12E0];
  LODWORD(v311) = ((((v168 & 0x45) + (v168 & 0x45 ^ 0x45) + (((v313 & 2 ^ 2) + (v313 & 2)) | 2))
                                   * (v311 ^ v205 ^ v217 ^ v310)) ^ 0xB1)
                + 1923035251;
  LODWORD(v235) = (2 * (v311 ^ 0x865C09F4)) & 0x218 ^ 0x10208 ^ ((2 * (v311 ^ 0x865C09F4)) ^ 0x14421830) & (v311 ^ 0x865C09F4);
  LODWORD(v168) = (4 * v235) & 0xB3D2E18 ^ 0x3090618 ^ ((4 * v235) ^ 0x24C0B860) & v235;
  LODWORD(v282) = (16 * v168) & 0xB3D2E10 ^ 0x82D0E18 ^ ((16 * v168) ^ 0xB3D2E180) & v168;
  LODWORD(v304) = (2 * (v311 & 0x1EC)) & 0xFE3F ^ v311 & 0x1EC ^ ((2 * (v311 & 0x1EC)) | 0x20000) & (v311 ^ 0x865C09F4);
  LODWORD(v304) = (4 * v304) & 0xB3D2E18 ^ v304 ^ ((4 * v304) ^ 0x48000) & v235;
  LODWORD(v304) = (16 * v304) & 0xB3D2E10 ^ v304 ^ ((16 * v304) ^ 0x520000) & v168;
  LODWORD(v304) = v304 ^ 0xA080E18 ^ ((_DWORD)v304 << 8) & 0xB3D2E00 ^ (((_DWORD)v304 << 8) ^ 0x15200000) & v282;
  LODWORD(v235) = v311 ^ 0x8F2B7BDC ^ (2
                                     * (((_DWORD)v304 << 16) & 0xB3D0000 ^ v304 ^ (((_DWORD)v304 << 16) ^ 0x2E180000) & (((_DWORD)v282 << 8) & 0xB3D0000 ^ 0x2110000 ^ (((_DWORD)v282 << 8) ^ 0x3D2E0000) & v282)));
  v314 = STACK[0x1468];
  LODWORD(v310) = *(unsigned __int8 *)(STACK[0x1468] + 156) ^ v269;
  LODWORD(STACK[0x1558]) = v310;
  LOBYTE(v221) = v217;
  LOBYTE(v304) = v217 ^ v182 ^ v310 ^ LODWORD(STACK[0x15F8]);
  v315 = v312;
  LOBYTE(v310) = 71
               * ((63 * (v150 ^ 0xD ^ *(_BYTE *)(v312 + (v150 ^ 0xCFu) + 4174))) ^ LODWORD(STACK[0x1898]));
  LODWORD(v195) = 385
                * (((v280 ^ 0x7FC1E46F) - 2143413359) ^ ((v280 ^ 0xFEBFA49D) + 20994915) ^ ((v280 ^ 0xC53D495)
                                                                                          - 206820501))
                + 1368141543;
  LODWORD(v168) = (LODWORD(STACK[0x1838]) ^ LODWORD(STACK[0x1798]) ^ ((*(_BYTE *)(v312
                                                                                                 + v310
                                                                                                 + 22881) ^ v310 ^ 0xA5)
                                                                                     - 107))
                + 52309428;
  LODWORD(v306) = ((2 * (v168 & 0x55)) & 0x78 | v168 & 0x55) ^ ((2 * (v168 & 0x55)) | 0x800) & (v168 ^ 0x66124369);
  LODWORD(v280) = (2 * (v168 ^ 0x66124369)) & 0x73C ^ 0x104 ^ ((2 * (v168 ^ 0x66124369)) ^ 0x25042E78) & (v168 ^ 0x66124369);
  LODWORD(v306) = (4 * v306) & 0x1AF3973C ^ v306 ^ (4 * v306) & v280;
  LODWORD(v280) = (4 * v280) & 0x9AF3973C ^ 0x9031830C ^ ((4 * v280) ^ 0x610C4CF0) & v280;
  LODWORD(v306) = (16 * v306) & 0x1AF39730 ^ v306 ^ ((16 * v306) ^ 0x14000) & v280;
  LODWORD(v280) = (16 * v280) & 0x9AF39730 ^ 0x10C2843C ^ ((16 * v280) ^ 0xAF3973C0) & v280;
  LODWORD(v306) = v306 ^ ((_DWORD)v306 << 8) & 0x1AF39700 ^ (((_DWORD)v306 << 8) ^ 0x1140000) & v280;
  LODWORD(v168) = v168 ^ (2
                        * (((v306 ^ 0x9AE2833C) << 16) & 0x1AF30000 ^ v306 ^ 0x9AE2833C ^ (((v306 ^ 0x9AE2833C) << 16) ^ 0x173C0000) & (((_DWORD)v280 << 8) & 0x1AF30000 ^ 0x8600000 ^ (((_DWORD)v280 << 8) ^ 0x73970000) & v280)));
  LODWORD(v306) = (385
                 * (((v168 ^ 0xF4D759D0) + 1801701478) ^ ((v168 ^ 0x277F7C76) - 1194594876) ^ ((v168 ^ 0x3ECEDF8B) - 1585820097))
                 + 1368141543)
                % 0x51A;
  LODWORD(v304) = *((unsigned __int8 *)&STACK[0x2920]
                  + (385 * v304
                                 + 200585
                                 - 1306
                                 * ((3288643 * (unint64_t)(385 * v304 + 200585)) >> 32))) ^ ((STACK[0x1834] & 0xD1 ^ 0x10) + ((246 - LODWORD(STACK[0x15D0])) & 0xD1));
  LODWORD(v168) = (v304 ^ 0x1E) + 808156050;
  LODWORD(v182) = (v168 ^ 0x227CB63F) & (2 * (v168 & 0x4BC)) ^ v168 & 0x4BC;
  LODWORD(v280) = (2 * (v168 ^ 0x227CBE07)) & 0xABA ^ 0x2A89 ^ ((2 * (v168 ^ 0x227CBE07)) ^ 0x12504576) & (v168 ^ 0x227CBE07);
  LODWORD(v182) = (4 * v182) & 0x22B0 ^ v182 ^ ((4 * v182) | 0xC000) & v280;
  LODWORD(v280) = (4 * v280) & 0x6DA82AB8 ^ 0x49080013 ^ ((4 * v280) ^ 0x36A0AAEC) & v280;
  LODWORD(v182) = (16 * v182) & 0x6DA82AB0 ^ v182 ^ ((16 * v182) ^ 0x30000) & v280;
  LODWORD(v280) = (16 * v280) & 0xEDA82AB0 ^ 0x2528000B ^ ((16 * v280) ^ 0x5A82ABB0) & v280;
  LODWORD(v182) = v182 ^ ((_DWORD)v182 << 8) & 0x6DA82A00 ^ (((_DWORD)v182 << 8) ^ 0x300000) & v280;
  v316 = v168 ^ (2
                             * (((v182 ^ 0xED881ABB) << 16) & 0x6DA80000 ^ v182 ^ 0xED881ABB ^ (((v182 ^ 0xED881ABB) << 16) ^ 0x2ABB0000) & (((_DWORD)v280 << 8) & 0x6DA80000 ^ 0x45800000 ^ (((_DWORD)v280 << 8) ^ 0xA82A0000) & v280)));
  STACK[0x15F8] = v316;
  LODWORD(v182) = v304 ^ 0xFFFFFFDC ^ *(unsigned __int8 *)(v312 + (v316 ^ 0x45D4C1CA));
  LODWORD(v304) = ((v221 ^ LODWORD(STACK[0x12F8]) ^ LODWORD(STACK[0x13F0]) ^ v206 ^ LODWORD(STACK[0x17BC]) ^ LODWORD(STACK[0x1738]) ^ *(_BYTE *)(v312 + (LODWORD(STACK[0x1760]) ^ 0x99u) + 4432)) ^ 0x38)
                + 428654564;
  LODWORD(v312) = ((2 * (v304 & 0x4225)) & 0xFC01 | v304 & 0x4225) ^ (2 * (v304 & 0x4225)) & (v304 ^ 0x24FF9C20);
  LODWORD(v168) = ((2 * (v304 ^ 0x24FF9C20)) ^ 0x5113C0A) & (v304 ^ 0x24FF9C20) ^ (2 * (v304 ^ 0x24FF9C20)) & 0xDE04;
  LODWORD(v312) = (v168 ^ 0x5A01) & (4 * v312) ^ v312;
  LODWORD(v168) = ((4 * (v168 ^ 0x4205)) ^ 0xA337814) & (v168 ^ 0x4205) ^ (4 * (v168 ^ 0x4205)) & 0xC28CDE04;
  LODWORD(v312) = (v168 ^ 0x2005801) & (16 * v312) ^ v312;
  LODWORD(v168) = ((16 * (v168 ^ 0xC08C8601)) ^ 0x28CDE050) & (v168 ^ 0xC08C8601) ^ (16 * (v168 ^ 0xC08C8601)) & 0xC28CDE00;
  LODWORD(v312) = v312 ^ 0xC28CDE05 ^ (v168 ^ 0x8CC005) & ((_DWORD)v312 << 8);
  LODWORD(v312) = v304 ^ (2
                        * (((_DWORD)v312 << 16) & 0x428C0000 ^ v312 ^ (((_DWORD)v312 << 16) ^ 0x5E050000) & (((v168 ^ 0xC2001E05) << 8) & 0xC28C0000 ^ 0x42000000 ^ (((v168 ^ 0xC2001E05) << 8) ^ 0xCDE0000) & (v168 ^ 0xC2001E05))));
  LODWORD(v246) = 385 * v246 + 1272449106;
  LODWORD(v304) = (v246 & 0x30737 | (2 * (v246 & 0x30737)) & 0x800 | 0xE0000000) ^ (2 * (v246 & 0x30737)) & (v246 ^ 0x481BCEB7);
  LODWORD(v168) = (2 * (v246 ^ 0x481BCEB7)) & 0x400C980 ^ 0x4104880 ^ ((2 * (v246 ^ 0x481BCEB7)) ^ 0x419300) & (v246 ^ 0x481BCEB7);
  LODWORD(v304) = ((4 * v304) | 0x600000) & v168 ^ v304 ^ ((4 * v304) & 0x80100980 | 0x70200000);
  LODWORD(v168) = (4 * v168) & 0x7C30C980 ^ 0xC30C980 ^ ((4 * v168) ^ 0x70C32600) & v168;
  LODWORD(v304) = (16 * v304) & 0xFC30C980 ^ v304 ^ ((16 * v304) ^ 0x1800000) & v168;
  LODWORD(v168) = (16 * v168) & 0x7C30C980 ^ 0x3C304180 ^ ((16 * v168) ^ 0x430C9800) & v168;
  LODWORD(v304) = v304 ^ ((_DWORD)v304 << 8) & 0xFC30C900 ^ (((_DWORD)v304 << 8) ^ 0x18000000) & v168;
  LODWORD(v304) = ((v304 ^ 0xF428C980) << 16) & 0x7C300000 ^ v304 ^ 0xF428C980 ^ (((v304 ^ 0xF428C980) << 16) ^ 0x49800000) & (((_DWORD)v168 << 8) & 0x7C300000 ^ 0x4C300000 ^ (((_DWORD)v168 << 8) ^ 0x30C90000) & v168);
  LODWORD(v221) = *((unsigned __int8 *)&STACK[0x2920] + v195 % 0x51A) ^ LODWORD(STACK[0x11BC]);
  LODWORD(STACK[0x1644]) = (_DWORD)v221;
  LODWORD(v235) = 385 * (((*(_BYTE *)(v315 + v235) - 84) ^ 0x29) - 107) + 1575209006;
  LODWORD(v195) = (v235 ^ 0x603F271B) & (2 * (v235 & 0x7475B)) ^ v235 & 0x7475B;
  LODWORD(v168) = ((2 * (v235 ^ 0x6033A129)) ^ 0x451CCE4) & (v235 ^ 0x6033A129) ^ (2 * (v235 ^ 0x6033A129)) & 0x422CE672;
  LODWORD(v195) = (v168 ^ 0x42080462) & (4 * v195) ^ v195;
  LODWORD(v168) = ((4 * (v168 ^ 0x42242212)) ^ 0x8B399C8) & (v168 ^ 0x42242212) ^ (4 * (v168 ^ 0x42242212)) & 0xC22CE670;
  LODWORD(v195) = (v168 ^ 0x208042) & (16 * v195) ^ v195;
  LODWORD(v168) = ((16 * (v168 ^ 0xC20C6632)) ^ 0x22CE6720) & (v168 ^ 0xC20C6632) ^ (16 * (v168 ^ 0xC20C6632)) & 0xC22CE670;
  LODWORD(v195) = v195 ^ 0xC22CE672 ^ (v168 ^ 0x20C6600) & ((_DWORD)v195 << 8);
  v317 = *((unsigned __int8 *)&STACK[0x2920] + (v305 ^ 0x9A5AFF33)) ^ LODWORD(STACK[0x11F0]);
  LODWORD(v305) = ((v312 ^ 0xA932F738) + 1015177872) ^ ((v312 ^ 0x173B8B7F) - 2104811831) ^ ((v312 ^ 0x596B8268)
                                                                                           - 858056736);
  LODWORD(v312) = (LODWORD(STACK[0x17EC]) ^ LODWORD(STACK[0xDC4]));
  LODWORD(v312) = 385 * v312 + 200585 - 1306 * ((3288643 * (unint64_t)(385 * v312 + 200585)) >> 32);
  LODWORD(v235) = *((unsigned __int8 *)&STACK[0x2920]
                  + (v235 ^ (2
                                         * (((_DWORD)v195 << 16) & 0x422C0000 ^ v195 ^ (((_DWORD)v195 << 16) ^ 0x66720000) & (((v168 ^ 0xC0208052) << 8) & 0x422C0000 ^ 0x42080000 ^ (((v168 ^ 0xC0208052) << 8) ^ 0x2CE60000) & (v168 ^ 0xC0208052)))) ^ 0xA2068BBF)
                  % 0x51A);
  v318 = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1770]) ^ 0x8D2D9467)) ^ LODWORD(STACK[0x11EC]);
  LODWORD(STACK[0x17EC]) = v318;
  LODWORD(v150) = STACK[0x11A4];
  LODWORD(v195) = *((unsigned __int8 *)&STACK[0x2920] + v306) ^ LODWORD(STACK[0x11B0]);
  LODWORD(v257) = (63 * v182) ^ LODWORD(STACK[0x11A8]);
  LODWORD(v311) = *((unsigned __int8 *)&STACK[0x2920] + (v281 ^ (2 * v295) ^ 0xB98BE5C6) % 0x51A) ^ LODWORD(STACK[0x11C0]);
  LODWORD(STACK[0x1898]) = v311;
  LODWORD(v310) = 385 * v305 + 1368141543;
  LODWORD(v307) = v235 + v150 - 2 * (v235 & v150);
  LODWORD(v316) = *((unsigned __int8 *)&STACK[0x2920] + (v246 ^ (2 * (_DWORD)v304) ^ 0xDC4A9437) % 0x51A) ^ LODWORD(STACK[0x1290]);
  LODWORD(v246) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x15E8]) ^ 0xB61144BE));
  LODWORD(STACK[0x1798]) = v246;
  LODWORD(v269) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1648])) ^ LODWORD(STACK[0x11E0]);
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1560]));
  LODWORD(STACK[0x1648]) = v305;
  LODWORD(v168) = *((unsigned __int8 *)&STACK[0x2920]
                  + (((_DWORD)v312 - 1926392729 - ((2 * (_DWORD)v312) & 0x8CE)) ^ 0x8D2D9467)) ^ LODWORD(STACK[0x1280]);
  LODWORD(STACK[0x1750]) = v168;
  LODWORD(v312) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1554]));
  LODWORD(STACK[0x17BC]) = v312;
  LODWORD(v235) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x15AC]) ^ 0xE3078758));
  LODWORD(STACK[0x15E8]) = v235;
  LODWORD(v304) = *((unsigned __int8 *)&STACK[0x2920] + (v290 ^ 0x8D2D9467));
  LODWORD(v290) = *((unsigned __int8 *)&STACK[0x2920] + v310 % 0x51A);
  LODWORD(v206) = v304 ^ STACK[0x1348];
  LODWORD(STACK[0x1544]) = v206;
  LODWORD(v150) = v290 ^ LODWORD(STACK[0x1870]);
  LODWORD(STACK[0x1760]) = v150;
  LODWORD(STACK[0x15B0]) = v235 ^ v312;
  LODWORD(STACK[0x15D0]) = v206 ^ v317;
  LODWORD(STACK[0x1790]) = v317;
  LODWORD(STACK[0x1738]) = v269;
  LODWORD(STACK[0x1710]) = v195;
  LOBYTE(v304) = v305 ^ v246 ^ v235 ^ v312 ^ v206 ^ v317 ^ v311 ^ v221 ^ v269 ^ v318 ^ v195 ^ v150;
  LODWORD(v206) = v257;
  LODWORD(v221) = v307;
  LOBYTE(v304) = 71 * (v304 ^ v257 ^ *(_BYTE *)(v314 + 247) ^ v307);
  LODWORD(v290) = v304 + 1509367266;
  v319 = 2 * (v290 & 0x37F);
  LODWORD(v305) = v319 | 0x21000;
  LODWORD(v257) = v319 & 0x22C ^ v290 & 0x37F;
  v320 = (2 * (v290 ^ 0xE9E94153)) & 0x22C ^ 0x3224 ^ ((2 * (v290 ^ 0xE9E94153)) ^ 0x90005458) & (v290 ^ 0xE9E94153);
  LODWORD(v257) = (4 * (v257 ^ v305 & (v290 ^ 0xE9E94153))) & 0x4FE07A2C ^ v257 ^ v305 & (v290 ^ 0xE9E94153) ^ ((4 * (v257 ^ v305 & (v290 ^ 0xE9E94153))) ^ 0x4A000) & v320;
  v321 = (4 * v320) & 0x4FE07A2C ^ 0x4060120C ^ ((4 * v320) ^ 0x300068B0) & v320;
  LODWORD(v257) = (16 * v257) & 0x4FE07A20 ^ v257 ^ ((16 * v257) ^ 0x108000) & v321;
  v322 = (16 * v321) & 0x4FE07A20 ^ 0x1E0582C ^ ((16 * v321) ^ 0xFE07A2C0) & v321;
  LODWORD(v257) = v257 ^ ((_DWORD)v257 << 8) & 0x4FE07A00 ^ (((_DWORD)v257 << 8) ^ 0x1080000) & v322;
  LODWORD(v290) = v290 ^ (2
                        * (((v257 ^ 0x4EE1722C) << 16) & 0x4FE00000 ^ v257 ^ 0x4EE1722C ^ (((v257 ^ 0x4EE1722C) << 16) ^ 0x7A2C0000) & ((v322 << 8) & 0x4FE00000 ^ ((v322 << 8) ^ 0x607A0000) & v322 ^ 0xF800000)));
  LODWORD(v257) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1780]) ^ 0x8D2D9467));
  LODWORD(STACK[0x15AC]) = v257;
  v323 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1778]));
  LODWORD(STACK[0x1778]) = v323;
  LOBYTE(v290) = *(_BYTE *)(v315 + (v290 ^ 0xAD89CF27)) ^ v304 ^ 0xA5;
  LODWORD(v150) = *(unsigned __int8 *)(v315
                                     + (((v316 >> 3) | (32 * v316)) ^ 0x99u)
                                     + 4432);
  LODWORD(STACK[0x1780]) = v150;
  LOBYTE(v304) = v195 ^ v269;
  LOBYTE(v316) = v257 ^ v323 ^ v195 ^ v269 ^ v206;
  LOBYTE(v269) = v206;
  LODWORD(STACK[0x1770]) = v206;
  LODWORD(v150) = v150 ^ v168;
  LODWORD(STACK[0x1560]) = v150;
  LOBYTE(v275) = v150 ^ v316;
  v324 = v314;
  LODWORD(v316) = 385
                * (*(unsigned __int8 *)(v315
                                      + ((((v150 ^ v316 ^ *(_BYTE *)(v314 + 181) ^ 0x38) >> 3) | (32 * (v150 ^ v316 ^ *(_BYTE *)(v314 + 181)))) ^ 0x99u)
                                      + 4432) ^ 0x38)
                + 770332732;
  LODWORD(v257) = (v316 ^ 0xDA38266C) & (2 * (v316 & 0x8B74D)) ^ v316 & 0x8B74D;
  v325 = ((2 * (v316 ^ 0xDA382AEE)) ^ 0x10413B46) & (v316 ^ 0xDA382AEE) ^ (2 * (v316 ^ 0xDA382AEE)) & 0x8209DA2;
  LODWORD(v257) = (v325 ^ 0x8001981) & (4 * v257) ^ v257;
  v326 = ((4 * (v325 ^ 0x82084A1)) ^ 0x2082768C) & (v325 ^ 0x82084A1) ^ (4 * (v325 ^ 0x82084A1)) & 0x8209DA0;
  LODWORD(v257) = (v326 ^ 0x1480) & (16 * v257) ^ v257;
  v327 = ((16 * (v326 ^ 0x8208923)) ^ 0x8209DA30) & (v326 ^ 0x8208923) ^ (16 * (v326 ^ 0x8208923)) & 0x8209DA0;
  LODWORD(v257) = v257 ^ 0x8209DA3 ^ (v327 ^ 0x9800) & ((_DWORD)v257 << 8);
  LODWORD(v290) = 385 * (v290 - 107);
  LODWORD(STACK[0x1548]) = 3993718 - v290;
  LODWORD(STACK[0x1554]) = v290 + 200585;
  LODWORD(v314) = ((3993718 - v290) & 0x21C51B) + ((v290 + 200585) & 0x1C51B);
  LODWORD(STACK[0x15CC]) = (v316 ^ (2
                                                * ((((_DWORD)v257 << 16) ^ 0x1DA30000) & (((v327 ^ 0x8200583) << 8) & 0x8200000 ^ 0x8200000 ^ (((v327 ^ 0x8200583) << 8) ^ 0x209D0000) & (v327 ^ 0x8200583)) ^ v257 ^ (((_DWORD)v257 << 16) & 0x8200000 | 0x18A3))) ^ 0xD219BD4D)
                         % (v314 & 0x2073A);
  LODWORD(v150) = 385 * LODWORD(STACK[0x1810])
                - 1306
                * ((3288643 * (unint64_t)(385 * LODWORD(STACK[0x1810]))) >> 32);
  LODWORD(v306) = STACK[0x1664];
  LODWORD(v316) = ((2 * (v306 ^ 0x15C24204)) ^ 0x7CE08CC) & (v306 ^ 0x15C24204) ^ (2 * (v306 ^ 0x15C24204)) & 0x83E70466;
  LODWORD(v290) = ((4 * (v316 ^ 0x80210422)) ^ 0xF9C1198) & (v316 ^ 0x80210422) ^ (4 * (v316 ^ 0x80210422)) & 0x83E70464;
  v328 = ((16 * (v290 ^ 0x80630466)) ^ 0x3E704660) & (v290 ^ 0x80630466) ^ (16 * (v290 ^ 0x80630466)) & 0x83E70460;
  LODWORD(v246) = (v306 ^ 0x15804640) & (2 * (v306 & 0x96254662)) ^ v306 & 0x96254662;
  LODWORD(v316) = (v290 ^ 0x3840006) & (16 * ((v316 ^ 0x1860422) & (4 * v246) ^ v246)) ^ (v316 ^ 0x1860422) & (4 * v246) ^ v246;
  LODWORD(v316) = v316 ^ 0x83E70466 ^ (v328 ^ 0x2600400) & ((_DWORD)v316 << 8);
  LODWORD(STACK[0x1530]) = LODWORD(STACK[0x1664]) ^ (2
                                                   * (((_DWORD)v316 << 16) & 0x3E70000 ^ v316 ^ (((_DWORD)v316 << 16) ^ 0x4660000) & (((v328 ^ 0x81870006) << 8) & 0x83E70000 ^ 0xE30000 ^ (((v328 ^ 0x81870006) << 8) ^ 0x67040000) & (v328 ^ 0x81870006))));
  LODWORD(v316) = 385 * STACK[0x14A8]
                - 1306 * ((3288643 * (unint64_t)(385 * STACK[0x14A8])) >> 32);
  LODWORD(v206) = STACK[0x1668] & 0xACE;
  LOBYTE(v328) = (((2 * (v206 ^ 0x4E)) | 0xF8) - (v206 ^ 0x4E) + 4) ^ 0xDC;
  LOBYTE(v206) = (STACK[0x1228] & 0x36)
               + ((-3 - STACK[0x1230]) & 0x36)
               + (v206 ^ 0x88)
               + ((43 - (v328 | 0x2B) + (v328 | 0xD4)) ^ 0xFC);
  v329 = *(unsigned __int8 *)(v315 + STACK[0x16C8]);
  LODWORD(v206) = ((v329 >> 7) | (2 * v329)) ^ 0xFFFFFFD7 ^ (((v329 >> 1) & 0x3F ^ ((v329 >> 7) | (2 * v329))) >> v206);
  LOBYTE(v316) = LODWORD(STACK[0x1890]) ^ LOBYTE(STACK[0x17F0]) ^ LOBYTE(STACK[0x16B8]) ^ LOBYTE(STACK[0x17C0]) ^ *((_BYTE *)&STACK[0x2920] + (((_DWORD)v316 - 1926392729 - ((2 * (_DWORD)v316) & 0x8CE)) ^ 0x8D2D9467)) ^ *(_BYTE *)(v324 + 35) ^ ((v206 >> 2) | ((_BYTE)v206 << 6));
  LODWORD(v316) = (((v316 >> 3) | (32 * v316)) ^ 0x9D) + 579076301;
  v330 = (2 * (v316 ^ 0xADE0CD6E)) & 0x880DA ^ 0x4404A ^ ((2 * (v316 ^ 0xADE0CD6E)) ^ 0x812081B4) & (v316 ^ 0xADE0CD6E);
  LODWORD(v305) = (4 * v330) & 0x709CC8D8 ^ 0x308CC892 ^ ((4 * v330) ^ 0xC2732368) & v330;
  LODWORD(v246) = (16 * v305) & 0x709CC8D0 ^ 0x7010405A ^ ((16 * v305) ^ 0x9CC8DA0) & v305;
  LODWORD(v206) = (2 * (v316 & 0x1B4)) & (v316 ^ 0xADE0CD6E) ^ (v316 & 0x1B4 | 0x3090484A) ^ ((2 * (v316 & 0xB4)) & 0x4C | 0x40008090);
  LODWORD(v206) = (4 * v206) & 0x400008D8 ^ v206 ^ ((4 * v206) ^ 0xC2732368) & v330;
  LODWORD(v206) = (16 * v206) & 0x709CC8D0 ^ v206 ^ ((16 * v206) ^ 0x8CC8920) & v305;
  LODWORD(v206) = v206 ^ ((_DWORD)v206 << 8) & 0x709CC800 ^ (((_DWORD)v206 << 8) ^ 0x409200) & v246 ^ 0x409C0848;
  LODWORD(v316) = *(unsigned __int8 *)(v315
                                     + (v316 ^ (2
                                                            * (((_DWORD)v206 << 16) & 0x709C0000 ^ v206 ^ (((_DWORD)v206 << 16) ^ 0x48DA0000) & (((_DWORD)v246 << 8) & 0x709C0000 ^ 0x60140000 ^ (((_DWORD)v246 << 8) ^ 0x9CC80000) & v246))) ^ 0xBD759400))
                - 38;
  v331 = v316 ^ ((LODWORD(STACK[0x1718]) ^ LODWORD(STACK[0x1890])) & 0xFFFFFFA0 | 0x42) ^ (v316 >> 4) ^ (v316 >> 5);
  STACK[0x17C0] = v331;
  LODWORD(v331) = 385 * v331
                - 1306 * ((3288643 * (unint64_t)(385 * v331)) >> 32);
  v332 = v331 - 1926392729 - ((2 * v331) & 0x8CE);
  LODWORD(v306) = STACK[0x1660];
  LODWORD(v331) = ((2 * (v306 ^ 0xC0C96B55)) ^ 0x90633AFA) & (v306 ^ 0xC0C96B55) ^ (2 * (v306 ^ 0xC0C96B55)) & 0x48319D7C;
  LODWORD(v206) = ((4 * (v331 ^ 0x48108505)) ^ 0x20C675F4) & (v331 ^ 0x48108505) ^ (4 * (v331 ^ 0x48108505)) & 0x48319D7C;
  LODWORD(v305) = ((16 * (v206 ^ 0x48318809)) ^ 0x8319D7D0) & (v206 ^ 0x48318809) ^ (16 * (v206 ^ 0x48318809)) & 0x48319D70;
  LODWORD(v312) = (v306 ^ 0xC0F8E705) & (2 * (v306 & 0x88F8F628)) ^ v306 & 0x88F8F628;
  LODWORD(v331) = (v206 ^ 0x1560) & (16 * ((v331 ^ 0x8311C64) & (4 * v312) ^ v312)) ^ (v331 ^ 0x8311C64) & (4 * v312) ^ v312;
  LODWORD(v331) = v331 ^ 0x48319D7D ^ (v305 ^ 0x11952D) & ((_DWORD)v331 << 8);
  LODWORD(v206) = LODWORD(STACK[0x1660]) ^ (2
                                          * (((_DWORD)v331 << 16) & 0x48310000 ^ v331 ^ (((_DWORD)v331 << 16) ^ 0x1D7D0000) & (((v305 ^ a18) << 8) & 0x48310000 ^ 0x48200000 ^ (((v305 ^ a18) << 8) ^ 0x319D0000) & (v305 ^ a18))));
  LODWORD(v331) = 385 * LODWORD(STACK[0x1558]) + 657453142;
  LODWORD(v311) = ((2 * (v331 ^ 0xD7164B24)) ^ 0x100C891C) & (v331 ^ 0xD7164B24) ^ (2 * (v331 ^ 0xD7164B24)) & 0x46448E;
  LODWORD(v305) = ((4 * (v311 ^ 0x424482)) ^ 0x3F191238) & (v311 ^ 0x424482) ^ (4 * (v311 ^ 0x424482)) & 0xFC6448C;
  LODWORD(v246) = ((16 * (v305 ^ 0xC64486)) ^ 0xFC6448E0) & (v305 ^ 0xC64486) ^ (16 * (v305 ^ 0xC64486)) & 0xFC64480;
  LODWORD(v235) = (v331 ^ 0xD7164F20) & (2 * (v331 & 0x100FAA)) ^ v331 & 0x100FAA;
  LODWORD(v311) = (v305 ^ 0xF000006) & (16 * ((v311 ^ 0x82000A) & (4 * v235) ^ v235)) ^ (v311 ^ 0x82000A) & (4 * v235) ^ v235;
  LODWORD(v311) = v311 ^ 0xFC6448E ^ (v246 ^ 0xC444000) & ((_DWORD)v311 << 8);
  LODWORD(v305) = (v331 ^ (2
                                       * (((_DWORD)v311 << 16) & 0xFC60000 ^ v311 ^ (((_DWORD)v311 << 16) ^ 0x448E0000) & (((v246 ^ 0x382040E) << 8) & 0xFC60000 ^ 0x9820000 ^ (((v246 ^ 0x382040E) << 8) ^ 0xC6440000) & (v246 ^ 0x382040E)))) ^ 0xCE5086B6)
                % 0x51A;
  LODWORD(v331) = 385 * LODWORD(STACK[0x15E4]);
  LODWORD(v235) = *((unsigned __int8 *)&STACK[0x2920]
                  + (((_DWORD)v150 - 1926392729 - ((2 * (_DWORD)v150) & 0x8CE)) ^ 0x8D2D9467));
  LOBYTE(v150) = *((_BYTE *)&STACK[0x2920] + (v206 ^ 0x8F9CCD2));
  LODWORD(v305) = *((unsigned __int8 *)&STACK[0x2920] + v305);
  LODWORD(STACK[0x16C8]) = v305;
  LOBYTE(v206) = *(_BYTE *)(v315 + ((v317 ^ LOBYTE(STACK[0x17EC])) ^ 0xCFu) + 4174) ^ v317 ^ LOBYTE(STACK[0x17EC]);
  LODWORD(v195) = v317 ^ LODWORD(STACK[0x17EC]);
  LOBYTE(v281) = (((v206 ^ 0xF2 | v206 ^ 0xD) ^ 0xF) + 79) * (v206 ^ 0xD);
  v333 = STACK[0x1760];
  LODWORD(STACK[0x1810]) = LODWORD(STACK[0x1760]) ^ v235;
  LODWORD(STACK[0x15E4]) = v235;
  LODWORD(v206) = v333 ^ v235 ^ LODWORD(STACK[0x1798]);
  LODWORD(STACK[0x17F0]) = v206;
  LODWORD(v257) = STACK[0x1898];
  LODWORD(STACK[0x1660]) = LODWORD(STACK[0x1898]) ^ v195;
  LODWORD(STACK[0x1528]) = v195;
  v334 = v324;
  LOBYTE(v206) = v206 ^ v150 ^ v305 ^ v304 ^ v269 ^ (((*(_BYTE *)(v315
                                                                + ((71 * (v257 ^ v195)) ^ 0xB1u)
                                                                + 22623)
                                                     - 84) ^ 0x29)
                                                   - 107) ^ *(_BYTE *)(v324 + 8);
  LODWORD(v150) = (v275 & 0x33 ^ 0x11) + (v275 & 0x33 ^ 0x22);
  LODWORD(v206) = (63
                                  * (*(_BYTE *)(v315 + ((v206 ^ v221) ^ 0xCFu) + 4174) ^ v206 ^ v221 ^ 0xD))
                + 788464953;
  LODWORD(v275) = (v206 & 0x4D0 | 0x30000008 | (2 * (v206 & 0x4D0)) & 0xFF1F) ^ (2 * (v206 & 0x4D0)) & (v206 ^ 0xA9F2578F);
  LODWORD(v305) = (2 * (v206 ^ 0xA9F2578F)) & 0x35E ^ 0x941 ^ ((2 * (v206 ^ 0xA9F2578F)) ^ 0x810552BE) & (v206 ^ 0xA9F2578F);
  LODWORD(v275) = (4 * v275) & 0x40002340 ^ v275 ^ v305 & 0x13C0 & (4 * v275);
  LODWORD(v305) = (4 * v305) & 0x78F2AB5C ^ 0x18300203 ^ ((4 * v305) ^ 0x8308097C) & v305;
  LODWORD(v275) = (16 * v275) & 0x78F2AB50 ^ v275 ^ ((16 * v275) ^ 0x80) & v305;
  LODWORD(v305) = (16 * v305) & 0x78F2AB50 ^ 0x70D00A0F ^ ((16 * v305) ^ 0x8F2AB5F0) & v305;
  LODWORD(v275) = v275 ^ ((_DWORD)v275 << 8) & 0x78F2AB00 ^ (((_DWORD)v275 << 8) ^ 0x800) & v305;
  LODWORD(v206) = v206 ^ (2
                        * (((v275 ^ 0x8F2A357) << 16) & 0x78F20000 ^ v275 ^ 0x8F2A357 ^ (((v275 ^ 0x8F2A357) << 16) ^ 0x2B5F0000) & (((_DWORD)v305 << 8) & 0x78F20000 ^ 0x8500000 ^ (((_DWORD)v305 << 8) ^ 0xF2AB0000) & v305)));
  LODWORD(v206) = 385
                * (((v206 ^ 0x83C161F3) - 2125291514) ^ ((v206 ^ 0xB8F32A60) - 1168053353) ^ ((v206 ^ 0x4B73E1FD)
                                                                                            + 1239425036))
                + 1432957472;
  LODWORD(v275) = (v206 ^ 0xFBB0FEA6) & (2 * (v206 & 0xFC22FCC7)) ^ v206 & 0xFC22FCC7;
  LODWORD(v305) = ((2 * (v206 ^ 0x43B5CF22)) ^ 0x7F2E67CA) & (v206 ^ 0x43B5CF22) ^ (2 * (v206 ^ 0x43B5CF22)) & 0xBF9733E4;
  LODWORD(v275) = (v305 ^ 0x31062300) & (4 * v275) ^ v275;
  LODWORD(v305) = ((4 * (v305 ^ 0x80911025)) ^ 0xFE5CCF94) & (v305 ^ 0x80911025) ^ (4 * (v305 ^ 0x80911025)) & 0xBF9733E4;
  LODWORD(v275) = (v305 ^ 0xBE140380) & (16 * v275) ^ v275;
  LODWORD(v305) = ((16 * (v305 ^ 0x1833061)) ^ 0xF9733E50) & (v305 ^ 0x1833061) ^ (16 * (v305 ^ 0x1833061)) & 0xBF9733E0;
  LODWORD(v275) = v275 ^ 0xBF9733E5 ^ (v305 ^ 0xB9133200) & ((_DWORD)v275 << 8);
  v335 = *(unsigned __int8 *)(v324 + (v150 + 98));
  LODWORD(v206) = v206 ^ (2
                        * (((_DWORD)v275 << 16) & 0x3F970000 ^ v275 ^ (((_DWORD)v275 << 16) ^ 0x33E50000) & (((v305 ^ 0x68401A5) << 8) & 0x3F970000 ^ 0x28840000 ^ (((v305 ^ 0x68401A5) << 8) ^ 0x17330000) & (v305 ^ 0x68401A5))));
  LOBYTE(v275) = v335 ^ 0xD ^ *(_BYTE *)((v335 ^ 0xCF) + v315 + 4174);
  v336 = 0x322E42A57083BALL
       * (((v206 ^ 0x46A472AFE2913EFFLL) - 0x46A472AF8BBA3195) ^ ((v206 ^ 0xC291357F59A937B6)
                                                                                + 0x3D6ECA80CF7DC724) ^ ((v206 ^ 0x843547D05F3E9244) + 0x7BCAB82FC9EA62D2))
       - 0x5AE04D740D5998BALL;
  v337 = (v336 ^ 0x68907FBD327D1E91) & (2 * (v336 & 0x48A57F3E43782090)) ^ v336 & 0x48A57F3E43782090;
  v338 = ((2 * (v336 ^ 0xF990D7CDB00D1E91)) ^ 0x626B51E7E6EA7C02) & (v336 ^ 0xF990D7CDB00D1E91) ^ (2 * (v336 ^ 0xF990D7CDB00D1E91)) & 0xB135A8F3F3753E00;
  v339 = (v338 ^ 0x202100E302600400) & (4 * v337) ^ v337;
  v340 = ((4 * (v338 ^ 0x9114A81011150201)) ^ 0xC4D6A3CFCDD4F804) & (v338 ^ 0x9114A81011150201) ^ (4 * (v338 ^ 0x9114A81011150201)) & 0xB135A8F3F3753E00;
  v341 = (v340 ^ 0x8014A0C3C1543800) & (16 * v339) ^ v339;
  v342 = ((16 * (v340 ^ 0x3121083032210601)) ^ 0x135A8F3F3753E010) & (v340 ^ 0x3121083032210601) ^ (16 * (v340 ^ 0x3121083032210601)) & 0xB135A8F3F3753E00;
  v343 = (v342 ^ 0x1110883333512000) & (v341 << 8) ^ v341;
  v344 = (((v342 ^ 0xA02520C0C0241E01) << 8) ^ 0x35A8F3F3753E0100) & (v342 ^ 0xA02520C0C0241E01) ^ ((v342 ^ 0xA02520C0C0241E01) << 8) & 0xB135A8F3F3753E00;
  v345 = v343 ^ 0xB135A8F3F3753E01 ^ (v344 ^ 0x3120A0F371340000) & (v343 << 16);
  v346 = v336 ^ (2
               * ((v345 << 32) & 0x3135A8F300000000 ^ v345 ^ ((v345 << 32) ^ 0x73753E0100000000) & (((v344 ^ 0x8015080082413E01) << 16) & 0x3135A8F300000000 ^ 0x1104088200000000 ^ (((v344 ^ 0x8015080082413E01) << 16) ^ 0x28F3F37500000000) & (v344 ^ 0x8015080082413E01))));
  LODWORD(v344) = (__CFADD__(v346 ^ 0xEB54565ABA60F388, 0x5EA5924D09946254) - 1) ^ (__CFADD__(v346 ^ 0x6258646E820947FELL, 0xD7A9A07931FDD626)- 1);
  v347 = ((v346 ^ 0xEB54565ABA60F388) + 0x5EA5924D09946254) ^ ((v346 ^ 0x6258646E820947FELL) - 0x28565F86CE0229DALL);
  v346 ^= 0xC1A84CEF9DFBE8E4;
  v348 = v347 ^ (v346 + 0x745988F82E0F7940);
  LODWORD(v346) = (((unint64_t)v348 * (unsigned __int128)0x51AuLL) >> 64)
                + 1306 * (v344 ^ (__CFADD__(v346, 0x745988F82E0F7940) - 1));
  v201 = __CFADD__(1306 * v348, 0x98A50AD5B78CB47CLL);
  LODWORD(v331) = *((unsigned __int8 *)&STACK[0x2920]
                  + (v331 - 1306 * ((3288643 * (unint64_t)v331) >> 32)));
  LODWORD(STACK[0x1668]) = v331;
  LODWORD(v324) = LODWORD(STACK[0x17BC]) ^ v331;
  LODWORD(STACK[0x1584]) = v324;
  LODWORD(v269) = STACK[0x1738];
  LODWORD(v290) = STACK[0x1710];
  LOBYTE(v331) = v235 ^ v324 ^ LODWORD(STACK[0x1778]) ^ LODWORD(STACK[0x1738]) ^ v195 ^ LODWORD(STACK[0x1710]);
  LODWORD(STACK[0x1540]) = v333 ^ 0x7C;
  LODWORD(v324) = LODWORD(STACK[0x1780]) ^ 0xFFFFFFD9;
  LOBYTE(v280) = LOBYTE(STACK[0x1780]) ^ 0xD9;
  LODWORD(STACK[0x1664]) = v324;
  LOBYTE(v304) = STACK[0x1750];
  LODWORD(v331) = 385 * ((v331 ^ v333 ^ 0x7C ^ v324 ^ v304) ^ 0x9D ^ (63 * v275))
                + 909472208;
  LODWORD(v348) = (2 * (v331 & 0x19DB9)) & 0x12110 ^ v331 & 0x19DB9 ^ ((2 * (v331 & 0x19DB9)) | 0x80000) & (v331 ^ 0x9C9838AD);
  LODWORD(v345) = (2 * (v331 ^ 0x9C9838AD)) & 0x5555A514 ^ 0x5554A514 ^ ((2 * (v331 ^ 0x9C9838AD)) ^ 0xAAAB4A28) & (v331 ^ 0x9C9838AD);
  LODWORD(v348) = (4 * v348) & 0x5555A514 ^ v348 ^ ((4 * v348) ^ 0x100000) & v345;
  LODWORD(v345) = (4 * v345) & 0x5555A514 ^ 0x12104 ^ ((4 * v345) ^ 0x55569450) & v345;
  LODWORD(v348) = (16 * v348) & 0x5555A510 ^ v348 ^ ((16 * v348) ^ 0x1400000) & v345;
  LODWORD(v345) = (16 * v345) & 0x5555A510 ^ 0x5A414 ^ ((16 * v345) ^ 0x555A5140) & v345;
  LODWORD(v348) = v348 ^ 0x1A514 ^ ((_DWORD)v348 << 8) & 0x5555A500 ^ (((_DWORD)v348 << 8) ^ 0x54000000) & v345;
  v349 = v331 ^ (2
                             * (((_DWORD)v348 << 16) & 0x55555555 ^ v348 ^ (((_DWORD)v348 << 16) ^ 0x25140000) & (((_DWORD)v345 << 8) & 0x55550000 ^ 0x500000 ^ (((_DWORD)v345 << 8) ^ 0x55A50000) & v345))) ^ 0xE46343F6;
  v350 = 0x322E42A57083BALL
       * (((v349 ^ 0x9F9AE75491AE57EFLL) + 0x606518AB6E51A811) ^ ((v349 ^ 0x9D363962A393FDECLL) + 0x62C9C69D5C6C0214) ^ ((v349 ^ 0x2ACDE36BF103E64) - 0x2ACDE36BF103E64))
       + 0x5752A13CFBECC858;
  v351 = (v350 ^ 0xC762888C333D3F7FLL) & (2 * (v350 & 0x9672908D3A31BF7ELL)) ^ v350 & 0x9672908D3A31BF7ELL;
  v352 = ((2 * (v350 ^ 0xC7E2889E233E0F2BLL)) ^ 0xA3203026321F60AALL) & (v350 ^ 0xC7E2889E233E0F2BLL) ^ (2 * (v350 ^ 0xC7E2889E233E0F2BLL)) & 0x51901813190FB054;
  v353 = (v352 ^ 0x1000000100F2000) & (4 * v351) ^ v351;
  v354 = ((4 * (v352 ^ 0x5090081109009055)) ^ 0x4640604C643EC154) & (v352 ^ 0x5090081109009055) ^ (4 * (v352 ^ 0x5090081109009055)) & 0x51901813190FB054;
  v355 = (v354 ^ 0x40000000000E8040) & (16 * v353) ^ v353;
  v356 = ((16 * (v354 ^ 0x1190181319013001)) ^ 0x1901813190FB0550) & (v354 ^ 0x1190181319013001) ^ (16 * (v354 ^ 0x1190181319013001)) & 0x51901813190FB050;
  v357 = (v356 ^ 0x11000011100B0000) & (v355 << 8) ^ v355;
  v358 = (((v356 ^ 0x409018020904B005) << 8) ^ 0x901813190FB05500) & (v356 ^ 0x409018020904B005) ^ ((v356 ^ 0x409018020904B005) << 8) & 0x51901813190FB000;
  v359 = v357 ^ 0x51901813190FB055 ^ (v358 ^ 0x1010101109000000) & (v357 << 16);
  v360 = v350 ^ (2
               * ((v359 << 32) & 0x5190181300000000 ^ v359 ^ ((v359 << 32) ^ 0x190FB05500000000) & (((v358 ^ 0x41800802100FA055) << 16) & 0x5190181300000000 ^ 0x4180001000000000 ^ (((v358 ^ 0x41800802100FA055) << 16) ^ 0x1813190F00000000) & (v358 ^ 0x41800802100FA055))));
  LODWORD(STACK[0x1558]) = v201 + (_DWORD)v346 + 1262708245;
  LODWORD(v275) = (__CFADD__(v360 ^ 0xCE3C3B1F2502F53ALL, 0xF9E024AFBD32CDEALL) - 1) ^ (__CFADD__(v360 ^ 0xE87EA87AFB39A460, 0xDFA2B7CA63099CB4)- 1);
  v361 = ((v360 ^ 0xCE3C3B1F2502F53ALL) - 0x61FDB5042CD3216) ^ ((v360 ^ 0xE87EA87AFB39A460) - 0x205D48359CF6634CLL);
  v360 ^= 0x311013ECD6158E8EuLL;
  v201 = __CFADD__(v360, 0x6CC0C5C4E25B65ELL);
  v362 = v361 ^ (v360 + 0x6CC0C5C4E25B65ELL);
  LODWORD(v361) = (((unint64_t)v362 * (unsigned __int128)0x51AuLL) >> 64) + 1306 * (v275 ^ (v201 - 1));
  v201 = __CFADD__(1306 * v362, 0xE867B456C2596130);
  LOBYTE(v324) = *((_BYTE *)&STACK[0x2920] + LODWORD(STACK[0x1720]));
  LODWORD(v362) = 385 * (LODWORD(STACK[0x1544]) ^ LODWORD(STACK[0x16A4]) ^ v324) + 483113146;
  LODWORD(v358) = (2 * (v362 & 0x756CF)) & (v362 ^ 0x1945DFEB) ^ v362 & 0x756CF ^ ((2 * (v362 & 0x756CF)) & 0x28904 | 0x30200000);
  LODWORD(v275) = ~(2 * (v362 ^ 0x1945DFEB)) & 0xA128924 ^ ((2 * (v362 ^ 0x1945DFEB)) ^ 0x4851248) & (v362 ^ 0x1945DFEB);
  LODWORD(v358) = (4 * v358) & 0xFA728924 ^ v358 ^ ((4 * v358) ^ 0x40800000) & v275;
  LODWORD(v275) = (4 * v275) & 0x7A728924 ^ 0x12308924 ^ ((4 * v275) ^ 0x69CA2490) & v275;
  LODWORD(v358) = v358 ^ 0x8528924 ^ (16 * v358) & 0xFA728920 ^ ((16 * v358) ^ 0x2000000) & v275;
  LODWORD(v275) = (16 * v275) & 0x7A728920 ^ 0x58520924 ^ ((16 * v275) ^ 0x27289240) & v275;
  LODWORD(v358) = ((_DWORD)v358 << 8) & 0xFA728900 ^ v358 ^ (((_DWORD)v358 << 8) ^ 0x72892400) & v275;
  v363 = v362 ^ (2
                             * (((_DWORD)v358 << 16) & 0x7A720000 ^ v358 ^ (((_DWORD)v358 << 16) ^ 0x9240000) & (((_DWORD)v275 << 8) & 0x7A720000 ^ 0x8720000 ^ (((_DWORD)v275 << 8) ^ 0x72890000) & v275))) ^ 0x6EBFD0E0;
  v364 = 0x322E42A57083BALL
       * (((v363 ^ 0x92DA6D884691C695) + 0x6D259277B96E396BLL) ^ ((v363 ^ 0x39B42EE17AFDB68ALL) - 0x39B42EE17AFDB68ALL) ^ ((v363 ^ 0xAB6E4369B141E478) + 0x5491BC964EBE1B88))
       - 0x19B975B7CFD80B4;
  v365 = (v364 ^ 0xCE5E84112BD92C48) & (2 * (v364 & 0xEF60C925B31C088ALL)) ^ v364 & 0xEF60C925B31C088ALL;
  v366 = ((2 * (v364 ^ 0x4A1F94504FC12C5CLL)) ^ 0x4AFEBAEBF9BA49ACLL) & (v364 ^ 0x4A1F94504FC12C5CLL) ^ (2 * (v364 ^ 0x4A1F94504FC12C5CLL)) & 0xA57F5D75FCDD24D4;
  v367 = (v366 ^ 0x60821D8900000) & (4 * v365) ^ v365;
  v368 = ((4 * (v366 ^ 0xA501451404452452)) ^ 0x95FD75D7F3749358) & (v366 ^ 0xA501451404452452) ^ (4 * (v366 ^ 0xA501451404452452)) & 0xA57F5D75FCDD24D4;
  v369 = (v368 ^ 0x857D5555F0540040) & (16 * v367) ^ v367;
  v370 = ((16 * (v368 ^ 0x200208200C892486)) ^ 0x57F5D75FCDD24D60) & (v368 ^ 0x200208200C892486) ^ (16 * (v368 ^ 0x200208200C892486)) & 0xA57F5D75FCDD24D0;
  v371 = (v370 ^ 0x5755555CCD00400) & (v369 << 8) ^ v369;
  v372 = (((v370 ^ 0xA00A0820300D2096) << 8) ^ 0x7F5D75FCDD24D600) & (v370 ^ 0xA00A0820300D2096) ^ ((v370 ^ 0xA00A0820300D2096) << 8) & 0xA57F5D75FCDD2400;
  v373 = v371 ^ 0xA57F5D75FCDD24D6 ^ (v372 ^ 0x255D5574DC040000) & (v371 << 16);
  v374 = v364 ^ (2
               * ((v373 << 32) & 0x257F5D7500000000 ^ v373 ^ ((v373 << 32) ^ 0x7CDD24D600000000) & (((v372 ^ 0x8022080120D920D6) << 16) & 0x257F5D7500000000 ^ 0x200A012000000000 ^ (((v372 ^ 0x8022080120D920D6) << 16) ^ 0x5D75FCDD00000000) & (v372 ^ 0x8022080120D920D6))));
  LODWORD(STACK[0x1538]) = v201 + (_DWORD)v361 + 1455346609;
  LODWORD(v312) = (__CFADD__(v374 ^ 0x72B813F64B7199E5, 0xC8CD7925E00D2F27) - 1) ^ (__CFADD__(v374 ^ 0x6BA0DFB9220F88DBLL, 0xD1D5B56A89733E19)- 1);
  v375 = ((v374 ^ 0x72B813F64B7199E5) - 0x373286DA1FF2D0D9) ^ ((v374 ^ 0x6BA0DFB9220F88DBLL) - 0x2E2A4A95768CC1E7);
  v374 ^= 0xF43CB72923D85018;
  v376 = v375 ^ (v374 + 0x4E49DDFA88A4E6DCLL);
  LODWORD(v374) = (((unint64_t)v376 * (unsigned __int128)0x51AuLL) >> 64)
                + 1306 * (v312 ^ (__CFADD__(v374, 0x4E49DDFA88A4E6DCLL) - 1));
  v377 = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1530]) ^ 0x91274EAE));
  LODWORD(v372) = *((unsigned __int8 *)&STACK[0x2920] + (v332 ^ 0x8D2D9467));
  LODWORD(STACK[0x1544]) = v372;
  v201 = __CFADD__(1306 * v376, 0x8C6BA61DC8EB54A4);
  LODWORD(v359) = v377;
  LODWORD(STACK[0x16A4]) = v377;
  LOBYTE(v372) = v280 ^ v377 ^ v304 ^ v324 ^ v372 ^ *(_BYTE *)(v334 + 184);
  LODWORD(v168) = v269 ^ v257;
  LOBYTE(v280) = v269;
  LOBYTE(v376) = v281 ^ v269 ^ v257;
  LOBYTE(v344) = v307 ^ v333;
  LODWORD(STACK[0x1518]) = v307;
  LOBYTE(v372) = v372 ^ 0xE1 ^ (((*(_BYTE *)(v315 + ((71 * (v307 ^ v333 ^ v290 ^ v376)) ^ 0xB1u) + 22623)
                                - 84) ^ 0x29)
                              - 107);
  LODWORD(STACK[0x1890]) = v201 + (_DWORD)v374 + 159283785;
  v378 = v372 == 0;
  LODWORD(v374) = v372 + 2102096451;
  LODWORD(v372) = (v374 ^ 0xEAE22BD7) & (2 * (v374 & 0x1C6)) ^ v374 & 0x1C6;
  v379 = (2 * (v374 ^ 0xEAE2285F)) & 0x398 ^ 0x489 ^ ((2 * (v374 ^ 0xEAE2285F)) ^ 0x90A94B32) & (v374 ^ 0xEAE2285F);
  LODWORD(v372) = (4 * v372) & 0x718 ^ v372 ^ ((4 * v372) ^ 0x1800) & v379;
  v380 = (4 * v379) & 0x6856A798 ^ 0x48042199 ^ ((4 * v379) ^ 0xA15A9E64) & v379;
  LODWORD(v372) = (16 * v372) & 0x6856A790 ^ v372 ^ ((16 * v372) ^ 0x6000) & v380;
  v381 = (16 * v380) & 0x6856A790 ^ 0x68148609 ^ ((16 * v380) ^ 0x856A7990) & v380;
  LODWORD(v372) = v372 ^ ((_DWORD)v372 << 8) & 0x6856A700 ^ (((_DWORD)v372 << 8) ^ 0x260000) & v381;
  LODWORD(v374) = v374 ^ (2
                        * (((v372 ^ 0x68508199) << 16) & 0x68560000 ^ v372 ^ 0x68508199 ^ (((v372 ^ 0x68508199) << 16) ^ 0x27990000) & ((v381 << 8) & 0x68560000 ^ 0x28500000 ^ ((v381 << 8) ^ 0x56A70000) & v381)));
  LODWORD(STACK[0x16B8]) = (385
                          * (((v374 ^ 0xEEC55C66) - 1909524725) ^ ((v374 ^ 0x6FAD5449)
                                                                               + 256311078) ^ ((v374 ^ 0x9351C8DB)
                                                                                             - 205888584))
                          + 1368141543)
                         % ((v314 & 0x51A ^ 0x51A) + (v314 & 0x51A));
  LODWORD(v374) = LODWORD(STACK[0x1870]) + 247037020;
  v382 = ((2 * (v374 ^ 0xBDC5E4CF)) ^ 0x910480E8) & (v374 ^ 0xBDC5E4CF) ^ (2 * (v374 ^ 0xBDC5E4CF)) & 0x40012374;
  LODWORD(v372) = v374 & 0x1BB ^ 0x4C836774 ^ (2 * (v374 & 0x1BB)) & 0xFFFD ^ ((2 * (v374 & 0x1BB)) | 0x800) & (v374 ^ 0xBDC5E4CF);
  LODWORD(v195) = v382 & 0xA130024A;
  LODWORD(v269) = (4 * v382) ^ 0x97B90FCA;
  v382 ^= 0xC824260u;
  LODWORD(v269) = v269 & v382 ^ v195;
  LODWORD(v372) = v372 ^ v195 ^ ((4 * v372) ^ 0x97BD8B9A) & v382;
  v383 = ((16 * v269) ^ 0xEDB0224A) & (v269 ^ 0x4800244);
  LODWORD(v195) = ((16 * v372) ^ 0x2586150A) & (v269 ^ 0x4800244);
  LODWORD(v269) = v269 & 0xA5B0064A;
  v384 = v383 ^ v269;
  LODWORD(v372) = v372 ^ v269 ^ v195;
  LODWORD(v374) = v374 ^ (2
                        * (v372 ^ v384 & 0xA5B0064A ^ (((_DWORD)v372 << 8) ^ 0x26D3724A) & (v384 ^ 0x4800274) ^ (((v384 << 8) ^ 0x25B2464A) & (v384 ^ 0x4800274) ^ v384 & 0xA5B0064A) & 0x25B0064A ^ (((v372 ^ v384 & 0xA5B0064A ^ (((_DWORD)v372 << 8) ^ 0x26D3724A) & (v384 ^ 0x4800274)) << 16) ^ 0xC484064B) & (((v384 << 8) ^ 0x25B2464A) & (v384 ^ 0x4800274) ^ v384 & 0xA5B0064A ^ 0x48030000) ^ (((v372 ^ v384 & 0xA5B0064A ^ (((_DWORD)v372 << 8) ^ 0x26D3724A) & (v384 ^ 0x4800274)) << 16) ^ 0xC484064B) & 0x4C830240));
  LODWORD(v374) = 385
                * (((v374 ^ 0xDA4B6390) - 1059501732) ^ ((v374 ^ 0x7FC8DEAC) + 1700459624) ^ ((v374 ^ 0xCDC3FC6F)
                                                                                            - 682502491))
                + 1368141543;
  LODWORD(v372) = v374 % 0x51A - 1926392729 - ((2 * (v374 % 0x51A)) & 0x8CE);
  LODWORD(STACK[0x1530]) = 385 * LODWORD(STACK[0x1838])
                         - 1306
                         * ((3288643 * (unint64_t)(385 * LODWORD(STACK[0x1838]))) >> 32);
  LODWORD(v374) = STACK[0x1688] & 0x84004329 ^ 0x41920A77 ^ ((STACK[0x1820] & 0x8329 ^ 9)
                                                           + (STACK[0x1820] & 0x8321 ^ 0x51BE8B76)
                                                           - ((STACK[0x1820] & 0x8329 ^ 9) & 0xFFFFFFE7));
  LODWORD(v304) = STACK[0x1834];
  LODWORD(v374) = ((((v304 ^ 0x883B3C40) + 618349257) ^ ((v304 ^ 0x4E4F0278) - 491815695) ^ ((v304 ^ 0x18462B28)
                                                                                           - 1264167519))
                 - 367048096)
                * (v374 + 1809006168)
                - 1559344633 * v374
                - 2051017525;
  v385 = ((2 * (v374 ^ 0x40FDB867)) ^ 0x5A432FF4) & (v374 ^ 0x40FDB867) ^ (2 * (v374 ^ 0x40FDB867)) & 0xAD2197FA;
  LODWORD(v195) = ((4 * (v385 ^ 0xA520900A)) ^ 0xB4865FE8) & (v385 ^ 0xA520900A) ^ (4 * (v385 ^ 0xA520900A)) & 0xAD2197F8;
  LODWORD(v269) = ((16 * (v195 ^ 0x9218012)) ^ 0xD2197FA0) & (v195 ^ 0x9218012) ^ (16 * (v195 ^ 0x9218012)) & 0xAD2197F0;
  LODWORD(v334) = (v374 ^ 0xC9DDAF5D) & (2 * (v374 & 0xEDDC2F9D)) ^ v374 & 0xEDDC2F9D;
  v386 = (v195 ^ 0xA40017E2) & (16 * ((v385 ^ 0x80106F2) & (4 * v334) ^ v334)) ^ (v385 ^ 0x80106F2) & (4 * v334) ^ v334;
  v387 = v386 ^ 0xAD2197FA ^ (v269 ^ 0x8001175A) & (v386 << 8);
  LODWORD(v374) = (*((unsigned __int8 *)&STACK[0x2920]
                   + (v374 ^ (2
                                          * ((v387 << 16) & 0x2D210000 ^ v387 ^ ((v387 << 16) ^ 0x17FA0000) & (((v269 ^ 0x2D20805A) << 8) & 0x2D210000 ^ 0xC200000 ^ (((v269 ^ 0x2D20805A) << 8) ^ 0x21970000) & (v269 ^ 0x2D20805A)))) ^ 0xBDDF0069)
                   % 0x51A) ^ 0x12)
                + 1031979336;
  v388 = (2 * (v374 ^ 0x1FE6AE2C)) & 0x196 ^ 0x14092 ^ ((2 * (v374 ^ 0x1FE6AE2C)) ^ 0x2224632C) & (v374 ^ 0x1FE6AE2C);
  LODWORD(v195) = (4 * v388) & 0xDD9B7194 ^ 0x89923186 ^ ((4 * v388) ^ 0x766DC658) & v388;
  LODWORD(v269) = (16 * v195) & 0xDD9B7190 ^ 0x4086096 ^ ((16 * v195) ^ 0xD9B71960) & v195;
  LODWORD(v334) = (v374 ^ 0x1FE7AF38) & (2 * (v374 & 0x83BA)) ^ v374 & 0x83BA;
  v389 = (4 * v334) & 0x21190 ^ v334 ^ ((4 * v334) | 0x10000) & v388;
  v390 = (16 * v389) & 0x5D9B7190 ^ v389 ^ ((16 * v389) ^ 0x140000) & v195;
  v391 = v390 ^ (v390 << 8) & 0x5D9B7100 ^ ((v390 << 8) ^ 0x11400000) & v269 ^ 0xCC8A3196;
  LODWORD(STACK[0x1524]) = 63
                         * (*(unsigned __int8 *)(v315
                                               + (v374 ^ (2
                                                                      * ((v391 << 16) & 0x5D9B0000 ^ v391 ^ ((v391 << 16) ^ 0x71960000) & (((_DWORD)v269 << 8) & 0x5D9B0000 ^ 0x448A0000 ^ (((_DWORD)v269 << 8) ^ 0x1B710000) & v269))) ^ 0xDA6F3C96)) ^ 9);
  LODWORD(v374) = 71 * (LODWORD(STACK[0x15B0]) ^ v359);
  v392 = v374 + 1830043916;
  LODWORD(v306) = (2 * (v392 ^ 0x2EB23B3F)) & 0xC036A ^ 0x2012A ^ ((2 * (v392 ^ 0x2EB23B3F)) ^ 0x40A442D4) & (v392 ^ 0x2EB23B3F);
  LODWORD(v334) = (4 * v306) & 0xBC5E2368 ^ 0xC062242 ^ ((4 * v306) ^ 0x41388DA8) & v306;
  LODWORD(v307) = (16 * v334) & 0xBC5E2360 ^ 0x381C014A ^ ((16 * v334) ^ 0xC5E236A0) & v334;
  LODWORD(v324) = (v392 & 0x55 | 0x140000 | (2 * (v392 & 0x55)) & 0x7E) ^ (2 * (v392 & 0x55)) & (v392 ^ 0x2EB23B3F);
  LODWORD(v324) = (4 * v324) & 0x500368 ^ v324 ^ ((4 * v324) | 0x200000) & v306;
  LODWORD(v324) = (16 * v324) & 0x3C5E2360 ^ v324 ^ ((16 * v324) ^ 0x5800000) & v334;
  LODWORD(v324) = v324 ^ ((_DWORD)v324 << 8) & 0xBC5E2300 ^ (((_DWORD)v324 << 8) ^ 0x58000000) & v307 ^ 0xA006236A;
  LODWORD(v235) = STACK[0x1358];
  LODWORD(v269) = STACK[0x1858];
  LODWORD(STACK[0x1718]) = LODWORD(STACK[0x1358]) ^ LODWORD(STACK[0x1298]) ^ LODWORD(STACK[0x1858]);
  LODWORD(v324) = *(unsigned __int8 *)(v315
                                     + (v392 ^ (2
                                              * (((_DWORD)v324 << 16) & 0x3C5E0000 ^ v324 ^ (((_DWORD)v324 << 16) ^ 0x236A0000) & (((_DWORD)v307 << 8) & 0xBC5E0000 ^ 0x205C0000 ^ (((_DWORD)v307 << 8) ^ 0x5E230000) & v307))) ^ 0xAAC45E81));
  LODWORD(STACK[0x1858]) = LODWORD(STACK[0x1310]) ^ v269;
  LODWORD(STACK[0x15B0]) = v324 ^ v374 ^ 0xA5;
  LOBYTE(v324) = LODWORD(STACK[0x17A8]) ^ LODWORD(STACK[0x1360]) ^ STACK[0x17C0] ^ LODWORD(STACK[0x160C]);
  LODWORD(STACK[0x1820]) = STACK[0x1300] ^ 0xFFFFFFA5 ^ *(unsigned __int8 *)(v315 + STACK[0x1328]);
  LODWORD(v373) = STACK[0x1338];
  STACK[0x1720] = (LODWORD(STACK[0x1330]) ^ LODWORD(STACK[0x1338]));
  LODWORD(v374) = STACK[0x16EC];
  LODWORD(STACK[0x17A8]) = v373 ^ LODWORD(STACK[0x16EC]);
  LODWORD(STACK[0x16EC]) = v374 ^ LODWORD(STACK[0x12F0]);
  LODWORD(STACK[0x1838]) = LODWORD(STACK[0x1320]) ^ v235 ^ *((unsigned __int8 *)&STACK[0x2920]
                                                           + (v372 ^ 0x8D2D9467));
  LODWORD(STACK[0x1870]) = LODWORD(STACK[0x1318]) ^ LODWORD(STACK[0x1868]);
  LODWORD(STACK[0x1688]) = 385 * LODWORD(STACK[0x1680])
                         - 1306
                         * ((3288643 * (unint64_t)(385 * LODWORD(STACK[0x1680]))) >> 32);
  LODWORD(STACK[0x1680]) = LODWORD(STACK[0x130C]) ^ LODWORD(STACK[0x1288]);
  LODWORD(v374) = (502 - LODWORD(STACK[0x1698])) & 0xFFFFFFC1 ^ 0x85C528FC ^ (v304 ^ 0x8268C92E) & (LODWORD(STACK[0x1698])
                                                                                                  - 503);
  LODWORD(v374) = ((v374 - ((2 * v374) & 0x78) + 316) & 0x181 ^ 0x180) * (LODWORD(STACK[0x16F0]) + 521);
  LODWORD(STACK[0x1698]) = 385 * v324
                         + 200585
                         - 1306
                         * ((3288643 * (unint64_t)(385 * v324 + 200585)) >> 32);
  LODWORD(STACK[0x160C]) = *((unsigned __int8 *)&STACK[0x2920]
                           + (v374 - 1306 * ((3288643 * (unint64_t)v374) >> 32))) ^ LODWORD(STACK[0x1220]);
  LOBYTE(v324) = STACK[0x15F8] & 0xCF;
  LOBYTE(v374) = (v324 ^ 0x84) - ((2 * (v324 ^ 0x84)) & 0x87) - 13;
  LODWORD(STACK[0x16F0]) = 63
                         * (*(unsigned __int8 *)(v315
                                               + ((v344 ^ LODWORD(STACK[0x1660]) ^ v280 ^ ((((v374 & 0xBE ^ 0xA) + (v374 ^ 0xB5) - ((v374 ^ 0xB5) & 0xBE)) ^ 0xB6) + (v324 ^ 5))) ^ 0xDDu)
                                               + 41218) ^ 9);
  LODWORD(v235) = STACK[0x1528];
  LODWORD(v324) = ((71 * LODWORD(STACK[0x1528])) ^ 0xB1) + 1322697389;
  LODWORD(v374) = ((2 * (v324 & 0x1B2)) & 0x244 | v324 & 0x1B2) ^ ((2 * (v324 & 0x1B2)) | 0x10000) & (v324 ^ 0xF52F6B74);
  LODWORD(v304) = (2 * (v324 ^ 0xF52F6B74)) & 0x12C6 ^ 0x4242 ^ ((2 * (v324 ^ 0xF52F6B74)) ^ 0x8809A98C) & (v324 ^ 0xF52F6B74);
  LODWORD(v374) = (4 * v374) & 0x4406FEC0 ^ v374 ^ (4 * v374) & v304;
  LODWORD(v304) = (4 * v304) & 0x4406FEC4 ^ 0x440404C6 ^ ((4 * v304) ^ 0x101BFB18) & v304;
  LODWORD(v374) = (16 * v374) & 0x4406FEC0 ^ v374 ^ ((16 * v374) ^ 0x280000) & v304;
  LODWORD(v304) = (16 * v304) & 0x4406FEC0 ^ 0x4001286 ^ ((16 * v304) ^ 0x406FEC60) & v304;
  LODWORD(v374) = v374 ^ ((_DWORD)v374 << 8) & 0x4406FE00 ^ (((_DWORD)v374 << 8) ^ 0x2800000) & v304;
  LOBYTE(v324) = ((*(_BYTE *)(v315
                            + (v324 ^ (2
                                                   * (((v374 ^ 0x44047EC6) << 16) & 0x44060000 ^ v374 ^ 0x44047EC6 ^ (((v374 ^ 0x44047EC6) << 16) ^ 0x7EC60000) & (((_DWORD)v304 << 8) & 0x44060000 ^ (((_DWORD)v304 << 8) ^ 0x6FE0000) & v304 ^ 0x40000000))) ^ 0xB128683E))
                 - 84) ^ 0x29)
               - (v376 & 0x9E)
               + (v376 | 0x61)
               + 52;
  LODWORD(STACK[0x1660]) = v168 ^ v290;
  LODWORD(v324) = ((-3 * (v168 ^ v290 ^ v324)) ^ 0xFD) + 1946987765;
  LODWORD(v376) = (v324 ^ 0xA3960B26) & (2 * (v324 & 0x1B7)) ^ v324 & 0x1B7;
  LODWORD(v374) = (2 * (v324 ^ 0xA396080C)) & 0x143BA ^ 0x2089 ^ ((2 * (v324 ^ 0xA396080C)) ^ 0x508A8576) & (v324 ^ 0xA396080C);
  LODWORD(v376) = (4 * v376) & 0x7B8 ^ v376 ^ ((4 * v376) | 0x7B000) & v374;
  LODWORD(v374) = (4 * v374) & 0x2865E7B8 ^ 0x8606113 ^ ((4 * v374) ^ 0xA1979EEC) & v374;
  LODWORD(v376) = (16 * v376) & 0x2865E7B0 ^ v376 ^ ((16 * v376) ^ 0x44C000) & v374;
  LODWORD(v374) = (16 * v374) & 0x2865E7B0 ^ 0x2821840B ^ ((16 * v374) ^ 0x865E7BB0) & v374;
  LODWORD(v376) = v376 ^ ((_DWORD)v376 << 8) & 0x2865E700 ^ (((_DWORD)v376 << 8) ^ 0x408C0000) & v374;
  LODWORD(v324) = *(unsigned __int8 *)(v315
                                     + (v324 ^ 0x9B7A20C1 ^ (2
                                                                         * (((v376 ^ 0x28216BBB) << 16) & 0x28650000 ^ v376 ^ 0x28216BBB ^ (((v376 ^ 0x28216BBB) << 16) ^ 0x67BB0000) & (((_DWORD)v374 << 8) & 0x28650000 ^ (((_DWORD)v374 << 8) ^ 0x65E70000) & v374 ^ 0x8000000)))));
  LODWORD(v324) = ((v324 >> 7) | (2 * v324)) ^ (((v324 >> 7) | (2 * v324)) >> 6) ^ (((v324 >> 7) | (2 * v324)) >> 4) ^ 0xFFFFFFD7;
  v393 = STACK[0x1750];
  LODWORD(v374) = 71 * (v168 ^ v290 ^ v235);
  v394 = v374 ^ 0xFFFFFFA5 ^ *(unsigned __int8 *)(v315 + v374 + 22881);
  LODWORD(v324) = LODWORD(STACK[0x1750]) ^ LODWORD(STACK[0x1770]) ^ LODWORD(STACK[0x1540]) ^ ((v324 >> 2) | ((_DWORD)v324 << 6)) ^ v221;
  LODWORD(v374) = ((LODWORD(STACK[0x16C8]) ^ LODWORD(STACK[0x15E4]) ^ LODWORD(STACK[0x1778]) ^ LODWORD(STACK[0x15E8]) ^ (63 * (*(unsigned __int8 *)(v315 + (v324 ^ 0xB3u) + 4174) ^ v324 ^ 0x71)))
                 * (v374 & 0xFFFFFFFD ^ 0xB8 | v374 & 0xFFFFFFFD ^ 0x45)) ^ 0xFD;
  LODWORD(v280) = (68 - v374) & 0x71;
  LODWORD(v374) = v374 + 1269567547;
  LODWORD(v280) = (2 * v280) & 0xFFFFFFDF ^ v280 ^ ((2 * v280) ^ 0xE2) & (v374 ^ 0xD07C7EB6);
  LODWORD(v281) = (2 * (v374 ^ 0xD07C7EB6)) & 0x82C6 ^ 0x84241 ^ ((2 * (v374 ^ 0xD07C7EB6)) ^ 0x8850658E) & (v374 ^ 0xD07C7EB6);
  LODWORD(v280) = (4 * v280) & 0x6428F2C4 ^ v280 ^ ((4 * v280) ^ 0x3002CC) & v281;
  LODWORD(v281) = (4 * v281) & 0x6428F2C4 ^ 0x640830C3 ^ ((4 * v281) ^ 0x9083CB1C) & v281;
  LODWORD(v280) = (16 * v280) & 0x6428F2C0 ^ v280 ^ ((16 * v280) ^ 0x2C02770) & v281;
  LODWORD(v281) = (16 * v281) & 0x6428F2C0 ^ 0x2420D287 ^ ((16 * v281) ^ 0x428F2C70) & v281;
  LODWORD(v280) = v280 ^ ((_DWORD)v280 << 8) & 0x6428F200 ^ (((_DWORD)v280 << 8) ^ 0x2C203700) & v281;
  LODWORD(v374) = *(unsigned __int8 *)(v315
                                     + (v374 ^ (2
                                                            * (((v280 ^ 0x4024E0F0) << 16) & 0x64280000 ^ v280 ^ 0x4024E0F0 ^ (((v280 ^ 0x4024E0F0) << 16) ^ 0x72C70000) & (((_DWORD)v281 << 8) & 0x64280000 ^ 0x44080000 ^ (((_DWORD)v281 << 8) ^ 0x28F20000) & v281))) ^ 0xBC0569FF));
  LODWORD(v374) = ((2 * v374) >> 6) ^ (((2 * (_DWORD)v374) & 0xFEu) >> 4) ^ ((v374 >> 7) & 0xFFFFFE01 | (2 * v374)) ^ 0xFFFFFFD7;
  LODWORD(v359) = STACK[0x1558];
  LODWORD(v280) = (v359 ^ 0x343C91FF) & (2 * (v359 & 0xB4BC99F8)) ^ v359 & 0xB4BC99F8;
  LODWORD(v281) = ((2 * (v359 ^ 0x7515931F)) ^ 0x835215CE) & (v359 ^ 0x7515931F) ^ (2 * (v359 ^ 0x7515931F)) & 0xC1A90AE6;
  LODWORD(v280) = (v281 ^ 0x810900C1) & (4 * v280) ^ v280;
  LODWORD(v281) = ((4 * (v281 ^ 0x40A90A21)) ^ 0x6A42B9C) & (v281 ^ 0x40A90A21) ^ (4 * (v281 ^ 0x40A90A21)) & 0xC1A90AE4;
  LODWORD(v280) = (v281 ^ 0xA00A83) & (16 * v280) ^ v280;
  LODWORD(v281) = ((16 * (v281 ^ 0xC1090063)) ^ 0x1A90AE70) & (v281 ^ 0xC1090063) ^ (16 * (v281 ^ 0xC1090063)) & 0xC1A90AE0;
  LODWORD(v280) = v280 ^ 0xC1A90AE7 ^ (v281 ^ 0x800A87) & ((_DWORD)v280 << 8);
  v395 = (v374 >> 2) | ((_BYTE)v374 << 6);
  LODWORD(STACK[0x1868]) = LODWORD(STACK[0x1558]) ^ (2
                                                   * (((_DWORD)v280 << 16) & 0x41A90000 ^ v280 ^ (((_DWORD)v280 << 16) ^ 0xAE70000) & (((v281 ^ 0xC1290087) << 8) & 0xC1A90000 ^ 0x40A10000 ^ (((v281 ^ 0xC1290087) << 8) ^ 0x290A0000) & (v281 ^ 0xC1290087))));
  LODWORD(v374) = STACK[0x1538];
  LODWORD(v344) = (2 * (v374 & 0xA94130C2)) & (v374 ^ 0x92933DF) ^ v374 & 0xA94130C2 ^ ((2 * (v374 & 0xA94130C2)) & 0x104 | 0x400200);
  LODWORD(v281) = (2 * (v374 ^ 0x92933DF)) & 0xA068031C ^ 0xA0280105 ^ ((2 * (v374 ^ 0x92933DF)) ^ 0x40D0063A) & (v374 ^ 0x92933DF);
  LODWORD(v344) = (4 * v344) & 0xA0680318 ^ v344 ^ ((4 * v344) ^ 0x1000800) & v281;
  LODWORD(v281) = (4 * v281) & 0xA068031C ^ 0x20480309 ^ ((4 * v281) ^ 0x81A00C74) & v281;
  LODWORD(v344) = (16 * v344) & 0xA0680310 ^ v344 ^ ((16 * v344) ^ 0x4002000) & v281;
  LODWORD(v281) = (16 * v281) & 0xA0680310 ^ 0xA068020D ^ ((16 * v281) ^ 0x68031D0) & v281;
  LODWORD(v344) = v344 ^ 0xA028011D ^ ((_DWORD)v344 << 8) & 0xA0680300 ^ (((_DWORD)v344 << 8) ^ 0x40020000) & v281;
  v396 = STACK[0x1468];
  LODWORD(STACK[0x1834]) = LODWORD(STACK[0x1538]) ^ (2
                                                   * (((_DWORD)v344 << 16) & 0x20680000 ^ v344 ^ (((_DWORD)v344 << 16) ^ 0x31D0000) & (((_DWORD)v281 << 8) & 0xA0680000 ^ 0x680000 ^ (((_DWORD)v281 << 8) ^ 0x68030000) & v281)));
  LODWORD(v359) = STACK[0x1890];
  LODWORD(v376) = (v359 ^ 0xE6F1C4C3) & (2 * (v359 & 0xF6818913)) ^ v359 & 0xF6818913;
  LODWORD(v373) = ((2 * (v359 ^ 0x22F0C4C5)) ^ 0xA8E29BAC) & (v359 ^ 0x22F0C4C5) ^ (2 * (v359 ^ 0x22F0C4C5)) & 0xD4714DD6;
  LODWORD(v376) = (v373 ^ 0x80000884) & (4 * v376) ^ v376;
  LODWORD(v373) = ((4 * (v373 ^ 0x54114452)) ^ 0x51C53758) & (v373 ^ 0x54114452) ^ (4 * (v373 ^ 0x54114452)) & 0xD4714DD4;
  LODWORD(v376) = (v373 ^ 0x50410556) & (16 * v376) ^ v376;
  LODWORD(v373) = ((16 * (v373 ^ 0x84304886)) ^ 0x4714DD60) & (v373 ^ 0x84304886) ^ (16 * (v373 ^ 0x84304886)) & 0xD4714DD0;
  LODWORD(v376) = v376 ^ 0xD4714DD6 ^ (v373 ^ 0x44104D96) & ((_DWORD)v376 << 8);
  v397 = ((_DWORD)v376 << 16) & 0x54710000 ^ v376 ^ (((_DWORD)v376 << 16) ^ 0x4DD60000) & (((v373 ^ 0x90610096) << 8) & 0x54710000 ^ 0x4300000 ^ (((v373 ^ 0x90610096) << 8) ^ 0x714D0000) & (v373 ^ 0x90610096));
  v398 = v396;
  LODWORD(v373) = (LODWORD(STACK[0x1560]) ^ LODWORD(STACK[0x1798]) ^ *(_BYTE *)(v396 + 28) ^ LODWORD(STACK[0x16F0])) ^ 0x38;
  LODWORD(STACK[0x16F0]) = 385 * v373
                         + 200585
                         - 1306 * ((3288643 * (unint64_t)(385 * v373 + 200585)) >> 32);
  v399 = *((unsigned __int8 *)&STACK[0x2920]
         + (LODWORD(STACK[0x1554]) - 1306 * ((3288643 * (unint64_t)LODWORD(STACK[0x1554])) >> 32)));
  v400 = v399 ^ 0x9B;
  if (v378)
    v400 = -101;
  STACK[0x1548] = v399;
  v401 = STACK[0x1810];
  v402 = LODWORD(STACK[0x1810]) ^ LODWORD(STACK[0x17BC]) ^ LODWORD(STACK[0x1664]) ^ v393 ^ (v394 - 107) ^ *(unsigned __int8 *)(v396 + (v400 & (unint64_t)~(_DWORD)v399 | v399 & 0x9B));
  v403 = v402 ^ 0x2E;
  v404 = (v403 + 527530333) ^ 0xC06DA3D4;
  v405 = ((2 * ((v403 + 527530333) & 0x2F1 ^ 0x20E32525)) ^ 0x41044A4A) & v404 ^ (v403 + 527530333) & 0x2F1 ^ 0x20E32525 ^ ((2 * ((v403 + 527530333) & 0x2F1 ^ 0x20E32525)) & 0x420520 | 0x12001);
  v406 = ((2 * v404) ^ 0x41044A4A) & v404 ^ ((2 * v404) & 0x20201524 | 0x800001);
  v407 = v405 ^ v406 & 0xF14C043 ^ ((4 * v405) ^ 0x8DD714D2) & (v406 ^ 0x430001);
  v408 = ((4 * v406) ^ 0xE5BC046) & (v406 ^ 0x430001) ^ v406 & 0xF14C043;
  v409 = v407 ^ v408 & 0xF57C043 ^ ((16 * v407) ^ 0x1649213) & (v408 ^ 0x430005);
  v410 = ((16 * v408) ^ 0xB67C053) & (v408 ^ 0x430005) ^ v408 & 0xF57C043;
  v411 = v409 ^ v410 & 0xF57C043 ^ ((v409 << 8) ^ 0xAF62E443) & (v410 ^ 0x430025);
  v412 = ((v410 << 8) ^ 0x4C57C143) & (v410 ^ 0x430025) ^ v410 & 0xF57C043;
  v413 = STACK[0x1738];
  v414 = STACK[0x17EC];
  v415 = STACK[0x1770];
  v416 = *(_BYTE *)(v315
                  + ((((LOBYTE(STACK[0x16B0]) ^ v395) >> 3) | (32
                                                                                               * (LOBYTE(STACK[0x16B0]) ^ v395))) ^ 0x6Eu ^ ((((LOBYTE(STACK[0x16B0]) ^ v395) >> 3) & 0xF3 ^ 0xF3) + (((LOBYTE(STACK[0x16B0]) ^ v395) >> 3) & 0xF3)))
                  + 1665)
       - 38;
  v417 = 385 * ((v416 ^ (v416 >> 5) ^ (v416 >> 4)) ^ 0xE2) + 200585;
  LODWORD(STACK[0x1898]) = v417 - 1306 * ((3288643 * (unint64_t)v417) >> 32);
  LOBYTE(v417) = *(_BYTE *)(v315
                          + ((v403 + 527530333) ^ (2
                                                 * (v411 ^ v412 & 0xF57C043 ^ ((v411 << 16) ^ 0x3A72C043) & (v412 ^ 0x20A00000) ^ ((v411 << 16) ^ 0x3A72C043) & 0x20E30001)) ^ 0xA1CEFCB9)) ^ v402;
  v418 = ((((((_BYTE)v417 << 6) - (v417 ^ 0xEC)) + 521) & 0x81818181)
        + ((502 - (((_BYTE)v417 << 6) - (v417 ^ 0xEC))) & 0xFFFFFF81))
       * ((((_BYTE)v417 << 6) - (v417 ^ 0xEC)) + 521);
  LODWORD(STACK[0x17BC]) = v418 - 1306 * ((3288643 * (unint64_t)v418) >> 32);
  v419 = 385 * (v415 ^ (LODWORD(STACK[0x15B0]) - 107) ^ *(_BYTE *)(v398 + 138)) + 200585;
  v420 = v419 - 1306 * ((3288643 * (unint64_t)v419) >> 32);
  LODWORD(STACK[0x1798]) = v420 - 1926392729 - ((2 * v420) & 0x8CE);
  v421 = *(unsigned __int8 *)(v315 + ((-3 * *(_BYTE *)(v398 + 233)) ^ 0xFDu) + 40108);
  v422 = LODWORD(STACK[0x1890]) ^ (2 * v397);
  v423 = ((v421 >> 7) | (2 * v421)) ^ (((v421 >> 7) | (2 * v421)) >> 6) ^ (((v421 >> 7) | (2 * v421)) >> 4) ^ 0xFFFFFFD7;
  v424 = ((v401 ^ LODWORD(STACK[0x15AC]) ^ v414 ^ v413 ^ LODWORD(STACK[0x1780]) ^ ((v423 >> 2) | ((_BYTE)v423 << 6)) ^ v393) ^ 0x38)
       + 741447223;
  v425 = (2 * (v424 & 0x1D2)) & (v424 ^ 0xFA9A0D5E) ^ v424 & 0x1D2 ^ ((2 * (v424 & 0x1D2)) & 0x284 | 0x4008);
  v426 = (2 * (v424 ^ 0xFA9A0D5E)) & 0x68C ^ 0x284 ^ ((2 * (v424 ^ 0xFA9A0D5E)) ^ 0x52A88918) & (v424 ^ 0xFA9A0D5E);
  v427 = (4 * v425) & 0x29546688 ^ v425 ^ ((4 * v425) ^ 0x11820) & v426;
  v428 = (4 * v426) & 0x2954668C ^ 0x804648C ^ ((4 * v426) ^ 0x84019A30) & v426;
  v429 = (16 * v427) & 0x29546680 ^ v427 ^ ((16 * v427) ^ 0x46080) & v428;
  v430 = (16 * v428) & 0x29546680 ^ 0x2810060C ^ ((16 * v428) ^ 0x954668C0) & v428;
  v431 = v429 ^ (v429 << 8) & 0x29546600 ^ ((v429 << 8) ^ 0x4268800) & v430;
  v432 = v424 ^ (2
               * (((v431 ^ 0x29544004) << 16) & 0x29540000 ^ v431 ^ 0x29544004 ^ (((v431 ^ 0x29544004) << 16) ^ 0x668C0000) & ((v430 << 8) & 0x29540000 ^ 0x29100000 ^ ((v430 << 8) ^ 0x54660000) & v430)));
  v433 = 385
       * (((v432 ^ 0xF52F200A) + 1184099673) ^ ((v432 ^ 0x71958407) - 1037481642) ^ ((v432 ^ 0x45D402C7) - 160903274))
       + 1578413535;
  v434 = (v433 ^ 0xEA67C880) & (2 * (v433 & 0xF3778108)) ^ v433 & 0xF3778108;
  v435 = ((2 * (v433 ^ 0xEC7C890)) ^ 0xFB609330) & (v433 ^ 0xEC7C890) ^ (2 * (v433 ^ 0xEC7C890)) & 0xFDB04998;
  v436 = (v435 ^ 0xD9200000) & (4 * v434) ^ v434;
  v437 = ((4 * (v435 ^ 0x4904888)) ^ 0xF6C12660) & (v435 ^ 0x4904888) ^ (4 * (v435 ^ 0x4904888)) & 0xFDB04998;
  v438 = (v437 ^ 0xF4800000) & (16 * v436) ^ v436;
  v439 = ((16 * (v437 ^ 0x9304998)) ^ 0xDB049980) & (v437 ^ 0x9304998) ^ (16 * (v437 ^ 0x9304998)) & 0xFDB04990;
  v440 = v438 ^ 0xFDB04998 ^ (v439 ^ 0xD9000918) & (v438 << 8);
  v441 = v433 ^ (2
               * ((v440 << 16) & 0x7DB00000 ^ v440 ^ ((v440 << 16) ^ 0x49980000) & (((v439 ^ 0x24B04018) << 8) & 0x7DB00000 ^ 0x4DB00000 ^ (((v439 ^ 0x24B04018) << 8) ^ 0x30490000) & (v439 ^ 0x24B04018)))) ^ 0x9B371238;
  LODWORD(STACK[0x17F0]) = LODWORD(STACK[0x1858]) ^ 0xFFFFFFD9;
  v442 = STACK[0xDCC];
  LODWORD(STACK[0x15E8]) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1868]) ^ 0x36AC8C36u));
  LODWORD(STACK[0x1790]) = *((unsigned __int8 *)&STACK[0x2920] + (LODWORD(STACK[0x1834]) ^ 0xE98136F8));
  LODWORD(STACK[0x1644]) = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16F0]));
  v443 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x1898]));
  LODWORD(STACK[0x1660]) = LODWORD(STACK[0x1838]) ^ v442;
  v444 = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x15CC]));
  STACK[0x1780] = *((unsigned __int8 *)&STACK[0x2920] + LODWORD(STACK[0x16B8]));
  STACK[0x1170] = *((unsigned __int8 *)&STACK[0x2920] + (v422 ^ 0xD6C312BF));
  LODWORD(STACK[0xDA4]) -= 88;
  LODWORD(STACK[0xDCC]) = v442 - 107;
  LODWORD(STACK[0x1820]) = v444 - 45;
  LODWORD(STACK[0x1680]) = *((unsigned __int8 *)&STACK[0x2920] + v441 % 0x51A);
  v445 = LODWORD(STACK[0x127C]) + 119;
  LODWORD(STACK[0x1810]) = v443 + 83;
  LODWORD(STACK[0x1798]) = v445 ^ 0x31;
  v446 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x18C0] + 8 * SLODWORD(STACK[0x16F8])) - 8);
  LODWORD(STACK[0x1400]) = STACK[0xD3C];
  LODWORD(STACK[0x1530]) = STACK[0xBFC];
  LODWORD(STACK[0x1528]) = STACK[0xCE4];
  LODWORD(STACK[0x1524]) = STACK[0xD38];
  LODWORD(STACK[0x1518]) = STACK[0xD34];
  LODWORD(STACK[0x1890]) = STACK[0x17B0];
  return v446();
}

uint64_t sub_1003A238C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  BOOL v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t (*v13)(void);
  int v14;

  LODWORD(STACK[0x1748]) = v5 ^ 0xF4169D1B;
  v6 = LODWORD(STACK[0x1544]) == LODWORD(STACK[0x126C]);
  LODWORD(STACK[0x1868]) = (LODWORD(STACK[0x1860]) ^ 0x72D26B98) + 1;
  v7 = STACK[0x16B8];
  LODWORD(STACK[0x1500]) = v4 - 20154;
  LODWORD(STACK[0x1898]) = (LODWORD(STACK[0x1560]) ^ LODWORD(STACK[0x1598]))
                         - 1926392729
                         - ((2 * (LODWORD(STACK[0x1560]) ^ LODWORD(STACK[0x1598]))) & 0x1A5B28CE);
  v8 = STACK[0x14B8];
  LODWORD(STACK[0x10A0]) = STACK[0x14B8] & 0xF ^ 7;
  v9 = STACK[0x1154];
  LODWORD(STACK[0x1058]) = STACK[0x1154] & 0xC ^ 4;
  LODWORD(STACK[0x1054]) = v9 & 0x13 ^ 3;
  v10 = STACK[0x10C8];
  LODWORD(STACK[0xD1C]) = STACK[0x10C8] & 9 ^ 1;
  LODWORD(STACK[0xD18]) = v10 & 0x16 ^ 6;
  LODWORD(STACK[0x10B4]) = v9 & 0x17 ^ 7;
  LODWORD(STACK[0x1320]) = v8 & 0xC ^ 4;
  LODWORD(STACK[0x1318]) = v8 & 0x13 ^ 3;
  v11 = STACK[0x1120];
  LODWORD(STACK[0xBD0]) = STACK[0x1120] & 0x17 ^ 7;
  LODWORD(STACK[0x10C4]) = v8 & a4 ^ 1;
  LODWORD(STACK[0x10C0]) = v8 & 0xE ^ 6;
  LODWORD(STACK[0xCDC]) = v11 & 0x1B ^ 3;
  LODWORD(STACK[0xD54]) = v10 & 0x1C ^ 4;
  LODWORD(STACK[0x1858]) = v9 & 0x1B ^ 3;
  LODWORD(STACK[0xCB0]) = v8 & 0x1D ^ 5;
  LODWORD(STACK[0x15C0]) = v9 & 0x1C ^ 4;
  LODWORD(STACK[0x1050]) = v10 & 0x1D ^ 5;
  LODWORD(STACK[0x1708]) = v10 & 0xE ^ 6;
  LODWORD(STACK[0x1650]) = v10 & a4 ^ 1;
  LODWORD(STACK[0xD2C]) = v9 & 0xE ^ 6;
  v12 = STACK[0x1790];
  LODWORD(STACK[0xD28]) = STACK[0x1790] & a4 ^ 1;
  LODWORD(STACK[0x17EC]) = v11 & 0x19 ^ 1;
  LODWORD(STACK[0xD30]) = v10 & 0x17 ^ 7;
  LODWORD(STACK[0x13F8]) = v8 & 0x1B ^ 3;
  LODWORD(STACK[0xCA8]) = v9 & 0x1A ^ 2;
  LODWORD(STACK[0x1438]) = LODWORD(STACK[0x1420]) ^ 0x160A5CED;
  LODWORD(STACK[0xCC0]) = v10 & 0xB ^ 3;
  LODWORD(STACK[0xCBC]) = v10 & 0x14 ^ 4;
  LODWORD(STACK[0xCF4]) = v10 & 0x15 ^ 5;
  LODWORD(STACK[0xCF0]) = v10 & 0xA ^ 2;
  LODWORD(STACK[0x1410]) = v11 & 0x1C ^ 4;
  LODWORD(STACK[0x15F0]) = v8 & 0xA ^ 2;
  LODWORD(STACK[0x13C0]) = v8 & 0x15 ^ 5;
  LODWORD(STACK[0xDA0]) = v9 & 0x1D ^ 5;
  LODWORD(STACK[0x1074]) = v9 & 0xF ^ 7;
  LODWORD(STACK[0x1330]) = v11 & 0xE ^ 6;
  LODWORD(STACK[0x1328]) = v11 & a4 ^ 1;
  LODWORD(STACK[0x13B4]) = v9 & 0x19 ^ 1;
  LODWORD(STACK[0x1380]) = v10 & 0x1E ^ 6;
  LODWORD(STACK[0x1370]) = v9 & 0x16 ^ 6;
  LODWORD(STACK[0x1338]) = v9 & 9 ^ 1;
  LODWORD(STACK[0x139C]) = v8 & 0x12 ^ 2;
  LODWORD(STACK[0x1368]) = v8 & 0xD ^ 5;
  LODWORD(STACK[0x1890]) = v8 & 0x1F ^ 7;
  LODWORD(STACK[0x1818]) = v10 & 0xC ^ 4;
  LODWORD(STACK[0x1800]) = v10 & 0x13 ^ 3;
  LODWORD(STACK[0x1360]) = v8 & 0x19 ^ 1;
  LODWORD(STACK[0xC10]) = v11 & 0x14 ^ 4;
  LODWORD(STACK[0xCC4]) = v11 & 0xB ^ 3;
  LODWORD(STACK[0x1490]) = v10 & 0x12 ^ 2;
  LODWORD(STACK[0x1480]) = v10 & 0xD ^ 5;
  LODWORD(STACK[0x1840]) = ~v12 & 4;
  LODWORD(STACK[0xCA4]) = ~v12 & 5;
  LODWORD(STACK[0x1068]) = v12 & 0x10;
  LODWORD(STACK[0xBCC]) = v12 & 0x14 ^ 4;
  LODWORD(STACK[0xBC8]) = v9 & 0xB ^ 3;
  LODWORD(STACK[0x16F0]) = v8 & 0x17 ^ 7;
  LODWORD(STACK[0x1080]) = v8 & 0x1E ^ 6;
  LODWORD(STACK[0x1428]) = v9 & 0x1F ^ 7;
  LODWORD(STACK[0x13D0]) = v9 & 0xD ^ 5;
  LODWORD(STACK[0x13CC]) = v9 & 0x12 ^ 2;
  LODWORD(STACK[0x14A8]) = v8 & 0x1C ^ 4;
  v13 = *(uint64_t (**)(void))(STACK[0x18C0] + 8 * (v4 - 3538));
  LODWORD(STACK[0x1450]) = STACK[0x13E0];
  LODWORD(STACK[0x1420]) = STACK[0x1418];
  v14 = STACK[0x147C];
  if (!v6)
    v14 = -1926392729;
  LODWORD(STACK[0x14C8]) = v14;
  LODWORD(STACK[0x1098]) = v8 & 0x10;
  LODWORD(STACK[0x10D0]) = v9 & 8;
  LODWORD(STACK[0xCD8]) = ~v11 & 4;
  LODWORD(STACK[0xD50]) = ~v10 & 3;
  LODWORD(STACK[0xCAC]) = ~(_DWORD)v8 & 2;
  LODWORD(STACK[0x1520]) = ~v9 & 3;
  LODWORD(STACK[0x104C]) = ~v10 & 2;
  LODWORD(STACK[0xC54]) = ~(_DWORD)v8 & 7;
  LODWORD(STACK[0xC50]) = v8 & 0x18;
  LODWORD(STACK[0x1600]) = ~v11 & 6;
  LODWORD(STACK[0xD24]) = v10 & 8;
  LODWORD(STACK[0x13E0]) = ~(_DWORD)v8 & 4;
  LODWORD(STACK[0x1390]) = ~v11 & 3;
  LODWORD(STACK[0x1350]) = ~v10 & 7;
  LODWORD(STACK[0x1348]) = v10 & 0x18;
  LODWORD(STACK[0xD9C]) = ~v9 & 2;
  LODWORD(STACK[0x13A0]) = ~v9 & 6;
  LODWORD(STACK[0x13F0]) = (v10 & 1) == 0;
  LODWORD(STACK[0xD44]) = v9 & 0x18;
  LODWORD(STACK[0xD40]) = ~v9 & 7;
  LODWORD(STACK[0x1358]) = ~(_DWORD)v8 & 6;
  LODWORD(STACK[0x1730]) = v8 & 8;
  LODWORD(STACK[0xFE0]) = ~v11 & 7;
  LODWORD(STACK[0x1078]) = (v8 & 1) == 0;
  LODWORD(STACK[0xBDC]) = ~v11 & 5;
  LODWORD(STACK[0x1498]) = ~(_DWORD)v8 & 3;
  LODWORD(STACK[0x14F8]) = STACK[0x1760];
  LODWORD(STACK[0x1418]) = v7;
  LODWORD(STACK[0x116C]) = STACK[0x10A4];
  LODWORD(STACK[0x1570]) = v7;
  return v13();
}

uint64_t sub_1003A28E4(int a1, int a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;

  v18 = (((v11 ^ 0x50BA6819) - 1354393625) ^ ((v11 ^ 0xEEC387BF) + 289175617) ^ ((a6 ^ 0xB924EFF8)
                                                                               + (v11 ^ 0x33547BC1)
                                                                               + 327604251))
      - 1567279155;
  v19 = (v18 ^ 0xE09D1FA7) & (2 * (v18 & 0xEA985FA8)) ^ v18 & 0xEA985FA8;
  v20 = ((2 * (v18 ^ 0x70BD99A7)) ^ 0x344B8C1E) & (v18 ^ 0x70BD99A7) ^ (2 * (v18 ^ 0x70BD99A7)) & (a7 + 14);
  v21 = v20 ^ 0x8A244201;
  v22 = (v20 ^ 0x10058401) & (4 * v19) ^ v19;
  v23 = ((4 * v21) ^ 0x6897183C) & v21 ^ (4 * v21) & (a7 + 12);
  v24 = (v23 ^ 0x8050003) & (16 * v22) ^ v22;
  v25 = ((16 * (v23 ^ 0x9220C603)) ^ 0xA25C60F0) & (v23 ^ 0x9220C603) ^ (16 * (v23 ^ 0x9220C603)) & a7;
  v26 = v24 ^ (a7 + 15) ^ (v25 ^ 0x8204400F) & (v24 << 8);
  v27 = v18 ^ (2
             * ((v26 << 16) & v7 ^ v26 ^ ((v26 << 16) ^ 0x460F0000) & (((v25 ^ 0x1821860F) << 8) & v7 ^ 0x1A210000 ^ (((v25 ^ 0x1821860F) << 8) ^ 0x25C60000) & (v25 ^ 0x1821860F))));
  v28 = 385 * (((v27 ^ 0xF1D72476) + 1507630169) ^ ((v27 ^ 0x90A3049C) + 950582451) ^ ((v27 ^ 0xBBADF35C) + 329665395))
      + 1368141543;
  v29 = *((unsigned __int8 *)&STACK[0x2920] + ((v28 % 0x51A + v12 - ((2 * (v28 % 0x51A)) & 0x8CE)) ^ v12));
  v30 = -651846365 * v29;
  v31 = (306920006 * v29) & 0x1A5B28CE;
  v32 = -651846365 * v29 + v12;
  v33 = v11 ^ v12;
  v34 = v32 - v31;
  v35 = (((v11 ^ 0x17C5F4A0) - 398849184) ^ ((v11 ^ 0x58D1CD70) - 1490144624) ^ ((v11 ^ 0xC239ADB7) + 1036407369))
      - 407887041;
  v36 = (2 * (v35 & 0xA57D7129 ^ (v9 + 1))) & 0x2224000 ^ v35 & 0xA57D7129 ^ (v9 + 1) ^ ((2
                                                                                        * (v35 & 0xA57D7129 ^ (v9 + 1))) ^ v17) & (v35 ^ 0x75F3988);
  v37 = (v34 ^ a3) + v33 + (((v34 ^ a3) + v33) >> 16) + (((v34 ^ a3) + v33 + (((v34 ^ a3) + v33) >> 16)) >> 8);
  v38 = (2 * (v35 ^ 0x75F3988)) & v9 ^ (v9 + 1) ^ ((2 * (v35 ^ 0x75F3988)) ^ v17) & (v35 ^ 0x75F3988);
  v39 = (4 * v36) & v9 ^ v36 ^ ((4 * v36) ^ a2) & v38;
  v40 = (4 * v38) & v9 ^ 0x22224821 ^ ((4 * v38) ^ a2) & v38;
  v41 = v39 ^ (16 * v39) & v9 ^ ((16 * v39) ^ v16) & v40;
  v42 = ((v37 - 1081506064) ^ v30) + v33;
  v43 = (16 * v40) & v9 ^ 0x800240A1 ^ ((16 * v40) ^ (v16 + 2048)) & v40;
  v44 = ((v41 ^ 0xA2200080) << 8) & (v9 - 160) ^ v41 ^ 0xA2200080 ^ (((v41 ^ 0xA2200080) << 8) ^ 0x2248A100) & v43;
  v45 = v35 ^ (2
             * ((v44 << 16) & 0x22222222 ^ v44 ^ ((v44 << 16) ^ 0x48A10000) & ((v43 << 8) & 0xA2220000 ^ 0x220000 ^ ((v43 << 8) ^ 0x22480000) & v43)));
  v46 = v42 + HIWORD(v42) + ((v42 + HIWORD(v42)) >> 8);
  v47 = (v37 + 1287068503 - ((2 * (v37 - 1081506064)) & 0x1A5B28CE)) ^ a1;
  v48 = ((2 * ((v46 - 432099181) ^ v15)) ^ 0xFD300144) & ((v46 - 432099181) ^ v15) ^ (2 * ((v46 - 432099181) ^ v15)) & (v8 + 2);
  v49 = v48 ^ 0x28800A2;
  v50 = ((v46 - 432099181) ^ 0x9542D65D) & (2 * ((v46 - 432099181) & 0xD94AD65D)) ^ (v46 - 432099181) & 0xD94AD65D;
  v51 = (v48 ^ 0x6C100000) & (4 * v50) ^ v50;
  v52 = ((4 * v49) ^ 0xFA600288) & v49 ^ (4 * v49) & v8;
  v53 = v51 ^ (v8 + 2) ^ (v52 ^ 0x7A000080) & (16 * v51);
  v54 = (16 * (v52 ^ 0x4980022)) & v8 ^ 0x16180082 ^ ((16 * (v52 ^ 0x4980022)) ^ 0xE9800A20) & (v52 ^ 0x4980022);
  v55 = (v53 << 8) & v10 ^ v53 ^ ((v53 << 8) ^ v14) & v54;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x18C0]
                                                     + 8
                                                     * ((8703
                                                       * ((((v45 ^ 0xFD682BF0) + 717463556) ^ ((v45 ^ 0xD24D6D0C)
                                                                                             + 99018496) ^ ((v45 ^ v13) + 1576480101))
                                                        + v12 > 0xF)) ^ a6))
                                         - 8))(v47 ^ (v46 - 432099181) ^ (2
                                                                          * ((v55 << 16) & v10 ^ v55 ^ ((v55 << 16) ^ 0xA20000) & ((v54 << 8) & v10 ^ 0x66980000 ^ ((v54 << 8) ^ 0x18000000) & v54))) ^ 0x9857437E);
}

