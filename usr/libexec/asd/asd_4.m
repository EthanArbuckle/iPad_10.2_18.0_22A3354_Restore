uint64_t sub_10035FD70@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  _DWORD *v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  _BOOL4 v20;

  v6[2154] = v5;
  v6[2040] = v4;
  v13 = (v6[2276] ^ v6[2038]) + a3 + 1;
  v14 = v13 * a2 - ((v13 * a2) >> 16) - ((v13 * a2 - ((v13 * a2) >> 16)) >> 8);
  v15 = (v14 + v10 - ((v3 + 168012961) & (2 * v14))) ^ v8;
  v16 = ((v15 * a1 + v10 - ((78082826 * v15) & v11)) ^ v10)
      + (((v15 * a1 + v10 - ((78082826 * v15) & v11)) >> 16) ^ 0xFFFFFAFE)
      + 1;
  v17 = ((v16 + v10 - (v11 & (2 * v16))) ^ v10) + (((v16 + v10 - (v11 & (2 * v16))) >> 8) ^ 0xFFFAFE20) + 1;
  v18 = v17 + v10 - (v11 & (2 * v17));
  v6[2382] = v18;
  v20 = v18 == v10
     || ((unsigned __int16)(((((v18 ^ v7) * v9) >> 16) ^ 0xA8DF) - (((v18 ^ v7) * v9) >> 16)) | (((v18 ^ v7) * v9) >> 16)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((4078 * v20) ^ v3)) - 4))();
}

void sub_10035FE74(int a1, int a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  char v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  uint64_t v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  BOOL v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  BOOL v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  BOOL v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  unsigned int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  BOOL v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  BOOL v421;
  int v422;
  uint64_t v423;
  uint64_t v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  uint64_t v430;
  uint64_t v431;
  int v432;
  uint64_t v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  uint64_t v444;
  uint64_t v445;
  int v446;
  unsigned int v447;
  unsigned int v448;
  int v449;
  uint64_t v450;
  int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  unint64_t v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  unint64_t v461;
  int v462;
  char v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  unint64_t v469;
  uint64_t v470;
  unsigned int v471;
  uint64_t v472;
  int v473;
  int v474;
  int v475;
  unint64_t v476;
  uint64_t v477;
  unint64_t v478;
  unsigned int v479;
  unsigned int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  unint64_t v486;
  int v487;
  int v488;
  unsigned int v489;

  *(_QWORD *)(v13 + 7808) = v19;
  v20 = v11 ^ 0x26C4;
  v22 = a8 + (v12 ^ v17) + ((v12 >> ((v11 ^ 0xC4) - 5)) ^ a1) + 1;
  v23 = 254615973 * ((v22 + v17 - (v18 & (2 * v22))) ^ v17);
  v24 = *(_QWORD *)(v13 + 7896);
  v25 = (v23 ^ HIWORD(v23)) + v24 + ((v23 ^ HIWORD(v23)) >> 8);
  v26 = v25 + v17 - (v18 & (2 * v25));
  v27 = (v9 + v17 - (v18 & (2 * v9))) ^ v17;
  v28 = v17 + v27 * a7 - ((229036578 * v27) & v18);
  v29 = (v28 ^ v17) + (a2 ^ HIWORD(v28)) + 1;
  v30 = ((v29 - (v29 >> 8) + v17 - (v18 & (2 * (v29 - (v29 >> 8))))) ^ v15) * a5;
  v31 = v30 - HIWORD(v30) - ((v30 - HIWORD(v30)) >> 8);
  v32 = ((v31 + v17 - (v18 & (2 * v31))) ^ v14) * v16;
  v33 = v32 - HIWORD(v32) - ((v32 - HIWORD(v32)) >> 8);
  v34 = (v33 & 0x7D14DE2D ^ 0x7D14DE2D) + (v33 & 0x7D14DE2D);
  v35 = v33 + a8;
  *(_DWORD *)(v13 + 8312) ^= 0xE10F1D04 ^ v35 ^ (v34 * 254615973 * v35
                                               - 519103228
                                               - ((2 * v34 * 254615973 * v35) & 0xC21E3A08));
  v36 = ((254615973 * v35) ^ ((254615973 * v35) >> 16))
      + v24
      + (((254615973 * v35) ^ ((254615973 * v35) >> 16)) >> 8);
  *(_DWORD *)(v13 + 8152) = v8 ^ v17 ^ ((a4 ^ v17)
                                      - 303637028
                                      + (a4 & 0xEDE6DDDC ^ 0xFAFF227B)
                                      + (a4 & 0xEDE6DDDC ^ 0x1719FFA7)
                                      + 2);
  v37 = v10 - HIWORD(v10) - ((v10 - HIWORD(v10)) >> 8);
  v38 = ((v37 + v17 - (v18 & (2 * v37))) ^ v14) * v16;
  v39 = 254615973 * (v38 - HIWORD(v38) + a8 - ((v38 - HIWORD(v38)) >> 8));
  v40 = HIWORD(v39);
  v41 = (HIWORD(v39) ^ v39) + v24 + ((HIWORD(v39) ^ v39) >> 8);
  v42 = v41 + v17 - (v18 & (2 * v41));
  v43 = (*(_DWORD *)(v13 + 9600) ^ 0xFAFE2058) + (v26 ^ v17) + 1;
  *(_DWORD *)(v13 + 9176) = v43 + v17 - (v18 & (2 * v43));
  v44 = ((8 * (v26 & 1)) | 0x5000C1A0) - ((16 * ((v26 >> 1) & 1)) | 0x7F7FF5EF);
  v45 = ((v44 ^ 0x2F7F3456) + (v40 & 0x20) + (v40 & 0x20 ^ 0x20) + 1) ^ 0x2919202C;
  *(_DWORD *)(v13 + 8472) = v45 & 0x47E2B180 ^ 0x56B4CD02 ^ (((2 * v45) & 0x8A3C224) - (v45 & 0xFD51F318) + 2074874541) & 0xFFF7FFFF;
  v46 = ((8 * v36) ^ 0xDA23AE91) & 0x9821BC60 ^ 0xAEC3DE57 ^ (((2 * (((8 * v36) ^ 0xDA23AE91) & 0x9821BC78)) | 0x386374FE)
                                                            - (((8 * v36) ^ 0xDA23AE91) & 0x9821BC78)
                                                            - 473021055);
  v47 = ((2 * v46) & 0xC8EA3AE4) - v46;
  *(_DWORD *)(v13 + 8980) = v42;
  v48 = 8 * v42;
  v49 = ((((8 * v42) ^ 0xBDC17C38) & 0x300A7308)
       - (((8 * v42) ^ 0xBDC17C38) & 0x200A1100)
       + (((8 * v42) ^ 0xBDC17C38) & 0x200A1100 ^ 0x621A1D74)) ^ ((8 * v42) ^ 0xBDC17C38) & 0x300A7310;
  v50 = ((-8 * v36) ^ 0x222C8F21) & 0x82040E8 ^ 0xF7AD927A ^ (((2 * (((-8 * v36) ^ 0x222C8F21) & 0x82040F0)) | 0xEF1B24B4)
                                                            - (((-8 * v36) ^ 0x222C8F21) & 0x82040F0)
                                                            + 141716902);
  v51 = ((2 * v50) & 0x660AA856) - v50;
  v52 = (*(_DWORD *)(v13 + 9576) ^ v17) + (*(_DWORD *)(v13 + 9440) ^ 0x82AE027F);
  v53 = v15 ^ (v52 + v17 - (v18 & (2 * v52)));
  v54 = 2040181773 * v53;
  v55 = v54 - HIWORD(v54);
  v56 = (((v55 ^ (v55 >> 8)) + v17 - (v18 & (2 * (v55 ^ (v55 >> 8))))) ^ *(_DWORD *)(v13 + 8748))
      - (v55 ^ (v55 >> 8))
      + 2 * ((v55 ^ (v55 >> 8)) & (*(_DWORD *)(v13 + 8748) ^ v17));
  *(_DWORD *)(v13 + 8748) = v56 + v17 - (v18 & (2 * v56));
  v57 = *(_DWORD *)(v13 + 9392) ^ v17;
  v58 = *(_DWORD *)(v13 + 9200) ^ v17;
  *(_QWORD *)(v13 + 8032) = v58;
  *(_DWORD *)(v13 + 8720) = v15;
  v59 = v15 ^ (v57 + v58 + v17 - (v18 & (2 * (v57 + v58))));
  v60 = ((2040181773 * v59
        - ((2040181773 * v59) >> 16)
        - ((2 * (2040181773 * v59 - ((2040181773 * v59) >> 16)) + 208298834) & v18)
        + 590811472) ^ v17)
      - 506802601;
  *(_DWORD *)(v13 + 9736) = v14;
  v61 = (v14 ^ 0xFAFE2058) + 1;
  v62 = v17 + 1241659363 * ((v60 ^ (v60 >> 8)) + v61) - ((67399622 * ((v60 ^ (v60 >> 8)) + v61)) & v18);
  v63 = ((HIWORD(v62) ^ 0x501) + v17 - ((2 * (HIWORD(v62) ^ 0x501)) & 0x1BF4E)) ^ v62;
  v64 = -1122415715 * (v63 + a8 + (v63 >> 8)) + ((-1122415715 * (v63 + a8 + (v63 >> 8))) >> 16);
  v65 = *(_DWORD *)(v13 + 8616) ^ v17;
  *(_DWORD *)(v13 + 9040) = v65;
  v66 = (-379187583 * ((v64 ^ (v64 >> 8)) + v65)) ^ ((-379187583 * ((v64 ^ (v64 >> 8)) + v65)) >> 16);
  *(_DWORD *)(v13 + 8496) = (v66 ^ (v66 >> 8)) + v24 + v17 - (v18 & (2 * ((v66 ^ (v66 >> 8)) + v24)));
  LOBYTE(v65) = (13 * v53 - ((2040181773 * v53) >> 16)) & 8;
  *(_DWORD *)(v13 + 8992) = v61;
  v67 = 1241659363 * (((v55 >> ((v65 ^ 8) + v65)) ^ v55) + v61);
  v68 = (*(_DWORD *)(v13 + 8932) ^ v17) - v67;
  *(_DWORD *)(v13 + 8488) = v36 ^ v17;
  *(_DWORD *)(v13 + 9552) = (v47 + 462086797) ^ 0xAC795912;
  *(_DWORD *)(v13 + 8932) = ((v49 & 0xB2514B7C ^ 0x8841438B) + (v49 ^ 0x72101C74) - ((v49 ^ 0x72101C74) & 0xBA514B18)) ^ 0x78CF769D;
  *(_DWORD *)(v13 + 9264) = (v48 + 8) & 0x18 | v17;
  v69 = v51 + 1291496404;
  v70 = v44 ^ 0xD581140E;
  *(_DWORD *)(v13 + 9528) = v69 ^ 0x49DB7453;
  v71 = (((v67 ^ 0xDACE09D0) + (v67 | 0x2531F62F) + 1) | v67) + v68;
  *(_DWORD *)(v13 + 8728) = v71 + v17 - (v18 & (2 * v71));
  v72 = v20;
  v73 = v53;
  v74 = 2040181773 * v59 + v17 - ((53831706 * v59) & v18);
  v75 = a8
      + (*(_DWORD *)(v13 + 8656) ^ 0xBF32FA74)
      - 1087178124
      - ((2 * (a8 + (*(_DWORD *)(v13 + 8656) ^ 0xBF32FA74))) & 0x7E65F4E8);
  v76 = v74 ^ v17;
  *(_DWORD *)(v13 + 8576) = v26;
  *(_DWORD *)(v13 + 9600) = v26;
  v77 = *(_DWORD *)(v13 + 8160);
  *(_DWORD *)(v13 + 8840) = a8;
  *(_DWORD *)(v13 + 8160) = v77;
  *(_DWORD *)(v13 + 8936) = v70;
  v78 = v72 + 149;
  v79 = (v77 ^ 0xFAFE2058) + (v75 ^ (v72 - 1087179673)) + 1;
  v80 = v79 - 1087178124 - ((2 * v79) & 0x7E65F4E8);
  v81 = (v76 + (HIWORD(v74) ^ 0xFFFFFAFE) + 1) ^ ((v76 + (HIWORD(v74) ^ 0xFFFFFAFE) + 1) >> 8);
  v82 = (v81 & 0x414C0CA) + 1082131713 + (v81 & 0x414C0CA ^ 0x414C0CA);
  v83 = *(_DWORD *)(v13 + 8992);
  v84 = v81 + v83;
  v85 = v17 + 1241659363 * v84 - ((67399622 * v84) & v18);
  v86 = (*(_DWORD *)(v13 + 9656) ^ v17)
      + v76
      - ((((v74 & 0xD6D91C4 ^ 0xF793FFBF) - ((2 * (v74 & 0xD6D91C4 ^ 0xF793FFBF)) & 0xA032308) + 83968865) ^ v17) & v76);
  *(_DWORD *)(v13 + 9656) = v86 + v17 - (v18 & (2 * v86));
  v87 = (v85 ^ v17) * v82 + v17 - (v18 & (2 * (v85 ^ v17) * v82));
  v88 = ((HIWORD(v85) ^ 0x501) + v17 - 2 * ((HIWORD(v85) ^ 0x501) & 0xDFBF ^ HIWORD(v85) & 0x18)) ^ v85;
  *(_DWORD *)(v13 + 8888) ^= v17 ^ v84 ^ v87;
  v89 = -1122415715 * (((v88 + (v88 >> 8) + v17 - (v18 & (2 * (v88 + (v88 >> 8))))) ^ v17) + a8);
  v90 = v89 + HIWORD(v89);
  v91 = (v90 - 519103228 - ((2 * v90) & 0xC21E3A08)) ^ *(_DWORD *)(v13 + 9632);
  v92 = v91 + v90 - 2 * (v91 & v90) - 519103228 - ((2 * (v91 + v90 - 2 * (v91 & v90))) & 0xC21E3A08);
  v93 = -379187583 * ((v90 ^ (v90 >> 8)) + *(_DWORD *)(v13 + 9040));
  v94 = (v93 ^ HIWORD(v93) ^ ((v93 ^ HIWORD(v93)) >> 8)) + v24;
  *(_DWORD *)(v13 + 8712) = v94 + v17 - (v18 & (2 * v94));
  LODWORD(v58) = *(_DWORD *)(v13 + 8328);
  v95 = v58 ^ (v54 + v17 - ((53831706 * v73) & v18));
  *(_DWORD *)(v13 + 8328) = v95
                          - v54
                          + 2 * ((v58 ^ v17) & v54)
                          + v17
                          - (v18 & (2 * (v95 - v54 + 2 * ((v58 ^ v17) & v54))));
  v96 = v83 + ((v55 + v17 - (v18 & (2 * v55))) ^ ((v55 + v17 - (v18 & (2 * v55))) >> 8) ^ 0x504DE78);
  v97 = v17 + 1241659363 * v96 - ((67399622 * v96) & v18);
  v98 = (((2 * (v97 & 0xD211463D ^ 0xC0014218)) | 0x5033B044) - (v97 & 0xD211463D ^ 0xC0014218) + 1474701278) ^ 0x2811F8AB;
  v99 = (((2 * v98) | 0xF5B88F6A) - v98 + 86227019) ^ 0xBFD5BCA6;
  v100 = v92 ^ 0xE10F1D04;
  v101 = *(_DWORD *)(v13 + 8648) ^ v17;
  *(_DWORD *)(v13 + 8352) = *(_DWORD *)(v13 + 9472) ^ 0x87AFDDD8;
  *(_DWORD *)(v13 + 8116) = *(_DWORD *)(v13 + 9560) ^ 0xF84D176;
  *(_QWORD *)(v13 + 8416) = *(_DWORD *)(v13 + 9528) ^ 0xA7u;
  *(_QWORD *)(v13 + 8440) = v70 ^ 0xA7u;
  *(_DWORD *)(v13 + 8344) = (2 * *(_DWORD *)(v13 + 7952)) & 0x20202020 ^ 0x30101010;
  *(_DWORD *)(v13 + 8308) = *(_DWORD *)(v13 + 8196) ^ 0x30002000;
  *(_DWORD *)(v13 + 8332) = *(_DWORD *)(v13 + 8300) ^ 0x10301020;
  *(_QWORD *)(v13 + 8504) = *(_DWORD *)(v13 + 9552) ^ 0xA7u;
  *(_QWORD *)(v13 + 8776) = *(_DWORD *)(v13 + 8472) ^ 0xA7u;
  v102 = v78;
  *(_QWORD *)(v13 + 8424) = *(_DWORD *)(v13 + 9264) ^ 0xA7u;
  *(_DWORD *)(v13 + 9728) = 2 * *(_DWORD *)(v13 + 8132);
  *(_QWORD *)(v13 + 8512) = *(_DWORD *)(v13 + 8932) ^ 0x62u;
  v103 = *(_DWORD *)(v13 + 8304);
  v104 = *(_DWORD *)(v13 + 8952);
  v105 = *(_DWORD *)(v13 + 9400);
  v106 = *(_DWORD *)(v13 + 9280);
  v107 = *(_DWORD *)(v13 + 9664);
  v108 = *(_DWORD *)(v13 + 9004);
  v109 = *(_DWORD *)(v13 + 9416);
  v110 = *(_DWORD *)(v13 + 9312);
  v111 = *(_DWORD *)(v13 + 8764);
  v112 = *(_DWORD *)(v13 + 9256);
  v113 = *(_DWORD *)(v13 + 8760);
  v114 = *(_DWORD *)(v13 + 8232);
  LODWORD(v24) = *(_DWORD *)(v13 + 9392);
  v115 = *(_DWORD *)(v13 + 8640);
  v116 = *(_DWORD *)(v13 + 9544);
  *(_DWORD *)(v13 + 9392) = v24;
  v117 = v102 ^ 0x19B6u;
  *(_QWORD *)(v13 + 8872) = v117;
  v118 = (HIWORD(v97) ^ 0x501) + v17 - 2 * ((HIWORD(v97) ^ 0x501) & (v117 + 49315) ^ HIWORD(v97) & 0x10);
  *(_DWORD *)(v13 + 8880) = (v97 ^ 0xFAFE2058) & (v99 ^ v17) ^ v113;
  v119 = ((v97 & 0xBA4CA315 ^ 0xB808A111) - ((2 * (v97 & 0xBA4CA315 ^ 0xB808A111)) & 0x44814228) - 472668676) ^ 0xD35BADF0;
  v120 = (v118 ^ v97) + ((v118 ^ v97) >> 8) + v17 - ((2 * ((v118 ^ v97) + ((v118 ^ v97) >> 8))) & 0xA03BF4E);
  v121 = (v97 ^ v17) + v100 - ((((2 * v119) & 0x9CE51D30) - v119 + 831353191) ^ 0xB90D5B7F | v97 ^ v17);
  *(_DWORD *)(v13 + 9632) = v121 - 519103228 - ((2 * v121) & 0xC21E3A08);
  v122 = (v110 ^ v17) + (v120 ^ 0xFAFE2058) + (v120 ^ v17) + 1;
  *(_DWORD *)(v13 + 9312) = v122 + v17 - ((2 * v122) & 0xA03BF4E);
  v123 = *(_DWORD *)(v13 + 8720) ^ v17 ^ ((v24 ^ v17) + *(_QWORD *)(v13 + 8032));
  v124 = v17 + 2040181773 * v123 - ((53831706 * v123) & 0xA03BF4E);
  v125 = ((v101 + (v124 ^ 0xFAFE2058) + 1 + v17 - ((2 * (v101 + (v124 ^ 0xFAFE2058) + 1)) & 0xA03BF4E)) ^ v17)
       + (v124 ^ v17);
  v126 = v125 + v17 - ((2 * v125) & 0xA03BF4E);
  v127 = (v124 ^ v17) + (HIWORD(v124) ^ 0xFFFFFAFE) + 1;
  v128 = (v127 ^ (v127 >> 8)) + *(_DWORD *)(v13 + 8992);
  v129 = 1241659363 * ((v128 + v17 - ((2 * v128) & 0xA03BF4E)) ^ v17);
  *(_DWORD *)(v13 + 9472) = (v129 ^ HIWORD(v129)) + *(_DWORD *)(v13 + 8840) + ((v129 ^ HIWORD(v129)) >> 8);
  v130 = (v116 ^ v17) + (*(_DWORD *)(v13 + 8496) ^ v17);
  *(_DWORD *)(v13 + 8992) = v130;
  *(_DWORD *)(v13 + 9544) = v17 + v130 - ((2 * v130) & 0xA03BF4E);
  v131 = *(_DWORD *)(v13 + 8712);
  if ((v131 & 1) != 0)
    v132 = *(_DWORD *)(v13 + 9172);
  else
    v132 = *(_DWORD *)(v13 + 9160);
  v133 = *(_DWORD *)(v13 + 8548);
  if ((v131 & 1) != 0)
    v134 = *(_DWORD *)(v13 + 8548);
  else
    v134 = *(_DWORD *)(v13 + 9172);
  if ((v131 & 1) != 0)
  {
    v133 = v80;
    v135 = *(_DWORD *)(v13 + 9160);
  }
  else
  {
    v135 = v80;
  }
  if ((v131 & 1) != 0)
    v136 = *(_DWORD *)(v13 + 8544);
  else
    v136 = v106;
  if ((v131 & 1) != 0)
    v137 = *(_DWORD *)(v13 + 8608);
  else
    v137 = *(_DWORD *)(v13 + 8544);
  if ((v131 & 1) != 0)
    v138 = v106;
  else
    v138 = v107;
  if ((v131 & 1) != 0)
  {
    v139 = v109;
  }
  else
  {
    v107 = *(_DWORD *)(v13 + 8608);
    v139 = v104;
  }
  if ((v131 & 1) != 0)
  {
    v109 = v114;
    v140 = *(_DWORD *)(v13 + 8920);
  }
  else
  {
    v140 = v114;
  }
  if ((v131 & 1) != 0)
  {
    v141 = v108;
  }
  else
  {
    v104 = *(_DWORD *)(v13 + 8920);
    v141 = v115;
  }
  if ((v131 & 1) != 0)
    v142 = *(_DWORD *)(v13 + 9024);
  else
    v142 = v108;
  v143 = *(_DWORD *)(v13 + 8672);
  if ((v131 & 1) != 0)
    v144 = v115;
  else
    v144 = *(_DWORD *)(v13 + 8672);
  if ((v131 & 1) != 0)
  {
    v145 = v111;
  }
  else
  {
    v143 = *(_DWORD *)(v13 + 9024);
    v145 = v126;
  }
  if ((v131 & 1) != 0)
  {
    v146 = v105;
  }
  else
  {
    v126 = v105;
    v146 = v103;
  }
  if ((v131 & 1) != 0)
    v147 = v103;
  else
    v147 = v111;
  v148 = *(_DWORD *)(v13 + 9680);
  v149 = *(_DWORD *)(v13 + 9408);
  if ((v131 & 1) != 0)
    v150 = *(_DWORD *)(v13 + 9408);
  else
    v150 = *(_DWORD *)(v13 + 9680);
  *(_DWORD *)(v13 + 9256) = v150;
  v151 = v112;
  if ((v131 & 1) != 0)
  {
    v152 = *(_DWORD *)(v13 + 8704);
  }
  else
  {
    v112 = v149;
    v152 = v151;
  }
  if ((v131 & 1) == 0)
    v148 = *(_DWORD *)(v13 + 8704);
  v153 = *(_DWORD *)(v13 + 9608);
  v154 = *(_DWORD *)(v13 + 9096);
  if ((v131 & 1) != 0)
    v155 = *(_DWORD *)(v13 + 9096);
  else
    v155 = *(_DWORD *)(v13 + 9608);
  *(_DWORD *)(v13 + 8760) = v155;
  v156 = *(_DWORD *)(v13 + 9720);
  if ((v131 & 1) == 0)
    v153 = *(_DWORD *)(v13 + 9720);
  *(_DWORD *)(v13 + 8832) = v153;
  v157 = *(_DWORD *)(v13 + 8628);
  if ((v131 & 1) == 0)
    v156 = *(_DWORD *)(v13 + 8628);
  *(_DWORD *)(v13 + 9608) = v156;
  if ((v131 & 1) != 0)
    v158 = v157;
  else
    v158 = v154;
  *(_DWORD *)(v13 + 8784) = v158;
  v159 = *(_DWORD *)(v13 + 9156);
  v160 = *(_DWORD *)(v13 + 9036);
  if ((v131 & 1) != 0)
    v161 = *(_DWORD *)(v13 + 9036);
  else
    v161 = *(_DWORD *)(v13 + 9156);
  *(_DWORD *)(v13 + 8848) = v161;
  v162 = *(_DWORD *)(v13 + 8552);
  if ((v131 & 1) == 0)
    v159 = *(_DWORD *)(v13 + 8552);
  *(_DWORD *)(v13 + 9720) = v159;
  v163 = *(_DWORD *)(v13 + 9052);
  if ((v131 & 1) == 0)
    v162 = *(_DWORD *)(v13 + 9052);
  *(_DWORD *)(v13 + 8840) = v162;
  if ((v131 & 1) == 0)
    v163 = v160;
  *(_DWORD *)(v13 + 9156) = v163;
  v164 = (*(_DWORD *)(v13 + 9176) ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v13 + 9560) = v164;
  *(_DWORD *)(v13 + 9176) = v131 ^ 0x501DFA7;
  v165 = (v131 ^ 0x501DFA7) + v164;
  v166 = v165 + 84008893 - ((2 * v165) & 0xA03BF4E);
  v167 = ((((v165 + 84008893) | 0xFFFFFFFE) - 394198578) & 0xA0000049)
       + ((((v165 + 84008893) | 0xFFFFFFFE) - 394198578) ^ 0xA1B231DF)
       - (((((v165 + 84008893) | 0xFFFFFFFE) - 394198578) ^ 0xA1B231DF) & 0x1311003);
  v168 = (v131 & 2) == 0;
  if ((v131 & 2) != 0)
    v169 = v132;
  else
    v169 = v133;
  *(_DWORD *)(v13 + 9172) = v169;
  if (v168)
    v133 = v132;
  *(_DWORD *)(v13 + 8656) = v133;
  if (v168)
    v170 = v137;
  else
    v170 = v138;
  *(_DWORD *)(v13 + 9280) = v170;
  if (!v168)
    v138 = v137;
  *(_DWORD *)(v13 + 8608) = v138;
  if (v168)
    v171 = v135;
  else
    v171 = v134;
  *(_DWORD *)(v13 + 8548) = v171;
  if (v168)
    v172 = v134;
  else
    v172 = v135;
  *(_DWORD *)(v13 + 9160) = v172;
  if (v168)
    v173 = v136;
  else
    v173 = v107;
  *(_DWORD *)(v13 + 9664) = v173;
  if (v168)
    v174 = v107;
  else
    v174 = v136;
  *(_DWORD *)(v13 + 8544) = v174;
  if (v168)
    v175 = v142;
  else
    v175 = v144;
  *(_DWORD *)(v13 + 8640) = v175;
  if (v168)
    v176 = v144;
  else
    v176 = v142;
  *(_DWORD *)(v13 + 9024) = v176;
  if (v168)
    v177 = v139;
  else
    v177 = v140;
  *(_DWORD *)(v13 + 8920) = v177;
  if (v168)
    v178 = v140;
  else
    v178 = v139;
  *(_DWORD *)(v13 + 9416) = v178;
  if (v168)
    v179 = v104;
  else
    v179 = v109;
  *(_DWORD *)(v13 + 8232) = v179;
  if (v168)
    v180 = v109;
  else
    v180 = v104;
  *(_DWORD *)(v13 + 8952) = v180;
  if (v168)
    v181 = v143;
  else
    v181 = v141;
  *(_DWORD *)(v13 + 9004) = v181;
  if (v168)
    v182 = v141;
  else
    v182 = v143;
  *(_DWORD *)(v13 + 8672) = v182;
  if (v168)
    v183 = v147;
  else
    v183 = v126;
  *(_DWORD *)(v13 + 8648) = v183;
  if (v168)
    v184 = v126;
  else
    v184 = v147;
  *(_DWORD *)(v13 + 8304) = v184;
  if (v168)
    v185 = v145;
  else
    v185 = v146;
  *(_DWORD *)(v13 + 9400) = v185;
  if (v168)
    v186 = v146;
  else
    v186 = v145;
  *(_DWORD *)(v13 + 8764) = v186;
  v187 = *(_DWORD *)(v13 + 9256);
  if (v168)
    v188 = v152;
  else
    v188 = *(_DWORD *)(v13 + 9256);
  *(_DWORD *)(v13 + 9408) = v188;
  if (v168)
    v189 = v187;
  else
    v189 = v152;
  *(_DWORD *)(v13 + 8704) = v189;
  if (v168)
    v190 = v148;
  else
    v190 = v112;
  *(_DWORD *)(v13 + 9256) = v190;
  if (v168)
    v191 = v112;
  else
    v191 = v148;
  *(_DWORD *)(v13 + 9680) = v191;
  v192 = *(_DWORD *)(v13 + 9720);
  v193 = *(_DWORD *)(v13 + 9156);
  if (v168)
    v194 = *(_DWORD *)(v13 + 9720);
  else
    v194 = *(_DWORD *)(v13 + 9156);
  *(_DWORD *)(v13 + 9052) = v194;
  if (v168)
    v195 = v193;
  else
    v195 = v192;
  *(_DWORD *)(v13 + 9156) = v195;
  v196 = *(_DWORD *)(v13 + 8760);
  v197 = *(_DWORD *)(v13 + 9608);
  if (v168)
    v198 = *(_DWORD *)(v13 + 8760);
  else
    v198 = *(_DWORD *)(v13 + 9608);
  *(_DWORD *)(v13 + 9720) = v198;
  if (v168)
    v199 = v197;
  else
    v199 = v196;
  *(_DWORD *)(v13 + 9096) = v199;
  v200 = *(_DWORD *)(v13 + 8832);
  v201 = *(_DWORD *)(v13 + 8784);
  if (v168)
    v202 = *(_DWORD *)(v13 + 8784);
  else
    v202 = *(_DWORD *)(v13 + 8832);
  *(_DWORD *)(v13 + 9608) = v202;
  if (v168)
    v203 = v200;
  else
    v203 = v201;
  *(_DWORD *)(v13 + 8628) = v203;
  v204 = *(_DWORD *)(v13 + 8848);
  v205 = *(_DWORD *)(v13 + 8840);
  if (v168)
    v206 = *(_DWORD *)(v13 + 8848);
  else
    v206 = *(_DWORD *)(v13 + 8840);
  *(_DWORD *)(v13 + 8552) = v206;
  if (v168)
    v207 = v205;
  else
    v207 = v204;
  *(_DWORD *)(v13 + 9036) = v207;
  *(_DWORD *)(v13 + 8848) = v166 - 22;
  *(_DWORD *)(v13 + 8760) = ((v166 - 22) & 2) + 1748111517 - 2 * ((v166 - 22) & 2);
  *(_DWORD *)(v13 + 8712) = (*(_DWORD *)(v13 + 9592) ^ 0x501DFA7)
                          - ((2 * (*(_DWORD *)(v13 + 9592) ^ 0x501DFA7) + 162138454) & 0xA03BF4E);
  v208 = ((*(_DWORD *)(v13 + 9296) ^ 0x501DFA7)
        - ((2 * (*(_DWORD *)(v13 + 9296) ^ 0x501DFA7) + 215230070) & 0xA03BF4E)
        + 1533801186) ^ 0x501DFA7;
  v209 = v208 - ((2 * v208 + 53205386) & 0xA03BF4E);
  v210 = v167 == -402513831;
  if (v167 == -402513831)
    v211 = *(_DWORD *)(v13 + 9376);
  else
    v211 = *(_DWORD *)(v13 + 9312);
  if (v167 == -402513831)
    v212 = *(_DWORD *)(v13 + 9312);
  else
    v212 = *(_DWORD *)(v13 + 9688);
  if (v167 == -402513831)
    v213 = *(_DWORD *)(v13 + 9688);
  else
    v213 = *(_DWORD *)(v13 + 8748);
  if (v167 == -402513831)
    v214 = *(_DWORD *)(v13 + 8748);
  else
    v214 = *(_DWORD *)(v13 + 9376);
  if (v167 == -402513831)
    v215 = *(_DWORD *)(v13 + 8360);
  else
    v215 = *(_DWORD *)(v13 + 8632);
  if (v167 == -402513831)
    v216 = *(_DWORD *)(v13 + 8536);
  else
    v216 = *(_DWORD *)(v13 + 8360);
  if (v167 == -402513831)
    v217 = *(_DWORD *)(v13 + 8632);
  else
    v217 = *(_DWORD *)(v13 + 8400);
  if (v167 == -402513831)
    v218 = *(_DWORD *)(v13 + 8400);
  else
    v218 = *(_DWORD *)(v13 + 8536);
  if (v167 == -402513831)
    v219 = *(_DWORD *)(v13 + 9320);
  else
    v219 = *(_DWORD *)(v13 + 9424);
  if (v167 == -402513831)
    v220 = *(_DWORD *)(v13 + 8260);
  else
    v220 = *(_DWORD *)(v13 + 9320);
  if (v167 == -402513831)
    v221 = *(_DWORD *)(v13 + 9448);
  else
    v221 = *(_DWORD *)(v13 + 8260);
  if (v167 == -402513831)
    v222 = *(_DWORD *)(v13 + 9424);
  else
    v222 = *(_DWORD *)(v13 + 9448);
  if (v167 == -402513831)
    v223 = *(_DWORD *)(v13 + 8464);
  else
    v223 = *(_DWORD *)(v13 + 9304);
  if (v167 == -402513831)
    v224 = *(_DWORD *)(v13 + 9304);
  else
    v224 = *(_DWORD *)(v13 + 9536);
  v225 = *(_DWORD *)(v13 + 9016);
  if (v167 == -402513831)
    v226 = *(_DWORD *)(v13 + 9016);
  else
    v226 = *(_DWORD *)(v13 + 8464);
  if (v167 == -402513831)
  {
    v225 = *(_DWORD *)(v13 + 9536);
    v227 = *(_DWORD *)(v13 + 9632);
  }
  else
  {
    v227 = *(_DWORD *)(v13 + 8968);
  }
  if (v167 == -402513831)
    v228 = *(_DWORD *)(v13 + 8312);
  else
    v228 = *(_DWORD *)(v13 + 9632);
  if (v167 == -402513831)
    v229 = *(_DWORD *)(v13 + 8816);
  else
    v229 = *(_DWORD *)(v13 + 8312);
  if (v167 == -402513831)
    v230 = *(_DWORD *)(v13 + 8968);
  else
    v230 = *(_DWORD *)(v13 + 8816);
  v231 = *(_DWORD *)(v13 + 9616);
  v232 = *(_DWORD *)(v13 + 8432);
  if (v167 == -402513831)
    v233 = *(_DWORD *)(v13 + 8432);
  else
    v233 = *(_DWORD *)(v13 + 9616);
  v234 = *(_DWORD *)(v13 + 8664);
  if (v167 != -402513831)
    v231 = *(_DWORD *)(v13 + 8664);
  *(_DWORD *)(v13 + 9616) = v231;
  if (v167 == -402513831)
  {
    v235 = *(_DWORD *)(v13 + 9192);
  }
  else
  {
    v234 = *(_DWORD *)(v13 + 9192);
    v235 = v232;
  }
  v236 = *(_DWORD *)(v13 + 8212);
  v237 = *(_DWORD *)(v13 + 9584);
  if (v210)
    v238 = *(_DWORD *)(v13 + 9584);
  else
    v238 = *(_DWORD *)(v13 + 8212);
  v239 = *(_DWORD *)(v13 + 0x2000);
  if (!v210)
    v236 = *(_DWORD *)(v13 + 0x2000);
  *(_DWORD *)(v13 + 9296) = v236;
  v240 = *(_DWORD *)(v13 + 9224);
  if (!v210)
    v239 = *(_DWORD *)(v13 + 9224);
  *(_DWORD *)(v13 + 8784) = v239;
  if (v210)
    v237 = v240;
  *(_DWORD *)(v13 + 9224) = v237;
  v241 = v209 - 1365783444;
  v242 = *(_DWORD *)(v13 + 8612);
  if (v210)
    v243 = *(_DWORD *)(v13 + 8612);
  else
    v243 = v241;
  *(_DWORD *)(v13 + 9592) = v243;
  v244 = *(_DWORD *)(v13 + 8752);
  if (v210)
    v242 = *(_DWORD *)(v13 + 8752);
  *(_DWORD *)(v13 + 8832) = v242;
  v245 = *(_DWORD *)(v13 + 9080);
  if (v210)
    v244 = *(_DWORD *)(v13 + 9080);
  *(_DWORD *)(v13 + 8840) = v244;
  if (!v210)
    v241 = v245;
  v246 = ((*(_DWORD *)(v13 + 8712) + 1909908562) ^ 0x501DFA7)
       - ((2 * ((*(_DWORD *)(v13 + 8712) + 1909908562) ^ 0x501DFA7) + 106297002) & 0xA03BF4E);
  v247 = (((v238 ^ 0x501DFA7) - ((2 * (v238 ^ 0x501DFA7) + 137185278) & 0xA03BF4E) + 18383782) ^ 0x501DFA7)
       - ((2 * (((v238 ^ 0x501DFA7) - ((2 * (v238 ^ 0x501DFA7) + 137185278) & 0xA03BF4E) + 18383782) ^ 0x501DFA7)
         + 131250178) & 0xA03BF4E);
  v248 = *(_DWORD *)(v13 + 8760) + 2;
  if (*(_DWORD *)(v13 + 8760) == 1748111515)
    v249 = v212;
  else
    v249 = v214;
  *(_DWORD *)(v13 + 9312) = v249;
  if (v248 == 1748111517)
    v250 = v214;
  else
    v250 = v212;
  *(_DWORD *)(v13 + 8748) = v250;
  if (v248 == 1748111517)
    v251 = v211;
  else
    v251 = v213;
  *(_DWORD *)(v13 + 9376) = v251;
  if (v248 == 1748111517)
    v252 = v213;
  else
    v252 = v211;
  *(_DWORD *)(v13 + 9688) = v252;
  if (v248 == 1748111517)
    v253 = v217;
  else
    v253 = v216;
  *(_DWORD *)(v13 + 8632) = v253;
  if (v248 == 1748111517)
    v254 = v216;
  else
    v254 = v217;
  *(_DWORD *)(v13 + 8536) = v254;
  if (v248 == 1748111517)
    v255 = v218;
  else
    v255 = v215;
  *(_DWORD *)(v13 + 8400) = v255;
  if (v248 == 1748111517)
    v256 = v215;
  else
    v256 = v218;
  *(_DWORD *)(v13 + 8360) = v256;
  if (v248 == 1748111517)
    v257 = v219;
  else
    v257 = v221;
  *(_DWORD *)(v13 + 9320) = v257;
  if (v248 == 1748111517)
    v258 = v221;
  else
    v258 = v219;
  *(_DWORD *)(v13 + 9448) = v258;
  if (v248 == 1748111517)
    v259 = v222;
  else
    v259 = v220;
  *(_DWORD *)(v13 + 9424) = v259;
  if (v248 == 1748111517)
    v260 = v220;
  else
    v260 = v222;
  *(_DWORD *)(v13 + 8260) = v260;
  if (v248 == 1748111517)
    v261 = v226;
  else
    v261 = v224;
  *(_DWORD *)(v13 + 9016) = v261;
  if (v248 == 1748111517)
    v262 = v224;
  else
    v262 = v226;
  *(_DWORD *)(v13 + 9304) = v262;
  if (v248 == 1748111517)
    v263 = v225;
  else
    v263 = v223;
  *(_DWORD *)(v13 + 9536) = v263;
  if (v248 == 1748111517)
    v264 = v223;
  else
    v264 = v225;
  *(_DWORD *)(v13 + 8464) = v264;
  if (v248 == 1748111517)
    v265 = v227;
  else
    v265 = v229;
  *(_DWORD *)(v13 + 9632) = v265;
  if (v248 == 1748111517)
    v266 = v229;
  else
    v266 = v227;
  *(_DWORD *)(v13 + 8816) = v266;
  if (v248 == 1748111517)
    v267 = v230;
  else
    v267 = v228;
  *(_DWORD *)(v13 + 8968) = v267;
  if (v248 == 1748111517)
    v268 = v228;
  else
    v268 = v230;
  *(_DWORD *)(v13 + 8312) = v268;
  if (v248 == 1748111517)
    v269 = v234;
  else
    v269 = v233;
  *(_DWORD *)(v13 + 8664) = v269;
  if (v248 == 1748111517)
    v270 = v233;
  else
    v270 = v234;
  *(_DWORD *)(v13 + 8432) = v270;
  v271 = *(_DWORD *)(v13 + 9616);
  if (v248 == 1748111517)
    v272 = v235;
  else
    v272 = *(_DWORD *)(v13 + 9616);
  *(_DWORD *)(v13 + 9192) = v272;
  if (v248 == 1748111517)
    v273 = v271;
  else
    v273 = v235;
  *(_DWORD *)(v13 + 9616) = v273;
  v274 = v247 + 149633960;
  v275 = *(_DWORD *)(v13 + 8784);
  if (v248 == 1748111517)
    v276 = *(_DWORD *)(v13 + 8784);
  else
    v276 = v274;
  *(_DWORD *)(v13 + 0x2000) = v276;
  if (v248 != 1748111517)
    v274 = v275;
  *(_DWORD *)(v13 + 9584) = v274;
  v277 = *(_DWORD *)(v13 + 9296);
  v278 = *(_DWORD *)(v13 + 9224);
  if (v248 == 1748111517)
    v279 = *(_DWORD *)(v13 + 9296);
  else
    v279 = *(_DWORD *)(v13 + 9224);
  *(_DWORD *)(v13 + 8212) = v279;
  if (v248 == 1748111517)
    v280 = v278;
  else
    v280 = v277;
  *(_DWORD *)(v13 + 9224) = v280;
  v281 = *(_DWORD *)(v13 + 8832);
  if (v248 == 1748111517)
    v282 = v241;
  else
    v282 = *(_DWORD *)(v13 + 8832);
  *(_DWORD *)(v13 + 9296) = v282;
  if (v248 == 1748111517)
    v283 = v281;
  else
    v283 = v241;
  *(_DWORD *)(v13 + 8752) = v283;
  v284 = *(_DWORD *)(v13 + 9592);
  v285 = *(_DWORD *)(v13 + 8840);
  if (v248 == 1748111517)
    v286 = *(_DWORD *)(v13 + 9592);
  else
    v286 = *(_DWORD *)(v13 + 8840);
  *(_DWORD *)(v13 + 8612) = v286;
  if (v248 == 1748111517)
    v287 = v285;
  else
    v287 = v284;
  *(_DWORD *)(v13 + 9080) = v287;
  v288 = (*(_DWORD *)(v13 + 8848) ^ 0x501DFA7) + *(_DWORD *)(v13 + 9560);
  *(_DWORD *)(v13 + 8712) = v288;
  v289 = (((v288 ^ 0xBE176080) & 0x6CB4609B) - ((2 * (v288 ^ 0xBE176080)) & 0x98604106) - 562517113) ^ (v288 ^ 0xBE176080) & 0x6CB4609A;
  v290 = (v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398;
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v291 = *(_DWORD *)(v13 + 8880);
  else
    v291 = *(_DWORD *)(v13 + 8808);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v292 = *(_DWORD *)(v13 + 8808);
  else
    v292 = *(_DWORD *)(v13 + 9440);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v293 = *(_DWORD *)(v13 + 9440);
  else
    v293 = *(_DWORD *)(v13 + 8240);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v294 = *(_DWORD *)(v13 + 8240);
  else
    v294 = *(_DWORD *)(v13 + 8880);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v295 = *(_DWORD *)(v13 + 9392);
  else
    v295 = v246 - 1741890820;
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v296 = v246 - 1741890820;
  else
    v296 = *(_DWORD *)(v13 + 9248);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v297 = *(_DWORD *)(v13 + 9368);
  else
    v297 = *(_DWORD *)(v13 + 9392);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v298 = *(_DWORD *)(v13 + 9248);
  else
    v298 = *(_DWORD *)(v13 + 9368);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v299 = *(_DWORD *)(v13 + 8264);
  else
    v299 = *(_DWORD *)(v13 + 8984);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v300 = *(_DWORD *)(v13 + 8984);
  else
    v300 = *(_DWORD *)(v13 + 8368);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v301 = *(_DWORD *)(v13 + 8368);
  else
    v301 = *(_DWORD *)(v13 + 8456);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v302 = *(_DWORD *)(v13 + 8456);
  else
    v302 = *(_DWORD *)(v13 + 8264);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v303 = *(_DWORD *)(v13 + 8904);
  else
    v303 = *(_DWORD *)(v13 + 9116);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v304 = *(_DWORD *)(v13 + 9116);
  else
    v304 = *(_DWORD *)(v13 + 9328);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v305 = *(_DWORD *)(v13 + 9328);
  else
    v305 = *(_DWORD *)(v13 + 9384);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v306 = *(_DWORD *)(v13 + 9384);
  else
    v306 = *(_DWORD *)(v13 + 8904);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v307 = *(_DWORD *)(v13 + 9152);
  else
    v307 = *(_DWORD *)(v13 + 9208);
  v308 = *(_DWORD *)(v13 + 9656);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v309 = *(_DWORD *)(v13 + 9208);
  else
    v309 = *(_DWORD *)(v13 + 9656);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v310 = *(_DWORD *)(v13 + 9520);
  else
    v310 = *(_DWORD *)(v13 + 9152);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) != 321636398)
    v308 = *(_DWORD *)(v13 + 9520);
  v311 = *(_DWORD *)(v13 + 9272);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v312 = *(_DWORD *)(v13 + 9696);
  else
    v312 = *(_DWORD *)(v13 + 9272);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
    v313 = *(_DWORD *)(v13 + 8376);
  else
    v313 = *(_DWORD *)(v13 + 9696);
  if ((v289 & 0x3F3FA8AD ^ 0xD1320A8) + (v289 & 0xC0C04752 ^ 0xC0404303) == 321636398)
  {
    v314 = *(_DWORD *)(v13 + 8828);
  }
  else
  {
    v311 = *(_DWORD *)(v13 + 8828);
    v314 = *(_DWORD *)(v13 + 8376);
  }
  v315 = *(_DWORD *)(v13 + 8912);
  v316 = *(_DWORD *)(v13 + 8944);
  if (v290)
    v317 = *(_DWORD *)(v13 + 8912);
  else
    v317 = *(_DWORD *)(v13 + 8944);
  *(_DWORD *)(v13 + 8784) = v317;
  v318 = *(_DWORD *)(v13 + 9008);
  if (v290)
    v319 = v316;
  else
    v319 = *(_DWORD *)(v13 + 9008);
  *(_DWORD *)(v13 + 8944) = v319;
  if (v290)
    v315 = *(_DWORD *)(v13 + 8964);
  else
    v318 = *(_DWORD *)(v13 + 8964);
  *(_DWORD *)(v13 + 8832) = v315;
  v320 = *(_DWORD *)(v13 + 8744);
  v321 = *(_DWORD *)(v13 + 9504);
  if (v290)
    v322 = *(_DWORD *)(v13 + 8744);
  else
    v322 = *(_DWORD *)(v13 + 9504);
  *(_DWORD *)(v13 + 8880) = v322;
  v323 = *(_DWORD *)(v13 + 8532);
  if (!v290)
    v321 = *(_DWORD *)(v13 + 8532);
  *(_DWORD *)(v13 + 8840) = v321;
  v324 = *(_DWORD *)(v13 + 9148);
  if (v290)
  {
    v320 = *(_DWORD *)(v13 + 9148);
    v324 = v323;
  }
  *(_DWORD *)(v13 + 8848) = v324;
  v325 = *(_DWORD *)(v13 + 8712);
  if ((v325 & 2) != 0)
    v326 = v293;
  else
    v326 = v291;
  *(_DWORD *)(v13 + 8760) = v326;
  if ((v325 & 2) != 0)
    v327 = v291;
  else
    v327 = v293;
  *(_DWORD *)(v13 + 9440) = v327;
  if ((v325 & 2) != 0)
    v328 = v292;
  else
    v328 = v294;
  *(_DWORD *)(v13 + 8240) = v328;
  if ((v325 & 2) != 0)
    v329 = v294;
  else
    v329 = v292;
  *(_DWORD *)(v13 + 8808) = v329;
  if ((v325 & 2) != 0)
    v330 = v297;
  else
    v330 = v296;
  *(_DWORD *)(v13 + 9592) = v330;
  if ((v325 & 2) != 0)
    v331 = v296;
  else
    v331 = v297;
  *(_DWORD *)(v13 + 9368) = v331;
  if ((v325 & 2) != 0)
    v332 = v295;
  else
    v332 = v298;
  *(_DWORD *)(v13 + 9248) = v332;
  if ((v325 & 2) != 0)
    v333 = v298;
  else
    v333 = v295;
  *(_DWORD *)(v13 + 9392) = v333;
  if ((v325 & 2) != 0)
    v334 = v301;
  else
    v334 = v299;
  *(_DWORD *)(v13 + 8264) = v334;
  if ((v325 & 2) != 0)
    v335 = v299;
  else
    v335 = v301;
  *(_DWORD *)(v13 + 8368) = v335;
  if ((v325 & 2) != 0)
    v336 = v300;
  else
    v336 = v302;
  *(_DWORD *)(v13 + 8456) = v336;
  if ((v325 & 2) != 0)
    v337 = v302;
  else
    v337 = v300;
  *(_DWORD *)(v13 + 8984) = v337;
  if ((v325 & 2) != 0)
    v338 = v305;
  else
    v338 = v303;
  *(_DWORD *)(v13 + 8904) = v338;
  if ((v325 & 2) != 0)
    v339 = v303;
  else
    v339 = v305;
  *(_DWORD *)(v13 + 9328) = v339;
  if ((v325 & 2) != 0)
    v340 = v304;
  else
    v340 = v306;
  *(_DWORD *)(v13 + 9384) = v340;
  if ((v325 & 2) != 0)
    v341 = v306;
  else
    v341 = v304;
  *(_DWORD *)(v13 + 9116) = v341;
  if ((v325 & 2) != 0)
    v342 = v308;
  else
    v342 = v307;
  *(_DWORD *)(v13 + 9152) = v342;
  if ((v325 & 2) != 0)
    v343 = v307;
  else
    v343 = v308;
  *(_DWORD *)(v13 + 9656) = v343;
  if ((v325 & 2) != 0)
    v344 = v310;
  else
    v344 = v309;
  *(_DWORD *)(v13 + 9208) = v344;
  if ((v325 & 2) != 0)
    v345 = v309;
  else
    v345 = v310;
  *(_DWORD *)(v13 + 9520) = v345;
  if ((v325 & 2) != 0)
    v346 = v311;
  else
    v346 = v313;
  *(_DWORD *)(v13 + 8376) = v346;
  if ((v325 & 2) != 0)
    v347 = v313;
  else
    v347 = v311;
  *(_DWORD *)(v13 + 9272) = v347;
  if ((v325 & 2) != 0)
    v348 = v314;
  else
    v348 = v312;
  *(_DWORD *)(v13 + 9696) = v348;
  if ((v325 & 2) != 0)
    v349 = v312;
  else
    v349 = v314;
  *(_DWORD *)(v13 + 8828) = v349;
  v350 = *(_DWORD *)(v13 + 8784);
  if ((v325 & 2) != 0)
    v351 = v318;
  else
    v351 = *(_DWORD *)(v13 + 8784);
  *(_DWORD *)(v13 + 8912) = v351;
  if ((v325 & 2) != 0)
    v352 = v350;
  else
    v352 = v318;
  *(_DWORD *)(v13 + 9008) = v352;
  v353 = *(_DWORD *)(v13 + 8944);
  v354 = *(_DWORD *)(v13 + 8832);
  if ((v325 & 2) != 0)
    v355 = *(_DWORD *)(v13 + 8944);
  else
    v355 = *(_DWORD *)(v13 + 8832);
  *(_DWORD *)(v13 + 8964) = v355;
  if ((v325 & 2) != 0)
    v356 = v354;
  else
    v356 = v353;
  *(_DWORD *)(v13 + 8944) = v356;
  v357 = *(_DWORD *)(v13 + 8840);
  if ((v325 & 2) != 0)
    v358 = v320;
  else
    v358 = *(_DWORD *)(v13 + 8840);
  *(_DWORD *)(v13 + 9504) = v358;
  if ((v325 & 2) != 0)
    v359 = v357;
  else
    v359 = v320;
  *(_DWORD *)(v13 + 9148) = v359;
  v360 = *(_DWORD *)(v13 + 8880);
  v361 = *(_DWORD *)(v13 + 8848);
  if ((v325 & 2) != 0)
    v362 = *(_DWORD *)(v13 + 8880);
  else
    v362 = *(_DWORD *)(v13 + 8848);
  *(_DWORD *)(v13 + 8532) = v362;
  if ((v325 & 2) != 0)
    v363 = v361;
  else
    v363 = v360;
  *(_DWORD *)(v13 + 8744) = v363;
  v364 = v325 + *(_DWORD *)(v13 + 9560);
  v365 = (((v325 & 0xD112A000) + 327696 + (v325 & 0xD112A000 ^ 0xD112A000) + 2140) | 0x20031062)
       + (*(_DWORD *)(v13 + 8688) ^ 0x501DFA7);
  v366 = (v365 + 84008871 - ((2 * v365) & 0xA03BF4E)) ^ 0x501DFA7;
  v367 = v366 - ((2 * v366 + 231771940) & 0xA03BF4E);
  v368 = *(_DWORD *)(v13 + 9464);
  v369 = *(_DWORD *)(v13 + 8888);
  if ((v364 & 1) != 0)
    v370 = *(_DWORD *)(v13 + 8888);
  else
    v370 = *(_DWORD *)(v13 + 9464);
  v371 = *(_DWORD *)(v13 + 8736);
  if ((v364 & 1) != 0)
  {
    v369 = *(_DWORD *)(v13 + 8328);
  }
  else
  {
    v368 = *(_DWORD *)(v13 + 8736);
    v371 = *(_DWORD *)(v13 + 8328);
  }
  v372 = *(_DWORD *)(v13 + 9240);
  v373 = *(_DWORD *)(v13 + 9136);
  if ((v364 & 1) != 0)
    v374 = *(_DWORD *)(v13 + 9136);
  else
    v374 = *(_DWORD *)(v13 + 9240);
  v375 = *(_DWORD *)(v13 + 8696);
  if ((v364 & 1) != 0)
  {
    v373 = *(_DWORD *)(v13 + 8696);
    v375 = *(_DWORD *)(v13 + 9012);
  }
  else
  {
    v372 = *(_DWORD *)(v13 + 9012);
  }
  v376 = *(_DWORD *)(v13 + 8728);
  if ((v364 & 1) != 0)
    v377 = *(_DWORD *)(v13 + 8864);
  else
    v377 = *(_DWORD *)(v13 + 8728);
  v378 = *(_DWORD *)(v13 + 8768);
  if ((v364 & 1) == 0)
    v376 = *(_DWORD *)(v13 + 8768);
  v379 = *(_DWORD *)(v13 + 9576);
  if ((v364 & 1) == 0)
  {
    v378 = *(_DWORD *)(v13 + 9576);
    v379 = *(_DWORD *)(v13 + 8864);
  }
  v380 = *(_DWORD *)(v13 + 9200);
  v381 = *(_DWORD *)(v13 + 9496);
  if ((v364 & 1) != 0)
    v382 = *(_DWORD *)(v13 + 9496);
  else
    v382 = *(_DWORD *)(v13 + 9200);
  v383 = *(_DWORD *)(v13 + 9360);
  if ((v364 & 1) != 0)
  {
    v381 = *(_DWORD *)(v13 + 9360);
    v383 = *(_DWORD *)(v13 + 9480);
  }
  else
  {
    v380 = *(_DWORD *)(v13 + 9480);
  }
  v384 = *(_DWORD *)(v13 + 8860);
  v385 = *(_DWORD *)(v13 + 8868);
  if ((v364 & 1) != 0)
    v386 = *(_DWORD *)(v13 + 8868);
  else
    v386 = *(_DWORD *)(v13 + 8860);
  if ((v364 & 1) != 0)
    v385 = *(_DWORD *)(v13 + 9568);
  v387 = *(_DWORD *)(v13 + 8792);
  if ((v364 & 1) == 0)
  {
    v384 = *(_DWORD *)(v13 + 8792);
    v387 = *(_DWORD *)(v13 + 9568);
  }
  v388 = v367 + 334112569;
  v389 = *(_DWORD *)(v13 + 8356);
  if ((v364 & 1) != 0)
    v390 = v388;
  else
    v390 = *(_DWORD *)(v13 + 8356);
  v391 = *(_DWORD *)(v13 + 9104);
  if ((v364 & 1) != 0)
  {
    v388 = *(_DWORD *)(v13 + 8152);
  }
  else
  {
    v389 = *(_DWORD *)(v13 + 9104);
    v391 = *(_DWORD *)(v13 + 8152);
  }
  v392 = (v364 & 2) == 0;
  if ((v364 & 2) != 0)
    v393 = v370;
  else
    v393 = v371;
  *(_DWORD *)(v13 + 8328) = v393;
  if (v392)
    v394 = v370;
  else
    v394 = v371;
  *(_DWORD *)(v13 + 9464) = v394;
  if (v392)
    v395 = v368;
  else
    v395 = v369;
  *(_DWORD *)(v13 + 8736) = v395;
  if (v392)
    v396 = v369;
  else
    v396 = v368;
  *(_DWORD *)(v13 + 8888) = v396;
  if (v392)
    v397 = v375;
  else
    v397 = v374;
  *(_DWORD *)(v13 + 8696) = v397;
  if (v392)
    v398 = v374;
  else
    v398 = v375;
  *(_DWORD *)(v13 + 9240) = v398;
  if (v392)
    v399 = v373;
  else
    v399 = v372;
  *(_DWORD *)(v13 + 9136) = v399;
  if (v392)
    v400 = v372;
  else
    v400 = v373;
  *(_DWORD *)(v13 + 9012) = v400;
  if (v392)
    v401 = v376;
  else
    v401 = v379;
  *(_DWORD *)(v13 + 8768) = v401;
  if (v392)
    v402 = v379;
  else
    v402 = v376;
  *(_DWORD *)(v13 + 8864) = v402;
  if (v392)
    v403 = v377;
  else
    v403 = v378;
  *(_DWORD *)(v13 + 8728) = v403;
  if (v392)
    v404 = v378;
  else
    v404 = v377;
  *(_DWORD *)(v13 + 9576) = v404;
  if (v392)
    v405 = v382;
  else
    v405 = v383;
  *(_DWORD *)(v13 + 9200) = v405;
  if (v392)
    v406 = v383;
  else
    v406 = v382;
  *(_DWORD *)(v13 + 9360) = v406;
  if (v392)
    v407 = v381;
  else
    v407 = v380;
  *(_DWORD *)(v13 + 9496) = v407;
  if (v392)
    v408 = v380;
  else
    v408 = v381;
  *(_DWORD *)(v13 + 9480) = v408;
  if (v392)
    v409 = v385;
  else
    v409 = v384;
  *(_DWORD *)(v13 + 8868) = v409;
  if (v392)
    v410 = v384;
  else
    v410 = v385;
  *(_DWORD *)(v13 + 8792) = v410;
  if (v392)
    v411 = v387;
  else
    v411 = v386;
  *(_DWORD *)(v13 + 9568) = v411;
  if (v392)
    v412 = v391;
  else
    v412 = v390;
  *(_DWORD *)(v13 + 8152) = v412;
  if (v392)
    v413 = v390;
  else
    v413 = v391;
  *(_DWORD *)(v13 + 8356) = v413;
  if (v392)
    v414 = v388;
  else
    v414 = v389;
  *(_DWORD *)(v13 + 8688) = v414;
  if (v392)
    v415 = v389;
  else
    v415 = v388;
  *(_DWORD *)(v13 + 9104) = v415;
  v416 = *(_DWORD *)(v13 + 8720);
  if ((*(_DWORD *)(v13 + 8992) & 1) != 0)
    v417 = *(_DWORD *)(v13 + 9736);
  else
    v417 = *(_DWORD *)(v13 + 8720);
  v418 = *(_DWORD *)(v13 + 8160);
  if ((*(_DWORD *)(v13 + 8992) & 1) == 0)
    v416 = *(_DWORD *)(v13 + 8160);
  v419 = *(_DWORD *)(v13 + 8616);
  if ((*(_DWORD *)(v13 + 8992) & 1) == 0)
  {
    v418 = *(_DWORD *)(v13 + 8616);
    v419 = *(_DWORD *)(v13 + 9736);
  }
  v420 = -5 - *(_DWORD *)(v13 + 9544);
  v421 = (v420 & 2) == 0;
  if ((v420 & 2) != 0)
    v422 = v418;
  else
    v422 = v417;
  if (!v421)
    v418 = v417;
  v423 = *(_QWORD *)(v13 + 8416);
  v424 = *(_QWORD *)(v13 + 8440);
  if (v421)
    v426 = v416;
  else
    v426 = v419;
  if (v421)
    v427 = v419;
  else
    v427 = v416;
  v428 = ((unint64_t)(v418 ^ 0x501DFA7u) >> v423) ^ ((unint64_t)(v418 ^ 0x501DFA7u) << v424);
  v429 = *(_DWORD *)(v13 + 8656);
  v430 = *(_QWORD *)(v13 + 8504);
  v431 = *(_QWORD *)(v13 + 8776);
  v433 = *(_QWORD *)(v13 + 8424);
  if (*(_DWORD *)(v13 + 9528) == 84008871)
  {
    v435 = v422;
  }
  else
  {
    v425 = ((unint64_t)(v422 ^ 0x501DFA7u) << v424) | ((unint64_t)(v422 ^ 0x501DFA7u) >> v423);
    v435 = v425 + 84008871 - ((2 * v425) & 0xA03BF4E);
  }
  v432 = ((unint64_t)(v429 ^ 0xBF32FA74) << v430) + ((unint64_t)(v429 ^ 0xBF32FA74) >> v431);
  v436 = v432 - 1087178124 - ((2 * v432) & 0x7E65F4E8);
  v437 = ((unint64_t)(v427 ^ 0x501DFA7u) << v424) ^ ((unint64_t)(v427 ^ 0x501DFA7u) >> v433);
  v438 = v437 + 84008871 - ((2 * v437) & 0xA03BF4E);
  v439 = *(_DWORD *)(v13 + 8936);
  if (v439 == 84008871)
    v440 = v418;
  else
    v440 = v428 + 84008871 - ((2 * v428) & 0xA03BF4E);
  if (v439 == 84008871)
  {
    v441 = v426;
  }
  else
  {
    v434 = ((unint64_t)(v426 ^ 0x501DFA7u) << v424) | ((unint64_t)(v426 ^ 0x501DFA7u) >> v433);
    v441 = v434 + 84008871 - ((2 * v434) & 0xA03BF4E);
  }
  *(_DWORD *)(v13 + 9736) = v441;
  v442 = *(_DWORD *)(v13 + 9728) & 0x20202020 ^ 0x30301030;
  v443 = *(_DWORD *)(v13 + 8392) ^ 0x10303000;
  v444 = *(_QWORD *)(v13 + 9128);
  v445 = *(_QWORD *)(v13 + 8408);
  if (v439 != 84008871)
    v427 = v438;
  v447 = __ROR4__((((unint64_t)(*(_DWORD *)(v13 + 9172) ^ 0xBF32FA74) >> v431 >> 3) | ((unint64_t)(*(_DWORD *)(v13 + 9172) ^ 0xBF32FA74) >> v431 << 29)) ^ __ROR4__((unint64_t)(*(_DWORD *)(v13 + 9172) ^ 0xBF32FA74) << v430, 3) ^ 0x6184F2C4, 29) ^ 0xB3156C57;
  if (*(_DWORD *)(v13 + 9552) == 84008871)
    v447 = *(_DWORD *)(v13 + 9172);
  v446 = ((unint64_t)(v443 & v442) << v444)
       + ((unint64_t)(v442 & *(_QWORD *)(v13 + 9432)) >> v445);
  v448 = (v427 ^ v446 ^ 0xBA3325D3 ^ v447) + 1815114494 - ((2 * (v427 ^ v446 ^ 0xBA3325D3 ^ v447)) & 0xD860E5FC);
  v449 = *(_DWORD *)(v13 + 9160);
  v450 = *(_QWORD *)(v13 + 8512);
  v451 = ((unint64_t)(v449 ^ 0xBF32FA74) >> v431) + ((unint64_t)(v449 ^ 0xBF32FA74) << v450);
  v452 = v451 - 1087178124 - ((2 * v451) & 0x7E65F4E8);
  v453 = *(_DWORD *)(v13 + 8344);
  v454 = *(_DWORD *)(v13 + 8308);
  v455 = v453 & v454;
  v456 = ((unint64_t)(v443 & v453) << v444) ^ (v455 >> v445);
  v457 = ((unint64_t)(*(_DWORD *)(v13 + 8548) ^ 0xBF32FA74) << v450)
       + ((unint64_t)(*(_DWORD *)(v13 + 8548) ^ 0xBF32FA74) >> v431);
  v458 = v457 - 1087178124 - ((2 * v457) & 0x7E65F4E8);
  v459 = v456 - 1087178124 - ((2 * v456) & 0x7E65F4E8);
  v460 = *(_DWORD *)(v13 + 9488);
  v461 = v448 ^ v460;
  v462 = -*(unsigned __int8 *)(*(_QWORD *)(v13 + 7792)
                             + (((v461 >> 10) & 0xC0 | (v461 >> 18) & 0x3F) ^ 0x16)
                             + 3154);
  v463 = v462 >> 3;
  v464 = v462 ^ ((((v462 >> 3) ^ v462) & 0xF8) >> 3);
  v465 = *(_DWORD *)(v13 + 8472);
  if (v465 == 84008871)
    v466 = v429;
  else
    v466 = v436;
  if (v465 != 84008871)
    v449 = v452;
  if (*(_DWORD *)(v13 + 8932) == -762037150)
    v467 = *(_DWORD *)(v13 + 8548);
  else
    v467 = v458;
  v468 = ((v467 ^ v459) + 84008871 - ((2 * (v467 ^ v459)) & 0xA03BF4E)) ^ v435;
  v469 = v454 & v442;
  v470 = *(_QWORD *)(v13 + 9064);
  v471 = *(_DWORD *)(v13 + 8332);
  v472 = *(_QWORD *)(v13 + 8800);
  v473 = (v469 >> v470) | ((unint64_t)(v471 & v442) << v472);
  v474 = v449 ^ (v473 - 1087178124 - ((2 * v473) & 0x7E65F4E8));
  v475 = (v474 + 84008871 - ((2 * v474) & 0xA03BF4E)) ^ v440;
  v476 = (v475 + 1815114494 - ((2 * v475) & 0xD860E5FC)) ^ v460;
  v477 = *(_QWORD *)(v13 + 7896);
  v478 = (v468 + 1815114494 - ((2 * v468) & 0xD860E5FC)) ^ v460;
  *(_DWORD *)(v13 + 8712) = *(_DWORD *)(v477 + 4 * BYTE2(v476)) ^ 0x501DFA7 ^ __ROR4__(*(_DWORD *)(v477+ 4* ((v478 - ((2 * v478) & 0xC2) - 31) ^ 0xE1u)), 16);
  v479 = -1122415715 * *(_DWORD *)(v13 + 9472) + ((-1122415715 * *(_DWORD *)(v13 + 9472)) >> 16);
  v480 = -379187583 * ((v479 ^ (v479 >> 8)) + *(_DWORD *)(v13 + 9040));
  v481 = *(_DWORD *)(v13 + 8352) + v477 + (v480 ^ HIWORD(v480) ^ ((v480 ^ HIWORD(v480)) >> 8));
  *(_DWORD *)(v13 + 9472) = v481 - 2018517544 - ((2 * v481) & 0xF5FBBB0);
  v482 = *(_DWORD *)(v13 + 9176) + *(_DWORD *)(v13 + 8116);
  *(_DWORD *)(v13 + 9560) = v482 + 260362614 - ((2 * v482) & 0x1F09A2EC);
  v483 = ((unint64_t)(v453 & v471) << v472) ^ 0xBA3325D3 ^ (v455 >> v470) ^ v466 ^ *(_DWORD *)(v13 + 9736);
  v484 = *(_DWORD *)(v477 + 4 * BYTE2(v478)) + 84008871 - ((2 * *(_DWORD *)(v477 + 4 * BYTE2(v478))) & 0xA03BF4E);
  v485 = ((*(_DWORD *)(v477 + 4 * BYTE1(v461)) >> 8) ^ 0x37E742FF)
       + (*(_DWORD *)(v477 + 4 * BYTE1(v461)) << 24)
       + ((*(_DWORD *)(v477 + 4 * BYTE1(v461)) >> 7) & 0x1CE85FE)
       - 937902847;
  *(_DWORD *)(v13 + 9488) = v460;
  v486 = (v483 + 1815114494 - ((2 * v483) & 0xD860E5FC)) ^ v460;
  v487 = *(_DWORD *)(v477 + 4 * BYTE2(v486));
  *(_DWORD *)(v13 + 9064) = v485 ^ v484;
  v488 = *(_DWORD *)(v477 + 4 * BYTE1(v478));
  *(_DWORD *)(v13 + 8616) = v487 + 84008871 - ((2 * v487) & 0xA03BF4E);
  *(_DWORD *)(v13 + 9128) = v488 + 84008871 - ((2 * v488) & 0xA03BF4E);
  v489 = *(_DWORD *)(v477 + ((v478 >> 22) & 0x3FC));
  *(_DWORD *)(v13 + 9736) = (v489 << 8) + 84008871 - ((v489 << 9) & 0xA03BE00);
  *(_DWORD *)(v13 + 7696) = v476 - ((2 * v476) & 0xFFFFFFA4) + 82;
  *(_QWORD *)(v13 + 7216) = (v464 ^ 0x2Bu) - 105;
  *(_DWORD *)(v13 + 9176) = HIBYTE(v489);
  *(_QWORD *)(v13 + 7776) = v486 >> 24;
  *(_QWORD *)(v13 + 7712) = v476 >> 24;
  *(_QWORD *)(v13 + 7856) = v461;
  *(_QWORD *)(v13 + 9432) = v486;
  *(_QWORD *)(v13 + 7944) = v486 >> 8;
  *(_QWORD *)(v13 + 7688) = v461 >> ((v463 & 0x18 ^ 0x18) + (v463 & 0x18u));
  *(_QWORD *)(v13 + 7920) = v476 >> 8;
  *(_DWORD *)(v13 + 8116) = *(_DWORD *)(v13 + 9544);
  JUMPOUT(0x100356458);
}

uint64_t sub_100360508(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _DWORD *v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;

  *(_DWORD *)(v6 + 9504) = v5;
  *(_QWORD *)(v6 + 7536) = a2;
  *(_QWORD *)(v6 + 7808) = v10;
  *(_DWORD *)(v6 + 8160) = (v4 ^ v3) + ((v4 ^ v3) >> 8) + v8 - (v9 & (2 * ((v4 ^ v3) + ((v4 ^ v3) >> 8))));
  v11 = *(_DWORD **)(v6 + 8248);
  v12 = *(_QWORD *)(v6 + 7072);
  v13 = *(_QWORD *)(v6 + 7736);
  v14 = *(_QWORD *)(v6 + 7680);
  v15 = *(_QWORD *)(v6 + 7672);
  v16 = *(_QWORD **)(v6 + 9088);
  v17 = *(_DWORD **)(v6 + 9216);
  v18 = *(_DWORD *)(v6 + 9736);
  *(_DWORD *)(v6 + 9736) = v18;
  v19 = (v18 + 824578114) & 0xCED9DF7F;
  *(_DWORD *)(v6 + 9640) = v19;
  *(_DWORD *)(v6 + 9480) = 1202855529 * (v2 & 0x7BB32079)
                         - 465820929
                         + ~(((v2 & 0x7BB32079) * (v19 ^ 0xF6431A1) + 242517678) & 0xA03BF4E);
  v20 = *(_DWORD *)(*v16 + (int)(*v17 & 0xE8B5AED8));
  v21 = ((v20 ^ *(_DWORD *)(v6 + 6244)) & 0x7FFFFFFF) * v7;
  v22 = v21 ^ HIWORD(v21);
  v23 = v22 * v7;
  v24 = (v22 * v7) >> 24;
  LODWORD(v17) = -1251540992 * v22;
  v25 = v11[1549];
  v26 = *(_QWORD *)(v6 + 7872);
  v27 = *(_DWORD *)(v26 + 4 * v24) ^ v11[1604] ^ *(_DWORD *)(v14 + 4 * (v24 + 1)) ^ *(_DWORD *)(v15 + 4 * (v24 + 1)) ^ v17 ^ v23 ^ (1591307393 * v24);
  LODWORD(v17) = v11[1634];
  v28 = v11[1591];
  v29 = v11[1638];
  *(_DWORD *)(v6 + 9496) = 1202855529 * v27 - 465820930 - ((258227410 * v27 + 242517678) & 0xA03BF4E);
  v30 = ((v20 ^ *(_DWORD *)(v6 + 6272)) & 0x7FFFFFFF) * v7;
  v31 = v30 ^ HIWORD(v30);
  v32 = (-1251540992 * v31) ^ v28 ^ (v31 * v7) ^ *(_DWORD *)(v26 + 4 * ((v31 * v7) >> 24)) ^ (1591307393 * ((v31 * v7) >> 24)) ^ *(_DWORD *)(v14 + 4 * (((v31 * v7) >> 24) + 1)) ^ *(_DWORD *)(v15 + 4 * (((v31 * v7) >> 24) + 1));
  v33 = ((v20 ^ *(_DWORD *)(v6 + 6264)) & 0x7FFFFFFF) * v7;
  v34 = v33 ^ HIWORD(v33);
  LODWORD(v17) = (-1251540992 * v34) ^ v17 ^ (v34 * v7) ^ (1591307393 * ((v34 * v7) >> 24)) ^ *(_DWORD *)(v26 + 4 * ((v34 * v7) >> 24)) ^ *(_DWORD *)(v14 + 4 * (((v34 * v7) >> 24) + 1)) ^ *(_DWORD *)(v15 + 4 * (((v34 * v7) >> 24) + 1));
  v35 = ((v20 ^ *(_DWORD *)(v6 + 6228)) & 0x7FFFFFFF) * v7;
  v36 = v35 ^ HIWORD(v35);
  v37 = (-1251540992 * v36) ^ v29 ^ (v36 * v7) ^ (1591307393 * ((v36 * v7) >> 24)) ^ *(_DWORD *)(v26 + 4 * ((v36 * v7) >> 24)) ^ *(_DWORD *)(v14 + 4 * (((v36 * v7) >> 24) + 1)) ^ *(_DWORD *)(v15 + 4 * (((v36 * v7) >> 24) + 1));
  *(_DWORD *)(v6 + 9608) = 1202855529 * v32 - 465820930 - ((258227410 * v32 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v6 + 9456) = 1202855529 * v37 - 465820930 - ((258227410 * v37 + 242517678) & 0xA03BF4E);
  v38 = ((v20 ^ *(_DWORD *)(v6 + 6252)) & 0x7FFFFFFF) * v7;
  v39 = v38 ^ HIWORD(v38);
  v40 = *(_DWORD *)(v26 + 4 * ((v39 * v7) >> 24)) ^ v25 ^ *(_DWORD *)(v14
                                                                                    + 4
                                                                                    * (((v39 * v7) >> 24)
                                                                                     + 1)) ^ *(_DWORD *)(v15 + 4 * (((v39 * v7) >> 24) + 1)) ^ (-1251540992 * v39) ^ (v39 * v7) ^ (1591307393 * ((v39 * v7) >> 24));
  *(_DWORD *)(v6 + 9376) = 1202855529 * (_DWORD)v17 - 465820930 - ((258227410 * (_DWORD)v17 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v6 + 9520) = 1202855529 * v40 - 465820930 - ((258227410 * v40 + 242517678) & 0xA03BF4E);
  v41 = ((v20 ^ *(_DWORD *)(v6 + 6256)) & 0x7FFFFFFF) * v7;
  v42 = v41 ^ HIWORD(v41);
  v43 = 4 * ((v42 * v7) >> 24);
  v44 = *(_DWORD *)(v13 + v43);
  v45 = *(_QWORD *)(v6 + 7816);
  v46 = *(_DWORD *)(v45 + v43);
  LODWORD(v43) = v11[1649];
  v47 = v11[1630];
  v48 = *(_QWORD *)(v6 + 7928);
  v49 = (-1251540992 * v42) ^ v11[1596] ^ (v42 * v7) ^ v44 ^ v46 ^ (1551792265 * ((v42 * v7) >> 24)) ^ *(_DWORD *)(v48 + 4 * (((v42 * v7) >> 24) + 4));
  v50 = ((v20 ^ *(_DWORD *)(v6 + 6240)) & 0x7FFFFFFF) * v7;
  v51 = v50 ^ HIWORD(v50);
  v52 = (v51 * v7) ^ (-1251540992 * v51) ^ v11[1645] ^ (1551792265 * ((v51 * v7) >> 24)) ^ *(_DWORD *)(v13 + 4 * ((v51 * v7) >> 24)) ^ *(_DWORD *)(v45 + 4 * ((v51 * v7) >> 24)) ^ *(_DWORD *)(v48 + 4 * (((v51 * v7) >> 24) + 4));
  *(_DWORD *)(v6 + 9312) = 1202855529 * v52 - 465820929 + ~((258227410 * v52 + 242517678) & 0xA03BF4E);
  v53 = ((v20 ^ *(_DWORD *)(v6 + 6248)) & 0x7FFFFFFF) * v7;
  v54 = v53 ^ HIWORD(v53);
  v55 = *(_DWORD *)(v13 + 4 * ((v54 * v7) >> 24)) ^ v47 ^ *(_DWORD *)(v45
                                                                                    + 4
                                                                                    * ((v54 * v7) >> 24)) ^ *(_DWORD *)(v48 + 4 * (((v54 * v7) >> 24) + 4)) ^ (-1251540992 * v54) ^ (v54 * v7) ^ (1551792265 * ((v54 * v7) >> 24));
  *(_DWORD *)(v6 + 9224) = 1202855529 * v55 - 465820930 - ((258227410 * v55 + 242517678) & 0xA03BF4E);
  v56 = ((v20 ^ *(_DWORD *)(v6 + 6232)) & 0x7FFFFFFF) * v7;
  v57 = v56 ^ HIWORD(v56);
  v58 = *(_DWORD *)(v13 + 4 * ((v57 * v7) >> 24)) ^ v43 ^ *(_DWORD *)(v45
                                                                                    + 4
                                                                                    * ((v57 * v7) >> 24)) ^ *(_DWORD *)(v48 + 4 * (((v57 * v7) >> 24) + 4)) ^ (-1251540992 * v57) ^ (v57 * v7) ^ (1551792265 * ((v57 * v7) >> 24));
  *(_DWORD *)(v6 + 9272) = 1202855529 * v58 - 465820930 - ((258227410 * v58 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v6 + 9184) = 1202855529 * v49 - 465820930 - ((258227410 * v49 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v6 + 9600) = v11[1646];
  LODWORD(v43) = ((v20 ^ *(_DWORD *)(v6 + 6224)) & 0x7FFFFFFF) * v7;
  v59 = v43 ^ WORD1(v43);
  *(_DWORD *)(v6 + 9568) = -1251540992 * v59;
  *(_DWORD *)(v6 + 9560) = ((v59 * v7) >> 24) + 4;
  v60 = ((v20 ^ *(_DWORD *)(v6 + 7136)) & 0x7FFFFFFF) * v7;
  v61 = v60 ^ HIWORD(v60);
  v62 = (v61 * v7) >> 24;
  v63 = *(_DWORD *)(v12 + 4 * v62) ^ v11[1683] ^ *(_DWORD *)(*(_QWORD *)(v6 + 7128) + 4 * (v62 + 4)) ^ (-1251540992 * v61) ^ (v61 * v7) ^ *(_DWORD *)(*(_QWORD *)(v6 + 7112) + 4 * (v62 + 5)) ^ (2021099313 * v62);
  *(_DWORD *)(v6 + 9616) = v8 + 1202855529 * v63 - ((258227410 * v63) & 0xA03BF4E);
  *(_DWORD *)(v6 + 9584) = v11[1617];
  v64 = ((v20 ^ *(_DWORD *)(v6 + 6260)) & 0x7FFFFFFF) * v7;
  v65 = v64 ^ HIWORD(v64);
  v66 = *(_DWORD *)(v13 + 4 * ((v65 * v7) >> 24)) ^ v11[1650] ^ *(_DWORD *)(v45
                                                                                          + 4
                                                                                          * ((v65 * v7) >> 24)) ^ *(_DWORD *)(v48 + 4 * (((v65 * v7) >> 24) + 4)) ^ (-1251540992 * v65) ^ (v65 * v7) ^ (1551792265 * ((v65 * v7) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                        + 8
                                        * ((15946 * (v66 - 789479332 - ((2 * v66) & 0xA1E300AA) != -789479332)) ^ *(_DWORD *)(v6 + 9736)))
                            - 4))();
}

void sub_100360598(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  _DWORD *v11;
  int v12;
  int v13;
  int v14;

  v11[2154] = a4;
  v11[2144] = v13;
  v11[2124] = v10 + v14 - (a7 & (2 * v10));
  v11[2040] = v8 ^ 0xF0FD0BD3;
  v11[2248] = (((v7 - 397) | 0x222) ^ 0x6A3) + (v11[2434] ^ 0xFAFE2058);
  v11[2260] = v9 ^ a3;
  v11[2186] = v11[2002];
  v11[2133] = v11[2005];
  v11[2376] = v11[2006];
  v11[2287] = v11[2196];
  v11[2178] = v12;
  JUMPOUT(0x10036C2F8);
}

void sub_100360684()
{
  JUMPOUT(0x100360728);
}

uint64_t sub_100361520(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  v23 = v20 ^ *(_DWORD *)(v12 + 9640) ^ *(_DWORD *)(v12 + 9720) ^ *(_DWORD *)(v12 + 9688);
  *(_DWORD *)(v12 + 8236) = v22 - v7;
  v24 = (v9 - 1759986750) & 0x68E759BD;
  *(_DWORD *)(v12 + 8392) = v23 ^ *(_DWORD *)(v12 + 9696) ^ 0x95ADCA00;
  *(_DWORD *)(v12 + 8300) = v17 - 655289174 + v21 + 1;
  *(_DWORD *)(v12 + 8196) = v18 - v19;
  *(_DWORD *)(v12 + 8132) = a7 + 414516081 + a6 + 1;
  *(_DWORD *)(v12 + 7832) ^= *(_DWORD *)(v12 + 8752) ^ v16 ^ *(_DWORD *)(v12 + 7964) ^ (v15 - v14) ^ 0xFC2CBB65;
  *(_DWORD *)(v12 + 7904) = *(_DWORD *)(v12 + 9368) ^ 0xE40EC2A3 ^ *(_DWORD *)(v12 + 9680) ^ (a2 - v13);
  v25 = *(_DWORD *)(v12 + 9600) - *(_DWORD *)(v12 + 9608);
  *(_DWORD *)(v12 + 8160) = *(_DWORD *)(v12 + 9616) ^ (v10 - v11) ^ 0x14040C48;
  *(_DWORD *)(v12 + 8240) = *(_DWORD *)(v12 + 9736) ^ v25 ^ 0x40E11948 ^ v24;
  *(_QWORD *)(v12 + 7864) = v8 ^ 0xFFFFFFA1;
  v26 = *(_QWORD *)(v12 + 7632);
  v27 = *(_QWORD *)(v12 + 7936)
      + 0x2EDFEB71A9B335B9
      * (*(_QWORD *)(v12 + 7920)
       + 0x1420766D02EAA28FLL
       * (*(_QWORD *)(v12 + 7808)
        + 0x3ECFC13B86A3AD53
        * (-*(_QWORD *)(v12 + 9632)
         - 0x1A610916362696F9
         * ((0x9827543B9599FAA3
           * ((0xA5BDEC863FCFB315
             * ((0x115B772089875D99
               * ((0x5EC4011B4E6281C3 * (*(_QWORD *)(v12 + 9664) ^ *(_QWORD *)(v12 + 9656))) ^ v26)) ^ *(_QWORD *)(v12 + 9672))) ^ *(_QWORD *)(v12 + 7648))) ^ *(_QWORD *)(v12 + 7640)))));
  v28 = ((_BYTE)v26 + 13) & 0xF;
  v29 = *(_QWORD *)(v12 + 6208);
  v30 = (0x5CA90BEAF5FF36D1
       * (*(_QWORD *)(v12 + 7616)
        + 0x711FEDAE74BAB401
        * (*(_QWORD *)(v12 + 7568)
         + 0x4CC9F82598CE60D3
         * (*(_QWORD *)(v12 + 7664)
          + 0x3BD732E6AF717095
          * (((v27 & 0x37E3D6F65B1E8395 ^ 0x37E3D6F65B1E8395) + (v27 & 0x37E3D6F65B1E8395)) * v27
           - *(_QWORD *)(v12 + 7624)))))) ^ *(_QWORD *)(v12 + 7784);
  v31 = *(unsigned __int8 *)(v29 + ((2 * (*(_BYTE *)(v29 + v28) & 3) + (*(_BYTE *)(v29 + v28) ^ 3)) & 0xF));
  *(_QWORD *)(v12 + 7944) = v31;
  v32 = *(unsigned __int8 *)(v29 + (((_BYTE)v31 + 1) & 0xF));
  *(_QWORD *)(v12 + 7824) = v32;
  v33 = ((_BYTE)v32 + 14) & 0xF;
  *(_QWORD *)(v12 + 7656) = 0x1473F4056DBC1677 * v30
                          + 0x7DD7830B36EAB274
                          - ((0x28E7E80ADB782CEELL * v30) & 0xFBAF06166DD564E8);
  v34 = *(_QWORD *)(v12 + 7008);
  *(_DWORD *)(v12 + 8176) = -2022246796;
  *(_DWORD *)(v12 + 7560) = *(_DWORD *)(v12 + 5436);
  *(_DWORD *)(v12 + 8264) = 414516081;
  *(_DWORD *)(v12 + 8152) = 84008871;
  *(_DWORD *)(v12 + 7964) = 2093181157;
  v35 = *(_QWORD *)(v12 + 9744);
  *(_QWORD *)(v12 + 7752) = v34;
  *(_DWORD *)(v12 + 7552) = v33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35
                                        + 8
                                        * ((87
                                          * ((((*(_DWORD *)(v12 + 9648) ^ 0x501DFA7)
                                             + 84008871
                                             - ((2 * (*(_DWORD *)(v12 + 9648) ^ 0x501DFA7)) & 0xA03BF4E)) ^ 0x501DFA7u) >= v33)) ^ v24))
                            - 12))();
}

uint64_t sub_100361A1C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;

  *(_DWORD *)(v3 + 9736) = v2;
  v8 = *(_QWORD *)(v3 + 7752);
  v9 = *(_QWORD *)(v3 + 7672);
  v10 = *(_QWORD *)(v3 + 7872);
  *(_QWORD *)(v3 + 7752) = v8;
  v11 = v1 ^ v6;
  v12 = *(unsigned __int8 *)(v8 - 0x2045F544234E1E32 + (v1 ^ v6));
  v13 = v12 * v4;
  v14 = ((v12 * v4 + v6 - ((v12 * (((v0 + 1261522915) & 0x2F91A7BF) + 192340592)) & v5)) ^ *(_DWORD *)(v3 + 9736))
      + (v1 ^ v6);
  v15 = v14 + HIWORD(v14) + ((v14 + HIWORD(v14)) >> 8);
  v16 = (v15 ^ v13) + v11 + (((v15 ^ v13) + v11) >> 16);
  *(_DWORD *)(v3 + 9736) = v16 + (v16 >> 8) + v6 - (v5 & (2 * (v16 + (v16 >> 8))));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((964
                                                                         * (((v6 + v11 - ((2 * v11 + 2) & v5) + 1) ^ (v6 - 7)) < 0x10)) ^ (v0 + 2059601322))))(3496888889, 798074815, v9, v10);
}

void sub_100361B28(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W5>, uint64_t a4@<X6>, _QWORD *a5@<X7>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  _DWORD *v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  _DWORD *v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  char *v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  unsigned int v169;
  uint64_t v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  uint64_t v190;
  int v191;
  int v192;

  v13 = *(_DWORD *)(*a5 + (int)(*v10 & 0xE8B5AED8));
  v14 = ((v13 ^ *(_DWORD *)(v7 + 5628)) & 0x7FFFFFFF) * v8;
  v15 = v14 ^ HIWORD(v14);
  v16 = (v15 * v8) >> 24;
  v17 = *(_DWORD **)(v7 + 8248);
  v18 = v17[1673] ^ *(_DWORD *)(a2 + 4 * v16) ^ *(_DWORD *)(a4 + 4 * (v16 + 1)) ^ *(_DWORD *)(a1 + 4 * (v16 + 1)) ^ (v15 * (v6 - 1251542970)) ^ (v15 * v8) ^ (1591307393 * v16);
  *(_DWORD *)(v7 + 9600) = a3;
  *(_DWORD *)(v7 + 8632) = 1202855529 * v18 - 465820930 - ((258227410 * v18 + 242517678) & v11);
  v19 = ((v13 ^ *(_DWORD *)(v7 + 5840)) & 0x7FFFFFFF) * v8;
  v20 = v19 ^ HIWORD(v19);
  v21 = (v20 * v8) >> 24;
  v22 = v17[1622] ^ (v20 * v9) ^ (v20 * v8) ^ *(_DWORD *)(a2 + 4 * v21) ^ *(_DWORD *)(a4 + 4 * (v21 + 1)) ^ *(_DWORD *)(a1 + 4 * (v21 + 1)) ^ (1591307393 * v21);
  *(_DWORD *)(v7 + 9664) = v12 + 1202855529 * v22 - ((258227410 * v22) & v11);
  v23 = ((v13 ^ *(_DWORD *)(v7 + 5592)) & 0x7FFFFFFF) * v8;
  v24 = v23 ^ HIWORD(v23);
  v25 = v17[1572] ^ *(_DWORD *)(a2 + 4 * ((v24 * v8) >> 24)) ^ *(_DWORD *)(a4
                                                                                         + 4
                                                                                         * (((v24 * v8) >> 24)
                                                                                          + 1)) ^ *(_DWORD *)(a1 + 4 * (((v24 * v8) >> 24) + 1)) ^ (v24 * v9) ^ (v24 * v8) ^ (1591307393 * ((v24 * v8) >> 24));
  *(_DWORD *)(v7 + 9536) = 1202855529 * v25 - 465820930 - ((258227410 * v25 + 242517678) & v11);
  v26 = ((v13 ^ *(_DWORD *)(v7 + 5664)) & 0x7FFFFFFF) * v8;
  v27 = v26 ^ HIWORD(v26);
  v28 = (v27 * v8) >> 24;
  v31 = v17[1675] ^ (v27 * v9) ^ (v27 * v8) ^ *(_DWORD *)(a2 + 4 * v28) ^ *(_DWORD *)(a4 + 4 * (v28 + 1)) ^ *(_DWORD *)(a1 + 4 * (v28 + 1)) ^ (1591307393 * v28);
  *(_DWORD *)(v7 + 8912) = 1202855529 * v31 - 465820930 - ((258227410 * v31 + 242517678) & v11);
  v32 = ((v13 ^ *(_DWORD *)(v7 + 5692)) & 0x7FFFFFFF) * v8;
  v33 = v32 ^ HIWORD(v32);
  v34 = *(_QWORD *)(v7 + 7592);
  v35 = *(_QWORD *)(v7 + 7608);
  v36 = *(_QWORD *)(v7 + 7600);
  v37 = (v33 * v8) ^ (v33 * v9) ^ (-1073377343 * ((v33 * v8) >> 24)) ^ v17[1570] ^ *(_DWORD *)(v34 + 4 * ((v33 * v8) >> 24)) ^ *(_DWORD *)(v35 + 4 * ((v33 * v8) >> 24)) ^ *(_DWORD *)(v36 + 4 * (((v33 * v8) >> 24) + 3));
  *(_DWORD *)(v7 + 9464) = 1202855529 * v37 - 465820930 - ((258227410 * v37 + 242517678) & v11);
  v38 = ((v13 ^ *(_DWORD *)(v7 + 5564)) & 0x7FFFFFFF) * v8;
  v39 = v38 ^ HIWORD(v38);
  v40 = v17[1678] ^ *(_DWORD *)(v34 + 4 * ((v39 * v8) >> 24)) ^ *(_DWORD *)(v35
                                                                                          + 4
                                                                                          * ((v39 * v8) >> 24)) ^ *(_DWORD *)(v36 + 4 * (((v39 * v8) >> 24) + 3)) ^ (v39 * v9) ^ (v39 * v8) ^ (-1073377343 * ((v39 * v8) >> 24));
  *(_DWORD *)(v7 + 9424) = 1202855529 * v40 - 465820930 - ((258227410 * v40 + 242517678) & v11);
  v41 = ((v13 ^ *(_DWORD *)(v7 + 5768)) & 0x7FFFFFFF) * v8;
  v42 = v41 ^ HIWORD(v41);
  v43 = v42 * v8;
  v44 = (v42 * v8) >> 24;
  v45 = v17[1668] ^ *(_DWORD *)(a2 + 4 * v44) ^ *(_DWORD *)(a4 + 4 * (v44 + 1)) ^ *(_DWORD *)(a1 + 4 * (v44 + 1)) ^ (v42 * v9);
  *(_DWORD *)(v7 + 8964) = 1202855529 * (v45 ^ v43 ^ (1591307393 * v44))
                         - 465820930
                         - ((258227410 * (v45 ^ v43 ^ (1591307393 * v44)) + 242517678) & v11);
  v46 = ((v13 ^ *(_DWORD *)(v7 + 7020)) & 0x7FFFFFFF) * v8;
  v47 = v46 ^ HIWORD(v46);
  v48 = (v47 * v8) ^ (v47 * v9) ^ (-1073377343 * ((v47 * v8) >> 24)) ^ v17[1644] ^ *(_DWORD *)(v34 + 4 * ((v47 * v8) >> 24)) ^ *(_DWORD *)(v35 + 4 * ((v47 * v8) >> 24)) ^ *(_DWORD *)(v36 + 4 * (((v47 * v8) >> 24) + 3));
  *(_DWORD *)(v7 + 9688) = 1202855529 * v48 - 465820930 - ((258227410 * v48 + 242517678) & v11);
  v49 = ((v13 ^ *(_DWORD *)(v7 + 5516)) & 0x7FFFFFFF) * v8;
  v50 = v49 ^ HIWORD(v49);
  v51 = (v50 * v8) >> 24;
  v53 = (v50 * v8) ^ (v50 * v9) ^ (1591307393 * v51) ^ *(_DWORD *)(a2 + 4 * v51) ^ v17[1564] ^ *(_DWORD *)(a4 + 4 * (v51 + 1)) ^ *(_DWORD *)(a1 + 4 * (v51 + 1));
  *(_DWORD *)(v7 + 9200) = 1202855529 * v53 - 465820930 - ((258227410 * v53 + 242517678) & v11);
  v54 = ((v13 ^ *(_DWORD *)(v7 + 5504)) & 0x7FFFFFFF) * v8;
  v55 = v54 ^ HIWORD(v54);
  v56 = (v55 * v8) ^ (v55 * v9) ^ (-1073377343 * ((v55 * v8) >> 24)) ^ v17[1672] ^ *(_DWORD *)(v34 + 4 * ((v55 * v8) >> 24)) ^ *(_DWORD *)(v35 + 4 * ((v55 * v8) >> 24)) ^ *(_DWORD *)(v36 + 4 * (((v55 * v8) >> 24) + 3));
  *(_DWORD *)(v7 + 9680) = 1202855529 * v56 - 465820930 - ((258227410 * v56 + 242517678) & v11);
  v57 = ((v13 ^ *(_DWORD *)(v7 + 7024)) & 0x7FFFFFFF) * v8;
  v58 = v57 ^ HIWORD(v57);
  v59 = (v58 * v8) ^ (v58 * v9) ^ (-1073377343 * ((v58 * v8) >> 24)) ^ v17[1653] ^ *(_DWORD *)(v34 + 4 * ((v58 * v8) >> 24)) ^ *(_DWORD *)(v35 + 4 * ((v58 * v8) >> 24)) ^ *(_DWORD *)(v36 + 4 * (((v58 * v8) >> 24) + 3));
  *(_DWORD *)(v7 + 9504) = 1202855529 * v59 - 465820930 - ((258227410 * v59 + 242517678) & v11);
  v60 = ((v13 ^ *(_DWORD *)(v7 + 5740)) & 0x7FFFFFFF) * v8;
  v61 = v60 ^ HIWORD(v60);
  v62 = (v61 * v8) >> 24;
  v63 = (char *)*(&off_1004ECA20 + v6 - 1270) - 12;
  v64 = (char *)*(&off_1004ECA20 + v6 - 1102) - 4;
  v65 = (char *)*(&off_1004ECA20 + v6 - 849) - 12;
  v66 = (v61 * v8) ^ (v61 * v9) ^ (-379878533 * v62) ^ *(_DWORD *)&v63[4 * v62] ^ v17[1629] ^ *(_DWORD *)&v64[4 * v62 + 4] ^ *(_DWORD *)&v65[4 * v62 + 8];
  v67 = (v66 + v12 - (v11 & (2 * v66))) ^ v12;
  *(_DWORD *)(v7 + 8904) = 1202855529 * v67 - 465820930 - ((258227410 * v67 + 242517678) & v11);
  v68 = ((v13 ^ *(_DWORD *)(v7 + 5540)) & 0x7FFFFFFF) * v8;
  v69 = v68 ^ HIWORD(v68);
  v70 = *(_QWORD *)(v7 + 7744);
  v71 = *(_QWORD *)(v7 + 7720);
  v72 = *(_QWORD *)(v7 + 7728);
  v73 = v17[1674] ^ *(_DWORD *)(v70 + 4 * ((v69 * v8) >> 24)) ^ *(_DWORD *)(v71
                                                                                          + 4
                                                                                          * (((v69 * v8) >> 24)
                                                                                           + 2)) ^ *(_DWORD *)(v72 + 4 * ((v69 * v8) >> 24)) ^ (v69 * v9) ^ (v69 * v8) ^ (-1609471543 * ((v69 * v8) >> 24));
  v74 = ((v13 ^ *(_DWORD *)(v7 + 6992)) & 0x7FFFFFFF) * v8;
  v75 = v74 ^ HIWORD(v74);
  v76 = v17[1607] ^ *(_DWORD *)(a2 + 4 * ((v75 * v8) >> 24)) ^ *(_DWORD *)(a4
                                                                                         + 4
                                                                                         * (((v75 * v8) >> 24)
                                                                                          + 1)) ^ *(_DWORD *)(a1 + 4 * (((v75 * v8) >> 24) + 1)) ^ (v75 * v9) ^ (v75 * v8) ^ (1591307393 * ((v75 * v8) >> 24));
  v77 = 1202855529 * v76 - ((258227410 * v76 + 1047824046) & 0x6D35FD82) + 366297624;
  *(_DWORD *)(v7 + 9672) = v77;
  v78 = ((v77 & 0x47B21E69 ^ 0x6921E41) + ((549829800 - 1202855529 * v76) & 0x47B21E69)) * v73;
  *(_DWORD *)(v7 + 9696) = v78 - 465820930 - ((2 * v78 + 242517678) & v11);
  v79 = ((v13 ^ *(_DWORD *)(v7 + 5624)) & 0x7FFFFFFF) * v8;
  v80 = v79 ^ HIWORD(v79);
  v81 = (v80 * v8) ^ (v80 * v9) ^ (-1609471543 * ((v80 * v8) >> 24)) ^ v17[1620] ^ *(_DWORD *)(v70 + 4 * ((v80 * v8) >> 24)) ^ *(_DWORD *)(v71 + 4 * (((v80 * v8) >> 24) + 2)) ^ *(_DWORD *)(v72 + 4 * ((v80 * v8) >> 24));
  *(_DWORD *)(v7 + 8368) = 1202855529 * v81 - 135313720 - ((258227410 * v81 + 1047824046) & 0x316A06E2);
  v82 = ((v13 ^ *(_DWORD *)(v7 + 5912)) & 0x7FFFFFFF) * v8;
  v83 = v82 ^ HIWORD(v82);
  v84 = (v83 * v8) >> 24;
  v85 = (v83 * v8) ^ (v83 * v9) ^ (-379878533 * v84) ^ *(_DWORD *)&v63[4 * v84] ^ v17[1558] ^ *(_DWORD *)&v64[4 * v84 + 4] ^ *(_DWORD *)&v65[4 * v84 + 8];
  *(_DWORD *)(v7 + 8868) = 1202855529 * v85 - 465820930 - ((258227410 * v85 + 242517678) & v11);
  v86 = ((v13 ^ *(_DWORD *)(v7 + 5784)) & 0x7FFFFFFF) * v8;
  v87 = v86 ^ HIWORD(v86);
  v88 = v17[1667] ^ *(_DWORD *)&v63[4 * ((v87 * v8) >> 24)] ^ *(_DWORD *)&v64[4
                                                                                          * ((v87 * v8) >> 24)
                                                                                          + 4] ^ *(_DWORD *)&v65[4 * ((v87 * v8) >> 24) + 8] ^ (v87 * v9) ^ (v87 * v8) ^ (-379878533 * ((v87 * v8) >> 24));
  *(_DWORD *)(v7 + 8888) = 1202855529 * v88 - 465820930 - ((258227410 * v88 + 242517678) & v11);
  v89 = ((v13 ^ *(_DWORD *)(v7 + 5588)) & 0x7FFFFFFF) * v8;
  v90 = v89 ^ HIWORD(v89);
  v91 = v17[1651] ^ (v90 * v9) ^ (v90 * v8) ^ *(_DWORD *)(v70 + 4 * ((v90 * v8) >> 24)) ^ *(_DWORD *)(v71 + 4 * (((v90 * v8) >> 24) + 2)) ^ *(_DWORD *)(v72 + 4 * ((v90 * v8) >> 24)) ^ (-1609471543 * ((v90 * v8) >> 24));
  *(_DWORD *)(v7 + 9576) = 1202855529 * v91 - 465820930 - ((258227410 * v91 + 242517678) & v11);
  v92 = ((v13 ^ *(_DWORD *)(v7 + 5584)) & 0x7FFFFFFF) * v8;
  v93 = v92 ^ HIWORD(v92);
  v94 = v17[1665] ^ *(_DWORD *)&v63[4 * ((v93 * v8) >> 24)] ^ *(_DWORD *)&v64[4
                                                                                          * ((v93 * v8) >> 24)
                                                                                          + 4] ^ *(_DWORD *)&v65[4 * ((v93 * v8) >> 24) + 8] ^ (v93 * v9) ^ (v93 * v8) ^ (-379878533 * ((v93 * v8) >> 24));
  *(_DWORD *)(v7 + 9136) = 1202855529 * v94 + 1166447083 - ((-1099659602 - 1889256238 * v94) & 0xCC989D28);
  v95 = ((v13 ^ *(_DWORD *)(v7 + 5780)) & 0x7FFFFFFF) * v8;
  v96 = v95 ^ HIWORD(v95);
  v97 = (v96 * v8) ^ (v96 * v9) ^ (-1609471543 * ((v96 * v8) >> 24)) ^ v17[1621] ^ *(_DWORD *)(v70 + 4 * ((v96 * v8) >> 24)) ^ *(_DWORD *)(v71 + 4 * (((v96 * v8) >> 24) + 2)) ^ *(_DWORD *)(v72 + 4 * ((v96 * v8) >> 24));
  *(_DWORD *)(v7 + 9400) = 1202855529 * v97 - 465820930 - ((258227410 * v97 + 242517678) & v11);
  v98 = ((v13 ^ *(_DWORD *)(v7 + 5684)) & 0x7FFFFFFF) * v8;
  v99 = v98 ^ HIWORD(v98);
  v100 = (v99 * v8) ^ (v99 * v9) ^ (-1609471543 * ((v99 * v8) >> 24)) ^ v17[1598] ^ *(_DWORD *)(v70 + 4 * ((v99 * v8) >> 24)) ^ *(_DWORD *)(v71 + 4 * (((v99 * v8) >> 24) + 2)) ^ *(_DWORD *)(v72 + 4 * ((v99 * v8) >> 24));
  *(_DWORD *)(v7 + 9640) = 1202855529 * v100 - ((-1889256238 * v100 - 1099659602) & 0xD860E5FC);
  v101 = ((v13 ^ *(_DWORD *)(v7 + 5640)) & 0x7FFFFFFF) * v8;
  v102 = v101 ^ HIWORD(v101);
  v103 = v17[1577] ^ *(_DWORD *)&v63[4 * ((v102 * v8) >> 24)] ^ *(_DWORD *)&v64[4
                                                                                            * ((v102 * v8) >> 24)
                                                                                            + 4] ^ *(_DWORD *)&v65[4 * ((v102 * v8) >> 24) + 8] ^ (v102 * v9) ^ (v102 * v8) ^ (-379878533 * ((v102 * v8) >> 24));
  *(_DWORD *)(v7 + 9008) = 1202855529 * v103 - 465820930 - ((258227410 * v103 + 242517678) & v11);
  v104 = ((v13 ^ *(_DWORD *)(v7 + 5764)) & 0x7FFFFFFF) * v8;
  v105 = v104 ^ HIWORD(v104);
  v106 = v105 * v8;
  v107 = (v105 * v8) ^ (v105 * v9) ^ (-379878533 * HIBYTE(v106)) ^ *(_DWORD *)&v63[4 * HIBYTE(v106)] ^ v17[1682] ^ *(_DWORD *)&v64[4 * HIBYTE(v106) + 4] ^ *(_DWORD *)&v65[4 * HIBYTE(v106) + 8];
  *(_DWORD *)(v7 + 9320) = 1202855529 * v107 - 465820930 - ((258227410 * v107 + 242517678) & v11);
  v108 = ((v13 ^ *(_DWORD *)(v7 + 5576)) & 0x7FFFFFFF) * v8;
  v109 = v108 ^ HIWORD(v108);
  v110 = v109 * v8;
  v111 = (v109 * v8) ^ (v109 * v9) ^ (-379878533 * HIBYTE(v110)) ^ *(_DWORD *)&v63[4 * HIBYTE(v110)] ^ v17[1660] ^ *(_DWORD *)&v64[4 * HIBYTE(v110) + 4] ^ *(_DWORD *)&v65[4 * HIBYTE(v110) + 8];
  *(_DWORD *)(v7 + 9632) = 1202855529 * v111 - 1068933029 - ((-1889256238 * v111 - 1099659602) & 0xC21E3A08);
  v112 = ((v13 ^ *(_DWORD *)(v7 + 5676)) & 0x7FFFFFFF) * v8;
  v113 = v112 ^ HIWORD(v112);
  v114 = v113 * v8;
  v115 = (v113 * v8) ^ (v113 * v9) ^ (-379878533 * HIBYTE(v114)) ^ *(_DWORD *)&v63[4 * HIBYTE(v114)] ^ v17[1554] ^ *(_DWORD *)&v64[4 * HIBYTE(v114) + 4] ^ *(_DWORD *)&v65[4 * HIBYTE(v114) + 8];
  *(_DWORD *)(v7 + 8920) = 1202855529 * v115 - 465820930 - ((258227410 * v115 + 242517678) & v11);
  v116 = ((v13 ^ *(_DWORD *)(v7 + 5892)) & 0x7FFFFFFF) * v8;
  v117 = v116 ^ HIWORD(v116);
  v118 = v117 * v8;
  v119 = (v117 * v8) ^ (v117 * v9) ^ (-379878533 * HIBYTE(v118)) ^ *(_DWORD *)&v63[4 * HIBYTE(v118)] ^ v17[1566] ^ *(_DWORD *)&v64[4 * HIBYTE(v118) + 4] ^ *(_DWORD *)&v65[4 * HIBYTE(v118) + 8];
  *(_DWORD *)(v7 + 9616) = 1202855529 * v119 - ((-1889256238 * v119 - 1099659602) & 0x9A358B68);
  v120 = ((v13 ^ *(_DWORD *)(v7 + 5848)) & 0x7FFFFFFF) * v8;
  v121 = v120 ^ HIWORD(v120);
  v122 = v17[1586] ^ *(_DWORD *)&v63[4 * ((v121 * v8) >> 24)] ^ *(_DWORD *)&v64[4
                                                                                            * ((v121 * v8) >> 24)
                                                                                            + 4] ^ *(_DWORD *)&v65[4 * ((v121 * v8) >> 24) + 8] ^ (v121 * v9) ^ (v121 * v8) ^ (-379878533 * ((v121 * v8) >> 24));
  *(_DWORD *)(v7 + 9384) = 1202855529 * v122 - 465820930 - ((258227410 * v122 + 242517678) & v11);
  v123 = ((v13 ^ *(_DWORD *)(v7 + 5604)) & 0x7FFFFFFF) * v8;
  v124 = v123 ^ HIWORD(v123);
  v125 = v17[1605] ^ *(_DWORD *)&v63[4 * ((v124 * v8) >> 24)] ^ *(_DWORD *)&v64[4
                                                                                            * ((v124 * v8) >> 24)
                                                                                            + 4] ^ *(_DWORD *)&v65[4 * ((v124 * v8) >> 24) + 8] ^ (v124 * v9) ^ (v124 * v8) ^ (-379878533 * ((v124 * v8) >> 24));
  *(_DWORD *)(v7 + 9328) = 1202855529 * v125 - 465820930 - ((258227410 * v125 + 242517678) & v11);
  v126 = ((v13 ^ *(_DWORD *)(v7 + 5620)) & 0x7FFFFFFF) * v8;
  v127 = v126 ^ HIWORD(v126);
  v128 = v17[1654] ^ (v127 * v9);
  v129 = v127 * v8;
  v130 = v128 ^ v129 ^ *(_DWORD *)&v63[4 * HIBYTE(v129)] ^ *(_DWORD *)&v64[4 * HIBYTE(v129) + 4] ^ *(_DWORD *)&v65[4 * HIBYTE(v129) + 8] ^ (-379878533 * HIBYTE(v129));
  *(_DWORD *)(v7 + 9296) = 1202855529 * v130 - 465820930 - ((258227410 * v130 + 242517678) & v11);
  v131 = ((v13 ^ *(_DWORD *)(v7 + 5908)) & 0x7FFFFFFF) * v8;
  v132 = v131 ^ HIWORD(v131);
  v133 = v132 * v8;
  v134 = (v132 * v8) ^ (v132 * v9) ^ (-379878533 * HIBYTE(v133)) ^ *(_DWORD *)&v63[4 * HIBYTE(v133)] ^ v17[1663] ^ *(_DWORD *)&v64[4 * HIBYTE(v133) + 4] ^ *(_DWORD *)&v65[4 * HIBYTE(v133) + 8];
  *(_DWORD *)(v7 + 9156) = 1202855529 * v134 - 465820930 - ((258227410 * v134 + 242517678) & v11);
  v135 = ((v13 ^ *(_DWORD *)(v7 + 5696)) & 0x7FFFFFFF) * v8;
  v136 = v135 ^ HIWORD(v135);
  v137 = *(_QWORD *)(v7 + 7680);
  v138 = *(_QWORD *)(v7 + 7736);
  v139 = *(_QWORD *)(v7 + 7816);
  v140 = *(_QWORD *)(v7 + 7928);
  v141 = (v136 * v8) ^ (v136 * v9) ^ (1551792265 * ((v136 * v8) >> 24)) ^ v17[1639] ^ *(_DWORD *)(v138 + 4 * ((v136 * v8) >> 24)) ^ *(_DWORD *)(v139 + 4 * ((v136 * v8) >> 24)) ^ *(_DWORD *)(v140 + 4 * (((v136 * v8) >> 24) + 4));
  *(_DWORD *)(v7 + 8952) = 1202855529 * v141 - 465820930 - ((258227410 * v141 + 242517678) & v11);
  v142 = ((v13 ^ *(_DWORD *)(v7 + 5572)) & 0x7FFFFFFF) * v8;
  v143 = v142 ^ HIWORD(v142);
  v144 = v143 * v8;
  v145 = (v143 * v8) ^ (v143 * v9) ^ (-379878533 * HIBYTE(v144)) ^ *(_DWORD *)&v63[4 * HIBYTE(v144)] ^ v17[1612] ^ *(_DWORD *)&v64[4 * HIBYTE(v144) + 4] ^ *(_DWORD *)&v65[4 * HIBYTE(v144) + 8];
  *(_DWORD *)(v7 + 9240) = 1202855529 * v145 + 1166447083 - ((-1099659602 - 1889256238 * v145) & 0xCC989D28);
  v146 = ((v13 ^ *(_DWORD *)(v7 + 5808)) & 0x7FFFFFFF) * v8;
  v147 = v146 ^ HIWORD(v146);
  v148 = v147 * v8;
  v149 = (v147 * v8) ^ (v147 * v9) ^ (-379878533 * HIBYTE(v148)) ^ *(_DWORD *)&v63[4 * HIBYTE(v148)] ^ v17[1589] ^ *(_DWORD *)&v64[4 * HIBYTE(v148) + 4] ^ *(_DWORD *)&v65[4 * HIBYTE(v148) + 8];
  *(_DWORD *)(v7 + 8640) = 1202855529 * v149 - 1637007925 - ((258227410 * v149 + 1047824046) & 0x7E65F4E8);
  v150 = ((v13 ^ *(_DWORD *)(v7 + 5824)) & 0x7FFFFFFF) * v8;
  v151 = v150 ^ HIWORD(v150);
  v152 = v17[1624] ^ *(_DWORD *)(v138 + 4 * ((v151 * v8) >> 24)) ^ *(_DWORD *)(v139
                                                                                             + 4
                                                                                             * ((v151 * v8) >> 24)) ^ *(_DWORD *)(v140 + 4 * (((v151 * v8) >> 24) + 4)) ^ (v151 * v9) ^ (v151 * v8) ^ (1551792265 * ((v151 * v8) >> 24));
  *(_DWORD *)(v7 + 8968) = 1202855529 * v152 - 1068933029 - ((-1099659602 - 1889256238 * v152) & 0xC21E3A08);
  v153 = ((v13 ^ *(_DWORD *)(v7 + 5856)) & 0x7FFFFFFF) * v8;
  v154 = v153 ^ HIWORD(v153);
  LODWORD(v35) = (v154 * v8) >> 24;
  LODWORD(v63) = v17[1585] ^ (v154 * v9) ^ (v154 * v8) ^ *(_DWORD *)&v63[4 * v35] ^ *(_DWORD *)&v64[4 * (v35 + 1)] ^ *(_DWORD *)&v65[4 * (v35 + 2)] ^ (-379878533 * v35);
  *(_DWORD *)(v7 + 9592) = 1202855529 * (_DWORD)v63 - 465820930 - ((258227410 * (_DWORD)v63 + 242517678) & v11);
  LODWORD(v63) = ((v13 ^ *(_DWORD *)(v7 + 5804)) & 0x7FFFFFFF) * v8;
  LODWORD(v63) = v63 ^ (v63 >> 16);
  v155 = (((a6 & 0x7D3A5515) - 2109470134 + (a6 & 0x7D3A5515 ^ 0x7D3A5515)) & 0xDF3AE357)
       + 1202855529
       * (((_DWORD)v63 * v8) ^ ((_DWORD)v63 * v9) ^ (1551792265 * (((_DWORD)v63 * v8) >> 24)) ^ v17[1594] ^ *(_DWORD *)(v138 + 4 * (((_DWORD)v63 * v8) >> 24)) ^ *(_DWORD *)(v139 + 4 * (((_DWORD)v63 * v8) >> 24)) ^ *(_DWORD *)(v140 + 4 * ((((_DWORD)v63 * v8) >> 24) + 4)));
  *(_DWORD *)(v7 + 8400) = v155 + v12 - (v11 & (2 * v155));
  v156 = ((v13 ^ *(_DWORD *)(v7 + 5884)) & 0x7FFFFFFF) * v8;
  v157 = v156 ^ HIWORD(v156);
  LODWORD(v63) = (v157 * v8) >> 24;
  v158 = (v157 * v8) ^ (v157 * v9) ^ (-1609471543 * (_DWORD)v63) ^ v17[1669] ^ *(_DWORD *)(*(_QWORD *)(v7 + 7744)
                                                                                         + 4 * v63) ^ *(_DWORD *)(*(_QWORD *)(v7 + 7720) + 4 * ((_DWORD)v63 + 2)) ^ *(_DWORD *)(*(_QWORD *)(v7 + 7728) + 4 * v63);
  *(_DWORD *)(v7 + 9720) = 1202855529 * v158 - 1487577750 - ((-1099659602 - 1889256238 * v158) & 0x90363426);
  v159 = ((v13 ^ *(_DWORD *)(v7 + 5636)) & 0x7FFFFFFF) * v8;
  v160 = v159 ^ HIWORD(v159);
  v161 = (v160 * v8) ^ (v160 * v9) ^ (1551792265 * ((v160 * v8) >> 24)) ^ v17[1579] ^ *(_DWORD *)(v138 + 4 * ((v160 * v8) >> 24)) ^ *(_DWORD *)(v139 + 4 * ((v160 * v8) >> 24)) ^ *(_DWORD *)(v140 + 4 * (((v160 * v8) >> 24) + 4));
  *(_DWORD *)(v7 + 9248) = 1202855529 * v161 - 465820930 - ((258227410 * v161 + 242517678) & v11);
  v162 = ((v13 ^ *(_DWORD *)(v7 + 5668)) & 0x7FFFFFFF) * v8;
  v163 = v162 ^ HIWORD(v162);
  v164 = (v163 * v8) ^ (v163 * v9) ^ (1551792265 * ((v163 * v8) >> 24)) ^ v17[1587] ^ *(_DWORD *)(v138 + 4 * ((v163 * v8) >> 24)) ^ *(_DWORD *)(v139 + 4 * ((v163 * v8) >> 24)) ^ *(_DWORD *)(v140 + 4 * (((v163 * v8) >> 24) + 4));
  *(_DWORD *)(v7 + 8696) = 1202855529 * v164 + 1166447083 - ((-1099659602 - 1889256238 * v164) & 0xCC989D28);
  v165 = ((v13 ^ *(_DWORD *)(v7 + 5728)) & 0x7FFFFFFF) * v8;
  v166 = v165 ^ HIWORD(v165);
  LODWORD(v63) = v166 * v8;
  v167 = *(_QWORD *)(v7 + 7872);
  v168 = *(_QWORD *)(v7 + 7672);
  v169 = (v166 * v8) ^ (v166 * v9) ^ (1591307393 * (v63 >> 24)) ^ *(_DWORD *)(v167
                                                                                          + 4
                                                                                          * (v63 >> 24)) ^ v17[1593] ^ *(_DWORD *)(v137 + 4 * ((v63 >> 24) + 1)) ^ *(_DWORD *)(v168 + 4 * ((v63 >> 24) + 1));
  *(_DWORD *)(v7 + 8932) = 1202855529 * v169 - 465820930 - ((258227410 * v169 + 242517678) & v11);
  v170 = v168;
  v171 = (*(_DWORD *)(v7 + 9736) ^ 0xA5D6D335) - ((*(_DWORD *)(v7 + 9736) ^ 0xA5D6D335) >> 13);
  v172 = v171 - (v171 >> 1);
  LODWORD(v63) = v172 + v12 - (v11 & (2 * v172));
  v173 = v172
       - 1946986459
       - ((v172 - 1946986459) >> 9)
       - 937747949
       - ((2 * (v172 - 1946986459 - ((v172 - 1946986459) >> 9))) & 0x90363426);
  v174 = ((v173 >> 8) ^ 0xC81B1A) + (v173 ^ 0xC81B1A13);
  *(_DWORD *)(v7 + 8304) = *(_DWORD *)(v7 + 9600) ^ v12 ^ v63 ^ v174 ^ (v174
                                                                                    + 1643066767
                                                                                    + ((v174 + 1643066767) >> 9)
                                                                                    + ((v174
                                                                                      + 1643066767
                                                                                      + ((v174 + 1643066767) >> 9)) >> 7));
  v175 = ((v13 ^ *(_DWORD *)(v7 + 5544)) & 0x7FFFFFFF) * v8;
  v176 = v175 ^ HIWORD(v175);
  v177 = (v176 * v8) >> 24;
  *(_DWORD *)(v7 + 9736) = *(_DWORD *)(v167 + 4 * v177) ^ v17[1635] ^ *(_DWORD *)(v137 + 4 * (v177 + 1)) ^ *(_DWORD *)(v168 + 4 * (v177 + 1)) ^ (v176 * v9) ^ (v176 * v8) ^ (1591307393 * v177);
  LODWORD(v63) = ((v13 ^ *(_DWORD *)(v7 + 5508)) & 0x7FFFFFFF) * v8;
  LODWORD(v63) = v63 ^ (v63 >> 16);
  v178 = ((_DWORD)v63 * v9) ^ v17[1655];
  LODWORD(v63) = (_DWORD)v63 * v8;
  LODWORD(v63) = v178 ^ v63 ^ *(_DWORD *)(v167 + 4 * (v63 >> 24)) ^ (1591307393
                                                                                                 * (v63 >> 24)) ^ *(_DWORD *)(v137 + 4 * ((v63 >> 24) + 1)) ^ *(_DWORD *)(v168 + 4 * ((v63 >> 24) + 1));
  v179 = ((v13 ^ *(_DWORD *)(v7 + 5748)) & 0x7FFFFFFF) * v8;
  v180 = v179 ^ HIWORD(v179);
  LODWORD(v64) = (v180 * v9) ^ v17[1588];
  v181 = v180 * v8;
  v182 = *(_QWORD *)(v7 + 7096);
  v183 = *(_QWORD *)(v7 + 7088);
  v184 = *(_QWORD *)(v7 + 7080);
  v185 = v64 ^ v181 ^ (426631311 * HIBYTE(v181)) ^ *(_DWORD *)(v182 + 4 * HIBYTE(v181)) ^ *(_DWORD *)(v183 + 4 * (HIBYTE(v181) + 3)) ^ *(_DWORD *)(v184 + 4 * HIBYTE(v181));
  *(_DWORD *)(v7 + 8828) = 1202855529 * v185 - 465820930 - ((258227410 * v185 + 242517678) & v11);
  *(_DWORD *)(v7 + 8688) = (*(_DWORD *)(v7 + 9664) ^ v12)
                         - 465820930
                         - ((2 * (*(_DWORD *)(v7 + 9664) ^ v12) + 242517678) & v11);
  *(_DWORD *)(v7 + 9152) = 1202855529 * (_DWORD)v63 - 465820930 - ((258227410 * (_DWORD)v63 + 242517678) & v11);
  LODWORD(v168) = ((v13 ^ *(_DWORD *)(v7 + 6984)) & 0x7FFFFFFF) * v8;
  LODWORD(v168) = v168 ^ WORD1(v168);
  LODWORD(v168) = *(_DWORD *)(v182 + 4 * ((v168 * v8) >> 24)) ^ v17[1666] ^ *(_DWORD *)(v183 + 4 * (((v168 * v8) >> 24) + 3)) ^ *(_DWORD *)(v184 + 4 * ((v168 * v8) >> 24)) ^ (v168 * v9) ^ (v168 * v8) ^ (426631311 * ((v168 * v8) >> 24));
  LODWORD(v63) = ((v13 ^ *(_DWORD *)(v7 + 5608)) & 0x7FFFFFFF) * v8;
  LODWORD(v63) = v63 ^ (v63 >> 16);
  LODWORD(v63) = *(_DWORD *)(v182 + 4 * (((_DWORD)v63 * v8) >> 24)) ^ v17[1631] ^ *(_DWORD *)(v183 + 4 * ((((_DWORD)v63 * v8) >> 24) + 3)) ^ *(_DWORD *)(v184 + 4 * (((_DWORD)v63 * v8) >> 24)) ^ ((_DWORD)v63 * v9) ^ ((_DWORD)v63 * v8) ^ (426631311 * (((_DWORD)v63 * v8) >> 24));
  *(_DWORD *)(v7 + 9304) = 1202855529 * (_DWORD)v63 - 465820930 - ((258227410 * (_DWORD)v63 + 242517678) & v11);
  LODWORD(v63) = ((v13 ^ *(_DWORD *)(v7 + 5616)) & 0x7FFFFFFF) * v8;
  LODWORD(v63) = v63 ^ (v63 >> 16);
  v186 = ((_DWORD)v63 * v9) ^ v17[1571];
  LODWORD(v63) = (_DWORD)v63 * v8;
  LODWORD(v63) = v186 ^ v63 ^ *(_DWORD *)(v167 + 4 * (v63 >> 24)) ^ (1591307393
                                                                                                 * (v63 >> 24)) ^ *(_DWORD *)(v137 + 4 * ((v63 >> 24) + 1)) ^ *(_DWORD *)(v170 + 4 * ((v63 >> 24) + 1));
  *(_DWORD *)(v7 + 9664) = 1202855529 * (_DWORD)v63
                         - 1068933029
                         - ((-1889256238 * (_DWORD)v63 - 1099659602) & 0xC21E3A08);
  LODWORD(v63) = ((v13 ^ *(_DWORD *)(v7 + 5800)) & 0x7FFFFFFF) * v8;
  LODWORD(v63) = v63 ^ (v63 >> 16);
  v187 = ((_DWORD)v63 * v9) ^ v17[1659];
  LODWORD(v63) = (_DWORD)v63 * v8;
  LODWORD(v63) = v187 ^ v63 ^ (426631311 * (v63 >> 24)) ^ *(_DWORD *)(v182
                                                                                                + 4
                                                                                                * (v63 >> 24)) ^ *(_DWORD *)(v183 + 4 * ((v63 >> 24) + 3)) ^ *(_DWORD *)(v184 + 4 * (v63 >> 24));
  *(_DWORD *)(v7 + 9408) = 1202855529 * v168 - 465820930 - ((258227410 * v168 + 242517678) & v11);
  *(_DWORD *)(v7 + 8672) = 1202855529 * (_DWORD)v63 - 1637007925 - ((258227410 * (_DWORD)v63 + 1047824046) & 0x7E65F4E8);
  LODWORD(v168) = ((v13 ^ *(_DWORD *)(v7 + 5832)) & 0x7FFFFFFF) * v8;
  LODWORD(v168) = v168 ^ WORD1(v168);
  LODWORD(v168) = *(_DWORD *)(v182 + 4 * ((v168 * v8) >> 24)) ^ v17[1559] ^ *(_DWORD *)(v183 + 4 * (((v168 * v8) >> 24) + 3)) ^ *(_DWORD *)(v184 + 4 * ((v168 * v8) >> 24)) ^ (v168 * v9) ^ (v168 * v8) ^ (426631311 * ((v168 * v8) >> 24));
  v188 = ((v13 ^ *(_DWORD *)(v7 + 5716)) & 0x7FFFFFFF) * v8;
  v189 = v188 ^ HIWORD(v188);
  LODWORD(v64) = (v189 * v8) >> 24;
  v190 = 4 * v64;
  LODWORD(v63) = *(_DWORD *)(v182 + v190) ^ v17[1563];
  v191 = *(_DWORD *)(v183 + 4 * ((_DWORD)v64 + 3));
  v192 = (v189 * v9) ^ (v189 * v8) ^ (426631311 * (_DWORD)v64);
  *(_DWORD *)(v7 + 9280) = 1202855529 * (v63 ^ v191 ^ *(_DWORD *)(v184 + v190) ^ v192)
                         - 1068933029
                         - ((-1889256238 * (v63 ^ v191 ^ *(_DWORD *)(v184 + v190) ^ v192) - 1099659602) & 0xC21E3A08);
  *(_DWORD *)(v7 + 9656) = 1202855529 * v168 - 465820930 - ((258227410 * v168 + 242517678) & v11);
  *(_DWORD *)(v7 + 9488) = *(_DWORD *)(v7 + 9640) + 1265284693;
  *(_DWORD *)(v7 + 9512) = *(_DWORD *)(v7 + 9616) - 1403713269;
  JUMPOUT(0x100363444);
}

uint64_t sub_100363B30@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  _DWORD *v29;
  char *v30;
  char *v31;
  char *v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  char *v40;
  uint64_t v41;
  int v42;
  char *v43;
  char *v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  char *v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  uint64_t v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  char *v88;
  char *v89;
  char *v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  uint64_t v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  uint64_t v155;
  unsigned int v156;
  int v157;
  uint64_t v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  unsigned int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  unsigned int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  unsigned int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  unsigned int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  uint64_t (*v268)(void);
  int v269;

  *(_DWORD *)(v11 + 8992) = v19;
  v20 = 11 * (v10 ^ 0x1C88);
  v21 = a2 + 84008871 - (v15 & v16);
  v22 = (v12 >> ((11 * (v10 ^ 0x88)) ^ 0x63)) ^ v12;
  v23 = *(_DWORD *)(a3 + 4 * (((v22 * v7) >> 24) + 4)) ^ *(_DWORD *)(a1
                                                                                   + 4
                                                                                   * ((v22 * v7) >> 24)) ^ *(_DWORD *)(v6 + 4 * (((v22 * v7) >> 24) + 5)) ^ (v22 * v4) ^ (v22 * v7) ^ (((v22 * v7) >> 24) * v18);
  v24 = *(_DWORD *)(v11 + 9568) ^ *(_DWORD *)(v11 + 9600) ^ v5 ^ v13 ^ *(_DWORD *)(a1 + 4 * v9) ^ *(_DWORD *)(a3 + 4 * *(unsigned int *)(v11 + 9560)) ^ *(_DWORD *)(v6 + 4 * v14);
  v25 = v24 - 348975924 - ((2 * v24) & 0xD6661998);
  *(_DWORD *)(v11 + 9568) = v25;
  v26 = v23 ^ *(_DWORD *)(v11 + 9584);
  *(_DWORD *)(v11 + 9544) = (*(_DWORD *)(v11 + 9616) ^ 0x501DFA7)
                          + v17
                          - ((2 * (*(_DWORD *)(v11 + 9616) ^ 0x501DFA7) + 242517678) & 0xA03BF4E);
  v27 = -333269657 * ((v3 ^ *(_DWORD *)(v11 + 7032)) & 0x7FFFFFFF);
  v28 = v27 ^ HIWORD(v27);
  v29 = *(_DWORD **)(v11 + 8248);
  v30 = (char *)*(&off_1004ECA20 + v20 - 3267) - 4;
  v31 = (char *)*(&off_1004ECA20 + (v20 ^ 0xD8E)) - 4;
  v32 = (char *)*(&off_1004ECA20 + v20 - 2926) - 8;
  v33 = (-333269657 * v28) ^ (-1251540992 * v28) ^ v29[1595] ^ (-1083662871 * ((-333269657 * v28) >> 24)) ^ *(_DWORD *)&v30[4 * ((-333269657 * v28) >> 24)] ^ *(_DWORD *)&v31[4 * ((-333269657 * v28) >> 24)] ^ *(_DWORD *)&v32[4 * ((-333269657 * v28) >> 24) + 8];
  *(_DWORD *)(v11 + 9264) = 1202855529 * (v25 ^ 0xEB330CCC)
                          - 1637007925
                          - ((258227410 * (v25 ^ 0xEB330CCC) + 1047824046) & 0x7E65F4E8);
  v34 = (v20 - 672741770) & 0x28193D77;
  *(_DWORD *)(v11 + 9160) = v34;
  *(_DWORD *)(v11 + 9640) = v20;
  *(_DWORD *)(v11 + 8980) = 1202855529 * (v34 ^ v21 ^ 0x501CEC6)
                          + 978341867
                          - ((-1099659602 - 1889256238 * (v34 ^ v21 ^ 0x501CEC6)) & 0xB62C21DC);
  v35 = *(_DWORD *)(v11 + 5868);
  v36 = -333269657 * ((-333269657 * ((v3 ^ v35) & 0x7FFFFFFF)) ^ ((-333269657 * ((v3 ^ v35) & 0x7FFFFFFFu)) >> 16));
  v37 = HIBYTE(v36);
  v38 = v29[1619];
  v39 = (63 * HIBYTE(v36)) ^ v36 ^ v38;
  v40 = (char *)*(&off_1004ECA20 + (v20 ^ 0xC7C)) - 4;
  v41 = 4 * v37;
  v42 = v39 ^ *(_DWORD *)&v40[v41];
  v43 = (char *)*(&off_1004ECA20 + (v20 ^ 0xF16)) - 12;
  v44 = (char *)*(&off_1004ECA20 + (v20 ^ 0x974)) - 8;
  *(_DWORD *)(v11 + 9616) = v42 ^ *(_DWORD *)&v43[v41] ^ *(_DWORD *)&v44[4 * v37 + 12];
  *(_DWORD *)(v11 + 8900) = 1202855529 * v33 - 1637007925 - ((258227410 * v33 + 1047824046) & 0x7E65F4E8);
  *(_DWORD *)(v11 + 9148) = 1202855529 * (v8 ^ 0xBF32FA74)
                          - 1068933029
                          - ((-1889256238 * (v8 ^ 0xBF32FA74) - 1099659602) & 0xC21E3A08);
  *(_DWORD *)(v11 + 9736) = 1202855529 * v26 - 465820930 - ((258227410 * v26 + 242517678) & 0xA03BF4E);
  v45 = -333269657 * ((v3 ^ *(_DWORD *)(v11 + 5704)) & 0x7FFFFFFF);
  v46 = v45 ^ HIWORD(v45);
  v47 = (-333269657 * v46) ^ (-1251540992 * v46) ^ v29[1601] ^ (-1083662871 * ((-333269657 * v46) >> 24)) ^ *(_DWORD *)&v30[4 * ((-333269657 * v46) >> 24)] ^ *(_DWORD *)&v31[4 * ((-333269657 * v46) >> 24)] ^ *(_DWORD *)&v32[4 * ((-333269657 * v46) >> 24) + 8];
  v48 = *(_DWORD *)(**(_QWORD **)(v11 + 9088) + (int)(**(_DWORD **)(v11 + 9216) & 0xE8B5AED8));
  v49 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5536)) & 0x7FFFFFFF);
  v50 = v49 ^ HIWORD(v49);
  v51 = v32;
  v52 = *(_DWORD *)&v30[4 * ((-333269657 * v50) >> 24)] ^ v29[1552] ^ *(_DWORD *)&v31[4 * ((-333269657 * v50) >> 24)] ^ *(_DWORD *)&v32[4 * ((-333269657 * v50) >> 24) + 8] ^ (-1251540992 * v50) ^ (-333269657 * v50) ^ (-1083662871 * ((-333269657 * v50) >> 24));
  LODWORD(v41) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5700)) & 0x7FFFFFFF);
  LODWORD(v41) = v41 ^ WORD1(v41);
  v53 = v29[1657];
  v54 = (-333269657 * v41) >> 24;
  v55 = 4 * v54;
  LODWORD(v32) = *(_DWORD *)&v30[v55];
  *(_QWORD *)(v11 + 9192) = v30;
  v56 = v32 ^ v53;
  LODWORD(v55) = *(_DWORD *)&v31[v55];
  *(_QWORD *)(v11 + 9208) = v31;
  LODWORD(v32) = *(_DWORD *)&v51[4 * v54 + 8];
  *(_QWORD *)(v11 + 9360) = v51;
  LODWORD(v41) = v56 ^ v55 ^ v32 ^ (-1251540992 * v41) ^ (-333269657 * v41) ^ (-1083662871 * v54);
  *(_DWORD *)(v11 + 9600) = 1202855529 * v52 - 465820930 - ((258227410 * v52 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9448) = 1202855529 * v41 - ((258227410 * v41 + 510953134) & 0x1F09A2EC);
  LODWORD(v41) = (-333269657 * ((v48 ^ v35) & 0x7FFFFFFF)) ^ ((-333269657 * ((v48 ^ v35) & 0x7FFFFFFFu)) >> 16);
  v57 = -333269657 * v41;
  v58 = 4 * ((-333269657 * v41) >> 24);
  LODWORD(v41) = (-1251540992 * v41) ^ v38 ^ (-333269657 * v41) ^ (-2125956033 * ((-333269657 * v41) >> 24)) ^ *(_DWORD *)&v40[v58] ^ *(_DWORD *)&v43[v58] ^ *(_DWORD *)&v44[4 * ((-333269657 * v41) >> 24) + 12];
  *(_DWORD *)(v11 + 9072) = 1202855529 * v47 - 465820930 - ((258227410 * v47 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8880) = 1202855529 * v41 - ((-1889256238 * v41 - 1099659602) & 0xDA0AED18);
  v59 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5796)) & 0x7FFFFFFF);
  v60 = v59 ^ HIWORD(v59);
  v61 = *(_DWORD *)&v40[4 * ((-333269657 * v60) >> 24)] ^ v29[1562] ^ *(_DWORD *)&v43[4 * ((-333269657 * v60) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * v60) >> 24) + 12] ^ (-1251540992 * v60) ^ (-333269657 * v60) ^ (-2125956033 * ((-333269657 * v60) >> 24));
  v62 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 7000)) & 0x7FFFFFFF);
  v63 = v62 ^ HIWORD(v62);
  v64 = *(_DWORD *)&v40[4 * ((-333269657 * v63) >> 24)] ^ v29[1625] ^ *(_DWORD *)&v43[4 * ((-333269657 * v63) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * v63) >> 24) + 12] ^ (-1251540992 * v63) ^ (-333269657 * v63) ^ (-2125956033 * ((-333269657 * v63) >> 24));
  LODWORD(v41) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5548)) & 0x7FFFFFFF);
  LODWORD(v41) = v41 ^ WORD1(v41);
  LODWORD(v32) = (-1251540992 * v41) ^ v29[1592];
  LODWORD(v41) = -333269657 * v41;
  LODWORD(v41) = v32 ^ v41 ^ *(_DWORD *)&v40[4 * BYTE3(v41)] ^ *(_DWORD *)&v43[4 * BYTE3(v41)] ^ (-2125956033 * BYTE3(v41)) ^ *(_DWORD *)&v44[4 * BYTE3(v41) + 12];
  *(_DWORD *)(v11 + 9472) = 1202855529 * v41 - 465820930 - ((258227410 * v41 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9080) = 1202855529 * v64 - 1068933029 - ((-1099659602 - 1889256238 * v64) & 0xC21E3A08);
  v65 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5744)) & 0x7FFFFFFF);
  v66 = v65 ^ HIWORD(v65);
  v67 = (-333269657 * v66) ^ (-1251540992 * v66) ^ v29[1681] ^ (-2125956033 * ((-333269657 * v66) >> 24)) ^ *(_DWORD *)&v40[4 * ((-333269657 * v66) >> 24)] ^ *(_DWORD *)&v43[4 * ((-333269657 * v66) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * v66) >> 24) + 12];
  LODWORD(v41) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5900)) & 0x7FFFFFFF);
  LODWORD(v41) = v41 ^ WORD1(v41);
  LODWORD(v41) = *(_DWORD *)&v40[4 * ((-333269657 * v41) >> 24)] ^ v29[1627] ^ *(_DWORD *)&v43[4 * ((-333269657 * v41) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * v41) >> 24) + 12] ^ (-1251540992 * v41) ^ (-333269657 * v41) ^ (-2125956033 * ((-333269657 * v41) >> 24));
  v68 = *(_DWORD *)&v30[v58] ^ v38 ^ *(_DWORD *)&v31[v58] ^ v57 ^ *(_DWORD *)&v51[4 * HIBYTE(v57) + 8] ^ (105 * HIBYTE(v57));
  *(_DWORD *)(v11 + 9440) = 1202855529 * v41 - 1487577750 - ((-1099659602 - 1889256238 * v41) & 0x90363426);
  *(_DWORD *)(v11 + 9528) = 1202855529 * v67 - 465820930 - ((258227410 * v67 + 242517678) & 0xA03BF4E);
  v69 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5724)) & 0x7FFFFFFF);
  v70 = v69 ^ HIWORD(v69);
  v71 = (-1251540992 * v70) ^ v29[1648];
  v70 *= -333269657;
  v72 = v71 ^ v70 ^ (-2125956033 * HIBYTE(v70)) ^ *(_DWORD *)&v40[4 * HIBYTE(v70)] ^ *(_DWORD *)&v43[4 * HIBYTE(v70)] ^ *(_DWORD *)&v44[4 * HIBYTE(v70) + 12];
  *(_DWORD *)(v11 + 9416) = 1202855529 * v72 - 465820930 - ((258227410 * v72 + 242517678) & 0xA03BF4E);
  v73 = (~v68 & 0x5F) + (*(_DWORD *)(v11 + 9616) & 0x5F);
  *(_DWORD *)(v11 + 9432) = 1202855529 * v61 - 465820930 - ((258227410 * v61 + 242517678) & 0xA03BF4E);
  v74 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5880)) & 0x7FFFFFFF);
  v75 = v74 ^ HIWORD(v74);
  v76 = *(_DWORD *)&v40[4 * ((-333269657 * v75) >> 24)] ^ v29[1684] ^ *(_DWORD *)&v43[4 * ((-333269657 * v75) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * v75) >> 24) + 12] ^ (-1251540992 * v75) ^ (-333269657 * v75) ^ (-2125956033 * ((-333269657 * v75) >> 24));
  LODWORD(v51) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5500)) & 0x7FFFFFFF);
  LODWORD(v51) = v51 ^ (v51 >> 16);
  LODWORD(v51) = *(_DWORD *)&v40[4 * ((-333269657 * (_DWORD)v51) >> 24)] ^ v29[1553] ^ *(_DWORD *)&v43[4 * ((-333269657 * (_DWORD)v51) >> 24)] ^ (-1251540992 * (_DWORD)v51) ^ (-333269657 * (_DWORD)v51) ^ *(_DWORD *)&v44[4 * ((-333269657 * (_DWORD)v51) >> 24) + 12] ^ (-2125956033 * ((-333269657 * (_DWORD)v51) >> 24));
  v77 = *(_QWORD *)(v11 + 5944) + 4 * v73;
  v78 = (-333269657 * (((v77 + 1836845361) ^ v48) & 0x7FFFFFFF)) ^ ((-333269657
                                                                   * ((((_DWORD)v77 + 1836845361) ^ v48) & 0x7FFFFFFFu)) >> 16);
  LODWORD(v77) = *(_DWORD *)&v40[4 * ((-333269657 * v78) >> 24)] ^ *(_DWORD *)v77 ^ *(_DWORD *)&v43[4 * ((-333269657 * v78) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * v78) >> 24) + 12] ^ (-1251540992 * v78) ^ (-333269657 * v78) ^ (-2125956033 * ((-333269657 * v78) >> 24));
  *(_DWORD *)(v11 + 9584) = 1202855529 * (_DWORD)v51 - 465820930 - ((258227410 * (_DWORD)v51 + 242517678) & 0xA03BF4E);
  LODWORD(v51) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5568)) & 0x7FFFFFFF);
  LODWORD(v51) = v51 ^ (v51 >> 16);
  LODWORD(v51) = (-333269657 * (_DWORD)v51) ^ (-1251540992 * (_DWORD)v51) ^ v29[1636] ^ (-2125956033
                                                                                       * ((-333269657 * (_DWORD)v51) >> 24)) ^ *(_DWORD *)&v40[4 * ((-333269657 * (_DWORD)v51) >> 24)] ^ *(_DWORD *)&v43[4 * ((-333269657 * (_DWORD)v51) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * (_DWORD)v51) >> 24) + 12];
  *(_DWORD *)(v11 + 9172) = 1202855529 * (_DWORD)v51 - 465820930 - ((258227410 * (_DWORD)v51 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8648) = 1202855529 * v77 - 465820930 - ((258227410 * v77 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9256) = 1202855529 * v76 - 465820930 - ((258227410 * v76 + 242517678) & 0xA03BF4E);
  v79 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5520)) & 0x7FFFFFFF);
  v80 = v79 ^ HIWORD(v79);
  LODWORD(v77) = *(_DWORD *)&v40[4 * ((-333269657 * v80) >> 24)] ^ v29[1545] ^ *(_DWORD *)&v43[4 * ((-333269657 * v80) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * v80) >> 24) + 12] ^ (-1251540992 * v80) ^ (-333269657 * v80) ^ (-2125956033 * ((-333269657 * v80) >> 24));
  v81 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5852)) & 0x7FFFFFFF);
  v82 = v81 ^ HIWORD(v81);
  LODWORD(v51) = *(_DWORD *)&v40[4 * ((-333269657 * v82) >> 24)] ^ v29[1670] ^ *(_DWORD *)&v43[4 * ((-333269657 * v82) >> 24)] ^ (-1251540992 * v82) ^ (-333269657 * v82) ^ *(_DWORD *)&v44[4 * ((-333269657 * v82) >> 24) + 12] ^ (-2125956033 * ((-333269657 * v82) >> 24));
  v83 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5888)) & 0x7FFFFFFF);
  v84 = v83 ^ HIWORD(v83);
  v85 = (-1251540992 * v84) ^ v29[1547];
  v84 *= -333269657;
  v86 = v85 ^ v84 ^ (-2125956033 * HIBYTE(v84)) ^ *(_DWORD *)&v40[4 * HIBYTE(v84)] ^ *(_DWORD *)&v43[4 * HIBYTE(v84)] ^ *(_DWORD *)&v44[4 * HIBYTE(v84) + 12];
  *(_DWORD *)(v11 + 9392) = 1202855529 * v77 - 465820930 - ((258227410 * v77 + 242517678) & 0xA03BF4E);
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5876)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  LODWORD(v77) = (-1251540992 * v77) ^ v29[1580] ^ (-333269657 * v77) ^ (-2125956033
                                                                       * ((-333269657 * v77) >> 24)) ^ *(_DWORD *)&v40[4 * ((-333269657 * v77) >> 24)] ^ *(_DWORD *)&v43[4 * ((-333269657 * v77) >> 24)] ^ *(_DWORD *)&v44[4 * ((-333269657 * v77) >> 24) + 12];
  *(_DWORD *)(v11 + 9120) = 1202855529 * v77 - 1487577750 - ((-1889256238 * v77 - 1099659602) & 0x90363426);
  *(_DWORD *)(v11 + 8944) = 1202855529 * (_DWORD)v51 - 465820930 - ((258227410 * (_DWORD)v51 + 242517678) & 0xA03BF4E);
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5864)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  v87 = *(_DWORD *)(v11 + 9640);
  v88 = (char *)*(&off_1004ECA20 + v87 - 2900) - 12;
  v89 = (char *)*(&off_1004ECA20 + (v87 ^ 0xC3B)) - 12;
  v90 = (char *)*(&off_1004ECA20 + (v87 ^ 0xF0F)) - 4;
  LODWORD(v77) = *(_DWORD *)&v88[4 * ((-333269657 * v77) >> 24)] ^ v29[1568] ^ *(_DWORD *)&v89[4 * ((-333269657 * v77) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * v77) >> 24)] ^ (-1251540992 * v77) ^ (-333269657 * v77) ^ (1469344529 * ((-333269657 * v77) >> 24));
  *(_DWORD *)(v11 + 9052) = 1202855529 * v77 - ((258227410 * v77 + 1047824046) & 0x575F7004);
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5524)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  LODWORD(v77) = (-333269657 * v77) ^ (-1251540992 * v77) ^ v29[1680] ^ (1469344529
                                                                       * ((-333269657 * v77) >> 24)) ^ *(_DWORD *)&v88[4 * ((-333269657 * v77) >> 24)] ^ *(_DWORD *)&v89[4 * ((-333269657 * v77) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * v77) >> 24)];
  LODWORD(v30) = (*(_DWORD *)(v11 + 9568) & 0xDF3A4357 ^ 0x14084313)
               + (*(_DWORD *)(v11 + 9568) & 0xDF3A4357 ^ 0xCB320044)
               + 1202855529 * v86;
  *(_DWORD *)(v11 + 9616) = (_DWORD)v30 - 678042683 - ((2 * (_DWORD)v30) & 0xAF2BC78A);
  *(_DWORD *)(v11 + 9096) = 1202855529 * v77 - 465820930 - ((258227410 * v77 + 242517678) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5776)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  v91 = (-1251540992 * (_DWORD)v30) ^ v29[1610];
  LODWORD(v30) = -333269657 * (_DWORD)v30;
  LODWORD(v30) = v91 ^ v30 ^ (1469344529 * (v30 >> 24)) ^ *(_DWORD *)&v88[4 * (v30 >> 24)] ^ *(_DWORD *)&v89[4 * (v30 >> 24) + 16] ^ *(_DWORD *)&v90[4 * (v30 >> 24)];
  v92 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5528)) & 0x7FFFFFFF);
  v93 = v92 ^ HIWORD(v92);
  v94 = *(_DWORD *)&v88[4 * ((-333269657 * v93) >> 24)] ^ v29[1597] ^ *(_DWORD *)&v89[4 * ((-333269657 * v93) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * v93) >> 24)] ^ (-1251540992 * v93) ^ (-333269657 * v93) ^ (1469344529 * ((-333269657 * v93) >> 24));
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5752)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  LODWORD(v44) = v29[1661] ^ (-1251540992 * v77);
  LODWORD(v77) = -333269657 * v77;
  LODWORD(v77) = *(_DWORD *)&v88[4 * BYTE3(v77)] ^ v44 ^ v77 ^ *(_DWORD *)&v89[4 * BYTE3(v77) + 16] ^ *(_DWORD *)&v90[4 * BYTE3(v77)] ^ (1469344529 * BYTE3(v77));
  *(_DWORD *)(v11 + 9176) = 1202855529 * v77 - 465820930 - ((258227410 * v77 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9552) = 1202855529 * v94 - 465820930 - ((258227410 * v94 + 242517678) & 0xA03BF4E);
  v95 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5560)) & 0x7FFFFFFF);
  v96 = v95 ^ HIWORD(v95);
  LODWORD(v77) = (-1251540992 * v96) ^ v29[1623];
  v96 *= -333269657;
  v97 = v77 ^ v96 ^ (1469344529 * HIBYTE(v96)) ^ *(_DWORD *)&v88[4 * HIBYTE(v96)] ^ *(_DWORD *)&v89[4 * HIBYTE(v96) + 16] ^ *(_DWORD *)&v90[4 * HIBYTE(v96)];
  *(_DWORD *)(v11 + 9056) = 1202855529 * (_DWORD)v30 - ((-1889256238 * (_DWORD)v30 - 1099659602) & 0xAF2BC78A);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5680)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = (-333269657 * (_DWORD)v30) ^ (-1251540992 * (_DWORD)v30) ^ v29[1613] ^ (1469344529
                                                                                       * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)&v88[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ *(_DWORD *)&v89[4 * ((-333269657 * (_DWORD)v30) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * (_DWORD)v30) >> 24)];
  *(_DWORD *)(v11 + 8872) = 1202855529 * (_DWORD)v30 - ((258227410 * (_DWORD)v30 + 1047824046) & 0x3B69B9AC);
  *(_DWORD *)(v11 + 9128) = 1202855529 * v97 - 465820930 - ((258227410 * v97 + 242517678) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5596)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  v98 = *(_DWORD *)&v88[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ v29[1578] ^ *(_DWORD *)&v89[4 * ((-333269657 * (_DWORD)v30) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ (1469344529 * ((-333269657 * (_DWORD)v30) >> 24));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5600)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = *(_DWORD *)&v88[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ v29[1641] ^ *(_DWORD *)&v89[4 * ((-333269657 * (_DWORD)v30) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ (1469344529 * ((-333269657 * (_DWORD)v30) >> 24));
  v99 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5828)) & 0x7FFFFFFF);
  v100 = v99 ^ HIWORD(v99);
  v101 = (-333269657 * v100) ^ (-1251540992 * v100) ^ v29[1590] ^ (1469344529 * ((-333269657 * v100) >> 24)) ^ *(_DWORD *)&v88[4 * ((-333269657 * v100) >> 24)] ^ *(_DWORD *)&v89[4 * ((-333269657 * v100) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * v100) >> 24)];
  v102 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5760)) & 0x7FFFFFFF);
  v103 = v102 ^ HIWORD(v102);
  LODWORD(v77) = (-1251540992 * v103) ^ v29[1567];
  v103 *= -333269657;
  v104 = v77 ^ v103 ^ (1469344529 * HIBYTE(v103)) ^ *(_DWORD *)&v88[4 * HIBYTE(v103)] ^ *(_DWORD *)&v89[4 * HIBYTE(v103) + 16] ^ *(_DWORD *)&v90[4 * HIBYTE(v103)];
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5580)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  LODWORD(v77) = *(_DWORD *)&v88[4 * ((-333269657 * v77) >> 24)] ^ v29[1581] ^ *(_DWORD *)&v89[4 * ((-333269657 * v77) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * v77) >> 24)] ^ (-1251540992 * v77) ^ (-333269657 * v77) ^ (1469344529 * ((-333269657 * v77) >> 24));
  *(_DWORD *)(v11 + 8488) = 1202855529 * v104 - 465820930 - ((258227410 * v104 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9036) = 1202855529 * v77 - 1068933029 - ((-1099659602 - 1889256238 * v77) & 0xC21E3A08);
  *(_DWORD *)(v11 + 8860) = 1202855529 * (_DWORD)v30 - 465820930 - ((258227410 * (_DWORD)v30 + 242517678) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5556)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  v105 = (-1251540992 * (_DWORD)v30) ^ v29[1642];
  LODWORD(v30) = -333269657 * (_DWORD)v30;
  LODWORD(v30) = v105 ^ v30 ^ *(_DWORD *)&v88[4 * (v30 >> 24)] ^ *(_DWORD *)&v89[4 * (v30 >> 24) + 16] ^ (1469344529 * (v30 >> 24)) ^ *(_DWORD *)&v90[4 * (v30 >> 24)];
  v106 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5792)) & 0x7FFFFFFF);
  v107 = v106 ^ HIWORD(v106);
  LODWORD(v77) = (-1251540992 * v107) ^ v29[1606];
  v107 *= -333269657;
  v108 = v77 ^ v107 ^ (1469344529 * HIBYTE(v107)) ^ *(_DWORD *)&v88[4 * HIBYTE(v107)] ^ *(_DWORD *)&v89[4 * HIBYTE(v107) + 16] ^ *(_DWORD *)&v90[4 * HIBYTE(v107)];
  v109 = 1202855529 * (_DWORD)v30 + 1642612182 - ((124009682 * (_DWORD)v30 + 108299950) & 0x55C04FE);
  *(_DWORD *)(v11 + 8760) = v109;
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5688)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v77) = *(_DWORD *)&v88[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ v29[1557] ^ *(_DWORD *)&v89[4 * ((-333269657 * (_DWORD)v30) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ (1469344529 * ((-333269657 * (_DWORD)v30) >> 24));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5652)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  *(_DWORD *)(v11 + 9016) = *(_DWORD *)&v88[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ v29[1583] ^ *(_DWORD *)&v89[4 * ((-333269657 * (_DWORD)v30) >> 24) + 16] ^ *(_DWORD *)&v90[4 * ((-333269657 * (_DWORD)v30) >> 24)] ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ (1469344529 * ((-333269657 * (_DWORD)v30) >> 24));
  *(_DWORD *)(v11 + 8984) = 1202855529 * v108 + 1642612182 - ((124009682 * v108 + 108299950) & 0x55C04FE);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5860)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  v110 = *(_QWORD *)(v11 + 7592);
  v111 = *(_QWORD *)(v11 + 7608);
  v112 = *(_QWORD *)(v11 + 7600);
  LODWORD(v30) = (-333269657 * (_DWORD)v30) ^ (-1251540992 * (_DWORD)v30) ^ v29[1555] ^ (-1073377343
                                                                                       * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v110 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v111 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 3));
  *(_DWORD *)(v11 + 9040) = 1202855529 * v77 - 1637007925 - ((258227410 * v77 + 1047824046) & 0x7E65F4E8);
  v113 = 1202855529 * v98 - 465820930 - ((258227410 * v98 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8848) = v113;
  *(_DWORD *)(v11 + 9116) = 1202855529 * v101 - 1487577750 - ((-1889256238 * v101 - 1099659602) & 0x90363426);
  v114 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5532)) & 0x7FFFFFFF);
  v115 = v114 ^ HIWORD(v114);
  v116 = *(_DWORD *)(v110 + 4 * ((-333269657 * v115) >> 24)) ^ v29[1573] ^ *(_DWORD *)(v111 + 4 * ((-333269657 * v115) >> 24)) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * v115) >> 24) + 3)) ^ (-1251540992 * v115) ^ (-333269657 * v115) ^ (-1073377343 * ((-333269657 * v115) >> 24));
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5632)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  LODWORD(v77) = *(_DWORD *)(v110 + 4 * ((-333269657 * v77) >> 24)) ^ v29[1582] ^ *(_DWORD *)(v111 + 4 * ((-333269657 * v77) >> 24)) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * v77) >> 24) + 3)) ^ (-1251540992 * v77) ^ (-333269657 * v77) ^ (-1073377343 * ((-333269657 * v77) >> 24));
  *(_DWORD *)(v11 + 9104) = 1202855529 * v116 - 465820930 - ((258227410 * v116 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9568) = 1202855529 * (_DWORD)v30 - 465820930 - ((258227410 * (_DWORD)v30 + 242517678) & 0xA03BF4E);
  v117 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5904)) & 0x7FFFFFFF);
  v118 = v117 ^ HIWORD(v117);
  v119 = (-333269657 * v118) ^ (-1251540992 * v118) ^ v29[1628] ^ (-1073377343
                                                                 * ((-333269657 * v118) >> 24)) ^ *(_DWORD *)(v110 + 4 * ((-333269657 * v118) >> 24)) ^ *(_DWORD *)(v111 + 4 * ((-333269657 * v118) >> 24)) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * v118) >> 24) + 3));
  LODWORD(v30) = (v113 & 0xDF3A4357 ^ 0x5004307 | v113 & 0xDF3A4357 ^ 0xDA3A0050) + 1202855529 * v77;
  *(_DWORD *)(v11 + 8840) = (_DWORD)v30 - 2102525313 - ((2 * (_DWORD)v30) & 0x55C04FE);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5672)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = *(_DWORD *)(v110 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1561] ^ *(_DWORD *)(v111 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 3)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ (-1073377343 * ((-333269657 * (_DWORD)v30) >> 24));
  *(_DWORD *)(v11 + 8808) = 1202855529 * (_DWORD)v30 - 465820930 - ((258227410 * (_DWORD)v30 + 242517678) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5896)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = *(_DWORD *)(v110 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1614] ^ *(_DWORD *)(v111 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 3)) ^ (-1073377343 * ((-333269657 * (_DWORD)v30) >> 24));
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5816)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  LODWORD(v88) = (-1251540992 * v77) ^ v29[1662];
  LODWORD(v77) = -333269657 * v77;
  LODWORD(v77) = v88 ^ v77 ^ (-1073377343 * BYTE3(v77)) ^ *(_DWORD *)(v110 + 4 * BYTE3(v77)) ^ *(_DWORD *)(v111 + 4 * BYTE3(v77)) ^ *(_DWORD *)(v112 + 4 * (BYTE3(v77) + 3));
  *(_DWORD *)(v11 + 9640) = 1202855529 * v119 - 1637007925 - ((258227410 * v119 + 1047824046) & 0x7E65F4E8);
  *(_DWORD *)(v11 + 9368) = 1202855529 * v77 - 465820930 - ((258227410 * v77 + 242517678) & 0xA03BF4E);
  v120 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5872)) & 0x7FFFFFFF);
  v121 = v120 ^ HIWORD(v120);
  LODWORD(v77) = (-1251540992 * v121) ^ v29[1608];
  v121 *= -333269657;
  v122 = v77 ^ v121 ^ (-1073377343 * HIBYTE(v121)) ^ *(_DWORD *)(v110 + 4 * HIBYTE(v121)) ^ *(_DWORD *)(v111 + 4 * HIBYTE(v121)) ^ *(_DWORD *)(v112 + 4 * (HIBYTE(v121) + 3));
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5660)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  LODWORD(v77) = *(_DWORD *)(v110 + 4 * ((-333269657 * v77) >> 24)) ^ v29[1560] ^ *(_DWORD *)(v111 + 4 * ((-333269657 * v77) >> 24)) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * v77) >> 24) + 3)) ^ (-1251540992 * v77) ^ (-333269657 * v77) ^ (-1073377343 * ((-333269657 * v77) >> 24));
  *(_DWORD *)(v11 + 9012) = 1202855529 * v122 - 465820930 - ((258227410 * v122 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8784) = 1202855529 * (_DWORD)v30 - 135313720 - ((258227410 * (_DWORD)v30 + 1047824046) & 0x316A06E2);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5612)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = *(_DWORD *)(v110 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1600] ^ *(_DWORD *)(v111 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 3)) ^ (-1073377343 * ((-333269657 * (_DWORD)v30) >> 24));
  *(_DWORD *)(v11 + 8768) = 1202855529 * v77 - 465820930 - ((258227410 * v77 + 242517678) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9064) = 1202855529 * (_DWORD)v30 - 465820930 - ((258227410 * (_DWORD)v30 + 242517678) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5756)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = (-333269657 * (_DWORD)v30) ^ (-1251540992 * (_DWORD)v30) ^ v29[1556] ^ (-1073377343
                                                                                       * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v110 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v111 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v112 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 3));
  *(_DWORD *)(v11 + 8832) = 1202855529 * (_DWORD)v30 + 84008871 - ((258227410 * (_DWORD)v30) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5736)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  *(_DWORD *)(v11 + 8936) = *(_DWORD *)(*(_QWORD *)(v11 + 7736) + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1615] ^ *(_DWORD *)(*(_QWORD *)(v11 + 7816) + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(*(_QWORD *)(v11 + 7928) + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 4)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ (1551792265 * ((-333269657 * (_DWORD)v30) >> 24));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5812)) & 0x7FFFFFFF);
  v123 = v30 ^ (v30 >> 16);
  LODWORD(v88) = -333269657 * v123;
  LODWORD(v110) = -1251540992 * v123;
  LODWORD(v89) = (-333269657 * v123) >> 24;
  v124 = *(_QWORD *)(v11 + 7720);
  v125 = *(_DWORD *)(v124 + 4 * ((_DWORD)v89 + 2));
  LODWORD(v44) = v29[1574];
  v126 = 4 * v89;
  v127 = *(_QWORD *)(v11 + 7744);
  LODWORD(v112) = *(_DWORD *)(v127 + v126);
  v128 = v112 ^ v44 ^ v125 ^ (-1251540992 * v123);
  v129 = *(_DWORD *)(v11 + 9544);
  v130 = *(_DWORD *)(v11 + 9384);
  *(_DWORD *)(v11 + 8628) = (v130 ^ 0xFAFE2058)
                          + (v129 ^ 0x501DFA7)
                          - 678042682
                          - ((2 * ((v130 ^ 0xFAFE2058) + (v129 ^ 0x501DFA7) + 1)) & 0xAF2BC78A);
  *(_DWORD *)(v11 + 9560) = (v130 ^ 0x501DFA7)
                          + (v109 ^ 0x7D51FD80)
                          + 260362615
                          - ((2 * ((v130 ^ 0x501DFA7) + (v109 ^ 0x7D51FD80) + 1)) & 0x1F09A2EC);
  v131 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5712)) & 0x7FFFFFFF);
  v132 = v131 ^ HIWORD(v131);
  v133 = *(_QWORD *)(v11 + 7728);
  v134 = (-333269657 * v132) ^ (-1251540992 * v132) ^ v29[1575] ^ (-1609471543
                                                                 * ((-333269657 * v132) >> 24)) ^ *(_DWORD *)(v127 + 4 * ((-333269657 * v132) >> 24)) ^ *(_DWORD *)(v124 + 4 * (((-333269657 * v132) >> 24) + 2)) ^ *(_DWORD *)(v133 + 4 * ((-333269657 * v132) >> 24));
  v135 = *(_DWORD *)(v11 + 9448) - 289467187;
  v136 = 1202855529 * v134 - 549829801;
  *(_DWORD *)(v11 + 9288) = v136 + (v135 ^ 0xF84D176) - 1414547454 - ((2 * (v136 + (v135 ^ 0xF84D176))) & 0x575F7004);
  v137 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5820)) & 0x7FFFFFFF);
  v138 = v137 ^ HIWORD(v137);
  v139 = 1202855529
       * (*(_DWORD *)(v127 + 4 * ((-333269657 * v138) >> 24)) ^ v29[1576] ^ *(_DWORD *)(v124 + 4 * (((-333269657 * v138) >> 24) + 2)) ^ *(_DWORD *)(v133 + 4 * ((-333269657 * v138) >> 24)) ^ (-1251540992 * v138) ^ (-333269657 * v138) ^ (-1609471543 * ((-333269657 * v138) >> 24)))
       - 549829801;
  v140 = *(_DWORD *)(v11 + 9152);
  *(_DWORD *)(v11 + 9004) = (v140 ^ 0x501DFA7) - v139 + 84008871 - ((2 * ((v140 ^ 0x501DFA7) - v139)) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5512)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  *(_DWORD *)(v11 + 8744) = *(_DWORD *)(v127 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1633] ^ *(_DWORD *)(v124 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ *(_DWORD *)(v133 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ (-1609471543 * ((-333269657 * (_DWORD)v30) >> 24));
  v141 = *(_DWORD *)(v11 + 8672);
  *(_DWORD *)(v11 + 8344) = (v140 ^ 0xFAFE2058)
                          + (v141 ^ 0xBF32FA74)
                          + 84008872
                          - ((2 * ((v140 ^ 0xFAFE2058) + (v141 ^ 0xBF32FA74) + 1)) & 0xA03BF4E);
  LODWORD(v30) = *(_DWORD *)(v11 + 9052) - 1964377255;
  v142 = *(_DWORD *)(v11 + 8400);
  *(_DWORD *)(v11 + 8792) = (v142 ^ 0x501DFA7)
                          + (v30 ^ 0x545047FD)
                          + 84008872
                          - ((2 * ((v142 ^ 0x501DFA7) + (v30 ^ 0x545047FD) + 1)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9024) = v141 ^ 0x119C9DD1 ^ v30;
  LODWORD(v77) = -1609471543 * (_DWORD)v89;
  LODWORD(v30) = v110 ^ v44 ^ v88 ^ (-1609471543 * (_DWORD)v89) ^ v112;
  LODWORD(v89) = *(_DWORD *)(v133 + v126);
  v143 = 1202855529 * (v30 ^ v125 ^ v89) - 549829801;
  *(_DWORD *)(v11 + 8748) = v143;
  *(_DWORD *)(v11 + 8816) = (v129 ^ 0xFAFE2058)
                          + v143
                          - 519103227
                          - ((2 * ((v129 ^ 0xFAFE2058) + v143 + 1)) & 0xC21E3A08);
  v144 = *(_DWORD *)(v11 + 9200) ^ 0x501DFA7;
  v145 = *(_DWORD *)(v11 + 8888);
  *(_DWORD *)(v11 + 8864) = (v145 ^ 0x501DFA7) + v144 + 84008871 - ((2 * ((v145 ^ 0x501DFA7) + v144)) & 0xA03BF4E);
  LODWORD(v110) = *(_DWORD *)(v11 + 9696);
  *(_DWORD *)(v11 + 9544) = (v110 ^ 0xFAFE2058)
                          + (*(_DWORD *)(v11 + 9096) ^ 0x501DFA7)
                          + 84008872
                          - ((2 * ((v110 ^ 0xFAFE2058) + (*(_DWORD *)(v11 + 9096) ^ 0x501DFA7) + 1)) & 0xA03BF4E);
  LODWORD(v30) = v128 ^ v89 ^ v88 ^ v77 | ~(v128 ^ v89 ^ v88 ^ v77);
  LODWORD(v77) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5552)) & 0x7FFFFFFF);
  LODWORD(v77) = v77 ^ WORD1(v77);
  *(_DWORD *)(v11 + 8736) = (v30 & 0xDF3A4357)
                          + 1202855529
                          * (*(_DWORD *)(v127 + 4 * ((-333269657 * v77) >> 24)) ^ v29[1643] ^ *(_DWORD *)(v124 + 4 * (((-333269657 * v77) >> 24) + 2)) ^ (-1251540992 * v77) ^ (-333269657 * v77) ^ *(_DWORD *)(v133 + 4 * ((-333269657 * v77) >> 24)) ^ (-1609471543 * ((-333269657 * v77) >> 24)));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5720)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v77) = (-333269657 * (_DWORD)v30) ^ (-1251540992 * (_DWORD)v30) ^ v29[1611] ^ (-1609471543
                                                                                       * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v127 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v124 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2)) ^ *(_DWORD *)(v133 + 4 * ((-333269657 * (_DWORD)v30) >> 24));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5772)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = (-333269657 * (_DWORD)v30) ^ (-1251540992 * (_DWORD)v30) ^ v29[1632] ^ (-1609471543
                                                                                       * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v127 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v124 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2)) ^ *(_DWORD *)(v133 + 4 * ((-333269657 * (_DWORD)v30) >> 24));
  *(_DWORD *)(v11 + 9152) = 1202855529 * v77 - 465820930 - ((258227410 * v77 + 242517678) & 0xA03BF4E);
  LODWORD(v88) = *(_DWORD *)(v11 + 9036);
  *(_DWORD *)(v11 + 8616) = v88 ^ v136 ^ 0xE40EC2A3;
  LODWORD(v77) = (*(_DWORD *)(v11 + 9608) ^ 0xFAFE2058) + (v88 ^ 0xE10F1D04) + 1;
  *(_DWORD *)(v11 + 9036) = v77 + 1716276884 - ((2 * v77) & 0xCC989D28);
  *(_DWORD *)(v11 + 9448) = (v135 ^ 0xF07B2E89) + v139 + 84008872 - ((2 * ((v135 ^ 0xF07B2E89) + v139 + 1)) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 8764) = v144 ^ v77;
  LODWORD(v88) = *(_DWORD *)(v11 + 8808);
  *(_DWORD *)(v11 + 9200) = v88 ^ v77;
  *(_DWORD *)(v11 + 8800) = (v142 ^ 0xFAFE2058)
                          + (v88 ^ 0x501DFA7)
                          - 762037149
                          - ((2 * ((v142 ^ 0xFAFE2058) + (v88 ^ 0x501DFA7) + 1)) & 0xA52878C4);
  v146 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5708)) & 0x7FFFFFFF);
  v147 = v146 ^ HIWORD(v146);
  v148 = *(_DWORD *)(v127 + 4 * ((-333269657 * v147) >> 24)) ^ v29[1676] ^ *(_DWORD *)(v124 + 4 * (((-333269657 * v147) >> 24) + 2)) ^ *(_DWORD *)(v133 + 4 * ((-333269657 * v147) >> 24)) ^ (-1251540992 * v147) ^ (-333269657 * v147) ^ (-1609471543 * ((-333269657 * v147) >> 24));
  *(_DWORD *)(v11 + 8656) = 1202855529 * v148 - ((258227410 * v148 + 510953134) & 0x150A1DA2);
  *(_DWORD *)(v11 + 8752) = 1202855529 * (_DWORD)v30 - 465820930 - ((258227410 * (_DWORD)v30 + 242517678) & 0xA03BF4E);
  LODWORD(v127) = *(_DWORD *)(v11 + 9664);
  *(_DWORD *)(v11 + 8712) = (v110 ^ 0x501DFA7)
                          + (v127 ^ 0x1EF0E2FB)
                          + 84008872
                          - ((2 * ((v110 ^ 0x501DFA7) + (v127 ^ 0x1EF0E2FB) + 1)) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5844)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  v149 = *(_QWORD *)(v11 + 9192);
  v150 = *(_QWORD *)(v11 + 9208);
  v151 = *(_QWORD *)(v11 + 9360);
  v152 = *(_DWORD *)(v149 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1647] ^ *(_DWORD *)(v150 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ *(_DWORD *)(v151 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2)) ^ (-1083662871 * ((-333269657 * (_DWORD)v30) >> 24));
  LODWORD(v77) = *(_DWORD *)(v11 + 9472);
  *(_DWORD *)(v11 + 9096) = v145 ^ 0xC81B1A13 ^ v77;
  *(_DWORD *)(v11 + 9472) = (v127 ^ 0xE10F1D04)
                          + (v77 ^ 0xFAFE2058)
                          - 2018517543
                          - ((2 * ((v127 ^ 0xE10F1D04) + (v77 ^ 0xFAFE2058) + 1)) & 0xF5FBBB0);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5648)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = (-333269657 * (_DWORD)v30) ^ (-1251540992 * (_DWORD)v30) ^ v29[1626] ^ (-1083662871
                                                                                       * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v149 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v150 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v151 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2));
  *(_DWORD *)(v11 + 9172) = 1202855529 * (_DWORD)v30 - 465820930 - ((258227410 * (_DWORD)v30 + 242517678) & 0xA03BF4E);
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5644)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  *(_DWORD *)(v11 + 9664) = *(_DWORD *)(v149 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1677] ^ *(_DWORD *)(v150 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v151 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ (-1083662871 * ((-333269657 * (_DWORD)v30) >> 24));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5460)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  v153 = *(_DWORD *)(v149 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1602] ^ *(_DWORD *)(v150 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ *(_DWORD *)(v151 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2)) ^ (-1083662871 * ((-333269657 * (_DWORD)v30) >> 24));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5916)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  v154 = (-333269657 * (_DWORD)v30) ^ (-1251540992 * (_DWORD)v30) ^ v29[1609] ^ (-1083662871
                                                                               * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v149 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v150 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v151 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5788)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  v155 = v150;
  *(_DWORD *)(v11 + 8888) = (-333269657 * (_DWORD)v30) ^ (-1251540992 * (_DWORD)v30) ^ v29[1658] ^ (-1083662871
                                                                                                  * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v149 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v150 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v151 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2));
  LODWORD(v30) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5836)) & 0x7FFFFFFF);
  LODWORD(v30) = v30 ^ (v30 >> 16);
  LODWORD(v30) = *(_DWORD *)(v149 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ v29[1679] ^ *(_DWORD *)(v150 + 4 * ((-333269657 * (_DWORD)v30) >> 24)) ^ *(_DWORD *)(v151 + 4 * (((-333269657 * (_DWORD)v30) >> 24) + 2)) ^ (-1251540992 * (_DWORD)v30) ^ (-333269657 * (_DWORD)v30) ^ (-1083662871 * ((-333269657 * (_DWORD)v30) >> 24));
  v156 = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5732)) & 0x7FFFFFFF);
  v157 = v156 ^ HIWORD(v156);
  LODWORD(v150) = -333269657 * ((v48 ^ *(_DWORD *)(v11 + 5656)) & 0x7FFFFFFF);
  LODWORD(v150) = v150 ^ WORD1(v150);
  v158 = 4 * ((-333269657 * v150) >> 24);
  LODWORD(v110) = *(_DWORD *)(v149 + v158);
  LODWORD(v158) = *(_DWORD *)(v155 + v158);
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v149 + 4 * ((-333269657 * v157) >> 24)) ^ v29[1664] ^ *(_DWORD *)(v155 + 4 * ((-333269657 * v157) >> 24)) ^ (-1251540992 * v157) ^ (-333269657 * v157) ^ *(_DWORD *)(v151 + 4 * (((-333269657 * v157) >> 24) + 2)) ^ (-1083662871 * ((-333269657 * v157) >> 24));
  *(_DWORD *)(v11 + 8612) = (-333269657 * v150) ^ (-1251540992 * v150) ^ v29[1616] ^ (-1083662871
                                                                                    * ((-333269657 * v150) >> 24)) ^ v110 ^ v158 ^ *(_DWORD *)(v151 + 4 * (((-333269657 * v150) >> 24) + 2));
  LODWORD(v133) = 1202855529 * *(_DWORD *)(v11 + 8936)
                - 465820930
                - ((258227410 * *(_DWORD *)(v11 + 8936) + 242517678) & 0xA03BF4E);
  LODWORD(v32) = *(_DWORD *)(v11 + 8688);
  LODWORD(v88) = (v32 ^ 0x501DFA7) + (*(_DWORD *)(v11 + 9584) ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v11 + 9052) = (_DWORD)v88 + 84008871 - ((2 * (_DWORD)v88) & 0xA03BF4E);
  LODWORD(v158) = *(_DWORD *)(v11 + 9440) ^ 0xC81B1A13;
  LODWORD(v127) = *(_DWORD *)(v11 + 8696);
  *(_DWORD *)(v11 + 8672) = (v127 ^ 0x99B3B16B) + v158 + 84008872 - ((2 * ((v127 ^ 0x99B3B16B) + v158 + 1)) & 0xA03BF4E);
  LODWORD(v88) = *(_DWORD *)(v11 + 8632) ^ 0x501DFA7;
  v159 = *(_DWORD *)(v11 + 9672);
  *(_DWORD *)(v11 + 9696) = v88 ^ v159 ^ 0x339B2166;
  *(_DWORD *)(v11 + 9384) = v88 ^ *(_DWORD *)(v11 + 9640) ^ 0xBA3325D3;
  LODWORD(v126) = *(_DWORD *)(v11 + 9392) ^ 0x501DFA7;
  LODWORD(v155) = *(_DWORD *)(v11 + 9432);
  *(_DWORD *)(v11 + 8720) = v126 + (v155 ^ 0x501DFA7) - 937747949 - ((2 * (v126 + (v155 ^ 0x501DFA7))) & 0x90363426);
  LODWORD(v88) = *(_DWORD *)(v11 + 9592) ^ 0x501DFA7;
  LODWORD(v150) = *(_DWORD *)(v11 + 9120) ^ 0xC81B1A13;
  *(_DWORD *)(v11 + 8456) = v150 + (_DWORD)v88 + 84008871 - ((2 * (v150 + (_DWORD)v88)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8312) = (v127 ^ 0x664C4E94)
                          + (_DWORD)v88
                          + 84008871
                          - ((2 * ((v127 ^ 0x664C4E94) + (_DWORD)v88)) & 0xA03BF4E);
  LODWORD(v110) = *(_DWORD *)(v11 + 9012);
  *(_DWORD *)(v11 + 9440) = v150
                          + (v110 ^ 0xFAFE2058)
                          - 2102525312
                          - ((2 * (v150 + (v110 ^ 0xFAFE2058) + 1)) & 0x55C04FE);
  LODWORD(v150) = 1202855529 * (_DWORD)v30 - 549829801;
  LODWORD(v77) = *(_DWORD *)(v11 + 8984);
  *(_DWORD *)(v11 + 8464) = v150 + (v77 ^ 0x82AE027F) + 84008871 - ((2 * (v150 + (v77 ^ 0x82AE027F))) & 0xA03BF4E);
  LODWORD(v88) = *(_DWORD *)(v11 + 9056) - 1227872484;
  *(_DWORD *)(v11 + 9056) = (v88 ^ 0xD795E3C5)
                          + v158
                          + 414516081
                          - ((2 * ((v88 ^ 0xD795E3C5) + v158)) & 0x316A06E2);
  v160 = 1202855529 * v152 - 549829801;
  LODWORD(v30) = 1202855529 * v153 - 549829801;
  *(_DWORD *)(v11 + 8472) = (_DWORD)v30 + v160 + 84008871 - ((2 * ((_DWORD)v30 + v160)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8808) = v155 ^ v110 ^ 0x82AE027F;
  LODWORD(v158) = *(_DWORD *)(v11 + 9400) ^ 0x501DFA7;
  LODWORD(v155) = *(_DWORD *)(v11 + 9304);
  *(_DWORD *)(v11 + 8776) = v158 + (v155 ^ 0xFAFE2058) + 84008872 - ((2 * (v158 + (v155 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v127) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 8936) = v158 ^ v127;
  *(_DWORD *)(v11 + 9400) = v126 + (v127 ^ 0x501DFA7) - 1087178124 - ((2 * (v126 + (v127 ^ 0x501DFA7))) & 0x7E65F4E8);
  v161 = *(_DWORD *)(v11 + 8968);
  v162 = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 8828) = (v161 ^ 0xE10F1D04)
                          + (v162 ^ 0xFAFE2058)
                          - 1087178123
                          - ((2 * ((v161 ^ 0xE10F1D04) + (v162 ^ 0xFAFE2058) + 1)) & 0x7E65F4E8);
  v163 = *(_DWORD *)(v11 + 9424);
  LODWORD(v29) = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 9012) = (((v163 ^ 0x501DFA7) + (v29 ^ 0x7D51FD80) + 1) ^ 0x5FAF63FD)
                          - 67248260
                          + ((2 * ((v163 ^ 0x501DFA7) + (v29 ^ 0x7D51FD80) + 1)) & 0xBF5EC7FA);
  LODWORD(v126) = *(_DWORD *)(v11 + 9464) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8680) = v150 + v126 + 1396432010 - ((2 * (v150 + v126)) & 0xA677B914);
  LODWORD(v150) = 1202855529 * v154 - 549829801;
  *(_DWORD *)(v11 + 9120) = v160 ^ v150 ^ 0x501DFA7;
  v164 = 1202855529 * *(_DWORD *)(v11 + 9016) - 549829801;
  LODWORD(v158) = *(_DWORD *)(v11 + 9536);
  LODWORD(v31) = *(_DWORD *)(v11 + 8488);
  *(_DWORD *)(v11 + 8576) = (v164 ^ v158 ^ 0x501DFA7)
                          + 84008871
                          - 2 * ((v164 ^ v158 ^ 0x501DFA7) & 0x501DFB7 ^ (v164 ^ v158) & 0x10);
  LODWORD(v110) = v133;
  LODWORD(v133) = *(_DWORD *)(v11 + 9504);
  *(_DWORD *)(v11 + 9392) = v133 ^ 0x82AE027F ^ *(_DWORD *)(v11 + 8760);
  *(_DWORD *)(v11 + 9192) = (v126 ^ v164) - 1087178124 - ((2 * (v126 ^ v164)) & 0x7E65F4E8);
  LODWORD(v127) = *(_DWORD *)(v11 + 9416);
  *(_DWORD *)(v11 + 9432) = v163 ^ 0x18B50371 ^ v127;
  *(_DWORD *)(v11 + 9016) = v127 ^ 0x82AE027F ^ v77;
  LODWORD(v127) = (*(_DWORD *)(v11 + 9608) ^ 0x501DFA7) - *(_DWORD *)(v11 + 8748);
  *(_DWORD *)(v11 + 9424) = v127 + 84008871 - ((2 * v127) & 0xA03BF4E);
  LODWORD(v112) = *(_DWORD *)(v11 + 9600);
  v165 = *(_DWORD *)(v11 + 9240);
  v166 = (int)v31;
  *(_DWORD *)(v11 + 8748) = (v165 ^ 0x99B3B16B)
                          + (v112 ^ 0x501DFA7)
                          + 84008872
                          - ((2 * ((v165 ^ 0x99B3B16B) + (v112 ^ 0x501DFA7) + 1)) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 9040);
  *(_DWORD *)(v11 + 8984) = v77 ^ v150 ^ 0xBA3325D3;
  *(_DWORD *)(v11 + 8704) = v158 ^ 0xBF32FA74 ^ v77;
  *(_DWORD *)(v11 + 9592) = v88 ^ 0x503A3E1D ^ v29;
  LODWORD(v88) = 1202855529 * *(_DWORD *)(v11 + 8744)
               - ((-1099659602 - 1889256238 * *(_DWORD *)(v11 + 8744)) & 0xA8551690);
  LODWORD(v126) = *(_DWORD *)(v11 + 9408);
  *(_DWORD *)(v11 + 9416) = (v126 ^ 0xFAFE2058)
                          + (v133 ^ 0x501DFA7)
                          + 84008872
                          - ((2 * ((v126 ^ 0xFAFE2058) + (v133 ^ 0x501DFA7) + 1)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9040) = (v126 ^ 0x501DFA7)
                          + (v112 ^ 0xFAFE2058)
                          + 84008872
                          - ((2 * ((v126 ^ 0x501DFA7) + (v112 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 9504) = v77 ^ v30 ^ 0x1DB4DCD6;
  *(_DWORD *)(v11 + 9360) = v162 ^ 0x18B50371 ^ v77;
  LODWORD(v150) = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 9208) = v150 ^ v165;
  LODWORD(v127) = *(_DWORD *)(v11 + 8944);
  *(_DWORD *)(v11 + 8968) = v161 ^ 0x501DFA7 ^ v127;
  *(_DWORD *)(v11 + 8728) = (v150 ^ 0x501DFA7)
                          + (v127 ^ 0xFAFE2058)
                          + 84008872
                          - ((2 * ((v150 ^ 0x501DFA7) + (v127 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v30) = 1202855529 * *(_DWORD *)(v11 + 8612) - 549829801;
  v167 = *(_DWORD *)(v11 + 9376);
  *(_DWORD *)(v11 + 8328) = (_DWORD)v30
                          + (v167 ^ 0x501DFA7)
                          + 84008871
                          - ((2 * ((_DWORD)v30 + (v167 ^ 0x501DFA7))) & 0xA03BF4E);
  LODWORD(v150) = *(_DWORD *)(v11 + 8964);
  *(_DWORD *)(v11 + 9240) = v30 ^ v150;
  v168 = *(_DWORD *)(v11 + 8736);
  *(_DWORD *)(v11 + 9600) = v168 ^ v150;
  LODWORD(v30) = *(_DWORD *)(v11 + 9184);
  *(_DWORD *)(v11 + 8784) = v168 ^ v30;
  LODWORD(v77) = *(_DWORD *)(v11 + 8768);
  *(_DWORD *)(v11 + 8480) = (v77 ^ 0x501DFA7)
                          + (v30 ^ 0x501DFA7)
                          + 84008871
                          - ((2 * ((v77 ^ 0x501DFA7) + (v30 ^ 0x501DFA7))) & 0xA03BF4E);
  v169 = *(_DWORD *)(v11 + 8848);
  *(_DWORD *)(v11 + 8992) = v169 ^ 0xD795E3C5 ^ v77;
  LODWORD(v150) = *(_DWORD *)(v11 + 9480);
  *(_DWORD *)(v11 + 9608) = v32 ^ v150;
  *(_DWORD *)(v11 + 8548) = (v150 ^ 0xFAFE2058)
                          + (v169 ^ 0x501DFA7)
                          + 84008872
                          - ((2 * ((v150 ^ 0xFAFE2058) + (v169 ^ 0x501DFA7) + 1)) & 0xA03BF4E);
  LODWORD(v30) = 1202855529 * *(_DWORD *)(v11 + 9664) - 549829801;
  *(_DWORD *)(v11 + 8612) = (*(_DWORD *)(v11 + 9584) ^ 0x501DFA7)
                          - (_DWORD)v30
                          + 84008871
                          - ((2 * ((*(_DWORD *)(v11 + 9584) ^ 0x501DFA7) - (_DWORD)v30)) & 0xA03BF4E);
  v170 = 1202855529 * *(_DWORD *)(v11 + 8664) - 549829801;
  LODWORD(v150) = *(_DWORD *)(v11 + 8920);
  *(_DWORD *)(v11 + 8512) = v150 ^ 0x87AFDDD8 ^ v170;
  LODWORD(v29) = *(_DWORD *)(v11 + 9176);
  *(_DWORD *)(v11 + 8944) = (v159 ^ 0x369AFEC1) - v170 + 84008871 - ((2 * ((v159 ^ 0x369AFEC1) - v170)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8736) = v155 ^ 0x5B3C38D7 ^ *(_DWORD *)(v11 + 9640);
  *(_DWORD *)(v11 + 8532) = (v150 ^ 0x501DFA7)
                          + (v167 ^ 0xFAFE2058)
                          + 84008872
                          - ((2 * ((v150 ^ 0x501DFA7) + (v167 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  v171 = (*(_DWORD *)(v11 + 8832) ^ 0x501DFA7) - 549829801;
  LODWORD(v77) = *(_DWORD *)(v11 + 9496) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9672) = v77 - v171 + 84008871 - ((2 * (v77 - v171)) & 0xA03BF4E);
  LODWORD(v158) = *(_DWORD *)(v11 + 9576);
  *(_DWORD *)(v11 + 9496) = v77 + (v158 ^ 0x501DFA7) + 84008871 - ((2 * (v77 + (v158 ^ 0x501DFA7))) & 0xA03BF4E);
  LODWORD(v150) = *(_DWORD *)(v11 + 9296) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9376) = (v29 ^ 0x501DFA7)
                          + v150
                          + 84008871
                          - ((2 * ((v29 ^ 0x501DFA7) + v150)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8664) = *(_DWORD *)(v11 + 8980) + 1114;
  *(_DWORD *)(v11 + 9640) = *(_DWORD *)(v11 + 8880) - 868238877;
  LODWORD(v77) = *(_DWORD *)(v11 + 8872) - 51437523;
  LODWORD(v133) = *(_DWORD *)(v11 + 8656) - 373337560;
  LODWORD(v155) = 1202855529 * *(_DWORD *)(v11 + 8888) - 549829801;
  v172 = (_DWORD)v88 - 1285239137;
  LODWORD(v127) = *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 8860) = v127 ^ v155 ^ 0xD2943C62;
  *(_DWORD *)(v11 + 8696) = *(_DWORD *)(v11 + 9528) ^ v30 ^ 0x634D9133;
  LODWORD(v32) = *(_DWORD *)(v11 + 8900);
  LODWORD(v112) = *(_DWORD *)(v11 + 9224) ^ 0xBF32FA74 ^ v32;
  LODWORD(v88) = *(_DWORD *)(v11 + 9456);
  *(_DWORD *)(v11 + 8520) = v171 ^ v88;
  *(_DWORD *)(v11 + 8632) = v155 ^ v31;
  *(_DWORD *)(v11 + 8980) = v77 ^ 0xCC9F8839 ^ v172;
  LODWORD(v111) = *(_DWORD *)(v11 + 9680);
  *(_DWORD *)(v11 + 8744) = v150 ^ v111;
  *(_DWORD *)(v11 + 9584) = v88 ^ 0x501DFA7 ^ v110;
  *(_DWORD *)(v11 + 9664) = *(_DWORD *)(v11 + 8816);
  LODWORD(v31) = *(_DWORD *)(v11 + 8904);
  LODWORD(v151) = *(_DWORD *)(v11 + 9512);
  v173 = *(_DWORD *)(v11 + 9248);
  v174 = *(_DWORD *)(v11 + 8912);
  *(_DWORD *)(v11 + 9536) = v112;
  LODWORD(v155) = *(_DWORD *)(v11 + 9156);
  v175 = *(_DWORD *)(v11 + 9136);
  LODWORD(v88) = *(_DWORD *)(v11 + 9160) - 2059600202;
  *(_DWORD *)(v11 + 8900) = (_DWORD)v88;
  *(_DWORD *)(v11 + 8964) = (v155 ^ 0x501DFA7)
                          + (v175 ^ 0x99B3B16B)
                          + 84008872
                          - ((((v155 ^ 0x501DFA7) + (v175 ^ 0x99B3B16B) + 1) << (v88 ^ 0x16)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8920) = (v29 ^ 0x501DFA7) + (v110 ^ 0x501DFA7);
  *(_DWORD *)(v11 + 9184) = (v166 ^ 0x501DFA7) + (v158 ^ 0x501DFA7);
  *(_DWORD *)(v11 + 8816) = (v127 ^ 0x286A1C3A)
                          + (*(_DWORD *)(v11 + 9528) ^ 0x501DFA7)
                          - 519103227
                          - ((2 * ((v127 ^ 0x286A1C3A) + (*(_DWORD *)(v11 + 9528) ^ 0x501DFA7) + 1)) & 0xC21E3A08);
  LODWORD(v30) = *(_DWORD *)(v11 + 9152) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9464) = (v155 ^ 0xFAFE2058)
                          + (_DWORD)v30
                          + 84008872
                          - ((2 * ((v155 ^ 0xFAFE2058) + (_DWORD)v30 + 1)) & 0xA03BF4E);
  LODWORD(v88) = *(_DWORD *)(v11 + 9632) ^ 0xE10F1D04;
  *(_DWORD *)(v11 + 8572) = (_DWORD)v88
                          + (v173 ^ 0x501DFA7)
                          - 735409336
                          - ((2 * ((_DWORD)v88 + (v173 ^ 0x501DFA7))) & 0xA8551690);
  *(_DWORD *)(v11 + 9480) = (v111 ^ 0x501DFA7) + (v77 ^ 0x1DB4DCD6);
  LODWORD(v77) = *(_DWORD *)(v11 + 9072);
  *(_DWORD *)(v11 + 8432) = v172 ^ 0xD42A8B48 ^ v77;
  LODWORD(v155) = *(_DWORD *)(v11 + 9104);
  *(_DWORD *)(v11 + 9576) = (v77 ^ 0x501DFA7) + (v155 ^ 0xFAFE2058);
  v176 = *(_DWORD *)(v11 + 9116) ^ 0xC81B1A13;
  *(_DWORD *)(v11 + 9176) = (_DWORD)v88 + v176;
  *(_DWORD *)(v11 + 9616) = v176 + (v32 ^ 0x40CD058B);
  *(_DWORD *)(v11 + 8872) = v30 ^ v155;
  v177 = *(_DWORD *)(v11 + 9272);
  *(_DWORD *)(v11 + 9528) = v177 ^ v173;
  v178 = v175 ^ 0x634D9133 ^ v177;
  v179 = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 8904) = v179 ^ ((v112 ^ 0xBA3325D3 ^ v32)
                                  + 84008871
                                  - ((2 * (v112 ^ 0xBA3325D3 ^ v32)) & 0xA03BF4E));
  LODWORD(v110) = v179 ^ v174;
  LODWORD(v88) = *(_DWORD *)(v11 + 8640);
  *(_DWORD *)(v11 + 9680) = v88 ^ 0x72283FC0 ^ v151;
  *(_DWORD *)(v11 + 8688) = (v151 ^ 0x32E53A4B)
                          + (v174 ^ 0x501DFA7)
                          + 84008872
                          - ((2 * ((v151 ^ 0x32E53A4B) + (v174 ^ 0x501DFA7) + 1)) & 0xA03BF4E);
  LODWORD(v32) = *(_DWORD *)(v11 + 9320);
  LODWORD(v77) = *(_DWORD *)(v11 + 8952);
  *(_DWORD *)(v11 + 9512) = (v77 ^ 0xFAFE2058) + (v32 ^ 0x501DFA7);
  LODWORD(v150) = *(_DWORD *)(v11 + 9328) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8912) = v150 + (v77 ^ 0x501DFA7) + 84008871 - ((2 * (v150 + (v77 ^ 0x501DFA7))) & 0xA03BF4E);
  LODWORD(v158) = *(_DWORD *)(v11 + 9488);
  *(_DWORD *)(v11 + 9160) = (v133 ^ 0xA850ED1)
                          + (v158 ^ 0x93CF8D01)
                          - 1087178123
                          - ((2 * ((v133 ^ 0xA850ED1) + (v158 ^ 0x93CF8D01) + 1)) & 0x7E65F4E8);
  LODWORD(v77) = *(_DWORD *)(v11 + 9720);
  *(_DWORD *)(v11 + 9104) = (v88 ^ 0xBF32FA74) + (v77 ^ 0x37E4E5EC);
  LODWORD(v30) = *(_DWORD *)(v11 + 9552);
  *(_DWORD *)(v11 + 9256) = v77 ^ v30;
  v180 = *(_DWORD *)(v11 + 9128);
  *(_DWORD *)(v11 + 9116) = v180 ^ v30;
  LODWORD(v30) = *(_DWORD *)(v11 + 9312);
  LODWORD(v112) = v180 ^ v30;
  LODWORD(v88) = *(_DWORD *)(v11 + 9264) ^ 0xBF32FA74;
  *(_DWORD *)(v11 + 9272) = (_DWORD)v88 + (v30 ^ 0x501DFA7);
  LODWORD(v30) = *(_DWORD *)(v11 + 8368) ^ 0x18B50371;
  *(_DWORD *)(v11 + 9456) = (_DWORD)v30 + (_DWORD)v88;
  v181 = *(_DWORD *)(v11 + 9148);
  v182 = (v181 ^ 0x1EF0E2FB) + (_DWORD)v30;
  v183 = *(_DWORD *)(v11 + 9736) ^ 0x501DFA7;
  v184 = (v31 ^ 0x501DFA7) + (v181 ^ 0xE10F1D04);
  *(_DWORD *)(v11 + 9264) = (v31 ^ 0x501DFA7) + v183;
  *(_DWORD *)(v11 + 9408) = v183 + (v133 ^ 0xF57AF12E);
  LODWORD(v133) = *(_DWORD *)(v11 + 9008);
  LODWORD(v155) = *(_DWORD *)(v11 + 9080);
  *(_DWORD *)(v11 + 9736) = (v133 ^ 0x501DFA7) + (v155 ^ 0x1EF0E2FB);
  LODWORD(v151) = *(_DWORD *)(v11 + 9280);
  v185 = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 9552) = (v151 ^ 0xE10F1D04) + (v185 ^ 0xFAFE2058);
  LODWORD(v31) = *(_DWORD *)(v11 + 9400) ^ 0xBF32FA74;
  LODWORD(v30) = *(_DWORD *)(v11 + 8736);
  *(_DWORD *)(v11 + 9128) = (v30 ^ 0x1EF0E2FB)
                          + (_DWORD)v31
                          + 84008872
                          - ((2 * ((v30 ^ 0x1EF0E2FB) + (_DWORD)v31 + 1)) & 0xA03BF4E);
  LODWORD(v126) = *(_DWORD *)(v11 + 8932) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9400) = (v158 ^ 0x6C3072FE) + v126 + 84008871 - ((2 * ((v158 ^ 0x6C3072FE) + v126)) & 0xA03BF4E);
  LODWORD(v88) = *(_DWORD *)(v11 + 8512);
  *(_DWORD *)(v11 + 9148) = (v30 ^ 0xE10F1D04)
                          + (v88 ^ 0x7D51FD80)
                          + 84008872
                          - ((2 * ((v30 ^ 0xE10F1D04) + (v88 ^ 0x7D51FD80) + 1)) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 8752);
  *(_DWORD *)(v11 + 8496) = v150 ^ v77;
  v186 = *(_DWORD *)(v11 + 9640);
  LODWORD(v29) = (v186 ^ 0x12FA8973) + (v77 ^ 0x501DFA7);
  v187 = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 8840) = v187 ^ v32;
  v188 = v126 + (v187 ^ 0xFAFE2058);
  v189 = *(_DWORD *)(v11 + 9688);
  v190 = (v155 ^ 0xE10F1D04) + (v189 ^ 0x501DFA7);
  LODWORD(v150) = *(_DWORD *)(v11 + 9368);
  LODWORD(v32) = v189 ^ v150;
  v191 = *(_DWORD *)(v11 + 8648);
  LODWORD(v150) = (v191 ^ 0x501DFA7) + (v150 ^ 0x501DFA7);
  LODWORD(v77) = *(_DWORD *)(v11 + 9360);
  *(_DWORD *)(v11 + 9312) = v77 ^ 0xC81B1A13 ^ *(_DWORD *)(v11 + 8720);
  LODWORD(v155) = *(_DWORD *)(v11 + 9192);
  *(_DWORD *)(v11 + 9632) = (v155 ^ 0xBF32FA74) - v178 - 519103228 - ((2 * ((v155 ^ 0xBF32FA74) - v178)) & 0xC21E3A08);
  *(_DWORD *)(v11 + 9320) = v191 ^ v151;
  LODWORD(v126) = *(_DWORD *)(v11 + 9064) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8424) = v126 + (v186 ^ 0xED05768C) + 84008871 - ((2 * (v126 + (v186 ^ 0xED05768C))) & 0xA03BF4E);
  v192 = *(_DWORD *)(v11 + 8664) ^ 0x5B1610EE;
  LODWORD(v158) = v192 + (v133 ^ 0xFAFE2058);
  LODWORD(v126) = v126 + v192;
  *(_DWORD *)(v11 + 9136) = (_DWORD)v32 + 84008871 - ((2 * (_DWORD)v32) & 0xA03BF4E);
  LODWORD(v30) = *(_DWORD *)(v11 + 8828);
  *(_DWORD *)(v11 + 9280) = v30 ^ 0x5E3DE770 ^ v178;
  LODWORD(v151) = *(_DWORD *)(v11 + 9520) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9328) = v151 ^ v185;
  v193 = *(_DWORD *)(v11 + 9568) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8848) = v193 + (*(_DWORD *)(v11 + 9656) ^ 0xFAFE2058);
  *(_DWORD *)(v11 + 8832) = v151 + v193;
  LODWORD(v111) = *(_DWORD *)(v11 + 8744);
  LODWORD(v133) = *(_DWORD *)(v11 + 9240);
  *(_DWORD *)(v11 + 8416) = (v111 ^ 0x501DFA7)
                          + (v133 ^ 0xFAFE2058)
                          + 84008872
                          - ((2 * ((v111 ^ 0x501DFA7) + (v133 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v151) = (v77 ^ 0x501DFA7) + (*(_DWORD *)(v11 + 9052) ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v11 + 8536) = v151 + 84008871 - ((2 * v151) & 0xA03BF4E);
  v194 = *(_DWORD *)(v11 + 9496);
  *(_DWORD *)(v11 + 8736) = v112 + (v194 ^ 0x501DFA7) + 84008871 - ((2 * (v112 + (v194 ^ 0x501DFA7))) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9688) = (_DWORD)v31 + (_DWORD)v32 + 84008871 - ((2 * ((_DWORD)v31 + (_DWORD)v32)) & 0xA03BF4E);
  LODWORD(v151) = *(_DWORD *)(v11 + 9036) ^ 0x664C4E94;
  LODWORD(v32) = *(_DWORD *)(v11 + 8312) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8720) = (_DWORD)v32 + v151 + 84008871 - ((2 * ((_DWORD)v32 + v151)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8952) = v111 ^ v88;
  LODWORD(v31) = *(_DWORD *)(v11 + 9012) - 1538081657;
  *(_DWORD *)(v11 + 9012) = (_DWORD)v31 + v151 + 1716276884 - ((2 * ((_DWORD)v31 + v151)) & 0xCC989D28);
  *(_DWORD *)(v11 + 9360) = v194 ^ v150;
  *(_DWORD *)(v11 + 9488) = v150 ^ 0x6C3072FE ^ (v188 + 1);
  *(_DWORD *)(v11 + 8888) = (v188 + 1) ^ v133;
  LODWORD(v150) = *(_DWORD *)(v11 + 9424) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8376) = v150 - (v182 + 1) + 84008871 - ((2 * (v150 - (v182 + 1))) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 9672);
  *(_DWORD *)(v11 + 8868) = (v182 + 1) ^ v77;
  LODWORD(v88) = v77 ^ 0xC81B1A13;
  LODWORD(v77) = *(_DWORD *)(v11 + 9416);
  *(_DWORD *)(v11 + 9720) = v88 ^ v77;
  v195 = *(_DWORD *)(v11 + 9440);
  *(_DWORD *)(v11 + 9304) = (v195 ^ 0x7D51FD80)
                          + (v77 ^ 0x501DFA7)
                          + 84008872
                          - ((2 * ((v195 ^ 0x7D51FD80) + (v77 ^ 0x501DFA7) + 1)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8768) = v195 ^ 0x87AFDDD8 ^ v190;
  LODWORD(v77) = *(_DWORD *)(v11 + 8712);
  *(_DWORD *)(v11 + 9248) = v77 ^ v190;
  LODWORD(v88) = *(_DWORD *)(v11 + 8480);
  LODWORD(v151) = v77 ^ v88;
  LODWORD(v88) = v88 ^ 0x501DFA7;
  v196 = (v77 ^ 0x501DFA7) & v88;
  *(_DWORD *)(v11 + 9368) = (_DWORD)v88 + (_DWORD)v32 + 84008871 - ((2 * ((_DWORD)v88 + (_DWORD)v32)) & 0xA03BF4E);
  LODWORD(v32) = *(_DWORD *)(v11 + 9600) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8664) = (_DWORD)v32
                          + (v30 ^ 0xBF32FA74)
                          - 678042683
                          - ((2 * ((_DWORD)v32 + (v30 ^ 0xBF32FA74))) & 0xAF2BC78A);
  LODWORD(v133) = *(_DWORD *)(v11 + 9208);
  *(_DWORD *)(v11 + 9520) = (v133 ^ 0x9CB26ECC)
                          + (_DWORD)v29
                          + 1
                          + 84008872
                          - ((2 * ((v133 ^ 0x9CB26ECC) + (_DWORD)v29 + 1 + 1)) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 8792);
  *(_DWORD *)(v11 + 9156) = v150 ^ v77;
  *(_DWORD *)(v11 + 9072) = v112 + (v77 ^ 0x501DFA7) + 1528172782 - ((2 * (v112 + (v77 ^ 0x501DFA7))) & 0xB62C21DC);
  *(_DWORD *)(v11 + 8828) = (v155 ^ 0x40CD058B) + v110 + 84008872 - ((2 * ((v155 ^ 0x40CD058B) + v110 + 1)) & 0xA03BF4E);
  LODWORD(v30) = *(_DWORD *)(v11 + 9408) + 1;
  *(_DWORD *)(v11 + 8408) = (_DWORD)v32 + (_DWORD)v30 + 84008871 - ((2 * ((_DWORD)v32 + (_DWORD)v30)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8752) = (v184 ^ v31) + 84008871 - ((2 * (v184 ^ v31)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9296) = v151 + 2 * v196 + 84008871 - ((2 * (v151 + 2 * v196)) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 8672);
  *(_DWORD *)(v11 + 9600) = (v77 ^ 0x501DFA7)
                          - ((_DWORD)v29
                           + 1)
                          + 84008871
                          - ((2 * ((v77 ^ 0x501DFA7) - ((_DWORD)v29 + 1))) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9008) = v184 ^ v110 ^ 0x501DFA7;
  LODWORD(v88) = *(_DWORD *)(v11 + 9376);
  *(_DWORD *)(v11 + 9224) = (v88 ^ 0x501DFA7)
                          + (v133 ^ 0x634D9133)
                          + 84008871
                          - ((2 * ((v88 ^ 0x501DFA7) + (v133 ^ 0x634D9133))) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9152) = (_DWORD)v30
                          + (v77 ^ 0xFAFE2058)
                          + 84008872
                          - ((2 * ((_DWORD)v30 + (v77 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v30) = *(_DWORD *)(v11 + 9056) ^ 0x18B50371;
  v197 = *(_DWORD *)(v11 + 8904);
  *(_DWORD *)(v11 + 9056) = v197 + (_DWORD)v30 - 937747949 - ((2 * (v197 + (_DWORD)v30)) & 0x90363426);
  LODWORD(v150) = *(_DWORD *)(v11 + 9592) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8760) = v126 + v150 - 2102525313 - ((2 * (v126 + v150)) & 0x55C04FE);
  LODWORD(v111) = *(_DWORD *)(v11 + 8776);
  *(_DWORD *)(v11 + 9172) = (v111 ^ 0xFAFE2058)
                          + v126
                          - 1087178123
                          - ((2 * ((v111 ^ 0xFAFE2058) + v126 + 1)) & 0x7E65F4E8);
  LODWORD(v127) = *(_DWORD *)(v11 + 8980) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9408) = v127 ^ v88;
  *(_DWORD *)(v11 + 9640) = v150 + v127 - 318409076 - ((2 * (v150 + v127)) & 0xDA0AED18);
  LODWORD(v88) = *(_DWORD *)(v11 + 9184);
  v198 = *(_DWORD *)(v11 + 9176);
  *(_DWORD *)(v11 + 8744) = v198 - (_DWORD)v88 + 84008871 - ((2 * (v198 - (_DWORD)v88)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9672) = v198 + (_DWORD)v30 + 916127425 - ((2 * (v198 + (_DWORD)v30)) & 0x6D35FD82);
  LODWORD(v126) = v158 + 1;
  v199 = *(_DWORD *)(v11 + 9264);
  *(_DWORD *)(v11 + 8656) = v199 - (v158 + 1) - 1087178124 - ((2 * (v199 - (v158 + 1))) & 0x7E65F4E8);
  *(_DWORD *)(v11 + 8544) = (_DWORD)v88 + v199 - 519103228 - ((2 * ((_DWORD)v88 + v199)) & 0xC21E3A08);
  LODWORD(v77) = *(_DWORD *)(v11 + 8984);
  v200 = *(_DWORD *)(v11 + 8944);
  *(_DWORD *)(v11 + 8932) = (v77 ^ 0x501DFA7)
                          + (v200 ^ 0x501DFA7)
                          - 762037150
                          - ((2 * ((v77 ^ 0x501DFA7) + (v200 ^ 0x501DFA7))) & 0xA52878C4);
  LODWORD(v133) = *(_DWORD *)(v11 + 9288) ^ 0xABAFB802;
  LODWORD(v149) = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 9064) = (v149 ^ 0x501DFA7) + v133 + 84008871 - ((2 * ((v149 ^ 0x501DFA7) + v133)) & 0xA03BF4E);
  LODWORD(v158) = *(_DWORD *)(v11 + 9104) + 1;
  v201 = *(_DWORD *)(v11 + 8968) ^ 0xE10F1D04;
  *(_DWORD *)(v11 + 9264) = v158 + v201 + 84008871 - ((2 * (v158 + v201)) & 0xA03BF4E);
  v202 = *(_DWORD *)(v11 + 8728) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9416) = (v149 ^ 0xFAFE2058) + v202 + 84008872 - ((2 * ((v149 ^ 0xFAFE2058) + v202 + 1)) & 0xA03BF4E);
  LODWORD(v127) = *(_DWORD *)(v11 + 9576) + 1;
  LODWORD(v30) = *(_DWORD *)(v11 + 8328);
  *(_DWORD *)(v11 + 9208) = v127
                          + (v30 ^ 0x501DFA7)
                          + 84008871
                          - ((2 * (v127 + (v30 ^ 0x501DFA7))) & 0xA03BF4E);
  LODWORD(v110) = *(_DWORD *)(v11 + 9116);
  *(_DWORD *)(v11 + 9036) = v197 + v110 + 84008871 - ((2 * (v197 + v110)) & 0xA03BF4E);
  LODWORD(v149) = *(_DWORD *)(v11 + 9616) + 1;
  v203 = *(_DWORD *)(v11 + 9584) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9376) = v203 - v149 + 84008871 - ((2 * (v203 - v149)) & 0xA03BF4E);
  LODWORD(v150) = *(_DWORD *)(v11 + 8520) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8880) = v150 + v158 - 1087178124 - ((2 * (v150 + v158)) & 0x7E65F4E8);
  LODWORD(v158) = *(_DWORD *)(v11 + 9384) ^ 0x501DFA7;
  LODWORD(v151) = *(_DWORD *)(v11 + 9120) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9080) = v151 + v158 + 84008871 - ((2 * (v151 + v158)) & 0xA03BF4E);
  LODWORD(v112) = *(_DWORD *)(v11 + 9512) + 1;
  v204 = *(_DWORD *)(v11 + 8628);
  *(_DWORD *)(v11 + 8904) = v204 ^ 0xD2943C62 ^ v112;
  LODWORD(v88) = *(_DWORD *)(v11 + 9392);
  *(_DWORD *)(v11 + 8728) = v112 ^ v88;
  LODWORD(v112) = v88 ^ 0xFAFE2058;
  LODWORD(v88) = *(_DWORD *)(v11 + 9432);
  *(_DWORD *)(v11 + 9240) = (v88 ^ 0x18B50371)
                          + v112
                          + 1716276885
                          - ((2 * ((v88 ^ 0x18B50371) + v112 + 1)) & 0xCC989D28);
  LODWORD(v112) = *(_DWORD *)(v11 + 8800);
  *(_DWORD *)(v11 + 9616) = v111 ^ v112;
  LODWORD(v111) = *(_DWORD *)(v11 + 9040);
  *(_DWORD *)(v11 + 9120) = v112 ^ v111;
  *(_DWORD *)(v11 + 9512) = v111 ^ 0xC81B1A13 ^ v110;
  LODWORD(v110) = *(_DWORD *)(v11 + 9608) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8520) = v110 ^ v88;
  *(_DWORD *)(v11 + 9576) = v110 ^ v126;
  LODWORD(v88) = *(_DWORD *)(v11 + 8992);
  *(_DWORD *)(v11 + 9608) = v158
                          + (v88 ^ 0x286A1C3A)
                          - 937747948
                          - ((2 * (v158 + (v88 ^ 0x286A1C3A) + 1)) & 0x90363426);
  *(_DWORD *)(v11 + 9104) = v151 ^ v77;
  LODWORD(v126) = *(_DWORD *)(v11 + 8532) ^ 0x501DFA7;
  LODWORD(v151) = *(_DWORD *)(v11 + 8840);
  *(_DWORD *)(v11 + 8864) = v151 + v126 + 84008871 - ((2 * (v151 + v126)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9496) = (v204 ^ 0xD795E3C5) + v203 + 84008871 - ((2 * ((v204 ^ 0xD795E3C5) + v203)) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 9272);
  *(_DWORD *)(v11 + 8712) = (v88 ^ 0xD795E3C5)
                          + v77
                          + 84008871
                          - ((2 * ((v88 ^ 0xD795E3C5) + v77)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9184) = ((v202 + v77) ^ 0x5BBDCBFF) - 1083526 + ((2 * (v202 + v77)) & 0xB77B97FE);
  LODWORD(v110) = *(_DWORD *)(v11 + 8920);
  LODWORD(v112) = *(_DWORD *)(v11 + 8832);
  *(_DWORD *)(v11 + 8968) = v110 - v112 - 519103228 - ((2 * (v110 - v112)) & 0xC21E3A08);
  v205 = *(_DWORD *)(v11 + 9552) + 1;
  *(_DWORD *)(v11 + 9116) = v149 ^ 0x501DFA7 ^ v205;
  *(_DWORD *)(v11 + 9176) = (v200 ^ 0xFAFE2058) + v205 + 84008872 - ((2 * ((v200 ^ 0xFAFE2058) + v205 + 1)) & 0xA03BF4E);
  v206 = *(_DWORD *)(v11 + 9544) ^ 0x501DFA7;
  LODWORD(v149) = *(_DWORD *)(v11 + 8464) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9272) = v149 + v206 + 84008871 - ((2 * (v149 + v206)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9592) = v201 ^ v30;
  *(_DWORD *)(v11 + 9384) = v133 - v127 + 84008871 - ((2 * (v133 - v127)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9288) = v126 + v150 - 1414547454 - ((2 * (v126 + v150)) & 0x575F7004);
  v207 = *(_DWORD *)(v11 + 9024);
  LODWORD(v30) = v206 ^ v207;
  v208 = *(_DWORD *)(v11 + 8900);
  *(_DWORD *)(v11 + 9568) = (_DWORD)v30;
  LODWORD(v88) = *(_DWORD *)(v11 + 8548);
  *(_DWORD *)(v11 + 8672) = (v207 ^ 0xFAFE2058)
                          + (v88 ^ 0x501DFA7)
                          - 1087178123
                          - ((2 * ((v207 ^ 0xFAFE2058) + (v88 ^ 0x501DFA7) + 1)) & 0x7E65F4E8);
  v209 = *(_DWORD *)(v11 + 9004) ^ 0x501DFA7;
  LODWORD(v77) = *(_DWORD *)(v11 + 9680);
  *(_DWORD *)(v11 + 9544) = v77 + v209 + 84008871 - ((2 * (v77 + v209)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9192) = v149 - v77 - 678042683 - ((2 * (v149 - v77)) & 0xAF2BC78A);
  LODWORD(v127) = *(_DWORD *)(v11 + 9256);
  *(_DWORD *)(v11 + 9552) = v127 ^ 0xCD1AC5B4 ^ v88;
  LODWORD(v30) = *(_DWORD *)(v11 + 8848) + 1;
  LODWORD(v155) = *(_DWORD *)(v11 + 8472);
  *(_DWORD *)(v11 + 8440) = (_DWORD)v30
                          + (v155 ^ 0x501DFA7)
                          + 1716276884
                          - ((2 * ((_DWORD)v30 + (v155 ^ 0x501DFA7))) & 0xCC989D28);
  LODWORD(v77) = v155 ^ 0xFAFE2058;
  LODWORD(v155) = *(_DWORD *)(v11 + 8456);
  *(_DWORD *)(v11 + 9040) = v77 + (v155 ^ 0x501DFA7) + 84008872 - ((2 * (v77 + (v155 ^ 0x501DFA7) + 1)) & 0xA03BF4E);
  LODWORD(v88) = *(_DWORD *)(v11 + 8680);
  *(_DWORD *)(v11 + 9424) = v155 ^ 0x533BDC8A ^ v88;
  *(_DWORD *)(v11 + 8944) = v209
                          + (v88 ^ 0xACC42375)
                          + 84008872
                          - ((2 * (v209 + (v88 ^ 0xACC42375) + 1)) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 9656);
  *(_DWORD *)(v11 + 9680) = v151 ^ v77;
  *(_DWORD *)(v11 + 9440) = v110 + (v77 ^ 0x501DFA7) - 2102525313 - ((2 * (v110 + (v77 ^ 0x501DFA7))) & 0x55C04FE);
  LODWORD(v88) = *(_DWORD *)(v11 + 9480);
  *(_DWORD *)(v11 + 9004) = v127 ^ 0x72283FC0 ^ v88;
  LODWORD(v77) = *(_DWORD *)(v11 + 9448);
  *(_DWORD *)(v11 + 9256) = v88 ^ v77;
  *(_DWORD *)(v11 + 9448) = v112 ^ v77;
  v210 = *(_DWORD *)(v11 + 9736) + 1;
  LODWORD(v77) = *(_DWORD *)(v11 + 8784) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8552) = v77 + v210 + 84008871 - ((2 * (v77 + v210)) & 0xA03BF4E);
  LODWORD(v155) = *(_DWORD *)(v11 + 9136) ^ *(_DWORD *)(v11 + 9052) ^ 0xCD1AC5B4;
  LODWORD(v150) = *(_DWORD *)(v11 + 8576) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9480) = v150 + v210 + 84008871 - ((2 * (v150 + v210)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9052) = v77
                          + (*(_DWORD *)(v11 + 9536) ^ 0x501DFA7)
                          + 84008871
                          - ((2 * (v77 + (*(_DWORD *)(v11 + 9536) ^ 0x501DFA7))) & 0xA03BF4E);
  v211 = *(_DWORD *)(v11 + 8344);
  *(_DWORD *)(v11 + 9584) = v30 ^ v211;
  LODWORD(v77) = *(_DWORD *)(v11 + 9528);
  *(_DWORD *)(v11 + 8608) = v77 + (v211 ^ 0x501DFA7) - 519103228 - ((2 * (v77 + (v211 ^ 0x501DFA7))) & 0xC21E3A08);
  LODWORD(v88) = *(_DWORD *)(v11 + 9456);
  *(_DWORD *)(v11 + 8504) = (_DWORD)v88 + v150 + 84008871 - ((2 * ((_DWORD)v88 + v150)) & 0xA03BF4E);
  LODWORD(v127) = *(_DWORD *)(v11 + 9200) ^ 0xF0698104;
  *(_DWORD *)(v11 + 9456) = *(_DWORD *)(v11 + 9320) ^ 0xEE8BCC72;
  *(_DWORD *)(v11 + 9024) = *(_DWORD *)(v11 + 8952) ^ 0x389D27AC;
  *(_DWORD *)(v11 + 8628) = v155 ^ *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 9392) = *(_DWORD *)(v11 + 9156);
  LODWORD(v158) = *(_DWORD *)(v11 + 9560);
  v212 = *(_DWORD *)(v11 + 8860);
  v213 = *(_DWORD *)(v11 + 9096);
  *(_DWORD *)(v11 + 8920) = (_DWORD)v88 + v77 + 84008871 - ((2 * ((_DWORD)v88 + v77)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8900) = v208;
  LODWORD(v150) = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 8860) = v150 ^ 0xE40EC2A3 ^ *(_DWORD *)(v11 + 9536);
  v214 = 75 * (v208 ^ 0x853D101C);
  v215 = *(_DWORD *)(v11 + 8936);
  *(_DWORD *)(v11 + 8308) = v214;
  LODWORD(v77) = *(_DWORD *)(v11 + 9664);
  LODWORD(v88) = (v214 ^ v215 ^ 0x501DC9E) + (v77 ^ 0x1EF0E2FB);
  v216 = *(_DWORD *)(v11 + 8572);
  *(_DWORD *)(v11 + 9536) = (v127 ^ 0xF0698104)
                          + (v216 ^ 0x2BD574B7)
                          + 84008872
                          - ((2 * ((v127 ^ 0xF0698104) + (v216 ^ 0x2BD574B7) + 1)) & 0xA03BF4E);
  LODWORD(v155) = *(_DWORD *)(v11 + 9160);
  *(_DWORD *)(v11 + 9560) = (v127 ^ 0xF967EFB) + (v155 ^ 0xBF32FA74);
  v217 = *(_DWORD *)(v11 + 9328);
  v218 = v217 ^ v155;
  *(_DWORD *)(v11 + 8488) = v217 ^ v155;
  LODWORD(v30) = *(_DWORD *)(v11 + 8696);
  *(_DWORD *)(v11 + 8984) = v77 ^ v30;
  LODWORD(v29) = (v217 ^ 0xFAFE2058) + (v30 ^ 0x664C4E94);
  LODWORD(v151) = (v150 ^ 0xE10F1D04) + (v158 ^ 0xF84D176);
  LODWORD(v155) = *(_DWORD *)(v11 + 9400);
  v219 = *(_DWORD *)(v11 + 8748);
  *(_DWORD *)(v11 + 9320) = (v219 ^ 0xFAFE2058) + (v155 ^ 0x501DFA7);
  LODWORD(v32) = *(_DWORD *)(v11 + 8496);
  LODWORD(v110) = *(_DWORD *)(v11 + 8912);
  *(_DWORD *)(v11 + 8776) = *(_DWORD *)(v11 + 9592);
  *(_DWORD *)(v11 + 9592) = (v32 ^ 0x501DFA7)
                          + (v110 ^ 0xFAFE2058)
                          + 84008872
                          - ((2 * ((v32 ^ 0x501DFA7) + (v110 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v150) = *(_DWORD *)(v11 + 8432) ^ 0x501DFA7;
  LODWORD(v30) = *(_DWORD *)(v11 + 8688);
  *(_DWORD *)(v11 + 9736) = v150
                          + (v30 ^ 0x501DFA7)
                          + 84008871
                          - ((2 * (v150 + (v30 ^ 0x501DFA7))) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8816) = (v219 ^ 0x501DFA7)
                          + (v30 ^ 0xFAFE2058)
                          + 84008872
                          - ((2 * ((v219 ^ 0x501DFA7) + (v30 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v77) = v216 ^ 0xD42A8B48;
  v220 = *(_DWORD *)(v11 + 8872);
  *(_DWORD *)(v11 + 8840) = v77 + (v220 ^ 0xFAFE2058);
  *(_DWORD *)(v11 + 8784) = v155 ^ 0xCD1AC5B4 ^ v213;
  v221 = v212;
  v222 = *(_DWORD *)(v11 + 9504);
  *(_DWORD *)(v11 + 9160) = (v213 ^ 0xC81B1A13) + (v222 ^ 0x501DFA7);
  v223 = *(_DWORD *)(v11 + 9472);
  LODWORD(v111) = *(_DWORD *)(v11 + 8764);
  *(_DWORD *)(v11 + 9136) = (v223 ^ 0x87AFDDD8)
                          + (v111 ^ 0xFAFE2058)
                          - 735409335
                          - ((2 * ((v223 ^ 0x87AFDDD8) + (v111 ^ 0xFAFE2058) + 1)) & 0xA8551690);
  LODWORD(v127) = *(_DWORD *)(v11 + 8632) ^ 0x501DFA7;
  LODWORD(v30) = *(_DWORD *)(v11 + 8964);
  *(_DWORD *)(v11 + 8980) = v127 + (v30 ^ 0xFAFE2058);
  LODWORD(v31) = *(_DWORD *)(v11 + 8612);
  *(_DWORD *)(v11 + 9200) = (v31 ^ 0x501DFA7) + v127;
  LODWORD(v32) = v220 ^ v32;
  LODWORD(v112) = *(_DWORD *)(v11 + 8424);
  v224 = (v112 ^ 0x501DFA7) + (v221 ^ 0x501DFA7);
  LODWORD(v77) = *(_DWORD *)(v11 + 9456);
  LODWORD(v149) = (v221 ^ 0x501DFA7) + (v77 ^ 0xF57AF12E);
  LODWORD(v155) = *(_DWORD *)(v11 + 8704);
  *(_DWORD *)(v11 + 8800) = v158 ^ 0xA850ED1 ^ v155;
  *(_DWORD *)(v11 + 8748) = v155 ^ v215;
  LODWORD(v158) = *(_DWORD *)(v11 + 8616);
  LODWORD(v155) = *(_DWORD *)(v11 + 8808);
  v225 = (v155 ^ 0x82AE027F) + (v158 ^ 0x501DFA7);
  v226 = (v155 ^ 0x7D51FD80) + v150 + 84008872 - ((2 * ((v155 ^ 0x7D51FD80) + v150 + 1)) & 0xA03BF4E);
  LODWORD(v155) = *(_DWORD *)(v11 + 9696);
  *(_DWORD *)(v11 + 9400) = (v155 ^ 0x501DFA7)
                          + (v77 ^ 0xA850ED1)
                          + 1716276884
                          - ((2 * ((v155 ^ 0x501DFA7) + (v77 ^ 0xA850ED1))) & 0xCC989D28);
  LODWORD(v150) = (*(_DWORD *)(v11 + 8932) ^ 0xD2943C62) + (*(_DWORD *)(v11 + 9056) ^ 0x37E4E5EC) + 1;
  *(_DWORD *)(v11 + 8360) = v150 + 84008871 - ((2 * v150) & 0xA03BF4E);
  LODWORD(v31) = v111 ^ v31;
  *(_DWORD *)(v11 + 8932) = v223 ^ 0x82AE027F ^ v155;
  LODWORD(v150) = *(_DWORD *)(v11 + 9016);
  LODWORD(v127) = v150 ^ v112;
  LODWORD(v155) = *(_DWORD *)(v11 + 9464);
  *(_DWORD *)(v11 + 8912) = v150 ^ v155;
  LODWORD(v77) = v158 ^ v155;
  LODWORD(v88) = (_DWORD)v88 + 1;
  LODWORD(v158) = *(_DWORD *)(v11 + 9312) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9472) = (_DWORD)v88 + v158 + 84008871 - ((2 * ((_DWORD)v88 + v158)) & 0xA03BF4E);
  LODWORD(v112) = *(_DWORD *)(v11 + 9384) ^ 0x501DFA7;
  LODWORD(v150) = *(_DWORD *)(v11 + 8868);
  *(_DWORD *)(v11 + 9656) = v112 + (v150 ^ 0xFAFE2058) + 84008872 - ((2 * (v112 + (v150 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v126) = *(_DWORD *)(v11 + 8628) ^ 0xCD1AC5B4 ^ v150;
  *(_DWORD *)(v11 + 8872) = v126;
  *(_DWORD *)(v11 + 8648) = v224 ^ v150;
  *(_DWORD *)(v11 + 8992) = v224 - (_DWORD)v88 - 678042683 - ((2 * (v224 - (_DWORD)v88)) & 0xAF2BC78A);
  LODWORD(v155) = *(_DWORD *)(v11 + 8720);
  *(_DWORD *)(v11 + 8032) = v151;
  *(_DWORD *)(v11 + 9504) = v151 + (v155 ^ 0xFAFE2058) + 84008872 - ((2 * (v151 + (v155 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v111) = *(_DWORD *)(v11 + 9600);
  *(_DWORD *)(v11 + 9156) = v158 + (v111 ^ 0xFAFE2058) + 84008872 - ((2 * (v158 + (v111 ^ 0xFAFE2058) + 1)) & 0xA03BF4E);
  LODWORD(v88) = *(_DWORD *)(v11 + 9640) ^ 0xED05768C;
  *(_DWORD *)(v11 + 9664) = (_DWORD)v88
                          + (*(_DWORD *)(v11 + 9512) ^ 0xCD1AC5B4)
                          - 519103228
                          - ((2 * ((_DWORD)v88 + (*(_DWORD *)(v11 + 9512) ^ 0xCD1AC5B4))) & 0xC21E3A08);
  *(_DWORD *)(v11 + 9096) = (_DWORD)v88 - (_DWORD)v32 - 937747949 - ((2 * ((_DWORD)v88 - (_DWORD)v32)) & 0x90363426);
  LODWORD(v88) = *(_DWORD *)(v11 + 8664);
  *(_DWORD *)(v11 + 8632) = v88 ^ v155;
  *(_DWORD *)(v11 + 8640) = (v88 ^ 0xD795E3C5)
                          + v112
                          - 1087178124
                          - ((2 * ((v88 ^ 0xD795E3C5) + v112)) & 0x7E65F4E8);
  LODWORD(v88) = *(_DWORD *)(v11 + 9072);
  *(_DWORD *)(v11 + 8704) = v32 ^ v88;
  LODWORD(v88) = (*(_DWORD *)(v11 + 9192) ^ 0xD795E3C5) + (v88 ^ 0x5B1610EE);
  *(_DWORD *)(v11 + 9432) = (_DWORD)v88 + 414516081 - ((2 * (_DWORD)v88) & 0x316A06E2);
  LODWORD(v155) = *(_DWORD *)(v11 + 9080) ^ 0x501DFA7;
  v227 = *(_DWORD *)(v11 + 9024) ^ 0xBF32FA74;
  *(_DWORD *)(v11 + 8432) = v155;
  *(_DWORD *)(v11 + 8532) = v155 + v227 + 84008871 - ((2 * (v155 + v227)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8848) = (_DWORD)v31 + v149 + 1 + 84008871 - ((2 * ((_DWORD)v31 + v149 + 1)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8548) = v126 - (v149 + 1) + 84008871 - ((2 * (v126 - (v149 + 1))) & 0xA03BF4E);
  v228 = (*(_DWORD *)(v11 + 9408) ^ 0x501DFA7) + (*(_DWORD *)(v11 + 9120) ^ 0x286A1C3A) + 1;
  *(_DWORD *)(v11 + 9528) = v228 + 84008871 - ((2 * v228) & 0xA03BF4E);
  LODWORD(v112) = *(_DWORD *)(v11 + 8904);
  LODWORD(v88) = *(_DWORD *)(v11 + 8672);
  *(_DWORD *)(v11 + 9080) = (v88 ^ 0x40CD058B)
                          + (v112 ^ 0x501DFA7)
                          - 519103227
                          - ((2 * ((v88 ^ 0x40CD058B) + (v112 ^ 0x501DFA7) + 1)) & 0xC21E3A08);
  LODWORD(v155) = *(_DWORD *)(v11 + 8520);
  *(_DWORD *)(v11 + 9640) = (_DWORD)v29 + 1;
  *(_DWORD *)(v11 + 9072) = ((_DWORD)v29 + 1) ^ v111;
  *(_DWORD *)(v11 + 9600) = (v155 ^ 0xE24B2329)
                          + (v218 ^ 0xBA3325D3)
                          + 84008872
                          - ((2 * ((v155 ^ 0xE24B2329) + (v218 ^ 0xBA3325D3) + 1)) & 0xA03BF4E);
  v229 = (v222 ^ 0xFAFE2058) + (v110 ^ 0x501DFA7) + 1;
  LODWORD(v111) = *(_DWORD *)(v11 + 9688);
  *(_DWORD *)(v11 + 9456) = (v111 ^ 0x501DFA7) - v229 + 176492241 - ((2 * ((v111 ^ 0x501DFA7) - v229)) & 0x150A1DA2);
  LODWORD(v110) = *(_DWORD *)(v11 + 9176);
  v230 = (v110 ^ 0x501DFA7) + (v112 ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v11 + 8020) = v230;
  *(_DWORD *)(v11 + 8664) = (v110 ^ 0x501DFA7) + (v112 ^ 0xFAFE2058) + 1528172783 - ((2 * v230) & 0xB62C21DC);
  LODWORD(v149) = v88 ^ 0xBF32FA74;
  LODWORD(v88) = *(_DWORD *)(v11 + 8544);
  v231 = (v88 ^ 0x1EF0E2FB) + v149;
  LODWORD(v149) = *(_DWORD *)(v11 + 9576);
  *(_DWORD *)(v11 + 9464) = v149 ^ v111;
  *(_DWORD *)(v11 + 8616) = v149 ^ v155;
  v232 = *(_DWORD *)(v11 + 9104);
  *(_DWORD *)(v11 + 8520) = v31 ^ v232;
  LODWORD(v149) = v232 ^ 0x501DFA7;
  v233 = *(_DWORD *)(v11 + 8968) ^ 0xE10F1D04;
  *(_DWORD *)(v11 + 8424) = v233;
  *(_DWORD *)(v11 + 8672) = v149 + v233 + 84008871 - ((2 * (v149 + v233)) & 0xA03BF4E);
  LODWORD(v158) = *(_DWORD *)(v11 + 9632);
  *(_DWORD *)(v11 + 8628) = (v158 ^ 0x1EF0E2FB)
                          + v229
                          - 678042682
                          - ((2 * ((v158 ^ 0x1EF0E2FB) + v229 + 1)) & 0xAF2BC78A);
  v234 = *(_DWORD *)(v11 + 8864);
  *(_DWORD *)(v11 + 8688) = v110 ^ v234;
  *(_DWORD *)(v11 + 9576) = (v158 ^ 0xE10F1D04)
                          + (v234 ^ 0x501DFA7)
                          + 84008871
                          - ((2 * ((v158 ^ 0xE10F1D04) + (v234 ^ 0x501DFA7))) & 0xA03BF4E);
  LODWORD(v155) = *(_DWORD *)(v11 + 8752);
  *(_DWORD *)(v11 + 8952) = (v155 ^ 0xFAFE2058)
                          + (v30 ^ 0x501DFA7)
                          + 84008872
                          - ((2 * ((v155 ^ 0xFAFE2058) + (v30 ^ 0x501DFA7) + 1)) & 0xA03BF4E);
  v235 = *(_DWORD *)(v11 + 9256) ^ 0x501DFA7;
  LODWORD(v150) = v235
                + (*(_DWORD *)(v11 + 9568) ^ 0x501DFA7)
                + 84008871
                - ((2 * (v235 + (*(_DWORD *)(v11 + 9568) ^ 0x501DFA7))) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8936) = v88 ^ v30;
  LODWORD(v30) = *(_DWORD *)(v11 + 9264);
  *(_DWORD *)(v11 + 9328) = v30 ^ v155;
  LODWORD(v149) = (v30 ^ 0x501DFA7) + (*(_DWORD *)(v11 + 9480) ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v11 + 9696) = v149 + 84008871 - ((2 * v149) & 0xA03BF4E);
  LODWORD(v149) = *(_DWORD *)(v11 + 9488) ^ 0x6C3072FE;
  LODWORD(v158) = (*(_DWORD *)(v11 + 9012) ^ 0x99B3B16B) + v149 + 1;
  *(_DWORD *)(v11 + 8752) = v158 + 84008871 - ((2 * v158) & 0xA03BF4E);
  v236 = *(_DWORD *)(v11 + 9720);
  *(_DWORD *)(v11 + 9256) = v235 + (v236 ^ 0xC81B1A13) + 84008871 - ((2 * (v235 + (v236 ^ 0xC81B1A13))) & 0xA03BF4E);
  v237 = *(_DWORD *)(v11 + 9272) ^ 0x501DFA7;
  LODWORD(v151) = *(_DWORD *)(v11 + 8920);
  *(_DWORD *)(v11 + 9688) = (v151 ^ 0x501DFA7) + v237 + 84008871 - ((2 * ((v151 ^ 0x501DFA7) + v237)) & 0xA03BF4E);
  LODWORD(v158) = *(_DWORD *)(v11 + 9036) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8696) = v77;
  *(_DWORD *)(v11 + 9036) = v158 + v77 + 1716276884 - ((2 * (v158 + v77)) & 0xCC989D28);
  LODWORD(v31) = *(_DWORD *)(v11 + 9544);
  *(_DWORD *)(v11 + 8720) = v149
                          + (v31 ^ 0x501DFA7)
                          - 937747949
                          - ((2 * (v149 + (v31 ^ 0x501DFA7))) & 0x90363426);
  v238 = v237 + (*(_DWORD *)(v11 + 9248) ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v11 + 9312) = v238 + 84008871 - ((2 * v238) & 0xA03BF4E);
  v239 = (v236 ^ 0x37E4E5EC) + (*(_DWORD *)(v11 + 9148) ^ 0x501DFA7) + 1;
  *(_DWORD *)(v11 + 9104) = v239 + 84008871 - ((2 * v239) & 0xA03BF4E);
  v240 = *(_DWORD *)(v11 + 9052);
  *(_DWORD *)(v11 + 8832) = v158 + (v240 ^ 0x501DFA7) + 84008871 - ((2 * (v158 + (v240 ^ 0x501DFA7))) & 0xA03BF4E);
  LODWORD(v158) = *(_DWORD *)(v11 + 8552);
  LODWORD(v155) = *(_DWORD *)(v11 + 8744);
  *(_DWORD *)(v11 + 8680) = (v155 ^ 0xFAFE2058)
                          + (v158 ^ 0x501DFA7)
                          + 1396432011
                          - ((2 * ((v155 ^ 0xFAFE2058) + (v158 ^ 0x501DFA7) + 1)) & 0xA677B914);
  LODWORD(v88) = *(_DWORD *)(v11 + 8728);
  v241 = (*(_DWORD *)(v11 + 9280) ^ 0xE10F1D04) + (v88 ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v11 + 9176) = v241 + 84008871 - ((2 * v241) & 0xA03BF4E);
  LODWORD(v30) = *(_DWORD *)(v11 + 9288);
  v242 = (*(_DWORD *)(v11 + 9064) ^ 0x501DFA7) + (v30 ^ 0xABAFB802);
  *(_DWORD *)(v11 + 9384) = v242 + 84008871 - ((2 * v242) & 0xA03BF4E);
  v243 = *(_DWORD *)(v11 + 8984) ^ 0x87435390;
  *(_DWORD *)(v11 + 8984) = *(_DWORD *)(v11 + 9184)
                          - 1538081657
                          - v243
                          + 84008871
                          - ((2 * (*(_DWORD *)(v11 + 9184) - 1538081657 - v243)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8464) = v243
                          - *(_DWORD *)(v11 + 9160)
                          + 84008871
                          - ((2 * (v243 - *(_DWORD *)(v11 + 9160))) & 0xA03BF4E);
  v244 = v88 ^ 0x501DFA7;
  LODWORD(v88) = *(_DWORD *)(v11 + 8800);
  *(_DWORD *)(v11 + 8728) = v244 - (_DWORD)v88 + 84008871 - ((2 * (v244 - (_DWORD)v88)) & 0xA03BF4E);
  v245 = (*(_DWORD *)(v11 + 9608) ^ 0x37E4E5EC) + (_DWORD)v88 + 1;
  *(_DWORD *)(v11 + 9720) = v245 - 937747949 - ((2 * v245) & 0x90363426);
  v246 = *(_DWORD *)(v11 + 9392);
  *(_DWORD *)(v11 + 8800) = v246 ^ v30;
  *(_DWORD *)(v11 + 8792) = (v246 ^ 0x501DFA7)
                          + (v155 ^ 0x501DFA7)
                          + 84008871
                          - ((2 * ((v246 ^ 0x501DFA7) + (v155 ^ 0x501DFA7))) & 0xA03BF4E);
  v247 = *(_DWORD *)(v11 + 8376) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8576) = v127 + v247 + 84008871 - ((2 * (v127 + v247)) & 0xA03BF4E);
  v248 = *(_DWORD *)(v11 + 8980) + 1;
  *(_DWORD *)(v11 + 8904) = v248;
  LODWORD(v155) = *(_DWORD *)(v11 + 8760);
  *(_DWORD *)(v11 + 8980) = (v155 ^ 0x7D51FD80) + v248 + 84008872 - ((2 * ((v155 ^ 0x7D51FD80) + v248 + 1)) & 0xA03BF4E);
  LODWORD(v30) = *(_DWORD *)(v11 + 8736);
  LODWORD(v126) = (v30 ^ 0x501DFA7) + (*(_DWORD *)(v11 + 9616) ^ 0xD795E3C5);
  *(_DWORD *)(v11 + 8744) = v126 + 84008871 - ((2 * v126) & 0xA03BF4E);
  LODWORD(v77) = *(_DWORD *)(v11 + 9680);
  *(_DWORD *)(v11 + 9488) = v30 ^ v77;
  LODWORD(v88) = (v77 ^ 0x501DFA7) + v247;
  v249 = (*(_DWORD *)(v11 + 9304) ^ 0x501DFA7) + (v158 ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v11 + 8472) = v249 + 84008871 - ((2 * v249) & 0xA03BF4E);
  v250 = v231 + 1 - ((2 * (v231 + 1) + 161926996) & 0xA03BF4E);
  LODWORD(v126) = *(_DWORD *)(v11 + 9240) ^ 0x664C4E94;
  LODWORD(v149) = *(_DWORD *)(v11 + 9360) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9632) = v126 + v149 - 519103228 - ((2 * (v126 + v149)) & 0xC21E3A08);
  LODWORD(v77) = *(_DWORD *)(v11 + 9536);
  *(_DWORD *)(v11 + 9288) = (v77 ^ 0x501DFA7)
                          + (v226 ^ 0xFAFE2058)
                          - 1414547453
                          - ((2 * ((v77 ^ 0x501DFA7) + (v226 ^ 0xFAFE2058) + 1)) & 0x575F7004);
  LODWORD(v30) = *(_DWORD *)(v11 + 9040);
  LODWORD(v112) = (v30 ^ 0xFAFE2058) + (*(_DWORD *)(v11 + 9128) ^ 0x501DFA7) + 1;
  *(_DWORD *)(v11 + 8864) = v112 + 84008871 - ((2 * v112) & 0xA03BF4E);
  LODWORD(v29) = *(_DWORD *)(v11 + 9376);
  v251 = *(_DWORD *)(v11 + 9172);
  *(_DWORD *)(v11 + 9376) = v77 ^ v251 ^ 0xBF32FA74;
  v252 = *(_DWORD *)(v11 + 8748);
  *(_DWORD *)(v11 + 8868) = v252
                          + (v30 ^ 0x501DFA7)
                          + 84008871
                          - ((2 * (v252 + (v30 ^ 0x501DFA7))) & 0xA03BF4E);
  v253 = *(_DWORD *)(v11 + 8712);
  *(_DWORD *)(v11 + 8456) = (v253 ^ 0x501DFA7) + v126 + 84008871 - ((2 * ((v253 ^ 0x501DFA7) + v126)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9240) = ((v250 + 164972369) ^ 0x501DFA7)
                          - ((2 * ((v250 + 164972369) ^ 0x501DFA7) + 106508460) & 0xA03BF4E);
  v254 = *(_DWORD *)(v11 + 9116) ^ 0x501DFA7;
  LODWORD(v112) = *(_DWORD *)(v11 + 9584) ^ 0x501DFA7;
  v255 = v112 + v254 + 84008871 - ((2 * (v112 + v254)) & 0xA03BF4E);
  *(_DWORD *)(v11 + 9264) = v127 + v149 - 1087178124 - ((2 * (v127 + v149)) & 0x7E65F4E8);
  LODWORD(v149) = *(_DWORD *)(v11 + 8656) ^ 0xBF32FA74;
  *(_DWORD *)(v11 + 8512) = v149 + v254 - 2102525313 - ((2 * (v149 + v254)) & 0x55C04FE);
  LODWORD(v30) = *(_DWORD *)(v11 + 9224);
  *(_DWORD *)(v11 + 9680) = v149
                          + (v30 ^ 0x501DFA7)
                          + 84008871
                          - ((2 * (v149 + (v30 ^ 0x501DFA7))) & 0xA03BF4E);
  LODWORD(v126) = *(_DWORD *)(v11 + 9136);
  v256 = *(_DWORD *)(v11 + 8440);
  *(_DWORD *)(v11 + 8736) = (v126 ^ 0xD42A8B48)
                          + (v256 ^ 0x664C4E94)
                          - 519103228
                          - ((2 * ((v126 ^ 0xD42A8B48) + (v256 ^ 0x664C4E94))) & 0xC21E3A08);
  *(_DWORD *)(v11 + 8328) = v226;
  *(_DWORD *)(v11 + 9116) = (v30 ^ 0xFAFE2058)
                          + (v226 ^ 0x501DFA7)
                          - 937747948
                          - ((2 * ((v30 ^ 0xFAFE2058) + (v226 ^ 0x501DFA7) + 1)) & 0x90363426);
  *(_DWORD *)(v11 + 9016) = v251 ^ v252;
  v257 = ((v225 - ((2 * v225 + 130999144) & 0xA03BF4E) + 1357467995) ^ 0x501DFA7) - 1273459124;
  LODWORD(v30) = *(_DWORD *)(v11 + 9152);
  *(_DWORD *)(v11 + 8656) = v126 ^ v30;
  *(_DWORD *)(v11 + 8368) = v257;
  v258 = (v30 ^ 0x501DFA7) - v257;
  *(_DWORD *)(v11 + 9136) = v258 + 1716276884 - ((2 * v258) & 0xCC989D28);
  *(_DWORD *)(v11 + 8808) = (_DWORD)v88 - ((2 * (_DWORD)v88 + 142173722) & 0x1F09A2EC);
  *(_DWORD *)(v11 + 9536) = v112
                          + *(_DWORD *)(v11 + 9200)
                          + 84008871
                          - ((2 * (v112 + *(_DWORD *)(v11 + 9200))) & 0xA03BF4E);
  LODWORD(v88) = *(_DWORD *)(v11 + 8776);
  *(_DWORD *)(v11 + 8760) = v88 ^ v155;
  *(_DWORD *)(v11 + 8776) = (*(_DWORD *)(v11 + 9736) ^ v88)
                          - ((2 * (*(_DWORD *)(v11 + 9736) ^ v88) - 1703556556) & 0xA8551690);
  LODWORD(v30) = *(_DWORD *)(v11 + 9416);
  LODWORD(v149) = (v30 ^ 0x501DFA7) + (*(_DWORD *)(v11 + 9400) ^ 0x664C4E94);
  *(_DWORD *)(v11 + 9272) = v149 + 84008871 - ((2 * v149) & 0xA03BF4E);
  *(_DWORD *)(v11 + 8312) = v150;
  LODWORD(v126) = (v150 ^ 0x501DFA7) - ((2 * (v150 ^ 0x501DFA7) - 104782862) & 0x9A358B68);
  LODWORD(v149) = *(_DWORD *)(v11 + 9592) ^ 0x501DFA7;
  LODWORD(v77) = *(_DWORD *)(v11 + 9368) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8376) = v77;
  *(_DWORD *)(v11 + 8968) = v149 + v77 - 519103228 - ((2 * (v149 + v77)) & 0xC21E3A08);
  LODWORD(v155) = *(_DWORD *)(v11 + 8608);
  *(_DWORD *)(v11 + 8764) = (*(_DWORD *)(v11 + 9120) ^ 0x369AFEC1 ^ v155)
                          - ((2 * (*(_DWORD *)(v11 + 9120) ^ 0x369AFEC1 ^ v155) + 230727938) & 0xA03BF4E);
  LODWORD(v111) = (*(_DWORD *)(v11 + 9472) ^ 0x501DFA7)
                - ((2 * (*(_DWORD *)(v11 + 9472) ^ 0x501DFA7) + 863636752) & 0xDA0AED18);
  *(_DWORD *)(v11 + 8344) = v255;
  *(_DWORD *)(v11 + 8544) = v255 ^ 0x501DFA7;
  LODWORD(v150) = (55 * (v258 & 1 ^ (v258 & 1 | 0x78) ^ 1)) | v255 ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9224) = ~(_DWORD)v150;
  v259 = (489
        * ((-5 - ((55 * (v258 & 1 ^ (v258 & 1 | 0x78) ^ 1)) | v255 ^ 0xA7)) == ~(_BYTE)v150)) ^ (*(_DWORD *)(v11 + 8900) + 2059601118);
  *(_DWORD *)(v11 + 8384) = *(_DWORD *)(v11 + 8880);
  LODWORD(v149) = *(_DWORD *)(v11 + 9440);
  LODWORD(v112) = *(_DWORD *)(v11 + 9552);
  v260 = *(_DWORD *)(v11 + 9560) + 1;
  LODWORD(v127) = *(_DWORD *)(v11 + 9320) + 1;
  LODWORD(v77) = *(_DWORD *)(v11 + 8840) + 1;
  LODWORD(v88) = *(_DWORD *)(v11 + 9512);
  *(_DWORD *)(v11 + 8332) = v127;
  LODWORD(v88) = v88 ^ v127;
  *(_DWORD *)(v11 + 8612) = *(_DWORD *)(v11 + 9640) ^ *(_DWORD *)(v11 + 9672);
  v261 = *(_DWORD *)(v11 + 9192) ^ *(_DWORD *)(v11 + 8408);
  *(_DWORD *)(v11 + 8356) = *(_DWORD *)(v11 + 8828) ^ v155;
  *(_DWORD *)(v11 + 8840) = *(_DWORD *)(v11 + 8416) ^ *(_DWORD *)(v11 + 8872);
  *(_DWORD *)(v11 + 9152) = *(_DWORD *)(v11 + 8488) ^ v260;
  LODWORD(v158) = *(_DWORD *)(v11 + 8784);
  *(_DWORD *)(v11 + 9320) = v158 ^ v240;
  *(_DWORD *)(v11 + 9172) = v158 ^ *(_DWORD *)(v11 + 9520);
  *(_DWORD *)(v11 + 8900) = *(_DWORD *)(v11 + 9568) ^ *(_DWORD *)(v11 + 8932);
  v262 = *(_DWORD *)(v11 + 9208);
  LODWORD(v32) = v262 ^ v31;
  *(_DWORD *)(v11 + 9472) = v262 ^ v149;
  v263 = *(_DWORD *)(v11 + 9296);
  *(_DWORD *)(v11 + 8880) = v263 ^ *(_DWORD *)(v11 + 9248);
  *(_DWORD *)(v11 + 8964) = *(_DWORD *)(v11 + 9496) ^ v151;
  LODWORD(v158) = *(_DWORD *)(v11 + 8860);
  *(_DWORD *)(v11 + 9392) = v263 ^ v158;
  v264 = *(_DWORD *)(v11 + 8536);
  LODWORD(v133) = v264 ^ *(_DWORD *)(v11 + 9608);
  *(_DWORD *)(v11 + 9296) = *(_DWORD *)(v11 + 8504) ^ v264;
  *(_DWORD *)(v11 + 9248) = v77 ^ *(_DWORD *)(v11 + 9280);
  v265 = *(_DWORD *)(v11 + 9448);
  *(_DWORD *)(v11 + 9052) = v265 ^ *(_DWORD *)(v11 + 8904);
  *(_DWORD *)(v11 + 8872) = v29 ^ *(_DWORD *)(v11 + 9304);
  v266 = v265 ^ *(_DWORD *)(v11 + 9064);
  *(_DWORD *)(v11 + 9304) = v253 ^ *(_DWORD *)(v11 + 9128);
  *(_DWORD *)(v11 + 9120) = *(_DWORD *)(v11 + 9240) + 3045373;
  *(_DWORD *)(v11 + 9208) = v256 ^ *(_DWORD *)(v11 + 8944);
  v267 = *(_DWORD *)(v11 + 8816);
  *(_DWORD *)(v11 + 9128) = *(_DWORD *)(v11 + 8912) ^ v267;
  *(_DWORD *)(v11 + 9608) = v30 ^ v267;
  *(_DWORD *)(v11 + 9560) = *(_DWORD *)(v11 + 8808) - 1816034173;
  *(_DWORD *)(v11 + 8572) = *(_DWORD *)(v11 + 8776) - 1587187614;
  LODWORD(v30) = v158 ^ *(_DWORD *)(v11 + 8768);
  *(_DWORD *)(v11 + 9512) = v126 + 1241208749;
  *(_DWORD *)(v11 + 9400) ^= *(_DWORD *)(v11 + 9424);
  *(_DWORD *)(v11 + 9552) = *(_DWORD *)(v11 + 8764) - 1813893080;
  *(_DWORD *)(v11 + 9640) = v111 - 2034074348;
  v268 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744) + 8 * v259) - 8);
  *(_DWORD *)(v11 + 8764) = (_DWORD)v88;
  *(_DWORD *)(v11 + 8808) = v88 ^ 0x4FB4C7CB;
  *(_DWORD *)(v11 + 8400) = v261;
  *(_DWORD *)(v11 + 8352) = v261 ^ 0xD795E3C5;
  v269 = *(_DWORD *)(v11 + 9328) ^ 0x501DFA7;
  *(_DWORD *)(v11 + 9192) = *(_DWORD *)(v11 + 8936) ^ 0x5B3C38D7;
  *(_DWORD *)(v11 + 8816) = (_DWORD)v32;
  *(_DWORD *)(v11 + 8480) = v32 ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8608) = v133;
  *(_DWORD *)(v11 + 9568) = v133 ^ 0xC81B1A13;
  LODWORD(v88) = *(_DWORD *)(v11 + 8800) ^ 0x2C0065DA;
  *(_DWORD *)(v11 + 8496) = v266;
  *(_DWORD *)(v11 + 9240) = v266 ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8920) = *(_DWORD *)(v11 + 9736) ^ *(_DWORD *)(v11 + 9616);
  *(_DWORD *)(v11 + 8488) = *(_DWORD *)(v11 + 9008) ^ v112 ^ 0x501DFA7;
  *(_DWORD *)(v11 + 8024) = (_DWORD)v30;
  *(_DWORD *)(v11 + 9544) = v30 ^ 0xBB61A183;
  *(_DWORD *)(v11 + 9440) = (_DWORD)v88;
  *(_DWORD *)(v11 + 8748) = v269;
  return v268();
}

void sub_100368A94(int a1, uint64_t a2, int a3, int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  __int16 v107;
  unsigned __int16 v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  unsigned int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  int v291;
  unsigned int v292;
  int v293;
  int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  unsigned int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  signed int v349;
  unsigned int v350;

  *(_DWORD *)(v13 + 8344) = a3 ^ v8;
  v22 = v12 ^ a8;
  *(_DWORD *)(v13 + 9416) = v17 ^ a5;
  v23 = *(_DWORD *)(v13 + 8368) ^ v10;
  v24 = *(_DWORD *)(v13 + 8424) ^ v11;
  v25 = (v19 ^ 0xFAFE2058) + *(_DWORD *)(v13 + 9160) + 1;
  *(_DWORD *)(v13 + 8784) = v25 + v15 - (v18 & (2 * v25));
  v26 = *(_DWORD *)(v13 + 9004) ^ 0xBF32FA74;
  v27 = (*(_DWORD *)(v13 + 9480) ^ v15)
      + v26
      - 1087178124
      - ((2 * ((*(_DWORD *)(v13 + 9480) ^ v15) + v26)) & 0x7E65F4E8);
  v28 = (a4 ^ v15) + *(_DWORD *)(v13 + 8376) + v15 - (v18 & (2 * ((a4 ^ v15) + *(_DWORD *)(v13 + 8376))));
  v29 = ((a1 ^ 0x7D51FD80) + v26 + 1 + v15 - (v18 & (2 * ((a1 ^ 0x7D51FD80) + v26 + 1)))) ^ v15;
  *(_DWORD *)(v13 + 8712) = v29 - ((2 * v29 + 76913848) & 0xAF2BC78A);
  v30 = *(_DWORD *)(v13 + 8432) + (v20 ^ v15) + v15 - (v18 & (2 * (*(_DWORD *)(v13 + 8432) + (v20 ^ v15))));
  v31 = (v9 ^ 0xFAFE2058) + *(_DWORD *)(v13 + 8932) + 1;
  *(_DWORD *)(v13 + 8308) = v14;
  v32 = v31 + v15 - (v18 & (2 * v31));
  v33 = *(_DWORD *)(v13 + 8888);
  v34 = a6 ^ v33;
  *(_DWORD *)(v13 + 9616) = (v33 ^ v15)
                          - *(_DWORD *)(v13 + 9184)
                          - ((2 * ((v33 ^ v15) - *(_DWORD *)(v13 + 9184)) + 123373298) & v18);
  v35 = *(_DWORD *)(v13 + 8696) + (*(_DWORD *)(v13 + 9496) ^ 0xFAFE2058) + 1;
  v36 = v35 + v15 - (v18 & (2 * v35));
  v37 = (*(_DWORD *)(v13 + 9672) ^ 0x369AFEC1) - *(_DWORD *)(v13 + 8332);
  v38 = (*(_DWORD *)(v13 + 9012) ^ 0x664C4E94) + (*(_DWORD *)(v13 + 9148) ^ 0xFAFE2058) + 1;
  *(_DWORD *)(v13 + 8332) = v38 + v15 - (v18 & (2 * v38));
  v39 = (*(_DWORD *)(v13 + 9056) ^ v16) + (*(_DWORD *)(v13 + 8384) ^ 0xBF32FA74);
  *(_DWORD *)(v13 + 8776) = v39 + v15 - (v18 & (2 * v39));
  v40 = *(_DWORD *)(v13 + 8640);
  v41 = (*(_DWORD *)(v13 + 9120) ^ v15)
      + (v40 & 0xD67AEBC0 ^ 0x40480180 | v40 & 0xD67AEBC0 ^ 0x9632EA40)
      + *(_DWORD *)(v13 + 9224)
      + 212869334;
  *(_DWORD *)(v13 + 9736) = v41 + v15 - (v18 & (2 * v41));
  *(_DWORD *)(v13 + 9184) = (*(_DWORD *)(v13 + 9272) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9272) ^ v15) + 53635442) & v18);
  *(_DWORD *)(v13 + 9120) = (*(_DWORD *)(v13 + 8456) ^ v15)
                          - 2
                          * (((*(_DWORD *)(v13 + 8456) ^ v15) + 668242816) & 0x70698117 ^ (*(_DWORD *)(v13 + 8456) ^ v15) & 0x13);
  *(_DWORD *)(v13 + 9496) = v34 - ((2 * v34 + 50433166) & v18);
  *(_DWORD *)(v13 + 9064) = (*(_DWORD *)(v13 + 8760) ^ 0x87AFDDD8)
                          - ((2 * (*(_DWORD *)(v13 + 8760) ^ 0x87AFDDD8) + 47412158) & v18);
  *(_DWORD *)(v13 + 9448) = *(_DWORD *)(v13 + 8872)
                          - 2 * ((*(_DWORD *)(v13 + 8872) + 598499510) & 0x6C3072FF ^ *(_DWORD *)(v13 + 8872) & 1);
  *(_DWORD *)(v13 + 9056) = (*(_DWORD *)(v13 + 8744) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8744) ^ v15) + 24998764) & v18);
  *(_DWORD *)(v13 + 8944) = (*(_DWORD *)(v13 + 9680) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9680) ^ v15) + 13734756) & v18);
  v42 = (*(_DWORD *)(v13 + 8616) ^ 0x18B50371) - ((2 * (*(_DWORD *)(v13 + 8616) ^ 0x18B50371) + 178489414) & v18);
  *(_DWORD *)(v13 + 9008) = (*(_DWORD *)(v13 + 8612) ^ 0x369AFEC1)
                          - ((2 * (*(_DWORD *)(v13 + 8612) ^ 0x369AFEC1) + 78627570) & v18);
  v43 = *(_DWORD *)(v13 + 9072);
  *(_DWORD *)(v13 + 9680) = (v43 ^ v15) - ((2 * (v43 ^ v15) + 126965304) & v18);
  *(_DWORD *)(v13 + 8456) = *(_DWORD *)(v13 + 9024) ^ 0xBA3325D3 ^ *(_DWORD *)(v13 + 9408);
  *(_DWORD *)(v13 + 9424) = (*(_DWORD *)(v13 + 8664) ^ 0x5B1610EE)
                          - ((2 * (*(_DWORD *)(v13 + 8664) ^ 0x5B1610EE) + 24388914) & v18);
  v44 = (v37 + v15 - (v18 & (2 * v37))) ^ v15;
  *(_DWORD *)(v13 + 8912) = *(_DWORD *)(v13 + 8880) - ((2 * *(_DWORD *)(v13 + 8880) + 194769646) & v18);
  *(_DWORD *)(v13 + 9408) = (*(_DWORD *)(v13 + 8704) ^ 0x5B1610EE)
                          - ((2 * (*(_DWORD *)(v13 + 8704) ^ 0x5B1610EE) + 103805384) & v18);
  *(_DWORD *)(v13 + 8828) = (*(_DWORD *)(v13 + 9528) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9528) ^ v15) + 183254428) & v18);
  *(_DWORD *)(v13 + 8888) = (*(_DWORD *)(v13 + 8720) ^ v16)
                          - ((2 * (*(_DWORD *)(v13 + 8720) ^ v16) + 766651716) & 0x3B69B9AC);
  *(_DWORD *)(v13 + 9040) = (*(_DWORD *)(v13 + 8464) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8464) ^ v15) + 237825494) & v18);
  *(_DWORD *)(v13 + 8768) = (*(_DWORD *)(v13 + 9176) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9176) ^ v15) + 144215978) & v18);
  *(_DWORD *)(v13 + 9224) = v42 - 766270518;
  *(_DWORD *)(v13 + 9672) = ((v42 - 766270518) & 0xE1FF72C7 ^ 0x1015287)
                          + ((v42 - 766270518) & 0xE1FF72C7 ^ 0xE0FE2040)
                          + (*(_DWORD *)(v13 + 8792) ^ v15)
                          + (v43 & 0xBA91030 ^ 0xF557FFEF)
                          + (v43 & 0xBA91030 ^ 0xFEFEEFDF)
                          + 916127427
                          - ((2
                            * (((v42 - 766270518) & 0xE1FF72C7 ^ 0x1015287)
                             + ((v42 - 766270518) & 0xE1FF72C7 ^ 0xE0FE2040)
                             + (*(_DWORD *)(v13 + 8792) ^ v15)
                             + (v43 & 0xBA91030 ^ 0xF557FFEF)
                             + (v43 & 0xBA91030 ^ 0xFEFEEFDF)
                             + 2)) & 0x6D35FD82);
  *(_DWORD *)(v13 + 8760) = (*(_DWORD *)(v13 + 8472) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8472) ^ v15) + 176858278) & v18);
  *(_DWORD *)(v13 + 9528) = (*(_DWORD *)(v13 + 9156) ^ v15)
                          - ((2 * (*(_DWORD *)(v13 + 9156) ^ v15) + 262783826) & 0xB62C21DC);
  *(_DWORD *)(v13 + 9156) = (*(_DWORD *)(v13 + 8632) ^ 0xD2943C62)
                          - ((2 * (*(_DWORD *)(v13 + 8632) ^ 0xD2943C62) - 1170912774) & 0x90363426);
  *(_DWORD *)(v13 + 8744) = (*(_DWORD *)(v13 + 9720) ^ v16) - ((2 * (*(_DWORD *)(v13 + 9720) ^ v16) + 201248276) & v18);
  *(_DWORD *)(v13 + 9720) = (*(_DWORD *)(v13 + 9312) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9312) ^ v15) + 45876456) & v18);
  *(_DWORD *)(v13 + 8720) = v22 - ((2 * v22 + 140461372) & v18);
  *(_DWORD *)(v13 + 8868) = (*(_DWORD *)(v13 + 8868) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8868) ^ v15) + 205873288) & v18);
  v45 = v44 - ((2 * v44 + 75338174) & v18) + 1195419782;
  *(_DWORD *)(v13 + 8792) = v45;
  *(_DWORD *)(v13 + 8704) = (v36 ^ v15) - 2 * (((v36 ^ v15) + 9612864) & (v15 + 8) ^ v36 & 8);
  *(_DWORD *)(v13 + 9280) = ((2 * (v23 - 1995319255)) & 0xF7DABEF2) + ((v23 - 1995319255) ^ 0x7BED5F79);
  *(_DWORD *)(v13 + 9272) = (*(_DWORD *)(v13 + 9128) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9128) ^ v15) + 268301322) & v18);
  *(_DWORD *)(v13 + 9360) = (*(_DWORD *)(v13 + 8520) ^ v15)
                          - ((2 * (*(_DWORD *)(v13 + 8520) ^ v15) + 552375454) & 0x316A06E2);
  *(_DWORD *)(v13 + 8860) = *(_DWORD *)(v13 + 8688) - ((2 * *(_DWORD *)(v13 + 8688) - 1966228156) & 0x90363426);
  *(_DWORD *)(v13 + 8688) = (*(_DWORD *)(v13 + 9080) ^ 0xE10F1D04)
                          - ((2 * (*(_DWORD *)(v13 + 9080) ^ 0xE10F1D04) + 34417900) & v18);
  *(_DWORD *)(v13 + 8664) = (*(_DWORD *)(v13 + 9116) ^ v16) - ((2 * (*(_DWORD *)(v13 + 9116) ^ v16) + 61909894) & v18);
  *(_DWORD *)(v13 + 9200) = (*(_DWORD *)(v13 + 9172) ^ v15)
                          + 56264268
                          + ~((2 * (*(_DWORD *)(v13 + 9172) ^ v15) + 212946248) & v18);
  *(_DWORD *)(v13 + 9128) = (v28 ^ v15) - ((2 * (v28 ^ v15) + 3859382) & v18);
  *(_DWORD *)(v13 + 9116) = (*(_DWORD *)(v13 + 9384) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9384) ^ v15) + 91109032) & v18);
  *(_DWORD *)(v13 + 8552) = (*(_DWORD *)(v13 + 8728) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8728) ^ v15) + 179125214) & v18);
  *(_DWORD *)(v13 + 9148) = *(_DWORD *)(v13 + 8964) - ((2 * *(_DWORD *)(v13 + 8964) + 112234854) & v18);
  *(_DWORD *)(v13 + 8932) = v15 + 24;
  *(_DWORD *)(v13 + 8964) = v32;
  *(_DWORD *)(v13 + 8904) = (v32 ^ v15) - 2 * (((v32 ^ v15) + 64315488) & (v15 + 24) ^ v32 & 0x18);
  *(_DWORD *)(v13 + 8728) = (*(_DWORD *)(v13 + 9632) ^ 0xE10F1D04)
                          - ((2 * (*(_DWORD *)(v13 + 9632) ^ 0xE10F1D04) + 244222728) & v18);
  *(_DWORD *)(v13 + 8616) = (*(_DWORD *)(v13 + 9208) ^ 0x634D9133)
                          - ((2 * (*(_DWORD *)(v13 + 9208) ^ 0x634D9133) + 50552394) & v18);
  *(_DWORD *)(v13 + 9248) = (*(_DWORD *)(v13 + 9248) ^ 0xE10F1D04)
                          - ((2 * (*(_DWORD *)(v13 + 9248) ^ 0xE10F1D04) + 257944282) & v18);
  *(_DWORD *)(v13 + 8632) = (v21 ^ v15) - ((2 * (v21 ^ v15) + 2644072) & v18);
  *(_DWORD *)(v13 + 8612) = (*(_DWORD *)(v13 + 9696) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9696) ^ v15) + 99712416) & v18);
  *(_DWORD *)(v13 + 9696) = (*(_DWORD *)(v13 + 9104) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9104) ^ v15) + 114813626) & v18);
  v46 = (*(_DWORD *)(v13 + 8752) ^ v15) + (v45 & 0xEB46ECED ^ 0x100CCA5 | v45 & 0xEB46ECED ^ 0xEA462048);
  *(_DWORD *)(v13 + 9520) = v46 + v15 - (v18 & (2 * v46));
  *(_DWORD *)(v13 + 9632) = (*(_DWORD *)(v13 + 8656) ^ 0xD12B54EF)
                          - ((2 * (*(_DWORD *)(v13 + 8656) ^ 0xD12B54EF) + 1585657648) & 0xC21E3A08);
  *(_DWORD *)(v13 + 8900) = (*(_DWORD *)(v13 + 8900) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8900) ^ v15) + 147464108) & v18);
  *(_DWORD *)(v13 + 9104) = (*(_DWORD *)(v13 + 8628) ^ 0xD795E3C5)
                          - ((2 * (*(_DWORD *)(v13 + 8628) ^ 0xD795E3C5) + 145976170) & v18);
  *(_DWORD *)(v13 + 9584) = (*(_DWORD *)(v13 + 8648) ^ v15)
                          - 1423140198
                          + ~((2 * (*(_DWORD *)(v13 + 8648) ^ v15) + 206927332) & v18);
  *(_DWORD *)(v13 + 8864) = (*(_DWORD *)(v13 + 8864) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8864) ^ v15) + 159485342) & v18);
  *(_DWORD *)(v13 + 8752) = (*(_DWORD *)(v13 + 9664) ^ 0xE10F1D04)
                          - ((2 * (*(_DWORD *)(v13 + 9664) ^ 0xE10F1D04) + 1294427042) & 0xAF2BC78A);
  *(_DWORD *)(v13 + 8628) = (*(_DWORD *)(v13 + 8548) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8548) ^ v15) + 231270076) & v18);
  *(_DWORD *)(v13 + 9176) = (*(_DWORD *)(v13 + 9576) ^ v15)
                          - 2
                          * (((*(_DWORD *)(v13 + 9576) ^ v15) + 45713536) & (v15 + 24) ^ *(_DWORD *)(v13 + 9576) & 0x18);
  v47 = *(_DWORD *)(v13 + 9472);
  *(_DWORD *)(v13 + 9264) = (*(_DWORD *)(v13 + 9264) ^ 0xBF32FA74)
                          - ((2 * (*(_DWORD *)(v13 + 9264) ^ 0xBF32FA74) + 169954686) & v18);
  v48 = *(_DWORD *)(v13 + 9304) - ((2 * *(_DWORD *)(v13 + 9304) + 203408568) & v18);
  *(_DWORD *)(v13 + 9576) = (v27 ^ 0xBF32FA74) - ((2 * (v27 ^ 0xBF32FA74) + 666596504) & 0x7E65F4E8);
  v49 = (*(_DWORD *)(v13 + 8532) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8532) ^ v15) + 1102270208) & 0xCC989D28);
  v50 = (v47 & 0x200002 ^ 0x622BE0D | v47 & 0x200002 ^ 2) + *(_DWORD *)(v13 + 9608);
  *(_DWORD *)(v13 + 9608) = v50 + v16 - ((2 * v50) & 0x90363426);
  *(_DWORD *)(v13 + 9304) = *(_DWORD *)(v13 + 8544) - ((2 * *(_DWORD *)(v13 + 8544) + 251376316) & v18);
  *(_DWORD *)(v13 + 8536) = (*(_DWORD *)(v13 + 9656) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9656) ^ v15) + 216074300) & v18);
  *(_DWORD *)(v13 + 9656) = (*(_DWORD *)(v13 + 9256) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9256) ^ v15) + 232135130) & v18);
  *(_DWORD *)(v13 + 9384) = *(_DWORD *)(v13 + 9464) - ((2 * *(_DWORD *)(v13 + 9464) + 75802986) & v18);
  *(_DWORD *)(v13 + 9256) = (*(_DWORD *)(v13 + 8576) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8576) ^ v15) + 49529192) & v18);
  v51 = (*(_DWORD *)(v13 + 9052) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9052) ^ v15) + 259322296) & v18);
  *(_DWORD *)(v13 + 9052) = (*(_DWORD *)(v13 + 8672) ^ v15) - ((2 * (*(_DWORD *)(v13 + 8672) ^ v15) + 232165080) & v18);
  *(_DWORD *)(v13 + 9600) = (*(_DWORD *)(v13 + 9600) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9600) ^ v15) + 236400088) & v18);
  v52 = (*(_DWORD *)(v13 + 8736) ^ 0xE10F1D04) - ((2 * (*(_DWORD *)(v13 + 8736) ^ 0xE10F1D04) + 126250024) & v18);
  v53 = (*(_DWORD *)(v13 + 9152) ^ 0xBA3325D3) - ((2 * (*(_DWORD *)(v13 + 9152) ^ 0xBA3325D3) + 50696310) & v18);
  *(_DWORD *)(v13 + 9504) = (*(_DWORD *)(v13 + 9504) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9504) ^ v15) + 260474328) & v18);
  v54 = (v30 ^ v15) - ((2 * (v30 ^ v15) + 1582148054) & 0x7E65F4E8);
  v55 = *(_DWORD *)(v13 + 9296) - ((2 * *(_DWORD *)(v13 + 9296) + 1554881724) & 0x7E65F4E8);
  v56 = (v40 ^ 0xBF32FA74) - ((2 * (v40 ^ 0xBF32FA74) + 1926204862) & 0x7E65F4E8);
  v57 = (*(_DWORD *)(v13 + 9016) ^ 0xBF32FA74) - ((2 * (*(_DWORD *)(v13 + 9016) ^ 0xBF32FA74) - 3104276) & 0xCC989D28);
  v58 = (*(_DWORD *)(v13 + 9096) ^ v16) - ((2 * (*(_DWORD *)(v13 + 9096) ^ v16) + 268277496) & v18);
  v59 = (*(_DWORD *)(v13 + 9536) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9536) ^ v15) + 1380682678) & 0x7E65F4E8);
  v60 = (*(_DWORD *)(v13 + 9400) ^ 0x634D9133)
      - 1032695829
      + ~((2 * (*(_DWORD *)(v13 + 9400) ^ 0x634D9133) + 182509702) & v18);
  *(_DWORD *)(v13 + 9480) = v60;
  v61 = (*(_DWORD *)(v13 + 9688) ^ v15) - ((2 * (*(_DWORD *)(v13 + 9688) ^ v15) + 156957446) & v18);
  v62 = *(_DWORD *)(v13 + 9416) - ((2 * *(_DWORD *)(v13 + 9416) + 123846352) & v18);
  v63 = *(_DWORD *)(v13 + 9488) - ((2 * *(_DWORD *)(v13 + 9488) + 636608050) & 0xC21E3A08);
  v64 = (*(_DWORD *)(v13 + 9036) ^ 0x664C4E94)
      - ((2 * (*(_DWORD *)(v13 + 9036) ^ 0x664C4E94) + 1282254242) & 0x7E65F4E8);
  v56 -= 1197817517;
  *(_DWORD *)(v13 + 8656) = v56;
  v65 = *(_DWORD *)(v13 + 9240);
  *(_DWORD *)(v13 + 8548) = v54 - 1369845921;
  v66 = ((v56 ^ v65 ^ 0xBA3325D3) - 1087178124 - 2 * ((v56 ^ v65 ^ 0xBA3325D3) & 0x3F32FA7C ^ (v56 ^ v65) & 8)) ^ (v54 - 1369845921);
  v67 = (v66 + v15 - (v18 & (2 * v66))) ^ *(_DWORD *)(v13 + 8304);
  v68 = v24 - ((2 * v24 - 1644393538) & 0xC21E3A08) + 806183651;
  *(_DWORD *)(v13 + 9664) = v68;
  v69 = (v67 - 519103228 - ((2 * v67) & 0xC21E3A08)) ^ v68;
  v59 += 676905039;
  *(_DWORD *)(v13 + 9172) = v59;
  v70 = (v69 - 1087178124 - ((2 * v69) & 0x7E65F4E8)) ^ v59;
  v71 = (v70 - 519103228 - ((2 * v70) & 0xC21E3A08)) ^ *(_DWORD *)(v13 + 8968);
  *(_DWORD *)(v13 + 9160) = v55 - 309737262;
  v72 = (v71 - 1087178124 - ((2 * v71) & 0x7E65F4E8)) ^ (v55 - 309737262);
  v63 -= 200799203;
  *(_DWORD *)(v13 + 8544) = v63;
  v73 = (v72 - 519103228 - ((2 * v72) & 0xC21E3A08)) ^ v63;
  v74 = *(_DWORD *)(v13 + 9328);
  *(_DWORD *)(v13 + 9024) = v74 ^ 0x72C61043;
  v75 = (v73 - 1087178124 - ((2 * v73) & 0x7E65F4E8)) ^ v74 ^ 0x72C61043;
  v76 = (v75 + v15 - (v18 & (2 * v75))) ^ *(_DWORD *)(v13 + 9568);
  *(_DWORD *)(v13 + 9312) = v48 - 1290681853;
  v77 = (v76 + v15 - (v18 & (2 * v76))) ^ (v48 - 1290681853);
  *(_DWORD *)(v13 + 9240) = v49 + 119928340;
  *(_DWORD *)(v13 + 9208) = v51 + 616323203;
  v78 = *(_DWORD *)(v13 + 8952) ^ (((v49 + 119928340) ^ (v51 + 616323203) ^ 0x634D9133)
                                 + v15
                                 - (v18 & (2 * ((v49 + 119928340) ^ (v51 + 616323203) ^ 0x634D9133)))) ^ 0xD01A4738 ^ (v77 + v15 - (v18 & (2 * v77)));
  v79 = (v47 ^ 0x87AFDDD8) - ((2 * (v47 ^ 0x87AFDDD8) + 150984094) & v18) - 645805450;
  *(_DWORD *)(v13 + 9464) = v79;
  v80 = v79 ^ 0x178D7CBE ^ (v78 + v15 - (v18 & (2 * v78)));
  *(_DWORD *)(v13 + 9004) = v64 + 1701432645;
  v81 = (v80 - 1087178124 - ((2 * v80) & 0x7E65F4E8)) ^ (v64 + 1701432645);
  *(_DWORD *)(v13 + 9688) = v61 - 1716560598;
  v82 = (v81 + v15 - (v18 & (2 * v81))) ^ (v61 - 1716560598);
  v83 = (v82 + v15 - (v18 & (2 * v82))) ^ *(_DWORD *)(v13 + 8832);
  v84 = *(_DWORD *)(v13 + 9384) + 390345820;
  *(_DWORD *)(v13 + 9368) = v84;
  v85 = (v83 + v15 - (v18 & (2 * v83))) ^ v84;
  v86 = (v85 + v15 - (v18 & (2 * v85))) ^ *(_DWORD *)(v13 + 9592);
  v87 = v15 + 1;
  *(_DWORD *)(v13 + 8872) = v53 + 1854187490;
  v88 = (v86 + v15 + 1 + ~(v18 & (2 * v86))) ^ (v53 + 1854187490);
  v89 = (v88 + 1716276884 - ((2 * v88) & 0xCC989D28)) ^ *(_DWORD *)(v13 + 9136);
  *(_DWORD *)(v13 + 9416) = v52 + 1489311163;
  v90 = (v89 + v15 - (v18 & (2 * v89))) ^ (v52 + 1489311163);
  *(_DWORD *)(v13 + 8736) = v58 - 452941021;
  v91 = (v90 + v15 - (v18 & (2 * v90))) ^ (v58 - 452941021);
  *(_DWORD *)(v13 + 8696) = v57 - 432758902;
  v92 = (v91 + 1716276884 - ((2 * v91) & 0xCC989D28)) ^ (v57 - 432758902);
  v93 = (v92 + v15 - (v18 & (2 * v92))) ^ *(_DWORD *)(v13 + 9392);
  v94 = (v93 + v15 - (v18 & (2 * v93))) ^ *(_DWORD *)(v13 + 8848);
  v95 = (v94 + v15 - (v18 & (2 * v94))) ^ v60;
  v96 = *(_DWORD *)(v13 + 8984) ^ 0x44E7862F;
  *(_DWORD *)(v13 + 8328) = v96;
  v97 = (v95 + v15 - (v18 & (2 * v95))) ^ v96;
  v98 = *(_DWORD *)(v13 + 8992) ^ 0xB60FBF6D;
  *(_DWORD *)(v13 + 9012) = v98;
  v99 = (v97 + 1716276884 - ((2 * v97) & 0xCC989D28)) ^ v98;
  *(_DWORD *)(v13 + 9384) = v62 + 145932047;
  v100 = (v99 + v15 - (v18 & (2 * v99))) ^ (v62 + 145932047);
  v101 = *(_DWORD *)(v13 + 9304);
  *(_DWORD *)(v13 + 8464) = v101 + 1820309765;
  v102 = (v100 + v15 - (v18 & (2 * v100))) ^ (v101 + 1820309765);
  v103 = *(_DWORD *)(v13 + 9576) + 1393603776;
  *(_DWORD *)(v13 + 8880) = v103;
  v104 = (v102 - 1087178124 - ((2 * v102) & 0x7E65F4E8)) ^ v103;
  v105 = v104 + v15 - (v18 & (2 * v104));
  v106 = *(_DWORD *)(v13 + 8332);
  *(_DWORD *)(v13 + 9576) = v106 ^ 0xDC5E8780;
  if ((((unsigned __int16)v106 ^ 0x787F | (unsigned __int16)v106 ^ 0x8780) & 0x800) != 0)
    v107 = -2048;
  else
    v107 = 2048;
  v108 = v107 + (v106 ^ 0x787F | v106 ^ 0x8780);
  v109 = *(_DWORD *)(v13 + 9616) + 1622090528;
  *(_DWORD *)(v13 + 9096) = v109;
  v110 = *(_DWORD *)(v13 + 9176) + 935028775;
  *(_DWORD *)(v13 + 9304) = v110;
  v111 = ((v110 ^ v109 ^ 0xD933A727 ^ v105) + 260362614 - ((2 * (v110 ^ v109 ^ 0xD933A727 ^ v105)) & 0x1F09A2EC)) ^ *(_DWORD *)(v13 + 9560);
  v112 = (v111 + v15 - (v18 & (2 * v111))) ^ *(_DWORD *)(v13 + 9552);
  v113 = (v112 - 318409076 - ((2 * v112) & 0xDA0AED18)) ^ *(_DWORD *)(v13 + 9640);
  v114 = *(_DWORD *)(v13 + 9448) - 1881353292;
  *(_DWORD *)(v13 + 9488) = v114;
  v115 = (v113 + 1815114494 - ((2 * v113) & 0xD860E5FC)) ^ v114;
  v116 = *(_DWORD *)(v13 + 9496) - 24992274;
  *(_DWORD *)(v13 + 8532) = v116;
  v117 = (v115 + v15 - (v18 & (2 * v115))) ^ v116;
  v118 = (v117 - 2102525313 - ((2 * v117) & 0x55C04FE)) ^ *(_DWORD *)(v13 + 9440);
  v119 = *(_DWORD *)(v13 + 9680) + 415926979;
  *(_DWORD *)(v13 + 9080) = v119;
  v120 = (v118 + v15 - (v18 & (2 * v118))) ^ v119;
  v121 = *(_DWORD *)(v13 + 9424) - 1917062592;
  *(_DWORD *)(v13 + 9296) = v121;
  v122 = (v120 + v15 - (v18 & (2 * v120))) ^ v121;
  v123 = (v122 + v15 - (v18 & (2 * v122))) ^ *(_DWORD *)(v13 + 9320);
  v124 = *(_DWORD *)(v13 + 9528) - 487918953;
  *(_DWORD *)(v13 + 9072) = v124;
  v125 = (v123 + 1528172782 - ((2 * v123) & 0xB62C21DC)) ^ v124;
  v126 = *(_DWORD *)(v13 + 9720) - 1637883365;
  *(_DWORD *)(v13 + 9176) = v126;
  v127 = (v125 + v15 - (v18 & (2 * v125))) ^ v126;
  v128 = *(_DWORD *)(v13 + 8860) - 1920862027;
  *(_DWORD *)(v13 + 9720) = v128;
  v129 = (v127 - 937747949 - ((2 * v127) & 0x90363426)) ^ v128;
  v130 = *(_DWORD *)(v13 + 9696) - 1066543868;
  *(_DWORD *)(v13 + 9400) = v130;
  v131 = (v129 + v15 - (v18 & (2 * v129))) ^ v130;
  v132 = *(_DWORD *)(v13 + 8552) - 1034388074;
  *(_DWORD *)(v13 + 8860) = v132;
  v133 = (v131 + v15 - (v18 & (2 * v131))) ^ v132;
  v134 = *(_DWORD *)(v13 + 8864) + 1237493366;
  *(_DWORD *)(v13 + 9568) = v134;
  v135 = (v133 + v15 - (v18 & (2 * v133))) ^ v134;
  v136 = *(_DWORD *)(v13 + 9656) + 1408035988;
  *(_DWORD *)(v13 + 9656) = v136;
  v137 = (v135 + v15 - (v18 & (2 * v135))) ^ v136;
  v138 = *(_DWORD *)(v13 + 9504) + 1824858771;
  *(_DWORD *)(v13 + 9528) = v138;
  v139 = (v137 + v15 - (v18 & (2 * v137))) ^ v138;
  v140 = *(_DWORD *)(v13 + 9264) + 2048034406;
  *(_DWORD *)(v13 + 8648) = v140;
  v141 = ((v139 ^ 0x7B6E47E2) + v87 + ~(2 * ((v139 ^ 0x7B6E47E2) & (v15 + 16) ^ v139 & 0x10))) ^ v140;
  v142 = *(_DWORD *)(v13 + 8536) + 326263749;
  *(_DWORD *)(v13 + 9696) = v142;
  v143 = (v141 + v15 - (v18 & (2 * v141))) ^ v142;
  v144 = *(_DWORD *)(v13 + 9600) + 202208915;
  *(_DWORD *)(v13 + 9448) = v144;
  v145 = (v143 + v15 - (v18 & (2 * v143))) ^ v144;
  v146 = *(_DWORD *)(v13 + 9256) - 1636056997;
  *(_DWORD *)(v13 + 8864) = v146;
  v147 = (v145 + v15 - (v18 & (2 * v145))) ^ v146;
  v148 = *(_DWORD *)(v13 + 9052) + 1676486419;
  *(_DWORD *)(v13 + 9424) = v148;
  v149 = (v147 + v15 - (v18 & (2 * v147))) ^ v148;
  v150 = *(_DWORD *)(v13 + 8752) + 2116654486;
  *(_DWORD *)(v13 + 9616) = v150;
  v151 = (v149 - 678042683 - ((2 * v149) & 0xAF2BC78A)) ^ v150;
  v152 = *(_DWORD *)(v13 + 8628) + 1273385733;
  *(_DWORD *)(v13 + 9016) = v152;
  v153 = (v151 + v15 - (v18 & (2 * v151))) ^ v152;
  v154 = (v153 - 937747949 - ((2 * v153) & 0x90363426)) ^ *(_DWORD *)(v13 + 9608);
  v155 = (v154 + v15 - (v18 & (2 * v154))) ^ *(_DWORD *)(v13 + 8488);
  v156 = (v155 + v15 - (v18 & (2 * v155))) ^ *(_DWORD *)(v13 + 8776);
  v157 = *(_DWORD *)(v13 + 8616) + 511938252;
  *(_DWORD *)(v13 + 9256) = v157;
  v158 = (v156 + v15 - (v18 & (2 * v156))) ^ v157;
  v159 = (v158 + v15 - (v18 & (2 * v158))) ^ *(_DWORD *)(v13 + 8840);
  v160 = *(_DWORD *)(v13 + 8904) - 1999159289;
  *(_DWORD *)(v13 + 9680) = v160;
  v161 = (v159 + v15 - (v18 & (2 * v159))) ^ v160;
  v162 = *(_DWORD *)(v13 + 8612) + 1476042359;
  *(_DWORD *)(v13 + 8904) = v162;
  v163 = (v161 + v15 - (v18 & (2 * v161))) ^ v162;
  v164 = *(_DWORD *)(v13 + 9360) - 1456779840;
  v165 = (v163 + 414516081 - ((2 * v163) & 0x316A06E2)) ^ v164;
  v166 = (v165 + v15 - (v18 & (2 * v165))) ^ *(_DWORD *)(v13 + 8980);
  v167 = *(_DWORD *)(v13 + 9116) - 1212613893;
  v168 = (v166 + v15 - (v18 & (2 * v166))) ^ v167;
  v169 = *(_DWORD *)(v13 + 8900) - 1989742723;
  *(_DWORD *)(v13 + 9116) = v169;
  v170 = (v168 + v15 - (v18 & (2 * v168))) ^ v169;
  v171 = *(_DWORD *)(v13 + 8664) - 287689366;
  *(_DWORD *)(v13 + 9360) = v171;
  v172 = (v170 + v15 - (v18 & (2 * v170))) ^ v171;
  v173 = *(_DWORD *)(v13 + 8920) ^ 0x31433691;
  *(_DWORD *)(v13 + 9496) = v173;
  v174 = (v172 + v15 - (v18 & (2 * v172))) ^ v173;
  v175 = (v174 + v15 - (v18 & (2 * v174))) ^ *(_DWORD *)(v13 + 9200);
  v176 = (v175 + v15 - (v18 & (2 * v175))) ^ *(_DWORD *)(v13 + 8784);
  v177 = (v176 + v15 - (v18 & (2 * v176))) ^ *(_DWORD *)(v13 + 9584);
  v178 = *(_DWORD *)(v13 + 9632) - 1873758052;
  *(_DWORD *)(v13 + 9632) = v178;
  v179 = (v177 - 519103228 - ((2 * v177) & 0xC21E3A08)) ^ v178;
  v180 = *(_DWORD *)(v13 + 8632) - 1122628645;
  *(_DWORD *)(v13 + 8752) = v180;
  v181 = (v179 + v15 - (v18 & (2 * v179))) ^ v180;
  v182 = *(_DWORD *)(v13 + 9432) ^ 0xC967A369 ^ (v181 + 414516081 - ((2 * v181) & 0x316A06E2));
  v183 = *(_DWORD *)(v13 + 9148) + 5908570;
  *(_DWORD *)(v13 + 8504) = v183;
  v184 = (v182 + v15 - (v18 & (2 * v182))) ^ v183;
  v185 = *(_DWORD *)(v13 + 8360) ^ 0x4A7E1E79;
  v186 = (v184 + v15 - (v18 & (2 * v184))) ^ v185;
  v187 = *(_DWORD *)(v13 + 8728) + 71902507;
  *(_DWORD *)(v13 + 8576) = v187;
  v188 = (v186 + v15 - (v18 & (2 * v186))) ^ v187;
  v189 = *(_DWORD *)(v13 + 9104) - 379873956;
  *(_DWORD *)(v13 + 9148) = v189;
  v190 = (v188 + v15 - (v18 & (2 * v188))) ^ v189;
  v191 = *(_DWORD *)(v13 + 8764);
  v192 = *(_DWORD *)(v13 + 9280) - 2079154041;
  *(_DWORD *)(v13 + 8312) = v191 ^ 0xEE61BBA0;
  *(_DWORD *)(v13 + 8000) = v192;
  v193 = v192 ^ v191 ^ 0xEE61BBA0 ^ (v190 - 519103228 - ((2 * v190) & 0xC21E3A08));
  v194 = *(_DWORD *)(v13 + 8688) - 2046265827;
  v195 = (v193 + v15 - (v18 & (2 * v193))) ^ v194;
  v196 = *(_DWORD *)(v13 + 9272) - 1392453204;
  *(_DWORD *)(v13 + 9272) = v196;
  v197 = (v195 + v15 - (v18 & (2 * v195))) ^ v196;
  v198 = *(_DWORD *)(v13 + 8704) + 1570016743;
  *(_DWORD *)(v13 + 9264) = v198;
  v199 = (v197 + v15 - (v18 & (2 * v197))) ^ v198;
  v200 = (v199 + v15 - (v18 & (2 * v199))) ^ v106;
  v201 = v200 + v87 + ~(v18 & (2 * v200));
  v202 = *(_DWORD *)(v13 + 8720) - 1724808635;
  v203 = *(_DWORD *)(v13 + 8868) + 52727787;
  *(_DWORD *)(v13 + 9052) = v203;
  v204 = ((v201 ^ v202) + v15 - (v18 & (2 * (v201 ^ v202)))) ^ v203;
  v205 = *(_DWORD *)(v13 + 8744) - 218020175;
  v206 = (v204 + v15 - (v18 & (2 * v204))) ^ v205;
  v207 = (v206 + v15 - (v18 & (2 * v206))) ^ *(_DWORD *)(v13 + 8352);
  v208 = *(_DWORD *)(v13 + 9128) - 1793109630;
  v209 = (v207 + v15 - (v18 & (2 * v207))) ^ v208;
  v210 = *(_DWORD *)(v13 + 8344) ^ 0xD2943C62;
  *(_DWORD *)(v13 + 7992) = v210;
  v211 = (v209 - 678042683 - ((2 * v209) & 0xAF2BC78A)) ^ v210;
  v212 = *(_DWORD *)(v13 + 8768) - 514971780;
  *(_DWORD *)(v13 + 8212) = v212;
  v213 = (v211 + v15 - (v18 & (2 * v211))) ^ v212;
  v214 = *(_DWORD *)(v13 + 9248) + 1018287380;
  v215 = (v213 + v15 - (v18 & (2 * v213))) ^ v214;
  v216 = (v215 + v15 - (v18 & (2 * v215))) ^ *(_DWORD *)(v13 + 9520);
  v217 = *(_DWORD *)(v13 + 9156) - 1523204336;
  v218 = (v216 - 937747949 - ((2 * v216) & 0x90363426)) ^ v217;
  v219 = *(_DWORD *)(v13 + 8760) - 1706610182;
  *(_DWORD *)(v13 + 9036) = v219;
  v220 = (v218 + v15 - (v18 & (2 * v218))) ^ v219;
  v221 = *(_DWORD *)(v13 + 9040) - 65513838;
  *(_DWORD *)(v13 + 9040) = v221;
  v222 = (v220 + v15 - (v18 & (2 * v220))) ^ v221;
  v223 = (v222 - 1087178124 - ((2 * v222) & 0x7E65F4E8)) ^ *(_DWORD *)(v13 + 9192);
  v224 = *(_DWORD *)(v13 + 8512);
  v225 = (v223 - 2102525313 - ((2 * v223) & 0x55C04FE)) ^ v224;
  v226 = *(_DWORD *)(v13 + 8912) + 1523570974;
  *(_DWORD *)(v13 + 9104) = v226;
  v227 = (v225 + v15 - (v18 & (2 * v225))) ^ v226;
  v228 = *(_DWORD *)(v13 + 8828) - 1166541195;
  v229 = (v227 + v15 - (v18 & (2 * v227))) ^ v228;
  v230 = (v229 + v15 - (v18 & (2 * v229))) ^ *(_DWORD *)(v13 + 8792);
  v231 = *(_DWORD *)(v13 + 8888) - 1265765512;
  v232 = (v230 + 498392278 - ((2 * v230) & 0x3B69B9AC)) ^ v231;
  v233 = (v232 + 916127425 - ((2 * v232) & 0x6D35FD82)) ^ *(_DWORD *)(v13 + 9672);
  v234 = *(_DWORD *)(v13 + 9008) - 279330528;
  v235 = (v233 + v15 - (v18 & (2 * v233))) ^ v234;
  v236 = (v235 + 176492241 - ((2 * v235) & 0x150A1DA2)) ^ *(_DWORD *)(v13 + 9456);
  v237 = *(_DWORD *)(v13 + 9288);
  v238 = (v236 - 1414547454 - ((2 * v236) & 0x575F7004)) ^ v237;
  v239 = *(_DWORD *)(v13 + 9224);
  v240 = (v238 + v15 - (v18 & (2 * v238))) ^ v239;
  v241 = *(_DWORD *)(v13 + 9408) - 1072047989;
  *(_DWORD *)(v13 + 8720) = v241;
  v242 = (v240 + v15 - (v18 & (2 * v240))) ^ v241;
  v243 = *(_DWORD *)(v13 + 8456) - ((2 * *(_DWORD *)(v13 + 8456) + 69489282) & v18) + 387188968;
  v244 = (v242 + v15 - (v18 & (2 * v242))) ^ v243;
  v245 = ((v108 ^ 0xFFFF0800) - 1335365554) ^ *(_DWORD *)(v13 + 9376);
  v246 = (v244 + v15 - (v18 & (2 * v244))) ^ v245;
  v247 = (v246 + v15 - (v18 & (2 * v246))) ^ *(_DWORD *)(v13 + 8480);
  v248 = (v247 + 1396432010 - ((2 * v247) & 0xA677B914)) ^ *(_DWORD *)(v13 + 8680);
  v249 = *(_DWORD *)(v13 + 8356) ^ 0x76E0ACA3;
  *(_DWORD *)(v13 + 9600) = v249;
  v250 = (v248 + v15 - (v18 & (2 * v248))) ^ v249;
  v251 = *(_DWORD *)(v13 + 9064) - 1637115514;
  *(_DWORD *)(v13 + 8912) = v251;
  v252 = (v250 + v15 - (v18 & (2 * v250))) ^ v251;
  v253 = *(_DWORD *)(v13 + 9120) + 406721668;
  *(_DWORD *)(v13 + 8900) = v253;
  v254 = (v252 - 261521148 - ((2 * v252) & 0xE0D30208)) ^ v253;
  v255 = *(_DWORD *)(v13 + 9184) - 157608864;
  v256 = (v254 + v15 - (v18 & (2 * v254))) ^ v255;
  v257 = *(_DWORD *)(v13 + 9056) + 633379165;
  *(_DWORD *)(v13 + 9008) = v257;
  v258 = (v256 + v15 - (v18 & (2 * v256))) ^ v257;
  v259 = *(_DWORD *)(v13 + 8944) - 1788171943;
  *(_DWORD *)(v13 + 9064) = v259;
  v260 = (v258 + v15 - (v18 & (2 * v258))) ^ v259;
  v261 = *(_DWORD *)(v13 + 9736);
  v262 = (v260 + v15 - (v18 & (2 * v260))) ^ v261;
  v263 = (v262 + v15 - (v18 & (2 * v262))) ^ *(_DWORD *)(v13 + 9544);
  v264 = *(_DWORD *)(v13 + 9512);
  v265 = (v263 - 853883468 - ((2 * v263) & 0x9A358B68)) ^ v264;
  *(_DWORD *)(v13 + 9536) = v265 - 678042683 - ((2 * v265) & 0xAF2BC78A);
  *(_DWORD *)(v13 + 8744) = v234;
  v266 = (*(_DWORD *)(v13 + 9172) ^ 0x40CD058B) + (v234 ^ v15);
  v267 = (*(_DWORD *)(v13 + 9528) ^ 0xFAFE2058)
       + v266
       + 771209514
       + ~((2 * ((*(_DWORD *)(v13 + 9528) ^ 0xFAFE2058) + v266) + 32224004) & v18);
  v268 = (v191 ^ 0xF091595B) + (*(_DWORD *)(v13 + 9424) ^ 0xFAFE2058);
  *(_DWORD *)(v13 + 9408) = v185;
  v269 = v268 + (v267 ^ v185) + 2 + v15 - (v18 & (2 * (v268 + (v267 ^ v185) + 2)));
  v270 = (v239 ^ v15) + (*(_DWORD *)(v13 + 9072) ^ 0xA4E9EF11);
  *(_DWORD *)(v13 + 9156) = v202;
  *(_DWORD *)(v13 + 8688) = v167;
  *(_DWORD *)(v13 + 8520) = v231;
  v271 = (v231 ^ 0xE24B2329) + ((v270 + (v269 ^ v202) + 1 + v15 - (v18 & (2 * (v270 + (v269 ^ v202) + 1)))) ^ v167) + 1;
  *(_DWORD *)(v13 + 8368) = v164;
  v272 = *(_DWORD *)(v13 + 8532) ^ v15;
  *(_DWORD *)(v13 + 7984) = v272;
  v273 = ((v271 + 414516081 - ((2 * v271) & 0x316A06E2)) ^ v164) + v272;
  v274 = (v273 + v15 - (v18 & (2 * v273))) ^ *(_DWORD *)(v13 + 9400);
  v275 = (*(_DWORD *)(v13 + 9432) ^ 0x55E52001) + (*(_DWORD *)(v13 + 9656) ^ 0xFAFE2058);
  *(_DWORD *)(v13 + 8944) = v194;
  v276 = v275 + (v194 ^ v15) + ((v274 - 318409076 - ((2 * v274) & 0xDA0AED18)) ^ *(_DWORD *)(v13 + 9640)) + 1;
  v277 = v276 - 678042683 - ((2 * v276) & 0xAF2BC78A);
  *(_DWORD *)(v13 + 8664) = v277;
  v278 = ((v277 ^ 0xD795E3C5) + (*(_DWORD *)(v13 + 9568) ^ v15)) ^ *(_DWORD *)(v13 + 8880);
  v279 = *(_DWORD *)(v13 + 9576) + (v278 ^ 0xBF32FA74);
  v280 = *(_DWORD *)(v13 + 8832);
  *(_DWORD *)(v13 + 8432) = v243;
  *(_DWORD *)(v13 + 9128) = v205;
  v281 = *(_DWORD *)(v13 + 8816);
  *(_DWORD *)(v13 + 8612) = v245;
  v282 = (v279 + 1) ^ *(_DWORD *)(v13 + 8648);
  *(_DWORD *)(v13 + 8416) = v282;
  v283 = v282 ^ v15;
  *(_DWORD *)(v13 + 8008) = v283;
  v284 = (v243 ^ 0xFAFE2058) + (v280 ^ 0xF57CD4D4) + (v205 ^ 0xFAFE2058) + (v281 ^ 0xF8A729EA) + (v245 ^ v15) + v283 + 4;
  v285 = v284 + v15 - (v18 & (2 * v284));
  *(_DWORD *)(v13 + 8408) = v285;
  v286 = ((v285 ^ v15) + (v264 ^ 0xCD1AC5B4) + v15 - (v18 & (2 * ((v285 ^ v15) + (v264 ^ 0xCD1AC5B4))))) ^ *(_DWORD *)(v13 + 9696);
  *(_DWORD *)(v13 + 8628) = v217;
  v287 = (v217 ^ 0xC81B1A13) + (*(_DWORD *)(v13 + 9368) ^ v15);
  *(_DWORD *)(v13 + 0x2000) = v237 ^ 0xEE31D212;
  v288 = v287 + ((v286 + v15 - (v18 & (2 * v286))) ^ v237 ^ 0xEE31D212);
  *(_DWORD *)(v13 + 8828) = v214;
  *(_DWORD *)(v13 + 9152) = v208;
  v289 = (v214 ^ v15) + (v208 ^ 0xFAFE2058) + ((v288 + v15 - (v18 & (2 * v288))) ^ v228) + 1;
  v290 = *(_DWORD *)(v13 + 9720);
  v291 = v290 & 0x20000000;
  if ((v289 & v290 & 0x20000000) != 0)
    v291 = -v291;
  v292 = (v290 & 0xDFFFFFFF ^ 0xC81B1A13 ^ (v291 + v289))
       + v15
       - (v18 & (2 * (v290 & 0xDFFFFFFF ^ 0xC81B1A13 ^ (v291 + v289))));
  v293 = *(_DWORD *)(v13 + 8968);
  v294 = (v293 ^ 0x610F1D04) & (v228 ^ v15);
  v295 = *(_DWORD *)(v13 + 9280);
  v296 = (*(_DWORD *)(v13 + 9256) ^ 0xFAFE2058) + 2079154041 - v295 + (v292 ^ *(_DWORD *)(v13 + 8872)) + 1;
  v297 = (v296 + 1815114494 - ((2 * v296) & 0xD860E5FC)) ^ *(_DWORD *)(v13 + 9488);
  *(_DWORD *)(v13 + 8616) = v224 ^ 0x79B54A91;
  v298 = ((v297 + v15 - (v18 & (2 * v297))) ^ v224 ^ 0x79B54A91) + (*(_DWORD *)(v13 + 9016) ^ v15);
  v299 = (*(_DWORD *)(v13 + 9560) ^ 0xF07B2E89)
       + ((v298 + 916127425 - ((2 * v298) & 0x6D35FD82)) ^ *(_DWORD *)(v13 + 9672))
       + 1;
  v300 = v299 + v15 - (v18 & (2 * v299));
  v301 = v228 ^ v293 ^ 0xE40EC2A3;
  *(_DWORD *)(v13 + 8552) = v228;
  v302 = v228 ^ 0xFAFE2058;
  v303 = *(_DWORD *)(v13 + 8860);
  v304 = v302 + v301 + 2 * v294 - 519103227 - ((2 * (v302 + v301 + 2 * v294 + 1)) & 0xC21E3A08);
  *(_DWORD *)(v13 + 9248) = v300;
  v305 = ((((v300 ^ *(_DWORD *)(v13 + 9664) ^ 0xE40EC2A3)
          + v15
          - 2
          * ((v300 ^ *(_DWORD *)(v13 + 9664) ^ 0xE40EC2A3) & *(_DWORD *)(v13 + 8932) ^ (v300 ^ *(_DWORD *)(v13 + 9664)) & 0x18)) ^ *(_DWORD *)(v13 + 8464))
        + (*(_DWORD *)(v13 + 9272) ^ v15)) ^ v261;
  v306 = *(_DWORD *)(v13 + 9036) ^ 0xFAFE2058;
  *(_DWORD *)(v13 + 8116) = v255;
  v307 = *(_DWORD *)(v13 + 9320) ^ 0xE62956F0;
  *(_DWORD *)(v13 + 8472) = v307;
  v308 = ((v255 ^ v15) + v306 + (v305 ^ v15) + 1 + v15 - (v18 & (2 * ((v255 ^ v15) + v306 + (v305 ^ v15) + 1)))) ^ v307;
  v309 = *(_DWORD *)(v13 + 9116);
  v310 = *(_DWORD *)(v13 + 8776);
  v311 = (v310 ^ 0x28852F4E)
       + (*(_DWORD *)(v13 + 9160) ^ 0xBF32FA74)
       + ((v308 + 1716276884 - ((2 * v308) & 0xCC989D28)) ^ *(_DWORD *)(v13 + 9240))
       + 1;
  v312 = v311 + v15 - (v18 & (2 * v311));
  v313 = *(_DWORD *)(v13 + 8784) ^ 0x2DC2DCE0;
  *(_DWORD *)(v13 + 9576) = v313;
  *(_DWORD *)(v13 + 8424) = v312;
  v314 = (v313 ^ v312) + (*(_DWORD *)(v13 + 8400) ^ 0x26FE09D9);
  v315 = (*(_DWORD *)(v13 + 9328) ^ 0x320B15C8) + ((v314 + v15 - (v18 & (2 * v314))) ^ *(_DWORD *)(v13 + 9384)) + 1;
  v316 = (v315 + v15 - (v18 & (2 * v315))) ^ *(_DWORD *)(v13 + 9688);
  v317 = *(_DWORD *)(v13 + 8936) ^ 0x4ABA678C;
  *(_DWORD *)(v13 + 8936) = v317;
  v318 = (*(_DWORD *)(v13 + 9004) ^ 0x40CD058B) + ((v316 + v15 - (v18 & (2 * v316))) ^ v317) + 1;
  v319 = v318 + v15 - (v18 & (2 * v318));
  v320 = (*(_DWORD *)(v13 + 8992) ^ 0xD043F1F9) + (*(_DWORD *)(v13 + 9040) ^ 0xFAFE2058);
  v321 = ((*(_DWORD *)(v13 + 9104) ^ 0xFAFE2058) + (v319 ^ v15) + 1) ^ *(_DWORD *)(v13 + 9176);
  *(_DWORD *)(v13 + 8764) = v321;
  v322 = v320 + (v321 ^ v15) + 1 + v15 - (v18 & (2 * (v320 + (v321 ^ v15) + 1)));
  v323 = (v309 ^ 0xFAFE2058) + (*(_DWORD *)(v13 + 9584) ^ v15);
  v324 = *(_DWORD *)(v13 + 8496);
  v325 = (*(_DWORD *)(v13 + 8548) ^ 0x40CD058B) + v323 + (v324 ^ 0xD51B989F) + (v322 ^ *(_DWORD *)(v13 + 8576)) + 2;
  v326 = v325 + v15 - (v18 & (2 * v325));
  v327 = *(_DWORD *)(v13 + 9680);
  v328 = *(_DWORD *)(v13 + 8608) ^ 0x865144F3;
  v329 = (*(_DWORD *)(v13 + 9264) ^ 0xFAFE2058) + (v303 ^ 0xFAFE2058) + v328;
  *(_DWORD *)(v13 + 8536) = v326;
  v330 = v329 + (v326 ^ v327) + 2 * ((v326 ^ v15) & (v327 ^ v15)) + 2;
  v331 = ((v330 - 261521148 - ((2 * v330) & 0xE0D30208)) ^ *(_DWORD *)(v13 + 8900)) + (*(_DWORD *)(v13 + 9520) ^ v15);
  v332 = v331 - 1087178124 - ((2 * v331) & 0x7E65F4E8);
  *(_DWORD *)(v13 + 8608) = v304;
  *(_DWORD *)(v13 + 8672) = v332;
  v333 = *(_DWORD *)(v13 + 8800);
  v334 = (v333 ^ 0xA2EF7748)
       + (*(_DWORD *)(v13 + 9464) ^ 0x2B1B3BB7 ^ ((v304 ^ 0x5E3DE770 ^ v332)
                                                + v15
                                                - (v18 & (2 * (v304 ^ 0x5E3DE770 ^ v332)))))
       + 1;
  v335 = *(_DWORD *)(v13 + 9480);
  v336 = ((*(_DWORD *)(v13 + 9080) ^ 0xFAFE2058) + ((v334 + v15 - (v18 & (2 * v334))) ^ *(_DWORD *)(v13 + 9360)) + 1) ^ *(_DWORD *)(v13 + 9416);
  *(_DWORD *)(v13 + 8260) = v336;
  v337 = (v336 ^ *(_DWORD *)(v13 + 9448)) + (*(_DWORD *)(v13 + 8984) ^ 0x41E65988);
  v338 = v337 + v15 - (v18 & (2 * v337));
  v339 = (*(_DWORD *)(v13 + 9616) ^ 0x286A1C3A) + (*(_DWORD *)(v13 + 9312) ^ v15);
  *(_DWORD *)(v13 + 8232) = v338;
  v340 = v339 + (v338 ^ v15) + 1 + v15 - (v18 & (2 * (v339 + (v338 ^ v15) + 1)));
  v341 = v335 ^ v15 ^ v340;
  v342 = *(_DWORD *)(v13 + 8980);
  v343 = v342 ^ 0xBC02D986 ^ v341;
  v344 = v343 ^ *(_DWORD *)(v13 + 9052);
  v345 = v344 + (*(_DWORD *)(v13 + 9208) ^ v15) + v15 - (v18 & (2 * (v344 + (*(_DWORD *)(v13 + 9208) ^ v15))));
  v346 = *(_DWORD *)(v13 + 8712) - 639585759;
  *(_DWORD *)(v13 + 9184) = v295 - 541072384;
  *(_DWORD *)(v13 + 9280) = v324 ^ 0x3414859B;
  *(_DWORD *)(v13 + 9120) = v346;
  *(_DWORD *)(v13 + 8632) = *(_DWORD *)(v13 + 9536) ^ v346 ^ 0x8D908BAD;
  v347 = v278 ^ 0x7729E067;
  *(_DWORD *)(v13 + 8712) = v281 ^ 0x25909B2;
  *(_DWORD *)(v13 + 8760) = v344 ^ 0x82AE027F;
  *(_DWORD *)(v13 + 8868) = *(_DWORD *)(v13 + 9136) ^ 0x477A694;
  *(_DWORD *)(v13 + 8440) = *(_DWORD *)(v13 + 8848) ^ 0xEB7E6402;
  *(_DWORD *)(v13 + 9192) = v310 ^ 0xEF3374;
  *(_DWORD *)(v13 + 8968) = *(_DWORD *)(v13 + 8840) ^ 0x70626B04;
  *(_DWORD *)(v13 + 9328) = *(_DWORD *)(v13 + 8308) ^ 0xFBDB04AB;
  *(_DWORD *)(v13 + 8816) = *(_DWORD *)(v13 + 9432) ^ 0xB4EA3D05;
  *(_DWORD *)(v13 + 8932) = v342 ^ 0x6E96E5E4;
  *(_DWORD *)(v13 + 8496) = v333 ^ 0x58115710;
  v348 = *(_DWORD *)(v13 + 9096) ^ 0x320CAFDD;
  *(_DWORD *)(v13 + 9504) = *(_DWORD *)(v13 + 9456) ^ 0x5C68D818;
  *(_DWORD *)(v13 + 8888) = v280 ^ 0xF82F48C;
  *(_DWORD *)(v13 + 7976) = v328;
  *(_DWORD *)(v13 + 9536) = *(_DWORD *)(v13 + 9296) ^ v328;
  *(_DWORD *)(v13 + 8728) = v345;
  *(_DWORD *)(v13 + 9056) = v345 ^ *(_DWORD *)(v13 + 9496) ^ 0xC81B1A13;
  v349 = (2096526145 * ((v344 & 3 ^ 3) + (v344 & 3))) ^ 0xE8D321B4;
  *(_DWORD *)(v13 + 9472) = v348;
  *(_DWORD *)(v13 + 8704) = v343;
  *(_DWORD *)(v13 + 8768) = v341;
  if (v349 > 289392437)
  {
    *(_DWORD *)(v13 + 8376) = v319;
    if (v349 == 289392438)
    {
      *(_DWORD *)(v13 + 8920) = v340;
      *(_DWORD *)(v13 + 9096) = v347;
      *(_DWORD *)(v13 + 8984) = *(_DWORD *)(v13 + 8032) ^ *(_DWORD *)(v13 + 8384) ^ 0xA787F905;
      *(_DWORD *)(v13 + 8488) = *(_DWORD *)(v13 + 8400) ^ 0x23FFD67E;
      *(_DWORD *)(v13 + 8432) = *(_DWORD *)(v13 + 8332) ^ 0xF4349BBA;
      *(_DWORD *)(v13 + 8356) = *(_DWORD *)(v13 + 8344) ^ 0x79122C35;
      *(_DWORD *)(v13 + 8980) = *(_DWORD *)(v13 + 8680) ^ 0x45CFCCAE;
      *(_DWORD *)(v13 + 8456) = v305 ^ 0x1DB4DCD6;
      *(_DWORD *)(v13 + 8992) = (*(_DWORD *)(v13 + 9736) ^ 0xFAFE2058) + 1;
      *(_DWORD *)(v13 + 9040) = *(_DWORD *)(v13 + 8512) ^ 0x7CB49536;
      *(_QWORD *)(v13 + 8032) = *(_DWORD *)(v13 + 9200) ^ 0x501DFA7u;
      *(_QWORD *)(v13 + 8408) = *(_DWORD *)(v13 + 7880) ^ 0x23u;
      *(_QWORD *)(v13 + 9128) = *(_DWORD *)(v13 + 7888) ^ 0x2Bu;
      *(_QWORD *)(v13 + 9432) = *(_DWORD *)(v13 + 8236) ^ 0x3F0A4ACAu;
      *(_QWORD *)(v13 + 8800) = *(_DWORD *)(v13 + 7832) ^ 0x51u;
      *(_QWORD *)(v13 + 9064) = *(_DWORD *)(v13 + 7904) ^ 4u;
      *(_DWORD *)(v13 + 8400) = *(_DWORD *)(v13 + 8952);
      *(_DWORD *)(v13 + 8360) = *(_DWORD *)(v13 + 9544);
      *(_DWORD *)(v13 + 8952) = *(_DWORD *)(v13 + 8868);
      *(_DWORD *)(v13 + 8640) = *(_DWORD *)(v13 + 8880);
      *(_DWORD *)(v13 + 9136) = *(_DWORD *)(v13 + 8440);
      *(_DWORD *)(v13 + 9320) = *(_DWORD *)(v13 + 8424);
      *(_DWORD *)(v13 + 8868) = *(_DWORD *)(v13 + 8504);
      JUMPOUT(0x10036BF5CLL);
    }
    if (v349 == 453700784)
      JUMPOUT(0x100361A54);
  }
  else
  {
    if (v349 == -388816460)
    {
      *(_DWORD *)(v13 + 9096) = v347;
      *(_DWORD *)(v13 + 8488) = *(_DWORD *)(v13 + 8400) ^ 0x23FFD67E;
      *(_DWORD *)(v13 + 8980) = *(_DWORD *)(v13 + 8680) ^ 0x45CFCCAE;
      *(_DWORD *)(v13 + 8456) = v305 ^ 0x1DB4DCD6;
      *(_DWORD *)(v13 + 8360) = *(_DWORD *)(v13 + 9544);
      JUMPOUT(0x1003555FCLL);
    }
    if (v349 == 85299762)
    {
      *(_DWORD *)(v13 + 9096) = v347;
      v350 = *(_DWORD *)(v13 + 6936) & 0xE0D7AB71;
      *(_DWORD *)(v13 + 8488) = *(_DWORD *)(v13 + 8400) ^ 0x23FFD67E;
      *(_DWORD *)(v13 + 8980) = *(_DWORD *)(v13 + 8680) ^ v350 ^ 0x45CFC58E;
      *(_DWORD *)(v13 + 8456) = v305 ^ 0x1DB4DCD6;
      *(_DWORD *)(v13 + 8360) = *(_DWORD *)(v13 + 9544);
      *(_QWORD *)(v13 + 9696) = *(_QWORD *)(v13 + 7584);
      *(_QWORD *)(v13 + 9432) = *(_QWORD *)(v13 + 7648);
      *(_QWORD *)(v13 + 9664) = *(_QWORD *)(v13 + 7808);
      *(_QWORD *)(v13 + 9640) = *(_QWORD *)(v13 + 7640);
      *(_QWORD *)(v13 + 9568) = *(_QWORD *)(v13 + 7776);
      *(_QWORD *)(v13 + 9448) = *(_QWORD *)(v13 + 7712);
      *(_QWORD *)(v13 + 9408) = *(_QWORD *)(v13 + 7632);
      *(_QWORD *)(v13 + 9600) = *(_QWORD *)(v13 + 7576);
      *(_QWORD *)(v13 + 9648) = *(_QWORD *)(v13 + 7856);
      *(_QWORD *)(v13 + 9496) = *(_QWORD *)(v13 + 7688);
      *(_QWORD *)(v13 + 9528) = *(_QWORD *)(v13 + 7624);
      *(_QWORD *)(v13 + 9584) = *(_QWORD *)(v13 + 7920);
      JUMPOUT(0x1003540A4);
    }
  }
  JUMPOUT(0x1003678ACLL);
}

uint64_t sub_10036B40C()
{
  unsigned __int8 v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)(v1 + 8944) = v2;
  v4 = *(unsigned int *)(v1 + 9248);
  v5 = *(unsigned int *)(v1 + 9152);
  v6 = *(unsigned int *)(v1 + 9296);
  v7 = *(unsigned int *)(v1 + 9400);
  v8 = *(unsigned int *)(v1 + 9016);
  *(_DWORD *)(v1 + 8904) = v3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(v1 + 9744) + 8 * (*(_DWORD *)(v1 + 8308) ^ (3658 * ((v0 ^ 0x8D) == *(_DWORD *)(v1 + 9224))))))(v6, v4, v5, *(unsigned int *)(v1 + 8832), v8, *(unsigned int *)(v1 + 9600), *(unsigned int *)(v1 + 9536), v7);
}

void sub_10036B4A4(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W6>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  _DWORD *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;

  v19 = v11[2008] ^ v15;
  v11[2290] = v12;
  v11[2256] = (v12 - 519107677) ^ a7;
  v20 = ((2 * v9) & 0xBFFFAFFA ^ 0x3CC0AC48) + (v11[2006] ^ 0x5AFE085A);
  v11[2264] = v19 ^ 0xA787F905;
  v11[2233] = v13 ^ 0xD795E3C5;
  v11[2332] = v8 ^ 0x501DFA7;
  v11[2174] = a6 ^ 0x501DFA7;
  v11[2266] = a4 ^ 0xBA3325D3;
  v11[2200] = a2 ^ 0x68A719B1;
  v11[2196] = v18 ^ 0x501DFA7;
  v11[2320] = v11[2326] ^ 0xE10F1D04;
  v11[2207] = v11[2225] ^ 0xBA3325D3;
  v11[2254] = v11[2164] ^ 0xD42A8B48;
  v11[2418] = a1 ^ 0xE40EC2A3;
  v11[2287] = v14 ^ 0xE10F1D04;
  v11[2251] = v11[2172] ^ 0x501DFA7;
  v11[2350] = v11[2282] ^ 0xBA3325D3;
  v11[2356] = v11[2158] ^ 0xD795E3C5;
  v11[2092] = v11[2176] ^ 0x43A3139F;
  v11[2194] = v11[2220] ^ 0x501DFA7;
  v11[2215] = v11[2153] ^ 0x339B2166;
  v11[2372] = v11[2218] ^ 0x6C3072FE;
  v11[2288] = v11[2190] ^ 0x82AE027F;
  v11[2382] = v9 ^ 0x501DFA7 ^ v17;
  v11[2253] = v20 - 72520836;
  v11[2252] = ((v9 & 0x458DEB55 ^ 0x4521C304) - ((2 * (v9 & 0x458DEB55 ^ 0x4521C304)) & 0x80029200) + 1645305224) ^ 0x27308A2E;
  v11[2158] = v7;
  v11[2153] = a3;
  v11[2234] = v16;
  v11[2154] = v10;
  v11[2191] = v11[2088];
  v11[2374] = v9;
  v11[2380] = v17;
  v11[2176] = v9;
  v11[2282] = a5;
  JUMPOUT(0x1003668E8);
}

void sub_10036D644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  int v183;
  uint64_t v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  unint64_t v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  int v223;
  int v224;
  uint64_t v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  uint64_t v234;
  int v235;
  int v236;
  uint64_t v237;
  BOOL v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  uint64_t v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  uint64_t v249;
  unsigned int v250;
  int v251;
  uint64_t v252;
  int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  int v260;

  *(_QWORD *)(v12 + 7712) = v20;
  *(_DWORD *)(v12 + 9408) = *(_DWORD *)(v12 + 8032) ^ v9;
  v21 = *(_DWORD *)(v12 + 8864);
  *(_DWORD *)(v12 + 9288) = v21 ^ 0xAEAE67A5 ^ (v8 + (*(_DWORD *)(v12 + 9576) ^ *(_DWORD *)(v12 + 8736)));
  v22 = *(_DWORD *)(v12 + 8688);
  v23 = ((v22 ^ 0x1DB4DCD6 ^ a8) + v19 - (v17 & (2 * (v22 ^ 0x1DB4DCD6 ^ a8)))) ^ *(_DWORD *)(v12 + 9528);
  v24 = (v23 + 1716276884 - (v18 & (2 * v23))) ^ *(_DWORD *)(v12 + 8440);
  v25 = (v24 + v19 - (v17 & (2 * v24))) ^ *(_DWORD *)(v12 + 9208);
  v26 = (v25 - 1087178124 - ((2 * v25) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 9160);
  v27 = (v26 - 1087178124 - ((2 * v26) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 8656);
  *(_QWORD *)(v12 + 9552) = v15;
  v28 = *(_DWORD *)(v12 + 8872);
  v29 = (v27 + v19 - (v17 & (2 * v27))) ^ v28;
  v30 = *(_DWORD *)(v12 + 8696);
  v31 = (((v29 + 1716276884 - (v18 & (2 * v29))) ^ v30)
       + v19
       - (v17 & (2 * ((v29 + 1716276884 - (v18 & (2 * v29))) ^ v30)))) ^ *(_DWORD *)(v12 + 9384);
  v32 = (v31 + v19 - (v17 & (2 * v31))) ^ *(_DWORD *)(v12 + 9656);
  v33 = (v32 - 519103228 - ((2 * v32) & 0xC21E3A08)) ^ *(_DWORD *)(v12 + 8968);
  v34 = (v33 + v19 - (v17 & (2 * v33))) ^ v11;
  v35 = (v34 + v19 - (v17 & (2 * v34))) ^ *(_DWORD *)(v12 + 9200);
  v36 = (v35 + v19 - (v17 & (2 * v35))) ^ *(_DWORD *)(v12 + 8504);
  v37 = (v36 + v19 - (v17 & (2 * v36))) ^ *(_DWORD *)(v12 + 8576);
  v38 = (v37 - 937747949 - ((2 * v37) & 0x90363426)) ^ *(_DWORD *)(v12 + 9720);
  v39 = *(_DWORD *)(v12 + 9156);
  v40 = (v38 + v19 - (v17 & (2 * v38))) ^ v39;
  v41 = *(_DWORD *)(v12 + 9128);
  v42 = (v40 + v19 - (v17 & (2 * v40))) ^ v41;
  v43 = (v42 + v19 - (v17 & (2 * v42))) ^ *(_DWORD *)(v12 + 9520);
  v44 = (v43 + v19 - (v17 & (2 * v43))) ^ *(_DWORD *)(v12 + 8212);
  v45 = (v44 + v19 - (v17 & (2 * v44))) ^ *(_DWORD *)(v12 + 8936);
  v46 = (v45 + v19 - (v17 & (2 * v45))) ^ *(_DWORD *)(v12 + 9104);
  v47 = (v46 + v19 - (v17 & (2 * v46))) ^ *(_DWORD *)(v12 + 9600);
  *(_DWORD *)(v12 + 8728) = v47 + v19 - (v17 & (2 * v47));
  v48 = (1 - *(_DWORD *)(v12 + 8020)) & 1;
  if ((v48 & (1 - *(_DWORD *)(v12 + 8456))) != 0)
    v48 = -v48;
  v49 = *(_DWORD *)(v12 + 9296) & 0xFFFFFFFE ^ (v48 + (*(_DWORD *)(v12 + 8432) ^ v19));
  v50 = ((v49 ^ *(_DWORD *)(v12 + 9648)) + v19 - 2 * ((v49 ^ *(_DWORD *)(v12 + 9648)) & (v19 + 8) ^ v49 & 8)) ^ *(_DWORD *)(v12 + 9016);
  v51 = *(_DWORD *)(v12 + 9568);
  v52 = (v50 + v19 - (v17 & (2 * v50))) ^ v51;
  v53 = (v52 - 1087178124 - ((2 * v52) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 8548);
  v54 = (v53 - 1087178124 - ((2 * v53) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 9172);
  v55 = (v54 - 1087178124 - ((2 * v54) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 9024);
  v56 = (v55 + v19 - (v17 & (2 * v55))) ^ *(_DWORD *)(v12 + 9464);
  v57 = (v56 + v19 - (v17 & (2 * v56))) ^ *(_DWORD *)(v12 + 9312);
  v58 = *(_DWORD *)(v12 + 9688);
  v59 = (v57 + v19 - (v17 & (2 * v57))) ^ v58;
  v60 = (v59 + v19 - (v17 & (2 * v59))) ^ *(_DWORD *)(v12 + 9368);
  v61 = *(_DWORD *)(v12 + 9416);
  v62 = (v60 + v19 - (v17 & (2 * v60))) ^ v61;
  v63 = (v62 + v19 - (v17 & (2 * v62))) ^ *(_DWORD *)(v12 + 8328);
  v64 = *(_DWORD *)(v12 + 8880);
  v65 = (v63 - 1087178124 - ((2 * v63) & 0x7E65F4E8)) ^ v64;
  v66 = (v65 + v19 - (v17 & (2 * v65))) ^ *(_DWORD *)(v12 + 9448);
  v67 = (v66 + v19 - (v17 & (2 * v66))) ^ *(_DWORD *)(v12 + 9424);
  v68 = (v67 + v19 - (v17 & (2 * v67))) ^ *(_DWORD *)(v12 + 9680);
  v69 = (v68 + v19 - (v17 & (2 * v68))) ^ *(_DWORD *)(v12 + 9328);
  v70 = (v69 + v19 - (v17 & (2 * v69))) ^ *(_DWORD *)(v12 + 9584);
  v71 = (v70 + v19 - (v17 & (2 * v70))) ^ *(_DWORD *)(v12 + 8752);
  v72 = (v71 - 519103228 - ((2 * v71) & 0xC21E3A08)) ^ *(_DWORD *)(v12 + 8312);
  v73 = (v72 + v19 - (v17 & (2 * v72))) ^ *(_DWORD *)(v12 + 9152);
  v74 = *(_DWORD *)(v12 + 8944);
  v75 = (v73 + v19 - (v17 & (2 * v73))) ^ v74;
  v76 = *(_DWORD *)(v12 + 9264);
  v77 = (v75 + v19 - (v17 & (2 * v75))) ^ v76;
  v78 = (v77 + v19 - (v17 & (2 * v77))) ^ *(_DWORD *)(v12 + 9036);
  v79 = *(_DWORD *)(v12 + 8792);
  v80 = (v78 + v19 - (v17 & (2 * v78))) ^ v79;
  v81 = (v80 + v19 - (v17 & (2 * v80))) ^ *(_DWORD *)(v12 + 9504);
  v82 = *(_DWORD *)(v12 + 9672);
  v83 = (v81 + 916127425 - ((2 * v81) & 0x6D35FD82)) ^ v82;
  *(_DWORD *)(v12 + 8664) = v83 + v19 - (v17 & (2 * v83));
  v84 = *(_DWORD *)(v12 + 7704) ^ *(_DWORD *)(v12 + 7964);
  *(_DWORD *)(v12 + 8616) = v84 ^ *(_DWORD *)(v12 + 9136);
  *(_DWORD *)(v12 + 9012) = v84 ^ 0x1A8F2671 ^ *(_DWORD *)(v12 + 8464);
  *(_DWORD *)(v12 + 9136) = v84 ^ 0x1A8F2671 ^ *(_DWORD *)(v12 + 9480);
  *(_DWORD *)(v12 + 8400) = v84 ^ 0xC3F19291 ^ *(_DWORD *)(v12 + 9004);
  v85 = *(_DWORD *)(v12 + 8188) ^ *(_DWORD *)(v12 + 8176);
  *(_DWORD *)(v12 + 8232) = v85 ^ 0x827729D3 ^ v64;
  *(_DWORD *)(v12 + 9004) = v85 ^ 0x827729D3 ^ *(_DWORD *)(v12 + 9696);
  *(_DWORD *)(v12 + 8672) = v84 ^ 0xC3F19291 ^ v21;
  *(_DWORD *)(v12 + 8640) = v84 ^ 0xC3F19291 ^ *(_DWORD *)(v12 + 8648);
  *(_DWORD *)(v12 + 9024) = v84 ^ 0xC3F19291 ^ *(_DWORD *)(v12 + 9304);
  v86 = v85 ^ 0x25F0D0D6 ^ v51;
  *(_DWORD *)(v12 + 8456) = v86;
  v87 = v85 ^ 0x25F0D0D6 ^ v22;
  *(_DWORD *)(v12 + 8264) = v87;
  *(_DWORD *)(v12 + 9496) = v85 ^ 0x9073A91 ^ *(_DWORD *)(v12 + 8920);
  *(_DWORD *)(v12 + 9304) = v85 ^ 0xEAD03062 ^ *(_DWORD *)(v12 + 9616);
  *(_DWORD *)(v12 + 9192) = v85 ^ 0xEAD03062 ^ *(_DWORD *)(v12 + 9272);
  *(_DWORD *)(v12 + 9480) = v85 ^ 0xDC4ACEA3 ^ *(_DWORD *)(v12 + 9632);
  v88 = v85 ^ 0xDC4ACEA3 ^ v39;
  *(_DWORD *)(v12 + 8968) = v88;
  v89 = v84 ^ 0x9DCC75E1 ^ v76;
  *(_DWORD *)(v12 + 9632) = v89;
  v90 = v84 ^ 0x9DCC75E1 ^ v74;
  *(_DWORD *)(v12 + 8312) = v90;
  v91 = v84 ^ 0x9DCC75E1 ^ v41;
  *(_DWORD *)(v12 + 8816) = v91;
  v92 = v85 ^ 0xBFEBD1D8 ^ v28;
  *(_DWORD *)(v12 + 8760) = v92;
  *(_DWORD *)(v12 + 9264) = v85 ^ 0xBFEBD1D8 ^ v61;
  v93 = (v30 ^ 0x634D9133 ^ v61) + v19 - (v17 & (2 * (v30 ^ 0x634D9133 ^ v61)));
  v94 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9312);
  *(_DWORD *)(v12 + 9376) = v94;
  v95 = v85 ^ 0x38440C00;
  v96 = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 9464);
  *(_DWORD *)(v12 + 9312) = v96;
  v97 = ((v93 ^ v96) - 1087178124 - ((2 * (v93 ^ v96)) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 9160);
  v98 = v85 ^ *(_DWORD *)(v12 + 8748) ^ 0xF5B0E637;
  *(_DWORD *)(v12 + 8748) = v98;
  v99 = (v97 + v19 - (v17 & (2 * v97))) ^ v98;
  v100 = v84 ^ *(_DWORD *)(v12 + 9368) ^ 0xFE6D6A9A;
  *(_DWORD *)(v12 + 8240) = v100;
  v101 = (v99 - 2102525313 - (v14 & (2 * v99))) ^ v100;
  v102 = v84 ^ 0x79C2B742 ^ v58;
  *(_DWORD *)(v12 + 9688) = v102;
  v103 = (v101 + v19 - (v17 & (2 * v101))) ^ v102;
  v104 = (v103 - 1087178124 - ((2 * v103) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 8656);
  v105 = (v104 - 1087178124 - ((2 * v104) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 8548);
  v106 = (v105 + v19 - (v17 & (2 * v105))) ^ v94;
  v107 = (v106 - 1087178124 - ((2 * v106) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 9172);
  v108 = (v107 - 2102525313 - (v14 & (2 * v107))) ^ v92;
  v109 = v84 ^ *(_DWORD *)(v12 + 8848) ^ 0xF1F14273;
  *(_DWORD *)(v12 + 8880) = v109;
  v110 = (v108 + v19 - (v17 & (2 * v108))) ^ v109;
  v111 = v85 ^ *(_DWORD *)(v12 + 8984) ^ 0x7CA38A2F;
  *(_DWORD *)(v12 + 8888) = v111;
  v112 = (v110 + v19 - (v17 & (2 * v110))) ^ v111;
  v113 = *(_DWORD *)(v12 + 8480);
  v114 = *(_DWORD *)(v12 + 8632);
  v115 = v85 ^ v82 ^ 0xC6C5E8D2;
  *(_DWORD *)(v12 + 9096) = v115;
  v116 = ((v113 ^ v114 ^ 0x90B767B2) - 937747949 - 2 * ((v113 ^ v114 ^ 0x90B767B2) & 0x481B1A17 ^ (v113 ^ v114) & 4)) ^ v115;
  v117 = v85 ^ 0x38440C00 ^ v79;
  *(_DWORD *)(v12 + 9568) = v117;
  v118 = (v116 + v19 - (v17 & (2 * v116))) ^ v117;
  *(_DWORD *)(v12 + 8704) = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9400);
  v119 = v84 ^ 0xB4D872F6 ^ *(_DWORD *)(v12 + 9720);
  *(_DWORD *)(v12 + 9400) = v119;
  *(_DWORD *)(v12 + 8376) = v85 ^ 0xF55EC9B4 ^ *(_DWORD *)(v12 + 8628);
  v120 = v84 ^ 0xB4D872F6 ^ *(_DWORD *)(v12 + 8432);
  *(_DWORD *)(v12 + 8628) = v120;
  v121 = ((v118 - 937747949 - ((2 * v118) & 0x90363426)) ^ v120)
       + v19
       - (v17 & (2 * ((v118 - 937747949 - ((2 * v118) & 0x90363426)) ^ v120)));
  v122 = v85 ^ *(_DWORD *)(v12 + 8808) ^ 0x7D9FB2C8;
  *(_DWORD *)(v12 + 8648) = v122;
  v123 = ((v121 ^ v122) - 519103228 - ((2 * (v121 ^ v122)) & 0xC21E3A08)) ^ v91;
  v124 = (v123 - 519103228 - ((2 * v123) & 0xC21E3A08)) ^ v88;
  v125 = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 9036);
  *(_DWORD *)(v12 + 8848) = v125;
  v126 = (v124 + v19 - (v17 & (2 * v124))) ^ v125;
  v127 = (v126 + v19 - (v17 & (2 * v126))) ^ v119;
  v128 = (v127 - 519103228 - ((2 * v127) & 0xC21E3A08)) ^ v90;
  v129 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9656);
  *(_DWORD *)(v12 + 9600) = v129;
  v130 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9520);
  *(_DWORD *)(v12 + 9656) = v130;
  v131 = (v128 + v19 - (v17 & (2 * v128))) ^ v130;
  v132 = (v131 - 519103228 - ((2 * v131) & 0xC21E3A08)) ^ v89;
  v133 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9152);
  *(_DWORD *)(v12 + 9152) = v133;
  v134 = (v132 + v19 - (v17 & (2 * v132))) ^ v133;
  v135 = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 9208);
  *(_DWORD *)(v12 + 9464) = v135;
  v136 = *(_DWORD *)(v12 + 8212) ^ v84;
  *(_DWORD *)(v12 + 9616) = v136;
  v136 ^= 0x79C2B742u;
  *(_DWORD *)(v12 + 9208) = v136;
  v137 = (v134 + v19 - (v17 & (2 * v134))) ^ v136;
  v138 = *(_DWORD *)(v12 + 8752);
  v139 = (v137 + v19 - (v17 & (2 * v137))) ^ v138;
  v140 = *(_DWORD *)(v12 + 9200);
  v141 = (v139 + v19 - (v17 & (2 * v139))) ^ v140;
  v142 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9584);
  *(_DWORD *)(v12 + 8864) = v142;
  v143 = (v141 + v19 - (v17 & (2 * v141))) ^ v142;
  *(_DWORD *)(v12 + 9128) = *(_DWORD *)(v12 + 8304) ^ 0x79A52892;
  v144 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 8504);
  *(_DWORD *)(v12 + 8304) = v144;
  v145 = (v143 + v19 - (v17 & (2 * v143))) ^ v144;
  v146 = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 9448);
  *(_DWORD *)(v12 + 8920) = v146;
  v147 = v85 ^ *(_DWORD *)(v12 + 8840) ^ 0xAC28A5A7;
  *(_DWORD *)(v12 + 9448) = v147;
  v148 = (v145 + v19 - (v17 & (2 * v145))) ^ v147;
  v149 = v84 ^ *(_DWORD *)(v12 + 9680) ^ 0x64766B94;
  *(_DWORD *)(v12 + 8984) = v149;
  v150 = (v148 + 414516081 - ((2 * v148) & 0x316A06E2)) ^ v149;
  v151 = v129 ^ v135 ^ (v112 + v19 - (v17 & (2 * v112))) ^ (v150 + v19 - (v17 & (2 * v150)));
  v152 = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 9384);
  *(_DWORD *)(v12 + 8328) = v152;
  v153 = (v151 + v19 - (v17 & (2 * v151))) ^ v152;
  v154 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9424);
  *(_DWORD *)(v12 + 8260) = v154;
  v155 = (v153 + v19 - (v17 & (2 * v153))) ^ v154;
  v156 = (v155 + v19 - (v17 & (2 * v155))) ^ *(_DWORD *)(v12 + 8232);
  *(_DWORD *)(v12 + 9584) = v85 ^ *(_DWORD *)(v12 + 8952);
  v157 = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 9528);
  *(_DWORD *)(v12 + 8952) = v157;
  v158 = (v156 + v19 - (v17 & (2 * v156))) ^ v157;
  v159 = (v158 + v19 - (v17 & (2 * v158))) ^ v146;
  v160 = v84 ^ *(_DWORD *)(v12 + 8488) ^ 0x87186C4E;
  *(_DWORD *)(v12 + 9424) = v160;
  v161 = (v159 + v19 - (v17 & (2 * v159))) ^ v160;
  v162 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9016);
  *(_DWORD *)(v12 + 8840) = v162;
  v163 = (v161 + v19 - (v17 & (2 * v161))) ^ v162;
  v164 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 8368);
  *(_DWORD *)(v12 + 8368) = v164;
  v165 = (v163 + 414516081 - ((2 * v163) & 0x316A06E2)) ^ v164;
  v166 = (v165 + 414516081 - ((2 * v165) & 0x316A06E2)) ^ v86;
  v167 = (v166 + 414516081 - ((2 * v166) & 0x316A06E2)) ^ v87;
  v168 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9360);
  *(_DWORD *)(v12 + 8768) = v168;
  v169 = (v167 + v19 - (v17 & (2 * v167))) ^ v168;
  v170 = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 8576);
  *(_DWORD *)(v12 + 8764) = v170;
  v171 = (v169 + v19 - (v17 & (2 * v169))) ^ v170;
  *(_DWORD *)(v12 + 9328) = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 8904);
  *(_DWORD *)(v12 + 8904) = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 8860);
  v172 = v85 ^ 0x38440C00 ^ *(_DWORD *)(v12 + 8936);
  *(_DWORD *)(v12 + 8860) = v172;
  v173 = (v171 + v19 - (v17 & (2 * v171))) ^ v172;
  *(_DWORD *)(v12 + 9368) = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 8736);
  *(_DWORD *)(v12 + 8464) = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9256);
  *(_DWORD *)(v12 + 9116) ^= v84 ^ 0x79C2B742;
  *(_DWORD *)(v12 + 8932) = v84 ^ 0x79C2B742 ^ v140;
  *(_DWORD *)(v12 + 9576) = v138 ^ v84 ^ 0x79C2B742;
  *(_DWORD *)(v12 + 9680) = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9148);
  *(_DWORD *)(v12 + 9520) = v84 ^ *(_DWORD *)(v12 + 9052);
  *(_DWORD *)(v12 + 9696) = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9040);
  *(_DWORD *)(v12 + 9036) = *(_DWORD *)(v12 + 0x2000) ^ v84 ^ 0x79C2B742;
  *(_DWORD *)(v12 + 9156) = *(_DWORD *)(v12 + 9224) ^ v84 ^ 0x79C2B742;
  *(_DWORD *)(v12 + 9052) = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 8744);
  v174 = v84 ^ 0x79C2B742 ^ *(_DWORD *)(v12 + 9176);
  *(_DWORD *)(v12 + 8792) = v174;
  v175 = (v173 + v19 - (v17 & (2 * v173))) ^ v174;
  v176 = *(_DWORD *)(v12 + 9104) ^ v84;
  *(_DWORD *)(v12 + 8868) = v176 ^ 0x79C2B742;
  v177 = (v175 + v19 - (v17 & (2 * v175))) ^ v176 ^ 0x79C2B742;
  *(_DWORD *)(v12 + 9536) = v85 ^ 0xF55EC9B4 ^ *(_DWORD *)(v12 + 9608);
  v178 = v85 ^ *(_DWORD *)(v12 + 9456) ^ 0xA93611AC;
  *(_DWORD *)(v12 + 9608) = v178;
  v179 = (v177 - 937747949 - ((2 * v177) & 0x90363426)) ^ v178;
  v180 = v85 ^ 0xF55EC9B4 ^ *(_DWORD *)(v12 + 8720);
  *(_DWORD *)(v12 + 9720) = v180;
  v181 = (v179 - 937747949 - ((2 * v179) & 0x90363426)) ^ v180;
  *(_DWORD *)(v12 + 8872) = v85 ^ *(_DWORD *)(v12 + 8832);
  *(_DWORD *)(v12 + 9592) ^= v85;
  *(_DWORD *)(v12 + 8832) = v85 ^ *(_DWORD *)(v12 + 8696);
  *(_DWORD *)(v12 + 9384) = v85 ^ *(_DWORD *)(v12 + 8776);
  *(_DWORD *)(v12 + 9360) = v85 ^ *(_DWORD *)(v12 + 8980);
  *(_DWORD *)(v12 + 9272) = v85 ^ *(_DWORD *)(v12 + 8784);
  *(_DWORD *)(v12 + 9256) = v85 ^ *(_DWORD *)(v12 + 9432);
  *(_DWORD *)(v12 + 8980) = v85 ^ *(_DWORD *)(v12 + 8360);
  *(_DWORD *)(v12 + 8944) = v85 ^ *(_DWORD *)(v12 + 8000);
  *(_DWORD *)(v12 + 8936) = v85 ^ *(_DWORD *)(v12 + 8332);
  *(_DWORD *)(v12 + 9416) = v85 ^ *(_DWORD *)(v12 + 7992);
  *(_DWORD *)(v12 + 9200) = v85 ^ *(_DWORD *)(v12 + 8352);
  *(_DWORD *)(v12 + 9432) = v85 ^ *(_DWORD *)(v12 + 9072);
  *(_DWORD *)(v12 + 9072) = v85 ^ v113;
  *(_DWORD *)(v12 + 9456) = v114 ^ v85;
  v182 = *(_DWORD *)(v12 + 9296);
  *(_DWORD *)(v12 + 9016) = v182 ^ v85;
  v183 = *(_DWORD *)(v12 + 9080);
  *(_DWORD *)(v12 + 9672) = v182 ^ 0x339B2166 ^ v183 ^ (v181 + v19 - (v17 & (2 * v181)));
  v184 = *(_DWORD *)(v12 + 7888) ^ 0x2Bu;
  v185 = *(_DWORD *)(v12 + 8900) ^ 0xF0698104;
  v186 = *(_QWORD *)(v12 + 9552);
  v187 = v186 << (*(_DWORD *)(v12 + 7888) ^ 0x2Bu);
  *(_QWORD *)(v12 + 9528) = v187;
  v188 = *(_QWORD *)(v12 + 8408);
  v189 = ((unint64_t)(v185 & (v16 >> v188)) << v188) ^ ((unint64_t)(v185 & v187) >> v184);
  v190 = *(_DWORD *)(v12 + 8496);
  v191 = *(_DWORD *)(v12 + 8132);
  v192 = (2 * v191) ^ 0x316A06E2;
  v193 = v192 & (4 * ((v189 ^ (2 * (v189 & v190))) & v190)) ^ v189 ^ (2 * (v189 & v190));
  v194 = v192 & (4 * (((2 * v191) ^ 0x316A06E0) & (v191 ^ 0x18B50370)));
  *(_DWORD *)(v12 + 9148) = v194;
  *(_DWORD *)(v12 + 8752) = v191 ^ 0x8B50371;
  *(_DWORD *)(v12 + 8900) = v194 & (16 * (v193 & (v191 ^ 0x8B50371))) ^ v193;
  v195 = *(_DWORD *)(v12 + 9488) ^ 0x6C3072FE;
  v196 = *(_DWORD *)(v12 + 8392) ^ 0x95B57F03;
  v197 = *(_QWORD *)(v12 + 8800);
  *(_QWORD *)(v12 + 9488) = v196 << v197;
  v198 = v196;
  *(_QWORD *)(v12 + 9040) = v196;
  v199 = (unint64_t)(v195 & (v196 << v197)) >> v197;
  v200 = *(_DWORD *)(v12 + 8236) ^ 0x3F0A4ACAu;
  *(_QWORD *)(v12 + 9296) = v200;
  v201 = *(_QWORD *)(v12 + 9064);
  v202 = v200 >> v201;
  *(_QWORD *)(v12 + 8632) = v202;
  v203 = v199 + ((unint64_t)(v195 & v202) << v201);
  v204 = *(_DWORD *)(v12 + 7952);
  v205 = v204 ^ 0x59CBA9E0;
  v206 = *(_DWORD *)(v12 + 8040);
  v207 = v206 ^ 0xB39753C0;
  v208 = (v206 ^ 0xB39753C0) & (4 * ((v203 ^ (2 * (v203 & (v204 ^ 0x59CBA9E0)))) & (v204 ^ 0x19CBA9E0))) ^ v203 ^ (2 * (v203 & (v204 ^ 0x59CBA9E0)));
  v206 ^= 0x339753C0u;
  v209 = v207 & (4 * (v206 & (v204 ^ 0x19CBA9E0)));
  *(_DWORD *)(v12 + 8736) = v209;
  *(_DWORD *)(v12 + 8744) = v208 ^ 0x501DFA7 ^ v209 & (16 * (v208 & (v204 ^ 0x9CBA9E0)));
  *(_QWORD *)(v12 + 8696) = v198 << v184;
  v210 = ((unint64_t)(*(_DWORD *)(v12 + 7984) & (v198 << v184)) >> v184) | ((unint64_t)(*(_DWORD *)(v12 + 7984) & v202) << v201);
  v211 = (2 * (((v210 + 84008871 - ((2 * v210) & 0xA03BF4E)) ^ 0x501DFA7) & (v204 ^ 0x59CBA9E0))
        + 84008871
        - ((4 * (((v210 + 84008871 - ((2 * v210) & 0xA03BF4E)) ^ 0x501DFA7) & (v204 ^ 0x59CBA9E0))) & 0xA03BF4C)) ^ (v210 + 84008871 - ((2 * v210) & 0xA03BF4E));
  v212 = v207 & (4 * (v211 & (v204 ^ 0x19CBA9E0))) ^ v211;
  v213 = v205 & (2 * (v206 & v205)) & (8 * (v212 & (v204 ^ 0x19CBA9E0))) ^ 0xC0010;
  LODWORD(v198) = *(_DWORD *)(v12 + 8964);
  v214 = (unint64_t)(v198 & (v186 << v197)) >> v197;
  LODWORD(v202) = v214 - 762037150 - ((2 * v214) & 0xA52878C4);
  *(_DWORD *)(v12 + 9320) ^= v84;
  *(_DWORD *)(v12 + 8776) = v84 ^ *(_DWORD *)(v12 + 8992);
  *(_DWORD *)(v12 + 9392) ^= v84;
  *(_DWORD *)(v12 + 8808) = v84 ^ *(_DWORD *)(v12 + 8512);
  *(_DWORD *)(v12 + 8784) = v84 ^ *(_DWORD *)(v12 + 8520);
  *(_DWORD *)(v12 + 8992) = v84 ^ *(_DWORD *)(v12 + 8680);
  *(_DWORD *)(v12 + 9440) ^= v84;
  v84 ^= 0x7CC368E5u;
  *(_DWORD *)(v12 + 8360) = v84 ^ *(_DWORD *)(v12 + 7976);
  v215 = (v176 ^ 0x7CC368E5) + (v84 ^ *(_DWORD *)(v12 + 8912));
  *(_DWORD *)(v12 + 8912) = (2 * ((v213 | 0x5790A177) - (v213 | 0x286F5E88)) + 1356774672) ^ v212;
  LODWORD(v214) = v16 >> v188;
  LODWORD(v202) = (v202 ^ 0xD2943C62) + ((unint64_t)(v198 & v214) << v188);
  LODWORD(v198) = v192 & (4 * ((v202 ^ (2 * (v202 & v190))) & v190)) ^ v202 ^ (2 * (v202 & v190));
  *(_DWORD *)(v12 + 9240) ^= v95;
  *(_DWORD *)(v12 + 8828) ^= v95;
  *(_DWORD *)(v12 + 8688) = v95 ^ *(_DWORD *)(v12 + 8552);
  *(_DWORD *)(v12 + 8552) = v95 ^ *(_DWORD *)(v12 + 8612);
  *(_DWORD *)(v12 + 9224) = v95 ^ v183;
  *(_DWORD *)(v12 + 9080) = *(_DWORD *)(v12 + 9176) ^ v183;
  LODWORD(v202) = (v176 ^ 0x833C971A) + ((v215 + 84008871 - ((2 * v215) & 0xA03BF4E)) ^ 0x501DFA7) + 1;
  *(_DWORD *)(v12 + 9176) = v202 + 84008871 - ((2 * v202) & 0xA03BF4E);
  v216 = *(_DWORD *)(v12 + 8752);
  v217 = *(_DWORD *)(v12 + 9148);
  *(_DWORD *)(v12 + 9504) = v198 ^ 0x501DFA7 ^ v217 & (16 * (v198 & v216));
  LODWORD(v202) = ((unint64_t)((*(_DWORD *)(v12 + 9008) ^ 0x501DFA7) & *(_QWORD *)(v12 + 9528)) >> v184) | ((unint64_t)((*(_DWORD *)(v12 + 9008) ^ 0x501DFA7) & v214) << v188);
  LODWORD(v202) = v192 & (4 * ((v202 ^ (2 * (v202 & v190))) & v190)) ^ v202 ^ (2 * (v202 & v190));
  v218 = v216;
  v219 = v217 & (16 * (v202 & v216)) ^ v202;
  v220 = *(_QWORD *)(v12 + 8632);
  v221 = *(_QWORD *)(v12 + 9064);
  LODWORD(v202) = ((unint64_t)(*(_DWORD *)(v12 + 9184) & *(_QWORD *)(v12 + 9488)) >> v197) ^ ((unint64_t)(*(_DWORD *)(v12 + 9184) & v220) << v221);
  LODWORD(v202) = v207 & (4 * ((v202 ^ (2 * (v202 & v205))) & (v204 ^ 0x19CBA9E0))) ^ v202 ^ (2 * (v202 & v205));
  v222 = *(_DWORD *)(v12 + 8736);
  *(_DWORD *)(v12 + 8532) = v202 ^ 0x501DFA7 ^ v222 & (16 * (v202 & (v204 ^ 0x9CBA9E0)));
  LODWORD(v202) = ((unint64_t)((*(_DWORD *)(v12 + 9736) ^ 0x501DFA7) & *(_QWORD *)(v12 + 8696)) >> v184) ^ ((unint64_t)((*(_DWORD *)(v12 + 9736) ^ 0x501DFA7) & v220) << v221);
  v223 = v217 & (16 * ((v192 & (4 * ((v202 ^ (2 * (v202 & v190))) & v190)) ^ v202 ^ (2 * (v202 & v190))) & v218)) ^ v192 & (4 * ((v202 ^ (2 * (v202 & v190))) & v190)) ^ v202 ^ (2 * (v202 & v190));
  LODWORD(v202) = ((unint64_t)(*(_DWORD *)(v12 + 9248) & v214) << v188) ^ ((unint64_t)(*(_DWORD *)(v12 + 9248) & (v186 << v197)) >> v197);
  LODWORD(v199) = 2 * (v202 & (v204 ^ 0x59CBA9E0));
  v224 = v205 & (2 * ((v199 ^ v202) & v205)) ^ 0x88340E90;
  LODWORD(v202) = v202 ^ (2
                        * ((2142487131 - (v224 | 0x7FB3C25B) + (v224 | 0x4C3DA4)) ^ ((v202 & (v204 ^ 0x59CBA9E0))
                                                                                   + 84008871
                                                                                   - (v199 & 0xA03BF4E))));
  *(_DWORD *)(v12 + 9148) = v202 ^ 0x1FF20681 ^ v222 & (16 * ((v202 ^ 0xAF3D926) & (v204 ^ 0x9CBA9E0)));
  LODWORD(v202) = (2 * ((*(_DWORD *)(v12 + 9640) ^ 0x6D05768C) & v190)
                 - 318409076
                 - (v13 & (4 * ((*(_DWORD *)(v12 + 9640) ^ 0x6D05768C) & v190)))) ^ *(_DWORD *)(v12 + 9640);
  v225 = *(_QWORD *)(v12 + 9040);
  LODWORD(v202) = ((unint64_t)(v202 & v225) << v197) | ((unint64_t)(v202 & v16) >> v221);
  *(_DWORD *)(v12 + 9488) = v202 + 1815114494 - ((2 * v202) & 0xD860E5FC);
  LODWORD(v202) = *(_DWORD *)(v12 + 9104) ^ *(_DWORD *)(v12 + 8432);
  LODWORD(v202) = (v202 - 937747949 - ((2 * v202) & 0x90363426)) ^ *(_DWORD *)(v12 + 9720);
  LODWORD(v202) = *(_DWORD *)(v12 + 9096) ^ (v202 - 937747949 - ((2 * v202) & 0x90363426));
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8792);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8860);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9568);
  LODWORD(v202) = (v202 - 937747949 - ((2 * v202) & 0x90363426)) ^ *(_DWORD *)(v12 + 9608);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9656);
  v226 = *(_DWORD *)(v12 + 8848);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ v226;
  LODWORD(v202) = (v202 - 519103228 - ((2 * v202) & 0xC21E3A08)) ^ *(_DWORD *)(v12 + 8816);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9152);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8764);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8864);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9400);
  LODWORD(v202) = (v202 - 519103228 - ((2 * v202) & 0xC21E3A08)) ^ *(_DWORD *)(v12 + 8312);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8932);
  LODWORD(v202) = (v202 - 519103228 - ((2 * v202) & 0xC21E3A08)) ^ *(_DWORD *)(v12 + 9632);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8648);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9576);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8260);
  v227 = *(_DWORD *)(v12 + 8840);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ v227;
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8888);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9600);
  *(_DWORD *)(v12 + 9528) = v10 ^ 0x273;
  v228 = *(_DWORD *)(v12 + 9128) ^ v10 ^ 0x273;
  LODWORD(v202) = v228 ^ (v202 + 1396432010 - ((2 * v202) & 0xA677B914));
  LODWORD(v202) = (v202 - 1087178124 - ((2 * v202) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 8548);
  LODWORD(v202) = (v202 - 1087178124 - ((2 * v202) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 8656);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9376);
  LODWORD(v202) = (v202 - 1087178124 - ((2 * v202) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 9160);
  LODWORD(v202) = (v202 - 1087178124 - ((2 * v202) & 0x7E65F4E8)) ^ *(_DWORD *)(v12 + 9172);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8748);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9312);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9688);
  LODWORD(v202) = (v202 - 2102525313 - ((2 * v202) & 0x55C04FE)) ^ *(_DWORD *)(v12 + 8240);
  LODWORD(v202) = (v202 - 2102525313 - ((2 * v202) & 0x55C04FE)) ^ *(_DWORD *)(v12 + 8760);
  v229 = *(_DWORD *)(v12 + 9264);
  LODWORD(v202) = (v202 - 2102525313 - ((2 * v202) & 0x55C04FE)) ^ v229;
  v230 = *(_DWORD *)(v12 + 8880);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ v230;
  v231 = *(_DWORD *)(v12 + 8832) ^ 0xDCA640EB;
  LODWORD(v202) = (v202 - 2102525313 - ((2 * v202) & 0x55C04FE)) ^ v231;
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8328);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8952);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9464);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8232);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8920);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9424);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 9448);
  LODWORD(v202) = (v202 + 414516081 - ((2 * v202) & 0x316A06E2)) ^ *(_DWORD *)(v12 + 8368);
  LODWORD(v202) = (v202 + 414516081 - ((2 * v202) & 0x316A06E2)) ^ *(_DWORD *)(v12 + 8456);
  LODWORD(v202) = (v202 + 414516081 - ((2 * v202) & 0x316A06E2)) ^ *(_DWORD *)(v12 + 8984);
  LODWORD(v202) = (v202 + 414516081 - ((2 * v202) & 0x316A06E2)) ^ *(_DWORD *)(v12 + 8264);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8768);
  LODWORD(v202) = (v202 + 84008871 - ((2 * v202) & 0xA03BF4E)) ^ *(_DWORD *)(v12 + 8304);
  LODWORD(v202) = (v202 - 519103228 - ((2 * v202) & 0xC21E3A08)) ^ *(_DWORD *)(v12 + 8968);
  v232 = *(_DWORD *)(v12 + 8900);
  *(_DWORD *)(v12 + 8964) = v232 ^ 0x501DFA7;
  v233 = (2 * (v232 & v205) + 84008871 - ((4 * (v232 & v205)) & 0xA03BF4C)) ^ v232 ^ 0x501DFA7;
  v234 = *(_QWORD *)(v12 + 9296);
  LODWORD(v220) = *(_DWORD *)(v12 + 8912);
  *(_DWORD *)(v12 + 8912) = v220 ^ 0xAA389D69;
  LODWORD(v201) = (2 * ((v220 ^ 0x2F3942CE) & v190) + 84008871 - ((4 * ((v220 ^ 0x2F3942CE) & v190)) & 0xA03BF4C)) ^ v220 ^ 0xAA389D69;
  *(_DWORD *)(v12 + 8480) = v204 ^ 0x59CBA9E0;
  v235 = ((unint64_t)((((v219 ^ (2 * (v219 & v205))) & v234)
                            + 84008871
                            - ((2 * ((v219 ^ (2 * (v219 & v205))) & v234)) & 0xA03BF4E)) ^ 0x501DFA7) >> v188) | ((unint64_t)((v219 ^ (2 * (v219 & v205))) & v186) << v184);
  LODWORD(v220) = 2 * (v223 & v190) + 84008871 - ((4 * (v223 & v190)) & 0xA03BF4C);
  v223 ^= 0x501DFA7u;
  *(_DWORD *)(v12 + 9008) = v223;
  *(_QWORD *)(v12 + 9128) = v184;
  v236 = ((unint64_t)((v220 ^ v223) & v225) << v184)
       + ((unint64_t)((v220 ^ v223) & v234) >> v188);
  v237 = *(_QWORD *)(v12 + 7792);
  LODWORD(v220) = *(unsigned __int8 *)(v237 + (*(_QWORD *)(v12 + 7920) ^ 0xE8) + 5243);
  LODWORD(v220) = v220 ^ ((v220 ^ 0x9C) >> 5) ^ ((v220 ^ 0x9C) >> 4) ^ 0x2B;
  v238 = v220 == 0;
  v239 = v236 ^ (((unint64_t)(v233 & v186) << v184)
               + ((unint64_t)(v233 & v234) >> v188)) ^ v235 ^ (((unint64_t)((980186609 - (v201 & v16 ^ 0x212C4220 | 0x3A6C75F1) + (v201 & v16 ^ 0x212C4220 | 0xC5938A0E)) ^ 0xE4BFC82E) >> v221) | ((unint64_t)(v201 & v225) << v197));
  v240 = *(_DWORD *)(v12 + 9072) ^ 0x3F1CDA15;
  *(_DWORD *)(v12 + 8212) = v240;
  v241 = (v239 + 84008871 - ((2 * v239) & 0xA03BF4E)) ^ v240;
  v242 = *(_DWORD *)(v12 + 9016);
  LODWORD(v202) = *(_DWORD *)(v12 + 9616) ^ v242 ^ (v241 - 762037150 - ((2 * v241) & 0xA52878C4)) ^ 0x96135887 ^ (v202 + 84008871 - ((2 * v202) & 0xA03BF4E));
  v243 = v202 + 84008871 - ((2 * v202) & 0xA03BF4E);
  v244 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 8080)
                            + (((8 * v220) | (v220 >> 5)) ^ 0xFALL))
       + (((8 * v220) | (v220 >> 5)) ^ 0x23)
       + (((8 * v220) | (v220 >> 5)) ^ 0x22);
  v245 = 12;
  if (!v238)
    v245 = 3;
  v246 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 7848) + v245) ^ 0xFFFFFFB3;
  if ((_BYTE)v246)
    v247 = *(unsigned __int8 *)(v237 + (*(_QWORD *)(v12 + 7776) ^ 0x9ALL) + 1067) ^ 0x15;
  else
    v247 = *(_QWORD *)(v12 + 7776);
  v248 = 5 * v246;
  if ((_BYTE)v247)
    v248 = 0;
  v249 = *(_QWORD *)(v12 + 7568);
  if ((_BYTE)v248)
    v249 = *(unsigned __int8 *)(v237 + (*(_QWORD *)(v12 + 7568) ^ 0xA3) + 4713) ^ 0x5Au;
  else
    v249 = v249;
  v250 = (*(_BYTE *)(v237 + (*(_QWORD *)(v12 + 7536) ^ 0x63) + 16) + 11);
  v251 = (*(unsigned __int8 *)(v237 + (*(_QWORD *)(v12 + 7536) ^ 0x63) + 16) + 11) ^ (v250 >> 7) ^ (v250 >> 3);
  *(_QWORD *)(v12 + 7864) = v249;
  if ((_BYTE)v249)
    v252 = 0;
  else
    v252 = v248;
  *(_QWORD *)(v12 + 7568) = v252;
  *(_QWORD *)(v12 + 7944) = v251 ^ 0x1Au;
  *(_DWORD *)(v12 + 8900) = *(_DWORD *)(v12 + 8720) ^ *(_DWORD *)(v12 + 8712) ^ 0xFB059E3B ^ *(_DWORD *)(v12 + 8664);
  v253 = *(_DWORD *)(v12 + 9456);
  *(_DWORD *)(v12 + 8520) = v253 ^ *(_DWORD *)(v12 + 9224) ^ 0xAC90944B ^ v243;
  *(_DWORD *)(v12 + 9072) = *(_DWORD *)(v12 + 9080) ^ 0x507A0FD1 ^ *(_DWORD *)(v12 + 8728);
  v254 = *(_DWORD *)(v12 + 9408) ^ 0xD27D5E2;
  *(_DWORD *)(v12 + 8632) = *(_DWORD *)(v12 + 9584) ^ 0xA4A5A6E6;
  *(_DWORD *)(v12 + 8536) = *(_DWORD *)(v12 + 8872) ^ 0x37C6F88C;
  *(_DWORD *)(v12 + 9592) ^= 0x8F9194C2;
  *(_DWORD *)(v12 + 9248) = *(_DWORD *)(v12 + 8616) ^ 0x7DB511D6;
  v255 = *(_DWORD *)(v12 + 8776) ^ 0xCFCD082F;
  *(_DWORD *)(v12 + 9392) ^= 0x14353603u;
  v256 = *(_DWORD *)(v12 + 9384) ^ 0xEA3F0316;
  *(_DWORD *)(v12 + 9384) = *(_DWORD *)(v12 + 9360) ^ 0x81470A21;
  *(_DWORD *)(v12 + 9360) = *(_DWORD *)(v12 + 9272) ^ 0x1586D0E0;
  v257 = *(_DWORD *)(v12 + 9256) ^ 0x68A0F3A6;
  *(_DWORD *)(v12 + 9408) = *(_DWORD *)(v12 + 8980) ^ 0x723A1279;
  *(_DWORD *)(v12 + 9256) = *(_DWORD *)(v12 + 8944) ^ 0x3D45D3A7;
  *(_DWORD *)(v12 + 8432) = *(_DWORD *)(v12 + 8936) ^ 0xCC7097BA;
  *(_DWORD *)(v12 + 9616) = *(_DWORD *)(v12 + 9520) ^ 0xAB568B20;
  *(_DWORD *)(v12 + 9272) = *(_DWORD *)(v12 + 9416) ^ 0x93C21C57;
  *(_DWORD *)(v12 + 8664) = *(_DWORD *)(v12 + 9200) ^ 0x1EBA05D9;
  *(_DWORD *)(v12 + 8356) = *(_DWORD *)(v12 + 8808) ^ 0x77FDD3;
  *(_DWORD *)(v12 + 8152) = *(_DWORD *)(v12 + 8784) ^ 0x6177B433;
  v258 = *(_DWORD *)(v12 + 9432) ^ 0x6653C349;
  *(_DWORD *)(v12 + 9584) = v242 ^ 0x38440C00;
  *(_DWORD *)(v12 + 8612) = *(_DWORD *)(v12 + 8992) ^ 0x3C0D7BEC;
  v259 = *(_DWORD *)(v12 + 9320) ^ 0x9FEBE1B2;
  v260 = *(_DWORD *)(v12 + 9440) ^ 0xDD38588;
  *(_DWORD *)(v12 + 0x2000) = v253 ^ 0xAFABBDA7;
  *(_DWORD *)(v12 + 8944) = v219 ^ 0x501DFA7;
  *(_QWORD *)(v12 + 7824) = 115 * ((v244 + 1) ^ 0xFFFFFFCB);
  *(_QWORD *)(v12 + 9432) = v234;
  *(_DWORD *)(v12 + 8752) = v259;
  *(_DWORD *)(v12 + 9520) = v226;
  *(_DWORD *)(v12 + 9200) = v257;
  *(_DWORD *)(v12 + 9440) = v231;
  *(_DWORD *)(v12 + 9456) = v254;
  *(_DWORD *)(v12 + 9080) = *(_DWORD *)(v12 + 9176);
  *(_DWORD *)(v12 + 9320) = v227;
  *(_DWORD *)(v12 + 9416) = *(_DWORD *)(v12 + 9600);
  *(_DWORD *)(v12 + 9016) = v256;
  *(_DWORD *)(v12 + 8808) = v229;
  *(_DWORD *)(v12 + 9296) = v260;
  *(_DWORD *)(v12 + 8736) = v230;
  *(_DWORD *)(v12 + 8680) = v228;
  *(_DWORD *)(v12 + 9104) = v258;
  *(_DWORD *)(v12 + 8696) = v255;
  *(_DWORD *)(v12 + 9184) = 1538081657;
  *(_DWORD *)(v12 + 9600) = 84008871;
  *(_DWORD *)(v12 + 7552) = v247;
  JUMPOUT(0x10035F6B8);
}

void sub_10036F48C()
{
  JUMPOUT(0x100361904);
}

uint64_t sub_10036F5E8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  unint64_t v4;

  *(_QWORD *)(v0 + 9688) = *(_QWORD *)(v0 + 12328);
  v2 = *(_DWORD *)(v0 + 8352);
  v3 = -333269657
     * ((*(_DWORD *)(**(_QWORD **)(v0 + 9088) + (int)(**(_DWORD **)(v0 + 9216) & ((v2 + 2059600805) ^ 0xB0952ABC))) ^ (*(_QWORD *)(v0 + 8248) + 40988)) & 0x7FFFFFFF);
  v4 = -333269657 * (v3 ^ HIWORD(v3));
  **(_BYTE **)(v0 + 9232) = *((_BYTE *)*(&off_1004ECA20 + (int)(v2 ^ 0x853D10EE)) + (v4 >> 24) - 12) ^ *((_BYTE *)*(&off_1004ECA20 + (int)(v2 ^ 0x853D12BB)) + (v4 >> 24) - 12) ^ *((_BYTE *)*(&off_1004ECA20 + v2 + 2059596320) + (v4 >> 24) - 8) ^ v4 ^ (7 * BYTE3(v4));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * ((v2 + 2059603664) ^ 0x1F1)) - 12))(2059600627);
}

void sub_10036F714()
{
  JUMPOUT(0x10036F644);
}

uint64_t sub_10036F724@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;

  *(_QWORD *)(v1 + 9696) = 0;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8 * ((14735 * ((a1 ^ 0x7F) + 131148856 != *(_DWORD *)(v1 + 3220) >> 4)) ^ a1))
                         - 4);
  v5 = *(_QWORD *)(v2 + 8 * (a1 ^ 0x12F5));
  *(_QWORD *)(v1 + 9720) = *(_QWORD *)(v2 + 8 * (a1 - 5021)) - 12;
  *(_QWORD *)(v1 + 9736) = v5 - 4;
  *(_QWORD *)(v1 + 9728) = *(_QWORD *)(v2 + 8 * (a1 - 4074)) - 4;
  return v4();
}

uint64_t sub_10036F7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 + 9704) = 0;
  *(_QWORD *)(v6 + 9696) = v5;
  v9 = *(_QWORD *)(v6 + 7232);
  *v7 ^= **(_BYTE **)(v6 + 9688);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v8
                                                                                                  + 40 * (v4 ^ 0x1124))
                                                                                      - 12))(v9, a2, a3, a4, 959751060, (__n128)0);
}

uint64_t sub_10036F828@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + v1) ^= *(_BYTE *)(v2 + v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v1 == 15) * v3) ^ a1)) - 12))();
}

uint64_t sub_10036F858(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned int v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _DWORD *v16;
  unsigned int v17;
  unint64_t v18;

  *(__n128 *)(v11 + 3540) = a1;
  *(__n128 *)(v11 + 3556) = a1;
  v17 = ((*(_DWORD *)(*v14 + (*v16 & (a6 + ((v9 + 1229320773) & 0xB6BA0E5D) - 2637))) ^ ((_DWORD)v10 + 1692500574)) & 0x7FFFFFFF)
      * v13;
  v18 = (v17 ^ HIWORD(v17)) * v13;
  *a5 = *(_BYTE *)(a7 + (v18 >> 24)) ^ *v10 ^ *(_BYTE *)((v18 >> 24) + a8 + 1) ^ *(_BYTE *)(a9 + (v18 >> 24)) ^ v18 ^ (BYTE3(v18) * v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * v9) - 8))();
}

uint64_t sub_10036F920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unsigned int a3@<W4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  int v7;
  char v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  _DWORD *v12;
  unsigned int v13;
  unint64_t v14;

  v13 = ((*(_DWORD *)(*v10 + (*v12 & a3)) ^ (a1 + a7)) & 0x7FFFFFFF) * v9;
  v14 = (v13 ^ HIWORD(v13)) * v9;
  *(_BYTE *)(a2 + a7) = *(_BYTE *)(a4 + (v14 >> ((-72 * (v7 ^ 0x4F)) ^ 0x68u))) ^ *(_BYTE *)(a1
                                                                                           + a7
                                                                                           - 0x615AA8BF64E1825ELL) ^ *(_BYTE *)((v14 >> ((-72 * (v7 ^ 0x4F)) ^ 0x68u)) + a5 + 1) ^ *(_BYTE *)(a6 + (v14 >> ((-72 * (v7 ^ 0x4F)) ^ 0x68u))) ^ v14 ^ ((v14 >> ((-72 * (v7 ^ 0x4F)) ^ 0x68u)) * v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((27 * (a7 != 31)) ^ v7)) - 8))();
}

uint64_t sub_10036F9C8()
{
  int v0;
  _QWORD *v1;
  int v2;
  char v3;
  _BYTE *v4;
  _QWORD *v5;
  uint64_t v6;
  int *v7;
  int v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;

  v8 = 50 * (v0 ^ 0x157D);
  v9 = ((v4 ^ *(_DWORD *)(*v5 + ((v8 ^ 0xFFFFFFFFB0953B8ALL) & *v7))) & 0x7FFFFFFF) * v2;
  v10 = (v9 ^ HIWORD(v9)) * (v2 + ((v8 + 1580270553) & 0xA1CEFBDF) - 579);
  v11 = v10 >> (3 * (v8 ^ 0x4Bu) - 43);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((42
                                          * (((*(_BYTE *)(v1[1215] + v11) ^ *v4 ^ *(_BYTE *)(v1[1217] + v11) ^ *(_BYTE *)(v11 + v1[1216] + 4) ^ v10 ^ (v11 * v3)) >> 7) & 1)) ^ v8))
                            - 8))();
}

uint64_t sub_10036FAB4@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  unsigned __int8 *v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unint64_t v20;

  v5 = v3[1456];
  v3[3540] ^= v5;
  v6 = v3[1457];
  v3[3541] ^= v6;
  v7 = v3[1458];
  v3[3542] ^= v7;
  v8 = v3[1459];
  v3[3543] ^= v8;
  v9 = v3[1460];
  v3[3544] ^= v9;
  v10 = v3[1461];
  v3[3545] ^= v10;
  v11 = v3[1462];
  v3[3546] ^= v11;
  v12 = v3[1463];
  v3[3547] ^= v12;
  v13 = v3[1464];
  v3[3548] ^= v13;
  v14 = v3[1465];
  v3[3549] ^= v14;
  v15 = v3[1466];
  v3[3550] ^= v15;
  v16 = v3[1467];
  v3[3551] ^= v16;
  v17 = v3[1468];
  v3[3552] ^= v17;
  v18 = v3[1469];
  v3[3553] ^= v18;
  v19 = v3[1470];
  v3[3554] ^= v19;
  v3[3555] ^= a2;
  HIDWORD(v20) = v18;
  LODWORD(v20) = v19 << 24;
  v3[1471] = __PAIR64__(v19, a2 << 24) >> 25;
  v3[1470] = v20 >> 25;
  HIDWORD(v20) = v17;
  LODWORD(v20) = v18 << 24;
  v3[1469] = v20 >> 25;
  HIDWORD(v20) = v16;
  LODWORD(v20) = v17 << 24;
  LOBYTE(v17) = v20 >> 25;
  HIDWORD(v20) = v15;
  LODWORD(v20) = v16 << 24;
  v3[1468] = v17;
  v3[1467] = v20 >> 25;
  HIDWORD(v20) = v14;
  LODWORD(v20) = v15 << 24;
  v3[1466] = v20 >> 25;
  HIDWORD(v20) = v13;
  LODWORD(v20) = v14 << 24;
  LOBYTE(v16) = v20 >> 25;
  HIDWORD(v20) = v12;
  LODWORD(v20) = v13 << 24;
  v3[1465] = v16;
  v3[1464] = v20 >> 25;
  HIDWORD(v20) = v11;
  LODWORD(v20) = v12 << 24;
  v3[1463] = v20 >> 25;
  HIDWORD(v20) = v10;
  LODWORD(v20) = v11 << 24;
  LOBYTE(v16) = v20 >> 25;
  HIDWORD(v20) = v9;
  LODWORD(v20) = v10 << 24;
  v3[1462] = v16;
  v3[1461] = v20 >> 25;
  HIDWORD(v20) = v8;
  LODWORD(v20) = v9 << 24;
  v3[1460] = v20 >> 25;
  HIDWORD(v20) = v7;
  LODWORD(v20) = v8 << 24;
  LOBYTE(v16) = v20 >> 25;
  HIDWORD(v20) = v6;
  LODWORD(v20) = v7 << 24;
  v3[1459] = v16;
  v3[1458] = v20 >> 25;
  HIDWORD(v20) = v5;
  LODWORD(v20) = v6 << 24;
  v3[1457] = v20 >> 25;
  v3[1456] = (a2 << 31 >> 31) & 0xE1 ^ (v5 >> 1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v4 + 9744)
                              + 8 * ((15639 * (a1 == ((a3 + 71) ^ 0x853D129D) + 2059595881)) ^ (a3 + 4909))))();
}

void sub_10036FD10()
{
  JUMPOUT(0x10036FA00);
}

uint64_t sub_10036FD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unint64_t v9;

  v7 = (_BYTE *)v4[1154];
  v8 = -333269657 * ((v7 ^ *(_DWORD *)(v3 + a2)) & 0x7FFFFFFF);
  v9 = -333269657 * (v8 ^ HIWORD(v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((a3 + 2059600619) ^ (4
                                                              * ((((*(_BYTE *)(a1 + (v9 >> 24)) ^ *v7 ^ *(_BYTE *)(v4[1217] + (v9 >> 24)) ^ *(_BYTE *)((v9 >> 24) + v4[1216] + 4) ^ v9 ^ (BYTE3(v9) * v5)) >> 7) & 1) == 0))))
                            - 12))();
}

uint64_t sub_10036FDF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned __int8 v26;
  unint64_t v27;
  char v28;

  v11 = v9[1485];
  v12 = 199 * (v8 ^ 0x1174);
  v13 = v9[1484];
  v14 = v9[1483];
  v15 = v9[1482];
  v16 = v9[1481];
  v17 = v9[1480];
  v18 = v9[1479];
  v19 = v9[1478];
  v20 = v9[1477];
  v21 = v9[1476];
  v22 = v9[1475];
  v23 = v9[1474];
  v24 = v9[1473];
  v25 = v9[1472];
  HIDWORD(v27) = v9[1486];
  LODWORD(v27) = a8 << 24;
  v26 = v27 >> 25;
  HIDWORD(v27) = v11;
  LODWORD(v27) = v9[1486] << 24;
  v9[1486] = v27 >> 25;
  v9[1487] = v26;
  HIDWORD(v27) = v13;
  LODWORD(v27) = v11 << 24;
  v9[1485] = v27 >> 25;
  HIDWORD(v27) = v14;
  LODWORD(v27) = v13 << 24;
  v9[1484] = v27 >> 25;
  HIDWORD(v27) = v15;
  LODWORD(v27) = v14 << 24;
  v9[1483] = v27 >> 25;
  HIDWORD(v27) = v16;
  LODWORD(v27) = v15 << 24;
  v9[1482] = v27 >> 25;
  HIDWORD(v27) = v17;
  LODWORD(v27) = v16 << 24;
  v9[1481] = v27 >> 25;
  HIDWORD(v27) = v18;
  LODWORD(v27) = v17 << 24;
  v9[1480] = v27 >> 25;
  HIDWORD(v27) = v19;
  LODWORD(v27) = v18 << 24;
  v9[1479] = v27 >> 25;
  HIDWORD(v27) = v20;
  LODWORD(v27) = v19 << 24;
  v9[1478] = v27 >> 25;
  HIDWORD(v27) = v21;
  LODWORD(v27) = v20 << 24;
  v9[1477] = v27 >> 25;
  HIDWORD(v27) = v22;
  LODWORD(v27) = v21 << 24;
  v9[1476] = v27 >> 25;
  HIDWORD(v27) = v23;
  LODWORD(v27) = v22 << 24;
  v9[1475] = v27 >> 25;
  HIDWORD(v27) = v24;
  LODWORD(v27) = v23 << 24;
  v9[1474] = v27 >> 25;
  HIDWORD(v27) = v25;
  LODWORD(v27) = v24 << 24;
  v9[1473] = v27 >> 25;
  if (((((v12 + 35) & 0xD7) - 22) & a8) != 0)
    v28 = -31;
  else
    v28 = 0;
  v9[1472] = v28 ^ (v25 >> 1);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v10 + 9744)
                                                     + 8
                                                     * ((2703 * (((v12 - 1460719670) & 0x5710CFFF ^ 0x2E7) + a3 != 128)) ^ v12))
                                         - 4))(*(_QWORD *)(v10 + 9720));
}

void sub_100370094()
{
  JUMPOUT(0x10036FD3CLL);
}

uint64_t sub_1003700A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  unsigned int v14;
  int v15;
  unint64_t v16;

  v14 = ((*(_DWORD *)(*v11 + (int)(*v13 & 0xB0953900)) ^ (v10 + v7)) & 0x7FFFFFFF) * v9;
  v15 = v14 ^ HIWORD(v14);
  v16 = (v15 * v9);
  *(_BYTE *)(v10 + v7) = *(_BYTE *)(a1 + (v16 >> 24)) ^ *(_BYTE *)(v8[1040] + v7) ^ *(_BYTE *)(v8[1217] + (v16 >> 24)) ^ *(_BYTE *)((v16 >> 24) + v8[1216] + 4) ^ v16 ^ (((v15 * v9) >> 24) * (((a7 - 58) | 0x10) ^ 0x5B));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((506 * (v7 != 15)) ^ a7)) - 4))();
}

uint64_t sub_100370148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, int a5@<W8>)
{
  _QWORD *v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v6 + 8 * ((127 * (((v5[1213] + 1 == v5[1212]) ^ (a5 - 53)) & 1)) ^ a5)) - ((a5 - 1485747509) ^ 0xA7715799) + 2330))(a1, a2, a3, v5[547], a4, v5[872], v5[871], v5[888]);
}

void sub_1003701B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 9704) = v0;
  JUMPOUT(0x10036F7D4);
}

uint64_t sub_1003701D8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((59
                                          * (((v0 - 1) ^ (v0 - 2331 == (*(_DWORD *)(v1 + 3220) & 0xF))) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_100370220()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;

  *v3 ^= *(_BYTE *)(*(_QWORD *)(v2 + 9688) + 16 * *(_QWORD *)(v2 + 9696));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v1 == 1) | (v0 + 1972))) - 4))();
}

uint64_t sub_100370274@<X0>(int a1@<W8>)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;

  *v2 ^= *v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v3 == 0) | a1)) - 4))();
}

uint64_t sub_1003702A0()
{
  int v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  unsigned int v9;
  unint64_t v10;

  v6 = (v0 - 1404) | 0x242;
  v7 = *(_QWORD *)(v1 + 8448);
  *(_OWORD *)(v7 + 540) = 0u;
  *(_OWORD *)(v7 + 556) = 0u;
  v8 = *(_BYTE **)(v1 + 5936);
  v9 = ((((_DWORD)v8 + 1692500574) ^ *(_DWORD *)(*v3 + (*v5 & (v6 + 959747410)))) & 0x7FFFFFFF) * v2;
  v10 = (v9 ^ HIWORD(v9)) * (7 * (v6 ^ 0xC4B) - 333273304);
  **(_BYTE **)(v1 + 2240) = *(_BYTE *)(*(_QWORD *)(v1 + 6976) + (v10 >> 24)) ^ *v8 ^ *(_BYTE *)((v10 >> 24)
                                                                                              + *(_QWORD *)(v1 + 6968)
                                                                                              + 1) ^ *(_BYTE *)(*(_QWORD *)(v1 + 7104) + (v10 >> 24)) ^ v10 ^ (-79 * BYTE3(v10));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v6 ^ 0x1F3E)) - 8))();
}

uint64_t sub_1003703A8@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;

  v11 = (((a2 + v5) ^ *(_DWORD *)(a3 + v3)) & 0x7FFFFFFF) * v9;
  v12 = (v11 ^ HIWORD(v11)) * (v4 - 333273304);
  *(_BYTE *)(a1 + v5) = *(_BYTE *)(v6 + (v12 >> 24)) ^ *(_BYTE *)(a2 + v5 - 0x615AA8BF64E1825ELL) ^ *(_BYTE *)((v12 >> 24) + v7 + 1) ^ *(_BYTE *)(v8 + (v12 >> 24)) ^ v12 ^ (-79 * BYTE3(v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((125 * (v5 != 31)) ^ v4)) - 8))();
}

uint64_t sub_100370444@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;

  v6 = -333269657 * ((v4 ^ *(_DWORD *)(a1 + ((v2 - 1332403501) & v1))) & 0x7FFFFFFF);
  v7 = (v6 ^ HIWORD(v6)) * ((v2 + 1045701634) & 0xC1ABCFFE ^ 0xEC22BF49);
  v8 = v7 >> (((v2 - 25) ^ 0x39u) - 21);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                          + 8
                                                                                          * ((58
                                                                                            * ((((*(_BYTE *)(v3[1215] + v8) ^ *v4 ^ *(_BYTE *)(v3[1217] + v8) ^ *(_BYTE *)(v8 + v3[1216] + 4) ^ v7 ^ (-25 * v8)) >> 7) & 1) == 0)) ^ (v2 - 3097)))
                                                                              - 4))(3786621376, 508345786, 10069, 3843126671, 451843695);
}

uint64_t sub_100370558(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;

  v10 = *(_BYTE **)(v8 + 8248);
  v11 = v10[491];
  v12 = v10[490];
  HIDWORD(v13) = v12;
  LODWORD(v13) = v11 << 24;
  v10[491] = v13 >> 25;
  v14 = v10[489];
  HIDWORD(v13) = v14;
  LODWORD(v13) = v12 << 24;
  v10[490] = v13 >> 25;
  v15 = v10[488];
  HIDWORD(v13) = v15;
  LODWORD(v13) = v14 << 24;
  v10[489] = v13 >> 25;
  v16 = v10[487];
  HIDWORD(v13) = v16;
  LODWORD(v13) = v15 << 24;
  v10[488] = v13 >> 25;
  HIDWORD(v13) = v10[486];
  LODWORD(v13) = v16 << 24;
  LOBYTE(v16) = v13 >> 25;
  v17 = v10[485];
  HIDWORD(v13) = v17;
  LODWORD(v13) = v10[486] << 24;
  v10[487] = v16;
  v10[486] = v13 >> 25;
  v18 = v10[484];
  HIDWORD(v13) = v18;
  LODWORD(v13) = v17 << 24;
  v10[485] = v13 >> 25;
  v19 = v10[483];
  HIDWORD(v13) = v19;
  LODWORD(v13) = v18 << 24;
  v10[484] = v13 >> 25;
  v20 = v10[482];
  HIDWORD(v13) = v20;
  LODWORD(v13) = v19 << 24;
  v10[483] = v13 >> 25;
  v21 = v10[481];
  HIDWORD(v13) = v21;
  LODWORD(v13) = v20 << 24;
  v10[482] = v13 >> 25;
  HIDWORD(v13) = v10[480];
  LODWORD(v13) = v21 << 24;
  LOBYTE(v21) = v13 >> 25;
  v22 = v10[479];
  HIDWORD(v13) = v22;
  LODWORD(v13) = v10[480] << 24;
  v10[481] = v21;
  v10[480] = v13 >> 25;
  v23 = v10[478];
  HIDWORD(v13) = v23;
  LODWORD(v13) = v22 << 24;
  v10[479] = v13 >> 25;
  v24 = v10[477];
  HIDWORD(v13) = v24;
  LODWORD(v13) = v23 << 24;
  v10[478] = v13 >> 25;
  v10[477] = __PAIR64__(a7, v24 << 24) >> 25;
  v10[476] = (v11 << 31 >> 31) & 0xE1 ^ ((a7 & 0xFE) >> 1);
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a6 + a1) & a2 ^ a3) * (v7 == 127)) ^ a6)))();
}

void sub_10037079C()
{
  JUMPOUT(0x1003704B4);
}

uint64_t sub_1003707A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;

  v6 = -333269657 * ((v4 ^ *(_DWORD *)(a1 + v1)) & 0x7FFFFFFF);
  v7 = -333269657 * (v6 ^ HIWORD(v6));
  v8 = v7 >> ((((v3 - 7) | 2) + 5) ^ 0xB0u);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * ((667
                                                                 * (((*(_BYTE *)(v2[1215] + v8) ^ *v4 ^ *(_BYTE *)(v2[1217] + v8) ^ *(_BYTE *)(v8 + v2[1216] + 4) ^ v7 ^ (-25 * v8)) >> 7) & 1)) ^ ((v3 - 4359) | 0x2102)))
                                                   - 8))(4294959995, 1726);
}

uint64_t sub_10037087C(int a1, int a2, uint64_t a3, char a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;

  v12 = (a6 + v7) | v8;
  v13 = *(_BYTE **)(v10 + 8448);
  v13[540] ^= a4;
  v14 = *(unsigned __int8 **)(v10 + 8248);
  v13[541] ^= v14[493];
  v13[542] ^= v14[494];
  v13[543] ^= v14[495];
  v13[544] ^= v14[496];
  v13[545] ^= v14[497];
  v13[546] ^= v14[498];
  v13[547] ^= v14[499];
  v13[548] ^= v14[500];
  v13[549] ^= v14[501];
  v13[550] ^= v14[502];
  v13[551] ^= v14[503];
  v13[552] ^= v14[504];
  v13[553] ^= v14[505];
  v13[554] ^= v14[506];
  v13[555] ^= v14[507];
  v15 = v14[492];
  v16 = v14[507];
  v17 = v14[506];
  HIDWORD(v18) = v17;
  LODWORD(v18) = v16 << 24;
  v14[507] = v18 >> 25;
  LODWORD(v13) = v14[505];
  HIDWORD(v18) = (_DWORD)v13;
  LODWORD(v18) = v17 << 24;
  v14[506] = v18 >> 25;
  HIDWORD(v18) = v14[504];
  LODWORD(v18) = (_DWORD)v13 << 24;
  LOBYTE(v13) = v18 >> 25;
  v19 = v14[503];
  HIDWORD(v18) = v19;
  LODWORD(v18) = v14[504] << 24;
  v14[505] = v13;
  v14[504] = v18 >> 25;
  LODWORD(v13) = v14[502];
  HIDWORD(v18) = (_DWORD)v13;
  LODWORD(v18) = v19 << 24;
  v14[503] = v18 >> 25;
  v20 = v14[501];
  HIDWORD(v18) = v20;
  LODWORD(v18) = (_DWORD)v13 << 24;
  v14[502] = v18 >> 25;
  LODWORD(v13) = v14[500];
  HIDWORD(v18) = (_DWORD)v13;
  LODWORD(v18) = v20 << 24;
  v14[501] = v18 >> 25;
  v21 = v14[499];
  HIDWORD(v18) = v21;
  LODWORD(v18) = (_DWORD)v13 << 24;
  v14[500] = v18 >> 25;
  HIDWORD(v18) = v14[498];
  LODWORD(v18) = v21 << 24;
  LOBYTE(v21) = v18 >> 25;
  v22 = v14[497];
  HIDWORD(v18) = v22;
  LODWORD(v18) = v14[498] << 24;
  v14[499] = v21;
  v14[498] = v18 >> 25;
  v23 = v14[496];
  HIDWORD(v18) = v23;
  LODWORD(v18) = v22 << 24;
  v14[497] = v18 >> 25;
  v24 = v14[495];
  HIDWORD(v18) = v24;
  LODWORD(v18) = v23 << 24;
  v14[496] = v18 >> 25;
  v25 = v14[494];
  HIDWORD(v18) = v25;
  LODWORD(v18) = v24 << 24;
  v14[495] = v18 >> 25;
  v26 = v14[493];
  HIDWORD(v18) = v26;
  LODWORD(v18) = v25 << 24;
  v14[494] = v18 >> 25;
  HIDWORD(v18) = v15;
  LODWORD(v18) = v26 << 24;
  v14[493] = v18 >> 25;
  v14[492] = (v16 << 31 >> 31) & 0xE1 ^ ((v15 & 0xFE) >> 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((((v12 ^ v9) + a1) ^ a2) * (v6 == 127)) ^ v12)) - 8))();
}

uint64_t sub_100370ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  _QWORD *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  unint64_t v14;

  v13 = (*(_DWORD *)(*v10 + (int)(*v12 & 0xB0953900)) ^ (v9 + a5)) & 0x7FFFFFFF;
  v14 = ((v13 * v8) ^ ((v13 * v8) >> 16)) * v8;
  *(_BYTE *)(v9 + a5) = *(_BYTE *)(v7[1215] + (v14 >> 24)) ^ *(_BYTE *)(v7[542] + a5) ^ *(_BYTE *)(v7[1217] + (v14 >> 24)) ^ *(_BYTE *)((v14 >> 24) + v7[1216] + 4) ^ v14 ^ (BYTE3(v14) * (a7 - 55));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((4886 * (a5 != 15)) ^ a7)) - 8))();
}

uint64_t sub_100370B84@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v4 = *(_QWORD *)(v1 + 5208);
  *(_QWORD *)v4 = 0;
  v5 = (8 * *(_DWORD *)(v1 + 3220)) ^ 0xE89FFD98;
  *(_DWORD *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 12) = HIBYTE(v5);
  *(_BYTE *)(v4 + 13) = BYTE2(v5);
  *(_BYTE *)(v4 + 14) = BYTE1(v5);
  *(_BYTE *)(v4 + 15) = v5;
  *v2 ^= *(_BYTE *)v4;
  return (*(uint64_t (**)(void))(v3 + 8 * a1))();
}

uint64_t sub_100370BF4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + v2) ^= *(_BYTE *)(v3 + v2);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 == 15) * v1) ^ a1)))();
}

uint64_t sub_100370C20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _BYTE *v9;
  unsigned int v10;
  unint64_t v11;

  *(_OWORD *)(v5 + 1560) = 0u;
  *(_OWORD *)(v5 + 1576) = 0u;
  v9 = *(_BYTE **)(v1 + 5936);
  v10 = ((*(_DWORD *)(*v6 + (*v8 & 0x3934A394)) ^ ((_DWORD)v9 + 1692500574)) & 0x7FFFFFFF) * v3;
  v11 = (v10 ^ HIWORD(v10)) * v3;
  *v4 = *(_BYTE *)(*(_QWORD *)(v2 + 8 * (v0 - 6331)) - 8 + (v11 >> 24)) ^ *v9 ^ *(_BYTE *)(*(_QWORD *)(v2 + 8 * (v0 - 6087))
                                                                                             - 8
                                                                                             + (v11 >> 24)) ^ *(_BYTE *)(*(_QWORD *)(v2 + 8 * (v0 - 6443)) - 12 + (v11 >> 24)) ^ v11 ^ (-3 * BYTE3(v11));
  return (*(uint64_t (**)(void))(v7 + 8 * ((v0 - 5314) ^ 0x1D42)))();
}

uint64_t sub_100370D08@<X0>(unsigned int a1@<W3>, uint64_t a2@<X7>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;

  v12 = ((*(_DWORD *)(*v9 + (*v11 & a1)) ^ (a2 + v3)) & 0x7FFFFFFF) * v7;
  v13 = (v12 ^ HIWORD(v12)) * v7;
  v14 = v13 >> (((a3 - 110) | 0x28) ^ 0xB3u);
  *(_BYTE *)(v8 + v3) = *(_BYTE *)(v4 + v14) ^ *(_BYTE *)(a2 + v3 - 0x615AA8BF64E1825ELL) ^ *(_BYTE *)(v5 + v14) ^ *(_BYTE *)(v6 + v14) ^ v13 ^ (-3 * v14);
  return (*(uint64_t (**)(void))(v10 + 8 * ((468 * (v3 == 31)) ^ a3)))();
}

uint64_t sub_100370DA4()
{
  int v0;
  _QWORD *v1;
  int v2;
  _BYTE *v3;
  _QWORD *v4;
  uint64_t v5;
  _DWORD *v6;
  unsigned int v7;
  unint64_t v8;

  v7 = ((v3 ^ *(_DWORD *)(*v4 + ((v0 - 1332405931) & *v6))) & 0x7FFFFFFF) * v2;
  v8 = ((v7 >> (((2 * (v0 + 33)) ^ 0x7A) + 46)) ^ v7) * v2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                        + 8
                                                                        * ((25
                                                                          * (((*(_BYTE *)(v1[1215] + (v8 >> 24)) ^ *v3 ^ *(_BYTE *)(v1[1217] + (v8 >> 24)) ^ *(_BYTE *)((v8 >> 24) + v1[1216] + 4) ^ v8 ^ (BYTE3(v8) * ((v0 + 55) ^ 5))) >> 7) & 1)) ^ (v0 - 6623)))
                                                            - 8))(95, 4294967265, 1356);
}

uint64_t sub_100370E90(char a1, char a2, int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unint64_t v25;
  char v26;

  v9 = v4 ^ 0x449;
  v10 = v8[1336];
  v8[1560] ^= v10;
  v11 = v8[1337];
  v8[1561] ^= v11;
  v12 = v8[1338];
  v8[1562] ^= v12;
  v13 = v8[1339];
  v8[1563] ^= v13;
  v14 = v8[1340];
  v8[1564] ^= v14;
  v15 = v8[1341];
  v8[1565] ^= v15;
  v16 = v8[1342];
  v8[1566] ^= v16;
  v17 = v8[1343];
  v8[1567] ^= v17;
  v18 = v8[1344];
  v8[1568] ^= v18;
  v19 = v8[1345];
  v8[1569] ^= v19;
  v20 = v8[1346];
  v8[1570] ^= v20;
  v21 = v8[1347];
  v8[1571] ^= v21;
  v22 = v8[1348];
  v8[1572] ^= v22;
  v23 = v8[1349];
  v8[1573] ^= v23;
  v24 = v8[1350];
  v8[1574] ^= v24;
  v8[1575] ^= v5;
  v8[1351] = __PAIR64__(v24, v5 << 24) >> 25;
  HIDWORD(v25) = v23;
  LODWORD(v25) = v24 << 24;
  LOBYTE(v24) = v25 >> 25;
  HIDWORD(v25) = v22;
  LODWORD(v25) = v23 << 24;
  v8[1350] = v24;
  v8[1349] = v25 >> 25;
  HIDWORD(v25) = v21;
  LODWORD(v25) = v22 << 24;
  v8[1348] = v25 >> 25;
  HIDWORD(v25) = v20;
  LODWORD(v25) = v21 << 24;
  LOBYTE(v22) = v25 >> 25;
  HIDWORD(v25) = v19;
  LODWORD(v25) = v20 << 24;
  v8[1347] = v22;
  v8[1346] = v25 >> 25;
  HIDWORD(v25) = v18;
  LODWORD(v25) = v19 << 24;
  v8[1345] = v25 >> 25;
  HIDWORD(v25) = v17;
  LODWORD(v25) = v18 << 24;
  LOBYTE(v22) = v25 >> 25;
  HIDWORD(v25) = v16;
  LODWORD(v25) = v17 << 24;
  v8[1344] = v22;
  v8[1343] = v25 >> 25;
  HIDWORD(v25) = v15;
  LODWORD(v25) = v16 << 24;
  v8[1342] = v25 >> 25;
  HIDWORD(v25) = v14;
  LODWORD(v25) = v15 << 24;
  LOBYTE(v22) = v25 >> 25;
  HIDWORD(v25) = v13;
  LODWORD(v25) = v14 << 24;
  v8[1341] = v22;
  v8[1340] = v25 >> 25;
  HIDWORD(v25) = v12;
  LODWORD(v25) = v13 << 24;
  v8[1339] = v25 >> 25;
  HIDWORD(v25) = v11;
  LODWORD(v25) = v12 << 24;
  LOBYTE(v22) = v25 >> 25;
  HIDWORD(v25) = v10;
  LODWORD(v25) = v11 << 24;
  v8[1338] = v22;
  v8[1337] = v25 >> 25;
  if ((((2 * (v9 ^ v6)) ^ a1) & v5) != 0)
    v26 = a2;
  else
    v26 = 0;
  v8[1336] = v26 ^ (v10 >> 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * ((30 * (v3 == (((v9 ^ v6) - 1635) ^ a3))) ^ v9))
                            - 4))();
}

void sub_1003710DC()
{
  JUMPOUT(0x100370DE4);
}

uint64_t sub_1003710F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  unint64_t v9;

  v6 = (v2 - 6220) | 0x1020;
  v7 = 934 * (v6 ^ 0x1034);
  v8 = -333269657 * ((v4 ^ *(_DWORD *)(a1 + v1)) & (v7 + 2147478043));
  v9 = (v8 ^ HIWORD(v8)) * (v7 ^ 0xEC22A083);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                 + 8
                                                                                 * ((91
                                                                                   * ((((*(_BYTE *)(v3[1215] + (v9 >> 24)) ^ *v4 ^ *(_BYTE *)(v3[1217] + (v9 >> 24)) ^ *(_BYTE *)((v9 >> 24) + v3[1216] + 4) ^ v9 ^ (-25 * BYTE3(v9))) >> 7) & 1) == 0)) ^ v6))
                                                                     - 4))(160748278, 712535976, 4294963151, 4794);
}

uint64_t sub_1003711E8(int a1, char a2, int a3, int a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned __int8 v24;
  unint64_t v25;

  v9 = v5 - 2816;
  v10 = v8[1365];
  v11 = v8[1364];
  v12 = v8[1363];
  v13 = v8[1362];
  v14 = v8[1361];
  v15 = v8[1360];
  v16 = v8[1359];
  v17 = v8[1358];
  v18 = v8[1357];
  v19 = v8[1356];
  v20 = v8[1355];
  v21 = v8[1354];
  v22 = v8[1353];
  v23 = v8[1352];
  HIDWORD(v25) = v8[1366];
  LODWORD(v25) = v6 << 24;
  v24 = v25 >> 25;
  HIDWORD(v25) = v10;
  LODWORD(v25) = v8[1366] << 24;
  v8[1366] = v25 >> 25;
  HIDWORD(v25) = v11;
  LODWORD(v25) = v10 << 24;
  v8[1367] = v24;
  v8[1365] = v25 >> 25;
  HIDWORD(v25) = v12;
  LODWORD(v25) = v11 << 24;
  v8[1364] = v25 >> 25;
  HIDWORD(v25) = v13;
  LODWORD(v25) = v12 << 24;
  LOBYTE(v12) = v25 >> 25;
  HIDWORD(v25) = v14;
  LODWORD(v25) = v13 << 24;
  v8[1363] = v12;
  v8[1362] = v25 >> 25;
  HIDWORD(v25) = v15;
  LODWORD(v25) = v14 << 24;
  v8[1361] = v25 >> 25;
  HIDWORD(v25) = v16;
  LODWORD(v25) = v15 << 24;
  LOBYTE(v13) = v25 >> 25;
  HIDWORD(v25) = v17;
  LODWORD(v25) = v16 << 24;
  v8[1360] = v13;
  v8[1359] = v25 >> 25;
  HIDWORD(v25) = v18;
  LODWORD(v25) = v17 << 24;
  v8[1358] = v25 >> 25;
  HIDWORD(v25) = v19;
  LODWORD(v25) = v18 << 24;
  LOBYTE(v13) = v25 >> 25;
  HIDWORD(v25) = v20;
  LODWORD(v25) = v19 << 24;
  v8[1357] = v13;
  v8[1356] = v25 >> 25;
  HIDWORD(v25) = v21;
  LODWORD(v25) = v20 << 24;
  v8[1355] = v25 >> 25;
  HIDWORD(v25) = v22;
  LODWORD(v25) = v21 << 24;
  LOBYTE(v13) = v25 >> 25;
  HIDWORD(v25) = v23;
  LODWORD(v25) = v22 << 24;
  v8[1354] = v13;
  v8[1353] = v25 >> 25;
  v8[1352] = (v23 >> (((v9 + 19) & a2) + 97)) ^ (v6 << 31 >> 31) & 0xE1;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                        + 8 * (((v4 + a3 + ((v9 - 160746921) & a1) != 128) * a4) ^ v9))
                            - 12))();
}

void sub_100371458()
{
  JUMPOUT(0x100371128);
}

uint64_t sub_100371460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, _DWORD *a7, int a8)
{
  unsigned int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;

  v13 = ((*(_DWORD *)(*a6 + (int)(*a7 & 0xB0953900)) ^ (v10 + v11)) & 0x7FFFFFFF) * a8;
  v14 = (v13 ^ HIWORD(v13)) * a8;
  *(_BYTE *)(v10 + v11) = *(_BYTE *)(v9[1215] + (v14 >> 24)) ^ *(_BYTE *)(v9[659] + v11) ^ *(_BYTE *)(v9[1217] + (v14 >> 24)) ^ *(_BYTE *)(v9[1216] + (v14 >> 24) + ((v8 - 480332481) & 0x1CA155A6 ^ 0x1582)) ^ v14 ^ (-25 * BYTE3(v14));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((4 * (v11 != 15)) | ((v11 != 15) << 6) | v8)) - 12))();
}

uint64_t sub_10037151C()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  _BYTE *v9;
  uint64_t (*v10)(uint64_t);

  v1[1212] = 0xCB8C633ACF984ADFLL;
  v1[1213] = 0x55D8E08AA871D96ELL;
  v1[1209] = 0x12FCB87BB5B96A72;
  v1[1211] = 0x5D2CFA8552D0C95;
  v2 = v0 + 171;
  v3 = v1[1542];
  v4 = v1[1031];
  v1[1118] = v4 + 0x5FF2739CD1712E53;
  v1[809] = v4 + 0x5FF2739CD1712E63;
  v5 = ((*(_BYTE *)(v3 - 0x194C6113CD9FFCD4) >> 3) | (32 * *(_BYTE *)(v3 - 0x194C6113CD9FFCD4))) ^ 0x9CLL;
  v6 = (uint64_t)*(&off_1004ECA20 + (v2 ^ 0x1638));
  v1[1198] = v6 + 2355;
  LOBYTE(v5) = *(_BYTE *)(v6 + 2355 + v5);
  v7 = ((v5 ^ 0x7D) - 101 - ((2 * (v5 ^ 0x7D)) & 0x36)) ^ 0x9B;
  v8 = v7 - 101 - ((((v2 - 47) | 0x25) + 15) & (2 * v7));
  v9 = (_BYTE *)v1[381];
  v9[38] = v5 ^ 0xE6 ^ v8;
  *v9 = v8 ^ 0x9B;
  v1[816] = v6 - 12;
  v10 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v1[1218] + 8 * (v2 ^ 0xA61)) - 12);
  v1[1205] = v6 - 11;
  return v10(125);
}

uint64_t sub_100371738(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  uint64_t v8;
  char v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  char v18;
  char v19;
  unsigned int v20;
  char v21;

  v17 = v11 ^ v14;
  v18 = *(_BYTE *)(v8 + v17);
  v19 = (v18 + v14 - (a7 & (2 * v18))) ^ v9;
  v20 = v17 * a8;
  v21 = v19 + v14 - ((2 * v19) & 0x36);
  *(_BYTE *)(v13
           + ((v10 + 84932058) | 0x802D1016)
           + 2059596029
           + v20
           + 1054
           - (((((((v10 + 84932058) | 0x802D1016) + 2059596029 + v20 + 1054) >> 2) * (unint64_t)v15) >> 32) >> 1)
           * v16) = v21 ^ a3 ^ v18;
  *(_BYTE *)(v13 + v20 - ((((v20 >> 2) * (unint64_t)v15) >> 32) >> 1) * v16) = v21 ^ a3;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v12 + 9744)
                              + 8 * (v10 ^ (10755 * (((v14 + v17 - ((2 * v17 + 2) & 0x8D93D136) + 1) ^ a4) < 0x20)))))();
}

uint64_t sub_100371810(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  char v4;
  uint64_t v5;
  char v6;
  int v7;
  int v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  char v19;

  v17 = v8 ^ v13;
  v18 = *(unsigned __int8 *)(v5 + (v8 ^ v13));
  v19 = *(_BYTE *)(*(_QWORD *)(v11 + 9640) + (((v18 >> 4) | (16 * v18)) ^ 0x39));
  *(_BYTE *)(v12
           + v9
           + 1365
           - (((((v9 + 1365) >> 2) * (unint64_t)v14) >> 32) >> 1) * v16) = v4;
  *(_BYTE *)(v12
           + (((v7 + 69793258) | 0x81141006) ^ 0x853D1034) * v17
           - ((((((((v7 + 69793258) | 0x81141006) ^ 0x853D1034) * v17) >> 2) * (unint64_t)v14) >> 32) >> 1)
           * v16) = ((v19 ^ (((v19 ^ (v7 - 64) & 0xBC) & 0xF8) >> 3) ^ (((v19 ^ (v7 - 64) & 0xBC ^ 4) & 0xFC) >> 2) ^ 6)
                   + 73) ^ v6 ^ v10;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v11 + 9744)
                              + 8 * (v7 ^ (6249 * (((v13 + v17 - ((2 * v17 + 2) & v15) + 1) ^ a4) < 0x20)))))();
}

uint64_t sub_100371914(int a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  uint64_t v8;
  char v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  char v18;
  unsigned int v19;

  v18 = *(_BYTE *)(v8 + (v11 ^ v14));
  v19 = (v11 ^ v14) * a8;
  *(_BYTE *)(v13 + v19 + 1330 - (((((v19 + 1330) >> 2) * (unint64_t)v15) >> 32) >> 1) * v17) = (v18 + v14 - ((v18 << (((v10 + 97) | 0x12) ^ 0x16)) & a7)) ^ v9 ^ v18;
  *(_BYTE *)(v13 + v19 - ((((v19 >> 2) * (unint64_t)v15) >> 32) >> 1) * v17) = (v18 + v14 - ((v18 << (((v10 + 97) | 0x12) ^ 0x16)) & a7)) ^ v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v12 + 9744)
                                        + 8
                                        * (v10 ^ ((((v14 + (v11 ^ v14) - ((2 * (v11 ^ v14) + 2) & v16) + 1) ^ a4) < 0x20)
                                                * a1)))
                            - 8))();
}

uint64_t sub_1003719D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  char v16;

  v16 = *(_BYTE *)(v6 + (v7 ^ v12)) ^ v9;
  *(_BYTE *)(v11
           + a6
           + 1365
           - (((((a6 + 1365) >> 2) * (unint64_t)v13) >> 32) >> 1) * v15) = v9;
  *(_BYTE *)(v11
           + (((v8 - 2080377361) | 0x13D1001) + 2059595788) * (v7 ^ v12)
           - ((((((((v8 - 2080377361) | 0x13D1001) + 2059595788) * (v7 ^ v12)) >> 2)
                            * (unint64_t)v13) >> 32) >> 1)
           * v15) = v16;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 9744)
                                                                                + 8
                                                                                * (v8 ^ (6202
                                                                                       * (((a5
                                                                                          - (((_DWORD)a2 + 4) & v14)
                                                                                          + 2) ^ a4) < 0x20)))))(a1, a2, a3, a4, 3335121051);
}

uint64_t sub_100371A80@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W3>, int a4@<W5>, int a5@<W6>, int a6@<W7>, char a7@<W8>)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  unint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;

  v20 = v10 ^ v15;
  v21 = *(unsigned __int8 *)(*(_QWORD *)(v13 + 9584)
                           + (((*(_BYTE *)(v8 + v20) >> 3) | (32 * *(_BYTE *)(v8 + v20))) ^ v19));
  v22 = ((v21 ^ a1) + v15 - (a5 & (2 * (v21 ^ a1)))) ^ v9;
  v23 = v22 + v15 - ((v22 << ((v11 - 114) & 0x7B ^ 0x30)) & v17);
  *(_BYTE *)(v14
           + a4
           + 1400
           - (((((a4 + 1400) >> 2) * (unint64_t)v16) >> 32) >> 1) * v18) = v21 ^ a7 ^ v23;
  *(_BYTE *)(v14 + v20 * a6 - (((((v20 * a6) >> 2) * (unint64_t)v16) >> 32) >> 1) * v18) = v23 ^ v12;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v13 + 9744)
                              + 8 * (v11 ^ (4743 * (((v15 + v7 - ((a2 + 6) & v17) + 3) ^ a3) < 0x20)))))();
}

uint64_t sub_100371B70(uint64_t a1, int a2, char a3, int a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;

  v18 = (v14 + v12 - 3082 - 2599) ^ v16;
  v19 = *(unsigned __int8 *)(v8 + v18);
  v20 = (v19 + v14 - ((v19 << (((v12 - 47) | 0x15) - 22)) & a7)) ^ v9;
  LOBYTE(v20) = v20 + v14 - ((2 * v20) & 0x36);
  *(_BYTE *)(v13
           + a6
           + 1435
           - (((((a6 + 1435) >> 2) * (unint64_t)v15) >> 32) >> 1) * v17) = v20 ^ a3 ^ v19;
  *(_BYTE *)(v13 + v18 * a8 - (((((v18 * a8) >> 2) * (unint64_t)v15) >> 32) >> 1) * v17) = v20 ^ a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                        + 8 * (v12 ^ (108 * (((v10 - ((a2 + 8) & 0x8D93D136) + 4) ^ a4) < 0x20))))
                            - 12))();
}

uint64_t sub_100371C50(uint64_t a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  char v22;

  v21 = v11 ^ v17;
  v22 = *(_BYTE *)(v9 + v21);
  *(_BYTE *)(v16
           + a6
           + 1470
           - (((((a6 + 1470) >> 2) * (unint64_t)v18) >> 32) >> 1) * v20) = v12;
  *(_BYTE *)(v16 + v21 * a8 - (((((v21 * a8) >> 2) * (unint64_t)v18) >> 32) >> 1) * v20) = v22 ^ v10 ^ v14;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v15 + 9744)
                              + 8
                              * ((5644
                                * (((v17 + v8 - ((a2 + 2059596029 + ((v13 - 2143816210) | 0x5051002) - 266) & v19) + 5) ^ a4) < 0x20)) ^ v13)))();
}

uint64_t sub_100371CFC(uint64_t a1, int a2, char a3, int a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  char v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v19 = v12 ^ v16;
  v20 = *(unsigned __int8 *)(v9 + v19);
  v21 = (v20 + v16 - ((v20 << ((v13 - 16) ^ v11)) & a7)) ^ v10;
  LOBYTE(v21) = v21 + v16 - ((2 * v21) & 0x36);
  *(_BYTE *)(v15
           + a6
           + 1505
           - (((((a6 + 1505) >> 2) * (unint64_t)v17) >> 32) >> 1) * v18) = v21 ^ a3 ^ v20;
  *(_BYTE *)(v15 + v19 * a8 - (((((v19 * a8) >> 2) * (unint64_t)v17) >> 32) >> 1) * v18) = v21 ^ a3;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v14 + 9744)
                              + 8 * (v13 ^ (11558 * (((v8 - ((a2 + 12) & 0x8D93D136) + 6) ^ a4) < 0x20)))))();
}

uint64_t sub_100371DB4(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t a5, uint64_t a6, char a7)
{
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  unsigned int v20;

  v16 = v7 ^ v13;
  v17 = *(_BYTE *)(v8 + (v7 ^ v13));
  v18 = (v17 + v13 - (a7 & (2 * v17))) ^ v9;
  v19 = v18 + v13 - ((2 * v18) & 0x36);
  v20 = ((v10 ^ 0x853D1A30) + 2059595788) * v16;
  *(_BYTE *)(v12 + v20 + 1330 - (((((v20 + 1330) >> 2) * (unint64_t)v14) >> 32) >> 1) * v15) = v19 ^ a3 ^ v17;
  *(_BYTE *)(v12 + v20 - ((((v20 >> 2) * (unint64_t)v14) >> 32) >> 1) * v15) = v19 ^ a3;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v11 + 9744)
                              + 8 * (v10 ^ (119 * (((v13 + v16 - ((2 * v16 + 2) & 0x8D93D136) + 1) ^ a4) < 0x20)))))();
}

uint64_t sub_100371E7C(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t a5, int a6, char a7, int a8)
{
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  char v20;
  char v21;
  char v22;

  v19 = v11 ^ v15;
  v20 = *(_BYTE *)(v9 + v19);
  v21 = (v20 + ((v12 - 16) ^ 0x8C) - (a7 & (2 * v20))) ^ v10;
  v22 = v21 + v15 - ((2 * v21) & 0x36);
  *(_BYTE *)(v14
           + a6
           + 1365
           - (((((a6 + 1365) >> 2) * (unint64_t)v16) >> 32) >> 1) * v18) = v22 ^ a3 ^ v20;
  *(_BYTE *)(v14 + v19 * a8 - (((((v19 * a8) >> 2) * (unint64_t)v16) >> 32) >> 1) * v18) = v22 ^ a3;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v13 + 9744)
                              + 8 * (v12 ^ (4159 * (((v8 - ((v17 + 4) & 0x8D93D136) + 2) ^ a4) < 0x20)))))();
}

uint64_t sub_100371F38(uint64_t a1, int a2, char a3, unsigned int a4, uint64_t a5, int a6, char a7, int a8)
{
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  char v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  char v21;
  char v22;
  char v23;

  v20 = v8 ^ v14;
  v21 = *(_BYTE *)(v9 + v20);
  v22 = (v21 + v14 - (a7 & (2 * v21))) ^ v10;
  v23 = v22 + v14 - ((v16 ^ 0x21) & (2 * v22));
  *(_BYTE *)(v13
           + a6
           + 1400
           - (((((a6 + 1400) >> 2) * (unint64_t)v15) >> 32) >> 1) * v19) = v23 ^ a3 ^ v21;
  *(_BYTE *)(v13 + v20 * a8 - (((((v20 * a8) >> 2) * (unint64_t)v15) >> 32) >> 1) * v19) = v23 ^ a3;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v12 + 9744)
                              + 8 * (v11 ^ (8418 * (((v14 + a2 - ((v17 + 6) & v18) + 3) ^ a4) < 0x20)))))();
}

uint64_t sub_100371FE0(uint64_t a1, int a2, char a3, int a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v19 = *(unsigned __int8 *)(v8 + (v11 ^ v15));
  v20 = (v19 + v15 - ((v19 << ((v12 - 16) ^ v10)) & a7)) ^ v9;
  LOBYTE(v20) = v20 + v15 - ((2 * v20) & 0x36);
  *(_BYTE *)(v14
           + a6
           + 1435
           - (((((a6 + 1435) >> 2) * (unint64_t)v16) >> 32) >> 1) * v18) = v20 ^ a3 ^ v19;
  *(_BYTE *)(v14
           + (v11 ^ v15) * a8
           - ((((((v11 ^ v15) * a8) >> 2) * (unint64_t)v16) >> 32) >> 1) * v18) = v20 ^ a3;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v13 + 9744)
                              + 8
                              * ((5850 * (((a2 - ((v17 + 8) & 0x8D93D136) + (v12 ^ 0xC6C9E2B8)) ^ a4) < 0x20)) ^ v12)))();
}

uint64_t sub_1003720B0@<X0>(int a1@<W1>, char a2@<W2>, int a3@<W3>, int a4@<W5>, char a5@<W6>, int a6@<W7>, char a7@<W8>)
{
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;
  char v18;
  char v19;
  char v20;

  v17 = v10 ^ v13;
  v18 = *(_BYTE *)(v8 + v17);
  v19 = (v18 + v13 - (a5 & (2 * v18))) ^ v9;
  v20 = v19 + (((v7 ^ 0x16) - 16) ^ a7) - ((2 * v19) & 0x36);
  *(_BYTE *)(v12
           + a4
           + 1470
           - (((((a4 + 1470) >> 2) * (unint64_t)v14) >> 32) >> 1) * v16) = v20 ^ a2 ^ v18;
  *(_BYTE *)(v12 + v17 * a6 - (((((v17 * a6) >> 2) * (unint64_t)v14) >> 32) >> 1) * v16) = v20 ^ a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744)
                                        + 8
                                        * (v7 ^ (13752 * (((v13 + a1 - ((v15 + 10) & 0x8D93D136) + 5) ^ a3) < 0x20))))
                            - 12))();
}

uint64_t sub_100372174@<X0>(char a1@<W2>, int a2@<W3>, int a3@<W5>, char a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  uint64_t v6;
  char v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  char v19;
  char v20;
  char v21;

  v18 = v10 ^ a6 ^ v15;
  v19 = *(_BYTE *)(v6 + v18);
  v20 = (v19 + v13 - (a4 & (2 * v19))) ^ v7;
  v21 = v20 + v13 - ((2 * v20) & 0x36);
  *(_BYTE *)(v12
           + a3
           + 1505
           - (((((a3 + 1505) >> 2) * (unint64_t)v14) >> 32) >> 1) * v17) = v21 ^ a1 ^ v19;
  *(_BYTE *)(v12 + v18 * a5 - (((((v18 * a5) >> 2) * (unint64_t)v14) >> 32) >> 1) * v17) = v21 ^ a1;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v11 + 9744)
                              + 8 * (v9 ^ (1703 * (((v8 - ((v16 + 12) & 0x8D93D136) + 6) ^ a2) < 0x20)))))();
}

uint64_t sub_100372218(uint64_t a1, int a2, char a3, int a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;

  v19 = v11 ^ v15;
  v20 = *(unsigned __int8 *)(v8 + v19);
  v21 = (((13 * (v12 ^ 0xB92)) ^ 0xC6C9FEAA) + v20 - ((v20 << (((v12 ^ 0x92) + 98) ^ v10)) & a7)) ^ v9;
  LOBYTE(v21) = v21 + v15 - ((2 * v21) & 0x36);
  *(_BYTE *)(v14
           + a6
           + 1540
           - (((((a6 + 1540) >> 2) * (unint64_t)v16) >> 32) >> 1) * v18) = v21 ^ a3 ^ v20;
  *(_BYTE *)(v14 + v19 * a8 - (((((v19 * a8) >> 2) * (unint64_t)v16) >> 32) >> 1) * v18) = v21 ^ a3;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v13 + 9744)
                              + 8 * (v12 ^ (8097 * (((v15 + a2 - ((v17 + 14) & 0x8D93D136) + 7) ^ a4) < 0x20)))))();
}

void sub_1003722F4()
{
  JUMPOUT(0x100371610);
}

uint64_t sub_100372314(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;

  v9 = (((v8 ^ 0x853D12BF) + 959845564) ^ 0xC6C9E89B) + 32;
  v10 = *(_BYTE *)(v6 + (35 * v9 + 1330) % 0x4C);
  v11 = *(unsigned __int8 *)(v6 + 35 * v9 % 0x4C);
  v5[1208] = v11;
  *(_BYTE *)(v6
           + (35 * (((v11 ^ v9) + v7 - ((2 * (v11 ^ v9)) & 0x8D93D136)) ^ v4 ^ v7) + 1330)
           % 0x4C) = v11 ^ v10;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v5[1218]
                                      + 8
                                      * ((6583
                                        * (((v7
                                           + ((v8 + 1568720221) & 0x1D423EEB ^ 0x1460)
                                           - ((2 * ((v8 + 1568720221) & 0x1D423EEB ^ 0x1460) + 2) & 0x8D93D136)
                                           + 1) ^ a4) < 0x20)) ^ (v8 + 2059596433)))
                          - 4);
  v13 = v5[816];
  v5[1204] = v13 + 2627;
  v5[1203] = v13 + 523;
  v5[1180] = v13 + 260;
  v5[1210] = v13 + 2888;
  v5[1199] = v13 + 783;
  return v12();
}

uint64_t sub_100372474()
{
  unsigned __int8 v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;

  v11 = (v0 + v8 - ((v0 << (((v2 + 102) | 0x91) ^ 0x9E)) & 0x136)) ^ v1;
  v12 = (v3 ^ 0x39361764) + 32;
  v13 = (v2 - 645) * v12;
  v14 = *(_BYTE *)(v7 + v13 + 1330 - 76 * (((((v13 + 1330) >> 2) * (unint64_t)v5) >> 32) >> 1));
  v15 = *(unsigned __int8 *)(v7 + v13 - 76 * ((((v13 >> 2) * (unint64_t)v5) >> 32) >> 1));
  v16 = *(unsigned __int8 *)(v6[1204] + ((v15 - 66) ^ 0xCDLL));
  v6[1207] = v15;
  v17 = (v16 >> 2) | (v16 << 6);
  v6[1206] = v17 ^ 0x1Au;
  v18 = v10 + (v12 - v15 + (v17 ^ 0x1A)) * v4;
  *(_BYTE *)(v7 + v18 - 76 * ((((v18 >> 2) * (unint64_t)v5) >> 32) >> 1)) = ((v11
                                                                                                 + (v15 ^ v14)
                                                                                                 + v8
                                                                                                 - (v9 & (2 * (v11 + (v15 ^ v14))))) ^ v8)
                                                                                               - v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6[1218] + 8 * (v2 ^ (8090 * ((v3 ^ v8) + 1 < 0x20)))) - 4))();
}

uint64_t sub_10037258C(int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned __int16 v15;
  uint64_t v16;
  unsigned int v17;

  v14 = 31 - v7;
  v15 = (((v4 - 1599) | 0x400) ^ 0x1443) * (31 - v7);
  v16 = *(unsigned __int8 *)(v10 + v15 % 0x4Cu);
  v17 = *(unsigned __int8 *)(v9[1204]
                           + ((*(_BYTE *)(v10 + (unsigned __int16)(v15 + 1330) % 0x4Cu) - 66) ^ 0xCDLL));
  v9[1202] = v16;
  *(_BYTE *)(v10 + (v13 + 35 * ((718307677 * (a1 ^ v5)) ^ v14 ^ (718307677 * v16))) % 0x4C) = v16 ^ v8 ^ ((v17 >> 2) | ((_BYTE)v17 << 6));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9[1218]
                                        + 8 * (v4 ^ (2710 * (((v11 + v6 - ((2 * v6 + 4) & v12) + 2) ^ a4) < 0x20))))
                            - 12))();
}

uint64_t sub_100372690(unsigned int a1)
{
  int v1;
  char v2;
  int v3;
  int v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  char v14;
  uint64_t v15;
  int v16;

  v11 = v1 - 5111;
  v12 = (v4 ^ v11 ^ 0x393615CC)
      + 1593456090
      - 2 * (((v4 ^ v11 ^ 0x393615CC) + 32) & 0x5EFA35BE ^ (v4 ^ v11 ^ 0x393615CC) & 4);
  v13 = (v12 ^ 0x5EFA35BA) * v6;
  v14 = *(_BYTE *)(v8 + v13 + 1330 - (((((v13 + 1330) >> 2) * (unint64_t)a1) >> 32) >> 1) * v3);
  v15 = *(unsigned __int8 *)(v8 + v13 - ((((v13 >> 2) * (unint64_t)a1) >> 32) >> 1) * v3);
  *(_QWORD *)(v7 + 9608) = v15;
  v16 = 1280853505 * v15 + 1593456058 - ((-1733260286 * v15) & 0xBDF46B74);
  *(_BYTE *)(v8
           + v10
           + (v16 ^ (1280853505 * (_DWORD)v15) ^ v12) * v6
           - (((((v10 + (v16 ^ (1280853505 * (_DWORD)v15) ^ v12) * v6) >> 2)
                            * (unint64_t)a1) >> 32) >> 1)
           * v3) = v5 ^ v2 ^ v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v7 + 9744) + 8 * (v11 ^ (7371 * ((v4 ^ v9) + 1 < 0x20)))) - 4))();
}

uint64_t sub_1003727AC(int a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  int v12;

  v7 = *(unsigned __int8 *)(v5 + (unsigned __int16)(35 * (31 - a1)) % 0x4Cu);
  v8 = *(_QWORD *)(v4 + 9440);
  v9 = *(unsigned __int8 *)(v8 + ((57 * v7) ^ ((v1 ^ 0x88) + 115) ^ 0x45)) ^ (163 * (v1 ^ 0x288)) ^ 0x6E;
  v10 = *(_BYTE *)(v5 + (unsigned __int16)(35 * (31 - a1) + 1330) % 0x4Cu);
  *(_QWORD *)(v4 + 9600) = v7;
  v11 = 31 - a1 - v7;
  v12 = v9 + ((31 - a1) & 6) + (a1 & 6) + 80;
  *(_DWORD *)(v4 + 9576) = v12 - ((2 * v12) & 0xFFFFFFB2) - 39;
  *(_BYTE *)(v5 + (v6 + 35 * (v11 + v3)) % 0x4Cu) = (*(_BYTE *)(v8
                                                              + ((57
                                                                                 * ((v12 - ((2 * v12) & 0xB2) - 39) ^ (v10 - ((2 * v10) & 0xB2) - 39))) ^ 0xD6)) ^ 0xE)
                                                  + 86;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744) + 8 * (v1 ^ (2135 * ((v2 + 2) < 0x20))))
                            - 4))();
}

uint64_t sub_1003728E4(unsigned int a1, int a2, __int16 a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  char v14;
  int v15;
  char v16;
  int v17;
  unsigned __int16 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v16 = a3 ^ v7;
  v17 = a2 - a5;
  v18 = (a2 - a5) * v9;
  v19 = *(unsigned __int8 *)(v12
                           + (unsigned __int16)((((a3 & v9 ^ v9) + (a3 & v9)) & (v17 | (v5 + 226))) * v17)
                           % ((unsigned __int16)(v6 - 563) ^ 0x142Cu));
  v20 = v19 ^ *(_BYTE *)(v12
                       + (unsigned __int16)(v18
                                          + 1330
                                          - ((unsigned __int16)(((unsigned __int16)(v18 + 1330) * v10) >> 16) >> 6)
                                          * v8));
  v21 = *(unsigned __int8 *)(v12
                           + (unsigned __int16)(v18 - ((unsigned __int16)((v18 * v10) >> 16) >> 6) * v8));
  v11[1195] = v21;
  v11[1196] = v19;
  *(_BYTE *)(v12
           + v15
           + ((_DWORD)v19 + v17 - (_DWORD)v21) * v9
           - (((((v15 + (v19 + v17 - v21) * v9) >> 2) * (unint64_t)a1) >> 32) >> 1)
           * v8) = (v16 - v19 + v20 + v13 - (v14 & (2 * (v16 - v19 + v20)))) ^ 0x9B;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11[1218]
                                        + 8
                                        * (v6 | (4 * ((v5 + 3) > 0x1F)) | (8
                                                                                       * ((v5 + 3) > 0x1F))))
                            - 12))();
}

uint64_t sub_1003729D4()
{
  int v0;
  int v1;
  int v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned __int16 v11;
  uint64_t v12;

  v10 = v4 ^ (v0 + v7 - ((2 * v0) & 0x136));
  v11 = 35 * (31 - v2);
  v12 = *(unsigned __int8 *)(v6 + v11 % 0x4Cu);
  LOBYTE(v11) = v12 ^ *(_BYTE *)(v6 + (unsigned __int16)(v11 + (v9 ^ 0x2FF) - 575 - 3886) % 0x4Cu);
  *(_QWORD *)(v5 + 9552) = v12;
  *(_BYTE *)(v6 + (v8 + 35 * (31 - v2 - v10 + (int)v12)) % 0x4Cu) = (v7 + v11 + (~(2 * v11) | 0xC9) + 1) ^ v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v5 + 9744)
                                        + 8 * (v9 ^ 0x2FF ^ (12470 * ((v1 + 4) < 0x20))))
                            - 12))();
}

uint64_t sub_100372AB4(char a1, __int16 a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  __int16 v7;
  __int16 v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  char v13;
  unsigned __int16 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v13 = a1 + v12 - ((2 * a1) & 0x36);
  v14 = (31 - a2) * v8;
  v15 = (unsigned __int16)(((326 * (v6 ^ 0x168F)) ^ 0x1152)
                         + v14
                         - ((unsigned __int16)(((unsigned __int16)(((326 * (v6 ^ 0x168F)) ^ 0x1152) + v14)
                                              * v4) >> 16) >> 6)
                         * v7);
  v16 = *(_BYTE *)(v10[1203]
                 + ((((unint64_t)*(unsigned __int8 *)(v11 + v15) << ((((31 - a2) & 1) + (a2 & 1)) | 4u)) & 0xF0 | ((unint64_t)*(unsigned __int8 *)(v11 + v15) >> 3)) ^ 0xBD));
  v17 = *(unsigned __int8 *)(v11
                           + (unsigned __int16)(v14 - ((unsigned __int16)((v14 * v4) >> 16) >> 6) * v7));
  v10[1193] = v17;
  *(_BYTE *)(v11 + v15) = (v17
                         - (v9 ^ v13)
                         + (v16 ^ v17 ^ 0x7D)
                         + v12
                         - ((2 * (v17 - (v9 ^ v13) + (v16 ^ v17 ^ 0x7D))) & 0x36)) ^ 0x9B;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10[1218]
                                        + 8
                                        * (v6 ^ (14001 * (((v12 + v5 + ~((2 * v5 + 10) & 0x8D93D136) + 6) ^ a4) < 0x20))))
                            - 12))();
}

uint64_t sub_100372BC4(uint64_t a1, char a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  int v18;

  v12 = v4 ^ v10;
  v13 = (v5 ^ 0x9DDDDE8B) - v12 - ((62 - (v12 << (v5 ^ 0x9Eu))) & 0x3BBB8FEA);
  v14 = 35 * (v13 ^ 0x9DDDC7F5);
  v15 = *(unsigned __int8 *)(v8[1199] + ((*(_BYTE *)(v9 + (v14 + 1330) % 0x4C) - 66) ^ 0x9DLL));
  v16 = ((v15 >> 1) | (v15 << 7)) ^ 0x41 ^ ((unint64_t)(((v15 >> 1) | (v15 << 7)) ^ (2 * ((v15 >> 1) | (v15 << 7)))) << (((v13 ^ 0xF7 | v12) & 0x19) - 21));
  v17 = *(unsigned __int8 *)(v9 + v14 % 0x4C);
  v18 = *(unsigned __int8 *)(v9 + v14 % (((v13 & 9 ^ 8) + (v13 & 9 ^ 1)) & 0xFFFFFFBA | 0x44));
  v8[1192] = v17;
  *(_BYTE *)(v9 + (v11 + 35 * ((v7 ^ v6 ^ v10) - v18 + (v13 ^ 0x9DDDC7F5))) % 0x4C) = (v17
                                                                                     - v18
                                                                                     + (((v16 >> 2) | ((_BYTE)v16 << 6)) ^ v18)
                                                                                     + v10
                                                                                     - ((2
                                                                                       * (v17
                                                                                        - v18
                                                                                        + (((v16 >> 2) | ((_BYTE)v16 << 6)) ^ v18))) & 0x36)) ^ a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8[1218]
                                        + 8
                                        * (v5 ^ (13753
                                               * (((v10 + (_DWORD)v12 - ((2 * (_DWORD)v12 + 2) & 0x8D93D136) + 1) ^ a4) < 0x20))))
                            - 12))();
}

uint64_t sub_100372D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  char v8;
  char v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;

  v18 = -1646409739 - (v10 ^ v14) - (((v7 ^ 0x16C8) - 2 * (v10 ^ v14) - 5152) & 0x3BBB8FEA) + 32;
  v19 = ~((2 * (v18 ^ 0x9DDDC7F5) - 2) & 0xBDF46B74) + v17 + (v18 ^ 0x9DDDC7F5);
  v20 = (v19 ^ 0x5EFA35BA) * a6;
  v21 = *(unsigned __int8 *)(v13 + v20 - ((((v20 >> 2) * (unint64_t)v12) >> 32) >> 1) * v16);
  v22 = v18 & 0xEF383A59 ^ 0x62203808 | v18 & 0xEF383A59 ^ 0x8D180251;
  v23 = v15
      + ((((v22 * v21) ^ (-281527719 * v21)) + 1593456058 - ((2 * ((v22 * v21) ^ (-281527719 * v21))) & 0xBDF46B74)) ^ v19)
      * a6;
  *(_BYTE *)(v13 + v23 - ((((v23 >> 2) * (unint64_t)v12) >> 32) >> 1) * v16) = v8 ^ v9 ^ *(_BYTE *)(v13 + v20 + 1330 - (((((v20 + 1330) >> 2) * (unint64_t)v12) >> 32) >> 1) * v16);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744) + 8
                                                                  * (v7 ^ (8978 * ((v6 + 2) < 0x20))))
                            - 4))();
}

uint64_t sub_100372ED8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;

  v17 = *(unsigned __int8 *)(v14 + (unsigned __int16)((31 - v10) * a6) % 0x4Cu);
  v18 = v16 + (a5 + 31 - v10 - v17) * a6 - 3886;
  *(_BYTE *)(v14 + v18 - 76 * ((((v18 >> 2) * (unint64_t)v13) >> 32) >> 1)) = v17 ^ *(_BYTE *)(v14 + (unsigned __int16)((31 - v10) * a6 + 1330) % 0x4Cu);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v12 + 9744)
                                        + 8 * (v9 ^ (1649 * (((v15 + v8 - ((v11 + 6) & a8) + 3) ^ a4) < 0x20))))
                            - 4))();
}

uint64_t sub_100372F84(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, char a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  _QWORD *v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  char v23;
  unsigned int v24;
  int v25;
  int v26;

  v18 = v8 ^ v14;
  v19 = (-1646414923 - v18 - ((64 - 2 * v18) & 0x3BBB8FEA) + ((v9 + 1991186893) & 0x8950F7EA)) ^ 0x9DDDC7F5;
  v20 = ~((2 * v19 - 2) & 0xBDF46B74) + v19 + 1593456058;
  v21 = (v20 ^ v17) * a6;
  v22 = *(unsigned __int8 *)(v13 + v21 - ((((v21 >> 2) * (unint64_t)v12) >> 32) >> 1) * v10);
  v23 = (57 * v22) ^ *(_BYTE *)(v11[1210] + ((57 * v22) ^ 0x1DLL)) ^ 0x7C;
  v24 = v15
      + ((((v20 ^ 0x5EFA35BA)
         - 480237057 * v22
         + 1600319529
         - ((2 * ((v20 ^ 0x5EFA35BA) - 480237057 * v22)) & 0xBEC5E052)) ^ 0x5F62F029)
       + 480237057 * ((v23 - ((2 * v23 + 44) & 0x58) - 126) ^ 0x2C))
      * a6;
  LOBYTE(v21) = v22 ^ *(_BYTE *)(v13
                               + v21
                               + 1330
                               - (((((v21 + 1330) >> 2) * (unint64_t)v12) >> 32) >> 1) * v10);
  v25 = *(unsigned __int8 *)(v11[1205] + (((v21 >> 4) | (16 * v21)) ^ 0x39));
  v26 = ((v25 ^ ((v25 ^ 0xA0) >> 3) ^ ((v25 ^ 0xA0) >> 2) ^ 6) + 73) ^ v22;
  *(_BYTE *)(v13 + v24 - ((((v24 >> 2) * (unint64_t)v12) >> 32) >> 1) * v10) = (v26 - ((2 * v26) & 0x36) - 101) ^ ((v16 ^ a5) - ((2 * (v16 ^ a5)) & 0x36) - 101);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11[1218]
                                        + 8 * (v9 ^ (5106 * (((v14 + v18 - ((2 * v18 + 2) & a8) + 1) ^ a4) < 0x20))))
                            - 4))();
}

uint64_t sub_100373194()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  char v10;
  int v11;
  int v12;

  v8 = (v2 ^ 0x39361764) - 1646414923 - 2 * (((v2 ^ 0x39361764) + 32) & 0x9DDDC7FF ^ v2 & 0xA) + v0 + 4536;
  v9 = 35 * (v8 ^ 0x9DDDC7F5);
  v10 = *(_BYTE *)(v4 + (v9 + 1330) % 0x4C);
  v11 = *(unsigned __int8 *)(v4 + v9 % 0x4C);
  v12 = ((v11 * v7) ^ *(unsigned __int8 *)(*(_QWORD *)(v3 + 9680) + ((v11 * v7) ^ 0x1DLL)) ^ 0x7C) + 86;
  *(_DWORD *)(v3 + 9528) = v12;
  *(_BYTE *)(v4 + (v6 + 35 * (((v12 ^ v1) - 1646409739 - ((2 * (v12 ^ v1)) & 0x1EA)) ^ v8)) % 0x4C) = v11 ^ v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * (v0 ^ (3491 * ((v2 ^ v5) + 1 < 0x20)))) - 4))();
}

uint64_t sub_1003732C0(int a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  char v7;
  unsigned int v8;
  char v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  char v17;
  int v18;
  unsigned int v19;
  char v20;
  int v21;
  int v22;
  int v23;
  char v24;

  v17 = v13 + (v9 ^ v7) - ((2 * (v9 ^ v7)) & 0x36);
  v18 = -1646409739 - a5 - ((v15 - 2 * a5 - 5154) & 0x3BBB8FEA) + 31;
  v19 = ((v6 - 49218477) & 0x2EF039E ^ 0x9DDDC56F ^ v18) * v5;
  v20 = *(_BYTE *)(v12 + v19 + 1330 - (((((v19 + 1330) >> 2) * (unint64_t)v8) >> 32) >> 1) * v16);
  v21 = *(unsigned __int8 *)(v12 + v19 - ((((v19 >> 2) * (unint64_t)v8) >> 32) >> 1) * v16);
  v22 = *(unsigned __int8 *)(v10[1210] + ((57 * v21) ^ 0x1DLL));
  v23 = (((((57 * v21) ^ v22 ^ 0x7C) + 86) ^ v21)
       - 1646409739
       - (a1 & (2 * ((((57 * v21) ^ v22 ^ 0x7C) + 86) ^ v21)))) ^ v18;
  v24 = (v17 ^ 0x64) + v21 + (((*(_BYTE *)(v10[1180] + ((57 * v20) ^ 0xD6)) ^ 0xE) + 86) ^ v21) + 1;
  *(_BYTE *)(v12
           + v14
           + v23 * v5
           - (((((v14 + v23 * v5) >> 2) * (unint64_t)v8) >> 32) >> 1) * v16) = (v24 + v13 - ((2 * v24) & 0x36)) ^ 0x9B;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10[1218]
                                        + 8
                                        * (v6 ^ (2181 * (((v13 + v11 - ((2 * v11 + 4) & 0x8D93D136) + 2) ^ a4) < 0x20))))
                            - 4))();
}

uint64_t sub_100373464()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;

  v8 = v0 ^ v1;
  v9 = (v5 ^ 0x39361764) + 32;
  v10 = *(unsigned __int8 *)(v3 + 35 * v9 % 0x4Cu);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 9592)
                           + (((v10 ^ *(_BYTE *)(v3
                                                                + (35 * v9
                                                                 + ((v7 + 390) | 0x1040)
                                                                 + ((v7 - 530) | 0x220u)
                                                                 - 4566)
                                                                % 0x4C))
                                              - 66) ^ 0x9DLL));
  v12 = ((v11 >> 1) | (v11 << 7)) ^ (32 * ((v11 >> 1) | (v11 << 7))) ^ (16 * ((v11 >> 1) | (v11 << 7))) ^ 0x41;
  *(_BYTE *)(v3
           + (v6
            + 35
            * (((v9 - 604131371 * v10 + 1593456058 - ((2 * (v9 - 604131371 * v10)) & 0xBDF46B74)) ^ 0x5EFA35BA)
             + 604131371 * v8))
           % 0x4C) = (v12 >> 2) | ((_BYTE)v12 << 6);
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8 * (v7 ^ (50 * ((v5 ^ v4) + 1 > 0x1F))))
                            - 4))();
}

uint64_t sub_100373594(__int16 a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  __int16 v8;
  unsigned __int8 v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  int v17;
  int v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int16 v23;
  unsigned __int16 v24;
  unsigned __int16 v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v23 = (((v7 ^ 0x12BF) + 1097) ^ 0x1443) * (31 - v10);
  v24 = v23 - v23 / 0x4Cu * v8;
  v25 = v23 + 1330 - (unsigned __int16)(v23 + 1330) / 0x4Cu * v8;
  v26 = *(_BYTE *)(v16
                 + (unsigned __int16)(v19 + (31 - v10) * a1 - (unsigned __int16)(v19 + (31 - v10) * a1) / 0x4Cu * v8));
  v27 = (v13 - ((2 * v13) & 0x36) - 101) ^ (v26 + v17 - ((2 * v26) & 0x36)) ^ v11;
  v28 = *(unsigned __int8 *)(v16 + v24);
  *(_BYTE *)(v16 + v25) = v27;
  v29 = (a2 << 8) | (v20 << 16);
  v30 = *(_QWORD *)(v14 + 9536) ^ *(_QWORD *)(v14 + 9696) & 0xBFFFFFFFFFFFFFFFLL ^ (v29 | *(_QWORD *)(v14 + 9696) & 0x4000000000000000) ^ (v12 << 24) ^ (v22 << 32) ^ (a5 << 40);
  v31 = ((unint64_t)v9 << 24) | ((unint64_t)*(_DWORD *)(v14 + 9528) << 32) | v29 | a7;
  v32 = *(_QWORD *)(v14 + 9664);
  v33 = (*(_QWORD *)(v14 + 9656) << 8) & 0xFFFFFFFF0000FFFFLL | ((unint64_t)(*(_DWORD *)(v14 + 9576) ^ 0xD9u) << 32) | v32 & 0xFFFFFFFF0000FFFFLL | ((unint64_t)*(_QWORD *)(v14 + 9616) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)*(_QWORD *)(v14 + 9608) << 24);
  v34 = *(_QWORD *)(v14 + 9552) << 48;
  v35 = v34 | ((unint64_t)*(_QWORD *)(v14 + 9648) << 8) | (*(_QWORD *)(v14 + 9600) << 32) | (*(_QWORD *)(v14 + 9560) << 40) | (*(_QWORD *)(v14 + 9616) << 16) | v32 | (*(_QWORD *)(v14 + 9608) << 24);
  *(_QWORD *)(v14 + 9696) = v30 ^ (v21 << 48) ^ (v28 << 56);
  v36 = (v31 | ((unint64_t)v15 << 40)) & 0xFFFFFFFFFFFFFFLL | ((unint64_t)v28 << 56);
  *(_QWORD *)(v14 + 9704) ^= 0x92FBA8F9FD51C961 ^ (v21 << 48) ^ (v36
                                                                 - 0x6D04570602AE369FLL
                                                                 - 2 * (v36 & 0x12FBA8F9FD51C96BLL ^ a7 & 0xA));
  v37 = *(_QWORD *)(v14 + 9544);
  *(_QWORD *)(v14 + 9688) ^= v33 ^ (*(_QWORD *)(v14 + 9568) << 40) ^ v34 ^ (v37 << 56);
  *(_QWORD *)(v14 + 9672) ^= ((v37 << 56) + 0x57FDF03C9DDDC7F5 - ((v37 << 57) & 0xAE00000000000000)) ^ 0x74F868F5080603D0 ^ (v35 + 0x230598C995DBC425 - 2 * (v35 & 0x230598C995DBC42FLL ^ v32 & 0xA));
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v14 + 9744)
                                        + 8
                                        * (v7 ^ (4652 * (((v17 + v18 - ((2 * v18 + 4) & 0x8D93D136) + 2) ^ a4) < 0x20))))
                            - 4))();
}

uint64_t sub_10037383C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned __int8 v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unint64_t v53;
  int v54;
  unsigned int v55;
  int v56;
  unint64_t v57;
  int v58;
  unsigned int v59;
  unint64_t v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unint64_t v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  _DWORD *v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int v147;
  unsigned int v148;
  unint64_t v149;
  int v150;
  uint64_t v151;
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  _BYTE *v159;
  _DWORD *v160;
  _QWORD *v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int v170;
  _QWORD *v171;
  int v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  _DWORD *v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  unint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  unint64_t v197;
  char *v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _BYTE *v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  _BYTE *v209;
  _DWORD *v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  int v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  unint64_t v220;
  int v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  _BYTE *v230;
  _DWORD *v231;
  _QWORD *v232;
  unint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _DWORD *v240;
  _QWORD *v241;
  unint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  unint64_t v250;
  unint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  _BYTE *v258;
  int *v259;
  _QWORD *v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  _QWORD *v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  int v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;

  *(_DWORD *)(v4 + 9552) = v6;
  v7 = (((*(_QWORD *)(v4 + 9672) << 23) ^ 0x64CAEDE212800000)
      + 0x230598C995DBC425
      - ((2 * ((*(_QWORD *)(v4 + 9672) << 23) ^ 0x64CAEDE212800000)) & 0x460B31932B000000)) ^ *(_QWORD *)(v4 + 9672);
  v8 = *(_QWORD *)(v4 + 9704);
  v9 = v7 ^ (v8 >> 26) ^ (v7 >> 17) ^ 0x24BEEA3E7FLL;
  v10 = v9 - 0x6D04570602AE369FLL - ((2 * v9) & 0x25F751F3FAA392C2);
  v11 = v10 ^ v8;
  v12 = ((v8 << 23) ^ 0x7CFEA8E4B0800000)
      - 0x6D04570602AE369FLL
      - ((2 * ((v8 << 23) ^ 0x7CFEA8E4B0800000)) & 0x25F751F3FA000000);
  v13 = ((v10 ^ v8) >> 26) ^ ((v12 ^ v8) >> 17);
  v14 = v10 ^ v12 ^ v13;
  v15 = v14 ^ v11 ^ (v11 << 23) ^ (((v14 >> 26) ^ ((v11 ^ (unint64_t)(v11 << 23)) >> 17))
                                 - ((2 * ((v14 >> 26) ^ ((v11 ^ (unint64_t)(v11 << 23)) >> 17))) & 0x1F0EBEC5E052)
                                 - 0x8577078A09D0FD7);
  v16 = v15 ^ 0xF7A88F875F62F029;
  v17 = v15 ^ 0xFB07A4CEC5DAAAF9;
  v18 = *(_QWORD *)(v4 + 9696);
  v19 = (((v18 << 23) ^ 0xA4CD5C2D68000000)
       - ((2 * ((v18 << 23) ^ 0xA4CD5C2D68000000)) & 0x195E569335000000)
       + 0xCAF2B499AB85AD0) ^ v18;
  v20 = (((*(_QWORD *)(v4 + 9688) << 23) ^ 0x8D3AA7D161000000)
       - ((2 * ((*(_QWORD *)(v4 + 9688) << 23) ^ 0x8D3AA7D161000000)) & 0x6857DE34EA000000)
       + 0x342BEF1A754FA2C2) ^ *(_QWORD *)(v4 + 9688);
  v21 = v20 ^ (v18 >> 26) ^ (v20 >> 17) ^ 0x32BCAD266;
  v22 = (v21 - ((2 * v21) & 0x195E56933570B5A0) + 0xCAF2B499AB85AD0) ^ v18;
  v23 = v19 ^ (v19 >> 17) ^ v22 ^ (v22 >> 26);
  v24 = v23 ^ 0x2EF7F40C5EFA35BALL ^ ((v23 << 23) + 0x2EF7F40C5EFA35BALL - ((v23 << 24) & 0x5DEFE818BD000000));
  v25 = ((v22 ^ (v22 << 23)) >> 17) ^ v22 ^ ((_DWORD)v22 << 23) ^ v23 ^ (v23 >> 26);
  v26 = (v16 >> 26) ^ (v24 >> 17);
  v27 = v17 ^ v24 ^ (v26 - ((2 * v26) & 0x56933570B5A0) + 0xCAF2B499AB85AD0);
  v28 = ((v16 << 23) - ((v16 << 24) & 0x195E569335000000) + 0xCAF2B499AB85AD0) ^ v17;
  v29 = v28 ^ (v28 >> 17);
  *(_QWORD *)(v4 + 9688) = v29;
  v30 = v29 ^ v27 ^ (v27 >> 26);
  v31 = v16 ^ v25 ^ (4 * (v16 ^ v25)) ^ ((v30 ^ v17 ^ v23 ^ (v26 - ((2 * v26) & 0xA0) - 48) ^ ((v17 ^ v24 ^ ((_DWORD)v26 - ((2 * (_DWORD)v26) & 0x3570B5A0) - 1699194160) ^ 0x95DBC425 ^ (((v17 ^ v24 ^ ((_DWORD)v26 - ((2 * (_DWORD)v26) & 0x3570B5A0) - 1699194160)) << 23) - 1780759515 - (((v17 ^ v24 ^ ((_DWORD)v26 - ((2 * (_DWORD)v26) & 0x3570B5A0) - 1699194160)) << 24) & 0x2B000000))) >> 17) ^ (v30 >> 26))
                                                        + v30);
  LODWORD(v29) = (((-v31 ^ 0xC87BCF9B) & 0xA5CA7750)
                - ((-v31 ^ 0xC87BCF9B) & 0x21004650)
                + ((-v31 ^ 0xC87BCF9B) & 0x21004650 ^ 0x2311C6DB)) ^ (-v31 ^ 0xC87BCF9B) & 0xA5CA7757;
  v32 = (v29 & 0x12842903 ^ 0x10A42800) + (v29 ^ 0xA35B81CB) - ((v29 ^ 0xA35B81CB) & 0x12A42903);
  *(_DWORD *)(v4 + 9616) = v32;
  *(_DWORD *)(v4 + 9672) = v31;
  LODWORD(v29) = (((2 * v31) & 8) + (v31 & 7 ^ 0xFFFFFFFE) - 1192726884) ^ 0xF8AC5E9A;
  v34 = ((2 * v29) & 0x804012) - v29 + 2124258038;
  if (((2 * (_DWORD)v29) & 0x804012) - (_DWORD)v29 == -1069805568)
    v35 = 0;
  else
    v35 = -1;
  v36 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9632) + (((v35 << (v32 ^ 0x10)) - 66) ^ 0xCDLL));
  v37 = (v36 >> 2) | (v36 << 6);
  v38 = ((v13 + 97 - ((2 * v13) & 0xC2)) ^ v8) + 2 * (v14 & v11);
  v39 = ((*(_BYTE *)(*(_QWORD *)(v4 + 9624) + (((32 * (v38 & 7)) | (v38 >> 3)) ^ 0xBD)) ^ 0x7D)
                        + (v8 ^ 0x61)
                        + v11
                        + v16
                        + v14);
  v40 = ((v18 ^ 0xD0) + 2 * (v23 + v22) + (((v22 ^ (v22 << 23)) >> 17) ^ v22 ^ v23 ^ (v23 >> 26)));
  v41 = (v5 - 2093691321 * v39 - ((107584654 * v39) & 0x8D93D136)) ^ (-2093691321 * v40) ^ (((v27 + v16) ^ 0x2200200E)
                                                                                          - ((2
                                                                                            * ((v27 + v16) ^ 0x2200200E)) & 0x418C)
                                                                                          - 1743441210);
  v42 = ((v5 + 1 - 357276327 * v14 + ~((-714552654 * v14) & 0x8D93D136)) ^ 0x39361764) - 357276327 * v23;
  v43 = (v30 + (v17 ^ v23 ^ (v26 - ((2 * v26) & 0xA0) - 48))) ^ v23 ^ v14;
  *(_DWORD *)(v4 + 9544) = v43;
  v44 = ((2 * (v41 & 0xFFFFFF80 ^ 0x49DF100)) | 0x215F53A8) - (v41 & 0xFFFFFF80 ^ 0x49DF100) - 279947732;
  *(_DWORD *)(v4 + 9648) = (v44 & 0x3B538D14 ^ 0x1B110D21) + (v44 & 0xC4AC72C0 ^ 0x40AC20C1);
  v33 = v16 ^ v25 ^ (4 * (v16 ^ v25)) ^ ((v30 ^ v17 ^ v23 ^ (v26 - ((2 * v26) & 0xA0) - 48) ^ ((v17 ^ v24 ^ ((_DWORD)v26 - ((2 * (_DWORD)v26) & 0x3570B5A0) - 1699194160) ^ 0x95DBC425 ^ (((v17 ^ v24 ^ ((_DWORD)v26 - ((2 * (_DWORD)v26) & 0x3570B5A0) - 1699194160)) << 23) - 1780759515 - (((v17 ^ v24 ^ ((_DWORD)v26 - ((2 * (_DWORD)v26) & 0x3570B5A0) - 1699194160)) << 24) & 0x2B000000))) >> 17) ^ (v30 >> 26))
                                                        + v30);
  *(_DWORD *)(v4 + 9696) = ((2 * (v33 & 0xFFFFFFF8 ^ 0x1884825)) | 0x626A1A2C)
                         - (v33 & 0xFFFFFFF8 ^ 0x1884825)
                         - 825560342;
  v45 = v41 & 0x7F ^ 0x53;
  v46 = 16843009 * v45 - ((33686018 * v45) & 0x336C67B4);
  v47 = v37 ^ 0x1A;
  *(_DWORD *)(v4 + 9568) = v47;
  *(_DWORD *)(v4 + 9576) = v5 + 587202560 * v47 - ((1174405120 * v47) & 0x8C000000);
  v48 = v34;
  v49 = v37 ^ 0xE5;
  if (v34 == 1054452470)
    v49 = 0;
  *(_DWORD *)(v4 + 9536) = v41;
  *(_DWORD *)(v4 + 9560) = v49 & (v41 ^ 0x53);
  *(_DWORD *)(v4 + 9704) = v43 ^ v5;
  v50 = v41 & 0x58A19077 ^ v43 ^ v5;
  v51 = (((BYTE1(v50) ^ BYTE2(v50)) - ((2 * (BYTE1(v50) ^ BYTE2(v50))) & 0x36) - 101) ^ v50) ^ HIBYTE(v50) ^ 0x7B;
  v52 = v5 + 16843009 * v51 - ((33686018 * v51) & 0x8D93D136);
  v53 = ((v26 ^ v24) - ((2 * (v26 ^ v24)) & 0x195E56933570B5A0) + 0xCAF2B499AB85AD0) ^ v17;
  v54 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9640)
                           + (((16 * (((_BYTE)v53 + (_BYTE)v16) & 0xF)) | ((v53 + v16) >> 4)) ^ 0x39));
  v55 = v5 - 1606857125 * v39 - ((1081253046 * v39) & 0x8D93D136);
  v56 = (v54 ^ ((v54 ^ 0xA0) >> 3) ^ ((v54 ^ 0xA0) >> 2) ^ 6) + 73;
  v57 = *(_QWORD *)(v4 + 9688) ^ v53 ^ (v53 >> 26);
  v58 = v57 ^ 0x95DBC425 ^ ((v57 >> 26) - 1780759515 - ((v57 >> 25) & 0x2BB7884A));
  v59 = (v5 - 1606857125 * v40 - ((1081253046 * v40) & 0x8D93D136)) ^ v55 ^ (v5
                                                                           + v56
                                                                           - ((2 * v56) & 0x136));
  v60 = v53 ^ (v53 << 23) ^ ((v53 ^ (v53 << 23)) >> 17);
  v61 = (v60 ^ 0xFD51C961 ^ (v58 - 44971679 - ((2 * v58) & 0xFAA392C2))) + v57;
  v62 = v61 - 1646409739 - ((2 * v61) & 0x3BBB8FEA);
  LOBYTE(v53) = v57 + v53;
  v63 = -1077789577 * v16;
  v64 = ((v57 & 0xBFC23C77 ^ 0xBFC23C77) + (v57 & 0xBFC23C77)) * v25;
  LODWORD(v57) = v64 + v5 - ((2 * v64) & 0x8D93D136);
  v65 = ((v59 & 0x7F ^ 0x5E) - ((2 * (v59 & 0x7F ^ 0x5E)) & 0x22222222) - 1750658671) ^ 0x8F870195;
  v66 = v42 + v53 + 1 + v5 + 1 + ~((2 * (v42 + v53 + 1)) & 0x8D93D136);
  v67 = v57 ^ v63 ^ v62;
  v68 = (((2 * v65) & 0x320C) - v65 + 967247609) ^ 0x218716B8;
  v69 = v5 + 16843009 * v68 - ((33686018 * v68) & 0x8D93D136);
  v70 = ((v67 ^ 1) + 1) & 7 ^ 0x2611700C;
  v71 = v70 - ((2 * v70) & 0x16) + 1077972587;
  *(_DWORD *)(v4 + 9512) = v59 & 0xFFFFFF80 ^ a4;
  v72 = (((v67 & 7 ^ 0x3FFFFFFC) + 971634008) & 0x21492147 ^ 0x9496D80B) - 16851208;
  *(_DWORD *)(v4 + 9528) = v72;
  if ((((v67 & 7 ^ 0x3FFFFFFC) + 971634008) & 0x21492147 ^ 0x9496D80B) == 0xB5DFF949)
    v73 = 0;
  else
    v73 = -1;
  v74 = v62 & 0xC459073C ^ 0x40000008 | v62 & 0xC459073C ^ 0x84590734;
  v75 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9624)
                           + (((v73 << (v71 ^ 0x67)) >> (((v60 & 0xBC ^ 0xBC) + (v60 & 0xBC)) & 0xFC ^ 0xBF)) ^ 0xBDLL ^ ((unint64_t)(v73 << (v71 ^ 0x67)) << (((v60 & 5 ^ 5) + (v60 & 5)) | 4)) & 0xF0));
  v76 = v75 ^ 0x82;
  if ((((v67 & 7 ^ 0x3FFFFFFC) + 971634008) & 0x21492147 ^ 0x9496D80B) == 0xB5DFF949)
    v76 = 0;
  *(_DWORD *)(v4 + 9480) = v76 & (v59 ^ 0x9B);
  v77 = v75 ^ 0x7D;
  v78 = v5 + 83886080 * v77 - ((167772160 * v77) & 0x8C000000);
  v79 = v5 + 737445431 * v45 - ((1474890862 * v45) & 0x8D93D136);
  v80 = (v74 + 1017641413) * v77;
  v81 = v5 - 1746906337 * (v72 ^ 0xB4DED841) - ((801154622 * (v72 ^ 0xB4DED841)) & 0x8D93D136);
  *(_DWORD *)(v4 + 9520) = v66;
  v82 = v66 ^ v59 & 0x58A19077;
  *(_DWORD *)(v4 + 9688) = v82;
  v83 = (v82 ^ BYTE2(v82)) ^ 0x9B ^ ((BYTE1(v82) ^ 7)
                                                                     - ((2 * (BYTE1(v82) ^ 7)) & 0x36)
                                                                     - 101) ^ 0x20091007;
  v84 = ((HIBYTE(v82) ^ 0x21) + v5 - ((2 * (HIBYTE(v82) ^ 0x21)) & 0x136)) ^ 0xB5F86399 ^ (v83
                                                                                         + (((v82 ^ BYTE2(v82)) ^ 0x9B ^ ((BYTE1(v82) ^ 7) - ((2 * (BYTE1(v82) ^ 7)) & 0x36) - 101)) & 0x70 ^ 0x53308B70)
                                                                                         - (v83 & 0x81070));
  *(_DWORD *)(v4 + 9488) = ((v66 ^ v5) & (v78 ^ v5)) + v5 - ((2 * ((v66 ^ v5) & (v78 ^ v5))) & 0x8D93D136);
  v85 = *(_DWORD *)(v4 + 9616);
  v86 = v48;
  *(_DWORD *)(v4 + 9600) = v48;
  v87 = v48 ^ 0x3ED9AAF6;
  v88 = -1746906337 * (v48 ^ 0x3ED9AAF6) - 959846245 - ((801154622 * (v48 ^ 0x3ED9AAF6)) & 0x8D93D136);
  v89 = (v46 - 1716112422) ^ 0x99B633DA;
  *(_DWORD *)(v4 + 6512) = v89;
  v90 = (v79 ^ 0xC6C9E89B) + v89 - 737445431 * v68 + 469338855 + (v69 ^ 0x39361764);
  *(_DWORD *)(v4 + 9052) = v52;
  v91 = v52 ^ 0x5F507102;
  *(_DWORD *)(v4 + 9656) = 16843009 * v84;
  v92 = (v71 ^ 0x99AE0198)
      + (((v85 ^ 0x92EE6E10) - ((2 * (v85 ^ 0x92EE6E10) - 417269698) & 0x8D93D136) - 1168481094) ^ 0xC6C9E89B)
      + 1;
  v93 = (16843009 * v84) ^ 0x63636363;
  *(_DWORD *)(v4 + 8640) = v93;
  v94 = ((v92 - 959846245 - ((2 * v92) & 0x8D93D136)) ^ 0xC6C9E89B)
      + 2024587715 * ((v85 ^ 0x6D1191EF) + (v71 ^ 0x6651FE67))
      + 2024587715;
  *(_DWORD *)(v4 + 9464) = v94 - 959846245 - ((2 * v94) & 0x8D93D136);
  *(_DWORD *)(v4 + 9664) = -1919692800;
  v95 = ((v90 ^ (16843008 * v45)) - 2 * ((v90 ^ (16843008 * v45)) & 0x19B633FA ^ v90 & 0x20) - 1716112422) ^ (v46 - 1716112422);
  *(_DWORD *)(v4 + 7944) = v91;
  v96 = (-959846245 - 420945533 * v93 - ((-841891066 * v93) & 0x8D93D136)) ^ (-420945533 * v91) ^ (((16843009 * v84) ^ 0x9C9C9C9C)
                                                                                                 + v91
                                                                                                 + ((((16843009 * v84) ^ 0x9C9C9C9C) + v91 - ((2 * (((16843009 * v84) ^ 0x9C9C9C9C) + v91) + 938677710) & 0x8D93D136) - 490507390) ^ 0xC6C9E89B)
                                                                                                 + 1);
  v97 = (66459377 * (v72 ^ 0xB4DED841)) ^ (66459377 * v87) ^ ((v88 ^ 0xF3907C1F ^ v81)
                                                            + 2086189199 * ((v86 ^ 0xC1265509) + (v72 ^ 0xB4DED841))
                                                            + 2086189199);
  *(_DWORD *)(v4 + 9608) = v69 ^ (16843008 * v68 - 959846245 - ((33686016 * v68) & 0x8D93D000)) ^ (v95
                                                                                                 - 959846245
                                                                                                 - ((2 * v95) & 0x8D93D136));
  *(_DWORD *)(v4 + 9496) = v80;
  v98 = ((1139470631 * (v67 ^ 0xC6C9E86E) - 959846245 - ((-2016026034 * (v67 ^ 0xC6C9E86E)) & 0x8D93D136)) ^ 0x39361764)
      + (*(_DWORD *)(v4 + 9480) ^ v80)
      + 1;
  v99 = *(_DWORD *)(v4 + 9512);
  v100 = (v69 ^ 0x9B) + v99;
  *(_DWORD *)(v4 + 9480) = v100;
  v101 = v100 + 1187637407 - ((2 * v100) & 0xD93D136);
  *(_DWORD *)(v4 + 9504) = v46 - 1716112422;
  v102 = (*(_DWORD *)(v4 + 9648) - 2) ^ 0x33538F34;
  v103 = *(_DWORD *)(v4 + 9536);
  v104 = 16843009 * *(_DWORD *)(v4 + 9568);
  v105 = *(_DWORD *)(v4 + 9544);
  v106 = v104 ^ 0xC6C9E89B ^ (((v103 >> 6) ^ 0x1F373E9) - 959846245 - ((2 * ((v103 >> 6) ^ 0x1F373E9)) & 0x593D136)) ^ v105 & (*(_DWORD *)(v4 + 9576) ^ 0xC6C9E89B);
  v107 = (((2 * (v69 ^ 0x3806209F)) & 0x60080172) - (v69 ^ 0x3806209F) - 874811578) ^ 0xF3DD4F42;
  v108 = ((((_BYTE)v45 - ((2 * (_BYTE)v45) & 0xB4) - 38) & 0xFB ^ 0x26BDD1ED)
        - (((_BYTE)v45 - ((2 * (_BYTE)v45) & 0xB4) - 38) & 4)) ^ 0xE691D017;
  v109 = v102 | (v45 - ((2 * v45) & 0xB4) - 38) ^ 0xDA;
  v110 = ((((2 * v108) & 0x18012C) - v108 + 1253235561) ^ 0x8A9EDA49) + v102;
  v111 = ((-959846245 - 197428169 * (v67 ^ 0xC6C9E86E) - ((-394856338 * (v67 ^ 0xC6C9E86E)) & 0x8D93D136)) ^ 0xC6C9E89B)
       + 1336898800 * (v67 ^ 0xC6C9E86E)
       + ((v98 - 959846245 - ((2 * v98) & 0x8D93D136)) ^ 0xC6C9E89B);
  v112 = v111 - 959846245 - ((2 * v111) & 0x8D93D136);
  v113 = v107 + v99;
  v114 = v107 | v99;
  v115 = *(_DWORD *)(v4 + 9672);
  v116 = ((1816665871 * v115 - 959846245 - ((-661635554 * v115) & 0x8D93D136)) ^ 0xC6C9E89B)
       - 1816665871 * v115
       + (*(_DWORD *)(v4 + 9560) ^ v104);
  *(_DWORD *)(v4 + 9472) = v113;
  v117 = (-425417305 * (v59 ^ 0xC6C9E89B)) ^ ((v59 ^ v113) >> 4) ^ (2 * ((v101 - 4) ^ v59)) ^ (-425417305 * v114);
  *(_DWORD *)(v4 + 9424) = v117 ^ 0xC6C9E89;
  *(_DWORD *)(v4 + 9456) = (v117 ^ 0xC6C9E89) & 0x46C9E89F ^ v117 & 4;
  v118 = v109 ^ (959846244 - v106 + ((2 * v106) & 0x8D93D136)) ^ (v109 >> 6) ^ (v110
                                                                              - 959846245
                                                                              - ((2 * v110) & 0x8D93D136));
  v119 = ((v116 - 959846245 - ((2 * v116) & 0x8D93D136)) ^ 0xC6C9E89B) + v115;
  *(_DWORD *)(v4 + 9416) = ((v87
                           + (*(_DWORD *)(v4 + 9696) ^ 0x30BD4533)
                           - 959846245
                           - ((2 * (v87 + (*(_DWORD *)(v4 + 9696) ^ 0x30BD4533))) & 0x8D93D136)) ^ 0x39361764)
                         + ((v119 - 959846245 - ((2 * v119) & 0x8D93D136)) ^ 0xC6C9E89B);
  v120 = (v69 ^ 0xC6C9E89B)
       + ((1955214561 * (v103 ^ 0x7CDCFA53) - 959846245 - ((-384538174 * (v103 ^ 0x7CDCFA53)) & 0x8D93D136)) ^ 0xC6C9E89B);
  *(_DWORD *)(v4 + 9408) = ((v118 + (v103 ^ 0x7CDCFA53) - 959846245 - ((2 * (v118 + (v103 ^ 0x7CDCFA53))) & 0x8D93D136)) ^ 0xC6C9E89B)
                         - v109;
  v121 = ((1955214561 * (v59 ^ 0xC6C9E89B) - 959846245 - ((-384538174 * (v59 ^ 0xC6C9E89B)) & 0x8D93D136)) ^ 0x39361764)
       + ((v120 - 959846245 - ((2 * v120) & 0x8D93D136)) ^ 0xC6C9E89B)
       + 1;
  v122 = ((v105 << 7) - 959846245) ^ *(_DWORD *)(v4 + 9704) ^ *(_DWORD *)(v4 + 9520) ^ (((*(_DWORD *)(v4 + 9520) << 7) ^ 0x64F44D80)
                                                                                      - 552599266) ^ *(_DWORD *)(v4 + 9528);
  *(_DWORD *)(v4 + 9400) = v96;
  HIDWORD(v123) = v96 ^ v50 ^ 0xFDEFFDB;
  LODWORD(v123) = v96 ^ ~v50;
  v124 = (v123 >> 28) - ((2 * (v123 >> 28)) & 0xA48566C6) - 767380637;
  v125 = v67 ^ v115 ^ v71;
  v126 = *(_DWORD *)(v4 + 9616);
  v127 = v126 ^ v71 ^ 0x327678EC ^ *(_DWORD *)(v4 + 9464);
  *(_DWORD *)(v4 + 9392) = -959846245 - 1814045931 * v127 - ((666875434 * v127) & 0x8D93D136);
  HIDWORD(v123) = v124 ^ 4;
  LODWORD(v123) = v124 ^ 0xACBA8F10;
  *(_DWORD *)(v4 + 9464) = v96 ^ v50;
  v128 = ((v123 >> 4) ^ 0x88107C38) & (v96 ^ v50 ^ 0x296F4196) ^ (v123 >> 4) & 0xD6B1BE4D;
  *(_DWORD *)(v4 + 9448) = v128 & 0x91D8509F ^ 0x11C8409E;
  *(_DWORD *)(v4 + 9432) = v128 & 0x6E27AF60 ^ 0x44008241;
  v129 = *(_DWORD **)(v4 + 9216);
  v130 = *(_DWORD *)(**(_QWORD **)(v4 + 9088) + (int)(*v129 & 0xC058E860));
  v131 = -1814045931 * v97 - 959846245 - ((666875434 * v97) & 0x8D93D136);
  *(_DWORD *)(v4 + 9384) = (v131 ^ 0xC6C9E89B) + (*(_DWORD *)(v4 + 9688) ^ 0x76F5F340);
  v132 = -333269657 * ((v130 ^ *(_QWORD *)(v4 + 8048)) & 0x7FFFFFFF);
  v133 = -333269657 * (v132 ^ HIWORD(v132));
  v134 = *(_BYTE **)(v4 + 5208);
  v135 = *(_QWORD *)(v4 + 8280);
  v136 = *(_QWORD *)(v4 + 8272);
  v137 = *(_QWORD *)(v4 + 8288);
  v138 = v121 - ((2 * v121) & 0xF35A9DC6) - 106082589;
  v139 = v134[3740] ^ *(_BYTE *)(v135 + (v133 >> 24)) ^ *(_BYTE *)((v133 >> 24) + v136 + 1) ^ *(_BYTE *)((v133 >> 24) + v137 + 5) ^ (v133 ^ (127 * BYTE3(v133))) ^ 0xDBu;
  v140 = *(_QWORD *)(v4 + 6528);
  *(_QWORD *)(v4 + 9696) = v140 + 1302;
  v141 = v140;
  LODWORD(v139) = *(unsigned __int8 *)(v140 + 1302 + v139);
  *(_DWORD *)(v4 + 9520) = v138 ^ 0xFFFFFFE3;
  v142 = v138;
  *(_DWORD *)(v4 + 9376) = v138;
  v143 = ((v139 ^ 0x13 ^ *(_BYTE *)(*(_QWORD *)(v4 + 9624)
                                                   + (((((v138 ^ 0xFFFFFFE3) & (v139 ^ 0x6E)) >> 2) & 0x1F | (((v138 ^ 0xE3) & (v139 ^ 0x6E)) << 6)) ^ 0xBDLL)))
                         - 66);
  v144 = *(_QWORD *)(v4 + 9632);
  v145 = *(_DWORD *)(v4 + 9600) ^ 0xF6u;
  v146 = ((*(unsigned __int8 *)(v144 + (v143 ^ 0xCD)) >> 2) | (*(unsigned __int8 *)(v144 + (v143 ^ 0xCD)) << 6)) ^ 0x1Au;
  LODWORD(v133) = *(unsigned __int8 *)(v144
                                     + (((v146 << (*(_DWORD *)(v4 + 9600) ^ 0xF6u)) - 66) ^ 0xCDLL));
  *(_DWORD *)(v4 + 8984) = v112;
  v147 = v112 ^ 0xFFFFFF9B;
  *(_DWORD *)(v4 + 8608) = v125;
  LODWORD(v133) = ((unint64_t)((v112 ^ 0x9Bu) & v146) >> (v125 ^ 9u)) | ((v133 >> 2) | ((_DWORD)v133 << 6)) ^ 0x1A;
  v148 = -333269657 * ((v130 ^ *(_QWORD *)(v4 + 6928)) & 0x7FFFFFFF);
  v149 = -333269657 * (v148 ^ HIWORD(v148));
  LODWORD(v149) = *(unsigned __int8 *)(v135 + (v149 >> 24)) ^ v134[3756] ^ *(unsigned __int8 *)((v149 >> 24) + v136 + 1) ^ *(unsigned __int8 *)((v149 >> 24) + v137 + 5) ^ v149 ^ (127 * (v149 >> 24));
  v150 = v149 ^ 0x55;
  v151 = v141 + 1045;
  LODWORD(v149) = *(unsigned __int8 *)(v141 + 1045 + (v149 ^ 0xE0));
  *(_QWORD *)(v4 + 9688) = v141 + 1045;
  LODWORD(v149) = v150 + v149;
  v152 = *(_DWORD *)(v4 + 9504);
  *(_DWORD *)(v4 + 9600) = v152 ^ 0xFFFFFFDA;
  v153 = (v152 ^ 0xFFFFFFDA) & (v149 ^ 0xFFFFFFDB);
  LODWORD(v146) = v153 >> 2;
  *(_DWORD *)(v4 + 9576) = v146;
  v154 = *(unsigned __int8 *)(v144
                            + (((*(_BYTE *)(*(_QWORD *)(v4 + 9584)
                                                           + ((v146 | (v153 << 6)) & 0xDFLL ^ 0x9C)) ^ v149 ^ 0xA6)
                                               - 66) ^ 0xCDLL)) ^ 0x49 ^ (45 * (v131 & 0x45 ^ 1 | v131 & 0x45 ^ 0x44));
  v155 = (v154 << (98
                               * (((*(_DWORD *)(v4 + 9608) & 0xF3 ^ 0x60) + (*(_DWORD *)(v4 + 9608) & 0xF3 ^ 0x93)) & 0xF3u))) | ((v154 & 0xFC) >> 2);
  LODWORD(v149) = *(unsigned __int8 *)(v144 + (((v155 & (v112 ^ 0x9B)) - 66) ^ 0xCDLL));
  *(_DWORD *)(v4 + 8548) = v122;
  v156 = v126 ^ 0x10u;
  LODWORD(v155) = (v155 << (v122 ^ 0xC4u)) | ((unint64_t)(((v149 >> 2) | ((_BYTE)v149 << 6)) ^ 0x1Au) >> (v126 ^ 0x10u));
  v157 = *(_DWORD *)(v4 + 9656);
  LODWORD(v155) = 57 * (v157 ^ (v155 - ((2 * v155) & 0xFFFFFFB2) - 39) ^ 0xFFFFFFBA ^ v133);
  v158 = *(_QWORD *)(v4 + 9680);
  LODWORD(v155) = *(unsigned __int8 *)(v158 + (v155 ^ 0x1DLL)) ^ v155 ^ 0x7C;
  LODWORD(v133) = 1 - v155;
  LODWORD(v155) = v155 + 86;
  v159 = *(_BYTE **)(v4 + 8560);
  v159[3296] = v155;
  LODWORD(v155) = v155 | v133 | 0xFFFFFFFA;
  v160 = v129;
  v161 = *(_QWORD **)(v4 + 9088);
  LODWORD(v133) = *(_DWORD *)(*v161 + (int)(*v129 & 0xC058E860));
  v162 = -333269657
       * ((-333269657 * ((v133 ^ ((_DWORD)v134 + 3741)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v133 ^ ((_DWORD)v134 + 3741)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v155) = *(unsigned __int8 *)(v135 + (v162 >> 24)) ^ v134[3741] ^ *(unsigned __int8 *)((v162 >> 24) + v136 + 1) ^ *(unsigned __int8 *)((v162 >> 24) + v137 + 5) ^ v162 ^ (127 * ((-333269657 * ((-333269657 * ((v133 ^ ((_DWORD)v134 + 3741)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v133 ^ ((_DWORD)v134 + 3741)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ (v155 - 89);
  LOBYTE(v153) = ((v155 ^ 0xB5) + *(_BYTE *)(v151 + v155)) ^ 4;
  *(_DWORD *)(v4 + 9512) = v142 ^ 0x63;
  v163 = -333269657
       * ((-333269657 * ((v133 ^ ((_DWORD)v134 + 3757)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v133 ^ ((_DWORD)v134 + 3757)) & 0x7FFFFFFF)) >> 16));
  v164 = v145;
  LOBYTE(v153) = ((unint64_t)((*(_BYTE *)(v158
                                                                + ((57
                                                                                   * ((v153 ^ (2 * (v153 & (v142 ^ 0x63)))) & v147)) ^ 0x1DLL)) ^ (57 * ((v153 ^ (2 * (v153 & (v142 ^ 0x63)))) & v147)) ^ 0x7C)
                                                    + 86) >> (v125 ^ 9u)) | ((unint64_t)(v153 ^ (2 * (v153 & (v142 ^ 0x63)))) << v145);
  v165 = *(_QWORD *)(v4 + 9440);
  v166 = *(_QWORD *)(v4 + 9696);
  v167 = *(unsigned __int8 *)(v166
                            + (((*(_BYTE *)(v165
                                                           + ((57
                                                                              * (*(_BYTE *)(v135 + (v163 >> 24)) ^ v134[3757] ^ v163 ^ *(_BYTE *)((v163 >> 24) + v136 + 1) ^ *(_BYTE *)((v163 >> 24) + v137 + 5) ^ (127 * BYTE3(v163)))) ^ 0xD6)) ^ 0xE)
                                               + 86) ^ 0x34)) ^ 0x29;
  v152 ^= 0x5Au;
  *(_DWORD *)(v4 + 9568) = v152;
  v168 = (*(unsigned __int8 *)(v158 + ((57 * (v167 ^ (2 * (v152 & v167)))) ^ 0x1DLL)) ^ (57 * (v167 ^ (2 * (v152 & v167)))) ^ 0x7Cu)
       + 86;
  v169 = v122 ^ 0xC4u;
  v170 = v157 ^ 0xA5AA8BF8;
  v159[3297] = (v153 - ((2 * v153) & 0x36) - 101) ^ v157 ^ 0xF8 ^ (((*(_BYTE *)(v158
                                                                              + ((57
                                                                                                 * ((unint64_t)(v147 & v168) >> v156)) ^ 0x1DLL)) ^ (57 * ((unint64_t)(v147 & v168) >> v156)) ^ 0x7C)
                                                                  + 86) | (v168 << (v122 ^ 0xC4u)));
  v171 = v161;
  v172 = *(_DWORD *)(*v161 + (int)(*v160 & 0xC058E860));
  v173 = -333269657
       * ((-333269657 * ((v172 ^ ((_DWORD)v134 + 3742)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                         * ((v172 ^ ((_DWORD)v134 + 3742)) & 0x7FFFFFFFu)) >> 16));
  v174 = v173 >> 24;
  LODWORD(v173) = *(unsigned __int8 *)((v173 >> 24) + v136 + 1) ^ *(unsigned __int8 *)(v135 + (v173 >> 24)) ^ *(unsigned __int8 *)((v173 >> 24) + v137 + 5) ^ v173 ^ v134[3742];
  HIDWORD(v123) = v173 ^ -(int)v174;
  LODWORD(v123) = (v173 ^ (127 * (_DWORD)v174)) << 24;
  LOBYTE(v173) = *(_BYTE *)(*(_QWORD *)(v4 + 9640) + ((v123 >> 28) ^ 0x3CLL));
  v175 = v166;
  LOBYTE(v173) = *(_BYTE *)(v166
                          + (((v173 ^ ((v173 ^ 0xA0) >> 3) ^ ((v173 ^ 0xA0) >> 2) ^ 6)
                                             + 73) ^ 0x88)) ^ 0x94;
  v176 = -333269657
       * ((-333269657 * ((v172 ^ ((_DWORD)v134 + 3758)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                         * ((v172 ^ ((_DWORD)v134 + 3758)) & 0x7FFFFFFFu)) >> 16));
  LOBYTE(v176) = *(_BYTE *)(v166
                          + (v134[3758] ^ v176 ^ *(_BYTE *)(v135 + (v176 >> 24)) ^ *(_BYTE *)((v176 >> 24) + v136 + 1) ^ *(_BYTE *)((v176 >> 24) + v137 + 5) ^ (127 * BYTE3(v176)) ^ 0xB4)) ^ 0x4A;
  v177 = v156;
  v178 = v169;
  LODWORD(v158) = (((unint64_t)(v147 & (v176 ^ (2 * (v176 & v152)))) >> v156) | ((unint64_t)(v176 ^ (2 * (v176 & v152))) << v169)) ^ (((unint64_t)(v147 & ((((2 * *(_BYTE *)(v165 + (((*(_DWORD *)(v4 + 9576) & 9 ^ 9) + (*(_DWORD *)(v4 + 9576) & 9)) ^ 0xDF ^ (57 * (*(_DWORD *)(v4 + 9520) & v173))))) ^ 0x1C) - 84) ^ v173)) >> (v125 ^ 9u)) | ((unint64_t)((((2 * *(_BYTE *)(v165 + (((*(_DWORD *)(v4 + 9576) & 9 ^ 9) + (*(_DWORD *)(v4 + 9576) & 9)) ^ 0xDF ^ (57 * (*(_DWORD *)(v4 + 9520) & v173))))) ^ 0x1C) - 84) ^ v173) << v164));
  v159[3298] = (v158 - ((2 * v158) & 0x36) - 101) ^ v170;
  LODWORD(v158) = *(_DWORD *)(*v171 + (int)(*v160 & 0xC058E860));
  LODWORD(v176) = v158 ^ ((_DWORD)v134 + 3759);
  v179 = -333269657
       * ((-333269657 * ((v158 ^ ((_DWORD)v134 + 3743)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v158 ^ ((_DWORD)v134 + 3743)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v179) = *(unsigned __int8 *)(v135 + (v179 >> 24)) ^ v134[3743] ^ *(unsigned __int8 *)((v179 >> 24) + v136 + 1) ^ *(unsigned __int8 *)((v179 >> 24) + v137 + 5) ^ v179 ^ (127 * (v179 >> 24));
  v180 = *(_QWORD *)(v4 + 9688);
  LOBYTE(v179) = ((v179 ^ 0x77) + *(_BYTE *)(v180 + (v179 ^ 0xC2))) ^ 0x41;
  LODWORD(v166) = *(_DWORD *)(v4 + 9512);
  v181 = -333269657 * ((-333269657 * (v176 & 0x7FFFFFFF)) ^ ((-333269657 * (v176 & 0x7FFFFFFF)) >> 16));
  LOBYTE(v181) = *(_BYTE *)(v175
                          + ((v134[3759] ^ *(_BYTE *)(v135 + (v181 >> 24)) ^ *(_BYTE *)((v181 >> 24) + v136 + 1) ^ *(_BYTE *)((v181 >> 24) + v137 + 5) ^ v181 ^ (127 * BYTE3(v181))) ^ 0xFBu)) ^ 0xFD;
  *(_QWORD *)(v4 + 8968) = v125 ^ 9u;
  v182 = *(_QWORD *)(v4 + 9680);
  LOBYTE(v181) = (((2
                  * ((57 * (v181 & *(_BYTE *)(v4 + 9600))) ^ *(_BYTE *)(v182
                                                                      + ((57
                                                                                         * (v181 & *(_BYTE *)(v4 + 9600))) ^ 0x1DLL)))) ^ 0xF8)
                - 84) ^ v181;
  LODWORD(v179) = ((((v179 ^ (2 * (v179 & v166))) & v147) >> (v125 ^ 9u)) | ((unint64_t)(v179 ^ (2 * (v179 & v166))) << v164)) ^ (((v181 & v147) >> v156) | ((unint64_t)v181 << v169));
  LOBYTE(v169) = v170;
  *(_DWORD *)(v4 + 9560) = v170;
  v159[3299] = (v179 + (~(2 * v179) | 0xC9) - 100) ^ v170;
  v183 = v160;
  LODWORD(v179) = *(_DWORD *)(*v171 + (int)(*v160 & 0xC058E860));
  v184 = -333269657
       * ((-333269657 * ((v179 ^ ((_DWORD)v134 + 3744)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v179 ^ ((_DWORD)v134 + 3744)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v184) = *(unsigned __int8 *)(v135 + (v184 >> 24)) ^ v134[3744] ^ *(unsigned __int8 *)((v184 >> 24) + v136 + 1) ^ *(unsigned __int8 *)((v184 >> 24) + v137 + 5) ^ v184 ^ (127 * ((-333269657 * ((-333269657 * ((v179 ^ ((_DWORD)v134 + 3744)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v179 ^ ((_DWORD)v134 + 3744)) & 0x7FFFFFFF)) >> 16))) >> 24));
  LOBYTE(v184) = ((v184 ^ 0x6A) + *(_BYTE *)(v180 + (v184 ^ 0xDFLL))) ^ 0xC2;
  v185 = -333269657
       * ((-333269657 * ((v179 ^ ((_DWORD)v134 + 3760)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v179 ^ ((_DWORD)v134 + 3760)) & 0x7FFFFFFF)) >> 16));
  v186 = v164;
  LOBYTE(v184) = (((v184 ^ (2 * (v184 & v166))) & v147) >> (v125 ^ 9u)) | ((unint64_t)(v184 ^ (2 * (v184 & v166))) << v164);
  LOBYTE(v184) = 57 * ((v184 - 101 - ((2 * v184) & 0x36)) ^ v169);
  LOBYTE(v184) = *(_BYTE *)(v182 + (v184 ^ 0x1DLL)) ^ v184;
  v187 = v175;
  LODWORD(v185) = *(unsigned __int8 *)(v175
                                     + (((*(_DWORD *)(v4 + 9504) & 0xDD ^ 5) + (*(_DWORD *)(v4 + 9504) & 0xDD ^ 0xD8)) ^ (*(_BYTE *)(v135 + (v185 >> 24)) ^ v134[3760] ^ *(_BYTE *)((v185 >> 24) + v136 + 1) ^ v185 ^ *(_BYTE *)((v185 >> 24) + v137 + 5) ^ (127 * BYTE3(v185))) ^ 0xBu));
  v188 = *(_QWORD *)(v4 + 9640);
  LODWORD(v185) = *(unsigned __int8 *)(v188 + (((v185 >> 4) | (16 * v185)) ^ 0xA9));
  LODWORD(v185) = (v185 ^ ((v185 ^ 0xA0) >> 3) ^ ((v185 ^ 0xA0) >> 2) ^ 6) + 73;
  LODWORD(v164) = *(_DWORD *)(v4 + 9568);
  v189 = v178;
  v190 = *(_QWORD *)(v4 + 6528) + 1841;
  *(_QWORD *)(v4 + 9576) = v190;
  v159[3300] = ((v184 ^ 0x7C) + 86) ^ ((((v185 ^ (2 * (v185 & v164))) & v147) >> v177) | (((*(_BYTE *)(v190 + (((16 * (((unint64_t)(v185 ^ (2 * (v185 & v164))) << v178) & 0xF)) | (((unint64_t)(v185 ^ (2 * (v185 & v164))) << v178) >> 4)) ^ 0x4B)) - 6) ^ 0x11) + 73));
  v191 = *(_QWORD **)(v4 + 9088);
  LODWORD(v184) = *(_DWORD *)(*v191 + (int)(*v183 & 0xC058E860));
  v192 = -333269657
       * ((-333269657 * ((v184 ^ ((_DWORD)v134 + 3745)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v184 ^ ((_DWORD)v134 + 3745)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v173) = *(_DWORD *)(v4 + 9552);
  v193 = (char *)*(&off_1004ECA20 + (int)v173 - 4818) - 4;
  v194 = (uint64_t)*(&off_1004ECA20 + (int)v173 - 4810);
  v195 = (char *)*(&off_1004ECA20 + (int)(v173 ^ 0x17FB)) - 8;
  LOBYTE(v192) = v193[v192 >> 24] ^ v134[3745] ^ *(_BYTE *)(v194 + (v192 >> 24) + 3) ^ v195[(v192 >> 24) + 3] ^ (103 * ((103 * (v184 ^ ((_BYTE)v134 - 95))) ^ ((-333269657 * ((v184 ^ ((_DWORD)v134 + 3745)) & 0x7FFFFFFF)) >> 16))) ^ (-91 * BYTE3(v192));
  v196 = v192 ^ 0xACLL;
  LODWORD(v192) = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9632)
                                     + (((((v192 ^ 0x19) + *(_BYTE *)(v180 + v196)) ^ 0x96) - 66) ^ 0xCDLL));
  LODWORD(v192) = ((v192 >> 2) | ((_DWORD)v192 << 6)) ^ 0x1A;
  LODWORD(v166) = (((v192 & *(_DWORD *)(v4 + 9520)) >> 3) & 0xF | (32
                                                                                                * (v192 & *(_BYTE *)(v4 + 9520)))) ^ ((v196 & 0xF ^ 0xF) + (v196 & 0xF)) ^ 0x36;
  v197 = -333269657
       * ((-333269657 * ((v184 ^ ((_DWORD)v134 + 3761)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v184 ^ ((_DWORD)v134 + 3761)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v196) = v197 ^ v134[3761];
  v197 >>= 24;
  v198 = v193;
  *(_QWORD *)(v4 + 9544) = v193;
  LOBYTE(v196) = v196 ^ (-91 * v197) ^ v193[v197];
  v197 += 3;
  LOBYTE(v104) = *(_BYTE *)(v194 + v197);
  *(_QWORD *)(v4 + 9536) = v194;
  LOBYTE(v197) = v195[v197];
  *(_QWORD *)(v4 + 9528) = v195;
  LOBYTE(v166) = v192 ^ ((*(_BYTE *)(v188 + v166) ^ ((*(_BYTE *)(v188 + v166) ^ 0xA0) >> 3) ^ ((*(_BYTE *)(v188 + v166) ^ 0xA0) >> 2) ^ 6)
                       + 73);
  LODWORD(v193) = *(unsigned __int8 *)(v187 + (v196 ^ v104 ^ v197 ^ 0x34)) ^ 0x29;
  LOBYTE(v197) = v166 & v147;
  v199 = v186;
  v200 = (unint64_t)v166 << v186;
  v201 = *(_QWORD *)(v4 + 8968);
  v202 = v193 ^ (2 * (v193 & v164));
  LOBYTE(v200) = (((unint64_t)v197 >> v201) | v200)
               - ((2 * (((unint64_t)v197 >> v201) | v200)) & 0x36);
  LODWORD(v197) = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9592)
                                     + ((((unint64_t)(v202 & v147) >> v177) - 66) ^ 0x9DLL));
  LODWORD(v197) = ((v197 >> 1) | ((_DWORD)v197 << 7)) ^ (32
                                                                     * ((v197 >> 1) | ((_DWORD)v197 << 7))) ^ (16 * ((v197 >> 1) | ((_DWORD)v197 << 7))) ^ 0x41;
  v203 = *(_BYTE **)(v4 + 8560);
  v203[3301] = (v200 - 101) ^ *(_DWORD *)(v4 + 9560) ^ ((v197 >> 2) | ((_BYTE)v197 << 6) | (v202 << v178));
  LODWORD(v202) = *(_DWORD *)(*v191 + (int)(*v183 & 0xC058E860));
  v204 = -333269657
       * ((-333269657 * ((v202 ^ ((_DWORD)v134 + 3746)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v202 ^ ((_DWORD)v134 + 3746)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v204) = v198[v204 >> 24] ^ v134[3746] ^ *(unsigned __int8 *)(v194 + (v204 >> 24) + 3) ^ v195[(v204 >> 24) + 3] ^ v204 ^ (-91 * (v204 >> 24));
  v205 = *(_QWORD *)(v4 + 9688);
  LOBYTE(v204) = ((v204 ^ 0xB8) + *(_BYTE *)(v205 + (v204 ^ 0xDLL))) ^ 0x95;
  LODWORD(v198) = *(_DWORD *)(v4 + 9512);
  LOBYTE(v204) = *(_BYTE *)(v188
                          + ((((v204 ^ (2 * (v204 & v198))) >> 4) | (16 * (v204 ^ (2 * (v204 & v198))))) ^ 0x39));
  LOBYTE(v204) = (v204 ^ ((v204 ^ 0xA0) >> 3) ^ ((v204 ^ 0xA0) >> 2) ^ 6) + 73;
  LODWORD(v197) = *(unsigned __int8 *)(v188
                                     + (((16 * (((unint64_t)v204 << v199) & 0xF)) | (((unint64_t)v204 << v199) >> 4)) ^ 0x39));
  v206 = -333269657
       * ((-333269657 * ((v202 ^ ((_DWORD)v134 + 3762)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v202 ^ ((_DWORD)v134 + 3762)) & 0x7FFFFFFF)) >> 16));
  v207 = v206 >> 24;
  LODWORD(v206) = v134[3762] ^ *(unsigned __int8 *)(v135 + (v206 >> 24)) ^ *(unsigned __int8 *)((v206 >> 24) + v136 + 1) ^ v206;
  LODWORD(v206) = ((v206 ^ *(unsigned __int8 *)(v207 + v137 + 5) ^ (127 * v207) ^ 0x44)
                 + *(unsigned __int8 *)(v205
                                      + ((v206 ^ (127 * v207) ^ *(_BYTE *)(v207 + v137 + 5)) ^ 0xF1u))) ^ 0xFFFFFFCC;
  LOBYTE(v180) = v201;
  LODWORD(v196) = *(_DWORD *)(v4 + 9600);
  v208 = ((*(unsigned __int8 *)(*(_QWORD *)(v4 + 9680)
                              + ((114 * (v206 & v196)) & 0xFELL ^ 0x1D)) ^ (114 * (v206 & v196)) ^ 0x7C)
        + 86) ^ v206;
  v209 = v203;
  v203[3302] = *(_DWORD *)(v4 + 9656) ^ (((unint64_t)(v208 & v147) >> v177) | (v208 << v189)) ^ 0x63 ^ (((v204 & v147) >> v201) | (((v197 >> 3) ^ (v197 >> 2) ^ 0xB1 ^ ((v197 ^ 0xA0) - 2 * ((v197 ^ 0xA0) & 0x2F ^ v197 & 4) + 43)) + 73));
  v210 = *(_DWORD **)(v4 + 9216);
  LODWORD(v208) = *(_DWORD *)(*v191 + (int)(*v210 & 0xC058E860));
  v211 = -333269657
       * ((-333269657 * ((v208 ^ ((_DWORD)v134 + 3747)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v208 ^ ((_DWORD)v134 + 3747)) & 0x7FFFFFFF)) >> 16));
  v212 = *(_QWORD *)(v4 + 9696);
  LOBYTE(v192) = *(_BYTE *)(v212
                          + (v134[3747] ^ *(_BYTE *)(v135 + (v211 >> 24)) ^ *(_BYTE *)((v211 >> 24) + v136 + 1) ^ *(_BYTE *)((v211 >> 24) + v137 + 5) ^ ((103 * ((103 * (v208 ^ ((_BYTE)v134 - 93))) ^ ((-333269657 * ((v208 ^ ((_DWORD)v134 + 3747)) & 0x7FFFFFFF)) >> 16))) ^ (127 * ((-333269657 * ((-333269657 * ((v208 ^ ((_DWORD)v134 + 3747)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v208 ^ ((_DWORD)v134 + 3747)) & 0x7FFFFFFF)) >> 16))) >> 24))) ^ 0xD3u));
  LOBYTE(v190) = v192 ^ 0x2C ^ (2 * ((v192 ^ 0x75) & v198)
                              - ((4 * ((v192 ^ 0x75) & v198)) & 0xB0)
                              - 39);
  v213 = v199;
  LOBYTE(v190) = ((unint64_t)(v190 & v147) >> v180) | ((unint64_t)v190 << v199);
  v214 = -333269657
       * ((-333269657 * ((v208 ^ ((_DWORD)v134 + 3763)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v208 ^ ((_DWORD)v134 + 3763)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v199) = *(_DWORD *)(v4 + 9376);
  v215 = v212;
  LODWORD(v214) = *(unsigned __int8 *)(v212
                                     + (v134[3763] ^ *(_BYTE *)(v135 + (v214 >> 24)) ^ *(_BYTE *)((v214 >> 24) + v136 + 1) ^ v214 ^ *(_BYTE *)((v214 >> 24) + v137 + 5) ^ (127 * BYTE3(v214)) ^ 0x5E)) ^ 0xFFFFFFF1;
  v216 = *(unsigned __int8 *)(v188
                            + ((((v214 & v196) >> 3) & 0xF | (32 * (v214 & v196))) ^ 0x39));
  v217 = ((v216 ^ ((v216 ^ 0xA0) >> 3) ^ ((v216 ^ 0xA0) >> 2) ^ 6) + 73) ^ v214;
  v218 = v189;
  LOBYTE(v207) = -1 - (v199 ^ 0xE3);
  LOBYTE(v174) = *(_DWORD *)(v4 + 9560);
  v203[3303] = (((unint64_t)(v217 & v147) >> v177) | (v217 << v189)) ^ v174 ^ (v190 - ((2 * v190) & 0x36) - 101);
  v219 = v191;
  LODWORD(v190) = *(_DWORD *)(*v191 + (int)(*v210 & 0xC058E860));
  v220 = -333269657
       * ((-333269657 * ((v190 ^ ((_DWORD)v134 + 3748)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v190 ^ ((_DWORD)v134 + 3748)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v188) = (v199 ^ 0xF9AD4EE3) - 2 * ((v199 ^ 0xF9AD4EE3) & 0x79AD4EFF ^ v199 & 0x1C) - 106082589;
  v221 = v190 ^ ((_DWORD)v134 + 3764);
  LODWORD(v190) = (*(_BYTE *)(v135 + (v220 >> 24)) ^ v134[3748] ^ *(_BYTE *)((v220 >> 24) + v136 + 1) ^ *(_BYTE *)((v220 >> 24) + v137 + 5) ^ (103 * ((103 * (v190 ^ ((_BYTE)v134 - 92))) ^ ((-333269657 * ((v190 ^ ((_DWORD)v134 + 3748)) & 0x7FFFFFFF)) >> 16))) ^ (127 * ((-333269657 * ((-333269657 * ((v190 ^ ((_DWORD)v134 + 3748)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v190 ^ ((_DWORD)v134 + 3748)) & 0x7FFFFFFF)) >> 16))) >> 24))) ^ ((34 - (v199 ^ 0xF9AD4EE3) - 2 * (v207 & 3)) ^ v188) & 0x3B;
  LODWORD(v190) = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9632)
                                     + (((((v190 ^ 0xB5) + *(_BYTE *)(v205 + v190)) ^ 8)
                                                        - 66) ^ 0xCDLL));
  *(_DWORD *)(v4 + 9376) = v188 ^ 0x63;
  v222 = v213;
  LOBYTE(v205) = v180;
  LOBYTE(v212) = ((unint64_t)((((v190 >> 2) | ((_BYTE)v190 << 6)) ^ 0xF6u ^ (2 * ((((v190 >> 2) | ((_BYTE)v190 << 6)) ^ 0xF6) & (v188 ^ 0x63)))) & v147) >> v180) | ((unint64_t)(((v190 >> 2) | ((_BYTE)v190 << 6)) ^ 0xF6u ^ (2 * ((((v190 >> 2) | ((_BYTE)v190 << 6)) ^ 0xF6) & (v188 ^ 0x63)))) << v213);
  v223 = -333269657 * ((-333269657 * (v221 & 0x7FFFFFFF)) ^ ((-333269657 * (v221 & 0x7FFFFFFFu)) >> 16));
  LOBYTE(v223) = *(_BYTE *)(v215
                          + (v134[3764] ^ *(_BYTE *)(v135 + (v223 >> 24)) ^ *(_BYTE *)((v223 >> 24) + v136 + 1) ^ *(_BYTE *)((v223 >> 24) + v137 + 5) ^ (v223 ^ (127 * BYTE3(v223))) ^ 0x74u)) ^ 0xF0;
  LODWORD(v180) = *(_DWORD *)(v4 + 9568);
  v224 = v218;
  *(_QWORD *)(v4 + 9648) = v177;
  LOBYTE(v223) = 57
               * ((((v223 ^ (2 * (v223 & v180))) & v147) >> v177) | ((unint64_t)(v223 ^ (2 * (v223 & v180))) << v218));
  v225 = *(_QWORD *)(v4 + 9680);
  v209[3304] = ((*(_BYTE *)(v225 + (v223 ^ 0x1DLL)) ^ v223 ^ 0x7C) + 86) ^ ((*(_BYTE *)(*(_QWORD *)(v4 + 9440) + ((57 * ((v212 - ((2 * v212) & 0x36) - 101) ^ v174)) ^ 0xD6)) ^ 0xE)
                                                                                           + 117
                                                                                           * ((v207 & 0x3A ^ 0x3E)
                                                                                            + (v207 & 0x3A)));
  LODWORD(v212) = *(_DWORD *)(*v191 + (int)(*v210 & 0xC058E860));
  v226 = -333269657
       * ((-333269657 * ((v212 ^ ((_DWORD)v134 + 3749)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v212 ^ ((_DWORD)v134 + 3749)) & 0x7FFFFFFF)) >> 16));
  v227 = v215;
  LOBYTE(v226) = *(_BYTE *)(v215
                          + (v134[3749] ^ *(_BYTE *)(v135 + (v226 >> 24)) ^ *(_BYTE *)((v226 >> 24) + v136 + 1) ^ *(_BYTE *)((v226 >> 24) + v137 + 5) ^ ((103 * ((103 * (v212 ^ ((_BYTE)v134 - 91))) ^ ((-333269657 * ((v212 ^ ((_DWORD)v134 + 3749)) & 0x7FFFFFFF)) >> 16))) ^ (127 * ((-333269657 * ((-333269657 * ((v212 ^ ((_DWORD)v134 + 3749)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v212 ^ ((_DWORD)v134 + 3749)) & 0x7FFFFFFF)) >> 16))) >> 24))) ^ 0x9Cu)) ^ 0x42;
  *(_DWORD *)(v4 + 6504) = v188;
  *(_DWORD *)(v4 + 9520) = v188 ^ 0xFFFFFFE3;
  LODWORD(v192) = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9592)
                                     + (((v226 & (((v199 ^ 0xE3) - 2 * (v199 ^ 0xE3 ^ v199 & 0x1C) - 29) ^ 0xE3))
                                                        - 66) ^ 0x9DLL));
  LODWORD(v192) = ((v192 >> 1) | ((_DWORD)v192 << 7)) ^ (32
                                                                     * ((v192 >> 1) | ((_DWORD)v192 << 7))) ^ (16 * ((v192 >> 1) | ((_DWORD)v192 << 7))) ^ 0x41;
  v228 = -333269657
       * ((-333269657 * ((v212 ^ ((_DWORD)v134 + 3765)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v212 ^ ((_DWORD)v134 + 3765)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v226) = (((v192 & 0xFC) >> 1) | ((_BYTE)v192 << 7)) ^ v226;
  LODWORD(v228) = *(unsigned __int8 *)(v215
                                     + ((v134[3765] ^ *(_BYTE *)(v135 + (v228 >> 24)) ^ *(_BYTE *)((v228 >> 24) + v136 + 1) ^ v228 ^ *(_BYTE *)((v228 >> 24) + v137 + 5) ^ (127 * BYTE3(v228))) ^ 0x40u)) ^ 0xFFFFFF88;
  v229 = v222;
  LOBYTE(v191) = v205;
  LOBYTE(v226) = ((v226 & v147) >> v205) | ((unint64_t)v226 << v222);
  v209[3305] = (((unint64_t)((((v228 ^ (2 * (v228 & v180))) & v147)
                                                    - ((2 * ((v228 ^ (2 * (v228 & v180))) & v147)) & 0x40)
                                                    - 96) ^ 0xA0u) >> v177) | ((unint64_t)(v228 ^ (2 * (v228 & v180))) << v218)) ^ v174 ^ (v226 + (~(2 * v226) | 0xC9) - 100);
  v230 = v209;
  v231 = v210;
  v232 = v219;
  LODWORD(v226) = *(_DWORD *)(*v219 + (int)(*v210 & 0xC058E860));
  v233 = -333269657
       * ((-333269657 * ((v226 ^ ((_DWORD)v134 + 3750)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v226 ^ ((_DWORD)v134 + 3750)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v221) = *(_BYTE *)(v227
                          + (v134[3750] ^ *(_BYTE *)(v135 + (v233 >> 24)) ^ *(_BYTE *)((v233 >> 24) + v136 + 1) ^ *(_BYTE *)((v233 >> 24) + v137 + 5) ^ ((103 * ((103 * (v226 ^ ((_BYTE)v134 - 90))) ^ ((-333269657 * ((v226 ^ ((_DWORD)v134 + 3750)) & 0x7FFFFFFF)) >> 16))) ^ (127 * ((-333269657 * ((-333269657 * ((v226 ^ ((_DWORD)v134 + 3750)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v226 ^ ((_DWORD)v134 + 3750)) & 0x7FFFFFFF)) >> 16))) >> 24))) ^ 0x58u));
  LODWORD(v233) = *(_DWORD *)(v4 + 9384) - 959846245 - ((2 * *(_DWORD *)(v4 + 9384)) & 0x8D93D136);
  v234 = *(_QWORD *)(v4 + 9640);
  LODWORD(v192) = *(unsigned __int8 *)(v234
                                     + ((((v221 ^ 0xA9) >> 4) | (16 * (v221 ^ 0xA9))) ^ 0x39));
  LODWORD(v192) = ((v192 ^ ((v192 ^ 0xA0) >> 2) ^ ((v192 ^ 0xA0) >> 3) ^ 6) + 73) ^ 0x5E;
  LODWORD(v210) = *(_DWORD *)(v4 + 9376);
  v235 = -333269657
       * ((-333269657 * ((v226 ^ ((_DWORD)v134 + 3766)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v226 ^ ((_DWORD)v134 + 3766)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v212) = v134[3766];
  *(_DWORD *)(v4 + 9512) = v212;
  LODWORD(v235) = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9544) + (v235 >> 24)) ^ v212 ^ v235 ^ *(unsigned __int8 *)(*(_QWORD *)(v4 + 9536) + (v235 >> 24) + 3) ^ *(unsigned __int8 *)(*(_QWORD *)(v4 + 9528) + (v235 >> 24) + 3) ^ (-91 * (v235 >> 24));
  v236 = v229;
  LOBYTE(v207) = (((v192 ^ (2 * (v192 & v210))) & v147) >> (char)v191) | ((unint64_t)(v192 ^ (2 * (v192 & v210))) << v229);
  v237 = *(_QWORD *)(v4 + 9688);
  LODWORD(v235) = (v235 ^ 0xFFFFFFD9) + *(unsigned __int8 *)(v237 + (v235 ^ 0x6CLL));
  LODWORD(v229) = (*(unsigned __int8 *)(v225 + ((57 * ((v235 ^ 0x2C) & *(_BYTE *)(v4 + 9600))) ^ 0x1DLL)) ^ (57 * ((v235 ^ 0x2C) & *(_DWORD *)(v4 + 9600))) ^ 0x7C)
                + 86;
  LODWORD(v229) = *(unsigned __int8 *)(v234 + (((v229 >> 3) & 0xF | (32 * v229)) ^ 0x39));
  LODWORD(v229) = v229 ^ ((v229 ^ 0xA0) >> 3) ^ ((v229 ^ 0xA0) >> 2) ^ 6;
  v238 = ((_DWORD)v229 - ((2 * (_DWORD)v229 + 18) & 0x58) + 117) ^ v235;
  v239 = *(_QWORD *)(v4 + 9648);
  v209[3306] = (v207 - ((2 * v207) & 0x36) - 101) ^ v174 ^ (((unint64_t)(v238 & v147) >> v239) | (v238 << v224));
  v240 = v231;
  LODWORD(v238) = *v231 & 0xC058E860;
  v241 = v232;
  LODWORD(v235) = *(_DWORD *)(*v232 + (int)v238);
  v242 = -333269657
       * ((-333269657 * ((v235 ^ ((_DWORD)v134 + 3751)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v235 ^ ((_DWORD)v134 + 3751)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v242) = *(unsigned __int8 *)(v135 + (v242 >> 24)) ^ v134[3751] ^ *(unsigned __int8 *)((v242 >> 24) + v136 + 1) ^ *(unsigned __int8 *)((v242 >> 24) + v137 + 5) ^ v242 ^ (127 * ((-333269657 * ((-333269657 * ((v235 ^ ((_DWORD)v134 + 3751)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v235 ^ ((_DWORD)v134 + 3751)) & 0x7FFFFFFF)) >> 16))) >> 24));
  v243 = v237;
  LOBYTE(v242) = (v242 ^ 0x3D) + *(_BYTE *)(v237 + (v242 ^ 0x88));
  LOBYTE(v242) = *(_BYTE *)(*(_QWORD *)(v4 + 9624)
                          + (((v242 >> 3) | (32 * v242)) ^ 0xBCLL));
  *(_DWORD *)(v4 + 9600) = (v233 ^ 0xC6C9E89B) + (*(_DWORD *)(v4 + 9392) ^ 0x39361764);
  LOBYTE(v233) = v242 ^ 0x7F ^ (2 * ((v242 ^ 0x7F) & v210));
  v244 = -333269657
       * ((-333269657 * ((v235 ^ ((_DWORD)v134 + 3767)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v235 ^ ((_DWORD)v134 + 3767)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v227) = *(_BYTE *)(v234
                          + ((((v233 & v147) >> 4) | (16 * (v233 & v147))) ^ 0x39));
  v245 = *(_QWORD *)(v4 + 9696);
  LOBYTE(v244) = *(_BYTE *)(v245
                          + (v134[3767] ^ v244 ^ *(_BYTE *)(v135 + (v244 >> 24)) ^ *(_BYTE *)((v244 >> 24) + v136 + 1) ^ *(_BYTE *)((v244 >> 24) + v137 + 5) ^ (127 * BYTE3(v244)) ^ 0xD0)) ^ 0xF;
  LODWORD(v209) = *(_DWORD *)(v4 + 9568);
  v246 = v224;
  LODWORD(v244) = (((unint64_t)((v227 ^ ((v227 ^ 0xA0) >> 3) ^ ((v227 ^ 0xA0) >> 2) ^ 6)
                                                      + 73) >> (char)v191) | ((unint64_t)v233 << v236)) ^ (((unint64_t)(v244 ^ (2 * (v244 & v209))) << v224) | ((unint64_t)((*(_BYTE *)(*(_QWORD *)(v4 + 9440) + ((57 * ((v244 ^ (2 * (v244 & v209))) & v147)) ^ 0xD6)) ^ 0xE) + 86) >> v239));
  LOBYTE(v224) = v174;
  v230[3307] = (v244 - ((2 * v244) & 0x36) - 101) ^ v174;
  LOBYTE(v242) = ((((v233 & v147) >> 4) & 4 ^ 4) + (((v233 & v147) >> 4) & 4)) & 8;
  LOBYTE(v233) = (v242 ^ 0x68) + v242;
  LODWORD(v207) = *(_DWORD *)(*v241 + (int)(*v240 & 0xC058E860));
  v247 = -333269657
       * ((-333269657 * ((v207 ^ ((_DWORD)v134 + 3752)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v207 ^ ((_DWORD)v134 + 3752)) & 0x7FFFFFFF)) >> 16));
  v248 = v247 >> 24;
  LODWORD(v247) = *(unsigned __int8 *)((v247 >> 24) + v136 + 1) ^ *(unsigned __int8 *)(v135 + (v247 >> 24)) ^ *(unsigned __int8 *)((v247 >> 24) + v137 + 5) ^ v247 ^ v134[3752];
  HIDWORD(v123) = v247 ^ -(int)v248;
  LODWORD(v123) = (v247 ^ (127 * (_DWORD)v248)) << 24;
  LODWORD(v248) = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9592)
                                     + ((((((((*(_BYTE *)(*(_QWORD *)(v4 + 9576)
                                                                         + ((v123 >> 28) ^ 0x4BLL))
                                                              - 6) ^ 0x11)
                                                            + 73) ^ 0x27)
                                                          + *(_BYTE *)(v243
                                                                     + ((((*(_BYTE *)(*(_QWORD *)(v4 + 9576) + ((v123 >> 28) ^ 0x4BLL))
                                                                                          - 6) ^ 0x11)
                                                                                        + 73) ^ 0x92))) ^ 8)
                                                        - 66) ^ 0x9DLL));
  LODWORD(v248) = ((v248 >> 1) | ((_DWORD)v248 << 7)) ^ (32
                                                                     * ((v248 >> 1) | ((_DWORD)v248 << 7))) ^ (16 * ((v248 >> 1) | ((_DWORD)v248 << 7))) ^ 0x41;
  LOBYTE(v247) = (_BYTE)v210;
  v249 = v236;
  LOBYTE(v248) = ((unint64_t)((((v248 >> 2) | ((_BYTE)v248 << 6)) ^ 0x74u ^ (2 * ((((v248 >> 2) | ((_BYTE)v248 << 6)) ^ 0x74) & v210))) & v147) >> (char)v191) | ((unint64_t)(((v248 >> 2) | ((_BYTE)v248 << 6)) ^ 0x74u ^ (2 * ((((v248 >> 2) | ((_BYTE)v248 << 6)) ^ 0x74) & v210))) << v236);
  v250 = -333269657
       * ((-333269657 * ((v207 ^ ((_DWORD)v134 + 3766)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v207 ^ ((_DWORD)v134 + 3766)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v239) = *(_DWORD *)(v4 + 9512);
  v251 = -333269657
       * ((-333269657 * ((v207 ^ ((_DWORD)v134 + 3768)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v207 ^ ((_DWORD)v134 + 3768)) & 0x7FFFFFFF)) >> 16));
  v252 = v251 >> 24;
  LODWORD(v251) = *(unsigned __int8 *)((v251 >> 24) + v136 + 1) ^ *(unsigned __int8 *)(v135 + (v251 >> 24)) ^ *(unsigned __int8 *)((v251 >> 24) + v137 + 5) ^ v251 ^ v134[3768];
  HIDWORD(v123) = v251 ^ -(int)v252;
  LODWORD(v123) = (v251 ^ (127 * (_DWORD)v252)) << 24;
  v253 = *(_QWORD *)(v4 + 9632);
  LOBYTE(v248) = *(_BYTE *)(v253 + ((((v248 - ((2 * v248) & 0x36) - 101) ^ v224) - 66) ^ 0xCDLL));
  LOBYTE(v234) = ((v248 ^ v233) >> (((*(_BYTE *)(*(_QWORD *)(v4 + 9544) + (v250 >> 24)) ^ v239 ^ *(_BYTE *)(*(_QWORD *)(v4 + 9536) + (v250 >> 24) + 3) ^ *(_BYTE *)(*(_QWORD *)(v4 + 9528) + (v250 >> 24) + 3) ^ (103 * ((103 * (v207 ^ ((_BYTE)v134 - 74))) ^ ((-333269657 * ((v207 ^ ((_DWORD)v134 + 3766)) & 0x7FFFFFFF)) >> 16))) ^ BYTE3(v250)) & 2)
                                                   + (~((103
                                                       * ((103 * (v207 ^ ((_BYTE)v134 - 74))) ^ ((-333269657
                                                                                                * ((v207 ^ ((_DWORD)v134 + 3766)) & 0x7FFFFFFF)) >> 16))) ^ v239 ^ *(_BYTE *)(v135 + (v250 >> 24)) ^ *(_BYTE *)((v250 >> 24) + v136 + 1) ^ -((-333269657 * ((-333269657 * ((v207 ^ ((_DWORD)v134 + 3766)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v207 ^ ((_DWORD)v134 + 3766)) & 0x7FFFFFFF)) >> 16))) >> 24) ^ *(_BYTE *)((v250 >> 24) + v137 + 5)) & 2))) | ((_BYTE)v248 << 6);
  v254 = *(_QWORD *)(v4 + 9584);
  LODWORD(v248) = *(unsigned __int8 *)(v245
                                     + (*(unsigned __int8 *)(v254 + ((v123 >> 27) ^ 0x9CLL)) ^ 0x87));
  LODWORD(v224) = (v248 ^ 0x75 ^ -(v248 ^ 0x75) ^ ((v248 ^ 0xFFFFFFF1) + 124)) + 123;
  LODWORD(v239) = (_DWORD)v209;
  LOBYTE(v224) = v224 ^ (2 * (v224 & v209));
  v255 = v246;
  v256 = (unint64_t)v224 << v246;
  v257 = *(_QWORD *)(v4 + 9648);
  LODWORD(v224) = *(unsigned __int8 *)(v253
                                     + (((((unint64_t)(v224 & v147) >> v257) | v256)
                                                        - 66) ^ 0xCDLL));
  v258 = v230;
  v230[3308] = ((v224 >> 2) | ((_BYTE)v224 << 6)) ^ 0x1A ^ v234;
  v259 = *(int **)(v4 + 9216);
  v260 = *(_QWORD **)(v4 + 9088);
  LODWORD(v256) = *(_DWORD *)(*v260 + (int)(*v259 & 0xC058E860));
  v261 = -333269657
       * ((-333269657 * ((v256 ^ ((_DWORD)v134 + 3753)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v256 ^ ((_DWORD)v134 + 3753)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v261) = *(unsigned __int8 *)(v135 + (v261 >> 24)) ^ v134[3753] ^ *(unsigned __int8 *)((v261 >> 24) + v136 + 1) ^ *(unsigned __int8 *)((v261 >> 24) + v137 + 5) ^ v261 ^ (127 * ((-333269657 * ((-333269657 * ((v256 ^ ((_DWORD)v134 + 3753)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v256 ^ ((_DWORD)v134 + 3753)) & 0x7FFFFFFF)) >> 16))) >> 24));
  v262 = *(_QWORD *)(v4 + 9688);
  LOBYTE(v261) = ((v261 ^ 0x50) + *(_BYTE *)(v262 + (v261 ^ 0xE5))) ^ 0x27;
  v263 = *(_QWORD *)(v4 + 9680);
  v264 = -333269657
       * ((-333269657 * ((v256 ^ ((_DWORD)v134 + 3769)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v256 ^ ((_DWORD)v134 + 3769)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v264) = v134[3769] ^ v264 ^ *(unsigned __int8 *)(v135 + (v264 >> 24)) ^ *(unsigned __int8 *)((v264 >> 24) + v136 + 1) ^ *(unsigned __int8 *)((v264 >> 24) + v137 + 5) ^ (127 * (v264 >> 24)) ^ 0xFFFFFF9F;
  LOBYTE(v264) = *(_BYTE *)(*(_QWORD *)(v4 + 9640)
                          + (((v264 >> 4) | (16 * v264)) ^ 0x39));
  LODWORD(v264) = *(unsigned __int8 *)(v245
                                     + (((v264 ^ ((v264 ^ 0xA0) >> 3) ^ ((v264 ^ 0xA0) >> 2) ^ 6)
                                                        + 73) ^ 0x88)) ^ 0x40;
  LOBYTE(v264) = (((v264 ^ (2 * (v264 & v239))) & v147) >> v257) | ((unint64_t)(v264 ^ (2 * (v264 & v239))) << v255);
  v230[3309] = *(_DWORD *)(v4 + 9656) ^ *(_BYTE *)(v254
                                                 + (((v264 >> 3) | (32 * v264)) ^ 0x9CLL)) ^ (((*(_BYTE *)(v263 + ((57 * ((unint64_t)(v261 ^ (2 * (v261 & v247))) << v249)) ^ 0x1DLL)) ^ (57 * ((unint64_t)(v261 ^ (2 * (v261 & v247))) << v249)) ^ 0x7C) + 86) | (((v261 ^ (2 * (v261 & v247))) & v147) >> (char)v191)) ^ 0x1E;
  v265 = v260;
  LODWORD(v264) = *(_DWORD *)(*v260 + (int)(*v259 & 0xC058E860));
  v266 = -333269657
       * ((-333269657 * ((v264 ^ ((_DWORD)v134 + 3754)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v264 ^ ((_DWORD)v134 + 3754)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v266) = *(unsigned __int8 *)(v135 + (v266 >> 24)) ^ v134[3754] ^ *(unsigned __int8 *)((v266 >> 24) + v136 + 1) ^ *(unsigned __int8 *)((v266 >> 24) + v137 + 5) ^ v266 ^ (127 * ((-333269657 * ((-333269657 * ((v264 ^ ((_DWORD)v134 + 3754)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v264 ^ ((_DWORD)v134 + 3754)) & 0x7FFFFFFF)) >> 16))) >> 24));
  LOBYTE(v266) = (v266 ^ 0xF8) + *(_BYTE *)(v262 + (v266 ^ 0x4DLL));
  LOBYTE(v225) = v266 ^ (2 * ((v266 ^ 0x4C) & v247) - ((4 * ((v266 ^ 0x4C) & v247)) & 0x58) + 44);
  LOBYTE(v225) = ((*(_BYTE *)(*(_QWORD *)(v4 + 9576)
                            + ((((v225 ^ 0x60) >> 4) | (16 * v225)) ^ 0x4BLL))
                 - 6) ^ 0x11)
               + 73;
  LOBYTE(v225) = ((unint64_t)(v225 & v147) >> (char)v191) | ((unint64_t)v225 << v249);
  v267 = -333269657
       * ((-333269657 * ((v264 ^ ((_DWORD)v134 + 3770)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v264 ^ ((_DWORD)v134 + 3770)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v264) = v134[3770] ^ *(unsigned __int8 *)(v135 + (v267 >> 24)) ^ *(unsigned __int8 *)((v267 >> 24) + v136 + 1);
  LODWORD(v233) = *(unsigned __int8 *)((v267 >> 24) + v137 + 5);
  LODWORD(v266) = 57
                * (((v264 ^ v233 ^ v267 ^ (127 * (v267 >> 24)) ^ 0xFFFFFF95)
                  + *(unsigned __int8 *)(v262 + ((v264 ^ v267 ^ v233 ^ (127 * BYTE3(v267))) ^ 0x20u))) ^ ((((v266 & 0x7F ^ 0x33) + (v266 & 0x7F ^ 0x4C)) & 0xFFFFFFFD) - 28));
  v268 = v263;
  LOBYTE(v266) = (*(_BYTE *)(v263 + (v266 ^ 0x1DLL)) ^ v266 ^ 0x7C) + 86;
  LOBYTE(v266) = (*(_BYTE *)(v263 + ((57 * (v266 ^ (2 * (v266 & v239)))) ^ 0x1DLL)) ^ (57 * (v266 ^ (2 * (v266 & v239)))) ^ 0x7C)
               + 86;
  LODWORD(v230) = *(_DWORD *)(v4 + 9560);
  LOBYTE(v225) = 57
               * ((v225 - 101 - ((2 * v225) & 0x36)) ^ v230 ^ (((v266 & v147) >> v257) | ((unint64_t)v266 << v255)));
  v258[3310] = (*(_BYTE *)(v263 + (v225 ^ 0x1DLL)) ^ v225 ^ 0x7C) + 86;
  LODWORD(v225) = *(_DWORD *)(*v260 + (int)(*v259 & 0xC058E860));
  v269 = -333269657
       * ((-333269657 * ((v225 ^ ((_DWORD)v134 + 3755)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v225 ^ ((_DWORD)v134 + 3755)) & 0x7FFFFFFF)) >> 16));
  v270 = *(_QWORD *)(v4 + 9696);
  LOBYTE(v269) = *(_BYTE *)(v270
                          + (v134[3755] ^ *(_BYTE *)(v135 + (v269 >> 24)) ^ *(_BYTE *)((v269 >> 24) + v136 + 1) ^ *(_BYTE *)((v269 >> 24) + v137 + 5) ^ ((103 * ((103 * (v225 ^ ((_BYTE)v134 - 85))) ^ ((-333269657 * ((v225 ^ ((_DWORD)v134 + 3755)) & 0x7FFFFFFF)) >> 16))) ^ (127 * ((-333269657 * ((-333269657 * ((v225 ^ ((_DWORD)v134 + 3755)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v225 ^ ((_DWORD)v134 + 3755)) & 0x7FFFFFFF)) >> 16))) >> 24))) ^ 0x31u)) ^ 0xD5;
  LOBYTE(v269) = ((*(_BYTE *)(*(_QWORD *)(v4 + 9440)
                            + ((114 * (v269 & *(_DWORD *)(v4 + 9520))) ^ 0xD6)) ^ 0xE)
                + 86) ^ v269;
  *(_QWORD *)(v4 + 9672) = v249;
  LODWORD(v269) = ((v269 & v147) >> (char)v191) | ((unint64_t)v269 << v249);
  v271 = -333269657
       * ((-333269657 * ((v225 ^ ((_DWORD)v134 + 3771)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                       * ((v225 ^ ((_DWORD)v134 + 3771)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v271) = 57
               * (*(_BYTE *)(v270
                           + ((v134[3771] ^ v271 ^ *(_BYTE *)(v135 + (v271 >> 24)) ^ *(_BYTE *)((v271 >> 24) + v136 + 1) ^ *(_BYTE *)((v271 >> 24) + v137 + 5) ^ (127 * BYTE3(v271))) ^ 0xF7u)) ^ 0xA9);
  LOBYTE(v271) = ((*(_BYTE *)(v268 + (v271 ^ 0x1DLL)) ^ v271 ^ 0x7C) + 86) ^ 0xC0;
  LODWORD(v271) = *(unsigned __int8 *)(*(_QWORD *)(v4 + 9592)
                                     + (((v271 ^ (2 * (v271 & v239))) - 66) ^ 0x9DLL));
  LODWORD(v271) = ((v271 >> 1) | ((_DWORD)v271 << 7)) ^ (32
                                                                     * ((v271 >> 1) | ((_DWORD)v271 << 7))) ^ (16 * ((v271 >> 1) | ((_DWORD)v271 << 7))) ^ 0x41;
  v272 = (v271 >> 2) | ((_DWORD)v271 << 6);
  *(_DWORD *)(v4 + 9656) = v147;
  *(_QWORD *)(v4 + 9704) = v255;
  LODWORD(v272) = (((unint64_t)(v272 & v147) >> v257) | (v272 << v255)) ^ v230 ^ (v269 - ((2 * v269) & 0x36) + 155);
  LOBYTE(v272) = *(_BYTE *)(*(_QWORD *)(v4 + 9640)
                          + (((v272 >> 4) | (16 * v272)) ^ 0x39));
  v258[3311] = (v272 ^ ((v272 ^ 0xA0) >> 3) ^ ((v272 ^ 0xA0) >> 2) ^ 6) + 73;
  LOBYTE(v272) = *(_BYTE *)(*(_QWORD *)(v4 + 8248)
                          + 0x5DE54663FF368B82
                          + ((*(_BYTE *)(*(_QWORD *)(v4 + 8248)
                                       + 0x5DE54663FF368B82
                                       + ((*(_BYTE *)(*(_QWORD *)(v4 + 8248)
                                                    + 0x5DE54663FF368B82
                                                    + ((v258[3305] + 5) & 0xF)
                                                    - 0x5DE54663FF35F012)
                                         + 5) & 0xF)
                                       - 0x5DE54663FF35F012)
                            + 2) & 0xF)
                          - 0x5DE54663FF35F012);
  LODWORD(v239) = *(_DWORD *)(v4 + 9552);
  *(_DWORD *)(v4 + 9696) = *(_DWORD *)(v4 + 9424) - 959846245;
  LODWORD(v269) = *(_DWORD *)(v4 + 9416) + 1;
  *(_DWORD *)(v4 + 9568) = (2 * v269) & 0xFADEB5DC;
  *(_DWORD *)(v4 + 9560) = v269 - 43033874;
  LODWORD(v257) = *(_DWORD *)(v4 + 9408);
  *(_DWORD *)(v4 + 8632) = (2 * v257) & 0xB877F626;
  *(_DWORD *)(v4 + 8952) = v257 + 1547434771;
  LODWORD(v269) = (2 * *(_DWORD *)(v4 + 9608)) ^ 0x8D93D136;
  *(_DWORD *)(v4 + 7936) = -1919692492;
  *(_DWORD *)(v4 + 9544) = (2 * v269) & 0x8D93D134;
  *(_DWORD *)(v4 + 9536) = v269 - 959846245;
  *(_DWORD *)(v4 + 9528) = 2 * *(_DWORD *)(v4 + 9400);
  LODWORD(v269) = *(_DWORD *)(v4 + 9600) + 1;
  *(_DWORD *)(v4 + 9520) = (2 * v269) & 0x8D93D136;
  *(_DWORD *)(v4 + 9512) = v269 - 959846245;
  LODWORD(v260) = v239 ^ 0x1662;
  v273 = v239 - 4107;
  LODWORD(v262) = v239;
  LODWORD(v136) = v239 - 4781;
  v274 = *v259;
  *(_QWORD *)(v4 + 9688) = *v265;
  *(_QWORD *)(v4 + 9600) = v274;
  v275 = *(_QWORD *)(v4 + 8944);
  LODWORD(v249) = -333269657
                * ((v275 ^ *(_DWORD *)(*(_QWORD *)(v4 + 9688) + (v274 & 0xFFFFFFFFEE62092CLL))) & 0x7FFFFFFF);
  v276 = -333269657 * (v249 ^ WORD1(v249));
  *(_BYTE *)(v275 - 0x5FF2739CD1711E9BLL) = **(_BYTE **)(v4 + 6144) ^ *((_BYTE *)*(&off_1004ECA20 + (int)v260)
                                                                      + (v276 >> 24)
                                                                      - 8) ^ *((_BYTE *)*(&off_1004ECA20 + v273)
                                                                             + (v276 >> 24)
                                                                             - 8) ^ *((_BYTE *)*(&off_1004ECA20
                                                                                               + (int)v136)
                                                                                    + (v276 >> 24)
                                                                                    - 1) ^ v276 ^ (-117 * BYTE3(v276)) ^ 0x50;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v4 + 9744)
                                        + 8 * (int)((15975 * ((((_BYTE)v272 + 3) & 0xFu) <= 1)) ^ v262))
                            - 8))();
}

uint64_t sub_100376FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;

  *(_QWORD *)(v11 + 7888) = v9;
  *(_QWORD *)(v11 + 7896) = v8;
  *(_QWORD *)(v11 + 7904) = v12;
  *(_DWORD *)(v11 + 9240) = *(_DWORD *)(v11 + 9616) ^ 0xF3808E2A;
  *(_DWORD *)(v11 + 8560) = *(_DWORD *)(v11 + 9696) - 2 * *(_DWORD *)(v11 + 9456);
  *(_DWORD *)(v11 + 8628) = *(_DWORD *)(v11 + 9448) + *(_DWORD *)(v11 + 9432) - 1;
  *(_DWORD *)(v11 + 8576) = *(_DWORD *)(v11 + 9512) - *(_DWORD *)(v11 + 9520);
  *(_DWORD *)(v11 + 9696) = 1696 * (v10 ^ 0xA37);
  v14 = *(_QWORD *)(v11 + 9744);
  v15 = v13 ^ 0xC6C9E89B;
  v16 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 9632)
                           + ((*(_BYTE *)(*(_QWORD *)(v11 + 6144) + v15) - 66) ^ 0xCDLL));
  v17 = *(_QWORD *)(v11 + 8944) + v15;
  v18 = -333269657 * ((*(_DWORD *)(*(_QWORD *)(v11 + 9688) + a8) ^ v17) & 0x7FFFFFFF);
  v19 = -333269657 * (v18 ^ HIWORD(v18));
  *(_BYTE *)(v17 - 0x5FF2739CD1711E9BLL) = (-13 * (v13 ^ 0x9B)) ^ ((v16 >> 2) | ((_BYTE)v16 << 6)) ^ (*(_DWORD *)(v11 + 9696) - 38) ^ *(_BYTE *)(*(_QWORD *)(v11 + 7904) + (v19 >> 24)) ^ *(_BYTE *)(*(_QWORD *)(v11 + 7896) + (v19 >> 24)) ^ *(_BYTE *)((v19 >> 24) + *(_QWORD *)(v11 + 7888) + 3) ^ v19 ^ (-117 * BYTE3(v19)) ^ 0x50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((8223
                                          * ((((_DWORD)v15 - 959846245 - ((2 * (_DWORD)v15 + 2) & 0x8D93D136) + 1) ^ 0xC6C9E890) > 0xF)) ^ v10))
                            - 12))();
}

uint64_t sub_1003771FC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  _DWORD *v5;
  int v6;
  int v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  char *v72;
  int v73;
  char *v74;
  char *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  char *v81;
  char *v82;
  char *v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  char *v89;
  char *v90;
  uint64_t v91;
  unsigned int v92;
  unsigned int v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  int v272;
  int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  int v300;
  unsigned int v301;
  int v302;
  int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  int v376;
  unsigned int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  int v404;
  int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  int v421;
  unsigned int v422;
  int v423;
  unsigned int v424;
  int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  int v441;
  unsigned int v442;
  int v443;
  unsigned int v444;
  int v445;
  unsigned int v446;
  int v447;
  unsigned int v448;
  int v449;
  unsigned int v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  int v466;
  unsigned int v467;
  int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  int v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  int v501;
  unsigned int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  unsigned int v509;
  int v510;
  int v511;
  uint64_t v512;
  unsigned int v513;
  int v514;
  int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  int v519;
  uint64_t v520;
  unsigned int v521;
  int v522;
  unsigned int v523;

  *(_DWORD *)(v3 + 8552) = *(_DWORD *)(v3 + 9480) ^ *(_DWORD *)(v3 + 9488) ^ *(_DWORD *)(v3 + 9496) ^ *(_DWORD *)(v3 + 9472);
  *(_DWORD *)(v3 + 8980) = *(_DWORD *)(v3 + 9560) - *(_DWORD *)(v3 + 9568);
  *(_DWORD *)(v3 + 8544) = (*(_DWORD *)(v3 + 9536) - *(_DWORD *)(v3 + 9544)) ^ *(_DWORD *)(v3 + 9608) ^ *(_DWORD *)(v3 + 9528) ^ *(_DWORD *)(v3 + 9464);
  v6 = *(_DWORD *)(*v4 + (int)(*v5 & 0xE8B5AED8));
  v7 = *(_DWORD *)(v3 + 9696);
  v8 = (char *)*(&off_1004ECA20 + (v7 ^ 0xFAA)) - 8;
  v9 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xEAB));
  v10 = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5504)) & 0x7FFFFFFF);
  v11 = v10 ^ HIWORD(v10);
  v12 = *(_DWORD **)(v3 + 8248);
  v13 = (uint64_t)*(&off_1004ECA20 + v7 - 2442);
  v14 = (((v0 ^ 0xFFFFFFDF) & 0x3F ^ 0x8C3EAF3F) & 0x8828AB2E | (v0 ^ 0xFFFFFFDF) & 0x2E)
      - 653823913
      * (((v0 ^ 0xFFFFFFDF) & 0x3F ^ 0x8C3EAF3F) + ((v0 ^ 0xFFFFFFDF) & 0x3F))
      * (*(_DWORD *)&v8[4 * ((-333269657 * v11) >> 24)] ^ v12[1672] ^ *(_DWORD *)(v9
                                                                                              + 4
                                                                                              * ((-333269657 * v11) >> 24)) ^ *(_DWORD *)(v13 + 4 * ((-333269657 * v11) >> 24)) ^ (-1251540992 * v11) ^ (-333269657 * v11) ^ (-1315803351 * ((-333269657 * v11) >> 24)));
  v15 = ((((v2 ^ 0xD555FA96) >> 13) - 959846245 - (((v2 ^ 0xD555FA96) >> 12) & 0x3D136)) ^ 0xC6C9E89B)
      + (v2 ^ 0xD555FA96);
  v16 = v15 - (v15 >> 8);
  v17 = v16 - ((2 * v16 - 392019954) & 0x8D93D136) - 1155856222;
  v18 = (v17 ^ 0xC6C9E89B) + ((v17 >> 12) ^ 0xFFF39361) + 1;
  v19 = ((v18 - 959846245 - ((2 * v18) & 0x8D93D136)) ^ 0xC6C9E89B)
      + (((v18 - 959846245 - ((2 * v18) & 0x8D93D136)) >> 5) ^ 0xF9C9B0BB)
      + 1;
  v20 = v19 - 959846245 - ((2 * v19) & 0x8D93D136);
  *(_DWORD *)(v3 + 9036) = v16 ^ v1 ^ v20;
  v21 = (v20 ^ 0x3F7E5752)
      + ((v20 >> 11) ^ 0xFFF81035)
      - 959846244
      - ((2 * ((v20 ^ 0x3F7E5752) + ((v20 >> 11) ^ 0xFFF81035) + 1)) & 0x8D93D136);
  v22 = *(_DWORD *)(*(_QWORD *)(v3 + 9688) + (*(_QWORD *)(v3 + 9600) & 0xFFFFFFFFE8B5AED8));
  v23 = -333269657 * ((v22 ^ *(_DWORD *)(v3 + 5500)) & 0x7FFFFFFF);
  v24 = v23 ^ HIWORD(v23);
  v25 = *(_DWORD *)&v8[4 * ((-333269657 * v24) >> 24)] ^ v12[1553] ^ *(_DWORD *)(v9
                                                                                             + 4
                                                                                             * ((-333269657 * v24) >> 24)) ^ *(_DWORD *)(v13 + 4 * ((-333269657 * v24) >> 24)) ^ (-1251540992 * v24) ^ (-333269657 * v24) ^ (-1315803351 * ((-333269657 * v24) >> 24));
  v26 = -333269657 * ((v22 ^ *(_DWORD *)(v3 + 5516)) & 0x7FFFFFFF);
  v27 = v26 ^ HIWORD(v26);
  v28 = (-1251540992 * v27) ^ v12[1564];
  v27 *= -333269657;
  v29 = v28 ^ v27 ^ *(_DWORD *)&v8[4 * HIBYTE(v27)] ^ *(_DWORD *)(v9 + 4 * HIBYTE(v27)) ^ (-1315803351 * HIBYTE(v27)) ^ *(_DWORD *)(v13 + 4 * HIBYTE(v27));
  v30 = (1202855529 * v29 - 552599266 - ((-1889256238 * v29) & 0xBE20023C)) ^ 0xDF10011E;
  *(_DWORD *)(v3 + 9688) = v30 - ((2 * v30 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9160) = ((v21 >> 3) ^ 0x18D93D13)
                         + (v21 ^ 0xC6C9E89B)
                         - 959846245
                         - ((2 * (((v21 >> 3) ^ 0x18D93D13) + (v21 ^ 0xC6C9E89B))) & 0x8D93D136);
  v31 = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5508)) & 0x7FFFFFFF);
  v32 = v31 ^ HIWORD(v31);
  v33 = *(_DWORD *)&v8[4 * ((-333269657 * v32) >> 24)] ^ v12[1655] ^ *(_DWORD *)(v9
                                                                                             + 4
                                                                                             * ((-333269657 * v32) >> 24)) ^ *(_DWORD *)(v13 + 4 * ((-333269657 * v32) >> 24)) ^ (-1251540992 * v32) ^ (-333269657 * v32) ^ (-1315803351 * ((-333269657 * v32) >> 24));
  v34 = (1202855529 * v33 - 959846245 - ((-1889256238 * v33) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9568) = v34 - ((2 * v34 - 1099659602) & 0x8D93D136);
  v35 = (1202855529 * v25 - 959846245 - ((-1889256238 * v25) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9608) = v35 - ((2 * v35 - 1099659602) & 0x8D93D136);
  v36 = v6;
  v37 = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5512)) & 0x7FFFFFFF);
  v38 = v37 ^ HIWORD(v37);
  v39 = (-1251540992 * v38) ^ v12[1633] ^ (-333269657 * v38) ^ *(_DWORD *)&v8[4
                                                                            * ((-333269657 * v38) >> 24)] ^ *(_DWORD *)(v9 + 4 * ((-333269657 * v38) >> 24)) ^ (-1315803351 * ((-333269657 * v38) >> 24)) ^ *(_DWORD *)(v13 + 4 * ((-333269657 * v38) >> 24));
  LODWORD(v13) = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5520)) & 0x7FFFFFFF);
  LODWORD(v13) = v13 ^ WORD1(v13);
  v40 = 4 * ((-333269657 * v13) >> 24);
  LODWORD(v13) = (-333269657 * v13) ^ (-1251540992 * v13) ^ v12[1545] ^ (921215617
                                                                       * ((-333269657 * v13) >> 24)) ^ *(_DWORD *)((char *)*(&off_1004ECA20 + v7 - 2972) + v40 - 4) ^ *(_DWORD *)((char *)*(&off_1004ECA20 + (v7 ^ 0x90C)) + v40 - 8) ^ *(_DWORD *)((char *)*(&off_1004ECA20 + (v7 ^ 0xF6F)) + v40 - 4);
  v41 = v14 + 500924612 - ((2 * (v14 + 1460770857)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9520) = v41;
  v42 = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 6224)) & 0x7FFFFFFF);
  v43 = v42 ^ HIWORD(v42);
  v44 = v12[1646] ^ (-1251540992 * v43);
  v43 *= -333269657;
  v45 = (char *)*(&off_1004ECA20 + (v7 ^ 0xCAA)) - 8;
  v46 = (char *)*(&off_1004ECA20 + v7 - 2524) - 4;
  v47 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xF29));
  v48 = *(_DWORD *)&v45[4 * HIBYTE(v43)] ^ v44 ^ v43 ^ *(_DWORD *)&v46[4 * HIBYTE(v43)] ^ (1643625849 * HIBYTE(v43)) ^ *(_DWORD *)(v47 + 4 * HIBYTE(v43));
  v49 = 1202855529 * v48 - 959846245 - ((-1889256238 * v48) & 0x8D93D136);
  v50 = v49 & 0x45200210;
  *(_DWORD *)(v3 + 9600) = (v49 ^ 0xC6C9E89B) - ((2 * (v49 ^ 0xC6C9E89B) - 1099659602) & 0x8D93D136);
  LODWORD(v13) = (1202855529 * v13 - 959846245 - ((-1889256238 * v13) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9616) = v13 - ((2 * v13 - 1099659602) & 0x8D93D136);
  LODWORD(v13) = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5528)) & 0x7FFFFFFF);
  LODWORD(v13) = v13 ^ WORD1(v13);
  v51 = (-1251540992 * v13) ^ v12[1597];
  LODWORD(v13) = -333269657 * v13;
  *(_DWORD *)(v3 + 9512) = v51 ^ v13 ^ (1643625849 * BYTE3(v13)) ^ *(_DWORD *)&v45[4 * BYTE3(v13)] ^ *(_DWORD *)&v46[4 * BYTE3(v13)] ^ *(_DWORD *)(v47 + 4 * BYTE3(v13));
  v52 = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5524)) & 0x7FFFFFFF);
  v53 = v52 ^ HIWORD(v52);
  v54 = 4 * ((-333269657 * v53) >> 24);
  LODWORD(v45) = *(_DWORD *)&v45[v54];
  LODWORD(v46) = *(_DWORD *)&v46[v54];
  *(_DWORD *)(v3 + 9544) = 1202855529 * v39 - ((-1889256238 * v39 - 1099659602) & 0x8D93D136);
  v55 = v45 ^ v12[1680] ^ v46 ^ *(_DWORD *)(v47 + v54) ^ (-1251540992 * v53) ^ (-333269657 * v53) ^ (1643625849 * ((-333269657 * v53) >> 24));
  LODWORD(v45) = 1202855529 * v55 - 959846245 - ((-1889256238 * v55) & 0x8D93D136);
  v56 = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5532)) & 0x7FFFFFFF);
  v57 = v56 ^ HIWORD(v56);
  LODWORD(v13) = v12[1573] ^ (-1251540992 * v57);
  v57 *= -333269657;
  v58 = HIBYTE(v57);
  v59 = (uint64_t)*(&off_1004ECA20 + v7 - 2483);
  *(_QWORD *)(v3 + 8904) = v59;
  v60 = 4 * HIBYTE(v57);
  LODWORD(v13) = *(_DWORD *)(v59 + v60) ^ v13 ^ v57;
  v61 = (char *)*(&off_1004ECA20 + (v7 ^ 0xD56)) - 8;
  *(_QWORD *)(v3 + 8920) = v61;
  LODWORD(v13) = v13 ^ *(_DWORD *)&v61[v60] ^ (1503002217 * v58);
  v62 = (char *)*(&off_1004ECA20 + v7 - 2565) - 12;
  *(_QWORD *)(v3 + 8912) = v62;
  LODWORD(v13) = v13 ^ *(_DWORD *)&v62[4 * v58 + 12];
  *(_DWORD *)(v3 + 9448) = -1509676045;
  *(_DWORD *)(v3 + 9536) = 1202855529 * v13 - 1509676045 + ~((-1889256238 * v13 - 1099659602) & 0x8D93D136);
  LODWORD(v13) = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5540)) & 0x7FFFFFFF);
  LODWORD(v13) = v13 ^ WORD1(v13);
  LODWORD(v60) = (-1251540992 * v13) ^ v12[1674];
  LODWORD(v13) = -333269657 * v13;
  v63 = (char *)*(&off_1004ECA20 + (v7 ^ 0xFE6)) - 12;
  v64 = (char *)*(&off_1004ECA20 + (v7 ^ 0xD0B)) - 8;
  v65 = (char *)*(&off_1004ECA20 + (v7 ^ 0xD94)) - 12;
  LODWORD(v13) = v60 ^ v13 ^ (-729364393 * BYTE3(v13)) ^ *(_DWORD *)&v63[4 * BYTE3(v13)] ^ *(_DWORD *)&v64[4 * BYTE3(v13)] ^ *(_DWORD *)&v65[4 * BYTE3(v13)];
  LODWORD(v60) = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5536)) & 0x7FFFFFFF);
  LODWORD(v60) = v60 ^ WORD1(v60);
  LODWORD(v9) = (-1251540992 * v60) ^ v12[1552];
  LODWORD(v60) = -333269657 * v60;
  LODWORD(v60) = v9 ^ v60 ^ (-729364393 * BYTE3(v60)) ^ *(_DWORD *)&v63[4 * BYTE3(v60)] ^ *(_DWORD *)&v64[4 * BYTE3(v60)] ^ *(_DWORD *)&v65[4 * BYTE3(v60)];
  LODWORD(v9) = -333269657 * ((v6 ^ *(_DWORD *)(v3 + 5548)) & 0x7FFFFFFF);
  LODWORD(v9) = v9 ^ WORD1(v9);
  v66 = *(_DWORD *)&v63[4 * ((-333269657 * v9) >> 24)] ^ v12[1592] ^ *(_DWORD *)&v64[4
                                                                                                 * ((-333269657 * v9) >> 24)] ^ *(_DWORD *)&v65[4 * ((-333269657 * v9) >> 24)] ^ (-1251540992 * v9) ^ (-333269657 * v9) ^ (-729364393 * ((-333269657 * v9) >> 24));
  LODWORD(v13) = (1202855529 * v13 - 959846245 - ((-1889256238 * v13) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9552) = v13 - ((2 * v13 - 1099659602) & 0x8D93D136);
  LODWORD(v13) = (v41 & 0xDF3A4357 ^ 0xC6084013 | v41 & 0xDF3A4357 ^ 0x19320344) + 1202855529 * v60;
  *(_DWORD *)(v3 + 9560) = v13 - 959846245 - ((2 * v13) & 0x8D93D136);
  LODWORD(v13) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5544)) & 0x7FFFFFFF);
  LODWORD(v13) = v13 ^ WORD1(v13);
  LODWORD(v13) = *(_DWORD *)&v63[4 * ((-333269657 * v13) >> 24)] ^ v12[1635] ^ *(_DWORD *)&v64[4 * ((-333269657 * v13) >> 24)] ^ (-1251540992 * v13) ^ (-333269657 * v13) ^ *(_DWORD *)&v65[4 * ((-333269657 * v13) >> 24)] ^ (-729364393 * ((-333269657 * v13) >> 24));
  *(_DWORD *)(v3 + 9528) = 1202855529 * v13 - ((-1889256238 * v13 - 1099659602) & 0x8D93D136);
  LODWORD(v13) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5552)) & 0x7FFFFFFF);
  LODWORD(v13) = v13 ^ WORD1(v13);
  v67 = (-333269657 * v13) >> 24;
  v68 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xCDE));
  v69 = 4 * v67;
  v70 = (-333269657 * v13) ^ (-1251540992 * v13) ^ v12[1643] ^ (-138150877 * v67) ^ *(_DWORD *)(v68 + v69);
  v71 = (char *)*(&off_1004ECA20 + (v7 ^ 0xE14)) - 12;
  v72 = (char *)*(&off_1004ECA20 + v7 - 3007) - 8;
  v73 = v70 ^ *(_DWORD *)&v71[v69] ^ *(_DWORD *)&v72[4 * v67 + 16];
  LODWORD(v69) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5556)) & 0x7FFFFFFF);
  LODWORD(v69) = v69 ^ WORD1(v69);
  LODWORD(v59) = *(_DWORD *)&v63[4 * ((-333269657 * v69) >> 24)] ^ v12[1642] ^ *(_DWORD *)&v64[4 * ((-333269657 * v69) >> 24)] ^ *(_DWORD *)&v65[4 * ((-333269657 * v69) >> 24)] ^ (-1251540992 * v69) ^ (-333269657 * v69) ^ (-729364393 * ((-333269657 * v69) >> 24));
  *(_DWORD *)(v3 + 9480) = 1202855529 * v59 - ((-1889256238 * v59 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9368) = 1202855529 * v66 - ((-1889256238 * v66 - 1099659602) & 0x8D93D136);
  LODWORD(v59) = (1202855529 * v73 - 959846245 - ((-1889256238 * v73) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9496) = v59 - ((2 * v59 - 1099659602) & 0x8D93D136);
  LODWORD(v59) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6228)) & 0x7FFFFFFF);
  LODWORD(v59) = v59 ^ WORD1(v59);
  LODWORD(v63) = (-1251540992 * v59) ^ v12[1638];
  LODWORD(v59) = -333269657 * v59;
  v74 = (char *)*(&off_1004ECA20 + (v7 ^ 0xD21)) - 12;
  v75 = (char *)*(&off_1004ECA20 + v7 - 2481) - 8;
  v76 = v7;
  v77 = (uint64_t)*(&off_1004ECA20 + v7 - 3141);
  LODWORD(v59) = v63 ^ v59 ^ (2061470229 * BYTE3(v59)) ^ *(_DWORD *)&v74[4 * BYTE3(v59)] ^ *(_DWORD *)&v75[4 * BYTE3(v59)] ^ *(_DWORD *)(v77 + 4 * (BYTE3(v59) + 1));
  *(_DWORD *)(v3 + 9464) = (v45 ^ 0xC6C9E89B)
                         - ((2 * (v45 ^ 0xC6C9E89B) - 1099659602) & 0x8D93D136);
  LODWORD(v45) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5560)) & 0x7FFFFFFF);
  LODWORD(v45) = v45 ^ (v45 >> 16);
  LODWORD(v72) = (-1251540992 * (_DWORD)v45) ^ v12[1623] ^ (-333269657 * (_DWORD)v45) ^ (-138150877
                                                                                       * ((-333269657 * (_DWORD)v45) >> 24)) ^ *(_DWORD *)(v68 + 4 * ((-333269657 * (_DWORD)v45) >> 24)) ^ *(_DWORD *)&v71[4 * ((-333269657 * (_DWORD)v45) >> 24)] ^ *(_DWORD *)&v72[4 * ((-333269657 * (_DWORD)v45) >> 24) + 16];
  *(_DWORD *)(v3 + 9488) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = (v50 ^ 0x9B3A4347 | v50 ^ 0x44000010) + 1202855529 * *(_DWORD *)(v3 + 9512);
  LODWORD(v45) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5564)) & 0x7FFFFFFF);
  LODWORD(v45) = v45 ^ (v45 >> 16);
  v78 = 4 * ((-333269657 * (_DWORD)v45) >> 24);
  v79 = *(_DWORD *)&v74[v78];
  *(_DWORD *)(v3 + 9512) = (_DWORD)v72 - 959846245 - ((2 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = v79 ^ v12[1678] ^ *(_DWORD *)&v75[v78] ^ *(_DWORD *)(v77
                                                                    + 4
                                                                    * (((-333269657 * (_DWORD)v45) >> 24)
                                                                     + 1)) ^ (-1251540992 * (_DWORD)v45) ^ (-333269657 * (_DWORD)v45) ^ (2061470229 * ((-333269657 * (_DWORD)v45) >> 24));
  *(_DWORD *)(v3 + 9456) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5568)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  v80 = v12[1636] ^ (-1251540992 * (_DWORD)v72);
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  v81 = (char *)*(&off_1004ECA20 + (v7 ^ 0xE18)) - 12;
  v82 = (char *)*(&off_1004ECA20 + v7 - 2886) - 12;
  v83 = (char *)*(&off_1004ECA20 + v7 - 2670) - 12;
  LODWORD(v72) = *(_DWORD *)&v81[4 * (v72 >> 24)] ^ v80 ^ v72 ^ *(_DWORD *)&v82[4 * (v72 >> 24) + 24] ^ (752797589 * (v72 >> 24)) ^ *(_DWORD *)&v83[4 * (v72 >> 24) + 4];
  v84 = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5576)) & 0x7FFFFFFF);
  v85 = v84 ^ HIWORD(v84);
  LODWORD(v64) = (-333269657 * v85) >> 24;
  v86 = (-1251540992 * v85) ^ v12[1660] ^ (-333269657 * v85) ^ (752797589 * (_DWORD)v64) ^ *(_DWORD *)&v81[4 * v64] ^ *(_DWORD *)&v82[4 * ((_DWORD)v64 + 6)] ^ *(_DWORD *)&v83[4 * ((_DWORD)v64 + 1)];
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9432) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * v86 - 959846245 - ((-1889256238 * v86) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9472) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * v59 - 959846245 - ((-1889256238 * v59) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9448) += (_DWORD)v72 + ~((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5572)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *((_DWORD *)*(&off_1004ECA20 + (v7 ^ 0xE60)) + ((-333269657 * (_DWORD)v72) >> 24) - 2) ^ v12[1612] ^ *((_DWORD *)*(&off_1004ECA20 + v7 - 3392) + ((-333269657 * (_DWORD)v72) >> 24) - 2) ^ *((_DWORD *)*(&off_1004ECA20 + v7 - 2768) + ((-333269657 * (_DWORD)v72) >> 24) - 2) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (240931281 * ((-333269657 * (_DWORD)v72) >> 24));
  v87 = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5580)) & 0x7FFFFFFF);
  v88 = v87 ^ HIWORD(v87);
  v89 = (char *)*(&off_1004ECA20 + v7 - 2686) - 4;
  v90 = (char *)*(&off_1004ECA20 + (v7 ^ 0xE72)) - 12;
  v91 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0x924));
  v92 = (-333269657 * v88) ^ (-1251540992 * v88) ^ v12[1581] ^ (-1722610313 * ((-333269657 * v88) >> 24)) ^ *(_DWORD *)&v89[4 * ((-333269657 * v88) >> 24)] ^ *(_DWORD *)&v90[4 * ((-333269657 * v88) >> 24)] ^ *(_DWORD *)(v91 + 4 * (((-333269657 * v88) >> 24) + 2));
  v93 = (1202855529 * v92 - 959846245 - ((-1889256238 * v92) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9408) = v93 - ((2 * v93 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9400) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5584)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-1251540992 * (_DWORD)v72) ^ v12[1665] ^ (-333269657 * (_DWORD)v72) ^ (-1722610313
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)&v89[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ *(_DWORD *)&v90[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ *(_DWORD *)(v91 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 2));
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9424) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6232)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  v94 = (char *)*(&off_1004ECA20 + v7 - 2610) - 4;
  v95 = 4 * ((-333269657 * (_DWORD)v72) >> 24);
  LODWORD(v59) = *(_DWORD *)&v94[v95] ^ v12[1649];
  v96 = (char *)*(&off_1004ECA20 + v7 - 2449) - 4;
  LODWORD(v91) = *(_DWORD *)&v96[v95];
  v97 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xE42));
  LODWORD(v72) = v59 ^ v91 ^ *(_DWORD *)(v97 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (2015730219 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 9416) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5588)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v90) = (-1251540992 * (_DWORD)v72) ^ v12[1651];
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  LODWORD(v72) = v90 ^ v72 ^ (2015730219 * (v72 >> 24)) ^ *(_DWORD *)&v94[4 * (v72 >> 24)] ^ *(_DWORD *)&v96[4 * (v72 >> 24)] ^ *(_DWORD *)(v97 + 4 * ((v72 >> 24) + 1));
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5592)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v90) = (-333269657 * (_DWORD)v90) ^ (-1251540992 * (_DWORD)v90) ^ v12[1572] ^ (2015730219
                                                                                       * ((-333269657 * (_DWORD)v90) >> 24)) ^ *(_DWORD *)&v94[4 * ((-333269657 * (_DWORD)v90) >> 24)] ^ *(_DWORD *)&v96[4 * ((-333269657 * (_DWORD)v90) >> 24)] ^ *(_DWORD *)(v97 + 4 * (((-333269657 * (_DWORD)v90) >> 24) + 1));
  LODWORD(v59) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5600)) & 0x7FFFFFFF);
  LODWORD(v59) = v59 ^ WORD1(v59);
  LODWORD(v59) = (-333269657 * v59) ^ (-1251540992 * v59) ^ v12[1641] ^ (2015730219
                                                                       * ((-333269657 * v59) >> 24)) ^ *(_DWORD *)&v94[4 * ((-333269657 * v59) >> 24)] ^ *(_DWORD *)&v96[4 * ((-333269657 * v59) >> 24)] ^ *(_DWORD *)(v97 + 4 * (((-333269657 * v59) >> 24) + 1));
  LODWORD(v59) = 1202855529 * v59 - 959846245 - ((-1889256238 * v59) & 0x8D93D136);
  *(_DWORD *)(v3 + 9384) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (_DWORD)v90 - 959846245 - ((-1889256238 * (_DWORD)v90) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9392) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5596)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)&v94[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ v12[1578] ^ *(_DWORD *)&v96[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ *(_DWORD *)(v97 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (2015730219 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v90) = 1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136);
  *(_DWORD *)(v3 + 9328) = (v59 ^ 0xC6C9E89B) - ((2 * (v59 ^ 0xC6C9E89B) - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5604)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v91) = v12[1605] ^ (-1251540992 * (_DWORD)v72);
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  LODWORD(v72) = *(_DWORD *)&v94[4 * (v72 >> 24)] ^ v91 ^ v72 ^ *(_DWORD *)&v96[4 * (v72 >> 24)] ^ *(_DWORD *)(v97 + 4 * ((v72 >> 24) + 1)) ^ (2015730219 * (v72 >> 24));
  LODWORD(v91) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5620)) & 0x7FFFFFFF);
  LODWORD(v91) = v91 ^ WORD1(v91);
  LODWORD(v83) = (-1251540992 * v91) ^ v12[1654];
  LODWORD(v91) = -333269657 * v91;
  LODWORD(v91) = v83 ^ v91 ^ (2015730219 * BYTE3(v91)) ^ *(_DWORD *)&v94[4 * BYTE3(v91)] ^ *(_DWORD *)&v96[4 * BYTE3(v91)] ^ *(_DWORD *)(v97 + 4 * (BYTE3(v91) + 1));
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9376) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (v59 & 0xDF3A4357 ^ 0xC6084013 | v59 & 0xDF3A4357 ^ 0x19320344) + 1202855529 * v91;
  LODWORD(v91) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5608)) & 0x7FFFFFFF);
  LODWORD(v91) = v91 ^ WORD1(v91);
  v98 = 4 * ((-333269657 * v91) >> 24);
  LODWORD(v94) = *(_DWORD *)&v94[v98];
  *(_DWORD *)(v3 + 9360) = (_DWORD)v72 - 959846245 - ((2 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = v94 ^ v12[1631] ^ *(_DWORD *)&v96[v98] ^ *(_DWORD *)(v97
                                                                                  + 4
                                                                                  * (((-333269657 * v91) >> 24)
                                                                                   + 1)) ^ (-1251540992 * v91) ^ (-333269657 * v91) ^ (2015730219 * ((-333269657 * v91) >> 24));
  *(_DWORD *)(v3 + 9320) = (v90 ^ 0xC6C9E89B)
                         - ((2 * (v90 ^ 0xC6C9E89B) - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9312) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5612)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v97) = (-333269657 * (_DWORD)v72) >> 24;
  LODWORD(v97) = (-1251540992 * (_DWORD)v72) ^ v12[1600] ^ (-333269657 * (_DWORD)v72) ^ (-1678293029 * v97) ^ *((_DWORD *)*(&off_1004ECA20 + v76 - 2917) + v97) ^ *((_DWORD *)*(&off_1004ECA20 + v76 - 3192) + (v97 + 4) - 3) ^ *((_DWORD *)*(&off_1004ECA20 + (v76 ^ 0xD9B)) + (v97 + 3) - 3);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5616)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  v99 = (uint64_t)*(&off_1004ECA20 + v7 - 3120);
  v100 = (uint64_t)*(&off_1004ECA20 + v7 - 3047);
  v101 = (char *)*(&off_1004ECA20 + (v7 ^ 0xEA5)) - 8;
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1571] ^ (984536533
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v99 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v72) >> 24) + 4];
  LODWORD(v89) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 3356)) & 0x7FFFFFFF);
  LODWORD(v89) = v89 ^ (v89 >> 16);
  LODWORD(v89) = *(_DWORD *)(v99 + 4 * ((-333269657 * (_DWORD)v89) >> 24)) ^ v12[1666] ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v89) >> 24)) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v89) >> 24) + 4] ^ (-1251540992 * (_DWORD)v89) ^ (-333269657 * (_DWORD)v89) ^ (984536533 * ((-333269657 * (_DWORD)v89) >> 24));
  LODWORD(v89) = 1202855529 * (_DWORD)v89 - 959846245 - ((-1889256238 * (_DWORD)v89) & 0x8D93D136);
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5624)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v64) = *(_DWORD *)(v99 + 4 * ((-333269657 * (_DWORD)v90) >> 24)) ^ v12[1620] ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v90) >> 24)) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v90) >> 24) + 4] ^ (-1251540992 * (_DWORD)v90) ^ (-333269657 * (_DWORD)v90) ^ (984536533 * ((-333269657 * (_DWORD)v90) >> 24));
  *(_DWORD *)(v3 + 9280) = (v89 ^ 0xC6C9E89B)
                         - ((2 * (v89 ^ 0xC6C9E89B) - 1099659602) & 0x8D93D136);
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5628)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v59) = (-1251540992 * (_DWORD)v90) ^ v12[1673];
  LODWORD(v90) = -333269657 * (_DWORD)v90;
  LODWORD(v90) = v59 ^ v90 ^ *(_DWORD *)(v99 + 4 * (v90 >> 24)) ^ *(_DWORD *)(v100 + 4 * (v90 >> 24)) ^ (984536533 * (v90 >> 24)) ^ *(_DWORD *)&v101[4 * (v90 >> 24) + 4];
  LODWORD(v83) = 1202855529 * (_DWORD)v90 - 959846245 - ((-1889256238 * (_DWORD)v90) & 0x8D93D136);
  *(_DWORD *)(v3 + 9128) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6236)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  v102 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0x974));
  v103 = (char *)*(&off_1004ECA20 + v7 - 2934) - 8;
  v104 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0x90D));
  LODWORD(v59) = *(_DWORD *)(v102 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1548] ^ *(_DWORD *)&v103[4 * ((-333269657 * (_DWORD)v72) >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (-981138531 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 9304) = 1202855529 * v97 - ((-1099659602 - 1889256238 * v97) & 0xA32BED94) - 1328530911;
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5632)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v97) = (-1251540992 * (_DWORD)v72) ^ v12[1582];
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  *(_QWORD *)(v3 + 9024) = v99;
  LODWORD(v72) = v97 ^ v72 ^ (984536533 * (v72 >> 24)) ^ *(_DWORD *)(v99
                                                                                               + 4
                                                                                               * (v72 >> 24)) ^ *(_DWORD *)(v100 + 4 * (v72 >> 24)) ^ *(_DWORD *)&v101[4 * (v72 >> 24) + 4];
  LODWORD(v97) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 7136)) & 0x7FFFFFFF);
  LODWORD(v97) = v97 ^ WORD1(v97);
  LODWORD(v90) = -333269657 * v97;
  LODWORD(v97) = (-333269657 * v97) ^ (-1251540992 * v97) ^ v12[1683] ^ (-981138531 * (v90 >> 24)) ^ *(_DWORD *)(v102 + 4 * (v90 >> 24)) ^ *(_DWORD *)&v103[4 * (v90 >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * ((v90 >> 24) + 1));
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9248) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9296) = 1202855529 * (_DWORD)v64 - ((-1889256238 * (_DWORD)v64 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9288) = (v83 ^ 0xC6C9E89B)
                         - ((2 * (v83 ^ 0xC6C9E89B) - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5640)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v99 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1577] ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v72) >> 24) + 4] ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (984536533 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9272) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5636)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v90) = (-1251540992 * (_DWORD)v72) ^ v12[1579];
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  LODWORD(v72) = v90 ^ v72 ^ *(_DWORD *)(v102 + 4 * (v72 >> 24)) ^ (-981138531 * (v72 >> 24)) ^ *(_DWORD *)&v103[4 * (v72 >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * ((v72 >> 24) + 1));
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 3360)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v83) = (-1251540992 * (_DWORD)v90) ^ v12[1625];
  LODWORD(v90) = -333269657 * (_DWORD)v90;
  LODWORD(v64) = v83 ^ v90 ^ (-981138531 * (v90 >> 24)) ^ *(_DWORD *)(v102 + 4 * (v90 >> 24)) ^ *(_DWORD *)&v103[4 * (v90 >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * ((v90 >> 24) + 1));
  *(_DWORD *)(v3 + 9264) = 1202855529 * v59 - ((-1889256238 * v59 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9224) = 1202855529 * (_DWORD)v72
                         - ((-1889256238 * (_DWORD)v72 - 1099659602) & 0xB3FB351E)
                         - 1187521050;
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5644)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v102 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1677] ^ *(_DWORD *)&v103[4 * ((-333269657 * (_DWORD)v72) >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (-981138531 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5656)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v83) = (-333269657 * (_DWORD)v90) >> 24;
  LODWORD(v90) = *(_DWORD *)(v102 + 4 * v83) ^ v12[1616] ^ (-1251540992 * (_DWORD)v90) ^ *(_DWORD *)&v103[4 * ((_DWORD)v83 + 1)] ^ (-333269657 * (_DWORD)v90) ^ *(_DWORD *)(v104 + 4 * ((_DWORD)v83 + 1)) ^ (-981138531 * (_DWORD)v83);
  LODWORD(v59) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5648)) & 0x7FFFFFFF);
  LODWORD(v59) = v59 ^ WORD1(v59);
  LODWORD(v9) = (-1251540992 * v59) ^ v12[1626];
  LODWORD(v59) = -333269657 * v59;
  LODWORD(v59) = v9 ^ v59 ^ (-981138531 * BYTE3(v59)) ^ *(_DWORD *)(v102 + 4 * BYTE3(v59)) ^ *(_DWORD *)&v103[4 * BYTE3(v59) + 4] ^ *(_DWORD *)(v104 + 4 * (BYTE3(v59) + 1));
  *(_DWORD *)(v3 + 9184) = 1202855529 * (_DWORD)v90 - ((-1889256238 * (_DWORD)v90 - 1099659602) & 0x8D93D136);
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5652)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v9) = (-1251540992 * (_DWORD)v90) ^ v12[1583];
  LODWORD(v90) = -333269657 * (_DWORD)v90;
  LODWORD(v90) = v9 ^ v90 ^ (-981138531 * (v90 >> 24)) ^ *(_DWORD *)(v102
                                                                                               + 4
                                                                                               * (v90 >> 24)) ^ *(_DWORD *)&v103[4 * (v90 >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * ((v90 >> 24) + 1));
  LODWORD(v89) = (v89 & 0xDF3A4357 ^ 0x19320344 | v89 & 0xDF3A4357 ^ 0xC6084013)
               + 1202855529 * (_DWORD)v64;
  *(_DWORD *)(v3 + 9200) = (_DWORD)v89 - 959846245 - ((2 * (_DWORD)v89) & 0x8D93D136);
  *(_DWORD *)(v3 + 9176) = 1202855529 * (_DWORD)v72 - ((-1889256238 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9192) = 1202855529 * v59 - ((-1889256238 * v59 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9256) = 1202855529 * (_DWORD)v90 - ((258227410 * (_DWORD)v90 + 1047824046) & 0x3B8BD3DA) + 2097163588;
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5668)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v102 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1587] ^ *(_DWORD *)&v103[4 * ((-333269657 * (_DWORD)v72) >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (-981138531 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v89) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5660)) & 0x7FFFFFFF);
  LODWORD(v89) = v89 ^ (v89 >> 16);
  LODWORD(v89) = *(_DWORD *)(v102 + 4 * ((-333269657 * (_DWORD)v89) >> 24)) ^ v12[1560] ^ *(_DWORD *)&v103[4 * ((-333269657 * (_DWORD)v89) >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * (((-333269657 * (_DWORD)v89) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v89) ^ (-333269657 * (_DWORD)v89) ^ (-981138531 * ((-333269657 * (_DWORD)v89) >> 24));
  *(_DWORD *)(v3 + 9148) = 1202855529 * v97 - ((-1889256238 * v97 - 1099659602) & 0x8D93D136);
  LODWORD(v97) = (1202855529 * (_DWORD)v89 - 959846245 - ((-1889256238 * (_DWORD)v89) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9156) = v97 - ((2 * v97 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9208) = 1202855529 * (_DWORD)v72 - ((-1889256238 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5664)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v90) = (-333269657 * (_DWORD)v72) >> 24;
  v105 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xC1A));
  v106 = (char *)*(&off_1004ECA20 + (v7 ^ 0xECA)) - 12;
  v107 = (char *)*(&off_1004ECA20 + v7 - 3081) - 12;
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1675] ^ (2022750723 * (_DWORD)v90) ^ *((_DWORD *)*(&off_1004ECA20 + (v76 ^ 0xECA)) + v90 - 3) ^ *(_DWORD *)(v105 + 4 * ((_DWORD)v90 + 3)) ^ *((_DWORD *)*(&off_1004ECA20 + v76 - 3081) + ((_DWORD)v90 + 6) - 3);
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9172) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5672)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v102 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1561] ^ *(_DWORD *)&v103[4 * ((-333269657 * (_DWORD)v72) >> 24) + 4] ^ *(_DWORD *)(v104 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (-981138531 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5684)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v90) = *(_DWORD *)&v106[4 * ((-333269657 * (_DWORD)v90) >> 24)] ^ v12[1598] ^ *(_DWORD *)(v105 + 4 * (((-333269657 * (_DWORD)v90) >> 24) + 3)) ^ *(_DWORD *)&v107[4 * ((-333269657 * (_DWORD)v90) >> 24) + 24] ^ (-1251540992 * (_DWORD)v90) ^ (-333269657 * (_DWORD)v90) ^ (2022750723 * ((-333269657 * (_DWORD)v90) >> 24));
  LODWORD(v59) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5680)) & 0x7FFFFFFF);
  LODWORD(v59) = v59 ^ WORD1(v59);
  LODWORD(v9) = (-1251540992 * v59) ^ v12[1613];
  LODWORD(v59) = -333269657 * v59;
  LODWORD(v59) = v9 ^ v59 ^ (2022750723 * BYTE3(v59)) ^ *(_DWORD *)&v106[4 * BYTE3(v59)] ^ *(_DWORD *)(v105 + 4 * (BYTE3(v59) + 3)) ^ *(_DWORD *)&v107[4 * BYTE3(v59) + 24];
  LODWORD(v59) = (1202855529 * v59 - 959846245 - ((-1889256238 * v59) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9152) = v59 - ((2 * v59 - 1099659602) & 0x8D93D136);
  LODWORD(v59) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5676)) & 0x7FFFFFFF);
  LODWORD(v59) = v59 ^ WORD1(v59);
  LODWORD(v59) = *(_DWORD *)&v106[4 * ((-333269657 * v59) >> 24)] ^ v12[1554] ^ *(_DWORD *)(v105 + 4 * (((-333269657 * v59) >> 24) + 3)) ^ *(_DWORD *)&v107[4 * ((-333269657 * v59) >> 24) + 24] ^ (-1251540992 * v59) ^ (-333269657 * v59) ^ (2022750723 * ((-333269657 * v59) >> 24));
  *(_DWORD *)(v3 + 9096) = 1202855529 * (_DWORD)v72 - ((-1889256238 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (_DWORD)v90 - 959846245 - ((-1889256238 * (_DWORD)v90) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9136) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5688)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)&v106[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ v12[1557] ^ *(_DWORD *)(v105 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3)) ^ *(_DWORD *)&v107[4 * ((-333269657 * (_DWORD)v72) >> 24) + 24] ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (2022750723 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v90) = (1202855529 * v59 - 959846245 - ((-1889256238 * v59) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9104) = (_DWORD)v90 - ((2 * (_DWORD)v90 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9120) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5692)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v90) = (-333269657 * (_DWORD)v72) >> 24;
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1570] ^ (2022750723 * (_DWORD)v90);
  *(_QWORD *)(v3 + 8792) = v105;
  LODWORD(v59) = *(_DWORD *)(v105 + 4 * ((_DWORD)v90 + 3));
  *(_QWORD *)(v3 + 8800) = v106;
  LODWORD(v72) = v72 ^ *(_DWORD *)&v106[4 * v90] ^ v59;
  *(_QWORD *)(v3 + 8784) = v107;
  LODWORD(v72) = v72 ^ *(_DWORD *)&v107[4 * ((_DWORD)v90 + 6)];
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5696)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v90) = *(_DWORD *)&v106[4 * ((-333269657 * (_DWORD)v90) >> 24)] ^ v12[1639] ^ *(_DWORD *)(v105 + 4 * (((-333269657 * (_DWORD)v90) >> 24) + 3)) ^ *(_DWORD *)&v107[4 * ((-333269657 * (_DWORD)v90) >> 24) + 24] ^ (-1251540992 * (_DWORD)v90) ^ (-333269657 * (_DWORD)v90) ^ (2022750723 * ((-333269657 * (_DWORD)v90) >> 24));
  LODWORD(v90) = (1202855529 * (_DWORD)v90 - ((-1889256238 * (_DWORD)v90) & 0xB2F1A15E) + 1501089967) ^ 0x5978D0AF;
  *(_DWORD *)(v3 + 9116) = (_DWORD)v90 - ((2 * (_DWORD)v90 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9080) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5700)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v90) = v12[1657] ^ (-1251540992 * (_DWORD)v72);
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  v108 = *(_QWORD *)(v3 + 9024);
  LODWORD(v59) = *(_DWORD *)(v108 + 4 * (v72 >> 24)) ^ v90 ^ v72 ^ *(_DWORD *)(v100 + 4 * (v72 >> 24)) ^ *(_DWORD *)&v101[4 * (v72 >> 24) + 4] ^ (984536533 * (v72 >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6240)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1645] ^ (984536533
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v108 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v72) >> 24) + 4];
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5704)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v90) = *(_DWORD *)(v108 + 4 * ((-333269657 * (_DWORD)v90) >> 24)) ^ v12[1601] ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v90) >> 24)) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v90) >> 24) + 4] ^ (-1251540992 * (_DWORD)v90) ^ (-333269657 * (_DWORD)v90) ^ (984536533 * ((-333269657 * (_DWORD)v90) >> 24));
  LODWORD(v90) = (1202855529 * (_DWORD)v90 - 959846245 - ((-1889256238 * (_DWORD)v90) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9072) = (_DWORD)v90 - ((2 * (_DWORD)v90 - 1099659602) & 0x8D93D136);
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5708)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v90) = *(_DWORD *)(v108 + 4 * ((-333269657 * (_DWORD)v90) >> 24)) ^ v12[1676] ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v90) >> 24)) ^ (-1251540992 * (_DWORD)v90) ^ (-333269657 * (_DWORD)v90) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v90) >> 24) + 4] ^ (984536533 * ((-333269657 * (_DWORD)v90) >> 24));
  *(_DWORD *)(v3 + 9064) = 1202855529 * (_DWORD)v72 - ((-1889256238 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (_DWORD)v90 - 959846245 - ((-1889256238 * (_DWORD)v90) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9056) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 7020)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v90) = (-1251540992 * (_DWORD)v72) ^ v12[1644];
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  LODWORD(v72) = v90 ^ v72 ^ (984536533 * (v72 >> 24)) ^ *(_DWORD *)(v108 + 4 * (v72 >> 24)) ^ *(_DWORD *)(v100 + 4 * (v72 >> 24)) ^ *(_DWORD *)&v101[4 * (v72 >> 24) + 4];
  LODWORD(v90) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5712)) & 0x7FFFFFFF);
  LODWORD(v90) = v90 ^ (v90 >> 16);
  LODWORD(v90) = *(_DWORD *)(v108 + 4 * ((-333269657 * (_DWORD)v90) >> 24)) ^ v12[1575] ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v90) >> 24)) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v90) >> 24) + 4] ^ (-1251540992 * (_DWORD)v90) ^ (-333269657 * (_DWORD)v90) ^ (984536533 * ((-333269657 * (_DWORD)v90) >> 24));
  *(_DWORD *)(v3 + 9040) = 1202855529 * (_DWORD)v72 - ((-1889256238 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 8992) = 1202855529 * v59 - ((-1889256238 * v59 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 9004) = 1202855529 * (_DWORD)v90 - ((-1889256238 * (_DWORD)v90 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6244)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v90) = v12[1604] ^ (-1251540992 * (_DWORD)v72);
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  LODWORD(v90) = v90 ^ v72;
  LODWORD(v72) = v72 >> 24;
  v109 = (char *)*(&off_1004ECA20 + (v7 ^ 0x950)) - 12;
  v110 = (char *)*(&off_1004ECA20 + (v7 ^ 0xF2E)) - 8;
  v111 = (char *)*(&off_1004ECA20 + v7 - 3318) - 12;
  LODWORD(v72) = *((_DWORD *)*(&off_1004ECA20 + (v76 ^ 0x950)) + v72 - 3) ^ v90 ^ *(_DWORD *)&v110[4 * v72] ^ (433590137 * (_DWORD)v72) ^ *((_DWORD *)*(&off_1004ECA20 + v76 - 3318) + v72 - 3);
  *(_DWORD *)(v3 + 9016) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5716)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-1251540992 * (_DWORD)v72) ^ v12[1563] ^ (-333269657 * (_DWORD)v72) ^ (984536533
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v108 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v100 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)&v101[4 * ((-333269657 * (_DWORD)v72) >> 24) + 4];
  *(_DWORD *)(v3 + 9024) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5720)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  v112 = 4 * ((-333269657 * (_DWORD)v72) >> 24);
  *(_QWORD *)(v3 + 8832) = v109;
  LODWORD(v59) = *(_DWORD *)&v109[v112] ^ v12[1611];
  *(_QWORD *)(v3 + 8816) = v110;
  LODWORD(v9) = *(_DWORD *)&v110[v112];
  *(_QWORD *)(v3 + 8808) = v111;
  LODWORD(v72) = v59 ^ v9 ^ *(_DWORD *)&v111[v112] ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (433590137 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v94) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6248)) & 0x7FFFFFFF);
  LODWORD(v94) = v94 ^ (v94 >> 16);
  LODWORD(v94) = *(_DWORD *)&v109[4 * ((-333269657 * (_DWORD)v94) >> 24)] ^ v12[1630] ^ *(_DWORD *)&v110[4 * ((-333269657 * (_DWORD)v94) >> 24)] ^ (-1251540992 * (_DWORD)v94) ^ (-333269657 * (_DWORD)v94) ^ *(_DWORD *)&v111[4 * ((-333269657 * (_DWORD)v94) >> 24)] ^ (433590137 * ((-333269657 * (_DWORD)v94) >> 24));
  *(_DWORD *)(v3 + 9008) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (_DWORD)v94 - 959846245 - ((-1889256238 * (_DWORD)v94) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9012) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5728)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  v113 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xEDA));
  v114 = (char *)*(&off_1004ECA20 + (v7 ^ 0xD59)) - 12;
  v115 = (char *)*(&off_1004ECA20 + (v7 ^ 0xD85)) - 12;
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1593] ^ (-425179945
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v113 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)&v114[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ *(_DWORD *)&v115[4 * ((-333269657 * (_DWORD)v72) >> 24) + 20];
  LODWORD(v96) = (_DWORD)v72 - 959846245 - ((2 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5724)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v113 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1648] ^ *(_DWORD *)&v114[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ *(_DWORD *)&v115[4 * ((-333269657 * (_DWORD)v72) >> 24) + 20] ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (-425179945 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8964) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5732)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v113 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1664] ^ *(_DWORD *)&v114[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ *(_DWORD *)&v115[4 * ((-333269657 * (_DWORD)v72) >> 24) + 20] ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (-425179945 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v112) = (-333269657 * ((v36 ^ ((_DWORD)v12 + 1836851769)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                     * ((v36 ^ ((_DWORD)v12 + 1836851769)) & 0x7FFFFFFFu)) >> 16);
  LODWORD(v112) = (-333269657 * v112) ^ (-1251540992 * v112) ^ v12[1602] ^ (-425179945
                                                                          * ((-333269657 * v112) >> 24)) ^ *(_DWORD *)(v113 + 4 * ((-333269657 * v112) >> 24)) ^ *(_DWORD *)&v114[4 * ((-333269657 * v112) >> 24)] ^ *(_DWORD *)&v115[4 * ((-333269657 * v112) >> 24) + 20];
  *(_DWORD *)(v3 + 8880) = 1202855529 * v112 - ((-1099659602 - 1889256238 * v112) & 0x8D93D136);
  LODWORD(v112) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5736)) & 0x7FFFFFFF);
  LODWORD(v112) = v112 ^ WORD1(v112);
  LODWORD(v102) = (-333269657 * v112) >> 24;
  LODWORD(v111) = *(_DWORD *)(v113 + 4 * v102) ^ v12[1615] ^ *(_DWORD *)&v114[4 * v102] ^ *(_DWORD *)&v115[4 * (v102 + 5)];
  LODWORD(v112) = (-1251540992 * v112) ^ (-333269657 * v112) ^ (-425179945 * v102);
  LODWORD(v109) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5740)) & 0x7FFFFFFF);
  LODWORD(v109) = v109 ^ (v109 >> 16);
  LODWORD(v94) = *(_DWORD *)(v113 + 4 * ((-333269657 * (_DWORD)v109) >> 24)) ^ v12[1629] ^ *(_DWORD *)&v114[4 * ((-333269657 * (_DWORD)v109) >> 24)] ^ *(_DWORD *)&v115[4 * ((-333269657 * (_DWORD)v109) >> 24) + 20] ^ (-1251540992 * (_DWORD)v109) ^ (-333269657 * (_DWORD)v109) ^ (-425179945 * ((-333269657 * (_DWORD)v109) >> 24));
  *(_DWORD *)(v3 + 8936) = 1202855529 * (_DWORD)v72 - ((-1889256238 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 8932) = 1202855529 * (_DWORD)v94 - ((-1889256238 * (_DWORD)v94 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = (1202855529 * (v111 ^ v112)
                - 959846245
                - ((-1889256238 * (v111 ^ v112)) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8888) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5748)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v94) = -333269657 * (_DWORD)v72;
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1588] ^ (1028656141
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24));
  v116 = (char *)*(&off_1004ECA20 + v7 - 2598) - 8;
  *(_QWORD *)(v3 + 8512) = v116;
  v117 = (char *)*(&off_1004ECA20 + (v7 ^ 0xF0E)) - 8;
  v118 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xC39));
  LODWORD(v72) = v72 ^ *(_DWORD *)&v116[4 * (v94 >> 24)] ^ *((_DWORD *)*(&off_1004ECA20 + (v76 ^ 0xF0E))
                                                                                       + (v94 >> 24)
                                                                                       + 1) ^ *((_DWORD *)*(&off_1004ECA20 + (v76 ^ 0xC39))
                                                                                              + (v94 >> 24));
  *(_DWORD *)(v3 + 8872) = 1202855529 * (_DWORD)v72 - ((-1889256238 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  *(_DWORD *)(v3 + 8900) = 1202855529 * (v96 ^ 0xC6C9E89B)
                         - ((-1889256238 * (v96 ^ 0xC6C9E89B) - 1099659602) & 0xBE20023C)
                         - 1102429067;
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5744)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  v119 = *(_QWORD *)(v3 + 8904);
  v120 = *(_QWORD *)(v3 + 8920);
  v121 = *(_QWORD *)(v3 + 8912);
  LODWORD(v72) = *(_DWORD *)(v119 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1681] ^ *(_DWORD *)(v120 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v121 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (1503002217 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8688) = 1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5756)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v115) = *(_DWORD *)(v119 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1556] ^ *(_DWORD *)(v120 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ *(_DWORD *)(v121 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3)) ^ (1503002217 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5752)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1661] ^ (1503002217
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v119 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v120 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v121 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3));
  *(_DWORD *)(v3 + 8868) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5760)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1567] ^ (1503002217
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v119 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v120 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v121 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3));
  *(_DWORD *)(v3 + 8860) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5764)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v119 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1682] ^ *(_DWORD *)(v120 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v121 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (1503002217 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8864) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5776)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v119 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1610] ^ *(_DWORD *)(v120 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ *(_DWORD *)(v121 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3)) ^ (1503002217 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8828) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5768)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v101) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1668] ^ (1503002217
                                                                                        * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v119 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v120 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v121 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5772)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  v122 = (uint64_t)*(&off_1004ECA20 + v7 - 3303);
  v123 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xE6B));
  v124 = (uint64_t)*(&off_1004ECA20 + (v7 ^ 0xCB7));
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1632] ^ (926814769
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8848) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5780)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  *(_DWORD *)(v3 + 8764) = *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1621] ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (926814769 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6252)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1549] ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (926814769 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8840) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5784)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1667] ^ (926814769
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8748) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 7024)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1653] ^ (926814769
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8760) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5788)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1658] ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (926814769 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8776) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5792)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  *(_DWORD *)(v3 + 8736) = *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1606] ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (926814769 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6256)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1596] ^ (926814769
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8752) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5804)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1594] ^ (926814769
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8572) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5800)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1659] ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (926814769 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8712) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6260)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1650] ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (926814769 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = (1202855529 * (_DWORD)v72 - ((-1889256238 * (_DWORD)v72) & 0xB2F1A15E) + 1501089967) ^ 0x5978D0AF;
  *(_DWORD *)(v3 + 8768) = (_DWORD)v72 - ((2 * (_DWORD)v72 - 1099659602) & 0x9D673BC6) - 1376919238;
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5796)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1562] ^ (926814769
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8720) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5808)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1589] ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (926814769 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8744) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5812)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1574] ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (926814769 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8696) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 3364)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1640] ^ (926814769
                                                                                       * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v122 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v123 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)(v124 + 4 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8728) = 1202855529 * (_DWORD)v72 - ((-1099659602 - 1889256238 * (_DWORD)v72) & 0x8D93D136);
  *(_DWORD *)(v3 + 8704) = 1202855529 * (_DWORD)v115 - ((-1099659602 - 1889256238 * (_DWORD)v115) & 0x8D93D136);
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 7032)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  *(_DWORD *)(v3 + 8680) = *(_DWORD *)(v119 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1595] ^ *(_DWORD *)(v120 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v121 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (1503002217 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5816)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v112) = (-333269657 * v119) >> 24;
  LODWORD(v113) = *(_DWORD *)(v123 + 4 * (v112 + 1));
  *(_DWORD *)(v3 + 8912) = (*(_DWORD *)(v3 + 8688) ^ 0xC6C9E89B)
                         - ((2 * (*(_DWORD *)(v3 + 8688) ^ 0xC6C9E89B) - 1099659602) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v122 + 4 * v112) ^ v12[1662] ^ v113 ^ *(_DWORD *)(v124
                                                                                              + 4 * v112) ^ (-1251540992 * v119) ^ (-333269657 * v119) ^ (926814769 * v112);
  *(_DWORD *)(v3 + 8920) = 1202855529 * v119 - ((-1099659602 - 1889256238 * v119) & 0x8D93D136);
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5824)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  v125 = (char *)*(&off_1004ECA20 + (v7 ^ 0xEAE)) - 12;
  v126 = (uint64_t)*(&off_1004ECA20 + v7 - 2401);
  v127 = (char *)*(&off_1004ECA20 + v7 - 2652) - 4;
  LODWORD(v119) = (-333269657 * v119) ^ (-1251540992 * v119) ^ v12[1624] ^ (224114107
                                                                          * ((-333269657 * v119) >> 24)) ^ *(_DWORD *)&v125[4 * ((-333269657 * v119) >> 24)] ^ *(_DWORD *)(v126 + 4 * (((-333269657 * v119) >> 24) + 1)) ^ *(_DWORD *)&v127[4 * ((-333269657 * v119) >> 24)];
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5832)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  *(_DWORD *)(v3 + 8664) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1559] ^ (224114107
                                                                                                 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)&v125[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ *(_DWORD *)(v126 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)&v127[4 * ((-333269657 * (_DWORD)v72) >> 24)];
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5820)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v112) = *(_DWORD *)&v125[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ v12[1576] ^ *(_DWORD *)(v126 + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 1)) ^ *(_DWORD *)&v127[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (224114107 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8904) = 1202855529 * (_DWORD)v101;
  LODWORD(v94) = 1202855529 * (_DWORD)v101 - 549829801;
  *(_DWORD *)(v3 + 8688) = (_DWORD)v94;
  *(_DWORD *)(v3 + 8616) = 1202855529 * v112 - ((-1099659602 - 1889256238 * v112) & 0x8D93D136);
  LODWORD(v112) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5836)) & 0x7FFFFFFF);
  LODWORD(v112) = v112 ^ WORD1(v112);
  LODWORD(v111) = (-1251540992 * v112) ^ v12[1679];
  LODWORD(v112) = -333269657 * v112;
  v128 = *(_QWORD *)(v3 + 8512);
  LODWORD(v112) = v111 ^ v112 ^ *(_DWORD *)(v128 + 4 * BYTE3(v112)) ^ *(_DWORD *)&v117[4 * BYTE3(v112) + 12] ^ (1028656141 * BYTE3(v112)) ^ *(_DWORD *)(v118 + 4 * BYTE3(v112));
  LODWORD(v111) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5828)) & 0x7FFFFFFF);
  LODWORD(v111) = v111 ^ (v111 >> 16);
  LODWORD(v120) = (-1251540992 * (_DWORD)v111) ^ v12[1590];
  LODWORD(v111) = -333269657 * (_DWORD)v111;
  LODWORD(v120) = v120 ^ v111;
  LODWORD(v111) = v111 >> 24;
  v129 = 4 * v111;
  LODWORD(v120) = v120 ^ (1028656141 * (_DWORD)v111) ^ *(_DWORD *)(v128 + v129);
  LODWORD(v111) = *(_DWORD *)&v117[4 * ((_DWORD)v111 + 3)] ^ *(_DWORD *)(v118 + v129);
  LODWORD(v129) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5840)) & 0x7FFFFFFF);
  LODWORD(v129) = v129 ^ WORD1(v129);
  *(_DWORD *)(v3 + 8532) = (-1251540992 * v129) ^ v12[1622] ^ (-333269657 * v129) ^ (224114107
                                                                                   * ((-333269657 * v129) >> 24)) ^ *(_DWORD *)&v125[4 * ((-333269657 * v129) >> 24)] ^ *(_DWORD *)(v126 + 4 * (((-333269657 * v129) >> 24) + 1)) ^ *(_DWORD *)&v127[4 * ((-333269657 * v129) >> 24)];
  *(_DWORD *)(v3 + 8672) = 1202855529 * (v120 ^ v111)
                         - ((-1099659602 - 1889256238 * (v120 ^ v111)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8656) = 1202855529 * v112 - ((-1099659602 - 1889256238 * v112) & 0x8D93D136);
  *(_DWORD *)(v3 + 8612) = (v94 | 0xDF3A4356) - (v94 & 0x20C5BCA9) + 1202855529 * v119;
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5848)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v119) = *(_DWORD *)(v128 + 4 * ((-333269657 * v119) >> 24)) ^ v12[1586] ^ *(_DWORD *)&v117[4 * ((-333269657 * v119) >> 24) + 12] ^ *(_DWORD *)(v118 + 4 * ((-333269657 * v119) >> 24)) ^ (-1251540992 * v119) ^ (-333269657 * v119) ^ (1028656141 * ((-333269657 * v119) >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5844)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v72) = *(_DWORD *)(v128 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1647] ^ *(_DWORD *)&v117[4 * ((-333269657 * (_DWORD)v72) >> 24) + 12] ^ *(_DWORD *)(v118 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (1028656141 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8536) = 1202855529 * (_DWORD)v72 - 959846245 - ((-1889256238 * (_DWORD)v72) & 0x8D93D136);
  *(_DWORD *)(v3 + 8520) = 1202855529 * v119 - ((-1099659602 - 1889256238 * v119) & 0x8D93D136);
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5852)) & 0x7FFFFFFF);
  LODWORD(v125) = v119 ^ WORD1(v119);
  LODWORD(v96) = (-333269657 * (_DWORD)v125) >> 24;
  v130 = 4 * v96;
  LODWORD(v72) = *(_DWORD *)&v117[4 * ((_DWORD)v96 + 3)] ^ *(_DWORD *)(v118 + v130);
  LODWORD(v126) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5860)) & 0x7FFFFFFF);
  LODWORD(v126) = v126 ^ WORD1(v126);
  LODWORD(v126) = (-333269657 * v126) ^ (-1251540992 * v126) ^ v12[1555] ^ (1028656141
                                                                          * ((-333269657 * v126) >> 24)) ^ *(_DWORD *)(v128 + 4 * ((-333269657 * v126) >> 24)) ^ *(_DWORD *)&v117[4 * ((-333269657 * v126) >> 24) + 12] ^ *(_DWORD *)(v118 + 4 * ((-333269657 * v126) >> 24));
  *(_DWORD *)(v3 + 8648) = 1202855529 * v126 - ((-1099659602 - 1889256238 * v126) & 0x8D93D136);
  LODWORD(v126) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5856)) & 0x7FFFFFFF);
  LODWORD(v126) = v126 ^ WORD1(v126);
  LODWORD(v126) = *(_DWORD *)(v128 + 4 * ((-333269657 * v126) >> 24)) ^ v12[1585] ^ *(_DWORD *)&v117[4 * ((-333269657 * v126) >> 24) + 12] ^ *(_DWORD *)(v118 + 4 * ((-333269657 * v126) >> 24)) ^ (-1251540992 * v126) ^ (-333269657 * v126) ^ (1028656141 * ((-333269657 * v126) >> 24));
  *(_DWORD *)(v3 + 8496) = 1202855529 * v126 - ((-1099659602 - 1889256238 * v126) & 0x8D93D136);
  LODWORD(v126) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6264)) & 0x7FFFFFFF);
  LODWORD(v126) = v126 ^ WORD1(v126);
  LODWORD(v126) = *(_DWORD *)(v128 + 4 * ((-333269657 * v126) >> 24)) ^ v12[1634] ^ *(_DWORD *)&v117[4 * ((-333269657 * v126) >> 24) + 12] ^ (-1251540992 * v126) ^ (-333269657 * v126) ^ *(_DWORD *)(v118 + 4 * ((-333269657 * v126) >> 24)) ^ (1028656141 * ((-333269657 * v126) >> 24));
  *(_DWORD *)(v3 + 8504) = 1202855529 * v126 - 959846245 - ((-1889256238 * v126) & 0x8D93D136);
  LODWORD(v119) = ((-1889256238
                  * ((-1251540992 * (_DWORD)v125) ^ v12[1670] ^ (-333269657 * (_DWORD)v125) ^ (1028656141 * (_DWORD)v96) ^ *(_DWORD *)(v128 + v130) ^ v72)) & 0xBE7486AE)
                + ((1202855529
                  * ((-333269657 * (_DWORD)v125) ^ (-1251540992 * (_DWORD)v125) ^ v12[1670] ^ (1028656141 * (_DWORD)v96) ^ *(_DWORD *)(v128 + v130) ^ v72)) ^ 0xDF3A4357);
  *(_DWORD *)(v3 + 8488) = v119 - 959846245 - ((2 * v119) & 0x8D93D136);
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5864)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v119) = *(_DWORD *)(v128 + 4 * ((-333269657 * v119) >> 24)) ^ v12[1568] ^ *(_DWORD *)&v117[4 * ((-333269657 * v119) >> 24) + 12] ^ *(_DWORD *)(v118 + 4 * ((-333269657 * v119) >> 24)) ^ (-1251540992 * v119) ^ (-333269657 * v119) ^ (1028656141 * ((-333269657 * v119) >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5868)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v119) = (1202855529 * v119 - 959846245 - ((-1889256238 * v119) & 0x8D93D136)) ^ 0xC6C9E89B;
  LODWORD(v125) = v119 - ((2 * v119 - 1099659602) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v128 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1619] ^ *(_DWORD *)&v117[4 * ((-333269657 * (_DWORD)v72) >> 24) + 12] ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ *(_DWORD *)(v118 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (1028656141 * ((-333269657 * (_DWORD)v72) >> 24));
  *(_DWORD *)(v3 + 8512) = 1202855529 * v119 - ((-1889256238 * v119 - 1099659602) & 0x8D93D136);
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 3368)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v72) = (-1251540992 * v119) ^ v12[1607];
  LODWORD(v119) = -333269657 * v119;
  v131 = *(_QWORD *)(v3 + 8800);
  v132 = *(_QWORD *)(v3 + 8792);
  v133 = *(_QWORD *)(v3 + 8784);
  LODWORD(v122) = v72 ^ v119 ^ (2022750723 * BYTE3(v119)) ^ *(_DWORD *)(v131 + 4 * BYTE3(v119)) ^ *(_DWORD *)(v132 + 4 * (BYTE3(v119) + 3)) ^ *(_DWORD *)(v133 + 4 * (BYTE3(v119) + 6));
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6268)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  *(_DWORD *)(v3 + 8480) = *(_DWORD *)(v131 + 4 * ((-333269657 * v119) >> 24)) ^ v12[1551] ^ *(_DWORD *)(v132 + 4 * (((-333269657 * v119) >> 24) + 3)) ^ *(_DWORD *)(v133 + 4 * (((-333269657 * v119) >> 24) + 6)) ^ (-1251540992 * v119) ^ (-333269657 * v119) ^ (2022750723 * ((-333269657 * v119) >> 24));
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5872)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v96) = (-333269657 * v119) >> 24;
  *(_DWORD *)(v3 + 8472) = *(_DWORD *)(v131 + 4 * v96) ^ v12[1608] ^ *(_DWORD *)(v132
                                                                                               + 4
                                                                                               * ((_DWORD)v96 + 3)) ^ (-1251540992 * v119) ^ (-333269657 * v119) ^ *(_DWORD *)(v133 + 4 * ((_DWORD)v96 + 6)) ^ (2022750723 * (_DWORD)v96);
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5880)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v72) = -333269657 * v119;
  LODWORD(v118) = (-333269657 * v119) ^ (-1251540992 * v119) ^ v12[1684] ^ (2022750723 * (v72 >> 24)) ^ *(_DWORD *)(v131 + 4 * (v72 >> 24)) ^ *(_DWORD *)(v132 + 4 * ((v72 >> 24) + 3)) ^ *(_DWORD *)(v133 + 4 * ((v72 >> 24) + 6));
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5888)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v94) = (-333269657 * v119) >> 24;
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5892)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v121) = (-1251540992 * v119) ^ v12[1547] ^ (-333269657 * v119) ^ (2022750723 * (_DWORD)v94) ^ *(_DWORD *)(v131 + 4 * v94) ^ *(_DWORD *)(v132 + 4 * ((_DWORD)v94 + 3)) ^ *(_DWORD *)(v133 + 4 * ((_DWORD)v94 + 6));
  LODWORD(v119) = *(_DWORD *)(*(_QWORD *)(v3 + 7096) + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ v12[1566] ^ *(_DWORD *)(*(_QWORD *)(v3 + 7088) + 4 * (((-333269657 * (_DWORD)v72) >> 24) + 3)) ^ *(_DWORD *)(*(_QWORD *)(v3 + 7080) + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (426631311 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5876)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v94) = (-1251540992 * (_DWORD)v72) ^ v12[1580];
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  LODWORD(v131) = *(_DWORD *)(v3 + 9696);
  v134 = (char *)*(&off_1004ECA20 + (int)v131 - 2831) - 4;
  v135 = (uint64_t)*(&off_1004ECA20 + (int)(v131 ^ 0xDFA));
  v136 = (uint64_t)*(&off_1004ECA20 + (int)(v131 ^ 0xDFF));
  *(_DWORD *)(v3 + 8464) = v94 ^ v72 ^ (-940876681 * (v72 >> 24)) ^ *(_DWORD *)&v134[4 * (v72 >> 24)] ^ *(_DWORD *)(v135 + 4 * (v72 >> 24)) ^ *(_DWORD *)(v136 + 4 * (v72 >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5884)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  *(_DWORD *)(v3 + 8456) = (-333269657 * (_DWORD)v72) ^ (-1251540992 * (_DWORD)v72) ^ v12[1669] ^ (-940876681
                                                                                                 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)&v134[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ *(_DWORD *)(v135 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v136 + 4 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6272)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v94) = (-1251540992 * (_DWORD)v72) ^ v12[1591];
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  *(_DWORD *)(v3 + 8448) = v94 ^ v72 ^ (-940876681 * (v72 >> 24)) ^ *(_DWORD *)&v134[4 * (v72 >> 24)] ^ *(_DWORD *)(v135 + 4 * (v72 >> 24)) ^ *(_DWORD *)(v136 + 4 * (v72 >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5908)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v131) = *(_DWORD *)&v134[4 * ((-333269657 * (_DWORD)v72) >> 24)] ^ v12[1663] ^ *(_DWORD *)(v135 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ *(_DWORD *)(v136 + 4 * ((-333269657 * (_DWORD)v72) >> 24)) ^ (-1251540992 * (_DWORD)v72) ^ (-333269657 * (_DWORD)v72) ^ (-940876681 * ((-333269657 * (_DWORD)v72) >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5904)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v94) = v12[1628] ^ (-1251540992 * (_DWORD)v72);
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  LODWORD(v132) = *(_DWORD *)&v134[4 * (v72 >> 24)] ^ v94 ^ v72 ^ *(_DWORD *)(v135 + 4 * (v72 >> 24)) ^ *(_DWORD *)(v136 + 4 * (v72 >> 24)) ^ (-940876681 * (v72 >> 24));
  LODWORD(v72) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5896)) & 0x7FFFFFFF);
  LODWORD(v72) = v72 ^ (v72 >> 16);
  LODWORD(v94) = (-1251540992 * (_DWORD)v72) ^ v12[1614];
  LODWORD(v72) = -333269657 * (_DWORD)v72;
  v137 = v94 ^ v72 ^ (-940876681 * (v72 >> 24)) ^ *(_DWORD *)&v134[4 * (v72 >> 24)] ^ *(_DWORD *)(v135 + 4 * (v72 >> 24)) ^ *(_DWORD *)(v136 + 4 * (v72 >> 24));
  *(_DWORD *)(v3 + 8792) = 1202855529 * v119 - ((-1889256238 * v119 - 1099659602) & 0x8D93D136);
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5900)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v96) = (-333269657 * v119) ^ (-1251540992 * v119) ^ v12[1627] ^ (-940876681
                                                                         * ((-333269657 * v119) >> 24)) ^ *(_DWORD *)&v134[4 * ((-333269657 * v119) >> 24)] ^ *(_DWORD *)(v135 + 4 * ((-333269657 * v119) >> 24)) ^ *(_DWORD *)(v136 + 4 * ((-333269657 * v119) >> 24));
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 6276)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v119) = *(_DWORD *)&v134[4 * ((-333269657 * v119) >> 24)] ^ v12[1617] ^ *(_DWORD *)(v135 + 4 * ((-333269657 * v119) >> 24)) ^ *(_DWORD *)(v136 + 4 * ((-333269657 * v119) >> 24)) ^ (-1251540992 * v119) ^ (-333269657 * v119) ^ (-940876681 * ((-333269657 * v119) >> 24));
  *(_DWORD *)(v3 + 8784) = 1202855529 * v119 - ((-1889256238 * v119 - 1099659602) & 0x8D93D136);
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5916)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v134) = *(_DWORD *)&v134[4 * ((-333269657 * v119) >> 24)] ^ v12[1609] ^ *(_DWORD *)(v135 + 4 * ((-333269657 * v119) >> 24)) ^ (-1251540992 * v119) ^ (-333269657 * v119) ^ *(_DWORD *)(v136 + 4 * ((-333269657 * v119) >> 24)) ^ (-940876681 * ((-333269657 * v119) >> 24));
  LODWORD(v135) = *(_DWORD *)(v3 + 8572) - 1509676046;
  *(_DWORD *)(v3 + 8572) = (_DWORD)v125 - 1509676046;
  LODWORD(v119) = (v135 ^ 0xC6C9E89B) + (((_DWORD)v125 - 1509676046) ^ 0x39361764) + 1;
  *(_DWORD *)(v3 + 8800) = v119 - 959846245 - ((2 * v119) & 0x8D93D136);
  LODWORD(v129) = *(_DWORD *)(v3 + 9368) - 1509676046;
  LODWORD(v127) = *(_DWORD *)(v3 + 9128) - 1509676046;
  *(_DWORD *)(v3 + 9368) = (v129 ^ 0x39361764)
                         + (v127 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v129 ^ 0x39361764) + (v127 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  LODWORD(v119) = -333269657 * ((v36 ^ *(_DWORD *)(v3 + 5912)) & 0x7FFFFFFF);
  LODWORD(v119) = v119 ^ WORD1(v119);
  LODWORD(v94) = (-333269657 * v119) ^ (-1251540992 * v119) ^ v12[1558] ^ (433590137
                                                                         * ((-333269657 * v119) >> 24)) ^ *(_DWORD *)(*(_QWORD *)(v3 + 8832) + 4 * ((-333269657 * v119) >> 24)) ^ *(_DWORD *)(*(_QWORD *)(v3 + 8816) + 4 * ((-333269657 * v119) >> 24)) ^ *(_DWORD *)(*(_QWORD *)(v3 + 8808) + 4 * ((-333269657 * v119) >> 24));
  *(_DWORD *)(v3 + 8392) = -1889256238 * v118 - 1099659602;
  LODWORD(v117) = 1202855529 * *(_DWORD *)(v3 + 8764) - 549829801;
  LODWORD(v130) = 1202855529 * *(_DWORD *)(v3 + 8736) - 549829801;
  *(_DWORD *)(v3 + 8432) = 1202855529 * *(_DWORD *)(v3 + 8680);
  *(_DWORD *)(v3 + 8816) = 1202855529 * *(_DWORD *)(v3 + 8664) - 549829801;
  v138 = 1202855529 * *(_DWORD *)(v3 + 8532);
  *(_DWORD *)(v3 + 8736) = 1202855529 * v122 - 549829801;
  v139 = 1202855529 * *(_DWORD *)(v3 + 8480) - 549829801;
  *(_DWORD *)(v3 + 8368) = 1202855529 * v118;
  *(_DWORD *)(v3 + 8424) = 1202855529 * v121;
  LODWORD(v121) = 1202855529 * *(_DWORD *)(v3 + 8472) - 549829801;
  *(_DWORD *)(v3 + 8400) = 1202855529 * *(_DWORD *)(v3 + 8456);
  LODWORD(v111) = 1202855529 * *(_DWORD *)(v3 + 8448) - 549829801;
  *(_DWORD *)(v3 + 8472) = 1202855529 * v132 - 549829801;
  *(_DWORD *)(v3 + 8328) = 1202855529 * v131 - 549829801;
  LODWORD(v132) = 1202855529 * v137 - 549829801;
  LODWORD(v131) = 1202855529 * (_DWORD)v96 - 549829801;
  LODWORD(v134) = 1202855529 * (_DWORD)v134;
  LODWORD(v108) = 1202855529 * *(_DWORD *)(v3 + 8464) - 549829801;
  LODWORD(v118) = *(_DWORD *)(v3 + 9552) - 1509676046;
  *(_DWORD *)(v3 + 8680) = (v118 ^ 0xC6C9E89B)
                         + (v127 ^ 0x39361764)
                         + 1
                         - ((2 * ((v118 ^ 0xC6C9E89B) + (v127 ^ 0x39361764) + 1)) & 0xB2F1A15E);
  LODWORD(v127) = *(_DWORD *)(v3 + 8992) - 1509676046;
  LODWORD(v122) = *(_DWORD *)(v3 + 8616) - 1509676046;
  *(_DWORD *)(v3 + 9128) = (v127 ^ 0x39361764)
                         + (v122 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v127 ^ 0x39361764) + (v122 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  LODWORD(v124) = *(_DWORD *)(v3 + 9096) - 1509676046;
  *(_DWORD *)(v3 + 8764) = (v124 ^ 0xC6C9E89B) + (v135 ^ 0x39361764);
  *(_DWORD *)(v3 + 8384) = 1202855529 * (_DWORD)v94 - ((-1889256238 * (_DWORD)v94 - 1099659602) & 0x8D93D136);
  LODWORD(v94) = *(_DWORD *)(v3 + 9568) - 1509676046;
  LODWORD(v135) = *(_DWORD *)(v3 + 8712) - 1509676046;
  *(_DWORD *)(v3 + 8992) = (v94 ^ 0x39361764)
                         + (v135 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v94 ^ 0x39361764) + (v135 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  v140 = *(_DWORD *)(v3 + 9688) - 1509676046;
  LODWORD(v123) = *(_DWORD *)(v3 + 8748) - 1509676046;
  *(_DWORD *)(v3 + 9096) = v123 ^ v129;
  *(_DWORD *)(v3 + 8712) = (v123 ^ 0xC6C9E89B)
                         + (v140 ^ 0xC6C9E89B)
                         - 959846245
                         - ((2 * ((v123 ^ 0xC6C9E89B) + (v140 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v129) = *(_DWORD *)(v3 + 8696) - 1509676046;
  *(_DWORD *)(v3 + 8480) = (v129 ^ 0x39361764)
                         + (_DWORD)v111
                         - 959846244
                         - ((2 * ((v129 ^ 0x39361764) + (_DWORD)v111 + 1)) & 0x8D93D136);
  LODWORD(v123) = *(_DWORD *)(v3 + 9004) - 1509676046;
  *(_DWORD *)(v3 + 8696) = (v123 ^ 0xC6C9E89B)
                         + (v127 ^ 0xC6C9E89B)
                         - 959846245
                         - ((2 * ((v123 ^ 0xC6C9E89B) + (v127 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v127) = *(_DWORD *)(v3 + 9148) - 1509676046;
  v141 = *(_DWORD *)(v3 + 8520) - 1509676046;
  *(_DWORD *)(v3 + 9004) = (v127 ^ 0xC6C9E89B)
                         + (v141 ^ 0x39361764)
                         - 959846244
                         - ((2 * ((v127 ^ 0xC6C9E89B) + (v141 ^ 0x39361764) + 1)) & 0x8D93D136);
  LODWORD(v119) = ((*(_DWORD *)(v3 + 9464) - 1509676046) ^ 0xC6C9E89B) + (v118 ^ 0x39361764) + 1;
  *(_DWORD *)(v3 + 8748) = v119 - 959846245 - ((2 * v119) & 0x8D93D136);
  LODWORD(v96) = *(_DWORD *)(v3 + 9280) - 1509676046;
  LODWORD(v119) = *(_DWORD *)(v3 + 9560);
  *(_DWORD *)(v3 + 8616) = (v119 ^ 0x39361764)
                         + (v96 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v119 ^ 0x39361764) + (v96 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9552) = *(_DWORD *)(v3 + 8572) ^ v135;
  LODWORD(v118) = *(_DWORD *)(v3 + 9480) - 1509676046;
  *(_DWORD *)(v3 + 9148) = (v118 ^ 0x39361764)
                         + (v141 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v118 ^ 0x39361764) + (v141 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8808) = (v94 ^ 0xC6C9E89B) + (v122 ^ 0x39361764);
  LODWORD(v94) = *(_DWORD *)(v3 + 9408) - 1509676046;
  *(_DWORD *)(v3 + 9688) = v123 ^ v94;
  *(_DWORD *)(v3 + 9280) = (v94 ^ 0xC6C9E89B) - (_DWORD)v111;
  LODWORD(v94) = *(_DWORD *)(v3 + 9400) - 1509676046;
  *(_DWORD *)(v3 + 9408) = (v119 ^ 0xC6C9E89B)
                         + (v94 ^ 0x39361764)
                         - 959846244
                         - ((2 * ((v119 ^ 0xC6C9E89B) + (v94 ^ 0x39361764) + 1)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8832) = (v127 ^ 0x39361764)
                         + (v129 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v127 ^ 0x39361764) + (v129 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  LODWORD(v111) = *(_DWORD *)(v3 + 9432) - 1509676046;
  *(_DWORD *)(v3 + 9432) = v111 ^ v140;
  *(_DWORD *)(v3 + 9400) = v124 ^ v111;
  LODWORD(v111) = *(_DWORD *)(v3 + 9328) - 1509676046;
  LODWORD(v127) = *(_DWORD *)(v3 + 8612) + 1;
  *(_DWORD *)(v3 + 8464) = (v111 ^ 0x39361764)
                         + (_DWORD)v127
                         - 959846244
                         - ((2 * ((v111 ^ 0x39361764) + (_DWORD)v127 + 1)) & 0x8D93D136);
  LODWORD(v129) = *(_DWORD *)(v3 + 8880) - 1509676046;
  LODWORD(v135) = (*(_DWORD *)(v3 + 8536) ^ 0xC6C9E89B) - 549829801;
  *(_DWORD *)(v3 + 8612) = v135 + (v129 ^ 0xC6C9E89B) - 959846245 - ((2 * (v135 + (v129 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v136) = *(_DWORD *)(v3 + 8828) - 1509676046;
  *(_DWORD *)(v3 + 8828) = v131 + (v136 ^ 0xC6C9E89B) - 959846245 - ((2 * (v131 + (v136 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v122) = (_DWORD)v134 - 549829801;
  v142 = (_DWORD)v134 - ((2 * ((_DWORD)v134 - 549829801)) & 0x8D93D136);
  LODWORD(v134) = *(_DWORD *)(v3 + 8760) - 1509676046;
  *(_DWORD *)(v3 + 8532) = v134 ^ v118;
  *(_DWORD *)(v3 + 8456) = (v96 ^ 0x39361764)
                         + (v134 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v96 ^ 0x39361764) + (v134 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 9208) - 1509676046;
  *(_DWORD *)(v3 + 8440) = (v119 ^ 0x39361764) + v131;
  LODWORD(v131) = *(_DWORD *)(v3 + 9456) - 1509676046;
  LODWORD(v134) = *(_DWORD *)(v3 + 9248) - 1509676046;
  *(_DWORD *)(v3 + 8416) = (v131 ^ 0xC6C9E89B)
                         + (v134 ^ 0x39361764)
                         - 959846244
                         - ((2 * ((v131 ^ 0xC6C9E89B) + (v134 ^ 0x39361764) + 1)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8572) = v122 ^ v135;
  LODWORD(v118) = (*(_DWORD *)(v3 + 8496) - 1509676046) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8760) = v108 + v118 - 959846245 - ((2 * (v108 + v118)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9480) = v139 ^ v94;
  LODWORD(v94) = *(_DWORD *)(v3 + 8488);
  *(_DWORD *)(v3 + 9560) = v94 ^ ((_DWORD)v127 - 959846245 - ((2 * (_DWORD)v127) & 0x8D93D136));
  *(_DWORD *)(v3 + 9208) = -959846244;
  *(_DWORD *)(v3 + 8536) = (v94 ^ 0x39361764)
                         + v139
                         - 959846243
                         + ~((2 * ((v94 ^ 0x39361764) + v139 + 1)) & 0x8D93D136);
  LODWORD(v96) = *(_DWORD *)(v3 + 9080) - 1509676046;
  *(_DWORD *)(v3 + 9248) = (_DWORD)v96;
  LODWORD(v94) = (*(_DWORD *)(v3 + 8656) - 1509676046) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8880) = (_DWORD)v94
                         + (v96 ^ 0xC6C9E89B)
                         - 959846245
                         - ((2 * ((_DWORD)v94 + (v96 ^ 0xC6C9E89B))) & 0x8D93D136);
  *(_DWORD *)(v3 + 8408) = v136 ^ v134;
  LODWORD(v127) = *(_DWORD *)(v3 + 8872) - 1509676046;
  LODWORD(v134) = (*(_DWORD *)(v3 + 9616) - 1509676046) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8332) = (v127 ^ 0xC6C9E89B)
                         + (_DWORD)v134
                         - 959846245
                         - ((2 * ((v127 ^ 0xC6C9E89B) + (_DWORD)v134)) & 0x8D93D136);
  v143 = *(_DWORD *)(v3 + 8720) - 1509676046;
  *(_DWORD *)(v3 + 8356) = (v143 ^ 0xC6C9E89B)
                         + (_DWORD)v134
                         - 959846245
                         - ((2 * ((v143 ^ 0xC6C9E89B) + (_DWORD)v134)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8496) = v108 - v121;
  *(_DWORD *)(v3 + 9080) = v121 ^ v143;
  *(_DWORD *)(v3 + 8320) = v132 ^ v111;
  *(_DWORD *)(v3 + 8872) = v132 ^ v129;
  *(_DWORD *)(v3 + 9456) = v118 + (v119 ^ 0xC6C9E89B) - 959846244 + ~((2 * (v118 + (v119 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8964) - 1509676046;
  *(_DWORD *)(v3 + 9616) = v119 ^ v131;
  *(_DWORD *)(v3 + 9464) = v130 ^ v119;
  *(_DWORD *)(v3 + 8656) = (_DWORD)v94 + v130;
  LODWORD(v72) = *(_DWORD *)(v3 + 9104) - 1509676046;
  *(_DWORD *)(v3 + 8964) = (_DWORD)v72;
  LODWORD(v119) = (*(_DWORD *)(v3 + 8504) ^ 0xC6C9E89B) - 549829801;
  *(_DWORD *)(v3 + 9104) = (v72 ^ 0xC6C9E89B)
                         - v119
                         - 959846245
                         - ((2 * ((v72 ^ 0xC6C9E89B) - v119)) & 0x8D93D136);
  LODWORD(v94) = *(_DWORD *)(v3 + 9312) - 1509676046;
  *(_DWORD *)(v3 + 8308) = (_DWORD)v94;
  *(_DWORD *)(v3 + 8720) = v117 ^ v127;
  *(_DWORD *)(v3 + 8488) = (v94 ^ 0x39361764)
                         + (_DWORD)v117
                         - 959846244
                         - ((2 * ((v94 ^ 0x39361764) + (_DWORD)v117 + 1)) & 0x8D93D136);
  LODWORD(v96) = *(_DWORD *)(v3 + 8904) - ((2 * *(_DWORD *)(v3 + 8688)) & 0x8D93D136);
  LODWORD(v131) = *(_DWORD *)(v3 + 9528) - 1509676046;
  LODWORD(v132) = *(_DWORD *)(v3 + 9320) - 1509676046;
  *(_DWORD *)(v3 + 9568) = (v138 - ((2 * (v138 - 549829801)) & 0x8D93D136) - 1509676046) ^ v131;
  *(_DWORD *)(v3 + 8520) = (v131 ^ 0x39361764) + (v132 ^ 0xC6C9E89B);
  LODWORD(v94) = *(_DWORD *)(v3 + 9156) - 1509676046;
  LODWORD(v131) = *(_DWORD *)(v3 + 8752) - 1509676046;
  *(_DWORD *)(v3 + 8504) = v94 ^ v132;
  *(_DWORD *)(v3 + 8344) = (v131 ^ 0xC6C9E89B) + (v94 ^ 0xC6C9E89B);
  LODWORD(v94) = *(_DWORD *)(v3 + 9496) - 1509676046;
  LODWORD(v132) = *(_DWORD *)(v3 + 9184) - 1509676046;
  *(_DWORD *)(v3 + 8664) = v131 ^ v94;
  LODWORD(v96) = (_DWORD)v96 - 1509676046;
  *(_DWORD *)(v3 + 9156) = v96 ^ v94;
  *(_DWORD *)(v3 + 8312) = v96 ^ v132;
  *(_DWORD *)(v3 + 9528) = v119 + (v132 ^ 0xC6C9E89B);
  LODWORD(v119) = *(_DWORD *)(v3 + 9608) - 1509676046;
  *(_DWORD *)(v3 + 9320) = (v119 ^ 0x39361764) + v138 - 549829801;
  LODWORD(v72) = *(_DWORD *)(v3 + 9176) - 1509676046;
  *(_DWORD *)(v3 + 9184) = (v119 ^ 0xC6C9E89B) + (v72 ^ 0x39361764);
  LODWORD(v96) = *(_DWORD *)(v3 + 8424);
  LODWORD(v119) = (_DWORD)v96 - 549829801;
  LODWORD(v94) = (_DWORD)v96 - ((2 * ((_DWORD)v96 - 549829801)) & 0x8D93D136);
  LODWORD(v96) = *(_DWORD *)(v3 + 8912) - 1509676046;
  *(_DWORD *)(v3 + 8752) = (v96 ^ 0xC6C9E89B) - v119;
  LODWORD(v119) = *(_DWORD *)(v3 + 9424) - 1509676046;
  LODWORD(v129) = *(_DWORD *)(v3 + 8328);
  *(_DWORD *)(v3 + 8688) = (v119 ^ 0x39361764)
                         + v129
                         - 959846244
                         - ((2 * ((v119 ^ 0x39361764) + v129 + 1)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8912) = v96 ^ v72;
  LODWORD(v108) = *(_DWORD *)(v3 + 8432);
  LODWORD(v72) = v108 - 549829801;
  LODWORD(v123) = v108 - ((2 * (v108 - 549829801)) & 0x8D93D136);
  LODWORD(v96) = *(_DWORD *)(v3 + 8888) - 1509676046;
  LODWORD(v108) = (*(_DWORD *)(v3 + 8868) - 1509676046) ^ 0xC6C9E89B;
  LODWORD(v132) = *(_DWORD *)(v3 + 9360);
  *(_DWORD *)(v3 + 9312) = v108 + (v132 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8448) = v108 + (v96 ^ 0xC6C9E89B);
  LODWORD(v108) = *(_DWORD *)(v3 + 9384) - 1509676046;
  LODWORD(v131) = *(_DWORD *)(v3 + 9016) - 1509676046;
  LODWORD(v130) = *(_DWORD *)(v3 + 8860) - 1509676046;
  LODWORD(v118) = *(_DWORD *)(v3 + 8776) - 1509676046;
  LODWORD(v127) = *(_DWORD *)(v3 + 8704) - 1509676046;
  *(_DWORD *)(v3 + 9384) = ((_DWORD)v94 - 1509676046) ^ v118;
  *(_DWORD *)(v3 + 9424) = v118 ^ v130;
  LODWORD(v94) = *(_DWORD *)(v3 + 9448);
  *(_DWORD *)(v3 + 9176) = v96 ^ v94;
  *(_DWORD *)(v3 + 8432) = v127 ^ v94;
  *(_DWORD *)(v3 + 8704) = (v131 ^ 0xC6C9E89B) + (v127 ^ 0x39361764);
  *(_DWORD *)(v3 + 8904) = (v131 ^ 0xC6C9E89B) + (v108 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8352) = (v130 ^ 0xC6C9E89B) + (v108 ^ 0xC6C9E89B);
  LODWORD(v94) = *(_DWORD *)(v3 + 9072) - 1509676046;
  LODWORD(v131) = *(_DWORD *)(v3 + 9536);
  *(_DWORD *)(v3 + 8424) = (v131 ^ 0x39361764) + (v94 ^ 0xC6C9E89B);
  LODWORD(v96) = *(_DWORD *)(v3 + 9416) - 1509676046;
  *(_DWORD *)(v3 + 8868) = v96 ^ v119;
  LODWORD(v108) = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 9608) = v96 ^ v108 ^ 0x1F347214;
  LODWORD(v119) = (*(_DWORD *)(v3 + 9472) - 1509676046) ^ 0xC6C9E89B;
  LODWORD(v96) = (*(_DWORD *)(v3 + 8672) - 1509676046) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8860) = (v108 ^ 0xD9FD9A8F) + v119;
  *(_DWORD *)(v3 + 8360) = (_DWORD)v96 + v119;
  *(_DWORD *)(v3 + 8376) = (_DWORD)v96 - (_DWORD)v72;
  LODWORD(v119) = *(_DWORD *)(v3 + 9008) - 1509676046;
  *(_DWORD *)(v3 + 8776) = v119 ^ v131;
  *(_DWORD *)(v3 + 9496) = (v119 ^ 0xC6C9E89B) - v129;
  LODWORD(v119) = *(_DWORD *)(v3 + 9544) - 1509676046;
  LODWORD(v72) = *(_DWORD *)(v3 + 9152) - 1509676046;
  *(_DWORD *)(v3 + 9152) = v94 ^ v119;
  LODWORD(v94) = *(_DWORD *)(v3 + 9520);
  *(_DWORD *)(v3 + 9472) = v132 ^ v94;
  *(_DWORD *)(v3 + 9536) = v72 ^ v119;
  *(_DWORD *)(v3 + 9328) = (v72 ^ 0xC6C9E89B) + (v94 ^ 0xC6C9E89B);
  LODWORD(v134) = *(_DWORD *)(v3 + 9136) - 1509676046;
  LODWORD(v129) = *(_DWORD *)(v3 + 9056) - 1509676046;
  *(_DWORD *)(v3 + 9056) = (v134 ^ 0x39361764) + (v129 ^ 0xC6C9E89B);
  LODWORD(v121) = *(_DWORD *)(v3 + 8368) - (*(_DWORD *)(v3 + 8392) & 0x8D93D136);
  LODWORD(v108) = *(_DWORD *)(v3 + 8744) - 1509676046;
  LODWORD(v72) = *(_DWORD *)(v3 + 8400);
  *(_DWORD *)(v3 + 9416) = (v108 ^ 0xC6C9E89B) - ((_DWORD)v72 - 549829801);
  v144 = *(_DWORD *)(v3 + 9600) - 1509676046;
  v145 = *(_DWORD *)(v3 + 9488) - 1509676046;
  *(_DWORD *)(v3 + 9448) = *(_DWORD *)(v3 + 9392) - 1509676046;
  *(_DWORD *)(v3 + 9136) = *(_DWORD *)(v3 + 9376) - 1509676046;
  v146 = *(_DWORD *)(v3 + 9296) - 1509676046;
  *(_DWORD *)(v3 + 9600) = *(_DWORD *)(v3 + 9288) - 1509676046;
  *(_DWORD *)(v3 + 9224) = *(_DWORD *)(v3 + 9272) - 1509676046;
  LODWORD(v132) = *(_DWORD *)(v3 + 9264) - 1509676046;
  *(_DWORD *)(v3 + 8280) = *(_DWORD *)(v3 + 9192) - 1509676046;
  LODWORD(v96) = *(_DWORD *)(v3 + 9172) - 1509676046;
  *(_DWORD *)(v3 + 9072) = *(_DWORD *)(v3 + 9120) - 1509676046;
  LODWORD(v127) = *(_DWORD *)(v3 + 9116) - 1509676046;
  LODWORD(v130) = *(_DWORD *)(v3 + 9064) - 1509676046;
  LODWORD(v117) = *(_DWORD *)(v3 + 9040) - 1509676046;
  LODWORD(v12) = *(_DWORD *)(v3 + 9024) - 1509676046;
  LODWORD(v119) = *(_DWORD *)(v3 + 9012) - 1509676046;
  LODWORD(v124) = *(_DWORD *)(v3 + 8936) - 1509676046;
  LODWORD(v136) = *(_DWORD *)(v3 + 8932) - 1509676046;
  LODWORD(v111) = *(_DWORD *)(v3 + 8864) - 1509676046;
  *(_DWORD *)(v3 + 9360) = *(_DWORD *)(v3 + 8848) - 1509676046;
  *(_DWORD *)(v3 + 8936) = *(_DWORD *)(v3 + 8840) - 1509676046;
  LODWORD(v122) = *(_DWORD *)(v3 + 8728) - 1509676046;
  LODWORD(v135) = *(_DWORD *)(v3 + 8920) - 1509676046;
  *(_DWORD *)(v3 + 8648) -= 1509676046;
  *(_DWORD *)(v3 + 9272) = *(_DWORD *)(v3 + 8512) - 1509676046;
  LODWORD(v94) = *(_DWORD *)(v3 + 8792) - 1509676046;
  v147 = *(_DWORD *)(v3 + 8784) - 1509676046;
  LODWORD(v131) = *(_DWORD *)(v3 + 8384) - 1509676046;
  *(_DWORD *)(v3 + 8864) = v142 - 1509676046;
  LODWORD(v121) = v121 - 1509676046;
  v148 = (_DWORD)v72 - ((2 * ((_DWORD)v72 - 549829801)) & 0x8D93D136) - 1509676046;
  *(_DWORD *)(v3 + 9296) = (v123 - 1509676046) ^ v119;
  *(_DWORD *)(v3 + 9024) = v94 ^ v108;
  *(_DWORD *)(v3 + 8384) = v121 ^ v119;
  *(_DWORD *)(v3 + 9488) = v121 ^ v96;
  *(_DWORD *)(v3 + 9172) = (v96 ^ 0xC6C9E89B) + (v94 ^ 0x39361764);
  LODWORD(v72) = *(_DWORD *)(v3 + 8900) ^ 0xDF10011E;
  *(_DWORD *)(v3 + 9376) = (_DWORD)v72 + (v134 ^ 0xC6C9E89B);
  LODWORD(v120) = (_DWORD)v72 + (v131 ^ 0x39361764);
  LODWORD(v121) = (v136 ^ 0xC6C9E89B) + (v132 ^ 0xC6C9E89B);
  LODWORD(v123) = (v129 ^ 0x39361764) + (v147 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8304) = (v147 ^ 0xC6C9E89B) + (v136 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8368) = (v127 ^ 0x39361764) + (v111 ^ 0xC6C9E89B);
  LODWORD(v119) = *(_DWORD *)(v3 + 9512);
  *(_DWORD *)(v3 + 9120) = v148 ^ v119;
  v149 = v145 ^ v119;
  LODWORD(v119) = v130 ^ v145;
  LODWORD(v129) = (v146 ^ 0xC6C9E89B) + (v132 ^ 0x39361764);
  *(_DWORD *)(v3 + 8920) = (v130 ^ 0xC6C9E89B) + (v144 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8848) = (v146 ^ 0xC6C9E89B) + (v144 ^ 0xC6C9E89B);
  v150 = *(_DWORD *)(v3 + 9136);
  *(_DWORD *)(v3 + 9264) = (v127 ^ 0xC6C9E89B) + (v150 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8400) = v131 ^ v111;
  v151 = *(_DWORD *)(v3 + 9224);
  LODWORD(v96) = *(_DWORD *)(v3 + 9200);
  *(_DWORD *)(v3 + 8744) = (v151 ^ 0xC6C9E89B) + (v96 ^ 0x39361764);
  LODWORD(v72) = (v117 ^ 0xC6C9E89B) + (v96 ^ 0xC6C9E89B);
  LODWORD(v96) = v135 ^ v117;
  LODWORD(v108) = (v135 ^ 0xC6C9E89B) + (v122 ^ 0xC6C9E89B);
  LODWORD(v132) = *(_DWORD *)(v3 + 9320) + 1;
  LODWORD(v130) = *(_DWORD *)(v3 + 8320);
  *(_DWORD *)(v3 + 9320) = (v130 ^ 0xC6C9E89B) - v132 - 959846245 - ((2 * ((v130 ^ 0xC6C9E89B) - v132)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9064) = v122 ^ v12;
  v152 = *(_DWORD *)(v3 + 8280);
  LODWORD(v94) = (v152 ^ 0x39361764) + (v12 ^ 0xC6C9E89B);
  LODWORD(v135) = *(_DWORD *)(v3 + 8472);
  LODWORD(v134) = v135 ^ *(_DWORD *)(v3 + 8308);
  LODWORD(v111) = v124 ^ *(_DWORD *)(v3 + 8964);
  *(_DWORD *)(v3 + 8964) = (v134 ^ 0xC6C9E89B)
                         - (_DWORD)v111
                         - 959846245
                         - ((2 * ((v134 ^ 0xC6C9E89B) - (_DWORD)v111)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9040) = v132 ^ v96;
  LODWORD(v132) = *(_DWORD *)(v3 + 8332) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9544) = (_DWORD)v96 + v132 - 959846245 - ((2 * ((_DWORD)v96 + v132)) & 0x8D93D136);
  LODWORD(v131) = *(_DWORD *)(v3 + 8904);
  *(_DWORD *)(v3 + 9520) = v131 + v119 - 959846245 - ((2 * (v131 + v119)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9192) = v132
                         + (v134 ^ 0x39361764)
                         - 959846244
                         - ((2 * (v132 + (v134 ^ 0x39361764) + 1)) & 0x8D93D136);
  LODWORD(v132) = *(_DWORD *)(v3 + 9472);
  *(_DWORD *)(v3 + 8784) = v111 ^ v132;
  LODWORD(v134) = *(_DWORD *)(v3 + 8312);
  *(_DWORD *)(v3 + 9016) = v132 - (_DWORD)v134 - 959846245 - ((2 * (v132 - (_DWORD)v134)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9392) = v108 ^ v131;
  *(_DWORD *)(v3 + 8904) = (v120 + 1) ^ v108;
  *(_DWORD *)(v3 + 9116) = (v120 + 1) ^ v134;
  LODWORD(v120) = *(_DWORD *)(v3 + 8480);
  *(_DWORD *)(v3 + 9472) = (v120 ^ 0xC6C9E89B)
                         - (v129
                          + 1)
                         - 959846245
                         - ((2 * ((v120 ^ 0xC6C9E89B) - (v129 + 1))) & 0x8D93D136);
  v153 = *(_DWORD *)(v3 + 8416);
  LODWORD(v127) = *(_DWORD *)(v3 + 9280);
  *(_DWORD *)(v3 + 8900) = (_DWORD)v127
                         + (v153 ^ 0xC6C9E89B)
                         - 959846245
                         - ((2 * ((_DWORD)v127 + (v153 ^ 0xC6C9E89B))) & 0x8D93D136);
  *(_DWORD *)(v3 + 9288) = v130 ^ *(_DWORD *)(v3 + 8356);
  LODWORD(v108) = *(_DWORD *)(v3 + 9304) ^ 0xD195F6CA;
  LODWORD(v132) = *(_DWORD *)(v3 + 9272);
  *(_DWORD *)(v3 + 8288) = (v132 ^ 0xC6C9E89B) + v108;
  LODWORD(v131) = *(_DWORD *)(v3 + 8768) ^ 0xCEB39DE3;
  LODWORD(v130) = (v151 ^ 0x39361764) + v131;
  LODWORD(v108) = v131 + v108;
  LODWORD(v131) = *(_DWORD *)(v3 + 9360);
  LODWORD(v134) = v131 ^ v150;
  LODWORD(v131) = (v131 ^ 0xC6C9E89B) + (v132 ^ 0x39361764);
  LODWORD(v122) = *(_DWORD *)(v3 + 8408);
  *(_DWORD *)(v3 + 9136) = v108 + v122 - 959846245 - ((2 * (v108 + v122)) & 0x8D93D136);
  LODWORD(v132) = *(_DWORD *)(v3 + 9456) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8392) = (_DWORD)v127 + v132;
  v154 = *(_DWORD *)(v3 + 8344);
  *(_DWORD *)(v3 + 9456) = v132 + v154 - 959846245 - ((2 * (v132 + v154)) & 0x8D93D136);
  LODWORD(v132) = v123 + 1;
  LODWORD(v117) = *(_DWORD *)(v3 + 8464);
  LODWORD(v127) = *(_DWORD *)(v3 + 9156);
  *(_DWORD *)(v3 + 8332) = (v117 ^ 0xC6C9E89B) + (_DWORD)v127;
  *(_DWORD *)(v3 + 9304) = v123 + 1 + (_DWORD)v127 - 959846245 - ((2 * (v123 + 1 + (_DWORD)v127)) & 0x8D93D136);
  LODWORD(v12) = *(_DWORD *)(v3 + 9256);
  LODWORD(v111) = *(_DWORD *)(v3 + 9248) ^ v12;
  LODWORD(v123) = *(_DWORD *)(v3 + 9488);
  *(_DWORD *)(v3 + 8888) = (v111 ^ 0xA4F3FE89)
                         + v123
                         - 959846244
                         - ((2 * ((v111 ^ 0xA4F3FE89) + v123 + 1)) & 0x8D93D136);
  LODWORD(v127) = *(_DWORD *)(v3 + 8800);
  *(_DWORD *)(v3 + 9156) = v120 ^ v127;
  *(_DWORD *)(v3 + 9012) = (v127 ^ 0xC6C9E89B)
                         + v119
                         - 959846245
                         - ((2 * ((v127 ^ 0xC6C9E89B) + v119)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8704) + 1;
  *(_DWORD *)(v3 + 8512) = v119 ^ (v129 + 1);
  LODWORD(v96) = *(_DWORD *)(v3 + 8456);
  *(_DWORD *)(v3 + 8704) = v96 ^ v119;
  LODWORD(v127) = *(_DWORD *)(v3 + 8496);
  *(_DWORD *)(v3 + 9280) = (v96 ^ 0xC6C9E89B)
                         - (_DWORD)v127
                         - ((2 * ((v96 ^ 0xC6C9E89B) - (_DWORD)v127)) & 0x9D673BC6);
  LODWORD(v96) = *(_DWORD *)(v3 + 8868);
  *(_DWORD *)(v3 + 8932) = v117 ^ v96;
  *(_DWORD *)(v3 + 8456) = (v111 ^ 0x5B0C0176)
                         - (_DWORD)v96
                         - 959846245
                         - ((2 * ((v111 ^ 0x5B0C0176) - (_DWORD)v96)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8440) + 1;
  *(_DWORD *)(v3 + 9248) = v132 - v119 - 959846245 - ((2 * (v132 - v119)) & 0x8D93D136);
  LODWORD(v96) = *(_DWORD *)(v3 + 8680) + 1501089967;
  *(_DWORD *)(v3 + 9008) = v127 ^ v72;
  *(_DWORD *)(v3 + 8728) = v72 ^ v96;
  *(_DWORD *)(v3 + 8840) = v154
                         + (v96 ^ 0x5978D0AF)
                         - 959846245
                         - ((2 * (v154 + (v96 ^ 0x5978D0AF))) & 0x8D93D136);
  LODWORD(v132) = *(_DWORD *)(v3 + 8488);
  *(_DWORD *)(v3 + 9224) = (v132 ^ 0x39361764)
                         + v108
                         - 959846244
                         - ((2 * ((v132 ^ 0x39361764) + v108 + 1)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8680) = v119 - (v131 + 1);
  LODWORD(v108) = *(_DWORD *)(v3 + 9480);
  *(_DWORD *)(v3 + 8792) = v131
                         + 1
                         + (v108 ^ 0x39361764)
                         + 1
                         - ((2 * (v131 + 1 + (v108 ^ 0x39361764) + 1)) & 0xB2F1A15E);
  LODWORD(v119) = v108 ^ 0xC6C9E89B;
  LODWORD(v108) = *(_DWORD *)(v3 + 9312);
  *(_DWORD *)(v3 + 9200) = v119 + v108 - ((2 * (v119 + v108)) & 0xB3FB351E);
  LODWORD(v96) = *(_DWORD *)(v3 + 9536);
  *(_DWORD *)(v3 + 8480) = v108 ^ v96;
  *(_DWORD *)(v3 + 8328) = v122 + (_DWORD)v96;
  *(_DWORD *)(v3 + 9312) = v123 ^ v121;
  *(_DWORD *)(v3 + 8672) = v121 ^ v153;
  LODWORD(v119) = *(_DWORD *)(v3 + 8764) + 1;
  LODWORD(v96) = *(_DWORD *)(v3 + 8616);
  *(_DWORD *)(v3 + 8300) = v96 ^ (v149 - 959846245 - ((2 * v149) & 0x8D93D136));
  *(_DWORD *)(v3 + 9272) = v119 ^ v132;
  *(_DWORD *)(v3 + 8464) = v119 ^ v96;
  LODWORD(v132) = *(_DWORD *)(v3 + 8352);
  LODWORD(v127) = *(_DWORD *)(v3 + 8304);
  *(_DWORD *)(v3 + 8356) = (_DWORD)v127 + v132 - 959846245 - ((2 * ((_DWORD)v127 + v132)) & 0x8D93D136);
  LODWORD(v108) = *(_DWORD *)(v3 + 9004);
  LODWORD(v125) = *(_DWORD *)(v3 + 9176);
  *(_DWORD *)(v3 + 9480) = (v108 ^ 0xC6C9E89B)
                         + (_DWORD)v125
                         - 959846245
                         - ((2 * ((v108 ^ 0xC6C9E89B) + (_DWORD)v125)) & 0x8D93D136);
  LODWORD(v131) = *(_DWORD *)(v3 + 8532);
  *(_DWORD *)(v3 + 9488) = *(_DWORD *)(v3 + 9616)
                         - v131
                         - 959846245
                         - ((2 * (*(_DWORD *)(v3 + 9616) - v131)) & 0x8D93D136);
  LODWORD(v111) = *(_DWORD *)(v3 + 8384);
  *(_DWORD *)(v3 + 9360) = (_DWORD)v111 + v149 - 959846245 - ((2 * ((_DWORD)v111 + v149)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8368) + 1;
  *(_DWORD *)(v3 + 8768) = v131 ^ v119;
  *(_DWORD *)(v3 + 8488) = v108 ^ v119;
  LODWORD(v131) = *(_DWORD *)(v3 + 8376);
  *(_DWORD *)(v3 + 8868) = (_DWORD)v125 - v131 - 959846245 - ((2 * ((_DWORD)v125 - v131)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8828) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8308) = v119 + (_DWORD)v111;
  LODWORD(v72) = *(_DWORD *)(v3 + 8360);
  *(_DWORD *)(v3 + 8272) = v119 + (_DWORD)v72;
  *(_DWORD *)(v3 + 8616) = (_DWORD)v72 - v132 - 959846245 - ((2 * ((_DWORD)v72 - v132)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8764) = v130 + 1;
  *(_DWORD *)(v3 + 9004) = (_DWORD)v127 - (v130 + 1) - 959846245 - ((2 * ((_DWORD)v127 - (v130 + 1))) & 0x8D93D136);
  LODWORD(v108) = *(_DWORD *)(v3 + 8736);
  v155 = (v124 ^ 0x39361764) + v108 + 1;
  *(_DWORD *)(v3 + 9536) = v131 ^ ((_DWORD)v94 + 1);
  *(_DWORD *)(v3 + 8376) = (_DWORD)v94
                         - ((v124 ^ 0x39361764)
                          + v108)
                         - 959846245
                         - ((2 * ((_DWORD)v94 - ((v124 ^ 0x39361764) + v108))) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8648) ^ 0xC6C9E89B;
  LODWORD(v72) = *(_DWORD *)(v3 + 8936);
  LODWORD(v123) = v72 ^ v152;
  LODWORD(v120) = v119 + (v72 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8368) = v120;
  LODWORD(v111) = *(_DWORD *)(v3 + 8816);
  *(_DWORD *)(v3 + 8936) = v119 - (_DWORD)v111;
  LODWORD(v127) = *(_DWORD *)(v3 + 8612);
  *(_DWORD *)(v3 + 9512) = v119
                         - (_DWORD)v111
                         + (v127 ^ 0xC6C9E89B)
                         - 959846245
                         - ((2 * (v119 - (_DWORD)v111 + (v127 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8696) ^ 0xC6C9E89B;
  LODWORD(v125) = *(_DWORD *)(v3 + 8712);
  *(_DWORD *)(v3 + 8828) = (v125 ^ 0xC6C9E89B)
                         + v119
                         - 959846245
                         - ((2 * ((v125 ^ 0xC6C9E89B) + v119)) & 0x8D93D136);
  LODWORD(v94) = *(_DWORD *)(v3 + 9600);
  LODWORD(v124) = v108 ^ v94;
  LODWORD(v72) = v94 ^ v135 ^ 0xC6C9E89B;
  v156 = *(_DWORD *)(v3 + 8572);
  *(_DWORD *)(v3 + 8736) = v156 + (_DWORD)v72 - 959846245 - ((2 * (v156 + (_DWORD)v72)) & 0x8D93D136);
  LODWORD(v121) = *(_DWORD *)(v3 + 9416);
  *(_DWORD *)(v3 + 8496) = v121
                         + *(_DWORD *)(v3 + 9560)
                         - 959846245
                         - ((2 * (v121 + *(_DWORD *)(v3 + 9560))) & 0x8D93D136);
  LODWORD(v94) = *(_DWORD *)(v3 + 8536) ^ 0xC6C9E89B;
  v157 = *(_DWORD *)(v3 + 8920);
  *(_DWORD *)(v3 + 8532) = (_DWORD)v94 + v157 - 959846245 - ((2 * ((_DWORD)v94 + v157)) & 0x8D93D136);
  LODWORD(v130) = *(_DWORD *)(v3 + 9104) ^ 0xC6C9E89B;
  LODWORD(v129) = *(_DWORD *)(v3 + 8432);
  *(_DWORD *)(v3 + 8696) = v130 + v129 - 959846245 - ((2 * (v130 + v129)) & 0x8D93D136);
  LODWORD(v108) = *(_DWORD *)(v3 + 9208);
  *(_DWORD *)(v3 + 9176) = (v125 ^ 0x39361764)
                         + (_DWORD)v94
                         + 1
                         + v108
                         + ~((2 * ((v125 ^ 0x39361764) + (_DWORD)v94 + 1)) & 0x8D93D136);
  v158 = v121 + v129;
  LODWORD(v131) = *(_DWORD *)(v3 + 8504);
  *(_DWORD *)(v3 + 8536) = (_DWORD)v72 - v131 - 959846245 - ((2 * ((_DWORD)v72 - v131)) & 0x8D93D136);
  LODWORD(v72) = *(_DWORD *)(v3 + 8424) + 1;
  LODWORD(v122) = v119 - (_DWORD)v72;
  *(_DWORD *)(v3 + 8648) = *(_DWORD *)(v3 + 9528)
                         + (_DWORD)v72
                         - 959846245
                         - ((2 * (*(_DWORD *)(v3 + 9528) + (_DWORD)v72)) & 0x8D93D136);
  LODWORD(v94) = *(_DWORD *)(v3 + 8448);
  *(_DWORD *)(v3 + 8712) = (_DWORD)v94 - v120 - 959846245 - ((2 * ((_DWORD)v94 - v120)) & 0x8D93D136);
  LODWORD(v125) = *(_DWORD *)(v3 + 8400);
  *(_DWORD *)(v3 + 8320) = (_DWORD)v125 + v130 - 959846245 - ((2 * ((_DWORD)v125 + v130)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9104) = v125 ^ v111;
  *(_DWORD *)(v3 + 8424) = (_DWORD)v111 + (_DWORD)v94 - 959846245 - ((2 * ((_DWORD)v111 + (_DWORD)v94)) & 0x8D93D136);
  *(_DWORD *)(v3 + 9416) = v157 + v131 + v108 + ~((2 * (v157 + v131)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8748) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8416) = v119;
  LODWORD(v94) = *(_DWORD *)(v3 + 8656);
  *(_DWORD *)(v3 + 8472) = (_DWORD)v94 + v119 - 959846245 - ((2 * ((_DWORD)v94 + v119)) & 0x8D93D136);
  LODWORD(v131) = *(_DWORD *)(v3 + 9608);
  LODWORD(v111) = *(_DWORD *)(v3 + 8848);
  *(_DWORD *)(v3 + 9600) = v131 + (_DWORD)v111 - 959846245 - ((2 * (v131 + (_DWORD)v111)) & 0x8D93D136);
  LODWORD(v108) = *(_DWORD *)(v3 + 8760);
  *(_DWORD *)(v3 + 8816) = (v127 ^ 0x39361764)
                         + (v108 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v127 ^ 0x39361764) + (v108 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  LODWORD(v132) = *(_DWORD *)(v3 + 9024);
  *(_DWORD *)(v3 + 8260) = (_DWORD)v94 - v132 - 959846245 - ((2 * ((_DWORD)v94 - v132)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 8992) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8920) = v119;
  *(_DWORD *)(v3 + 8748) = v119 + v131 - 959846245 - ((2 * (v119 + v131)) & 0x8D93D136);
  LODWORD(v72) = *(_DWORD *)(v3 + 8520) + 1;
  *(_DWORD *)(v3 + 8992) = (_DWORD)v72;
  *(_DWORD *)(v3 + 8264) = (_DWORD)v72
                         - *(_DWORD *)(v3 + 9552)
                         - ((2 * ((_DWORD)v72 - *(_DWORD *)(v3 + 9552))) & 0xA32BED94);
  LODWORD(v119) = *(_DWORD *)(v3 + 9072);
  LODWORD(v125) = *(_DWORD *)(v3 + 8864) ^ v119;
  LODWORD(v94) = *(_DWORD *)(v3 + 9448);
  LODWORD(v119) = v119 ^ v94;
  LODWORD(v72) = v94 ^ v12 ^ 0x5B0C0176;
  LODWORD(v130) = *(_DWORD *)(v3 + 8744) + 1;
  *(_DWORD *)(v3 + 8312) = (_DWORD)v72 + v130 - 959846245 - ((2 * ((_DWORD)v72 + v130)) & 0x8D93D136);
  LODWORD(v121) = *(_DWORD *)(v3 + 8808) + 1;
  *(_DWORD *)(v3 + 8656) = v132 + v121 - 959846245 - ((2 * (v132 + v121)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8504) = (_DWORD)v72 + (_DWORD)v111 - 959846245 - ((2 * ((_DWORD)v72 + (_DWORD)v111)) & 0x8D93D136);
  LODWORD(v131) = *(_DWORD *)(v3 + 8664);
  *(_DWORD *)(v3 + 8432) = v131 + v130 - 959846245 - ((2 * (v131 + v130)) & 0x8D93D136);
  LODWORD(v94) = *(_DWORD *)(v3 + 8880);
  *(_DWORD *)(v3 + 9256) = v108 ^ v94;
  *(_DWORD *)(v3 + 9448) = v121
                         + (v94 ^ 0x39361764)
                         - 959846244
                         - ((2 * (v121 + (v94 ^ 0x39361764) + 1)) & 0x8D93D136);
  LODWORD(v108) = *(_DWORD *)(v3 + 8720);
  LODWORD(v94) = *(_DWORD *)(v3 + 8832);
  v159 = (v108 ^ 0xC6C9E89B) + (v94 ^ 0x39361764);
  LODWORD(v130) = *(_DWORD *)(v3 + 9264);
  *(_DWORD *)(v3 + 9608) = (_DWORD)v134 - v130 - 959846245 - ((2 * ((_DWORD)v134 - v130)) & 0x8D93D136);
  LODWORD(v129) = *(_DWORD *)(v3 + 8776);
  LODWORD(v120) = *(_DWORD *)(v3 + 8860);
  *(_DWORD *)(v3 + 8808) = v120 - v129 - 959846245 - ((2 * (v120 - v129)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8448) = v108 ^ v119;
  LODWORD(v72) = *(_DWORD *)(v3 + 9148);
  *(_DWORD *)(v3 + 8360) = v72 ^ v119;
  LODWORD(v119) = v72 ^ 0xC6C9E89B;
  LODWORD(v72) = *(_DWORD *)(v3 + 8752);
  LODWORD(v127) = (_DWORD)v72 + v119;
  LODWORD(v119) = *(_DWORD *)(v3 + 9296);
  *(_DWORD *)(v3 + 8280) = v72 ^ v119;
  *(_DWORD *)(v3 + 9072) = v119 + v131 - 959846245 - ((2 * (v119 + v131)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 9172) + 1;
  LODWORD(v131) = *(_DWORD *)(v3 + 9408);
  *(_DWORD *)(v3 + 8880) = (v131 ^ 0xC6C9E89B) - v119 - 959846245 - ((2 * ((v131 ^ 0xC6C9E89B) - v119)) & 0x8D93D136);
  LODWORD(v132) = *(_DWORD *)(v3 + 9152);
  *(_DWORD *)(v3 + 8612) = v119 + v132 - 959846245 - ((2 * (v119 + v132)) & 0x8D93D136);
  LODWORD(v12) = *(_DWORD *)(v3 + 8872);
  LODWORD(v117) = *(_DWORD *)(v3 + 9096);
  *(_DWORD *)(v3 + 8384) = (v12 ^ 0xC6C9E89B)
                         + (_DWORD)v117
                         - 959846245
                         - ((2 * ((v12 ^ 0xC6C9E89B) + (_DWORD)v117)) & 0x8D93D136);
  LODWORD(v72) = *(_DWORD *)(v3 + 9056) + 1;
  LODWORD(v119) = *(_DWORD *)(v3 + 8912);
  *(_DWORD *)(v3 + 8400) = v94 ^ v119;
  LODWORD(v135) = v119 - v123;
  LODWORD(v123) = v123 ^ v72;
  LODWORD(v119) = *(_DWORD *)(v3 + 9400);
  LODWORD(v121) = (_DWORD)v72 - v119;
  *(_DWORD *)(v3 + 8440) = v119 - v120 - 959846245 - ((2 * (v119 - v120)) & 0x8D93D136);
  LODWORD(v94) = *(_DWORD *)(v3 + 9368);
  LODWORD(v108) = *(_DWORD *)(v3 + 9432);
  *(_DWORD *)(v3 + 8832) = (v94 ^ 0xC6C9E89B)
                         - v108
                         - 959846245
                         - ((2 * ((v94 ^ 0xC6C9E89B) - v108)) & 0x8D93D136);
  LODWORD(v120) = *(_DWORD *)(v3 + 9080);
  *(_DWORD *)(v3 + 8408) = v132
                         + (v120 ^ 0x39361764)
                         - 959846244
                         - ((2 * (v132 + (v120 ^ 0x39361764) + 1)) & 0x8D93D136);
  LODWORD(v111) = *(_DWORD *)(v3 + 9384);
  LODWORD(v119) = *(_DWORD *)(v3 + 9064);
  v160 = (_DWORD)v111 - v119 - 959846245 - ((2 * ((_DWORD)v111 - v119)) & 0x8D93D136);
  LODWORD(v129) = v134 ^ v129;
  *(_DWORD *)(v3 + 8848) = (v124 ^ 0xC6C9E89B) + v119 - 959846245 - ((2 * ((v124 ^ 0xC6C9E89B) + v119)) & 0x8D93D136);
  LODWORD(v12) = v130
               + (v12 ^ 0x39361764)
               - 959846244
               - ((2 * (v130 + (v12 ^ 0x39361764) + 1)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8304) = v124 ^ v94;
  LODWORD(v124) = *(_DWORD *)(v3 + 8688);
  LODWORD(v94) = *(_DWORD *)(v3 + 9424);
  *(_DWORD *)(v3 + 8344) = (_DWORD)v94
                         + (v124 ^ 0x39361764)
                         - 959846244
                         - ((2 * ((_DWORD)v94 + (v124 ^ 0x39361764) + 1)) & 0x8D93D136);
  LODWORD(v132) = *(_DWORD *)(v3 + 8512);
  *(_DWORD *)(v3 + 9368) = v122 - v132 - 959846245 - ((2 * (v122 - v132)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8352) = (v120 ^ 0xC6C9E89B)
                         + *(_DWORD *)(v3 + 9688)
                         - 959846245
                         - ((2 * ((v120 ^ 0xC6C9E89B) + *(_DWORD *)(v3 + 9688))) & 0x8D93D136);
  LODWORD(v72) = *(_DWORD *)(v3 + 9376);
  v161 = v117 ^ v72;
  *(_DWORD *)(v3 + 8744) = v161;
  LODWORD(v134) = (v131 ^ 0x39361764) + (_DWORD)v72;
  LODWORD(v131) = v159 + 1;
  v162 = *(_DWORD *)(v3 + 9288);
  *(_DWORD *)(v3 + 8800) = v162 + v131 - 959846245 - ((2 * (v162 + v131)) & 0x8D93D136);
  LODWORD(v119) = *(_DWORD *)(v3 + 9184) + 1;
  LODWORD(v130) = v119 ^ v108;
  *(_DWORD *)(v3 + 8664) = (_DWORD)v94 + v119 - 959846245 - ((2 * ((_DWORD)v94 + v119)) & 0x8D93D136);
  LODWORD(v96) = *(_DWORD *)(v3 + 8332);
  *(_DWORD *)(v3 + 9064) = (_DWORD)v96 + v122 - 959846245 - ((2 * ((_DWORD)v96 + v122)) & 0x8D93D136);
  LODWORD(v119) = v125 ^ v156;
  LODWORD(v94) = *(_DWORD *)(v3 + 8308);
  *(_DWORD *)(v3 + 9024) = (_DWORD)v125
                         + v155
                         - (_DWORD)v94
                         - 959846245
                         - ((2 * ((_DWORD)v125 + v155 - (_DWORD)v94)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8520) = v158;
  *(_DWORD *)(v3 + 8864) = (_DWORD)v94 + v158 - 959846245 - ((2 * ((_DWORD)v94 + v158)) & 0x8D93D136);
  LODWORD(v122) = *(_DWORD *)(v3 + 8328);
  v163 = *(_DWORD *)(v3 + 8300);
  *(_DWORD *)(v3 + 8572) = v122 + v163 - 959846245 - ((2 * (v122 + v163)) & 0x8D93D136);
  LODWORD(v72) = v121 - ((2 * v121 - 652922360) & 0x8D93D136) + 861176223;
  v164 = *(_DWORD *)(v3 + 8288);
  *(_DWORD *)(v3 + 9408) = ((_DWORD)v111 + v164) ^ v132;
  *(_DWORD *)(v3 + 8720) = (_DWORD)v111 + v164 - v131 - 959846245 - ((2 * ((_DWORD)v111 + v164 - v131)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8512) = (_DWORD)v127;
  LODWORD(v108) = *(_DWORD *)(v3 + 8392);
  *(_DWORD *)(v3 + 9184) = (_DWORD)v127 - v108 - 959846245 - ((2 * ((_DWORD)v127 - v108)) & 0x8D93D136);
  LODWORD(v131) = *(_DWORD *)(v3 + 8680);
  *(_DWORD *)(v3 + 8776) = v162 - v131 - 959846245 - ((2 * (v162 - v131)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8912) = v108 ^ v96;
  *(_DWORD *)(v3 + 8752) = v131 ^ v135;
  LODWORD(v108) = *(_DWORD *)(v3 + 8272);
  *(_DWORD *)(v3 + 9424) = v108 ^ v135;
  *(_DWORD *)(v3 + 9400) = ((_DWORD)v134 + 1) ^ v163;
  *(_DWORD *)(v3 + 9152) = v108 - ((_DWORD)v134 + 1) - 959846245 - ((2 * (v108 - ((_DWORD)v134 + 1))) & 0x8D93D136);
  *(_DWORD *)(v3 + 9288) = v122 - v129 - 959846245 - ((2 * (v122 - v129)) & 0x8D93D136);
  LODWORD(v94) = v123 - (*(_DWORD *)(v3 + 9568) ^ *(_DWORD *)(v3 + 9616));
  *(_DWORD *)(v3 + 9376) = (_DWORD)v94 - 959846245 - ((2 * (_DWORD)v94) & 0x8D93D136);
  LODWORD(v132) = *(_DWORD *)(v3 + 8712);
  *(_DWORD *)(v3 + 9296) = (v125 ^ v156)
                         + (v132 ^ 0xC6C9E89B)
                         - 959846245
                         - ((2 * ((v125 ^ v156) + (v132 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v72) = (v72 ^ 0xC6C9E89B) - 1821022468;
  LODWORD(v94) = *(_DWORD *)(v3 + 8736) ^ 0xC6C9E89B;
  LODWORD(v131) = *(_DWORD *)(v3 + 9304);
  *(_DWORD *)(v3 + 9264) = (v131 ^ 0xC6C9E89B) + (_DWORD)v94;
  LODWORD(v108) = *(_DWORD *)(v3 + 8784);
  *(_DWORD *)(v3 + 9172) = (_DWORD)v94 + v108 - 959846245 - ((2 * ((_DWORD)v94 + v108)) & 0x8D93D136);
  LODWORD(v125) = *(_DWORD *)(v3 + 8260);
  *(_DWORD *)(v3 + 9432) = v131 ^ v125;
  LODWORD(v96) = *(_DWORD *)(v3 + 9012);
  *(_DWORD *)(v3 + 8760) = v129 ^ 0xC6C9E89B ^ v96;
  *(_DWORD *)(v3 + 9012) = (v125 ^ 0xC6C9E89B) + (v96 ^ 0xC6C9E89B);
  LODWORD(v125) = *(_DWORD *)(v3 + 8456);
  *(_DWORD *)(v3 + 9148) = (v125 ^ 0x39361764) + (v12 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8860) = v123 ^ v72;
  *(_DWORD *)(v3 + 9056) = v132 ^ v72;
  LODWORD(v131) = *(_DWORD *)(v3 + 8356);
  LODWORD(v94) = *(_DWORD *)(v3 + 8264) - 778701110;
  LODWORD(v72) = (v94 ^ 0xD195F6CA) + (v131 ^ 0xC6C9E89B) + ((2 * v131) ^ 0x726C2EC9) + 1;
  *(_DWORD *)(v3 + 8328) = (_DWORD)v72 - 959846245 - ((2 * (_DWORD)v72) & 0x8D93D136);
  *(_DWORD *)(v3 + 9384) = (v160 ^ 0xC6C9E89B) + v130;
  *(_DWORD *)(v3 + 9304) = v119 ^ v130;
  LODWORD(v130) = *(_DWORD *)(v3 + 8480);
  *(_DWORD *)(v3 + 8300) = v130 ^ v108;
  LODWORD(v72) = *(_DWORD *)(v3 + 9040);
  *(_DWORD *)(v3 + 8680) = (_DWORD)v72 + (v160 ^ 0x39361764);
  LODWORD(v96) = *(_DWORD *)(v3 + 9016);
  *(_DWORD *)(v3 + 9040) = v72 ^ v96;
  LODWORD(v72) = *(_DWORD *)(v3 + 8888);
  *(_DWORD *)(v3 + 8712) = v72 ^ v96;
  LODWORD(v96) = *(_DWORD *)(v3 + 8748);
  *(_DWORD *)(v3 + 9016) = v72 ^ v96;
  LODWORD(v119) = *(_DWORD *)(v3 + 8464);
  v165 = v96 ^ v119;
  *(_DWORD *)(v3 + 8748) = v130
                         + (v119 ^ 0x39361764)
                         - 959846244
                         - ((2 * (v130 + (v119 ^ 0x39361764) + 1)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8888) = (*(_DWORD *)(v3 + 9544) ^ 0xC6C9E89B) + (v12 ^ 0x39361764);
  LODWORD(v119) = v94 ^ 0x2E6A0935;
  LODWORD(v94) = *(_DWORD *)(v3 + 8488);
  *(_DWORD *)(v3 + 9080) = (v94 ^ 0xC6C9E89B)
                         + v119
                         - 959846244
                         - ((2 * ((v94 ^ 0xC6C9E89B) + v119 + 1)) & 0x8D93D136);
  LODWORD(v96) = *(_DWORD *)(v3 + 8320);
  *(_DWORD *)(v3 + 8736) = (v96 ^ 0xC6C9E89B) + (v125 ^ 0xC6C9E89B);
  LODWORD(v72) = *(_DWORD *)(v3 + 8376);
  *(_DWORD *)(v3 + 8392) = v96 ^ v72;
  *(_DWORD *)(v3 + 8320) = (v94 ^ 0x39361764)
                         + (v72 ^ 0xC6C9E89B)
                         + 1
                         + *(_DWORD *)(v3 + 9208)
                         + ~((2 * ((v94 ^ 0x39361764) + (v72 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  LODWORD(v108) = *(_DWORD *)(v3 + 8672);
  *(_DWORD *)(v3 + 8872) = (v108 ^ 0x39361764)
                         + (v124 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v108 ^ 0x39361764) + (v124 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  LODWORD(v125) = *(_DWORD *)(v3 + 8496);
  LODWORD(v132) = *(_DWORD *)(v3 + 8312);
  *(_DWORD *)(v3 + 9096) = (v132 ^ 0x39361764) + (v125 ^ 0xC6C9E89B);
  LODWORD(v134) = *(_DWORD *)(v3 + 8656);
  LODWORD(v72) = *(_DWORD *)(v3 + 8904);
  *(_DWORD *)(v3 + 8308) = (_DWORD)v72 + (v134 ^ 0xC6C9E89B);
  v166 = *(_DWORD *)(v3 + 8900);
  *(_DWORD *)(v3 + 8904) = (v166 ^ 0x39361764) + (_DWORD)v72;
  LODWORD(v72) = *(_DWORD *)(v3 + 9128);
  v167 = *(_DWORD *)(v3 + 8368) ^ v72;
  LODWORD(v119) = *(_DWORD *)(v3 + 9120);
  v168 = v119 ^ *(_DWORD *)(v3 + 8992);
  LODWORD(v94) = *(_DWORD *)(v3 + 9328);
  LODWORD(v119) = v119 ^ v94;
  v169 = v94 ^ v72 ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 9328) = v125 ^ v108;
  *(_DWORD *)(v3 + 8992) = v131 ^ v124;
  *(_DWORD *)(v3 + 8672) = v119 + (v132 ^ 0xC6C9E89B);
  LODWORD(v131) = *(_DWORD *)(v3 + 8424);
  v170 = (v131 ^ 0x39361764) + v119;
  v171 = *(_DWORD *)(v3 + 8964);
  v172 = *(_DWORD *)(v3 + 8704);
  *(_DWORD *)(v3 + 8456) = (v172 ^ 0x39361764) + (v171 ^ 0xC6C9E89B);
  v173 = *(_DWORD *)(v3 + 8416) ^ *(_DWORD *)(v3 + 9552);
  LODWORD(v96) = *(_DWORD *)(v3 + 8648);
  *(_DWORD *)(v3 + 8784) = v96 ^ v131;
  *(_DWORD *)(v3 + 9120) = v134 ^ v96;
  LODWORD(v96) = *(_DWORD *)(v3 + 8472) ^ 0xC6C9E89B;
  LODWORD(v134) = *(_DWORD *)(v3 + 8728);
  *(_DWORD *)(v3 + 8312) = (v134 ^ 0xA6872F50) + (_DWORD)v96;
  *(_DWORD *)(v3 + 8464) = (_DWORD)v96 + (*(_DWORD *)(v3 + 9600) ^ 0xC6C9E89B);
  v174 = *(_DWORD *)(v3 + 8840);
  *(_DWORD *)(v3 + 9128) = v134 ^ 0x9FB13834 ^ v174;
  v175 = *(_DWORD *)(v3 + 8280);
  v176 = v175 & 0x20;
  if ((v175 & 0x20 & v174) != 0)
    v176 = -v176;
  *(_DWORD *)(v3 + 8900) = (v166 ^ 0xC6C9E89B) + (v171 ^ 0x39361764);
  *(_DWORD *)(v3 + 8840) = (v176 + (v174 ^ 0xC6C9E89B)) ^ v175 & 0xFFFFFFDF;
  v177 = *(_DWORD *)(v3 + 8792) + 1501089967;
  *(_DWORD *)(v3 + 8648) = v169 + (v172 ^ 0xC6C9E89B);
  v178 = v173 + v169;
  *(_DWORD *)(v3 + 8656) = v161 ^ 0x5978D0AF ^ v177;
  v179 = *(_DWORD *)(v3 + 8304);
  *(_DWORD *)(v3 + 9552) = v173 ^ v179;
  *(_DWORD *)(v3 + 8704) = v179 + (v177 ^ 0xA6872F50);
  v180 = *(_DWORD *)(v3 + 8360);
  v181 = *(_DWORD *)(v3 + 8536);
  *(_DWORD *)(v3 + 8356) = (v180 ^ 0xC6C9E89B) + (v181 ^ 0x39361764);
  v182 = *(_DWORD *)(v3 + 8432);
  v183 = *(_DWORD *)(v3 + 8616);
  *(_DWORD *)(v3 + 8480) = (v182 ^ 0xC6C9E89B) + (v183 ^ 0x39361764);
  v184 = *(_DWORD *)(v3 + 9320);
  *(_DWORD *)(v3 + 8728) = v184 ^ v181;
  v185 = *(_DWORD *)(v3 + 8504);
  *(_DWORD *)(v3 + 8488) = v184 ^ v185;
  v186 = *(_DWORD *)(v3 + 9116);
  v187 = v185 ^ v186 ^ 0xC6C9E89B;
  v188 = *(_DWORD *)(v3 + 8532);
  *(_DWORD *)(v3 + 8536) = (v188 ^ 0x39361764) + v186;
  v189 = v188 ^ 0xC6C9E89B;
  v190 = *(_DWORD *)(v3 + 8400);
  *(_DWORD *)(v3 + 8792) = (v190 ^ 0x39361764) + v189;
  v191 = v190 ^ 0xC6C9E89B;
  v192 = *(_DWORD *)(v3 + 8384);
  *(_DWORD *)(v3 + 8304) = v191 + (v192 ^ 0x39361764);
  v193 = *(_DWORD *)(v3 + 8768);
  *(_DWORD *)(v3 + 8332) = v193 + (v180 ^ 0x39361764);
  v194 = *(_DWORD *)(v3 + 8932);
  *(_DWORD *)(v3 + 8360) = (v194 ^ 0xC6C9E89B) - v193;
  v195 = *(_DWORD *)(v3 + 8868);
  *(_DWORD *)(v3 + 8532) = (v195 ^ 0x39361764) + (v192 ^ 0xC6C9E89B);
  v196 = *(_DWORD *)(v3 + 8344);
  v197 = *(_DWORD *)(v3 + 9136);
  *(_DWORD *)(v3 + 9320) = (v197 ^ 0x39361764)
                         + (v196 ^ 0xC6C9E89B)
                         - 959846244
                         - ((2 * ((v197 ^ 0x39361764) + (v196 ^ 0xC6C9E89B) + 1)) & 0x8D93D136);
  v198 = *(_DWORD *)(v3 + 9280) - 827089437;
  v199 = v195 ^ 0x87A7578 ^ v198;
  *(_DWORD *)(v3 + 8384) = (v182 ^ 0x39361764) + (v198 ^ 0xCEB39DE3);
  v200 = *(_DWORD *)(v3 + 9008);
  *(_DWORD *)(v3 + 8964) = v200 ^ v175;
  v201 = *(_DWORD *)(v3 + 8808);
  v202 = v194 ^ v201;
  *(_DWORD *)(v3 + 9280) = v200 ^ v201;
  v203 = *(_DWORD *)(v3 + 9560) ^ *(_DWORD *)(v3 + 9528) ^ 0xC6C9E89B;
  v204 = *(_DWORD *)(v3 + 9156);
  v205 = v204 + (v183 ^ 0xC6C9E89B);
  v206 = *(_DWORD *)(v3 + 8696);
  *(_DWORD *)(v3 + 9008) = v204 ^ v206;
  *(_DWORD *)(v3 + 8432) = v196 ^ v167;
  v207 = *(_DWORD *)(v3 + 8828);
  *(_DWORD *)(v3 + 8808) = v167 ^ v207;
  *(_DWORD *)(v3 + 8368) = (v206 ^ 0xC6C9E89B) + (v207 ^ 0xC6C9E89B);
  v208 = *(_DWORD *)(v3 + 9496);
  *(_DWORD *)(v3 + 8344) = v208 ^ *(_DWORD *)(v3 + 9688);
  v209 = *(_DWORD *)(v3 + 9464);
  v210 = v208 ^ v209;
  v211 = v209 ^ 0xC6C9E89B ^ v164;
  v212 = *(_DWORD *)(v3 + 9192);
  v213 = *(_DWORD *)(v3 + 8816);
  *(_DWORD *)(v3 + 8376) = (v213 ^ 0x39361764) + (v212 ^ 0xC6C9E89B);
  v214 = *(_DWORD *)(v3 + 8448);
  v215 = (v213 ^ 0xC6C9E89B) + (v214 ^ 0xC6C9E89B);
  v216 = *(_DWORD *)(v3 + 9004) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8932) = v216
                         + *(_DWORD *)(v3 + 9536)
                         - 959846245
                         - ((2 * (v216 + *(_DWORD *)(v3 + 9536))) & 0x8D93D136);
  v217 = *(_DWORD *)(v3 + 8440);
  v218 = *(_DWORD *)(v3 + 8408);
  *(_DWORD *)(v3 + 8472) = (v217 ^ 0xC6C9E89B) + (v218 ^ 0x39361764);
  v219 = *(_DWORD *)(v3 + 8832);
  *(_DWORD *)(v3 + 8424) = (*(_DWORD *)(v3 + 9512) ^ 0xC6C9E89B) + (v219 ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8416) = *(_DWORD *)(v3 + 8920) ^ *(_DWORD *)(v3 + 8936);
  v220 = v203 ^ v197;
  v221 = *(_DWORD *)(v3 + 8612);
  v222 = v203 ^ v221;
  *(_DWORD *)(v3 + 8496) = 2 * v222 - 1703556556;
  *(_DWORD *)(v3 + 8504) = v222 + 649311689;
  v223 = *(_DWORD *)(v3 + 9200) - 637691249;
  v224 = (v223 ^ 0x26026570) + (v218 ^ 0xC6C9E89B);
  v225 = *(_DWORD *)(v3 + 9248);
  v226 = v225 ^ v219;
  v227 = *(_DWORD *)(v3 + 8352);
  *(_DWORD *)(v3 + 8696) = (v227 ^ 0x39361764) + (v225 ^ 0xC6C9E89B);
  v228 = v216 + (v223 ^ 0xD9FD9A8F);
  v229 = *(_DWORD *)(v3 + 9224);
  *(_DWORD *)(v3 + 8400) = v229 ^ v214;
  *(_DWORD *)(v3 + 9004) = v229 ^ v217;
  *(_DWORD *)(v3 + 7928) = v178 - ((2 * v178 - 104782862) & 0xA32BED94) + 1316391107;
  *(_DWORD *)(v3 + 8832) = v170 + 1 - ((2 * (v170 + 1) + 76913848) & 0x8D93D136) - 921389321;
  v230 = *(_DWORD *)(v3 + 9520) ^ 0xC6C9E89B;
  v231 = *(_DWORD *)(v3 + 9272);
  *(_DWORD *)(v3 + 8920) = v221 ^ v231;
  v232 = (v231 ^ 0xC6C9E89B) + v230;
  v233 = *(_DWORD *)(v3 + 9104);
  *(_DWORD *)(v3 + 8408) = v230 ^ v233;
  v234 = *(_DWORD *)(v3 + 9472) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8816) = v233 + v234 - ((2 * (v233 + v234) + 142173722) & 0x8D93D136) + 1258724264;
  v235 = v210 ^ v227;
  v236 = *(_DWORD *)(v3 + 8880);
  v237 = v210 ^ v236;
  v238 = *(_DWORD *)(v3 + 8848) ^ 0xC6C9E89B;
  v239 = *(_DWORD *)(v3 + 9176);
  v240 = v236 ^ v239;
  v241 = (v239 ^ 0xC6C9E89B) + v238;
  v242 = *(_DWORD *)(v3 + 9256);
  v243 = v238 ^ v242;
  v244 = v168 ^ v242;
  v245 = *(_DWORD *)(v3 + 9456) ^ 0xC6C9E89B;
  v246 = *(_DWORD *)(v3 + 9312);
  *(_DWORD *)(v3 + 9176) = v168 ^ v246;
  v247 = v246 + v245;
  *(_DWORD *)(v3 + 8828) = v245 + (*(_DWORD *)(v3 + 9608) ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8848) = v165 - ((2 * v165 + 499163394) & 0x8D93D136) + 1437219100;
  *(_DWORD *)(v3 + 9136) = v232 - ((2 * v232 + 1098740588) & 0x8D93D136) - 410475951;
  *(_DWORD *)(v3 + 8868) = v228 - ((2 * v228 + 550605668) & 0x8D93D136) + 1462940237;
  *(_DWORD *)(v3 + 9248) = *(_DWORD *)(v3 + 8300) - ((2 * *(_DWORD *)(v3 + 8300) + 606360194) & 0x8D93D136) - 656666148;
  *(_DWORD *)(v3 + 8880) = (*(_DWORD *)(v3 + 8328) ^ 0xC6C9E89B)
                         - ((2 * (*(_DWORD *)(v3 + 8328) ^ 0xC6C9E89B) - 967435988) & 0x8D93D136)
                         - 1443564239;
  v248 = v234 + v211;
  v249 = v211;
  v250 = ((v234 + v211) & 0x99BD0688 ^ 0x99BD0688)
       + ((v234 + v211) & 0x99BD0688)
       + (*(_DWORD *)(v3 + 8800) ^ 0xC6C9E89B);
  *(_DWORD *)(v3 + 8448) = v250 - ((2 * v250) & 0x9D673BC6);
  *(_DWORD *)(v3 + 8688) = v187 - ((2 * v187 - 218002290) & 0x8D93D136) - 1068847390;
  *(_DWORD *)(v3 + 8936) = *(_DWORD *)(v3 + 8752) - ((2 * *(_DWORD *)(v3 + 8752) + 663836216) & 0x8D93D136) - 627928137;
  *(_DWORD *)(v3 + 9200) = (*(_DWORD *)(v3 + 8320) ^ 0xC6C9E89B)
                         - ((2 * (*(_DWORD *)(v3 + 8320) ^ 0xC6C9E89B) + 292824370) & 0x8D93D136)
                         + 1334049588;
  *(_DWORD *)(v3 + 8440) = v241 - ((2 * v241 - 483235470) & 0x8D93D136) - 1201463980;
  *(_DWORD *)(v3 + 8768) = v199 - ((2 * v199 + 1196999020) & 0x8D93D136) - 361346735;
  *(_DWORD *)(v3 + 8800) = *(_DWORD *)(v3 + 8308) - ((2 * *(_DWORD *)(v3 + 8308) + 766651716) & 0x8D93D136) + 1570963261;
  *(_DWORD *)(v3 + 9256) = v220 - ((2 * v220 + 852718526) & 0x8D93D136) + 1613996666;
  *(_DWORD *)(v3 + 9224) = (*(_DWORD *)(v3 + 8776) ^ 0xC6C9E89B)
                         - ((2 * (*(_DWORD *)(v3 + 8776) ^ 0xC6C9E89B) + 262783826) & 0x8D93D136)
                         + 1319029316;
  *(_DWORD *)(v3 + 9528) = *(_DWORD *)(v3 + 8760)
                         - ((2 * *(_DWORD *)(v3 + 8760) + 1982853576) & 0x8D93D136)
                         - 2115903105;
  *(_DWORD *)(v3 + 9272) = v244 - ((2 * v244 + 677332284) & 0x8D93D136) + 1526303545;
  *(_DWORD *)(v3 + 9520) = *(_DWORD *)(v3 + 8312)
                         + 1
                         - ((2 * (*(_DWORD *)(v3 + 8312) + 1) + 851182824) & 0x8D93D136)
                         + 1613228815;
  *(_DWORD *)(v3 + 9116) = *(_DWORD *)(v3 + 8912)
                         - ((2 * *(_DWORD *)(v3 + 8912) - 1170912774) & 0x8D93D136)
                         - 1545302632;
  *(_DWORD *)(v3 + 9496) = v205 - ((2 * v205 - 1397963474) & 0x8D93D136) - 1658827982;
  v251 = *(_DWORD *)(v3 + 9488) ^ 0xC6C9E89B;
  v252 = *(_DWORD *)(v3 + 9416);
  v253 = v212 ^ v252;
  *(_DWORD *)(v3 + 8760) = v251
                         + (v252 ^ 0xC6C9E89B)
                         - 2
                         * ((v251 + (v252 ^ 0xC6C9E89B) + 668242816) & 0x46C9E89F ^ (v251 + (v252 ^ 0xC6C9E89B)) & 4)
                         - 291603429;
  *(_DWORD *)(v3 + 9688) = v247 - ((2 * v247 + 540730294) & 0x8D93D136) + 1458002550;
  *(_DWORD *)(v3 + 8752) = *(_DWORD *)(v3 + 9424) - ((2 * *(_DWORD *)(v3 + 9424) - 726678798) & 0x8D93D136) - 1323185644;
  *(_DWORD *)(v3 + 9156) = v215 - ((2 * v215 - 62562168) & 0x8D93D136) - 991127329;
  *(_DWORD *)(v3 + 8748) = (*(_DWORD *)(v3 + 8748) ^ 0xC6C9E89B)
                         - ((2 * (*(_DWORD *)(v3 + 8748) ^ 0xC6C9E89B) + 1793867164) & 0x8D93D136)
                         + 2084570985;
  *(_DWORD *)(v3 + 9104) = v202 - ((2 * v202 + 1868557018) & 0x8D93D136) - 25567736;
  *(_DWORD *)(v3 + 8616) = *(_DWORD *)(v3 + 8304)
                         + 1
                         - ((2 * (*(_DWORD *)(v3 + 8304) + 1) - 299045418) & 0x8D93D136)
                         - 1109368954;
  v254 = *(_DWORD *)(v3 + 8764);
  *(_DWORD *)(v3 + 8612) = (v254 ^ *(_DWORD *)(v3 + 9616))
                         - ((2 * (v254 ^ *(_DWORD *)(v3 + 9616)) - 1700558778) & 0x8D93D136)
                         - 1810125634;
  *(_DWORD *)(v3 + 9312) = *(_DWORD *)(v3 + 8392)
                         - ((2 * *(_DWORD *)(v3 + 8392) - 1966228156) & 0x8D93D136)
                         - 1942960323;
  *(_DWORD *)(v3 + 8912) = *(_DWORD *)(v3 + 8356)
                         + 1
                         - ((2 * (*(_DWORD *)(v3 + 8356) + 1) - 604058092) & 0x8D93D136)
                         - 1261875291;
  *(_DWORD *)(v3 + 9488) = (*(_DWORD *)(v3 + 9152) ^ 0xC6C9E89B)
                         - ((2 * (*(_DWORD *)(v3 + 9152) ^ 0xC6C9E89B) - 2072145474) & 0x8D93D136)
                         + 151564666;
  *(_DWORD *)(v3 + 9472) = *(_DWORD *)(v3 + 9128) - ((2 * *(_DWORD *)(v3 + 9128) - 1415843090) & 0x8D93D136) + 479715858;
  *(_DWORD *)(v3 + 8776) = v235 - ((2 * v235 + 304328786) & 0x8D93D136) + 1339801796;
  *(_DWORD *)(v3 + 9152) = *(_DWORD *)(v3 + 8332)
                         + 1
                         - ((2 * (*(_DWORD *)(v3 + 8332) + 1) + 2058173406) & 0x8D93D136)
                         - 2078243190;
  *(_DWORD *)(v3 + 9148) = *(_DWORD *)(v3 + 9148)
                         + 1
                         - ((2 * (*(_DWORD *)(v3 + 9148) + 1) - 927765654) & 0x8D93D136)
                         - 1423729072;
  *(_DWORD *)(v3 + 9464) = v224 + 1 - ((2 * (v224 + 1) - 743396474) & 0x8D93D136) - 1331544482;
  *(_DWORD *)(v3 + 9416) = (*(_DWORD *)(v3 + 9376) ^ 0xC6C9E89B)
                         - ((2 * (*(_DWORD *)(v3 + 9376) ^ 0xC6C9E89B) + 236400088) & 0x8D93D136)
                         - 841646201;
  *(_DWORD *)(v3 + 9128) = *(_DWORD *)(v3 + 9552) - ((2 * *(_DWORD *)(v3 + 9552) + 147464108) & 0x8D93D136) + 1261369457;
  *(_DWORD *)(v3 + 9552) = *(_DWORD *)(v3 + 8904)
                         + 1
                         - ((2 * (*(_DWORD *)(v3 + 8904) + 1) - 695346726) & 0x8D93D136)
                         - 1307519608;
  v255 = *(_DWORD *)(v3 + 9480);
  v256 = v255 ^ *(_DWORD *)(v3 + 9600);
  v257 = *(_DWORD *)(v3 + 8344);
  *(_DWORD *)(v3 + 9600) = (v255 ^ 0x39361764)
                         + v257
                         + 1
                         - 2
                         * (((v255 ^ 0x39361764) + v257 + 1486007873) & 0x46C9E89F ^ ((v255 ^ 0x39361764) + v257 + 1) & 4)
                         + 526161627;
  *(_DWORD *)(v3 + 9456) = *(_DWORD *)(v3 + 8360)
                         - ((2 * *(_DWORD *)(v3 + 8360) - 1197961302) & 0x8D93D136)
                         - 1558826896;
  *(_DWORD *)(v3 + 8904) = v237 - ((2 * v237 + 268301322) & 0x3B8BD3DA) + 1170531314;
  v258 = *(_DWORD *)(v3 + 8456) + 1 - ((2 * (*(_DWORD *)(v3 + 8456) + 1) + 1993861818) & 0x8D93D136) - 2110398984;
  *(_DWORD *)(v3 + 9192) = *(_DWORD *)(v3 + 8384)
                         + 1
                         - ((2 * (*(_DWORD *)(v3 + 8384) + 1) + 713729190) & 0x8D93D136)
                         + 1544501998;
  v259 = *(_DWORD *)(v3 + 9392);
  *(_DWORD *)(v3 + 9560) = v259 + v251 - ((2 * (v259 + v251) - 24212728) & 0x8D93D136) - 971952609;
  *(_DWORD *)(v3 + 9480) = v256 - ((2 * v256 - 156200602) & 0x8D93D136) - 1037946546;
  v260 = (*(_DWORD *)(v3 + 9080) ^ 0xC6C9E89B)
       - ((2 * (*(_DWORD *)(v3 + 9080) ^ 0xC6C9E89B) + 34417900) & 0x8D93D136)
       + 1204846353;
  *(_DWORD *)(v3 + 9376) = *(_DWORD *)(v3 + 9408)
                         - ((2 * *(_DWORD *)(v3 + 9408) + 1280669156) & 0x8D93D136)
                         + 1827971981;
  v261 = *(_DWORD *)(v3 + 9448);
  *(_DWORD *)(v3 + 8384) = *(_DWORD *)(v3 + 9512) ^ v261;
  v262 = *(_DWORD *)(v3 + 8664);
  *(_DWORD *)(v3 + 9448) = (v261 ^ v262) - ((2 * (v261 ^ v262) + 1881692264) & 0x8D93D136) + 2128483535;
  v263 = *(_DWORD *)(v3 + 9304) - ((2 * *(_DWORD *)(v3 + 9304) + 552375454) & 0x8D93D136) + 1463825130;
  *(_DWORD *)(v3 + 9304) = *(_DWORD *)(v3 + 8704)
                         + 1
                         - 2 * ((*(_DWORD *)(v3 + 8704) + 64315489) & 0x46C9E89F ^ (*(_DWORD *)(v3 + 8704) + 1) & 4)
                         + 1251952891;
  *(_DWORD *)(v3 + 8704) = v240 - ((2 * v240 + 205880350) & 0x8D93D136) - 856906070;
  v264 = *(_DWORD *)(v3 + 8368) - ((2 * *(_DWORD *)(v3 + 8368) + 1701721768) & 0x8D93D136) + 2038498287;
  *(_DWORD *)(v3 + 9408) = *(_DWORD *)(v3 + 8656) - ((2 * *(_DWORD *)(v3 + 8656) - 55489208) & 0x8D93D136) - 987590849;
  v265 = *(_DWORD *)(v3 + 8376) + 1 - ((2 * (*(_DWORD *)(v3 + 8376) + 1) - 1987998306) & 0x8D93D136) + 193638250;
  *(_DWORD *)(v3 + 8456) = v259 + 1964025535 + v249;
  *(_DWORD *)(v3 + 9096) = *(_DWORD *)(v3 + 9096)
                         + 1
                         - 2 * ((*(_DWORD *)(v3 + 9096) + 1392033489) & 0x46C9E89F ^ (*(_DWORD *)(v3 + 9096) + 1) & 4)
                         + 432187243;
  *(_DWORD *)(v3 + 9080) = v226 - 2 * ((v226 + 792828824) & 0x46C9E89F ^ v226 & 4) + 1980466227;
  v266 = (*(_DWORD *)(v3 + 9296) ^ 0xC6C9E89B)
       - ((2 * (*(_DWORD *)(v3 + 9296) ^ 0xC6C9E89B) - 1110012200) & 0x8D93D136)
       + 632631303;
  *(_DWORD *)(v3 + 9296) = *(_DWORD *)(v3 + 8680)
                         + 1
                         - ((2 * (*(_DWORD *)(v3 + 8680) + 1) - 1916213572) & 0x8D93D136)
                         + 229530617;
  *(_DWORD *)(v3 + 8656) = v248 - ((2 * v248 + 854835560) & 0x8D93D136) + 1615055183;
  v267 = (*(_DWORD *)(v3 + 9184) ^ 0xC6C9E89B)
       - ((2 * (*(_DWORD *)(v3 + 9184) ^ 0xC6C9E89B) - 813267496) & 0x8D93D136)
       + 781003655;
  *(_DWORD *)(v3 + 9184) = v267;
  v268 = *(_DWORD *)(v3 + 8648) - ((2 * *(_DWORD *)(v3 + 8648) - 1646913062) & 0x8D93D136) + 364180872;
  *(_DWORD *)(v3 + 9392) = *(_DWORD *)(v3 + 8712)
                         - 2 * ((*(_DWORD *)(v3 + 8712) + 61923176) & 0x46C9E89F ^ *(_DWORD *)(v3 + 8712) & 4)
                         - 897923069;
  *(_DWORD *)(v3 + 9512) = *(_DWORD *)(v3 + 8400) - ((2 * *(_DWORD *)(v3 + 8400) - 3104276) & 0x8D93D136) + 1186085265;
  *(_DWORD *)(v3 + 8680) = (*(_DWORD *)(v3 + 9288) ^ 0xC6C9E89B)
                         - ((2 * (*(_DWORD *)(v3 + 9288) ^ 0xC6C9E89B) - 1073899784) & 0x8D93D136)
                         - 1496796137;
  *(_DWORD *)(v3 + 8648) = *(_DWORD *)(v3 + 8736)
                         - 2 * ((*(_DWORD *)(v3 + 8736) + 851019904) & 0x46C9E89F ^ *(_DWORD *)(v3 + 8736) & 4)
                         - 108826341;
  *(_DWORD *)(v3 + 9288) = *(_DWORD *)(v3 + 8432) - ((2 * *(_DWORD *)(v3 + 8432) + 1064628664) & 0x8D93D136) - 427531913;
  v269 = *(_DWORD *)(v3 + 8672) - ((2 * *(_DWORD *)(v3 + 8672) + 666596504) & 0x8D93D136) + 1520935655;
  *(_DWORD *)(v3 + 8672) = v243 - ((2 * v243 + 2061557894) & 0x8D93D136) - 2076550946;
  v270 = v254 ^ 0xC6C9E89B ^ *(_DWORD *)(v3 + 9568) ^ *(_DWORD *)(v3 + 9544);
  *(_DWORD *)(v3 + 9616) = v270 - ((2 * v270 + 612673898) & 0x8D93D136) - 653509296;
  v271 = *(_DWORD *)(v3 + 8416);
  v272 = v271 + (v262 ^ 0xC6C9E89B);
  v273 = *(_DWORD *)(v3 + 9536) + 1736300894 + v271;
  *(_DWORD *)(v3 + 8332) = v273;
  *(_DWORD *)(v3 + 8664) = (*(_DWORD *)(v3 + 9172) ^ 0xC6C9E89B) - 1596348544;
  *(_DWORD *)(v3 + 8356) = (*(_DWORD *)(v3 + 9368) ^ 0xC6C9E89B) + 242254878;
  *(_DWORD *)(v3 + 9544) = *(_DWORD *)(v3 + 8464) - ((2 * *(_DWORD *)(v3 + 8464) + 693828358) & 0x8D93D136) + 1534551582;
  *(_DWORD *)(v3 + 9568) = v253 - ((2 * v253 + 1545585848) & 0x8D93D136) + 1960430327;
  v274 = *(_DWORD *)(v3 + 8424) - ((2 * *(_DWORD *)(v3 + 8424) - 1484362712) & 0x8D93D136) + 445456047;
  *(_DWORD *)(v3 + 9172) = v274;
  v275 = *(_DWORD *)(v3 + 8860);
  v276 = v275 - ((2 * v275 - 754610058) & 0x8D93D136) + 810332374;
  *(_DWORD *)(v3 + 9536) = v276;
  *(_DWORD *)(v3 + 9368) = *(_DWORD *)(v3 + 8784)
                         - ((2 * *(_DWORD *)(v3 + 8784) - 1459628642) & 0x8D93D136)
                         - 1689660566;
  v277 = -1770178620 - v275;
  v278 = v276 & 0xA636D2D1 ^ 0x8600C091;
  v279 = *(_DWORD *)(v3 + 8408) - ((2 * *(_DWORD *)(v3 + 8408) + 636608050) & 0x8D93D136) - 641542220;
  *(_DWORD *)(v3 + 8368) = v279;
  v280 = v272 - ((2 * v272 - 766800970) & 0x8D93D136) + 804236918;
  v281 = *(_DWORD *)(v3 + 9264) - ((2 * *(_DWORD *)(v3 + 9264) - 565335594) & 0x8D93D136) - 1242514042;
  *(_DWORD *)(v3 + 9264) = v281;
  v282 = *(_DWORD *)(v3 + 9072);
  *(_DWORD *)(v3 + 8736) = v282 ^ *(_DWORD *)(v3 + 8744);
  v283 = *(_DWORD *)(v3 + 9360) ^ 0xC6C9E89B;
  v284 = v283 + (v282 ^ 0xC6C9E89B);
  v285 = v278
       + (v277 & 0xA636D2D1)
       + v283
       + v257
       - 959846245
       - ((2 * (v278 + (v277 & 0xA636D2D1) + v283 + v257)) & 0x8D93D136);
  *(_DWORD *)(v3 + 8328) = v285;
  v286 = *(_DWORD *)(v3 + 8488) - ((2 * *(_DWORD *)(v3 + 8488) + 1554881724) & 0x8D93D136) - 182405383;
  *(_DWORD *)(v3 + 9072) = v286;
  v287 = (*(_DWORD *)(v3 + 9064) ^ 0xC6C9E89B)
       - ((2 * (*(_DWORD *)(v3 + 9064) ^ 0xC6C9E89B) - 221278786) & 0x8D93D136)
       - 1070485638;
  *(_DWORD *)(v3 + 9064) = v287;
  v288 = ((2 * *(_DWORD *)(v3 + 9056)) & 0x9DFC8BBE ^ 0x8D908136) + (*(_DWORD *)(v3 + 9056) ^ 0x8837AD44);
  *(_DWORD *)(v3 + 8320) = v288;
  *(_DWORD *)(v3 + 9056) = (*(_DWORD *)(v3 + 8888) + 1) ^ 0x9525E1F5;
  v289 = (v267 ^ 0x39361764) - v272 + *(_DWORD *)(v3 + 9424) - 1440221921;
  v290 = *(_DWORD *)(v3 + 9024) ^ 0x4A7E1E79;
  *(_DWORD *)(v3 + 8488) = v290;
  v291 = (*(_DWORD *)(v3 + 9400) ^ 0x3D8B9CEF) + (v290 ^ (v289 - 959846245 - ((2 * v289) & 0x8D93D136)));
  v292 = *(_DWORD *)(v3 + 8612);
  v293 = (v292 ^ 0xC6C9E89B)
       + (*(_DWORD *)(v3 + 9224) ^ 0x39361764)
       + ((v291 + (v266 ^ 0x39361764) - 959846243 - ((2 * (v291 + (v266 ^ 0x39361764) + 2)) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9272))
       + 1;
  v294 = *(_DWORD *)(v3 + 8800);
  v295 = (v294 ^ 0x39361764) + ((v293 - 959846245 - ((2 * v293) & 0x8D93D136)) ^ v264) + 1;
  v296 = *(_DWORD *)(v3 + 8688) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8432) = v296;
  v297 = ((v295 - 959846245 - ((2 * v295) & 0x8D93D136)) ^ v263) + v296;
  v298 = (v297 - 959846245 - ((2 * v297) & 0x8D93D136)) ^ v258;
  v299 = *(_DWORD *)(v3 + 9012);
  v300 = *(_DWORD *)(v3 + 8448) - 827089437;
  v301 = (v268 ^ 0x39361764)
       + (v299 ^ 0x4D502370)
       + (v265 ^ 0xC6C9E89B)
       + (v260 ^ 0xC6C9E89B)
       + ((v298 - ((2 * v298) & 0x9D673BC6) - 827089437) ^ v300)
       + 1;
  v302 = *(_DWORD *)(v3 + 8900) + 1;
  *(_DWORD *)(v3 + 8464) = (v302 ^ 0xD95F5827) + ((v301 - 959846245 - ((2 * v301) & 0x8D93D136)) ^ v269);
  *(_DWORD *)(v3 + 9424) = v300;
  v303 = (v300 ^ *(_DWORD *)(v3 + 8848) ^ 0x87A7578)
       - 959846245
       - 2 * ((v300 ^ *(_DWORD *)(v3 + 8848) ^ 0x87A7578) & 0x46C9E89F ^ (v300 ^ *(_DWORD *)(v3 + 8848)) & 4);
  v304 = *(_DWORD *)(v3 + 8964) ^ 0x7DA84918;
  *(_DWORD *)(v3 + 9360) = v304;
  v305 = ((v303 ^ v304) - ((2 * (v303 ^ v304)) & 0xA32BED94) - 778701110) ^ *(_DWORD *)(v3 + 7928);
  v306 = *(_DWORD *)(v3 + 8868) ^ (v305 - 959846245 - ((2 * v305) & 0x8D93D136));
  v307 = (v306 - 959846245 - ((2 * v306) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9432);
  v308 = ((v307 ^ 0xC6C9E89B) - 959846245 - 2 * ((v307 ^ 0xC6C9E89B) & 0x46C9E89F ^ v307 & 4)) ^ *(_DWORD *)(v3 + 9116);
  v309 = (v308 - 959846245 - ((2 * v308) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9496);
  v310 = (v309 - 959846245 - ((2 * v309) & 0x8D93D136)) ^ v294;
  v311 = (v310 - 959846245 - ((2 * v310) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9552);
  v312 = (v311 - 959846245 - ((2 * v311) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9472);
  v313 = (v312 - 959846245 - ((2 * v312) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9456);
  v314 = (v313 - 959846245 - ((2 * v313) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9192);
  v315 = (v314 - 959846245 - ((2 * v314) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9520);
  v316 = (v315 - 959846245 - ((2 * v315) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9104);
  v317 = (v316 - 959846245 - ((2 * v316) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9688);
  v318 = (v317 - 959846245 - ((2 * v317) & 0x8D93D136)) ^ v292;
  v319 = *(_DWORD *)(v3 + 8992) ^ 0x6D7C9213;
  *(_DWORD *)(v3 + 8712) = v319;
  v320 = (v318 - 959846245 - ((2 * v318) & 0x8D93D136)) ^ v319;
  *(_DWORD *)(v3 + 8744) = v264;
  v321 = (v320 - 959846245 - ((2 * v320) & 0x8D93D136)) ^ v264;
  *(_DWORD *)(v3 + 8888) = v265;
  v322 = (v321 - 959846245 - ((2 * v321) & 0x8D93D136)) ^ v265;
  v323 = (v322 - 959846245 - ((2 * v322) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9408);
  v324 = (v323 - 959846245 - ((2 * v323) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9148);
  v325 = (v324 - 959846245 - ((2 * v324) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9560);
  v326 = (v325 - 959846245 - ((2 * v325) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9080);
  v327 = (v326 - 959846245 - ((2 * v326) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9152);
  v328 = *(_DWORD *)(v3 + 8920) ^ 0x201F3DCF;
  *(_DWORD *)(v3 + 8376) = v328;
  v329 = (v327 - 959846245 - ((2 * v327) & 0x8D93D136)) ^ v328;
  v330 = (v329 - 959846245 - ((2 * v329) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9448);
  v331 = (v330 - 959846245 - ((2 * v330) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9128);
  v332 = (v331 - 959846245 - ((2 * v331) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9376);
  *(_DWORD *)(v3 + 8900) = v260;
  v333 = (v332 - 959846245 - ((2 * v332) & 0x8D93D136)) ^ v260;
  v334 = v299 ^ 0x8B99CBEB ^ (v333 - 959846245 - ((2 * v333) & 0x8D93D136));
  v335 = (v334 - 959846245 - ((2 * v334) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8656);
  v336 = *(_DWORD *)(v3 + 8864);
  *(_DWORD *)(v3 + 8352) = v336 ^ 0xEB4D1872;
  v337 = (v335 - 959846245 - ((2 * v335) & 0x8D93D136)) ^ v336;
  *(_DWORD *)(v3 + 8864) = v263;
  v338 = (v337 - 959846245 - ((2 * v337) & 0x8D93D136)) ^ v263;
  *(_DWORD *)(v3 + 8860) = v266;
  v339 = (v338 - 959846245 - ((2 * v338) & 0x8D93D136)) ^ v266;
  *(_DWORD *)(v3 + 8784) = v269;
  v340 = (v339 - 959846245 - ((2 * v339) & 0x8D93D136)) ^ v269;
  v341 = *(_DWORD *)(v3 + 8648) ^ v273 ^ (v340 - 959846245 - ((2 * v340) & 0x8D93D136));
  v342 = (v341 - 959846245 - ((2 * v341) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9512);
  v343 = (v342 - 959846245 - ((2 * v342) & 0x8D93D136)) ^ v274;
  v344 = *(_DWORD *)(v3 + 9036) ^ *(_DWORD *)(v3 + 9160);
  v345 = v288 ^ *(_DWORD *)(v3 + 8828);
  *(_DWORD *)(v3 + 7920) = v344;
  v346 = v344 ^ v345 ^ 0xB9C3E395 ^ (v343 - ((2 * v343) & 0xFE14161C) + 2131364622);
  v347 = (v346 - 959846245 - ((2 * v346) & 0x8D93D136)) ^ v286;
  v348 = (v347 - 959846245 - ((2 * v347) & 0x8D93D136)) ^ v281;
  *(_DWORD *)(v3 + 8764) = v280;
  v349 = (v348 - 959846245 - ((2 * v348) & 0x8D93D136)) ^ v280;
  v350 = (v349 - 959846245 - ((2 * v349) & 0x8D93D136)) ^ v279;
  v351 = *(_DWORD *)(v3 + 9368) ^ *(_DWORD *)(v3 + 8808) ^ (v350 - 959846245 - ((2 * v350) & 0x8D93D136));
  v352 = *(_DWORD *)(v3 + 8872) ^ 0x9CE1AAE6 ^ (v351 - 959846245 - ((2 * v351) & 0x8D93D136));
  v353 = (v352 - 959846245 - ((2 * v352) & 0x8D93D136)) ^ v285;
  v354 = *(_DWORD *)(v3 + 9328) ^ 0xB3D02AC;
  *(_DWORD *)(v3 + 8416) = v354;
  v355 = (v353 - 959846245 - ((2 * v353) & 0x8D93D136)) ^ v354;
  v356 = *(_DWORD *)(v3 + 8728);
  *(_DWORD *)(v3 + 8344) = v356 ^ 0x4B4B8147;
  v357 = v356 ^ v287 ^ (v355 - 959846245 - ((2 * v355) & 0x8D93D136));
  v358 = (v357 - 959846245 - ((2 * v357) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9568);
  *(_DWORD *)(v3 + 8308) = v284 ^ 0xF07D0B73;
  v359 = v284 ^ *(_DWORD *)(v3 + 9544) ^ (v358 - 959846245 - ((2 * v358) & 0x8D93D136));
  v360 = (v359 - 959846245 - ((2 * v359) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9616);
  v361 = (v360 - 959846245 - ((2 * v360) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9536);
  v362 = (v361 - 959846245 - ((2 * v361) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8680);
  v363 = *(_DWORD *)(v3 + 8696) + 1;
  *(_DWORD *)(v3 + 8360) = v363;
  v364 = v363 ^ 0xA1F3DF3C ^ (v362 - 959846245 - ((2 * v362) & 0x8D93D136));
  v365 = (v364 - 959846245 - ((2 * v364) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9608);
  v366 = (v365 - 959846245 - ((2 * v365) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8672);
  v367 = *(_DWORD *)(v3 + 9384) ^ 0x4EFA1DAA;
  *(_DWORD *)(v3 + 8408) = v367;
  v368 = *(_DWORD *)(v3 + 8664) ^ v367 ^ (v366 - 959846245 - ((2 * v366) & 0x8D93D136));
  v369 = *(_DWORD *)(v3 + 8792) + 1;
  *(_DWORD *)(v3 + 8696) = v369;
  *(_DWORD *)(v3 + 8392) = v369 ^ 0x822E6EB4;
  v370 = (v368 - 959846245 - ((2 * v368) & 0x8D93D136)) ^ v369 ^ 0x822E6EB4;
  v371 = *(_DWORD *)(v3 + 8720) ^ 0x7D6123C ^ (v370 - 959846245 - ((2 * v370) & 0x8D93D136));
  v372 = *(_DWORD *)(v3 + 9208);
  v373 = (v371 + v372 + ~((2 * v371) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9288);
  v374 = *(_DWORD *)(v3 + 8840) ^ 0xAB3E69DA ^ (v373 - 959846245 - ((2 * v373) & 0x8D93D136));
  v375 = (v374 - 959846245 - ((2 * v374) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9392);
  v376 = *(_DWORD *)(v3 + 8456);
  *(_DWORD *)(v3 + 8300) = (*(_DWORD *)(v3 + 8464) + 1) ^ v376;
  *(_DWORD *)(v3 + 8792) = v268;
  v377 = v376 ^ v268 ^ (v375 - 959846245 - ((2 * v375) & 0x8D93D136));
  v378 = *(_DWORD *)(v3 + 9176) ^ 0x38133397;
  *(_DWORD *)(v3 + 8728) = v378;
  v379 = (v377 - 959846245 - ((2 * v377) & 0x8D93D136)) ^ v378;
  v380 = (v379 - 959846245 - ((2 * v379) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8704);
  v381 = (v380 - 959846245 - ((2 * v380) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9416);
  v382 = (v381 - 959846245 - ((2 * v381) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9296);
  v383 = (v382 - 959846245 - ((2 * v382) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9304);
  v384 = *(_DWORD *)(v3 + 8572) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8312) = v384;
  v385 = *(_DWORD *)(v3 + 8384);
  v386 = *(_DWORD *)(v3 + 8356);
  v387 = (v384 - 1500270127) ^ v386 ^ (v385 + 427929381) ^ *(_DWORD *)(v3 + 9184) ^ (v383
                                                                                   - 959846245
                                                                                   - ((2 * v383) & 0x8D93D136));
  v388 = (v387 - 959846245 - ((2 * v387) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9096);
  v389 = *(_DWORD *)(v3 + 9040) ^ 0x946CA9A7;
  *(_DWORD *)(v3 + 9036) = v389;
  v390 = (v388 - 959846245 - ((2 * v388) & 0x8D93D136)) ^ v389;
  v391 = (v390 - 959846245 - ((2 * v390) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9320);
  v392 = *(_DWORD *)(v3 + 8532) + 1;
  *(_DWORD *)(v3 + 8448) = v392;
  *(_DWORD *)(v3 + 8304) = v392 ^ 0xEB0B347B;
  v393 = (v391 - 959846245 - ((2 * v391) & 0x8D93D136)) ^ v392 ^ 0xEB0B347B;
  v394 = (v393 - 959846245 - ((2 * v393) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9480);
  v395 = *(_DWORD *)(v3 + 8776);
  v396 = (v394 - 959846245 - ((2 * v394) & 0x8D93D136)) ^ v395;
  v397 = (v396 - 959846245 - ((2 * v396) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9464);
  v398 = *(_DWORD *)(v3 + 9312);
  v399 = (v397 - 959846245 - ((2 * v397) & 0x8D93D136)) ^ v398;
  *(_DWORD *)(v3 + 8532) = v258;
  v400 = (v399 - 959846245 - ((2 * v399) & 0x8D93D136)) ^ v258;
  v401 = *(_DWORD *)(v3 + 9400) ^ 0x4BD8B8B;
  *(_DWORD *)(v3 + 8424) = v401;
  v402 = (v400 - 959846245 - ((2 * v400) & 0x8D93D136)) ^ v401;
  v403 = (v402 - 959846245 - ((2 * v402) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8488);
  v404 = *(_DWORD *)(v3 + 8904);
  v405 = (v403 - ((2 * v403) & 0x3B8BD3DA) - 1647973907) ^ v404;
  v406 = (v405 - 959846245 - ((2 * v405) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9600);
  v407 = (v406 - 959846245 - ((2 * v406) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9272);
  v408 = (v407 - 959846245 - ((2 * v407) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9528);
  v409 = (v408 - 959846245 - ((2 * v408) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9488);
  v410 = (v409 - 959846245 - ((2 * v409) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8752);
  v411 = (v410 - 959846245 - ((2 * v410) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9224);
  v412 = *(_DWORD *)(v3 + 8932) ^ 0xFE1A9749;
  v413 = (v411 - 959846245 - ((2 * v411) & 0x8D93D136)) ^ v412;
  v414 = (v413 - 959846245 - ((2 * v413) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9056);
  *(_DWORD *)(v3 + 8488) = v302;
  v415 = v302 ^ *(_DWORD *)(v3 + 9156) ^ (v414 - 959846245 - ((2 * v414) & 0x8D93D136));
  v416 = *(_DWORD *)(v3 + 8912);
  v417 = (v415 - 959846245 - ((2 * v415) & 0x8D93D136)) ^ v416;
  v418 = *(_DWORD *)(v3 + 8616);
  v419 = (v417 - 959846245 - ((2 * v417) & 0x8D93D136)) ^ v418;
  v420 = *(_DWORD *)(v3 + 9280) ^ 0x79122C35 ^ (v419 - 959846245 - ((2 * v419) & 0x8D93D136));
  v421 = *(_DWORD *)(v3 + 9248);
  v422 = (v420 - 959846245 - ((2 * v420) & 0x8D93D136)) ^ v421;
  v423 = *(_DWORD *)(v3 + 8748);
  v424 = (v422 - 959846245 - ((2 * v422) & 0x8D93D136)) ^ v423;
  v425 = *(_DWORD *)(v3 + 8472) + 1;
  *(_DWORD *)(v3 + 8464) = v425;
  v426 = v425 ^ 0x86565D2C;
  v427 = (v424 - 959846245 - ((2 * v424) & 0x8D93D136)) ^ v425 ^ 0x86565D2C;
  v428 = *(_DWORD *)(v3 + 8736) ^ 0xE62956F0;
  v429 = (v427 - 959846245 - ((2 * v427) & 0x8D93D136)) ^ v428;
  v430 = *(_DWORD *)(v3 + 9004);
  v431 = v430 ^ 0x76AE18D6 ^ (v429 - 959846245 - ((2 * v429) & 0x8D93D136));
  v432 = (v431 - 959846245 - ((2 * v431) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9200);
  v433 = *(_DWORD *)(v3 + 8936);
  v434 = (v432 - 959846245 - ((2 * v432) & 0x8D93D136)) ^ v433;
  v435 = (v434 - 959846245 - ((2 * v434) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9256);
  v436 = *(_DWORD *)(v3 + 8480) + 1;
  *(_DWORD *)(v3 + 8456) = v436;
  v437 = v436 ^ 0xD53C2718;
  v438 = (v435 - 959846245 - ((2 * v435) & 0x8D93D136)) ^ v436 ^ 0xD53C2718;
  v439 = *(_DWORD *)(v3 + 8760);
  v440 = (v438 - 959846245 - ((2 * v438) & 0x8D93D136)) ^ v439;
  v441 = *(_DWORD *)(v3 + 9008);
  v442 = v441 ^ 0xF3BEEF12 ^ (v440 + v372 + ~((2 * v440) & 0x8D93D136));
  v443 = *(_DWORD *)(v3 + 9016) ^ 0x5126593C;
  v444 = (v442 - 959846245 - ((2 * v442) & 0x8D93D136)) ^ v443;
  v445 = *(_DWORD *)(v3 + 9120);
  *(_DWORD *)(v3 + 8400) = v445 ^ 0xC1913E8E;
  v446 = (v444 - 959846245 - ((2 * v444) & 0x8D93D136)) ^ v445 ^ 0xC1913E8E;
  v447 = *(_DWORD *)(v3 + 8768);
  v448 = (v446 - 959846245 - ((2 * v446) & 0x8D93D136)) ^ v447;
  v449 = *(_DWORD *)(v3 + 8440);
  v450 = (v448 - 959846245 - ((2 * v448) & 0x8D93D136)) ^ v449;
  v451 = (v450 - 959846245 - ((2 * v450) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8688);
  v452 = *(_DWORD *)(v3 + 8536) + 1;
  *(_DWORD *)(v3 + 8572) = v452 ^ 0x766B4539;
  v453 = (v451 - 959846245 - ((2 * v451) & 0x8D93D136)) ^ v452 ^ 0x766B4539;
  v454 = (v453 - 959846245 - ((2 * v453) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9136);
  v455 = *(_DWORD *)(v3 + 8880);
  v456 = (v454 - 959846245 - ((2 * v454) & 0x8D93D136)) ^ v455;
  *(_DWORD *)(v3 + 8688) = v456 - 959846245 - ((2 * v456) & 0x8D93D136);
  v457 = *(_DWORD *)(v3 + 8308) + (v445 ^ 0xF8A729EA) + (v416 ^ 0x39361764);
  v458 = *(_DWORD *)(v3 + 7928) ^ 0xD195F6CA;
  *(_DWORD *)(v3 + 8536) = v458;
  v459 = ((v421 ^ 0x39361764) + (v430 ^ 0xB067F04D) + v458 + v457 + *(_DWORD *)(v3 + 8300) + 4) ^ v386;
  v460 = (*(_DWORD *)(v3 + 9116) ^ 0xC6C9E89B)
       + (*(_DWORD *)(v3 + 9616) ^ 0xC6C9E89B)
       + ((v459 - 959846245 - ((2 * v459) & 0x8D93D136)) ^ v426);
  v461 = (*(_DWORD *)(v3 + 9104) ^ 0xC6C9E89B)
       + (*(_DWORD *)(v3 + 9688) ^ 0x39361764)
       + ((v460 - 959846245 - ((2 * v460) & 0x8D93D136)) ^ v423)
       + 1;
  v462 = (v461 - 959846245 - ((2 * v461) & 0x8D93D136)) ^ v398;
  v463 = -427929381
       - v385
       + (v395 ^ 0x39361764)
       + ((v462 - 959846245 - ((2 * v462) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9536))
       + 1;
  v464 = (v463 - 959846245 - ((2 * v463) & 0x8D93D136)) ^ v447;
  v465 = ((v464 + v372 + ~((2 * v464) & 0x8D93D136)) ^ v412) + (*(_DWORD *)(v3 + 9296) ^ 0xC6C9E89B);
  v466 = *(_DWORD *)(v3 + 8816);
  v467 = (*(_DWORD *)(v3 + 8320) ^ *(_DWORD *)(v3 + 8332) ^ ((v466 ^ 0x39361764)
                                                           + ((v465 - 959846245 - ((2 * v465) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9496))
                                                           + 1))
       + (v404 ^ 0x9DC5E9ED);
  v468 = *(_DWORD *)(v3 + 9192) ^ 0x39361764;
  *(_DWORD *)(v3 + 8480) = v449 ^ 0xC6C9E89B;
  v469 = (v449 ^ 0xC6C9E89B) + v468 + ((v467 - 959846245 - ((2 * v467) & 0x8D93D136)) ^ v455) + 1;
  v470 = (*(_DWORD *)(v3 + 9072) ^ 0xC6C9E89B)
       + *(_DWORD *)(v3 + 8352)
       + (*(_DWORD *)(v3 + 8664) ^ v428 ^ (v469 - 959846245 - ((2 * v469) & 0x8D93D136)))
       + 1;
  v471 = ((v470 - 959846245 - ((2 * v470) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8304))
       + (*(_DWORD *)(v3 + 9432) ^ 0xF46A35BB);
  v472 = (*(_DWORD *)(v3 + 9328) ^ 0x320B15C8)
       + ((v471 - 959846245 - ((2 * v471) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9392))
       + 1;
  v473 = (*(_DWORD *)(v3 + 9472) ^ 0x39361764)
       + (*(_DWORD *)(v3 + 8328) ^ 0x39361764)
       + (*(_DWORD *)(v3 + 9544) ^ *(_DWORD *)(v3 + 8712) ^ 0xC6C9E89B ^ (v472 - 959846245 - ((2 * v472) & 0x8D93D136)))
       + 2;
  v474 = (*(_DWORD *)(v3 + 8720) ^ 0xC11FFAA7)
       + (v418 ^ 0x39361764)
       + ((v473 - 959846245 - ((2 * v473) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9520))
       + 1;
  v475 = (*(_DWORD *)(v3 + 9152) ^ 0x39361764)
       + (*(_DWORD *)(v3 + 8808) ^ 0xD51B989F)
       + (*(_DWORD *)(v3 + 9128) ^ 0x39361764)
       + (*(_DWORD *)(v3 + 9376) ^ 0xC6C9E89B)
       + (*(_DWORD *)(v3 + 9600) ^ 0x39361764)
       + (*(_DWORD *)(v3 + 9304) ^ 0xC6C9E89B)
       + *(_DWORD *)(v3 + 8344)
       + (*(_DWORD *)(v3 + 9264) ^ 0x39361764)
       + ((v474 - 959846245 - ((2 * v474) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9560))
       + 4;
  v476 = *(_DWORD *)(v3 + 8828) ^ 0x2B1B3BB7 ^ (((v475 - 959846245 - ((2 * v475) & 0x8D93D136)) ^ v439)
                                              + (*(_DWORD *)(v3 + 9552) ^ 0xC6C9E89B));
  v477 = (v441 ^ 0xCA88F876) + ((v476 - 959846245 - ((2 * v476) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9368)) + 1;
  v478 = (v433 ^ 0x39361764) + ((v477 - 959846245 - ((2 * v477) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9464)) + 1;
  v479 = (v478 - 959846245 - ((2 * v478) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9172);
  v480 = 1500270127
       - *(_DWORD *)(v3 + 8312)
       + (*(_DWORD *)(v3 + 8696) ^ 0x44E7862F)
       + (*(_DWORD *)(v3 + 9568) ^ 0xC6C9E89B)
       + ((v479 - 959846245 - ((2 * v479) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9416));
  v481 = (v480 - 959846245 - ((2 * v480) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8672);
  v482 = (v481 - 959846245 - ((2 * v481) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9320);
  v483 = (*(_DWORD *)(v3 + 9156) ^ 0xB9030621 ^ (v482 - 959846245 - ((2 * v482) & 0x8D93D136)))
       + (*(_DWORD *)(v3 + 9288) ^ 0xC6C9E89B);
  v484 = (v483 - 959846245 - ((2 * v483) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8376);
  v485 = (*(_DWORD *)(v3 + 8964) ^ 0x449E5E7C)
       + (*(_DWORD *)(v3 + 9148) ^ 0x39361764)
       + (*(_DWORD *)(v3 + 8648) ^ 0xC6C9E89B)
       + ((v484 - 959846245 - ((2 * v484) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9408))
       + 2;
  v486 = (*(_DWORD *)(v3 + 9384) ^ 0x77CC0ACE)
       + (*(_DWORD *)(v3 + 9280) ^ 0xBFDBC4AE)
       + ((v485 + v372 + ~((2 * v485) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9080))
       + 1;
  v487 = (v486 - 959846245 - ((2 * v486) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9608);
  v488 = (*(_DWORD *)(v3 + 9480) ^ 0xC6C9E89B)
       + (*(_DWORD *)(v3 + 9512) ^ 0xC6C9E89B)
       + (*(_DWORD *)(v3 + 9456) ^ 0xB7D598C2 ^ (v487 + v372 + ~((2 * v487) & 0x8D93D136)));
  v489 = (*(_DWORD *)(v3 + 8840) ^ 0x92087EBE)
       + (*(_DWORD *)(v3 + 9176) ^ 0xFEDADB0C)
       + (v452 ^ 0x4F5D525D)
       + (*(_DWORD *)(v3 + 9096) ^ 0xC6C9E89B)
       + ((v488 - 959846245 - ((2 * v488) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9488))
       + 2;
  v490 = (*(_DWORD *)(v3 + 8872) ^ 0x5A28427D) + (*(_DWORD *)(v3 + 8368) ^ 0xC6C9E89B);
  v491 = *(_DWORD *)(v3 + 8848) ^ 0xC6C9E89B;
  *(_DWORD *)(v3 + 8664) = v491;
  v492 = v490 + v491 + ((v489 - 959846245 - ((2 * v489) & 0x8D93D136)) ^ v437);
  v493 = (*(_DWORD *)(v3 + 9136) ^ 0x39361764)
       + (*(_DWORD *)(v3 + 9448) ^ 0x39361764)
       + (*(_DWORD *)(v3 + 8360) ^ 0x673A37A7);
  v494 = *(_DWORD *)(v3 + 8868) ^ 0xC6C9E89B;
  v495 = *(_DWORD *)(v3 + 8704) ^ 0x39361764;
  *(_DWORD *)(v3 + 8472) = v494;
  v496 = v493 + v494 + v495 + ((v492 - 959846245 - ((2 * v492) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9036)) + 3;
  *(_DWORD *)(v3 + 8872) = v443;
  v497 = (*(_DWORD *)(v3 + 9064) ^ 0x39361764) + ((v496 - 959846245 - ((2 * v496) & 0x8D93D136)) ^ v443) + 1;
  v498 = (v497 - 959846245 - ((2 * v497) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 8680);
  v499 = (v498 - 959846245 - ((2 * v498) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9256);
  v500 = (v499 - 959846245 - ((2 * v499) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9528);
  *(_DWORD *)(v3 + 8828) = ((*(_DWORD *)(v3 + 9200) ^ 0x39361764)
                          + ((v500 - 959846245 - ((2 * v500) & 0x8D93D136)) ^ *(_DWORD *)(v3 + 9056))
                          + 1) ^ *(_DWORD *)(v3 + 8656);
  v501 = *(_DWORD *)(v3 + 8544);
  v502 = (*(_DWORD *)(v3 + 9160) ^ 0xC6C9E89B) + (v501 ^ 0x64F56E94);
  v503 = *(_DWORD *)(v3 + 8560);
  v504 = *(_DWORD *)(v3 + 8552);
  *(_DWORD *)(v3 + 9608) = v504 ^ v503;
  v505 = v504 ^ ~v503;
  v506 = v501 ^ 0x3FCB2256;
  *(_DWORD *)(v3 + 9208) = *(_DWORD *)(v3 + 8496) & 0xB2F1A15E;
  v507 = *(_DWORD *)(v3 + 8688) ^ v466;
  *(_DWORD *)(v3 + 9160) = (2 * v507) & 0x8D93D136;
  *(_DWORD *)(v3 + 8868) = v507 - 959846245;
  v508 = *(_DWORD *)(v3 + 6504) ^ 0xE3;
  v509 = v502 - ((2 * v502) & 0xF1FEDA2C) + 2030005526;
  *(_DWORD *)(v3 + 8964) = *(_DWORD *)(v3 + 9504) ^ 0x19B633DA;
  *(_QWORD *)(v3 + 7952) = *(_DWORD *)(v3 + 8980) ^ 0xFD6F5AEE;
  v510 = *(_DWORD *)(v3 + 9696);
  *(_DWORD *)(v3 + 7864) = v510 ^ 0x1E52;
  *(_DWORD *)(v3 + 6468) = v509;
  v511 = v509 ^ *(_DWORD *)(v3 + 8576);
  *(_DWORD *)(v3 + 8848) = *(_DWORD *)(v3 + 9052) ^ 0x99999999;
  v512 = *(_QWORD *)(v3 + 9704);
  v513 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 9592) + (((v508 & 0xC6C9E800) + 190) & ((v510 ^ 0x1E52) - 4627) ^ 0x9DLL));
  v514 = ((v513 >> 1) | (v513 << 7)) ^ (32 * ((v513 >> 1) | (v513 << 7))) ^ (16 * ((v513 >> 1) | (v513 << 7))) ^ 0x41;
  v515 = ((unint64_t)((((v514 & 0xFC) >> 1) | ((_BYTE)v514 << 7)) & *(_DWORD *)(v3 + 9656)) >> *(_QWORD *)(v3 + 8968)) | ((unint64_t)(((v514 & 0xFC) >> 1) | ((_BYTE)v514 << 7)) << v512);
  v516 = *((_DWORD *)*(&off_1004ECA20 + (v510 ^ 0xF9B)) + 54);
  v517 = (((v515 - 959846245 - ((2 * v515) & 0x8D93D136)) ^ 0xC6C9E89B)
        - 959846245
        - 2
        * (((v515 - 959846245 - ((2 * v515) & 0x8D93D136)) ^ 0xC6C9E89B) & 0x46C9E89F ^ ((_BYTE)v515
                                                                                       - 101
                                                                                       - ((2 * (_BYTE)v515) & 0x36)
                                                                                       + 24) & 4)) ^ *(_DWORD *)(v3 + 8848);
  v518 = v516 ^ 0x62A0D689 ^ (676653154 * (v516 ^ 0xF0CBF15D)) ^ (2
                                                                * ((v516 ^ 0x62A0D689 ^ (676653154 * (v516 ^ 0xF0CBF15D))) & *(_DWORD *)(v3 + 8964)));
  v519 = ((unint64_t)(v518 & v505) << v512) | ((unint64_t)(v518 & *(_QWORD *)(v3 + 7952)) >> *(_QWORD *)(v3 + 9648));
  v520 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 9624) + (((v517 >> 3) | (32 * (v517 & 7))) ^ 0xBDLL)) ^ 0x7DLL;
  v521 = v506 ^ (v519 - 959846245 - ((2 * v519) & 0x8D93D136));
  *(_DWORD *)(*(_QWORD *)(v3 + 6160) + 4 * v520) = (v521 - 959846245 - ((2 * v521) & 0x8D93D136)) ^ 0xC6C9E89B;
  v522 = *((unsigned __int16 *)*(&off_1004ECA20 + (v510 ^ 0x94B)) + 57) ^ 0x8083;
  v523 = (v522 - 959846245 - ((2 * v522) & 0x1D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(*(_QWORD *)(v3 + 6688)
            + 4
            * (unsigned __int16)(251 * v520 - 260 * ((unsigned __int16)((1012283 * v520) >> 16) >> 4))) = v511 ^ (v523 + 2030005526 - ((2 * v523) & 0x1EDA2C));
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * *(int *)(v3 + 9696))
                                                   - 12))(125, 251);
}

uint64_t sub_10037F5E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  unsigned int v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  int v222;
  unsigned int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  int v231;
  uint64_t v232;
  unint64_t v233;
  int v234;
  uint64_t v235;
  unint64_t v236;
  unint64_t v237;
  int v238;
  uint64_t v239;
  unsigned __int8 *v240;
  char *v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  unint64_t v249;
  unint64_t v250;
  unint64_t v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  int v256;
  unint64_t v257;
  char *v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  unsigned int v262;
  unint64_t v263;
  unint64_t v264;
  unint64_t v265;
  unint64_t v266;
  unsigned int v267;
  unint64_t v268;
  unint64_t v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  uint64_t v283;
  int v284;
  int v285;
  unsigned int v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int v291;
  uint64_t v292;
  int v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  char v297;
  uint64_t v298;
  unsigned int v299;
  unint64_t v300;
  int v301;
  unint64_t v302;
  int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  unint64_t v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unint64_t v311;
  unint64_t v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  int v316;
  int v317;
  int v318;
  uint64_t v319;
  int v320;
  int v321;
  uint64_t v322;
  unsigned int v323;
  int v324;
  int v325;
  unint64_t v326;
  int v327;
  unsigned int v328;
  unint64_t v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  unint64_t v336;
  unint64_t v337;
  int v338;
  unint64_t v339;
  unsigned int v340;
  unsigned int v341;
  unint64_t v342;
  uint64_t v343;
  unint64_t v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unint64_t v349;
  unsigned int v350;
  unint64_t v351;
  unsigned int v352;
  unint64_t v353;
  uint64_t v354;
  int v355;
  int v356;
  int v357;
  unsigned int v358;
  uint64_t v359;
  unint64_t v360;
  int v361;
  int v362;
  int v363;
  unsigned int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  unsigned int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  unsigned int v406;
  int v407;
  int v408;
  unsigned int v409;
  int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  int v447;
  int v448;
  BOOL v449;
  unsigned int v450;
  int v451;
  int v452;
  int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  int v457;
  unsigned int v458;
  int v459;
  int v460;
  int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  unsigned int v466;
  int v467;
  unsigned int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  unsigned int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  int v500;
  unsigned int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  int v509;
  uint64_t v510;
  uint64_t v511;
  unsigned int v512;
  char v513;
  int v514;
  unsigned int v515;
  unsigned int v516;
  unsigned int v517;
  unsigned int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  unsigned int v523;
  unsigned int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  unsigned int v571;
  int v572;
  int v573;
  BOOL v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  int v583;
  int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  int v611;
  unsigned int v612;
  int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  unsigned int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  int v624;
  int v625;
  int v626;
  unsigned int v627;
  unsigned int v628;
  int v629;
  uint64_t v630;
  unsigned int v631;
  unsigned int v632;
  char v633;
  uint64_t v634;
  int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  char v647;
  int v648;
  uint64_t v649;
  int v650;
  int v651;
  unsigned int v652;
  unsigned int v653;
  char v654;
  unsigned int v655;
  int v656;
  unsigned int v657;
  int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  int v663;
  unsigned int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  int v670;
  int v671;
  unsigned int v672;
  unsigned int v673;
  unsigned int v674;
  unsigned int v675;
  uint64_t v676;
  int v677;
  int v678;
  int v679;
  int v680;
  unsigned int v681;
  unsigned int v682;
  unsigned int v683;
  unsigned int v684;
  int v685;
  unsigned int v686;
  int v687;
  unsigned int v688;
  int v689;
  int v690;
  unsigned int v691;
  unsigned int v692;
  unsigned int v693;
  unsigned int v694;
  unsigned int v695;
  unsigned int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  char v700;
  unsigned int v701;
  int v702;
  int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  unsigned int v708;
  unsigned int v709;
  unsigned int v710;
  char v711;
  int v712;
  unsigned int v713;
  int v714;
  char v715;
  unsigned int v716;
  unsigned int v717;
  int v718;
  unsigned int v719;
  uint64_t v720;
  int v721;
  unsigned int v722;
  int v723;
  unsigned int v724;
  int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  BOOL v729;
  unsigned int v730;
  unsigned int v731;
  int v732;
  unsigned int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  int v737;
  int v738;
  int v739;
  uint64_t v740;
  int v741;
  int v742;
  int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  int v750;
  int v751;
  unsigned int v752;
  unsigned int v753;
  unsigned int v754;
  int v755;
  unsigned int v756;
  unsigned int v757;
  int v758;
  unsigned int v759;
  int v760;
  unsigned int v761;
  unsigned int v762;
  unsigned int v763;
  int v764;
  unsigned int v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  int v769;
  unsigned int v770;
  unsigned int v771;
  int v772;
  unsigned int v773;
  unsigned int v774;
  int v775;
  unsigned int v776;
  unsigned int v777;
  int v778;
  unsigned int v779;
  unsigned int v780;
  int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  BOOL v785;
  unsigned int v786;
  unsigned int v787;
  int v788;
  unsigned int v789;
  uint64_t v790;
  int v791;
  unsigned int v792;
  int v793;
  unsigned int v794;
  unsigned int v795;
  unsigned int v796;
  int v797;
  unsigned int v798;
  uint64_t v799;
  char v800;
  int v801;
  unsigned int v802;
  int v803;
  unsigned int v804;
  unsigned int v805;
  int v806;
  unsigned int v807;
  unsigned int v808;
  int v809;
  unsigned int v810;
  int v811;
  unsigned int v812;
  BOOL v813;
  int v814;
  int v815;
  int v816;
  int v817;
  int v818;
  int v819;
  unsigned int v820;
  int v821;
  int v822;
  unsigned int v823;
  int v824;
  int v825;
  unsigned int v826;
  unsigned int v827;
  int v828;
  unsigned int v829;
  int v830;
  unsigned int v831;
  unsigned int v832;
  int v833;
  unsigned int v834;
  unsigned int v835;
  int v836;
  unsigned int v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  unsigned int v841;
  int v842;
  unsigned int v843;
  int v844;
  int v845;
  int v846;
  unsigned int v847;
  unsigned int v848;
  uint64_t v849;
  int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  int v854;
  unsigned int v855;
  unsigned int v856;
  int v857;
  unsigned int v858;
  int v859;
  unsigned int v860;
  int v861;
  int v862;
  unsigned int v863;
  int v864;
  unsigned int v865;
  unsigned int v866;
  int v867;
  unsigned int v868;
  unsigned int v869;
  int v870;
  unsigned int v871;
  unsigned int v872;
  int v873;
  unsigned int v874;
  unsigned int v875;
  int v876;
  unsigned int v877;
  int v878;
  int v879;
  int v880;
  int v881;
  int v882;
  unsigned int v883;
  unsigned int v884;
  unsigned int v885;
  unsigned int v886;
  unsigned int v887;
  int v888;
  unsigned int v889;
  int v890;
  int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  int v897;
  int v898;
  int v899;
  int v900;
  int v901;
  int v902;
  int v903;
  int v904;
  int v905;
  int v906;
  int v907;
  unsigned int v908;
  int v909;
  unint64_t v910;
  int v911;
  unsigned int v912;
  int v913;
  int v914;
  int v915;
  int v916;
  int v917;
  int v918;
  int v919;
  int v920;
  int v921;
  int v922;
  int v923;
  int v924;
  int v925;
  uint64_t v926;
  int v927;
  int v928;
  int v929;
  int v930;
  int v931;
  int v932;
  int v933;
  int v934;
  int v935;
  int v936;
  unsigned int v937;
  int v938;
  int v939;
  int v940;
  unsigned int v941;
  int v942;
  int v943;
  int v944;
  int v945;
  int v946;
  int v947;
  int v948;
  int v949;
  int v950;
  int v951;
  int v952;
  int v953;
  int v954;
  int v955;
  int v956;
  int v957;
  int v958;
  int v959;
  int v960;
  int v961;
  int v962;
  unsigned int v963;
  int v964;
  int v965;
  unsigned int v966;
  int v967;
  unint64_t v968;
  unsigned int v969;
  int v970;
  int v971;
  unsigned int v972;
  unsigned int v973;
  int v974;
  char v975;
  uint64_t v976;
  int v977;
  unsigned int v978;
  unsigned int v979;
  unint64_t v980;
  unsigned int v981;
  int v982;
  int v983;
  int v984;
  unsigned int v985;
  unint64_t v986;
  uint64_t v987;
  int v988;
  int v989;
  unsigned int v990;
  unsigned int v991;
  unsigned int v992;
  unint64_t v993;
  unsigned int v994;
  int v995;
  int v996;
  unint64_t v997;
  int v998;
  int v999;
  int v1000;
  unsigned int v1001;
  int v1002;
  int v1003;
  unsigned int v1004;
  unsigned int v1005;
  unsigned int v1006;
  unsigned int v1007;
  unint64_t v1008;
  int v1009;
  int v1010;
  int v1011;
  uint64_t v1012;
  unsigned int v1013;
  int v1014;
  int v1015;
  unsigned int v1016;
  unsigned int v1017;
  unint64_t v1018;
  int v1019;
  int v1020;
  int v1021;
  unsigned int v1022;
  unint64_t v1023;
  int v1024;
  unint64_t v1025;
  char v1026;
  uint64_t v1027;
  int v1028;
  char v1029;
  int v1030;
  unsigned int v1031;
  unint64_t v1032;
  unint64_t v1033;
  int v1034;
  int v1035;
  unsigned int v1036;
  int v1037;
  uint64_t v1038;
  int v1039;
  unsigned int v1040;
  uint64_t v1041;
  unsigned int v1042;
  int v1043;
  int v1044;
  unsigned int v1045;
  int v1046;
  int v1047;
  int v1048;
  int v1049;
  int v1050;
  int v1051;
  unsigned int v1052;
  int v1053;
  int v1054;
  unsigned int v1055;
  unsigned int v1056;
  unint64_t v1057;
  int v1058;
  unint64_t v1059;
  unint64_t v1060;
  int v1061;
  unint64_t v1062;
  unint64_t v1063;
  uint64_t v1064;
  uint64_t v1065;
  unsigned int v1066;
  unsigned int v1067;
  unint64_t v1068;
  int v1069;
  int v1070;
  int v1071;
  unsigned int v1072;
  unsigned int v1073;
  uint64_t v1074;
  unint64_t v1075;
  int v1076;
  unint64_t v1077;
  unint64_t v1078;
  char v1079;
  int v1080;
  unsigned __int8 v1081;
  char v1082;
  unint64_t v1083;
  int v1084;
  unint64_t v1085;
  int v1086;
  unint64_t v1087;
  int v1088;
  int v1089;
  unsigned int v1090;
  int v1091;
  unsigned int v1092;
  unsigned int v1093;
  int v1094;
  unsigned int v1095;
  unsigned int v1096;
  unsigned int v1097;
  unsigned int v1098;
  unsigned int v1099;
  unsigned int v1100;
  int v1101;
  unsigned int v1102;
  uint64_t v1103;
  int v1104;
  int v1105;
  uint64_t v1106;
  int v1107;
  unsigned int v1108;
  int v1109;
  unsigned int v1110;
  unsigned int v1111;
  unsigned int v1112;
  int v1113;
  unsigned int v1114;
  int v1115;
  unint64_t v1116;
  unsigned int v1117;
  unsigned int v1118;
  unint64_t v1119;
  int v1120;
  unint64_t v1121;
  uint64_t v1122;
  unint64_t v1123;
  unint64_t v1124;
  int v1125;
  int v1126;
  int v1127;
  int v1128;
  int v1129;
  unsigned int v1130;
  int v1131;
  int v1132;
  unsigned int v1133;
  unint64_t v1134;
  uint64_t v1135;
  unint64_t v1136;
  int v1137;
  unsigned int v1138;
  unsigned int v1139;
  unint64_t v1140;
  int v1141;
  unint64_t v1142;
  unint64_t v1143;
  uint64_t v1144;
  unint64_t v1145;
  unsigned int v1146;
  unint64_t v1147;
  unint64_t v1148;
  uint64_t v1149;
  int v1150;
  unsigned int v1151;
  int v1152;
  unint64_t v1153;
  unsigned int v1154;
  int v1155;
  uint64_t v1156;
  unint64_t v1157;
  unint64_t v1158;
  uint64_t v1159;
  unsigned int v1160;
  int v1161;
  uint64_t v1162;
  unint64_t v1163;
  unint64_t v1164;
  unint64_t v1165;
  unint64_t v1166;
  unint64_t v1167;
  int v1168;
  uint64_t v1169;
  unint64_t v1170;
  uint64_t v1171;
  unint64_t v1172;
  unint64_t v1173;
  uint64_t v1174;
  int v1175;
  unint64_t v1176;
  unint64_t v1177;
  unint64_t v1178;
  uint64_t v1179;
  unint64_t v1180;
  int v1181;
  char v1182;
  unint64_t v1183;
  unint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  unint64_t v1187;
  unint64_t v1188;
  int v1189;
  int v1190;
  int v1191;
  uint64_t v1192;
  uint64_t v1193;
  int v1194;
  int v1195;
  int v1196;
  int v1197;
  uint64_t v1198;
  uint64_t v1199;
  int v1200;
  int v1201;
  int v1202;
  int v1203;
  int v1204;
  int v1205;
  unint64_t v1206;
  unint64_t v1207;
  uint64_t v1208;
  int v1209;
  unsigned int v1210;
  int v1211;
  unsigned int v1212;
  unsigned int v1213;
  int v1214;
  unsigned int v1215;
  int v1216;
  unsigned int v1217;
  unsigned int v1218;
  int v1219;
  unsigned int v1220;
  int v1221;
  unsigned int v1222;
  unsigned int v1223;
  uint64_t v1224;
  int v1225;
  unsigned int v1226;
  unsigned int v1227;
  int v1228;
  int v1229;
  unsigned int v1230;
  int v1231;
  unsigned int v1232;
  int v1233;
  unint64_t v1234;
  int v1235;
  int v1236;
  unsigned int v1237;
  int v1238;
  unsigned int v1239;
  int v1240;
  unsigned int v1241;
  unsigned int v1242;
  char v1243;
  int v1244;
  unsigned int v1245;
  unsigned int v1246;
  char v1247;
  int v1248;
  unsigned int v1249;
  int v1250;
  unsigned int v1251;
  unsigned int v1252;
  int v1253;
  unsigned int v1254;
  unsigned int v1255;
  unsigned int v1256;
  char v1257;
  int v1258;
  unsigned int v1259;
  unsigned int v1260;
  int v1261;
  unsigned int v1262;
  unsigned int v1263;
  int v1264;
  unsigned int v1265;
  unsigned int v1266;
  unint64_t v1267;
  char v1268;
  int v1269;
  unsigned int v1270;
  unsigned int v1271;
  int v1272;
  unint64_t v1273;
  int v1274;
  unsigned int v1275;
  int v1276;
  unint64_t v1277;
  int v1278;
  unsigned int v1279;
  int v1280;
  unsigned int v1281;
  int v1282;
  int v1283;
  unsigned int v1284;
  int v1285;
  unsigned int v1286;
  unsigned int v1287;
  int v1288;
  unsigned int v1289;
  uint64_t v1290;
  int v1291;
  int v1292;
  int v1293;
  uint64_t v1294;
  unsigned int v1295;
  int v1296;
  int v1297;
  int v1298;
  uint64_t v1299;
  int v1300;
  int v1301;
  unsigned int v1302;
  int v1303;
  int v1304;
  int v1305;
  int v1306;
  unsigned int v1307;
  int v1308;
  unsigned int v1309;
  int v1310;
  unsigned int v1311;
  unint64_t v1312;
  int v1313;
  unsigned int v1314;
  unsigned int v1315;
  uint64_t v1316;
  uint64_t v1317;
  unint64_t v1318;
  int v1319;
  int v1320;
  int v1321;
  int v1322;
  int v1323;
  uint64_t v1324;
  int v1325;
  unint64_t v1326;
  char v1327;
  uint64_t v1328;
  int v1329;
  int v1330;
  int v1331;
  int v1332;
  unsigned int v1333;
  unsigned int v1334;
  uint64_t v1335;
  uint64_t v1336;
  uint64_t v1337;
  int v1338;
  int v1339;
  int v1340;
  unsigned int v1341;
  unsigned int v1342;
  unint64_t v1343;
  unsigned int v1344;
  unsigned int v1345;
  uint64_t v1346;
  unsigned int v1347;
  unsigned int v1348;
  uint64_t v1349;
  int v1350;
  unsigned int v1351;
  uint64_t v1352;
  unint64_t v1353;
  int v1354;
  int v1355;
  uint64_t v1356;
  int v1357;
  unsigned int v1358;
  unsigned int v1359;
  unsigned int v1360;
  uint64_t v1361;
  unsigned int v1362;
  unsigned int v1363;
  int v1364;
  int v1365;
  int v1366;
  int v1367;
  int v1368;
  unsigned int v1369;
  int v1370;
  unsigned int v1371;
  unsigned int v1372;
  int v1373;
  int v1374;
  unint64_t v1375;
  char v1376;
  uint64_t v1377;
  uint64_t v1378;
  unsigned int v1379;
  unsigned int v1380;
  int v1381;
  unsigned int v1382;
  unsigned int v1383;
  unsigned int v1384;
  unint64_t v1385;
  char v1386;
  int v1387;
  unsigned int v1388;
  unsigned int v1389;
  unint64_t v1390;
  int v1391;
  int v1392;
  int v1393;
  unsigned int v1394;
  int v1395;
  unint64_t v1396;
  int v1397;
  unsigned int v1398;
  unsigned int v1399;
  unint64_t v1400;
  int v1401;
  uint64_t v1402;
  int v1403;
  unsigned int v1404;
  unint64_t v1405;
  unsigned int v1406;
  unint64_t v1407;
  unsigned int v1408;
  unsigned int v1409;
  unsigned int v1410;
  unint64_t v1411;
  int v1412;
  int v1413;
  int v1414;
  int v1415;
  unsigned int v1416;
  int v1417;
  unsigned int v1418;
  unsigned int v1419;
  int v1420;
  int v1421;
  unsigned int v1422;
  unsigned int v1423;
  unsigned int v1424;
  int v1425;
  unsigned int v1426;
  int v1427;
  unint64_t v1428;
  int v1429;
  int v1430;
  unsigned int v1431;
  uint64_t v1432;
  int v1433;
  unsigned int v1434;
  int v1435;
  int v1436;
  unint64_t v1437;
  uint64_t v1438;
  unsigned int v1439;
  int v1440;
  unsigned int v1441;
  int v1442;
  unint64_t v1443;
  unint64_t v1444;
  unint64_t v1445;
  int v1446;
  unint64_t v1447;
  unint64_t v1448;
  int v1449;
  unsigned int v1450;
  BOOL v1451;
  int v1452;
  int v1453;
  int v1454;
  unint64_t v1455;
  int v1456;
  int v1457;
  int v1458;
  int v1459;
  BOOL v1460;
  unsigned int v1461;
  unsigned int v1462;
  char v1463;
  unint64_t v1464;
  int v1465;
  int v1466;
  int v1467;
  int v1468;
  int v1469;
  unsigned int v1470;
  unsigned int v1471;
  unsigned int v1472;
  unsigned int v1473;
  int v1474;
  unsigned int v1475;
  uint64_t v1476;
  uint64_t v1477;
  uint64_t v1478;
  int v1479;
  int v1480;
  unsigned int v1481;
  unsigned int v1482;
  unint64_t v1483;
  unsigned int v1484;
  unint64_t v1485;
  unint64_t v1486;
  unsigned int v1487;
  unsigned int v1488;
  unint64_t v1489;
  int v1490;
  uint64_t v1491;
  uint64_t v1492;
  unsigned int v1493;
  uint64_t v1494;
  uint64_t v1495;
  unint64_t v1496;
  uint64_t v1497;
  int v1498;
  unsigned int v1499;
  unsigned int v1500;
  unint64_t v1501;
  unint64_t v1502;
  uint64_t v1503;
  uint64_t v1504;
  unsigned int v1505;
  int v1506;
  unsigned int v1507;
  unsigned int v1508;
  unint64_t v1509;
  int v1510;
  uint64_t v1511;
  int v1512;
  int v1513;
  int v1514;
  unint64_t v1515;
  unint64_t v1516;
  uint64_t v1517;
  unint64_t v1518;
  unsigned int v1519;
  int v1520;
  uint64_t v1521;
  unint64_t v1522;
  int v1523;
  int v1524;
  unint64_t v1525;
  int v1526;
  unint64_t v1527;
  int v1528;
  unint64_t v1529;
  unsigned int v1530;
  unsigned int v1531;
  unint64_t v1532;
  unsigned int v1533;
  int v1534;
  int v1535;
  uint64_t v1536;
  uint64_t v1537;
  unint64_t v1538;
  int v1539;
  int v1540;
  int v1541;
  uint64_t (*v1542)(void);

  *(_DWORD *)(v1 + 7616) = v0;
  *(_DWORD *)(v1 + 8808) = *(_DWORD *)(v1 + 8504) - *(_DWORD *)(v1 + 9208);
  v3 = *(_DWORD *)(v1 + 8868) - *(_DWORD *)(v1 + 9160);
  v4 = *(_DWORD *)(v1 + 8512) ^ *(_DWORD *)(v1 + 8520);
  v5 = *(_DWORD *)(v1 + 9120) ^ 0x758D615;
  v6 = *(_QWORD *)(v1 + 9648);
  v7 = *(_QWORD *)(v1 + 7952) >> v6;
  *(_QWORD *)(v1 + 8552) = v7;
  v8 = *(_DWORD *)(v1 + 8432);
  v9 = (unint64_t)(v8 & v7) << v6;
  v10 = *(_QWORD *)(v1 + 9672);
  *(_QWORD *)(v1 + 8656) = v2;
  *(_QWORD *)(v1 + 8672) = v2 << v10;
  v11 = v9 + ((unint64_t)(v8 & (v2 << v10)) >> v10);
  v12 = *(_DWORD *)(v1 + 6512);
  v13 = v11 ^ (2 * (v11 & v12));
  *(_DWORD *)(v1 + 8440) = v13;
  *(_DWORD *)(v1 + 9608) ^= 0x3F397503u;
  if ((v11 & v12) != 0)
    v11 = ~(*(_DWORD *)(v1 + 9504) ^ (v13 - 1716112422 - ((2 * v13) & 0x336C67B4)));
  *(_DWORD *)(v1 + 8432) = v11;
  *(_DWORD *)(v1 + 9160) = *(_DWORD *)(v1 + 8832) ^ v3 ^ 0x71550FA;
  *(_DWORD *)(v1 + 9208) = v4 ^ 0x7E59C9DC;
  v14 = *(_DWORD *)(v1 + 9264) ^ *(_DWORD *)(v1 + 9072);
  v15 = *(_DWORD *)(v1 + 8764);
  v16 = *(_DWORD *)(v1 + 8392) ^ ((v15 ^ *(_DWORD *)(v1 + 9616))
                                - 959846245
                                - ((2 * (v15 ^ *(_DWORD *)(v1 + 9616))) & 0x8D93D136));
  v17 = *(_DWORD *)(v1 + 8416) ^ (v16 - 959846245 - ((2 * v16) & 0x8D93D136));
  v18 = (v14 - 959846245 - ((2 * v14) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9064);
  v19 = (v18 - 959846245 - ((2 * v18) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9568);
  *(_DWORD *)(v1 + 9696) = -959846244;
  v20 = (v17 - 959846245 - ((2 * v17) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9172);
  v21 = *(_DWORD *)(v1 + 9288) ^ (v20 - 959846245 - ((2 * v20) & 0x8D93D136));
  v22 = (v21 - 959846245 - ((2 * v21) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9512);
  v23 = (v22 - 959846245 - ((2 * v22) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8408);
  v24 = (v19 - 959846244 + ~((2 * v19) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9368);
  v25 = (v23 - 959846245 - ((2 * v23) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9392);
  v26 = (v24 - 959846245 - ((2 * v24) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9544);
  v27 = (v26 - 959846245 - ((2 * v26) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9536);
  v28 = (v27 - 959846245 - ((2 * v27) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8792);
  v29 = (v25 - 959846245 - ((2 * v25) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8784);
  v30 = (v29 - 959846245 - ((2 * v29) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8860);
  v31 = (v28 - 959846245 - ((2 * v28) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9184);
  v32 = v31 - 959846245 - ((2 * v31) & 0x8D93D136);
  v33 = (v30 - 959846245 - ((2 * v30) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9416);
  v34 = (v33 - 959846245 - ((2 * v33) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8728);
  v35 = (v34 - 959846245 - ((2 * v34) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9296);
  v36 = (((*(_DWORD *)(v1 + 9528) ^ 0xC6C9E89B)
        - 2 * (((*(_DWORD *)(v1 + 9528) ^ 0xC6C9E89B) + 808423112) & 0x46C9E89F ^ *(_DWORD *)(v1 + 9528) & 4)
        - 151423133) ^ 0xC6C9E89B)
      - 808423112;
  v37 = *(_DWORD *)(v1 + 8888) ^ *(_DWORD *)(v1 + 8744) ^ *(_DWORD *)(v1 + 8864) ^ (v35
                                                                                  - 959846245
                                                                                  - ((2 * v35) & 0x8D93D136));
  v38 = ((*(_DWORD *)(v1 + 8628) ^ 0xD5D8FED6)
       - ((2 * (*(_DWORD *)(v1 + 8628) ^ 0xD5D8FED6) + 397635490) & 0xB61802EC)
       - 421152441) ^ 0x5B0C0176;
  v39 = v38 - ((2 * v38 - 397635490) & 0xB61802EC) - 818787931;
  v40 = (v37 - 959846245 - ((2 * v37) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9464);
  v41 = (*(_DWORD *)(v1 + 8640) - ((2 * *(_DWORD *)(v1 + 8640) + 997647160) & 0x8D93D136) + 1686460983) ^ 0xC6C9E89B;
  v42 = v41 - ((2 * v41 - 997647160) & 0x8D93D136) + 688813823;
  v43 = (v40 - 959846245 - ((2 * v40) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9408);
  v44 = (v43 - 959846245 - ((2 * v43) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9448);
  v45 = (v44 - 959846245 - ((2 * v44) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9376);
  v46 = (v45 - 959846245 - ((2 * v45) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9600);
  v47 = (v46 - 959846245 - ((2 * v46) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9456);
  v48 = *(_DWORD *)(v1 + 9272);
  v49 = *(_DWORD *)(v1 + 9304) ^ *(_DWORD *)(v1 + 9036) ^ v48 ^ v32;
  v50 = *(_DWORD *)(v1 + 8912);
  v51 = (v49 - 959846245 - ((2 * v49) & 0x8D93D136)) ^ v50;
  v52 = (v51 - 959846245 - ((2 * v51) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9560);
  v53 = (v52 - 959846245 - ((2 * v52) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9480);
  v54 = (v53 - 959846245 - ((2 * v53) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8424);
  v55 = (v54 - 959846245 - ((2 * v54) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9312);
  v56 = (v55 - 959846245 - ((2 * v55) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8900);
  v57 = (v56 - 959846245 - ((2 * v56) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9688);
  v58 = (v47 - 959846245 - ((2 * v47) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9552);
  v59 = *(_DWORD *)(v1 + 9192);
  v60 = (v58 - 959846245 - ((2 * v58) & 0x8D93D136)) ^ v59;
  v61 = (v60 - 959846245 - ((2 * v60) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8712);
  v62 = (v57 - 959846245 - ((2 * v57) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9488);
  v63 = (v61 - 959846245 - ((2 * v61) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9472);
  v64 = (v62 - 959846245 - ((2 * v62) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9520);
  v65 = *(_DWORD *)(v1 + 9496) ^ v36;
  v66 = v36;
  *(_DWORD *)(v1 + 8416) = v36;
  v67 = v65 ^ (v63 - 959846245 - ((2 * v63) & 0x8D93D136));
  v68 = *(_DWORD *)(v1 + 9056);
  v69 = (v64 - 959846245 - ((2 * v64) & 0x8D93D136)) ^ v68;
  v70 = *(_DWORD *)(v1 + 8936);
  *(_DWORD *)(v1 + 8868) = v70 ^ *(_DWORD *)(v1 + 8400) ^ (v69 - 959846245 - ((2 * v69) & 0x8D93D136));
  v71 = (v67 - 959846245 - ((2 * v67) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9248);
  v72 = *(_DWORD *)(v1 + 9248);
  v73 = *(_DWORD *)(v1 + 9052);
  v74 = v73 ^ *(_DWORD *)(v1 + 9328) ^ 0x546D73AE;
  v75 = *(_DWORD *)(v1 + 9200);
  *(_DWORD *)(v1 + 9120) = *(_DWORD *)(v1 + 8872) ^ v75 ^ (v71 - 959846245 - ((2 * v71) & 0x8D93D136));
  v76 = v73 ^ *(_DWORD *)(v1 + 8696) ^ 0xDD7E1FB6;
  *(_DWORD *)(v1 + 9528) = v76;
  v77 = *(_DWORD *)(v1 + 9384) ^ v73;
  *(_DWORD *)(v1 + 8544) = v77 ^ 0xD7638433;
  v78 = v77 ^ 0x11AA6CA8;
  *(_DWORD *)(v1 + 8640) = v77 ^ 0x11AA6CA8;
  *(_DWORD *)(v1 + 9656) = *(_DWORD *)(v1 + 9176) ^ 0xA5D6DA7A;
  *(_DWORD *)(v1 + 9176) = *(_DWORD *)(v1 + 9040) ^ 0x9A9404A;
  *(_DWORD *)(v1 + 9040) = v73 ^ *(_DWORD *)(v1 + 9320) ^ 0xE6537723;
  v79 = *(_DWORD *)(v1 + 8920) ^ 0xBDDAD422;
  *(_DWORD *)(v1 + 8872) = v73 ^ *(_DWORD *)(v1 + 9012) ^ 0xD4C9BAE9;
  v80 = *(_DWORD *)(v1 + 9400) ^ 0x99786266;
  v81 = *(_DWORD *)(v1 + 8448) ^ 0x76CEDD96;
  *(_DWORD *)(v1 + 7880) = 1187637403;
  v82 = (v50 ^ 0xC6C9E89B) + *(_DWORD *)(v1 + 7944) - 2 * ((v50 ^ 0x46C9E89B) & *(_DWORD *)(v1 + 7944));
  *(_DWORD *)(v1 + 8496) = v82;
  *(_QWORD *)(v1 + 8704) = v73 ^ *(_DWORD *)(v1 + 9024) ^ 0x152E6F7Bu;
  *(_DWORD *)(v1 + 9320) = v73 ^ *(_DWORD *)(v1 + 8488) ^ 0xBF393E41;
  v83 = *(_DWORD *)(v1 + 9280) ^ 0xE4D7C5D8;
  v84 = *(_DWORD *)(v1 + 9432) ^ 0xAF6634CD;
  *(_DWORD *)(v1 + 8840) = v73 ^ *(_DWORD *)(v1 + 8932) ^ 0xA14AE64B;
  v85 = (v42 & 0xD129A627 ^ 0x11200624) + (v42 & 0xD129A627 ^ 0xC009A003) + v5 + 785799641;
  v86 = (v73 ^ 0xB2A8670C) - 959846245 - ((2 * (v73 ^ 0xB2A8670C)) & 0x8D93D136);
  v87 = *(_DWORD *)(v1 + 8464) ^ 0x1B93B4C1;
  v88 = (v68 ^ v86) - 959846245 - ((2 * (v68 ^ v86)) & 0x8D93D136);
  *(_DWORD *)(v1 + 8696) = (v66 ^ v73 ^ 0xB2A8670C) - 959846245 - ((2 * (v66 ^ v73 ^ 0xB2A8670C)) & 0x8D93D136);
  v89 = (v72 ^ v86) - 959846245 - ((2 * (v72 ^ v86)) & 0x8D93D136);
  *(_DWORD *)(v1 + 8488) = v89;
  v90 = (v85 ^ v73 ^ 0xB2A8670C) - 959846245 - ((2 * (v85 ^ v73 ^ 0xB2A8670C)) & 0x8D93D136);
  v91 = *(_DWORD *)(v1 + 8456) ^ 0x48F9CEF5;
  *(_DWORD *)(v1 + 9024) = v73 ^ *(_DWORD *)(v1 + 8736) ^ 0xB97927F2;
  v92 = *(_DWORD *)(v1 + 9004) ^ 0xEB6BF13B;
  *(_DWORD *)(v1 + 8688) = v73 ^ *(_DWORD *)(v1 + 9008) ^ 0xACEE9E10;
  v93 = (*(_DWORD *)(v1 + 9264) ^ v15) - 959846245 - ((2 * (*(_DWORD *)(v1 + 9264) ^ v15)) & 0x8D93D136);
  *(_DWORD *)(v1 + 7816) = v39;
  *(_DWORD *)(v1 + 7872) = v42;
  v94 = v39 ^ v42;
  v95 = *(_DWORD *)(v1 + 9064) ^ v39 ^ v42;
  *(_DWORD *)(v1 + 8520) = v95;
  v95 ^= 0x9DC5E9ED;
  *(_DWORD *)(v1 + 8736) = v95;
  v96 = (v93 ^ v95) - 959846245 - ((2 * (v93 ^ v95)) & 0x8D93D136);
  v97 = v39 ^ v42 ^ 0x9DC5E9ED;
  v98 = v97 ^ *(_DWORD *)(v1 + 9072);
  *(_DWORD *)(v1 + 8912) = v98;
  *(_DWORD *)(v1 + 9056) = v74;
  v99 = ((v96 ^ v98) - 959846245 - ((2 * (v96 ^ v98)) & 0x8D93D136)) ^ v74;
  v100 = v97 ^ *(_DWORD *)(v1 + 9568);
  *(_DWORD *)(v1 + 9432) = v100;
  v101 = (v99 - 959846245 - ((2 * v99) & 0x8D93D136)) ^ v100;
  v102 = v97 ^ *(_DWORD *)(v1 + 9616);
  *(_DWORD *)(v1 + 9384) = v102;
  v103 = (v101 - 959846245 - ((2 * v101) & 0x8D93D136)) ^ v102;
  v104 = *(_DWORD *)(v1 + 8888) ^ v73;
  *(_DWORD *)(v1 + 8464) = v104;
  v105 = v59 ^ v73;
  *(_DWORD *)(v1 + 8504) = v59 ^ v73;
  v106 = v70 ^ v73;
  v107 = v73 ^ 0x5F507102;
  v108 = v73 ^ 0x5F507102 ^ *(_DWORD *)(v1 + 9536);
  *(_DWORD *)(v1 + 9400) = v108;
  v109 = (v103 - 959846245 - ((2 * v103) & 0x8D93D136)) ^ v108;
  v110 = v97 ^ *(_DWORD *)(v1 + 9368);
  *(_DWORD *)(v1 + 9064) = v110;
  v111 = (v109 - 959846245 - ((2 * v109) & 0x8D93D136)) ^ v110;
  v112 = *(_DWORD *)(v1 + 9016) ^ 0xCCE3B0D1;
  *(_DWORD *)(v1 + 9616) = v94 ^ *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 9008) = v94 ^ *(_DWORD *)(v1 + 9176);
  *(_DWORD *)(v1 + 9536) = v94 ^ v79;
  v113 = v94 ^ v80;
  *(_DWORD *)(v1 + 9072) = v94 ^ v80;
  *(_DWORD *)(v1 + 8680) = v94 ^ v81;
  *(_DWORD *)(v1 + 8648) = v94 ^ *(_DWORD *)(v1 + 8904) ^ 0xC6C9E89B;
  v114 = *(_DWORD *)(v1 + 9600) ^ v94;
  *(_DWORD *)(v1 + 8628) = v114;
  *(_DWORD *)(v1 + 9280) = v94 ^ v83;
  v115 = *(_DWORD *)(v1 + 8992);
  *(_DWORD *)(v1 + 9368) = v94 ^ v115 ^ 0xF0B97BFE;
  *(_DWORD *)(v1 + 9568) = v84 ^ v94;
  *(_DWORD *)(v1 + 9004) = v94 ^ v87;
  *(_DWORD *)(v1 + 8888) = v94 ^ v91;
  *(_DWORD *)(v1 + 8456) = v75 ^ v94;
  *(_DWORD *)(v1 + 9600) = v94 ^ v92;
  *(_DWORD *)(v1 + 8920) = v94 ^ v112;
  v116 = v107 ^ *(_DWORD *)(v1 + 9544);
  *(_DWORD *)(v1 + 9544) = v116;
  v117 = (v111 - 959846245 - ((2 * v111) & 0x8D93D136)) ^ v116;
  v118 = v97 ^ *(_DWORD *)(v1 + 9172);
  *(_DWORD *)(v1 + 9012) = v118;
  v119 = (v117 - 959846245 - ((2 * v117) & 0x8D93D136)) ^ v118;
  v120 = v97 ^ *(_DWORD *)(v1 + 9512);
  *(_DWORD *)(v1 + 9052) = v120;
  v121 = (v119 - 959846245 - ((2 * v119) & 0x8D93D136)) ^ v120;
  v122 = (v121 - 959846245 - ((2 * v121) & 0x8D93D136)) ^ v78;
  v123 = v107 ^ *(_DWORD *)(v1 + 9288);
  *(_DWORD *)(v1 + 9512) = v123;
  v124 = (v122 - 959846245 - ((2 * v122) & 0x8D93D136)) ^ v123;
  v125 = (v124 - 959846245 - ((2 * v124) & 0x8D93D136)) ^ v76;
  v126 = v107 ^ *(_DWORD *)(v1 + 9392);
  *(_DWORD *)(v1 + 9176) = v126;
  v127 = (v125 - 959846245 - ((2 * v125) & 0x8D93D136)) ^ v126;
  v128 = v107 ^ *(_DWORD *)(v1 + 8784);
  *(_DWORD *)(v1 + 8904) = v128;
  v129 = (v127 - 959846245 - ((2 * v127) & 0x8D93D136)) ^ v128;
  v130 = v115 ^ *(_DWORD *)(v1 + 9520);
  v131 = v97 ^ *(_DWORD *)(v1 + 8792);
  *(_DWORD *)(v1 + 8932) = v131;
  v132 = (v129 - 959846245 - ((2 * v129) & 0x8D93D136)) ^ v131;
  v133 = v132 - 959846245 - ((2 * v132) & 0x8D93D136);
  v134 = ((v130 ^ 0x6D7C9213) - 959846245 - 2 * ((v130 ^ 0x6D7C9213) & 0x46C9E89F ^ v130 & 4)) ^ *(_DWORD *)(v1 + 9496);
  v135 = (v134 - 959846245 - ((2 * v134) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9472);
  *(_DWORD *)(v1 + 8424) = v105 ^ 0x5F507102;
  v136 = (v135 - 959846245 - ((2 * v135) & 0x8D93D136)) ^ v105 ^ 0x5F507102;
  v137 = v97 ^ *(_DWORD *)(v1 + 9456);
  *(_DWORD *)(v1 + 9016) = v137;
  v138 = (v136 - 959846245 - ((2 * v136) & 0x8D93D136)) ^ v137;
  v139 = v107 ^ *(_DWORD *)(v1 + 9688);
  *(_DWORD *)(v1 + 9200) = v139;
  v140 = (v138 - 959846245 - ((2 * v138) & 0x8D93D136)) ^ v139;
  v141 = v107 ^ *(_DWORD *)(v1 + 8900);
  *(_DWORD *)(v1 + 9192) = v141;
  v142 = (v140 - 959846245 - ((2 * v140) & 0x8D93D136)) ^ v141;
  *(_DWORD *)(v1 + 9392) = v107 ^ v48;
  v143 = (v142 - 959846245 - ((2 * v142) & 0x8D93D136)) ^ v107 ^ v48;
  v88 ^= 0xEDF8160E;
  *(_DWORD *)(v1 + 8900) = v88;
  v144 = ((v143 - 959846245 - ((2 * v143) & 0x8D93D136)) ^ v88)
       - 959846245
       - ((2 * ((v143 - 959846245 - ((2 * v143) & 0x8D93D136)) ^ v88)) & 0x8D93D136);
  v145 = v107 ^ *(_DWORD *)(v1 + 9488);
  *(_DWORD *)(v1 + 8784) = v145;
  *(_DWORD *)(v1 + 8408) = v114 ^ 0x9DC5E9ED;
  v146 = ((v144 ^ v145) - 959846245 - ((2 * (v144 ^ v145)) & 0x8D93D136)) ^ v114 ^ 0x9DC5E9ED;
  v147 = v107 ^ *(_DWORD *)(v1 + 9560);
  *(_DWORD *)(v1 + 8720) = v147;
  v148 = (v146 - 959846245 - ((2 * v146) & 0x8D93D136)) ^ v147;
  v149 = v97 ^ *(_DWORD *)(v1 + 9480);
  *(_DWORD *)(v1 + 8712) = v149;
  v150 = (v148 - 959846245 - ((2 * v148) & 0x8D93D136)) ^ v149;
  v151 = v107 ^ *(_DWORD *)(v1 + 8860);
  *(_DWORD *)(v1 + 9456) = v151;
  v152 = (v150 - 959846245 - ((2 * v150) & 0x8D93D136)) ^ v151;
  v153 = v97 ^ *(_DWORD *)(v1 + 9184);
  *(_DWORD *)(v1 + 8936) = v153;
  v154 = v107 ^ *(_DWORD *)(v1 + 9416);
  *(_DWORD *)(v1 + 8860) = v154;
  v155 = v153 ^ v154 ^ (v152 - 959846245 - ((2 * v152) & 0x8D93D136)) ^ v133;
  v156 = v107 ^ *(_DWORD *)(v1 + 9296);
  *(_DWORD *)(v1 + 8792) = v156;
  v157 = (v155 - 959846245 - ((2 * v155) & 0x8D93D136)) ^ v156;
  v158 = (v157 - 959846245 - ((2 * v157) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8728);
  v159 = (v158 - 959846245 - ((2 * v158) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9036);
  v160 = v97 ^ *(_DWORD *)(v1 + 9304);
  *(_DWORD *)(v1 + 8992) = v160;
  v161 = (v159 - 959846245 - ((2 * v159) & 0x8D93D136)) ^ v160;
  v104 ^= 0x5F507102u;
  *(_DWORD *)(v1 + 9560) = v104;
  v162 = (v161 - 959846245 - ((2 * v161) & 0x8D93D136)) ^ v104;
  v163 = *(_DWORD *)(v1 + 8864) ^ v97;
  *(_DWORD *)(v1 + 9688) = v163;
  *(_DWORD *)(v1 + 6488) = v97;
  v164 = (v162 - 959846245 - ((2 * v162) & 0x8D93D136)) ^ v163;
  v165 = v107 ^ *(_DWORD *)(v1 + 8744);
  *(_DWORD *)(v1 + 9480) = v165;
  v166 = (v164 - 959846245 - ((2 * v164) & 0x8D93D136)) ^ v165;
  v167 = v107 ^ *(_DWORD *)(v1 + 9464);
  *(_DWORD *)(v1 + 8728) = v167;
  v168 = (v166 - 959846245 - ((2 * v166) & 0x8D93D136)) ^ v167;
  v169 = v107 ^ *(_DWORD *)(v1 + 9408);
  *(_DWORD *)(v1 + 9408) = v169;
  v170 = (v168 - 959846245 - ((2 * v168) & 0x8D93D136)) ^ v169;
  v171 = *(_DWORD *)(v1 + 9376) ^ v97;
  *(_DWORD *)(v1 + 8864) = v171;
  v172 = (v170 - 959846245 - ((2 * v170) & 0x8D93D136)) ^ v171;
  v173 = v97 ^ *(_DWORD *)(v1 + 9448);
  *(_DWORD *)(v1 + 9656) = v173;
  v174 = (v172 - 959846245 - ((2 * v172) & 0x8D93D136)) ^ v173;
  v175 = (v174 - 959846245 - ((2 * v174) & 0x8D93D136)) ^ v113;
  v176 = v97 ^ *(_DWORD *)(v1 + 9312);
  *(_DWORD *)(v1 + 8576) = v176;
  v177 = (v175 - 959846245 - ((2 * v175) & 0x8D93D136)) ^ v176;
  v178 = v97 ^ *(_DWORD *)(v1 + 9552);
  *(_DWORD *)(v1 + 9552) = v178;
  v179 = (v177 - 959846245 - ((2 * v177) & 0x8D93D136)) ^ v178;
  v180 = v179 + *(_DWORD *)(v1 + 9696) + ~((2 * v179) & 0x8D93D136);
  *(_DWORD *)(v1 + 9172) = v82 ^ 0xC6C9E89B;
  v181 = *(_DWORD *)(v1 + 8696) ^ 0xEDF8160E;
  *(_DWORD *)(v1 + 9464) = v181;
  v182 = ((v180 ^ v82 ^ 0xC6C9E89B) - 959846245 - ((2 * (v180 ^ v82 ^ 0xC6C9E89B)) & 0x8D93D136)) ^ v181;
  *(_DWORD *)(v1 + 9184) = v90 ^ 0xEDF8160E;
  *(_DWORD *)(v1 + 9296) = v89 ^ 0xEDF8160E;
  v183 = (v182 - 959846245 - ((2 * v182) & 0x8D93D136)) ^ v89 ^ 0xEDF8160E;
  *(_DWORD *)(v1 + 9272) = v75 ^ v94 ^ 0x9DC5E9ED;
  v184 = (v183 - 959846245 - ((2 * v183) & 0x8D93D136)) ^ v75 ^ v94 ^ 0x9DC5E9ED;
  v185 = (v184 - 959846245 - ((2 * v184) & 0x8D93D136)) ^ v90 ^ 0xEDF8160E;
  *(_DWORD *)(v1 + 9376) = v106 ^ 0x5F507102;
  *(_DWORD *)(v1 + 7792) = v106 ^ v94 ^ v112 ^ (v185 - 959846245 - ((2 * v185) & 0x8D93D136));
  v186 = *(_DWORD *)(v1 + 8760) ^ 0xC6C9E89B;
  v187 = *(_QWORD *)(v1 + 9672);
  v188 = (unint64_t)(v186 & *(_QWORD *)(v1 + 8672)) >> v187;
  v189 = *(_QWORD *)(v1 + 8968);
  v190 = *(_QWORD *)(v1 + 7952) >> v189;
  *(_QWORD *)(v1 + 8560) = v190;
  v191 = v188 ^ ((unint64_t)(v186 & v190) << v189);
  v192 = *(_DWORD *)(v1 + 6504);
  v193 = v192 ^ 0x79AD4EE3;
  *(_DWORD *)(v1 + 8744) = 2 * v192;
  v194 = (2 * v192) ^ 0xF35A9DC6;
  v195 = v194 & (4 * ((v191 ^ (2 * (v191 & (v192 ^ 0x79AD4EE3)))) & (v192 ^ 0x39AD4EE3))) ^ v191 ^ (2
                                                                                                  * (v191 & (v192 ^ 0x79AD4EE3)));
  v196 = v192 ^ 0x9AD4EE3;
  v197 = v194 & (4 * (((2 * v192) ^ 0x335A9DC4) & (v192 ^ 0x39AD4EE0)));
  *(_DWORD *)(v1 + 9036) = v197 & (16 * (v195 & (v192 ^ 0x9AD4EE3))) ^ v195;
  v198 = *(_DWORD *)(v1 + 8952) - *(_DWORD *)(v1 + 8632);
  *(_DWORD *)(v1 + 8760) = v198;
  LODWORD(v188) = *(_DWORD *)(v1 + 8768) ^ 0xC6C9E89B;
  v199 = *(_DWORD *)(v1 + 8984) ^ 0xC6C9E89B;
  v200 = *(_QWORD *)(v1 + 9648);
  *(_QWORD *)(v1 + 6520) = v199;
  v201 = v198 ^ 0x5C3BFB13u;
  v202 = *(_QWORD *)(v1 + 9704);
  v203 = v201 << v202;
  LOBYTE(v59) = v202;
  LODWORD(v188) = ((unint64_t)(v188 & (v199 >> v200)) << v200) ^ ((unint64_t)(v188 & (v201 << v202)) >> v202);
  LODWORD(v202) = *(_DWORD *)(v1 + 6512);
  v204 = 2 * (v188 & v202);
  v205 = *(_DWORD *)(v1 + 8964);
  v206 = v202;
  v207 = v202 & (2 * ((v204 ^ v188) & v205)) ^ 0xA38000;
  v208 = ((v188 & v202) - 959846245 - (v204 & 0x8D93D136)) ^ 0xBD416DDC ^ (((2 * v207) & 0x9A9F570) - v207 + 2066416967);
  v209 = *(_DWORD *)(v1 + 9504);
  *(_DWORD *)(v1 + 8512) = 2 * v209;
  v210 = (2 * v209) ^ 0x336C67B4;
  v211 = v210 & (v209 ^ 0x19B633D8);
  *(_DWORD *)(v1 + 8672) = v188 ^ 0xC6C9E89B ^ (2
                                              * ((2 * v211) & (v209 ^ 0x19B633D8) & (8 * ((v188 ^ (2 * v208)) & v205)) ^ v208));
  v212 = *(_DWORD *)(v1 + 8432) & v205;
  *(_DWORD *)(v1 + 7856) = v210;
  LODWORD(v202) = v210 & (4 * v212) ^ *(_DWORD *)(v1 + 8440);
  v213 = v209 ^ 0x9B633DA;
  v214 = (4 * v211) & v210;
  *(_DWORD *)(v1 + 8768) = v214 & (16 * (v202 & (v209 ^ 0x9B633DA))) ^ v202;
  v215 = ((v199 >> v189) - 959846245 - ((2 * (v199 >> v189)) & 0x8D93D136)) ^ 0xC6C9E89B;
  LOBYTE(v212) = v59;
  LODWORD(v188) = ((unint64_t)(*(_DWORD *)(v1 + 8480) & v215) << v189) ^ ((unint64_t)(*(_DWORD *)(v1 + 8480) & v203) >> v59);
  LODWORD(v188) = v194 & (4 * ((v188 ^ (2 * (v188 & (v192 ^ 0x79AD4EE3)))) & (v192 ^ 0x39AD4EE3))) ^ v188 ^ (2 * (v188 & (v192 ^ 0x79AD4EE3)));
  *(_DWORD *)(v1 + 9304) = v188 ^ 0xC6C9E89B ^ v197 & (16 * (v188 & (v192 ^ 0x9AD4EE3)));
  v216 = *(_QWORD *)(v1 + 8656) << v59;
  v217 = ((unint64_t)((*(_DWORD *)(v1 + 9136) ^ 0xC6C9E89B) & v215) << v189) | ((unint64_t)((*(_DWORD *)(v1 + 9136) ^ 0xC6C9E89B) & v216) >> v59);
  LODWORD(v188) = v217 ^ (2 * ((v217 ^ (2 * (v217 & v206))) & v205));
  *(_DWORD *)(v1 + 8480) = (2 * v211) & (8 * ((v217 ^ (2 * (v188 & v206))) & v205)) ^ v188;
  LOBYTE(v211) = v187;
  v218 = v201 << v187;
  v219 = v201;
  v220 = *(_QWORD *)(v1 + 8552);
  LODWORD(v188) = ((unint64_t)(*(_DWORD *)(v1 + 8472) & (v201 << v187)) >> v187) | ((unint64_t)(*(_DWORD *)(v1 + 8472) & v220) << v200);
  *(_DWORD *)(v1 + 6360) = v194;
  LODWORD(v188) = v194 & (4 * ((v188 ^ (2 * (v188 & (v192 ^ 0x79AD4EE3)))) & (v192 ^ 0x39AD4EE3))) ^ v188 ^ (2 * (v188 & (v192 ^ 0x79AD4EE3)));
  *(_DWORD *)(v1 + 6332) = v192 ^ 0xF9AD4EE2;
  v221 = (v192 ^ 0xF9AD4EE2) & (2 * (v188 & (v192 ^ 0x79AD4EE3))) ^ 0x1A00D2;
  v222 = 2 * (v221 - ((2 * v221) & 0x33C37D50)) + 868449618;
  LODWORD(v201) = v192;
  v223 = v222 & 0x169E0282 ^ 0x109E0203 ^ (v222 ^ 0x33F77CF6) & (v192 ^ 0xEF334C60);
  v224 = (2 * ((v223 | 0x2BA6B01D) - (v223 | 0x54594FE2)) - 1464688700) ^ 0x535D6538;
  v225 = *(_DWORD *)(v1 + 7880);
  *(_DWORD *)(v1 + 9288) = v188 ^ 0xC6C9E89B ^ (2 * (((v224 + v225 - ((2 * v224) & 0xD93D134)) ^ v225) & v193));
  LODWORD(v188) = *(_DWORD *)(v1 + 8880) ^ 0xC6C9E89B;
  *(_QWORD *)(v1 + 6336) = v218;
  LODWORD(v188) = ((unint64_t)(v188 & v218) >> v187) ^ ((unint64_t)(v188 & v215) << v189);
  v226 = (v188 & (v201 ^ 0xF9AD4EE3) ^ 0x1902810)
       - ((2 * (v188 & (v201 ^ 0xF9AD4EE3) ^ 0x1902810)) & 0xB986DA9E)
       + 1556311375;
  *(_DWORD *)(v1 + 6480) = v201 ^ 0xF9AD4EE3;
  LODWORD(v203) = (v201 ^ 0xF9AD4EE3) & (2 * ((v188 ^ (2 * v226) ^ 0x3AA68ABE) & v193));
  LODWORD(v188) = v188 ^ (2 * ((v203 + v225 - ((2 * v203) & 0xD93D134)) ^ v226));
  v227 = v197 & (16 * ((v188 ^ 0x7355B88) & v196)) ^ v188;
  LODWORD(v201) = ((unint64_t)(*(_DWORD *)(v1 + 8664) & v216) >> v212) ^ ((unint64_t)(*(_DWORD *)(v1 + 8664) & v220) << v200);
  LODWORD(v201) = v201 ^ (2
                        * (((v225
                           + 2 * ((v201 ^ (2 * (v201 & v205))) & v205)
                           - ((4 * ((v201 ^ (2 * (v201 & v205))) & v205)) & 0xD93D134)) ^ (v201
                                                                                         + v225
                                                                                         - ((2 * v201) & 0xD93D136))) & v205));
  *(_DWORD *)(v1 + 7608) = v213;
  *(_DWORD *)(v1 + 7600) = v214;
  *(_DWORD *)(v1 + 8696) = v201 ^ 0xC6C9E89B ^ v214 & (16 * (v201 & v213));
  LODWORD(v201) = *(_DWORD *)(v1 + 9424) ^ 0xCEB39DE3 ^ (2 * ((*(_DWORD *)(v1 + 9424) ^ 0x4EB39DE3) & v205));
  v228 = *(_QWORD *)(v1 + 7952);
  *(_QWORD *)(v1 + 6496) = v219;
  LODWORD(v201) = ((unint64_t)(((v201 & v228)
                                     - 959846245
                                     - ((2 * (v201 & v228)) & 0x8D93D136)) ^ 0xC6C9E89B) >> v189) | ((unint64_t)(v201 & v219) << v212);
  *(_DWORD *)(v1 + 7848) = v201 - 959846245 - ((2 * v201) & 0x8D93D136);
  LODWORD(v201) = *(_DWORD *)(v1 + 9328) ^ 0xB3D02AC ^ *(_DWORD *)(v1 + 9416);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8792);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9400);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9012);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9528);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9544);
  LODWORD(v201) = *(_DWORD *)(v1 + 9456) ^ (v201 - 959846245 - ((2 * v201) & 0x8D93D136));
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9512);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9432);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9384);
  LODWORD(v199) = v107 ^ *(_DWORD *)(v1 + 9264);
  *(_DWORD *)(v1 + 8552) = v199;
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ v199;
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8912);
  LODWORD(v188) = *(_DWORD *)(v1 + 7920) ^ 0xCCB18E81;
  *(_DWORD *)(v1 + 7808) = v188;
  LODWORD(v201) = (v201 + 2131364622 - ((2 * v201) & 0xFE14161C)) ^ v188;
  LODWORD(v199) = v107 ^ *(_DWORD *)(v1 + 8764);
  *(_DWORD *)(v1 + 8880) = v199;
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ v199;
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8736);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9064);
  LODWORD(v201) = (v201 + *(_DWORD *)(v1 + 9696) + ~((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8932);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9176);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8904);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8936);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8640);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9052);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9616);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9008);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8992);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9688);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9560);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9480);
  *(_DWORD *)(v1 + 9136) = v107 ^ *(_DWORD *)(v1 + 9096);
  *(_DWORD *)(v1 + 7592) = v107 ^ *(_DWORD *)(v1 + 9080);
  *(_DWORD *)(v1 + 8472) = v107 ^ *(_DWORD *)(v1 + 8776);
  *(_DWORD *)(v1 + 8440) = v107 ^ *(_DWORD *)(v1 + 8532);
  *(_DWORD *)(v1 + 8736) = v107 ^ *(_DWORD *)(v1 + 9116);
  LODWORD(v218) = v107 ^ *(_DWORD *)(v1 + 9472);
  *(_DWORD *)(v1 + 8640) = v107 ^ *(_DWORD *)(v1 + 9104);
  *(_DWORD *)(v1 + 8664) = v107 ^ *(_DWORD *)(v1 + 9224);
  LODWORD(v188) = *(_DWORD *)(v1 + 9496);
  *(_DWORD *)(v1 + 8448) = v107 ^ v188;
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ v188;
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9488);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9200);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9016);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9448);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9312);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8720);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9072);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8728);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9408);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8864);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9192);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9392);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8408);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8712);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9172);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9552);
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8424);
  *(_DWORD *)(v1 + 9328) = v218;
  LODWORD(v201) = (v201 - 959846245 - ((2 * v201) & 0x8D93D136)) ^ v218;
  LODWORD(v220) = *(_DWORD *)(v1 + 9036);
  LODWORD(v218) = *(_DWORD *)(v1 + 7936);
  *(_DWORD *)(v1 + 9312) = v220 ^ 0xC6C9E89B;
  LODWORD(v199) = v220 ^ 0xC6C9E89B ^ (2 * (v220 & v193) - 959846245 - (v218 & (4 * (v220 & v193))));
  v229 = *(_QWORD *)(v1 + 8656);
  v230 = v205;
  LODWORD(v220) = *(_DWORD *)(v1 + 8768);
  v231 = 2 * (v220 & v205) - 959846245 - (v218 & (4 * (v220 & v205)));
  v232 = *(_QWORD *)(v1 + 6520);
  LODWORD(v199) = ((((unint64_t)(v199 & v229) << v211)
                  - 959846245
                  - ((2 * ((unint64_t)(v199 & v229) << v211)) & 0x8D93D136)) ^ 0xC6C9E89B)
                + ((unint64_t)(v199 & v232) >> v200);
  LODWORD(v220) = v220 ^ 0xC6C9E89B;
  *(_DWORD *)(v1 + 8632) = v220;
  LODWORD(v220) = v231 ^ v220;
  LOBYTE(v187) = v212;
  v233 = (unint64_t)(v220 & v219) << v212;
  v234 = v232;
  LODWORD(v220) = v233 | ((unint64_t)(v220 & v232) >> v189);
  LODWORD(v233) = *(_DWORD *)(v1 + 8480) & *(_DWORD *)(v1 + 6512);
  LODWORD(v232) = v217 ^ (2 * v233);
  *(_DWORD *)(v1 + 9496) = v232;
  *(_DWORD *)(v1 + 6368) = v193;
  LODWORD(v199) = ((unint64_t)((v217 ^ (2 * (v232 & v193 ^ v233))) & v228) >> v200) ^ ((unint64_t)((v217 ^ (2 * (v232 & v193 ^ v233))) & v229) << v211) ^ v199 ^ *(_DWORD *)(v1 + 8416) ^ v220;
  LODWORD(v199) = (v199 - 959846245 - ((2 * v199) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9248);
  LODWORD(v199) = (v199 - 959846245 - ((2 * v199) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9184);
  LODWORD(v199) = (v199 - 959846245 - ((2 * v199) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8920);
  LODWORD(v199) = (v199 - 959846245 - ((2 * v199) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8900);
  LODWORD(v220) = *(_DWORD *)(v1 + 6488) ^ *(_DWORD *)(v1 + 9520);
  *(_DWORD *)(v1 + 8776) = v220;
  LODWORD(v201) = *(_DWORD *)(v1 + 9368) ^ v220 ^ (v199 - 959846245 - ((2 * v199) & 0x8D93D136)) ^ (v201
                                                                                                  - 959846245
                                                                                                  - ((2 * v201) & 0x8D93D136));
  LODWORD(v199) = v201 - 959846245 - ((2 * v201) & 0x8D93D136);
  *(_DWORD *)(v1 + 9224) = v227 ^ 0xF1FCB313;
  LODWORD(v201) = v227 ^ 0x37355B88 ^ (2 * ((v227 ^ 0x37355B88) & v230));
  LODWORD(v188) = *(_DWORD *)(**(_QWORD **)(v1 + 9088) + (int)(**(_DWORD **)(v1 + 9216) & 0xEE62092C));
  v235 = v201 & v229;
  v236 = (unint64_t)(v201 & v234) >> v200;
  LODWORD(v201) = -333269657 * ((v188 ^ *(_QWORD *)(v1 + 8944)) & 0x7FFFFFFF);
  v237 = -333269657 * (v201 ^ WORD1(v201));
  v238 = *(_DWORD *)(v1 + 7864);
  v239 = (uint64_t)*(&off_1004ECA20 + v238 - 4485);
  v240 = *(unsigned __int8 **)(v1 + 8248);
  v241 = (char *)*(&off_1004ECA20 + (v238 ^ 0x1119)) - 4;
  v242 = (uint64_t)*(&off_1004ECA20 + v238 - 4449);
  LODWORD(v237) = v240[4024] ^ *(unsigned __int8 *)(v239 + (v237 >> 24)) ^ *((unsigned __int8 *)*(&off_1004ECA20
                                                                                                + (v238 ^ 0x1119))
                                                                           + (v237 >> 24)) ^ *(unsigned __int8 *)(v242 + (v237 >> 24)) ^ v237 ^ (97 * (v237 >> 24)) ^ 0x50;
  LODWORD(v229) = (v235 << v187) - 959846245 - ((2 * (v235 << v187)) & 0x8D93D136);
  *(_DWORD *)(v1 + 6448) = (_DWORD)v240 - 781111714;
  v243 = (unint64_t)(-333269657
                          * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111714)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111714)) & 0x7FFFFFFF)) >> 16))) >> 24;
  v244 = *(_QWORD *)(v1 + 7904);
  v245 = *(_QWORD *)(v1 + 7896);
  v246 = *(_QWORD *)(v1 + 7888);
  LOBYTE(v243) = v240[4035] ^ (103
                             * ((103 * (v188 ^ ((_BYTE)v240 + 94))) ^ ((-333269657
                                                                      * ((v188 ^ ((_DWORD)v240 - 781111714)) & 0x7FFFFFFF)) >> 16))) ^ (-117 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111714)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111714)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ *(_BYTE *)(v244 + v243) ^ *(_BYTE *)(v245 + v243) ^ *(_BYTE *)(v243 + v246 + 3);
  LODWORD(v236) = (v229 ^ 0xC6C9E89B) + v236 - 552599266 - ((2 * ((v229 ^ 0xC6C9E89B) + v236)) & 0xBE20023C);
  *(_DWORD *)(v1 + 6456) = (_DWORD)v240 - 781111717;
  v247 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111717)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111717)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v247) = v240[4032] ^ v247 ^ (97 * (v247 >> 24)) ^ *(unsigned __int8 *)(v239 + (v247 >> 24)) ^ v241[(v247 >> 24) + 4] ^ *(unsigned __int8 *)(v242 + (v247 >> 24));
  *(_DWORD *)(v1 + 6392) = (_DWORD)v240 - 781111724;
  v248 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111724)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111724)) & 0x7FFFFFFF)) >> 16));
  v249 = v248 >> 24;
  LODWORD(v248) = *(unsigned __int8 *)(v245 + (v248 >> 24)) ^ *(unsigned __int8 *)(v244 + (v248 >> 24)) ^ *(unsigned __int8 *)((v248 >> 24) + v246 + 3) ^ v248 ^ v240[4025];
  HIDWORD(v250) = v248 ^ (3 * v249);
  LODWORD(v250) = (v248 ^ (-117 * (_DWORD)v249)) << 24;
  *(_DWORD *)(v1 + 6424) = (_DWORD)v240 - 781111720;
  v251 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111720)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111720)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v251) = *(_BYTE *)(v244 + (v251 >> 24)) ^ v240[4029] ^ *(_BYTE *)(v245 + (v251 >> 24)) ^ *(_BYTE *)((v251 >> 24) + v246 + 3) ^ (103 * ((103 * (v188 ^ ((_BYTE)v240 + 88))) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111720)) & 0x7FFFFFFF)) >> 16))) ^ (-117 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111720)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111720)) & 0x7FFFFFFF)) >> 16))) >> 24));
  *(_DWORD *)(v1 + 9096) = *(_DWORD *)(v1 + 8456) ^ *(_DWORD *)(v1 + 9376) ^ v236 ^ 0x42D5E8F3 ^ v199;
  *(_DWORD *)(v1 + 6440) = (_DWORD)v240 - 781111722;
  v252 = (unint64_t)(-333269657
                          * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111722)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111722)) & 0x7FFFFFFF)) >> 16))) >> 24;
  LODWORD(v252) = ((103
                                   * ((103 * (v188 ^ ((_BYTE)v240 + 86))) ^ ((-333269657
                                                                            * ((v188 ^ ((_DWORD)v240 - 781111722)) & 0x7FFFFFFF)) >> 16))) ^ v240[4027] ^ *(_BYTE *)(v239 + v252) ^ v241[v252 + 4] ^ (97 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111722)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111722)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ *(_BYTE *)(v242 + v252)) | (((_DWORD)v237 << 24) - 959846245 - (((_DWORD)v237 << 25) & 0x8C000000)) ^ 0xC6C9E89B;
  LODWORD(v236) = v252 - 959846245 - ((2 * v252) & 0x8D93D136);
  *(_DWORD *)(v1 + 6432) = (_DWORD)v240 - 781111719;
  v253 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111719)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111719)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v253) = (v240[4030] ^ *(_BYTE *)(v239 + (v253 >> 24)) ^ v241[(v253 >> 24) + 4] ^ *(_BYTE *)(v242 + (v253 >> 24)) ^ (103 * ((103 * (v188 ^ ((_BYTE)v240 + 89))) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111719)) & 0x7FFFFFFF)) >> 16))) ^ (97 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111719)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111719)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ 0xE2);
  LODWORD(v235) = ((_DWORD)v253 << 8) - 959846245 - (((_DWORD)v253 << 9) & 0x1D000);
  *(_DWORD *)(v1 + 6380) = (_DWORD)v240 - 781111721;
  v254 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111721)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111721)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v254) = v240[4028] ^ *(unsigned __int8 *)(v244 + (v254 >> 24)) ^ *(unsigned __int8 *)(v245 + (v254 >> 24)) ^ v254 ^ *(unsigned __int8 *)((v254 >> 24) + v246 + 3) ^ (-117 * (v254 >> 24)) ^ 0x9C;
  LODWORD(v228) = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9584) + ((v250 >> 27) ^ 0x9CLL)) ^ 0xDE;
  LODWORD(v247) = (((v247 ^ 0xC8) << 24) - 959846245 - (((v247 ^ 0xC8) << 25) & 0x8C000000)) ^ 0xC6C9E89B | v243;
  LODWORD(v236) = (((_DWORD)v228 << 16) - 959846245 - (((_DWORD)v228 << 17) & 0x1920000)) ^ 0xC6C9E89B | v236 ^ 0xC6C9E89B;
  LODWORD(v228) = v236 - 959846245 - ((2 * v236) & 0x8D93D136);
  LODWORD(v236) = (((_DWORD)v254 << 24) - 959846245 - (((_DWORD)v254 << 25) & 0x8C000000)) ^ 0xC6C9E89B | v235 ^ 0xC6C9E89B;
  LODWORD(v235) = v236 - 959846245 - ((2 * v236) & 0x8D93D136);
  *(_DWORD *)(v1 + 6408) = (_DWORD)v240 - 781111712;
  v255 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111712)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111712)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v237) = v240[4037] ^ *(unsigned __int8 *)(v244 + (v255 >> 24)) ^ *(unsigned __int8 *)(v245 + (v255 >> 24)) ^ *(unsigned __int8 *)((v255 >> 24) + v246 + 3) ^ v255 ^ (-117 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111712)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111712)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ 7;
  v256 = (v237 << 16) - 959846245 - (((_DWORD)v237 << 17) & 0x1920000);
  LODWORD(v254) = (v247 - 959846245 - ((2 * v247) & 0x8D93D136)) ^ 0xC6C9E8BA;
  *(_DWORD *)(v1 + 6344) = (_DWORD)v240 - 781111716;
  v257 = (unint64_t)(-333269657
                          * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111716)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111716)) & 0x7FFFFFFF)) >> 16))) >> 24;
  v258 = (char *)*(&off_1004ECA20 + (v238 ^ 0x1364)) - 4;
  v259 = (uint64_t)*(&off_1004ECA20 + v238 - 4313);
  v260 = (char *)*(&off_1004ECA20 + (v238 ^ 0x108F)) - 8;
  v261 = *(_QWORD *)(v1 + 9632);
  LODWORD(v257) = *(unsigned __int8 *)(v261
                                     + (((v258[v257] ^ v240[4033] ^ (103
                                                                                    * ((103 * (v188 ^ ((_BYTE)v240 + 92))) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111716)) & 0x7FFFFFFF)) >> 16))) ^ *(_BYTE *)(v257 + v259 + 1) ^ (-107 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111716)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111716)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ v260[v257])
                                                        - 66) ^ 0xCDLL));
  v262 = (v257 >> 2) | ((_DWORD)v257 << 6);
  LODWORD(v257) = *(unsigned __int8 *)(v261 + ((v251 - 66) ^ 0xCDLL));
  *(_DWORD *)(v1 + 6312) = (_DWORD)v240 - 781111718;
  v263 = (unint64_t)(-333269657
                          * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111718)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111718)) & 0x7FFFFFFF)) >> 16))) >> 24;
  LODWORD(v257) = v235 ^ 0xC6C9E89B | ((((v257 >> 2) | ((_BYTE)v257 << 6)) ^ 0xF5) << 16);
  LODWORD(v235) = ((103
                                   * ((103 * (v188 ^ ((_BYTE)v240 + 90))) ^ ((-333269657
                                                                            * ((v188 ^ ((_DWORD)v240 - 781111718)) & 0x7FFFFFFF)) >> 16))) ^ v240[4031] ^ (-107 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111718)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111718)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ v258[v263] ^ *(_BYTE *)(v263 + v259 + 1) ^ v260[v263]) ^ 0xF5;
  *(_DWORD *)(v1 + 9036) = (v257 | v235) - 959846245 - ((2 * (v257 | v235)) & 0x8D93D136);
  LOBYTE(v257) = (*(_DWORD *)(v1 + 8464) & 0x1A ^ 2) + (*(_DWORD *)(v1 + 8464) & 0x1A ^ 0x18);
  *(_DWORD *)(v1 + 6384) = (_DWORD)v240 - 781111711;
  v264 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111711)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111711)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v261) = v240[4038] ^ v257 ^ v258[v264 >> 24] ^ *(_BYTE *)((v264 >> 24) + v259 + 1) ^ v260[v264 >> 24] ^ (103 * ((103 * (v188 ^ ((_BYTE)v240 + 97))) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111711)) & 0x7FFFFFFF)) >> 16))) ^ (-107 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111711)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111711)) & 0x7FFFFFFF)) >> 16))) >> 24));
  *(_DWORD *)(v1 + 6416) = (_DWORD)v240 - 781111715;
  v265 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111715)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111715)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v237) = v240[4034] ^ v258[v265 >> 24] ^ *(_BYTE *)((v265 >> 24) + v259 + 1) ^ v260[v265 >> 24] ^ (103 * ((103 * (v188 ^ ((_BYTE)v240 + 93))) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111715)) & 0x7FFFFFFF)) >> 16))) ^ (-107 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111715)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111715)) & 0x7FFFFFFF)) >> 16))) >> 24)) ^ 0x2E;
  *(_DWORD *)(v1 + 6352) = (_DWORD)v240 - 781111710;
  v266 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111710)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111710)) & 0x7FFFFFFF)) >> 16));
  LOBYTE(v264) = *(_BYTE *)((v266 >> 24) + v259 + 1);
  LOBYTE(v251) = v240[4039];
  LOBYTE(v187) = v258[v266 >> 24];
  LOBYTE(v246) = v260[v266 >> 24];
  LODWORD(v245) = -107
                * ((-333269657
                  * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111710)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111710)) & 0x7FFFFFFF)) >> 16))) >> 24);
  v267 = ((v187 ^ v251 ^ (103
                                         * ((103 * (v188 ^ ((_BYTE)v240 + 98))) ^ ((-333269657
                                                                                  * ((v188 ^ ((_DWORD)v240 - 781111710)) & 0x7FFFFFFF)) >> 16))) ^ v264 ^ v246 ^ (-107 * ((-333269657 * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111710)) & 0x7FFFFFFF)) ^ ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111710)) & 0x7FFFFFFF)) >> 16))) >> 24))) | (v261 << 8))
       + (v256 ^ 0xC6C9E89B);
  *(_DWORD *)(v1 + 6400) = (_DWORD)v240 - 781111713;
  v268 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111713)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111713)) & 0x7FFFFFFF)) >> 16));
  LODWORD(v239) = v268 ^ v240[4036] ^ (97 * (v268 >> 24)) ^ *(unsigned __int8 *)(v239 + (v268 >> 24)) ^ v241[(v268 >> 24) + 4] ^ *(unsigned __int8 *)(v242 + (v268 >> 24)) ^ 0x34;
  *(_DWORD *)(v1 + 6320) = (_DWORD)v240 - 781111723;
  v269 = -333269657
       * ((-333269657 * ((v188 ^ ((_DWORD)v240 - 781111723)) & 0x7FFFFFFF)) ^ ((-333269657
                                                                                            * ((v188 ^ ((_DWORD)v240 - 781111723)) & 0x7FFFFFFF)) >> 16));
  v270 = v228 ^ 0xC6C9E89B | ((v240[4026] ^ v258[v269 >> 24] ^ *(_BYTE *)((v269 >> 24) + v259 + 1) ^ v260[v269 >> 24] ^ v269 ^ (-107 * BYTE3(v269)) ^ 0xB6) << 8);
  LODWORD(v241) = ((v262 ^ 0xC1) << 16) | (v237 << 8) | v254;
  LOBYTE(v237) = (v228 ^ 5) - v254 - v235;
  LODWORD(v235) = *(_DWORD *)(v1 + 8488) ^ *(_DWORD *)(v1 + 8496) ^ 0x2B31FE95;
  LODWORD(v239) = ((((_DWORD)v239 << 24) - 959846245 - (((_DWORD)v239 << 25) & 0x8C000000)) ^ 0xC6C9E89B | v267) ^ 0xFFFFFF92;
  LODWORD(v237) = ((v251 ^ v187 ^ v264 ^ v246 ^ v266 ^ v245 ^ 0xD6 ^ (v237 - 119)) - 67);
  *(_DWORD *)(v1 + 9416) = 16843009 * v237 - 1647973907 - ((33686018 * v237) & 0x3B8BD3DA);
  LODWORD(v237) = v235 + 1;
  LODWORD(v266) = -1690825187 * (v239 + v235 + 1) + ((-1690825187 * (v239 + v235 + 1)) >> 16);
  LODWORD(v266) = v266 - 959846245 - ((2 * v266) & 0x8D93D136);
  LODWORD(v235) = (v266 ^ 0xC6C9E89B) + ((v266 >> 8) ^ 0xFF393617) + 1;
  LODWORD(v228) = (v266 ^ 0xC6C9E89B) + (*(_DWORD *)(v1 + 8504) ^ 0x99999999);
  LODWORD(v266) = (v266 ^ 0x39361764) + ((v228 - 959846245 - ((2 * v228) & 0x8D93D136)) ^ 0xC6C9E89B) + 1;
  *(_DWORD *)(v1 + 8768) = v266 - 959846245 - ((2 * v266) & 0x8D93D136);
  LODWORD(v241) = ((_DWORD)v241 - ((2 * (_DWORD)v241 - 627401340) & 0x8D93D136) - 1273546915) ^ 0xC6C9E89B;
  LODWORD(v266) = ((v235 - 959846245 - ((2 * v235) & 0x8D93D136)) ^ 0xC6C9E89B) + 1;
  LODWORD(v241) = v266 + (((_DWORD)v241 - ((2 * (_DWORD)v241 + 627401340) & 0x8D93D136) - 646145575) ^ 0x39361764);
  LODWORD(v241) = (_DWORD)v241 - 959846245 - ((2 * (_DWORD)v241) & 0x8D93D136);
  v271 = v266
       + (v241 ^ 0x39361764)
       - 959846245
       - ((2 * (v266 + (v241 ^ 0x39361764))) & 0x8D93D136);
  *(_DWORD *)(v1 + 9520) = v271;
  LODWORD(v241) = -959846245
                - 1878951435 * (v241 ^ 0xC6C9E89B)
                - ((537064426 * (v241 ^ 0xC6C9E89B)) & 0x8D93D136);
  LODWORD(v241) = ((v241 >> 16) ^ 0xC6C9)
                + (v241 ^ 0xC6C9E89B)
                - 959846245
                - ((2 * (((v241 >> 16) ^ 0xC6C9) + (v241 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v241) = ((v241 >> 8) ^ 0xC6C9E8)
                + (v241 ^ 0xC6C9E89B)
                - 959846245
                - ((2 * (((v241 >> 8) ^ 0xC6C9E8) + (v241 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v235) = v241 & 0x11421A0 ^ 0x1140120 | v241 & 0x11421A0 ^ 0x940934D1;
  LODWORD(v241) = (v241 ^ 0xC6C9E89B) + (v270 ^ 0x89);
  LODWORD(v228) = (_DWORD)v241 + (*(_DWORD *)(v1 + 8628) ^ 0x5B0C0176);
  LODWORD(v241) = 1330584337 * (_DWORD)v241;
  *(_DWORD *)(v1 + 8628) = v228 - v235 * (_DWORD)v241 - 959846245 - ((2 * (v228 - v235 * (_DWORD)v241)) & 0x8D93D136);
  LODWORD(v235) = (_DWORD)v241 + (v241 >> 16) - ((v241 + (v241 >> 16)) >> 8);
  v272 = *(_DWORD *)(v1 + 9036) ^ 0xC6C9E89B;
  *(_DWORD *)(v1 + 8656) = *(_DWORD *)(v1 + 8520) ^ 0x5B0C0176 ^ (270036433 * (v235 + v272)) ^ (270036433
                                                                                              * (v235 + v272)
                                                                                              - 959846245
                                                                                              - ((540072866
                                                                                                * (v235 + v272)) & 0x8D93D136));
  LODWORD(v235) = *(_DWORD *)(v1 + 9568) ^ *(_DWORD *)(v1 + 9600);
  LODWORD(v239) = v235 + v239 + 1;
  LODWORD(v259) = v235 - v239 - 959846245 - ((2 * (v235 - v239)) & 0x8D93D136);
  *(_DWORD *)(v1 + 9248) = v259;
  LODWORD(v235) = (v271 ^ 0x39361764) + 1;
  LODWORD(v239) = -1878951435
                * (-1690825187 * v239
                 + ((-1690825187 * v239) >> 16)
                 - ((-1690825187 * (_DWORD)v239 + ((-1690825187 * v239) >> 16)) >> 8)
                 + v235);
  LODWORD(v239) = 1330584337
                * (v239
                 + WORD1(v239)
                 + (v270 ^ 0x89)
                 + ((unint64_t)(v239 + WORD1(v239)) >> (((v239 & 0xE8 ^ 0xE8) + (v239 & 0xE8)) & 0xF8 ^ 0xE0)));
  LODWORD(v239) = 270036433 * (v239 + WORD1(v239) + v272 - ((v239 + WORD1(v239)) >> 8));
  *(_DWORD *)(v1 + 9648) = *(_QWORD *)(v1 + 6160) ^ 0xC6C9E89B ^ (v239 + WORD1(v239)) ^ ((v239
                                                                                        + WORD1(v239)) >> 8);
  LODWORD(v237) = -1690825187 * ((v259 ^ 0x39361764) + v237)
                + ((-1690825187 * ((v259 ^ 0x39361764) + v237)) >> 16);
  v273 = -1878951435 * (v237 - (v237 >> 8) + v235);
  v274 = v273 & 0xB7596464;
  if (*(_DWORD *)(v1 + 9432) == -959846245)
    v274 = v273;
  v275 = v274 | v273 & 0x48A69B9B;
  v276 = v273 + HIWORD(v273) + ((v273 + HIWORD(v273)) >> 8);
  v277 = (v270 ^ 0xC6C9E812 ^ (v276 - 959846245 - ((2 * v276) & 0x8D93D136))) + 2 * (v276 & (v270 ^ 0x89));
  *(_DWORD *)(v1 + 9080) = v275
                         + *(_DWORD *)(v1 + 8544)
                         - v273
                         - 959846245
                         - ((2 * (v275 + *(_DWORD *)(v1 + 8544) - v273)) & 0x8D93D136);
  *(_DWORD *)(v1 + 9488) = v277 - v276 - 959846245 - ((2 * (v277 - v276)) & 0x8D93D136);
  v278 = 1330584337 * v277
       + ((1330584337 * v277) >> 16)
       - ((1330584337 * v277 + ((1330584337 * v277) >> 16)) >> 8)
       + v272;
  *(_DWORD *)(v1 + 9264) = 270036433 * v278 - 959846245 - ((540072866 * v278) & 0x8D93D136);
  v279 = *(_DWORD *)(v1 + 8744);
  *(_DWORD *)(v1 + 7784) = v279 & 0x20202020 ^ 0x30101010;
  *(_DWORD *)(v1 + 7776) = v279 & 0x2D2D2D2C ^ 0xB79E9B92;
  v280 = *(_DWORD *)(v1 + 8512);
  v281 = *(_DWORD *)(v1 + 8984);
  *(_DWORD *)(v1 + 9472) = v281 ^ 0x8689A89A;
  v282 = *(_DWORD *)(v1 + 8760);
  *(_DWORD *)(v1 + 9448) = v282 ^ 0x1C3BBB12;
  v283 = *(_QWORD *)(v1 + 9672);
  *(_DWORD *)(v1 + 7584) = ((unint64_t)((v281 ^ 0x8689A89A) & (v280 & 0x2D2D2D2C ^ 0xB7BAB3B2)) >> v189) | ((unint64_t)((v282 ^ 0x1C3BBB12) & (v280 & 0x2D2D2D2C ^ 0xB7BAB3B2)) << v283);
  v284 = *(_DWORD *)(v1 + 8548);
  v285 = *(_DWORD *)(v1 + 7856);
  *(_DWORD *)(v1 + 7576) = (v284 & 0xDE ^ 0x1A | v284 & 0xDE ^ 0xC4) * ((v285 & 0x20 ^ 0x7B) + (v285 & 0x20));
  v286 = v280 & 0xB6B6B6B6 ^ 0x697F7DEF;
  *(_DWORD *)(v1 + 9116) = v286;
  v287 = *(_QWORD *)(v1 + 6520);
  v288 = (unint64_t)(v287 & v286) >> v189;
  v289 = *(_QWORD *)(v1 + 6496);
  v290 = v289 & v286;
  *(_QWORD *)(v1 + 9104) = v290;
  *(_DWORD *)(v1 + 7568) = v288 + (v290 << v283);
  v291 = *(_DWORD *)(v1 + 6504);
  *(_DWORD *)(v1 + 7832) = (2
                          * ((v291 & 0x5B5B5B5B ^ 0x1B1B5041) - ((2 * (v291 & 0x5B5B5B5B ^ 0x1B1B5041)) & 0x6A6B6B0))
                          - 2035351560) & 0xFFFFFFF7 ^ 0x59D190AF;
  LODWORD(v290) = (((v291 ^ 0xF0A040E0) & 0x50505050) << ((v289 ^ *(_DWORD *)(v1 + 8952)) & 1)) ^ 0x50505050;
  LODWORD(v290) = ((((unint64_t)(v290 & v289) << v283)
                  - 959846245
                  - ((2 * ((unint64_t)(v290 & v289) << v283)) & 0x8D93D136)) ^ 0xC6C9E89B)
                + ((unint64_t)(v290 & v287) >> v189);
  *(_DWORD *)(v1 + 8548) = v290 - 959846245 - ((2 * v290) & 0x8D93D136);
  *(_DWORD *)(v1 + 8532) = 1123395605 * (*(_DWORD *)(v1 + 7792) ^ 0x99999999)
                         - 959846245
                         - ((-2048176086 * (*(_DWORD *)(v1 + 7792) ^ 0x99999999)) & 0x8D93D136);
  v292 = *(_QWORD *)(v1 + 9704);
  *(_DWORD *)(v1 + 8544) = ((unint64_t)((v281 ^ 0xC0C0E090) & (v280 & 0xA0A0A0A0 ^ 0x707070F0)) >> v189) ^ ((unint64_t)((v282 ^ 0x5030F010) & (v280 & 0xA0A0A0A0 ^ 0x707070F0)) << v292);
  *(_DWORD *)(v1 + 7768) = ((v291 & 0x50505050 ^ 0x50004040) << (!(v284 & 1) + (v284 & 1))) ^ 0x50505050;
  v293 = *(_DWORD *)(v1 + 9504);
  LODWORD(v288) = (v293 & 0x50505050 ^ 0x4050) - ((2 * (v293 & 0x50505050 ^ 0x4050)) & 0x20200080) + 1016957926;
  *(_DWORD *)(v1 + 7752) = (2
                          * ((v288 & 0x286015C0 ^ 0x3600400) + (v288 ^ 0x2C17D3C7) - ((v288 ^ 0x2C17D3C7) & 0x206A15E1))) ^ 0x7B06BD0;
  *(_DWORD *)(v1 + 7744) = v285 & 0x20202020 | 0x10101010;
  LODWORD(v290) = (2 * ((v291 & 0x10101010 ^ 0x10) - (v279 & 0x20000000)) - 1576320422) & 0xE0202020 ^ 0x90101030;
  *(_DWORD *)(v1 + 7736) = v290;
  LODWORD(v288) = ((unint64_t)((v281 ^ 0xC0002010) & v290) >> v189) ^ ((unint64_t)(v290 & v289) << v283);
  *(_DWORD *)(v1 + 8520) = v288 - 959846245 - ((2 * v288) & 0x8D93D136);
  *(_DWORD *)(v1 + 8504) = (-166714639 * *(_DWORD *)(v1 + 8536)
                          + 1501089967
                          - ((-333429278 * *(_DWORD *)(v1 + 8536)) & 0xB2F1A15E)) ^ 0xA6872F50;
  *(_DWORD *)(v1 + 7728) = v280 & 0x1C1C1C1C ^ 0x1E020A1A;
  LODWORD(v288) = v279 & 0x1C1C1C1C ^ 0x1E16120A;
  v294 = (v282 ^ 0x1C1A1A12) & v288;
  v295 = *(_QWORD *)(v1 + 7952);
  v296 = v295 & v288;
  v297 = v292;
  v298 = v294 << v292;
  *(_QWORD *)(v1 + 7560) = v296;
  *(_QWORD *)(v1 + 7552) = v298;
  *(_DWORD *)(v1 + 8536) = ((v296 >> v189) | v298) - 959846245 - ((2 * ((v296 >> v189) | v298)) & 0x8D93D136);
  *(_DWORD *)(v1 + 7824) = v280 & 0x9C9C9C9C ^ 0x5E424ADA;
  v299 = v279 & 0x9C9C9C9C ^ 0xDE56D2CA;
  *(_DWORD *)(v1 + 7720) = v299;
  LODWORD(v292) = v280 & 0x79797978 ^ 0x8DD4DD8C;
  *(_DWORD *)(v1 + 7712) = v292;
  LODWORD(v296) = (v279 ^ 0x16CE285E) & 0xC80A6154 ^ 0xEA93879B ^ (-2
                                                                 - ((~((v279 ^ 0x16CE285E) & 0xB173182C) | 0x4B839793)
                                                                  + ((v279 ^ 0x16CE285E) & 0x1031000 | 0xB47C686C)));
  LODWORD(v296) = v296 - ((2 * v296) & 0x1C8FB948) + 239590564;
  *(_DWORD *)(v1 + 8496) = v296 ^ 0x72FB4108;
  LODWORD(v296) = v296 & 0xDE8EF30E ^ 0x848CA000 ^ (v296 ^ 0x72FB4108) & (v282 ^ 0x82B5081D);
  v300 = (unint64_t)(((v296 | 0xC942DD49) - (v296 | 0x36BD22B6) + 918364854) ^ 0x1F443C41) << v297;
  *(_DWORD *)(v1 + 8488) = v300 - 959846245 - ((2 * v300) & 0x8D93D136);
  LODWORD(v300) = (v280 ^ 0x24D1E6A4) & 0x3B64F832 ^ 0x5D63E8B ^ (((2 * (v280 ^ 0x24D1E6A4)) & 0x80280080)
                                                                - ((v280 ^ 0x24D1E6A4) & 0x421D814A)
                                                                + 130793355);
  LODWORD(v300) = ((2 * v300) | 0x906CC9A6) - v300 - 1211524307;
  LODWORD(v298) = v300 & 0x9E8FEDBD ^ 0x12C9D ^ (v281 ^ 0x58460526) & (v300 ^ 0xE7AE587F);
  *(_QWORD *)(v1 + 7544) = (((2 * (_DWORD)v298) & 0x79B97D1A) - (_DWORD)v298 - 1021099662) ^ 0x45AC25D2u;
  *(_QWORD *)(v1 + 8480) = v300 & 0x52F406E3 ^ 0x42A40063 ^ (v282 ^ 0xECFFDF0) & (v300 ^ 0xE7AE587F);
  v301 = *(_DWORD *)(v1 + 8980);
  v302 = (v301 ^ 0xFD6D58EC) & v292;
  *(_DWORD *)(v1 + 7704) = v301 ^ 0xFD6D58EC;
  *(_QWORD *)(v1 + 7536) = v302;
  *(_DWORD *)(v1 + 8464) = (v302 >> v189) - 959846245 - ((2 * (v302 >> v189)) & 0x8D93D136);
  v303 = v279 & 0x8080808 ^ 0x40C0C04;
  *(_DWORD *)(v1 + 8456) = ((unint64_t)((v301 ^ 0xC0C080C) & v303) >> v189) ^ ((unint64_t)(v289 & v303) << v283);
  LODWORD(v302) = ((2 * (v293 & 0x4040404 ^ 0x40004)) | 0x273FE016) - (v293 & 0x4040404 ^ 0x40004) + 1818234869;
  LODWORD(v302) = (2 * ((v302 & 0x6C9CFC46 ^ 0x6C800C40) + (v302 ^ 0x911FF11F) - ((v302 ^ 0x911FF11F) & 0x6C9CFC44))) & 0xFBFBFBFA ^ 0xDC3DFEAC;
  *(_DWORD *)(v1 + 7688) = v281 ^ 0xC6C9E89A;
  *(_DWORD *)(v1 + 8432) = v282 ^ 0x5C3BFB12;
  *(_DWORD *)(v1 + 7532) = ((unint64_t)((v281 ^ 0xC6C9E89A) & v302) >> v189) ^ ((unint64_t)((v282 ^ 0x5C3BFB12) & v302) << v297);
  *(_DWORD *)(v1 + 8952) = v279 & 0x8E8E8E8E ^ 0xC54DCBC1;
  v304 = v280 & 0x8E8E8E8E ^ 0x454B41C3;
  LODWORD(v302) = (8
                 * (((v291 & 0xD4D4D4D4 ^ 0x50940400)
                   + (v291 & 0x10800444 ^ 0x23000B4E)
                   - ((v291 & 0xD4D4D4D4 ^ 0x50940400) & 0x10800444)) >> 2)) ^ 0x67209F18;
  *(_DWORD *)(v1 + 6304) = -1919692496;
  LODWORD(v302) = (v302 - 959846245 - ((2 * v302) & 0x8D93D130)) ^ 0x121D3C4F;
  *(_DWORD *)(v1 + 7672) = v302;
  *(_DWORD *)(v1 + 8392) = (v302 & v295) - 959846245 - ((2 * (v302 & v295)) & 0x8D93D136);
  v305 = v280;
  *(_DWORD *)(v1 + 8384) = v282 ^ 0x5C39F910;
  *(_DWORD *)(v1 + 8400) = ((unint64_t)((v301 ^ 0xFD6D58EC) & (v280 & 0xA9A9A9A8 ^ 0xF5FCF574)) >> v189) | ((unint64_t)((v282 ^ 0x5C39F910) & (v280 & 0xA9A9A9A8 ^ 0xF5FCF574)) << v283);
  v306 = v280 & 0xA4A4A4A4 ^ 0x727676F6;
  *(_DWORD *)(v1 + 8376) = v306 + *(_DWORD *)(v1 + 9696) + ((2 * v306) & 0x9014100 ^ 0x7B7F7FDB);
  LODWORD(v302) = v279 & 0xA4A4A4A4 ^ 0xF252D6D6;
  v307 = (unint64_t)((v282 ^ 0x5432F212) & v302) << v297;
  *(_DWORD *)(v1 + 7512) = ((unint64_t)(v295 & v302) >> v189) + v307;
  *(_DWORD *)(v1 + 8332) = v281 ^ 0xC6C0E092;
  *(_DWORD *)(v1 + 7500) = ((unint64_t)((v281 ^ 0xC6C0E092) & v302) >> v189) | v307;
  v308 = v280 & 0xF0F0F0E ^ 0x848B8083;
  v309 = v308;
  *(_DWORD *)(v1 + 7664) = v308;
  *(_QWORD *)(v1 + 7488) = v280 & 0x3090D06 ^ 0x80090082 ^ (v301 ^ 0xE060708) & v308;
  v310 = v279 & 0xF0F0F0E ^ 0x848D8A81;
  *(_DWORD *)(v1 + 7656) = v310;
  *(_DWORD *)(v1 + 7484) = ((unint64_t)((v301 ^ 0x3D2F1A2E) & (v280 & 0x2A2A2A2A ^ 0x373D3735u)) >> v189) | ((unint64_t)((v282 ^ 0x1C3B3B13) & (v280 & 0x2A2A2A2A ^ 0x373D3735u)) << v283);
  *(_DWORD *)(v1 + 8764) = v301 & 0x5BCC77E0 ^ 0x2802500 | v301 & 0x5BCC77E0 ^ 0x594C52E0;
  LODWORD(v289) = v279 & 0x2A2A2A2A ^ 0x371F1D17;
  *(_DWORD *)(v1 + 7476) = ((unint64_t)((v301 ^ 0x3D2F1A2E) & v289) >> v189) | ((unint64_t)((v282 ^ 0x1C3B3B13) & v289) << v297);
  *(_QWORD *)(v1 + 8368) = (((v282 ^ 0x84825A4A) & v299 ^ v279 & 0x98988018 ^ 0xB80000)
                          - (((v282 ^ 0x84825A4A) & v299 ^ v279 & 0x98988018) & 0x9804D84E)
                          + (((v282 ^ 0x84825A4A) & v299 ^ v279 & 0x98988018) & 0x9804D84E ^ 0xB905D84E)) ^ 0x61AD5806;
  *(_DWORD *)(v1 + 8360) = v281 ^ 0xC6C8C89A;
  *(_DWORD *)(v1 + 8356) = v282 ^ 0x5C1ADA12;
  LODWORD(v298) = *(_DWORD *)(v1 + 7824);
  v311 = (v281 ^ 0xC6C8C89A) & v298;
  *(_QWORD *)(v1 + 7464) = v311;
  LODWORD(v302) = (v311 >> v189) | ((unint64_t)((v282 ^ 0x5C1ADA12) & v298) << v297);
  LODWORD(v302) = *(_DWORD *)(v1 + 7848) ^ (v302 - 959846245 - ((2 * v302) & 0x8D93D136));
  *(_DWORD *)(v1 + 7460) = v302 - 959846245 - ((2 * v302) & 0x8D93D136);
  *(_DWORD *)(v1 + 7648) = v279 & 0x79797978 ^ 0xCDE4A5FC;
  LODWORD(v292) = *(_DWORD *)(v1 + 7856);
  LODWORD(v311) = v292 & 0x8080808 | 0x4040404;
  *(_DWORD *)(v1 + 7696) = v303;
  *(_DWORD *)(v1 + 7456) = v303 - 959846245 - ((2 * v303) & 0x8101010);
  *(_DWORD *)(v1 + 7452) = ((((v282 ^ 0x800080C) & v311 & 0x40C080C ^ (v292 & 0x80008 | 0x230104) | (v282 ^ 0x800080C) & v311 & 0x8000400) ^ 0x4230100) << v283)
                         + ((unint64_t)((v301 ^ 0xC0C080C) & v311) >> v189);
  *(_DWORD *)(v1 + 8352) = v281 ^ 0x4080808;
  *(_DWORD *)(v1 + 7448) = ((unint64_t)((v281 ^ 0x4080808) & v311) >> v189) | ((unint64_t)((v282 ^ 0xC080800) & v311) << v283);
  *(_DWORD *)(v1 + 7680) = v304;
  v312 = (unint64_t)((v281 ^ 0xC6C9C88B) & v304) >> v189;
  *(_QWORD *)(v1 + 7440) = v312;
  LODWORD(v298) = v312 ^ ((unint64_t)((v282 ^ 0x4C0BCB03) & v304) << v297);
  *(_DWORD *)(v1 + 7436) = v298 - 959846245 - ((2 * v298) & 0x8D93D136);
  LODWORD(v298) = *(_DWORD *)(v1 + 8952);
  v313 = (unint64_t)((v281 ^ 0xC6C9C88B) & v298) >> v189;
  v314 = *(_QWORD *)(v1 + 6496);
  v315 = v314 & v298;
  *(_DWORD *)(v1 + 7432) = v313 | (v315 << v283);
  *(_DWORD *)(v1 + 8344) = (v313 ^ (v315 << v297)) - 959846245 - ((2 * (v313 ^ (v315 << v297))) & 0x8D93D136);
  *(_DWORD *)(v1 + 7424) = (v280 & 8 ^ 0xBE) + (v280 & 8);
  v316 = *(_DWORD *)(v1 + 9504);
  LODWORD(v313) = ((v316 & 0xD4D4D4D4 ^ 0x549004D4) - ((2 * (v316 & 0xD4D4D4D4 ^ 0x549004D4)) & 0x8908A8A8) - 307931779) ^ 0xA98D5579;
  *(_DWORD *)(v1 + 7640) = (2 * (((2 * v313) & 0x227C3CA0) - v313) + 1568916314) ^ 0x890F3F8E;
  LODWORD(v313) = (v291 & 0xC4945080 ^ 0x653E432B) + (v291 & 0x10408454 ^ 0x10008045) - 2;
  LODWORD(v313) = 2 * ((v313 & 0x4D054B0 ^ 0x405410) + (v313 ^ 0xEC9C2AA6) - ((v313 ^ 0xEC9C2AA6) & 0xDF05C90));
  *(_DWORD *)(v1 + 7632) = v313 ^ 0x5D7937A4;
  LODWORD(v313) = v313 & 0x45DBBDE2 ^ 0x58A3980 ^ (v313 ^ 0x5D7937A4) & (v301 ^ 0xB8B4E70C);
  *(_QWORD *)(v1 + 7416) = (v313 - ((2 * (_DWORD)v313) & 0xA5EE8238) + 1391935773) ^ 0x12244D3D;
  *(_DWORD *)(v1 + 7408) = ((unint64_t)((v281 ^ 0xC6C0E092) & v306) >> v189) ^ ((unint64_t)((v282 ^ 0x5432F212) & v306) << v297);
  *(_DWORD *)(v1 + 7520) = v306;
  LODWORD(v313) = (v281 ^ 0x46248090) & v306 ^ (v280 & 0x80A42000 | 0x71105949);
  LODWORD(v313) = v313 - ((2 * v313) & 0xAEC8C682) - 681221311;
  *(_DWORD *)(v1 + 6592) = v313 ^ 0x60D8B291;
  *(_DWORD *)(v1 + 7404) = ((unint64_t)(v313 ^ 0xA6115A0A) >> v189)
                         - 959846245
                         - ((2 * ((unint64_t)(v313 ^ 0xA6115A0A) >> v189)) & 0x8D93D136);
  LODWORD(v313) = (*(_DWORD *)(v1 + 8608) & 0x52525252 ^ 0x101200) + (*(_DWORD *)(v1 + 8608) & 0x52525252 ^ 0x52424052);
  v317 = v279;
  LODWORD(v315) = (v279 & 0x240480 ^ 0x2200789) + (v279 & 0xA480A024 ^ 0xA4488001) - 2;
  *(_DWORD *)(v1 + 6584) = v315 ^ 0xC0A1EB97;
  LODWORD(v313) = v315 ^ 0xC0A1EB97 ^ (v313 - 959846245 - ((2 * v313) & 0x8D81C124));
  v318 = (v313 & v314 & 0xE7D76BE2 ^ 0xE7912962) + (v313 & v314 ^ 0x6E4280) - ((v313 & v314 ^ 0x6E4280) & 0xE7D76BE2);
  v319 = *(_QWORD *)(v1 + 7952);
  LODWORD(v313) = v319 & v313;
  LODWORD(v312) = v313 & 0x90386A18 ^ 0x80182001;
  *(_QWORD *)(v1 + 8320) = v318 ^ 0xE7B92962;
  *(_DWORD *)(v1 + 8328) = v312 - 1;
  LODWORD(v313) = (v312 - 1) | v313 & 0x6FC795E7;
  *(_DWORD *)(v1 + 6576) = v313 ^ 0x46D1C89B;
  *(_QWORD *)(v1 + 7392) = v313 ^ 0x80182000;
  *(_DWORD *)(v1 + 7624) = v315 & 0xA4A4A4A4 ^ 0x56725256;
  *(_DWORD *)(v1 + 8308) = v305 & 0x20202020;
  v320 = v305 & 0x18080814;
  *(_DWORD *)(v1 + 8424) = v305 & 0x39580828;
  *(_DWORD *)(v1 + 8312) = v305 & 0x8080808;
  v321 = v305 & 0x50E06;
  *(_QWORD *)(v1 + 7384) = ((((v301 ^ 0xB050F09) & v309 ^ v305 & 0x60A0506) & 0x8184890E ^ 0x8184E829)
                          + (((v301 ^ 0xB050F09) & v309 ^ v305 & 0x60A0506) & 0xE0B0681)
                          - 1) ^ 0x58EE8AB;
  v322 = *(_QWORD *)(v1 + 6520);
  *(_DWORD *)(v1 + 8512) = (v322 & v310) - 959846245 - ((2 * (v322 & v310)) & 0xD131116);
  LODWORD(v313) = (v316 & 0x87878787 ^ 0x2070685 | 0x7BCD7900)
                - (v316 & 0x87878787 ^ 0x2070685 | 0x843286FF)
                - 2077063425;
  LODWORD(v313) = (2 * ((v313 & 0x1A91997A ^ 0xA009172) + (v313 ^ 0xD1FD6C0C) - ((v313 ^ 0xD1FD6C0C) & 0x1AB1997A))) ^ 0xE1869565;
  v323 = v314;
  *(_DWORD *)(v1 + 8304) = (v314 & v313) - 959846245 - ((2 * (v314 & v313)) & 0x8D93D136);
  *(_DWORD *)(v1 + 8300) = (v319 & v313) - 959846245 - ((2 * (v319 & v313)) & 0x8D93D136);
  LODWORD(v313) = 2 * (((2 * (v291 & 0x87878787 ^ 0x6820084)) | 0x38A75796) - (v291 & 0x87878787 ^ 0x6820084))
                - 950491030;
  *(_DWORD *)(v1 + 7380) = v313 ^ 0xB12EDC1F;
  LODWORD(v315) = (v301 ^ 0x37AFF3A3) & (v313 ^ 0xB12EDC1F) ^ v313 & 0xCAC0A94C;
  v324 = v313 & 0xD1CAA11A;
  *(_QWORD *)(v1 + 7368) = ((v315 & 0x2FE598ED ^ 0x25E598E9) + (v315 & 0xD01A6712 ^ 0x40000101) - 1) ^ 0xE5E511E4;
  *(_DWORD *)(v1 + 7364) = v316 ^ 0x189602DA;
  LODWORD(v313) = ((v316 & 0x15151515 ^ 0x15100505)
                 + (v316 & 0x15151501 ^ 0x60EDF8CA)
                 - ((v316 & 0x15151515 ^ 0x15100505) & 0x15151501)) ^ 0xF9593B27;
  LODWORD(v313) = ((2 * v313) & 0xE240FB8A) - v313 + 249528890;
  *(_DWORD *)(v1 + 6568) = v313 ^ 0x40B6B858;
  LODWORD(v313) = 2 * v313;
  LODWORD(v312) = v313 & 0xEAEAEAEA ^ 0x1DFFB597;
  v325 = v281 ^ 0x2010;
  *(_DWORD *)(v1 + 8260) = v281 ^ 0x608081A;
  *(_DWORD *)(v1 + 9504) = v281 ^ 0xC4C9E898;
  *(_DWORD *)(v1 + 8280) = v281 ^ 0xC6C9E09A;
  *(_DWORD *)(v1 + 8264) = v281 ^ 0x8689888B;
  *(_DWORD *)(v1 + 8272) = v281 ^ 0x609281B;
  LODWORD(v313) = v313 & 0x2C24042 ^ 0x4425046 ^ (v281 ^ 0xD01ABCDD) & v312;
  LODWORD(v313) = (v313 | 0x1E48D867) - (v313 | 0xE1B72798) - 508090472;
  *(_DWORD *)(v1 + 6560) = v313 ^ 0xC81074BC;
  v326 = v313 ^ 0xED99C27;
  *(_DWORD *)(v1 + 7360) = v312;
  LOBYTE(v309) = v297;
  *(_QWORD *)(v1 + 7352) = v326;
  LODWORD(v313) = (v326 >> v189) | ((unint64_t)(v314 & v312) << v297);
  *(_DWORD *)(v1 + 8608) = v313 - 959846245 - ((2 * v313) & 0x8D93D136);
  v327 = v282 ^ 0x10303010;
  *(_DWORD *)(v1 + 8236) = v282 ^ 0x5C3BF312;
  *(_DWORD *)(v1 + 8288) = v282 ^ 0xC0B8B03;
  LODWORD(v326) = v301 ^ 0x30201020;
  *(_DWORD *)(v1 + 8196) = v301 ^ 0xF0201020;
  *(_DWORD *)(v1 + 8240) = v301 ^ 0x1D6F5AEE;
  *(_DWORD *)(v1 + 8212) = v301 ^ 0xDC4E5ACE;
  v328 = v301 ^ 0xCD4F4ACE;
  *(_DWORD *)(v1 + 8232) = v301 ^ 0x8D0F0A8E;
  LODWORD(v295) = v317 & 0x202022 ^ 0x117C2F76 ^ (v301 ^ 0x390B2F19) & v289;
  LODWORD(v295) = ((2 * v295) & 0x16E0065C) - v295 - 1265632175;
  v329 = (unint64_t)(v317 & 0xA0A0A08 ^ 0x70E1804 ^ (v282 ^ 0x1335211F) & v289) << v283;
  v330 = v329 - 959846245 - ((2 * v329) & 0x8D93D136);
  *(_DWORD *)(v1 + 6544) = v295 ^ 0x673E2EAB;
  *(_DWORD *)(v1 + 6552) = v330;
  LODWORD(v329) = ((unint64_t)(v295 ^ 0xA1F7C630) >> v189) + (v330 ^ 0xC6C9E89B);
  *(_DWORD *)(v1 + 7344) = v329 - 959846245 - ((2 * v329) & 0x8D93D136);
  LODWORD(v329) = v289 - ((2 * v289) & 0x4105014) - 1094195079;
  *(_DWORD *)(v1 + 6536) = v329;
  LODWORD(v329) = v329 ^ 0xC6C9E89B;
  *(_DWORD *)(v1 + 7336) = v329;
  v331 = v322;
  *(_DWORD *)(v1 + 7328) = (v322 & v329) - 959846245 - ((2 * (v322 & v329)) & 0xD93D136);
  *(_DWORD *)(v1 + 8980) = (2 * ((1893829877 - *(_DWORD *)(v1 + 8764)) & *(_DWORD *)(v1 + 8964))) ^ 0x15151515;
  *(_DWORD *)(v1 + 7912) = 787 * (*(_DWORD *)(v1 + 7864) ^ 0x1317);
  *(_DWORD *)(v1 + 7320) = v320 ^ 0x1A000A12;
  *(_DWORD *)(v1 + 7312) = *(_DWORD *)(v1 + 8424) ^ 0x525FC73D;
  *(_DWORD *)(v1 + 7304) = v317 & 0xA9A9A9A8 ^ 0xA1088980;
  *(_DWORD *)(v1 + 7296) = v321 ^ 0x55A40;
  *(_DWORD *)(v1 + 7288) = v317 & 0x21113800 ^ 0x23022C00;
  *(_DWORD *)(v1 + 7280) = v317 & 0x2840282 ^ 0x412430C1;
  *(_DWORD *)(v1 + 7272) = v324 ^ 0x51C2A018;
  v332 = *(_DWORD *)(v1 + 8872);
  v333 = *(_DWORD *)(v1 + 6488);
  *(_DWORD *)(v1 + 8760) = v333 ^ *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 8764) = v333 ^ *(_DWORD *)(v1 + 9128);
  *(_DWORD *)(v1 + 8408) = v333 ^ *(_DWORD *)(v1 + 9148);
  v334 = v333 ^ *(_DWORD *)(v1 + 9156);
  *(_DWORD *)(v1 + 8744) = v333 ^ *(_DWORD *)(v1 + 8800);
  *(_DWORD *)(v1 + 8984) = v333 ^ *(_DWORD *)(v1 + 8748);
  *(_DWORD *)(v1 + 8616) ^= v333;
  *(_DWORD *)(v1 + 8416) = v333 ^ *(_DWORD *)(v1 + 8752);
  *(_DWORD *)(v1 + 9256) ^= v333;
  *(_DWORD *)(v1 + 8424) = v333 ^ *(_DWORD *)(v1 + 8612);
  *(_DWORD *)(v1 + 8612) = *(_DWORD *)(v1 + 9496) ^ 0xC6C9E89B;
  v335 = *(_DWORD *)(v1 + 8308) ^ 0x30303030;
  v336 = v325 & v335;
  LOBYTE(v291) = v283;
  v337 = (unint64_t)(v327 & v335) << v283;
  *(_QWORD *)(v1 + 7256) = v336;
  *(_QWORD *)(v1 + 7248) = v337;
  v338 = (v336 >> v189) ^ v337;
  *(_DWORD *)(v1 + 7264) = v335;
  v339 = v326 & v335;
  *(_QWORD *)(v1 + 7232) = v326 & *(_DWORD *)(v1 + 7784);
  *(_QWORD *)(v1 + 7224) = (unint64_t)(v326 & *(_DWORD *)(v1 + 7744)) >> v189;
  *(_DWORD *)(v1 + 7216) = (*(_DWORD *)(v1 + 7920) ^ 0x4C447A70) + 1;
  v340 = *(_DWORD *)(v1 + 7776);
  *(_QWORD *)(v1 + 7208) = *(_DWORD *)(v1 + 9472) & v340;
  *(_QWORD *)(v1 + 7200) = (unint64_t)(*(_DWORD *)(v1 + 9448) & v340) << v283;
  *(_QWORD *)(v1 + 7192) = (unint64_t)(*(_DWORD *)(v1 + 7832) & v322) >> v189;
  v341 = v319;
  *(_QWORD *)(v1 + 7184) = v319 & *(_DWORD *)(v1 + 9116);
  LOBYTE(v329) = v309;
  *(_QWORD *)(v1 + 7176) = *(_QWORD *)(v1 + 9104) << v309;
  *(_QWORD *)(v1 + 7168) = (unint64_t)(v322 & *(_DWORD *)(v1 + 7768)) >> v189;
  *(_DWORD *)(v1 + 7160) = *(_DWORD *)(v1 + 8532) ^ 0xC6C9E89B;
  v342 = (unint64_t)(*(_DWORD *)(v1 + 8196) & *(_DWORD *)(v1 + 7736)) >> v189;
  *(_DWORD *)(v1 + 7152) = *(_DWORD *)(v1 + 8504) + 1;
  LODWORD(v319) = *(_DWORD *)(v1 + 7728);
  *(_QWORD *)(v1 + 7144) = (unint64_t)(*(_DWORD *)(v1 + 8260) & v319) >> v189;
  LODWORD(v283) = *(_DWORD *)(v1 + 9552);
  *(_QWORD *)(v1 + 8800) = (unint64_t)(*(_DWORD *)(v1 + 8212) & *(_DWORD *)(v1 + 7824)) >> v189;
  LODWORD(v336) = *(_DWORD *)(v1 + 7720);
  *(_QWORD *)(v1 + 7136) = (unint64_t)(*(_DWORD *)(v1 + 8356) & v336) << v309;
  *(_QWORD *)(v1 + 7128) = *(_DWORD *)(v1 + 8360) & v336;
  *(_QWORD *)(v1 + 7112) = (unint64_t)(v341 & v336) >> v189;
  LODWORD(v322) = *(_DWORD *)(v1 + 7712);
  v343 = *(_DWORD *)(v1 + 8384) & v322;
  *(_QWORD *)(v1 + 7104) = *(_DWORD *)(v1 + 8496) & v331;
  *(_DWORD *)(v1 + 7096) = *(_DWORD *)(v1 + 8488) ^ 0xC6C9E89B;
  *(_QWORD *)(v1 + 7088) = *(_QWORD *)(v1 + 8480) << v291;
  *(_DWORD *)(v1 + 7080) = *(_DWORD *)(v1 + 8464) ^ 0xC6C9E89B;
  LOBYTE(v327) = v291;
  LODWORD(v337) = *(_DWORD *)(v1 + 9504);
  *(_QWORD *)(v1 + 7072) = v343 << v291;
  LODWORD(v343) = ((unint64_t)(v337 & v322) >> v189) ^ (v343 << v291);
  LODWORD(v336) = *(_DWORD *)(v1 + 8312) ^ 0x40C0404;
  *(_DWORD *)(v1 + 7064) = v336;
  v344 = *(_DWORD *)(v1 + 8352) & v336;
  *(_QWORD *)(v1 + 7048) = v328 & *(_DWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 7040) = v328 & *(_DWORD *)(v1 + 7680);
  v345 = *(_DWORD *)(v1 + 7672);
  *(_QWORD *)(v1 + 7032) = (unint64_t)(v345 & v323) << v309;
  *(_QWORD *)(v1 + 7024) = *(_DWORD *)(v1 + 8392) ^ 0xC6C9E89B;
  v346 = *(_DWORD *)(v1 + 8376) ^ 0xC6C9E89B;
  *(_QWORD *)(v1 + 7008) = *(_DWORD *)(v1 + 8280) & v346;
  *(_DWORD *)(v1 + 7020) = v346;
  *(_QWORD *)(v1 + 7000) = (unint64_t)(*(_DWORD *)(v1 + 8236) & v346) << v327;
  v347 = *(_DWORD *)(v1 + 7664);
  *(_QWORD *)(v1 + 6992) = (unint64_t)(*(_DWORD *)(v1 + 8232) & v347) >> v189;
  LODWORD(v336) = *(_DWORD *)(v1 + 7656);
  *(_QWORD *)(v1 + 6984) = *(_DWORD *)(v1 + 8264) & v336;
  LODWORD(v312) = *(_DWORD *)(v1 + 8288);
  *(_QWORD *)(v1 + 6976) = (unint64_t)(v312 & v336) << v329;
  *(_DWORD *)(v1 + 7480) = v289;
  *(_QWORD *)(v1 + 6968) = (unint64_t)(*(_DWORD *)(v1 + 8272) & v289) >> v189;
  *(_QWORD *)(v1 + 6960) = (unint64_t)(*(_QWORD *)(v1 + 8560) & *(_DWORD *)(v1 + 7944)) << v189;
  *(_QWORD *)(v1 + 6952) = *(_QWORD *)(v1 + 8368) << v329;
  v348 = *(_DWORD *)(v1 + 7648);
  v349 = v337 & v348;
  v350 = *(_DWORD *)(v1 + 7456) ^ 0xC6C9E89B;
  *(_QWORD *)(v1 + 6936) = v341 & v350;
  LODWORD(v289) = v323;
  v351 = (unint64_t)(v350 & v323) << v329;
  v352 = *(_DWORD *)(v1 + 7640);
  *(_QWORD *)(v1 + 6928) = (unint64_t)(*(_DWORD *)(v1 + 8432) & v352) << v327;
  *(_QWORD *)(v1 + 6920) = (unint64_t)(*(_DWORD *)(v1 + 7632) & *(_DWORD *)(v1 + 7688)) >> v189;
  *(_QWORD *)(v1 + 6912) = *(_QWORD *)(v1 + 8320) << v329;
  *(_QWORD *)(v1 + 6904) = (unint64_t)(*(_DWORD *)(v1 + 8332) & *(_DWORD *)(v1 + 7624)) >> v189;
  LODWORD(v336) = *(_DWORD *)(v1 + 8328) & 0x10;
  *(_QWORD *)(v1 + 6888) = (unint64_t)(v312 & v347) << v327;
  *(_QWORD *)(v1 + 6880) = (unint64_t)(*(_DWORD *)(v1 + 8512) ^ 0xC6C9E89B) >> v189;
  *(_QWORD *)(v1 + 6872) = (unint64_t)(*(_DWORD *)(v1 + 8304) ^ 0xC6C9E89B) << v327;
  *(_QWORD *)(v1 + 6864) = *(_DWORD *)(v1 + 8300) ^ 0xC6C9E89B;
  *(_QWORD *)(v1 + 6856) = *(_DWORD *)(v1 + 8240) & v319;
  LODWORD(v326) = *(_DWORD *)(v1 + 8980);
  *(_QWORD *)(v1 + 6848) = v326 & v341;
  *(_QWORD *)(v1 + 6840) = (unint64_t)(v326 & v289) << v329;
  *(_QWORD *)(v1 + 7240) = v339;
  LODWORD(v337) = *(_DWORD *)(v1 + 7848);
  *(_DWORD *)(v1 + 6832) = (v339 >> v189) ^ v337;
  LODWORD(v312) = *(_DWORD *)(v1 + 9600);
  *(_DWORD *)(v1 + 6828) = v337 ^ v338;
  *(_DWORD *)(v1 + 6824) = v337 ^ *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 6816) = v337 ^ *(_DWORD *)(v1 + 8544);
  *(_DWORD *)(v1 + 6812) = v342 ^ v337;
  *(_DWORD *)(v1 + 6800) = *(_DWORD *)(v1 + 8520) ^ 0xC6C9E89B ^ v337;
  *(_DWORD *)(v1 + 6788) = *(_DWORD *)(v1 + 8536) ^ 0xC6C9E89B;
  LODWORD(v329) = v337 ^ v343;
  LODWORD(v343) = *(_DWORD *)(v1 + 9520);
  *(_DWORD *)(v1 + 6784) = v329;
  *(_DWORD *)(v1 + 6776) = v337 ^ *(_DWORD *)(v1 + 8456);
  *(_DWORD *)(v1 + 6768) = v337 ^ *(_DWORD *)(v1 + 8400);
  *(_DWORD *)(v1 + 6760) = v351 ^ v337;
  *(_DWORD *)(v1 + 6756) = v337 ^ *(_DWORD *)(v1 + 8344);
  *(_QWORD *)(v1 + 6744) = v341 & v340;
  *(_QWORD *)(v1 + 6736) = v341 & *(_DWORD *)(v1 + 7832);
  *(_QWORD *)(v1 + 6728) = v341 & *(_DWORD *)(v1 + 7752);
  *(_QWORD *)(v1 + 6720) = v341 & *(_DWORD *)(v1 + 7696);
  *(_QWORD *)(v1 + 6712) = v345 & v331;
  *(_QWORD *)(v1 + 6944) = v349;
  v353 = v349 >> v189;
  LODWORD(v349) = *(_DWORD *)(v1 + 9488);
  *(_QWORD *)(v1 + 6704) = v353;
  *(_QWORD *)(v1 + 6696) = *(_DWORD *)(v1 + 7704) & v348;
  *(_QWORD *)(v1 + 7056) = v344;
  *(_QWORD *)(v1 + 6680) = v344 >> v189;
  *(_QWORD *)(v1 + 6672) = v341 & *(_DWORD *)(v1 + 8952);
  *(_QWORD *)(v1 + 6664) = v341 & v352;
  *(_DWORD *)(v1 + 6896) = v336;
  v354 = v336 ^ 0x18;
  LODWORD(v336) = *(_DWORD *)(v1 + 9248);
  *(_QWORD *)(v1 + 6656) = v354;
  *(_QWORD *)(v1 + 6648) = *(_DWORD *)(v1 + 7328) ^ 0xC6C9E89B;
  *(_DWORD *)(v1 + 9600) = v312;
  LODWORD(v339) = *(_DWORD *)(v1 + 9544);
  *(_DWORD *)(v1 + 9552) = v339;
  LODWORD(v337) = (v336 ^ 0x39361764) + 1;
  v355 = (*(_DWORD *)(v1 + 9568) ^ v312) + v337;
  LODWORD(v351) = -1690825187 * v355 + ((-1690825187 * v355) >> 16);
  *(_DWORD *)(v1 + 8332) = v351;
  LODWORD(v354) = v351 >> ((29 * v355) & 8) >> ((29 * v355) & 8 ^ (*(_DWORD *)(v1 + 7912) - 87));
  *(_DWORD *)(v1 + 9504) = (v343 ^ 0x39361764) + 1;
  LODWORD(v354) = -1878951435 * (v351 + (v343 ^ 0x39361764) + 1 - v354)
                + ((-1878951435 * (v351 + (v343 ^ 0x39361764) + 1 - v354)) >> 16);
  v356 = v349 ^ 0xC6C9E89B;
  LODWORD(v354) = 1330584337
                * (((v354 - 959846245 - ((2 * v354) & 0x8D93D136)) ^ 0xC6C9E89B)
                 + (v349 ^ 0xC6C9E89B)
                 + ((((_DWORD)v354 - 959846245 - ((2 * (_DWORD)v354) & 0x8D93D136)) >> 8) ^ 0xC6C9E8));
  LODWORD(v326) = v354 + WORD1(v354) - 959846245 - ((2 * (v354 + WORD1(v354))) & 0x8D93D136);
  *(_DWORD *)(v1 + 8384) = v326;
  *(_DWORD *)(v1 + 8392) = v326 ^ 0xC6C9E89B;
  LODWORD(v354) = (v326 ^ 0xC6C9E89B) + ((v326 >> 8) ^ 0xFF393617) + 1;
  v357 = v354 - 959846245 - ((2 * v354) & 0x8D93D136);
  LODWORD(v342) = *(_DWORD *)(v1 + 9036);
  LODWORD(v289) = v342 ^ 0xC6C9E89B;
  v358 = v357 ^ 0xC6C9E89B;
  *(_DWORD *)(v1 + 8288) = v342 ^ 0xC6C9E89B;
  LODWORD(v354) = 270036433 * (v358 + v289) - 959846245 - ((540072866 * (v358 + v289)) & 0x8D93D136);
  LODWORD(v354) = (WORD1(v354) ^ 0xC6C9)
                + (v354 ^ 0xC6C9E89B)
                - 959846245
                - ((2 * ((WORD1(v354) ^ 0xC6C9) + (v354 ^ 0xC6C9E89B))) & 0x8D93D136);
  v359 = *(_QWORD *)(v1 + 6160);
  LODWORD(v344) = v354 ^ v359 ^ (v354 >> 8);
  *(_DWORD *)(v1 + 9496) = v344;
  LODWORD(v326) = 8 * *(_DWORD *)(v1 + 9648);
  *(_DWORD *)(v1 + 8304) = v326;
  *(_DWORD *)(v1 + 9248) = v336;
  *(_DWORD *)(v1 + 9488) = (-2
                          - ((~((v326 ^ 0x3FB47A76) & 0xE413255A) | 0x74F9356D)
                           + ((v326 ^ 0x3FB47A76) & 0x64112548 | 0x8B06CA92))) ^ (v326 ^ 0x3FB47A76) & 0xE4132542;
  *(_DWORD *)(v1 + 8328) = 8 * v344;
  LODWORD(v354) = (((2 * (((((8 * v344) ^ 0xCF86F467) + 1) ^ 0xB8BDC9E6) & 0x509D0642)) | 0xC4449228)
                 - (((((8 * v344) ^ 0xCF86F467) + 1) ^ 0xB8BDC9E6) & 0x509D0642)
                 + 501069548) ^ ((((8 * v344) ^ 0xCF86F467) + 1) ^ 0xB8BDC9E6) & 0x509D065A;
  *(_DWORD *)(v1 + 9472) = (v354 & 0x737369B0 ^ 0x14020A1) + (v354 ^ 0xF2BF4956) - ((v354 ^ 0xF2BF4956) & 0x737369B1);
  LODWORD(v344) = v334 ^ 0xC6C9E89B;
  LODWORD(v326) = (v332 ^ 0x39361764) + (v334 ^ 0xC6C9E89B) + 1;
  LODWORD(v354) = v336 ^ 0xC6C9E89B;
  v360 = -1946542023 * (v326 + (v336 ^ 0xC6C9E89B));
  LOBYTE(v312) = ((57 * (v326 + (v336 ^ 0x9B))) & 0x38 ^ 0x38) + ((57 * (v326 + (v336 ^ 0x9B))) & 0x38);
  LODWORD(v336) = -1946542023
                * ((((v332 ^ 0x39361764) + (v334 ^ 0xC6C9E89B) - 959846244 - ((2 * v326) & 0x8D93D136)) ^ 0xC6C9E89B)
                 + (v336 ^ 0xC6C9E89B));
  LODWORD(v336) = v336 + WORD1(v336) - ((v336 + WORD1(v336)) >> 8);
  LODWORD(v336) = v336 - 959846245 - ((2 * v336) & 0x8D93D136);
  LODWORD(v349) = ((v336 ^ 0xC6C9E89B) + v356 - 959846245 - ((2 * ((v336 ^ 0xC6C9E89B) + v356)) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_QWORD *)(v1 + 8872) = v360;
  LODWORD(v312) = (v360 >> (v312 & 0x40 | 0x10)) + v360;
  v361 = ((v336 ^ 0x39361764) + v349 - 959846244 - ((2 * ((v336 ^ 0x39361764) + v349 + 1)) & 0x8D93D136)) ^ 0xC6C9E89B;
  LODWORD(v351) = v361 + v312 - (v312 >> 8);
  *(_DWORD *)(v1 + 8344) = v351;
  LODWORD(v351) = v351 * ((v339 & 0xE0BA630B ^ 0xC088600B) + (v339 & 0xE0BA630B ^ 0x20320300));
  *(_DWORD *)(v1 + 8356) = v351;
  LODWORD(v312) = v351 - WORD1(v351) - ((v351 - WORD1(v351)) >> 8);
  LODWORD(v339) = (v342 ^ 0x39361764) + 1;
  LODWORD(v312) = -286953925 * ((v312 - 959846245 - ((2 * v312) & 0x8D93D136)) ^ v343);
  v362 = v312 ^ WORD1(v312) ^ ((v312 ^ WORD1(v312)) >> 8);
  v363 = v362 + v339 - 959846245 - ((2 * (v362 + v339)) & 0x8D93D136);
  LODWORD(v336) = ((2 * ((v283 ^ 0xC6C9E89B) - 1491815001)) & 0xB1D694B2)
                + (((v283 ^ 0xC6C9E89B) - 1491815001) ^ 0x58EB4A59);
  v365 = v336 - 959846245 - ((2 * v336) & 0x8D93D136);
  LODWORD(v283) = ((v326 & 0xB48DB63D ^ 0xA2100802) - ((2 * (v326 & 0xB48DB63D ^ 0xA2100802)) & 0x108584C) - 930861978) ^ 0x6A942464 | v326;
  v366 = v283 + (v332 ^ 0xC6C9E89B) - 959846245 - ((2 * (v283 + (v332 ^ 0xC6C9E89B))) & 0x8D93D136);
  v367 = v344 - v283 - 959846245 - ((2 * (v344 - v283)) & 0x8D93D136);
  LODWORD(v326) = -959846245 - 524655861 * v349 - ((-1049311722 * v349) & 0x8D93D136);
  *(_DWORD *)(v1 + 8320) = v326;
  LODWORD(v349) = (v326 ^ 0xC6C9E89B) + 1;
  *(_DWORD *)(v1 + 8312) = v349;
  LODWORD(v344) = ((v349
                  + (WORD1(v326) ^ 0xFFFF3936)
                  - ((2 * (v349 + (WORD1(v326) ^ 0xFFFF3936)) - 1752138404) & 0x8D93D136)
                  - 1835915447) ^ 0xC6C9E89B)
                + 876069202;
  LODWORD(v344) = -286953925
                * ((v344
                  - (v344 >> 8)
                  - 959846245
                  - ((2 * (v344 - (v344 >> 8))) & 0x8D93D136)) ^ v343);
  LODWORD(v344) = 1111274701 * ((v344 ^ WORD1(v344) ^ ((v344 ^ WORD1(v344)) >> 8)) + v339);
  LODWORD(v344) = v344 + WORD1(v344) - ((v344 + WORD1(v344)) >> 8);
  LODWORD(v344) = ((v344 - 959846245 - ((2 * v344) & 0x8D93D136)) ^ 0xC6C9E89B) + v359;
  v368 = v344 - 959846245 - ((2 * v344) & 0x8D93D136);
  v369 = *(_DWORD *)(v1 + 9392);
  v370 = v354 + 1;
  LODWORD(v354) = -1946542023 * ((v369 ^ 0xC6C9E89B) + (*(_DWORD *)(v1 + 9656) ^ 0x39361764) + v354 + 1);
  v371 = v354 + WORD1(v354) - ((v354 + WORD1(v354)) >> 8);
  *(_DWORD *)(v1 + 8300) = v356;
  LODWORD(v354) = -524655861 * (v371 + v356) - ((-524655861 * (v371 + v356)) >> 16);
  LODWORD(v354) = (v354 - (v354 >> 8)) ^ v343;
  v372 = v343;
  *(_DWORD *)(v1 + 9520) = v343;
  v373 = *(_DWORD *)(v1 + 9696);
  *(_DWORD *)(v1 + 9448) = v354 ^ 0xC6C9E89B ^ *(_DWORD *)(v1 + 8992) ^ (((v354 & 0x2681936E ^ 0xDFFFEC9B)
                                                                        + v373
                                                                        + ((2
                                                                          * ((v354 & 0x2681936E ^ 0xDFFFEC9B) & 0x681800E ^ (v354 | 0x7FFFFFFB))) ^ 0x8090D12B)) ^ 0xC6C9E89B) & (v354 ^ 0xC6C9E89B);
  *(_DWORD *)(v1 + 9384) = (*(_DWORD *)(v1 + 9384) ^ 0xC6C9E89B)
                         - 959846245
                         - ((2 * (*(_DWORD *)(v1 + 9384) ^ 0xC6C9E89B)) & 0x8D93D136);
  v374 = v355 ^ *(_DWORD *)(v1 + 9456) ^ (v355 - 959846245 - ((2 * v355) & 0x8D93D136));
  v375 = *(_DWORD *)(v1 + 9172);
  LODWORD(v351) = -959846245
                - 1690825187 * ((*(_DWORD *)(v1 + 9296) ^ v375) + v337)
                - ((913316922 * ((*(_DWORD *)(v1 + 9296) ^ v375) + v337)) & 0x8D93D136);
  LODWORD(v351) = (WORD1(v351) ^ 0xC6C9)
                + (v351 ^ 0xC6C9E89B)
                - 959846245
                - ((2 * ((WORD1(v351) ^ 0xC6C9) + (v351 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v351) = (v343 ^ 0x39361764) + (v351 ^ 0xC6C9E89B) + ((v351 >> 8) ^ 0xFF393617) + 2;
  LODWORD(v351) = -959846245 - 1878951435 * v351 - ((537064426 * v351) & 0x8D93D136);
  LODWORD(v351) = (WORD1(v351) ^ 0xC6C9)
                + (v351 ^ 0xC6C9E89B)
                + v356
                + (((WORD1(v351) ^ 0xC6C9) + (v351 ^ 0xC6C9E89B)) >> 8);
  LODWORD(v351) = 1330584337 * v351 - 959846245 - ((-1633798622 * v351) & 0x8D93D136);
  LODWORD(v351) = (WORD1(v351) ^ 0xC6C9)
                + (v351 ^ 0xC6C9E89B)
                - 959846245
                - ((2 * ((WORD1(v351) ^ 0xC6C9) + (v351 ^ 0xC6C9E89B))) & 0x8D93D136);
  LODWORD(v351) = (v351 ^ 0xC6C9E89B) + ((v351 >> 8) ^ 0xFF393617) + 1;
  LODWORD(v351) = 270036433 * (((v351 - 959846245 - ((2 * v351) & 0x8D93D136)) ^ 0xC6C9E89B) + v289);
  v376 = v351 + WORD1(v351) - 959846245 - ((2 * (v351 + WORD1(v351))) & 0x8D93D136);
  v377 = ~v376 & 0x10;
  LODWORD(v339) = *(_DWORD *)(v1 + 9052);
  v449 = (v377 & v339) == 0;
  v378 = v376 ^ v339;
  if (!v449)
    v377 = -v377;
  v379 = (v377 + v378) ^ (v376 | 0x10);
  v380 = (*(_DWORD *)(v1 + 9012) ^ 0xC6C9E89B)
       + (v357 ^ 0x39361764)
       + ((((v357 & 0x24B28328 ^ 0xDFCDFCDF) - ((2 * (v357 & 0x24B28328 ^ 0xDFCDFCDF)) & 0x9010010) + 1110906741) ^ 0xC6C9E89B) & v358)
       + 1;
  v381 = v380 - 959846245 - ((2 * v380) & 0x8D93D136);
  v364 = (v363 & 0x256EE0D6 ^ 0xDED9FFBB) - 959846245 - ((2 * (v363 & 0x256EE0D6 ^ 0xDED9FFBB)) & 0x8D93D136);
  v382 = v362
       - ((v364 ^ 0xC6C9E89B) & (v363 ^ 0xC6C9E89B))
       - 959846245
       - ((2 * (v362 - ((v364 ^ 0xC6C9E89B) & (v363 ^ 0xC6C9E89B)))) & 0x8D93D136);
  v383 = 1111274701 * (v363 ^ 0xC6C9E89B) + ((1111274701 * (v363 ^ 0xC6C9E89B)) >> 16);
  v384 = v383 - (v383 >> 8) + v359 - 959846245 - ((2 * (v383 - (v383 >> 8) + v359)) & 0x8D93D136);
  v385 = -524655861 * (v361 + v371) - ((-524655861 * (v361 + v371)) >> 16);
  v386 = -286953925 * ((v385 - (v385 >> 8) - 959846245 - ((2 * (v385 - (v385 >> 8))) & 0x8D93D136)) ^ v372);
  v387 = v386 ^ HIWORD(v386) ^ ((v386 ^ HIWORD(v386)) >> 8);
  *(_DWORD *)(v1 + 9544) = v382;
  v388 = (v382 ^ 0x39361764) + 1;
  *(_DWORD *)(v1 + 8264) = v388;
  v389 = v388 + v387 - 959846245 - ((2 * (v388 + v387)) & 0x8D93D136);
  v390 = ((((v387 | 0xB811E6F3) + v373 + ((2 * v387) & 0x8D901010 ^ 0xFFFC3ED9)) ^ 0xC6C9E89B) & v387)
       + (*(_DWORD *)(v1 + 9688) ^ 0xC6C9E89B)
       - v387;
  v391 = v390 - 959846245 - ((2 * v390) & 0x8D93D136);
  v392 = (v389 ^ 0xC6C9E89B)
       + (*(_DWORD *)(v1 + 9512) ^ 0xC6C9E89B)
       + 1588439035 * (v389 ^ 0xC6C9E89B) * ((v382 & 0x423CB4CD ^ 0x341444) + (v382 & 0x423CB4CD ^ 0x4208A089));
  *(_DWORD *)(v1 + 9036) = v392 - 959846245 - ((2 * v392) & 0x8D93D136);
  v393 = -1946542023 * ((v367 ^ 0x39361764) + v370 + (v366 ^ 0xC6C9E89B));
  v394 = v393 + HIWORD(v393) - ((v393 + HIWORD(v393)) >> 8);
  v395 = v394 - 959846245 - ((2 * v394) & 0x8D93D136);
  v396 = v361 + (v395 ^ 0xC6C9E89B);
  *(_DWORD *)(v1 + 0x2000) = v396;
  v397 = (*(_DWORD *)(v1 + 9552) ^ 0xC6C9E89B) - 959846245 - ((2 * (*(_DWORD *)(v1 + 9552) ^ 0xC6C9E89B)) & 0x8D93D136);
  v398 = (v365 ^ 0xC6C9E89B) - 959846245 - 2 * ((v365 ^ 0xC6C9E89B) & 0x46C9E89F ^ v365 & 4);
  v399 = (*(_DWORD *)(v1 + 9008) ^ 0xC6C9E89B) - 959846245 - ((2 * (*(_DWORD *)(v1 + 9008) ^ 0xC6C9E89B)) & 0x8D93D136);
  v400 = (v368 ^ 0xC6C9E89B) + (*(_DWORD *)(v1 + 9360) ^ 0xC6C9E89B);
  *(_DWORD *)(v1 + 8308) = v400;
  v401 = v400 - 959846245 - ((2 * v400) & 0x8D93D136);
  *(_DWORD *)(v1 + 9052) = v401;
  v402 = v374 - 959846245 - ((2 * v374) & 0x8D93D136);
  *(_DWORD *)(v1 + 9456) = v384 ^ 0xC6C9E89B;
  v403 = (v384 ^ 0xC6C9E89B) - (*(_DWORD *)(v1 + 9648) ^ 0xC6C9E89B);
  v404 = *(_DWORD *)(v1 + 9648) ^ 0xC6C9E89B;
  v405 = *(_DWORD *)(v1 + 9064);
  if ((v403 & 1) != 0)
    v406 = v397;
  else
    v406 = *(_DWORD *)(v1 + 9064);
  *(_DWORD *)(v1 + 9360) = v406;
  v407 = *(_DWORD *)(v1 + 9432);
  if ((v403 & 1) != 0)
    v408 = v405;
  else
    v408 = *(_DWORD *)(v1 + 9432);
  *(_DWORD *)(v1 + 9012) = v408;
  v409 = *(_DWORD *)(v1 + 9056);
  if ((v403 & 1) != 0)
    v410 = v407;
  else
    v410 = *(_DWORD *)(v1 + 9056);
  *(_DWORD *)(v1 + 9064) = v410;
  if ((v403 & 1) != 0)
    v411 = v409;
  else
    v411 = v397;
  *(_DWORD *)(v1 + 8560) = v411;
  v412 = *(_DWORD *)(v1 + 8792);
  if ((v403 & 1) != 0)
    v413 = *(_DWORD *)(v1 + 8792);
  else
    v413 = v402;
  *(_DWORD *)(v1 + 9512) = v413;
  if ((v403 & 1) != 0)
    v414 = v402;
  else
    v414 = v399;
  *(_DWORD *)(v1 + 8432) = v414;
  v415 = *(_DWORD *)(v1 + 9616);
  if ((v403 & 1) != 0)
    v416 = *(_DWORD *)(v1 + 9616);
  else
    v416 = v412;
  *(_DWORD *)(v1 + 8792) = v416;
  if ((v403 & 1) != 0)
    v415 = v399;
  *(_DWORD *)(v1 + 9264) = v415;
  v417 = *(_DWORD *)(v1 + 8628);
  if ((v403 & 1) != 0)
    v418 = v369;
  else
    v418 = *(_DWORD *)(v1 + 8628);
  *(_DWORD *)(v1 + 8236) = v418;
  if ((v403 & 1) != 0)
    v419 = v375;
  else
    v419 = v369;
  *(_DWORD *)(v1 + 8536) = v419;
  v420 = *(_DWORD *)(v1 + 9192);
  if ((v403 & 1) != 0)
    v421 = *(_DWORD *)(v1 + 9192);
  else
    v421 = v375;
  *(_DWORD *)(v1 + 9392) = v421;
  if ((v403 & 1) != 0)
    v420 = v417;
  *(_DWORD *)(v1 + 8272) = v420;
  v422 = *(_DWORD *)(v1 + 9320);
  if ((v403 & 1) != 0)
    v423 = v366;
  else
    v423 = *(_DWORD *)(v1 + 9320);
  *(_DWORD *)(v1 + 8992) = v423;
  v424 = *(_DWORD *)(v1 + 9568);
  if ((v403 & 1) != 0)
    v425 = *(_DWORD *)(v1 + 9568);
  else
    v425 = v366;
  *(_DWORD *)(v1 + 9128) = v425;
  v426 = *(_DWORD *)(v1 + 8648);
  if ((v403 & 1) != 0)
    v424 = *(_DWORD *)(v1 + 8648);
  *(_DWORD *)(v1 + 8520) = v424;
  if ((v403 & 1) != 0)
    v427 = v422;
  else
    v427 = v426;
  *(_DWORD *)(v1 + 8456) = v427;
  v428 = *(_DWORD *)(v1 + 9272);
  v429 = *(_DWORD *)(v1 + 9184);
  if ((v403 & 1) != 0)
    v430 = *(_DWORD *)(v1 + 9184);
  else
    v430 = *(_DWORD *)(v1 + 9272);
  *(_DWORD *)(v1 + 8628) = v430;
  v431 = *(_DWORD *)(v1 + 9376);
  if ((v403 & 1) == 0)
    v428 = *(_DWORD *)(v1 + 9376);
  *(_DWORD *)(v1 + 9008) = v428;
  v432 = *(_DWORD *)(v1 + 8920);
  if ((v403 & 1) == 0)
    v431 = *(_DWORD *)(v1 + 8920);
  *(_DWORD *)(v1 + 9376) = v431;
  if ((v403 & 1) != 0)
    v433 = v432;
  else
    v433 = v429;
  *(_DWORD *)(v1 + 8280) = v433;
  v434 = *(_DWORD *)(v1 + 9256);
  v435 = *(_DWORD *)(v1 + 8688);
  if ((v403 & 1) != 0)
    v436 = *(_DWORD *)(v1 + 9256);
  else
    v436 = *(_DWORD *)(v1 + 8688);
  *(_DWORD *)(v1 + 8920) = v436;
  v437 = *(_DWORD *)(v1 + 8888);
  if ((v403 & 1) != 0)
    v438 = v435;
  else
    v438 = *(_DWORD *)(v1 + 8888);
  *(_DWORD *)(v1 + 8240) = v438;
  v439 = *(_DWORD *)(v1 + 9024);
  if ((v403 & 1) != 0)
    v440 = v437;
  else
    v440 = *(_DWORD *)(v1 + 9024);
  *(_DWORD *)(v1 + 8688) = v440;
  if ((v403 & 1) != 0)
    v441 = v439;
  else
    v441 = v434;
  *(_DWORD *)(v1 + 9024) = v441;
  *(_DWORD *)(v1 + 8400) = v404;
  *(_DWORD *)(v1 + 9104) = v403;
  v442 = v403 - v404 - 959846245;
  v443 = v442 - ((2 * (v403 - v404)) & 0x8D93D136);
  v444 = ((2 * (v442 & 1 ^ 0x8B02B91B)) & 0x16014016) - (v442 & 1 ^ 0x8B02B91B);
  if ((v403 & 2) != 0)
    v445 = v416;
  else
    v445 = v414;
  *(_DWORD *)(v1 + 9688) = v445;
  if ((v403 & 2) != 0)
    v446 = v425;
  else
    v446 = v427;
  *(_DWORD *)(v1 + 9056) = v446;
  if ((v403 & 2) != 0)
    v447 = v436;
  else
    v447 = v440;
  *(_DWORD *)(v1 + 8980) = v447;
  if ((v403 & 2) != 0)
    v448 = v438;
  else
    v448 = v441;
  *(_DWORD *)(v1 + 8648) = v448;
  v449 = v444 == -1963030790;
  v450 = *(_DWORD *)(v1 + 9400);
  v451 = *(_DWORD *)(v1 + 9384);
  if (v449)
    v452 = *(_DWORD *)(v1 + 9384);
  else
    v452 = *(_DWORD *)(v1 + 9400);
  *(_DWORD *)(v1 + 9552) = v452;
  if (!v449)
    v450 = v381;
  *(_DWORD *)(v1 + 9432) = v450;
  if (v449)
    v453 = v379;
  else
    v453 = v451;
  *(_DWORD *)(v1 + 9320) = v453;
  if (v449)
    v454 = v381;
  else
    v454 = v379;
  *(_DWORD *)(v1 + 9152) = v454;
  v455 = *(_DWORD *)(v1 + 9448);
  if (v449)
    v456 = *(_DWORD *)(v1 + 9448);
  else
    v456 = v391;
  *(_DWORD *)(v1 + 9400) = v456;
  v457 = *(_DWORD *)(v1 + 9480);
  if (v449)
    v455 = *(_DWORD *)(v1 + 9480);
  *(_DWORD *)(v1 + 8188) = v455;
  v458 = *(_DWORD *)(v1 + 9560);
  if (v449)
    v457 = *(_DWORD *)(v1 + 9560);
  *(_DWORD *)(v1 + 9256) = v457;
  if (v449)
    v458 = v391;
  *(_DWORD *)(v1 + 9560) = v458;
  v459 = *(_DWORD *)(v1 + 9136);
  v460 = *(_DWORD *)(v1 + 8764);
  if (v449)
    v461 = *(_DWORD *)(v1 + 8764);
  else
    v461 = *(_DWORD *)(v1 + 9136);
  *(_DWORD *)(v1 + 9384) = v461;
  v462 = *(_DWORD *)(v1 + 9040);
  if (!v449)
    v459 = *(_DWORD *)(v1 + 9040);
  *(_DWORD *)(v1 + 8532) = v459;
  v463 = *(_DWORD *)(v1 + 8760);
  if (!v449)
    v462 = *(_DWORD *)(v1 + 8760);
  *(_DWORD *)(v1 + 9192) = v462;
  if (v449)
    v464 = v463;
  else
    v464 = v460;
  *(_DWORD *)(v1 + 8548) = v464;
  v465 = *(_DWORD *)(v1 + 8768);
  if (v449)
    v466 = v398;
  else
    v466 = *(_DWORD *)(v1 + 8768);
  *(_DWORD *)(v1 + 9568) = v466;
  v467 = *(_DWORD *)(v1 + 9016);
  if (v449)
    v468 = *(_DWORD *)(v1 + 9016);
  else
    v468 = v398;
  *(_DWORD *)(v1 + 9184) = v468;
  v469 = *(_DWORD *)(v1 + 9200);
  if (!v449)
    v465 = *(_DWORD *)(v1 + 9200);
  *(_DWORD *)(v1 + 9116) = v465;
  if (v449)
    v467 = v469;
  *(_DWORD *)(v1 + 9172) = v467;
  v470 = *(_DWORD *)(v1 + 9280);
  v471 = *(_DWORD *)(v1 + 8640);
  if (v449)
    v472 = *(_DWORD *)(v1 + 9280);
  else
    v472 = *(_DWORD *)(v1 + 8640);
  *(_DWORD *)(v1 + 9040) = v472;
  v473 = *(_DWORD *)(v1 + 8616);
  if (v449)
    v470 = *(_DWORD *)(v1 + 8616);
  *(_DWORD *)(v1 + 9200) = v470;
  v474 = *(_DWORD *)(v1 + 8736);
  if (v449)
    v473 = *(_DWORD *)(v1 + 8736);
  *(_DWORD *)(v1 + 9136) = v473;
  if (v449)
    v474 = v471;
  *(_DWORD *)(v1 + 9016) = v474;
  v475 = *(_DWORD *)(v1 + 9304);
  v476 = *(_DWORD *)(v1 + 8672);
  if (v449)
    v477 = *(_DWORD *)(v1 + 8672);
  else
    v477 = *(_DWORD *)(v1 + 9304);
  *(_DWORD *)(v1 + 8764) = v477;
  v478 = *(_DWORD *)(v1 + 9288);
  if (!v449)
    v475 = *(_DWORD *)(v1 + 9288);
  *(_DWORD *)(v1 + 8760) = v475;
  v479 = *(_DWORD *)(v1 + 8696);
  if (!v449)
    v478 = *(_DWORD *)(v1 + 8696);
  *(_DWORD *)(v1 + 8752) = v478;
  if (!v449)
    v479 = v476;
  *(_DWORD *)(v1 + 8748) = v479;
  v480 = *(_DWORD *)(v1 + 9312);
  v481 = *(_DWORD *)(v1 + 8632);
  if (v449)
    v482 = *(_DWORD *)(v1 + 9312);
  else
    v482 = *(_DWORD *)(v1 + 8632);
  v483 = *(_DWORD *)(v1 + 9224);
  if (v449)
    v480 = *(_DWORD *)(v1 + 9224);
  *(_DWORD *)(v1 + 8768) = v480;
  v484 = *(_DWORD *)(v1 + 8612);
  if (v449)
    v485 = *(_DWORD *)(v1 + 8612);
  else
    v485 = v483;
  if (v449)
    v484 = v481;
  *(_DWORD *)(v1 + 9224) = v484;
  v486 = v443 ^ 0xC6C9E89B;
  *(_DWORD *)(v1 + 9304) = (v443 ^ 0xC6C9E89B) - v404;
  v487 = *(_DWORD *)(v1 + 9328);
  v488 = *(_DWORD *)(v1 + 8784);
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v489 = *(_DWORD *)(v1 + 8784);
  else
    v489 = *(_DWORD *)(v1 + 9328);
  *(_DWORD *)(v1 + 9280) = v489;
  v490 = *(_DWORD *)(v1 + 9368);
  if (((v486 - v404) & 1) != 0)
    v491 = v487;
  else
    v491 = *(_DWORD *)(v1 + 9368);
  *(_DWORD *)(v1 + 8352) = v491;
  v492 = *(_DWORD *)(v1 + 8776);
  if (((v486 - v404) & 1) != 0)
    v493 = *(_DWORD *)(v1 + 8776);
  else
    v493 = v488;
  *(_DWORD *)(v1 + 8368) = v493;
  if (((v486 - v404) & 1) != 0)
    v494 = v490;
  else
    v494 = v492;
  *(_DWORD *)(v1 + 8360) = v494;
  v495 = *(_DWORD *)(v1 + 8840);
  if (((v486 - v404) & 1) != 0)
    v496 = *(_DWORD *)(v1 + 8984);
  else
    v496 = *(_DWORD *)(v1 + 8840);
  v497 = *(_DWORD *)(v1 + 8744);
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v498 = *(_DWORD *)(v1 + 8744);
  else
    v498 = *(_DWORD *)(v1 + 8984);
  *(_DWORD *)(v1 + 8888) = v498;
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v499 = *(_DWORD *)(v1 + 8664);
  else
    v499 = v497;
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v500 = v495;
  else
    v500 = *(_DWORD *)(v1 + 8664);
  *(_DWORD *)(v1 + 8376) = v500;
  v501 = (v395 ^ 0x39361764) + v396 - 959846244 - ((2 * ((v395 ^ 0x39361764) + v396 + 1)) & 0x8D93D136);
  *(_DWORD *)(v1 + 9272) = v501;
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v502 = *(_DWORD *)(v1 + 7592);
  else
    v502 = *(_DWORD *)(v1 + 8680);
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v503 = *(_DWORD *)(v1 + 8680);
  else
    v503 = *(_DWORD *)(v1 + 9536);
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v504 = *(_DWORD *)(v1 + 9536);
  else
    v504 = v367;
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v505 = v367;
  else
    v505 = *(_DWORD *)(v1 + 7592);
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v506 = *(_DWORD *)(v1 + 9080);
  else
    v506 = *(_DWORD *)(v1 + 9176);
  if ((((v443 ^ 0xC6C9E89B) - v404) & 1) != 0)
    v507 = *(_DWORD *)(v1 + 9528);
  else
    v507 = *(_DWORD *)(v1 + 9036);
  *(_DWORD *)(v1 + 8260) = v401 + 12;
  if ((v400 & 1) != 0)
    v508 = *(_DWORD *)(v1 + 9248);
  else
    v508 = *(_DWORD *)(v1 + 9520);
  *(_DWORD *)(v1 + 8196) = v508;
  if ((v400 & 1) != 0)
    v501 = *(_DWORD *)(v1 + 9544);
  *(_DWORD *)(v1 + 8212) = v501;
  v509 = *(_DWORD *)(v1 + 9472);
  v510 = v509 ^ 0xF3u;
  v511 = *(_DWORD *)(v1 + 9488) ^ 0x65u;
  if ((((_BYTE)v401 + 12) & 2) != 0)
    v512 = v501;
  else
    v512 = v508;
  v513 = *(_DWORD *)(v1 + 9488) ^ 0x65;
  *(_QWORD *)(v1 + 9480) = v511;
  v514 = ((unint64_t)(v512 ^ 0xC6C9E89B) >> (v509 ^ 0xF3u)) + ((unint64_t)(v512 ^ 0xC6C9E89B) << v511);
  v515 = v514 - 959846245 - ((2 * v514) & 0x8D93D136);
  v516 = v509 ^ 0xA5278168;
  *(_DWORD *)(v1 + 9448) = v509 ^ 0xA5278168;
  if ((v509 ^ 0xA5278168) == 0xC6C9E89B)
    v515 = v512;
  *(_DWORD *)(v1 + 8232) = v515;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v517 = v506;
  else
    v517 = v507;
  *(_DWORD *)(v1 + 9156) = v517;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v518 = v507;
  else
    v518 = v506;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v519 = v505;
  else
    v519 = v503;
  *(_DWORD *)(v1 + 8544) = v519;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v520 = v503;
  else
    v520 = v505;
  *(_DWORD *)(v1 + 9616) = v520;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v521 = v502;
  else
    v521 = v504;
  *(_DWORD *)(v1 + 8496) = v521;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v522 = v504;
  else
    v522 = v502;
  *(_DWORD *)(v1 + 8612) = v522;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v523 = v496;
  else
    v523 = v499;
  *(_DWORD *)(v1 + 8480) = v523;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v524 = v499;
  else
    v524 = v496;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v525 = v491;
  else
    v525 = v493;
  *(_DWORD *)(v1 + 9536) = v525;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v526 = v489;
  else
    v526 = v494;
  *(_DWORD *)(v1 + 9328) = v526;
  if ((((v443 ^ 0x9B) - (_BYTE)v404) & 2) != 0)
    v527 = v500;
  else
    v527 = v498;
  *(_DWORD *)(v1 + 8736) = v527;
  v528 = *(_DWORD *)(v1 + 9432);
  v529 = *(_DWORD *)(v1 + 9320);
  if ((v443 & 2) != 0)
    v530 = *(_DWORD *)(v1 + 9320);
  else
    v530 = *(_DWORD *)(v1 + 9432);
  *(_DWORD *)(v1 + 9148) = v530;
  if ((v443 & 2) != 0)
    v531 = v528;
  else
    v531 = v529;
  *(_DWORD *)(v1 + 8784) = v531;
  v532 = *(_DWORD *)(v1 + 9552);
  v533 = *(_DWORD *)(v1 + 9152);
  if ((v443 & 2) != 0)
    v534 = *(_DWORD *)(v1 + 9552);
  else
    v534 = *(_DWORD *)(v1 + 9152);
  *(_DWORD *)(v1 + 9432) = v534;
  if ((v443 & 2) != 0)
    v535 = v533;
  else
    v535 = v532;
  *(_DWORD *)(v1 + 9320) = v535;
  v536 = *(_DWORD *)(v1 + 8548);
  v537 = *(_DWORD *)(v1 + 8532);
  if ((v443 & 2) != 0)
    v538 = *(_DWORD *)(v1 + 8532);
  else
    v538 = *(_DWORD *)(v1 + 8548);
  *(_DWORD *)(v1 + 8616) = v538;
  if ((v443 & 2) != 0)
    v539 = v536;
  else
    v539 = v537;
  *(_DWORD *)(v1 + 8488) = v539;
  v540 = *(_DWORD *)(v1 + 9400);
  v541 = *(_DWORD *)(v1 + 9256);
  if ((v443 & 2) != 0)
    v542 = *(_DWORD *)(v1 + 9256);
  else
    v542 = *(_DWORD *)(v1 + 9400);
  *(_DWORD *)(v1 + 9152) = v542;
  if ((v443 & 2) != 0)
    v543 = v540;
  else
    v543 = v541;
  *(_DWORD *)(v1 + 9552) = v543;
  v544 = *(_DWORD *)(v1 + 9384);
  v545 = *(_DWORD *)(v1 + 9192);
  if ((v443 & 2) != 0)
    v546 = *(_DWORD *)(v1 + 9384);
  else
    v546 = *(_DWORD *)(v1 + 9192);
  *(_DWORD *)(v1 + 8664) = v546;
  if ((v443 & 2) != 0)
    v547 = v545;
  else
    v547 = v544;
  *(_DWORD *)(v1 + 8548) = v547;
  v548 = *(_DWORD *)(v1 + 9184);
  v549 = *(_DWORD *)(v1 + 9116);
  if ((v443 & 2) != 0)
    v550 = *(_DWORD *)(v1 + 9184);
  else
    v550 = *(_DWORD *)(v1 + 9116);
  *(_DWORD *)(v1 + 9288) = v550;
  if ((v443 & 2) != 0)
    v551 = v549;
  else
    v551 = v548;
  *(_DWORD *)(v1 + 9116) = v551;
  v552 = *(_DWORD *)(v1 + 9136);
  v553 = *(_DWORD *)(v1 + 9040);
  if ((v443 & 2) != 0)
    v554 = *(_DWORD *)(v1 + 9136);
  else
    v554 = *(_DWORD *)(v1 + 9040);
  *(_DWORD *)(v1 + 8532) = v554;
  if ((v443 & 2) != 0)
    v555 = v553;
  else
    v555 = v552;
  *(_DWORD *)(v1 + 8512) = v555;
  v556 = *(_DWORD *)(v1 + 9568);
  v557 = *(_DWORD *)(v1 + 9172);
  if ((v443 & 2) != 0)
    v558 = *(_DWORD *)(v1 + 9172);
  else
    v558 = *(_DWORD *)(v1 + 9568);
  *(_DWORD *)(v1 + 9384) = v558;
  if ((v443 & 2) == 0)
    v556 = v557;
  *(_DWORD *)(v1 + 8744) = v556;
  v559 = *(_DWORD *)(v1 + 9200);
  v560 = *(_DWORD *)(v1 + 9016);
  if ((v443 & 2) != 0)
    v561 = *(_DWORD *)(v1 + 9200);
  else
    v561 = *(_DWORD *)(v1 + 9016);
  *(_DWORD *)(v1 + 8464) = v561;
  if ((v443 & 2) != 0)
    v562 = v560;
  else
    v562 = v559;
  *(_DWORD *)(v1 + 8504) = v562;
  if ((v443 & 2) != 0)
    v563 = v482;
  else
    v563 = v485;
  *(_DWORD *)(v1 + 9172) = v563;
  if ((v443 & 2) != 0)
    v564 = v485;
  else
    v564 = v482;
  *(_DWORD *)(v1 + 9200) = v564;
  v565 = *(_DWORD *)(v1 + 8768);
  v566 = *(_DWORD *)(v1 + 9224);
  if ((v443 & 2) != 0)
    v567 = *(_DWORD *)(v1 + 9224);
  else
    v567 = *(_DWORD *)(v1 + 8768);
  *(_DWORD *)(v1 + 9312) = v567;
  if ((v443 & 2) != 0)
    v568 = v565;
  else
    v568 = v566;
  *(_DWORD *)(v1 + 9256) = v568;
  v569 = *(_DWORD *)(v1 + 8188);
  v570 = *(_DWORD *)(v1 + 9560);
  if ((v443 & 2) != 0)
    v571 = *(_DWORD *)(v1 + 9560);
  else
    v571 = *(_DWORD *)(v1 + 8188);
  v572 = *(_DWORD *)(v1 + 8748);
  if ((v443 & 2) == 0)
    v572 = *(_DWORD *)(v1 + 8760);
  *(_DWORD *)(v1 + 9224) = v572;
  v573 = *(_DWORD *)(v1 + 8752);
  if ((v443 & 2) == 0)
    v573 = *(_DWORD *)(v1 + 8764);
  *(_DWORD *)(v1 + 8640) = v573;
  v574 = (*(_DWORD *)(v1 + 9104) & 2) == 0;
  v575 = *(_DWORD *)(v1 + 9012);
  v576 = *(_DWORD *)(v1 + 8560);
  if ((*(_DWORD *)(v1 + 9104) & 2) != 0)
    v577 = *(_DWORD *)(v1 + 8560);
  else
    v577 = *(_DWORD *)(v1 + 9012);
  *(_DWORD *)(v1 + 9104) = v577;
  if (v574)
    v578 = v576;
  else
    v578 = v575;
  *(_DWORD *)(v1 + 9136) = v578;
  v579 = *(_DWORD *)(v1 + 9360);
  v580 = *(_DWORD *)(v1 + 9064);
  if (v574)
    v581 = *(_DWORD *)(v1 + 9064);
  else
    v581 = *(_DWORD *)(v1 + 9360);
  *(_DWORD *)(v1 + 8776) = v581;
  if (v574)
    v582 = v579;
  else
    v582 = v580;
  *(_DWORD *)(v1 + 9568) = v582;
  v583 = *(_DWORD *)(v1 + 8792);
  if (!v574)
    v583 = *(_DWORD *)(v1 + 8432);
  *(_DWORD *)(v1 + 9360) = v583;
  v584 = *(_DWORD *)(v1 + 8236);
  v585 = *(_DWORD *)(v1 + 9392);
  if (v574)
    v586 = *(_DWORD *)(v1 + 8236);
  else
    v586 = *(_DWORD *)(v1 + 9392);
  *(_DWORD *)(v1 + 9192) = v586;
  if (v574)
    v587 = v585;
  else
    v587 = v584;
  *(_DWORD *)(v1 + 9400) = v587;
  v588 = *(_DWORD *)(v1 + 8536);
  v589 = *(_DWORD *)(v1 + 8272);
  if (v574)
    v590 = *(_DWORD *)(v1 + 8272);
  else
    v590 = *(_DWORD *)(v1 + 8536);
  *(_DWORD *)(v1 + 9392) = v590;
  if (v574)
    v591 = v588;
  else
    v591 = v589;
  *(_DWORD *)(v1 + 9184) = v591;
  v592 = *(_DWORD *)(v1 + 9512);
  v593 = *(_DWORD *)(v1 + 9264);
  if (v574)
    v594 = *(_DWORD *)(v1 + 9512);
  else
    v594 = *(_DWORD *)(v1 + 9264);
  *(_DWORD *)(v1 + 8792) = v594;
  if (v574)
    v595 = v593;
  else
    v595 = v592;
  *(_DWORD *)(v1 + 8560) = v595;
  v596 = *(_DWORD *)(v1 + 8992);
  v597 = *(_DWORD *)(v1 + 8520);
  if (v574)
    v598 = *(_DWORD *)(v1 + 8520);
  else
    v598 = *(_DWORD *)(v1 + 8992);
  *(_DWORD *)(v1 + 8536) = v598;
  if (v574)
    v599 = v596;
  else
    v599 = v597;
  *(_DWORD *)(v1 + 8520) = v599;
  v600 = *(_DWORD *)(v1 + 9128);
  if (!v574)
    v600 = *(_DWORD *)(v1 + 8456);
  *(_DWORD *)(v1 + 8456) = v600;
  v601 = *(_DWORD *)(v1 + 8628);
  v602 = *(_DWORD *)(v1 + 9376);
  if (v574)
    v603 = *(_DWORD *)(v1 + 9376);
  else
    v603 = *(_DWORD *)(v1 + 8628);
  *(_DWORD *)(v1 + 8432) = v603;
  if (v574)
    v604 = v601;
  else
    v604 = v602;
  *(_DWORD *)(v1 + 9128) = v604;
  v605 = *(_DWORD *)(v1 + 9008);
  v606 = *(_DWORD *)(v1 + 8280);
  if (v574)
    v607 = *(_DWORD *)(v1 + 8280);
  else
    v607 = *(_DWORD *)(v1 + 9008);
  *(_DWORD *)(v1 + 9376) = v607;
  if (v574)
    v608 = v605;
  else
    v608 = v606;
  *(_DWORD *)(v1 + 9264) = v608;
  if (v574)
    v609 = *(_DWORD *)(v1 + 8240);
  else
    v609 = *(_DWORD *)(v1 + 9024);
  v610 = *(_DWORD *)(v1 + 8920);
  if (!v574)
    v610 = *(_DWORD *)(v1 + 8688);
  v611 = ((unint64_t)(v610 ^ 0xC6C9E89B) >> v510) + ((unint64_t)(v610 ^ 0xC6C9E89B) << v513);
  v612 = v611 - 959846245 - ((2 * v611) & 0x8D93D136);
  if (v516 != -959846245)
    v610 = v612;
  *(_DWORD *)(v1 + 8680) = v610;
  *(_DWORD *)(v1 + 6632) = v443;
  if ((v443 & 2) != 0)
    v613 = v569;
  else
    v613 = v570;
  *(_DWORD *)(v1 + 9560) = v613;
  v614 = *(_DWORD *)(v1 + 8332) - 959846245 - ((2 * *(_DWORD *)(v1 + 8332)) & 0x8D93D136);
  v615 = (v614 ^ 0xC6C9E89B) + ((v614 >> 8) ^ 0xFF393617) + 1;
  v616 = -1878951435 * (((v615 - 959846245 - ((2 * v615) & 0x8D93D136)) ^ 0xC6C9E89B) + *(_DWORD *)(v1 + 9504));
  v617 = v616 + HIWORD(v616) + *(_DWORD *)(v1 + 8300) + ((v616 + HIWORD(v616)) >> 8);
  v618 = (v617 - 959846245 - ((2 * v617) & 0x8D93D136)) ^ 0xC6C9E89B;
  v619 = 1330584337 * v618 - 959846245 - ((-1633798622 * v618) & 0x8D93D136);
  v620 = v619 ^ 0xC6C9E89B;
  v621 = 270036433 * ((HIWORD(v619) ^ 0xC6C9) + v620 + *(_DWORD *)(v1 + 8288) - (((HIWORD(v619) ^ 0xC6C9) + v620) >> 8));
  v622 = (v621 + HIWORD(v621)) ^ ((v621 + HIWORD(v621)) >> 8);
  *(_DWORD *)(v1 + 9064) = v622 ^ v359;
  v623 = ((*(_DWORD *)(v1 + 8304) ^ 0xC9B0BB27) + 1) ^ 0xBD3403CC;
  v624 = ((v623 & 0x57FA6C2C) - (v623 & 0x5822008) + (v623 & 0x5822008 ^ 0xD87201B)) ^ v623 & 0x57FA6C34;
  v625 = (v624 & 0x68203C9A ^ 0x60001C88) + (v624 ^ 0x18B72017) - ((v624 ^ 0x18B72017) & 0x68203C98);
  v626 = v625;
  *(_DWORD *)(v1 + 8236) = v625 ^ 0x7D103C9E;
  v627 = ((v625 ^ 0x7D103C9E) - ((2 * (v625 ^ 0x7D103C9E) + 1374505942) & 0x8D93D136) + 1874890374) ^ 0xC6C9E89B;
  v628 = (v558 & 0x924560B9 ^ 0x10040020) + (v558 & 0x924560B9 ^ 0x82416099);
  v629 = ((8 * ((v622 ^ v359) & 3)) | 0x2B7F66B5)
       - ((8 * ((v622 ^ v359) & 3)) | 0x610600)
       + ((8 * ((v622 ^ v359) & 3)) & 8 | 0x10000);
  v630 = v629 & 0x78 ^ 0x30u;
  v631 = v627 - ((2 * v627 - 1374505942) & 0x8D93D136) + 500384432;
  v632 = (-959846245 - 1589080307 * v628 - ((1116806682 * v628) & 0x8D93D136)) ^ v631;
  *(_DWORD *)(v1 + 8188) = v632;
  v633 = v631;
  *(_DWORD *)(v1 + 9040) = v631;
  v634 = v632 ^ 0x65u;
  v635 = ((unint64_t)(v524 ^ 0xC6C9E89B) >> (v632 ^ 0x65)) | ((unint64_t)(v524 ^ 0xC6C9E89B) << ((((8 * ((v622 ^ v359) & 3)) | 0xB5) - 8 * ((v622 ^ v359) & 3) + ((8 * ((v622 ^ v359) & 3)) & 8)) & 0x78 ^ 0x30));
  v636 = v635 - 959846245 - ((2 * v635) & 0x8D93D136);
  v637 = *(_DWORD *)(v1 + 9056);
  v638 = ((unint64_t)(v637 ^ 0xC6C9E89B) >> (v632 ^ 0x65)) ^ ((unint64_t)(v637 ^ 0xC6C9E89B) << ((((8 * ((v622 ^ v359) & 3)) | 0xB5) - 8 * ((v622 ^ v359) & 3) + ((8 * ((v622 ^ v359) & 3)) & 8)) & 0x78 ^ 0x30));
  v639 = v629 ^ 0xEDD6882E;
  v640 = v629;
  *(_DWORD *)(v1 + 8332) = v629;
  if ((v629 ^ 0xEDD6882E) == 0xC6C9E89B)
    v636 = v524;
  *(_DWORD *)(v1 + 8688) = v636;
  v641 = v638 - 959846245 - ((2 * v638) & 0x8D93D136);
  if (v639 == -959846245)
    v641 = v637;
  *(_DWORD *)(v1 + 8696) = v641;
  v642 = (*(_DWORD *)(v1 + 8328) ^ 0x3D7B7ADD) & 0x8F8A600D ^ 0x71557B58 ^ (((*(_DWORD *)(v1 + 8328) ^ 0x3D7B7ADD) & 0x8F8A6015)
                                                                          - ((2 * (*(_DWORD *)(v1 + 8328) ^ 0x3D7B7ADD)) & 0x1804002A)
                                                                          + 2086083421);
  *(_DWORD *)(v1 + 8176) = v626;
  v643 = (v626 & 0x8CC767D2 ^ 0x7F38BCBF)
       + (v626 & 0x8CC767D2 ^ 0xF3FFDB6D)
       + ((v642 - ((2 * v642) & 0x597CC0D4) + 750777066) ^ 0x21BD92EF);
  v644 = ((*(_DWORD *)(v1 + 9688) ^ 0xC6C9E89B)
        - 111592665
        - ((2 * (*(_DWORD *)(v1 + 9688) ^ 0xC6C9E89B) + 1696508758) & 0x8D93D136)
        + 799) ^ 0xC6C9E89B;
  v645 = v643 - ((2 * v643 + 428789672) & 0x8D93D136) + 1402032239;
  v646 = v644 - ((2 * v644 - 1696508758) & 0x8D93D136) - 1808100624;
  v647 = v633 ^ 0x9B;
  v648 = (v643 - ((2 * v643 - 88) & 0x36) + 111);
  *(_DWORD *)(v1 + 6640) = v648;
  v649 = v648 ^ 0x9Bu;
  v650 = ((unint64_t)(v646 ^ 0xC6C9E89B) << (v648 ^ 0x9Bu)) | ((unint64_t)(v646 ^ 0xC6C9E89B) >> (v633 ^ 0x9Bu));
  v651 = ((unint64_t)(v571 ^ 0xC6C9E89B) << (v648 ^ 0x9Bu)) ^ ((unint64_t)(v571 ^ 0xC6C9E89B) >> (v633 ^ 0x9Bu));
  v652 = v651 - 959846245 - ((2 * v651) & 0x8D93D136);
  v653 = v650 - 959846245 - ((2 * v650) & 0x8D93D136);
  v654 = v626 ^ 0x9E;
  v655 = *(_DWORD *)(v1 + 9156);
  v656 = ((((unint64_t)(v655 ^ 0xC6C9E89B) << (v629 & 0x78 ^ 0x30u))
         - 959846245
         - ((2 * ((unint64_t)(v655 ^ 0xC6C9E89B) << (v629 & 0x78 ^ 0x30u))) & 0x8D93D136)) ^ 0xC6C9E89B)
       + ((((unint64_t)(v655 ^ 0xC6C9E89B) >> (v626 ^ 0x9Eu))
         - 959846245
         - ((2 * ((unint64_t)(v655 ^ 0xC6C9E89B) >> (v626 ^ 0x9Eu))) & 0x8D93D136)) ^ 0xC6C9E89B);
  v657 = v656 - 959846245 - ((2 * v656) & 0x8D93D136);
  v658 = ((unint64_t)(v518 ^ 0xC6C9E89B) << (v629 & 0x78 ^ 0x30u))
       + ((unint64_t)(v518 ^ 0xC6C9E89B) >> (v626 ^ 0x9Eu));
  v659 = v658 - 959846245 - ((2 * v658) & 0x8D93D136);
  v660 = (*(_DWORD *)(v1 + 8576) ^ 0xC6C9E89B) - *(_DWORD *)(v1 + 8344) + 315543715 * *(_DWORD *)(v1 + 8356);
  v661 = v618 + (*(_DWORD *)(v1 + 9072) ^ 0xC6C9E89B) + 1793247759 * v620;
  v662 = *(_DWORD *)(v1 + 8936) ^ 0xC6C9E89B;
  v663 = v662 & 0x46C9E89F ^ *(_DWORD *)(v1 + 8936) & 4;
  v664 = v660 - 959846245 - ((2 * v660) & 0x8D93D136);
  v665 = v661 - 959846245 - ((2 * v661) & 0x8D93D136);
  v666 = (*(_DWORD *)(v1 + 8448) ^ 0xC6C9E89B) - 959846245 - ((2 * (*(_DWORD *)(v1 + 8448) ^ 0xC6C9E89B)) & 0x8D93D136);
  *(_DWORD *)(v1 + 9688) = v645;
  *(_DWORD *)(v1 + 6628) = v571;
  if (v645 == -959846245)
    v652 = v571;
  *(_DWORD *)(v1 + 8356) = v652;
  *(_DWORD *)(v1 + 8576) = v646;
  if (v645 == -959846245)
    v667 = v646;
  else
    v667 = v653;
  *(_DWORD *)(v1 + 8328) = v667;
  if (v639 == -959846245)
    v668 = v655;
  else
    v668 = v657;
  *(_DWORD *)(v1 + 8304) = v668;
  *(_DWORD *)(v1 + 8920) = v518;
  if (v639 == -959846245)
    v669 = v518;
  else
    v669 = v659;
  *(_DWORD *)(v1 + 8272) = v669;
  v670 = *(_DWORD *)(v1 + 9456);
  v671 = *(_DWORD *)(v1 + 8720);
  if ((v670 & 1) != 0)
    v672 = v665;
  else
    v672 = *(_DWORD *)(v1 + 8720);
  *(_DWORD *)(v1 + 9024) = v672;
  v673 = *(_DWORD *)(v1 + 8712);
  if ((v670 & 1) == 0)
    v671 = *(_DWORD *)(v1 + 8712);
  *(_DWORD *)(v1 + 8300) = v671;
  if ((v670 & 1) != 0)
    v674 = v664;
  else
    v674 = v665;
  *(_DWORD *)(v1 + 8288) = v674;
  if ((v670 & 1) != 0)
    v675 = v673;
  else
    v675 = v664;
  *(_DWORD *)(v1 + 9012) = v675;
  v676 = *(_QWORD *)(v1 + 8704);
  v677 = *(_DWORD *)(v1 + 8408);
  if ((v670 & 1) != 0)
    v678 = *(_DWORD *)(v1 + 8408);
  else
    v678 = *(_QWORD *)(v1 + 8704);
  *(_DWORD *)(v1 + 9008) = v678;
  v679 = *(_DWORD *)(v1 + 8440);
  if ((v670 & 1) != 0)
    v677 = *(_DWORD *)(v1 + 8440);
  *(_DWORD *)(v1 + 8280) = v677;
  v680 = *(_DWORD *)(v1 + 8472);
  if ((v670 & 1) != 0)
    v679 = *(_DWORD *)(v1 + 8472);
  *(_DWORD *)(v1 + 9016) = v679;
  if ((v670 & 1) == 0)
    LODWORD(v676) = v680;
  *(_DWORD *)(v1 + 8240) = v676;
  v681 = *(_DWORD *)(v1 + 9600);
  if ((v670 & 1) != 0)
    v682 = *(_DWORD *)(v1 + 9600);
  else
    v682 = *(_DWORD *)(v1 + 8424);
  if ((v670 & 1) != 0)
    v681 = *(_DWORD *)(v1 + 8416);
  v683 = *(_DWORD *)(v1 + 9004);
  if ((v670 & 1) != 0)
    v684 = *(_DWORD *)(v1 + 9004);
  else
    v684 = *(_DWORD *)(v1 + 8416);
  if ((v670 & 1) != 0)
    v683 = *(_DWORD *)(v1 + 8424);
  v685 = *(_DWORD *)(v1 + 8900);
  if ((v670 & 1) != 0)
    v686 = *(_DWORD *)(v1 + 8900);
  else
    v686 = v666;
  *(_DWORD *)(v1 + 9004) = v686;
  v687 = *(_DWORD *)(v1 + 9296);
  if ((v670 & 1) != 0)
    v688 = v666;
  else
    v688 = *(_DWORD *)(v1 + 9296);
  *(_DWORD *)(v1 + 8416) = v688;
  v689 = *(_DWORD *)(v1 + 9464);
  if ((v670 & 1) == 0)
    v687 = *(_DWORD *)(v1 + 9464);
  *(_DWORD *)(v1 + 8992) = v687;
  if ((v670 & 1) == 0)
    v689 = v685;
  *(_DWORD *)(v1 + 8408) = v689;
  v690 = v662 - 959846245 - 2 * v663;
  v691 = *(_DWORD *)(v1 + 8312) + (*(_DWORD *)(v1 + 8904) ^ 0xC6C9E89B) + (*(_DWORD *)(v1 + 8320) ^ 0x39361764);
  v692 = -524655861 * *(_DWORD *)(v1 + 0x2000) - ((-524655861 * *(_DWORD *)(v1 + 0x2000)) >> 16);
  v693 = -286953925 * (*(_DWORD *)(v1 + 9520) ^ 0xC6C9E89B ^ (v692 - (v692 >> 8)));
  v694 = v693 ^ HIWORD(v693) ^ ((v693 ^ HIWORD(v693)) >> 8);
  *(_DWORD *)(v1 + 8152) = v694;
  v695 = v694
       + ((v691 - 959846245 - ((2 * v691) & 0x8D93D136)) ^ 0xC6C9E89B)
       - ((((v694 | 0x822B3DC7) - 959846245 - ((2 * (v694 | 0x822B3DC7)) & 0x8D93D136)) ^ 0xC6C9E89B) & v694);
  v696 = v695 - 959846245 - ((2 * v695) & 0x8D93D136);
  v697 = (*(_DWORD *)(v1 + 8552) ^ 0xC6C9E89B) - 959846245 - ((2 * (*(_DWORD *)(v1 + 8552) ^ 0xC6C9E89B)) & 0x8D93D136);
  v698 = (((*(_DWORD *)(v1 + 8912) ^ 0xC6C9E89B)
         - v622
         - 959846245
         - ((2 * ((*(_DWORD *)(v1 + 8912) ^ 0xC6C9E89B) - v622)) & 0x8D93D136)) ^ 0xC6C9E89B)
       + v622;
  v699 = v698 - 959846245 - ((2 * v698) & 0x8D93D136);
  v700 = v670;
  v701 = *(_DWORD *)(v1 + 8860);
  if ((v670 & 1) != 0)
    v702 = *(_DWORD *)(v1 + 8860);
  else
    v702 = v690;
  *(_DWORD *)(v1 + 8712) = v702;
  v449 = (v670 & 1) == 0;
  v703 = *(_DWORD *)(v1 + 8932);
  if (v449)
    v704 = v696;
  else
    v704 = *(_DWORD *)(v1 + 8932);
  *(_DWORD *)(v1 + 8312) = v704;
  v705 = *(_DWORD *)(v1 + 8880);
  if ((v700 & 1) != 0)
    v706 = *(_DWORD *)(v1 + 8880);
  else
    v706 = v697;
  if ((v700 & 1) != 0)
    v701 = v696;
  *(_DWORD *)(v1 + 8720) = v701;
  v707 = *(_DWORD *)(v1 + 8384);
  v708 = (((v707 & 0x97B05518 ^ 0xEECFEAFF) - 959846245 - ((2 * (v707 & 0x97B05518 ^ 0xEECFEAFF)) & 0x8D93D136)) ^ 0xC6C9E89B) & *(_DWORD *)(v1 + 8392);
  v709 = v707 ^ *(_DWORD *)(v1 + 8656) ^ (v708 - 959846245 - ((2 * v708) & 0x8D93D136));
  if ((v700 & 1) != 0)
    v710 = v699;
  else
    v710 = v705;
  *(_DWORD *)(v1 + 8168) = v710;
  v711 = v700;
  if ((v700 & 1) != 0)
    v712 = v690;
  else
    v712 = v703;
  *(_DWORD *)(v1 + 0x2000) = v712;
  if ((v700 & 1) != 0)
  {
    v699 = v709;
    v713 = v697;
  }
  else
  {
    v713 = v709;
  }
  *(_DWORD *)(v1 + 9368) = v713;
  v714 = (((v640 ^ 0x4E09F4A) + 33) & 0xE56D258) - 959846245 - ((2 * ((v640 ^ 0x4E09F4A) + 33)) & 0xC818036);
  v715 = v711;
  if ((v711 & 2) != 0)
    v716 = v681;
  else
    v716 = v683;
  if ((v711 & 2) != 0)
  {
    v717 = v684;
  }
  else
  {
    v683 = v681;
    v717 = v682;
  }
  if ((v711 & 2) == 0)
    v682 = v684;
  v718 = ((unint64_t)(v682 ^ 0xC6C9E89B) >> v634) + ((unint64_t)(v682 ^ 0xC6C9E89B) << v630);
  v719 = v718 - 959846245 - ((2 * v718) & 0x8D93D136);
  *(_QWORD *)(v1 + 8984) = v510;
  v720 = *(_QWORD *)(v1 + 9480);
  v721 = ((((unint64_t)(v609 ^ 0xC6C9E89B) >> v510)
         - 959846245
         - ((2 * ((unint64_t)(v609 ^ 0xC6C9E89B) >> v510)) & 0x8D93D136)) ^ 0xC6C9E89B)
       + ((unint64_t)(v609 ^ 0xC6C9E89B) << v720);
  *(_DWORD *)(v1 + 9600) = v714;
  *(_QWORD *)(v1 + 9072) = ((((v640 ^ 0x4A) + 33) & 0x58) - 101 - ((2 * ((v640 ^ 0x4A) + 33)) & 0x36)) ^ 0x9Bu;
  v722 = *(_DWORD *)(v1 + 8980);
  v723 = ((unint64_t)(v722 ^ 0xC6C9E89B) >> (v714 ^ 0x9Bu)) | ((unint64_t)(v722 ^ 0xC6C9E89B) << v720);
  v724 = *(_DWORD *)(v1 + 8648);
  v725 = ((unint64_t)(v724 ^ 0xC6C9E89B) >> (v714 ^ 0x9Bu)) + ((unint64_t)(v724 ^ 0xC6C9E89B) << v720);
  v726 = v721 - 959846245 - ((2 * v721) & 0x8D93D136);
  v727 = v723 - 959846245 - ((2 * v723) & 0x8D93D136);
  v728 = v725 - 959846245 - ((2 * v725) & 0x8D93D136);
  LODWORD(v720) = *(_DWORD *)(v1 + 9488) ^ 0xB230DDFE;
  *(_DWORD *)(v1 + 9464) = v720;
  v729 = (_DWORD)v720 == -959846245;
  if ((_DWORD)v720 == -959846245)
    v730 = v609;
  else
    v730 = v726;
  *(_DWORD *)(v1 + 8704) = v730;
  if (v729)
    v731 = v724;
  else
    v731 = v728;
  *(_DWORD *)(v1 + 8904) = v731;
  if (v714 == -959846245)
    v733 = v722;
  else
    v733 = v727;
  *(_DWORD *)(v1 + 8900) = v733;
  if (v639 == -959846245)
    v734 = v682;
  else
    v734 = v719;
  *(_DWORD *)(v1 + 8648) = v734;
  v732 = ((unint64_t)(v716 ^ 0xC6C9E89B) >> v634) | ((unint64_t)(v716 ^ 0xC6C9E89B) << v630);
  v735 = v732 - 959846245 - ((2 * v732) & 0x8D93D136);
  if (v639 == -959846245)
    v736 = v716;
  else
    v736 = v735;
  *(_DWORD *)(v1 + 8632) = v736;
  v738 = *(_DWORD *)(v1 + 9688);
  if (v738 != -959846245)
    v683 = (((unint64_t)(v683 ^ 0xC6C9E89B) >> v634)
          - 959846245
          - ((2 * ((unint64_t)(v683 ^ 0xC6C9E89B) >> v634)) & 0x8D93D136)) ^ (((unint64_t)(v683 ^ 0xC6C9E89B) << v649)
                                                                                   - 959846245
                                                                                   - ((2
                                                                                     * ((unint64_t)(v683 ^ 0xC6C9E89B) << v649)) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v1 + 8552) = v683;
  v737 = ((unint64_t)(v717 ^ 0xC6C9E89B) << v649) ^ ((unint64_t)(v717 ^ 0xC6C9E89B) >> v634);
  *(_DWORD *)(v1 + 8840) = v737 - 959846245 - ((2 * v737) & 0x8D93D136);
  if (v738 != -959846245)
    v717 = v737 - 959846245 - ((2 * v737) & 0x8D93D136);
  *(_DWORD *)(v1 + 8628) = v717;
  v739 = *(_DWORD *)(v1 + 9304);
  v740 = *(_QWORD *)(v1 + 8872) & 0x4000;
  v741 = *(_DWORD *)(v1 + 8864);
  v742 = *(_DWORD *)(v1 + 9656);
  if ((v739 & 1) != 0)
    v743 = *(_DWORD *)(v1 + 9656);
  else
    v743 = *(_DWORD *)(v1 + 8864);
  *(_DWORD *)(v1 + 8912) = v743;
  v744 = *(_DWORD *)(v1 + 8728);
  if ((v740 & ~v744) != 0)
    v745 = -(int)v740;
  else
    v745 = v740;
  v746 = v740 ^ 0xC6C9E89B ^ (v745 + (v744 ^ 0xC6C9E89B));
  if ((v739 & 1) != 0)
    v747 = *(_DWORD *)(v1 + 9036);
  else
    v747 = *(_DWORD *)(v1 + 9080);
  if ((v739 & 1) != 0)
    v748 = *(_DWORD *)(v1 + 9176);
  else
    v748 = *(_DWORD *)(v1 + 9528);
  v749 = *(_DWORD *)(v1 + 9408);
  if ((v739 & 1) != 0)
    v750 = v741;
  else
    v750 = *(_DWORD *)(v1 + 9408);
  *(_DWORD *)(v1 + 9080) = v750;
  if ((v739 & 1) != 0)
    v751 = v746;
  else
    v751 = v742;
  *(_DWORD *)(v1 + 9176) = v751;
  if ((v739 & 1) == 0)
    v749 = v746;
  if ((v715 & 2) != 0)
    v752 = v699;
  else
    v752 = v706;
  if ((v715 & 2) != 0)
    v753 = v706;
  else
    v753 = v699;
  if ((v715 & 2) != 0)
    v754 = *(_DWORD *)(v1 + 9008);
  else
    v754 = *(_DWORD *)(v1 + 9016);
  v755 = ((unint64_t)(v754 ^ 0xC6C9E89B) >> v634) ^ ((unint64_t)(v754 ^ 0xC6C9E89B) << v630);
  v756 = v755 - 959846245 - ((2 * v755) & 0x8D93D136);
  v757 = *(_DWORD *)(v1 + 9616);
  if ((v715 & 2) != 0)
    v759 = v710;
  else
    v759 = *(_DWORD *)(v1 + 9368);
  if ((v715 & 2) != 0)
    v760 = *(_DWORD *)(v1 + 9024);
  else
    v760 = *(_DWORD *)(v1 + 9012);
  *(_DWORD *)(v1 + 8728) = v760;
  if ((v715 & 2) != 0)
    v761 = *(_DWORD *)(v1 + 9004);
  else
    v761 = *(_DWORD *)(v1 + 8992);
  if (v639 != -959846245)
    v754 = v756;
  *(_DWORD *)(v1 + 8860) = v754;
  v758 = ((unint64_t)(v757 ^ 0xC6C9E89B) >> v634) | ((unint64_t)(v757 ^ 0xC6C9E89B) << v630);
  v762 = v758 - 959846245 - ((2 * v758) & 0x8D93D136);
  v763 = *(_DWORD *)(v1 + 8664);
  if (v639 == -959846245)
    v762 = v757;
  *(_DWORD *)(v1 + 8672) = v762;
  v764 = ((unint64_t)(v763 ^ 0xC6C9E89B) >> v634) ^ ((unint64_t)(v763 ^ 0xC6C9E89B) << v630);
  v765 = v764 - 959846245 - ((2 * v764) & 0x8D93D136);
  if (v639 == -959846245)
    v765 = v763;
  *(_DWORD *)(v1 + 8664) = v765;
  v766 = ((unint64_t)(v761 ^ 0xC6C9E89B) >> v634) ^ ((unint64_t)(v761 ^ 0xC6C9E89B) << v630);
  v767 = v766 - 959846245 - ((2 * v766) & 0x8D93D136);
  v768 = *(_DWORD *)(v1 + 9328);
  v769 = ((unint64_t)(v768 ^ 0xC6C9E89B) >> v634) ^ ((unint64_t)(v768 ^ 0xC6C9E89B) << v630);
  v770 = v769 - 959846245 - ((2 * v769) & 0x8D93D136);
  v771 = *(_DWORD *)(v1 + 9536);
  v772 = ((unint64_t)(v771 ^ 0xC6C9E89B) >> v634) | ((unint64_t)(v771 ^ 0xC6C9E89B) << v630);
  v773 = v772 - 959846245 - ((2 * v772) & 0x8D93D136);
  v774 = *(_DWORD *)(v1 + 9116);
  v775 = ((unint64_t)(v774 ^ 0xC6C9E89B) << v649) ^ ((unint64_t)(v774 ^ 0xC6C9E89B) >> v647);
  v776 = v775 - 959846245 - ((2 * v775) & 0x8D93D136);
  v777 = *(_DWORD *)(v1 + 8744);
  v778 = ((unint64_t)(v777 ^ 0xC6C9E89B) >> v634) | ((unint64_t)(v777 ^ 0xC6C9E89B) << v630);
  v779 = v778 + *(_DWORD *)(v1 + 9696) + ~((2 * v778) & 0x8D93D136);
  *(_DWORD *)(v1 + 8880) = v761;
  if (v639 == -959846245)
    v767 = v761;
  *(_DWORD *)(v1 + 9528) = v767;
  if (v639 == -959846245)
    v780 = v768;
  else
    v780 = v770;
  *(_DWORD *)(v1 + 8472) = v780;
  v781 = *(_DWORD *)(v1 + 8188) ^ 0x7D5CA8FE;
  if (v639 == -959846245)
    v782 = v771;
  else
    v782 = v773;
  *(_DWORD *)(v1 + 8448) = v782;
  *(_DWORD *)(v1 + 9616) = v781;
  if (v781 == -959846245)
    v783 = v774;
  else
    v783 = v776;
  *(_DWORD *)(v1 + 8440) = v783;
  if (v639 == -959846245)
    v784 = v777;
  else
    v784 = v779;
  *(_DWORD *)(v1 + 8424) = v784;
  v785 = (*(_DWORD *)(v1 + 8308) & 1) == 0;
  if ((*(_DWORD *)(v1 + 8308) & 1) != 0)
    v786 = *(_DWORD *)(v1 + 9520);
  else
    v786 = *(_DWORD *)(v1 + 9544);
  *(_DWORD *)(v1 + 8656) = v786;
  if (v785)
    v787 = *(_DWORD *)(v1 + 9248);
  else
    v787 = *(_DWORD *)(v1 + 9272);
  *(_DWORD *)(v1 + 9036) = v787;
  v788 = *(_DWORD *)(v1 + 8260);
  v789 = *(_DWORD *)(v1 + 8196);
  if ((v788 & 2) == 0)
    v789 = *(_DWORD *)(v1 + 8212);
  v790 = *(_QWORD *)(v1 + 9480);
  v791 = ((unint64_t)(v789 ^ 0xC6C9E89B) >> *(_QWORD *)(v1 + 8984)) ^ ((unint64_t)(v789 ^ 0xC6C9E89B) << v790);
  v792 = v791 - 959846245 - ((2 * v791) & 0x8D93D136);
  if ((v788 & 2) != 0)
    v794 = v787;
  else
    v794 = v786;
  if (*(_DWORD *)(v1 + 9448) == -959846245)
    v795 = v789;
  else
    v795 = v792;
  *(_DWORD *)(v1 + 9656) = v795;
  v793 = ((unint64_t)(v753 ^ 0xC6C9E89B) << v630) ^ ((unint64_t)(v753 ^ 0xC6C9E89B) >> v654);
  v796 = v793 - 959846245 - ((2 * v793) & 0x8D93D136);
  v797 = ((unint64_t)(v759 ^ 0xC6C9E89B) >> v654) ^ ((unint64_t)(v759 ^ 0xC6C9E89B) << v630);
  v798 = v797 - 959846245 - ((2 * v797) & 0x8D93D136);
  v799 = *(_QWORD *)(v1 + 9072);
  v800 = v790;
  v801 = ((unint64_t)(v794 ^ 0xC6C9E89B) >> v799) | ((unint64_t)(v794 ^ 0xC6C9E89B) << v790);
  v802 = v801 - 959846245 - ((2 * v801) & 0x8D93D136);
  *(_DWORD *)(v1 + 8872) = v753;
  if (v639 == -959846245)
    v804 = v753;
  else
    v804 = v796;
  *(_DWORD *)(v1 + 8932) = v804;
  *(_DWORD *)(v1 + 8936) = v759;
  if (v639 == -959846245)
    v805 = v759;
  else
    v805 = v798;
  *(_DWORD *)(v1 + 8024) = v805;
  v806 = *(_DWORD *)(v1 + 9464);
  if (v806 == -959846245)
    v807 = v794;
  else
    v807 = v802;
  *(_DWORD *)(v1 + 8020) = v807;
  v808 = *(_DWORD *)(v1 + 9384);
  v809 = ((unint64_t)(v808 ^ 0xC6C9E89B) >> v634) ^ ((unint64_t)(v808 ^ 0xC6C9E89B) << v630);
  v810 = v809 - 959846245 - ((2 * v809) & 0x8D93D136);
  v811 = *(_DWORD *)(v1 + 9688);
  *(_DWORD *)(v1 + 9296) = v752;
  if (v811 == -959846245)
  {
    v812 = v752;
  }
  else
  {
    v803 = ((unint64_t)(v752 ^ 0xC6C9E89B) << v649) | ((unint64_t)(v752 ^ 0xC6C9E89B) >> v654);
    v812 = v803 - 959846245 - ((2 * v803) & 0x8D93D136);
  }
  *(_DWORD *)(v1 + 8008) = v812;
  if (v781 != -959846245)
    v808 = v810;
  *(_DWORD *)(v1 + 8392) = v808;
  v813 = (*(_DWORD *)(v1 + 9304) & 2) == 0;
  if ((*(_DWORD *)(v1 + 9304) & 2) != 0)
    v814 = v747;
  else
    v814 = v748;
  *(_DWORD *)(v1 + 9408) = v814;
  if (v813)
    v815 = v747;
  else
    v815 = v748;
  *(_DWORD *)(v1 + 9248) = v815;
  v816 = *(_DWORD *)(v1 + 8912);
  if (v813)
    v817 = *(_DWORD *)(v1 + 8912);
  else
    v817 = v749;
  *(_DWORD *)(v1 + 9272) = v817;
  if (v813)
    v818 = v749;
  else
    v818 = v816;
  *(_DWORD *)(v1 + 9544) = v818;
  v819 = *(_DWORD *)(v1 + 9080);
  if (v813)
    v820 = *(_DWORD *)(v1 + 9080);
  else
    v820 = *(_DWORD *)(v1 + 9176);
  if (v813)
    v819 = *(_DWORD *)(v1 + 9176);
  *(_DWORD *)(v1 + 9520) = v819;
  v821 = *(_DWORD *)(v1 + 8368);
  if (v813)
    v821 = *(_DWORD *)(v1 + 8352);
  *(_DWORD *)(v1 + 9304) = v821;
  v822 = *(_DWORD *)(v1 + 9280);
  if (!v813)
    v822 = *(_DWORD *)(v1 + 8360);
  *(_DWORD *)(v1 + 9280) = v822;
  v823 = *(_DWORD *)(v1 + 9400);
  v825 = *(_DWORD *)(v1 + 8888);
  if (v813)
    v825 = *(_DWORD *)(v1 + 8376);
  *(_DWORD *)(v1 + 8864) = v825;
  v824 = ((unint64_t)(v823 ^ 0xC6C9E89B) << v630) + ((unint64_t)(v823 ^ 0xC6C9E89B) >> v647);
  v826 = v824 - 959846245 - ((2 * v824) & 0x8D93D136);
  v827 = *(_DWORD *)(v1 + 8728);
  v828 = ((unint64_t)(v827 ^ 0xC6C9E89B) << v630) | ((unint64_t)(v827 ^ 0xC6C9E89B) >> v647);
  v829 = v828 - 959846245 - ((2 * v828) & 0x8D93D136);
  v830 = ((((unint64_t)(v820 ^ 0xC6C9E89B) >> v647)
         - 959846245
         - ((2 * ((unint64_t)(v820 ^ 0xC6C9E89B) >> v647)) & 0x8D93D136)) ^ 0xC6C9E89B)
       + ((unint64_t)(v820 ^ 0xC6C9E89B) << v630);
  v831 = v830 - 959846245 - ((2 * v830) & 0x8D93D136);
  v832 = *(_DWORD *)(v1 + 9104);
  v833 = ((unint64_t)(v832 ^ 0xC6C9E89B) << v649) | ((unint64_t)(v832 ^ 0xC6C9E89B) >> v654);
  v834 = v833 - 959846245 - ((2 * v833) & 0x8D93D136);
  v835 = *(_DWORD *)(v1 + 8776);
  v836 = ((unint64_t)(v835 ^ 0xC6C9E89B) << v649) ^ ((unint64_t)(v835 ^ 0xC6C9E89B) >> v654);
  v837 = v836 - 959846245 - ((2 * v836) & 0x8D93D136);
  if (v639 == -959846245)
    v826 = v823;
  *(_DWORD *)(v1 + 8368) = v826;
  if (v639 == -959846245)
    v838 = v827;
  else
    v838 = v829;
  *(_DWORD *)(v1 + 8344) = v838;
  *(_DWORD *)(v1 + 9504) = v639;
  *(_DWORD *)(v1 + 8888) = v820;
  if (v639 == -959846245)
    v839 = v820;
  else
    v839 = v831;
  *(_DWORD *)(v1 + 8320) = v839;
  if (v811 == -959846245)
    v840 = v832;
  else
    v840 = v834;
  *(_DWORD *)(v1 + 8136) = v840;
  if (v811 == -959846245)
    v841 = v835;
  else
    v841 = v837;
  *(_DWORD *)(v1 + 8080) = v841;
  v842 = *(_DWORD *)(v1 + 9456);
  if ((v842 & 2) != 0)
    v843 = *(_DWORD *)(v1 + 8992);
  else
    v843 = *(_DWORD *)(v1 + 9004);
  if ((v842 & 2) != 0)
    v845 = *(_DWORD *)(v1 + 8408);
  else
    v845 = *(_DWORD *)(v1 + 8416);
  if ((v842 & 2) != 0)
    v846 = *(_DWORD *)(v1 + 8416);
  else
    v846 = *(_DWORD *)(v1 + 8408);
  v844 = ((unint64_t)(*(_DWORD *)(v1 + 9136) ^ 0xC6C9E89B) << v630) ^ ((unint64_t)(*(_DWORD *)(v1 + 9136) ^ 0xC6C9E89B) >> v654);
  v847 = v844 - 959846245 - ((2 * v844) & 0x8D93D136);
  v848 = *(_DWORD *)(v1 + 9264);
  v849 = *(_QWORD *)(v1 + 8984);
  v850 = ((unint64_t)(v848 ^ 0xC6C9E89B) >> v849)
       + ((((unint64_t)(v848 ^ 0xC6C9E89B) << v800)
         - 959846245
         - ((2 * ((unint64_t)(v848 ^ 0xC6C9E89B) << v800)) & 0x8D93D136)) ^ 0xC6C9E89B);
  v851 = v850 - 959846245 - ((2 * v850) & 0x8D93D136);
  if (v639 == -959846245)
    v847 = *(_DWORD *)(v1 + 9136);
  *(_DWORD *)(v1 + 8040) = v847;
  if (v806 == -959846245)
    v852 = v848;
  else
    v852 = v851;
  *(_DWORD *)(v1 + 8992) = v852;
  v853 = *(_DWORD *)(v1 + 9036);
  if ((v788 & 2) != 0)
    v853 = *(_DWORD *)(v1 + 8656);
  v854 = ((unint64_t)(v853 ^ 0xC6C9E89B) >> v799) ^ ((unint64_t)(v853 ^ 0xC6C9E89B) << v800);
  v855 = v854 - 959846245 - ((2 * v854) & 0x8D93D136);
  if (v806 != -959846245)
    v853 = v855;
  *(_DWORD *)(v1 + 7992) = v853;
  v856 = *(_DWORD *)(v1 + 9376);
  v857 = ((unint64_t)(v856 ^ 0xC6C9E89B) >> v849) ^ ((unint64_t)(v856 ^ 0xC6C9E89B) << v800);
  v858 = v857 - 959846245 - ((2 * v857) & 0x8D93D136);
  v859 = ((unint64_t)(v843 ^ 0xC6C9E89B) >> v634) | ((unint64_t)(v843 ^ 0xC6C9E89B) << v630);
  v860 = v859 - 959846245 - ((2 * v859) & 0x8D93D136);
  v861 = ((unint64_t)(v845 ^ 0xC6C9E89B) << v649) ^ ((unint64_t)(v845 ^ 0xC6C9E89B) >> v634);
  *(_DWORD *)(v1 + 9176) = v861 - 959846245 - ((2 * v861) & 0x8D93D136);
  v862 = ((unint64_t)(v846 ^ 0xC6C9E89B) << v649) ^ ((unint64_t)(v846 ^ 0xC6C9E89B) >> v634);
  *(_DWORD *)(v1 + 9080) = v862 - 959846245 - ((2 * v862) & 0x8D93D136);
  v863 = *(_DWORD *)(v1 + 9304);
  v864 = ((unint64_t)(v863 ^ 0xC6C9E89B) << v649) | ((unint64_t)(v863 ^ 0xC6C9E89B) >> v634);
  v865 = v864 - 959846245 - ((2 * v864) & 0x8D93D136);
  v866 = *(_DWORD *)(v1 + 9280);
  *(_QWORD *)(v1 + 8768) = v634;
  v867 = ((unint64_t)(v866 ^ 0xC6C9E89B) << v649) + ((unint64_t)(v866 ^ 0xC6C9E89B) >> v634);
  v868 = v867 - 959846245 - ((2 * v867) & 0x8D93D136);
  v869 = *(_DWORD *)(v1 + 9288);
  v870 = ((unint64_t)(v869 ^ 0xC6C9E89B) << v649) + ((unint64_t)(v869 ^ 0xC6C9E89B) >> v634);
  v871 = v870 - 959846245 - ((2 * v870) & 0x8D93D136);
  v872 = *(_DWORD *)(v1 + 9392);
  v873 = ((unint64_t)(v872 ^ 0xC6C9E89B) << v649) | ((unint64_t)(v872 ^ 0xC6C9E89B) >> v647);
  v874 = v873 - 959846245 - ((2 * v873) & 0x8D93D136);
  v875 = *(_DWORD *)(v1 + 9272);
  v876 = ((unint64_t)(v875 ^ 0xC6C9E89B) << v649) + ((unint64_t)(v875 ^ 0xC6C9E89B) >> v647);
  v877 = v876 - 959846245 - ((2 * v876) & 0x8D93D136);
  v878 = *(_DWORD *)(v1 + 9248);
  if (*(_DWORD *)(v1 + 9448) == -959846245)
    v858 = v856;
  *(_DWORD *)(v1 + 8656) = v858;
  v879 = *(_DWORD *)(v1 + 9616);
  *(_DWORD *)(v1 + 6616) = v843;
  if (v879 == -959846245)
    v860 = v843;
  *(_DWORD *)(v1 + 8408) = v860;
  v449 = v879 == -959846245;
  *(_DWORD *)(v1 + 6608) = v845;
  v880 = *(_DWORD *)(v1 + 9176);
  if (v449)
    v880 = v845;
  *(_DWORD *)(v1 + 9004) = v880;
  v881 = *(_DWORD *)(v1 + 9688);
  *(_DWORD *)(v1 + 8912) = v846;
  v882 = *(_DWORD *)(v1 + 9080);
  if (v881 == -959846245)
    v882 = v846;
  *(_DWORD *)(v1 + 8416) = v882;
  if (v881 == -959846245)
    v883 = v863;
  else
    v883 = v865;
  *(_DWORD *)(v1 + 8384) = v883;
  if (v881 == -959846245)
    v884 = v866;
  else
    v884 = v868;
  *(_DWORD *)(v1 + 8376) = v884;
  if (v881 == -959846245)
    v885 = v869;
  else
    v885 = v871;
  *(_DWORD *)(v1 + 8360) = v885;
  if (v881 == -959846245)
    v886 = v872;
  else
    v886 = v874;
  *(_DWORD *)(v1 + 8352) = v886;
  if (v881 == -959846245)
    v887 = v875;
  else
    v887 = v877;
  *(_DWORD *)(v1 + 8308) = v887;
  if (v881 == -959846245)
    v888 = v878;
  else
    v888 = (((unint64_t)(v878 ^ 0xC6C9E89B) >> v654)
          - 959846245
          - ((2 * ((unint64_t)(v878 ^ 0xC6C9E89B) >> v654)) & 0x8D93D136)) ^ 0xC6C9E89B ^ (((unint64_t)(v878 ^ 0xC6C9E89B) << v649)
                                                                                                - 959846245
                                                                                                - ((2
                                                                                                  * ((unint64_t)(v878 ^ 0xC6C9E89B) << v649)) & 0x8D93D136));
  *(_DWORD *)(v1 + 8132) = v888;
  if ((v842 & 2) != 0)
    v889 = *(_DWORD *)(v1 + 9368);
  else
    v889 = *(_DWORD *)(v1 + 8168);
  v890 = *(_DWORD *)(v1 + 8720);
  v891 = *(_DWORD *)(v1 + 0x2000);
  if ((v842 & 2) != 0)
    v892 = *(_DWORD *)(v1 + 8720);
  else
    v892 = *(_DWORD *)(v1 + 0x2000);
  *(_DWORD *)(v1 + 9368) = v892;
  if ((v842 & 2) != 0)
    v893 = v891;
  else
    v893 = v890;
  *(_DWORD *)(v1 + 9080) = v893;
  if ((v842 & 2) != 0)
    v894 = *(_DWORD *)(v1 + 9012);
  else
    v894 = *(_DWORD *)(v1 + 9024);
  *(_DWORD *)(v1 + 9176) = v894;
  v895 = *(_DWORD *)(v1 + 8712);
  v896 = *(_DWORD *)(v1 + 8312);
  if ((v842 & 2) != 0)
    v897 = *(_DWORD *)(v1 + 8312);
  else
    v897 = *(_DWORD *)(v1 + 8712);
  *(_DWORD *)(v1 + 8720) = v897;
  if ((v842 & 2) != 0)
    v898 = v895;
  else
    v898 = v896;
  if ((v842 & 2) != 0)
    v899 = *(_DWORD *)(v1 + 8300);
  else
    v899 = *(_DWORD *)(v1 + 8288);
  if ((v842 & 2) != 0)
    v900 = *(_DWORD *)(v1 + 8288);
  else
    v900 = *(_DWORD *)(v1 + 8300);
  *(_DWORD *)(v1 + 8712) = v900;
  v901 = *(_DWORD *)(v1 + 9016);
  if ((v842 & 2) == 0)
    v901 = *(_DWORD *)(v1 + 9008);
  *(_DWORD *)(v1 + 9012) = v901;
  v902 = *(_DWORD *)(v1 + 8280);
  v903 = *(_DWORD *)(v1 + 8240);
  if ((v842 & 2) != 0)
    v904 = *(_DWORD *)(v1 + 8280);
  else
    v904 = *(_DWORD *)(v1 + 8240);
  *(_DWORD *)(v1 + 9024) = v904;
  if ((v842 & 2) != 0)
    v905 = v903;
  else
    v905 = v902;
  *(_DWORD *)(v1 + 9016) = v905;
  v906 = ((unint64_t)(*(_DWORD *)(v1 + 9192) ^ 0xC6C9E89B) << v649) | ((unint64_t)(*(_DWORD *)(v1 + 9192) ^ 0xC6C9E89B) >> v647);
  v907 = ((unint64_t)(*(_DWORD *)(v1 + 9184) ^ 0xC6C9E89B) << v630)
       + ((unint64_t)(*(_DWORD *)(v1 + 9184) ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 9036) = v907 + *(_DWORD *)(v1 + 9696) + ~((2 * v907) & 0x8D93D136);
  *(_DWORD *)(v1 + 9008) = v906 - 959846245 - ((2 * v906) & 0x8D93D136);
  v908 = v899 ^ 0xC6C9E89B;
  v909 = *(_DWORD *)(v1 + 9520);
  v910 = v909 ^ 0xC6C9E89B;
  v911 = (v909 ^ 0x39361764) + ((v910 + v908 - 959846245 - ((2 * (v910 + v908)) & 0x8D93D136)) ^ 0xC6C9E89B) + 1;
  v912 = v911 - 959846245 - ((2 * v911) & 0x8D93D136);
  v913 = ((unint64_t)(v912 ^ 0xC6C9E89B) << v630) ^ ((unint64_t)(v912 ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 8984) = v913 - 959846245 - ((2 * v913) & 0x8D93D136);
  v914 = ((unint64_t)(v900 ^ 0xC6C9E89B) << v649) | ((unint64_t)(v900 ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 8300) = v914 - 959846245 - ((2 * v914) & 0x8D93D136);
  v915 = ((unint64_t)(v894 ^ 0xC6C9E89B) << v649) | ((unint64_t)(v894 ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 8288) = v915 - 959846245 - ((2 * v915) & 0x8D93D136);
  v916 = ((unint64_t)(*(_DWORD *)(v1 + 9544) ^ 0xC6C9E89B) << v630) ^ ((unint64_t)(*(_DWORD *)(v1 + 9544) ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 8260) = v916 - 959846245 - ((2 * v916) & 0x8D93D136);
  LODWORD(v910) = (v910 << v649) | (v910 >> v647);
  *(_DWORD *)(v1 + 8240) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  LODWORD(v910) = ((unint64_t)(*(_DWORD *)(v1 + 9560) ^ 0xC6C9E89B) << v630) | ((unint64_t)(*(_DWORD *)(v1 + 9560) ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 8212) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  LODWORD(v910) = ((unint64_t)(*(_DWORD *)(v1 + 9552) ^ 0xC6C9E89B) << v649)
                + ((unint64_t)(*(_DWORD *)(v1 + 9552) ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 8196) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v917 = *(_DWORD *)(v1 + 9152);
  LODWORD(v910) = ((unint64_t)(v917 ^ 0xC6C9E89B) << v630) | ((unint64_t)(v917 ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 0x2000) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  LODWORD(v910) = ((*(_DWORD *)(v1 + 8560) ^ 0xC6C9E89B)
                 - ((2 * (*(_DWORD *)(v1 + 8560) ^ 0xC6C9E89B) - 1474783488) & 0x8D93D136)
                 + 450245659) ^ 0xC6C9E89B;
  v918 = v910 - ((2 * v910 + 1474783488) & 0x8D93D136) + 1925029147;
  LODWORD(v910) = ((unint64_t)(v918 ^ 0xC6C9E89B) << v649) + ((unint64_t)(v918 ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 8560) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v919 = *(_DWORD *)(v1 + 9360);
  LODWORD(v910) = ((unint64_t)(v919 ^ 0xC6C9E89B) << v630) + ((unint64_t)(v919 ^ 0xC6C9E89B) >> v647);
  *(_DWORD *)(v1 + 8188) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v920 = *(_DWORD *)(v1 + 8792);
  LODWORD(v910) = ((unint64_t)(v920 ^ 0xC6C9E89B) << v630)
                + ((((unint64_t)(v920 ^ 0xC6C9E89B) >> v647)
                  - 959846245
                  - ((2 * ((unint64_t)(v920 ^ 0xC6C9E89B) >> v647)) & 0x8D93D136)) ^ 0xC6C9E89B);
  *(_DWORD *)(v1 + 8116) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  LODWORD(v910) = ((unint64_t)(v892 ^ 0xC6C9E89B) << v649) | ((unint64_t)(v892 ^ 0xC6C9E89B) >> v654);
  *(_DWORD *)(v1 + 8064) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  LODWORD(v910) = ((unint64_t)(v893 ^ 0xC6C9E89B) << v649) | ((unint64_t)(v893 ^ 0xC6C9E89B) >> v654);
  *(_DWORD *)(v1 + 8056) = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  LODWORD(v910) = ((unint64_t)(v897 ^ 0xC6C9E89B) << v630) | ((unint64_t)(v897 ^ 0xC6C9E89B) >> v654);
  v921 = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  LODWORD(v910) = ((unint64_t)(v898 ^ 0xC6C9E89B) << v630) + ((unint64_t)(v898 ^ 0xC6C9E89B) >> v654);
  v922 = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v923 = *(_DWORD *)(v1 + 9408);
  LODWORD(v910) = (((unint64_t)(v923 ^ 0xC6C9E89B) << v649)
                 - 959846245
                 - ((2 * ((unint64_t)(v923 ^ 0xC6C9E89B) << v649)) & 0x8D93D136)) ^ 0xC6C9E89B | (((unint64_t)(v923 ^ 0xC6C9E89B) >> v654) - 959846245 - ((2 * ((unint64_t)(v923 ^ 0xC6C9E89B) >> v654)) & 0x8D93D136)) ^ 0xC6C9E89B;
  v924 = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v925 = *(_DWORD *)(v1 + 9432);
  v926 = v649;
  LODWORD(v910) = ((unint64_t)(v925 ^ 0xC6C9E89B) << v649) ^ ((unint64_t)(v925 ^ 0xC6C9E89B) >> v654);
  v927 = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v928 = *(_DWORD *)(v1 + 9148);
  LODWORD(v910) = ((unint64_t)(v928 ^ 0xC6C9E89B) << v630) ^ ((unint64_t)(v928 ^ 0xC6C9E89B) >> v654);
  v929 = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v930 = *(_DWORD *)(v1 + 9320);
  *(_QWORD *)(v1 + 9512) = v630;
  LODWORD(v910) = ((unint64_t)(v930 ^ 0xC6C9E89B) << v630) ^ ((unint64_t)(v930 ^ 0xC6C9E89B) >> v654);
  v931 = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v932 = *(_DWORD *)(v1 + 8784);
  *(_QWORD *)(v1 + 9056) = v926;
  LODWORD(v910) = ((unint64_t)(v932 ^ 0xC6C9E89B) << v926) + ((unint64_t)(v932 ^ 0xC6C9E89B) >> v654);
  v933 = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v934 = *(_DWORD *)(v1 + 9568);
  LODWORD(v910) = ((unint64_t)(v934 ^ 0xC6C9E89B) << v630) + ((unint64_t)(v934 ^ 0xC6C9E89B) >> v654);
  v935 = v910 - 959846245 - ((2 * v910) & 0x8D93D136);
  v936 = ((unint64_t)(v889 ^ 0xC6C9E89B) << v926) | ((unint64_t)(v889 ^ 0xC6C9E89B) >> v654);
  v937 = v936 - 959846245 - ((2 * v936) & 0x8D93D136);
  v938 = *(_DWORD *)(v1 + 9040);
  v939 = *(_DWORD *)(v1 + 9184);
  if (v938 != -959846245)
    v939 = *(_DWORD *)(v1 + 9036);
  *(_DWORD *)(v1 + 8312) = v939;
  v940 = *(_DWORD *)(v1 + 9192);
  if (v938 != -959846245)
    v940 = *(_DWORD *)(v1 + 9008);
  *(_DWORD *)(v1 + 9008) = v940;
  *(_DWORD *)(v1 + 6600) = v912;
  v941 = *(_DWORD *)(v1 + 8984);
  if (v938 == -959846245)
    v941 = v912;
  *(_DWORD *)(v1 + 8280) = v941;
  v942 = *(_DWORD *)(v1 + 8712);
  if (v938 != -959846245)
    v942 = *(_DWORD *)(v1 + 8300);
  *(_DWORD *)(v1 + 8300) = v942;
  v943 = *(_DWORD *)(v1 + 9176);
  if (v938 != -959846245)
    v943 = *(_DWORD *)(v1 + 8288);
  *(_DWORD *)(v1 + 8288) = v943;
  v944 = *(_DWORD *)(v1 + 9544);
  if (v938 != -959846245)
    v944 = *(_DWORD *)(v1 + 8260);
  *(_DWORD *)(v1 + 8260) = v944;
  v945 = *(_DWORD *)(v1 + 9520);
  if (v938 != -959846245)
    v945 = *(_DWORD *)(v1 + 8240);
  *(_DWORD *)(v1 + 8240) = v945;
  v946 = *(_DWORD *)(v1 + 9560);
  if (v938 != -959846245)
    v946 = *(_DWORD *)(v1 + 8212);
  *(_DWORD *)(v1 + 8212) = v946;
  v947 = *(_DWORD *)(v1 + 9552);
  if (v938 != -959846245)
    v947 = *(_DWORD *)(v1 + 8196);
  *(_DWORD *)(v1 + 8196) = v947;
  if (v938 == -959846245)
    v948 = v917;
  else
    v948 = *(_DWORD *)(v1 + 0x2000);
  *(_DWORD *)(v1 + 0x2000) = v948;
  *(_DWORD *)(v1 + 9036) = v918;
  v949 = *(_DWORD *)(v1 + 8560);
  if (v938 == -959846245)
    v949 = v918;
  *(_DWORD *)(v1 + 8168) = v949;
  if (v938 == -959846245)
    v950 = v919;
  else
    v950 = *(_DWORD *)(v1 + 8188);
  *(_DWORD *)(v1 + 8160) = v950;
  if (v938 == -959846245)
    v951 = v920;
  else
    v951 = *(_DWORD *)(v1 + 8116);
  *(_DWORD *)(v1 + 8188) = v951;
  v952 = *(_DWORD *)(v1 + 8176);
  v953 = *(_DWORD *)(v1 + 9368);
  if (v952 != 2098216094)
    v953 = *(_DWORD *)(v1 + 8064);
  *(_DWORD *)(v1 + 8116) = v953;
  v954 = *(_DWORD *)(v1 + 9080);
  if (v952 != 2098216094)
    v954 = *(_DWORD *)(v1 + 8056);
  *(_DWORD *)(v1 + 8064) = v954;
  v955 = *(_DWORD *)(v1 + 8720);
  if (v952 != 2098216094)
    v955 = v921;
  *(_DWORD *)(v1 + 8056) = v955;
  *(_DWORD *)(v1 + 8560) = v898;
  if (v952 == 2098216094)
    v956 = v898;
  else
    v956 = v922;
  *(_DWORD *)(v1 + 8032) = v956;
  if (v952 == 2098216094)
    v957 = v923;
  else
    v957 = v924;
  *(_DWORD *)(v1 + 8000) = v957;
  if (v952 == 2098216094)
    v958 = v925;
  else
    v958 = v927;
  *(_DWORD *)(v1 + 7984) = v958;
  if (v952 == 2098216094)
    v959 = v928;
  else
    v959 = v929;
  *(_DWORD *)(v1 + 7976) = v959;
  if (v952 == 2098216094)
    v960 = v930;
  else
    v960 = v931;
  *(_DWORD *)(v1 + 7964) = v960;
  if (v952 == 2098216094)
    v961 = v932;
  else
    v961 = v933;
  *(_DWORD *)(v1 + 8984) = v961;
  if (v952 == 2098216094)
    v962 = v934;
  else
    v962 = v935;
  v449 = v952 == 2098216094;
  v963 = 1111274701 * (*(_DWORD *)(v1 + 8264) + *(_DWORD *)(v1 + 8152));
  v964 = (*(_DWORD *)(v1 + 8572) ^ 0xC6C9E89B) + v359 + v963 + HIWORD(v963) - ((v963 + HIWORD(v963)) >> 8);
  v965 = *(_DWORD *)(v1 + 9608);
  v966 = ((unint64_t)((v965 ^ 0x30u) & *(_DWORD *)(v1 + 7264)) << *(_QWORD *)(v1 + 9672)) ^ *(_DWORD *)(v1 + 6832) ^ *(_DWORD *)(v1 + 8008) ^ *(_DWORD *)(v1 + 8232);
  v967 = *(_DWORD *)(v1 + 6828) ^ *(_DWORD *)(v1 + 8024) ^ *(_DWORD *)(v1 + 8020);
  v968 = v967 ^ 0xC6C9E89B;
  v969 = *(_DWORD *)(v1 + 9456) + (*(_DWORD *)(v1 + 8816) ^ 0xC6C9E89B);
  v970 = *(_DWORD *)(v359 + 4 * BYTE2(v968)) ^ __ROR4__(*(_DWORD *)(v359+ 4* ((unsigned __int16)(v966 ^ 0xE89B) >> 8)), 8);
  v971 = *(_DWORD *)(v1 + 9656) ^ *(_DWORD *)(v1 + 8932);
  v972 = v964 - 959846245 - ((2 * v964) & 0x8D93D136);
  *(_DWORD *)(v1 + 8264) = v972;
  *(_DWORD *)(v1 + 8816) = v969;
  *(_DWORD *)(v1 + 9656) = v969 - 959846245 - ((2 * v969) & 0x8D93D136);
  v973 = v971 - 959846245 - ((2 * v971) & 0x8D93D136);
  v974 = *(_DWORD *)(v1 + 9240);
  v975 = v974 ^ 0x3A;
  v976 = *(_QWORD *)(v1 + 9704);
  v977 = *(_DWORD *)(v1 + 7848);
  v978 = ((*(_QWORD *)(v1 + 7232) >> (v974 ^ 0x3Au))
        + ((unint64_t)((v965 ^ 0x30u) & *(_DWORD *)(v1 + 7784)) << v976)) ^ v977 ^ v973;
  *(_DWORD *)(v1 + 8932) = v889;
  if (v449)
    v979 = v889;
  else
    v979 = v937;
  v980 = *(_DWORD *)(v1 + 7992) ^ (((unint64_t)((v965 ^ 0x30u) & *(_DWORD *)(v1 + 7744)) << v976)
                                 + *(_QWORD *)(v1 + 7224)) ^ ((v979 ^ v977)
                                                                          - 959846245
                                                                          - ((2 * (v979 ^ v977)) & 0x8D93D136));
  v981 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9592) + ((v980 - 66) ^ 0x9DLL));
  v982 = ((v981 >> 1) | (v981 << 7)) ^ (32 * ((v981 >> 1) | (v981 << 7))) ^ (16 * ((v981 >> 1) | (v981 << 7))) ^ 0x41;
  v983 = v970 ^ __ROR4__(*(_DWORD *)(v359 + 4 * ((HIBYTE(v978) - ((v978 >> 23) & 0xF8) - 4) ^ 0xFCLL)), 24);
  v984 = __ROR4__(*(_DWORD *)(v359 + 4 * ((v982 >> 2) | ((_BYTE)v982 << 6))), 16);
  v985 = (v983 ^ v984) - 959846245 - ((2 * (v983 ^ v984)) & 0x8D93D136);
  v986 = (unint64_t)((v965 ^ 0x80868ABC) & *(_DWORD *)(v1 + 7776)) << v976;
  v987 = *(_QWORD *)(v1 + 6744) >> v975;
  v988 = ((v985 ^ (v987 | v986) ^ v962) - 959846245 - ((2 * (v985 ^ (v987 | v986) ^ v962)) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9688);
  v989 = *(_DWORD *)(v1 + 9464);
  v990 = (v988 - 959846245 - ((2 * v988) & 0x8D93D136)) ^ v989;
  v991 = v965 ^ 0xC0C68AFC;
  v992 = ((v965 ^ 0xC0C68AFC) + 1704008458) & 0x40C68AFD ^ v965 & 1;
  v993 = (v990 - 959846245 - ((2 * v990) & 0x8D93D136)) ^ v977;
  v994 = *(_DWORD *)(v359 + ((v993 >> 22) & 0x3FC));
  v995 = (v994 << 8) - 959846245 - (*(_DWORD *)(v1 + 9664) & (v994 << 9));
  *(_DWORD *)(v1 + 9240) = (v974 ^ 0x616EE03A) + 1634656314 - 2 * ((v974 ^ 0x616EE03A) & 0x616EE03B ^ v974 & 1);
  v996 = *(_DWORD *)(v359 + ((v968 >> 22) & 0x3FC));
  *(_DWORD *)(v1 + 9608) = ((v991 - 2 * v992 - 1504205306) ^ 0xC0C68AFC)
                         - ((2 * ((v991 - 2 * v992 - 1504205306) ^ 0xC0C68AFC) + 886950380) & 0x818D15F8);
  HIDWORD(v997) = v996;
  LODWORD(v997) = v996;
  v998 = (v997 >> 24) - 959846245 - ((2 * (v997 >> 24)) & 0x8D93D136);
  HIDWORD(v997) = *(_DWORD *)(v359 + 4 * BYTE1(v980));
  LODWORD(v997) = HIDWORD(v997);
  v999 = v998 ^ *(_DWORD *)(v359 + 4 * (BYTE2(v966) ^ 0xC9u)) ^ ((v997 >> 8)
                                                                 - 959846245
                                                                 - ((2 * (v997 >> 8)) & 0x8D93D136));
  HIDWORD(v997) = *(_DWORD *)(v359 + 4 * v978);
  LODWORD(v997) = HIDWORD(v997);
  v1000 = (v999 - 959846245 - ((2 * v999) & 0x8D93D136)) ^ ((v997 >> 16) - 959846245 - ((2 * (v997 >> 16)) & 0x8D93D136));
  v1001 = (v1000 - 959846245 - ((2 * v1000) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9496) ^ 0xC6C9E8;
  v1002 = *(_DWORD *)(v1 + 9648);
  v1003 = *(_DWORD *)(v1 + 8236) + 1;
  v1004 = ((v1001 - 959846245 - ((2 * v1001) & 0x8D93D136)) ^ v1002) + v1003 + (*(_DWORD *)(v1 + 9472) ^ 0x9C11960C);
  v1005 = *(_DWORD *)(v1 + 9064) ^ 0xC6C9E89B ^ (v1004 - 959846245 - ((2 * v1004) & 0x8D93D136));
  v1006 = (*(_DWORD *)(v1 + 9600) ^ 0x39361764) + v1003 + ((v1005 - 959846245 - ((2 * v1005) & 0x8D93D136)) ^ v1002);
  v1007 = *(_DWORD *)(v1 + 8040) ^ *(_DWORD *)(v1 + 7584) ^ (v1006 - 959846245 - ((2 * v1006) & 0x8D93D136));
  v1008 = (v1007 - 959846245 - ((2 * v1007) & 0x8D93D136)) ^ v977;
  v1009 = *(_DWORD *)(v359 + 4 * BYTE2(v993)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1008)), 8);
  v1010 = *(_DWORD *)(v1 + 9504) ^ ((v987 ^ v986) - 959846245 - ((2 * (v987 ^ v986)) & 0x8D93D136));
  v1011 = (*(unsigned __int8 *)(*(_QWORD *)(v1 + 9680) + ((57 * (HIBYTE(v966) ^ 0xC6)) ^ 0x1DLL)) ^ (57 * (HIBYTE(v966) ^ 0xC6)) ^ 0x7C)
        - *(_DWORD *)(v1 + 7576);
  LOBYTE(v987) = *(_BYTE *)(*(_QWORD *)(v1 + 9640)
                          + (((v980 >> 12) & 0xF0 | (v980 >> 20) & 0xF) ^ 0x39));
  v1012 = *(_QWORD *)(v1 + 9640);
  HIDWORD(v997) = *(_DWORD *)(v359 + 4 * ((BYTE1(v978) - ((v978 >> 7) & 4) + 2) ^ 2));
  LODWORD(v997) = HIDWORD(v997);
  LODWORD(v986) = (v997 >> 8) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v967 ^ 0x9Bu)), 16) ^ __ROR4__(*(_DWORD *)(v359 + 4 * ((v1011 - ((2 * v1011) & 0x58) + 44) ^ 0x2Cu)), 24) ^ *(_DWORD *)(v359 + 4 * ((v987 ^ ((v987 ^ 0xA0) >> 3) ^ ((v987 ^ 0xA0) >> 2) ^ 6) + 73));
  v1013 = v972 ^ 0xC6C9E89B;
  v1014 = *(_DWORD *)(v1 + 9052);
  *(_DWORD *)(v1 + 8572) = v1014 ^ 0x39361764;
  v1015 = (v1010 - 959846245 - ((2 * v1010) & 0x8D93D136)) ^ (v986
                                                            + v1013
                                                            + (v1014 ^ 0x39361764)
                                                            - 959846244
                                                            - ((2 * (v986 + v1013 + (v1014 ^ 0x39361764) + 1)) & 0x8D93D136));
  v1016 = (v1015 - 959846245 - ((2 * v1015) & 0x8D93D136)) ^ v989;
  v1017 = *(_DWORD *)(v1 + 8080) ^ (v1016 - 959846245 - ((2 * v1016) & 0x8D93D136));
  v1018 = (v1017 - 959846245 - ((2 * v1017) & 0x8D93D136)) ^ v977;
  LODWORD(v997) = __ROR4__(*(_DWORD *)(v359 + 4 * v1018), 16);
  v1019 = ((v1009 ^ v997) - 959846245 - ((2 * (v1009 ^ v997)) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 7568) ^ *(_DWORD *)(v1 + 8984);
  v1020 = (*(_QWORD *)(v1 + 7208) >> v975) ^ *(_QWORD *)(v1 + 7200);
  LODWORD(v980) = (v1020 - 959846245 - ((2 * v1020) & 0x8D93D136)) ^ v977 ^ *(_DWORD *)(v1 + 8136) ^ ((*(_DWORD *)(v359 + 4 * BYTE2(v978)) ^ __ROR4__(*(_DWORD *)(v359 + ((v980 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v966 ^ 0x9Bu)), 16) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v968)), 8)) + (*(_DWORD *)(v1 + 9656) ^ 0x39361764) + (v1014 ^ 0xC6C9E89B) + 1);
  LOBYTE(v1020) = *(_BYTE *)(v1012 + (((v980 >> 20) & 0xF0 | (v980 >> 28)) ^ 0x55));
  HIDWORD(v997) = *(_DWORD *)(v359
                            + 4
                            * ((v1020 ^ ((v1020 ^ 0xA0) >> 3) ^ ((v1020 ^ 0xA0) >> 2) ^ 6)
                                              + 73));
  LODWORD(v997) = HIDWORD(v997);
  v1021 = (v1019 - 959846245 - ((2 * v1019) & 0x8D93D136)) ^ ((v997 >> 24)
                                                            - 959846245
                                                            - ((2 * (v997 >> 24)) & 0x8D93D136));
  *(_DWORD *)(v1 + 8984) = v995;
  v1022 = (v995 ^ 0xC6C9E89B | HIBYTE(v994)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v980 ^ 0x9Bu)), 16);
  LODWORD(v997) = __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1018)), 8);
  v1023 = (unint64_t)(v991 & *(_DWORD *)(v1 + 7832)) << *(_QWORD *)(v1 + 9672);
  v1024 = *(_DWORD *)(v359 + 4 * BYTE2(v1008)) ^ (v1023 + *(_QWORD *)(v1 + 7192)) ^ *(_DWORD *)(v1 + 7964) ^ ((v1022 ^ v997) - 959846245 - ((2 * (v1022 ^ v997)) & 0x8D93D136));
  v1025 = *(unsigned int *)(v359 + ((v1008 >> 22) & 0x3FC));
  v1026 = *(_BYTE *)(v1012 + (((v1025 >> 20) & 0xF0 | (v1025 >> 28)) ^ 0x39));
  v1027 = v1012;
  v1028 = ((v1026 ^ ((v1026 ^ 0xA0) >> 3) ^ ((v1026 ^ 0xA0) >> 2) ^ 6)
                          + 73) | ((_DWORD)v1025 << 8);
  BYTE2(v1025) = BYTE2(v980) ^ 0xC9;
  LODWORD(v980) = *(_DWORD *)(v359 + 4 * BYTE2(v1018)) ^ __ROR4__(*(_DWORD *)(v359+ 4* ((unsigned __int16)(v980 ^ 0xE89B) >> 8)), 8);
  LODWORD(v997) = __ROR4__(*(_DWORD *)(v359+ 4* (*(unsigned __int8 *)(*(_QWORD *)(v1 + 9624)+ (((32 * (v993 & 7)) | (v993 >> 3)) ^ 0xBD)) ^ 0x7DLL)), 16);
  v1029 = v974 ^ 0x3A;
  LODWORD(v1023) = ((v980 ^ v997 ^ v1028) - 959846245 - ((2 * (v980 ^ v997 ^ v1028)) & 0x8D93D136)) ^ (*(_QWORD *)(v1 + 6736) >> v975) ^ v1023 ^ *(_DWORD *)(v1 + 7976);
  v1030 = v977;
  v1031 = (v1021 - 959846245 - ((2 * v1021) & 0x8D93D136)) ^ v977;
  v1032 = (v1024 - 959846245 - ((2 * v1024) & 0x8D93D136)) ^ v977;
  v1033 = ((_DWORD)v1023 - 959846245 - ((2 * (_DWORD)v1023) & 0x8D93D136)) ^ v977;
  v1034 = *(_DWORD *)(v359 + 4 * BYTE2(v1031)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1032)), 8) ^ __ROR4__(*(_DWORD *)(v359 + 4 * ((v1023 - 101 - ((2 * v1023) & 0x36)) ^ v977)), 16);
  LODWORD(v1018) = *(_DWORD *)(v359 + 4 * BYTE2(v1025)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1008), 16) ^ __ROR4__(*(_DWORD *)(v359 + ((v1018 >> 22) & 0x3FC)), 24);
  LODWORD(v997) = __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v993)), 8);
  v1035 = ((v1018 ^ v997) - 959846245 - ((2 * (v1018 ^ v997)) & 0x8D93D136)) ^ ((*(_QWORD *)(v1 + 7184) >> (v974 ^ 0x3Au)) | *(_QWORD *)(v1 + 7176)) ^ *(_DWORD *)(v1 + 7984);
  LODWORD(v1025) = (v1035 - 959846245 - ((2 * v1035) & 0x8D93D136)) ^ v977;
  LOBYTE(v1035) = *(_BYTE *)(v1027 + (((v1025 >> 20) & 0xF0 | (v1025 >> 28)) ^ 0x39));
  v1036 = *(_DWORD *)(v359
                    + 4
                    * ((v1035 ^ ((v1035 ^ 0xA0) >> 3) ^ ((v1035 ^ 0xA0) >> 2) ^ 6)
                                      + 73));
  v1037 = (v1034 ^ HIBYTE(v1036) ^ (v1036 << ((v1034 & 8 ^ 8) + (v1034 & 8))))
        + 1965009001 * (*(_DWORD *)(v1 + 7216) + (*(_DWORD *)(v1 + 9208) ^ *(_DWORD *)(v1 + 9160)));
  v1038 = *(_QWORD *)(v1 + 9704);
  v1039 = (v1037 - 959846245 - ((2 * v1037) & 0x8D93D136)) ^ (((unint64_t)(v991 & *(_DWORD *)(v1 + 7768)) << v1038)
                                                            + *(_QWORD *)(v1 + 7168)) ^ *(_DWORD *)(v1 + 8132);
  v1040 = v1039 - 959846245 - ((2 * v1039) & 0x8D93D136);
  v1041 = *(_QWORD *)(v1 + 9632);
  v1042 = *(unsigned __int8 *)(v1041 + ((BYTE2(v1025) - 66) ^ 0xCDLL));
  LOBYTE(v1036) = (v1042 >> 2) | ((_BYTE)v1042 << 6);
  v1043 = *(_DWORD *)(v359 + ((v1033 >> 22) & 0x3FC));
  LODWORD(v1018) = *(unsigned __int8 *)(v1041 + ((HIBYTE(v1043) - 66) ^ 0xCDLL));
  LODWORD(v1018) = ((v1018 >> 2) | ((_BYTE)v1018 << 6)) ^ 0x1A | (v1043 << 8);
  HIDWORD(v997) = *(_DWORD *)(v359 + 4 * v1032);
  LODWORD(v997) = HIDWORD(v997);
  v1044 = v1018 + (v997 >> 16) - 2 * (v1018 & (v997 >> 16));
  v1045 = *(_DWORD *)(v1 + 8832);
  LODWORD(v997) = __ROR4__(*(_DWORD *)(v359 + 4 * ((BYTE1(v1031) - ((v1031 >> 7) & 0x40) - 96) ^ 0xA0)), 8);
  LODWORD(v1008) = *(_DWORD *)(v1 + 6824) ^ v1045 ^ *(_DWORD *)(v1 + 8272) ^ (((v1045 >> 4) ^ 0xC6C9E89 ^ v997)
                                                                            - 959846245
                                                                            - ((2 * ((v1045 >> 4) ^ 0xC6C9E89 ^ v997)) & 0x8D93D136)) ^ *(_DWORD *)(v359 + 4 * (v1036 ^ 0x1Au));
  LODWORD(v1018) = *(_DWORD *)(v1 + 7928) ^ *(_DWORD *)(v1 + 9096) ^ 0x175C1E51;
  v1046 = *(_DWORD *)(v359 + 4 * BYTE2(v1033)) ^ __ROR4__(*(_DWORD *)(v359+ 4* (((BYTE1(v1025)- ((v1025 >> 7) & 4)+ 6) ^ 2)- 4)), 8);
  LODWORD(v997) = __ROR4__(*(_DWORD *)(v359 + ((v1032 >> 22) & 0x3FC)), 24);
  v1047 = (v1046 ^ v997) - 959846245 - ((2 * (v1046 ^ v997)) & 0x8D93D136);
  HIDWORD(v997) = *(_DWORD *)(v359 + 4 * v1031);
  LODWORD(v997) = HIDWORD(v997);
  v1048 = *(_DWORD *)(v1 + 8828);
  v1049 = ((v1047 ^ ((v997 >> 16) - 959846245 - ((2 * (v997 >> 16)) & 0x8D93D136)))
         - 959846245
         - ((2 * (v1047 ^ ((v997 >> 16) - 959846245 - ((2 * (v997 >> 16)) & 0x8D93D136)))) & 0x8D93D136)) ^ v1048;
  v1050 = *(_DWORD *)(v1 + 8808);
  v1051 = *(_DWORD *)(v1 + 8868);
  v1052 = *(_DWORD *)(v1 + 7160)
        - 1123395605 * (*(_DWORD *)(v1 + 9120) ^ v1051)
        + ((v1049 + 1501089967 - ((2 * v1049) & 0xB2F1A15E)) ^ v1050);
  v1053 = (v1052 - 959846245 - ((2 * v1052) & 0x8D93D136)) ^ (v1018 - 959846245 - ((2 * v1018) & 0x8D93D136));
  v1054 = *(_DWORD *)(v1 + 7808);
  v1055 = ((v1053 + 2131364622 - ((2 * v1053) & 0xFE14161C)) ^ v1054) & 0x8EE12844 | ((v1053
                                                                                     + 2131364622
                                                                                     - ((2 * v1053) & 0x7E14161C)) ^ v1054) & 0x711ED7BB;
  v1056 = *(_DWORD *)(v1 + 6816) ^ *(_DWORD *)(v1 + 8000) ^ (v1055 - 959846245 - ((2 * v1055) & 0x8D93D136));
  v1057 = v1056 ^ 0xDD47C206;
  LODWORD(v1025) = *(_DWORD *)(v359 + 4 * v1025);
  HIDWORD(v997) = v1025 - ((2 * v1025) & 0xD136) + 59579;
  LODWORD(v997) = v1025;
  v1058 = (*(_QWORD *)(v1 + 6728) >> v1029) | ((unint64_t)(v991 & *(_DWORD *)(v1 + 7752)) << v1038);
  v1059 = v977 ^ (v1058 - 959846245 - ((2 * v1058) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8304) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1033)), 8) ^ __ROR4__(*(_DWORD *)(v359 + 4 * ((HIBYTE(v1031) - ((v1031 >> 23) & 0x58) + 44) ^ 0x2CLL)), 24) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1032)) ^ ((v997 >> 16) - 0x200000) ^ 0x2E52E89B;
  v1060 = v1040 ^ v977;
  HIDWORD(v997) = *(_DWORD *)(v359 + 4 * ((v1008 ^ v1044) ^ 0x9Bu));
  LODWORD(v997) = HIDWORD(v997);
  LODWORD(v1032) = (v997 >> 16) ^ __ROR4__(*(_DWORD *)(v359 + ((v1060 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1059)) ^ (((*(_DWORD *)(v359 + 4 * BYTE1(v1057)) >> 8) + *(_DWORD *)(v1 + 9696) + ~((2 * (*(_DWORD *)(v359 + 4 * BYTE1(v1057)) >> 8)) & 0x193D136)) ^ 0xC6C9E89B | (*(_DWORD *)(v359 + 4 * BYTE1(v1057)) << 24));
  v1061 = ((unint64_t)(v991 & *(_DWORD *)(v1 + 7736)) << v1038) ^ *(_DWORD *)(v1 + 6812) ^ *(_DWORD *)(v1 + 8032) ^ (v1032 - 959846245 - ((2 * v1032) & 0x8D93D136));
  v1062 = *(unsigned int *)(v359 + ((v1057 >> 22) & 0x3FC));
  v1063 = v1008 ^ v1044 ^ 0xC6C9E89B;
  v1064 = *(_DWORD *)(v1 + 9240) ^ 0x3Au;
  v1065 = *(_QWORD *)(v1 + 7248);
  LODWORD(v1062) = (*(_QWORD *)(v1 + 7256) >> (*(_DWORD *)(v1 + 9240) ^ 0x3Au)) ^ v1065 ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1059), 16) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1063)) ^ (((*(_DWORD *)(v359 + 4 * BYTE1(v1060)) >> 8) - 959846245 - ((2 * (*(_DWORD *)(v359 + 4 * BYTE1(v1060)) >> 8)) & 0x193D136)) ^ 0xC6C9E89B | (*(_DWORD *)(v359 + 4 * BYTE1(v1060)) << 24)) ^ (*(unsigned __int8 *)(*(_QWORD *)(v1 + 9584) + (((v1062 >> 19) & 0xE0 | (v1062 >> 27)) ^ 0x9C)) ^ 0x7D | ((_DWORD)v1062 << 8));
  LODWORD(v1062) = (v1062 - 959846245 - ((2 * v1062) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8056);
  v1066 = (v1062 - 959846245 - ((2 * v1062) & 0x8D93D136)) ^ v977;
  v1067 = ((*(_DWORD *)(v359 + 4 * v1066) << 16)
         - 959846245
         - ((*(_DWORD *)(v359 + 4 * v1066) << 17) & 0x8D920000)) ^ HIWORD(*(_DWORD *)(v359 + 4 * v1066));
  v1068 = (*(_DWORD *)(v1 + 6800) ^ *(_DWORD *)(v1 + 8064)) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1060)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1059)), 8) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v1056 ^ 6u)), 16) ^ __ROR4__(*(_DWORD *)(v359 + ((v1063 >> 22) & 0x3FC)), 24);
  HIDWORD(v997) = *(_DWORD *)(v359
                            + 4
                            * (((57 * (BYTE1(v1008) ^ BYTE1(v1044) ^ 0xE8)) ^ *(_BYTE *)(*(_QWORD *)(v1 + 9680) + ((57 * (BYTE1(v1008) ^ BYTE1(v1044) ^ 0xE8)) ^ 0x1DLL)) ^ 0x7C)
                                              + 86));
  LODWORD(v997) = HIDWORD(v997);
  v1069 = v997 >> 8;
  HIDWORD(v997) = *(_DWORD *)(v359 + ((v1059 >> 22) & 0x3FC));
  LODWORD(v997) = HIDWORD(v997);
  v1070 = v997 >> 24;
  v1071 = v1069 & 0x1000;
  if ((v1069 & 0x1000 & (unsigned __int16)v1070) != 0)
    v1071 = -v1071;
  v1072 = ((*(_QWORD *)(v1 + 7240) >> (*(_DWORD *)(v1 + 9240) ^ 0x3Au)) | v1065) ^ v977 ^ *(_DWORD *)(v1 + 8116) ^ v1069 & 0xFFFFEFFF ^ *(_DWORD *)(v359 + 4 * (*(unsigned __int8 *)(*(_QWORD *)(v1 + 9624) + (((v1056 >> 11) & 0xE0 | (v1056 >> 19) & 0x1F) ^ 0x55)) ^ 0x7DLL)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v1040 ^ v977)), 16) ^ (v1071 + v1070);
  v1073 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9632) + ((BYTE2(v1072) - 66) ^ 0xCDLL));
  v1074 = *(_QWORD *)(v1 + 9632);
  *(_DWORD *)(v1 + 8304) = (v1073 >> 2) | (v1073 << 6);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * BYTE1(v1068));
  LODWORD(v1075) = HIDWORD(v1075);
  v1076 = (v1075 >> 8) - 959846245 - ((2 * (v1075 >> 8)) & 0x8D93D136);
  v1077 = v1061 ^ 0xC6C9E89B;
  v1078 = *(unsigned int *)(v359 + ((v1077 >> 22) & 0x3FC));
  v1079 = *(_BYTE *)(*(_QWORD *)(v1 + 9640) + (((v1078 >> 20) & 0xF0 | (v1078 >> 28)) ^ 0x39));
  v1080 = *(_DWORD *)(v1 + 9664);
  v1081 = (v1079 ^ ((v1079 ^ 0xA0) >> 3) ^ ((v1079 ^ 0xA0) >> 2) ^ 6) + 73;
  LODWORD(v1078) = v1081 | (((_DWORD)v1078 << 8) - 959846245 - (v1080 & ((_DWORD)v1078 << 9))) ^ 0xC6C9E89B;
  v1082 = (v1081 & 8 ^ 8) + (v1081 & 8);
  v1083 = *(unsigned int *)(v359 + 4 * v1068);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * HIBYTE(v1072));
  LODWORD(v1075) = HIDWORD(v1075);
  v1084 = (v1075 >> 24) - 959846245 - ((2 * (v1075 >> 24)) & 0x8D93D136);
  v1085 = *(unsigned int *)(v359 + 4 * BYTE1(v1072));
  v1086 = ((v1085 >> (~BYTE2(v1083) & 8u | BYTE2(v1083) & v1082))
         - 959846245
         - ((2 * (v1085 >> (~BYTE2(v1083) & 8u | BYTE2(v1083) & v1082))) & 0x8D93D136)) ^ ((_DWORD)v1085 << 24);
  v1087 = v1077 >> ((v1066 & 8 ^ 8) + (v1066 & 8));
  LODWORD(v1077) = *(_DWORD *)(v359 + 4 * BYTE2(v1077)) ^ __ROR4__(*(_DWORD *)(v359 + ((v1068 >> 22) & 0x3FC)), 24);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * ((HIBYTE(v1066) - ((v1066 >> 23) & 0x40) - 96) ^ 0xA0));
  LODWORD(v1075) = HIDWORD(v1075);
  v1088 = (v1075 >> 24) - 959846245 - ((2 * (v1075 >> 24)) & 0x8D93D136);
  v1089 = v1086 ^ (v1077 - 959846245 - ((2 * v1077) & 0x8D93D136));
  v1090 = v1067 ^ (v1089 - 959846245 - ((2 * v1089) & 0x8D93D136));
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * v1072);
  LODWORD(v1075) = HIDWORD(v1075);
  v1091 = (v1075 >> 16) ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1087), 8) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1068));
  v1092 = ((v1050 ^ 0x9FB13834 ^ v1048) - 959846245 - ((2 * (v1050 ^ 0x9FB13834 ^ v1048)) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9208) ^ v1076 ^ v1084 ^ *(_DWORD *)(v359 + 4 * BYTE2(v1066)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * ((*(_BYTE *)(*(_QWORD *)(v1 + 9440) + ((57 * (v1061 ^ 0x9B)) ^ 0xD6)) ^ 0xE) + 86)), 16);
  v1093 = (v1092 - 959846245 - ((2 * v1092) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9160);
  v1094 = v1080;
  v1095 = (v1093 + 2131364622 - ((2 * v1093) & 0xFE14161C)) ^ v1054;
  v1096 = (v1095 - 959846245 - ((2 * v1095) & 0x8D93D136)) ^ (((v1048 << 8) ^ 0xC9E89B00)
                                                            - 959846245
                                                            - (v1080 & (2 * ((v1048 << 8) ^ 0xC9E89B00))));
  v1097 = ((v1096 - 959846245 - ((2 * v1096) & 0x8D93D136)) ^ (((v1050 << 8) ^ 0x78D0AF00)
                                                             - 959846245
                                                             - (v1080 & (2 * ((v1050 << 8) ^ 0x78D0AF00)))))
        + 1626281193 * ((*(_DWORD *)(v1 + 7792) ^ v1051 ^ 0x28275BC8) + (*(_DWORD *)(v1 + 9120) ^ 0x4E413DAE));
  v1098 = *(_DWORD *)(v1 + 7152) - 166714639 * (*(_DWORD *)(v1 + 7920) ^ *(_DWORD *)(v1 + 9096) ^ 0x6EFC4789) + v1090;
  v1099 = -959846245 - 976724435 * (v1045 ^ 0xC6C9E89B) - ((-1953448870 * (v1045 ^ 0xC6C9E89B)) & 0x8D93D136);
  v1100 = v1098 - 959846245 - ((2 * v1098) & 0x8D93D136);
  v1101 = *(_DWORD *)(v1 + 9608) - 617254926;
  v1102 = *(_DWORD *)(v1 + 7728);
  v1103 = *(_QWORD *)(v1 + 9704);
  v1104 = (*(_QWORD *)(v1 + 6856) >> v1064) | ((unint64_t)((v1101 ^ 0x40C68AFC) & v1102) << v1103);
  v1105 = v1101;
  v1106 = *(_QWORD *)(v1 + 9672);
  v1107 = ((unint64_t)(*(_DWORD *)(v1 + 7320) ^ (v1101 ^ 0x1A0E000A) & v1102) << v1106) + *(_QWORD *)(v1 + 7144);
  v1108 = *(_DWORD *)(v1 + 8160) ^ (v1107 - 959846245 - ((2 * v1107) & 0x8D93D136));
  v1109 = *(_DWORD *)(v1 + 9696);
  v1110 = (v1097 + 666434948 - ((2 * (v1097 + 1626281193)) & 0x8D93D136)) ^ (v1108 + v1109 + ~((2 * v1108) & 0x8D93D136));
  v1111 = *(_DWORD *)(v1 + 8328) ^ (v1104 - 959846245 - ((2 * v1104) & 0x8D93D136));
  v1112 = v1100 ^ (v1111 - 959846245 - ((2 * v1111) & 0x8D93D136));
  v1113 = *(_DWORD *)(v1 + 8168) ^ ((*(_QWORD *)(v1 + 7560) >> v1064) + *(_QWORD *)(v1 + 7552)) ^ (v1091
                                                                                                 - 959846245
                                                                                                 - ((2 * v1091) & 0x8D93D136));
  v1114 = (v1113 - 959846245 - ((2 * v1113) & 0x8D93D136)) ^ v1088;
  v1115 = *(_DWORD *)(v1 + 6788) ^ v1099 ^ *(_DWORD *)(v1 + 8188) ^ ((v1083 >> 16) | ((_DWORD)v1083 << 16)) ^ v1078 ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1066)), 8) ^ *(_DWORD *)(v359 + 4 * (*(_DWORD *)(v1 + 8304) ^ 0x1Au));
  v1116 = (v1112 - 959846245 - ((2 * v1112) & 0x8D93D136)) ^ v1030;
  v1117 = *(unsigned __int8 *)(v1074 + ((BYTE1(v1116) - 66) ^ 0xCDLL));
  LOBYTE(v1078) = (v1117 >> 2) | ((_BYTE)v1117 << 6);
  v1118 = (v1114 - 959846245 - ((2 * v1114) & 0x8D93D136)) ^ v1030;
  v1119 = (v1115 - 959846245 - ((2 * v1115) & 0x8D93D136)) ^ v1030;
  HIDWORD(v1075) = *(_DWORD *)(v359 + ((v1119 >> 22) & 0x3FC));
  LODWORD(v1075) = HIDWORD(v1075);
  v1120 = (v1075 >> 24) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1118)), 8);
  v1121 = (v1110 - 959846245 - ((2 * v1110) & 0x8D93D136)) ^ v1030;
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * (v1078 ^ 0x1Au));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1078) = (v1075 >> 8) ^ __ROR4__(*(_DWORD *)(v359 + ((v1121 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1119), 16) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1118));
  v1122 = (v1118 >> 20) & 0xF0 | (v1118 >> 28);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * v1118);
  LODWORD(v1075) = HIDWORD(v1075);
  v1123 = *(unsigned int *)(v359 + 4 * ((v1112 - 101 - ((2 * v1112) & 0x36)) ^ v1030));
  v1124 = *(unsigned int *)(v359 + 4 * BYTE1(v1121));
  v1125 = (v1124 >> ((~BYTE2(v1123) & 8 | BYTE2(v1123) & 8) & ~BYTE2(v1123) | BYTE2(v1123) & 8u))
        + ((_DWORD)v1124 << 24);
  v1126 = v1120 ^ *(_DWORD *)(v359 + 4 * BYTE2(v1121)) ^ ((v1123 >> 16) | ((_DWORD)v1123 << 16));
  v1127 = *(_DWORD *)(v1 + 9040);
  LODWORD(v1123) = (v1127 ^ 0x39361764) + (*(_DWORD *)(v1 + 9472) ^ 0x63EE69F3);
  v1128 = (v1075 >> 16) ^ __ROR4__(*(_DWORD *)(v359 + ((v1116 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v359
                                                                                                + 4 * BYTE2(v1119)) ^ v1125;
  LODWORD(v1078) = (*(_DWORD *)(v1 + 9648) ^ 0x39361764) + (*(_DWORD *)(v1 + 9496) ^ 0xC60F2173) + v1078 + 1;
  v1129 = v1078 - 959846245 - ((2 * v1078) & 0x8D93D136);
  *(_DWORD *)(v1 + 9096) = v1129;
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * BYTE1(v1119));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1116) = *(_DWORD *)(v359 + 4 * BYTE2(v1116)) ^ 0xC6C9E89B ^ __ROR4__(*(_DWORD *)(v359+ 4* (((*(_BYTE *)(*(_QWORD *)(v1 + 9576) + (v1122 ^ 0x4B)) - 6) ^ 0x11) + 73)), 24) ^ __ROR4__(*(_DWORD *)(v359+ 4* v1121), 16) ^ ((v1075 >> 8)- 959846245- ((2 * (v1075 >> 8)) & 0x8D93D136));
  LODWORD(v1119) = (v1128 + v1109 + ~((2 * v1128) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9052);
  LODWORD(v1119) = (v1119 - 959846245 - ((2 * v1119) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8264);
  v1130 = (*(_DWORD *)(v1 + 9656) ^ 0xC6C9E89B) + 1;
  *(_DWORD *)(v1 + 8328) = v1130;
  LODWORD(v1116) = *(_DWORD *)(v1 + 8332) ^ 0x3EEA0957 ^ (*(_DWORD *)(v1 + 8572) + v1130 + v1116);
  v1131 = *(_DWORD *)(v1 + 9600) ^ 0x8E4EC1E ^ (*(_DWORD *)(v1 + 8400)
                                              + (*(_DWORD *)(v1 + 9488) ^ 0x74F93565)
                                              - *(_DWORD *)(v1 + 9064)
                                              + (*(_DWORD *)(v1 + 9688) ^ 0x39361764)
                                              + v1119
                                              + 1);
  LODWORD(v1122) = v1123 + v1126 - 959846244 - ((2 * (v1123 + v1126 + 1)) & 0x8D93D136);
  *(_DWORD *)(v1 + 9052) = v1122;
  v1132 = (v1116 - 959846245 - ((2 * v1116) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9464);
  *(_DWORD *)(v1 + 9464) = v1132;
  v1133 = v1127 ^ 0x8E4EC1E ^ (v1131 - 959846245 - ((2 * v1131) & 0x8D93D136));
  *(_DWORD *)(v1 + 9040) = v1133;
  v1134 = (unint64_t)((v1101 ^ 0xC0C68ADC) & *(_DWORD *)(v1 + 7824)) << v1106;
  LOBYTE(v1074) = v1106;
  LODWORD(v1119) = (*(_QWORD *)(v1 + 7464) >> v1064) + v1134;
  LODWORD(v1078) = v1134;
  *(_QWORD *)(v1 + 9208) = v1134;
  LODWORD(v1119) = *(_DWORD *)(v1 + 8356) ^ (v1119 - 959846245 - ((2 * v1119) & 0x8D93D136));
  LODWORD(v1119) = v1129 ^ (v1119 - 959846245 - ((2 * v1119) & 0x8D93D136));
  LODWORD(v1134) = v1119 - 959846245 - ((2 * v1119) & 0x8D93D136);
  LODWORD(v1119) = ((v1078 ^ *(_QWORD *)(v1 + 8800)) + 1501089967 - ((2 * (v1078 ^ *(_QWORD *)(v1 + 8800))) & 0xB2F1A15E)) ^ 0x15F569E2 ^ ((*(_DWORD *)(v1 + 0x2000) ^ v1030 ^ v1132) + 1501089967 - ((2 * (*(_DWORD *)(v1 + 0x2000) ^ v1030 ^ v1132)) & 0xB2F1A15E));
  v1135 = *(_QWORD *)(v1 + 7128) >> v1064;
  *(_QWORD *)(v1 + 9120) = v1135;
  LODWORD(v1135) = *(_DWORD *)(v1 + 8196) ^ ((v1135 ^ *(_QWORD *)(v1 + 7136))
                                           - 959846245
                                           - ((2 * (v1135 ^ *(_QWORD *)(v1 + 7136))) & 0x8D93D136));
  LODWORD(v1135) = v1122 ^ (v1135 - 959846245 - ((2 * v1135) & 0x8D93D136));
  LODWORD(v1116) = ((unint64_t)((v1101 ^ 0xC0C68ADC) & *(_DWORD *)(v1 + 7720)) << v1103) + *(_QWORD *)(v1 + 7112);
  LODWORD(v1116) = *(_DWORD *)(v1 + 8212) ^ (v1116 - 959846245 - ((2 * v1116) & 0x8D93D136));
  LODWORD(v1116) = v1133 ^ (v1116 - 959846245 - ((2 * v1116) & 0x8D93D136));
  LODWORD(v1134) = v1134 ^ v1030;
  v1136 = ((_DWORD)v1135 - 959846245 - ((2 * (_DWORD)v1135) & 0x8D93D136)) ^ v1030;
  LOBYTE(v1133) = BYTE3(v1119) - ((v1119 >> 23) & 0x58);
  v1137 = *(_DWORD *)(v359 + 4 * ((v1134 | 0x86) + BYTE2(v1134) + (~(_BYTE)v1134 & 0x79) + 1));
  v1138 = *(_DWORD *)(v359 + 4 * v1136);
  LODWORD(v1124) = HIWORD(v1138) - 959846245 - ((2 * HIWORD(v1138)) & 0x1D136);
  v1139 = (v1138 << 16) - 959846245 - ((v1138 << 17) & 0x8D920000);
  v1140 = ((_DWORD)v1116 - 959846245 - ((2 * (_DWORD)v1116) & 0x8D93D136)) ^ v1030;
  HIDWORD(v1075) = *(_DWORD *)(v359 + ((v1140 >> 22) & 0x3FC));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1075) = *(_DWORD *)(v359
                             + 4
                             * ((BYTE1(v1134) - ((v1134 >> 7) & 0x1C) - 114) ^ 0x8ELL)) ^ __ROR4__(((v1075 >> 24) - 959846245 - ((2 * (v1075 >> 24)) & 0x8D93D136)) ^ (*(_DWORD *)(v359 + 4 * BYTE2(v1136)) - 959846245 - ((2 * *(_DWORD *)(v359 + 4 * BYTE2(v1136))) & 0x8D93D136)), 24) ^ 0xC28889E0;
  HIDWORD(v1075) = v1075;
  LODWORD(v1116) = v1075 >> 8;
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v359 + 4 * v1119), 16);
  LODWORD(v1123) = ((v1116 ^ v1075) - 959846245 - ((2 * (v1116 ^ v1075)) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8240);
  LODWORD(v1116) = v1124 ^ v1139 ^ *(_DWORD *)(v359 + 4 * BYTE2(v1119)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1140)), 8);
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v359 + ((v1134 >> 22) & 0x3FCLL)), 24);
  LODWORD(v1116) = (v1116 ^ v1075) - 959846245 - ((2 * (v1116 ^ v1075)) & 0x8D93D136);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * ((v1140 - ((2 * v1140) & 0x40) - 96) ^ 0xA0u));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1116) = ((*(_QWORD *)(v1 + 7104) >> v1064) + *(_DWORD *)(v1 + 7096)) ^ v1030 ^ *(_DWORD *)(v1 + 8320) ^ v1116;
  LODWORD(v1122) = (v1075 >> 16) - 959846245 - ((2 * (v1075 >> 16)) & 0x8D93D136);
  LODWORD(v1124) = ((*(_QWORD *)(v1 + 7544) >> v1064) | *(_QWORD *)(v1 + 7088)) ^ v1030 ^ *(_DWORD *)(v1 + 8260) ^ __ROR4__(*(_DWORD *)(v359 + ((v1136 >> 22) & 0x3FC)), 24);
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1119)), 8);
  v1141 = v1122 ^ (v1137 - 959846245 - ((2 * v1137) & 0x8D93D136)) ^ ((v1124 ^ v1075)
                                                                    - 959846245
                                                                    - ((2 * (v1124 ^ v1075)) & 0x8D93D136));
  LOBYTE(v1122) = ((~(_BYTE)v1134 & 0x10) + (v1134 & 0x10)) & ~(_BYTE)v1134;
  v1142 = *(unsigned int *)(v359 + 4 * v1134);
  LODWORD(v1134) = (unsigned __int16)(v1142 >> ((((v1122 ^ 0x31) + v1122) ^ 0x21) & v1134 | v1122)) | ((unsigned __int16)v1142 << 16);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * ((v1133 + 44) ^ 0x2CLL));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1142) = v1075 >> 24;
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1136)), 8);
  LODWORD(v1142) = *(_DWORD *)(v1 + 8308) ^ (((unint64_t)(((*(_DWORD *)(v1 + 7312) ^ (v1105 ^ 0xFD180450) & *(_DWORD *)(v1 + 7712))
                                                                - 1) ^ 0x5F8B4BB0) << v1106)
                                           + *(_DWORD *)(v1 + 7080)) ^ ((v1142 ^ v1075 ^ v1134)
                                                                      - 959846245
                                                                      - ((2 * (v1142 ^ v1075 ^ v1134)) & 0x8D93D136));
  v1143 = *(_DWORD *)(v359 + 4 * BYTE2(v1140)) ^ v1030 ^ ((_DWORD)v1142
                                                          - 959846245
                                                          - ((2 * (_DWORD)v1142) & 0x8D93D136));
  LOBYTE(v1134) = (BYTE2(v1116) ^ 0xC9) - ((v1116 >> 15) & 4);
  LODWORD(v1136) = *(_DWORD *)(v1 + 6784) ^ (v1123 - 959846245 - ((2 * v1123) & 0x8D93D136));
  v1144 = *(_QWORD *)(v1 + 9680);
  v1145 = v1116 ^ 0xC6C9E89B;
  LODWORD(v1123) = *(_DWORD *)(v359 + ((v1145 >> 22) & 0x3FC));
  LODWORD(v1122) = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9592) + ((BYTE3(v1123) - 66) ^ 0x9DLL));
  v1146 = (v1122 >> 1) | ((_DWORD)v1122 << 7);
  v1147 = v1141 ^ 0xC6C9E89B;
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * BYTE1(v1147));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1122) = (v1075 >> 8) - 959846245 - ((2 * (v1075 >> 8)) & 0x8D93D136);
  LOBYTE(v1146) = v1146 ^ (32 * v1146) ^ (16 * v1146) ^ 0x41;
  LODWORD(v1123) = ((v1146 >> 2) | ((_BYTE)v1146 << 6)) | (((_DWORD)v1123 << 8)
                                                                                           - 959846245
                                                                                           - (v1094 & ((_DWORD)v1123 << 9))) ^ 0xC6C9E89B;
  v1148 = *(unsigned int *)(v359
                          + 4
                          * ((*(_BYTE *)(v1144
                                                        + ((57 * (BYTE3(v1136) ^ 0xE0)) ^ 0x1DLL)) ^ (57 * (BYTE3(v1136) ^ 0xE0)) ^ 0x7C)
                                            + 86));
  v1149 = *(_QWORD *)(v1 + 9624);
  LODWORD(v1145) = (*(unsigned __int8 *)(v1149 + (((v1148 >> 19) & 0xE0 | (v1148 >> 27)) ^ 0xBD)) ^ 0x7D | ((_DWORD)v1148 << 8)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1143), 16) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1145)), 8) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1147));
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * (BYTE1(v1136) ^ 0x88u));
  LODWORD(v1075) = *(_DWORD *)(v359 + 4 * ((unsigned __int16)(v1136 ^ 0x8889) >> 8));
  v1150 = (v1075 >> 8) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v1141 ^ 0x9Bu)), 16);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * (v1116 ^ 0x9Bu));
  LODWORD(v1075) = HIDWORD(v1075);
  v1151 = *(_DWORD *)(v359 + ((v1143 >> 22) & 0x3FC));
  v1152 = *(_DWORD *)(v1 + 8280) ^ ((*(_QWORD *)(v1 + 6720) >> v1064) | ((unint64_t)((v1105 ^ 0x4080Cu) & *(_DWORD *)(v1 + 7696)) << v1103)) ^ ((v1151 << 8) - 959846245 - (v1094 & (v1151 << 9)));
  v1153 = v1122 ^ v1030 ^ ((v1075 >> 16)
                                       - 959846245
                                       - ((2 * (v1075 >> 16)) & 0x8D93D136)) ^ *(_DWORD *)(v359 + 4 * ((v1136 ^ 0xE0C28889) >> 16)) ^ HIBYTE(v1151) ^ (v1152 - 959846245 - ((2 * v1152) & 0x8D93D136));
  v1154 = (v1150 + v1109 + ~((2 * v1150) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8288);
  v1155 = (v1123 - 959846245 - ((2 * v1123) & 0x8D93D136)) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1143)) ^ (v1154 + v1109 + ~((2 * v1154) & 0x8D93D136));
  LODWORD(v1122) = (v1145 - 959846245 - ((2 * v1145) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8344);
  v1156 = (v1105 ^ 0x4080Cu) & *(_DWORD *)(v1 + 7064);
  *(_QWORD *)(v1 + 9472) = v1156;
  v1157 = *(_DWORD *)(v1 + 6776) ^ (v1155 - 959846245 - ((2 * v1155) & 0x8D93D136));
  LODWORD(v1145) = ((*(_QWORD *)(v1 + 7056) >> v1064) | (v1156 << v1103)) ^ v1030;
  LOBYTE(v1156) = *(_BYTE *)(*(_QWORD *)(v1 + 9640)
                           + (((v1157 >> 4) & 0xF0 | ((unsigned __int16)v1157 >> 12)) ^ 0x39));
  v1158 = v1145 ^ ((_DWORD)v1122 - 959846245 - ((2 * (_DWORD)v1122) & 0x8D93D136));
  LOBYTE(v1145) = v1156 ^ ((v1156 ^ 0xA0) >> 3) ^ ((v1156 ^ 0xA0) >> 2);
  LODWORD(v1134) = *(_DWORD *)(v1 + 8300) ^ *(_DWORD *)(v1 + 7532) ^ __ROR4__(*(_DWORD *)(v359 + ((v1147 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v359+ 4* (v1136 ^ 0x89u)), 16) ^ *(_DWORD *)(v359+ 4* ((v1134 + 2) ^ 2u));
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1143)), 8);
  v1159 = *(_QWORD *)(v1 + 9632);
  LODWORD(v1147) = *(unsigned __int8 *)(v1159 + ((v1158 - 66) ^ 0xCDLL));
  LODWORD(v1136) = (v1134 ^ v1075 ^ 0xC6C9E89B)
                 - 959846245
                 - 2 * ((v1134 ^ v1075 ^ 0xC6C9E89B) & 0x46C9E89F ^ (v1134 ^ v1075) & 4);
  LOBYTE(v1143) = (v1147 >> 2) | ((_BYTE)v1147 << 6);
  LODWORD(v1147) = (BYTE2(v1158) - 66);
  LOBYTE(v1134) = (v1147 ^ 0xDF ^ (BYTE2(v1158) - 66) ^ 0x96) & 0x18;
  LODWORD(v1134) = *(unsigned __int8 *)(v1159
                                      + (((v1157 >> ((v1134 ^ 0x18u)
                                                                    + v1134))
                                                         - 66) ^ 0xCDLL));
  LODWORD(v1147) = *(unsigned __int8 *)(v1159
                                      + (((v1147 ^ 0xFFFFFF32) + (v1147 ^ 0xDF) + 1) ^ 0xFFFFFFFC)
                                      + (v1147 ^ 0xDF)) ^ v1147 ^ 0xDF ^ (WORD1(v1158) + 190) ^ 0xFFFFFF96 ^ 0x21;
  LOBYTE(v1148) = (v1147 >> 2) | ((_BYTE)v1147 << 6);
  LODWORD(v1147) = *(unsigned __int8 *)(v1159 + ((v1153 - 66) ^ 0xCDLL));
  HIDWORD(v1075) = *(_DWORD *)(v359 + ((v1158 >> 22) & 0x3FC));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1156) = (v1075 >> 24) - 959846245 - ((2 * (v1075 >> 24)) & 0x8D93D136);
  v1160 = *(_DWORD *)(v359 + 4 * BYTE1(v1158));
  LODWORD(v1158) = (v1160 << 24) - 959846245 - ((v1160 << 25) & 0x8C000000);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4
                                    * (((v1147 >> 2) | ((_BYTE)v1147 << 6)) ^ 0x1Au));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1147) = (v1160 >> 8) - 959846245 - ((2 * (v1160 >> 8)) & 0x193D136);
  v1161 = ((v1075 >> 16) - 959846245 - ((2 * (v1075 >> 16)) & 0x8D93D136)) ^ v1156;
  LODWORD(v1156) = v1136 ^ v1030;
  LODWORD(v1077) = *(_DWORD *)(v359 + 4 * ((v1136 ^ v1030) >> 24));
  LODWORD(v1136) = *(_DWORD *)(v359 + 4 * BYTE2(v1157)) ^ BYTE3(v1077) ^ ((_DWORD)v1077 << 8) ^ __ROR4__(*(_DWORD *)(v359 + 4 * ((BYTE1(v1153) - ((v1153 >> 7) & 0x40) - 96) ^ 0xA0)), 8);
  LODWORD(v1157) = *(_DWORD *)(v359 + 4 * v1148) ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1157), 16) ^ __ROR4__(*(_DWORD *)(v359+ ((v1153 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v359+ 4 * BYTE1(v1156)), 8);
  LODWORD(v1145) = v1161 ^ __ROR4__(*(_DWORD *)(v359 + 4 * ((v1145 ^ 6) + 73)), 8) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1156));
  LODWORD(v1148) = v1136 ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v1143 ^ 0x1Au)), 16);
  LODWORD(v1136) = v1157 - 959846245 - ((2 * v1157) & 0x8D93D136);
  LODWORD(v1143) = ((*(_QWORD *)(v1 + 7048) >> v1064) | ((unint64_t)((v1105 ^ 0xC0C68ACC) & *(_DWORD *)(v1 + 8952)) << v1074)) ^ v1030 ^ *(_DWORD *)(v1 + 8368) ^ (v1145 - 959846245 - ((2 * v1145) & 0x8D93D136));
  v1162 = (v1105 ^ 0xC0C68ACC) & *(_DWORD *)(v1 + 7680);
  LODWORD(v1136) = ((*(_QWORD *)(v1 + 7040) >> v1064) | (v1162 << v1103)) ^ v1030 ^ *(_DWORD *)(v1 + 8312) ^ v1136;
  LODWORD(v1153) = v1158 ^ *(_DWORD *)(v1 + 7432) ^ v1147 ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1156), 16) ^ __ROR4__(*(_DWORD *)(v359+ 4* (((v1134 >> 2) | ((_BYTE)v1134 << 6)) ^ 0x1Au)), 24) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1153));
  LODWORD(v1153) = *(_DWORD *)(v1 + 9008) ^ v1030 ^ (v1153 - 959846245 - ((2 * v1153) & 0x8D93D136));
  LODWORD(v1162) = ((v1162 << v1074) - 959846245 - ((2 * (v1162 << v1074)) & 0x8D93D136)) ^ 0xC6C9E89B | *(_QWORD *)(v1 + 7440);
  v1163 = ((_DWORD)v1162 - 959846245 - ((2 * (_DWORD)v1162) & 0x8D93D136)) ^ v1030 ^ *(_DWORD *)(v1 + 8352) ^ ((_DWORD)v1148 - 959846245 - ((2 * (_DWORD)v1148) & 0x8D93D136));
  LODWORD(v1162) = *(unsigned __int8 *)(v1159 + ((BYTE1(v1163) - 66) ^ 0xCDLL));
  LOBYTE(v1162) = ((v1162 >> 2) | ((_BYTE)v1162 << 6)) ^ 0x1A;
  LOBYTE(v1145) = (v1162 & 8 ^ 8) + (v1162 & 8);
  v1164 = v1136 ^ 0xC6C9E89B;
  v1165 = *(unsigned int *)(v359 + 4 * BYTE1(v1164));
  LODWORD(v1165) = (v1165 >> v1145) | ((_DWORD)v1165 << 24);
  v1166 = v1153 ^ 0xC6C9E89B;
  v1167 = v1143 ^ 0xC6C9E89B;
  LODWORD(v1145) = *(_DWORD *)(v359 + 4 * BYTE2(v1164)) ^ __ROR4__(*(_DWORD *)(v359 + ((v1166 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v1167 >> v1145)), 8);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * v1163);
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1148) = (v1075 >> 16) - 959846245 - ((2 * (v1075 >> 16)) & 0x8D93D136);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * BYTE1(v1166));
  LODWORD(v1075) = HIDWORD(v1075);
  v1168 = __ROR4__(*(_DWORD *)(v359 + 4 * (v1136 ^ 0x9Bu)), 16) ^ 0xC6C9E89B ^ *(_DWORD *)(v359 + 4 * BYTE2(v1163)) ^ __ROR4__(*(_DWORD *)(v359 + ((v1167 >> 22) & 0x3FC)), 24) ^ ((v1075 >> 8) - 959846245 - ((2 * (v1075 >> 8)) & 0x8D93D136));
  LODWORD(v1136) = (v1145 ^ v1148 ^ 0xC6C9E89B)
                 - 959846245
                 - 2 * ((v1145 ^ v1148 ^ 0xC6C9E89B) & 0x46C9E89F ^ (v1145 ^ v1148) & 4);
  LODWORD(v1145) = (*(_QWORD *)(v1 + 7024) >> v1064) ^ *(_QWORD *)(v1 + 7032);
  LODWORD(v1145) = *(_DWORD *)(v1 + 8424) ^ (v1145 - 959846245 - ((2 * v1145) & 0x8D93D136));
  v1169 = v359;
  v1170 = ((_DWORD)v1145 - 959846245 - ((2 * (_DWORD)v1145) & 0x8D93D136)) ^ v1030 ^ *(_DWORD *)(v359
                                                                                               + 4 * BYTE2(v1167)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v1153 ^ 0x9Bu)), 16) ^ __ROR4__(*(_DWORD *)(v359 + ((v1164 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1162), 8);
  LODWORD(v1143) = *(_DWORD *)(v1 + 8392) ^ 0xC6C9E89B ^ *(_DWORD *)(v359 + 4 * BYTE2(v1166)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v1143 ^ 0x9Bu)), 16);
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v359 + ((v1163 >> 22) & 0x3FC)), 24);
  LODWORD(v1163) = *(_DWORD *)(v1 + 6768) ^ *(_DWORD *)(v1 + 8360) ^ v1136;
  v1171 = v1105 ^ 0xC0C68AFC;
  *(_QWORD *)(v1 + 9648) = v1171;
  LOBYTE(v1159) = v1103;
  LODWORD(v1143) = (*(_QWORD *)(v1 + 6712) >> v1064) ^ v1030 ^ ((unint64_t)(v1171 & *(_DWORD *)(v1 + 7672)) << v1103) ^ ((v1143 ^ v1075 ^ v1165) - 959846245 - ((2 * (v1143 ^ v1075 ^ v1165)) & 0x8D93D136));
  LODWORD(v1162) = (v1168 - 959846245 - ((2 * v1168) & 0x8D93D136)) ^ v1030;
  LODWORD(v1162) = (v1162 - 959846245 - ((2 * v1162) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8440);
  LODWORD(v1164) = *(_DWORD *)(v1 + 7304) ^ ((*(_DWORD *)(v1 + 9536) & 0xD4D4D4D4 ^ 0x10141444)
                                           + (*(_DWORD *)(v1 + 9536) & 0xD4D4D4D4 ^ 0xC4C0C090));
  LODWORD(v1164) = ((unint64_t)(v1164 & *(_DWORD *)(v1 + 7704)) >> *(_QWORD *)(v1 + 8968)) ^ ((unint64_t)(v1164 & (v1105 ^ 0xC0C488FC)) << v1103);
  v1172 = ((_DWORD)v1162 - 959846245 - ((2 * (_DWORD)v1162) & 0x8D93D136)) ^ ((_DWORD)v1164
                                                                            - 959846245
                                                                            - ((2 * (_DWORD)v1164) & 0x8D93D136));
  v1173 = v1163 ^ 0xC6C9E89B;
  LODWORD(v1164) = *(_DWORD *)(v359 + 4 * BYTE2(v1173)) ^ __ROR4__(*(_DWORD *)(v359+ 4* ((*(_BYTE *)(v1144 + ((57 * BYTE3(v1143)) ^ 0x1DLL)) ^ (57 * BYTE3(v1143)) ^ 0x7C)+ 86)), 24) ^ __ROR4__(*(_DWORD *)(v359+ 4* (*(unsigned __int8 *)(v1149 + (((v1172 >> 3) | (32 * (v1172 & 7))) ^ 0xBDLL)) ^ 0x7DLL)), 16) ^ __ROR4__(*(_DWORD *)(v359 + 4 * BYTE1(v1170)), 8);
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * BYTE1(v1143));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1165) = *(_DWORD *)(v359
                             + 4
                             * ((*(_BYTE *)(*(_QWORD *)(v1 + 9440)
                                                           + ((57 * BYTE2(v1170)) ^ 0xD6)) ^ 0xE)
                                               + 86)) ^ (((*(_DWORD *)(v359 + 4 * v1143) << 16)
                                                        - 959846245
                                                        - ((*(_DWORD *)(v359 + 4 * v1143) << 17) & 0x8D920000)) ^ 0xC6C9E89B | HIWORD(*(_DWORD *)(v359 + 4 * v1143))) ^ __ROR4__(*(_DWORD *)(v359 + ((v1173 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (*(unsigned __int8 *)(*(_QWORD *)(v1 + 9584) + (((v1172 >> 3) & 0xE0 | ((unsigned __int16)v1172 >> 11)) ^ 0x9CLL)) ^ 0x7DLL)), 8);
  LODWORD(v1163) = (v1075 >> 8) ^ __ROR4__(*(_DWORD *)(v359 + ((v1170 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1172)) ^ __ROR4__(*(_DWORD *)(v359 + 4 * (v1163 ^ 0x9Bu)), 16);
  LODWORD(v1163) = (v1163 - 959846245 - ((2 * v1163) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8448);
  v1174 = *(_QWORD *)(v1 + 7008) >> v1064;
  LODWORD(v1165) = *(_DWORD *)(v1 + 8376) ^ (v1174 | *(_QWORD *)(v1 + 7000)) ^ (v1165
                                                                              - 959846245
                                                                              - ((2 * v1165) & 0x8D93D136));
  LODWORD(v1170) = *(_DWORD *)(v1 + 8472) ^ (*(_DWORD *)(v359 + 4 * BYTE1(v1173)) >> 8) ^ (*(_DWORD *)(v359 + 4 * BYTE1(v1173)) << 24) ^ __ROR4__(*(_DWORD *)(v359 + 4 * v1170), 16) ^ *(_DWORD *)(v359 + 4 * BYTE2(v1143)) ^ (*(_DWORD *)(v359 + ((v1172 >> 22) & 0x3FC)) << 8) ^ HIBYTE(*(_DWORD *)(v359 + ((v1172 >> 22) & 0x3FC)));
  v1175 = v1030;
  v1176 = v1174 ^ v1030 ^ ((unint64_t)((v1105 ^ 0xC0C682FC) & *(_DWORD *)(v1 + 7020)) << v1074) ^ ((_DWORD)v1163 - 959846245 - ((2 * (_DWORD)v1163) & 0x8D93D136));
  LODWORD(v1170) = ((v1170 ^ 0xC6C9E89B) - 959846245 - 2 * ((v1170 ^ 0xC6C9E89B) & 0x46C9E89F ^ v1170 & 4)) ^ v1030;
  LODWORD(v1143) = *(_DWORD *)(v1 + 8384) ^ *(_DWORD *)(v1 + 7500) ^ (v1164 - 959846245 - ((2 * v1164) & 0x8D93D136));
  v1177 = v1170 ^ *(_DWORD *)(v1 + 7512);
  v1178 = ((_DWORD)v1165 - 959846245 - ((2 * (_DWORD)v1165) & 0x8D93D136)) ^ v1030;
  v1179 = *(_QWORD *)(v1 + 9576);
  v1180 = ((_DWORD)v1143 - 959846245 - ((2 * (_DWORD)v1143) & 0x8D93D136)) ^ v1030;
  HIDWORD(v1075) = *(_DWORD *)(v359 + 4 * (v1176 >> ((v1170 & 8 ^ 8) + (v1170 & 8))));
  LODWORD(v1075) = HIDWORD(v1075);
  LODWORD(v1170) = (v1075 >> 8) ^ __ROR4__(*(_DWORD *)(v359 + ((v1180 >> 22) & 0x3FC)), 24) ^ *(_DWORD *)(v359 + 4 * (((((v1170 ^ *(_BYTE *)(v1 + 7512)) & 0x11 ^ 0x11) + ((v1170 ^ *(_BYTE *)(v1 + 7512)) & 0x11)) ^ (*(_BYTE *)(v1179 + (((v1178 >> 12) & 0xF0 | (v1178 >> 20) & 0xF) ^ 0x4BLL)) - 6)) + 73));
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v359 + 4 * v1177), 16);
  *(_DWORD *)(v1 + 9608) = v1105;
  v1181 = *(_DWORD *)(v1 + 7664);
  LODWORD(v1143) = *(_DWORD *)(v1 + 7296) ^ (v1105 ^ 0x8083840B) & v1181;
  v1182 = v1064;
  LODWORD(v1143) = (*(_QWORD *)(v1 + 7488) >> v1064) ^ ((unint64_t)((((2 * (_DWORD)v1143) & 0x160C9C10)
                                                                          - (_DWORD)v1143
                                                                          + 888779223) ^ 0x34FDEB14u) << v1074);
  v1183 = ((_DWORD)v1143 - 959846245 - ((2 * (_DWORD)v1143) & 0x8D93D136)) ^ v1030 ^ *(_DWORD *)(v1 + 8408) ^ ((v1170 ^ v1075) - 959846245 - ((2 * (v1170 ^ v1075)) & 0x8D93D136));
  LODWORD(v1143) = ((unint64_t)((v1105 ^ 0x80868A8C) & v1181) << v1074) + *(_QWORD *)(v1 + 6992);
  v1184 = v1030 ^ 0xC6C9E89B ^ ((_DWORD)v1143 - 959846245 - ((2 * (_DWORD)v1143) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8416) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1178 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1180), 16) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1177)), 8) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1176));
  v1185 = *(_QWORD *)(v1 + 6984) >> v1064;
  *(_QWORD *)(v1 + 9456) = v1064;
  LODWORD(v1148) = ((v1185 | *(_QWORD *)(v1 + 6976)) - 959846245 - ((2 * (v1185 | *(_QWORD *)(v1 + 6976))) & 0x8D93D136)) ^ 0xC6C9E89B ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1178), 16) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1177)) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1176 >> 22) & 0x3FC)), 24);
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1180)), 8);
  LODWORD(v1148) = ((v1148 ^ v1075) - 959846245 - ((2 * (v1148 ^ v1075)) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9528);
  LODWORD(v1176) = (v1185 - 959846245 - ((2 * v1185) & 0x8D93D136)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1176), 16) ^ (*(_DWORD *)(v1169 + 4 * BYTE1(v1178)) << 24) ^ (*(_DWORD *)(v1169 + 4 * BYTE1(v1178)) >> 8) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1180));
  LODWORD(v1075) = __ROR4__(*(_DWORD *)(v1169 + ((v1177 >> 22) & 0x3FC)), 24);
  v1186 = (v1105 ^ 0x80868A8C) & *(_DWORD *)(v1 + 7656);
  *(_QWORD *)(v1 + 9160) = v1186;
  LODWORD(v1176) = *(_DWORD *)(v1 + 9004) ^ (v1186 << v1159) ^ ((v1176 ^ v1075 ^ 0xC6C9E89B)
                                                              - 959846245
                                                              - 2
                                                              * ((v1176 ^ v1075 ^ 0xC6C9E89B) & 0x46C9E89F ^ (v1176 ^ v1075) & 4));
  v1187 = ((_DWORD)v1176 - 959846245 - ((2 * (_DWORD)v1176) & 0x8D93D136)) ^ v1030;
  LOBYTE(v1176) = ((v1176 - 101 - ((2 * v1176) & 0x36)) ^ v1030) & 3;
  v1188 = ((_DWORD)v1148 - 959846245 - ((2 * (_DWORD)v1148) & 0x8D93D136)) ^ v1030;
  HIDWORD(v1075) = *(_DWORD *)(v1169 + ((v1188 >> 22) & 0x3FC));
  LODWORD(v1075) = HIDWORD(v1075);
  v1189 = (v1075 >> 24) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1183)), 8) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1187));
  v1190 = *(_DWORD *)(v1169
                    + 4
                    * (*(unsigned __int8 *)(v1149
                                          + ((((unint64_t)BYTE2(v1184) >> ((v1176 ^ 3u)
                                                                                                 + v1176))
                                                             + 32 * BYTE2(v1184)) ^ 0xBDLL)) ^ 0x7DLL));
  LODWORD(v1176) = (*(_DWORD *)(v1 + 8432) ^ 0xC6C9E89B)
                 - (((v1189 & 0x51100044 ^ 0x51100044) + (v1189 & 0x51100044)) | ((v1190 & 0x41D56008 ^ 0x41D56008)
                                                                                + (v1190 & 0x41D56008)));
  v1191 = v1176 - ((2 * v1176 - 1549090664) & 0x8D93D136) + 413092071;
  v1192 = *(_QWORD *)(v1 + 9480);
  v1193 = *(_QWORD *)(v1 + 9072);
  LODWORD(v1176) = ((unint64_t)(v1191 ^ 0xC6C9E89B) << v1192) + ((unint64_t)(v1191 ^ 0xC6C9E89B) >> v1193);
  v1194 = v1176 - 959846245 - ((2 * v1176) & 0x8D93D136);
  v1195 = *(_DWORD *)(v1 + 9128);
  LODWORD(v1177) = ((unint64_t)(v1195 ^ 0xC6C9E89B) >> v1193) | ((unint64_t)(v1195 ^ 0xC6C9E89B) << v1192);
  v1196 = v1177 - 959846245 - ((2 * v1177) & 0x8D93D136);
  v1197 = *(_DWORD *)(v1 + 8864);
  v1198 = *(_QWORD *)(v1 + 9056);
  v1199 = *(_QWORD *)(v1 + 8768);
  LODWORD(v1192) = ((unint64_t)(v1197 ^ 0xC6C9E89B) << v1198) + ((unint64_t)(v1197 ^ 0xC6C9E89B) >> v1199);
  v1200 = v1192 - 959846245 - ((2 * v1192) & 0x8D93D136);
  v1201 = *(_DWORD *)(v1 + 9600);
  *(_DWORD *)(v1 + 9004) = v1191;
  if (v1201 != -959846245)
    v1191 = v1194;
  *(_DWORD *)(v1 + 9488) = v1191;
  if (v1201 == -959846245)
    v1202 = v1195;
  else
    v1202 = v1196;
  v1203 = *(_DWORD *)(v1 + 9688);
  if (v1203 == -959846245)
    v1204 = v1197;
  else
    v1204 = v1200;
  *(_DWORD *)(v1 + 9072) = v1204;
  v1205 = *(_DWORD *)(v1 + 8480);
  v1206 = v1205 ^ 0xC6C9E89B;
  v1207 = v1206 >> v1199;
  v1208 = v1206 << v1198;
  *(_QWORD *)(v1 + 8472) = v1208;
  v1209 = (v1208 ^ v1207) - 959846245 - ((2 * (v1208 ^ v1207)) & 0x8D93D136);
  v1210 = *(_DWORD *)(v1 + 8464);
  if (v1203 != -959846245)
    v1205 = v1209;
  *(_DWORD *)(v1 + 9480) = v1205;
  v1211 = ((unint64_t)(v1210 ^ 0xC6C9E89B) << v1198) | ((unint64_t)(v1210 ^ 0xC6C9E89B) >> v1199);
  v1212 = v1211 - 959846245 - ((2 * v1211) & 0x8D93D136);
  v1213 = *(_DWORD *)(v1 + 8456);
  if (v1203 == -959846245)
    v1212 = v1210;
  *(_DWORD *)(v1 + 9528) = v1212;
  v1215 = *(_DWORD *)(v1 + 9012);
  if (v1203 != -959846245)
  {
    v1214 = ((unint64_t)(v1213 ^ 0xC6C9E89B) << v1198) + ((unint64_t)(v1213 ^ 0xC6C9E89B) >> v1199);
    v1213 = v1214 - 959846245 - ((2 * v1214) & 0x8D93D136);
  }
  *(_DWORD *)(v1 + 8572) = v1213;
  v1216 = ((unint64_t)(v1215 ^ 0xC6C9E89B) << v1198) + ((unint64_t)(v1215 ^ 0xC6C9E89B) >> v1199);
  v1217 = v1216 - 959846245 - ((2 * v1216) & 0x8D93D136);
  v1218 = *(_DWORD *)(v1 + 8496);
  if (v1203 == -959846245)
    v1217 = v1215;
  *(_DWORD *)(v1 + 8868) = v1217;
  v1220 = *(_DWORD *)(v1 + 8488);
  if (v1203 != -959846245)
  {
    v1219 = ((unint64_t)(v1218 ^ 0xC6C9E89B) << v1198) + ((unint64_t)(v1218 ^ 0xC6C9E89B) >> v1199);
    v1218 = v1219 - 959846245 - ((2 * v1219) & 0x8D93D136);
  }
  *(_DWORD *)(v1 + 8496) = v1218;
  if (v1203 == -959846245)
  {
    v1222 = v1220;
  }
  else
  {
    v1221 = ((unint64_t)(v1220 ^ 0xC6C9E89B) << v1198) ^ ((unint64_t)(v1220 ^ 0xC6C9E89B) >> v1199);
    v1222 = v1221 - 959846245 - ((2 * v1221) & 0x8D93D136);
  }
  *(_DWORD *)(v1 + 8488) = v1222;
  v1223 = *(_DWORD *)(v1 + 8736);
  v1224 = *(_QWORD *)(v1 + 9512);
  v1225 = ((unint64_t)(v1223 ^ 0xC6C9E89B) >> v1199) ^ ((unint64_t)(v1223 ^ 0xC6C9E89B) << v1224);
  v1226 = v1225 - 959846245 - ((2 * v1225) & 0x8D93D136);
  v1227 = *(_DWORD *)(v1 + 8504);
  v1229 = *(_DWORD *)(v1 + 9616);
  if (v1229 != -959846245)
    v1223 = v1226;
  *(_DWORD *)(v1 + 9012) = v1223;
  v1230 = *(_DWORD *)(v1 + 8512);
  if (v1229 == -959846245)
  {
    v1232 = v1227;
  }
  else
  {
    v1228 = ((unint64_t)(v1227 ^ 0xC6C9E89B) << v1198) ^ ((unint64_t)(v1227 ^ 0xC6C9E89B) >> v1199);
    v1232 = v1228 - 959846245 - ((2 * v1228) & 0x8D93D136);
  }
  *(_DWORD *)(v1 + 9008) = v1232;
  v1231 = ((unint64_t)(v1230 ^ 0xC6C9E89B) >> v1199) + ((unint64_t)(v1230 ^ 0xC6C9E89B) << v1224);
  v1233 = *(_DWORD *)(v1 + 8532);
  v1234 = v1233 ^ 0xC6C9E89B;
  v1235 = (v1234 >> v1199) - 959846245 - ((2 * (v1234 >> v1199)) & 0x8D93D136);
  *(_DWORD *)(v1 + 8864) = v1235;
  v1236 = (v1235 ^ 0xC6C9E89B)
        + (v1234 << v1224)
        - 959846245
        - ((2 * ((v1235 ^ 0xC6C9E89B) + (v1234 << v1224))) & 0x8D93D136);
  v1237 = *(_DWORD *)(v1 + 8520);
  *(_DWORD *)(v1 + 8736) = v1231 - 959846245 - ((2 * v1231) & 0x8D93D136);
  if (v1229 == -959846245)
    v1239 = v1230;
  else
    v1239 = v1231 - 959846245 - ((2 * v1231) & 0x8D93D136);
  *(_DWORD *)(v1 + 8828) = v1239;
  if (v1229 == -959846245)
    v1240 = v1233;
  else
    v1240 = v1236;
  *(_DWORD *)(v1 + 8808) = v1240;
  v1238 = ((unint64_t)(v1237 ^ 0xC6C9E89B) >> v1199) ^ ((unint64_t)(v1237 ^ 0xC6C9E89B) << v1224);
  v1241 = v1238 - 959846245 - ((2 * v1238) & 0x8D93D136);
  v1242 = *(_DWORD *)(v1 + 8536);
  v1243 = v1198;
  v1244 = ((unint64_t)(v1242 ^ 0xC6C9E89B) << v1198) ^ ((unint64_t)(v1242 ^ 0xC6C9E89B) >> v1199);
  if (v1229 == -959846245)
    v1245 = v1237;
  else
    v1245 = v1241;
  *(_DWORD *)(v1 + 8532) = v1245;
  v1246 = *(_DWORD *)(v1 + 9016);
  v1247 = v1243;
  if (v1229 != -959846245)
    v1242 = v1244 - 959846245 - ((2 * v1244) & 0x8D93D136);
  *(_DWORD *)(v1 + 8536) = v1242;
  v1249 = *(_DWORD *)(v1 + 9024);
  if (v1229 == -959846245)
  {
    v1251 = v1246;
  }
  else
  {
    v1248 = ((unint64_t)(v1246 ^ 0xC6C9E89B) << v1243) | ((unint64_t)(v1246 ^ 0xC6C9E89B) >> v1199);
    v1251 = v1248 - 959846245 - ((2 * v1248) & 0x8D93D136);
  }
  *(_DWORD *)(v1 + 9016) = v1251;
  v1252 = *(_DWORD *)(v1 + 8544);
  if (v1229 == -959846245)
  {
    v1254 = v1249;
  }
  else
  {
    v1250 = ((unint64_t)(v1249 ^ 0xC6C9E89B) >> v1199) + ((unint64_t)(v1249 ^ 0xC6C9E89B) << v1224);
    v1254 = v1250 - 959846245 - ((2 * v1250) & 0x8D93D136);
  }
  *(_DWORD *)(v1 + 9024) = v1254;
  v1253 = ((unint64_t)(v1252 ^ 0xC6C9E89B) >> v1199) + ((unint64_t)(v1252 ^ 0xC6C9E89B) << v1224);
  v1255 = v1253 - 959846245 - ((2 * v1253) & 0x8D93D136);
  v1256 = *(_DWORD *)(v1 + 8612);
  v1257 = v1247;
  v1258 = ((unint64_t)(v1256 ^ 0xC6C9E89B) << v1247) ^ ((unint64_t)(v1256 ^ 0xC6C9E89B) >> v1199);
  if (v1229 == -959846245)
    v1259 = v1252;
  else
    v1259 = v1255;
  *(_DWORD *)(v1 + 8544) = v1259;
  v1260 = *(_DWORD *)(v1 + 8548);
  if (v1229 != -959846245)
    v1256 = v1258 - 959846245 - ((2 * v1258) & 0x8D93D136);
  *(_DWORD *)(v1 + 8612) = v1256;
  v1261 = ((unint64_t)(v1260 ^ 0xC6C9E89B) >> v1199) ^ ((unint64_t)(v1260 ^ 0xC6C9E89B) << v1224);
  v1262 = v1261 - 959846245 - ((2 * v1261) & 0x8D93D136);
  v1263 = *(_DWORD *)(v1 + 8616);
  if (v1229 == -959846245)
    v1265 = v1260;
  else
    v1265 = v1262;
  *(_DWORD *)(v1 + 8548) = v1265;
  v1266 = *(_DWORD *)(v1 + 9256);
  v1267 = v1266 ^ 0xC6C9E89B;
  *(_QWORD *)(v1 + 8464) = v1267;
  v1268 = v1224;
  if (v1229 == -959846245)
  {
    v1270 = v1263;
  }
  else
  {
    v1264 = ((unint64_t)(v1263 ^ 0xC6C9E89B) << v1257) + ((unint64_t)(v1263 ^ 0xC6C9E89B) >> v1199);
    v1270 = v1264 - 959846245 - ((2 * v1264) & 0x8D93D136);
  }
  *(_DWORD *)(v1 + 8616) = v1270;
  v1269 = (v1267 >> v1199) | (v1267 << v1224);
  v1271 = v1269 - 959846245 - ((2 * v1269) & 0x8D93D136);
  v1272 = *(_DWORD *)(v1169 + 4 * BYTE2(v1188)) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1184 >> 22) & 0x3FC)), 24) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1183), 16) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1187)), 8);
  HIDWORD(v1273) = *(_DWORD *)(v1169 + ((v1183 >> 22) & 0x3FC));
  LODWORD(v1273) = HIDWORD(v1273);
  v1274 = (v1273 >> 24) ^ __ROR4__(*(_DWORD *)(v1169+ 4* (((*(_BYTE *)(v1179+ (((v1188 >> 4) & 0xF0 | ((unsigned __int16)v1188 >> 12)) ^ 0x4BLL))- 6) ^ 0x11)+ 73)), 8) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1187), 16);
  if (v1229 == -959846245)
    v1271 = v1266;
  v1275 = *(_DWORD *)(v1169 + 4 * v1184);
  v1276 = v1189 & 0x10000000;
  if ((v1189 & 0x10000000 & (v1275 << 16)) != 0)
    v1276 = -v1276;
  HIDWORD(v1277) = *(_DWORD *)(v1169 + 4 * v1184);
  LODWORD(v1277) = HIDWORD(v1277);
  v1278 = ((v1277 >> 16) + v1276) ^ v1189 & 0xEFFFFFFF;
  v1279 = v1202 ^ *(_DWORD *)(v1 + 7484) ^ v1190 ^ (v1274 - 959846245 - ((2 * v1274) & 0x8D93D136));
  v1280 = (*(_QWORD *)(v1 + 6848) >> v1182) | *(_QWORD *)(v1 + 6840);
  v1281 = *(_DWORD *)(v1 + 8992) ^ (v1280 - 959846245 - ((2 * v1280) & 0x8D93D136)) ^ *(_DWORD *)(v1169
                                                                                                + 4 * BYTE2(v1183)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1188), 16) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1184)), 8);
  LODWORD(v1277) = __ROR4__(*(_DWORD *)(v1169 + ((v1187 >> 22) & 0x3FC)), 24);
  v1282 = *(_DWORD *)(v1 + 9608);
  v1283 = *(_DWORD *)(v1 + 8656) ^ (((unint64_t)((v1282 ^ 0x60A3Cu) & *(_DWORD *)(v1 + 7480)) << *(_QWORD *)(v1 + 9672)) | *(_QWORD *)(v1 + 6968)) ^ (v1272 - 959846245 - ((2 * v1272) & 0x8D93D136));
  v1284 = (v1278 + *(_DWORD *)(v1 + 9696) + ~((2 * v1278) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 7476) ^ *(_DWORD *)(v1 + 9488);
  v1285 = v1175;
  v1286 = (v1279 - 959846245 - ((2 * v1279) & 0x8D93D136)) ^ v1175;
  v1287 = (v1284 - 959846245 - ((2 * v1284) & 0x8D93D136)) ^ v1175;
  LOBYTE(v1284) = 57 * ((v1284 - 101 - ((2 * v1284) & 0x36)) ^ v1175);
  v1288 = ((*(_BYTE *)(*(_QWORD *)(v1 + 9680) + (v1284 ^ 0x1DLL)) ^ v1284 ^ 0x7C) + 86);
  v1289 = ((v1281 ^ v1277) - 959846245 - ((2 * (v1281 ^ v1277)) & 0x8D93D136)) ^ v1175;
  v1290 = *(_QWORD *)(v1 + 6688);
  v1291 = *(_DWORD *)(v1290
                    + 4
                    * (unsigned __int16)(251 * v1288
                                       - 260 * ((unsigned __int16)((1012283 * v1288) >> 16) >> 4)));
  v1292 = *(_DWORD *)(v1 + 7616);
  HIDWORD(v1277) = v1291 ^ 0x9B;
  LODWORD(v1277) = v1291 ^ v1292;
  v1293 = v1277 >> 8;
  v1294 = v1290;
  LODWORD(v1277) = __ROR4__(*(_DWORD *)(v1290+ 4* (unsigned __int16)(251 * BYTE2(v1286)- 260* ((unsigned __int16)((1012283 * BYTE2(v1286)) >> 16) >> 4))), 24);
  v1295 = (v1283 - 959846245 - ((2 * v1283) & 0x8D93D136)) ^ v1285;
  v1296 = (v1277 ^ 0xC9E89BC6 ^ v1293) - 959846245 - ((2 * (v1277 ^ 0xC9E89BC6 ^ v1293)) & 0x8D93D136);
  v1297 = *(_DWORD *)(v1290
                    + 4
                    * (unsigned __int16)(251 * HIBYTE(v1289)
                                       - 260 * ((unsigned __int16)((1012283 * HIBYTE(v1289)) >> 16) >> 4)));
  HIDWORD(v1277) = v1297 ^ 0xE89B;
  LODWORD(v1277) = v1297 ^ 0xC6C90000;
  v1298 = *(_DWORD *)(v1290
                    + 4
                    * (unsigned __int16)(251 * BYTE1(v1295)
                                       - 260 * ((unsigned __int16)((1012283 * BYTE1(v1295)) >> 16) >> 4))) ^ (v1277 >> 16) ^ v1296;
  v1299 = *(_QWORD *)(v1 + 9648);
  v1300 = *(_DWORD *)(v1 + 7944);
  v1301 = ((unint64_t)((v1299 << *(_QWORD *)(v1 + 9704)) & v1300) >> *(_QWORD *)(v1 + 9704)) ^ *(_QWORD *)(v1 + 6960);
  v1302 = v1301 - 959846245 - ((2 * v1301) & 0x8D93D136);
  v1303 = *(_DWORD *)(v1 + 8964);
  v1304 = 2 * ((v1302 ^ *(_DWORD *)(v1 + 7880)) & v1303)
        - 959846245
        - (*(_DWORD *)(v1 + 7936) & (4 * ((v1302 ^ *(_DWORD *)(v1 + 7880)) & v1303)));
  *(_DWORD *)(v1 + 9064) = v1302;
  v1305 = *(_DWORD *)(v1 + 7856) & (4 * ((v1304 ^ v1302) & v1303)) ^ v1304 ^ v1302;
  v1306 = *(_DWORD *)(v1 + 7600) & (16 * (v1305 & *(_DWORD *)(v1 + 7608))) ^ v1305;
  *(_DWORD *)(v1 + 9488) = v1306;
  v1307 = (v1298 - 959846245 - ((2 * v1298) & 0x8D93D136)) ^ v1271;
  v1308 = (v1307 - 1647973907 - ((2 * v1307) & 0x3B8BD3DA)) ^ *(_DWORD *)(v1 + 9416);
  v1309 = *(_DWORD *)(v1 + 9424) ^ v1300 ^ v1306 ^ (v1308 - 827089437 - ((2 * v1308) & 0x9D673BC6));
  v1310 = ((unint64_t)(v1309 ^ 0x5B5B5B5B) << v1199) ^ ((unint64_t)(v1309 ^ 0x5B5B5B5B) >> v1268);
  v1311 = v1310 - 959846245 - ((2 * v1310) & 0x8D93D136);
  v1312 = *(_DWORD *)(v1 + 9200) ^ 0xC6C9E89B;
  *(_QWORD *)(v1 + 8456) = v1312;
  v1314 = v1309 ^ 0x9D92B3C0;
  if (v1229 == -959846245)
    v1315 = v1314;
  else
    v1315 = v1311;
  *(_DWORD *)(v1 + 8992) = v1315;
  v1313 = (v1312 << v1257) + (v1312 >> v1199);
  *(_DWORD *)(v1 + 8656) = v1313 - 959846245 - ((2 * v1313) & 0x8D93D136);
  v1316 = ((v1286 >> 4) & 0xF0 | ((unsigned __int16)v1286 >> 12)) ^ 0x39;
  v1317 = *(_QWORD *)(v1 + 9640);
  *(_DWORD *)(v1 + 8520) = *(unsigned __int8 *)(v1317 + v1316) ^ ((*(_BYTE *)(v1317 + v1316) ^ 0xA0) >> 3) ^ ((*(_BYTE *)(v1317 + v1316) ^ 0xA0) >> 2);
  LODWORD(v1316) = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9584) + (((v1289 >> 11) & 0xE0 | (v1289 >> 19) & 0x1F) ^ 0x9CLL)) ^ 0x7D;
  LODWORD(v1316) = *(_DWORD *)(v1294
                             + 4
                             * (unsigned __int16)(251 * v1316
                                                - 260 * ((unsigned __int16)((1012283 * v1316) >> 16) >> 4)));
  HIDWORD(v1318) = v1316 ^ 0xC9E89B;
  LODWORD(v1318) = v1316 ^ 0xC6000000;
  LODWORD(v1316) = v1318 >> 24;
  v1319 = *(_DWORD *)(v1294
                    + 4
                    * (unsigned __int16)(251 * HIBYTE(v1287)
                                       - 260 * ((unsigned __int16)((1012283 * HIBYTE(v1287)) >> 16) >> 4)));
  HIDWORD(v1318) = v1319 ^ 0xE89B;
  LODWORD(v1318) = v1319 ^ 0xC6C90000;
  v1320 = v1318 >> 16;
  v1321 = *(_DWORD *)(v1294
                    + 4
                    * (unsigned __int16)(251 * v1295
                                       - 260
                                       * ((unsigned __int16)((1012283 * v1295) >> 16) >> 4)));
  HIDWORD(v1318) = v1321 ^ 0x9B;
  LODWORD(v1318) = v1321 ^ v1292;
  v1322 = v1320 ^ v1316 ^ (v1318 >> 8);
  LODWORD(v1316) = *(_DWORD *)(v1294
                             + 4
                             * (unsigned __int16)(251 * BYTE2(v1287)
                                                - 260
                                                * ((unsigned __int16)((1012283 * BYTE2(v1287)) >> 16) >> 4)));
  v1323 = *(_DWORD *)(v1294
                    + 4
                    * (unsigned __int16)(251 * HIBYTE(v1295)
                                       - 260 * ((unsigned __int16)((1012283 * HIBYTE(v1295)) >> 16) >> 4)));
  HIDWORD(v1318) = v1323 ^ 0xE89B;
  LODWORD(v1318) = v1323 ^ 0xC6C90000;
  v1324 = *(_QWORD *)(v1 + 9624);
  LODWORD(v1316) = (v1318 >> 16) ^ (*(unsigned __int8 *)(v1324
                                                       + (((v1316 >> 19) & 0xE0 | (v1316 >> 27)) ^ (((HIWORD(v1275) & 4 ^ 4) + (HIWORD(v1275) & 4)) | 0x61))) ^ 0x7D | ((_DWORD)v1316 << 8));
  *(_DWORD *)(v1 + 8512) = (v1316 ^ 0xC9E89B00) - 959846245 - 2 * ((v1316 ^ 0xC9E89B00) & 0x46C9E89F ^ v1316 & 4);
  LODWORD(v1316) = *(_DWORD *)(v1294
                             + 4
                             * (unsigned __int16)(251 * v1286
                                                - 260
                                                * ((unsigned __int16)((1012283 * v1286) >> 16) >> 4)));
  HIDWORD(v1318) = v1316 ^ 0x9B;
  LODWORD(v1318) = v1316 ^ v1292;
  *(_DWORD *)(v1 + 8504) = v1318 >> 8;
  LODWORD(v1316) = *(_DWORD *)(v1294
                             + 4
                             * (unsigned __int16)(251 * v1289
                                                - 260
                                                * ((unsigned __int16)((1012283 * v1289) >> 16) >> 4)));
  HIDWORD(v1318) = v1316 ^ 0x9B;
  LODWORD(v1318) = v1316 ^ v1292;
  LODWORD(v1316) = (v1318 >> 8) - 959846245 - ((2 * (v1318 >> 8)) & 0x8D93D136);
  v1325 = *(_DWORD *)(v1294
                    + 4
                    * (unsigned __int16)(251 * HIBYTE(v1286)
                                       - 260 * ((unsigned __int16)((1012283 * HIBYTE(v1286)) >> 16) >> 4)));
  HIDWORD(v1318) = v1325 ^ 0xE89B;
  LODWORD(v1318) = v1325 ^ 0xC6C90000;
  v1326 = *(unsigned int *)(v1294
                          + 4
                          * (unsigned __int16)(251 * BYTE2(v1295)
                                             - 260
                                             * ((unsigned __int16)((1012283 * BYTE2(v1295)) >> 16) >> 4)));
  v1327 = *(_BYTE *)(v1317 + (((v1326 >> 20) & 0xF0 | (v1326 >> 28)) ^ 0x55));
  v1328 = v1294;
  LODWORD(v1316) = v1316 ^ (v1318 >> 16) ^ (((v1327 ^ ((v1327 ^ 0xA0) >> 3) ^ ((v1327 ^ 0xA0) >> 2) ^ 6)
                                                            + 73) | ((_DWORD)v1326 << 8)) ^ *(_DWORD *)(v1294 + 4 * (unsigned __int16)(251 * BYTE1(v1287) - 260 * ((unsigned __int16)((1012283 * BYTE1(v1287)) >> 16) >> 4)));
  *(_DWORD *)(v1 + 8480) = (v1316 ^ 0xC9E89B00) - 959846245 - 2 * ((v1316 ^ 0xC9E89B00) & 0x46C9E89F ^ v1316 & 4);
  v1329 = *(_DWORD *)(v1 + 9096);
  v1330 = *(_DWORD *)(v1 + 9052);
  LODWORD(v1316) = *(_DWORD *)(v1 + 9464) ^ 0xD33C8179;
  v1331 = ((v1329 ^ 0xC6C9E89B)
         + (v1330 ^ 0x39361764)
         + 1
         - ((2 * ((v1329 ^ 0xC6C9E89B) + (v1330 ^ 0x39361764) + 1) + 168095782) & 0x8D93D136)
         + 1271685294) ^ v1316;
  v1332 = *(_DWORD *)(v1 + 9040);
  v1333 = (v1331 - 959846245 - ((2 * v1331) & 0x8D93D136)) ^ v1332 ^ 0x23152C60;
  v1334 = v1333 - ((2 * v1333 - 2114079066) & 0x8D93D136) + 130597870;
  *(_DWORD *)(v1 + 9464) = v1334;
  v1335 = v1334 ^ *(_DWORD *)(v1 + 9224);
  *(_QWORD *)(v1 + 8832) = v1335;
  LODWORD(v1335) = (2 * ((((v1335 & 0x84A464E ^ 0x84A464E) + (v1335 & 0x84A464E)) | 0x4E464848) & *(_DWORD *)(v1 + 7364))) ^ 0x4E4E4E4E;
  v1336 = *(_QWORD *)(v1 + 9456);
  v1337 = *(_QWORD *)(v1 + 9672);
  LODWORD(v1335) = ((unint64_t)(v1335 & *(_DWORD *)(v1 + 7688)) >> v1336) | ((unint64_t)(v1335 & v1299) << v1337);
  v1338 = (v1335 - 959846245 - ((2 * v1335) & 0x8D93D136)) ^ v1332;
  LODWORD(v1326) = *(_DWORD *)(v1 + 8664) ^ v1285 ^ (v1338 - 959846245 - ((2 * v1338) & 0x8D93D136));
  v1339 = *(_QWORD *)(v1 + 9208) | *(_QWORD *)(v1 + 8800);
  v1340 = v1285;
  LODWORD(v1335) = ((*(_QWORD *)(v1 + 9120) - 959846245 - ((2 * *(_QWORD *)(v1 + 9120)) & 0x8D93D136)) ^ 0xC6C9E89B)
                 + *(_QWORD *)(v1 + 6952);
  LODWORD(v1335) = *(_DWORD *)(v1 + 8548) ^ (v1335 - 959846245 - ((2 * v1335) & 0x8D93D136));
  v1341 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9632) + (((BYTE1(v1326) ^ 0xE8) - 66) ^ 0xCDLL));
  LODWORD(v1317) = (v1335 - 959846245 - ((2 * v1335) & 0x8D93D136)) ^ v1285 ^ v1329;
  LOBYTE(v1335) = (v1341 >> 2) | ((_BYTE)v1341 << 6);
  v1342 = *(_DWORD *)(v1 + 8488) ^ *(_DWORD *)(v1 + 7460) ^ v1316;
  v1343 = v1326 ^ 0xC6C9E89B;
  v1344 = v1342 ^ 0xC6C9E89B;
  v1345 = *(_DWORD *)(v1169
                    + 4 * (*(unsigned __int8 *)(v1324 + (((v1343 >> 19) & 0xE0 | (v1343 >> 27)) ^ 0xBD)) ^ 0x7DLL));
  v1346 = ((v1342 ^ 0xC6C9E89B) >> 20) & 0xF0 | (v1342 >> 28);
  v1347 = ((v1345 << 8) - 959846245 - (*(_DWORD *)(v1 + 9664) & (v1345 << 9))) ^ 0xC6C9E89B | HIBYTE(v1345);
  v1348 = *(_DWORD *)(v1 + 7288) ^ (v1282 ^ 0xE1D1B4FC) & *(_DWORD *)(v1 + 7648);
  v1349 = (((2 * v1348) & 0xF9999A30) - v1348 + 53687015) ^ 0x21353AE7;
  v1350 = (*(_QWORD *)(v1 + 6696) >> v1336) ^ (v1349 << v1337);
  v1351 = *(_DWORD *)(v1 + 8672) ^ (v1350 - 959846245 - ((2 * v1350) & 0x8D93D136));
  v1352 = *(_QWORD *)(v1 + 9576);
  LODWORD(v1346) = *(_DWORD *)(v1169 + 4 * BYTE2(v1343)) ^ (v1351 - 959846245 - ((2 * v1351) & 0x8D93D136)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * (((*(_BYTE *)(v1352 + (v1346 ^ 0x47)) - 6) ^ 0x11) + 73)), 24);
  v1353 = (v1339 - 959846245 - ((2 * v1339) & 0x8D93D136)) ^ v1285 ^ *(_DWORD *)(v1 + 8616) ^ v1330;
  HIDWORD(v1318) = *(_DWORD *)(v1169
                             + 4
                             * (((*(_BYTE *)(v1352
                                                            + (((16 * (v1317 & 0xF)) | (v1317 >> 4)) ^ 0xF2))
                                                 - 6) ^ 0x11)
                                               + 73));
  LODWORD(v1318) = HIDWORD(v1318);
  v1354 = *(_DWORD *)(v1 + 9696);
  v1355 = v1346 ^ ((v1318 >> 16) + v1354 + ~((2 * (v1318 >> 16)) & 0x8D93D136)) ^ __ROR4__(*(_DWORD *)(v1169+ 4 * BYTE1(v1353)), 8);
  v1356 = v1349 << *(_QWORD *)(v1 + 9704);
  v1357 = v1356 + (*(_QWORD *)(v1 + 6944) >> v1336);
  v1358 = *(_DWORD *)(v1 + 8612) ^ (v1357 - 959846245 - ((2 * v1357) & 0x8D93D136));
  LODWORD(v1337) = ((*(_DWORD *)(v1 + 8520) ^ 6) + 73);
  v1359 = v1317 ^ 0xC6C9E89B;
  v1360 = (v1358 + 1501089967 - ((2 * v1358) & 0xB2F1A15E)) ^ 0x5978D0AF ^ __ROR4__(*(_DWORD *)(v1169+ 4* (v1335 ^ 0x1Au)), 8) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1344)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1353), 16) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * ((HIBYTE(v1359) - ((v1359 >> 23) & 0x40) - 96) ^ 0xA0)), 24);
  v1361 = v1328;
  v1362 = (v1322 - 959846245 - ((2 * v1322) & 0x8D93D136)) ^ *(_DWORD *)(v1328
                                                                       + 4
                                                                       * (unsigned __int16)(251 * v1337
                                                                                          - 260
                                                                                          * ((unsigned __int16)((1012283 * v1337) >> 16) >> 4)));
  v1363 = v1362 - 959846245 - ((2 * v1362) & 0x8D93D136);
  v1364 = *(_DWORD *)(v1169 + 4 * BYTE2(v1359)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * (v1326 ^ 0x9Bu)), 16);
  v1365 = *(_DWORD *)(v1 + 9616);
  v1366 = *(_DWORD *)(v1 + 8656);
  if (v1365 == -959846245)
    v1366 = *(_DWORD *)(v1 + 9200);
  v1367 = ((v1363 ^ v1366) - 1647973907 - ((2 * (v1363 ^ v1366)) & 0x3B8BD3DA)) ^ *(_DWORD *)(v1 + 9416);
  v1368 = *(_DWORD *)(v1 + 7872);
  v1369 = (v1367 - 959846245 - ((2 * v1367) & 0x8D93D136)) ^ v1368;
  v1370 = *(_DWORD *)(v1 + 7816);
  v1371 = (v1369 + 1527513462 - ((2 * v1369) & 0xB61802EC)) ^ v1370;
  v1372 = v1371 - 827089437 - ((2 * v1371) & 0x9D673BC6);
  v1373 = *(_DWORD *)(v1 + 9488) ^ *(_DWORD *)(v1 + 9424);
  v1374 = v1373 ^ v1372;
  v1375 = v1374 ^ 0x5B5B5B5Bu;
  v1376 = v1199;
  v1377 = v1375 << v1199;
  v1378 = *(_QWORD *)(v1 + 9056);
  v1379 = ((v1375 >> v1378) | v1377) - 959846245 - ((2 * ((v1375 >> v1378) | v1377)) & 0x8D93D136);
  v1380 = *(_DWORD *)(v1 + 9312);
  v1381 = ((unint64_t)(v1380 ^ 0xC6C9E89B) >> v1376)
        + ((unint64_t)(v1380 ^ 0xC6C9E89B) << *(_QWORD *)(v1 + 9512));
  v1382 = v1374 ^ 0x9D92B3C0;
  if (v1365 != -959846245)
    v1382 = v1379;
  *(_DWORD *)(v1 + 9208) = v1382;
  v1383 = v1381 - 959846245 - ((2 * v1381) & 0x8D93D136);
  v1384 = *(_DWORD *)(v1 + 9172);
  v1385 = v1384 ^ 0xC6C9E89B;
  v1386 = v1376;
  *(_QWORD *)(v1 + 9120) = v1385;
  v1387 = (v1385 << v1378) + (v1385 >> v1376);
  v1388 = v1387 - 959846245 - ((2 * v1387) & 0x8D93D136);
  v1389 = 251 * BYTE1(v1289) - 260 * ((1012283 * BYTE1(v1289)) >> 20);
  HIDWORD(v1390) = *(_DWORD *)(v1169 + ((v1353 >> 22) & 0x3FC));
  LODWORD(v1390) = HIDWORD(v1390);
  v1391 = (v1390 >> 24) - 959846245 - ((2 * (v1390 >> 24)) & 0x8D93D136);
  HIDWORD(v1390) = *(_DWORD *)(v1169 + 4 * BYTE1(v1359));
  LODWORD(v1390) = HIDWORD(v1390);
  v1392 = (v1390 >> 8) - 959846245 - ((2 * (v1390 >> 8)) & 0x8D93D136);
  HIDWORD(v1390) = *(_DWORD *)(v1169
                             + 4
                             * (((57 * BYTE1(v1344)) ^ *(_BYTE *)(*(_QWORD *)(v1 + 9680)
                                                                                 + ((57 * BYTE1(v1344)) ^ 0x1DLL)) ^ 0x7C)
                                               + 86));
  LODWORD(v1390) = HIDWORD(v1390);
  v1393 = (v1390 >> 8) - 959846245 - ((2 * (v1390 >> 8)) & 0x8D93D136);
  v1394 = __ROR4__(*(_DWORD *)(v1169 + 4 * v1344), 16) ^ 0xC6C9E89B ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1353)) ^ v1392 ^ (v1347 - 959846245 - ((2 * v1347) & 0x8D93D136));
  v1395 = *(_DWORD *)(v1 + 8496) ^ ((v1356 ^ *(_QWORD *)(v1 + 6704))
                                  - 959846245
                                  - ((2 * (v1356 ^ *(_QWORD *)(v1 + 6704))) & 0x8D93D136));
  v1396 = (v1355 - 959846245 - ((2 * v1355) & 0x8D93D136)) ^ v1340;
  v1397 = *(_DWORD *)(v1169 + 4 * ((v1355 - 101 - ((2 * v1355) & 0x36)) ^ v1340));
  *(_DWORD *)(v1 + 8616) = v1394;
  v1398 = v1394 ^ (v1395 - 959846245 - ((2 * v1395) & 0x8D93D136));
  HIDWORD(v1390) = v1397;
  LODWORD(v1390) = v1397;
  v1399 = v1360 + v1354 + ~((2 * v1360) & 0x8D93D136);
  v1400 = (v1398 - 959846245 - ((2 * v1398) & 0x8D93D136)) ^ v1340;
  v1401 = (v1390 >> 16) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1400 >> 22) & 0x3FC)), 24);
  v1402 = *(_QWORD *)(v1 + 9456);
  v1403 = (*(_QWORD *)(v1 + 7536) >> v1402) | *(_QWORD *)(v1 + 7072);
  v1404 = v1391 ^ 0xC6C9E89B ^ v1393 ^ ((*(_DWORD *)(v1 + 8544) ^ v1403 ^ (v1364 - 959846245 - ((2 * v1364) & 0x8D93D136)))
                                      - 959846245
                                      - ((2
                                        * (*(_DWORD *)(v1 + 8544) ^ v1403 ^ (v1364
                                                                           - 959846245
                                                                           - ((2 * v1364) & 0x8D93D136)))) & 0x8D93D136));
  v1405 = (v1404 - 959846245 - ((2 * v1404) & 0x8D93D136)) ^ v1340;
  v1406 = (((*(_DWORD *)(v1169 + 4 * BYTE1(v1396)) << 24)
          - 959846245
          - ((*(_DWORD *)(v1169 + 4 * BYTE1(v1396)) << 25) & 0x8C000000)) ^ 0xC6C9E89B | (*(_DWORD *)(v1169 + 4 * BYTE1(v1396)) >> 8)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1400), 16) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1405 >> 22) & 0x3FC)), 24);
  v1407 = v1399 ^ v1340;
  v1408 = (*(_QWORD *)(v1 + 6936) >> v1402) ^ *(_DWORD *)(v1 + 6760) ^ *(_DWORD *)(v1 + 8860) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1407), 16) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1396 >> 22) & 0x3FC)), 24);
  if (v1365 == -959846245)
    v1383 = v1380;
  v1409 = ((v1370 ^ 0x9DC5E9ED ^ v1383) - 959846245 - ((2 * (v1370 ^ 0x9DC5E9ED ^ v1383)) & 0x8D93D136)) ^ v1368;
  v1410 = v1373 ^ (v1409 - 827089437 - ((2 * v1409) & 0x9D673BC6)) ^ *(_DWORD *)(v1361 + 4 * (unsigned __int16)v1389);
  v1411 = v1408 ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1400)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1405)), 8);
  v1412 = v1410 ^ *(_DWORD *)(v1 + 8504) ^ *(_DWORD *)(v1 + 8512);
  v1413 = *(_DWORD *)(v1 + 9416);
  v1414 = (v1412 - 1647973907 - ((2 * v1412) & 0x3B8BD3DA)) ^ v1413;
  v1415 = ((unint64_t)(v1414 ^ 0x5B5B5B5Bu) >> *(_QWORD *)(v1 + 9512))
        + ((unint64_t)(v1414 ^ 0x5B5B5B5Bu) << v1386);
  v1416 = v1415 - 959846245 - ((2 * v1415) & 0x8D93D136);
  v1417 = *(_DWORD *)(v1169 + 4 * BYTE2(v1396)) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1407 >> 22) & 0x3FC)), 24);
  if (v1365 == -959846245)
    v1418 = v1384;
  else
    v1418 = v1388;
  v1419 = v1414 ^ 0x9D92B3C0;
  if (*(_DWORD *)(v1 + 9504) != -959846245)
    v1419 = v1416;
  v1420 = v1417 ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1400)), 8);
  v1421 = ((*(_DWORD *)(v1 + 8480) ^ v1418) - 1647973907 - ((2 * (*(_DWORD *)(v1 + 8480) ^ v1418)) & 0x3B8BD3DA)) ^ v1413;
  v1422 = (v1421 - 827089437 - ((2 * v1421) & 0x9D673BC6)) ^ *(_DWORD *)(v1 + 9424);
  v1423 = (v1422 - 959846245 - ((2 * v1422) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8848);
  v1424 = (v1423 - 959846245 - ((2 * v1423) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9488);
  v1425 = ((unint64_t)(v1424 ^ 0x9D92B3C0) >> v1378) | ((unint64_t)(v1424 ^ 0x9D92B3C0) << v1386);
  v1426 = v1425 - 959846245 - ((2 * v1425) & 0x8D93D136);
  v1427 = v1424 ^ 0x5B5B5B5B;
  if (v1365 != -959846245)
    v1427 = v1426;
  HIDWORD(v1428) = *(_DWORD *)(v1169 + 4 * BYTE1(v1407));
  LODWORD(v1428) = HIDWORD(v1428);
  v1429 = (v1428 >> 8) - 959846245 - ((2 * (v1428 >> 8)) & 0x8D93D136);
  v1430 = v1401 ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1405));
  v1431 = v1430 - 959846245 - ((2 * v1430) & 0x8D93D136);
  v1432 = *(_QWORD *)(v1 + 9672);
  v1433 = v1406 ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1407));
  LODWORD(v1428) = __ROR4__(*(_DWORD *)(v1169 + 4 * v1405), 16);
  v1434 = *(_DWORD *)(v1 + 8868) ^ *(_DWORD *)(v1 + 7452) ^ (v1433 + v1354 + ~((2 * v1433) & 0x8D93D136));
  v1435 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9640)
                             + (((v1411 >> 4) | (16 * (v1411 & 0xF))) ^ 0x39));
  v1436 = v1435 ^ ((v1435 ^ 0xA0) >> 3) ^ ((v1435 ^ 0xA0) >> 2);
  v1437 = (v1434 + v1354 + ~((2 * v1434) & 0x8D93D136)) ^ v1340;
  v1438 = *(_QWORD *)(v1 + 9632);
  v1439 = *(unsigned __int8 *)(v1438 + ((v1437 - 66) ^ 0xCDLL));
  v1440 = *(_DWORD *)(v1 + 9024) ^ ((*(_QWORD *)(v1 + 9472) << v1432) | *(_QWORD *)(v1 + 6680)) ^ v1431;
  *(_DWORD *)(v1 + 8656) = v1429;
  v1441 = (v1440 - 959846245 - ((2 * v1440) & 0x8D93D136)) ^ v1429;
  v1442 = *(_DWORD *)(v1 + 9016) ^ *(_DWORD *)(v1 + 7448) ^ ((v1420 ^ v1428)
                                                           - 959846245
                                                           - ((2 * (v1420 ^ v1428)) & 0x8D93D136));
  v1443 = (v1442 - 959846245 - ((2 * v1442) & 0x8D93D136)) ^ v1340;
  v1444 = *(unsigned int *)(v1169 + 4 * (((v1439 >> 2) | ((_BYTE)v1439 << 6)) ^ 0x1Au));
  v1445 = v1444 >> 16;
  v1446 = (v1444 >> 16) | ((_DWORD)v1444 << 16);
  v1447 = (v1441 - 959846245 - ((2 * v1441) & 0x8D93D136)) ^ v1340;
  v1448 = *(unsigned int *)(v1169 + 4 * ((v1441 - 101 - ((2 * v1441) & 0x36)) ^ v1340));
  v1449 = (unsigned __int16)(v1448 >> ((v1445 & 0x10 ^ 0x10) + (v1445 & 0x10))) | ((unsigned __int16)v1448 << 16);
  v1450 = ((*(_DWORD *)(v1169 + 4 * BYTE1(v1443)) << 24)
         - 959846245
         - ((*(_DWORD *)(v1169 + 4 * BYTE1(v1443)) << 25) & 0x8C000000)) ^ 0xC6C9E89B | (*(_DWORD *)(v1169 + 4 * BYTE1(v1443)) >> 8);
  v1451 = (*(_DWORD *)(v1 + 8816) & 1) == 0;
  v1452 = *(_DWORD *)(v1 + 8992);
  if ((*(_DWORD *)(v1 + 8816) & 1) != 0)
    v1453 = *(_DWORD *)(v1 + 8992);
  else
    v1453 = v1427;
  if ((*(_DWORD *)(v1 + 8816) & 1) == 0)
    v1427 = v1419;
  *(_DWORD *)(v1 + 9488) = v1427;
  v1454 = *(_DWORD *)(v1 + 9208);
  if (v1451)
  {
    v1419 = *(_DWORD *)(v1 + 9208);
    v1454 = v1452;
  }
  *(_DWORD *)(v1 + 9472) = v1454;
  HIDWORD(v1455) = *(_DWORD *)(v1169 + 4 * v1443);
  LODWORD(v1455) = HIDWORD(v1455);
  v1456 = (v1455 >> 16) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1411 >> 22) & 0x3FC)), 24);
  v1457 = 2 * *(_DWORD *)(v1 + 9496);
  v1458 = *(_DWORD *)(v1 + 9656);
  *(_DWORD *)(v1 + 9096) = v1457;
  v1459 = v1457 - v1458 - 19;
  *(_DWORD *)(v1 + 8548) = v1459;
  v1460 = (v1459 & 2) == 0;
  if ((v1459 & 2) != 0)
    v1461 = v1419;
  else
    v1461 = v1453;
  *(_DWORD *)(v1 + 8860) = v1461;
  if ((v1459 & 2) != 0)
    v1462 = v1453;
  else
    v1462 = v1419;
  *(_DWORD *)(v1 + 8868) = v1462;
  v1463 = (v1436 ^ 6) - ((2 * (v1436 ^ 6) - 110) & 0xB2);
  HIDWORD(v1464) = *(_DWORD *)(v1169 + ((v1447 >> 22) & 0x3FC));
  LODWORD(v1464) = HIDWORD(v1464);
  v1465 = (v1464 >> 24) - 959846245 - ((2 * (v1464 >> 24)) & 0x8D93D136);
  v1466 = v1449 ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1443));
  v1467 = v1446 ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1411)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1447)), 8);
  HIDWORD(v1464) = *(_DWORD *)(v1169 + ((v1443 >> 22) & 0x3FC));
  LODWORD(v1464) = HIDWORD(v1464);
  v1468 = v1456 ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1437)), 8) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1447));
  v1469 = (v1467 - 959846245 - ((2 * v1467) & 0x8D93D136)) ^ ((v1464 >> 24)
                                                            - 959846245
                                                            - ((2 * (v1464 >> 24)) & 0x8D93D136));
  v1470 = *(_DWORD *)(v1169 + 4 * BYTE1(v1411));
  v1471 = (v1470 << 24) - 959846245 - ((v1470 << 25) & 0x8C000000);
  *(_DWORD *)(v1 + 8612) = v1471;
  v1472 = v1466 ^ __ROR4__(*(_DWORD *)(v1169 + ((v1437 >> 22) & 0x3FC)), 24) ^ (v1471 ^ 0xC6C9E89B | (v1470 >> 8));
  v1473 = v1469 + v1354 + ~((2 * v1469) & 0x8D93D136);
  v1474 = *(_DWORD *)(v1 + 9608);
  v1475 = *(_DWORD *)(v1 + 7280) ^ (v1474 ^ 0x8342890F) & *(_DWORD *)(v1 + 8952);
  v1476 = (v1475 - ((2 * v1475) & 0xC957902) - 2041922415) ^ 0x866A8F91;
  v1477 = *(_QWORD *)(v1 + 9704);
  v1478 = *(_QWORD *)(v1 + 6672) >> v1402;
  v1479 = (v1476 << v1477) ^ v1478 ^ v1340 ^ *(_DWORD *)(v1 + 8696) ^ (v1472 - 959846245 - ((2 * v1472) & 0x8D93D136));
  v1480 = *(_DWORD *)(v1 + 7436) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * ((v1463 + 34) ^ 0xD9u)), 16) ^ v1465 ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1437)) ^ v1450;
  v1481 = (v1480 - 959846245 - ((2 * v1480) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8536);
  v1482 = v1481 - 959846245 - ((2 * v1481) & 0x8D93D136);
  v1483 = *(_DWORD *)(v1 + 6756) ^ *(_DWORD *)(v1 + 8572) ^ (v1468 - 959846245 - ((2 * v1468) & 0x8D93D136));
  v1484 = *(unsigned __int8 *)(v1438
                             + ((*(_DWORD *)(v1 + 7424)
                                                + (*(_BYTE *)(v1 + 6756) ^ *(_BYTE *)(v1 + 8572) ^ (v1468
                                                                                                  - 101
                                                                                                  - ((2 * v1468) & 0x36)))) ^ 0xCDLL));
  v1485 = (((v1476 << v1432) | v1478)
         - 959846245
         - ((2 * ((v1476 << v1432) | v1478)) & 0x8D93D136)) ^ v1340 ^ *(_DWORD *)(v1 + 8532) ^ v1473;
  LOBYTE(v1476) = (v1484 >> 2) | ((_BYTE)v1484 << 6);
  v1486 = v1479 ^ 0xC6C9E89B;
  v1487 = *(_DWORD *)(v1169 + 4 * (BYTE1(v1479) ^ 0xE8u));
  v1488 = ((v1487 << 24) - 959846245 - ((v1487 << 25) & 0x8C000000)) ^ 0xC6C9E89B | (v1487 >> 8);
  v1489 = v1482 ^ v1340;
  HIDWORD(v1464) = *(_DWORD *)(v1169 + ((v1489 >> 22) & 0x3FC));
  LODWORD(v1464) = HIDWORD(v1464);
  LODWORD(v1478) = (v1464 >> 24) - 959846245 - ((2 * (v1464 >> 24)) & 0x8D93D136);
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * BYTE1(v1489));
  LODWORD(v1464) = HIDWORD(v1464);
  v1490 = ((v1464 >> 8) - 959846245 - ((2 * (v1464 >> 8)) & 0x8D93D136)) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1485 >> 22) & 0x3FC)), 24);
  v1491 = *(unsigned int *)(v1169 + 4 * (v1479 ^ 0x9Bu));
  v1492 = v1491 << (-(v1490 & 0xF0 ^ 0x60 | v1490 & 0xF0 ^ 0x90) & 0xF0);
  LODWORD(v1491) = ((v1492 - 959846245 - ((2 * v1492) & 0x8D93D136)) ^ 0xC6C9E89B) + WORD1(v1491);
  v1493 = __ROR4__(*(_DWORD *)(v1169 + 4 * v1489), 16) ^ 0xC6C9E89B ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1483)), 8) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1485)) ^ (((*(_DWORD *)(v1169 + ((v1486 >> 22) & 0x3FC)) << 8) - 959846245 - (*(_DWORD *)(v1 + 9664) & (*(_DWORD *)(v1169 + ((v1486 >> 22) & 0x3FC)) << 9))) ^ 0xC6C9E89B | HIBYTE(*(_DWORD *)(v1169 + ((v1486 >> 22) & 0x3FC))));
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * (v1476 ^ 0x1Au));
  LODWORD(v1464) = HIDWORD(v1464);
  LODWORD(v1486) = v1478 ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1485)), 8) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1486)) ^ ((v1464 >> 16) - 959846245 - ((2 * (v1464 >> 16)) & 0x8D93D136));
  LODWORD(v1485) = (((*(_DWORD *)(v1169 + 4 * v1485) << 16)
                   - 959846245
                   - ((*(_DWORD *)(v1169 + 4 * v1485) << 17) & 0x8D920000)) ^ 0xC6C9E89B | HIWORD(*(_DWORD *)(v1169 + 4 * v1485))) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1483 >> 22) & 0x3FC)), 24);
  LODWORD(v1486) = (v1486 - 959846245 - ((2 * v1486) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9528);
  v1494 = *(_QWORD *)(v1 + 9648);
  v1495 = *(_QWORD *)(v1 + 6664) >> v1402;
  LODWORD(v1476) = v1495 + ((unint64_t)(v1494 & *(_DWORD *)(v1 + 7640)) << v1432);
  LODWORD(v1485) = (v1485 - 959846245 - ((2 * v1485) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 8808);
  LODWORD(v1492) = v1485 - 959846245 - ((2 * v1485) & 0x8D93D136);
  LODWORD(v1485) = (v1486 - 959846245 - ((2 * v1486) & 0x8D93D136)) ^ v1340;
  v1496 = ((_DWORD)v1485 - 959846245 - ((2 * (_DWORD)v1485) & 0x8D93D136)) ^ ((_DWORD)v1476
                                                                            - 959846245
                                                                            - ((2 * (_DWORD)v1476) & 0x8D93D136));
  LODWORD(v1483) = *(_DWORD *)(v1 + 9008) ^ ((v1495 ^ *(_QWORD *)(v1 + 6928))
                                           - 959846245
                                           - ((2 * (v1495 ^ *(_QWORD *)(v1 + 6928))) & 0x8D93D136)) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1483)) ^ v1490 ^ (v1491 - 959846245 - ((2 * v1491) & 0x8D93D136));
  LODWORD(v1486) = v1483 - 959846245 - ((2 * v1483) & 0x8D93D136);
  v1497 = v1494 & *(_DWORD *)(v1 + 7632);
  v1498 = (((v1497 << v1477) - 959846245 - ((2 * (v1497 << v1477)) & 0x8D93D136)) ^ 0xC6C9E89B) + *(_QWORD *)(v1 + 6920);
  v1499 = *(_DWORD *)(v1 + 8828) ^ (v1498 - 959846245 - ((2 * v1498) & 0x8D93D136));
  *(_DWORD *)(v1 + 8696) = v1493;
  v1500 = v1493 ^ (v1499 - 959846245 - ((2 * v1499) & 0x8D93D136));
  LODWORD(v1497) = (((*(_QWORD *)(v1 + 7416) >> v1402)
                   - 959846245
                   - ((2 * (*(_QWORD *)(v1 + 7416) >> v1402)) & 0x8D93D136)) ^ 0xC6C9E89B)
                 + (v1497 << v1432);
  v1501 = ((_DWORD)v1497 - 959846245 - ((2 * (_DWORD)v1497) & 0x8D93D136)) ^ v1340 ^ *(_DWORD *)(v1169
                                                                                               + 4 * BYTE2(v1489)) ^ (v1488 - 959846245 - ((2 * v1488) & 0x8D93D136)) ^ v1492;
  v1502 = (v1500 - 959846245 - ((2 * v1500) & 0x8D93D136)) ^ v1340;
  v1503 = *(_QWORD *)(v1 + 9680);
  LOBYTE(v1497) = *(_BYTE *)(v1503 + ((57 * ((v1500 - 101 - ((2 * v1500) & 0x36)) ^ v1340)) ^ 0x1DLL)) ^ (57 * ((v1500 - 101 - ((2 * v1500) & 0x36)) ^ v1340));
  LODWORD(v1476) = v1486 ^ v1340;
  v1504 = v1438;
  v1505 = *(unsigned __int8 *)(v1438 + ((((unsigned __int16)(v1486 ^ v1340) >> 8) - 66) ^ 0xCDLL));
  LOBYTE(v1492) = (v1505 >> 2) | ((_BYTE)v1505 << 6);
  LOBYTE(v1486) = *(_BYTE *)(v1503 + ((57 * ((v1486 ^ v1340) >> 24)) ^ 0x1DLL)) ^ (57 * ((v1486 ^ v1340) >> 24)) ^ 0x7C;
  LOBYTE(v1465) = v1486 + 86;
  LOBYTE(v1491) = (9 - v1486) & 0x18 | (v1486 + 86) & ((v1501 & 0x18 ^ 0x18) + (v1501 & 0x18));
  LODWORD(v1486) = ((*(_DWORD *)(v1169 + 4 * v1496) << 16)
                  - 959846245
                  - ((*(_DWORD *)(v1169 + 4 * v1496) << 17) & 0x8D920000)) ^ 0xC6C9E89B | HIWORD(*(_DWORD *)(v1169 + 4 * v1496));
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * v1476);
  LODWORD(v1464) = HIDWORD(v1464);
  LODWORD(v1495) = (v1464 >> 16) - 959846245 - ((2 * (v1464 >> 16)) & 0x8D93D136);
  v1506 = v1486 - 959846245 - ((2 * v1486) & 0x8D93D136);
  LODWORD(v1497) = *(_DWORD *)(v1169 + 4 * ((v1497 ^ 0x7C) + 86));
  LODWORD(v1492) = *(_DWORD *)(v1169 + 4 * (v1492 ^ 0x1Au));
  v1507 = (v1492 >> 8) - 959846245 - ((2 * (v1492 >> 8)) & 0x193D136);
  v1508 = (v1507 ^ 0xC6C9E89B | ((_DWORD)v1492 << 24))
        - 959846245
        - 2 * ((v1507 ^ 0xC6C9E89B | ((_DWORD)v1492 << 24)) & 0x46C9E8BB ^ v1507 & 0x20);
  v1509 = *(unsigned int *)(v1169 + 4 * v1465);
  LODWORD(v1492) = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9584) + (((v1509 >> 19) & 0xE0 | (v1509 >> 27)) ^ 0x9C)) | ((_DWORD)v1509 << 8);
  HIDWORD(v1464) = *(_DWORD *)(v1169 + ((v1496 >> 22) & 0x3FC));
  LODWORD(v1464) = HIDWORD(v1464);
  v1510 = *(_DWORD *)(v1169 + ((v1501 >> 22) & 0x3FC));
  LODWORD(v1477) = *(unsigned __int8 *)(v1504 + ((HIBYTE(v1510) - 66) ^ 0xCDLL));
  v1511 = v1504;
  LOBYTE(v1477) = ((v1477 >> 2) | ((_BYTE)v1477 << 6)) ^ 0x1A;
  LODWORD(v1509) = ((v1464 >> 24) - 959846245 - ((2 * (v1464 >> 24)) & 0x8D93D136)) ^ (*(_DWORD *)(v1169
                                                                                                 + 4 * BYTE2(v1502))
                                                                                     - 959846245
                                                                                     - ((2
                                                                                       * *(_DWORD *)(v1169 + 4 * BYTE2(v1502))) & 0x8D93D136));
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * v1501);
  LODWORD(v1464) = HIDWORD(v1464);
  v1512 = (v1477 | (v1510 << 8))
        - 959846245
        - 2 * ((v1477 & 0x9F | (v1510 << 8) & 0x46C9E89F) ^ v1477 & 4);
  v1513 = (v1464 >> 16) - 959846245 - ((2 * (v1464 >> 16)) & 0x8D93D136);
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * BYTE1(v1496));
  LODWORD(v1464) = HIDWORD(v1464);
  LODWORD(v1477) = ((v1464 >> 8) - 959846245 - ((2 * (v1464 >> 8)) & 0x8D93D136)) ^ *(_DWORD *)(v1 + 9012);
  v1514 = *(_DWORD *)(v1169 + 4 * BYTE2(v1501));
  *(_DWORD *)(v1 + 9496) = v1514;
  LODWORD(v1492) = ((((_DWORD)v1497 << 16) - 959846245 - (((_DWORD)v1497 << 17) & 0x8D920000)) ^ 0xC6C9E89B | WORD1(v1497)) ^ 0xC6C9E8EE ^ v1514 ^ (v1477 - 959846245 - ((2 * v1477) & 0x8D93D136)) ^ v1492;
  LOBYTE(v1497) = v1432;
  v1515 = (unint64_t)((v1474 ^ 0xC0C682F4) & *(_DWORD *)(v1 + 7520)) << v1432;
  LODWORD(v1504) = v1515 - 959846245 - ((2 * v1515) & 0x8D93D136);
  v1516 = v1502 >> v1491;
  LODWORD(v1502) = v1495 ^ *(_DWORD *)(v1 + 7404) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1496)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1502)), 8) ^ v1512;
  LODWORD(v1496) = v1502 ^ 0xC6C9E89B;
  LODWORD(v1495) = (v1502 ^ 0xC6C9E89B) & 0x46C9E89F ^ v1502 & 4;
  LODWORD(v1502) = (v1492 - 959846245 - ((2 * v1492) & 0x8D93D136)) ^ v1340;
  LODWORD(v1502) = v1502 + *(_DWORD *)(v1 + 7408) - 2 * (v1502 & *(_DWORD *)(v1 + 7408));
  LODWORD(v1496) = (v1496 - 959846245 - 2 * v1495) ^ *(_DWORD *)(v1 + 9480);
  LODWORD(v1496) = (v1496 - 959846245 - ((2 * v1496) & 0x8D93D136)) ^ v1340;
  LODWORD(v1495) = *(_DWORD *)(v1 + 9072) ^ v1513;
  *(_DWORD *)(v1 + 8664) = v1508;
  *(_DWORD *)(v1 + 9208) = v1509 ^ v1508;
  LODWORD(v1492) = (*(_QWORD *)(v1 + 7392) >> v1402) | *(_QWORD *)(v1 + 6912);
  LODWORD(v1509) = ((v1509 ^ v1508 ^ v1495 ^ 0xC6C9E89B)
                  - 959846245
                  - 2 * ((v1509 ^ v1508 ^ v1495 ^ 0xC6C9E89B) & 0x46C9E89F ^ (v1509 ^ v1508 ^ v1495) & 4)) ^ v1340;
  LODWORD(v1495) = (v1509 - 959846245 - ((2 * v1509) & 0x8D93D136)) ^ (v1492 - 959846245 - ((2 * v1492) & 0x8D93D136));
  v1517 = *(_QWORD *)(v1 + 9704);
  LODWORD(v1509) = ((unint64_t)((v1474 ^ 0xC0C682F4) & *(_DWORD *)(v1 + 7624)) << v1517) ^ *(_QWORD *)(v1 + 6904);
  LODWORD(v1509) = *(_DWORD *)(v1 + 8688) ^ (v1509 - 959846245 - ((2 * v1509) & 0x8D93D136));
  LODWORD(v1501) = v1506 ^ (v1509 - 959846245 - ((2 * v1509) & 0x8D93D136)) ^ __ROR4__(*(_DWORD *)(v1169+ 4 * v1516), 24) ^ __ROR4__(*(_DWORD *)(v1169+ 4 * BYTE1(v1501)), 8) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1476));
  *(_DWORD *)(v1 + 9052) = v1504;
  LODWORD(v1496) = (v1496 - 959846245 - ((2 * v1496) & 0x8D93D136)) ^ v1504;
  v1518 = ((_DWORD)v1501 - 959846245 - ((2 * (_DWORD)v1501) & 0x8D93D136)) ^ v1340;
  LODWORD(v1509) = *(unsigned __int8 *)(v1511 + ((BYTE2(v1496) - 66) ^ 0xCDLL));
  LOBYTE(v1476) = (v1509 >> 2) | ((_BYTE)v1509 << 6);
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * ((v1501 - 101 - ((2 * v1501) & 0x36)) ^ v1340));
  LODWORD(v1464) = HIDWORD(v1464);
  LOBYTE(v1512) = BYTE2(v1502) - ((v1502 >> 15) & 0x40);
  v1519 = *(_DWORD *)(v1169 + 4 * BYTE1(v1495));
  LODWORD(v1501) = (v1519 >> 8) - 959846245 - ((2 * (v1519 >> 8)) & 0x193D136);
  LODWORD(v1509) = *(_DWORD *)(v1169 + 4 * v1495)
                 - 959846245
                 - ((2 * *(_DWORD *)(v1169 + 4 * v1495)) & 0x8D93D136);
  v1520 = (v1501 ^ 0xC6C9E89B | (v1519 << 24))
        - 959846245
        - 2 * ((v1501 ^ 0xC6C9E89B | (v1519 << 24)) & 0x46C9E89F ^ v1501 & 4);
  LODWORD(v1501) = (((_DWORD)v1509 << 16) ^ 0xE89B0000)
                 - 959846245
                 - ((2 * (((_DWORD)v1509 << 16) ^ 0xE89B0000)) & 0x8D920000);
  *(_DWORD *)(v1 + 8672) = v1501;
  LODWORD(v1509) = v1501 ^ 0xC6C9E89B | WORD1(v1509);
  v1521 = *(_QWORD *)(v1 + 9440);
  v1522 = v1502 ^ 8;
  LODWORD(v1501) = *(_DWORD *)(v1169 + 4 * BYTE2(v1518)) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1496), 16) ^ __ROR4__(*(_DWORD *)(v1169+ 4* ((*(_BYTE *)(v1521 + ((57 * BYTE3(v1495)) ^ 0xD6)) ^ 0xE) + 86)), 24) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1522)), 8);
  v1523 = (*(_QWORD *)(v1 + 7384) >> v1402) + *(_QWORD *)(v1 + 6888);
  LODWORD(v1515) = v1523 - 959846245 - ((2 * v1523) & 0x8D93D136);
  v1524 = *(_QWORD *)(v1 + 9160) - 959846245 - ((2 * *(_QWORD *)(v1 + 9160)) & 0xD131116);
  LODWORD(v1492) = (v1501 ^ *(_DWORD *)(v1 + 8552) ^ 0xC6C9E89B)
                 - 959846245
                 - 2
                 * ((v1501 ^ *(_DWORD *)(v1 + 8552) ^ 0xC6C9E89B) & 0x46C9E89F ^ (v1501 ^ *(_DWORD *)(v1 + 8552)) & 4);
  LODWORD(v1502) = v1515 ^ v1340 ^ *(_DWORD *)(v1 + 8632) ^ ((v1464 >> 16)
                                                           - 959846245
                                                           - ((2 * (v1464 >> 16)) & 0x8D93D136)) ^ *(_DWORD *)(v1169 + 4 * (v1476 ^ 0x1Au)) ^ __ROR4__(*(_DWORD *)(v1169 + ((v1522 >> 22) & 0x3FC)), 24) ^ v1520;
  LODWORD(v1476) = ((*(_QWORD *)(v1 + 6864) >> v1402) | *(_QWORD *)(v1 + 6872)) ^ v1340 ^ *(_DWORD *)(v1 + 8628) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1522), 16) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1518)), 8) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * ((unint64_t)(v1496 >> *(_DWORD *)(v1 + 6896)) >> *(_QWORD *)(v1 + 6656))), 24) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1495));
  LODWORD(v1495) = *(_DWORD *)(v1 + 7272) ^ (v1474 ^ 0x110C2BE6) & *(_DWORD *)(v1 + 7380);
  v1525 = (unint64_t)((-1166872655 - (v1495 | 0xBA72EFB1) + (v1495 | 0x458D104E)) ^ 0x8545304C) << v1432;
  v1526 = v1525 - 959846245 - ((2 * v1525) & 0x8D93D136);
  LODWORD(v1525) = ((*(_QWORD *)(v1 + 7368) >> v1402)
                  - 959846245
                  - ((2 * (*(_QWORD *)(v1 + 7368) >> v1402)) & 0x8D93D136)) ^ 0xC6C9E89B;
  *(_DWORD *)(v1 + 9016) = v1526;
  LODWORD(v1509) = (v1525 + (v1526 ^ 0xC6C9E89B) - 959846245 - ((2 * (v1525 + (v1526 ^ 0xC6C9E89B))) & 0x8D93D136)) ^ v1340 ^ *(_DWORD *)(v1 + 8648) ^ (*(_DWORD *)(v1169 + ((v1518 >> 22) & 0x3FC)) << 8) ^ HIBYTE(*(_DWORD *)(v1169 + ((v1518 >> 22) & 0x3FC))) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * BYTE1(v1496)), 8) ^ *(_DWORD *)(v1169 + 4 * ((v1512 - 96) ^ 0xA0)) ^ v1509;
  LODWORD(v1496) = *(unsigned __int8 *)(*(_QWORD *)(v1 + 9592) + (((BYTE3(v1502) ^ 0xC6) - 66) ^ 0x9DLL));
  LODWORD(v1496) = ((v1496 >> 1) | ((_DWORD)v1496 << 7)) ^ (32
                                                                        * ((v1496 >> 1) | ((_DWORD)v1496 << 7))) ^ (16 * ((v1496 >> 1) | ((_DWORD)v1496 << 7))) ^ 0x41;
  LOBYTE(v1518) = (v1496 >> 2) | ((_BYTE)v1496 << 6);
  v1527 = v1502 ^ 0xC6C9E89B;
  LODWORD(v1525) = *(_DWORD *)(v1169
                             + 4
                             * ((*(_BYTE *)(v1521 + ((57 * BYTE3(v1476)) ^ 0xD6)) ^ 0xE)
                                               + 86));
  v1528 = ((_DWORD)v1525 << 8) - 959846245 - (*(_DWORD *)(v1 + 9664) & ((_DWORD)v1525 << 9));
  *(_DWORD *)(v1 + 8688) = v1528;
  LODWORD(v1522) = v1528 ^ 0xC6C9E89B | BYTE3(v1525);
  LOBYTE(v1525) = *(_BYTE *)(*(_QWORD *)(v1 + 9680)
                           + ((57 * BYTE2(v1476) - ((v1476 >> 15) & 4) + 2) ^ 0x1FLL));
  LOBYTE(v1520) = ((v1525 + (~(2 * v1525) | 0xFB) + 3) ^ (57 * BYTE2(v1476) - ((v1476 >> 15) & 4) + 2) ^ 0x7C)
                + ((2
                  * ((v1525 + (~(2 * v1525) | 0xFB) + 3) ^ (57 * BYTE2(v1476) - ((v1476 >> 15) & 4) + 2))) | 0xFB);
  LODWORD(v1496) = *(_DWORD *)(v1169 + 4 * (v1509 ^ 0x52u));
  LODWORD(v1496) = (((_DWORD)v1496 << 16) - 959846245 - (((_DWORD)v1496 << 17) & 0x8D920000)) ^ 0xC6C9E89B | WORD1(v1496);
  LODWORD(v1504) = v1496 - 959846245 - ((2 * v1496) & 0x8D93D136);
  LOBYTE(v1521) = v1517;
  v1529 = v1492 ^ v1340 ^ (((unint64_t)(v1524 ^ 0xC6C9E89B) << v1517) | *(_QWORD *)(v1 + 6880));
  v1530 = *(_DWORD *)(v1169
                    + 4
                    * (v1492 ^ v1340 ^ (((unint64_t)(v1524 ^ 0xC6C9E89B) << v1517) | *(_QWORD *)(v1 + 6880))));
  v1531 = (v1530 << 16) - 959846245 - ((v1530 << 17) & 0x8D920000);
  *(_DWORD *)(v1 + 8628) = v1531;
  LODWORD(v1492) = v1531 ^ 0xC6C9E89B | HIWORD(v1530);
  v1532 = v1509 ^ 0xC6C92E52;
  LODWORD(v1509) = *(_DWORD *)(v1169
                             + 4
                             * (((*(_BYTE *)(*(_QWORD *)(v1 + 9576)
                                                            + (((v1527 >> 4) & 0xF0 | ((unsigned __int16)v1502 >> 12)) ^ 0x45))
                                                 - 6) ^ 0x11)
                                               + 73));
  LODWORD(v1511) = __ROR4__(*(_DWORD *)(v1169 + ((v1532 >> 22) & 0x3FC)), 24) ^ 0xC6C9E89B ^ v1492;
  LODWORD(v1492) = ((v1509 >> 8) - 959846245 - ((2 * (v1509 >> 8)) & 0x193D136)) ^ 0xC6C9E89B | ((_DWORD)v1509 << 24);
  HIDWORD(v1464) = *(_DWORD *)(v1169 + ((v1529 >> 22) & 0x3FC));
  LODWORD(v1464) = HIDWORD(v1464);
  LODWORD(v1517) = (v1464 >> 24) + 1501089967 - ((2 * (v1464 >> 24)) & 0xB2F1A15E);
  LODWORD(v1509) = *(_DWORD *)(v1169 + 4 * BYTE1(v1529));
  v1533 = *(_DWORD *)(v1 + 9696) + ((_DWORD)v1509 << 24) + ~(((_DWORD)v1509 << 25) & 0x8C000000);
  *(_DWORD *)(v1 + 8828) = v1533;
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * BYTE1(v1476));
  LODWORD(v1464) = HIDWORD(v1464);
  LODWORD(v1515) = v1464 >> 8;
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * (v1502 ^ 0x9Bu));
  LODWORD(v1464) = HIDWORD(v1464);
  LODWORD(v1502) = v1522 ^ ((v1464 >> 16) - 959846245 - ((2 * (v1464 >> 16)) & 0x8D93D136)) ^ *(_DWORD *)(v1169 + 4 * BYTE2(v1529));
  LODWORD(v1527) = *(_DWORD *)(v1169 + 4 * BYTE2(v1527))
                 - 959846245
                 - ((2 * *(_DWORD *)(v1169 + 4 * BYTE2(v1527))) & 0x8D93D136);
  LODWORD(v1522) = ((*(_DWORD *)(v1169 + 4 * BYTE1(v1532)) >> 8)
                  - 959846245
                  - ((2 * (*(_DWORD *)(v1169 + 4 * BYTE1(v1532)) >> 8)) & 0x193D136)) ^ 0xC6C9E89B | (*(_DWORD *)(v1169 + 4 * BYTE1(v1532)) << 24);
  LODWORD(v1502) = ((v1522 - 959846245 - ((2 * v1522) & 0x8D93D136)) ^ v1502) & 0xD26A4364 | ((v1522
                                                                                             + 113895579
                                                                                             - ((2 * v1522) & 0xD93D136)) ^ v1502) & 0x2D95BC9B;
  LODWORD(v1518) = *(_DWORD *)(v1 + 8704) ^ __ROR4__(*(_DWORD *)(v1169 + 4 * v1518), 24);
  v1534 = *(_DWORD *)(v1169 + 4 * ((v1520 + 89) ^ 2u));
  *(_DWORD *)(v1 + 9012) = v1504;
  LODWORD(v1509) = v1518 ^ (v1533 ^ 0xC6C9E89B | (v1509 >> 8)) ^ v1504 ^ v1534;
  HIDWORD(v1464) = *(_DWORD *)(v1169 + 4 * v1476);
  LODWORD(v1464) = HIDWORD(v1464);
  v1535 = v1340 ^ *(_DWORD *)(v1 + 8608) ^ (v1509 - 959846245 - ((2 * v1509) & 0x8D93D136));
  LODWORD(v1518) = *(_DWORD *)(v1 + 8900) ^ *(_DWORD *)(v1 + 7344);
  *(_DWORD *)(v1 + 8992) = v1511;
  LODWORD(v1518) = v1511 ^ (v1518 - 959846245 - ((2 * v1518) & 0x8D93D136)) ^ (v1515
                                                                             - 959846245
                                                                             - ((2 * v1515) & 0x8D93D136)) ^ v1527;
  LODWORD(v1527) = v1518 - 959846245 - ((2 * v1518) & 0x8D93D136);
  LODWORD(v1509) = *(_DWORD *)(v1 + 8904) ^ ((*(_QWORD *)(v1 + 7352) >> v1402)
                                           + ((unint64_t)(*(_QWORD *)(v1 + 9648) & *(_DWORD *)(v1 + 7360)) << v1521)) ^ ((v1464 >> 16) - 959846245 - ((2 * (v1464 >> 16)) & 0x8D93D136));
  LODWORD(v1532) = *(_DWORD *)(v1169 + 4 * BYTE2(v1532)) ^ 0x9FB13834 ^ v1492;
  *(_DWORD *)(v1 + 8808) = v1517;
  LODWORD(v1509) = v1532 ^ v1517 ^ (v1509 - 959846245 - ((2 * v1509) & 0x8D93D136));
  LODWORD(v1518) = v1509 - 959846245 - ((2 * v1509) & 0x8D93D136);
  LODWORD(v1509) = (*(_QWORD *)(v1 + 6648) >> v1402) | ((unint64_t)((*(_DWORD *)(v1 + 9608) ^ 0xC68AFCu) & *(_DWORD *)(v1 + 7336)) << v1497);
  LODWORD(v1509) = *(_DWORD *)(v1 + 8680) ^ (v1509 - 959846245 - ((2 * v1509) & 0x8D93D136));
  LODWORD(v1517) = (v1509 - 959846245 - ((2 * v1509) & 0x8D93D136)) ^ v1340 ^ (v1502
                                                                             - 959846245
                                                                             - ((2 * v1502) & 0x8D93D136));
  v1536 = *(_QWORD *)(v1 + 6688);
  *(_DWORD *)(v1 + 8632) = *(_DWORD *)(v1536
                                     + 4
                                     * (unsigned __int16)(251 * (v1527 ^ v1340)
                                                        - 260
                                                        * ((unsigned __int16)((1012283
                                                                             * (v1527 ^ v1340)) >> 16) >> 4)));
  LODWORD(v1509) = *(_DWORD *)(v1536
                             + 4
                             * (unsigned __int16)(251 * (v1535 ^ 0x9B)
                                                - 260
                                                * ((unsigned __int16)((1012283 * (v1535 ^ 0x9Bu)) >> 16) >> 4)));
  LODWORD(v1515) = (((_DWORD)v1509 << 24) ^ 0x9B000000)
                 - 959846245
                 - ((2 * (((_DWORD)v1509 << 24) ^ 0x9B000000)) & 0x8C000000);
  *(_DWORD *)(v1 + 9040) = v1517;
  *(_DWORD *)(v1 + 8648) = v1515;
  v1537 = *(unsigned int *)(v1536
                          + 4
                          * (unsigned __int16)(251 * (v1517 ^ 0x9B)
                                             - 260
                                             * ((unsigned __int16)((1012283 * (v1517 ^ 0x9Bu)) >> 16) >> 4)));
  *(_DWORD *)(v1 + 9072) = ((v1515 ^ 0xC6C9E89B | (v1509 >> 8)) ^ 0xC6C9E8)
                         - 959846245
                         - ((2 * ((v1515 ^ 0xC6C9E89B | (v1509 >> 8)) ^ 0xC6C9E8)) & 0x8D93D136);
  *(_DWORD *)(v1 + 8680) = v1535;
  v1538 = (unint64_t)(v1537 ^ 0xC6C9E89B) >> (((v1537 & 0x98) + (v1537 & 0x98 ^ 0x98) + 112) & 0xF8);
  *(_QWORD *)(v1 + 8704) = v1537;
  LODWORD(v1537) = v1518 ^ v1340;
  LODWORD(v1518) = *(_DWORD *)(v1536
                             + 4
                             * (unsigned __int16)(251 * BYTE3(v1537)
                                                - 260
                                                * ((unsigned __int16)((1012283 * BYTE3(v1537)) >> 16) >> 4)));
  HIDWORD(v1464) = v1518 ^ 0xE89B;
  LODWORD(v1464) = v1518 ^ 0xC6C90000;
  v1539 = (v1464 >> 16) - 959846245 - ((2 * (v1464 >> 16)) & 0x8D93D136);
  LODWORD(v1527) = *(_DWORD *)(v1536
                             + 4
                             * (unsigned __int16)(251 * ((v1527 ^ v1340) >> 24)
                                                - 260
                                                * ((unsigned __int16)((1012283 * ((v1527 ^ v1340) >> 24)) >> 16) >> 4)));
  LODWORD(v1504) = *(_DWORD *)(v1536
                             + 4
                             * (unsigned __int16)(251 * BYTE2(v1537)
                                                - 260
                                                * ((unsigned __int16)((1012283 * BYTE2(v1537)) >> 16) >> 4)));
  *(_DWORD *)(v1 + 9024) = (((_DWORD)v1504 << 8) ^ 0xC9E89B00)
                         - 959846245
                         - (*(_DWORD *)(v1 + 9664) & (2 * (((_DWORD)v1504 << 8) ^ 0xC9E89B00)));
  HIDWORD(v1464) = v1527 ^ 0xE89B;
  LODWORD(v1464) = v1527 ^ 0xC6C90000;
  *(_DWORD *)(v1 + 8900) = (v1464 >> 16) - 959846245 - ((2 * (v1464 >> 16)) & 0x8D93D136);
  v1540 = *(_DWORD *)(v1 + 9488);
  if (!v1460)
    v1540 = *(_DWORD *)(v1 + 9472);
  *(_DWORD *)(v1 + 9056) = v1540;
  v1541 = *(_DWORD *)(v1 + 9464) ^ *(_DWORD *)(v1 + 8640);
  *(_DWORD *)(v1 + 8640) = v1538 - 959846245 - ((2 * v1538) & 0x8D93D136);
  *(_DWORD *)(v1 + 9008) = v1539;
  v1542 = (uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8
                                        * ((13 * (((BYTE1(v1529) - 34) ^ BYTE1(v1529)) != 0)) ^ *(_DWORD *)(v1 + 7864)))
                            - 4);
  *(_DWORD *)(v1 + 8904) = v1541 ^ 0xC6C9E89B;
  return v1542();
}

void sub_10038B7C8(int a1@<W1>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;

  *(_DWORD *)(v8 + 8764) = a1;
  *(_DWORD *)(v8 + 8416) = a4;
  *(_DWORD *)(v8 + 8744) = v10;
  *(_DWORD *)(v8 + 8424) = v12;
  *(_DWORD *)(v8 + 9456) = a2;
  *(_DWORD *)(v8 + 9184) = v6;
  *(_DWORD *)(v8 + 9512) = a3;
  *(_DWORD *)(v8 + 9648) = v11;
  v14 = *(_QWORD *)(v8 + 8472);
  *(_DWORD *)(v8 + 9160) = *(_DWORD *)(v8 + 9496) + v13 - (v9 & (2 * *(_DWORD *)(v8 + 9496)));
  *(_DWORD *)(v8 + 9192) = v14 + v13 - (v9 & (2 * v14));
  *(_DWORD *)(v8 + 8832) = v4 ^ v13;
  *(_DWORD *)(v8 + 9200) = v5 ^ v13;
  *(_DWORD *)(v8 + 8792) = v7 ^ v13;
  *(_DWORD *)(v8 + 8552) = *(_DWORD *)(v8 + 6552);
  *(_DWORD *)(v8 + 8768) = *(_DWORD *)(v8 + 8608);
  *(_DWORD *)(v8 + 8760) = *(_DWORD *)(v8 + 7328);
  *(_DWORD *)(v8 + 8472) = *(_DWORD *)(v8 + 9172);
  *(_DWORD *)(v8 + 8728) = *(_DWORD *)(v8 + 6576);
  *(_DWORD *)(v8 + 8448) = *(_DWORD *)(v8 + 8576);
  *(_DWORD *)(v8 + 9172) = *(_DWORD *)(v8 + 6560);
  *(_DWORD *)(v8 + 8784) = *(_DWORD *)(v8 + 6544);
  *(_DWORD *)(v8 + 9096) = *(_DWORD *)(v8 + 6592);
  *(_DWORD *)(v8 + 8720) = *(_DWORD *)(v8 + 6584);
  *(_DWORD *)(v8 + 9176) = *(_DWORD *)(v8 + 9136);
  *(_DWORD *)(v8 + 9136) = *(_DWORD *)(v8 + 6568);
  *(_DWORD *)(v8 + 8776) = *(_DWORD *)(v8 + 6536);
  *(_DWORD *)(v8 + 8576) = *(_DWORD *)(v8 + 9148);
  *(_DWORD *)(v8 + 8408) = *(_DWORD *)(v8 + 9152);
  *(_DWORD *)(v8 + 8572) = *(_DWORD *)(v8 + 9156);
  *(_DWORD *)(v8 + 8440) = *(_DWORD *)(v8 + 9116);
  *(_DWORD *)(v8 + 9688) = *(_DWORD *)(v8 + 9448);
  *(_DWORD *)(v8 + 8816) = *(_DWORD *)(v8 + 8560);
  *(_DWORD *)(v8 + 9120) = *(_DWORD *)(v8 + 7456);
  *(_DWORD *)(v8 + 9080) = *(_DWORD *)(v8 + 9504);
  *(_DWORD *)(v8 + 8712) = *(_DWORD *)(v8 + 8980);
  JUMPOUT(0x1003836A4);
}

uint64_t sub_10038B8FC(uint64_t a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  unint64_t v80;
  unint64_t v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  BOOL v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  int v179;
  int v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  uint64_t v201;
  unsigned int v202;
  int v203;
  unint64_t v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  unsigned int v211;
  int v212;
  int *v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  unsigned int v217;
  unint64_t v218;
  int v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  _BYTE *v225;
  uint64_t v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned int v254;
  unint64_t v255;
  unint64_t v256;
  unint64_t v257;
  unint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  unint64_t v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  unint64_t v291;
  unint64_t v292;
  char *v293;
  char *v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  unint64_t v299;
  uint64_t v300;
  _BYTE *v301;
  unint64_t v302;

  v18 = (*(_DWORD *)(v9 + 6632) & 2) == 0;
  if ((*(_DWORD *)(v9 + 6632) & 2) != 0)
    v19 = *(_DWORD *)(v9 + 8764);
  else
    v19 = *(_DWORD *)(v9 + 8752);
  *(_DWORD *)(v9 + 9696) = v19;
  if (v18)
    v20 = *(_DWORD *)(v9 + 8748);
  else
    v20 = *(_DWORD *)(v9 + 8760);
  *(_DWORD *)(v9 + 9656) = v20;
  v18 = *(_DWORD *)(v9 + 9688) == v17;
  *(_DWORD *)(v9 + 9296) ^= *(_DWORD *)(v9 + 8872);
  *(_DWORD *)(v9 + 9320) ^= *(_DWORD *)(v9 + 9432);
  *(_DWORD *)(v9 + 9432) = *(_DWORD *)(v9 + 9568) ^ *(_DWORD *)(v9 + 9104);
  *(_DWORD *)(v9 + 9448) = *(_DWORD *)(v9 + 9552) ^ *(_DWORD *)(v9 + 9360);
  *(_DWORD *)(v9 + 9480) = *(_DWORD *)(v9 + 8920) ^ *(_DWORD *)(v9 + 8720);
  *(_DWORD *)(v9 + 9496) = *(_DWORD *)(v9 + 9272) ^ *(_DWORD *)(v9 + 8712);
  *(_DWORD *)(v9 + 9528) = *(_DWORD *)(v9 + 9560) ^ *(_DWORD *)(v9 + 6628);
  *(_DWORD *)(v9 + 9560) = *(_DWORD *)(v9 + 9192) ^ *(_DWORD *)(v9 + 9392) ^ *(_DWORD *)(v9 + 8728) ^ *(_DWORD *)(v9 + 9520) ^ *(_DWORD *)(v9 + 6600);
  *(_DWORD *)(v9 + 9520) = *(_DWORD *)(v9 + 9384) ^ *(_DWORD *)(v9 + 9288);
  *(_DWORD *)(v9 + 9568) = *(_DWORD *)(v9 + 9116) ^ *(_DWORD *)(v9 + 9184);
  *(_DWORD *)(v9 + 9552) = *(_DWORD *)(v9 + 9536) ^ *(_DWORD *)(v9 + 9280);
  *(_DWORD *)(v9 + 9600) = *(_DWORD *)(v9 + 8744) ^ *(_DWORD *)(v9 + 9400);
  *(_DWORD *)(v9 + 9608) = *(_DWORD *)(v9 + 8912) ^ *(_DWORD *)(v9 + 6616) ^ *(_DWORD *)(v9 + 8880) ^ *(_DWORD *)(v9 + 6608) ^ *(_DWORD *)(v9 + 9128) ^ *(_DWORD *)(v9 + 9376) ^ *(_DWORD *)(v9 + 9264);
  v21 = *(_QWORD *)(v9 + 6688);
  v22 = *(_DWORD *)(v21
                  + 4
                  * (unsigned __int16)(251 * v11
                                     - 260
                                     * ((unsigned __int16)((1012283 * v11) >> 16) >> 4)));
  v23 = (v22 >> 8) ^ a3;
  v24 = 251 * BYTE1(v15) % ((v23 & 0x104 ^ 0x104) + (v23 & 0x104u));
  *(_QWORD *)(v9 + 9400) = 251 * BYTE2(v14) - 260 * ((1012283 * BYTE2(v14)) >> 20);
  v25 = *(_DWORD *)(v9 + 9040) ^ v17;
  *(_QWORD *)(v9 + 9392) = 251 * BYTE1(v25) - 260 * ((1012283 * BYTE1(v25)) >> 20);
  v26 = *(_DWORD *)(v9 + 7912) ^ 0xD;
  *(_DWORD *)(v9 + 9688) = v26;
  v27 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9584) + (((v15 >> (v26 - 63)) & 0x1F | (32 * (HIWORD(v15) & 7))) ^ 0x9CLL)) ^ 0x7D;
  *(_QWORD *)(v9 + 9376) = 251 * v27 - 260 * ((1012283 * v27) >> 20);
  v28 = (BYTE1(v11) - ((v11 >> 7) & 0x40) - 96) ^ 0xA0;
  v29 = 251 * v28 - 260 * ((1012283 * v28) >> 20);
  *(_QWORD *)(v9 + 9384) = 251 * HIBYTE(v14) - 260 * ((1012283 * HIBYTE(v14)) >> 20);
  v30 = *(_DWORD *)(v9 + 9024) ^ v17 | HIBYTE(a2) ^ 0xC6;
  v31 = v30 + v17 - ((2 * v30) & 0x8D93D136);
  v32 = *(_DWORD *)(v21
                  + 4
                  * (unsigned __int16)(-260 * ((unsigned __int16)((1012283 * HIBYTE(v25)) >> 16) >> 4)
                                     + 251 * HIBYTE(v25)));
  v33 = (((v32 << 16) ^ 0xE89B0000) + v17 - ((2 * ((v32 << 16) ^ 0xE89B0000)) & 0x8D920000)) ^ v17 | HIWORD(v32);
  v34 = ((v23 | (v22 << 24)) ^ v13) + v17 - 2 * (((v23 | (v22 << 24)) ^ v13) & 0x46C9E89F ^ (v22 >> 8) & 4);
  v35 = ((unint64_t)((*(_QWORD *)(v9 + 6520) >> *(_QWORD *)(v9 + 9456)) & *(_DWORD *)(v9 + 6488)) << *(_QWORD *)(v9 + 9456)) | ((unint64_t)(*(_DWORD *)(v9 + 6488) & *(_QWORD *)(v9 + 6336)) >> *(_QWORD *)(v9 + 9672));
  v36 = *(_DWORD *)(v9 + 6368);
  v37 = v35 ^ (2 * (v35 & v36));
  v38 = 2
      * ((v37 & *(_DWORD *)(v9 + 6480) & 0x7CBD3B51 ^ 0x6C850B51)
       + (v37 & *(_DWORD *)(v9 + 6480) ^ 0x107830A0)
       - ((v37 & *(_DWORD *)(v9 + 6480) ^ 0x107830A0) & 0x7CBD3B51));
  v39 = (2 * ((v38 ^ 0x598A17E2) & (*(_DWORD *)(v9 + 6504) ^ 0x1B280B0C) ^ v38 & 0x628545EE)) ^ 0x81000BC4;
  v40 = *(_DWORD *)(v9 + 7936);
  v41 = (v39 + v17 - (v40 & (2 * v39))) ^ (v37 + v17 - ((2 * v37) & 0x8D93D136));
  v42 = ((v17 + 2 * (v41 & v36) - (v40 & (4 * (v41 & v36)))) ^ v17) & *(_DWORD *)(v9 + 6332);
  v43 = *(_DWORD *)(v9 + 7944) - 347048351 - ((2 * *(_DWORD *)(v9 + 7944) + 1225602068) & 0x8D93D136);
  v44 = ((4 * (v42 + 113895579 - ((2 * v42) & 0xD93D136))) ^ 0x1B27A26C) & *(_DWORD *)(v9 + 6360);
  v45 = ((v44 + v17 - (*(_DWORD *)(v9 + 6304) & (2 * v44))) ^ v17) & *(_DWORD *)(v9 + 6480);
  *(_DWORD *)(v9 + 9536) = 1187637406;
  v46 = (2 * (v45 + 1187637406 - ((2 * v45) & 0xD93D136)) - 6) ^ 0x8D93D136;
  v47 = (v46 + v17 - (v40 & (2 * v46))) ^ v41;
  v48 = *(_DWORD *)(v9 + 6640) ^ 0x9B;
  v49 = *(_DWORD *)(v9 + 9464);
  v50 = v49 ^ *(_DWORD *)(v9 + 9696);
  v51 = *(_QWORD *)(v9 + 8768);
  v52 = (v50 >> v51) | (v50 << (*(_BYTE *)(v9 + 6640) ^ 0x9Bu));
  v53 = v52 + v17 - ((2 * v52) & 0x8D93D136);
  v54 = (v12 >> v51) | (v12 << (*(_BYTE *)(v9 + 6640) ^ 0x9Bu));
  v55 = v54 + v17 - ((2 * v54) & 0x8D93D136);
  if (v18)
    v55 = *(_DWORD *)(v9 + 8904);
  v56 = *(_DWORD *)(v9 + 9424);
  v57 = *(_DWORD *)(v9 + 9416);
  v58 = *(_DWORD *)(v9 + 7872) ^ v56 ^ v57 ^ v55 ^ v31 ^ *(_DWORD *)(v9 + 9072) ^ v33 ^ 0x95BF5A5C ^ *(_DWORD *)(v21 + 4 * v24);
  v59 = *(_DWORD *)(v9 + 7816);
  v60 = (v58 + 1527513462 - ((2 * v58) & 0xB61802EC)) ^ v59;
  v61 = (v60 + v17 - ((2 * v60) & 0x8D93D136)) ^ v47;
  v62 = ((unint64_t)(v61 ^ 0x2020202) >> v48) + ((unint64_t)(v61 ^ 0x2020202) << v51);
  v63 = v62 + v17 - ((2 * v62) & 0x8D93D136);
  v64 = v50 ^ v17;
  v65 = *(_DWORD *)(v9 + 9616);
  if (v65 != v17)
    v64 = v53;
  v66 = v57 ^ 0x542D722B ^ v64 ^ *(_DWORD *)(v9 + 8900) ^ __ROR4__(*(_DWORD *)(v21+ 4 * (unsigned __int16)*(_QWORD *)(v9 + 9400)), 24) ^ *(_DWORD *)(v21+ 4* (unsigned __int16)*(_QWORD *)(v9 + 9392)) ^ v34;
  v67 = v61 ^ 0xC4CBEA99;
  if (v65 != v17)
    v67 = v63;
  v68 = ((v43 + 3140) ^ v17) - 612801034;
  v69 = v56 ^ v68 ^ (v66 - 827089437 - ((2 * v66) & 0x9D673BC6));
  *(_DWORD *)(v9 + 9696) = v17 + 1;
  v70 = v69 + v17 + 1 + ~((2 * v69) & 0x8D93D136);
  v71 = ((v70 ^ v17) + v17 - 2 * ((v70 ^ v17) & 0x46C9E89F ^ v70 & 4)) ^ v47;
  v72 = ((unint64_t)(v71 ^ 0x2020202u) >> v48) | ((unint64_t)(v71 ^ 0x2020202u) << v51);
  v73 = v72 + v17 - ((2 * v72) & 0x8D93D136);
  v74 = *(_QWORD *)(v9 + 9512);
  v75 = (a8 >> v51) ^ (a8 << v74);
  v76 = v71 ^ 0xC4CBEA99;
  if (v65 != v17)
    v76 = v73;
  v77 = v75 + v17 - ((2 * v75) & 0x8D93D136);
  if (v65 == v17)
    v77 = v10;
  v78 = *(_DWORD *)(v21 + 4 * (unsigned __int16)*(_QWORD *)(v9 + 9384));
  v79 = v16 ^ *(_DWORD *)(v21 + 4 * (unsigned __int16)v29);
  HIDWORD(v80) = v78 ^ 0xE89B;
  LODWORD(v80) = v78 ^ 0xC6C90000;
  v81 = v49 ^ *(_DWORD *)(v9 + 9656);
  v82 = (v81 >> v51) | (v81 << v74);
  v83 = (v80 >> 16) + v17 - ((2 * (v80 >> 16)) & 0x8D93D136);
  v84 = v79 + v17 - ((2 * v79) & 0x8D93D136);
  v85 = v82 + v17 - ((2 * v82) & 0x8D93D136);
  v86 = v57 ^ 0x542D722B ^ v68 ^ v77 ^ v8 ^ __ROR4__(*(_DWORD *)(v21 + 4 * (unsigned __int16)*(_QWORD *)(v9 + 9376)), 24);
  v87 = (v86 - 827089437 - ((2 * v86) & 0x9D673BC6)) ^ v56;
  v88 = (((v87 + v17 - ((2 * v87) & 0x8D93D136)) ^ v17)
       + v17
       - 2 * (((v87 + v17 - ((2 * v87) & 0x8D93D136)) ^ v17) & 0x46C9E89F ^ (v87 + v17 - ((2 * v87) & 0x8D93D136)) & 4)) ^ v47;
  v89 = ((((unint64_t)(v88 ^ 0x2020202) >> v74)
        + v17
        - ((2 * ((unint64_t)(v88 ^ 0x2020202) >> v74)) & 0x8D93D136)) ^ v17)
      + ((unint64_t)(v88 ^ 0x2020202) << v51);
  v90 = v89 + v17 - ((2 * v89) & 0x8D93D136);
  v91 = v81 ^ v17;
  v92 = *(_DWORD *)(v9 + 9504);
  if (v92 != v17)
    v91 = v85;
  *(_DWORD *)(v9 + 9656) = v57 ^ 0x5B0C0176;
  v93 = v57 ^ 0x5B0C0176 ^ v91 ^ v83 ^ v84;
  v94 = v88 ^ 0xC4CBEA99;
  if (v92 != v17)
    v94 = v90;
  v95 = (v93 - 827089437 - ((2 * v93) & 0x9D673BC6)) ^ v56;
  v96 = v59 ^ *(_DWORD *)(v9 + 7872) ^ v47 ^ (v95 + v17 - ((2 * v95) & 0x8D93D136));
  v97 = ((unint64_t)(v96 ^ 0x9FC7EBEF) << v51) | ((unint64_t)(v96 ^ 0x9FC7EBEF) >> v74);
  v98 = v97 + v17 - ((2 * v97) & 0x8D93D136);
  v99 = v96 ^ 0x590E0374;
  if (v92 != v17)
    v99 = v98;
  v100 = *(_DWORD *)(v9 + 9488);
  if ((*(_DWORD *)(v9 + 8548) & 2) == 0)
    v100 = *(_DWORD *)(v9 + 9472);
  v101 = (*(_DWORD *)(v9 + 9096) ^ 0x73E1BD19) + *(_DWORD *)(v9 + 8328);
  v102 = *(_DWORD *)(v9 + 8816);
  if ((v102 & 1) != 0)
    v103 = v67;
  else
    v103 = v94;
  if ((v102 & 1) != 0)
    v104 = v94;
  else
    v104 = v76;
  if ((v102 & 1) != 0)
  {
    v105 = v99;
  }
  else
  {
    v76 = v99;
    v105 = v67;
  }
  v106 = ((v101 ^ 0x51D898E2) & 0x359E357C)
       - ((v101 ^ 0x51D898E2) & 0x5120074)
       + ((v101 ^ 0x51D898E2) & 0x5120074 ^ 0x8F538874);
  v107 = ((2 * ((v101 ^ 0x51D898E2) & 0x359E357E ^ 0xF625D50C ^ v106)) & 0x5C48DB5E)
       - ((v101 ^ 0x51D898E2) & 0x359E357E ^ 0xF625D50C ^ v106) == -690864934;
  v108 = *(_DWORD *)(v9 + 8860);
  v109 = (v108 ^ v100) + v17 - ((2 * (v108 ^ v100)) & 0x8D93D136);
  if (((2 * ((v101 ^ 0x51D898E2) & 0x359E357E ^ 0xF625D50C ^ v106)) & 0x5C48DB5E)
     - ((v101 ^ 0x51D898E2) & 0x359E357E ^ 0xF625D50C ^ v106) == -690864934)
    v110 = v103;
  else
    v110 = v76;
  if (((2 * ((v101 ^ 0x51D898E2) & 0x359E357E ^ 0xF625D50C ^ v106)) & 0x5C48DB5E)
     - ((v101 ^ 0x51D898E2) & 0x359E357E ^ 0xF625D50C ^ v106) != -690864934)
    v76 = v103;
  v111 = (v109 ^ v49) + v17 - ((2 * (v109 ^ v49)) & 0x8D93D136);
  if (((2 * ((v101 ^ 0x51D898E2) & 0x359E357E ^ 0xF625D50C ^ v106)) & 0x5C48DB5E)
     - ((v101 ^ 0x51D898E2) & 0x359E357E ^ 0xF625D50C ^ v106) == -690864934)
    v112 = v104;
  else
    v112 = v105;
  v113 = v112 ^ v111;
  v114 = v49 ^ 0x9F90B1C2;
  v115 = ((v110 ^ *(_DWORD *)(v9 + 9056) ^ v113) + v17 - ((2 * (v110 ^ *(_DWORD *)(v9 + 9056) ^ v113)) & 0x8D93D136)) ^ v49;
  if (v107)
    v104 = v105;
  v116 = (*(_DWORD *)(v9 + 8868) ^ v17)
       + ((v17 + 1173466697 * v114 - ((-1948033902 * v114) & 0x8D93D136)) ^ v17)
       - 1173466697 * (v76 ^ v17 ^ v115);
  v117 = v116 + 1527513462 - ((2 * v116) & 0xB61802EC);
  v118 = ((v17 - 231257745 * (v104 ^ v49) - ((-462515490 * (v104 ^ v49)) & 0x8D93D136)) ^ v17) + (v108 ^ v17);
  v119 = ((v118 + v17 - ((2 * v118) & 0x8D93D136)) ^ v17) + 231257745 * (v117 ^ 0x255582F);
  v120 = (v104 ^ 0x606F4E3D) + 1;
  v121 = (v113 ^ 0x59595959) + 2048491169 * ((v49 ^ 0x9DC5E9ED ^ v117) + v120);
  v122 = (v119 - ((2 * v119) & 0x94F173AE) + 1249425879) ^ (1678922693 * (v76 ^ v49)
                                                          - ((-937121910 * (v76 ^ v49)) & 0x94F173AE)
                                                          + 1249425879);
  v123 = (v122 + v17 - ((2 * v122) & 0x8D93D136)) ^ (v17
                                                   + 1678922693 * (v115 ^ 0x59595959)
                                                   - ((-937121910 * (v115 ^ 0x59595959)) & 0x8D93D136));
  v124 = v112 ^ 0x606F4E3D;
  v125 = (v17 + 1912447435 * (v112 ^ v49) - ((-470072426 * (v112 ^ v49)) & 0x8D93D136)) ^ (-1214146401 * (v110 ^ v49)) ^ v117 ^ (1527513462 - 1214146401 * (v121 ^ 0x59595959) - ((1866674494 * (v121 ^ 0x59595959)) & 0xB61802EC)) ^ (1912447435 * (v123 ^ 0x59595959));
  v126 = v115 + 443871459 * (v124 + ((v123 + v17 - ((2 * v123) & 0x8D93D136)) ^ v49)) + 443871459;
  v127 = v126 + v17 - ((2 * v126) & 0x8D93D136);
  v128 = v121 ^ (1506396235 * v114) ^ (v17 + 1506396235 * (v127 ^ v76) - ((-1282174826 * (v127 ^ v76)) & 0x8D93D136));
  v129 = (*(_DWORD *)(v9 + 9296) + v17 - ((2 * *(_DWORD *)(v9 + 9296)) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 8936);
  v130 = *(_DWORD *)(v9 + 7808);
  v131 = (v129 + 2131364622 - ((2 * v129) & 0xFE14161C)) ^ v130;
  v132 = (v131 + v17 - ((2 * v131) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 8932);
  v133 = v128 ^ (v123
               + 1972405671 * ((v125 ^ v49) + v120)
               + v17
               - ((2 * (v123 + 1972405671 * ((v125 ^ v49) + v120))) & 0x8D93D136));
  v134 = v133 + v17 - ((2 * v133) & 0x8D93D136);
  v135 = (v132 + v17 - ((2 * v132) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 8776);
  v136 = (*(_DWORD *)(v9 + 9320) + v17 - ((2 * *(_DWORD *)(v9 + 9320)) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9408);
  v137 = (v136 + v17 - ((2 * v136) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 8560);
  v138 = (v137 + v17 - ((2 * v137) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9368);
  v139 = *(_DWORD *)(v9 + 9696);
  v140 = (v138 + v139 + ~((2 * v138) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9136);
  v141 = *(_DWORD *)(v9 + 9432) ^ (v135 + v17 - ((2 * v135) & 0x8D93D136)) ^ (v140 + v17 - ((2 * v140) & 0x8D93D136));
  v142 = (v141 + v17 - ((2 * v141) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 8784);
  v143 = (v142 + v17 - ((2 * v142) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9148);
  v144 = (v143 + v17 - ((2 * v143) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9248);
  v145 = (v144 + v17 - ((2 * v144) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9156);
  v146 = (*(_DWORD *)(v9 + 9448) + v17 - ((2 * *(_DWORD *)(v9 + 9448)) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9152);
  v147 = (v146 + v17 - ((2 * v146) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9544);
  v148 = *(_DWORD *)(v9 + 9480) ^ (v147 + v17 - ((2 * v147) & 0x8D93D136)) ^ (v145 + v17 - ((2 * v145) & 0x8D93D136));
  v149 = (v148 + v17 - ((2 * v148) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9080);
  v150 = (v149 + v17 - ((2 * v149) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 8792);
  v151 = (v150 + v17 - ((2 * v150) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9036);
  v152 = (v151 + v17 - ((2 * v151) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 8576);
  v153 = (*(_DWORD *)(v9 + 9496) + v17 - ((2 * *(_DWORD *)(v9 + 9496)) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9176);
  v154 = *(_DWORD *)(v9 + 9528) ^ (v153 + v17 - ((2 * v153) & 0x8D93D136)) ^ (v152 + v17 - ((2 * v152) & 0x8D93D136));
  v155 = (v154 + v17 - ((2 * v154) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 8888);
  v156 = *(_DWORD *)(v9 + 9560) ^ (v155 + v17 - ((2 * v155) & 0x8D93D136));
  v157 = *(_DWORD *)(v9 + 9568) ^ (*(_DWORD *)(v9 + 9520) + v17 - ((2 * *(_DWORD *)(v9 + 9520)) & 0x8D93D136)) ^ (v156 + v139 + ~((2 * v156) & 0x8D93D136));
  v158 = (*(_DWORD *)(v9 + 9552) + v17 - ((2 * *(_DWORD *)(v9 + 9552)) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9304);
  v159 = *(_DWORD *)(v9 + 9600) ^ (v158 + v17 - ((2 * v158) & 0x8D93D136)) ^ (v157 + v17 - ((2 * v157) & 0x8D93D136));
  v160 = (v159 + v17 - ((2 * v159) & 0x8D93D136)) ^ *(_DWORD *)(v9 + 9328);
  v161 = v160 + v17 - ((2 * v160) & 0x8D93D136);
  v162 = *(_DWORD *)(v9 + 6512);
  v163 = *(_DWORD *)(v9 + 9312);
  v164 = (v163 ^ *(_DWORD *)(v9 + 7880)) & *(_DWORD *)(v9 + 8964);
  v165 = *(_QWORD *)(v9 + 8456) & *(_DWORD *)(v9 + 6480);
  v166 = (2
        * ((*(_QWORD *)(v9 + 9120) & v162) + *(_DWORD *)(v9 + 9536) - ((2 * (*(_QWORD *)(v9 + 9120) & v162)) & 0xD93D136))
        - 6) ^ 0x8D93D136;
  v167 = *(_DWORD *)(v9 + 7936);
  v168 = (v166 + v17 - (v167 & (2 * v166))) ^ *(_DWORD *)(v9 + 9172);
  v169 = (2 * (v165 + 1320394211 - ((2 * v165) & 0x1D673BC6))) ^ 0x9D673BC6;
  v170 = *(_QWORD *)(v9 + 7952);
  v171 = *(_QWORD *)(v9 + 8968);
  v172 = (v17 + 2 * v164 - (v167 & (4 * v164))) ^ v163;
  v173 = *(_QWORD *)(v9 + 6496);
  v174 = *(_QWORD *)(v9 + 9704);
  v175 = ((((unint64_t)(v168 & v173) << v174)
         + v17
         - ((2 * ((unint64_t)(v168 & v173) << v174)) & 0x8D93D136)) ^ v17)
       + ((((unint64_t)(v168 & v170) >> v171)
         + v17
         - ((2 * ((unint64_t)(v168 & v170) >> v171)) & 0x8D93D136)) ^ v17);
  v176 = *(_QWORD *)(v9 + 9648);
  v177 = (2 * ((*(_QWORD *)(v9 + 8464) & v162) + 1187637407 - ((2 * (*(_QWORD *)(v9 + 8464) & v162)) & 0xD93D136)) - 8) ^ 0x8D93D136;
  v178 = *(_QWORD *)(v9 + 9456);
  v179 = ((unint64_t)(v172 & *(_QWORD *)(v9 + 6520)) >> v178) | ((unint64_t)(v172 & v176) << v174);
  v180 = (v169 + v17 - (v167 & (2 * v169))) ^ *(_DWORD *)(v9 + 9200);
  v181 = (v177 + v17 - (v167 & (2 * v177))) ^ *(_DWORD *)(v9 + 9256);
  v182 = v180 & v173;
  v183 = *(_QWORD *)(v9 + 9672);
  v184 = ((((unint64_t)(v180 & v170) >> v171)
         + v17
         - ((2 * ((unint64_t)(v180 & v170) >> v171)) & 0x8D93D136)) ^ v17)
       + (((v182 << v183) + v17 - ((2 * (v182 << v183)) & 0x8D93D136)) ^ v17);
  v185 = (v184 + v17 - ((2 * v184) & 0x8D93D136)) ^ (v179 + v17 - ((2 * v179) & 0x8D93D136));
  v186 = v185 + v17 - ((2 * v185) & 0x8D93D136);
  v187 = ((unint64_t)(((v181 & v176) + v17 - ((2 * (v181 & v176)) & 0x8D93D136)) ^ v17) << v183) ^ ((unint64_t)(((v181 & v170) + v17 - ((2 * (v181 & v170)) & 0x8D93D136)) ^ v17) >> v178);
  LODWORD(v171) = *(_DWORD *)(v9 + 7928);
  v188 = v171 ^ *(_DWORD *)(v9 + 7920);
  v189 = *(_DWORD *)(v9 + 9608) ^ v175 ^ (v187 + 1547434771 - ((2 * v187) & 0xB877F626)) ^ v186 ^ v161 ^ *(_DWORD *)(v9 + 9004);
  v190 = ((v17 + 1736575863 * (v188 ^ 0x622E7345) - ((-821815570 * (v188 ^ 0x622E7345)) & 0x8D93D136)) ^ 0x39361764)
       + (v114 ^ v110 ^ v134)
       + 1;
  v191 = v171 ^ v130;
  v192 = v189 ^ v171 ^ v130 ^ v128;
  v193 = ((v190 + v17 - ((2 * v190) & 0x8D93D136)) ^ v17)
       + ((*(_DWORD *)(v9 + 9696) + 1736575863 * (v189 ^ 0x47B5D18E) + ~((-821815570 * (v189 ^ 0x47B5D18E)) & 0x8D93D136)) ^ v17);
  v194 = v193 + v17 - ((2 * v193) & 0x8D93D136);
  v195 = (v194 ^ v17) - ((2 * (v194 ^ v17) - 957757966) & 0x8D93D136) + 708758420;
  *(_DWORD *)(v9 + 9568) = v195;
  LODWORD(v171) = (v192 ^ 0x2FE3C4D1) - ((2 * (v192 ^ 0x2FE3C4D1) + 1064527314) & 0x8D93D136) + 1719901060;
  *(_DWORD *)(v9 + 9608) = v171;
  v196 = v189 ^ 0x817C3915 ^ v191 ^ v127;
  v197 = v189 ^ 0x817C3915 ^ v188 ^ v125;
  v198 = (v196 ^ 0xAE9FFDC4) - 633317020;
  *(_DWORD *)(v9 + 9600) = v198;
  v199 = (v197 ^ 0x622E7345) - ((2 * (v197 ^ 0x622E7345) - 1117293958) & 0x8D93D136) + 628990424;
  *(_DWORD *)(v9 + 9616) = v199;
  LODWORD(v171) = v171 ^ v197;
  *(_DWORD *)(v9 + 9544) = v171;
  *(_QWORD *)(v9 + 9560) = (((v171 ^ 0xF9490D4E) >> 11) & 0xE0 | (v171 >> 19) & 0x1F) ^ 0xB4;
  v200 = v196 ^ v199;
  v201 = *(_QWORD *)(v9 + 9632);
  v202 = *(unsigned __int8 *)(v201
                            + (((v196 ^ ((v197 ^ 0x45) - ((2 * (v197 ^ 0x45) + 122) & 0x36) - 40) ^ 0x30)
                                               - 66) ^ 0xCDLL));
  LOBYTE(v187) = (v202 >> 2) | ((_BYTE)v202 << 6);
  v203 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9640) + (((v200 >> 12) & 0xF0 | (v200 >> 20) & 0xF) ^ 0x43));
  *(_DWORD *)(v9 + 9528) = v203 ^ ((v203 ^ 0xA0) >> 3) ^ ((v203 ^ 0xA0) >> 2);
  v204 = v194 ^ v198 ^ 0xB51D9D6B;
  v205 = ((v194 ^ v198) >> 8) ^ 0xB51D9D;
  v206 = v195 ^ v192;
  *(_DWORD *)(v9 + 9536) = v206 ^ 0xFFFFFFA9;
  v207 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9592)
                            + ((((v194 ^ v198) & 0x9D ^ 0x94) + ((v194 ^ v198) & 0x9D ^ 9)) ^ ((v194 ^ ((v196 ^ 0xC4) + 100) ^ 0x6B) - 66)));
  v208 = *(_QWORD *)(v9 + 9592);
  *(_QWORD *)(v9 + 9552) = v206 ^ 0x4508B7A9u;
  v209 = (v207 >> 1) | (v207 << 7);
  *(_DWORD *)(v9 + 9512) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9680) + ((57 * v205) ^ 0x1DLL)) ^ (57 * v205);
  v210 = *(_QWORD *)(v9 + 6528);
  *(_QWORD *)(v9 + 9520) = v210 + 1570;
  v211 = *(unsigned __int8 *)(v208
                            + (((*(_BYTE *)(v210 + 1570 + (v187 ^ 0xAFLL)) ^ 0xD) - 66) ^ 0x9DLL));
  v212 = ((v211 >> 1) | (v211 << 7)) ^ (16 * ((v211 >> 1) ^ v211 & 0xE)) ^ 0x41;
  LOBYTE(v178) = (v212 >> 2) | ((_BYTE)v212 << 6);
  v213 = *(int **)(v9 + 9216);
  v214 = (int)(*v213 & 0xEE62092C);
  v215 = *(uint64_t **)(v9 + 9088);
  v216 = *v215;
  v217 = -333269657 * ((*(_DWORD *)(*v215 + v214) ^ *(_DWORD *)(v9 + 6312)) & 0x7FFFFFFF);
  v218 = -333269657 * (v217 ^ HIWORD(v217));
  v219 = *(_DWORD *)(v9 + 7912);
  v220 = (char *)*(&off_1004ECA20 + v219 - 3022) - 4;
  v221 = (char *)*(&off_1004ECA20 + v219 - 3182) - 8;
  LOBYTE(v176) = v220[v218 >> 24];
  v222 = v220;
  *(_QWORD *)(v9 + 9648) = v220;
  LOBYTE(v174) = v221[v218 >> 24];
  *(_QWORD *)(v9 + 9704) = v221;
  v223 = (char *)*(&off_1004ECA20 + (v219 ^ 0xC54)) - 4;
  *(_QWORD *)(v9 + 9672) = v223;
  LOBYTE(v174) = v176 ^ v174 ^ v223[(v218 >> 24) + 2] ^ (103 * (v217 ^ BYTE2(v217))) ^ (5
                                                                                      * ((-333269657
                                                                                        * (v217 ^ HIWORD(v217))) >> 24)) ^ 0x52 ^ v178;
  v224 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9624) + *(_QWORD *)(v9 + 9560));
  *(_QWORD *)(v9 + 9560) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9584)
                                              + ((((v171 ^ 0xF9490D4E) >> 3) & 0xE0 | ((unsigned __int16)v171 >> 11)) ^ 0x9DLL));
  v225 = *(_BYTE **)(v9 + 8248);
  v225[4031] = v174;
  v226 = v210 + 2110;
  LODWORD(v174) = *(unsigned __int8 *)(v201
                                     + (((v224 ^ 0x34 ^ *(_BYTE *)(v210 + 2110 + (v224 ^ 0xFB))) - 66) ^ 0xCDLL));
  LODWORD(v224) = -333269657 * ((*(_DWORD *)(v216 + v214) ^ *(_DWORD *)(v9 + 6344)) & 0x7FFFFFFF);
  v227 = -333269657 * (v224 ^ WORD1(v224));
  v225[4033] = ((v174 >> 2) | ((_BYTE)v174 << 6)) ^ v222[v227 >> 24] ^ v221[v227 >> 24] ^ v223[(v227 >> 24) + 2] ^ v227 ^ (5 * BYTE3(v227)) ^ 5;
  LODWORD(v214) = -333269657 * ((*(_DWORD *)(v216 + v214) ^ *(_DWORD *)(v9 + 6392)) & 0x7FFFFFFF);
  v228 = -333269657 * (v214 ^ WORD1(v214));
  v229 = *(_QWORD *)(v9 + 7904);
  v230 = *(_QWORD *)(v9 + 7896);
  v231 = *(_QWORD *)(v9 + 7888);
  v232 = *(_QWORD *)(v9 + 9576);
  v225[4025] = *(_BYTE *)(v229 + (v228 >> 24)) ^ *(_BYTE *)(v230 + (v228 >> 24)) ^ *(_BYTE *)((v228 >> 24) + v231 + 3) ^ v228 ^ (-117 * BYTE3(v228)) ^ (((*(_BYTE *)(v232 + ((((*(_BYTE *)(v210 + 2110 + (BYTE2(v204) ^ 0xE3)) ^ BYTE2(v204) ^ 0x2C) >> 4) | (16 * (*(_BYTE *)(v210 + 2110 + (BYTE2(v204) ^ 0xE3)) ^ BYTE2(v204) ^ 0x2C))) ^ 0x4BLL)) - 6) ^ 0x11) + 73) ^ 0xF0;
  LOBYTE(v174) = (((*(_BYTE *)(v9 + 9512) ^ 0x7C) + 86) >> 4) | (16
                                                                                * ((*(_BYTE *)(v9 + 9512) ^ 0x7C) + 86));
  v233 = (int)(*v213 & 0xEE62092C);
  v234 = *v215;
  LODWORD(v227) = -333269657 * ((*(_DWORD *)(*v215 + v233) ^ *(_DWORD *)(v9 + 6380)) & 0x7FFFFFFF);
  v235 = -333269657 * (v227 ^ WORD1(v227));
  v225[4028] = *(_BYTE *)(v210 + 2110 + (HIBYTE(v200) ^ 0x6CLL)) ^ *(_BYTE *)(v229 + (v235 >> 24)) ^ *(_BYTE *)(v230 + (v235 >> 24)) ^ *(_BYTE *)((v235 >> 24) + v231 + 3) ^ v235 ^ (-117 * BYTE3(v235)) ^ HIBYTE(v200) ^ 0x36;
  v236 = *(_QWORD *)(v9 + 9640);
  LOBYTE(v223) = *(_BYTE *)(v236 + (v174 ^ 0x55)) ^ ((*(_BYTE *)(v236 + (v174 ^ 0x55)) ^ 0xA0) >> 3) ^ ((*(_BYTE *)(v236 + (v174 ^ 0x55)) ^ 0xA0) >> 2);
  LODWORD(v174) = -333269657 * ((*(_DWORD *)(v234 + v233) ^ *(_DWORD *)(v9 + 6320)) & 0x7FFFFFFF);
  v237 = -333269657 * (v174 ^ WORD1(v174));
  v238 = *(_QWORD *)(v9 + 9520);
  v225[4026] = *(_BYTE *)(v238 + (((v223 ^ 6) + 73) ^ 0x81)) ^ *(_BYTE *)(v229 + (v237 >> 24)) ^ *(_BYTE *)(v230 + (v237 >> 24)) ^ *(_BYTE *)((v237 >> 24) + v231 + 3) ^ v237 ^ (-117 * BYTE3(v237)) ^ 0x74;
  LODWORD(v223) = ((*(_DWORD *)(v9 + 9528) ^ 6) + 73) ^ 0xFFFFFFA5 ^ *(unsigned __int8 *)(v210
                                                                                        + 2110
                                                                                        + (((*(_BYTE *)(v9 + 9528) ^ 6) + 73) ^ 0x6ALL));
  LODWORD(v233) = -333269657 * ((*(_DWORD *)(v234 + v233) ^ *(_DWORD *)(v9 + 6424)) & 0x7FFFFFFF);
  v239 = -333269657 * (v233 ^ WORD1(v233));
  v225[4029] = *(_BYTE *)(v229 + (v239 >> 24)) ^ *(_BYTE *)(v230 + (v239 >> 24)) ^ *(_BYTE *)((v239 >> 24) + v231 + 3) ^ v239 ^ (-117 * BYTE3(v239)) ^ 0x27 ^ (((*(_BYTE *)(v232 + (((v223 >> 4) | (16 * (_BYTE)v223)) ^ 0x4BLL)) - 6) ^ 0x11) + 73);
  LOBYTE(v223) = v209 ^ (32 * v209) ^ (16 * v209) ^ 0x41;
  v240 = (int)(*v213 & 0xEE62092C);
  v241 = *v215;
  LOBYTE(v209) = (v223 >> 2) | ((_BYTE)v223 << 6);
  LODWORD(v223) = -333269657 * ((*(_DWORD *)(*v215 + v240) ^ *(_QWORD *)(v9 + 8944)) & 0x7FFFFFFF);
  v242 = -333269657 * (v223 ^ (v223 >> 16));
  LOBYTE(v208) = (*(_DWORD *)(v9 + 9536) >> 4) | (16 * *(_DWORD *)(v9 + 9536));
  v225[4024] = *(_BYTE *)(v238 + ((v204 >> 24) ^ 0xCD)) ^ *(_BYTE *)(v229 + (v242 >> 24)) ^ *(_BYTE *)(v230 + (v242 >> 24)) ^ *(_BYTE *)((v242 >> 24) + v231 + 3) ^ v242 ^ (-117 * BYTE3(v242)) ^ 0x5C;
  v243 = v232;
  LODWORD(v242) = -333269657 * ((*(_DWORD *)(v241 + v240) ^ *(_DWORD *)(v9 + 6352)) & 0x7FFFFFFF);
  v244 = -333269657 * (v242 ^ WORD1(v242));
  v225[4039] = *(_BYTE *)(v210
                        + 2110
                        + ((((*(_BYTE *)(v232 + (v208 ^ 0x4BLL)) - 6) ^ 0x11) + 73) ^ 0xCLL)) ^ *(_BYTE *)(v229 + (v244 >> 24)) ^ (((*(_BYTE *)(v232 + (v208 ^ 0x4BLL)) - 6) ^ 0x11) + 73) ^ *(_BYTE *)(v230 + (v244 >> 24)) ^ *(_BYTE *)((v244 >> 24) + v231 + 3) ^ v244 ^ (-117 * BYTE3(v244)) ^ 0x53;
  v245 = *(_QWORD *)(v9 + 9552);
  LODWORD(v244) = -333269657 * ((*(_DWORD *)(v241 + v240) ^ *(_DWORD *)(v9 + 6408)) & 0x7FFFFFFF);
  v246 = -333269657 * (v244 ^ WORD1(v244));
  v225[4037] = *(_BYTE *)(v210
                        + 2110
                        + ((((*(_BYTE *)(v243
                                                        + (((BYTE2(v245) >> 4) | (16 * BYTE2(v245))) ^ 0x4BLL))
                                             - 6) ^ 0x11)
                                           + 73) ^ 0xCLL)) ^ *(_BYTE *)(v229 + (v246 >> 24)) ^ (((*(_BYTE *)(v243 + (((BYTE2(v245) >> 4) | (16 * BYTE2(v245))) ^ 0x4BLL))
                                                                                                - 6) ^ 0x11)
                                                                                              + 73) ^ *(_BYTE *)(v230 + (v246 >> 24)) ^ *(_BYTE *)((v246 >> 24) + v231 + 3) ^ v246 ^ (-117 * BYTE3(v246)) ^ 0x79;
  v247 = (int)(*v213 & 0xEE62092C);
  v248 = *v215;
  LODWORD(v208) = -333269657 * ((*(_DWORD *)(*v215 + v247) ^ *(_DWORD *)(v9 + 6384)) & 0x7FFFFFFF);
  v249 = -333269657 * (v208 ^ WORD1(v208));
  v225[4038] = *(_BYTE *)(v238 + (BYTE1(v245) ^ 0xCDLL)) ^ *(_BYTE *)(v229 + (v249 >> 24)) ^ *(_BYTE *)(v230 + (v249 >> 24)) ^ *(_BYTE *)((v249 >> 24) + v231 + 3) ^ v249 ^ (-117 * BYTE3(v249)) ^ 0x1D;
  LODWORD(v249) = -333269657 * ((*(_DWORD *)(v248 + v247) ^ *(_DWORD *)(v9 + 6448)) & 0x7FFFFFFF);
  v250 = -333269657 * (v249 ^ WORD1(v249));
  LODWORD(v243) = *(_DWORD *)(v9 + 9544);
  v225[4035] = *(_BYTE *)(v238 + (v243 ^ 0x83)) ^ *(_BYTE *)(v229 + (v250 >> 24)) ^ *(_BYTE *)(v230 + (v250 >> 24)) ^ *(_BYTE *)((v250 >> 24) + v231 + 3) ^ v250 ^ (-117 * BYTE3(v250)) ^ 0x59;
  LODWORD(v247) = -333269657 * ((*(_DWORD *)(v248 + v247) ^ *(_DWORD *)(v9 + 6432)) & 0x7FFFFFFF);
  v251 = -333269657 * (v247 ^ WORD1(v247));
  v225[4030] = BYTE1(v200) ^ *(_BYTE *)(v229 + (v251 >> 24)) ^ *(_BYTE *)(v230 + (v251 >> 24)) ^ *(_BYTE *)((v251 >> 24) + v231 + 3) ^ v251 ^ (-117 * BYTE3(v251)) ^ 0x4A ^ *(_BYTE *)(v226 + (BYTE1(v200) ^ 0x11));
  LOBYTE(v251) = *(_BYTE *)(v236
                          + ((((v209 ^ 0x77) >> 4) | (16 * (v209 ^ 0x77))) ^ 0x39));
  LOBYTE(v251) = (BYTE1(v200) & 0x49 ^ 9)
               + (BYTE1(v200) & 0x49 ^ 0x40)
               + (v251 ^ ((v251 ^ 0xA0) >> 3) ^ ((v251 ^ 0xA0) >> 2) ^ 6);
  v252 = (int)(*v213 & 0xEE62092C);
  v253 = *v215;
  v254 = -333269657 * ((*(_DWORD *)(*v215 + v252) ^ *(_DWORD *)(v9 + 6440)) & 0x7FFFFFFF);
  v255 = -333269657 * (v254 ^ HIWORD(v254));
  v225[4027] = *(_BYTE *)(v226 + (v251 ^ 0xCLL)) ^ *(_BYTE *)(v229 + (v255 >> 24)) ^ *(_BYTE *)(v230 + (v255 >> 24)) ^ v251 ^ *(_BYTE *)((v255 >> 24) + v231 + 3) ^ v255 ^ (-117 * BYTE3(v255)) ^ 0xF3;
  LODWORD(v255) = -333269657 * ((*(_DWORD *)(v253 + v252) ^ *(_DWORD *)(v9 + 6416)) & 0x7FFFFFFF);
  v256 = -333269657 * (v255 ^ WORD1(v255));
  v225[4034] = *(_BYTE *)(v238 + (*(_QWORD *)(v9 + 9560) ^ 0xE6)) ^ *(_BYTE *)(v229 + (v256 >> 24)) ^ *(_BYTE *)(v230 + (v256 >> 24)) ^ *(_BYTE *)((v256 >> 24) + v231 + 3) ^ v256 ^ (-117 * BYTE3(v256)) ^ 0x93;
  LODWORD(v252) = -333269657 * ((*(_DWORD *)(v253 + v252) ^ *(_DWORD *)(v9 + 6400)) & 0x7FFFFFFF);
  v257 = -333269657 * (v252 ^ WORD1(v252));
  v225[4036] = *(_BYTE *)(v238 + ((v245 >> 24) ^ 0xCD)) ^ *(_BYTE *)(v229 + (v257 >> 24)) ^ *(_BYTE *)(v230 + (v257 >> 24)) ^ *(_BYTE *)((v257 >> 24) + v231 + 3) ^ v257 ^ (-117 * BYTE3(v257)) ^ 0x15;
  LODWORD(v237) = *(_DWORD *)(v9 + 6468);
  LODWORD(v257) = (((_DWORD)v237 << 8) ^ 0xFF6D1600)
                + v17
                - (*(_DWORD *)(v9 + 9664) & (2 * (((_DWORD)v237 << 8) ^ 0xFF6D1600)));
  LODWORD(v256) = -333269657 * ((*(_DWORD *)(*v215 + (int)(*v213 & 0xEE62092C)) ^ *(_DWORD *)(v9 + 6456)) & 0x7FFFFFFF);
  v258 = -333269657 * (v256 ^ WORD1(v256));
  LODWORD(v240) = (((_DWORD)v237 << 24) ^ 0x16000000)
                + *(_DWORD *)(v9 + 9696)
                + ~((2 * (((_DWORD)v237 << 24) ^ 0x16000000)) & 0x8C000000);
  v225[4032] = *(_BYTE *)(v238 + (BYTE3(v243) ^ 0x34)) ^ *(_BYTE *)(v229 + (v258 >> 24)) ^ *(_BYTE *)(v230 + (v258 >> 24)) ^ *(_BYTE *)((v258 >> 24) + v231 + 3) ^ v258 ^ (-117 * BYTE3(v258)) ^ 0x48;
  HIDWORD(v259) = v237 ^ 0x6D16;
  LODWORD(v259) = v237 ^ 0x78FF0000;
  LODWORD(v253) = (v237 ^ 0x870092E9) + (*(_DWORD *)(v9 + 9656) ^ *(_DWORD *)(v9 + 9608)) + 1;
  LODWORD(v251) = v237 ^ (v237 >> 8) ^ v240 ^ ((v259 >> 16) + v17 - ((2 * (v259 >> 16)) & 0x8D93D136)) ^ (*(unsigned __int8 *)(*(_QWORD *)(v9 + 9584) + (((v237 >> 19) & 0xE0 | (v237 >> 27)) ^ 0x93)) ^ 0x7D | v257 ^ v17);
  LODWORD(v257) = ((v253 + v17 - ((2 * v253) & 0x8D93D136)) ^ v17) + (v237 ^ 0x78FF6D16);
  LODWORD(v253) = *(_DWORD *)(v9 + 9416) ^ v251;
  LODWORD(v257) = v251 ^ (v257 + v17 - ((2 * v257) & 0x8D93D136));
  LODWORD(v251) = v253 ^ *(_DWORD *)(v9 + 9568);
  LODWORD(v253) = v253 ^ 0xBE4E7AE0;
  LODWORD(v221) = v253 ^ *(_DWORD *)(v9 + 9616);
  LODWORD(v240) = v253 ^ *(_DWORD *)(v9 + 9600);
  LODWORD(v253) = *(unsigned __int8 *)(*(_QWORD *)(v9 + 9592) + (((v251 ^ 0x69) - 66) ^ 0x9DLL));
  LODWORD(v253) = ((v253 >> 1) | ((_DWORD)v253 << 7)) ^ (32
                                                                     * ((v253 >> 1) | ((_DWORD)v253 << 7))) ^ (16 * ((v253 >> 1) | ((_DWORD)v253 << 7))) ^ 0x41;
  LOBYTE(v201) = (v253 >> 2) | ((_BYTE)v253 << 6);
  HIDWORD(v259) = v257 ^ 6;
  LODWORD(v259) = (v257 ^ 8) << 24;
  v260 = v257 ^ 0x2BB0A80E;
  v261 = *(_QWORD *)(v9 + 9624);
  v262 = *(unsigned __int8 *)(v261 + ((v259 >> 27) ^ 0xBDLL));
  v263 = (int)(*v213 & 0xEE62092C);
  v264 = *v215;
  LOBYTE(v262) = v262 ^ *(_BYTE *)(v226 + (v262 ^ 0x70)) ^ 0xBF;
  LODWORD(v236) = -333269657 * ((*(_DWORD *)(*v215 + v263) ^ ((_DWORD)v225 - 781111698)) & 0x7FFFFFFF);
  v265 = -333269657 * (v236 ^ WORD1(v236));
  v266 = *(_QWORD *)(v9 + 9576);
  v225[4051] = (((*(_BYTE *)(v266 + (((v262 >> 4) | (16 * v262)) ^ 0x4BLL)) - 6) ^ 0x11)
              + 73) ^ *(_BYTE *)(v229 + (v265 >> 24)) ^ *(_BYTE *)(v230 + (v265 >> 24)) ^ *(_BYTE *)((v265 >> 24) + v231 + 3) ^ v265 ^ (-117 * BYTE3(v265)) ^ 0x2A;
  LODWORD(v262) = *(unsigned __int8 *)(v226 + ((BYTE1(v260) - ((2 * BYTE1(v260)) & 0x40) - 96) ^ 0x43));
  LOBYTE(v253) = 57
               * (*(_BYTE *)(v261
                           + ((((BYTE1(v260) - ((2 * BYTE1(v260)) & 0x40) - 96) ^ 0x2C ^ (v262 - ((2 * v262) & 0x40) - 96)) >> 3) | (32 * ((BYTE1(v260) - ((2 * BYTE1(v260)) & 0x40) - 96) ^ 0x2C ^ (v262 - ((2 * v262) & 0x40) - 96))))
                           - 2
                           * (((((BYTE1(v260) - ((2 * BYTE1(v260)) & 0x40) - 96) ^ 0x2C ^ (v262 - ((2 * v262) & 0x40) - 96)) >> 3) | (32 * (((v260 >> 8) - ((2 * (v260 >> 8)) & 0x40) - 96) ^ 0x2C ^ ((_DWORD)v262 - ((2 * (_DWORD)v262) & 0x40) - 96)))) & 0xBD)
                           + 189) ^ 0xAA);
  v267 = *(_QWORD *)(v9 + 9680);
  LODWORD(v258) = -333269657 * ((*(_DWORD *)(v264 + v263) ^ ((_DWORD)v225 - 781111699)) & 0x7FFFFFFF);
  v268 = -333269657 * (v258 ^ WORD1(v258));
  v225[4050] = ((*(_BYTE *)(v267 + (v253 ^ 0x1DLL)) ^ v253 ^ 0x7C) + 86) ^ *(_BYTE *)(v229 + (v268 >> 24)) ^ *(_BYTE *)(v230 + (v268 >> 24)) ^ *(_BYTE *)((v268 >> 24) + v231 + 3) ^ v268 ^ (-117 * BYTE3(v268));
  v269 = (int)(*v213 & 0xEE62092C);
  v270 = *v215;
  LODWORD(v265) = -333269657 * ((*(_DWORD *)(*v215 + v269) ^ ((_DWORD)v225 - 781111703)) & 0x7FFFFFFF);
  v271 = -333269657 * (v265 ^ WORD1(v265));
  v225[4046] = BYTE1(v221) ^ 0x4A ^ *(_BYTE *)(v229 + (v271 >> 24)) ^ *(_BYTE *)(v230 + (v271 >> 24)) ^ *(_BYTE *)((v271 >> 24) + v231 + 3) ^ v271 ^ (-117 * BYTE3(v271)) ^ 0xA6 ^ *(_BYTE *)(v226 + (BYTE1(v221) ^ 0x59));
  LODWORD(v264) = -333269657 * ((*(_DWORD *)(v270 + v269) ^ ((_DWORD)v225 - 781111701)) & 0x7FFFFFFF);
  v272 = -333269657 * (v264 ^ WORD1(v264));
  v273 = *(_QWORD *)(v9 + 9648);
  v274 = *(_QWORD *)(v9 + 9704);
  v275 = *(_QWORD *)(v9 + 9672);
  v225[4048] = BYTE3(v260) ^ *(_BYTE *)(v273 + (v272 >> 24)) ^ *(_BYTE *)(v274 + (v272 >> 24)) ^ *(_BYTE *)((v272 >> 24) + v275 + 2) ^ v272 ^ (5 * BYTE3(v272)) ^ *(_BYTE *)(v226 + ((v260 >> 24) ^ 0xE3)) ^ 0xC1;
  LODWORD(v270) = *(_DWORD *)(v270 + v269) ^ ((_DWORD)v225 - 781111702);
  v276 = v221 ^ 0xF96EBA25;
  v277 = -333269657 * ((-333269657 * (v270 & 0x7FFFFFFF)) ^ ((-333269657 * (v270 & 0x7FFFFFFF)) >> 16));
  v225[4047] = v221 ^ *(_BYTE *)(v226 + (v221 ^ 0xC6)) ^ *(_BYTE *)(v273 + (v277 >> 24)) ^ *(_BYTE *)(v274 + (v277 >> 24)) ^ *(_BYTE *)((v277 >> 24) + v275 + 2) ^ v277 ^ (5 * ((unint64_t)(-333269657 * ((-333269657 * (v270 & 0x7FFFFFFF)) ^ ((-333269657 * (v270 & 0x7FFFFFFF)) >> 16))) >> 24)) ^ ((BYTE2(v251) & 0x1F ^ 0x1F) + (BYTE2(v251) & 0x1F)) ^ 0xFD;
  v278 = (int)(*v213 & 0xEE62092C);
  v279 = *v215;
  LODWORD(v270) = -333269657 * ((*(_DWORD *)(*v215 + v278) ^ ((_DWORD)v225 - 781111694)) & 0x7FFFFFFF);
  v280 = -333269657 * (v270 ^ WORD1(v270));
  v225[4055] = *(_BYTE *)(v238 + (v201 ^ 0xC0)) ^ *(_BYTE *)(v273 + (v280 >> 24)) ^ *(_BYTE *)(v274 + (v280 >> 24)) ^ *(_BYTE *)((v280 >> 24) + v275 + 2) ^ v280 ^ (5 * BYTE3(v280)) ^ 0xE4;
  LODWORD(v280) = -333269657 * ((*(_DWORD *)(v279 + v278) ^ ((_DWORD)v225 - 781111696)) & 0x7FFFFFFF);
  v281 = -333269657 * (v280 ^ WORD1(v280));
  v225[4053] = BYTE2(v251) ^ *(_BYTE *)(v273 + (v281 >> 24)) ^ *(_BYTE *)(v274 + (v281 >> 24)) ^ *(_BYTE *)((v281 >> 24) + v275 + 2) ^ v281 ^ (5 * BYTE3(v281)) ^ 0xB7 ^ *(_BYTE *)(v226 + (BYTE2(v251) ^ 0xDCLL));
  LOBYTE(v201) = *(_BYTE *)(v238 + ((v276 >> 24) ^ 0xCD)) ^ 0x7A;
  LOBYTE(v201) = *(_BYTE *)(*(_QWORD *)(v9 + 9640)
                          + (((v201 >> 4) | (16 * v201)) ^ 0x39));
  LODWORD(v278) = -333269657 * ((*(_DWORD *)(v279 + v278) ^ ((_DWORD)v225 - 781111705)) & 0x7FFFFFFF);
  v282 = -333269657 * (v278 ^ WORD1(v278));
  v225[4044] = *(_BYTE *)(v274 + (v282 >> 24)) ^ *(_BYTE *)(v273 + (v282 >> 24)) ^ *(_BYTE *)((v282 >> 24) + v275 + 2) ^ v282 ^ (5 * BYTE3(v282)) ^ ((v201 ^ ((v201 ^ 0xA0) >> 3) ^ ((v201 ^ 0xA0) >> 2) ^ 6) + 73);
  v283 = *v215;
  v284 = (int)(*v213 & 0xEE62092C);
  LODWORD(v281) = -333269657 * ((*(_DWORD *)(*v215 + v284) ^ ((_DWORD)v225 - 781111708)) & 0x7FFFFFFF);
  v285 = -333269657 * (v281 ^ WORD1(v281));
  v225[4041] = ((v240 ^ 0xDA6ED908) >> 16) ^ *(_BYTE *)(v273 + (v285 >> 24)) ^ *(_BYTE *)(v274 + (v285 >> 24)) ^ *(_BYTE *)((v285 >> 24) + v275 + 2) ^ v285 ^ (5 * BYTE3(v285)) ^ 0xB9 ^ *(_BYTE *)(v226 + (((v240 ^ 0xDA6ED908) >> 16) ^ 0xE3));
  LODWORD(v279) = -333269657 * ((*(_DWORD *)(v283 + v284) ^ ((_DWORD)v225 - 781111707)) & 0x7FFFFFFF);
  v286 = -333269657 * (v279 ^ WORD1(v279));
  v225[4042] = *(_BYTE *)(v238 + (((unsigned __int16)(v240 ^ 0xD908) >> 8) ^ 0xCDLL)) ^ *(_BYTE *)(v273 + (v286 >> 24)) ^ *(_BYTE *)(v274 + (v286 >> 24)) ^ *(_BYTE *)((v286 >> 24) + v275 + 2) ^ v286 ^ (5 * BYTE3(v286)) ^ 0xBA;
  LODWORD(v283) = -333269657 * ((*(_DWORD *)(v283 + v284) ^ ((_DWORD)v225 - 781111700)) & 0x7FFFFFFF);
  v287 = -333269657 * (v283 ^ WORD1(v283));
  v225[4049] = *(_BYTE *)(v238 + (BYTE2(v260) ^ 0xCDLL)) ^ *(_BYTE *)(v273 + (v287 >> 24)) ^ *(_BYTE *)(v274 + (v287 >> 24)) ^ *(_BYTE *)((v287 >> 24) + v275 + 2) ^ v287 ^ (5 * BYTE3(v287)) ^ 0x95;
  v288 = *v215;
  v289 = (int)(*v213 & 0xEE62092C);
  LODWORD(v287) = -333269657 * ((*(_DWORD *)(*v215 + v289) ^ ((_DWORD)v225 - 781111697)) & 0x7FFFFFFF);
  v290 = -333269657 * (v287 ^ WORD1(v287));
  LODWORD(v287) = v251 >> 8;
  v225[4052] = *(_BYTE *)(v238 + (BYTE3(v251) ^ 0x52)) ^ *(_BYTE *)(v273 + (v290 >> 24)) ^ *(_BYTE *)(v274 + (v290 >> 24)) ^ *(_BYTE *)((v290 >> 24) + v275 + 2) ^ v290 ^ (5 * BYTE3(v290)) ^ 0x28;
  LOBYTE(v290) = *(_BYTE *)(v226
                          + ((((v240 ^ 0xDA6ED908) >> 24)
                                             - ((2 * ((v240 ^ 0xDA6ED908) >> 24)) & 0x58)
                                             + 44) ^ 0xCFLL));
  LODWORD(v262) = -333269657 * ((*(_DWORD *)(v288 + v289) ^ *(_QWORD *)(v9 + 6472)) & 0x7FFFFFFF);
  v291 = -333269657 * (v262 ^ WORD1(v262));
  v225[4040] = *(_BYTE *)(v273 + (v291 >> 24)) ^ *(_BYTE *)(v274 + (v291 >> 24)) ^ *(_BYTE *)((v291 >> 24) + v275 + 2) ^ v291 ^ (5 * BYTE3(v291)) ^ 0x85 ^ ((*(_BYTE *)(*(_QWORD *)(v9 + 9440) + ((57 * ((((v240 ^ 0xDA6ED908) >> 24) - ((2 * ((v240 ^ 0xDA6ED908) >> 24)) & 0x58) + 44) ^ 0x2C ^ (v290 - ((2 * v290) & 0x58) + 44))) ^ 0xD6)) ^ 0xE) + 86);
  LOBYTE(v291) = *(_BYTE *)(v226 + (BYTE1(v251) ^ 0xEFLL));
  LODWORD(v251) = -333269657 * ((*(_DWORD *)(v288 + v289) ^ ((_DWORD)v225 - 781111695)) & 0x7FFFFFFF);
  v292 = -333269657 * (v251 ^ WORD1(v251));
  LODWORD(v268) = *(_DWORD *)(v9 + 7912);
  v293 = (char *)*(&off_1004ECA20 + (int)(v268 & 0xCD1F24B2)) - 8;
  v294 = (char *)*(&off_1004ECA20 + (int)(v268 ^ 0xDED)) - 4;
  v295 = (char *)*(&off_1004ECA20 + (int)v268 - 3293) - 4;
  v225[4054] = v287 ^ v293[v292 >> 24] ^ v294[v292 >> 24] ^ v295[v292 >> 24] ^ v292 ^ (-7 * BYTE3(v292)) ^ 0x42 ^ v291;
  v296 = *v215;
  v297 = (int)(*v213 & 0xEE62092C);
  LODWORD(v274) = -333269657 * ((*(_DWORD *)(*v215 + v297) ^ ((_DWORD)v225 - 781111706)) & 0x7FFFFFFF);
  v298 = -333269657 * (v274 ^ WORD1(v274));
  v225[4043] = v240 ^ v293[v298 >> 24] ^ v294[v298 >> 24] ^ v295[v298 >> 24] ^ v298 ^ (-7 * BYTE3(v298)) ^ 0x2F ^ *(_BYTE *)(v226 + (v240 ^ 0xEBLL));
  LOBYTE(v276) = 57 * (*(_BYTE *)(v238 + (BYTE2(v276) ^ 0xCDLL)) ^ 0xD);
  LOBYTE(v276) = ((*(_BYTE *)(v267 + (v276 ^ 0x1DLL)) ^ v276 ^ 0x7C) + 86) ^ 0x3B;
  LODWORD(v231) = -333269657 * ((*(_DWORD *)(v296 + v297) ^ ((_DWORD)v225 - 781111704)) & 0x7FFFFFFF);
  v299 = -333269657 * (v231 ^ WORD1(v231));
  v225[4045] = (((*(_BYTE *)(v266 + (((v276 >> 4) | (16 * v276)) ^ 0x4BLL)) - 6) ^ 0x11)
              + 73) ^ v293[v299 >> 24] ^ v294[v299 >> 24] ^ v295[v299 >> 24] ^ v299 ^ (-7 * BYTE3(v299));
  LODWORD(v225) = *(_DWORD *)(v9 + 9688);
  v300 = *(_QWORD *)(v9 + 9744);
  v301 = *(_BYTE **)(v9 + 2480);
  LODWORD(v298) = -333269657
                * ((*(_DWORD *)(*v215 + (*v213 & 0xFFFFFFFFEE62092CLL)) ^ ((_DWORD)v301 - 781115749)) & 0x7FFFFFFF);
  v302 = -333269657 * (v298 ^ WORD1(v298));
  **(_BYTE **)(v9 + 9232) ^= *v301 ^ v293[v302 >> 24] ^ v294[v302 >> 24] ^ v295[v302 >> 24] ^ v302 ^ (-7 * BYTE3(v302));
  return ((uint64_t (*)(void))(*(_QWORD *)(v300 + 8 * (int)(v225 ^ 0xD)) - 8))();
}

uint64_t sub_10038E0F8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  _QWORD *v10;
  int *v11;
  unsigned int v12;
  unint64_t v13;

  v12 = ((*(_DWORD *)(*v10 + (*v11 & v9)) ^ (v3 + v7 - 781115733)) & 0x7FFFFFFF) * v8;
  v13 = (v12 ^ HIWORD(v12)) * v8;
  *(_BYTE *)(v6 + v3) ^= *(_BYTE *)(v3 + v7 + 16) ^ *(_BYTE *)(a2 + (v13 >> 24)) ^ *(_BYTE *)(v2 + (v13 >> 24)) ^ *(_BYTE *)(v4 + (v13 >> 24)) ^ v13 ^ (-7 * BYTE3(v13));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((6097 * (v3 == 15)) ^ v5)) - 8))();
}

uint64_t sub_10038E188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  _BYTE *v8;
  int v9;
  int v10;
  _QWORD *v11;
  _DWORD *v12;
  unsigned int v13;
  unint64_t v14;

  v13 = ((*(_DWORD *)(*v11 + (int)(*v12 & 0xB0953900)) ^ (*(_QWORD *)(v7 + 8248) + 40988)) & 0x7FFFFFFF) * v9;
  v14 = ((v13 >> ((v6 + 60) ^ 0x9E)) ^ v13) * v9;
  **(_BYTE **)(v7 + 12312) = *(_BYTE *)(*(_QWORD *)(v7 + 9720) + (v14 >> 24)) ^ *v8 ^ *(_BYTE *)(*(_QWORD *)(v7 + 9736)
                                                                                               + (v14 >> 24)) ^ *(_BYTE *)((v14 >> 24) + *(_QWORD *)(v7 + 9728) + 4) ^ v14 ^ (-25 * BYTE3(v14));
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * (v6 - v10 + 2059599693)) - 8))();
}

void sub_10038E25C()
{
  JUMPOUT(0x10038E1B0);
}

uint64_t sub_10038E264@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  int v13;

  v5 = *(_QWORD **)(v3 + 12376);
  v6 = v5 + 4748;
  v7 = v5 + 2399;
  v5[4748] = *(_QWORD *)(v3 + 5944);
  v5[4749] = *(_QWORD *)(v3 + 3208);
  v5[4750] = *(_QWORD *)(v3 + 5936);
  v5[4751] = *(_QWORD *)(v3 + 8048);
  v5[4752] = v4;
  v8 = *(_QWORD *)(v3 + 12352);
  v9 = *(_QWORD *)(v3 + 12328);
  v6[5] = v8;
  v6[6] = v9;
  v6[7] = a2;
  *v7 = 2098462083;
  v7[1] = 2098462611;
  v7[2] = 2098462611;
  v7[3] = 2098462611;
  v7[4] = 2098462611;
  v7[5] = 2098462707;
  v10 = *(_DWORD *)(v3 + 3220);
  v7[6] = v10;
  v7[7] = 2098462627;
  if (v8)
    v11 = v10 == 2098462643;
  else
    v11 = 1;
  v13 = !v11 && v9 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1756 * v13) ^ v2)) - 8))();
}

uint64_t sub_10038E30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 *a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  unsigned __int8 *v39;
  unsigned int v40;
  int v41;
  char v42;
  uint64_t v43;
  int v44;
  int v45;
  char v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  char v54;
  int v55;
  char v56;
  unsigned int v57;
  int v58;
  unsigned __int8 v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  char v65;
  int v66;
  int v67;
  char v68;
  int v69;
  int v70;
  char v71;
  unsigned int v72;
  int v73;
  int v74;
  char v75;
  char v76;
  int v77;
  char v78;
  int v79;
  char v80;
  int v81;
  char v82;
  char v83;
  int v84;
  char v85;
  int v86;
  char v87;
  int v88;
  int v89;
  char v90;
  int v91;
  int v92;
  int v93;
  unsigned __int8 v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  int v105;
  int v106;
  char v107;
  int v108;
  int v109;
  uint64_t v110;
  char v111;
  char v112;
  int v113;
  int v114;
  int v115;
  unint64_t v116;
  int v117;
  int v118;
  char v119;
  int v120;
  uint64_t v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  char v126;
  int v127;
  char v128;
  int v129;
  char v130;
  int v131;
  char v132;
  int v133;
  int v134;
  char v135;
  int v136;
  int v137;
  char v138;
  int v139;
  int v140;
  int v141;
  int v142;
  char v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  int v150;
  int v151;
  char v152;
  int v153;
  int v154;
  unint64_t v155;
  char v156;
  int v157;
  char v158;
  char v159;
  char v160;
  int v161;
  int v162;
  int v163;
  char v164;
  int v165;
  unsigned __int8 v166;
  int v167;
  char v168;
  char v169;
  int v170;
  int v171;
  char v172;
  int v173;
  unsigned int v174;
  char v175;
  int v176;
  int v177;
  char v178;
  char v179;
  char v180;
  char v181;
  int v182;
  unsigned int v183;
  unsigned __int8 v184;
  char v185;
  char v186;
  unsigned int v187;
  int v188;
  char v189;
  char v190;
  char v191;
  char v192;
  int v193;
  char v194;
  unsigned int v195;
  int v196;
  char v197;
  char v198;
  char v199;
  int v200;
  unsigned __int8 v201;
  char v202;
  char v203;
  int v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  BOOL v210;
  int v211;
  int v212;

  *(_QWORD *)(v11 + 9728) = v10;
  *(_QWORD *)(v11 + 9704) = 0;
  v13 = **(unsigned __int8 ***)(v11 + 9352);
  v14 = **(unsigned __int8 ***)(v11 + 9336);
  v15 = 8 * (v9 ^ 0x2D9);
  *(_DWORD *)(v11 + 9696) = v15;
  v16 = (v15 - 140258554) & 0x85C38BF;
  *(_DWORD *)(v11 + 9688) = v16;
  v17 = *((_DWORD *)v13 + 2);
  *(_DWORD *)(v11 + 9432) = v17;
  v18 = *(_DWORD *)(a7 + 40);
  v19 = **(_BYTE **)(v11 + 8216);
  v20 = *(unsigned __int8 *)(a7 + 90);
  *(_DWORD *)(v11 + 9480) = v20;
  v21 = *(unsigned __int8 *)(a7 + 51);
  v22 = v13[12];
  v23 = *(_QWORD *)(v12 + 8 * (v15 - 2873));
  v24 = v23 + 5;
  v25 = *(unsigned __int8 *)(v23 + 5 + (((v19 ^ 0xB0) * (((v15 - 118) | 0xC) + 61)) ^ 0xBDLL))
      * (v16 + 119);
  *(_DWORD *)(v11 + 9488) = v25;
  v26 = v23 + 789;
  v27 = *(unsigned __int8 *)(v23 + 789 + (((v20 >> 1) | ((_BYTE)v20 << 7)) ^ 0x2BLL));
  LODWORD(v21) = *(unsigned __int8 *)(v23 + 520 + (v21 ^ 0x90));
  v28 = v14[37];
  v29 = (v21 >> 3) | (32 * v21);
  v30 = (v28 ^ 0x77) + v28 - 2 * (v28 ^ 0x77);
  v31 = *(unsigned __int8 *)(v23 + 520 + (((v28 ^ v30 ^ 0xFFFFFFFE) + 2 * ((v30 ^ 0xFE) & v28)) ^ 0xE7));
  v32 = *(unsigned __int8 *)(v23 + 520 + (*(unsigned __int8 *)(a7 + 59) ^ 0x90));
  *(_QWORD *)(v11 + 9120) = v23 + 520;
  v33 = v27 ^ ((v20 >> 1) | (v20 << 7));
  *(_DWORD *)(v11 + 9520) = v33;
  *(_DWORD *)(v11 + 9512) = v32;
  *(_DWORD *)(v11 + 9616) = *a8 ^ 0xB0;
  *(_DWORD *)(v11 + 9416) = (v31 >> 4) | (16 * v31);
  HIDWORD(v34) = (v32 >> 3) | (32 * v32);
  LODWORD(v34) = ((BYTE4(v34) & 0x40 | 0xA8) ^ HIDWORD(v34) & 0xFFFFFFBF) << 24;
  *(_DWORD *)(v11 + 9736) = v34 >> 25;
  *(_DWORD *)(v11 + 9720) = v22;
  if (v18 == v17)
    v35 = 189;
  else
    v35 = 174;
  *(_QWORD *)(v11 + 9376) = v35;
  v36 = 5
      * *(unsigned __int8 *)(v24
                           + ((((-101 * (v22 ^ 0xC2)) ^ -(-101 * (v22 ^ 0xC2)) ^ (117 - ((-101 * (v22 ^ 0xC2)) ^ 0x75u)))
                             + 117) ^ 0xC8));
  v37 = (v36 ^ 0x27) - 39;
  v38 = v36 & 2;
  if ((v37 & v36 & 2) != 0)
    v38 = -v38;
  v39 = **(unsigned __int8 ***)(v11 + 8144);
  v40 = v36 & 0xFFFFFFFD ^ -v36 ^ (v38 + v37);
  v41 = v39[8];
  *(_DWORD *)(v11 + 9656) = v41;
  v42 = (v33 ^ 0x5F) + (v41 ^ 0x7C);
  v43 = v13[21];
  *(_QWORD *)(v11 + 9648) = v43;
  v44 = (*(unsigned __int8 *)(v23 + 520 + (v43 ^ 0xD3)) >> 4) | (16 * *(unsigned __int8 *)(v23 + 520 + (v43 ^ 0xD3)));
  v45 = *(unsigned __int8 *)(a7 + 54);
  *(_DWORD *)(v11 + 9664) = v45;
  v46 = (v25 ^ 0x29) + (v44 ^ 0x54);
  v47 = v14[25];
  *(_DWORD *)(v11 + 9640) = v47;
  *(_DWORD *)(v11 + 9408) = v40 - 40 + (v47 ^ 0xFFFFFF81) - 2 * (v40 - 40);
  v48 = v13[1];
  v49 = v48 >> 3;
  *(_DWORD *)(v11 + 9680) = v48;
  v50 = ((v48 >> 3) & 0x18 | (32 * v48) | (v48 >> 3) & 7) ^ 0x46;
  v51 = (v50 >> 3) | (32 * v50);
  LODWORD(v43) = (((v45 ^ 0x71u) >> 1) | ((v45 ^ 0x71) << 7)) ^ 0xFFFFFFB5 ^ *(unsigned __int8 *)(v26
                                                                                                + ((((v45 ^ 0x71u) >> 1) | ((v45 ^ 0x71) << 7)) ^ 0x2BLL));
  v52 = **(unsigned __int8 **)(v11 + 8224);
  v53 = *(unsigned __int8 *)(a7 + 10);
  *(_DWORD *)(v11 + 9672) = v52;
  *(_DWORD *)(v11 + 9624) = v53;
  v54 = v53 + (v52 ^ 0x38) - 2 * (v53 & (v52 ^ 0x38));
  v55 = v39[5];
  *(_DWORD *)(v11 + 9608) = v55;
  v56 = (v55 ^ 7) - v43 + 2 * (v43 & 7);
  v57 = (((v51 ^ 0xC4) >> 5) | (8 * (v51 ^ 0xFFFFFFC4))) & 0xFFFFFFE7 ^ (((v51 << 6) & 0xF0 | 8u) >> 3) ^ (((v51 << 6) | 0xA) << (v49 & 5) << (v49 & 5 ^ 5)) ^ 0x6E;
  v58 = *(unsigned __int8 *)(a7 + 85);
  *(_DWORD *)(v11 + 9592) = v58;
  LOBYTE(v57) = (v58 ^ 0x89) + (((v57 >> 5) | (8 * v57)) ^ 0x8C);
  v59 = ((54 * v57) & 0x36) + ((-101 * v57) ^ 0x9B);
  v60 = *v39;
  LODWORD(v43) = v39[2];
  *(_DWORD *)(v11 + 9584) = v60;
  *(_DWORD *)(v11 + 9576) = v43;
  v61 = v23 + 264;
  v62 = *(unsigned __int8 *)(a7 + 47);
  *(_DWORD *)(v11 + 9560) = v62;
  LOBYTE(v62) = (*(_BYTE *)(v61 + (((v62 ^ 0xE4) + 127) ^ 0x84)) + 70) ^ 0x70;
  v63 = v14[24];
  *(_DWORD *)(v11 + 9568) = v63;
  v65 = (v63 ^ 0x70) + v62;
  v66 = v14[14];
  *(_DWORD *)(v11 + 9632) = v66;
  LOBYTE(v62) = v66 ^ 0x2A;
  v67 = **(unsigned __int8 **)(v11 + 8584);
  *(_DWORD *)(v11 + 9544) = v67;
  v68 = v62 + (v67 ^ 0xAD);
  v69 = *(unsigned __int8 *)(a7 + 38);
  *(_DWORD *)(v11 + 9552) = v69;
  v70 = **(unsigned __int8 **)(v11 + 7840);
  *(_DWORD *)(v11 + 9536) = v70;
  v71 = v70 ^ 0x1B ^ (v69 - ((2 * v69) & 0x60) - 80);
  v72 = (((v60 ^ v43 ^ 0x73) >> 1) | ((v60 ^ v43 ^ 0x73) << 7)) ^ 0x32 ^ *(unsigned __int8 *)(v26 + ((((v60 ^ v43 ^ 0x73) >> 1) | (((v60 ^ v43) ^ 0x73) << 7)) ^ 0x2BLL));
  v73 = *(unsigned __int8 *)(a7 + 36);
  v74 = *(unsigned __int8 *)(a7 + 11);
  *(_DWORD *)(v11 + 9600) = v73;
  *(_DWORD *)(v11 + 9496) = v74;
  LOBYTE(v73) = v74 ^ v73;
  v75 = v73 ^ 0x8D;
  v76 = v73 & 0x12;
  v77 = v39[6];
  v78 = (~(2 * v77) + v77) ^ 0x9E;
  v79 = *(unsigned __int8 *)(v24 + ((-101 * v13[13]) ^ 0xBDLL));
  if (!*(_BYTE *)(v24 + ((-101 * v13[13]) ^ 0xBDLL)))
    v78 = -98;
  *(_DWORD *)(v11 + 9504) = v77;
  v80 = v78 & v77 ^ (v77 | 0x9E);
  *(_QWORD *)(v11 + 9464) = v8;
  v81 = v39[7];
  *(_DWORD *)(v11 + 9472) = v81;
  v82 = v81 - 126;
  v83 = v54 | (v42 + 1) | v76 | v75 & 1 | v75 & 0xEC | (v81 - 126 - v80 - ((2 * v81) & 4));
  v84 = *(unsigned __int8 *)(v61 + ((v14[17] + 127) ^ 0x84)) + 70;
  *(_DWORD *)(v11 + 9240) = v84;
  v85 = v68 + 1;
  v86 = v14[11];
  *(_DWORD *)(v11 + 9440) = v86;
  v87 = v84 ^ v86 ^ 0xD0 | v85;
  v88 = *(unsigned __int8 *)(a7 + 1);
  *(_DWORD *)(v11 + 9528) = v88;
  v89 = *v14;
  *(_DWORD *)(v11 + 9448) = v89;
  v90 = v83 | v87 | v88 ^ 0xD9 ^ v89;
  v91 = ((v29 & 0xFE) >> 1) ^ 0x54;
  v92 = v91 | (v29 << 7);
  v93 = v14[5];
  *(_DWORD *)(v11 + 9424) = v93;
  *(_DWORD *)(v11 + 9456) = v92;
  v94 = v90 | v92 ^ v93 ^ 0xA4 | (v46 + 1) | v72 | (v56 + 121) | (v65 + 1) | (5
                                                                            * *(_BYTE *)(v24
                                                                                       + ((-101 * v71) ^ 0xBDLL))) ^ 0xD8 | *(_DWORD *)(v11 + 9408) | (5 * *(_BYTE *)(v24 + (v59 ^ 0xBDLL))) ^ 0xD8;
  v95 = v94 ^ -v94 ^ (119 - (v94 ^ 0x77));
  v96 = v95 + 119;
  v97 = v39[4];
  v98 = (2 * (v97 ^ 0xFFFFFFE2) - ((v97 ^ 0xFFFFFFE2) + (v97 | 0xFFFFFFE2))) << ((*(_DWORD *)(v11 + 9480) & 2) != 0) << ((*(_DWORD *)(v11 + 9480) & 2) == 0);
  v99 = (v95 + ((v95 + 119) ^ 0xFFFFFF18) + 120) ^ 0xFFFFFFFE;
  v100 = (v99 ^ v96) + 2 * (v99 & v96);
  LOBYTE(v96) = -101 * *(_BYTE *)(a7 + 7);
  LOBYTE(v92) = 5 * v79;
  *(_DWORD *)(v11 + 9160) = 5 * v79;
  v101 = v96 ^ 0xBDLL;
  v102 = (-101 * *(_BYTE *)(a7 + 17)) ^ 0xBDLL;
  v103 = *(_QWORD *)(v11 + 9120);
  v104 = (*(unsigned __int8 *)(v103 + v100) >> 4) | (16 * *(unsigned __int8 *)(v103 + v100));
  v105 = *(unsigned __int8 *)(v61 + ((v14[10] + 127) ^ 0x84)) + 70;
  *(_DWORD *)(v11 + 9156) = v105;
  v106 = v13[2];
  *(_DWORD *)(v11 + 9480) = v106;
  v107 = (v106 ^ 0x13) + (v105 ^ 0x65);
  *(_DWORD *)(v11 + 9392) = v97;
  LOBYTE(v96) = (5 * *(_BYTE *)(v24 + ((-101 * (v92 ^ 0x44)) ^ 0xBDLL))) ^ (v97 + v98 - 30);
  v108 = *(unsigned __int8 *)(a7 + 20);
  *(_DWORD *)(v11 + 9368) = v108;
  LOBYTE(v98) = v108 ^ 0x31;
  v109 = v13[3];
  *(_DWORD *)(v11 + 9328) = v109;
  LODWORD(v101) = *(unsigned __int8 *)(v24 + v101);
  LOBYTE(v96) = v104 ^ 0x54 | v98 ^ v109 | v96;
  v110 = v13[7];
  *(_QWORD *)(v11 + 9408) = v110;
  LOBYTE(v109) = *(_BYTE *)(v103 + (v110 ^ 0x1A));
  LOBYTE(v98) = 5 * v101;
  *(_DWORD *)(v11 + 9148) = 5 * v101;
  LODWORD(v101) = *v13;
  *(_DWORD *)(v11 + 9304) = v101;
  LOBYTE(v101) = v101 ^ 0x34 ^ v98;
  v111 = v101 ^ v96;
  v112 = v96 & v101;
  v113 = v13[15];
  *(_DWORD *)(v11 + 9312) = v113;
  LOBYTE(v101) = v113 ^ 0xC6 ^ ((v109 >> 4) | (16 * v109));
  v114 = v13[20];
  *(_DWORD *)(v11 + 9288) = v114;
  HIDWORD(v116) = ~v114;
  LODWORD(v116) = v114 << 24;
  v115 = v116 >> 25;
  HIDWORD(v116) = *(unsigned __int8 *)(v61 + ((v101 + 127) ^ 0x84));
  LODWORD(v116) = (HIDWORD(v116) << 24) + 1174405120;
  v117 = *(unsigned __int8 *)(a7 + 74);
  *(_DWORD *)(v11 + 9400) = v117;
  v118 = **(unsigned __int8 **)(v11 + 8592);
  *(_DWORD *)(v11 + 9280) = v118;
  v119 = (v117 ^ 0xE4) + (v118 ^ 0x7A);
  v120 = v115 ^ 0x8E;
  LODWORD(v121) = (v120 | 0xFFFFFF80) + ((v115 ^ 0x8E) & 0x80);
  v122 = ((v116 >> 25) >> 7) & 1 | (2 * (v116 >> 25));
  v123 = v120 + 128;
  if ((v115 & 0x80u) == 0)
    v121 = v121;
  else
    v121 = v123;
  v124 = v14[1];
  v125 = **(unsigned __int8 **)(v11 + 8600);
  *(_DWORD *)(v11 + 9272) = v124;
  *(_DWORD *)(v11 + 9264) = v125;
  v126 = (v124 ^ 0xE1) + (v125 ^ 0x6E);
  v127 = v13[6];
  *(_DWORD *)(v11 + 9256) = v127;
  v128 = v127 ^ v115 ^ 0xBC ^ *(_BYTE *)(v26 + (v121 ^ 0x27));
  v129 = *(unsigned __int8 *)(a7 + 92);
  *(_DWORD *)(v11 + 9384) = v129;
  v130 = *(_BYTE *)(v61 + (((v129 ^ 0x87) + 127) ^ 0x84)) + 70;
  v131 = v39[3];
  *(_DWORD *)(v11 + 9224) = v131;
  v132 = (v131 ^ 0x6A) + (v130 ^ 0x8F);
  v133 = *(unsigned __int8 *)(a7 + 64);
  *(_DWORD *)(v11 + 9232) = v133;
  v134 = v14[26];
  *(_DWORD *)(v11 + 9360) = v134;
  v135 = (v134 ^ 0xB) + (v133 ^ 0x52);
  v136 = v14[9];
  v137 = v14[35];
  *(_DWORD *)(v11 + 9320) = v136;
  *(_DWORD *)(v11 + 9200) = v137;
  v138 = v136 ^ v137 ^ 0x64;
  v210 = v91 == 0;
  v139 = v39[1];
  v140 = v139 ^ 6;
  if (v210)
    v140 = -7;
  v141 = v13[14];
  v142 = v13[4];
  *(_DWORD *)(v11 + 9192) = v141;
  *(_DWORD *)(v11 + 9176) = v142;
  v143 = (v135 + 1) | v138 | v141 ^ v142 ^ 0xE8 | (v119 + 1);
  v144 = v14[19];
  v145 = v14[4];
  *(_DWORD *)(v11 + 9296) = v144;
  *(_DWORD *)(v11 + 9172) = v145;
  v146 = (v143 | v144 ^ v145 ^ 0xB0 | (v107 + 1) | v112 | v111 | v122 ^ 0x70 | v128 | (v132 + 1)) ^ 0x90;
  v147 = (v139 ^ 0xF9) + 2 * (v139 & 0xFFFFFFF9) - 2 * (v140 & v139);
  v148 = v103;
  v149 = (*(unsigned __int8 *)(v103 + v146) >> 3) | (32 * *(unsigned __int8 *)(v103 + v146));
  v150 = v14[15];
  v151 = *(unsigned __int8 *)(a7 + 44);
  *(_DWORD *)(v11 + 9152) = v151;
  *(_DWORD *)(v11 + 9248) = v150;
  v152 = (v126 + 1) | v150 ^ v151 ^ 0x53;
  v153 = (*(unsigned __int8 *)(v148 + (v147 ^ 0xE7)) >> 4) | (16 * *(unsigned __int8 *)(v148 + (v147 ^ 0xE7)));
  if ((v149 & 0x20) != 0)
    v154 = -32;
  else
    v154 = 32;
  HIDWORD(v155) = v149;
  LODWORD(v155) = (v154 + v149) << 24;
  v156 = (v155 >> 25) ^ 0x44;
  v157 = v14[32];
  *(_DWORD *)(v11 + 9184) = v157;
  if ((v153 & 1 & v157) != 0)
    v158 = -2 * (v153 & 1);
  else
    v158 = 0;
  v159 = v152 | v156;
  v160 = ((v153 & 1) + v157 + v158) ^ v153 & 0xFE;
  v161 = *(_DWORD *)(v11 + 9416);
  v162 = v161 ^ 0x54;
  v163 = *(unsigned __int8 *)(a7 + 58);
  *(_DWORD *)(v11 + 9208) = v163;
  v164 = v163 ^ 0x76;
  v165 = v14[31];
  *(_DWORD *)(v11 + 9136) = v165;
  v166 = -101 * (v164 ^ v165);
  LOBYTE(v165) = v161 ^ 0x9B;
  v210 = *(_DWORD *)(v11 + 9512) == 0;
  v167 = *(unsigned __int8 *)(v24 + v102);
  v168 = *(_BYTE *)(v24 + *(_QWORD *)(v11 + 9376));
  v169 = *(_BYTE *)(v24 + (v166 ^ 0x8D29851A) - 1926658790 - ((2 * (v166 ^ 0x8D29851A)) & 0x1A530B4E) + 141);
  v170 = *(unsigned __int8 *)(a7 + 19);
  v171 = v14[30];
  *(_DWORD *)(v11 + 9416) = v170;
  *(_DWORD *)(v11 + 9128) = v171;
  v172 = v170 & 0x7F ^ 0x93 ^ (v171 + (v170 & 0x80));
  v173 = v14[23];
  *(_DWORD *)(v11 + 9376) = v173;
  v174 = ((v173 ^ 0x53u) >> 1) | ((v173 ^ 0x53) << 7);
  v175 = *(_BYTE *)(a7 + 60);
  *(_DWORD *)(v11 + 9512) = v162;
  v176 = 5 * v167;
  v177 = *(unsigned __int8 *)(a7 + 80);
  *(_DWORD *)(v11 + 9116) = v177;
  v160 ^= 4u;
  v178 = (5 * v167) ^ v177 ^ 0xA3 | v172 | (5 * v169) ^ 0xD8 | (v175
                                                              - v162
                                                              - ((v165 + v162 + 1) ^ 0xE0)
                                                              + ((v175 + (v175 ^ 0x7E) + 1) ^ 0xFE)) | v160;
  v179 = v160 ^ v159;
  if (v210)
    v179 = v159;
  v210 = v159 == 0;
  v180 = v178 | v159;
  if (v210)
    v179 = 0;
  v181 = v180 | v179;
  v182 = *(unsigned __int8 *)(v26 + (v174 ^ 0x2BLL));
  v183 = (*(_DWORD *)(v11 + 9432) ^ v182 ^ 0xFFFFFF87)
       - *(_DWORD *)(v11 + 9432)
       + 2 * ((v182 ^ 7) & *(_DWORD *)(v11 + 9432));
  v184 = v174 ^ 0xB5;
  v185 = *(_BYTE *)(v61 + ((v181 + 127) ^ 0x84));
  v186 = v185 - ((2 * v185 - 116) & 0xE0);
  v187 = *(unsigned __int8 *)(v148 + (v13[5] ^ 0x38));
  v188 = v183 & 0x10;
  if ((v183 & 0x10 & v184) != 0)
    v188 = -v188;
  v189 = ((v188 + v184) ^ v183 & 0xEF) + (**(_BYTE **)(v11 + 8088) ^ 0x6E);
  v190 = **(_BYTE **)(v11 + 8120);
  v191 = ((v190 ^ 0x11) + 95) ^ ((v190 ^ 0x4F) + 1);
  v192 = **(_BYTE **)(v11 + 8096);
  v193 = v14[8];
  *(_DWORD *)(v11 + 9432) = v193;
  v194 = (v193 ^ 7) + (v192 ^ 0xDB);
  v195 = (*(_DWORD *)(v11 + 9736) ^ 0x58)
       + (((((v187 >> 3) | (32 * v187)) ^ 0xFFFFFFA8) << (v82 & 7) << (v82 & 7 ^ 7)) | (((((v187 >> 3) | (32 * v187)) ^ 0xFFFFFFA8) & 0xFE) >> 1));
  v196 = v14[18];
  *(_DWORD *)(v11 + 9104) = v196;
  v197 = ((((v191 - ((2 * v191) & 0x60) - 80) ^ v190) + 94) ^ v196) - 46;
  v198 = (2 * v197) & 0x5A;
  v199 = v197 ^ 0xAD;
  v200 = v14[2];
  v201 = v39[9];
  *(_DWORD *)(v11 + 9120) = v200;
  v202 = *(_BYTE *)(v61 + ((*(_DWORD *)(v11 + 9616) + 127) ^ 0x84));
  v203 = *(_BYTE *)(v61 + ((v198 + v199) ^ 0x84));
  v204 = *(unsigned __int8 *)(a7 + 82);
  *(_DWORD *)(v11 + 9616) = v204;
  v205 = ((v201 ^ v200 ^ 0x34) + 2 * ((v201 ^ v200) & 0x89) - 4 * ((v201 ^ v200) & 0x89) - 119) | (v194 + 1) | (v195 + 1) | (v186 - 74) | ~v189;
  v206 = (2 * v203) & 0x8C;
  v207 = v203 ^ 0x46;
  v210 = v130 == 0;
  v208 = (v204 ^ 0x57) + ((v202 + 70) ^ 0xC6) + 1;
  if (v210)
    v209 = 0;
  else
    v209 = v205;
  if ((v205 | (v206 + v207) ^ 0x70) | (v209 ^ v208))
    v210 = 0;
  else
    v210 = (5 * v168) == 216;
  *(_DWORD *)(v11 + 9148) ^= 0xFFFFFFD8;
  *(_DWORD *)(v11 + 9160) ^= 0xFFFFFFD8;
  v211 = !v210;
  v212 = (62 * (v211 ^ 1)) ^ *(_DWORD *)(v11 + 9696);
  *(_DWORD *)(v11 + 9696) = v176 - ((2 * v176) & 0xFFFFFFB0) - 40;
  *(_DWORD *)(v11 + 9520) = *(_DWORD *)(v11 + 9240) ^ 0x70;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v11 + 9744) + 8 * v212) - 8))();
}

uint64_t sub_10038F104@<X0>(char a1@<W0>, char a2@<W2>, char a3@<W3>, int a4@<W4>, char a5@<W6>, char a6@<W8>)
{
  _BYTE *v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  char v12;
  char v13;
  char v14;
  _BYTE *v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v11[7] = *(_DWORD *)(v10 + 9472);
  v15[21] = *(_QWORD *)(v10 + 9648);
  v16 = *(_BYTE **)(v10 + 9712);
  v16[11] = *(_DWORD *)(v10 + 9496);
  v16[44] = *(_DWORD *)(v10 + 9152);
  v6[5] = *(_DWORD *)(v10 + 9424);
  **(_BYTE **)(v10 + 8584) = *(_DWORD *)(v10 + 9544);
  v16[10] = *(_DWORD *)(v10 + 9624);
  v16[85] = *(_DWORD *)(v10 + 9592);
  v15[20] = *(_DWORD *)(v10 + 9288);
  v6[11] = *(_DWORD *)(v10 + 9440);
  v15[5] = a3;
  v11[5] = *(_DWORD *)(v10 + 9608);
  v6[30] = *(_DWORD *)(v10 + 9128);
  v11[8] = *(_DWORD *)(v10 + 9656);
  *v15 = *(_DWORD *)(v10 + 9304);
  v16[80] = *(_DWORD *)(v10 + 9116);
  v16[47] = *(_DWORD *)(v10 + 9560);
  v11[2] = *(_DWORD *)(v10 + 9576);
  v6[25] = *(_DWORD *)(v10 + 9640);
  v11[3] = *(_DWORD *)(v10 + 9224);
  **(_BYTE **)(v10 + 8600) = *(_DWORD *)(v10 + 9264);
  v6[10] = a2;
  v11[9] = v7;
  v15[3] = *(_DWORD *)(v10 + 9328);
  *v6 = *(_DWORD *)(v10 + 9448);
  v16[38] = *(_DWORD *)(v10 + 9552);
  v6[35] = *(_DWORD *)(v10 + 9200);
  **(_BYTE **)(v10 + 8096) = a1;
  **(_BYTE **)(v10 + 8120) = v14;
  v6[4] = *(_DWORD *)(v10 + 9172);
  **(_BYTE **)(v10 + 8592) = *(_DWORD *)(v10 + 9280);
  v15[15] = *(_DWORD *)(v10 + 9312);
  v11[1] = v8;
  **(_BYTE **)(v10 + 8088) = a6;
  v16[60] = v13;
  **(_BYTE **)(v10 + 8104) = v9;
  v15[4] = *(_DWORD *)(v10 + 9176);
  v11[4] = *(_DWORD *)(v10 + 9392);
  v6[31] = *(_DWORD *)(v10 + 9136);
  v16[64] = *(_DWORD *)(v10 + 9232);
  **(_BYTE **)(v10 + 8216) = v12;
  v16[20] = *(_DWORD *)(v10 + 9368);
  **(_BYTE **)(v10 + 7840) = *(_DWORD *)(v10 + 9536);
  v6[24] = *(_DWORD *)(v10 + 9568);
  v15[12] = *(_DWORD *)(v10 + 9720);
  v11[6] = *(_DWORD *)(v10 + 9504);
  v16[51] = *(_DWORD *)(v10 + 9456);
  v16[90] = a5;
  v15[14] = *(_DWORD *)(v10 + 9192);
  v16[54] = *(_DWORD *)(v10 + 9664);
  *v11 = *(_DWORD *)(v10 + 9584);
  v15[6] = *(_DWORD *)(v10 + 9256);
  v6[1] = *(_DWORD *)(v10 + 9272);
  v15[7] = *(_QWORD *)(v10 + 9408);
  **(_BYTE **)(v10 + 8224) = *(_DWORD *)(v10 + 9672);
  v15[13] = *(_DWORD *)(v10 + 9160);
  v6[32] = *(_DWORD *)(v10 + 9184);
  v6[14] = *(_DWORD *)(v10 + 9632);
  v16[1] = *(_DWORD *)(v10 + 9528);
  v16[7] = *(_DWORD *)(v10 + 9148);
  v6[15] = *(_DWORD *)(v10 + 9248);
  v16[36] = *(_DWORD *)(v10 + 9600);
  v6[8] = *(_DWORD *)(v10 + 9432);
  v6[9] = *(_DWORD *)(v10 + 9320);
  v6[26] = *(_DWORD *)(v10 + 9360);
  v6[17] = *(_DWORD *)(v10 + 9520);
  v15[1] = *(_DWORD *)(v10 + 9680);
  v16[59] = *(_DWORD *)(v10 + 9736);
  v6[23] = *(_DWORD *)(v10 + 9376);
  v6[18] = *(_DWORD *)(v10 + 9104);
  v16[19] = *(_DWORD *)(v10 + 9416);
  v6[19] = *(_DWORD *)(v10 + 9296);
  v16[74] = *(_DWORD *)(v10 + 9400);
  v6[2] = *(_DWORD *)(v10 + 9120);
  v15[2] = *(_DWORD *)(v10 + 9480);
  v16[92] = *(_DWORD *)(v10 + 9384);
  v6[37] = *(_DWORD *)(v10 + 9512);
  v16[58] = *(_DWORD *)(v10 + 9208);
  v16[17] = *(_DWORD *)(v10 + 9696);
  v16[82] = *(_DWORD *)(v10 + 9616);
  v17 = ((a4 ^ 0x1BCE) + 3320) | 0x902;
  v18 = *(_QWORD *)(v10 + 6792);
  v19 = *(_QWORD *)(v10 + 2488);
  *(_QWORD *)(v10 + 12280) += (v17 - 4333731) & 0x857F177F ^ 0xFFFFFFFF7AC24257;
  v20 = ((uint64_t (*)(uint64_t))*(&off_1004ECA20 + (v17 ^ 0x1842)))(v19);
  return ((uint64_t (*)(uint64_t))(2235371539
                                          - (v17 - 2059602211)
                                          + *(_QWORD *)(*(_QWORD *)(v10 + 9744) + 8 * (v17 ^ (109 * (v18 == 0))))
                                          - 4))(v20);
}

uint64_t sub_10038F450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = (*(uint64_t (**)(uint64_t))(v0 + 9344))(v1);
  *(_QWORD *)(v0 + 11016) -= 32;
  return (*(uint64_t (**)(uint64_t))(v0 + 10008))(v2);
}

uint64_t sub_10038F474()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((6108 * (v0 == ((v1 + 2059598197) ^ 0xEB59940 ^ (v1 + 2059602141)))) ^ (v1 + 2059598108)))
                            - 12))();
}

uint64_t sub_10038F4C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;

  v3[1503] = (char *)v3 + v1 + 0x10418F73DD1C4EE2;
  v3[1527] = (char *)v3 + v1 + 12816;
  v3[1507] = (char *)v3 + v1 + 12840;
  v3[1252] = (char *)v3 + v1 + 0x10418F73DD1C4FAALL;
  v3[1377] = a1 + 192;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (4945 * ((_QWORD *)((char *)v3 + v1 + 12720) != 0))))
                            - ((v2 + 854) ^ 0xCEALL)))();
}

uint64_t sub_10038F540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  *(_DWORD *)(v3 + a1) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 80) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 ^ 0x56E) + 3635) * (v1 != -200)) ^ v2 ^ 0x56E)))();
}

uint64_t sub_10038F588()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  int v6;

  *(_QWORD *)(v0 + 200) = 0;
  *(_QWORD *)(v0 + 208) = 0;
  *v1 = 0;
  if (*(_QWORD *)(v3 + 11688))
    v5 = *(_QWORD *)(v3 + 11912) == 0;
  else
    v5 = 1;
  v6 = v5;
  return ((uint64_t (*)(void))(2235371539
                            - ((7 * (v2 ^ 0xC6E) + 84933692) | 0x802D1007)
                            + *(_QWORD *)(v4 + 8 * ((v6 * (7 * (v2 ^ 0xC6E) - 967)) ^ (7 * (v2 ^ 0xC6E))))
                            - 4))();
}

void sub_10038F604(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11104) = *(_QWORD *)(v2 + 8 * (a1 - 872)) + (a1 + 604) - 1588;
  JUMPOUT(0x10028CBC8);
}

uint64_t sub_10038F648@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((*a1 != 0) * (v2 ^ (v3 + 481))) ^ v1)) - 12))();
}

uint64_t sub_10038F670()
{
  uint64_t v0;
  int v1;
  int v2;

  (*(void (**)(void))(v0 + 9344))();
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8 * ((55 * (**(_QWORD **)(v0 + 10616) == 0)) ^ (v2 + v1 + 576)))
                            - 12))();
}

uint64_t sub_10038F6AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2984 * (**(_QWORD **)(v0 + 9800) != 0)) ^ (v1 + 2059604795)))
                            - 4))();
}

uint64_t sub_10038F6E4()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = **(_QWORD **)(v1 + 11688) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((2 * v4) | (4 * v4)) ^ (v0 + v2 + 1539))) - 8))();
}

uint64_t sub_10038F714()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 11016) -= 80;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v1 + 2059597801) | 0x4A1) ^ 0x19A4) * (v2 == 246777912)) ^ (v1 + 2059598986)))
                            - 12))();
}

uint64_t sub_10038F768()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((55 * (**(_QWORD **)(v0 + 10616) == 0)) ^ (v2 + v1 + 576)))
                            - 12))();
}

uint64_t sub_10038F798()
{
  uint64_t v0;
  int v1;

  (*(void (**)(void))(v0 + 9344))();
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8 * ((2984 * (**(_QWORD **)(v0 + 9800) != 0)) ^ (v1 + 2059604795)))
                            - 4))();
}

uint64_t sub_10038F7DC()
{
  uint64_t v0;
  int v1;
  _BOOL4 v2;

  (*(void (**)(void))(v0 + 9344))();
  v2 = **(_QWORD **)(v0 + 11688) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744) + 8 * (((2 * v2) | (4 * v2)) ^ (v1 + 2059605067)))
                            - 8))();
}

uint64_t sub_10038F820()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (*(uint64_t (**)(void))(v0 + 9344))();
  v4 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)(v0 + 11016) -= 80;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (((((v1 + 2059597801) | 0x4A1) ^ 0x19A4) * (v2 == 246777912)) ^ (v1 + 2059598986)))
                                          - 12))(v3);
}

uint64_t sub_10038F880@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD **v7;
  _QWORD **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  int v12;

  v4 = v1[1523];
  v5 = v1[1529];
  v6 = v1[1448];
  *(_DWORD *)v6 = *(_DWORD *)v5;
  *(_QWORD *)(v6 + 8) = v4 - 0x26CE0D06BF4F3EF0;
  *(_QWORD *)(v6 + 16) = v4 - 0x26CE0D06BF4F3EC8;
  v7 = (_QWORD **)v1[1471];
  *(_QWORD *)(v4 - 0x26CE0D06BF4F3EF0) = **v7;
  **(_DWORD **)(v6 + 16) = *((_DWORD *)*v7 + 2);
  v8 = (_QWORD **)v1[1398];
  *(_QWORD *)(*(_QWORD *)(v6 + 8) + 8) = **v8;
  *(_DWORD *)(*(_QWORD *)(v6 + 16) + 4) = *((_DWORD *)*v8 + 2);
  *(_QWORD *)(*(_QWORD *)(v6 + 8) + 16) = **(_QWORD **)(v5 + 56);
  *(_DWORD *)(*(_QWORD *)(v6 + 16) + 8) = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 8);
  *(_QWORD *)(*(_QWORD *)(v6 + 8) + 24) = **(_QWORD **)(v5 + 64);
  *(_DWORD *)(*(_QWORD *)(v6 + 16) + 12) = *(_DWORD *)(*(_QWORD *)(v5 + 64) + 8);
  *(_QWORD *)(*(_QWORD *)(v6 + 8) + 32) = **(_QWORD **)(v5 + 72);
  *(_DWORD *)(*(_QWORD *)(v6 + 16) + 16) = *(_DWORD *)(*(_QWORD *)(v5 + 72) + 8);
  v9 = *(_QWORD *)(v6 + 8);
  v10 = *(_QWORD *)(v6 + 16);
  v1[1198] = v9;
  v1[1197] = v10;
  if (v9)
    v11 = v10 == 0;
  else
    v11 = 1;
  v12 = !v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((v12
                                               * ((v2 + ((a1 + 2000597576) ^ 0xF203AEFE) + 2340) ^ (a1 + 2000597576) & 0x88C15D3F)) ^ a1))
                            - 12))();
}

uint64_t sub_10038F9CC()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((107 * (*v1 != 0)) ^ v0)))();
}

uint64_t sub_10038FA10()
{
  uint64_t v0;
  char v1;
  int v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;

  v4 = (_BYTE *)(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8072))((32 * v3) | 1, 3300222637);
  v5 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)(v0 + 9848) = v4;
  *(_QWORD *)(v0 + 9568) = v4;
  *v4 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((v2 - 4368) | 0x4A7) + 11264) * (v3 != 0)) ^ v2)) - 8))();
}

uint64_t sub_10038FA6C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  int v9;

  *(_QWORD *)(v0 + 9560) = v2;
  *(_QWORD *)(v0 + 9552) = *(_QWORD *)(v0 + 12280);
  v4 = **(_QWORD **)(v0 + 9584);
  v5 = **(_DWORD **)(v0 + 9576);
  v6 = *(_QWORD *)(v0 + 9568);
  *(_QWORD *)(v0 + 9600) = 0;
  v7 = ((v5 << (41 * (((v1 + 96) | 0x40) ^ 0xCD) - 20)) & 0xB3C7EFEE) + (v5 ^ 0xD9E3F7F7);
  *(_QWORD *)(v0 + 9608) = v4;
  *(_QWORD *)(v0 + 9592) = v6 + 1;
  if (v4)
    v8 = v6 == -1;
  else
    v8 = 1;
  v9 = !v8;
  *(_DWORD *)(v0 + 9624) = v7 + 2004860654;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((5616 * v9) ^ ((v1 - 4256) | 0xB40))) - 12))();
}

uint64_t sub_10038FB9C(uint64_t a1, int a2, int a3, uint64_t a4, __int16 a5, uint64_t a6, uint64_t a7, int a8)
{
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned __int8 v12;
  __int16 v13;
  uint64_t v14;

  *(_BYTE *)(v9 + (unsigned __int16)(15 * v12 - ((unsigned __int16)((v12 * a2) >> 16) >> 2) * a5)) = 0;
  *(_DWORD *)(v10 + 4 * ((v12 * a8 + 3312) % (unsigned __int16)(((v11 + v8) & v13) - 3954))) = 0;
  return (*(uint64_t (**)(void))(v14 + 8 * ((((((v12 - 1) - 254) & 0xC0) == 0) * a3) ^ v11)))();
}

uint64_t sub_10038FC0C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  _DWORD *v3;
  uint64_t v4;
  unsigned int v5;

  v3[2404] = 0;
  v3[2416] = 0;
  v5 = a2 ^ 0x853D1FE8;
  v3[2414] = (v5 ^ 0xB5DD505F) + 8 * v2;
  v3[2424] = -1827461521;
  v3[2434] = -1307156090;
  v3[2420] = -747702390;
  v3[2430] = 1751601316;
  v3[2422] = 157796760;
  v3[2432] = 229216790;
  v3[2426] = 1928240594;
  v3[2418] = -1344500079;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4
                                                                      + 8
                                                                      * (int)(((v3[2406] - 1365489445 >= ((1423 * (v5 ^ 0x853D1012)) ^ 0xFFFFE40B))
                                                                             * ((v5 + 2059600164) ^ 0x1113)) ^ (v5 + 2059602868))))(2059596029, a1, 15934, v3[2404]);
}

uint64_t sub_10038FD28(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * ((111
                                                                          * (*(_DWORD *)(v3 + 9624) - 23344927 != ((v2 + 1130095769) & 0xBCA41B7F) + 1342140018)) ^ v2))
                                                            - (v2 - 3862)
                                                            + 541))(a1, a2, 597);
}

uint64_t sub_10038FD8C@<X0>(unsigned int a1@<W2>, unsigned int a2@<W3>, int a3@<W5>, unsigned int a4@<W6>, int a5@<W8>)
{
  uint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  _BOOL4 v16;

  v11 = 15 * v7;
  v12 = (15 * v7 - 67) % ((a5 - 3902) ^ a1);
  v13 = (v7 + a3);
  v14 = v7 + 1;
  if (v11 > 0x42)
    v11 = v12;
  *(_BYTE *)(v5 + v11) = *(_BYTE *)(v9 + a2);
  v16 = v14 > a4 || v13 >= v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * ((v16 * v8) ^ a5)) - 8))(v13);
}

uint64_t sub_10038FDE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  int v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  uint64_t (*v10)(void);

  v7[2404] = a4;
  v9 = v7[2406];
  *(_BYTE *)(v5
           + v6
           - 2059596287
           - v9
           + 16 * v9
           - 1242875778
           - (v6 - 2059596287 - v9 + 16 * v9 - 1242875778) / 0x43u * a5) = 0x80;
  v10 = *(uint64_t (**)(void))(v8 + 8 * (((v6 - 483) * ((v9 - 1365489380) < 0x40)) ^ v6));
  v7[2416] = 2;
  return v10();
}

uint64_t sub_10038FE74@<X0>(int a1@<W0>, __int16 a2@<W2>, __int16 a3@<W4>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v8 = *(_DWORD *)(v6 + 9624);
  *(_BYTE *)(v4
           + (unsigned __int16)((a4 ^ (a2 + 490) ^ 0x4AB2)
                              - v8
                              + 16 * v8
                              - ((unsigned __int16)(((unsigned __int16)((a4 ^ (a2 + 490) ^ 0x4AB2)
                                                                                    - v8
                                                                                    + 16 * v8)
                                                   * v5) >> 16) >> 5)
                              * a3)) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8 * ((5343 * ((v8 - 1365489379) > 0x3F)) ^ (a1 + a4 + 1420)))
                            - 12))();
}

uint64_t sub_10038FFA8()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v4 = *(uint64_t (**)(void))(v3
                           + 8
                           * ((((v0 ^ v1) + 2059600564) * ((*(_DWORD *)(v2 + 9624) - 1365489381) < 0x38)) ^ v0));
  *(_DWORD *)(v2 + 9664) = 2;
  return v4();
}

void sub_10038FFF0(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE *v3;
  char v4;
  uint64_t v5;
  unsigned int v6;

  v6 = *(_DWORD *)(v5 + 9656);
  v3[7] = v6;
  v3[59] = v6 >> ((v4 - 31) & 0x1F ^ (a3 + 8));
  v3[44] = BYTE2(v6);
  v6 >>= 24;
  *(_DWORD *)(v5 + 9656) = v6;
  v3[29] = v6;
  *(_DWORD *)(v5 + 9664) = 1;
  JUMPOUT(0x10039003CLL);
}

void sub_100390054()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 9664) = 1;
  JUMPOUT(0x100390064);
}

void sub_10039014C()
{
  JUMPOUT(0x100390078);
}

uint64_t sub_100390154(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7, int a8)
{
  uint64_t v8;
  int v9;
  __int16 v10;
  unsigned int v11;
  int v12;
  int v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  unsigned int v17;
  __int16 v18;
  int v19;
  __int16 v20;
  unsigned __int16 v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  int v37;

  v17 = (((2 * (v9 - 15)) & 0x90) + ((v9 - 15) ^ 0x48)) * a8;
  v18 = v9 * a8;
  v19 = (a8 & (2 * (v9 + 70))) + ((v9 + 70) ^ 0x17);
  v20 = v9 * a8 + 3220;
  v21 = v20 - ((unsigned __int16)(((v20 & 0xFFFEu) * v12) >> 16) >> 6) * v13;
  v22 = (v20 - 282 * ((unsigned __int16)(((v20 & 0xFFFEu) * v12) >> 16) >> 7)) & 0xFFFE;
  v23 = *(_DWORD *)(v8
                  + 4
                  * (unsigned __int16)(v9 * a8
                                     + 2622
                                     - ((unsigned __int16)(((((_WORD)v9 * (_WORD)a8 + 2622) & 0xFFFEu) * v12) >> 16) >> 6)
                                     * v13));
  v24 = (v19 + v9 + 70) * (v19 - (v9 + 70)) - 529;
  v25 = *(_DWORD *)(v8 + 4 * v21);
  v27 = *(_DWORD *)(v8 + 4 * (v17 - (((v17 * (unint64_t)v11) >> 32) >> 5) * v13));
  v28 = *(_DWORD *)(v8 + 4 * (v24 - (((v24 * (unint64_t)v11) >> 32) >> 5) * v13));
  if (v22 >= 0x8D)
    v22 -= 141;
  v29 = __PAIR64__(v27, v23) >> 18;
  HIDWORD(v31) = v28;
  LODWORD(v31) = *(_DWORD *)(v8 + 4 * v22);
  v30 = v31 >> 17;
  v33 = __PAIR64__(v25, __ROR4__(v23, 7));
  v32 = (v23 >> 3) ^ v33;
  v26 = (v9 + 93) * (v9 + 93) - (v9 + 70) * (v9 + 70) - 529;
  LODWORD(v33) = *(_DWORD *)(v8 + 4 * (v26 - (((v26 * (unint64_t)v11) >> 32) >> 5) * v13));
  v34 = (v30 ^ (v25 >> 10) ^ (v33 >> 19)) + (v32 ^ v29);
  v35 = 4 * (unsigned __int16)(v18 + 3312 - ((unsigned __int16)((((v18 + 3312) & 0xFFFEu) * v12) >> 16) >> 6) * v13);
  *(_DWORD *)(v8 + v35) = v34;
  v36 = (v9 + 94) * (v9 + 94) - (v9 + 71) * (v9 + 71) - 483;
  v16 = ((((a1 + a7) | v14) ^ 0x27E4) & (2 * v9)) + (v9 ^ 0xFFF9);
  v37 = v34
      + *(_DWORD *)(v8
                  + 4
                  * (unsigned __int16)(v10
                                     + v16 * a8
                                     - ((unsigned __int16)((((v10 + v16 * (_WORD)a8) & 0xFFFEu) * v12) >> 16) >> 6)
                                     * v13));
  *(_DWORD *)(v8 + 4 * (v36 - (((v36 * (unint64_t)v11) >> 32) >> 5) * v13)) = v37;
  *(_DWORD *)(v8 + v35) = v37
                        + *(_DWORD *)(v8
                                    + 4
                                    * (unsigned __int16)(v18
                                                       + 2435
                                                       - ((unsigned __int16)(((unsigned __int16)(v18 + 2435)
                                                                            * v12) >> 16) >> 6)
                                                       * v13));
  return (*(uint64_t (**)(void))(v15 + 8 * (((2 * (v9 == 63)) | (4 * (v9 == 63))) ^ a1)))();
}

uint64_t sub_100390320@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  v1[158] = -881551936;
  v3 = *(_DWORD *)(v2 + 9696) + 676628502;
  v1[112] = -1753238038;
  v4 = *(_DWORD *)(v2 + 9688) - 1679283294;
  v5 = *(_DWORD *)(v2 + 9672) + 1873234714;
  v1[106] = -1178180429;
  v1[85] = -1218032798;
  v1[146] = -1554338929;
  v1[94] = 262661770;
  v6 = *(_DWORD *)(v2 + 9680) - 946441982;
  v1[45] = 1047487479;
  v1[155] = 1946041535;
  v1[103] = 919287774;
  v1[97] = -780336735;
  v1[149] = 1417484175;
  v1[137] = 2046626669;
  v1[109] = 1001376780;
  v1[134] = -1592247838;
  v1[33] = 787163159;
  v1[100] = 2107293890;
  v1[152] = -196995812;
  v1[48] = 97213415;
  v1[66] = 1391853228;
  v1[88] = -1849564701;
  v1[24] = -1456796738;
  v1[143] = -243247135;
  v1[30] = 1479066838;
  v1[82] = 158712992;
  v1[131] = -393667220;
  v1[128] = 265935699;
  v1[91] = 1488470773;
  v1[39] = -1465989618;
  v1[140] = 741555909;
  v1[104] = 1516510602;
  v1[73] = -1982259098;
  v1[125] = 1187589487;
  v1[20] = 608758195;
  v1[21] = -707989600;
  v1[76] = 1669432137;
  v1[79] = 888588078;
  v1[156] = 450545358;
  v1[36] = -169352318;
  v1[42] = -1980727160;
  v1[119] = -1542830709;
  v1[159] = -645597;
  v1[153] = 1240279566;
  v1[122] = 1949361824;
  v1[27] = -2072075588;
  v1[57] = 99631065;
  v1[58] = 1447968009;
  v1[113] = -77366479;
  v1[110] = 376403664;
  v1[70] = -1286495692;
  v1[116] = -1202208705;
  v1[98] = -1473236211;
  v1[63] = 454392950;
  v1[64] = 151466343;
  v1[54] = 1654483993;
  v1[55] = 1854258211;
  v1[107] = 1029407850;
  v1[150] = 1720136239;
  v1[67] = -232170869;
  v1[51] = -967171108;
  v1[52] = -1598530030;
  v1[101] = 1920842261;
  v1[147] = -2045827322;
  *(_DWORD *)(v2 + 9632) = v5;
  *(_DWORD *)(v2 + 9648) = v3;
  *(_DWORD *)(v2 + 9640) = v4;
  v1[60] = -1931798288;
  v1[61] = 815228005;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * (a1 - 9428)) - 8))(v6);
}

void sub_100390868()
{
  JUMPOUT(0x1003906F8);
}

uint64_t sub_1003908A0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  int v28;
  int v29;

  v13 = *(_DWORD *)(v9 + 9680);
  *(_DWORD *)(v9 + 9720) += v5;
  LODWORD(v14) = __ROR4__(v13, 5) ^ 0x36B2445A;
  HIDWORD(v14) = v14;
  *(_DWORD *)(v9 + 9704) += v11;
  *(_DWORD *)(v9 + 9688) += v12;
  v15 = 2 * ((v13 ^ 0x38698EFD) + (v13 | 0x47967102))
      + 299825732
      + v6
      + ((v14 >> 27) ^ -(int)(v14 >> 27) ^ (((v14 >> 27) ^ 0xEE2105BB) + 299825733))
      + 2;
  *(_DWORD *)(v9 + 9672) += a1;
  *(_DWORD *)(v9 + 9680) = 2 * ((v13 ^ 0x38698EFD) + (v13 | 0x47967102))
                         + 299825732
                         + v6
                         + ((v14 >> 27) ^ -(int)(v14 >> 27) ^ (((v14 >> 27) ^ 0xEE2105BB) + 299825733))
                         + 946441984;
  *(_DWORD *)(v9 + 9696) += v10;
  *(_DWORD *)(v9 + 9736) += a4;
  *(_DWORD *)(v9 + 9728) += v8 + v7;
  v16 = *(_DWORD *)(v9 + 9664);
  if (v16 == 2)
  {
    v17 = *(_DWORD *)(v9 + 9656);
    *(_BYTE *)(v4 + 7) = v17;
    *(_BYTE *)(v4 + 59) = BYTE1(v17);
    v18 = HIWORD(v17);
    v17 >>= 24;
    *(_BYTE *)(v4 + 44) = v18;
    *(_DWORD *)(v9 + 9656) = v17;
    *(_BYTE *)(v4 + 29) = v17;
    v19 = *(_QWORD *)(v9 + 9744);
    *(_BYTE *)v4 = 0;
    return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 9616) - 4))();
  }
  else
  {
    v21 = *(_QWORD *)(v9 + 9744);
    if (v16 != 1)
      JUMPOUT(0x10038FCA4);
    *(_WORD *)(v4 + 8) = 0;
    v22 = v10 + *(_DWORD *)(v9 + 9648);
    *(_BYTE *)(v4 + 10) = 0;
    v23 = a1 + *(_DWORD *)(v9 + 9632);
    v24 = v12 + *(_DWORD *)(v9 + 9640);
    *(_WORD *)(v4 + 53) = 0;
    *(_WORD *)v4 = 0;
    *(_BYTE *)(v4 + 60) = 0;
    *(_BYTE *)(v4 + 38) = 0;
    *(_BYTE *)(v4 + 15) = 0;
    *(_DWORD *)(v4 + 23) = 0;
    *(_WORD *)(v4 + 45) = 0;
    *(_WORD *)(v4 + 61) = 0;
    *(_WORD *)(v4 + 39) = 0;
    *(_BYTE *)(v4 + 47) = 0;
    *(_DWORD *)(v4 + 28) = 0;
    *(_WORD *)(v4 + 48) = 0;
    *(_DWORD *)(v4 + 17) = 0;
    *(_BYTE *)(v4 + 63) = 0;
    *(_WORD *)(v4 + 34) = 0;
    *(_WORD *)(v4 + 42) = 0;
    *(_BYTE *)(v4 + 16) = 0;
    *(_BYTE *)(v4 + 55) = 0;
    *(_WORD *)(v4 + 32) = 0;
    *(_BYTE *)(v4 + 2) = 0;
    *(_BYTE *)(v4 + 41) = 0;
    *(_DWORD *)(v4 + 3) = 0;
    *(_WORD *)(v4 + 56) = 0;
    *(_BYTE *)(v4 + 11) = 0;
    *(_BYTE *)(v4 + 58) = 0;
    *(_WORD *)(v4 + 50) = 0;
    *(_WORD *)(v4 + 64) = 0;
    *(_BYTE *)(v4 + 21) = 0;
    *(_BYTE *)(v4 + 66) = 0;
    *(_WORD *)(v4 + 13) = 0;
    *(_BYTE *)(v4 + 36) = 0;
    *(_BYTE *)(v4 + 12) = 0;
    v25 = *(_DWORD *)(v9 + 9704) - 149206891;
    *(_BYTE *)(v4 + 44) = 0;
    *(_BYTE *)(v4 + 27) = 0;
    *(_BYTE *)(v4 + 7) = 0;
    v26 = *(_DWORD *)(v9 + 9720) - 737697074;
    *(_BYTE *)(v4 + 59) = 0;
    v27 = *(_BYTE **)(v9 + 9592);
    v27[3] = v25;
    v27[1] = BYTE2(v25);
    v27[2] = BYTE1(v25);
    v27[6] = BYTE1(v22);
    *v27 = HIBYTE(v25);
    v28 = *(_DWORD *)(v9 + 9728) + 1130676329;
    v27[11] = v26;
    v27[5] = BYTE2(v22);
    v27[7] = v22;
    v27[4] = HIBYTE(v22);
    v27[15] = v24;
    v27[14] = BYTE1(v24);
    v27[9] = BYTE2(v26);
    v27[13] = BYTE2(v24);
    v27[10] = BYTE1(v26);
    v27[17] = BYTE2(v28);
    v27[12] = HIBYTE(v24);
    v27[19] = v28;
    v27[8] = HIBYTE(v26);
    v27[23] = v15;
    v29 = *(_DWORD *)(v9 + 9736) - 1446351981;
    v27[18] = BYTE1(v28);
    v27[16] = HIBYTE(v28);
    v27[22] = BYTE1(v15);
    v27[21] = BYTE2(v15);
    v27[27] = v23;
    v27[20] = HIBYTE(v15);
    v27[30] = BYTE1(v29);
    v27[26] = BYTE1(v23);
    v27[25] = BYTE2(v23);
    v27[29] = BYTE2(v29);
    v27[24] = HIBYTE(v23);
    v27[28] = HIBYTE(v29);
    v27[31] = v29;
    return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 57512) - 4))();
  }
}

uint64_t sub_100390D1C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v0 & 0x7E049D37 ^ (15194
                                                            * (*(_QWORD *)(v1 + 9600) + 1 == *(_QWORD *)(v1 + 9560)))))
                            - (((v0 & 0x7E049D37) + 881023475) & 0xCB7C99F9)
                            + 4380))();
}

void sub_100390D74()
{
  JUMPOUT(0x10038FAF4);
}

uint64_t sub_100390D80@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 ^ 0xD09 ^ (a1 + 1 == v2)) & 1) == 0) * (((v1 - 5161) | 0x4A1) - 3126)) ^ v1)))();
}

uint64_t sub_100390DC4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((4601
                                          * (((v1 - v2 + 115) ^ (*(_QWORD *)(*(_QWORD *)(v3 + 9584)
                                                                                            + 8 * a1) == 0)) & 1)) ^ v1))
                            - ((v1 + 3976) ^ 0x1C25)))();
}

uint64_t sub_100390E14()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  **(_QWORD **)(v1 + 80) = v0[1196];
  *(_DWORD *)(*(_QWORD *)(v1 + 80) + 8) = v2 ^ 0x4B6 | (32 * *(_DWORD *)v1);
  *(_DWORD *)(*(_QWORD *)(v1 + 80) + 12) = -1;
  *(_DWORD *)(*(_QWORD *)(v1 + 80) + 16) = 0;
  v4 = v0[1377];
  v5 = (char *)v0 + v4 + 12720;
  v6 = v0[1443];
  *(_QWORD *)(v6 + 8) = v0 + 1316;
  *(_QWORD *)(v6 + 16) = 1;
  v7 = (_QWORD *)v0[970];
  v8 = v7[6];
  v0[1475] = v7[5];
  v0[1518] = v8;
  v9 = v7[8];
  v0[1374] = v7[7];
  v0[1450] = v9;
  v0[1269] = v5 - 96;
  v0[1310] = v5 + 8;
  v0[1534] = v5 + 32;
  v0[1385] = v5 + 56;
  v0[1442] = v5 + 88;
  v0[1377] = v4 + 112;
  v10 = sub_1003CA69C(v5 - 96, 0, 0x68uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 12) = 0;
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 12) = 0;
  v0[1221] = v5 + 96;
  *((_DWORD *)v5 + 26) = 0;
  *((_QWORD *)v5 + 2) = 0;
  v0[1517] = v5 + 16;
  *((_QWORD *)v5 + 4) = 0;
  *((_QWORD *)v5 + 5) = 0;
  v0[1387] = v5 + 40;
  v0[1457] = 0;
  *((_QWORD *)v5 + 11) = 0;
  *(_BYTE *)(v6 + 200) = 0;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(v0[1218]
                                                      + 8
                                                      * (((*(_QWORD *)(v6 + 112) != 0)
                                                        * ((v2 - 2059596960) ^ (v3 - 1055))) ^ v2))
                                          - 4))(v10);
}

uint64_t sub_100390FE8()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((7332
                                * ((((v0 ^ 0x62) - 30) ^ (*(_DWORD *)(v1 + 120) == ((((v0 ^ 0xD62) + 84670017) | 0x80311001) ^ v2))) & 1)) ^ v0 ^ 0xD62)))();
}

uint64_t sub_10039104C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;

  v1[1465] = v2 + 0x2CB6A504094F3C91;
  v1[1365] = v2 + 0x6F7087687A71D69ELL;
  v7 = v6 - 192;
  *(_QWORD *)v7 = v2 + 0x6BF3D391C6D2EBFDLL;
  *(_QWORD *)(v7 + 8) = v3 + 0x414EB0E2B26A66DLL;
  *(_QWORD *)(v7 + 48) = v2 + 0x6F7087687A71D69ELL;
  *(_QWORD *)(v7 + 56) = v3;
  *(_DWORD *)(v7 + 32) = v4 + 359378713 * ((v6 + 1143875180 - 2 * ((v6 - 192) & 0x442E272C)) ^ 0x36495FE8) + a1 + 1190;
  *(_QWORD *)(v7 + 40) = v3 + 0x3F8CE1D26587F590;
  *(_QWORD *)(v7 + 16) = v2 + 0x66F63574B8A310A7;
  *(_QWORD *)(v7 + 24) = v2 + 0x2CB6A504094F3C91;
  v8 = ((uint64_t (*)(uint64_t))((char *)*(&off_1004ECA20 + (a1 ^ (v5 + 591))) - 8))(v6 - 192);
  v9 = *(_DWORD *)(v6 - 128);
  if (v9 == 246777912)
  {
    v12 = v1[1218];
    *(_QWORD *)v2 = 0x300000001;
    *(_DWORD *)(v2 + 32) = 2;
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * ((107 * (*(_DWORD *)(v3 + 192) == 0)) ^ 0xF32))
                                            - 8))(v8);
  }
  else
  {
    v10 = v1[1218];
    if (v9 == -246804765)
      return (*(uint64_t (**)(uint64_t))(v10
                                                + 8
                                                * (int)(((*(_QWORD *)(v3 + 216) != 0) * ((v5 ^ 0x853D19C2) + 8605)) ^ (v4 + v5 + 2241))))(v8);
    else
      return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v4 - 2059594193) * (v1[1457] != 0)) ^ 0x2006)) - 12))();
  }
}

uint64_t sub_100391538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v8 + 9744)
                                        + 8
                                        * (int)((((((v9 & 0x5A9DCFEB ^ 0xCCA) + 4188) ^ 0xFFFFF7EE)
                                                + 3143 * (v9 & 0x5A9DCFEB ^ 0xCCA))
                                               * (a8 == 7)) ^ v9 & 0x5A9DCFEB))
                            - 8))();
}

uint64_t sub_10039158C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  char v18;
  int v19;
  char v20;
  unsigned int v21;
  int v22;

  v12 = *(_BYTE **)(v10[1216] + 8 * a8);
  LODWORD(v13) = *(_DWORD *)(v10[1183] + 4 * a8) ^ 0x7D13FFB3;
  if (v13 <= 1)
    v13 = 1;
  else
    v13 = v13;
  v14 = v13 - 1;
  v15 = *v12;
  v16 = v15 + 2 * v11;
  if ((_BYTE)v16)
    v17 = v16;
  else
    v17 = 72;
  v18 = v15 ^ 0x87;
  v19 = v18 & 1;
  v20 = v18 & 0xFE;
  v21 = *(unsigned __int8 *)(v9 + (((v17 >> 1) | ((_BYTE)v17 << 7)) ^ 0x2BLL)) ^ ((v17 >> 1) | (v17 << 7)) ^ 0xFFFFFFB5;
  if ((v21 & v19) == (((v8 - 1520292738) ^ 0xCCCCCCCC) & 0xEB))
    LOBYTE(v22) = v19;
  else
    v22 = -v19;
  *v12 = (v22 + v21) ^ v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10[1218] + 8 * ((13332 * (v14 == 0)) ^ v8)) - 8))();
}

void sub_100391650()
{
  JUMPOUT(0x1003915B8);
}

uint64_t sub_100391658()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v1 + 11720) - 0x2CB6A504094F3C81) == 0)
                                          * (((v0 - 2146960331) | 0x5350003) ^ (v2 + 30))) ^ v0))
                            - ((v0 - 2059600840) ^ 0x853D1013)))();
}

uint64_t sub_1003916CC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *v4 = v3;
  v6 = v2[1365];
  *(_DWORD *)(v6 - 0x6F7087687A71D696) = v2[1217];
  v7 = v2[1385];
  *(_QWORD *)(v7 + 16) = *v4;
  *(_DWORD *)(v7 + 24) = *(_DWORD *)(v6 - 0x6F7087687A71D696);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((978 * ((a2 ^ 0x94 ^ (*(_QWORD *)(a1 + 176) == 0)) & 1)) ^ (a2 + 2059598270))))();
}

uint64_t sub_100391770@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((28 * (*(_QWORD *)(a1 + 184) != 0)) | a2))
                            + 2235371539
                            - ((a2 - 1753233132) & 0xEDBD1C7F)
                            - 4))();
}

uint64_t sub_1003917C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((*(_DWORD *)(a4 + 192) != ((v4 + 1340851426) & 0xB01435FF ^ 0x4B7))
                                     * (((v4 + 67438141) | 0x81380005) ^ 0x853D3E9E)) ^ v4)))();
}

uint64_t sub_10039182C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((117 * (((*(_DWORD *)(a1 + 196) == 0) ^ a2) & 1)) ^ a2))
                            - (a2 ^ (v2 + 1161) ^ 0x853D1013)))();
}

uint64_t sub_10039186C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  int v12;

  v3 = a2 ^ 0x640;
  v4 = 121 * (a2 ^ 0x495u);
  v5 = *(&off_1004ECA20 + (a2 ^ 0x724));
  *(_QWORD *)(v2 + 9784) = 0;
  v7 = ((uint64_t (*)(_QWORD))*(&off_1004ECA20 + (v3 ^ 0x38A)))(*v5);
  v8 = *(&off_1004ECA20 + v3 + 55);
  *(_QWORD *)(v2 + 9736) = a1;
  v9 = ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))*(&off_1004ECA20 + (v3 ^ 0x676)))(*(_QWORD *)(a1 + 176), *v8, v7, v2 + 9784);
  v10 = *(_QWORD *)(v2 + 9744);
  if (*(_QWORD *)(v2 + 9784))
    v11 = 1;
  else
    v11 = v9 == 0;
  v12 = !v11;
  *(_DWORD *)(v2 + 9728) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((506 * v12) ^ v3)) - (v4 ^ 0x101A)))();
}

uint64_t sub_10039192C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  uint64_t v5;

  v4 = (*(uint64_t (**)(uint64_t))(v0 + 5296))(v2);
  *(_DWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 48) = (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8072))(v4, 3322646428);
  v5 = (*(uint64_t (**)(uint64_t))(v0 + 5288))(v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 9744)
                                            + 8
                                            * ((*(_DWORD *)(v1 + 40)
                                              - (((((v3 - 3550) | 0xC3) - 128) ^ 0xF7B1410B) & (2 * *(_DWORD *)(v1 + 40))) == 0) | v3)))(v5);
}

uint64_t sub_1003919B4@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((244 * (a1 >= ((v1 - 1925246072) & 0xF7FDFA17 ^ 0x853D101F))) ^ v1))
                            - 4))();
}

uint64_t sub_100391A00(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (2240 * ((unint64_t)(a1 - v1) > 0x1F)))) - 4))();
}

uint64_t sub_100391A38@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v2 ^ 0x9B0) + 2337) | 0x203) ^ ((v2 ^ 0x9B0) - v1 + 2059598899)) * (a1 > 0x1F)) ^ v2 ^ 0x9B0)))();
}

uint64_t sub_100391A84@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v6 = ((3 * (v2 ^ 0x853D17ED)) ^ 0xFFFFE811) + a2;
  v7 = *(_OWORD *)(a1 + v6 - 15);
  v8 = *(_OWORD *)(a1 + v6 - 31);
  v9 = v3 + v6;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((460 * ((a2 & 0xFFFFFFE0) != 32)) ^ (v4 + v2 + 951))))();
}

void sub_100391AF0()
{
  JUMPOUT(0x100391AA8);
}

uint64_t sub_100391AF8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((50 * (((v1 == 0) ^ v0 ^ 0xE0) & 1)) ^ v0 ^ 0x22AC))
                            - 12))();
}

uint64_t sub_100391B50()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 + 2059599521) ^ (2 * (*(_QWORD *)(v0 + 9784) == 0)))))();
}

uint64_t sub_100391B80()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = v1();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                                      + 8 * ((v3 + 2059596714) ^ (1670 * (v2 != 0))))
                                          - 8))(v4);
}

uint64_t sub_100391BB8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = v1(v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 9744)
                                            + 8 * (((v3 + 2059604003) * *(_DWORD *)(v0 + 9728)) ^ (v3 + 2059598270))))(v4);
}

uint64_t sub_100391BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((69 * (v2 ^ 0x17E5) + 410708176) & 0xE7851FFF) + 546) * (v1 != a1)) ^ v2))
                            - 12))();
}

uint64_t sub_100391C40@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1682
                                * ((((v1 - 1916956208) & 0xF77F727F ^ 0x853D06E4 ^ ((v1 + 1250) | 0x642)) & a1) == 0)) ^ v1)))();
}

uint64_t sub_100391C98@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 - 7 + (v2 ^ 0xFFFFFD88 ^ (v3 - 5236)) + a2) = *(_QWORD *)(a1
                                                                                       - 7
                                                                                       + (v2 ^ 0xFFFFFD88 ^ (v3 - 5236))
                                                                                       + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((448 * ((a2 & 0xFFFFFFF8) - 8 == v2)) ^ v3)) - 8))();
}

void sub_100391CF4()
{
  JUMPOUT(0x100391CC0);
}

uint64_t sub_100391CFC@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((a1 + (v3 ^ 0x80) + 2059606185) * (v2 == a2)) ^ v3)) - 4))();
}

uint64_t sub_100391D34()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(*(_QWORD *)(v0 + 9736) + 200) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((50 * (((v2 == 0) ^ (v1 + 100) ^ 0x4C) & 1)) ^ (v1 + 7524)))
                            - 12))();
}

uint64_t sub_100391D9C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  int v2;
  uint64_t v3;

  v1(v3);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 9744)
                              + 8 * ((v2 + 2059599521) ^ (2 * (*(_QWORD *)(v0 + 9784) == 0)))))();
}

uint64_t sub_100391DD8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + 2059596714) ^ (1670 * (v0 != 0)))) - 8))();
}

uint64_t sub_100391E08()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + v2 + 7974) * *(_DWORD *)(v1 + 9728)) ^ (v0 + v2 + 2241))))();
}

uint64_t sub_100391E3C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;

  v5 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v2 + 11640) = v5;
  *(_DWORD *)(v2 + 11684) = *(_DWORD *)(v1 + 192);
  *(_QWORD *)(v2 + 10280) = 0;
  *(_QWORD *)(v2 + 12168) = 0;
  *(_DWORD *)(v2 + 10116) = 0;
  if (*(_QWORD *)(v2 + 11536))
    v6 = v5 == 0;
  else
    v6 = 1;
  v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((v0 ^ (v3 + 101)) ^ v7) & 1)
                                          * ((v0 + 3448) ^ 0x9D5)) ^ v0))
                            - 4))();
}

uint64_t sub_100391EA4()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  v1[2961] = 0;
  v1[2816] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((10783 * (v1[2921] >= 4u)) ^ v0 ^ 0x572))
                            - (((v0 ^ 0x2DC4u) - 2059603984) ^ 0x853D101FLL)))();
}

uint64_t sub_100391EBC(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = (v2 ^ 0x7AC2EFE8) & (v1 - 1);
  *(_BYTE *)(v3 + v6) = *(_BYTE *)(a1 + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((6944 * (v6 == 0)) ^ (v4 + v2 + 3002))) - 12))();
}

uint64_t sub_100391F0C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v0 + v2 - 93) ^ (6767 * (v1 == 246777912))))
                            - ((v0 + v2 - 259) ^ 0x15)))();
}

void sub_100391F5C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11104) = *(_QWORD *)(v2 + 8 * a1) + (((_DWORD)a1 + 543) | 0x400u) - 1596;
  JUMPOUT(0x10028CBC8);
}

uint64_t sub_100391F98()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2485 * (v1 == (v2 ^ (v2 + 127) ^ 0xEB588B9))) ^ (v0 + v2 - 93)))
                            - 4))();
}

void sub_100391FE0()
{
  JUMPOUT(0x100392020);
}

uint64_t sub_10039202C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((4806 * (v1 == ((v2 - 657506456) & 0xA1F3B7FD) + 246775995)) ^ (v0 + v2 + 709)))
                            - 8))();
}

uint64_t sub_100392084@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11944) = *(_QWORD *)(v1 + 12024);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((**(_QWORD **)(v1 + 11688) != 0)
                                               * ((a1 - 444730118) & 0x9FBF139F ^ 0x853D3327)) ^ a1))
                            - 8))();
}

uint64_t sub_1003920D8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((3709
                                          * (*(_QWORD *)(v1 + 8) != v2 + ((a1 - 4196638) & 0x857D11B7) - 74 - 202)) ^ a1))
                            - 8))();
}

void sub_10039211C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11776) = (v0 + 871) + *(_QWORD *)(v2 + 8 * v0) - 1077;
  JUMPOUT(0x10028CAC0);
}

uint64_t sub_100392148()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v0 + v3 + 709) ^ (6318 * (v2 == v1)))) - 8))();
}

uint64_t sub_100392178()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2035
                                          * ((((v0 - 2059592957) ^ (*(_QWORD *)(*(_QWORD *)(v1 + 11688) + 16) == 0)) & 1) == 0)) ^ 0x23FA))
                            - 4))();
}

uint64_t sub_1003921CC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((7039
                                          * (((23 * ((v0 | 0xC) ^ 5)) ^ (*(_QWORD *)(v1 + 24) == ((v0 | 0x20Cu) ^ 0xE0CLL))) & 1)) ^ (v0 | 0x20C)))
                            - 8))();
}

void sub_100392230()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11776) = (v0 + 866) + *(_QWORD *)(v2 + 8 * v0) - 1081;
  JUMPOUT(0x10028CAC0);
}

uint64_t sub_100392260()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v0 + v3 - 93) ^ (10326 * (v2 == v1)))) - 4))();
}

uint64_t sub_100392290()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((10454 * (*(_QWORD *)(*(_QWORD *)(v0 + 11688) + 32) != 0)) ^ (v1 - 2059596711)))
                            - 8))();
}

uint64_t sub_1003922C8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((201 * (*(_QWORD *)(v0 + 40) != 0)) ^ (22 * (v1 ^ (v3 + 142)))))
                            - ((((22 * (v1 ^ (v3 + 142)) + 1784288425) & 0x95A5DCDF) - v2 + 63) ^ 0x853D101FLL)))();
}

void sub_100392330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11776) = *(_QWORD *)(v2 + 8 * v0);
  JUMPOUT(0x10028CAC0);
}

uint64_t sub_100392354()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v0 + v3 + 709) ^ (7072 * (v2 == v1)))) - 8))();
}

uint64_t sub_100392384()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((21 * (*(_QWORD *)(*(_QWORD *)(v1 + 11688) + 48) != 0)) ^ (v0 - 2059594204)))
                            - 8))();
}

uint64_t sub_1003923E4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((12148 * (*(_QWORD *)(v1 + 56) != 0)) ^ v0))
                            - (v0 - 1637)
                            - 14 * (v0 ^ 0x731u)
                            + 404))();
}

void sub_100392424()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11776) = ((v0 - 257438655) & 0xF583733 ^ 0xFFFFFFFFFFFFFBC5) + *(_QWORD *)(v2 + 8 * v0);
  JUMPOUT(0x100295160);
}

uint64_t sub_100392464()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((v0 + v3 - 52) ^ 0x102C) * (v2 == v1)) ^ (v0 + v3 - 93))) - 4))();
}

void sub_10039249C()
{
  JUMPOUT(0x1003924ACLL);
}

uint64_t sub_100392568()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  _BOOL4 v6;

  v6 = v1 != (v3 ^ (v4 - 150) ^ 0xEB59816) && *(_QWORD *)(v2 + 10864) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744) + 8 * ((54 * v6) ^ (v0 + v3 + 949))) - 12))();
}

uint64_t sub_1003925BC@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD))(v3 + 8 * ((430 * (((*v1 == 0) ^ (a1 - v2)) & 1)) ^ a1)))(*v1);
}

uint64_t sub_1003925E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = (*(uint64_t (**)(void))(v0 + 9344))();
  *v1 = 0;
  *(_QWORD *)(v0 + 11016) -= 16;
  return (*(uint64_t (**)(uint64_t))(v0 + 10832))(v2);
}

uint64_t sub_10039262C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v0 + v3 - 93) ^ (9873 * (v2 == v1))))
                            - ((v0 + v3 - 94) ^ 0xB2)))();
}

void sub_100392674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 12216);
  v2 = *(_QWORD *)(v0 + 12056);
  *(_QWORD *)(v2 + 64) = *(_QWORD *)v1;
  *(_DWORD *)(v2 + 72) = *(_DWORD *)(v1 + 8);
  JUMPOUT(0x10039269CLL);
}

uint64_t sub_100392734@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _DWORD *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v6 = 50 * (v2 ^ 0x9E);
  v9 = *(_DWORD *)(v1 + 16);
  v7 = (_DWORD *)(v1 + 16);
  v8 = v9;
  *(_QWORD *)(v4 + 11312) = v7;
  v10 = v7[5];
  *(_QWORD *)(v4 + 10312) = v7 + 5;
  v11 = v7[10];
  *(_QWORD *)(v4 + 10216) = v7 + 10;
  v12 = v7[14];
  *(_QWORD *)(v4 + 12248) = v7 + 14;
  v13 = v6 + v8 + v10 + v11 + v12 - 729620740;
  *(_DWORD *)(v4 + 11992) = v13;
  *(_QWORD *)(v4 + 12256) = *(_QWORD *)(v5 + 8 * v2) - 8;
  *(_DWORD *)(v4 + 11116) = v13;
  *(_QWORD *)(v4 + 10184) = v4 + 10004;
  *(_QWORD *)(v4 + 11336) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * (((a1 != 0x62505F6DB01515E5) * ((1346 * (v6 ^ 0x645)) ^ 0x1A60)) ^ v6))
                            - ((v6 - v3 - 1324) ^ 0x853D1013)))();
}

uint64_t sub_1003927A4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744)
                              + 8 * (((v0 != 1) | (32 * (v0 != 1))) ^ (v1 - 786095647) & 0x2EDADDFFu)))();
}

uint64_t sub_100392814()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 != 0) | (32 * (v1 != 0))) ^ v0)))();
}

void sub_100392844()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v1 + 12032) = v2;
  *(_QWORD *)(v1 + 12256) = ((400 * (v0 ^ 0xC4)) ^ 0xFFFFFFFFFFFFF9BCLL) + *(_QWORD *)(v3 + 8 * v0);
  JUMPOUT(0x10039877CLL);
}

uint64_t sub_100392888()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + 2059596738) ^ (6966 * (v0 == 246777912))))
                            - ((v1 - 1686105120) & 0xDF42DCBF ^ 0xBFLL)))();
}

void sub_1003928F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 10832) = 2132 * (a1 & 0xDF42DCBF ^ 0xB5) + *(_QWORD *)(v2 + 8 * (a1 & 0xFFFFFFFFDF42DCBFLL)) - 4268;
  JUMPOUT(0x1003924B4);
}

uint64_t sub_100392934()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(v1 + 10052) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((25 * ((v0 ^ 0xB6 ^ (*(_QWORD *)(v1 + 12216) == 0)) & 1)) ^ (v2 + v0 + 1440)))
                            - ((v0 - v4 + 73) ^ 0x4DLL)))();
}

uint64_t sub_10039298C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1806 * (*v1 != 0)) ^ a1)) - 12))();
}

void sub_1003929BC()
{
  uint64_t v0;
  _QWORD *v1;

  (*(void (**)(void))(v0 + 9344))();
  *v1 = 0;
  JUMPOUT(0x100295490);
}

uint64_t sub_100392A14()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v3 = 79 * (v0 ^ 0x868);
  v4 = *(_DWORD *)(v1 + 10116);
  v5 = (*(uint64_t (**)(_QWORD))(v1 + 9344))(*(_QWORD *)(v1 + 12168));
  *(_QWORD *)(v1 + 12168) = 0;
  *(_DWORD *)(v1 + 10116) = 0;
  v6 = *(_DWORD *)(v1 + 11264) + 1;
  *(_DWORD *)(v1 + 11844) = v4 + v2;
  *(_DWORD *)(v1 + 11264) = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                                      + 8
                                                      * ((969
                                                        * (((v3 + 40) ^ (v6 == ((v3 - 1795724082) & 0x6B088DDF)
                                                                                              - 2193)) & 1)) ^ v3))
                                          - 4))(v5);
}

void sub_100392AA8(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 11536);
  *(_DWORD *)(v3 + 8) = a1;
  *(_QWORD *)v3 = v2;
  *(_DWORD *)(v3 + 16) = 2;
  JUMPOUT(0x10028C314);
}

uint64_t sub_100392B44()
{
  unsigned int v0;
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v6 = *(unsigned __int16 *)(*(_QWORD *)(v4 + 11640) + v0) | (*(unsigned __int8 *)(*(_QWORD *)(v4 + 11640) + v0 + 2) << 16) | (*(unsigned __int8 *)(*(_QWORD *)(v4 + 11640) + v0 + 3) << (v2 ^ 0x3F));
  *(_DWORD *)(v4 + 11516) = v6 + v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((102 * (((v2 - 8) ^ (v6 + v1 > v3)) & 1)) ^ v2))
                            - 12))();
}

void sub_100392BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11576) = *(_QWORD *)(v2 + 8 * v0) + (v0 + 649) - 821;
  JUMPOUT(0x10028C2D0);
}

uint64_t sub_100392BF8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v0 + v3 - 169) ^ (9482 * (v2 == v1))))
                            - (v0 + v3 + 1917)
                            + 2189))();
}

uint64_t sub_100392C38()
{
  uint64_t (*v0)(_QWORD, _QWORD, uint64_t);
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v0(*(_QWORD *)(v1 + 10280), (*(_DWORD *)(v1 + 11844) + *(_DWORD *)(v1 + 10116)), 969095531);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * (((v3 != 0) * (73 * (v2 ^ 0x88C) - 2104)) ^ v2));
  *(_QWORD *)(v1 + 10280) = v3;
  return ((uint64_t (*)(void))(2235371539 - ((v2 - 843213274) & 0xB77F715F) + v4 - 4))();
}

uint64_t sub_100392CC4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((19
                                                       * (((*(_DWORD *)(v0 + 10116)
                                                          - 879100643
                                                          - ((*(_DWORD *)(v0 + 10116) << ((v1 - 80) & 0xCF ^ 0xC4)) & 0x9733FA3A)) ^ 0xCB99FD1D) != (v1 ^ 0x5A6) - 3555)) ^ v1))
                                         - 12))(*(_QWORD *)(v0 + 12168));
}

uint64_t sub_100392D40()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (11 * (v0 > 7)))) - 8))();
}

uint64_t sub_100392DE4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v6 = a1 - v4 - v3 - v2 - (unint64_t)(v1 ^ 0x9D1u) - 0x28802598B30166 < 0x20;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v1 + 3) | 7) ^ v6) & 1 | (16
                                                                              * ((((v1 + 3) | 7) ^ v6) & 1))) ^ v1)))();
}

uint64_t sub_100392E50()
{
  unsigned int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v0 < 0x20) ^ (v1 + 33)) & 1) * (v3 + v1 - v2 + 1070 + 196)) ^ v1)))();
}

uint64_t sub_100392E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v6 = a1 + (v2 - 1);
  v7 = *(_OWORD *)(v6 - 31);
  v8 = v4 + (v2 - 1) + a2;
  *(_OWORD *)(v8 - 15) = *(_OWORD *)(v6 - 15);
  *(_OWORD *)(v8 - 31) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((35 * ((v2 & 0xFFFFFFE0) == 32)) ^ (v3 + 2289)))
                            - (((v3 + 943) | 0x328u) ^ 0x7EFLL)))();
}

void sub_100392EEC()
{
  JUMPOUT(0x100392EA0);
}

uint64_t sub_100392EF8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 994) | 0x304) ^ 0x713) * (v1 != v0)) ^ v2)))();
}

uint64_t sub_100392F28()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((2513 * (((v1 + 2059591176 + v1 - v2 - 1529 + 2796) & v0) != 0)) ^ v1)))();
}

uint64_t sub_100392F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 7 + (~(_DWORD)v3 + v2) + a2) = *(_QWORD *)(a1 - 7 + (~(_DWORD)v3 + v2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v3 - (v2 & 0xFFFFFFF8) == -8) * ((v4 - 4080) ^ 0x3648)) ^ v4))
                            - 12))();
}

uint64_t sub_100392FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;

  *(_QWORD *)(v5 + v7 + a3) = *(_QWORD *)(v3 + v7);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((a2 == 0) * v6) ^ v4)) - 12))(a1, a2 + 8);
}

uint64_t sub_100392FF8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + ((v1 - 2079520524) | 0x1300016) - 46) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_10039303C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2 - 1;
  *(_BYTE *)(v4 + ((v3 ^ 0x7AC2EFE8) & v7) + a2) = *(_BYTE *)(a1 + ((v3 ^ 0x7AC2EFE8) & v7));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * (int)((10770 * (((v3 ^ 0x7AC2EFE8) & v7) == 0)) ^ (v5 + v3 + 2679)))
                            - 8))();
}

uint64_t sub_100393090@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((120 * (((v1 == 246777912) ^ (a1 - 4)) & 1)) ^ (a1 + 2059604470)))
                            - ((a1 + 585496032) & 0x57DCFEBF)
                            + 1203))();
}

uint64_t sub_1003930FC()
{
  int v0;
  _QWORD *v1;
  int v2;
  int v3;
  void (*v4)(_QWORD);

  v3 = v0 ^ (v2 + 1161);
  v4 = (void (*)(_QWORD))v1[1168];
  v4(v1[1285]);
  v4(v1[1521]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1[1218]
                                        + 8
                                        * (int)(((((2 * (v3 ^ 0x853D0014) - 2062749699) | 0x300014) + 2059597589)
                                               * (v1[1457] != 0)) ^ (2 * (v3 ^ 0x853D0014))))
                            - 12))();
}

void sub_10039312C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 10152);
  *(_QWORD *)(v1 + 72) = **(_QWORD **)(v0 + 11536);
  *(_DWORD *)(v1 + 64) = **(_DWORD **)(v0 + 9768);
  JUMPOUT(0x100393160);
}

uint64_t sub_1003931C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(v2 + 36) = 1;
  *(_QWORD *)(v1 + 11656) = *(_QWORD *)(*(_QWORD *)(v1 + 11720) - 0x2CB6A504094F3C81);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((*(_DWORD *)(v4 + 16) == 1) * ((a1 ^ (v5 - 2)) + 5)) ^ (v3 + a1 - 695)))
                            - ((4099 * (a1 ^ (v5 - 2))) ^ 0x200ALL)))();
}

void sub_100393290(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1385];
  *(_QWORD *)(v2 + 16) = *a1;
  *(_DWORD *)(v2 + 24) = *(_DWORD *)(v1[1365] - 0x6F7087687A71D696);
  *(_DWORD *)(v2 + 12) = 0;
  v1[1297] = v2 + 12;
  v3 = v1[1529];
  *(_QWORD *)v2 = **(_QWORD **)(v3 + 40);
  *(_DWORD *)(v2 + 8) = *(_DWORD *)(*(_QWORD *)(v3 + 40) + 8);
  v1[1302] = v2 + 8;
  JUMPOUT(0x1003932F8);
}

uint64_t sub_1003933AC(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 - 2062749699) | 0x300014) + 2059597589) * (a1 != 0)) ^ v1))
                            - 12))();
}

uint64_t sub_100393400()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((*(_QWORD *)(v0 + 12272) == 0) ^ (v1 - 24)) & 1)
                                * ((v2 + v1 + 3109) ^ 0x26E5)) ^ (v2 + v1 + 3109))))();
}

uint64_t sub_100393450()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 + 2059604820) * (v0 == 246777912)) ^ (v1 + 2059598270))))();
}

void sub_100393494(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v1 + 11720) - 0x2CB6A504094F3C81) = **(_QWORD **)(v1 + 12272);
  *(_DWORD *)(*(_QWORD *)(v1 + 10920) - 0x6F7087687A71D696) = **(_DWORD **)(v1 + 11096);
  *(_QWORD *)(v1 + 11424) = *(_QWORD *)(v2 + 8 * (a1 - 185)) + ((89 * ((a1 - 185) ^ 0x1Cu)) ^ 0xFFFFFFFFFFFFE75BLL);
  JUMPOUT(0x10028C948);
}

uint64_t sub_100393F60()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((9626 * (v0 == ((v1 - 2056319005) & 0xF553F347 ^ 0xEB59B7A))) ^ (v1 + 2059596960)))
                            - 4))();
}

uint64_t sub_100393FC4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v6;

  v3 = **(_QWORD **)(v1 + 10480);
  *(_QWORD *)(v1 + 11464) = v3;
  *(_DWORD *)(v1 + 12268) = **(_DWORD **)(v1 + 12136);
  *(_QWORD *)(v1 + 11848) = 0x375C689E49717F90;
  if (v3)
    v4 = *(_QWORD *)(v1 + 10992) == 0;
  else
    v4 = 1;
  v6 = v4 || *(_QWORD *)(v1 + 11600) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v0 - 396795238) ^ v6) & 1) == 0) * (((v0 - 4926) | 2) + 4048)) ^ v0))
                            - 8))();
}

void sub_100394070()
{
  int v0;
  uint64_t v1;
  int v2;

  v2 = -v0 & 0xF;
  *(_DWORD *)(v1 + 11044) = v2;
  *(_DWORD *)(v1 + 10256) = v2 + v0;
  JUMPOUT(0x1003940D0);
}

uint64_t sub_100394150()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1003941B8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  **(_QWORD **)(v1 + 10904) = v2;
  v5 = *(_QWORD *)(v1 + 10752);
  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(v3 + 8 * (a1 + v4 + 148)))(v2, 1, **(unsigned int **)(v1 + 11856), v5);
  v6 = (*(uint64_t (**)(uint64_t))(v1 + 4408))(v5);
  return (*(uint64_t (**)(uint64_t))(v1 + 10384))(v6);
}

uint64_t sub_100394268()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  v3 = (*(uint64_t (**)(void))(v0 + 9344))();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 9744)
                                            + 8
                                            * (((((*(_QWORD *)(v0 + 12272) == 0) ^ (v1 - 24)) & 1)
                                              * ((v2 + v1 + 3109) ^ 0x26E5)) ^ (v2 + v1 + 3109))))(v3);
}

uint64_t sub_1003942C0@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((846 * (((*v1 == 0) ^ a1) & 1)) ^ a1)))();
}

uint64_t sub_1003942F0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(void);
  int v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = (a1 - 3102) | 0x1C04;
  v3();
  v5 = *(_QWORD *)(v1 + 9744);
  *v2 = 0;
  v6 = *(_QWORD **)(v1 + 10152);
  v6[2] = 0;
  v6[9] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((73 * (((v4 ^ 0xEC7 ^ (v6[6] == 0)) & 1) == 0)) ^ v4)) - 4))();
}

uint64_t sub_10039434C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  (*(void (**)(void))(v0 + 9344))();
  v4 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)(v2 + 48) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((16039 * (v3 & ~((v1 - 3095) ^ (*(_QWORD *)(v2 + 72) == 0)))) ^ v1))
                            - 4))();
}

uint64_t sub_100394398()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  v4 = v3();
  v5 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)(v2 + 72) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((12720 * (*(_DWORD *)(v2 + 84) == 3)) ^ v1 ^ 0xEC7))
                                          - (((v1 ^ 0xEC7) - 738629851) & 0x2C0697A6)
                                          + 4764))(v4);
}

uint64_t sub_1003943F0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*(_QWORD *)(v0 + 96) != 0) * ((v1 - 308) ^ 0x14B2)) ^ v1))
                            - 8))();
}

uint64_t sub_10039441C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  v4 = v3();
  v5 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)(v1 + 96) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8 * ((*(_QWORD *)(v0 + 10480) != 0) | (v2 - 980) | 0x2A0))
                                          - ((((v2 - 980) | 0x2A0) - 851515341) & 0x32C11F2B)
                                          + 6651))(v4);
}

uint64_t sub_100394470()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*v1 != 0) * (((v0 + 1372) | 0x203) + 6173)) ^ v0)) - 8))();
}

void sub_1003944A4()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  void (*v3)(void);

  v3();
  *v2 = 0;
  *(_QWORD *)(v0 + 11016) += (724 * ((v1 - 666449781) & 0x27B93ED3 ^ 0x1A04u)) ^ 0xFFFFFFFFFFFFECFCLL;
  JUMPOUT(0x1003944ECLL);
}

uint64_t sub_100394530()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((13480
                                          * (((v1 + 0x80) ^ (**(_QWORD **)(v0 + 11968) == 0)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_100394570()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((3361 * ((((v1 - 1191095209) ^ (**(_QWORD **)(v0 + 11824) == 0)) & 1) == 0)) ^ v1))
                            - 12))();
}

uint64_t sub_1003945BC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  v3 = ***(_QWORD ***)(v0 + 10696) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v3 << 6) | (v3 << 7)) ^ v1)) - 31 * (v1 ^ 0x237Cu) + 8858))();
}

uint64_t sub_1003946E4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((3117
                                          * (((((v1 ^ 0x33D2) - 1131787226) ^ (***(_QWORD ***)(v0 + 10368) == 0)) & 1) == 0)) ^ v1 ^ 0x33D2))
                            - 12))();
}

uint64_t sub_10039474C()
{
  uint64_t v0;
  int v1;
  _QWORD **v2;
  void (*v3)(void);
  uint64_t v4;

  v3();
  v4 = *(_QWORD *)(v0 + 9744);
  **v2 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)(((((((v1 ^ 0x1C76) - 2145652159) | 0x5211010) - 8) ^ (((v1 ^ 0x1C76) + 86049342) | 0x801C0013))
                                               * (*(_QWORD *)(v0 + 9824) == 0)) ^ v1 ^ 0x1C76))
                            - 8))();
}

void sub_1003947B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 11016) -= 240;
  JUMPOUT(0x10039482CLL);
}

uint64_t sub_100394838@<X0>(unsigned __int8 a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v1 + 11832);
  *(_DWORD *)(v1 + 10860) = v3;
  return (*(uint64_t (**)(void))(v4 + 8 * ((12353 * (((v5 == 0) ^ a1) & 1)) ^ (v2 + 2059600334))))();
}

void sub_100394874()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 9344))();
  *(_QWORD *)(v0 + 11832) = 0;
  **(_QWORD **)(v0 + 9832) = 0;
  JUMPOUT(0x1003948A8);
}

uint64_t sub_100394950()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((990 * (*(_QWORD *)(v1 - 0x729BE86CD6365931) == 0)) ^ (v2 + 3263)))
                            - 4))();
}

uint64_t sub_100394988()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  (*(void (**)(void))(v0 + 9344))();
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 9744)
                              + 8
                              * (((2 * (*(_QWORD *)(v1 - 0x729BE86CD6365911) != 0)) | (32
                                                                                         * (*(_QWORD *)(v1 - 0x729BE86CD6365911) != 0))) ^ (v3 + v2 + 2497))))();
}

uint64_t sub_1003949CC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  (*(void (**)(void))(v0 + 9344))();
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v0 + 9928) + 112) == 0)
                                          * ((((v2 + v1 - 490) | 0x40) - 4341) ^ v1 ^ (v3 + 54))) ^ (v2 + v1 - 441)))
                            - 8))();
}

void sub_100394AA0(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = (a1 - 4446) | 0x58;
  (*(void (**)(void))(v1 + 9344))();
  v4 = *(_QWORD *)(v1 + 9744);
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v1 + 12072) = ((v3 - 2059595843) ^ 0xFFFFFFFF7AC2EFEFLL) + *(_QWORD *)(v4 + 8 * v3);
  JUMPOUT(0x100394B34);
}

uint64_t sub_100394B64@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((*(_DWORD *)(v2 + 148) == 1) * (a1 + 8454)) ^ a1))
                            - ((a1 - 1457769609) & 0x56E3D0D6)
                            + 4242))();
}

uint64_t sub_100394BAC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8 * (int)(((*(_QWORD *)(v3 + 16) != 0) * ((((((v1 + 956194087) & 0xC701967A) - 1040) | 0x404) + 1111) ^ (((v1 + 956194087) & 0xC701967A) + 1249095582) & 0xB58C5CBF)) ^ (v1 + 956194087) & 0xC701967A)))(a1, 4112, 4256, 0x9E34C395E7F2E1F8, 4132, 4102, 5294);
}

uint64_t sub_100394C4C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BOOL4 v5;

  v5 = a1 + *(_QWORD *)(v3 + 8) - 1 > v4;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v5) | (16 * v5)) ^ v1)))();
}

uint64_t sub_100394C84(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((*(_QWORD *)(v5 + v7 + 20 * (v8 ^ a3) + 3166 + a4) == 0xE1CB3C6A180D0D7ALL) * a5) ^ (20 * (v8 ^ a3)))))();
}

uint64_t sub_100394CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_QWORD *)(*(_QWORD *)(v8 + 24) + 16) == v8) * (((v6 - 936) | a6) + 3568)) ^ v6)))();
}

uint64_t sub_100394D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v8 + 8
                                   * (((*(_QWORD *)(*(_QWORD *)(v9 + 16) + 24) == v9) * ((v7 ^ a7) + 3649)) ^ v7)))();
}

uint64_t sub_100394D34@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  int v10;

  v10 = 386 * (v1 ^ 0x433);
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(*(_QWORD *)(v6 + 16) + 24) = *(_QWORD *)(v6 + 24);
  *a1 = 0;
  *(_DWORD *)(v4 + 144) = v10 + *(_DWORD *)(v4 + 144) - 4247;
  (*(void (**)(uint64_t))(v5 + 9344))(v6);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 9744) + 8 * (((v7 + ((v10 - 3206) | v9) == 1095) * v8) ^ v10)) - 8))(0x9E34C395E7F2F286, 4112, 4256, 0x9E34C395E7F2E1F8, 4132, 4102, 5294);
}

uint64_t sub_100394DF0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  __clrex();
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * a1) - (v1 ^ 0x21D)))();
}

uint64_t sub_100394E18@<X0>(int a1@<W8>, unsigned int a2@<W0>)
{
  unsigned int *v2;
  unsigned int v3;

  while (1)
  {
    v3 = __ldaxr(v2);
    if (v3 != 23958)
      break;
    if (!__stlxr(a2, v2))
      JUMPOUT(0x100394DF8);
  }
  return sub_100394DF0(a1);
}

uint64_t sub_100394E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 10448) = v1;
  *(_QWORD *)(v2 + 9840) = v0;
  **(_DWORD **)(v2 + 8336) = 23958;
  return (*(uint64_t (**)(void))(v2 + 12072))();
}

void sub_100394E6C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 11016) -= 1152;
  **(_DWORD **)(v0 + 7968) = *(_DWORD *)(v0 + 10860) ^ 0xEB58838;
  JUMPOUT(0x10028C1FCLL);
}

uint64_t sub_100394EA4(int a1)
{
  uint64_t v1;
  _BYTE *v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 11256) = v2;
  *v2 = **(_BYTE **)(v1 + 10440);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((106 * (*(_DWORD *)(v1 + 10000) > (a1 + v4 - 275))) ^ (v3 + v4 + 692)))
                            - 4))();
}

uint64_t sub_100394EF4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;
  BOOL v7;

  v5 = *(_QWORD *)(v1 + 11256);
  if (*(_BYTE *)(v2 + 1) == 47)
  {
    *(_BYTE *)(v5 + 1) = 0;
    *(_DWORD *)((uint64_t (*)(void))*(&off_1004ECA20 + a1 - 2059595362))() = 0;
    v6 = mkdir((const char *)v5, 0x1EDu) == -1;
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * ((951 * v6) ^ 0x1C2A)) - 4))(2059596029);
  }
  else if (*(_BYTE *)(v2 + 1))
  {
    *(_BYTE *)(v5 + 1) = *(_BYTE *)(v2 + 1);
    return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((6868 * (v3 == 2)) ^ 0xF6A)) - 4))();
  }
  else
  {
    v7 = (*(uint64_t (**)(uint64_t, void *))(v1 + 6120))(v2, &unk_100445450) == 0;
    return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744) + 8 * ((15366 * ((v7 ^ 0x3D) & 1)) ^ 0x153D)) - 4))();
  }
}

uint64_t sub_100395060(int a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 11848) = v2 + 0x375C689E49717F90;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((4533
                                          * (*(_DWORD *)(v1 + 12268)
                                           + (v3 ^ 0x1C21DA5E)
                                           - ((2 * *(_DWORD *)(v1 + 12268)) & 0x32399492) != 0x991CCA49)) ^ (a1 + v3 + 558)))
                            - 12))();
}

uint64_t sub_1003950E4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((a1 - 17 < ((a3 + 2425) | 0x114u) - 4896)
                                          * (a7 + ((a3 - 2061437047) | 0x1C1004) - 271)) ^ a3))
                            - 12))();
}

uint64_t sub_100395140@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BOOL4 v16;

  v8 = (a1 - 1) + v6;
  v9 = ((_BYTE)a1 - 1) & 0xF;
  v10 = v9 + v3 - v8;
  v11 = (v9 | a3) - v8;
  v12 = (v9 | v4) - v8;
  v16 = (unint64_t)(v5 - v6) > 0xF
     && v10 > 0xF
     && v11 >= (unint64_t)((a2 - 314587224) & 0x97FD3557) - 2235371527u
     && v12 >= (unint64_t)((a2 - 3333) | 0x20u) - 1570;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((46 * v16) ^ a2)) - 8))();
}

uint64_t sub_1003951D0(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((189 * (a1 >= ((a6 + 6069) ^ 0x1DF7u))) ^ a6)) - 12))();
}

uint64_t sub_10039520C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16x4_t v17;
  int8x16x4_t v18;

  v11 = a3 - 4;
  *(_QWORD *)(v7 + 9736) = v9;
  v17.val[1].i64[0] = ((_BYTE)a1 + 13) & 0xF;
  v17.val[1].i64[1] = ((_BYTE)a1 + 12) & 0xF;
  v17.val[2].i64[0] = ((_BYTE)a1 + 11) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)a1 + 10) & 0xF;
  v17.val[3].i64[0] = ((_BYTE)a1 + 9) & 0xF;
  v17.val[3].i64[1] = ((v11 ^ 0xFB) + (_BYTE)a1) & 0xF;
  v12 = a1 - 1;
  v13.i64[0] = 0xD5D5D5D5D5D5D5D5;
  v13.i64[1] = 0xD5D5D5D5D5D5D5D5;
  v17.val[0].i64[0] = (a1 - 1) & 0xF;
  v17.val[0].i64[1] = ((_BYTE)a1 + 14) & 0xF;
  v14.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_1004B0D90).u64[0];
  v18.val[0].i64[1] = ((_BYTE)a1 + 6) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)a1 + 4) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)a1 + 2) & 0xF;
  v18.val[3].i64[1] = a1 & 0xF;
  v18.val[0].i64[0] = ((_BYTE)a1 + 7) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)a1 + 5) & 0xF;
  v18.val[2].i64[0] = ((int)a1 + 3) & 0xFLL;
  v18.val[3].i64[0] = ((_BYTE)a1 + 1) & 0xF;
  v14.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_1004B0D90).u64[0];
  v15 = vrev64q_s8(vmulq_s8(v14, v13));
  *(int8x16_t *)(v8 - 15 + ((v11 ^ 0xFFFFE21CLL) & v12)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v4 + (v12 & 0xF)), *(int8x16_t *)(v3 + (v12 & 0xF))), *(int8x16_t *)(v5 + (v12 & 0xF))), *(int8x16_t *)(v6 - 15 + ((v11 ^ 0xFFFFE21CLL) & v12))), vextq_s8(v15, v15, 8uLL));
  return (*(uint64_t (**)(void))(v10 + 8 * (int)(v11 ^ (4 * ((a1 & 0xFFFFFFF0) != 16)))))();
}

void sub_100395374()
{
  JUMPOUT(0x100395308);
}

uint64_t sub_100395380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((4149
                                                                         * (((((v6 + 886) ^ 0x853D1017)
                                                                            + 4008
                                                                            - 0x548402911482536FLL) ^ *(unsigned int *)(v3 + 11044))
                                                                          + ((2 * *(unsigned int *)(v3 + 11044)) & 0x1D6FB7FA6)
                                                                          + 0x54840291B3FAE751 != v4)) ^ (v5 - 2059596854))))(a1, a2, a3, 2235371543);
}

uint64_t sub_100395604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v10 = (*(_DWORD *)(v5 + 12268) ^ 0x7FE8CB67) - 2145962855 + ((2 * *(_DWORD *)(v5 + 12268)) & 0xFFD196CE);
  v11 = v4 < v6;
  *(_BYTE *)(v7 - 0x375C689E49717F90 + v10) = *(_BYTE *)(a1 + (v10 & 0xF)) ^ *(_BYTE *)(v1 + (v10 & 0xF)) ^ *(_BYTE *)(v2 + (v10 & 0xF)) ^ ((v10 & 0xF) * (((v3 - 51) & 0xDA) - 109));
  if (v11 == (v8 == 0))
    v11 = v6 + 1 < v4;
  return (*(uint64_t (**)(void))(v9 + 8 * ((3367 * !v11) ^ v3)))();
}

uint64_t sub_1003956D4@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v8 = a1 - 1;
  *(_BYTE *)(v6 + v8) = *(_BYTE *)(v3 + (v8 & 0xF)) ^ *(_BYTE *)(v5 + v8) ^ *(_BYTE *)(a3 + (v8 & 0xF)) ^ (-43 * (v8 & 0xF)) ^ *(_BYTE *)(v4 + (v8 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((5640 * (v8 == 0)) ^ (a2 + 2059596270))) - 12))();
}

uint64_t sub_100395738()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(v0 + 10256);
  v6 = (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8072))(v5, 3035660878);
  **(_QWORD **)(v0 + 10992) = v6;
  v7 = 359378713 * ((((2 * (v4 - 192)) | 0xE82C4BDC) - (v4 - 192) + 199875090) ^ 0x86715D2A);
  v8 = v4 - 192;
  *(_DWORD *)(v8 + 20) = v7 + (v5 ^ 0x73E6F27E) + (((v2 ^ 0x1396) - 405937112) & (2 * v5)) - 45156;
  *(_DWORD *)(v8 + 24) = (v2 - 478) ^ v7;
  *(_QWORD *)v8 = v6;
  *(_QWORD *)(v8 + 8) = v1;
  v9 = v3(v4 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                                      + 8 * ((3792 * (*(_DWORD *)(v4 - 176) == 246777912)) ^ v2))
                                          - 8))(v9);
}

void sub_100395810()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  **(_DWORD **)(v0 + 11600) = v1;
  *(_DWORD *)(v0 + 11840) = 246777912;
  *(_QWORD *)(v0 + 10632) = ((v2 + 1727490106) & 0x9908A7FF) - 9096 + *(_QWORD *)(v3 + 8 * (v2 - 4718));
  JUMPOUT(0x100288CBCLL);
}

uint64_t sub_1003958A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((6043
                                          * (**(unsigned __int8 **)(v1 + 7800) == ((((v0 - 97) | 1) ^ 0x66)
                                                                                                  + ((v0 + 17) | 8)))) ^ v0))
                            - 8))();
}

uint64_t sub_1003958F0@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;

  v4 = *(_QWORD *)(v1 + 11400);
  *(_QWORD *)(v1 + 9728) = v4 - 0x31D819DB9DF1D190;
  if (v4 - 0x31D819DB9DF1D0C7 <= 0x80000)
    v5 = 0x80000;
  else
    v5 = v4 - 0x31D819DB9DF1D0C7;
  *(_QWORD *)(v1 + 9624) = *(_QWORD *)(v1 + 10104);
  *(_QWORD *)(v1 + 9720) = a1 ^ 0x7FFFFFFFFFFFFF4ELL;
  *(_QWORD *)(v1 + 9648) = *(_QWORD *)(v1 + 10728);
  v6 = v4 + 1645096561;
  *(_QWORD *)(v1 + 9656) = *(_QWORD *)(v1 + 11520);
  *(_QWORD *)(v1 + 9616) = *(_QWORD *)(v1 + 9920);
  v7 = (v4 & 0xFFFFFFFFFFFFFFF8) - 0x31D819DB9DF1D178;
  *(_QWORD *)(v1 + 9640) = *(_QWORD *)(v1 + 11920);
  if ((v6 & 0xFFFFFFF0) == 0)
    v7 = 32;
  *(_QWORD *)(v1 + 9632) = *(_QWORD *)(v1 + 10144);
  *(_QWORD *)(v1 + 9608) = v7;
  *(_QWORD *)(v1 + 9600) = v7 + 39;
  *(_QWORD *)(v1 + 9672) = (v5 & 0x7FFFFFFFFFFFFFF8) - 16;
  *(_QWORD *)(v1 + 9736) = (v5 & 0x7FFFFFFFFFFFFFF8) + 0x61CB3C6A180D0D6ALL;
  *(_DWORD *)(v1 + 9680) = (v5 & 0xFFFFFFF8) - 49;
  *(_QWORD *)(v1 + 9696) = *(_QWORD *)(v1 + 11240);
  *(_QWORD *)(v1 + 9704) = *(_QWORD *)(v1 + 10568);
  *(_DWORD *)(v1 + 9664) = -2145841148;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                          + 8
                                                                                          * (int)((((((a1 ^ 0x6E) - 2144796891) | 0x5141013) ^ (v2 + 177) ^ (((a1 ^ 0x6E) + 313) | 0x902))
                                                                                                 * (*(_QWORD *)(v1 + 9728) < *(_QWORD *)(v1 + 9720))) ^ a1 ^ 0x6E))
                                                                              - 8))(3286738145, 1008235399, 57, v1 + 12264, 7553);
}

uint64_t sub_100395B28(char a1, char a2, char a3, uint64_t a4, int a5)
{
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = v7 - 1;
  *(_BYTE *)(a4 + v9) = (v5 ^ a3 ^ (v6 + a1) & a2) * (v5 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v9 == 0) * a5) ^ v6)) - 8))();
}

uint64_t sub_100395B64()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v4 = (v0 - 112) | *(_DWORD *)(v2 + 9664);
  *(_QWORD *)(v2 + 11192) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((2534
                                          * (((*(unsigned __int8 *)(v2 + 12264 + (*(_BYTE *)(v2 + 12266) & 3)) % 0xDu
                                             + 11) & (v4 ^ 0xF)) != 0)) ^ v0))
                            - 4))();
}

uint64_t sub_100395BE8()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((v2 + ((v0 + 70769807) | 0x81051005) - 4811)
                                               * (*(_QWORD *)(*(_QWORD *)(v1 + 8200) + 176) != *(_QWORD *)(v1 + 5216))) ^ v0))
                            - 4))();
}

uint64_t sub_100395C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  uint64_t v18;
  int v19;
  _BOOL4 v20;

  v14 = *(unsigned __int8 *)(v8 + (*(_BYTE *)(v10 + 12265) & 3));
  v15 = (*(_QWORD *)(v10 + 9600)
       + (v14
                         - (((253 * v14) >> 14) | (((253 * v14) >> 14) << 6)))) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v9 - 535);
  v17 = v15 > (v16 ^ 0x7FFFFFFF1933CFD7);
  v18 = (((_DWORD)v16 + a8) & v11 ^ v12) + *(_QWORD *)(a1 + 8);
  v19 = v17 ^ (v18 < (uint64_t)0x80000000E6CC20DBLL);
  v20 = v18 < v15 + 3872137435;
  if (!v19)
    v17 = v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (int)((463 * v17) ^ v16)) - 8))();
}

uint64_t sub_100395D04(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (int)(((*(_QWORD *)(a7 + 16) != *(_QWORD *)(v7 + 5216))
                                               * (v8 + ((a1 + 4116) ^ 0x853D00E4) - 992)) ^ a1))
                            - 8))();
}

void sub_100395D54()
{
  JUMPOUT(0x100395CA8);
}

uint64_t sub_100395D5C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((106
                                          * (((v2 + 1391251436) & 0xAD131FFF ^ 0xE7F2F2BA) + v1 - v0 >= ((v2 - 2002) ^ 0xFFFFF6FE))) ^ (v2 - 2002)))
                            - 12))();
}

uint64_t sub_100395DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;

  v12 = (_QWORD *)(a7 + v7 - 0x61CB3C6A180D0D7ALL);
  *(_QWORD *)(v9 + 9624) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((*v12 == v7) * ((v8 - 2059595976) ^ (v10 + 459))) ^ v8)) - 8))();
}

uint64_t sub_100395E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(2235371539
                            - (v8 + v7 - 223)
                            + *(_QWORD *)(v9 + 8 * ((6321 * (*(_QWORD *)(*(_QWORD *)(a7 + 24) + 16) == a7)) ^ v7))
                            - 4))();
}

uint64_t sub_100395E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (int)(((*(_QWORD *)(*(_QWORD *)(a7 + 16) + 24) == a7)
                                               * ((v7 + 1172450952) & 0xBA1DF2FF ^ 0x3C3D)) ^ v7))
                            - ((v7 + 1172450952) ^ 0x45E22F6FLL)))();
}

uint64_t sub_100395EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  *(_QWORD *)(v10 + 16) = v11;
  *(_QWORD *)(a7[2] + 24) = a7[3];
  *(_QWORD *)(*(_QWORD *)(v12 + 8200) + 152) += a7[1] - 0x61CB3C6A180D0D7ALL;
  a7[1] = 0xC39678D4301A1AF4 - a7[1];
  **(_QWORD **)(v12 + 9624) = 0x61CB3C6A180D0D7ALL;
  v14 = v7 - 16;
  *(_QWORD *)(v12 + 10672) = v14;
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((29 * (((v14 == 0) ^ (v8 - 72)) & 1)) ^ v8)) - 12);
  *(_QWORD *)(v12 + 9656) = v9;
  *(_QWORD *)(v12 + 9648) = v9;
  return v15();
}

uint64_t sub_100395FA0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v6 = (((v1 + 69266863) | 0x811C0001) ^ 0xFFFFFFFF7AC2EFE8) + v0;
  v4[1334] = v6;
  *(_BYTE *)(v2 + v6) = (v3 ^ 0xBA) * (v3 + 17);
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((29 * (v4[1334] != 0)) ^ v1)) - 12);
  v4[1207] = v2;
  v4[1206] = v2;
  return v7();
}

uint64_t sub_100396024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v11 = a7 + a1 - 0x61CB3C6A180D0D7ALL;
  *(_QWORD *)(v9 + 12112) = v7;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v10
                                      + 8
                                      * (int)(((v7 != (v8 ^ 0x921)) * (((v8 ^ 0x1A32) + 11) ^ 0x1313)) ^ v8 ^ 0x1A32))
                          - 4);
  *(_QWORD *)(v9 + 9616) = v11;
  return v12();
}

uint64_t sub_1003960A4(uint64_t a1, char a2, int a3, unint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = v8 - 1;
  *(_QWORD *)(v11 + 12112) = v13;
  *(_BYTE *)(a8 + v13) = (v9 ^ a2) * (v9 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((*(_QWORD *)(v11 + 12112) == 0) * a3) ^ v10))
                            - ((a5 + v10 - 982) ^ a4)))();
}

uint64_t sub_1003960EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v11 = *(_QWORD *)(a7 + 8);
  *(_QWORD *)(v9 + 9640) = a7 + v11 - 0x61CB3C6A180D0D7ALL - v7;
  v12 = (_QWORD *)(a7 + v11 - 0x61CB3C6A180D0D7ALL);
  *(_QWORD *)(v9 + 9632) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (int)(((*v12 == v11) * (((v8 - 1993298488) & 0xF19242FF) + 10677)) ^ (v8 + 2059595976)))
                            - 8))();
}

uint64_t sub_10039617C@<X0>(uint64_t a1@<X6>, uint64_t (*a2)(void)@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = v4 - v3;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = *(_QWORD **)(v5 + 9640);
  *v8 = v7;
  v8[1] = ((v6 + v2 - 223) ^ 0x61CB3C6A9D301D6DLL) - v3;
  **(_QWORD **)(v5 + 9632) = 0x61CB3C6A180D0D7ALL;
  *(_QWORD *)(*(_QWORD *)(v5 + 8200) + 152) += v3;
  return a2();
}

uint64_t sub_1003961E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 9688) = v2;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3 * (v1 == 0)) ^ (v3 - 2059596287))))();
}

uint64_t sub_10039622C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  v3 = (((((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8072))(a1, 1941799030) == 0) ^ (a2 - 71)) & 1)
      * (((a2 - 3043) | 0x800) ^ 0x2F4)) ^ (a2 + 428);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 9744) + 8 * v3))();
}

uint64_t sub_1003962D0(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *a1 = 0x61CB3C6A180D0D7ALL;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 8200) + 184) + 16) == *(_QWORD *)(v1 + 5216))
                                * (v2 ^ 0x161C)) ^ v2)))();
}

uint64_t sub_100396320()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(_QWORD *)(*(_QWORD *)(v1 + 176) + 24) == v0)
                                     * (((v2 - 620056425) ^ 0xDB0A9FE4) + ((v2 - 620056425) & 0x24F54F43))) ^ v2)))();
}

uint64_t sub_10039636C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = *(_DWORD *)(v3 + 9680) > 0xFFFFFFDE;
  v4[2] = v1;
  v4[3] = *(_QWORD *)(v2 + 184);
  *(_QWORD *)(v2 + 184) = v4;
  *(_QWORD *)(v4[3] + 16) = v4;
  v4[1] = *(_QWORD *)(v3 + 9736);
  return (*(uint64_t (**)(void))(v5 + 8 * ((v6 * ((a1 + 872514683) & 0x4BFE72FD ^ 0x29C)) | a1)))();
}

uint64_t sub_1003963D0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(a1 + *(_QWORD *)(v3 + 9672));
  *v5 = *(_QWORD *)(v3 + 9736);
  v5[1] = 0xE1CB3C6A180D0D7ALL;
  ++*(_DWORD *)(v2 + 144);
  return (*(uint64_t (**)(void))(v4 + 8 * (((*(_QWORD *)(v2 + 16) != 0) * ((v1 - 537) ^ 0x257E)) ^ v1)))();
}

uint64_t sub_10039642C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((4339 * (((**(_QWORD **)(v1 + 3040) == 0) ^ (v0 + 106)) & 1)) ^ v0)))();
}

uint64_t sub_10039645C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((**(_QWORD **)(v1 + 2520) == 0) ^ ((v0 | 0x58) + 62)) & 1)
                                          * (((v0 | 0x158) - 3291) ^ 0x2B4C)) ^ (v0 | 0x158)))
                            - 12))();
}

uint64_t sub_1003964A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((**(_QWORD **)(v1 + 2264) != 0) * (((v0 - 665) | 0x80) + 249)) ^ v0)))();
}

uint64_t sub_1003964CC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((**(_QWORD **)(v1 + 2104) == 0) ^ (-19 * (v0 ^ 0xBE))) & 1)
                                * ((v0 - 537) ^ 0x2A37)) ^ v0)))();
}

uint64_t sub_100396510()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((156 * (((v0 ^ 0x1CB9 ^ (**(_QWORD **)(v1 + 2000) == 0)) & 1) == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_100396564()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((**(_QWORD **)(v1 + 1984) == 0) * (v0 ^ 0x1162 ^ (v0 + 1081) ^ 0x154B)) ^ v0))
                            - 8))();
}

uint64_t sub_1003965A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((12705 * (**(_QWORD **)(v1 + 1960) != 0)) ^ v0))
                            - (((v0 ^ 0x155Bu) + 4402) ^ 0x11D6)))();
}

uint64_t sub_1003965E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((**(_QWORD **)(v1 + 1944) != 0) * ((v0 ^ 0x1172) + 3034)) ^ v0))
                            - 8))();
}

uint64_t sub_100396610@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((**(_QWORD **)(v1 + 1928) == 0) ^ (((a1 + 25) ^ 0x1F) + 1)) & 1)
                                * ((a1 + 537) ^ 0x188A)) ^ (a1 + 537))))();
}

uint64_t sub_100396658()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v0 - 1190) | 0xD2) ^ 0x118F) * (**(_QWORD **)(v1 + 1920) == 0)) ^ v0))
                            - ((v0 - 1823651331) & 0x6CB2A0FC)
                            + 156))();
}

uint64_t sub_1003966AC()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((**(_QWORD **)(v1 + 1912) != 0)
                                               * (((v0 - 655963355) & 0x271923A8) + 13727)) ^ v0))
                            - (v0 ^ 0x11DALL)))();
}

uint64_t sub_100396700()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((**(_QWORD **)(v1 + 1904) != 0) * (v0 + 2822)) ^ v0))
                            - ((v0 - 888817558) & 0x34FA3ABA)
                            + 148))();
}

uint64_t sub_100396744()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v0 - 2061852668) & 0x7AE55FFB) - 3291) ^ 0xF67)
                                          * (**(_QWORD **)(v1 + 1896) != 0)) ^ (v0 + 1111)))
                            - 8))();
}

uint64_t sub_100396790()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((10624 * (**(_QWORD **)(v1 + 1888) != 0)) ^ v0))
                            - ((20 * ((v0 - 1364408958) & 0x51532FBB ^ 0x2B1)) ^ 0xACLL)))();
}

uint64_t sub_1003967E8()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((2524 * (**(_QWORD **)(v1 + 1880) != 0)) ^ v0)))();
}

void sub_100396828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + 9752) = v9;
  *(_QWORD *)(v7 + 11432) = v10;
  *(_QWORD *)(v7 + 11368) = a7;
  *(_QWORD *)(v7 + 10104) = *(_QWORD *)(v7 + 9624);
  *(_QWORD *)(v7 + 10728) = *(_QWORD *)(v7 + 9648);
  *(_QWORD *)(v7 + 11520) = *(_QWORD *)(v7 + 9656);
  *(_QWORD *)(v7 + 9920) = *(_QWORD *)(v7 + 9616);
  *(_QWORD *)(v7 + 11920) = *(_QWORD *)(v7 + 9640);
  *(_QWORD *)(v7 + 10144) = *(_QWORD *)(v7 + 9632);
  *(_QWORD *)(v7 + 10768) = 0;
  *(_QWORD *)(v7 + 10488) = a6;
  *(_QWORD *)(v7 + 11176) = v8;
  *(_QWORD *)(v7 + 11240) = v8;
  *(_QWORD *)(v7 + 10568) = v8;
  *(_QWORD *)(v7 + 11376) = v8;
  (*(void (**)(uint64_t))(v7 + 9344))(v8);
  **(_DWORD **)(v7 + 8336) = 23958;
  JUMPOUT(0x10039415CLL);
}

void sub_100396954(uint64_t a1)
{
  uint64_t v1;
  int v2;

  ((void (*)(_QWORD, uint64_t, _QWORD, uint64_t))*(&off_1004ECA20 + (v2 ^ 0x167C)))(*(_QWORD *)(v1 + 10400), 1, *(unsigned int *)(v1 + 10820), a1);
  (*(void (**)(uint64_t))(v1 + 4408))(a1);
  *(_DWORD *)(v1 + 9912) = 178276286;
  JUMPOUT(0x1003969B8);
}

void sub_1003969DC()
{
  JUMPOUT(0x100396A64);
}

void sub_1003969E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9[1219] = v11;
  v9[1429] = v12;
  v9[1421] = a7;
  v9[1263] = v9[1203];
  v9[1341] = v9[1206];
  v9[1440] = v9[1207];
  v9[1240] = v9[1202];
  v9[1490] = v9[1205];
  v9[1268] = v9[1204];
  v9[1346] = v10;
  v9[1311] = v8;
  v9[1397] = v7;
  v9[1405] = v9[1212];
  v9[1321] = v9[1213];
  v9[1422] = v9[1211];
  JUMPOUT(0x100396A48);
}

void sub_100396A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10[1219] = v12;
  v10[1429] = v13;
  v10[1421] = a7;
  v10[1263] = v10[1203];
  v10[1341] = v10[1206];
  v10[1440] = v10[1207];
  v10[1240] = v10[1202];
  v10[1490] = v10[1205];
  v10[1268] = v10[1204];
  v10[1346] = v9;
  v10[1311] = v8;
  v10[1397] = v7;
  v10[1405] = v10[1212];
  v10[1321] = v10[1213];
  v10[1422] = v11;
  JUMPOUT(0x100396A5CLL);
}

uint64_t sub_100396AF8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v1 + v3 + 1733) ^ (49 * (v2 != v0))))
                            - ((127 * (v3 ^ (v3 + 26))) ^ 0x12D6)))();
}

uint64_t sub_100396B40()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((354
                                          * (((*(_DWORD *)(*(_QWORD *)(v1 + 10176) + 40) == 0) ^ (v0 + 37)) & 1)) ^ v0))
                            + 2235371539
                            - ((v0 - 2129920707) | 0x4310000u)
                            - 4))();
}

void sub_100396BA0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11776) = *(_QWORD *)(v2 + 8 * (v0 & 0xFFFFFFFFA43703ADLL))
                          + ((((v0 & 0xA43703AD) + 899) | 1) ^ 0xFFFFFFFFFFFFFBC5);
  JUMPOUT(0x10028CAC0);
}

uint64_t sub_100396D7C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((((24 * (v3 ^ (v3 - 5))) ^ 0x3970) * (v2 == v0)) ^ (v1 + v3 + 1780)))
                            - ((v3 ^ (v3 - 5))
                             + 2736)
                            + 2729))();
}

uint64_t sub_100396DC4()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v4 = (v0 + 1480);
  v5 = **(_DWORD **)(v2 + 9984) + **(_DWORD **)(v2 + 9856) + **(_DWORD **)(v2 + 11760) + **(_DWORD **)(v2 + 10272);
  *(_DWORD *)(v2 + 10884) = v5;
  v6 = *(_QWORD *)(v2 + 12240);
  *(_QWORD *)(v2 + 12256) = *(_QWORD *)(v3 + 8 * v0) + (v4 ^ 0xFFFFFFFFFFFFF9BCLL);
  *(_DWORD *)(v2 + 11116) = v5;
  *(_QWORD *)(v2 + 10184) = v2 + 10708;
  *(_QWORD *)(v2 + 11336) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((v6 != 0x62505F6DB01515E5) * ((1346 * (v4 ^ 0x645)) ^ 0x1A60)) ^ v4))
                            - ((v4 - v1 - 1324) ^ 0x853D1013)))();
}

uint64_t sub_100396E1C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v1 + v3 + 1780) ^ (14954 * (v2 == 246777912))))
                            - 2411 * ((v0 + v3 + 2465) ^ 0xAB1u)
                            + 9632))();
}

uint64_t sub_100396E6C()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_DWORD *)(v0 + 10708) - 243213176 + (v1 ^ 0x3D03) + 478;
  v3 = *(_QWORD *)(v0 + 10304);
  *(_DWORD *)(v3 + 8) = v2 + *(_DWORD *)(v0 + 10884);
  *(_DWORD *)(v3 + 12) = v2;
  v4 = (*(uint64_t (**)(void))(v0 + 8072))();
  v5 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)v3 = v4;
  *(_DWORD *)(v3 + 16) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v1 | (2 * (v4 == 0)))) - ((v1 - 4000) ^ 0x1608)))();
}

uint64_t sub_100396EF4(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  *a1 = 49;
  v5 = ((v3 - 243217222) ^ (v3 - 57)) + *(_DWORD *)(v1 + 10708) > *(_DWORD *)(v2 + 8);
  return (*(uint64_t (**)(void))(v4 + 8 * (((8 * v5) | (16 * v5)) ^ v3)))();
}

uint64_t sub_100396F44()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((13932
                                          * (v0
                                           + 1502426129
                                           - ((251 * (v1 ^ 0x15D8) - 803705039) & (2 * v0 - 486412760)) != v1 + 1745626922)) ^ v1))
                            - 4))();
}

uint64_t sub_100396FB4()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 < ((179 * ((v1 + 3901) ^ 0x253E) + 67166185) | 0x813C1004) + 2059595761;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v3) | (32 * v3)) ^ (v1 + 3901))) - 4))();
}

uint64_t sub_100397030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (v2 ^ (106
                                               * (0x9DAFA0924FEAEA1BLL - a1 - v1 + (v1 - 1) + v3 < 0x20))))
                            - ((((v2 - 2143085149) & 0x7FBCD67Fu) - 2059600950) ^ 0x853D101BLL)))();
}

uint64_t sub_1003970B0()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (199 * (v0 > 0x1F))))
                            - (v1 ^ 0x878u)
                            - (((v1 - 2129069116) | 0x4240006u) ^ 0xFFFFFFFF7AC2F3D8)))();
}

uint64_t sub_100397108@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int8x16_t v6;
  uint64_t v7;
  int8x16_t v8;

  v6.i64[0] = 0x2222222222222222;
  v6.i64[1] = 0x2222222222222222;
  v7 = v2 + ((((a1 + v4 + 2414) | 0x20u) ^ 0xFFFFF55DLL) & (v3 + 0xFFFFFFFFLL));
  v8 = veorq_s8(*(int8x16_t *)(v7 - 15), v6);
  *(int8x16_t *)(v3 + a2 - 31) = veorq_s8(*(int8x16_t *)(v7 - 31), v6);
  *(int8x16_t *)(v3 + a2 - 15) = v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((103 * ((v3 & 0xFFFFFFE0) == 32)) ^ (a1 + v4 + 1430))))();
}

void sub_100397178()
{
  JUMPOUT(0x10039712CLL);
}

uint64_t sub_100397188@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((124 * (((v1 == -246800706) ^ (a1 + 98)) & 1)) ^ a1))
                            - (a1 + 3578)
                            + 6307))();
}

uint64_t sub_1003971DC()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((**(_QWORD **)(v0 + 10304) != 0) * (v1 ^ (v2 - 1887) ^ 0x853D2E53)) ^ v1))
                            - 8))();
}

uint64_t sub_10039721C()
{
  uint64_t v0;
  int v1;
  int v2;

  (*(void (**)(void))(v0 + 9344))();
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8
                                        * ((6707 * (*(_QWORD *)(*(_QWORD *)(v0 + 11632) - 0x10418F73DD1C1D32) != 0)) ^ (v2 + v1 - 882)))
                            - 8))();
}

uint64_t sub_10039726C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  (*(void (**)(void))(v0 + 9344))();
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 9744)
                              + 8 * ((164 * (*(_QWORD *)(*(_QWORD *)(v0 + 11224) + v2) != 0)) ^ (v1 + 2059598864))))();
}

uint64_t sub_1003972AC()
{
  uint64_t v0;
  int v1;
  int v2;

  (*(void (**)(void))(v0 + 9344))();
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8
                                        * ((11147 * (*(_QWORD *)(*(_QWORD *)(v0 + 9888) - 0x10418F73DD1C1D32) != 0)) ^ (v2 + v1 + 3176)))
                            - 12))();
}

uint64_t sub_1003972F8()
{
  uint64_t v0;
  int v1;
  int v2;

  (*(void (**)(void))(v0 + 9344))();
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8
                                        * ((2404 * (*(_QWORD *)(*(_QWORD *)(v0 + 10352) - 0x10418F73DD1C1D32) != 0)) ^ (v2 + v1 + 1084)))
                            - 12))();
}

uint64_t sub_100397344()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(void))(v0 + 9344))();
  *(_QWORD *)(v0 + 11016) -= 112;
  return (*(uint64_t (**)(uint64_t))(v0 + 11424))(v1);
}

uint64_t sub_100397364()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((30 * (v0 != 246777912)) ^ (v1 + 2059596372))) - 4))();
}

uint64_t sub_1003973AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8 * ((164 * (*(_QWORD *)(*(_QWORD *)(v0 + 11224) + v2) != 0)) ^ (v1 + 2059598864))))();
}

uint64_t sub_1003973E0()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((11147 * (*(_QWORD *)(*(_QWORD *)(v0 + 9888) - 0x10418F73DD1C1D32) != 0)) ^ (v2 + v1 + 3176)))
                            - 12))();
}

uint64_t sub_100397420()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((2404 * (*(_QWORD *)(*(_QWORD *)(v0 + 10352) - 0x10418F73DD1C1D32) != 0)) ^ (v2 + v1 + 1084)))
                            - 12))();
}

uint64_t sub_100397460@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((**(_DWORD **)(v3 + 9984) + v1 <= v2) * ((89 * (a1 ^ 0xA8E)) ^ 0x65)) ^ a1))
                            - 12))();
}

uint64_t sub_100397624()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((174
                                * (((29 * (v1 ^ 0x88)) ^ (v0
                                                                         - (((3 * (v1 ^ 0x1FF3)) ^ 0x2016F6FA) & (2 * v0)) == 0)) & 1)) ^ v1 ^ 0x11DC)))();
}

uint64_t sub_100397690(int a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((5620 * (v1 >= ((v2 + a1 - 1131) ^ (v2 + 8)))) ^ a1)))();
}

uint64_t sub_10039771C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((((8 * (a1 ^ 0x151) - 2080385470) | 0x13D1005) ^ (v7 + 19))
                                          * ((unint64_t)(v6 - a4 - a3 - v4 + v5) < 0x20)) ^ (8 * (a1 ^ 0x151))))
                            - 8))();
}

uint64_t sub_100397784(uint64_t a1, int a2)
{
  unsigned int v2;
  char v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a2 | (8 * (((v2 < 0x20) ^ (a2 - v3 - 108)) & 1))))
                            - ((a2 - 3180) | 0x1160u)
                            + 6502))();
}

uint64_t sub_1003977C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v7 = (v3 - 1);
  v8 = *(_OWORD *)(v1 + v7 - 15);
  v9 = *(_OWORD *)(v1 + v7 - 31);
  v10 = v0 + v7 + v2;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((14 * ((((v5 + v4 - 778) | 0xA81u) ^ 0x1AA1) != (v3 & 0xFFFFFFE0))) ^ (v5 + v4 - 804))))();
}

uint64_t sub_100397830@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(a2 + v3) = (v5 + v4 - 55) ^ *(_BYTE *)(v2 + (v3 - 1)) ^ 0xF1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((653 * ((_DWORD)v3 == 1)) ^ (a1 + v4 + 1815))))();
}

uint64_t sub_100397874()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((89 * (v2 ^ 0x53)) ^ (**(_DWORD **)(v3 + 9856) + v0 > v1)) & 1)
                                * (((v2 - 899562799) & 0x359E2FBA) + 11450)) ^ v2)))();
}

uint64_t sub_100397A24@<X0>(unsigned int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((8286 * (v2 - ((2 * v2) & 0x2016E0EE) + ((a1 + 5346) ^ (a2 - 642)) != a2)) | a1))
                            - ((a1 - 966496682) & 0x399B9F1D ^ 0x161CLL)))();
}

uint64_t sub_100397A8C()
{
  unsigned int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((14468 * (v0 >= ((v1 - 2059603307) ^ (v2 + 8)))) ^ v1)) - 12))();
}

uint64_t sub_100397B2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((237
                                          * (v4
                                           - (v5
                                            + a4)
                                           - a1
                                           - (unint64_t)((a3 - 2059545424) & 0xFFFF1DF7)
                                           + 0x7C3FFFE77C3B4FF2 < 0x20)) ^ a3))
                            - 12))();
}

uint64_t sub_100397B88(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(_QWORD))(v5
                                           + 8
                                           * ((21 * ((((v4 + a3 - 5954 - 1581) ^ (v4 - 2400) ^ (v3 < 0x20)) & 1) == 0)) ^ (a3 - 5954))))(0);
}

uint64_t sub_100397BCC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v8 = (v5 - 1);
  v9 = *(_OWORD *)(v2 + v8 - 15);
  v10 = *(_OWORD *)(v2 + v8 - 31);
  v11 = v3 + v8 + v4;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((8660 * (((v6 + a2 + 1271) | 0x1010u) - 5627 == (v5 & 0xFFFFFFE0))) ^ (v6 + a2 + 744)))
                            - 8))();
}

uint64_t sub_100397C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;

  v8 = v3 + ((v6 + v4 - 276) | 0x973) - 2420;
  *(_BYTE *)(v0 + v8 + v2) = *(_BYTE *)(v1 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1285 * (v8 != 0)) ^ (v5 + v4 + 1941))) - 8))();
}

uint64_t sub_100397C88()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v2 + 25) ^ (**(_DWORD **)(v3 + 11760) + v0 > v1)) & 1)
                                     * (((v2 + 1101496231) & 0xBE586ED7) + 14240)) ^ v2)))();
}

uint64_t sub_100397E78@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((v2 + a1 - ((v1 + ((v3 - 1023) | 0x428) - 1212) & (2 * v2)) != a1)
                                          * ((v3 ^ 0x259C) - 8413)) ^ v3))
                            - 12))();
}

uint64_t sub_100397EC8()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((7616
                                                        * (((v0 < 8) ^ (v2 + ((v1 + 71) | 0x14) + 79)) & 1)) ^ v1))
                                          - 12))(v0);
}

uint64_t sub_100397F78(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (int)(((a3 - a6 - a5 - v6 + v7 < (unint64_t)((a2 - 2144863827) | 0x5150011u)
                                                                                       - 2235371511u)
                                                             * (((a2 + 1340727712) & 0xB0162B5E) - 9010)) ^ a2))
                                          - 8))(v8);
}

uint64_t sub_100397FF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((v4 < (((a4 - 2063340374) | 0x390015) ^ (v5 + 32)))
                                          * ((a4 - 8763) ^ 0x1A9)) ^ a4))
                            - 4))();
}

uint64_t sub_100398040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v7 = v1 + (v3 - 1);
  v8 = *(_OWORD *)(v7 - 31);
  v9 = v0 + (v3 - 1) + v2;
  *(_OWORD *)(v9 - 15) = *(_OWORD *)(v7 - 15);
  *(_OWORD *)(v9 - 31) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4646 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v5 + v4 + 2376)))
                            - ((v4 + 2059605261) ^ 0x2520)))();
}

void sub_1003980AC()
{
  JUMPOUT(0x100398054);
}

uint64_t sub_1003980B8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v9 = v6 - 1;
  *(_BYTE *)(v3 + v9 + v4) = *(_BYTE *)(v2 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * ((234 * (v9 == 276 * (a2 ^ v5) - 2208)) ^ (v7 + a2 + 346))))();
}

uint64_t sub_100398100()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * (((**(_DWORD **)(v3 + 10272) + v0 <= v1) * ((v2 - 2144) ^ 0x1883)) ^ v2))
                            - ((v2 + 1013579480) & 0xC395EFD8 ^ 0xFC8)))();
}

uint64_t sub_1003982A0@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (v3 ^ (32
                                               * ((((v3 - 1312) | 0x15) ^ (a2 + 2635))
                                                + a1
                                                - ((a1 << (((v3 - 32) ^ 0xC7) - 102)) & v2) != a2))))
                            - 12))();
}

uint64_t sub_1003982F0()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (255 * (v0 < 8))))
                            + 2235371539
                            - ((v1 - 33612552) & 0x873DDFB7)))();
}

uint64_t sub_10039839C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (v3
                                         + 4 * ((unint64_t)(v2 - (a2 + v4) - a1 - 0x2C0042888058025) < 0x20)))
                            - ((2 * ((v3 - 306224345) & 0x977D9B57 ^ 0x853D1A8E)) ^ 0x153ELL)))();
}

uint64_t sub_100398410(int a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((111
                                          * ((((a1 - 1005057508) ^ (v1 < v2 + ((a1 - 717290803) & 0xAFFDF817) - 244)) & 1) == 0)) ^ a1))
                            - 8))();
}

uint64_t sub_100398478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v8 = (v3 - 1);
  v9 = *(_OWORD *)(v1 + v8 - 15);
  v10 = *(_OWORD *)(v1 + v8 - 31);
  v11 = a1 + v8 + v2;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((121
                                          * (((16 * (v4 ^ (v6 + 252))) ^ 0x1060) == (v3 & 0xFFFFFFE0))) ^ (v5 + v4 + 1441)))
                            - 8))();
}

uint64_t sub_1003984E8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;

  v8 = ((v4 - v6 + 1171) ^ 0xFFFFFB6C) + a1;
  *(_BYTE *)(v1 + v8 + v3) = *(_BYTE *)(v2 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((2 * (v8 == 0)) | (8 * (v8 == 0))) ^ (v5 + v4 + 783))) - 12))();
}

uint64_t sub_100398530()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v0 != v1) * (89 * (v2 ^ 0xAF2) - 6195)) ^ v2))
                            - ((v2 - v3 - 2465) ^ 0x853D101BLL)))();
}

uint64_t sub_1003986EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v4 + ((v3 - 1621962796) & 0xDB702FD4) - 4033;
  *(_BYTE *)(a1 + v7 + v2) = *(_BYTE *)(v1 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((7132 * (v7 == 0)) ^ (v5 + v3 + 2678))) - 8))();
}

void sub_100398740()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 12256) = ((v0 - 1643788520) & 0x61FA3E62 ^ 0xFFFFFFFFFFFFF9B4) + *(_QWORD *)(v2 + 8 * v0);
  JUMPOUT(0x100398774);
}

uint64_t sub_1003987EC()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v0 | (v1 > 0x7F)))
                            + 2235371539
                            - ((v0 - 6510) ^ (v2 + 180))
                            - 8))();
}

uint64_t sub_100398824(uint64_t a1)
{
  return sub_100398848(a1, 4048166589);
}

uint64_t sub_100398848()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((v0 < (((v1 - 1904) | 0x608u) ^ 0x11699uLL)) * ((v1 - 1904) ^ 0x1096)) ^ v1)))();
}

uint64_t sub_100398880()
{
  unint64_t v0;
  int v1;
  char v2;
  uint64_t v3;
  int v4;

  if ((((v1 - 3011) + 62506) & v0) != 0)
    v4 = 32;
  else
    v4 = 35;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((14 * ((v0 >> (((v4 << ((v1 + 61 - v2 + 62) ^ 0x14)) ^ 0x10u) - 1)) & 1)) ^ (v1 - 3011)))
                            - 4))();
}

uint64_t sub_10039890C@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_100398950()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = ((2 * (((((v3 + 562896606) & 0x5935D74A) - 30) ^ v0) + 1)) & 0x1D8)
     + ((((((v3 - 34) & 0x4A) - 30) ^ v0) + 1) ^ 0x7FFF0BEC);
  *(_DWORD *)(v2 + 11076) = v5 - 1904214784;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1510 * ((v5 - 2147421181) > 0xFFFFFFEE)) ^ (v1 + v3 + 197))))();
}

uint64_t sub_1003989D4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((v2 + v0 - 1600) ^ 0x853D1F0C ^ (v0 - 23275347) & 0x16337FA)
                                               * ((v1 - 2147421169) > 0xFFFFFFFA)) ^ v0))
                            - 4))();
}

uint64_t sub_100398A3C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((((v1 - 4620) ^ (a1 == 243206381)) & 1) == 0)
                                          * (v2 + (v1 ^ (v3 - 2328)) + 195)) ^ v1))
                            - 4))();
}

uint64_t sub_100398A88@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * ((((v2 - 916424615) & 0x369F87EE ^ v2) * (a2 == v3)) ^ v2))
                                                   - 8))(a1, 4048166589);
}

uint64_t sub_100398ACC()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((13132
                                          * (((v1 + 127 - v2 + 1) ^ (v0 == 0x62505F6DB01515E5)) & 1)) ^ (v1 + 5247)))
                            - 410 * ((v1 + 5247) ^ 0x1958u)
                            + 1226))();
}

uint64_t sub_100398CA0()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8 * (((42 * (v1 ^ 0x483) - 3193) * ((v0 ^ 0x22u) > 8)) ^ v1))
                                         - 8))(0);
}

uint64_t sub_100398CE0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((3505
                                                        * ((v1 | 0xA1CA20EC) > ((v2 - 610707159) & 0x2466AEAA ^ 0x934B1B5D)
                                                                             + a1)) ^ v2))
                                          - 8))(1);
}

uint64_t sub_100398D44()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((((5 * (v1 ^ 0x9B3)) ^ 0xE34) + (v1 ^ 0x3AD)) * ((v0 ^ 0x20u) > 7)) ^ v1)))();
}

uint64_t sub_100398D84@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((14
                                          * (((a2 - 2059602238) ^ 0xA1C940E5) + v3 + a1 + (a2 ^ 0x15F7) - 3233 > a3 + 376784902)) ^ a2))
                            - 4))();
}

uint64_t sub_100398DF0(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  unsigned int v8;

  v8 = (a3 + 926110413) & 0xC8CCAF9F;
  *(_BYTE *)(v3 + (a1 + v4) - 0x62505F6DB01515E5) = HIBYTE(v5) - ((2 * HIBYTE(v5)) & 0x44) + v8 + 19;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((((v8 ^ 0x1654) - 6414) * (v6 < 7u)) ^ v8)) - 12))();
}

uint64_t sub_100398E70@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((16205
                                          * (((v2 + v3 + 1 + 779770516 > (a2 + 536564136)) ^ (a1 - 2) & 0xDF) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_100398EE8@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = 11 * (a1 ^ 0x1F5A);
  *(_BYTE *)(v3 + (v6 + v4) - 0x62505F6DB01515E5) = BYTE6(v5) - ((2 * BYTE6(v5)) & 0x44) + v8 - 93;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((10667
                                          * (v4 + 1287980073 + a2 - 8371 + ((v8 + 3999361) | 0x85000017) + 2059604125 <= a3 + 1044773693)) ^ v8))
                            - 8))();
}

void sub_100399054(uint64_t a1, char a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  int v5;

  *(_BYTE *)(v2 + (v5 + v3) - 0x62505F6DB01515E5) = (v4 >> (((a2 + 123) | 0x50u) - 87))
                                                                  - ((2 * (v4 >> (((a2 + 123) | 0x50u) - 87))) & 0x44)
                                                                  + 34;
  JUMPOUT(0x10039909CLL);
}

uint64_t sub_100399108(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(v3 + (v7 + v4) - 0x62505F6DB01515E5) = BYTE4(v5) - ((a3 + 123) & (2 * BYTE4(v5))) + 34;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((116
                                * (((a3 - 74) ^ (v6 > (a3 + 58))) & 1)) ^ (a3 - 6410))))();
}

uint64_t sub_100399180()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((28 * (v0 > (((v1 - 119) & 0x9F) + 107))) ^ v1))
                            - 12))();
}

uint64_t sub_1003991C4@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((7543 * (v2 - 874678661 + a1 - 4975 + 2488 * (v3 ^ 0x97Du) <= a2 - 1117885041)) ^ v3))
                            - 8))();
}

uint64_t sub_100399228@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(v2 + (a1 + v3) - 0x62505F6DB01515E5) = BYTE2(v4)
                                                                  - (((v4 >> 16) << (v5 - 111)) & 0x44)
                                                                  + 34;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((v3 - 608446635 + v6 + 1 <= (a2 - 851653015))
                                          * ((v5 - 1753) ^ 0x136B)) ^ (v5 - 2545)))
                            - 8))();
}

uint64_t sub_1003992AC(int a1)
{
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((116
                                              * (((a1 - 64) ^ (v1 > (a1 + 68))) & 1)) ^ a1)))(v2);
}

uint64_t sub_1003992EC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((a1 + 1 + v3 + ((a2 - 1716) ^ 0xDF1214Bu) <= a3 - 9299308) * (a2 + 6139)) ^ a2))
                            - 8))();
}

uint64_t sub_100399340(int a1)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = (v6 - 609) | 0x2104;
  *(_BYTE *)(v1 + (a1 + v2) - 0x62505F6DB01515E5) = (v3 >> (v8 - 86))
                                                                  - ((2 * (v3 >> (v8 - 86))) & 0x44)
                                                                  + 34;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7
                                                      + 8
                                                      * ((28
                                                        * (v4 > (((v8 - 119) & 0x9F) + 107))) ^ v8))
                                          - 12))(v5);
}

uint64_t sub_1003993CC(uint64_t a1, int a2)
{
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a2 ^ (8167 * (v2 == 2)))) - ((a2 ^ 0x5E8u) + 6852) + 9275))();
}

uint64_t sub_100399408@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((v2 + a1 + 1 - 608446635 <= (a2 - 851653015))
                                          * ((v3 + 792) ^ 0x136B)) ^ v3))
                            - 8))();
}

uint64_t sub_100399460()
{
  uint64_t v0;
  int v1;
  unsigned __int8 v2;
  unint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v0 + (v4 + v1) - 0x62505F6DB01515E5) = BYTE1(v3)
                                                                  - (((v3 >> 8) << (v5 ^ 0x96)) & 0x44)
                                                                  + 34;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((11 * (v2 != ((-113 * (v5 ^ 0x86)) ^ ((v5 ^ 0x80) + 70)))) ^ v5 ^ 0x28D4)))();
}

uint64_t sub_1003994F4()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * ((11 * (v0 != ((-113 * (v1 ^ 0x52)) ^ ((v1 ^ 0x54) + 70)))) ^ v1)))();
}

uint64_t sub_10039954C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((9182
                                          * (((v1 + v2 - 900147434 > (a1 - 1143353815)) ^ v3) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_10039959C()
{
  uint64_t v0;
  int v1;
  char v2;
  uint64_t (*v3)(void);
  int v4;
  char v5;

  *(_BYTE *)(v0 + (v4 + v1) - 0x62505F6DB01515E5) = v2 - ((v2 << (((v5 - 122) ^ 4) & 0xED)) & 0x44) + 34;
  return v3();
}

void sub_1003995F0()
{
  JUMPOUT(0x1003995FCLL);
}

uint64_t sub_10039960C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 == v0 + v2 + 246777636) * ((v0 + v2 + 775) ^ 0x1B6F)) ^ (v0 + v2 + 541)))
                            - 12))();
}

uint64_t sub_100399658()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8072))((*(_DWORD *)(v0 + 10828) - 243206380 + *(_DWORD *)(v0 + 10856) + 1), 2324384506);
  v3 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)(v0 + 10128) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((459 * (v2 == 0)) ^ v1)) - ((v1 + 280) | 9u) + 1039))();
}

uint64_t sub_1003996D8(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v6 = *(unsigned int *)(v1 + 10292);
  v7 = ((v3 - 448966299) & 0x9FFFBBB7 ^ (v4 - 1)) + v6;
  *(_DWORD *)(v1 + 10292) = v7;
  *(_BYTE *)(a1 + v6) = 4;
  return (*(uint64_t (**)(void))(v5 + 8 * ((454 * (*(_DWORD *)(v1 + 10828) - 243206380 + v7 > v2)) ^ (v3 - 531))))();
}

uint64_t sub_10039974C@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 + v1 + 775 + v1 + 2059605029 - 10322) * (a1 > v3)) ^ (v2 + v1 + 2140))))();
}

uint64_t sub_10039979C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 + 2059595758) * v0) ^ (v1 + 2059597337))) - 8))();
}

uint64_t sub_1003997C4()
{
  uint64_t v0;

  **(_DWORD **)(v0 + 11200) = *(_DWORD *)(v0 + 10236);
  return (*(uint64_t (**)(void))(v0 + 11104))();
}

uint64_t sub_1003997E0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((5715 * (v1 == ((v0 + v2 + 2083) ^ 0xEB5810F))) ^ (v0 + v2 + 797))))();
}

void sub_100399824(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11104) = (((_DWORD)a1 - 1134958898) & 0x43A61EFE) + *(_QWORD *)(v2 + 8 * a1) - 1588;
  JUMPOUT(0x10028CBC0);
}

uint64_t sub_100399860()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v3 = (*(_DWORD *)(v1 + 11612) - 243206380 + *(_DWORD *)(v1 + 9876) + **(_DWORD **)(v1 + 12040));
  *(_DWORD *)(v1 + 9876) = v3;
  v4 = *(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                           + 8
                           * ((30 * ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8072))(v3, 590364076) != 0)) ^ (v0 + v2 + 1552)));
  return v4();
}

uint64_t sub_1003998DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  char v5;

  return (*(uint64_t (**)(void))(a4 + 8 * ((7963 * (((v4 == 0) ^ (36 - v5)) & 1)) ^ 0x724u)))();
}

uint64_t sub_100399910@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  _BYTE *v3;
  unsigned int v4;

  *v3 = 49;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((396
                                          * ((((a2 ^ 0x62) - 61) ^ ((((a2 ^ 0x362) - 406989799) & 0x9D7F37B7 ^ 0x74BDE702)
                                                                                   + *(_DWORD *)(v2 + 11612) > v4)) & 1)) ^ a2 ^ 0x362u))
                            - 12))();
}

uint64_t sub_100399980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((23
                                * (((v4 + 1502426129 - ((2 * v4 - 486412760) & 0xD01879FA)) ^ (v5 + 2968) ^ 0x680C155C) != 0)) ^ v5)))();
}

uint64_t sub_1003999E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  unsigned int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((26 * (v4 < ((v5 - 973097834) & 0xBF3D31DF) + 2059595761)) ^ v5))
                            - 8))();
}

uint64_t sub_100399A58@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((137
                                          * (((v4 + 118) ^ (a2
                                                                           - 0x62505F6DB01515E5
                                                                           - v2
                                                                           + (unint64_t)(v2 - 1)
                                                                           + v3 < ((v4 - 5841) ^ 0x12F0uLL))) & 1)) ^ (v4 - 1379)))
                            - 4))();
}

uint64_t sub_100399ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((2 * (((v4 < 0x20) ^ ((v5 - 104) ^ v5 ^ 0xC7)) & 1)) & 0xDF | (32 * (((v4 < 0x20) ^ ((v5 - 104) ^ v5 ^ 0xC7)) & 1))) ^ v5)))();
}

uint64_t sub_100399B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int8x16_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;

  v9.i64[0] = 0x2222222222222222;
  v9.i64[1] = 0x2222222222222222;
  v10 = v5 + (v6 - 1);
  v11 = v8 + v6;
  v12 = veorq_s8(*(int8x16_t *)(v10 - 31), v9);
  *(int8x16_t *)(v11 - 15) = veorq_s8(*(int8x16_t *)(v10 - 15), v9);
  *(int8x16_t *)(v11 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((a5 + v7 - 1138) | (4
                                                             * (((v7 - 1361883332) & 0xCBEFB7FE) - 5938 != (v6 & 0xFFFFFFE0)))))
                            - 12))();
}

uint64_t sub_100399B88()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + v2 - 266) * (v1 == 246777912)) | (v0 + v2 + 797))))();
}

uint64_t sub_100399BC0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_DWORD *)(v0 + 10916) - 243206380 + *(_DWORD *)(v0 + 11980) + ((v1 - 44) | 0x6Au) - 1134;
  *(_DWORD *)(v0 + 9956) = v2;
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8072))(v2, 4233058181);
  v4 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)(v0 + 10040) = v3;
  return (*(uint64_t (**)(void))(v4 + 8 * ((7682 * (v3 != 0)) ^ v1)))();
}

uint64_t sub_100399C38(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v6 = *(unsigned int *)(v1 + 11172);
  v7 = v4 + v6 + ((v3 + 17300387) | 0x84351005) - 275;
  *(_DWORD *)(v1 + 11172) = v7;
  *(_BYTE *)(a1 + v6) = 48;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((5725
                                          * (((v3 + 18) ^ (v7 + *(_DWORD *)(v1 + 10916) - 243206380 > v2)) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_100399CB4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((57
                                * (v1
                                 + 1502426129
                                 - (((v2 + (((a1 | 0x50) - 2128022719) | 0x4140005) + 999) ^ 0xD0186F0B) & (2 * v1 - 486412760)) == 0x680C3CFD)) ^ (a1 | 0x50))))();
}

uint64_t sub_100399D38()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ ((v0 > 7) | (2 * (v0 > 7))))) - 12))();
}

uint64_t sub_100399DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((563
                                          * (v4 - a1 - a3 - a2 - 0x426167ADD9156606 >= ((v3 - v5 - 132) ^ 0x853D1037uLL))) ^ v3))
                            - 8))();
}

uint64_t sub_100399E30()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((25
                                          * (v0 < 2 * ((((v1 + 5000) | 0x883) - 943874924) & 0xBD7F55DF ^ (v2 + 965))
                                                - 1910)) ^ ((v1 + 5000) | 0x883)))
                            - 8))();
}

uint64_t sub_100399E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int8x16_t v7;
  uint64_t v8;
  uint64_t v9;
  int8x16_t v10;

  v7.i64[0] = 0x2222222222222222;
  v7.i64[1] = 0x2222222222222222;
  v8 = v1 + (v3 - 1);
  v9 = a1 + (v3 - 1) + v2;
  v10 = veorq_s8(*(int8x16_t *)(v8 - 31), v7);
  *(int8x16_t *)(v9 - 15) = veorq_s8(*(int8x16_t *)(v8 - 15), v7);
  *(int8x16_t *)(v9 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((50 * ((v3 & 0xFFFFFFE0) != 32)) ^ (v5 + v4 + 2)))
                            - ((v5 + v4 + 908) | 0x1004u)
                            + 5280))();
}

void sub_100399F04()
{
  JUMPOUT(0x100399EB0);
}

uint64_t sub_100399F10()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((11017 * (v1 == ((v2 + 514807782) ^ 0xA3EC6650) + 246777483)) ^ (v0 + v2 + 1903)))
                            - ((v2 + 514807782) & 0x5C139FAF)
                            + 1953))();
}

uint64_t sub_100399F78()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_DWORD *)(v0 + 12052) - 243206379;
  v3 = *(_QWORD *)(v0 + 11000);
  *(_DWORD *)(v3 + 8) = v2 + *(_DWORD *)(v0 + 9916);
  *(_DWORD *)(v3 + 12) = v2;
  v4 = (*(uint64_t (**)(void))(v0 + 8072))();
  v5 = *(_QWORD *)(v0 + 9744);
  *(_QWORD *)v3 = v4;
  *(_DWORD *)(v3 + 16) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 != 0) * ((v1 + 1536) ^ 0xBF)) ^ v1))
                            - ((v1 + 87) | 0x1030u)
                            + 4652))();
}

uint64_t sub_10039A000()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v2 + 121) ^ ((*(_DWORD *)(v0 + 11220) + 1) > *(_DWORD *)(v1 + 8))) & 1)
                                          * ((v2 ^ 0x1A53) - 2071)) ^ v2))
                            - 4))();
}

uint64_t sub_10039A048@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v2) = 48;
  *(_DWORD *)(v4 + 11220) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((228
                                          * ((a2 ^ 0x1388)
                                           + v3
                                           + *(_DWORD *)(v4 + 12052)
                                           + (((a2 - 998) | 0x32C) ^ 0xF180DC88) > *(_DWORD *)(v5 + 8))) ^ a2))
                            - 12))();
}

uint64_t sub_10039A0A8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1252
                                          * (v1 - ((((5 * (v0 ^ 0x183E)) ^ 0x6301FD3D) + 2 * v1) & 0x7AB317F2) != 0xE7F08EC)) ^ v0))
                            - 8))();
}

uint64_t sub_10039A118()
{
  unsigned int v0;
  int v1;
  char v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((76 * (((v0 < 8) ^ (v1 - v2 - 11)) & 1)) ^ v1)))();
}

uint64_t sub_10039A1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((89
                                          * (v5 - (v3 + a3) - a2 - 0x2805F95F81595EBLL >= ((298 * (v4 ^ 0x1C1F)) ^ (v6 + 1454) ^ 0x853D1037uLL))) ^ v4))
                            - 8))();
}

uint64_t sub_10039A21C(int a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 >= ((a1 - 823471085) & 0x31153FBFu) - 6533)
                                * (v2 + ((a1 - 2146371008) | 0x52C1005) - 268)) | a1)))();
}

uint64_t sub_10039A27C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int8x16_t v7;
  uint64_t v8;
  uint64_t v9;
  int8x16_t v10;

  v7.i64[0] = 0x2222222222222222;
  v7.i64[1] = 0x2222222222222222;
  v8 = v1 + (v3 - 1);
  v9 = v0 + (v3 - 1) + v2;
  v10 = veorq_s8(*(int8x16_t *)(v8 - 31), v7);
  *(int8x16_t *)(v9 - 15) = veorq_s8(*(int8x16_t *)(v8 - 15), v7);
  *(int8x16_t *)(v9 - 31) = v10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6
                                                      + 8
                                                      * ((((v3 & 0xFFFFFFE0) == 32)
                                                        * (((v4 + 954002392) & 0x41E61FFF) - 5601)) ^ (v5 + v4 + 238)))
                                          - 8))((v3 & 0xFFFFFFE0) - 32);
}

void sub_10039A2F8()
{
  JUMPOUT(0x10039A2ACLL);
}

uint64_t sub_10039A304()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 + 568709000) & 0x58DD3DFF) - 6712) * (v0 == 246777912)) ^ (v1 + 2059603336)))
                            - 12))();
}

uint64_t sub_10039A37C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(v0 + 9908) - 243206379;
  v4 = *(_QWORD *)(v0 + 10864);
  *(_DWORD *)(v4 + 8) = v3 + *(_DWORD *)(v0 + 12032);
  *(_DWORD *)(v4 + 12) = v3;
  v5 = (*(uint64_t (**)(void))(v0 + 8072))();
  *(_QWORD *)v4 = v5;
  *(_DWORD *)(v4 + 16) = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 9744)
                                        + 8 * (((v5 != 0) * (((v1 - 2146966938) | 0x5351012) ^ (v2 + 18))) ^ v1))
                            - (((v1 - 7417) | 0x1019u) ^ 0x10B3)))();
}

uint64_t sub_10039A428(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *a1 = 49;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 9744)
                              + 8
                              * ((3161
                                * ((((*(_DWORD *)(v1 + 9908) - 243206379) > *(_DWORD *)(v2 + 8)) ^ ((27 * (v3 ^ 0xC9) - 98) | 7)) & 1)) ^ v3)))();
}

uint64_t sub_10039A4A4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v2 - ((2 * v2 + 1661070888) & 0x7AB317F2) + (((a2 ^ 0xD29) - 1361417897) ^ a2 ^ 0x37CD) == 0xBD598BF9;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 9744) + 8 * (v4 | (4 * v4) | a2))
                                                   - 4))(a1, 2059596029);
}

uint64_t sub_10039A528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(v6
                            + *(_QWORD *)(a4 + 8 * (v5 ^ (55 * (v4 < 8))))
                            - (((v5 + 270092698) & 0xEFE6AC7A)
                             - 2059604057)
                            - 4))();
}

uint64_t sub_10039A598@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((249
                                          * (v4
                                           - a2
                                           - v2
                                           + ((v3 + 2133) ^ 0xFFFFD73A)
                                           + v2
                                           + ((v3 - 943776657) & 0xBD7DD337 ^ 0x9DAFA092CAD7FA0CLL) < 0x20)) ^ v3))
                            - 4))();
}

uint64_t sub_10039A608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8 * ((47 * (((v4 < 0x20) ^ (v5 + 82) ^ 0x88) & 1)) ^ v5))
                            - 4))();
}

uint64_t sub_10039A654@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int8x16_t v5;
  uint64_t v6;
  int8x16_t v7;

  v5.i64[0] = 0x2222222222222222;
  v5.i64[1] = 0x2222222222222222;
  v6 = v2 + ((((v4 - 764683416) & 0xA8571FFD) + 4294964354) & (v3 + 0xFFFFFFFFLL));
  v7 = veorq_s8(*(int8x16_t *)(v6 - 15), v5);
  *(int8x16_t *)(v3 + a2 - 31) = veorq_s8(*(int8x16_t *)(v6 - 31), v5);
  *(int8x16_t *)(v3 + a2 - 15) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((31 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v4 + 2059597041))) - 12))();
}

void sub_10039A6E0()
{
  JUMPOUT(0x10039A694);
}

uint64_t sub_10039A6F0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v0 + v3 - 324043560) & 0x13509AFB ^ 0x1DEE) * (v2 == 246777912)) ^ (v1 + v3 + 2164)))
                            - 12))();
}

uint64_t sub_10039A744@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1 - 24;
  v3 = (a1 - 24) ^ 0xFE;
  v4 = *(_DWORD *)(v1 + 10004) - 243206379;
  v5 = *(_QWORD *)(v1 + 11008);
  *(_DWORD *)(v5 - 0x10418F73DD1C1D2ALL) = v4 + *(_DWORD *)(v1 + 11992);
  *(_DWORD *)(v5 - 0x10418F73DD1C1D26) = v4;
  v6 = (*(uint64_t (**)(void))(v1 + 8072))();
  v7 = *(_QWORD *)(v1 + 9744);
  *(_DWORD *)(v5 - 0x10418F73DD1C1D22) = 1;
  *(_QWORD *)(v5 - 0x10418F73DD1C1D32) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8 * (((v4 <= *(_DWORD *)(v5 - 0x10418F73DD1C1D2ALL)) * (v3 + 4887)) ^ v2))
                            - 8))();
}

uint64_t sub_10039A818(_BYTE *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *a1 = 48;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((13558
                                          * (((*(_DWORD *)(v1 + 10004)
                                             + 1502426129
                                             - ((2 * *(_DWORD *)(v1 + 10004) - 486412760) & 0xD01879FA)) ^ 0x680C3CFD) != ((v2 + 856062) | 0x85300017) + 2059595753)) ^ (v2 + 4631)))
                            - 8))();
}

uint64_t sub_10039A8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                 + 8
                                                                                 * ((14065
                                                                                   * (v3 >= ((2 * v4) ^ 0x88Cu) - 8586)) ^ v4))
                                                                     + 2235371539
                                                                     - ((v4 - 2129396878) | 0x4290016u)))(a1, a2, a3, 2059600627);
}

uint64_t sub_10039A930()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v2 - 2060915071) | 0x140004) ^ (v4 + 1007))
                                * (0x9DAFA0924FEAEA1BLL - v0 - v1 + (v1 - 1) + v3 > 0x1F)) ^ v2)))();
}

uint64_t sub_10039A99C()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v1 + 1902409) | 0x85200011) ^ (v2 + 81)) * (v0 > 0x1F)) ^ v1)))();
}

uint64_t sub_10039A9E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int8x16_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;

  v9.i64[0] = 0x2222222222222222;
  v9.i64[1] = 0x2222222222222222;
  v10 = v5 + (v6 - 1);
  v11 = v4 + v6;
  v12 = veorq_s8(*(int8x16_t *)(v10 - 31), v9);
  *(int8x16_t *)(v11 - 15) = veorq_s8(*(int8x16_t *)(v10 - 15), v9);
  *(int8x16_t *)(v11 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((15586 * (((a4 + v7 - 786) ^ 0xFD8) == (v6 & 0xFFFFFFE0))) ^ (v7 + 2059603891)))
                            - 4))();
}

uint64_t sub_10039AA60()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((v2 == v0 + v3 + 246777636) * ((v0 + v3 + 2083) ^ 0x33AE)) ^ (v1 + v3 + 1974)))
                            - 12))();
}

void sub_10039AAB0(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 11576) = *(_QWORD *)(v2 + 8 * a1);
  JUMPOUT(0x10039AAD4);
}

uint64_t sub_10039AB64()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((86 * (v1 == ((v2 + v0 - 1051) ^ (v2 + 1091)) + 246776811)) ^ v0))
                            - 8))();
}

uint64_t sub_10039ABA4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 11016) -= 16;
  return (*(uint64_t (**)(void))(v0 + 11576))();
}

uint64_t sub_10039ABD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(_QWORD))(v0 + 9344))(*(_QWORD *)(v0 + 10128));
  *(_QWORD *)(v0 + 11016) -= 16;
  return (*(uint64_t (**)(uint64_t))(v0 + 11576))(v1);
}

uint64_t sub_10039AC2C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 ^ (v3 + 9) ^ 0x1ED ^ (337 * (v3 ^ (v3 - 7)))) * (v2 == v1)) ^ (v0 + v3 + 797))))();
}

void sub_10039AC70()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + 11980) = *(_DWORD *)(v1 + 12124) - 486412760 + *(_DWORD *)(v1 + 11740) + *(_DWORD *)(v1 + 10232);
  *(_QWORD *)(v1 + 12256) = *(_QWORD *)(v2 + 8 * v0) + ((v0 + 1545) ^ 0xFFFFFFFFFFFFF9BCLL);
  JUMPOUT(0x10039877CLL);
}

uint64_t sub_10039AE68()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((25
                                          * (((v0 + 86309057) | 0x80180007) - 489739034 == v1
                                                                                         + 1502426129
                                                                                         - ((2 * v1 - 486412760) & 0xD01879FA))) ^ v0))
                            - 8))();
}

uint64_t sub_10039AEE4()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (118 * (v0 < 8)))) - 12))();
}

uint64_t sub_10039AF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = v4 - a1 - a3 - v5 + ((v3 + 4898) ^ ((v3 + 2092371) | 0x851D1002) ^ 0x1DAE9F8EBBDAA3EAuLL) > 0x1F;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v7 | (16 * v7) | v3)) - 8))();
}

uint64_t sub_10039AFEC(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 + (a2 ^ 0x35DD) - 2059599906 - 263) * (v2 > 0x1F)) ^ a2))
                            - 12))();
}

uint64_t sub_10039B02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int8x16_t v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;
  uint64_t v11;

  v7.i64[0] = 0x2222222222222222;
  v7.i64[1] = 0x2222222222222222;
  v8 = (v4 + 2059595752 + v3);
  v9 = *(int8x16_t *)(v1 + v8 - 15);
  v10 = *(int8x16_t *)(v1 + v8 - 31);
  v11 = a1 + v8 + v2;
  *(int8x16_t *)(v11 - 15) = veorq_s8(v9, v7);
  *(int8x16_t *)(v11 - 31) = veorq_s8(v10, v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((3939 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v5 + v4 + 1092))) - 8))();
}

void sub_10039B0A0()
{
  JUMPOUT(0x10039B050);
}

uint64_t sub_10039B0A8()
{
  unsigned int v0;
  int v1;
  unsigned int v2;
  int v3;
  char v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((25 * (((v0 > v2) ^ (v4 + v1 + 35)) & 1)) | (v3 + v1 + 1974)))
                            - ((v1 + 937766823) & 0x42DDD57D)
                            + 5424))();
}

uint64_t sub_10039BBE0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((v1 - 286979460) & 0x111AE3EF ^ 0xF180F4BC)
                                                + a1
                                                + *(_DWORD *)(v2 + 10232) <= *(_DWORD *)(v2 + 9956))
                                               * ((v1 - 2059601189) ^ 0x853D20D1)) ^ v1))
                            - 8))();
}

uint64_t sub_10039BC54()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((120
                                * (v1
                                 + 1502426129
                                 - ((((35 * (v0 ^ 0x3E4)) ^ (v2 - 187)) + 2 * v1 + 1573182993) & 0xD01879FA) != 0x680C3CFD)) ^ v0)))();
}

uint64_t sub_10039BCC4()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((31 * (v0 >= v2 + ((v1 - 1610755693) & 0xE53F341F) - 4866)) ^ v1))
                            - 4))();
}

uint64_t sub_10039BD70(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((a1
                                                - v4
                                                - (a4
                                                 + a3)
                                                + ((a2 + 176) ^ 0x398EA0421FAA85A0uLL) > 0x1F)
                                               * ((a2 + 176) ^ 0x853D03AD ^ (v5 + 67))) ^ (a2 + 176)))
                            - 8))();
}

uint64_t sub_10039BDD8(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((a2 + 1389) | 0x10AA) + 2059585941 + ((a2 - 2130704321) | 0x43D0005) + 2159)
                                * (v2 < 0x20)) ^ a2)))();
}

uint64_t sub_10039BE34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int8x16_t v8;
  uint64_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint64_t v12;

  v8.i64[0] = 0x2222222222222222;
  v8.i64[1] = 0x2222222222222222;
  v9 = ((v6 + v4 + 1772) | 0x343u) - 2884 + v3;
  v10 = *(int8x16_t *)(a1 + v9 - 15);
  v11 = *(int8x16_t *)(a1 + v9 - 31);
  v12 = v1 + v2 + v9;
  *(int8x16_t *)(v12 - 15) = veorq_s8(v10, v8);
  *(int8x16_t *)(v12 - 31) = veorq_s8(v11, v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((3764 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v5 + v4 + 864))))();
}

void sub_10039BEA8()
{
  JUMPOUT(0x10039BE4CLL);
}

uint64_t sub_10039BEB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (v4 - 1) + v2) = *(_BYTE *)(v1 + (v4 - 1)) ^ 0x22;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1651 * (v4 == 1)) ^ (v5 + v3 + 1937))))();
}

uint64_t sub_10039BEEC(int a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((971 * (((v2 > v1) ^ a1 ^ 0x20) & 1)) ^ (v4 + a1 + 3298)))
                            - (v3 + a1 + 2621)
                            + 7491))();
}

uint64_t sub_10039BEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a4
                                                     + 8
                                                     * (((((v5 == v4) ^ (3 * (v6 ^ 0xE8))) & 1)
                                                       * ((v6 ^ 0xEE8) + 6380)) ^ v6)))(a1, 2059596029);
}

uint64_t sub_10039BF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((v5 + 7941) ^ (126 * ((v4 & 0x18) != 0)))) - 12))();
}

uint64_t sub_10039BF94@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(int8x8_t *)(v3 - v4 + a2 - 7) = veor_s8(*(int8x8_t *)(v2 - 7 + (v3 - v4 - 1)), (int8x8_t)0x2222222222222222);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v4 - (v3 & 0xFFFFFFF8) == -8) * (v5 - 7986)) ^ v5))
                            - 4))();
}

void sub_10039BFF8()
{
  JUMPOUT(0x10039BFD0);
}

uint64_t sub_10039C004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(a4 + 8 * (((((v6 == v4) ^ (v5 - 102)) & 1) * (v5 - 2751)) ^ v5)))();
}

uint64_t sub_10039C03C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t))(a4
                                            + 8
                                            * (((*(_DWORD *)(v5 + 9796) != a2 + ((v4 + 2682712) | 0x85141000) - 276)
                                              * ((v4 - 553) ^ 0x386B)) ^ v4)))(2059596029);
}

uint64_t sub_10039C098(char a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  v4 = 106 * (v1 ^ 0xEC3);
  v5 = *(_DWORD *)(v2 + 9908) - 243217897 + v4 + 2508;
  v6 = *(_QWORD *)(v2 + 11864) - 0x10418F73DD1C1D32;
  *(_DWORD *)(v2 + 9736) = -879104082;
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v2 + 9744)
                                        + 8
                                        * (v4 | (8
                                               * (((a1 + ((v4 - 19) & 0xF7) - 93) ^ ((*(_DWORD *)(v6 + 8) + v5) > *(_DWORD *)(v3 + 8))) & 1))))
                            - 12))();
}

uint64_t sub_10039C16C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v6 + 9744)
                                                              + 8
                                                              * ((119
                                                                * (((a5 - 879100643 - ((2 * a5) & 0x9733FA3A)) ^ *(_DWORD *)(v6 + 9736) ^ (a4 + 3324)) != 1867 * (a4 ^ 0x5B5) - 3734)) ^ a4))
                                                  - 4))(a1, v5);
}

uint64_t sub_10039C1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned int v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 9744)
                                                                                                 + 8
                                                                                                 * ((11 * (v6 < ((v5 - 2078999213) | 0x1280011u) + 2059595761)) ^ v5))
                                                                                     - 4))(2235371543, a2, a3, *v8, *(_QWORD *)(v3 + a2 * (unint64_t)v9), (v4 ^ (82 * (v5 ^ 0x1288u)) ^ 0x5ED76FFF5C5DAD58) + ((2 * v4) & 0xB8BB7F7C) - 0x5ED76FFF5C5DBFBELL);
}

uint64_t sub_10039C294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v7 + 9744)
                              + 8
                              * ((1379
                                * (a5
                                 - (a4
                                  + v5)
                                 - v8
                                 - (unint64_t)(v6 + 50)
                                 + 0x5ED76FFF5C5DD2D6 >= ((v6 - 2059600591) ^ 0x853D1037uLL))) ^ v6)))();
}

uint64_t sub_10039C300(int a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 9744)
                              + 8
                              * (int)((((((v1 - 440558169) & 0x9F7F5F57) - a1 + 606) ^ 0x3656) * (v2 > 0x1F)) ^ v1)))();
}

uint64_t sub_10039C348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v11 = (((v8 + v6 + 312) | 0x4B3u) + 4294965504) & (v7 - 1);
  v12 = *(_OWORD *)(a5 + v11 - 15);
  v13 = *(_OWORD *)(a5 + v11 - 31);
  v14 = a4 + v11 + a6;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 9744)
                                                      + 8 * ((((v7 & 0xFFFFFFE0) == 32) * v10) ^ (v8 + v6 + 678)))
                                          - 8))(4294965116);
}

void sub_10039C3B4()
{
  JUMPOUT(0x10039C35CLL);
}

uint64_t sub_10039C3C0@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v3 + 9744)
                                        + 8 * ((11684 * ((((v2 - 3206) | 0x2122) ^ 0x2333) + a1 == a2)) ^ v2))
                            - ((v2 - 2059599487) ^ 0x853D101BLL)))();
}

uint64_t sub_10039C660@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(a4 + v5) = *(_BYTE *)(v4 + (v5 - 1)) ^ 0x22;
  return (*(uint64_t (**)(void))(a2 + 8 * ((((_DWORD)v5 != 1) * ((1429 * (v6 ^ (a3 - 3))) ^ 0xC05)) ^ (a1 + v6 + 2665))))();
}

uint64_t sub_10039C6AC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((v2 + 395498164) & 0xE86D1FFB) - v3 - 228) ^ (v4 - 17)) * (v1 == v0)) ^ (v2 + 2590))))();
}

uint64_t sub_10039C6F0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((988 * (((((v1 ^ (v2 + 472)) + 2059599906) ^ 0x1021) & v0) == 0)) ^ v1)))();
}

uint64_t sub_10039C730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = -v4;
  *(int8x8_t *)(a1 - 7 + (v3 - 1 + v7) + v2) = veor_s8(*(int8x8_t *)(v1 - 7 + (v3 - 1 + v7)), (int8x8_t)0x2222222222222222);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((99 * ((v5 + 649) - (unint64_t)(v3 & 0xFFFFFFF8) - 4794 == v7)) ^ v5)))();
}

void sub_10039C794()
{
  JUMPOUT(0x10039C768);
}

uint64_t sub_10039C79C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)(((v2 ^ 0x853D02D5 ^ (v3 + 1388)) * (v1 == v0)) ^ v2)) - 8))();
}

uint64_t sub_10039C7D0@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(v2 + 10292) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 + v1 + 775 + v1 + 2059605029 - 10322) * (a1 > v3)) ^ (v1 + 2059605668))))();
}

uint64_t sub_10039C828@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v1 ^ (111 * (a1 + v3 > v2))))
                            - (v1 ^ 0x5C5u)
                            - ((v1 - 2059605029) ^ 0xFFFFFFFF7AC2CE18)))();
}

uint64_t sub_10039C874()
{
  unsigned int v0;
  int v1;
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((((v3 + v1 - 251) | 0x402) - 234) ^ 0x2207) * (v0 <= v2)) ^ (v3 + v1 + 541)))
                            - 12))();
}

uint64_t sub_10039C8BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v4 - 1;
  *(_BYTE *)(a1 + v7 + v2) = *(_BYTE *)(v1 + v7) ^ 0x22;
  return (*(uint64_t (**)(void))(v6 + 8 * ((5560 * (v7 == 0)) ^ (v5 + v3 + 3003))))();
}

uint64_t sub_10039C8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  char v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * ((979
                                                                                           * (((v7
                                                                                              - 1881327868
                                                                                              - ((2 * v7) & 0x1FBA6E08) == 0x8FDD3704) ^ (v6 + v5 - 18)) & 1)) ^ v5)))(a1, a2, a3, a4, a5, 2059603528);
}

uint64_t sub_10039C954()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v0 & 0xD4E2E7EF ^ (149 * (v1 < 8)))) - 8))();
}

uint64_t sub_10039C9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (v3 ^ (1543
                                               * ((unint64_t)(v1 - v0 - v4 - v2 + 0x7DEBAFB7BA7DCDDDLL) > 0x1F))))
                            + 2235371539
                            - ((v3 - 2144801446) | 0x5140003u)
                            - 4))();
}

uint64_t sub_10039CA58()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((v1 + 816326077) & 0xCF57BFFA ^ (255 * (v0 > 0x1F))))
                            - ((((v1 + 816326077) & 0xCF57BFFA) - 973214555) & 0xBF3F1AFF ^ 0x853D101BLL)))();
}

uint64_t sub_10039CAC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v8 = (((v6 + v4 - 20) | 0x2600u) + 4294957311) & (v3 - 1);
  v9 = *(_OWORD *)(v2 + v8 - 15);
  v10 = *(_OWORD *)(v2 + v8 - 31);
  v11 = v1 + a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((2763 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v5 + v4 + 871))))();
}

void sub_10039CB30()
{
  JUMPOUT(0x10039CAD8);
}

uint64_t sub_10039CB3C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 ^ 0x1E3D) + 689) ^ 0xFBB) * (v1 != v0)) ^ v2)) - 8))();
}

uint64_t sub_10039CB6C(unsigned int a1)
{
  char v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((5831
                                * ((v1 & 0x18) == ((((a1 - 411174491) & 0x9DBF109F) - 2235364978) ^ ((a1 + 5042) | 0x21)))) ^ a1)))();
}

uint64_t sub_10039CBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(int8x8_t *)(v0 - 7 + (~(_DWORD)v4 + v3) + v2) = veor_s8(*(int8x8_t *)(v1- 7+ (~(_DWORD)v4 + v3)), (int8x8_t)0x2222222222222222);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * (((v4 - (v3 & 0xFFFFFFF8) == -8) * (977 * (v5 ^ 0x19A0) - 3099)) ^ v5))
                            - 12))();
}

void sub_10039CC30()
{
  JUMPOUT(0x10039CC00);
}

uint64_t sub_10039CC3C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (int)((((v3 + (v2 ^ 0x1B96) - 2179) ^ 0x853D1F43) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_10039CC74()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v2 + 11220) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((6035
                                          * (((v1 + 26) ^ ((*(_DWORD *)(v2 + 10764) + v0) > *(_DWORD *)(v3 + 8))) & 1)) ^ v1))
                            - ((v1 + 1355401002) & 0xAF3637FF ^ 0x7A1)))();
}

uint64_t sub_10039CCD8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 - 2115) | 0x110) + 1328) ^ 0x6AD)
                                          * (v0 - 879100643 - ((2 * v0) & 0x9733FA3A) == 0xCB99FD1D)) ^ (v1 - 1511)))
                            - 8))();
}

uint64_t sub_10039CD30()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v0 < ((v2 + v1 - 1664) ^ (v2 + 8));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 | (4 * v4)) ^ v1)) - 8))();
}

uint64_t sub_10039CDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (int)(((v7 + ((v6 + 70312125) | 0x810C1003) - 215)
                                               * ((unint64_t)(a1 - a4 - v4 + v5 - a3) < 0x20)) ^ v6))
                            - ((v6 - 5967) | 0x2A1u)
                            + 2717))();
}

uint64_t sub_10039CE24(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = v2 < v3 + ((a2 - 1216361706) & 0xCDBD3A57) - 244;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((2 * v5) | (16 * v5)) ^ a2))
                            - ((a2 - 1942) ^ 0x31BLL)))();
}

uint64_t sub_10039CE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v6 = (v3 - 1);
  v7 = *(_OWORD *)(v2 + v6 - 15);
  v8 = *(_OWORD *)(v2 + v6 - 31);
  v9 = v1 + v6 + v0;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((15887 * (((v4 + 2059599577) ^ 0xED0) == (v3 & 0xFFFFFFE0))) ^ (v4 + 2059603716)))
                            - 4))();
}

uint64_t sub_10039CEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;

  v8 = v3 - 1;
  *(_BYTE *)(v0 + v8 + v2) = *(_BYTE *)(v1 + v8) ^ 0x22;
  v9 = v8 == (v4 - v6 + 2179) - 2179;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((32 * v9) | (v9 << 6) | (v5 + v4 + 2181))) - 8))();
}

uint64_t sub_10039CF3C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3399 * (((a1 ^ 0x433 ^ (v2 == v1)) & 1) == 0)) ^ a1))
                            - 109 * (a1 ^ 0x6C1u)
                            + 4792))();
}

uint64_t sub_10039CF88(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((((a3 - v4 + 78) ^ (v5 - 1832) ^ 0x16E7) * ((v3 & 0x18) == 0)) ^ a3)))();
}

uint64_t sub_10039CFBC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (((a2 - 5208) | 0x1803u) ^ 0xFFFFE35CLL) & (~v6 + v5);
  *(int8x8_t *)(v2 - 7 + v8 + v4) = veor_s8(*(int8x8_t *)(v3 - 7 + v8), (int8x8_t)0x2222222222222222);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((12358 * (v6 - (v5 & 0xFFFFFFF8) == -8)) ^ a2))
                            - 12))();
}

void sub_10039D030()
{
  JUMPOUT(0x10039CFF4);
}

uint64_t sub_10039D03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(_QWORD))(v6
                                           + 8 * ((((v4 - v5 + 321594670) & 0x6797C3FF ^ 0x1FE) * (a3 == v3)) ^ v4)))((v4 - v5 - 2457));
}

void sub_10039D078()
{
  JUMPOUT(0x10039D08CLL);
}

uint64_t sub_10039D0EC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((201
                                          * (((v1 + 1502426129 - ((2 * v1 - 486412760) & 0xD01879FA)) ^ 0x680C3CFD) == ((v0 + 4744) ^ v0 ^ 0x17EF ^ 0x577))) ^ v0))
                            - 8))();
}

uint64_t sub_10039D160(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = (v5 + a1 + 366) | 0x5Cu;
  v8 = v4 - 1;
  *(_BYTE *)(v1 + ((v7 + 4294966561) & v8) + v3) = *(_BYTE *)(v2 + ((v7 + 4294966561) & v8)) ^ 0x22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((106 * (((v7 + 4294966561) & v8) == 0)) ^ (v5 + a1 + 1395)))
                            - 4))();
}

uint64_t sub_10039D1B4(int a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, unint64_t))(2235371539
                                                            - (a1 ^ (v2 - 1124))
                                                            + *(_QWORD *)(v3 + 8 * (a1 | (8 * (v1 > 7))))
                                                            - 4))(v1, 0x9BEEE6FFDEBD0013);
}

uint64_t sub_10039D250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (v8 ^ (30 * ((unint64_t)(a2 - a6 - v6 + a5 - a4) > 0x1F))))
                                          - 4))(v7);
}

uint64_t sub_10039D2AC(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 >= (a3 ^ 0xE9Fu) - 4988) * (((a3 - 2079788272) | 0x1340004) + 2059609342)) ^ a3)))();
}

uint64_t sub_10039D300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int8x16_t v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;
  uint64_t v11;

  v7.i64[0] = 0x2222222222222222;
  v7.i64[1] = 0x2222222222222222;
  v8 = (v4 ^ (v5 - 2122) ^ 0xFFFFE825) + v3;
  v9 = *(int8x16_t *)(v1 + v8 - 15);
  v10 = *(int8x16_t *)(v1 + v8 - 31);
  v11 = v0 + v2 + v8;
  *(int8x16_t *)(v11 - 15) = veorq_s8(v9, v7);
  *(int8x16_t *)(v11 - 31) = veorq_s8(v10, v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((((v3 & 0xFFFFFFE0) == 32) | (8 * ((v3 & 0xFFFFFFE0) == 32))) ^ (v4 + 2059605118)))
                            - 4))();
}

void sub_10039D378()
{
  JUMPOUT(0x10039D31CLL);
}

uint64_t sub_10039D380@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((457 * (v3 ^ 0x1333)) ^ 0x3018) * (a2 != v2)) ^ v3)))();
}

uint64_t sub_10039D3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  int v5;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (int)((((v5 ^ 0x1240) + 2059594854 + (((v5 ^ 0x1240) - 37940280) & 0x877FFAD7) + 2918)
                                     * ((v4 & 0x18) != 0)) ^ v5 ^ 0x1240)))();
}

uint64_t sub_10039D404@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 7 + (~(_DWORD)a2 + v4) + v3) = *(_QWORD *)(v2 - 7 + (~(_DWORD)a2 + v4));
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1
                                                     + 8
                                                     * (((a2 - (v4 & 0xFFFFFFF8) == -8)
                                                       * (((v5 - 3269) | 0x136) - 357)) ^ v5)))(~a2 + v4 - 8, a2 - (v4 & 0xFFFFFFF8) + 16);
}

uint64_t sub_10039D460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  *(_QWORD *)(v7 + a1 + v4) = *(_QWORD *)(v5 + a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8 * (((a2 == 0) * v8) ^ v6)))(a1 - 8, a2 + 8);
}

uint64_t sub_10039D490@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(a1
                              + 8 * (((a2 + v5 + ((a3 - 1838350929) & 0x6D9307FD) - 1828 - 202) * (v4 == v3)) ^ a3)))();
}

uint64_t sub_10039D4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(a4 + 8 * (((v5 == (v4 ^ 0x853D1733) - 1988593631) * ((v4 ^ 0x6A8) + 3827)) ^ v4)))();
}

uint64_t sub_10039D514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  _DWORD *v8;
  int v9;
  uint64_t v11;
  uint64_t v12;

  *v8 = v7;
  *(_DWORD *)(a6 + 12) = *(_DWORD *)(v6 + 11612) - 243206379;
  (*(void (**)(_QWORD))(v6 + 9344))(*(_QWORD *)a6);
  v11 = (*(uint64_t (**)(_QWORD, uint64_t))(v6 + 8072))(*v8, 502747962);
  v12 = *(_QWORD *)(v6 + 9744);
  *(_QWORD *)a6 = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * ((5810
                                          * (((35 * (v9 ^ 0x8E) + 1) ^ (*v8
                                                                                       - (((744 * (v9 ^ 0x180)) ^ 0xF7B1619C) & (2 * *v8)) == 0)) & 1)) ^ v9))
                            - 8))();
}

uint64_t sub_10039D5D4@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 | (8 * (a2 > 7)) | (16 * (a2 > 7))))
                            - ((45 * (v2 ^ 0x853D32F7 ^ (v3 + 7))) ^ 0x199)))();
}

uint64_t sub_10039D620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((2040 * ((unint64_t)(v4 - a1) > 0x1F)) ^ v3)) - 8))();
}

uint64_t sub_10039D660@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((((v2 + 4207) | 0x4AB) - 2059601560) ^ 0x853D1F8B) - 3890) * (a2 < 0x20)) ^ ((v2 + 4207) | 0x4AB))))();
}

uint64_t sub_10039D6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v6 = ((281 * (v3 ^ (v5 - 22))) ^ 0xFFFFE7D9) + a3;
  v7 = *(_OWORD *)(v4 + v6 - 15);
  v8 = *(_OWORD *)(v4 + v6 - 31);
  v9 = a1 + v6;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((3789 * ((a3 & 0xFFFFFFE0) == 32)) ^ (v3 + 2059600853))) - 8))();
}

void sub_10039D724()
{
  JUMPOUT(0x10039D6DCLL);
}

uint64_t sub_10039D72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v11 = (v10 + v8 + 1552);
  v12 = v7 - 1;
  *(_BYTE *)(v9 + ((v11 + 4294965467) & v12) + v6) = *(_BYTE *)(v5 + ((v11 + 4294965467) & v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((13545 * (((v11 + 4294965467) & v12) == 0)) ^ (a5 + v8 - 103)))
                            - 12))();
}

uint64_t sub_10039D778(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)((((v5 + (a3 ^ 0xC95) - 1985) ^ a3 ^ 0x853D1B54) * (v4 != v3)) ^ a3))
                            - 4))();
}

uint64_t sub_10039D7B8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((((a2 + 19724331) | 0x84101016) + 2059595777) & v2) == 0)
                                * (((a2 + 2452) | 0xC80) - 2780)) ^ a2)))();
}

uint64_t sub_10039D814@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(int8x8_t *)(v2 - 7 + (~(_DWORD)v5 + v4) + v3) = veor_s8(*(int8x8_t *)(a2- 7+ (~(_DWORD)v5 + v4)), (int8x8_t)0x2222222222222222);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((v5 - (v4 & 0xFFFFFFF8) != -8)
                                          * (((261 * (a1 ^ 0x1DF7) - 1773826850) & 0x69BA5FF4) - 2537)) ^ (261 * (a1 ^ 0x1DF7))))
                            - 4))();
}

void sub_10039D89C()
{
  JUMPOUT(0x10039D86CLL);
}

uint64_t sub_10039D8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5 + 8 * (((v3 - 2365) * (a2 == v2)) ^ v3))
                                         - (((v3 - 2145585761) | 0x5201014u) ^ 0x853D1013)))((v3 - v4 - 2384));
}

void sub_10039D8F8()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 11172) = v0;
  JUMPOUT(0x10039D904);
}

uint64_t sub_10039D954()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((14469
                                          * (((((v0 - 35) | 0x10) - 29) ^ ((v1 - 243206380 + *(_DWORD *)(v2 + 11740)) > *(_DWORD *)(v2 + 9956))) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_10039D9B4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((107
                                          * (v1
                                           + 1502426129
                                           - ((((v0 ^ (v2 - 2292)) + 2059606445) ^ 0xD018503E) & (2 * v1 - 486412760)) != 0x680C3CFD)) ^ v0))
                            - 12))();
}

uint64_t sub_10039DA28(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 8 * (a1 ^ (14 * (v1 < 8))))
                                                  - ((a1 - 2059606445) ^ 0x853D1013)))(v1, *(_QWORD *)(v2 + 12008));
}

uint64_t sub_10039DAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                      + 8
                                                      * (v7 ^ (170
                                                             * ((unint64_t)(a2
                                                                                 - (v5
                                                                                  + a5)
                                                                                 - a4
                                                                                 - 0x25077C1D89765F2) < 0x20))))
                                          - 12))(v6);
}

uint64_t sub_10039DB2C(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v3 >= (a3 ^ 0x686u) - 9430) * (v4 + a3 - 2059604569 + 51)) ^ a3))
                            - 4))();
}

uint64_t sub_10039DB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;

  v7 = ((v4 + 1949231687) & 0x6942FB7) + 4294956521;
  v8.i64[0] = 0x2222222222222222;
  v8.i64[1] = 0x2222222222222222;
  v9 = v0 + (v7 & (v2 - 1));
  v10 = v1 + (v7 & (v2 - 1)) + v3;
  v11 = veorq_s8(*(int8x16_t *)(v9 - 31), v8);
  *(int8x16_t *)(v10 - 15) = veorq_s8(*(int8x16_t *)(v9 - 15), v8);
  *(int8x16_t *)(v10 - 31) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((4 * ((v2 & 0xFFFFFFE0) == 32)) | (8 * ((v2 & 0xFFFFFFE0) == 32)) | (v5 + v4 + 3037)))
                            - 8))();
}

void sub_10039DBF4()
{
  JUMPOUT(0x10039DBA4);
}

uint64_t sub_10039DC00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v4 - 1;
  *(_BYTE *)(v1 + v7 + v2) = *(_BYTE *)(a1 + v7) ^ 0x22;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((7856 * (v7 != 0)) ^ (v5 + (int)v3 + 660))))(v3);
}

uint64_t sub_10039DC3C()
{
  unsigned int v0;
  unsigned int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((12466 * (v1 <= v0)) ^ (v3 + v2 + 1974)))
                            - (v3 + v2 + 764)
                            + 5626))();
}

uint64_t sub_10039DC4C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((((v7 == v6) ^ (a2 - a6 + 95)) & 1)
                                          * (((a2 - 9952) | 0x852) ^ 0x87F)) | a2))
                            - 4))();
}

uint64_t sub_10039DC90()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((7903 * (((((v1 + 1852240573) & 0x919927F1) - 8969) & v0) == 0)) ^ v1))
                            - 12))();
}

uint64_t sub_10039DCEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_QWORD *)(v1 - 7 + (~(_DWORD)v4 + v3) + a1) = *(_QWORD *)(v2 - 7 + (~(_DWORD)v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1124 * (v4 + ((v5 - 6617) | 0x607u) - 3911 == (v3 & 0xFFFFFFF8))) ^ v5)))();
}

uint64_t sub_10039DD48()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((6626 * (((v1 == v0) ^ (v2 - 56)) & 1)) ^ v2))
                            - ((v2 - 2059599672) ^ 0x853D101BLL)))();
}

uint64_t sub_10039DD94()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(v2 + 10292) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((((((v4 + v1 - 251) | 0x402) - 234) ^ 0x2207) * (v0 <= v3)) ^ (v4 + v1 + 541)))
                            - 12))();
}

uint64_t sub_10039DDDC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v1 ^ 0x72A) + 6894) * (v0 == v2)) ^ v1)) - 12))();
}

uint64_t sub_10039DE14()
{
  uint64_t v0;
  int v1;

  **(_QWORD **)(v0 + 9816) = *(_QWORD *)(v0 + 10128);
  **(_DWORD **)(v0 + 9944) = v1;
  return sub_10039AB64();
}

uint64_t sub_10039DE4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v4 - 1;
  *(_BYTE *)(v1 + v7 + a1) = *(_BYTE *)(v2 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((126 * (v7 == 0)) ^ (v5 + v3 - 985))) - 12))();
}

uint64_t sub_10039DE84()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v2 - 3808) ^ (v1 == v0)) & 1) == 0)
                                     * (((v2 + 1803552775) & 0x947FEF8D) - 1189)) ^ v2)))();
}

uint64_t sub_10039DED4(int a1)
{
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (3134 * ((v1 & 0x18) != 0)))) - 8))();
}

uint64_t sub_10039DF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_QWORD *)(v1 - 7 + (~(_DWORD)v4 + v3) + v0) = *(_QWORD *)(v2 - 7 + (~(_DWORD)v4 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((7784 * (v4 - (v3 & 0xFFFFFFF8) == -8)) ^ v5))
                            - ((v5 - 98) ^ 0x2BDLL)))();
}

void sub_10039DF74()
{
  JUMPOUT(0x10039DF48);
}

uint64_t sub_10039DF80(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (1076 * (a1 != v1))))
                            - ((((v2 - 369) | 0x10u) - v3 - 60) ^ 0x853D101FLL)))();
}

uint64_t sub_10039DFC0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v2 + 11220) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((253
                                          * ((v0 - 243206380 + *(_DWORD *)(v2 + 12120)) > *(_DWORD *)(v3 + 8))) ^ v1))
                            - (((v1 - 153856339) & 0x92BAFAFu)
                             + 2082)
                            + 4039))();
}

uint64_t sub_10039E024@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((27
                                          * (((v2 + a1 - ((2 * v2 + 1661070888) & 0x7AB317F2)) ^ 0xBD598BF9) == ((v1 - 3374) | 0x50C) + ((v1 + 88780334) & 0x1AB55FBF) - 9578)) ^ v1))
                            - 4))();
}

uint64_t sub_10039E0A0()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 + ((v1 - 2061508012) | 0x1D1006) - 274) * (v0 > 7)) | v1))
                            - 12))();
}

uint64_t sub_10039E148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((4076
                                          * (v4 - (a1 + a2 + a3) - 0x43C063763815376ALL < (v3 + 4731)
                                                                                        - 2235380200
                                                                                        + (unint64_t)((v3 - 2059578947) & 0xFFFFB677)
                                                                                        + 1940)) ^ v3))
                            - 8))();
}

uint64_t sub_10039E1BC()
{
  unsigned int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (v1 | (2 * (v0 < ((v2 + (v1 ^ (v3 - 1485)) + 2931) ^ 0xCA7u))))))();
}

uint64_t sub_10039E1EC@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int8x16_t v7;
  uint64_t v8;
  int8x16_t v9;

  v7.i64[0] = 0x2222222222222222;
  v7.i64[1] = 0x2222222222222222;
  v8 = a2 + (v4 - 1) + v3;
  v9 = veorq_s8(*(int8x16_t *)(v2 + (v4 - 1) - 31), v7);
  *(int8x16_t *)(v8 - 15) = veorq_s8(*(int8x16_t *)(v2 + (v4 - 1) - 15), v7);
  *(int8x16_t *)(v8 - 31) = v9;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6
                                                      + 8
                                                      * ((3322
                                                        * ((v5 + a1 - 822)
                                                         - (unint64_t)(v4 & 0xFFFFFFE0) == 4020)) ^ (v5 + a1 + 628)))
                                          - 8))(4020 - (v5 + a1 - 822));
}

void sub_10039E270()
{
  JUMPOUT(0x10039E228);
}

uint64_t sub_10039E278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = ((v5 + v3 + 60) ^ 0xFFFFFEAF) + v4;
  *(_BYTE *)(v1 + v7 + v0) = *(_BYTE *)(v2 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1762 * (v7 != 0)) ^ (v5 + v3 + 413))) - 8))();
}

uint64_t sub_10039E2BC(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((4073 * (v2 != v1)) ^ a1)) - (a1 ^ 0x17D2)))();
}

uint64_t sub_10039E304(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(_QWORD))(v5
                                           + 8
                                           * (int)((((v3 & 0x18) != ((a3 - 7407) | 0x1394u) - 5020)
                                                  * (v4 + ((a3 - 973259840) & 0xBF3FB75F) + 224)) ^ a3)))(v3 & 0x1F);
}

uint64_t sub_10039E35C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(int8x8_t *)(v2 - 7 + ((61 * (a2 ^ 0x13B6) - 2563) ^ v6) + v5 + v4) = veor_s8(*(int8x8_t *)(v3 - 7 + ((61 * (a2 ^ 0x13B6) - 2563) ^ v6) + v5), (int8x8_t)0x2222222222222222);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v7 + 8 * ((1274 * ((v5 & 0xFFFFFFF8) - 8 == v6)) ^ a2)) - 4))(v5 & 7);
}

void sub_10039E3C0()
{
  JUMPOUT(0x10039E38CLL);
}

uint64_t sub_10039E3C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 + ((a4 - 2147420652) | 0x53C1001) + 2181) * (a3 == v4)) ^ a4))
                            - ((a4 - 1714563639) & 0x66322CB6)
                            + 3198))();
}

uint64_t sub_10039E424()
{
  return sub_10039E43C();
}

uint64_t sub_10039E43C()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v1 - 243213176 + ((8 * v2) ^ 0xEE70u) + 420 + **(_DWORD **)(v3 + 10216) > v0)
                                * ((v2 - 4969) ^ 0xB62)) | v2)))();
}

uint64_t sub_10039E494()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v1 + 1502426129 - ((((v0 - 1866) | 0x21E) ^ 0xD0187FC4) & (2 * v1 - 486412760)) != 0x680C3CFD;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 | (16 * v3)) ^ v0)) - 12))();
}

uint64_t sub_10039E4F4(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (a1 ^ (5015 * (v1 > 7)))) - 4))(v1);
}

uint64_t sub_10039E594(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (int)(((v7 + ((a2 + 83946299) | 0x803C0003) + 228)
                                                   * ((unint64_t)(a4 - v4 - a3 - v6 - 0x6011085418806FFALL) < 0x20)) ^ a2)))(v5);
}

uint64_t sub_10039E5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((a5 + 1445119659) & 0xA4DC3B79 ^ (87 * (v5 > 0x1F))))
                            - ((a5 + 1445119659) & 0xA4DC3B79 ^ 0x853D022E)
                            - ((a5 + 1445119659) & 0xA4DC3B79 ^ 0xFFFFFFFF7AC2FDC8)))();
}

uint64_t sub_10039E65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int8x16_t v8;
  uint64_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint64_t v12;

  v8.i64[0] = 0x2222222222222222;
  v8.i64[1] = 0x2222222222222222;
  v9 = (v4 ^ (v6 + 1047)) - 1082 + v3;
  v10 = *(int8x16_t *)(v1 + v9 - 15);
  v11 = *(int8x16_t *)(v1 + v9 - 31);
  v12 = v0 + v9 + v2;
  *(int8x16_t *)(v12 - 15) = veorq_s8(v10, v8);
  *(int8x16_t *)(v12 - 31) = veorq_s8(v11, v8);
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(v7
                                                              + 8
                                                              * ((4002 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v5 + v4 + 630)))
                                                  - 8))(0, (v3 & 0xFFFFFFE0) - 32);
}

void sub_10039E6CC()
{
  JUMPOUT(0x10039E670);
}

uint64_t sub_10039E6D4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = a1 - 1;
  *(_BYTE *)(v1 + v7 + v3) = *(_BYTE *)(v2 + v7) ^ 0x22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((v7 == 0) * ((v4 - 316866600) & 0x8DA5FC92 ^ 0xC88)) ^ (v5 + v4 - 387)))
                            - 4))();
}

uint64_t sub_10039E72C()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((13263
                                          * (((v2 + 19) ^ (**(_DWORD **)(v3 + 12248) + v0 > v1)) & 1)) ^ (v2 + 4116)))
                            - 12))();
}

uint64_t sub_10039E738@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((14563 * (((v2 == a2) ^ (v3 - 1)) & 1)) ^ v3))
                            - ((v3 + 1122574297) & 0xBD16DEC5)
                            + 5817))();
}

uint64_t sub_10039E784@<X0>(uint64_t a1@<X2>, char a2@<W8>)
{
  int v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((16142
                                * ((a2 & 0x18) == ((((v2 + 712321240) & 0xD58ACFFE) - 2059599749) ^ 0x853D1017))) ^ v2)))();
}

uint64_t sub_10039E7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(a1 - 7 + (~(_DWORD)v3 + a3)) = *(_QWORD *)(v5 - 7 + (~(_DWORD)v3 + a3));
  return (*(uint64_t (**)(void))(a2
                              + 8 * ((55 * (((v4 - 3600) ^ 0x184) + v3 == (a3 & 0xFFFFFFF8))) ^ v4)))();
}

uint64_t sub_10039E830@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((25 * (((((v3 ^ (v4 + 388)) - v4 + 1094) ^ (v2 == a2)) & 1) == 0)) ^ v3))
                            - 8))();
}

uint64_t sub_10039E86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)(a6 + 16) = 1;
  v8 = (*(uint64_t (**)(uint64_t))(v6 + 9344))(v7);
  *(_QWORD *)(v6 + 11016) -= 16;
  return (*(uint64_t (**)(uint64_t))(v6 + 11064))(v8);
}

uint64_t sub_10039E8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v7 = (547 * (v4 ^ (v6 - 2)) + 4294966201) & (v3 - 1);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(v5 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((57 * (v7 == 0)) ^ (v4 + 2059601928))) - 12))();
}

uint64_t sub_10039E904(int a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((((a1 - 9950) ^ (v3 + 792) ^ (v3 + 146)) * (v2 == v1)) ^ a1)))();
}

uint64_t sub_10039E934(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5
                                                     + 8
                                                     * (int)((((v3 & 0x18) != ((a3 + 85982425) ^ 0x5200011))
                                                            * (((a3 + 85982425) | 0x801D1006) ^ (v4 + 204))) ^ a3))
                                         - 8))(v3 & 0x1F);
}

uint64_t sub_10039E990(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v8 = (a2 - 9442) | 0x24A8;
  *(int8x8_t *)(v3 - 7 + ((((8 * v8) ^ 0x126D8) - 825) ^ v6) + v4 + v5) = veor_s8(*(int8x8_t *)(v2 - 7 + ((((8 * v8) ^ 0x126D8) - 825) ^ v6) + v4), (int8x8_t)0x2222222222222222);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v7 + 8 * ((74 * (((v8 ^ 0xFFFFDB44) & v4) - 8 != v6)) ^ v8))
                                         - 8))(v4 & 7);
}

void sub_10039EA0C()
{
  JUMPOUT(0x10039E9D8);
}

uint64_t sub_10039EA14(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((a3 ^ (v4 + 792) ^ (v4 + 85)) * (a2 == v3)) ^ a3)) - 8))();
}

void sub_10039EA40()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 11172) = v0;
  JUMPOUT(0x10039EA4CLL);
}

uint64_t sub_10039EA90()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((*(_DWORD *)(v2 + 12124) + v0) <= *(_DWORD *)(v2 + 9956))
                                     * ((v1 + 1957180661) & 0x8B57BD77 ^ 0x3F44)) ^ v1)))();
}

uint64_t sub_10039EAE0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((220
                                          * (((v0 - ((2 * v0) & 0x2016E0EE) - 1878298505) ^ (v1 - 1518528852) & 0xDFBFF0F7 ^ 0x15366060) == 0)) ^ v1))
                            - 12))();
}

uint64_t sub_10039EB48()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + 3969) ^ (13 * (v0 > 7)))) - 8))();
}

uint64_t sub_10039EBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((14289
                                          * ((((unint64_t)(a1 - a4 - a3 - v4 + v5) < 0x20) ^ v6 ^ 0x15) & 1)) ^ v6))
                            - 12))();
}

uint64_t sub_10039EC24(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((23 * (((v2 < 0x20) ^ (a2 + 124)) & 1)) ^ a2))
                            - ((a2 - 537024132) ^ 0xDFFDB893)))();
}

uint64_t sub_10039EC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v7 = v4 & 0xA53F5777;
  v8 = (((v7 + 2059604969) | 0x321) ^ 0xFFFFD8DELL) & (v3 - 1);
  v9 = *(_OWORD *)(v2 + v8 - 15);
  v10 = *(_OWORD *)(v2 + v8 - 31);
  v11 = v1 + v8 + v0;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * (int)((15682 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v5 + v7 + 2213))))((v3 & 0xFFFFFFE0) - 32, 801);
}

void sub_10039ECF0()
{
  JUMPOUT(0x10039EC90);
}

uint64_t sub_10039ECFC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v2 + (a1 - 1) + v3) = *(_BYTE *)(v1 + (a1 - 1)) ^ 0x22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4221 * (a1 != 1)) ^ (v5 + v4 + 559))) - 8))();
}

uint64_t sub_10039ED38@<X0>(int a1@<W8>)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((((v4 + v3 - 1726 - 714) | 0xA80) ^ 0x63A) + ((v3 - 1726) ^ a1)) * (v1 <= v2)) ^ (v5 + v3 - 1726 + 797))))();
}

uint64_t sub_10039ED88()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (9827 * (v1 != v0))))
                            - ((5 * (v2 ^ 0xE5D) + 2662) | 0x84Cu)
                            + 6747))();
}

uint64_t sub_10039EDC8(int a1)
{
  char v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 & 0x18) == ((a1 - 6617) | 0xC01u) - 3207)
                                     * (((a1 + 20702630) | 0x84011012) + 2059611019)) ^ a1)))();
}

uint64_t sub_10039EE24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(int8x8_t *)(a1 - 7 + (~(_DWORD)v4 + v3) + v2) = veor_s8(*(int8x8_t *)(v1- 7+ (~(_DWORD)v4 + v3)), (int8x8_t)0x2222222222222222);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v4 - (v3 & 0xFFFFFFF8) == -8) * ((v5 - 1145) ^ 0x81B)) ^ v5))
                            - 4))();
}

void sub_10039EE84()
{
  JUMPOUT(0x10039EE54);
}

uint64_t sub_10039EE90()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v1 ^ (7374 * (v2 == v0))))
                            - (((v1 - v3 - 1786) - 2235369586) ^ (v1 - 97))))();
}

uint64_t sub_10039EED0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v2 + 11220) = v0;
  return (*(uint64_t (**)(_QWORD))(v4
                                           + 8
                                           * ((((*(_DWORD *)(v2 + 10476) + v0) <= *(_DWORD *)(v3 + 8))
                                             * (((v1 - 1565) | 0x1E65) - 8077)) ^ v1)))(*(_QWORD *)(v2 + 10064));
}

uint64_t sub_10039EF10()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((14
                                          * (((v0 - 879100643 - ((v0 << (v1 ^ 0xF4)) & 0x9733FA3A)) ^ 0xCB99FD1D) == ((v1 - 6002) ^ 0x883))) ^ v1))
                            - 4))();
}

uint64_t sub_10039EF6C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x1A98 ^ (668 * (v0 > 7)))) - 8))();
}

uint64_t sub_10039EFE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((((v3 + 326295) | 0x85381013) ^ 0x853D36FC)
                                               * ((unint64_t)(v2 - v5 - v4 - v1 + a1) > 0x1F)) ^ v3))
                            - 8))();
}

uint64_t sub_10039F03C()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v0 < v2 + ((v1 + 3973) ^ 0x853D04E5) - 244) * (((v1 + 2980) | 0xA8A) - 6562)) ^ (v1 + 3973)))
                            - 12))();
}

uint64_t sub_10039F08C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v8 = a1 + (v3 - 1);
  v9 = *(_OWORD *)(v8 - 31);
  v10 = v1 + (v3 - 1) + v2;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((v3 & 0xFFFFFFE0) == 32) * ((v4 ^ (v6 - 43)) - 5464)) ^ (v5 + v4 - 443)))
                            - 8))();
}

void sub_10039F0EC()
{
  JUMPOUT(0x10039F0A8);
}

uint64_t sub_10039F0F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  char v6;
  uint64_t v7;
  unsigned int v8;

  v8 = v3 - 1;
  *(_BYTE *)(a1 + v8 + v2) = (v4 - v6 - 83) ^ *(_BYTE *)(v1 + v8) ^ 0x8F;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((6481 * (v8 == 0)) ^ (v5 + v4 + 3197))) - 8))();
}

uint64_t sub_10039F140(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((505 * (((a1 == 0) ^ (v1 + 98)) & 1)) ^ (v1 + 1284)))
                            - ((v1 - 2059603934) ^ 0x853D101FLL)))();
}

uint64_t sub_10039F150(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a4 ^ (111 * (v5 != v4)))) - ((a4 + 1841) ^ 0x1953u) + 4661))();
}

uint64_t sub_10039F184(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4
                                                     + 8
                                                     * (((((((a3 - 134248322) & 0x8D3D755F) + 2059595777) & v3) == 0)
                                                       * ((a3 ^ 0x1F43) - 2255)) ^ a3))
                                         - 8))(v3 & 0x1F);
}

uint64_t sub_10039F1D8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = -v6;
  *(int8x8_t *)(v2 - 7 + (v5 - 1 + v8) + v4) = veor_s8(*(int8x8_t *)(v3 - 7 + (v5 - 1 + v8)), (int8x8_t)0x2222222222222222);
  return (*(uint64_t (**)(_QWORD))(v7
                                           + 8
                                           * (int)((82
                                                  * (((a2 + 656359358) & 0xD8E0BFEF)
                                                   - 2287
                                                   - (unint64_t)(((a2 + 656359358) & 0xD8E0BFEF ^ 0xFFFFF2D0) & v5)
                                                   - 1073 != v8)) ^ (a2 + 656359358) & 0xD8E0BFEF)))(v5 & 7);
}

void sub_10039F25C()
{
  JUMPOUT(0x10039F230);
}

uint64_t sub_10039F264(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * ((519 * (((a3 == v4) ^ (a4 + 49) ^ 0x7D) & 1)) ^ a4))
                            - 4))();
}

void sub_10039F2A0()
{
  JUMPOUT(0x10039F2B4);
}

uint64_t sub_10039F2FC()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v1 - ((2 * v1) & 0x1FBA6E08) + ((2557 * ((v0 - 2941) ^ 0x1003)) ^ 0x8FDD24FE) != 0x8FDD3704;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 | (2 * v3)) ^ (v0 - 2941)))
                            - 23 * ((v0 - 2941) ^ 0x110Au)
                            + 6129))();
}

uint64_t sub_10039F370()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (2047 * (v0 < 8)))) - 12))();
}

uint64_t sub_10039F400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = a1 - a3 - a5 + v5 - a2 - (unint64_t)((v6 - a4 - 617991027) & 0x9F98C3FF) + 1006 > 0x1F;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v8 | (2 * v8)) ^ v6)))();
}

uint64_t sub_10039F454(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((5 * (a2 ^ 0x59F) + (a2 ^ (v3 + 994) ^ 0x7AC2CFC8)) * (v2 > 0x1F)) ^ a2))
                            - 12))();
}

uint64_t sub_10039F49C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v7 = v1 + (v3 - 1);
  v8 = *(_OWORD *)(v7 - 31);
  v9 = a1 + (v3 - 1) + v2;
  *(_OWORD *)(v9 - 15) = *(_OWORD *)(v7 - 15);
  *(_OWORD *)(v9 - 31) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((114 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v5 + v4 + 2700)))
                            - (v4 + 2059598416)
                            + 2655))();
}

void sub_10039F504()
{
  JUMPOUT(0x10039F4BCLL);
}

uint64_t sub_10039F510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = (v6 + v4 + 2646);
  v9 = a1 - 1;
  *(_BYTE *)(v1 + ((v8 + 4294964373) & v9) + v3) = *(_BYTE *)(v2 + ((v8 + 4294964373) & v9)) ^ 0x22;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((4 * (((v8 + 4294964373) & v9) == 0)) | ((((v8 + 4294964373) & v9) == 0) << 8)) ^ (v5 + v4 + 1830))))();
}

uint64_t sub_10039F560(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((a4 - 13875 + 125 * (a4 ^ 0x273E)) * (v5 == v4)) ^ a4)) - 8))();
}

uint64_t sub_10039F5AC()
{
  char v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (6933 * ((v0 & 0x18) == 0))))
                            + 2235371539
                            - (((v1 - 3554) | 0x48Eu)
                             - v2
                             - 1211)
                            - 8))();
}

uint64_t sub_10039F5F8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 - 7 + (~(_DWORD)v5 + v4) + v1) = *(_QWORD *)(v3 - 7 + (~(_DWORD)v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((2642 * (((a1 - 978) ^ 0x1F5) + v5 == (v4 & 0xFFFFFFF8))) ^ a1))
                            - 12))();
}

uint64_t sub_10039F650(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((a3 - 1375863422) & 0xD73F1097)
                                      - 175775787
                                      + ((a3 - 2128019949) | 0x4141007)
                                      + 954)
                                     * (a2 == v3)) ^ a3)))();
}

uint64_t sub_10039F6B0@<X0>(int a1@<W0>, int a2@<W8>)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_DWORD *)(v4 + 11172) = v2;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((v5 + a1 - 714) | 0xA80) ^ 0x63A) + (a1 ^ a2)) * (v2 <= v3)) ^ (v6 + a1 + 797))))();
}

uint64_t sub_10039F6FC()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((10761 * (*(_QWORD *)(v1 + 10504) != 0)) ^ ((v0 - 4523) | 0x22)))
                            - (v2
                             + ((v0 - 4523) | 0x22u)
                             - 2359)
                            - ((((v0 - 4523) | 0x22) - 1111658176) & 0xC77F959F ^ 0xFFFFFFFFFFFFFFFALL)))();
}

uint64_t sub_10039F77C()
{
  uint64_t v0;
  int v1;
  int v2;

  (*(void (**)(void))(v0 + 9344))();
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 9744)
                                           + 8
                                           * ((v2 == ((v1 - 1179963498) & 0xC117C6FE ^ 0xEB58E94)) | (v1 + 2059603865))))(*(_QWORD *)(v0 + 10040));
}

uint64_t sub_10039F7D8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 10464);
  *(_QWORD *)(v3 - 0x10418F73DD1C1D32) = a1;
  *(_DWORD *)(v3 - 0x10418F73DD1C1D2ALL) = *(_DWORD *)(v2 + 9956);
  *(_DWORD *)(v3 - 0x10418F73DD1C1D26) = a2 + *(_DWORD *)(v2 + 10916) - 243208087;
  *(_DWORD *)(v3 - 0x10418F73DD1C1D22) = 1;
  *(_QWORD *)(v2 + 11016) -= 48;
  return (*(uint64_t (**)(void))(v2 + 11776))();
}

uint64_t sub_10039F8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v3 - 1;
  *(_BYTE *)(v1 + v7 + v0) = *(_BYTE *)(v2 + v7);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((1090 * (v7 != 0)) ^ (v5 + (int)v4 + 300))))(v4);
}

uint64_t sub_10039F900()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v1 == v0) ^ v2) & 1) * (v2 + 6671)) ^ v2))
                            - 4))();
}

uint64_t sub_10039F934()
{
  char v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v4 = v1 - 6810;
  v5 = (v0 & 0x18) == ((((v4 + 170751550) & 0xF5D29FFB) - v2 - 2193) ^ 0x853D1017);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((4 * v5) | (8 * v5) | v4)) - 8))();
}

uint64_t sub_10039F998(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = -v4;
  *(_QWORD *)(v1 - 7 + (v3 - 1 + v7) + v2) = *(_QWORD *)(a1 - 7 + (v3 - 1 + v7));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((13228
                                          * ((v5 - 5678) - (unint64_t)(v3 & 0xFFFFFFF8) - 1381 == v7)) ^ v5))
                            - 4))();
}

void sub_10039F9F8()
{
  JUMPOUT(0x10039F9CCLL);
}

uint64_t sub_10039FA00()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 ^ 0xDEE) + 2664) * (v1 == v0)) ^ v2))
                            - (((v2 + 84740756) | 0x80300016) ^ 0x853D101FLL)))();
}

void sub_10039FA58(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 11220) = a1;
  JUMPOUT(0x10039FA90);
}

uint64_t sub_10039FAE8()
{
  int v0;
  uint64_t v1;
  void (*v2)(void);
  int v3;
  unsigned int v4;

  v4 = v0 & 0x97BFD1BF;
  v2();
  return ((uint64_t (*)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 9744)
                                        + 8 * (int)((11 * (*(_QWORD *)(v1 + 11160) != 0)) ^ (v3 + v4 + 2831)))
                            - 4))();
}

uint64_t sub_10039FB28()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;

  v2 = v1();
  *(_QWORD *)(v0 + 11016) -= 32;
  return (*(uint64_t (**)(uint64_t))(v0 + 11984))(v2);
}

uint64_t sub_10039FB44()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((11 * (*(_QWORD *)(v1 + 11160) != 0)) ^ (v2 + v0 + 2831))) - 4))();
}

uint64_t sub_10039FB70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = (v4 - v6 + 2179);
  v9 = v3 - 1;
  *(_BYTE *)(v1 + ((v8 ^ 0xFFFFF77CLL) & v9) + v2) = *(_BYTE *)(a1 + ((v8 ^ 0xFFFFF77CLL) & v9));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v5 + v4 + 3055) | (16 * (((v8 ^ 0xFFFFF77CLL) & v9) == 0))))
                            - 12))();
}

uint64_t sub_10039FBB0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 ^ 0x998 ^ ((v2 - 2363) | 0x2C2)) * (v1 != v0)) ^ v2)))();
}

uint64_t sub_10039FBE8(uint64_t a1, int a2)
{
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((6123 * ((v2 & 0x18) == ((a2 - 704688975) & 0xAF3DBF77) - 2235371543)) ^ a2))
                            - 12))();
}

uint64_t sub_10039FC48@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a2 - 7 + ((a1 ^ 0xFFFFDFCALL) & (~v5 + v4)) + v3) = *(_QWORD *)(v2 - 7 + ((a1 ^ 0xFFFFDFCALL) & (~v5 + v4)));
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((169 * (v5 - (v4 & 0xFFFFFFF8) == -8)) ^ a1)))();
}

void sub_10039FCA8()
{
  JUMPOUT(0x10039FC74);
}

uint64_t sub_10039FCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (int)((((v3 - 2059598416) ^ (v3 + 1434) ^ 0x853D0425) * (a2 != v2)) ^ v3)))();
}

uint64_t sub_10039FCEC()
{
  return sub_10039FD08();
}

uint64_t sub_10039FD08()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = v3 != 246777912;
  if (v0 != v1)
    v5 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v5 * (v2 ^ 0x1865)) ^ v2)) - ((4 * v2) ^ 0x471Cu) + 6372))();
}

uint64_t sub_10039FD58()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((*(_QWORD *)(v0 + 11008) != 0x10418F73DD1C1D32) * (v1 - 6358)) | v1))
                            - 12))();
}

uint64_t sub_10039FD94@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1216 * (*(_QWORD *)(a1 - 0x10418F73DD1C1D32) != 0)) ^ v1))
                            - ((((v1 - 444776393) & 0x9FBFB6F7) + 2059601894) ^ 0x17F1)))();
}

uint64_t sub_10039FE00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = (*(uint64_t (**)(void))(v0 + 9344))();
  *v1 = 0;
  *(_QWORD *)(v0 + 11016) -= 16;
  return (*(uint64_t (**)(uint64_t))(v0 + 10320))(v2);
}

uint64_t sub_10039FE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v3 - 1;
  *(_BYTE *)(a1 + v7 + v2) = *(_BYTE *)(v1 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((7 * (v7 != 0)) ^ (v5 + v4 + 934)))
                            - ((v4 + 198078266) & 0x6EF490AF)
                            + 4085))();
}

void sub_10039FE7C(uint64_t a1)
{
  int v1;
  __int128 v3;
  uint64_t v4;

  v1 = *(_DWORD *)(a1 + 24) ^ (359378713 * (((a1 | 0xF365872D) - (a1 | 0xC9A78D2) + 211450066) ^ 0x8102FFE9));
  v3 = xmmword_1004B1BA0;
  ((void (*)(char *, uint64_t *, uint64_t))((char *)*(&off_1004ECA20 + v1 - 3936) - 4))((char *)*(&off_1004ECA20 + v1 - 4188) - 8, &v4, 16);
  __asm { BR              X12 }
}

uint64_t sub_10039FF94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_OWORD *)&STACK[0x460] = xmmword_1004B1BB0;
  *(_OWORD *)&STACK[0x470] = xmmword_1004B1BC0;
  *(_OWORD *)&STACK[0x480] = xmmword_1004B1BD0;
  *(_OWORD *)&STACK[0x490] = xmmword_1004B1BE0;
  *(_OWORD *)&STACK[0x4A0] = xmmword_1004B1BF0;
  *(_OWORD *)&STACK[0x4B0] = xmmword_1004B1C00;
  *(_OWORD *)&STACK[0x4C0] = xmmword_1004B1C10;
  *(_OWORD *)&STACK[0x4D0] = xmmword_1004B1C20;
  *(_OWORD *)&STACK[0x4E0] = xmmword_1004B1C30;
  *(_OWORD *)&STACK[0x4F0] = xmmword_1004B1C40;
  *(_OWORD *)&STACK[0x500] = xmmword_1004B1C50;
  *(_OWORD *)&STACK[0x510] = xmmword_1004B1C60;
  *(_OWORD *)&STACK[0x520] = xmmword_1004B1C70;
  *(_OWORD *)&STACK[0x530] = xmmword_1004B1C80;
  *(_OWORD *)&STACK[0x540] = xmmword_1004B1C90;
  *(_OWORD *)&STACK[0x550] = xmmword_1004B1CA0;
  *(_OWORD *)&STACK[0x560] = xmmword_1004B1CB0;
  *(_OWORD *)&STACK[0x570] = xmmword_1004B1CC0;
  *(_OWORD *)&STACK[0x580] = xmmword_1004B1CD0;
  *(_OWORD *)&STACK[0x590] = xmmword_1004B1CE0;
  *(_OWORD *)&STACK[0x5A0] = xmmword_1004B1CF0;
  *(_OWORD *)&STACK[0x5B0] = xmmword_1004B1D00;
  *(_OWORD *)&STACK[0x5C0] = xmmword_1004B1D10;
  *(_OWORD *)&STACK[0x5D0] = xmmword_1004B1D20;
  *(_OWORD *)&STACK[0x5E0] = xmmword_1004B1D30;
  *(_OWORD *)&STACK[0x5F0] = xmmword_1004B1D40;
  *(_OWORD *)&STACK[0x600] = xmmword_1004B1D50;
  *(_OWORD *)&STACK[0x610] = xmmword_1004B1D60;
  *(_OWORD *)&STACK[0x620] = 0u;
  *(_OWORD *)&STACK[0x630] = 0u;
  *(_OWORD *)&STACK[0x640] = 0u;
  *(_OWORD *)&STACK[0x650] = 0u;
  *(_OWORD *)&STACK[0x660] = 0u;
  *(_OWORD *)&STACK[0x670] = 0u;
  *(_DWORD *)(v1 + 544) = *(_DWORD *)(a1 + 544);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((14820 * (((v2 - 2125086597) & 0x7EAA3F74 ^ 0x1165) == 4)) ^ (((v2 - 2125086597) & 0x7EAA3F74)
                                                                                               + 2117))))();
}

uint64_t sub_1003A015C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((v0 - 3155) | 0xD00) ^ 0xC97) * (v2 != 224)) ^ v0)) - 12))();
}

uint64_t sub_1003A0190()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((21 * (v1 == *v2)) ^ v0)) - (v0 ^ 0x1E70u) + 4981))();
}

uint64_t sub_1003A01DC()
{
  int v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  int v8;

  *(_BYTE *)(v5 - 160) = *v1;
  *(_BYTE *)(v5 - 159) = v1[1];
  *(_BYTE *)(v5 - 158) = v1[2];
  *(_BYTE *)(v5 - 157) = v1[3];
  *(_BYTE *)(v5 - 156) = v1[4];
  *(_BYTE *)(v5 - 155) = v1[5];
  *(_BYTE *)(v5 - 154) = v1[6];
  *(_BYTE *)(v5 - 153) = v1[7];
  *(_BYTE *)(v5 - 152) = v1[8];
  *(_BYTE *)(v5 - 151) = v1[9];
  *(_BYTE *)(v5 - 150) = v1[10];
  *(_BYTE *)(v5 - 149) = v1[11];
  *(_BYTE *)(v5 - 148) = v1[12];
  *(_BYTE *)(v5 - 147) = v1[13];
  *(_BYTE *)(v5 - 146) = v1[14];
  *(_BYTE *)(v5 - 145) = v1[15];
  if (v1)
    v6 = v4 == 0;
  else
    v6 = 1;
  v8 = v6 || v2 == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v8 * (((v0 + 1619626237) & 0x9F766FE5) - 2924)) ^ v0)))();
}

uint64_t sub_1003A029C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  int v7;

  if (v1)
    v5 = v4 == 224;
  else
    v5 = 1;
  v7 = v5 || v2 == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v7 * (((v0 + 1619626237) & 0x9F766FE5) - 2924)) ^ v0)))();
}

uint64_t sub_1003A02E0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = a1 - v3 + 12 * (v1 ^ 0xD13) - ((2 * (a1 - v3) + 406027212) & 0x9F25511A) != 1944474494
    && (((_BYTE)a1 - (_BYTE)v3 + 12 * (v1 ^ 0x13) - ((2 * ((_BYTE)a1 - (_BYTE)v3) - 52) & 0x1A) + 15) & 0xF) == 13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((v2 + 1284) ^ 0x335F) - 8744) * v6) | v2)) - 12))();
}

uint64_t sub_1003A0360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  int v72;
  uint64_t v74;

  LODWORD(STACK[0x3EC]) = v56;
  STACK[0x450] = v57;
  v74 = v59;
  v61 = (uint64_t (*)(uint64_t))*(&off_1004ECA20 + v58 - 7899);
  v62 = v61(1032);
  v63 = v61(1028);
  STACK[0x420] = v62;
  STACK[0x418] = v63;
  if (v62)
    v71 = v63 == 0;
  else
    v71 = 1;
  v72 = !v71;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * ((v72 * ((67 * (v58 ^ 0x2226)) ^ 0x6B)) ^ v58)) - ((v58 - 374121090) & 0x164C93CF ^ 0x1385)))(v63, v64, v65, v66, v67, v68, v69, v70, a9, v74, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1003A0428()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v3 = (LODWORD(STACK[0x3EC]) >> 3) ^ 0x9F25511;
  v4 = (v0[(v0[(v0[(v0[0xD1220183 % v3] + 3148357433) % v3] + 2891936729) % v3] + 1745211032) % v3]
      + 4079173023)
     % v3;
  if (v4 <= 1)
    v5 = 1;
  else
    v5 = v4;
  *(_QWORD *)STACK[0x450] = *v0 ^ 0xF3F3F3F3F3F3F3F3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((16 * (v5 == 1)) | (32 * (v5 == 1))) ^ v1)) - 4))();
}

uint64_t sub_1003A058C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a2 + 8 * v3) = *(_QWORD *)(v5 + 8 * v3) ^ 0xF3F3F3F3F3F3F3F3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4166 * (v3 + 1 >= a3)) ^ v4)) - 4))();
}

uint64_t sub_1003A062C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  STACK[0x428] = a3;
  if (((*(_BYTE *)(v5 + ((*(_BYTE *)(v5 + ((*(_BYTE *)(v5 + ((*(_BYTE *)(v5 + 4) + 3) & 0xF)) + 1) & 0xF)) + 3) & 0xF))
       + 13) & 0xE) != 0)
    v6 = (*(_BYTE *)(v5 + ((*(_BYTE *)(v5 + ((*(_BYTE *)(v5 + ((*(_BYTE *)(v5 + 4) + 3) & 0xF)) + 1) & 0xF)) + 3) & 0xF))
        + 13) & 0xF;
  else
    v6 = 1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((14364 * (v6 != 1)) ^ ((v3 - 3210) | 0x496))))();
}

uint64_t sub_1003A0778()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * (v1 == 15)) | (32 * (v1 == 15))) ^ v0)))();
}

uint64_t sub_1003A07F4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  unsigned int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  unsigned int v356;
  int v357;
  int v358;
  int v359;
  unsigned int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  int v374;
  int v375;
  unint64_t v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  unsigned int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  unsigned int v425;
  int v426;
  int v427;
  unsigned int v428;
  unsigned int v429;
  int v430;
  int v431;
  unsigned int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  unsigned int v442;
  int v443;
  int v444;
  int v445;
  unsigned int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;

  STACK[0x2F0] = v7;
  STACK[0x310] = v4;
  STACK[0x2F8] = v5;
  v8 = (v3 ^ 0xBD21D41F) + ((v3 ^ 0xBD21D41F) >> 13) + (((v3 ^ 0xBD21D41F) + ((v3 ^ 0xBD21D41F) >> 13)) >> 6);
  v9 = (v8 ^ 0x17954AA5) - ((v8 ^ 0x17954AA5) >> (a1 - 31));
  v10 = STACK[0x5F4];
  v429 = v8 ^ v2 ^ (v9 - (v9 >> 8)) ^ (((v9 - (v9 >> 8)) ^ 0x14B6A43A)
                                     + (((v9 - (v9 >> 8)) ^ 0x14B6A43A) >> 14)
                                     - ((((v9 - (v9 >> 8)) ^ 0x14B6A43A) + (((v9 - (v9 >> 8)) ^ 0x14B6A43A) >> 14)) >> 2));
  v11 = STACK[0x588];
  v12 = STACK[0x5CC];
  v13 = STACK[0x5E4];
  v14 = STACK[0x500];
  v15 = STACK[0x504];
  v16 = STACK[0x51C];
  v17 = STACK[0x518];
  v18 = STACK[0x4CC];
  v19 = STACK[0x480];
  v20 = *(_DWORD *)(v1 + 4 * (84 - v9 % 0x54) + 4 * (v9 % 0x54) - 0x4BD63E94F61E3285);
  v21 = STACK[0x4AC];
  v22 = STACK[0x4A8];
  v23 = STACK[0x5C8];
  v24 = STACK[0x524];
  v25 = STACK[0x520];
  v26 = STACK[0x5A0];
  v27 = STACK[0x4DC];
  LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x4DC]) ^ LODWORD(STACK[0x508]);
  LODWORD(STACK[0x438]) = v26 ^ v23;
  v28 = STACK[0x4A0];
  LODWORD(STACK[0x3B0]) = v27 - v26;
  LODWORD(STACK[0x448]) = v23 + v10;
  v29 = STACK[0x584];
  LODWORD(STACK[0x3F0]) = LODWORD(STACK[0x584]) + v24;
  LODWORD(STACK[0x3BC]) = v19 ^ v13;
  v30 = STACK[0x474];
  LODWORD(STACK[0x408]) = v28 + v10;
  LODWORD(STACK[0x3DC]) = v30 + v28;
  LODWORD(STACK[0x3E0]) = v24 - v12;
  LODWORD(STACK[0x44C]) = v30 + v13;
  v31 = STACK[0x534];
  v32 = STACK[0x530];
  LODWORD(STACK[0x39C]) = v29 + v19;
  LODWORD(STACK[0x3AC]) = v12 - v11;
  v33 = STACK[0x554];
  v34 = STACK[0x494];
  LODWORD(STACK[0x3E4]) = (LODWORD(STACK[0x554]) + (v21 & 0x80000000)) ^ v21 & 0x7FFFFFFF;
  v35 = STACK[0x5D4];
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x5D4]) + v11;
  LODWORD(STACK[0x3D0]) = v35 + v31;
  LODWORD(STACK[0x400]) = v31 - v18;
  LODWORD(STACK[0x3D4]) = v18 + v14;
  LODWORD(STACK[0x3CC]) = v14 - v16;
  LODWORD(STACK[0x410]) = v34 ^ v16;
  v36 = STACK[0x470];
  LODWORD(STACK[0x40C]) = LODWORD(STACK[0x470]) ^ v34;
  v37 = STACK[0x46C];
  v38 = STACK[0x468];
  LODWORD(STACK[0x3C8]) = v36 ^ LODWORD(STACK[0x46C]);
  v39 = STACK[0x614];
  LODWORD(STACK[0x440]) = v37 - LODWORD(STACK[0x614]);
  v40 = STACK[0x4E4];
  LODWORD(STACK[0x3C4]) = v39 + LODWORD(STACK[0x4E4]);
  v41 = STACK[0x540];
  v42 = STACK[0x544];
  LODWORD(STACK[0x390]) = v40 + LODWORD(STACK[0x540]);
  v43 = STACK[0x60C];
  LODWORD(STACK[0x374]) = LODWORD(STACK[0x60C]) + v41;
  v44 = STACK[0x5E8];
  LODWORD(STACK[0x414]) = LODWORD(STACK[0x5E8]) + v43;
  v45 = STACK[0x5E0];
  LODWORD(STACK[0x378]) = v44 + LODWORD(STACK[0x5E0]);
  v46 = STACK[0x49C];
  v47 = STACK[0x498];
  LODWORD(STACK[0x430]) = LODWORD(STACK[0x49C]) ^ v45;
  v48 = STACK[0x59C];
  LODWORD(STACK[0x354]) = LODWORD(STACK[0x59C]) ^ v46;
  LODWORD(STACK[0x3F4]) = v48 - v20;
  v49 = STACK[0x5C4];
  LODWORD(STACK[0x404]) = LODWORD(STACK[0x5C4]) ^ v20;
  v50 = STACK[0x57C];
  LODWORD(STACK[0x3C0]) = v49 - LODWORD(STACK[0x57C]);
  v51 = STACK[0x4BC];
  v52 = STACK[0x4B8];
  LODWORD(STACK[0x368]) = v50 ^ LODWORD(STACK[0x4BC]);
  v53 = STACK[0x4D4];
  LODWORD(STACK[0x38C]) = v51 - LODWORD(STACK[0x4D4]);
  v54 = STACK[0x48C];
  LODWORD(STACK[0x37C]) = v53 ^ LODWORD(STACK[0x48C]);
  LODWORD(STACK[0x35C]) = v54 - v47;
  v55 = STACK[0x4F0];
  LODWORD(STACK[0x3D8]) = v47 - LODWORD(STACK[0x4F0]);
  v56 = STACK[0x5B4];
  LODWORD(STACK[0x3F8]) = v55 - LODWORD(STACK[0x5B4]);
  v57 = STACK[0x4C8];
  LODWORD(STACK[0x3B8]) = LODWORD(STACK[0x4C8]) ^ v56;
  v58 = STACK[0x564];
  LODWORD(STACK[0x3FC]) = LODWORD(STACK[0x564]) + v57;
  v59 = STACK[0x5D0];
  LODWORD(STACK[0x3B4]) = v58 ^ LODWORD(STACK[0x5D0]);
  v60 = STACK[0x4F4];
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x4F4]) ^ v59;
  LODWORD(STACK[0x360]) = v38 ^ v60;
  v61 = STACK[0x618];
  LODWORD(STACK[0x340]) = v38 - LODWORD(STACK[0x618]);
  v62 = STACK[0x568];
  LODWORD(STACK[0x384]) = v61 - LODWORD(STACK[0x568]);
  v63 = STACK[0x484];
  LODWORD(STACK[0x33C]) = LODWORD(STACK[0x484]) + v62;
  v64 = STACK[0x5F8];
  LODWORD(STACK[0x2E4]) = v63 - LODWORD(STACK[0x5F8]);
  v65 = STACK[0x574];
  LODWORD(STACK[0x300]) = v64 + LODWORD(STACK[0x574]);
  v66 = STACK[0x53C];
  LODWORD(STACK[0x394]) = STACK[0x538];
  LODWORD(STACK[0x398]) = v65 + v66;
  v67 = STACK[0x5F0];
  LODWORD(STACK[0x3A8]) = v66 - LODWORD(STACK[0x5F0]);
  v68 = STACK[0x578];
  LODWORD(STACK[0x348]) = LODWORD(STACK[0x578]) + v67;
  v69 = STACK[0x4C4];
  v70 = STACK[0x4C0];
  LODWORD(STACK[0x2D8]) = v68 - LODWORD(STACK[0x4C4]);
  v71 = STACK[0x5D8];
  LODWORD(STACK[0x380]) = v69 - LODWORD(STACK[0x5D8]);
  v72 = STACK[0x5BC];
  LODWORD(STACK[0x364]) = v71 + LODWORD(STACK[0x5BC]);
  LODWORD(STACK[0x3A4]) = v72 + v70;
  v73 = STACK[0x560];
  LODWORD(STACK[0x2D0]) = LODWORD(STACK[0x560]) ^ v70;
  v74 = STACK[0x4E0];
  LODWORD(STACK[0x30C]) = v73 ^ LODWORD(STACK[0x4E0]);
  v75 = STACK[0x5A8];
  LODWORD(STACK[0x330]) = LODWORD(STACK[0x5A8]) ^ v74;
  v76 = STACK[0x4D8];
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x4D8]) ^ v75;
  v77 = STACK[0x55C];
  v78 = STACK[0x558];
  LODWORD(STACK[0x32C]) = v76 + LODWORD(STACK[0x55C]);
  v79 = STACK[0x598];
  LODWORD(STACK[0x328]) = LODWORD(STACK[0x598]) + v77;
  v80 = STACK[0x56C];
  LODWORD(STACK[0x2E8]) = v79 - LODWORD(STACK[0x56C]);
  v81 = STACK[0x4B0];
  v82 = STACK[0x4B4];
  LODWORD(STACK[0x2B8]) = v80 ^ LODWORD(STACK[0x4B0]);
  v83 = STACK[0x4A4];
  LODWORD(STACK[0x344]) = LODWORD(STACK[0x4A4]) + v81;
  v84 = STACK[0x478];
  LODWORD(STACK[0x2C0]) = LODWORD(STACK[0x478]) ^ v83;
  v85 = STACK[0x550];
  LODWORD(STACK[0x320]) = v84 + LODWORD(STACK[0x550]);
  LODWORD(STACK[0x2C8]) = v15 ^ v85;
  v86 = v15 ^ LODWORD(STACK[0x610]);
  v87 = LODWORD(STACK[0x610]) ^ LODWORD(STACK[0x488]);
  v88 = LODWORD(STACK[0x4EC]) ^ LODWORD(STACK[0x488]);
  LODWORD(STACK[0x34C]) = LODWORD(STACK[0x4EC]) ^ v22;
  v89 = STACK[0x4FC];
  v90 = STACK[0x4F8];
  LODWORD(STACK[0x278]) = v22 - LODWORD(STACK[0x4FC]);
  v91 = STACK[0x590];
  LODWORD(STACK[0x280]) = v33 + LODWORD(STACK[0x590]);
  LODWORD(STACK[0x304]) = v89 - v25;
  v92 = STACK[0x594];
  LODWORD(STACK[0x23C]) = v25 - LODWORD(STACK[0x594]);
  LODWORD(STACK[0x244]) = v42 - v91;
  v93 = STACK[0x510];
  v94 = STACK[0x514];
  LODWORD(STACK[0x250]) = LODWORD(STACK[0x510]) ^ v42;
  v95 = STACK[0x47C];
  LODWORD(STACK[0x324]) = LODWORD(STACK[0x47C]) - v93;
  v96 = STACK[0x580];
  LODWORD(STACK[0x248]) = v92 - LODWORD(STACK[0x580]);
  v97 = v96 ^ LODWORD(STACK[0x5A4]);
  v98 = v95 + LODWORD(STACK[0x5A4]);
  v99 = v21 - LODWORD(STACK[0x528]);
  v100 = LODWORD(STACK[0x528]) - LODWORD(STACK[0x490]);
  v101 = v52 ^ LODWORD(STACK[0x490]);
  v102 = STACK[0x50C];
  LODWORD(STACK[0x260]) = v52 ^ LODWORD(STACK[0x50C]);
  v103 = LODWORD(STACK[0x58C]) + v102;
  v104 = STACK[0x460];
  v105 = STACK[0x464];
  v106 = LODWORD(STACK[0x58C]) - LODWORD(STACK[0x460]);
  STACK[0x458] = v6;
  v107 = STACK[0x4E8];
  LODWORD(STACK[0x238]) = v104 - LODWORD(STACK[0x4E8]);
  v108 = v94 + v107;
  v109 = STACK[0x5FC];
  LODWORD(STACK[0x288]) = v94 - LODWORD(STACK[0x5FC]);
  v110 = STACK[0x54C];
  v111 = v109 - LODWORD(STACK[0x548]);
  v112 = LODWORD(STACK[0x548]) + LODWORD(STACK[0x600]);
  LODWORD(STACK[0x230]) = v105 ^ LODWORD(STACK[0x600]);
  v113 = v105 - LODWORD(STACK[0x5EC]);
  v114 = LODWORD(STACK[0x5EC]) - v17;
  v115 = LODWORD(STACK[0x608]) ^ v17;
  v116 = LODWORD(STACK[0x608]) ^ v32;
  LODWORD(STACK[0x210]) = v82 + v32;
  v117 = v110 ^ v82;
  v118 = v110 + LODWORD(STACK[0x52C]);
  LODWORD(STACK[0x218]) = v78 ^ LODWORD(STACK[0x52C]);
  v119 = v78 + LODWORD(STACK[0x570]);
  v439 = LODWORD(STACK[0x570]) - LODWORD(STACK[0x5B8]);
  v120 = LODWORD(STACK[0x5B8]) - LODWORD(STACK[0x5C0]);
  v121 = LODWORD(STACK[0x5C0]) ^ LODWORD(STACK[0x5AC]);
  v122 = STACK[0x5DC];
  LODWORD(STACK[0x228]) = LODWORD(STACK[0x5DC]) ^ LODWORD(STACK[0x5AC]);
  v123 = STACK[0x394];
  v458 = v122 + LODWORD(STACK[0x394]);
  LODWORD(STACK[0x308]) = LODWORD(STACK[0x3E8]) + v86;
  v124 = v90 + v123;
  v125 = STACK[0x4D0];
  LODWORD(STACK[0x22C]) = v90 - LODWORD(STACK[0x4D0]);
  v126 = STACK[0x3BC];
  LODWORD(STACK[0x2B0]) = v86 - LODWORD(STACK[0x3BC]);
  v127 = STACK[0x604];
  v128 = v125 - LODWORD(STACK[0x604]);
  LODWORD(STACK[0x338]) = v126 - v128;
  LODWORD(STACK[0x394]) = v128 - v112;
  LODWORD(STACK[0x318]) = v112 - v101;
  v129 = STACK[0x3E0];
  LODWORD(STACK[0x358]) = v101 + LODWORD(STACK[0x3E0]);
  v130 = STACK[0x390];
  LODWORD(STACK[0x370]) = LODWORD(STACK[0x390]) ^ v129;
  LODWORD(STACK[0x3E8]) = v130 ^ v116;
  LODWORD(STACK[0x390]) = v88 + v116;
  LODWORD(STACK[0x334]) = v88 ^ v99;
  LODWORD(STACK[0x240]) = v99 ^ v124;
  v131 = STACK[0x3D4];
  LODWORD(STACK[0x2A0]) = v124 + LODWORD(STACK[0x3D4]);
  LODWORD(STACK[0x36C]) = v111 ^ v131;
  LODWORD(STACK[0x2A8]) = v111 + v87;
  v132 = STACK[0x354];
  LODWORD(STACK[0x3E0]) = v87 - LODWORD(STACK[0x354]);
  LODWORD(STACK[0x270]) = v132 - v98;
  v133 = STACK[0x348];
  LODWORD(STACK[0x3BC]) = v98 - LODWORD(STACK[0x348]);
  v134 = STACK[0x2E8];
  LODWORD(STACK[0x290]) = LODWORD(STACK[0x2E8]) ^ v133;
  LODWORD(STACK[0x348]) = v134 - v118;
  v135 = STACK[0x39C];
  LODWORD(STACK[0x3D4]) = v118 - LODWORD(STACK[0x39C]);
  v136 = STACK[0x3AC];
  LODWORD(STACK[0x2E8]) = v135 + LODWORD(STACK[0x3AC]);
  v137 = STACK[0x340];
  LODWORD(STACK[0x298]) = v136 - LODWORD(STACK[0x340]);
  v138 = STACK[0x2D8];
  LODWORD(STACK[0x340]) = v137 + LODWORD(STACK[0x2D8]);
  v139 = STACK[0x2C0];
  LODWORD(STACK[0x3AC]) = LODWORD(STACK[0x2C0]) ^ v138;
  v140 = STACK[0x3B0];
  LODWORD(STACK[0x39C]) = LODWORD(STACK[0x3B0]) ^ v139;
  v141 = STACK[0x2E4];
  LODWORD(STACK[0x268]) = v140 ^ LODWORD(STACK[0x2E4]);
  v426 = v141 + v106;
  v142 = STACK[0x3A0];
  LODWORD(STACK[0x354]) = LODWORD(STACK[0x3A0]) + v106;
  v143 = STACK[0x374];
  LODWORD(STACK[0x2D8]) = v142 ^ LODWORD(STACK[0x374]);
  v144 = STACK[0x300];
  LODWORD(STACK[0x258]) = LODWORD(STACK[0x300]) ^ v143;
  LODWORD(STACK[0x300]) = v113 + v144;
  v456 = v113 + v119;
  LODWORD(STACK[0x3B0]) = v119 + v121;
  v145 = STACK[0x378];
  LODWORD(STACK[0x2C0]) = LODWORD(STACK[0x378]) + v121;
  LODWORD(STACK[0x208]) = v145 + v97;
  v146 = STACK[0x23C];
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x23C]) ^ v97;
  v147 = STACK[0x3DC];
  LODWORD(STACK[0x200]) = v146 - LODWORD(STACK[0x3DC]);
  v433 = v147 - LODWORD(STACK[0x2B8]);
  v148 = STACK[0x244];
  LODWORD(STACK[0x3DC]) = LODWORD(STACK[0x2B8]) + LODWORD(STACK[0x244]);
  v450 = v148 + v103;
  v149 = STACK[0x2D0];
  LODWORD(STACK[0x2E4]) = v103 - LODWORD(STACK[0x2D0]);
  v150 = STACK[0x3D0];
  LODWORD(STACK[0x2B8]) = v149 ^ LODWORD(STACK[0x3D0]);
  v151 = STACK[0x368];
  LODWORD(STACK[0x374]) = v150 ^ LODWORD(STACK[0x368]);
  v152 = STACK[0x35C];
  LODWORD(STACK[0x2D0]) = LODWORD(STACK[0x35C]) ^ v151;
  v153 = STACK[0x3CC];
  LODWORD(STACK[0x368]) = v152 ^ LODWORD(STACK[0x3CC]);
  v154 = v153 - v115;
  v443 = v115 - LODWORD(STACK[0x3F0]);
  v155 = LODWORD(STACK[0x3E4]) ^ LODWORD(STACK[0x3F0]);
  LODWORD(STACK[0x20C]) = LODWORD(STACK[0x3E4]) + v108;
  v156 = LODWORD(STACK[0x3C4]) ^ v108;
  v157 = STACK[0x3C8];
  LODWORD(STACK[0x23C]) = LODWORD(STACK[0x3C4]) + LODWORD(STACK[0x3C8]);
  v158 = v157 - LODWORD(STACK[0x33C]);
  v159 = STACK[0x350];
  LODWORD(STACK[0x3E4]) = LODWORD(STACK[0x350]) + LODWORD(STACK[0x33C]);
  v160 = STACK[0x37C];
  LODWORD(STACK[0x3D0]) = LODWORD(STACK[0x37C]) ^ v159;
  LODWORD(STACK[0x350]) = v160 - v114;
  v161 = STACK[0x408];
  LODWORD(STACK[0x3C8]) = v114 + LODWORD(STACK[0x408]);
  v430 = v161 + LODWORD(STACK[0x238]);
  v162 = LODWORD(STACK[0x38C]) + LODWORD(STACK[0x238]);
  v163 = LODWORD(STACK[0x38C]) ^ LODWORD(STACK[0x360]);
  v164 = STACK[0x400];
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x360]) ^ LODWORD(STACK[0x400]);
  v165 = STACK[0x250];
  LODWORD(STACK[0x33C]) = LODWORD(STACK[0x250]) ^ v164;
  v447 = v165 - LODWORD(STACK[0x278]);
  v453 = LODWORD(STACK[0x30C]) + LODWORD(STACK[0x278]);
  v166 = STACK[0x248];
  LODWORD(STACK[0x224]) = LODWORD(STACK[0x30C]) ^ LODWORD(STACK[0x248]);
  LODWORD(STACK[0x244]) = v166 - v117;
  v167 = STACK[0x438];
  LODWORD(STACK[0x408]) = v117 - LODWORD(STACK[0x438]);
  v168 = STACK[0x280];
  LODWORD(STACK[0x234]) = LODWORD(STACK[0x280]) + v167;
  LODWORD(STACK[0x238]) = v168 + v100;
  v169 = v100 ^ LODWORD(STACK[0x3C0]);
  v170 = LODWORD(STACK[0x3C0]) + LODWORD(STACK[0x2C8]);
  v171 = LODWORD(STACK[0x210]) ^ LODWORD(STACK[0x2C8]);
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x210]) ^ v439;
  v172 = STACK[0x330];
  LODWORD(STACK[0x250]) = LODWORD(STACK[0x330]) ^ v439;
  v173 = LODWORD(STACK[0x448]) ^ v172;
  v174 = LODWORD(STACK[0x448]) - LODWORD(STACK[0x230]);
  v440 = LODWORD(STACK[0x230]) + LODWORD(STACK[0x384]);
  LODWORD(STACK[0x230]) = LODWORD(STACK[0x384]) - v127;
  v175 = v127 - LODWORD(STACK[0x32C]);
  v436 = LODWORD(STACK[0x32C]) - LODWORD(STACK[0x3B8]);
  v176 = STACK[0x328];
  LODWORD(STACK[0x30C]) = LODWORD(STACK[0x3B8]) ^ LODWORD(STACK[0x328]);
  v420 = LODWORD(STACK[0x260]) ^ v176;
  v177 = STACK[0x3B4];
  LODWORD(STACK[0x210]) = LODWORD(STACK[0x260]) - LODWORD(STACK[0x3B4]);
  v178 = v177 + LODWORD(STACK[0x3F4]);
  v179 = LODWORD(STACK[0x3F4]) + LODWORD(STACK[0x364]);
  v180 = STACK[0x40C];
  LODWORD(STACK[0x328]) = LODWORD(STACK[0x40C]) + LODWORD(STACK[0x364]);
  v181 = LODWORD(STACK[0x218]) ^ v180;
  v182 = LODWORD(STACK[0x218]) ^ LODWORD(STACK[0x320]);
  v183 = STACK[0x3D8];
  LODWORD(STACK[0x364]) = LODWORD(STACK[0x3D8]) ^ LODWORD(STACK[0x320]);
  v417 = v183 + LODWORD(STACK[0x410]);
  v184 = LODWORD(STACK[0x410]) - LODWORD(STACK[0x398]);
  v185 = LODWORD(STACK[0x304]) ^ LODWORD(STACK[0x398]);
  v186 = LODWORD(STACK[0x304]) - LODWORD(STACK[0x344]);
  v187 = LODWORD(STACK[0x344]) - LODWORD(STACK[0x380]);
  v413 = LODWORD(STACK[0x380]) + v120;
  v188 = v120 - LODWORD(STACK[0x404]);
  v189 = LODWORD(STACK[0x404]) - v458;
  v190 = STACK[0x228];
  LODWORD(STACK[0x3F4]) = v458 - LODWORD(STACK[0x228]);
  v191 = STACK[0x3A8];
  LODWORD(STACK[0x32C]) = v190 ^ LODWORD(STACK[0x3A8]);
  v192 = LODWORD(STACK[0x288]) ^ v191;
  v193 = STACK[0x3F8];
  LODWORD(STACK[0x3B4]) = LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x3F8]);
  LODWORD(STACK[0x438]) = v158 ^ v187;
  LODWORD(STACK[0x3C4]) = v158 ^ v188;
  v194 = LODWORD(STACK[0x44C]) + v193;
  v195 = LODWORD(STACK[0x44C]) + LODWORD(STACK[0x440]);
  v196 = LODWORD(STACK[0x440]) + LODWORD(STACK[0x22C]);
  v197 = LODWORD(STACK[0x388]) + LODWORD(STACK[0x22C]);
  v198 = STACK[0x3A4];
  v199 = LODWORD(STACK[0x388]) + LODWORD(STACK[0x3A4]);
  LODWORD(STACK[0x344]) = v170 + v188;
  v200 = v198 - LODWORD(STACK[0x414]);
  v201 = STACK[0x324];
  LODWORD(STACK[0x440]) = LODWORD(STACK[0x324]) ^ LODWORD(STACK[0x414]);
  v202 = STACK[0x34C];
  LODWORD(STACK[0x3A4]) = v201 ^ LODWORD(STACK[0x34C]);
  v203 = STACK[0x430];
  v204 = v202 + LODWORD(STACK[0x430]);
  LODWORD(STACK[0x218]) = v200 ^ v170;
  v205 = STACK[0x3FC];
  LODWORD(STACK[0x324]) = LODWORD(STACK[0x3FC]) ^ v203;
  LODWORD(STACK[0x3D8]) = v200 + v426;
  LODWORD(STACK[0x40C]) = v162 ^ v426;
  v427 = v162 - v175;
  LODWORD(STACK[0x448]) = v175 + v156;
  LODWORD(STACK[0x430]) = v163 + v156;
  v206 = STACK[0x240];
  LODWORD(STACK[0x378]) = v163 + LODWORD(STACK[0x240]);
  LODWORD(STACK[0x34C]) = v206 + v186;
  LODWORD(STACK[0x278]) = v186 - v174;
  LODWORD(STACK[0x388]) = v174 + v185;
  LODWORD(STACK[0x404]) = v185 - v154;
  v207 = STACK[0x368];
  LODWORD(STACK[0x44C]) = v154 - LODWORD(STACK[0x368]);
  LODWORD(STACK[0x3F8]) = v178 ^ v207;
  LODWORD(STACK[0x3F0]) = v178 ^ v184;
  v208 = STACK[0x374];
  LODWORD(STACK[0x35C]) = LODWORD(STACK[0x374]) ^ v184;
  LODWORD(STACK[0x374]) = v433 + v208;
  LODWORD(STACK[0x410]) = v456 + v433;
  v209 = v456 - v173;
  v210 = v173 - v204;
  LODWORD(STACK[0x22C]) = v204 - v171;
  LODWORD(STACK[0x400]) = v171 - v196;
  LODWORD(STACK[0x330]) = v196 - v199;
  LODWORD(STACK[0x360]) = v199 + v169;
  LODWORD(STACK[0x320]) = v169 - v450;
  LODWORD(STACK[0x3A8]) = v450 - v192;
  v211 = STACK[0x200];
  LODWORD(STACK[0x3CC]) = LODWORD(STACK[0x200]) ^ v192;
  LODWORD(STACK[0x3B8]) = v211 - v197;
  LODWORD(STACK[0x368]) = v197 + v443;
  v212 = STACK[0x208];
  LODWORD(STACK[0x38C]) = v443 + LODWORD(STACK[0x208]);
  LODWORD(STACK[0x240]) = v182 + v212;
  v213 = STACK[0x350];
  LODWORD(STACK[0x248]) = LODWORD(STACK[0x350]) + v182;
  v421 = v213 + LODWORD(STACK[0x2B0]);
  LODWORD(STACK[0x398]) = v179 ^ LODWORD(STACK[0x2B0]);
  v214 = STACK[0x270];
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x270]) + v179;
  v215 = v214 ^ v430;
  LODWORD(STACK[0x3C0]) = v430 + v181;
  v451 = v205 + v181;
  v457 = v205 - LODWORD(STACK[0x290]);
  v216 = STACK[0x258];
  LODWORD(STACK[0x260]) = LODWORD(STACK[0x290]) ^ LODWORD(STACK[0x258]);
  v217 = STACK[0x308];
  LODWORD(STACK[0x200]) = LODWORD(STACK[0x308]) ^ v216;
  v218 = v217 ^ LODWORD(STACK[0x2A0]);
  v219 = LODWORD(STACK[0x268]) ^ LODWORD(STACK[0x2A0]);
  v220 = STACK[0x300];
  LODWORD(STACK[0x2C8]) = LODWORD(STACK[0x268]) + LODWORD(STACK[0x300]);
  v409 = v220 - v447;
  v221 = STACK[0x2A8];
  LODWORD(STACK[0x384]) = v447 - LODWORD(STACK[0x2A8]);
  v222 = STACK[0x37C];
  LODWORD(STACK[0x208]) = LODWORD(STACK[0x37C]) + v221;
  v448 = LODWORD(STACK[0x20C]) ^ v222;
  v444 = v453 ^ LODWORD(STACK[0x20C]);
  v223 = STACK[0x298];
  LODWORD(STACK[0x2A0]) = v453 - LODWORD(STACK[0x298]);
  LODWORD(STACK[0x380]) = v195 + v223;
  v224 = v155 + v195 - 2 * v155;
  v225 = STACK[0x318];
  LODWORD(STACK[0x304]) = v155 + LODWORD(STACK[0x318]);
  LODWORD(STACK[0x37C]) = v225 - v189;
  v226 = STACK[0x364];
  LODWORD(STACK[0x414]) = LODWORD(STACK[0x364]) ^ v189;
  v423 = v226 ^ v420;
  v227 = v420 - v440;
  v228 = v440 + LODWORD(STACK[0x23C]);
  LODWORD(STACK[0x364]) = v194 + LODWORD(STACK[0x23C]);
  LODWORD(STACK[0x258]) = v436 ^ v194;
  v229 = STACK[0x338];
  LODWORD(STACK[0x308]) = v436 ^ LODWORD(STACK[0x338]);
  LODWORD(STACK[0x318]) = v229 - v413;
  v230 = v413 ^ LODWORD(STACK[0x30C]);
  LODWORD(STACK[0x300]) = v417 ^ LODWORD(STACK[0x30C]);
  v231 = STACK[0x224];
  LODWORD(STACK[0x30C]) = LODWORD(STACK[0x224]) ^ v417;
  v431 = v231 ^ LODWORD(STACK[0x2E8]);
  v232 = STACK[0x2C0];
  v233 = LODWORD(STACK[0x2E8]) ^ LODWORD(STACK[0x2C0]);
  LODWORD(STACK[0x290]) = v233;
  v234 = STACK[0x334];
  LODWORD(STACK[0x3FC]) = v232 ^ LODWORD(STACK[0x334]);
  v235 = STACK[0x280];
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x280]) ^ v234;
  v411 = v235 + LODWORD(STACK[0x2D8]);
  v236 = STACK[0x234];
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x2D8]) - LODWORD(STACK[0x234]);
  v237 = LODWORD(STACK[0x238]) + v236;
  v238 = LODWORD(STACK[0x238]) + LODWORD(STACK[0x33C]);
  v239 = LODWORD(STACK[0x33C]) - LODWORD(STACK[0x358]);
  v240 = STACK[0x2B8];
  LODWORD(STACK[0x358]) += LODWORD(STACK[0x2B8]);
  v241 = STACK[0x3F4];
  LODWORD(STACK[0x23C]) = v240 ^ LODWORD(STACK[0x3F4]);
  v242 = STACK[0x244];
  LODWORD(STACK[0x33C]) = LODWORD(STACK[0x244]) + v241;
  v243 = v242 + LODWORD(STACK[0x2D0]);
  v414 = LODWORD(STACK[0x2D0]) - LODWORD(STACK[0x230]);
  v244 = STACK[0x440];
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x440]) + LODWORD(STACK[0x230]);
  v245 = STACK[0x210];
  LODWORD(STACK[0x3F4]) = LODWORD(STACK[0x210]) ^ v244;
  v246 = v245 ^ LODWORD(STACK[0x340]);
  v247 = STACK[0x3C8];
  LODWORD(STACK[0x20C]) = LODWORD(STACK[0x340]) - LODWORD(STACK[0x3C8]);
  v248 = STACK[0x348];
  LODWORD(STACK[0x440]) = LODWORD(STACK[0x348]) + v247;
  v249 = STACK[0x2E4];
  LODWORD(STACK[0x340]) = LODWORD(STACK[0x2E4]) + v248;
  v250 = LODWORD(STACK[0x39C]) ^ v249;
  v251 = STACK[0x3A4];
  v252 = LODWORD(STACK[0x39C]) ^ LODWORD(STACK[0x3A4]);
  LODWORD(STACK[0x238]) = v252;
  v253 = STACK[0x250];
  LODWORD(STACK[0x268]) = v251 - LODWORD(STACK[0x250]);
  v418 = LODWORD(STACK[0x324]) + v253;
  v437 = LODWORD(STACK[0x324]) - LODWORD(STACK[0x328]);
  v254 = STACK[0x370];
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x328]) ^ LODWORD(STACK[0x370]);
  v255 = v254 - LODWORD(STACK[0x36C]);
  v441 = LODWORD(STACK[0x394]) + LODWORD(STACK[0x36C]);
  v256 = LODWORD(STACK[0x3A0]) ^ LODWORD(STACK[0x394]);
  v257 = STACK[0x3B0];
  LODWORD(STACK[0x2A8]) = LODWORD(STACK[0x3B0]) + LODWORD(STACK[0x3A0]);
  v258 = STACK[0x390];
  v259 = v257 + LODWORD(STACK[0x390]);
  LODWORD(STACK[0x298]) = v259;
  LODWORD(STACK[0x228]) = v210;
  LODWORD(STACK[0x338]) = (v259 + v255) ^ -(v259 + v255) ^ (v210 - ((v259 + v255) ^ v210));
  LODWORD(STACK[0x3A4]) = v210 + v427 + 490690395;
  LODWORD(STACK[0x3A0]) = v218 - v227 + 1051146559;
  v260 = v209;
  LODWORD(STACK[0x39C]) = (v238 ^ v209) - 458250241;
  v459 = v258 - LODWORD(STACK[0x3B4]);
  v261 = LODWORD(STACK[0x3B4]) + LODWORD(STACK[0x3AC]);
  v262 = STACK[0x3D0];
  LODWORD(STACK[0x210]) = LODWORD(STACK[0x3D0]) ^ LODWORD(STACK[0x3AC]);
  v263 = v262 ^ LODWORD(STACK[0x3BC]);
  v264 = LODWORD(STACK[0x408]) + LODWORD(STACK[0x3BC]);
  v265 = STACK[0x32C];
  v434 = LODWORD(STACK[0x408]) ^ LODWORD(STACK[0x32C]);
  LODWORD(STACK[0x3AC]) = v434 + v409 - 28270860;
  LODWORD(STACK[0x324]) = v215 + v228 - 1957508952;
  LODWORD(STACK[0x224]) = v219 + v215;
  LODWORD(STACK[0x3B4]) = v233 - v219 - 636306051;
  v266 = LODWORD(STACK[0x3D4]) ^ v265;
  v454 = LODWORD(STACK[0x3D4]) ^ LODWORD(STACK[0x3E4]);
  v267 = STACK[0x3DC];
  v268 = LODWORD(STACK[0x3E4]) - LODWORD(STACK[0x3DC]);
  LODWORD(STACK[0x244]) = v268;
  v269 = LODWORD(STACK[0x3E8]) ^ v267;
  v270 = STACK[0x3E0];
  v271 = LODWORD(STACK[0x3E8]) + LODWORD(STACK[0x3E0]);
  LODWORD(STACK[0x2E8]) = v271 + v228 - 1588447828;
  LODWORD(STACK[0x2D8]) = (v418 ^ v243) + 1494079556;
  v272 = STACK[0x3A8];
  LODWORD(STACK[0x250]) = v260 + LODWORD(STACK[0x3A8]);
  LODWORD(STACK[0x3C8]) = v459 + v272 - 1647713323;
  LODWORD(STACK[0x2B8]) = (v421 ^ LODWORD(STACK[0x404])) - 1599765746;
  LODWORD(STACK[0x370]) = v218 ^ v230;
  LODWORD(STACK[0x234]) = v246 ^ v230;
  v273 = v224 - v246;
  LODWORD(STACK[0x334]) = v451 - v224;
  LODWORD(STACK[0x3A8]) = v451 + v252 + 164106559;
  LODWORD(STACK[0x2C0]) = v409 - v444;
  v274 = STACK[0x240];
  LODWORD(STACK[0x2E4]) = v444 - LODWORD(STACK[0x240]) + 1309729080;
  LODWORD(STACK[0x328]) = (v263 ^ v411) - 497041941;
  v275 = STACK[0x3D8];
  LODWORD(STACK[0x32C]) = v423 - LODWORD(STACK[0x3D8]) + 1811583428;
  v276 = STACK[0x34C];
  LODWORD(STACK[0x240]) = v274 ^ LODWORD(STACK[0x34C]);
  v277 = v276 - v256;
  v278 = v256 - LODWORD(STACK[0x320]);
  LODWORD(STACK[0x320]) += v239;
  v279 = v239 - v264;
  v445 = v264 - v237;
  v280 = STACK[0x330];
  LODWORD(STACK[0x230]) = v237 - LODWORD(STACK[0x330]);
  v281 = STACK[0x448];
  LODWORD(STACK[0x408]) = v280 - LODWORD(STACK[0x448]);
  LODWORD(STACK[0x34C]) = (v281 ^ v414) + 311382148;
  v452 = v263 + v261;
  LODWORD(STACK[0x3B0]) = v271 + v261 + 333282223;
  LODWORD(STACK[0x330]) = (v227 ^ v423) + 528049614;
  LODWORD(STACK[0x448]) = v278 + 36303559;
  v282 = v250 - LODWORD(STACK[0x208]);
  v283 = STACK[0x22C];
  LODWORD(STACK[0x3E4]) = (LODWORD(STACK[0x22C]) ^ LODWORD(STACK[0x208])) + 606319667;
  v284 = STACK[0x200];
  LODWORD(STACK[0x3D4]) = v266 + LODWORD(STACK[0x200]) + 1225416065;
  LODWORD(STACK[0x2D0]) = v243 - v250 + 2127735694;
  LODWORD(STACK[0x36C]) = v255 + v431 + 1413685034;
  v285 = STACK[0x354];
  v286 = v270 - LODWORD(STACK[0x354]);
  LODWORD(STACK[0x348]) = v286 + v275;
  v287 = STACK[0x218];
  LODWORD(STACK[0x3D0]) = (v286 ^ LODWORD(STACK[0x218])) + 458776302;
  v424 = LODWORD(STACK[0x430]) + v411;
  v288 = STACK[0x2C8];
  LODWORD(STACK[0x3DC]) = (LODWORD(STACK[0x2C8]) ^ LODWORD(STACK[0x430])) - 1282493614;
  LODWORD(STACK[0x3D8]) = v268 - LODWORD(STACK[0x440]) - 370124376;
  v289 = LODWORD(STACK[0x384]) + LODWORD(STACK[0x3C0]);
  v290 = LODWORD(STACK[0x384]) - LODWORD(STACK[0x358]);
  LODWORD(STACK[0x3C0]) = LODWORD(STACK[0x358]) - v448 - 364263164;
  LODWORD(STACK[0x430]) = LODWORD(STACK[0x400]) + v431 - 22694015;
  LODWORD(STACK[0x384]) = v273 - 1942173487;
  LODWORD(STACK[0x208]) = v437 + v288;
  LODWORD(STACK[0x2C8]) = (v437 ^ LODWORD(STACK[0x438])) - 426458387;
  v291 = v427 ^ LODWORD(STACK[0x38C]);
  v292 = STACK[0x368];
  v438 = LODWORD(STACK[0x38C]) - LODWORD(STACK[0x368]) - 359743939;
  v293 = STACK[0x30C];
  LODWORD(STACK[0x394]) = (v457 ^ LODWORD(STACK[0x30C])) - 932750262;
  v294 = STACK[0x23C];
  LODWORD(STACK[0x358]) = LODWORD(STACK[0x23C]) - v418 - 1712161250;
  LODWORD(STACK[0x3E8]) = v441 - v293 + 1318370278;
  v295 = STACK[0x3B8];
  LODWORD(STACK[0x30C]) = LODWORD(STACK[0x3B8]) - LODWORD(STACK[0x298]);
  v296 = LODWORD(STACK[0x318]) - v295;
  v297 = STACK[0x2A8];
  LODWORD(STACK[0x318]) ^= LODWORD(STACK[0x2A8]);
  v298 = STACK[0x280];
  LODWORD(STACK[0x3B8]) = LODWORD(STACK[0x280]) - v297 - 1725341192;
  LODWORD(STACK[0x3E0]) = v277 - 91183334;
  v299 = STACK[0x270];
  LODWORD(STACK[0x390]) = v269 + LODWORD(STACK[0x270]) + 95807692;
  LODWORD(STACK[0x3BC]) = v282 - 1568366089;
  LODWORD(STACK[0x2A8]) = v421 - v269 - 2100036879;
  v300 = STACK[0x364];
  LODWORD(STACK[0x298]) = LODWORD(STACK[0x364]) - v459;
  v301 = STACK[0x260];
  v412 = (v300 ^ LODWORD(STACK[0x260])) - 1525298127;
  LODWORD(STACK[0x2A0]) += v434 + 672590028;
  v302 = STACK[0x344];
  v303 = STACK[0x3F8];
  LODWORD(STACK[0x38C]) = LODWORD(STACK[0x344]) + LODWORD(STACK[0x3F8]) - 555844223;
  v460 = v284 - 2106966944 + v303;
  v435 = (v294 ^ LODWORD(STACK[0x3FC])) - 868188913;
  LODWORD(STACK[0x3F8]) = v291 + 617603024;
  v304 = STACK[0x2B0];
  v305 = LODWORD(STACK[0x290]) ^ LODWORD(STACK[0x2B0]);
  LODWORD(STACK[0x23C]) = v305;
  v306 = v304 - 496646612;
  v422 = v414 - LODWORD(STACK[0x210]);
  v307 = STACK[0x380];
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x380]) + LODWORD(STACK[0x210]) - 1570640853;
  v308 = STACK[0x410];
  LODWORD(STACK[0x368]) = v292 + LODWORD(STACK[0x410]);
  v309 = STACK[0x278];
  LODWORD(STACK[0x290]) = LODWORD(STACK[0x278]) + v308 - 586447029;
  LODWORD(STACK[0x364]) = v296 - 772812299;
  v310 = STACK[0x20C];
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x20C]) + v307 + 1454477839;
  v408 = LODWORD(STACK[0x304]) ^ v283;
  v311 = STACK[0x258];
  LODWORD(STACK[0x410]) = LODWORD(STACK[0x304]) + LODWORD(STACK[0x258]) + 1781906963;
  v415 = v298 + LODWORD(STACK[0x378]);
  LODWORD(STACK[0x280]) = v454 - LODWORD(STACK[0x378]) - 429123823;
  v312 = STACK[0x388];
  v313 = LODWORD(STACK[0x388]) ^ v299;
  LODWORD(STACK[0x200]) = v313;
  v314 = STACK[0x360];
  LODWORD(STACK[0x270]) = v312 - LODWORD(STACK[0x360]);
  v315 = STACK[0x300];
  v316 = v314 + LODWORD(STACK[0x300]);
  v317 = STACK[0x288];
  v318 = LODWORD(STACK[0x288]) - v301;
  LODWORD(STACK[0x22C]) = v318;
  v319 = LODWORD(STACK[0x374]) - v317;
  v320 = v315 + LODWORD(STACK[0x374]);
  LODWORD(STACK[0x210]) = v320;
  v410 = LODWORD(STACK[0x308]) - v441;
  LODWORD(STACK[0x360]) = v448 + LODWORD(STACK[0x308]) - 1991397452;
  LODWORD(STACK[0x374]) = v290 - 1172588980;
  v321 = v457 - LODWORD(STACK[0x268]);
  v322 = LODWORD(STACK[0x268]) + v266 - 2 * v266 - 438119242;
  v323 = v279 ^ 0x80F01509;
  v442 = v279 ^ 0x80F01509;
  v324 = LODWORD(STACK[0x40C]) + 832621560;
  v325 = STACK[0x350];
  LODWORD(STACK[0x260]) = (LODWORD(STACK[0x40C]) - LODWORD(STACK[0x350])) ^ 0xDAE28B6C;
  v326 = STACK[0x3CC];
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x3CC]) + v454;
  LODWORD(STACK[0x268]) = v287 ^ v326 ^ 0x72E3317C;
  v419 = LODWORD(STACK[0x3F0]) ^ LODWORD(STACK[0x3F4]) ^ 0xFCC1F5C4;
  v327 = STACK[0x398];
  LODWORD(STACK[0x40C]) = LODWORD(STACK[0x3F0]) ^ LODWORD(STACK[0x398]);
  v328 = v325 ^ v327 ^ 0xAE62C5C0;
  v449 = LODWORD(STACK[0x33C]) - LODWORD(STACK[0x404]);
  v329 = v302 ^ LODWORD(STACK[0x33C]) ^ 0x251D98F7;
  LODWORD(STACK[0x398]) = LODWORD(STACK[0x224]) ^ 0xDDD7C992;
  v330 = v319 ^ 0x9D16B3FD;
  v432 = v319 ^ 0x9D16B3FD;
  v331 = v289 ^ 0xF51276DC;
  v428 = v289 ^ 0xF51276DC;
  v332 = STACK[0x37C];
  v333 = LODWORD(STACK[0x37C]) + v306;
  LODWORD(STACK[0x388]) = v333;
  v334 = STACK[0x340];
  LODWORD(STACK[0x404]) = (LODWORD(STACK[0x340]) + v332) ^ 0x5D591D08;
  LODWORD(STACK[0x224]) = v311 + v285;
  v335 = STACK[0x228];
  LODWORD(STACK[0x218]) = v285 - LODWORD(STACK[0x228]);
  LODWORD(STACK[0x3F0]) = v335 ^ 0x19B73A69 ^ (LODWORD(STACK[0x338]) + v335);
  v336 = STACK[0x35C];
  v337 = (LODWORD(STACK[0x35C]) - LODWORD(STACK[0x244])) ^ 0x21493595;
  LODWORD(STACK[0x308]) = v337;
  v338 = v310 ^ v334 ^ 0x5FBFAA54;
  LODWORD(STACK[0x37C]) = v338;
  LODWORD(STACK[0x378]) = v452 ^ 0xD7D8BC22;
  LODWORD(STACK[0x354]) = v321 ^ 0x57A32678;
  LODWORD(STACK[0x3CC]) = v316 ^ 0x462F77E6;
  v339 = v424 ^ 0x5B5EFC44;
  LODWORD(STACK[0x300]) = v424 ^ 0x5B5EFC44;
  v340 = LODWORD(STACK[0x250]) ^ 0x5413D66B;
  LODWORD(STACK[0x304]) = v340;
  v341 = v415 ^ 0x73A42F47;
  v416 = LODWORD(STACK[0x3C4]) + v324;
  v342 = (LODWORD(STACK[0x44C]) + LODWORD(STACK[0x3C4])) ^ 0xB1DEA639;
  LODWORD(STACK[0x3C4]) = v342;
  v343 = LODWORD(STACK[0x414]) - v336;
  v425 = LODWORD(STACK[0x348]) ^ 0xE27F9A58;
  v344 = LODWORD(STACK[0x390]) ^ LODWORD(STACK[0x3B0]) ^ LODWORD(STACK[0x3C8]);
  LODWORD(STACK[0x244]) = v305 - 743347465;
  v345 = v344 ^ (v305 - 743347465) ^ v425 ^ v337 ^ LODWORD(STACK[0x3D0]);
  LODWORD(STACK[0x350]) = v318 - 1127577909;
  v346 = v345 ^ (v318 - 1127577909) ^ LODWORD(STACK[0x3E4]) ^ (v343 + 2036383933);
  v347 = v429 ^ LODWORD(STACK[0x448]) ^ LODWORD(STACK[0x3E0]) ^ v333;
  LODWORD(STACK[0x33C]) = v328;
  v348 = v347 ^ v328 ^ v346;
  v349 = STACK[0x32C];
  v350 = LODWORD(STACK[0x32C]) ^ v342;
  LODWORD(STACK[0x344]) = v329;
  v351 = v348 ^ v350 ^ v329;
  LODWORD(STACK[0x258]) = v322;
  v352 = LODWORD(STACK[0x298]) + 1090113325;
  v353 = LODWORD(STACK[0x318]) + 910439079;
  v354 = v322 ^ v323 ^ LODWORD(STACK[0x3D8]) ^ v331 ^ (v320 - 1006264083) ^ LODWORD(STACK[0x380]) ^ LODWORD(STACK[0x268]) ^ v353;
  LODWORD(STACK[0x35C]) = v309 + 1019876628;
  LODWORD(STACK[0x340]) = v352;
  v355 = STACK[0x2B8];
  v356 = v351 ^ v354 ^ v412 ^ v330 ^ (v309 + 1019876628) ^ v352 ^ LODWORD(STACK[0x290]) ^ LODWORD(STACK[0x2B0]) ^ v416 ^ (v313 + 1063807427) ^ v340 ^ LODWORD(STACK[0x260]) ^ LODWORD(STACK[0x2A8]) ^ LODWORD(STACK[0x280]) ^ v452 ^ 0xD7D8BC22 ^ LODWORD(STACK[0x2B8]) ^ v339;
  v357 = LODWORD(STACK[0x224]) ^ 0xF768FD6;
  v358 = LODWORD(STACK[0x270]) - 826467143;
  v359 = v357 ^ LODWORD(STACK[0x3B8]);
  LODWORD(STACK[0x250]) = v445 ^ 0xF1856D6B;
  v360 = v359 ^ v445 ^ 0xF1856D6B ^ v341 ^ v358 ^ LODWORD(STACK[0x360]) ^ (LODWORD(STACK[0x408]) - 1314276049) ^ LODWORD(STACK[0x410]) ^ LODWORD(STACK[0x364]) ^ LODWORD(STACK[0x3F8]);
  LODWORD(STACK[0x338]) = v408 + 1090732333;
  v446 = LODWORD(STACK[0x34C]) ^ LODWORD(STACK[0x368]) ^ 0xED515E1E;
  v361 = STACK[0x3D4];
  v362 = v446 ^ (v410 + 1666130282) ^ v438 ^ LODWORD(STACK[0x3F0]) ^ LODWORD(STACK[0x2A0]) ^ v338 ^ LODWORD(STACK[0x3CC]) ^ LODWORD(STACK[0x430]) ^ LODWORD(STACK[0x36C]) ^ LODWORD(STACK[0x374]) ^ v435 ^ LODWORD(STACK[0x404]) ^ LODWORD(STACK[0x3E8]) ^ LODWORD(STACK[0x3C0]) ^ LODWORD(STACK[0x3D4]) ^ (LODWORD(STACK[0x334]) - 1964795820) ^ (LODWORD(STACK[0x370]) + 19617903) ^ v360 ^ (v408 + 1090732333) ^ v356;
  v363 = STACK[0x248];
  v364 = LODWORD(STACK[0x248]) - LODWORD(STACK[0x238]);
  LODWORD(STACK[0x20C]) = v364 + 1579120945;
  v365 = STACK[0x38C];
  v366 = STACK[0x354];
  v367 = STACK[0x3DC];
  v368 = v362 ^ (v364 + 1579120945) ^ LODWORD(STACK[0x398]) ^ LODWORD(STACK[0x394]) ^ LODWORD(STACK[0x38C]) ^ v460 ^ LODWORD(STACK[0x3BC]) ^ LODWORD(STACK[0x354]) ^ LODWORD(STACK[0x3DC]) ^ LODWORD(STACK[0x2D0]) ^ v419;
  v369 = LODWORD(STACK[0x40C]) - 1103636100;
  LODWORD(STACK[0x224]) = v369;
  v370 = STACK[0x358];
  LODWORD(STACK[0x228]) = v368 ^ v369 ^ LODWORD(STACK[0x358]) ^ LODWORD(STACK[0x384]);
  v371 = LODWORD(STACK[0x3FC]) ^ LODWORD(STACK[0x400]) ^ 0x1FA41546;
  v372 = LODWORD(STACK[0x2C0]) ^ 0x53764949;
  LODWORD(STACK[0x2C0]) = LODWORD(STACK[0x230]) ^ 0xFB11BBF9;
  v373 = v363 ^ LODWORD(STACK[0x3F4]) ^ 0xA1C7D866;
  v374 = LODWORD(STACK[0x208]) ^ 0x6ED5F20B;
  v375 = LODWORD(STACK[0x288]) ^ 0x2005883A;
  LODWORD(STACK[0x230]) = v375;
  v376 = STACK[0x458];
  v377 = LODWORD(STACK[0x260])
       - v408
       + LODWORD(STACK[0x2A0])
       - 1090732333
       + (LODWORD(STACK[0x39C]) ^ v355 ^ (((v343
                                          - LODWORD(STACK[0x298])
                                          + 946270608
                                          + (v349 ^ LODWORD(STACK[0x3C8]) ^ v375 ^ v412 ^ v438 ^ v435 ^ (1321206423 - v419))) ^ LODWORD(STACK[0x330]))
                                        + LODWORD(STACK[0x308])));
  LODWORD(STACK[0x238]) = v341;
  v378 = (v341 ^ LODWORD(STACK[0x3E0]) ^ v361 ^ v377) + v460;
  v379 = LODWORD(STACK[0x390]) - LODWORD(STACK[0x388]) - LODWORD(STACK[0x3A4]) - LODWORD(STACK[0x270]);
  v380 = STACK[0x234];
  LODWORD(STACK[0x298]) = LODWORD(STACK[0x234]) - 126535293;
  v381 = v378 ^ LODWORD(STACK[0x378]);
  LODWORD(STACK[0x2A0]) = v371;
  v382 = v379 - v380 + 953002436 + ((((v381 + v371) ^ LODWORD(STACK[0x3B4])) - v366) ^ v373);
  v383 = v357 - LODWORD(STACK[0x2B0]) + LODWORD(STACK[0x364]) - LODWORD(STACK[0x334]);
  LODWORD(STACK[0x2B0]) = v374;
  v384 = ((v383 + v374 + 1964795820 + (v382 ^ v365)) ^ LODWORD(STACK[0x268])) - LODWORD(STACK[0x3E4]);
  LODWORD(STACK[0x268]) = v353;
  v385 = STACK[0x37C];
  v386 = STACK[0x394];
  v387 = STACK[0x3C4];
  v388 = LODWORD(STACK[0x3C4])
       + LODWORD(STACK[0x36C])
       - v364
       - LODWORD(STACK[0x404])
       - 1579120945
       + (LODWORD(STACK[0x2D8]) ^ LODWORD(STACK[0x394]) ^ ((v432 ^ v428 ^ LODWORD(STACK[0x328]) ^ ((((LODWORD(STACK[0x2A8]) ^ LODWORD(STACK[0x290]) ^ v370 ^ ((LODWORD(STACK[0x3F0]) ^ v442 ^ ((v384 ^ v353) - (LODWORD(STACK[0x380]) + LODWORD(STACK[0x3AC]) + LODWORD(STACK[0x430])))) + v367)) - (LODWORD(STACK[0x3CC]) + LODWORD(STACK[0x398]))) ^ LODWORD(STACK[0x280]))
                                                                                                 + LODWORD(STACK[0x3A0])))
                                                         - LODWORD(STACK[0x37C])));
  LODWORD(STACK[0x2A8]) = v372;
  LODWORD(STACK[0x334]) = v422 ^ 0x76BABC87;
  v389 = v416 - (LODWORD(STACK[0x278]) + v449);
  v390 = LODWORD(STACK[0x30C]) - 1577095674;
  LODWORD(STACK[0x278]) = v390;
  v391 = ((((v389 + LODWORD(STACK[0x3B8]) + v390 + LODWORD(STACK[0x3E8]) + 1434494817 + (v372 ^ v422 ^ 0x76BABC87 ^ v388)) ^ LODWORD(STACK[0x3C0]))
         + LODWORD(STACK[0x2E8])) ^ LODWORD(STACK[0x410]))
       - (LODWORD(STACK[0x304])
        + LODWORD(STACK[0x22C]))
       + 1127577909;
  v392 = STACK[0x240];
  LODWORD(STACK[0x290]) = LODWORD(STACK[0x240]) + 1022175318;
  v393 = v425 - v392 - LODWORD(STACK[0x200]) - 2085982745 + (v391 ^ LODWORD(STACK[0x3B0]));
  LODWORD(STACK[0x22C]) = v410 + 1666130282;
  v394 = LODWORD(STACK[0x2E4]) ^ LODWORD(STACK[0x3D0]) ^ LODWORD(STACK[0x384]) ^ (((v410 + 1666130282) ^ LODWORD(STACK[0x3F8]) ^ v393)
                                                                                - LODWORD(STACK[0x360]));
  v395 = LODWORD(STACK[0x320]) ^ 0xFCAC0D4A;
  LODWORD(STACK[0x240]) = v395;
  v396 = STACK[0x374];
  v397 = v446 ^ (LODWORD(STACK[0x3BC])
               - LODWORD(STACK[0x300])
               + ((LODWORD(STACK[0x3D8]) - v395 - LODWORD(STACK[0x2C0]) + LODWORD(STACK[0x374]) + v394) ^ LODWORD(STACK[0x448])));
  LODWORD(STACK[0x3FC]) = 1006264083 - LODWORD(STACK[0x210]);
  v398 = v385 - 474916961 + ((v408 + 1846258959) ^ v396 ^ 0x3ED06AFD);
  v399 = ((LODWORD(STACK[0x318]) + 101089881) >> 1) - 1900278695;
  v400 = 2 * (v387 + (LODWORD(STACK[0x368]) ^ 0x3453A279 ^ v386)) - 836063609;
  v401 = ((*(_QWORD *)(STACK[0x450]
                     + 8
                     * (((*(_QWORD *)(STACK[0x450]
                                    + 8
                                    * (((*(_QWORD *)(STACK[0x450]
                                                   + 8
                                                   * (((*(_QWORD *)(STACK[0x450]
                                                                  + 8 * (0x4E44CE26 % STACK[0x428])) ^ 0xF3F3F3F3F3F3F3F3)
                                                     + 1730713547)
                                                    % STACK[0x428])) ^ 0xF3F3F3F3F3F3F3F3)
                                      + 302513586)
                                     % STACK[0x428])) ^ 0xF3F3F3F3F3F3F3F3)
                       + 1744356254)
                      % STACK[0x428])) ^ 0xF3F3F3F3F3F3F3F3)
        + 626689264)
       % STACK[0x428];
  v402 = (v397 - LODWORD(STACK[0x3A8]));
  v403 = -LODWORD(STACK[0x408]);
  v404 = -LODWORD(STACK[0x218]);
  v405 = -LODWORD(STACK[0x23C]);
  LODWORD(STACK[0x408]) = -LODWORD(STACK[0x370]);
  LODWORD(STACK[0x400]) = v399;
  LODWORD(STACK[0x368]) = v398 >> 1;
  LODWORD(STACK[0x370]) = v400;
  if (v401 <= 1)
    v406 = 1;
  else
    v406 = v401;
  LODWORD(STACK[0x23C]) = v449 + 1840595851;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v376 + 8 * ((14 * (v406 != 1)) ^ (a1 - 10)))
                                                                                               - 4))(0x3D87AA384F46AC1CLL, v404, v405, 0x3D87AA384F46AC1DLL, 0, v403, v402);
}

void sub_1003A2950()
{
  JUMPOUT(0x1003A2824);
}

uint64_t sub_1003A2960(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = LODWORD(STACK[0x33C])
      + LODWORD(STACK[0x408])
      - 19617903
      + ((a3
        + a2
        + LODWORD(STACK[0x40C])
        - 1503900143
        + (LODWORD(STACK[0x2C8]) ^ LODWORD(STACK[0x2D0]) ^ (LODWORD(STACK[0x258])
                                                          + LODWORD(STACK[0x3FC])
                                                          + a6
                                                          + (a7 ^ LODWORD(STACK[0x250]))
                                                          + 1314276049))) ^ LODWORD(STACK[0x344]));
  LODWORD(STACK[0x250]) = (LODWORD(STACK[0x438]) - LODWORD(STACK[0x414])) ^ 0xC8F830C0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (int)((31 * (STACK[0x428] > v7 + 1)) ^ (v8 + 1256751175) & 0xB5177FAF))
                                          - 12))(v10);
}

uint64_t sub_1003A2B40(int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unint64_t v22;
  unsigned int v23;

  LODWORD(STACK[0x258]) = LODWORD(STACK[0x440]) - LODWORD(STACK[0x44C]) - 641930898;
  LODWORD(STACK[0x248]) = a1 ^ LODWORD(STACK[0x324]);
  v7 = (a3 ^ 0xE4E61710DDF3BE26)
     - ((a3 ^ 0xE4E61710DDF3BE26) >> 29)
     - (((a3 ^ 0xE4E61710DDF3BE26) - ((a3 ^ 0xE4E61710DDF3BE26) >> 29)) >> 11);
  v8 = v7 - (v7 >> 7);
  v9 = v8
     - 0xE653181B83FF2AFLL
     + ((v8 - 0xE653181B83FF2AFLL) >> 29)
     + ((v8 - 0xE653181B83FF2AFLL + ((v8 - 0xE653181B83FF2AFLL) >> 29)) >> 8);
  v10 = ((v9 - (v9 >> 8)) ^ 0x6061C860F9623260)
      - (((v9 - (v9 >> 8)) ^ 0x6061C860F9623260) >> 24)
      - ((((v9 - (v9 >> 8)) ^ 0x6061C860F9623260) - (((v9 - (v9 >> 8)) ^ 0x6061C860F9623260) >> 24)) >> 14);
  v11 = v10
      + (v10 >> 4)
      + 0x75215231B3FFBF14
      - ((v10 + (v10 >> 4) + 0x75215231B3FFBF14) >> 26)
      + ((v10 + (v10 >> 4) + 0x75215231B3FFBF14 - ((v10 + (v10 >> 4) + 0x75215231B3FFBF14) >> 26)) >> 8);
  v12 = v11 - (v11 >> 7);
  v13 = v12
      - 0x2919C79BF86C5CB4
      - ((v12 - 0x2919C79BF86C5CB4) >> 24)
      - ((v12 - 0x2919C79BF86C5CB4 - ((v12 - 0x2919C79BF86C5CB4) >> 24)) >> 13);
  v14 = ((v13 + (v13 >> 5)) ^ 0x49483EFD659145CELL)
      - (((v13 + (v13 >> 5)) ^ 0x49483EFD659145CELL) >> 30)
      - ((((v13 + (v13 >> 5)) ^ 0x49483EFD659145CELL) - (((v13 + (v13 >> 5)) ^ 0x49483EFD659145CELL) >> 30)) >> 11);
  v15 = v14
      - (v14 >> 7)
      - 0x53B21922015BB3D2
      + ((v14 - (v14 >> 7) - 0x53B21922015BB3D2) >> 31)
      - ((v14 - (v14 >> 7) - 0x53B21922015BB3D2 + ((v14 - (v14 >> 7) - 0x53B21922015BB3D2) >> 31)) >> 12);
  v16 = v12 ^ v8 ^ v4 ^ (v15 + (v15 >> 6));
  if (((v5[(v5[(v5[(v5[14] + 10) & 0xF] + 2) & 0xF] + 10) & 0xF] + 2) & 0xE) != 0)
    v17 = (v5[(v5[(v5[(v5[14] + 10) & 0xF] + 2) & 0xF] + 10) & 0xF] + 2) & 0xF;
  else
    v17 = 1;
  v18 = -179319381 * *v5;
  v19 = (v18 ^ 0x87C44BDA) + (((v18 ^ 0x87C44BDA) + ((v18 ^ 0x87C44BDA) >> 16)) >> ((v3 - 32) & 0xEE ^ 0x6C));
  v20 = (((v18 ^ 0x87C44BDA) >> 16) + v19) ^ v16;
  v21 = (((v18 ^ 0x87C44BDA) >> 16) - 816621284 + v19) ^ v18;
  v22 = (unint64_t)(v21 + HIWORD(v21)) >> 8;
  v23 = (v21 - 816621284 + HIWORD(v21) + v22) ^ v18;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(v6 + 8 * ((35 * (v17 == 1)) ^ v3)) - 4))(v20 ^ (v21 + HIWORD(v21) + (_DWORD)v22) ^ (v23 + HIWORD(v23) + ((v23 + HIWORD(v23)) >> 8)), 4115647915);
}

void sub_1003A2E2C()
{
  JUMPOUT(0x1003A2D3CLL);
}

uint64_t sub_1003A2E38(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  int v21;
  unint64_t v22;

  STACK[0x440] = -75601876;
  STACK[0x438] = 236400711;
  v13 = (v6 + 807947891) & 0xCFD7BF6D;
  LODWORD(STACK[0x44C]) = v13;
  HIDWORD(v14) = v8;
  LODWORD(v14) = v8;
  LODWORD(STACK[0x234]) = v14 >> 11;
  v15 = *(unsigned __int8 *)(v12 + v7) * v10;
  v16 = v15 ^ (v9
             + ((v11 + a6) >> 16)
             + a5
             + v11
             + ((v11 + a6 + ((v11 + a6) >> 16)) >> 8)
             - 1);
  v17 = v16 + v7;
  v18 = v17 >> 16;
  v19 = (unint64_t)(v17 + WORD1(v17)) >> 8;
  v20 = (v7 + v16 + v18 + v19) ^ a1;
  v21 = v7 - 816621284;
  LODWORD(v18) = ((v21 + v16 + v18 + v19) ^ v15)
               + ((v7 + ((v21 + v16 + (_DWORD)v18 + (_DWORD)v19) ^ v15)) >> (v13 - 53));
  v22 = (unint64_t)(v18 + v7) >> 8;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x458] + 8 * ((2036 * (v7 == 15)) ^ (v6 + 4743))) - 4))(v20 ^ ((_DWORD)v7 + (_DWORD)v18 + (_DWORD)v22) ^ ((_DWORD)v7 + ((v21 + (_DWORD)v18 + (_DWORD)v22) ^ v15) + ((((v21 + (_DWORD)v18 + (_DWORD)v22) ^ v15) + v7) >> 16) + ((((v21 + (_DWORD)v18 + (_DWORD)v22) ^ v15) + (_DWORD)v7 + ((((v21 + (_DWORD)v18 + (_DWORD)v22) ^ v15) + v7) >> 16)) >> 8)));
}

void sub_1003A3018()
{
  JUMPOUT(0x1003A2F08);
}

uint64_t sub_1003A3030@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  unsigned int v80;
  unint64_t v81;
  unsigned int v82;
  _QWORD *v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  int v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  unint64_t v97;
  unint64_t v98;

  v64 = (v60 + a7) >> 16;
  v65 = v60
      + ((v60 + a6 + v64 + ((v60 + a7 + v64) >> 8) + ((v60 + a6 + v64 + ((v60 + a7 + v64) >> 8)) >> 13)) >> 6)
      + ((v60 + a6 + v64 + ((v60 + a7 + v64) >> 8)) >> 13)
      + ((v60 + a7 + v64) >> 8)
      + v64;
  v66 = (v59 + v65 - a5) ^ a1;
  v67 = (v65 + a3) >> 10;
  v68 = (v65 + a3 - v67) >> 4;
  v69 = (v59 + v65 - v68 - v67 - v63) ^ v61;
  v70 = v59
      + v65
      + ((v65 + a2 - v68 - v67) >> 8)
      - ((v65 + a2 + ((v65 + a2 - v68 - v67) >> 8) - v68 - v67) >> 3)
      - v68
      - v67
      - a4;
  v71 = (v70 ^ 0xD612484) - ((v70 ^ 0xD612484u) >> 15) - (((v70 ^ 0xD612484) - ((v70 ^ 0xD612484u) >> 15)) >> 1);
  v72 = v66 ^ v71;
  v73 = (v71 ^ 0xC3CB9A34) + ((v71 ^ 0xC3CB9A34) >> 11) + (((v71 ^ 0xC3CB9A34) + ((v71 ^ 0xC3CB9A34) >> 11)) >> 3);
  v74 = v69 ^ v73;
  v75 = (v73 ^ 0xEBA7AE05) - ((v73 ^ 0xEBA7AE05) >> 10) + (((v73 ^ 0xEBA7AE05) - ((v73 ^ 0xEBA7AE05) >> 10)) >> 5);
  v76 = (v75 ^ 0xBC20881E) + ((v75 ^ 0xBC20881E) >> 14) - (((v75 ^ 0xBC20881E) + ((v75 ^ 0xBC20881E) >> 14)) >> 1);
  v77 = v72 ^ v76;
  v78 = (v76 ^ 0xABF76176) + ((v76 ^ 0xABF76176) >> 11) - (((v76 ^ 0xABF76176) + ((v76 ^ 0xABF76176) >> 11)) >> 6);
  v79 = v77 & 0xFE ^ 0xB0;
  v80 = v70 ^ a8 ^ v75 ^ (v78 + 99179382 - ((v78 + 99179382) >> 12) + ((v78 + 99179382 - ((v78 + 99179382) >> 12)) >> 4));
  LODWORD(STACK[0x270]) = v77 & 0xFFFFFF01;
  LODWORD(STACK[0x3FC]) = v80;
  STACK[0x318] = v80 & 7;
  LODWORD(STACK[0x408]) = v77;
  v81 = STACK[0x428];
  v82 = 0xFC6DC776 % STACK[0x428];
  LODWORD(STACK[0x3F4]) = v74 ^ v78;
  v83 = (_QWORD *)STACK[0x450];
  v84 = *(_QWORD *)(STACK[0x450]
                  + 8
                  * (((*(_QWORD *)(STACK[0x450]
                                 + 8
                                 * (((*(_QWORD *)(STACK[0x450] + 8 * v82) ^ 0xF3F3F3F3F3F3F3F3) + 1600150293) % v81)) ^ 0xF3F3F3F3F3F3F3F3)
                    + 1374178662)
                   % v81));
  LODWORD(STACK[0x280]) = 16843009
                        * ((v74 ^ v78) ^ 0xED ^ ((unsigned __int16)(v74 ^ v78 ^ 0x53ED) >> 8) ^ ((v74 ^ v78 ^ 0x40653ED) >> 16) ^ ((v74 ^ v78) >> 24) ^ 0xE5);
  v85 = ((v83[((v84 ^ 0xF3F3F3F3F3F3F3F3) + 2165813499u) % v81] ^ 0xF3F3F3F3F3F3F3F3) + 1030727211) % v81;
  LODWORD(STACK[0x414]) = (16843009
                         * (v77 ^ 0x1B ^ ((unsigned __int16)(v77 ^ 0xA11B) >> 8) ^ ((v77 ^ 0x177EA11B) >> 16) ^ HIBYTE(v77) ^ 0xF4)) ^ 0xE3E3E3E3;
  if (v85 <= 1)
    v86 = 1;
  else
    v86 = v85;
  v87 = 0xFB1975F1B7779377 * (*v83 ^ 0xF3F3F3F3F3F3F3F3);
  v88 = v87 ^ 0xFA13CBB4C9247681;
  v89 = (v87 ^ 0xFA13CBB4C9247681)
      + ((v88 + ((v88 - HIDWORD(v88)) >> 16) - HIDWORD(v88)) >> 8)
      + ((v88 - HIDWORD(v88)) >> 16)
      - HIDWORD(v88);
  v90 = v89 ^ LODWORD(STACK[0x370]) ^ 0x41EAF60;
  LODWORD(v88) = (v89 + v62) ^ LODWORD(STACK[0x400]) ^ 0x66E66070;
  v91 = (v89 + 0x3D87AA384F46AC1CLL) ^ v87;
  v92 = v91 >> ((3 * (LOBYTE(STACK[0x44C]) ^ 0x87)) ^ 0x66u);
  v93 = v91 - v92;
  v94 = (v91 - v92) >> 16;
  v95 = (v91 + v94 - v92) >> 8;
  LODWORD(v92) = v94 + v93 + v95;
  v96 = v90 ^ v92;
  LODWORD(v88) = v88 ^ (v92 + v62);
  v97 = (v94 + 0x3D87AA384F46AC1CLL + v93 + v95) ^ v87;
  v98 = (v97 - HIDWORD(v97)) >> 16;
  LODWORD(v95) = v97 + v98 + ((v97 + v98 - HIDWORD(v97)) >> 8) - HIDWORD(v97);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * ((13792 * (v86 == 1)) ^ LODWORD(STACK[0x44C]))) - 12))(v86, v97 + 0x3D87AA384F46AC1CLL + v98, v79, v96 ^ v95, v88 ^ ((_DWORD)v95 + v62), 3 * (LODWORD(STACK[0x44C]) ^ 0x1F87u), 0, 0x3D87AA384F46AC1DLL, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

void sub_1003A3464()
{
  JUMPOUT(0x1003A3328);
}

uint64_t sub_1003A346C(unsigned int a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;

  LODWORD(STACK[0x40C]) = LODWORD(STACK[0x408]) ^ 0x2A01CC34;
  v64 = 0xFB1975F1B7779377 * (*(_QWORD *)(v62 + 8 * a1) ^ (37 * (a6 ^ 0x2CF) - 0xC0C0C0C0C0C1FDALL));
  v63 = ((v61 + a7 - ((unint64_t)(v61 + a7) >> 32)) >> 16)
      + ((v61 + a7 + ((v61 + a7 - ((unint64_t)(v61 + a7) >> 32)) >> 16) - ((unint64_t)(v61 + a7) >> 32)) >> 8)
      - ((unint64_t)(v61 + a7) >> 32)
      + v61
      + a8
      - 1;
  v65 = (v64 ^ v63) + a1 - (((v64 ^ v63) + a1) >> 32);
  v66 = v65 + (v65 >> 16) + ((v65 + (v65 >> 16)) >> 8);
  v67 = v66 ^ a4;
  v68 = (v66 + v60) ^ a5;
  v69 = ((v66 + 0x3D87AA384F46AC1CLL) ^ v64) + a1 - ((((v66 + 0x3D87AA384F46AC1CLL) ^ v64) + a1) >> 32);
  v70 = v69 + (v69 >> 16) + ((v69 + (v69 >> 16)) >> 8);
  v71 = ((v70 + 0x3D87AA384F46AC1CLL) ^ v64) + a1 - ((((v70 + 0x3D87AA384F46AC1CLL) ^ v64) + a1) >> 32);
  v72 = v71 + (v71 >> 16) + ((v71 + (v71 >> 16)) >> 8);
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * (int)((167 * (STACK[0x428] <= a1 + 1)) ^ a6)))(a1 + 1, (v72 + v60), a3, v67 ^ v70 ^ v72, v68 ^ ((_DWORD)v70 + v60) ^ (v72 + v60), a6, (v70 + v60), v72 + 0x3D87AA384F46AC1CLL, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1003A35BC@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned __int8 *v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;

  LODWORD(STACK[0x260]) = v7;
  LODWORD(STACK[0x44C]) = v4;
  LODWORD(STACK[0x218]) = LODWORD(STACK[0x3FC]) ^ 0xE809DFB0;
  LODWORD(STACK[0x210]) = LODWORD(STACK[0x408]) ^ 0xE809DFB0;
  v8 = (a1 ^ 0xE4E61710DDF3BE26)
     - ((a1 ^ 0xE4E61710DDF3BE26) >> 29)
     - (((a1 ^ 0xE4E61710DDF3BE26) - ((a1 ^ 0xE4E61710DDF3BE26) >> 29)) >> 11);
  v9 = v8
     - (v8 >> 7)
     - 0xE653181B83FF2AFLL
     + ((v8 - (v8 >> 7) - 0xE653181B83FF2AFLL) >> 29)
     + ((v8 - (v8 >> 7) - 0xE653181B83FF2AFLL + ((v8 - (v8 >> 7) - 0xE653181B83FF2AFLL) >> 29)) >> 8);
  v10 = ((v9 - (v9 >> 8)) ^ 0x6061C860F9623260)
      - (((v9 - (v9 >> 8)) ^ 0x6061C860F9623260) >> 24)
      - ((((v9 - (v9 >> 8)) ^ 0x6061C860F9623260) - (((v9 - (v9 >> 8)) ^ 0x6061C860F9623260) >> 24)) >> 14);
  v11 = v10 + (v10 >> 4);
  v12 = v11
      + 0x75215231B3FFBF14
      - ((v11 + 0x75215231B3FFBF14) >> 26)
      + ((v11 + 0x75215231B3FFBF14 - ((v11 + 0x75215231B3FFBF14) >> 26)) >> 8);
  v13 = v12
      - (v12 >> 7)
      - 0x2919C79BF86C5CB4
      - ((v12 - (v12 >> 7) - 0x2919C79BF86C5CB4) >> 24)
      - ((v12 - (v12 >> 7) - 0x2919C79BF86C5CB4 - ((v12 - (v12 >> 7) - 0x2919C79BF86C5CB4) >> 24)) >> 13);
  v14 = ((v13 + (v13 >> 5)) ^ 0x49483EFD659145CELL)
      - (((v13 + (v13 >> 5)) ^ 0x49483EFD659145CELL) >> 30)
      - ((((v13 + (v13 >> 5)) ^ 0x49483EFD659145CELL) - (((v13 + (v13 >> 5)) ^ 0x49483EFD659145CELL) >> 30)) >> 11);
  v15 = v14 - (v14 >> 7);
  v16 = v15
      - 0x53B21922015BB3D2
      + ((v15 - 0x53B21922015BB3D2) >> 31)
      - ((v15 - 0x53B21922015BB3D2 + ((v15 - 0x53B21922015BB3D2) >> 31)) >> 12);
  v17 = ((v16 + (v16 >> 6)) ^ 0x837F167F761A8A0DLL)
      + (((v16 + (v16 >> 6)) ^ 0x837F167F761A8A0DLL) >> 30)
      - ((((v16 + (v16 >> 6)) ^ 0x837F167F761A8A0DLL) + (((v16 + (v16 >> 6)) ^ 0x837F167F761A8A0DLL) >> 30)) >> 9);
  v18 = v17
      - (v17 >> 3)
      + 0x6A47281FDA231749
      + ((v17 - (v17 >> 3) + 0x6A47281FDA231749) >> 28)
      - ((v17 - (v17 >> 3) + 0x6A47281FDA231749 + ((v17 - (v17 >> 3) + 0x6A47281FDA231749) >> 28)) >> 8);
  v19 = v15 ^ v11 ^ a2 ^ ((v18 >> 1) + v18);
  if (((v6[(v6[(v6[(v6[8] + 3) & 0xFLL] + 7) & 0xF] + 9) & 0xF] + 5) & 0xE) != 0)
    v20 = (v6[(v6[(v6[(v6[8] + 3) & 0xFLL] + 7) & 0xF] + 9) & 0xF] + 5) & 0xF;
  else
    v20 = 1;
  v21 = *v6 * v5;
  v22 = (v21 ^ 0x87C44BDA)
      - 816621284
      + ((v21 ^ 0x87C44BDA) >> 16)
      + (((v21 ^ 0x87C44BDA) + ((v21 ^ 0x87C44BDA) >> 16)) >> 8);
  v23 = v22 ^ v19;
  v24 = ((v22 ^ v21) >> 16)
      - 816621284
      + (v22 ^ v21)
      + (((v22 ^ v21) + ((v22 ^ v21) >> 16)) >> (((v3 + 115) | 0x24) ^ 0x6C));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 8 * ((4046 * (v20 == 1)) ^ v3)) - 8))(v23 ^ v24 ^ ((v24 ^ v21) - 816621284 + ((v24 ^ v21) >> 16) + (((v24 ^ v21) + ((v24 ^ v21) >> 16)) >> 8)));
}

void sub_1003A3888()
{
  JUMPOUT(0x1003A378CLL);
}

uint64_t sub_1003A3894(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;

  v14 = *(unsigned __int8 *)(v13 + v11) * ((v9 - 1921504918) & 0x7287CFF1 ^ (v12 - 1600));
  v15 = v14 ^ (((a8 + v10) >> 16)
             - 816621284
             + a7
             + a8
             + ((a8 + v10 + ((a8 + v10) >> 16)) >> 8)
             - 1);
  v16 = v11
      - 816621284
      + v15
      + ((v15 + v11) >> 16)
      + ((v15 + (_DWORD)v11 + ((v15 + v11) >> 16)) >> 8);
  v17 = v16 ^ a1;
  v18 = v16 ^ v14;
  v19 = v11
      - 816621284
      + ((v18 + v11) >> 16)
      + v18
      + (((_DWORD)v11 + v18 + ((v18 + v11) >> 16)) >> ((v11 + v18 + ((v18 + v11) >> 16)) & 8) >> ((v11 + v18 + ((v18 + v11) >> 16)) & 8 ^ 8));
  v20 = v11
      + (v19 ^ v14)
      + (((v19 ^ v14) + v11) >> 16)
      + (((v19 ^ v14) + (_DWORD)v11 + (((v19 ^ v14) + v11) >> 16)) >> 8);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v8
                                                     + 8 * (((2 * (v11 != 15)) | (32 * (v11 != 15))) ^ (v9 + 3567)))
                                         - 12))(v17 ^ v19 ^ (((2 * v20) & 0xCF53591C) + (v20 ^ 0xE7A9AC8E) - 408310642));
}

void sub_1003A3A14()
{
  JUMPOUT(0x1003A3908);
}

uint64_t sub_1003A3A2C(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  int a64;
  int a65;
  int a69;
  char a71;
  int v71;
  int v72;
  int v73;
  int v74;
  _QWORD *v75;
  char v76;
  int v77;
  unsigned int v78;
  char v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  char v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unint64_t v109;
  int v110;
  unint64_t v111;
  uint64_t v112;
  unsigned int v113;
  char *v114;
  char *v115;
  int v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  int v125;
  unint64_t v126;
  unint64_t v127;
  int v129;

  v77 = (v71 - 2236) | 0x880;
  LODWORD(STACK[0x234]) ^= LODWORD(STACK[0x320]) ^ a62 ^ LODWORD(STACK[0x2A0]) ^ LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x290]) ^ LODWORD(STACK[0x2E8]) ^ LODWORD(STACK[0x3AC]) ^ LODWORD(STACK[0x324]) ^ LODWORD(STACK[0x330]) ^ LODWORD(STACK[0x328]) ^ LODWORD(STACK[0x334]) ^ LODWORD(STACK[0x3A4]) ^ LODWORD(STACK[0x39C]) ^ LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x2C0]) ^ a65 ^ LODWORD(STACK[0x2A8]) ^ LODWORD(STACK[0x2E4]) ^ LODWORD(STACK[0x3B4]) ^ LODWORD(STACK[0x3A8]) ^ LODWORD(STACK[0x3A0]) ^ a64 ^ LODWORD(STACK[0x2C8]) ^ LODWORD(STACK[0x298]) ^ LODWORD(STACK[0x2B0]) ^ LODWORD(STACK[0x2D8]) ^ 0xEFDEA837;
  v78 = v73
      + 1638291254
      + ((v73 + 1638291254) >> 13)
      + ((v73 + 1638291254 + ((v73 + 1638291254) >> 13)) >> 6);
  v79 = v78 ^ v76;
  v80 = v78 - 1466381322 - ((v78 - 1466381322) >> 10) - ((v78 - 1466381322 - ((v78 - 1466381322) >> 10)) >> 4);
  v81 = v80 ^ v74;
  v82 = v80 + v77 + 311999895 + ((v80 + v77 + 311999895) >> 8);
  v83 = v82 - (v82 >> 3);
  v84 = (v83 ^ 0xD612484) - ((v83 ^ 0xD612484) >> 15) - (((v83 ^ 0xD612484) - ((v83 ^ 0xD612484) >> 15)) >> 1);
  v85 = v79 ^ v84;
  v86 = (v84 ^ 0xC3CB9A34) + ((v84 ^ 0xC3CB9A34) >> 11) + (((v84 ^ 0xC3CB9A34) + ((v84 ^ 0xC3CB9A34) >> 11)) >> 3);
  v87 = v81 ^ v86;
  v88 = (v86 ^ 0xEBA7AE05) - ((v86 ^ 0xEBA7AE05) >> 10) + (((v86 ^ 0xEBA7AE05) - ((v86 ^ 0xEBA7AE05) >> 10)) >> 5);
  v89 = (v88 ^ 0xBC20881E) + ((v88 ^ 0xBC20881E) >> 14) - (((v88 ^ 0xBC20881E) + ((v88 ^ 0xBC20881E) >> 14)) >> 1);
  LOBYTE(v86) = v85 ^ v89;
  v90 = (v89 ^ 0xABF76176) + ((v89 ^ 0xABF76176) >> 11) - (((v89 ^ 0xABF76176) + ((v89 ^ 0xABF76176) >> 11)) >> 6);
  v91 = v90 + 99179382;
  v92 = v87 ^ v90;
  v93 = v83 ^ a1 ^ v88 ^ (v91 - (v91 >> 12) + ((v91 - (v91 >> 12)) >> 4));
  v94 = v86 & 0xFE ^ 0xE2;
  v95 = v94 * v72;
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x3F8]) + 1554345105 * (v94 - a3);
  v96 = v93 & 7 ^ 2;
  v97 = ((v93 ^ 0xFD) + 1) & 7;
  if (v96)
    v98 = 255;
  else
    v98 = 0;
  v99 = v98 << v97;
  v100 = v99 * v72;
  v101 = (v92 ^ 0xED ^ ((unsigned __int16)(v92 ^ 0x53ED) >> 8) ^ ((v92 ^ 0x40653ED) >> 16) ^ HIBYTE(v92) ^ 0x98)
       * v72;
  v102 = (uint64_t)*(&off_1004ECA20 + (v71 ^ 0x81Fu));
  v103 = STACK[0x318] ^ 0xA2D20824;
  v104 = 4 * STACK[0x318];
  STACK[0x200] = v104;
  v129 = LODWORD(STACK[0x30C]) - 1577095674 + (v103 ^ *(_DWORD *)(v102 + v104));
  LODWORD(STACK[0x3F8]) = v97;
  v105 = (a71 & 0xFE | LODWORD(STACK[0x270])) ^ 0xE809DF00;
  LODWORD(STACK[0x260]) = v93;
  v106 = (v93 ^ 0xD48FF2E0) & 0xFFFFFFF8 | v96;
  LODWORD(STACK[0x278]) = 1666129195 * (v106 - (__ROR4__(__ROR4__(v93 ^ 0xD48FF2E0, 27) ^ 0xF0A7A8C5, 5) ^ 0x2F853D44));
  LODWORD(STACK[0x228]) = v95 >> 1;
  v107 = LODWORD(STACK[0x210]) % 0x101;
  v108 = LODWORD(STACK[0x210]) - v105;
  v109 = LODWORD(STACK[0x218]) % 0x101;
  v110 = (1862270976 * v99) & v92;
  v111 = STACK[0x428];
  v112 = v75[((v75[((v75[0xA399A86C % STACK[0x428]] ^ 0xF3F3F3F3F3F3F3F3) + 3278421572u) % v111] ^ 0xF3F3F3F3F3F3F3F3)
            + 1503371418)
           % v111];
  v113 = ((v75[(((2 * (_DWORD)v112) & 0x53249F1A ^ 0x43248702) + (v112 ^ 0xF3F3F3F3DA61BC7ELL)) % v111] ^ 0xF3F3F3F3F3F3F3F3)
        + 2925665927u)
       % v111;
  LODWORD(STACK[0x208]) = v101 ^ 0x9C9C9C9C;
  LODWORD(STACK[0x300]) = v100;
  LODWORD(STACK[0x354]) = v110 ^ v100;
  v114 = (char *)*(&off_1004ECA20 + (v71 ^ 0xB79u)) - 4;
  v115 = (char *)*(&off_1004ECA20 + v71 - 2329) - 8;
  LODWORD(STACK[0x30C]) = v96;
  LODWORD(STACK[0x360]) = v129 + 1;
  STACK[0x218] = (unint64_t)v114;
  LODWORD(STACK[0x344]) = *(_DWORD *)&v115[4 * a69];
  STACK[0x210] = v109;
  LODWORD(STACK[0x200]) = *(_DWORD *)&v115[4 * v109];
  LODWORD(STACK[0x308]) = 1064157477 * v108;
  LODWORD(STACK[0x304]) = v107;
  LODWORD(STACK[0x364]) = v106;
  v116 = LODWORD(STACK[0x370]) ^ 0x61E8935D;
  if (v113 <= 1)
    v117 = 1;
  else
    v117 = v113;
  LODWORD(STACK[0x320]) = v95;
  LODWORD(STACK[0x270]) = 1247952879 * a69;
  v118 = 0xFB1975F1B7779377 * (*v75 ^ 0xF3F3F3F3F3F3F3F3);
  v119 = v118 ^ 0xFA13CBB4C9247681;
  v120 = (v118 ^ 0xFA13CBB4C9247681) >> 32;
  v121 = (v119 - HIDWORD(v119)) >> 16;
  v122 = (v119 + v121 - HIDWORD(v119)) >> 8;
  v123 = ((v118 ^ 0xFA13CBB4C9247681) + 0x3D87AA384F46AC1CLL + v121 + v122 - v120) ^ v118;
  v124 = v123
       + ((v123 + ((v123 - HIDWORD(v123)) >> 16) - HIDWORD(v123)) >> 8)
       + ((v123 - HIDWORD(v123)) >> 16)
       - HIDWORD(v123);
  v125 = (v77 ^ 0xFA3F3274) & (4 * ((v118 ^ 0xC9247681) + v121 + v122 - v120)) ^ ((v118 ^ 0xC9247681)
                                                                                + v121
                                                                                + v122
                                                                                - v120) ^ v116 ^ (4 * v124) & 0xFA3F38F0 ^ v124;
  v126 = (v124 + 0x3D87AA384F46AC1CLL) ^ v118;
  v127 = (v126 - HIDWORD(v126)) >> 16;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x458]
                                                     + 8 * (((4 * (v117 != 1)) | ((v117 != 1) << 6)) ^ v77))
                                         - 12))(v125 ^ (4
                                                        * ((_DWORD)v126
                                                         + (_DWORD)v127
                                                         + ((v126 + v127 - HIDWORD(v126)) >> 8)
                                                         - HIDWORD(v126))) & 0xFA3F38F0 ^ ((_DWORD)v126
                                                                                         + (_DWORD)v127
                                                                                         + ((v126 + v127 - HIDWORD(v126)) >> 8)
                                                                                         - HIDWORD(v126)));
}

void sub_1003A4334()
{
  JUMPOUT(0x1003A4194);
}

uint64_t sub_1003A4344(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,int a56,int a57,unsigned int a58,int a59)
{
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;

  LODWORD(STACK[0x344]) = a55 - a57;
  v64 = LODWORD(STACK[0x364]) ^ LODWORD(STACK[0x288]) ^ a59;
  LODWORD(STACK[0x304]) = a49 + (a56 ^ a7);
  v65 = ((a8 + a6 - ((unint64_t)(a8 + a6) >> 32)) >> 16)
      + ((a8 + a6 + ((a8 + a6 - ((unint64_t)(a8 + a6) >> 32)) >> 16) - ((unint64_t)(a8 + a6) >> 32)) >> 8)
      - ((unint64_t)(a8 + a6) >> 32)
      + a8
      + v60
      - 1;
  LODWORD(STACK[0x364]) = v64 ^ ((a59 ^ a58) >> 4);
  v66 = 0xFB1975F1B7779377 * (*(_QWORD *)(STACK[0x450] + 8 * v63) ^ 0xF3F3F3F3F3F3F3F3);
  v67 = v65
      + v63
      - 0x4E68A0E48886C89 * (*(_QWORD *)(STACK[0x450] + 8 * v63) ^ 0xF3F3F3F3F3F3F3F3)
      - 2 * (v66 & v65);
  v68 = v67 - HIDWORD(v67);
  v69 = (((v68 >> 16) + v68) >> (BYTE2(v68) & (((v61 + 110) & 0x79 ^ 0xD2) + 86)) >> (BYTE2(v68) & (((v61 + 110) & 0x79 ^ 0xD2) + 86) ^ 8u))
      + (v68 >> 16)
      + v68;
  v70 = v62 & (4 * v69) ^ v69 ^ a1;
  v71 = ((v69 + 0x3D87AA384F46AC1CLL) ^ v66) + v63 - ((((v69 + 0x3D87AA384F46AC1CLL) ^ v66) + v63) >> 32);
  v72 = v71 + (v71 >> 16) + ((v71 + (v71 >> 16)) >> 8);
  v73 = ((v72 + 0x3D87AA384F46AC1CLL) ^ v66) + v63 - ((((v72 + 0x3D87AA384F46AC1CLL) ^ v66) + v63) >> 32);
  v74 = v73 + (v73 >> 16) + ((v73 + (v73 >> 16)) >> 8);
  v75 = v70 ^ v62 & (4 * (_DWORD)v72) ^ v72 ^ v62 & (4 * (_DWORD)v74) ^ v74;
  LODWORD(v74) = v63 + 1 < STACK[0x428];
  return (*(uint64_t (**)(uint64_t))(v59
                                            + 8
                                            * ((8 * (_DWORD)v74) | (16 * (_DWORD)v74) | (v61 - 1184840338) & 0x469F3A79u)))(v75);
}

uint64_t sub_1003A4634@<X0>(int a1@<W3>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  int a64;
  int a65;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  _BYTE *v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  unint64_t v85;
  int v86;
  int v87;
  unint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;

  LODWORD(STACK[0x288]) = LODWORD(STACK[0x360]) + a3;
  LODWORD(STACK[0x410]) = LODWORD(STACK[0x280]) ^ 0xE1E1E1E1;
  LODWORD(STACK[0x280]) = v66 + a62;
  LODWORD(STACK[0x360]) = LODWORD(STACK[0x278]) + a1;
  LODWORD(STACK[0x278]) = a64 + a65;
  v71 = (a2 ^ 0xE4E61710DDF3BE26)
      - ((a2 ^ 0xE4E61710DDF3BE26) >> 29)
      - (((a2 ^ 0xE4E61710DDF3BE26) - ((a2 ^ 0xE4E61710DDF3BE26) >> 29)) >> 11);
  v72 = v71
      - (v71 >> 7)
      - 0xE653181B83FF2AFLL
      + ((v71 - (v71 >> 7) - 0xE653181B83FF2AFLL) >> 29)
      + ((v71 - (v71 >> 7) - 0xE653181B83FF2AFLL + ((v71 - (v71 >> 7) - 0xE653181B83FF2AFLL) >> 29)) >> 8);
  v73 = v72 - (v72 >> 8);
  v74 = v68 & (4 * v73) ^ v73;
  v75 = (v73 ^ 0x6061C860F9623260)
      - ((v73 ^ 0x6061C860F9623260) >> 24)
      - (((v73 ^ 0x6061C860F9623260) - ((v73 ^ 0x6061C860F9623260) >> 24)) >> 14);
  v76 = v75
      + (v75 >> 4)
      + 0x75215231B3FFBF14
      - ((v75 + (v75 >> 4) + 0x75215231B3FFBF14) >> 26)
      + ((v75 + (v75 >> 4) + 0x75215231B3FFBF14 - ((v75 + (v75 >> 4) + 0x75215231B3FFBF14) >> 26)) >> 8);
  v77 = v76
      - (v76 >> 7)
      - 0x2919C79BF86C5CB4
      - ((v76 - (v76 >> 7) - 0x2919C79BF86C5CB4) >> 24)
      - ((v76 - (v76 >> 7) - 0x2919C79BF86C5CB4 - ((v76 - (v76 >> 7) - 0x2919C79BF86C5CB4) >> 24)) >> 13);
  v78 = v77 + (v77 >> 5);
  v79 = (v78 ^ 0x49483EFD659145CELL)
      - ((v78 ^ 0x49483EFD659145CELL) >> 30)
      - (((v78 ^ 0x49483EFD659145CELL) - ((v78 ^ 0x49483EFD659145CELL) >> 30)) >> 11);
  v80 = v79
      - (v79 >> 7)
      - 0x53B21922015BB3D2
      + ((v79 - (v79 >> 7) - 0x53B21922015BB3D2) >> 31)
      - ((v79 - (v79 >> 7) - 0x53B21922015BB3D2 + ((v79 - (v79 >> 7) - 0x53B21922015BB3D2) >> 31)) >> 12);
  v81 = ((v80 + (v80 >> 6)) ^ 0x837F167F761A8A0DLL)
      + (((v80 + (v80 >> 6)) ^ 0x837F167F761A8A0DLL) >> 30)
      - ((((v80 + (v80 >> 6)) ^ 0x837F167F761A8A0DLL) + (((v80 + (v80 >> 6)) ^ 0x837F167F761A8A0DLL) >> 30)) >> 9);
  v82 = v74 ^ v67 ^ v78 ^ (4 * v78) & 0xFA3F38F0 ^ (v81 - (v81 >> 3)) ^ (4 * (v81 - (v81 >> 3))) & 0xFA3F38F0;
  if (((v70[(v70[(v70[(*v70 + 5) & 0xF] + 4) & 0xF] + 3) & 0xF] + 2) & 0xE) != 0)
    v83 = (v70[(v70[(v70[(*v70 + 5) & 0xF] + 4) & 0xF] + 3) & 0xF] + 2) & 0xF;
  else
    v83 = 1;
  v84 = -179319381 * *v70;
  v85 = (unint64_t)((v84 ^ 0x87C44BDA) + ((v84 ^ 0x87C44BDA) >> 16)) >> 8;
  v86 = (v84 ^ 0x87C44BDA) - 408310642 + ((v84 ^ 0x87C44BDA) >> 16) + v85;
  v87 = (v84 ^ 0x87C44BDA) - 816621284 + ((v84 ^ 0x87C44BDA) >> 16) + v85;
  v88 = (unint64_t)((v87 ^ v84) + ((v87 ^ v84) >> 16)) >> 8;
  v89 = (v87 ^ v84) - 408310642 + ((v87 ^ v84) >> 16) + v88;
  v90 = (v87 ^ v84) - 816621284 + ((v87 ^ v84) >> 16) + v88;
  v91 = v90 ^ v84;
  v92 = (unint64_t)v91 >> 16;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * ((348 * (v83 == 1)) ^ v69)) - 8))(v86 ^ v82 ^ ((v69 ^ 0x1DD6) - 96524404) & (4 * v86) ^ v89 ^ (4 * v89) & 0xFA3F38F0 ^ ((_DWORD)v91- 408310642+ (_DWORD)v92+ ((v91+ WORD1(v91)) >> 8)), v90, -816621284, v91, (_DWORD)v91 - 816621284 + (_DWORD)v92 + ((v91 + WORD1(v91)) >> 8), (4 * v89) & 0xFA3F38F0, 3478346012, v92, a4, a5, a6, a7, a8, a9, a10,
           a11,
           a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1003A4A14@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;

  LODWORD(STACK[0x44C]) = v5;
  STACK[0x430] = 1229980611;
  LODWORD(STACK[0x20C]) ^= LODWORD(STACK[0x270]) ^ (1247952879 * v7);
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x308]) + LODWORD(STACK[0x448]);
  LODWORD(STACK[0x448]) = v6 ^ 0x6F5;
  v9 = -179319381 * *(unsigned __int8 *)(v8 + v3);
  v10 = v9 ^ (a1
            + ((a1 + a2) >> 16)
            - 816621284
            + ((a1 + a2 + ((a1 + a2) >> 16)) >> 8)
            + v2
            - 1);
  v11 = v3
      - 816621284
      + v10
      + ((v10 + v3) >> 16)
      + ((v10 + (_DWORD)v3 + ((v10 + v3) >> 16)) >> 8);
  v12 = v3
      - 816621284
      + (v11 ^ v9)
      + (((v11 ^ v9) + v3) >> 16)
      + (((v11 ^ v9) + (_DWORD)v3 + (((v11 ^ v9) + v3) >> 16)) >> 8);
  v13 = v12 ^ v9;
  v14 = (v13 + v3);
  LODWORD(STACK[0x44C]) ^= v11 ^ v4 & (4 * v11) ^ v12 ^ v4 & (4 * v12) ^ (v3
                                                                        - 816621284
                                                                        + v13
                                                                        + (v14 >> 16)
                                                                        + ((v14 + WORD1(v14)) >> 8)) ^ v4 & (4 * (v3 - 816621284 + v13 + (v14 >> 16) + ((v14 + WORD1(v14)) >> 8)));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x458] + 8 * ((451 * (v3 == 15)) ^ (v6 - 2703))) - 8))((v3 + 75601877));
}

void sub_1003A4C8C()
{
  JUMPOUT(0x1003A4AF8);
}

uint64_t sub_1003A4CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unsigned int v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;

  LODWORD(STACK[0x308]) = LODWORD(STACK[0x300]) ^ a65;
  v66 = STACK[0x428];
  v67 = (*(_QWORD *)(STACK[0x450]
                   + 8
                   * (((*(_QWORD *)(STACK[0x450]
                                  + 8
                                  * (((*(_QWORD *)(STACK[0x450]
                                                 + 8
                                                 * (((*(_QWORD *)(STACK[0x450]
                                                                + 8 * (0x67BD8EAD % STACK[0x428])) ^ 0xF3F3F3F3F3F3F3F3)
                                                   + 588448535)
                                                  % STACK[0x428])) ^ 0xF3F3F3F3F3F3F3F3)
                                    + 418978832)
                                   % v66)) ^ 0xF3F3F3F3F3F3F3F3)
                     + 3470751089u)
                    % v66)) ^ 0xF3F3F3F3F3F3F3F3)
      + 4171161475u;
  v68 = STACK[0x400];
  LODWORD(STACK[0x300]) = LODWORD(STACK[0x3F4]) ^ LODWORD(STACK[0x400]);
  v69 = v67 % v66;
  if (v69 <= 1)
    v70 = 1;
  else
    v70 = v69;
  v71 = 0xFB1975F1B7779377 * (*(_QWORD *)STACK[0x450] ^ 0xF3F3F3F3F3F3F3F3);
  v72 = (v71 ^ 0xFA13CBB4C9247681) >> 32;
  v73 = (v71 ^ 0xFA13CBB4C9247681)
      + (((v71 ^ 0xFA13CBB4C9247681) - v72) >> (((LOBYTE(STACK[0x448]) + 123) | 0x60) ^ 0x7Cu));
  v74 = (v73 - v72) >> 8;
  v75 = v74 + 665015822 - v72 + v73;
  v76 = v74 + 0x3D87AA384F46AC1CLL - v72 + v73;
  LODWORD(v74) = (v75 >> 2) & 0x3DF7BFDF ^ v75 ^ v68 ^ 0x405BB7C5;
  v77 = v76 ^ v71;
  v78 = (v77 - HIDWORD(v77)) >> 16;
  v79 = (v77 + v78 - HIDWORD(v77)) >> 8;
  v80 = ((v77 + 665015822 + v78 + v79 - HIDWORD(v77)) >> 2) & 0x3DF7BFDF ^ (v77
                                                                                        + 665015822
                                                                                        + v78
                                                                                        + v79
                                                                                        - HIDWORD(v77));
  v81 = v77 + 0x3D87AA384F46AC1CLL + v78 + v79 - HIDWORD(v77);
  v82 = (v81 ^ v71) + (((v81 ^ v71) - ((v81 ^ v71) >> 32)) >> 16) - ((v81 ^ v71) >> 32);
  v83 = ((v82 >> 8) ^ v82) + 2 * ((v82 >> 8) & v82);
  return (*(uint64_t (**)(_QWORD))(v65 + 8 * ((12816 * (v70 == 1)) ^ LODWORD(STACK[0x448]))))(v74 ^ v80 ^ ((v83 + 665015822) >> 2) & 0x3DF7BFDF ^ ((_DWORD)v83 + 665015822));
}

void sub_1003A5120()
{
  JUMPOUT(0x1003A4FA0);
}

uint64_t sub_1003A5130@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;

  LODWORD(STACK[0x33C]) = a58 + a65;
  LODWORD(STACK[0x370]) = v66 & v68;
  LODWORD(STACK[0x368]) = LODWORD(STACK[0x408]) ^ a4 ^ a57 ^ v71 ^ v72 ^ a51 ^ v65 ^ a50 & v68 ^ 0xBB5219AF;
  v74 = 0xFB1975F1B7779377 * (*(_QWORD *)(STACK[0x450] + 8 * v70) ^ 0xF3F3F3F3F3F3F3F3);
  v75 = (v74 ^ a2) + v70 - (((v74 ^ a2) + v70) >> 32);
  v76 = v75 + (v75 >> 16) + ((v75 + (v75 >> 16)) >> 8);
  v77 = ((2 * v76) & 0x3D87AA384F46AC1CLL) + (v76 ^ a3);
  v78 = v69 & (v77 >> 2) ^ v77 ^ a1;
  v79 = ((v77 + a3) ^ v74) + v70 - ((((v77 + a3) ^ v74) + v70) >> 32);
  v80 = v79 + (v79 >> 16) + ((v79 + (v79 >> 16)) >> 8);
  v81 = ((v80 + 0x3D87AA384F46AC1CLL) ^ v74) + v70 - ((((v80 + 0x3D87AA384F46AC1CLL) ^ v74) + v70) >> 32);
  v82 = v81 + (v81 >> 16) + ((v81 + (v81 >> 16)) >> 8);
  return (*(uint64_t (**)(_QWORD))(v73 + 8 * ((11842 * (v70 + 1 >= STACK[0x428])) ^ v67)))(v78 ^ v69 & ((v80 + a3) >> 2) ^ ((_DWORD)v80 + (_DWORD)a3) ^ v69 & ((v82 + a3) >> 2) ^ ((_DWORD)v82 + (_DWORD)a3));
}

uint64_t sub_1003A52C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  int v55;
  int v56;
  uint64_t v57;

  LODWORD(STACK[0x448]) = a55 & v56;
  if (((*(_BYTE *)(a5 + ((*(_BYTE *)(a5 + ((*(_BYTE *)(a5 + ((*(_BYTE *)(a5 + 14) + 7) & 0xF)) + 12) & 0xF)) + 8) & 0xF))
       + 8) & 0xE) != 0)
    v57 = (*(_BYTE *)(a5
                    + ((*(_BYTE *)(a5 + ((*(_BYTE *)(a5 + ((*(_BYTE *)(a5 + 14) + 7) & 0xF)) + 12) & 0xF)) + 8) & 0xF))
         + 8) & 0xF;
  else
    v57 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x458] + 8 * (((v57 == 1) | (4 * (v57 == 1))) ^ v55)) - 12))();
}

void sub_1003A5664()
{
  JUMPOUT(0x1003A54B0);
}

uint64_t sub_1003A5674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a70;
  uint64_t v70;
  int v71;

  LODWORD(STACK[0x428]) = a70 ^ 0xD2D2D2D2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x458] + 8 * ((92 * (v70 == 15)) ^ (v71 - 2257))) - 8))();
}

void sub_1003A58A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  unint64_t v8;
  unint64_t v9;

  STACK[0x430] = v9;
  STACK[0x438] = v8;
  STACK[0x440] = a8;
  JUMPOUT(0x1003A56F0);
}

uint64_t sub_1003A58C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int a70;
  int v70;
  int v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unint64_t v86;
  unint64_t v87;
  unsigned int v88;
  unint64_t v89;
  int v90;
  unsigned int v91;
  unint64_t v92;
  unint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  unsigned int v103;
  unsigned int v104;

  v80 = LODWORD(STACK[0x3F4]);
  v81 = v80 ^ 0xBB5219AF ^ HIDWORD(a55) ^ a68 ^ a70 ^ a57 ^ HIDWORD(a56) ^ a56 ^ LODWORD(STACK[0x370]);
  v82 = v76 + v70;
  v83 = (v76 + v70) >> 16;
  v84 = (v82 + v83) >> 8;
  v85 = v76 + v83 + v84;
  v86 = v85 + v75;
  v87 = v86 >> 13;
  v88 = v86 >> 13;
  v89 = v86 + (v86 >> 13);
  v90 = v72 + v85 + v87 + v79 + (v89 >> 6);
  v91 = v76 + (v89 >> 6) + v88 + v84 + v83;
  LODWORD(v89) = (v91 + v74) >> 10;
  LODWORD(v87) = (v91 + v74 - v89) >> 4;
  v92 = v72 + v91 - v87 - v89 - v77;
  v93 = v72
      + v91
      + ((v91 + v71 - v87 - v89) >> 8)
      - ((v91 + v71 + ((v91 + v71 - v87 - v89) >> 8) - v87 - v89) >> 3)
      - v87
      - v89
      - a8;
  v94 = (v93 ^ 0xD612484)
      - ((v93 ^ 0xD612484) >> 15)
      - (((v93 ^ 0xD612484) - ((v93 ^ 0xD612484) >> 15)) >> 1);
  v95 = (v94 ^ 0xC3CB9A34) + ((v94 ^ 0xC3CB9A34) >> 11) + (((v94 ^ 0xC3CB9A34) + ((v94 ^ 0xC3CB9A34) >> 11)) >> 3);
  LODWORD(v89) = (v95 ^ 0xEBA7AE05)
               - ((v95 ^ 0xEBA7AE05) >> 10)
               + (((v95 ^ 0xEBA7AE05) - ((v95 ^ 0xEBA7AE05) >> 10)) >> 5);
  STACK[0x438] = v92;
  LODWORD(v87) = (v89 ^ 0xBC20881E)
               + ((v89 ^ 0xBC20881E) >> 14)
               - (((v89 ^ 0xBC20881E) + ((v89 ^ 0xBC20881E) >> 14)) >> 1);
  v96 = (v87 ^ 0xABF76176)
      + ((v87 ^ 0xABF76176) >> 11)
      - (((v87 ^ 0xABF76176) + ((v87 ^ 0xABF76176) >> 11)) >> 6);
  v97 = LODWORD(STACK[0x3FC]) ^ LODWORD(STACK[0x408]) ^ LODWORD(STACK[0x260]) ^ LODWORD(STACK[0x304]) ^ v78 ^ v90 ^ v94 ^ v87 ^ v73 & ((v94 ^ v90 ^ HIDWORD(a58) ^ v87) >> 2);
  LODWORD(STACK[0x440]) = v81;
  LODWORD(STACK[0x260]) = v73 & (v81 >> 2);
  LODWORD(STACK[0x370]) = ((v97 ^ 0x3C862D52) + (v97 ^ 0xCDD23B02) + 1) ^ 0xFFFFFFFE;
  STACK[0x430] = v93;
  LODWORD(STACK[0x408]) = v96
                        + 99179382
                        - ((v96 + 99179382) >> 12)
                        + ((v96 + 99179382 - ((v96 + 99179382) >> 12)) >> 4);
  LODWORD(STACK[0x304]) = ~LODWORD(STACK[0x354]);
  v98 = v80 ^ 0x5F1D9CDA;
  v99 = v80 ^ 0xA0E26325 ^ -(v80 ^ 0xA0E26325);
  v100 = ((_DWORD)a1 + 1725) | 0xCu;
  v101 = *((_DWORD *)*(&off_1004ECA20 + (int)(a1 ^ 0x5C0)) + 132) ^ 0x7E972846;
  LODWORD(v93) = STACK[0x40C];
  v102 = 4 * (LOBYTE(STACK[0x410]) ^ LOBYTE(STACK[0x414]));
  *(_DWORD *)(STACK[0x418] + v102) = LODWORD(STACK[0x40C]) ^ v80 ^ (((v101 ^ ((v101 & STACK[0x320]) >> 1)) & STACK[0x304]) << LODWORD(STACK[0x30C])) ^ (((v101 ^ ((v101 & STACK[0x320]) >> 1)) & STACK[0x308]) >> LODWORD(STACK[0x3F8])) ^ 0xA0E212EC;
  v103 = *((unsigned __int16 *)*(&off_1004ECA20 + (int)(a1 ^ 0x3E4)) + (v100 ^ 0x887) - 2);
  v104 = (unsigned __int16)(((v103 >> 4) | ((_WORD)v103 << 12)) ^ ((unsigned __int16)(v103 >> 4) << 7) ^ (8 * ((v103 >> 4) | ((_WORD)v103 << 12)))) ^ v93;
  *(_DWORD *)(STACK[0x420] + v102) = (v99 ^ (v104 + (v98 ^ v104) + 1)) + v104;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x458] + 8 * (int)a1))(a1, v99, v80, v100, v98, a6, v95, &off_1004ECA20, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_1003A5C3C()
{
  JUMPOUT(0x1003A5B48);
}

#error "1003AA480: call analysis failed (funcsize=4527)"

void sub_1003AA484(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unsigned int a6, char a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  unint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;

  STACK[0x2F8] = v13;
  v15 = v9 ^ 0xEE95D209 ^ (((v9 ^ 0xEE95D209) & a6) >> 1);
  LODWORD(STACK[0x2E4]) = ((v15 & v11) >> a4) + ((v15 & v14) << a7);
  v16 = v10 ^ 0xD81131CC ^ (((v10 ^ 0xD81131CC) & a1) >> 1);
  LODWORD(STACK[0x2E8]) = ((v16 & v11) >> a4) | ((v16 & v14) << a7);
  v17 = v8 ^ 0x6F496323 ^ (((v8 ^ 0x6F496323) & a6) >> 1);
  LODWORD(STACK[0x2F0]) = ((v17 & v11) >> a4) ^ ((v17 & a8) << v12);
  JUMPOUT(0x1003A7AB4);
}

uint64_t sub_1003AA56C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t result;
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  v2 = (void (*)(uint64_t))*(&off_1004ECA20 + v6 - 4005);
  v2(v1 - 0x811FDF5AA9CE16ELL);
  result = ((uint64_t (*)(uint64_t))v2)(v0 - 0x6F14D63D6987B6D0);
  if ((v7 ^ 0xDFFEF7DF) + ((2 * v7) & 0xBFFDEFBE) == -536938529)
    v4 = 246777912;
  else
    v4 = -246800904;
  *(_DWORD *)(v5 + 16) = v4;
  return result;
}

void sub_1003AA62C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  v3 = qword_100511260 - (_QWORD)&v6 + qword_100506AD8;
  qword_100511260 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = -738757634 - 742349519 * ((2 * (&v7 & 0x4858D610) - &v7 + 933702126) ^ 0x44FC5E2D);
  v8 = a2;
  sub_1003CA790((uint64_t)&v7);
  v4 = v9;
  v5 = *(int *)(a1 + 128);
  *(_DWORD *)(a1 + 128) = v5 + 1;
  *(_QWORD *)(*(_QWORD *)(a1 + 112) + 32 * v5 + 16) = 0;
  *(_DWORD *)(*(_QWORD *)(a1 + 112) + 32 * v5 + 24) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 112) + 32 * v5) = ((uint64_t (*)(_QWORD, uint64_t))*(&off_1004ECA20
                                                                                           + ((51 * (qword_100511260 ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0710[byte_10048C480[(51 * (qword_100511260 ^ 0xDE ^ qword_100506AD8))] ^ 0x3F])
                                                                                           + 718))((*(_DWORD *)(v4 - 0x4159F3519D14AB52) - 1111770304), 3798263248);
  __asm { BR              X13 }
}

uint64_t sub_1003AA818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;

  v7 = (v3 - 2095757011);
  v8 = ((((_DWORD)v1 + (_DWORD)v7) * v4) ^ (((v1 + v7) * v4) >> 16)) * v4;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(v6[405] + (v8 >> 24)) ^ *(_BYTE *)(v1 + v7 - 0x1132FE166654577ELL) ^ *(_BYTE *)(v6[98] + (v8 >> 24) - 3) ^ *(_BYTE *)(v6[778] + (v8 >> 24) - 5) ^ v8 ^ (-45 * ((((((_DWORD)v1 + (_DWORD)v7) * v4) ^ (((v1 + v7) * v4) >> 16)) * v4) >> 24));
  return (*(uint64_t (**)(void))(v2 + 8 * ((13615 * (v3 - 1 == v5)) ^ 0x150Au)))();
}

uint64_t sub_1003AA8B0()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v3;

  *(_DWORD *)(*(_QWORD *)(v0 + 112) + 32 * v3 + 8) = *v1 - 1111770304;
  return 0;
}

void sub_1003AA938(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1003AA988@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  *(_QWORD *)(v1 + 8) = v2(440 * a1, 0x10B204056A1E57ELL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((69 * (*(_DWORD *)(v1 + 16) == 0)) ^ 0x622)))();
}

uint64_t sub_1003AA9F0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * (((*(_DWORD *)(v0 + 32) != 0) * (v2 + 7270)) ^ v2)))();
}

uint64_t sub_1003AAA14()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((69 * (*(_DWORD *)(v0 + 16) == 0)) ^ 0x622)))();
}

uint64_t sub_1003AAA5C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v5 = (a1 + 5734);
  *(_QWORD *)(v2 + 24) = v3((v5 - 7213) * v1, 0x1030040D5446000);
  return (*(uint64_t (**)(void))(v4 + 8 * (((*(_DWORD *)(v2 + 32) != 0) * ((_DWORD)v5 + 7270)) ^ v5)))();
}

uint64_t sub_1003AAAAC@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t (*v2)(unint64_t, uint64_t);
  int v3;

  *(_QWORD *)(v1 + 40) = v2(((v3 - 1611359508) & 0x86D40EFE ^ 0x86D40700) * (unint64_t)a1, 0x10B204056A1E57ELL);
  *(_DWORD *)v1 = 0;
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  return 0;
}

void sub_1003AAB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  int v4;

  if (a1)
    v3 = a3 == 0;
  else
    v3 = 1;
  v4 = !v3;
  __asm { BR              X8 }
}

uint64_t sub_1003AAB78(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void (*v8)(uint64_t, unint64_t *, uint64_t);
  uint64_t v9;

  v7 = (*(uint64_t (**)(_QWORD, uint64_t))(v3 + 6832))(a2, 3384187359);
  STACK[0x318] = v7;
  *a3 = v7;
  v8 = (void (*)(uint64_t, unint64_t *, uint64_t))(*(_QWORD *)(v3 + 4128) - 4);
  v8(*(_QWORD *)(v3 + 5568) - 8, &STACK[0x4C0], 16);
  v9 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(*(_QWORD *)(v3 + 2112) - 8, v5 - 176, 16);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((12760
                                                        * ((unint64_t)&STACK[0x4D0] - *(_QWORD *)(v3 + 1496) > 0x1F)) ^ 0x14CBu))
                                          - 8))(v9);
}

uint64_t sub_1003AAC1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_OWORD *)&STACK[0x4D0] = xmmword_1004B1D70;
  *(_OWORD *)&STACK[0x4E0] = xmmword_1004B1D80;
  *(_OWORD *)&STACK[0x4F0] = xmmword_1004B1D90;
  *(_OWORD *)&STACK[0x500] = xmmword_1004B1DA0;
  *(_OWORD *)&STACK[0x510] = xmmword_1004B1DB0;
  *(_OWORD *)&STACK[0x520] = xmmword_1004B1DC0;
  *(_OWORD *)&STACK[0x530] = xmmword_1004B1DD0;
  *(_OWORD *)&STACK[0x540] = xmmword_1004B1DE0;
  *(_OWORD *)&STACK[0x550] = xmmword_1004B1DF0;
  *(_OWORD *)&STACK[0x560] = xmmword_1004B1E00;
  *(_OWORD *)&STACK[0x570] = xmmword_1004B1E10;
  *(_OWORD *)&STACK[0x580] = xmmword_1004B1E20;
  *(_OWORD *)&STACK[0x590] = xmmword_1004B1E30;
  *(_OWORD *)&STACK[0x5A0] = xmmword_1004B1E40;
  *(_OWORD *)&STACK[0x5B0] = xmmword_1004B1E50;
  *(_OWORD *)&STACK[0x5C0] = xmmword_1004B1E60;
  *(_OWORD *)&STACK[0x5D0] = xmmword_1004B1E70;
  *(_OWORD *)&STACK[0x5E0] = xmmword_1004B1E80;
  *(_OWORD *)&STACK[0x5F0] = xmmword_1004B1E90;
  *(_OWORD *)&STACK[0x600] = xmmword_1004B1EA0;
  *(_OWORD *)&STACK[0x610] = xmmword_1004B1EB0;
  *(_OWORD *)&STACK[0x620] = xmmword_1004B1EC0;
  *(_OWORD *)&STACK[0x630] = xmmword_1004B1ED0;
  *(_OWORD *)&STACK[0x640] = xmmword_1004B1EE0;
  *(_OWORD *)&STACK[0x650] = xmmword_1004B1EF0;
  *(_OWORD *)&STACK[0x660] = xmmword_1004B1F00;
  *(_OWORD *)&STACK[0x670] = xmmword_1004B1F10;
  *(_OWORD *)&STACK[0x680] = xmmword_1004B1F20;
  *(_OWORD *)&STACK[0x690] = 0u;
  *(_OWORD *)&STACK[0x6A0] = 0u;
  *(_OWORD *)&STACK[0x6B0] = 0u;
  *(_OWORD *)&STACK[0x6C0] = 0u;
  *(_OWORD *)&STACK[0x6D0] = 0u;
  *(_OWORD *)&STACK[0x6E0] = 0u;
  *(_DWORD *)(a1 + 544) = *(_DWORD *)(v1 + 544);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((15074 * (5 * (v2 ^ (v3 + 650)) == 5058)) ^ (v2 - 318799322)))
                            - 4))();
}

uint64_t sub_1003AADDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * ((((v9 ^ 0xBFE) - 6116) * (&a9 != (uint64_t *)-1216)) ^ v9)))();
}

uint64_t sub_1003AAE0C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((58 * (((v1 - 3006) | 0x1218) ^ 0x1A29)) ^ 0xEA9)
                                * (v0 - 0x7688D07DEAB44A99 == STACK[0x318] - 0x7688D07DEAB44AB9)) ^ ((v1 - 3006) | 0x1218))))();
}

uint64_t sub_1003AAE84@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 176) = 0xA232C446378BF135;
  *(_QWORD *)(v3 - 168) = 0x7F29EDF64DDEA042;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((a1 - 3897) ^ 0x15DA ^ ((a1 - 2520) | 0x800)) * (v1 != 0)) ^ (a1 - 3897)))
                            - 12))();
}

uint64_t sub_1003AAEF0()
{
  return 4294940294;
}

uint64_t sub_1003AAEF8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 ^ 0x15DA ^ ((v0 + 1377) | 0x800)) * (v1 != 0)) ^ v0)) - 12))();
}

uint64_t sub_1003AAF38@<X0>(char a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = v2 == ((v2 << (a1 - 24)) & 0xC2C0DF7C) || ((v2 - ((v2 << (a1 - 24)) & 0xC2C0DF7C) - 513773634) & 0xF) != 14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 - 4106) * v5) ^ v1)) - ((v1 + 937) ^ 0x13BBLL)))();
}

uint64_t sub_1003AAFA0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((2446 * ((((a1 + 855150251) ^ (v1 == 0x6CCFC4499E327A51)) & 1) == 0)) ^ a1)))();
}

uint64_t sub_1003AAFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  int v67;

  v54 = v51 & 0xCD075FF7;
  v55 = (16 * (v51 & 0xCD075FF7)) ^ 0x2CC0;
  v56 = ((v51 & 0xCD075FF7) + 2118364437) & 0x81BC55FF;
  v57 = *(uint64_t (**)(uint64_t))(v52 + 8 * (int)((v51 & 0xCD075FF7) + 254));
  v58 = v57(1032);
  STACK[0x410] = v58 + 0x2AEF01BCA05C28EBLL;
  v59 = v57(1032);
  STACK[0x478] = v58;
  STACK[0x470] = v59;
  if (v58)
    v66 = v59 == 0;
  else
    v66 = 1;
  v67 = !v66;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * (int)((v67 * (v55 ^ v56 ^ 0x2573)) ^ v54)) - 4))(v59, v60, v61, STACK[0x318], v62, v63, v64, v65, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1003AB0A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  int v4;
  _QWORD *v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v8 = (v7 >> 3) ^ 0x1C2C0DF7;
  v9 = (v5[(v5[(v5[(v5[0x38472F9D % v8] + 1458587740) % v8] + 2838844737) % v8] + 1044766243) % v8]
      + 2586414272)
     % v8;
  if (v9 <= 1)
    v10 = 1;
  else
    v10 = v9;
  *a4 = __ROR8__((2 * v4) ^ 0x1DF4u ^ __ROR8__(*v5, 32) ^ 0x39F6F5C06A765D4DLL, 32) ^ 0x8B97ABB6D8171421;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4717 * (v10 == 1)) ^ v4)) - 8))();
}

uint64_t sub_1003AB208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a4 + 8 * v5) = *(_QWORD *)(v7 + 8 * v5) ^ 0xE1E1E1E1E1E1E1E1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((13767 * (a5 <= v5 + 1)) ^ v6)) - 8))();
}

uint64_t sub_1003AB2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  STACK[0x458] = a5;
  STACK[0x210] = v6 - 0x6CCFC4499E327A50;
  if (((*(_BYTE *)(v6
                  - 0x6CCFC4499E327A51
                  + ((*(_BYTE *)(v6
                               - 0x6CCFC4499E327A51
                               + ((*(_BYTE *)(v6
                                            - 0x6CCFC4499E327A51
                                            + ((*(_BYTE *)(v6 - 0x6CCFC4499E327A50) + 2) & 0xF))
                                 + 13) & 0xF))
                    + 13) & 0xF))
       + 7) & 0xE) != 0)
    v8 = (*(_BYTE *)(v6
                   - 0x6CCFC4499E327A51
                   + ((*(_BYTE *)(v6
                                - 0x6CCFC4499E327A51
                                + ((*(_BYTE *)(v6
                                             - 0x6CCFC4499E327A51
                                             + ((*(_BYTE *)(v6 - 0x6CCFC4499E327A50) + 2) & 0xF))
                                  + 13) & 0xF))
                     + 13) & 0xF))
        + 7) & 0xF;
  else
    v8 = 1;
  return (*(uint64_t (**)(void))(v7 + 8 * ((8145 * (v8 != 1)) ^ v5 ^ 0x1FD1u)))();
}

uint64_t sub_1003AB424()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((62 * (v1 == 15)) ^ v0)))();
}

uint64_t sub_1003AB4B0@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unint64_t v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  unsigned int v371;
  int v372;
  int v373;
  unsigned int v374;
  int v375;
  int v376;
  int v377;
  unsigned int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  uint64_t v388;
  uint64_t v389;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  unsigned int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  unsigned int v406;
  int v407;
  int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;

  LODWORD(STACK[0x360]) = v5;
  STACK[0x320] = v1;
  STACK[0x328] = v3;
  STACK[0x2F0] = v2;
  v6 = STACK[0x57C];
  v7 = STACK[0x578];
  v8 = STACK[0x650];
  LODWORD(STACK[0x490]) = LODWORD(STACK[0x650]) ^ LODWORD(STACK[0x57C]);
  v9 = STACK[0x680];
  v10 = STACK[0x5E4];
  v11 = STACK[0x598];
  v12 = STACK[0x59C];
  v13 = STACK[0x528];
  v14 = STACK[0x52C];
  v15 = STACK[0x5E8];
  v16 = STACK[0x5D8];
  LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x598]);
  LODWORD(STACK[0x3B8]) = v9 ^ v11;
  v17 = STACK[0x67C];
  LODWORD(STACK[0x40C]) = v7 + v9;
  LODWORD(STACK[0x450]) = v13 - v6;
  LODWORD(STACK[0x444]) = v7 ^ v13;
  LODWORD(STACK[0x404]) = v15 ^ v10;
  v18 = STACK[0x4D8];
  LODWORD(STACK[0x3AC]) = STACK[0x4DC];
  LODWORD(STACK[0x460]) = v17 + v18;
  v19 = STACK[0x560];
  v20 = LODWORD(STACK[0x560]) ^ v16;
  LODWORD(STACK[0x424]) = v20;
  v21 = STACK[0x4D4];
  LODWORD(STACK[0x2D0]) = STACK[0x4D4];
  v22 = STACK[0x4D0];
  v23 = STACK[0x510];
  LODWORD(STACK[0x3A8]) = STACK[0x510];
  v24 = v23 ^ v21;
  LODWORD(STACK[0x408]) = v24;
  v25 = (v15 ^ v10) - v24;
  LODWORD(STACK[0x434]) = v25;
  v26 = v20 ^ (v17 + v18);
  LODWORD(STACK[0x480]) = v26;
  LODWORD(STACK[0x368]) = a1;
  LODWORD(STACK[0x3EC]) = (v26 ^ v25) + 2 * (v26 & v25);
  v27 = STACK[0x60C];
  LODWORD(STACK[0x44C]) = LODWORD(STACK[0x60C]) + v10;
  v28 = STACK[0x4F8];
  v29 = STACK[0x4FC];
  LODWORD(STACK[0x430]) = v27 - LODWORD(STACK[0x4F8]);
  LODWORD(STACK[0x3D8]) = v18 ^ v28;
  v30 = STACK[0x600];
  LODWORD(STACK[0x454]) = v8 - LODWORD(STACK[0x600]);
  v31 = STACK[0x574];
  v32 = STACK[0x570];
  LODWORD(STACK[0x448]) = v30 - LODWORD(STACK[0x574]);
  v33 = STACK[0x608];
  LODWORD(STACK[0x43C]) = LODWORD(STACK[0x608]) ^ v31;
  v34 = STACK[0x630];
  LODWORD(STACK[0x42C]) = v33 + LODWORD(STACK[0x630]);
  v35 = STACK[0x4F0];
  v36 = STACK[0x4F4];
  LODWORD(STACK[0x420]) = v34 - LODWORD(STACK[0x4F0]);
  v37 = STACK[0x648];
  LODWORD(STACK[0x390]) = LODWORD(STACK[0x648]) ^ v35;
  v38 = STACK[0x5F0];
  LODWORD(STACK[0x38C]) = v37 - LODWORD(STACK[0x5F0]);
  v39 = STACK[0x604];
  LODWORD(STACK[0x380]) = v38 - LODWORD(STACK[0x604]);
  v40 = STACK[0x508];
  LODWORD(STACK[0x3B0]) = v39 - LODWORD(STACK[0x508]);
  v41 = STACK[0x5E0];
  LODWORD(STACK[0x374]) = v40 - LODWORD(STACK[0x5E0]);
  LODWORD(STACK[0x440]) = v41 + v22;
  v42 = STACK[0x628];
  LODWORD(STACK[0x3BC]) = v22 - LODWORD(STACK[0x628]);
  v43 = STACK[0x51C];
  v44 = STACK[0x518];
  LODWORD(STACK[0x3F0]) = v42 ^ LODWORD(STACK[0x51C]);
  v45 = STACK[0x548];
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x548]) ^ v43;
  v46 = STACK[0x4E0];
  v47 = STACK[0x4E4];
  LODWORD(STACK[0x3A4]) = v45 ^ LODWORD(STACK[0x4E0]);
  LODWORD(STACK[0x39C]) = v12 + v46;
  v48 = STACK[0x54C];
  LODWORD(STACK[0x400]) = v12 ^ LODWORD(STACK[0x54C]);
  v49 = STACK[0x64C];
  LODWORD(STACK[0x41C]) = LODWORD(STACK[0x64C]) + v48;
  v50 = STACK[0x63C];
  LODWORD(STACK[0x46C]) = v49 - LODWORD(STACK[0x63C]);
  v51 = STACK[0x5A4];
  LODWORD(STACK[0x3FC]) = LODWORD(STACK[0x5A4]) ^ v50;
  v52 = STACK[0x5C4];
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x5C4]) + v51;
  v53 = STACK[0x540];
  v54 = STACK[0x544];
  LODWORD(STACK[0x364]) = v52 - LODWORD(STACK[0x540]);
  v55 = STACK[0x61C];
  LODWORD(STACK[0x3E4]) = v53 - LODWORD(STACK[0x61C]);
  v56 = STACK[0x5EC];
  LODWORD(STACK[0x354]) = LODWORD(STACK[0x5EC]) + v55;
  v57 = STACK[0x5B8];
  LODWORD(STACK[0x3D0]) = v56 ^ LODWORD(STACK[0x5B8]);
  v58 = STACK[0x670];
  LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x670]) + v57;
  v59 = STACK[0x638];
  LODWORD(STACK[0x2C0]) = v58 ^ LODWORD(STACK[0x638]);
  v60 = STACK[0x610];
  LODWORD(STACK[0x33C]) = v59 - LODWORD(STACK[0x610]);
  LODWORD(STACK[0x438]) = v32 + v60;
  v61 = STACK[0x5C0];
  LODWORD(STACK[0x358]) = v32 - LODWORD(STACK[0x5C0]);
  v62 = STACK[0x4E8];
  v63 = STACK[0x4EC];
  LODWORD(STACK[0x2E8]) = v61 - LODWORD(STACK[0x4E8]);
  v64 = STACK[0x684];
  LODWORD(STACK[0x300]) = LODWORD(STACK[0x684]) ^ v62;
  LODWORD(STACK[0x3E0]) = v64 - v63;
  v65 = STACK[0x5FC];
  LODWORD(STACK[0x2EC]) = v63 ^ LODWORD(STACK[0x5FC]);
  v66 = STACK[0x5F4];
  LODWORD(STACK[0x2E0]) = LODWORD(STACK[0x5F4]) + v65;
  v67 = STACK[0x520];
  LODWORD(STACK[0x350]) = v66 + LODWORD(STACK[0x520]);
  v68 = STACK[0x65C];
  LODWORD(STACK[0x3C4]) = LODWORD(STACK[0x65C]) + v67;
  v69 = STACK[0x538];
  v70 = STACK[0x53C];
  LODWORD(STACK[0x398]) = v68 - LODWORD(STACK[0x538]);
  v71 = STACK[0x554];
  v72 = LODWORD(STACK[0x550]) + v69;
  v73 = STACK[0x5BC];
  LODWORD(STACK[0x338]) = LODWORD(STACK[0x550]) + LODWORD(STACK[0x5BC]);
  v74 = STACK[0x524];
  LODWORD(STACK[0x394]) = v73 + LODWORD(STACK[0x524]);
  v75 = STACK[0x62C];
  LODWORD(STACK[0x428]) = LODWORD(STACK[0x62C]) + v74;
  v76 = STACK[0x674];
  LODWORD(STACK[0x34C]) = v75 + LODWORD(STACK[0x674]);
  v77 = STACK[0x654];
  LODWORD(STACK[0x35C]) = v76 ^ LODWORD(STACK[0x654]);
  v78 = STACK[0x564];
  LODWORD(STACK[0x2B8]) = LODWORD(STACK[0x564]) ^ v77;
  v79 = STACK[0x5D4];
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x5D4]) - v15;
  v80 = STACK[0x660];
  LODWORD(STACK[0x348]) = v78 - LODWORD(STACK[0x660]);
  v81 = STACK[0x50C];
  LODWORD(STACK[0x290]) = LODWORD(STACK[0x50C]) + v80;
  v82 = STACK[0x514];
  LODWORD(STACK[0x340]) = v81 + LODWORD(STACK[0x514]);
  LODWORD(STACK[0x250]) = v47 + v82;
  v83 = v47 - LODWORD(STACK[0x5B4]);
  v84 = STACK[0x580];
  v85 = STACK[0x584];
  LODWORD(STACK[0x248]) = LODWORD(STACK[0x5B4]) - LODWORD(STACK[0x580]);
  LODWORD(STACK[0x384]) = v79 + v70;
  LODWORD(STACK[0x230]) = v84 - v70;
  v86 = v17 - LODWORD(STACK[0x644]);
  v87 = STACK[0x678];
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x644]) - LODWORD(STACK[0x678]);
  v88 = STACK[0x5A0];
  LODWORD(STACK[0x3B4]) = LODWORD(STACK[0x5A0]) - v19;
  v89 = v88 ^ v54;
  LODWORD(STACK[0x3CC]) = v29 + v54;
  v90 = STACK[0x5DC];
  LODWORD(STACK[0x3C0]) = LODWORD(STACK[0x5DC]) ^ v87;
  v91 = STACK[0x5A8];
  LODWORD(STACK[0x220]) = v90 ^ LODWORD(STACK[0x5A8]);
  LODWORD(STACK[0x3C8]) = v14 + v91;
  v92 = STACK[0x5AC];
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x5AC]) ^ v14;
  v93 = v92 ^ LODWORD(STACK[0x618]);
  v94 = STACK[0x500];
  v95 = LODWORD(STACK[0x618]) - LODWORD(STACK[0x504]);
  v96 = v29 ^ LODWORD(STACK[0x504]);
  v97 = STACK[0x558];
  LODWORD(STACK[0x260]) = LODWORD(STACK[0x558]) + v16;
  v98 = STACK[0x568];
  v99 = STACK[0x56C];
  LODWORD(STACK[0x208]) = v97 ^ LODWORD(STACK[0x568]);
  LODWORD(STACK[0x334]) = v98 - v44;
  v100 = v44 ^ LODWORD(STACK[0x5F8]);
  v101 = STACK[0x620];
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x5F8]) ^ LODWORD(STACK[0x620]);
  v102 = STACK[0x58C];
  v103 = STACK[0x588];
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x58C]) + v101;
  v104 = STACK[0x530];
  LODWORD(STACK[0x488]) = LODWORD(STACK[0x530]) ^ v102;
  LODWORD(STACK[0x268]) = v104 ^ v94;
  v105 = v94 - LODWORD(STACK[0x5D0]);
  v106 = LODWORD(STACK[0x5D0]) - v36;
  v107 = STACK[0x66C];
  v108 = v36 + LODWORD(STACK[0x66C]);
  v109 = STACK[0x5C8];
  STACK[0x498] = v4;
  v110 = v109 + v107;
  v111 = v103 ^ v109;
  v112 = v103 ^ LODWORD(STACK[0x624]);
  v113 = LODWORD(STACK[0x624]) - LODWORD(STACK[0x534]);
  v114 = STACK[0x594];
  LODWORD(STACK[0x25C]) = LODWORD(STACK[0x594]) ^ LODWORD(STACK[0x534]);
  v115 = v71 + v114;
  v116 = v71 - LODWORD(STACK[0x55C]);
  v117 = LODWORD(STACK[0x55C]) + LODWORD(STACK[0x590]);
  v118 = LODWORD(STACK[0x590]) - v85;
  v119 = LODWORD(STACK[0x5B0]) ^ v85;
  v120 = STACK[0x5CC];
  LODWORD(STACK[0x218]) = LODWORD(STACK[0x5B0]) - LODWORD(STACK[0x5CC]);
  v432 = v120 - LODWORD(STACK[0x668]);
  v121 = LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x668]);
  v122 = LODWORD(STACK[0x614]) + LODWORD(STACK[0x688]);
  v123 = LODWORD(STACK[0x614]) - LODWORD(STACK[0x634]);
  LODWORD(STACK[0x21C]) = LODWORD(STACK[0x634]) ^ v99;
  v124 = v99 ^ LODWORD(STACK[0x664]);
  v125 = STACK[0x3AC];
  LODWORD(STACK[0x234]) = LODWORD(STACK[0x3AC]) + LODWORD(STACK[0x664]);
  v126 = v125 ^ LODWORD(STACK[0x658]);
  v429 = LODWORD(STACK[0x658]) - LODWORD(STACK[0x3A8]);
  v127 = STACK[0x3B8];
  LODWORD(STACK[0x378]) = v122 + LODWORD(STACK[0x3B8]);
  v128 = STACK[0x364];
  LODWORD(STACK[0x3A8]) = LODWORD(STACK[0x364]) ^ v127;
  LODWORD(STACK[0x304]) = v128 - v72;
  v129 = STACK[0x3E8];
  LODWORD(STACK[0x23C]) = LODWORD(STACK[0x3E8]) + v72;
  v130 = STACK[0x388];
  LODWORD(STACK[0x2FC]) = v129 ^ LODWORD(STACK[0x388]);
  LODWORD(STACK[0x2A8]) = v130 ^ v119;
  LODWORD(STACK[0x310]) = v100 ^ v119;
  LODWORD(STACK[0x364]) = v89 + v100;
  LODWORD(STACK[0x30C]) = v89 - v112;
  LODWORD(STACK[0x388]) = v112 - v113;
  LODWORD(STACK[0x238]) = v113 + v117;
  v131 = STACK[0x350];
  LODWORD(STACK[0x298]) = LODWORD(STACK[0x350]) + v117;
  LODWORD(STACK[0x350]) = v93 + v131;
  LODWORD(STACK[0x278]) = v93 - v83;
  LODWORD(STACK[0x2C8]) = v86 ^ v83;
  v132 = STACK[0x380];
  LODWORD(STACK[0x20C]) = v86 + LODWORD(STACK[0x380]);
  v133 = STACK[0x374];
  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x374]) + v132;
  v134 = v121 + v133;
  v135 = STACK[0x250];
  LODWORD(STACK[0x3B8]) = v121 - LODWORD(STACK[0x250]);
  v136 = STACK[0x38C];
  LODWORD(STACK[0x2E4]) = LODWORD(STACK[0x38C]) ^ LODWORD(STACK[0x404]);
  v137 = STACK[0x390];
  LODWORD(STACK[0x38C]) = LODWORD(STACK[0x390]) ^ v136;
  v138 = STACK[0x40C];
  LODWORD(STACK[0x314]) = LODWORD(STACK[0x40C]) - v137;
  LODWORD(STACK[0x308]) = v108 + v138;
  LODWORD(STACK[0x374]) = v118 - v108;
  LODWORD(STACK[0x2D8]) = v96 ^ v118;
  v139 = STACK[0x270];
  LODWORD(STACK[0x344]) = LODWORD(STACK[0x270]) + v96;
  v140 = STACK[0x2B8];
  LODWORD(STACK[0x228]) = v135 - LODWORD(STACK[0x2B8]);
  v141 = STACK[0x2C0];
  LODWORD(STACK[0x3AC]) = v140 - LODWORD(STACK[0x2C0]);
  v142 = STACK[0x2E8];
  LODWORD(STACK[0x2B8]) = v141 ^ LODWORD(STACK[0x2E8]);
  v143 = STACK[0x230];
  LODWORD(STACK[0x240]) = LODWORD(STACK[0x230]) + v142;
  LODWORD(STACK[0x3E8]) = v143 - v139;
  LODWORD(STACK[0x200]) = LODWORD(STACK[0x408]) + v115;
  v144 = STACK[0x2E0];
  LODWORD(STACK[0x250]) = v115 + LODWORD(STACK[0x2E0]);
  v145 = STACK[0x3D8];
  LODWORD(STACK[0x390]) = v144 + LODWORD(STACK[0x3D8]);
  v146 = LODWORD(STACK[0x2EC]) + v145;
  v147 = LODWORD(STACK[0x2EC]) + v105;
  v148 = STACK[0x248];
  LODWORD(STACK[0x2C0]) = v105 - LODWORD(STACK[0x248]);
  v423 = v148 + v95;
  v149 = STACK[0x358];
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x358]) + v95;
  v150 = STACK[0x220];
  LODWORD(STACK[0x358]) = v149 - LODWORD(STACK[0x220]);
  v425 = v150 - LODWORD(STACK[0x354]);
  LODWORD(STACK[0x2E8]) = LODWORD(STACK[0x354]) - v116;
  v151 = STACK[0x300];
  LODWORD(STACK[0x2E0]) = v116 ^ LODWORD(STACK[0x300]);
  v152 = STACK[0x33C];
  LODWORD(STACK[0x40C]) = v151 ^ LODWORD(STACK[0x33C]);
  LODWORD(STACK[0x354]) = v152 - LODWORD(STACK[0x460]);
  v153 = STACK[0x3B0];
  v154 = STACK[0x3BC];
  LODWORD(STACK[0x220]) = (LODWORD(STACK[0x3BC]) ^ -LODWORD(STACK[0x3BC]) ^ (LODWORD(STACK[0x3B0])
                                                                           - (LODWORD(STACK[0x3B0]) ^ LODWORD(STACK[0x3BC]))))
                        + LODWORD(STACK[0x3B0]);
  v155 = STACK[0x3A4];
  LODWORD(STACK[0x2EC]) = LODWORD(STACK[0x3A4]) ^ v153;
  v156 = LODWORD(STACK[0x424]) - LODWORD(STACK[0x290]);
  v157 = STACK[0x208];
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x208]) + LODWORD(STACK[0x290]);
  v158 = v157 + LODWORD(STACK[0x39C]);
  LODWORD(STACK[0x3B0]) = v124 ^ LODWORD(STACK[0x39C]);
  LODWORD(STACK[0x248]) = v155 ^ v124;
  LODWORD(STACK[0x290]) = v126 + v154;
  LODWORD(STACK[0x39C]) = v126 - v111;
  v416 = v123 + v111;
  v159 = STACK[0x420];
  LODWORD(STACK[0x3A4]) = v123 + LODWORD(STACK[0x420]);
  LODWORD(STACK[0x3BC]) = v106 + v159;
  v160 = STACK[0x490];
  LODWORD(STACK[0x404]) = LODWORD(STACK[0x490]) ^ v106;
  v161 = v160 + LODWORD(STACK[0x338]);
  v162 = STACK[0x280];
  LODWORD(STACK[0x208]) = LODWORD(STACK[0x338]) - LODWORD(STACK[0x280]);
  v163 = v110 + v162;
  v164 = STACK[0x288];
  v165 = LODWORD(STACK[0x288]) ^ v110;
  v166 = STACK[0x3A0];
  v167 = STACK[0x2B0];
  v168 = LODWORD(STACK[0x2B0]) ^ LODWORD(STACK[0x3A0]);
  v169 = v165 ^ v168;
  LODWORD(STACK[0x460]) = v165 ^ v168;
  LODWORD(STACK[0x33C]) = (v165 ^ v168 ^ -(v165 ^ v168) ^ (v134 - (v165 ^ v168 ^ v134))) + v134;
  LODWORD(STACK[0x490]) = LODWORD(STACK[0x434]) + v147;
  LODWORD(STACK[0x434]) = v147 ^ v146;
  LODWORD(STACK[0x420]) = v165 + v146;
  v170 = v164 + LODWORD(STACK[0x2D0]);
  v171 = STACK[0x260];
  LODWORD(STACK[0x2D0]) -= LODWORD(STACK[0x260]);
  v172 = v171 - LODWORD(STACK[0x34C]);
  v173 = STACK[0x430];
  v174 = LODWORD(STACK[0x34C]) ^ LODWORD(STACK[0x430]);
  LODWORD(STACK[0x424]) = v168 + v174;
  LODWORD(STACK[0x3D8]) = (v172 ^ v174) + 2 * (v172 & v174);
  v427 = v173 ^ LODWORD(STACK[0x35C]);
  v418 = LODWORD(STACK[0x348]) ^ LODWORD(STACK[0x35C]);
  v175 = STACK[0x340];
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x340]) ^ LODWORD(STACK[0x348]);
  v176 = v432 + v175;
  v177 = v432 - LODWORD(STACK[0x42C]);
  v178 = STACK[0x43C];
  LODWORD(STACK[0x260]) = LODWORD(STACK[0x42C]) ^ LODWORD(STACK[0x43C]);
  v179 = v178 ^ LODWORD(STACK[0x450]);
  v180 = STACK[0x3F0];
  LODWORD(STACK[0x430]) = LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x3F0]);
  v181 = STACK[0x268];
  LODWORD(STACK[0x230]) = LODWORD(STACK[0x268]) ^ v180;
  v182 = STACK[0x3D0];
  LODWORD(STACK[0x340]) = v181 - LODWORD(STACK[0x3D0]);
  v405 = v182 - LODWORD(STACK[0x218]);
  v183 = LODWORD(STACK[0x218]) - LODWORD(STACK[0x398]);
  v184 = LODWORD(STACK[0x398]) + LODWORD(STACK[0x394]);
  v421 = v429 ^ LODWORD(STACK[0x394]);
  v185 = v429 ^ LODWORD(STACK[0x25C]);
  v186 = STACK[0x3D4];
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x25C]) ^ LODWORD(STACK[0x3D4]);
  v187 = LODWORD(STACK[0x488]) + v186;
  v433 = v167 ^ LODWORD(STACK[0x400]);
  v188 = LODWORD(STACK[0x3E4]) + LODWORD(STACK[0x400]);
  v189 = LODWORD(STACK[0x41C]) ^ LODWORD(STACK[0x3E4]);
  v190 = STACK[0x44C];
  LODWORD(STACK[0x400]) = LODWORD(STACK[0x41C]) + LODWORD(STACK[0x44C]);
  v191 = STACK[0x444];
  LODWORD(STACK[0x348]) = LODWORD(STACK[0x444]) ^ v190;
  v192 = STACK[0x3FC];
  v193 = v191 + LODWORD(STACK[0x3FC]);
  v194 = LODWORD(STACK[0x21C]) ^ v166;
  v195 = STACK[0x448];
  LODWORD(STACK[0x268]) = LODWORD(STACK[0x21C]) ^ LODWORD(STACK[0x448]);
  v196 = LODWORD(STACK[0x384]) + v195;
  v197 = LODWORD(STACK[0x384]) - LODWORD(STACK[0x3C4]);
  v198 = LODWORD(STACK[0x3C4]) - LODWORD(STACK[0x334]);
  v413 = LODWORD(STACK[0x234]) + LODWORD(STACK[0x334]);
  v199 = LODWORD(STACK[0x234]) - LODWORD(STACK[0x440]);
  v200 = LODWORD(STACK[0x454]) + LODWORD(STACK[0x440]) - 2 * LODWORD(STACK[0x454]);
  v201 = LODWORD(STACK[0x454]) - LODWORD(STACK[0x3E0]);
  v202 = STACK[0x3B4];
  v203 = LODWORD(STACK[0x3B4]) + LODWORD(STACK[0x3E0]);
  v204 = LODWORD(STACK[0x33C]) ^ v169;
  LODWORD(STACK[0x300]) = v172 + v187;
  LODWORD(STACK[0x3A0]) = v187 - v203;
  v205 = STACK[0x23C];
  LODWORD(STACK[0x43C]) = v203 ^ LODWORD(STACK[0x23C]);
  v420 = v205 - v185;
  LODWORD(STACK[0x41C]) = v185 - v158;
  LODWORD(STACK[0x218]) = v158 - v198;
  v206 = STACK[0x20C];
  LODWORD(STACK[0x3D0]) = v198 - LODWORD(STACK[0x20C]);
  LODWORD(STACK[0x450]) = v206 - v156;
  LODWORD(STACK[0x44C]) = v156 - v204;
  v207 = STACK[0x238];
  LODWORD(STACK[0x35C]) = v204 ^ LODWORD(STACK[0x238]);
  LODWORD(STACK[0x394]) = v207 ^ v193;
  LODWORD(STACK[0x34C]) = v193 + v423;
  LODWORD(STACK[0x3D4]) = v189 + v423;
  v208 = STACK[0x3CC];
  v209 = STACK[0x37C];
  v210 = STACK[0x200];
  LODWORD(STACK[0x3C4]) = LODWORD(STACK[0x200]) + LODWORD(STACK[0x37C]) - LODWORD(STACK[0x3CC]);
  LODWORD(STACK[0x448]) = v170 ^ v210;
  LODWORD(STACK[0x444]) = v425 - v170;
  v399 = v176 - v425;
  v211 = STACK[0x38C];
  LODWORD(STACK[0x234]) = LODWORD(STACK[0x38C]) - v176;
  v212 = STACK[0x390];
  LODWORD(STACK[0x38C]) = v211 + LODWORD(STACK[0x390]);
  v213 = STACK[0x2A8];
  LODWORD(STACK[0x42C]) = LODWORD(STACK[0x2A8]) ^ v212;
  v214 = STACK[0x3B0];
  LODWORD(STACK[0x338]) = v189 ^ LODWORD(STACK[0x3B0]);
  LODWORD(STACK[0x334]) = v214 - v163;
  LODWORD(STACK[0x390]) = v163 - v183;
  v215 = STACK[0x228];
  LODWORD(STACK[0x440]) = v183 ^ LODWORD(STACK[0x228]);
  LODWORD(STACK[0x398]) = v215 - v161;
  v216 = STACK[0x374];
  LODWORD(STACK[0x3B0]) = v161 - LODWORD(STACK[0x374]);
  LODWORD(STACK[0x25C]) = v216 ^ v184;
  v217 = STACK[0x278];
  LODWORD(STACK[0x384]) = v184 - LODWORD(STACK[0x278]);
  LODWORD(STACK[0x33C]) = v217 - v416;
  v218 = STACK[0x240];
  LODWORD(STACK[0x3E4]) = v416 ^ LODWORD(STACK[0x240]);
  LODWORD(STACK[0x2B0]) = v194 ^ v218;
  v219 = STACK[0x298];
  LODWORD(STACK[0x374]) = v194 ^ LODWORD(STACK[0x298]);
  v220 = v219 - v213;
  v221 = LODWORD(STACK[0x46C]) + LODWORD(STACK[0x488]);
  v222 = LODWORD(STACK[0x46C]) ^ LODWORD(STACK[0x3C0]);
  v223 = v208 ^ LODWORD(STACK[0x3C0]);
  LODWORD(STACK[0x3CC]) = v208 + v192;
  v224 = v202 ^ LODWORD(STACK[0x3C8]);
  v225 = LODWORD(STACK[0x3C8]) ^ LODWORD(STACK[0x428]);
  v226 = STACK[0x438];
  v227 = LODWORD(STACK[0x428]) ^ LODWORD(STACK[0x438]);
  LODWORD(STACK[0x3FC]) = v179 + v192 + v209;
  v228 = STACK[0x2A0];
  LODWORD(STACK[0x3C8]) = v179 - LODWORD(STACK[0x2A0]);
  v229 = STACK[0x250];
  LODWORD(STACK[0x3E0]) = v228 - LODWORD(STACK[0x250]);
  v230 = STACK[0x304];
  LODWORD(STACK[0x488]) = v229 ^ LODWORD(STACK[0x304]);
  v231 = STACK[0x3BC];
  LODWORD(STACK[0x21C]) = v230 - LODWORD(STACK[0x3BC]);
  v232 = STACK[0x2FC];
  v233 = LODWORD(STACK[0x2FC]) ^ v231;
  LODWORD(STACK[0x280]) = v233;
  v234 = STACK[0x220];
  LODWORD(STACK[0x3BC]) = v232 ^ LODWORD(STACK[0x220]);
  v235 = STACK[0x2C8];
  LODWORD(STACK[0x3B4]) = v234 - LODWORD(STACK[0x2C8]);
  LODWORD(STACK[0x37C]) = v235 - v177;
  v236 = v177 - LODWORD(STACK[0x208]);
  LODWORD(STACK[0x46C]) = LODWORD(STACK[0x208]) - v188;
  v237 = v188 - LODWORD(STACK[0x290]);
  v424 = LODWORD(STACK[0x290]) ^ v226;
  v238 = STACK[0x310];
  v239 = v226 - LODWORD(STACK[0x310]);
  LODWORD(STACK[0x290]) = v239;
  v240 = STACK[0x2B8];
  LODWORD(STACK[0x23C]) = v238 - LODWORD(STACK[0x2B8]);
  v241 = v240 - LODWORD(STACK[0x30C]);
  LODWORD(STACK[0x304]) = LODWORD(STACK[0x30C]) ^ v418;
  v242 = STACK[0x2E4];
  LODWORD(STACK[0x438]) = v418 - LODWORD(STACK[0x2E4]);
  v417 = v196 ^ v242;
  v430 = v196 ^ v197;
  v243 = STACK[0x2D8];
  LODWORD(STACK[0x2FC]) = v197 - LODWORD(STACK[0x2D8]);
  v244 = v243 + LODWORD(STACK[0x248]);
  v245 = LODWORD(STACK[0x248]) - v427;
  v246 = STACK[0x2C0];
  LODWORD(STACK[0x240]) = v427 ^ LODWORD(STACK[0x2C0]);
  v247 = STACK[0x308];
  LODWORD(STACK[0x238]) = v246 - LODWORD(STACK[0x308]);
  v248 = STACK[0x270];
  LODWORD(STACK[0x454]) = v247 - LODWORD(STACK[0x270]);
  v249 = v199 + v248;
  LODWORD(STACK[0x220]) = v224 + v199 - 2 * (v224 & v199);
  LODWORD(STACK[0x3F0]) = LODWORD(STACK[0x314]) + v227;
  LODWORD(STACK[0x248]) = v421 - LODWORD(STACK[0x480]);
  v250 = STACK[0x350];
  LODWORD(STACK[0x298]) = LODWORD(STACK[0x350]) ^ v421;
  v251 = STACK[0x400];
  LODWORD(STACK[0x2B8]) = LODWORD(STACK[0x400]) - v250;
  v252 = STACK[0x260];
  v253 = LODWORD(STACK[0x260]) - v251;
  LODWORD(STACK[0x200]) = v253;
  v254 = LODWORD(STACK[0x364]) + v252;
  v409 = v201 + LODWORD(STACK[0x364]);
  v255 = STACK[0x378];
  v256 = LODWORD(STACK[0x378]) ^ v201;
  LODWORD(STACK[0x260]) = v256;
  v257 = STACK[0x344];
  LODWORD(STACK[0x2C8]) = LODWORD(STACK[0x344]) ^ v255;
  v258 = STACK[0x2E0];
  LODWORD(STACK[0x378]) = v257 ^ LODWORD(STACK[0x2E0]);
  v419 = LODWORD(STACK[0x2E8]) - v258;
  v259 = v413 - LODWORD(STACK[0x2E8]);
  LODWORD(STACK[0x208]) = v223 - v413;
  v411 = v223 ^ v433;
  v260 = STACK[0x288];
  LODWORD(STACK[0x2A0]) = v433 ^ LODWORD(STACK[0x288]);
  v414 = LODWORD(STACK[0x39C]) + v260;
  v434 = LODWORD(STACK[0x2D0]) - LODWORD(STACK[0x39C]);
  LODWORD(STACK[0x288]) = v200 - LODWORD(STACK[0x2D0]);
  v261 = STACK[0x3A8];
  v262 = LODWORD(STACK[0x3A8]) - v200;
  LODWORD(STACK[0x310]) = v262;
  v263 = LODWORD(STACK[0x388]) - v261;
  LODWORD(STACK[0x20C]) = LODWORD(STACK[0x388]) + v225;
  v422 = LODWORD(STACK[0x230]) + v225;
  v264 = STACK[0x268];
  v265 = LODWORD(STACK[0x268]) - LODWORD(STACK[0x230]);
  LODWORD(STACK[0x2A8]) = v265;
  v266 = STACK[0x2EC];
  LODWORD(STACK[0x228]) = v264 + LODWORD(STACK[0x2EC]);
  v267 = v227 - v266;
  v401 = LODWORD(STACK[0x340]) ^ v224;
  v268 = STACK[0x348];
  v269 = LODWORD(STACK[0x340]) ^ LODWORD(STACK[0x348]);
  LODWORD(STACK[0x364]) = v220;
  LODWORD(STACK[0x314]) = v220 - v269 - 1521392288;
  LODWORD(STACK[0x400]) = (v419 + LODWORD(STACK[0x460])) ^ 0x88BBE0B2;
  LODWORD(STACK[0x2EC]) = LODWORD(STACK[0x444]) - v254 - 1585586652;
  LODWORD(STACK[0x344]) = v262 - LODWORD(STACK[0x490]) + 79022327;
  LODWORD(STACK[0x2E8]) = v244 + v265 + 838595596;
  v426 = LODWORD(STACK[0x358]) ^ v268;
  v270 = LODWORD(STACK[0x358]) - v222;
  v271 = LODWORD(STACK[0x3B8]) + v222;
  v272 = LODWORD(STACK[0x3B8]) ^ LODWORD(STACK[0x3AC]);
  v428 = LODWORD(STACK[0x354]) + LODWORD(STACK[0x3AC]);
  v273 = LODWORD(STACK[0x354]) + v221;
  v274 = STACK[0x3A4];
  LODWORD(STACK[0x250]) = LODWORD(STACK[0x3A4]) ^ v221;
  v275 = STACK[0x430];
  v276 = v274 ^ LODWORD(STACK[0x430]);
  LODWORD(STACK[0x350]) = v276 + LODWORD(STACK[0x448]) + 2094329887;
  v277 = STACK[0x42C];
  LODWORD(STACK[0x2D8]) = LODWORD(STACK[0x42C]) + v270 - 2129478681;
  LODWORD(STACK[0x2C0]) = v270 - v241;
  LODWORD(STACK[0x3A4]) = v241 - v399 + 909535820;
  v278 = LODWORD(STACK[0x3A0]) - v277;
  LODWORD(STACK[0x348]) = LODWORD(STACK[0x43C]) + LODWORD(STACK[0x3A0]) + 789626279;
  LODWORD(STACK[0x2E0]) = v278 - 1061698148;
  LODWORD(STACK[0x2D0]) = (v259 ^ v405) + 1681157650;
  v279 = STACK[0x3E4];
  LODWORD(STACK[0x2E4]) = LODWORD(STACK[0x3E4]) + v239 - 1922188618;
  LODWORD(STACK[0x428]) = v233 + v409 - 1769562114;
  v403 = v267 - v236;
  LODWORD(STACK[0x268]) = v236 - v237;
  v280 = STACK[0x41C];
  LODWORD(STACK[0x39C]) = LODWORD(STACK[0x41C]) + v237;
  LODWORD(STACK[0x3A0]) = (v280 ^ v411) - 2010561415;
  LODWORD(STACK[0x30C]) = v245;
  LODWORD(STACK[0x354]) = v426 - v245 - 1335818980;
  v281 = v254 ^ LODWORD(STACK[0x34C]);
  LODWORD(STACK[0x41C]) = LODWORD(STACK[0x34C]) - v273 - 448931223;
  LODWORD(STACK[0x42C]) = v281 + 830029562;
  v282 = STACK[0x23C];
  v283 = STACK[0x46C];
  LODWORD(STACK[0x34C]) = LODWORD(STACK[0x23C]) - LODWORD(STACK[0x46C]) - 2055153568;
  LODWORD(STACK[0x340]) = LODWORD(STACK[0x3FC]) + v253 - 2073284521;
  v284 = STACK[0x450];
  LODWORD(STACK[0x230]) = v259 + LODWORD(STACK[0x450]);
  LODWORD(STACK[0x450]) = v428 + v284 - 2017847383;
  v285 = STACK[0x44C];
  LODWORD(STACK[0x308]) = LODWORD(STACK[0x44C]) - v244;
  v286 = v285 ^ LODWORD(STACK[0x3C8]);
  LODWORD(STACK[0x44C]) = v420 - LODWORD(STACK[0x3C8]) - 649676008;
  v287 = STACK[0x40C];
  v288 = v275 - LODWORD(STACK[0x40C]);
  v289 = STACK[0x2B0];
  LODWORD(STACK[0x278]) = v279 - LODWORD(STACK[0x2B0]);
  v290 = v289 - v263;
  LODWORD(STACK[0x3C0]) = v263 - v249;
  LODWORD(STACK[0x270]) = v249 + v288;
  LODWORD(STACK[0x3AC]) = (v401 ^ v288) - 218474414;
  v291 = STACK[0x37C];
  LODWORD(STACK[0x3C8]) = v276 + LODWORD(STACK[0x37C]) + 1362573049;
  v292 = STACK[0x304];
  LODWORD(STACK[0x430]) = (LODWORD(STACK[0x304]) ^ v283) - 1378195924;
  v293 = STACK[0x378];
  LODWORD(STACK[0x46C]) = v256 + LODWORD(STACK[0x378]) - 444317446;
  v294 = STACK[0x408];
  v295 = v287 + LODWORD(STACK[0x408]);
  LODWORD(STACK[0x23C]) = v282 + v295;
  v296 = STACK[0x2FC];
  LODWORD(STACK[0x3B8]) = (LODWORD(STACK[0x2FC]) ^ v295) + 1515558499;
  LODWORD(STACK[0x480]) = v286 - 451884077;
  LODWORD(STACK[0x40C]) = v269 ^ v272;
  v297 = v272 - v271;
  v298 = STACK[0x21C];
  LODWORD(STACK[0x3E4]) = (v271 ^ LODWORD(STACK[0x21C])) + 403788067;
  LODWORD(STACK[0x2B0]) = v430 ^ v409;
  v431 = LODWORD(STACK[0x440]) + v430 - 1613178625;
  v299 = v294 - LODWORD(STACK[0x404]);
  v300 = STACK[0x380];
  v408 = LODWORD(STACK[0x404]) ^ LODWORD(STACK[0x380]);
  v301 = STACK[0x438];
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x438]) ^ v273;
  v302 = STACK[0x240];
  LODWORD(STACK[0x3A8]) = v301 ^ LODWORD(STACK[0x240]);
  v303 = LODWORD(STACK[0x338]) ^ v302;
  LODWORD(STACK[0x240]) = LODWORD(STACK[0x338]) + v408 - 1380224063;
  v407 = v293 + v414;
  v304 = STACK[0x3D8];
  LODWORD(STACK[0x358]) = v414 - LODWORD(STACK[0x3D8]) - 167429520;
  v410 = LODWORD(STACK[0x3C4]) ^ v298;
  v305 = STACK[0x33C];
  LODWORD(STACK[0x21C]) = LODWORD(STACK[0x33C]) + LODWORD(STACK[0x3C4]);
  v395 = v305 + 2111014788;
  v306 = STACK[0x398];
  LODWORD(STACK[0x404]) = LODWORD(STACK[0x398]) + v417 - 1778333735;
  v307 = STACK[0x218];
  LODWORD(STACK[0x438]) = LODWORD(STACK[0x218]) + LODWORD(STACK[0x43C]) - 914872640;
  v412 = v411 - v424;
  v415 = v424 + LODWORD(STACK[0x3B4]);
  v308 = STACK[0x3CC];
  LODWORD(STACK[0x3B4]) = (LODWORD(STACK[0x3B4]) ^ LODWORD(STACK[0x3CC])) + 1589066921;
  v309 = v304 + LODWORD(STACK[0x3D0]);
  v310 = LODWORD(STACK[0x3D0]) - LODWORD(STACK[0x434]);
  LODWORD(STACK[0x33C]) = LODWORD(STACK[0x434]) + LODWORD(STACK[0x444]) + 864561736;
  LODWORD(STACK[0x43C]) = v290 + 1462846710;
  LODWORD(STACK[0x378]) = v310 + 1912253148;
  v311 = STACK[0x234];
  LODWORD(STACK[0x3D0]) = LODWORD(STACK[0x234]) + LODWORD(STACK[0x448]) + 827287929;
  v312 = STACK[0x498];
  LODWORD(STACK[0x3C4]) = v296 + v419 + 2098061869;
  v313 = STACK[0x390];
  LODWORD(STACK[0x388]) = v292 - LODWORD(STACK[0x390]) + 69941116;
  v314 = STACK[0x3B0];
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x3B0]) - v291 + 1648422701;
  LODWORD(STACK[0x448]) = v303 - 2016629984;
  LODWORD(STACK[0x434]) = v306 + LODWORD(STACK[0x460]) + 67586578;
  v315 = LODWORD(STACK[0x3EC]) + v314;
  v316 = LODWORD(STACK[0x3EC]) + v422;
  v317 = STACK[0x2C8];
  v318 = LODWORD(STACK[0x2C8]) - v422;
  LODWORD(STACK[0x304]) = v318;
  LODWORD(STACK[0x3D8]) = v317 + v401 + 482814806;
  v319 = STACK[0x2A0];
  LODWORD(STACK[0x2FC]) = v399 - LODWORD(STACK[0x2A0]) - 864380840;
  LODWORD(STACK[0x390]) = LODWORD(STACK[0x3FC]) + v313 + 721286151;
  v400 = v300 - LODWORD(STACK[0x3E8]);
  v397 = LODWORD(STACK[0x3E8]) - v405;
  v320 = STACK[0x250];
  LODWORD(STACK[0x338]) = (v405 ^ LODWORD(STACK[0x250])) + 1318949181;
  LODWORD(STACK[0x2C8]) = v316 ^ 0x2FFBAA87;
  LODWORD(STACK[0x398]) = v315 ^ 0x1953F0B6;
  LODWORD(STACK[0x3B0]) = (v308 - LODWORD(STACK[0x3F0])) ^ 0xE143A107;
  v321 = STACK[0x394];
  LODWORD(STACK[0x460]) = (LODWORD(STACK[0x394]) + v319) ^ 0x8881E7C8;
  v322 = STACK[0x208];
  LODWORD(STACK[0x2A0]) = v420 ^ LODWORD(STACK[0x208]);
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x488]) ^ v299 ^ 0x70254195;
  LODWORD(STACK[0x3CC]) = v297 ^ 0x36159D5A;
  v323 = (v299 - v322) ^ 0x4C7134B6;
  v324 = STACK[0x238];
  LODWORD(STACK[0x444]) = LODWORD(STACK[0x238]) + v321;
  v325 = STACK[0x20C];
  LODWORD(STACK[0x250]) = LODWORD(STACK[0x20C]) - v320;
  LODWORD(STACK[0x394]) = v325 ^ v324 ^ 0x23985CC5;
  LODWORD(STACK[0x3FC]) = v403 ^ 0x7CFB9156;
  v404 = LODWORD(STACK[0x38C]) - v426;
  v402 = LODWORD(STACK[0x384]) + LODWORD(STACK[0x38C]);
  v392 = LODWORD(STACK[0x3D4]) - LODWORD(STACK[0x384]);
  v326 = LODWORD(STACK[0x248]) + LODWORD(STACK[0x3D4]);
  v327 = LODWORD(STACK[0x248]) + LODWORD(STACK[0x228]);
  v391 = LODWORD(STACK[0x374]) + LODWORD(STACK[0x228]);
  LODWORD(STACK[0x228]) = v428 ^ LODWORD(STACK[0x374]) ^ 0xD6CAEA4B;
  v328 = (LODWORD(STACK[0x420]) - v307) ^ 0x2905B844;
  LODWORD(STACK[0x3EC]) = v326 ^ 0x2D18A94F;
  LODWORD(STACK[0x384]) = v309 ^ 0xA8DFDA2E;
  v329 = STACK[0x25C];
  LODWORD(STACK[0x374]) = v311 - LODWORD(STACK[0x25C]);
  LODWORD(STACK[0x208]) = v412 + 980790441;
  LODWORD(STACK[0x3D4]) = v323;
  v330 = LODWORD(STACK[0x2A8]) - LODWORD(STACK[0x424]);
  LODWORD(STACK[0x238]) = v330;
  v331 = LODWORD(STACK[0x200]) + LODWORD(STACK[0x3E0]);
  v332 = STACK[0x300];
  LODWORD(STACK[0x218]) = LODWORD(STACK[0x3E0]) - LODWORD(STACK[0x300]);
  v333 = STACK[0x220];
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x220]) + v395;
  v334 = STACK[0x3BC];
  v335 = LODWORD(STACK[0x3A8]) + 46598336;
  LODWORD(STACK[0x2A8]) = v327;
  v396 = v327 ^ 0x2D1314A0;
  v406 = LODWORD(STACK[0x39C]) ^ 0x8FE42503;
  LODWORD(STACK[0x38C]) = v330 + 1225134594;
  LODWORD(STACK[0x20C]) = v335;
  LODWORD(STACK[0x248]) = v318 + 1437617923;
  v394 = v397 ^ v329;
  LODWORD(STACK[0x3E8]) = v328;
  v336 = v397 - LODWORD(STACK[0x454]);
  LODWORD(STACK[0x25C]) = v336;
  v337 = LODWORD(STACK[0x40C]) - 502131345;
  LODWORD(STACK[0x234]) = v336 - 356778931;
  LODWORD(STACK[0x200]) = v337;
  v338 = STACK[0x298];
  v398 = (v332 - LODWORD(STACK[0x298])) ^ 0xB0161540;
  v339 = LODWORD(STACK[0x3F0]) + LODWORD(STACK[0x288]);
  LODWORD(STACK[0x420]) ^= LODWORD(STACK[0x288]) ^ 0x77A3DEA9;
  v340 = v331 ^ 0x8CB7EC6A;
  LODWORD(STACK[0x300]) = v391 ^ 0xD3E60A14;
  v341 = STACK[0x35C];
  v342 = (v338 - LODWORD(STACK[0x35C])) ^ 0x962D2DB0;
  v343 = v392 ^ 0x96848FB8;
  v344 = v400 ^ LODWORD(STACK[0x490]);
  v345 = STACK[0x334];
  v346 = (LODWORD(STACK[0x334]) - v434) ^ 0x9A15F5F0;
  LODWORD(STACK[0x490]) = v407 ^ 0xAF3CE3BA;
  v347 = STACK[0x2B8];
  v348 = (v408 - LODWORD(STACK[0x2B8])) ^ 0xE09C3916;
  LODWORD(STACK[0x440]) ^= 0xA32F06A2 ^ v333;
  v349 = LODWORD(STACK[0x230]) ^ 0x9AC2820F;
  v350 = STACK[0x268];
  v351 = v334 ^ v400 ^ 0xB15509E3;
  v352 = LODWORD(STACK[0x280]) ^ LODWORD(STACK[0x290]) ^ 0x69CEB8C0;
  v353 = LODWORD(STACK[0x23C]) ^ 0xFCC73298;
  v354 = LODWORD(STACK[0x260]) ^ 0xC77E7F4C ^ v341;
  v355 = v345 ^ LODWORD(STACK[0x424]);
  v339 ^= 0x29D02A0u;
  v356 = LODWORD(STACK[0x270]) ^ 0xC6233007;
  v357 = LODWORD(STACK[0x21C]) ^ 0xF0C3A706;
  v393 = LODWORD(STACK[0x2C0]) ^ 0x20CA8C5C;
  v358 = LODWORD(STACK[0x310]) ^ v347 ^ 0x1A1265F2;
  LODWORD(STACK[0x424]) = LODWORD(STACK[0x278]) ^ 0xE89A82ED;
  v359 = LODWORD(STACK[0x3C0]) - v350 + LODWORD(STACK[0x3E4]);
  LODWORD(STACK[0x298]) = v358;
  v360 = (v359 - v358 + 1565767859) ^ LODWORD(STACK[0x42C]);
  v361 = v431 - (LODWORD(STACK[0x3A8]) + LODWORD(STACK[0x374])) - LODWORD(STACK[0x2C8]);
  LODWORD(STACK[0x288]) = v357;
  v362 = LODWORD(STACK[0x3A0])
       - (LODWORD(STACK[0x3C8])
        + LODWORD(STACK[0x2D8]))
       - v394
       - 1961130272
       + ((v361 - v357 + v360 - 1339418410) ^ v396);
  LODWORD(STACK[0x270]) = v344 - 944776469;
  LODWORD(STACK[0x35C]) = v343;
  v363 = LODWORD(STACK[0x33C]) - (v410 + v344 + v356) + (v362 ^ v343);
  LODWORD(STACK[0x310]) = v346;
  v364 = STACK[0x43C];
  LODWORD(STACK[0x268]) = v348;
  v365 = v364 - v351 - v348 + LODWORD(STACK[0x2D0]);
  LODWORD(STACK[0x2B8]) = v354;
  v366 = v365 - v354 + ((v363 - v342 - 294886822) ^ v346);
  v367 = LODWORD(STACK[0x3D0]) + LODWORD(STACK[0x350]) + LODWORD(STACK[0x420]);
  v368 = LODWORD(STACK[0x444]) ^ 0xAC40DFD;
  LODWORD(STACK[0x23C]) = v368;
  v369 = STACK[0x3B4];
  v370 = STACK[0x3EC];
  v371 = v404 ^ 0x94A4E9FC ^ LODWORD(STACK[0x460]) ^ (v368
                                                    + LODWORD(STACK[0x3B4])
                                                    - v412
                                                    - LODWORD(STACK[0x3B0])
                                                    - LODWORD(STACK[0x3EC])
                                                    - LODWORD(STACK[0x46C])
                                                    + v367
                                                    - LODWORD(STACK[0x40C])
                                                    - v398
                                                    + LODWORD(STACK[0x400])
                                                    - 478659096
                                                    + (v366 ^ LODWORD(STACK[0x3C4])));
  v372 = STACK[0x2B0];
  LODWORD(STACK[0x40C]) = LODWORD(STACK[0x2B0]) - 546378700;
  v373 = LODWORD(STACK[0x3CC])
       - (LODWORD(STACK[0x408])
        + v372)
       - LODWORD(STACK[0x3BC])
       + LODWORD(STACK[0x3B8])
       + LODWORD(STACK[0x314]);
  LODWORD(STACK[0x260]) = v349;
  v374 = v373 - v349 - 1835943609 + v371;
  LODWORD(STACK[0x420]) = v355;
  v375 = v406 + (v355 ^ 0x6DB83F0) + LODWORD(STACK[0x25C]);
  v376 = (v374 ^ LODWORD(STACK[0x2E8])) - LODWORD(STACK[0x438]);
  LODWORD(STACK[0x25C]) = v340;
  v377 = (LODWORD(STACK[0x448]) + LODWORD(STACK[0x394]) + (((v376 ^ v340) - v375 + 356778931) ^ LODWORD(STACK[0x430]))) ^ LODWORD(STACK[0x434]);
  LODWORD(STACK[0x278]) = v415 ^ 0x9469C282;
  v378 = LODWORD(STACK[0x2FC]) ^ LODWORD(STACK[0x344]) ^ ((v415 ^ 0x9469C282)
                                                        + LODWORD(STACK[0x340])
                                                        - LODWORD(STACK[0x380])
                                                        + LODWORD(STACK[0x398])
                                                        + v377);
  LODWORD(STACK[0x280]) = v339;
  LODWORD(STACK[0x3A8]) = v353;
  LODWORD(STACK[0x334]) = v402 ^ 0x27239CBF;
  v379 = STACK[0x368];
  v380 = (((v378 - (v353 + v339)) ^ v402 ^ 0x27239CBF) - LODWORD(STACK[0x388])) ^ LODWORD(STACK[0x240]);
  LODWORD(STACK[0x2B0]) = v352;
  v381 = LODWORD(STACK[0x3E0]) ^ LODWORD(STACK[0x41C]) ^ (LODWORD(STACK[0x384])
                                                        + LODWORD(STACK[0x300])
                                                        + ((LODWORD(STACK[0x228])
                                                          - v352
                                                          + LODWORD(STACK[0x440])
                                                          - (v417 ^ v434)
                                                          + ((v380 + LODWORD(STACK[0x3AC])) ^ LODWORD(STACK[0x34C]))
                                                          + 2 * ((v380 + LODWORD(STACK[0x3AC])) & STACK[0x34C])
                                                          + 697733604) ^ LODWORD(STACK[0x354])));
  v382 = STACK[0x308];
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x308]) - 1184500518;
  v383 = STACK[0x37C];
  v384 = (LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x428]) ^ (LODWORD(STACK[0x2EC])
                                                         - LODWORD(STACK[0x390])
                                                         + LODWORD(STACK[0x3A4])
                                                         + (LODWORD(STACK[0x348]) ^ LODWORD(STACK[0x37C]) ^ (LODWORD(STACK[0x218]) - v382 - 1627880528 + v381))))
       - LODWORD(STACK[0x358]);
  v385 = LODWORD(STACK[0x2E0])
       - v393
       - LODWORD(STACK[0x3D8])
       + (((v384 ^ LODWORD(STACK[0x378])) - LODWORD(STACK[0x250]) + 2 * (v384 & STACK[0x378]) + 1884708895) ^ LODWORD(STACK[0x338]));
  LODWORD(STACK[0x250]) = v351;
  v386 = ((2 * (v370 ^ (LODWORD(STACK[0x3FC]) - LODWORD(STACK[0x238]) + 1353147078))) ^ 0xE0709C96) + 1778193167;
  v387 = ((*(_QWORD *)(STACK[0x318]
                     + 8
                     * (((*(_QWORD *)(STACK[0x318]
                                    + 8
                                    * (((*(_QWORD *)(STACK[0x318]
                                                   + 8
                                                   * (((*(_QWORD *)(STACK[0x318]
                                                                  + 8 * (0x60EC299C % STACK[0x458])) ^ 0xE1E1E1E1E1E1E1E1)
                                                     + 1416320151)
                                                    % STACK[0x458])) ^ 0xE1E1E1E1E1E1E1E1)
                                      + 121800965)
                                     % STACK[0x458])) ^ 0xE1E1E1E1E1E1E1E1)
                       + 88578734)
                      % STACK[0x458])) ^ 0xE1E1E1E1E1E1E1E1)
        + 1310495703)
       % STACK[0x458];
  v388 = v385 ^ LODWORD(STACK[0x3FC]);
  LODWORD(STACK[0x440]) = ((((v412 + 141429855 + LODWORD(STACK[0x480])) ^ 0xEF1EFAB6) - v383) >> 1) + 417662366;
  LODWORD(STACK[0x3C0]) = v386;
  LODWORD(STACK[0x44C]) = ((((v351 ^ ((v369 ^ 0x818CFC9E) - 226443869)) - 164540623) ^ v364) >> 1) + 1937190450;
  if (v387 <= 1)
    v389 = 1;
  else
    v389 = v387;
  STACK[0x490] = 0x8F95AD1F6DC913B3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v312 + 8 * ((11031 * (v389 == 1)) ^ v379)) - 8))(v388);
}

void sub_1003AD5C8()
{
  JUMPOUT(0x1003AD484);
}

uint64_t sub_1003AD5D4@<X0>(int a1@<W0>, uint64_t a2@<X2>, unsigned int a3@<W3>, uint64_t a4@<X5>, int a5@<W7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v54 = (a6 + v53);
  LODWORD(STACK[0x3F0]) = (v47
                         + a5
                         + LODWORD(STACK[0x3E8])
                         - 1437617923
                         + (LODWORD(STACK[0x38C]) ^ LODWORD(STACK[0x424]) ^ LODWORD(STACK[0x2E4]) ^ LODWORD(STACK[0x480]) ^ (a1 - LODWORD(STACK[0x450])))) ^ LODWORD(STACK[0x3D4]);
  v55 = ((unint64_t)(v52 + v49) >> 32)
      + ((v52 + v49 + ((unint64_t)(v52 + v49) >> 32) - ((v52 + v49 + ((unint64_t)(v52 + v49) >> 32)) >> 16)) >> 8)
      - ((v52 + v49 + ((unint64_t)(v52 + v49) >> 32)) >> 16)
      + v52
      + v50;
  v56 = 0xEF33C70FFBAB0DBFLL * ((((_DWORD)a2 - 1071) | 0x102u) ^ 0xE1E1E1E1E1E1F2A7 ^ *(_QWORD *)(v48 + 8 * a3));
  v57 = (v56 ^ v55) + a3 + (((v56 ^ v55) + a3) >> 32);
  v58 = v57 - (v57 >> 16) + ((v57 - (v57 >> 16)) >> 8) - 0x706A52E09236EC4CLL;
  v59 = (v58 ^ v56) + a3 + (((v58 ^ v56) + a3) >> 32);
  return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (int)((209 * (a3 + 1 >= STACK[0x458])) ^ a2)))(v56, (_DWORD)v59 - (v59 >> 16) + ((v59 - (v59 >> 16)) >> 8) + a4, a2, a3 + 1, v54, a4, 0xE1E1E1E1E1E1F2A7, 209, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1003AD758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;

  LODWORD(STACK[0x290]) = LODWORD(STACK[0x420]) ^ LODWORD(STACK[0x354]) ^ LODWORD(STACK[0x2D8]) ^ LODWORD(STACK[0x444]) ^ LODWORD(STACK[0x41C]) ^ LODWORD(STACK[0x2E8]) ^ LODWORD(STACK[0x424]) ^ LODWORD(STACK[0x2E4]) ^ LODWORD(STACK[0x2B0]) ^ LODWORD(STACK[0x34C]) ^ LODWORD(STACK[0x3A8]) ^ LODWORD(STACK[0x278]) ^ a60 ^ a62 ^ LODWORD(STACK[0x280]) ^ v66 ^ LODWORD(STACK[0x344]) ^ LODWORD(STACK[0x3A0]) ^ a59 ^ LODWORD(STACK[0x2E0]) ^ LODWORD(STACK[0x348]) ^ LODWORD(STACK[0x46C]) ^ LODWORD(STACK[0x40C]) ^ LODWORD(STACK[0x270]) ^ LODWORD(STACK[0x350]) ^ LODWORD(STACK[0x298]) ^ LODWORD(STACK[0x334]) ^ LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x400]) ^ LODWORD(STACK[0x2D0]) ^ LODWORD(STACK[0x2EC]) ^ LODWORD(STACK[0x314]) ^ v64 ^ LODWORD(STACK[0x2B8]) ^ LODWORD(STACK[0x408]) ^ a5 ^ 0xC1F8E0D;
  STACK[0x2C0] = v63 - 0x6CCFC4499E327A49;
  if (((*(_BYTE *)(v63
                  + ((*(_BYTE *)(v63
                               + (*(_BYTE *)(v63
                                           + ((*(unsigned __int8 *)(v63 - 0x6CCFC4499E327A49) + 12) & 0xF)
                                           - 0x6CCFC4499E327A51) & 0xF)
                               - 0x6CCFC4499E327A51)
                    + 10) & 0xF)
                  - 0x6CCFC4499E327A51)
       + 2) & 0xE) != 0)
    v67 = (*(_BYTE *)(v63
                    + ((*(_BYTE *)(v63
                                 + (*(_BYTE *)(v63
                                             + ((*(unsigned __int8 *)(v63 - 0x6CCFC4499E327A49) + 12) & 0xF)
                                             - 0x6CCFC4499E327A51) & 0xF)
                                 - 0x6CCFC4499E327A51)
                      + 10) & 0xF)
                    - 0x6CCFC4499E327A51)
         + 2) & 0xF;
  else
    v67 = 1;
  return (*(uint64_t (**)(void))(v65 + 8 * ((13661 * (v67 == 1)) ^ v62)))();
}

uint64_t sub_1003ADB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  int v50;

  LODWORD(STACK[0x420]) = v50;
  STACK[0x488] = 191455362;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x498] + 8 * ((427 * (v49 != 15)) ^ ((int)a1 - 318800338))) - 8))(a1, (v49 - 191455361), 191455361, (v49 - 600976374), v49, a6, 600976374, 600976375, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

void sub_1003ADD44()
{
  JUMPOUT(0x1003ADC1CLL);
}

uint64_t sub_1003ADD5C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W6>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  BOOL v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  unsigned __int8 v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;

  v12 = (a6 + a4) >> 16;
  v13 = (a6 + a4 - v12) >> 8;
  v14 = a6 + a3 + v13;
  v15 = (v14 - v12) >> 11;
  v16 = a6 + v13 + v15;
  v17 = (v14 + v15 - v12) >> 1;
  v18 = v6 + v16 - v17 - v12 - a5;
  v19 = v6
      + a6
      + ((v16 + a1 + ((v16 + a1 - v17 - v12) >> 14) - v17 - v12) >> 3)
      + ((v16 + a1 - v17 - v12) >> 14)
      + v15
      + v13
      - v17
      - v12
      - a2;
  v20 = v19 ^ v10;
  v21 = (v19 ^ 0x87746AF9) + ((v19 ^ 0x87746AF9) >> 12) - (((v19 ^ 0x87746AF9) + ((v19 ^ 0x87746AF9) >> 12)) >> 7);
  v22 = v21 - 1971810398 - ((v21 - 1971810398) >> 11) + ((v21 - 1971810398 - ((v21 - 1971810398) >> 11)) >> 1);
  v23 = v22 + 847310700 + ((v22 + 847310700) >> 12) + ((v22 + 847310700 + ((v22 + 847310700) >> 12)) >> 2);
  v24 = v18 ^ v8 ^ v22;
  v25 = v23 - 1744808673 - ((v23 - 1744808673) >> 13) - ((v23 - 1744808673 - ((v23 - 1744808673) >> 13)) >> 1);
  v26 = v20 ^ v23;
  v27 = v25 + 1859480226 + ((v25 + 1859480226) >> 15) + ((v25 + 1859480226 + ((v25 + 1859480226) >> 15)) >> 4);
  v28 = v24 ^ v27;
  v29 = (v27 ^ 0xE2C829F6) + ((v27 ^ 0xE2C829F6) >> 15) + (((v27 ^ 0xE2C829F6) + ((v27 ^ 0xE2C829F6) >> 15)) >> 6);
  v30 = v26 ^ v29;
  v31 = v21 ^ v7 ^ v25 ^ ((v29 ^ 0xC050C692)
                        - ((v29 ^ 0xC050C692) >> 10)
                        - (((v29 ^ 0xC050C692) - ((v29 ^ 0xC050C692) >> 10)) >> 7));
  LODWORD(STACK[0x240]) = v28 & 0x7F ^ 0x32;
  v32 = v31 & 7 ^ 2;
  v33 = ((v31 ^ 0xFD) + 1) & 7;
  LODWORD(STACK[0x40C]) = v32;
  v34 = v32 == 0;
  if (v32)
    v35 = 255;
  else
    v35 = 0;
  LODWORD(STACK[0x408]) = v33;
  v36 = v35 << v33;
  v37 = 16843009 * v36;
  LODWORD(STACK[0x450]) = v31;
  LODWORD(STACK[0x230]) = v31 & 0xFFFFFFF8;
  v38 = -754974720 * v36;
  if (v34)
    v39 = 0;
  else
    v39 = ~(_BYTE)v36;
  v40 = v37 ^ v28 & v39;
  LODWORD(STACK[0x30C]) = v40;
  v41 = ((v40 ^ 0x4F3C233E) + (v40 | 0xB0C3DCC1) + 1) & ~v40;
  LODWORD(STACK[0x444]) = v28;
  v42 = 16843009
      * (v28 ^ 0x22 ^ ((unsigned __int16)(v28 ^ 0x7022) >> 8) ^ ((v28 ^ 0x328B7022) >> 16) ^ HIBYTE(v28) ^ 0x1F);
  LODWORD(STACK[0x454]) = v30;
  v43 = 16843009
      * (v30 ^ 0x24 ^ ((unsigned __int16)(v30 ^ 0x4F24) >> 8) ^ ((v30 ^ 0x62C94F24) >> 16) ^ HIBYTE(v30) ^ 0xDA);
  v44 = STACK[0x458];
  v45 = (_QWORD *)STACK[0x318];
  v46 = *(_QWORD *)(STACK[0x318]
                  + 8
                  * (((*(_QWORD *)(STACK[0x318] + 8 * (0x25F9C820 % STACK[0x458])) ^ 0xE1E1E1E1E1E1E1E1)
                    + 1886650361)
                   % STACK[0x458]));
  LODWORD(STACK[0x238]) = v42;
  v47 = (v43 ^ 0x95959595 ^ -(v43 ^ 0x95959595) ^ (v42 + (v42 ^ 0x6A6A6A6A ^ v43) + 1)) + v42;
  v48 = ((v45[((v45[((v46 ^ 0xE1E1E1E1E1E1E1E1) + 4265488825u) % v44] ^ 0xE1E1E1E1E1E1E1E1) + 3301599159u) % v44] ^ 0xE1E1E1E1E1E1E1E1)
       + 1792932691)
      % v44;
  v49 = LODWORD(STACK[0x440]) ^ 0x9E7E766A;
  LODWORD(STACK[0x3BC]) = v47;
  LODWORD(STACK[0x304]) = v43 ^ 0xB8B8B8B8 ^ v47;
  if (v48 <= 1)
    v50 = 1;
  else
    v50 = v48;
  v51 = 0xEF33C70FFBAB0DBFLL * (*v45 ^ ((v9 - 279) - 0x1E1E1E1E1E1E32A8));
  v52 = (v51 ^ 0xCD5B2B96907E558CLL) >> 32;
  v53 = (v51 ^ 0xCD5B2B96907E558CLL) + v52;
  v54 = v53 >> 16;
  v55 = (v53 - (v53 >> 16)) >> 8;
  v56 = ((-72675905 * (*(_DWORD *)v45 ^ (v9 - 505295807))) ^ 0x907E558C) + v52 + v55 - v54;
  v57 = (STACK[0x490] + (v51 ^ 0xCD5B2B96907E558CLL) + v52 + v55 - v54 + 1) ^ v51;
  v58 = v57 + ((v57 + HIDWORD(v57) - ((v57 + HIDWORD(v57)) >> 16)) >> 8) + HIDWORD(v57) - ((v57 + HIDWORD(v57)) >> 16);
  v59 = (STACK[0x490] + 1 + v58) ^ v51;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v11 + 8 * ((2897 * (v50 == 1)) ^ v9)) - 12))(v38, v41, v56 ^ v49 ^ v58 ^ ((_DWORD)v59+ HIDWORD(v59)+ ((v59 + HIDWORD(v59) - ((v59 + HIDWORD(v59)) >> 16)) >> 8)- ((v59 + HIDWORD(v59)) >> 16)));
}

void sub_1003AE1EC()
{
  JUMPOUT(0x1003AE0BCLL);
}

uint64_t sub_1003AE1F8@<X0>(int a1@<W3>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  LODWORD(STACK[0x228]) = v3 ^ 0x5E245100;
  LODWORD(STACK[0x220]) = LODWORD(STACK[0x450]) ^ 0x5E245132;
  v8 = ((unint64_t)(v5 + a2) >> 32)
     + ((v5 + a2 + ((unint64_t)(v5 + a2) >> 32) - ((v5 + a2 + ((unint64_t)(v5 + a2) >> 32)) >> 16)) >> 8)
     - ((v5 + a2 + ((unint64_t)(v5 + a2) >> 32)) >> 16)
     + v5
     + a3;
  v9 = 0xEF33C70FFBAB0DBFLL * (*(_QWORD *)(v7 + 8 * v4) ^ 0xE1E1E1E1E1E1E1E1);
  v10 = (((v9 ^ v8) + v4) >> ((a1 + 124) ^ 0x25u)) + (v9 ^ v8) + v4;
  v11 = v10 - (v10 >> 16) + ((v10 - (v10 >> 16)) >> 8) - 0x706A52E09236EC4CLL;
  v12 = (v11 ^ v9) + v4 + (((v11 ^ v9) + v4) >> 32);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * ((2582 * (v4 + 1 >= STACK[0x458])) ^ a1))
                                         - 12))(((_DWORD)v12
                                                 - (v12 >> 16)
                                                 + ((v12 - (v12 >> 16)) >> 8)
                                                 + 1841894324) & 0xFFDFFFFF);
}

uint64_t sub_1003AE358(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;

  LODWORD(STACK[0x364]) = LODWORD(STACK[0x444]) ^ v3;
  v8 = v4
     - 0x239680D7B6E170A9
     - ((unint64_t)(v4 - 0x239680D7B6E170A9) >> 30)
     + ((v4 - 0x239680D7B6E170A9 - ((unint64_t)(v4 - 0x239680D7B6E170A9) >> 30)) >> 14);
  v9 = v8 + (v8 >> 4);
  v10 = v9
      + 0x1BC7AA28492BEF35
      - ((v9 + 0x1BC7AA28492BEF35) >> 31)
      + ((v9 + 0x1BC7AA28492BEF35 - ((v9 + 0x1BC7AA28492BEF35) >> 31)) >> 15);
  v11 = ((v10 + (v10 >> 7)) ^ 0x241B407FE6FE3922)
      + (((v10 + (v10 >> 7)) ^ 0x241B407FE6FE3922) >> 25)
      + ((((v10 + (v10 >> 7)) ^ 0x241B407FE6FE3922) + (((v10 + (v10 >> 7)) ^ 0x241B407FE6FE3922) >> 25)) >> 12);
  v12 = v11
      - (v11 >> 3)
      + 0x74110B698BA1A0ECLL
      - ((v11 - (v11 >> 3) + 0x74110B698BA1A0ECLL) >> 30)
      + ((v11 - (v11 >> 3) + 0x74110B698BA1A0ECLL - ((v11 - (v11 >> 3) + 0x74110B698BA1A0ECLL) >> 30)) >> 14);
  v13 = v12 - (v12 >> 2);
  v14 = v13
      + 0x3C388648EB9E1FBALL
      + ((v13 + 0x3C388648EB9E1FBALL) >> 31)
      - ((v13 + 0x3C388648EB9E1FBALL + ((v13 + 0x3C388648EB9E1FBALL) >> 31)) >> 14);
  LODWORD(v9) = v13 ^ v9;
  v15 = v14
      - (v14 >> 1)
      - 0x255C4F3A77E37467
      + ((v14 - (v14 >> 1) - 0x255C4F3A77E37467) >> 24)
      + ((v14 - (v14 >> 1) - 0x255C4F3A77E37467 + ((v14 - (v14 >> 1) - 0x255C4F3A77E37467) >> 24)) >> 8);
  v16 = v15
      - (v15 >> 3)
      - 0x19689A5645D43E90
      - ((v15 - (v15 >> 3) - 0x19689A5645D43E90) >> 31)
      + ((v15 - (v15 >> 3) - 0x19689A5645D43E90 - ((v15 - (v15 >> 3) - 0x19689A5645D43E90) >> 31)) >> 12);
  v17 = v9 ^ a3 ^ (v16 + (v16 >> 5));
  if (((*(_BYTE *)(v5
                  + ((*(_BYTE *)(v5
                               + ((*(_BYTE *)(v5 + ((*(_BYTE *)STACK[0x2C0] + 1) & 0xF) - 0x6CCFC4499E327A51) + 7) & 0xF)
                               - 0x6CCFC4499E327A51)
                    + 5) & 0xF)
                  - 0x6CCFC4499E327A51)
       + 7) & 0xE) != 0)
    v18 = (*(_BYTE *)(v5
                    + ((*(_BYTE *)(v5
                                 + ((*(_BYTE *)(v5 + ((*(_BYTE *)STACK[0x2C0] + 1) & 0xF) - 0x6CCFC4499E327A51) + 7) & 0xF)
                                 - 0x6CCFC4499E327A51)
                      + 5) & 0xF)
                    - 0x6CCFC4499E327A51)
         + 7) & 0xF;
  else
    v18 = 1;
  v19 = -574915727 * *v7;
  v20 = (v19 ^ 0xC4BFC504) + (((v19 ^ 0xC4BFC504) - ((v19 ^ 0xC4BFC504) >> 16)) >> (a2 + 3));
  v21 = (v20 - ((v19 ^ 0xC4BFC504) >> 16)) ^ v17;
  v22 = (-2104157308 - ((v19 ^ 0xC4BFC504) >> 16) + v20) ^ v19;
  v23 = (v22 - 2104157308 - HIWORD(v22) + ((v22 - HIWORD(v22)) >> 8)) ^ v19;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * ((3295 * (v18 == 1)) ^ a2)) - 8))(v21 ^ (v22 - HIWORD(v22) + ((v22 - HIWORD(v22)) >> 8)) ^ (v23 - HIWORD(v23) + ((v23 - HIWORD(v23)) >> 8)));
}

uint64_t sub_1003AE634@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;

  LODWORD(STACK[0x308]) = a3 ^ ~v7;
  v10 = -574915727 * *(unsigned __int8 *)(v9 + a4);
  v11 = v10 ^ (v8 + v4 + a2 + ((a2 + v5 - ((a2 + v5) >> 16)) >> 8) - ((a2 + v5) >> 16) - 1);
  v12 = (v11 + a4) >> 16;
  v13 = (unint64_t)(v11 + (_DWORD)a4 - v12) >> 8;
  v14 = (a4 + v11 - v12 + v13) ^ a1;
  v15 = a4 - 2104157308;
  v16 = (a4 - 2104157308 + v11 - v12 + v13) ^ v10;
  LODWORD(v13) = (v16 + a4) >> 16;
  v17 = v16 + ((a4 - v13 + v16) >> (v10 & 8) >> (v10 & 8 ^ 8));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x498]
                                                     + 8 * ((8 * (a4 == 15)) | (16 * (a4 == 15)) | (v6 - 318801805)))
                                         - 8))(v14 ^ ((_DWORD)a4 - (_DWORD)v13 + v17) ^ ((_DWORD)a4
                                                                                         + ((v15 - (_DWORD)v13 + v17) ^ v10)
                                                                                         - ((((v15 - (_DWORD)v13 + v17) ^ v10)
                                                                                           + a4) >> 16)
                                                                                         + ((((v15 - (_DWORD)v13 + v17) ^ v10)
                                                                                           + (_DWORD)a4
                                                                                           - ((((v15 - (_DWORD)v13 + v17) ^ v10)
                                                                                             + a4) >> 16)) >> 8)));
}

void sub_1003AE7EC()
{
  JUMPOUT(0x1003AE6A4);
}

uint64_t sub_1003AE810@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W5>, int a5@<W7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  _QWORD *v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  BOOL v83;
  unint64_t v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  char *v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  uint64_t v107;
  int v108;
  unint64_t v109;
  int v110;
  uint64_t v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  uint64_t v119;
  unint64_t v120;
  unsigned int v121;
  unsigned int v122;
  char v123;
  char *v124;
  int v125;
  uint64_t v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  int v138;
  unsigned int v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  int v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v64 = (v58 + v61) >> 16;
  v65 = (v58 + v61 - v64) >> 8;
  v66 = v58 + v60 + v65;
  v67 = (v66 - v64) >> 11;
  v68 = v58 + v65 + v67;
  v69 = (v66 + v67 - v64) >> 1;
  v70 = a6 + v68 - v69 - v64 - a5;
  v71 = a6
      + v58
      + ((v68 + a4 + ((v68 + a4 - v69 - v64) >> 14) - v69 - v64) >> 3)
      + ((v68 + a4 - v69 - v64) >> 14)
      + v67
      + v65
      - v69
      - v64
      - v59;
  v72 = v71 ^ a3;
  v73 = (v71 ^ 0x87746AF9) + ((v71 ^ 0x87746AF9) >> 12) - (((v71 ^ 0x87746AF9) + ((v71 ^ 0x87746AF9) >> 12)) >> 7);
  v74 = v73 - 1971810398 - ((v73 - 1971810398) >> 11) + ((v73 - 1971810398 - ((v73 - 1971810398) >> 11)) >> 1);
  v75 = v74 + 847310700 + ((v74 + 847310700) >> 12) + ((v74 + 847310700 + ((v74 + 847310700) >> 12)) >> 2);
  v76 = v75 - 1744808673 - ((v75 - 1744808673) >> 13) - ((v75 - 1744808673 - ((v75 - 1744808673) >> 13)) >> 1);
  v77 = v72 ^ v75;
  v78 = v76 + 1859480226 + ((v76 + 1859480226) >> 15) + ((v76 + 1859480226 + ((v76 + 1859480226) >> 15)) >> 4);
  v79 = v70 ^ a1 ^ v74 ^ v78;
  v80 = (v78 ^ 0xE2C829F6) + ((v78 ^ 0xE2C829F6) >> 15) + (((v78 ^ 0xE2C829F6) + ((v78 ^ 0xE2C829F6) >> 15)) >> 6);
  v81 = v73 ^ v57 ^ v76 ^ ((v80 ^ 0xC050C692)
                         - ((v80 ^ 0xC050C692) >> 10)
                         - (((v80 ^ 0xC050C692) - ((v80 ^ 0xC050C692) >> 10)) >> 7));
  v82 = v79 & 0xFFFFFF80 ^ 0x5BDDF400;
  v84 = v81 & 7;
  v83 = (v81 & 7) == 0;
  v85 = (v77 ^ v80) ^ 0x24 ^ ((v77 ^ v80 ^ 0x62C94F24) >> 16) ^ ((unsigned __int16)(v77 ^ v80 ^ 0x4F24) >> 8) ^ ((v77 ^ v80) >> 24) ^ 0xD4;
  v86 = 16843009 * LODWORD(STACK[0x240]);
  v87 = STACK[0x40C];
  v88 = STACK[0x40C];
  STACK[0x3F0] = v84;
  v89 = (1927411183 * v87) ^ LODWORD(STACK[0x310]) ^ (1927411183 * v84);
  v90 = STACK[0x408];
  v91 = -v81 & 7;
  LODWORD(STACK[0x404]) = v91;
  v92 = v90;
  LODWORD(STACK[0x21C]) = v89 + 1567127349 * (v91 - v90);
  v93 = (char *)*(&off_1004ECA20 + (int)a2 - 1760) - 12;
  v94 = *(_DWORD *)&v93[4 * (v86 % 0x101)];
  v95 = v79 & 0x7F ^ 0x78;
  v96 = (v86 % 0x101) ^ 0xF270BC2F ^ (v94 - ((2 * v94) & 0xF2567D46) - 114606429);
  if ((v81 & 7) != 0)
    v97 = 255;
  else
    v97 = 0;
  v98 = v97 << v91;
  v99 = LODWORD(STACK[0x374]) + 1292820074;
  LODWORD(STACK[0x368]) = 16843009 * v98;
  v100 = 16843009
       * (v79 ^ 0x22 ^ ((unsigned __int16)(v79 ^ 0x7022) >> 8) ^ ((v79 ^ 0x328B7022u) >> 16) ^ ((v79 ^ 0x328B7022u) >> 24) ^ 0xD0);
  v101 = 16843009 * v85;
  v102 = 16843009 * v95;
  LODWORD(STACK[0x3FC]) = v86;
  LODWORD(STACK[0x374]) = v99 + v86 - 16843009 * v95 + v96;
  v103 = (v88 | LODWORD(STACK[0x230])) ^ 0x5E245130;
  v104 = LODWORD(STACK[0x220]) ^ LODWORD(STACK[0x3AC]) ^ v103 ^ (4 * (v103 ^ LODWORD(STACK[0x220])));
  v105 = v81 ^ 0x5BDDF478;
  v106 = (v105 - 257) % 0x101;
  v107 = (uint64_t)*(&off_1004ECA20 + (int)(a2 ^ 0x740));
  v103 %= 0x101u;
  v108 = STACK[0x228];
  LODWORD(v149) = v86 | LODWORD(STACK[0x228]);
  v109 = LODWORD(STACK[0x220]) % 0x101;
  LODWORD(STACK[0x220]) = LODWORD(STACK[0x23C])
                        + ((v105 % 0x101 + ((v105 % 0x101) ^ 0x94E9E67B) + 1) ^ 0xFE87428C ^ *(_DWORD *)(v107 + 4 * (v105 % 0x101)));
  v110 = (v86 ^ v108) & STACK[0x3B0] ^ LODWORD(STACK[0x364]) ^ (v86 ^ v108 | LODWORD(STACK[0x3B0])) ^ (32 * (v86 ^ v108 ^ LODWORD(STACK[0x364])));
  v111 = (uint64_t)*(&off_1004ECA20 + (int)a2 - 822);
  v112 = 454636937 * *(_DWORD *)(v111 + 4 * v92);
  v113 = v79 ^ 0x5BDDF478;
  v114 = *(_DWORD *)(v111 + 4 * ((v79 ^ 0x5BDDF478u) % 0x101));
  STACK[0x228] = v109;
  LODWORD(v111) = (454636937 * *(_DWORD *)(v111 + 4 * v109)) ^ 0x78E255E0 ^ ((454636937 * *(_DWORD *)(v111 + 4 * v109)) >> 4) & 0x842B841;
  v115 = v95 | v82;
  LODWORD(STACK[0x230]) = 40889585 * ((v79 ^ 0x5BDDF478) - v82 - v95);
  v116 = v110 + v111;
  v117 = (v103 + (v103 ^ 0x94E9E67B) + 1) ^ 0x178BD73;
  LODWORD(STACK[0x3B0]) = v100;
  LODWORD(STACK[0x23C]) = v101;
  v118 = v100 ^ v101 ^ 0x66666666;
  v119 = 4 * v103;
  v120 = STACK[0x458];
  v121 = v104 + (v117 ^ *(_DWORD *)(v107 + v119));
  v122 = ((v63[((v63[((v63[((v63[0xA6E5F757 % STACK[0x458]] ^ 0xE1E1E1E1E1E1E1E1) + 741561528) % v120] ^ 0xE1E1E1E1E1E1E1E1)
                    + 2584167089u)
                   % v120] ^ 0xE1E1E1E1E1E1E1E1)
              + 444835498)
             % v120] ^ 0xE1E1E1E1E1E1E1E1)
        + 1154293738)
       % v120;
  if (v83)
    v123 = 0;
  else
    v123 = ~(_BYTE)v98;
  if (v105 <= 0x100)
    v106 = v105;
  LODWORD(STACK[0x3AC]) = (v118 % 0x101 + ((v118 % 0x101) ^ 0x94E9E67B) + 1) ^ ((LODWORD(STACK[0x3BC]) % 0x101) | 0xF5DCC000) ^ LODWORD(STACK[0x21C]) ^ *(_DWORD *)&v93[4 * (LODWORD(STACK[0x3BC]) % 0x101)] ^ *(_DWORD *)(v107 + 4 * (v118 % 0x101));
  LODWORD(STACK[0x218]) = v79;
  LODWORD(STACK[0x3B4]) = (v79 & v123);
  LODWORD(STACK[0x310]) = v102;
  v124 = (char *)*(&off_1004ECA20 + (int)(a2 ^ 0x457)) - 8;
  v125 = *(_DWORD *)&v124[4 * (v102 % 0x101)];
  v126 = *(unsigned int *)&v124[4 * v106];
  v127 = *(_DWORD *)&v124[v119];
  HIDWORD(v150) = LODWORD(STACK[0x40C]) ^ LODWORD(STACK[0x35C]);
  HIDWORD(a57) = *(_DWORD *)&v124[4 * LODWORD(STACK[0x404])];
  HIDWORD(a51) = LODWORD(STACK[0x374]) + 1;
  LODWORD(STACK[0x35C]) = *(_DWORD *)&v93[4 * v109];
  LODWORD(v152) = *(_DWORD *)&v93[4 * (v115 % 0x101)];
  ++LODWORD(STACK[0x220]);
  v128 = v125 ^ 0x5BA7F945;
  HIDWORD(v151) = v127;
  LODWORD(v150) = v121 + 1;
  v129 = LODWORD(STACK[0x44C]) ^ 0xB0049819;
  v130 = LODWORD(STACK[0x440]) ^ 0x6CB1D7D9;
  if (v122 <= 1)
    v131 = 1;
  else
    v131 = v122;
  LODWORD(STACK[0x21C]) = -1383161965 * LODWORD(STACK[0x408]);
  LODWORD(STACK[0x374]) = v118;
  LODWORD(a47) = 16 * v128;
  HIDWORD(a49) = (v112 >> 4) & 0x842B841;
  LODWORD(STACK[0x3B8]) = v115;
  LODWORD(a45) = v115 ^ v113;
  LODWORD(a46) = (454636937 * v114) >> 4;
  HIDWORD(v149) = 16 * (v126 ^ 0x5BA7F945);
  LODWORD(v153) = v127 ^ 0x5BA7F945;
  LODWORD(a48) = 16 * (v127 ^ 0x5BA7F945);
  v132 = (a2 - 1424);
  v133 = 0xEF33C70FFBAB0DBFLL * (v132 ^ 0xE1E1E1E1E1E1E094 ^ *v63);
  v134 = (v133 ^ (0x10CC38F00454F241 * (v132 ^ 0xE1E1E1E1E1E1E094 ^ *v63)) ^ (0xCD5B2B96907E558CLL
                                                                                - (v133 ^ 0xCD5B2B96907E558CLL)))
       - 0x32A4D4696F81AA74;
  v135 = v134 + HIDWORD(v134);
  v136 = v135 >> 16;
  v137 = (v135 - (v135 >> 16)) >> 8;
  v138 = ((HIDWORD(v134) + v137 - v136 + v134) >> 1) & 0x75F2760E ^ (HIDWORD(v134) + v137 - v136 + v134) ^ v130;
  v139 = HIDWORD(v134) - 1226536486 + v137 - v136 + v134;
  v140 = STACK[0x490] + HIDWORD(v134) + v137 - v136 + v134 + 1;
  LODWORD(v137) = (v139 >> 1) & 0x75F2760E ^ v139 ^ v129;
  v141 = v140 ^ v133;
  v142 = v141
       + ((v141 + HIDWORD(v141) - ((v141 + HIDWORD(v141)) >> 16)) >> 8)
       + HIDWORD(v141)
       - ((v141 + HIDWORD(v141)) >> 16);
  v143 = v138 ^ (v142 >> 1) & 0x75F2760E ^ v142;
  LODWORD(v136) = ((v142 - 1226536486) >> 1) & 0x75F2760E ^ (v142 - 1226536486);
  v144 = (STACK[0x490] + 1 + v142) ^ v133;
  v145 = v144 + HIDWORD(v144);
  v146 = v145 >> 16;
  v147 = (v145 - (v145 >> 16)) >> 8;
  LODWORD(a50) = v116 + 1;
  LODWORD(v151) = v115 % 0x101;
  HIDWORD(v152) = (HIDWORD(a57) ^ 0x5BA7F945) << 8;
  HIDWORD(v153) = 16 * (HIDWORD(a57) ^ 0x5BA7F945);
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * (int)((42 * (v131 == 1)) | a2)) - 4))(v144, a2, STACK[0x490], v143 ^ ((v144 + HIDWORD(v144) + v147 - v146) >> 1) & 0x75F2760E ^ ((_DWORD)v144+ HIDWORD(v144)+ (_DWORD)v147- (_DWORD)v146), 0, v137 ^ v136 ^ ((v144 - 1226536486 + HIDWORD(v144) + v147 - v146) >> 1) & 0x75F2760E ^ ((_DWORD)v144 - 1226536486 + HIDWORD(v144) + (_DWORD)v147 - (_DWORD)v146), v126, v131, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v149,
           v150,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           v151,
           v152,
           v153,
           a55,
           a56,
           a57);
}

void sub_1003AF128()
{
  JUMPOUT(0x1003AEF90);
}

uint64_t sub_1003AF138@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W5>, int a4@<W6>, unsigned int a5@<W7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int a65;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  unsigned int v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;

  v74 = STACK[0x3BC];
  LODWORD(STACK[0x37C]) += a64;
  v75 = LODWORD(STACK[0x3B8]) ^ v67 ^ LODWORD(STACK[0x480]);
  LODWORD(STACK[0x230]) += HIDWORD(a44) ^ STACK[0x3F0];
  LODWORD(STACK[0x364]) = LODWORD(STACK[0x364]) + LODWORD(STACK[0x460]) - v71;
  LODWORD(STACK[0x228]) = a44 + (STACK[0x228] ^ LODWORD(STACK[0x35C]) ^ 0xB5B828C);
  LODWORD(STACK[0x23C]) ^= 0xB6B6B6B6;
  LODWORD(STACK[0x238]) = LODWORD(STACK[0x3B0]) ^ 0xD0D0D0D0;
  LODWORD(STACK[0x3B8]) = LODWORD(STACK[0x368]) ^ ~(a65 & a60);
  LODWORD(STACK[0x35C]) = a63 ^ LODWORD(STACK[0x310]);
  v76 = v74 ^ LODWORD(STACK[0x234]) ^ LODWORD(STACK[0x374]);
  v77 = ((unint64_t)(a1 + v66) >> 32)
      + ((a1 + v66 + ((unint64_t)(a1 + v66) >> 32) - ((a1 + v66 + ((unint64_t)(a1 + v66) >> 32)) >> 16)) >> 8)
      - ((a1 + v66 + ((unint64_t)(a1 + v66) >> 32)) >> 16)
      + a1
      + v68;
  LODWORD(STACK[0x3B0]) = v75 ^ (a45 >> 7);
  LODWORD(a54) = v76 ^ (v69 >> 5);
  v78 = 0xEF33C70FFBAB0DBFLL * (*(_QWORD *)(v73 + 8 * a5) ^ 0xE1E1E1E1E1E1E1E1);
  v79 = (v78 ^ v77) + a5 + (((v78 ^ v77) + a5) >> 32);
  v80 = ((v79 - (v79 >> 16)) >> (((a6 - 112) | 0xB0u) + 83)) + v79 - (v79 >> 16);
  v81 = v80 - 1226536486;
  LODWORD(v77) = v65 & (v80 >> 1) ^ v80 ^ a2;
  v82 = v65 & ((v80 - 1226536486) >> 1);
  v83 = ((v80 - 0x706A52E09236EC4CLL) ^ v78) + a5 + ((((v80 - 0x706A52E09236EC4CLL) ^ v78) + a5) >> 32);
  v84 = (v83 >> 16) + v83 - 2 * (v83 >> 16);
  v85 = v84 + (v84 >> 8);
  LODWORD(v77) = v77 ^ v65 & (v85 >> 1) ^ v85;
  v86 = v82 ^ v81 ^ a3 ^ v65 & ((v85 - 1226536486) >> 1) ^ ((_DWORD)v85 - 1226536486);
  v87 = ((v85 - 0x706A52E09236EC4CLL) ^ v78) + a5 + ((((v85 - 0x706A52E09236EC4CLL) ^ v78) + a5) >> 32);
  v88 = v87 - (v87 >> 16) + ((v87 - (v87 >> 16)) >> 8);
  return ((uint64_t (*)(unint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 + 8 * ((251 * (a5 + 1 >= STACK[0x458])) ^ a6)) - 8))(v88 - 0x706A52E09236EC4CLL, a4 ^ (v70 << 8) ^ HIDWORD(a43) ^ 0xDA406A20, v86, v77 ^ v65 & (v88 >> 1) ^ v88, (a6 + 2448) | 0xB0u, v86 ^ v65 & ((v88 - 1226536486) >> 1) ^ ((_DWORD)v88 - 1226536486), STACK[0x320], a5 + 1, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1003AF3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,uint64_t a61,int a62,int a63)
{
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  unsigned int v79;
  unint64_t v80;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;

  LODWORD(STACK[0x234]) = LODWORD(STACK[0x46C]) ^ a54 ^ a62 ^ a60 ^ HIDWORD(a55) ^ HIDWORD(a56) ^ HIDWORD(a51) ^ a55 ^ a63 ^ a48 & 0x842B841 ^ 0x2EE41753;
  v65 = v63
      - 0x239680D7B6E170A9
      - ((unint64_t)(v63 - 0x239680D7B6E170A9) >> 30)
      + ((v63 - 0x239680D7B6E170A9 - ((unint64_t)(v63 - 0x239680D7B6E170A9) >> 30)) >> 14);
  v66 = v65
      + (v65 >> 4)
      + 0x1BC7AA28492BEF35
      - ((v65 + (v65 >> 4) + 0x1BC7AA28492BEF35) >> 31)
      + ((v65 + (v65 >> 4) + 0x1BC7AA28492BEF35 - ((v65 + (v65 >> 4) + 0x1BC7AA28492BEF35) >> 31)) >> 15);
  v67 = v66 + (v66 >> 7);
  v68 = (v67 ^ 0x241B407FE6FE3922)
      + ((v67 ^ 0x241B407FE6FE3922) >> 25)
      + (((v67 ^ 0x241B407FE6FE3922) + ((v67 ^ 0x241B407FE6FE3922) >> 25)) >> 12);
  v69 = v68
      - (v68 >> 3)
      + 0x74110B698BA1A0ECLL
      - ((v68 - (v68 >> 3) + 0x74110B698BA1A0ECLL) >> 30)
      + ((v68 - (v68 >> 3) + 0x74110B698BA1A0ECLL - ((v68 - (v68 >> 3) + 0x74110B698BA1A0ECLL) >> 30)) >> 14);
  v70 = v69
      - (v69 >> 2)
      + 0x3C388648EB9E1FBALL
      + ((v69 - (v69 >> 2) + 0x3C388648EB9E1FBALL) >> 31)
      - ((v69 - (v69 >> 2) + 0x3C388648EB9E1FBALL + ((v69 - (v69 >> 2) + 0x3C388648EB9E1FBALL) >> 31)) >> 14);
  v71 = v70 - (v70 >> 1);
  v72 = v71
      - 0x255C4F3A77E37467
      + ((v71 - 0x255C4F3A77E37467) >> 24)
      + ((v71 - 0x255C4F3A77E37467 + ((v71 - 0x255C4F3A77E37467) >> 24)) >> 8);
  v73 = ((2 * (v72 - (v72 >> 3))) & 0xCD2ECB53745782E0)
      + ((v72 - (v72 >> 3)) ^ 0xE69765A9BA2BC170)
      - ((((2 * (v72 - (v72 >> 3))) & 0xCD2ECB53745782E0) + ((v72 - (v72 >> 3)) ^ 0xE69765A9BA2BC170)) >> 31);
  v74 = v73 + (v73 >> 12) + ((v73 + (v73 >> 12)) >> 5);
  v75 = (v74 ^ 0xD91E7E7FE7105E18)
      - ((v74 ^ 0xD91E7E7FE7105E18) >> 26)
      - (((v74 ^ 0xD91E7E7FE7105E18) - ((v74 ^ 0xD91E7E7FE7105E18) >> 26)) >> 11);
  v76 = v71 ^ v67 ^ (v75 + (v75 >> 2)) ^ a6 ^ ((v71 ^ v67 ^ ((_DWORD)v75
                                                                                       + (v75 >> 2))) >> 1) & 0x75F2760E;
  if (((*(_BYTE *)(STACK[0x328]
                  + ((*(_BYTE *)(STACK[0x328]
                               + ((*(_BYTE *)(STACK[0x328] + ((*(_BYTE *)STACK[0x2C0] + 4) & 0xF) - 0x6CCFC4499E327A51)
                                 + 3) & 0xF)
                               - 0x6CCFC4499E327A51)
                    + 11) & 0xF)
                  - 0x6CCFC4499E327A51)
       + 5) & 0xE) != 0)
    v77 = (*(_BYTE *)(STACK[0x328]
                    + ((*(_BYTE *)(STACK[0x328]
                                 + ((*(_BYTE *)(STACK[0x328]
                                              + ((*(_BYTE *)STACK[0x2C0] + 4) & 0xF)
                                              - 0x6CCFC4499E327A51)
                                   + 3) & 0xF)
                                 - 0x6CCFC4499E327A51)
                      + 11) & 0xF)
                    - 0x6CCFC4499E327A51)
         + 5) & 0xF;
  else
    v77 = 1;
  v78 = -574915727 * *a7;
  v79 = (v78 ^ 0xC4BFC504) >> 16;
  v80 = (unint64_t)((v78 ^ 0xC4BFC504) - v79) >> 8;
  v81 = (v78 ^ 0xC4BFC504) + 1095404994 - v79 + v80;
  v82 = (v78 ^ 0xC4BFC504) - 2104157308 - v79 + v80;
  v83 = (v82 ^ v78) >> 16;
  v84 = (v82 ^ v78) + 1095404994 - v83 + (((v82 ^ v78) - v83) >> 8);
  v85 = ((v82 ^ v78) - 2104157308 - v83 + (((v82 ^ v78) - v83) >> 8)) ^ v78;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * (int)((10562 * (v77 == 1)) ^ a5)))((a5 - 2636), a2, v85, v81 ^ v76 ^ (v81 >> 1) & 0x75F2760E ^ v84 ^ (v84 >> 1) & 0x75F2760E ^ ((_DWORD)v85+ 1095404994- WORD1(v85)+ ((v85 - WORD1(v85)) >> 8)) ^ (((_DWORD)v85 + 1095404994 - WORD1(v85) + ((v85 - WORD1(v85)) >> 8)) >> 1) & 0x75F2760E, a5, v82, a7, 1095404994, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1003AF814@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X6>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  unint64_t v63;

  STACK[0x480] = -600976375;
  LODWORD(STACK[0x220]) += a2;
  LODWORD(STACK[0x384]) = LODWORD(STACK[0x2A8]) ^ LODWORD(STACK[0x454]) ^ v48 ^ 0x28EAB1EA;
  LODWORD(STACK[0x46C]) = a1 ^ 0x18B7;
  LODWORD(STACK[0x460]) = a1 ^ 0x179;
  v49 = -574915727 * *(unsigned __int8 *)(a5 + v44);
  v50 = v49 ^ (v47
             + a3
             - ((a3 + v45) >> 16)
             + a6
             + ((a3 + v45 - ((a3 + v45) >> 16)) >> 8)
             - 1);
  v51 = (v44 + v50) >> LODWORD(STACK[0x460]);
  v52 = v50 - v51;
  v53 = (unint64_t)(v50 + (_DWORD)v44 - v51) >> 8;
  v54 = v44 + 1095404994 + v52 + v53;
  LODWORD(v53) = v44 - 2104157308 + v52 + v53;
  v55 = (v53 ^ v49) + v44;
  v56 = HIWORD(v55);
  v57 = (unint64_t)(v55 - HIWORD(v55)) >> 8;
  v58 = v44 + (v53 ^ v49) - v56 + v57;
  v59 = (_DWORD)v44 + 1095404994 + (v53 ^ v49) - v56 + v57;
  v60 = (_DWORD)v44 - 2104157308 + (v53 ^ v49) - v56 + v57;
  v61 = v60 ^ v49;
  LODWORD(v57) = ((v60 ^ v49) + v44) >> 16;
  v62 = v44 - 2104157308 + (v60 ^ v49) - v57;
  v63 = (unint64_t)((v60 ^ v49) + v44 - v57) >> 8;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x498] + 8 * (int)((5053 * (v44 == 15)) ^ a1)) - 8))(a1, 191455361, (v62 + v63), v54 ^ a4 ^ v46 & (v54 >> 1) ^ v59 ^ v46 & (v59 >> 1) ^ ((_DWORD)v44+ 1095404994+ v61- (_DWORD)v57+ (_DWORD)v63) ^ v46 & ((v44 + 1095404994 + v61 - v57 + v63) >> 1), v59, 0, v60, v46 & (v58 >> 1), a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

void sub_1003AFA40()
{
  JUMPOUT(0x1003AF8D8);
}

uint64_t sub_1003AFA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  int v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD, uint64_t);

  LODWORD(STACK[0x3B4]) ^= LODWORD(STACK[0x368]);
  v8 = (v4 + v6) >> 16;
  v9 = (v4 + v6 - v8) >> 8;
  v10 = v4 + v9 + v5;
  v11 = v10 - v8;
  v12 = (v10 + ((v10 - v8) >> 11) - v8) >> 1;
  v13 = v2
      + v4
      + ((v4 + v3 + v9 + (v11 >> 11) + ((v4 + v3 + v9 + (v11 >> 11) - v12 - v8) >> 14) - v12 - v8) >> 3)
      + ((v4 + v3 + v9 + (v11 >> 11) - v12 - v8) >> 14)
      + (v11 >> 11)
      + v9
      - v12
      - v8
      - a2;
  v14 = (v13 ^ 0x87746AF9)
      + ((v13 ^ 0x87746AF9) >> 12)
      - (((v13 ^ 0x87746AF9) + ((v13 ^ 0x87746AF9) >> 12)) >> 7);
  v15 = v14
      - 1971810398
      - ((v14 - 1971810398) >> 11)
      + ((v14 - 1971810398 - ((v14 - 1971810398) >> 11)) >> 1);
  STACK[0x368] = v13;
  LODWORD(STACK[0x2A8]) = v15
                        + 847310700
                        + ((v15 + 847310700) >> 12)
                        + ((v15 + 847310700 + ((v15 + 847310700) >> 12)) >> 2);
  LODWORD(STACK[0x460]) = LODWORD(STACK[0x444]) ^ LODWORD(STACK[0x440]);
  v16 = STACK[0x458];
  v17 = ((*(_QWORD *)(STACK[0x318]
                    + 8
                    * (((*(_QWORD *)(STACK[0x318]
                                   + 8
                                   * (((*(_QWORD *)(STACK[0x318]
                                                  + 8
                                                  * (((*(_QWORD *)(STACK[0x318]
                                                                 + 8 * (0xC4A70906 % STACK[0x458])) ^ 0xE1E1E1E1E1E1E1E1)
                                                    + 2352903523u)
                                                   % v16)) ^ 0xE1E1E1E1E1E1E1E1)
                                     + 2037361182)
                                    % v16)) ^ 0xE1E1E1E1E1E1E1E1)
                      + 590619322)
                     % v16)) ^ 0xE1E1E1E1E1E1E1E1)
       + 3474867990u)
      % v16;
  if (v17 <= 1)
    v18 = 1;
  else
    v18 = v17;
  v19 = 0xEF33C70FFBAB0DBFLL * (*(_QWORD *)STACK[0x318] ^ 0xE1E1E1E1E1E1E1E1);
  v20 = STACK[0x490]
      + (v19 ^ 0xCD5B2B96907E558CLL)
      + ((v19 ^ 0xCD5B2B96907E558CLL) >> 32)
      + (((v19 ^ 0xCD5B2B96907E558CLL)
        + ((v19 ^ 0xCD5B2B96907E558CLL) >> 32)
        - (((v19 ^ 0xCD5B2B96907E558CLL) + ((v19 ^ 0xCD5B2B96907E558CLL) >> 32)) >> 16)) >> 8)
      - (((v19 ^ 0xCD5B2B96907E558CLL) + ((v19 ^ 0xCD5B2B96907E558CLL) >> 32)) >> 16)
      + 1;
  v21 = (v20 >> 1) & 0x5F6D765B ^ v20 ^ LODWORD(STACK[0x3C0]) ^ 0x1BCD78E8;
  v22 = v20 ^ v19;
  v23 = v22 + HIDWORD(v22);
  v24 = v23 >> 16;
  v25 = (v23 - (v23 >> 16)) >> 8;
  v26 = v22 + v25 - v24;
  v27 = STACK[0x490] + HIDWORD(v22);
  v28 = v27 + v26 + 1;
  v29 = v28 ^ v19;
  LODWORD(v22) = v21 ^ (v27
                      + ((v28 >> 1) & 0x5F6D765B ^ -((v28 >> 1) & 0x5F6D765B) ^ (v27 - ((v28 >> 1) & 0x5F6D765B ^ v28) + v26 + 1))
                      + v22
                      + v25
                      - v24
                      + 1);
  v30 = v29 + HIDWORD(v29);
  v31 = v22 ^ ((LODWORD(STACK[0x490])
                            + (_DWORD)v29
                            + HIDWORD(v29)
                            + ((v30 - (v30 >> 16)) >> 8)
                            - (v30 >> 16)
                            + 1) >> 1) & 0x5F6D765B ^ (LODWORD(STACK[0x490])
                                                     + (_DWORD)v29
                                                     + HIDWORD(v29)
                                                     + ((v30 - (v30 >> 16)) >> 8)
                                                     - (v30 >> 16)
                                                     + 1);
  v32 = (uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(v7 + 8 * ((56 * (v18 == 1)) ^ LODWORD(STACK[0x46C])))
                                                - 4);
  ++STACK[0x490];
  return v32(0, v31);
}

void sub_1003AFF38()
{
  JUMPOUT(0x1003AFD5CLL);
}

uint64_t sub_1003AFF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,uint64_t a63)
{
  int a69;
  int v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;

  LODWORD(STACK[0x3C0]) = a69 + a62;
  LODWORD(STACK[0x46C]) = LODWORD(STACK[0x38C]) ^ LODWORD(STACK[0x440]) ^ LODWORD(STACK[0x460]) ^ LODWORD(STACK[0x3BC]) ^ LODWORD(STACK[0x374]) ^ a60 ^ a47 ^ a49 ^ a57 ^ v72 ^ a56 ^ a53 ^ a51 & v70 ^ 0xB2F464F9;
  return (*(uint64_t (**)(void))(v73 + 8 * ((93 * (STACK[0x458] <= v69 + 1)) ^ v71)))();
}

uint64_t sub_1003B0148(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;

  LODWORD(STACK[0x490]) = LODWORD(STACK[0x218]) ^ 0x8BFDCD50;
  LODWORD(STACK[0x218]) = LODWORD(STACK[0x41C]) ^ v56 ^ LODWORD(STACK[0x450]) ^ v57 ^ HIDWORD(a54) ^ a54 ^ HIDWORD(a53) ^ v55;
  v64 = v58
      - 0x239680D7B6E170A9
      - ((unint64_t)(v58 - 0x239680D7B6E170A9) >> 30)
      + ((v58 - 0x239680D7B6E170A9 - ((unint64_t)(v58 - 0x239680D7B6E170A9) >> 30)) >> 14);
  v65 = v64
      + (v64 >> 4)
      + 0x1BC7AA28492BEF35
      - ((v64 + (v64 >> 4) + 0x1BC7AA28492BEF35) >> 31)
      + ((v64 + (v64 >> 4) + 0x1BC7AA28492BEF35 - ((v64 + (v64 >> 4) + 0x1BC7AA28492BEF35) >> 31)) >> 15);
  v66 = ((v65 + (v65 >> 7)) ^ 0x241B407FE6FE3922)
      + (((v65 + (v65 >> 7)) ^ 0x241B407FE6FE3922) >> 25)
      + ((((v65 + (v65 >> 7)) ^ 0x241B407FE6FE3922) + (((v65 + (v65 >> 7)) ^ 0x241B407FE6FE3922) >> 25)) >> 12);
  v67 = v66 - (v66 >> 3);
  v68 = v67
      + 0x74110B698BA1A0ECLL
      - ((v67 + 0x74110B698BA1A0ECLL) >> 30)
      + ((v67 + 0x74110B698BA1A0ECLL - ((v67 + 0x74110B698BA1A0ECLL) >> 30)) >> 14);
  v69 = v68
      - (v68 >> 2)
      + 0x3C388648EB9E1FBALL
      + ((v68 - (v68 >> 2) + 0x3C388648EB9E1FBALL) >> 31)
      - ((v68 - (v68 >> 2) + 0x3C388648EB9E1FBALL + ((v68 - (v68 >> 2) + 0x3C388648EB9E1FBALL) >> 31)) >> 14);
  v70 = v69
      - (v69 >> 1)
      - 0x255C4F3A77E37467
      + ((v69 - (v69 >> 1) - 0x255C4F3A77E37467) >> 24)
      + ((v69 - (v69 >> 1) - 0x255C4F3A77E37467 + ((v69 - (v69 >> 1) - 0x255C4F3A77E37467) >> 24)) >> 8);
  v71 = v70 - (v70 >> 3);
  LODWORD(v67) = v71 ^ v67;
  v72 = v71
      - 0x19689A5645D43E90
      - ((v71 - 0x19689A5645D43E90) >> 31)
      + ((v71 - 0x19689A5645D43E90 - ((v71 - 0x19689A5645D43E90) >> 31)) >> 12);
  v73 = ((v72 + (v72 >> 5)) ^ 0xD91E7E7FE7105E18)
      - (((v72 + (v72 >> 5)) ^ 0xD91E7E7FE7105E18) >> 26)
      - ((((v72 + (v72 >> 5)) ^ 0xD91E7E7FE7105E18) - (((v72 + (v72 >> 5)) ^ 0xD91E7E7FE7105E18) >> 26)) >> 11);
  v74 = v73
      + (v73 >> 2)
      - 0x10D99EAB9261E0D8
      + ((v73 + (v73 >> 2) - 0x10D99EAB9261E0D8) >> 31)
      - ((v73 + (v73 >> 2) - 0x10D99EAB9261E0D8 + ((v73 + (v73 >> 2) - 0x10D99EAB9261E0D8) >> 31)) >> 9);
  v75 = v67 ^ ((v74 >> 7) + v74) ^ a2 ^ a8 & ((v67 ^ ((v74 >> 7) + (_DWORD)v74)) >> 1);
  if (((*(_BYTE *)(v59
                  + ((*(_BYTE *)(v59
                               + ((*(_BYTE *)(v59
                                            + ((*(_BYTE *)(v59 - 0x6CCFC4499E327A4ELL) + 1) & 0xF)
                                            - 0x6CCFC4499E327A51)
                                 + 8) & 0xF)
                               - 0x6CCFC4499E327A51)
                    - 1) & 0xF)
                  - 0x6CCFC4499E327A51)
       + 8) & 0xE) != 0)
    v76 = (*(_BYTE *)(v59
                    + ((*(_BYTE *)(v59
                                 + ((*(_BYTE *)(v59
                                              + ((*(_BYTE *)(v59 - 0x6CCFC4499E327A4ELL) + 1) & 0xF)
                                              - 0x6CCFC4499E327A51)
                                   + 8) & 0xF)
                                 - 0x6CCFC4499E327A51)
                      - 1) & 0xF)
                    - 0x6CCFC4499E327A51)
         + 8) & 0xF;
  else
    v76 = 1;
  v77 = -574915727 * *(unsigned __int8 *)STACK[0x320];
  v78 = v60 + (v77 ^ 0xC4BFC504) - ((v77 ^ 0xC4BFC504) >> 16) + (((v77 ^ 0xC4BFC504) - ((v77 ^ 0xC4BFC504) >> 16)) >> 8);
  v79 = (v78 ^ v77) >> 16;
  v80 = v60 + (v78 ^ v77) - v79 + (((v78 ^ v77) - v79) >> 8);
  v81 = v60
      + (v80 ^ v77)
      - ((v80 ^ v77) >> 16)
      + (((v80 ^ v77) - ((v80 ^ v77) >> 16)) >> 8);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (int)((2445 * (v76 == 1)) ^ a1)))(a1, (a1 + v63), v78 ^ v75 ^ (v78 >> 1) & 0x5F6D765B ^ v80 ^ (v80 >> 1) & 0x5F6D765B ^ v81 ^ (v81 >> 1) & 0x5F6D765B, a4, ((v61 + (v78 ^ v77) - v79 + (((v78 ^ v77) - v79) >> 8)) >> 1) & 0x5F6D765B, 2445, v80, v81, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

void sub_1003B04E4()
{
  JUMPOUT(0x1003B03A8);
}

uint64_t sub_1003B04F8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56)
{
  int v56;
  uint64_t v57;

  LODWORD(STACK[0x458]) = a56 & v56;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x498] + 8 * ((7418 * (v57 == 15)) ^ (a2 - 318802153)))
                                         - 12))(0);
}

void sub_1003B0700()
{
  unint64_t v0;
  unint64_t v1;

  STACK[0x480] = v1;
  STACK[0x488] = v0;
  JUMPOUT(0x1003B0564);
}

uint64_t sub_1003B0720@<X0>(char a1@<W0>, int a2@<W5>, int a3@<W6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,unsigned int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unint64_t v72;
  unsigned int v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  uint64_t v86;

  v69 = (v66 + v63) >> 16;
  v70 = (v66 + v63 - v69) >> 8;
  v71 = v66 + v70 + a3;
  v72 = v71 - v69;
  v73 = (v71 + (v72 >> 11) - v69) >> 1;
  v74 = v64 + v66 + v70 - v69 + -v73 + (v72 >> 11) + v68;
  v75 = v64
      + v66
      + ((v66
        + a2
        + v70
        + (v72 >> 11)
        + ((v66 + a2 + v70 + (v72 >> 11) - v73 - v69) >> 14)
        - v73
        - v69) >> 3)
      + ((v66 + a2 + v70 + (v72 >> 11) - v73 - v69) >> 14)
      + (v72 >> 11)
      + v70
      - v73
      - v69
      - v67;
  v76 = (v75 ^ 0x87746AF9)
      + ((v75 ^ 0x87746AF9) >> 12)
      - (((v75 ^ 0x87746AF9) + ((v75 ^ 0x87746AF9) >> 12)) >> 7);
  v77 = v76
      - 1971810398
      - ((v76 - 1971810398) >> 11)
      + ((v76 - 1971810398 - ((v76 - 1971810398) >> 11)) >> 1);
  LOBYTE(v70) = (v64
               + v62
               + ((unsigned __int16)(v62 + v63 - ((v62 + v63) >> 16)) >> 8)
               - ((v62 + v63) >> 16)
               - a1) & 2;
  v78 = ((v77 + 847310700 + ((v77 + 847310700) >> 12)) >> v70 >> (v70 ^ 2))
      + v77
      + 847310700
      + ((v77 + 847310700) >> 12);
  v79 = v78 - 1744808673 - ((v78 - 1744808673) >> 13) - ((v78 - 1744808673 - ((v78 - 1744808673) >> 13)) >> 1);
  LODWORD(STACK[0x480]) = v76;
  v80 = v79 + 1859480226 + ((v79 + 1859480226) >> 15) + ((v79 + 1859480226 + ((v79 + 1859480226) >> 15)) >> 4);
  v81 = (v80 ^ 0xE2C829F6) + ((v80 ^ 0xE2C829F6) >> 15) + (((v80 ^ 0xE2C829F6) + ((v80 ^ 0xE2C829F6) >> 15)) >> 6);
  LODWORD(STACK[0x440]) = (v79 ^ v76 ^ ((v81 ^ 0xC050C692)
                                      - ((v81 ^ 0xC050C692) >> 10)
                                      - (((v81 ^ 0xC050C692) - ((v81 ^ 0xC050C692) >> 10)) >> 7))) >> 1;
  v82 = STACK[0x460];
  STACK[0x488] = v74;
  LODWORD(STACK[0x3BC]) = (v77 ^ v74 ^ v82 ^ v80) >> 1;
  v83 = LODWORD(STACK[0x454]) ^ LODWORD(STACK[0x44C]);
  STACK[0x460] = v75;
  LODWORD(STACK[0x44C]) = (v83 ^ v75 ^ v78 ^ v81) >> 1;
  v84 = STACK[0x46C];
  LODWORD(STACK[0x38C]) = a4 & ((LODWORD(STACK[0x46C]) ^ a53) >> 1);
  LODWORD(STACK[0x374]) = a4 & (v84 >> 1);
  v85 = a62 ^ LODWORD(STACK[0x490]);
  LODWORD(v74) = *((_DWORD *)*(&off_1004ECA20 + (v65 ^ 0xF7E)) + 58) ^ 0xF22387B2;
  v86 = 4 * (LOBYTE(STACK[0x23C]) ^ LOBYTE(STACK[0x238]));
  *(_DWORD *)(STACK[0x478] + v86) = v85 ^ (((v74 ^ (2 * (v74 & STACK[0x3FC]))) & STACK[0x3B8]) << LODWORD(STACK[0x40C])) ^ (((v74 ^ (2 * (v74 & STACK[0x3FC]))) & STACK[0x3B4]) >> LODWORD(STACK[0x408]));
  *(_DWORD *)(STACK[0x470] + v86) = v85 ^ 0xB1E2 ^ *((unsigned __int16 *)*(&off_1004ECA20 + v65 - 2979) + 247);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x498] + 8 * ((7701 * (v65 == 3702)) ^ v65)) - 4))();
}

void sub_1003B09E8()
{
  JUMPOUT(0x1003B091CLL);
}

#error "1003B5544: call analysis failed (funcsize=4701)"

void sub_1003B5548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  unint64_t v65;

  STACK[0x2F0] = v65;
  LODWORD(STACK[0x2E8]) = a63 ^ 0xBF0BDCAD;
  LODWORD(STACK[0x2EC]) = (((a65 + 650007521) & 0xD941ABD7) - 1856660586) ^ a61;
  LODWORD(STACK[0x2E4]) = a64 ^ 0xCE0C117D;
  LODWORD(STACK[0x2E0]) = a62 ^ 0xC3AAE265;
  JUMPOUT(0x1003B2990);
}

void sub_1003B5648()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(unint64_t);

  v3 = *(void (**)(unint64_t))(v2 + 8 * (v0 - 1788));
  v3(STACK[0x410] - 0x2AEF01BCA05C28EBLL);
  v3(v1 - 0x6897BFF24AAAEC4DLL);
  JUMPOUT(0x1003B56DCLL);
}

void sub_1003B5718(uint64_t a1)
{
  int v1;
  int v2;
  int v3;

  v1 = 1939688459 * ((a1 - 335319795 - 2 * (a1 & 0xEC036D0D)) ^ 0xE8AA0FC6);
  v2 = *(_DWORD *)(a1 + 4) - v1;
  v3 = *(_DWORD *)a1 ^ v1;
  *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x334F714F2602DE16) = v3;
  __asm { BR              X11 }
}

uint64_t sub_1003B57C4@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);

  v6 = v1 ^ a1;
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v3 + 16));
  *(_QWORD *)(v5 - 0x334F714F2602DE0ELL) = v7(8 * v6, 0x100004000313F17) + 0x3E4DDC644C61E0A6;
  *(_QWORD *)(v5 - 0x334F714F2602DE06) = v7(v6, 0x100004077774924);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (v3 ^ (208
                                               * ((v6 ^ 0x77C71B38DDEB73FELL)
                                                - 0x77C71B383F9121E1
                                                + ((2 * v6) & 0x1BBD6E7FCLL) != 2656719389))))
                            - 4))();
}

uint64_t sub_1003B58A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  unint64_t v8;

  v7 = v2 < v6;
  *(_BYTE *)(a1 + a2) = 0;
  v8 = a2 + 1;
  if (v7 == v8 > 0xFFFFFFFF61A5ADE2)
    v7 = v8 + v6 < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v7 * v3) ^ v4)) - 4))();
}

uint64_t sub_1003B5904(uint64_t result)
{
  int v1;
  int v2;

  v1 = *(_DWORD *)(*(_QWORD *)result - 0x5C1503E25C92D1C6);
  if (v1 == 900 || v1 == 800)
  {
    v2 = (*(_DWORD *)(result + 12) ^ (55873919 * (((result | 0x6FEAFDC7) - (result & 0x6FEAFDC7)) ^ 0x346073F8)))
       + 610263889;
    __asm { BR              X9 }
  }
  *(_DWORD *)(result + 8) = -246801023;
  return result;
}

void sub_1003B5E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  int v5;
  unsigned int v6;
  uint64_t v7;

  v3 = qword_100506AD8 - qword_100506B00 - (_QWORD)&v4;
  qword_100506B00 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = -738757634 - 742349519 * ((&v6 & 0xD9137F84 | ~(&v6 | 0xD9137F84)) ^ 0x55B7F7B8);
  v7 = a2;
  sub_1003CA790((uint64_t)&v6);
  *(_QWORD *)(a1 + 152) = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1004ECA20
                                                                     + ((51 * (qword_100506B00 ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0610[byte_10048C380[(51 * (qword_100506B00 ^ 0xDE ^ qword_100506AD8))] ^ 0x14])
                                                                     + 618))(432, 0x10B20407EFF2B89);
  v5 = 0;
  JUMPOUT(0x1003B6094);
}

uint64_t sub_1003B6094()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != v0 + 445209533) * ((v0 - 340) ^ 0xEE3)) ^ v0)) - 12))();
}

uint64_t sub_1003B60EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20
                                        + 8
                                        * (((((a19 - 1111770301) & 0xFFFFFFFC) - a13 != ((4 * v19) ^ 0x1BB0)
                                                                                      - 1111779476)
                                          * (v19 ^ 0xE38)) ^ v19))
                            - 4))();
}

uint64_t sub_1003B6144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  _BOOL4 v24;

  v22 = v17 ^ 0x2DCD;
  v24 = a17 - v20 == v19 && v18 != 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * (int)(((((v22 + 1545890851) & 0xA3DB7F9F) - 3978) * v24) ^ v22))
                                          - 8))(1824753536);
}

uint64_t sub_1003B6198(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * (((a2 + (v2 ^ 0x4B7D6F66) - 471) * (v3 != 0)) ^ v2))
                                          - 8))(1824753536);
}

uint64_t sub_1003B61D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * ((6438 * (*(_DWORD *)(v17 + (int)(*(_DWORD *)(a13 + 24 * (v13 - 1) + 8) + ((v14 + 1796695320) & 0x94E8AF7A) - a7 - 3159 - 1711716317) * (uint64_t)v15 + 36) == 445213482)) ^ v14)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1003B6290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  int v18;
  uint64_t v19;
  BOOL v20;

  v20 = a17 + 1620281957 < a18 + 508511653;
  if (a17 > ((v18 - 8774) ^ 0x9F6C747E) != (a18 + 508511653) < 0x60938A65)
    v20 = (a18 + 508511653) < 0x60938A65;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19
                                        + 8
                                        * (((2 * (((v18 - 11) ^ v20) & 1)) & 0xBF | ((((v18 - 11) ^ v20) & 1) << 6)) ^ v18))
                            - 12))();
}

uint64_t sub_1003B6308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * ((248 * (*(_DWORD *)(v9 + (v10 + a6) * (uint64_t)v7 + 36) != v10)) ^ v6))
                            - ((v6 - 7) ^ 0x1510)))();
}

uint64_t sub_1003B6360(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((a2 + ((v3 + 171243402) | 0x41484010) - 477) * (v2 != 1824781336)) ^ v3))
                            - (((v3 - 1030) | 0x6C1u) ^ 0x17DBLL)))();
}

uint64_t sub_1003B63C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                      + 8
                                                      * ((13824
                                                        * (((((v6 + 140244013) | 0x432140B2) ^ 0x4B7D4CBA) & *(_DWORD *)(v9 + (v10 + a6) * (uint64_t)v7 + 40)) == (v6 ^ 0x2C7) - 5396)) ^ v6))
                                          - 4))(1824753536);
}

uint64_t sub_1003B6434()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v5 = *(_DWORD *)(v4 + v0 * (uint64_t)v2 + 36);
  v7 = v5 != 445213482 && v5 + 1702270165 < ((107 * (v1 ^ 0x152D) + 1242114221) | 0x1740C32u) + 880980819;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((4 * v7) | (8 * v7)) ^ v1)) - 8))();
}

uint64_t sub_1003B64AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  if (v8 >= v9)
    v11 = 1824753536;
  else
    v11 = 1824781336;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * ((((_DWORD)v11 == 1824781336) * (v7 - 1266489266)) ^ (v7 + a7)))
                                          - 4))(v11);
}

void sub_1003B72B4()
{
  JUMPOUT(0x1003B6014);
}

void sub_1003B72C8()
{
  JUMPOUT(0x1003B6D60);
}

uint64_t sub_1003B72D0(int a1)
{
  return (a1 - 1824781336);
}

void sub_1003B7318(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (qword_100506AD8 + qword_100511240) ^ (unint64_t)&v5;
  qword_100511240 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = a2;
  v6 = -738757634 - 742349519 * ((&v6 + 60719977 - 2 * (&v6 & 0x39E8369)) ^ 0x70C5F4AA);
  sub_1003CA790((uint64_t)&v6);
  v4 = v8;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v8 - 0x4159F3519D14AB52) - 1111770304;
  *(_QWORD *)a1 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_1004ECA20
                                                            + ((51
                                                                                             * ((qword_100506AD8
                                                                                               - qword_100511240) ^ 0xDE)) ^ byte_100466A20[byte_10042E0D0[(51 * ((qword_100506AD8 - qword_100511240) ^ 0xDE))] ^ 0xFC])
                                                            + 751))((*(_DWORD *)(v4 - 0x4159F3519D14AB52) - 1111770304), 311499623);
  __asm { BR              X13 }
}

uint64_t sub_1003B74DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  v8 = (v5 - 2095757011);
  v9 = -333269657 * ((-333269657 * ((_DWORD)a2 + (_DWORD)v8)) ^ ((-333269657 * (a2 + v8)) >> 16));
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(v7[405] + (v9 >> 24)) ^ *(_BYTE *)(a2 + v8 - 0x1132FE166654577ELL) ^ *(_BYTE *)(v7[98] + (v9 >> 24) - 3) ^ *(_BYTE *)(v7[778] + (v9 >> 24) - 5) ^ v9 ^ (-45 * ((-333269657 * ((-333269657 * ((_DWORD)a2 + (_DWORD)v8)) ^ ((-333269657 * (a2 + v8)) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v5 - 1 == v6) * v2) ^ v3)) - 12))();
}

uint64_t sub_1003B7578()
{
  return 0;
}

void sub_1003B75B4(uint64_t a1)
{
  int v1;

  v1 = (*(_DWORD *)(a1 + 12) ^ (55873919 * ((a1 & 0x6040F720 | ~(a1 | 0x6040F720)) ^ 0xC43586E0))) - 3212;
  __asm { BR              X10 }
}

uint64_t sub_1003B7744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * ((v7 + 2198) ^ ((16 * (v8 == a7)) | ((v8 == a7) << 6)))))();
}

uint64_t sub_1003B7778(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * (((v13 - 3553) * (((a4 + v14 + 3) & 0xFFFFFFFC) - a13 == a4)) ^ (v13 - 724)))
                            - ((v13 - 3328) | 0xA33u)
                            + 2863))();
}

uint64_t sub_1003B77C4@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((6853 * (((a2 - v3 == a1) ^ (v2 + 108)) & 1)) ^ v2))
                            - ((v2 + 3695) ^ 0x19A6)))();
}

uint64_t sub_1003B7808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;

  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (int)((1691 * (*(_DWORD *)(a13 + 24 * v14 + 8) != a7)) ^ (((v13 + 1503253611) & 0xA6662E61)
                                                                                          + 525))))();
}

uint64_t sub_1003B78FC@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  _BOOL4 v7;

  v4 = (v1 - 1280) | 0x6C1;
  v5 = (v1 + 1584) | 0x802;
  v6 = v1 + 6217;
  v7 = a1 - 137594614 < v2 - 1839535374;
  if (a1 > v4 + 137590580 != v2 - 1839535374 < (v5 - 137601832))
    v7 = v2 - 1839535374 < (v5 - 137601832);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((7 * !v7) ^ v6)) - 8))();
}

uint64_t sub_1003B798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((8140
                                * (*(_DWORD *)(v7
                                             + (a5 + v6 + ((v5 - 2060878189) & 0x7AD67FAB) - 3584) * (uint64_t)v8
                                             + 36) == v6)) ^ v5)))();
}

uint64_t sub_1003B79E8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v3 - 3666) ^ (3553 * (v4 == a3))))
                            - ((448 * ((v3 - 3666) ^ 0x167u) + 2953) ^ (v3 + 2496))))();
}

uint64_t sub_1003B7A40()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((35
                                * ((*(_BYTE *)(v2
                                             + (int)(((v0 - 2945) ^ 0x92B9B7EF ^ (35 * (v0 ^ 0x1898))) + v1)
                                             * (uint64_t)v3
                                             + 40) & 8) == 0)) ^ v0)))();
}

uint64_t sub_1003B7A90(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  _BOOL4 v14;

  v12 = *(_DWORD *)(v9 + v7 * (uint64_t)v10 + 36);
  v14 = v12 != a7 && ((v8 + 770503474) ^ 0x2DED179D ^ a1) + v12 < a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v14 | (4 * v14)) ^ v8))
                            - ((v8 + 770503474) & 0xD212FFE3 ^ 0x198DLL)))();
}

uint64_t sub_1003B7AF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;

  if (v7 >= a6)
    v9 = -246801584;
  else
    v9 = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((9680 * (v9 == a3)) ^ (v6 - 3212)))
                            - (((v6 - 3516) | 0x130u) ^ 0x17CLL)))();
}

void sub_1003B84C0()
{
  JUMPOUT(0x1003B76E4);
}

void sub_1003B84D8(uint64_t a1, uint64_t a2)
{
  int v2;

  *(_DWORD *)(a2 + 8) = v2;
}

void sub_1003B8518(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) ^ (380477743 * (a1 ^ 0x50AD9CC3));
  v2 = *(_QWORD *)a1;
  ((void (*)(char *, void (*)()))*(&off_1004ECA20 + (v1 ^ 0x1DFF)))((char *)*(&off_1004ECA20 + (v1 ^ 0x1E16)) - 12, sub_1003D1CBC);
  __asm { BR              X10 }
}

uint64_t sub_1003B85BC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((3915
                                * (((10 * (v2 ^ 0xE8) + 1) ^ (**(_QWORD **)(v1
                                                                                           + 8
                                                                                           * (10 * (v2 ^ 0x1FE8) - 3398)) == 0)) & 1)) ^ (10 * (v2 ^ 0x1FE8)))))();
}

uint64_t sub_1003B8600@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 3464)))(v1);
}

void sub_1003B862C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) - 55873919 * ((a1 + 629819863 - 2 * (a1 & 0x258A49D7)) ^ 0x7E00C7E8);
  __asm { BR              X9 }
}

uint64_t sub_1003B86F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((16288 * (*(_DWORD *)(v1 + 88) == 8)) ^ (v0 - 151176612) & 0x902DFFCu))
                            - ((v0 - 151176612) & 0x902DFFC ^ 0x1D20)))();
}

uint64_t sub_1003B873C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((13788 * (((*(_QWORD *)(v1 + 24) == 0) ^ v0 ^ 0x2F) & 1)) ^ v0))
                            - 241 * (v0 ^ 0x1D2F)
                            + 711))();
}

uint64_t sub_1003B8780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;

  v36 = *(_DWORD *)(v34 + 32);
  if (v36 == 16 || v36 == 8)
    return ((uint64_t (*)(void))(*(_QWORD *)(v35
                                          + 8
                                          * (((*(_DWORD *)(v34 + 60) == 24) * (((v33 + 4441) | 0x900) + 8425)) ^ (v33 + 6014)))
                              - 8))();
  else
    return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((113 * (a33 == 0)) ^ (v33 - 49))) - 12))();
}

uint64_t sub_1003BD2FC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 8 * (v3 ^ 0x301)))();
  *(_DWORD *)(v0 + 56) = v2;
  return result;
}

uint64_t sub_1003BD354@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v1 == a1) ^ (v2 + 3)) & 1)
                                     * (((v2 + 2011291859) & 0x881E267F) + 5041)) ^ v2)))();
}

uint64_t sub_1003BD3A0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((1840 * ((((261 * (v1 & 0xB71E1FDF ^ 0x3C0)) ^ 0x501) & a1) != 0)) ^ v1 & 0xB71E1FDF)))();
}

uint64_t sub_1003BD3E8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 - 7 + (~(_DWORD)v2 + a2)) = *(_QWORD *)(v4 - 7 + (~(_DWORD)v2 + a2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * ((5473 * (v2 + ((v3 - 1889) | 0x3C5u) - 957 == (a2 & 0xFFFFFFF8))) ^ v3))
                            - 12))();
}

uint64_t sub_1003BD440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 917) | 0x2605) + 261 * (v2 ^ 0x3C0) - 3623) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_1003BD478(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = ((v2 + 8476) ^ 0xFFFFD9CALL) & (v1 - 1);
  *(_BYTE *)(a1 + v5) = *(_BYTE *)(v3 + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((5482 * (v5 == 0)) ^ v2)) - 8))();
}

void sub_1003BD4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t))
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = *(_QWORD *)(v21 + 32);
  v25 = *(_QWORD *)(v21 + 40);
  LODWORD(STACK[0x1DA0]) = 1;
  a21(v22);
  *(_QWORD *)(v25 - 0x74EAC3143D4659D7) = *(_QWORD *)(v23 + 7088);
  *(_DWORD *)(v24 - 0x1D836316B8C08C9CLL) = STACK[0x1D98];
  JUMPOUT(0x1003BB174);
}

uint64_t sub_1003BD508(uint64_t result)
{
  int v1;
  _DWORD *v2;
  int v3;
  char *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  v1 = *(_DWORD *)result;
  v2 = *(_DWORD **)(result + 24);
  v2[2] = 0;
  v3 = v1 + 290670313 * (((result | 0x5A3B95E) - (result & 0x5A3B95E)) ^ 0x2E928097);
  v4 = (char *)*(&off_1004ECA20 + v3 - 178739660) - 12;
  switch(*v2)
  {
    case 0:
    case 5:
    case 0xC:
    case 0x14:
    case 0x21:
    case 0x22:
      goto LABEL_2;
    case 1:
      __asm { BR              X10 }
      return result;
    case 2:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 3:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 4:
      v8 = v2[1];
      if (v8 == 4 || v8 == 5)
      {
        v6 = v3 - 178737928;
LABEL_40:
        __asm { BR              X12 }
      }
      v5 = 1824753533;
      break;
    case 6:
      v6 = 20 * (v3 ^ 0xAA75C8B);
      goto LABEL_40;
    case 7:
      v6 = (v3 - 41004294) & 0xF7CA59FD;
      goto LABEL_40;
    case 8:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 9:
      __asm { BR              X9 }
      return result;
    case 0xA:
      v6 = (v3 - 178740304) | 0x948;
      goto LABEL_40;
    case 0xB:
      v9 = v2[1];
      if (v9 == 2)
      {
        v6 = v3 ^ 0xAA75518;
      }
      else
      {
        if (v9 != 1)
          __asm { BR              X9 }
        v6 = v3 - 178737928;
      }
      goto LABEL_40;
    case 0xD:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 0xE:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 0xF:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 0x10:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 0x12:
      v6 = 10 * (v3 ^ 0xAA75C0A);
      goto LABEL_40;
    case 0x13:
      v6 = 10 * (v3 ^ 0xAA75C0A);
      goto LABEL_40;
    case 0x17:
      v7 = v2[1];
      if (v7 == 1)
        __asm { BR              X9 }
      if (v7 != 2)
        __asm { BR              X9 }
      v6 = (v3 - 178740368) | 0x988;
      goto LABEL_40;
    case 0x18:
      v6 = v3 ^ 0xAA75518;
      goto LABEL_40;
    case 0x19:
      v6 = 508 * (v3 ^ 0xAA75CF1);
      goto LABEL_40;
    case 0x1A:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 0x1B:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 0x1D:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 0x1E:
      v6 = v3 - 178737928;
      goto LABEL_40;
    case 0x1F:
      v6 = (v3 - 178738156) | 0xE4;
      goto LABEL_40;
    case 0x20:
      v6 = v3 - 178737928;
      goto LABEL_40;
    default:
      v2[2] = 130;
LABEL_2:
      v5 = 1824781336;
      break;
  }
  *(_DWORD *)(result + 16) = v5;
  return result;
}

void sub_1003C07C8(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 16) + 396850247 * (((a1 | 0x7AD220D2) - (a1 & 0x7AD220D2)) ^ 0x4920A986);
  v3 = *(_QWORD *)a1;
  v2 = v1 - 742349519 * ((&v2 & 0x566C5642 | ~(&v2 | 0x566C5642)) ^ 0xDAC8DE7E) - 738764939;
  sub_1003CA790((uint64_t)&v2);
  __asm { BR              X13 }
}

void sub_1003C0950(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  unint64_t v8;
  uint64_t v9;

  v7 = *(_BYTE *)(a1 - 0x1132FE166654577ELL);
  v8 = (((_DWORD)a1 * v6) ^ ((a1 * v6) >> 16)) * v6;
  if ((((-51 * BYTE3(v8)) ^ v8 ^ v7 ^ *(_BYTE *)(v3 + (v8 >> 24)) ^ *(_BYTE *)(v1 + (v8 >> 24)) ^ *(_BYTE *)((v8 >> 24) + v2 + 1)) & 0x80u) == 0)
    v9 = 0;
  else
    v9 = -1;
  *(_QWORD *)(v4 + 8) = v9 + v5;
}

uint64_t sub_1003C0B54(uint64_t result)
{
  _DWORD *v1;
  _QWORD *v2;
  int v3;
  void (*v4)(_QWORD);
  void (*v5)(uint64_t *);
  char *v6;
  uint64_t (*v7)(_QWORD);
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  _BOOL4 v13;
  _BOOL4 v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  int v17;

  v1 = *(_DWORD **)result;
  v2 = (_QWORD *)(*(_QWORD *)result + 24);
  v3 = *(_DWORD *)(result + 8)
     + 742349519 * ((-2 - ((result | 0xD55BBC11) + (~(_DWORD)result | 0x2AA443EE))) ^ 0x59FF342D);
  v4 = (void (*)(_QWORD))*(&off_1004ECA20 + v3 + 1501562598);
  v5 = (void (*)(uint64_t *))((char *)*(&off_1004ECA20 + (int)(v3 ^ 0xA67FFEDF)) - 8);
  v6 = (char *)*(&off_1004ECA20 + (int)(v3 ^ 0xA67FFFD6)) - 12;
  v15 = v4;
  switch(**(_DWORD **)result)
  {
    case 1:
      __asm { BR              X8 }
      return result;
    case 2:
      result = ((uint64_t (*)(_QWORD))v4)(*((_QWORD *)v1 + 3));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[39])
      {
        case 1:
          goto LABEL_50;
        case 2:
          goto LABEL_49;
        case 3:
          goto LABEL_48;
        case 4:
          __asm { BR              X9 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          return result;
      }
    case 3:
      __asm { BR              X8 }
      return result;
    case 4:
      __asm { BR              X8 }
      return result;
    case 6:
      result = ((uint64_t (*)(_QWORD))v4)(*((_QWORD *)v1 + 4));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[41])
      {
        case 1:
          goto LABEL_51;
        case 2:
          goto LABEL_24;
        case 3:
          goto LABEL_23;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          return result;
      }
    case 7:
      __asm { BR              X8 }
      return result;
    case 8:
      result = ((uint64_t (*)(_QWORD))v4)(*((_QWORD *)v1 + 3));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[39])
      {
        case 1:
          goto LABEL_50;
        case 2:
          goto LABEL_49;
        case 3:
          goto LABEL_48;
        case 4:
          __asm { BR              X9 }
          return result;
        case 6:
          __asm { BR              X9 }
          return result;
        default:
          return result;
      }
    case 0xA:
      v4(*((_QWORD *)v1 + 4));
      switch(v1[41])
      {
        case 1:
          goto LABEL_12;
        case 2:
          goto LABEL_11;
        case 3:
          v15(*((_QWORD *)v1 + 14));
LABEL_11:
          v15(*((_QWORD *)v1 + 10));
LABEL_12:
          v15(*((_QWORD *)v1 + 6));
          break;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          break;
      }
      result = ((uint64_t (*)(_QWORD))v15)(*((_QWORD *)v1 + 21));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[75])
      {
        case 1:
          goto LABEL_95;
        case 2:
          goto LABEL_94;
        case 3:
          goto LABEL_93;
        case 4:
          __asm { BR              X9 }
          return result;
        case 6:
          __asm { BR              X9 }
          return result;
        default:
          return result;
      }
    case 0xB:
      v8 = v1[1];
      if (v8 == 1)
      {
        v16 = *v2;
        v17 = v3
            - 742349519
            * ((((&v16 | 0xB8DAFEC0) ^ 0xFFFFFFFE) - (~&v16 | 0x4725013F)) ^ 0x347E76FC);
      }
      else
      {
        if (v8 != 2)
          return result;
        v9 = *v2;
        v17 = v3 - 742349519 * ((2 * (&v16 & 0x50F28488) - &v16 - 1358070925) ^ 0xDC560CB0);
        v16 = v9;
      }
      v5(&v16);
      return ((uint64_t (*)(_QWORD))v15)(*v2);
    case 0xD:
      __asm { BR              X8 }
      return result;
    case 0xE:
      v10 = *((_QWORD *)v1 + 22);
      v17 = v3 - 742349519 * ((2 * (&v16 & 0xA9BF8D8) - &v16 - 177993951) ^ 0x863F70E2);
      v16 = v10;
      v5(&v16);
      v15(*((_QWORD *)v1 + 22));
      result = ((uint64_t (*)(_QWORD))v15)(*((_QWORD *)v1 + 5));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[43])
      {
        case 1:
          goto LABEL_52;
        case 2:
          goto LABEL_19;
        case 3:
          v15(*((_QWORD *)v1 + 15));
LABEL_19:
          v15(*((_QWORD *)v1 + 11));
          v7 = (uint64_t (*)(_QWORD))v15;
LABEL_52:
          v12 = v1 + 14;
          goto LABEL_115;
        case 4:
          __asm { BR              X9 }
          return result;
        case 6:
          __asm { BR              X9 }
          return result;
        default:
          return result;
      }
    case 0xF:
      result = ((uint64_t (*)(_QWORD))v4)(*((_QWORD *)v1 + 4));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[41])
      {
        case 1:
          goto LABEL_51;
        case 2:
          goto LABEL_24;
        case 3:
          goto LABEL_23;
        case 4:
          __asm { BR              X9 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          return result;
      }
    case 0x10:
      result = ((uint64_t (*)(_QWORD))v4)(*((_QWORD *)v1 + 4));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[41])
      {
        case 1:
          goto LABEL_51;
        case 2:
          goto LABEL_24;
        case 3:
          goto LABEL_23;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          return result;
      }
    case 0x12:
      result = ((uint64_t (*)(_QWORD))v4)(*((_QWORD *)v1 + 4));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[41])
      {
        case 1:
          goto LABEL_51;
        case 2:
          goto LABEL_24;
        case 3:
LABEL_23:
          v15(*((_QWORD *)v1 + 14));
LABEL_24:
          v15(*((_QWORD *)v1 + 10));
          v7 = (uint64_t (*)(_QWORD))v15;
LABEL_51:
          v12 = v1 + 12;
          goto LABEL_115;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X9 }
          return result;
        default:
          return result;
      }
    case 0x13:
      __asm { BR              X8 }
      return result;
    case 0x18:
      v4(*((_QWORD *)v1 + 20));
      switch(v1[73])
      {
        case 1:
          goto LABEL_29;
        case 2:
          goto LABEL_28;
        case 3:
          v15(*((_QWORD *)v1 + 30));
LABEL_28:
          v15(*((_QWORD *)v1 + 26));
LABEL_29:
          v15(*((_QWORD *)v1 + 22));
          break;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          break;
      }
      v15(*((_QWORD *)v1 + 3));
      switch(v1[39])
      {
        case 1:
          goto LABEL_89;
        case 2:
          goto LABEL_88;
        case 3:
          v15(*((_QWORD *)v1 + 13));
LABEL_88:
          v15(*((_QWORD *)v1 + 9));
LABEL_89:
          v15(*((_QWORD *)v1 + 5));
          break;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          v13 = v1[38] != ((v3 - 1361739229) & 0xAAAA86DF ^ 0x601);
          __asm { BR              X8 }
          return result;
        default:
          break;
      }
      result = ((uint64_t (*)(_QWORD))v15)(*((_QWORD *)v1 + 37));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[107])
      {
        case 1:
          goto LABEL_111;
        case 2:
          goto LABEL_110;
        case 3:
          v15(*((_QWORD *)v1 + 47));
LABEL_110:
          v15(*((_QWORD *)v1 + 43));
          v7 = (uint64_t (*)(_QWORD))v15;
LABEL_111:
          v12 = v1 + 78;
          goto LABEL_115;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          return result;
      }
    case 0x19:
      v4(*((_QWORD *)v1 + 4));
      switch(v1[41])
      {
        case 1:
          goto LABEL_33;
        case 2:
          goto LABEL_32;
        case 3:
          v15(*((_QWORD *)v1 + 14));
LABEL_32:
          v15(*((_QWORD *)v1 + 10));
LABEL_33:
          v15(*((_QWORD *)v1 + 6));
          break;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X9 }
          return result;
        default:
          break;
      }
      result = ((uint64_t (*)(_QWORD))v15)(*((_QWORD *)v1 + 21));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[75])
      {
        case 1:
          goto LABEL_95;
        case 2:
          goto LABEL_94;
        case 3:
LABEL_93:
          v15(*((_QWORD *)v1 + 31));
LABEL_94:
          v15(*((_QWORD *)v1 + 27));
          v7 = (uint64_t (*)(_QWORD))v15;
LABEL_95:
          v12 = v1 + 46;
          goto LABEL_115;
        case 4:
          __asm { BR              X9 }
          return result;
        case 6:
          __asm { BR              X9 }
          return result;
        default:
          return result;
      }
    case 0x1A:
      v4(*((_QWORD *)v1 + 4));
      v11 = v3;
      switch(v1[41])
      {
        case 1:
          goto LABEL_37;
        case 2:
          goto LABEL_36;
        case 3:
          v15(*((_QWORD *)v1 + 14));
LABEL_36:
          v15(*((_QWORD *)v1 + 10));
LABEL_37:
          v11 = v3;
          v15(*((_QWORD *)v1 + 6));
          break;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          break;
      }
      __asm { BR              X8 }
      return result;
    case 0x1B:
      __asm { BR              X8 }
      return result;
    case 0x1E:
      v4(*((_QWORD *)v1 + 8));
      switch(v1[49])
      {
        case 1:
          goto LABEL_42;
        case 2:
          goto LABEL_41;
        case 3:
          v15(*((_QWORD *)v1 + 18));
LABEL_41:
          v15(*((_QWORD *)v1 + 14));
LABEL_42:
          v15(*((_QWORD *)v1 + 10));
          break;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X9 }
          return result;
        default:
          break;
      }
      result = ((uint64_t (*)(_QWORD))v15)(*((_QWORD *)v1 + 25));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[83])
      {
        case 1:
          goto LABEL_105;
        case 2:
          goto LABEL_104;
        case 3:
          goto LABEL_103;
        case 4:
          __asm { BR              X9 }
          return result;
        case 6:
          v14 = v1[82] != ((v3 + 1501563368) ^ 0x6E6);
          __asm { BR              X9 }
          return result;
        default:
          return result;
      }
    case 0x1F:
      v4(*((_QWORD *)v1 + 8));
      switch(v1[49])
      {
        case 1:
          goto LABEL_46;
        case 2:
          goto LABEL_45;
        case 3:
          v15(*((_QWORD *)v1 + 18));
LABEL_45:
          v15(*((_QWORD *)v1 + 14));
LABEL_46:
          v15(*((_QWORD *)v1 + 10));
          break;
        case 4:
          __asm { BR              X9 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          break;
      }
      result = ((uint64_t (*)(_QWORD))v15)(*((_QWORD *)v1 + 25));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[83])
      {
        case 1:
          goto LABEL_105;
        case 2:
          goto LABEL_104;
        case 3:
LABEL_103:
          v15(*((_QWORD *)v1 + 35));
LABEL_104:
          v15(*((_QWORD *)v1 + 31));
          v7 = (uint64_t (*)(_QWORD))v15;
LABEL_105:
          v12 = v1 + 54;
          goto LABEL_115;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X8 }
          return result;
        default:
          return result;
      }
    case 0x20:
      result = ((uint64_t (*)(_QWORD))v4)(*((_QWORD *)v1 + 3));
      v7 = (uint64_t (*)(_QWORD))v15;
      switch(v1[39])
      {
        case 1:
          goto LABEL_50;
        case 2:
          goto LABEL_49;
        case 3:
LABEL_48:
          v15(*((_QWORD *)v1 + 13));
LABEL_49:
          v15(*((_QWORD *)v1 + 9));
          v7 = (uint64_t (*)(_QWORD))v15;
LABEL_50:
          v12 = v1 + 10;
LABEL_115:
          result = v7(*v12);
          break;
        case 4:
          __asm { BR              X8 }
          return result;
        case 6:
          __asm { BR              X9 }
          return result;
        default:
          return result;
      }
      return result;
    default:
      return result;
  }
}

uint64_t sub_1003C5858(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(a2 - 0x1DC39F0167616068);
  *(_DWORD *)(a1 - 0x5C1503E25C92D162) = v2;
  return ((uint64_t (*)(void))*(&off_1004D3EF0 + ((1471 * ((v2 - 1701941273) > 0xFFFFFDFE)) ^ 0x18A8u)))();
}

uint64_t sub_1003C58C0()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * ((13 * (v1 == 1701940760)) ^ 0x18A5u)))();
}

uint64_t sub_1003C5904@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1003C590C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;

  *(_BYTE *)(a1 - 0x5C1503E25C92D1C6 + v4 + v5 + v3 + 1880790885 + 104) = *(_BYTE *)(*(_QWORD *)(a2
                                                                                                 - 0x1DC39F0167616064)
                                                                                     + v4
                                                                                     + v5
                                                                                     + v3
                                                                                     + 1880790885);
  return (*(uint64_t (**)(void))(v2 + 8 * ((4445 * (v3 - 1 == v6 + 1579)) ^ v4)))();
}

void sub_1003C5980()
{
  JUMPOUT(0x1003C5948);
}

uint64_t sub_1003C5988(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = (qword_100506AD8 - qword_100507188) ^ (unint64_t)&v5;
  qword_100507188 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * ((2 * (&v6 & 0x67E34BB0) - &v6 + 404534348) ^ 0x2BEE3D18);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0910[byte_10048C680[(51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8))] ^ 0xB1])
                                   + 513))(&v6);
  result = 148;
  if ((unint64_t)(v7 - 0x5081E7AF7AB67B25) <= 7 && ((1 << (v7 - 37)) & 0x8B) != 0)
  {
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 + 56) + 24 * *(unsigned int *)(a1 + 52)) = v7 - 2058779428;
  }
  return result;
}

void sub_1003C5B18(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v3 = qword_100511250 ^ (unint64_t)&v5 ^ qword_100506AD8;
  qword_100511250 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = a2;
  v6 = -738757634
     - 742349519 * ((-1454764138 - (&v6 | 0xA94A0F96) + (&v6 | 0x56B5F069)) ^ 0x25EE87AA);
  sub_1003CA790((uint64_t)&v6);
  v4 = v8 - 0x4159F3519D14AB52;
  *a1 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_1004ECA20
                                                  + ((51
                                                                                   * (qword_100511250 ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * (qword_100511250 ^ 0xDE ^ qword_100506AD8))] ^ 0x69])
                                                  + 807))((*(_DWORD *)(v8 - 0x4159F3519D14AB52) - 1111770304), 327085394);
  __asm { BR              X11 }
}

uint64_t sub_1003C5CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;

  v7 = (v3 - 2095757011);
  v8 = ((((_DWORD)a2 + (_DWORD)v7) * v4) ^ (((a2 + v7) * v4) >> 16)) * v4;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(v6[405] + (v8 >> 24)) ^ *(_BYTE *)(a2 + v7 - 0x1132FE166654577ELL) ^ *(_BYTE *)(v6[98] + (v8 >> 24) - 3) ^ *(_BYTE *)(v6[778] + (v8 >> 24) - 5) ^ v8 ^ (-45 * ((((((_DWORD)a2 + (_DWORD)v7) * v4) ^ (((a2 + v7) * v4) >> 16)) * v4) >> 24));
  return (*(uint64_t (**)(void))(v2 + 8 * ((13717 * (v3 - 1 == v5)) ^ 0x11DAu)))();
}

uint64_t sub_1003C5D70()
{
  uint64_t v0;
  _DWORD *v1;

  *(_DWORD *)(v0 + 8) = *v1 - 1111770304;
  return 0;
}

uint64_t sub_1003C5DE0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((((v3 | 0x1BA18B22) ^ 0xFFFFFFFE) - (~v3 | 0xE45E74DD)) ^ 0x9705031E)
     + 999201902;
  v3[0] = a1 + 144;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003C5E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100506AD8 - qword_100506B48 - (_QWORD)&v4;
  qword_100506B48 = 1040035123 * v2 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v6 = 1724111581
     - 1162864081 * ((((&v5 | 0x297C464C) ^ 0xFFFFFFFE) - (~&v5 | 0xD683B9B3)) ^ 0x35118CD8);
  v7 = a1 + 8;
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - (51 * v2 + 58)) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 - (51 * v2 + 58)) ^ 0xDE))] ^ 0x14])
                                            + 785)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C5FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100506AD8 - qword_100511450 - (_QWORD)&v4;
  qword_100511450 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v5 = a2;
  v6 = 1724111581 - 1162864081 * (((&v5 | 0xDB27049B) + (~&v5 | 0x24D8FB64)) ^ 0x38B531F1);
  v7 = a1 + 16;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE))] ^ 0xDC])
                                            + 985)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C6108(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = (qword_100506AD8 + qword_1005112B8) ^ (unint64_t)&v4;
  qword_1005112B8 = (1040035123 * v2) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v5 = a2;
  v7 = a1 + 8;
  v6 = 1724111581 - 1162864081 * ((2 * (&v5 & 0x3A2283F0) - &v5 + 1172143119) ^ 0xA64F4964);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - qword_1005112B8) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 - qword_1005112B8) ^ 0xDE))] ^ 0x66])
                                            + 818)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C6250(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_1005071B0];
  qword_1005071B0 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * ((v6 + 799453807 - 2 * (v6 & 0x2FA6B26F)) ^ 0x1C543B3B);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - qword_1005071B0) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 - qword_1005071B0) ^ 0xDE))] ^ 0x66])
                                  + 335))(v6);
  *(_QWORD *)(a1 + 328) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003C63A0(uint64_t a1)
{
  unsigned int v1;

  v1 = (*(_DWORD *)a1)++;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 440 * v1 + 24) = -1;
  return 0;
}

uint64_t sub_1003C63C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = qword_1005114A8 ^ (unint64_t)&v5 ^ qword_100506AD8;
  qword_1005114A8 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = 7305
     - 396850247 * (((v6 | 0x9B369BA0) - v6 + (v6 & 0x64C96458)) ^ 0xA8C412F4);
  v6[0] = a2;
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 + 51 * v3 - 34) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 + 51 * v3 - 34) ^ 0xDE))] ^ 0x14])
                                  + 302))(v6);
  *(_QWORD *)(a1 + 312) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003C6518(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = (qword_100506AD8 + qword_100506BB0) ^ (unint64_t)&v5;
  qword_100506BB0 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305
     - 396850247 * (((v6 | 0x4B0BD208) - v6 + (v6 & 0xB4F42DF0)) ^ 0x78F95B5C);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0610[byte_10048C380[(51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x14])
                                  + 302))(v6);
  *a1 = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003C6668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;

  v5 = (1358963743
      * (((&v4 | 0x2D9E24DB) - &v4 + (&v4 & 0xD261DB20)) ^ 0x6AD0057)) ^ 0xEF6;
  v4 = a2;
  sub_1001B7790((uint64_t)&v4);
  *(_DWORD *)(a1 - 0x760181A250AAE288) = v6 ^ 0xAE23F560;
  return 0;
}

uint64_t sub_1003C6734(_DWORD *a1)
{
  ++*a1;
  return 0;
}

uint64_t sub_1003C6748(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x760181A250AAE250) = *(_DWORD *)(a2 - 0x1DC39F0167616068);
  *(_QWORD *)(a1 - 0x760181A250AAE258) = *(_QWORD *)(a2 - 0x1DC39F0167616064);
  return 0;
}

uint64_t sub_1003C67A0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v3[0] = *(_QWORD *)(a1 + 152) + 272 * (*(_DWORD *)(a1 + 144) - 1) + 136;
  v3[1] = a2;
  v4 = 742349519 * (((v3 | 0xD22235C9) + (~v3 | 0x2DDDCA36)) ^ 0xA179420B) + 999201902;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003C6850(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = qword_100507210 ^ (unint64_t)&v6 ^ qword_100506AD8;
  qword_100507210 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 16) - 1;
  v9 = 7305 - 396850247 * (&v7 ^ 0x33F28954);
  v7 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * v3 + 34) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 + 51 * v3 + 34) ^ 0xDE))] ^ 0x66])
                                   + 313))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 24) + 160 * v4) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003C6990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100506B68 - (_QWORD)&v4 + qword_100506AD8;
  qword_100506B68 = 1040035123 * v2 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v5 = a2;
  v7 = a1;
  v6 = 1724111581 - 1162864081 * (&v5 ^ 0xE392356B);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - (51 * v2 + 58)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v2 + 58)) ^ 0xDE))] ^ 0x6E])
                                            + 896)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C6AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;

  v5 = (1358963743 * ((&v4 - 824789746 - 2 * ((unint64_t)&v4 & 0xCED6B50E)) ^ 0xE5E59182)) ^ 0xEF6;
  v4 = a2;
  sub_1001B7790((uint64_t)&v4);
  *(_DWORD *)(a1 - 0x760181A250AAE264) = v6 ^ 0xAE23F560;
  return 0;
}

uint64_t sub_1003C6B7C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _BYTE v4[8];
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = (unint64_t)&v4[qword_100506AD8 ^ qword_100511438];
  qword_100511438 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v5 = a2;
  v7 = a1 + 144;
  v6 = 1724111581 - 1162864081 * (((&v5 | 0x1C283BA7) - (&v5 & 0x1C283BA7)) ^ 0xFFBA0ECC);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE))] ^ 0x6E])
                                            + 896)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C6CBC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _BYTE v4[8];
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = 1040035123 * ((unint64_t)&v4[qword_100506AD8 - qword_100511288] ^ 0x2A880BDD015215DELL);
  qword_100511288 = 1040035123 * (_QWORD)&v4[qword_100506AD8 - qword_100511288 - 0x2A880BDD015215DELL];
  qword_100506AD8 = v2;
  v6 = 1724111581
     - 1162864081
     * (((&v5 ^ 0xF1C8D4D8) & 0xB1233FFC | ~(&v5 ^ 0xF1C8D4D8 | 0xB1233FFC)) ^ 0x5C8621B0);
  v7 = a1;
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51 * ((v2 + qword_100511288) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((v2 + qword_100511288) ^ 0xDE))] ^ 0x66])
                                            + 818)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C6E08(uint64_t a1)
{
  *(_DWORD *)(a1 + 280) = 0;
  return 0;
}

uint64_t sub_1003C6E14(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v3[0] = a1;
  v3[1] = a2;
  v4 = 742349519 * ((2 * (v3 & 0x585785E0) - v3 + 665352733) ^ 0x54F30DDE) + 999201902;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003C6EB0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  _BYTE v6[8];
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (unint64_t)&v6[qword_1005112D8 + qword_100506AD8];
  qword_1005112D8 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = a2;
  v9 = 7305 - 396850247 * ((2 * (&v7 & 0x29520FA0) - &v7 + 1454239833) ^ 0x655F790D);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - qword_1005112D8) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 - qword_1005112D8) ^ 0xDE))] ^ 0x73])
                                   + 446))(&v7);
  v4 = v8 - 2058779428;
  *(_DWORD *)(a1 + 52) = v8 - 2058779428;
  if (*(_DWORD *)(a1 + 48) <= v4)
    return 4294939488;
  else
    return 0;
}

uint64_t sub_1003C7008(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 ^ qword_100511490) - (_QWORD)&v5;
  qword_100511490 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305
     - 396850247 * ((-232157329 - (&v6 | 0xF2298F6F) + (&v6 | 0xDD67090)) ^ 0x3E24F9C4);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * v3 + 58) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 + 51 * v3 + 58) ^ 0xDE))] ^ 0x73])
                                   + 446))(&v6);
  *(_DWORD *)(a1 + 108) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003C715C(_DWORD *a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 + qword_100506BB8) ^ (unint64_t)&v5;
  qword_100506BB8 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305 - 396850247 * ((2 * (&v6 & 0x298550B8) - &v6 + 1450880838) ^ 0x65882612);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0910[byte_10048C680[(51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8))] ^ 0xE8])
                                   + 391))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003C72A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100507150 - (_QWORD)&v4 + qword_100506AD8;
  qword_100507150 = (1040035123 * v2) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v6 = 1724111581 - 1162864081 * ((((2 * &v5) | 0x599DA030) - &v5 - 751751192) ^ 0xCF5CE573);
  v7 = a1 + 136;
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51 * ((51 * v2) ^ qword_100506AD8)) ^ byte_1004B0610[byte_10048C380[(51 * ((51 * v2) ^ qword_100506AD8))] ^ 0x14])
                                            + 785)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C73E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100506AD8 - qword_100507160 - (_QWORD)&v4;
  qword_100507160 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v6 = 1724111581
     - 1162864081 * ((((2 * &v5) | 0x7FFB77B0) - &v5 + 1073890344) ^ 0x5C6F8EB3);
  v5 = a2;
  v7 = a1 + 8;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * v2 - 34) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 + 51 * v2 - 34) ^ 0xDE))] ^ 0x69])
                                            + 974)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C7528(uint64_t a1)
{
  *(_DWORD *)(a1 + 168) = 0;
  return 0;
}

uint64_t sub_1003C7534(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 + qword_100506B78) ^ (unint64_t)&v5;
  qword_100506B78 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305
     - 396850247 * ((-839236063 - (&v6 | 0xCDFA4621) + (&v6 | 0x3205B9DE)) ^ 0x1F7308A);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * v3 - 34) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((qword_100506AD8 + 51 * v3 - 34) ^ 0xDE))] ^ 0x84])
                                   + 480))(&v6);
  *(_DWORD *)(*(_QWORD *)(a1 + 56) + 24 * *(unsigned int *)(a1 + 52) + 4) = ((v7 - 2058779428) ^ 0xAFFFFBFF)
                                                                            + 2113337300
                                                                            + ((2 * (v7 - 2058779428)) & 0x5FFFF7FE);
  return 0;
}

uint64_t sub_1003C76BC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * (((v3 | 0x50ACE509) + (~v3 | 0xAF531AF6)) ^ 0x23F792CB) + 999201902;
  v3[0] = a1 + 272;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003C7758(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_100506BE0];
  qword_100506BE0 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * ((2 * (v6 & 0x45C2AB0) - v6 - 73149110) ^ 0xC8515C1E);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE))] ^ 0xE8])
                                  + 391))(v6);
  *a1 = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003C78AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  _BYTE v6[8];
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (unint64_t)&v6[qword_100506AD8 ^ qword_100511508];
  qword_100511508 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)a1 - 1;
  v9 = 7305 - 396850247 * ((&v7 & 0x5346688B | ~(&v7 | 0x5346688B)) ^ 0x9F4B1E20);
  v7 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE))] ^ 0x66])
                                   + 335))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 8) + 440 * v4 + 12) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003C7A08(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;

  v2 = (qword_100506AD8 - qword_100511298) ^ (unint64_t)&v5;
  qword_100511298 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 + 152) + 136 * (*(_DWORD *)(a1 + 168) - 1);
  v6 = a2;
  v7 = 1724111581 - 1162864081 * (((&v6 | 0xF404EA4F) + (~&v6 | 0xBFB15B0)) ^ 0x1796DF25);
  v8 = v3;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * v2 - 34) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 + 51 * v2 - 34) ^ 0xDE))] ^ 0x73])
                                            + 929)
                                  - 4))(&v6);
  return (v9 - 1824781336);
}

uint64_t sub_1003C7B58(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  int v6;
  unsigned int v7;

  qword_100506B90 = 1040035123 * (qword_100506B90 ^ (unint64_t)&v4 ^ qword_100506AD8 ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100506B90;
  v5 = a2;
  v7 = 7305 - 396850247 * ((((2 * &v5) | 0x21F8F0D8) - &v5 + 1862502292) ^ 0xA30EF138);
  sub_1003C07C8(&v5);
  *(_DWORD *)(a1 + 76) = v6 - 2058779428;
  return 0;
}

uint64_t sub_1003C7C84(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = v2 + 1;
  v4[0] = *(_QWORD *)(a1 + 16) + 136 * v2;
  v4[1] = a2;
  v5 = 742349519 * ((638292988 - (v4 | 0x260B93FC) + (v4 | 0xD9F46C03)) ^ 0xAAAF1BC0)
     + 999201902;
  sub_1003C925C((uint64_t)v4);
  return 0;
}

uint64_t sub_1003C7D40(_DWORD *a1)
{
  ++*a1;
  return 0;
}

uint64_t sub_1003C7D54(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100511350 + qword_100506AD8];
  qword_100511350 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * (((v6 | 0xE049E2F4) - (v6 & 0xE049E2F4)) ^ 0xD3BB6BA0);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 + qword_100511350) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((qword_100506AD8 + qword_100511350) ^ 0xDE))] ^ 0x3F])
                                  + 402))(v6);
  *(_QWORD *)(a1 + 16) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003C7EA0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 - qword_100511320) ^ (unint64_t)&v5;
  qword_100511320 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * ((&v6 & 0x3DD9496F | ~(&v6 | 0x3DD9496F)) ^ 0xF1D43FC4);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - 51 * (v3 + 34)) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 - 51 * (v3 + 34)) ^ 0xDE))] ^ 0x66])
                                   + 335))(&v6);
  *(_DWORD *)(a1 + 8) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003C7FE8(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 32);
  return 0;
}

uint64_t sub_1003C7FFC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;

  v2 = (unint64_t)&v5[qword_100507168 + qword_100506AD8];
  qword_100507168 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 + 152) + 272 * (*(_DWORD *)(a1 + 144) - 1);
  v7 = 1724111581 - 1162864081 * (((&v6 | 0xF63B3F1) + (~&v6 | 0xF09C4C0E)) ^ 0xECF1869B);
  v8 = v3;
  v6 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * (v2 + 34)) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 + 51 * (v2 + 34)) ^ 0xDE))] ^ 0x14])
                                            + 785)
                                  - 4))(&v6);
  return (v9 - 1824781336);
}

uint64_t sub_1003C8150(_DWORD *a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (unint64_t)&v5[qword_100506AD8 ^ qword_100506BC0];
  qword_100506BC0 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305
     - 396850247
     * (((&v6 | 0x487468D4) - &v6 + (&v6 & 0xB78B9728)) ^ 0x7B86E180);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x69])
                                   + 491))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003C8298(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 32);
  return 0;
}

uint64_t sub_1003C82AC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((v3 & 0x93AA3DD8 | ~(v3 | 0x93AA3DD8)) ^ 0x1F0EB5E4) + 999201902;
  v3[0] = a1 + 8;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003C8348(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = a2;
  v5 = -738757634 - 742349519 * ((((2 * &v5) | 0x83BAF3C8) - &v5 - 1105033700) ^ 0x32860E27);
  sub_1003CA790((uint64_t)&v5);
  v3 = v7;
  *(_QWORD *)(*(_QWORD *)(a1 + 56) + 24 * *(unsigned int *)(a1 + 52) + 16) = *(_QWORD *)(v7 - 0x4159F3519D14AB4ELL);
  *(_DWORD *)(*(_QWORD *)(a1 + 56) + 24 * *(unsigned int *)(a1 + 52) + 12) = *(_DWORD *)(v3 - 0x4159F3519D14AB52);
  return 0;
}

uint64_t sub_1003C843C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _BYTE v4[8];
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  v2 = (unint64_t)&v4[qword_100506AD8 - qword_100511418];
  qword_100511418 = 1040035123 * v2 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v8 = *(_QWORD *)(a1 + 40) + 72 * (*(_DWORD *)(a1 + 32) - 1) + 0x5D2B531B7F4FB0AALL;
  v6 = 2128975349 * ((&v5 - 1130971351 - 2 * ((unint64_t)&v5 & 0xBC96BF29)) ^ 0x3F05EA30)
     + 647507330;
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * v2 + 58) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * v2 + 58) ^ 0xDE))] ^ 0xFB])
                                            + 847)
                                  - 8))(&v5);
  return (v7 - 1824781336);
}

uint64_t sub_1003C85A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) + 32 * *(_QWORD *)(a1 - 0x5D2B531B7F4FB092);
  v5 = (380477743 * (v4 ^ 0x50AD9CC3)) ^ 0x116BB4F8;
  v4[0] = a2;
  v4[1] = v2 - 0x103CF5EF56CF6460;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003C8664(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = qword_100507198 - (_QWORD)&v6 + qword_100506AD8;
  qword_100507198 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 128) - 1;
  v9 = 7305 - 396850247 * ((((2 * &v7) | 0x755EC82E) - &v7 - 984572951) ^ 0x95DED43);
  v7 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * v3 + 34) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * v3 + 34) ^ 0xDE))] ^ 0x6E])
                                   + 413))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 120) + 4 * v4) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003C87B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  _BYTE v6[8];
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (unint64_t)&v6[qword_100506AD8 ^ qword_100511360];
  qword_100511360 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)a1 - 1;
  v7 = a2;
  v9 = 7305 - 396850247 * ((2 * (&v7 & 0x4FFD0CB0) - &v7 - 1341983925) ^ 0x83F07A1F);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * v3 + 58) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * v3 + 58) ^ 0xDE))] ^ 0xE8])
                                   + 391))(&v7);
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 440 * v4 + 24) = (v8 - 2058779428);
  return 0;
}

uint64_t sub_1003C8918(uint64_t a1)
{
  uint64_t v1;
  char v3;

  v1 = (qword_100506AD8 ^ qword_1005070F8) - (_QWORD)&v3;
  qword_1005070F8 = 1040035123 * v1 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v1 ^ 0x2A880BDD015215DELL);
  *(_DWORD *)(a1 - 0x5D2B531B7F4FB08ALL) = 4;
  *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1004ECA20
                                                                                      + ((51 * ((qword_100506AD8 + qword_1005070F8) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + qword_1005070F8) ^ 0xDE))] ^ 0x1A])
                                                                                      + 740))(128, 0x10200406C4767B9)+ 0x5D2B531B7F4FB0A2;
  return 0;
}

uint64_t sub_1003C8A34(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  v2 = (unint64_t)&v5[qword_100506AD8 - qword_100511280];
  qword_100511280 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 + 24) + 72 * (*(_DWORD *)(a1 + 16) - 1) + 0xDE541BB94F3E538;
  v7 = 2128975349 * ((2 * (&v6 & 0x3A462238) - &v6 - 977674813) ^ 0x462A88DA) + 647507330;
  v9 = v3;
  v6 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE))] ^ 0x66])
                                            + 858)
                                  - 8))(&v6);
  return (v8 - 1824781336);
}

uint64_t sub_1003C8B9C(uint64_t a1, uint64_t a2)
{
  char v4;
  _QWORD v5[2];
  unsigned int v6;

  qword_100511498 = 1040035123 * (((qword_100506AD8 ^ qword_100511498) - (_QWORD)&v4) ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100511498;
  v6 = 7305 - 396850247 * (v5 ^ 0x33F28954);
  v5[0] = a2;
  sub_1003C07C8(v5);
  *(_QWORD *)(a1 + 32) = v5[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003C8CB4(_DWORD *a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = qword_100506AD8 - qword_100511328 - (_QWORD)&v5;
  qword_100511328 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * ((&v6 + 1228359373 - 2 * (&v6 & 0x493746CD)) ^ 0x7AC5CF99);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                   + 335))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003C8DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = (qword_100506AD8 ^ qword_100507178) - (_QWORD)&v4;
  qword_100507178 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v5 = a2;
  v7 = a1;
  v6 = 1724111581 - 1162864081 * (&v5 ^ 0xE392356B);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * (v2 + 34)) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 + 51 * (v2 + 34)) ^ 0xDE))] ^ 0x92])
                                            + 829)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003C8F20(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * (v3 ^ 0x735B77C3) + 999201902;
  v3[0] = a1 + 8;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003C8FA0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (qword_100506AD8 - qword_100506B88) ^ (unint64_t)&v6;
  qword_100506B88 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)a1 - 1;
  v7 = a2;
  v9 = 7305 - 396850247 * (&v7 ^ 0x33F28954);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * v3 - 34) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * v3 - 34) ^ 0xDE))] ^ 0xB1])
                                   + 513))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 8) + 72 * v4 - 0x4F46115FEA5BCB92) = v8
                                                                      - ((2 * v8 + 177408440) & 0x15408F7C)
                                                                      - 1880503142;
  return 0;
}

uint64_t sub_1003C9108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;

  v2 = qword_100506AD8 - qword_100507170 - (_QWORD)&v5;
  qword_100507170 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 + 16) + 136 * (*(_DWORD *)(a1 + 4) - 1);
  v7 = 1724111581 - 1162864081 * ((&v6 & 0x5B950998 | ~(&v6 | 0x5B950998)) ^ 0x47F8C30C);
  v8 = v3;
  v6 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE))] ^ 0x14])
                                            + 785)
                                  - 4))(&v6);
  return (v9 - 1824781336);
}

uint64_t sub_1003C925C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  unsigned int v6;

  v1 = *(_DWORD *)(a1 + 16) - 742349519 * ((2 * (a1 & 0x7701C6DE) - a1 + 150878497) ^ 0x7BA54EE2);
  v2 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = v1 - 396850247 * (&v4 ^ 0x33F28954) - 999194597;
  result = ((uint64_t (*)(uint64_t *))*(&off_1004ECA20 + (v1 ^ 0x3B8E9E74)))(&v4);
  *(_DWORD *)(v2 + 132) = v5 - 2058779428;
  return result;
}

uint64_t sub_1003C934C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;

  v2 = (unint64_t)&v5[qword_100507148 + qword_100506AD8];
  qword_100507148 = 1040035123 * v2 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 + 160) + 136 * (*(_DWORD *)(a1 + 168) - 1);
  v6 = a2;
  v8 = v3;
  v7 = 1724111581
     - 1162864081 * ((741946179 - (&v6 | 0x2C393343) + (&v6 | 0xD3C6CCBC)) ^ 0x3054F9D7);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * v2 + 34) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * v2 + 34) ^ 0xDE))] ^ 0xE8])
                                            + 874)
                                  - 4))(&v6);
  return (v9 - 1824781336);
}

uint64_t sub_1003C94AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL);
  v5 = (380477743 * (((v4 | 0xD22F612D) - (v4 & 0xD22F612D)) ^ 0x8282FDEE)) ^ 0x116BB4F8;
  v4[0] = a2;
  v4[1] = v2;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

double sub_1003C955C(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(a1 + 8);
  result = 0.0;
  *(_OWORD *)(v1 - 0x5C1503E25C92CF4ELL) = 0u;
  *(_QWORD *)(v1 - 0x5C1503E25C92CF3ELL) = 0x1132FE166654577ELL;
  *(_QWORD *)(v1 - 0x5C1503E25C92CF36) = 0x1132FE166654577ELL;
  *(_QWORD *)(v1 - 0x5C1503E25C92CF2ELL) = 0x65718E1865718E18;
  *(_DWORD *)(v1 - 0x5C1503E25C92CF16) = 0;
  *(_DWORD *)(v1 - 0x5C1503E25C92CF06) = 0;
  *(_DWORD *)(v1 - 0x5C1503E25C92CEF6) = 0;
  *(_QWORD *)(v1 - 0x5C1503E25C92CF0ELL) = 0;
  *(_QWORD *)(v1 - 0x5C1503E25C92CEFELL) = 0;
  *(_QWORD *)(v1 - 0x5C1503E25C92CEEELL) = 0;
  *(_DWORD *)(v1 - 0x5C1503E25C92CEDELL) = 0;
  *(_DWORD *)(v1 - 0x5C1503E25C92CECELL) = 0;
  *(_DWORD *)(v1 - 0x5C1503E25C92CEBELL) = 0;
  *(_DWORD *)(v1 - 0x5C1503E25C92CEAELL) = 0;
  *(_QWORD *)(v1 - 0x5C1503E25C92CED6) = 0x4F46115FEA5BCB92;
  *(_QWORD *)(v1 - 0x5C1503E25C92CEC6) = 0x4F46115FEA5BCB92;
  *(_QWORD *)(v1 - 0x5C1503E25C92CEB6) = 0;
  *(_QWORD *)(v1 - 0x5C1503E25C92CEA6) = 0;
  return result;
}

uint64_t sub_1003C9700(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((2 * (v3 & 0x1B1674C0) - v3 - 454456515) ^ 0x97B2FCFE) + 999201902;
  v3[0] = a1 + 8;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003C97A0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  *(_DWORD *)(a1 + 144) = 0;
  v3[0] = a1 + 8;
  v3[1] = a2;
  v4 = 742349519 * ((((v3 | 0x844D0442) ^ 0xFFFFFFFE) - (~v3 | 0x7BB2FBBD)) ^ 0x8E98C7E)
     + 999201902;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003C9844(uint64_t a1, uint64_t a2)
{
  _BYTE v3[8];
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;

  qword_100511430 = 1040035123 * ((unint64_t)&v3[qword_100511430 + qword_100506AD8] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100511430;
  v6 = a1 + 176;
  v5 = 1724111581
     - 1162864081 * ((&v4 + 411739721 - 2 * ((unint64_t)&v4 & 0x188AA649)) ^ 0xFB189322);
  v4 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51 * ((2 * qword_100511430) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((2 * qword_100511430) ^ 0xDE))] ^ 0x66])
                                            + 818)
                                  - 4))(&v4);
  return (v7 - 1824781336);
}

uint64_t sub_1003C9980(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = qword_100506AD8 - qword_1005071A0 - (_QWORD)&v5;
  qword_1005071A0 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305
     - 396850247 * ((((&v6 | 0x5B638152) ^ 0xFFFFFFFE) - (~&v6 | 0xA49C7EAD)) ^ 0x976EF7F9);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - qword_1005071A0) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - qword_1005071A0) ^ 0xDE))] ^ 0xB1])
                                   + 513))(&v6);
  *(_DWORD *)(a1 + 44) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003C9ACC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int v4;

  result = ((uint64_t (*)(uint64_t *, _QWORD))*(&off_1004ECA20
                                                       + (int)((*(_DWORD *)a1
                                                              + 2059133353
                                                              * ((-90711149 - (a1 | 0xFA97DB93) + (a1 | 0x568246C)) ^ 0x2ED44444)) ^ 0x295360BC)))(&v3, 0);
  *(_QWORD *)(a1 + 8) = 1000 * v3 + v4 / 1000 + 0x5081E6CBB30F4724;
  return result;
}

uint64_t sub_1003C9B9C(_DWORD *a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (unint64_t)&v5[qword_100506AD8 ^ qword_100506BD8];
  qword_100506BD8 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305 - 396850247 * ((((2 * &v6) | 0x9E9BEBA) - &v6 - 83156829) ^ 0x37065609);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE)) ^ byte_100466A20[byte_10042E0D0[(51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE))] ^ 0xFC])
                                   + 435))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003C9CE0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_100506BC8];
  qword_100506BC8 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * (((v6 | 0x7345E69) + (~v6 | 0xF8CBA196)) ^ 0x34C6D73C);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - 51 * (v3 + 34)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - 51 * (v3 + 34)) ^ 0xDE))] ^ 0x66])
                                  + 313))(v6);
  *(_QWORD *)(a1 + 16) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003C9E30(uint64_t a1)
{
  char v2;

  qword_1005113E8 = 1040035123 * ((qword_100506AD8 + qword_1005113E8) ^ (unint64_t)&v2 ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_1005113E8;
  *(_DWORD *)(a1 - 0x5D2B531B7F4FB08ALL) = 1;
  *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1004ECA20
                                                                                      + ((51 * ((qword_100506AD8 + qword_1005113E8) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 + qword_1005113E8) ^ 0xDE))] ^ 0x2E])
                                                                                      + 840))(32, 0x10200406C4767B9)+ 0x5D2B531B7F4FB0A2;
  return 0;
}

uint64_t sub_1003C9F44(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506AD8 ^ qword_1005071C0];
  qword_1005071C0 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = 7305 - 396850247 * ((v6 - 1161927482 - 2 * (v6 & 0xBABE64C6)) ^ 0x894CED92);
  v6[0] = a2;
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 + qword_1005071C0) ^ 0xDE)) ^ byte_100466A20[byte_10042E0D0[(51 * ((qword_100506AD8 + qword_1005071C0) ^ 0xDE))] ^ 0xFC])
                                  + 435))(v6);
  *a1 = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CA090(uint64_t a1, uint64_t a2)
{
  _BYTE v3[8];
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  qword_1005112A0 = 1040035123 * ((unint64_t)&v3[qword_1005112A0 + qword_100506AD8] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_1005112A0;
  v4 = a2;
  v6 = a1;
  v5 = 1724111581 - 1162864081 * ((&v4 - 946787700 - 2 * (&v4 & 0xC7912A8C)) ^ 0x24031FE7);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51 * ((2 * qword_1005112A0) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((2 * qword_1005112A0) ^ 0xDE))] ^ 0xE8])
                                            + 874)
                                  - 4))(&v4);
  return (v7 - 1824781336);
}

uint64_t sub_1003CA1C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_1005112F8];
  qword_1005112F8 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305
     - 396850247 * (((v6 | 0x67E819AB) - v6 + (v6 & 0x9817E650)) ^ 0x541A90FF);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x69])
                                  + 491))(v6);
  *(_QWORD *)(a1 + 8) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CA31C(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  _QWORD v4[2];
  int v5;

  v2 = *(_DWORD *)(a1 + 144);
  *(_DWORD *)(a1 + 144) = v2 + 1;
  v4[0] = *(_QWORD *)(a1 + 152) + 272 * v2;
  v4[1] = a2;
  v5 = 742349519 * ((v4 - 555734242 - 2 * ((unint64_t)v4 & 0xDEE02B1E)) ^ 0xADBB5CDD) + 999201902;
  sub_1003C925C((uint64_t)v4);
  return 0;
}

uint64_t sub_1003CA3CC(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 8) = 0x4F46115FEA5BCB92;
  *(_QWORD *)(a1 + 24) = 0x4F46115FEA5BCB92;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  return 0;
}

uint64_t sub_1003CA404(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _BYTE v4[8];
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = (unint64_t)&v4[qword_100506AD8 - qword_1005112C8];
  qword_1005112C8 = 1040035123 * v2 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v7 = a1;
  v6 = 1724111581 - 1162864081 * (((&v5 | 0xF8E93AC3) + (~&v5 | 0x716C53C)) ^ 0x1B7B0FA9);
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - (51 * v2 + 34)) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((qword_100506AD8 - (51 * v2 + 34)) ^ 0xDE))] ^ 0x1C])
                                            + 840)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CA540(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  _BYTE v6[8];
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (unint64_t)&v6[qword_100506AD8 - qword_100506C00];
  qword_100506C00 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 32) - 1;
  v7 = a2;
  v9 = 7305 - 396850247 * ((((2 * &v7) | 0x1127BAB6) - &v7 - 143908187) ^ 0x3B61540F);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0610[byte_10048C380[(51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x14])
                                   + 302))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 40) + 440 * v4) = v8 - 2058779428;
  return 0;
}

_BYTE *sub_1003CA69C(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_1003CA72C + 4 * byte_10042E2D7[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_1003CA790(uint64_t result)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 8);
  return result;
}

uint64_t sub_1003CA79C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v3[0] = a1 + 176;
  v3[1] = a2;
  v4 = 742349519 * ((v3 & 0x9C3F2AA8 | ~(v3 | 0x9C3F2AA8)) ^ 0x109BA294) + 999201902;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CA838(_DWORD *a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 ^ qword_100511318) - (_QWORD)&v5;
  qword_100511318 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * ((2 * (&v6 & 0x3ED6B00) - &v6 + 2081592568) ^ 0x4FE01DAC);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + qword_100511318) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 + qword_100511318) ^ 0xDE))] ^ 0x14])
                                   + 302))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CA984(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_1005114F0];
  qword_1005114F0 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305 - 396850247 * ((&v6 & 0x43F8DC12 | ~(&v6 | 0x43F8DC12)) ^ 0x8FF5AAB9);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * v3 + 34) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((qword_100506AD8 + 51 * v3 + 34) ^ 0xDE))] ^ 0x1C])
                                   + 357))(&v6);
  *(_DWORD *)(a1 + 8) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CAAC8(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 4);
  return 0;
}

uint64_t sub_1003CAADC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 + qword_1005114E0) ^ (unint64_t)&v5;
  qword_1005114E0 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * (&v6 ^ 0x33F28954);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0910[byte_10048C680[(51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x1A])
                                   + 424))(&v6);
  *(_DWORD *)(a1 + 160) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CAC08(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_100506BF8];
  qword_100506BF8 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = 7305 - 396850247 * (((v6 | 0x5BA89FDE) - (v6 & 0x5BA89FDE)) ^ 0x685A168A);
  v6[0] = a2;
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 + 51 * v3 - 34) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 + 51 * v3 - 34) ^ 0xDE))] ^ 0x2E])
                                  + 524))(v6);
  *a1 = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CAD54(_DWORD *a1)
{
  ++*a1;
  return 0;
}

uint64_t sub_1003CAD68(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;

  v2 = (qword_100506AD8 - qword_100507128) ^ (unint64_t)&v4;
  qword_100507128 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v8 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL);
  v5 = a2;
  v6 = 2128975349 * (&v5 ^ 0x83935519) + 647507330;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE))] ^ 0xFB])
                                            + 847)
                                  - 8))(&v5);
  return (v7 - 1824781336);
}

uint64_t sub_1003CAEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  unsigned int v7;

  v2 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB0A2);
  v3 = (*(_DWORD *)(v2 + 24) - 1);
  v4 = *(_QWORD *)(v2 + 16);
  v7 = (380477743 * ((((2 * v6) | 0x9B355F74) - v6 + 845500486) ^ 0x9D373379)) ^ 0x116BB4F8;
  v6[0] = a2;
  v6[1] = v4 + 32 * v3;
  sub_1003D29A0((uint64_t)v6);
  return 0;
}

uint64_t sub_1003CAF60(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100511470 ^ (unint64_t)&v4 ^ qword_100506AD8;
  qword_100511470 = 1040035123 * v2 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v6 = 1724111581 - 1162864081 * ((((2 * &v5) | 0x94C88E5C) - &v5 + 899397842) ^ 0x29F67245);
  v7 = a1 + 16;
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((51 * v2 + 58) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * v2 + 58) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                            + 796)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CB0A4(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)a1 - 1;
  *(_DWORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB72) = -1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB82) = 0x5D2B531B7F4FB0A2;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB7ALL) = 0x5081E7AF7AB67B24;
  *(_WORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB6ELL) = -1;
  *(_WORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB6CLL) = -1;
  *(_DWORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB52) = -1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB62) = 0x5D2B531B7F4FB0A2;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB5ALL) = 0x5081E7AF7AB67B24;
  *(_WORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB4ELL) = 0;
  *(_WORD *)(*(_QWORD *)(a1 + 8) + 72 * v1 - 0x4F46115FEA5BCB4CLL) = 0;
  return 0;
}

uint64_t sub_1003CB1F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  v3 = (qword_100506AD8 + qword_100507180) ^ (unint64_t)&v7;
  qword_100507180 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v9 = a2;
  v8 = -738757634 - 742349519 * ((&v8 & 0xF2F61F5E | ~(&v8 | 0xF2F61F5E)) ^ 0x7E529762);
  sub_1003CA790((uint64_t)&v8);
  v4 = *(_QWORD *)(v10 - 0x4159F3519D14AB4ELL);
  v5 = 290670313 * ((2 * (&v8 & 0x60D371B0) - &v8 - 1624469940) ^ 0xB41DB785);
  v12 = *(_DWORD *)(v10 - 0x4159F3519D14AB52)
      - v5
      - 2
      * ((*(_DWORD *)(v10 - 0x4159F3519D14AB52) + 498842432) & 0x17524201 ^ *(_DWORD *)(v10 - 0x4159F3519D14AB52) & 1)
      - 720503488;
  v11 = a1;
  v9 = v4;
  v8 = 178740468 - v5;
  ((void (*)(unsigned int *))((char *)*(&off_1004ECA20
                                                 + ((51
                                                                                  * ((qword_100506AD8 - qword_100507180) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - qword_100507180) ^ 0xDE))] ^ 0xB1])
                                                 + 76)
                                       - 8))(&v8);
  return (v10 - 1824781336);
}

uint64_t sub_1003CB414(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((1186433216 - (v3 | 0x46B788C0) + (v3 | 0xB948773F)) ^ 0xCA1300FC)
     + 999201902;
  v3[0] = a1 + 8;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CB4BC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v3 = (qword_100506AD8 + qword_100506B70) ^ (unint64_t)&v8;
  qword_100506B70 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v10 = a2;
  v9 = -738757634 - 742349519 * (((&v9 | 0x597BCA4E) - (&v9 & 0x597BCA4E)) ^ 0x2A20BD8D);
  sub_1003CA790((uint64_t)&v9);
  v4 = *(_QWORD *)(v11 - 0x4159F3519D14AB4ELL);
  v5 = *(_QWORD *)(a1 + 40) + 440 * (*(_DWORD *)(a1 + 32) - 1) + 8;
  v6 = 290670313 * ((((2 * &v9) | 0xD74AD82) - &v9 + 2034608447) ^ 0xAD8B6F08);
  v13 = *(_DWORD *)(v11 - 0x4159F3519D14AB52)
      - v6
      - 2
      * ((*(_DWORD *)(v11 - 0x4159F3519D14AB52) + 498842432) & 0x17524209 ^ *(_DWORD *)(v11 - 0x4159F3519D14AB52) & 9)
      - 720503488;
  v9 = 178740468 - v6;
  v10 = v4;
  v12 = v5;
  ((void (*)(unsigned int *))((char *)*(&off_1004ECA20
                                                 + ((51 * ((qword_100506AD8 + qword_100506B70) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 + qword_100506B70) ^ 0xDE))] ^ 0x66])
                                                 - 102)
                                       - 8))(&v9);
  return (v11 - 1824781336);
}

uint64_t sub_1003CB6F0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;

  v2 = (qword_100506AD8 - qword_100506B60) ^ (unint64_t)&v5;
  qword_100506B60 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 + 24) + 136 * (*(_DWORD *)(a1 + 4) - 1);
  v6 = a2;
  v7 = 1724111581 - 1162864081 * (&v6 ^ 0xE392356B);
  v8 = v3;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((51 * v2 - 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_100466A20[byte_10042E0D0[(51 * ((51 * v2 - 34) ^ 0xDE ^ qword_100506AD8))] ^ 0xFC])
                                            + 918)
                                  - 4))(&v6);
  return (v9 - 1824781336);
}

uint64_t sub_1003CB820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100506B50 - (_QWORD)&v4 + qword_100506AD8;
  qword_100506B50 = 1040035123 * v2 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v6 = 1724111581 - 1162864081 * (&v5 ^ 0xE392356B);
  v7 = a1 + 144;
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((51 * v2 + 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0710[byte_10048C480[(51 * ((51 * v2 + 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x84])
                                            + 963)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CB948(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 48);
  return 0;
}

uint64_t sub_1003CB95C(uint64_t a1)
{
  ++*(_DWORD *)(a1 - 0x5D2B531B7F4FB08ALL);
  return 0;
}

uint64_t sub_1003CB980(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = (qword_100506AD8 + qword_100507158) ^ (unint64_t)&v4;
  qword_100507158 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v6 = 1724111581 - 1162864081 * (((&v5 | 0x2A4019A0) - (&v5 & 0x2A4019A0)) ^ 0xC9D22CCB);
  v7 = a1 + 8;
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * v2 - 34) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * v2 - 34) ^ 0xDE))] ^ 0x6E])
                                            + 896)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CBAC0(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 16);
  return 0;
}

uint64_t sub_1003CBAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = -738757634 - 742349519 * (((&v5 | 0x7BB80D67) - (&v5 & 0x7BB80D67)) ^ 0x8E37AA4);
  v6 = a2;
  sub_1003CA790((uint64_t)&v5);
  v3 = v7;
  *(_QWORD *)(*(_QWORD *)(a1 - 0x5D2B531B7F4FB0A2) + 8) = *(_QWORD *)(v7 - 0x4159F3519D14AB4ELL);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x5D2B531B7F4FB0A2) + 28) = *(_DWORD *)(v3 - 0x4159F3519D14AB52);
  return 0;
}

uint64_t sub_1003CBBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;

  v4 = a2;
  v5 = (1358963743
      * (((&v4 | 0xA7AAEAD5) - &v4 + (&v4 & 0x58551528)) ^ 0x8C99CE59)) ^ 0xEF6;
  sub_1001B7790((uint64_t)&v4);
  *(_DWORD *)(a1 - 0x760181A250AAE260) = v6 ^ 0xAE23F560;
  return 0;
}

uint64_t sub_1003CBC90(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 16);
  return 0;
}

uint64_t sub_1003CBCA4(_DWORD *a1)
{
  ++*a1;
  return 0;
}

uint64_t sub_1003CBCB8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _BYTE v4[8];
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;

  v2 = (unint64_t)&v4[qword_100506AD8 - qword_100506B28];
  qword_100506B28 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v8 = *(_QWORD *)(a1 + 8) + 72 * (*(_DWORD *)a1 - 1) + 0xDE541BB94F3E538;
  v6 = 2128975349 * (((&v5 | 0x89709674) - (&v5 & 0x89709674)) ^ 0xAE3C36D) + 647507330;
  v5 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((51 * (v2 + 34)) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * (v2 + 34)) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                            + 836)
                                  - 8))(&v5);
  return (v7 - 1824781336);
}

uint64_t sub_1003CBE20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100506AD8 - qword_1005112C0 - (_QWORD)&v4;
  qword_1005112C0 = (1040035123 * v2) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v7 = a1 + 40;
  v5 = a2;
  v6 = 1724111581 - 1162864081 * ((((2 * &v5) | 0x55643F16) - &v5 - 716316555) ^ 0xC9202AE0);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + qword_1005112C0) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + qword_1005112C0) ^ 0xDE))] ^ 0xB1])
                                            + 996)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CBF64(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (unint64_t)&v5[qword_100506BE8 + qword_100506AD8];
  qword_100506BE8 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * ((2 * (&v6 & 0x363F1AB8) - &v6 - 910105278) ^ 0xFA326C16);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - 51 * (v3 + 34)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - 51 * (v3 + 34)) ^ 0xDE))] ^ 0x69])
                                   + 491))(&v6);
  *(_DWORD *)(a1 + 156) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CC0B0(uint64_t a1, uint64_t a2)
{
  _BYTE v3[8];
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  qword_100511468 = 1040035123 * ((unint64_t)&v3[qword_100511468 + qword_100506AD8] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100511468;
  v6 = a1 + 8;
  v5 = 1724111581
     - 1162864081 * ((-1316333084 - (&v4 | 0xB18A59E4) + (&v4 | 0x4E75A61B)) ^ 0xADE79370);
  v4 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51 * ((2 * qword_100511468) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((2 * qword_100511468) ^ 0xDE))] ^ 0x2E])
                                            + 1007)
                                  - 4))(&v4);
  return (v7 - 1824781336);
}

uint64_t sub_1003CC1F8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * (((v3 | 0xA80F4C53) + (~v3 | 0x57F0B3AC)) ^ 0xDB543B91) + 999201902;
  v3[0] = a1 + 8;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CC294(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = qword_100511358 ^ (unint64_t)&v6 ^ qword_100506AD8;
  qword_100511358 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 32) - 1;
  v7 = a2;
  v9 = 7305 - 396850247 * ((&v7 & 0x80411185 | ~(&v7 | 0x80411185)) ^ 0x4C4C672E);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                   + 335))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 40) + 440 * v4 + 12) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003CC3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = (qword_100506AD8 ^ qword_1005112B0) - (_QWORD)&v4;
  qword_1005112B0 = 1040035123 * v2 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v5 = a2;
  v6 = 1724111581
     - 1162864081 * ((999829198 - (&v5 | 0x3B982ECE) + (&v5 | 0xC467D131)) ^ 0x27F5E45A);
  v7 = a1 + 136;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - (51 * v2 + 58)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - (51 * v2 + 58)) ^ 0xDE))] ^ 0x66])
                                            + 796)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CC540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL);
  v5 = (380477743 * (((v4 | 0x9DA8ACAF) - v4 + (v4 & 0x62575350)) ^ 0xCD05306C)) ^ 0x116BB4F8;
  v4[0] = a2;
  v4[1] = v2 + 64;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003CC5F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = 1040035123 * ((qword_100506AD8 - qword_100511338) ^ (unint64_t)&v6 ^ 0x2A880BDD015215DELL);
  qword_100511338 = v3;
  qword_100506AD8 = v3;
  v4 = *(_DWORD *)(a1 + 280);
  *(_DWORD *)(a1 + 280) = v4 + 1;
  v7 = a2;
  v9 = 7305 - 396850247 * ((&v7 & 0xDEF359D | ~(&v7 | 0xDEF359D)) ^ 0xC1E24336);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((2 * v3) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((2 * v3) ^ 0xDE))] ^ 0x14])
                                   + 302))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 272) + 24 * v4) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003CC750(_DWORD *a1)
{
  *a1 = 0;
  a1[4] = 0;
  a1[8] = 0;
  return 0;
}

uint64_t sub_1003CC764(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = qword_1005114F8 - (_QWORD)&v5 + qword_100506AD8;
  qword_1005114F8 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305
     - 396850247
     * (((&v6 | 0x2E3D6BDF) - &v6 + (&v6 & 0xD1C29420)) ^ 0x1DCFE28B);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((51 * v3 + 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                   + 335))(&v6);
  *(_DWORD *)(a1 + 12) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CC8B0(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 32);
  return 0;
}

uint64_t sub_1003CC8C4(_DWORD *a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 - qword_100511340) ^ (unint64_t)&v5;
  qword_100511340 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * ((2 * (&v6 & 0x33380380) - &v6 - 859308935) ^ 0xFF35752D);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE))] ^ 0x1A])
                                   + 424))(&v6);
  *a1 = v7 - 2058779428;
  a1[1] = 0;
  return 0;
}

uint64_t sub_1003CCA10(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((1151579666 - (v3 | 0x44A3B612) + (v3 | 0xBB5C49ED)) ^ 0xC8073E2E)
     + 999201902;
  v3[0] = a1;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CCAB4(_DWORD *a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 ^ qword_1005114C8) - (_QWORD)&v5;
  qword_1005114C8 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305
     - 396850247 * ((((&v6 | 0x30F615E4) ^ 0xFFFFFFFE) - (~&v6 | 0xCF09EA1B)) ^ 0xFCFB634F);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0710[byte_10048C480[(51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x84])
                                   + 480))(&v6);
  *a1 = v7 - 2058779428;
  a1[1] = 0;
  return 0;
}

uint64_t sub_1003CCBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  v2 = (qword_100506AD8 ^ qword_100511428) - (_QWORD)&v5;
  qword_100511428 = 1040035123 * v2 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 + 24) + 72 * (*(_DWORD *)(a1 + 16) - 1) + 0xDE541BB94F3E518;
  v7 = 2128975349 * ((-894317266 - (&v6 | 0xCAB1CD2E) + (&v6 | 0x354E32D1)) ^ 0xB6DD67C8)
     + 647507330;
  v6 = a2;
  v9 = v3;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((51 * v2 + 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * v2 + 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                            + 836)
                                  - 8))(&v6);
  return (v8 - 1824781336);
}

uint64_t sub_1003CCD70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (qword_100506AD8 ^ qword_1005071F0) - (_QWORD)&v6;
  qword_1005071F0 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 4) - 1;
  v9 = 7305 - 396850247 * (&v7 ^ 0x33F28954);
  v7 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * (v3 + 34)) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0910[byte_10048C680[(51 * ((51 * (v3 + 34)) ^ 0xDE ^ qword_100506AD8))] ^ 0xFB])
                                   + 324))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 8) + 4 * v4) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003CCEA8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((v3 & 0x52B76507 | ~(v3 | 0x52B76507)) ^ 0xDE13ED3B) + 999201902;
  v3[0] = a1 + 176;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CCF44(_DWORD *a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_1005114E8];
  qword_1005114E8 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * (&v6 ^ 0x33F28954);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - (51 * v3 + 34)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - (51 * v3 + 34)) ^ 0xDE))] ^ 0x2E])
                                   + 524))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CD070(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_DWORD *)(a1 + 168);
  *(_DWORD *)(a1 + 168) = v2 + 1;
  v4[0] = *(_QWORD *)(a1 + 152) + 136 * v2;
  v4[1] = a2;
  v5 = 742349519
     * (((v4 ^ 0xCAA508AC) & 0x9EFFC2EC | ~(v4 ^ 0xCAA508AC | 0x9EFFC2EC)) ^ 0xD8FE427C)
     + 999201902;
  sub_1003C925C((uint64_t)v4);
  return 0;
}

uint64_t sub_1003CD12C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = qword_1005071A8 - (_QWORD)&v5 + qword_100506AD8;
  qword_1005071A8 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * ((2 * (v6 & 0x7B9AD6F8) - v6 + 73738503) ^ 0x3797A053);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((51 * v3) ^ qword_100506AD8)) ^ byte_100466A20[byte_10042E0D0[(51 * ((51 * v3) ^ qword_100506AD8))] ^ 0xFC])
                                  + 435))(v6);
  *(_QWORD *)(a1 + 16) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CD27C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  v2 = qword_100506AD8 - qword_100511278 - (_QWORD)&v5;
  qword_100511278 = 1040035123 * v2 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) + 96;
  v6 = a2;
  v7 = 2128975349 * ((((&v6 | 0x98D17228) ^ 0xFFFFFFFE) - (~&v6 | 0x672E8DD7)) ^ 0xE4BDD8CE)
     + 647507330;
  v9 = v3;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((51 * v2 + 58) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0910[byte_10048C680[(51 * ((51 * v2 + 58) ^ 0xDE ^ qword_100506AD8))] ^ 0x6E])
                                            + 936)
                                  - 8))(&v6);
  return (v8 - 1824781336);
}

uint64_t sub_1003CD3D8(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  qword_1005112E0 = 1040035123 * ((unint64_t)&v5[qword_100506AD8 ^ qword_1005112E0] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_1005112E0;
  v3 = *(_DWORD *)(a1 + 32) - 1;
  v8 = 7305 - 396850247 * (((&v6 | 0xD7C9CE87) + (~&v6 | 0x28363178)) ^ 0xE43B47D2);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((2 * qword_1005112E0) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((2 * qword_1005112E0) ^ 0xDE))] ^ 0x92])
                                   + 346))(&v6);
  *(_DWORD *)(*(_QWORD *)(a1 + 40) + 72 * v3) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CD52C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  v2 = (unint64_t)&v5[qword_100506AD8 - qword_100507130];
  qword_100507130 = 1040035123 * v2 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 - 0x5D2B531B7F4FB0A2) + 16)
     + 32 * (*(_DWORD *)(*(_QWORD *)(a1 - 0x5D2B531B7F4FB0A2) + 24) - 1);
  v6 = a2;
  v9 = v3;
  v7 = 2128975349 * (&v6 ^ 0x83935519) + 647507330;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * v2 + 58) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((qword_100506AD8 + 51 * v2 + 58) ^ 0xDE))] ^ 0x1C])
                                            + 880)
                                  - 8))(&v6);
  return (v8 - 1824781336);
}

uint64_t sub_1003CD670(uint64_t a1)
{
  *(_DWORD *)(a1 - 0x5D2B531B7F4FB08ALL) = 1;
  return 0;
}

uint64_t sub_1003CD690(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * (((v3 | 0x5A149783) - v3 + (v3 & 0xA5EB6878)) ^ 0x294FE040)
     + 999201902;
  v3[0] = a1 + 40;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CD730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 + 24) + 72 * (*(_DWORD *)(a1 + 16) - 1);
  v5 = (380477743
      * (((v4 ^ 0x104274C | 0xF2185881) + (v4 ^ 0xD2081881 | 0xDE7A77E)) ^ 0x83A1A30F)) ^ 0x116BB4F8;
  v4[0] = a2;
  v4[1] = v2 + 0xDE541BB94F3E538;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003CD80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;

  v5 = (1358963743 * ((2 * (&v4 & 0x553C1378) - &v4 + 717483138) ^ 0x1F0C80E)) ^ 0xEF6;
  v4 = a2;
  sub_1001B7790((uint64_t)&v4);
  *(_DWORD *)(a1 - 0x5C1503E25C92D1C6) = v6 ^ 0xAE23F560;
  return 0;
}

uint64_t sub_1003CD8D8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = (qword_100506AD8 - qword_100511480) ^ (unint64_t)&v5;
  qword_100511480 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * ((&v6 & 0xEEFDED27 | ~(&v6 | 0xEEFDED27)) ^ 0x22F09B8C);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - (51 * v3 + 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v3 + 34)) ^ 0xDE))] ^ 0xB1])
                                   + 513))(&v6);
  *(_QWORD *)(a1 - 0x5D2B531B7F4FB092) = ((2 * (v7 + 2236187868)) & 0x1F76DF77CLL)
                                         + ((v7 - 2058779428) ^ 0x53FBE7BFFBB6FBBELL)
                                         - 0x37A00108100809ALL;
  return 0;
}

uint64_t sub_1003CDA70(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100506B38 ^ (unint64_t)&v4 ^ qword_100506AD8;
  qword_100506B38 = (1040035123 * v2) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v5 = a2;
  v7 = a1 + 8;
  v6 = 1724111581 - 1162864081 * (&v5 ^ 0xE392356B);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - qword_100506B38) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - qword_100506B38) ^ 0xDE))] ^ 0xDC])
                                            + 985)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CDB98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = qword_100506AD8 - qword_100511500 - (_QWORD)&v6;
  qword_100511500 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 32) - 1;
  v9 = 7305 - 396850247 * (((&v7 | 0xA4572660) - (&v7 & 0xA4572660)) ^ 0x97A5AF34);
  v7 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3) ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * v3) ^ qword_100506AD8))] ^ 0x66])
                                   + 313))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 40) + 440 * v4 + 8) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003CDCF4(uint64_t a1)
{
  *(_QWORD *)(a1 + 152) = 0xFFFFFFFF00000000;
  return 0;
}

uint64_t sub_1003CDD04(uint64_t a1)
{
  *(_DWORD *)(a1 + 160) = 0;
  return 0;
}

uint64_t sub_1003CDD10(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_1005114A0 + qword_100506AD8];
  qword_1005114A0 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * ((2 * (v6 & 0x13C3F88) - v6 + 2126758006) ^ 0x4D314922);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - qword_1005114A0) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - qword_1005114A0) ^ 0xDE))] ^ 0x66])
                                  + 313))(v6);
  *a1 = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CDE64(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  _QWORD v5[2];
  unsigned int v6;

  v2 = *(_DWORD *)(a1 + 168) - 1;
  v3 = *(_QWORD *)(a1 + 160);
  v6 = 742349519 * ((-1511234353 - (v5 | 0xA5EC64CF) + (v5 | 0x5A139B30)) ^ 0x2948ECF3)
     + 999201902;
  v5[0] = v3 + 136 * v2;
  v5[1] = a2;
  sub_1003C925C((uint64_t)v5);
  return 0;
}

uint64_t sub_1003CDF1C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 - qword_100511478) ^ (unint64_t)&v5;
  qword_100511478 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305
     - 396850247
     * (((&v6 | 0x5A7C51D7) - &v6 + (&v6 & 0xA583AE28)) ^ 0x698ED883);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + qword_100511478) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + qword_100511478) ^ 0xDE))] ^ 0x6E])
                                   + 413))(&v6);
  *(_DWORD *)(*(_QWORD *)(a1 + 56) + 24 * *(unsigned int *)(a1 + 52) + 8) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CE078(uint64_t a1, uint64_t a2)
{
  _BYTE v4[8];
  uint64_t v5;
  int v6;
  unsigned int v7;

  qword_1005114B8 = 1040035123 * ((unint64_t)&v4[qword_100506AD8 ^ qword_1005114B8] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_1005114B8;
  v7 = 7305 - 396850247 * (&v5 ^ 0x33F28954);
  v5 = a2;
  sub_1003C07C8(&v5);
  *(_DWORD *)(a1 + 12) = v6 - 2058779428;
  return 0;
}

uint64_t sub_1003CE188(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  _BYTE v9[8];
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  v3 = (unint64_t)&v9[qword_100506AD8 ^ qword_1005112D0];
  qword_1005112D0 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v11 = a2;
  v10 = -738757634 - 742349519 * (((&v10 | 0x32A1B66B) + (~&v10 | 0xCD5E4994)) ^ 0x41FAC1A9);
  sub_1003CA790((uint64_t)&v10);
  v4 = *(_QWORD *)(v12 - 0x4159F3519D14AB4ELL);
  v5 = *(_DWORD *)(v12 - 0x4159F3519D14AB52);
  v6 = *(_QWORD *)(a1 + 8) + 440 * (*(_DWORD *)a1 - 1) + 8;
  v7 = 290670313 * (((&v10 | 0xF649F4F1) - (&v10 & 0xF649F4F1)) ^ 0xDD78CD38);
  v10 = 178740468 - v7;
  v14 = v5 - v7 - 2 * ((v5 + 498842432) & 0x1752421C ^ v5 & 0x1C) - 720503488;
  v13 = v6;
  v11 = v4;
  ((void (*)(unsigned int *))((char *)*(&off_1004ECA20
                                                 + ((51
                                                                                  * ((qword_100506AD8 - qword_1005112D0) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - qword_1005112D0) ^ 0xDE))] ^ 0xB1])
                                                 + 76)
                                       - 8))(&v10);
  return (v12 - 1824781336);
}

uint64_t sub_1003CE3B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506BA8 + qword_100506AD8];
  qword_100506BA8 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * ((560108228 - (v6 | 0x216292C4) + (v6 | 0xDE9D6D3B)) ^ 0xED6FE46F);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE))] ^ 0xB1])
                                  + 513))(v6);
  *(_QWORD *)(a1 + 32) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CE510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) + 32;
  v4[0] = a2;
  v4[1] = v2;
  v5 = (380477743 * ((2 * (v4 & 0x6B91B698) - v4 + 342772064) ^ 0x44C3D5A3)) ^ 0x116BB4F8;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003CE5C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  int v4;
  _BYTE v6[8];
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (unint64_t)&v6[qword_100506AD8 ^ qword_1005112E8];
  qword_1005112E8 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 128) - 1;
  v7 = a2;
  v9 = 7305
     - 396850247
     * (((&v7 | 0x13DA59A7) - &v7 + (&v7 & 0xEC25A658)) ^ 0x2028D0F3);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0610[byte_10048C380[(51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8))] ^ 0x14])
                                   + 302))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 112) + 32 * v4 + 28) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003CE728(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v2 = (qword_100506AD8 - qword_100506B40) ^ (unint64_t)&v4;
  qword_100506B40 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v7 = a1 + 272;
  v5 = a2;
  v6 = 1724111581
     - 1162864081 * ((&v5 + 655204605 - 2 * ((unint64_t)&v5 & 0x270DA0FD)) ^ 0xC49F9596);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((51 * v2 - 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0910[byte_10048C680[(51 * ((51 * v2 - 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x1A])
                                            + 907)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CE868(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * (v3 ^ 0x735B77C3) + 999201902;
  v3[0] = a1 + 136;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CE8E8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  int v4;

  v3[0] = a1 + 136;
  v3[1] = a2;
  v4 = 742349519 * ((v3 - 824640055 - 2 * ((unint64_t)v3 & 0xCED8FDC9)) ^ 0xBD838A0A) + 999201902;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CE984(uint64_t a1, uint64_t a2)
{
  char v4;
  _QWORD v5[2];
  unsigned int v6;

  qword_1005071E0 = 1040035123 * ((qword_100506AD8 + qword_1005071E0) ^ (unint64_t)&v4 ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_1005071E0;
  v6 = 7305 - 396850247 * ((v5 & 0x68B65001 | ~(v5 | 0x68B65001)) ^ 0xA4BB26AA);
  v5[0] = a2;
  sub_1003C07C8(v5);
  *(_QWORD *)(a1 + 8) = v5[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CEAB8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (qword_100506AD8 - qword_1005071D0) ^ (unint64_t)&v6;
  qword_1005071D0 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(unsigned int *)(a1 + 8);
  v7 = a2;
  v9 = 7305 - 396850247 * ((2 * (&v7 & 0x65106F70) - &v7 + 451907726) ^ 0x291D19DA);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE))] ^ 0x2E])
                                   + 524))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 32 * v4 + 28) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003CEC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;

  v5 = (1358963743 * ((((2 * &v4) | 0xDC2BF47C) - &v4 + 300549570) ^ 0xC526DEB2)) ^ 0xEF6;
  v4 = a2;
  sub_1001B7790((uint64_t)&v4);
  *(_DWORD *)(a1 - 0x5C1503E25C92D1C2) = v6 ^ 0xAE23F560;
  *(_DWORD *)(a1 - 0x5C1503E25C92D1A6) = 1701940760;
  return 0;
}

uint64_t sub_1003CECF4(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1;
  *(_DWORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB72) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB82) = 0x5D2B531B7F4FB0A2;
  *(_QWORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB7ALL) = 0x5081E7AF7AB67B24;
  *(_WORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB6ELL) = -1;
  *(_WORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB6CLL) = -1;
  *(_DWORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB52) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB62) = 0x5D2B531B7F4FB0A2;
  *(_QWORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB5ALL) = 0x5081E7AF7AB67B24;
  *(_WORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB4ELL) = 0;
  *(_WORD *)(*(_QWORD *)(a1 + 24) + 72 * v1 - 0x4F46115FEA5BCB4CLL) = 0;
  return 0;
}

uint64_t sub_1003CEE44(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = (qword_100506AD8 - qword_100506B30) ^ (unint64_t)&v4;
  qword_100506B30 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v6 = 1724111581
     - 1162864081
     * (((&v5 | 0x5C5E7B5B) - &v5 + (&v5 & 0xA3A184A0)) ^ 0xBFCC4E30);
  v5 = a2;
  v7 = a1 + 40;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE))] ^ 0xE8])
                                            + 874)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CEF8C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506AD8 ^ qword_1005071B8];
  qword_1005071B8 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = 7305
     - 396850247
     * (((v6 ^ 0xE8C1900A | 0x122E2171) + (v6 ^ 0x20C2111 | 0xEDD1DE8E)) ^ 0xD93F384E);
  v6[0] = a2;
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                  + 313))(v6);
  *(_QWORD *)(a1 + 24) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CF0F4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * (((v3 | 0x6BA6409) - v3 + (v3 & 0xF9459BF0)) ^ 0x75E113CA)
     + 999201902;
  v3[0] = a1;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CF190(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 32) - 1;
  *(_DWORD *)(*(_QWORD *)(a1 + 40) + 72 * v1 + 32) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 40) + 72 * v1 + 16) = 0x5D2B531B7F4FB0A2;
  *(_QWORD *)(*(_QWORD *)(a1 + 40) + 72 * v1 + 24) = 0x5081E7AF7AB67B24;
  *(_WORD *)(*(_QWORD *)(a1 + 40) + 72 * v1 + 36) = -1;
  *(_WORD *)(*(_QWORD *)(a1 + 40) + 72 * v1 + 38) = -1;
  return 0;
}

uint64_t sub_1003CF204(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = qword_100506AD8 - qword_1005071E8 - (_QWORD)&v6;
  qword_1005071E8 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 280) - 1;
  v7 = a2;
  v9 = 7305 - 396850247 * ((&v7 & 0x249CF57F | ~(&v7 | 0x249CF57F)) ^ 0xE89183D4);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                   + 335))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 272) + 24 * v4 + 4) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003CF35C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  unsigned int v7;

  v1 = *(_DWORD *)(a1 + 4) + 396850247 * ((-2 - ((a1 | 0x170D3737) + (~(_DWORD)a1 | 0xE8F2C8C8))) ^ 0xDB00419C);
  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v3 + 4) = 0;
  v7 = v1
     - 396850247 * (((&v5 | 0xE737603) + (~&v5 | 0xF18C89FC)) ^ 0x3D81FF56)
     - 1371549013;
  v5 = v2;
  result = ((uint64_t (*)(uint64_t *))*(&off_1004ECA20 + (v1 ^ 0x51C04BC4)))(&v5);
  *(_DWORD *)v3 = v6 - 2058779428;
  return result;
}

uint64_t sub_1003CF468(_DWORD *a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 - qword_1005071C8) ^ (unint64_t)&v5;
  qword_1005071C8 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305
     - 396850247
     * (((&v6 | 0x44F3E506) - &v6 + (&v6 & 0xBB0C1AF8)) ^ 0x77016C52);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + qword_1005071C8) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 + qword_1005071C8) ^ 0xDE))] ^ 0x66])
                                   + 313))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003CF5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  __int16 v7;
  unsigned int v8;

  qword_100506B80 = 1040035123 * ((qword_100506AD8 + qword_100506B80) ^ (unint64_t)&v5 ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100506B80;
  v3 = (*(_DWORD *)(*(_QWORD *)(a1 - 0x5D2B531B7F4FB0A2) + 24) - 1);
  v6 = a2;
  v8 = 7305 - 396850247 * ((2 * (&v6 & 0x5F00C630) - &v6 + 553597385) ^ 0x130DB09D);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((2 * qword_100506B80) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((2 * qword_100506B80) ^ 0xDE))] ^ 0x6E])
                                   + 413))(&v6);
  *(_WORD *)(*(_QWORD *)(*(_QWORD *)(a1 - 0x5D2B531B7F4FB0A2) + 16) + 32 * v3 - 0x5D2B531B7F4FB084) = v7 - 31524;
  return 0;
}

uint64_t sub_1003CF734(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100511308 + qword_100506AD8];
  qword_100511308 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = 7305 - 396850247 * ((((2 * v6) | 0x731009BE) - v6 - 965215455) ^ 0xA7A8D8B);
  v6[0] = a2;
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE))] ^ 0x92])
                                  + 346))(v6);
  *(_QWORD *)(a1 + 16) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003CF884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v2 = (qword_100506AD8 ^ qword_100507120) - (_QWORD)&v4;
  qword_100507120 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v7 = 742349519 * (&v5 ^ 0x735B77C3) + 1894260001;
  v8 = a1 + 16;
  v6 = a2;
  ((void (*)(int *))((char *)*(&off_1004ECA20
                                        + ((51
                                                                         * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE))] ^ 0x3F])
                                        + 289)
                              - 8))(&v5);
  return (v5 - 1824781336);
}

uint64_t sub_1003CF9A8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = qword_100511458 ^ (unint64_t)&v4 ^ qword_100506AD8;
  qword_100511458 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v6 = 1724111581 - 1162864081 * (((&v5 | 0x32305EF6) - (&v5 & 0x32305EF6)) ^ 0xD1A26B9D);
  v5 = a2;
  v7 = a1;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * v2 - 34) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 + 51 * v2 - 34) ^ 0xDE))] ^ 0x92])
                                            + 829)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003CFAE4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v3[0] = a1 + 8;
  v3[1] = a2;
  v4 = 742349519 * ((2 * (v3 & 0x7DCD52A8) - v3 + 36875605) ^ 0x7169DA96) + 999201902;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003CFB84(uint64_t a1, uint64_t a2)
{
  _BYTE v3[8];
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  qword_100511440 = 1040035123 * ((unint64_t)&v3[qword_100511440 + qword_100506AD8] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100511440;
  v6 = a1 + 16;
  v5 = 1724111581
     - 1162864081 * ((1243584555 - (&v4 | 0x4A1F982B) + (&v4 | 0xB5E067D4)) ^ 0x567252BF);
  v4 = a2;
  sub_100279494(&v4);
  return (v7 - 1824781336);
}

uint64_t sub_1003CFCB8(uint64_t a1, uint64_t a2)
{
  _BYTE v3[8];
  int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  qword_100511270 = 1040035123 * ((unint64_t)&v3[qword_100506AD8 ^ qword_100511270] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100511270;
  v7 = *(_QWORD *)(a1 + 24) + 160 * (*(_DWORD *)(a1 + 16) - 1) + 8;
  v6 = 742349519 * ((2 * (&v4 & 0x3572F9D8) - &v4 - 896727515) ^ 0xB9D671E6) + 1894260001;
  v5 = a2;
  sub_1001AEFDC(&v4);
  return (v4 - 1824781336);
}

uint64_t sub_1003CFDF8(uint64_t a1, uint64_t a2)
{
  _BYTE v3[8];
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  qword_100507140 = 1040035123 * ((unint64_t)&v3[qword_100506AD8 - qword_100507140] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100507140;
  v5 = 1724111581 - 1162864081 * (&v4 ^ 0xE392356B);
  v6 = a1 + 176;
  v4 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51 * ((2 * qword_100507140) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((2 * qword_100507140) ^ 0xDE))] ^ 0x3F])
                                            + 885)
                                  - 4))(&v4);
  return (v7 - 1824781336);
}

uint64_t sub_1003CFF14(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = qword_100511330 ^ (unint64_t)&v5 ^ qword_100506AD8;
  qword_100511330 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305
     - 396850247
     * ((2 * ((v6 ^ 0x463A930) & 0x4A4622B0) - (v6 ^ 0x463A930) + 901373262) ^ 0x228FD2A);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - (51 * v3 + 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v3 + 34)) ^ 0xDE))] ^ 0x6E])
                                  + 413))(v6);
  *(_QWORD *)(a1 + 8) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003D0074(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((1272820407 - (v3 | 0x4BDDB2B7) + (v3 | 0xB4224D48)) ^ 0xC7793A8B)
     + 999201902;
  v3[0] = a1 + 8;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D011C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = qword_1005112F0 - (_QWORD)&v5 + qword_100506AD8;
  qword_1005112F0 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * ((v6 & 0x665F0710 | ~(v6 | 0x665F0710)) ^ 0xAA5271BB);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - (51 * v3 - 34)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - (51 * v3 - 34)) ^ 0xDE))] ^ 0x66])
                                  + 313))(v6);
  *(_QWORD *)(a1 + 312) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003D0268(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;

  v2 = qword_100507138 - (_QWORD)&v4 + qword_100506AD8;
  qword_100507138 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v8 = *(_QWORD *)(a1 + 8) + 72 * (*(_DWORD *)a1 - 1) + 0xDE541BB94F3E518;
  v5 = a2;
  v6 = 2128975349 * ((2 * (&v5 & 0x41205FE0) - &v5 + 1054842911) ^ 0xBD4CF506) + 647507330;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE))] ^ 0x92])
                                            + 869)
                                  - 8))(&v5);
  return (v7 - 1824781336);
}

uint64_t sub_1003D03D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 + 8) + 72 * (*(_DWORD *)a1 - 1);
  v5 = (380477743 * (((v4 | 0xBB1BE6DE) - v4 + (v4 & 0x44E41920)) ^ 0xEBB67A1D)) ^ 0x116BB4F8;
  v4[0] = a2;
  v4[1] = v2 + 0xDE541BB94F3E538;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003D0498(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((1805940953 - (v3 | 0x6BA478D9) + (v3 | 0x945B8726)) ^ 0xE700F0E5)
     + 999201902;
  v3[0] = a1;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D053C(uint64_t a1)
{
  uint64_t v1;
  char v3;

  v1 = qword_100507108 - (_QWORD)&v3 + qword_100506AD8;
  qword_100507108 = 1040035123 * (v1 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v1 ^ 0x2A880BDD015215DELL);
  *(_DWORD *)(a1 - 0x5D2B531B7F4FB08ALL) = 3;
  *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1004ECA20
                                                                                      + ((51 * ((qword_100506AD8 + qword_100507108) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((qword_100506AD8 + qword_100507108) ^ 0xDE))] ^ 0x84])
                                                                                      + 796))(96, 0x10200406C4767B9)+ 0x5D2B531B7F4FB0A2;
  return 0;
}

uint64_t sub_1003D0658(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * (((v3 | 0x524FBA57) - (v3 & 0x524FBA57)) ^ 0x2114CD94) + 999201902;
  v3[0] = a1;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D06F0(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v3;
  _QWORD v5[2];
  unsigned int v6;

  v2 = *(_DWORD *)(a1 + 4) - 1;
  v3 = *(_QWORD *)(a1 + 24);
  v6 = 742349519 * (v5 ^ 0x735B77C3) + 999201902;
  v5[0] = v3 + 136 * v2;
  v5[1] = a2;
  sub_1003C925C((uint64_t)v5);
  return 0;
}

uint64_t sub_1003D0780(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v3[0] = a1;
  v3[1] = a2;
  v4 = 742349519 * (((v3 | 0xD9159045) + (~v3 | 0x26EA6FBA)) ^ 0xAA4EE787) + 999201902;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D0818(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 + qword_1005114D8) ^ (unint64_t)&v5;
  qword_1005114D8 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305
     - 396850247
     * ((2 * ((&v6 ^ 0x4CEF7587) & 0xF371565) - (&v6 ^ 0x4CEF7587) - 255268198) ^ 0x8FD51649);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE))] ^ 0xE8])
                                   + 391))(&v6);
  *(_DWORD *)(a1 + 4) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003D0970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = qword_100506AD8 - qword_100506C08 - (_QWORD)&v6;
  qword_100506C08 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)a1 - 1;
  v7 = a2;
  v9 = 7305 - 396850247 * (&v7 ^ 0x33F28954);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE)) ^ byte_1004B0710[byte_10048C480[(51 * ((qword_100506AD8 + 51 * (v3 + 34)) ^ 0xDE))] ^ 0x3F])
                                   + 402))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 8) + 440 * v4 + 8) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003D0AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = qword_100511488 - (_QWORD)&v6 + qword_100506AD8;
  qword_100511488 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 16) - 1;
  v7 = a2;
  v9 = 7305 - 396850247 * ((&v7 & 0x553AD0A7 | ~(&v7 | 0x553AD0A7)) ^ 0x9937A60C);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 + qword_100511488) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 + qword_100511488) ^ 0xDE))] ^ 0x14])
                                   + 302))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 24) + 72 * v4 - 0x4F46115FEA5BCB92) = v8
                                                                       - 2 * ((v8 + 88704220) & 0xAA047BF ^ v8 & 1)
                                                                       - 1880503142;
  return 0;
}

uint64_t sub_1003D0C3C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((((2 * v3) | 0x8F88E7BE) - v3 - 1204057055) ^ 0x349F041C) + 999201902;
  v3[0] = a1 + 16;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D0CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;

  v2 = qword_100506AD8 - qword_100506B18 - (_QWORD)&v4;
  qword_100506B18 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v8 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) + 32 * *(_QWORD *)(a1 - 0x5D2B531B7F4FB092) - 0x103CF5EF56CF6460;
  v5 = a2;
  v6 = 2128975349 * (&v5 ^ 0x83935519) + 647507330;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((51 * (v2 + 34)) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0910[byte_10048C680[(51 * ((51 * (v2 + 34)) ^ 0xDE ^ qword_100506AD8))] ^ 0xFB])
                                            + 847)
                                  - 8))(&v5);
  return (v7 - 1824781336);
}

uint64_t sub_1003D0E3C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  v2 = qword_100506B20 ^ (unint64_t)&v4 ^ qword_100506AD8;
  qword_100506B20 = 1040035123 * v2 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v8 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) + 32;
  v5 = a2;
  v6 = 2128975349 * ((&v5 - 1030536015 - 2 * ((unint64_t)&v5 & 0xC29344B1)) ^ 0x410011A8)
     + 647507330;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * v2 + 58) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 + 51 * v2 + 58) ^ 0xDE))] ^ 0x2E])
                                            + 1047)
                                  - 8))(&v5);
  return (v7 - 1824781336);
}

uint64_t sub_1003D0F94(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;

  v2 = (qword_100506AD8 + qword_100511460) ^ (unint64_t)&v5;
  qword_100511460 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 + 32) + 136 * (*(_DWORD *)(a1 + 4) - 1);
  v7 = 1724111581
     - 1162864081
     * (((&v6 | 0xB628E7AF) - &v6 + (&v6 & 0x49D71850)) ^ 0x55BAD2C4);
  v8 = v3;
  v6 = a2;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 + 51 * (v2 + 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * (v2 + 34)) ^ 0xDE))] ^ 0x6E])
                                            + 896)
                                  - 4))(&v6);
  return (v9 - 1824781336);
}

uint64_t sub_1003D10EC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 - 0x5C1503E25C92CF26) = *(_QWORD *)(a2 - 0x1DC39F0167616054);
  *(_DWORD *)(a1 - 0x5C1503E25C92CF1ELL) = *(_DWORD *)(a2 - 0x1DC39F016761605CLL);
  return 0;
}

uint64_t sub_1003D1144(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _BYTE v4[8];
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v2 = (unint64_t)&v4[qword_100506B10 + qword_100506AD8];
  qword_100506B10 = 1040035123 * v2 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v7 = 742349519 * ((((&v5 | 0xC0C43984) ^ 0xFFFFFFFE) - (~&v5 | 0x3F3BC67B)) ^ 0x4C60B1B8)
     + 1894260001;
  v6 = a2;
  v8 = a1 + 168;
  ((void (*)(int *))((char *)*(&off_1004ECA20
                                        + ((51
                                                                         * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE)) ^ byte_100466A20[byte_10042E0D0[(51 * ((qword_100506AD8 - (51 * v2 - 34)) ^ 0xDE))] ^ 0xFC])
                                        + 322)
                              - 8))(&v5);
  return (v5 - 1824781336);
}

uint64_t sub_1003D1284(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((2 * (v3 & 0x59EFE338) - v3 - 1508893503) ^ 0xD54B6B02) + 999201902;
  v3[0] = a1 + 16;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D1324(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((v3 & 0xDF4986D8 | ~(v3 | 0xDF4986D8)) ^ 0x53ED0EE4) + 999201902;
  v3[0] = a1 + 144;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D13C0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _BYTE v4[8];
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v2 = 1040035123 * ((unint64_t)&v4[qword_100506AD8 ^ qword_1005112A8] ^ 0x2A880BDD015215DELL);
  qword_1005112A8 = 1040035123 * (_QWORD)&v4[(qword_100506AD8 ^ qword_1005112A8) - 0x2A880BDD015215DELL];
  qword_100506AD8 = v2;
  v5 = a2;
  v7 = a1 + 8;
  v6 = 1724111581
     - 1162864081 * ((1643117935 - (&v5 | 0x61EFFD6F) + (&v5 | 0x9E100290)) ^ 0x7D8237FB);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51 * (qword_1005112A8 ^ 0xDE ^ v2)) ^ byte_10048C580[byte_100466920[(51 * (qword_1005112A8 ^ 0xDE ^ v2))] ^ 0x2E])
                                            + 1007)
                                  - 4))(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003D1510(_DWORD *a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (unint64_t)&v5[qword_100506AD8 ^ qword_100511310];
  qword_100511310 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305 - 396850247 * ((((2 * &v6) | 0xB04B3D54) - &v6 - 1478860458) ^ 0x6BD717FE);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * (v3 + 34)) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * (v3 + 34)) ^ 0xDE ^ qword_100506AD8))] ^ 0x69])
                                   + 491))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003D1658(uint64_t a1, uint64_t a2)
{
  _BYTE v4[8];
  _QWORD v5[2];
  unsigned int v6;

  qword_100507200 = 1040035123 * ((unint64_t)&v4[qword_100506AD8 ^ qword_100507200] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100507200;
  v5[0] = a2;
  v6 = 7305 - 396850247 * ((2 * (v5 & 0x125DDA50) - v5 + 1839343020) ^ 0x5E50ACF8);
  sub_1003C07C8(v5);
  *(_QWORD *)(a1 + 24) = v5[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003D178C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_1005071D8];
  qword_1005071D8 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * (&v6 ^ 0x33F28954);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - (51 * v3 - 34)) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - (51 * v3 - 34)) ^ 0xDE))] ^ 0x1A])
                                   + 424))(&v6);
  *(_DWORD *)(a1 + 4) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003D18B4(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 16);
  return 0;
}

uint64_t sub_1003D18C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = (qword_100506AD8 - qword_100507208) ^ (unint64_t)&v6;
  qword_100507208 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)(a1 + 32) - 1;
  v9 = 7305
     - 396850247
     * (((&v7 ^ 0x793953F8 | 0x3631979F)
       - (&v7 ^ 0x793953F8)
       + ((&v7 ^ 0x793953F8) & 0xC9CE6860)) ^ 0x7CFA4D33);
  v7 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE))] ^ 0x69])
                                   + 491))(&v7);
  *(_QWORD *)(*(_QWORD *)(a1 + 40) + 440 * v4 + 24) = (v8 - 2058779428);
  return 0;
}

uint64_t sub_1003D1A34(uint64_t a1, uint64_t a2)
{
  _BYTE v4[8];
  _QWORD v5[2];
  unsigned int v6;

  qword_100506B98 = 1040035123 * ((unint64_t)&v4[qword_100506AD8 ^ qword_100506B98] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100506B98;
  v6 = 7305 - 396850247 * (((v5 | 0x6A84406A) - (v5 & 0x6A84406A)) ^ 0x5976C93E);
  v5[0] = a2;
  sub_1003C07C8(v5);
  *(_QWORD *)(a1 + 24) = v5[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003D1B68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = (qword_100506AD8 ^ qword_100511300) - (_QWORD)&v5;
  qword_100511300 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = 7305 - 396850247 * ((2 * (v6 & 0x6B572178) - v6 + 346611330) ^ 0x275A57D6);
  v6[0] = a2;
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 + 51 * v3 + 34) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 + 51 * v3 + 34) ^ 0xDE))] ^ 0x6E])
                                  + 413))(v6);
  *(_QWORD *)(a1 + 320) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

void sub_1003D1CBC()
{
  _BYTE v0[8];
  _BYTE v1[4];
  unsigned int v2;
  uint64_t v3;

  qword_100511368 = 1040035123 * ((unint64_t)&v0[qword_100506AD8 - qword_100511368] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100511368;
  v3 = (uint64_t)*(&off_1004ECA20
                + ((51 * ((2 * qword_100511368) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((2 * qword_100511368) ^ 0xDE))] ^ 0xDC])
                + 956);
  v2 = 359378713 * (((v1 | 0x8BDFD5B5) + (~v1 | 0x74202A4A)) ^ 0xF9B8AD70) + 4288;
  sub_1001BD71C((uint64_t)v1);
}

uint64_t sub_1003D1DD8(_DWORD *a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 + qword_1005071F8) ^ (unint64_t)&v5;
  qword_1005071F8 = 1040035123 * v3 + 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305 - 396850247 * ((2 * (&v6 & 0x7AF62930) - &v6 - 2062952753) ^ 0xB6FB5F9B);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0610[byte_10048C380[(51 * ((51 * v3 - 34) ^ 0xDE ^ qword_100506AD8))] ^ 0x14])
                                   + 302))(&v6);
  *a1 = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003D1F20(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 32);
  return 0;
}

uint64_t sub_1003D1F34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = (qword_100506AD8 ^ qword_1005114B0) - (_QWORD)&v5;
  qword_1005114B0 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * ((v6 & 0x533FEDF4 | ~(v6 | 0x533FEDF4)) ^ 0x9F329B5F);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8)) ^ byte_100466A20[byte_10042E0D0[(51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8))] ^ 0xFC])
                                  + 435))(v6);
  *(_QWORD *)(a1 + 8) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003D2080(uint64_t a1, uint64_t a2)
{
  _DWORD v3[2];
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 24) + 160 * (*(_DWORD *)(a1 + 16) - 1) + 8;
  v5 = a2;
  v3[1] = 1371556318 - 396850247 * (v3 ^ 0x33F28954);
  sub_1003CF35C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D2114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v4[8];
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  qword_100506B58 = 1040035123 * ((unint64_t)&v4[qword_100506B58 + qword_100506AD8] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100506B58;
  v2 = *(_QWORD *)(a1 + 152) + 272 * (*(_DWORD *)(a1 + 144) - 1) + 136;
  v6 = 1724111581 - 1162864081 * (((&v5 | 0xCC571494) - (&v5 & 0xCC571494)) ^ 0x2FC521FF);
  v7 = v2;
  v5 = a2;
  sub_100279494(&v5);
  return (v8 - 1824781336);
}

uint64_t sub_1003D2250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 + 40) + 72 * (*(_DWORD *)(a1 + 32) - 1);
  v5 = (380477743 * ((v4 & 0x7CA4DF34 | ~(v4 | 0x7CA4DF34)) ^ 0xD3F6BC08)) ^ 0x116BB4F8;
  v4[0] = a2;
  v4[1] = v2 + 0x5D2B531B7F4FB0AALL;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003D2314(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = qword_100506AD8 - qword_100511348 - (_QWORD)&v5;
  qword_100511348 = 1040035123 * v3 - 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305
     - 396850247
     * ((((2 * (&v6 ^ 0xB6270225)) | 0x7BD16682) - (&v6 ^ 0xB6270225) - 1038660417) ^ 0xB83D3830);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - (51 * v3 + 34)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - (51 * v3 + 34)) ^ 0xDE))] ^ 0x2E])
                                   + 524))(&v6);
  *(_DWORD *)(a1 + 148) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003D2468(uint64_t a1, uint64_t a2)
{
  _BYTE v3[8];
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  qword_100511290 = 1040035123 * ((unint64_t)&v3[qword_100506AD8 - qword_100511290] ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100511290;
  v4 = a2;
  v6 = a1 + 40;
  v5 = 1724111581 - 1162864081 * (((&v4 | 0x26581242) - (&v4 & 0x26581242)) ^ 0xC5CA2729);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20 + (unk_1004B0A00 ^ 0x3Au) + 807) - 4))(&v4);
  return (v7 - 1824781336);
}

uint64_t sub_1003D2590(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 16);
  return 0;
}

uint64_t sub_1003D25A4(uint64_t a1, uint64_t a2)
{
  _DWORD v3[2];
  uint64_t v4;
  uint64_t v5;

  v3[1] = 1371556318 - 396850247 * (v3 ^ 0x33F28954);
  v4 = a1 + 168;
  v5 = a2;
  sub_1003CF35C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D2624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 + 8) + 72 * (*(_DWORD *)a1 - 1);
  v5 = (380477743 * ((((2 * v4) | 0x968091F2) - v4 - 1262504185) ^ 0x1BEDD43A)) ^ 0x116BB4F8;
  v4[0] = a2;
  v4[1] = v2 + 0xDE541BB94F3E518;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003D26E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  char v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v3 = qword_100506AD8 - qword_100507218 - (_QWORD)&v6;
  qword_100507218 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v4 = *(_DWORD *)a1 - 1;
  v7 = a2;
  v9 = 7305 - 396850247 * ((&v7 + 173164859 - 2 * (&v7 & 0xA52493B)) ^ 0x39A0C06F);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3) ^ qword_100506AD8)) ^ byte_1004B0710[byte_10048C480[(51 * ((51 * v3) ^ qword_100506AD8))] ^ 0x84])
                                   + 480))(&v7);
  *(_DWORD *)(*(_QWORD *)(a1 + 8) + 440 * v4) = v8 - 2058779428;
  return 0;
}

uint64_t sub_1003D2844(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  v2 = (qword_100506AD8 ^ qword_100511420) - (_QWORD)&v5;
  qword_100511420 = 1040035123 * (v2 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v2 ^ 0x2A880BDD015215DELL);
  v3 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) + 64;
  v6 = a2;
  v7 = 2128975349 * ((2 * (&v6 & 0x2CFB43C8) - &v6 - 754664400) ^ 0x5097E929) + 647507330;
  v9 = v3;
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20
                                            + ((51
                                                                             * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - 51 * (v2 + 34)) ^ 0xDE))] ^ 0x69])
                                            + 1014)
                                  - 8))(&v6);
  return (v8 - 1824781336);
}

uint64_t sub_1003D29A0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int16 v5;
  unsigned int v6;

  v1 = *(_DWORD *)(a1 + 16) ^ (380477743 * ((((2 * a1) | 0x5356DA14) - a1 + 1448383222) ^ 0xF906F1C9));
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)a1;
  v6 = v1 - 396850247 * (((&v4 | 0x467D9637) - (&v4 & 0x467D9637)) ^ 0x758F1F63) - 292264047;
  result = ((uint64_t (*)(uint64_t *))*(&off_1004ECA20 + (v1 ^ 0x116BB6E2)))(&v4);
  *(_WORD *)(v2 - 0x5D2B531B7F4FB086) = v5 - 31524;
  return result;
}

uint64_t sub_1003D2AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = (qword_100506AD8 ^ qword_100506BA0) - (_QWORD)&v5;
  qword_100506BA0 = (1040035123 * v3) ^ 0x2A880BDD015215DELL;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6[0] = a2;
  v7 = 7305 - 396850247 * ((((2 * v6) | 0xBA77CAD8) - v6 + 583277204) ^ 0xEEC96C38);
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - qword_100506BA0) ^ 0xDE)) ^ byte_10042E1D0[byte_1004B0810[(51 * ((qword_100506AD8 - qword_100506BA0) ^ 0xDE))] ^ 0x66])
                                  + 335))(v6);
  *(_QWORD *)(a1 + 336) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003D2C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;

  v2 = *(_QWORD *)(a1 + 24) + 72 * (*(_DWORD *)(a1 + 16) - 1);
  v5 = (380477743
      * (((v4 ^ 0x99C108F7) + 392960868 - 2 * ((v4 ^ 0x99C108F7) & 0x176C1B64)) ^ 0xDE008F50)) ^ 0x116BB4F8;
  v4[0] = a2;
  v4[1] = v2 + 0xDE541BB94F3E518;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003D2CD8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  _QWORD v6[2];
  unsigned int v7;

  v3 = (unint64_t)&v5[qword_100506BD0 + qword_100506AD8];
  qword_100506BD0 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = 7305 - 396850247 * ((v6 & 0xD3B0AA62 | ~(v6 | 0xD3B0AA62)) ^ 0x1FBDDCC9);
  v6[0] = a2;
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((51 * (v3 + 34)) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * (v3 + 34)) ^ 0xDE ^ qword_100506AD8))] ^ 0x2E])
                                  + 524))(v6);
  *(_QWORD *)(a1 + 16) = v6[1] - 0x5081E7AF7AB67B24;
  return 0;
}

uint64_t sub_1003D2E28(uint64_t a1, uint64_t a2)
{
  _DWORD v3[2];
  uint64_t v4;
  uint64_t v5;

  v3[1] = 1371556318 - 396850247 * (v3 ^ 0x33F28954);
  v4 = a1 + 16;
  v5 = a2;
  sub_1003CF35C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D2EA8(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  _QWORD v6[2];
  unsigned int v7;

  v3 = (qword_100506AD8 + qword_100507190) ^ (unint64_t)&v5;
  qword_100507190 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v7 = 7305 - 396850247 * ((2 * (v6 & 0x7D280628) - v6 - 2099775022) ^ 0xB1257086);
  v6[0] = a2;
  ((void (*)(_QWORD *))*(&off_1004ECA20
                                  + ((51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE)) ^ byte_1004B0610[byte_10048C380[(51 * ((qword_100506AD8 - (51 * v3 + 58)) ^ 0xDE))] ^ 0x73])
                                  + 446))(v6);
  *a1 = v6[1];
  return 0;
}

uint64_t sub_1003D2FE8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * (((v3 | 0xAF52E10D) - (v3 & 0xAF52E10D)) ^ 0xDC0996CE) + 999201902;
  v3[0] = a1 + 40;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D3084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;

  v5 = (1358963743 * (((&v4 | 0xF2C93A7B) - (&v4 & 0xF2C93A7B)) ^ 0xD9FA1EF7)) ^ 0xEF6;
  v4 = a2;
  sub_1001B7790((uint64_t)&v4);
  *(_DWORD *)(a1 - 0x5C1503E25C92D1BELL) = v6 ^ 0xAE23F560;
  return 0;
}

uint64_t sub_1003D314C(uint64_t a1)
{
  uint64_t v1;
  char v3;

  v1 = qword_100511268 - (_QWORD)&v3 + qword_100506AD8;
  qword_100511268 = 1040035123 * (v1 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v1 ^ 0x2A880BDD015215DELL);
  *(_DWORD *)(a1 - 0x5D2B531B7F4FB08ALL) = 2;
  *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1004ECA20
                                                                                      + ((51 * ((qword_100506AD8 - qword_100511268) ^ 0xDE)) ^ byte_1004B0910[byte_10048C680[(51 * ((qword_100506AD8 - qword_100511268) ^ 0xDE))] ^ 0x1A])
                                                                                      + 740))(64, 0x10200406C4767B9)+ 0x5D2B531B7F4FB0A2;
  return 0;
}

uint64_t sub_1003D3268(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (qword_100506AD8 - qword_1005114C0) ^ (unint64_t)&v5;
  qword_1005114C0 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v6 = a2;
  v8 = 7305 - 396850247 * (((&v6 | 0x958653F9) + (~&v6 | 0x6A79AC06)) ^ 0xA674DAAC);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * (v3 + 34)) ^ 0xDE ^ qword_100506AD8)) ^ byte_1004B0710[byte_10048C480[(51 * ((51 * (v3 + 34)) ^ 0xDE ^ qword_100506AD8))] ^ 0x3F])
                                   + 402))(&v6);
  *(_DWORD *)(a1 + 4) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003D33AC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v3[0] = *(_QWORD *)(a1 + 32) + 136 * (*(_DWORD *)(a1 + 4) - 1);
  v3[1] = a2;
  v4 = 742349519 * (((v3 | 0xA3459EEB) - v3 + (v3 & 0x5CBA6110)) ^ 0xD01EE928)
     + 999201902;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D345C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  unsigned int v4;

  v4 = 742349519 * ((2 * (v3 & 0x68283DF0) - v3 + 400015880) ^ 0x648CB5CB) + 999201902;
  v3[0] = a1 + 40;
  v3[1] = a2;
  sub_1003C925C((uint64_t)v3);
  return 0;
}

uint64_t sub_1003D34FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _BYTE v5[8];
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = (unint64_t)&v5[qword_100506AD8 - qword_100506BF0];
  qword_100506BF0 = 1040035123 * v3 - 0x34266BBEC1789EC6;
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  v8 = 7305 - 396850247 * (((&v6 | 0xD829B6FE) - (&v6 & 0xD829B6FE)) ^ 0xEBDB3FAA);
  v6 = a2;
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8)) ^ byte_10048C580[byte_100466920[(51 * ((51 * v3 + 58) ^ 0xDE ^ qword_100506AD8))] ^ 0x66])
                                   + 313))(&v6);
  *(_DWORD *)(a1 + 12) = v7 - 2058779428;
  return 0;
}

uint64_t sub_1003D3644(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];
  int v5;

  v2 = *(_QWORD *)(a1 - 0x5D2B531B7F4FB09ALL) + 96;
  v4[0] = a2;
  v4[1] = v2;
  v5 = (380477743 * ((v4 + 936480348 - 2 * ((unint64_t)v4 & 0x37D18E5C)) ^ 0x677C129F)) ^ 0x116BB4F8;
  sub_1003D29A0((uint64_t)v4);
  return 0;
}

uint64_t sub_1003D36F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  qword_100511448 = 1040035123 * (((qword_100506AD8 ^ qword_100511448) - (_QWORD)&v3) ^ 0x2A880BDD015215DELL);
  qword_100506AD8 = qword_100511448;
  v6 = a1 + 8;
  v4 = a2;
  v5 = 1724111581
     - 1162864081
     * (((&v4 | 0x20326004) - &v4 + (&v4 & 0xDFCD9FF8)) ^ 0xC3A0556F);
  ((void (*)(uint64_t *))((char *)*(&off_1004ECA20 + (unk_1004B0A00 ^ 0x3Au) + 807) - 4))(&v4);
  return (v7 - 1824781336);
}

uint64_t sub_1003D3824(uint64_t a1)
{
  ++*(_DWORD *)(*(_QWORD *)(a1 - 0x5D2B531B7F4FB0A2) + 24);
  return 0;
}

uint64_t sub_1003D384C(_DWORD *a1, uint64_t a2)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  int v7;
  unsigned int v8;

  v3 = qword_100506AD8 - qword_1005114D0 - (_QWORD)&v5;
  qword_1005114D0 = 1040035123 * (v3 - 0x2A880BDD015215DELL);
  qword_100506AD8 = 1040035123 * (v3 ^ 0x2A880BDD015215DELL);
  *a1 = 2;
  v6 = a2;
  v8 = 7305 - 396850247 * ((&v6 - 1774448170 - 2 * (&v6 & 0x963C11D6)) ^ 0xA5CE9882);
  ((void (*)(uint64_t *))*(&off_1004ECA20
                                   + ((51 * ((qword_100506AD8 - qword_1005114D0) ^ 0xDE)) ^ byte_10048C580[byte_100466920[(51 * ((qword_100506AD8 - qword_1005114D0) ^ 0xDE))] ^ 0x2E])
                                   + 524))(&v6);
  a1[2] = v7 - 2058779428;
  return 0;
}

char *sub_1003D39A4(char *result, char *a2, unint64_t a3)
{
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  BOOL v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
      return (char *)((uint64_t (*)(void))((char *)&loc_1003D3A78 + 4 * byte_10048C780[a3 & 7]))();
  }
  else
  {
    v3 = -(int)result & 7;
    switch((int)v3)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        v4 = *result++;
        *a2++ = v4;
LABEL_6:
        v5 = *result++;
        *a2++ = v5;
LABEL_7:
        v6 = *result++;
        *a2++ = v6;
LABEL_8:
        v7 = *result++;
        *a2++ = v7;
LABEL_9:
        v8 = *result++;
        *a2++ = v8;
LABEL_10:
        v9 = *result++;
        *a2++ = v9;
LABEL_11:
        v10 = *result++;
        *a2++ = v10;
        break;
      default:
        break;
    }
    v11 = a3 >= v3;
    v12 = a3 - v3;
    if (!v11)
      v12 = 0;
    v13 = v12 & 7;
    switch(v13)
    {
      case 0uLL:
        return result;
      case 1uLL:
        goto LABEL_24;
      case 2uLL:
        goto LABEL_23;
      case 3uLL:
        goto LABEL_22;
      case 4uLL:
        goto LABEL_21;
      case 5uLL:
        goto LABEL_20;
      case 6uLL:
        goto LABEL_19;
      case 7uLL:
        v14 = *result++;
        *a2++ = v14;
LABEL_19:
        v15 = *result++;
        *a2++ = v15;
LABEL_20:
        v16 = *result++;
        *a2++ = v16;
LABEL_21:
        v17 = *result++;
        *a2++ = v17;
LABEL_22:
        v18 = *result++;
        *a2++ = v18;
LABEL_23:
        v19 = *result++;
        *a2++ = v19;
LABEL_24:
        *a2 = *result;
        break;
      default:
        result = (char *)((uint64_t (*)(void))((char *)&loc_1003D3AC4 + 4 * byte_10048C78F[(v13 >> 3) & 7]))();
        break;
    }
  }
  return result;
}

uint64_t sub_1003D3B64(mach_port_t a1, uint64_t a2, int a3, _QWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  mach_msg_header_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  NDR_record_t v19;
  int v20;

  v15 = 1;
  v16 = a2;
  v17 = 16777472;
  v18 = a3;
  v19 = NDR_record;
  v20 = a3;
  reply_port = mig_get_reply_port();
  v14.msgh_remote_port = a1;
  v14.msgh_local_port = reply_port;
  v14.msgh_bits = -2147478253;
  *(_QWORD *)&v14.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&v14);
    reply_port = v14.msgh_local_port;
  }
  v9 = mach_msg(&v14, 3, 0x38u, 0x40u, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(v14.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(v14.msgh_local_port);
    return v10;
  }
  if (v14.msgh_id == 71)
  {
    v12 = 4294966988;
  }
  else if (v14.msgh_id == 1300)
  {
    if ((v14.msgh_bits & 0x80000000) != 0)
    {
      v12 = 4294966996;
      if (v15 == 1 && v14.msgh_size == 56 && !v14.msgh_remote_port && HIBYTE(v17) == 1)
      {
        v13 = v18;
        if (v18 == v20)
        {
          *a4 = v16;
          *a5 = v13;
          return 0;
        }
      }
    }
    else if (v14.msgh_size == 36)
    {
      v12 = 4294966996;
      if (HIDWORD(v16))
      {
        if (v14.msgh_remote_port)
          v12 = 4294966996;
        else
          v12 = HIDWORD(v16);
      }
    }
    else
    {
      v12 = 4294966996;
    }
  }
  else
  {
    v12 = 4294966995;
  }
  mach_msg_destroy(&v14);
  return v12;
}

uint64_t sub_1003D3D4C(uint64_t result)
{
  int v1;
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  v1 = 37846699;
  v2 = *(_DWORD *)(result + 4) + 882831569 * ((result & 0xE8317279 | ~(result | 0xE8317279)) ^ 0x84383F4C);
  if ((v2 + 1949002880) > 0x37
    || ((1 << (*(_BYTE *)(result + 4) - 47 * ((result & 0x79 | ~(result | 0x79)) ^ 0x4C) + 0x80)) & 0xF832F0C3F0493FLL) == 0)
  {
    v4 = v2 + 1949004685;
    v5 = v4 > 0xC;
    v6 = (1 << v4) & 0x19E1;
    if (v5 || v6 == 0)
      v1 = 37846698;
  }
  *(_DWORD *)(result + 8) = v1;
  return result;
}

void sub_1003D3DF8(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1003D3E30@<X0>(uint64_t a1@<X8>)
{
  ((void (*)(void))(*(_QWORD *)(a1 + 88) - 3))();
  return 0;
}

void sub_1003D3E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v8;

  if (a2)
    v5 = a3 == 0;
  else
    v5 = 1;
  v8 = !v5 && a4 != 0 && a5 != 0;
  __asm { BR              X8 }
}

uint64_t sub_1003D3EBC(uint64_t a1, _QWORD *a2, _DWORD *a3, _QWORD *a4, _DWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  *a2 = 0;
  *a3 = 0;
  *a4 = 0;
  *a5 = 0;
  v7 = ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 72) - 3))(24, 4101018099) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((88 * v7) ^ 0x2Bu)) - 8))();
}

uint64_t sub_1003D3F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  *(_QWORD *)(v34 - 176) = v31;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 1877214873;
  *(_DWORD *)(a1 + 16) = 0;
  v36 = v33(4096, 1358311088);
  *(_QWORD *)a1 = v36;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * ((5 * (v36 == 0)) ^ 0x71u)) - 4))(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1003D3FE0()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  v0(v1);
  return 4294922293;
}

void sub_1003D6BE0(id a1, void *a2)
{
  uint64_t v2;
  char v3;

  qword_100511520 = 861476839 * ((unint64_t)&v3 ^ qword_100511520 ^ qword_100511518 ^ 0xFD8E5F39CF35E3C0);
  qword_100511518 = qword_100511520;
  v2 = ((uint64_t (*)(void *))((char *)*(&off_1004F2630
                                                 + ((-25 * ((2 * qword_100511520) ^ 0xC0)) ^ byte_1004B2250[byte_1004B2040[(-25 * ((2 * qword_100511520) ^ 0xC0))] ^ 0x6C])
                                                 - 182)
                                       - 2))(a2);
  ((void (*)(uint64_t))((char *)*(&off_1004F2630
                                          + ((-25 * (qword_100511520 ^ 0xC0 ^ qword_100511518)) ^ byte_1004B2150[byte_1004B1F40[(-25 * (qword_100511520 ^ 0xC0 ^ qword_100511518))] ^ 0x7D])
                                          - 222)
                                - 3))(v2);
}

void sub_1003D6CF4(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Biome error %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003D6D68(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Biome error: unknown %@ stream, %@", (uint8_t *)&v3, 0x16u);
}

void sub_1003D6DEC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Internal error doing this", v1, 2u);
}

void sub_1003D6E2C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "asd:listener:shouldRejectNewConnection", a5, a6, a7, a8, 0);
}

void sub_1003D6E60(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "ASGeoCodeResult class not found - should be in CoreODIEssentials", a5, a6, a7, a8, 0);
}

void sub_1003D6E94(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000FCA8((void *)&_mh_execute_header, a1, a3, "Access after release", a5, a6, a7, a8, 0);
}

void sub_1003D6EC8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000FCA8((void *)&_mh_execute_header, a1, a3, "Malloc failed!", a5, a6, a7, a8, 0);
}

void sub_1003D6EFC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Unexpected nil", v1, 2u);
}

void sub_1003D6F3C(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  sub_100013C9C(a1);
  v2 = objc_msgSend((id)sub_100013CA4(), "localizedDescription");
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_100013CB0();
  sub_100013C7C((void *)&_mh_execute_header, v4, v5, "Error in database clean: %@)", v6, v7, v8, v9, v10);

  sub_100013C90();
}

void sub_1003D6FBC(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  sub_100013C9C(a1);
  v2 = objc_msgSend((id)sub_100013CA4(), "localizedDescription");
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_100013CB0();
  sub_100013C7C((void *)&_mh_execute_header, v4, v5, "Errror in payload expiry: %@)", v6, v7, v8, v9, v10);

  sub_100013C90();
}

void sub_1003D703C(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  sub_100013C9C(a1);
  v2 = objc_msgSend((id)sub_100013CA4(), "localizedDescription");
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_100013CB0();
  sub_100013C7C((void *)&_mh_execute_header, v4, v5, "[ASCleanupManager] Error purging JSON Bag data: %@", v6, v7, v8, v9, v10);

  sub_100013C90();
}

void sub_1003D70BC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100014CDC((void *)&_mh_execute_header, a2, a3, "WP error (likely df evaluation): %@", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D7120(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  __int16 v5;
  int v6;

  v2 = *a1;
  v3 = 134218240;
  v4 = v2;
  v5 = 1024;
  v6 = 61;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error %ld in WP %d", (uint8_t *)&v3, 0x12u);
  sub_100014CEC();
}

void sub_1003D71A4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100014CDC((void *)&_mh_execute_header, a2, a3, "WP error (likely expression parsing): %@ ", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D7208(uint64_t a1, NSObject *a2)
{
  int v2;
  _DWORD v3[2];

  v2 = *(_DWORD *)(a1 + 8);
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unsupported DF type %d", (uint8_t *)v3, 8u);
}

void sub_1003D7280(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Unhandled dataframe type", v1, 2u);
}

void sub_1003D72C0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "Failed to create persistent container, model creation failed", a5, a6, a7, a8, 0);
  sub_100019BFC();
}

void sub_1003D72F0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "Hard reset backing store. Re-initializing.", a5, a6, a7, a8, 0);
  sub_100019BFC();
}

void sub_1003D7320()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100013CB0();
  sub_100019BEC((void *)&_mh_execute_header, v0, v1, "Failed to create the path for persistent store: %@", v2, v3, v4, v5, v6);
  sub_100014CEC();
}

void sub_1003D7380()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100013CB0();
  sub_100019BEC((void *)&_mh_execute_header, v0, v1, "Failed to resolve URL for CoreAS DB using: %@", v2, v3, v4, v5, v6);
  sub_100014CEC();
}

void sub_1003D73E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100013CB0();
  sub_100019BEC((void *)&_mh_execute_header, v0, v1, "Failed to load Core Data stack: %@", v2, v3, v4, v5, v6);
  sub_100014CEC();
}

void sub_1003D7440(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "Store exists, but is in the wrong format, potential encryption key mismatch.", a5, a6, a7, a8, 0);
  sub_100019BFC();
}

void sub_1003D7470(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(_QWORD *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "failed to read existing DB data, %@", buf, 0xCu);

}

void sub_1003D74C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100013CB0();
  sub_100019BEC((void *)&_mh_execute_header, v0, v1, "Failed to migrate stack (re-insertion of existing bag failed): %@", v2, v3, v4, v5, v6);
  sub_100014CEC();
}

void sub_1003D7524(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a1, a3, "Failed to migrate stack (deletion of store failed): %@", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D758C()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_100013CB0();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "Failed to read CoreData directory %@", v1, 0xCu);
  sub_100014CEC();
}

void sub_1003D75F8(uint64_t a1, void *a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(_QWORD *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(_QWORD *)(buf + 14) = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[ASCoreDataManager] Failed to execute batch delete request for entity %@. Error: %@", buf, 0x16u);

}

void sub_1003D765C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "Failed to start RavioliManager", a5, a6, a7, a8, 0);
}

void sub_1003D7690(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "Failed to set user dir suffix", a5, a6, a7, a8, 0);
}

void sub_1003D76C4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a2, a3, "PhotoLibrary unavailable - Error: %@", a5, a6, a7, a8, 2u);
}

void sub_1003D772C(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "WARNING unsupported propertyset", buf, 2u);
}

void sub_1003D7768(uint64_t a1, void *a2)
{
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  __int16 v9;
  void *v10;

  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)a1 + 8) + 40);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedDescription"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)a1 + 8) + 40), "userInfo"));
  v7 = 138412546;
  v8 = v5;
  v9 = 2112;
  v10 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error fetching DB_R09283478 object: %@\n%@", (uint8_t *)&v7, 0x16u);

}

void sub_1003D7848(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "No DB_R09283478 object found", a5, a6, a7, a8, 0);
}

void sub_1003D787C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000E0C8((void *)&_mh_execute_header, a1, a3, "Error unexpected type fetching DB_R09283478 object.", a5, a6, a7, a8, 0);
}

void sub_1003D78B0(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "ADIORequest failed with error %d", (uint8_t *)v2, 8u);
  sub_100019BFC();
}

void sub_1003D7920(void *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "description"));
  v5 = 138412290;
  v6 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Ignoring error %@", (uint8_t *)&v5, 0xCu);

}

void sub_1003D79C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "IDS error nil or no conforming enoding for PAC", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D79F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020000();
  sub_10002001C((void *)&_mh_execute_header, v0, v1, "Error %d, (0x%lx)", v2, v3, v4, v5, v6);
  sub_100014CEC();
}

void sub_1003D7A50()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_100020000();
  sub_10002001C((void *)&_mh_execute_header, v0, v1, "Error %d (0x%lx)", v2, v3, v4, v5, v6);
  sub_100014CEC();
}

void sub_1003D7AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000FCA8((void *)&_mh_execute_header, &_os_log_default, a3, "Ran out of memory creating buffer for Certificate", a5, a6, a7, a8, 0);
  sub_100019BFC();
}

void sub_1003D7AE4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a2, a3, "ERROR getting BAA certificate %@", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D7B48()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Expected ASRiskScoreEngine - fetchGeoCodingsForAddresses not to be used", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7B74()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Expected ASRiskScoreEngine - updateGeoCodingsForAddresses not to be used", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7BA0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Expected ASRiskScoreEngine - updateRavioliWithCompletion not to be used", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7BCC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "ASRiskScoreEngine fetchConfigWithCompletion was not expected to be called", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7BF8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "ASRiskScoreEngine fetchConfigThrowingWithCompletion was not expected to be called", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7C24(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a1, a3, "%s: Not expected to be called.", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D7C94(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a1, a3, "%s: Not expected to be called.", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D7D04(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a1, a3, "%s: Not expected to be called.", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D7D74()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000FCA8((void *)&_mh_execute_header, v0, v1, "Not implemented", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7DA0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a1, a3, "%s: Not expected to be called.", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D7E10(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 8) + 40);
  v4 = 138412290;
  v5 = v3;
  sub_100028CEC((void *)&_mh_execute_header, a2, a3, "Error executing delete request: %@", (uint8_t *)&v4);
  sub_100014CEC();
}

void sub_1003D7E84(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "ERROR in CoreData: %@", (uint8_t *)&v2, 0xCu);
  sub_100014CEC();
}

void sub_1003D7EF4(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138412290;
  v4 = a1;
  sub_100028CEC((void *)&_mh_execute_header, a2, a3, "Error saving: %@", (uint8_t *)&v3);
  sub_100014CEC();
}

void sub_1003D7F5C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Error getting entities for DB_C56902430\n", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7F88()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Error getting entities for DB_R101288420\n", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7FB4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Unexpected result type from cache cleanup batch delete", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D7FE0(uint8_t *a1, _BYTE *a2, NSObject *a3)
{
  *a1 = 0;
  *a2 = 0;
  sub_100028CD4((void *)&_mh_execute_header, a3, (uint64_t)a3, "Unexpected result type from cache cleanup batch delete", a1);
}

void sub_1003D8014()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000FCA8((void *)&_mh_execute_header, v0, v1, "Unexpected result type from cache cleanup batch delete", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D8040(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 138412290;
  *(_QWORD *)(a2 + 4) = a1;
  sub_100028CEC((void *)&_mh_execute_header, a3, (uint64_t)a3, "Error in payload cache cleanup: %@", (uint8_t *)a2);

  sub_100028D0C();
}

void sub_1003D8088()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  NSObject *v7;

  sub_100028CF8();
  sub_100028CBC(v2, v3, v4, 5.778e-34);
  sub_100028CE0((void *)&_mh_execute_header, v7, v5, "Geocoding Removal failed: %@\n%@", v6);

  sub_100028D0C();
}

void sub_1003D80CC(uint8_t *a1, _BYTE *a2, NSObject *a3)
{
  *a1 = 0;
  *a2 = 0;
  sub_100028CD4((void *)&_mh_execute_header, a3, (uint64_t)a3, "Error expected only CLLocation or NSNull in locations argument", a1);
}

void sub_1003D8100(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 138412290;
  *(_QWORD *)(a2 + 4) = a1;
  sub_100028CEC((void *)&_mh_execute_header, a3, (uint64_t)a3, "Error fetching ASGeoCodeCacheEntries for deletion: %@", (uint8_t *)a2);

  sub_100028D0C();
}

void sub_1003D8148(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 138412290;
  *(_QWORD *)(a2 + 4) = a1;
  sub_100028CEC((void *)&_mh_execute_header, a3, (uint64_t)a3, "Error getting ASGeoCodeCacheEntry count: %@", (uint8_t *)a2);

  sub_100028D0C();
}

void sub_1003D8190()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "ASGeoCodeResult class not found - should be in CoreODIEssentials", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D81BC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  NSObject *v7;

  sub_100028CF8();
  sub_100028CBC(v2, v3, v4, 5.778e-34);
  sub_100028CE0((void *)&_mh_execute_header, v7, v5, "Binding Removal failed: %@\n%@", v6);

  sub_100028D0C();
}

void sub_1003D8200(NSObject *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  const __CFString *v4;

  v3 = 138412290;
  v4 = CFSTR("DB_R100605578");
  sub_100028CEC((void *)&_mh_execute_header, a1, a3, "Error getting entities for %@\n", (uint8_t *)&v3);
  sub_100014CEC();
}

void sub_1003D8274(uint64_t a1, uint64_t *a2, NSObject *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *a2;
  v4 = 138412546;
  v5 = a1;
  v6 = 2112;
  v7 = v3;
  sub_100028CE0((void *)&_mh_execute_header, a3, (uint64_t)a3, "Error purgingPayloadCacheForWorkflowID: %@ withError: %@", (uint8_t *)&v4);
  sub_100014CEC();
}

void sub_1003D82F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000FCA8((void *)&_mh_execute_header, v0, v1, "This function is not implemented", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D831C(uint64_t *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  sub_100028CE0((void *)&_mh_execute_header, a3, (uint64_t)a3, "Error fetching JSONBag with ID %@: %@", (uint8_t *)&v4);
  sub_100014CEC();
}

void sub_1003D8398(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = *a1;
  v4 = 138412290;
  v5 = v3;
  sub_100028CEC((void *)&_mh_execute_header, a2, a3, "Unexpected Error: More than 1 bag with ID %@ found.", (uint8_t *)&v4);
  sub_100014CEC();
}

void sub_1003D8404(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint8_t *v5;
  NSObject *v6;

  sub_100028CBC(a1, (uint64_t)a2, a3, 5.778e-34);
  sub_100028CE0((void *)&_mh_execute_header, v6, v4, "Error fetching JSON Bag with ID %@: %@", v5);

  sub_100028D0C();
}

void sub_1003D844C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  NSObject *v7;

  sub_100028CF8();
  sub_100028CBC(v2, v3, v4, 5.778e-34);
  sub_100028CE0((void *)&_mh_execute_header, v7, v5, "Error fetching DB_R09283478 object: %@\n%@", v6);

  sub_100028D0C();
}

void sub_1003D8490()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "No DB_R09283478 object found", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D84BC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Error unexpected type fetching DB_R09283478 object.", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D84E8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a2, a3, "Error deserializing: %@", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D854C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a2, a3, "Error reading with NSSecureCoding: %@", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D85B0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100019BEC((void *)&_mh_execute_header, a2, a3, "Error encoding: %@", a5, a6, a7, a8, 2u);
  sub_100014CEC();
}

void sub_1003D8614()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_100013CB0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Error reading certificate: %@", v1, 0xCu);
}

void sub_1003D8684()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002BE94();
  sub_10002BE74((void *)&_mh_execute_header, v0, v1, "Error storing certificate: %d", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D86E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Error adding leaf certificate", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D8710()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Error adding issuer certificate", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D873C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Error adding item", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D8768()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "ignoring error deleting BAA issuer certificate", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D8794()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "ignoring error deleting BAA certificate", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D87C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "ignoring error deleting BAA key", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D87EC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "Error saving keys and certificates in keychain", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D8818()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10001FFF4();
  sub_10000E0C8((void *)&_mh_execute_header, v0, v1, "ERROR unexpected total certificates returned", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D8844(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t v11;

  sub_100013C9C(a1);
  v2 = objc_msgSend((id)sub_100013CA4(), "userInfo");
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", NSUnderlyingErrorKey));
  sub_100013CB0();
  sub_100013C7C((void *)&_mh_execute_header, v5, v6, "Underlying error %@", v7, v8, v9, v10, v11);

  sub_10002BE84();
}

void sub_1003D88E4(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  sub_100013C9C(a1);
  v2 = objc_msgSend((id)sub_100013CA4(), "description");
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_100013CB0();
  sub_100013C7C((void *)&_mh_execute_header, v4, v5, "Error %@", v6, v7, v8, v9, v10);

  sub_100013C90();
}

void sub_1003D8964()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002BE94();
  sub_10002BE74((void *)&_mh_execute_header, v0, v1, "Error %d getting issuer cert", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D89C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002BE94();
  sub_10002BE74((void *)&_mh_execute_header, v0, v1, "Error %d getting leaf cert", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D8A24()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10002BE94();
  sub_10002BE74((void *)&_mh_execute_header, v0, v1, "Error %d getting key", v2, v3, v4, v5, v6);
  sub_100019BFC();
}

void sub_1003D8A84(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "TimedOut error %d", (uint8_t *)v2, 8u);
}

void sub_1003D8AF8(int a1, NSObject *a2)
{
  _DWORD v2[2];

  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to set UUID into Keychain: %d", (uint8_t *)v2, 8u);
}

id objc_msgSend_A6B42kYrDuXnlUJs_IaS2bByRUGdVAKHz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "A6B42kYrDuXnlUJs:IaS2bByRUGdVAKHz:");
}

id objc_msgSend_Dp2N5iuaONVuK1T4_JMJGqFLtbMZn4EGN_QsX3tfdMvsGwvY0F_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "Dp2N5iuaONVuK1T4:JMJGqFLtbMZn4EGN:QsX3tfdMvsGwvY0F:withCompletion:");
}

id objc_msgSend_E5J0OeRApCYQUXDZ_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "E5J0OeRApCYQUXDZ:completion:");
}

id objc_msgSend_GyF0atX3JpCKc9pK(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "GyF0atX3JpCKc9pK");
}

id objc_msgSend_HeSoUpzppdCV64Ik_xNtFS0jGMQPgkTi7_i4KDOQicW9Xd5WBz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "HeSoUpzppdCV64Ik:xNtFS0jGMQPgkTi7:i4KDOQicW9Xd5WBz:");
}

id objc_msgSend_ILEFYKTi2wz6Hf5l_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ILEFYKTi2wz6Hf5l:");
}

id objc_msgSend_ISOCountryCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ISOCountryCode");
}

id objc_msgSend_Iv2P4WxadRhQ5ldX_GymwzUEOAaggmTfe_Y16kne8dG6NtD3ma_completion_yVhet0BX5E1CDncz_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "Iv2P4WxadRhQ5ldX:GymwzUEOAaggmTfe:Y16kne8dG6NtD3ma:completion:yVhet0BX5E1CDncz:");
}

id objc_msgSend_JI0A3nkqsab9cUj8_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JI0A3nkqsab9cUj8:completion:");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_JmiV9VW8P3Gxz1H7(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JmiV9VW8P3Gxz1H7");
}

id objc_msgSend_KKbGrSwDukIWFRjI_i4KDOQicW9Xd5WBz_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "KKbGrSwDukIWFRjI:i4KDOQicW9Xd5WBz:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_KqWH25SjlYcX4wo6_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "KqWH25SjlYcX4wo6:completion:");
}

id objc_msgSend_KvXBZ2Y159GbeEgH_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "KvXBZ2Y159GbeEgH:");
}

id objc_msgSend_L2S3goqpYnHiXTRg_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "L2S3goqpYnHiXTRg:");
}

id objc_msgSend_LjU00AjDrcTJbVJD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "LjU00AjDrcTJbVJD");
}

id objc_msgSend_LygrmXh7W0Hs2O8n_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "LygrmXh7W0Hs2O8n:");
}

id objc_msgSend_N2XtGIRzgUKLkZMS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "N2XtGIRzgUKLkZMS:");
}

id objc_msgSend_N6iJbZh5ycxf9a3z(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "N6iJbZh5ycxf9a3z");
}

id objc_msgSend_N8Azi3NI6QrNPsLP(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "N8Azi3NI6QrNPsLP");
}

id objc_msgSend_OiM1BBSmKozL6ooU(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "OiM1BBSmKozL6ooU");
}

id objc_msgSend_OtYQBavMHoCfV2sk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "OtYQBavMHoCfV2sk:");
}

id objc_msgSend_PJ7tY2vmxQ3CBhNO(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "PJ7tY2vmxQ3CBhNO");
}

id objc_msgSend_PLMCCRRqEw4moT9R_UtPlzRffoEpw7Ue1_SFkZRA5Ek9YzhDRs_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "PLMCCRRqEw4moT9R:UtPlzRffoEpw7Ue1:SFkZRA5Ek9YzhDRs:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_PpszCwt7GD641hHj(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "PpszCwt7GD641hHj");
}

id objc_msgSend_QRKmlh1jb9SsY8of_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "QRKmlh1jb9SsY8of:");
}

id objc_msgSend_QeMnG23X94qgz7jT_hostChallenge_challengeResponse_seid_nonce_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "QeMnG23X94qgz7jT:hostChallenge:challengeResponse:seid:nonce:completion:");
}

id objc_msgSend_SKiIwgejuzELNOY0_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SKiIwgejuzELNOY0:completion:");
}

id objc_msgSend_SNfHoVX7xML3tdWp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SNfHoVX7xML3tdWp");
}

id objc_msgSend_SvXmeMlpC8nbshta_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SvXmeMlpC8nbshta:name:");
}

id objc_msgSend_U4k02bIWNYQCLSGK_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "U4k02bIWNYQCLSGK:completion:");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLsForDirectory_inDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLsForDirectory:inDomains:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_Uh5ScKFVtUOjeURk(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "Uh5ScKFVtUOjeURk");
}

id objc_msgSend_UupMWO2j2nYek7xf_exi2C8VfynTXu5cU_TYPlhTGwKuAdWgfx_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UupMWO2j2nYek7xf:exi2C8VfynTXu5cU:TYPlhTGwKuAdWgfx:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_WnJ3gJFPRgsreXQi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "WnJ3gJFPRgsreXQi:");
}

id objc_msgSend_XIxEGt72u9dQYi43_S6srINK5PmHWLUdD_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "XIxEGt72u9dQYi43:S6srINK5PmHWLUdD:");
}

id objc_msgSend_Xj38ZYkbLwtCgBTH(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "Xj38ZYkbLwtCgBTH");
}

id objc_msgSend_Xw2iAzNBHudJx7Ph_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "Xw2iAzNBHudJx7Ph:");
}

id objc_msgSend_YGGzx6XAo42A7s6x(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "YGGzx6XAo42A7s6x");
}

id objc_msgSend_YKIcrg8ijyspX6ho_forVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "YKIcrg8ijyspX6ho:forVersion:");
}

id objc_msgSend_YKIcrg8ijyspX6ho_forVersion_entityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "YKIcrg8ijyspX6ho:forVersion:entityName:");
}

id objc_msgSend_YMeSiVAJwqHb7P3U_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "YMeSiVAJwqHb7P3U:completion:");
}

id objc_msgSend_YdwGDxa5y8ubHXip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "YdwGDxa5y8ubHXip:");
}

id objc_msgSend_Z0E7K4HXPkrVY9dm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "Z0E7K4HXPkrVY9dm:");
}

id objc_msgSend_ZfE6lVphNUVrZcKx_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ZfE6lVphNUVrZcKx:completion:");
}

id objc_msgSend_ZkTXckPDVjRWZuVM_QsX3tfdMvsGwvY0F_oMKZEzaKOVd8YlLk_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ZkTXckPDVjRWZuVM:QsX3tfdMvsGwvY0F:oMKZEzaKOVd8YlLk:withCompletion:");
}

id objc_msgSend__crossPlatformUnifiedMeContactWithKeysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_crossPlatformUnifiedMeContactWithKeysToFetch:error:");
}

id objc_msgSend__ex9HyFJUdpLOOtaX_inS0qtOusqaPbbgj_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ex9HyFJUdpLOOtaX:inS0qtOusqaPbbgj:");
}

id objc_msgSend__extractPHAssetPropertySets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractPHAssetPropertySets:");
}

id objc_msgSend__initWithSuiteName_container_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithSuiteName:container:");
}

id objc_msgSend__uTjOtNxowyWuuBCA_N3UHg1ij3irF9uUu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uTjOtNxowyWuuBCA:N3UHg1ij3irF9uUu:");
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryAppleAccount");
}

id objc_msgSend_aa_primaryEmail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryEmail");
}

id objc_msgSend_accountHandles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountHandles");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeys");
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_assessment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assessment");
}

id objc_msgSend_assessmentGUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assessmentGUID");
}

id objc_msgSend_assessmentGUIDSeeds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assessmentGUIDSeeds");
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeForKey:");
}

id objc_msgSend_attributeSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeSet");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auditToken");
}

id objc_msgSend_authenticationCertificateSignatures(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticationCertificateSignatures");
}

id objc_msgSend_authorAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorAddresses");
}

id objc_msgSend_authorEmailAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorEmailAddresses");
}

id objc_msgSend_authorizationStatusForEntityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatusForEntityType:");
}

id objc_msgSend_ax7Szgk7yfiKNgSDError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ax7Szgk7yfiKNgSDError:");
}

id objc_msgSend_b8mzIZQ1GCTnhVAP_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "b8mzIZQ1GCTnhVAP:completion:");
}

id objc_msgSend_bQfuQcBGI0pnDtDP_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bQfuQcBGI0pnDtDP:completion:");
}

id objc_msgSend_bag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bag");
}

id objc_msgSend_bagIDForDF_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bagIDForDF:");
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_bfeta0KhydoCRvAc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bfeta0KhydoCRvAc");
}

id objc_msgSend_bindings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bindings");
}

id objc_msgSend_bindingsEvaluator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bindingsEvaluator");
}

id objc_msgSend_bindingsToCompare(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bindingsToCompare");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_bundleWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithPath:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bytes");
}

id objc_msgSend_c94QZ147F1UWY71l_jkjlhN0UgO78kW6q_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "c94QZ147F1UWY71l:jkjlhN0UgO78kW6q:error:");
}

id objc_msgSend_cGauGmZFPJJkT1d3_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cGauGmZFPJJkT1d3:");
}

id objc_msgSend_cLH5z0XbtucU9RrW_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cLH5z0XbtucU9RrW:");
}

id objc_msgSend_cR9LfsxC1Nz4IZKu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cR9LfsxC1Nz4IZKu");
}

id objc_msgSend_cZK3HwMuoGcCgDQI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cZK3HwMuoGcCgDQI");
}

id objc_msgSend_cacheManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheManager");
}

id objc_msgSend_cacheV2MaxAge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheV2MaxAge");
}

id objc_msgSend_callStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callStatus");
}

id objc_msgSend_canSerialize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSerialize:");
}

id objc_msgSend_canonicalStringForAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canonicalStringForAddress:");
}

id objc_msgSend_captureWithBindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "captureWithBindings:");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkResourceIsReachableAndReturnError:");
}

id objc_msgSend_city(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "city");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_compute_UtPlzRffoEpw7Ue1_SFkZRA5Ek9YzhDRs_jAVr67FQ6j4EzsgV_i4KDOQicW9Xd5WBz_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compute:UtPlzRffoEpw7Ue1:SFkZRA5Ek9YzhDRs:jAVr67FQ6j4EzsgV:i4KDOQicW9Xd5WBz:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_computeHash_jAVr67FQ6j4EzsgV_i4KDOQicW9Xd5WBz_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computeHash:jAVr67FQ6j4EzsgV:i4KDOQicW9Xd5WBz:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_configDictionaryForCoreODI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configDictionaryForCoreODI");
}

id objc_msgSend_configurePush(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurePush");
}

id objc_msgSend_connectedDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectedDate");
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connection");
}

id objc_msgSend_containerURLForSecurityApplicationGroupIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerURLForSecurityApplicationGroupIdentifier:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinate");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_coreDataManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coreDataManager");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForFetchRequest:error:");
}

id objc_msgSend_countTransactionsWithStartDateOffset_endDateOffset_transactionSources_locationType_locationFilterDistance_lat_lon_maxCount_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countTransactionsWithStartDateOffset:endDateOffset:transactionSources:locationType:locationFilterDistance:lat:lon:maxCount:completionHandler:");
}

id objc_msgSend_counter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "counter");
}

id objc_msgSend_country(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "country");
}

id objc_msgSend_countryCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countryCode");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createdAt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createdAt");
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocale");
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRunLoop");
}

id objc_msgSend_cv2QAcQ2CDdiHuN6_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cv2QAcQ2CDdiHuN6:");
}

id objc_msgSend_dKsJLlNX54lzKt5n_eqF2XJh3hHBJQf2K_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dKsJLlNX54lzKt5n:eqF2XJh3hHBJQf2K:");
}

id objc_msgSend_dOcbonNWKg7PJwsF_QlGRpofDrDPpBRod_mfJ8r89KwA6nfqNY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dOcbonNWKg7PJwsF:QlGRpofDrDPpBRod:mfJ8r89KwA6nfqNY:");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithData:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_deleteObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteObject:");
}

id objc_msgSend_dependenciesForStringExpression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dependenciesForStringExpression:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_dfMaxAge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dfMaxAge");
}

id objc_msgSend_dfVal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dfVal");
}

id objc_msgSend_df_ttl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "df_ttl");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfURL:error:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_digestIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "digestIndex");
}

id objc_msgSend_distanceFromLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceFromLocation:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duration");
}

id objc_msgSend_eJSthhES04gLkDjz_i4KDOQicW9Xd5WBz_TWWnmIjkBlMfHmma_eZh1LWn1FH2uQtPX_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eJSthhES04gLkDjz:i4KDOQicW9Xd5WBz:TWWnmIjkBlMfHmma:eZh1LWn1FH2uQtPX:");
}

id objc_msgSend_email(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "email");
}

id objc_msgSend_embeddedSecureElement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "embeddedSecureElement");
}

id objc_msgSend_enableCHShowProtectedAppsForManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableCHShowProtectedAppsForManager:");
}

id objc_msgSend_encodeBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBytes:length:");
}

id objc_msgSend_encodeInt32_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt32:forKey:");
}

id objc_msgSend_encodeInt64_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt64:forKey:");
}

id objc_msgSend_encodeInt_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodedData");
}

id objc_msgSend_encryptedAGUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptedAGUID");
}

id objc_msgSend_encryptedTSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptedTSID");
}

id objc_msgSend_endSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSession");
}

id objc_msgSend_endpointID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointID");
}

id objc_msgSend_endpointIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointIdentifier");
}

id objc_msgSend_engineType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "engineType");
}

id objc_msgSend_entityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityForName:inManagedObjectContext:");
}

id objc_msgSend_entityName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityName");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumeratorAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtPath:");
}

id objc_msgSend_errorDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorDomain");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_evaluateWithAttribute_expression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithAttribute:expression:");
}

id objc_msgSend_evaluateWithObject_substitutionVariables_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithObject:substitutionVariables:");
}

id objc_msgSend_evrtH713YbFfEOzk_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evrtH713YbFfEOzk:error:");
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeFetchRequest:error:");
}

id objc_msgSend_executeRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeRequest:error:");
}

id objc_msgSend_expressionDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expressionDictionary");
}

id objc_msgSend_expressionValueWithObject_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expressionValueWithObject:context:");
}

id objc_msgSend_expressionWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expressionWithFormat:");
}

id objc_msgSend_f5FVXJrOBjzaLi8u_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "f5FVXJrOBjzaLi8u:");
}

id objc_msgSend_f7RoJXIsBwkuxLd1_completionBlock_fNW5Ll4jBXJAcsCk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "f7RoJXIsBwkuxLd1:completionBlock:fNW54jBXJAcsCk:");
}

id objc_msgSend_f9CcEr7NPHjNuSLf_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "f9CcEr7NPHjNuSLf:error:");
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "familyName");
}

id objc_msgSend_fetchAssetsWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAssetsWithOptions:");
}

id objc_msgSend_fetchFor_withBindings_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchFor:withBindings:completionHandler:");
}

id objc_msgSend_fetchGeoCodingsForAddresses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchGeoCodingsForAddresses:");
}

id objc_msgSend_fetchRavioliDataFromStoreFor_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRavioliDataFromStoreFor:completion:");
}

id objc_msgSend_fetchRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequest");
}

id objc_msgSend_fetchRequestWithEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequestWithEntityName:");
}

id objc_msgSend_fields(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fields");
}

id objc_msgSend_fileAttributes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileAttributes");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileHandleForReadingAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileHandleForReadingAtPath:");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSystemRepresentation");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_filterWithIsIncluded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterWithIsIncluded:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_finalResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finalResult");
}

id objc_msgSend_findForUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findForUuid:");
}

id objc_msgSend_finishEncoding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishEncoding");
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstName");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_fjcJHNNiQ83H10La(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fjcJHNNiQ83H10La");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_foundItemCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "foundItemCount");
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullName");
}

id objc_msgSend_gFJw2BGPtEQWyLz5(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gFJw2BGPtEQWyLz5");
}

id objc_msgSend_generatePhoneAuthenticationSignatureOverData_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generatePhoneAuthenticationSignatureOverData:withCompletion:");
}

id objc_msgSend_getActiveContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getActiveContexts:");
}

id objc_msgSend_getCryptogram_challengeResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCryptogram:challengeResponse:");
}

id objc_msgSend_getEnvironmentValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getEnvironmentValue");
}

id objc_msgSend_getHwSupport(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHwSupport");
}

id objc_msgSend_getLocalUrl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLocalUrl");
}

id objc_msgSend_getUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUUIDBytes:");
}

id objc_msgSend_ggQex4P6Prvm5Zac(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ggQex4P6Prvm5Zac");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "givenName");
}

id objc_msgSend_hKjCyPlJs74k9vMV_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hKjCyPlJs74k9vMV:");
}

id objc_msgSend_hSmO2OC6etXclsKP_edrv2qHmtbt1iEyf_QsX3tfdMvsGwvY0F_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hSmO2OC6etXclsKP:edrv2qHmtbt1iEyf:QsX3tfdMvsGwvY0F:completion:");
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasChanges");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hi5ump20ke7n4x6o_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hi5ump20ke7n4x6o:");
}

id objc_msgSend_hi5ump20ke7n4x6o_hikv315wqxcu0dpl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hi5ump20ke7n4x6o:hikv315wqxcu0dpl:");
}

id objc_msgSend_hiMi2bftgysHNCmu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hiMi2bftgysHNCmu");
}

id objc_msgSend_horizontalAccuracy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalAccuracy");
}

id objc_msgSend_i4KDOQicW9Xd5WBz(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "i4KDOQicW9Xd5WBz");
}

id objc_msgSend_id(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "id");
}

id objc_msgSend_initLocationManager_dko5Pwm7el1Ulopu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initLocationManager:dko5Pwm7el1Ulopu:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initWithAddress_location_updated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAddress:location:updated:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBase64EncodedString:options:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithCoreDataManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoreDataManager:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithEffectiveBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffectiveBundle:");
}

id objc_msgSend_initWithEntity_insertIntoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntity:insertIntoManagedObjectContext:");
}

id objc_msgSend_initWithEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntityName:");
}

id objc_msgSend_initWithFetchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFetchRequest:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithGyF0atX3JpCKc9pK_qfSDGTGvqd3Hruzg_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGyF0atX3JpCKc9pK:qfSDGTGvqd3Hruzg:");
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:ascending:");
}

id objc_msgSend_initWithKey_updatedDate_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:updatedDate:value:");
}

id objc_msgSend_initWithLatitude_longitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLatitude:longitude:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithName_managedObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:managedObjectModel:");
}

id objc_msgSend_initWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:");
}

id objc_msgSend_initWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPattern:options:error:");
}

id objc_msgSend_initWithQueryString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueryString:attributes:");
}

id objc_msgSend_initWithQueryString_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueryString:context:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithSmoothFunctions_X5iUjoUzZPsj1b68_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSmoothFunctions:X5iUjoUzZPsj1b68:");
}

id objc_msgSend_initWithStartDate_endDate_maxEvents_lastN_reversed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:endDate:maxEvents:lastN:reversed:");
}

id objc_msgSend_initWithStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStore:");
}

id objc_msgSend_initWithStore_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStore:options:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSinceNow:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDBytes:");
}

id objc_msgSend_initWithZKQesNL3BCNYUjZw_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZKQesNL3BCNYUjZw:");
}

id objc_msgSend_initWithdEyUJuqYjUufZYGN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithdEyUJuqYjUufZYGN:");
}

id objc_msgSend_initWithdEyUJuqYjUufZYGN_CYjHC6NGGdOD33W9_g8citQiyynNCr9c4_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithdEyUJuqYjUufZYGN:CYjHC6NGGdOD33W9:g8citQiyynNCr9c4:");
}

id objc_msgSend_initWithdEyUJuqYjUufZYGN_Po0NnEfbQHpSgzj7_jHoy3L8RogTTbjjB_X5iUjoUzZPsj1b68_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithdEyUJuqYjUufZYGN:Po0NnEfbQHpSgzj7:jHoy3L8RogTTbjjB:X5iUjoUzZPsj1b68:");
}

id objc_msgSend_initWithfOZWnqN9bY6jwOMf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithfOZWnqN9bY6jwOMf:");
}

id objc_msgSend_initWithsk6s81V5EsZL9icr_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithsk6s81V5EsZL9icr:");
}

id objc_msgSend_initWithtaDFBApmLBObrNlM_itCyNcNHxjurvzrS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithtaDFBApmLBObrNlM:itCyNcNHxjurvzrS:");
}

id objc_msgSend_initializeNFHardwareManagerState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeNFHardwareManagerState");
}

id objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertNewObjectForEntityForName:inManagedObjectContext:");
}

id objc_msgSend_insertNewObjectInManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertNewObjectInManagedObjectContext:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isFeatureEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFeatureEnabled");
}

id objc_msgSend_isFromMDM(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFromMDM");
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMainThread");
}

id objc_msgSend_isProducedByAccessory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProducedByAccessory");
}

id objc_msgSend_isSimulatedBySoftware(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSimulatedBySoftware");
}

id objc_msgSend_j2Xe3JZjJDN8Y8xD_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "j2Xe3JZjJDN8Y8xD:");
}

id objc_msgSend_jCbmcix0xxhNVOSS_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jCbmcix0xxhNVOSS:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_kernelInfoEvaluator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kernelInfoEvaluator");
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "key");
}

id objc_msgSend_lL9A0cjB5y6UgZsI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lL9A0cjB5y6UgZsI");
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastName");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lengthOfBytesUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lengthOfBytesUsingEncoding:");
}

id objc_msgSend_level(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "level");
}

id objc_msgSend_listDependencies_jAVr67FQ6j4EzsgV_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listDependencies:jAVr67FQ6j4EzsgV:");
}

id objc_msgSend_listDependenciesForDataframe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listDependenciesForDataframe:");
}

id objc_msgSend_listDependenciesForIntExpression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listDependenciesForIntExpression:");
}

id objc_msgSend_listDependenciesForStringType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listDependenciesForStringType:");
}

id objc_msgSend_loadAllFromPreferencesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadAllFromPreferencesWithCompletionHandler:");
}

id objc_msgSend_loadPersistentStoresWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadPersistentStoresWithCompletionHandler:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "location");
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lock");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longLongValue");
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longValue");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_m2fzkz0hfx3YgwiD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "m2fzkz0hfx3YgwiD");
}

id objc_msgSend_mF9a0iyS9JaiQAjp_pXKoPMsQI9AYa6US_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mF9a0iyS9JaiQAjp:pXKoPMsQI9AYa6US:");
}

id objc_msgSend_mILKmibfRWMwFVWD_iZGmRj7VI4MJ9lO1_AndError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mILKmibfRWMwFVWD:iZGmRj7VI4MJ9lO1:AndError:");
}

id objc_msgSend_macVal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "macVal");
}

id objc_msgSend_matchesInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchesInString:options:range:");
}

id objc_msgSend_methodForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodForSelector:");
}

id objc_msgSend_middleName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "middleName");
}

id objc_msgSend_migrateCoreDataManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateCoreDataManager");
}

id objc_msgSend_missingBag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "missingBag");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_nC4QvxwoXaT2I88i(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nC4QvxwoXaT2I88i");
}

id objc_msgSend_nQ82YhFf5OQDL4Qk_UtPlzRffoEpw7Ue1_SFkZRA5Ek9YzhDRs_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nQ82YhFf5OQDL4Qk:UtPlzRffoEpw7Ue1:SFkZRA5Ek9YzhDRs:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_nYOW3DfIUVSEf2Hm_rTZQrPNUbDSIifrh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nYOW3DfIUVSEf2Hm:rTZQrPNUbDSIifrh:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_namePrefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "namePrefix");
}

id objc_msgSend_nameSuffix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameSuffix");
}

id objc_msgSend_newBackgroundContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newBackgroundContext");
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextObject");
}

id objc_msgSend_nickname(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nickname");
}

id objc_msgSend_normalizedValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizedValue");
}

id objc_msgSend_notifyCachesWereRemovedWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyCachesWereRemovedWithCompletionHandler:");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "now");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "null");
}

id objc_msgSend_numberOfMatchesInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfMatchesInString:options:range:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectEnumerator");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_openAndWaitWithUpgrade_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openAndWaitWithUpgrade:error:");
}

id objc_msgSend_originalDataLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originalDataLength");
}

id objc_msgSend_otdDestinationHost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "otdDestinationHost");
}

id objc_msgSend_otlAmd6vMhhfwQLu_withObject_errorValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "otlAmd6vMhhfwQLu:withObject:errorValue:");
}

id objc_msgSend_p3IhAuuUciVQl4AK(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p3IhAuuUciVQl4AK");
}

id objc_msgSend_pDYAPbGDBo6ZMVXG_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pDYAPbGDBo6ZMVXG:");
}

id objc_msgSend_pEmail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pEmail");
}

id objc_msgSend_pPhone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pPhone");
}

id objc_msgSend_pRfmPXmMPeo7rsRf_N3UHg1ij3irF9uUu_QsX3tfdMvsGwvY0F_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pRfmPXmMPeo7rsRf:N3UHg1ij3irF9uUu:QsX3tfdMvsGwvY0F:completionBlock:");
}

id objc_msgSend_passesOfStyles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passesOfStyles:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pausePrecomputationsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pausePrecomputationsWithCompletionHandler:");
}

id objc_msgSend_payloadWorkflowTTLs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadWorkflowTTLs");
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:");
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAndWait:");
}

id objc_msgSend_persistentStoreDescriptionWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreDescriptionWithURL:");
}

id objc_msgSend_personNameComponentsFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personNameComponentsFromString:");
}

id objc_msgSend_phone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phone");
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumber");
}

id objc_msgSend_postalCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postalCode");
}

id objc_msgSend_ppirDXSrO0poQaQJ(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ppirDXSrO0poQaQJ");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_presentTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentTime");
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processIdentifier");
}

id objc_msgSend_processServerJSONDataframeForBagWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processServerJSONDataframeForBagWithID:");
}

id objc_msgSend_profID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profID");
}

id objc_msgSend_profileID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profileID");
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_propertySets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertySets");
}

id objc_msgSend_protocolConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protocolConfiguration");
}

id objc_msgSend_publisher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisher");
}

id objc_msgSend_publisherFromStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherFromStartTime:");
}

id objc_msgSend_publisherWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherWithOptions:");
}

id objc_msgSend_publisherWithStartTime_endTime_maxEvents_lastN_reversed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherWithStartTime:endTime:maxEvents:lastN:reversed:");
}

id objc_msgSend_pushInitialCoreODIConfig(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushInitialCoreODIConfig");
}

id objc_msgSend_qSbwrv1Q3SgLu8BN_gXKoR0dNwQUyaeOl_lEWFPyiFIAJ2uoyd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "qSbwrv1Q3SgLu8BN:gXKoR0dNwQUyaeOl:lEWFPyiFIAJ2uoyd:");
}

id objc_msgSend_qY1DoQqvimc9pbAA_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "qY1DoQqvimc9pbAA:");
}

id objc_msgSend_qfSDGTGvqd3Hruzg(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "qfSDGTGvqd3Hruzg");
}

id objc_msgSend_qnmnskUkG0QuvlrL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "qnmnskUkG0QuvlrL");
}

id objc_msgSend_queryKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryKey");
}

id objc_msgSend_queryMetaDataSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryMetaDataSync");
}

id objc_msgSend_queryTransactionsWithStartDateOffset_endDateOffset_transactionSources_locationType_locationFilterDistance_lat_lon_maxCount_sortOrder_sortByAttributes_attributes_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryTransactionsWithStartDateOffset:endDateOffset:transactionSources:locationType:locationFilterDistance:lat:lon:maxCount:sortOrder:sortByAttributes:attributes:completionHandler:");
}

id objc_msgSend_qvdJFx0260C4oDQI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "qvdJFx0260C4oDQI");
}

id objc_msgSend_r2wriXQ3o6jv840j_gXKoR0dNwQUyaeOl_lEWFPyiFIAJ2uoyd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "r2wriXQ3o6jv840j:gXKoR0dNwQUyaeOl:lEWFPyiFIAJ2uoyd:");
}

id objc_msgSend_rEI50SHLlVc37Bvu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rEI50SHLlVc37Bvu");
}

id objc_msgSend_rKKialn8e4bTPAC9_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rKKialn8e4bTPAC9:error:");
}

id objc_msgSend_rUC18JCl8oMcmXim(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rUC18JCl8oMcmXim");
}

id objc_msgSend_ratchetState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ratchetState");
}

id objc_msgSend_ravioli(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ravioli");
}

id objc_msgSend_ravioliUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ravioliUUID");
}

id objc_msgSend_rawValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rawValue");
}

id objc_msgSend_readDataUpToLength_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readDataUpToLength:error:");
}

id objc_msgSend_recentCallsWithPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentCallsWithPredicate:");
}

id objc_msgSend_recipientAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientAddresses");
}

id objc_msgSend_recipientEmailAddresses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientEmailAddresses");
}

id objc_msgSend_refreshTTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshTTL");
}

id objc_msgSend_registerEventListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerEventListener:");
}

id objc_msgSend_registerICloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerICloud");
}

id objc_msgSend_registerObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObservers");
}

id objc_msgSend_registerWithActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerWithActivity:");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relativePath");
}

id objc_msgSend_releaseData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseData");
}

id objc_msgSend_remoteParticipantHandles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantHandles");
}

id objc_msgSend_removeAllBindings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllBindings");
}

id objc_msgSend_removeAllGeocodings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllGeocodings");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeRavioli(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRavioli");
}

id objc_msgSend_removeStoreWithURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeStoreWithURL:error:");
}

id objc_msgSend_requestLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestLocation");
}

id objc_msgSend_requestRavioliFetchWithProbabiliticThrottleWithBagID_notificationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestRavioliFetchWithProbabiliticThrottleWithBagID:notificationId:");
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "result");
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "results");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resume");
}

id objc_msgSend_resumePrecomputationsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumePrecomputationsWithCompletionHandler:");
}

id objc_msgSend_retrieveLegacyRavioliWithCoreDataManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveLegacyRavioliWithCoreDataManager:");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseObjectEnumerator");
}

id objc_msgSend_rk4Hn364TkSyMq2q_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rk4Hn364TkSyMq2q:version:");
}

id objc_msgSend_rsNB9HkZVEH0l6fT_gsx0MJUoOpcxcozG_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rsNB9HkZVEH0l6fT:gsx0MJUoOpcxcozG:");
}

id objc_msgSend_runUntilDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runUntilDate:");
}

id objc_msgSend_runWithQuery_inputColNames_inputColTypes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runWithQuery:inputColNames:inputColTypes:error:");
}

id objc_msgSend_sFFfMcUAtN14Bjc5(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sFFfMcUAtN14Bjc5");
}

id objc_msgSend_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save:");
}

id objc_msgSend_scanLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanLongLong:");
}

id objc_msgSend_scannerWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scannerWithString:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheme");
}

id objc_msgSend_sensitiveLoggingEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sensitiveLoggingEnabled");
}

id objc_msgSend_serialNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serialNumber");
}

id objc_msgSend_serverVerifiableEncoding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverVerifiableEncoding");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddress:");
}

id objc_msgSend_setAddressForLookup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddressForLookup:");
}

id objc_msgSend_setAllowsExpensiveAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsExpensiveAccess:");
}

id objc_msgSend_setAssessment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssessment:");
}

id objc_msgSend_setAssessmentGUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssessmentGUID:");
}

id objc_msgSend_setAssessmentGUIDSeeds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssessmentGUIDSeeds:");
}

id objc_msgSend_setBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBag:");
}

id objc_msgSend_setBindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBindings:");
}

id objc_msgSend_setBindingsToCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBindingsToCompare:");
}

id objc_msgSend_setChunkSizeForFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChunkSizeForFetch:");
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionHandler:");
}

id objc_msgSend_setCreatedAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCreatedAt:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDesiredAccuracy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredAccuracy:");
}

id objc_msgSend_setDfMaxAge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDfMaxAge:");
}

id objc_msgSend_setDfVal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDfVal:");
}

id objc_msgSend_setDf_ttl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDf_ttl:");
}

id objc_msgSend_setDigestIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDigestIndex:");
}

id objc_msgSend_setDiscretionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscretionary:");
}

id objc_msgSend_setDistanceFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceFilter:");
}

id objc_msgSend_setDoNotBlockBeforeFirstUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoNotBlockBeforeFirstUnlock:");
}

id objc_msgSend_setEmail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmail:");
}

id objc_msgSend_setEncryptedAGUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEncryptedAGUID:");
}

id objc_msgSend_setEncryptedTSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEncryptedTSID:");
}

id objc_msgSend_setEndpointID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpointID:");
}

id objc_msgSend_setEndpointIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpointIdentifier:");
}

id objc_msgSend_setEngineType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEngineType:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExpressionDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpressionDictionary:");
}

id objc_msgSend_setFetchAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchAttributes:");
}

id objc_msgSend_setFetchLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchLimit:");
}

id objc_msgSend_setFetchOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchOffset:");
}

id objc_msgSend_setFetchPropertySets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchPropertySets:");
}

id objc_msgSend_setFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFields:");
}

id objc_msgSend_setFirstName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstName:");
}

id objc_msgSend_setFoundItemsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFoundItemsHandler:");
}

id objc_msgSend_setFullName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullName:");
}

id objc_msgSend_setGgQex4P6Prvm5Zac_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGgQex4P6Prvm5Zac:");
}

id objc_msgSend_setGyF0atX3JpCKc9pK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGyF0atX3JpCKc9pK:");
}

id objc_msgSend_setId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setId:");
}

id objc_msgSend_setIncludeUserActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludeUserActivities:");
}

id objc_msgSend_setInternalPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInternalPredicate:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setJmiV9VW8P3Gxz1H7_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setJmiV9VW8P3Gxz1H7:");
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKey:");
}

id objc_msgSend_setKp3LsdVLlXwFNqJV_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKp3LsdVLlXwFNqJV:");
}

id objc_msgSend_setLastAccessed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastAccessed:");
}

id objc_msgSend_setLastName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastName:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setMacVal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMacVal:");
}

id objc_msgSend_setMaxCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxCount:");
}

id objc_msgSend_setMergePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMergePolicy:");
}

id objc_msgSend_setN8Azi3NI6QrNPsLP_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setN8Azi3NI6QrNPsLP:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:atIndexedSubscript:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOption_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOption:forKey:");
}

id objc_msgSend_setOtdDestinationHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtdDestinationHost:");
}

id objc_msgSend_setPEmail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPEmail:");
}

id objc_msgSend_setPPhone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPPhone:");
}

id objc_msgSend_setPersistentStoreDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreDescriptions:");
}

id objc_msgSend_setPhone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhone:");
}

id objc_msgSend_setPhotoLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhotoLibrary:");
}

id objc_msgSend_setPpszCwt7GD641hHj_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPpszCwt7GD641hHj:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPresentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentTime:");
}

id objc_msgSend_setProfID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProfID:");
}

id objc_msgSend_setProfileID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProfileID:");
}

id objc_msgSend_setPropertiesToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesToFetch:");
}

id objc_msgSend_setPropertiesToGroupBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesToGroupBy:");
}

id objc_msgSend_setProtectionClasses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtectionClasses:");
}

id objc_msgSend_setQfSDGTGvqd3Hruzg_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQfSDGTGvqd3Hruzg:");
}

id objc_msgSend_setQueryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryKey:");
}

id objc_msgSend_setRUC18JCl8oMcmXim_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRUC18JCl8oMcmXim:");
}

id objc_msgSend_setRefreshTTL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRefreshTTL:");
}

id objc_msgSend_setRequiresPowerPluggedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresPowerPluggedIn:");
}

id objc_msgSend_setResultType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultType:");
}

id objc_msgSend_setReturnsObjectsAsFaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnsObjectsAsFaults:");
}

id objc_msgSend_setSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSet:");
}

id objc_msgSend_setSettingsType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingsType:");
}

id objc_msgSend_setShouldSendOTD_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSendOTD:");
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortDescriptors:");
}

id objc_msgSend_setTrainingData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrainingData:");
}

id objc_msgSend_setTrainingGUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrainingGUID:");
}

id objc_msgSend_setTrainingGUIDSeeds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrainingGUIDSeeds:");
}

id objc_msgSend_setTrainingSignalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrainingSignalID:");
}

id objc_msgSend_setUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdated:");
}

id objc_msgSend_setUpdatedAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdatedAt:");
}

id objc_msgSend_setVCWRguBEmim3giZ9_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVCWRguBEmim3giZ9:");
}

id objc_msgSend_setVal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVal:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVersion:");
}

id objc_msgSend_setWgZJLy8f4tn41Pge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWgZJLy8f4tn41Pge:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setWorkflowID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkflowID:");
}

id objc_msgSend_setXc4PEFTuh2u6xE7M_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXc4PEFTuh2u6xE7M:");
}

id objc_msgSend_setYABQBiEYyLNkt6IY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setYABQBiEYyLNkt6IY:");
}

id objc_msgSend_setYOtBxuHAYKqZrNQN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setYOtBxuHAYKqZrNQN:");
}

id objc_msgSend_setZDlKxUFITTJsP8iN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZDlKxUFITTJsP8iN:");
}

id objc_msgSend_setZKQesNL3BCNYUjZw_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZKQesNL3BCNYUjZw:");
}

id objc_msgSend_settingsType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsType");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shared");
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedAVSystemController");
}

id objc_msgSend_sharedHardwareManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedHardwareManager");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedPhotoLibrary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPhotoLibrary");
}

id objc_msgSend_shouldSendOTD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSendOTD");
}

id objc_msgSend_sinkWithCompletion_shouldContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sinkWithCompletion:shouldContinue:");
}

id objc_msgSend_skipDescendants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "skipDescendants");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingDescriptors:");
}

id objc_msgSend_sourceInformation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceInformation");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "start");
}

id objc_msgSend_startCatalogDownload_options_then_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCatalogDownload:options:then:");
}

id objc_msgSend_startSecureElementManagerSessionWithPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSecureElementManagerSessionWithPriority:");
}

id objc_msgSend_startUpdatingLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUpdatingLocation");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "status");
}

id objc_msgSend_stopUpdatingLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopUpdatingLocation");
}

id objc_msgSend_storeNameWithExtensionForStoreWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeNameWithExtensionForStoreWithName:");
}

id objc_msgSend_streamWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamWithIdentifier:error:");
}

id objc_msgSend_street(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "street");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string");
}

id objc_msgSend_string_orDefault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string:orDefault:");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByReplacingMatchesInString_options_range_withTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingMatchesInString:options:range:withTemplate:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCapacity:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_subAdministrativeArea(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subAdministrativeArea");
}

id objc_msgSend_subLocality(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subLocality");
}

id objc_msgSend_subdataWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subdataWithRange:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_takeDataAndOwnership(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeDataAndOwnership");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestamp");
}

id objc_msgSend_toDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toDictionary");
}

id objc_msgSend_trainingData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trainingData");
}

id objc_msgSend_trainingGUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trainingGUID");
}

id objc_msgSend_trainingGUIDSeeds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trainingGUIDSeeds");
}

id objc_msgSend_trainingSignalID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trainingSignalID");
}

id objc_msgSend_triggerAllPrecomputationsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerAllPrecomputationsWithCompletionHandler:");
}

id objc_msgSend_triggerDuePrecomputationsWithDataProtectionClass_shouldDefer_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerDuePrecomputationsWithDataProtectionClass:shouldDefer:completionHandler:");
}

id objc_msgSend_triggerImmediateRavioliFetchWithBagID_notificationId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerImmediateRavioliFetchWithBagID:notificationId:completion:");
}

id objc_msgSend_triggerPrecomputationWithWorkflowID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerPrecomputationWithWorkflowID:completionHandler:");
}

id objc_msgSend_triggerPregenerationWithWorkflowID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerPregenerationWithWorkflowID:completionHandler:");
}

id objc_msgSend_tuV7J33gT8DSDOWz_forDFVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tuV7J33gT8DSDOWz:forDFVersion:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlock");
}

id objc_msgSend_unregister(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregister");
}

id objc_msgSend_unregisterEventListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterEventListener:");
}

id objc_msgSend_updateGeoCodeForAddresses_locations_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateGeoCodeForAddresses:locations:error:");
}

id objc_msgSend_updated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updated");
}

id objc_msgSend_updatedAt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedAt");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_vG2DGmxZUkQniiFzWithTTLDict_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vG2DGmxZUkQniiFzWithTTLDict:completion:");
}

id objc_msgSend_vHfMflesdqOxRXL4_vFD5FwBT4ySYsElE_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vHfMflesdqOxRXL4:vFD5FwBT4ySYsElE:error:");
}

id objc_msgSend_val(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "val");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "version");
}

id objc_msgSend_vffg4lwI2HftPvpO_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vffg4lwI2HftPvpO:");
}

id objc_msgSend_voicePreferred(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voicePreferred");
}

id objc_msgSend_wQx5zziHtNxqlbwU_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wQx5zziHtNxqlbwU:");
}

id objc_msgSend_waitForNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForNotification");
}

id objc_msgSend_wgZJLy8f4tn41Pge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wgZJLy8f4tn41Pge");
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceCharacterSet");
}

id objc_msgSend_workflowID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workflowID");
}

id objc_msgSend_wrongXPCParameterError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrongXPCParameterError");
}

id objc_msgSend_x7PkBasAKbApbiZS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "x7PkBasAKbApbiZS:");
}

id objc_msgSend_xc4PEFTuh2u6xE7M(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xc4PEFTuh2u6xE7M");
}

id objc_msgSend_xkNh5bfoCwq3gGYr_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xkNh5bfoCwq3gGYr:");
}

id objc_msgSend_xpc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpc");
}

id objc_msgSend_y5rP3YRqGjztRrd0_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "y5rP3YRqGjztRrd0:");
}

id objc_msgSend_y6doGzfhnVRCi9Iy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "y6doGzfhnVRCi9Iy");
}

id objc_msgSend_y8DihfZYjxGbiiEE_QsX3tfdMvsGwvY0F_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "y8DihfZYjxGbiiEE:QsX3tfdMvsGwvY0F:withCompletion:");
}

id objc_msgSend_yOtBxuHAYKqZrNQN(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yOtBxuHAYKqZrNQN");
}

id objc_msgSend_yVPDC4E5nNW5DSMa_UtPlzRffoEpw7Ue1_SFkZRA5Ek9YzhDRs_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yVPDC4E5nNW5DSMa:UtPlzRffoEpw7Ue1:SFkZRA5Ek9YzhDRs:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_ygKhjfpV8v6SMJkN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ygKhjfpV8v6SMJkN:");
}

id objc_msgSend_yv5QRLoFvJ66jYJS_xNtFS0jGMQPgkTi7_i4KDOQicW9Xd5WBz_TWWnmIjkBlMfHmma_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yv5QRLoFvJ66jYJS:xNtFS0jGMQPgkTi7:i4KDOQicW9Xd5WBz:TWWnmIjkBlMfHmma:");
}

id objc_msgSend_zGi22DPZsVGfawap_xz5EHXEN4FjlhJbi_uhVTXyAfCFn7u0Ue_EQUjQp7JcQbqcPcD_A5wDLa5TFdFZlz3A_TJKMyOe6zn5PdGIr_eCqgGM0WcnHOslnr_eCszfxdv3kUXvhgV_uWp4aZpP2vLhc04Q_QZYtNpvp0hKd248p_oCwPYmtRv8s31KUH_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zGi22DPZsVGfawap:xz5EHXEN4FjlhJbi:uhVTXyAfCFn7u0Ue:EQUjQp7JcQbqcPcD:A5wDLa5TFdFZlz3A:TJKMyOe6zn5PdGIr:eCqgGM0WcnHOslnr:eCszfxdv3kUXvhgV:uWp4aZpP2vLhc04Q:QZYtNpvp0hKd248p:oCwPYmtRv8s31KUH:completion:");
}

id objc_msgSend_zKQesNL3BCNYUjZw(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zKQesNL3BCNYUjZw");
}

id objc_msgSend_zdkFgT82CObMtwJn_D2AyhLGEbXMCneo6_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zdkFgT82CObMtwJn:D2AyhLGEbXMCneo6:");
}

id objc_msgSend_zjSRqCgYhfa1wFgr_gqhuZKS8Xs6ugnFL_wRPFKB7h3xbveJFz_x1IqrF8Flbgd3Jhk_UtPlzRffoEpw7Ue1_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zjSRqCgYhfa1wFgr:gqhuZKS8Xs6ugnFL:wRPFKB7h3xbveJFz:x1IqrF8Flbgd3Jhk:UtPlzRffoEpw7Ue1:");
}

id objc_msgSend_zjSRqCgYhfa1wFgr_nN3snF4sAp0Cxy6t_wRPFKB7h3xbveJFz_tNXuX79TcZPxzyjn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zjSRqCgYhfa1wFgr:nN3snF4sAp0Cxy6t:wRPFKB7h3xbveJFz:tNXuX79TcZPxzyjn:");
}

